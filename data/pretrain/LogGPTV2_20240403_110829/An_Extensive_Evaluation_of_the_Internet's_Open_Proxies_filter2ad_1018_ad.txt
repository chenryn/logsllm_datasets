### Table 6: Malicious Content Flagged by Antivirus Systems

| Number of Antivirus Systems | Number of Files | Percentage |
|-----------------------------|-----------------|------------|
| 3                           | 587             | 1.99%      |
| 4                           | 1,274           | 4.32%      |
| 5                           | 1,508           | 5.11%      |
| 6                           | 4,232           | 14.35%     |
| 18                          | 1,513           | 5.13%      |
| 19,802                      | (67.16%)        |            |
| 23                          | (0.08%)         | (1.85%)    |

**Table 6** shows the number and percentage of unexpected content files flagged as malicious by varying numbers of antivirus systems used by VirusTotal. For example, 545 files were flagged as malicious by 18 different antivirus systems.

### 7.1 Detailed Findings

In this section, we provide a detailed breakdown of our findings on malicious proxy activity, organized by file type.

#### Windows Executables (.exe)

Almost all (98.5%) of the unexpected .exe files are classified as malicious. Specifically, 1.93% (413/21,385) of the proxies modified .exe files at least once during our measurement period. The infections include malware from the Expiro family, which can steal personal information and provide remote access to attackers [1], as well as variants of the Crypt and Artemis trojan families [2, 13]. The top 10 reported infections for .exe files are listed in Table 9 in Appendix C.

#### Flash and .jar Files

VirusTotal did not flag any of the modified Flash or Java .jar files as malicious. This could indicate either benign (but unexplained) instances where proxies rewrite these files or a limitation in the scanners used by VirusTotal.

#### ZIP Files

Only a single antivirus system (McAfee-GW-Edition, v2017.2786) flagged 0.28% (14/4,562) of the unexpected ZIP file responses as malicious. VirusTotal did not provide details about the specific infections.

#### HTML Files

We received HTML responses from proxies regardless of the requested content type. Approximately 0.2% (44/21,385) of the proxies returned unexpected content at least once, with 43 of them returning malicious content. Almost 97% (2,472/2,551) of these HTML responses were labeled as malicious. Upon further examination, all 2,472 malicious responses contained the same Monero cryptocurrency mining JavaScript, as shown in Figure 9. The reported infections and the number of HTML responses with malicious code are detailed in Table 10 in Appendix C.

#### ISO Files

Surprisingly, on 545 occasions, we received ISO files when requesting a 1MiB text file. All 545 ISO responses were exactly 1MiB in size and flagged as malicious by VirusTotal. Table 11 in Appendix C lists the various infections reported. Notably, all 545 files were infected with the Vittalia Trojan, a rootkit for Windows. The content of 520 of the 545 ISO images was identical, while the remaining 25 responses were also identical to one another. Although the ISO files were clearly malicious, only 0.04% (9/21,385) of the proxies returned a malicious ISO response at least once.

#### Shell Scripts

We fetched shell scripts to determine if malicious proxies would modify or replace them in transit. We found that 22.75% (211,288/928,431) of the requests for shell scripts resulted in responses with unexpected content. To focus on malicious activity, we discarded responses whose MIME-type was not "text/x-shellscript"; we found 1,020 instances of unexpected but valid shell script responses. Oddly, all 1,020 instances corresponded to just four unique responses, summarized in Table 12 in Appendix C. These modifications appear non-malicious and are likely due to misconfiguration. Overall, we did not find any evidence of malicious shell script manipulation during our measurements.

### 7.2 Network Diversity and Consistency of Malicious Proxies

For the responses deemed malicious, we also examined the distribution of responsible proxies. Table 7 shows the top five Autonomous Systems (ASes) with the most number of proxies performing malicious manipulations.

| AS Number | AS Name | Number of Malicious Proxies |
|-----------|---------|-----------------------------|
| 31        | Jin-rong Street | 72                       |
| 45        | DigitalOcean, LLC | 45                     |
| 25        | China Mobile Communications Corporation | 25 |
| 14        | CHINA UNICOM China169 Backbone | 14       |
| 9         | PT Telekomunikasi Indonesia | 9          |

We also analyzed the daily behavior of the top three malicious proxies over the duration of our measurement. The most malicious proxy returned malicious content 100% of the time. The second and third most malicious proxies returned malicious responses 97.7% and 87.9% of the time, respectively, when they were reachable. Figure 11 plots (in log-scale) the cumulative distribution of the number of times that malicious proxies exhibit misbehavior. Half of the proxies that return malicious content do so at least twice, and more than 25% return at least 10 malicious files. The top 10% of malicious proxies return 56 or more malicious files.

Surprisingly, none of the 469 discovered proxies that return malicious content (§7.1) are listed on the service run by Tsirantonakis et al. [46] that reports misbehaving proxies. This suggests that correctly identifying misbehaving proxies is very challenging, as proxy misbehavior may be transient and take different forms.

### 8 SSL/TLS Analysis

We found that 70% (14,607/20,893) of the proxies that fetch expected content at least once allow TLS traffic to pass through them. Supporting HTTPS incurs no overhead for the proxy, as it is merely transporting the ciphertext. As of early June 2018, more than 70% of loaded web pages were retrieved using HTTPS [35]. The lack of universal HTTPS support among open proxies forces some users to downgrade their security, contrary to the trend towards a more secure web.

#### SSL/TLS Stripping

We first examined whether any proxies rewrite HTML `<link>` tags to downgrade the transport from HTTPS to HTTP. For example, a malicious proxy could replace all links to `https://example.com` with `http://example.com` on all webpages retrieved over HTTP. We did not find evidence of proxies stripping SSL by replacing the included links.

#### SSL Certificate Manipulation

We tested the proxies against two categories of domains: one with a valid and verifiable SSL certificate hosted on a web server at Georgetown University, and domains with incorrect or invalid SSL certificates (`https://revoked.badssl.com`, `https://self-signed.badssl.com/`). We included the latter category because a smart attacker might perform SSL MitM only in cases where the connection would otherwise use revoked or self-signed certificates, causing browser warnings even without proxy manipulation.

To detect SSL/TLS certificate manipulation, we fetched the three domains via the open proxies each day between 2018-04-12 and 2018-05-31. Overall, 1.06% (102/9,625) of proxies that support HTTPS performed TLS/SSL MitM by inserting a modified certificate. We searched the SSL Fingerprint Blacklist and Dyre SSL Fingerprint Blacklist [12] for the modified certificates' fingerprints but did not find any blacklisted certificates.

Next, we considered proxies that fetch the expected content but modify the SSL/TLS certificate, suggesting eavesdropping on HTTPS connections. The percentage of such eavesdropping proxies, per day, for the different categories of certificates, is plotted in Figure 12. Overall, 0.85% (82/9,607) of the proxies that return expected responses appeared to be eavesdropping. We did not find any evidence of proxies selectively targeting incorrect or invalid SSL certificates.

Finally, we analyzed the modified TLS certificates inserted by the eavesdropping proxies when the genuine certificate was revoked or self-signed. We found 435 modified certificates from 21 unique issuers. The issuer common name (CN) strongly suggested that 19% (4/21) of the issuers were schools. We posit that these proxies were operated by schools and incorrectly configured to serve requests from any network location. Interestingly, all of the certificates inserted by these school proxies had the expected subject common name and were valid (but not normally verifiable, as the school is not a root CA). This leads to an interesting result: if the schools pre-installed root CA certificates on students' or employees' computers, they significantly degrade the security of their users by masking the fact that requested webpages have expired or revoked certificates.

Performing TLS MitM also allows a malicious proxy to modify page content. Using the same approach as described in §6, we analyzed HTML pages fetched over TLS via the open proxies but did not find any malicious activity.

### 9 Comparison with Tor

Tor [23] provides anonymous TCP communication by routing user traffic through multiple relays (typically three) using layered encryption. The first relay in the path is the guard relay, and the final relay through which traffic exits is the exit relay. The original data transmitted is visible only at the exit relays. Therefore, unless end-to-end encryption is used, data can be eavesdropped by malicious or compromised exits. Prior research studies have found evidence of malicious behavior by a small fraction of Tor exit relays, especially when the traffic was not end-to-end encrypted [20, 37, 54].

We modified Exitmap [54], a fast scanner that fetches files through all Tor exit relays, to maintain consistency with our earlier experiments. We fetched the same set of files (e.g., HTML, .exe, etc.) as described in §6 and §7 over HTTP and accessed the same HTTPS URLs as described in §8. We fetched these files each day through every available Tor exit relay between 2018-05-06 and 2018-05-31, during which the median number of available exit relays was 722. Approximately 13.8% of connections and 1.8% of fetches timed out when using Exitmap, which is unsurprising since Exitmap does not perform the same bandwidth-weighted relay selection as the standard Tor client [23, 54].

Over our 26-day Tor experiment, we found no instance in which a Tor exit relay manipulated either file contents or SSL/TLS certificates. Comparing our results to §6-8, this strongly suggests that Tor is a more trustworthy network for retrieving forwarded content. However, since Tor exits may still passively eavesdrop (which we would not detect), we concur with the conventional wisdom that end-to-end encryption (i.e., HTTPS) is appropriate when using Tor.

We also compared the performance of Tor to that of the open proxies. We computed the open proxies' throughput as described in §5.1. For Tor, we relied on data from the Tor Metrics Portal [45]; specifically, we used the median time taken per day to download a static file of size 1 MiB and derived Tor's median throughput between 2018-05-06 and 2018-05-31. Figure 13 shows the Tor and open proxies' median throughput per day. We found that the Tor median throughput is roughly twice the open proxy throughput, suggesting that Tor performs relatively faster than the open proxies.

### 10 Ethical Considerations

We designed and conducted our measurements to minimize risk. Our study's design and implementation meet the criteria described in the Menlo Report [24], an ethical framework for conducting network measurements widely adopted by the networking and computer security communities.

The Menlo Report describes four principles of ethical research:

1. **Respect for Persons**: We avoided collecting data belonging to individual users. In our experiments, we used open proxies as intended, issuing standard well-formed proxy requests and requesting only benign (non-malicious) traffic from non-controversial websites. We recorded only our own traffic and did not monitor or capture the behavior of other proxy users. We did not attempt to discover non-publicly listed proxies by scanning the Internet, focusing exclusively on proxies already publicly listed.

2. **Beneficence**: We minimized potential harms while providing societal benefits (i.e., exposing the dangers of using open proxies). Unlike other studies that explicitly probe for instances of Internet censorship by requesting potentially objectionable content [18, 19, 48, 53], our measurements avoid exposing proxy operators to risk (e.g., government sanction) by retrieving only URLs that are very unlikely to be censored. Our measurements also did not consume significant resources; we requested a small handful of URLs from each proxy, with the average content size being just 177 KiB.

3. **Justice**: We distributed our measurements equally across all identified open proxies.

4. **Respect for Law and Public Interest**: We conducted only legal queries (i.e., we did not request any content that is likely to be illegal or censored) and were transparent in our methods (see §4).

### 11 Conclusion

Open proxies provide a free and simple way to bypass regional content filters and achieve a limited degree of anonymity. However, the absence of any security guarantees for traffic passing through these proxies makes their use highly risky. Users may unintentionally expose their traffic to malicious manipulations, especially when no end-to-end security mechanisms (e.g., TLS) are present.

Our study of the Internet's open proxies—the largest conducted to date—discloses and quantifies new forms of misbehavior, reinforcing the notion that open proxies should be used with extreme caution. We found numerous instances of misbehavior, including the insertion of spurious ads and cryptocurrency-mining JavaScript, TLS MitM, and the injection of RATs and other forms of malware. Moreover, we found that 92% of advertised proxies listed on open proxy aggregator sites are nonfunctional. In contrast, our nearly month-long study of the Tor network found zero instances of misbehavior.