title:Expressive privacy control with pseudonyms
author:Seungyeop Han and
Vincent Liu and
Qifan Pu and
Simon Peter and
Thomas E. Anderson and
Arvind Krishnamurthy and
David Wetherall
Expressive Privacy Control with Pseudonyms
Seungyeop Han, Vincent Liu, Qifan Pu, Simon Peter
Thomas Anderson, Arvind Krishnamurthy, David Wetherall
University of Washington
{syhan, vincent, qp, simpeter, tom, arvind, djw}@cs.washington.edu
ABSTRACT
As personal information increases in value, the incentives for re-
mote services to collect as much of it as possible increase as well.
In the current Internet, the default assumption is that all behavior
can be correlated using a variety of identifying information, not the
least of which is a user’s IP address. Tools like Tor, Privoxy, and
even NATs, are located at the opposite end of the spectrum and
prevent any behavior from being linked. Instead, our goal is to pro-
vide users with more control over linkability—which activites of
the user can be correlated at the remote services—not necessarily
more anonymity.
We design a cross-layer architecture that provides users with a
pseudonym abstraction. To the user, a pseudonym represents a set
of activities that the user is ﬁne with linking, and to the outside
world, a pseudonym gives the illusion of a single machine. We pro-
vide this abstraction by associating each pseudonym with a unique,
random address drawn from the IPv6 address space, which is large
enough to provide each device with multiple globally-routable ad-
dresses. We have implemented and evaluated a prototype that is
able to provide unlinkable pseudonyms within the Chrome web
browser in order to demonstrate the feasibility, efﬁcacy, and ex-
pressiveness of our approach.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—Security
and protection; C.2.6 [Computer-Communication Networks]: In-
ternetworking
Keywords
Privacy; IPv6; Pseudonym; Web tracking
1.
INTRODUCTION
Technology trends and economic forces are moving us toward
a world in which personal information is valuable, and companies
have an incentive to obtain as much of it as possible. Targeted ad-
vertising, for example, has revolutionized revenue generation, but
while this is good for companies, the implications for user privacy
are less positive.
Permission to make digital or hard copies of part or all of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. Copyrights for third-
party components of this work must be honored. For all other uses, contact
the Owner/Author.
Copyright is held by the owner/author(s).
SIGCOMM’13, August 12–16, 2013, Hong Kong, China.
ACM 978-1-4503-2056-6/13/08.
Tracking has evolved from individual websites keeping tabs on
their users. Today’s third-party trackers are ubiquitous enough to
capture a signiﬁcant fraction of users’ web browsing behavior, and
they are continuously moving towards wider deployment and even
collusion with other services. Google is an extreme example of
what is possible, as they theoretically have access to a user’s com-
plete logs of email, web history, phone calls, contacts, location in-
formation, and much more in addition to being an advertiser. There
is no evidence that Google is currently aggregating information on
that scale, but the capability exists.
We are not trying to argue that linking of user activities is always
bad. In fact, it can be a useful tool that beneﬁts both the user and the
web service—banks deter fraud by detecting when a new computer
is used to access an account, advertisers support useful services by
providing relevant ads/product suggestions, and analytics platforms
help websites understand and design for user behavior. However,
the line between gathering appropriate information and violating
privacy is currently undeﬁned. Our position is that where to draw
the line should be up to the user.
While existing defense mechanisms like cookie management sys-
tems and other browser tools are able to control tracking to a certain
extent, they generally do not handle implicit information like IP ad-
dresses. Tracking using IP addresses is just as accurate as cookies,
and in today’s network, unblockable. Lower-level solutions like
Tor [6], proxies, or NATs can make IP addresses less meaningful
to trackers, but they are coarse-grained, lack ﬂexibility, and in the
case of Tor, can hurt performance.
Our goal is instead to provide users with more control over what
is linkable and what is not. We do this by co-designing modiﬁca-
tions across all relevant software layers in order to protect users’
privacy. Central to our design is the concept of a pseudonym,
which represents a set of user actions and provides an unlinkable
abstraction of a single machine.
In particular for the network layer, we leverage the size of the
IPv6 address space. Unlike today’s world, where IP addresses are
limited and thus, every activity of every user on a machine (or ev-
ery machine behind a NAT) is lumped into the same abstraction
of a single machine, IPv6 addresses are able to provide a different
grouping. The larger address space of IPv6 can potentially allow
every activity of every user to have a different address (in fact, there
are more than half a million addresses per square nanometer of the
Earth’s surface).
However, it is not enough to give each user a pile of IPv6 ad-
dresses if the entire pile can be traced back to the user. Pseudonyms
also need to encompass more than just an IP address as activities
can be linked using traditional application- and system-level infor-
mation. For example, in the case of browsers, potential sources of
linkability can be found in cookies, HTML5 LocalStorage, Flash
291LSOs, and implicit information like user-agent and system fonts [27].
Our system ensures that all of these elements are consistent within
a pseudonym, and privacy-preserving across pseudonyms.
Contributions:
In this paper, we introduce a psuedonym abstraction that gives
users control over linkability across layers. To the best of our
knowledge, this system is the ﬁrst to provide integrated cross-layer
control over privacy and present it as a ﬁrst-class abstraction. To
this end, we develop a system that allows for each machine to have
numerous pseudonyms and design a complementary network layer
that can handle a large number of seemingly random, ﬂat addresses
with no path dilation, no increase in routing table size, and negli-
gible performance decrease, all while maintaining network trans-
parency. We also delve into a case study of browsers, where we
explore issues related to the isolation of pseudonym information,
and policies aggregating activities into pseudonyms. Our simple
policy system allows us to implement a variety of protection mech-
anisms, each of which has different functionality-privacy tradeoffs.
Finally, we have implemented a Chrome extension and cloud gate-
way service that approximates a pseudonymous browser in today’s
Internet (i.e., an IPv4 Internet without network/OS support). Our
prototype is publicly available at
http://netlab.cs.washington.edu/project/pseudonymous.
2. MOTIVATION
Advertisers and web services have strong incentives to track the
behavior of users on the Internet—often without user consent, con-
trol, or knowledge. A recent study conducted by Roesner et al. [23]
shows the prevalence of third-party trackers across both popular
and randomly sampled domains.
Tracking can sometimes be beneﬁcial to all parties involved, by
providing customization and security along with a revenue model
for many web services. On the other hand, tracking can just as
easily be abused. For example, they might correlate the collected
traces to other sources of users’ personal information, such as gen-
der, zip code, name, or sensitive search terms [13] to obtain detailed
proﬁles. These proﬁles can then be used to perform price discrim-
ination [17] or be used by advertisers to display behavior-based or
proﬁle-based ads, which sometimes reﬂect sensitive interests (e.g.,
medical issues or sexual orientation) [26].
In this section, we ﬁrst outline the techniques employed by ser-
vices to track users and show tracker prevalence on the web. Then
we discuss why existing solutions such as NATs and anonymizing
proxies are not sufﬁcient to support the broad range of policies that
a user might desire.
2.1 Tracking Methods
The tracking mechanisms available to webservices/advertisers
are numerous and span the entire network/application stack. These
mechanisms are often out of the control of the user, or otherwise
difﬁcult and inconvenient to spoof. They include:
• IP address: IP addresses let adversaries correlate user activity
without requiring additional application-level information. Even
when the IP address changes, as long as other information per-
sists across the change, the new IP address can be linked to the
user. It is relatively easy for services to link activities generated
by the same IP.
• Application information: Often, the application itself will leak
information. Web browsers, for example, have cookies, Flash
LSOs, and HTML5 LocalStorage that can be used to track the
behavior of users.
Figure 1: Prevalence of encounters with the top 20 third-party
trackers within a total number of 406 distinct domains visited
over all traces. Each line represents a separate user’s trace.
• DNS: The address of the server accessed by the user can re-
veal information as well. CDNs, for example, may use DNS to
distribute requests, and if these entries are reused, subsequent
accesses can be linked to the original.
• System information: These include time zone, screen size, sys-
tem fonts, etc. They can be mined through applications. These
values are often important for proper functionality, but studies
have shown that the set of values is often unique across different
users [7].
2.2 Tracker Prevalence
As reported in previous studies, third-party trackers are preva-
lent on the web. We conducted small-scale measurements by using
web usage traces of authors and collaborators to see how often we
encountered third-party trackers while webbrowsing. The dataset
covers three days of web traces from eight users. The traces were
generated via a Chrome web browser extension developed by the
authors that logs details of each HTTP request made by the browser.
Those details include information such as the URL accessed, the
HTTP header, an identiﬁer for the browser tab that made the re-
quest, a timestamp, and what caused the request (e.g., a recursive
request for some embedded object or a result of the user clicking a
link). Figure 1 shows the frequency of encounters with the top 20
third-party trackers within our traces1. The users visited 406 unique
domains during the trace collection. Out of the 406 domains, 281
(69.2%) domains contained at least one third-party tracker.
2.3 Current Defenses
Most web browsers expose cookie management policies to users
(e.g., blocking third-party cookies or only allowing session cook-
ies). Browser add-ons can add ﬁner-grained policies, but regardless
of the expressiveness or the ﬂexibility, these application-level solu-
tions do not handle lower-level information like IP addresses.
Network-layer solutions like Tor, proxies, and NATs attempt to
alleviate this problem, but none of these are ideal. The default pol-
icy on the Internet is that all of a user’s behavior can be tracked
regardless of what they do, and while these systems provide an al-
ternative policy, the one they enable lacks ﬂexibility: they make IP
1We used the list of trackers from [23].
google-analytics.comgoogle.comgoogleapis.comdoubleclick.netscorecardresearch.comfacebook.comquantserve.comtwitter.comamazonaws.comatdmt.comadnxs.comaddthis.comimrworldwide.combluekai.comyoutube.commediaplex.comserving-sys.comturn.comdisqus.comwordpress.com010203040506070Tracker Prevalence (%)292addresses meaningless. For example, a user might want to allow
Amazon to track searches/purchases in order to receive better rec-
ommendations, but at the same time may not want to allow trackers
like DoubleClick to correlate interactions across websites. In many
cases, there is a fundamental tradeoff between functionality and
privacy, and the above solutions do not provide users with control
over this tradeoff.
In addition to a lack of ﬂexibility, Tor sacriﬁces performance
because it is an overlay with an attack model that is stronger than
what is necessary for an anti-tracking system. Proxies, to a lesser
extent, also have performance issues because of path dilation and
bandwidth restrictions. NATs may not incur the same penalties,
but instead destroy network transparency and violate key tenets of
Internet design [5].
The other issue with proxies/NATs is that websites already use IP
addresses as hints to increase security2. In our system, we attempt
to allow applications to leverage IP addresses as a powerful tool for
accountability.
3. APPROACH
We allow users to manage a large (potentially unlimited) number
of unlinkable pseudonyms so that they can choose which pseudo-
nyms are observed by which remote servers. In this case, a pseudo-
nym refers to a set of identifying features that persist across an
activity—the deﬁnition of activity here is dependent on the user’s
policy.
3.1 Threat Model
The fundamental goal of our system is to prevent remote ser-
vices, with which a user interacts, from linking the user’s activities
except in ways that the user intends. The adversaries that work
against the user and our system are remote trackers that wish to
build a more complete proﬁle of that person and/or to perform ser-
vice discrimination. Their objective is to correlate any and all be-
havior of each user in an effort to link the user’s pseudonyms. To
do so, they may also collude with endhosts owned by users in our
system to ﬁnd out pseudonym mappings of other hosts in the sys-
tem.
For web browsing, adversaries may use any information revealed
in the packet including, but not limited to, cookies, local storage,
ﬁngerprinting, and unique URLs. They may also collude, span
multiple services and include other types of entities like CDNs and
DNS servers. Their ability to link two activities can be sometimes
be probabilistic, particularly in the case of browser ﬁngerprinting,
but as soon as an adversary sees sufﬁcient evidence that two activ-
ities are from the same user, they, and any associated activities, are
thereafter tainted.
Self-contained Banking Websites
Pervasive
Social Media Sites Analytics
Persistent ID
Transient ID
Blogs
Table 1: Examples of potential adversaries.
Within this framework, websites have varying levels of tracking
potential and requirements for functionality. On one axis, there are
some trackers that are pervasive and some that only track ﬁrst-party
accesses, and along this axis, services can have differing levels of
prevalence (e.g., Google Analytics has a presence on 297 of the
top 500 domains, while bluekai has presence on 27 [23]). On the
other axis, services require varying levels of persistent identifying
2http://bit.ly/VAj9cI
information to function. This sometimes depends on the expecta-
tions of the user in question, and can range from sites that require
login, to sites with recommendation systems, to sites that do not
utilize persistent identiﬁers for functionality and where each access
is essentially independent. (See Table 1 for examples of this cate-
gorization.)
Note that our model does not include intermediaries like routers
and ISPs, especially users need to trust their ﬁrst-hop ISPs. LAP [9]
assumes similar threat model for users who want to have interme-
diate privacy level without sacriﬁcing latencies.
In order to de-
fend against these types of attackers including the ﬁrst-hop ISPs,
we would need to launder packets through other machines, such as
in Tor [6] or Herbivore [8].
3.2 Pseudonyms
We take the approach that a pseudonym is, to the outside world,
the abstraction of a single machine and, to the user, simply a collec-
tion of activities that they wish to correlate. Tor, proxies, and NATs,
fail to provide this abstraction, and we lose not only the user’s con-
trol over what activities are correlated, but the ability to use IPs as
a single machine identiﬁer as they were intended to be. While one
might argue that this removal of IPs as a useful identiﬁer provides
more anonymity, what we are trying to provide is more control, and
more control is not synonymous with more anonymity.
In our approach, a single user may have multiple pseudonyms
and may appear to be multiple separate machines/users. This is
somewhat similar to Chrome’s notion of proﬁles except that linka-