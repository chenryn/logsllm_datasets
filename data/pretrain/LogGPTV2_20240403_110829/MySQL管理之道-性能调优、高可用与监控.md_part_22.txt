第5章性能调优·147
---
## Page 162
148
·第二部分故障诊断与性能优化篇
5.2.4小技巧：快速修改表结构
本节内容的问题发现者是我的同事吴炳锡，本人参与校验与测试。
俗话说计划赶不上变化，需求的变更是一天一个样。
YEAR(4)"
再来看一下在MySQL5.5中的情况，如图5-40所示。
参见手册：
mysql select *from y
mysql> insert into y values(12,2012)
mysql> dese y:
Query OK,0rows affected （0.04 sec)
1 row in set (0.00 sec)
2
rows in set (0.00 sec)
Field
12
mysql> select * from y,
row in set (0.03 sec)
20122012
y2
ysql> insert into y values（12.2012)
2012
Type
图5-40 year 类型查询结果
图5-39year类型查询结果
y4
Null
Key
Default
Extra
---
## Page 163
alter table modify，而是采用的如下步骤：
数据！
注意
造成影响，为了避免这一问题，本节将给大家介绍一个相关的小技巧。
7×24小时不间断服务的，就算是在低峰期更改表结构，也会引起用户无法写人，会对业务
ysql>systemcp/usr/local/mysql/data/book/tl_tmp.frm/usr/local/mysql/data/book/tl.frm
sql>flush tables withread lock;
这个技巧是没有列入手册里的，所以请大家在测试时先备份你的表，免得造成丢失
步骤二，替换.frm表结构文件，如图5-43所示。
步骤一，创建一张临时表，把varchar设置为10，如图5-42所示。
这时变更表结构，把 name varchar(5)改为varchar(10)，注意，这里没有用传统的方法
为了验证此方法，首先创建一张表t1，name字段设置为varchar（5），如图5-41所示。
测试一：修改varchar类型
我们知道更改一个字段，增加、删除一个字段都会造成锁表，可如今动不动就是需要
rows affected (0.02 sec)
mysql> select * from tl:
Query 0K, 0 rows affected (0.46 sec)
mysql> create table t1(
row in set (0.03 sec)
id
Query 0K, 0 rows affected (0.32 sec)
mysql>create table tl_tmp(
->rmb decima1(9,1)):
name
图5-42创建和原表相同的临时表
zhang
图5-43替换.frm表结构文件
id int,name varchar(10)，
--+-
图5-41表结构信息
-+-
rmb
3.8
第5章性能调优149
---
## Page 164
150·第二部分故障诊断与性能优化篇
注意
不过，你如果做了主从复制同步，这时 slave同步会报错，如图5-46所示。
可以看到，已经将name varchar(5)顺利地更改为了name varchar(10)。
再来看看表结构，如图5-45所示。
步骤三，插人数据测试，如图5-44所示。
这里一定要先锁定表，防止表被打开，以免数据丢失！
mysql> select * from tl:
Query 0K,1 row affected (0.11 sec)
mysql> unlock tables;
Query 0K,0 rows affected (0.02 sec)
rows in set (0.02 sec)
id
12
lumn1
No query specified
ERROR:
Create
mysql> show create table t1\G;
ENGINE=InnoDB DEFAULT CHARSET=utf8
rmb
name
name
hechunyang
zhang
图5-46主从复制同步报错信息
int(11) DEFAULT NULL,
图5-45验证表结构已经更改
Table:tl
ab
decima1(9, 1) DEFAULT NULL
Table:
varchar(10) DEFAULT NULL,
图5-44插人数据
CREATE TABLEt1
rmb
3.8
3.8
****MO
tvpe
VErC
cha（30)
---
## Page 165
错误即可，如图5-47所示。
Query
mysql> stop slave set global sql_slave_skip_counter=l;start slave
Query
mysql>
sql>
sql>
解决的方法跟上面的步骤一样，即在 slave上也重新执行一遍相关步骤，然后跳过这个
步骤一，创建一张临时表，把decimal设置为(9,2)，如图5-48所示。
看过了上面的varchar类型修改字段值，那么decimal类型是否也可以呢？往下看：
测试二：修改decimal浮点型
0K,0 rows affected (0.06 sec)
OK, 0 rows affected (0.02 sec)
flush tables;
system cp/usr/local/mysql/data/book/tl_tmp.frm/usr/local/mysql/data/book/tl.frm
show
slave status\G:
Slave_
mysql> show create table tl_tmp\G;
Create
mysql>alter table t1_tmp modify rmb decimal(9,2) DEFAULT NULL:
Query
Slave_I0_State:
Relay_Log_Pos:
Connect_Retry:
cmo
name
Master _Port:3
Master_User:
Master_Host:
OK,
dec1ma1（9.2)
varchar(10) DEFAULT NULL,
Do
DB
图5-47slave机器上操作步骤
mysql-bin.000002
vm02-relay-bin.000008
mysql-bin.000002
3306
192.168.8.22
253
9
repl
Waiting formaster to send even
Yes
1859
图5-48更改表结构信息
DEFAULT
（0.75sec)
第5章性能调优151
---
## Page 166
152·第二部分故障诊断与性能优化篇
5.2.5pt-online-schema-change 在线更改表结构
相应的设置进行处理。
原理是：
修改表结构的方法对varchar有用，对decimal无效，使用时一定要多测试。
mysql> select * from tl:
Query 0K,0rows affected (0.Q2 sec)
mysql> system cp/usr/local/mysql/data/book/t1_tmp.frm/usr/local/mysql/data/book/t1.frm
Query 0K, 0 rows affected (0.02 sec)
mysql>system cp/usr:local/mysql/data/book/tl_tmp.frm
rows in set (0.04 sec)
Tbsxu
mysql> select * from tl;
Query OK,O rowsaffected
id
rows in set (0.04 sec)
id
1）如果存在外键，
2）创建一个新的表，
这个工具来自Percona公司，它解决了更改表时不锁表的问题，且不会影响到业务。其
细心的读者会发现原来的人民币3.8元变成了3.08元，改后的值有了误差，这个快速
步骤三，进行数据测试，如图5-50所示。
步骤二，替换.frm表结构文件，如图5-49所示。
flush tables:
name
hechunyang
zhang
zhang
name
hechunyang
Table'book.t' doesn't exist
，根据alter-foreign-keys-method参数的值，检测外键相关的表，针对
rmb
rmb
，表结构为修改后的数据表，用于从源数据表向新表中导人数据。
(0.02 sec
图5-49替换.frm表结构文件
图5-50查询数据结果
usr/local/mysql/data/book/tl.frm
---
## Page 167
来，以便在数据复制结束后执行这些操作，保证数据不会丢失。
trigger.
结论：给没有主键的表增加字段，该工具会报错。
如果这一步报错，需要通过yum安装perl-DBD-MySQL。
#perl Makefile.PL
#tar zxf percona-toolkit-2.2.2.tar.gz
6）更改源数据表为old表，把新表更改为源表名，并将old表删除。
5）修改外键相关的子表，根据修改后的数据，修改外键关联的子表。
4）复制数据，从源数据表中复制数据到新表中。
3）创建触发器，在复制数据开始之后，将对源数据表继续进行数据修改的操作记录下
[root@vm01~]#pt-online-schema-change--alter="add primary key(id)"--user=root D=book,t=t1--execute
下面的测试是给无主键的表添加主键，代码如下：
测试二：无主键的表增加主键
Created newtable book._t1_new OK.
Creating new table...
Operation,tries,wait:
CannotconnecttoD=book,h=vm02.localdomain,u=root
[root@vm01~]#pt-online-schema-change--alter="addcolumn agetinyint”-user=root D=book,t=t1-
下面的测试是针对无主键的表增加字段，看看会发生什么：
测试一：无主键的表增加字段
下面就来看看这个工具是如何使用的。
#make;make install
该工具的安装命令如下：
7）删除触发器。
CannotconnecttoD=book,h=vm02.localdomain,u=root
Altered'book'.'t1_new'OK.
Alteringnewtable...
cdpercona-toolkit-2.2.2
copy_rows,10,0.25
000
roppingnewtable...
update_foreign_keys,10,1
copy_rows,10,0.25
ok'.'t1'was not altered.
opednewtableOK.
vap_tables,10,1
rop_triggers,10,1
第5章性能调优·153
！
cute
---
## Page 168
154·第二部分故障诊断与性能优化篇
mysql> show slave status\G;
回到 slave 机器上，查看同步复制信息，如下：
测试三：在slave上配置了replicate_do_table=book.t1，并在master上增加一个字段
结论：给无主键的表增加主键，可创建成功。
Successfully altered'book'.'t1'.
Dropped old table“book'.'_t1_old'OK.
Dropping old table...
SwappedoriginalandnewtablesOK.
Swappingtables...
CopiedrowsOK.
Copyingapproximately2rows...
CreatedtriggersOK.
Creatingtriggers...
Altered'book'.'_t1_new'OK.
Alteringnewtable...
Created new table book._t1_new OK.
Creatingnewtable...
Altering'book''t1..
Replicate_Wild_lgnore_Table:
update_foreign_keys,10,1
swap_tables,10,1
drop_triggers, 10, 1
create_triggers,10,1
Replicate_Wild_Do_Table:
Replicate_Ignore_Table:
Relay_master_Log_File:mysql-bin.000002
Exec_master_Log_Pos:6154
Replicate_Do_Table:book.t1
Replicate_Ignore_DB:
Replicate_Do_DB:
slave_IO_Running:Yes
master_Log_File:mysql-bin.000002
Relay_Log_File:vm02-relay-bin.000010
Relay_Log_Pos:1841
slave_lO_State:Waitingformaster to sendevent
Connect_Retry:
Skip_Counter:0
master_Port:3306
master_Host:192.168.8.22
Last_Error:Error'Can'tfind file:/book/_t1_new.frm'(errno:2)onquery.Default database:
Last_Errno:1017
60
---
## Page 169
改名为原表时，导致主从服务器报错。
将只会同步主库上的t1表，所以在主库上产生的临时表并不会复制到从库上，在把临时表
结论：在主库上做的修改不会同步到slave上，因为配置了replicate_do_table=book.tl,
CreateTable:CREATETABLE'child'(
mysql>show create table child\G;
CreateTable:CREATETABLE'parent'
以下是表结构信息：
测试四：对有外键的表增加字段
Noquery specified
1row in set (0.01 sec)
master_SSL_Verify_Server_Cert:No
子表：
ENGINE=InnoDBDEFAULTCHARSET=utf8
ERROR:
Replicate_Ignore_Server_Ilds:
id'int(11)NOTNULLDEFAULT‘0
row in set(0.03sec)
'pid’ int(11) DEFAULT NULL,
PRIMARYKEY(id")
PRIMARYKEY(id'),
name'varchar(5)DEFAULTNULL,
name'varchar(5)DEFAULTNULL,
Table:child
Table:parent
Seconds_Behind_master:NULL
master_SSL_CA_Path
master_SSL_CA_File:
master_Server_Id:22
master_SSL_Allowed:No
master_SSL_Cipher:
master_SSL_Cert:
Last_SQL_Error:Error'Can't findfle:/book/_t1_new.frm'(errno:2)'onquery.Default database:
master_SSL_Key:
Until_Condition:None
Relay_Log_Space:2783
Last_SQL_Errno:1017
Until_Log_Pos:0
Last_l0_Error:
Last_IO_Errno:0
第5章
性能调优·155
---
## Page 170
156·第二部分故障诊断与性能优化篇
D=book,t=child--execute