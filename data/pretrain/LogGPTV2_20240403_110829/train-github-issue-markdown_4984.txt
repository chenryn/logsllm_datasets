When a crate re-exports something from deep in its internal structure with
"pub use", you can only find the thing at its original path. A case in point
(that just happened on IRC) is searching for something like `uid_t` in the
libc crate; you get the path `libc::types::os::arch::posix88::uid_t` when
actually `libc::uid_t` suffices, but to know that you have to scan through the
list of re-exports. Is it feasible for rustdoc to index these re-exported use
paths?