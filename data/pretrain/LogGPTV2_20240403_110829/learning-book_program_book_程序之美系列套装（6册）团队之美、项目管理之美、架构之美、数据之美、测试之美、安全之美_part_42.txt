### 修订号链接和变更细节

修订号链接指向一个页面，该页面展示了特定修改版本中的变更细节。这些信息通过存储库浏览器 ViewVC（<http://www.viewvc.org/>）呈现。如图所示，你可以看到哪些文件发生了变化。点击“modified”可以查看代码差异，如下页第二幅图所示。

### Contribulyzer 的信息布局

Contribulyzer 的信息布局满足了我们对贡献者工作进行回顾的需求。它提供了以下三个层次的信息：
1. **概览**：显示贡献者所做工作的类型。
2. **高层次概述**：每个贡献的详细描述。
3. **代码级别**：详细的代码变更信息。

### 信息如何进入 Contribulyzer？

Contribulyzer 并不是一个神奇的人工智能程序，而是依赖于我们提供的数据。为了让每个人都能准确地提供这些信息，我们采取了两个策略：
1. **降低额外负担**：确保额外的工作量尽可能小。
2. **证明价值**：向人们展示这些额外工作是值得的。

#### 实现方法

- **数据来源**：Contribulyzer 的数据来自 Subversion 的每个修订日志信息。编写日志时有一定的规则，例如需要命名受影响的代码符号。为了支持 Contribulyzer，增加了一个新规则：在维护人员将变更提交到库中时，如果变更是由其他人提交的，需要使用标准方法说明变更是由谁提交的。

- **标准格式**：贡献类型共有四种，使用其中一个动词加上 "by:" 和贡献者的姓名。大多数变更只有一个贡献者，如果有多个贡献者，可以在同一行列出。
  ```
  Patch by: name_1_maybe_with_email_address
  Found by: name_2_maybe_with_email_address
  Review by: etc...
  Suggested by: etc...
  ```

- **详细说明**：更多关于这些规则的详细信息可以在 <http://subversion.tigris.org/hacking.html#crediting> 查看。

### 说服人们遵守新标准

新的日志信息格式虽然需要学习一些新内容，但最终会简化编写日志的过程。以前，我们将变更与贡献者关联的方式杂乱无章，每次提交时都需要考虑如何表达贡献者的贡献。例如：
- 删除由 r20091 引入的冗余代码。来自由 name_1_maybe_with_email_address 提交的补丁。
- 修复 batonhandoff 中的缺陷。（感谢某某发送了这个补丁。）

新的标准使得大家一致同意按照统一方式记录，减少了思考如何组织语言的时间。

### 回溯现有日志

Subversion 的日志记录是可以编辑的。这意味着在编写新标准后，我们可以回溯并修复现有的所有日志，使其符合新标准，从而生成包含整个项目历史的 Contribulyzer 页面。具体步骤如下：
1. 在日志信息中查找所有 “@” 符号，以找出提到某人邮件地址的地方。
2. 再次搜索只包含名字的部分，不包括邮箱地址。
3. 通过几位志愿者的帮助和复杂的编辑宏，我们在一个晚上内完成了约一千条日志信息的转换。

### Contribulyzer 的限制

虽然 Contribulyzer 目前仅处理修订控制记录，但它显著减少了我们的工作量，并提高了协作效率。未来，它可以扩展为一个完整的活动跟踪系统，从邮件列表、缺陷跟踪系统和修订控制系统中收集信息。

### 自动化的重要性

即使是一小步自动化也能显著提升团队的协作能力。尽管 Contribulyzer 只处理修订控制记录，但它节省了大量时间和脑力，特别是因为日志信息通常包含相关缺陷跟踪记录和邮件列表线索的链接。

### 提交邮件和低落的积极性

接下来的例子展示了当团队不重视工具使用时可能出现的问题。大多数开源项目都有一个提交邮件列表，每当有变更进入主存储库时，列表都会收到一封自动产生的邮件。典型的邮件包含变更作者、时间、日志信息以及一行一行的变更内容。下面是一个 Subversion 项目的提交邮件示例：

```
From: PI:EMAIL
Subject: svn commit: r30009 - trunk/subversion/libsvn_wc
To: PI:EMAIL
Date: Sat, 22 Mar 2008 13:54:38 -0700
Author: dionisos
Date: Sat Mar 22 13:54:37 2008
New Revision: 30009
Log: Fix issue #3135 (property update on locally deleted file breaks WC)
* subversion/libsvn_wc/update_editor.c (merge_file): Only fill WC file related entry cache-fields if the cache will serve any use (ie when the entry is schedule-normal).
Modified: trunk/subversion/libsvn_wc/update_editor.c
URL: http://svn.collab.net/viewvc/svn/trunk/subversion/libsvn_wc/update_editor.c?pathrev=30009&r1=30008&r2=30009
--- trunk/subversion/libsvn_wc/update_editor.c Sat Mar 22 07:33:07 2008 (r30008)
+++ trunk/subversion/libsvn_wc/update_editor.c Sat Mar 22 13:54:37 2008 (r30009)
@@ -2621,8 +2621,10 @@
merge_file (svn_wc_notify_state_t *content,
SVN_ERR (svn_wc__loggy_entry_modify (& log_accum,
adm_access, fb->path, & tmp_entry, flags, pool);
- /* Log commands to handle text-timestamp and working-size */
- if (lis_locally_modified)
+ /* Log commands to handle text-timestamp and working-size
+ if the file is-or will be-unmodified and schedule-normal */
+ if (!is_locally_modified &&
+ (fb->added | entry->schedule == svn_wc_schedule_normal))
/* Adjust working copy file unless this file is an allowed obstruction. */
```

提交邮件是自动化信息流和人类参与的完美结合，但如果团队不重视其使用，可能会导致低落的积极性。