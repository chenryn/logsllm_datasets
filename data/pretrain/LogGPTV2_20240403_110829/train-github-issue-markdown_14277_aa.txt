### System Information
- **Username:** Linux chandu 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

### Steps Followed
I followed the instructions from the Caffe2 getting started guide for Ubuntu:
- [Getting Started Guide](https://caffe2.ai/docs/getting-started.html?platform=ubuntu&configuration=compile)

#### Step-by-Step Process

1. **Update and Install Dependencies:**
   ```sh
   sudo apt-get update
   sudo apt-get install -y --no-install-recommends \
       build-essential \
       cmake \
       git \
       libgoogle-glog-dev \
       libgtest-dev \
       libiomp-dev \
       libleveldb-dev \
       liblmdb-dev \
       libopencv-dev \
       libopenmpi-dev \
       libsnappy-dev \
       libprotobuf-dev \
       openmpi-bin \
       openmpi-doc \
       protobuf-compiler \
       python-dev \
       python-pip
   pip install --user future numpy protobuf
   ```

2. **Install Additional Dependency:**
   ```sh
   sudo apt-get install -y --no-install-recommends libgflags-dev
   ```

3. **Clone and Initialize Submodules:**
   ```sh
   git clone --recursive https://github.com/pytorch/pytorch.git && cd pytorch
   git submodule update --init
   ```

4. **Create Build Directory and Run CMake:**
   ```sh
   mkdir build && cd build
   cmake ..
   ```

### CMake Output
The output of `cmake ..` is as follows:

- **BLAS Backend:** Eigen
- **Build Type:** Release
- **Compiler Support:**
  - AVX2 extensions supported
  - Hidden visibility supported
  - pthread support found
- **Dependencies Found:**
  - gflags, glog, LMDB, LevelDB, Snappy, Numa, OpenCV
  - Python (version 2.7.12)
  - NumPy (version 1.14.0)
  - MPI support found
  - CUDA (version 9.0) and cuDNN (version 7.0.5)
  - NCCL (header file: /usr/local/include/nccl.h)
- **Warnings:**
  - Could not find `FindEigen3.cmake` in `CMAKE_MODULE_PATH`
  - OpenMPI found but not built with CUDA support
  - Mobile OpenGL and Metal are only used in Android or iOS builds

### Summary
- **General:**
  - CMake version: 3.5.1
  - Git version: v0.1.11-9300-gbb9ff58-dirty
  - System: Linux
  - C++ compiler: /usr/bin/g++-4.9 (version 5.5.0)
  - BLAS: Eigen
- **Build Configuration:**
  - Build type: Release
  - Compile definitions: Various optimization and warning flags
  - CMAKE_INSTALL_PREFIX: /usr/local
  - BUILD_CAFFE2: ON
  - BUILD_PYTHON: ON
  - Python version: 2.7.12
  - USE_CUDA: ON
  - USE_CUDNN: ON
  - CUDA version: 9.0
  - cuDNN version: 7.0.5
  - CUDA root directory: /usr/local/cuda
  - CUDA libraries and include paths specified

This summary provides a clear and structured overview of the steps taken and the resulting CMake configuration.