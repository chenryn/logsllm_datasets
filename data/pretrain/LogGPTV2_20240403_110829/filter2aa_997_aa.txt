Spartan 0day & Exploit
exp-sky
who am i
• Tencent’s Xuanwu Lab 
• The security of browser 
• Vulnerability discovery 
• Exploit technique 
• APT attacks detection
Spartan 0day & Exploit
• 1、Isolation Heap 
• 2、Memory Protection 
• 3、Spartan Memory Manage 
• 4、CFG 
• 5、Exploit Bypass All 
• 6、0day 
• 7、Q&A
Isolation Heap
//init 
heapHandle = HeapCreate(0, 0, 0); 
g_hIsolatedHeap = heapHandle;
//use 
struct CElement* CButton::CreateElement(CHtmTag *a1, CDoc *a2) 
{ 
  void *mem = MemoryProtection::HeapAllocClear(g_hIsolatedHeap, 
                                        0x5Cu); 
  if ( Abandonment::CheckAllocationUntyped(mem) ) 
    result = CButton::CButton(*((_DWORD *)a1 + 1), a2); 
  else 
    result = 0; 
  return result; 
}
Use Isolation Heap
Alloc Memory Check
Isolation Heap
Isolated Heap
Process Heap
UAF Object
Outer Object
Use
Spartan 0day & Exploit
• 1、Isolation Heap 
• 2、Memory Protection 
• 3、Spartan Memory Manage 
• 4、CFG 
• 5、Exploit Bypass All 
• 6、0day 
• 7、Q&A
Memory Protection
Memory Protection
Heap
UAF Object
Not free
Outer Object
Not use
Spartan 0day & Exploit
• 1、Isolation Heap 
• 2、Memory Protection 
• 3、Spartan Memory Manage 
• 4、CFG 
• 5、Exploit Bypass All 
• 6、0day 
• 7、Q&A
Spartan Memory Manage
• New Mode MemoryGC 
• init : chakra!MemProtectHeapCreate 
• alloc : chakra!MemProtectHeapRootAlloc 
• free : chakra!MemProtectHeapUnrootAndZero
Spartan Memory Manage
• New Mode
//init 
MemoryProtection::InitializeProtectionFeature 
    |-MemoryProtection_Mode = 3; 
    |-MemoryProtection::CMemoryGC::InitializeFeature 
        |-chakra!MemProtectHeapCreate
Spartan Memory Manage
• New Mode
MemoryProtection::ReportHeapSize 
MemoryProtection::HeapAlloc 
MemoryProtection::HeapAllocClear 
MemoryProtection::HeapAlloc 
MemoryProtection::HeapAllocClear 
MemoryProtection::HeapReAlloc 
MemoryProtection::HeapReAlloc
MemoryProtection::InitializeProtectionFeature
Spartan Memory Manage
• New Mode
//alloc 
MemoryProtection::HeapAllocClear 
    |-MemoryProtection_Mode 
        |- 0,1,2 : HeapAlloc Isolation 
        |- 3   : chakra!MemProtectHeapRootAlloc 
            |- Memory::Recycler
Spartan Memory Manage
• New Mode
//free 
MemoryProtection::HeapFree 
    |-MemoryProtection_Mode 
        |-  0  : HeapFree 
        |- 1,2 : MemoryProtection::CMemoryProtector::ProtectedFree 
        |- 3   : chakra!MemProtectHeapUnrootAndZero 
//MemGC 
MemProtectThreadContext::Collect 
    |- MemProtectHeap::Collect 
        |-Memory::Recycler::DoCollectWrapped 
            |-Memory::Recycler::DoCollect 
                |-Memory::Recycler::CollectionBegin 
                |-Memory::Recycler::Mark 
                |-Memory::Recycler::Sweep 
                |-Memory::Recycler::CollectionEnd 
                |-Memory::Recycler::FinishCollection
Spartan Memory Manage
• MemoryAlloc
//create 
struct CElement* CButton::CreateElement(CHtmTag *a1, CDoc *a2) 
{ 
  void *mem = MemoryProtection::HeapAllocClear(g_hIsolatedHeap, 
                                        0x5Cu); 
  if ( Abandonment::CheckAllocationUntyped(mem) ) 
    result = CButton::CButton(*((_DWORD *)a1 + 1), a2); 
  else 
    result = 0; 
  return result; 
}
Spartan Memory Manage
• MemoryFree
//delete 
void * __thiscall CButton::`vector deleting destructor’() 
{ 
    CElement::~CElement(); 
    MemoryProtection::HeapFree(_g_hIsolatedHeap,this); 
}
Spartan Memory Manage
• New Mode MemGC
Render 
render_object 
render_object 
render_object
Script 
Memory::Recycler 
script_object 
script_object 
script_object
Spartan Memory Manage
• Isolation Heap?
var i = document.createElement(“iframe”); 
eax=1121fc00 ebx=62412180 ecx=1121fc00 edx=1072a054 esi=61d87d28 edi=05b0c278 
eip=624121b5 esp=05b0c260 ebp=05b0c268 iopl=0         nv up ei pl nz na pe nc 
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206 
EDGEHTML!CIFrameElement::CIFrameElement: 
624121b5 8bff            mov     edi,edi
i = null; 
CollectGarbage(); 
memory();  //area.coords 
0:024> dd 1121fc00 
1121fc00  0000000d 0c0c0c0c 0c0c0c0c 0c0c0c0c 
1121fc10  0c0c0c0c 0c0c0c0c 0c0c0c0c 0c0c0c0c 
1121fc20  0c0c0c0c 0c0c0c0c 0c0c0c0c 0c0c0c0c 
1121fc30  0c0c0c0c 0c0c0c0c 0c0c0c0c 0c0c0c0c
Spartan 0day & Exploit
• 1、Isolation Heap 
• 2、Memory Protection 
• 3、Spartan Memory Manage 
• 4、CFG 
• 5、Exploit Bypass All 
• 6、0day 
• 7、Q&A
CFG
mov     eax, [edi] 
mov     esi, [eax+0A4h] ; esi = virtual function 
mov     ecx, esi 
call    ds:___guard_check_icall_fptr //ntdll!LdrpValidateUserCallTarget 
mov     ecx, edi 
call    esi
mov     eax, [edi] 
call    dword ptr [eax+0A4h]
CFG
bitmap 
index               offset            : data 
[0x0077b960] 0x01dee58c : 0x55555555 
[0x0077b964] 0x01dee590 : 0x30010555 
[0x0077b968] 0x01dee594 : 0x04541041 
…
function 
address : 0x77b96450 
0x77b96450 : [01110111 10111001 01100100 01010000]
bt : 0x30010555&0x400 != 0
01010 = 0x0a = 10
00000100 00000000 = 0x400
CFG
• bypass CFG
CFG
• bypass CFG
CFG
• bypass CFG
CFG
• bypass CFG
0:024> g 
Breakpoint 0 hit 
eax=603ba064 ebx=063fba10 ecx=063fba40 edx=063fba40 esi=00000001 edi=058fc6b0 
eip=603ba064 esp=058fc414 ebp=058fc454 iopl=0         nv up ei ng nz na po cy 
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000283 
chakra!`dynamic initializer for 'DOMFastPathInfo::getterTable''+0x734: 
603ba064 94              xchg    eax,esp 
603ba065 c3              ret
write_dword(addr,chakra_base_addr+0x002AA064);    //set rop address
Spartan 0day & Exploit
• 1、Isolation Heap 
• 2、Memory Protection 
• 3、Spartan Memory Manage 
• 4、CFG 
• 5、Exploit Bypass All 
• 6、0day 
• 7、Q&A