### Content Similarity and Mentions to Non-Followers

- **Average Content Similarity**: This metric is calculated using the cosine similarity over the bag-of-words vector representation of tweets. The formula for content similarity between two tweets \( t1 \) and \( t2 \) is:
  \[
  \text{similarity}(t1, t2) = \frac{V(t1) \cdot V(t2)}{|V(t1)| \cdot |V(t2)|}
  \]
  where \( V(t) \) is the vector representation of a tweet.

- **Ratio of Mentions Sent to Non-Followers**: This is the only relational feature used in the study, while the other features are account-based and have been used in previous research. The ratio is computed as:
  \[
  \text{Ratio} = \frac{\text{Number of mentions sent to non-followers}}{\text{Total number of mentions}}
  \]

### Feature Importance and Spam Detection

#### Table 4: Top Five Results of Spammer Detection Using Weka Classifiers
| Classifiers   | True Positive (%) | False Positive (%) |
|---------------|-------------------|--------------------|
| BayesNet      | 99.7              | 0.6                |
| LogitBoost    | 99.7              | 0.6                |
| J48           | 99.6              | 0.6                |
| Logistic      | 99.4              | 0.9                |
| LibSVM        | 98.3              | 0.5                |

#### Table 5: Feature Selection Results
| Rank | Information Gain | ReliefF | Chi Square |
|------|------------------|---------|------------|
| 1    | Ratio of mentions sent to non-followers | Ratio of mentions sent to non-followers | Ratio of mentions sent to non-followers |
| 2    | Reputation       | Ratio of tweets containing URLs | Reputation |
| 3    | Ratio of mentions containing URLs | Age | Ratio of mentions containing URLs |
| 4    | Ratio of tweets containing URLs | Ratio of mentions containing URLs | Ratio of tweets containing URLs |
| 5    | Age              | Average content similarity | Age |

### Data and Classification
We selected 1,000 non-spammers and 300 spammers from our dataset and extracted the most recent 50 tweets from their timelines. Users were classified using several classifiers in Weka with a 10-fold cross-validation option. The top five results are shown in Table 4, with an accuracy of about 99.7% and a false positive rate of only about 0.6%. These results are better than those in Section 4.2, but the methods cannot detect spam in real-time.

### Feature Ranking
To verify the importance of the features, we used three feature selection methods available in Weka: Information Gain, ReliefF, and Chi Square. Table 5 shows the five most important features for each method. All methods rank the ratio of mentions sent to non-followers as the top feature, indicating that relational features are more powerful than account features.

### Discussion

#### 5.1 Combination of Account Features and Relation Features
We focused on relational features to detect spam, but combining both account and relational features can enhance the system's performance. In Section 4.3, we used both types of features, resulting in better accuracy. Account features complement the limitations of relational features.

#### 5.2 Live Detection
Our system can be applied to both client-side and server-side. On the client-side, the system periodically collects relation information from Twitter, which requires some bandwidth, computing, and storage resources. However, since most messages come from friends, the need for frequent data collection and computation is limited. On the server-side, service managers already have user relation information, reducing the need for additional resources. Computed relational features can be cached and updated when necessary, reducing computational overhead.

#### 5.3 Limitations
- **New Accounts**: New accounts may be incorrectly flagged as spam due to a lack of established relationships.
- **Infected Friends**: Messages from infected friends may not be detected if only relational features are considered. Checking the application permissions and message content (e.g., URLs) can help mitigate this issue.

### Conclusion
Traditional spam filtering methods are not effective in social networks due to their unique characteristics. Our proposed method uses relational information to detect spam, achieving high accuracy and real-time detection. The system can be integrated into social networking services to quarantine suspected spam messages. Future work could include incorporating more sophisticated content analysis and user behavior patterns.

### Acknowledgement
This research was supported by the MKE (Ministry of Knowledge Economy), Korea, under the ITRC (Information Technology Research Center) support program supervised by the NIPA (National IT Industry Promotion Agency) (NIPA-2011-C1090-1131-0009) and WCU (World Class University) program through the National Research Foundation of Korea funded by the Ministry of Education, Science and Technology (R31-2010-000-10100-0).

### References
[References listed here as in the original text.]

This revised version aims to provide a clearer, more structured, and professional presentation of the content.