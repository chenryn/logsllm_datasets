[usa:chiIdren]
southeast
northeast
southvest
southeast
景嵌套组只能使用在/usr/bin/ansible-playbook中，在/usr/bin/ansible中不起作用。
9.3.4分离主机与组特定数据
为了更好规范定义的主机与组变量，Ansible支持将/etc/ansible/hosts定义的主机名与
组变量单独剥离出来存放到指定的文件中，将采用YAML格式存放，存放位置规定：“/etc/
++
定义的变量，例如：
/etc/ansible/group_vars/dbservers
---
## Page 148
第9章集中化管理平台Ansible详解127
/etc/ansible/group_vars/vebservers
/etc/ansible/host_vars/foosba11
定义的dbservers变量格式为：
[ /etc/ansible/group_vars/dbservers ]
ntp_server: acme.example.org
==
database_server: storage.example. org
录或inventory目录，如同时存在，inventory目录的优先级高于playbook目录的。
9.4匹配自标
在9.3节中已经完成主机与组的定义，本节将讲解如何进行目标（Patterms）匹配，格
式为：ansible -m -a 。举例说明：重启
webservers 组的所有Apache服务。
本节将重点介绍参数的使用方法，详细规则及含义见表9-2。
表9-2匹配目标主机规则表
规
含文
192.198.12成 onc.cxampl.com
匹配目标IP地址或主机名，多个IP或主机名使用“：号分隔
webservers
匹配目标组为webservers，多个组使用：号分隔
AlI或
匹配目标所有主机
~(webidb).*.example'.com 或成 192.168.1.*
支持正则表达方匹配主机或IP地址
webservers:1192.168.1.22
医配webservers组且排除192.168.1.22主机IP
webservers:& dbservers
匹配wcserves与serves两个群组的交集
webservers:1[(excluded)1:& ( (required))
支持变量匹配方式
9.5Ansible常用模块及APl
Ansible提供了非常丰富的功能模块，包括Cloud（云计算）、Commands（命令行）
---
## Page 149
128第二部分高级篇
Database（数据库）、Files（文件管理）、Internal（内置功能）、Inventory（资产管理）
Messaging（消息队列）、Monitoring（监控管理）、Net Infrastructure（网络基础服务）
Network（网络管理）、Notification（通知管理）、Packaging（包管理）、Source Control（版
本控制）、System（系统服务）、Utilities（公共服务）、WebInfrastructure（Web基础服务），等
等，更多模块介绍见官网模块介绍（网址：http://ansibleworks.com/docs/modules.html)。模块
默认存储目录为/usr/share/ansible/，存储结构以模块分类名作为目录名，模块文件按分类
存放在不同类别目录中。命令行调用模块格式：ansible-m
-a，其中默认的模块名为command，
即“-m command”可省略。获取远程webservers 组主机的uptime 信息格式如图9-3所示。
82013-08-828-]4m51hle
ps
.
图9-3获取主机“uptime”信息
以上命令等价于ansiblewebservers-a“uptime”，获得模块的帮助说明信息格式：ansible
doc，得到ping模块的帮助说明信息如图9-4所示。
图9-4ping模块帮助信息
在playbooks中运行远程命令格式如下：
- name: reboot the servers
action: command /sbin/reboot -t nov
Ansible 0.8或以上版本支持以下格式：
name1 reboot the servers
command: /sb1n/reboot -t now
Ansible 提供了非常丰富的模块，涉及日常运维工作的方方面面。下面介绍Ansible 的常
用模块，更多模块介绍见官方说明。
---
## Page 150
第9章集中化管理平台Ansible详解129
1.远程命令模块
（1）功能
模块包括command、script、shell，都可以实现远程shell命令运行。command作为
Ansible的默认模块，可以运行远程权限范围所有的shell命令：script功能是在远程主机执行
主控端存储的 shell 脚本文件，相当于scp+shell 组合：shell功能是执行远程主机的 shell脚本
文件。
（2）例子
2.copy模块
（1）功能
实现主控端向目标主机拷贝文件，类似于scp的功能。
（2）例子
以下示例实现拷贝/home/test.sh文件至webserver组目标主机/mp/目录下，并更新文件
属主及权限（可以单独使用file模块实现权限的修改，格式为：path-/etc/foo.confowner=foo
group=foo mode=0644 )。
ansiblevebservers
#
group=root mode=0755*
001=.0uxo/dua/=eep qe*sea/auou/=oxs。e-Adoo u-
3.stat 模块
（1）功能
获取远程文件状态信息，包括atime、ctime、mtime、md5、uid、gid等信息。
（2）例子
4.get_url 模块
（1）功能
实现在远程主机下载指定URL到本地，支持sha256sum文件校验。
---
## Page 151
130第二部分高级篇
（2）例子
mode=0440 force=yes*
ansible vebservers
tmp/index.html
5.yum模块
（1）功能
Linux平台软件包管理操作，常见有yum、apt管理方式。
（2）例子
ansible vebservers
6.cron模块
（1）功能
远程主机crontab 配置。
（2）例子
ansible webservers
=′check dirs*hour='5,2′job=′1s -alh >/
dev/nu11**
效果如下：
Ansible: check dirs
1s -alh > /dev/nu1lsalt
7.mount模块
（1）功能
远程主机分区挂载。
（2）例子
ansible vebservers
state=present*
=/mnt/data 8rc=/dev/sd0 fstype=ext3 opts=ro
---
## Page 152
第9章集中化管理平台Ansible详解131
8.service 模块
（1）功能
远程主机系统服务管理。
（2）例子
ansible webservers
ansible webservers
-m service
-a "name=nginx state=restarted"
9.sysetl包管理模块
（1）功能
远程Linux主机sysctl配置。
（2）例子
sysctl: name=kernel.panic value=3
sysctl_file=/etc/sysctl.conf checks=before
reload=yessalt *** pkg-upgrade
10.user服务模块
（1）功能
远程主机系统用户管理。
（2）例子
添加用户 ohnd
ansible webservers
到除用户 johnd;
'John Doe
- name: reboot the servers
command: /sbin/reboot -t now
---
## Page 153
132第二部分高级篇
9.6playbook介绍
playbook是一个不同于使用Ansible命令行执行方式的模式，其功能更强大灵活。简单
来说，playbook是一个非常简单的配置管理和多主机部署系统，不同于任何已经存在的模式，
可作为一个适合部署复杂应用程序的基础。playbook可以定制配置，可以按指定的操作步骤
有序执行，支持同步及异步方式。官方提供了大量的例子，可以在htps://github.com/ansible/
ansible-examples找到。playbook是通过YAML格式来进行描述定义的，可以实现多台主机
应用的部署，定义在webservers及dbservers组上执行特定指令步骤。下面为读者介绍一个基
本的playbook示例：
[ /home/test/ansible/playbooks/nginx.yml 1
- hosts1 webservers
vorker_processes1 4
max_open_file: 65506
num_cpus: 4
root: /data
remote_user: root
tasks1
name: ensure nginx is at the latest version
yum: pkg=nginx state=latest
name: vrite the nginx config file
tenplate: src=/home/test/ansible/nginx/nginx2.conf dest=/etc/nginx/nginx,con
name: ensure nginx is running
service1 name=nginx state=started
handlers:
name: restart nginx
service: name=nginx state=restarted
以上playbook定制了一个简单的Nginx软件包管理，内容包括安装、配置模板、状态管
理等。下面详细对该示例进行说明。
9.6.1定义主机与用户
在playbook执行时，可以为主机或组定义变量，比如指定远程登录用户。以下为
webservers组定义的相关变量，变量的作用域只限于webservers组下的主机。
- hosts: webservers
var81
worker_processes: 4
num_cpu81 4
---
## Page 154
第9章集中化管理平台Ansible详解133
max_open_fi1e: 65506
root: /data
400z 1zasn asowaz
hosts参数的作用为定义操作的对象，可以是主机或组，具体定义规则见9.3.1节内容。
本示例定义操作主机为webservers组，同时通过vars参数定义了4个变量（配置模板用到），
其中remote_user为指定远程操作的用户名，默认为root账号，支持sudo方式运行，通过添
加sudo:yes即可。注意，remote_user参数在Ansible1.4或更高版本才引人。
9.6.2任务列表
所有定义的任务列表（tasks list），playbook将按定义的配置文件自上面下的顺序执行，
定义的主机都将得到相同的任务，但执行的返回结果不一定保持一致，取决于主机的环境及
程序包状态。建议每个任务事件都要定义一个name标签，好处是增强可读性，也便于观察
结果输出时了解运行的位置，默认使用action（具体的执行动作）来替换name作为输出。下
面是一个简单的任务定义示例：
tasks:
buruun. st xurbu ezns exeu 1eweu
service: name=nginx state=running
功能是检测Nginx服务是否为运行状态，如没有则启动。其中name标签对下面的
action（动作）进行描述：action（动作）部分可以是Ansible的任意模块，具体见9.5节，本
例为services模块，参数使用key=value的格式，如”name-httpd"，在定义任务时也可以引
用变量，格式如下：
tasks:
name: create a virtual host file for ({ vhost 1}
temp1ate1 src=somefile.)2 dest=/etc/httpd/conf ,d/(( vhost 1)
在playbook可通过template模块对本地配置模板文件进行谊染并同步到目标主机。以
nginx配置文件为例，定义如下：
- name: vrite the nginx config file
template: src=/hone/test/ansible/nginx/ngLnx2,conf dest=/etc/nginx/nginx conf
notify:
- restart nginx
其中，“src=/home/test/ansible/nginx/nginx2.conf”为管理端模板文件存放位置，“dest=/
ctc/nginx/nginx.conf”为目标主机nginx配置文件位置，通过下面nginx模板文件可以让大家
对模板的定义有个基本的概念。
[ /home/test/ansible/nginx/nginx2.conf ]
---
## Page 155
134第二部分高级篇
vorker_processes1( worker_processes 111
28er
nginx:
($if num_cpus == 2 §)
vorker_cpu_affinity 01 10;
[号elif num_cpus == 4 4}
worker_cpu_affin1ty 1000 0100 0010 0001)
($ e1if mum_cpu8 >= 8 )
01000000 10000000;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000
{%else $)
woxker_cpu_affin1ty 1000 0100 0010 0001:
(endif )
worker_rlimit_nofile (( max_open_file 11
Ansible会根据定义好的模板渲染成真实的配置文件，模板使用YAML语法，详细见9.1
节，最终生成的nginx.conf配置如下：
199n
nginx1
worker_processes 4;
worker_cpu_affinity 1000 0100 0010 0001:
vorker_rlimit_nofile 65506;
I =
当目标主机配置文件发生变化后，通知处理程序（Handlers）来触发后续的动作，比如
重启nginx服务。Handlers中定义的处理程序在没有通知触发时是不会执行的，触发后也只
会运行一次。触发是通过Handlers定义的name标签来识别的，比如下面notify中的“restart
xu   s  x
notify1
- restart nginx
handlers:
nane1 restart nginx
service: nane=nginx state=restarted
9.6.3执行playbook
执行playbook，可以通过ansible-playbook命令实现，格式：ansible-playbook playbook
file（.yml）[参数]，如启用10个并行进程数执行playbook：
#ansible-playbook /home/test/ansible/playbooks/nginx.yml -f 10,
其他常用参数说明：
口-uREMOTE_USER：手工指定远程执行playbook的系统用户；
--syntax-check：检查 playbook 的语法;
---
## Page 156
第9章集中化管理平台Ansible详解135
--list-hosts playbooks：匹配到的主机列表;
-T TIMEOUT：定义playbook执行超时时间；
--step：以单任务分步骤运行，方便做每一步的确认工作。
更多参数说明运行ansible-playbook-help来获得。
9.7playbook角色与包含声明
当我们写一个非常大的playbook时，想要复用些功能显得有些吃力，还好Ansible支持
写playbook时拆分成多个文件，通过包含（include）的形式进行引用，我们可以根据多种维
度进行“封装”，比如定义变量、任务、处理程序等。
角色建立在包含文件之上，抽象后更加清晰、可复用。运维人员可以更专注于整体，只
有在需要时才关注具体细节。Ansible官方在GitHub上提供了大量的示例供大家参考借墓，
访问地址htps:/github.com/ansible/ansible-examples 即可获相应的学习资料。
9.7.1包含文件，鼓励复用
当多个playbook涉及复用的任务列表时，可以将复用的内容剥离出，写到独立的文件当