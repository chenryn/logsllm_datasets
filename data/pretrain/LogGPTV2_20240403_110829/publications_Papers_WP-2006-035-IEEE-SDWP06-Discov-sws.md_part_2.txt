given text by counting the overlaps between i R A  | p(c A)| R A
| p(c )∩ p(c )|
dictionary definitions of the various senses. R A , c ≠c
  | p(c )| R A
A
Most of these approaches are not suitable to compute
the degree of matching between input and output concepts  1, c =c
of the semantic Web services. All these metrics are  | p(c )| R A
symmetric (except [20]). This mean that f(c , c ) = f(c ,  A , c >c
1 2 2  | p(c )| R A
c 1). As explained previously, when matching inputs and S o=(c R,c A)= 1,R
c c ). As a result, a Web
A R A
suitable approach to match semantic Web services. This service with input concept c , is able to process concept
A
model has been considered one of the most powerful c . For example, let us consider the ontology from Figure
R
similarity models to date [25]. It is also known as a 1. If a Web service request specifies concept StaffRecord
feature-counting metric or feature-contrast model. This as input and an advertisement specifies concept
model is based on the idea that common features tend to EmployeeRecord as input then the advertised service is
increase the perceived similarity of two concepts, while able to process the input concept StaffRecord. This is
feature differences tend to diminish perceived similarity. because the concept c is a subclass of concept c and it
R A
The model takes into account the features that are has at least the same set of properties as c . In this case,
A
common to two concepts and also the differentiating the similarity is also one.
features specific to each. More specifically, the similarity Case 3: In the third case, if the request concept c is a
R
of a concept c to a concept c is a function of the features generalization of advertisement concept c (c <c ), then
1 2 A R A
common to c and c , those in c but not in c and those in c has probably some properties that do not exist in c .
1 2 1 2 A R
c2 but not in c . For instance, a SUV (Sport Utility Therefore, it is possible that a Web service advertisement
1
Vehicle) and a sedan are similar by virtue of their with input c is not able to process the input concept c
A R
common features, such as wheels, engine, steering wheel, due possibly to missing properties. For example, if a Web
and gears, and are dissimilar by virtue of their differences, service request R specifies concept EmployeeRecord as
namely height and the size of the tires. input and an advertisement A specifies concept
Based on Tversky’s model, we introduce the matching StaffRecord as input then Web service A may not be able
functions S=(c ,c ) and S = (c ,c ) which analyze the to process the input concept EmployeeRecord. This is
i R A o R A because A may need the property Degree and
number of properties shared among two input or output
Competencies of the input concept to work properly.
concepts c and c (R stands for a Web service request, A
R A Case 4: In the last case, the concepts c and c are not
R A
stands for a Web service advertisement, i stands for input,
equal and do not subsume each other in any way (c ≠ c ).
R A
and o stands for output) conceptualized within the same
In this scenario, we evaluate the matching by analyzing
ontology. In our functions S=, the function p(c) retrieves
how many common properties exist between the two
all the properties associated with a concept c and function
concepts and how many properties are different. Also, we
|s| corresponds to the number of elements in set s.
analyze the percentage of input advertisement properties
that were satisfied.
As an example, let us illustrate the use of function ManagerRecord. Only one of the three advertisement
S=(c ,c ) for the four cases – 1), 2), 3) and 4) – that properties are satisfied by request properties. The
i R A following table shows the results for the four cases
can occur when matching a request c with an
R presented.
advertisement c . In our example, the Web services’ input
A
is annotated with concepts from the ontology illustrated in
Request c R Advertisement c A S=(c ,c )
Figure 1. The four cases that may occur are listed in Table i R A
StaffRecord StaffRecord 1
1 and are evaluated as follows:
(cid:1) StaffRecord EmployeeRecord 1
In case 1), both c and c are associated with the
R A StaffRecord SecretaryRecord 0.5
same concept (StaffRecord). Since the request
StaffRecord ManagerRecord 1/3
matches the advertisement perfectly. The result is 1.
Table 1. An example of matching inputs with a
(cid:1)
In case 2), the request c is associated with the
R common ontology commitment.
concept StaffRecord and the advertisement c is
A
associated with the concept EmployeeRecord. Since
As we can see the concept SecretaryRecord is closer to
the concept EmployeeRecord is a generalization of
the concept StaffRecord than the concept ManagerRecord.
concept StaffRecord, the properties of the concept
This result corroborates our intuition and visual analysis
StaffRecord (the set {Salary, Degree, Competencies})
of the ontology and its concepts.
is a superset of the properties of the concept
EmployeeRecord (the set {Salary}). All the
3.3. Comparing semantic Web services with no
properties of c exist in c . As a result, the similarity
A R common ontology commitment
is evaluated to 1.
(cid:1)
In case 3), the request c is associated with the
R In this scenario, different Web services are described
concept StaffRecord and the advertisement c is
A by different ontologies. Since there is no common
associated with the concept SecretaryRecord. Since
ontology commitment, there is no common vocabulary
the concept StaffRecord is a subclass of concept
which makes the comparison of different concepts a more
SecretaryRecord, the properties of the concept
complicated task.
StaffRecord (the set {Salary, Degree, Competencies})
Web service parameters (such as inputs and outputs)
is a subset of the properties of the concept
are identified by words (classes) and there are two major
SecretaryRecord (the set {Salary, Degree,
linguistic concepts that need to be considered: synonymy
Competencies, SpokenLanguage, WrittenLanguage,
and polysemy. Polysemy arises when a word has more
ComputerSkills}). In this case, when the request c
R than one meaning (i.e., multiple senses). Synonymy
matches the advertisement c some properties of c
A A corresponds to the case when two different words have the
are left unfulfilled (the properties SpokenLanguage,
same meaning. To tackle the existence of these linguistic
WrittenLanguage, and ComputerSkills). To indicate
concepts we will use a feature-based similarity measure
this mismatch the matching is set to the ratio of the
that compares concepts based on their common and
number of properties of c and the number of
R distinguishing features (properties).
properties of c , which in this case is |p(c )|/|p(c )| =
A R A The problem of determining the similarity of concepts
3/6 = 0.5.
defined in different ontologies is related to the work on
(cid:1)
In the last case (4), the request c is associated with
R multi-ontology information system integration. Most of
the concept StaffRecord and the advertisement c is
A the similarity measures previously presented [13-19, 21-
associated with the concept ManagerRecord. The
24] cannot be directly used to match Web services since
concept StaffRecord has the set of properties {Salary,
they are symmetric, and more importantly, they can only
Degree, Competencies} and the concept
be used when the concepts to compare are defined in the
ManagerRecord has the set of properties {Salary,
same ontology.
Level, Area}. Since the concepts do not have a
Nonetheless, the Tversky’s feature-based similarity
parent/children relationship, we compute the
model [20] is interesting since it takes into account the
percentage of the advertisement’s properties that are
features or properties of concepts and not the taxonomy
fulfilled with a property from c . The similarity is
R that defines the hierarchy of concepts. We believe that
evaluated as follows:
when matching inputs and outputs, the features of
concepts tell more than the taxonomy.
| p(c )∩ p(c )| 1
S=(c ,c )= R A = Based on Tversky’s model, we introduce matching
i R A | p(c A)| 3 functions S≠(c ,c ) and S ≠(c ,c ) for semantic Web
i R A o R A
The result of evaluating the function indicates a low
services with no common ontology commitment based on
degree of matching between the concepts StaffRecord and
the number of properties shared among two input or
output concepts c and c conceptualized within the same Function ss(p , p ) determines if two properties are
R A 1 2
ontology. The function computes the geometric distance considered to be equal using function g. If two properties
between the similarity of the domains of concept c and match syntactically then function ss returns 1, otherwise it
R
concept c and the ratio of matched input properties from returns 0. Properties match syntactically only if function g
A
the concept c . Our similarity functions are defined as determines that the syntactic similarly it greater that a
A
follows, constant β.
S≠(c ,c )= 1, g(p ,p )≥β
i R A ss(p ,p )= 1 2
Π(p(c R),p(c A)) *Π(p(c R),p(c A)) 1 2 0, g(p 1,p 2)<β
|p(c )∪p(c )|−Π(p(c ),p(c )) |p(c )|
R A R A A
S ≠(c ,c )= Function g(p 1, p 2) is a function that computes the
o R A syntactic similarity of two words. In our approach, we use
Π(p(c ),p(c )) Π(p(c ),p(c ))
R A * R A “string-matching” as a way to calculate similarity.
|p(c )∪p(c )|−Π(p(c ),p(c )) |p(c )|
R A R A R Function g can be implemented using several existing
methods such as equality of name, canonical name
Function Π establishes a mapping between the representations after stemming and other preprocessing, q-
properties of two concept classes. Figure 2 illustrates two grams, synonyms, similarity based on common sub-
ontologies involved in a mapping. strings, pronunciation, soundex, abbreviation expansion,
stemming, tokenization, etc. Other techniques borrowed
from the information retrieval area may also be
considered. A very good source of information retrieval
techniques can be found in Belew [26].
For example, let us consider the request query
sws (“SecretaryRecord“, c ) and the advertisement
R Ro
sws (”EmployeeR”, c ). When computing
A Ao
Π(p(“SecretaryRecord”), p(“EmployeeR”)) of the inputs
we obtain two mappings Π andΠ . The mapping Π is
i,1 i,2 i,1
Figure 2. Two ontologies involved in a mapping found since the results of ss(“SpokenLanguages“,
”Spoken_Lang”), using the q-grams methodology [27] as
For example, when matching the class concepts an implementation of g with β = 0.5, is 0.53 (i.e.,
SecretaryRecord and EmployeeR we need to establish a g(“SpokenLanguages“, ”Spoken_Lang”)=0.53). As a
mapping between the properties of the two classes. The result, ss is evaluated to 1. Mapping Π yields because
i,2