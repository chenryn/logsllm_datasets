used only when an acceptor 
in the ring 
although 
is used by the coor­
in Tasks 3 and 5, this can be implemented 
more 
ip-multicast 
by overlapping 
the message sent by Task 5 of consensus 
consecutive 
consensus 
instance 
instances, 
together 
with the message sent 
by Task 3 of 
falling 
Protocols 
in the destination 
pute the message order in a distributed 
12]). These protocols 
ber of messages 
not good candidates 
for high throughput. 
for each message broadcast, 
typically 
agreement 
fashion 
(e.g., 
[5, 
a quadratic 
and thus are 
exchange 
class com­
num­
In communication 
history-based 
algorithms, 
the mes­
by the message sender, 
that 
the message (e.g., [17, 23]). 
interest 
provided 
is usually 
using logical 
is determined 
that broadcasts 
sage ordering 
is, the process 
or phys­
Message ordering 
ical time. Of special 
pro­
is LCR, which arranges 
cesses along a ring and uses vector clocks for message or­
dering [21]. This protocol 
than Ring Paxos but exhibits 
creases 
and requires 
ing a process 
detection 
cessing 
a higher latency, 
with the number of processes 
Perfect 
assumptions 
perfect 
failure 
to have crashed 
is not tolerated. 
strong synchrony 
erroneously 
detection: 
has slightly 
and message transmission 
times. 
The last class of atomic broadcast 
linearly 
implies 
about pro­
which in­
in the ring, 
suspect­
failure 
better throughput 
algorithms, 
as 
mes­
denoted 
to broadcast 
is thus defined by the 
the 
algorithms, 
from moving sequencer 
by the broadcast­
allows a single  process 
is provided 
circulates 
message ordering 
to moving sequencer 
to order  messages 
privilege-based, 
sages at a time; the message  order 
broadcaster.  Similarly 
privilege 
in the form of a token; Differently 
algorithms, 
ers and not by the sequencers. 
Totem, a protocol 
which is responsible 
erating 
In [10], fault-tolerance 
detector.  However, 
a quadratic 
A general 
privilege-based protocols 
cess p can totally 
token, which delays m's delivery. 
f process 
is provided 
tolerating 
number of processes. 
drawback 
of 
before a pro­
order a message m, p must receive 
the 
is their high latency: 
for reconstructing 
the ring and regen­
based on a group membership 
In [2], the authors 
propose 
service, 
by relying 
on a failure 
requires 
failures 
the token in case of process or network failures. 
among broadcasters 
In this 
classes, 
and low latency. 
high throughput 
Ring Paxos decouples 
tocols to provide 
sense, it fits multiple 
high throughput, 
nation from ordering. 
ip-multicast; 
identifiers. 
ing consensus 
majority 
able latency, the ring is composed of only f + 1 processes, 
as defined above. To ensure 
message dissemi­
The former is accomplished 
using 
on message 
is done using consensus 
execut­
using a ring, similarly 
to the 
protocols. 
To use the network efficiently, 
of privilege-based 
communicate 
processes 
To provide 
the latter 
reason­
and is reconfigured 
in the case of failure. 
In Table 1, we compare algorithms 
Ring Paxos in terms of throughput 
tocols use a logical 
ring for process 
that are closest 
to 
All these pro­
efficiency. 
communication, 
which 
5. Related work 
In this section 
we review atomic broadcast 
algorithms 
and compare them analytically 
to Ring Pax os. 
Several 
papers argued that Paxos is not an easy algorithm 
[4, 16]. Essentially, 
this is because Paxos is 
that leaves many non-trivial 
design de­
open. Besides 
to implement 
a subtle algorithm 
cisions 
these two papers present 
implementations. 
types implement 
modifications 
are considered. 
providing 
insight 
performance 
In contrast 
results 
of their Paxos 
to Ring Paxos, these proto­
into these matters, 
Paxos as specified 
in [19]; no algorithmic 
Paxos is not the only algorithm 
In fact, the literature 
to implement 
atomic 
on the subject 
of atomic broadcast 
is abun­
algorithms 
moving sequencer, 
fixed sequencer, 
broadcast. 
dant. In [8], five classes 
have been identified: 
destination 
agreement, 
privilege-based. 
In fixed sequencer 
algorithms 
(e.g., [3, 14]), broadcast 
process, 
called the se­
are sent to a distinguished 
who is responsible 
for ordering 
messages 
quencer, 
The role of sequencer 
other process 
this class of algorithms, 
come the system bottleneck. 
protocols 
Moving sequencer 
in case of failure 
the sequencer 
of the current 
these messages. 
sequencer. 
may eventually 
to an­
In 
be­
is unique and only transferred 
are based on the observa­
distributes 
the 
of moving sequencer 
messages 
passed from process 
to pro­
al­
differ in 
of [6]. These protocols 
with ordering 
the role of the sequencer 
tion that rotating 
load associated 
The ability 
to order messages is 
cess using a token. The majority 
gorithms 
are optimizations 
the way the token circulates 
cols the token is propagated 
the token is passed to the least loaded process 
moving sequencer 
the broadcast-broadcast 
to this pattern, 
broadcast 
communication 
to all processes 
to atomically 
pattern. 
a message m, m is 
we are aware of are based on 
broadcast 
protocols 
in the system: in some proto­
along a ring [6, 7], in others, 
in the system; the token holder 
[15]. All the 
According 
1 This idea is conceptually 
similar 
Paxos uses a reduced set of acceptors 
and not to reduce latency. 
to Cheap Palms [20], although 
in order to save hardware 
Cheap 
resources, 
communication  history-based, 
and 
among processes. 
Ring Paxos combines 
ideas from several  broadcast  pro­
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
532 
DSN 2010: Marandi et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:56:19 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
-
steps 
history 
Ring Palms 
LCR[21]  comm. 
pattern 
processes assumption 
failures) 
For each algorithm, 
Algorithm  Class  Communication Number of  Synchrony 
to be the best communication 
when optimiz­
we report its class, 
appears 
ing for throughput. 
the minimum number of communication 
the last process 
cesses required 
sumption 
2f 
f+1  strong 
Totem [2]  privilege (4f+3) 2f+ 1  weak 
Ring+FD [10] privilege (f"+2f) f(f+1)+1 weak 
Table 1. Comparison of atomic broadcast al­
(f+3) 2f+ 1  weak 
gorithms (f: number of tolerated 
of f, and the synchrony 
f + 3 message delays since each message is first sent to the 
around the ring of f + 1 processes, 
in f since a 
more than P nodes. 
coordinator, 
and is delivered 
contrast, 
two-fold 
also rotate 
a property 
(correct 
cesses eventually 
as many processes 
thus multiplied 
protocol 
ring requires 
twice along the ring to guarantee 
equivalent 
or not) delivers 
deliver 
in the ring as Ring-Paxos, 
by 
the number of pro­
as­
is received. 
and thus presents 
Totem puts twice 
its latency 
LCR requires 
increase 
by a factor of four. The atomic broadcast 
to deliver 
as a function 
occurs as soon as 
is 
after the final ip-multicast 
needed for correctness. 
around the ring. Its latency 
In Totem, each message must 
to uniform agreement: 
make one revolution 
With Ring-Paxos, 
in [10] has a latency 
two revolutions 
message delivery 
m  then all correct 
pro­
that is quadratic 
m.  Moreover, 
steps required 
circulates 
in latency. 
if a process 
a message, 
messages 
a message 
In 
a 
is 
6. Performance 
evaluation 
In this section 
we comment on our Ring Paxos proto­
type, and then detail 
sider the performance 
sage losses and in the absence of process 
failures 
relatively 
are hopefully 
often because 
its experimental 
of Ring Paxos in the presence 
We con­
evaluation. 
of mes­
Process 
failures. 
of high network traffic. 
message losses happen 
rare events; 
We ran the experiments 
in a cluster 
of Dell SC1435 
equipped 
with 2 dual-core 
servers 
AMD-Opteron 
CPUs and 4GB of main memory. The servers 
terconnected 
switch (0.1 msec of round-trip 
point in the graph) was repeated 
million 
through an HP ProCurve2900-48G 
time). Each experiment 
(i.e., 
2.0 GHz 
were in­
Gigabit 
6.1. Implementation 
3 to 10 times, with a few 
broadcast 
messages 
in each one. 
"safe-delivery", 
messages; 
long. The coordinator 
ip-multicast 
it to match proposal 
decomposed 
sequence 
the buffer until they can be delivered 
ids to proposal 
by the coordinator. 
uses this buffer to re-transmit 
the acceptors 
lost 
and the learners 
use 
as these are 
contents, 
received 
out of 
of transmission 
losses) 
(i.e., learned) 
Messages 
are stored in 
because 
(e.g., 
in order. 
is composed 
the ids of de­
Each packet ip-multicast 
by the coordinator 
a 
stores 
In one part the coordinator 
and in the second part it stores new proposed 
implements 
of two parts. 
cided values, 
values with their unique ids. The coordinator 
which depends on its buffer size. 
flow control 
mechanism, 
New values are proposed 
as long as there is space in the 
buffer. A buffer entry is freed after the coordinator 
ceived the entry's 
Phase 2B message from its 
neighbor 
to the 
entry. The coordinator 
can re-use a free buffer entry if the 
entries 
avoid holes, which would render garbage collection 
complex). 
6.2. Ring Paxos versus other protocols 
corresponding 
a decision 
that succeed it in the buffer are also free (i.e., we 
and ip-multicast 
message related 
more 
has re­
We experimentally 
compare Ring Paxos to other four 
presented 
protocols: 
LCR [21], Spread [1], Lib­
atomic broadcast 
paxos [22], and the protocol 
after we refer to as Paxos4sb. 
col that achieves 
Spread is one of the most-used 
its. It is based on Totem [2]. Libpaxos 
implementations 
multicast; 
in [16], which here­
LCR is a ring-based 
proto­
(see also Section 
5). 
group communication 
toolk­
and Paxos4sb 
are 
the second is based on unicast. 
of Paxos. The first is entirely 
very high throughput 
based on ip­
We implemented 
all protocols, 
except for Spread and 
in the network, 
that we report we 
and their locations 
with 3 daemons in the same segment, 
We tuned Spread for the best performance 
after varying 
and writers 
we 
the number of daemons, 
num­
Paxos4sb. 
could achieve 
ber of readers 
and the message size. In the experiments 
used a configuration 
one writer per daemon, and a number of readers 
distributed 
Paxos4sb 
has slightly 
our experiments, 
paxos is an open-source 
by our research 
evenly 
data of 
among the daemons. The performance 
was taken from [16]. The setup reported 
in [16] 
than the ones used in 
switch. 
Lib­
Paxos implementation 
but both setups use a gigabit 
more powerful 
processors 
group. 
developed 
Figure 4 shows the throughput 
in megabits 
per second 
graph) as the number of receivers 
increases. 
(left graph) and the number of messages 
ond (right 
both graphs the y-axis is in log scale. 
the exception 
sage sizes and selected 
throughput 
of Paxos4sb, 
(c.f. Table 2). 
we explored 
the space of mes­
the value corresponding 
to the best 
delivered 
per sec­
In 
For all protocols,  with 
Each process maintains 
a circular 
buffer of packets; 
each packet is 8 kbytes long and the buffer is 160 Mbytes 
The graph on the left of Figure 4 roughly places pro­
groups, one group at the top of 
tocols into two distinct 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
533 
DSN 2010: Marandi et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:56:19 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
10 
100 
10000 
-0----0_ 
"0 
8 
<I) '" .... <I) 
100000 .-----,---.,----,---,-----,------, 
*--------------* --------------*--------------*--------------* 
HHHH -----O 
---8-----0 
1000 r--V==F=::::;F",===w- 
d2tJ,_ O
::::::::::*:::
Figure 4. Ring Paxos and other atomic broadcast protocols (message sizes c.f. Table 2) 
Number of receivers 
Number of receivers 30 
/ "  -- ---1'-
-8----8 
Ri-': ::::::
Ring Paxos -+­
LCR --'V-­
---*--­
Spread 
Libpaxos 
····0··· 
-'-8--
Paxos4sb 
20  25 
LCR --'V-­
---* --­
Spread 
Libpaxos 
····0··· 
-----
Paxos4sb 
\"I------'V------'fl------'fl-----""V 
a  5  10  15  20  25  30 
100 '----'----"----'----'------'------' 
<I) :E 
.n 6 :;  500 
,-.,  1000 
'" 0.. 
in throughput 
(Libpaxos), 
5  10 
·---* 
1000 
0. 
'" 
<I) 
00 
ell '" '" 
15 
---. 
a 
processes 
as processes 
grades linearly 
also presents 
in the ring. LCR's throughput 
are added. With respect 
slightly 
to latency, 
with the number of processes. 