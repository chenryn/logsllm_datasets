* When all neighbours replied, DR chosen
 * Highest priority, then highest IP
* Hold time 3.5 times hello
* Auth with MD5 hash
### IPv6 Sparse-Mode Multicast
* For RP, static, v6 BSR and embeeded RP
* Static as before
## Multicast Listener Discovery
* `ipv6 mld join-group ADDRESS`
* Replaces IGMP
 * v1 like IGMPv2
 * v2 like v3, supports SSM
* Queriers elected through MLD
* ICMP messages carry inside, link local in scope, router alert option set
* Three messages, query, report done
 * Done like leave, triggers query to check more receivers on segment
* Options - `ipv6 mld limit` limits number of recipients
* ipv6 multicast-routing auto enables MLD
* Can have :: unspecified addr as source in MLD report, if it has no valid link-local
* SLAAC node require dto join several groups to perform duplicate address detection
 * prior to this, only address is tentative, hence :: possible as source
## Embedded RP
* RP part of m'cast group addr
* Extra RP identity and uses it for shared tree immediately
* Explcit config on device that is RP
Accomplish with following rules
* Always start with FF70::/12
* Scopes are
 * 1 - Int local
 * 2 - link local 
 * 4 - admin local 
 * 5 - site local
 * 8 - org local
 * E - global
* Isolated three values from RP
 * RP Int ID, prefix length in hex, RP prefix
 * `FF7:0:::`
 * Eg, RP of 2001:2:2:2::2/64
  * RP int is 2 (taken from ::2)
  * Prefix length 64 (40 in hex)
  * RP prefix 2001:2:2:2
  * Global scope
  * 32 bit group ID commonly 0
  * FF7E:0240:2001:2:2:2:0:1
* Make sure router knows its an RP (ipv6 pim rp-address)
* Use embedded for group joins on others
## Multicast VLAN registration
* Done for no multicast routing abilities
* Routes packets from an M'cast source VLAN to one or more recipient VLANs
## PIM NBMA Mode
* Spokes don't usually hear each others messages
* PIM excepcts all can
* PIM NBMA treats as collect of P2P links
* Doesn't support dense (apart from SD if MA located on hub and can comm with all spokes)
* `ip pim nbma-mode` on interface
## Multicast over GRE
* Run same commands
* RPF will fail unless RP reachable over tunnel
* Use static mroute to allow it to be an interface for RPF
* Same for group for when SPT switchover kicks in and forwarding back via IGP dest, not tunnel
## Multicast BGP
* Used when requirng different topology from unicast
## Multicast Stub routing
* Useful in PIM-DM when periodic flooding and pruning of mc'ast traffic
* In SM and Bidi, eliminates group to RP mapping cache on stub device
* Intended for f/wing into stub from distribution
 * sources only work in DM
 * SM and bidi filter at first hop and cause RPF failure
 * Rx'ers cant be further downstream than stub
 * Passive - Doesn't send or accept pim messages, assume PIM device is only one in network, and thus is DR and DF for all bidir PIM groups
 * Filter restricts neighbours frmo participating
  * Used for more than 1 m'cast device on LAN otherwise they consider themselves as DR/DR, meaning duplicate traffic + looping 
## Multicst Helper
* Allows transport of b'cast packets across m'cast network, avoiding unnecessary 
* First hop router must translate from b'cast to m'cast
* Last hop vice versa
# RP and MA Placement
* In hub and spoke, no asserts from MP neighbours, as do not see leaves
 * Use ip pim nbma and sparse mode
* MA can't be behind spoke, due to split horizon
# Processes
## Sources sending packets to RP
1. Source sends packet to RP
2. RP sends m'cast packet to all routers/hosts in group, shared tree
3. Routers with local hosts that IGMP join can join source specific S,G SPT
4. Routers on same subnet as soure register with RP
5. RP acces registration only if knows it is needed
**With no requests**
1. Hosts sends m'cast to group, router receives m'ast to same LAN
2. Router sends PIM Register to RP
3. RP sends unicast Register-Stop
 * PIM register encaps first m'cast packet
4. When register stop rx'd, 1m Register-Suppression
5. 5s before timer expires, another register with Null-Register bit set, without encap'd packet
 * Another register stop (back to 4)
 * Doesn't reply, timer expires, R1 sends encap'd m'cast packets in PIM register
## Completion of source registration
1. Host sends m'cast to group
2. Router encaps inside register
3. RP de-encaps and sends
4. RP joints SPT, PIM-SM Join for group S,G to source
5. When source router receives Join, forwards traffic to RP
6. RP sends unicast Register-stop 
## SPT Swithcover
1. Source sends m'cast to first hop
2. First hop to RP
3. RP to router in shared tree
4. PIM-SM Join out preferred int (if better unicast path than RPF to RP)
5. First hop router places another int in forwarding
**J flag (join)** - traffic switches from RPT to SPT
# Config
## IGMP Proxy
**Upstream**
```
int Gi0/0
 ip address 10.1.1.1 255.255.255.0
 ip pim dense-mode
int Gi1/0/0
 ip address 10.2.1.1 255.255.255.0
 ip igmp unidirectional-link
 ip pim dense-mode
```
**Downstream**
```
ip pim rp-address 10.5.1.1 5
access-list 5 permit 239.0.0.0 0.255.255.255
int lo0
 ip address 10.7.1.1 255.255.255.0
 ip pim dense-mode
 ip igmp help-address udl Gi0/0/0 <--- Any reports to this interface can be sent over the UDL interface
 ip igmp proxy-service <--- Checks mroute table for any (*, G) entries with interfaces config'd with ip igmp mroute-proxy, creates and receives one IGMP report on this interface
int Gi0/0/0
 ip address 10.2.1.2 255.255.255.0
 ip pim dense-mode
 ip igmp unidirectional-link
int Gi1/0/0
 ip address 10.5.1.1 255.255.255.0
 ip pim sparse-mode
 ip igmp mroute-proxy lo0 <--- Allows forwarding of IGMP reports to an interface with the ip igmp proxy-service, for all (*, G) groups
```
## AutoRP
**Mapping Agent**
```
ip multicast-routing
ip pim send-rp-discovery scope 10
int Se0
 ip pim sparse-mode
```
**RP**
```
int lo0
 ip address 10.1.10.3 255.255.255.255
 ip pim sparse-mode
int Se0
 ip pim sparse-mode
ip pim send-rp-announce loopback0 scope 10
```
## BSR
**BSR**
```
ip multicast routing
int lo0
 ip pim sparse-mode
int Se0
 ip pim sparse-mode
ip pim bsr-candidate lo0 0 # 0 is priority, default
```
**RP**
```
ip multicast-routing
int lo0
 ip pim sparse-mode
int Se0
 ip pim sparse-mode
ip pim rp-candidate lo0
```
## MSDP
```
int lo2
 ip address 10.1.10.3 255.255.255.255
 ip pim sparse-mode
ip multicast-routing
ip pim rp-candidate lo2
ip pim msdp peer 172.16.1.1
```
```
int lo0
 ip address 172.16.1.1 255.255.255.255
 ip pim sparse-mode
ip multicast-routing
ip pim rp-candidate lo0
ip msdp peer 10.1.10.3 connect-source Lo0
```
## SSM
```
ip multicast-routing
ip pim ssm {default | range ACL} - Default is 232.0.0.0/24
int Fa0/0
 ip pim sparse-mode
 ip igmp version 3
```
## IPv6 BSR
```
ipv6 pim bsr candidate bsr 2001:2:2:2:2::2
ipv6 pim bsr candidate rp 2001:1:1:1::1
ipv6 pim bsr candidate rp 2001:3:3:3::3
```
## Multicast VLAN Registration
```
no ip multicast-routing
mvr
mvr group 239.9.0.1
mvr vlan 1200 --- source
int vlan 1200
 ip pim dense-mode
int vlan 1100
 ip pim dense-mode
int Po20
 mvr type-source
int Gi6/0/1
 mvr type receiver
```
## IGMP Profile
```
ip igmp profile NUMBER {permit| deny} range GROUPS
int Fa0/0
 ip igmp filter PROFILE-NUMBER -- l2 ints only
ip igmp max-groups NUM --- 0-4294967294
```
## PIM Accept RP and Register Filtering
```
ip pim accept-register {list ACL | route-map NAME}
ip pim accept-rp {rp-address|auto-rp} [ACL]
```
* ACL - list of groups
* auto-rp - Accepts joins and registers only for RPs in Auto-RP cache
## Multicast BGP
```
router bgp 65001
 address family ipv4 multicast
  neighbor X.X.X.X activate
  network PREFIX mask MASK
  neighbour X.X.X.X translate-update ipv4 multicast --- IMports v4 uni into multi
```
## Multicast Helper
**First Hop**
```
access-list NUM deny/permit udp {any | host} <--- traffic to translate
int Fa0/0
 ip multicast helper-map broadcast GROUP-ADDR acl
ip forward-protocol udp [port]
```
**Last Hop**
```
int Fa0/0
 ip multicast helper-map GROUP BCAST-ADR ACL
int Fa0/1
 ip direct-broadcast
```
## Multicast Rate limit
```
ip multicast rate-limit {in | out} [video | whiteboard] [group-list ACL] [source-list ACL] kbps
```
* Video and white boradf rate limiting based on UDP ports (from SAP cache), requires ip sap listen
* Default kbps is 0 unless stated
## Multicast Stub
```
int Fa0/0
 ip pim passive
int Fa0/1
 ip pim neighbour-filter ACL
 ip igmp helper-address IP
```
# Verification
```
show ip msdp peer
show ip pim rp
show ip igmp snooping
show ip pim rp mapping
show ipv6 pim bsr rp-cache - shows cache from RPs
show ipv6 bsr candidate-rp
show ipv6 pim interface
show ipv6 mld interface
show ipv6 pim traffic
show ipv6 pim group-map
show mvr
show mvr int
show mvr members
```