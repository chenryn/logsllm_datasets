3 In the Sites pane, double-click the site in the list.
4 In the Security pane, select Enable Secure Sockets Layer.
5 Type a password in the Pass Phrase field.
6 Type the location of the SSL log file in the SSL Log File field.
You can also click the Browse button to locate the folder you want to use.
If you are administering a remote server, file service must be running on the remote 
server to use the Browse button.
7 Type the location of the location of each certificate file in the appropriate field (if 
necessary), or use the Browse button to choose the location.
8 Click the Edit button for the Certificate File, Key File, and CA File fields and paste the 
contents of the appropriate certificate or key in the text field for each. Click OK each 
time you paste text.
9 Click Save.
10 Click Stop Service, wait a moment, and then click Start Service.
 LL2350.book  Page 35  Friday, August 22, 2003  2:32 PM
36
Chapter 3    Managing Websites
Setting Up the SSL Log for a Website
If you are using Secure Sockets Layer (SSL) on your web server, you can set up a file to 
log SSL transactions and errors. 
To set up an SSL log:
1 In Server Admin, click Web for the server you want.
2 Click Settings in the button bar.
3 In the Sites pane, double-click the site you want to edit.
4 In the Security pane, make sure Enable Secure Sockets Layer is checked, then enter the 
pathname for the folder where you want to keep the SSL log in the SSL Log File field.
You can also use the Browse button to navigate to the folder.
5 Click Save.
Web service restarts.
Enabling PHP
PHP (PHP: Hypertext Preprocessor) is a scripting language embedded in HTML that is 
used to create dynamic webpages. PHP provides functions similar to those of CGI 
scripts, but supports a variety of database formats and can communicate across 
networks via many different protocols. The PHP libraries are included in 
Mac OS X Server, but are disabled by default.
See “Installing and Viewing Web Modules” on page 61 for more information on PHP.
To enable PHP:
1 In Server Admin, click Web for the server you want.
2 Click Settings in the button bar.
3 In the Modules pane, scroll to php4_module in the module list and click Enabled for 
the module, if necessary.
4 Click Save. 
Web service restarts.
User Content on Websites
Mac OS X client has a Personal Web Sharing feature, where a user may place content in 
the Sites folder of his or her home directory and have it visible on the web. Mac OS X 
Server has much broader web service capability, which can include a form of personal 
web sharing, but there are important differences between Mac OS X client and 
Mac OS X Server.
 LL2350.book  Page 36  Friday, August 22, 2003  2:32 PM
Chapter 3    Managing Websites
37
Web Service Configuration
By default, on Mac OS X Server:
• Web service ignores any files in the /etc/httpd/users/ folder.
• Workgroup Manager does not make any web service configuration changes.
• Folder listings are not enabled for users.
All folder listings in web service use Apache's FancyIndexing directive, which makes 
folder listings more readable. In Server Admin, the Sites/Options pane for each site has 
a Folder Listing checkbox. This setting enables folder listings for a specific virtual host 
by adding a “+Indexes” flag to Apache's Options directive for that virtual host. If folder 
listings are not explicitly enabled for each site (virtual host), file indexes are not shown.
The site-specific settings do not apply outside the site; therefore site-specific settings 
do not apply to users' home directories. If you want users to have folder-indexing 
capability on their home directories, you need to add suitable directives to Apache's 
configuration files. For a specific user, you add the following directives inside the 
 block in the httpd.conf file:
    Options Indexes MultiViews
    AllowOverride None
    Order allow,deny 
    Allow from all 
Default Content
The default content for the user's Sites folder is an index.html file along with a few 
images. It is important to note that this index.html file has text that describes the 
Personal Web Sharing feature of Mac OS X client. The user should replace that 
index.html file with one suited to the content of his or her Sites folder. 
Accessing Web Content
Once the home directory is created, the content of the Sites folder within the user's 
home directory is visible whenever web service is running. If your server is named 
example.com and the user's short name is refuser, the content of the Sites folder can 
be accessed at the URL http://example.com/~refuser.
If the user has multiple short names, any of those can also be used after the tilde to 
access that same content.
If the user has placed a content file named foo.html in his or her Sites folder, that file 
should be available at http://example.com/~refuser/foo.html.
 LL2350.book  Page 37  Friday, August 22, 2003  2:32 PM
38
Chapter 3    Managing Websites
If the user has placed multiple content files in his or her Sites folder, and cannot modify 
the index.html to include links to those files, the user may benefit from the automatic 
folder indexing described previously. If the “Enable folder listing” setting is enabled, an 
index listing of file names will be visible to browsers at http://example.com/~refuser.
Indexing settings also apply to subfolders placed in the user's Sites folder. If the user 
adds a content subfolder named Example to the Sites folder, and either an index.html 
file is present inside the Example folder, or folder indexing is enabled for that user's site, 
then the folder will be available to browsers at http://example.com/~refuser/Example.
The Module mod_hfs_apple Protects Web Content Against Case Insensitivity 
in the HFS File System
Mac OS X Server 10.3 has a new feature that provides case-sensitive coverage for HFS 
file names. This new feature should mean that the extra protection of mod_hfs_apple 
(discussed below) is not necessary. 
The HFS Extended volume format commonly used for Mac OS X Server preserves the 
case of file names but does not distinguish between a file or folder named “Example” 
and one named “eXaMpLe.” Were it not for mod_hfs_apple, this would be a potential 
issue when your web content resides on such a volume and you are attempting to 
restrict access to all or part of your web content using security realms. If you set up a 
security realm requiring browsers to use a name and a password for read-only access to 
content within a folder named “Protected,” browsers would need to authenticate in 
order to access the following URLs:
http://example.com/Protected
http://example.com/Protected/secret
http://example.com/Protected/sECreT
But they could bypass it by using something like the following:
http://example.com/PrOtECted
http://example.com/PrOtECted/secret
http://example.com/PrOtECted/sECreT
Fortunately, mod_hfs_apple prevents those types of efforts to bypass the security 
realm, and this module is enabled by default.
Note:  mod_hfs_apple operates on folders; it is NOT intended to prevent access to 
individual files. A file named “secret” can be accessed as “seCREt”. This is correct 
behavior, and does not allow bypassing security realms.
 LL2350.book  Page 38  Friday, August 22, 2003  2:32 PM
Chapter 3    Managing Websites
39
Because of the warning message that appears in the web service error log about 
mod_hfs_apple, there have been questions about the function of mod_hfs_apple. The 
warning messages do not indicate a problem with the correct function of 
mod_hfs_apple.
You can verify that mod_hfs_apple is operating correctly by creating a security realm 
and attempting to bypass it with a case-variant of the actual URL. You will be denied 
access and your attempt will be logged in the web service error log with messages 
similar to the following:
[Wed Jul 31 10:29:16 2002] [error] [client 17.221.41.31] Mis-cased URI: /Library/WebServer/
Documents/PrOTecTED/secret, wants: /Library/WebServer/Documents/Protected/
 LL2350.book  Page 39  Friday, August 22, 2003  2:32 PM
 LL2350.book  Page 40  Friday, August 22, 2003  2:32 PM
4
41
4 WebMail
Enable WebMail for the websites on your server to 
provide access to basic email operations by means of a 
web connection.
WebMail adds basic email functions to your website. If your web service hosts more 
than one website, WebMail can provide access to mail service on any or all of the sites. 
The mail service looks the same on all sites. 
WebMail Basics
The WebMail software is included in Mac OS X Server, but is disabled by default.
The WebMail software is based on SquirrelMail (version 1.4.1), which is a collection of 
open-source scripts run by the Apache server. For more information on SquirrelMail, 
see the website www.squirrelmail.org.
WebMail Users
If you enable WebMail, a web browser user can:
• Compose messages and send them
• Receive messages
• Forward or reply to received messages
• Maintain a signature that is automatically appended to each sent message
• Create, delete, and rename folders and move messages between folders
• Attach files to outgoing messages
• Retrieve attached files from incoming messages
• Manage a private address book
• Set WebMail Preferences, including the color scheme displayed in the web browser
To use your WebMail service, a user must have an account on your mail server. 
Therefore, you must have a mail server set up if you want to offer WebMail on your 
websites.
Users access your website’s WebMail page by appending /WebMail to the URL of your 
site. For example, http://mysite.example.com/WebMail/.
 LL2350.book  Page 41  Friday, August 22, 2003  2:32 PM
42
Chapter 4    WebMail
Users log in to WebMail with the name and password they use for logging in to regular 
mail service. WebMail does not provide its own authentication. For more information 
on mail service users, see the mail service administration guide.
When users log in to WebMail, their passwords are sent over the Internet in clear text 
(not encrypted) unless the website is configured to use SSL. For instructions on 
configuring SSL, see “Enabling SSL” on page 35.
WebMail users can consult the user manual for SquirrelMail at www.squirrelmail.org/
wiki/UserManual.
WebMail and Your Mail Server
WebMail relies on your mail server to provide the actual mail service. WebMail merely 
provides access to the mail service through a web browser. WebMail cannot provide 
mail service independent of a mail server.
WebMail uses the mail service of your Mac OS X Server by default. You can designate a 
different mail server if you are comfortable using the Terminal application and UNIX 
command-line tools. For instructions, see “Configuring WebMail” on page 43.
WebMail Protocols
WebMail uses standard email protocols and requires your mail server to support them. 
These protocols are:
• Internet Message Access Protocol (IMAP) for retrieving incoming mail
• Simple Mail Transfer Protocol (SMTP) for exchanging mail with other mail servers 
(sending outgoing mail and receiving incoming mail)
WebMail does not support retrieving incoming mail via Post Office Protocol (POP). Even 
if your mail server supports POP, WebMail does not.
Enabling WebMail
You can enable WebMail for the website (or sites) hosted by your web server. Changes 
take effect when you restart web service.
To enable WebMail for a site:
1 Make sure your mail service is started and configured to provide IMAP and SMTP 
service. 
2 Make sure IMAP mail service is enabled in the user accounts of the users you want to 
have WebMail access. 
For details on mail settings in user accounts, see the user management guide.
3 In Server Admin, click Web in the list for the server you want.
4 Click Settings in the button bar.
 LL2350.book  Page 42  Friday, August 22, 2003  2:32 PM
Chapter 4    WebMail
43
5 In the Sites pane, double-click the site in the list.
6 In the Options pane, select WebMail.
7 Click Save.
Web service restarts.
Configuring WebMail
After enabling WebMail to provide basic email functions on your website, you can 
change some settings to integrate WebMail with your site. You can do this by editing 
the configuration file /etc/squirrelmail/config/config.php or by using the Terminal 
application to run an interactive configuration script with root privileges. Either way, 
you actually change the settings of SquirrelMail, which is open-source software that 
provides WebMail service for the Apache web server of Mac OS X Server.
SquirrelMail, hence WebMail, has several options that you can configure to integrate 
WebMail with your site. The options and their default settings are as follows: 
• Organization Name is displayed on the main WebMail page when a user logs in. The 
default is Mac OS X Server WebMail.
• Organization Logo specifies the relative or absolute path to an image file. 
• Organization Title is displayed as the title of the web browser window while viewing 
a WebMail page. The default is Mac OS X Server WebMail.
• Trash Folder is the name of the IMAP folder where mail service puts messages when 
the user deletes them. The default is Deleted Messages.
• Sent Folder is the name of the IMAP folder where mail service puts messages after 
sending them. The default is Sent Messages.
• Draft Folder is the name of the IMAP folder where mail service puts the user’s draft 
messages. The default is Drafts.
You can configure these and other settings—such as which mail server provides mail 
service for WebMail—by running an interactive Perl script in a Terminal window, with 
root privileges. The script operates by reading original values from the config.php file 
and writing new values back to config.php.
Important:  If you use the interactive configuration script to change any SquirrelMail 
settings, you must also use the script to enter your server’s domain name. If you fail to 
do this, WebMail will be unable to send messages.
The WebMail configuration settings apply to all websites hosted by your web service.
 LL2350.book  Page 43  Friday, August 22, 2003  2:32 PM
44
Chapter 4    WebMail
To configure basic WebMail options:
1 In the Terminal application, type the following command and press Return:
sudo /etc/squirrelmail/config/conf.pl
2 Follow the instructions displayed in the Terminal window to change SquirrelMail 
settings as desired.
3 Change the domain name to your server’s real domain name, such as example.com.
The domain name is the first item on the SquirrelMail script’s Server Settings menu.
The script operates by reading original values from config.php and writing new values  
back to config.php. 
If you don’t enter the server’s actual domain name correctly, the interactive script 
replaces the original value, getenv(SERVER_NAME), with the same value but enclosed 
in single quotes. The quoted value no longer works as a function call to retrieve the 
domain name, and as a result WebMail can’t send messages.
WebMail configuration changes do not require restarting web service unless users are 
logged in to WebMail.
To further customize the appearance (for example, to provide a specific appearance for 
each of your websites), you need to know how to write PHP scripts. In addition, you 
need to become familiar with the SquirrelMail plug-in architecture and write your own 
SquirrelMail plug-ins.
 LL2350.book  Page 44  Friday, August 22, 2003  2:32 PM
5
45
5 Secure Sockets Layer (SSL)
Use Secure Sockets Layer to provide secure transactions 
and encrypted communication to users of the websites 
on your server.
If you want to provide secure transactions on your server, such as allowing users to 
purchase items from a website, you should set up Secure Sockets Layer (SSL) 
protection. SSL lets you send encrypted, authenticated information across the Internet. 
If you want to allow credit card transactions through a website, for example, you can 
protect the information that’s passed to and from that site.
Setting Up SSL
When you generate a certificate signing request (CSR), the certificate authority sends 
you a certificate that you install on your server. They may also send you a CA certificate 
(ca.crt). Installing this file is optional. Normally, CA certificates reside in client 
applications such as Internet Explorer and allow those applications to verify that the 
server certificate originated from the right authority. However, CA certificates expire or 
evolve, so some client applications may not be up to date.
Generating a Certificate Signing Request (CSR) for Your Server
The CSR is a file that provides information needed to set up your server certificate.
To generate a CSR for your server:
1 Log in to your server using the root password and open the Terminal application.
2 At the prompt, type these commands and press Return at the end of each one:
cd
dd if=/dev/randon of=rand.dat bs=1m count=1
openssl genrsa -rand rand.dat -des 1024 > key.pem
3 At the next prompt, type a passphrase, then press Return.
The passphrase you create unlocks the server’s certificate key. You will use this 
passphrase when you enable SSL on your web server.
 LL2350.book  Page 45  Friday, August 22, 2003  2:32 PM
46
Chapter 5    Secure Sockets Layer (SSL)
4 If it doesn’t already exist on your server, create a directory at the location /etc/httpd/
ssl.key.
Make a copy of the key.pem file (created in step 2) and rename it server.key. Then copy 
server.key to the ssl.key directory.
5 At the prompt, type the following command and press Return:
openssl req -new -key key.pem -out csr.pem
This generates a file named csr.pem in your home directory.
6 When prompted, enter the following information:
• Country:  The country in which your organization is located.
• State:  The full name of your state.
• Locality:  The city in which your organization is located.
• Organizational name:  The organization to which your domain name is registered.
• Organizational unit:  Usually something similar to a department name.
• Common name of your web server:  The DNS name, such as server.apple.com.
• Email address:  The email address to which you want the certificate sent.