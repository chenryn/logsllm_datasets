# 十二、分析和检测密码挖掘攻击
随着区块链和加密货币越来越受欢迎，加密挖掘攻击变得越来越引人注目。加密货币是区块链上分散交易的交易费，用于利用计算资源。使用计算资源获取用于验证交易的加密货币的过程称为加密挖掘，并由称为加密挖掘器的软件执行。安全研究人员发现了与受害者基础设施中运行的各种加密矿工二进制文件相关的黑客事件。Kubernetes 集群的默认开放性和挖掘所需的广泛计算能力使 Kubernetes 集群成为加密挖掘攻击的完美目标。Kubernetes 集群的复杂性也使得加密挖掘活动难以检测。
由于我们已经介绍了不同的 Kubernetes 内置安全机制和开源工具来保护 Kubernetes 集群，现在我们将看看如何在具体场景中使用它们。在本章中，我们将首先分析几个已知的加密挖掘攻击，然后讨论使用开源工具检测加密挖掘攻击的机制。最后但同样重要的是，我们将回顾我们在前面几章中讨论的主题，并看看它们应该如何应用于保护我们的环境免受一般攻击。
本章将涵盖以下主题:
*   分析加密挖掘攻击
*   检测挖掘攻击
*   防御攻击
# 分析加密挖掘攻击
在这一节中，我们将首先简要介绍密码挖掘攻击，然后分析一些公开披露的密码挖掘攻击。我们希望您了解加密挖掘攻击模式以及使攻击成为可能的缺陷。
## 加密挖掘攻击简介
区块链构成了密码货币的基础。简而言之，区块链是以区块为代表的数字资产链。这些块具有关于交易以及谁作为数字签名参与交易的信息。每种加密货币都与一个区块链相关联。验证事务记录的过程称为挖掘。采矿为区块链增添了历史，以确保区块在未来不会被修改。采矿是资源密集型的，以确保区块链的分散财产。通过成功开采区块，矿工赚取与交易相关的交易费。所以，如果你有一台笔记本电脑或个人电脑，你也可以用它来开采加密货币；但最有可能的是，你需要一些专用的 GPU 或者专用硬件，比如**现场可编程门阵列** ( **FPGA** )和**专用集成电路** ( **ASIC** )才能做好挖矿工作。Kubernetes 集群中资源的可用性使它们成为攻击者赚取加密货币的理想目标。
密码挖掘攻击就像免费乘坐无线网络一样。就像你的网络带宽将由搭便车者共享一样，你的一些(或大部分)中央处理器或计算资源将在未经你同意的情况下被挖掘过程占用。影响也差不多。如果免费无线骑手正在使用您的无线网络通过 BitTorrent 下载电影，您在观看网飞时可能会体验不佳。当一个挖掘进程正在运行时，同一节点上运行的其他应用将受到严重影响，因为挖掘进程可能会占用大部分时间的 CPU。
密码挖掘攻击已经成为黑客最有吸引力的攻击之一，因为它几乎可以保证从成功的入侵中获得一些好处。小偷来只是为了偷窃或破坏。如果干扰不是入侵的目标，那么密码挖掘攻击可能是黑客的主要选择之一。
据报道，黑客至少有两种方式对目标受害者发起密码挖掘攻击。一种是通过应用漏洞，如跨站点脚本、SQL 注入、远程代码执行等，让黑客获得对系统的访问权限，然后下载并执行 miner 二进制文件。另一种方法是通过恶意的容器映像。当从包含挖掘二进制文件的映像创建容器时，挖掘过程开始。
虽然互联网上有不同类型的加密挖掘二进制文件，但总的来说，挖掘过程计算量大，占用大量的 CPU 周期。采矿过程有时会加入采矿池，以便以协作方式进行采矿。
接下来，让我们看看现实世界中发生的几起加密挖掘攻击。我们将讨论使攻击成为可能的缺陷，并查看攻击模式 rns。
## 对特斯拉 Kubernetes 集群的密码挖掘攻击
2018 年，针对特斯拉 Kubernetes 集群的一次加密挖掘攻击发生了，并被 RedLock 报道。虽然攻击发生在很久以前，但我们至少可以从中学到两点——使攻击成为可能的缺陷和攻击模式 rns。
### 缺陷
黑客潜入了没有密码保护的 Kubernetes 仪表板。从仪表盘上，黑客获得了一些重要的机密来访问亚马逊 S3 buc kets。
### 攻击模式
黑客很好地隐藏了他们的足迹，这样他们就可以避免被发现。以下是一些值得一提的模式:
*   挖掘过程没有占用太多的 CPU 周期，所以 pod 的 CPU 使用率不会太高。
*   与大多数加密挖掘情况不同，挖掘过程没有加入任何众所周知的挖掘池。取而代之的是，它有自己的挖掘服务器，位于云火炬后面，云火炬是一个内容交付网络 T2 服务。
*   挖掘进程和挖掘服务器之间的通信已加密。
在前面的策略中，黑客故意试图隐藏密码挖掘模式，这样他们就可以避开检测。
## Graboid——一种密码蠕虫攻击
这种密码蠕虫攻击是由帕洛阿尔托网络 Unit42 研究团队在 2019 年末发现的。虽然攻击不是针对 Kubernetes 集群的，但这是针对 Docker 守护程序的，它是 Kubernetes 集群的基础支柱之一。在其中一个攻击步骤中，该工具包从 Docker Hub 下载了包含加密挖掘二进制文件的映像并启动。该步骤也可以应用于 Kubernetes 集群 ers。
### 缺陷
Docker 引擎在未经认证和授权的情况下进行配置时暴露在互联网上。攻击者很容易完全控制 dockr 引擎。
### 攻击模式
一旦黑客控制了 Docker 引擎，他们就开始下载一个恶意映像，并启动一个容器。关于恶意容器，以下是一些值得一提的模式:
*   恶意容器联系了命令和控制服务器以下载一些恶意脚本。
*   恶意容器包含一个 Docker 客户端二进制文件，用于控制其他不安全的 Docker 引擎。
*   恶意容器通过 Docker 客户端向其他不安全的 Docker 引擎发起命令，以下载并启动另一个包含加密挖掘二进制文件的映像。
据连接互联网设备的搜索引擎 Shodan 称，有 2000 多个 Docker 引擎暴露在互联网上。重复前面的步骤，使得加密挖掘 wo rm 扩散。
## 吸取的教训
概括一下我们已经讨论过的两种已知的加密挖掘攻击，错误配置是使黑客攻击变得容易的主要问题之一。加密挖掘有一些典型的模式，例如，挖掘过程将与挖掘池通信，并且挖掘过程通常占用大量的 CPU 周期。然而，黑客可能会故意伪装他们的挖掘行为以逃避检测。一旦黑客进入 pod，他们可以启动联系命令和控制服务器下载并执行挖掘二进制文件；另一方面，他们也可以开始侦察。如果您的 Kubernetes 集群中的安全域配置不正确，他们很容易横向移动。接下来，让我们使用前几章中介绍的开源工具来检测 kubernet 集群中的典型加密挖掘活动。
# 检测加密挖掘攻击
在这一节中，我们将讨论使用我们在前面章节中介绍的一些开源工具来检测 Kubernetes 集群中的加密挖掘活动。我们根据已知的加密挖掘模式来检测加密挖掘活动:高 CPU 使用率、与挖掘池的通信、矿工执行的命令行和二进制签名。请注意，每个单独的衡量标准都有自己的局限性。将它们结合在一起肯定会提高检测效率。然而，仍然有一些高级的密码挖掘攻击，比如攻击特斯拉的攻击。您有必要与您的安全团队合作，为您的 Kubernetes 集群应用全面的检测策略，以覆盖各种入侵。
为了演示检测加密挖掘的每个工具，我们模拟一个受害者`nginx` pod:
```
$ kubectl get pods -n insecure-nginx
NAME                              READY   STATUS    RESTARTS   AGE
insecure-nginx-8455b6d49c-z6wb9   1/1     Running   0          163m
```
在`nginx`窗格中，有一个位于`/tmp`目录中的矿工二进制文件:
```
root@insecure-nginx-8455b6d49c-z6wb9:/# ls /tmp
minerd2  perg
```
`minerd2`是挖掘二进制。我们可以假设`minerd2`或者被植入到映像中，或者从命令和控制服务器下载。首先，让我们看看监控中央处理器的使用如何帮助检测加密挖掘活动。
注意
不建议您在生产服务器中运行加密挖掘二进制文件。这仅用于教育目的。
## 监控 CPU 利用率
正如我们在第 10 章[](10.html#_idTextAnchor305)**中讨论的那样，Kubernetes 集群的实时监控和资源管理*，资源管理和资源监控对于维护服务的可用性至关重要。加密挖掘通常占用数吨的 CPU 周期，这导致容器或容器的 CPU 使用率达到明显更高的水平。让我们通过比较一个`nginx` pod 内发生加密挖掘前后的 CPU 使用情况来看一个例子:*
 *![Figure 12.1 – The CPU usage of an nginx pod before mining happens in Grafana metrics ](img/B15566_12_01.jpg)
图 12.1–Grafana 指标中挖掘前 nginx pod 的 CPU 使用情况
前面的截图显示了普罗米修斯和格拉夫纳监控的`insecure-nginx`Pod 的 CPU 使用情况。一般情况下，最大 CPU 使用率小于`0.1`。当执行加密挖掘二进制文件时，您会发现 CPU 使用量猛增:
![Figure 12.2 – The CPU usage of an nginx pod after mining happens ](img/B15566_12_02.jpg)
图 12.2–挖掘发生后 nginx pod 的 CPU 使用情况
中央处理器使用率从`0.07`的平均水平上升到`2.4`左右。无论幕后发生什么，如此巨大的 CPU 使用量提升应该会立即引起你的注意。同样显而易见的是，即使有这种 CPU 激增，也不意味着在 pod 内部有一个加密挖掘二进制程序在运行。CPU 激增也可能是由其他一些原因引起的。
另一方面，如果黑客故意限制密码挖掘攻击的进度，就像对特斯拉的攻击一样，那么中央处理器可能只会有一点点难以察觉的提升。接下来，让我们看看法尔科如何帮助检测密码挖掘 g 活动。
## 检测到矿池的网络流量
一种典型的加密挖掘过程行为是，挖掘过程与同一挖掘池中的其他挖掘过程协作，以便高效地进行挖掘。挖掘过程中，挖掘进程与挖掘池服务器通信。
在 Falco 的默认规则中，有一个规则可以检测到已知挖掘池的出站连接。让我们仔细看看这条规则。首先，有预定义的挖掘端口和挖掘域列表([https://github . com/falcosecurity/Falco/blob/master/rules/Falco _ rules . YAML # l 2590](https://github.com/falcosecurity/falco/blob/master/rules/falco_rules.yaml#L2590)):
```
- list: miner_ports
  items: [
        25, 3333, 3334, 3335, 3336, 3357, 4444,
        5555, 5556, 5588, 5730, 6099, 6666, 7777,
        7778, 8000, 8001, 8008, 8080, 8118, 8333,