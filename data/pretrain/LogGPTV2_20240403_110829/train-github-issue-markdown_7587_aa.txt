## ‚ùì Pytorch 1.0.0 compile failure on Ubuntu 16.04 LTS with CUDA 10.1
I want to install `pytorch = 1.0.0` to implement a specific baseline on a
compute machine with CUDA version of 10.1, However there seems to be no
existing binary compatible with this configuration. So I try to compile the
source.
### Command before Compilation
    # Environment Variables
    export CUDA_HOME=/usr/local/cuda
    export PATH="/usr/local/cuda/bin:$PATH"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
    export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/cuda/lib64"
    source ~/.bashrc 
    # create conda environment with Python=3.6.9
    ...
    # Install basic dependencies
    conda install numpy pyyaml mkl mkl-include setuptools cmake cffi typing
    conda install -c mingfeima mkldnn
    # Add LAPACK support for the GPU
    conda install -c pytorch magma-cuda101
    # clone the pytorch source code
    git clone --recursive https://github.com/pytorch/pytorch
    cd pytorch
    # checkout to version 1.0.0
    git checkout tags/v1.0.0
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
    # install 
    python setup.py install
### logs
    Building wheel torch-1.0.0a0+db5d313
    running install
    setup.py::run()
    running build_deps
    + SYNC_COMMAND=cp
    ++ command -v rsync
    + '[' -x /usr/bin/rsync ']'
    + SYNC_COMMAND='rsync -lptgoD'
    + CMAKE_COMMAND=cmake
    ++ command -v cmake3
    + [[ -x '' ]]
    + USE_CUDA=0
    + USE_FBGEMM=0
    + USE_ROCM=0
    + USE_NNPACK=0
    + USE_MKLDNN=0
    + USE_QNNPACK=0
    + USE_GLOO_IBVERBS=0
    + CAFFE2_STATIC_LINK_CUDA=0
    + RERUN_CMAKE=1
    + [[ 5 -gt 0 ]]
    + case "$1" in
    + USE_CUDA=1
    + shift
    + [[ 4 -gt 0 ]]
    + case "$1" in
    + USE_NNPACK=1
    + shift
    + [[ 3 -gt 0 ]]
    + case "$1" in
    + USE_MKLDNN=1
    + shift
    + [[ 2 -gt 0 ]]
    + case "$1" in
    + USE_QNNPACK=1
    + shift
    + [[ 1 -gt 0 ]]
    + case "$1" in
    + break
    + CMAKE_INSTALL='make install'
    + BUILD_SHARED_LIBS=ON
    + USER_CFLAGS=
    + USER_LDFLAGS=
    + [[ -n '' ]]
    + [[ -n '' ]]
    + [[ -n '' ]]
    ++ uname
    + '[' Linux == Darwin ']'
    +++ dirname ../tools/build_pytorch_libs.sh
    ++ cd ../tools/..
    +++ pwd
    ++ printf '%q\n' /home/chxt/pytorch
    + BASE_DIR=/home/chxt/pytorch
    + TORCH_LIB_DIR=/home/chxt/pytorch/torch/lib
    + INSTALL_DIR=/home/chxt/pytorch/torch/lib/tmp_install
    + THIRD_PARTY_DIR=/home/chxt/pytorch/third_party
    + C_FLAGS=
    + C_FLAGS=' -DOMPI_SKIP_MPICXX=1'
    + LDFLAGS=
    + LD_POSTFIX=.so
    ++ uname
    + [[ Linux == \D\a\r\w\i\n ]]
    + [[ 0 -eq 1 ]]
    + LDFLAGS=' -Wl,-rpath,$ORIGIN'
    + CPP_FLAGS=' -std=c++11 '
    + THD_FLAGS=
    + [[ 0 -eq 1 ]]
    + CUDA_NVCC_FLAGS=' -DOMPI_SKIP_MPICXX=1'
    + [[ -z '' ]]
    + CUDA_DEVICE_DEBUG=0
    + '[' -z '' ']'
    ++ getconf _NPROCESSORS_ONLN
    + MAX_JOBS=40
    + BUILD_TYPE=Release
    + [[ -n '' ]]
    + [[ -n '' ]]
    + echo 'Building in Release mode'
    Building in Release mode
    + mkdir -p /home/chxt/pytorch/torch/lib/tmp_install
    + for arg in '"$@"'
    + [[ caffe2 == \c\a\f\f\e\2 ]]
    + build_caffe2
    + [[ -z '' ]]
    + EXTRA_CAFFE2_CMAKE_FLAGS=()
    + [[ -n '' ]]
    + [[ -n /home/chxt/anaconda3;/home/chxt/anaconda3/envs/rcan/lib/python3.6/site-packages ]]
    + EXTRA_CAFFE2_CMAKE_FLAGS+=("-DCMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH")
    + [[ 1 -eq 1 ]]
    + cmake /home/chxt/pytorch -DPYTHON_EXECUTABLE=/home/chxt/anaconda3/envs/rcan/bin/python -DPYTHON_LIBRARY=/home/chxt/anaconda3/envs/rcan/lib/libpython3.6m.so.1.0 -DPYTHON_INCLUDE_DIR=/home/chxt/anaconda3/envs/rcan/include/python3.6m -DBUILDING_WITH_TORCH_LIBS=ON -DTORCH_BUILD_VERSION=1.0.0a0+db5d313 -DCMAKE_BUILD_TYPE=Release -DBUILD_TORCH=ON -DBUILD_PYTHON=ON -DBUILD_SHARED_LIBS=ON -DBUILD_BINARY=OFF -DBUILD_TEST=ON -DINSTALL_TEST=ON -DBUILD_CAFFE2_OPS=ON -DONNX_NAMESPACE=onnx_torch -DUSE_CUDA=1 -DUSE_DISTRIBUTED=ON -DUSE_FBGEMM=0 -DUSE_NUMPY= -DNUMPY_INCLUDE_DIR=/home/chxt/anaconda3/envs/rcan/lib/python3.6/site-packages/numpy/core/include -DUSE_SYSTEM_NCCL=OFF -DNCCL_INCLUDE_DIR= -DNCCL_ROOT_DIR= -DNCCL_SYSTEM_LIB= -DCAFFE2_STATIC_LINK_CUDA=0 -DUSE_ROCM=0 -DUSE_NNPACK=1 -DUSE_LEVELDB=OFF -DUSE_LMDB=OFF -DUSE_OPENCV=OFF -DUSE_QNNPACK=1 -DUSE_FFMPEG=OFF -DUSE_GLOG=OFF -DUSE_GFLAGS=OFF -DUSE_SYSTEM_EIGEN_INSTALL=OFF -DCUDNN_INCLUDE_DIR= -DCUDNN_LIB_DIR= -DCUDNN_LIBRARY= -DUSE_MKLDNN=1 -DNCCL_EXTERNAL=1 -DCMAKE_INSTALL_PREFIX=/home/chxt/pytorch/torch/lib/tmp_install -DCMAKE_C_FLAGS= -DCMAKE_CXX_FLAGS= '-DCMAKE_EXE_LINKER_FLAGS= -Wl,-rpath,$ORIGIN ' '-DCMAKE_SHARED_LINKER_FLAGS= -Wl,-rpath,$ORIGIN ' -DTHD_SO_VERSION=1 '-DCMAKE_PREFIX_PATH=/home/chxt/anaconda3;/home/chxt/anaconda3/envs/rcan/lib/python3.6/site-packages'
    -- std::exception_ptr is supported.
    -- NUMA is disabled
    -- Turning off deprecation warning due to glog.
    -- Current compiler supports avx2 extension. Will build perfkernels.
    -- Current compiler supports avx512f extension. Will build fbgemm.
    -- Building using own protobuf under third_party per request.
    -- Use custom protobuf build.
    -- Caffe2 protobuf include directory: $$
    -- The BLAS backend of choice:MKL
    -- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
    --   Library mkl_intel_lp64: /home/chxt/anaconda3/lib/libmkl_intel_lp64.so
    --   Library mkl_gnu_thread: /home/chxt/anaconda3/lib/libmkl_gnu_thread.so
    --   Library mkl_core: /home/chxt/anaconda3/lib/libmkl_core.so
    -- Found OpenMP_C: -fopenmp  
    -- Found OpenMP_CXX: -fopenmp  
    --   Library gomp: -fopenmp
    --   Library pthread: /usr/lib/x86_64-linux-gnu/libpthread.so
    --   Library m: /usr/lib/x86_64-linux-gnu/libm.so
    --   Library dl: /usr/lib/x86_64-linux-gnu/libdl.so
    -- Brace yourself, we are building NNPACK
    -- Found PythonInterp: /home/chxt/anaconda3/envs/rcan/bin/python (found version "3.6.9") 
    -- NNPACK backend is x86-64
    -- Failed to find LLVM FileCheck
    -- git Version: v1.4.0-505be96a
    -- Version: 1.4.0
    -- Performing Test HAVE_STD_REGEX -- success
    -- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
    -- Performing Test HAVE_POSIX_REGEX -- success
    -- Performing Test HAVE_STEADY_CLOCK -- success
    -- Using third party subdirectory Eigen.
    Python 3.6.9 :: Anaconda, Inc.
    -- Found PythonInterp: /home/chxt/anaconda3/envs/rcan/bin/python (found suitable version "3.6.9", minimum required is "2.7") 
    -- Could NOT find pybind11 (missing: pybind11_DIR)
    -- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) 
    -- Using third_party/pybind11.
    -- Found CUDA: /usr/local/cuda (found suitable version "10.1", minimum required is "7.0") 
    -- Caffe2: CUDA detected: 10.1
    -- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc
    -- Caffe2: CUDA toolkit directory: /usr/local/cuda
    -- Caffe2: Header version is: 10.1
    -- Could NOT find CUDNN (missing: CUDNN_INCLUDE_DIR CUDNN_LIBRARY) 