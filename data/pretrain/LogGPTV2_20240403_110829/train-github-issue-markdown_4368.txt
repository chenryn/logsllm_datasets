### Steps to Reproduce the Problem

1. Create a package named `foo`.
2. Write a test in `foo` that imports another package named `bar`.
3. Introduce a compile error in `bar` (e.g., an undefined reference to `net`).
4. In your editor, set up the build step as follows:
   ```sh
   go test -i -c foo
   ```
5. When this command executes successfully, it indicates that your test is ready to run.

### Expected Output

When you run the command:
```sh
go test -i -c foo
```
You should see the following output:
```sh
# bar
src/bar/bar.go:3: undefined: net
```

### Observed Output

However, the actual output is:
```sh
+ go test -i -c foo
# bar
src/bar/bar.go:3: undefined: net
warning: building out-of-date packages:
    bar
installing these packages with 'go test -i foo' will speed future tests.
# bar
src/bar/bar.go:3: undefined: net
```

### Additional Information

- **Compiler**: 6g
- **Operating System**: Linux
- **Go Version**:
  ```sh
  go version devel +02e5cb24c95a Tue May 28 17:59:10 2013 -0700 linux/amd64
  ```

### Notes

This issue might be related to [issue #3104](https://github.com/golang/go/issues/3104).

---

This revised text provides a clear and structured format for the steps to reproduce the problem, expected and observed outputs, and additional information.