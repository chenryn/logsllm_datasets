# 使用 GitHub 的 Git
> 原文：
到目前为止，我们所做的所有操作都是在本地 repo 中进行的，而 git 也在协作环境中帮助我们。GitHub 是互联网上的一个地方，在这里你可以集中托管你的 git repos 并与其他开发者合作。
大部分工作流程将与我们讨论的一样，只是增加了一些东西:
1.  Pull:从 github(中央)回购中获取最新的变更
2.  推送:将您的更改推送到 github repo，以便所有人都可以使用
GitHub 已经就此写了很好的指南和教程，你可以在这里参考它们:
*   [GitHub Hello World](https://guides.github.com/activities/hello-world/)
*   [Git 手册](https://guides.github.com/introduction/git-handbook/)
## 钩住
Git 还有另一个很好的特性，叫做 hooks。钩子基本上是当某个事件发生时被调用的脚本。挂钩的位置如下:
```sh
$ ls .git/hooks/
applypatch-msg.sample     fsmonitor-watchman.sample pre-applypatch.sample     pre-push.sample           pre-receive.sample        update.sample
commit-msg.sample         post-update.sample        pre-commit.sample         pre-rebase.sample         prepare-commit-msg.sample 
```
名称是不言自明的。当你想在特定事件发生时做特定的事情时，这些钩子是有用的。如果你想在推送代码之前运行测试，你应该设置`pre-push`钩子。让我们试着创建一个预提交钩子。
```sh
$ echo "echo this is from pre commit hook" > .git/hooks/pre-commit
$ chmod +x .git/hooks/pre-commit 
```
我们基本上是在 hooks 文件夹中创建一个名为`pre-commit`的文件，并使其可执行。现在，如果我们提交，我们应该看到消息被打印出来。
```sh
$ echo "sample file" > sample.txt
$ git add sample.txt
$ git commit -m "adding sample file"
this is from pre commit hook     # <===== THE MESSAGE FROM HOOK EXECUTION
[master 9894e05] adding sample file
1 file changed, 1 insertion(+)
create mode 100644 sample.txt 
```