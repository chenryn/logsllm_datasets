### 6.2 Simple & Burst Model

In this section, we evaluate and compare the battery lifetime distributions for the simple and burst models.

**Figure 10: Battery Lifetime Distribution for the Simple Model**

Figure 10 illustrates the lifetime distribution for the simple model (refer to Figure 4) under three different battery settings. The left set of curves is calculated for a capacity \( C = 500 \, \text{mAh} \) and \( c = 1 \), meaning all the capacity is in the available-charge well. The rightmost curve represents \( C = 800 \, \text{mAh} \) and \( c = 1 \). This curve is computed using a uniformisation-based algorithm [25], which is suitable for this specific case and the small number of states. The middle set of curves corresponds to the KiBaMRM with \( C = 800 \, \text{mAh} \), \( c = 1 \), and \( k = 4.5 \times 10^{-5} \, \text{s}^{-1} = 1.96 \times 10^{-2} \, \text{h}^{-1} \).

\[
\begin{array}{c}
\text{Probability of Battery Not Being Empty} \\
\hline
1.0 \\
0.8 \\
0.6 \\
0.4 \\
0.2 \\
0.0 \\
\end{array}
\quad
\begin{array}{c}
\text{Time (hours)} \\
\hline
0 \\
5 \\
10 \\
15 \\
20 \\
25 \\
30 \\
\end{array}
\]

- **C=500, c=1, Δ=25**
- **C=500, c=1, Δ=2**
- **C=500, c=1, simulation**
- **C=800, c=0.625, Δ=25**
- **C=800, c=0.625, Δ=2**
- **C=800, c=0.625, simulation**
- **C=800, c=1, exact**

For the simple model, it is feasible to compute good approximations using the Markovian approximation algorithm. For the leftmost set of curves, only the available-charge well is discretized, while for the middle set of curves, both wells are discretized. This results in a better approximation for the left curves compared to the middle curves.

From Figure 10, it is evident that if only 62.5% of the capacity is available (leftmost curves), the battery is almost certainly empty (with a probability > 99%) after about 17 hours. If the remaining charge is initially in the bound-charge well, the battery will be empty after approximately 23 hours. If all the capacity is readily available (rightmost curve), the battery will last about 25 hours. Therefore, for this workload model, it is generally not possible to utilize the total capacity of 800 mAh if it is distributed between the bound-charge well and the available-charge well. However, a large fraction of the total capacity becomes available, as shown by the fact that the middle curves are closer to the right curve than to the left set of curves.

**Figure 11: Battery Lifetime Distribution for the Simple and Burst Models**

Figure 11 compares the battery lifetime distributions of the simple and burst models. The burst model condenses the send activity, leading to more time spent in sleep mode, which extends the battery life. Consequently, the lifetime distribution curve for the burst model lies to the right of the one for the simple model. For example, after 20 hours, the battery is empty with a probability of about 95% when using the simple model, whereas it is empty with a probability of only about 89% in the case of the burst model.

\[
\begin{array}{c}
\text{Probability of Battery Not Being Empty} \\
\hline
1.0 \\
0.9 \\
0.8 \\
0.7 \\
0.6 \\
0.5 \\
0.4 \\
0.3 \\
0.2 \\
0.1 \\
0.0 \\
\end{array}
\quad
\begin{array}{c}
\text{Time (hours)} \\
\hline
0 \\
5 \\
10 \\
15 \\
20 \\
25 \\
30 \\
\end{array}
\]

- **Simple Model**
- **Burst Model**

### 7. Conclusion

This paper has two primary objectives. First, we discuss the increasing importance of incorporating battery aspects into system models, emphasizing the need to consider the nonlinear aspects of battery models. Starting from the analytical KiBaM, we developed the KiBaMRM, a reward-inhomogeneous Markov reward model for batteries. This model allows us to assess the battery lifetime distribution for stochastic workload models. We note that the KiBaM does not cover all aspects of battery behavior (see Section 2). However, the class of time- and reward-inhomogeneous MRMs is flexible enough to describe more realistic battery models.

For the actual computation of the battery lifetime distribution, we provided an efficient approximation algorithm where the accumulated rewards are discretized. The computation then reduces to the transient solution of a Continuous-Time Markov Chain (CTMC). Using this algorithm, we evaluated the lifetime of some small workload models, comparing the results to simulations. The algorithm performed poorly in approximating the almost deterministic lifetime for the on/off model but gave good results for the simple and burst modes of a wireless device. The computed lifetime distributions showed that, in general, the battery lasts longer for the burst model than for the simple model.

Future work will focus on exploring more realistic MRMs for batteries and evaluating real-world power-aware devices.

---

**References**

[1] IEEE Computer, vol. 38, no. 11. IEEE Press, 2005.

[2] D. Rakhmatov and S. Vrudhula, “An analytical high-level battery model for use in energy management of portable electronic systems,” in Proceedings of the International Conference on Computer Aided Design (ICCAD’01), 2001, pp. 488–493.

[3] Overview of lithium ion. Available: http://www.panasonic.com/industrial/battery/oem/images/pdf/Panasonic LiIon Overview.pdf

[4] SPICE. Available: http://bwrc.eecs.berkeley.edu/Classes/IcBook/SPICE/

[5] K. Lahiri, A. Raghunathan, S. Dey, and D. Panigrahi, “Battery-driven system design: a new frontier in low power design,” in 7th Asia and South Pacific Design Automation Conference (ASP-DA’02), 2002, pp. 261–267.

[6] C. Chiasserini and R. Rao, “Pulsed battery discharge in communication devices,” in Proceedings of the 5th International Conference on Mobile Computing and Networking, 1999, pp. 88–95.

[7] D. Panigrahi, C. Chiasserini, S. Dey, R. Rao, A. Raghunathan, and K. Lahiri, “Battery life estimation of mobile embedded systems,” in Proceedings of the 14th International Conference on VLSI Design, 2001, pp. 57–63.

[8] J. Manwell and J. McGowan, “Lead acid battery storage model for hybrid energy systems,” Solar Energy, vol. 50, pp. 399–405, 1993.

[9] V. Rao, G. Singhal, A. Kumar, and N. Navet, “Battery model for embedded systems,” in VLSID ’05. Washington, DC, USA: IEEE Computer Society, 2005, pp. 105–110.

[10] J. F. Meyer, “On evaluating the performability of degradable computing systems,” IEEE Transactions on Computers, vol. 29, no. 8, pp. 720–731, 1980.

[11] ——, “Performability: a retrospective and some pointers to the future,” Performance Evaluation, vol. 14, no. 3, pp. 139–156, 1992.

[12] A. Bobbio and L. Roberti, “Distribution of the minimal completion time of parallel tasks in multi-reward semi-Markov models,” Performance Evaluation, vol. 14, pp. 239–256, 1992.

[13] G. Horton, V. G. Kulkarni, D. M. Nicol, and K. S. Trivedi, “Fluid stochastic Petri nets: Theory, applications, and solution techniques,” European Journal of Operational Research, vol. 105, pp. 184–201, 1998.

[14] A. Horvath and M. Gribaudo, “Matrix geometric solution of fluid stochastic Petri nets,” in Proceedings of the 4th International Conference on Matrix Analytic Methods in Stochastic Models. World Scientific, 2002.

[15] B. R. Haverkort, H. Hermanns, J.-P. Katoen, and C. Baier, “Model checking CSRL-specified performability properties,” in Proceedings of the 5th International Workshop on Performability Modeling of Computer and Communications Systems (PMCCS’01), 2001, pp. 105–109.

[16] B. R. Haverkort, L. Cloth, H. Hermanns, J.-P. Katoen, and C. Baier, “Model checking performability properties,” in Proceedings of the International Conference on Dependable Systems and Networks (DSN’02). IEEE Press, 2002, pp. 102–112.

[17] L. Cloth, “Model Checking Algorithms for Markov Reward Models,” Ph.D. dissertation, University of Twente, 2006.

[18] B. Haverkort and J. Katoen, “The performability distribution for nonhomogeneous Markov-reward models,” in Proceedings 7th Performability Workshop (PMCCS’05), 2005, pp. 38–42.

[19] M. Gribaudo and A. Horvath, “Fluid stochastic Petri nets augmented with flush-out arcs: A transient analysis technique,” IEEE Transactions on Software Engineering, vol. 28, no. 10, pp. 944–955, 2002.

[20] L. Cloth, B. Haverkort, and M. Jongerden, “Evaluation of battery lifetimes using inhomogeneous Markov reward models,” CTIT, University of Twente, Tech. Rep. 06-58, 2006.

[21] N. van Dijk, “Uniformisation for nonhomogeneous Markov chains,” Operations Research Letters, vol. 12, 1992.

[22] A. Rindos, S. Woolet, I. Viniotis, and K. Trivedi, “Exact methods for the transient analysis of nonhomogeneous continuous time Markov chains,” in 2nd International Workshop on the Numerical Solution of Markov Chains, 1995, pp. 121–133.

[23] A. van Moorsel and K. Wolter, “Numerical solution of non-homogeneous Markov processes through uniformisation,” in Proceedings of the 12th European Simulation Multiconference, 1998, pp. 710–717.

[24] M. Telek, A. Horváth, and G. Horváth, “Analysis of inhomogeneous Markov reward models,” Linear Algebra and its Applications, vol. 386, pp. 383–405, 2004.

[25] B. Sericola, “Occupation times in Markov processes,” Communications in Statistics — Stochastic Models, vol. 16, no. 5, pp. 479–510, 2000.