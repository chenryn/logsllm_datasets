# Let's Dance in the Cache: Destabilizing Hash Table on Microsoft IIS

## Speaker: Orange Tsai
### USA 2022

**For a Protected Area**

**Example Passwords:**
- Th1s-1s-@-Sup3r-Str0ng-P@33w0rD!
- DI1D8XF4, T9433W0N, R04K85R8, OR7SHSQM, 4IDF7LAU, T9ILKRJO, DIO376UC, 29WM5WPU, XRXNHYS8, I0XVSRY7, 4J4F29DY, BA55FF5B, VJ5QUDCJ, XS9B66QE, I1BICTG1, DJH24HH4, OSNADCSM, FSNPV263, 91T4TLRP, 91UKBHBR, 2AWCRJ5Z, I212PEZ3, XT2A3HD6, MK4CSS3L, OT844EAG, 92D4O9UT, FTM3BRCO, FTNJ0N3Q, 4KT30N6F, 92TWJEJM, OU131W48, KC4U2MRT, VL62A63D, 93DWE2MQ, OUFLIRN9, MLK1OC5L, VLKKY1ME, 2CONWY0F, 03R2ZXJM, AND MORE

**All passwords are valid.**

## About the Speaker: Orange Tsai
- **Specialization:** Web and Application Vulnerability Research
- **Position:** Principal Security Researcher at DEVCORE
- **Speaker at Conferences:** Black Hat USA/ASIA, DEFCON, HITB AMS/GSEC, POC, CODE BLUE, Hack.lu, WooYun, and HITCON
- **Former Captain:** HITCON CTF Team
- **Selected Awards and Honors:**
  - 2017: 1st place in Top 10 Web Hacking Techniques
  - 2018: 1st place in Top 10 Web Hacking Techniques
  - 2019: Winner of Pwnie Awards "Best Server-Side Bug"
  - 2021: Champion and "Master of Pwn" at Pwn2Own
  - 2021: Winner of Pwnie Awards "Best Server-Side Bug"

## Outline
1. Introduction
2. Our Research
3. Vulnerabilities
4. Recommendations

## Hash Table
- **Definition:** The most fundamental data structure in computer science used to store and retrieve data efficiently.
- **Example:**
  ```python
  table = {
      "one": "apple",
      "two": "banana",
  }
  table["three"] = "lemon"
  table["four"] = "orange"
  del table["two"]
  ```

## What is a Hash-Flooding Attack?
- **Objective:** To degrade the performance of a hash table by causing all records to be placed into the same bucket, effectively turning the hash table into a single linked list.
- **Impact:** In the worst case, operations that are typically O(1) (constant time) become O(n) (linear time), leading to significant performance degradation.

### Visual Representation:
- **Key Set:** `{"banana", "lemon", "orange", "apple", "mango", "QIH5VQ", "7TZUCP", "KJNT08", "MN6RJL", "TJDI4X"}`
- **Buckets (Average Case):**
  - 00: banana
  - 01: lemon
  - 02: orange
  - 13: apple
  - 14: mango
  - 15: QIH5VQ
  - 16: 7TZUCP
  - 17: KJNT08
  - 18: MN6RJL
  - 19: TJDI4X

- **Buckets (Worst Case - Hash Flooding):**
  - 00: banana
  - 01: lemon
  - 02: orange
  - 03: apple
  - 04: mango
  - 05: QIH5VQ
  - 06: 7TZUCP
  - 07: KJNT08
  - 08: MN6RJL
  - 09: TJDI4X
  - 10: AAAAAA
  - 11: AAAAAA
  - 12: AAAAAA
  - 13: AAAAAA
  - 14: AAAAAA
  - 15: AAAAAA
  - ...
  - 31: AAAAAA

- **Hash Function:** `H(KEY) % 32`

### Insertion in the Worst Case:
- All keys are hashed to the same bucket, resulting in a linked list with linear search time.

This presentation will delve into the details of the research, vulnerabilities, and recommendations for mitigating such attacks.