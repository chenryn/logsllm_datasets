and CRj are disjoint if there do not exist any two neigh-
(cid:1) ∈ CRj,
boring nodes k and k
otherwise, they are adjoining. Multiple containment regions
CR0, CR1, . . . , CRm (m ≥ 1) are disjoint if there do not ex-
ist any two containment regions CRi and CRj (i (cid:9)= j) that
are adjoining. Then, we have
such that k ∈ CRi and k
(cid:1)
Lemma 2 Starting at an arbitrary state q0 where the per-
turbed regions are S0, S1, . . . , Sm and their containment re-
gions are disjoint, every system computation reaches a state
in L within O(maxi∈0..m |Si|) time, and the range of contam-
ination is O(maxi∈0..m |Si|).
Given any two perturbed regions Si and Sj (i (cid:9)= j) at a
state q, the half-distance between Si and Sj is half of the min-
imum distance from a node in Si to another node in Sj, that
(cid:22), where dist(k, k
is, mink∈Si,k(cid:1)∈Sj
, G.q) de-
(cid:1)
in graph
notes the minimum distance between node k and k
G.q. Then, Lemma 2 implies
(cid:21) dist(k,k(cid:1),G.q)
2
(cid:1)
Corollary 1 Starting at an arbitrary state q0 where the per-
turbed regions are S0, S1, . . . , Sm and the half-distance be-
tween any two of them is ω(maxi∈0..m |Si|), every system
computation reaches a state in L within O(maxi∈0..m |Si|)
time, and the range of contamination is O(maxi∈0..m |Si|).
Multiple containment regions CR0, CR1, . . . , CRm (m ≥
1) are adjoining if, for any two containment regions CRi and
CRj (i (cid:9)= j), either CRi and CRj are adjoining or there ex-
ist a sequence of containment region CRk0, CRk1 , . . . , CRkt
such that CRi are adjoining with CRk0, CRkn are adjoining
with CRkn+1 (n = 0, . . . , t−1), and CRkt are adjoining with
CRj. Then, we have
Lemma 3 Starting at an arbitrary state q0 where the per-
turbed regions are S0, S1, . . . , Sm and their containment re-
gions are adjoining, every system computation reaches a state
i=0 |Si|) time, but the range of contamina-
in L within O(
tion is still O(maxi∈0..m |Si|).
(cid:5)m
Lemma 1, 2, and 3 imply
3The ﬁxpoint of a protocol is a system state where there is no enabled
protocol action. Therefore, it is also a stable state of the system.
Theorem 1 (Local stabilization) Starting at an arbitrary
state q0, every system computation reaches a state in L
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:56:18 UTC from IEEE Xplore.  Restrictions apply. 
within O(P (q0)) time, and the range of contamination is
O(MAXP), where MAXP denotes the number of nodes in
the largest perturbed region at q0 and is o(P (q0)). That is,
the system is F-local stabilizing, where F is a linear func-
tion.
By Theorem 1, we see that LSRP solves the shortest path
routing problem in a linear-local stabilizing manner.
5.2 Properties of loop freedom and quick loop re-
moval
Theorem 2 (Loop freedom) Starting at an arbitrary state
where there is no loop, every system computation reaches a
state in L, and there is no loop at any state along the compu-
tation.
From Theorem 2, we see that there is no loop in the system
during stabilization if the only possible fault in a system is
node fail-stop, because no loop can be formed just by node
fail-stop, and there is no loop at any initial state of a system
computation if the only fault is node fail-stop.
Theorem 3 (Quick loop removal) Starting at an arbitrary
state where there exists at least one loop, every system com-
putation reaches a state where there is no loop after at most
(dsc + U) time.
6
Impact of network topology on local stabi-
lization
(cid:1)
0, E.q
For the problem of shortest path routing,
the network
topology of a system can affect the perturbation size, the range
of contamination, and the self-stabilization time in the sense
that higher edge density is conducive to local stabilization.
(cid:1)
0) at state q
Given a system topology G.q0(V.q0, E.q0) at state q0,
if we add some edges to G.q0 and obtain another system
(cid:1)
(cid:1)
0(V.q
0 with denser edges (i.e.
topology G.q
E.q0 ⊂ E.q
(cid:1)
0), then for every node that is both in G.q0 and in
(cid:1)
0, the number of different shortest paths to the destination
G.q
(cid:1)
0. Then, if the
node in G.q0 will be no more than that in G.q
(cid:1)
(cid:1)
same node i fail-stops in both G.q0 and G.q
0, and G.q0, G.q
0
respectively, the number of nodes that are
transit to G.q, G.q
perturbed due to the fail-stop of i in G.q will be no less than
. More generally, if the same faults occur when
that in G.q
(cid:1)
0, and the system reaches q and
the system is at q0 and at q
(cid:1)
respectively after the faults, the perturbation size at state q
q
(cid:1)
. Moreover, even if the pertur-
will be no less than that at q
are the same, the potential mistakenly
bation sizes at q and q
(cid:1)
initiated containment wave will propagate no farther in G.q
than in G.q (see [16] for details). Therefore, the time taken
for the system to stabilize from q and the range of contamina-
tion during stabilization are no less than that with respect to
(cid:1)
q
. Formally, this fact is presented in Proposition 1.
(cid:1)
(cid:1)
(cid:1)
(cid:1)
such that V.q = V.q
Proposition 1 Given a system G and two system states q and
, and (∀i : i ∈ V.q ⇒
(cid:1)
q
(cid:1)), and the
q(i) = q
time taken for G to stabilize from q is no less than that with
respect to q
(cid:1)(i)), then P (q) ≥ P (q
(cid:1)), Rc(q) ≥ Rc(q
, E.q ⊆ E.q
(cid:1)
(cid:1)
.
(We give an example where higher edge density helps in
local stabilization in [16].)
In wireless networks, especially in wireless sensor net-
works [15], the edges tend to be dense because of dense node
distribution and wireless transmission property (i.e., nodes
within transmission range of one another are connected with
one another). Our conclusion, therefore, is that wireless (sen-
sor) networks with higher edge density are likely to contain
faults more tightly and to stabilize faster.
7 Related work
A loop-free distance-vector protocol DUAL was proposed
in [3] and incorporated into EIGRP [6]. DUAL does not
achieve local stabilization: unnecessary global diffusing com-
putations can be introduced in DUAL when local transient
perturbations, such as congestion, occur. This phenomenon
becomes worse when networks are under stress, wherein tran-
sient faults happen more frequently for some period of time
[14]. Furthermore, in DUAL, if a loop is already formed (e.g.,
due to state corruption), the time taken to break the loop is
proportional to the length of the loop; in contrast, a loop can
be broken within small constant time in LSRP, irrespective of
the loop length.
In [15], we proposed a local stabilizing protocol GS3 for
clustering as well as shortest path routing in wireless networks
whose nodes lie in a planar and whose density is high. The
differences in model assumptions make LSRP and GS3 in-
comparable.
In [4], algorithms were proposed to contain a
single state-corruption during stabilization of a spanning tree;
these algorithms do not deal with multiple faults or node fail-
stops. In [5], a fault-containing self-stabilizing algorithm was
proposed for a consensus problem, but it considers only a lin-
ear topology and its range of contamination can be exponen-
tial in the perturbation size; also, the algorithm does not apply
to the problem of shortest path routing.
In [4] and [11], the concept of fault containment was pro-
posed. However, in [4], it only guarantees fault containment
for the major part of system states, which is not strict enough
to guarantee that the amount of work (for example, the num-
ber of actions executed) needed for a system to stabilize is
a function of the perturbation size.
In [11], it requires the
range of contamination to be constant, which is too strict to
be applied to such problems as routing, where the locality of
problems4 is not constant.
4The locality of a problem is the maximum minimum distance between
any two nodes that have to be involved in the deﬁnition of the problem.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:56:18 UTC from IEEE Xplore.  Restrictions apply. 
In [2], a self-stabilizing algorithm was proposed for main-
taining a spanning tree in a network. Time-optimal versions
were proposed later [1]. But none of these contain faults lo-
cally or achieve local stabilization.
8 Concluding remarks
We formulated the concepts of perturbation size, F-local
stabilization, and range of contamination, in order to formally
characterize local stabilization properties of networked and
distributed systems. These concepts are generically applica-
ble to networked and distributed systems, and are thus inter-
esting in their own right.
For the problem of local stabilization in shortest path rout-
ing, we designed LSRP. LSRP guarantees both local stabi-
lization and loop freedom during stabilization. In LSRP, we
introduced delays in action execution to control the propa-
gation speeds of diffusing waves. This does not slow down
the convergence of a system, because the stabilization time is
only a linear function of the perturbation size instead of the
system size, which is especially desirable in large-scale sys-
tems where faults generally occur only at a small part of the
system. Moreover, the method of introducing delays in ac-
tion execution is also commonly used in Internet routing in
order to reduce control overhead and routing ﬂaps. For exam-
ple, timer MinRouteAdvertisementInterval is used in BGP to
control the frequency of route exchange between BGP peers.
The timer is similar to the delay introduced for the stabiliza-
tion wave in LSRP. In implementing LSRP, we only need to
introduce smaller timers for the containment wave and super-
containment wave.
We observed that higher edge density in a system can re-
duce the perturbation size, the range of contamination, and
the self-stabilization time. This leads to the interesting ques-
tion of how to design or self-conﬁgure a network such that
the perturbation size, the range of contamination, and the self-
stabilization time are minimized.
In the literature of network routing protocol design [6],
formation of routing loops is regarded as problematic, and
a variety of schemes have been proposed to avoid forming
loops, such as those used in EIGRP, OSPF, and BGP. How-
ever, fault propagation and routing instability remain as prob-
lems in OSPF and BGP. The root cause appears to be that
these protocols are not designed to tolerate such faults as mis-
conﬁguration and persistent congestions, which are special
cases of state corruption. In LSRP, state corruption is dealt
with by way of local stabilization. As a result, looping is im-
plicitly avoided by taking loop-formation as a kind of state
corruption, without introducing special mechanisms to deal
with potential loops. By local stabilization, LSRP prevents
faults from propagating far away and increases the stability
as well as availability of a system. Therefore, the question of
whether we should take various kinds of faults as state cor-
ruption and deal with them by way of (local) stabilization de-
serves further exploration.
We assumed that the weight of each edge is 1 for simplic-
ity of presentation, but our protocol can be applied with mi-
nor modiﬁcation to scenarios where the weights are arbitrary
non-negative values. This will be incorporated into our future
work where we study the application of our protocol to exist-
ing distance-vector (and path-vector) routing protocols, such
as DSDV, AODV, RIP, and BGP.
Acknowledgment
We thank Mohamed Gouda, Ted Herman, Shay Kutten,
and the anonymous referees for their helpful comments.
References
[1] S. Aggarwal and S. Kutten. Time optimal self-stabilizing span-
ning tree algorithms. In FSTTCS, pages 400–410, 1993.
[2] A. Arora and M. G. Gouda. Distributed reset. IEEE Transac-
tions on Computers, 43(9):1026–1038, 1994.
[3] J. J. Garcia-Lunes-Aceves. Loop-free routing using diffus-
IEEE/ACM Transactions on Networking,
ing computations.
1(1):130–141, 1993.
[4] S. Ghosh, A. Gupta, T. Herman, and S. V. Pemmaraju. Fault-
containing self-stabilizing algorithms. In ACM PODC, pages
45–54, 1996.
[5] S. Ghosh and X. He. Scalable self-stabilization.
In IEEE
ICDCS’WSS, pages 18–24, 1999.
[6] C. Huitema. Routing in the Internet. Prentice-Hall, Inc., 1999.
[7] M. Jayaram and G. Varghese. Crash failures can drive proto-
cols to arbitrary states. In ACM PODC, pages 247–256, 1996.
[8] C. Labovitz, A. Ahuja, R. Wattenhofer, and S. Venkatachary.
The impact of internet policy and topology on delayed routing
convergence. In IEEE INFOCOM, pages 537–546, 2001.
[9] C. Labovitz, G. R. Malan, and F. Jahanian. Origins of internet
routing instability. In IEEE INFOCOM, pages 218–226, 1999.
[10] N. A. Lynch. Distributed Algorithms. Morgan Kaufmann Pub-
lishers, Inc., 1996.
[11] M. Nesterenko and A. Arora. Local tolerance to unbounded
byzantine faults. In IEEE SRDS, pages 22–31, 2002.
[12] C. E. Perkins. Ad Hoc Networking. Addison Wesley, 2001.
[13] A. Shaikh, L. Kalampoukas, R. Dube, and A. Varma. Routing
stability in congested networks: Experimentation and analysis.
In ACM SIGCOMM, pages 163–174, 2000.
[14] L. Wang, X. Zhao, D. Pei, R. Bush, D. Massey, A. Mankin,
S. F. Wu, and L. Zhang. Observation and analysis of bgp be-
havior under stress. In ACM SIGCOMM Internet Measurement
Workshop, pages 138–147, 2002.
[15] H. Zhang and A. Arora. GS3: Scalable self-conﬁguration and
self-healing in wireless networks. In ACM PODC, pages 58–
67, 2002.
[16] H. Zhang and A. Arora. LSRP: Local stabilization in shortest
path routing. Technical Report, OSU-CISRC-12/02-TR27, The
Ohio State University (ftp://ftp.cis.ohio-state.edu/pub/tech-
report/2002/TR27.ps), December 2002.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:56:18 UTC from IEEE Xplore.  Restrictions apply.