thrive on the same types of terms, low-volume terms where ads are
less attractive. Consequently, a purely proﬁt-motivated attacker not
fearful of arrest might choose between the two approaches, depend-
ing on which method generates more revenue.
4. ECONOMICS OF TRENDING-TERM
EXPLOITATION
We next examine the revenues possible for both malware and
ads, by ﬁrst characterizing the volumes of population affected, be-
fore deriving actual expected revenues.
4.1 Exposed population
We ﬁrst estimate the number of visits malware and MFA sites at-
tract from trending-term searches. The cumulative number of visits
over an interval t to a website w for a search term s is given by
V (w, s, t) = C(Rank(w, s)) · Pop(s) ·
4
30 × 24
× t ,
where Pop(s) is the monthly peak popularity of the term, as deﬁned
in Section 3.4. Rank(w, s) is the position in search results website
w occupies in response to a query for s, and C(r) deﬁnes a click
probability function for search rank 1 ≤ r ≤ 10 following the
empirical distribution observed by Joachims et al. [16]. They found
that 43% of users clicked on the ﬁrst result, 17% on the second
result, and 98.9% of users only clicked on results in the ﬁrst page.
We ignore results in ranks above 10 (i.e., C(r) = 0 for r > 10).
Pop(s) is measured at a monthly rate, so we normalize the vis-
its to the four-hour interval between each search. We also weigh
Google and Yahoo! search results differently. Google has report-
edly an 64.4% market share in search, while Yahoo! and Bing have
a combined market share of 30% [12]. Since our estimates are
based on what Google observes, we anticipate that Yahoo! and
Bing attract 30%
64.4% = 46.5% of the searches that Google does.
The results are given in Table 5. MFA sites attract 39 million
visits over nine months, or 4.3 million visits per month. For the
s
m
i
i
t
c
v
y
l
i
a
d
#
trending terms
control terms
0
0
0
5
1
0
0
0
0
1
0
0
0
5
0
9
2
−
1
0
−
1
1
0
2
5
0
−
2
0
−
1
1
0
2
2
1
−
2
0
−
1
1
0
2
9
1
−
2
0
−
1
1
0
2
6
2
−
2
0
−
1
1
0
2
5
0
−
3
0
−
1
1
0
2
2
1
−
3
0
−
1
1
0
2
9
1
−
3
0
−
1
1
0
2
6
2
−
3
0
−
1
1
0
2
2
0
−
4
0
−
1
1
0
2
9
0
−
4
0
−
1
1
0
2
6
1
−
4
0
−
1
1
0
2
3
2
−
4
0
−
1
1
0
2
Figure 5: Number of estimated daily victims for malware ap-
pearing in trending and control terms.
malware results, we compare the estimated visits for both control
and trending terms. While more users see malware in the results of
control terms than trending terms (about 4.4 million versus about
200 000 per month over three months), over 99% of the visits from
control terms are blocked by the Safe Browsing API. By contrast,
24% of the visits triggered from the results of trending terms are not
blocked by the Safe Browsing API. In aggregate, trending terms
expose around 49 000 victims per month to undetected malware,
compared to about 28 000 for control terms.
The table also lists the number of Bing and Yahoo! users that
encounter malware detected by Google’s SafeBrowsing API. We
cannot say for certain whether or not these users will be exposed
to malware.
If they attempt to visit the malicious site using the
Chrome or Firefox browser then they would be protected, since
Google’s SafeBrowsing API is integrated into those browsers. In-
ternet Explorer users would be protected only if the sites appear in
IE’s internal blacklist. Unfortunately, we could not verify this since
the blacklist is not made publicly accessible.
The sums presented in the table mask several peculiarities of the
data. First, for malware, the number of visitors exposed is highly
variable. Figure 5 plots the number of daily victims over time.
Most days the number of victims exposed is very small, often zero.
Because terms in the control set are always very popular, successful
attacks cause large spikes, but tend to be rare. On the other hand,
trending terms exhibit frequent spikes, but many of the spikes are
small. This is because many trending terms are in fact not very pop-
ular, even at their peak. A big spike, as happened around March 5,
results from the conjunction of three factors: (1) the attacker must
get their result towards the top of the search results; (2) the result
cannot be immediately spotted and ﬂagged; and (3) the trending
term has to be popular enough to draw in many victims. Conse-
quently, there is a downside to the constantly replenishing pool of
trending terms for the attacker – they are often not popular enough
for the attacker to do much damage. This is further exacerbated
by the ﬁnding from the last section – more popular terms are less
likely to be manipulated. At the same time, the ﬁgure demonstrates
that even the odd success can reel in many victims.
Figure 6 plots the cumulative distribution of user visits compared
to the affected domains. The graph indicates high concentration –
most of the trafﬁc is drawn to a small number of domains. The con-
centration of visitors is particularly extreme for malware, which
makes sense given the spikes observed in Figure 5. The concen-
tration in MFA sites shows that a few websites proﬁt handsomely
from trending terms, and that many more are less successful. This
is consistent with our earlier ﬁnding that there are only a few large
connected clusters of MFA sites linking to each other. One conse-
462i
s
t
i
s
v
r
e
s
u
l
l
a
f
o
%
0
0
1
0
8
0
6
0
4
0
2
0
0
20
40
60
80
100
% of affected domains
ads
malware
Figure 6: CDF of visits for domains used to transmit malware
or ads in the search results of trending terms.
quence of this concentration is that we can approximate the revenue
to the biggest players simply by considering aggregate ﬁgures.
4.2 Revenue analysis
We next compare revenues miscreants generate from MFA sites
and from malware-hosting sites.
MFA revenue. Essentially, the aggregate revenue for MFA web-
sites is a sum of the revenues generated by all MFA sites w obtained
in response to all the search terms s considered. Each website gen-
erates a revenue equal to the number of website visitors times the
advertising revenue that can be obtained from these visitors:
RMFA(t) = X
X
V (w, s, t) · (pPPC · pclk · rPPC
s
w∈MFA(s)
+ pbanner · rbanner + paﬀ · p′
clk · raﬀ ) .
There are three broad classes of online advertising in use on MFA
domains – pay-per-click (PPC) (e.g., Google AdSense), banners
(e.g., Yahoo! Right Media) and afﬁliate marketing (e.g., Commis-
sion Junction). Banner advertisements are paid rbanner by the visit,
PPC only pays rPPC when the user clicks on an ad (which happens
with probability pclk), and afﬁliate marketing pays raﬀ whenever a
visitor clicks the ad and then buys something (which happens with
probability p′
clk). By inspecting our corpus of MFA sites, we dis-
cover that 83% include PPC ads, 66% use banner ads, and 16%
include afﬁliate ads. 50% of sites use two types of advertising,
and 7% use all three. We include each type of advertisement in
the revenue calculation with probability pad type, and we assign the
probability according to the percentage of MFA site visits that in-
clude each class of ad. For the MFA websites we have identiﬁed,
pPPC = 0.94, pbanner = 0.53, and paﬀ = 0.33.
To calculate the earning potential of each ad type, we piece to-
gether rough measures gathered from outside sources. Estimating
the “click-through rate” (CTR) pclk is difﬁcult, as click-through
rates vary greatly, and ad platforms such as Google keep very tight-
lipped on average click-through rates. One Google employee re-
ported that an average CTR is “in the neighborhood of 2%” [32].
We anticipate that the CTR for MFA sites is substantially higher
than 2%, since sites have multiple ads aggressively displayed and
little original content. Nonetheless, we assign pclk = 0.02.
To measure per-click ad revenue rPPC, we turn to the CPC es-
timates Google provides for advertising keywords. We expect that
more persistent search terms are likely to appear as keywords for
ads, even on websites about trending terms. Hence, we assume that
advertising revenue for trending terms matches the CPC for most
popular keywords in the corresponding category. We assign the ex-
pected advertising revenue to the mean of ad prices for the 20 most
popular search terms weighted by the amount each category is rep-
resented in the results from the trending set (see Table 4, column
1). This yields rPPC = $0.97.
Calculating banner advertising revenue is a bit easier, since no
clicks are required to earn money. Public estimates of average
revenue are hard to come by, but the ad network Adify issued a
press release stating that its median cost per 1 000 impressions in
Q2 2010 was $5.29 [4], so we assign rbanner = $0.00529.
For afﬁliate marketing, we assume assume that p′
clk = pclk =
0.02, the same as for PPC ads. To estimate the revenue raﬀ that
can be earned, we turn to Commission Junction (CJ), one of the
largest afﬁliate marketing networks that matches over 2 500 adver-
tisers with afﬁliates. CJ provides an estimate of expected earnings
from advertisers per 100 clicks; we collected this estimate for all
advertisers on Commission Junction in December 2009, and found
it to be $26.49. Consequently, we estimate that raﬀ = $0.265.
Putting it all together, we estimate the monthly revenue to MFA
sites to be:
RMFA(1 month) =4 284 458 × (0.94 × 0.02 × $0.97
+ 0.53 × $0.00529 + 0.33 × 0.02 × $0.265)
=$97 637 .
So, MFA sites gross roughly $100,000 per month from trending-
term exploitation. There are, however, costs that are not factored
into the above derivation, which makes it an upper bound. For
instance, Google generally imposes a 32% fee on advertising rev-
enues [24]. Furthermore, servers have to be hosted and maintained.
As an example, most sites in the largest cluster in Section 3.2 are
hosted by the same service provider, which charges $140/server/month.
That cluster contains 193 nodes hosted on 155 unique servers, which,
ignoring economies of scale, would come up to $21 700/month in
maintenance. Nevertheless, it is worth noting that these costs can
be amortized over other businesses – it is unlikely that such servers
are only set up for the purpose of trending-term exploitation.
Malware revenue. Attackers have experimented with several dif-
ferent business models to monetize drive-by-downloads, from ad-
ware to credential-stealing trojans [31]. However, researchers have
observed that attackers exploiting trending terms have tended to
rely on fake antivirus software [2, 8, 36]. We therefore deﬁne the
revenue due to malware in trending results as:
Rmal(t) = X
X
V (w, s, t) · pexp · ppay ∗ rAV ,
w∈mal(s)
s
where we multiply the number of visits times the likelihood of ex-
posure, the probability of a victim paying for the software, and the
amount paid. For these ﬁgures, we turn to the analysis of Stone-
Gross et al. [36], who acquired a copy of back-end databases de-
tailing the revenues and expenses of three large fake antivirus pro-
grams, each of which were advertised by compromising trending
search results. They found that 2.16% of all users exposed to fake
antivirus ultimately paid for a “license,” at an average cost of $58.
We can use these ﬁgures directly in our model for the revenues due
to malware, setting ppay = 0.0216 and rAV = $58.
Unlike most drive-by-downloads, fake antivirus software does
not need to exploit a vulnerability in the client visiting the infected
search result in order for a user to be exposed. Instead, the server
will use a server-side warning designed to appear as though it is on
the client’s machine, and then prompt a user to install software [2].
Because of this, every user that visits a link distributing fake AV
is exposed, and so we assign pexp = 1. These parameters yield a
463A
F
M
s
t
l
u
s
e
r
0
1
p
o
t
%
6
5
4
3
2
1
0
Google
Yahoo!/Bing
Monthly MFA visits
Pre-intervention
Post-intervention % change
Google search
Google ads
Other ads
Yahoo!/Bing search
Google ads
Other ads
Total
3 364 402
2 989 821
374 556
1 302 314
1 204 928
95 363
4 666 716
1 788 480
1 763 709
24 770
1 448 058
1 424 323
23 734
3 236 538
-47%
-41%
-93%
+11%
+18%
-75%
-31%
4
2
−
7
0
−
0
1
0
2
8
0
−
8
0
−
0
1