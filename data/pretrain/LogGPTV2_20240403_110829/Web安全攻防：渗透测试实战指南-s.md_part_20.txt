174Web安全攻防：渗进测试实战指南
9/11 200-0X
7,,,.2
SSL/1.02)mod,fkgie2.3/
srgtp td fugosgadiooy
logide
Langtft:523
Ldanamsteec
28/08 11:09
Ob
35 14
208/0/808:52
232gap,
图4-120执行ping 127.0.0.1 1 dir
下面展示了常用的管道符。
Windows系例支持的管道符如下所示。
“1”：直接执行后面的语句。例如：ping 127.0.0.1lwhoami。
“”：如果前面执行的语句执行出错，则执行后面的语句，前面的语句只
能为假。例如：ping 2| whoami。
例如:ping 127.0.0.1&whoami 。
“&&”：如果前面的语句为假则直接出错，也不执行后面的语句，前面的
语句只能为真。例如：ping127.0.0.1&&whoami。
Linux系统支持的管道符如下所示。
“”：执行完前面的语句再执行后面的。例如：ping127.0.0.1;whoami。
“|”：显示后面语句的执行结果，例如：ping127.0.0.1|whoami。
“”：当前面的语句执行出错时，执行后面的语句。例如：ping1whoami。
“&”：如果前面的语句为假则直接执行后面的语句，前面的语句可真可假。例
如:ping 127.0.0.1&:whoami。
“&&”：如果前面的语句为假则直接出错，也不执行后面的，前面的语句只能
为真。例如：ping 127.0.0.1&&whoami。
---
## Page 194
第4章Web安全原理剖析175
4.10.3命令执行漏洞代码分析
服务端处理ping的代码如下所示，程序获取GET参数IP，然后拼接到system0函
数中，利用systemO函数执行ping的功能，但是此处没有对参数IP做过滤和检测，导
致可以利用管道符执行其他的系统命令，代码如下所示。
?php
([,d.]39s .. z u- Bud,)uaqsAs oupa
? >
4.10.4命令执行漏洞修复建议
针对命令执行漏洞的修复，笔者给出以下这几点建议。
·尽量不要使用命令执行函数。
·客户端提交的变量在进入执行命令函数前要做好过滤和检测。
。在使用动态函数之前，确保使用的函数是指定的函数之一。
。对PHP语言来说，不能完全控制的危险函数最好不要使用。
4.11逻辑漏洞挖掘
4.11.1介绍逻辑漏洞
逻辑漏洞就是指攻击者利用业务的设计缺陷，获取敏感信息或破坏业务的完整
性。一般出现在密码修改、越权访间、密码找回、交易支付金额等功能处。其中越
权访间又有水平越权和垂直越权两种，如下所示。
·水平越权：相同级别（权限）的用户或者同一角色中不同的用户之间，可
以越权访问、修改或者删除其他用户信息的非法操作。如果出现此漏洞，
可能会造成大批量数据的泄露，严重的甚至会造成用户信息被恶意基改。
垂直越权：就是不同级别之间的用户或不同角色之间用户的越权，比如普
通用户可以执行管理员才能执行的功能。
逻辑缺陷表现为设计者或开发者在思考过程中微出的特殊假设存在明显或隐含
---
## Page 195
176Web安全政防：渗造测试实战指南
的错误。
精明的攻击者会特别注意目标应用程序采用的逻辑方式，并设法了解设计者与
开发者可能做出的假设，然后考虑如何攻破这些假设，黑客在挖掘逻辑漏洞时有两
个重点：业务流程和HTTP/HTTPS请求纂改。
常见的逻辑漏洞有以下几类。
支付订单：在支付订单时，可以慕改价格为任意金额；或者可以募改运费
或其他费用为负数，导致总金额降低。
·越权访间：通过越权漏洞访问他人信息或者操纵他人账号。
·重置密码：在重置密码时，存在多种逻辑漏洞，比如利用session覆盖重置
密码、短信验证码直接在返回的数据包中等。
竞争条件：竞争条件常见于多种攻击场景中，比如前面介绍的文件上传漏
洞。还有一个常见场景就是购物时，例如用户A的余额为10元，商品B的价
格为6元，商品C的价格为5元，如果用户A分别购买商品B和商品C，那余额
肯定是不够的。但是如果用户A利用竞争条件，使用多线程同时发送购买商
品B和商品C的请求，可能会出现以下这几种结果。
0有一件商品购买失败。
0商品都购买成功，但是只扣了6元。
商品都购买成功，但是余额变成了-1元。
4.11.2越权访问攻击
越权访间攻击测试连接：htp://172.16.200.12/yuequan/test2/admin/viewpassword
php?id=1.
viewpassword.php页面实现的功能是，当用户登录系统后，可以通过该页面查看
自已的密码，该URL中存在一个参数id=1，当我们把参数id改为2之后，则可看到id
为2的用户的信息，结果如图4-121和图4-122所示。
---
## Page 196
第4章Web安全原理制析177
图4-121访问id=1的用户的信息
G
t
图4-122访问id=2的用户的信息
4.11.3逻辑漏洞：越权访问代码分析
服务端处理用户查询个人信息的代码如下，程序设计的思路如下所示。
个人信息
*.
‘码: *.
邮
箱：′.
 : .
);
Jelsef
[,aweuuasn, ]isods = aueusasns
[.puonssed, ]1sod$ = puomsseds
$result = mysqli_query($con, *select * from users where
 username* ='" , addslashes($usernane) . *'
(..*(puomsseds)spu'.. =.puomssed,pue,
$row = mysqli_fetch_array(Sresult);
if (Srow){
exit（“登录成功*.“个人信息
*);
exit（“登录失败"）；
7>
在else语句中获取POST的参数usemame和参数password，然后到数据库中查
询，如果正确，则登录成功，然后跳转到login.php?usermame=Susermame处
（if语句）。
if语句中是登录成功后的代码，获取GET的参数usemame，然后到数据库中
查询参数usemame的所有信息，并返回到页面上。
但是此处没有考虑的是，如果直接访间login.php?usermame=admin，那么将直接
执行if语句中的代码，面没有执行else语句中的代码，所以此处不需要登录就可以查
看admin的信息，通过这种方式，就可以越权访问其他用户的信息。
---
## Page 198
第4章Web安全原理制析4179
4.11.4越权访问修复建议
越权访问漏洞产生的主要原因是没有对用户的身份做判断和控制，防护这种漏
洞时，可以通过session来控制。例如在用户登录成功后，将usermame或uid写入到session
中，当用户查看个人信息时，从session中取出usermame，而不是从GET或POST取
usemame，那么此时取到的usermname就是没有被纂改的。
4.12XXE漏洞
4.12.1介绍XXE漏洞
XML外部实体注入（XMLExternalEntity）简称XXE漏润，XML用于标记电子
文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许
用户对自己的标记语言进行定义的源语言。XML文档结构包括XML声明、DTD文档
类型定义（可选）、文档元素。
常见的XML语法结构如图4-123所示。
XML]
IDOCTYPE note [
文档类型定义（DTD）
]>
Tove
JaniReminder
文档元素
Don’t forget me this weekend
图4-123XML语法结构
其中，文档类型定义（DTD）可以是内部声明也可以引用外部DTD，如下所示。
·内部声明DTD格式：
---
## Page 199
180Web安全政防：渗造测试实战指南
引用外部DTD格式：。
在DTD中进行实体声明时，将使用ENTITY关键字来声明。实体是用于定义引用
普通文本或特殊字符的快捷方式的变量。实体可在内部或外部进行声明。
·内部声明实体格式：。
·引用外部实体格式：。
4.12.2XXE漏洞攻击
XXE漏洞攻击的测试地址：http://127.0.0.1/1.pbp
HTTP请求的POST参数如下所示。
1e 3dA13001>
]>
xm1>
(xxe>&b;
在POST参数中，关键语句为“file//C:/windows/win.ini”，该语句的作用是通过file
协议读取本地文件C：/windows/win.ini，如图4-124所示。
01 Firvlo/S8C
ih-c
0.8,7Ng07,-mg=5,n-U5x=02
Lrg+0.2
104+
75.445
图4-124读取文件
4.12.3XXE漏洞代码分析
服务端处理XML的代码如下，代码的实现过程如下所示。
---
## Page 200
第4章Web安全原理剖析181
1oadXML($xm1f11e);
$xm] = simplexml_inport_dom($don);
$xxe = $xm1->xxe;
u\ axxs, = Jss
echo Sstr;
<
·使用file_get_contents获取客户端输入的内容。
·使用newDOMDocumentO初始化XML解析器。
·使用loadXML（Sxmlfile）加载客户端输入的XML内容。
·使用simplexml_impor_dom(Sdom）获取XML文档节点，如果成功则返回
SimpleXMLElement对象，如果失败则返回FALSE。
·获取SimpleXMLElement对象中的节点XXE，然后输出XXE的内容。
可以看到，代码中没有限制XML引入外部实体，所以当我们创建一个包含外部
实体的XML时，外部实体的内容就会被执行。
4.12.4XXE漏洞修复建议
针对XXE漏洞的修复，笔者给出以下两点建议。
·禁止使用外部实体，例如libxml_disable_entity_loader（true)。
过滤用户提交的XML数据，防止出现非法内容。
4.13WAF的那些事
4.13.1介绍WAF
本节主要介绍WAF（WebApplicationFirewall，Web应用防火墙）及与其相关的
知识，这里利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对
HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。
WAF基本上可以分为以下几类。
---
## Page 201
182Web安全政防：渗透测试实战指南
1.软件型WAF
以软件形式装在所保护的服务器上的WAF，由于安装在服务器上，所以可以接
触到服务器上的文件，直接检测服务器上是否存在WebShell、是否有文件被创建等。
2.硬件型WAF
以硬件形式部署在链路中，支持多种部署方式，当串联到链路中时可以拦截恶
意流量，在旁路监听模式时只记录攻击不进行拦截。
3.云WAF
一般以反向代理的形式工作，通过配置NS记录或CNAME记录，使对网站的请求
报文优先经过WAF主机，经过WAF主机过滤后，将认为无害的请求报文再发送给实
际网站服务器进行请求，可以说是带防护功能的CDN。
4.网站系统内置的WAF
网站系统内置的WAF也可以说是网站系统中内置的过滤，直接镶嵌在代码中，
相对来说自由度高，一般有以下这几种情况。
·输入参数强制类型转换（intval等），
·输入参数合法性检测。
·关键函数执行（SQL执行、页面显示、命令执行等）前，对经过代码流程
的输入进行检测。
·对输入的数据进行替换过滤后再继续执行代码流程（转义/替换掉特殊字符
等）。
网站系统内置的WAF与业务更加契合，在对安全与业务都比较了解的情况下，
可以更少地收到误报与漏报。
4.13.2WAF判断
本小节主要介绍判断网站是否存在WAF的几种方法。
---
## Page 202
第4章Web安全原理划析183
1.SQLMap
使用SQLMap中自带的WAF识别模块可以识别出WAF的种类，但是如果所安下面
装的WAF并没有什么特征，SQLMap就只能识别出类型是Generic。
下面以某卫士官网为例，在SQLMap中输入以下命令，结果如图4-125所示。
peq--e-Auap--wo*xx//:dau, nAddeubs
('s'1't)
starting t 18:28:22
enatyoe
图4-125使用SQLMap识别WAF
可以看到识别出WAF的类型为XXX Web Application Firewall。
要想了解详细的识别规则可以查看SQLMap的WAF目录下的相关脚本，也可以按
照其格式自主添加新的WAF识别规则，写好规则文件后直接放到WAF目录下即可。
2.手工判断
这个也比较简单，直接在相应网站的URL后面加上最基础的测试语句，比如union
select1,2,3%23，并且放在一个不存在的参数名中，本例里使用的是参数aaa，如图
4-126所示，触发了WAF的防护，所以网站存在WAF。
---
## Page 203
184Web安全攻防：渗透测试实战指南
0 127.08.1/1.ph
四
该网页无法正常运作
127.44.1未发进任付数据
图4-126WAF拦截了非法请求
因为这里选取了一个不存在的参数，所以实际并不会对网站系统的执行流程造
成任何影响，此时被拦截则说明存在WAF。
被拦截的表现为（增加了无影响的测试语句后）：页面无法访间、响应码不同、
返回与正常请求网页时不同的结果等。
4.13.3一些VAF的绕过方法
本小节主要介绍SQL注入漏洞的绕过方法，其余漏润的WAF绕过方法在原理上
是差不多的。
1.大小写混合
在规则匹配时只针对了特定大写或特定小写的情况，在实战中可以通过混合大
小写的方式进行绕过（现在几乎没有这样的情况），如下所示。
uN1on sE1Ect 1,2,3,4,5