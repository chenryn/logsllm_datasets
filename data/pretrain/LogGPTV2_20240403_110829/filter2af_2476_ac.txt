margin-bottom: 20px; color: rgb(51, 51, 51);" helvetica="" neue",=""
helvetica,="" arial,="" "hiragino="" sans="" gb",="" "microsoft="" yahei",=""
sans-serif;="" font-size:="" 16px;="" background-color:="" rgb(255,="" 255,=""
255);"="">运行telnet localhost 4444进行命令行来控制操作cpu或者内存空间，在这里我们可把cpu
halt暂停下来，cpu重置，设置断点等操作。在这里我们执行halt命令，cpu就断下来了，效果如下" alt="" width="630" height="211"
style="box-sizing: border-box; vertical-align: middle; max-width: 100%;"
/>这个时侯我的gdb就可以远程attach上去进行动态调试与内存空间访问了。运行arm-none-eabi-gdb，gdb里面执行target remote localhost:3333进行远程调试连接，可以内存空间访问与动态调试。 " alt="" width="619" height="189"
style="box-sizing: border-box; vertical-align: middle; max-width: 100%;"
/>好了，我们可以内存空间访问了，先把固件，flash，和内存数据dump出来，静态分析一下吧。如下是cc13xx芯片的内存空间地址映射表，它可以让我们知道dump哪些有用的数据" alt="" width="623" height="263"
style="box-sizing: border-box; vertical-align: middle; max-width: 100%;"
/>0地址开始到0x10000是我们CC1310F64型号的flash的地址空间BootROM是从0x10000000到0x10020000SRAM地址从0x20000000到0x20005000好了，我们就dump这三块位置。在gdb里面运行如下命令dump
binary memory cc1310_flash.bin 0 0x10000dump binary memory
cc1310_brom.bin 0x10000000 0x10020000dump binary memory cc1310_sram.bin
0x20000000 0x20005000好了，合并这三个文件用IDA进行反汇编，不同的段进行地址重定位，可以做到地址精确引用，如下。" alt="" width="567" height="147"
style="box-sizing: border-box; vertical-align: middle; max-width: 100%;"
/>好了，接下来就是逆向篇了，如何找到答案和分析其代码逻辑等等。逆向篇：我们通过IDA里面的一些字符串获得一些线索。" alt="" width="611" height="563"
style="box-sizing: border-box; vertical-align: middle; max-width: 100%;"
/>然后我们很快找到每一道题的答案了" alt="" width="622"
height="822" style="box-sizing: border-box; vertical-align: middle; max-width:
100%;" /><p style="text-align: left; box-sizing: border-box; margin-top:
20px; margin-bottom: 20px; color: rgb(51, 51, 51);" helvetica="" neue",=""