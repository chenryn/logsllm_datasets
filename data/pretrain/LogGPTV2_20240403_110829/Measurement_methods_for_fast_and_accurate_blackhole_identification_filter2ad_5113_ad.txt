261F
D
C
−
1
F
D
C
−
1
PlanetLab
Enterprise VPN
 1
 0.1
 0.01
 0.001
 0.0001
 1e−05
 0
 5
 10
 20
Status Changes per Cycle (% of all probes)
(a) Matrix Dynamicity
 15
 1
 0.1
 0.01
 0.001
 0.0001
 1e−05
Enterprise VPN
PlanetLab
 1
 10
 100
 1000
 10000
Downtime Duration (minutes)
(b) Path Dynamicity
Figure 6: Dynamics of real networks.
lower than mc’s, but its delay increases linearly with n and
it is able to identify all failures longer than n × C (Fig. 5).
3.5.2 Wide-area experiments
We use measurements from PlanetLab and an enterprise
network to check whether networks are stable enough for
basic or mc to work and whether path failure events are
longer than the typical cycle length in such systems. We
do not evaluate consistency directly because we do not have
ground truth about failures. The PlanetLab measurements
are the same as in Sec. 2, and the enterprise network mea-
surements are collected from eight monitors at sites of the
enterprise network across 5 diﬀerent countries.
Fig. 6(a) shows the complementary cumulative distribu-
tion function of the percentage of paths that change status
during one measurement cycle. In PlanetLab, cycles last 60
seconds and at least one out of the 39,800 monitored paths
changes status every cycle.
In this dynamic environment,
mc would never build a reachability matrix. In the enter-
prise network, cycles last 5 seconds and all 56 monitored
paths are stable 99.9% of the cycles. Fig. 6(b) shows the
complementary cumulative distribution function of the du-
ration of path down events. In PlanetLab, paths stay down
for very short periods (95% of paths stay down for only one
cycle). These periods are likely caused by overloaded Plan-
etLab nodes, which may not respond to probes [24]. The
fraction of long downtimes in the enterprise network is sig-
niﬁcantly higher than in PlanetLab. The enterprise network
has only few path status changes; when they happen, they
are more likely associated to a real failure than in PlanetLab.
We now study which aggregation strategy is more ap-
propriate for each network. PlanetLab has many failures
that last less than one cycle and all cycles have path sta-
tus changes; basic would generate many false alarms and
mc would never identify a failure (it would wait indeﬁnitely
for measurements to be stable). The best for PlanetLab is
mc-path with large n (e.g., 10 cycles, allowing the identiﬁca-
tion of all failures longer than 11 minutes as C = 1 minute).
mc-path with n = 10 would only generate false alarms for
failures that last between 9 and 10 minutes, which are rare
(Fig. 6(b) shows that less than 0.015% of path down events
last for 9 or 10 minutes). mc-path would eﬀectively remove
the noise created by unstable paths. In the enterprise net-
work, mc achieves high consistency without compromising
the ability to identify long failures because detection errors
and short failures are rare.
4. PUTTING IT ALL TOGETHER
This section ﬁrst shows the results of controlled experi-
ments that evaluate the beneﬁts of using the conﬁrmation
and aggregation methods from the previous two sections to
produce reachability matrices for binary tomography. Then,
it shows that our techniques drastically reduce the number
of alarms in PlanetLab and the enterprise network. Finally,
we compare our results to the state-of-the-art algorithm in-
troduced by Kompella et al. [16] and show that we achieve
a higher identiﬁcation rate with a lower false-alarm rate.
4.1 Setup
We evaluate the eﬀect of our techniques when applied to
a simple binary tomography algorithm that uses measure-
ments from multiple monitors [9, 16]. Given a reachabil-
ity matrix and the network topology, this algorithm uses
a greedy heuristic to build a hypothesis set, i.e., the most
likely set of failed links. First, it creates a candidate set of
possibly failed links with all links in failed paths minus all
links from working paths. Then, it iteratively selects from
the candidate set the link that explains most failures and
adds it to the hypothesis set, until the set of links in the
hypothesis set explains all path failures.
We use the following metrics to evaluate the accuracy of
the hypothesis set and the speed of fault identiﬁcation:
Identiﬁcation rate. The percentage of failures for which
the tomography algorithm ﬁnds the correct hypothesis
set before the failure ends (i.e., true positives).
False alarm. A false alarm occurs when a link is working
but tomography adds it to the hypothesis set.
In cases of late identiﬁcation, we disregard the event: We do
not consider it as a correct identiﬁcation or as a false alarm.
In some cases, if the reachability matrix is inconsistent, the
tomography algorithm may return an empty hypothesis set.
We do not consider an empty hypothesis set as a false alarm.
If the failure ends and the tomography algorithm never out-
puts a correct hypothesis set, then we say that it missed the
failure (i.e., a misidentiﬁcation).
4.2 Controlled Experiments
In this section, we evaluate the beneﬁts that failure con-
ﬁrmation and aggregation strategies each provide indepen-
dently, using controlled experiments on Emulab. Unless oth-
erwise stated, the setup for these experiments is as described
in Sec. 3.5 with the Abilene topology with 1% per-link loss
rate and average loss burst lengths of 40 ms.
262l
s
m
r
a
A
e
s
a
F
l
l
a
t
o
T
100
50
20
10
5
2
1
0
With Confirmation
No Confirmation
 1.5
 1
 2.5
Failure Length / Cycle Length
 2
 3
Figure 7: Eﬀect of failure conﬁrmation on false
alarms.
4.2.1 Effects of failure conﬁrmation
This section studies the accuracy of the tomography algo-
rithm using the basic aggregation strategy with and without
failure conﬁrmation. We only present results on false alarm,
because the conﬁrmation mechanism has little eﬀect on iden-
tiﬁcation rate. Even with no conﬁrmation, the tomography
algorithm is still capable of identifying failures, but it will
trigger many false alarms.
We conﬁgure the failure conﬁrmation mechanism accord-
ing to the guidelines presented in Sec. 2.1.3 using the loss
rate and the burst length of the Emulab setup. Given the
−5 with μmin = 100ms, we ﬁnd that
goal to achieve F = 10
κ = 4 and μ = 398ms.
Fig. 7 shows the absolute number of false alarms with and
without conﬁrmation when varying f /C using basic. Fail-
ure conﬁrmation reduces the number of false alarms by two
orders of magnitude. With no conﬁrmation, the coordina-
tor will run the tomography algorithm at any lost probe,
and potentially trigger a false alarm. Without conﬁrmation,
the total number of false alarms increases when the cycle
lengths are smaller (or when f /C increases). This increase
occurs because with a smaller cycle, monitors perform more
measurements during one experiment; there are more probe
losses and consequently more false alarms.
Failure conﬁrmation brings the total number of
false
alarms down to less than ﬁve for all values of f /C. Most
false alarms occur when failures are short compared to the
cycle length (as in S3 in Sec. 3.3.1), because in this scenario,
basic produces inconsistent reachability matrices.
4.2.2 Effects of aggregation strategies
We now use the failure conﬁrmation mechanism (conﬁg-
ured as in the previous section) and compare the accuracy of
the diﬀerent aggregation strategies. For multi-cycle strate-
gies, n = 2. Fig. 8 shows the accuracy of the tomography
algorithmin experiments with 0.6% of detection errors. As
usual, we vary f /C on the x-axis.
Fig. 8(a) shows the identiﬁcation rate of the tomography
algorithm. Similar to the analysis of consistency in Sec. 3,
when failures are long (i.e., f /C > 3), basic and mc-path
aggregation correctly identify all failures, whereas mc misses
10% of failures because of detection errors. These errors trig-
ger path status changes, which prevent mc from obtaining
a reachability matrix that is stable for n cycles.
In these
cases, the failure is not identiﬁed. This ﬁgure also shows
e
t
a
R
n
o
i
t
a
c
i
f
i
t
n
e
d
I
 1
 0.8
 0.6
 0.4
 0.2
 0
 1
 1.5
Basic
MC (n=2)
MC−Path (n=2)
 2
 2.5
 3
 3.5
 4
l
s
m
r
a
A
e
s
a
F
l
l
a
t
o
T
100
50
20
10
5
2
1
0
Failure Length / Cycle Length
(a) Identiﬁcation Rate
Basic
MC (n=2)
MC−Path (n=2)
 1
 1.5
 2
 2.5
 3
 3.5
 4
Failure Length / Cycle Length
(b) False Alarms (log scale)
Figure 8: Eﬀect of aggregation strategies on tomog-
raphy, 0.6% of detection errors.
that basic cannot identify failures shorter than C. Interme-
diate failures (with 1 ≤ f /C ≤ 2) can only be identiﬁed if
basic builds the reachability matrix before the failure ends,
i.e., only if tde ≤ f − C. Multi-cycle strategies can ﬁlter out
short (i.e., f < nC) failures that can not be reliably identi-
ﬁed without increasing the number of false alarms. Missing
these short failures is not an issue because they do not char-
acterize persistent blackholes.
Fig. 8(b) shows the total number of false alarms triggered
by the tomography algorithm using each of the aggregation
strategies; the y-axis is in log scale. As discussed in Sec. 3,
basic triggers many false alarms, whereas mc triggers the
smallest number of false alarms, because it never builds a
reachability matrix caused by detection errors (at the price
of identifying less failures as seen in Fig. 8(a)). The number
of false alarms resulting from the mc-path strategy does not
depend signiﬁcantly on detection errors.
Because we aim to identify persistent blackholes, we per-
form diﬀerent experiments where the goal is to identify long
failures without triggering false alarms due to short ones.
We inject long and short failures simultaneously, varying
duration of short failures from 20% to 70% of that of long
failures. We explore ratios of f /C from 2, the lowest value
that still guarantees consistency (Sec. 3), to 30, correspond-
ing to very high probing rates. We conﬁgure the multi-cycle
strategies to detect failures longer than a given threshold
ftarget by taking Eq. (11) into consideration and picking the
largest n such that nC < ftarget.
Fig. 9 presents the identiﬁcation rate and number of false
alarms for the experiments where longer failures last for
263Basic
MC (90s)
MC−Path (90s)
basic
mc
mc-path
16,261
—
251
PlanetLab
no conf.
conf.
16,260
—
135
Enterprise
no conf.
conf.
6,256
13
27
225
17
27
e
t
a
R
n
o
i
t
a
c
i
f
i
t
n
e
d
I
l
s
m
r
a
A
e
s
a
F
l
l
a
t
o
T
 1
 0.8
 0.6
 0.4
 0.2
 0
1000
500
200
100
50
20
10
5
2
1
0
 10
 15
 20
 25
 30
Cycle Length (sec)
(a) Identiﬁcation Rate
Basic