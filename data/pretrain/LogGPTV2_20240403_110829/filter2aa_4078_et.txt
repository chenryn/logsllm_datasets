信贷员
角 色
分配恰当 文件和文件夹许可给信贷员
图 14.2 基于角色的访问控制
服务器 2
这有助于通过防止特权蠕变实施最小特权原则。 特权蠕变是用户 随着角色和访问需求的变化不
断积累特权的趋势。 理想情况下， 当用户改变在组织内 的工作时 ， 管理员会撤消用户特权。 然而，
421
422
CISSP 官方学习指南(第 7 版)
当特权直接分配给用户 时， 识别和撤消所有不需要的用户 特权就是极具挑战性的任务。
管理员可以轻松地取消不需要的权限， 只 需从一个组中删除用户的账户 。 一旦管理员从组中删
除一个用户 ， 该用户就不再享有分配给该组的特权。 例如， 如果一个信贷员转至另一个部门， 管理
员可以把该信贷员 的账户从信贷员组中删除。 这会将信贷员 组的所有特权都从该用户账户 中删除。
管理员通过工作描述或工作功能确定角色(组)。 在许多情况下， 组织会通过组织结构图记录层
级结构 。 位于管理职位的用户 相 比担负临时工作的用户对资源的访问权更大。
基于角色的访问控制在有频繁人事变动的动态环境中是有用 的， 因 为管理员只需将新用户添加
到适当的角色就可以轻松地授予多个权限。 值得注意的是， 用户可 以属于多个角色或组。 例如， 使
用相同的银行场景， 经理可能属于经理角色、 信贷员角色以及出纳员角色。 这使得经理可以访问银
行员工能够访 问 的所有资源。
提示 :
一个关于基于角 色的访问拉制模型 的特色观点走: 主体可以通过他们在角 色中的资格对资源享
有访问权。 角 色是基于工作或任务的 ， 管理员 会对 角 色分配特权。 role-BAC 模型对于 实施最小特权
原则非常有用 ， 因 为 特权可以 通过从角 色 中 移 除用户账户 而被很容易 地撤消 。
很容易混淆 DAC 和 role-BAC. 因 为它们都可以使用组来将用户组织到可管理单元中， 但它们
在部署和使用上不同 。 在 DAC 模型中， 客体有所有者， 所有者确定谁有权访问 。 在 role-BAC 模型
中 ， 管理员确定主体特权， 并将特权分配给角色或组。 在严格的 role-BAC 模型中 ， 管理员不会把特
权直接分配给用户 ， 而只 会通过将用户 账户 添加到角色或组中来授予特权。
另 一种与 role-BAC 相关的方法是基于任务的访问控制σBAC)o TBAC 与 role-BAC 相似， 但不
是每个用户被分配一个或多个角色， 而是会被分配一系列的任务。 这些都与为用户 账户 相关的个人
分配的工作任务相关 。 在 TBAC 下 ， 重 点是通过分配任务而不是通过用户 身份来控制访 问 。
@ 真实场景
应用程序角色
许多 应用程序都4却有 基于角 色的访问控制 ， 因为它们降低了 维护应用程序的总劳动力成本。 举
一个简单的例子， WordPress 是一个流行的基于 Web 的应用程序 ， 用 于博客和内容管理系统。
WordPress 包括 5 个角 色， 按照层次结构进行组织 。 从最少特权到最多 特权的用 户 为订阅者、
投稿者 、 作者 、 编辑和管理员 。 每个 高 级角 色 都拥有低级角 色的所有权限。
订阅者可以修改在他们 的用 户 配直文件 中用 于修改页 面感观的一些元素。 投稿者可以创建、 编
辑和删除自 己发表的 帖子。 作者可以创建、 编辑和发布帖子。 他们还可以编辑和删除 自 己发表的 帖
子 ， 并上传文件 ， 甚至还可以管理网站的 页函， 包括编辑和删除页面。 管理员 可以在网 站上做任何
事 ， 包括管理潜在的主题 、 插件和用 户 。
2. 基于规则的访问控制
基于规则的访问控制(rule-BAC)使用一套规则、 限制或过滤器来确定能以及不能出现在系统上
的东西， 包括给予主体访问客体的权限， 或授予主体执行某个动作的能力。 有关 rule -BAC 模型的
一个独特特征是 : 它们有适用 于所有主体的 全局规则 。
第 14章 控制和监控访问
rule-BAC 模型的一个常见例子是防火墙。 防火墙包括 ACL 中 的一组规则或过滤器， 由管理员
定义。 防火墙检查所有流经防火墙的流量， 并只允许符合规则 的流量通过。
防火墙包含一条最终规则(称为隐式拒绝规则)， 会拒绝所有其他流量。 例如， 最终规则可能会
通过否认所有来显示防火墙应该阻止网络内外的所有其他流量。 换句话说， 如果流量不符合以往任
何显式定义规则的条件 ， 那么最终规则就确保流量被阻塞。 最终规则有时在 ACL 中是可视的， 这
样就可以看到它 。 其他时候， 隐式拒绝规则作为隐含的最终规则 ， 但并没有在 ACL 中 明确说明 。
注意 :
我们在本书 中使用 了 一些缩咯坷， 如 DAC、 MAC rule -BAC、 role-BAC。 不过， CISSP 考试
通常会在考题中拼出 所有术语和缩咯词。 研究每个模型及其特征。 然而， 你不需要记住缩咯词 。
3. 基于属性的访问控制
传统的 rule-BAC 模型包括适用于所有用户 的全局规则。 然而， rule-BAC 的一个高级实现是基
于属性的访问控制模型(础AC)o ABAC 模型使用包括多个属性的规则的策略。 许多软件定义的网
络应用程序使用 ABAC 模型。
例如， CloudGenix 创建了一个软件定义的广域网(SD-WM叼解决方案， 用于实现以允许或阻止
流量的策略。 管理员 使用普通语句创建了 ABAC 策略， 如 "使用平板电脑或智能手机允许经理访问
广域网 "。 这允许拥有经理角 色 的用户使用平板电脑或智 能手机访问广域网 。 注意这是如何对
rule-BAC 模型进行 改善的。 rule-BAC 适用于所有用 户 ， 但 ABAC 可 以更具体。
4. 强制访问控制
强制访问控制仙1AC)模型依赖于分类标签的使用。 每个分类标签代表一个安全域或安全领域。
安全域是共享公共安全策略的主客体集合。 例如， 安全域可以有秘密标签， MAC 模型将以 同样的
方式用秘密标签保护所有对象。 当主体有匹配的秘密标签时， 它们只 能访问带有秘密标签的客体。
此外 ， 主体获得秘密标签的要求对于所有主体来说都是一样的 。
基于用户 的许可等级， 他们会有分配给他们的标签， 这是一种特权。 同样， 客体由标签来标明
它们的分类水平或敏感度 。 例如， 美国军方使用绝密、 秘密和机密标签对数据进行分类。 管理员 可
以对具有绝密许可的用户授予访问绝密数据的权利 。 然而， 管理员不能对低级许可的用户授予访问
绝密数据的权利 。
私营部门 的组织经常使用的标签包括机密(或专用)、 私人、 敏感和公开。 政府使用的标签由法
律规定， 而私营部门可以 自 由使用他们选择的任何标签。
MAC 模型通常被称为基于格子的模型 。 图 14.3 显示了 一个基于格子的 MAC 模型示例 。 这让
人想起花园中的格子， 如用来帮助玫瑰攀爬的玫瑰格。 t示记为机密、 私人、 敏感和公开的水平线标
记 了分类水平的上界 。 例如， 在公开和敏感之间的区域包括标记为敏感的客体(上限)。 具有敏感标
签 的用户可以访问敏感数据 。
MAC 模型还允许标签识别更多的安全域。 在机密部分(私人和机密之[町， 有 4 个独立的安全域，
标记为 Lentil， Foil、 Crimson 和 Matterhom。 这些都包括机密数据， 但保存在单独的隔间， 以便获
得附加保护层。 持有机密标签的用户还需要额外的标签来访问这些隔间 的机密数据。 例如， 为访问
Lentil 数据， 用户需要机密标签和 Lentil 标签。 同样， 带有 Domino、 Primrose、 Sleu由 和 Potluck 标
签的隔间包括私人数据 。 用 户 需要私人标签和隔 间标签才能访问相应隔间中的数据。
423
CISSP 官方学习指南(第 7 版)
Lentil
Domino
机密
Foil Crimson Ma忧erhorn
私人
Primrose Sleuth Potluck
敏感
公开
图 14.3 基 于格子的访问控制所提供的边界表示
图 14.3 中 的标签是二战军事行动的名字， 但组织可以为标签设定任何名称。 关键是这些部分为
客体(如数据)提供了额外的隔间划分级别。 注意 ， 敏感数据(公开和敏感边界之间)没有任何额外标签。
拿有敏感标签的用户可以访 问带有敏感标签的任何数据 。
组织内 的人员识别标签， 并定义它们的含义以及获取标签的要求。 管理员然后将标签分配给主
体和客体。 标签到位后， 系统基于分配的标签决定访 问权。
在 MAC 模型中使用 隔间划分使得 " 知其所需 " 原则变得必要。 拥有机密标签的用户 不会自动
获得对机密部分隔间的访问权。 然而， 如果他们的工作要求他们访问特定的数据， 如带有 CrÏmson
标签的数据， 管理员 可 以给他们分配 Crimson 标签， 使他们获得 Crimson 隔间的访 问权 。
强制访问控制是禁止的而非许可的， 它使用隐式的拒绝哲学。 如果用户没有获得对数据的具体访
问授权， 系统会拒绝他们访问相关联的数据。 MAC模型比DAC模型更安全， 但不够灵活、 不可扩展。
提示 :
MAC 和基于规则 的访问控制之间 的 区别 因素是: MAC 控制有标签， 而基于规则 的访问控制 不
使用 标签。
安全分类表示敏感度层次。 例如， 如果认为军事安全标签有绝密、 保密、 机密和非机密， 绝密
标签就包括最敏感的数据 ， 而非机密就是最不敏感的。 因为有这个层次， 具有最高机密数据许可的
人就能够访问保密及敏感度更低的数据。 然而， 分类不需要包括较低水平。 因此可以使用 MAC 标
签 ， 以便对高级标签的许可不包括对较低级标签的许可。
提示 :
424
MAC模型 的 关键在于每个客体和主体都有标签。 这些标签是预定义的 ， 系统基于被分配的标签
决定访问权。
MAC 模型中的分类使用 以 下三种类型的环境之一:
分层环境 分层环境将有序结构中 的各个分类标签与低安全等级、 中 安全等级、 高安全等级相
互联系， 如分别为机密、 保密和绝密。 结构中的每个级别或分类标签都相关。 一个级别的许可授予
主体访问这一级别以及更低级客体的权限， 但禁止访问更高级别的所有客体。 例如， 有绝密许可的
人可 以访 问绝密数据和保密数据。
隔间区分环境 在隔间 区分环境中 ， 一个安全域和另一个安全感之间没有关系。 每个域代表一
个单独的隔 间 。 为了获取对某个客体的访 问权， 主体必须有对其安全域的具体许可。
混合环境 混合环境结合了 分层和隔间 区分的概念， 以使每个等级水平可能包含更多细分等级，
第 14 章 控制和监控访问
与安全域的剩余部分相隔离。 主体必须有正确的许可， 以及在某个特定隔间的 " 需知 " 数据来获得
对隔间区分客体的访问。 混合 MAC 环境提供对访问 的粒状控制， 但随着增长变得越来越难以管理。
图 14.3 就是混合环境的一个例子。
1 4.2 理解访问 控制 攻击方式