Experiments. We ﬁx the locations of the Wi-Fi reader (Intel Wi-
Fi Link 5300 card) and the prototype device to be ﬁve centimeters
away from each other. The Wi-Fi helper device (Intel Wi-Fi Link
5300 card) is again placed 3 meters away from the prototype de-
vice. We later present results for larger helper distance values. To
change the number of packets transmitted per second at the helper
device, we insert a delay between injected packets. In our network,
which is running on the same Wi-Fi channel as our organization’s
Wi-Fi device, this results in a transmission rate between 240 and
3070 packets per second. For each of these transmission rates, the
prototype device transmits at four different bit rates (100, 200, 500,
and 1000 bits/sec). We measure the achievable bit rate by measur-
ing the maximum bit rate at which the computed average BER is
less than 10−2. We compute the average achievable bit rate by tak-
ing the mean of the achievable bit rates across multiple runs.
Results: Fig. 12 plots the achievable bit rate as a function of the Wi-
Fi helper’s transmission rate (packets per second). The plot shows
that as the number of packets transmitted per second at the helper
614)
s
p
b
(
e
a
R
t
t
i
l
B
e
b
a
v
e
h
c
A
i
 250
 200
 150
 100
 50
Network Load
Uplink Bit Rate
d
n
o
c
e
S
r
e
p
s
t
e
k
c
a
P
 1100
 900
 700
 500
 300
 100
Figure 13—Testbed with the tested locations.
12:00 PM 2:00 PM 4:00 PM 6:00 PM 8:00 PM
Time of Day
Figure 15—Achievable uplink bit rate using ambient Wi-Fi
packets in an ofﬁce setting as a function of time. The ﬁgure
shows that the achievable bit rate is proportional to the number of
packets on the network.
t
e
k
c
a
P
t
c
e
r
r
o
C
f
o
y
t
i
l
i
b
a
b
o
r
P
 1
 0.8
 0.6
 0.4
 0.2
 0
2
3
4
Helper Location
5
Figure 14—Probability of receiving a correct packet on the up-
link for the various helper locations shown in Fig. 13. The ﬁg-
ure shows that the Wi-Fi reader can decode packets even when the
helper device is not in the same room (location 5). Further the up-
link is fairly independent of the Wi-Fi helper location.
device increases, the achievable bit rate increases. The bit rate is
around 100 bits/s at a helper transmission rate of 500 packets/s and
is 1 kbps when the transmission rate is about 3070 packets/s. We
note that these bit rates are more than sufﬁcient for a majority of
the sensing and Internet of Things applications.
7.3 Bit Rate Versus Wi-Fi Helper Location
Finally, we evaluate the effects of the Wi-Fi helper’s location
on the probability of decoding correct packets from the Wi-Fi
Backscatter tag at the reader. To do this, we place the prototype
device and the Wi-Fi reader (Intel Wi-Fi Link 5300 card) such
that they are 5 centimeters away from each other, in location 1 in
Fig. 13. We then place the Wi-Fi helper device (Intel Wi-Fi Link
5300 card) in locations 2-5 that span line-of-sight and non-line-of-
sight scenarios and are at distances of 3-9 meters from the tag, as
shown in Fig. 13. The average CSI values span 3-50 across these
locations. Note that location 5 is in a different room from our proto-
type device. In each of our experiments, the prototype device trans-
mits 20 packets at a bit rate of 100 bps. We compute the average
packet delivery probability, i.e., the fraction of packets received cor-
rectly at the Wi-Fi reader, at each of the above locations.
Fig. 14 plots the packet delivery probability as a function of dif-
ferent Wi-Fi helper device locations. The ﬁgure shows that this
probability is high across all the helper locations. We also note that
the Wi-Fi reader can successfully decode our packets even when the
helper device is not in the same room as our prototype device. This
demonstrates that the communication capabilities on the uplink are
fairly independent of the Wi-Fi helper location and depend only on
the distance between the Wi-Fi reader and the prototype device.
7.4 Using Only Trafﬁc on the Network
Our experiments so far create additional trafﬁc on the network
to communicate from the prototype device to the Wi-Fi helper. We
)
s
p
b
(
e
t
a
R
t
i
l
B
e
b
a
v
e
h
c
A
i
 50
 40
 30
 20
 10
 0
 10
 20
 30
 40
 50
 60
 70
Wi-Fi AP Beacon Transmission Rate (beacons/s)
Figure 16—Achievable uplink bit rate using only the periodic
beacons from the AP (Wi-Fi helper). The ﬁgure shows the feasi-
bility of using only the beacon packets to establish the uplink.
evaluate the feasibility of uplink communication without the need
for this additional trafﬁc. Speciﬁcally, we run experiments in a lab
environment in our organization by conﬁguring the Wi-Fi helper to
be in monitor mode and capturing all the packets transmitted by the
organization’s AP. We place the Wi-Fi reader (an Intel Wi-Fi Link
5300 card) at a ﬁxed distance of ﬁve centimeters away from the
prototype transmitter. We run experiments once every 10 minutes
and compute the achievable uplink bit rate (the maximum rate at
which the bit error rate at the Wi-Fi helper is less than 10−2). We
also log the average number of Wi-Fi packets in the network as seen
by our Wi-Fi reader device.
Fig. 15 plots the achievable bit rate as a function of time. For ref-
erence, we also plot the average number of all Wi-Fi packets as seen
by the Wi-Fi helper device. The ﬁgure shows that the achievable bit
rate is proportional to the number of packets on the network. This
is because the better the Wi-Fi network utilization, the more the
opportunities for the Wi-Fi reader to receive packets from the AP.
Since the uplink bit rate depends on the transmission rate of the
Wi-Fi helper device (which in our case is the AP), a better-utilized
network results in higher data rates. The key point here is that we
can establish the uplink communication channel without introduc-
ing additional trafﬁc on the network.
7.5 Using only Beacon Packets
Finally, we check the feasibility of using only the periodic bea-
con messages from the AP. We use an Intel Wi-Fi Link 5300 card
conﬁgured as the AP and an Intel Wi-Fi Link 5300 card as a Wi-Fi
reader. The reader does not generate any trafﬁc on the network and
passively listens to the beacon messages periodically transmitted by
the access point. No other device is associated with the access point,
615t
e
a
R
r
o
r
r
E
t
i
B
100
10-1
10-2
10-3
10-4
10-5
20 kbps
10 kbps
 5 kbps
r
u
o
h
/
s
e
v
i
t
i
s
o
p
e
s
a
l
f
#
 30
 25
 20
 15
 10
 5
 0
 0
 50
 100
 150
 200
 250
 300
 350
10:00 AM
12:00 PM
2:00 PM
4:00 PM
6:00 PM
Distance between Wi-Fi reader and Wi-Fi Backscatter prototype (in cm)
Time of Day
Figure 17—Downlink Bit Error Rate Versus distance between
Wi-Fi Backscatter tag and Wi-Fi reader. The three bit rates cor-
respond to Wi-Fi packets of length 50 µs, 100 µs, and 200 µs. The
ﬁgure shows that at a target BER of 10−2, the prototype device can
achieve bit rates of 20 kbps at distances of 2.13 m. The range can
be increased to 2.90 m by decreasing the bit rate to 10 kbps.
Figure 18—Downlink False-positive rate. The ﬁgure shows the
number of false positive events where the prototype receiver con-
fuses normal Wi-Fi trafﬁc for a Wi-Fi Backscatter preamble.
the two devices. The range can be increased to 2.90 meters by
decreasing the bit rate to 10 kbps.
but it operates on channel 6, which is the same frequency as our or-
ganization’s Wi-Fi network. We run experiments from 2-3 PM on
a weekday. We place the Wi-Fi Backscatter tag 5 centimeters away
from the reader and compute the achievable bit rate by measuring
the maximum rate at which the reader can decode the tag’s trans-
missions at a BER less than 10−2. Since Intel cards do not currently
provide CSI information for beacon packets, we again use RSSI for
these experiments. We repeat the experiments for different beacon
frequencies at the Wi-Fi AP. Fig. 16 shows that as expected the
achievable bit rate increases with the beacon frequency. The key
takeaway from these results, however, is that Wi-Fi Backscatter can
establish uplink communication using only the AP’s beacon packets
and hence need no additional trafﬁc to be generated on the network.
8. DOWNLINK EVALUATION
Next, we evaluate the performance of our downlink communica-
tion channel. Here, the Wi-Fi reader conveys information by encod-
ing bits in the presence and absence of Wi-Fi packets. We evaluate
the BER performance as well as the false-positive rate.
8.1 Downlink BER Versus Distance
We compute the bit error rate (BER) as a function of the distance
between the Wi-Fi Backscatter tag and the Wi-Fi reader. At each
distance, the Wi-Fi reader transmits a total of 200 kilobits to the
Wi-Fi Backscatter tag across multiple transmissions. The transmit
power at the reader is set to +16 dBm (40 mW). In each transmis-
sion, the reader encodes a ‘1’ bit as the presence of a packet and
a ‘0’ bit as its absence. We run experiments with three different
packet sizes of 50 µs, 100 µs, and 200 µs at the reader, correspond-
ing to bit rates of 20 kbps, 10 kbps, and 5 kbps. The Wi-Fi Backscat-
ter tag uses its thresholding circuit as described in §4.2 to decode
the transmitted bits. We then compute the BER by comparing the
decoded bits with the transmitted bits.
Fig. 17 plots the BER as a function of the distance. The plot
shows the following:
• As expected, the BER increases with the distance between the
Wi-Fi Backscatter tag and the reader. Similarly, the BER values
are better at lower bit rates.
• Our prototype can efﬁciently identify Wi-Fi packets as small as
50 µs from nearby devices.
• At a target BER of 10−2, the Wi-Fi Backscatter downlink can
achieve bit rates of 20 kbps at distances of 2.13 meters between
8.2 Downlink False-Positive Rate
Finally, we measure the false-positive rate experienced by our
downlink communication channel. We deﬁne the false-positive rate
as the number of events per hour where, in the absence of a Wi-Fi
Backscatter enabled Wi-Fi transmitter, our prototype device falsely
detects the Wi-Fi Backscatter preamble in Fig. 7, and wakes up
the microcontroller to perform decoding. To measure this, we place
our receiver prototype 30 centimeters away from our network AP.
To ensure that there is consistent trafﬁc on the network, we stream
music from Pandora [3] from one of the connected clients for the
whole duration of the experiment. The receiver prototype is con-
ﬁgured to log false-positive events, i.e., events when it detects the
known preamble. We run our experiments during peak hours and
conﬁgure our prototype to detect preambles where each bit is 50 µs.
Fig. 18 shows the number of false positive events per hour at our
prototype receiver, as a function of the time of the day. The ﬁgure
shows that the maximum false positive rate we observe in our setup
is less than 30/hour. These low numbers are expected, because it is