### Experiments

We fixed the locations of the Wi-Fi reader (Intel Wi-Fi Link 5300 card) and the prototype device to be five centimeters apart. The Wi-Fi helper device (Intel Wi-Fi Link 5300 card) was placed three meters away from the prototype device. We also present results for larger distances between the helper and the prototype device. To vary the number of packets transmitted per second by the helper device, we introduced a delay between injected packets. In our network, which operates on the same Wi-Fi channel as our organization’s Wi-Fi network, this resulted in a transmission rate ranging from 240 to 3070 packets per second. For each of these transmission rates, the prototype device transmitted at four different bit rates: 100, 200, 500, and 1000 bits/second. The achievable bit rate was measured by determining the maximum bit rate at which the computed average Bit Error Rate (BER) was less than \(10^{-2}\). The average achievable bit rate was calculated by taking the mean of the achievable bit rates across multiple runs.

### Results

**Figure 12** plots the achievable bit rate as a function of the Wi-Fi helper's transmission rate (packets per second). The plot shows that as the number of packets transmitted per second by the helper device increases, the achievable bit rate also increases. The bit rate is approximately 100 bits/second at a helper transmission rate of 500 packets/second and reaches 1 kbps when the transmission rate is about 3070 packets/second. These bit rates are more than sufficient for most sensing and Internet of Things (IoT) applications.

### 7.3 Bit Rate Versus Wi-Fi Helper Location

To evaluate the effects of the Wi-Fi helper's location on the probability of correctly decoding packets from the Wi-Fi Backscatter tag, we placed the prototype device and the Wi-Fi reader (Intel Wi-Fi Link 5300 card) five centimeters apart, in location 1 (as shown in **Figure 13**). The Wi-Fi helper device (Intel Wi-Fi Link 5300 card) was then placed in locations 2-5, which included both line-of-sight and non-line-of-sight scenarios, and were at distances of 3-9 meters from the tag. The average Channel State Information (CSI) values ranged from 3 to 50 across these locations. Notably, location 5 was in a different room from the prototype device. In each experiment, the prototype device transmitted 20 packets at a bit rate of 100 bps. The average packet delivery probability, i.e., the fraction of packets received correctly at the Wi-Fi reader, was computed for each location.

**Figure 14** plots the packet delivery probability as a function of the Wi-Fi helper device's location. The figure shows that the probability remains high across all helper locations. Additionally, the Wi-Fi reader can successfully decode packets even when the helper device is not in the same room as the prototype device. This demonstrates that the uplink communication capabilities are fairly independent of the Wi-Fi helper's location and depend primarily on the distance between the Wi-Fi reader and the prototype device.

### 7.4 Using Only Traffic on the Network

Our previous experiments involved creating additional traffic on the network to facilitate communication between the prototype device and the Wi-Fi helper. To evaluate the feasibility of uplink communication without generating additional traffic, we conducted experiments in a lab environment. The Wi-Fi helper was configured to monitor mode, capturing all packets transmitted by the organization’s Access Point (AP). The Wi-Fi reader (Intel Wi-Fi Link 5300 card) was placed five centimeters away from the prototype transmitter. Experiments were run every 10 minutes, and the achievable uplink bit rate (the maximum rate at which the BER at the Wi-Fi helper was less than \(10^{-2}\)) was computed. We also logged the average number of Wi-Fi packets in the network as seen by the Wi-Fi reader device.

**Figure 15** plots the achievable bit rate as a function of time, along with the average number of Wi-Fi packets seen by the Wi-Fi helper device. The figure shows that the achievable bit rate is proportional to the number of packets on the network. This is because higher Wi-Fi network utilization provides more opportunities for the Wi-Fi reader to receive packets from the AP. Since the uplink bit rate depends on the transmission rate of the Wi-Fi helper device (in this case, the AP), a better-utilized network results in higher data rates. The key takeaway is that uplink communication can be established without introducing additional traffic on the network.

### 7.5 Using Only Beacon Packets

Finally, we evaluated the feasibility of using only the periodic beacon messages from the AP. An Intel Wi-Fi Link 5300 card was configured as the AP, and another Intel Wi-Fi Link 5300 card served as the Wi-Fi reader. The reader did not generate any traffic on the network and passively listened to the beacon messages periodically transmitted by the access point. No other devices were associated with the access point, but it operated on channel 6, the same frequency as our organization’s Wi-Fi network. Experiments were run from 2-3 PM on a weekday. The Wi-Fi Backscatter tag was placed five centimeters away from the reader, and the achievable bit rate was computed by measuring the maximum rate at which the reader could decode the tag’s transmissions at a BER less than \(10^{-2}\). Since Intel cards do not provide CSI information for beacon packets, we used Received Signal Strength Indicator (RSSI) for these experiments. The experiments were repeated for different beacon frequencies at the Wi-Fi AP. **Figure 16** shows that, as expected, the achievable bit rate increases with the beacon frequency. The key takeaway is that Wi-Fi Backscatter can establish uplink communication using only the AP’s beacon packets, thus requiring no additional traffic on the network.

### 8. Downlink Evaluation

Next, we evaluated the performance of our downlink communication channel. The Wi-Fi reader conveys information by encoding bits in the presence and absence of Wi-Fi packets. We assessed the Bit Error Rate (BER) and the false-positive rate.

#### 8.1 Downlink BER Versus Distance

We computed the BER as a function of the distance between the Wi-Fi Backscatter tag and the Wi-Fi reader. At each distance, the Wi-Fi reader transmitted a total of 200 kilobits to the Wi-Fi Backscatter tag across multiple transmissions. The transmit power at the reader was set to +16 dBm (40 mW). In each transmission, the reader encoded a ‘1’ bit as the presence of a packet and a ‘0’ bit as its absence. Experiments were run with three different packet sizes: 50 µs, 100 µs, and 200 µs, corresponding to bit rates of 20 kbps, 10 kbps, and 5 kbps. The Wi-Fi Backscatter tag used its thresholding circuit to decode the transmitted bits, and the BER was computed by comparing the decoded bits with the transmitted bits.

**Figure 17** plots the BER as a function of the distance. The plot shows the following:
- As expected, the BER increases with the distance between the Wi-Fi Backscatter tag and the reader. Similarly, the BER values are better at lower bit rates.
- Our prototype can efficiently identify Wi-Fi packets as small as 50 µs from nearby devices.
- At a target BER of \(10^{-2}\), the Wi-Fi Backscatter downlink can achieve bit rates of 20 kbps at distances of 2.13 meters. The range can be increased to 2.90 meters by decreasing the bit rate to 10 kbps.

#### 8.2 Downlink False-Positive Rate

Finally, we measured the false-positive rate experienced by our downlink communication channel. The false-positive rate is defined as the number of events per hour where, in the absence of a Wi-Fi Backscatter-enabled Wi-Fi transmitter, our prototype device falsely detects the Wi-Fi Backscatter preamble and wakes up the microcontroller to perform decoding. To measure this, we placed our receiver prototype 30 centimeters away from our network AP. To ensure consistent traffic on the network, we streamed music from Pandora [3] from one of the connected clients for the entire duration of the experiment. The receiver prototype was configured to log false-positive events, i.e., events when it detected the known preamble. Experiments were run during peak hours, and the prototype was configured to detect preambles where each bit was 50 µs.

**Figure 18** shows the number of false positive events per hour at our prototype receiver, as a function of the time of day. The figure shows that the maximum false positive rate observed in our setup was less than 30/hour. These low numbers are expected, as it is unlikely for normal Wi-Fi traffic to mimic the specific preamble sequence used by the Wi-Fi Backscatter system.