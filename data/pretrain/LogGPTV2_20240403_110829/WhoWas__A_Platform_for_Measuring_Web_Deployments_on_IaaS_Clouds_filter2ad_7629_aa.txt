# Title: WhoWas: A Platform for Measuring Web Deployments on IaaS Clouds

## Authors:
- Liang Wang†
- Antonio Nappa∗‡
- Juan Caballero∗
- Thomas Ristenpart†
- Aditya Akella†

### Affiliations:
- † University of Wisconsin – Madison, {liangw, rist, akella}@cs.wisc.edu
- ∗ IMDEA Software Institute, {antonio.nappa, juan.caballero}@imdea.org
- ‡ Universidad Politécnica de Madrid

## Abstract
Public infrastructure-as-a-service (IaaS) clouds, such as Amazon EC2 and Microsoft Azure, host an increasing number of web services. The dynamic, pay-as-you-go nature of modern IaaS systems allows web services to scale up or down with demand, paying only for the resources they need. However, there is a lack of studies reporting on the patterns of usage over time in IaaS clouds. We address this gap by introducing WhoWas, a measurement platform that uses active, lightweight probing to associate web content with public IP addresses on a daily basis. We use WhoWas to conduct the first measurement study of churn rates in EC2 and Azure, the efficacy of IP blacklists for malicious activity in clouds, the rate of adoption of new web software by public cloud customers, and more.

## Categories and Subject Descriptors
- C.2 [Computer-Communication Network]: Miscellaneous
- C.4 [Performance of Systems]: Measurement Techniques

## General Terms
- Measurement

## Keywords
- Cloud Computing, EC2, Azure, Web Service, Active Measurement

## 1. Introduction
Public infrastructure-as-a-service (IaaS) clouds enable customers to launch virtual machine (VM) instances, each assigned a publicly routable IP address and given access to other resources such as storage, memory, and CPU time. Customers can start and stop instances, paying fixed rates per unit time (typically per hour). An important use case for such clouds is the rapid, scalable deployment of web services. A recent study using active DNS interrogation found that 4% of the Alexa top one million websites were using IaaS clouds [1, 2].

Despite the growing importance of IaaS clouds, little is known about their usage patterns and whether peculiarities arise due to the new ways in which web systems are built. For example, the elasticity of IaaS clouds, which allows scaling up or down as needed, has not been quantitatively measured. Additionally, the level of churn in ownership of public cloud IPs and its impact on tools like IP blacklists are unknown.

We build and exercise a platform called WhoWas for measuring web deployments on IaaS clouds over time. Unlike prior work that uses DNS interrogation, WhoWas provides direct measurements of what is running on cloud-associated IP addresses via lightweight network probing and HTTP requests. Analysts can use the gathered data to perform lookups on specific IP addresses and receive a history of status and content for that IP address over time. We include various analysis tools, including a novel webpage clustering heuristic to associate webpages hosted on distinct IP addresses.

Using WhoWas, we measure web deployments on Amazon EC2 for a three-month period and Microsoft Azure for a two-month period, resulting in a dataset of approximately 900 GB. Our key findings include:
1. Sizable growth in the number of servers running on EC2 (4.9% increase) and Azure (7.7% increase).
2. The majority of web services use a small number of servers, with over 75% of all identified web services on each cloud using just a single IP address.
3. Large deployments of webpages across many IPs are highly available and stable in terms of the number of IPs used over time but show significant turnover in the specific IP addresses used.
4. Small amounts of malicious activity (mostly phishing and malware hosting) are discovered, with some malicious webpages remaining active long after being blacklisted.
5. Many web servers use outdated versions of server and backend software, some with known vulnerabilities.

To facilitate future research, we have made the source code for WhoWas publicly available [3] and will provide data to researchers upon request.

The rest of this paper is structured as follows. We present background on IaaS clouds in §2 and related work in §3. We outline the WhoWas platform in §4 and its key analysis engines in §5. We describe our data collection methods in §6 and discuss ethical and privacy considerations in §7. In §8, we demonstrate the broad utility of WhoWas through three use cases: an analysis of the dynamics of cloud deployments, a study of malicious activity, and a characterization of in-use web software. We conclude in §9.

## 2. Background
Infrastructure-as-a-Service (IaaS) systems allow users to rent virtual machines (VMs or instances) with flexible computing resources and operating systems. Providers like Amazon EC2 and Azure offer default VM configurations with set resources and numerous configuration options. On-demand instances can be created and stopped as needed, charged by the hour. Azure only offers on-demand instances, while EC2 also offers reserved instances at lower costs for one or three years.

Each instance has a private IP for internal cloud communication and a publicly routable IP. Both IPs are dynamic by default, released when an instance is stopped and reassigned to another instance, possibly from a different customer. This creates IP churn, where the same public IP address may frequently change ownership. EC2 and Azure also provide static public IP addresses (up to 5 per account), which are not tied to specific instances and can be managed by the user. Both providers offer load-balancing services to distribute requests across multiple instances.

In EC2, each instance is assigned an externally resolvable DNS name, following a provider-specific pattern. Amazon Virtual Private Cloud (VPC) allows users to create a fully-controllable and customizable virtual networking environment, offering additional features such as single-tenant hardware, multiple private IP addresses, and support for multiple network interfaces and IP addresses.

## 3. Related Work
Prior measurement studies of web usage in the cloud primarily used active DNS probing and packet capture [2]. These approaches provide limited views of website availability and deployment changes over time and are subject to sampling bias. The Wayback Machine, which archives old versions of websites, was considered but provides poor coverage of cloud usage.

Active probing is a popular technique used for various applications, such as identifying differences between TCP implementations [7], finding vulnerable SSH servers [8], compiling a Web census [9], and detecting weak cryptography keys [11]. Internet-wide active probing has been used for identifying malicious servers [12, 13]. Localized scans have been used for detecting network-based malware [14]. In contrast, WhoWas periodically scans the same IP ranges to analyze temporal evolution.

Several works have addressed the ethical issues of active probing and sharing measurement data [18, 19]. Prior studies have also investigated malicious activity in cloud services, such as security issues in shared virtual images [20] and abuse of web applications [21]. Nappa et al. [22] showed that attackers are abusing cloud instances to host drive-by exploit servers. Our work further quantifies this trend by including multiple types of malicious activity and analyzing the effect of cloud IP churn on blacklists.

## 4. The WhoWas Platform
To track website deployments on IaaS clouds over time, we designed and built WhoWas, a system that performs lightweight probing, processes the results, and provides a programmatic interface for conducting analyses on the gathered data. The basic functionality is to associate a cloud IP address with its status and content at a specific point in time.

WhoWas performs lightweight, active measurements over a user-specified time period and records the results for later analysis. A key design choice was balancing the granularity of observations against not burdening cloud service customers with many network requests. Another challenge was identifying and extracting website features to determine if two IP addresses are hosting the same web content.

The main components of WhoWas are a scanner, a webpage fetcher, and a feature generator, which populate a database with information about measurement results. WhoWas defines a Python library interface for programmatic access to the resulting datasets, making it easy to write analyses and build extensions.

### Scanner
WhoWas is seeded with a list of IP address ranges to target, which must be manually gathered. Both EC2 and Azure make public the IP addresses used by their services [23, 24]. For clouds that do not, these can be enumerated via other means, such as Whois interrogation. The scanner also takes a blacklist of IP addresses that should not be scanned, allowing operators to opt out from measurement studies.

The scanner translates these IP lists into a task list and focuses on identifying instances running HTTP and/or HTTPS services. For each IP address, the scanner sends a TCP SYN probe to port 80 (HTTP) and then to port 443 (HTTPS). If both probes fail, a probe is sent to port 22 (SSH) to identify live instances not hosting publicly accessible HTTP(S) servers.

The scanner times out a probe after two seconds and does not retry failed probes. To evaluate the effect of larger timeouts, we performed an experiment with 5% of EC2 IPs, comparing probes with timeouts of 2 s and 8 s. We observed an increase of only 0.61% in the number of IPs responding with the longer timeout. For the same set of IPs, we also had the scanner probe with a 2 s timeout once, then again 200 s later, and three more times at intervals of 100 s. Compared to the first round of scanning, only 0.27% more IPs responded with the additional 4 probes. We concluded that these failure rates would not unduly affect the interpretation of scanner results.

By default, the scanner uses a global scan rate of 250 probes per second (pps) and treats each IP once a day, meaning an IP address receives at most three probes (80/tcp, 443/tcp, 22/tcp) in a day. These scan rates are significantly smaller than those used in prior work, which range from 1,000 pps to 1.4 million pps [17, 18].

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the essential content and structure of the original text.