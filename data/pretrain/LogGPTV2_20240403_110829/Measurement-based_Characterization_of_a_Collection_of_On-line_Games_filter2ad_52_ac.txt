law distribution. This distribution has an interesting, albeit
unfortunate, implication for provisioning server resources
for on-line games:
the host must plan for several orders
of magnitude of change in popularity (and therefore re-
sources) in either direction. As a result, this indicates that
on-demand infrastructure can signiﬁcantly reduce the costs
USENIX Association
Internet Measurement Conference 2005  
7
Day of week01000200030004000500060007000PlayersWeek 1Week 2Week 3Week 4SatSunMonTueWedThuFriDay of week020000400006000080000100000120000140000PlayersWeek 1Week 2Week 3Week 4SatSunMonTueWedThuFriDay of week0100020003000400050006000PlayersWeek 1Week 2Week 3Week 4SatSunMonTueWedThuFri110Rank100100010000100000Numberofplayers550and infrastructure providers to provision and predict
resource usage on a weekly basis.
• The above distribution ﬁtting of load variations indi-
cates that it is feasible to model the week-to-week load
variations using such standard distributions. We are
exploring the feasibility of online parameter estima-
tions for using this model in resource provisioning.
4.2.2 Game workloads exhibit unpredictable long-
term ﬂuctuations
While the daily and weekly cycles in server load are clear,
the duration of our trace allows us to examine longer term
cycles. We examine the trend of three games of similar
popularity as well as the trend of the most popular game,
Half-life, over the period of just over two years. We com-
pute the trend as the moving average of the data with a
window size of one week. Figure 10 shows the trends of
the respective games. The underlying trend of these games
does not reveal periodicities on a monthly timescale, and
the limits of our trace prevent us from drawing any strong
conclusions about annual cycles. There are several points
in trace where the games appear to be synchronized, but the
explanation for the concurrent peaks or valleys is not neces-
sarily predictable. We observe peaks in all games near the
Christmas season, but, for example, all four games expe-
rience a drop during the unpredictable weeks of the Sobig
virus [27].
5 Potential for multiplexing gain
With the movement toward hosted game services [28, 29]
as well as on-demand computing infrastructure for games
such as Butterﬂy.net [30], there has been a great deal of in-
terest in reducing the cost of running game servers by shar-
ing server resources dynamically across multiple games
and applications. We explore two likely scenarios: host-
ing multiple games on the same servers, and hosting web
sites along with game servers. In addition, we study the
usage behavior of a content-distribution network for sup-
porting games. Our results show that there are signiﬁcant
challenges in multiplexing interactive applications on the
same server infrastructure and that only limited opportuni-
ties for reducing peak resource usage exist.
5.1 Game workloads are synchronized
There are two ways games can be multiplexed with each
other. One way would be to coarsely and statically assign
physical servers to particular games based on the popularity
of the game. Results from Section 4 clearly show that this
can provide a lot of beneﬁt for game companies. Another
Figure 8: FFT of the player load from four games over one
year.
the weekends during some parts of the year. Papagiannaki
et. al use wavelet multiresolution analysis (MRA) on an-
other long-term data series [26], and model their series as
a 12-hour and 24-hour cycle plus a trend. We were un-
able to apply this technique however, due to the reliance of
wavelet MRA on resolutions that are factors of two apart.
The difference between our two cycles is seven.
In order to quantify the week-to-week variation of game
workloads, Figure 9 shows distribution of week-to-week
load changes of the top 5 games during 2004: Half-Life,
Battleﬁeld 1942, Medal of Honor: Allied Assault, Amer-
ica’s Army, and Neverwinter Nights. Figure 9(a) plots the
distribution of instantaneous load changes between identi-
cal points in time of consecutive weeks, while Figure 9(b)
plots the change in average daily load between the same
day of the week of consecutive weeks. Finally, Figure 9(c)
plots changes in maximum daily load between the same
day of the week of consecutive weeks. The ﬁgures ﬁt a ‘t’
location-scale distribution, which has three parameters, a
scale parameter σ > 0, a location parameter µ, and a shape
parameter ν > 0. The density function for this distribution
is as follows:
f(x) = Γ( ν+1
2 )
νπΓ( ν
√
σ
2 )( ν+( x−µ
σ )2
ν
)− v+1
2
Note that if x is ‘t’ location-scale distributed, x−µ
σ is Stu-
dent’s ‘t’ distributed with ν degrees of freedom. As illus-
trated in Figure 9, we ﬁnd a very good ﬁt for all the three
plots. Based on this observation, we draw two main con-
clusions with regard to resource usage:
• As the ﬁgures show, almost all week-to-week load
variations are under 10% of the previous week’s work-
load. Such behavior makes it relatively easy for game
8
Internet Measurement Conference 2005
USENIX Association
024487296120144168192Hours02e+094e+096e+09Power(TimeIntegralSquaredAmplitude)America’s Army (scale=1/10)Battlefield 1942 (scale=1/10)Half−Life (scale=1/500)Neverwinter Nights(a) Instantaneous
(b) Mean
(c) Maximum
Figure 9: Week-to-week PDF of percent load changes for the top 5 games of 2004
(a) Half-Life
(b) Other games
Figure 10: Population trends for Half-life and other games with an averaging window of one week
Game
Half-Life
America’s Army
Battleﬁeld 1942
Neverwinter Nights
Average number of players
80324
5791
5402
4579
Table 2: Mean player populations for week of May 23,
2004
way would be to dynamically re-allocate servers based on
instantaneous demand for a particular game. An implicit
assumption that gives value to the latter method is that dif-
ferent games have usage patterns that are substantially dif-
ferent. Thus, rather than have each game provision server
resources based on the peak usage of their game, server re-
sources would be provisioned for the global peak.
In order to investigate the extent to which different
games can be multiplexed with each other, we exam-
ined the aggregate player populations of four popular
games. The games examined include FPS games (Half-
Life, Battleﬁeld 1942, and America’s Army), as well as
an MMORPG (Neverwinter Nights). Player populations of
these games were collected over a one week period (Sun-
day May 23, 2004 to Saturday May 29, 2004) from the
GameSpy trace. In order to compare the games directly, in-
dependent of their popularity, each game’s population data
was normalized by the mean population for that particular
game during the week. Table 2 lists the mean player pop-
ulations for the four games examined. Figure 11 plots the
normalized player loads for the four games during the one
week period. As the ﬁgure shows, player populations ﬂuc-
tuate signiﬁcantly based on the time of day from lows close
to half of the mean to peaks close to twice the mean. In ad-
dition, populations across games have peaks in close prox-
imity to each other, making it difﬁcult to achieve signiﬁcant
statistical multiplexing gain between different games. Fi-
nally, as indicated in the FFTs from Figure 8, games show
USENIX Association
Internet Measurement Conference 2005  
9
-100-50050100Percent change00.010.020.030.040.050.060.070.080.090.1ProbabilityPDF of load changesFitted T-location-scale (   =-0.9092     =5.4507     =1.574)µσν-100-80-60-40-20020406080100Percent change00.020.040.060.080.1ProbabilityPDF of load changesFitted T-location-scale (   =-1.048     =4.312     =1.539)µσν-100-80-60-40-20020406080100Percent change00.020.040.060.080.1ProbabilityPDF of load changesFitted T-location-scale (   =-0.889     =4.7352     =1.739)µσνDate020000400006000080000100000120000AverageweeklyplayerpopulationHalf-life20032004SobigDate0200040006000800010000AverageweeklyplayerpopulationBattlefield 1942Neverwinter NightsAmerica’s Army20032004SobigNorth American cereal manufacturer
Start time
End time
Total requests
Content transferred
Mon Aug 13 2001
Sun Aug 19 2001
10,368,896
59.6 GB
North American credit card company
Start time
End time
Total requests
Content transferred
Tue Aug 14 2001
Mon Aug 20 2001
112,590,195
366.4 GB
International beverage manufacturer
Start time
End time
Total requests
Geographically resolvable
Content transferred
Tue Aug 14 2001
Sat Aug 18 2001
11,932,946
11,829,429
51.1 GB
Table 3: Web site logs for week of August 13, 2001
Total connections
Geographically resolvable
From North America
From Asia
From Europe
From other continents
71,253
30,226
9,414
9,814
8,788
2,210
Table 4: Connection data for cs.mshmro.com for week
of May 23, 2004
international beverage company’s web site. Overall, these
results indicate that infrastructure sharing between applica-
tions during the week will have a somewhat limited beneﬁt
with some potential for multiplexing gain during the week-
ends and during the “off hours” for geocentric applications.
5.3 Games exhibit
graphic patterns
strong, diurnal geo-
One of the salient features of globally distributed, on-
demand computing infrastructure is that it can easily shift
resources geographically close to where the demand is
coming from. Intuitively, it makes sense that a predictable,
diurnal pattern drives global resource consumption and
hence, the provisioning of server resources. This is espe-
cially the case for applications that require human partic-
ipants such as games. To study this phenomenon, we ex-
amined a one-week period of cs.mshmro.com (Sunday
May 23, 2004 to Saturday May 29, 2004). Using this log
and a commercial geographic IP address mapping tool [31],
the location of each player connecting was resolved. As Ta-
Figure 11: Aggregate normalized load across four popular
games for week of May 23, 2004
slight peaks on the weekends with slightly more players
on-line than during the week.
5.2 Games and interactive application work-
loads are synchronized
While Section 5.1 shows the difﬁculty in obtaining statisti-
cal multiplexing gain between different games, on-demand
computing infrastructure could still be useful for multiplex-
ing between other applications such as web servers.
In
order to examine this, we obtained web server logs over
a week for three commercial sites. The sites included
those for a North American cereal manufacturer, a North
American credit card company, and an international bever-
age manufacturer. Table 3 describes the traces of the web
servers, all from the week of August 13, 2001. The servers
themselves were located in geographically distributed data
centers and the individual logs from each site were aggre-
gated and sorted into a single log ﬁle. Using these traces,
we plotted the normalized load for the web server against
the normalized global aggregate load of Half-Life during
the same week in August 2004.
As Figure 12 shows, workloads for web and on-line
games share similar daily periodic peaks. This particular
week of game trafﬁc does not have a strong weekend rise
(perhaps due to being from the summer), but the web trafﬁc
does slump during the weekends as Figures 12(a) and 12(b)
show. Interestingly, Half-life shows considerably less vari-
ance than the North American websites, but similar vari-
ance to the international beverage manufacturer website.
Intuitively, it makes sense that applications and web sites
with global usage patterns are more consistently busy and
have less daily variance. Due to the international popularity
of Half-Life, its usage pattern is quite similar to that of the
10
Internet Measurement Conference 2005
USENIX Association
00.511.52NormalizedloadAmerica’s ArmyBattlefield 1942Half−LifeNeverwinter NightsSunMonTueWedThuFriSat(a) North American
cereal manufacturer
(b) North American
credit card company
(c) International
beverage manufacturer
Figure 12: Aggregate normalized load between Half-Life and commercial web sites
erage company web server trace 2. Figure 14 shows the
per-continent, normalized load of the game and web server
for North America and Europe. The loads from other con-
tinents show similar results. As expected, the per-continent
load ﬂuctuations and variance are similar to those found in
the two regional web sites. The ﬁgure also shows that usage
of both applications are highly synchronized when broken
down into geographic regions. The degree of synchroniza-
tion thus limits the beneﬁts that geographically distributed,
on-demand computing infrastructure has on interactive ap-