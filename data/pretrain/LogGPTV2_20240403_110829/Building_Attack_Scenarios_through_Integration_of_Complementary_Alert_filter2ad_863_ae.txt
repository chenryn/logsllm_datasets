and post-conditions (consequences) to construct possible
sequences of attacks. However, our method aims to con-
struct high-level attack scenarios from low-level intrusion
alerts and reason about attacks possibly missed by the
IDSs, while the vulnerability analysis techniques are in-
Sadmind_Ping66048
Sadmind_Amslverify_Overflow4
Rsh66331
Rsh66332
Rsh66333
Rsh66335
Rsh66336
Rsh66338
Rsh66341
Rsh66351
Sadmind_Ping66115
Sadmind_Amslverify_Overflow5
Rsh66348
Rsh66350
Rsh66352
Rsh66353
(a) Integrated Correlation Graph I CGa
(b) Integrated Correlation Graph I CGb
FTP_Syst66006
Sadmind_Ping66111
HTTP_Shells2
Sadmind_Amslverify_Overflow6
Email_Almail_Overflow66050
Email_Almail_Overflow66320
Rsh66345
Rsh66346
Rsh66347
Rsh66355
(c) Integrated Correlation Graph I CGc
Figure 10. Experimental results using the DMZ data set in LLDOS 1.0
tended to understand possible ways of combining differ-
ent attacks.
In our method, the investigation of the ac-
tual alerts and raw audit data presents more opportunities
that cannot be provided by static vulnerability analysis.
Thus, we believe that our techniques are more suitable
than static vulnerability analysis when real intrusion data
is available.
6. Conclusion and Future Work
In this paper, we presented a series of techniques to con-
struct high-level attack scenarios even if the underlying
IDSs miss critical attacks. Our approach integrates two
complementary intrusion alert correlation methods: (1)
correlation based on similarity between alert attributes,
and (2) correlation based on prerequisites and conse-
quences of attacks. Moreover, our approach uses the in-
trinsic relationships between possibly related attacks to
hypothesize missed attacks. To reason about hypothesized
attacks, we developed techniques to compute constraints
that indirectly related attacks must satisfy and proposed
to further validate hypothesized attacks through raw au-
dit data. Finally, we presented a technique to consolidate
hypothesized attacks to generate concise representations
of constructed attack scenarios. Our experimental results
demonstrated the potential of these techniques.
The proposed techniques can provide meaningful
“guesses” of attacks possibly missed by the IDSs, and
thus supply good starting points as well as supporting ev-
idences to facilitate investigation of unknown intrusions.
A limitation of these techniques is that they depend on
known attacks used together with unknown attacks to
identify those unknown ones. These techniques will fail
if all attacks involved in a sequence attacks are unknown.
Moreover, the effectiveness of these techniques for differ-
ent mixtures of known and unknown attacks still requires
further investigation.
This paper is a starting point for improving intrusion
detection through alert correlation. In our future research,
we plan to continue our investigation in this direction. In
particular, we will develop additional techniques to vali-
date and reason about hypothesized attacks and perform
a more thorough, quantitative evaluation of the proposed
techniques.
References
[1] P. Ammann, D. Wijesekera, and S. Kaushik. Scalable,
graph-based network vulnerability analysis. In Proceed-
ings of the 9th ACM Conference on Computer and Com-
munications Security, pages 217–224, November 2002.
[2] AT & T Research Labs. Graphviz - open source graph lay-
out and drawing software. http://www.research.
att.com/sw/tools/graphviz/.
[3] G. Combs. The ethereal network analyzer. http://
www.ethereal.com.
[4] F. Cuppens. Managing alerts in a multi-intrusion detection
environment. In Proceedings of the 17th Annual Computer
Security Applications Conference, December 2001.
[5] F. Cuppens and A. Miege. Alert correlation in a coop-
erative intrusion detection framework. In Proceedings of
the 2002 IEEE Symposium on Security and Privacy, May
2002.
[6] F. Cuppens and R. Ortalo. LAMBDA: A language to
model a database for detection of attacks. In Proc. of Re-
cent Advances in Intrusion Detection (RAID 2000), pages
197–216, September 2000.
[7] O. Dain and R. Cunningham. Building scenarios from a
heterogeneous alert stream.
In Proceedings of the 2001
IEEE Workshop on Information Assurance and Security,
pages 231–235, June 2001.
[8] O. Dain and R. Cunningham. Fusing a heterogeneous
In Proceedings of the 2001
alert stream into scenarios.
ACM Workshop on Data Mining for Security Applications,
pages 1–13, Nov. 2001.
[9] H. Debar and A. Wespi. Aggregation and correlation of
intrusion-detection alerts. In Recent Advances in Intrusion
Detection, LNCS 2212, pages 85 – 103, 2001.
[10] S. Eckmann, G. Vigna, and R. Kemmerer. STATL: An At-
tack Language for State-based Intrusion Detection. Jour-
nal of Computer Security, 10(1/2):71–104, 2002.
[11] Internet Security Systems. RealSecure intrusion detection
system. http://www.iss.net.
[12] S. Jha, O. Sheyner, and J. Wing. Two formal analyses
In Proceedings of the 15th Computer
of attack graphs.
Security Foundation Workshop, June 2002.
[13] K. Julisch. Mining alarm clusters to improve alarm han-
dling efﬁciency. In Proceedings of the 17th Annual Com-
puter Security Applications Conference (ACSAC), pages
12–21, December 2001.
[14] K. Julisch and M. Dacier. Mining intrusion detection
alarms for actionable knowledge. In The 8th ACM Inter-
national Conference on Knowledge Discovery and Data
Mining, July 2002.
[15] MIT Lincoln Lab.
2000 DARPA intrusion
detection
http:
//www.ll.mit.edu/IST/ideval/data/2000/
2000_data_index.html, 2000.
datasets.
scenario
speciﬁc
[16] B. Morin and H. Debar. Correlation of intrusion symp-
toms: an application of chronicles. In Proceedings of the
6th International Conference on Recent Advances in In-
trusion Detection (RAID’03), September 2003.
[17] B. Morin, L. M´e, H. Debar, and M. Ducass´e. M2D2: A
formal data model for IDS alert correlation. In Proceed-
ings of the 5th International Symposium on Recent Ad-
vances in Intrusion Detection (RAID 2002), pages 115–
137, 2002.
[18] P. Ning and Y. Cui.
Intrusion alert correlator (version
http://discovery.csc.ncsu.edu/
0.2).
software/correlator/ver0.2/iac.html,
2002.
[19] P. Ning, Y. Cui, and D. S. Reeves. Constructing attack sce-
narios through correlation of intrusion alerts. In Proceed-
ings of the 9th ACM Conference on Computer and Com-
munications Security, pages 245–254, Washington, D.C.,
November 2002.
[20] P. Ning and D. Xu. Learning attack stratagies from intru-
sion alerts. In Proceedings of the 10th ACM Conference on
Computer and Communications Security, October 2003.
To appear.
[21] P. Porras, M. Fong, and A. Valdes. A mission-impact-
based approach to INFOSEC alarm correlation.
In Pro-
ceedings of the 5th International Symposium on Recent
Advances in Intrusion Detection (RAID 2002), pages 95–
114, 2002.
[22] X. Qin and W. Lee. Statistical causality analysis of infosec
alert data. In Proceedings of The 6th International Sym-
posium on Recent Advances in Intrusion Detection (RAID
2003), Pittsburgh, PA, Sept. 2003.
[23] C. Ramakrishnan and R. Sekar. Model-based analysis of
conﬁguration vulnerabilities. Journal of Computer Secu-
rity, 10(1/2):189–209, 2002.
[24] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. Wing.
Automated generation and analysis of attack graphs.
In
Proceedings of IEEE Symposium on Security and Privacy,
May 2002.
[25] S. Staniford, J. Hoagland, and J. McAlerney. Practical au-
tomated detection of stealthy portscans. Journal of Com-
puter Security, 10(1/2):105–136, 2002.
[26] S. Templeton and K. Levitt. A requires/provides model
for computer attacks.
In Proceedings of New Security
Paradigms Workshop, pages 31 – 38. ACM Press, Septem-
ber 2000.
[27] A. Valdes and K. Skinner. Probabilistic alert correlation.
In Proceedings of the 4th International Symposium on Re-
cent Advances in Intrusion Detection (RAID 2001), pages
54–68, 2001.
A. The Hyper-alert Types
In this appendix, we give more information about the
hyper-alert types used in our examples and experiments.
We present the implication relationships between pred-
icates in Table 2. Table 3 shows all hyper-alert types
used in our examples, and Table 4 describes all hyper-alert
types used in our experiments. In both Tables 3 and 4, the
set of fact attributes for each hyper-alert type is {SrcIP,
SrcPort, DestIP, DestPort}.
Table 2. Implication relationships between the
predicates
Predicate
ExistService(IP,Port)
GainOSInfo(IP)
GainOSInfo(IP)
OSSolaris(IP)
GainSMTPInfo(SrcIP,DestIP)
GainAccess(IP)
SystemCompromised(IP)
ReadyForDDOSAttack(IP)
Implied Predicate
GainInformation(IP)
GainInformation(IP)
OSSolaris(IP)
OSUNIX(IP)
SMTPSupportTurn(SrcIP,DestIP)
SystemCompromised(IP)
SystemAttack(IP)
ReadyForDDOSAttack
Hyper-alert Type
ICMP PING NMAP
SCAN NMAP TCP
IMAP Authen Overﬂow
FTP Glob Expansion
Rsh
Mstream Zombie
Table 3. Hyper-alert types used in the examples
Prerequisite
ExistHost(DestIP)
ExistService(DestIP,DestPort)
∧VulnerableAuthenticate(DestIP)
ExistService(DestIP,DestPort)
∧VulnerableFTPRequest(DestIP)
GainAccess(DestIP) ∧GainAccess(SrcIP)
SystemCompromised(DestIP)
∧SystemCompromised(SrcIP)
Consequence
ExistHost(DestIP)
{ExistService(DestIP,DestPort)}
{GainAccess(DestIP)}
{GainAccess(DestIP)}
{SystemCompromised(DestIP),
SystemCompromised(SrcIP)}
{ReadyForDDOSAttack(DestIP),
ReadyForDDOSAttack(SrcIP)}
Hyper-alert Type
Admind
DNS HInfo
Email Almail Overﬂow
Email Debug
Email Ehlo
Email Turn
FTP Pass
FTP Put
FTP Syst
FTP User
HTTP ActiveX
HTTP Cisco Catalyst Exec
HTTP Java
HTTP Shells
Mstream Zombie
Port Scan
RIPAdd
RIPExpire
Rsh
Sadmind Amslverify Overﬂow
Sadmind Ping
SSH Detected
Stream DoS
TCP Urgent Data
TelnetEnvAll
TelnetTerminaltype
TelnetXdisplay
UDP Port Scan
Table 4. Hyper-alert types used in our experiments
Prerequisite
Consequence
ExistService(DestIP,DestPort)
ExistService(DestIP,DestPort)
∧VulnerableAlMailPOP3Server(DestIP)
ExistService(DestIP,DestPort)
∧SendMailInDebugMode(DestIP)
ExistService(DestIP,DestPort)
∧SMTPSupportEhlo(DestIP)
ExistService(DestIP,DestPort)
∧SMTPSupportTurn(SrcIP,DestIP)
ExistService(DestIP,DestPort)
ExistService(DestIP,DestPort)
∧GainAccess(DestIP)
ExistService(DestIP,DestPort)
ExistService(DestIP,DestPort)
ActiveXEnabledBrowser(SrcIP)
CiscoCatalyst3500XL(DestIP)
JavaEnabledBrowser(SrcIP)
VulnerableCGIBin(DestIP)
∧OSUNIX(DestIP)
SystemCompromised(DestIP)
∧SystemCompromised(SrcIP)
GainAccess(DestIP) ∧GainAccess(SrcIP)
VulnerableSadmind(DestIP)
∧OSSolaris(DestIP)
OSSolaris(DestIP)
ReadyForDDOSAttack
{GainOSInfo(DestIP)}
{GainAccess(DestIP)}
{GainAccess(DestIP)}
{GainSMTPInfo(SrcIP,DestIP)}
{MailLeakage(DestIP)}
{SystemCompromised(DestIP)}
{GainOSInfo(DestIP)}
{SystemCompromised(SrcIP)}
{GainAccess(DestIP)}
{SystemCompromised(SrcIP)}
{GainAccess(DestIP)}
{ReadyForDDOSAttack(SrcIP),
ReadyForDDOSAttack(DestIP)}
{ExistService(DestIP,DestPort)}
{SystemCompromised(DestIP),
SystemCompromised(SrcIP)}
{GainAccess(DestIP)}
{VulnerableSadmind(DestIP)}
{DDOSAgainst(DestIP)}
{SystemAttacked(DestIP)}
{SystemAttacked(DestIP)}
{GainTerminalType(DestIP)}
{SystemAttacked(DestIP)}
{ExistService(DestIP,DestPort)}