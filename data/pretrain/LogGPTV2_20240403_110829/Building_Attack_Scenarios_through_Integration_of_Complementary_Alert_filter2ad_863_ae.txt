### Introduction
Our method aims to construct high-level attack scenarios from low-level intrusion alerts and reason about attacks that might be missed by Intrusion Detection Systems (IDSs). Unlike traditional vulnerability analysis techniques, which focus on pre-conditions and post-conditions to construct possible sequences of attacks, our approach leverages the actual alerts and raw audit data to provide more comprehensive insights.

### Methodology
To illustrate the effectiveness of our method, we present experimental results using the DMZ dataset in LLDOS 1.0. The following integrated correlation graphs (ICGs) show the relationships between different types of alerts:

#### Integrated Correlation Graphs (ICGs)
- **ICGa:**
  - Sadmind_Ping66048
  - Sadmind_Amslverify_Overflow4
  - Rsh66331, Rsh66332, Rsh66333, Rsh66335, Rsh66336, Rsh66338, Rsh66341, Rsh66351
  - Sadmind_Ping66115
  - Sadmind_Amslverify_Overflow5
  - Rsh66348, Rsh66350, Rsh66352, Rsh66353

- **ICGb:**
  - FTP_Syst66006
  - Sadmind_Ping66111
  - HTTP_Shells2
  - Sadmind_Amslverify_Overflow6
  - Email_Almail_Overflow66050
  - Email_Almail_Overflow66320
  - Rsh66345, Rsh66346, Rsh66347, Rsh66355

- **ICGc:**
  - FTP_Syst66006
  - Sadmind_Ping66111
  - HTTP_Shells2
  - Sadmind_Amslverify_Overflow6
  - Email_Almail_Overflow66050
  - Email_Almail_Overflow66320
  - Rsh66345, Rsh66346, Rsh66347, Rsh66355

**Figure 10.** Experimental results using the DMZ data set in LLDOS 1.0

### Comparison with Static Vulnerability Analysis
Static vulnerability analysis techniques are designed to understand possible ways of combining different attacks. However, our method offers more opportunities by investigating actual alerts and raw audit data, which static analysis cannot provide. Therefore, our techniques are more suitable when real intrusion data is available.

### Conclusion and Future Work
In this paper, we presented a series of techniques to construct high-level attack scenarios even if the underlying IDSs miss critical attacks. Our approach integrates two complementary intrusion alert correlation methods:
1. **Correlation based on similarity between alert attributes.**
2. **Correlation based on prerequisites and consequences of attacks.**

Moreover, our approach uses the intrinsic relationships between possibly related attacks to hypothesize missed attacks. To reason about hypothesized attacks, we developed techniques to compute constraints that indirectly related attacks must satisfy and proposed to further validate hypothesized attacks through raw audit data. Finally, we presented a technique to consolidate hypothesized attacks to generate concise representations of constructed attack scenarios. Our experimental results demonstrated the potential of these techniques.

The proposed techniques can provide meaningful "guesses" of attacks possibly missed by the IDSs, thus supplying good starting points and supporting evidence to facilitate the investigation of unknown intrusions. A limitation of these techniques is that they depend on known attacks used together with unknown attacks to identify the unknown ones. These techniques will fail if all attacks in a sequence are unknown. Additionally, the effectiveness of these techniques for different mixtures of known and unknown attacks still requires further investigation.

This paper serves as a starting point for improving intrusion detection through alert correlation. In future research, we plan to continue our investigation in this direction. Specifically, we will develop additional techniques to validate and reason about hypothesized attacks and perform a more thorough, quantitative evaluation of the proposed techniques.

### References
1. P. Ammann, D. Wijesekera, and S. Kaushik. Scalable, graph-based network vulnerability analysis. In Proceedings of the 9th ACM Conference on Computer and Communications Security, pages 217–224, November 2002.
2. AT & T Research Labs. Graphviz - open source graph layout and drawing software. http://www.research.att.com/sw/tools/graphviz/.
3. G. Combs. The ethereal network analyzer. http://www.ethereal.com.
4. F. Cuppens. Managing alerts in a multi-intrusion detection environment. In Proceedings of the 17th Annual Computer Security Applications Conference, December 2001.
5. F. Cuppens and A. Miege. Alert correlation in a cooperative intrusion detection framework. In Proceedings of the 2002 IEEE Symposium on Security and Privacy, May 2002.
6. F. Cuppens and R. Ortalo. LAMBDA: A language to model a database for detection of attacks. In Proc. of Recent Advances in Intrusion Detection (RAID 2000), pages 197–216, September 2000.
7. O. Dain and R. Cunningham. Building scenarios from a heterogeneous alert stream. In Proceedings of the 2001 IEEE Workshop on Information Assurance and Security, pages 231–235, June 2001.
8. O. Dain and R. Cunningham. Fusing a heterogeneous alert stream into scenarios. In Proceedings of the 2001 ACM Workshop on Data Mining for Security Applications, pages 1–13, Nov. 2001.
9. H. Debar and A. Wespi. Aggregation and correlation of intrusion-detection alerts. In Recent Advances in Intrusion Detection, LNCS 2212, pages 85 – 103, 2001.
10. S. Eckmann, G. Vigna, and R. Kemmerer. STATL: An Attack Language for State-based Intrusion Detection. Journal of Computer Security, 10(1/2):71–104, 2002.
11. Internet Security Systems. RealSecure intrusion detection system. http://www.iss.net.
12. S. Jha, O. Sheyner, and J. Wing. Two formal analyses of attack graphs. In Proceedings of the 15th Computer Security Foundation Workshop, June 2002.
13. K. Julisch. Mining alarm clusters to improve alarm handling efficiency. In Proceedings of the 17th Annual Computer Security Applications Conference (ACSAC), pages 12–21, December 2001.
14. K. Julisch and M. Dacier. Mining intrusion detection alarms for actionable knowledge. In The 8th ACM International Conference on Knowledge Discovery and Data Mining, July 2002.
15. MIT Lincoln Lab. 2000 DARPA intrusion detection datasets. http://www.ll.mit.edu/IST/ideval/data/2000/2000_data_index.html, 2000.
16. B. Morin and H. Debar. Correlation of intrusion symptoms: an application of chronicles. In Proceedings of the 6th International Conference on Recent Advances in Intrusion Detection (RAID’03), September 2003.
17. B. Morin, L. M´e, H. Debar, and M. Ducass´e. M2D2: A formal data model for IDS alert correlation. In Proceedings of the 5th International Symposium on Recent Advances in Intrusion Detection (RAID 2002), pages 115–137, 2002.
18. P. Ning and Y. Cui. Intrusion alert correlator (version 0.2). http://discovery.csc.ncsu.edu/software/correlator/ver0.2/iac.html, 2002.
19. P. Ning, Y. Cui, and D. S. Reeves. Constructing attack scenarios through correlation of intrusion alerts. In Proceedings of the 9th ACM Conference on Computer and Communications Security, pages 245–254, Washington, D.C., November 2002.
20. P. Ning and D. Xu. Learning attack strategies from intrusion alerts. In Proceedings of the 10th ACM Conference on Computer and Communications Security, October 2003. To appear.
21. P. Porras, M. Fong, and A. Valdes. A mission-impact-based approach to INFOSEC alarm correlation. In Proceedings of the 5th International Symposium on Recent Advances in Intrusion Detection (RAID 2002), pages 95–114, 2002.
22. X. Qin and W. Lee. Statistical causality analysis of infosec alert data. In Proceedings of The 6th International Symposium on Recent Advances in Intrusion Detection (RAID 2003), Pittsburgh, PA, Sept. 2003.
23. C. Ramakrishnan and R. Sekar. Model-based analysis of configuration vulnerabilities. Journal of Computer Security, 10(1/2):189–209, 2002.
24. O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. Wing. Automated generation and analysis of attack graphs. In Proceedings of IEEE Symposium on Security and Privacy, May 2002.
25. S. Staniford, J. Hoagland, and J. McAlerney. Practical automated detection of stealthy portscans. Journal of Computer Security, 10(1/2):105–136, 2002.
26. S. Templeton and K. Levitt. A requires/provides model for computer attacks. In Proceedings of New Security Paradigms Workshop, pages 31 – 38. ACM Press, September 2000.
27. A. Valdes and K. Skinner. Probabilistic alert correlation. In Proceedings of the 4th International Symposium on Recent Advances in Intrusion Detection (RAID 2001), pages 54–68, 2001.

### Appendix: Hyper-alert Types
In this appendix, we provide more information about the hyper-alert types used in our examples and experiments. We present the implication relationships between predicates in Table 2. Tables 3 and 4 describe all hyper-alert types used in our examples and experiments, respectively. For both tables, the set of fact attributes for each hyper-alert type is {SrcIP, SrcPort, DestIP, DestPort}.

#### Table 2. Implication Relationships Between Predicates
| Predicate | Implied Predicate |
|-----------|------------------|
| ExistService(IP, Port) | GainInformation(IP) |
| GainOSInfo(IP) | GainInformation(IP) |
| OSSolaris(IP) | OSUNIX(IP) |
| GainSMTPInfo(SrcIP, DestIP) | SMTPSupportTurn(SrcIP, DestIP) |
| GainAccess(IP) | SystemCompromised(IP) |
| SystemCompromised(IP) | SystemAttack(IP) |
| ReadyForDDOSAttack(IP) | ReadyForDDOSAttack |

#### Table 3. Hyper-alert Types Used in the Examples
| Hyper-alert Type | Prerequisite | Consequence |
|------------------|--------------|-------------|
| ICMP PING NMAP | ExistHost(DestIP) | ExistHost(DestIP) |
| SCAN NMAP TCP | ExistService(DestIP, DestPort) ∧ VulnerableAuthenticate(DestIP) | {ExistService(DestIP, DestPort)} |
| IMAP Authen Overflow | ExistService(DestIP, DestPort) ∧ VulnerableFTPRequest(DestIP) | {GainAccess(DestIP)} |
| FTP Glob Expansion | GainAccess(DestIP) ∧ GainAccess(SrcIP) | {SystemCompromised(DestIP), SystemCompromised(SrcIP)} |
| Rsh | SystemCompromised(DestIP) ∧ SystemCompromised(SrcIP) | {ReadyForDDOSAttack(DestIP), ReadyForDDOSAttack(SrcIP)} |
| Mstream Zombie | GainAccess(DestIP) ∧ GainAccess(SrcIP) | {SystemCompromised(DestIP), SystemCompromised(SrcIP)} |

#### Table 4. Hyper-alert Types Used in Our Experiments
| Hyper-alert Type | Prerequisite | Consequence |
|------------------|--------------|-------------|
| Admind | ExistService(DestIP, DestPort) | {GainOSInfo(DestIP)} |
| DNS HInfo | ExistService(DestIP, DestPort) | {GainOSInfo(DestIP)} |
| Email Almail Overflow | ExistService(DestIP, DestPort) ∧ VulnerableAlMailPOP3Server(DestIP) | {GainAccess(DestIP)} |
| Email Debug | ExistService(DestIP, DestPort) ∧ SendMailInDebugMode(DestIP) | {GainAccess(DestIP)} |
| Email Ehlo | ExistService(DestIP, DestPort) ∧ SMTPSupportEhlo(DestIP) | {GainSMTPInfo(SrcIP, DestIP)} |
| Email Turn | ExistService(DestIP, DestPort) ∧ SMTPSupportTurn(SrcIP, DestIP) | {MailLeakage(DestIP)} |
| FTP Pass | ExistService(DestIP, DestPort) | {GainAccess(DestIP)} |
| FTP Put | ExistService(DestIP, DestPort) | {SystemCompromised(DestIP)} |
| FTP Syst | ExistService(DestIP, DestPort) | {GainOSInfo(DestIP)} |
| FTP User | ExistService(DestIP, DestPort) | {SystemCompromised(SrcIP)} |
| HTTP ActiveX | ActiveXEnabledBrowser(SrcIP) | {GainAccess(DestIP)} |
| HTTP Cisco Catalyst Exec | CiscoCatalyst3500XL(DestIP) | {SystemCompromised(SrcIP)} |
| HTTP Java | JavaEnabledBrowser(SrcIP) | {GainAccess(DestIP)} |
| HTTP Shells | VulnerableCGIBin(DestIP) ∧ OSUNIX(DestIP) | {SystemCompromised(DestIP)} |
| Mstream Zombie | SystemCompromised(DestIP) ∧ SystemCompromised(SrcIP) | {ReadyForDDOSAttack(SrcIP), ReadyForDDOSAttack(DestIP)} |
| Port Scan | ExistService(DestIP, DestPort) | {ExistService(DestIP, DestPort)} |
| RIPAdd | ExistService(DestIP, DestPort) | {SystemCompromised(DestIP), SystemCompromised(SrcIP)} |
| RIPExpire | ExistService(DestIP, DestPort) | {GainAccess(DestIP)} |
| Rsh | ExistService(DestIP, DestPort) | {VulnerableSadmind(DestIP)} |
| Sadmind Amslverify Overflow | VulnerableSadmind(DestIP) ∧ OSSolaris(DestIP) | {DDOSAgainst(DestIP)} |
| Sadmind Ping | OSSolaris(DestIP) | {ReadyForDDOSAttack} |
| SSH Detected | ExistService(DestIP, DestPort) | {SystemAttacked(DestIP)} |
| Stream DoS | ExistService(DestIP, DestPort) | {SystemAttacked(DestIP)} |
| TCP Urgent Data | ExistService(DestIP, DestPort) | {SystemAttacked(DestIP)} |
| TelnetEnvAll | ExistService(DestIP, DestPort) | {GainTerminalType(DestIP)} |
| TelnetTerminaltype | ExistService(DestIP, DestPort) | {SystemAttacked(DestIP)} |
| TelnetXdisplay | ExistService(DestIP, DestPort) | {SystemAttacked(DestIP)} |
| UDP Port Scan | ExistService(DestIP, DestPort) | {ExistService(DestIP, DestPort)} |