.PP
\fBmonitor\fR [\fISERVICE\fR...]
.RS 4
监视已交换的消息，可使用 Ctrl\-C 中断监视。 如果未指定
\fISERVICE\fR
参数，那么显示总线上的所有消息。 如果指定了
\fISERVICE\fR
参数("唯一名"或"易读名")， 那么仅显示到达此peer或者从此peer发出的消息。
.RE
.PP
\fBcapture\fR [\fISERVICE\fR...]
.RS 4
与
\fBmonitor\fR
命令类似， 不同之处在于以 pcap 格式输出(详见
\m[blue]\fBLibpcap File Format\fR\m[]\&\s-2\u[1]\d\s+2)。 强烈推荐将 STDOUT 重定向到一个文件中，然后使用
\fBwireshark\fR(1)
工具查看与分析。
.RE
.PP
\fBtree\fR [\fISERVICE\fR...]
.RS 4
显示服务的对象树。 如果给出了
\fISERVICE\fR
参数， 那么仅显示指定服务的对象树， 否则显示总线上所有具有"易读名"服务的对象树。
.RE
.PP
\fBintrospect\fR \fISERVICE\fR \fIOBJECT\fR [\fIINTERFACE\fR]
.RS 4
显示SERVICE服务上OBJECT对象(以路径表示)的 interface, method, property, signal 值。 如果指定了 INTERFACE 参数， 那么仅输出指定接口上的成员。
.RE
.PP
\fBcall\fR \fISERVICE\fR \fIOBJECT\fR \fIINTERFACE\fR \fIMETHOD\fR [\fISIGNATURE\fR\ [\fIARGUMENT\fR...]]
.RS 4
调用一个方法并显示应答。 必须指定服务名称(SERVICE)、对象路径(OBJECT)、接口名称(INTERFACE)、方法名称(METHOD)。 如果要给方法传递参数， 那么必须使用类型标记(SIGNATURE)后跟一个参数字符串(ARGUMENT)。 格式细节参见下面的"参数格式"小节。 可以使用
\fB\-\-quiet\fR
选项抑制输出。
.RE
.PP
\fBget\-property\fR \fISERVICE\fR \fIOBJECT\fR \fIINTERFACE\fR \fIPROPERTY\fR...
.RS 4
显示对象属性的当前值。 必须指定服务名称(SERVICE)、对象路径(OBJECT)、接口名称(INTERFACE)、属性名称(PROPERTY)。 如果同时指定了多个属性名称，那么将按照每行一个，依次显示每个属性的当前值。 默认以精简格式输出， 但是可以使用
\fB\-\-verbose\fR
选项以详细格式输出。
.RE
.PP
\fBset\-property\fR \fISERVICE\fR \fIOBJECT\fR \fIINTERFACE\fR \fIPROPERTY\fR \fISIGNATURE\fR \fIARGUMENT\fR...
.RS 4
设置对象属性的当前值。 必须指定下列参数： 服务名称(SERVICE)、对象路径(OBJECT)、接口名称(INTERFACE)、 属性名称(PROPERTY)、类型标记(SIGNATURE)、参数字符串(ARGUMENT)。
.RE
.PP
\fBhelp\fR
.RS 4
显示语法帮助
.RE
.SH "参数格式"
.PP
\fBcall\fR
与
\fBset\-property\fR
命令都接收一个类型标记(SIGNATURE)与多个参数字符串(ARGUMENT)。 有关"类型标记"的详细说明， 参见
\m[blue]\fBType system chapter of the D\-Bus specification\fR\m[]\&\s-2\u[2]\d\s+2
文档的"Type System"小节。 对于简单类型(Basic types)， 类型标记(SIGNATURE)后面的每个参数(ARGUMENT)都必须是参数值的字符串表示。 布尔类型真值可以表示为
"true",
"yes",
"on",
"1"
； 布尔类型假值可以表示为
"false",
"no",
"off",
"0"
。 对于数组，先是一个表示数组项数的数字，然后跟着数组中的每一项。 对于变量，先是一个表示变量类型的字符，然后跟着变量的值。 对于字典与结构，直接指定其内容即可。
.PP
例如，
.sp
.if n \{\
.RS 4
.\}
.nf
s jawoll
.fi
.if n \{\
.RE
.\}
.sp
是一个简单的字符串
"jawoll"
， "s"是类型标记，"jawoll"是参数字符串。
.PP
.if n \{\
.RS 4
.\}
.nf
as 3 hello world foobar
.fi
.if n \{\
.RE
.\}
.sp
是一个字符串数组，包含3个成员，分别是
"hello",
"world",
"foobar"
.PP
.if n \{\
.RS 4
.\}
.nf
a{sv} 3 One s Eins Two u 2 Yes b true
.fi
.if n \{\
.RE
.\}
.sp
是一个字典数组， 该字典将字符串映射为变量，包含3个成员，分别是： 字符串
"One"
映射到字符串
"Eins"
， 字符串
"Two"
映射到32位无符号整数"2"， 字符串
"Yes"
映射到布尔真值。
.PP
注意，
\fBcall\fR,
\fBget\-property\fR,
\fBintrospect\fR
命令在输出应答时也同样是这个格式。 由于这个格式过于精简不易理解， 所以
\fBcall\fR
与
\fBget\-property\fR
命令提供了
\fB\-\-verbose\fR
选项用于输出详细的、 易于理解的多行输出格式。
.SH "例子"
.PP
\fBExample\ \&1.\ \&读写属性\fR
.PP
下面的两个命令，首先写入一个属性，然后再读取它。 该属性位于
"org\&.freedesktop\&.systemd1"
服务的
"/org/freedesktop/systemd1"
对象中， 属性名是
"org\&.freedesktop\&.systemd1\&.Manager"
接口上的
"LogLevel"
， 此属性是一个简单的字符串：
.sp
.if n \{\
.RS 4
.\}
.nf
# busctl set\-property org\&.freedesktop\&.systemd1 /org/freedesktop/systemd1 org\&.freedesktop\&.systemd1\&.Manager LogLevel s debug
# busctl get\-property org\&.freedesktop\&.systemd1 /org/freedesktop/systemd1 org\&.freedesktop\&.systemd1\&.Manager LogLevel s "debug"
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&精简输出与详细输出\fR
.PP
下面的两个命令，两次读取同一个属性(字符串数组类型)， 第一次以精简格式显示， 第二次以详细格式显示：
.sp
.if n \{\
.RS 4
.\}
.nf
$ busctl get\-property org\&.freedesktop\&.systemd1 /org/freedesktop/systemd1 org\&.freedesktop\&.systemd1\&.Manager Environment
as 2 "LANG=en_US\&.utf8" "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin"
$ busctl get\-property \-\-verbose org\&.freedesktop\&.systemd1 /org/freedesktop/systemd1 org\&.freedesktop\&.systemd1\&.Manager Environment
ARRAY "s" {
        STRING "LANG=en_US\&.utf8";
        STRING "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin";
};
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&3.\ \&调用方法\fR
.PP
下面的命令， 在
"org\&.freedesktop\&.systemd1"
服务的
"/org/freedesktop/systemd1"
对象的
"org\&.freedesktop\&.systemd1\&.Manager"
接口上调用了
"StartUnit"
方法， 并且给此方法传递了
"cups\&.service"
与
"replace"
两个字符串。 而此方法返回了一个对象路径：
.sp
.if n \{\
.RS 4
.\}
.nf
# busctl call org\&.freedesktop\&.systemd1 /org/freedesktop/systemd1 org\&.freedesktop\&.systemd1\&.Manager StartUnit ss "cups\&.service" "replace"
o "/org/freedesktop/systemd1/job/42684"
.fi
.if n \{\
.RE
.\}
.SH "参见"
.PP
\fBdbus-daemon\fR(1),
\m[blue]\fBD\-Bus\fR\m[]\&\s-2\u[3]\d\s+2,
\fBsd-bus\fR(3),
\fBsystemd\fR(1),
\fBmachinectl\fR(1),
\fBwireshark\fR(1)
.SH "NOTES"
.IP " 1." 4
Libpcap File Format
.RS 4
\%http://wiki.wireshark.org/Development/LibpcapFileFormat
.RE
.IP " 2." 4
Type system chapter of the D-Bus specification
.RS 4
\%http://dbus.freedesktop.org/doc/dbus-specification.html#type-system
.RE
.IP " 3." 4
D-Bus
.RS 4
\%http://freedesktop.org/wiki/Software/dbus
.RE
.\" manpages-zh translator: 金步国
.\" manpages-zh comment: 金步国作品集：http://www.jinbuguo.com