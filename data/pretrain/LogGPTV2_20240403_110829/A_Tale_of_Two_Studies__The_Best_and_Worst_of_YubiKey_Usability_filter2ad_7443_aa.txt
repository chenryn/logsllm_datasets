title:A Tale of Two Studies: The Best and Worst of YubiKey Usability
author:Joshua Reynolds and
Trevor Smith and
Ken Reese and
Luke Dickinson and
Scott Ruoti and
Kent E. Seamons
2018 IEEE Symposium on Security and Privacy
A Tale of Two Studies:
The Best and Worst of YubiKey Usability
†∗
∗
, Trevor Smith
Joshua Reynolds
†
University of Illinois at Urbana-Champaign,
MIT Lincoln Laboratory
PI:EMAIL, {tsmith, ken.reese, luke}@isrl.byu.edu, PI:EMAIL, PI:EMAIL
Brigham Young University,
, Kent Seamons
‡
∗
, Ken Reese
, Luke Dickinson
∗
∗
, Scott Ruoti
‡
∗
the
(2FA)
Abstract—Two-factor
security
authentication
signiﬁcantly
improves
of password-based authentication.
Recently, there has been increased interest in Universal 2nd
Factor (U2F) security keys—small hardware devices that require
users to press a button on the security key to authenticate. To
examine the usability of security keys in non-enterprise usage,
we conducted two user studies of the YubiKey, a popular line
of U2F security keys. The ﬁrst study tasked 31 participants
with conﬁguring a Windows, Google, and Facebook account to
authenticate using a YubiKey. This study revealed problems
with setup instructions and workﬂow including users locking
themselves out of their operating system or thinking they had
successfully enabled 2FA when they had not. In contrast, the
second study had 25 participants use a YubiKey in their daily
lives over a period of four weeks, revealing that participants
generally enjoyed the experience. Conducting both a laboratory
and longitudinal study yielded insights into the usability of
security keys that would not have been evident from either
study in isolation. Based on our analysis, we recommend
standardizing the setup process, enabling veriﬁcation of success,
integrating with operating systems,
allowing shared accounts,
and preventing lockouts.
Index Terms—two-factor authentication, hardware tokens,
usability, longitudinal study, YubiKey
I. INTRODUCTION
Passwords are the most widespread form of user
authentication on the web today [1]. Although there are
numerous proposals to replace passwords, none have matched
their deployability nor their usability [2]. Still, passwords come
with signiﬁcant security and usability problems. For example,
users struggle to create and remember strong passwords [3],
[4], developers fail to properly secure stored passwords [5],
[6], and password phishing is regularly successful [7].
[2],
To address the limitations of password-based authentication,
many have advocated for a switch to two-factor authentication
[8]. 2FA improves upon password-based
(2FA)
authentication by requiring that
in addition to proving
knowledge of their password, a user must also prove possession
of a trusted hardware device (the second factor). Even if an
attacker steals a user’s password, they will be unable to use it
by itself to impersonate the user.
At the forefront of the push for 2FA is the FIDO Alliance
and their Universal 2nd Factor protocol (U2F) [9]. The U2F
protocol—which already has broad support and is available
in systems used by 1.5 billion people [10]—is currently
implemented by security keys. A security key is a hardware
device that authenticates the user after the user presses a
button on the security key [8]. The button tap is a test of
user presence and prevents malware on the host device from
using the security key surreptitiously. Most commonly, security
keys are designed to be plugged into a USB port, though
they can also communicate with other devices using wireless
protocols (e.g., NFC, Bluetooth).
U2F security keys are designed to be easy-to-adopt and
use in day-to-day life, while protecting users against phishing
and man-in-the-middle attacks [8]. Lang et al. [8] previously
demonstrated that security keys are highly effective in enterprise
environments. In this paper, we conduct
the ﬁrst studies
exploring whether security keys are sufﬁciently usable for
day-to-day usage by non-enterprise users. While there are
many different security keys (e.g., NitroKey, OnlyKey, U2F
Zero, AdaFruit), we used three of Yubico’s security keys for
our studies (YubiKey 4, YubiKey NEO, and YubiKey Nano).
These devices most closely resemble the security keys used in
Lang et al.’s study, and Yubico’s security keys have received a
signiﬁcant amount of media and industry attention. Still, our
results are largely applicable to U2F, and to a lesser extent
2FA.
We ﬁrst conducted a laboratory study with 31 participants,
investigating whether unassisted novice users could conﬁgure
Google, Facebook, and Windows 10 accounts to authenticate
using a YubiKey. This study revealed that there are signiﬁcant
impediments for novice users when setting up their accounts
with 2FA in general and YubiKeys in particular. In general,
the participants viewed YubiKeys as largely unusable.
We
longitudinal
then conducted a
study with 25
participants, exploring the usability of YubiKeys for day-to-day
authentication to the participants personal Google, Facebook,
and Windows 10 accounts over a period of four weeks.
Importantly, study coordinators helped participants set up the
YubiKeys in order to avoid having the poor setup process bias
participants’ views of the daily usability of a YubiKey. In
contrast to the ﬁrst study, users were very positive regarding
YubiKeys and 2FA in general.
The contributions of our work are as follows:
(1) First user studies of security keys for unassisted,
non-enterprise users. Our work shows
the
non-enterprise setup experience was signiﬁcantly worse
than the experience described by Lang et al. [8]. Still,
day-to-day usability seems to be comparable in the
that
© 2018, Joshua Reynolds. Under license to IEEE.
DOI 10.1109/SP.2018.00067
872
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:32:31 UTC from IEEE Xplore.  Restrictions apply. 
enterprise and non-enterprise settings. Taken together,
these results demonstrate that security keys could be a
viable 2FA option for non-enterprise users if the U2F
setup experience can be sufﬁciently improved.
(2) First to separately study 2FA setup and daily-use. Prior
work has either explored only one of the two phases or has
examined both phases in a single study. Our work revealed
that each phase has unique usability challenges and both
phases must be studied in order to fully understand the
usability of 2FA systems.
(3) Recommendations for usability improvements. Both
the laboratory and longitudinal studies revealed several
areas where users either struggled to set up and use a
YubiKey, or where the general user experience could
be improved. Based on our observations and participant
feedback, we offer several concrete suggestions for
improving the usability of security keys and 2FA in
general. For example, many of our participants were
hindered by outdated and overly dense documentation.
Instead, we recommend that systems provide more active
forms of documentation, such as the 2FA wizard approach
that Google provides.
II. RELATED WORK
Prior work on the usability of two-factor authentication
includes laboratory studies, longitudinal studies, and surveys.
A. Laboratory studies
Piazzalunga et al. [11] compared the usability of smart cards
and two different kinds of USB security tokens. Ten participants
were tasked to install drivers, install software, and send an
encrypted email using them. The basic USB security token
only included the cryptographic material, while the advanced
USB security token also included digital instructions, drivers,
and relevant software on the device. Both USB security tokens
were faster to use, required less simulated customer service
requests, and resulted in fewer errors than traditional smart
cards.
Weir et al. [12] conducted a within-subject comparison of
three hardware code generators under evaluation by a bank in
the UK. The ﬁrst system generated a code with the push of a
button, the second required inserting the user’s bank card into
the code-generating device, and the third required inserting
the user’s bank card and entering their PIN using a scroll
wheel mechanism. Two-thirds of the participants preferred
using the push-based system, despite considering the other two
systems to be more secure. In a similar study, Weir et al. [13]
conducted an in-lab study of three authentication systems
including SMS-based 2FA and the push-button hardware code
generator used in their previous study. In this study, participants
preferred the SMS-based system. While these studies included
hardware-based 2FA for non-enterprise users, they did not
include security keys.
Gunson et al. [14] conducted a laboratory study of 2FA in the
context of automated telephone banking. Although users felt
more secure while using 2FA, they reported that the system
had low usability. Participants in this study were asked to
authenticate to a simulated telephony banking system using
a hardware code generator. Users disliked having to carry a
physical token with them and were unsure of how the token
improved the security of traditional knowledge-based questions.
Trewin et al. [15] conducted a user study to compare various
forms of smartphone-based biometric authentication methods
including voice, facial recognition, gesture, and combinations
of these methods. In general, participants responded negatively
to voice-based authentication and combinations of biometrics.
On the other hand, participants were positive towards facial
recognition and gesture-based authentication.
Karapanos et al. [16] proposed a new form of reduced
interaction 2FA, called Sound-Proof, which authenticates
users based on proximity to a mobile device. The system
authenticates a user by matching the ambient sound recorded
near a computer and a mobile phone. User study results of this
system found Sound-Proof to be more usable than the Google
Authenticator app.
B. Longitudinal studies
Lang et al. [8] describe the design and implementation of
hardware security keys that are the precursor to U2F security
keys and are nearly identical to the devices used in our
study. Using the attribute-based evaluation scheme described
by Bonneau et al. [2], they argue that security keys ought
to have usability similar to that of passwords while offering
additional security beneﬁts. Additionally, they conduct several
internal user tests with Google employees, ﬁnding that the
total amount of time spent authenticating decreased markedly
compared to their current system based on one-time passcodes
(OTP). Furthermore, they report a reduced number of support
incidents over the long-term after deploying the security keys.
Our study differs from the Lang et al. study because we were
primarily concerned with how users without an IT support
department would view security keys. We also report qualitative
data from participants’ experiences and calculate a System
Usability Scale (SUS) score that can be used to compare
against other authentication techniques [17].
Krol et al. [18] conducted a longitudinal study with 21
individuals already using 2FA as part of the authentication
process for several UK banks. Participants used a variety of
2FA systems, including card readers, hardware code generators,
SMS, phone calls, and smartphone authenticator applications.
The participants began an 11-day study with a preliminary
interview and ended the study with a follow-up interview. As a
part of the study, participants were asked to create an entry in
an authentication diary each time they needed to authenticate.
These entries included the time, the reason, and any problems
they encountered when they needed to authenticate. Many
participants had a strong dislike for specialized hardware code
generators required for 2FA, and in some cases reported they
accessed their information less frequently or even changed
banks because of the increased effort of using the devices.
Additionally, several participants mentioned getting confused
because of the inconsistent terminology used by online banks.
873
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:32:31 UTC from IEEE Xplore.  Restrictions apply. 
C. Surveys
De Cristofaro et al. [19] conducted a Mechanical Turk survey
of online users already using 2FA. They analyzed their ﬁndings
by grouping users into overlapping groups who use hardware
tokens, SMS/email, and authentication apps. SMS was the
most common for personal accounts; hardware code generators
were the most common for business. The survey included a
standard System Usability Scale (SUS) questionnaire [20], and
in contrast to many previous studies of 2FA, participants gave
a high rating to all the systems in the study. Even though USB
tokens were included in the questionnaire, all hardware tokens
are grouped together for the data analysis and reporting. This
means the results are not ﬁne-grained enough to be conclusive
regarding the usability of USB tokens, which differ from
smartcards and commercial code-generating tokens in the same
category.
Strouble et al. [21] administered a 40-question survey
inquiring about the usability and productivity impact of using a
Common Access Card (CAC) as a 2FA method to military and
civilian members of the United States Air Force. The survey
showed that those who were required to use a CAC and CAC
reader to read email remotely gave lower usability scores than
those who were not required to do so. Also, more than half
of the participants stated that they had left their CAC plugged
into their work computer at least once. Leaving the CAC at
work is especially problematic because a CAC also doubles
as an ofﬁcial military ID that is required to gain entry to a
military base. They estimate a loss of 261 work-years per year
in productivity because of forgotten CACs.
D. Methodology
Egelman et al. [22] interviewed 28 smartphone users to
investigate phone locking practices and motivations. They
inductively coded these interviews to identify users’ rationale.
Utilizing these results and those of two following studies,
they found that while users appeared to be making rational
choices, those choices were founded on faulty assumptions.
They then gave suggestions to better communicate the risks
involved with not locking a phone. Our study employed a
similar methodology by using more than one study, analyzing
qualitative results through inductive coding, and offering
relevant recommendations.
III. SYSTEM OVERVIEW
U2F security keys are hardware tokens that are used to
authenticate users after they press a button on the security
key.1 Security keys come in a variety of form factors with most
plugging into a device’s USB port, though the U2F protocol
also supports wireless communication with the host device
(e.g., NFC, Bluetooth).
Security keys improve on the security of alternative
authentication methods in the following ways:
(1) Password-based authentication. Security keys are a
form of 2FA, preventing an attacker who steals a user’s
passwords from gaining access to that user’s accounts.
1This button is not required to be a biometric sensor.
Fig. 1. From left to right: a YubiKey NEO, a YubiKey Nano, a US quarter
dollar coin, and a YubiKey 4
(2) One-time passcodes (OTP). OTP provides two-factor
authentication, but is susceptible to man-in-the-middle
attacks that intercept and replay a user’s passcodes [23].
Security keys use a challenge-response scheme that is
resistant to these types of man-in-the-middle attacks [8].
(3) Smart cards. Smart cards provide many of the beneﬁts
of security keys, but are vulnerable to usage by malware
as long as they are plugged into the system. In contrast,
security keys require that the user acknowledges each
authentication attempt, protecting the security key from
surreptitious usage and helping the user detect possible
attacks.
An increasing number of
services currently support
security keys, and our studies focus on two of the largest
services—Google and Facebook. We also wanted to test 2FA
on a major desktop platform, but neither Windows 10 or MacOS
has native support for U2F security keys. Still, Yubico does
provide software that allows the user to use a YubiKey to
authenticate to the OS, and we chose to test the Windows 10
versions of this software. In the remainder of this section, we
describe how a YubiKey worked with each of these services
at the time of our studies.
In our studies of security keys, we had participants use three
different devices: a YubiKey 4, a YubiKey NEO, and a YubiKey
Nano (see Figure 1). Each device has a capacitive sensor that
users tap to authenticate with the device—the gold disc in
the center of the YubiKey 4 and YubiKey NEO, and the gold
nub on the end of the YubiKey Nano. The YubiKey 4 and
YubiKey NEO are largely identical, except that the NEO also
supports NFC communication with devices, though we didn’t
explore this capability in our studies. The YubiKey Nano is
designed to sit within the host device, with only the capacitive
nub extending outside the USB port.
A. Google
Google provides a guided wizard to assist users in enabling
2FA for their accounts and setting up their security keys. This
wizard is launched from the “Sign In and Security” page found
in the user’s account settings. Before setting up a security
874
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:32:31 UTC from IEEE Xplore.  Restrictions apply. 
key, the wizard requires that users ﬁrst set up 2FA using a
phone number; this is used as an account recovery option if
the security key is unavailable. After registering their phone
number, the wizard presents users with the option to add a
variety of 2FA devices, including a button to “Add a security
key.” After clicking this button, the wizard then helps users
register their security key with Google. At the end of the
process, the wizard informs users that their security key is now
ready for use.
In the future, when the user authenticates to Google, they
will ﬁrst enter their username and password as usual. After
credential veriﬁcation, the user is then prompted to insert their
security key and tap the button on the security key. By default,
Google will then remember the device for several days and
not require the YubiKey during authentication.
B. Facebook
Facebook provides a guided wizard to help users set up
their security keys, but in contrast to Google’s wizard it
does not assist users in enabling 2FA on their account. To
launch the security keys wizard, users would ﬁrst navigate to
the “Two-Factor Authentication” menu within the “Facebook
Settings menu,” and then click the link for adding a security
key.
The lack of guidance regarding enabling 2FA led to two
signiﬁcant differences between Google and Facebook’s setup
process. First, users were not automatically prompted to set
up a recovery 2FA scheme (SMS-based or the Facebook
authenticator app); without enabling these recovery schemes,
users cannot enable 2FA for their Facebook account. Second,
users were not made aware that in addition to registering their
security key, they would also need to separately enable 2FA
on their accounts before Facebook would prompt them to use
their security key.
After correctly setting up their security key and enabling
2FA, the authentication experience on Facebook was largely
similar to that of Google.
C. Windows 10
Windows 10 does not natively support authentication using
security keys, but Yubico has built two applications that add
this functionality: the Windows Logon Authorization Tool and
YubiKey for Windows Hello.
To conﬁgure their account with the Windows Logon
Authorization Tool the user takes the following steps: First, the
user needs to ensure that they have a local Windows account,
not a Microsoft account2 (the default account type); if the
user has a Microsoft account, they need to ﬁrst revert their
account to a local Windows account. Second, the user needs
to install the YubiKey Personalization Tool and use it to add an
HMAC-SHA1 challenge-response secret; this ﬁeld is somewhat
difﬁcult to locate within the personalization tool (see Figure 2).
Third, the user needs to ensure that they have installed the
legacy .NET 3.5 framework, after which they then install the
2https://account.microsoft.com/account/faq
Fig. 2. Users were required to conﬁgure the YubiKey to use HMAC-SHA1 with
the YubiKey Personalization Tool before it could be used with the Windows
Logon Authorization Tool
Windows Logon Authorization Tool. Fourth, and ﬁnally, the user
registers a YubiKey with the Windows Logon Authorization
Tool before restarting their computer. If the user accidentally
restarts their computer between the third and fourth steps, it
is possible that they will become locked out of their accounts
since authentication now requires a YubiKey, but they have
not yet registered one with the tool.
After the full setup, the user will ﬁrst select their account
and enter their password as usual. When these credentials
are veriﬁed, if the user’s YubiKey is already inserted, they
will be immediately logged in without any further action on