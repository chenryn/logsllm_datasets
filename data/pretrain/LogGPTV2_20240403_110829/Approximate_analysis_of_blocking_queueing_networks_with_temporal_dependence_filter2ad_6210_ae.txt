ℎ=1𝑞ℎ,𝑘
∑𝐾𝑖
ℎ=1,ℎ∕=𝑘𝑞𝑘,ℎ
𝑖 +
𝑖,𝑖 𝑈 𝑘
ℎ=1,ℎ∕=𝑘𝑞ℎ,𝑘
𝑖 =
𝑖,𝑗 𝐸ℎ
∑𝐾𝑖
∑𝑀
𝑖,𝑖 𝑈 ℎ
𝑖
(15)
𝑗=1,𝑗∕=𝑖
Proof: (Outline) The proof follows the same steps of
the BAS case. However, (15) differs from the BAS case
because in RS-RD a queue is never effectively blocked. As
a consequence, for self-routed jobs the classical utilization
should be taken into account. A complete derivation can be
found in [8, Thm. 2′
].
The following theorem shows that a balance holds between
the marginal probabilities similarly to the one developed in the
BAS case. This theorem differs from the one for non-blocking
MAP networks in [5] only in the fact that it involves a subset
of the original state space.
Theorem 7: The arrival rate at queue 𝑖 when its queue
length is 𝑛𝑖 jobs, 0 < 𝑛𝑖 ≤ 𝐹𝑖 − 1, is balanced by the rate of
1The interested reader can refer to [3] for a recursive expression to compute
the state space cardinality for a queueing network where all queues have the
same capacity and RS-RD blocking.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:39 UTC from IEEE Xplore.  Restrictions apply. 
580departures when the queue length is 𝑛𝑖 + 1, i.e.,
∑𝑀
∑𝑀
=
𝑗=1,𝑗∕=𝑖
𝑗=1,𝑗∕=𝑖
∑𝐹𝑗
∑𝐹𝑗−1
∑𝐾𝑗
∑𝐾𝑗
𝑛𝑗 =1
𝑘=1
∑𝐾𝑗
∑𝐾𝑖
ℎ=1
∑𝐾𝑖
∑𝐾𝑖
𝑛𝑗 =0
𝑢=1
𝑘=1
𝑢=1𝑞𝑘,ℎ
ℎ=1𝑞𝑘,ℎ
𝑗,𝑖 𝜋(𝑛𝑖, 𝑢, 𝑛𝑗, 𝑘)
𝑖,𝑗 𝜋(𝑛𝑖+1, 𝑘, 𝑛𝑗, 𝑢)
(16)
for all 1 ≤ 𝑖 ≤ 𝑀. In the case 𝑛𝑖 = 0, the marginal balance
∑𝑀
specializes to the more informative relation
∑𝐹𝑗
∑𝐾𝑗
∑𝐹𝑗−1
∑𝐾𝑗
∑𝐾𝑗
𝑘=1
ℎ=1𝑞𝑘,ℎ
∑𝐾𝑖
𝑛𝑗 =1
𝑗,𝑖 𝜋(𝑛𝑖 = 0, 𝑢, 𝑛𝑗, 𝑘)
𝑘=1𝑞𝑘,𝑢
𝑖,𝑗 𝜋(𝑛𝑖 = 1, 𝑘, 𝑛𝑗, ℎ)
∑𝑀
𝑗=1,𝑗∕=𝑖
=
𝑗=1,𝑗∕=𝑖
𝑛𝑗 =0
ℎ=1
(17)
which holds for each phase 𝑢, 1 ≤ 𝑢 ≤ 𝐾𝑖, with 1 ≤ 𝑖 ≤ 𝑀.
Proof: A complete derivation can be found in [8, Thm.
3′
].
Also Theorem 2, Corollary 1 and Theorem 3 of the BAS case
still hold for the RS-RD case by setting 𝒎 = ∅, the proof is
qualitatively identical to the BAS case [8].
Finally, as for the original MAP queueing networks, the
queue-length of 𝑖 in all its phases satisﬁes the follows balance.
Theorem 8: The states of queue 𝑖 in phase 𝑘 and in phase
ℎ are related by the balance
𝑛𝑖=1𝑞𝑘,ℎ
ℎ=1,ℎ∕=𝑘
+
𝑗=1,𝑗∕=𝑖
ℎ=1,ℎ∕=𝑘
𝑛𝑗 =0
𝑛𝑖=1𝑞𝑘,ℎ
𝑢=1
𝑖,𝑖 𝑛𝑖𝜋(𝑛𝑖, 𝑘, 𝑛𝑖, 𝑘)
∑𝑀
∑𝐾𝑖
∑𝐾𝑖
∑𝐾𝑗
∑𝐾𝑖
∑𝑀
∑𝐾𝑖
∑𝑀
∑𝑀
∑𝐾𝑖
ℎ=1,ℎ∕=𝑘
Proof: A complete derivation is given in [8, Thm. 5′
∑𝐾𝑗
∑𝐹𝑗−1
∑𝐹𝑖
∑𝐹𝑖
∑𝐹𝑖
∑𝐾𝑗
∑𝐹𝑗−1
∑𝐹𝑗
∑𝐾𝑗
∑𝐹𝑖
∑𝐹𝑗−1
∑𝐾𝑗
𝑖,𝑗 𝜋(𝑛𝑖, ℎ, 𝑛𝑗, 𝑢)
𝑛𝑖=0𝜋(𝑛𝑖, 𝑘, 𝑛𝑗, ℎ)
𝑛𝑖=1𝑞ℎ,𝑘
∑𝐹𝑖−1
∑𝐹𝑖
ℎ=1
ℎ=1,ℎ∕=𝑘
𝑗=1,𝑗∕=𝑖
𝑖,𝑖 𝑛𝑖𝜋(𝑛𝑖, ℎ, 𝑛𝑖, ℎ)
𝑗=1,𝑗∕=𝑖
𝑗=1,𝑗∕=𝑖
𝑛𝑗 =1𝑞ℎ,𝑢
𝑛𝑖=1𝑞ℎ,𝑘
𝑛𝑖=1𝑞ℎ,𝑘
+
=
𝑛𝑗 =0
𝑢=1
𝑛𝑗 =0
𝑢=1
𝑢=1
ℎ=1
+
+
].
𝑗,𝑖
𝑖,𝑗 𝑛𝑖𝜋(𝑛𝑖, ℎ, 𝑛𝑗, 𝑢)
𝑖,𝑗 𝑛𝑖𝜋(𝑛𝑖, 𝑘, 𝑛𝑗, 𝑢)
IV. BOUNDABLE APPROXIMATIONS
The fundamental idea behind the proposed approximations
and bounds is to use the exact characterization developed in
Sections II and III to formulate an educated guess of the
values of the QR marginal probabilities. We here describe
our methodology for BAS networks, the application to RS-
RD blocking follows easily by considering 𝒎 = ∅.
To determine an approximate marginal distribution for the
model, we assume the values 𝜋(𝑛𝑖, 𝑘𝑖, 𝑛𝑗, 𝑘𝑗, 𝒎) as unknowns
in an optimization program 𝒪. This optimization program
takes the form
𝒪 :
s.t.
min 𝑓𝑜𝑏𝑗(𝝅𝐺)
A𝝅𝐺 ≤ 𝒃
C𝝅𝐺 ≤ 𝒅
where 𝝅𝐺 is the vector of the current guesses for all the QR
marginal probabilities 𝜋(𝑛𝑖, 𝑘𝑖, 𝑛𝑗, 𝑘𝑗, 𝒎), 𝑓𝑜𝑏𝑗 is a (possi-
bly nonlinear) objective function to be optimized, and the
constraints are of two types. A ﬁrst group of constraints,
A𝝅𝐺 ≤ 𝒃,
is the set of all equations and inequalities
developed in the BAS (or RS-RD) characterizations, including
the specialized marginal balances for 𝑛𝑖 = 0. Notice that
such equations are all linear constraints, mainly equalities.
A second group of linear constraints, C𝝅𝐺 ≤ 𝒅, imposes
obvious conditions that describe in the optimization program
the feasible values of the terms 𝜋𝐺(𝑛𝑖, 𝑘𝑖, 𝑛𝑗, 𝑘𝑗, 𝒎) ∈ 𝝅𝐺
in order to specify a valid QR marginal distribution. These
constraints impose, for instance, that the unknowns of the
linear program are probabilities, hence numbers ranging in
[0, 1], or that a queue can only be in a single state at a time
hence, e.g., 𝜋𝐺(𝑛𝑖, 𝑘𝑖, 𝑛𝑖 + 𝑐, 𝑘𝑖, 𝒎) = 0, ∀𝑐 ∕= 0. A summary
of these basic conditions is given in Table II.
Let 𝝅𝐺
𝑜𝑝𝑡 be the guess 𝝅𝐺 which provides the optimal
value for the objective function 𝑓𝑜𝑏𝑗. The crucial property
of the optimization program 𝒪 is that
its constraints are
satisﬁed by the exact QR marginal distribution 𝝅. It then
follows that the exact solution 𝑓𝑜𝑏𝑗(𝝅) is always a feasible
solution for the optimization program 𝒪, although it may not
be necessarily the optimal one 𝑓𝑜𝑏𝑗(𝝅𝐺
𝑜𝑝𝑡). This property leads
to the following approximation and bounding techniques.
A. Performance Metric Bounds
First, suppose that 𝑓𝑜𝑏𝑗 deﬁnes a performance metric of
interest, such as the utilization of station 𝑖
𝑓𝑜𝑏𝑗(𝝅𝐺) =
𝜋𝐺(𝑛𝑖, 𝑘𝑖, 𝑛𝑖, 𝑘𝑖, 𝒎)
or its average queue-length
𝐾𝑖∑
∑
𝑘𝑖=1
𝑛𝑖≥1
𝐾𝑖∑
∑
𝑘𝑖=1
𝑛𝑖≥1
𝑓𝑜𝑏𝑗(𝝅𝐺) =
𝑛𝑖𝜋𝐺(𝑛𝑖, 𝑘𝑖, 𝑛𝑖, 𝑘𝑖, 𝒎)
Then, by construction, minimizing 𝒪 returns a lower bound
𝑜𝑝𝑡) = min 𝑓𝑜𝑏𝑗(𝝅𝐺) ≤ 𝑓𝑜𝑏𝑗(𝝅), since 𝝅𝐺 = 𝝅 is
𝑓𝑜𝑏𝑗(𝝅𝐺
a feasible solution of the optimization program. Similarly,
solving 𝒪 as a maximization problem returns an upper bound
𝑜𝑝𝑡) = max 𝑓𝑜𝑏𝑗(𝝅𝐺) ≥ 𝑓𝑜𝑏𝑗(𝝅). Noting that utiliza-
𝑓𝑜𝑏𝑗(𝝅𝐺
tions and queue-lengths are linear functions of 𝝅𝐺, it then
follows that 𝒪 can be solved efﬁciently as a linear optimization
program. Such a solution provides upper and lower bounds
on the performance metrics of a MAP queueing network2.
Notice that other metrics, such as the effective utilization or
the throughput, may be deﬁned similarly to the utilization
and queue-length in terms of a linear objective function.
Conversely, response times need to be estimated using Little’s
law as ratios of average queue-length and average throughput.
Hence, they can be solved as nonlinear global optimization
programs or, more easily, estimated indirectly from the bounds
on queue-length and throughput. This approach to bounding
the performance of a MAP queueing network has been also
investigated for models without blocking in [5] and we refer
to it as QR bounds.
2We stress again that such values are guaranteed to be bounds by construc-
tion if the optimizer returns a global optimum for 𝒪, as it is always the case
for linear programs used for bounds computation.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:39 UTC from IEEE Xplore.  Restrictions apply. 
581B. Approximate Model Solution
The second main application of the optimization program 𝒪
is in approximating the QR marginal probabilities. We deﬁne
objective functions that allow one to obtain accurate approx-
imations, noticeably also on cases where the QR bounds are
not tight. We here introduce two approximation techniques: a
maximum entropy method (MEM) for MAP queueing networks
and a new principle of minimal mutual information (MMI). It
is important to remark that, since the QR bounds can always be
generated regardless of these approximations, the gap between
upper and lower bounds provides an independent assessment
on the maximum inaccuracy in using MEM or MMI in place
of an exact solution. Thus, such approximations are always
bounded, meaning that the maximum error of MEM or MMI is
the maximum distance from a point lying in between the upper
and lower QR bounds. Furthermore, the objective functions
are non-linear, hence one should consider a local optimum
obtained by a nonlinear solver3.
MEM searches for a set of QR marginal probabilities
that maximizes the information content of the distribution as
deﬁned by the entropy function 𝐻. To simplify notation, for
the rest of this section let
MEM optimizes in 𝒪 the objective function
𝜋𝐺(𝑛𝑖, 𝑛𝑗) ≡ 𝜋𝐺(𝑛𝑖, 𝑘𝑖, 𝑛𝑗, 𝑘𝑗, 𝒎).
(
∑
max 𝐻 = max
−
𝜋𝐺(𝑛𝑖, 𝑛𝑗) log2 𝜋𝐺(𝑛𝑖, 𝑛𝑗)
𝑛𝑖,𝑛𝑗 ,𝑘𝑖,𝑘𝑗 ,𝒎
)
The values of performance indexes such as utilizations and
queue-lengths are then obtained directly from the QR marginal
distribution that maximizes 𝐻. The rationale behind a max-
imum entropy solution is that it is known to be exact in a
number of queueing models, noticeably in exponential single-
class closed queueing networks [10]. Notice that a well-
known maximum entropy method for queueing networks has
already been developed in [11] based on the analysis of the
𝐺𝐼/𝐺𝐼/1 queue. However, the MEM technique we propose
differs substantially from the one in [11]. First, the method
is able for the ﬁrst
the
queues in the network simultaneously, instead of recursively
evaluating queues one at a time as in [11]. Importantly, our
technique is also able to consider the impact of autocorrelation
in job ﬂows introduced by MAPs, which is ignored in the
analysis of the 𝐺𝐼/𝐺𝐼/1 queue. Indeed, this is a critical
aspect of a MAP queueing network that cannot be ignored,
being responsible of dynamic bottleneck switch effects, even
at equilibrium, that signiﬁcantly affect the model solution [4].
Finally, and perhaps most importantly, our MEM solution is