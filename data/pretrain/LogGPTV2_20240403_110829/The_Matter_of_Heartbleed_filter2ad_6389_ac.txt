Printers: Dell, Lexmark, Brother, and HP printers.
Miscellaneous: Hikvision and SWANN security cameras, Ac-
quiSuite power monitors, IPACCT (a management tool used by
Russian ISPs), Aruba Networks WiFi login portals, INSYS VPN
access for industrial controllers, and SpeedLine Solutions (the “#1-
rated Pizza POS System”).
3.7 Other Impacts
While our study focuses on Heartbleed’s impact on public HTTPS
web services, Heartbleed also affected mail servers, the Tor network,
Bitcoin, Android, and wireless networks, as we brieﬂy assess in this
section.
Mail Servers.
SMTP, IMAP, and POP3 can use TLS for transport
security via use of a StartTLS directive within a plaintext session.
As such, if mail servers used OpenSSL to facilitate TLS connections,
they could have been similarly vulnerable to Heartbleed. On April
10, we scanned a random 1% sample of the IPv4 address space for
vulnerable SMTP servers. We found that 45% of those providing
SMTP+TLS supported the Heartbeat Extension, and 7.5% were
vulnerable to Heartbleed.
These estimates only provide a lower bound, because similar to
HTTPS, our scanner sometimes timed out, causing false negatives.
(We also scanned for IMAP and POP3 servers, but later analysis of
the data found systematic ﬂaws that rendered the results unusable.)
Tor Project.
Tor relays and bridges use OpenSSL to provide
TLS-enabled inter-relay communication. In our April 10 scan, we
found that 97% of relays supported Heartbeat and could have been
479vulnerable. 48% of the relays remained vulnerable at that time, three
days after announcement of the vulnerability. The vulnerability
could have allowed an attacker to extract both short-term onion and
long-term identity keys, ultimately allowing an attacker to intercept
trafﬁc and impersonate a relay. In the case of a hidden service, the
bug could have allowed an entry guard to locate a hidden service.
The Tor client was similarly affected, potentially allowing entry
guards to read sensitive information from a client’s memory, such
as recently visited websites [27].
Bitcoin Clients.
Heartbleed affected both Bitcoin clients and
exchanges, and in the most severe case, allowed an attacker to
compromise the accounts on a popular exchange, BTCJam [15].
The value of Bitcoin did not change drastically on April 7, the date
of public disclosure, falling only 3.1% from the previous day (a
ﬁgure within its regular volatility) and returned to its April 6 value
by April 14.
All versions of the Bitcoin software from May 2012 to April
2014 used a vulnerable OpenSSL version [2]. Immediately after
Heartbleed’s disclosure, a new Bitcoin version was released linking
to the newly patched OpenSSL version. Because clients were also
affected by the bug, attackers could potentially compromise wallets
or retrieve private keys if a susceptible user followed a payment
request link [24]. However, we have not found any reports of the
theft of Bitcoins from local wallets.
Several companies, including Bitstamp and Bitﬁnex, temporar-
ily suspended transactions on April 8 until they could patch their
servers. In the most severe case, 12 customers had a total of 28
BTC (⇡ $6,500) stolen from BTCJam after account credentials were
compromised, though with all funds subsequently reinstated by the
exchange [15].
Android. Heartbleed only affected Android version 4.1.1 [50].
It is unclear how many devices currently run the affected version,
but Google recently estimated that 33.5% of all Android devices
currently run Android 4.1.x [7]. A vulnerable device would have
been susceptible to having memory read by a malicious server.
Wireless Networks.
Several variants of the Extended Authenti-
cation Protocol, a commonly used framework for wireless network
authentication, use TLS, including EAP-PEAP, EAP-TLS, and EAP-
TTLS. For implementations based on OpenSSL, Heartbleed would
have allowed attackers to retrieve network keys and user creden-
tials from wireless clients and access points [34]. We do not know
of any statistics regarding what sort of vulnerable population this
potentially represents.
4. PATCHING
In Section 3, we estimated the initial impact of Heartbleed. In this
section, we discuss the patching behavior that occurred subsequent
to the disclosure.
4.1 Popular Websites
Popular websites did well at patching. As mentioned above,
only ﬁve sites in the Alexa Top 100 remained vulnerable when
Al-Bassam completed his scan 22 hours after disclosure. All of
the top 100 sites were patched by the time we started our scans,
48 hours after disclosure. As discussed in Section 3, our ﬁrst scan of
the Alexa Top 1 Million found that 11.5% of HTTPS sites remained
vulnerable. The most popular site that remained vulnerable was
mpnrs.com, ranked 689th globally and 27th in Germany. Similarly,
all but seven of the vulnerable top 100 sites replaced their certiﬁcate
in the ﬁrst couple of weeks following disclosure. Most interest-
ingly, godaddy.com, operator of the largest commercial certiﬁcate
s
t
s
o
H
S
P
T
T
H
f
o
t
l
e
g
a
n
e
c
r
e
P
e
b
a
r
e
n
u
V
l
 12
 10
 8
 6
 4
 2
 0
Alexa Top 1 Million Sites
Public IPv4 Address Space
04/12
04/19
04/26
05/03
05/10
05/17
05/24
Date
Figure 3: HTTPS Patch Rate. We track vulnerable web servers
in the Alexa Top 1 Million and the public IPv4 address space. We
track the latter by scanning independent 1% samples of the public
IPv4 address space every 8 hours. Between April 9 and June 4,
the vulnerable population of the Alexa Top 1 Million shrank from
11.5% to 3.1%, and for all HTTPS hosts from 6.0% to 1.9%.
authority, did not change their certiﬁcates until much later. The
other six sites are mail.ru, instagram.com, vk.com, sohu.com,
adobe.com, and kickass.to.
As shown in Figure 3, while many Alexa Top 1 Million sites
patched within the ﬁrst week, the patch rate quickly dropped after
two weeks, with only a very modest decline between April 26 and
June 4, 2014. While top sites in North America and Europe were
initially more vulnerable than Asia and Oceania (presumably due to
more prevalent use of OpenSSL-based servers), they all followed
the same general patching pattern visible in Figure 3.
4.2
Internet-Wide HTTPS
As can be seen in Figure 3, the patching trend for the entire IPv4
address space differs from that of the Alexa Top 1 Million. The
largest discrepancy occurs between April 22, 14:35 EDT and April
23, 14:35 EDT, during which the total number of vulnerable hosts
fell by nearly a factor of two, from 4.6% to 2.6%. This dropoff
occurred because several heavily affected ASes patched many of
their systems within a short time frame. The shift from 4.6% to 3.8%
between 14:35 and 22:35 on April 22 reﬂects Minotavar Computers
patching 29% of their systems, ZeXoTeK IT-Services patching 60%,
and Euclid Systems patching 43%. Between April 22, 22:35 and
April 23, 06:35, Minotavar Computers continued to patch systems.
The last major drop from 3.4% to 2.6% (06:35–14:35 on April
23) was primarily due to Minotavar Computers patched remaining
systems, and to a lesser extent, Euclid Systems and Vivid Hosting.
4.3 Comparison to Debian Weak Keys
In 2008, a bug was discovered in the Debian OpenSSL package,
in which the generation of cryptographic keys had a severely limited
source of entropy, reducing the space of possible keys to a few
hundred thousand. The lack of entropy allowed attackers to fully
enumerate the SSL and SSH keys generated on Debian systems,
thus making it vital for Debian OpenSSL users to generate fresh
replacement keys.
Yilek et al. measured the impact of the vulnerability and patching
behavior by performing daily scans of HTTPS servers [72]. Given
the similarities in the severity and nature of remediation between
480s
e
i
t
i
t
n
E
d
e
h
c
t
a
p
n
U
f
o
n
o
i
t
c
a
r
F
d
e
z
i
l
a
m
r
o
N
 1.15
 1.1
 1.05
 1
 0.95
 0.9
y=0.19
 0.85
 3
 6
Heartbleed (cert change)
Heartbleed (patched)
Debian PRNG
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 15
 30
 45
 60
 75
 90  105  120
 9  12  15
t=Days since Public Disclosure
Figure 4: Comparison of the Patch Rates of the Debian PRNG
and Heartbleed Vulnerabilities.
The y-axis is normalized at
8.7 days, indicated by the vertical striped line. Thus, the fraction
of unpatched entities at a given time is relative to the fraction at
8.7 days after disclosure, for each dataset. Except for the points
marked by , for each measurement the size of the Debian PRNG
entity population was n = 41,200± 2,000, and for Heartbleed, n =
100,900± 7,500. Due to a misconﬁguration in our measurement
setup, no Heartbleed data is available days 58–85.
this event and Heartbleed, we compared the community’s responses
to both disclosures.
A key methodological issue with conducting such a comparison
concerns ensuring we use an “apples-to-apples” metric for assess-
ing the extent of the community’s response to each event. The
comparison is further complicated by the fact that our Heartbleed
measurements sample a different 1% of the Internet each scan. We
do the comparison by framing the basic unit of “did an affected
party respond” in terms of aggregate entities very likely controlled
by the same party (and thus will update at the same time). To do so,
we deﬁne an entity as a group of servers that all present the same
certiﬁcate during a particular measurement. This has the potential
for fragmenting groups that have partially replaced their certiﬁcates,
but we argue that this effect is likely negligible since the number
of entities stays roughly constant across our measurements. Note
that this deﬁnition of entity differs from the “host-cert” unit used
in [72], in which groups were tracked as a whole from the ﬁrst
measurement.
Figure 4 shows for both datasets the fraction of unﬁxed entities to
the total number of entities per measurement. We consider an entity
as “ﬁxed” in the Debian PRNG dataset if the certiﬁcate now has a
strong public key (and previously did not), otherwise “unﬁxed”. For
our Heartbleed IPv4 dataset (labelled “patch”), we deem an entity
as “ﬁxed” if all servers presenting the same certiﬁcate are now no
longer vulnerable, “unﬁxed” otherwise.
This data shows that entities vulnerable to Heartbleed patched
somewhat more quickly than in the Debian scenario, and continue
to do so at a faster rate. It would appear that aspects of the disclo-
sure and publicity of Heartbleed did indeed help with motivating
patching, although the exact causes are difﬁcult to determine.
Note that for the Debian event, it was very clear that affected sites
had to not only patch but to also issue new certiﬁcates, because there
was no question that the previous certiﬁcates were compromised.
For Heartbleed, the latter step of issuing new certiﬁcates was not
as pressing, because the previous certiﬁcates were compromised
only if attackers had employed the attack against the site prior
to patching and the attack indeed yielded the certiﬁcate’s private
key.
Given this distinction, we also measured whether entities changed
their certiﬁcates after patching Heartbleed.⇤ To do so, we now deﬁne
an entity as a group of servers that all present the same certiﬁcate
during both a particular measurement and all previous measure-
ments. We regard an entity as “unﬁxed” if any server presenting
that certiﬁcate is vulnerable at any time during this time frame and
“ﬁxed” otherwise. Again, we argue that fragmentation due to groups
having their servers only been partially patched is likely negligible.
We label this data as “cert change” in Figure 4. We see that while
entities patched Heartbleed faster than the Debian PRNG bug, they
replaced certiﬁcates more slowly, which we speculate reﬂects a per-
ception that the less-deﬁnitive risk of certiﬁcate compromise led a
number of entities to forgo the work that reissuing entails.
5. CERTIFICATE ECOSYSTEM
Heartbleed allowed attackers to extract private cryptographic
keys [67]. As such, the security community recommended that
administrators generate new cryptographic keys and revoke compro-
mised certiﬁcates [35]. In this section, we analyze to what degree
operators followed these recommendations.
5.1 Certiﬁcate Replacement
To track which sites replaced certiﬁcates and cryptographic keys,
we combined data from our Heartbleed scans, Michigan’s daily
scans of the HTTPS ecosystem [29], and ICSI’s Certiﬁcate Notary
service [22]. Of the Alexa sites we found vulnerable on April 9
(2 days after disclosure), only 10.1% replaced their certiﬁcates in
the month following disclosure (Figure 5). For comparison, we
observed that 73% of vulnerable hosts detected on April 9 patched
in that same time frame, indicating that most hosts who patched did
not replace certiﬁcates. In addition, it is striking to observe that only
19% of the vulnerable sites that did replace their certiﬁcates also
revoked the original certiﬁcate in the same time frame, and even
more striking that 14% re-used the same private key, thus gaining
no actual protection by the replacement.
We ﬁnd that 23% of all HTTPS sites in the Alexa Top 1 Million
replaced certiﬁcates and 4% revoked their certiﬁcates between April
9 and April 30, 2014. While it may seem inverted that fewer vul-
nerable sites changed their certiﬁcates compared to all HTTPS sites
in the Alexa Top 1 Million, our ﬁrst scan was two days after initial
disclosure. We expect that diligent network operators both patched
their systems and replaced certiﬁcates within the ﬁrst 48 hours post
disclosure, prior to our ﬁrst scan.
The ICSI Certiﬁcate Notary (see Section 6.1) provides another
perspective on changes in the certiﬁcate ecosystem, namely in terms
of Heartbleed’s impact on the sites that its set of users visit during
their routine Internet use.
In Figure 6, we show the difference
in certiﬁcate replacement between March and April 2014. For
the ﬁrst four days after public disclosure on April 7, we observed
a large drop in the number of servers with the same certiﬁcate
as on April 6, indicating a spike in new certiﬁcates. After that,
certiﬁcate changes progressed slowly yet steadily for the rest of the
month. This matches our expectations that a number of operators
patched their systems prior to our scans and immediately replaced
certiﬁcates.
Ultimately, while popular websites did well at patching the ac-
tual vulnerability, a signiﬁcantly smaller number replaced their
⇤See Section 5.1 for a discussion on the replacement of pub-
lic/private key pairs in addition to certiﬁcates.
481s
e
t
i
l
l
S
e
b
a
r
e
n
u
V
n
w
o
n
K
f