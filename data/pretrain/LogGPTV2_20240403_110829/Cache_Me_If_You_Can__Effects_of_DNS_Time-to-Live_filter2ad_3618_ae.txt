### Preventing Caching and Its Implications

Preventing caching can help reduce latency (§6.2) but may also increase vulnerability to DDoS attacks [36]. We contacted the operators of eight country code top-level domains (ccTLDs) to inquire about their use of short Time-to-Live (TTL) values. Five operators responded, with three indicating that they had not considered the implications of such short TTLs. After our communication, three operators increased their NS record TTLs to one day: Uruguay’s .uy from 300 seconds, a Middle Eastern ccTLD from 30 seconds, and an African ccTLD from 480 seconds. The implications of this TTL increase for .uy are discussed in §5.3. Two other operators stated that the short TTLs were intentional, to accommodate planned infrastructure changes. One large operator maintained the existing TTL values, adhering to the "if it ain’t broke, don’t fix it" approach (discussed in §1).

While it is important to be cautious in drawing conclusions from such a small sample, it appears that while some operators intentionally use short TTLs, many have not carefully considered the implications and are open to considering longer TTLs.

### Early Feedback from Uruguay’s .uy

Our study of Uruguay’s ccTLD revealed that in early 2019, there was a significant discrepancy between the authoritative TTLs (5 minutes) and the root zone defaults (2 days). During our analysis, .uy had 8 NS records (5 in-bailiwick, 3 out-of-bailiwick). After sharing our preliminary results, on March 4, 2019, they changed their child NS record TTLs to one day (86400 seconds).

This change in .uy provides a natural experiment to test the effects of different TTLs on DNS latency. Our measurements, using RIPE Atlas VPs, included data both before and after the TTL change (see Figure 10 and Table 2). We measured the response time for .uy/NS queries from approximately 15,000 VPs, querying for two hours every 600 seconds. Given that .uy is a country-level TLD, it may be cached, so this study reflects a dynamic snapshot of remaining TTLs.

**Results:**
- **Figure 10a** shows the cumulative distribution function (CDF) of query response times for .uy before (short TTL, top red line) and after (long TTL, bottom blue line) the change. With short TTLs, .uy often falls out of the cache, resulting in a median response time of 28.7 ms. With long TTLs, .uy remains in the cache, providing a median response time of 8 ms.
- **Figure 10b** illustrates the distribution of round-trip time (RTT) per continent, as seen by more than 13,700 VPs worldwide. All regions observed a reduction in latency after the TTL change, with higher reductions in regions with larger initial latency ranges.

This natural experiment demonstrates the significant benefits of increased caching and longer TTLs for reducing user latency. Although we do not have access to authoritative traffic at .uy, the reduction in traffic is likely substantial, as evaluated in §6.2.

### Recommendations for DNS Operators

#### 6.1 Reasons for Longer or Shorter TTLs

TTLs in use range from as short as 5 minutes to one or two days (§5.1). The wide range of TTL configurations reflects various trade-offs, and the optimal choice depends on the specific needs of each organization. Here are the key factors to consider:

- **Longer Caching Results in Faster Responses:**
  - Caching enables recursive resolvers to answer queries directly, significantly reducing response times. While a query to the authoritative server is typically fast (less than 100 ms), a direct reply from the recursive resolver is even faster. Our study of .uy (§5.3) and controlled experiments (§6.2) highlight the importance of caching for performance.

- **Longer Caching Reduces DNS Traffic:**
  - Caching can significantly reduce DNS traffic, although the cost savings may be modest compared to web hosting or email. We evaluate this effect in §6.2.

- **Longer Caching Lowers Costs for Metered DNS Services:**
  - Some DNS-as-a-Service providers charge per query. Caching can reduce these costs, even if incremental costs are small relative to fixed charges.

- **Longer Caching Enhances Robustness Against DDoS Attacks:**
  - DNS caching can mitigate the effects of DDoS attacks, provided the cache duration exceeds the attack duration [36].

- **Shorter Caching Supports Operational Changes:**
  - Short TTLs facilitate rapid transition during planned infrastructure changes. However, for pre-planned deployments, TTLs can be lowered just before the change and raised afterward.

- **Shorter Caching Aids in DNS-Based Response to DDoS Attacks:**
  - Some DDoS-scrubbing services use DNS to redirect traffic during an attack. Low TTLs ensure readiness to respond to potential attacks.

- **Shorter Caching Helps with DNS-Based Load Balancing:**
  - Large services use DNS-based load balancing to adjust to traffic dynamics. Short TTLs allow for more agile responses, although many recursive resolvers have minimum caching times of tens of seconds.

Organizations must balance these trade-offs, considering factors such as server load and maintenance.

#### 6.2 Caching Reduces Query Volume and Latency

Caching not only reduces latency but also decreases query volume at the authoritative server, indirectly improving performance. The extent of these benefits depends on the workload characteristics. Our controlled experiment (Table 10) used DNS servers at Amazon EC2 in Frankfurt, with short (60 s) and long (86,400 s) TTLs, and anycast (Route53, with 45 global sites at the time of the experiment).

**Methodology:**
- We conducted five experiments, placing queries to a test domain from 15,000 Atlas VPs to different DNS configurations, using either unique names or a common name.

**Results:**
- **Longer TTL Reduces Authoritative Load:**
  - Traffic to authoritative servers was reduced by about 77% with the long TTL (from 127,000 to 43,000 with unique names, and from 92,000 to 20,000 with shared names). This aligns with observations from .nl, which saw a 22-30% traffic increase when reducing the TTL of its NS records from 7200 to 3600 seconds [55].

- **Longer TTL Improves Response Time:**
  - **Figure 11a** shows the latency distributions for unique queries, with a median RTT of 49.28 ms for a 60-second TTL and 9.68 ms for an 86,400-second TTL.
  - **Figure 11b** shows the latency distributions for shared query names, with a median RTT of 35.59 ms for a 60-second TTL and 7.38 ms for an 86,400-second TTL. This confirms the improved latency observed for .uy (Figure 10a).

- **Longer TTL Reduces Latency More Than Anycast:**
  - Caching is more effective than anycast at reducing latency. Comparing the 86,400-second TTL (lighter red line) to anycast (orange line, median RTT = 29.95 ms), caching provides a greater reduction in median latency. While anycast helps in the tail of the distribution, caching greatly improves the median. For example, at the 75th percentile, 60-second TTLs have 106 ms latency, which drops to 67 ms with anycast and further to 24 ms with 86,400-second TTLs.

#### 6.3 Recommendations

- **General Zone Owners:**
  - We recommend longer TTLs, ideally 4, 8, or 24 hours, assuming planned maintenance can be scheduled in advance. Long TTLs have little cost in such scenarios.

- **TLD and Registry Operators:**
  - DNS operators that allow public registration of domains should use longer TTLs for both parent and child NS records (at least one hour). This ensures consistency and leverages the benefits of caching, as most resolvers use the child delegation's TTL values (§3.3).

By carefully considering these trade-offs, organizations can optimize their DNS configurations for better performance and resilience.