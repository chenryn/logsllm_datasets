πr ∈ T (σr)) from that achieved by breadth-ﬁrst search by roughly
75% or more when d = 1 and by roughly 45% or more when
d = 2. The one exception in the d = 1 case is T = TLIP; this is
due to the fact that TLIP was already chosen to include only those
transforms t yielding the largest P (πr = t(σr)) (see Appendix A)
and are chosen in decreasing order of that value. And, while the
advantages of Bemts diminish for d = 3 in the case T = TLI, we
conjecture that this is due to a lack of sufﬁcient training data for
such a large transform search tree. Note that the improvement of-
fered by Bemts for T = TLIP remains above 50% through d = 4.
One might argue that even given the higher cost of searching T
using a breadth-ﬁrst search strategy, doing so might still be practi-
cal for the trees T considered in Figure 5. Additionally, producing
an optimized search order via Bemts is a nontrivial computation that
grows as the search trees and training datasets get larger. Breadth-
ﬁrst search imposes no such up-front cost.
While true, for larger trees than we have considered so far, the
one-time cost of Bemts should be more than offset by the cost sav-
ings that orderBemts offers per account attacked. It also enables one
to more effectively short-circuit tree searches early. For example,
for the case T = TLI and d = 2, we ﬁnd that 80% of accounts
that will be broken by T will be broken in the ﬁrst 620 elements
of orderBemts , or after searching only about 0.2% of the tree. To
crack the same fraction of accounts, breadth-ﬁrst search explores
about 110000 elements (about 40% of the tree). The cost savings
of Bemts are particularly important for online attacks, where pass-
word guesses are limited; we will discuss these below.
Implications for ofﬂine attacks.
There are two contexts in which it makes sense to interpret the re-
sults shown in Figure 5, corresponding to the two contexts in which
passwords are typically used. We ﬁrst consider passwords that can
be subjected to an ofﬂine attack; for example, a password may be
used to encrypt ﬁles, and the attacker would like to retain access
to ﬁles encrypted under a password following a password change.
In this case, the adversary, knowing σk and having access to ﬁles
encrypted under πk, faces an ofﬂine attack to ﬁnd πk. The actual
runtimes, on average, to break πk in such a situation with the trees
T considered in Figure 5 are shown in Figure 6. Skipped, failed
and viable nodes in T do not contribute equally to these runtimes:
skipped nodes cost only the time to discard or avoid them; failed
nodes ~t cost the time to attempt the last transform in the sequence ~t
(on a previously computed result); and viable nodes ~t cost the time
to apply the last transform and to hash the resulting password, to
test against that of πk.
Arguably the key takeaway from this ﬁgure, however, is that even
the most expensive password cracking effort (T = TLI, d = 3)
required an average of only under 3 seconds per password that it
broke. In combination with the success rate P (πr ∈ T (σr)) for
this conﬁguration (see Figure 5) we reach a fairly alarming con-
clusion: On average, roughly 41% of passwords πk can be broken
from an old password σk in under 3 seconds.
Implications for online attacks.
The second context in which to consider the results of Figure 5
is an online attack, in which the attacker knows σk and must sub-
mit online guesses to a server in order to break πk. Many servers
are conﬁgured to permit only few wrong password guesses before
“locking” the account, and so the relevant measure becomes the
fraction of accounts the attacker can break in the initial several vi-
able guesses when examining nodes in order of orderBemts . Fig-
ure 5 indicates, for example, that using TLIP with d = 1, an av-
erage of 17% of accounts can be broken in under ﬁve online pass-
word guesses in expectation. Figure 7 provides a more reﬁned view
into the effectiveness of each transform search for an online attack;
each graph shows the average fraction of passwords cracked for a
given number of viable guesses produced by searching the speciﬁed
transform set T to the indicated depth d. For example, Figure 7(d)
shows that an average of 13% of accounts can be broken (with cer-
tainty) in 5 online guesses, and 18% can be broken in 10 guesses.
Password strength versus susceptibility to transform-
based search.
It is tempting to assume that the new passwords that are most
susceptible to transform-based search from old passwords are those
that are intrinsically weak. After all, the same “laziness” that causes
a user to simply replace a character or two in σk to create πk would,
181 
d
r
o
w
s
s
a
p
e
n
o
g
n
i
k
c
a
r
c
r
o
f
e
m
i
t
n
u
r
e
g
a
r
e
v
A
)
s
d
n
o
c
e
s
o
r
c
i
m
n
i
(
1e+07
1e+06
1e+05
1e+04
1e+03
1e+02
1e+01
TED
TEDM
TLI
TLIP
1935880
2856468
2831268
846
1236
16382
67157
2914
109
134
30
1
2
1
2
1
2
d
3
1
2
3
4
Figure 6: Average runtime to crack a password using orderBemts
(microseconds on a 2.67GHz processor). Average over 10 trials,
with one standard deviation shown.
 25
)
%
 25
)
%
 0.6
 0.6
0.51
0.21
0.43
0.43
0.39
d
e
k
c
a
r
C
s
t
n
u
o
c
c
A
f
o
n
o
i
t
c
a
r
F
 0.5
 0.4
 0.3
 0.2
 0.1
d
e
k
c
a
r
C
s
t
n
u
o
c
c
A
f
o
n
o
i
t
c
a
r
F
 0.5
 0.4
 0.3
 0.2
 0.1
0.44
0.45
0.41
0.53
0.22
 0
1
2
3
4
5
 0
1
2
3
4
5
Quintiles of Accounts Ordered by Estimated Entropy
Quintiles of Accounts Ordered by Estimated Entropy
(a) TED, d = 2
(b) TEDM, d = 2
0.54
0.22
0.44
0.43
0.40
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
d
e
k
c
a
r
C
s
t
n
u
o
c
c
A
f
o
n
o
i
t
c
a
r
F
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
d
e
k
c
a
r
C
s
t
n
u
o
c
c
A
f
o
n
o
i
t
c
a
r
F
0.41
0.15
0.34
0.32
0.26
 0
1
2
3
4
5
 0
1
2
3
4
5
Quintiles of Accounts Ordered by Estimated Entropy
Quintiles of Accounts Ordered by Estimated Entropy
(c) TLI, d = 3
(d) TLIP, d = 4
Figure 8: P (πr ∈ T (σr)) per quintile of accounts ordered by
entropy (average estimated entropy of passwords in account).
The average account entropies per quintile are 19.21, 22.07,
24.01, 25.32 and 28.02. Average of 10 trials, with one standard
deviation shown.
(cid:9)(cid:9)d=1
(cid:9)(cid:9)d=2
tionary had 49875 words. Testing with other dictionaries did not
signiﬁcantly alter our results.
In Figure 8 we show the susceptibility of accounts to transform-
based search as a function of password strength in the accounts.
Each ﬁgure represents results averaged over 10 trials, in which an
old password σk and new password πk were chosen for each ac-
count k in the same way as in our previous experiments. To produce
these ﬁgures, the accounts were ordered in increasing order accord-
ing to the average estimated entropy of the passwords in the account
and then divided into quintiles. Each bar in Figure 8 corresponds to
one quintile of accounts, and shows the fraction of those accounts
that succumbed to transform-based search (i.e., P (πr ∈ T (σr)),
with r chosen at random from that quintile).
These graphs suggest that the weakest passwords are, in fact, the
most susceptible to transform-based search, in that the ﬁrst quintile
has the largest fraction of accounts broken. This lends credibility to
the intuition that laziness in initial password selection is correlated
with laziness in selecting a new password after expiration. To our
surprise, however, the fraction of accounts susceptible to transform-
based search does not monotonically decrease as a function of aver-
age estimated entropy per account, but rather reaches its minimum
in the second quintile. One possible explanation for the increase in
the third through ﬁfth quintiles is that the increased mental effort
required to choose a good password discourages these users from
investing that effort again to generate a completely new password
after expiration. If true, then increasing the strength requirements
on individual passwords may diminish the utility of expiration fur-
ther. Additional tests are required to validate this, however.
4.2 Accounts with History of Transform Use
We now focus our attention on accounts that previously exhib-
ited selection of a new password by applying transforms to a pre-
vious one, to evaluate the extent to which past use of transforms
predicts future use. If this extent is substantial, then an adversary
with knowledge of past use of transforms within an account may
(
d
e
k
c
a
r
c
s
t
n
u
o
c
c
a
f
o
n
o
i
t
c
a
r
F
 20
 15
 10
 5
 0
(
d
e
k
c
a
r
c
s
t
n
u
o
c
c
a
f