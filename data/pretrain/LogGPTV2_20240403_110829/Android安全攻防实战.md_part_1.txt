# OCR Output
## Page 1
Broacview
[PACKT]open source
谷歌应用名人堂大牛手把手教会你Android安全攻防技术！
Android
安全攻防实战
[南非|KeithMakan
[英|Scott Alexander-Bown
崔孝晨武晓音
国中国工信出版集团
子工业出联社
---
## Page 2
Android
安全攻防实战
Cookboo
[南非]Keith Makan
[英  Scott Alexander-Bown
著
崔孝晨武晓音
电子工堂出版社
北京BEIING
---
## Page 3
内容简介
Android是目前最为主流的移动设备操作系统，占据了全球近 84%的市场份额。因此，Android 系统
中的安全问题也就变得十分重要。
本书通过大量极富针对性的实验，通过对常见的安全场景中解决方案的讲解，帮助读者全面掌握各种
攻-防实用技能。因而，本书的实用性也很强，即使是一时不能完全理解其中的技术原理的新手，根据作
者给出的方法，也能解决实践中遇到的大部分问题：而高手也能从中借鉴到一些好的做法。
全书共分九章，涵盖了基本的Android开发环境和工具：app组件之间及它们与系统的交互方式：
Android安全评估框架“drozer”：app及Android原生代码的逆向技巧：各类漏润的利用及防护方式：使用
SSL在网络通信中进行更有效的验证：利用第三方代码库或Android中新增的特性，通过加密和在开发时
使用设备管理策略，加固app等内容。
《Android安全攻防实战》寓教于练，可供安全技术研究人员，软件开发人员，电子取证人员学习使
用，对于各类高等院校中网络安全相关专业的师生也有较高的参考价值。
ams piopu, a o opun olen esaug o u pougnd s ro fun pe  uido
Cookbook'.
本书简体中文版专有出版权由 Packt Publishing授予电子工业出版社。未经许可，不得以任何方式复
制或抄袭本书的任何部分。专有出版权受法律保护。
版权贸易合同登记号图字：01-2014-8378
图书在版编目（CIP）数据
Android安全攻防实战/（南非）麦凯思（Makan,K），（英）鲍恩（Bown,S.A.）著：崔孝晨，武晓音译
一北京：电子工业出版社，2015.7
（安全技术大系）
书名原文：Android Security Cookbook
ISBN 978-7-121-26107-7
1.①AI1①麦②他③准①武IIL移动终应用程序程序设计IV.①TN929.53
中国版本图书馆CIP数据核字（2015)第105458号
策划编辑：刘皎
责任编辑：徐津平
特约编辑：顾慧芳
印
刷：北京京师印务有限公司
装
订：北京京师印务有限公司
出版发行：电子工业出版社
北京市海淀区万寿路173信箱邮编：100036
开
本：787×9801/16
印张：20字数：392千字
版
次：2015年7月第1版
印
次：2015年7月第1次印刷
定
凡所购买电子工业出版社图书有缺损问题，请向购买书店调换。若书店售缺，请与本社发行部联系，
价：79.00元
联系及邮购电话：（010）88254888。
质量投诉请发邮件至PI:EMAIL，盗版侵权举报请发邮件至 PI:EMAIL
服务热线：（010）88258888。
---
## Page 4
推荐序
想做一名优秀的英文技术资料译者实属不易，除了要有深厚的英文功底，还需
要对所翻译的技术领域有深入的了解，同时还要译者有博大分享之心和射耕不之
志。拜读了小崔的最新译作《Android安全攻防实战》后，我更是由衷地感到他对技
术与文字的把握已相当娴熟，能受邀为其新作做一推荐也令我甚感荣幸。
我与小崔初识于2003年，彼时他尚在从事电子取证及数据鉴定领域的工作且额
具造谐，待到后来Team509成立，我们便成为了莫逆之交。当时团队的成员各有所
长，但小崔一直是最勤奋的一员，其勤奋不仅仅在于对技术孜孜不倦的追求，也在
于其不客花费时间翻译大量的英文技术资料并乐于分享。想来他优秀的翻译功底便
是那时练就的吧。之后，他翻译的“大部头”作品便陆续问世，且一部好过一部。
如今，这部新作的推出与当下的移动领域技术潮流匹配得恰到好处，本书可以
作为初学者熟悉Android系统攻防的快速入门教程，其中的大量操作实例也可以为高
手们提供一些值得借鉴的做法。此书的翻译忠实原意，对原著的意思把握得十分准
确，语言生动活泼，令人读起来十分愉快。希望读者能够喜欢，并从中受益。
赵津光
2014和2015届Pwn2own 黑客大赛winner，Team509创始人之一
*Pwn2own是全球公认级别最高的黑客大赛
2015年5月
---
## Page 5
译者序
这是一本Android安全的实训教材，你甚至可以把它当成参加一次专家手把手的
专题培训！
自从Android 操作系统成为移动平台上的两大主流操作系统之一后，Android系
统的安全性就受到了广泛的关注，确实也出版过几本Android安全方面专著，但是这
些著作实在是太高大上了一些，一般都是要从高深的原理讲起，吓跑了许多对它感
兴趣的爱好者。即使有人硬着头皮看下去，也如坠云里雾里，短期内无法把学到的
知识，融会贯通地运用到实践中去。更别提那些只是不想让自已的代码论为别人的
“炮灰”的程序员了，他们确实学到了一些黑客知识，但是面对这些攻击时，又该怎
样防护自己编写的代码呢？
本书的英文原名为《Android security cookbook》。其中的单词“cookbook”是“菜
谱”的意思，也就是在给定场景下，如何进行操作的操作指南。顾名思义，书中的
内容也就是针对典型的Android安全攻-防场景，通过实验来说明Android安全技术
原理的。利用这种教学方法，能使学员快速上手，通过相对简短的培训，解决大部
分实践中可能遇到的问题。由于本书同时也计划作为我校“网络安全与执法”专业
“移动平台安全”课程的实训教材，所以我将书名直接译为《Android安全实验教程》。
实用性是本书最大的特色。除了常规工具外，作者还介绍了开源的Android安全
评估框架“drozer”，利用这个工具，你不仅可以“敲一、两个命令”就能完成以前
要花很大代价才能搞定的活。有经验的安全研究人员还能为自已定制开发一些针对
特定问题的插件，让自己活得更滋润些。面且，由于这个框架能够暴露出Android app
内部实现的许多细节，随着你越来越熟练的掌握这一工具，你对Android的理解也一
定会越来越深入。
V
---
## Page 6
译者序
对于想要寻找代码加固方案的程序员来说，本书中更是针对常见的攻击方法，
提供了详细且极富操作性的代码加固建议，其中不光有系统中自带的库或新增的特
性的使用方法，也介绍了不少开源的库，通过对它们的使用，能把你的软件的安全
性提高到一个新的级别。
本书的作者也不是光说不练的嘴把式，他们都是Android安全圈中的大牛，作者
KeithMakan就是多个Oday漏洞的发现者，数次入选谷歌应用安全名人堂（Google
Application Security Hall of Fame）：面作者 Scott Alexander-Bown 也是移动 app 开发、
逆向和加固方面的专家，在多个国际会议上做过演讲。
单词“application”在书中，既是指用Java 语言编写的 Android 应用，也指使用
Android NDK编写的原生（native）应用程序，显然，在翻译时，将它们不加区分的
全部译为“应用”或“应用程序”是不合适的。为了表示其中的区别，在翻译中，
我们将用Java 语言编写的Android 应用一律译为“Android app”，而用 Android NDK
编写的原生应用程序则全部译为“应用”
全书由上海公安高等专科学校的教师教官翻译完成的，全书共九章，分工安排
如下：
第一至第四章由武晓音同志翻译，第五至第九章由我翻译。全书翻译完成后由
我统一审校。
本书中文版的面世，特别要感谢博文视点的各位编辑老师，特别是顾慧芳、刘
皎老师，感谢你们对我的一贯支持和耐心的指导，使我从中获益良多！同时也感谢
你们为本书的出版所花费的大量时间！此外，也要感谢Team509安全研究小组的朋
友们在本书翻译时给予的宝贵建议！
由于翻译时间仓促，书中存在错误在所难免，敬请读者不吝指正。
崔孝晨
HS107
---
## Page 7
前言
Android已经快速地成为了最主流的移动操作系统之一一这不光是对用户而
言，也是对开发者和所有类型的公司而言的。当然也正是因为这个原因，它也成了
恶意敌手眼里的一块肥肉。
自从2005年进入公众视线时起，Android在功能和复杂性上都有了长足的进展。
移动智能手机中一般都存有其使用者的非常敏感的信息，而且还能访问他们的电子
邮件、短消息，以及公共网络和专门网络的服务。就像其他所有软件一样，在功能
和复杂性增长的同时，也会增加安全风险。软件越强大，越复杂，人们就得越努力
地应对和适应险恶的大干世界
这一点还特别适用于移动智能手机上的软件。这些存放私人信息和隐私信息的
温床，必然存在于我们十分关心的一个安全的上下文环境中，同时，我们也要在这
一环境中解决问题。从一方面看，移动智能手机的安全上下文环境，与网上的或“云”
中的服务器中的安全上下文环境是截然不同的。因为究其本质而言，网上的或“云”
中的服务器是不会移动的。它们不会被轻易地搬走或偷走。我们可以同时强制执行
软件的和物理的防护措施保护它们，使之未经许可就不能被访问。我们也可以一直
监视它们，并及时响应各个安全应急事件。但是对于我们经常放在口袋或手提包里，
带着到处跑，还会被落在出租车里的设备来说，游戏规则就完全变了。
Android的用户和开发者需要持续关注他们的移动安全风险，而正是因为这一原
因，对移动安全和风险评估专家和安全工程师的需求也一直是很旺盛的。本书致力
于降低成为Android安全评估专家之初的学习难度，并希望成为经验丰富的Android
安全专业人士手中的工具，帮助他们解决常见的Android安全同题。
本书的内容
V1
---
## Page 8
Android平台上的原生级组件的工具。这一章也为那些想要了解如何搭建常用的
Android开发环境和相关工具的新手做了一个大致的介绍。
e，
组件。这一章里将讨论：（对app的）手工检查和一些用来保护app的安全相关的工
具和服务的使用方法，以及用它们与操作系统交互的方法。
具和框架，Android安全专业人士可以用它们来评估app暴露给用户的技术风险。在
这一章里，你将学到如何安装、运行和扩展本书之后的这些章节中会使用到的黑客
和逆向工程工具的功能。
架，这一章的内容涵盖了所有类型的 Android app组件，从源码和 app 间上下文关系
的角度，详述了如何检查这些组件的安全风险。另外，这一章里还将介绍在第3章
“Android安全评估工具”中介绍的工具的一些高级用法。
日明中de，第与目de，基
反的。这一章并不光讨论app中的漏洞，也讨论如何修补它们。它将引领读者学习那
些开发者能够用来保护他们的app，免受第4章“利用app中的漏洞”中详细描述的
一些攻击危害的，有用的技术。
第6章“逆向app”帮助读者学习如何破解app 亚教授他们Android逆向工程师
用来检查和分析app时所使用的技术。你将会非常详细地学到Dex文件的格式，以
及如何把Dex字节码解析成易于进行逆向工程的更有用的表示形式。这一章里也会
介绍一些逆向工程师用来动态分析app和运行在Android操作系统上原生组件的新奇
的方法。
传输数据的实用方法。使用这些技术，你可以在安全套接字层（SecureSocketsLayer，
SSL）通信中添加更有效的验证。
可执行程序的安全评估和测试技术。读者将会学到怎样去寻找能用于root手机和在
Android系统中提权的安全漏润—那些能用来对原生服务进行包括内存溢出攻击和
利用竞争条件漏洞在内的底层攻击的漏润。
术和避免一些常见的错误做法，以保护你的app中数据的安全。这一章中将给你使用
VIlI
---
## Page 9
Android安全攻防实战
几个健壮的，帮助你节省开发时间的第三方库，来快速且安全地加固你的app的安全
性的建议。为了使讨论内容完整，我们还将介绍如何使用Android设备管理API，来
实现和强制执行企业安全策略。
阅读本书时所需的软件
虽然，在阅读本书时需要使用一些软件，但是在本书的许多实验里，在真正下
载和用这些软件做实验之前，都讨论了下载和安装它们的方法。
话虽如此，但在开始做实验之前，你可能还是最好先准备好下列软件：
●The Android Software Development Kit (SDK):
●The Android Native Development Kit (NDK):
·GNU C/C+编译器(GCC)：
●GNU调试器(GDB);
·Python，最好是2.7，3.0可能有时会无法正常工作：
●Virtual box;
●Ettercap (for Windows 版的或 Linux/UNIX 版的):
•Dex2Jar:
●Objdump:
•Radamsa;
JD-GUI;
●The Java Development Kit (JDK):
·drozer，一个Android 安全评估框架；
·OpenSSL命令行工具：
·keytool命令行工具。
这本书是写给谁的
本书中有些章节是专门用来讨论如何利用Android app 中漏洞的，而另一些章节
则讨论如何加固它们。本书的目标是：同时展示硬币的两面—攻击和防御。
安全研究人员，分析师和渗透测试人员会喜欢如何利用Android app中漏洞的部
分。面想要学习更多安全方面知识的app 开发者，将会从保护app免受攻击危害的部
分中获得切实可行的建议。
字体风格约定
在这本书中，你会看到一些不同排版风格的文字一这些不同的排版风格是用来
VIII
---
## Page 10
前
区分各类不同的信息的。下面是一些排版风格的样例及对其所表示的意思的解释。
文字中的“代码字体”的部分，表示数据库中表的名字、目录名、文件名、文
件扩展名、路径、URL和用户的输入。比如：“上一步中你选中的系统镜像的ID可
以用-t参数来指定”
代码块是像下面这样表示的：
from drozer import android
fron drozer.nodules import common, Module
class AttackSurface (Module, common.Filters, common. PackageManager) :