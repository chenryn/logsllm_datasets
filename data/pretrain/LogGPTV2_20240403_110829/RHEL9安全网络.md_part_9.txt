::: itemizedlist
**先决条件**
-   `AppStream`{.literal}存储库已启用。
:::
::: orderedlist
**步骤**
1.  安装 `libreswan`{.literal} 软件包：
    ``` screen
    # dnf install libreswan
    ```
2.  如果您要重新安装 `Libreswan`{.literal}，请删除其旧的 NSS 数据库：
    ``` screen
    # systemctl stop ipsec
    # rm /var/lib/ipsec/nss/*db
    ```
3.  启动 `ipsec`{.literal} 服务，并启用该服务，以便其在引导时自动启动：
    ``` screen
    # systemctl enable ipsec --now
    ```
4.  通过添加 `ipsec`{.literal} 服务，将防火墙配置为允许 IKE、ESP 和 AH
    协议的 500 和 4500/UDP 端口：
    ``` screen
    # firewall-cmd --add-service="ipsec"
    # firewall-cmd --runtime-to-permanent
    ```
5.  将系统切换到 FIPS 模式：
    ``` screen
    # fips-mode-setup --enable
    ```
6.  重启您的系统以允许内核切换到 FIPS 模式：
    ``` screen
    # reboot
    ```
:::
::: orderedlist
**验证**
1.  确认 Libreswan 在 FIPS 模式下运行：
    ``` screen
    # ipsec whack --fipsstatus
    000 FIPS mode enabled
    ```
2.  或者，检查 `systemd`{.literal} 日志中的 `ipsec`{.literal} 单元条目：
    ``` screen
    $ journalctl -u ipsec
    ...
    Jan 22 11:26:50 localhost.localdomain pluto[3076]: FIPS Mode: YES
    ```
3.  以 FIPS 模式查看可用算法：
    ``` screen
    # ipsec pluto --selftest 2>&1 | head -6
    Initializing NSS using read-write database "sql:/var/lib/ipsec/nss"
    FIPS Mode: YES
    NSS crypto library initialized
    FIPS mode enabled for pluto daemon
    NSS library is running in FIPS mode
    FIPS HMAC integrity support [disabled]
    ```
4.  使用 FIPS 模式查询禁用的算法：
    ``` screen
    # ipsec pluto --selftest 2>&1 | grep disabled
    Encryption algorithm CAMELLIA_CTR disabled; not FIPS compliant
    Encryption algorithm CAMELLIA_CBC disabled; not FIPS compliant
    Encryption algorithm NULL disabled; not FIPS compliant
    Encryption algorithm CHACHA20_POLY1305 disabled; not FIPS compliant
    Hash algorithm MD5 disabled; not FIPS compliant
    PRF algorithm HMAC_MD5 disabled; not FIPS compliant
    PRF algorithm AES_XCBC disabled; not FIPS compliant
    Integrity algorithm HMAC_MD5_96 disabled; not FIPS compliant
    Integrity algorithm HMAC_SHA2_256_TRUNCBUG disabled; not FIPS compliant
    Integrity algorithm AES_XCBC_96 disabled; not FIPS compliant
    DH algorithm MODP1536 disabled; not FIPS compliant
    DH algorithm DH31 disabled; not FIPS compliant
    ```
5.  在 FIPS 模式中列出所有允许的算法和密码：
    ``` screen
    # ipsec pluto --selftest 2>&1 | grep ESP | grep FIPS | sed "s/^.*FIPS//"
    aes_ccm, aes_ccm_c
    aes_ccm_b
    aes_ccm_a
    NSS(CBC)  3des
    NSS(GCM)  aes_gcm, aes_gcm_c
    NSS(GCM)  aes_gcm_b
    NSS(GCM)  aes_gcm_a
    NSS(CTR)  aesctr
    NSS(CBC)  aes
    aes_gmac
    NSS       sha, sha1, sha1_96, hmac_sha1
    NSS       sha512, sha2_512, sha2_512_256, hmac_sha2_512
    NSS       sha384, sha2_384, sha2_384_192, hmac_sha2_384
    NSS       sha2, sha256, sha2_256, sha2_256_128, hmac_sha2_256
    aes_cmac
    null
    NSS(MODP) null, dh0
    NSS(MODP) dh14
    NSS(MODP) dh15
    NSS(MODP) dh16
    NSS(MODP) dh17
    NSS(MODP) dh18
    NSS(ECP)  ecp_256, ecp256
    NSS(ECP)  ecp_384, ecp384
    NSS(ECP)  ecp_521, ecp521
    ```
:::
::: itemizedlist
**其他资源**
-   [使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-with-ipsec_securing-networks.html#protecting-the-ipsec-nss-database-by-a-password_configuring-a-vpn-with-ipsec}使用密码保护 IPsec NSS 数据库 {.title}
:::
默认情况下，IPsec
服务在第一次启动时使用空密码创建其网络安全服务(NSS)数据库。使用以下命令添加密码保护。
::: itemizedlist
**先决条件**
-   `/var/lib/ipsec/nss/`{.literal} 目录包含 NSS 数据库文件。
:::
::: orderedlist
**步骤**
1.  为 `Libreswan`{.literal} 的 `NSS`{.literal} 数据库启用密码保护：
    ``` screen
    # certutil -N -d sql:/var/lib/ipsec/nss
    Enter Password or Pin for "NSS Certificate DB":
    Enter a password which will be used to encrypt your keys.
    The password should be at least 8 characters long,
    and should contain at least one non-alphabetic character.
    Enter new password:
    ```
2.  创建包含您在上一步中设置的密码的
    `/etc/ipsec.d/nsspassword`{.literal} 文件，例如：
    ``` screen
    # cat /etc/ipsec.d/nsspassword
    NSS Certificate DB:MyStrongPasswordHere
    ```
    请注意, `nsspassword`{.literal} 文件使用以下语法：
    ``` screen
    token_1_name:the_password
    token_2_name:the_password
    ```
    默认的 NSS 软件令牌是 `NSS 证书 数据库`{.literal}。如果您的系统以
    FIPS 模式运行，则令牌的名称为
    `NSS FIPS 140-2 证书数据库`{.literal}。
3.  根据您的场景，在完成了 `nsspassword`{.literal} 文件后，启动或重启
    `ipsec`{.literal} 服务：
    ``` screen
    # systemctl restart ipsec
    ```
:::
::: orderedlist
**验证**
1.  在其 NSS 数据库中添加非空密码后，检查 `ipsec`{.literal}
    服务是否运行：
    ``` screen
    # systemctl status ipsec
    ● ipsec.service - Internet Key Exchange (IKE) Protocol Daemon for IPsec
       Loaded: loaded (/usr/lib/systemd/system/ipsec.service; enabled; vendor preset: disable>
       Active: active (running)...
    ```
2.  （可选）检查 `Journal`{.literal} 日志是否包含确认成功初始化的条目：
    ``` screen
    # journalctl -u ipsec
    ...
    pluto[6214]: Initializing NSS using read-write database "sql:/var/lib/ipsec/nss"
    pluto[6214]: NSS Password from file "/etc/ipsec.d/nsspassword" for token "NSS Certificate DB" with length 20 passed to NSS
    pluto[6214]: NSS crypto library initialized
    ...
    ```
:::
::: itemizedlist
**其他资源**
-   `certutil(1)`{.literal} 手册页。
-   [政府标准](https://access.redhat.com/articles/2918071#fips-140-2-2){.link}
    知识库文章。
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-with-ipsec_securing-networks.html#proc_configuring-an-ipsec-vpn-to-use-tcp_configuring-a-vpn-with-ipsec}配置 IPsec VPN 以使用 TCP {.title}
:::
Libreswan 支持 IKE 和 IPsec 数据包的 TCP 封装，如 RFC 8229
所述。有了这个功能，您可以在网络上建立 IPsec VPN，以防止通过 UDP
和封装安全负载(ESP)传输的流量。您可以将 VPN 服务器和客户端配置为使用 TCP
作为回退，或者作为主 VPN 传输协议。由于 TCP
封装的性能成本较高，因此只有在您的场景中需要永久阻止 UDP 时，才使用 TCP
作为主 VPN 协议。
::: itemizedlist
**先决条件**
-   已配置了 [远程访问
    VPN](#configuring-a-vpn-with-ipsec_securing-networks.html#configuring-a-remote-access-vpn_configuring-a-vpn-with-ipsec "配置远程访问 VPN"){.link}。
:::
::: orderedlist
**步骤**
1.  在 `/etc/ipsec.conf`{.literal} 文件的 `config setup`{.literal}
    部分中添加以下选项：
    ``` screen
    listen-tcp=yes
    ```
2.  要在第一次尝试 UDP 失败时使用 TCP
    封装作为回退选项，请在客户端的连接定义中添加以下两个选项：
    ``` screen
    enable-tcp=fallback
    tcp-remoteport=4500
    ```
    另外，如果您知道 UDP
    会被永久阻止，请在客户端的连接配置中使用以下选项：
    ``` screen
    enable-tcp=yes
    tcp-remoteport=4500
    ```
:::
::: itemizedlist
**其他资源**
-   [IETF RFC 8229：IKE 和 IPsec 数据包的 TCP
    封装](https://tools.ietf.org/html/rfc8229){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-with-ipsec_securing-networks.html#proc_configuring-automatic-detection-and-usage-of-esp-hardware-offload-to-accelerate-an-ipsec-connection_configuring-a-vpn-with-ipsec}配置自动检测和使用 ESP 硬件卸载以加快 IPsec 连接 {.title}
:::
卸载 Encapsuling Security Payload(ESP)到硬件加速 IPsec
连接。默认情况下，Libreswan 会检测硬件是否支持这个功能，并因此启用 ESP
硬件卸载。这个步骤描述了如何在禁用或显式启用这个功能时启用自动检测。
::: itemizedlist
**先决条件**
-   网卡支持 ESP 硬件卸载。
-   网络驱动程序支持 ESP 硬件卸载。
-   IPsec 连接已配置且可以正常工作。
:::
::: orderedlist
**步骤**
1.  编辑连接的 `/etc/ipsec.d/`{.literal} 目录中的 Libreswan
    配置文件，该文件应使用 ESP 硬件卸载支持的自动检测。
2.  确保连接设置中没有设置 `nic-offload`{.literal} 参数。
3.  如果您删除了 `nic-offload`{.literal}，重启 `ipsec`{.literal} 服务：
    ``` literallayout
    # systemctl restart ipsec
    ```
:::
::: title
**验证**
:::
如果网卡支持 ESP 硬件卸载支持，请按照以下步骤验证结果：
::: orderedlist
1.  显示 IPsec 连接使用的以太网设备的 `tx_ipsec`{.literal} 和
    `rx_ipsec`{.literal} 计数器：