这些设置主要是控制Burp是否会发送请求到上游代理服务器，或直转向目标Web服务
器。从代理服务器配置的图中我们可以看出，这是一个列表，那就表明我们可以配置多
个匹配规则。当我们配置了多个规则时，可以针对不同的目标主机或主机组指定不同的
代理服务器设置。这些规则将按照顺序，并将与目标Web服务器相匹配的第一个规则作
为生效规则。如果列表没有规则匹配，Burp默认采取直连、非代理的方式进行连接。 针
对每一个配置，其界面截图如下：
我们可以
使用在目标主机输入框中采用正则表达式，使用通配符（*零个或多个字符匹配？与任何
字符相匹配，除了一个点）。来指定将所有请求发送到一个代理服务器。而对于配置的
每个上游代理服务器，我们可以根据需要指定认证方式和认证凭据。它支持的身份认证
类型有：BASIC，NTLMv1，NTLMv2和“摘要式”身份验证。同样，域名和主机名字段只
用于NTLM身份认证。 当我们每配置完成一条匹配规则之后，它将出现在上游代理服务
器的列表中，我们可以在列表中对其进行内容的编辑和上下顺序的调整。
152
第十四章 BurpSuite全局参数设置和使用
Socks代理
这些设置允许我们配置Burp使用SOCKS代理的方式进行所有传出的通信，但此设置只在
TCP层生效，所有出站请求将通过这个代理发送。如果我们同时设置了已游HTTP代理服
务器配置的规则，则请求上游代理将通过这里配置的SOCKS代理发送。其请求的匹配路
径依次是：本地-->上游代理-->SOCKS代理。 在使用SOCKS代理时，我们需要勾选
【Use SOCKS proxy】，并提供代理的ip或者主机名、端口、认证的用户名和口令（如
上图所示）。 如果我们勾选了【Do DNS lookups over SOCKS proxy】，则进行域名解
析时，将通过SOCKS代理去查询，而不会使用本地缓存。
超时设置（Timeouts）
这些设置主要用于指定Burp各种网络任务的超时。我们可以对以下超时项进行设置：
正常（Normal ） - 此设置用于大多数网络通信，并确定Burp怎样放弃请求和记录已发生
超时前等待。
开放式应答（Open-ended responses） - 该设置只用在一个响应正在处理不包含内容长
度或传输编码HTTP标头。在这种情况下，Burp确定传输已经完成之前等待指定的时间间
隔。 3.域名解析（Domain name resolution ） - 此设置确定Burp如何重新进行成功的域
名查找，如果目标主机地址频繁变化时需要设定为一个适当的低的值。
失败的域名解析（Failed domain name resolution ） - 此设置确定Burp多久会重新尝试
不成功的域名查找。
153
第十四章 BurpSuite全局参数设置和使用
以上的选项设置的值都是以秒为时间单位，如果一个选项留空，那么表示Burp永远不会超
时。
主机名或域名解析
此项配置比较简单，通过这些设置，我们可以指定主机名映射到IP地址，来覆盖本地计算机
提供的DNS解析。每个主机名解析规则需要指定主机名，并与主机名相关联的IP地址。同
时，每一个规则可以单独启用或禁用来控制其是否生效。当我们在渗透测试中，如果使用了
隐形代理来测试富客户端组件，此功能可以确保请求正确转发。
Scope之外的请求
这一特性可用于防止Burp发送任何超出Target面板中设置的Scope范围之外的请求，当我
们需要保证没有请求到不在Scope范围内为它是有用的。例如，如果我们勾选了【Drop
all out-of-scope requests】，即使你的浏览器使得超出范围的目标请求，这些请求也会
被Burp被丢弃。 当然，我们可以启用此功能为当前的目标范围，如图，选中【Use suite
scope】。或者，可以使用URL匹配规则定义自定义范围，选中【Use custom scope】。
当我们选中【Use custom scope】时，界面将会显示其相关URL匹配规则的详细设置。
如下图：
154
第十四章 BurpSuite全局参数设置和使用
和Target Scope配置类似，它也分包含域和排除域，因其配置方式与Scope一致，此处就
不在赘述。如果配置中有不明白的地方，请参数Target Scope配置章节
Session设置
会话处理规则（Session Handling Rules）
如上图所示，Burp允许你自定义会话处理规则的列表，这能让我们细粒度地控制Burp如何处
理应用程序的会话处理机制和相关功能。对于处理规则，Burp中规则的构成包括范围（规则
适用于）和动作（规则做什么），当我们点击【Add】按钮，弹出的规则配置界面如下图所
示，其中Details和Scope两个面板的设置分别对于于上文的动作和范围。
动作（Rules Action）
155
第十四章 BurpSuite全局参数设置和使用
每个规则可以执行一个或多个操作，例如： 从Burp的cookie jar中更新cookies、验证当前会
话、 运行宏（预定义的请求序列）等等。通过创建具有不同范围和操作的多个规则，您可以
定义Burp将应用于不同应用程序和函数的行为的层次结构。例如，在特定测试中，您可以定
义以下规则：对于所有请求，从Burp的cookie jar添加cookie；对于对特定域的请求，请验证
与该应用程序的当前会话是否仍处于活动状态，如果没有，请运行宏以重新登录到应用程
序，然后使用生成的会话令牌更新cookie jar；对于包含csrftoken参数的特定URL的请求，首
先运行宏以获取有效的csrftoken值，并在发出请求时使用此值。 在Details面板中，Burp已经
预制了七类规则动作，他们分别是：
1. Use Cookies From the Session Handling Cookie Jar 这个配置的动作是通过Burp的
Cookie.jar用来更新请求的cookie信息，当然，你可以设置更新全部的cookie还是有选择
性的更新。
2. Set a Specific Cookie or Parameter Value 这个配置的动作是指定cookie或者某个参数
的值，如果没有设置的话，则在会话中添加此参数或者cookie。
3. Check Session Is Valid 此动作是检查当前会话是否有效，如果无效，则可选择地执行
下一步的动作以获得新的有效会话。或者，我们可以将Burp配置为仅每X个请求验证会
话，这有助于避免在应用程序发出多余的请求（==下图中2部分所示==）。 为了确定当
前会话的有效性，Burp通常会发出一个或多个请求。这些请求可能是（==下图中1部分所
示==）： a）当前的会话请求 b）执行宏脚本
156
第十四章 BurpSuite全局参数设置和使用
当Burp发出请求，并验证了会话的有效性之后，将不再做下一步动作；如果运行了宏，
则Burp将进一步检查请求的应答消息。为了准确地确定会话有效性，我们通常将Burp检
查响应配置为搜索表达式，其搜索范围为（==上图中3部分所示==）： a)HTTP响应头
b)HTTP响应体 c)任何重定向目标的URL 除了范围外，在设置正则匹配/字符匹配的字符
串同时，我们也可以匹配大小写是否敏感、会话是否有效、如果会话失效，需要做的下
一步动作是什么等操作。 关于会话失效后的下一步操作，Burp中预制了两个类型，如下
图所示：
157
第十四章 BurpSuite全局参数设置和使用
a)
运行宏 b)从浏览器内部恢复会话 针对于这两类操作，会在接下来的章节中描述，此处不
再赘述。
4. Prompt For In-Browser Session Recovery 这个配置的动作是针对于会话失效后，从
浏览器内部进行会话恢复的。在会话恢复时，需要使用Proxy代理的请求记录信息，如果
使用此动作，则浏览器的代理设置与Burp需要一致。
5. Run a Macro 在Burp中，宏是一系列顺序操作的Burp操作的总和，预先定义好的，在
Session中被运行，用于会话规则的处理。宏运行后，Burp根据最终的宏响应报文来选择
更新当前正在处理的请求中的参数和Cookie。至于宏的定义和设置在接下来的章节中会
专门描述,此处仅做简要介绍。 当我们在添加Rules Action时选择了“Run a Macro”项，则
弹出的宏配置界面如下图所示：
158
第十四章 BurpSuite全局参数设置和使用
点击【Add】则添加一个宏，选择某个宏记录，点击【Edit】则可以对宏配置进行编辑。
其设置界面如下图：
159
第十四章 BurpSuite全局参数设置和使用
上图中宏的名称、items、请求和应答消息等简单关注即可，需要重点关注的是
【configure item】按钮中对参数的设置。当我们点击此按钮，打开宏参数的配置界面：
160
第十四章 BurpSuite全局参数设置和使用
此界面上已经对请求报文中的参数和cookie自动提取出来，按照元素分别展示，同时，界
面下半部分为客户化参数设置，可以自定义自己想要的参数，并从应答报文中提取参数
的值。
161
第十四章 BurpSuite全局参数设置和使用
在上图中，当我们鼠标双击1处时，2和3处会自动设置提取数据的段，我们只要在4处简
单填写参数的名字即可完成常用的宏参数设置。 设置完宏之后，当宏运行时，其作用的
范围依赖于Session Scope 的设置。
6. Run a Post-Request Macro Post-Request宏通常使用于多步骤测试的场景，例如：后
一步的测试数据依赖于上一步的请求结果。在这些场景下，Post-Request宏的使用会帮
助你完成参数值的自动化地填充、fuzz、scan等。
7. Invoke a Burp Extension 这个配置的动作是Burp的拓展插件，来对当前会话数据进行
处理。此处调用的插件，必须要先在Burp的插件中心进行注册。关于Burp插件，请阅读
《Burp Suite应用商店插件的使用》章节。
162
第十四章 BurpSuite全局参数设置和使用
8. 范围（Scope）
而对于Burp做出的每个请求，它在Scope中定义规则在哪些请求的范围内，并且按顺序
执行所有这些规则的动作（除非条件检查动作确定不应该对请求）。 每个规则的范围可
以基于正在处理的请求的以下特征来定义，在Scope面板中共分为以下三类： 1.正在发
送请求的Burp工具（Tools Scope），包含Burp的各个常用工具组件，例如：Target、
Scanner、Proxy、Intruder等。 2.请求的网址（Urls Scope），包含所有的URL地址、
指定的作用于、自定义作用域三种方式，其配置与Target类似。
163
第十四章 BurpSuite全局参数设置和使用
3.请求中的参数名称（Paramters Scope），当选中此项时，点击【Edit】按钮即可对参
数进行配置，如下图所示例：
164
第十四章 BurpSuite全局参数设置和使用
165
第十四章 BurpSuite全局参数设置和使用
配置完毕后的Scope截图大体如下图所示：
配置完成后，会话处理规则将对作用域的Burp工具组件中的会话进行处理，例如，如何配置
了Proxy，则通过Proxy的会话，可以通过此面板下方的【open sessions tracer】进行会话跟
踪。如下图：
166
第十四章 BurpSuite全局参数设置和使用
Cookie Jar
Burp通过维护Cookie jar来维护你访问过得所有web站点的cookie信息，Cookie jar的信息在
Burp的所有工具组件之间是数据共享的。
167
第十四章 BurpSuite全局参数设置和使用
我们可以通过上图中的勾选项配置，来指定Cookie jar在哪些工具组件之间生效。当设置完毕
后，这些工具组件的流量数据更新，会保证Cookie jar的数据也一致性的更新。同时，我们也
可以点击下方的【Open cookie jar】按钮，来做cookie信息的手工维护。
宏(Macros)
在会话处理规则章节中，我们队宏的定义已经做了初步的描述，现在我们就来讲一讲Burp的
宏的使用。 Burp中宏的定义是：一个或者多个请求的预定义序列，其本质是一个或者多个请
求，按照一定的顺序组成并按照顺序执行的操作集合的总称。典型的宏的使用场景有： a)检
测用户登录页面，判断当前会话是否仍然有效。 b)模拟登录操作，以获取一个新的会话令
牌。 c)在多步骤测试过程中，获取前一步骤的反馈数据，作为后面测试的输入数据。 d)在多
步骤测试过程中，完成测试目的后，用于结果的验证。 除了基本的请求序列外，宏还包含每
一个请求相关的cookie、请求参数、数据依赖等配置项。 1. 宏的维护
上图为宏的维护界面，通过【Add】、【Edit】、【Remove】按钮，我们可以对宏进行新
建、修改和删除操作。当有多个宏的时候，我们可以通过【Up】和【Down】按钮来调节宏的
位置，来控制宏执行的先后顺序。 2. 宏的新建和修改 新建是新增一个宏，修改是对宏列表中
已有宏的信息进行修改，其界面和操作类似。此处仅以新建为例，来讲述宏的使用。当我们
168