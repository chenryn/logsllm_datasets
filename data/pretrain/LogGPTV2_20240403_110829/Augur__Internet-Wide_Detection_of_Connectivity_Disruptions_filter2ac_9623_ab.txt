it generates bear a relationship to one another. In these cases
where the host uses a single IP ID counter, the value of the
counter at any time reﬂects how many packets the host has
generated. Thus, the ability to observe this counter over time
gives an indication of whether a host is generating IP packets,
and how many.
The basic method involves two mechanisms:
• Probing: A mechanism to observe the IP ID value of a
host at any time.
• Perturbation: A mechanism to send trafﬁc to that same
host from different Internet destinations, which has the
property of inducing the initial host to respond, thus
incrementing its IP ID counter.
We now describe the basic design for probing and perturbation,
in the absence of various complicating factors such as cross-
trafﬁc or packet loss. Figure 1 illustrates the process.
To probe the IP ID value of some host over time, a mea-
surement machine sends unsolicited TCP SYN-ACK packets
to the host and monitors the responses—TCP RST packets—
to track the evolution of the host’s IP ID. We monitor the
IP ID values at the host on one end of the path. We call this
host the reﬂector, to denote that the host reﬂects RST packets
from both our measurement machine and the endpoint that a
censor may be trying to ﬁlter. This reﬂector is a machine in
a network that may experience IP ﬁltering. We call the other
endpoint of this connection the site, as for our purposes we
will commonly use for it a website operating on port 80.
To perturb the IP ID values on either end of the path, a
measurement machine sends a TCP SYN packet to one host,
the site; the TCP SYN packet carries the (spoofed) source
IP address of a second machine, the reﬂector. We term this
injection. If no ﬁltering is taking place, the SYN packet from
the measurement machine to the site will elicit a SYN-ACK
from the site to the reﬂector, which will in turn elicit a RST
from the reﬂector to the site (since the reﬂector had not
previously sent a TCP SYN packet for this connection). When
the reﬂector sends a RST packet to the site, it uses a new IP ID.
If the reﬂector generates IP ID values for packets based on a
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:21 UTC from IEEE Xplore.  Restrictions apply. 
(cid:47)(cid:81)(cid:106)(cid:73)
(cid:46)(cid:73)(cid:78)(cid:89)(cid:73)(cid:69)(cid:106)(cid:93)(cid:103)
(cid:47)(cid:81)(cid:106)(cid:73)
(cid:46)(cid:73)(cid:78)(cid:89)(cid:73)(cid:69)(cid:106)(cid:93)(cid:103)
(cid:46)(cid:47)(cid:48)
(cid:22)
(cid:47)(cid:57)(cid:34)(cid:159)(cid:4)(cid:13)(cid:31)
(cid:47)(cid:57)(cid:34)(cid:159)(cid:4)(cid:13)(cid:31)
(cid:22)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:24)
(cid:47)(cid:81)(cid:106)(cid:73)
(cid:47)(cid:57)(cid:34)(cid:159)(cid:4)(cid:13)(cid:31)(cid:104)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:22)
(cid:46)
(cid:47)(cid:48)(cid:104)(cid:3)
(cid:20)
(cid:47)
(cid:57)
(cid:23)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:31)
(cid:47)
(cid:57)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:21)
(cid:47)(cid:100)(cid:93)(cid:93)(cid:78)(cid:73)(cid:71)(cid:3)
(cid:47)(cid:57)(cid:34) (cid:46)(cid:17)(cid:22)
(cid:31)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:20)(cid:12)(cid:3)(cid:32)(cid:3)(cid:25)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:23)(cid:12)(cid:3)(cid:32)(cid:3)(cid:27)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:25)(cid:12)(cid:3)(cid:32)(cid:3)(cid:20)(cid:19)
(cid:12)(cid:3)(cid:32) (cid:20)(cid:19)
(cid:36)(cid:107)(cid:106)(cid:68)(cid:93)(cid:107)(cid:91)(cid:71)(cid:3)(cid:12)(cid:89)(cid:93)(cid:69)(cid:88)(cid:81)(cid:91)(cid:79)
(cid:33)(cid:73)(cid:60)(cid:104)(cid:107)(cid:103)(cid:73)(cid:90)(cid:73)(cid:91)(cid:106)
(cid:33)(cid:60)(cid:69)(cid:80)(cid:81)(cid:91)(cid:73)
(cid:46)(cid:73)(cid:78)(cid:89)(cid:73)(cid:69)(cid:106)(cid:93)(cid:103)
(cid:46)
(cid:47)
(cid:48)
(cid:3)
(cid:46)
(cid:47)
(cid:48)
(cid:3)
(cid:23)
(cid:20)
(cid:47)
(cid:57)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:31)
(cid:47)
(cid:57)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:31)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:20)(cid:12)(cid:3)(cid:32)(cid:3)(cid:25)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:23)(cid:12)(cid:3)(cid:32)(cid:3)(cid:27)
(cid:21)
(cid:47)(cid:100)(cid:93)(cid:93)(cid:78)(cid:73)(cid:71)(cid:3)
(cid:47)(cid:57)(cid:34) (cid:46)(cid:17)(cid:22)
(cid:33)(cid:73)(cid:60)(cid:104)(cid:107)(cid:103)(cid:73)(cid:90)(cid:73)(cid:91)(cid:106)
(cid:33)(cid:60)(cid:69)(cid:80)(cid:81)(cid:91)(cid:73)
(cid:46)
(cid:47)
(cid:48)
(cid:3)
(cid:46)
(cid:47)
(cid:48)
(cid:3)
(cid:23)
(cid:20)
(cid:47)
(cid:57)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:31)
(cid:47)
(cid:57)
(cid:34)
(cid:159)
(cid:4)
(cid:13)
(cid:31)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:20)(cid:12)(cid:3)(cid:32)(cid:3)(cid:25)
(cid:44)(cid:51)(cid:44)(cid:39)(cid:11)(cid:87)(cid:23)(cid:12)(cid:3)(cid:32)(cid:3)(cid:26)
(cid:23)
(cid:21)
(cid:47)(cid:100)(cid:93)(cid:93)(cid:78)(cid:73)(cid:71)(cid:3)
(cid:47)(cid:57)(cid:34) (cid:46)(cid:17)(cid:22)
(cid:33)(cid:73)(cid:60)(cid:104)(cid:107)(cid:103)(cid:73)(cid:90)(cid:73)(cid:91)(cid:106)
(cid:33)(cid:60)(cid:69)(cid:80)(cid:81)(cid:91)(cid:73)
(cid:3)(cid:34)(cid:93)(cid:3)(cid:15)(cid:81)(cid:103)(cid:73)(cid:69)(cid:106)(cid:81)(cid:93)(cid:91)(cid:3)(cid:12)(cid:89)(cid:93)(cid:69)(cid:88)(cid:73)(cid:71)
(cid:25)(cid:91)(cid:68)(cid:93)(cid:107)(cid:91)(cid:71)(cid:3)(cid:12)(cid:89)(cid:93)(cid:69)(cid:88)(cid:81)(cid:91)(cid:79)
Fig. 1: Overview of the basic method of probing and perturbing the IP ID side channel to identify ﬁltering. Reﬂectors are
hosts on the Internet with a global IP ID. Sites are potentially ﬁltered hosts that respond to SYN packets on port 80. (In the
right hand ﬁgure, we omit subsequent measuring of the reﬂector’s IP ID by the measurement machine at time t6). Spoofed
SYN packets have a source ﬁeld set to the reﬂector.
single counter, the measurement machine can observe whether
the reﬂector generated a RST packet with subsequent probes,
because the IP ID counter will have incremented by two (one
for the RST to the site, one for the RST to our measurement
machine). Figure 1 shows this process in the “no direction
blocked” scenario.
Suppose that ﬁltering takes place on the path between the
site and the reﬂector (i.e., one of the other two cases shown in
Figure 1). We term blocking that manifests on the path from
the site to the reﬂector as inbound blocking. In the case of
inbound blocking, the site’s SYN-ACK packet will not reach
the origin, thus preventing the expected IP ID increment at
the reﬂector. In the absence of other trafﬁc, the IP ID counter
will increment by one. We show this in the second section of
Figure 1.
Conversely, we call blocking on the path from the reﬂector
to the site outbound blocking; in the case of outbound block-
ing, SYN-ACK packets from the site reach the reﬂector, but the
RST packets from the reﬂector to the site never reach the site.
At this point, the site should continue to retransmit SYN-ACK
packets [49], inducing further increments in the IP ID value
at the reﬂector at various intervals, though whether and how it
actually does so depends on the conﬁguration and speciﬁcs of
the site’s operating system. The ﬁnal section of Figure 1 shows
the retransmission of SYN-ACK packets and the increment of
the global IP ID at two different times. If our measurements
reveal a site as inbound-blocked, ﬁltering may actually be
bidirectional. We cannot differentiating between the two using
this technique because there is no way to remotely induce the
reﬂector to send packets to the site.
C. Ethics
The measurement method we develop generates spoofed
trafﬁc between the reﬂector and the site which might cause
an inexperienced observer of these measurements to (wrongly)
conclude that the person who operates or owns the reﬂector
was willfully accessing the site. The risks of this type of
activity are unknown, but are likely to vary by country.
Although the spoofed nature of the trafﬁc is similar to common
large-scale denial-of-service backscatter [37] and results in no
data packets being exchanged between reﬂector and site, we
nonetheless use extreme caution when selecting each reﬂector.
In this type of measurement, we must ﬁrst consider respect
for humans, by limiting the potential harm to any person
as a result of this experiment. One mechanism for demon-
strating respect for humans is to obtain informed consent;
unfortunately, obtaining informed consent is difﬁcult, due to
the scope, scale, and expanse of the infrastructure that we
employ.
Salganik explains that
the inability to obtain informed
consent does not by itself reﬂect a disregard of respect for
humans [44]. Rather, we must take other appropriate measures
to ensure that we are abiding by the ethical principles from
the Belmont [9] and Menlo [19] reports. To do so, we develop
a method that reduces the likelihood that we are directly
involving any humans in our experiments in the ﬁrst place, by
focusing our measurements on infrastructure. Speciﬁcally, our
method works to limit the endpoints that we use as reﬂectors
to likely Internet infrastructure (e.g., routers in the access
or transit networks, middleboxes), as opposed to hosts that
belong to individual citizens (e.g., laptops, desktops, home
routers, consumer devices). To do so, we use the CAIDA
Ark dataset [11], which contains traceroute measurements
to all routed /24 networks. We include a reﬂector in our
experiments only if it appears in an Ark traceroute at least
two hops away from the traceroute endpoint. The Ark dataset
is not comprehensive, as the traceroute measurements are
conducted to a randomly selected IP address in each /24 preﬁx.
Restricting the set of infrastructure devices to those that appear
in Ark restricts the IP addresses we might be able to discover
with a more comprehensive scan.
Although this approach increases the likelihood that the
reﬂector IP addresses are routers or middleboxes as opposed
to endpoints,
the method is not fool-proof. For example,
devices that are attributable to individuals might still be two
hops from the network edge, or a network operator might
430
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:21 UTC from IEEE Xplore.  Restrictions apply. 
be held accountable for the perceived actions performed by
the machines. Our techniques do not eliminate risk. Rather,
in accordance with the ethical guideline of beneﬁcence, they
reduce it to the point where the beneﬁts of collecting these
measurements may outweigh the risks of collecting them. In
keeping with Salganik’s recommendations [44], we aim to
conduct measurements that pose a minimal additional risk,
given both the nature of the spoofed packets and the potential
beneﬁts of the research.
The Internet-wide scans we conduct using ZMap [20] to
detect possible reﬂectors introduce concerns related to respect
for law and public interest. Part of the respect of law and
public interest is to reduce the network load we induce on
reﬂectors and sites, to the extent possible, as unnecessary
network load could drive costs higher for the operators of
reﬂectors and sites; if excessive, the probing trafﬁc could
also impede network performance. To mitigate these possible
effects, we follow the approach for ethical scanning behavior
as outlined by Durumeric et al. [20]: we signal the benign
intent of our scans in the WHOIS entries and DNS records
for our scanning IPs, and provide project details on a website
hosted on each scanning machine. We extensively tested our
scanning methods prior to their deployment; we also respect
opt-out requests.
The measurement probes and perturbations raise similar
concerns pertaining to respect for law and public interest. We
defer the details of the measurement approach to Section IV
but note that reﬂectors and sites receive an average of one
packet per second, with a maximum rate of ten SYN packets
in a one-second interval. This load should be reasonable, given
that reﬂectors represent Internet infrastructure that should be
able to sustain modest trafﬁc rates directed to them, and sites
are major websites that see much higher trafﬁc rates than those
we are sending. To ensure that our TCP connection attempts do
not use excessive resources on sites or reﬂectors, we promptly
reset any half-open TCP connections that we establish.
The ethical principle of justice states that the parties bearing
the risk should be the same as those reaping the beneﬁts; the
parties who would bear the risk (users in the countries where
censorship is taking place) may ultimately reap some beneﬁt
from the knowledge about ﬁltering that our tools provide
through improved circumvention tools and better information
about what is blocked.
IV. AUGUR: PUTTING THE METHOD TO PRACTICE
In this section, we present our approach for identifying
reﬂectors and sites, and then develop in detail how we perform
the measurements described in Section III.
A. Reﬂector Requirements
Suitable reﬂectors must satisfy four requirements:
1) Infrastructure machine. To satisfy the ethical guide-
the reﬂector
lines that we outlined in Section III-C,
should be Internet infrastructure, as opposed to a user
machine.
2) RST packet generation. Reﬂectors must generate TCP
RST packets when receiving SYN-ACKs for unestab-
lished connections. The RST packets increment
the
reﬂector’s IP ID counter while ensuring that the site
terminates the connection.
3) Shared, monotonically incrementing IP ID. If a re-
ﬂector uses a shared, monotonic strictly increasing per-
machine counter to generate IP ID values for packets
that it sends, the evolution of the IP ID value—which
the measurement machine can observe—will reﬂect any
communication between the reﬂector and any other
Internet endpoints.
4) Measurable IP ID perturbations. Because the IP ID
ﬁeld is only 16 bits, the reﬂector must not generate so
much trafﬁc so as to cause the counter value to fre-
quently wrap around between successive measurement
machine probes. The natural variations of the IP ID