之外，它还可以实现更多的功能呢？本章将会针对以上的问题，逐一进行详细阐述。
道在使用 iptables 的过程中应该注意的事项呢？我们是否知道iptables 除了在安全方面的作用
在Linux中具有重要的地位。但是，我们对这个工具是否还有更深入的理解呢？我们是否知
Linux安全时，我们或许会在第一时间想起iptables这个强大的工具。毋庸置疑的是，iptables
公众号“运维技术实践”、QQ技术交流群群号434242482。
统一运维平台的产品功能设计和实施，拥有工信部认证高级信息系统项目管理师资格。微信
2011年加入盛大游戏。拥有十年运维经验，曾参与盛大游戏多款大型网络游戏的运维，主导
_本章由一些使用 iptables 中的经典案例开始，对iptables 的状态追踪功能进行生动细致的
1.问题描述
在Linux 运维工作中，每一个运维或许都使用过 iptables 进行网络安全设定。在涉及
虚拟机用户在测试网络连通性时，发现连接到某主机的网络 ping 时断时续，丢包问题严
胥峰，盛大游戏高级研究员，《Linux运维最佳实践》的作者。2006年毕业于南京大学
作者简介
禁用连接追踪
深度实践iptables
第5章
---
## Page 128
重。同时，它在与该虚拟机同网段的 Windows 物理机上测试同一 IP时，未发现该问题。
112
在收到故障申报后，我们首先分析了系统日志/var/log/messages，发现在对应的时间点，
2.排查过程
sh testping.sh xxx.yyy.zzz.76
用户执行以下命令进行测试：
done
while:;do
if [-z $host ]; then
wait=$2
#!/bin/bash
用户使用的测试脚本 testping.sh 内容如下：
用户给我们提供的截图如图 5-1所示。
let 1ost=0
letindex=1
host=$1
运维前线：一线运维专家的运维方法、技巧与实践
Ei
let index=$index+1
fi
else
wait=1
-z $wait ];then
exit1
echo"Usage:
sleep $wait # avoid ping rain
32mok\033[0m-echo$result丨cut-d':'
echo -e "$lost/$index -date +'%Y/%m/%d %H:%M:%s'-host Shost is \033[0;
let lost=$lost+1
[0;31mdown\033[0m"
`basename $o`[HOST]"
5555
1222222222
icmp_seq=1ttl=52time=23.2m
cmp_seq=1tt1=52
-f2`"
time=23.3
N
---
## Page 129
我们就可以设置更灵活的过滤策略。
IP、目的 IP、双方端口号（对 TCP 和UDP）、协议类型、状态和超时信息等。有了这些信息，
5.1.2
的最大追踪数，这一点进一步确认了丢包问题是由连接追踪导致的。
有关于 nf_conntrack 的报错。报错内容如下：
注意
概要地说，连接追踪系统在一个内存数据结构中记录了连接的状态，这些信息包括源
dport=6400 src=xxx.yyy.19.202 dst=106.38.214.126 sport=6400 dport=18102 mark=0
#该条目的意思是：系统收到了来自xxx.yYy.19.201:24943发送到87.240.131.117:443的第一个
net.netfilter.nf_conntrack_max = 65536
我们使用如下2个命令可以看出，服务器上的已有连接追踪条目数量已接近于我们配置
ipv4
TCPSYN包，但此时对方还没有回复这个SYN包（UNREPLIED）
mark=0secmark=0use=2
下面来看一个实际的例子（通过cat/proc/net/nf_conntrack 命令可以查看当前连接追踪的表）
#sysctl net.netfilter.nf_conntrack_count
# sysctl net.netfilter.nf_conntrack_max
dropping packet.
suppressed
Dec3017:19:07
dropping packet.
Dec3017:19:02
dropping packet.
Dec 3017:19:02
dropping
Dec 30 17:19:02
dropping packet.
Dec30
droppingpacket
Dec 3017:19:02
dropping packet.
Dec3017:19:02
suppressed
Dec 30 17:19:02 gc1oud-whcq-ISpeaker-198 kernel:
ec3017:19:07
状态的过滤功能。
连接追踪系统本身不进行任何过滤动作，它只是为上层应用（如 iptables）提供基于
分析连接追踪的原理
packet.
17:19:02
packet
17:19:02
L
tcp
gcloud-whcq-ISpeaker-198 kernel: nf_conntrack:table full,
gcloud-whcq-ISpeaker-198 kernel:
gcloud-whcq-ISpeaker-198 kernel: nf_conntrack: table full,
gcloud-whcq-ISpeaker-198
gcloud-whcq-ISpeaker-198 kernel: nf_conntrack: table full
gcloud-whcq-ISpeaker-198 kernel:nf_conntrack:table full
6 62 SYN_SENT src=xxx.yYy.19.201 dst=87.240.131.117 sport=24943
gcloud-whcq-ISpeaker-198
gcloud-whcq-ISpeaker-198
gcloud-whcq-ISpeaker-198
6 30 SYN_RECV src=106.38.214.126 dst=xxx.yYy.19.202 sport=18102
kernel:
kernel:
kernel:
kernel:
第5章深度实践iptables
ratelimit: 1356 callbacks
nf_conntrack:
nf_conntrack:
nf_conntrack:
nf_conntrack:
tablefull
table
tablefull
tablefull
full
113
---
## Page 130
网络丢包、TCP重传等问题，因此，我们需要在适用的情况下禁用连接追踪。
5.1.3禁用连接追踪的方法
如图5-2所示。在基于状态进行 iptables 设置时，使用如下的规则即可：
NEW 和 RELATED。
定的过滤规则。目前 iptables支持基于以下4种状态的过滤规则：INVALID、ESTABLISHED
114
通过以上的分析，我们知道在进行大量网络传输连接的时候，启用连接追踪可能会导致
（1）在内核中禁用Netfilter Connection tracking support。
（3）第3个包③匹配到规则rule2，允许。
（2）第2个包②因为在nf_conntrack表中有如下的规则匹配到rulel，允许：
（1）第1个包①匹配到规则rule2，允许。
启用连接追踪后，在某些情况下，设置 iptables 会变得比较简单，如图 5-2所示。
编译内核时，依次进入 Networking support →Networking options →Network packet fltering 
禁用连接追踪的方法有3种，具体如下。
[AssURED] mark=0 secmark=0 use=2
sport=50611 dport=443 src=54.239.25.200 dst=172.30.16.1 sport=443 dport=50611
工作流程如下：
iptables-A INPUT-ptcp-m State--State ESTABLISHED-j ACCEPT #rule1
当我们的服务器需要主动访问https://www.amazon.com提供的接口时，3次握手的过程
该表中的数据提供的状态信息，可以使用iptables的 state模块进行状态匹配，进而执行一
ipv4
ESTABLISHED 状态，这个连接是被保证的（ASSURED，不会因为内存耗尽而丢弃）
#该条
mark=0 secmark=0use=2
pv4
TCPSYN包
#该条目的意思是：系统收到了来自106.38.214.126:18102发送到xxx.Y.19.202:6400的第一个
secmark=0 use=2
运维前线：一线运维专家的运维方法、技巧与实践
172.30.16.1
我们的服务器
2tcp
2tcp
图5-2
个
6158007 ESTABLISHED srC=xxX.yYy.19.201 dst=211.151.144.188 sport=
②2 SYN+ACK(srcport 443,dstport 50611)-
③ ACK(srcport 50611,dstport 43) -
6 431995 ESTABLISHED SrC=172.30.16.1 dst=54.239.25.200
主动访问外网服务的TCP3次握手示意图
① SYN(srcport 50611,dstport 443)—
www.amazon.com
54.239.25.200
---
## Page 131
Netfilter connection tracking support) 。
framework (Netfilter) → Core Netfilter Configuration,
kernel/net/ipv6/netfilter/nf_conntrack_ipv6.ko
kernel/net/ipv4/netfilter/nf_conntrack_ipv4.ko
kernel/net/netfilter/nf_conntrack_tftp.ko
kernel/net/netfilter/nf_conntrack_sip.ko
kernel/net/netfilter/nf_conntrack_snmp.ko
kernel/net/netfilter/nf_conntrack_netbios_ns.ko
kernel/net/netfilter/nf_conntrack_broadcast.ko
kernel/net/netfilter/nf_conntrack_irc.ko
这样编译出来的内核，将不支持连接追踪的功能，也就是不会生成以下的ko 文件了：
kernel/net/netfilter/xt_conntrack.ko
kernel/net/netfilter/nf_conntrack_sane.ko
kernel/net/netfilter/nf_conntrack_amanda.ko
kernel/net/netfilter/nf_conntrack_netlink.ko
kernel/net/netfilter/nf_conntrack_proto_udplite.ko
kernel/net/netfilter/nf_conntrack_proto_sctp.ko
kernel/net/netfilter/nf_conntrack_proto_gre.ko
kernel/net/netfilter/nf_conntrack_proto_dccp.ko
kernel/net/netfilter/nf_conntrack.ko
#
##
中
#
-M-
M7
(M) Netfilter NEQUEUE over NENETLINK interface
"SECMARR"
"CLASSIEY
AUDIT target auppozt
TCE
TRACR
prange
图5-3编译内核时禁用连接追踪的方法
group"
Xtebles
match
ree
address
support
support
natch
rget
match support
suppo
cloning
match suppor
support
(NEW)
match
to
(NEW
a1
Citerrac
te
，禁用的方法如图5-3所示（取消选中
xnate
for ip_tables)
第5章深度实践iptables115
(NEN
---
## Page 132
追踪的条目上限。在/etc/sysctl.conf中，新增如下的内容：
产生如下的报错信息：
116
此时，在iptables中不能再使用NAT功能，同时也不能再使用-m state模块了，否则会
执行以下的命令使其生效：
新增配置文件/etc/modprobe.d/netfilter.conf，内容如下：
net.netfilter.nf_conntrack_max = 524288
net.nf_conntrack_max = 524288
在配置了NAT的服务器上，不能禁用连接追踪，此时可以使用如下的方法来提高连接
options nf_conntrack hashsize=131072
在以上的3种方法中，大家可以根据自己的业务情况，参考实施其中的一种。
iptables
iptables -t raw -A PREROUTING -p tcp -j NOTRACK
（3）在 iptables 中，使用 raw 表指定NOTRACK。
修改后：NF_MODULES_COMMON=(x_tables）#Used by netfilter v4 and v6
修改前:NF_MODULES_COMMON=(x_tables nf_nat nf_conntrack） # Used by netfilter v4
同时，在/etc/init.d/iptables 中，修改如下的内容：
iptables-A INPUT -p tcp -s 54.239.25.200 --sport 443-jACCEPT #rule1
以图 5-2为例，在满足这样的访问需求时，我们使用的 iptables 必须修改为如下的内容：
（2）在 iptables 中，禁用-m state 模块，同时在 filter 表的 INPUT 链中显式指定ACCEPT。
iptables
iptables
iptables:Nochain/target/match bythat name.
[root@localhost~]#iptables-I
you needtoinsmod?)
iptables v1.4.7: can't initialize iptables tablenat': Table does not exist (do
SNAT--to172.30.4.11
（2）对于FTP的被动模式，在FTP服务器上需要显式地打开需要进行数据传输的端口
》运维前线：一线运维专家的运维方法、技巧与实践
范围。关于主动FTP和被动FTP的内容，大家可以参考相关资料，本书不再赘述。
IINPUT -p tcp -m state --state NEW -j ACCEPT
---
## Page 133
5.2.1禁用ICMP协议导致的一则故障案例
5.2慎重禁用ICMP协议
5.1.4确认禁用连接追踪的效果
的定位效率最高。
我们负责维护的某系统分布于多个机房之中，之前文件传输一直走的公网，这是很正常