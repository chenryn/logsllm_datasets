5
3
2
1
39
0
12
2
0
4
3
1
1
0
15
4
3
13
4
2
1
22
1
1
1
0
0
0
4
2
8
3
1
0
6
26
1
0
0
8
1
0
0
1
0
0
116
27
39
No Applications
v(AB)
No App. and No Local
v(A)
v(AB)
60
v(B)
41
87
6
103
25
10
58
178
109
26
87
6
103
25
10
58
178
109
26
6
103
25
10
58
178
109
26
103
25
10
58
178
109
26
25
10
58
178
109
26
10
58
178
109
26
58
178
109
26
178
109
26
109
26
26
41
87
6
103
25
10
58
178
109
16
32
0
6
0
0
4
3
2
1
24
0
8
2
0
2
3
1
1
0
8
1
0
5
4
2
1
6
0
0
0
0
0
0
2
0
4
3
1
0
2
11
1
0
0
1
1
0
0
1
0
0
81
14
18
VULNERABILITIES (1994 TO (SEPT.) 2010): All - ALL VULNERABILITIES; No Application - NO APPLICATION VULNERABILITIES; No
App. and No Local - NO APPLICATION VULNERABILITIES AND ONLY REMOTELY-EXPLOITABLE VULNERABILITIES.
Table III
kernels and system software, and thus the vulnerabilities are
less common. Another interesting point about OSes from the
Linux family is that they have an almost negligible number
of driver vulnerabilities (see Table II), and none of them
appears in more than one OS.
We extended the study of common vulnerabilities to
higher numbers of OSes, however, due to space limitations
we can only present a summary of the results. When we
created combinations of three OSes, we found that there are
still 285 vulnerabilities that could compromise the systems
(in general these three systems are from the same family).
This number is reduced to 102 and 9 vulnerabilities, respec-
tively, in groups of four and ﬁve OSes. There are only two
vulnerabilities shared by six OSes (with identiﬁers CVE-
2008-1447 and CVE-2007-5365), and one vulnerability that
appears in nine OSes (with identiﬁer CVE-2008-4609). The
ﬁrst two cases correspond to protocols that are implemented
in a similar manner in various systems, namely DNS and
DHCP, and the last one to a well-known denial of service
problem in the TCP design.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:43:50 UTC from IEEE Xplore.  Restrictions apply. 
389FreeBSD
Solaris
RedHat Win2000 Win2003
OpenBSD
NetBSD
FreeBSD
Solaris
Debian
RedHat
Win2000
Win2003
OpenBSD
###
7
7
0
0
0
1
1
NetBSD
9
###
9
0
0
0
1
1
25
15
###
0
0
0
1
1
6
8
8
###
0
1
0
0
Debian
0
2
1
2
###
1
1
0
4
2
5
3
10
###
1
0
2
2
3
3
0
0
###
46
1
0
1
1
0
0
35
###
5
0
0
2
-
4
9
9
1
HISTORY/OBSERVED PERIOD RESULTS FOR ISOLATED THIN SERVERS
2006-2010
Table V
OS Pairs
Win2000-Win2003
OpenBSD-FreeBSD
NetBSD-FreeBSD
Win2003-Win2008
OpenBSD-NetBSD
Win2000-Win2008
Debian-RedHat
FreeBSD-Solaris
NetBSD-Solaris
OpenBSD-Solaris
OpenSolaris-Solaris
FreeBSD-RedHat
FreeBSD-Win2000
OpenBSD-RedHat
Solaris-RedHat
NetBSD-Win2000
OpenBSD-Win2000
Solaris-Win2000
Solaris-Debian
OpenBSD-Win2003
FreeBSD-Win2003
Debian-Ubuntu
NetBSD-Debian
NetBSD-RedHat
NetBSD-Win2003
NetBSD-Win2008
OpenBSD-Win2008
FreeBSD-Win2008
Solaris-Win2003
FreeBSD-Debian
Debian-Win2000
Ubuntu-RedHat
Ubuntu-Win2000
RedHat-Win2000
Driver
Kernel
Sys. Soft.
0
1
2
0
1
0
0
0
0
0
0
0
1
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
40
14
13
10
8
8
5
5
4
5
3
1
3
1
3
2
3
3
1
2
2
0
0
0
1
1
1
1
1
0
0
0
0
0
41
17
9
8
7
6
6
3
4
1
3
4
0
3
1
0
0
0
1
0
0
2
2
2
0
0
0
0
0
1
1
1
1
1
Total
81
32
24
18
16
14
11
8
8
6
6
5
4
4
4
3
3
3
2
2
2
2
2
2
1
1
1
1
1
1
1
1
1
1
COMMON VULNERABILITIES ON ISOLATED THIN SERVERS.
Table IV
C. Selecting the OS for the Replicas
Recall that when building an intrusion-tolerant replicated
system, one would like to pick a group of OSes for the
servers that share a minimum number of vulnerabilities
(ideally zero). This selection ensures that
the adversary
spends more effort and time to break the system, since he
or she has to compromise each replica separately.5 Typical
intrusion-tolerant systems require at least 3 f + 1 replicas to
tolerate f faults (e.g., [3], [7], [9]), and in some speciﬁc
services they might only need 2 f + 1 or more replicas
(e.g., [4], [5]).
The results from the previous section give a strong indi-
cation that it should be possible to choose groups of OSes
5This is valid under the assumption that the cost to compromise each
OS is non-negligible and approximately the same.
with few common vulnerabilities over long intervals of time.
However, we would like to understand if the data from
the NVD database is effective at suggesting these groups
of OSes. To address this point, we divided the data in