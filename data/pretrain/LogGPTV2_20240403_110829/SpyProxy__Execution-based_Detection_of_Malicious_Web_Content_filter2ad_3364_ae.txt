Bye [30] is a Web proxy that uses a combination of
blacklisting, whitelisting, ClamAV-based virus scanning,
and heuristics to identify potentially malicious Web con-
tent. In contrast, SpyProxy uses execution-based analy-
sis to identify malicious content.
6 Conclusions
This paper described the design, implementation, and
evaluation of SpyProxy, an execution-based malware de-
tection system that protects clients from malicious Web
pages, such as drive-by-download attacks. SpyProxy ex-
ecutes active Web content in a safe virtual machine be-
fore it reaches the browser. Because SpyProxy relies on
the behavior of active content, it can block zero-day at-
tacks and previously unseen threats. For performance,
SpyProxy beneﬁts from a set of optimizations, including
the staged release of content and caching the results of
security checks.
Our evaluation of SpyProxy demonstrates that
it
meets its goals of safety, responsiveness, and trans-
parency:
1. SpyProxy successfully detected and blocked all of
the threats it faced, including threats not identiﬁed
by other detectors.
2. The SpyProxy prototype adds only 600 millisec-
onds of latency to the start of page rendering—an
amount that is negligible in the context of browsing
over a broadband connection.
3. Our prototype integrates easily into the network and
its existence is transparent to users.
Execution-based analysis does have limitations. We
described several of these, including issues related to
non-determinism, termination, and differences in the ex-
ecution environment between the client and the proxy.
There are many existing malware detection tools, and
although none of them are perfect, together they con-
tribute to a “defense in depth” security strategy. Our goal
is neither to build a perfect tool nor to replace existing
tools, but to add a new weapon to the Internet security
arsenal. Overall, our prototype and experiments demon-
strate the feasibility and value of on-the-ﬂy, execution-
based defenses against malicious Web-page content.
7 Acknowledgements
We would like to thank the Computer Science and
Engineering support staff and the Computing and Com-
munications staff at the University of Washington for
enabling our research. This research was supported in
part by the National Science Foundation under grants
CNS-0627367, NSF-614975, and ANI-0132817, by the
Torode Family Endowed Career Development Professor-
ship, and by the Wissner-Slivka Chair.
References
[1] Virg´ılio Almeida, Azer Bestavros, Mark Crovella, and
Adriana de Oliveira. Characterizing reference locality in
the WWW. In Proceedings of the IEEE Conference on
Parallel and Distributed Information Systems (PDIS ’96),
Miami Beach, FL, December 1996.
[2] Kostas G. Anagnostakis, Stelios Sidiroglou, Periklis
Akritidis, Konstantinos Xinidis, Evangelos Markatos, and
Angelos D. Keromytis. Detecting targeted attacks using
shadow honeypots. In Proceedings of the 14th USENIX
Security Symposium, August 2005.
[3] Kevin Borders and Atul Prakash. Web tap: Detecting
covert Web trafﬁc. In Proceedings of the 11th ACM Con-
ference on Computer and Communications Security (CCS
’04), New York, NY, October 2004.
[4] Kevin Borders, Xin Zhao, and Atul Prakash.
Siren:
Catching evasive malware (short paper). In Proceedings
of the 2006 IEEE Symposium on Security and Privacy,
Washington, DC, May 2006.
[5] Tanya Bragin. Measurement study of the Web through
a spam lens. Technical Report TR-2007-02-01, Univer-
sity of Washington, Computer Science and Engineering,
February 2007.
[6] Lee Breslau, Pei Cao, Li Fan, Graham Phillips, and Scott
Shenker. Web caching and Zipf-like distributions: Evi-
dence and implications. In Proceedings of 18th Annual
IEEE Conference on Computer Communications (IEEE
INFOCOM ’99), March 1999.
[7] David Brumley, James Newsome, Dawn Song, Hao
Wang, and Somesh Jha. Towards automatic generation
of vulnerability-based signatures. In Proceedings of the
2006 IEEE Symposium on Security and Privacy, Wash-
ington, DC, May 2006.
[8] Mihai Christodorescu, Somesh Jha, Sanjit A. Seshia,
Dawn Song, and Randal E. Bryant. Semantics-aware mal-
ware detection. In Proceedings of the 2005 IEEE Sympo-
sium on Security and Privacy, Oakland, CA, May 2005.
Product focus: Behavior-
http:
blocking stops unknown malicious code.
//mirage.cs.ucr.edu/mobilecode/
resources files/behavior.pdf, June 2002.
[9] Andrew Conry-Murray.
[10] Richard Cox, Steven Gribble, Henry Levy, and Jacob
Hansen. A safety-oriented platform for Web applications.
In Proceedings of the 2006 IEEE Symposium on Security
and Privacy, Washington, DC, May 2006.
[11] Roger Dingledine, Nick Mathewson, and Paul Syverson.
Tor: The second-generation onion router. In Proceedings
of the 13th USENIX Security Symposium, San Diego, CA,
August 2004.
[12] George W. Dunlap, Samuel T. King, Sukru Cinar, Mur-
taza Basrai, and Peter M. Chen. ReVirt: Enabling intru-
sion analysis through virtual-machine logging and replay.
In Proceedings of the 5th USENIX Symposium on Op-
erating Systems Design and Implementation (OSDI ’02),
Boston, MA, December 2002.
[13] Brian Duska, David Marwood, and Michael J. Feeley.
The measured access characteristics of World Wide Web
client proxy caches. In Proceedings of the 1st USENIX
Symposium on Internet Technologies and Systems (USITS
’97), Monterey, CA, December 1997.
[14] Armando Fox, Steven Gribble, Yatin Chawathe, Eric A.
Brewer, and Paul Gauthier. Cluster-based scalable net-
work services. In Proceedings of the 16th ACM Sympo-
sium on Operating Systems Principles (SOSP ’97), St.-
Malo, France, October 1997.
[15] Steven Glassman. A caching relay for the World Wide
Web. Computer Networks and ISDN Systems, 27(2):165–
173, 1994.
[16] Green Border Technologies.
GreenBorder desktop
DMZ solutions. http://www.greenborder.com,
November 2005.
[17] Francis Hsu, Hao Chen, Thomas Ristenpart, Jason Li, and
Zhendong Su. Back to the future: A framework for auto-
matic malware removal and system repair. In Proceedings
of the 22nd Annual Computer Security Applications Con-
ference (ACSAC ’06), Washington, DC, December 2006.
[18] Ashlesha Joshi, Samuel T. King, George W. Dunlap, and
Peter M. Chen. Detecting past and present intrusions
through vulnerability-speciﬁc predicates. In Proceedings
of the 20th ACM Symposium on Operating Systems Prin-
ciples (SOSP ’05), Brighton, United Kingdom, October
2005.
[19] Darrell Kienzle and Matthew Elder. Recent worms: A
survey and trends. In Proceedings of the 2003 ACM Work-
shop on Rapid Malcode (WORM ’03), Washington, DC,
October 2003.
[20] Engin Kirda, Christopher Kruegel, Greg Banks, Giovanni
Vigna, and Richard Kemmerer. Behavior-based spyware
detection. In Proceedings of the 15th USENIX Security
Symposium, Vancouver, BC, Canada, August 2006.
[21] Tom M. Kroeger, Darrell D. E. Long, and Jeffrey C.
Mogul. Exploring the bounds of Web latency reduction
from caching and prefetching. In Proceedings of the 1st
USENIX Symposium on Internet Technologies and Sys-
tems (USITS ’97), Monterey, CA, December 1997.
[22] Christopher Kruegel and Giovanni Vigna. Anomaly de-
tection of Web-based attacks. In Proceedings of the 10th
ACM Conference on Computer and Communications Se-
curity (CCS ’03), New York, NY, October 2003.
[23] Lancope StealthWatch. http://www.lancope.com.
[24] Robert Lemos. Microsoft patch opens users to at-
tack. http://www.securityfocus.com/news/
11408, August 2006.
[25] LinkScanner Pro.
http://www.explabs.com/
products/lspro.asp.
[26] Dahlia Malkhi and Michael K. Reiter. Secure execution
of java applets using a remote playground. IEEE Transac-
tions on Software Engineering, 26(12):1197–1209, 2000.
[27] Mikhail Mikhailov and Craig Wills. Embedded objects in
Web pages. Technical Report WPI-CS-TR-0005, Worces-
ter Polytechnic Institute, Worcester, MA, March 2000.
[28] Alexander Moshchuk, Tanya Bragin, Steven Gribble, and
Henry Levy. A crawler-based study of spyware on the
In Proceedings of the 13th Annual Network and
Web.
Distributed Systems Security Symposium (NDSS ’06), San
Diego, CA, February 2006.
[29] James Newsome and Dawn Song. Dynamic taint analy-
sis for automatic detection, analysis, and signature gen-
eration of exploits on commodity software. In Proceed-
ings of the 2005 Network and Distributed System Security
Symposium (NDSS ’05), San Diego, CA, February 2005.
[30] Niels Provos. SpyBye. http://www.spybye.org.
[31] Vern Paxson. Bro: A system for detecting network in-
truders in real-time. In Proceedings of the 7th USENIX
Security Symposium, San Antonio, TX, January 1998.
[32] Prevx. http://www.prevx.com.
[33] Charles Reis,
and Saher Esmeir.
of
John Dunagan, Helen Wang, Opher
BrowserShield:
Dubrovsky,
Vulnerability-driven ﬁltering
dynamic HTML.
In Proceedings of the 7th USENIX Symposium on Oper-
ating Systems Design and Implementation (OSDI ’06),
Seattle, WA, November 2006.
[34] Jerome H. Saltzer and Michael D. Schroeder. The protec-
tion of information in computer systems. Proceedings of
the IEEE, 63(9):1278–1308, September 1975.
[35] Sana Security. http://www.sanasecurity.com.
[36] Sandboxie. http://www.sandboxie.com.
[37] Stefan Saroiu, Steven Gribble, and Henry Levy. Measure-
ment and analysis of spyware in a university environment.
In Proceedings of the First Symposium on Networked Sys-
tems Design and Implementation (NSDI ’04), San Fran-
cisco, CA, March 2004.
[38] Stefan Saroiu, Krishna Gummadi, Richard Dunn, Steven
Gribble, and Henry Levy. An analysis of internet con-
tent delivery systems. In Proceedings of the 5th USENIX
Symposium on Operating Systems Design and Implemen-
tation (OSDI ’02), New York, NY, December 2002. ACM
Press.
[39] Prabhat Singh and Arun Lakhotia. Analysis and detec-
tion of computer viruses and worms: An annotated bibli-
ography. ACM SIGPLAN Notices, 37(2):29–35, February
2002.
[40] Sumeet Singh, Cristian Estan, George Varghese, and Ste-
fan Savage. Automated worm ﬁngerprinting. In Proceed-
ings of the 6th USENIX Symposium on Operating Systems
Design and Implementation (OSDI ’04), December 2004.
[41] SiteAdvisor, Inc. http://www.siteadvisor.com.
[42] Snort. The open source network intrusion detection sys-
tem. http://www.snort.org.
[43] StopBadware. http://www.stopbadware.org/.
[44] StopBadware.org -
Incompetence or McCarthyism
http://www.adwarereport.com/mt/
2.0?
archives/stopbadwareorg.php.
[45] Jeremy Sugerman, Ganesh Venkitachalam, and Beng-
Hong Lim. Virtualizing I/O devices on VMware worksta-
tion’s hosted virtual machine monitor. In Proceedings of
the 2001 Annual USENIX Technical Conference, Boston,
MA, June 2001.
[46] Hao Wang, Somesh Jha,
for NIDS.
and Vinod Ganapathy.
spyware signa-
NetSpy: Automatic generation of
the 22nd
tures
Annual Computer Security Applications Conference
(ACSAC ’06), Miami Beach, FL, December 2006.
http://dx.doi.org/10.1109/ACSAC.2006.34.
In Proceedings of
[47] Helen Wang, Chuanxiong Guo, Daniel Simon, and Alf
Zugenmaier. Shield: Vulnerability-driven network ﬁl-
ters for preventing known vulnerability exploits. In Pro-
ceedings of ACM SIGCOMM 2004, Portland, OR, August
2004.
[48] XiaoFeng Wang, Zhuowei Li, Jun Xu, Michael K. Reiter,
Chongkyung Kil, and Jong Youl Choi. Packet vaccine:
Black-box exploit detection and signature generation. In
Proceedings of the ACM Conference on Computer and
Communications Security (CCS ’06), October 2006.
[49] Yi-Min Wang, Doug Beck, Xuxian Jiang, Roussi Rous-
sev, Chad Verbowski, Shuo Chen, and Samuel T. King.
Automated Web patrol with Strider HoneyMonkeys:
Finding Web sites that exploit browser vulnerabilities. In
Proceedings of the 13th Annual Network and Distributed
Systems Security Symposium (NDSS ’06), San Diego, CA,
February 2006.
[50] Yi-Min Wang, Doug Beck, Binh Vo, Roussi Roussev,
Chad Verbowski, and Aaron Johnson. Detecting stealth
software with Strider GhostBuster. In Proceedings of the
2005 International Conference on Dependable Systems
and Networks (DSN ’05), Yokohama, Japan, July 2005.
[51] Yi-Min Wang, Roussi Roussev, Chad Verbowski, Aaron
Johnson, Ming-Wei Wu, Yennun Huang, and Sy-Yen
Kuo. Gatekeeper: Monitoring auto-start extensibility
points (ASEPs) for spyware management. In Proceedings
of 18th Large Installation System Administration Confer-
ence (LISA ’04), Atlanta, GA, November 2004.
[52] Alec Wolman, Geoff Voelker, Nitin Sharma, Neal Card-
well, Molly Brown, Tashana Landray, Denise Pinnel,
Anna Karlin, and Henry Levy. Organization-based anal-
ysis of Web-object sharing and caching. In Proceedings
of the 2nd USENIX Conference on Internet Technologies
and Systems (USITS ’99), Boulder, CO, October 1999.
[53] Alec Wolman, Geoff Voelker, Nitin Sharma, Neal Card-
well, Anna Karlin, and Henry Levy. On the scale and
performance of cooperative Web proxy caching. In Pro-
ceedings of the 17th ACM Symposium on Operating Sys-
tems Principles (SOSP ’99), Kiawah Island, SC, Decem-
ber 1999.