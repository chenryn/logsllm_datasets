PPP link is the only connection to the internet will not normally have
a default route, so the peer will be able to use almost any IP address
without authenticating itself.
.PP
As indicated above, some security-sensitive options are privileged,
which means that they may not be used by an ordinary non-privileged
user running a setuid-root pppd, either on the command line, in the
user's ~/.ppprc file, or in an options file read using the \fIfile\fR
option.  Privileged options may be used in /etc/ppp/options file or in
an options file read using the \fIcall\fR option.  If pppd is being
run by the root user, privileged options can be used without
restriction.
.PP
When opening the device, pppd uses either the invoking user's user ID
or the root UID (that is, 0), depending on whether the device name was
specified by the user or the system administrator.  If the device name
comes from a privileged source, that is, /etc/ppp/options or an
options file read using the \fIcall\fR option, pppd uses full root
privileges when opening the device.  Thus, by creating an appropriate
file under /etc/ppp/peers, the system administrator can allow users to
establish a ppp connection via a device which they would not normally
have permission to access.  Otherwise pppd uses the invoking user's
real UID when opening the device.
.SH AUTHENTICATION
Authentication is the process whereby one peer convinces the other of
its identity.  This involves the first peer sending its name to the
other, together with some kind of secret information which could only
come from the genuine authorized user of that name.  In such an
exchange, we will call the first peer the "client" and the other the
"server".  The client has a name by which it identifies itself to the
server, and the server also has a name by which it identifies itself
to the client.  Generally the genuine client shares some secret (or
password) with the server, and authenticates itself by proving that it
knows that secret.  Very often, the names used for authentication
correspond to the internet hostnames of the peers, but this is not
essential.
.LP
At present, pppd supports two authentication protocols: the Password
Authentication Protocol (PAP) and the Challenge Handshake
Authentication Protocol (CHAP).  PAP involves the client sending its
name and a cleartext password to the server to authenticate itself.
In contrast, the server initiates the CHAP authentication exchange by
sending a challenge to the client (the challenge packet includes the
server's name).  The client must respond with a response which
includes its name plus a hash value derived from the shared secret and
the challenge, in order to prove that it knows the secret.
.LP
The PPP protocol, being symmetrical, allows both peers to require the
other to authenticate itself.  In that case, two separate and
independent authentication exchanges will occur.  The two exchanges
could use different authentication protocols, and in principle,
different names could be used in the two exchanges.
.LP
 pppd预设的动作是如果有要求就同意进行验证，并且不要求从彼
端做验证。然而如果没有可以用来验证的暗号则pppd将不会同意
以特殊的协定来验证它自己。
.LP
 验证的基础是由暗号档案选择的暗号（/etc/ppp/pap-secrets是
给PAP使用的，/etc/ppp/chap-secrets则是给CHAP使用）。
这两个暗号档案都具有相同的格式，而且两者都可以储放暗号给数
种伺服器（验证彼端）及客户（被验证端）组合使用。注意pppd
可以最为伺服端以及客户端，而且如果需要的话两方可以使用不同
的协定。
.LP
 一个暗号档案如同选项档案一般被剖析成单字。一个暗号是由最少
包含3个单字的一行所指定，依序是客户，伺服器，暗号。在同
一行中任何跟在其后的单字都被当作是给客户的可接受IP位址列
表。如果该行只有3个单字，这假设任何IP位址都可以；不允
许所有的IP位址的话，使用"-"。如果暗号是以'@'开始，其
后所接的单字将被假设为可以从中读取暗号的档案名称。而以一个
"*"字元作为客户或伺服端的名称会符合任何名称。在选择一个暗
号时，pppd会选择最符合的，i.e.最少万用字元的那个。
.LP
如此一个暗号档案包含用来验证其它主机，以及用来为其它主机验
证自己两者的暗号。选择使用哪个暗号是根据该主机（本地名称）
以及其彼端（远端名称）而定。本地名称的设定如下：
.LP
If the secret starts with an `@', what follows is assumed to be the
name of a file from which to read the secret.  A "*" as the client or
server name matches any name.  When selecting a secret, pppd takes the
best match, i.e.  the match with the fewest wildcards.
.LP
Any following words on the same line are taken to be a list of
acceptable IP addresses for that client.  If there are only 3 words on
the line, or if the first word is "-", then all IP addresses are
disallowed.  To allow any address, use "*".  A word starting with "!"
indicates that the specified address is \fInot\fR acceptable.  An
address may be followed by "/" and a number \fIn\fR, to indicate a
whole subnet, i.e. all addresses which have the same value in the most
significant \fIn\fR bits.  In this form, the address may be followed
by a plus sign ("+") to indicate that one address from the subnet is
authorized, based on the ppp network interface unit number in use.
In this case, the host part of the address will be set to the unit
number plus one.
.LP
Thus a secrets file contains both secrets for use in authenticating
other hosts, plus secrets which we use for authenticating ourselves to
others.  When pppd is authenticating the peer (checking the peer's
identity), it chooses a secret with the peer's name in the first
field and the name of the local system in the second field.  The
name of the local system defaults to the hostname, with the domain
name appended if the \fIdomain\fR option is used.  This default can be
overridden with the \fIname\fR option, except when the
\fIusehostname\fR option is used.
.LP
When pppd is choosing a secret to use in authenticating itself to the
peer, it first determines what name it is going to use to identify
itself to the peer.  This name can be specified by the user with the
\fIuser\fR option.  If this option is not used, the name defaults to
the name of the local system, determined as described in the previous
paragraph.  Then pppd looks for a secret with this name in the first
field and the peer's name in the second field.  Pppd will know the
name of the peer if CHAP authentication is being used, because the
peer will have sent it in the challenge packet.  However, if PAP is being
used, pppd will have to determine the peer's name from the options
specified by the user.  The user can specify the peer's name directly
with the \fIremotename\fR option.  Otherwise, if the remote IP address
was specified by a name (rather than in numeric form), that name will
be used as the peer's name.  Failing that, pppd will use the null
string as the peer's name.
.LP
 当以PAP验证彼端时，一个""暗号符合任何由彼端所提供密码。
如果密码不符合暗号，密码被以crypt()编码并且再次检查暗号；
因此验证彼端的暗号可以编码方式储放。
.LP
如果指定有login选项，
使用者名称以及密码也会被以系统的密码资料库检查。因此系统管
理人员可以设定pap-secrets档案以便只允许某些使用者以PPP
连线，并且限制每个使用者可以使用一些IP位址。
Typically, when using the \fIlogin\fR option,
the secret in /etc/ppp/pap-secrets would be "", which will match any
password supplied by the peer.  This avoids the need to have the same
secret in two places.
.LP
 验证必须在IPCP（或任何其它网路控制协定）开始之前被完全地
满足。如果验证失败，pppd将会终结连线（关闭LCP）。如果
IPCP协商出一个无法接受的远端主机IP位址，IPCP将会关闭。
IP封包只有在IPCP打开的时候才能传送或接收。
.LP
 即使本地主机一般会要求验证，在某些案例中会希望允一些无法验
证它们自己的主机连线并使用所限制的IP位址其中之一。如果彼
在被要求时拒绝验证它自己，pppd将会把它当成等于是在使用者
名称以及密码上使用空字串来以PAP验证。所以，借由增加一行
指定空字串为客户以及密码到pap-secrets档案去，允许拒绝验
证自己的主机进行有限制的存取是可能的。
.SH "路由 ROUTING"
.LP
 当IPCP协商成功地完成时，pppd将会通知核心该ppp界面本地
以及远端的IP位址。这足够用来建立一个主机到该连线远端的递
送路径，该路径将使两端能交换IP封包。与其它的机器进行通讯
往往需要更进一步地修改递送表格(routingtables)以及／或是
ARP（位址解译协定）表格。在某些案例中这将透过routed或是
gated隐形程式的动作自动地完成，但是在大部分的案例中需要更
进一步的介入。
.LP
 有时候会希望透过远端主机来增加一个预设递送路径，像是在一台
只透过ppp界面连线到Internet的机器。此defaultroute选
项使得pppd在IPCP完成时建立起这么一个预设的递送路径，并
且在该线路被终结时将之删除。
.LP
 在某些情况下会希望使用proxyARP，例如在一台连结到区域网
路的伺服机器上，为了能够允许其它的主机与远端主机进行通讯。
proxyarp选项引发pppd去寻找一个与远端主机在相同子网路上
的网路界面（一个支援广播(boardcast)以及ARP的界面，不但要
是可用的并且不是一个点对点或回授界面）。如果找到，pppd会
以该远端主机的IP位址以及所找到的网路界面之硬体位址建立一
个永久的，公开的ARP项目。
.LP
When the \fIdemand\fR option is used, the interface IP addresses have
already been set at the point when IPCP comes up.  If pppd has not
been able to negotiate the same addresses that it used to configure
the interface (for example when the peer is an ISP that uses dynamic
IP address assignment), pppd has to change the interface IP addresses
to the negotiated addresses.  This may disrupt existing connections,
and the use of demand dialling with peers that do dynamic IP address
assignment is not recommended.
.SH MULTILINK
Multilink PPP provides the capability to combine two or more PPP links
between a pair of machines into a single `bundle', which appears as a
single virtual PPP link which has the combined bandwidth of the
individual links.  Currently, multilink PPP is only supported under
Linux.
.LP
Pppd detects that the link it is controlling is connected to the same
peer as another link using the peer's endpoint discriminator and the
authenticated identity of the peer (if it authenticates itself).  The
endpoint discriminator is a block of data which is hopefully unique
for each peer.  Several types of data can be used, including
locally-assigned strings of bytes, IP addresses, MAC addresses,
randomly strings of bytes, or E-164 phone numbers.  The endpoint
discriminator sent to the peer by pppd can be set using the endpoint
option.
.LP
In circumstances the peer may send no endpoint discriminator or a
non-unique value.  The optional bundle option adds an extra string
which is added to the peer's endpoint discriminator and authenticated
identity when matching up links to be joined together in a bundle.
The bundle option can also be used to allow the establishment of
multiple bundles between the local system and the peer.  Pppd uses a
TDB database in /var/run/pppd.tdb to match up links.
.LP
Assuming that multilink is enabled and the peer is willing to
negotiate multilink, then when pppd is invoked to bring up the first
link to the peer, it will detect that no other link is connected to
the peer and create a new bundle, that is, another ppp network
interface unit.  When another pppd is invoked to bring up another link
to the peer, it will detect the existing bundle and join its link to
it.  Currently, if the first pppd terminates (for example, because of
a hangup or a received signal) the bundle is destroyed.
.SH "范例 EXAMPLE"S
.LP
The following examples assume that the /etc/ppp/options file contains
the \fIauth\fR option (as in the default /etc/ppp/options file in the
ppp distribution).
.LP
Probably the most common use of pppd is to dial out to an ISP.  This
can be done with a command such as
.IP
pppd call isp
.LP
where the /etc/ppp/peers/isp file is set up by the system
administrator to contain something like this:
.IP
ttyS0 19200 crtscts
.br
connect '/usr/sbin/chat -v -f /etc/ppp/chat-isp'
.br
noauth
.LP
In this example, we are using chat to dial the ISP's modem and go
through any logon sequence required.  The /etc/ppp/chat-isp file
contains the script used by chat; it could for example contain
something like this:
.IP
ABORT "NO CARRIER"
.br
ABORT "NO DIALTONE"
.br
ABORT "ERROR"
.br
ABORT "NO ANSWER"
.br
ABORT "BUSY"
.br
ABORT "Username/Password Incorrect"
.br
"" "at"
.br
OK "at&d0&c1"
.br
OK "atdt2468135"
.br
"name:" "^Umyuserid"
.br
"word:" "\\qmypassword"
.br
"ispts" "\\q^Uppp"
.br
"~-^Uppp-~"
.LP
See the chat(8) man page for details of chat scripts.
.LP
Pppd can also be used to provide a dial-in ppp service for users.  If
the users already have login accounts, the simplest way to set up the
ppp service is to let the users log in to their accounts and run pppd
(installed setuid-root) with a command such as
.IP
pppd proxyarp
.LP
To allow a user to use the PPP facilities, you need to allocate an IP
address for that user's machine and create an entry in
/etc/ppp/pap-secrets or /etc/ppp/chap-secrets (depending on which
authentication method the PPP implementation on the user's machine
supports), so that the user's
machine can authenticate itself.  For example, if Joe has a machine
called "joespc" which is to be allowed to dial in to the machine
called "server" and use the IP address joespc.my.net, you would add an
entry like this to /etc/ppp/pap-secrets or /etc/ppp/chap-secrets:
.IP
joespc	server	"joe's secret"	joespc.my.net
.LP
Alternatively, you can create a username called (for example) "ppp",
whose login shell is pppd and whose home directory is /etc/ppp.
Options to be used when pppd is run this way can be put in
/etc/ppp/.ppprc.
.LP
 如果你的串列连线比直接以线路连接更复杂的话，你可能会需要做
些调整以便避开一些控制字元。特别是，通常避开XON(^Q)以及
XOFF(^S)是有用的，可以使用asyncmapa0000。如果该路径包
含telnet的话，你可能应该也要避开^](asyncmap200a0000)。
如果该路径包含rlogin的话，你将需要在执行rlogin的客户端
上使用escapeff选项，因为许多rlogin的实作并非是透通的；
它们将会从资料流中移除[0xff,0xff,0x73,0x73,跟随的任何
8位元组]这些序列。
.SH "诊断 DIAGNOSTICS"
.LP
 讯息使用facilityLOG_DAEMON送到syslog隐形程式。（这个
可以藉著以所要的facility定义LOG_PPP巨集来重新编译pppd
加以改变。）为了能够看到错误以及侦错讯息，你将需要编辑你的
/etc/syslog.conf档案来将讯息导向到所希望的设备或档案。
.LP
debug选项使得所有送出以及接收的控制封包内容都被记录下来，
这是指所有的LCP,PAP,CHAP,或是IPCP封包。如果PPP协商
没有成功的话那么这可能会有用。如果在编译时期开启侦错功能的
话，pppd会使用facilityLOG_LOCAL2来取代LOG_DAEMON，而
且debug选项会使得额外的侦错讯息被记录下来。
.LP
侦错功能也可以藉著传送一个SIGUSR1到pppd程序来启动。侦
错功能可以藉著传送一个SIGUSR2到pppd程序来关闭。
.SH EXIT STATUS
The exit status of pppd is set to indicate whether any error was
detected, or the reason for the link being terminated.  The values