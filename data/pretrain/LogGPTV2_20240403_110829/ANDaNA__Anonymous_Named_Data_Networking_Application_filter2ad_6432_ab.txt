near a content producer since not all interests for the
same content reach its producer.
On the other hand, NDN provides no protection
against an adversary that monitors local activity of a spe-
ciﬁc consumer. As most content names are expected to
be semantically relevant to content itself, interests can
leak a lot of information about the content they aim to
retrieve. To mitigate this issue, NDN allows the use
of “encrypted names”, whereby a producer encrypts the
tail-end (a few components) of a name [27]. 4 However,
this simple approach does not provide much privacy: the
adversary can link multiple interests for the same con-
tent – or those sharing the same name preﬁx – issued by
different consumers. Moreover, an adversary can always
replay an interest to see what (possibly cached) content
it returns, even if a name of content is not semantically
relevant.
3 Related Work
The goal of anonymizing tools and techniques is to
decouple actions from entities that perform them. The
most basic approach to anonymity is to use a trusted
anonymizing proxy. A proxy is typically interposed be-
tween a sender and a receiver in order to hide identity
of the former from the latter. The Anonymizer [3] and
Lucent Personalized Web Assistant [22] are examples of
this approach. While relatively efﬁcient, it is susceptible
to a (local) passive adversary that monitors all proxy ac-
4For
name
such
example,
as:
/ndn/xerox/parc/Alice/family/photos/Hawaii might
be replaced with /ndn/xerox/parc/Alice/encrypted-part.
a
tivity. Also, a centralized proxy necessitates centralized
(global) trust and represents a single point of failure.
A more sophisticated decentralized approach is used
in mix networks [13]. Typically, a mix network achieves
anonymity by repeatedly routing a message from one
proxy to another, such that the message gradually loses
any relationship with its originator. Messages must be
made unintelligible to potentially untrusted intermediate
nodes. Chaum’s initial proposal [13] deﬁnes an anony-
mous email system, wherein a sender envelops a mes-
sage with several concentric layers of public key encryp-
tion. The resulting message is then forwarded to a se-
quence of mix servers, that gradually remove one layer
of encryption at a time and forward the message to the
next mix server.
Subsequent research generally falls into two classes:
delay-tolerant applications (e.g. email, ﬁle sharing) and
real-time or low-latency applications (e.g. web brows-
ing, VoIP, SSH). These two classes achieve different
tradeoffs between performance (in terms of latency and
bandwidth) and anonymity. For example, Babel [24],
Mixmaster [30] and Mixminion [16] belong to the ﬁrst
category. Their goal is to provide anonymity with re-
spect to the global eavesdropper adversary. Each mix
introduces spurious trafﬁc and randomized trafﬁc delays
in order to inhibit correlation between input and out-
put trafﬁc. However, unpredictable trafﬁc characteris-
tics and high delays make these techniques unsuitable
for many applications.
Low-latency anonymizing networks are at the other
end of the spectrum. They try to minimize extra latency
by forwarding trafﬁc as fast as possible. Because of this,
strategies used in anonymization of delay-tolerant trafﬁc
– batching (delaying) and re-ordering of trafﬁc in mixes,
as well as introduction of decoy trafﬁc — are generally
not applicable. For example, [40] shows how trafﬁc pat-
terns can be used for de-anonymization in low-latency
anonymity systems. Notable low-latency tools are sum-
marized below.
Crowds [37] is a low-latency anonymizing network
for HTTP trafﬁc. It differs from traditional mix-based
approaches as it lacks layered encryption. For each mes-
sage it receives, an anonymizer probabilistically chooses
to either forward it to a random next hop within the
Crowds network or deliver it to its ﬁnal destination.
Since messages are not encrypted, Crowds is vulnerable
to local eavesdroppers and predecessor attacks [43].
Morphmix [38, 39] is a fully distributed peer-to-
peer mix network that uses layered encryption. Unlike
Crowds, it does not require a lookup service to keep
track of all participating nodes. Senders selects the ﬁrst
anonymizer and each anonymizer along an “anonymous
tunnel” picks the next hop to dynamically build tunnels.
Tarzan [21] is another fully distributed peer-to-peer mix
network. It builds a universally veriﬁable set of neigh-
bors (called mimics) for every node to keep track of
other other Tarzan participants. Every node selects its
mimics pseudo-randomly.
Tor [18] is the best-known and most-used low-latency
anonymizing tool.
It is based on onion routing and
layered encryption. Tor uses a central directory to lo-
cate participating nodes and requires users to build a
three-hop anonymizing circuit by choosing three ran-
dom nodes. The ﬁrst is called the guard, the second
– the middle, and the third — exit node. Once set up,
each circuit in Tor lasts about 10 minutes. For better
performance, bandwidth available to nodes is taken into
account during circuit establishment and multiple TCP
connections are multiplexed over one circuit. Commu-
nication between Tor nodes is secured via SSL. How-
ever, Tor does not introduce any decoy trafﬁc or random-
ization to hide trafﬁc patterns. Another anonymization
tool, I2P [26], adopts many ideas of Tor, while using a
distributed untrusted directory service to keep track of
its participants. I2P also replaces Tor’s circuit-switching
operation with packet-switching to achieve better load
balancing and fault-tolerance.
A consumer privacy technique for
Information-
Centric Networks (ICNs) is proposed in [4]. Instead of
using encryption, it leverages cooperation from content
producers and requires them to mix sensitive informa-
tion with so-called “cover” content. This approach re-
quires producers to cooperate and store a large amount
of cover trafﬁc.
It also does not provide consumer-
producer unlinkability or protection against malicious
producers.
Telex [44] is an alternative to mix networks de-
signed to evade state-level censorship. It uses stegano-
graphic techniques to hide messages in SSL handshakes.
Users connect to innocuous-looking unblocked websites
through SSL. Sympathetic ISP-s that forward user’s traf-
ﬁc recover hidden messages and deliver them to the in-
tended destination. While novel, this approach presents
signiﬁcant deployment challenges and requires support
from the network infrastructure. Furthermore, the threat
model in Telex is quite different from that of the other
anonymizing tools presented above. Moreover, estab-
lished TCP ﬁngerprinting techniques can easily detect
differences between a Telex station and a censored web-
site. Another analogous technique – called Cirripede
[25] – was recently proposed.
4 ANDaNA
ANDaNA is a onion routing overlay network, built
on top of NDN, that provides privacy and anonymity
to consumers.
In particular, ANDaNA prevents adver-
saries from linking consumers with the content they
are retrieving. Following the terminology introduced
in [37], ANDaNA provides beyond suspicion5 degree of
anonymity to its users.
ANDaNA uses multiple concentric layers of encryp-
tion and routes messages from consumers through a
chain of at least two onion routers. Each router removes
a layer of encryption and forwards the decrypted mes-
sages to the next hop. Due to its low-latency focus,
ANDaNA does not guarantee privacy in presence of a
global eavesdropper. However, since it is geared for a
world-wide (or at least geographically distributed) net-
work spanning a multitude of administrative domains,
the existence of such an adversary is unlikely. For this
reason, we restrict the adversarial capabilities to eaves-
dropping on, injecting, removing or modifying mes-
sages on a subset of available links. An adversary
can compromise NDN routers and ANDaNA nodes at
will. Nonetheless, consumers beneﬁt from anonymity as
long as they use at least one non-compromised ANDaNA
node. Details of our adversarial model and formal pri-
vacy guarantees are discussed in Section 5.
4.1 Design
We now present two techniques — asymmetric and
session-based — that provide privacy and anonymity for
NDN trafﬁc. Trafﬁc is routed through ephemeral cir-
cuits, that are deﬁned as a pair of distinct anonymizing
routers (ARs). An AR is a NDN node (e.g. a router or a
host) that chooses to be part of ANDaNA. An ephemeral
circuit transports only one (or only a few) encrypted in-
terest(s).
It disappears either when the corresponding
content gets delivered, or after a short timeout (hence
“ephemeral”). A timeout interval is needed so that the
consumer can re-issue the same encrypted interest in
case of packet loss. We refer to the ﬁrst AR as entry
router and the second – as exit router. They must not
belong to the same administrative domain and must not
share the same name preﬁx. Optionally, consumers can
select ARs according to some parameters, such as adver-
tised bandwidth, availability or average load. As pointed
out in [5, 31], there is a well know natural tension be-
tween non-uniform (i.e. performance-driven) choice of
routers and anonymity. Consumers should consider this
when selecting ARs.
To build an ephemeral circuit, a consumer retrieves
the list of ARs and corresponding public keys. Although
we do not mandate any particular technique, a consumer
can retrieve this list using, e.g., a directory service [18]
or a decentralized (peer-to-peer) mechanism. AR pub-
lic keys can be authenticated using decentralized tech-
niques (such as web-of-trust [2]) or a PKI infrastruc-
ture.6
5For any packet observed by the adversary, an entity is considered
beyond suspicion if it is as likely to be the sender of this packet as any
other entity.
6Note that implicit replication implemented through caching al-
A prospective AR joins ANDaNA by advertising its
public key, together with its identity deﬁned as: names-
pace, organization and public key ﬁngerprint. An AR
also publishes auxiliary information, such as total band-
width, average load, and uptime.
As mentioned earlier, both interest and content pack-
ets leak information. Even if names in interests are hid-
den, three components of content packets — signatures,
names and content itself — contain potentially sensitive
information. Of course, content producers could sim-
ply generate a new key-pair to sign each content packet.
This would be impractical, since high costs of key gen-
eration and distribution would make it difﬁcult for con-
sumers to authenticate content. (Note that key-evolving
schemes [8] do not help, since veriﬁcation keys gener-
ally evolve in a way that is predictable to all parties, in-
cluding the adversary.) Alternatively, the original con-
tent signature could be replaced with that generated by
an AR. However, this would preclude end-to-end con-
tent veriﬁability and thus break the NDN trust model.
For this reason, ANDaNA implements encrypted en-
capsulation of original content, using two symmetric
keys securely distributed by the consumer to the ARs
during setup of the ephemeral circuit. Upon receiving a
content packet, the exit router encrypts it, together with
the original (cleartext) name and signature, under the
ﬁrst key provided by the consumer. Then, treating the
ciphertext as payload for a new content packet, the exit
router signs and sends it to the entry router. The latter
strips this signature and the name and encrypts the re-
maining ciphertext under the second symmetric key pro-
vided by the consumer. Next, it forwards the ciphertext
with the original encrypted name and a fresh (its own)
signature. After decrypting the payload, the consumer
discards the signature from the entry router and veriﬁes
the one from the content producer.
Because decryption is deterministic, an encrypted in-
terest sent to an AR always produces the same output.
Since ARs are a public resource, the adversary can use
them to decrypt previously observed interests.
It can
thus observe the corresponding output and correlate in-
coming/outgoing interests. This is a well-known attack
and there are several ways to mitigate it, such as en-
crypted channels between communicating parties [18]
and mixing (for delay-tolerant trafﬁc) [24]. However,
such techniques tend to have signiﬁcant impact on com-
putational costs and latency. Instead, we use standard
NDN features of interest aggregation and caching to pre-
vent such attacks, as described next.
In NDN, a router (not just an AR) that receives dupli-
cate interests collapses them. An interest is considered
a duplicate, if it arrives while another interest referring
lows the construction of a directory system with better resilience
against denial-of-service (DoS) attacks than IP.
to the same content has not been satisﬁed. Also, if the
original interest has been satisﬁed and the correspond-
ing content is still in cache, a new interest requesting
the same piece of data is satisﬁed with cached content.
In this case, the router does not forward any interests.
Therefore, the adversary must wait for the expiration of
cached content.
As part of ANDaNA, the consumer includes its current
timestamp within each encryption layer. ARs reject in-
terests with timestamps outside a pre-deﬁned time win-
dow. Thus, consumers need to be loosely synchronized
with ARs that must reserve at least (rate × window) of
cache, where rate is the router’s wire-rate and window
is the interval within which interests are accepted.
In
this way, if an interest is received multiple times by an
AR (e.g. in case of loss of the corresponding data packet
between the AR and the consumer), the AR is able to
satisfy it using its cache.
The encryption algorithm used by consumers to con-
ceal names in interests must be secure against adap-
tive chosen ciphertext (CCA) attacks.7 CCA-security
[9] implies, among other things, probabilistic encryption
and non-malleability. The former prevents the adversary
from determining whether two encrypted interests cor-
respond to the same unencrypted interest. Whereas, the
latter implies that the adversary cannot modify interests
to defeat the mechanism described above.
We now describe two ﬂavors of anonymization pro-
tocols: asymmetric and session-based.
In order to al-