:::
``` screen
~]$ systemctl status NetworkManager
NetworkManager.service - Network Manager
   Loaded: loaded (/lib/systemd/system/NetworkManager.service; enabled)
   Active: active (running) since Fri, 08 Mar 2013 12:50:04 +0100; 3 days ago
```
::: para
如果 [**NetworkManager**]{.application} 服务未处于运行状态，则
`systemctl status`{.command} 命令会报告
[**NetworkManager**]{.application} 处于
`Active: inactive (dead)`{.computeroutput} 状态。请作为 root
用户运行下面的命令在当前会话中启动该服务：
:::
``` screen
~]# systemctl start NetworkManager
```
::: para
运行 `systemctl enable`{.command} 命令确定每次系统引导时都启动
[**NetworkManager**]{.application}：
:::
``` screen
~]# systemctl enable NetworkManager
```
::: para
有关启动、停止及管理服务的详情，请查看 [*《Red Hat Enterprise Linux 7
系统管理员指南》*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/)。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Interacting_with_NetworkManager}1.4.2. 与 NetworkManager 互动 {.title}
:::
::: para
用户不与 [**NetworkManager**]{.application}
系统服务直接互动，而是通过图形及命令行用户界面工具执行网络配置任务。Red Hat
Enterprise Linux 7 中有以下工具可用：
:::
::: para
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    [**NetworkManager**]{.application}
    的简单基于光标的文本用户界面（TUI）[**nmtui**]{.application}。
    :::
2.  ::: para
    提供命令行工具 [**nmcli**]{.application}，允许用户及脚本与
    [**NetworkManager**]{.application}
    互动。注：[**nmcli**]{.application} 可用于缺少 GUI
    的系统（比如服务器）以控制 [**NetworkManager**]{.application}
    的各个方面。它与 GUI 工具处于同等地位。
    :::
3.  ::: para
    GNOME Shell 还在其通知区域提供网络图标，代表
    [**NetworkManager**]{.application}
    报告的网络连接状态。该图标有多种状态，分别代表目前使用的连接状态。
    :::
4.  ::: para
    GNOME Shell 提供的图形用户界面 [**control-center**]{.application}
    还适用于桌面用户。它整合了 [**Network**]{.application}
    设置工具。要启动该工具，请按 [**Super**]{.keycap}
    键进入活动概述页面，输入 `control network`{.command}，然后按
    [**Enter**]{.keycap} 键。[**Super**]{.keycap} 键以不同的形式在 gui
    中出现，具体要看键盘及其他硬件配置，但通常是 Window 键或 Command
    键，一般位于空格键的左侧。
    :::
5.  ::: para
    图形用户界面工具 [**nm-connection-editor**]{.application} 可用于某些
    [**control-center**]{.application}
    尚未处理的任务。要启动该工具，请按 [**Super**]{.keycap}
    键进入活动概述页面，输入 `network connections`{.command} 或
    `nm-connection-editor`{.command}，并按 [**Enter**]{.keycap} 键。
    :::
:::
:::
::: figure
[⁠]{#ch-Introduction_to_RHEL_Networking.html#exam-Interacting_with_NetworkManager}
::: figure-contents
::: mediaobject
[⁠]{#ch-Introduction_to_RHEL_Networking.html#mediaobj-Network_Configuration-NM-AppletStates_Gnome3.png}![网络连接图标状态](images/Network_Configuration-NM-AppletStates_Gnome3.png)
:::
:::
**图 1.1. 网络连接图标状态**
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Networking_Config_Using_nmtui}1.5. 使用文本用户界面（nmtui）进行网络配置 {.title}
:::
::: para
[**NetworkManager**]{.application} 文本用户界面（TUI）工具
[**nmtui**]{.application} 可提供一个文本界面配置由
[**NetworkManager**]{.application} 控制的网络。该工具包含在
[NetworkManager-tui]{.package} 子软件包中。写入时，不会默认随
[**NetworkManager**]{.application} 安装该子软件包。要安装
[NetworkManager-tui]{.package}，请作为 `root`{.systemitem}
运行以下命令：
``` screen
~]# yum install NetworkManager-tui
```
如有必要，请根据 [第 1.4.1 节 "NetworkManager
守护进程"](#ch-Introduction_to_RHEL_Networking.html#sec-The_NetworkManager_Daemon){.xref}
中的论述确定 [**NetworkManager**]{.application} 的运行方式。
:::
::: para
要启动 [**nmtui**]{.application}，请按如下方式运行命令：
``` screen
~]$ nmtui
```
此时会出现文本用户界面。要在该界面中导航，请使用箭头键，或按
[**Tab**]{.keycap} 在选项间前进，按 press
[**Shift**]{.keycap}+[**Tab**]{.keycap} 后退。按 [**Enter**]{.keycap}
选择某个选项。[**Space**]{.keycap} 键切换选择库状态。
:::
::: para
有以下命令可用：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    ``` synopsis
    nmtui edit connection-name
    ```
    如果未提供连接名称，则会出现选择菜单。如果提供连接名称，并正确验证，则会出现相关的
    [**编辑连接**]{.guilabel} 页面。
    :::
-   ::: para
    ``` synopsis
    nmtui connect connection-name
    ```
    如果未提供连接名称，则会出现选择菜单。如果提供连接名称并正确验证，则会激活相关连接。如命令无效，则会输出用法信息。
    :::
:::
:::
::: para
编写时，[**nmtui**]{.application} 不支持所有连接类型。特别是无法编辑使用
WPA Enterprise 的 VPN、Wi-Fi 连接，或无法编辑使用 `802.1X`{.systemitem}
的以太网连接。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Network_Config_Using_nmcli}1.6. 使用 NetworkManager 的 CLI（nmcli）进行网络配置 {.title}
:::
::: para
:::
::: para
[**NetworkManager**]{.application} 命令行工具 [**nmcli**]{.application}
提供使用命令行配置由 [**NetworkManager**]{.application}
所控制联网的方法。默认会与 [**NetworkManager**]{.application}
一同安装。如有必要，可根据 [第 1.4.1 节 "NetworkManager
守护进程"](#ch-Introduction_to_RHEL_Networking.html#sec-The_NetworkManager_Daemon){.xref}
中的说明验证 [**NetworkManager**]{.application} 的运行状态。
:::
::: para
解释其他命令行方法及图形用户界面前，会尽可能为每个任务包含一个使用
[**nmcli**]{.application} 工具的示例。请在 [第 2.3 节 "使用
NetworkManager 命令行工具
nmcli"](#ch-Configure_IP_Networking.html#sec-Using_the_NetworkManager_Command_Line_Tool_nmcli){.xref}
查看 [**nmcli**]{.application} 简介。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Network_Config_Using_CLI}1.7. 使用命令行界面（CLI）进行网络配置 {.title}
:::
::: para
:::
::: para
[**ip**]{.application} 程序的命令有时是 [iproute2]{.italics .italics}
中论述的 upstream 软件包名称，请参考 `man ip(8)`{.filename}
页面。该软件包在 Red Hat Enterprise Linux 7 中的名称是
[iproute]{.package}。必要时，可按照以下方法检查其版本后确认安装的
[**ip**]{.application} 程序：
:::
``` screen
~]$ ip -V
ip utility, iproute2-ss130716
```
::: para
可使用 [**ip**]{.application}
命令添加和删除连接到接口的地址和路由，同时使用
[**NetworkManager**]{.application} 在
[**nmcli**]{.application}、[**nmtui**]{.application}、[**control-center**]{.application}
及 D-Bus API 中保留并识别它们。
:::
::: para
注：[**ip**]{.application} 程序可代替 `ifconfig`{.command} 程序，因为
[net-tools]{.package} 软件包（提供 `ifconfig`{.command}）不支持
InfiniBand 地址。命令 `ip help`{.command} 可提供用法信息。可为 OBJECTS
提供具体帮助信息，例如：`ip link help`{.command} 和
`ip addr help`{.command}
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
重启后，该命令行中给出的 [**ip**]{.application}
命令不会保留。如果需要保留，则请使用配置文件
`ifcfg`{.filename}，或者在脚本中添加命令。
:::
:::
:::
::: para
使用命令行及配置文件完成每个人物的示例均在 [**nmtui**]{.application} 和
[**nmcli**]{.application} 示例之后，但在
[**NetworkManager**]{.application} 图形用户界面（即
[**control-center**]{.application} 和
[**nm-connection-editor**]{.application}）使用说明之前。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-NetworkManager_and_the_Network_Scripts}1.8. NetworkManager 及网络脚本 {.title}
:::
::: para
在之前的 Red Hat Enterprise Linux
发行本中，默认使用*网络脚本*配置联网。术语*网络脚本*通常是指
`/etc/init.d/network`{.filename}
及所有它调用的已安装脚本。用户提供的文件通常被视为配置文件，但也可以将其解读为对脚本的修改。
:::
::: para
虽然 [**NetworkManager**]{.application} 提供默认联网服务，但 Red Hat
开发人员仍致力于确保脚本和 [**NetworkManager**]{.application}
之间可相互协作。习惯于使用脚本的管理员仍可继续使用脚本。我们的预期是两个系统可同时存在，并可很好地合作。大多数之前发行本中的用户
shell 脚本仍可正常工作。但 Red Hat 建议您在使用前对其进行测试。
:::
### [⁠]{#ch-Introduction_to_RHEL_Networking.html#bh-Running_Network_Script}运行网络脚本
::: para
[**只**]{.bold .bold}使用 [**systemctl**]{.application}
程序运行脚本则会清除所有现有环境变量，并确保一个干净的执行模式。该命令的格式如下：
``` synopsis
systemctl start|stop|restart|status network
```
:::
::: para
[**请勿**]{.bold .bold}直接调用
`/etc/init.d/servicename start|stop|restart|status`{.command}``{=html}
运行任何服务。
:::
::: para
注：在 Red Hat Enterprise Linux 7 中，首先启动
[**NetworkManager**]{.application}，此时
`/etc/init.d/network`{.filename} 会使用
[**NetworkManager**]{.application} 检查，以避免破坏
[**NetworkManager**]{.application}
的连接。[**NetworkManager**]{.application} 主要在使用 sysconfig
配置文件的主要应用程序中使用，而 `/etc/init.d/network`{.filename}
主要是作为备用程序在此要程序中使用。
:::
::: para
`/etc/init.d/network`{.filename}
脚本不是事件驱动，它可采用以下方式之一运行：
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    手动（运行 `systemctl`{.command} `start|stop|restart`{.command}
    network``{=html} 命令之一），
    :::
2.  ::: para
    如果启用网络服务，则会在引导和关机时运行（`systemctl enable network`{.command}
    命令的结果）。
    :::
:::
这是一个手动过程，不会与任何引导后发生的事件互动。用户还可以手动调用
`ifup`{.filename} 和 `ifdown`{.filename} 脚本。
:::
::: para
:::
### [⁠]{#ch-Introduction_to_RHEL_Networking.html#bh-Custom_Commands_and_the_Network_Scripts}自定义命令及网络脚本
::: para
只有在那些设备由 `/etc/init.d/network`{.systemitem}
服务控制时方可执行脚本 `/sbin/ifup-local`{.filename}
中的自定义命令（`ifdown-pre-local`{.filename} 和
`ifdown-local`{.filename}）。如果修改 initscripts 本身（比如
`/etc/sysconfig/network-scripts/ifup-eth`{.filename}），那么
[initscripts]{.package} 软件包更新会覆盖那些修改。因此建议避免直接修改
initscripts，而是使用 `/sbin/if*local`{.filename}
脚本，以便在更新软件包后仍可保留您所做的更改。Initscripts
只检查是否有相关的
`/sbin/if*local`{.filename}，并在该文件存在时运行该文件。Initscripts
不会在 `/sbin/if*local`{.filename}
脚本中添加任何内容，[initscripts]{.package}
RPM（或任意软件包）也不会拥有或修改那些文件。
:::
::: para
网络连接启动或断开时，可采用某些方法执行自定义任务，旧的网络脚本及
[**NetworkManager**]{.application} 均有此功能。启用
[**NetworkManager**]{.application} 后，`ifup`{.filename} 和
`ifdown`{.filename} 脚本会询问
[**NetworkManager**]{.application}，是否由
[**NetworkManager**]{.application} 管理在 `ifcfg`{.filename} 文件的
["[DEVICE=]{.quote}"]{.quote} 行中发现的接口。如果是
[**NetworkManager**]{.application}
管理该设备，且该设备未处于连接状态，则 `ifup`{.filename} 会要求
[**NetworkManager**]{.application} 启动该连接。
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    如果该设备由 [**NetworkManager**]{.application}
    管理，且它[**已经**]{.bold .bold}处于连接状态，则不需要任何操作。
    :::
-   ::: para
    如果该设备不是由 [**NetworkManager**]{.application}
    管理，那么该脚本会使用旧的非 [**NetworkManager**]{.application}
    机制（即出现 [**NetworkManager**]{.application}
    之前使用的方法）启动该连接。