4/2
TOPAS+
yes
160
2/1
key indist.
KCI,
reﬂection
Gap DH
(interactive)
RSA
generaliz.
of CBDHI
(non-inter.)
generaliz.
of CBDHI,
SDH oracle
(interactive)
security assumptions
full PFS ephemeral
secret key
reveal
–
extract.
extract.
extract.
extract.
–
–
–
Table 1: Comparison of 2-pass key exchange protocols for 80-bit
security.
APPLICATION SCENARIOS. Our protocols are interesting for com-
munication networks where the transmission of data is very expen-
sive. Important examples are satellite-based communication net-
works and communication over low-battery powered wireless (sen-
sor) networks. Since our protocols are identity-based they ensure
that the optimal bound of 160 bits per key exchange message is
always met.
SECURITY MODEL. To prove security of our protocols we extend
and strengthen the security model of mOT [18]. Indistinguisha-
bility of session keys from random keys is shown in a variant of
the Canetti-Krawczyk (CK) model [9] that is restricted to two mes-
sage protocols. This variant was ﬁrst introduced for the analysis
of HMQV [20]. The mOT model has further adapted the HMQV
model to the identity-based setting. Our model captures security
against reﬂection attacks, key compromise attacks, and forward se-
crecy. There are two noteworthy ways in which our model differs
from [18]. The ﬁrst is that we provide an explicit Register query to
register new users. The second is that we introduce a strengthened
deﬁnition of weak PFS called enhanced weak PFS which allows
3We note that whenever the communication partners exchange cer-
tiﬁcates in HMQV to authenticate their public keys this not only
affects the message size but also the key derivation. In particular,
the time for key derivation is increased by the time for the addi-
tional certiﬁcate veriﬁcation. We stress that (long-lived) certiﬁcates
only have to be transferred and checked once per communication
partner.
the adversary to obtain the secret keys of all parties and the KGC
at protocol start-up, i.e. even before the session key is computed.
We note that like the mOT protocol, our protocols require that in-
termediate values computed in the generation of the protocol mes-
sages and the derivation of the session key cannot be revealed by
the adversary. Formally, we therefore do not consider state reveal
attacks. Technically, this is enforced by requiring that the interme-
diate values remain in the same protected memory as the long-term
key. This is for example similar to DSA signatures, where the ran-
dom exponent used in the signing procedure must not be revealed
to the adversary. Although this seems like a severe restriction, it is,
in some sense, the best we can hope for when using two-message
protocols. In Appendix E we show that any protocol which allows
the adversary to reveal ephemeral keys, cannot provide full PFS.
Related Work
It is well-known how to design 2-message protocols that are secure
against active adversaries. One way to do this is to add to each
(Difﬁe-Hellman) message a signature that authenticates the origi-
nator of that message and protects its integrity [23].4 This approach
has been generalized in [12, 4]. Another solution is to additionally
exchange two encrypted nonces that when combined give rise to a
symmetric key that is used to protect the integrity of the remaining
messages (as used in SKEME [19]). However, all these methods
require to send, besides the Difﬁe-Hellman shares, additional infor-
mation. For example, consider the most efﬁcient signature scheme
that is due to Boneh, Lynn, and Shacham (BLS) where each signa-
ture consists of roughly 160 bits. Using the signature-based method
with BLS signatures, each party has to exchange considerably more
than the optimal amount of bits, namely the key exchange messages
plus the size of the signatures (which already account for 160 bits).
This does not even consider the costs for certiﬁcates that are re-
quired when two parties communicate for the ﬁrst time. At the
same time, since these protocols use digital signatures they cannot
provide the strong form of deniability given in [13]. Moreover, we
remark that when using any two-message protocol that provides
full PFS we also must have that the corresponding security model
does not allow to reveal the ephemeral secrets as formally shown
in Appendix E. So, as the protocols in [12, 4] allow the adversary
to reveal ephemeral keys, they cannot be shown to provide full PFS
in the strong sense of [18].
Another interesting approach is to make practical 2-message pro-
tocols like MQV and HMQV identity-based, while keeping their
overall efﬁciency. Most noteworthy, Fiore and Gennaro presented
a protocol that features (computational) performance comparable
to MQV [15]. However, since it is identity-based there is no need
for transmitting certiﬁcates as in the original MQV protocol. There
are two drawbacks of their protocol. First, each messages consists
of two values, thus exceeding the optimum of 160 bits. Second,
their protocol does only provide weak PFS, not full PFS. Thus it
lacks protection against fully active adversaries. As an advantage,
their protocol offers very high computational efﬁciency.
Identity-based vs. PKI-based Protocols
Finally, we would like to comment on the fact that our protocol is
identity-based. Our main target is to obtain as short messages as
possible while providing high security guarantees. It is interesting
to note that when using protocols that provide enhanced weak PFS,
the introduction of a KGC does not increase the vulnerability to
long-term attacks as compared to relying on classical certiﬁcation
4Obviously, this solution does not preserve the strong deniability
property of the original unauthenticated Difﬁe-Hellman protocol.
1226authorities (CAs). As for authentication, any KGC can of course
impersonate its users as it can compute their secret keys. However,
this is not different from classical CAs that can always create a cer-
tiﬁcate that binds the identity of the user to a public key chosen by
the CA (such that it has access to the corresponding secret key).
Now, when it comes to the secrecy of keys of past sessions where
the adversary did not actively intervene, our notion of enhanced
weak PFS guarantees that even with the help of all user secret keys
and even that of the KGC no adversary can obtain the session key.
This is exactly what is guaranteed by weak PFS for PKI-based pro-
tocols. Indeed we can show that similar to mOT our identity-based
protocol can easily be turned into a PKI-based one. Of course we
then lose the advantage that users need to exchange certiﬁcates be-
fore communicating for the ﬁrst time. In Appendix A we brieﬂy
sketch this transformation. We leave a formal security analysis of
this protocol variant for future work.
2. PRELIMINARIES
Let κ be the security parameter. Let G1 and G2 be groups of
prime order p with generators g1 and g2 such that log2(p) be a
polynomial in κ. Let e : G1 × G2 → GT be a non-degenerate
bilinear pairing. We call G = (p, g1, g2, e) a bilinear group. We
will base our protocol on asymmetric bilinear groups of prime or-
der where no isomorphism is known between G2 and G1 (Type-3
pairings) [17]. When using asymmetric bilinear groups, we assume
that log2(p) ≈ 160 (effectively having log2(p) = 2κ) and that
elements of G1 can be implemented with roughly 160 bits for a
security level of approximately 80 bits [7, 3].
2.1 Security Assumptions
In the following, we will present the complexity assumptions
that our security analysis of our ﬁrst protocol relies on. Our main
proof will assume the hardness of a generalization of the Computa-
tional Bilinear Difﬁe-Hellman Inversion problem. In Appendix C
we will show that all our assumptions are covered by the Uber-
assumption introduced in [8] and thus hold in the generic (bilinear)
group model. For the proof of full PFS security we will rely on
two new “knowledge-type” (extraction-type) assumptions. We will
give a brief motivation for these new assumptions.
(k, l)-COMPUTATIONAL BILINEAR DIFFIE-HELLMAN INVER-
SION ((k, l)-CBDHI) ASSUMPTION. Let k = k(κ) and l = l(κ)
be polynomials. Assume G = (p, g1, g2, e) is a bilinear group.
The (k, l)-Computational Bilinear Difﬁe-Hellman Inversion prob-
2 for some
lem is, given G and gz
random z ∈ Zp to compute e(g1, g2)1/z. This is a generalization
of the Computational Bilinear Difﬁe-Hellman Inversion problem
introduced by Boneh-Boyen in [5] where k is ﬁxed to k = 2.
1 , . . . , gzk
2 , . . . , gzl
2 , gz2
1 , gz2
1 , gz
DEFINITION 1. We say that attacker A breaks the (k, l)-CBDHI
assumption if A succeeds in solving the (k, l)-Computational Bilin-
ear Difﬁe-Hellman Inversion problem (where the probability is over
the random coins of A and the random choices for G and z). We
say that the (k, l)-CBDHI assumption holds if no PPT attacker A
can break the (k, l)-CBDHI problem.
Looking ahead, in our proof of KCI security we reduce security to
the (2, 3)-CBDHI assumption while in our proof of full PFS secu-
rity we rely on the (3, 3)-CBDHI assumption.
(k, l)-GENERALIZED COMPUTATIONAL BILINEAR DIFFIE-HELL-
MAN INVERSION ((k, l)-GCBDHI) ASSUMPTION. Let again k =
k(κ) and l = l(κ) be polynomials in κ and G = (p, g1, g2, e)
be a bilinear group. The (k, l)-Generalized Computational Bilinear
Difﬁe-Hellman Inversion problem is, given G, random w ∈ Zp,
2 for some random z ∈ Zp to
1 , gz2
gz
compute e(g1, g2)
1 , and gz
z2 .
1 , . . . , gzk
2 , . . . , gzl
2 , gz2
z+w
DEFINITION 2. Adversary A breaks the (k, l)-GCBDHI assump-
tion if A succeeds in solving the (k, l)-Generalized Computational
Bilinear Difﬁe-Hellman Inversion problem (where the probability
is over the random coins of A and the random choices for G, z and
w). We say that the (k, l)-GCBDHI assumption holds if no PPT
attacker A can break the (k, l)-GCBDHI problem.
We will rely on this assumption for k = 2 and l = 3 to prove se-
curity of our protocol under reﬂection attacks where the adversary
is also allowed to make parties communicate with themselves. We
stress that since k, l are constant, the challenge size of both of our
assumptions does not grow with the security parameter (and so they
do not constitute “q-type” assumptions).
COMPUTATIONAL BILINEAR DIFFIE-HELLMAN (CBDH) AS-
SUMPTION IN G1. Assume G = (p, g1, g2, e) is a bilinear group.
The CBDH problem is, given G and gx
1 to compute e(g1, g2)xy.
1 , gy
DEFINITION 3. We say that attacker A breaks the CBDH as-
sumption if A succeeds in solving the CBDH problem (where the
probability is over the random coins of A and the random choices
for G and x, y). We say that the CBDH assumption holds if no PPT
attacker A can break the CBDH problem.
Later we will use this assumption to prove that our protocol guaran-
tees weak PFS. Observe that the CBDH assumption implies that the
classical Computational Difﬁe-Hellman assumption holds in G1.
KNOWLEDGE OF (PAIRING) PRE-IMAGE ASSUMPTION (KPA).
Recall the knowledge of exponent assumption for Difﬁe-Hellman
pairs. It states that for any adversary A which, given group G (of
prime-order p) and two generators X, Y ∈ G outputs X(cid:48), Y (cid:48) ∈ G
such that there is s ∈ Zp with X(cid:48) = X s and Y (cid:48) = Y s, there ex-
ists another adversary A(cid:48) which given the same inputs additionally
outputs the exponent s. However, when working in the target group
GT of a bilinear group this assumption can be false. For example,
assume X = e(A, g2) and Y = e(B, g2) for some A, B ∈ G1.
Then, an adversary that is given A, B ∈ G1 and g2 ∈ G2 can sim-
2 ∈ G2
ply output X(cid:48) = e(A, g(cid:48)
without knowing the discrete logarithm s between X(cid:48) and Y (cid:48).
The following assumption states that although the adversary may
not know the discrete logarithm s between X(cid:48), Y (cid:48) it must at least
know a suitable g(cid:48)
2. Observe, that if the adversary does indeed know
the discrete logarithm s it can easily compute g(cid:48)
2. In
some sense our new assumption can be viewed as a variant of the
knowledge of exponent assumption (which in its original form is
related to the problem of inverting modular exponentiations). How-
ever, it is rather a “knowledge of group element” assumption that
is related to the difﬁculty of inverting bilinear pairings.
ment played between challenger C and adversary A:
Formally, security is deﬁned via the following security experi-
2) and Y (cid:48) = e(B, g(cid:48)
2) for some g(cid:48)
2 as g(cid:48)
2 = gs
1. C sends a bilinear group G = (p, g1, g2, e) to A together
with A, B ∈ G1. Let X = e(A, g2) and Y = e(B, g2).
2. A outputs X(cid:48), Y (cid:48) (cid:54)= 1T .
We say that A wins if there is some t ∈ Zp with X(cid:48) = X t and
Y (cid:48) = Y t.
1227DEFINITION 4. We say that
the Knowledge of Pairing
Pre-Image assumption (KPA) holds if for every PPT algorithm A
in the above security game there exists another PPT algorithm A’
that given the same inputs and random coins as A behaves exactly
like A while additionally outputting g(cid:48)
2 besides X(cid:48), Y (cid:48) such
that X(cid:48) = e(A, g(cid:48)
2) and Y (cid:48) = e(B, g(cid:48)
2 = gt
2) whenever A wins.
MODIFIED KNOWLEDGE OF CO-CDH ASSUMPTION. The next
security assumption we rely on is based on the following problem
in bilinear group G = (p, g1, g2, e). Assume we provide attacker
A with A ∈ G1 (such that A = ga
1 for some a ∈ Zp) and let
X = e(A, g2). Intuitively, the task of A is to compute W such that
X = e(A, g2) = e(g1, W ) (i.e. W = ga
2 ). This is equivalent to
solving the Co-CDH assumption [6] in G with challenge A, g2, g1.
However, in our security experiment we will also give A access to a
Co-CDH oracle. To this end A may after receiving A specify Y ∈
GT . As a response A obtains U ∈ G2 such that XY = e(g1, U ).
The attacker is successful if it can now compute W . We observe
that by appropriate choices of Y , A can easily compute W .
- One way to do this is to have Y = X i for some i (cid:54)= −1. We
then have that XY = X i+1 = e(g1, U ). Therefore, W can
simply be computed from U as W = U 1/i+1.
- Another way is to set Y = e(g1, T ) for some T ∈ G2 known
to A. We then get that XY = X · e(g1, T ) = e(g1, U )
which is equivalent to X = e(g1, U/T ). Thus W = U/T is
a correct solution to the problem.
Basically, our new assumption states that every successful adver-
sary must follow one of these strategies – or a combination of both.
Intuitively this should still hold if the adversary is, besides U, also
provided with A(cid:48) = A1/z ∈ G2 (such that e(A, g2) = e(A(cid:48), gz
2 ))
since knowing the z-th root of A for some otherwise unrelated z