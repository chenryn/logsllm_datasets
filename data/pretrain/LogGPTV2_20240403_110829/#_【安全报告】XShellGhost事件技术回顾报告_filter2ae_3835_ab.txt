7\. 主流程首先根据当前时间生成DGA域名 ，当前8月时间为nylalobghyhirgh.com
部分年份-月份生成的域名对应关系如下：
8\. 接着根据获取的当前网络、hostName 、DomainName 、UserNmae用特定算法生成字符串构造DNS_TXT数据包并向8.8.8.8
| 8.8.4.4 | 4.2.2.1 | 4.2.2.2 | 当前时间DGA域名
发送，然后等待服务器返回数据（解密Shellcode3的key）。此外，通过对12个域名分析NS解析情况后发现，
7月开始被注册解析到qhoster.net的NS Server上，所以猜测这个恶意代码事件至少是从7月开始的。
9\.
当接收到服务器的数据包后设置注册表Data数据，然后解密Shellcode3，Shellcode3依然是一个loader,该loader加载Root模块，其loader功能同上述的细节相同。
**4.Module Root**
Root模块是后门的关键部分，为其它模块提供了基本框架和互相调用的API，其中会加载五个模块分别为：Plugin、Online、Config、Install、DNS。
将自身函数表地址共享给其他模块使用，主要这些API主要涉及到一些模块加载、加解密等功能。
搜索5个模块Plugin、Online、Config、Install、DNS中的Install模块，还是可以通过跟上文一样，使用同样的Loader加载。
具体流程上：
1\. 解密后可以一个个dump下来
2\. 尝试调用Install模块(0x67)：
**5.Module Install**
Install负责把RootModule的Code注入到傀儡进程中和Online模块的初始化。
相关细节操作：
1\. 提升自身进程相关权限
2\. 调用config模块读取配置信息
3\.
根据不一样的配置信息走不一样的流程，如果都不等于的话将会注入winlogon.exe或者运行scvhost.exe并注入Root模块，启动执行Online模块。
**6.Module Config**
Config模块主要负责配置信息的存储和读取功能，当模块初始化函数传入的参数为100时，会保存一些默认配置信息到磁盘中，同时Config模块也提供了将配置信息发送到CC服务器的接口。
当插件入口函数参数 a2==100时会执行加密配置信息写入到磁盘，具体存储位置根据磁盘的VolumeSerialNumber生成。
如%ALLUSERSPROFILE%XXXXXXXXXXXXXX(其中X由运算生成)，存储的内容如下：
**7.Module Plugin**
Plugin模块为后门提供插件管理功能，包括插件的加载、卸载、添加、删除操作，管理功能完成后会通过调用Online的0x24项函数完成回调，向服务器返回操作结果。模块的辅助功能为其它插件提供注册表操作。
具体行为上：
1\. 创建线程调用config模块的第三个导出函数，遍历注册表项SOFTWAREMicrosoft。
2\. 使用RegNotifyChangeKeyValue函数监测插件注册表键值是否被更改，被更改后则解密并加载模块。
**8.Module DNS**
DNS模块的主要功能是使用DNS协议处理CC通信过程。DNS数据包有三种类型，分别代表上线，数据和结束。
**0类(上线)：**
**1类(数据)：**
**3类(结束)：**
此外，
1\. 该模块会调用GetAdaptersAddresses获取适配器的DNS，最多收集0x10个DNS。
2\. 在模块入口函数100编号对应的初始化过程中，模块会开启线程等待其他插件数据到来，当收到数据时将数据通过DNS发送到CC服务器。
**9.Module Online**
Online模块是本次攻击的网络通信管理模块。该模块会读取配置文件，收集系统信息，并且能够调用DNS，HTTP，SSL等模块通信，不过在代码中暂时只有前面所述的DNS模块。
收集并发送的系统信息包括注册表中的处理器信息，gethostbyname()获取的host信息，GlobalMemoryStatus()获取的内存信息，GetSystemTime()获取的时间信息，GetDiskFreeSpaceEx()获取的磁盘空间信息，EnumDisplaySettingsW()获取的显示器信息，GetSystemDefaultLCID()获取的系统语言信息，RtlGetVersion()获取的系统版本信息，GetSystemMetrics()获取的分辨率等信息，GetNetworkParams()获取的网络信息，GetNativeSystemInfo()获取的SYSTEM_INFO信息，LookupAccountSidW()获取的用户名信息等等。
0x16E1337函数首先读取配置文件，然后每隔1秒调用0x16E1995函数，0x16E1995函数还会调用0x16E1E9A函数，如果0x16E1E9A函数返回20000则函数逻辑彻底结束。
在0x16E1995函数中调用InternetCrackUrlA分解配置信息中的URL(www.noteped.com)并根据字符串前面的协议类型采取不同的连接方式，每个协议对应一个ID，同时也是协议插件的ID，目前取得的样本中使用的DNS协议对应ID为203。其它几个网络模块(TCP、HTTP、UDP、HTTPS、SSL)虽然在代码当中有所体现，但是在shellcode当中尚未主动运行。
此外，还调用了0x16E2D3F函数，试图调用Plugin模块设置注册表项SoftwareMicrosoftWindowsCurrentVersionInternet
SettingsSecureProtocols以修改IE浏览器的安全设置。
还会根据指定的参数使用HTTP-GETHTTPS-GETFTP来下载文件。
****
**0x05 修复建议**
NetSarang官方已经在以下几个软件的最新Builds版本中完成了安全修复。我们建议受影响的用户，及时更新到对应的修复版本：
**Xmanager Enterprise Build 1236**
**Xmanager Build 1049**
**Xshell Build 1326**
**Xftp Build 1222**
**Xlpd Build 1224**
****
**0x06 总结**
XShellGhost事件暗示着信息安全领域中又一个“潘多拉魔盒”已经被打开了，它表明了安全人员长期以来担心的基础软件、供应链被攻击后带来的大范围影响已经真实的发生了。
360CERT在实际分析跟踪中，除了看到XShellGhost中所使用的一系列精巧攻击技术外，更重要是看到了背后攻击组织在实施攻击道路上的决心。
在未来，安全人员担心的种种安全风险会不可避免的慢慢出现，但同时我们也在慢慢的看到，一方面基础软件厂商正在以积极的态度通过联合安全厂商等途径来加强和解决自身的产品安全，另一方面安全厂商之间也已经在威胁情报和安全数据等方面方面进行更为明确化，纵深化的整合。
****
**0x07 时间线**
2017-08-07 NetSarang官方发布安全更新
2017-08-14 360CERT发布《nssock2.dll恶意代码预警》
2017-08-16 360CERT发布《NetSarang 关于nssock2.dll恶意代码事件声明》
2017-09-07 360CERT完成《XshellGhost事件技术回顾报告》
****
**0x08 参考**
1.360天眼实验室：Xshell被植入后门代码事件分析报告（完整版）
2.360追日团队：Xshellghost技术分析——入侵感染供应链软件的大规模定向攻击
3.ShadowPad in corporate networks
4.Security Exploit in July 18, 2017 Build
5.ShadowPad: popular server management software hit insupply chain attack
6.nssock2.dll恶意代码预警|影响Xshell,Xmanager等多款产品
7.NetSarang 关于nssock2.dll恶意代码事件声明