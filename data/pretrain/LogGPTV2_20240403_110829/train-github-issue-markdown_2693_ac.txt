    --   Build type            : Release
    --   Compile definitions   : NDEBUG;ONNX_ML=1
    --   CMAKE_PREFIX_PATH     : /usr/lib/python3/dist-packages
    --   CMAKE_INSTALL_PREFIX  : /home/luke/Builds/pytorch/torch
    --   CMAKE_MODULE_PATH     : /opt/rocm/hip/cmake;/home/luke/Builds/pytorch/cmake/Modules
    -- 
    --   ONNX version          : 1.4.1
    --   ONNX NAMESPACE        : onnx_torch
    --   ONNX_BUILD_TESTS      : OFF
    --   ONNX_BUILD_BENCHMARKS : OFF
    --   ONNX_USE_LITE_PROTO   : OFF
    --   ONNXIFI_DUMMY_BACKEND : OFF
    -- 
    --   Protobuf compiler     : 
    --   Protobuf includes     : 
    --   Protobuf libraries    : 
    --   BUILD_ONNX_PYTHON     : OFF
    -- Could not find CUDA with FP16 support, compiling without torch.CudaHalfTensor
    -- Removing -DNDEBUG from compile flags
    -- MAGMA not found. Compiling without MAGMA support
    -- Could not find hardware support for NEON on this machine.
    -- No OMAP3 processor on this machine.
    -- No OMAP4 processor on this machine.
    -- Looking for cpuid.h
    -- Looking for cpuid.h - found
    -- Performing Test HAVE_GCC_GET_CPUID
    -- Performing Test HAVE_GCC_GET_CPUID - Success
    -- Performing Test NO_GCC_EBX_FPIC_BUG
    -- Performing Test NO_GCC_EBX_FPIC_BUG - Success
    -- Performing Test C_HAS_AVX_1
    -- Performing Test C_HAS_AVX_1 - Failed
    -- Performing Test C_HAS_AVX_2
    -- Performing Test C_HAS_AVX_2 - Success
    -- Performing Test C_HAS_AVX2_1
    -- Performing Test C_HAS_AVX2_1 - Failed
    -- Performing Test C_HAS_AVX2_2
    -- Performing Test C_HAS_AVX2_2 - Success
    -- Performing Test CXX_HAS_AVX_1
    -- Performing Test CXX_HAS_AVX_1 - Failed
    -- Performing Test CXX_HAS_AVX_2
    -- Performing Test CXX_HAS_AVX_2 - Success
    -- Performing Test CXX_HAS_AVX2_1
    -- Performing Test CXX_HAS_AVX2_1 - Failed
    -- Performing Test CXX_HAS_AVX2_2
    -- Performing Test CXX_HAS_AVX2_2 - Success
    -- AVX compiler support found
    -- AVX2 compiler support found
    -- Looking for cheev_
    -- Looking for cheev_ - found
    -- Found a library with LAPACK API (open).
    disabling CUDA because NOT USE_CUDA is set
    -- CuDNN not found. Compiling without CuDNN support
    -- MKLDNN_THREADING = 
    CMake Warning (dev) at third_party/ideep/mkl-dnn/cmake/options.cmake:33 (option):
      Policy CMP0077 is not set: option() honors normal variables.  Run "cmake
      --help-policy CMP0077" for policy details.  Use the cmake_policy command to
      set the policy and suppress this warning.
      For compatibility with older versions of CMake, option is clearing the
      normal variable 'MKLDNN_ENABLE_CONCURRENT_EXEC'.
    Call Stack (most recent call first):
      third_party/ideep/mkl-dnn/cmake/utils.cmake:24 (include)
      third_party/ideep/mkl-dnn/CMakeLists.txt:74 (include)
    This warning is for project developers.  Use -Wno-dev to suppress it.
    -- This is a product build
    -- Detecting Intel(R) MKL: trying mklml_intel
    -- Intel(R) MKL: include /home/luke/Builds/pytorch/third_party/ideep/mkl-dnn/external/mklml_lnx_2019.0.3.20190220/include
    -- Intel(R) MKL: lib /home/luke/Builds/pytorch/third_party/ideep/mkl-dnn/external/mklml_lnx_2019.0.3.20190220/lib/libmklml_intel.so
    -- Found OpenMP_C: -fopenmp  
    -- Found OpenMP_CXX: -fopenmp  
    -- Found OpenMP: TRUE   
    -- OpenMP lib: /home/luke/Builds/pytorch/third_party/ideep/mkl-dnn/external/mklml_lnx_2019.0.3.20190220/lib/libiomp5.so
    -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) 
    -- VTune profiling environment is unset
    CMake Warning (dev) at third_party/ideep/mkl-dnn/cmake/utils.cmake:120 (target_link_libraries):
      Policy CMP0023 is not set: Plain and keyword target_link_libraries
      signatures cannot be mixed.  Run "cmake --help-policy CMP0023" for policy
      details.  Use the cmake_policy command to set the policy and suppress this
      warning.
      The plain signature for target_link_libraries has already been used with
      the target "mkldnn".  All uses of target_link_libraries with a target
      should be either all-keyword or all-plain.
      The uses of the plain signature are here:
       * third_party/ideep/mkl-dnn/cmake/utils.cmake:111 (target_link_libraries)
    Call Stack (most recent call first):
      third_party/ideep/mkl-dnn/src/CMakeLists.txt:108 (target_link_libraries_install)
    This warning is for project developers.  Use -Wno-dev to suppress it.
    -- Found MKL-DNN: TRUE
    -- Looking for clock_gettime in rt
    -- Looking for clock_gettime in rt - found
    -- Looking for mmap
    -- Looking for mmap - found
    -- Looking for shm_open
    -- Looking for shm_open - found
    -- Looking for shm_unlink
    -- Looking for shm_unlink - found
    -- Looking for malloc_usable_size
    -- Looking for malloc_usable_size - found
    -- Performing Test C_HAS_THREAD
    -- Performing Test C_HAS_THREAD - Success
    -- GCC 8.3.0: Adding gcc and gcc_s libs to link line
    -- NUMA paths:
    -- /usr/include
    -- /usr/lib/x86_64-linux-gnu/libnuma.so
    -- Performing Test COMPILER_SUPPORTS_NO_AVX256_SPLIT
    -- Performing Test COMPILER_SUPPORTS_NO_AVX256_SPLIT - Success
    HIP VERSION: 1.5.19284
    ***** Library versions from dpkg *****
    rocm-dev VERSION: 2.7.22
    rocm-device-libs VERSION: 0.0.1
    rocm-libs VERSION: 2.7.22
    hsakmt-roct VERSION: 1.0.9-194-gbcfdf35
    hsakmt-roct-dev VERSION: 1.0.9-194-gbcfdf35
    hsa-ext-rocr-dev VERSION: 1.1.9-99-g835b876
    hsa-rocr-dev VERSION: 1.1.9-99-g835b876
    hcc VERSION: 2.7.19315
    hip_base VERSION: 1.5.19284
    hip_hcc VERSION: 1.5.19284
    ***** Library versions from cmake find_package *****
    rocrand VERSION: 2.7.0.641-rocm-rel-2.7-22-dd953aa
    hiprand VERSION: 2.7.0.641-rocm-rel-2.7-22-dd953aa
    -- Found HIP: /opt/rocm (found version "1.5.19284") 
    rocblas VERSION: 2.4.0.1471-rocm-rel-2.7-22-1ac2271
    miopen VERSION: 2.0.1.7405-rocm-rel-2.7-22-4e39a83
    rocfft VERSION: 0.9.5.697-rocm-rel-2.7-22-ed7760e
    hipsparse VERSION: 1.0.9.168-rocm-rel-2.7-22-5fea400
    ROCm is enabled.
    -- Check size of long double
    -- Check size of long double - done
    -- Performing Test COMPILER_SUPPORTS_LONG_DOUBLE
    -- Performing Test COMPILER_SUPPORTS_LONG_DOUBLE - Success
    -- Performing Test COMPILER_SUPPORTS_FLOAT128
    -- Performing Test COMPILER_SUPPORTS_FLOAT128 - Success
    -- Performing Test COMPILER_SUPPORTS_SSE2
    -- Performing Test COMPILER_SUPPORTS_SSE2 - Success
    -- Performing Test COMPILER_SUPPORTS_SSE4
    -- Performing Test COMPILER_SUPPORTS_SSE4 - Success
    -- Performing Test COMPILER_SUPPORTS_AVX
    -- Performing Test COMPILER_SUPPORTS_AVX - Success
    -- Performing Test COMPILER_SUPPORTS_FMA4
    -- Performing Test COMPILER_SUPPORTS_FMA4 - Success
    -- Performing Test COMPILER_SUPPORTS_AVX2
    -- Performing Test COMPILER_SUPPORTS_AVX2 - Success
    -- Performing Test COMPILER_SUPPORTS_SVE
    -- Performing Test COMPILER_SUPPORTS_SVE - Failed
    -- Performing Test COMPILER_SUPPORTS_AVX512F
    -- Performing Test COMPILER_SUPPORTS_AVX512F - Success
    -- Performing Test COMPILER_SUPPORTS_OPENMP
    -- Performing Test COMPILER_SUPPORTS_OPENMP - Success
    -- Performing Test COMPILER_SUPPORTS_WEAK_ALIASES
    -- Performing Test COMPILER_SUPPORTS_WEAK_ALIASES - Success
    -- Performing Test COMPILER_SUPPORTS_BUILTIN_MATH
    -- Performing Test COMPILER_SUPPORTS_BUILTIN_MATH - Success
    -- Configuring build for SLEEF-v3.2
       Target system: Linux-5.0.0-25-generic
       Target processor: x86_64
       Host system: Linux-5.0.0-25-generic
       Host processor: x86_64
       Detected C compiler: GNU @ /usr/bin/cc
    -- Using option `-Wall -Wno-unused -Wno-attributes -Wno-unused-result -Wno-psabi -ffp-contract=off -fno-math-errno -fno-trapping-math` to compile libsleef
    -- Building shared libs : OFF
    -- MPFR : LIB_MPFR-NOTFOUND
    -- GMP : LIBGMP-NOTFOUND
    -- RUNNING_ON_TRAVIS : 0
    -- COMPILER_SUPPORTS_OPENMP : 1
    -- NCCL operators skipped due to no CUDA support
    -- Including IDEEP operators
    -- Including image processing operators
    -- Excluding video processing operators due to no opencv
    -- Include Observer library
    -- /usr/bin/c++ /home/luke/Builds/pytorch/caffe2/../torch/abi-check.cpp -o /home/luke/Builds/pytorch/build/abi-check
    -- Determined _GLIBCXX_USE_CXX11_ABI=1
    -- MPI_INCLUDE_PATH: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi;/usr/lib/x86_64-linux-gnu/openmpi/include
    -- MPI_LIBRARIES: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so
    -- MPIEXEC: /usr/bin/mpiexec
    -- pytorch is compiling with OpenMP. 
    OpenMP CXX_FLAGS: -fopenmp. 