### Irregular Interception of User Traffic in an Impersonal Manner

#### Table 3: Examples of Fake Certificate Authorities
| Subject Common Name | # Hidden Root Certificates | # Connections | # FQDNs |
|----------------------|----------------------------|---------------|----------|
| Certum Trusted NetWork CA 2 | 2 | 1,419 | 136,196 |
| VeriSign Class 3 Public Primary Certification Authority - G4 | 1 | 135,258 | 21.20M |
| GlobalSign Root CA | 74,555 | 7.61M | 2.85M |
| GlobalSignature Certificates CA 2 | 47,347 | 1.03M | 0.65M |
| GlobalSign Root CA R3 | 30,316 | 210 | 6,023 |
| DigiCert Baltimore Root 2 | 158,54M | 254,414 | 1,137,121 |

**Local Software:** 24 of the top 100 certificate groups are held by local software, including 11 packet filterers, 10 Proxies/VPNs, 2 security software, and 1 parental control application. These hidden root certificates are imported during software installation for purposes such as virus detection, download acceleration, and ad blocking. Since we did not find direct evidence of malware in this category, it is likely that the software and its root certificate were manually installed by users for benign reasons.

In previous studies on HTTPS interception, benign local software accounted for the most intercepted traffic. For example, [23] reports that anti-virus software performs 53% of all HTTPS interception, and [56] reports that firewalls account for 69%. However, in our dataset, the ratio of intercepted connections by local software is only 3.58%. This discrepancy may be due to the fact that local software in our study may not have identifiable subject information, leading to their classification as unknown. Additionally, our passive observation approach may better reflect natural phenomena, indicating that "user-informed" or "regulated" interceptions (e.g., security software and well-identified agents) may not be as prevalent as expected.

**Other Unknown Owners:** From manual subject classification, we could not identify 15 certificate groups, which hold a total of 207K (17.6%) hidden root certificates. Most of these use neutral keywords to create certificate subject names, such as "root," "trust," "tech," and "ca." We did not find any search results for their public keys in search engines or threat intelligence databases.

### Impact on Web Hosts and Web Clients

**Finding 4.6:** On average, we observed 1.48 million HTTPS traffic from 300 thousand clients associated with hidden root CAs per day, demonstrating the broad impact on web clients.

**Figure 7:** Daily count of hidden root certificates captured and associated logs of HTTPS web visits.

**Scale of Web Visits:** Figure 7 shows the daily count of hidden root certificates witnessed by clients and their associated web visits. On average, 1.48 million secure connections use certificate chains that link to a hidden root. During the 5-month data collection period, 222 million certificate chains linked to a hidden root were recorded, accounting for 0.54% of all web traffic. Up to 96.4% of traffic did not receive any verification errors from local operating systems. Only 1.5% received AUTHORITY_INVALID errors, and the remaining 2.1% of certificate chains were invalid due to other issues (e.g., DATE_INVALID, meaning the certificate was not within its validity period). This result aligns with our earlier findings that hidden root certificates are widely imported by web clients (Findings 4.1 and 4.5).

**Hosts Signed by Hidden Roots:** As presented in Table 1, a total of 1.3 million fully-qualified domain names (FQDNs) were found to be issued certificates from hidden roots during the data collection period. Further, we examined the popularity of these domains using Alexa Top Rank [41]. As shown in Table 4, 815K (61.11%) of FQDNs are within the top 1M rank. Additionally, there are 519K (38.89%) long-tail domains (not ranked within the top 1M) affected by hidden roots. Besides hosts in the subject fields, certificates are also valid for entities in subjectAlternativeName (SAN) extensions. By extracting the two most common formats, dnsName and ipAddress from SAN extensions in leaf certificates, we identified that 1.54 million FQDNs under 792K Second-Level Domains (SLD) and 12,496 distinct IP addresses covering 48 countries are "potentially" affected. This result illustrates the widespread impact of hidden roots on web servers.

**Table 4: FQDNs Signed by Hidden Root Certificates Grouped by Alexa Rankings**
| Alexa Rank | # FQDNs | # Connections |
|------------|---------|---------------|
| 1-100      | 386K (28.95%) | 110M (49.42%) |
| 100-10K    | 309K (23.13%) | 68M (30.42%) |
| 10K-1M     | 120K (9.03%) | 16M (7.32%) |
| >1M        | 519K (38.89%) | 29M (12.84%) |

**Scale of Web Clients:** We used anonymized client IDs in the collected records to estimate the number of web clients that encountered hidden root certificates. In total, 360 Secure Browser captured hidden roots from 5.07 million volunteer users during the 5-month data collection period, with an average of 300 thousand clients per day. 4.67 million (92.1%) web clients trusted at least one hidden root CA (i.e., the AUTHORITY_INVALID bit was cleared for at least one hidden root certificate), echoing our findings that hidden root certificates are widely trusted. We also found that 95% of such clients had only one hidden root certificate through analysis of their verification codes.

Although on average 0.54% of daily web traffic is covered by hidden roots, the proportion per individual client varies widely. For more than 95% of clients, the percentage is less than 0.01%, while 0.28% of clients have more than 90% of their web visits impacted. To understand why certain clients were heavily impacted, we sampled 104 cases with more than 500 web visiting records and an affected rate of over 99% for further analysis. While one might attribute this high percentage to interceptions from local software like proxies and packet filters, this situation appeared in only 10.58% of clients (11 out of 104). Instead, hidden roots from fake authentication (64 clients, 61.54% of 104) led the pack. By examining the traffic timestamps of these clients, we found that hidden roots from fake authentication were constantly updated on the client-side, possibly to avoid detection. Specifically, 3 of the 104 cases had successively installed more than 20 hidden root certificates from the same issuer, and the average lifetime (the period they appeared in traffic logs, rather than the validity period) of each root did not exceed 1 day.

**Finding 4.7:** By further exploring trust relationships between hidden CA groups and affected clients, we identified fake CA groups that may come from the same malware family and unknown groups potentially associated with fake CAs.

The trust relationship between hidden CA groups can provide insights into "what actually happened to affected clients." To explore whether the same set of hidden CA groups are trusted by the same set of clients, we clustered clients that trusted hidden CAs from at least three identical groups at the same time. 127 such sets were found, along with several interesting findings. For example, three fake CA groups hijacked traffic of the same set of 309 clients in different orders, suggesting that they may belong to the same family and successively infected this set of clients. We also found one government-owned CA, one digital authentication, and the CA from one VPN simultaneously installed on 195 clients, with the associated traffic flowing mainly to the intranet or government-related hosts. These clients are likely used within government-related agencies that install the hidden CAs for work purposes. Additionally, three groups marked as "unknown" were found installed on the same set of clients with two or three fake authentication groups, implying possible relationships between their upstream operators.

### Implementation Flaws

As trust anchors of the Web PKI model, root certificates are heavily protected and should follow strict implementation requirements. In this section, we analyze the implementation flaws of hidden root certificates.

**5.1 Certificate Misuse**

**Finding 5.1:** Over 97% of chains in the hidden CA ecosystem are signed directly by root certificates instead of intermediate ones.

**Direct Signing with Root Certificates:** For security considerations, root certificates should be heavily protected and stored offline [9, 29], and leaf certificates are usually signed by intermediate certificates. Previous studies [54] report that the typical length of valid certificate chains signed by trusted root CAs is 2 to 3 (excluding the root certificate). By contrast, for hidden root CAs, we find that most chains (97.55%) are signed directly by root certificates without intermediate ones. For local software (e.g., VPN) that needs to sign certificates in real-time, this option is reasonable for flexibility. However, we also find that 41.4% of hidden root CAs owned by government agencies and enterprises exhibit direct signing behaviors. The direct signing behavior of hidden root certificates increases their risk of being compromised.

**Finding 5.2:** Public key sharing between root certificates is prevalent in the hidden CA ecosystem, with 144 groups suffering from this threat.

**Public Key Sharing:** Among the 5,005 certificate groups, 643 include more than one root certificate, and we find public key sharing is common. Figure 8 shows the count of public keys and certificates in each group. Surprisingly, 144 groups (22.4%) use one key to issue all hidden root certificates, and 36 of them hold over 10 certificates. For a CA, sharing public keys among its root certificates increases the risk of being compromised [21], particularly when the root certificates are directly used to sign leaf certificates (Finding 5.1). While the certificate groups typically belong to fake root CAs, two kinds of security software are also found to use the same public key for over 7,000 certificates that they hold.

**Figure 8:** Count of hidden root certificates and public keys in each group.

**Finding 5.3:** Wildcard usage is overly prevalent (over 75%) in the issuance of hidden CAs, which is not recommended for security considerations.

**Abuse and Misuse of Wildcard:** As shown in Table 1 and discussed in Section 4.4, hidden roots have issued certificates for over 1.54 million FQDNs (both in subjects and SANs) under 792K Second-Level Domains (SLD) in our dataset. Among them, we find a prevalent usage of wildcards (e.g., *.example.com): over 75% of leaf certificates signed by hidden root CAs use wildcard domains. Although allowed, wildcard usage is discouraged due to frequent incorrect implementations [24, 50]. A measurement study on HTTPS adoption of government websites [59] showed their usage of wildcard certificates was about 39.21%, still lower than that of hidden CA deployments. Additionally, wildcard violations are identified in 59 leaf certificates, such as appearing in the non-left-most label (e.g., violation.*) or multiple labels (e.g., *.*.violation) of a domain.

**Long Validity Period:** Figure 9 plots the creation dates and expiration dates of hidden root certificates. We first find dozens of outliers with unreasonable dates (e.g., 1 root certificate created in the year 1899 and 3 root certificates expiring in the year 9999) and remove them from further validity-related analysis.

**Finding 5.4:** Over 79% of hidden root certificates are valid for over 60 years, significantly longer than best practices. Security risks may last long for clients trusting them.

Zooming into root certificates created between 1980 and 2020, we find that most of them have a valid period significantly longer than best practices: over 935,000 (79%) are valid for over 60 years, and 317 of them are even valid for over 100 years. In comparison, all root certificates in public programs are valid for less than 40 years, with a median value of 20 years. Recent practices of operating systems and root CAs [34, 55] suggest that root certificates adopt a validity period between 6 months to 16 years based on the strength of their public keys.

What's worse, because hidden root CAs lack certificate revocation and incident handling, security risks can last for a long time for clients that have already imported them into local root stores. To check this point, we manually collected a list of 116 root certificates that have been publicly announced as being revoked by operating systems [3], browsers [63], or technical reports [1]. 23 roots on this list were observed active in the hidden CA ecosystem in our data, trusted by over 34,018 clients and affecting 263,500 HTTPS connections in 5 months. One of them, CFCA, a digital authentication CA, even has a long validity period ending in the year 4749.

**Table 5: Zlint ERROR Messages of Hidden Root Certificates**
| Error Type | # Lints | # Cert Errors | Example |
|------------|---------|---------------|---------|
| Missing extensions | 15 | 954,453 (79.46%) | Missing key identifier |
| Invalid values | 49 | 121,745 (10.14%) | Negative serial number |
| Missing fields | 3 | 89,763 (7.47%) | Missing CA organization |
| Vulnerable values | 6 | 35,228 (2.93%) | RSA key < 2048 bits |

**Figure 9:** Creation dates and expiration dates of hidden root certificates.

**5.2 Non-compliant Certificate Content**

In addition to issuance behavior and usage flaws, we further identify content non-compliance in the hidden CA ecosystem at scale using Zlint [44]. Zlint is a certificate linter that checks whether a certificate meets implementation requirements specified by the X.509 standard, CAs, and browsers. We ran it on all 1.17 million hidden root certificates and 59.8 million leaf certificates signed by them. The tool inspects certificates with 266 lints of different security levels, i.e., ERROR (implementation violates a MUST in standards), WARNING (implementation violates a SHOULD in standards), and INFO (informational messages).