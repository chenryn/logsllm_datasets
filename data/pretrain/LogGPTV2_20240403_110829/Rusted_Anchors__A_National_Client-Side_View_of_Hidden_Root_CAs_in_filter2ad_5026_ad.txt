that irregularly intercept user traffic in an impersonal manner.
Table 3: Examples of fake Certificate Authorities
Subject Common Name
Certum Trusted NetWork CA 2
VeriSlgn Class 3 Public Primary
Certification Authority - G4
GlobalSign Root CA
GlobalSignature Certificates CA 2
GlobalSign Root CA R3
Small DigiCert Baltimore Root 2
# hidden
root certs # connections # FQDN
254,414
1,137,121
158.54M
2
1
1,419
136,196
135,258
21.20M
7.61M
2.85M
1.03M
0.65M
210
6,023
74,555
47,347
30,316
Local software. 24 of the top 100 certificate groups are held by
local software, including 11 packet filterers, 10 Proxies/VPNs, 2
security software and 1 parent control application. These hidden
root certificates are imported at software installation, for purposes
such as virus detection, download acceleration and ad blocking. As
we do not find direct evidence of malware in this category (which
might be identified as fake CAs instead), the software together with
its root certificate is likely installed manually by web users (i.e.,
users want their connections intercepted for benign reasons).
In previous studies of HTTPS interception, benign local software
accounts for the most intercepted traffic. For example, [23] reports
that anti-virus software performs 53% of all HTTPS interception,
and the ratio for firewalls in [56] is 69%. However, in our dataset
the ratio of intercepted connections by local software is lower, only
3.58%. As for the reasons, on the one hand, local software involved
in our study may be not implemented with identifiable subject
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1380information, resulting in their classification as unknown at best.
On the other hand, we observe the hidden CA ecosystem from a
different, passive perspective than previous active measurements,
which may better reflect the nature phenomenon. That is, “user-
informed” or “regulated” (e.g., security software and well-identified
agents) interceptions may not predominate as commonly expected.
Other unknown owners. From manual subject classification, we
cannot identify 15 certificate groups, holding a total of 207K (17.6%)
hidden root certificates. Most of them use neutral keywords to
create certificate subject names, such as root, trust, tech and ca,
and we do not have search results of their public keys in search
engines or threat intelligence databases.
4.4 Impact on Web Hosts and Web Clients
Finding 4.6: On average, we observed 1.48 million HTTPS traffic
from 300 thousand clients associated with hidden root CAs per
day, demonstrating the broad impact on web clients.
Figure 7: Daily count of hidden root certificates captured and
associated logs of HTTPS web visits.
Scale of web visits. Figure 7 shows the daily count of hidden root
certificates witnessed by clients and their associated web visits. On
average, 1.48 million secure connections use certificate chains that
link to a hidden root. During the 5-month data collection period,
222 million certificate chains that link to a hidden root are recorded,
accounting for 0.54% of all web traffic. We also find that up to
96.4% of traffic do not receive any verification errors from local
operating systems. Only 1.5% received AUTHORITY_INVALID errors,
and the remaining 2.1% of certificate chains are invalid because
of other issues (e.g., DATE_INVALID which means the certificate is
not within its validity period). This result echoes with our earlier
findings that hidden root certificates are widely imported by web
clients (Findings 4.1 and 4.5).
Hosts signed by hidden roots. As presented in Table 1, a total
of 1.3 million fully-qualified domain names (FQDNs) were found
to be issued certificates from hidden roots in the period of data
collection. Further, we examined the popularity of these domains
with Alexa Top Rank [41]. As shown in Table 4, 815K (61.11%) of
FQDNs are within the top 1M rank. Also, there are a significant
number (519K, 38.89%) of long-tail domains (not ranked within
top 1M) being affected by hidden roots. Besides, in addition to
hosts in the subject fields, certificates are also valid for entities
in subjectAlternativeName (SAN) extensions. As defined in the
X.509 standard [19], hosts embedded in these extensions are also
threatened by hidden root CAs. By extracting the two most com-
mon formats, dnsName and ipAddress from SAN extensions in
leaf certificates, we totally identify that 1.54 million FQDNs under
792K Second-Level Domains (SLD) and 12,496 distinct IP addresses
covering 48 countries are “potentially” affected. This result also
illustrates the widespread impact of hidden roots on web servers.
Due to ethical concerns, our data analysis of affected hosts is
limited to the above statistics. In order to protect user privacy, we
neither analyzed the specific content of the hosts nor did any in-
depth exploration of the domains accessed by individual customers
to avoid exposing sensitive information.
Table 4: FQDNs signed by hidden root certificates grouped
by Alexa rankings. One domain can have multiple FQDNs.
Alexa Rank
1-100
# FQDN
386K (28.95%) 309K (23.13%) 120K (9.03%) 519K (38.89%)
# connections 110M (49.42%) 68M (30.42%) 16M (7.32%) 29M (12.84%)
100-10K
10K-1M
>1M
Scale of web clients. We use the anonymized client ID in the col-
lected records to give an estimation2 of web clients that witness
hidden root certificates. In total, 360 Secure Browser captures hid-
den roots from 5.07 million volunteer users during the 5-month
data collection period, with an average of 300 thousand clients
per day. 4.67 million (92.1%) web clients have trusted at least one
hidden root CA (i.e., the AUTHORITY_INVALID bit is cleared for at
least one hidden root certificate), again echoing with our findings
that hidden root certificates are widely trusted. We also find that
95% of such clients only have one hidden root certificate through
analysis of their verification codes.
Although on average 0.54% of daily web traffic is covered by
hidden roots, the proportion per individual client varies widely. For
more than 95% of clients, the percentage is less than 0.01%, while
0.28% of clients have more than 90% of their web visits impacted.
To figure out why certain clients were impacted so heavily, We
sampled 104 cases who had more than 500 web visiting records
and an affected rate of over 99% for further analysis. One may
attribute this high percentage to interceptions from Local Software
like proxies and packet filters, but we find this situation appeared
on only 10.58% clients (11 of 104). On the contrary, hidden roots
from Fake Authentication (64 clients, 61.54% of 104) lead the pack.
By examining the traffic timestamps of those clients, we also find
that, hidden roots from Fake Authentication would be constantly
updated on the client-side, possibly to avoid detection. Specifically,
3 of the 104 cases had successively installed more than 20 hidden
root certificates from the same issuer, and the average lifetime (the
period they appeared in traffic logs, rather than the validity period)
of each root did not exceed 1 day.
Finding 4.7: By further exploring trust relationships between
hidden CA groups and affected clients, we identified fake CA
groups that may come from the same malware family, and un-
known groups potentially being associated with fake CAs.
The trust relationship between hidden CA groups could provide
insights into “what actually happened to affected clients”. To ex-
plore whether the same set of hidden CA groups are trusted by the
2The browser logs the timestamp when a volunteer joins the data collection program
as client ID (see Section 3.4). We roughly correspond a client ID to one volunteer user.
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1381same set of clients, we clustered clients that trusted hidden CAs
from at least three identical groups at the same time. 127 such sets
were found in this way along with several interesting findings. For
example, three fake CA groups hijacked traffic of the same set of
309 clients in different orders, suggesting that they may belong
to the same family and successively infected this set of clients.
We also found one government-owned CA, one digital authentica-
tion, and the CA from one VPN simultaneously installed on 195
clients, with the associated traffic flowing mainly to the intranet
or government-related hosts. These clients are likely used within
government-related agencies that install the hidden CAs for work-
ing purposes. Besides, three groups marked as “unknown” were
found installed on the same set of clients with two or three fake
authentication groups, implying possible relationships between
their upstream operators.
5 IMPLEMENTATION FLAWS
As trust anchors of the Web PKI model, root certificates are heavily
protected and should follow strict implementation requirements. In
this section, we provide the analysis of the implementation flaws
of hidden root certificates.
5.1 Certificate Misuse
Finding 5.1: Over 97% of chains in hidden CA ecosystem are
signed directly by root certificates instead of intermediate ones.
Direct signing with root certificates. For security considera-
tions, root certificates should be heavily protected and stored of-
fline [9, 29], and leaf certificates are usually signed by intermediate
certificates. Previous studies3 report that the typical length of valid
certificate chains signed by trusted root CAs is 2 to 3 (excluding the
root certificate) [54]. By contrast, for hidden root CAs, we find that
most chains (97.55%) are signed directly by root certificates with-
out intermediate ones. For local software (e.g., VPN) that needs to
sign certificates in real-time, this option is reasonable for flexibility.
However, we also find that 41.4% of hidden root CAs owned by gov-
ernment agencies and enterprises exhibit direct signing behaviors.
The direct signing behavior of hidden root certificates increases
their risk of being compromised.
Finding 5.2: Public key sharing between root certificates is
prevalent in the hidden CA ecosystem, with 144 groups suffering
from this threat.
Public key sharing. Among the 5,005 certificate groups, 643 in-
clude over one root certificate and we find public key sharing is
common. Figure 8 shows the count of public keys and certificates
in each group. Surprisingly, 144 groups (22.4%) use one key to issue
all hidden root certificates, and 36 of them hold over 10 certificates.
For a CA, sharing public keys among its root certificates increases
the risk of being compromised [21], particularly when the root
certificates are directly used to sign leaf certificates (Finding 5.1).
While the certificate groups typically belong to fake root CAs, two
kinds of security software are also found to use the same public
key for over 7 thousand certificates that they hold.
3We do not perform a comparison with trusted certificates in our dataset, because
only invalid ones are collected and the results can be biased.
Figure 8: Count of hidden root certificates and public keys
in each group.
Finding 5.3: Wildcard is overly used (over 75%) in the issuance
of hidden CAs, which is not recommended for security consider-
ations.
Abuse and misuse of wildcard. As shown in Table 1 and dis-
cussed in Section 4.4, hidden roots are found to have issued cer-
tificates for over 1.54 million FQDNs (both in subjects and SANs)
under 792K Second-Level Domains (SLD) in our dataset. Among
them, we find a prevalent usage of wildcards (e.g., *.example.com):
over 75% of leaf certificates signed by hidden root CAs use wildcard
domains. Although allowed, wildcard is actually discouraged due
to the frequent incorrect implementations [24, 50]. As an “inferior
case” of certificate practice, a measurement study on HTTPS adop-
tions of government websites [59] showed their usage of wildcard
certificates was about 39.21%, while still lower than that of hidden
CA deployments. In addition, wildcard violations are identified in
59 leaf certificates, such as appearing in the non-left-most label
(e.g., violation.*) or multiple labels (e.g., *.*.violation) of a
domain.
Long validity period. Figure 9 plots the creation dates and ex-
piration dates of hidden root certificates. We first find dozens of
outliers that have unreasonable dates (e.g., 1 root certificate created
in the year 1899 and 3 root certificates expiring in year 9999) and
remove them from further validity related analysis.
Finding 5.4: Over 79% of hidden root certificates are valid for
over 60 years, significantly longer than best practices. Security
risks may last long for clients trusting them.
Zooming into root certificates created during year the 1980 and
2020, we find that most of them have a valid period significantly
longer than best practices: over 935 thousand (79%) are valid for
over 60 years, 317 of which are even valid for over 100 years. To
compare, all root certificates in public programs are valid for less
than 40 years, with a median value of 20 years. Meanwhile, recent
practices of operating systems and root CAs [34, 55] suggest that
root certificates adopt a validity period between 6 months to 16
years based on the strength of their public keys.
What’s worse, because hidden root CAs lack certificate revoca-
tion and incident handling, security risks can last for a long time
for clients that already import them into local root stores. To check
this point, we also manually collected a list of 116 root certificates
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1382that have been publicly announced as being revoked by operating
systems [3], browsers [63] or technical reports [1]. 23 roots on
this list were observed active in the hidden CA ecosystem in our
data, trusted by over 34,018 clients and affecting 263,500 HTTPS
connections in 5 months. One of them, CFCA, which is a digital
authentication CA, even has a long validity period ending at the
year 4749.
Table 5: Zlint ERROR messages of hidden root certificates
Error Type
Missing extensions
Invalid values
Missing fields
Vulnerable values
# Lints
15
49
3
6
# Cert Errors Example
954,453 (79.46%) Missing key identifier
121,745 (10.14%) Negative serial number
89,763 (7.47%) Missing CA organization
35,228 (2.93%)
RSA key < 2048 bits
Figure 9: Creation dates and expiration dates of hidden root
certificates.
5.2 Non-compliant Certificate Content
In addition to issuance behavior and usage flaws, we further identify
content in-compliance of hidden CA ecosystem at scale by Zlint [44].
Zlint is a certificate linter that checks whether a certificate meets
implementation requirements specified by the X.509 standard, CAs
and browsers. We run it on all 1.17 million hidden root certificates
and 59.8 million leaf certificates signed by them. The tool inspects
certificates with 266 lints of different security levels, i.e., ERROR
(implementation violates a MUST in standards), WARNING (implemen-