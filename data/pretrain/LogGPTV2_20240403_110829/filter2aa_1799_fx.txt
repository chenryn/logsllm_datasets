### Side-Channel Mitigations in Windows

#### Hardware Indirect Branch Controls
- **Pages**: 21–23

#### KVA Shadow
- **Pages**: 18–21

#### Retpoline and Import Optimization
- **Pages**: 23–26

#### STIBP Pairing
- **Pages**: 26–30

#### Signal an Object and Wait for Another Service
- **Page**: 136

#### Sihost Process
- **Page**: 834

#### Silo Directory
- **Page**: 161

#### SKINIT and Secure Launch
- **Pages**: 816, 818

#### SkTool
- **Pages**: 28–29

#### SLAT (Second Level Address Translation) Table
- **Page**: 17

#### SMAP (Supervisor Mode Access Protection)
- **Pages**: 57, 93

#### SMB Protocol
- **Pages**: 614–615

#### SMP (Symmetric Multiprocessing)
- **Page**: 171

#### SMR (Shingled Magnetic Recording) Volumes
- **Pages**: 762–763

#### SMR Disk Tiers
- **Pages**: 765–766

#### Smss User-Mode Process
- **Pages**: 830–835

#### SMT System
- **Page**: 292

#### Software Interrupts
- **Overview**: 54
- **APCs (Asynchronous Procedure Calls)**: 61–66
- **DPC (Dispatch or Deferred Procedure Call)**: 54–61

#### Software IRQLs (Interrupt Request Levels)
- **Pages**: 38–50
- **See Also**: IRQL (Interrupt Request Levels)

#### Storage Spaces
- **Overview**: 770–771
- **Internal Architecture**: 771–772
- **Services**: 772–775

#### Sparse Data
- **Compressing**: 671–672

#### Sparse Files
- **Data Compression**: 670–671
- **NTFS On-Disk Structure**: 675

#### Spectre Attack
- **Pages**: 14–16

#### SpecuCheck Tool
- **Pages**: 28–29

#### SpeculationControl PowerShell Script
- **Page**: 28

#### Spinlocks
- **Pages**: 172–177

#### Spot Verifier Service
- **NTFS Recovery Support**: 708

#### Spurious Traps
- **Page**: 31

#### SQLite Databases
- **Page**: 252

#### SRW (Slim Read Writer) Locks
- **Pages**: 178, 195, 205–207

#### SSB (Speculative Store Bypass)
- **Page**: 16

#### SSBD (Speculative Store Bypass Disable)
- **Page**: 22

#### SSD (Solid-State Disk)
- **Pages**: 565, 644–645

#### SSD Volume
- **Retrimming**: 646

#### Startup Recovery Tool
- **Page**: 846

#### Startup Repair
- **Page**: 845

#### State Repository
- **Pages**: 251–252
- **Witnessing**: 253–254

#### STIBP (Single Thread Indirect Branch Predictors)
- **Pages**: 22, 25–30

#### Storage Reserves and NTFS Reservations
- **Pages**: 685–688

#### Stream-Based Caching
- **Page**: 569

#### Structured Exception Handling
- **Page**: 85

#### Svchost Service Splitting
- **Pages**: 467–468

#### Symbolic Links
- **Page**: 166

#### Symbolic Links and Junctions
- **NTFS**: 634–637

#### SymbolicLink Object
- **Page**: 129

#### Symmetric Encryption
- **Page**: 711

#### Synchronization
- **Overview**: 170–171
- **High-IRQL**: 172–177
- **Keyed Events**: 194–196

#### Syscall Instruction
- **Page**: 92

#### System Call Numbers
- **Mapping to Functions and Arguments**: 102–103

#### System Call Security
- **Pages**: 99–100

#### System Call Table Compaction
- **Pages**: 101–102

#### System Calls and Exception Dispatching
- **Page**: 122

#### System Crashes
- **Consequences of**: 421

#### System Image Recover
- **Page**: 845

#### SYSTEM Process
- **Pages**: 19–20

#### System Restore
- **Page**: 845

#### System Service Activity
- **Viewing**: 104

#### System Service Dispatch Table
- **Page**: 96

#### Trap Dispatching
- **Overview**: 30–32
- **System Service Handling**: 91–104
- **System Worker Threads**: 81–85
- **Timer Processing**: 66–81

#### Take State Segments
- **Pages**: 6–9

#### Task Manager
- **Starting**: 832

#### Task Scheduler
- **Overview**: 476–477
- **Initialization**: 477–481
- **COM Interfaces**: 486
- **Triggers and Actions**: 478
- **UBPM (Unified Background Process Manager)**: 481–486
- **XML Descriptor**: 479–481

#### Task Scheduling and UBPM
- **Pages**: 475–476

#### TBOOT Module
- **Page**: 806

#### TCP/IP Activity
- **Tracing with Kernel Logger**: 519–520

#### TEB (Thread Environment Block)
- **Pages**: 4–5, 104

#### Terminal Object
- **Page**: 130

#### TerminalEventQueue Object
- **Page**: 130

#### Thread Alerts (Object-less Waiting)
- **Pages**: 183–184

#### !thread Command
- **Pages**: 75, 190

#### Thread-Local Register Effect
- **Page**: 4
- **See Also**: Windows Threads

#### Thunk Kernel Routines
- **Page**: 33

#### Tiered Volumes
- **Support for**: 647–651
- **Creating Maximum Number of**: 774–775

#### Time Broker
- **Page**: 256

#### Timer Coalescing
- **Pages**: 76–77

#### Timer Expiration
- **Pages**: 70–72

#### Timer Granularity
- **Pages**: 67–70

#### Timer Lists
- **Page**: 71

#### Timer Object
- **Page**: 128

#### Timer Processing
- **Page**: 66

#### Timer Queuing Behaviors
- **Page**: 73

#### Timer Serialization
- **Page**: 73

#### Timer Tick Distribution
- **Pages**: 75–76

#### Timer Types
- **Intervals and Node Collection Indices**: 66–67, 79

#### Timers
- **High Frequency**: 68–70
- **High Resolution**: 80

#### TLB Flushing Algorithm
- **Pages**: 18, 20–21, 272

#### TmEn Object
- **Page**: 129

#### TmRm Object
- **Page**: 129

#### TmTm Object
- **Page**: 129

#### TmTx Object
- **Page**: 129

#### Token Object
- **Page**: 128

#### TPM (Trusted Platform Module)
- **Pages**: 785, 800–801

#### TPM Measurements
- **Invalidating**: 803–805

#### TpWorkerFactory Object
- **Page**: 129

#### TR (Task Register)
- **Page**: 6, 32

#### Trace Flags Field
- **Page**: 132

#### Tracing Dynamic Memory
- **Pages**: 532–533
- **See Also**: DTrace (Dynamic Tracing), ETW (Event Tracing for Windows)

#### Transaction Support
- **NTFS On-Disk Structure**: 688–689

#### Transactional APIs
- **NTFS On-Disk Structure**: 690

#### Transactions
- **Committing**: 697
- **Undoing**: 702

#### Transition Stack
- **Page**: 18

#### TRIM Commands
- **Page**: 645

#### Troubleshooting Windows Loader Issues
- **Pages**: 556–557

#### !trueref Debugger Command
- **Page**: 148

#### Trusted Execution
- **Pages**: 805–807

#### Trustlets
- **Creation and Debugging**: 372–375
- **Secure Devices**: 376–378
- **Secure Kernel and Trustlets**: 345
- **Secure System Calls**: 354
- **VBS-Based Enclaves**: 378
- **In VTL 1**: 371
- **Windows Hypervisor on ARM64**: 314–315

#### TSS (Task State Segment)
- **Pages**: 6–9

#### .tss Command
- **Page**: 8

#### Tunneling
- **NTFS On-Disk Structure**: 666–667

#### TxF APIs
- **Pages**: 688–690

#### $TXF_DATA Attribute
- **Pages**: 691–692

#### TXT (Trusted Execution Technology)
- **Pages**: 801, 805–807, 816

#### Type Initializer Fields
- **Pages**: 139–140

#### Type Objects
- **Pages**: 131, 136–140

### U

#### UBPM (Unified Background Process Manager)
- **Pages**: 481–486

#### UDF (Universal Disk Format)
- **Page**: 603

#### UEFI Boot
- **Pages**: 777–781

#### UEFI Runtime Virtualization
- **Pages**: 358–363

#### UMDF (User-Mode Driver Framework)
- **Page**: 209

#### \UMDFCommunicationPorts Directory
- **Page**: 161

#### Undo Pass
- **NTFS Recovery Support**: 701–703

#### Unexpected Traps
- **Page**: 31

#### Unicode-Based Names
- **NTFS**: 633

#### User Application Crashes
- **Pages**: 537–542

#### User Page Tables
- **Page**: 18

#### UserApcReserve Object
- **Page**: 130

#### User-Issued System Call Dispatching
- **Page**: 98

#### User-Mode Debugging
- **Kernel Support**: 239–240
- **Native Support**: 240–242
- **Windows Subsystem Support**: 242–243

#### User-Mode Resources
- **Page**: 205

#### UWP (Universal Windows Platform)
- **Application Model**: 244
- **Bundles**: 265
- **SEB (System Event Broker)**: 238
- **Services to Apps**: 243
- **UWP Applications**: 245–246, 259–260

### V

#### VACBs (Virtual Address Control Blocks)
- **Pages**: 572, 576–578, 581–582

#### VBO (Virtual Byte Offset)
- **Page**: 589

#### VBR (Volume Boot Record)
- **Page**: 657

#### VBS (Virtualization-Based Security)
- **Detecting**: 344
- **Overview**: 340
- **VSM (Virtual Secure Mode)**: 340–344
- **VTLs (Virtual Trust Levels)**: 340–342

#### VCNs (Virtual Cluster Numbers)
- **Pages**: 656–658, 669–672

#### VHDPMEM Image
- **Creating and Mounting**: 737–739

#### Virtual Block Caching
- **Page**: 569

#### Virtual PMs Architecture
- **Page**: 736

#### Virtualization Stack
- **Deferred Commit**: 339
- **EPF (Enlightened Page Fault)**: 339
- **Explained**: 269
- **Hardware Support**: 329–335
- **Hardware-Accelerated Devices**: 332–335
- **Memory Access Hints**: 338
- **Memory-Zeroing Enlightenments**: 338

#### Windows Hypervisor
- **Overview**: 315
- **Paravirtualized Devices**: 331
- **Ring Buffer**: 327–329
- **VA-Backed Virtual Machines**: 336–340
- **VDEVs (Virtual Devices)**: 326–327
- **VID Driver and Memory Manager**: 317
- **VID.sys (Virtual Infrastructure Driver)**: 317
- **Virtual IDE Controller**: 330
- **VM (Virtual Machine)**: 318–322
- **VM Manager Service and Worker Processes**: 315–316
- **VM Worker Process**: 318–322, 330
- **VMBus**: 323–329
- **VMMEM Process**: 339–340
- **Vmms.exe (Virtual Machine Manager Service)**: 315–316

#### VM (View Manager)
- **Page**: 244

#### VMENTER Event
- **Page**: 268

#### VMEXIT Event
- **Pages**: 268, 330–331

#### \VmSharedMemory Directory
- **Page**: 161

#### VMXROOT Mode
- **Page**: 268

#### Volumes
- **Caching and File Systems**: 565–566
- **Defined**: 565–566
- **NTFS On-Disk Structure**: 655
- **Setting Repair Options**: 706

#### VSM (Virtual Secure Mode)
- **Overview**: 340–344
- **Startup Policy**: 813–816
- **System Calls**: 349–355
- **VTLs (Virtual Trust Levels)**: 340–342

### W

#### Wait Block States
- **Page**: 186

#### Wait Data Structures
- **Page**: 189

#### Wait for a Single Object Service
- **Page**: 136

#### Wait for Multiple Objects Service
- **Page**: 136

#### Wait Queues
- **Pages**: 190–194

#### WaitCompletionPacket Object
- **Page**: 130

#### Wall Time
- **Page**: 57

#### Wbemtest Command
- **Page**: 491

#### Wcifs (Windows Container Isolation Minifilter Driver)
- **Page**: 248

#### Wcnfs (Windows Container Name Virtualization Minifilter Driver)
- **Page**: 248

#### WDK (Windows Driver Kit)
- **Page**: 392