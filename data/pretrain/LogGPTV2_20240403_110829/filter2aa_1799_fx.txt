Side-channel mitigations in Windows
hardware indirect branch controls, 21–23
KVA Shadow, 18–21
Retpoline and import optimization, 23–26
STIPB pairing, 26–30
Signal an object and wait for another service, 136
Sihost process, 834
\Silo directory, 161
SKINIT and Secure Launch, 816, 818
SkTool, 28–29
SLAT (Second Level Address Translation) table, 17
SMAP (Supervisor Mode Access Protection), 
57, 93
SMB protocol, 614–615
SMP (symmetric multiprocessing), 171
SMR (shingled magnetic recording) volumes, 
762–763
SMR disks tiers, 765–766
Smss user-mode process, 830–835
SMT system, 292
software interrupts. See also DPC (dispatch or 
deferred procedure call) interrupts
APCs (asynchronous procedure calls), 61–66
DPC (dispatch or deferred procedure call), 
54–61
overview, 54
software IRQLs (interrupt request levels), 38–
50. See also IRQL (interrupt request levels)
Spaces. See Storage Spaces
sparse data, compressing, 671–672
sparse files
and data compression, 670–671
NTFS on-disk structure, 675
Spectre attack, 14–16
SpecuCheck tool, 28–29
SpeculationControl PowerShell script, 28
spinlocks, 172–177
Spot Verifier service, NTFS recovery support, 708
spurious traps, 31
SQLite databases, 252
SRW (Slim Read Writer) Locks, 178, 195, 205–207
SSB (speculative store bypass), 16
SSBD (Speculative Store Bypass Disable), 22
SSD (solid-state disk), 565, 644–645
SSD volume, retrimming, 646
Startup Recovery tool, 846
Startup Repair, 845
State Repository, 251–252
state repository, witnessing, 253–254
STIBP (Single Thread Indirect Branch 
Predictors), 22, 25–30
Storage Reserves and NTFS reservations, 
685–688
Storage Spaces
internal architecture, 771–772
overview, 770–771
services, 772–775
store buffers, 17
stream-based caching, 569
structured exception handling, 85
Svchost service splitting, 467–468
symbolic links, 166
symbolic links and junctions, NTFS, 634–637
SymbolicLink object, 129
symmetric encryption, 711
synchronization. See also Low-IRQL 
synchronization
High-IRQL, 172–177
keyed events, 194–196
overview, 170–171
syscall instruction, 92
system call numbers, mapping to functions and 
arguments, 102–103
system call security, 99–100
system call table compaction, 101–102
system calls and exception dispatching, 122
system crashes, consequences of, 421
System Image Recover, 845
SYSTEM process, 19–20
System Restore, 845
system service activity, viewing, 104
system service dispatch table, 96
Index 
877
trap dispatching
system service dispatcher, locating, 94–95
system service dispatching, 98
system service handling
architectural system service dispatching, 
92–95
overview, 91
system side-channel mitigation status, 
querying, 28–30
system threads, 597–598
system timers, listing, 74–75. See also timers
system worker threads, 81–85
T
take state segments, 6–9
Task Manager, starting, 832
Task Scheduler
boot task master key, 478
COM interfaces, 486
initialization, 477–481
overview, 476–477
Triggers and Actions, 478
and UBPM (Unified Background Process 
Manager), 481–486
XML descriptor, 479–481
task scheduling and UBPM, 475–476
taskschd.msc command, 479, 484
TBOOT module, 806
TCP/IP activity, tracing with kernel logger, 
519–520
TEB (Thread Environment Block), 4–5, 104
Terminal object, 130
TerminalEventQueue object, 130
thread alerts (object-less waiting), 183–184
!thread command, 75, 190
thread-local register effect, 4. See also
Windows threads
thunk kernel routines, 33
tiered volumes. See also volumes
creating maximum number of, 774–775
support for, 647–651
Time Broker, 256
timer coalescing, 76–77
timer expiration, 70–72
timer granularity, 67–70
timer lists, 71
Timer object, 128
timer processing, 66
timer queuing behaviors, 73
timer serialization, 73
timer tick distribution, 75–76
timer types
and intervals, 66–67
and node collection indices, 79
timers. See also enhanced timers; system timers
high frequency, 68–70
high resolution, 80
TLB flushing algorithm, 18, 20–21, 272
TmEn object, 129
TmRm object, 129
TmTm object, 129
TmTx object, 129
Token object, 128
TPM (Trusted Platform Module), 785, 800–801
TPM measurements, invalidating, 803–805
TpWorkerFactory object, 129
TR (Task Register), 6, 32
Trace Flags field, 132
tracing dynamic memory, 532–533. See also 
DTrace (dynamic tracing); ETW (Event 
Tracing for Windows)
transaction support, NTFS on-disk structure, 
688–689
transactional APIs, NTFS on-disk structure, 690
transactions
committing, 697
undoing, 702
transition stack, 18
trap dispatching
exception dispatching, 85–91
interrupt dispatching, 32–50
line-based interrupts, 50–66
message signaled-based interrupts, 50–66
878 
Index
trap dispatching
trap dispatching (continued)
overview, 30–32
system service handling, 91–104
system worker threads, 81–85
timer processing, 66–81
TRIM commands, 645
troubleshooting Windows loader issues, 
556–557
!trueref debugger command, 148
trusted execution, 805–807
trustlets
creation, 372–375
debugging, 374–375
secure devices, 376–378
Secure Kernel and, 345
secure system calls, 354
VBS-based enclaves, 378
in VTL 1, 371
Windows hypervisor on ARM64, 314–315
TSS (Task State Segment), 6–9
.tss command, 8
tunneling, NTFS on-disk structure, 666–667
TxF APIs, 688–690
$TXF_DATA attribute, 691–692
TXT (Trusted Execution Technology), 801, 
805–807, 816
type initializer fields, 139–140
type objects, 131, 136–140
U
UBPM (Unified Background Process Manager), 
481–486
UDF (Universal Disk Format), 603
UEFI boot, 777–781
UEFI runtime virtualization, 358–363
UMDF (User-Mode Driver Framework), 209
\UMDFCommunicationPorts directory, 161
undo pass, NTFS recovery support, 701–703
unexpected traps, 31
Unicode-based names, NTFS, 633
user application crashes, 537–542
User page tables, 18
UserApcReserve object, 130
user-issued system call dispatching, 98
user-mode debugging. See also debugging; 
GDI/User objects
kernel support, 239–240
native support, 240–242
Windows subsystem support, 242–243
user-mode resources, 205
UWP (Universal Windows Platform)
and application hives, 402
application model, 244
bundles, 265
and SEB (System Event Broker), 238
services to apps, 243
UWP applications, 245–246, 259–260
V
VACBs (virtual address control blocks), 572, 
576–578, 581–582
VBO (virtual byte offset), 589
VBR (volume boot record), 657
VBS (virtualization-based security)
detecting, 344
overview, 340
VSM (Virtual Secure Mode), 340–344
VTLs (virtual trust levels), 340–342
VCNs (virtual cluster numbers), 656–658, 
669–672
VHDPMEM image, creating and mounting, 
737–739
virtual block caching, 569
virtual PMs architecture, 736
virtualization stack
deferred commit, 339
EPF (enlightened page fault), 339
explained, 269
hardware support, 329–335
hardware-accelerated devices, 332–335
memory access hints, 338
memory-zeroing enlightenments, 338
Index 
879
Windows hypervisor
overview, 315
paravirtualized devices, 331
ring buffer, 327–329
VA-backed virtual machines, 336–340
VDEVs (virtual devices), 326–327
VID driver and memory manager, 317
VID.sys (Virtual Infrastructure Driver), 317
virtual IDE controller, 330
VM (virtual machine), 318–322
VM manager service and worker processes, 
315–316
VM Worker process, 318–322, 330
VMBus, 323–329
VMMEM process, 339–340
Vmms.exe (virtual machine manager ser-
vice), 315–316
VM (View Manager), 244
VMENTER event, 268
VMEXIT event, 268, 330–331
\VmSharedMemory directory, 161
VMXROOT mode, 268
volumes. See also tiered volumes
caching and file systems, 565–566
defined, 565–566
NTFS on-disk structure, 655
setting repair options, 706
VSM (Virtual Secure Mode)
overview, 340–344 
startup policy, 813–816
system calls, 349–355
VTLs (virtual trust levels), 340–342
W
wait block states, 186
wait data structures, 189
Wait for a single object service, 136
Wait for multiple objects service, 136
wait queues, 190–194
WaitCompletionPacket object, 130
wall time, 57
Wbemtest command, 491
Wcifs (Windows Container Isolation minifilter 
driver), 248
Wcnfs (Windows Container Name 
Virtualization minifilter driver), 248
WDK (Windows Driver Kit), 392