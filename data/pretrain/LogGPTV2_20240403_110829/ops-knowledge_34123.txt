User: 请回答以下安全问题是否存在保持明文长度的非对称加密算法？我想在不提供额外内存空间的情况下通过加密来保护一些寄存器。是否有一种加密算法可以保持要加密的数据的长度？（即明文长度=密文长度）

Assistant: 基本上，你要求的是一个非对称密码，它的块大小可以等于你的消息，也可以等于你消息编码的字符大小（ASCII/UTF8分别为8位，UTF-16和-32分别为16位和32位）。
Vanilla RSA在技术上可以做到这一点；您必须简单地限制通过选择两个随机素数p和q产生的无符号整数N的比特大小（因此，p必须小于sqrt（N），并且p越接近sqrt（N），可能的q值的域就越小）。最大N可以是与级联消息相同的数量级，也可以是它的偶数除数（低至1字节/字符）
然而，这方面存在两个严重问题：
RSA仅对非常大的密钥大小是安全的；它的困难在于找到产生N的p和q，因此包括RSA在内的任何加密的安全性都在于从**中选择大量可能的密钥。因此，只有从密钥大小的角度来看，如果消息至少是256个ASCII字符（产生2048位的消息，允许安全的大密钥），根据消息长度调整密钥大小才是安全的。较小的消息大小（密钥长度为8-32位）被琐碎地破坏；在最坏的情况下（对于攻击者），32位密钥需要找到素数p&lt；sqrt（232）＝65536，其均匀地划分N；根据素数定理，只有5900种可能性。你几乎可以用计算器“手动”破解这样一把钥匙。
此外，更严重的是，没有适当加密填充的RSA很容易受到已知的明文攻击，而且在这种情况下，这些攻击只限于微不足道的例子。OAEP，黄金标准RSA填充方案，使用两个散列函数，其中一个的比特长度必须至少为明文消息的比特大小，并且完全填充的消息的长度等于两个函数的散列消息长度之和，因此填充的消息将始终大于未填充的消息。
因此，具有定制密钥大小的普通RSA方法应该被视为存在根本缺陷。我能找到的每一个其他公钥系统，如椭圆曲线加密，基于加密所用的数学，都有类似的限制。
**2048位是X.509数字证书的最小推荐密钥大小。22048 ~=3.2317e616。从这个数字的角度来看，普朗克体积为4.22419e−105 m3；理论上，这个单位是宇宙的颗粒“分辨率”，基于普朗克长度，普朗克长度是任何仪器都能测量到的最小距离。可观测宇宙的半径至少在1e27米（137亿光年）的数量级，因此我们可观测宇宙中的球体为~4.189e79 m3~=1.7e185 Pl3。这意味着，如果我们不仅能“计算恒星并按名称命名”，而且能为我们可观测宇宙的每一个颗粒部分分配一个序数，那么我们需要的数字数量比RSA密钥空间中固有的数字数量少400个十进制数字。