...
hN−1
h0
...
hN−1 hN−2
. . . h1
. . . h2
...
. . .
. . . h0
(2.3)
1CCCA
is a circular matrix in ZN×N
cular matrix over ZN×N
q
.
q
. Obviously, HT is also a cir-
As needed, we only consider the circular matrix over ZN×N
For simplicity, we give the following convention: hN +i =
hi, HN +i,N +j = Hi,j. Clearly, H ∈ ZN×N
is a circular ma-
trix if and only if Hi,j = HN−j+i+1,1, for i, j ∈ {1, 2,··· , N}.
We list the fundamental lammas (see [23]).
q
q
.
Lemma 2.1. If H ∈ ZN×N
over ZN×N
q
is an invertible circular matrix
, then H−1 is also a circular matrix over ZN×N
.
q
q
Lemma 2.2. If G, H ∈ ZN×N
are circular matrices, then
GH is also a circular matrix. In particular, HT H is a sym-
metric circular matrix.
q
We show how to get H−1 and HT H in O(N 2) arithmetic
operations respectively in Appendix A. Of course, if N is
taken to be large, then it might be faster to use Fast Fourier
Transforms to compute products HT H in O(N log N ) op-
erations. However, it doesn’t impact the ﬁnal complexity.
What’s more, it’s easy to prove the following theorem.
which are corresponding to g =PN−1
Theorem 2.3. If G, H ∈ ZN×N
are circular matrices,
respectively, then GH = I mod q if and only if g∗h = 1 over
Zq[x]/(xN − 1), where I is an identity matrix of order N .
2.4 The Proportion of the Matrices of Rank n
i=0 gixi and h =PN−1
q
i=0 hixi
in Z(n+l)×n
q
q
, the (random) matrix L ∈ Z(n+l)×n
Here, we discuss a general problem: how big is l, then
the linear system L × Y = S mod q only has a single so-
lution with very high probability? Of course, the vector
S ∈ Zn+l
and the mod-
ulus q are known and we know that there is at least one
solution. Clearly, that there is a single solution is equivalent
to that the rank of L equals to n. Now, we distinguish two
cases:
• For the case l = 0, if the matrix L is invertible modulo q,
then there is only one solution.
q
Nguyen [17] gave the following result estimating the pro-
portion of invertible matrices modulo q among all matrices:
Theorem 2.4. Let q be a power of prime p. Consider the
ring of n × n matrices with entries in Zq. Then the propor-
tion of invertible matrices (i.e., with determinant coprime
to q) is equal to:
nY
(1 − p
−k).
k=1
• For the case l = 1 or 2, it’s easy to obtain the following
generalization of Theorem 3 in [17]:
Theorem 2.5. Let Fq be the ﬁnite ﬁeld with q elements,
where q is a prime power. The proportion of matrices of
rank n in the set of (n + l) × n matrices with entries in Fq
is equal to:
n+lY
(1 − q
−k),
l = 1, 2.
k=l+1
For the sake of completeness, detailed proof is provided
in Appendix B. Note that the proportions above converge
quickly to their limit. The numerical experiment shows that
the proportion can be considered as a constant for high di-
mensions (higher than 50). Table 1 gives numerical results
for the case l = 0, 1, and 2.
q
3
59
l = 0
l = 1
l = 2
0.560
0.840
0.945
Table 1. The proportion of the matrices of rank n in Z(n+l)×n
q
2k, k ≥ 6
0.983
0.289
≥ 0.9997
0.9997
0.999995 ≥ 0.999996
prime ≥ 197
≥ 0.995
≥ 0.99997
≥ 0.999999
It shows that if l = 0, the random matrix L is invertible
mod q with non-negligible probability, and with very high
probability for p > 59. And we see that for the case l = 1,
there is a single solution with very high probability.
3. THE BROADCAST ATTACKS AGAINST
NTRU
3.1 Analyse the ergodic-linearization algorithm
against GGH
We ﬁrst analyse the ergodic-linearization algorithm [12,
13, 14] against the original GGH, which naturally deduces
the broadcast attacks against NTRU.
For the formula (2.1), we do the ergodic on the error set
N−1X
to get
N−1X
(
N−1X
j=0
(
Bi+1,j+1mj − ci − σ)(
Bi+1,j+1mj − ci + σ) = 0
j=0
j=0
for 0 ≤ i ≤ N − 1. It’s equivalent to do square:
Bi+1,j+1mj − ci)2 = σ2, i = 0, 1,··· , N − 1.
(3.1)
where eB is the adjoint matrix of B, then we can do some-
thing similar.
For GGH-2009, we modify the decryption equation to get
1CCCA = 2Bm + 2r −
0BBB@
0BBB@
1
1
...
1
1CCCA mod p.
1
1
...
1
2c −
Let ˆc = 2c−(1, 1,··· , 1)T , ˆB = 2B and ˆr = 2r−(1, 1,··· , 1)T ,
then we have
ˆc = ˆBm + ˆr mod p,
(3.3)
where ˆr ∈ {−1, 1}N . Then we can treat (3.3) in the same
way as that for the original GGH.
Remark 2: Obviously, doing the inner product is worse
than doing square, because the public key B has no good
global property as the matrix ˆH in NTRU, which is an in-
vertible circular matrix. Nonetheless, this method naturally
deduces the broadcast attack against NTRU.
3.2 How to do the Broadcast Attacks against
NTRU
According to Subsection 2.3, it’s equivalent to consider the
linear form of NTRU over Zq. If H is invertible in ZN×N
,
obviously we can easily get the equation below from (2.3)
q
−1m + r = H
−1c mod q.
H
Let ˆH = H−1, b = H−1c mod q, then we have
ˆHm + r = b mod q.
(3.4)
q
Usually, H is invertible in ZN×N
with high probability in
NTRU-2001 with an odd dg and NTRU-2005 with gcd(q, dg)
= 1 (the proportion of invertible elements is close to 1, which
can be computed as in [24]). Hence, we can easily choose H
which is invertible, then get an invertible circular matrix ˆH
and it requires O(N 2) arithmetic operations by Lemma 2.1.
Another way to estimate whether H is invertible in ZN×N
or not is to observe whether gcd(det(L), q) = 1 or not.
However, for NTRU-2001 with an even dg and NTRU-
2005 with q | dg, H is not invertible. We need some extra
restriction: q | dr, to get an invertible H. In addition, H
is not invertible in NTRU-1998. Luckily, the public key h
is “pseudo-invertible” mod q with overwhelming probabil-
ity. More precisely, there is the following result [25].
q
Lemma 3.1. For any public key h in NTRU-1998, there
exists a polynomial h0 ∈ R with overwhelming probability
such that for any r ∈ Lr
0 ∗ h ∗ r = r mod q.
It requires O(N 2) arithmetic operations.
h
It also holds true for NTRU-2001 with q = dr and NTRU-
2005 with q | dr.
One takes NTRU-2005 with q | dr as an example to ex-
plain how to ﬁnd h0 in polynomial time as follows. If gcd(q, dg)
= 1, then H is invertible in ZN×N
with high probability,
as mentioned in [24]. Hence, we can assume that q | dg.
Since Rq = Zq[x]/(xN − 1) is isomorphic to P1 × P2 where
P1 = Zq[x]/(x− 1) and P2 = Zq[x]/(xN−1 + xN−2 +··· + 1),
we have
q
φ : Rqf→P1 × P2.
0, m0m1,··· , m0mN−1, m2
N−1, m0, m1, ··· , mN−1 new variables {yi} N2+3N
Then we assign m2
··· , m2
linearization will produce N linear equations from every re-
cipient’s ciphertext in the form of
i=1
2
1, m1m2,··· , m1mN−1,
. This
T Y = σ2 − c2
i , i = 0, 1,··· , N − 1,
ai
2
)T . What’s more, a0, a1,··· ,
where Y = (y1, y2,··· , y N2+3N
aN−1 are linearly independent, unless there exists ci = 0
to make them linearly dependent possibly. Hence, we need
at least d N +3
2 e recipients’ ciphertexts and the corresponding
public keys to obtain a system of linear congruence equations
L × Y = S, where L is a N 2+3N
matrix, and S is
a constant vector. And we can ﬁnd m by solving the above
set of linear equations over Z.
Another way is to take the sum of the equation (3.1) for
i = 0, 1,··· , N − 1, which is equivalent to do the inner prod-
uct
× N 2+3N
2
2
(c − Bm)T (c − Bm) = rT r.
Note that rT r = N σ2, we get
mT BT Bm − 2cT Bm = N σ2 − cT c.
(3.2)
Then we treat (3.2) in the same way as above. This lineariza-
tion will produce one linear equation from every recipient’s
ciphertext in the form of aT Y = N σ2−cT c. Hence, we need
at least N 2+3N
recipients’ ciphertexts/public-keys pairs to
obtain a system of linear congruence equations L × Y = S.
Obviously, for another encoding method Br + m = c, ﬁrst
2
we get
det(L(R))r = eBc −eBm,
Since h(1) = 0 mod q, we have φ(h) = (0, ¯h) (therefore h
is not invertible in Rq), where ¯h denotes the reduction of h
modulo xN−1 + xN−2 + ··· + 1. Note that xN−1 + xN−2 +
··· + 1 is an irreducible polynomial, the proportion that the
(random) ¯h is invertible in P2 is very high probability (it’s
equal to 1 − q1−N ). We denote its inverse in P2 by ˜h, then
¯h ∗ ˜h = 1 over P2. Using Extended Euclidean Algorithm for
xN−1 + xN−2 + ··· + 1 and ¯h in Zq[x], we can get ˜h with
O(N 2) arithmetic operations (see [26], pp.71-72, Corollary
4.6). Meanwhile, using the above algorithm, we compute
polynomials u and v satisfying (xN−1 + xN−2 + ··· + 1)u +
(x − 1)v = 1. Then the Chinese Remainder Theorem tells
us that
0
h
−1((1, ˜h))
= φ
= (xN−1 + xN−2 + ··· + 1)u + (x − 1)v˜h
= 1 + (x − 1)v(˜h − 1)
mod(xN − 1)
in Rq and it uses O(N 2) arithmetic operations. Since
φ(h0 ∗ h) = (1, ˜h)(0, ¯h) = (0, 1), we can set
0 ∗ h = ω(x)(xN−1 + xN−2 + ··· + 1) + 1 mod q,
h
where ω(x) satisﬁes N ω(1) + 1 = 0 mod q. Hence, together
with q | dr, for r ∈ B(dr) we have
0 ∗ h ∗ r
h
= (1, x,··· , xN−1)
0BBB@
ω(x) + 1
ω(x)
...
ω(x)
ω(x)
. . .
ω(x) + 1 . . .
. . .
. . . ω(x) + 1
ω(x)
ω(x)
...
...
ω(x)
1CCCA r
= (1, x,··· , xN−1)r = r mod q.
Let
0BBB@
1
0
h0
h0
...
N−1 h0
h0
h0
N−1
h0
...
N−2
0
1CCCA
1
2
. . . h0
. . . h0
...
. . .
. . . h0
0
0
H
=
then we have
0
H
m + r = H
0
c mod q
from (2.3). Note that h00 = φ−1((1, ¯h)) is the invertible
element of h0, then H0 is an invertible circular matrix by
Theorem 2.3. Similarly, let ˆH = H0, b = H0c mod q, then