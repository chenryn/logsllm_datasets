### Experiment Overview and Objectives

Our primary objective was to conduct an experiment to understand the activities conducted through Internet Proxy servers. We had no malicious intent and aimed to observe and analyze the data. The experiment involved two main payloads:

1. **Identification of Bots and Theft of Non-HTTP-Only Cookies:**
   - This payload identified bots and stole cookies that were not marked as HTTP-Only, along with their associated URLs.
   
2. **Theft of Data from HTTP Forms:**
   - This payload intercepted and captured data sent via HTTP forms.

### Payload Details

#### Identification of Bots and URL Connections
We excluded HTTPS connections and HTTP-Only cookies from our payloads because we did not have a specific target and the information obtained was sufficient for our purposes. The first payload used the following JavaScript code:
```javascript
document.write("");
```
This allowed us to determine the connecting URL and identify any unsafe session cookies. This information provided insights into previously unvisited URLs and potential vulnerabilities.

#### Data Interception from HTTP Forms
To capture data from forms, we implemented a small script that hooked into form submission events using the following JavaScript code:
```javascript
// Script to hook form submit events
```

### Findings from the Anonymous Proxy Server

#### User Motivations
The primary reasons for using an anonymous proxy server are:
1. **Hiding the Source IP Address:** Users often seek to conceal their IP address to avoid being traced.
2. **Bypassing Network Restrictions:** Users may use proxies to access sites blocked by network administrators.

#### Notable User Activities

##### Scam Artists
1. **Nigerian Scammers:**
   - One user, with an IP address from India, claimed to sell Visa cards for working in the UK. He conducted a spam campaign requesting payments via Western Union.
   - Some recipients were skeptical, but others paid and shared personal data, expecting a Visa card that never arrived.

2. **Romance Scammers:**
   - Another type of scammer maintained fake profiles on various social networks, targeting victims with romantic interests.
   - These scammers, often based in Germany, would request money via Western Union under the pretense of paying for travel to meet the victim.

##### Hackers
- We observed hackers using WebShells through proxy servers to deface websites. One such defacement was made in real-time, and we discovered the location of the WebShell by intercepting a JavaScript file.

##### Intranet Access
- We found that some users configured our proxy server and accessed internal Intranet applications, potentially exposing sensitive data. This highlights the risk of using remote JavaScript files on an Intranet.

### Targeted Attacks

#### Analyzing JavaScript Files
To prepare a targeted attack, we analyzed the JavaScript files loaded by a specific website. For example, in a login page, if static JavaScript files are always loaded, attackers can force pre-caching of these files to infect victims.

#### Dynamic JavaScript Files
- Sites like Facebook use dynamically named JavaScript files, which prevents caching and makes this type of attack infeasible. However, many other sites, such as banks and institutions, use static JavaScript files, making them vulnerable to such attacks.

### Security Considerations

- **Caching and HTTPs:** We did not implement forcing the browser to cache infected files or intercept HTTPS communications to avoid raising suspicion.
- **Final Recommendations:**
  - Be cautious when using TOR networks and proxy systems, as they can be easily exploited.
  - Use up-to-date systems, firewalls, and anti-malware software.
  - Clear the browser cache and use private browsing mode.
  - Disinfect your system after using these services.

### Acknowledgments

We would like to thank Jon, Antonio, Pedro, Isabel from JAPI Tracing, the BeEF project team, colleagues from Informatica64, and Manu and Frank for their contributions to improving the security of the C&C.

### References

1. JS / Redirector.GA: [Link](https://www.microsoft.com/security/portal/Threat/Encyclopedia/Entry.aspx?Name=Trojan%3AJS%2FRedirector.GA&ThreatID=-2147328473)
2. XST Attack: [Link](http://jeremiahgrossman.blogspot.com.es/2007/04/xst-lives-bypassing-httponly.html)
3. Apache HTTP Only Cookie Disclosure: [Link](http://fd.the-wildcat.de/apache_e36a9cf46c.php)
4. Gaining Access to HTTP-Only Cookies in 2012: [Link](http://seckb.yehg.net/2012/06/xss-gaining-access-to-httponly-cookie.html)
5. BeEF Project: [Link](http://beefproject.com/)
6. RootedCON: [Link](http://www.rootedcon.es)