title:What Happens After You Are Pwnd: Understanding the Use of Leaked Webmail
Credentials in the Wild
author:Jeremiah Onaolapo and
Enrico Mariconti and
Gianluca Stringhini
What Happens After You Are Pwnd:
Understanding the Use of Leaked Webmail
Credentials in the Wild
Jeremiah Onaolapo, Enrico Mariconti, and Gianluca Stringhini
University College London
{j.onaolapo, e.mariconti, g.stringhini}@cs.ucl.ac.uk
ABSTRACT
Cybercriminals steal access credentials to webmail ac-
counts and then misuse them for their own proﬁt, re-
lease them publicly, or sell them on the underground
market. Despite the importance of this problem, the
research community still lacks a comprehensive under-
standing of what these stolen accounts are used for. In
this paper, we aim to shed light on the modus operandi
of miscreants accessing stolen Gmail accounts. We de-
veloped an infrastructure that is able to monitor the ac-
tivity performed by users on Gmail accounts, and leaked
credentials to 100 accounts under our control through
various means, such as having information-stealing mal-
ware capture them, leaking them on public paste sites,
and posting them on underground forums. We then
monitored the activity recorded on these accounts over
a period of 7 months. Our observations allowed us to
devise a taxonomy of malicious activity performed on
stolen Gmail accounts, to identify diﬀerences in the be-
havior of cybercriminals that get access to stolen ac-
counts through diﬀerent means, and to identify system-
atic attempts to evade the protection systems in place
at Gmail and blend in with the legitimate user activity.
This paper gives the research community a better un-
derstanding of a so far understudied, yet critical aspect
of the cybercrime economy.
Categories and Subject Descriptors
J.4 [Computer Applications]: Social and Behavioral
Sciences; K.6.5 [Security and Protection]: Unautho-
rized Access
Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for components of this work
owned by others than ACM must be honored. Abstracting with credit is per-
mitted. To copy otherwise, or republish, to post on servers or to redistribute to
lists, requires prior speciﬁc permission and/or a fee. Request permissions from
permissions@acm.org.
IMC 2016, November 14-16, 2016, Santa Monica, CA, USA
c(cid:13) 2016 ACM. ISBN 978-1-4503-4526-2/16/11. . . $15.00
DOI: http://dx.doi.org/10.1145/2987443.2987475
Keywords
Cybercrime, Webmail, Underground Economy, Malware
1.
INTRODUCTION
The wealth of information that users store in web-
mail accounts on services such as Gmail, Yahoo! Mail,
or Outlook.com, as well as the possibility of misusing
them for illicit activities has attracted cybercriminals,
who actively engage in compromising such accounts.
Miscreants obtain the credentials to victims’ online ac-
counts by performing phishing scams [17], by infect-
ing users with information-stealing malware [29], or by
compromising large password databases, leveraging the
fact that people often use the same password across
multiple services [16]. Such credentials can be used by
the cybercriminal privately, or can then be sold on the
black market to other cybercriminals who wish to use
the stolen accounts for proﬁt. This ecosystem has be-
come a very sophisticated market in which only vetted
sellers are allowed to join [30].
Cybercriminals can use compromised accounts in mul-
tiple ways. First, they can use them to send spam [18].
This practice is particularly eﬀective because of the
established reputation of such accounts: the already-
established contacts of the account are likely to trust
its owner, and are therefore more likely to open the
messages that they receive from her [20]. Similarly, the
stolen account is likely to have a history of good be-
havior with the online service, and the malicious mes-
sages sent by it are therefore less likely to be detected
as spam, especially if the recipients are within the same
service (e.g., a Gmail account used to send spam to
other Gmail accounts) [33]. Alternatively, cybercrim-
inals can use the stolen accounts to collect sensitive
information about the victim. Such information can
include ﬁnancial credentials (credit card numbers, bank
account numbers), login information to other online ser-
vices, and personal communications of the victim [13].
Despite the importance of stolen accounts for the under-
ground economy, there is surprisingly little work on the
topic. Bursztein et al. [13] studied the modus operandi
of cybercriminals collecting Gmail account credentials
through phishing scams. Their paper shows that crim-
inals access these accounts to steal ﬁnancial informa-
tion from their victims, or use these accounts to send
fraudulent emails. Since their work only focused on one
possible way used by criminals to steal user login cre-
dentials, it leaves questions unanswered on how general
their observations are, compared to credentials acquired
through other means. Most importantly, [13] relies on
proprietary information from Google, and therefore it
is not possible for other researchers to replicate their
results or build on top of their work.
Other researchers did not attempt studying the activ-
ity of criminals on compromised online accounts because
it is usually diﬃcult to monitor what happens to them
without being a large online service. The rare excep-
tions are studies that look at information that is pub-
licly observable, such as the messages posted on Twitter
by compromised accounts [18, 19].
To close this gap, in this paper we present a system
that is able to monitor the activity performed by at-
tackers on Gmail accounts. To this end, we instrument
the accounts using Google Apps Script [1]; by doing so,
we were able to monitor any time an email was opened,
favorited, sent, or a new draft was created. We also
monitor the accesses that the accounts receive, with
particular attention to their system conﬁguration and
their origin. We call such accounts honey accounts.
We set up 100 honey accounts, each resembling the
Gmail account of the employee of a ﬁctitious company.
To understand how criminals use these accounts af-
ter they get compromised, we leaked the credentials to
such accounts on multiple outlets, modeling the diﬀer-
ent ways in which cybercriminals share and get access to
such credentials. First, we leaked credentials on paste
sites, such as pastebin [5]. Paste sites are commonly
used by cybercriminals to post account credentials after
data breaches [2]. We also leaked them to underground
forums, which have been shown to be the place where
cybercriminals gather to trade stolen commodities such
as account credentials [30]. Finally, we logged in to
our honey accounts on virtual machines that were pre-
viously infected with information stealing malware. By
doing this, the credentials will be sent to the cybercrim-
inal behind the malware’s command and control infras-
tructure, and will then be used directly by her or placed
on the black market for sale [29]. We know that there
are other outlets that attackers use, for instance, phish-
ing and data breaches, but we decided to focus on paste
sites, underground forums, and malware in this paper.
We worked in close collaboration with the Google anti-
abuse team, to make sure that any unwanted activity by
the compromised accounts would be promptly blocked.
The accounts were conﬁgured to send any email to a
mail server under our control, to prevent them from
successfully delivering spam.
After leaking our credentials, we recorded any inter-
action with our honey accounts for a period of 7 months.
Our analysis allowed us to draw a taxonomy of the dif-
ferent actions performed by criminals on stolen Gmail
accounts, and provided us interesting insights on the
keywords that criminals typically search for when look-
ing for valuable information on these accounts. We
also show that criminals who obtain access to stolen ac-
counts through certain outlets appear more skilled than
others, and make additional eﬀorts to avoid detection
from Gmail. For instance, criminals who steal account
credentials via malware make more eﬀorts to hide their
identity, by connecting from the Tor network and dis-
guising their browser user agent. Criminals who obtain
access to stolen credentials through paste sites, on the
other hand, tend to connect to the accounts from lo-
cations that are closer to the typical location used by
the owner of the account, if this information is shared
with them. At the lowest level of sophistication are
criminals who browse free underground forums looking
for free samples of stolen accounts: these individuals do
not take signiﬁcant measures to avoid detection, and
are therefore easier to detect and block. Our ﬁndings
complement what was reported by previous work in the
case of manual account hijacking [13], and show that
the modus operandi of miscreants varies considerably
depending on how they obtain the credentials to stolen
accounts.
In summary, this paper makes the following contri-
butions:
• We developed a system to monitor the activity of
Gmail accounts. We publicly release the source
code of our system, to allow other researchers to
deploy their own Gmail honey accounts and fur-
ther the understanding that the security commu-
nity has of malicious activity on online services. To
the best of our knowledge, this is the ﬁrst publicly
available Gmail honeypot infrastructure.
• We deployed 100 honey accounts on Gmail, and
leaked credentials through three diﬀerent outlets:
underground forums, public paste sites, and vir-
tual machines infected with information-stealing
malware.
• We provide detailed measurements of the activ-
ity logged by our honey accounts over a period of
7 months. We show that certain outlets on which
credentials are leaked appear to be used by more
skilled criminals, who act stealthy and actively at-
tempt to evade detection systems.
2. BACKGROUND
Gmail accounts.
In this paper we focus on Gmail
accounts, with particular attention to the actions per-
formed by cybercriminals once they obtain access to
someone else’s account. We made this choice over other
webmail platforms because Gmail allows users to set up
scripts that augment the functionality of their accounts,
and it was therefore the ideal platform for developing
webmail–based honeypots. To ease the understanding
of the rest of the paper, we brieﬂy summarize the capa-
bilities oﬀered by webmail accounts in general, and by
Gmail in particular.
In Gmail, after logging in, users are presented with a
view of their Inbox. The inbox contains all the emails
that the user received, and highlights the ones that have
not been read yet by displaying them in boldface font.
Users have the option to mark emails that are important
to them and that need particular attention by starring
them. Users are also given a search functionality, which
allows them to ﬁnd emails of interest by typing related
keywords. They are also given the possibility to orga-
nize their email by placing related messages in folders,
or assigning them descriptive labels. Such operations
can be automated by creating rules that automatically
process received emails. When writing emails, content
is saved in a Drafts folder until the user decides to send
it. Once this happens, sent emails can be found in a
dedicated folder, and they can be searched similarly to
what happens for received emails.
Threat model. Cybercriminals can get access to ac-
count credentials in many ways. First, they can per-
form social engineering-based scams, such as setting
up phishing web pages that resemble the login pages
of popular online services [17] or sending spearphishing
emails pretending to be members of customer support
teams at such online services [32]. As a second way
of obtaining user credentials, cybercriminals can install
malware on victim computers and conﬁgure it to re-
port back any account credentials issued by the user to
the command and control server of the botnet [29]. As
a third way of obtaining access to user credentials, cy-
bercriminals can exploit vulnerabilities in the databases
used by online services to store them [6]. User creden-
tials can also be obtained illegitimately through tar-
geted online password guessing techniques [36], often
aided by the problem of password reuse across various
online services [16]. Finally, cybercriminals can steal
user credentials and access tokens by running network
sniﬀers [14] or mounting Man-in-the-Middle [11] attacks
against victims.
After stealing account credentials, a cybercriminal
can either use them privately for their own proﬁt, re-
lease them publicly, or sell them on the underground
market. Previous work studied the modus operandi of
cybercriminals stealing user accounts through phishing
and using them privately [13]. In this work, we study
a broader threat model in which we mimic cybercrimi-
nals leaking credentials on paste sites [5] as well as mis-
creants advertising them for sale on underground fo-
rums [30]. In particular, previous research showed that
cybercriminals often oﬀer a small number of account
credentials for free to test their “quality” [30]. We fol-
lowed a similar approach, pretending to have more ac-
counts for sale, but never following up to any further
inquiries. In addition, we simulate infected victim ma-
chines in which malware steals the user’s credentials and
sends them to the cybercriminal. We describe our setup
and how we leaked account credentials on each outlet
in detail in Section 3.2.
3. METHODOLOGY
Our overall goal was to gain a better understanding
of malicious activity in compromised webmail accounts.
To achieve this goal, we developed a system able to
monitor accesses and activity on Gmail accounts. We
set up accounts and leaked them through diﬀerent out-
lets. In the following sections, we describe our system
architecture and experiment setup in detail.
3.1 System overview
Our system comprises two components, namely, honey
accounts and a monitor infrastructure.
Honey accounts. Our honey accounts are webmail ac-
counts instrumented with Google Apps Script to mon-
itor activity in them. Google Apps Script is a cloud-
based scripting language based on JavaScript, designed
to augment the functionality of Gmail accounts and
Google Drive documents, in addition to building web
apps [4]. The scripts we embedded in the honey ac-
counts send notiﬁcations to a dedicated webmail ac-
count under our control whenever an email is opened,
sent, or “starred.” In addition, the scripts send us copies
of all draft emails created in the honey accounts. We
also added a “heartbeat message” function, to send us
a message once a day from each honey account, to at-
test that the account was still functional and had not
been blocked by Google. In each honey account, we hid
the script in a Google Docs spreadsheet. We believe
that this measure makes it unlikely for attackers to ﬁnd
and delete our scripts. To minimize abuse, we changed
each honeypot account’s default send-from address to
an email address pointing to a mailserver under our
control. All emails sent from the honeypot accounts
are delivered to the mailserver, which simply dumps
the emails to disk and does not forward them to the
intended destination.
Monitoring infrastructure. Google Apps Scripts are
quite powerful, but they do not provide enough informa-
tion in some cases. For example, they do not provide lo-
cation information and IP addresses of accesses to web-
mail accounts. To track those accesses, we set up exter-
nal scripts to drive a web browser and periodically login
into each honey account and record information about
visitors (cookie identiﬁer, geolocation information, and
times of accesses, among others). The scripts navigate
to the visitor activity page in each honey account, and