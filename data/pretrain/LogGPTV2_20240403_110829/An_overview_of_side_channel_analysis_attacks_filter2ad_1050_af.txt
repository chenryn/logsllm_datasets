 [24]
 [112]
Physical/logical  [25], [26]
Logical
Logical
Physical
Physical
Physical
Physical
Physical
Logical
Physical






Application/action
inference
 [101], [102]
 [14]
 [103]
 [112], [113]






Identify
users/devices
 [14]
 [14]


 [129]–[131]
 [132], [133]
 [132], [133]

 [135]

Targets
User input
 [11], [49], [102]


 [113]

 [125], [126]


 [9], [10], [12], [117]–[124], [137]
 [127], [128], [139]
Crypto



 [108]–[111], [113]






Location
inference
 [13]



 [138]





Privilege
escalation









 [140]
Hemminki et al. [144] inferred the transportation mode, e.g.,
train, bus, metro, etc., via the accelerometer readings. Besides
the accelerometer and the gyroscope, ambient sensors can also
be used to infer driving routes. Ho et al. [138] exploited the
correlation between sensor readings of the barometer sensor
and the geographic elevation to infer driving routes.
i.e., boolean information that
Even less obvious side-channels that allow to infer driving
routes and locations are the speaker status information (e.g.,
speaker on/off) and the power consumption (available via the
procfs). More speciﬁcally, Zhou et al. [14] observed that the
Android API allows to query whether or not
the speaker
is currently active,
indicates
whether or not any app is playing sound on the speakers.
They exploit this information to attack the turn-by-turn voice
guidance of navigation systems. By continuously querying
this API,
they determine how long the speaker is active.
This information allows to infer the speech length of voice
direction elements, e.g., the length of “Turn right onto East
Main Street”. As driving routes consist of many such turn-by-
turn voice guidances, ﬁngerprinting driving routes is possible.
Michalevsky et al. [13] observed that the power consump-
tion (available in the procfs) is related to the strength of the
cellular signal, which depends on the distance to the base
station. Given this information, they inferred a user’s location.
Speech Recognition. Eavesdropping conversations repre-
sents a severe privacy threat. Thus, a dedicated permission
protects the access to the microphone. However, acoustic
signals, such as human speech, in the vicinity of a mobile
device also inﬂuence the gyroscope measurements.
Attacks. Michalevsky et al. [137] exploited the gyroscope
sensor to measure acoustic signals in the vicinity of the
phone and to recover speech information. Although they only
consider a small set of vocabulary, i.e., digits only, their work
demonstrates the immense power of gyroscope sensors in
today’s smartphones. By exploiting the gyroscope sensor to
eavesdrop on a user’s conversations they are able to bypass
the permission required to access the microphone.
Soundcomber. Customer service departments often rely on
automated menu services to interact with customers over the
phone. A well-known example are the interactive voice re-
sponse systems supported by telephone services that use dual-
tone multi-frequency (DTMF) signaling to transmit entered
numbers, i.e., an audio signal is transmitted for each key.
Attacks. As DTMF tones are also played locally, Schlegel et
al. [139] showed that by requesting permission to access the
microphone, these tones can be recorded and used to infer
sensitive input provided to these automated menu services.
More speciﬁcally, they exploit this information to infer credit
card numbers entered while interacting with such interactive
voice response systems of credit card companies.
B. Active Attacks
An area of research that gains increasing attention among
the scientiﬁc community are active side-channel attacks that
can be exploited via software execution only. The most promi-
nent example is the so-called Rowhammer attack that exploits
DRAM disturbance errors to conduct software-induced fault
attacks.
Rowhammer. The increasing density of memory cells
within the DRAM requires the size of these cells to decrease,
which in turn decreases the charging of single cells but also
causes electromagnetic coupling effects between cells.
Attacks. Kim et al. [145] demonstrated that these obser-
vations can be used to induce hardware faults, i.e., bit ﬂips
in neighboring cells, via frequent memory accesses to the
main memory. Thereby, they showed that frequent memory
accesses in the attacker’s memory allow to induce faults (bit
ﬂips) in the victim’s memory. Seaborn and Dullien [146]
demonstrated how to possibly exploit
these bit ﬂips from
native code and Gruss et al. [147] showed that such bit ﬂips
can even be induced via JavaScript code. A recent paper [140]
demonstrates the exploitation of the Rowhammer bug to gain
root privileges on Android smartphones by inducing bit ﬂips
from an unprivileged application.
C. Overview
Table IV summarizes the discussed attack categories and the
targeted information. The target “application/action inference”
also refers to sensitive information that can be inferred from
speciﬁc actions. For example, diseases conditions, stock port-
folios, etc. can be inferred from data-usage statistics (cf. [14]).
The target “user input” refers to PIN and pattern inputs on
the screen, inter-keystroke timing information, and also the
DTMF tone exploitation [139]. Again an attack category not
targeting speciﬁc information (yet), which is indicated by an
, represents a possible gap that might be closed in future
research.
IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. XX, NO. Z, MONTH YYYY
15
Differential computation analysis [55]
Data-usage statistics [14]
Fingerprinting devices [135]
Network trafﬁc analysis [96]
Page deduplication [24]
procfs leaks [25]
Power analysis [53]
EM analysis [50]
EM analysis [99]
USB power analysis [90]
Reﬂections/hands [62]
Wi-Fi signal monitoring [91]
Smudges [56]
NAND mirroring [80]
Laser/optical [75]
Clock/power glitch [71]
Temperature variation [78]
EMFI [72]
Differential computation analysis [74]
Network trafﬁc analysis [81]
Microarchitectural attacks [6]
Location inference [141]
Fingerprinting devices [130]
Speech recognition [137]
Soundcomber [139]
Sensor-based keyloggers [9]
Rowhammer [140]
Microarchitectural attacks [6]
l
a
c
i
g
o
L
s
e
i
t
r
e
p
o
r
P
)
W
S
(
L
E
N
N
A
H
C
E
D
I
S
l
a
c
i
s
y
h
P
s
e
i
t
r
e
p
o
r
P
)
W
H
(
l
a
c
i
s
y
h
P
s
e
i
t
r
e
p
o
r
P
)
W
H
(
l
a
c
i
g
o
L
s
e
i
t
r
e
p
o
r
P
)
W
S
(
e
v
i
s
s
a
P
K
C
A
T
T
A
F
O
E
D
O
M
e
v
i
t
c
A
Chip
Device
Wire/Communication
Software