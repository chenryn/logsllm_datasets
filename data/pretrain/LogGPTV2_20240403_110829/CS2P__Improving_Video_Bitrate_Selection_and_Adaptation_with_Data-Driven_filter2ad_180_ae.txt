### Performance of CS2P in Real-World Deployments

#### Custom Multi-City Deployment
We conducted two rounds of 4-day experiments to compare the performance of CS2P + MPC against two existing methods: BB [27] and HM14 + MPC [47]. The first round, from January 11 to January 14, 2016, compared CS2P + MPC with BB. The second round, from May 16 to May 19, 2016, compared CS2P + MPC with HM14 + MPC. Each round involved over 200 client video players across five university campuses in four different cities in China, all connecting to a centralized server deployed in our lab.

For each experiment, we used data collected on the previous day to train our model, which was then applied for throughput prediction and bitrate adaptation on the current day. When a new client session started, it randomly selected one of the two bitrate adaptation strategies (CS2P + MPC or HM + MPC/BB) with equal probability. The video clients were Google Chrome web browsers running on Linux, Mac OS X, and Windows, using the V8 JavaScript engine. The video server was a simple HTTP server based on Node.js (version 0.10.32).

**Table 4: QoE Improvement by CS2P + MPC Compared with HM + MPC and BB**

| Metrics             | CS2P + MPC vs. HM + MPC | CS2P + MPC vs. BB |
|---------------------|-------------------------|--------------------|
| AvgBitrate          | 10.9%                   | 9.3%               |
| GoodRatio           | 2.5%                    | 17.6%              |
| Bitrate Variability | -2.3%                   | 5.6%               |
| Startup Delay       | 0.4%                    | -3.0%              |
| Overall QoE         | 3.2%                    | 14.0%              |

**Key Findings:**
- CS2P + MPC significantly outperformed BB in various QoE metrics, except for startup delay. Specifically, it increased the average bitrate by 9.3%, reduced midstream bitrate switches by 5.6%, and improved GoodRatio by 17.6%, resulting in an overall QoE improvement of 14%.
- CS2P + MPC also outperformed HM + MPC in most QoE metrics, except for bitrate variability. It improved the average bitrate by 10.9%, GoodRatio by 2.5%, and startup delay by 0.4%, leading to an overall QoE improvement of 3.2%.

**Note:** Due to the limited number of volunteer clients, we could not test all three strategies simultaneously. Additionally, the accuracy of cross-session prediction in CS2P is lower than in trace-driven simulations, suggesting that the QoE gain is a conservative estimate. We believe that CS2P's performance would be even more significant in large-scale scenarios with more client-side measurements.

#### Deployment in a Large Commercial VoD Service
We also deployed CS2P in the VoD system of iQIYI, where it was used to estimate the total rebuffering time at the beginning of fixed-bitrate streaming sessions. At the start of each session, CS2P predicted the throughput \( T_i \) for all future epochs \( i \), and calculated the total downloading time \( DT_p \) given the size of each chunk. The predicted rebuffering time \( RT_p \) was then determined as \( RT_p = \max(0, DT_p - X) \), where \( X \) is the video length. We compared \( RT_p \) with the actual measured rebuffering time \( RT_m \), focusing on sessions with rebuffering events (\( RT_m > 0 \)).

**Figure 13: Prediction Error on Total Rebuffering Time**

The results showed that the predicted rebuffering time was close to the actual value, with over 70% of sessions achieving a prediction error of â‰¤20%. Our discussions with iQIYI engineers suggest that these preliminary results are promising for informing their bitrate and CDN server selection logic. There are ongoing plans for a more comprehensive evaluation of CS2P in their production system.

### Related Work
- **Path Properties Measurement:** Studies have shown the prevalence and persistence of network bottlenecks, constancy of various network metrics, longitudinal patterns of cellular performance, intra-session RTT variation, and spatial similarity of network performance. In contrast, our focus is on throughput stability and predictability.
- **Bandwidth Measurement:** Unlike prior path mapping efforts, CS2P uses a data-driven model based on available session features and does not require any inference of path information. Other approaches use packet-level probing to estimate available bandwidth and Internet path capacity but require full client/server-side control, which is often infeasible in real-world settings.
- **Throughput Prediction:** Previous work has developed analytical models of TCP throughput, time-series models, and machine-learning models to predict session throughput. However, these approaches do not provide the necessary prediction accuracy for video adaptation algorithms.
- **Video QoE Prediction:** Jiang et al. proposed CFA [29] to predict video QoE based on historical QoE measurements. While CFA and CS2P share similar insights, they differ in that CFA predicts application-layer quality using both video-specific and network-specific features, whereas CS2P predicts network-layer throughput using only network-specific features.
- **Adaptive Video Streaming:** Our work is in the context of Dynamic Adaptive Streaming over HTTP (DASH), where accurate throughput prediction is critical for video quality. Prior work often assumes that throughput is unstable and unpredictable, leading to reliance on player buffer occupancy for bitrate control. Recent work argues that adaptive video streaming can benefit from accurate throughput prediction, but lacks concrete prediction algorithms. Our contribution is in developing an effective throughput predictor and demonstrating its utility for DASH.

### Conclusions
Designing good bitrate selection and adaptation algorithms is crucial for delivering a high-quality video experience. Accurate throughput prediction can improve initial bitrate selection and midstream adaptation. Our work bridges this gap by providing a large-scale measurement analysis of throughput variability and developing the CS2P framework. CS2P uses cross-session stateful prediction models that can be easily integrated into client- and server-side adaptation algorithms. We demonstrate the benefits of CS2P through both trace-driven analysis and pilot deployments, showing that it outperforms prior work in throughput prediction accuracy and video QoE.

### Acknowledgments
We thank Menggang Tan, Jia Wang, Ling Cai, Yongqiang Dong, and Jing Liu for their help in deploying the multi-city experiments, and all the volunteers who participated. We also thank Keith Winstein for shepherding our paper and SIGCOMM reviewers for their feedback. This work is supported in part by the National Basic Research Program (2012CB315802) and the Natural Science Foundation of China (61379133, 61133015). Additional funding was provided by NSF (CNS-1345305) and a Juniper Networks Fellowship.

### References
[References listed as provided in the original text]