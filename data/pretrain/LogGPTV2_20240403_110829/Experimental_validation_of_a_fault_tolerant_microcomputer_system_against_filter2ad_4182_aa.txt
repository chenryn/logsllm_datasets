title:Experimental validation of a fault tolerant microcomputer system against
intermittent faults
author:Joaquin Gracia-Moran and
Daniel Gil-Tomas and
Luis J. Saiz-Adalid and
Juan Carlos Baraza and
Pedro J. Gil-Vicente
2010 IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Experimental 
Validation 
of a Fault Tolerant Microcomputer 
System against 
Intermittent 
Faults 
* 
J. Gracia-Moran, 
D.Gil-Tomas, 
L.J. Saiz-Adalid, 
J.C. Baraza, P.J. Gil-Vicente 
Grupo de Sistemas 
Universidad 
Tolerantes 
Politecnica 
a Fallos (GSTF) -Instituto 
ITACA 
de Valencia, 
Valencia, 
Spain 
E-mail: 
(jgracia.dgil.ljsaiz.jcbaraza.pgil}@disca.upv.es 
Abstract 
As technologies 
arise. 
shrink, new kinds of faults 
are part of these new faults. 
They 
The main 
in modern 
of this work is to improve the dependability 
challenge 
by injecting 
mechanisms. 
and permanent 
of fault tolerance 
Up to now, transient 
also intermittent 
faults. 
we have compared intermittent 
faults 
Intermittent 
faults 
are expected to be an increasing 
VLSI circuits. 
faults used to be injected for the experimental 
validation 
objective 
assessment 
Furthermore, 
impact with the influence 
faults. 
of intermittent 
system with some well known fault detection 
recovery mechanisms. 
VHDL-Based 
a systematic 
and exhaustive 
intermittent 
faults 
mechanisms. 
permanent 
accurate 
To carry out this study, we have injected 
in a fault-tolerant 
and 
used lies in 
which allows 
technique, 
Results 
They must be taken into account 
faults to implement 
The methodology 
dependability 
impact on recovery 
Fault Injection 
and transient 
and permanent 
assessment. 
have a notable 
of transient 
analysis. 
microcomputer 
besides 
show that 
faults 
bursts 
an 
be fixed by repair. 
may be activated 
voltage 
Additionally, 
or deactivated 
changes 
or frequency 
[2]. 
intermittent 
faults 
by temperature, 
as well as their effects, 
and models of 
On the other hand, fault mechanisms 
and permanent  faults, 
transient 
have been widely studied 
tolerance 
tolerate 
has not been done very frequently 
faults. 
Nevertheless, 
mechanisms 
them [6][7]. 
[3][4][5], 
and different 
fault 
(FTMs) have been designed 
this type of studies 
to 
for intermittent 
In previous works 
[8][9], 
we generated 
fault models 
faults at logic and R TL abstraction 
for intermittent 
levels, 
and injected 
these fault models in the VHDL 
model of a commercial 
in order to 
study their impact on the system behavior. 
works, the influence 
parameters 
microcontroller 
In these 
fault and system 
was analyzed. 
of different 
After this analysis, 
next step is to study the impact 
(FTSs). 
in Fault-Tolerant 
Systems 
faults 
of intermittent 
The questions 
that emerge are: What happens when a 
FTS is affected by intermittent 
faults? 
detection 
mechanisms 
intermittent 
faults? 
and recovery 
Are current 
fault 
enough to tolerate 
1. Introduction 
process 
variations 
As the complexity 
of the manufacturing 
more residues 
and process 
in deep submicrometric 
are 
and nanometric 
ICs, 
Also, this 
wear-out 
of intermittent 
faults. 
by special 
may be augmented 
the presence 
increases, 
present 
increasing 
type of faults 
mechanisms 
[1]. 
Even though transient 
and intermittent 
faults 
provoke errors manifested 
are activated 
intermittent 
faults 
location, 
and so they are usually 
Alternatively, 
eliminates 
an intermittent 
fault, 
whereas replacing 
grouped in bursts. 
the affected part 
transient 
faults 
cannot 
in a similar way, 
repetitively 
in the same 
The purpose of this work is to answer these 
different 
To carry out this objective, 
Fault Injection, 
can tolerate 
we have used 
system that 
and well known FTMs. By using 
if these 
In this 
questions. 
the VHDL model of a microcomputer 
implements 
we have checked 
VHDL-based 
mechanisms 
intermittent 
faults. 
way, we intend to improve traditional 
system validation 
permanent 
injection 
validate 
only transient 
and 
of this paper is the 
faults in a FTS in order to 
faults. 
of intermittent 
its FTMs. 
based on injecting 
The main novelty 
This work is organized 
as follows. 
Section 
2 depicts 
the fault injection 
description 
injection 
environment, 
which includes 
a brief 
and the fault 
of the fault models injected 
tool used. Section 
3 describes 
the VHDL 
fault-tolerant 
• 
This work has been partially 
funded by the Spanish Government under the project "Sistemas 
empotrados 
seguros y confiables basados en 
componentes" 
(TIN2009-13825). 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
413 
DSN 2010: Gracia-Moran 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:48 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
microcomputer 
parameters, 
obtained. 
and a proposal 
Finally, 
of future work. 
model and the fault injection 
while Section 4 discusses 
the results 
is not necessary 
easy to apply. 
to modify the VHDL code and it is 
Section 
5 provides 
some conclusions 
2. Fault Injection Environment 
3. Fault Injection Experiments 
3.1. Microprocessor 
System 
When injecting 
We have used VHDL-based 
its flexibility, 
controllability 
Fault Injection 
due to 
as well as the high observability 
and 
of all the modeled components. 
issue is the 
of the fault models to be used in the 
as they must be representative 
an important 
faults, 
of real faults. 
the fault mechanisms 
studying 
definition 
injection, 
This task requires 
considering 
the features 
The intermittent 
fault models used in this work 
of the technology 
used. 
systems 
in [8][9]. 
a set of intermittent 
faults 
were deduced and presented 
we selected 
computer 
well as fault mechanisms 
and wear-out 
set of fault models at logic (gate) 
which can be simulated 
levels 
by means of fault logging 
to process 
[2][11][12]
In these works, 
observed 
in real 
as 
related 
[13]. Then, we developed 
into VHDL models. 
[2][10], 
variations 
and RTL abstraction 
a 
Table 1 shows some examples 
of the studied 
faults 
intermittent 
the faults 
To inject 
by our research 
Injection 
Tool) [14]. 
and the associated 
fault models. 
we have used a tool developed 
group called 
VFIT (VHDL-based 
Fault 
were 
parity 
detection 
and watchdog 
The different 
fault injection 
of the MARK2 processor 
whose block diagram is 
with cold 
experiments 
out on the VHDL model of a 16-bit fault­
microcomputer, 
carried 
tolerant 
shown in Figure 1. The system  is  duplex 
stand-by sparing, 
timer. 
are an enhanced 
Both main and spare processors 
version 
[17]. It is a simple 
FTS, but its structure 
in non-critical 
[7]. 
availability 
systems 
architecture 
(dual with cold spare) is common 
and high 
of the model is 
by the main and spare CPUs (CPUA and 
the RAM memory (MEM), the 
port (PORTOUT),  the 
(CLK), the 
(GENINT), 
composed 
CPUB, respectively), 
output parallel 
controller 
watchdog 
two back-off 
and two AND gates (PAND2A, PAND2B). 
the clock generator 
(SYSINT), 
timer (WD), the pulse generator 
FTS such as long-life 
cycle generators 
The structural 
(TRGENA, TRGENB) 
interrupt 
applying 
which consists 
VFIT runs on PC computers 
under 
(or compatible) 
faults 
commands 
the simulator 
on modifying the value or 
of the model at 
faults 
Windows®. VFIT is capable of injecting 
automatically 
technique, 
timing of the signals 
simulation 
saboteurs 
process 
insertion 
mutants 
used the technique 
time. It is also feasible 
using 
and mutants [15], but in this case, this 
of the user because 
the 
and the generation 
of 
and/or variables 
to inject 
In this work we have 
as it 
commands, 
needs the intervention 
are not yet automatic. 
based on simulator 
of the saboteurs 
by a watchdog  timer. 
mechanisms 
Several 
FTMs have been added to increase 
system 
check in memory, and program 
mechanisms 
flow check performed 
dependability. 
The error detection 
(EDMs) include 
parity 
control 
The error recovery 
introduction 
of a back-off 
parity error detection, 
by the watchdog 
detected 
timer, 
processor 
in case of permanent 
error detections 
be configured 
system and its FTMs can be found in [16]. 
required 
in the system. 
(ERMs) include 
the 
(instruction 
retry) 
cycle after 
when errors are 
checkpointing 
The number of 
the spare CPU can 
about the 
and starting 
errors. 
More details 
to activate 
the spare 
Table 1. Some intermittent 
faults mechanisms 
and models [9] 
Causes 
Places 
Fault mechanisms  Type offault 