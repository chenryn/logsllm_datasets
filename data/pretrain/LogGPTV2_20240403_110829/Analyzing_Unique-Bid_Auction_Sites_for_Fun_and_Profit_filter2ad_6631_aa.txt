title:Analyzing Unique-Bid Auction Sites for Fun and Profit
author:Ory Samorodnitzky and
Eran Tromer and
Avishai Wool
Analyzing Unique-Bid Auction Sites for Fun and Proﬁt
Ory Samorodnitzky
Dept. of Computer Science
Tel Aviv University
PI:EMAIL
Eran Tromer
Avishai Wool
Dept. of Computer Science
School of Electrical Engineering
Tel Aviv University
PI:EMAIL
Tel-Aviv University
yash@PI:EMAIL
Abstract
Unique-Bid auction sites are gaining popularity on the
Internet in recent years. We have managed to extract dy-
namic temporal bidding data from such a site, using a back-
propagation algorithm for analysis of side signals. This
offered us rare insights on actual bidding strategies used
by actual bidders, such as bidding-bursts, late-bidding and
position-targeted bidding. We constructed an agent-based
model simulating these behaviors, and validated it using
the extracted bidding data. This model allowed us to ex-
periment with different strategies of our own. We devised a
set of automated winning strategies that performed well on
our simulated environment. Finally, we demonstrated some
of our strategies against a commercial auction site, achiev-
ing a 91% win rate and over 1000 UK pounds proﬁt.
1 Introduction
1.1 Background
In recent years we have come to see a new type of auc-
tion sites gaining attention from Internet consumers. Of-
ten referred to as Unique-Bid auctions, these sites introduce
an innovative selling mechanism. Each bidder can make
as many bids as he wants, paying a ﬁxed amount for each.
Bids are expressed at cents granularity1 and remain private.
The winning bid is the highest bid made by a single par-
ticipant, hence the name “unique”. The winner pays the
winning bid as well as the ﬁxed amount for each bid he
made to receive the goods. The losers also pay for their
bids and suffer negative gain. If some bid value is bid more
than once then all its instances are disqualiﬁed, and the next
highest unique bid is the winning candidate. The auction
ends after two conditions are met: a predeﬁned number of
bids is received, and the closing time is reached. Both are
1Below, we represent bid values in decimal notation, omitting currency.
Granularity is always 0.01 (i.e., penny, cent, etc.).
published and dynamically updated. The former allows the
auctioneer to protect his interests, by assuring proﬁtability.
As goods are usually sold in under 10% of the retail value,
and sometimes even under 1%, it is not surprising that con-
sumers are showing increased interest in this selling mech-
anism. A Lowest-Unique-Bid auction counterpart exists as
well, where the winning bid is the lowest. Our papers fo-
cuses on the Highest-Unique-Bid type, but all our ﬁndings
are relevant to the Lowest-Unique-Bid type as well.
In order to differentiate these games from pure lotteries,
which are banned in some countries, some sites allow the
bidders to see where other participants are positioned, with-
out exposing their actual bids during the course of the auc-
tion. These are sometimes combined with private signals,
notifying a bidder after each bid whether his bid is unique
or not. If the bid is unique, the bidder is notiﬁed of his po-
sition among the qualiﬁed bids. If not, the bidder is notiﬁed
of the unique bid position closest to his disqualiﬁed one.
1.2 Related Work
Standard auction theory is a well established domain,
(see [17, 21, 18] for further reading). Unique-Bid auc-
tions in particular have been the subject of research in re-
cent years. Much of the research in the ﬁeld of Unique-Bid
auctions has been analytical, aiming to describe the system
in equilibrium. As these analyses are generally hard, re-
searchers introduced simplifying restrictions to the general
case. Houba et al. [13] and Rapaport et al. [25] ﬁnd symmet-
ric mixed strategies equilibrium in the Lowest-Unique-Bid
case where the bidders bids are randomized over a consec-
utive set of bids that contains the minimum possible bid.
These, however, analyze the case where bidders are only al-
lowed a single bid and the number of participants is known
in advance. Another single-bid equilibrium analysis by Ra-
viv and Virag [26] assumes that the win value is much
greater than the winning bid, allowing the assumption of
a constant payoff. Eichberger and Vinogradov [10] analyze
the more realistic multi-bid case, but restrict the number of
participants to a few individuals. A recent work by Pigolotti
et al. [24] tries to harness the statistical-mechanics notion
of a grand canonical ensemble to calculate the equilibrium
distribution of strategies derived by a large set of Internet
auctions ﬁnal state results. Gallice [11] was the ﬁrst to in-
corporate the presence of the notiﬁcation signals into his
equilibrium analysis, showing that these encourage bidders
to abandon the equilibrium, arguing that this irrationality is
an important factor making the Unique-Bid auctions prof-
itable. Another work discussing a clear divergence from
equilibrium is that by Scarsini et al. [27], where the authors
note an interesting phenomenon of recurring winners, sug-
gesting the existence of sophisticated strategic bidders. By
observing real auctions results, the authors try to extract ac-
tual bidding strategies and devise some of their own, but
admit that without actual dynamic temporal data, such anal-
ysis is very limited.
While these works contribute much to our understanding
of Unique-Bid auctions, they do not fully model or predict
the behaviors of real bidders in real auctions.
In partic-
ular, our extracted real-auction data shows that individual
bidders do not conform to the suggested equilibrium so-
lutions. Thus, there is a need for a construction of a dif-
ferent model, and we suggest the agent-based model ap-
proach. Building statistical models based on empirical be-
havior of bidders in traditional online auctions was reported
by [8, 20, 15, 14, 28].
Attempts at deducing bidding behaviors and strategies
can be found in works such as Ariely et al. [6] showing how
bidders are inﬂuenced by initial price information set by the
seller, or Bajari and Hortacsu [7] showing that in a common
value environment, late-bidding is an equilibrium behavior.
Mizuta and Ken [22] simulate a bidding environment with
early and late bidders and ﬁnd out that early bidders win at a
lower price, but with lower success rate. Bertsimas et al. [9]
try to ﬁnd strategies for multiple simultaneous or overlap-
ping online auctions, and Jian and Leyton-Brown[16] aim
at estimating the distributions of the number of bidders and
bid amounts from incomplete auction data.
1.3 Contributions
In this paper we analyze the Highest Unique-Bid Auc-
tions (HUBA) from a behavioral point of view.
Data extraction. Our ﬁrst contribution is our ability to
extract dynamic temporal data from a popular Israeli HUBA
site. We successfully extracted about a hundred auctions
traces, containing every bid and its time. Prior works were
restricted by analyzing only the ﬁnal, degenerate snapshot
of bids that the auction sites publish after the auction has
terminated. We recover the missing information using a
back-propagation algorithm, working from the exposed end
results, back through all of the auction’s transactions with
partial information.
Bidder modeling. The extracted information allowed
us to inspect and understand various observed behaviors to
a greater extent. Based on observed repeated patterns in
the collected data, we built an agent-based computational
model, allowing the simulation of the auctions.
Automated winning strategies. We devised automated
bidding strategies, which base their decision on real-time
data extraction from private signals and side information.
Our approach uses strategic bids, which are unlikely to win
but induce private signals that let us subsequently deduce
winning bids. We tested these strategies in simulations us-
ing the aforementioned models, observing a win rate of over
93% and a positive return of investment. For veriﬁcation,
we used the simplest of our strategies in an actual lead-
ing UK HUBA site, different than the one we extracted our
data from. Our automated strategy experienced a 91% win
rate, and we were able to win over £1000 (which we did not
claim).
2 Acquisition of Temporal Bidding Data
from Completed Auctions
2.1 Overview
Real data sets of Unique-Bid auction end results tend to
hide the timing information of bids over the course of the
auction. Data sets of completed auctions usually exhibit a
table of the exposed unqiue bids and a table of the exposed
disqualiﬁed bids representing only the state of the auction
after the last transaction. While these data sets offer many
insights into the probabilities of the bid values or equilib-
rium solutions, they make insights into dynamic bidding
behavior difﬁcult and inhibit attempts at building tractable
models, as noted by Scarsini et al. [27].
In this work we show a method by which individual-level
dynamic information of real auctions can be extracted. This
method was successfully tested on an Israeli HUBA site and
resulted in a detailed data set of 90 real auctions collected
during a period of two months.
As noted by Gallice [11], most UBA sites expose infor-
mation to the bidders in the form of public side signals as
well as private signals, visible only to the bidder perform-
ing the bid. These signals aim at serving both the bidders
and the auctioneer. The bidders can better prepare their next
steps, while the auctioneer’s site distinguishes itself from a
pure lottery game. With recent issues surrounding the legal-
ity of the UBA in different countries (cf. [29]), this distinc-
tion helps the auctioneer step away from allegedly practic-
ing a gambling game.
The public side signals are usually in the form of two
positional tables. These tables hold the positions of all the
qualiﬁed and the disqualiﬁed bids after every transaction
Table 1. Notation
the table of qualiﬁed bids, holding bidder ids
and bids. Elements in Q are sorted by bid
value, and thus conform to the strict total
order  1
table Q instance at time t
number of qualiﬁed bids at time t
table DQ instance at time t
number if disqualiﬁed bids at time t
Q
DQ
C(t)
Q(t)
|Q(t)|
DQ(t)
|DQ(t)|
during the course of the auction. These tables hide the ac-
tual bids but reveal the bidders ids and their positions. Upon
the completion of the auction, the bids are exposed, but we
remain with a qualiﬁed and disqualiﬁed bids tables repre-
senting the state of the auction only after the last transac-
tion. The private signals are sent to a bidder after each bid
attempt, notifying whether the bid is qualiﬁed or disqual-
iﬁed. A qualiﬁcation notiﬁcation arrives with the position
of the qualiﬁed offer, while the disqualiﬁcation notiﬁcation
arrives with the closest qualiﬁed position to the disqualiﬁed
bid. See Figure 1 for an example of public and private sig-
nals, and Table 1 for notation.
In this work, we aimed at recovering the bids of both
tables after each transaction, revealing the exact bid made
by each bidder at every step. We show that by sampling
the partial information tables rapidly and saving an instance
of the tables at each transaction during the auction, we
can utilize a back-propagation algorithm, starting from the
fully exposed information of the last transaction, going back
through the saved instances, recovering the missing table
information. By doing so we reveal the dynamic temporal
behavior of all the bidders.
2.2 The Back-Propagation Algorithm (BPA)
The BPA is given as input the Q and DQ tables of the
last transaction with both the bidders’ ids and bids exposed,
together with a set of redacted Q and DQ tables sampled
during the course of the auction, where only the bidders’
ids are exposed. Based on observed changes of these tables
between consecutive transactions, we can back-propagate
the bids until all the tables contain both bids and ids. Figure
2 depicts the results of applying the BPA to the example in
Figure 1. We added actual bids to the ﬁnal results in t5, and
let the BPA propagate them back to t1.
If we are able to capture a single-bid transaction at time
t + 1 then one of three conditions can be observed:
1. Qualiﬁcation: if a player has successfully bid a quali-
ﬁed bid, we see:
|Q(t + 1)| − |Q(t)| = 1
|DQ(t + 1)| − |DQ(t)| = 0
2. Burn: a player has bid an already qualiﬁed bid. This
results in both bids being disqualiﬁed:
|Q(t + 1)| − |Q(t)| = −1
|DQ(t + 1)| − |DQ(t)| = 2
3. Disqualiﬁcation:
burned before:
if a player’s bid has already been
|Q(t + 1)| − |Q(t)| = 0
|DQ(t + 1)| − |DQ(t)| = 1
In the BPA, we propagate the bids of Q(t+1) and DQ(t+1)
into Q(t) and DQ(t).
If all of the auction’s transactions
are single-bid transaction, and we manage to sample all of
them, the propagation of the bids is straightforward. How-
ever, the sampling process intorudces some problems, as
discussed in the following sections.
2.3 Sampling the Data
Through the duration of the auction we sample all the
information provided to the standard bidder, only we do so
at a faster rate using an automated script. The standard in-
formation provided includes: total bid number, number of
qualiﬁed and disqualiﬁed bids, time left, the redacted quali-
ﬁed bids table Q(t) and the disqualiﬁed table DQ(t) at time
t. Ideally, our script should be able to collect a snapshot of
Q and DQ at each single transaction of the bidding, but
in practice, this is not always possible. Though we sam-
ple the site as frequently as we can, sometimes we are faced
with a transaction of more than one bid. This becomes com-
mon as the auction reaches its ﬁnal stages, where the bids
rate increases, and the server responsiveness sometimes de-
creases. Additionaly, many of the sites provide access to
the tables via a paging mechanism, e.g. limiting the table
view to the ﬁrst K entries. Other entries are accessed via a
separate server request. The paging mechanism introduces
sampling errors, as each snapshot of the tables requires sev-
eral server requests, one per page.
In order to receive a
coherent snapshot, each of the responses must contain the
same state for all the tables. As the number of pages grows
Q(t1)
=⇒
Q(t2)
=⇒
Q(t3)
=⇒
Q(t4)
=⇒
Q(t5)
id
2
3
2
id
2
3
2
1
DQ(t1)
id
DQ(t2)
id
id
3
2
1
id
2
1
id
2
1
DQ(t3)
DQ(t4)
DQ(t5)
id
2
4
id
2
4
3
1
id
2
1
3
1
5
Sig(1, t2) =
(qualiﬁed, pos = 4)
Sig(2, t3) =
(burned)
Sig(4, t3) =
(burning, pos = 1)
Sig(3, t4) =
(burned)
Sig(1, t4) =
(burning, pos = 1)
Sig(7, t4) =
(disqualiﬁed, closest_pos = 1)
Figure 1. An example of public and private signals during 4 consecutive transactions in an auction.
The positional tables are publicly available to all participating bidders, and depict the positions of
the bidders without the actual bids. Table Q(t) represents the qualiﬁed bids table at time t. Table
DQ(t) represents the disqualiﬁed bids at time t. The private signals are represented as Sig(id, time) =
(Message). Each transaction advances both tables from time t to t + 1. At the ﬁrst transaction (t1 to
t2), bidder 1 bids a qualiﬁed bid at position 4, and is notiﬁed with a qualiﬁed private signal. At the
second transaction, bidder 4 bids a value equal to the qualiﬁed bid that bidder 2 had at position 1.
Bidder 2 is notiﬁed with a burned signal, and bidder 4 with a burning signal along with the burning bid
position. At the third transaction, bidder 3 is similarly burned by bidder 1. At the last transaction,
bidder 5 bids an already disqualiﬁed bid. He is notiﬁed that had his bid been a qualiﬁed one, it would
have been closest to the ﬁrst position.
naturally with the progression of the auction, the probabil-
ity of coherent snapshots decreases. In order to avoid these
cases, we discard any snapshot with non coherent data prior
to the execution of the BPA algorithm. Note that discarding
such snapshots may increase the number of multiple bids
transactions.
Multiple-bid transactions introduce ambiguity to the
BPA, as propagating the bids between two transaction no
longer involves 3 conditions, but (cid:0)3+c−1
(cid:1) where c is the
number of bids in the sampled transaction2. We utilize Lev-
enshtein’s edit-distance and edit-paths [19], in order to ﬁnd
the most likely difference between the tables at each con-
secutive step.
c
2We observed that some sites prohibit bidders from having more than
a ﬁxed number of consecutive qualiﬁed bids (usually 3), under the penalty
of disqualiﬁcation of any further consecutive qualiﬁed bid. This introduces
the notion of self-burn, later discussed in 2.5, and an additional condition
to the above, resulting in a worse(cid:0)4+c−1
(cid:1).
c
2.4 Edit Distance
The Levenshtein edit-distance [19] is deﬁned as the min-
imum number of edit operations needed to transfer one
string into another. The valid edit operations are equality,
insertion, deletion and replacement. The cost is tradition-
ally set to 1 for each of the operations. The edit-distance
algorithm uses a matrix d[i, j] holding the distances be-
tween all the preﬁxes of the ﬁrst string and all the preﬁxes of
the second. Throughout the algorithm, the invariant main-
tained is that we can transform the initial segment s1[1..i]
into s2[1..j] using a minimum of d[i, j] operations. Mov-
ing from d[i, j] to d[i + 1, j] implies a deletion, moving
from d[i, j] to d[i, j + 1] implies an insertion, and a di-
agonal move from d[i, j] to d[i + 1, j + 1] implies a re-
placement. The algorithm ﬁlls the matrix using a dynamic-
programming paradigm. At the end, the bottom-right ele-
ment contains the computed distance. Note that often, there
are several edit-paths producing the minimum edit distance.
At each step of the BPA, we concatenate the bidders’ ids
of Q(t − 1), DQ(t − 1), Q(t), DQ(t) into strings, where
Q(t1)
bid
id
Q(t2)
bid
id
Q(t3)
bid
id
Q(t4)
bid
id
2
3
2
φ
φ
φ
2
3
2
1
φ
φ
φ
φ
3
2
1
φ
φ