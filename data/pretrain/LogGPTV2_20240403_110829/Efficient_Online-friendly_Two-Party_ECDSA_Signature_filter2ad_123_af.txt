tional security), 80-bits statistical security and soundness error as
DKLS18-19 [15, 16] did. We implement OT-based 2ECDSA using
MtA of [28] and run their code on DKLS18 and DKLS19 protocols.
The results of computation and communication on signing are re-
ported in Table 4. The key generation of our scheme has the same
complexity as DKLS19.
The offline communication of our scheme is 90.9 KB, which
outperforms DKLS19-20 by a factor of roughly 2.
Table 3: Cost comparison of Paillier-based schemes.
Schemes
LNR18 [26]
GG18 [19]
CGGMP20 [6]
2ECDSA (Paillier)
Lin17 [25] (Paillier-EC)
GG18 [19] (Paillier-EC)
2ECDSA (Paillier-EC)
Computation
Communication
Offline Online Offline Online
6.6KB
461ms
288B
1237ms
32B
2037ms
32B
226ms
34ms
768B
288B
360ms
141ms
32B
12.1KB
15.5KB
44KB
6.3KB
192B
6.6KB
4.1KB
302ms
3ms
0.2ms
0.2ms
8ms
3ms
0.2ms
01020304001,0002,0003,000Communication(KB)Computation(ms)CL-basedCCLST19CCLST202ECDSA-CLPaillier-basedLNR18GG18CGGMP200246100200300Communication(KB)Computation(ms)Paillier-basedLin172ECDSA-PaillierEC2ECDSA-PaillierGG18-PaillierEC1001201401601802.533.54Communication(KB)Computation(ms)OT-basedDKLS18DKLS192ECDSA-OTSession 2D: Secure Multiparty Computation CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea568Table 4: Cost comparison of OT-based schemes.
Schemes
DKLS18 [15]
DKLS19 [16]
2ECDSA (OT)
Computation
Communication
Offline Online Offline Online
32B
2.9ms
32B
3.7ms
2.6ms
32B
169.8KB
180KB
90.9KB
0.2ms
0.2ms
0.2ms
Table 5: Cost comparison of CL-based schemes.
Schemes
CCLST19 [7]
CCLST20 [8]
YCX21 [33]
2ECDSA (CL)
Computation
Communication
Offline Online Offline Online
208B
475ms
288B
3316ms
288B
4550ms
1386ms
32B
190ms
3ms
3ms
0.2ms
505B
4.5KB
4.5KB
1.7KB
5.3 CL-based Schemes
For CL-based instantiations, we set 128-bits computational security,
take 80-bits statistical distance and soundness error as YCX21 [33]
did. CCLST19 [7] used 40-bits statistical and soundness security,
and CCLST20 [8] utilized 128-bits for soundness error and 80-bits
for statistical distance. We implement CL-based 2ECDSA and two-
party schemes of CCLST20 and YCX21 and run ZenGo’s code on
CCLST19. The cost comparison is reported in Table 5. The key
generation of our scheme has the same complexity with [8].
The offline complexity of our scheme is 1.7KB and 1386ms.
CCLST20’s offline phase needs at least 2× cost than our work.
The offline phase of YCX21 requires 2× communication and 3×
computation than our scheme.
6 CONCLUSION
We propose an online-friendly two-party 2ECDSA such that its
online computation is extremely fast and its offline phase requires
only a single execution of MtA. Our scheme could be efficiently
instantiated with constructions of MtA from Paillier, CL encryp-
tions and oblivious transfer. Furthermore, our scheme can be easily
extended to the more general case of 2-out-of-𝑛.
Our work focuses on the two-party ECDSA. We believe the idea
of this work will lead to improvements of the full threshold ECDSA,
and we leave this for further work.
ACKNOWLEDGMENTS
We would like to thank Xuyang Song and Xueli Wang for their
help in the experiments. Haiyang Xue is supported by the Na-
tional Natural Science Foundation of China (No. 62172412), the
National Key Research and Development Program of China (No.
2020YFB1807502). Man Ho Au is supported by the National Natural
Science Foundation of China (No. 61972332), the Research Grant
Council of Hong Kong (GRF Project 15211120).
REFERENCES
[1] Jean-Philippe Aumasson, Adrian Hamelink, and Omer Shlomovits. 2020. A Survey
of ECDSA Threshold Signing. (2020). https://eprint.iacr.org/2020/1390.pdf.
[2] Carsten Baum, Daniel Escudero, Alberto Pedrouzo-Ulloa, Peter Scholl, and
Juan Ramón Troncoso-Pastoriza. 2020. Efficient Protocols for Oblivious Lin-
ear Function Evaluation from Ring-LWE. In SCN. Springer, 130–149.
[3] Donald Beaver. 1991. Efficient multiparty protocols using circuit randomization.
In CRYPTO. Springer, 420–432.
[4] Manuel Blum, Paul Feldman, and Silvio Micali. 1988. Non-interactive zero-
knowledge and its applications. In STOC. 103–112.
[5] Fabrice Boudot. 2000. Efficient proofs that a committed number lies in an interval.
In EUROCRYPT. Springer, 431–444.
[6] Ran Canetti, Rosario Gennaro, Steven Goldfeder, Nikolaos Makriyannis, and Udi
Peled. 2020. UC Non-Interactive, Proactive, Threshold ECDSA with Identifiable
Aborts. In ACM CCS. 1769–1787.
[7] Guilhem Castagnos, Dario Catalano, Fabien Laguillaumie, Federico Savasta, and
Ida Tucker. 2019. Two-party ECDSA from hash proof systems and efficient
instantiations. In CRYPTO. Springer, 191–221.
[8] Guilhem Castagnos, Dario Catalano, Fabien Laguillaumie, Federico Savasta, and
Ida Tucker. 2020. Bandwidth-efficient threshold EC-DSA. In PKC. Springer, 266–
296.
[9] Guilhem Castagnos and Fabien Laguillaumie. 2015. Linearly homomorphic
encryption from DDH. In CT-RSA. Springer, 487–505.
[10] Tung Chou and Claudio Orlandi. 2015. The simplest protocol for oblivious
transfer. In LATINCRYPT. Springer, 40–58.
[11] William M Daley and Raymond G Kammer. 2000. Digital signature standard (DSS).
Technical Report. BOOZ-ALLEN AND HAMILTON INC MCLEAN VA.
[12] Ivan Damgård, Marcel Keller, Enrique Larraia, Christian Miles, and Nigel P Smart.
2012. Implementing AES via an actively/covertly secure dishonest-majority MPC
protocol. In SCN. Springer, 241–263.
[13] Yvo Desmedt. 1987. Society and group oriented cryptography: A new concept.
[14] Yvo Desmedt and Yair Frankel. 1989. Threshold cryptosystems. In CRYPTO.
In CRYPTO. Springer, 120–127.
Springer, 307–315.
[15] Jack Doerner, Yashvanth Kondi, Eysa Lee, and Abhi Shelat. 2018. Secure two-party
threshold ECDSA from ECDSA assumptions. In IEEE Symposium on Security and
Privacy. IEEE, 980–997.
[16] Jack Doerner, Yashvanth Kondi, Eysa Lee, and Abhi Shelat. 2019. Threshold
ECDSA from ECDSA assumptions: the multiparty case. In IEEE Symposium on
Security and Privacy. IEEE, 1051–1066.
[17] Paul Feldman. 1987. A practical scheme for non-interactive verifiable secret
sharing. In 28th Annual Symposium on Foundations of Computer Science (sfcs 1987).
IEEE, 427–438.
[18] Amos Fiat and Adi Shamir. 1986. How to prove yourself: Practical solutions to
identification and signature problems. In CRYPTO. Springer, 186–194.
[19] Rosario Gennaro and Steven Goldfeder. 2018. Fast multiparty threshold ECDSA
with fast trustless setup. In ACM CCS. 1179–1194.
[20] Satrajit Ghosh, Jesper Buus Nielsen, and Tobias Nilges. 2017. Maliciously secure
oblivious linear function evaluation with constant overhead. In ASIACRYPT.
Springer, 629–659.
[21] Niv Gilboa. 1999. Two party RSA key generation. In CRYPTO. Springer, 116–129.
[22] Carmit Hazay, Gert Læssøe Mikkelsen, Tal Rabin, Tomas Toft, and Angelo Agatino
Nicolosi. 2019. Efficient RSA key generation and threshold paillier in the two-
party setting. Journal of Cryptology 32, 2 (2019), 265–323.
[23] Marcel Keller, Emmanuela Orsini, and Peter Scholl. 2015. Actively secure OT
extension with optimal overhead. In CRYPTO. Springer, 724–741.
[24] C Kerry and P Gallagher. 2013. FIPS PUB 186-4: Digital Signature Standard
(DSS). Federal Information Processing Standards Publication. National Institute of
Standards und Technology (2013).
[25] Yehuda Lindell. 2017. Fast secure two-party ECDSA signing. In CRYPTO. Springer,
[26] Yehuda Lindell and Ariel Nof. 2018. Fast secure multiparty ECDSA with practical
distributed key generation and applications to cryptocurrency custody. In ACM
CCS. 1837–1854. Refer https://eprint.iacr.org/2018/987.pdf for the full version..
[27] Philip MacKenzie and Michael K Reiter. 2001. Two-party generation of DSA
signatures. In CRYPTO. Springer, 137–154.
[28] NEUCRYPO. 2021. mp-ecdsa. https://gitlab.com/neucrypt/mpecdsa.
[29] Claus-Peter Schnorr. 1991. Efficient signature generation by smart cards. Journal
of cryptology 4, 3 (1991), 161–174.
[30] Adi Shamir. 1979. How to share a secret. Commun. ACM 22, 11 (1979), 612–613.
[31] Victor Shoup. 1997. Lower bounds for discrete logarithms and related prob-
lems. In International Conference on the Theory and Applications of Cryptographic
Techniques. Springer, 256–266.
[32] ZenGo X. 2021. multi-party-ecdsa. https://github.com/ZenGo-X/multi-party-
613–644.
[33] Tsz Hon Yuen, Handong Cui, and Xiang Xie. 2021. Compact Zero-Knowledge
Proofs for Threshold ECDSA with Trustless Setup. In PKC. Springer, 481–511.
ecdsa.
Session 2D: Secure Multiparty Computation CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea569A KEY GENERATION PROTOCOL FOR
2-OUT-OF-𝑛 ACCESS STRUCTURES
Distributed Key Generation Phase Keygen(G, 𝑃, 𝑞). Given the
joint input (G, 𝑃, 𝑞):
• Phase 1: Each player 𝑃𝑖 selects 𝑥𝑖 ← Z𝑞 and computes 𝑋𝑖 =
𝑥𝑖 · 𝑃 and a ZKPoK of discrete logarithm using 𝑥𝑖. Then, 𝑃𝑖
broadcasts a commitment of 𝑋𝑖 and corresponding ZKPoK.
• Phase 2: Upon receiving commitments from other parties, 𝑃𝑖
decommits 𝑋𝑖 and corresponding ZKPoK. Then, 𝑃𝑖 checks
all the received commitments and the ZKPoKs.
• Phase 3: Each party 𝑃𝑖 runs (2, 𝑛) Feldman-VSS [17] using his
VSS, i.e., 𝑣𝑖 = 𝑛
secret 𝑥𝑖. Specifically, let {𝑥 (𝑖)1 , · · · , 𝑥 (𝑖)𝑛 } be the secret shar-
ing of 𝑥𝑖, 𝑃𝑖 adds the private shares received from Feldman-
mod 𝑞. Note that 𝑉𝑖 = 𝑣𝑖 · 𝑃 is