International 
Conference 
on Dependable 
Systems 
& Networks 
(DSN) 
2. the set Vi holds more than n f messages 
is equal to the current 
phase ¢i of Pi. 
whose phase 
6. Validation 
of Messages 
When the condi­
the state to match 
with a slight 
instance 
message, 
is the following: 
The first case is simpler 
(Lines 10-18). 
tion is met (Line 10), process Pi updates 
the state of the received 
The special 
¢ (mod 3) =  1 and the value v was obtained 
sult of a coin flip (which can be verified 
procedure 
described 
coin flip to determine 
sible to force Byzantine 
step becomes necessary 
assume a random value. 
in Section 
Vi (Lines 12-13). 
processes 
to guarantee 
6), then Pi executes 
Since it is not pos­
a local 
into a fair coin flip, this 
that correct 
processes 
exception. 
if the phase value is 
from the re­
from the validation 
actions 
operation 
to the correct 
of the protocol 
that a Byzantine 
There are two types of validation 
A process Pj must check the validity 
of arriving 
mes­
sages before adding them to set Vj. This procedure 
is fun­
damental 
because 
it limits the wrongful 
accomplish. 
sage must pass: authenticity 
idation. 
message were actually 
that the 
second ensures 
with the current 
execution 
deemed valid if it passes both tests. 
process 
can 
that a mes­
and semantic 
val­
validation 
that some of the fields of a 
by a process Pi, while the 
of a message are congruent 
generated 
contents 
The first guarantees 
of the algorithm. 
A message is 
The second case is more complex (Lines 19-39). The 
6.1. Authenticity 
Validation 
its state depends on the value of its 
phase number ¢i modulo 3. In CONVERGE phases 
way a process Pi updates 
current 
(¢i (mod 3) =  1) the proposal 
value of all messages 
21). 
value is set to the majority 
with phase value ¢ =  ¢i (Lines 20-
In LOCK  phases 
(¢i (mod 2) =  2) the proposal  value 
otherwise 
(Lines 25-26). 
value -.1 ct- {O, I} 
way (Lines 22-27): 
it is set to a special 
a lack of preference 
if there are 
of the form (*, ¢, v, *) in Vi with 
Vi is updated the following 
more than nf messages 
¢ =  ¢i and the same value v, then Vi is set to V (Lines 
23-24), 
indicating 
sures that in the following 
proposes 
there was unanimity 
amongst correct 
ous phase ¢i -1, then every process 
value to the same value V (since messages 
value are considered invalid). 
next phase ¢i +  1 every process 
receives 
V E {O, I} in all valid messages 
This step en­
phase ¢i + 1 every process 
if 
processes 
must set its proposal 
with a different 
the same value V E {O, I} or -.1. Furthermore, 
This will imply that in the 
and decides. 
the same value 
at the previ­
either 
to decided 
In DECIDE phases (¢i (mod 2) =  0), a process 
sets 
if there are more than n f messages 
of 
statusi 
the form h ¢, v, *) in Vi with ¢ =  ¢i and the same value 
V  -=I=--.1 (Lines 29-31). The proposal 
value Vi is set to V if 
there is at least one message of the form (*, ¢, v, *) in Vi 
with ¢ =  ¢i and a value v -=I=--.1. Otherwise, 
value of function 
o or 1, each with probability 
the previous 
unit (Line 38). 
of 
the phase is always incremented 
by one 
 (Lines 32-36). 
coin ( ), which returns 
a random number 
Vi is set to the 
steps, 
Regardless 
At the end of each round, a process Pi checks if statusi 
decisioni 
If so, it decides 
to the current 
has been set to decided. 
output variable 
(Lines 40-42). Further accesses 
ify its value. Hence, they 
of the algorithm. 
an accompanying 
The full correctness 
technical 
by setting 
the 
value Vi 
to this variable 
proof can be found in 
report [18]. 
proposal 
have no impact on the correctness 
do not mod­
process Pj as­
at the alleged 
the following 
This form of validation 
provides 
More precisely, 
(partial) 
message 
for any message 
deserves 
variable 
it provides 
to a receiving 
that the values of ¢ and V originated 
The authenticity 
authentication. 
(i, ¢, v, status), 
surance 
source process Pi. This statement 
caveat. 
tected by this mechanism. 
entity 
a malicious 
an arbitrary 
status 
the correctness 
dation mechanism 
justify 
therefore, 
(see next section) 
based on the received 
making the attack ineffective. 
is based on a mechanism 
of the protocol 
their status 
of the status 
is not pro­
it is possible 
for 
to replay a message (i, ¢, v, status) 
with 
does not impact 
value. This, however, 
Consequently, 
because our semantic 
vali­
to 
that 
group communi­
Authentication 
one-time 
efficient for a round-based 
with a small domain of input values. 
and verifying 
is particularly 
cation protocol 
case, the mechanism 
values (0, 1, and -.1), which represents 
values that a message can have. To the best of our knowl­
edge, this is the first time such a mechanism 
in an agreement 
input domain of three 
the possible 
protocol. 
hash-based 
is devised 
proposal 
requires 
for an 
In our 
processes 
values, 
message signatures 
is employment 
proposal 
for generating 
for each phase of the k-consensus 
message au­
procedure 
procedure 
and by a key exchange 
is composed by a generic 
H to generate 
SHA-256 or RlPEMD-160) 
that has to be ex­
resorts 
to 
The message authentication 
hash val­
[17]. The 
The mechanism 
thentication 
protocol, 
ecuted periodically. 
an efficient one-way hash function 
ues oflength h (e.g., 
key exchange 
expensive 
that is used to sign an array of verification 
sumed that each process Pi has an associated 
key pair to be used in F, where PUi is the public key and 
pri is the private 
knows the public key 
of all other processes. 
key. Every process 
one-way function 
F (e.g., RSA 
[23]) 
procedure 
trapdoor 
resorts 
keys. It is as­
public/private 
to a more computationally 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
541 
DSN 2010: Moniz et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:13:29 UTC from IEEE Xplore.  Restrictions apply. 
5 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems 
& Networks 
(DSN) 
verification 
generates 
procedure 
random bit strings 
the corresponding 
pro­
Key Exchange. The key exchange 
m secret keys, which are essentially 
of length h, and distributes 
keys. These are valid for m phases of the k-consensus 
tocol. If m is equal to or larger than the number of phases 
required 
to reach consensus, 
dure only needs to be executed 
k-consensus 
ther optimized 
tiple instances 
purposes, 
instance. 
proce­
once, at the beginning 
of the 
this scheme can be fur­
can span mul­
so that a single key exchange 
of the k-consensus. 
then the key exchange 
the scheme assuming 
Nevertheless, 
Potentially, 
we describe 
only a single 
protocol. 
for clarity 
There are two ways for the congruency 
to 
and the other is explicit. 
of messages 
one is implicit 
The im­
receives 
a mes­
be verified: 
plicit 
way is based on whenever 
the 
to justify 
sage, it sees if enough messages 
For example, 
if 
values carried 
a process 
with phase 
¢, then, for any message of the form (*, ¢ + 1, *, *), its 
phase value is implicitly 
a process 
have arrived 
by the message just received. 
has in set Vi more than n f messages 
valid. 
The explicit 
way is based on broadcasting, 
messages 
the previous 
For example, 
message, 
state variables. 
be justified 
the form (*, ¢, *, *) (and, naturally, 
must also pass the validity 
by having appended 
checks). 
thatjustify 
along with the 
the values of the 
a message with phase ¢+ 1 can 
more than n f messages 
of 
the appended 
messages 
array V Ki of verification 
=  H(SKd¢][v]). 
two-dimensional 
is a random bit string of length h, with 
For each process Pi, the key exchange e 2::  1 con­
steps. Process Pi generates 
a two­
array SKi of secret keys, such that each el­
sists of the following 
dimensional 
ement SKd¢][v] 
( e - 1) m + 1 :::; ¢ :::; em and v E {O, 1, -.1 } 3. It then creates 
an equivalent 
keys, such that each element V Kd¢][v] 
Finally, 
trapdoor 
then both the V Ki and the signature 
other processes 
keys array V Ki is signed using the 
key pri, and 
to the 
channel. 
of the 
the verification 
one-way function 
are disseminated 
reliable 
the correctness 
with the public 
keys is confirmed by verifying 
key of Pi, and then the array is stored for future use. For 
efficiency 
offline along with the public keys. Subsequent 
be transmitted 
interference 
of the system such that 
is kept to a minimum. 
using an out-of-band 
with normal execution 
When V Ki arrives 
during idle periods 
F and the private 
the signature 
to a process, 
purposes, 
arrays may 
the first V Ki array can be distributed 
Our current 
a process 
by nature, 
implementation 
both techniques. 
First, 
which is optimistic 
because 
messages 
for the following 
the same message, 
appending 
are allowed 
clock tick, a process 
the justifying 
then explicit 
messages. 
carried 
of the algorithm 
tries an implicit 
and is much more efficient 
to be kept small. However, 
if, 
resorts 
validation, 
to 
is forced to broadcast 
validation 
is employed 
by 
Each of the state variables 
by a message are val­
idated independently. 
if all three variables 
sages required 
overlap. 
the validations. 
Next, we explain 
to validate 
A message passes this validation 
test 
pass in their individual 
test. The mes­
each variable 
in more detail how to perform 
may sometimes 
by process Pi is authenticated 
For any phase ¢, a message 
SKd¢][v]. 
Message Authentication. 
broadcast 
(i, ¢, v, status) 
attaching 
sage, it applies 
H(SKi[¢] 
by the properties 
originated 
by 
the mes­
to SKd¢] [v] and verifies 
if 
[v]) is equal to VKi[¢] [v]. If they are equal, then 
When a process Pj receives 
of cryptographic 
hash functions 
¢ and v 
the hash function 
at Pi' 
6.2. Semantic Validation 
that the values carried 
ensures 
within a message are congru­
if, 
For example, 
the same 
broadcasts 
of the algorithm. 
process 
for a process 
that is executing 
value of 1 at phase ¢ + l. 
The semantic 
validation 
by the three states variables 
ent with the execution 
at phase ¢ =  1, every correct 
value 0, then it is not possible 
the protocol 
Therefore, 
sent by a Byzantine 
impacting 
nism restricts 
if such proposal 
process, 
the protocol. 
to send a proposal 
then it must have been 
arrives, 
and it can be discarded 
without 
this validation 
mecha­
processes 
may lie. 
In practice, 
the way that Byzantine 
3Inpractice, 
SKi [¢][..l] 
because ..l is an acceptable 
only needs to be generated 
proposal 
value only in such phases. 
if¢ (mod 3) =  0 
Phase value. The phase value ¢ of a message of the form 
(*, ¢, *, *) requires 
of the form 
(*, ¢ - 1, *, *) to be considered 
more than nf messages 
valid. 
Proposal value. The validation 
varies according 
to the phase carried 
sages with phase value ¢ =  1 are the only that do not require 
validation 
value 
of the proposal 
in the message. 
Mes­
and are immediately 
accepted. 
• Messages 
with phase ¢ (mod 3) =  2: The proposal 
value v is valid if there are more than (n f) /2 mes­
sages with phase ¢ - 1 and proposal 
value v. 
• Messages 
with phase ¢ (mod 3) =  0: If the proposal 
more than nf 
with phase ¢ - 1 and proposal 
value is -.1, then it requires 
value is v E {O, I}, then it requires 
messages 
the proposal 
(nf)/2 
messages 
than (nf)/2 
messages 
value v. If 
more than 
of the form h ¢- 2, 0, *) and more 
ofthe form (*, ¢ - 2, 1, *). 
• Messages 
proposal 
obtained 
35). If obtained 
with phase ¢ (mod 3) =  1: The validity 
value v in these messages 
deterministically 
of 
depends if it was 
(Line 33) or randomly 
deterministically, 
it requires 
(Line 
more than 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
542 
DSN 2010: Moniz et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:13:29 UTC from IEEE Xplore.  Restrictions apply. 
6 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems 
& Networks 
(DSN) 
nf messages 
domly, then it requires 
form (*, ¢ - 1, -.1, *). 
of the form (*, ¢ - 2, v, *). If set ran­
more than n f messages 
of the 
be­
any message with 
variable, 
carry value undecided 