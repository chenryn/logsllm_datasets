Following code passes borrow checking leading to serious memory unsafety.
    fn main() {
        let mut v = Vec::new();
        for _ in v.iter() {
            v.push('j');
        }
    }
Code compiles with `&c` instead of `_` too. Loop fails to compile only in `for
c in v.iter()` case where there's an explicit variable with reference or when
the loop is desugared manually.