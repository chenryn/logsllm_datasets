title:Service-Based Resilience for Embedded IoT Networks
author:Doganalp Ergenc and
Jacek Rak and
Mathias Fischer
2020 50th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)
Service-based Resilience for Embedded IoT
Networks
Do˘ganalp Ergenc¸
Universit¨at Hamburg, DE
Jacek Rak
Gdansk University of Technology, PL
Mathias Fischer
Universit¨at Hamburg, DE
PI:EMAIL
PI:EMAIL
mﬁPI:EMAIL
Abstract—Embedded IoT networks are the backbone of safety-
critical systems like smart factories, autonomous vehicles, and
airplanes. Therefore, resilience against
failures and attacks
should be a prior concern already in their design stage. In
this study, we introduce a service-based network model as an
MILP optimization problem for the efﬁcient deployment of a
service overlay to the embedded network by meeting QoS and
resilience requirements. We show the complexity and boundaries
of the problem and propose several heuristics to relax the service
deployment phase and increase the fault-tolerance against node
and link failures. Our results indicate that the heuristics achieve
results close to the optimum for small sizes of the problem with up
to 108 time faster solution time. We also show that the heuristics
can solve larger problem sizes and can maintain the service
availability for 85% of all potential single node failures.
Index Terms—Resilience, service overlay, optimization, embed-
ded IoT, systems
I. INTRODUCTION
Embedded IoT systems as used in autonomous vehicles, air-
planes, and industrial networks have become complex ecosys-
tems. For instance, the latest Tesla autopilot1 is supported
by eight cameras and twelve ultrasonic sensors for high
precision and high-quality environmental data. Similarly, with
Industry 4.0 intelligent cyber-physical systems emerge that are
composed of a multitude of collaborating embedded devices
[1], [2]. These devices might also host safety-critical services,
where any failure can induce huge damage - in the worst-case
up to the loss of human lives.
Moreover, we currently observe that trends from conven-
tional computer networks, like more powerful devices and vir-
tualization, are widely adopted in the (embedded) IoT domain.
This can be observed in application scenarios such as modern
avionics2 and smart cities3. In both scenarios, there is the need
for a non-static and thus ﬂexible deployment of services and
functions in embedded systems. As a result, these systems
can take over more complex tasks and can operate multiple
virtualized services on top of a physical node by maintaining a
certain level of process isolation [3], [4]. Furthermore, it allows
using node resources more efﬁciently by starting additional
services on demand and even to migrate services in between
physical nodes. The increased ﬂexibility of embedded nodes
by using virtualization techniques enables dynamic failover
schemes like migrating/recovering services after a node failure
1Tesla, https://www.tesla.com/autopilot
2DELIA, https://delia-project.com
3Fed4IoT, https://fed4iot.org
(cid:13)(cid:80)(cid:60)(cid:104)(cid:104)(cid:81)(cid:104)(cid:3)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:89)(cid:73)(cid:103)
(cid:48)(cid:103)(cid:60)(cid:78)(cid:78)(cid:81)(cid:69)(cid:3)
(cid:47)(cid:81)(cid:79)(cid:91)(cid:3)
(cid:15)(cid:73)(cid:106)(cid:73)(cid:69)(cid:106)(cid:81)(cid:93)(cid:91)
(cid:43)(cid:73)(cid:71)(cid:73)(cid:104)(cid:106)(cid:103)(cid:81)(cid:60)(cid:91)(cid:3)
(cid:15)(cid:73)(cid:106)(cid:73)(cid:69)(cid:106)(cid:81)(cid:93)(cid:91)
(cid:13)(cid:80)(cid:60)(cid:104)(cid:104)(cid:81)(cid:104)(cid:3)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:89)(cid:73)(cid:103)
(cid:43)(cid:93)(cid:113)(cid:73)(cid:103)(cid:106)(cid:103)(cid:60)(cid:81)(cid:91)(cid:3)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:89)(cid:73)(cid:103)
(cid:12)(cid:103)(cid:60)(cid:88)(cid:73)
(cid:12)(cid:103)(cid:60)(cid:88)(cid:73)
(cid:33)(cid:107)(cid:104)(cid:81)(cid:69)
(cid:32)(cid:93)(cid:69)(cid:88)
(cid:88)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:13)(cid:93)(cid:89)(cid:89)(cid:81)(cid:104)(cid:81)(cid:93)(cid:91)(cid:3)
(cid:4)(cid:112)(cid:93)(cid:81)(cid:71)(cid:60)(cid:91)(cid:69)(cid:73)(cid:3)
(cid:15)(cid:103)(cid:81)(cid:112)(cid:73)(cid:103)(cid:3)
(cid:4)(cid:104)(cid:104)(cid:81)(cid:104)(cid:106)(cid:60)(cid:91)(cid:69)(cid:73)(cid:3)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:47)(cid:113)(cid:81)(cid:106)(cid:69)(cid:80)
(cid:48)(cid:73)(cid:89)(cid:73)(cid:90)(cid:60)(cid:106)(cid:81)(cid:69)(cid:104)(cid:3)
(cid:104)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:89)(cid:73)(cid:103)
(cid:32)(cid:93)(cid:69)(cid:88)
(cid:33)(cid:107)(cid:104)(cid:81)(cid:69)
(cid:33)
(cid:12)(cid:103)(cid:60)(cid:88)(cid:73)(cid:73)
(cid:54)(cid:81)(cid:103)(cid:106)(cid:107)(cid:60)(cid:89)(cid:3)
(cid:4)(cid:104)(cid:104)(cid:81)(cid:104)(cid:106)(cid:60)(cid:91)(cid:106)
(cid:12)(cid:103)(cid:60)(cid:88)(cid:73)
(cid:36)(cid:68)(cid:87)(cid:73)(cid:69)(cid:106)(cid:3)
(cid:15)(cid:73)(cid:106)(cid:73)(cid:69)(cid:106)(cid:81)(cid:93)(cid:91)
(cid:33)(cid:107)(cid:104)(cid:81)(cid:69)
(cid:33)(cid:107)(cid:104)(cid:81)(cid:69)
(cid:36)(cid:68)(cid:87)(cid:73)(cid:69)(cid:106)(cid:3)
(cid:15)(cid:73)(cid:106)(cid:73)(cid:69)(cid:106)(cid:81)(cid:93)(cid:91)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)(cid:3)
(cid:13)(cid:93)(cid:91)(cid:106)(cid:103)(cid:93)(cid:89)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)(cid:3)
(cid:43)(cid:73)(cid:103)(cid:81)(cid:100)(cid:80)(cid:73)(cid:103)(cid:60)(cid:89)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)(cid:3)
(cid:48)(cid:73)(cid:89)(cid:73)(cid:90)(cid:60)(cid:106)(cid:81)(cid:69)(cid:104)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)
(cid:48)(cid:73)(cid:89)(cid:73)(cid:90)(cid:60)(cid:106)(cid:81)(cid:69)(cid:104)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)
(cid:33)(cid:60)(cid:91)(cid:60)(cid:79)(cid:73)(cid:90)(cid:73)(cid:91)(cid:106)(cid:3)(cid:47)(cid:73)(cid:103)(cid:112)(cid:81)(cid:69)(cid:73)(cid:104)
Fig. 1: A simpliﬁed reference model for the in-vehicle network
consisting of different types of services: Control services (red, wheel
icon), peripheral services (green, camera icon), telematics services
(yellow, speaker icon), and management services (blue, gear icon).
[5], [6]. Furthermore, as devices become more powerful, more
ﬂexible repair and recovery mechanisms during and in the
aftermath of failures and attacks can be used, e.g., protection
cycles and resilient routing layers [7]. However, all of this
comes at the expense of increased complexity, so that these
systems become more error-prone and vulnerable. Standard
safety concepts like replicating devices and services alone
are not sufﬁcient anymore in the presence of sophisticated
attackers. Resilience can bring together the safety and security
domain by maintaining availability in the presence of failures
and attacks, to provide graceful degradation in worst-case, and
to recover again [8], [9].
Embedded IoT networks host various potentially intercon-
nected services with speciﬁc demands, e.g., communication
with bounded delay or recovery from a certain number of node
and link failures. Thus, services need to be deployed in the IoT
network by considering the capacity and capabilities of nodes
and their interconnection. Hence, two degrees of freedom are
the result: the service placement on nodes and the routing of
data ﬂows in between these nodes.
An example of how we imagine an all Ethernet-based in-
vehicle network with virtualized services is given in Fig. 1.
Automotive Ethernet will be widely deployed in the future
[10]. It allows more ﬂexibility in network conﬁguration and
allows the usage of COTS equipment. Therefore,
is a
promising solution for evolving in-vehicle networks and the
dynamic management of more and more hosted services, e.g.,
it
978-1-7281-5809-9/20/$31.00 ©2020 IEEE
DOI 10.1109/DSN48063.2020.00066
540
Authorized licensed use limited to: University of New South Wales. Downloaded on October 01,2020 at 13:28:29 UTC from IEEE Xplore.  Restrictions apply. 
for improved fail-over [11]. In Fig. 1 different types of services
are deployed for the reference model: Control Services to
orchestrate powertrain and chassis domain functions, e.g.,
brakes and engine control, Peripheral Services to collect
required data from the environment via (Object and Pedestrian)
detectors for collision avoidance, Telematics Services for in-car
infotainment, e.g., music, and Management Services to offer
driver assistance managing body functions, e.g., controlling
door locks automatically or informing the driver about the
trafﬁc signs on the road. Note that, some of the services, e.g.,
Collision Avoidance and Driver Assistance, are hosted by the
same virtualized component.
To realize an automatic braking system, for instance, a
group of sensor-connected components host an object detec-
tion service to detect objects on the road. Another component
hosts a collision avoidance service that processes information
received by the object detection and initiate an emergency
brake by informing the component that hosts a chasis con-
troller service. In such a service-based architecture service can
be easily migrated, e.g., the collision avoidance service can be
migrated to any other component with sufﬁcient processing
power. The driver assistance service, as another example, can
utilize the components hosting the music infotainment service
to maintain a virtual assistant service that guides the driver
vocally in case its actual component hosting it fails. From
this point of view, enabling the dynamic service deployment
changes the dimension of the resilient communication by
beneﬁting from the ﬂexible design of up-to-date embedded
devices [12].
The main contribution of this paper is a model and an opti-
mization problem formulation for the embedding of complex
inter-connected services in an IoT network by meeting Quality
of Service (QoS) and robustness requirements. Our model
results in a fault-tolerant deployment scheme against arbitrary
node failures. The resulting system becomes resilient against
failures and attacks when it is coupled with an additional
dynamic function migration mechanism. We formulate the
whole model as a Mixed Integer Linear Program (MILP) to
(i) discuss the complexity of the problem that is known to
be NP-hard in the literature and (ii) ﬁnd solutions for the
optimum network deployment as a basis for several heuristics
we propose additionally. The results indicate that our heuristics
achieve results close to the optimum for small sizes of the
problem. We also show that the heuristics are getting closer
to the optimum when sacriﬁcing resilience. The results also
indicate that the heuristics can solve larger problem sizes
and allow to embed complex service compositions 106 − 108
time faster so that the resulting embedding assures the service
availability for 90% of all potential single node failures.
different scenarios and constraints in Section VI. Section VII
summarizes the paper and proposes future work.
II. RELATED WORK
In this section, we ﬁrst summarize related work on service
allocation and second we describe approaches to enhance the
network resilience of embedded IoT networks.
A. Service Allocation
In cloud computing, Software-Deﬁned Networking (SDN),
and Network Function Virtualization (NFV) domains, a service
represents a movable (or relocatable) function that has certain
type and characteristics and is allocated to physical nodes. In
cloud computing, a service generally provides some speciﬁc
content, an application, or a platform to users under Service-
Level Agreements (SLAs) minimizing the operational costs
at the same time. It requires accurate resource orchestration
regarding where, when, and how many service instances are
deployed [13], [14]. Besides, the dependencies of services
to each other [15], service migrations [16], load-balancing
[17], and task scheduling [18], are other issues that affect the
provider’s cost and the user experience.
SDN/NFV services are considered as virtual functions to
(i) process and regulate the communication such as ﬁre-
walls, routers, and load balancers, or (ii) provide network-
wide services such as DNS and AAA policies. The proper
allocation of a service composition [19], [20] is important
to, for instance, minimize operational costs [21] and physical
resource fragmentation [22] for the providers, and maximize
the service quality [21] and responsiveness [23] for the user
experience. Various other studies also address the optimum
service allocation and routing problem jointly to deploy the
services on the optimal paths [24], [25] to utilize network
resources optimally while guaranteeing to satisfy SLAs.
Contrary to the existing works, the service deployment in
our study, i.e., in emerging virtualized IoT networks, deﬁne the
whole communication scheme of an embedded network. That
is, as the communication trafﬁc is deﬁned between services,
inter-service relationships are decisive for network design con-
sidering both service deployment and the trafﬁc engineering.
In this sense, a service may be a trafﬁc source, destination, or
both depending on the system design. Therefore, it is a joint
service allocation and inter-service trafﬁc routing problem
where routing depends on the service allocation. Moreover,
adding resilience requirements to such a dynamic deployment
scheme renders the problem even more challenging.
B. Network Resilience
Many traditional approaches leverage graph-related prop-
erties of networks to increase their robustness. Against link
failures, for instance, ﬁnding primary and redundant directed
trees [26] as well as multiple disjoint paths [27] are proposed.
Some other related studies propose the optimization problems
with resilience constraints. In [28], the authors optimize virtual
cloud topologies having k redundant instances under network
constraints. Similarly, [29] creates survivable virtual groups
The remaining part of the paper is organized as follows:
In Section II, we discuss the related work. Section III intro-
duces the details of our service-based model and optimization
problem together with QoS and resilience extensions. In
Section IV, we discuss the complexity of the problem. In
Section V, we present a heuristic scheme to implement such
a model in real systems. We discuss optimization results in
Authorized licensed use limited to: University of New South Wales. Downloaded on October 01,2020 at 13:28:29 UTC from IEEE Xplore.  Restrictions apply. 
541
for each service to guarantee their availability and formulate
the deployment of the groups to an underlying network as
an optimization problem. Both studies focus on cloud service
characteristics as mentioned in Section II-A. In [30], a resource
allocation model is proposed for SDN/NFV including fault-
tolerance constraints. The authors of [31] consider topology
synthesis, routing, and scheduling problems jointly for fault-
tolerance in Time-Sensitive Networks (TSN) without including
any resource utilization constraint.
In this study, we consider the resilience of services together
with optimal resource allocation and routing for inter-service
communication. This is in contrast to the state of the art in
which the problem is not solved holistically. Other solutions
that embody resilience requirements in the optimization for-
mulation only reﬂect their respective domain characteristics.
None of them ﬁts our problem as mentioned in Section II-A.
Furthermore, in conventional safety-critical systems, crit-
ical components usually have multiple redundant replicas
for failover. From an applicability perspective, our approach
allows to maintain this replication factor in the presence of
node failures, and thus to tolerate more failures than the
replication factor would allow normally. For that, our service-
oriented model presumes additional resources as part of the
network design.
Table I summarizes the discussion here with a qualitative
comparison between our work and the presented studies con-
cerning the criteria discussed in this section. Resource Efﬁ-
ciency and Optimal Routing represent if a study considers the
optimality in resource and network utilization for the service
deployment and trafﬁc engineering, respectively. Resilience
represents if related study proposes any solution for resilience
against failures or attacks. Lastly, Inter-service Dependency
shows whether related study considers the relationship, e.g.,
hierarchy or communication, between different services as we
mentioned its necessity for embedded IoT networks. While
none of those studies satisﬁes all criteria, our work addresses
all of them as we show in the rest of the paper.
III. SERVICE-BASED MODEL FOR EMBEDDED NETWORKS
The service-based model aims to embed an overlay net-
work of services into an underlying physical network so that
the resulting assignment maintains inter-service data trafﬁc,
latency, and foremost resilience demands. In this sense, the
service overlay describes a communication scheme between
service instances. It can implicitly reﬂect redundancy for a
service, e.g., including multiple instances of the service in a
distributed manner. Fig. 2 gives an example for the embedding
of a service overlay (black nodes) in the underlying physical
network (grey nodes). A service instance can be allocated on a
single node to establish communication with other nodes that
host neighboring service instances. The overall service and
trafﬁc deployment should be restricted by the node and link
capacities. Our main goal is to ﬁnd the optimum allocation
of service overlay to the physical network and we present the
optimization model in this section. Table II summarizes all
terms and deﬁnitions of the formulation.
(cid:54)(cid:72)(cid:85)(cid:89)(cid:76)(cid:70)(cid:72)(cid:3)(cid:50)(cid:89)(cid:72)(cid:85)(cid:79)(cid:68)(cid:92)
(cid:51)(cid:75)(cid:92)(cid:86)(cid:76)(cid:70)(cid:68)(cid:79)(cid:3)(cid:49)(cid:72)(cid:87)(cid:90)(cid:82)(cid:85)(cid:78)
Fig. 2: Service overlay on top of underlay physical network. Dashed
lines show how basic service instances are assigned to physical nodes.
Grey nodes host the service instances and directed edges show the
paths that carry trafﬁc demand.
A. Optimization Problem
A physical network G(V, E) consists of nodes v ∈ V
and links e ∈ E. A service overlay O(S, D) consists of a
set of services s ∈ S and demands d ∈ D. Each service
instance s ∈ S should be deployed to one node to satisfy
trafﬁc demands of service overlay. A demand d is deﬁned
between a pair of service instances s.t. δ : D (cid:3)→ (SxS) and
s, t ∈ S to regulate inter-service communication.
δd = (s, t)
Besides requiring an amount of data trafﬁc between service
instances, a demand also characterizes the QoS and resilience
requirements for inter-service communication.
Services consume node resources, e.g., CPU or RAM. A
service has a resource demand of τs that needs to be provided
by a hosting node v. The total resource consumption of node v
to host a number of services is limited by its resource capacity
rv as follows:(cid:2)
ysvτs ≤ rv
∀v ∈ V
(1)
s∈S
(cid:2)
v∈V
ysv is a binary variable to decide if s is hosted by v.
Since each s ∈ S should be hosted by a node, the following
constraint needs to be satisﬁed:
ysv ≥ 1
∀s ∈ S
(2)
Inter-service communication is established between source
and destination nodes u and v via different paths p ∈ Puv.
Puv is the set of all possible paths between those nodes. The
set of all paths P is pre-computed and given as input to the
problem. To satisfy demand d from s to t s.t. δd = (s, t), we
should ensure that (i) any two nodes u and v host services
s and t, and (ii) the total data ﬂow through paths p ∈ Puv
should be at least the trafﬁc volume hd of demand d as:
(cid:2)
(cid:2)
ysuytvxdp ≥ hd
∀d ∈ D, δd = (s, t), s, t ∈ S
(3)
u,v∈V
p∈Puv
542
Authorized licensed use limited to: University of New South Wales. Downloaded on October 01,2020 at 13:28:29 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I: The comparison of the state-of-the-art studies.
Study
Resource Efﬁciency Optimal Routing