### Title: Service-Based Resilience for Embedded IoT Networks

**Authors:**
- Doğanalp Ergenç, Universität Hamburg, DE
- Jacek Rak, Gdańsk University of Technology, PL
- Mathias Fischer, Universität Hamburg, DE

**Conference:**
2020 50th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)

---

### Abstract

Embedded IoT networks are the backbone of safety-critical systems such as smart factories, autonomous vehicles, and airplanes. Therefore, resilience against failures and attacks should be a primary concern during their design stage. In this study, we introduce a service-based network model as a Mixed Integer Linear Programming (MILP) optimization problem for the efficient deployment of a service overlay to the embedded network, meeting Quality of Service (QoS) and resilience requirements. We analyze the complexity and boundaries of the problem and propose several heuristics to relax the service deployment phase and increase fault-tolerance against node and link failures. Our results indicate that the heuristics achieve near-optimal solutions for small problem sizes with up to 108 times faster solution times. We also show that the heuristics can solve larger problem sizes and maintain service availability for 85% of all potential single node failures.

**Index Terms:** Resilience, service overlay, optimization, embedded IoT, systems

---

### I. Introduction

Embedded IoT systems, used in autonomous vehicles, airplanes, and industrial networks, have evolved into complex ecosystems. For example, the latest Tesla autopilot is supported by eight cameras and twelve ultrasonic sensors for high-precision and high-quality environmental data. Similarly, Industry 4.0 introduces intelligent cyber-physical systems composed of numerous collaborating embedded devices [1], [2]. These devices may host safety-critical services where any failure can cause significant damage, including loss of human lives.

We observe that trends from conventional computer networks, such as more powerful devices and virtualization, are being adopted in the (embedded) IoT domain. This can be seen in scenarios like modern avionics [2] and smart cities [3]. In both cases, there is a need for a non-static and flexible deployment of services and functions in embedded systems. This allows these systems to handle more complex tasks and operate multiple virtualized services on top of a physical node while maintaining process isolation [3], [4]. Additionally, it enables more efficient use of node resources by starting additional services on demand and even migrating services between physical nodes. The increased flexibility of embedded nodes through virtualization techniques supports dynamic failover schemes, such as migrating or recovering services after a node failure [1], [2].

To realize an automatic braking system, for instance, a group of sensor-connected components hosts an object detection service to detect objects on the road. Another component hosts a collision avoidance service that processes information received from the object detection and initiates an emergency brake by informing the component hosting the chassis controller service. In such a service-based architecture, services can be easily migrated. For example, the collision avoidance service can be moved to any other component with sufficient processing power. The driver assistance service, as another example, can utilize components hosting the music infotainment service to maintain a virtual assistant that guides the driver vocally if its actual hosting component fails. From this perspective, enabling dynamic service deployment enhances resilient communication by leveraging the flexible design of modern embedded devices [12].

The main contribution of this paper is a model and an optimization problem formulation for embedding complex interconnected services in an IoT network, meeting QoS and robustness requirements. Our model results in a fault-tolerant deployment scheme against arbitrary node failures. When coupled with an additional dynamic function migration mechanism, the resulting system becomes resilient against failures and attacks. We formulate the entire model as a Mixed Integer Linear Program (MILP) to (i) discuss the complexity of the problem, which is known to be NP-hard, and (ii) find solutions for the optimal network deployment as a basis for several heuristics we propose. Our results indicate that our heuristics achieve near-optimal solutions for small problem sizes and can solve larger problem sizes, ensuring service availability for 90% of all potential single node failures.

---

### II. Related Work

In this section, we first summarize related work on service allocation and then describe approaches to enhance the network resilience of embedded IoT networks.

#### A. Service Allocation

In cloud computing, Software-Defined Networking (SDN), and Network Function Virtualization (NFV) domains, a service represents a movable (or relocatable) function with specific characteristics, allocated to physical nodes. In cloud computing, a service provides content, applications, or platforms to users under Service-Level Agreements (SLAs) while minimizing operational costs. This requires accurate resource orchestration regarding where, when, and how many service instances are deployed [13], [14]. Other issues include service dependencies [15], migrations [16], load-balancing [17], and task scheduling [18].

SDN/NFV services are considered virtual functions for processing and regulating communication, such as firewalls, routers, and load balancers, or providing network-wide services like DNS and AAA policies. Proper allocation of service compositions [19], [20] is important to minimize operational costs [21] and physical resource fragmentation [22] for providers and maximize service quality [21] and responsiveness [23] for users. Various studies address the joint service allocation and routing problem to deploy services on optimal paths [24], [25] while utilizing network resources optimally and satisfying SLAs.

Contrary to existing works, the service deployment in our study, i.e., in emerging virtualized IoT networks, defines the entire communication scheme of an embedded network. As communication traffic is defined between services, inter-service relationships are crucial for network design, considering both service deployment and traffic engineering. Therefore, it is a joint service allocation and inter-service traffic routing problem, where routing depends on service allocation. Adding resilience requirements to such a dynamic deployment scheme makes the problem even more challenging.

#### B. Network Resilience

Many traditional approaches leverage graph-related properties of networks to increase robustness. For example, finding primary and redundant directed trees [26] and multiple disjoint paths [27] are proposed against link failures. Some studies propose optimization problems with resilience constraints. In [28], the authors optimize virtual cloud topologies with k redundant instances under network constraints. Similarly, [29] creates survivable virtual groups for each service to ensure availability and formulates the deployment as an optimization problem. Both studies focus on cloud service characteristics. In [30], a resource allocation model for SDN/NFV includes fault-tolerance constraints. The authors of [31] consider topology synthesis, routing, and scheduling jointly for fault-tolerance in Time-Sensitive Networks (TSN) without resource utilization constraints.

In this study, we consider the resilience of services along with optimal resource allocation and routing for inter-service communication. This is in contrast to the state of the art, which does not solve the problem holistically. Other solutions that embody resilience requirements in the optimization formulation only reflect their respective domain characteristics and do not fit our problem. Furthermore, in conventional safety-critical systems, critical components usually have multiple redundant replicas for failover. Our approach allows maintaining this replication factor in the presence of node failures, thus tolerating more failures than the replication factor would normally allow. For this, our service-oriented model assumes additional resources as part of the network design.

Table I summarizes the discussion with a qualitative comparison between our work and the presented studies concerning the criteria discussed in this section. Resource Efficiency and Optimal Routing represent whether a study considers the optimality in resource and network utilization for service deployment and traffic engineering, respectively. Resilience indicates if a study proposes any solution for resilience against failures or attacks. Inter-service Dependency shows whether a study considers the relationship between different services, as necessary for embedded IoT networks. While none of the studies satisfy all criteria, our work addresses all of them, as shown in the rest of the paper.

---

### III. Service-Based Model for Embedded Networks

The service-based model aims to embed an overlay network of services into an underlying physical network so that the resulting assignment maintains inter-service data traffic, latency, and foremost resilience demands. The service overlay describes a communication scheme between service instances, implicitly reflecting redundancy by including multiple instances of a service in a distributed manner. Figure 2 illustrates an example of embedding a service overlay (black nodes) in the underlying physical network (grey nodes). A service instance can be allocated on a single node to establish communication with other nodes hosting neighboring service instances. The overall service and traffic deployment should be constrained by node and link capacities. Our main goal is to find the optimal allocation of the service overlay to the physical network, and we present the optimization model in this section. Table II summarizes all terms and definitions of the formulation.

**A. Optimization Problem**

A physical network \( G(V, E) \) consists of nodes \( v \in V \) and links \( e \in E \). A service overlay \( O(S, D) \) consists of a set of services \( s \in S \) and demands \( d \in D \). Each service instance \( s \in S \) should be deployed to one node to satisfy the traffic demands of the service overlay. A demand \( d \) is defined between a pair of service instances \( \delta : D \to (S \times S) \) and \( s, t \in S \) to regulate inter-service communication.

\[ \delta_d = (s, t) \]

Besides requiring an amount of data traffic between service instances, a demand also characterizes the QoS and resilience requirements for inter-service communication.

Services consume node resources, such as CPU or RAM. A service has a resource demand \( \tau_s \) that needs to be provided by a hosting node \( v \). The total resource consumption of node \( v \) to host a number of services is limited by its resource capacity \( r_v \) as follows:

\[ \sum_{s \in S} y_{sv} \tau_s \leq r_v \quad \forall v \in V \]

where \( y_{sv} \) is a binary variable indicating whether service \( s \) is hosted by node \( v \).

Since each \( s \in S \) should be hosted by a node, the following constraint must be satisfied:

\[ \sum_{v \in V} y_{sv} \geq 1 \quad \forall s \in S \]

Inter-service communication is established between source and destination nodes \( u \) and \( v \) via different paths \( p \in P_{uv} \). \( P_{uv} \) is the set of all possible paths between those nodes. The set of all paths \( P \) is pre-computed and given as input to the problem. To satisfy demand \( d \) from \( s \) to \( t \) such that \( \delta_d = (s, t) \), we must ensure that (i) any two nodes \( u \) and \( v \) host services \( s \) and \( t \), and (ii) the total data flow through paths \( p \in P_{uv} \) should be at least the traffic volume \( h_d \) of demand \( d \):

\[ \sum_{u, v \in V} \sum_{p \in P_{uv}} y_{su} y_{tv} x_{dp} \geq h_d \quad \forall d \in D, \delta_d = (s, t), s, t \in S \]

---

This revised version aims to improve clarity, coherence, and professionalism, making the text more accessible and understandable.