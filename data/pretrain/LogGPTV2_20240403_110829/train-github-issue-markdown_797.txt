In the ES6 specification, under the section on `let` and `const` declarations, the following rules are defined:

- **LexicalDeclaration**:
  - `LetOrConst BindingList;`
  - It is a syntax error if the `BoundNames` of `BindingList` contains "let".
  - It is a syntax error if the `BoundNames` of `BindingList` contains any duplicate entries.

Currently, the following code is allowed, but it should be considered a syntax error, regardless of whether strict mode is enabled or not:

```javascript
let let = 10;
const let = 30;
```

However, the following code should only be considered a syntax error if it is in strict mode:

```javascript
let = 10;
var let = 20;
```

### Summary
- The use of `let` as a binding name in `let` or `const` declarations should result in a syntax error.
- Duplicate binding names within a `let` or `const` declaration should also result in a syntax error.
- Assigning a value to `let` (as if it were a variable) and using `let` as a variable name with `var` should only be considered a syntax error in strict mode.