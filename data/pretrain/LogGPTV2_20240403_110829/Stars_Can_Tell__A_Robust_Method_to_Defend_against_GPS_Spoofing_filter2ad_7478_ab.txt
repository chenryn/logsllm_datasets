described in [38] also requires special hardware (i.e., USRP
and a patch antenna) to access highly accurate phase infor-
mation. Thus, it is not supported by most off-the-shelf GPS
chips. Commercial phased antenna arrays (with GPS band)
could cost thousands or tens of thousands of dollars [4].
Cryptography-based Defenses.
Crypto-based solution is
to introduce encryption and authentication schemes to civil-
ian GPS [16, 42, 52]. However, this is also the most costly
approach (estimated cost of multi-billion dollars) since it
demands changes in both the satellites and existing GPS re-
ceivers. More importantly, this approach is not backward-
compatible with existing billions of GPS chipsets.
USENIX Association
30th USENIX Security Symposium    3937
Cost of Software/Hardware ModiﬁcationRobustnessOur MethodRAIMAoACryptoAdditionalInfo SourcesSignal ProcessingOur Method. We seek to design spooﬁng detection meth-
ods for GPS devices with off-the-shelf chipsets. The goal is
to strike the balance between cost and robustness.
3 Threat Model
Before describing our defense methods, we ﬁrst introduce
the threat model. The goal of the attacker is to stealthily ma-
nipulate the location computation of a target GPS receiver
(victim) by generating spooﬁng GPS signals. We assume
the attacker owns a powerful state-of-the-art spoofer that can
launch "smooth takeover" without causing anomalies during
the takeover phase. Like most spooﬁng attacks, we assume
the attacker has no physical access to the GPS receiver and
cannot impose any physical alteration, hardware mounting,
conﬁguration change, or malware installation on the victim
device. The attack can only be launched remotely by trans-
mitting wireless signals on the GPS channel.
In this paper, we assume that the attacker uses a single
spoofer to generate GPS signals for practical reasons. While
multiple spoofers can generate signals from different angles,
these spoofers will require specialized hardware to facilitate
precise coordination [18]. Otherwise, the spooﬁng signals can
be easily exposed due to a lack of synchronization. Increasing
the number of spoofers will also make it harder to conceal the
physical presence of the spoofers. While a multi-spoofer co-
ordination attack is theoretically possible, we do not consider
this setup in this paper.
Under this threat model, we consider two types of attacks.
• Basic Attack: We assume that the attacker is not aware
of the presence of any defense method when launching
the attack. We will design and evaluate our defense
methods against this basic attack in Section 4, 5 and 6.
• Adaptive Attack: We assume the attacker is aware of
our defense methods and tries to bypass them. We will
describe the details of this adaptive attack in Section 7,
and our designs to harden the detection methods in Sec-
tion 8. Evaluation is presented in Section 9
4 GPS Spooﬁng Detection: Design Intuitions
We start by describing the key intuitions behind our defense
methods. Among the defense methods shown in Figure 1,
the Angle of Arrival (AoA) method is widely considered as
a robust way to detect spoofed signals [37]. However, AoA
measurement requires specialized hardware (e.g., antenna ar-
rays) which incurs a high cost. Our idea is to conduct AoA
measurements with off-the-shelf chipsets that are widely avail-
able on GPS devices such as smartphones. These chipsets
usually only have an omnidirectional GPS antenna, making it
challenging to derive AoA directly.
Rotational Blockage Effect. We solve the above problem
based on an intuitive idea. Given a GPS receiver, if we place
Figure 2: An illustration of how to create blockage effect
using human body as an obstacle. GPS signal sources can be
either legitimate satellites or a GPS spoofer.
a signal-blocking material close to one side of the receiver,
it in effect turns the receiver from omnidirectional to direc-
tional. An example radiation pattern is shown in Figure 21
in the Appendix. Considering the frequency bands of GPS
signals (1.1 GHz ~1.6 GHz), it is easy to ﬁnd signal blocking
materials. For example, human body, a piece of foil paper, a
metal plate, or a tin can are all qualiﬁed blocking materials.
If we rotate the GPS receiver along with the blocking ma-
terial, the received signal strength will ﬂuctuate during the
rotation process due to the different receiver gains at differ-
ent signal arrival angles. The ﬂuctuation patterns provide
information regarding the AoA of the GPS signal.
Figure 2 illustrates an example of such a rotation mech-
anism. A person holds a smartphone (i.e., GPS receiver)
over the chest and spins locally. During the spinning process,
when the person along with the phone is facing a particular
GPS signal source, this signal will be received without any
blocking. When the person along with the phone is back fac-
ing the signal source, the human body will cause signiﬁcant
attenuation to the signal, which leads to a reduction in the
received signal strength (RSS). By analyzing the ﬂuctuation
in RSS, we can estimate the AoA of the signal.
Spoofer Implementation and Experiment Setups.
To
demonstrate the rotational blockage effect, we implement
the basic GPS spooﬁng attack by modifying open-source
SDR-based GPS projects [10, 26, 36]. This spoofer contains
four components: a HackRF One, a Raspberry Pi, a portable
power bank, and an antenna. The size of the spoofer is small
enough to be placed inside a lunchbox. HackRF One is a
Software Deﬁned Radio (SDR) platform, which is used to
transmit the spooﬁng GPS signals. It comes with an SMA-
interface omnidirectional antenna with a frequency range of
700–2700 MHZ that covers the civilian GPS band (1575.42
MHz). We use a 10000 mAh power bank as an energy source
for the spoofer. A Raspberry Pi 3B (Quad-Core 1.2GHz
Broadcom BCM2837 64bit CPU, 1GB RAM) runs our core
software for the spooﬁng attack. This HackRF based spoofer
is sufﬁcient for our attack implementation and experiments.
While a more sophisticated (and expensive) spoofer might
make the takeover more seamless, it does not add much value
3938    30th USENIX Security Symposium
USENIX Association
GPS Signal Source are ﬁtted curves of measurement results. Dashed vertical lines
are the Angle of Ephemeris (AoE) of these GPS satellites,
which correspond to the ground-truth angle of satellites and
are publicly available at [32]. We observe that (1) different
satellites are located at different directions with respect to
the receiver; and (2) ﬁtted curves reach the peak value when
facing satellites. Also, the results conﬁrm that the blocking
effect exists across satellites despite different elevation angles.
For instance, during the time of the experiment, satellites ID-3
and ID-14 had an elevation angle of 27.2 degrees and 69.0
degrees, respectively.
Figure 3b shows the results when the GPS signals are gener-
ated by a spoofer (basic attack), which have different patterns.
We again select satellites whose lines are not completely over-
lapped. In the left ﬁgure, we observe that the spoofed signals
from different “simulated satellites” are almost synchronized
over time. In the right ﬁgure, we observe that the peak of
the signal strength is not well aligned with the AoE of the
real GPS satellites. Fundamentally, the spoofer is detectable
because the diverse AoA of different satellites are difﬁcult
to simulate by a single spoofer, especially when the target
GPS receiver is rotating (with blockage material) under an
unknown/uneven rotational speed. In the following, we will
develop spooﬁng detection methods based on the anomalies
in the AoA measurements.
5 Detection Methods for Basic Attack
Based on these intuitions, we next introduce our defense
methods against basic attacks (where the attacker is not aware
of the presence of any defense). There are several challenges
to address to detect GPS spooﬁng signals. First, we need
to overcome the noisy CN0 measurements of GPS signals
(particularly when there are signal reﬂections from the nearby
environment). Second, the detection needs to be efﬁcient,
considering most off-the-shelf chips have a low refresh rate
to measure CN0. Below, we introduce three methods with
different design trade-offs, namely AoA-Diff, AoA-Dev, and
CN0-Corr. Key notations are listed in Table 1.
5.1 AoA-Diff Detection
The most intuitive detection method is to compare GPS sig-
nals’ Angle-of-Arrival (AoA) with the satellite ground-truth
angles calculated from the Ephemeris Dataset (AoE). We
called this method as AoA-Diff.
While intuitive, AoA-Diff has some practical challenges.
First, it is difﬁcult to always estimate AoA accurately in prac-
tice because GPS signals may be reﬂected by buildings and
other surrounding surfaces. Second, to obtain the ground-
truth AoE, the receiver needs to provide at least some coarse
time and location in order to query the Ephemeris Dataset.
While the time information can be obtained from the re-
ceiver’s internal clock, the location information may be more
(a) Non-spooﬁng
(b) Basic spooﬁng attack
Figure 3: CN0 pattern under non-spooﬁng and basic spooﬁng
attacks. Vertical dash lines represent AoEs (the ground-truth
angle) of satellites at the time of experiments.
to our experiment since our detection scheme does not rely
on take-over anomalies.
As a quick experiment, we set the spoofer 5 meters away
from the target smartphone GPS receiver. To measure GPS
signals, we developed a prototype Android app which con-
tinuously collects GNSS measurements as well as sensors
data (accelerometer, gyroscope, and magnetometer). One
researcher holds a XIAOMI MIX2 (Android 8.0, Snapdragon
835, supporting GPS L1 Band) over his chest and spins lo-
cally to collect GPS signals. We will provide more details for
the smartphone prototype, experiment setups, and the ethical
considerations of the experiments in Section 6.1.
Initial Measurements.
Figure 3 illustrates the different
characteristics between spooﬁng and non-spooﬁng cases. The
results are collected from an open-space CN0 ﬁeld measure-
ment. We report carrier-to-noise-density ratio (CN0), which
is the ratio of received signal power to noise density (a stan-
dard metric for signal strength). The unit of CN0 is dB-Hz,
and a higher value often results in more precise positioning.
During the non-spooﬁng experiment, we collect GPS sig-
nals from 10 legitimate satellites. For simplicity, we plot
Figure 3a using four satellites (ID: 3, 14, 26, 31) whose
lines do not overlap with each other. The left ﬁgure shows
CN0 over time, in which we see periodical changes of signal
strength due to the rotation of GPS receiver and blockage.
The right ﬁgure shows CN0 measurements over different rota-
tion angles, which are derived from IMU sensors in the phone.
The colored dots are measured CN0 values while solid curves
USENIX Association
30th USENIX Security Symposium    3939
204060Time (second)010203040CN0 (dB-Hz)Time-CN0Sat ID:3Sat ID:14Sat ID:26Sat ID:310100200300Angle (degree)010203040CN0 (dB-Hz)Degree-CN0Sat ID:3Sat ID:14Sat ID:26Sat ID:31204060010203040CN0 (dB-Hz)Time-CN0Sat ID:3Sat ID:14Sat ID:26Sat ID:31Time (second)0100200300Angle (degree)010203040CN0 (dB-Hz)Degree-CN0Sat ID:3Sat ID:14Sat ID:26Sat ID:31Symbol
G
T
N
M
si
S
AoA
AoE
CN0
Csi
A
R
r
δAoA
Deﬁnition
The GNSS measurements that are being processed
A predeﬁned threshold
Number of samples in the log ﬁle of G
Number of satellites
Satellite ID for the ith satellite
Set of satellite IDs, S = {si | i = 1, ...,M}
Set of GPS signals’ angle-of-arrivals (AoAs),
obtained from our measurement algorithm:
AoA = {aoasi | si ∈ S}
Set of ground-truth satellite angles
calculated from the Ephmeris dataset:
AoE = {aoesi | si ∈ S}
Carrier-to-Noise-density ratio of the GPS signal
Time sequence of CN0 measurements for satellite si,
Csi = [c1si ,c2si , ...,cN si ]
Time sequence of Azimuth of the GPS receiver, A =
[a1,a2, ...,aN ]
Correlation matrix of CN0 of different satellites.
Combined correlation coefﬁcient of CN0
sequence of all satellites.
The standard deviation of AoA
Table 1: Notation and deﬁnition.
challenging to obtain (given the device is under a spooﬁng
attack). We assume a coarse-grained location (e.g., at the city
level) is available.
Considering these challenges, we only treat AoA-Diff as a
naive baseline. More speciﬁcally, given a satellite si, we ﬁrst
compute its AoA (i.e., aoasi) based on CN0 measurements
and then query the ground-truth satellite angle aoesi. We then
put all the satellites’ AoA and AoE into two separate vectors
and calculate their Euclidean distance. If the difference is
greater than a threshold Tdi f f , we determine the GPS receiver
is under spooﬁng. Later in Section 6.3, we will evaluate the
performance of AoA-Diff in comparison with other proposed
methods.
5.2 AoA-Dev Detection
Considering the limitations of AoA-Diff, we next design an
AoA-Dev method that does not require accurate AoA estima-
tion or precise AoE as the ground-truth. AoA-Dev is short
for “AoA standard deviations”. The idea is based on the in-
tuition that legitimate signals’ AoAs from different satellites
are more widespread compared with spoofed signals. Even
if there are reﬂections by nearby objects and buildings, the
spoofed signals (from a single spoofer) are likely to be re-
ﬂected towards similar directions. As such, analyzing the
deviations of AoA can overcome the inﬂuence of environmen-
tal signal reﬂections.
As shown in Algorithm 1, we ﬁrst estimate the AoAs of
the received signals in lines 2–7. Given a satellite si, we take
the CN0 measurement sequence Csi and its corresponding
receiver’s orientation angles A. This creates a CN0-to-Angle
scatter plot (similar to the right ﬁgures in Figure 3). We then
ﬁt these points into a Sine wave curve. We consider the peak
ALGORITHM 1: AoA-Dev Algorithm
Input: G, Tdev
Output: AoA, Spoo f Flag, δAoA
1: Initialization: AoA ← /0
2: Preprocessing: Obtain S = {s1,s2, ...,sM} ,Csi =(cid:2)c1si ,c2si , ...,cN si
and A = [a1,a2, ...,aN ] from GNSS measurements G
(cid:3)
3: for each satellite si do
4:
Fit CN0-Angle sequence into sine wave curve:
SWi = f it(A,Csi )
Get angle that resides peak of SWi: aoasi = getPeakAngle(SWi)
Append aoasi into set AoA: AoA = append(AoA,aoasi )
(cid:113)
5:
6:
7: end for
8: Compute the mean of aoasi in [0,2π): AoA = mean(AoA)
i=1 (aoasi − AoA)
2
∑N
9: Derive standard deviation: δAoA =
10:
11:
12: else
13:
14: end if
15: return AoA, Spoo f Flag, δAoA
if δAoA > Tdev then
Spoo f Flag = False
Spoo f Flag = True
/(N − 1)
of the curve as the AoA of the GPS signal, denoted as aoasi.