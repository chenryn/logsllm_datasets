---
author: Seth Kenlon
category: 观点
comments_data:
- date: '2017-02-21 13:17:00'
  message: test
  postip: 218.18.115.36
  username: 来自广东深圳的 Chrome 22.0|Windows 7 用户
- date: '2017-02-22 00:46:53'
  message: 开源成本很高，只有大公司玩的起；个人需要付出极大的精力。
  postip: 125.35.123.30
  username: 来自北京的 Firefox 51.0|Fedora 用户
- date: '2019-12-27 13:21:33'
  message: 即将加入开源，看到的第一帖，学习了。
  postip: 222.66.117.22
  username: 来自上海的 Chrome 79.0|Windows 10 用户
count:
  commentnum: 3
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 8646
date: '2017-02-20 08:32:00'
editorchoice: true
excerpt: 如果你也渴望加入到推动技术世界发展的社区中，你应该如何开始呢？你要做的第一步是什么？以后应该怎么做？
fromurl: https://opensource.com/article/17/1/how-get-started-open-source-programmer
id: 8220
islctt: true
largepic: /data/attachment/album/201702/20/000846wjgt4t9tteigvd4j.jpg
permalink: /article-8220-1.html
pic: /data/attachment/album/201702/20/000846wjgt4t9tteigvd4j.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 如果你也渴望加入到推动技术世界发展的社区中，你应该如何开始呢？你要做的第一步是什么？以后应该怎么做？
tags:
- 程序员
- 开源
thumb: false
title: 如何成为一名开源程序员
titlepic: true
translator: rusking
updated: '2017-02-20 08:32:00'
---
科技世界的探索总是让我们兴奋不已。很多科技日新月异，你探索得越深远，你看到的世界就越广阔无穷，这就像是[一只驼一只的海龟](https://en.wikipedia.org/wiki/Turtles_all_the_way_down)一样。因此，科技世界也像宇宙一样无穷无尽。如果你也渴望加入到推动技术世界发展的社区中，你应该如何开始呢？你要做的第一步是什么？以后应该怎么做？
![](/data/attachment/album/201702/20/000846wjgt4t9tteigvd4j.jpg)
首先，你得明白开源指的是开放软件源代码的意思。这个很好理解，但是“开源”这个词最近一段时间经常出现在我们身边，所以估计有时候大家都忘记了开源只是用来形容一种文化现象，而不是一家世界 500 强公司的名字。跟其它公司或组织不同的是，你不用去参加面试或填个申请表、注册表的方式来成为一名开源程序员。你需要做的就是**编程**，然后把代码共享出来，并且完全保证在任何情况下该代码都保持开放状态。
只需要这样，你就已经成为一名开源程序员了！
现在你有了目标，那么你为之奋斗的基础能力怎么样了？
### 技能树
你玩过 RPG 游戏吗？在那些游戏中就有关于线性“技能树”的概念。当你玩游戏时，你掌握了基本技能后，便会“升级”，并且获得新的技能，然后你使用这些新的技能再次“升级”到一个更高的等级，你又会得到更多新的技能。通过这样不断的升级，获取新技能，以让你的游戏角色变得更强大。
成为一个程序员有点像提升你的技能树等级。你掌握了一些基础的技术，在参与开源项目开发的过程中，你不断实践，直至自己的技术等级上升到一个新的层次，之后你又懂了一些新的技术，并在项目开发过程中不断实践，不断提升技术等级，然后你再沿着这个技能树不断成长，不断进步。
你会发现自己面临的不只一棵技能树。开源软件涉及到的技术比较多，包括很多参与者自身的优势、能力及兴趣爱好等。然而，有一些非常重要的技能有助于你成为一名伟大的程序员，不断的提高这些技能是成功参与到开源项目中的重要组成部分。
### 脚本编程
![](/data/attachment/album/201702/20/000908f7whdh6dbifwub1z.png)
对于像 Linux 或 BSD 系统这样的 POSIX 系统而言，最大的优势之一就是在你每次使用电脑的过程中，你都有机会练习编程。如果你不知道如何开始编程，你可以从解决工作中的一些基本问题做起。想想你日常工作中有哪些重复性的工作，你可以通过编写脚本的方式来让它们自动执行。这一步非常简单，比如说批量转换文件格式或重置图片的大小、检查邮件，甚至是通过单击运行你最常用的五个应用程序。无论是什么任务，你可以花一些时间去编写脚本以让它们自动完成。
如果有些工作需要在控制终端下操作，那么你就可以编写脚本来完成。学习 bash 或 tsch 编程，把编写系统脚本作为你写代码和理解系统的工作原理的第一步。
### 系统管理
![](/data/attachment/album/201702/20/000908vjub44bwjqtnpbpu.png)
从这一点来讲，你也可以转变成一个程序员，也可以整个跳到另外一个不同的技能树上：那就是系统管理工作。跟程序员比起来，这两个职业在技能上有一些相似（一个优秀的系统管理员应该有一些编程经验，并能够熟练使用 Python、Perl，或者其它类似的编程言语来解决一些独特的问题），而*程序员*指的是那些一直编写代码的人。
### 程序员
![](/data/attachment/album/201702/20/000908rospov9r31yf3f8o.png)
开源是学习编程技巧最好的方式：你可以查看其他人写的代码，从中借鉴他们的想法和技术，从他们的错误中学习，并跟自己写的代码进行对比以发现两者的优缺点；如果你是使用 Linux 或 BSD 操作系统，**整个**环境对你来说都是开放的，目之所及，随心所欲。
这就像旅游指南里所说的，随意行去。事实上你不大会去深入到一个项目的源代码中，但是如果这样的话，可以让你在某一时刻突然意识到自己会编程了。编程是一份很难的技术活，否则大家都可以从事编程工作了。
幸运的是，编程是有逻辑而结构化的，这些特性跟编程语言相关。你也许不会深入的去研究编程，但是你研究得越深，你懂的越多。
懂得如何控制以及让电脑自动执行任务是一回事，但是知道如何编写其它人想自动实现任务的代码，才能说明你已经真正进入到编程领域了。
### 精通多种编程语言
![](/data/attachment/album/201702/20/000909dv81h5xh5nncs99c.png)
所有的编程语言都旨在处理相同的任务：让计算机能够完成计算工作。选择一种编程语言时你得考虑以下几个因素，学编程的目的是什么，你所做的工作最常用的编程语言是什么，你最容易理解哪一种编程语言以及你的学习方式。