User: 作为一名DevOps工程师，你需要在CI/CD流程中使用Jenkins来自动化构建和部署应用程序。请提供一个Jenkins Pipeline的配置示例。
Assistant: 以下是一个简单的Jenkins Pipeline的配置示例，用于构建和部署一个基于Node.js的应用程序：

```
pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/your-repo/app.git'
      }
    }
    stage('Build') {
      steps {
        sh 'npm install'
        sh 'npm run build'
      }
    }
    stage('Test') {
      steps {
        sh 'npm test'
      }
    }
    stage('Deploy') {
      steps {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'your-credentials-id', usernameVariable: 'SSH_USERNAME', passwordVariable: 'SSH_PASSWORD']]) {
          sshagent(['your-server']) {
            sh 'ssh $SSH_USERNAME@$SSH_SERVER "cd /var/www/app && git pull origin master && npm install && pm2 restart app"'
          }
        }
      }
    }
  }
}
```

该Pipeline包括4个构建阶段：

1. `Checkout`：从Git仓库中检出应用程序代码。
2. `Build`：执行 `npm install` 和 `npm run build` 命令，安装依赖并构建应用程序。
3. `Test`：执行 `npm test` 命令，在CI/CD流程中进行测试并验证代码是否已成功构建，达到了预期的质量水平。
4. `Deploy`：使用ssh连接到指定的服务器，将最新的代码拉取到远程目录中，然后重新安装依赖并重启Node.js应用程序。

请注意， `withCredentials` 参数在Jenkins中用于安全地存储和使用敏感信息，例如使用SSH连接到服务器所需的凭据。该示例使用了Credentials plugin（凭证插件）来管理和保存凭据，因此需要先在Jenkins中配置好。