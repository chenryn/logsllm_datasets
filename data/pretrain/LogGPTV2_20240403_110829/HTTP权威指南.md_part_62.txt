SMALL LETTER A）的若干变体。尽管它们的笔画图案和风格有很大的不同，但母
语是西欧语言的读者都能立刻辨认出这5个形状是同一个字符。
图16-3 一个字符可以有很多不同的书写形式
在很多书面语体系中，根据一个字符在单词中位置的不同，同一个字符也会有不同
的笔画形状。例如，图16-4中的4种笔画都表示字符ARABIC LETTER AIN。6图
16-4a显示了AIN作为一个单独的字符时是如何书写的。图16-4d显示的是AIN在
单词开头时的情形。图16-4c显示了AIN在单词中间的情形，而图16-4b显示的是
AIN在单词结尾处的情形。7
（a）独立存 在 （b）位于结尾处（c）位于中间（d）位于起始处
（这些不同的字形都表示同一个字符ARABIC LETTER AIN）
图16-4 单个字符ARABIC LETTER AIN的4种与位置相关的书写形式
16.3.4 字形、连笔以及表示形式
不要把字符和字形混淆。字符是唯一的、抽象的语言“原子”。字形是画出每个字符
时使用的特定方式。根据艺术形式和手法的不同，每个字符可以有很多不同的字形。8
注6：AIN的读音有些像 ayine的发音，但发音朝向喉咙后部。
注7：注意，阿拉伯语的单词是从右向左书写的。
注8： 很多人用术语“字形”来表示最终生成的位图图像，但从技术上说，字形是字符的内在形状，与字体
和次要的艺术形式无关。进行这种区分不太容易，对我们的目的也没有什么用处。
396 ｜ 第16章
同样，也不要把字符与表示形式混淆起来。为了让书法作品更好看，很多手写体和
字体允许人们把相邻的字符漂亮地连写起来，称为连笔（ligatures），这样两个字
符就平滑地连接在一起了。母语为英语的作者常把F和I结合为FI连笔（参见图
16-5a和图16-5b），而阿拉伯语的作者常把字符“LAM”和“ALIF”结合为一种很
优雅的连笔（参见图16-5c和图16-5d）。 378
(a)未使用FI连笔 (b)用了FI连笔 (c)未使用LA连笔 (d)用了LA连笔
ALIF LAM LAM和ALIF
图16-5 连笔是相邻字符的另一种风格的表示形式，并非新的字符
这里给出一般的规则：如果用一种字形替代另一种的时候，文本的意思变了，那这
些字形就是不同的字符。否则，它们就是同一个字符的不同风格的表示形式。9
16.3.5 编码后的字符集
根据 RFC 2277 和 2130 的定义，编码后的字符集把整数映射到字符。编码后的
字符集经常用数组来实现10，通过代码数值来索引（参见图 16-6）。数组的元素就
是字符 11。
编码后的字符集US-ASCII
68 大写的拉丁字母D
代码 68 (0x44)
图16-6 可以把编码后的字符集看作数组，把数值化的代码映射到字符
下面我们来看一些重要的编码后的字符集标准，包括具有历史意义的US-ASCII字符
集、ASCII的iso-8859扩展、日文的JIS X 0201字符集以及统一字符集（Universal
Character Set，Unicode）。
注9： 语义和表示方式之间的区别并不总是很清晰的。为了实现的方便，已经为同一个字符的某些表示变体
分配了不同的字符。不过我们还是尽量要避免这种做法。
注10：数组可以是多维的，这样代码数字中的不同二进制码就可以索引到数组的不同维。
注11： 图16-6使用了一个网格来表示编码后的字符集。网格中的每个元素都包含一个字符图像。这些图像
应看作是符号，图像“D”是字符LATIN CAPITAL LETTER D的简称，而不是任何特定的图形化字形。
国际化 ｜ 397
1. US-ASCII:所有字符集的始祖
ASCII是最著名的编码后字符集，早在1968年就由ANSI在标准X3.4，“美国标准信
379 息交换代码”（American Standard Code for Information Interchange）中进行了标准化。
ASCII的代码值只是从0到127，因此只需要7个二进制码就可以覆盖代码空间。ASCII
的推荐名称是US-ASCII，这样可以和那些7位字符集的一些国际化变体区分开来。
HTTP报文（首部、URI等）使用的字符集是US-ASCII。
2. iso-8859
iso-8859字符集标准是US-ASCII的8位超集，使用二进制码的高位增加了一些国
际化书面字符。由额外的二进制码提供的附加空间（多了128个代码）还不够大，
甚至都不够所有的欧洲字符使用，更不用说亚洲字符了。因此iso-8859为不同地区
定制了不同的字符集，如下所示。
iso-8859-1 西欧语言（例如，英语、法语）
iso-8859-2 中欧和东欧语言（例如，捷克、波兰）
iso-8859-3 南欧语言
iso-8859-4 北欧语言（例如，拉托维亚，立陶宛，格陵兰）
iso-8859-5 斯拉夫语（例如，保加利亚、俄罗斯、塞尔维亚）
iso-8859-6 阿拉伯语
iso-8859-7 希腊语
iso-8859-8 希伯来语
iso-8859-9 土耳其语
iso-8859-10 日耳曼和斯堪的纳维亚语言（例如，冰岛、因纽特）
iso-8859-15 对iso-8859-1的修改，包括了新的欧元字符
iso-8859-1也称为Latin1，是HTML的默认字符集。可以用它来表示大多数西欧
语言的文本。因为iso-8859-15中包含了新的欧元符号，有过一些用它来代替iso-
8859-1并作为HTTP默认编码后字符集的讨论。然而，由于iso-8859-1已经被广泛
采用，要大范围地变更到iso-8859-15恐怕不是短时间内可以完成的。
3. JIS X 0201
JIS X 0201是把ASCII扩展到日文半宽片假名字符的一个极小化的字符集。半宽
片假名字符最早用在日文电报系统中。JIS X 0201常常被称作JIS Roman，JIS是
“Japanese Industrial Standard”（日文工业化标准）的缩写。
4. JIS X 0208与JIS X 0212
日文中包括数千个来自几个书面语系统中的字符。尽管可以（很痛苦地）勉强只使
用JIS X 0201中的那63个基本的片假名字符，但实际使用中需要远比这个更完整
380 的字符集。
398 ｜ 第16章
JIS X 0208字符集是首个多字节日文字符集，它定义了6879个编码的字符，其中大
多数是来源于中文的日本汉字。JIS X 0212字符集又扩充了6067个字符。
5. UCS
UCS（Universal Character Set，统一字符集）是把全世界的所有字符整合到单一的
编码后字符集的环球标准化成果。UCS由ISO 10646定义。Unicode是遵循UCS标
准的商业化联合组织。UCS具有能容纳百万以上字符的代码空间，不过基本集合只
有大约5万个字符。
16.3.6 字符编码方案
字符编码方案规定如何把字符的代码数字打包装入内容比特，以及在另一端如何将
其解包回字符代码（参见图16-7）。字符编码方案有以下3种主要类型。
• 固定宽度
固定宽度方式的编码用固定数量的比特表示每个编码后的字符。它们能被快速处
理，但可能会浪费空间。
• 可变宽度（无模态）
可变宽度方式的编码对不同的字符代码数字采用不同数量的比特。对于常用字
符，这样可以减少需要的位数，而且还能在允许使用多字节来表示国际性字符的
同时，保持对传统8位字符集的兼容性。
• 可变宽度（有模态）
有模态的编码使用特殊的“转义”模式在不同的模态之间切换。例如，可以用有
模态的编码在文本中使用多个互相有重叠的字符集。有模态的编码处理起来比较
复杂，但它们可以有效地支持复杂的书写系统。
HTTP/1.1 200 OK
Content-type: text/html; charset=iso-2022-jp
Content-length: 4198
Content-lanuage: jp
00100101110100100101001001111101
01010010100111101001010011010010
01010101011100000101010001010011
01011111001000010101111101010...
字符编码器 实体主体 字符解码器
图16-7 字符编码方案把字符代码编码为比特，并负责反向变换
国际化 ｜ 399
381 下面我们来看一些常见的编码方案。
1. 8位
8位固定宽度恒等编码把每个字符代码编码为相应的8位二进制值。它只能支持有
256个字符代码范围的字符集。iso-8859字符集家族系列使用的就是8位恒等编码。
2. UTF-8
UTF-8是一种流行的为UCS设计的字符编码方案，UTF表示UCS变换格式（UCS
Transformation Format）。UTF-8为字符代码值使用的是无模态的变宽编码，第一字
节的高位表示编码后的字符所用的字节数，所需的每个后续字节都含有6位的代码
值（参见表16-2）。
如果编码后的第1字节的最高位是0，长度就是1字节，剩余的7位就包含字符的
代码。这样带来的美妙结果就是和ASCII兼容（但和iso-8859系列不兼容，因为
iso-8859系列使用了最高位）。
表16-2 UTF-8 变宽无模态编码
字符代码的二进制位 字节1 字节2 字节3 字节4 字节5 字节 6
0-7 0ccccccc - - - - -
8-11 110ccccc 10cccccc - - - -
12-16 1110cccc 10cccccc 10cccccc - - -
17-21 11110ccc 10cccccc 10cccccc 10cccccc - -
22-26 111110cc 10cccccc 10cccccc 10cccccc 10cccccc -
27-31 1111110c 10cccccc 10cccccc 10cccccc 10cccccc 10cccccc
例如，字符代码 90（ASCII 的“Z”）会被编码为 1 个字节（01011010），而代码
5073（13位二进制值为1001111010001）会被编码为3个字节：
11100001 10001111 10010001
3. iso-2022-jp
iso-2022-jp是互联网上的日文文档中广泛使用的编码。它是变宽、有模态的，所有
值都不超过128，以避免和不支持8位字符的软件出现兼容性问题。
编码上下文始终被设置为 4 种预设的字符集之一 12，使用特殊的“转义序列”
（escape sequence）在字符集之间切换。iso-2022-jp的初始状态使用US-ASCII字符
注12：iso-2022-jp编码和这4种字符集是紧密绑定的，而其他一些编码是和特定的字符集无关的。
400 ｜ 第16章
集，使用3个字节的转义序列可以切换到JIS X 0201（ JIS-Roman）字符集或大得多
的JIS X 0208-1978和JIS X 0208-1983字符集。 382
表16-3中列出了这些转义序列。实际上，日文文本以ESC $ @或ESC $ B开始，
以ESC ( B或ESC ( J结束。
表16-3 iso-2022-jp的字符集切换转义序列
转义序列 转义后的字符集 每个代码的字节数
ESC ( B US-ASCII 1
ESC ( J JIS X 0201-1976 (JIS Roman) 1
ESC $ @ JIS X 0208-1978 2
ESC $ B JIS X 0208-1983 2
在US-ASCII或JIS-Roman模态下，每个字符使用单个字节。当使用更大的JIS X
0208系列的字符集时，每个字符代码使用2个字节。该编码把发送的字节的值域范
围限制在33~126之间13。
4. euc-jp
euc-jp是另一种流行的日文编码。EUC代表“Extended Unix Code”（扩展Unix代
码），最早是为了在Unix操作系统上支持亚洲字符而开发的。
和iso-2022-jp类似，euc-jp编码也是变长的，允许使用几种标准的日文字符集。但
和iso-2022-jp不同的是，euc-jp编码不是模态的。没有转义序列可以在不同模态之
间切换。
euc-jp支持4种编码后的字符集：JIS X 0201（JIS-Roman，对ASCII进行一些日文
替换）、JIS X 0208、半宽片假名（最早在日文电报系统中使用的63个字符）以及
JIS X 0212。
编码JIS Roman（它和ASCII兼容）的时候使用1个字节，对JIS X 0208和半宽片
假名则使用2个字节，而对JIS X 0212使用3个字节。这种编码有点浪费空间但处
理起来很简单。
表16-4概括了此编码的格局。
注13： 尽管每个字节只能有94个不同的值（33~126），这也足够覆盖JIS X 0208系列字符集里面的所有字符了，
因为这些字符集是按照94×94的网格来组织代码值的，所以2个字节足以覆盖JIS X 0208字符集中
的全部字符代码。
国际化 ｜ 401
表16-4 euc-jp编码值
哪个字节 编 码 值
JIS X 0201（有94个编码后的字符）
第1个字节 33~126
JIS X 0208（有6879个编码后的字符）
第1个字节 161~254
383 第2个字节 161~254
半宽片假名（有63个编码后的字符）
第1个字节 142
第2个字节 161~223
JIS X 0212（有6067个编码后的字符）
第1个字节 143
第2个字节 161~254
第3个字节 161~254
现在我们就介绍完了字符集和编码。下面一节将解释语言标记和HTTP如何使用语
言标记把合适的内容传给受众。请参见附录H，那里列出了详细的标准化字符集。
16.4 语言标记与HTTP
语言标记是命名口语的标准化字符串短语。
名字需要标准化，不然的话，有些人会把法语文档打上French标记，而有些其他人
会用Français，还有些人可能会用France，更有些懒人可能会用Fra甚至是F。标准
化语言标记就可以避免这些混乱。
英语的标记是en，德语的标记是de，韩语的标记是ko，等等。语言标记能够描述语
言的地区变种和方言，比如巴西葡萄牙语的标记是pt-BR、美式英语的标记是en-US，
汉语中的湖南话的标记是zh-xiang。甚至还有个标准语言标记i-klingon是描述克林
根语14的！
16.4.1 Content-Language首部
实体的Content-Language首部字段描述实体的目标受众语言。如果内容主要是给
注14： 科幻名著《星际迷航》（Star Trek）中的外星种族，加州大学伯克利分校的语言学博士马克乌克兰为
其发明了一套语言。（译者注）
402 ｜ 第16章
法语受众的，其Content-Language首部字段就将包含： 384