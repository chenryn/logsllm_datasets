当前字符及其后的两个字符。
PP
当前行。
5dd
当前行及随后的四行文本。
dW
从光标位置开始到下一个单词的开头。
$P
从光标位置开始到当前行的行尾。
OP
从光标位置开始到当前行的行首。
d
从光标位置开始到文本行的第一个非空字符。
dG
从当前行到文件的末尾。
d20G
从当前行到文件的第20行。
表13-3:文本删除命令
把光标放到第一行单词“It”之上。重复按下x按键直到删除剩下的部分。下一步，重复按
下u按键直到恢复原貌。
注意：真正的vi只是支持单层面的undo命令。vim则支持多个层面的。
我们再次执行删除命令，这次使用d命令。还是移动光标到单词“It”之上，按下的dW来
删除单词：
The quickt brow fox jumped over the lazy dog. vas coo1
Line 2
Line 3
Line 4
Line 5
按下ds删除从光标位置到行尾的文本
154
---
## Page 156
The quick brown fox junped over the lazy dog-
Line 2
Line 3
Line 4
Line 5
按下dG按键删除从当前行到文件末尾的所有行：
连续按下u按键三次，来恢复删除部分。
13.6.4剪切，复制和粘贴文本
这个d命令不仅删除文本，它还“剪切”文本。每次我们使用d命令。删除的部分被复制到一
个粘贴缓冲区中（看作剪切板）。过后我们执行小p命令把剪切板中的文本粘贴到光标位置之
后，或者是大P命令把文本粘贴到光标之前。
y命令用来“拉”（复制）文本，和d命令剪切文本的方式差不多。这里有些把y命令和各
种移动命令结合起来使用的实例：
命令
复制的内容
yy
当前行。
5yy
当前行及随后的四行文本。
A
从当前光标位置到下一个单词的开头。
yS
从当前光标位置到当前行的末尾。
y0
从当前光标位置到行首。
y
从当前光标位置到文本行的第一个非空字符。
yG
从当前行到文件末尾。
y20G
从当前行到文件的第20行。
表13-4:复制命令
我们试着做些复制和粘贴工作。把光标放到文本第一行。输入yy来复制当前行。下一步，
155
---
## Page 157
把光标移到最后一行（G），输入小写的p把复制的一行粘贴到当前行的下面：
The quick brown fox junped over the lazy dog. It uas cool.
Line 2
Line 3
Line 4
Line 5
The quick brown fox junped over the lazy dog. It uas cool.
和以前一样，u命令会撤销我们的修改。这时光标仍位于文件的最后一行，输入大写的P
命令把所复制的文本粘贴到当前行之上：
The quick brown fox junped over the lazy dog. It was coo1.
Line 2
Line 3
Line 4
The quick brown fox junped over the lazy dog. It was coo1
Line 5
把文件恢复原样。
13.6.5连接行
vi对于行的概念相当严格。通常，用户不可能通过删除“行尾结束符”（end-of-line character）
来连接当前行和它下面的一行。由于这个原因，vi提供了一个特定的命令，大写的J（不要与
小写的混淆了，j是用来移动光标的）用于链接行与行。
如果我们把光标放到line3上，输入大写的J命令，看看发生什么情况：
The quick brown fox junped over the lazy dog. It was coo1.
Line 2
Line 3 Line 4
Line 5
156
---
## Page 158
13.7查找和替换
vi能把光标移到搜索到的匹配项上。vi不仅能在搜索一特定行，还能进行全文搜索。它也可以
在有或没有用户确认的情况下实现文本替换。
13.7.1查找一行
f命令能搜索一特定行，并将光标移动到下一个匹配的字符上。例如，命令fa会把光标定位到
同一行中下一个出现的“a”字符上。在进行了一次行内搜索后，输入分号能重复这次搜索
13.7.2查找整个文件
移动光标到下一个出现的单词或短语上，使用/命令。这个命令和我们之前在less程序中学到
的一样。当你输入/命令后，一个“”字符会出现在屏幕底部。接下来，输入要查找的单词或
短语，按下回车。光标就会移动到下一个包含所查找字符申的位置。通过n命令来重复先前的
查找。这里有个例子：
The quickt brown fox jumped over the lazy dog. It vas coo1.
Line 2
Line 3
Line 4
Line 5
移动光标到文件的第一行。输入：
 /Line
然后敲回车。光标会移动到第二行。然后输入n，这时光标移动到第三行。重复键入n命
令，光标会继续向下移动直到遍历所有的匹配项。至此我们只是通过输入单词和短语进行搜索，
但vi支持正则表达式，一种用于表达复杂文本的方法。我们将会在之后的章节中详细讲解正则
表达式。
13.7.3全局查找和替代
vi使用ex命令来执行查找和替代操作（vi中叫做“替换"）。将整个文件中的单词“Line”更改
为“line”，输入以下命令：
157
---
## Page 159
:%s/Line/line/g
我们把这个命令分解为几个单独的部分，看一下每部分的含义：
条目
含义
冒号字符运行一个ex命令。
%
指定要操作的行数。%是一个快捷方式，表示从第一行到最
后一行。另外，操作范围也可以用1.5来代替（因为我们的
文件只有5行文本，或者用1.8来代替，意思是“从第一
行到文件的最后一行。”如果省略了文本行的范围，那么操
作只对当前行生效。
S
指定操作。在这种情况下是，替换（查找与替代）。
/Line/line
查找类型与替代文本。
g
这是“全局”的意思，意味着对文本行中所有匹配的字符串
执行查找和替换操作。如果省略g，则只替换每个文本行中
第一个匹配的字符串。
执行完查找和替代命令之后，我们的文件看起来像这样：
The quick brown fox junped over the lazy dog. It vas coo1.
line 2
line 3
line 4
line 5
我们也可以指定一个需要用户确认的替换命令。通过添加一个“e”字符到这个命令的末尾，
来完成这个替换命令。例如：
:%s/line/Line/gc
这个命令会把我们的文件恢复先前的模样：然而，在执行每个替换命令之前，vi会停下来
通过下面的信息，来要求我们确认这个替换：
158
---
## Page 160
(A/3/T/b/e/α/f) our qata edox
括号中的每个字符都是一个可能的选择。如下所示：
按键
行为
y
执行替换操作
n
跳过这个匹配的实例
a
对这个及随后所有匹配的字符串执行替换操作。
q or esc
退出替换操作
1
执行这次替换并退出。1是“last”的简写。
Ctrl-e, Ctrl-y
分别是向下滚动和向上滚动。用于查看建议替换的上下文。
表13-5:替换确认按键
如果你输入y，则执行这个替换，输入n则会导致vi跳过这个实例，而移到下一个匹配项
上。
13.8
编辑多个文件
同时能够编辑多个文件是很有用的。你可能需要更改多个文件或者从一个文件复制内容到另一
个文件。通过vi，我们可以打开多个文件来编辑。只要在命令行中指定要编辑的文件名。
vi file1 file2 file3...
我们先退出已经存在的vi会话，然后创建一个新文件来编辑。输入：wq来退出vi并且保存
了所做的修改。下一步，我们将在家目录下创建一个额外的用来玩要的文件。通过获取从Is命
令的输出，来创建这个文件。
4x*4ndqno-sT < utq/xsn/ [- sT $[- xoqxnutgou]
用vi来编辑我们的原文件和新创建的文件：
159
---
## Page 161
[ne@linuxbox -]$ vifoo.txt ls-output.txt
vi启动，我们会看到第一个文件显示出来：
The quickt browm fox jumped over the lazy dog. It vas coo1
Line 2
Line 3
Line 4
Line 5
13.8.1文件之间切换
从这个文件切换下一个文件，使用这个ex命令：
回到先前的文件使用：
: B
当我们从一个文件移到另一个文件时，如果当前文件没有保存修改，vi会阻止我们切换文
件，这是vi强制执行的政策。在命令之后添加感叹号，可以强迫vi放弃修改而转换文件。
另外，上面所描逾的切换方法，vim（和一些版本的vi）也提供了一些ex命令，这些命令
使多个文件更容易管理。我们可以查看正在编辑的文件列表，使用：bufers命令。运行这个命
令后，屏幕顶部就会显示出一个文件列表：
:buffers
1#
*foo.txt"
line 1
2 %a
*ls-output.txt*
line 0
Press ENTER or type conmand to continue
160
---
## Page 162
要切换到另一个缓冲区（文件），输入：buffer，紧跟着你想要编辑的缓冲器编号。比如，要从
包含文件foo.txt的1号缓冲区切换到包含文件ls-output.txt的2号缓冲区，我们会这样输入：
buffer 2
我们的屏幕现在会显示第二个文件。
13.8.2打开另一个文件并编辑
在我们的当前的编辑会话里也能添加别的文件。ex命令：e（编辑（edit）的简写）紧跟要打开的
文件名将会打开另外一个文件。让我们结束当前的会话回到命令行。
重新启动vi并只打开一个文件
[ne@linuxbox -]$ vi foo.txt
要加入我们的第二个文件，输入：
e ls-output.txt
它应该显示在屏幕上。我们可以这样来确认第一个文件仍然存在：
buffers
1 #*foo.txt" line 1
2 %a "ls-output.txt" 1ine 0
Press ENTER or type conmand to continue
注意：当文件由：e命令加载，你将无法用：n或：N命令来切换文件·这时要使用：buffer命
令加缓冲区号码，来切换文件。
13.8.3跨文件复制黏贴
当我们编辑多个文件时，经常地要复制文件的一部分到另一个正在编辑的文件。使用之前我们
学到的拉（yank）和粘贴命令，这很容易完成。说明如下。以打开的两个文件为例，首先转换
到缓冲区1（foo.txt），输入：
161
---
## Page 163
:buffer 1
我们应该得到如下输出：
The quick brown fox junped over the lazy dog. It vas cool.
Line 2
Line 3
Line 4
Line 5
下一步，把光标移到第一行，并且输入yy来复制这一行。
转换到第二个缓冲区，输入：
:buffer 2
现在屏幕会包含一些文件列表（这里只列出了一部分）：
total343700
ruxr-xr-x 1 root root
31316 2007-12-05 08:58 [
移动光标到第一行，输入p命令把我们从前面文件中复制的一行粘贴到这个文件中：
tota1 343700
The quick brown fox junped over the lazy dog. It vas coo1.
ruxr-xr-x 1 root root
313162007-12-0508:58 [
13.8.4插入整个文件到另一个文件
我们也可以把整个文件插入到我们正在编辑的文件中。看一下实际操作，结束vi会话，重新启
动一个只打开一个文件的vi会话：
162
---