### System info
  * Playwright Version: [v1.31.2]
  * Operating System: [macOS 13.2.1]
  * Browser: [Chromium]
  * Other info: [Node 16.16.0]
### Source code
  * I provided exact source code that allows reproducing the issue locally.
**Test file (self-contained)**
    const { chromium } = require('playwright');
    (async () => {
      const browser = await chromium.launch({
        devtools: true
      });
      const context = await browser.newContext();
      const page = await context.newPage();
      await page.goto('https://example.com');
      page.on('dialog', async dialog => {
        console.log(`Found dialog. Type: ${dialog.type()}, message: ${dialog.message()}`); // get dialog type and message
        // await dialog.dismiss(); // Does not close the dialog and does not navigate
        await dialog.accept(); // Does not close the dialog but allows the navigation
      })
      await page.addScriptTag({ content: 'window.onbeforeunload = (evt) => { evt.preventDefault(); evt.returnValue = ""}' })
      await page.locator('body').click(); // chromium requires a user gesture to enable beforeunload
      await page.evaluate('window.location="https://www.iana.org/domains/reserved"')
      await page.waitForTimeout(3000) // wait to check if the dialog disappears
      await context.close();
      await browser.close();
    })();
**Steps**
  * [Run the script]
**Expected**
If the dialog is dismissed, the dialog should close and the navigation should
fail and the browser closes  
If the dialog is accepted, the dialog should close and the navigation should
occur and the browser closes
**Actual**
If the dialog is dismissed, the dialog does NOT close. The navigation does not
occur and the browser does NOT close  
If the dialog is accepted, the dialog does NOT close, although the navigation
does occur and the browser does close