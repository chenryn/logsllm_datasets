## 三、部署快照功能(非RDS，自己部署的话)  
### 1 修改配置文件    
需要用到pg_stat_statements插件，统计TOP SQL。      
```  
$ vi postgresql.conf   
shared_preload_libraries='pg_stat_statements'   
$ pg_ctl restart -m fast   
```  
### 2 初始化  
在需要打快照的库都装上这个SQL，里面包含了(创建打快照的function, 创建清理快照的function, 创建生成报告的function)。    
[init.sql](20161123_01_sql_001.sql)    
[postgres 10 init.sql](20181130_01_sql.sql)
## 四、其他  
目前还不支持从日志文件生成统计报告，这部分可以修改源码后实现，当然，如果你能访问数据库主机，那一切都简单了。    
我写本文的目的是，只要能连数据库，就能生成诊断报告。    
```  
echo "|+++++++++++++++++++++++++++++++++++++++++++++++++++++++++|"  
echo "|                   数据库错误日志分析                    |"  
echo "|+++++++++++++++++++++++++++++++++++++++++++++++++++++++++|"  
echo ""  
echo "----->>>---->>>  获取错误日志信息: "  
cat *.csv | grep -E "^[0-9]" | grep -E "WARNING|ERROR|FATAL|PANIC" | awk -F "," '{print $12" , "$13" , "$14}'|sort|uniq -c|sort -rn  
echo "建议: "  
echo "    参考 http://www.postgresql.org/docs/current/static/errcodes-appendix.html ."  
echo -e "\n"  
echo "----->>>---->>>  获取连接请求情况: "  
find . -name "*.csv" -type f -mtime -28 -exec grep "connection authorized" {} +|awk -F "," '{print $2,$3,$5}'|sed 's/\:[0-9]*//g'|sort|uniq -c|sort -n -r  
echo "建议: "  
echo "    连接请求非常多时, 请考虑应用层使用连接池, 或者使用pgbouncer连接池. "  
echo -e "\n"  
echo "----->>>---->>>  获取认证失败情况: "  
find . -name "*.csv" -type f -mtime -28 -exec grep "password authentication failed" {} +|awk -F "," '{print $2,$3,$5}'|sed 's/\:[0-9]*//g'|sort|uniq -c|sort -n -r  
echo "建议: "  
echo "    认证失败次数很多时, 可能是有用户在暴力破解, 建议使用auth_delay插件防止暴力破解. "  
echo -e "\n"  
echo "|+++++++++++++++++++++++++++++++++++++++++++++++++++++++++|"  
echo "|                   数据库慢SQL日志分析                   |"  
echo "|+++++++++++++++++++++++++++++++++++++++++++++++++++++++++|"  
echo ""  
echo "----->>>---->>>  慢查询统计: "  
cat *.csv|awk -F "," '{print $1" "$2" "$3" "$8" "$14}' |grep "duration:"|grep -v "plan:"|awk '{print $1" "$4" "$5" "$6}'|sort|uniq -c|sort -rn  
echo "建议: "  
echo "    输出格式(条数,日期,用户,数据库,QUERY,耗时ms). "  
echo "    慢查询反映执行时间超过log_min_duration_statement的SQL, 可以根据实际情况分析数据库或SQL语句是否有优化空间. "  
echo ""  
echo "----->>>---->>>  慢查询分布头10条的执行时间, ms: "  
cat *.csv|awk -F "," '{print $1" "$2" "$3" "$8" "$14}' |grep "duration:"|grep -v "plan:"|awk '{print $1" "$4" "$5" "$6" "$7" "$8}'|sort -k 6 -n|head -n 10  
echo ""  
echo "----->>>---->>>  慢查询分布尾10条的执行时间, ms: "  
cat *.csv|awk -F "," '{print $1" "$2" "$3" "$8" "$14}' |grep "duration:"|grep -v "plan:"|awk '{print $1" "$4" "$5" "$6" "$7" "$8}'|sort -k 6 -n|tail -n 10  
echo -e "\n"  
echo "----->>>---->>>  auto_explain 分析统计: "  
cat *.csv|awk -F "," '{print $1" "$2" "$3" "$8" "$14}' |grep "plan:"|grep "duration:"|awk '{print $1" "$4" "$5" "$6}'|sort|uniq -c|sort -rn  
echo "建议: "  
echo "    输出格式(条数,日期,用户,数据库,QUERY). "  
echo "    慢查询反映执行时间超过auto_explain.log_min_duration的SQL, 可以根据实际情况分析数据库或SQL语句是否有优化空间, 分析csvlog中auto_explain的输出可以了解语句超时时的执行计划详情. "  
echo -e "\n"  
```  
修改源码要达到的目的，支持rotate table日志记录    
将审计日志，慢SQL，auto_explain日志，错误日志记录特殊的数据表     
该表不记录redo，使用APPEND ONLY方式，    
该表保持一定记录条数，或大小限制，可以通过GUC配置记录数和SIZE.     
好处，方便用户查询，方便生成诊断报告。    
## 全局报告样本    
[PostgreSQL AWR 全局报告样本](20161123_01_pdf_002.md)    
## 库级报告样本    
[PostgreSQL AWR 库级报告样本](20161123_01_pdf_001.md)    
## issue
1\. 两个快照之间的WAL产生量。  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")