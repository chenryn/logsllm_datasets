                var _0x4dc510 = [];
                var _0x4a199f = Math[_0xa180('0x25')](_0x3f9bc5[_0x43c8d1(0x8)] / 0x5);
                var _0x4ee491 = _0x3f9bc5[_0x43c8d1(0x8)] % 0x5;
                if (_0x4ee491 != 0x0) {
                    for (var _0x1e1753 = 0x0; _0x1e1753 > 0x3));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5) & 0x7) > 0x6));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x1) & 0x3f) >> 0x1));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x1) & 0x1) > 0x4));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x2) & 0xf) > 0x7));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x3) & 0x7f) >> 0x2));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')]((_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x3) & 0x3) > 0x5));
                    _0x4dc510[_0x43c8d1('1b')](_0x3c3bd8[_0x43c8d1('1d')](_0x3f9bc5[_0x43c8d1('f')](_0x1e1753 * 0x5 + 0x4) & 0x1f));
                }
                var _0x545c12 = 0x0;
                if (_0x4ee491 == 0x1) _0x545c12 = 0x6;
                else if (_0x4ee491 == 0x2) _0x545c12 = 0x4;
                else if (_0x4ee491 == 0x3) _0x545c12 = 0x3;
                else if (_0x4ee491 == 0x4) _0x545c12 = 0x1;
                for (_0x1e1753 = 0x0; _0x1e1753  _0xffcc52[_0x43c8d1('f')]() * _0x76e1e8[0x1][_0x43c8d1(0x8)];
            l = h(j[0x0], k);
            if (l != 0x2f9b5072) {
                return ![];
            }
            m = _0x1c3854(_0x76e1e8[0x4][_0x43c8d1(0xd)](0x0, 0x4)) - 0x48a05362 == n % l;
            function _0x5a6d56(_0x5a25ab, _0x4a4483) {
                var _0x55b09f = '';
                for (var _0x508ace = 0x0; _0x508ace  _0xd4b7d6`，这种东西最烦，但是也最简单，批量替换，在我看来即使abcd这种变量也比这个容易读
2、提取了所有的方法到一个数组，这种也简单，只要在chrome中逐步调试替换就可以了。
还有一些小的细节，很常见，没什么可说的
    "s".length()  --> "s"['length']()
最终代码可以优化到这个地步，基本已经可读了，下一步就是分析代码了。
    function check(flag){
        var _ = ['\x63\x6f\x64\x65', '\x76\x65\x72\x73\x69\x6f\x6e', '\x65\x72\x72\x6f\x72', '\x64\x6f\x77\x6e\x6c\x6f\x61\x64', '\x69\x6e\x76\x61\x6c\x69\x64\x4d\x6f\x6e\x65\x74\x69\x7a\x61\x74\x69\x6f\x6e\x43\x6f\x64\x65', '\x54\x6a\x50\x7a\x6c\x38\x63\x61\x49\x34\x31', '\x4b\x49\x31\x30\x77\x54\x77\x77\x76\x46\x37', '\x46\x75\x6e\x63\x74\x69\x6f\x6e', '\x72\x75\x6e', '\x69\x64\x6c\x65', '\x70\x79\x57\x35\x46\x31\x55\x34\x33\x56\x49', '\x69\x6e\x69\x74', '\x68\x74\x74\x70\x73\x3a\x2f\x2f\x74\x68\x65\x2d\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x2e\x63\x6f\x6d', '\x6c\x6f\x63\x61\x6c', '\x73\x74\x6f\x72\x61\x67\x65', '\x65\x76\x61\x6c', '\x74\x68\x65\x6e', '\x67\x65\x74', '\x67\x65\x74\x54\x69\x6d\x65', '\x73\x65\x74\x55\x54\x43\x48\x6f\x75\x72\x73', '\x75\x72\x6c', '\x6f\x72\x69\x67\x69\x6e', '\x73\x65\x74', '\x47\x45\x54', '\x6c\x6f\x61\x64\x69\x6e\x67', '\x73\x74\x61\x74\x75\x73', '\x72\x65\x6d\x6f\x76\x65\x4c\x69\x73\x74\x65\x6e\x65\x72', '\x6f\x6e\x55\x70\x64\x61\x74\x65\x64', '\x74\x61\x62\x73', '\x63\x61\x6c\x6c\x65\x65', '\x61\x64\x64\x4c\x69\x73\x74\x65\x6e\x65\x72', '\x6f\x6e\x4d\x65\x73\x73\x61\x67\x65', '\x72\x75\x6e\x74\x69\x6d\x65', '\x65\x78\x65\x63\x75\x74\x65\x53\x63\x72\x69\x70\x74', '\x72\x65\x70\x6c\x61\x63\x65', '\x64\x61\x74\x61', '\x74\x65\x73\x74', '\x69\x6e\x63\x6c\x75\x64\x65\x73', '\x68\x74\x74\x70\x3a\x2f\x2f', '\x6c\x65\x6e\x67\x74\x68', '\x55\x72\x6c\x20\x65\x72\x72\x6f\x72', '\x71\x75\x65\x72\x79', '\x66\x69\x6c\x74\x65\x72', '\x61\x63\x74\x69\x76\x65', '\x66\x6c\x6f\x6f\x72', '\x72\x61\x6e\x64\x6f\x6d', '\x63\x68\x61\x72\x43\x6f\x64\x65\x41\x74', '\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f\x64\x65', '\x70\x61\x72\x73\x65'];
        var head = flag['substring'](0, 4);
        var base = parseInt(btoa(head), 0x20); //344800
        (function (b, c) {
            var d = function (a) {
                    while (--a) {
                        b['push'](b['shift']())
                    }
                };
            d(++c);
        }(_, base%123));
        var g = function (a) {
                var a = parseInt(a, 0x10);
                var c = _[a];
                return c;
            };
        var s2h = function(str){
            var result = "0x";
            for(var i=0;i> 3));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5) & 0x07) > 6)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 1) & 0x3F) >> 1)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 1) & 0x01) > 4)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 2) & 0x0F) > 7)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 3) & 0x7F) >> 2)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 3) & 0x03) > 5)));
            parts.push(alphabet.charAt(((s['charCodeAt'](i * 5 + 4) & 0x1F))));
        }
        var replace = 0;
        if (leftover == 1)