s
n
I
-
-
r
e
g
n
e
s
s
e
M
-
-
t
a
h
c
p
a
n
S
-
-
p
p
A
s
t
a
h
W
-
-
e
p
y
k
S
-
-
e
n
i
L
r
e
b
i
V
-
-
-
-
k
l
a
T
o
a
k
a
K
-
-
m
a
r
g
e
l
e
T
-
-
k
c
a
l
S
-
-
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32)
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
TABLE VI: Test results when sharing a malware and a blacklisted URL.
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32)
(cid:72)(cid:35) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35)
-
-
we want to test platforms against the presence of URL ﬁl-
tering mechanisms. For example, a social network may check
whether the shared URL is ﬂagged as malicious by existing
URL blacklists, e.g., Google SafeBrowsing [14]. Accordingly,
we searched for URLs on PhishTank [23] and veriﬁed that
the URLs are also blacklisted by Google SafeBrowsing [14].
We used a total of three different blacklisted URLs across
platforms, all with the same characteristics, due to their short
uptime before being deactivated. Second, we want to check
whether platforms proactively scan the content of web pages
for malicious content. To this end, we created unique links to
our server to download the trojan Win32.Virut. For IMs, we
did not perform such an experiment as downloading mobile
apps through a browser is not a major attack vector.
When running our tests, we also monitored the exact point
where we can observe the effects of any countermeasures. In
our analysis, we considered two points: when posting the URL,
and when creating the link preview. Table VI shows the result
of our analysis.
A. URL Posting
The ﬁrst aspect that we monitored during the execution
of our experiments is whether the platform accepts malicious
URLs. Only Twitter detected the blacklisted URL as malicious
and prevented posting altogether. Also, Twitter showed a warn-
ing message: This request looks like it might be automated. To
protect our users from spam and other malicious activity, we
can’t complete this action right now. Please try again later. All
other platforms did not show any error or warning messages
and created a URL preview instead.
B. Preview Creation
Social media platforms can detect malicious URLs in later
stages of the URL processing pipeline, e.g., when fetching the
resources. However, our analysis revealed that the vast majority
of platforms do not seem to implement any security check.
a) Malware: When sharing the malware program, all
platforms correctly retrieved the binary from our server. How-
ever, as the binary program does not contain HTML code,
platforms tend to render a bare-minimum link preview (i.e.,
Facebook, Xing), possibly prompting the user to provide more
information (i.e., VK, Pinterest, Tumblr, and MeWe) or render
no preview at all (i.e., Twitter, LinkedIn, Medium, and Plurk).
Also, all platforms did not show any error message or warning,
and, clicking on the link preview results in downloading the
malware program.
one
text
LinkedIn,
the
page
b) Blacklisted URL: When sharing a blacklisted
i.e.,
only
detected
URL,
platform,
posting. Here, LinkedIn
the malicious URL after
a
modiﬁed
redirector
(linkedin.com/redir/phishing-
page?url=$U RL). When a user clicks on the preview,
Linkedin shows an informative page explaining that the site
was blacklisted according to Google Safe Browsing,
thus
blocking access to the target URL. In spite of repeated
attempts, the user account was not deactivated.
point
link
the
of
to
to
Sixteen social media platforms over 18 treated the black-
listed links as regular links: their bots visit the page and render
a preview based on the speciﬁed meta tags (if any) or fall back
to parsing HTML, when possible. Eight social media platforms
(Facebook, VK, MeWe for SNs and Messenger, Snapchat,
Line, Viber, KakaoTalk for IMs) created a rich preview with no
distinguishable difference from a regular innocuous link. The
remaining eight platforms either showed partial information
(page title and host, but no image and no description) or did
not render a preview at all, due to their implementation.
C. Takeaway
The analysis of this section intends to investigate the
presence of possible mechanisms to prevent the distribution
of malicious URLs on social media platforms. To summarize,
our analysis makes the following ﬁndings:
In general, our experiments could not ﬁnd evidence
of widespread use of countermeasures to prevent the
•
8
•
•
•
distribution of malicious content at submission time.
All platforms—except for Twitter and LinkedIn—
do not show speciﬁc warnings or error messages to
the users, indicating potential danger when clicking
on the previews. Also, link previews for blacklisted
URLs can contain the same semantic elements that
are typical of previews of benign web pages, i.e., title,
description, a picture, and the domain name.
Two out of 20 social media platforms perform security
checks on the posted URL. For example, LinkedIn
uses the Google Safe Browsing API to detect mali-
cious URLs. While Twitter forbids posting blacklisted
URLs, LinkedIn accepts the URLs, but it replaces the
URL in the preview with a link to an own warning
page.
Twitter and LinkedIn are the only two platforms
implementing a form of defense. However, we could
bypass these defenses by using server- and client-side
redirections.
V. ATTACKS
So far, we studied the behaviors of social media platforms
when processing both benign and malicious webpages, and we
learned the various ways platforms could create link previews
and validate URLs. This section will take a look at the link
preview creation from an adversarial point of view. Here, we
consider an attacker who intends to lure one or more users to
visit a malicious webpage that is distributed over social media
platforms. To do so, the attacker needs to hide their malicious
intent by using, ideally, a benign-looking link preview. At
the same time, as platforms may be validating URLs against
blacklists, the attacker needs to avoid the detection of mali-
cious URLs. In this section, we consider both problems. First,
in Section V-A, we present a set of shortcomings of social
media platforms that allow attackers with different capabilities
to craft arbitrary link previews, regardless of the actual content
or purpose of the shared page. Then, in Section V-B, we show
how an attacker can bypass URL validation countermeasures.
We summarize our attacks in Table VII. Overall, our
results show that all platforms are vulnerable to our attacks—
except for two (Plurk and Medium) that we did not test with
malicious URLs as they cannot limit the visibility of posts.
Four platforms, i.e., Facebook, Xing, Plurk, and Slack, can be
attacked by attackers who control the content of a webpage
only. The remaining platforms are vulnerable to attackers who
can also register domain names for the server distributing
malicious pages.
A. Adversarial Analysis of the Link Previews Creation
The goal consists in creating a malicious web page whose
preview, when shared on social media platforms, is similar
to the preview of a benign webpage, requiring an attacker to
be able to replace the content of each ﬁeld with ones of their
choice. In this section, we study the extent to which an attacker
can arbitrarily inﬂuence the link preview creation considering
two attackers with different capabilities, i.e., a ﬁrst one that
controls the content of a web page and an another one that
can also register domain names. Table VII shows the results
of our analysis.
Crafted Fields
Bypass
Attacker
L
R
U
d
e
r
a
h
S
d
e
R
t
n
e
i
l
C
.
d
e
R
r
e
v
r
e
S
L
R
U
d
e
t
s
i
l
k
c
a
l
B
Capability
 Page cnt.
-
 Domain
-
-
 Domain
  Domain
 Domain
-
 Domain
-
-
-
Domain
 Page cnt.
-
-
-
Page cnt.
 Domain
-
 Domain
-
-
 Domain
 Domain
-
 Domain
-
 Domain
-
 Domain
-
-
 Domain
 Domain
-
 Domain
-
-
 Page cnt.
-

-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-