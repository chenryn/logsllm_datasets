# [Activism](anticolonialism.md)
* New: Add song for Gaza.
    [We Will Not Go Down (Song for Gaza Palestine) - Michael Heart](https://yewtu.be/watch?v=dlfhoU66s4Y)
## [Collaborating tools](collaborating_tools.md)
* New: Introduce collaborating tools.
    Collaborating document creation:
    - https://pad.riseup.net
    - https://rustpad.io . [Can be self hosted](https://github.com/ekzhang/rustpad)
    Collaborating through terminals:
    - [sshx](https://sshx.io/) looks promising although I think it uses their servers to do the connection, which is troublesome.
# Life Management
## Life Management
### [Life planning](life_planning.md)
* New: [Introduce the month planning process.](life_planning.md#month-plan)
    The objectives of the month plan are:
    - Define the month objectives according to the trimester plan and the insights gathered in the past month review.
    - Make your backlog and todo list match the month objectives
    - Define the philosophical topics to address
    - Define the topics to learn
    - Define the are of habits to incorporate?
    - Define the checks you want to do at the end of the month.
    - Plan when is it going to be the next review.
    It's interesting to do the plannings on meaningful days such as the first one of the month. Usually we don't have enough flexibility in our life to do it exactly that day, so schedule it the closest you can to that date. It's a good idea to do both the review and the planning on the same day.
    We'll divide the planning process in these phases:
    - Prepare
    - Clarify your state
    - Decide the month objectives
    Prepare:
    It's important that you prepare your environment for the planning. You need to be present and fully focused on the process itself. To do so you can:
    - Make sure you don't get interrupted:
        - Check your task manager tools to make sure that you don't have anything urgent to address in the next hour.
        - Disable all notifications
    - Set your analysis environment:
        - Put on the music that helps you get *in the zone*.
        - Get all the things you may need for the review:
            - The checklist that defines the process of your planning (this document in my case).
            - Somewhere to write down the insights.
            - Your task manager system
            - Your habit manager system
            - Your *Objective list*.
            - Your *Thinking list*.
            - Your *Reading list*.
        - Remove from your environment everything else that may distract you
    Clarify your state:
    To be able to make a good decision on your month's path you need to sort out which is your current state. To do so:
    - Clean your inbox: Refile each item until it's empty
    - Clean your todo: Review each todo element by deciding if they should still be in the todo. If they do and they belong to a month objective, add it. If they don't need to be in the todo, refile it.
    - Clean your someday: Review each relevant someday element (not the ones that are archive at greater levels than month) and decide if they should be refiled elsewhere and if they are part of a month objective that should be dealt with this month.
    - Adress each of the trimester objectives by creating month objectives that get you closer to the desired objective.
    Decide the next steps:
    For each of your month objectives:
    - Decide wheter it makes sense to address it this month. If not, archive it
    - Create a clear plan of action for this month on that objective
    - Tweak your *things to think about list*.
    - Tweak your *reading list*.
    - Tweak your *habit manager system*.
## Task Management
### [Org Mode](orgmode.md)
* New: Introduce Nvim Org Mode.
    [`nvim-orgmode`](https://github.com/nvim-orgmode/orgmode#agenda) is a Orgmode clone written in Lua for Neovim. Org-mode is a flexible note-taking system that was originally created for Emacs. It has gained wide-spread acclaim and was eventually ported to Neovim.
    The article includes:
    * [Installation](orgmode.md#installation)
      * [Key bindings](orgmode.md#key-bindings)
    * [Usage](orgmode.md#usage)
      * [Org File](orgmode.md#org-file)
      * [Headings](orgmode.md#headings)
        * [Toogle line to headline](orgmode.md#toogle-line-to-headline)
        * [Change heading level](orgmode.md#change-heading-level)
        * [Moving headings](orgmode.md#moving-headings)
        * [Folding headings](orgmode.md#folding-headings)
        * [Navigate through headings](orgmode.md#navigate-through-headings)
      * [TODO items](orgmode.md#todo-items)
        * [TODO state customization](orgmode.md#todo-state-customization)
      * [Priority](orgmode.md#priority)
      * [Dates](orgmode.md#dates)
        * [Appointments](orgmode.md#appointments)
        * [Recurring tasks](orgmode.md#recurring-tasks)
        * [Scheduled](orgmode.md#scheduled)
        * [Deadline](orgmode.md#deadline)
        * [Date management](orgmode.md#date-management)
      * [Tags](orgmode.md#tags)
      * [Lists](orgmode.md#lists)
      * [Checkboxes](orgmode.md#checkboxes)
      * [Links](orgmode.md#links)
      * [Archiving](orgmode.md#archiving)
      * [Refiling](orgmode.md#refiling)
      * [Agenda](orgmode.md#agend)
        * [Move around the agenda](orgmode.md#moving-around-the-agenda)
        * [Act on the agenda elements](orgmode.md#act-on-the-agenda-elements)
        * [Agenda views](orgmode.md#agenda-views)
* New: [Capture all your stuff.](gtd.md#capture-all-your-stuff)
    The focus of this process is to capture *everything* that has your attention, otherwise some part of you will still not totally trust that you're working with the whole picture. While you're doing it, create a list of all the sources of inputs in your world.
    What you're going to do is methodically go through each piece of your life and search for anything that doesn’t permanently belong where it is, the way it is, and put it into your in-tray. You’ll be gathering things that are incomplete or things that have some decision about potential action tied to them. They all go into your “inbox”, so they’ll be available for later processing.
    Be patient, this process may take between 1 and 6 hours, and at the end you'll have a huge pile of stuff in your inbox. You might be scared and get the thought of "what am I doing with my life?", but don't worry you'll get everything in order soon :).
    The steps described in the section so far are:
    * [Define what is going to be your in-tray](gtd.md#define-what-is-going-to-be-your-in-tray)
    * [Physical gathering](gtd.md#physical-gathering)
* New: [Digital general reference.](gtd.md#digital-general-reference)
    It is very helpful to have a visual map sorted in ways that make sense, either by indexes or data groups organized effectively, usually in an alphabetic order.
    The biggest issue for digitally oriented people is that the ease of capturing and storing has generated a write-only syndrome: all they’re doing is capturing information—not actually accessing and using it intelligently. Some consciousness needs to be applied to keep one’s potentially huge digital library functional, versus a black hole of data easily dumped in there with a couple of keystrokes.
    You need to consistently check how much room to give yourself so that the content remains meaningfully and easily accessible, without creating a black hole of an inordinate amount of information amorphously organized.
* New: [Physical general reference.](gtd.md#physical-general-reference)
    One idea is to have one system/place where you order the content alphabetically, not multiple ones. People have a tendency to want to use their files as a personal management system, and therefore they attempt to organize them in groupings by projects or areas of focus. This magnifies geometrically the number of places something isn’t when you forget where you filed it.
* New: [Use telescope plugin for refiling.](orgmode.md#refiling)
    Refiling lets you easily move around elements of your org file, such as headings or TODOs. You can refile with `r` with the next snippet:
    ```lua
    org = {
      org_refile = 'r',
    }
    ```
    When you press the refile key binding you are supposed to press `` to see the available options, once you select the correct file, if you will be shown a autocomplete with the possible items to refile it to. Luckily there is [a Telescope plugin](https://github.com/joaomsa/telescope-orgmode.nvim).
    Install it by adding to your plugin config:
    ```lua
    use 'joaomsa/telescope-orgmode.nvim'
    ```
    Then install it with `:PackerInstall`.
    You can setup the extension by doing:
    ```lua
    require('telescope').load_extension('orgmode')
    ```
    To replace the default refile prompt:
    ```lua
    vim.api.nvim_create_autocmd('FileType', {
      pattern = 'org',
      group = vim.api.nvim_create_augroup('orgmode_telescope_nvim', { clear = true })
      callback = function()
        vim.keymap.set('n', 'r', require('telescope').extensions.orgmode.refile_heading)
        vim.keymap.set('n', 'g', require('telescope').extensions.orgmode.search_headings)
      end,
    })
    ```
    If the auto command doesn't override the default `orgmode` one, bind it to another keys and never use it.
    The plugin also allows you to use `telescope` to search through the headings of the different files with `search_headings`, with the configuration above you'd use `g`.
* New: [Define the Todo list.](gtd.md#todo-list)
    This list contains all the next actions and projects you are going to actively work on. Projects are any desired result that can be accomplished within a year that requires more than one action step. This means that some rather small things you might not normally call projects are going to be on your Projects list, as well as some big ones. If one step won’t complete something, some kind of goalpost needs to be set up to remind you that there’s something still left to do. If you don’t have a placeholder to remind you about it, it will slip back into your head. The reason for the one-year time frame is that anything you are committed to finish within that scope needs to be reviewed weekly to feel comfortable about its status. Another way to think of this is as a list of open loops, no matter what the size. This is going to be one of the lists that you'll review more often, and it needs to be manageable, if the items start to grow you may want to track the elements you want to do in the semester, or trimester.
    Projects do not initially need to be listed in any particular order, by size, or by priority. They just need to be on a master list so you can review them regularly enough to ensure that appropriate next actions have been defined for each of them. That being said, I like to order them a little bit so that I don't need to read the whole list to choose what to do.
    There may be reasons to sort your projects into different subcategories, based upon different areas of your focus, but initially creating a single list of all of them will make it easier to customize your system appropriately as you get more comfortable with its usage. To sort them use tags instead of hierarchical structures, they are more flexible. For example you could use tags for:
    - Context: Where can you do the element: `home`, `computer`, `mobile`, ...
    - Area: Broad categories where the element falls in: `activism`, `caring`, `self-caring`, `home`, `digital services`, ...
    - Type: I like to separate the tasks that are meant to survive (`maintenance`) from the ones that are meant to improve things (`improvement`)
    - Mood, energy level, time: It's useful to have a quick way to see the tasks you can work on when you don't have that much time (`small`), you don't have that much mental energy (`brainless`), when you're `sad`, ...
    For many of your projects, you will accumulate relevant information that you will want to organize by theme or topic or project name. Your Projects list will be merely an index. All of the details, plans, and supporting information that you may need as you work on your various projects should be contained in your References system.
* New: [Define the calendar.](gtd.md#calendar)
    The calendar holds reminders of actions you need to take fall into two categories: those about things that have to happen on a specific day or time, and those about things that just need to get done as soon as possible. Your calendar handles the first type of reminder.
    These things go on your calendar:
    * Time-Specific actions or appointments.
    * Day-Specific actions: These are things that you need to do sometime on a certain day, but not necessarily at a specific time.
    * Day-Specific information: Information that may be useful on a certain date. This might include directions for appointments, activities that other people will be involved in then, or events of interest. It’s helpful to put short-term tickler information here, too, such as a reminder to call someone after he or she returns from vacation. This is also where you would want to park important reminders about when something might be due, or when something needs to be started, given a determined lead time.
    Daily to-do lists don't belong to the calendar because:
    * Constant new input and shifting tactical priorities reconfigure daily work so consistently that it’s virtually impossible to nail down to-do items ahead of time. Having a working game plan as a reference point is always useful, but it must be able to be renegotiated at any moment. Trying to keep a list on the calendar, which must then be reentered on another day if items don’t get done, is demoralizing and a waste of time. The Next Actions lists will hold all of those action reminders, even the most time-sensitive ones. And they won’t have to be rewritten daily.
    * If there’s something on a daily to-do list that doesn’t absolutely have to get done that day, it will dilute the emphasis on the things that truly do. The calendar should be sacred territory. If you write something there, it must get done that day or not at all.
    That said, there’s absolutely nothing wrong with creating a quick, informal, short list of “if I have time, I’d really like to . . .” kinds of things, picked from your Next Actions inventory. It just should not be confused with your “have-tos,” and it should be treated lightly enough to discard or change quickly as the inevitable surprises of the day unfold.
* New: [Give an overview of how I'm using gtd.](gtd.md#design-your-system)
    Before you start moving stuff around it's a good idea to get the first design of your whole system, in my case I'm going to heavily rely on org-mode to track most of the stuff with a repository with the next structure:
    ```
    .
    ├── calendar
    │   ├── personal.org
    │   │   ├── One time events
    │   │   ├── Recurring events
    │   │   ├── Birthdays
    │   │   └── Deathdays
    │   ├── day.org
    │   ├── tickler.org
    │   ├── work_1.org
    │   ├── work_2.org
    │   ├── partner.org
    │   ├── family.org
    ├── inbox
    │   ├── computer.org
    │   ├── mobile.org
    │   └── tablet.org
    ├── reference
    │   ├── blue
    │   ├── reference.org
    │   └── red
    └── todo
        ├── personal.org
        ├── work_1.org
        ├── work_2.org
        └── someday.org
    ```
    Where:
    * The subtrees behind the `.org` files are the heading trees.
    * All `org` files go with their respective `org_archive` ones, they're not shown in the above diagram to keep it simple.
    * `calendar/personal.org` is my [personal calendar](gtd.md#personal-calendar).
    * `calendar/day.org` is my [day planner](gtd.md#day-planner).
* New: [Define how to use the Personal calendar.](gtd.md#personal-calendar)
    The `calendar/personal.org` file holds:
    - [Appointments](orgmode.md#appointments): Meant to be used for elements of the org file that have a defined date to occur. You whether do it that date or not do it at all. Avoid using dates to organize your tasks and if you don't do it that day, reschedule it to another date, it's a waste of time, use next actions in your `todo` instead. If you need to act on it use a `TODO` element, otherwise a headline is enough An example would be.
      ```org
      * TODO Meet with Marie
      * Internet's birthday
      ```
    - [Recurring events](orgmode.md#recurring-tasks): Events that not only happen on the given date, but again and again after a certain interval of N hours (h), days (d), weeks (w), months (m), or years (y). The following shows up in the agenda every Wednesday:
      ```org
      * TODO Go to pilates
      ```
    - [Tickler events](#tickler-management): Check the [Tickler management](#tickler-management) section for more details.
    Each section has it's own tag: `:recurring:`, `:day:`, `:birthday:`, `:deathday:`, and the whole file has the `:event:` tag for easy filtering.
    In rare cases you may want to use the [`DEADLINE`](orgmode.md#deadline) property if you want to be warned in the agenda some days before the date arrives or the [`SCHEDULED`](orgmode.md#scheduled) one in case you want to see in the agenda when you start working on the task. Again, don't waste time postponing these dates, if you do, you're using the system wrong.
* New: [Define how to use the Day planner.](gtd.md#day-planner)
    Some of my day events are semi-regular, meaning that the recurrence options are not powerful enough. For example, I usually go to pilates on Tuesdays, but some weeks I go at 18:00 and others at 19:00. In the past I used a script that interacts with [`ikhal`](khal.md) to create the elements of the day based on some questionary. The idea is to migrate the tool to create appointments in the day under the `diary.org` file using a `datetree` structure:
    ```org
    * 2010
    ** 2010-12 December
    *** 2010-12-20 Tuesday
    **** TODO Go to pilates
    ```
    I also use this file to add any diary annotations for my [life log](life_logging.md). Once [this issue is solved](https://github.com/nvim-orgmode/orgmode/issues/516) it will be really easy to add diary thoughts through the [capture feature](orgmode.md#capture)
* New: [Define how to use the todo files.](gtd.md#todo-files)
    The `todo` files are where you track the [todo list](gtd.md#todo-list), which holds your projects and their next steps to work on. The `todo/personal.org`, `todo/work_1.org` and `todo/work_2.org` files of [the above schema](#design-your-system) will be divided into these level 1 headings:
    - `* Necessary`: These projects need to be dealt with immediately and finished as soon as possible
    - `* Desirable`: Here is where most of your elements will be, these are the ones that you think it's important to work on but there is no hard pressure.
    - `* Optional`: These are the projects that it would be nice to work on, but if you don't it's fine.
    Projects are any the second level headings with TODO keywords. To see the list of your projects just fold all the items in the `todo.org` file.
    Inside each section the elements are more less ordered by what I want to work on first. But all projects are actionable, so if I'm not in the mood to do the first ones, I tackle the rest. As such, I try not to spend too much time ordering them.
    I find useful to split the tasks between my life silos, so that I don't even have a chance to think of anything of `work_1` when I'm doing my `personal` stuff or `work_2` stuff.
* New: [Define how to work with projects.](gtd.md#project-structure)
    Given the broad definition of what we consider a project and how they are usually cooked, the system that represents it must be equally flexible, quick to interact with and easy to evolve.
    Every project starts with the title:
    ```org
    * TODO Improve task management system
    ```
    Optionally you can add a description
    ```org
    * TODO Improve task management system
      Using Openprojects is uncomfortable, I need to find a better system.
    ```
    You may have noticed that the description doesn't follow the rules we defined for next actions, that's fine as you don't act on projects, but on their underlying actions. Nevertheless I like to start them with a verb. It may even make sense not to use TODO items but simple headings to define your projects. On one side you don't act on projects so it would make sense to use headings, on the other, it's also interesting to know the project state, which can be easily tracked with the TODO keywords. If you could tell apart headings from TODO items in the [agenda](orgmode.md#agenda) views it would make sense to use them. Right now `nvim-orgmode` let's you select in the agenda views only TODO items or TODO and headings, but you can't select only headings, so at the moment I don't see any good reason not to use TODO items for the projects.
    To define the next actions of a project you can use checklists
    ```org
    * TODO Improve task management system
      - [-] Read David Allen's GTD book
        - [x] Read chapters 6 and 7
        - [ ] Read chapters 8 and 9
      - [ ] Sum up the book in the blue book
    ```
    As your checklists grow they may start to be uncomfortable, for example if it has:
    - More than two levels of indentation: It may be hard to follow the logic of the task structure.