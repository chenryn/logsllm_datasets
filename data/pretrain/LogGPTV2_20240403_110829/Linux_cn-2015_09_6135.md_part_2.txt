```
# aptitude install libpcre3-dev
```
![libpcre3-dev install](/data/attachment/album/201509/02/151052wmiu8i50dqtp7ezb.png)
```
# aptitude install libdumbnet-dev
```
![libdumnet-dev installation](/data/attachment/album/201509/02/151052l3zv9ojoo7zo31it.png)
```
# aptitude install zlib1g-dev
```
![zlibg-dev installation](/data/attachment/album/201509/02/151053hs1dgnnnk3fzbw3b.png)
安装完snort需要的库之后，再次运行配置脚本就不会报错了。
运行make和make install命令在/usr/local/snort目录下完成安装。
```
# make
```
![make snort](/data/attachment/album/201509/02/151054r3henrs708frnv6s.png)
```
# make install
```
![make install snort](/data/attachment/album/201509/02/151054oxbrar9w78watt7x.png)
最后，从/usr/local/snort/bin中运行snort。现在它对eth0的所有流量都处在promisc模式（包转储模式）。
![snort running](/data/attachment/album/201509/02/151055lnd7r6kdwk86wmy8.png)
如下图所示snort转储流量。
![traffic](/data/attachment/album/201509/02/151056mrl8olsjhnjtxgnh.png)
#### Snort的规则和配置
从源码安装的snort还需要设置规则和配置，因此我们需要复制规则和配置到/etc/snort下面。我们已经创建了单独的bash脚本来用于设置规则和配置。它会设置下面这些snort设置。
* 在linux中创建用于snort IDS服务的snort用户。
* 在/etc下面创建snort的配置文件和文件夹。
* 权限设置并从源代码的etc目录中复制数据。
* 从snort文件中移除规则中的#(注释符号)。
```
#!/bin/bash#
# snort源代码的路径
snort_src="/home/test/Downloads/snort-2.9.7.3"
echo "adding group and user for snort..."
groupadd snort &> /dev/null
useradd snort -r -s /sbin/nologin -d /var/log/snort -c snort_idps -g snort &> /dev/null#snort configuration
echo "Configuring snort..."mkdir -p /etc/snort
mkdir -p /etc/snort/rules
touch /etc/snort/rules/black_list.rules
touch /etc/snort/rules/white_list.rules
touch /etc/snort/rules/local.rules
mkdir /etc/snort/preproc_rules
mkdir /var/log/snort
mkdir -p /usr/local/lib/snort_dynamicrules
chmod -R 775 /etc/snort
chmod -R 775 /var/log/snort
chmod -R 775 /usr/local/lib/snort_dynamicrules
chown -R snort:snort /etc/snort
chown -R snort:snort /var/log/snort
chown -R snort:snort /usr/local/lib/snort_dynamicrules
###copy  configuration and rules from  etc directory under source code of snort
echo "copying from snort source to /etc/snort ....."
echo $snort_src
echo "-------------"
cp $snort_src/etc/*.conf* /etc/snort
cp $snort_src/etc/*.map /etc/snort##enable rules
sed -i 's/include \$RULE\_PATH/#include \$RULE\_PATH/' /etc/snort/snort.conf
echo "---DONE---"
```
改变脚本中的snort源目录路径并运行。下面是成功的输出。
![running script](/data/attachment/album/201509/02/151057vhvjntoiqko9osv4.png)
上面的脚本从snort源中复制下面的文件和文件夹到/etc/snort配置文件中
![files copied](/data/attachment/album/201509/02/151057ssbf8btsttutskdx.png)
snort的配置非常复杂，要让IDS能正常工作需要进行下面必要的修改。
```
ipvar HOME_NET 192.168.1.0/24  # LAN side
```
---
```
ipvar EXTERNAL_NET !$HOME_NET   # WAN side
```
![veriable set](/data/attachment/album/201509/02/151057x3853ll43z8l2532.png)
```
var RULE_PATH /etc/snort/rules     # snort signature path
var SO_RULE_PATH /etc/snort/so_rules        #rules in shared libraries
var PREPROC_RULE_PATH /etc/snort/preproc_rules  # Preproces path
var WHITE_LIST_PATH /etc/snort/rules        # dont scan
var BLACK_LIST_PATH /etc/snort/rules        #  Must scan
```
![main path](/data/attachment/album/201509/02/151058a3jlqdk4vk3elhi6.png)
```
include $RULE_PATH/local.rules   # file for custom rules
```
移除ftp.rules、exploit.rules前面的注释符号(#)。
![path rules](/data/attachment/album/201509/02/151059fepyx4z1e74jh81e.png)
现在[下载社区规则](https://www.snort.org/downloads/community/community-rules.tar.gz)并解压到/etc/snort/rules。启用snort.conf中的社区及紧急威胁规则。
![wget_rules](/data/attachment/album/201509/02/151059jlddq9adz2bz9u28.png)
![community rules](/data/attachment/album/201509/02/151059xx0k8nbyqb1feyjz.png)
进行了上面的更改后，运行下面的命令来检验配置文件。
```
# snort -T -c /etc/snort/snort.conf
```
![snort running](/data/attachment/album/201509/02/151100qrddrt6gg6kxxml4.png)
### 总结
本篇中，我们关注了开源IDPS系统snort在Ubuntu上的安装和配置。通常它用于监控事件，然而它可以被配置成用于网络保护的在线模式。snort规则可以在离线模式中可以使用pcap捕获文件进行测试和分析
---
via: 
作者：[nido](http://linoxide.com/author/naveeda/) 译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出