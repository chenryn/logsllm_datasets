INSERT 0 1    
pg_create_restore_point(text); -- SESSION B :     
digoal=# select pg_create_restore_point('pitr_test');    
 pg_create_restore_point     
-------------------------    
 F/B01F8C8    
(1 row)    
query2_2; commit2; -- SESSION A :     
digoal=# insert into pitr_test values (3,'test');    
INSERT 0 1    
digoal=# commit;    
COMMIT    
```  
切换日志, 归档 :     
```  
digoal=# checkpoint;    
CHECKPOINT    
digoal=# select pg_xlogfile_name(pg_switch_xlog());    
     pg_xlogfile_name         
--------------------------    
 000000030000000F0000000C    
(1 row)    
digoal=# checkpoint;    
CHECKPOINT    
digoal=# select pg_xlogfile_name(pg_switch_xlog());    
     pg_xlogfile_name         
--------------------------    
 000000030000000F0000000D    
(1 row)    
```  
使用拷贝的备份以及归档日志还原 :     
关闭数据库    
```  
pg93@db-172-16-3-33-> pg_ctl stop -m fast    
waiting for server to shut down.... done    
server stopped    
```  
删除数据库目录以及表空间目录    
```  
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> cd pg_tblspc/    
pg93@db-172-16-3-33-> ll    
total 0    
lrwxrwxrwx 1 pg93 pg93 47 May 26 18:04 26425 -> /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal    
pg93@db-172-16-3-33-> rm -rf /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal/*    
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> rm -rf *    
```  
还原备份以及表空间软链接    
```  
pg93@db-172-16-3-33-> cp -r /pgdata/digoal/1921/data04/pg93backup/20130527_onlinebackup/* $PGDATA/    
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> cd pg_tblspc/    
pg93@db-172-16-3-33-> ll    
total 4.0K    
drwx------ 3 pg93 pg93 4.0K May 27 14:32 26425    
pg93@db-172-16-3-33-> mv 26425/* /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal/    
pg93@db-172-16-3-33-> rm -rf 26425    
pg93@db-172-16-3-33-> ln -s /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal ./26425    
pg93@db-172-16-3-33-> ll    
total 0    
lrwxrwxrwx 1 pg93 pg93 47 May 27 14:34 26425 -> /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal    
```  
创建pg_log目录, 存放日志 :     
```  
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> mkdir -p pg_log    
```  
配置$PGDATA/recovery.conf    
```  
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> cp $PGHOME/share/recovery.conf.sample ./recovery.conf    
vi recovery.conf    
restore_command = 'recovery.sh /pgdata/digoal/1921/data04/pg93archdir %f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'    
recovery_target_name = 'pitr_test'      # e.g. 'daily backup 2011-01-26'    
recovery_target_timeline = 'latest'    
```  
创建恢复脚本 :     
```  
pg93@db-172-16-3-33-> cat recovery.sh    
#!/bin/bash    
export LANG=en_US.utf8    
export PGHOME=/opt/pgsql9.3    
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH    
export DATE=`date +"%Y%m%d"`    
export PATH=$PGHOME/bin:$PATH:.    
BASEDIR=$1    
find $BASEDIR -name $2 -exec cp {} $3 \;    
```  
添加可执行权限 :     
```  
pg93@db-172-16-3-33-> chmod 700 recovery.sh    
```  
启动数据库    
```  
pg93@db-172-16-3-33-> pg_ctl start    
server starting    
pg93@db-172-16-3-33-> LOG:  00000: loaded library "pg_stat_statements"    
LOCATION:  load_libraries, miscinit.c:1296    
```  
查看还原点是否与预计匹配 :     
```  
pg93@db-172-16-3-33-> psql    
psql (9.3devel)    
Type "help" for help.    
digoal=# select ctid,* from pitr_test ;    
 ctid  | id | info     
-------+----+------    
 (0,1) |  1 | test    
(1 row)    
digoal=# insert into pitr_test values(2,'new');    
INSERT 0 1    
digoal=# select ctid,* from pitr_test ;    
 ctid  | id | info     
-------+----+------    
 (0,1) |  1 | test    
 (0,3) |  2 | new    
(2 rows)    
```  
新插入的数据ctid=3, 说明query2_1的xlog信息被恢复了, 但是回滚了. 如果没有执行info=new的ctid应该=2.    
### 场景2  
2\.     
commit_xact1; time1; rollback_xact2; time2; commit_xact3; commit_xact4;    
按照以上描述, 使用recovery_target_time恢复,     
    如果recovery_target_time=time1, 不管recovery_target_inclusive=true|false, 恢复后应该都只能看到commit_xact1;的数据变更. 因为rollback_xact2回滚了, 不过使用ctid也能看出回滚的影响, 因为rollback_xact2;的xlog是需要处理的.    
    如果recovery_target_time=time2, 不管recovery_target_inclusive=true|false, 恢复后应该都只能看到commit_xact3;的数据变更. 但是绝对看不到commit_xact4的变更, 即使ctid也不会有影响, 因为commit_xact4;的xlog不会被处理.    
```  
commit_xact1; -- SESSION A :     
digoal=# truncate pitr_test ;    
TRUNCATE TABLE    
digoal=# insert into pitr_test values (1,'test');    
INSERT 0 1    
time1; -- SESSION A :     
digoal=# select now();    
              now                  
-------------------------------    
 2013-05-27 15:39:57.033134+08    
(1 row)    
rollback_xact2; -- SESSION A :     
digoal=# begin;    
BEGIN    
digoal=# insert into pitr_test values (2,'rollback');    
INSERT 0 1    
digoal=# insert into pitr_test values (3,'rollback');    
INSERT 0 1    
digoal=# rollback;    
ROLLBACK    
time2; -- SESSION A :     
digoal=# select now();    
              now                  
-------------------------------    
 2013-05-27 15:40:24.055161+08    
(1 row)    
commit_xact3; -- SESSION A :     
digoal=# insert into pitr_test values (4,'new');    
INSERT 0 1    
commit_xact4; -- SESSION A :     
digoal=# insert into pitr_test values (5,'new');    
INSERT 0 1    
```  
切换日志, 归档 :     
```  
digoal=# checkpoint;    
CHECKPOINT    
digoal=# select pg_xlogfile_name(pg_switch_xlog());    
     pg_xlogfile_name         
--------------------------    
 000000010000000000000003    
(1 row)    
digoal=# checkpoint;    
CHECKPOINT    
digoal=# select pg_xlogfile_name(pg_switch_xlog());    
     pg_xlogfile_name         
--------------------------    
 000000010000000000000004    
(1 row)    
```  
使用拷贝的备份以及归档日志还原 :     
关闭数据库    
```  
pg93@db-172-16-3-33-> pg_ctl stop -m fast    
waiting for server to shut down.... done    
server stopped    
```  
删除数据库目录以及表空间目录(为简化例子, 本例无新建的表空间.)    
```  
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> rm -rf *    
```  
还原备份以及表空间软链接    
```  
pg93@db-172-16-3-33-> cp -r /pgdata/digoal/1921/data04/pg93backup/20130527_onlinebackup/* $PGDATA    
```  
创建pg_log目录, 存放日志 :     
```  
pg93@db-172-16-3-33-> cd $PGDATA    
```  
配置$PGDATA/recovery.conf    
```  
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> cp $PGHOME/share/recovery.conf.sample ./recovery.conf    
vi recovery.conf    
restore_command = 'recovery.sh /pgdata/digoal/1921/data04/pg93archdir %f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'    
recovery_target_time = '2013-05-27 15:39:57.033134+08'    
recovery_target_inclusive = false    
recovery_target_timeline = 'latest'    
```  
创建恢复脚本 :     
```  
pg93@db-172-16-3-33-> cat recovery.sh    
#!/bin/bash    
export LANG=en_US.utf8    
export PGHOME=/opt/pgsql9.3    
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH    
export DATE=`date +"%Y%m%d"`    
export PATH=$PGHOME/bin:$PATH:.    
BASEDIR=$1    
find $BASEDIR -name $2 -exec cp {} $3 \;    
```  
添加可执行权限 :     
```  
pg93@db-172-16-3-33-> chmod 700 recovery.sh    
```  
启动数据库    
```  
pg93@db-172-16-3-33-> pg_ctl start    
server starting    
pg93@db-172-16-3-33-> LOG:  00000: loaded library "pg_stat_statements"    
LOCATION:  load_libraries, miscinit.c:1296    
```  
查看还原点是否与预计匹配 :     
```  
pg93@db-172-16-3-33-> psql    
psql (9.3devel)    
Type "help" for help.    
digoal=# select ctid,* from pitr_test ;    
 ctid  | id | info     
-------+----+------    
 (0,1) |  1 | test    
(1 row)    
digoal=# insert into pitr_test values(10,'new');    
INSERT 0 1    
digoal=# select ctid,* from pitr_test ;    
 ctid  | id | info     
-------+----+------    
 (0,1) |  1 | test    
 (0,4) | 10 | new    
(2 rows)    
```  
新插入的数据ctid=4, 说明rollback_xact2;的xlog信息被恢复了, 但是回滚了. 如果没有执行info=new的ctid应该=2.    
其他几种搭配就不测试了, 原理已经介绍清楚了. 有兴趣的朋友可以自行测试.    
### 场景3  
3\.     
commit_xact1;begin2;query2_1;commit_xact3;commit_xact4;query2_2;rollback2;commit_xact5;    
recovery_target_xid=commit_xact1, 无论recovery_target_inclusive=true|false, 恢复后数据库将包含commit_xact1的数据变更;    
recovery_target_xid=rollback2; 则包含xact1,xact3,xact4的变更以及xact2的回滚;    
recovery_target_xid=xact5; 则包含所有xlog信息.    
```  
commit_xact1; -- SESSION A :     
digoal=# truncate pitr_test ;    
TRUNCATE TABLE    
digoal=# begin;    
BEGIN    
digoal=# select txid_current();    
 txid_current     
--------------    
         1691    
(1 row)    
digoal=# insert into pitr_test values (1,'test');    
INSERT 0 1    
digoal=# end;    
COMMIT    
begin2;query2_1; -- SESSION A :     
digoal=# begin;    
BEGIN    
digoal=# select txid_current();    
 txid_current     
--------------    
         1692    
(1 row)    
digoal=# insert into pitr_test values (1692,'test');    
INSERT 0 1    
commit_xact3;commit_xact4; -- SESSION B :     
digoal=# begin;    
BEGIN    
digoal=# select txid_current();    
 txid_current     
--------------    
         1693    
(1 row)    
digoal=# insert into pitr_test values (1693,'teset');    
INSERT 0 1    
digoal=# end;    
COMMIT    
digoal=# begin;    
BEGIN    
digoal=# select txid_current();    
 txid_current     
--------------    
         1694    
(1 row)    
digoal=# insert into pitr_test values (1693,'teset');    
INSERT 0 1    
digoal=# insert into pitr_test values (1694,'teset');    
INSERT 0 1    
digoal=# end;    