### Issue Type
- Feature Idea

### Ansible Version
- ansible 2.1.0.0
- Configuration file: `/home/soar/ansible2/ansible.cfg`
- Configured module search path: Default (without overrides)

### Summary
When I create a new project with Ansible, I store all sensitive information in vault-encrypted files. To keep things simple, these files are included as `group_vars` or `host_vars`. This setup works perfectly. My project structure looks like this:

```
├── ansible.cfg
├── inventory
│   └── projectname
│       ├── group_vars
│       │   ├── hosts.yml
│       │   ├── somegroup.yml
│       │   └── somegroup-encrypted.yml
│       └── projectname
├── playbooks
│   ├── deploy-something.yml
│   └── test.yml
└── roles
    ├── somerole
    │   ├── defaults
    │   │   └── main.yml
```

Recently, I have started using automated tests for my Ansible projects. After committing to the repository, I run the following commands to check the playbook:

```sh
ansible-playbook -vvv --syntax-check playbooks/test.yml
ansible-playbook -vvv --connection=local --sudo playbooks/test.yml
```

I want to run these tests without using my encrypted data, and instead use default values defined in `rolename/defaults/main.yml`. However, I encounter the error `ERROR! Decryption failed`.

I believe there should be a command-line switch to run the playbook without decrypting the vault-encrypted files, specifically for testing purposes. I am aware that I can use `vars_files` or the `-e` command-line switch, but this would require me to specify them on every run. Additionally, I think the encrypted files should be placed in the `inventory` directory with the appropriate hosts, rather than in the `playbooks` directory.

Please also consider issue #14721 in your review.