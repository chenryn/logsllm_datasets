RedTeaming - 2020-06-24
#CSTips# #CS#
QAX.
GitHub+-+gloxec/CrossC2:+generate+CobaltStrike's+c...
RedTeaming - 2020-06-25
#CSTips#
cobaltstrike4.1
June 25, 2020 - Cobalt Strike 4.1
-------------
+ Fixed &listener_delete
+ Implemented sub-system to run Beacon Object Files. A BOF is a compiled C
program that executes within Beacon and can call Win32 and Beacon APIs
+ Ported 4.0's inline-execute capabilities to BOFs
+ Fixed logic flaw in getsystem
+ Added inline-execute command to run arbitrary BOFs
+ Moved dllload, reg query/queryv, and timestomp to BOFs
+ Added option to bootstrap Beacon in-memory without walking kernel32 EAT
- Artifact Kit and PowerShell (Resource Kit) artifacts use this option
- Added &payload_bootstrap_hint to apply this option to other artifacts
- Added -hasbootstraphint to check if this option applies to a payload
- set stage -> smartinject to true to enable this behavior.
- Removed option to generate x64 DLL that spawns an x86 payload in new process
+ Simplified the Artifact Kit by removing artifacts for deprecated features
+ Extended Beacon metadata with more info such as Windows build number and key
function pointers used to bootstrap agent.
+ spawn, spawnas, spawnu, inject, and elevate uac-token-duplication now inherit
pointers from same-arch target Beacon session metadata when stage ->
smartinject is enabled.
+ Added &payload_local to generate shellcode with key bootstrap function
pointers inherited from a parent Beacon session.
+ Added set ssh_banner "..." to change SSH client info for Beacon's SSH command
+ Simplifed the heartbeat portion of SMB and TCP Beacon protocols
+ Added smb_frame_header and tcp_frame_header Malleable C2 options to shape the
content and size of the length frames in these communication protocols
+ Fixed bug that has localhost-only TCP Beacon bind to 0.0.0.0 after first unlink.
+ Multiple updates to SSH agent to keep pace with Beacon protocol changes
+ Split extc2 Beacon into its own DLL (as extc2 protocol is now diverged from
the SMB Beacon protocol due to changes made in this release).
+ Several security descriptor changes in ExtC2, SMB Beacon, and SSH agent
+ jump psexec* now uses UNC path with target instead of 127.0.0.1 to reference
uploaded file on target.
+ Added right-click menu to show/hide unlinked nodes in pivot graph.
+ Added &unbind to unbind keyboard shortcuts (to include Cobalt Strike built-ins)
+ Added exe option to Scripted Web Delivery. Generates and hosts EXE at URL.
+ Added [note] field to logs to call out note changes made to session
+ Added scriptable popup hook for 'listeners' (View -> Listeners table)
+ Added "*" meta-column to table Ctrl+F feature. Searches all columns at once
+ Removed a few (not searchable) columns from table Ctrl+F feature
+ Added web server port to View -> Web Log output
+ Fixed a PE parser bug
+ execute-assembly's "are you an assembly" check uses a better check.
+ Updated to Mimikatz 2.2.0 20200519
+ Editing listener no longer removes its color accent.
+ Fixed off-by-1 error in c2lint's useragent length check.
+ sleep_mask now uses a slightly larger mask
+ Fixed DNS staging regression when dns_stager_subhost is set.
+ Fixed inconsistent stager pipe bug in &stager_bind_pipe and &beacon_stage_pipe.
+ Made getuid a little bit more robust
+ Console directed messages now scrub ESC character.
+ Added an exit hint parameter to &payload function (thread or process)
------------
RedTeaming - 2020-06-25
##
jio
RedTeaming - 2020-06-26
#CS# #CSTips#
CS(Kit),.
GitHub+-+josephkingstone/cobalt_strike_extension_k...
RedTeaming - 2020-06-26
##
xmldump,,.
Wing: [MSBuild:+A+Profitable+Sidekick!+|+TrustedSec](https://www.trustedsec.com/blog/msbuild-a-profitable-sidekick/)
:  xml  PEloader  dump  mimikatz flag
RedTeaming - 2020-06-26
##
.NetCore ,dllcspayload..,360.
Abusing+.NET+Core+â€“+Evasion+|+Pentest+Laboratories
:  CreateRemoteThread 
lengyi:  == 
: 360==  md5 
RedTeaming - 2020-06-26
 logoff ps  The interface is known 
RedTeaming - 2020-06-26
##
PPID Spoofing:
,:wordcmd,cmdword,CreateProcessAlpStartupInfopid..