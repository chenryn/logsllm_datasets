# 技术分享：避免使用不安全的哈希扫描程序

##### 译文声明
本文是翻译文章，原文来自 [wordfence.com](http://wordfence.com)。译文仅供参考，具体内容和含义以原文为准。
翻译者：[secist](http://bobao.360.cn/member/contribute?uid=1427345510)

预估稿费：200 RMB（欢迎投稿！）
投稿方式：发送邮件至 linwei#360.cn 或登录网页版在线投稿。

## 前言
本文将探讨多个 WordPress 恶意软件扫描器存在的一个主要问题：使用弱哈希算法来标识文件的好坏。这个问题不仅在 WordPress 的恶意软件扫描器中存在，在其他一些病毒扫描器中也有所发现。为使后续讨论更加清晰简洁，我们将此称为“弱哈希扫描器”问题。该问题可能允许攻击者隐藏恶意软件，而使用 MD5 散列算法的扫描器无法检测到它。本文将解释哈希在安全中的应用、相关问题及解决方法，并演示 Wordfence 如何在恶意软件扫描器中使用安全的哈希算法。

## 安全行业中如何使用哈希来鉴别文件？
在安全领域，哈希算法通过一系列逻辑运算生成唯一数字，用于标识特定文件。这个过程被称为散列，生成的唯一编号则被称为“哈希”。哈希算法在安全领域非常实用且有趣。例如，我们可以通过获取一个恶意软件并为其创建哈希值来进行标识。随后，我们可以创建一个包含该恶意软件哈希值的文件，并用扫描器进行检查。如果扫描器发现该哈希值与已知的恶意软件哈希值匹配，则可以确定该文件为恶意程序。

哈希还可以用来识别已知的安全文件。Wordfence 已经为 WordPress 中所有已知安全的核心文件、主题文件和插件文件创建了哈希。以下是 Wordfence 跟踪的部分数据：
- 205,146 个已知安全的 WordPress 核心文件
- 5,967,361 个已知安全的 WordPress 主题文件
- 23,527,261 个已知安全的 WordPress 插件文件

哈希对于像 Wordfence 这样的安全公司来说，是一种存储小块数据以唯一地识别已知文件是否正常的工具。我们会使用这些数据来检查系统上的文件，并决定保留或删除它们。

下图说明了恶意软件扫描器是如何使用哈希来识别文件的。

## 不是所有的哈希算法都是相同的：MD5 vs SHA-2
哈希算法有多种实现方式，无论使用哪种算法，都会生成一串固定长度的唯一数字。MD5 是一种由 Ron Rivest 教授于 1991 年发明的哈希算法。尽管它曾经是一个不错的哈希算法，但现在已经相当老旧且不安全。相比之下，SHA-2 是一种更现代且安全的哈希算法，由国家安全局开发并于 2001 年由国家标准与技术研究所发布。直到今天，SHA-2 仍被广泛使用，并被认为足够安全，适用于商业加密。

MD5 算法的主要问题是容易受到“碰撞攻击”，即两个不同的文件可以生成相同的 MD5 哈希值。这使得攻击者可以通过创建具有相同 MD5 哈希值的恶意文件来逃避扫描器的检测。因此，Wordfence 使用 SHA-2 来跟踪已知文件，以防止攻击者创建与已知正常文件相同的哈希值。

## 弱哈希扫描器的问题
不幸的是，并非所有安全产品都采用这种做法。在 WordPress 中，一些恶意软件扫描器仍然使用老旧的 MD5 哈希算法来检测文件更改情况。例如，Sucuri 插件和 “Shield WordPress Security” 插件仍然使用 MD5 来检测核心文件的更改。他们从 [api.wordpress.org](http://api.wordpress.org/) 获取最新的 MD5 哈希值。

然而，这些产品的 API 并未设计用于恶意软件检测。最初是在 2013 年的 WordPress 升级过程中创建的，用于帮助确定哪些文件需要升级。此外，该 API 使用的 MD5 算法在加密方面不够强大，无法有效检测恶意或安全文件。

在 Wordfence，我们使用 SHA-2 哈希算法，并为此创建了自己的恶意软件扫描 API。这样做的目的是使用更强的哈希函数，确保恶意软件不能通过利用弱哈希算法来逃避检测。

上周，安全研究人员展示了如何创建两个具有相同 MD5 哈希值的 Windows 可执行文件。这允许攻击者创建一个友好的可执行文件和另一个恶意文件，然后用友好文件替换恶意文件，从而避免检测。2014 年，Nat McHugh 演示了如何创建两个具有相同 MD5 哈希值的不同 PHP 文件和图像文件。这些研究实际上已经有一段时间了，早在 2005 年，王晓云和洪波宇就提出了 MD5 的模块化差异攻击。2007 年，Marc Stevens 创建了一个开源工具包，利用了 MD5 的这一问题。这些研究表明，攻击者可能已经利用 MD5 提供安全文件，然后再用恶意文件替换它，从而避开 MD5 扫描器的检测。

## 写这篇文章的目的
本文旨在达到以下两个目的：
1. 如果你是安全产品的用户，请确保你选择的安全产品正在使用 SHA-2 或其他更安全的哈希算法进行恶意软件扫描。使用 MD5 验证可能会导致高危文件被误认为是安全文件，这对你的系统是非常危险的。
2. 如果你是安全供应商，并且尚未将你的安全产品切换到 SHA-2 或其他安全哈希算法，请务必为了客户的安全利益尽快完成这项工作。