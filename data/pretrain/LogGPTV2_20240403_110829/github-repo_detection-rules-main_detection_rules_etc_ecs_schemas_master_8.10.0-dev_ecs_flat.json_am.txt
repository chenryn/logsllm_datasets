{"host.risk.calculated_score": {"dashed_name": "host-risk-calculated-score", "description": "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.", "example": 880.73, "flat_name": "host.risk.calculated_score", "level": "extended", "name": "calculated_score", "normalize": [], "original_fieldset": "risk", "short": "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.", "type": "float"}}
{"host.risk.calculated_score_norm": {"dashed_name": "host-risk-calculated-score-norm", "description": "A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100.", "example": 88.73, "flat_name": "host.risk.calculated_score_norm", "level": "extended", "name": "calculated_score_norm", "normalize": [], "original_fieldset": "risk", "short": "A normalized risk score calculated by an internal system.", "type": "float"}}
{"host.risk.static_level": {"dashed_name": "host-risk-static-level", "description": "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform.", "example": "High", "flat_name": "host.risk.static_level", "ignore_above": 1024, "level": "extended", "name": "static_level", "normalize": [], "original_fieldset": "risk", "short": "A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform."}}
{"host.risk.static_score": {"dashed_name": "host-risk-static-score", "description": "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.", "example": 830.0, "flat_name": "host.risk.static_score", "level": "extended", "name": "static_score", "normalize": [], "original_fieldset": "risk", "short": "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.", "type": "float"}}
{"host.risk.static_score_norm": {"dashed_name": "host-risk-static-score-norm", "description": "A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100.", "example": 83.0, "flat_name": "host.risk.static_score_norm", "level": "extended", "name": "static_score_norm", "normalize": [], "original_fieldset": "risk", "short": "A normalized risk score calculated by an external system.", "type": "float"}}
{"host.type": {"dashed_name": "host-type", "description": "Type of host.\nFor Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.", "flat_name": "host.type", "ignore_above": 1024, "level": "core", "name": "type", "normalize": [], "short": "Type of host."}}
{"host.uptime": {"dashed_name": "host-uptime", "description": "Seconds the host has been up.", "example": 1325, "flat_name": "host.uptime", "level": "extended", "name": "uptime", "normalize": [], "short": "Seconds the host has been up.", "type": "long"}}
{"http.request.body.bytes": {"dashed_name": "http-request-body-bytes", "description": "Size in bytes of the request body.", "example": 887, "flat_name": "http.request.body.bytes", "format": "bytes", "level": "extended", "name": "request.body.bytes", "normalize": [], "short": "Size in bytes of the request body.", "type": "long"}}
{"http.request.body.content": {"dashed_name": "http-request-body-content", "description": "The full HTTP request body.", "example": "Hello world", "flat_name": "http.request.body.content", "level": "extended", "multi_fields": [{"flat_name": "http.request.body.content.text", "name": "text", "type": "match_only_text"}], "name": "request.body.content", "normalize": [], "short": "The full HTTP request body.", "type": "wildcard"}}
{"http.request.bytes": {"dashed_name": "http-request-bytes", "description": "Total size in bytes of the request (body and headers).", "example": 1437, "flat_name": "http.request.bytes", "format": "bytes", "level": "extended", "name": "request.bytes", "normalize": [], "short": "Total size in bytes of the request (body and headers).", "type": "long"}}
{"http.request.id": {"dashed_name": "http-request-id", "description": "A unique identifier for each HTTP request to correlate logs between clients and servers in transactions.\nThe id may be contained in a non-standard HTTP header, such as `X-Request-ID` or `X-Correlation-ID`.", "example": "123e4567-e89b-12d3-a456-426614174000", "flat_name": "http.request.id", "ignore_above": 1024, "level": "extended", "name": "request.id", "normalize": [], "short": "HTTP request ID."}}
{"http.request.method": {"dashed_name": "http-request-method", "description": "HTTP request method.\nThe value should retain its casing from the original event. For example, `GET`, `get`, and `GeT` are all considered valid values for this field.", "example": "POST", "flat_name": "http.request.method", "ignore_above": 1024, "level": "extended", "name": "request.method", "normalize": [], "short": "HTTP request method."}}
{"http.request.mime_type": {"dashed_name": "http-request-mime-type", "description": "Mime type of the body of the request.\nThis value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.", "example": "image/gif", "flat_name": "http.request.mime_type", "ignore_above": 1024, "level": "extended", "name": "request.mime_type", "normalize": [], "short": "Mime type of the body of the request."}}
{"http.request.referrer": {"dashed_name": "http-request-referrer", "description": "Referrer for this HTTP request.", "example": "https://blog.example.com/", "flat_name": "http.request.referrer", "ignore_above": 1024, "level": "extended", "name": "request.referrer", "normalize": [], "short": "Referrer for this HTTP request."}}
{"http.response.body.bytes": {"dashed_name": "http-response-body-bytes", "description": "Size in bytes of the response body.", "example": 887, "flat_name": "http.response.body.bytes", "format": "bytes", "level": "extended", "name": "response.body.bytes", "normalize": [], "short": "Size in bytes of the response body.", "type": "long"}}
{"http.response.body.content": {"dashed_name": "http-response-body-content", "description": "The full HTTP response body.", "example": "Hello world", "flat_name": "http.response.body.content", "level": "extended", "multi_fields": [{"flat_name": "http.response.body.content.text", "name": "text", "type": "match_only_text"}], "name": "response.body.content", "normalize": [], "short": "The full HTTP response body.", "type": "wildcard"}}
{"http.response.bytes": {"dashed_name": "http-response-bytes", "description": "Total size in bytes of the response (body and headers).", "example": 1437, "flat_name": "http.response.bytes", "format": "bytes", "level": "extended", "name": "response.bytes", "normalize": [], "short": "Total size in bytes of the response (body and headers).", "type": "long"}}
{"http.response.mime_type": {"dashed_name": "http-response-mime-type", "description": "Mime type of the body of the response.\nThis value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.", "example": "image/gif", "flat_name": "http.response.mime_type", "ignore_above": 1024, "level": "extended", "name": "response.mime_type", "normalize": [], "short": "Mime type of the body of the response."}}
{"http.response.status_code": {"dashed_name": "http-response-status-code", "description": "HTTP response status code.", "example": 404, "flat_name": "http.response.status_code", "format": "string", "level": "extended", "name": "response.status_code", "normalize": [], "short": "HTTP response status code.", "type": "long"}}
{"http.version": {"dashed_name": "http-version", "description": "HTTP version.", "example": 1.1, "flat_name": "http.version", "ignore_above": 1024, "level": "extended", "name": "version", "normalize": [], "short": "HTTP version."}}
{"labels": {"dashed_name": "labels", "description": "Custom key/value pairs.\nCan be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.\nExample: `docker` and `k8s` labels.", "example": "{\"application\": \"foo-bar\", \"env\": \"production\"}", "flat_name": "labels", "level": "core", "name": "labels", "normalize": [], "object_type": "keyword", "short": "Custom key/value pairs.", "type": "object"}}
{"log.file.path": {"dashed_name": "log-file-path", "description": "Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate.\nIf the event wasn't read from a log file, do not populate this field.", "example": "/var/log/fun-times.log", "flat_name": "log.file.path", "ignore_above": 1024, "level": "extended", "name": "file.path", "normalize": [], "short": "Full path to the log file this event came from."}}
{"log.level": {"dashed_name": "log-level", "description": "Original log level of the log event.\nIf the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).\nSome examples are `warn`, `err`, `i`, `informational`.", "example": "error", "flat_name": "log.level", "ignore_above": 1024, "level": "core", "name": "level", "normalize": [], "short": "Log level of the log event."}}
{"log.logger": {"dashed_name": "log-logger", "description": "The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.", "example": "org.elasticsearch.bootstrap.Bootstrap", "flat_name": "log.logger", "ignore_above": 1024, "level": "core", "name": "logger", "normalize": [], "short": "Name of the logger."}}
{"log.origin.file.line": {"dashed_name": "log-origin-file-line", "description": "The line number of the file containing the source code which originated the log event.", "example": 42, "flat_name": "log.origin.file.line", "level": "extended", "name": "origin.file.line", "normalize": [], "short": "The line number of the file which originated the log event.", "type": "long"}}
{"log.origin.file.name": {"dashed_name": "log-origin-file-name", "description": "The name of the file containing the source code which originated the log event.\nNote that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.", "example": "Bootstrap.java", "flat_name": "log.origin.file.name", "ignore_above": 1024, "level": "extended", "name": "origin.file.name", "normalize": [], "short": "The code file which originated the log event."}}
{"log.origin.function": {"dashed_name": "log-origin-function", "description": "The name of the function or method which originated the log event.", "example": "init", "flat_name": "log.origin.function", "ignore_above": 1024, "level": "extended", "name": "origin.function", "normalize": [], "short": "The function which originated the log event."}}
{"log.syslog": {"dashed_name": "log-syslog", "description": "The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.", "flat_name": "log.syslog", "level": "extended", "name": "syslog", "normalize": [], "short": "Syslog metadata", "type": "object"}}
{"log.syslog.appname": {"dashed_name": "log-syslog-appname", "description": "The device or application that originated the Syslog message, if available.", "example": "sshd", "flat_name": "log.syslog.appname", "ignore_above": 1024, "level": "extended", "name": "syslog.appname", "normalize": [], "short": "The device or application that originated the Syslog message."}}
{"log.syslog.facility.code": {"dashed_name": "log-syslog-facility-code", "description": "The Syslog numeric facility of the log event, if available.\nAccording to RFCs 5424 and 3164, this value should be an integer between 0 and 23.", "example": 23, "flat_name": "log.syslog.facility.code", "format": "string", "level": "extended", "name": "syslog.facility.code", "normalize": [], "short": "Syslog numeric facility of the event.", "type": "long"}}
{"log.syslog.facility.name": {"dashed_name": "log-syslog-facility-name", "description": "The Syslog text-based facility of the log event, if available.", "example": "local7", "flat_name": "log.syslog.facility.name", "ignore_above": 1024, "level": "extended", "name": "syslog.facility.name", "normalize": [], "short": "Syslog text-based facility of the event."}}
{"log.syslog.hostname": {"dashed_name": "log-syslog-hostname", "description": "The hostname, FQDN, or IP of the machine that originally sent the Syslog message. This is sourced from the hostname field of the syslog header. Depending on the environment, this value may be different from the host that handled the event, especially if the host handling the events is acting as a collector.", "example": "example-host", "flat_name": "log.syslog.hostname", "ignore_above": 1024, "level": "extended", "name": "syslog.hostname", "normalize": [], "short": "The host that originated the Syslog message."}}
{"log.syslog.msgid": {"dashed_name": "log-syslog-msgid", "description": "An identifier for the type of Syslog message, if available. Only applicable for RFC 5424 messages.", "example": "ID47", "flat_name": "log.syslog.msgid", "ignore_above": 1024, "level": "extended", "name": "syslog.msgid", "normalize": [], "short": "An identifier for the type of Syslog message."}}
{"log.syslog.priority": {"dashed_name": "log-syslog-priority", "description": "Syslog numeric priority of the event, if available.\nAccording to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.", "example": 135, "flat_name": "log.syslog.priority", "format": "string", "level": "extended", "name": "syslog.priority", "normalize": [], "short": "Syslog priority of the event.", "type": "long"}}
{"log.syslog.procid": {"dashed_name": "log-syslog-procid", "description": "The process name or ID that originated the Syslog message, if available.", "example": 12345, "flat_name": "log.syslog.procid", "ignore_above": 1024, "level": "extended", "name": "syslog.procid", "normalize": [], "short": "The process name or ID that originated the Syslog message."}}
{"log.syslog.severity.code": {"dashed_name": "log-syslog-severity-code", "description": "The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.", "example": 3, "flat_name": "log.syslog.severity.code", "level": "extended", "name": "syslog.severity.code", "normalize": [], "short": "Syslog numeric severity of the event.", "type": "long"}}