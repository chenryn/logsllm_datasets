·由DEBUG捕捉所执行的命令失败时，则跳过下一个命令。
·在Shell函数或是source或.（点号）取用的脚本内，由DEBUG捕捉所执行
的命令失败时，则Shell会模拟调用return。
·数组变量BASH_ARGC被设置。每个元素都为相对应的函数或点号脚本引I用，保
留参数的数目。同理，BASH_ARGV数组变量也被设置，其每个元素为传递给函
数或点号脚本的其中一个参数。BASH_ARGV函数为一个堆栈，在每次调用时，
值便往前推进。因此，最后的元素即为最近函数或脚本引用的最后一个参数。
。启用函数追踪。通过（…）所引用的命令替换、Shell函数与子Shell，都继承
DEBUG与RETURN捕捉（RETURN推捉在return执行时被使用，或是一个以
.（点号）或source取用的脚本结束）。
·启用错误追踪。通过（）所引用的命令替换、Shell函数与子Shell，都继承
ERROR捕提。
extglob
bash会扩展样式比对，类似ksh88那样。这部分请详见14.3.3节。
extquote
bash允许在S（variable}展开里，以双引号框住S'...与s"...
failglob
当样式不相符于文件名时，bash会产生错误。
force_fignore
完成时，bash会忽略与FIGNORE里字尾列表比对相符的单词，就算这样的单词是
唯一可能之完成。
.gnu_errfmt
bash会以标准GNU格式显示错误信息。
www.TopSage.com
---
## Page 410
398
第14章
histappend
bash将命令附加至HISTFILE变量所指名的文件，而非覆盖文件。
histreedit
当历史替换失败时，如果使用readline程序库，则bash允许你重新编辑失败的
替换。
histverify
使用readline，bash会将历史替换的结果，载入至编辑缓冲区、供进一步处理。
hostcomplete
bash在遇到带有@字符的单词时，会以readline执行主机名称的完成。此默认
值为开启的。
huponexit
bash会在交互式登录Shell离开时，传送SIGHuP给所有的工作。
interactive_comments
·, 
bash视为交互式Shell下注释的起始。此默认值为开启的。
lithist
与cmdhist选项合用时，bash会存储历史里的多行命令，使用内嵌换行字符面
非分号。
login_She11
bash会在它以登录Shell方式被启动时设置此选项。它无法被改变。
mai1wa.rn
bash在检查邮件时，如发现文件访问时间已变更，即显示“Themailinmailfile
hasbeenread”（mailfile里的邮件已被读取）的信息。
no_empty_cmd_completion
当命令是会试在一空行上完成时，bash不会查找SPATH。
nocaseglob
bash在文件名比对时忽略大小写，
bash会使得不相符于任何文件的样式变成null字符串，而不再是表示它们自己。
然后，此null字符串会通过更进一步的命令列处理面被删除。事实上，完全不相符
的样式，会自命令列消失。
progcomp
此选项启动可程序化的完成功能，详见bash（1）手册页。其默认值为开启。
www.TopSage.com
---
## Page 411
Shell可移植性议题与扩展
399
promptvars
bash会在各种提示符号字符串的值上执行变量与参数展开。其默认值为开启。
restricted_Shel1
bash将此值设为真时，表示是以限制性Shell方式运作。此选项无法被改变。起
始文件会查询此选项以决定其行为模式。如果想对限制性Shell有进一参了解，可
参考15.2节
shift_verbose
如果shift命令计数大于留下来的位置参数的数目时，则bash会显示信息。
sourcepath
bash使用sPATH为source与，命令查找文件，默认值为启动的。如果关闭，则
你必须使用完整或相对路经名称查找文件。
xpg_echo
baah的内置echo会处理反斜线转义符。
14.3共通的扩展
bash与ksh93都支持大量超过POSIXShell的扩展。本节要说明的是那些重叠的扩展：
也就是，两个Shell都提供的相同功能，及以相同的方式支持。
14.3.1select循环
bash与ksh都支持select循环，可轻松产生简易式选单。其语法单纯，但做的事却很
多：
select name [in list]
do
可以使用Sname的句...
done
此与一般的for循环具有相同的语法，只是关键字select不同。也就像for循环一
样：你可以省略inIist且它会默认为"S8”；也就是被括弧起来的命令列参数的列表。
select的行为如下：
1.为1ist里的每个项目产生选单，将每个选择格式化为数字
2.显示PS3的值作为提示符号，井等待用户输入一数字
3.存储选定的选择在变量name中，以及存储选定的数字在内置变量REPLY里
www.TopSage.com
---
## Page 412
400
24
4.执行主体内的语句
com
5.持续重复处理程序（稍后会说明如何离开）
以范例说明应较易于了解此处理过程。假设你需要知道，如何为一个分时系统正确地设
置TERM变量，而分时系统使用不同种类的显示终端，你没有将终端直接连到你的计
算机：相反地，你的用户是通过终端服务器进行通信，虽然telnet协议可以传递TERM
环境变量，但终端服务器还没有聪明到能这么做。意即tty（序列设备）号码，并不能决
定终竭的形态。
因此，除了在登录时提示用户终端类型之外，你没有其他选择。要作这个操作，你可以
将下列代码置放在/etc/profile（假定你有固定的一组已知终端类型）里：
PS3='terminal? '
select term in gl35a t2000 s531 vt99
do
if [ -n *$term* ]
then
TERM=$term
export TERH
break
else.
echo''invalid.'
done
fi
当你执行此代码时，会看到这样的选单：
1)g135a
2) t2000
318531
4)vt:99
terminal?
内置Shell变量PS3包含select使用的提示字符串，其默认值为“#？。为此理由，
上述代码的首行将它设置为更相关的值。
select语句是从选择列表中构建选单。如果用户输入有效数字（1至4），变量term
被设置为相对应值：如果它是null（用户只是按下Enter），Shell会再打印一次选单。
循环体里的代码会检查term是否非null。如果是，则指定Sterm为环境变量TERM，导
出TERM并显示确认信息：之后break语句离开select循环。如果term是null，则
代码会显示错误信息，并再重复提示符号（但不是选单）。
break语句是离开select循环的常用方式（用户也可以输入Ctrl-D表示输人结束，以
www.TopSage.com
---
## Page 413
Shell可移植性议题与扩展
401
离开select循环。这是提供予交互模式下的用户一个离开的统一方式，但对Shell程序
设计师并没有什么帮助）。
我们可以让解决方案再精益求精，让选单更人性化，使得用户无须知道终端的terminfo
名称。通过引文的字符字符串作为选单项目完成此任务，之后再使用caBe决定
terminfo名称即可。新的版本是现于例14-2。
例14-2：结合更人性化的选单项目与select
echo *Select your terminal type:'
select tern in \
Givalt GL35a′ \
'Tsoris T2000·\
Shande 531'\
do
case SREPLY in
2) TERM=t2000 11
1) TERM=g135a :;
3)TERM=s531 ::
*)echo *invalid.' ::
4)TERM=Vt99 11
if [[ -n Sterm 11: then
0088
echo TERH Ls $TERM
export TERM
break
done
这样的代码看来与传统程序的选单子程序类似，尽管select仍提供了将选单选择转换
为数字的捷径。我们让每个选单选择自已独立一行是为了可读性，不过还是得加上接续
字符，以让Shell避开抱想语法。
这里是在执行此程序时，用户将会看到的：
1) Givalt GL35a
2)
Tsoxis T-2000
3) Shande 531
4) Vey VT99
termina1?
这比先前代码的输出更能提供适切的信息。
进入select循环体时，Sterm则为4个字符串其中之一（如果用户输人无效选择，则
为null），然而内置变量RBPLY则会包含用户所选定的数字。我们需要case语句，以
指定正确的值给TERM，并使用REPLY的值作为CaSe选定器。
www.TopSage.com
---
## Page 414
402
第14章
当case语句完成后、if会检查用户的选择是否有效，这和前面的解决方案一样。如果
选择有效，则TERM已被指定。所以代码只要显示确认信息，导出TERM，及离开select
循环。如果非有效选择，则select循环会重复提示号，及再一次经过整个程序。
在select循环中，如果REPLY设置为null字符串，则Shell会再打印一次选单。这种
状况是当用户按下Enter的时后发生。不过，你也可以直接将REPLY设为null字符串，
强迫Shell再打印一次选单。
TMouT（timeout）变量会对select语句造成影嘲。在进人select循环之前，先将它
设置为某个秒数n，如果在这段时间内没有任何输人数据，则select会离开。
14.3.2扩展性Test工具
ksh提出扩展性test工具，以[[与1]呈现。这些是Shell的关键字，对于Shell语法
是特殊的，且非命令。bash近期版本也采用此特殊工具。
[[...]]与一般test及[...1命令不同之处在于不处理单词展开与样式展开（通配字
符）。意即它不需要使用引号以处理引文操作，事实上，（[...11的内容会独自形成一
个子语言，让它更易于使用。大部分的运算符都与test所使用的相同。完整列表如表
14-3所示，
表14-3：扩展test运算符
运算符
仅bash或ksh适用如果为此状况，则为真
file存在。（已过时，请使用-e）
-b file
file为区块设备文件。
-c file
file为字符设备文件。
-C file
ksh
file为连续性（contiguous）文件（绝大多
数UNIX版本不支持）。
-d file
file为目录。
-e file
file存在，
-f file
file为一般文件
-g file
file设置 setgid 位。
-G file
file的群组ID同于Shel1下有效的群组ID。
-h file
file为符号性连接。
-k file
file设置黏着（sticky）位。
-1 file
ksh
file为符号性连接（仅运作于使用/bin/
test-1期试的符号性连接系统上）。
www.TopSage.com
---
## Page 415
Shell可移植性议题与扩展
表14-3：扩展test运算符（续）
com
-Lfile
file为符号性连接。
-n string
string为非 null,
Nfile
bash
file会被修改，因为它被读取。
0 option
option被设置。
-0 file
file的拥有者为Shell的有效用户ID.
-p file
file为管道或命名的管道（FIFO文件）。
-r file
file是可读取的。
-8 file