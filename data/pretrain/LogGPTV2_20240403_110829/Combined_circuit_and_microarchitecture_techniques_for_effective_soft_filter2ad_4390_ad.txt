the ready-to-execute instructions and delays their dispatching.
On the other hand, the benefit from dispatching not-ready
critical instructions to RIQ is disappeared with an extremely
small RIQ. Figure 8 (a)
-(c) presents the normalized
throughput IPC, harmonic IPC and IQ SER to the baseline
case on various RIQ sizes. As can be seen, IQ SER reduces as
the RIQ size increases, because the unprotected NIQ size is
reduced and less vulnerable bits are exposed to soft error
in
strikes. However,
deleterious performance impact due to the thirst for NIQ to
hold ready-to-execute instructions. As shown in Figure 8,
RIQ size with 24 generates the closest performance to the
baseline case in all
the three workload categories and it
satisfies our target on maintaining application performance
while improving IQ reliability. After the RIQ size is fixed at
set of
24 for
experiments can be performed to search for an appropriate
criticality threshold. However, higher criticality threshold
the lowest criticality threshold, another
the increase of RIQ size results
requires smaller RIQ which results in higher IQ vulnerability,
it is not suitable to our target even though the performance
can be improved. In our paper, the 24 entry RIQ with pre-set
criticality threshold equal to two is used in the experiments.
5.3. Effectiveness of Dual-VDD in ROB SER
Robustness
In this subsection, the efficiency of applying Dual- vDD
for ROB SER enhancement is examined. Black bars in Figure
9 (a) and (b) show the reduced ROB SER and the power
overhead of the processor core after the proposed technique
applied to the three types of workloads. As can be seen, on
average, ROB SER reduces 290/0 by consuming extra 2.6%
core power. And in MEM workloads which encounter a large
number of L2 misses, our technique gains 43% ROB SER
reduction. In most architecture design, 2.60/0 power overhead
is larger than the acceptable boundary; therefore, the using L2
miss as a trigger has to be improved. Notice that the number
of vulnerable bits in the ROB is not always positively
proportional to the ROB utilization, which suggests that L2
miss does not always imply a large number of ACE bits in the
ROB. In this paper, we propose an enhanced trigger which
takes the quantity of the ACE bits in ROB into account. The
trigger performs as follows: when a L2 miss occurs,
the
number of ACE bits in ROB per cycle is countered and
averaged in the following 20 cycles, and the high vDD will
not be supplied if there are not enough ACE bits, saying,
lower than a vulnerability threshold. After the L2 miss is
solved, the vDD is switched back to nominal vDD • Since on(cid:173)
line, accurate ACE bits identification is difficult, in our study,
we approximate the number of ACE bits at the instruction
level. The basic idea is:
the longer dependence chain the
instruction has, the higher possibility its computation result
affects program final output. Consequently, we assume the
bits in instructions with high criticality (e.g. criticality > 16)
are ACE. The information stored in the critical table can be
used for ACE-ness estimation. Note that the pre-defined
1-4244-2398-9/08/$20.00 ©2008 IEEE
144
DSN 2008: Fu et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:18:09 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
(a) ROB SER Reduction
(b) Power Overhead
Figure 9. ROB SER reduction and processor power overhead with L2_miss trigger and enhanced trigger
• Power owmead
• ROB S"ER reduction
SERJeduction/Power_owrtlead
. . .
..
•
•
•
80 76 72 68 64 60 56 52 48
•
•
•
•
•
•
Vulnerability Threllhold
(a) CPU
12
11.8 J
:::11
11 ~ 1
10.8 lH
10.6
45
40
35
Ir:
UI
1130Is 251 20
i 15
1~
0
I
CL
Power memead
ROB SER reduction
SER_reduction/Poweco\ertlead
. . .
.
. . . . .
80 76 72 68 64 60 56 52 48
Vulnerability Thre....old
(b) MIX
5.4
5.3 •
5.2l
5.1 '&I
:.911
4.8 rr
4.7lH
4.6
40
I
35
ll:~
H~
I 1~
o
Figure 10. Vulnerability threshold analysis
,
• Poweco\ertlead
• ROB SER reductloo
SER...reductionlPowecowrhead
~-----------'-6.8
II
• •
• •
• • • 5.4
80 76 72 68 64 60 56 52 48
Vulnerability Threllhold
(c)MEM
and
In this
between
reliability
vulnerability
vulnerability threshold affects both the ROB SER reduction
and the power overhead. Care must be taken when choosing
a pre-defined vulnerability threshold, as setting this value too
high can result in limited ROB reliability improvement, and
setting it too low can result in minimal control over the power
consumption.
study, we vary the vulnerability
threshold in our experiments dependant upon the size of the
ROB (within a range of 1/2*ROB_size to 5/6*ROB_size). To
evaluate the effectiveness of various thresholds, we propose a
metric, SER_reductionipower_overhead, which describes the
tradeoff
power. A higher
SER_reductionipower_overhead value indicates a better
tradeoff. Figures 10 (a) - (c) present the ROB SER reduction,
power overhead and SER_reduction/power_overhead across
various
three workload
categories. As expected, both the ROB SER reduction and
power overhead increase as the threshold decreases because
high vDD is triggered more frequently. However, this is not
the case for SER_reductionipower_overhead. When the
threshold is set to 64, as shown in Figure 10 (a) and (b),
SER_reductionipower_overhead attains its maximum value
on CPU and MIX workloads. Therefore, a vulnerability
threshold of 64 is selected for our study. The white bars in
Figure 9 present the results yielded by the enhanced trigger,
and on average, ROB SER reduces 20% with only a 1.4%
power overhead. Note that the total chip dynamic power is
generally lower during the periods of L2 misses, even though
the triggered high vDD causes a larger power overhead, it
does not contribute to the increase of maximum power
overhead which is usually a concern in power domain.
5.4. Putting Them Together
thresholds
and
Figure 7 and 9 show that both the hybrid radiation
hardened IQ and the Dual- vDD based ROB exhibit strong
SER robustness while yielding a negligible perfonnance and
power overhead. We
two techniques
simultaneously and evaluate their aggregate effect on the
also apply the
entire processor core SER. The impact of the two proposed
techniques on the vulnerability of other primary structures,
such as register files, load store queue, DTLB and function
units, is also examined. Note that caches and memory are
excluded as they can be protected by ECC easily. The
normalized SER results (to the baseline case where no
optimization is applied) are shown in Figure 11. As can be
seen, on average, the core SER substantially decreases by
20% while other structures' SERs are slightly affected by our
techniques. Furthermore, the load store queue vulnerability is
also reduced by 150/0. We exclude a discussion of the
performance penalty and power overhead for the aggregated
technique as they have already been discussed in previous
sections.
• Core
Q Load Store Queue
DDTLB
o Register Files
11III Function Units
~ 0.9I 0.8
0.7
0.6
0.4
I
CPU1
+
+
+
CPU2 CPU3
1\,1)(1
l ~
1\,1)(2
1\,1)(3
'+
+
f1r'13V11
r~
l+
+
4
fvEM2 MEM3 AVG
Figure 11. The aggregate effect of the proposed two techniques
on core and other microarchitecture structures' SER
6. Related Work
Various methodologies have been proposed to model and
tolerate soft error at the architectural level. In [7], Li and
Adve estimated reliability using a probabilistic model of the
error generation and propagation process in a processor. In
[28], Fu et al. studied microarchitecture vulnerability phase
behavior. Sridharan et al. [29] examined the vulnerability
contribution of instructions that are in-flight during long-stall
instructions. [30] proposed to perform redundant execution
only during low ILP and L2 misses in order to achieve high
error coverage with low performance loss. In [31], SlicK was
introduced to avoid the redundancy on results predictable
instructions. Wang et al. [32] showed that soft errors produce
1-4244-2398-9/08/$20.00 ©2008 IEEE
145
DSN 2008: Fu et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:18:09 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-272008
observable symptoms, and used these to trigger roll back
execution. Walcott et al. [33] used a set of processor metrics
to predict structures' dynamic vulnerability behavior and
applied them to enable/disable Redundant Multithreading
(RMT) execution. [34] proposed dispatching stalls and PRT
to control the ROB vulnerability under a certain threshold at
the cycle level. Our techniques are orthogonal
to those
approaches since they improve the structures' soft-error
robustness and reduce the RMT/PRT trigger frequency and
the execution overhead correspondingly. Soft error tolerance
techniques also exist at the circuit level. [35] proposed a soft
error detection circuit based on abnormal switching currents.
Choudhury et al. [3] proposed the use of gate size and VDD as
design parameters to realize SER robustness circuit design.
[36] selectively resized the most vulnerable gates to improve
the combination logic circuit single-event upset robustness.
Our approach is unique in that we explore designs using
combined circuit and microarchitecture level SER robustness
techniques. [37] proposed Dual Interlocked Cell (DICE) in
radiation hardening design. However,
its area overhead
achieves as high as 100% which also results in significant
power overhead. Those disadvantages are difficult to absorb.
We apply rSRAM to build RIQ due to its negligible area
penalty and power overhead. Recall
that our design
successfully handles the write latency in rSRAM. As a result,
we overcome all the performance, area and power overhead
problems and achieve high structure reliability.
7. Conclusions
In this paper, we first proposed hybrid radiation hardened
IQ design, which dispatches performance critical but not(cid:173)
ready instructions into well-protected RIQ, and uses un(cid:173)
protected NIQ to only hold operand ready instructions. The
hybrid design takes the advantage of RIQ in SER robustness
to achieve the goal of not only protecting critical instructions
but also providing a time of issue guarantee. Results show the
technique achieves 80% IQ SER reduction with only 0.3%
throughput IPC and 1% harmonic IPC penalty. To improve
ROB reliability, we proposed the use of architectural
characteristics to trigger Dual- VDD , and switch the nominal
level when the ROB exhibits high
VDD
vulnerability during a L2 miss. This technique obtains 20%
ROB SER robustness with 1.4% power overhead. We also
put the two techniques together and evaluate their aggregate
affect on the entire core. On average, the core SER reduces
20%, and as a byproduct, LSQ achieves 15% SER reduction.
Acknowledgements
to a higher
2007-RJ-1651G,
This research is partially supported by NSF grant 0720476,
SRC grant
and Microsoft Research
Trustworthy Computing Award 14707. Jose Fortes is also
funded by the BellSouth Foundation.
References
[1] V. Stojanovic, R I. Bahar, J. Dworak, and R Weiss, A Cost-Effective
Implementation of an ECC-protected Instruction Queue for Out-of-Order
Microprocessors, DAC, 2006.
[2] C. Weaver, J. Emer, S. S. Mukherjee and S. K. Reinhardt, Techniques to Reduce
the Soft Error Rate of a High Performance Microprocessor, ISCA, 2004.
[3] M. Choudhury, Q. Zhou and K. Mohanram, Design Optimization for Single(cid:173)
Event Upset Robustness using Simultaneous dual-VDD and Sizing Techniques,
ICCAD,2006
[4] D.G. Mavis and P. H. Eaton, Soft Error Rate Mitigation Techniques for Modem
Microcircuits, In Proceedings of the International Reliability Physics Symposium,
2002.
[5] P. Roche, F. Jacquet, G. Gasiot, C. Caillat, B. Borot and J. P. Schoellkopf, High
Density SRAM robust to radiation-induced Soft Errors in 90nm CMOS Technology,
ICMTD, 2005.
[6] S. S. Mukherjee, C. Weaver, J. Emer, S. K. Reinhardt, and T. Austin, A
Systematic Methodology to Compute the Architectural Vulnerability Factors for a
High-Performance Microprocessor, MICRO, 2003.
[7] X. Li, S. V. Adve, P. Bose, and J.A. Rivers, SoftArch: An Architecture-Level
Tool for Modeling and Analyzing Soft Errors, DSN, 2005.
[8] N. J. Wang, J. Quek, T. M. Rafacz, and S. J. Patel, Characterizing the Effects of
Transient Faults on a High Performance Processor Pipeline, DSN, 2004.
[9] T. Austin, DIVA: A reliable substrate for deep submicron microarchiteeture
design, MCIRO, 1999.
[10] J. Smolens, J. Kim, J. Hoe and B. Falsafi, Efficient Resource Sharing in
Concurrent Error Detecting Supersalar Microarchiteetures, MICRO, 2004.
[11] J. Sharkey, D.V. Ponomarev, Efficient Instruction Schedulers for SMT
processors, HPCA, 2006.
[12] D. Tullsen and J. Brown, Handling Long-latency Loads in a Simultaneous
Multithreading Processor, MICRO, 2001.
[13] P. Hazucha and C. Svensson, Impact of CMOS Technology Scaling on the
Atmospheric Neutron Soft Error Rate, IEEE Transactions on Nuclear Science, 2000.
[14] P. Roche, F. Jacquet, C. Caillat, J. P. Schoellkopf, An Alpha Immune and Ultra
Low Neutron SER High Density SRAM, In Proceedings of the International
Reliability Physics Symposium, 2004.
[15] D. Marculescu, On the Use of Microarchitectural-Driven Dynamic Voltage
Scaling, In Proceedings ofthe Workshop on Complexity-Effective Design, 2000.
[16] X. Fu, T. Li, J. Fortes, ORBIT: Effective Instruction Queue Soft-error
Vulnerability Mitigation on Simultaneous Multithreaded Architectures using
Operand Readiness-based Instruction Dispatch, Tech. Report, U of Florida.
[17] S.T. Srinivasan, RD. Ju, A.R Lebeck, C. Wilkerson, Locality vs. Criticality,
In Proceedings ofISCA, 2001.
[18] H. Li, C. Cher, T.N. Vijaykumar, K. Roy, VSV: L2-Miss-Driven Variable
Supply-Voltage Scaling for Low Power, MICRO, 2003.
[19] K. Usami et aL, Design Methodology of Ultra Low-Power MPEG4 Codec
Core Exploiting Voltage Scaling Techniques, DAC, 1998.
[20] T. Burd, R Brodersen, Design Issues for Dynamic Voltage Scaling, ISLPED,
2000.
[21]W. Zhang, X. Fu, T. Li, J. Fortes, An Analysis of Microarchitecture
Vulnerability to Soft Errors on Simultaneous Multithreaded Architectures, ISPASS,
2007.
[22] J. Sharkey, M-Sim: A Flexible, Multi-threaded Simulation Environment, Tech.
Report CS-TR-05-DPl, Department of Computer Science, SUNY Binghamton,
2005.
[23] D. Brooks, et al., Wattch: A framework for Architectural-Level Power
Analysis and Optimizations, ISCA, 2000.
[24] D. Tullsen, S. Eggers, J. Emer, H. Levy, J. Lo and R Stamm, Exploiting
Choice:
Instruction Fetch and Issue on an Implementable Simultaneous
Multithreading Processor, ISCA, 1996.
[25] http://download.inteLcom/design/mobile/datashts/30922106.pdf
[26] T. Sherwood, E. Perelman, G. Hamerly and B. Calder, Automatically
Characterizing Large Scale Program Behavior, ASPLOS, 2002.
[27] K. Lou, J. Gummaraju and M. Franklin, Balancing Throughput and Fairness in
SMT processors, ISPASS, 2001.
[28] X. Fu, J. Poe, T. Li, J. Fortes, Characterizing Microarchiteeture Soft Error
Vulnerability Phase Behavior, MASCOTS, 2006.
[29] V. Sridharan, D. Kaeli and A. Biswas, Reliability in the Shadow of Long-Stall
Instructions, SELSE-3 Workshop, 2007.
[30] M.A. Gomaa, T.N. Vijaykumar, Opportunistic Transient-Fault Detection,
ISCA, 2005.
[31] A. Parashar, A. Sivasubramaniam, S. Curumurthi, SlicK: Slice-based Locality
Exploitation for Efficient Redundant Multithreading, ASPLOS, 2006.
[32] N. J. Wang, S. J. Patel, ReStore: Symptom Based Soft Error Detection in
Microprocessors, DSN, 2005.
[33] K. R. Walcott, G. Humphreys, S. Gurumurthi, Dynamic Prediction of
Architectural Vulnerability from Microarchitectural State, ISCA, 2007.
[34] N. Soundararajan, A Parashar, A. Sivasubramaniam, Mechanisms for
Bounding Vulnerabilities ofProcessor Structures, ISCA, 2007.
[35] P. Ndai, A. Agarwal, 0. Chen, K. Roy, A Soft Error Monitor Using Switching
Current Detection, ICCD, 2005.
[36] J. M. Cazeaux et ai, On Transistor Level gate Sizing for Increased Robustness
to Transient Faults, In Proceedings of International On-Line Testing Symposium,
2005.
[37] T. Calin, M. Nicolaidis, and R Velazco, Upset Hardened Memory Design for
Submicron CMOS Technology, IEEE Trans. NucL Sci., 1996.
1-4244-2398-9/08/$20.00 ©2008 IEEE
146
DSN 2008: Fu et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:18:09 UTC from IEEE Xplore.  Restrictions apply.