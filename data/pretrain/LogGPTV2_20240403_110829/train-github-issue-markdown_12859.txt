Consider the following example:
    const PairUnion = Union{Pair{Int,Int8},Pair{Int,UInt8}}
    array = PairUnion[1=>0x2]
    function pair1(a)
        x, y = a[1]
        x => y
    end
    function pair2(a)
        xy = a[1]
        x = xy.first
        y = xy.second
        x => y
    end
    function pair3(a)
        xy = a[1]
        x = first(xy)
        y = last(xy)
        x => y
    end
Then:
    julia> @btime pair1($array)
      73.935 ns (1 allocation: 32 bytes)
    1 => 0x02
    julia> @btime pair2($array)
      76.299 ns (1 allocation: 32 bytes)
    1 => 0x02
    julia> @btime pair3($array)
      5.051 ns (0 allocations: 0 bytes)
    1 => 0x02
When looking at `@code_warntype`, it looks like `x` and `y` are inferred to be
`Union{Int,Int8,UInt8}` for `pair1` and `pair2`, while in `pair3` they are
inferred as `Int` and `Union{Int8,UInt8}` as expected.