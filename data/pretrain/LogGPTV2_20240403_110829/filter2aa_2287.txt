# Gadget Security: An In-Depth Analysis

## Legal Notice
The opinions expressed in this presentation are our own and do not represent the views of our employers.

## Presenters
- **Toby**
- **Mickey**

## Agenda
1. **Introduction**
   - Who we are
2. **Understanding Gadgets**
   - Definition
   - A Brief History
   - Why This Matters
   - How to Develop Gadgets
   - Gadget Security Model
3. **What's Wrong with Gadgets?**
   - Attack Surface
   - Problems Found
4. **Demos**
5. **Mitigation Strategies**
6. **Acknowledgments**
7. **References**

## Introduction
- **Who We Are:**
  - Toby and Mickey, security researchers focused on identifying and mitigating vulnerabilities in software applications.

## Understanding Gadgets
### What are Gadgets?
- **Definition:**
  - Small applications that run on the Windows desktop.
  - Examples include weather widgets, news feeds, and system monitors.

### A Brief History
- **Windows XP:**
  - Introduced "Active Desktop," allowing dynamic content on the desktop.
- **Windows Vista:**
  - Introduced the Sidebar, which hosted gadgets but restricted their placement.
- **Windows 7:**
  - Significant improvements:
    - Gadgets can be placed anywhere on the desktop.
    - All gadgets run in a single process.
    - Enhanced enterprise security features.
    - New development tools and resources.

### Why This Still Matters
- **Decline in Gadget Use:**
  - Although gadget use is declining, the concept of container-based apps (e.g., for smartphones) is gaining popularity.
  - These apps often use similar technologies like HTML, XML, and JavaScript.

### How to Develop Gadgets
- **Basic Structure:**
  - Just a zip file containing:
    - HTML
    - CSS
    - JavaScript
    - Gadget-specific manifest file
  - Can also be developed using WPF or Silverlight.

### Gadget Security Model
- **Microsoft's Explanation:**
  - Detailed documentation available (see references).
- **Code Signing:**
  - Possible but not required.
- **Installation Prompt:**
  - Similar to standard applications.
- **Security Zone:**
  - Runs in the "Local Machine Zone" with some restrictions:
    - Can instantiate any installed ActiveX object.
    - Runs as a standard user, even if the user is an administrator.
    - Cannot raise UAC prompts, but launched applications can.
    - Parental controls apply.
- **Enterprise Controls:**
  - Turn off Windows Sidebar.
  - Disable unpacking and installation of unsigned gadgets.
  - Turn off user-installed gadgets.
  - Override the "Get more gadgets online" link.

## What's Wrong with Gadgets?
### Attack Surface
- **Attacking with Gadgets:**
  - **Delivery:**
    - Users often install gadgets without considering the security risks.
  - **Capabilities:**
    - Execute arbitrary code.
    - Open URLs.
    - Create and read files.
    - Make the computer speak.
- **Demo:**
  - Demonstration of a malicious gadget.

### Attacking Gadgets
- **Vulnerabilities:**
  - Gadgets are code and thus vulnerable to attacks.
  - **Steps:**
    1. Search for gadgets.
    2. Analyze the code.
    3. Exploit vulnerabilities.
    4. Share findings.
- **Common Issues:**
  - Malware posing as gadgets.
  - Minimal use of SSL.
  - Frequent connections to ad servers and domain parking sites.
  - Shared code among multiple gadgets, making it easy to find common vulnerabilities.
- **Poor Security Practices:**
  - Multiple ways to inject code.
  - Default permissions set to "full."
- **Traffic Sniffing:**
  - Most gadgets download content without SSL.
  - Capturing and injecting traffic is relatively simple.
- **Man-in-the-Middle (MitM) Attacks:**
  - Using a custom proxy to automate injection.
  - Demonstration of a MitM attack.
- **Code Injection:**
  - Any web scripting language or PowerShell can be used.
  - Demonstration of code injection.

## Mitigation Strategies
- **General Advice:**
  - Treat all code, including gadgets, with caution.
  - Follow best practices for secure coding.
- **Microsoft's Solution:**
  - **Security Advisory 2719662:**
    - Addresses vulnerabilities in insecure gadgets affecting the Windows Sidebar.
  - **Fix It Solution:**
    - Engineering solution to remove the attack vector.
  - **Future Direction:**
    - Moving away from the Windows Sidebar towards the Windows Store.
    - Deprecation of the Windows Gadget Gallery.
    - Updated developer documentation.

## Acknowledgments
- **Contributors:**
  - Itzik Kotler, FX, Ian Amit, Jayson Street, SophSec, Wim Remes, Aviv Raff, Gal Diskin

## References
- **Gadget Security Model:**
  - [MSDN Documentation](http://msdn.microsoft.com/en-us/library/ff486358.aspx)
- **Writing Secure Gadgets:**
  - [MSDN Documentation](http://msdn.microsoft.com/en-us/library/bb498012.aspx)

Thank you for your attention!