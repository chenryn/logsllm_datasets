# 优化后的文本

## 成本分析：不同IBE/IBS方案中的撤销成本

图5展示了在不同的基于身份的加密（IBE）和基于身份的签名（IBS）方案中，撤销操作的成本。这些成本以群G中的椭圆曲线点乘法来衡量。

(a) 每个被撤销用户的乘法运算次数
(b) 每个被撤销权限的乘法运算次数

### 云存储中的文件访问控制

在这种场景下，文件可以加密后存储在云服务器上，而文件加密密钥和访问控制策略则由运行在SGX飞地内的进程管理。用户需要通过一个认证通道（例如，使用公钥密码学）与这个可信进程/参考监视器协商。参考监视器可以检查用户的访问权限，并使用只有SGX飞地内进程才知道的会话密钥将加密文件及其关联密钥传输给用户。这种方法使组织免去了运行自己的加密/解密代理的开销，但也有其局限性。例如，此方法不适用于常见的仅用于存储的服务（如Dropbox）。此外，这种方法可能会受到架构妥协或缺陷的影响（例如，内存完整性漏洞），而纯密码学解决方案则不会。

虽然我们考虑的威胁模型的这些和其他修改可以减少密码学开销，但每种方法都会带来其他成本或权衡。我们现在考虑未来的研究方向，这些方向可能降低与外包动态访问控制相关的密码学解决方案的成本。

### 未来研究方向

我们的实验和分析揭示了几个有趣的研究方向：

- **撤销**：目前尚不清楚如何使用IBE在不产生高昂的撤销状态变化成本的情况下强制执行RBAC0。由于我们出于效率原因使用混合密码学，现有的撤销或代理重加密方案（例如[8]、[32]）无法解决这个问题。开发更好的技术以促进这种形式的撤销并高效使用混合加密是一个重要的未来工作领域。
  
- **最小化信任**：我们的构建利用了一个云端的参考监视器来验证签名，然后再进行文件替换或元数据更新。转向基于可信时间戳或区块链的文件版本控制，而不是文件替换，可能会减少对参考监视器的信任，但代价是潜在的机密性损失，因为旧的密钥材料可能仍然可被前角色成员访问。更好地探索参考监视器信任与机密性保证之间的权衡非常重要。
  
- **“包装”最小化**：我们的构建要求管理和使用三种类型的元数据结构，以便正确地使用IBE或PKI技术实现RBAC0。值得探讨的是，支持外包访问控制的核心密码学是否可以增强以减少维护这些结构所需的受信任管理代码的使用。
  
- **部署/可用性成本**：我们没有考虑与我们构建所依赖的密码工具的使用相关的问题。此外，我们的模拟并没有根据RBAC0实现的复杂性来区分基于IBE和PKI的构建。然而，支持PKI使用的工具的成熟度或IBE技术的概念简单性可能会使天平偏向一方或另一方。开发合理的方法来考虑这些类型的权衡将极大地为未来的分析提供信息。

尽管本文重点讨论了使用IBE/IBS和PKI方案来强制执行RBAC0访问控制，但我们的发现可以很容易地扩展到使用其他密码工具（例如HIBE或ABE/ABS）来实现更复杂的访问控制策略（例如RBAC1或ABAC）。接下来，我们将讨论在考虑这些更丰富的访问控制模型时学到的一些经验教训。

### 更具表达力系统的经验教训

RBAC0和IBE是我们最初探索使用密码学实现动态访问控制成本的自然选择：RBAC0是一种简单但广泛使用的访问控制系统；RBAC0中的角色与IBE中的身份有自然对应关系；使用混合加密允许我们轻松共享资源。此外，似乎可以通过类似的方式利用HIBE来探索RBAC1中的层次角色。然而，我们在使用IBE实现RBAC0时看到的许多成本，在任何合理的RBAC1或ABAC实现中都有类似的（甚至更糟）问题。

我们首先注意到，我们认为任何合理的密码学访问控制系统都必须使用混合加密。没有混合加密，我们需要不断对要加密的小“块”应用昂贵的非对称操作。鉴于IBE/ABE加密操作的复杂性，这种方法的开销对于中等大小的文件来说也是不可接受的。此外，根据应用程序的安全需求（例如，选择密文攻击安全性），即使比这种简单的分块更复杂的构造也将是必需的。以下观察可能不适用于所有文件都很小以至于不需要混合加密的访问控制系统。然而，这种方案的用例似乎有限。

一个看似自然的从基于IBE的RBAC0方案扩展到基于HIBE的RBAC1方案的方法是利用HIBE编码层次关系的能力，这些关系存在于RBAC1角色层次结构中。然而，这种实现的成本被证明是相当高的。一个主要问题是RBAC1角色层次结构可以是任意的DAG结构，而HIBE只支持树结构。即使将RBAC1限制为形成树结构的角色层次结构，也伴随着严重的成本。例如，删除非叶子角色会导致重新加密所有后代叶子节点的文件，为每个后代节点创建新角色，并进行相应的重新密钥。同样，实际操作如移动访问结构中的子树只能通过分解成添加和删除角色的操作来实现，这带来了这些基本操作的相关成本。我们注意到我们已经开发了一个完整的基于HIBE的RBAC1实现，试图最小化成本。不幸的是，对该实现的简单检查表明，它将比本文讨论的RBAC0方案产生显著更多的计算开销。

类似地，人们可能希望ABE加密方案的表达能力能够让我们自然地实现ABAC访问控制方案。此外，已经有了一些初步的工作[58]支持动态（限制性）凭证和撤销。然而，使ABAC的实际ABE实现仍然有大量的工作要做，这样的方案仍然会有显著的成本和元数据需要管理（就像我们的IBE/RBAC0实现一样）。例如，在KP-ABE/ABAC设置中撤销秘密密钥需要动态重新加密满足已撤销用户密钥策略的所有密文。每个密文中被重新加密的属性都需要一个新的版本，然后最终所有受影响的用户必须重新颁发密钥。此外，ABAC设计决策必须由所实施的ABE方案决定。例如，假设单个文件要由CP-ABE方案中的多个策略访问。可以通过单独的公钥加密支持多个策略p1, ..., pn，所有加密相同的混合密钥，或者作为单个加密支持所有先前策略的析取p1 ∨ p2 ∨ ... ∨ pn。成本权衡完全取决于用于实现的ABE方案，因为ABE加密的成本高度依赖于密文中编码的策略。

### 结论

先进的密码学技术（例如IBE和ABE）是很有前途的方法，可以在云中强制执行丰富的访问控制。尽管以前的工作主要集中在这些方法可以表示的策略类型上，但很少关注这些策略如何随时间演变。在本文中，我们超越了密码学表示云托管数据访问控制系统中的点状态，研究了密码学强制动态（基于角色的）访问控制的构建。我们提供了证据，表明鉴于当前的技术水平，在涉及政策动态性的最小情况下，密码学强制访问控制很可能会带来禁止性的成本。此外，当强制执行更丰富的策略（例如RBAC1或ABAC）、需要更严格的安全保证（例如在线而非延迟重加密）或假设更宽松的威胁模型时，这些成本似乎会被放大。

为了进行我们的分析，我们开发了基于IBE和PKI的构建，使用混合密码学在第三方云存储提供商托管的文件上强制执行动态RBAC0访问控制。除了证明我们构建的正确性外，我们还使用真实的RBAC数据集实验性地分析了相关的密码学成本。我们的发现表明，IBE和ABE在用户、角色和权限单调增加的情况下非常适合这个问题，但在支持更新和撤销时会产生非常高的开销——例如，有时需要数千次加密操作来支持单次撤销。通过这种方式，我们确定了许多未来工作的有益领域，这些领域可能导致更自然的构建，以在云环境中密码学强制访问控制策略。

### 致谢

我们要感谢Úlfar Erlingsson对我们论文的指导和支持。这项工作部分得到了美国国家科学基金会的资助，项目编号CNS–1111149、CNS–1228697和CNS–1253204。

### 参考文献

[此处省略具体参考文献列表]

---

通过上述优化，文本变得更加清晰、连贯和专业。希望这些改进对你有所帮助！