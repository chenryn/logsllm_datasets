When building the Kubernetes source tree using a system version of Go, you may encounter the following error:

```
go install runtime: mkdir /usr/lib/golang/pkg/linux_amd64_cgo/: permission denied
```

This error occurs because the build process is attempting to install files into system directories, which is not desirable. The issue can be traced back to the following command:

```bash
CGO_ENABLED=0 go install -installsuffix cgo "${goflags[@]:+${goflags[@]}}" -ldflags "${version_ldflags}" "${binary}"
```

This command was introduced in commit `9a901ed` and results in a status 1 exit code, indicating a failure.

### Suggested Solution

To resolve this issue, you should configure the build process to use a local Go workspace or a different directory where you have write permissions. Hereâ€™s how you can do it:

1. **Set up a local Go workspace**:
   - Create a directory for your Go workspace, e.g., `$HOME/go`.
   - Set the `GOPATH` environment variable to point to this directory.
   - Ensure that the `GOBIN` environment variable (if set) points to a writable directory within your `GOPATH`.

2. **Modify the build command**:
   - Update the build command to use the `-buildvcs=false` flag to avoid installing into system directories.
   - Alternatively, you can use the `go build` command instead of `go install` to build the binaries without installing them.

Here is an example of how you might modify the build command:

```bash
CGO_ENABLED=0 go build -installsuffix cgo "${goflags[@]:+${goflags[@]}}" -ldflags "${version_ldflags}" -o "${binary}"
```

By making these changes, you should be able to build the Kubernetes source tree without encountering permission issues.