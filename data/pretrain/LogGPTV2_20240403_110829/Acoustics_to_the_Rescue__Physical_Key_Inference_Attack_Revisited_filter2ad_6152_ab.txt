### Section 5.4: Pattern Comparison
The **Pattern Comparison** module is responsible for comparing the synthesized click pattern with the simulated patterns of the reduced key space from the **Video Analysis** module (Section 5.5). The goal is to output a rank list of keys, where a higher-ranked key is more likely to be the victim's key.

#### Key Components:
1. **Synthesized Pattern**: This is the refined click pattern extracted from multiple key insertion recordings.
2. **Simulated Patterns**: These are the patterns generated for each key in the reduced key space.

#### Process:
1. **Cluster-wise Comparison**: The module compares each cluster (Clusters 3, 4, and 5) separately. This is because clicks within a cluster exhibit lower speed variations compared to clicks across the entire insertion, making them more similar to the simulated patterns, which are modeled based on constant insertion speed (Figure 7).
2. **Error Functions**: To address variability in speed and occasional click misses within clusters, the module computes two error functions:
   - **epattern**: Quantifies the dissimilarity between the simulated patterns and the synthesized pattern using range-ratio error (similar to Figure 9).
   - **eclick**: Assigns an error value for missing clicks, calculated as the largest click-interval adjacent to the potentially missed click(s).

#### Aggregation:
- After computing epattern and eclick for all clusters of keys in the reduced key space, the module sums up these errors across the clusters.
- The keys are then ranked from lowest to highest error to produce the final rank list.

### Section 5.2: Click and Cluster Detection
The **Click and Cluster Detection** module consists of three sub-modules:

1. **Click Detection**:
   - **Input**: Audio recordings of n key insertions.
   - **Process**: Determines the timing information of all 15 clicks for each insertion, which is the maximum number of clicks in a 5-pin lock.
   - **Method**: Transforms the audio signal into a weighted spectral flux representation to detect click onsets as amplitude peaks. The weighted spectral flux captures energy increases by comparing energies of adjacent time windows.
   - **Output**: Detected click timestamps.

2. **Cluster Detection**:
   - **Input**: All 15 click onsets.
   - **Process**: Identifies five clusters for each insertion by leveraging the observation that there are relatively long pauses between clusters, resulting in longer time intervals between adjacent clicks.
   - **Output**: Five clusters for each insertion.

3. **Refining Click Detection**:
   - **Input**: Clusters from the previous step.
   - **Process**: Refines the click detection within each cluster to address inaccuracies due to closely spaced or low-energy clicks, and noise.
   - **Method**: Uses the upper bound on the number of clicks for each cluster to prevent more than p clicks being chosen within Cluster p.
   - **Output**: Refined click detection results.

### Section 5.3: Synthesized Click Pattern Extraction
The **Synthesized Click Pattern Extraction** module aims to extract a representative click pattern by fusing information across multiple insertions. This helps mitigate errors due to noise.

#### Key Components:
1. **Input**: n trials (insertions).
2. **Process**:
   - **Trial Selection**: Chooses one representative trial per cluster to construct the final synthesized pattern.
   - **Error Computation**: Computes pairwise errors between retained trials to select the most representative trial-cluster pair.
   - **Range-Ratio Error (erange)**: Compares click interval patterns between any two trials, ensuring consistency regardless of different insertion speeds.
3. **Output**: A synthesized pattern that most likely resembles an insertion with minimal noise.

### Section 5.5: Video Analysis
The **Video Analysis** module combines information from video footages to further reduce the key search space.

#### Key Components:
1. **Image-Based Key Inference**: Re-implements and extends Sneakey [35] to work with video footages capturing blurry key images.
2. **Keypoint Normalization**: Uses only four keypoints (three on the keyâ€™s blade and one on the tip) to account for realistic attack scenarios.
3. **Bitting Identification**: Identifies the five bitting locations and depths on the normalized image.
4. **Blur Detection**: Selects the top three frames with the least blurriness from the video recording using a variance of Laplacian operator.
5. **Output**: A reduced key search space to be input to the **Pattern Comparison** module.

### Evaluation (Section 6)
#### Experimental Setup
- **Apparatus**: Custom door setup with Schlage SC1 5-pin lock, using three types of microphones (Miccond, Micparab, Micphone) and a studio monitor speaker for accurate noise reproduction.
- **Key Space**: 59,207 vulnerable keys (79% of the original key space).
- **Evaluation Scenarios**: Varies the position of the microphones and evaluates different attack scenarios.

#### Results
- **Rank List Accuracy**: Compares the effectiveness of using video-only and video-audio combined approaches.
- **Mean Rank**: Provides the mean rank of the correct key in the rank list.

This structured and detailed approach ensures clarity, coherence, and professionalism in the presentation of the system's design and evaluation.