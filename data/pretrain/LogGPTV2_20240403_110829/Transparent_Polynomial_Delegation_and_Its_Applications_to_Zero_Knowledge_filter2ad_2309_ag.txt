### Polynomial Evaluation and Secret Sharing

A similar mechanism to polynomial evaluation is utilized in mobile secret sharing [61] for party changes. Most existing schemes, such as the one proposed by Kate et al. [50], rely on a Verifiable Polynomial Delegation (VPD) scheme. This VPD scheme requires a trusted setup phase to generate a structured reference string (SRS). The use of modular exponentiation in these schemes results in high computational overhead for generating proofs. For instance, Maram et al. [56] introduced a mobile and proactive secret sharing scheme on blockchain. Their scheme, which uses pairing-based VPD, necessitates that the SRS be generated by a trusted party, posted on the blockchain, and the trapdoor destroyed after the setup. As illustrated in [56, Figure 5], each party in a committee of 1000 parties takes approximately 185 seconds to generate proofs for polynomial evaluations, which is a significant bottleneck.

Our new VPD scheme, as detailed in Protocol 2, eliminates the need for a trusted setup phase while maintaining succinct proof size and verification time. Additionally, it significantly reduces proof generation time. According to Figure 1, it will take around 11 seconds to generate proofs for 1000 parties. Although the proof size will increase, the overall throughput will improve by at least an order of magnitude, assuming reasonable bandwidth between parties, as the proofs are sent offline.

### Privacy on Blockchain

Zero-knowledge proofs (ZKPs) are widely used in blockchain systems to provide privacy for cryptocurrencies (e.g., Zcash [11]), smart contracts (e.g., Hawk [52]), and zero-knowledge contingent payments [29]. The most commonly deployed ZKP scheme, SNARK [16], requires a trusted setup phase, which is often impractical in decentralized settings. To address this, multiple parties typically engage in an expensive "ceremony" to generate the SRS [13].

Recent efforts have focused on using transparent ZKP schemes. For example, BÃ¼nz et al. [25] proposed Zether, which employs a variant of Bulletproofs [28] to hide account balances and ensure confidentiality in applications like auctions. However, the high prover and verification times of Bulletproofs for general computations make full anonymity impractical.

As shown in Section V-C, among all transparent ZKP schemes, Virgo achieves the best prover time and one of the best verification times, which are crucial for blockchain applications. Compared to existing GKR-based ZKP schemes, Virgo removes the trusted setup required by Libra [70] and improves the verification time of both Libra and Hyrax [69] by 1-2 orders of magnitude. These improvements make Virgo a suitable candidate for building privacy-preserving cryptocurrencies and smart contracts without a trusted setup. The overhead in proof size is comparable to schemes based on Interactive Oracle Proofs (IOPs), which is acceptable in scenarios such as permissioned blockchains and can potentially be reduced through proof composition [17].

### Large-Scale Zero-Knowledge Proof Applications

Beyond blockchain, there are many other applications of ZKPs that require proving large statements. For instance, the Defense Advanced Research Projects Agency (DARPA) recently aimed to use ZKPs to prove the behavior of complex programs without leaking sensitive information [1]. Such applications demand ZKP schemes that can scale to circuits with billions of gates. The main obstacles in existing ZKP schemes are the high computational and memory overheads on the prover.

In our new scheme, we completely eliminate the operations of modular exponentiation in Hyrax [69] and Libra [70], which were the primary bottlenecks for prover time and memory usage. Our implementation, Virgo, is based solely on symmetric-key operations, which are both fast and memory-efficient. Experimental results show that Virgo is promising for scaling to large circuits and enabling applications such as proving program behavior on secret data or states.

### Acknowledgments

This work was supported in part by the National Science Foundation (NSF) under Grant No. TWC-1518899, DARPA under Grant No. N66001-15-C-4066, and the Center for Long-Term Cybersecurity (CLTC). Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of NSF, DARPA, or CLTC.

### References

[References listed here as per the original document]

---

This revised version aims to enhance clarity, coherence, and professionalism, making the text more accessible and easier to understand.