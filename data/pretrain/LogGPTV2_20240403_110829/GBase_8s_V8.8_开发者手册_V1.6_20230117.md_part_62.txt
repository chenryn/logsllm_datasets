控制组）的
是 class1 的第一
GID。
个 Workload 组，
层级为 2，每个 WDLevel：
Class组最多10层 代 表 当 前
Workload Workload
Cgroup。） Cgroup 在
对 应 的
Class 组 所
在的层次。
724 Timeshare Low - Rate：代表
控制组 Timeshare
725 Medium -
中的分配比
例，Low最
726 High -
少 为 1 ，
Rush 最 高
727 Rush -
为 8。这四
个
Timeshare
组的资源配
比 为
Rush:High:
Medium:Lo
w=8:4:2:1
南大通用数据技术股份有限公司
432
GBase 8s V8.8开发者手册
(2) 查看操作系统中树形结构的控制组信息。
执行如下命令可以查询控制组树形结构信息。
gs_cgroup-P
返回信息如下，其中shares代表操作系统中CPU资源的动态资源配额“cpu.shares”的数
值，cpus代表操作系统中CPUSET资源的动态资源限额“cpuset.cpus”的数值，指的是该控制
组能够使用的核数范围。
MountInformation:
cpu:/dev/cgroup/cpu
blkio:/dev/cgroup/blkio
cpuset:/dev/cgroup/cpuset
cpuacct:/dev/cgroup/cpuacct
GroupTreeInformation:
-Gaussdb:wangrui(shares:5120,cpus:0-20,weight:1000)
-Backend(shares:4096,cpus:0-20,weight:400)
-Vacuum(shares:2048,cpus:0-20,weight:200)
-DefaultBackend(shares:8192,cpus:0-20,weight:800)
-Class(shares:6144,cpus:0-20,weight:600)
-class1(shares:4096,cpus:0-20,weight:400)
-RemainWD:1(shares:1000,cpus:0-20,weight:100)
-RemainWD:2(shares:7000,cpus:0-20,weight:700)
-Timeshare(shares:1024,cpus:0-20,weight:
500)
-Rush(shares:8192,cpus:0-20,
weight:800)
-High(shares:4096,cpus:0-20,
weight:400)
-Medium(shares:2048,cpus:0-20,
weight:200)
-Low(shares:1024,cpus:0-20,
weight:100)
-grp1:2(shares:3000,cpus:0-5,weight:300)
-TopWD:1(shares:9000,cpus:0-20,weight:900)
-DefaultClass(shares:2048,cpus:0-20,weight:200)
-RemainWD:1(shares:1000,cpus:0-20,weight:100)
-Timeshare(shares:1024,cpus:0-20,weight:500)
-Rush(shares:8192,cpus:0-20,weight:800)
-High(shares:4096,cpus:0-20,weight:400)
南大通用数据技术股份有限公司
433
GBase 8s V8.8开发者手册
-Medium(shares:2048,cpus:0-20,weight:
200)
-Low(shares:1024,cpus:0-20,weight:100)
-TopWD:1(shares:9000,cpus:0-20,weight:900)
(3) 通过系统视图获取控制组配置信息。
a.使用gsql连接数据库。
b.获取系统中所有控制组的配置信息。
gsql=#SELECT*FROMgs_all_control_group_info;
12.2.4 创建资源池
背景信息
GBase8s支持通过创建资源池对主机资源进行划分。开启资源负载管理之后，仅使用默
认资源池并不能满足业务对资源负载管理的诉求，必须根据需要创建新的资源池，对系统资
源进行重分配，来满足实际业务对系统资源精细管理的需要。普通资源池的特点见表12-3。
表 12-3 普通资源池的特点
资源池分类 特点
普通资源池（普通场景）  关联Workload控制组。且必须没有组资源池关联该控制
组对应的子 class。即如果创建业务资源池关联控制组
‘class1:wd’，那么必须没有组资源池关联‘class1’。
 mem_percent默认为0%，没有mem_percent相加小于100%
的限制。
在开启了资源负载管理功能之后，系统会自动创建default_pool，当一个会话或者用户
没有指定关联的资源池时，都会被默认关联到 default_pool。default_pool 默认绑定
DefaultClass:Medium控制组，并且不限制所关联的业务的并发数。default_pool的详细属性
如表12-4所示。
表 12-4default_pool属性
属性 属性值 说明
respool_name default_pool 资源池名称。
mem_percent 100 最大占用内存百分比。
南大通用数据技术股份有限公司
434
GBase 8s V8.8开发者手册
cpu_affinity -1 CPU亲和性，保留参数。
control_group DefaultClass:Medium 资源池关联的控制组。
active_statements -1 资源池允许的最大并发数。-1为不限制并发
数量。
max_dop 1 开启SMP后，算子执行的并发度，保留参数。
memory_limit 8GB 内存使用上限，保留参数。
parentid 0 父资源池OID。
io_limits 0 每秒触发IO的次数上限。行存单位是万次/s，
列存是次/s。0表示不控制。
io_priority None IO利用率高达90%时，重消耗IO作业进行
IO 资源管控时关联的优先级等级。None表
示不控制。
nodegroup installation 资源池所在的逻辑集群的名称。
is_foreign f 资源池不用于逻辑集群之外的用户。
GBase8s不允许对default_pool参数进行修改。
前提条件
已熟悉CREATERESOURCEPOOL、ALTERRESOURCEPOOL和DROPRESOURCE
POOL语法的使用。
操作过程
 创建资源池
(1) 使用gsql连接数据库。
(2) 创建组资源池关联到指定的子Class控制组。例如下面：名称为“resource_pool_a”的组
资源池关联到了“class_a”控制组。
gsql=#CREATERESOURCEPOOLresource_pool_aWITH(control_group='class_a');
gsql=#CREATERESOURCEPOOLresource_pool_bWITH(control_group='class_b');
CREATERESOURCEPOOL
(3) 创建业务资源池关联到指定的Workload控制组。例如下面：名称为“resource_pool_a1”
的业务资源池关联到了“workload_a1”控制组。
南大通用数据技术股份有限公司
435
GBase 8s V8.8开发者手册
gsql=#CREATERESOURCEPOOLresource_pool_a1WITH
(control_group='class_a:workload_a1');
gsql=#CREATERESOURCEPOOLresource_pool_a2WITH
(control_group='class_a:workload_a2');
gsql=#CREATERESOURCEPOOLresource_pool_b1WITH
(control_group='class_b:workload_b1');
gsql=#CREATERESOURCEPOOLresource_pool_b2WITH
(control_group='class_b:workload_b2');
CREATERESOURCEPOOL
如果在创建资源池的时候不指定所关联的控制组，则该资源池会被关联到默认控制组
（DefaultClass控制组下的“Medium”Timeshare控制组）。
control_group取值区分大小写，指定时要使用单引号。
若数据库用户指定Timeshare控制组代表的字符串，即“Rush”、“High”、“Medium”或“Low”
其中一种，如control_group的字符串为“High”，代表资源池指定到DefaultClass控制组下的
“High”Timeshare控制组。
control_group可以指定用户创建Workload控制组，即'class1:wd'，也可以带有控制组的
级别，例如：'class1:wd:2'，这个级别范围一定要在1-10的范围内，但这个级别将不做任何
区分作用。在旧版本中，允许创建同名Workload控制组，以级别进行区分。但新版本升级
后，不允许创建同名控制组，用户如在旧版本中已创建同名Workload控制组，使用过程中
其级别将不进行区分，由此可能造成的控制组不明确使用的问题，需要用户自行把旧的同名
控制组删除以明确控制组使用。
 管理资源池
修改资源池的属性。例如下面：修改资源池“resource_pool_a2”关联的控制组为
“class_a:workload_a1”（假设class_a:workload_a1未被其他资源池关联）。
gsql=#ALTERRESOURCEPOOLresource_pool_a2WITH
(control_group="class_a:workload_a1");
ALTERRESOURCEPOOL
 删除资源池
删除资源池。例如下面删除资源池“resource_pool_a2”。
gsql=#DROPRESOURCEPOOLresource_pool_a2;
DROPRESOURCEPOOL
南大通用数据技术股份有限公司
436
GBase 8s V8.8开发者手册
 如果某个角色已关联到该资源池，无法删除。
 多租户场景下，如果删除组资源池，其业务资源池都将被删除。只有不关
联用户时，资源池才能被删除。
查看资源池的信息
 不允许使用INSERT、UPDATE、DELETE、TRUNCATE操作资源负载管
理的系统表pg_resource_pool。
 不允许修改资源池的memory_limit和cpu_affinity属性。
 查看当前集群中所有的资源池信息。
gsql=#SELECT*FROMPG_RESOURCE_POOL;
​ respool_name |mem_percent|cpu_affinity| control_group |active_statements
|max_dop|memory_limit|parentid|io_limits|io_priority| nodegroup |is_foreign |
max_worker
------------------+-------------+--------------+---------------------+-------------------+---------+-----------
---+----------+-----------+--------------+--------------+------------
​ default_pool | 100| -1|DefaultClass:Medium| -1|
1|8GB | 0| 0|None |installation|f |
​ resource_pool_a | 20| -1|class_a | 10|
1|8GB | 0| 0|None |installation|f |
​ resource_pool_b | 20| -1|class_b | 10|
1|8GB | 0| 0|None |installation|f |
​ resource_pool_a1| 20| -1|class_a:workload_a1| 10|
1|8GB | 16970| 0|None |installation|f |
​ resource_pool_a2| 20| -1|class_a:workload_a2| 10|
1|8GB | 16970| 0|None |installation|f |
​ resource_pool_b1| 20| -1|class_b:workload_b1| 10|
1|8GB | 16971| 0|None |installation|f |
​ resource_pool_b2| 20| -1|class_b:workload_b2| 10|
1|8GB | 16971| 0|None |installation|f |
(7rows)
 查看某个资源池关联的控制组信息，具体内容可以参考统计信息函数章节的
gs_control_group_info(pooltext)函数。
如下命令中“resource_pool_a1”为资源池名称。
南大通用数据技术股份有限公司
437
GBase 8s V8.8开发者手册
gsql=#SELECT*FROMgs_control_group_info('resource_pool_a1');
​ name | class | workload |type |gid|shares|limits|rate|
cpucores
---------------------+---------+-------------+-------+-----+--------+--------+------+----------
​ class_a:workload_a1|class_a|workload_a1|DEFWD| 87| 30| 0| 0|0-3
(1row)
表 12-5gs_control_group_info属性
属性 属性值 说明
name class_a:workload_a1 class和workload名称
class class_a Class控制组名称
workload workload_a1 Workload控制组名称
type DEFWD 控制组类型（Top、CLASS、BAKWD、
DEFWD、TSWD）
gid 87 控制组id
shares 30 占父节点CPU资源的百分比
limits 0 占父节点CPU核数的百分比
rate 0 Timeshare中的分配比例
cpucores 0-3 CPU核心数
13 内存表特性
13.1MOT 介绍
本章介绍了GBase8s内存优化表（Memory-OptimizedTable，MOT）的特性及价值、关
键技术、应用场景、性能基准和竞争优势。
13.1.1 MOT 简介
GBase8s提供的MOT存储引擎是一种事务性行存储，针对多核和大内存服务器进行了
优化。MOT为事务性工作负载提供更高的性能。MOT完全支持ACID特性，并包括严格的
持久性和高可用性支持。企业可以在关键任务、性能敏感的在线事务处理（OLTP）中使用
南大通用数据技术股份有限公司
438
GBase 8s V8.8开发者手册
MOT，以实现高性能、高吞吐、可预测低延迟以及多核服务器的高利用率。MOT尤其适合
在多路和多核处理器的现代服务器上运行。
图 13-1GBase8s内存优化存储引擎
如图13-1 所示，GBase8s数据库内存优化存储引擎组件（绿色部分）负责管理MOT
和事务。
MOT与基于磁盘的普通表并排创建。MOT的有效设计实现了几乎完全的SQL覆盖，
并且支持完整的数据库功能集，如存储过程和自定义函数（限制参见MOTSQL覆盖和限制）。
通过完全存储在内存中的数据和索引、非统一内存访问感知（NUMA-aware）设计、消
除锁和锁存争用的算法以及查询原生编译，MOT可提供更快的数据访问和更高效的事务执
行。
MOT有效的几乎无锁的设计和高度调优的实现，使其在多核服务器上实现了卓越的近
线性吞吐量扩展，这可能是业界最好的。
MOT完全支持ACID特性：
 原子性（Atomicity）：原子事务是一系列不可分割的数据库操作。在事务完成（分别提
交或中止）之后，这些操作要么全部发生，要么全部不发生。
 一致性（Consistency）：事务结束后，数据库处于一致状态，保留数据完整性。
 隔离性（Isolation）：事务之间不能相互干扰。MOT支持不同的重复读和读提交隔离级
南大通用数据技术股份有限公司
439
GBase 8s V8.8开发者手册
别。在下一个版本中，MOT还将支持可序列化隔离。更多信息，请参见MOT隔离级
别。
 持久性（Durability）：即使发生崩溃和失败，成功完成（提交）的事务效果持久保存。
MOT完全集成了GBase8s的基于WAL的日志记录。同时支持同步和异步日志记录选
项。MOT还支持同步+面向NUMA优化的组提交。详见MOT持久性概念。
13.1.2 MOT 特性及价值
MOT在高性能（查询和事务延迟）、高可扩展性（吞吐量和并发量）以及高资源利用
率（某些程度上节约成本）方面拥有显著优势。
 低延迟（LowLatency）：提供快速的查询和事务响应时间。
 高吞吐量（HighThroughput）：支持峰值和持续高用户并发。
 高资源利用率（HighResourceUtilization）：充分利用硬件。
此外，高负载和高争用的场景是所有领先的行业数据库都会遇到的公认问题，而MOT
能够在这种情况下极高地利用服务器资源。使用MOT后，4路服务器的资源利用率达到99%，
远远领先其他行业数据库。
这种能力在现代的多核服务器上尤为明显和重要。
13.1.3 MOT 关键技术
MOT的关键技术如下：
 内存优化数据结构：以实现高并发吞吐量和可预测的低延迟为目标，所有数据和索引都
在内存中，不使用中间页缓冲区，并使用持续时间最短的锁。数据结构和所有算法都是
专门为内存设计而优化的。