### 优化后的文本

#### 数据示例
以下是某个时间点的CPU使用情况数据：
```
09:18:18 5 0.05 0.00 E9°0 0.11 0.00 0.00 0.00 99.21 0.22
09:18:18 6 0.07 0.00 0.45 0.10 0.00 0.01 0.00 99.36 12.33
09:18:18 7 0.05 0.00 0.64 0.07 0.00 0.00 0.00 99.24 0.00
```

#### 参数解释
这些数据是从 `/proc/stat` 文件中获取的，用于描述不同时间段内各CPU核心的工作状态。具体参数含义如下：

- **user**：用户进程在该时间段内的CPU使用率（不包括nice值为负的进程），计算公式为 `(usr/total) * 100`。
- **nice**：nice值为负的进程在该时间段内的CPU使用率，计算公式为 `(nice/total) * 100`。
- **system**：系统进程在该时间段内的CPU使用率，计算公式为 `(system/total) * 100`。
- **iowait**：硬盘I/O等待时间在该时间段内的占比，计算公式为 `(iowait/total) * 100`。
- **irq**：硬中断处理时间在该时间段内的占比，计算公式为 `(irq/total) * 100`。
- **soft**：软中断处理时间在该时间段内的占比，计算公式为 `(softirq/total) * 100`。
- **idle**：除硬盘I/O等待外，CPU因其他原因处于空闲状态的时间占比，计算公式为 `(idle/total) * 100`。
- **intr/s**：每秒CPU接收的中断次数，计算公式为 `(intr/total) * 100`。

总工作时间为 `total_cur = user + system + nice + idle + iowait + irq + softirq`，其中 `_cur` 表示当前值，`_pre` 表示上一时间段的值。所有数值保留两位小数。

#### 示例1：平均模式
当 `mpstat` 命令不带任何参数运行时，输出的是从系统启动以来的平均值。

```bash
[work@builder linux-2.6.14]# mpstat
Linux 2.6.9-5.31AXsmp (builder.redflag-linux.com) 12/16/2005
09:38:46 AM CPU %user %nice %system %iowait %irq %soft %idle intr/s
09:38:48 AM all 23.28 0.00 1.75 0.50 0.00 0.00 74.47 1018.59
```

#### 示例2：每2秒生成一次报告
以下命令每2秒生成一次CPU统计数据，并持续3个周期，最后给出这三个周期的平均值。

```bash
[root@server yum_dir]# mpstat -P ALL 2 3
Linux 2.6.18-164.el5 (server.sys.com)
01/04/2010
09:34:20 PM CPU %user %nice %sys %iowait %irq %soft %steal %idle intr/s
09:34:22 PM all 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 1001.49
09:34:22 PM 0 0.00 0.00 0.50 0.00 0.00 0.00 0.00 99.50 1001.00
09:34:22 PM 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 0.00
09:34:24 PM all 0.00 0.00 0.25 0.00 0.00 0.00 0.00 99.75 1005.00
09:34:24 PM 0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 1005.50
09:34:24 PM 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 0.00
09:34:26 PM all 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 1001.49
09:34:26 PM 0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 1001.00
09:34:26 PM 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 0.00
Average:
CPU %user %nice %sys %iowait %irq %soft %steal %idle intr/s
Average: I 0.00 0.00 0.08 0.00 0.00 0.00 0.00 99.92 1002.66
Average: 0 0.00 0.00 0.17 0.00 0.00 0.00 0.00 99.83 1002.49
Average: 0.00 0.00 0.00 0.00 0.00 0.00 0.00 100.00 0.00
```

#### 示例3：比较带参数和不带参数的 `mpstat` 结果
在后台运行一个大文件读取操作，并在另一个终端窗口中运行 `mpstat` 命令以观察CPU使用情况的变化。

```bash
[root@server ~]# cat 1.img &
[1] 6934
[root@server ~]# mpstat
Linux 2.6.18-164.el5 (server.sys.com)
01/04/2010
10:17:31 PM CPU %user %nice %sys %iowait %irq %soft %steal %idle intr/s
10:17:31 PM all 0.07 0.02 0.25 0.21 0.01 0.04 0.00 99.40 1004.57
[root@server ~]# mpstat
Linux 2.6.18-164.el5 (server.sys.com)
01/04/2010
10:17:35 PM CPU %user %nice %sys %iowait %irq %soft %steal %idle intr/s
10:17:35 PM all 0.07 0.02 0.25 0.21 0.01 0.04 0.00 99.38 1004.73
[root@server ~]# mpstat
Linux 2.6.18-164.el5 (server.sys.com)
01/04/2010
10:17:39 PM CPU %user %nice %sys %iowait %irq %soft %steal %idle intr/s
10:17:39 PM all 0.07 0.02 0.25 0.21 0.01 0.04 0.00 99.38 1004.96
```

通过上述示例可以看出，在进行大文件读取操作时，CPU的I/O等待时间有所增加，但整体CPU使用率仍然较低。