title:Understanding the Mirai Botnet
author:Manos Antonakakis and
Tim April and
Michael Bailey and
Matt Bernhard and
Elie Bursztein and
Jaime Cochran and
Zakir Durumeric and
J. Alex Halderman and
Luca Invernizzi and
Michalis Kallitsis and
Deepak Kumar and
Chaz Lever and
Zane Ma and
Joshua Mason and
Damian Menscher and
Chad Seaman and
Nick Sullivan and
Kurt Thomas and
Yi Zhou
Understanding the Mirai Botnet
Manos Antonakakis, Georgia Institute of Technology; Tim April, Akamai; Michael Bailey, 
University of Illinois, Urbana-Champaign; Matt Bernhard, University of Michigan, Ann Arbor; 
Elie Bursztein, Google; Jaime Cochran, Cloudflare; Zakir Durumeric and J. Alex Halderman, 
University of Michigan, Ann Arbor; Luca Invernizzi, Google; Michalis Kallitsis, Merit Network, 
Inc.; Deepak Kumar, University of Illinois, Urbana-Champaign; Chaz Lever, Georgia Institute 
of Technology; Zane Ma and Joshua Mason, University of Illinois, Urbana-Champaign; 
Damian Menscher, Google; Chad Seaman, Akamai; Nick Sullivan, Cloudflare;  
Kurt Thomas, Google; Yi Zhou, University of Illinois, Urbana-Champaign
https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/antonakakis
This paper is included in the Proceedings of the 
26th USENIX Security Symposium
August 16–18, 2017 • Vancouver, BC, Canada
ISBN 978-1-931971-40-9
Open access to the Proceedings of the 
26th USENIX Security Symposium 
is sponsored by USENIX
Understanding the Mirai Botnet
Manos Antonakakis(cid:5) Tim April‡ Michael Bailey† Matthew Bernhard(cid:47) Elie Bursztein◦
Jaime Cochran(cid:46) Zakir Durumeric(cid:47)
J. Alex Halderman(cid:47) Luca Invernizzi◦
Michalis Kallitsis§ Deepak Kumar† Chaz Lever(cid:5) Zane Ma†∗ Joshua Mason†
Damian Menscher◦ Chad Seaman‡ Nick Sullivan(cid:46) Kurt Thomas◦ Yi Zhou†
◦Google
‡Akamai Technologies
(cid:46)Cloudﬂare (cid:5)Georgia Institute of Technology
§Merit Network †University of Illinois Urbana-Champaign
(cid:47)University of Michigan
Abstract
The Mirai botnet, composed primarily of embedded
and IoT devices, took the Internet by storm in late 2016
when it overwhelmed several high-proﬁle targets with
massive distributed denial-of-service (DDoS) attacks. In
this paper, we provide a seven-month retrospective anal-
ysis of Mirai’s growth to a peak of 600k infections and
a history of its DDoS victims. By combining a variety
of measurement perspectives, we analyze how the bot-
net emerged, what classes of devices were affected, and
how Mirai variants evolved and competed for vulnerable
hosts. Our measurements serve as a lens into the fragile
ecosystem of IoT devices. We argue that Mirai may rep-
resent a sea change in the evolutionary development of
botnets—the simplicity through which devices were in-
fected and its precipitous growth, demonstrate that novice
malicious techniques can compromise enough low-end
devices to threaten even some of the best-defended targets.
To address this risk, we recommend technical and non-
technical interventions, as well as propose future research
directions.
1
Introduction
Starting in September 2016, a spree of massive distributed
denial-of-service (DDoS) attacks temporarily crippled
Krebs on Security [46], OVH [43], and Dyn [36]. The ini-
tial attack on Krebs exceeded 600 Gbps in volume [46]—
among the largest on record. Remarkably, this overwhelm-
ing trafﬁc was sourced from hundreds of thousands of
some of the Internet’s least powerful hosts—Internet of
Things (IoT) devices— under the control of a new botnet
named Mirai.
While other IoT botnets such as BASHLITE [86] and
Carna [38] preceded Mirai, the latter was the ﬁrst to
emerge as a high-proﬁle DDoS threat. What explains
Mirai’s sudden rise and massive scale? A combination
∗Denotes primary, lead, or “ﬁrst” author
of factors—efﬁcient spreading based on Internet-wide
scanning, rampant use of insecure default passwords in
IoT products, and the insight that keeping the botnet’s
behavior simple would allow it to infect many hetero-
geneous devices—all played a role. Indeed, Mirai has
spawned many variants that follow the same infection
strategy, leading to speculation that “IoT botnets are the
new normal of DDoS attacks” [64].
In this paper, we investigate the precipitous rise of Mi-
rai and the fragile IoT ecosystem it has subverted. We
present longitudinal measurements of the botnet’s growth,
composition, evolution, and DDoS activities from Au-
gust 1, 2016 to February 28, 2017. We draw from a
diverse set of vantage points including network telescope
probes, Internet-wide banner scans, IoT honeypots, C2
milkers, DNS traces, and logs provided by attack vic-
tims. These unique datasets enable us to conduct the ﬁrst
comprehensive analysis of Mirai and posit technical and
non-technical defenses that may stymie future attacks.
We track the outbreak of Mirai and ﬁnd the botnet
infected nearly 65,000 IoT devices in its ﬁrst 20 hours
before reaching a steady state population of 200,000–
300,000 infections. These bots fell into a narrow band of
geographic regions and autonomous systems, with Brazil,
Columbia, and Vietnam disproportionately accounting for
41.5% of infections. We conﬁrm that Mirai targeted a
variety of IoT and embedded devices ranging from DVRs,
IP cameras, routers, and printers, but ﬁnd Mirai’s ultimate
device composition was strongly inﬂuenced by the market
shares and design decisions of a handful of consumer
electronics manufacturers.
By statically analyzing over 1,000 malware samples,
we document the evolution of Mirai into dozens of vari-
ants propagated by multiple, competing botnet operators.
These variants attempted to improve Mirai’s detection
avoidance techniques, add new IoT device targets, and in-
troduce additional DNS resilience. We ﬁnd that Mirai har-
nessed its evolving capabilities to launch over 15,000 at-
tacks against not only high-proﬁle targets (e.g., Krebs
USENIX Association
26th USENIX Security Symposium    1093
Figure 1: Mirai Timeline—Major attacks (red), exploits (yellow), and events (black) related to the Mirai botnet.
on Security, OVH, and Dyn), but also numerous game
servers, telecoms, anti-DDoS providers, and other seem-
ingly unrelated sites. While DDoS was Mirai’s ﬂavor
of abuse, future strains of IoT malware could leverage
access to compromised routers for ad fraud, cameras for
extortion, network attached storage for bitcoin mining,
or any number of applications. Mirai’s reach extended
across borders and legal jurisdictions, and it infected de-
vices with little infrastructure to effectively apply security
patches. This made defending against it a daunting task.
Finally, we look beyond Mirai to explore the security
posture of the IoT landscape. We ﬁnd that the absence of
security best practices—established in response to desk-
top worms and malware over the last two decades—has
created an IoT substrate ripe for exploitation. However,
this space also presents unique, nuanced challenges in the
realm of automatic updates, end-of-life, and consumer no-
tiﬁcations. Without improved defenses, IoT-based attacks
are likely to remain a potent adversarial technique as bot-
net variants continue to evolve and discover new niches
to infect. In light of this, Mirai seems aptly named—it is
Japanese for “the future.”
2 The Mirai Botnet
Mirai is a worm-like family of malware that infected
IoT devices and corralled them into a DDoS botnet. We
provide a brief timeline of Mirai’s emergence and discuss
its structure and propagation.
Timeline of events
Reports of Mirai appeared as
early as August 31, 2016 [89], though it was not until
mid-September, 2016 that Mirai grabbed headlines with
massive DDoS attacks targeting Krebs on Security [46]
and OVH [74] (Figure 1). Several additional high-proﬁle
attacks later targeted DNS provider Dyn [36] and
Lonestar Cell, a Liberian telecom [45]. In early 2017, the
actors surrounding Mirai came to light as the Mirai author
was identiﬁed [49]. Throughout our study, we corroborate
our measurement ﬁndings with these media reports and
expand on the public information surrounding Mirai.
Another signiﬁcant event in this timeline is the public
release of Mirai’s source code on hackforums.net [4]. We
rely on this code to develop our measurement method-
ology (Section 3). Furthermore, as we detail later (Sec-
tion 5), this source code release led to the proliferation
of Mirai variants with competing operators. One notable
variant added support for a router exploit through CPE
WAN Management Protocol (CWMP), an HTTP-based
protocol that enables auto-conﬁguration and remote man-
agement of home routers, modems, and other customer-
premises equipment (CPE) [15]. This exploit led to an out-
age at Deutsche Telekom late November 2016 [47], with
the suspected attacker later arrested in February 2017 [13].
In this work, we track Mirai’s variants and examine how
they inﬂuenced Mirai’s propagation.
Botnet structure & propagation We provide a sum-
mary of Mirai’s operation in Figure 2, as gleaned from
the released source code. Mirai spread by ﬁrst entering
a rapid scanning phase (x) where it asynchronously and
“statelessly” sent TCP SYN probes to pseudorandom IPv4
addresses, excluding those in a hard-coded IP blacklist, on
Telnet TCP ports 23 and 2323 (hereafter denoted TCP/23
and TCP/2323). If Mirai identiﬁes a potential victim, it en-
tered into a brute-force login phase in which it attempted
to establish a Telnet connection using 10 username and
password pairs selected randomly from a pre-conﬁgured
list of 62 credentials. At the ﬁrst successful login, Mirai
sent the victim IP and associated credentials to a hard-
coded report server (y).
A separate loader program (z) asynchronously in-
fected these vulnerable devices by logging in, determining
the underlying system environment, and ﬁnally, down-
loading and executing architecture-speciﬁc malware ({).
After a successful infection, Mirai attempted to conceal
its presence by deleting the downloaded binary and ob-
fuscating its process name in a pseudorandom alphanu-
meric string. As a consequence, Mirai infections did not
persist across system reboots. In order to fortify itself,
the malware additionally killed other processes bound
to TCP/22 or TCP/23, as well as processes associated
with competing infections, including other Mirai vari-
ants, .anime [25], and Qbot [72]. At this point, the bot
1094    26th USENIX Security Symposium
USENIX Association
08/01/2016 Mirai surfaces09/18/2016 OVH attacksbegin09/30/2016 Source code released10/21/2016 Dyn attacks10/31/2016 Liberia Lonestarattacks begin01/18/2017 Mirai author identiﬁed02/23/2017 Deutsche Telekom attacker arrested11/26/2016 Deutsche TelekomCWMP exploitSeptOctNovDecJanFeb09/21/2016 Krebs on Security peak attack3.1 Network Telescope
Mirai’s indiscriminate, rapid scanning strategy lends it-
self to tracking the botnet’s propagation to new hosts. We
monitored all network requests to a network telescope [9]
composed of 4.7 million IP address operated by Merit
Network over a seven month period from July 18, 2016
to February 28, 2017. On average, the network telescope
received 1.1 million packets from 269,000 IP addresses
per minute during this period. To distinguish Mirai trafﬁc
from background radiation [94] and other scanning ac-
tivity, we uniquely ﬁngerprinted Mirai probes based on
an artifact of Mirai’s stateless scanning whereby every
probe has a TCP sequence number—normally a random
32-bit integer— equal to the destination IP address. The
likelihood of this occurring incidentally is 1/232, and we
would expect to see roughly 86 packets demonstrating
this pattern in our entire dataset. In stark contrast, we
observed 116.2 billion Mirai probes from 55.4 million IP
addresses. Prior to the emergence of Mirai, we observed
only three IPs that perform scans with this ﬁngerprint.
Two of the IP addresses generated ﬁve packets; two on
TCP/80 and three on TCP/1002. The third IP address be-
longs to Team Cymru [1], who conducts regular TCP/443
scans.
We caution that the raw count of IP addresses seen
scanning over time is a poor metric of botnet size due to
DHCP churn [87]. To account for this, we tracked the size
of the botnet by considering the number of hosts actively
“scanning” at the start of every hour. We detected scans
using the methodology presented by Durumeric et al. [23],
in which we group packets from a single IP address in
a temporal window into logical scans. We speciﬁcally
identiﬁed scans that targeted the IPv4 address space at an
estimated rate of at least ﬁve packets per second, expiring
inactive scans after 20 minutes. We geolocated IPs using
Maxmind [61].
3.2 Active Scanning
While Mirai is widely considered an IoT botnet, there
has been little comprehensive analysis of infected devices
over the botnet’s entire lifetime. In order to determine the
manufacturer and model of devices infected with Mirai,
we leveraged Censys [22], which actively scans the IPv4
space and aggregates application layer data about hosts on
the Internet. We focused our analysis on scans of HTTPS,
FTP, SSH, Telnet, and CWMP between July 19, 2016 and
February 28, 2017.
A number of challenges make accurate device labeling
difﬁcult. First, Mirai immediately disables common out-