novation phase for new services, nor does it include business models. Additionally,
the solution is not intended for service ecosystems nor does it offer model transfor-
mation.
Service-oriented Modeling and Architecture
Arsaniani argues that object-oriented approaches lack support for services, flows,
and components (Arsanjani, 2004). Therefore, IBM developed the approach for Ser-
vice-Oriented Modeling and Architecture (SOMA) which fills these gaps. Additionally,
SOMA supports the concept of service ecosystems and offers a separation of pro-
viders and consumers. SOMA’s architecture provides seven layers of abstraction and
a methodology which guides the modeling procedures.
While SOMA offers a business-driven top-down pattern, business models and ser-
vice innovation are neglected. Additionally, this approach does not offer means for
model-driven development.
Motion
The Motion (Sehmi & Schwegler, 2006) methodology was developed by Microsoft as a
technology-agnostic architecture to expose organizations’ business models. How-
ever, for Motion a business model merely refers to capabilities. The principle of the
6
approach is to identify capabilities as a basis for stable projects and then derive busi-
ness processes. This routine allows constructing an established view of businesses.
The constructed view of an organization (i.e. the Motion Business Architecture) di-
rects a fast decision making that is otherwise hard to reach. Motion’s strengths is its
well structured methodology and architecture which comprises a set of stakeholders,
business capabilities, a life cycle, concepts for product and service, collaboration,
and contexts.
Motion addresses the early stages of service engineering, such as business and col-
laboration within a service ecosystem. The approach lacks support for service inno-
vation, business models, and model-driven development.
Table 3 shows the comparison of the strengths and weaknesses of business-oriented
approaches.
Method- Service Business Business Service
Architecture MDA
ology Innovation Model Process Ecosystem
SMART (cid:122) – – – – – –
SOAD – – – (cid:122) (cid:122) – –
SOMA (cid:122) – – (cid:122) (cid:122) (cid:122) –
Motion (cid:122) – – (cid:122) (cid:122) (cid:122) –
((cid:122) aspect is covered, – aspect is not covered)
Table 3: Strength and weaknesses of the technical oriented approaches
4. Integrated Methodology for Service Development in
Business Ecosystems
The examination of both streams of service development approaches in business
ecosystems shows weaknesses either on the business or on the technical side.
Therefore, the integrated methodology ISE has been developed by the authors to
create and combine e-services in the context of business ecosystems. The ISE ap-
proach, its challenges and its advantages as well as limitations are introduced in the
next sections.
4.1. Challenges of Bridging the Business and Technical Worlds
of Service Development
Information representation
Nowadays, organizations generate a wealth of information describing strategies, ob-
jectives, goals, business processes, standards, IT infrastructures, etc. This informa-
tion, which can be classified has unstructured, semi-structured, and structured, con-
stitutes a precious source to develop new e-services (the set of all the information
produced by an organizations is often termed as organizational memory
7
(Vasconcelos et al., 2003)). Unstructured information usually characterizes docu-
ments such as Word files, spreadsheets, and presentations. Semi-structured infor-
mation is generally associated with data instance which include schema information,
such as XML. Finally, structured information can typify relational databases and for-
mal models.
Depending on their background and skills, people tend to use different structures to
define information. For example, business stakeholders tend to use unstructured
data to describe future strategies, financial data, SWOT, Porter’s Five Forces, and
balanced scorecards. On the other hand, IT professionals usually rely on semi-
structured or structured information to describe formal models such as UML activity
diagrams, MOF and BPMN processes (see Fig. 1).
It is clear that unstructured information drives numerous business processes but of-
ten organizations cannot leverage this information efficiently, leading to inconsistent
communications between stakeholders, duplication of effort, poor decision-making,
and higher costs (Herschel and Jones, 05). The difference between the various struc-
ture levels that are used to embody information creates a representational gap that
needs to be closed in order to unify and bridge the business and IT perspectives on
e-services. If this gap is not closed, unstructured information generated by business
stakeholders will not be readily available to IT as part of the engineering process of
e-services.
(Herschel and Jones, 05) Richard T. Herschel, Nory E. Jones, Knowledge manage-
ment and business intelligence: the importance of integration, Journal of Knowledge
Management, pp. 45–55, 9(4), Emerald Group Publishing Limited, 2005, ISSN: 1367-
3270.
Fig. 1: Levels of structured information
Distinct Contexts and Views
Business and technical professionals have invariably different backgrounds, skills
and mindsets. This fact makes the alignment of the business and IT perspectives on
e-services a challenging task. On one hand, the concerns of business and IT per-
8
spectives are distinct. Business professionals are concern with aspects related to
financial assets, marketing missions, ROI, competition, value chains, and SWOT
analysis. On the other hand, technical people are concerned with functions, data,
components, integration, compatibility, programming, scalability, API, concepts and
their relationships, formal models, UI, and rules. As a result, it is often common that
different people use the same word to describe distinct entities and distinct words to
refer to the same entity (Fensel et al., 02) (see also section 3 which illustrates the
different types of service definitions from stakeholders with different backgrounds).
(Fensel et al., 02) D. Fensel, C. Bussler, Y. Ding, V. Kartseva, M. Klein, M. Korotkiy,
B. Omelayenko and R. Siebes, Semantic Web Application Areas, Proceedings of the
7th International Workshop on Applications of Natural Language to Information Sys-
tems, Retrieved from http://www.cs.vu.nl/~mcaklein/papers/NLDB02.pdf, Accessed
date 15 August 2008, 2002.
To structure heterogeneous and distributed information available inside an organiza-
tion appropriate meta-level descriptions are needed to represent a higher-level layer
of information. In order to develop an effective methodology for e-services, it is nec-
essary to identify, represent, and reuse existing organizational data assets. The rep-
resentation of business and IT information can be captured using formal models.
When a set of models is identified and their concepts are mapped and aligned, the
resulting model can be classified as an ontology. An ontology is a high level formal
and explicit shared conceptualization of a domain (Gruber, 1992). It is a conceptuali-
zation since it is an abstract view of a domain about real entities and their relation-
ships. It is formal because it has a formal software specification and it is machine-
readable. It is explicit since all concepts and relationships used in the ontology are
explicitly defined. Finally, it is shared since entities and relationships form a consen-
sual knowledge, that is, not related to an individual, but accepted by a group.
A suitable methodology for e-service development can use the notion of ontology to
aggregate distinct models (e.g. SWOT, Porter’s Five Forces, balanced scorecards,
UML activity diagrams, BPMN, etc.) from distinct communities to represent and man-
age both organizational information containers and contents. This option allows the
representation of information in a way that it facilitates knowledge sharing and reuse
between the stakeholders involved in the e-service development process.
Model Integration
Real world entities such as services come with a great variety of properties which
characterizes them. By abstracting these properties, the level of detail is dramatically
reduced and only a fraction of properties – the most important ones -- is represented
in one model. Depending on the perspective that is taken on a service, specific char-
acteristics are selected and represented in a suitable form. This abstraction can be
achieved using models which contain an abstract representation of entities (informa-
tion). As soon as multiple models contain representations of the same entity, the
need for integration arises. For example, consider a business process modeled with
BPMN which contains branching gateways with a conditional expression specified
with data parameters. The definition of data parameters can be done using an ontol-
ogy which is external to the business process. As a result, two different models de-
scribe or reference to the same entity and integration becomes a challenge.
The business and technical perspectives of an e-service can be separated by the
level of abstraction. The more abstract level – the business level – contains informal
9
models capturing financial information, risk analysis, goal models, etc. of e-services.
The more concrete level – the technical level – describes e-service functions and
technical implementations. Nevertheless, both perspectives focus on the same e-
service. Consequently, they contain representations of an e-service’s properties,
whereas the properties of the technical world extend the ones defined in the business
level. This means there is an intersection between the properties represented and,
thus, the need to transform the meaning of one representation to the other one. This
requires a propagation mechanism to support changes in both perspectives. The
translation between both perspectives can be captured relying on the notion of map-
pings between formal abstract models.
Tool support
One of the challenges in the area of e-service development is to make available to
engineers a suitable tool support. In order to provide a common approach, one com-
mon set of tools should be used across stakeholders. Since these tools are used by
various stakeholders with different perspectives (i.e. business and technical perspec-
tives), they should provide a global view on the models that are used to describe e-
services. In order to support collaborative development of a service a common re-
pository is needed. This includes a shared access to multiple models in the reposi-
tory, i.e. every participant involved in service engineering should see the same ver-
sion of a service models. This enables an instant synchronization (and visualization)
of changes.
Such set of tools should not only provide a shared model access, but should also
simplify the development process by providing assistance and guidance. Therefore,
the construction of roadmaps is another challenge. Roadmaps guide users informing
what are the tasks that need to be carry out, when and how. This way, they provide
guidance on the sequence of models that should be modeled and which suitable
tools to use. In this context, the most challenging task is to create an association be-
tween the development, innovation, design, and implementation phases and the in-
tegration of different representation formalisms such as unstructured information (e.g.
natural language) and structured ones (e.g. formal MOF-models).
4.2. The ISE Methodology
The idea behind the ISE methodology is to take the strengths of the business- and
technical oriented methodologies and combine them to provide a new approach for
service engineering. Therefore, the Service Engineering from Fraunhofer IAO (busi-
ness perspective) and the Zachman Framework (IT perspective) is applied in the ISE
methodology. Both approaches are introduced in the next sections.
4.2.1. Service Engineering based on Fraunhofer IAO
For the integration of business-oriented aspects into the ISE methodology the Ser-
vice Engineering approach from Fraunhofer IAO (Bullinger et al., 2003;Meiren, 2001)
has been chosen (see Fig. 1). This approach provides a phased model based on six
phases and a set of methods to model each phase in terms of product (outcome di-
mension), process (process dimension), resources (structure dimension), and mar-
keting. The approach is iterative and previous phases can be refined prior to continue
to the next phases.
10
We have chosen the SE from Fraunhofer IAO since it has a strong focus on the busi-
ness-orientation in the service development process. Especially, the definition phase
and the requirements analysis provide methods to design a service from the idea
management over feasibility studies, market and business requirements to the ser-
vice, process, resource, and marketing design. In order to support the design proc-
ess, a service model has been developed which illustrates the main elements of a
service concept. The activities in each phase lead to the development and the grad-
ual refinement of the service model elements.
Especially for the definition phase and requirements analysis a variety of different
business-oriented methods are used to model products, processes, resources, and
marketing aspects of the service model. The methods can be, for example, Porter’s
Five Forces model, Resource-Based View on strategy, SWOT-analysis, Cost-Profit-
Analysis, BCG-Matrix (market growth versus Market share), Competitive Strategies
of Porter, the analysis of the value chain from Porter, the Four Cs – Customer, Com-
petition, Cost, and Capabilities, and the Four Ps – Price, Product, Place, and Promo-
tion.
Fig. 2: Service Engineering from Fraunhofer IAO
However, the service design, service implementation, market launch and its prepara-
tion mainly focus on traditional services. Since traditional services and their devel-
opment concentrate on the direct customer contact and interactions (see 3.1
Business-oriented Service Development Approaches), SE’s models and methods
can be further optimized and improved to develop e-services. Appropriate technical
oriented models and methods are missing from SE and should also be considered.
4.2.2. Enterprise Architecture Framework based on Zachman
The Information System Architecture (ISA) framework (Zachman, 1987) provides a
taxonomy to relate real world concepts to Enterprise Architecture (Sowa & Zachman,
1992). Zachman describes Enterprise Architecture as means to flexible react o busi-
ness changes and to manage the varied resources of an enterprise. Zachman con-
cluded that an architecture framework for information systems is required to integrate
11
different perspectives of stakeholders on the architecture and, thus, to interface the
different enterprise artifacts.
Therefore, Zachman breaks down an enterprise architecture into six different stake-
holder perspectives and each perspective into six different descriptions as shown in
Table 4 (Sowa & Zachman, 1992). The outcome of each cell is an artifact and refers
to the respective description from a particular perspective of the enterprise architec-
ture.
Zachman identifies four usages for the framework. Firstly, the framework advances
the communication within the information system discipline. Secondly, by visualizing
the perspectives and the different descriptions helps to understand the reasons and
risks in case one or more artifacts are not developed. Thirdly, existing tools or meth-
odologies can be set into relation, by assigning them to a specific cell. Fourthly, it
helps to develop new tools and methodologies for artifacts.
The advantages of the Zachman framework for applying in the context of e-service
development are its model-oriented approach on breaking down a complex enter-