SHA-1 哈希算法。在这个版本中，KRB5KDF 键已修改，并且
`FIPS：AD-SUPPORT 加密子策略已被修改，以在 FIPS`{.literal} 模式中启用
`aes occurringcts-hmac-sha1-96`{.literal}，并在 FIPS 模式中启用
`aesxetexcts-hmac-sha1-96`{.literal}。因此，在启用了
`FIPS:AD-SUPPORT`{.literal} crypto-policy 时，Kerberos
密钥分发中心(KDC)可以使用两种加密类型来实现：
::: itemizedlist
-   创建 KDC 数据库。
-   为 Kerberos 主体创建密钥。
-   使用密钥进行客户端和 KDC 之间的通信。
:::
如果您的系统集成到 Active Directory 中，则需要启用
`FIPS:AD-SUPPORT`{.literal} crypto-policy。请注意：
`FIPS:AD-SUPPORT`{.literal} 不支持 `arcfour-hmac-md5`{.literal}
密码。如果需要这个密码，使用 `FIPS:AD-SUPPORT-LEGACY`{.literal}
支持策略启用它。
([BZ#2039684](https://bugzilla.redhat.com/show_bug.cgi?id=2039684){.link})
[]{#_bug_fixes.html#BZ-1978216}
::: title
**使用 OpenSSL 传统供应商的 MS-CHAP 验证**
:::
在以前的版本中，使用 MS-CHAP 的 FreeRADIUS
身份验证机制会失败，因为它们依赖于 MD4 hash 功能，而 MD4 已在 RHEL 9
中弃用。在这个版本中，如果您启用了 OpenSSL 旧供应商，您可以使用 MS-CHAP
或 MS-CHAPv2 验证 FreeRADIUS 用户。
如果您使用默认 OpenSSL 供应商、MS-CHAP 和 MS-CHAPv2
验证失败，并显示以下出错信息，显示这个修复：
``` literallayout
 Couldn't init MD4 algorithm. Enable OpenSSL legacy provider.
```
([BZ#1978216](https://bugzilla.redhat.com/show_bug.cgi?id=1978216){.link})
[]{#_bug_fixes.html#BZ-1879869}
::: title
**运行 sudo 命令不再导出 KRB5CCNAME 环境变量**
:::
在以前的版本中，在运行 `sudo`{.literal} 命令后，环境变量
`KRB5CCNAME`{.literal} 指向原始用户的 Kerberos
凭证缓存，这些信息可能无法被目标用户访问。因此，与 Kerberos
相关的操作可能会失败，因为这个缓存无法访问。在这个版本中，运行
`sudo`{.literal} 命令不再设置 `KRB5CCNAME`{.literal}
环境变量，目标用户可以使用它们的默认 Kerberos 凭证缓存。
(BZ#1879869)
[]{#_bug_fixes.html#BZ-1737489}
::: title
**SSSD 可以正确地评估 /etc/krb5.conf 中 Kerberos keytab 名称的默认设置**
:::
在以前的版本中，如果您为 `krb5.keytab`{.literal}
文件定义了一个非标准位置，SSSD 不会使用此位置，并使用默认的
`/etc/krb5.keytab`{.literal}
位置。因此，当您试图登录系统时，登录会失败，因为
`/etc/krb5.keytab`{.literal} 不包含条目。
在这个版本中，SSSD 会评估 `/etc/krb5.conf`{.literal} 中的
`default_keytab_name`{.literal} 变量，并使用此变量指定的位置。如果未设置
`default_keytab_name`{.literal} 变量，SSSD 仅使用默认的
`/etc/krb5.keytab`{.literal} 位置。
(BZ#1737489)
[]{#_bug_fixes.html#BZ-1779685}
::: title
**使用 PBKDF2 算法以 FIPS 模式验证目录服务器现在可以正常工作**
:::
当 Directory Server 在联邦信息处理标准(FIPS)模式下运行时，P
`K11_ExtractKeyValue（）`{.literal} 功能不可用。因此，在更新之前，启用了
FIPS 模式时，使用基于密码的身份验证功能
2(PBKDF2)算法无法向服务器进行身份验证。在这个版本中，Directory
服务器使用 `PK11_Decrypt（）`{.literal}
函数来获取密码散列数据。因此，使用 PBKDF2
算法哈希的密码验证现在可以正常工作。
([BZ#1779685](https://bugzilla.redhat.com/show_bug.cgi?id=1779685){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_red-hat-enterprise-linux-system-roles}Red Hat Enterprise Linux System Roles {.title}
:::
[]{#_bug_fixes.html#BZ-2004899}
::: title
**如果禁用 IPv6，则网络系统角色不再无法设置 DNS 搜索域**
:::
在以前的版本中，如果禁用 IPv6 协议，lib `nm`{.literal} 库的
`nm_connection_verify（）`{.literal} 功能不会忽略 DNS
搜索域。因此，当您使用网络 RHEL 系统角色并设置 `dns_search`{.literal}
并设置了 `ipv6_disabled: true`{.literal}
时，系统角色会失败并显示以下错误：
``` screen
nm-connection-error-quark: ipv6.dns-search: this property is not allowed for 'method=ignore' (7)
```
在这个版本中，如果禁用 IPv6，`nm_connection_verify（）`{.literal}
函数会忽略 DNS 搜索域。因此，您可以使用 `dns_search`{.literal}
如预期，即使禁用 IPv6。
([BZ#2004899](https://bugzilla.redhat.com/show_bug.cgi?id=2004899){.link})
[]{#_bug_fixes.html#BZ-1958964}
::: title
**`Postfix`{.literal} 角色 README 不再使用普通角色名称**
:::
在以前的版本中，`/usr/share/ansible/roles/rhel-system-roles.postfix/README.md`{.literal}
中提供的示例使用了角色名称的普通版本（`postfix`{.literal}），而不是使用
`rhel-system-roles.postfix`{.literal}。因此，用户会因为参考了文档而错误地使用普通角色名称而不是完全限定域名(FQRN)。在这个版本中解决了这个问题，文档包含了
FQRN、`rhel-system-roles.postfix`{.literal} 的示例，让用户能够正确地写入
playbook。
([BZ#1958964](https://bugzilla.redhat.com/show_bug.cgi?id=1958964){.link})
[]{#_bug_fixes.html#BZ-1978734}
::: title
**Postfix RHEL 系统角色 README.md 不再在\"Role Variables\"部分缺少变量**
:::
在以前的版本中，Postfix RHEL 系统角色变量（如
`postfix_check`{.literal},`postfix_backup`{.literal},`postfix_backup_multiple`{.literal}
）在\"Role Variables\"部分中不可用。因此，用户无法查阅 Postfix
角色文档。在这个版本中，在 Postfix README
部分中添加了角色变量文档。角色变量记录在 `rhel-system-roles`{.literal}
提供的 `doc/usr/share/doc/rhel-system-roles/postfix/README.md`{.literal}
文档中。
([BZ#1978734](https://bugzilla.redhat.com/show_bug.cgi?id=1978734){.link})
[]{#_bug_fixes.html#BZ-1978760}
::: title
**运行相同输出时角色任务不再改变**
:::
在以前的版本中，在再次运行同一输入时，一些角色任务会报告为
`CHANGED`{.literal}，即使没有更改也是如此。因此，该角色并不具有幂等性。要解决这个问题，请执行以下操作：
::: itemizedlist
-   在应用配置变量前检查配置变量是否有所变化。您可以使用
    `--check`{.literal} 选项进行此验证。
-   不要向配置文件中添加 `Last Modified: $date`{.literal} 标头。
:::
因此，角色任务是幂等的。
([BZ#1978760](https://bugzilla.redhat.com/show_bug.cgi?id=1978760){.link})
[]{#_bug_fixes.html#BZ-2039106}
::: title
**`logging_purge_confs`{.literal} 选项可以正确地删除不必要的配置文件**
:::
将 `logging_purge_confs`{.literal} 选项设为 `true`{.literal}
时，它应删除不必要的日志记录配置文件。但是，即使
`logging_purge_confs`{.literal} 被设置为
`true`{.literal}，也不会从配置目录中删除不必要的配置文件。现在，这个问题已被解决，选项已被重新定义：如果
`logging_purge_confs`{.literal} 设为 `true`{.literal}，Rsyslog
从没有属于任何 rpm 软件包的 `rsyslog.d`{.literal}
目录中删除文件。这包括之前运行日志记录角色的配置文件。`logging_purge_confs`{.literal}
的默认值为 `false`{.literal}。
([BZ#2039106](https://bugzilla.redhat.com/show_bug.cgi?id=2039106){.link})
[]{#_bug_fixes.html#BZ-2041632}
::: title
**使用 Metrics 角色的 playbook 可以在多个运行中成功完成，即使 Grafana
`admin`{.literal} 密码已更改**
:::
在以前的版本中，在使用 `metrics_graph_service: yes`{.literal} 布尔值运行
Metrics 角色后更改 Grafana `admin`{.literal} 用户密码会导致 Metrics
角色后续运行失败。这会导致使用 Metrics 角色失败
playbook，受影响的系统只部分设置性能分析。现在，Metrics 角色会在 Grafana
`部署`{.literal} API
可用时使用，不再需要了解用户名或密码来执行必要的配置操作。因此，使用
Metrics 角色的 playbook 会在多个运行中成功完成，即使管理员更改了 Grafana
`admin`{.literal} 密码。
([BZ#2041632](https://bugzilla.redhat.com/show_bug.cgi?id=2041632){.link})
[]{#_bug_fixes.html#BZ-2058777}
::: title
**现在，Metrics 角色配置会正确跟随符号链接**
:::
安装 `mssql pcp`{.literal} 软件包后，`mssql.conf`{.literal} 文件位于
`/etc/pcp/mssql/`{.literal} 中，由符号链接 /
`var/lib/pcp/pmdas/mssql/mssql.conf 为目标`{.literal}。但是，Metrics
角色覆盖符号链接，而不是按照其配置 `mssql.conf`{.literal}。因此，运行
Metrics 角色会更改到常规文件的符号链接，因此配置仅影响
`/var/lib/pcp/pmdas/mssql.conf`{.literal}
文件。这会导致符号链接失败，主配置文件 `/etc/pcp/mssql.conf`{.literal}
不受配置的影响。这个问题现已解决，在 Metrics
角色中添加了符号链接后，后续 `：`{.literal} 是 选项。因此，Metrics
角色会保留符号链接并正确配置主配置文件。
([BZ#2058777](https://bugzilla.redhat.com/show_bug.cgi?id=2058777){.link})
[]{#_bug_fixes.html#BZ-2058645}
::: title
**`timesync`{.literal} 角色不再无法找到请求的服务 `ptp4l`{.literal}**
:::
在以前的版本中，在一些 RHEL 版本中，Ansible `service_facts`{.literal}
模块报告服务事实错误。因此，`timesync`{.literal}
角色会报告一个错误，试图停止 `ptp4l`{.literal}
服务。在这个版本中，Ansible `service_facts`{.literal}
模块检查任务的返回值，以停止 `timesync`{.literal} 服务。如果返回的值
`失败`{.literal}，但错误消息是
`Could 找不到所请求的服务 NAME:`{.literal}，则模块会假定成功。现在，`timesync`{.literal}
角色会在没有任何错误的情况下运行，如
`Could 找不到请求的服务 ptp4l`{.literal}。
(BZ#2058645)
[]{#_bug_fixes.html#BZ-2058756}
::: title
**`kernel_settings`{.literal} `configobj`{.literal} 在受管主机上可用**
:::
在以前的版本中，`kernel_settings`{.literal} 角色没有在受管主机上安装
`python3-configobj`{.literal}
软件包。因此，角色会返回一个错误，表示无法找到 `configobj`{.literal}
Python 模块。在这个版本中，角色可确保受管主机上存在
`python3-configobj`{.literal} 软件包，`kernel_settings`{.literal}
角色可以正常工作。
([BZ#2058756](https://bugzilla.redhat.com/show_bug.cgi?id=2058756){.link})
[]{#_bug_fixes.html#BZ-2071804}
::: title
**Terminal Session Recording 角色 `tlog-rec-session`{.literal} 现在被
SSSD 正确覆盖**
:::
在以前的版本中，Terminal Session Recording RHEL
系统角色依赖于系统安全服务守护进程(SSSD)文件供应商，并在启用了
`authselect`{.literal} 选项 `中使用-files-domain`{.literal} 在
`nsswitch.conf`{.literal} 文件中设置正确的 `passwd`{.literal} 条目。在
RHEL 9.0 中，SSSD 默认不会隐式启用文件供应商，因此 SSSD 的
`tlog-rec-session`{.literal} shell
覆盖无法正常工作。在这个版本中，Terminal Session Recording 角色更新
`nsswitch.conf`{.literal} 以确保 SSSD 正确覆盖
`tlog-rec-session`{.literal}。
([BZ#2071804](https://bugzilla.redhat.com/show_bug.cgi?id=2071804){.link})
[]{#_bug_fixes.html#BZ-2029634}
::: title
**SSHD 系统角色可以在 FIPS 模式中管理系统**
:::
在以前的版本中，当调用时，SSHD 系统角色无法创建 `不允许`{.literal} 的
HostKey 类型。因此，SSHD 系统角色无法在联邦信息处理标准(FIPS)模式中管理
RHEL 8 和旧的系统。在这个版本中，SSHD 系统角色检测到 FIPS
模式，并正确调整默认的 HostKey 列表。因此，系统角色可以使用默认的
HostKey 配置在 FIPS 模式中管理 RHEL 系统。
([BZ#2029634](https://bugzilla.redhat.com/show_bug.cgi?id=2029634){.link})
[]{#_bug_fixes.html#BZ-2044408}
::: title
**SSHD 系统角色使用正确的模板文件**
:::
在以前的版本中，SSHD 系统角色使用错误的模板文件。因此，生成的
`sshd_config`{.literal} 文件不包含 `ansible_managed`{.literal}
注释。在这个版本中，系统角色使用正确的模板文件，`sshd_config`{.literal}
包含正确的 `ansible_managed`{.literal} 注释。
([BZ#2044408](https://bugzilla.redhat.com/show_bug.cgi?id=2044408){.link})
[]{#_bug_fixes.html#BZ-2029602}
::: title
**Kdump RHEL 系统角色可以重新引导，或表示需要重新引导**
:::
在以前的版本中，Kdump RHEL
系统角色会忽略受管节点，而无需为崩溃内核保留内存。因此，角色使用
\"Success\"
状态完成，即使它没有正确配置系统。在这个版本中，这个问题已被解决。如果受管节点没有为崩溃内核保留任何内存，则
Kdump RHEL 系统角色会失败，并建议用户将 `kdump_reboot_ok`{.literal}
变量设置为 `true`{.literal}，以便在受管节点上正确配置 `kdump`{.literal}
服务。
([BZ#2029602](https://bugzilla.redhat.com/show_bug.cgi?id=2029602){.link})