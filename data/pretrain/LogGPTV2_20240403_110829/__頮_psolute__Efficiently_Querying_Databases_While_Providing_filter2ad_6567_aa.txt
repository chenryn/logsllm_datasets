title:\(ε\)psolute: Efficiently Querying Databases While Providing
Differential Privacy
author:Dmytro Bogatov and
Georgios Kellaris and
George Kollios and
Kobbi Nissim and
Adam O'Neill
Epsolute: Efficiently Querying Databases While Providing
Differential Privacy
Dmytro Bogatov
Boston University
Boston, MA, USA
PI:EMAIL
Georgios Kellaris
Canada
PI:EMAIL
George Kollios
Boston University
Boston, MA, USA
PI:EMAIL
Kobbi Nissim
Georgetown University
Washington, D.C., USA
PI:EMAIL
Adam O’Neill
University of Massachusetts, Amherst
Amherst, MA, USA
PI:EMAIL
ABSTRACT
As organizations struggle with processing vast amounts of informa-
tion, outsourcing sensitive data to third parties becomes a necessity.
To protect the data, various cryptographic techniques are used in
outsourced database systems to ensure data privacy, while allowing
efficient querying. A rich collection of attacks on such systems
has emerged. Even with strong cryptography, just communication
volume or access pattern is enough for an adversary to succeed.
In this work we present a model for differentially private out-
sourced database system and a concrete construction, Epsolute, that
provably conceals the aforementioned leakages, while remaining
efficient and scalable. In our solution, differential privacy is pre-
served at the record level even against an untrusted server that
controls data and queries. Epsolute combines Oblivious RAM and
differentially private sanitizers to create a generic and efficient
construction.
We go further and present a set of improvements to bring the
solution to efficiency and practicality necessary for real-world adop-
tion. We describe the way to parallelize the operations, minimize the
amount of noise, and reduce the number of network requests, while
preserving the privacy guarantees. We have run an extensive set of
experiments, dozens of servers processing up to 10 million records,
and compiled a detailed result analysis proving the efficiency and
scalability of our solution. While providing strong security and
privacy guarantees we are less than an order of magnitude slower
than range query execution of a non-secure plain-text optimized
RDBMS like MySQL and PostgreSQL.
CCS CONCEPTS
• Security and privacy→ Database and storage security; Man-
agement and querying of encrypted data.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484786
KEYWORDS
Differential Privacy; ORAM; differential obliviousness; sanitizers;
ACM Reference Format:
Dmytro Bogatov, Georgios Kellaris, George Kollios, Kobbi Nissim, and Adam
O’Neill. 2021. Epsolute: Efficiently Querying Databases While Providing
Differential Privacy. In Proceedings of the 2021 ACM SIGSAC Conference on
Computer and Communications Security (CCS ’21), November 15–19, 2021,
Virtual Event, Republic of Korea. ACM, New York, NY, USA, 15 pages. https:
//doi.org/10.1145/3460120.3484786
1 INTRODUCTION
Secure outsourced database systems aim at helping organizations
outsource their data to untrusted third parties, without compro-
mising data confidentiality or query efficiency. The main idea
is to encrypt the data records before uploading them to an un-
trusted server along with an index data structure that governs
which encrypted records to retrieve for each query. While strong
cryptographic tools can be used for this task, existing implemen-
tations such as CryptDB [56], Cipherbase [2], StealthDB [70] and
TrustedDB [3] try to optimize performance but do not provide
strong security guarantees when answering queries. Indeed, a se-
ries of works [9, 17, 34, 37, 40, 41, 43, 45, 51] demonstrate that these
systems are vulnerable to a variety of reconstruction attacks. That
is, an adversary can fully reconstruct the distribution of the records
over the domain of the indexed attribute. This weakness is promi-
nently due to the access pattern leakage: the adversary can tell if
the same encrypted record is returned on different queries.
More recently, [33, 35, 43–45] showed that reconstruction attacks
are possible even if the systems employ heavyweight cryptographic
techniques that hide the access patterns, such as homomorphic en-
cryption [30, 69] or Oblivious RAM (ORAM) [31, 32], because they
leak the size of the result set of a query to the server (this is referred
to as communication volume leakage). Thus, even some recent sys-
tems that provide stronger security guarantees like ObliDB [28],
Opaque [75] and Oblix [50] are susceptible to these attacks. This
also means that no outsourced database system can be both opti-
mally efficient and privacy-preserving: secure outsourced database
systems should not return the exact number of records required to
answer a query.
We take the next step towards designing secure outsourced data-
base systems by presenting novel constructions that strike a prov-
able balance between efficiency and privacy. First, to combat the
Session 7C: Database and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2262access pattern leakage, we integrate a layer of ORAM storage in our
construction. Then, we bound the communication volume leakage
by utilizing the notion of differential privacy (DP) [24]. Specifically,
instead of returning the exact number of records per query, we
only reveal perturbed query answer sizes by adding random en-
crypted records to the result so that the communication volume
leakage is bounded. Our construction guarantees privacy of any
single record in the database which is necessary in datasets with
stringent privacy requirements. In a medical HIPAA-compliant set-
ting, for example, disclosing that a patient exists in a database with
a rare diagnosis correlating with age may be enough to reveal a
particular individual.
The resulting mechanism achieves the required level of privacy,
but implemented naïvely the construction is prohibitively slow. We
make the solution practical by limiting the amount of noise and
the number of network roundtrips while preserving the privacy
guarantees. We go further and present a way to parallelize the
construction, which requires adapting noise-generation algorithms
to maintain differential privacy requirements.
Using our system, we have run an extensive set of experiments
over cloud machines, utilizing large datasets — that range up to
10 million records — and queries of different sizes, and we report
our experimental results on efficiency and scalability. We compare
against best possible solutions in terms of efficiency (conventional
non-secure outsourced database systems on unencrypted data) and
against an approach that provides optimal security (retrieves the
full table from the cloud or runs the entire query obliviously with
maximal padding). We report that our solution is very competitive
against both baselines. Our performance is comparable to that of
unsecured plain-text optimized database systems (like MySQL and
PostgreSQL): while providing strong security and privacy guaran-
tees, we are only 4 to 8 times slower in a typical setting. Compared
with the optimally secure solution, a linear scan (downloading all
the records), we are 18 times faster in a typical setting and even
faster as database sizes scale up.
To summarize, our contributions in this work are as follows:
• We present a new model for a differentially private out-
sourced database system, CDP-ODB, its security definition,
query types, and efficiency measures. In our model, the ad-
versarial honest-but-curious server cannot see the record
values, access patterns, or exact communication volume.
• We describe a novel construction, Epsolute, that satisfies
the proposed security definition, and provide detailed algo-
rithms for both range and point query types. In particular,
to conceal the access pattern and communication volume
leakages, we provide a secure storage construction, utilizing
a combination of Oblivious RAM [31, 32] and differentially
private sanitization [10]. Towards this, we maintain an index
structure to know how many and which objects we need to
retrieve. This index can be stored locally for better efficiency
(in all our experiments this is the case), but crucially, it can
also be outsourced to the adversarial server and retrieved
on-the-fly for each query.
• We improve our generic construction to enable paralleliza-
tion within a query. The core idea is to split the storage
among multiple ORAMs, but this requires tailoring the over-
head required for differential privacy proportionally to the
number of ORAMs, in order to ensure privacy. We present
practical improvements and optimization techniques that
dramatically reduce the amount of fetched noise and the
number of network roundtrips.
• Finally, we provide and open-source a high-quality C++ im-
plementation of our system. We have run an extensive set
of experiments on both synthetic and real datasets to em-
pirically assess the efficiency of our construction and the
impact of our improvements. We compare our solutions to
the naïve approach (linear scan downloading all data every
query), oblivious processing and maximal padding solution
(Shrinkwrap [5]), and to a non-secure regular RDBMS (Post-
greSQL and MySQL), and we show that our system is very
competitive.
1.1 Related Work
We group the related secure databases, engines, and indices into
three categories (i) systems that are oblivious or volume-hiding and
do not require trusted execution environment (TEE), (ii) construc-
tions that rely on TEE (usually, Intel SGX), (iii) solutions that use
property-preserving or semantically secure encryption and target
primarily a snapshot adversary. We claim that Epsolute is the most
secure and practical range- and point-query engine in the outsourced
database model, that protects both access pattern (AP) and communi-
cation volume (CV) using Differential Privacy, while not relying on
TEE, linear scan or padding result size to the maximum.
Obliviousness and volume-hiding without enclave. This category
is the most relevant to Epsolute, wherein the systems provide either
or both AP and CV protection without relying on TEE. Crypt𝜖 [59]
is a recent end-to-end system executing “DP programs”. Crypt𝜖
has a different model than Epsolute in that it assumes two non-
colluding servers, an adversarial querying user (the analyst), and
it uses DP to protect the privacy of an individual in the database,
which includes volume-hiding for aggregate queries. Crypt𝜖 also
does not consider oblivious execution and attacks against the AP.
Shrinkwrap [5] (and its predecessor SMCQL [4]) is an excellent
system designed for complex queries over federated and distributed
data sources. In Shrinkwrap, AP protection is achieved by using
oblivious operators (linear scan and sort) and CV is concealed by
adding fake records to intermediate results with DP. Padding the
result to the maximum size first and doing a linear scan over it
afterwards to “shrink” it using DP, is much more expensive than in
Epsolute, however. In addition, in processing a query, the worker
nodes are performing an 𝑂(𝑛 log 𝑛) cost oblivious sorting, where 𝑛
is the maximum result size (whole table for range query), since they
are designed to answer more general complex queries. SEAL [21]
offers adjustable AP and CV leakages, up to specific bits of leakage.
SEAL builds on top of Logarithmic-SRC [22], splits storage into
multiple ORAMs to adjust AP, and pads results size to a power of 2
to adjust CV. Epsolute, on the other hand, fully hides the AP and
uses DP with its guarantees to pad the result size. PINED-RQ [60]
samples Laplacian noise right in the B+ tree index tree, adding
fake and removing real pointers according to the sample. Unlike
Epsolute, PINED-RQ allows false negatives (i.e., result records not
Session 7C: Database and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2263included in the answer), and does not protect against AP leakage. On
the theoretical side, Chan et al. [18] (followed by Beimel et al. [8])
treat the AP itself as something to protect with DP. [18] introduces
a notion of differential obliviousness that is admittedly weaker
than the full obliviousness used in Epsolute. Most importantly, [18]
ensures differential privacy w.r.t. the ORAM only, while Epsolute
ensures DP w.r.t. the entire view of the adversary.
Enclave-based solutions. Works in this category use trusted execu-
tion environment (usually, SGX enclave). These works are primarily
concerned with the AP protection for both trusted and untrusted
memory, unlike Epsolute which also protects CV. Cipherbase [1, 2]
was a pioneer introducing the idea of using TEE (FPGA at that time)
to assist with DBMS security. HardIDX [29] simply puts the B+ tree
in the enclave, while StealthDB [70] symmetrically encrypts all
records and brings them in the enclave one at a time for processing.
EnclaveDB [57] assumes somewhat unrealistic 192 GB enclave and
puts the entire database in it. ObliDB [28] and Opaque [75] assume
fully oblivious enclave memory (not available as of today) and de-
vise algorithms that use this fully trusted portion to obliviously
execute common DBMS operators, like filters and joins. Oblix [50]
provides a multimap that is oblivious both in and out of the enclave.
HybrIDX claims protection against both AP and CV leakages, but
unlike Epsolute it only obfuscates them. Epsolute offers an indis-