# 【漏洞分析】Google Hangouts ActiveX中的释放重引用漏洞
|
##### 译文声明
本文是翻译文章，文章来源：pwnanisec.blogspot.be
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
翻译：[胖胖秦](http://bobao.360.cn/member/contribute?uid=353915284)
预估稿费：180RMB
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**概要**
在2015年，我发现了Google Hangouts使用的“Google Talk ActiveX插件”中存在释放重引用漏洞。
ActiveX是站点锁定的，这意味着它只能被Google的白名单域调用。要利用这一点，攻击者需要在这些域上触发一个XSS错误。
该错误已报告给Google，此后已修复。
**ActiveX详细信息**
在IE上安装Google Hangouts时，系统会安装“Google Talk ActiveX Plugin”控件。这个控件由浏览器调用并导出5个方法。
    dispinterface GTalkPluginInterface {
        properties：
        methods：
            [id（0x60020000）]
            void send（in in BSTR str）;
            [id（0x60020001），propput]
            void onmessage（[in] VARIANT * rhs）;
            [id（0x60020002），propget]
            BSTR version（）;
            [id（0x60020003），propget]
            BSTR wsconnectinfo（）;
            [id（0x60020004）]
            void wsconnectfailed（[in] int port）;
    };
控件没有实现IObjectSafetySiteLock接口来将ActiveX锁定到某些域。
     C:Program Files (x86)MicrosoftSiteLock 1.15>sitelist.exe {39125640-8D80-11DC-A2FE-C5C455D89593}  
     SiteList: Utility to dump domain list from a site-locked ActiveX control.  
     [1ff8] No bp log location saved, using default.  
     [000:000] [1ff8] Cpu: 6.58.9, x4, 2890Mhz, 8065MB  
     [000:000] [1ff8] Computer model: Not available  
     IObjectSafetySiteLock not implemented.
但是，测试显示ActiveX仅限于Google域。由于它不使用IObjectSafetySiteLock，我检查了它是否在Internet
Explorer中被注册为浏览器助手对象。这样它就可以接收navigation
事件。从调试和逆向应用程序来看，我注意到ActiveX注册为浏览器助手对象。它公开了IObjectWithSite接口,它会创建一个Internet
Explorer的连接点。通过这个，ActiveX可以获得正在使用的当前URL信息。
通过下面的C ++代码，我们创建对象的实例，并在IObjec tWithSite-> SetSite（）之前创建一个断点。
     #include "stdafx.h"  
     #include "windows.h"  
     #include "OCIdl.h"  
     int _tmain(int argc, _TCHAR* argv[])  
     {  
          CoInitialize(NULL);   
          IUnknown *punk;  
          LPGUID pclsid;  
          HRESULT hr = NULL;  
          //{39125640-8D80-11DC-A2FE-C5 C4 55 D8 95 93}  
          static const GUID CLSID_GTALK = { 0x39125640, 0x8D80, 0x11DC, { 0xa2, 0xfe, 0xc5, 0xc4, 0x55, 0xd8, 0x95, 0x93 } };  
          if (FAILED(hr))  
         printf("error");  
          hr = CoCreateInstance(CLSID_GTALK, NULL, CLSCTX_SERVER,   
                   IID_IUnknown, (void **)&punk);  
       if (FAILED(hr))  
         printf("error");  
        // Ask the ActiveX object for the IDispatch interface.  
          IObjectWithSite *pOSite;  
            hr = punk->QueryInterface(IID_IObjectWithSite, (void **)&pOSite);  
       if (FAILED(hr))  
         printf("error");  
          __asm  
          {  
               int 3;  
          }  
          //pOSite->GetSite( CLSID_GTALK, NULL);  
          pOSite->SetSite(NULL);  
          return 0;  
     }
然后我们可以使用调试器来步入函数并获取其地址。然后我们在Internet Explorer中断此地址，并使用HTML代码加载和调用控件。
控件实现SetSite，它由IE传递的一个对象调用。下面的代码是实现的一部分。URL由ECX参数传递。
    0:007> u 5ca85c51  
     googletalkax+0x5c51:  
     5ca85c51 51       push  ecx  
     5ca85c52 50       push  eax  
     5ca85c53 e8d88f0000   call  googletalkax!DllUnregisterServer+0x39e0 (5ca8ec30)  
     5ca85c58 8bd8      mov   ebx,eax  
     5ca85c5a 83c408     add   esp,8  
     5ca85c5d 85db      test  ebx,ebx  
     5ca85c5f 7465      je   googletalkax+0x5cc6 (5ca85cc6)  
     5ca85c61 8b4e40     mov   ecx,dword ptr [esi+40h]  
     0:007> da poi(ecx)  
     1123efc0 "http://localhost:9000/testgoogle"  
     1123efe0 "talkactivexplugin.html"
通过该功能的深入了解，我们可以找到将当前域与列入白名单的域进行比较的代码。
     .text:5CA8CA20         cmp   [ebp+var_8], 10h  
     .text:5CA8CA24         lea   eax, [ebp+var_1C] ; holds the current domain name   
     .text:5CA8CA27         push  dword ptr [esi] ; holds whitelisted domain  
     .text:5CA8CA29         cmovnb eax, [ebp+var_1C]  
     .text:5CA8CA2D         push  eax  
     .text:5CA8CA2E         call  sub_5CA957C0  
     .text:5CA8CA33         add   esp, 8  
     .text:5CA8CA36         test  al, al  
     .text:5CA8CA38         jnz   loc_5CA8CB37  
     .text:5CA8CA3E         add   esi, 4  
     .text:5CA8CA41         cmp   esi, offset aHostedtalkgadg ; "*hostedtalkgadget.google.com"  
     .text:5CA8CA47         jl   short loc_5CA8CA20
我们可以在调试器中使用断点来显示所有列入白名单的域。
     0:005> bl  
      0 e 5ca8ca2e   0001 (0001) 0:**** googletalkax!DllUnregisterServer+0x17de "da poi(esp+4);g"  
     0:005> g  
     5cace2c4 "*hostedtalkgadget.google.com"  
     5cace2e4 "*mail.google.com"  
     5cace2f8 "*plus.google.com"  
     5cace30c "*plus.sandbox.google.com"  
     5cace328 "*talk.google.com"  
     5cace33c "*talkgadget.google.com"
以下是函数中另一条不会被命中的代码路径。此代码需要在控件中设置“ plugin_enable_corp_host
”标记。这可能是由Google内部使用。然后对其他主机执行其他检查。
     .text:5CA8CA9F         push  offset a_corp_google_c ; "*.corp.google.com"  
     .text:5CA8CAA4         cmovnb eax, [ebp+var_1C]  
     .text:5CA8CAA8         push  eax  
     .text:5CA8CAA9         call  sub_5CA957C0  
     .text:5CA8CAAE         add   esp, 8  
     .text:5CA8CAB1         test  al, al  
     .text:5CA8CAB3         jnz   short loc_5CA8CB0C  
     .text:5CA8CAB5         cmp   [ebp+var_8], 10h  
     .text:5CA8CAB9         lea   eax, [ebp+var_1C]  
     .text:5CA8CABC         push  offset a_prod_google_c ; "*.prod.google.com"  
     .text:5CA8CAC1         cmovnb eax, [ebp+var_1C]  
     .text:5CA8CAC5         push  eax  
     .text:5CA8CAC6         call  sub_5CA957C0  
     .text:5CA8CACB         add   esp, 8  
     .text:5CA8CACE         test  al, al  
     .text:5CA8CAD0         jnz   short loc_5CA8CB0C  
     .text:5CA8CAD2         cmp   [ebp+var_8], 10h  
     .text:5CA8CAD6         lea   eax, [ebp+var_1C]  
     .text:5CA8CAD9         push  offset a_googlegoro_co ; "*.googlegoro.com"  
     .text:5CA8CADE         cmovnb eax, [ebp+var_1C]  
     .text:5CA8CAE2         push  eax  
     .text:5CA8CAE3         call  sub_5CA957C0  
     .text:5CA8CAE8         add   esp, 8  
     .text:5CA8CAEB         test  al, al  
     .text:5CA8CAED         jnz   short loc_5CA8CB0C  
     .text:5CA8CAEF         cmp   [ebp+var_8], 10h  
     .text:5CA8CAF3         lea   eax, [ebp+var_1C]  
     .text:5CA8CAF6         push  offset a_googleplex_co ; "*.googleplex.com"  
     .text:5CA8CAFB         cmovnb eax, [ebp+var_1C]  
     .text:5CA8CAFF         push  eax  
     .text:5CA8CB00         call  sub_5CA957C0
corp.google.com和googleplex.com返回登录提示，似乎仅供Google员工使用。
prod.google.com是一个不存在的域，可能是一个内部域。
**如何触发bug**
“onmessage”函数接收一个VARIANT，该VARIANT需要一个JavaScript回调函数，该函数由控件调用。这可以通过以下代码测试。