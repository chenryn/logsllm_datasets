period的格式可以是cCYYMM或YYMM（它们都不是日期值）。
返回时间段值 period 加上n 个月后得到的结果。返回值的格式是cCYYMM。输入参数
器刚开始执行的那一刻的日期/时间值。建议把这种行为与 SYSDATE（)的行为做个对比。
多长时间。如果是包含在某个存储函数或触发器里的NOW（）函数，它返回的是该函数或触发
NOW（）函数返回的是它所在的语句刚开始执行的那一刻的日期/时间值，不管那条语句会执行
返回会话时区的当前日期和时间，它是一个'CCYY-MM-DDhh:mm: Ss"格式的DATETIME
MONTHNAME('2002-00-01')
MONTHNAME(*2002-12-01*)
系统变量lc_time_names 决定了月份名字语言。
以字符串形式返回日期值
MONTH('2002-00-01')
返回日期值date中的月份值，范围是0~12（0表示日期部分没有月份表示）。
PERIOD_ADD(201002,12)
NOW()
值
MONTHNAME(20021201）
MONTH(20021201)
MONTH('2002-12-01')
MINUTE(123158)
MINUTE(12:31:58)
，自MySQL5.6.4开始，可以给出fsp参数，以指定返回值应该拥有的小数秒精度（0~6
直date中的月份名字；对于没有月份部分的日期，则返回NULL。
→'08:17:14
↓
-200711
→201102
→2012-02-0412:51:22
NULL
人
'December
'December
12
12
这些参数的格式可以是
C.2
函数
591
---
## Page 612
592
TIME_TO_SEC(time)
TIME_FORMAT(time,format)
TIME(expr)
SYSDATE()
SUBTIME(expr1,expr2)
SUBDATE(date,INTERVAL expr.interval)
SEC_TO_TIME(29834)
TIME_TO_SEC(*08:17:14')
SEC_TO_TIME（）函数，重新转换回一个时间值。
把参数time给出的时间值换算为相应的秒数，并返回该秒数。此函数的返回值可以传递到
TIME_FORMAT(123158,%H%i')
TIME_FORMAT（12:31:58,%H%i)
致返回NULL值或0。
DATE_FORMAT（）函数里使用的相似，只是仅允许使用与时间有关的说明符。其他说明符将导
串。此函数也接受DATETIME或TIMESTAMP类型的参数。这里使用的格式化字符串和
根据format 参数给定的格式化字符串格式对time参数的值进行格式化，并返回结果字符
TIME(*2005-03-1216:15:00)
返回expr参数中的时间部分，expr应该是一个时间值或一个日期/时间值。
TIME(16:15:00')
器时带上--sysdate-is-now选项。
函数的描述。）如果想让SYSDATE（）函数的行为和NOW（）函数的一样，则需要在启动服务
和时间值；而NOW（）函数返回的是它所在的语句开始执行时的时间。（更多细节请参考NOW（）
值。此函数类似于NOW（）函数，不同之处在于：SYSDATE（）函数返回的是它执行时的日期
返回会话时区的当前日期和时间，它是一个'CCYY-MM-DDhh:mm:Ss'格式的DATETIME
SUBTIME(*2009-01-0100:00:00′,*12:30:00)
SUBTIME(06:30:00.5,12:30:00.4)
值，expr2应该是一个时间值。
用第一个表达式减去第二个表达式并返回其结果。expr1 应该是一个时间值或日期/时间
SUBDATE('2009-12-01',30)
它减去一个天数，最后返回计算结果。这与ADDDATE（）函数的相应语法很相似。
对于第二种语法格式，
SUBDATE(2009-12-01′,INTERVAL1MONTH)
它减去一段时间间隔，
对于第一种语法格式，
SUBDATE(date,expr)
STR_TO_DATE('3/16/1960',%m-%d-8Y')
STR_TO_DATE('3/16/196012:20:32',*%m/%d/%Y8H:8i:%s')
STR_TO_DATE('12.20.32,
STR_TO_DATE('3/16/1960',%m/%d/%Y')
无法用给定的格式字符串解释，则返回结果为NULL。
函数描述里列出的格式说明符也都可以用在STR_TO_DATE（）函数里。如果str值非法或者
的时态值。STR_TO_DATE（）函数是DATE_FAORMAT（）函数的逆向操作，DATE_FAORMAT（）
格式化说明符返回一个TIME、DATE或DATETIME值。你可以利用此函数来解释非ISO格式
附录C操作符与函数参考
，SUBDATE（）函数通过date参数读入一个日期值或日期/时间值，
，SUBDATE（）函数通过date参数读入一个日期值或日期/时间值，用
最后返回计算结果。
%H.%i.%S')
。此函数等同于DATE_SUB（）函数。
→'2009-11-01'
→16:15:00
→16:15:00
→'2009-11-01
↑
↓
2008-12-3111:30:00
'08:17:14'
29834
12
'12
-05:59:59.900000
1960-03-1612:20:32
'1960-03-16
31
用
---
## Page 613
TO_SECONDS(expr)
TO_DAYS(date)
TIMESTAMPDIFF(interval,expr1,expr2)
TIMESTAMPADD(interval,exprl,expr2)
 TIMESTAMP(exprl[, expr2] )
 TIMEDIFF (expr1, expr2)
TO_SECONDS(*1790-07-17*)
NULL。
返回给定日期或日期/时间表达式所对应的自0年以来的秒数；如果参数无效，则返回
TO_DAYS（）函数只适用于公历日期（起始于公元1582年）。
TO_DAYS(2010-12-0112:14:37)
如果给出的是一个DATETIME或TIMESTAMP值，TO_DAYS（）函数将忽略时间部分。
FROM_DAYS(734472)
TO_DAYS('2010-12-01')
的返回值可以传递到FROM_DAYS（），重新转换回一个日期值。
把 date参数所给出的日期值转换为从公元0年开始计算的天数，并返回结果数值。此函数
TIMESTAMPDIFF(DAY,*1995-07-01′,*1995-08-01)
里给出的一样。
值为单位返回计算结果。这里允许使用的interval参数值和TIMESTAMPADD（）函数描述
计算expri和expr2参数所给出的日期值或日期/时间值之间的差，然后以interval参数
TIMESTAMPADD(SQL_TSI_MONTH,12,'1995-07-01')
TIMESTAMPADD(MONTH,
TIMESTAMPADD(DAY,12,*1995-07-01*)
值在使用时都可以加上一个SQL_TSI_前缀。
MICROSECOND、SECOND、MINUTE、HOUR、
期值或日期/时间值相加，最后返回计算结果。允许使用的interval参数值
把exprl解释为一个以interval参数值为单位的整数，
TIMESTAMP('1985-12-14
TIMESTAMP('1985-12-14');
上，并返回计算结果TIMESTAMP 值。
DATETIME 值。如果有两个参数，那么函数将把参数expr2给出的时间值加到参数expr1
如果只有一个参数，那么函数将把éxpr1参数给定的日期值或日期/时间值转换为一个
TIMEDIFF(*09:30:45',*00:00:00')
间。它们应该都是时间值，或者都是日期/时间值，
计算并返回表达式expr1
TIME_TO_SEC('2012-03-26
略日期部分。
如果time参数给出的是一个DATETIME或TIMESTAMP值，那么TIME_TO_SEC（）函数将忽
TIMESTAMP('1985-12-14
12,*1995-07-01*)
09:00:00,
00:00:60
和
08:17:14*)
-18:00:00*）;
18:00:00）;
2的时间差，
DAY、WEEK、
这两个表达式分别表示开始时间和结束时
时间值和日期/时间值不能混用。
、MONTH、QUARTER 和 YEAR。这些
，把该整数与expr2参数给出的I
→56504044800
→734472
→
↑
→29834
734472
31
-09:30:45
2010-12-01
*1996-07-01*
*1996-07-01*
1995-07-13
1985-12-13
'1985-12-15
1985-12-14
1985-12-1409:00:00
1985-12-1400:00:00
C.2函数
15:00:00
18:00:00
03:00:00
593
滨
是
旧
---
## Page 614
594
WEEK(date[,mode])
UTC_TIMESTAMP([fsp])
UTC_TIME([fsp])
UTC_DATE()
UNIX_TIMESTAMP()
模式
数值及其含义。
每周的第一天，返回值的取值范围是0~53还是1~53。下表列出了所有允许使用的mode 参
个参数，它将返回一个有着同样含义的整数值，但要根据mode参数的值来决定以星期几为
数所给定的日期落在该年的第几周里。假定每周的第一天是星期日。如果向此函数传递两
如果只向此函数传递一个date参数，
UTC_TIMESTAMP()
位）。在MySQL5.6.4之前，所有的参数都会被忽略。那对括号是可选的，除非指定了fsp
自MySQL5.6.4开始，可以给出fsp参数，以指定返回值应该拥有的小数秒精度（0~6
返回当前的UTC日期/时间，它是一个！CCYY-MM-DD hh:mm：Ss'格式的DATETIME值。
UTC_TIME(3)
所有的参数都会被忽略。那对括号是可选的，除非指定了fsp参数。
返回当前的UTC时间，它是一个hh:mm:Ss'格式的TIME值。
UTC_DATE()
返回当前的UTC日期，它是一个'CCYY-MM-DD'格式的 DATE值。那对括号是可选的。
UNIX_TIMESTAMP(20071201)
UNIX_TIMESTAMP('2007-12-01')
UNIX_TIMESTAMP()
TIMESTAMP列里的值已经是UTC时间的格式了）
话时区中的值并转换为一个UTC 格式的值，但来自TIMESTAMP列的值例外（因为存放在
或者以 CCYYMMD或 YYMMD格式的数值形式给出。服务器将把date参数值解释为一个会
参
UTC_TIME()
给
的秒数。date 参数可以用多种方法给出：以 DATE、DATETIME 或TIMESTAMP 形式给出，
秒数。如果通过 date 参数给出一个日期值，此函数将返回基准时间与 date 参数日期之间
如果不带任何参数，此函数将返回从UTC基准时间·1970-01-0100：00：00＇开始计算的
UNIX_TIMESTAMP(date)
附录C操作符与函数参考
数。
合出fsp参数，以指定返回值应该拥有的小数秒精度（0到6位）。
星期-
星期日
星期一
星期日
星期一
星期日
星期一
星期日
起始
旧
返回值范围
1~53
0~
~0
1~53
1~
0~53
0~53
，它将返回一个0到53之间的整数值，表明由date参
第一周是第一个包含星期一的周
第
第
第
第
第一周是第一个包含星期日的
第一周是第一个多于3天的周
第一周是第一个包含星期日的周
一周是第一个多于3天的周