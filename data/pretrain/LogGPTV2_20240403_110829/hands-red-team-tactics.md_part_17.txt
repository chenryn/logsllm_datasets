### Current Status of Empire C2 Server
Currently, there are three active listeners and four active agents on our Empire C2 server.

### Managing Listeners
To manage the listeners, navigate to the **Listeners** menu:
![](media/image543.jpeg)

Similarly, stagers can be managed and generated from the **Stagers** menu:
![](media/image544.jpeg)

### Managing Agents
Agents can be managed from the **Agents** menu, which also includes additional features:
![](media/image545.jpeg)

Once an agent is active, you can use the supported post-exploitation modules from the **Modules** menu:
![](media/image546.jpeg)

### Viewing Credentials and Logs
Saved credentials can be viewed from the **Credentials** menu:
![](media/image547.jpeg)

Logged events can be viewed from the **Reporting** menu. This page allows you to trace the modules used in post-exploitation scenarios:
![](media/image548.jpeg)

### Detailed Steps for Listener Management

1. **List All Listeners:**
   - Go to **Listeners** and then **Show All Listeners** to list all running listeners:
     ![](media/image549.jpeg)
   - Currently, there are three listeners running: `http`, `Empire`, and `DeathStar`:
     ![](media/image550.jpeg)

2. **Create a New Listener:**
   - To create a new listener, go to **Listeners** and then **Create a Listener**:
     ![](media/image551.jpeg)
   - Select the type of listener from the **Listener Type** drop-down list. For this example, we will use the `http` listener type:
     ![](media/image552.jpeg)
   - After selecting `http`, configure the listener settings and set the name:
     ![](media/image553.jpeg)
   - Click the **Create** button to start the listener. You will receive a message confirming that the listener has been successfully started:
     ![](media/image554.jpeg)
   - Verify the new listener by going to **Listeners** and then **Show All Listeners**:
     ![](media/image555.jpeg)
   - Confirm the listener from the Empire CLI:
     ![](media/image556.jpeg)

3. **Kill a Listener:**
   - To kill a listener, go to **Listeners** and then **Kill Listener(s)**:
     ![](media/image557.jpeg)
   - Select the listener to kill from the drop-down list and click the **Kill Now** button:
     ![](media/image558.jpeg)
     ![](media/image559.jpeg)

### Stager Management

1. **Show All Stagers:**
   - To show all stagers, go to **Stagers** and then **Show All Stagers**:
     ![](media/image560.jpeg)
   - Here, you can find all the supported stagers for Empire:
     ![](media/image561.jpeg)

2. **Generate a Stager:**
   - To generate a stager, go to **Stagers** and click on **Generate Stager**:
     ![](media/image562.jpeg)
   - Select the desired stager and configure its options:
     ![](media/image563.jpeg)
   - Click the **Generate** button to generate the stager. The web interface will display a **Stager Output** message:
     ![](media/image564.jpeg)
   - Click the **Decode** button to get the one-liner command:
     ![](media/image565.jpeg)

### Agent Management

1. **List All Agents:**
   - To list all agents, go to **Agents** and then **Show All Agents**:
     ![](media/image566.jpeg)

2. **View Agent Information:**
   - To view information about a specific agent, click on the **Agent Name**:
     ![](media/image567.jpeg)

3. **Execute Shell Commands:**
   - To execute shell commands, go to **Agents** and then **Agent Run Shell Command**:
     ![](media/image568.jpeg)
   - A new page will open with two options: **Task Agent to Run a Shell Command** and **Agent Output**:
     ![](media/image569.jpeg)
   - Select the agent from the drop-down list and enter the command. For example, using the `id` command:
     ![](media/image570.jpeg)
   - Upon successful execution, the output will not be shown immediately. To view the output, select the same agent from the second drop-down list and click **Show Result**:
     ![](media/image571.jpeg)
     ![](media/image572.jpeg)

### Post-Exploitation Modules

1. **List All Modules:**
   - To list all available modules, go to **Modules** and click on **Show All Modules**:
     ![](media/image573.jpeg)
   - You will see the following list:
     ![](media/image574.jpeg)

2. **Execute a Module:**
   - To execute a module, go to **Modules** and click on **Execute Module**:
     ![](media/image575.jpeg)
   - Select the module from the drop-down list. For this example, we will use the `screenshot` Python module:
     ![](media/image576.jpeg)
     ![](media/image577.jpeg)
   - Click the **Choose** button to bring up the module options:
     ![](media/image578.jpeg)
   - Select the agent on which to run the module from the drop-down list:
     ![](media/image579.jpeg)
   - Click the **Execute Module** button to run the post-exploitation module. The agent will be tasked with the chosen module:
     ![](media/image580.jpeg)
   - To view the saved screenshots, go to **Agents** and then **View Screenshots**:
     ![](media/image581.jpeg)
   - Select the agent from the drop-down list and click **Show Screenshots**:
     ![](media/image582.jpeg)
   - A screenshot of the user's desktop will be displayed:
     ![](media/image583.jpeg)

### Browser Menu
The **Browser** menu shows the `/var/www/html/` directory, where you can deploy the web interface:
![](media/image584.jpeg)

### Empire-GUI
There is another GUI tool called **Empire-GUI**, officially released by the creators of the Empire tool. It is described as follows:
> *"The Empire Multiuser GUI is a graphical interface to the Empire post-exploitation Framework. It was written in Electron and utilizes websockets (SocketIO) on the backend to support multiuser interaction. The main goal of this project is to enable red teams, or any other color team, to work together on engagements in a more seamless and integrated way than using Empire as a command line tool."*
However, it only works with Empire version 3.0, which is currently in beta testing.

### Summary
In this chapter, we covered advanced uses of the Empire tool to gain access to the Domain Controller. We also used an automated Python script called DeathStar and explored Empire's use through a GUI web interface. In the next chapter, we will cover the basics of C2 and different architectures for setting up the red team infrastructure.

### Questions
1. Are there any other exploitation techniques to gain access to the Domain Controller?
2. What if the `bypassuac_eventvwr` module doesn't work? How can we escalate privileges without this module?
3. Will DeathStar always be able to retrieve the Domain Admin's credentials?
4. Is there a workaround if the `mimikatz` module doesn't work?
5. Is it necessary to have access to a domain user account for domain controller enumeration?

### Further Reading
- **Automating the Empire with the Death Star**: [https://byt3bl33d3r.github.io/automating-the-empire-with-the-death-star-getting-domain-admin-with-a-push-of-a-button.html](https://byt3bl33d3r.github.io/automating-the-empire-with-the-death-star-getting-domain-admin-with-a-push-of-a-button.html)

### Cobalt Strike - Red Team Operations
In [Chapter 4](#getting-started-with-cobalt-strike), *Getting Started with Cobalt Strike*, we learned about Cobalt Strike and how to set it up. We also learned about its interface and features. In this chapter, we will delve deeper into the tool and cover the following topics:
- Cobalt Strike listeners
- Cobalt Strike payloads
- Beacons
- Pivoting with Cobalt Strike
- Aggressor scripts

### Technical Requirements
- Metasploit Framework (MSF)
- PGSQL (Postgres)
- Oracle Java 1.7 or later
- Cobalt Strike

### Cobalt Strike Listeners
First, start the Cobalt Strike team server and connect to it. Once the interface is up and running, start a listener. A listener handles all incoming connections. To do this, go to the Cobalt Strike menu and choose **Listeners**:
![](media/image585.jpeg)

This will open a new window where you can create a name for the listener. Next, choose the payload type. Cobalt Strike has two kinds of listeners:
- **Beacon**: Handles connections from the beacon payload.
- **Foreign**: Passes sessions to another instance of Cobalt Strike or to Metasploit/Armitage.

In the new window, choose a name for your listener, select the payload type (e.g., `windows/beacon_https`), enter the host name and port number, and click **Save**:
![](media/image586.jpeg)
![](media/image587.jpeg)

For beacon payloads, provide the domain name and IP address of the system running the team server. Click **OK**:
![](media/image588.jpeg)

### Foreign-Based Listeners
Foreign-based listeners pass sessions to multiple Cobalt Strike instances or to Metasploit/Armitage. To do this, you must already have at least one compromised host. In the following example, we have a connected beacon:
![](media/image590.jpeg)

Start Metasploit/Armitage and run a handler:
![](media/image591.jpeg)

In Cobalt Strike, create a new foreign listener with the IP and port of the handler:
![](media/image592.jpeg)

Right-click on the host and select **Spawn**:
![](media/image593.jpeg)
![](media/image594.jpeg)

Choose the listener (e.g., `MSF`) and click **Choose**:
![](media/image595.jpeg)

A new Meterpreter session will open in the Metasploit window.

### Cobalt Strike Payloads
Cobalt Strike supports various attack types and allows easy payload generation from the menu. This is useful for red team activities. In this section, we will look at the different attack types and how to generate payloads for them.

#### Attack Types
- **Packages**: Generates HTML applications, MS Office macros, payloads, USB/CD AutoPlay, Windows droppers, and executables.
- **Web Drive-Bys**: Manages and deploys drive-by payloads, clones sites, and hosts files.
- **Spear Phishing**: Generates phishing emails with embedded payloads.

To view the different types of payloads, click on **Attacks** from the menu:
![](media/image596.jpeg)

#### Web Drive-By Options
- **Manage**: View and manage deployed drive-by payloads.
- **Clone Site**: Clone a site and add a payload manually or log keystrokes automatically.
- **Host File**: Host a file by creating a web server.

![](media/image597.jpeg)