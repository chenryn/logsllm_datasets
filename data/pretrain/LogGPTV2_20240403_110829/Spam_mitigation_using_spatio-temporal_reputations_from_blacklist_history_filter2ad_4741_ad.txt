Figure 8: Single IP Behavior w.r.t. Blacklisting
An application should seek a minimal set of dimensions to
best represent and classify its data.
6.3 Case Studies
Two case studies exemplify the types of spam behavior
able to evade blacklists, yet captured via PreSTA. First,
Fig. 8 shows the temporal sending patterns of a single spam-
ming IP address. This IP was blacklisted twice during the
course of the study (as indicated by shaded regions), and the
time between listings was small (≈ 2 days). The controller of
this IP address likely used blacklist counter-intelligence [22]
to increase the likelihood that spam would be delivered: No-
tice that no spam was observed when the IP was actively
listed, but 150 spam emails were received at other times.
Traditional blacklist are reactive, binary measures that do
not take history into account. During the intermittent pe-
riod between listings, as far as the blacklist is concerned,
the spamming IP is an innocent one. However, as shown in
Fig. 8, the IP-level reputation metric compounds prior evi-
dence. Thus, if PreSTA had been in use, the intermittent
inﬂux of email likely would have been identiﬁed as spam.
Secondly, Fig. 9 visualizes a case study at the AS-level
utilizing both spatial and temporal dimensions. In the early
stages of data collection anomalous activity was noticed at
a particular AS (AS#12743)8. Even when compared to the
other four worst performing ASes during the time block,
ASN-12743’s drop in reputation is astounding. Nearly its
entire address space, some 4,500 addresses, were blacklisted
over the course of several days – likely indicative of an ag-
gressive botnet-based spam campaign. After this, the repu-
tation increases exponentially (per the half-life), eventually
returning to innocent levels.
With traditional blacklists, an IP must actually send spam
In the ASN-12743 case, this
before it can be blacklisted.
means all 4,500 IPs had some window in which to freely
send spam. However, as the IPs were listed in mass, the
reputation of the AS drops at an alarming rate, losing more
than 50% of its value. Had PreSTA been implemented, the
reputation of the AS (and the blocks within) would have
been low enough to classify mails sourced from the remain-
der of the space as spam, mitigating the brunt of the attack.
6.4 Implementation Performance
An important aspect of PreSTA is its scalability, and
to best evaluate this our PreSTA simulation mimicked the
8PTK-Centertel, a major Polish mobile service provider.
n
o
i
t
t
a
u
p
e
R
l
e
v
e
L
-
S
A
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
AS-12743
AS-23860
AS-24827
AS-39924
06/01/09
07/01/09
08/01/09
09/01/09
Figure 9: Temporal Shift within Grouping (AS)
normal processing of a mail server. The blacklist history
and cached reputation scores were regulated so that only the
knowledge available at the time of arrival is used to evalu-
ate an email. PreSTA requires a warm-up period to gather
enough temporal knowledge to process correctly; hence, his-
torical blacklist storage began three months prior to the ﬁrst
email being scored.
The eﬀectiveness of the cache and the latency of the sys-
tem is also of interest. Caching is highly eﬀective: 56.8% of
block-level calculations are avoided, and 43.1% are avoided
at the IP-level (recall that all AS-level calculations are per-
formed oﬀ-line and then cached). The reputation of an in-
coming email is calculated in nearly real time, with the av-
erage email being processed in fractions of a second. Under
typical conditions, over 500,000 emails can be scored in an
hour, using commodity hardware.
Re-training the classiﬁers and rebuilding the AS-cache are
the most time consumptive activities. Fortunately, training
new classiﬁers takes only minutes of work for a 10,000 email
training set, and only needs to be performed every 4 days.
Re-training is also done oﬀ-line and does not aﬀect current
scoring. Rebuilding the AS reputation cache must be done
every 30 minutes, once new blacklist data is available, but
it need not delay current scoring as the previous AS-level
reputations are still relevant (at most 30 minutes old).
6.5 Spam Mitigation Performance
The spam detection capabilities of PreSTA are summa-
rized in Fig. 10. On average, 93% of spam emails are iden-
tiﬁed when used in conjunction with traditional blacklists.
This may seem to be a nominal increase over blacklists alone;
however, the inset of Fig. 10 is more intuitive – PreSTA
blocks between 20% and 50% of those mails passing the
Spamhaus blacklists, with a 25.7% average (identical to the
top line of Fig. 7). Had PreSTA been implemented on our
university mail server during the study, it would have caught
650,000 spam emails that evaded the Spamhaus blacklists.
Most interestingly, PreSTA provides consistent and
steady state detection. For example, consider the signif-
icant variations in blacklist performance seen throughout
the study (for example, in late August 2009 and in mid-
November 2009). PreSTA is nearly unaﬀected during these
periods and may be a useful stop-gap during variations in
blacklist accuracy. While the blockage-rates of the blacklists
ﬂuctuate 18% over the course of the study, PreSTA is far
more consistent, exhibiting just 5% of variance. Further,
 100
 95
 90
 85
 80
 75
t
h
g
u
a
C
m
a
p
S
f
o
%
l
a
t
o
T
PreSTA + Blacklists
Spamhaus Blacklists
 60
 40
 20
 0
%-Blocked Above Blacklist
08/04/09
09/01/09 10/01/09 11/01/09 12/01/09
Start Date of Classification (4-day blocks)
Figure 10: Blacklist and PreSTA Blockage
%
e
v
i
t
i
s
o
P
e
s
a
F
l
 2
 1.5
 1
 0.5
 0
 10
Performance
(26%, 0.5%)
Classification
switched for
large AS.
 20
 30
 40
 50
% Blockage Above Blacklist (Recall)
Figure 11: Characteristic ROC Trade-Oﬀ
it is likely that continued analysis will show similar varia-
tions in blacklist performance. Periods of high de-listing are
likely followed by periods of high re-listing as spammers try
to maximize the utility of available IPs.
Ultimately, the performance attainable by the classiﬁer is
dependent on the number of false-positives (FPs) tolerated.
To this point, the FP-rate has been ﬁxed at 0.5%; how-
ever, as exempliﬁed in Fig. 11, the FP-rate is tune-able and
strongly correlates with the blockage rate. The plot is gener-
ated over a characteristic interval of email from mid-October
2009, and is akin to the precision/recall graphs common in
machine-learning. We remind readers that the decision to
exclude intra-network emails from the dataset (see Sec. 5.1)
signiﬁcantly inﬂates the presented FP-rates.
7. EVASION AND GAMESMANSHIP
To be eﬀective, PreSTA must be robust to evasion and
gamesmanship – an entity should be unable to surrepti-
tiously inﬂuence its own reputation. Given the use of IP
blacklists as a feedback source, the most eﬀective way to
avoid PreSTA is to avoid getting blacklisted. However, such
a technique is not fail-safe; a single evasive entity may still
have poor reputation at broader granularity. When neg-
ative feedback exists, and an IP has been blacklisted, the
best recourse is patience. Over time, the weight of the list-
ing decays. As such, there is no way to evade PreSTA in
the temporal dimension.
However, spammers are migrant and the spatial dimen-
sion aﬀords greater opportunities. While IP and block mag-
nitudes are ﬁxed, an AS controls the number of IPs it broad-
casts. An actively evasive AS would ensure its entire allo-
169
cation is broadcasted. More maliciously, a spammer may
brieﬂy hijack IP space they were not allocated in order to
send spam from stolen IPs. Such spectrum agility was shown
by [21] to be an emergent spamming technique. Fortunately,
if the hijacked IP space was not broadcasted (i.e., unal-
located), emails from these IPs would map to the special
grouping “no AS”, whose reputation is zero (per Sec. 5.5).
However, if the hijacked space was broadcasted by a rep-
utable AS, evasion may be possible. Fortunately, [21] ob-
serves the use of unallocated space is most prevalent.
The previous scenario can be described as a sizing at-
tack and is of most concern to PreSTA. The entities being
evaluated should not be able to aﬀect the size of their spa-
tial groupings. However, this attack is only eﬀective when
the group size is non-singular, and an simple mitigation
technique is to always include a grouping function deﬁning
singular groups. Further, an implementation should assign
persistent identiﬁers to entities. When identiﬁers are non-
persistent, PreSTA could fall victim to a Sybil attack [10]
since an entity could evade negative feedback by simply
changing identiﬁers.
8. CONCLUSIONS
In this paper, we have introduced PreSTA, a novel repu-
tation model designed to combine the rich historical informa-
tion of blacklists and the spatial relationships of spamming
IPs. We have shown PreSTA reputations to be an eﬀective
measure for classifying spam, identifying up to 50% of spam
not caught by blacklists alone. Our preliminary implemen-
tation, which combines PreSTA with blacklists, mitigates
93% of spam on average and is stable – reducing the eﬀects
of blacklist ﬂuctuations. Finally, PreSTA proves scalable
and is able to eﬃciently handle production email workloads,
processing over 500k emails an hour.
Having demonstrated PreSTA’s proﬁciency in the ﬁeld
of spam detection, one must consider how this capability is
best utilized. Although we make no claims it can (or should)
replace content-based ﬁltering, PreSTA could be applied as
an initial ﬁlter or grey-listing mechanism. Alternatively, the
system could be used to prioritize the processing of incoming
email in high-volume situations. Since it is based on central-
ized blacklist information, PreSTA could be installed as a
parallel service provided by blacklist providers.
Further, PreSTA’s applicability is broader than email
spam. PreSTA has already proven eﬀective in the detection
of Wikipedia vandalism [30] and shows promise in other do-
mains ranging from prioritization of BGP announcements to
reputation for web-based service mash-ups. Any service that
requires dynamic decision making and has access to records
of historical feedback is a candidate. Ultimately, PreSTA
reputations may be utilized as an eﬀective means of perform-
ing dynamic access-control and mitigating malicious behav-
ior, two extremely relevant issues as service paradigms shift
to more distributed architectures.
9. ACKNOWLEDGMENTS
The authors would like to thank Wenke Lee and David
Dagon, both of Georgia Tech, for their initial guidance on
this project. Additional thanks go to Charles ‘Chip’ Buch-
holtz of UPenn-CETS, who performed mail dumps and aided
us in obtaining permission to process those logs.
170
References
[1] Apache SpamAssassin. http://spamassassin.apache.org/.
[2] CAIDA. http://www.caida.org/.
[3] DNSBL.info: Blacklists. http://www.dnsbl.info/dnsbl-list.php.
[4] Internet Assigned Numbers Authority. http://www.iana.org/.
[5] MessageLabs Intelligence. http://www.messagelabs.com/.
[6] Proofpoint, Inc. http://www.proofpoint.com/.
[7] Spamhaus Project. http://www.spamhaus.org/.
[8] Univ. of Oregon Route Views. http://www.routeviews.org/.
[9] M. Blaze, S. Kannan, A. D. Keromytis, I. Lee, W. Lee, O. Sokol-
sky, and J. M. Smith. Dynamic trust management. IEEE Com-
puter (Special Issue on Trust Mangement), 2009.
[10] J. Douceur. The Sybil attack. In 1st IPTPS, March 2002.
[11] S. Hao, N. A. Syed, N. Feamster, A. G. Gray, and S. Krasser. De-
tecting spammers with SNARE: Spatio-temporal network-level
automated reputation engine. In USENIX Security Sym., 2009.
[12] IronPort Systems Inc. Reputation-based mail ﬂow control. White
Paper, 2002. (SenderBase).
[13] T. Joachims. Advances in Kernel Methods - Support Vector
Learning, chapter Making Large-scale SVM Learning Practical,
pages 169–184. MIT Press, Cambridge, MA, 1999.
[14] A. Jøsang, R. Hayward, and S. Pope. Trust network analysis
with subjective logic. In Proceedings of the 29th Australasian
Computer Science Conference, 2006.
[15] J. Jung and E. Sit. An empirical study of spam traﬃc and the
use of DNS black lists. In Proc. of the 4th ACM SIGCOMM
Conference on Internet Measurement, pages 370–375, 2004.
[16] S. D. Kamvar, M. T. Schlosser, and H. Garcia-molina. The Eigen-
Trust algorithm for reputation management in P2P networks. In
Proc. of the Twelfth WWW Conference, May 2003.
[17] B. Krebs.
Host of
Internet
spam groups
is cut oﬀ.
http://www.washingtonpost.com/wp-dyn/content/article/2008/
11/12/AR2008111200658.html, November 2008. (McColo).
[18] B. Krebs.
shuts down N. Calif. web host-
ing ﬁrm. http://voices.washingtonpost.com/securityfix/2009/
06/ftc_sues_shuts_down_n_calif_we.html, June 2009. (3FN).
FTC sues,
[19] Z. Qian, Z. Mao, Y. Xie, and F. Yu. On network-level clusters
for spam detection. In Proceedings of the 17th Annual Network
and Distributed System Security Symposium (NDSS), 2010.
[20] A. Ramachandran, D. Dagon, and N. Feamster. Can DNSBLs
keep up with bots? In Proc. of the 3rd CEAS, 2006.
[21] A. Ramachandran and N. Feamster. Understanding the network-
level behavior of spammers. In Proc. of SIGCOMM 2006, 2006.
[22] A. Ramachandran, N. Feamster, and D. Dagon. Revealing bot-
net membership using DNSBL counter-intelligence. In USENIX:
Steps to Reducing Unwanted Traﬃc on the Internet, 2006.
[23] A. Ramachandran, N. Feamster, and S. Vempala. Filtering spam
with behavioral blacklisting. In Proc. of Computer and Com-
munications Security (CCS ’07), pages 342–351, 2007.
[24] M. Sahami, S. Dumais, D. Heckerman, and E.Horvitz. A
Bayesian approach to ﬁltering junk e-mail. In AAAI-98 Work-
shop on Learning for Text Categorization, 1998.
[25] S. Sinha, M. Bailey, and F. Jahanian. Improving spam blacklist-
ing through dynamic thresholding and speculative aggregation.
In Proceedings of the 17th NDSS, 2010.
[26] Symantec Corportation.
IP reputation investigation. http://
ipremoval.sms.symantec.com/.
[27] S. Venkataraman, A. Blum, D. Song, S. Sen, and O. Spatscheck.
Tracking dynamic sources of malicious activity at internet scale.
In Neural Information Processing Systems ’09, 2009.
[28] S. Venkataraman, S. Sen, O. Spatscheck, P. Haﬀner, and D. Song.
Exploiting network structure for proactive spam mitigation. In
16th USENIX Security Symposium, pages 149–166, 2007.
[29] A. G. West, A. J. Aviv, J. Chang, V. S. Prabhu, M. Blaze,
S. Kannan, I. Lee, J. M. Smith, and O. Sokolsky. QuanTM:
A quantitative trust management system. In EUROSEC 2009,
pages 28–35, March 2009.
[30] A. G. West, S. Kannan, and I. Lee. Detecting Wikipedia vandal-
ism via spatio-temporal analysis of revision metadata. In EU-
ROSEC ‘10, pages 22–28, Paris, France, 2010.
[31] Y. Xie, F. Yu, K. Achan, E. Gillum, M. Goldszmidt, and T. Wob-
ber. How dynamic are IP addresses? In SIGCOMM ’07, 2007.