ld.so.8
    michael kerrisk  [yubin ruan]
        simplify language around conferring capabilities
            the statement "conferring permitted or effective capabilities"
            to the process is somewhat redundant. binaries with capabilities
            confer capabilities only to those process capability sets, so it's
            simpler to just say "confers capabilities to the process".
==================== changes in man-pages-4.15 ====================
released: 2018-02-02, palo alto
contributors
------------
the following people contributed patches/fixes or (noted in brackets
in the changelog below) reports, notes, and ideas that have been
incorporated in changes in this release:
adam liddell 
andrea parri 
andries e. brouwer 
elie roudninski 
eric benton 
florian weimer 
g. branden robinson 
jakub wilk 
joel williamson 
john hubbard 
jorgen hansen 
keno fischer 
michael kerrisk 
michal hocko 
neilbrown 
nikola forró 
nikolay borisov 
pradeep kumar 
qingfeng hao 
ricardo biehl pasquali 
roblabla 
roman gushchin 
shawn landden 
stefan hajnoczi 
stefan raspl 
tejun heo 
apologies if i missed anyone!
new and rewritten pages
-----------------------
s390_sthyi.2
    qingfeng hao  [michael kerrisk]
        new page for s390-specific s390_sthyi(2)
network_namespaces.7
    michael kerrisk
        new page describing network namespaces
            based on content moved from namespaces(7)
vsock.7
    stefan hajnoczi  [jorgen hansen, michael kerrisk]
        document the vsock socket address family
newly documented interfaces in existing pages
---------------------------------------------
cgroups.7
    michael kerrisk  [tejun heo]
        document cgroups v2 "thread mode"
    michael kerrisk  [tejun heo]
        document cgroup v2 delegation via the 'nsdelegate' mount option
    michael kerrisk
        document the cgroup.max.depth and cgroup.max.descendants files
    michael kerrisk
        document 'release_agent' mount option
    michael kerrisk  [roman gushchin]
        document /sys/kernel/cgroup/delegate
    michael kerrisk  [roman gushchin]
        document /sys/kernel/cgroup/features
    michael kerrisk  [roman gushchin]
        document cgroups v2 cgroup.stat file
global changes
--------------
various pages
    g. branden robinson
        standardize on "nonzero"
            also add this term to the style guide in man-pages(7).
changes to individual pages
---------------------------
bpf.2
    nikolay borisov
        sync list of supported map types with 4.14 kernel
copy_file_range.2
    michael kerrisk
        library support was added in glibc 2.27
    shawn landden
        glibc provides a user-space emulation where the system call is absent
    florian weimer
        efbig errors are possible, similar to write(2)
    michael kerrisk
        errors: add eisdir
    michael kerrisk
        order errors alphabetically
    michael kerrisk
        add comment to code example explaining use of syscall(2)
fcntl.2
read.2
write.2
    neilbrown
        document "lost locks" as cause for eio.
            if an advisory lock is lost, then read/write requests on any
            affected file descriptor can return eio - for nfsv4 at least.
memfd_create.2
    michael kerrisk
        glibc support for memfd_create() was added in version 2.27
mlock.2
    michael kerrisk
        make details for mlock_onfault a little more explicit
    michael kerrisk
        glibc support for mlock2() is added in version 2.27
mmap.2
    john hubbard  [michael hocko]
        map_fixed is no longer discouraged
            map_fixed has been widely used for a very long time, yet the man
            page still claims that "the use of this option is discouraged".
    john hubbard
        map_fixed updated documentation
                -- expand the documentation to discuss the hazards in
                   enough detail to allow avoiding them.
                -- mention the upcoming map_fixed_safe flag.
                -- enhance the alignment requirement slightly.
mount.2
    keno fischer  [michael kerrisk]
        add einval error condition when ms_binding mnt_locked submounts
mprotect.2
pkey_alloc.2
    michael kerrisk
        glibc support for memory protection keys was added in version 2.27
perf_event_open.2
    michael kerrisk
        see also: add perf(1)
pkey_alloc.2
    michael kerrisk
        clarify description of pkey_alloc() 'flags' argument
prctl.2
    michael kerrisk
        defer to capabilities(7) for discussion of the "keep capabilities" flag
recvmmsg.2
sendmmsg.2
    nikola forró
        point out that error handling is unreliable
seccomp.2
    michael kerrisk
        clarify that seccomp_ret_trap sigsys signal is thread-directed
syscalls.2
    michael kerrisk
        add s390-specific s390_sthyi(2) to syscall list
unshare.2
    michael kerrisk
        clarify that eusers occurred only until kernel 4.8
errno.3
    michael kerrisk
        'errno -s' can be used to search for errors by string in description
    michael kerrisk
        add linux error text corresponding to enomem
fgetpwent.3
    michael kerrisk
        add missing attributes preamble
fts.3
    michael kerrisk  [pradeep kumar]
        fts_pathlen = strlen(fts_path) + strlen(fts_name)
fuse.4
    michael kerrisk
        places errors in alphabetical order (no content changes)
veth.4
    michael kerrisk
        add network_namespaces(7)
sysfs.5
    michael kerrisk
        refer to cgroups(7) for information about files in /sys/kernel/cgroup
capabilities.7
    michael kerrisk
        note which capability sets are affected by secbit_no_setuid_fixup
            note explicitly that secbit_no_setuid_fixup is relevant for
            the permitted, effective, and ambient capability sets.
    michael kerrisk
        deemphasize the ancient prctl(2) pr_set_keepcaps command
            the modern approach is secbits_keep_caps.
    michael kerrisk
        clarify effect of cap_setfcap
            make it clear that cap_setfcap allows setting arbitrary
            capabilities on a file.
    michael kerrisk
        clarify which capability sets are effected by secbit_keep_caps
            this flag has relevance only for the process permitted and
            effective sets.
    michael kerrisk
        rephrase cap_setpcap description
            * mention kernel versions.
            * place current kernel behavior first
    michael kerrisk
        secbit_keep_caps is ignored if secbit_no_setuid_fixup is set
    michael kerrisk
        ambient set is also cleared when uids are set to nonzero value
cgroups.7
    michael kerrisk
        add a more complete description of cgroup v1 named hierarchies
    michael kerrisk
        add a section on unmounting cgroup v1 filesystems
    michael kerrisk
        add subsection describing cgroups v2 subtree delegation
    michael kerrisk
        mention enoent error that can occur when writing to subtree_control file
    michael kerrisk
        add list of currently available version 2 controllers
    nikolay borisov
        add information about rdma controller
    michael kerrisk
        rewrite the description of cgroup v2 subtree control
    michael kerrisk  [tejun heo]
        note linux 4.11 changes to cgroup v2 delegation containment rules
    michael kerrisk
        systemd(1) nowadays automatically mounts the cgroup2 filesystem
    michael kerrisk
        clarify that cgroup.controllers is read-only
    michael kerrisk
        elaborate a little on problems of splitting threads across cgroups in v1
    michael kerrisk  [tejun heo]
        tweak the description of delegation of cgroup.subtree_control
ip.7
    ricardo biehl pasquali
        inaddr_* values cannot be assigned directly to 's_addr'
    michael kerrisk
        s/inaddr_any/inaddr_loopback/ in discussion of htonl()
            inaddr_loopback is a better example, since it is not
            byte-order neutral.
namespaces.7
network_namespaces.7
    michael kerrisk
        move content from namespaces(7) to network_namespaces(7)
pid_namespaces.7
    michael kerrisk
        see also: add mount_namespaces(7)
sched.7
    michael kerrisk  [andrea parri]
        correctly describe effect of priority changes for rt threads
            the placement of a thread in the run queue for its new
            priority depends on the direction of movement in priority.
            (this appears to contradict posix, except in the case of
            pthread_setschedprio().)
user_namespaces.7
    michael kerrisk
        mention ns_get_owner_uid ioctl() operation
==================== changes in man-pages-4.16 ====================
released: 2018-04-30, munich
contributors
------------
the following people contributed patches/fixes or (noted in brackets
in the changelog below) reports, notes, and ideas that have been
incorporated in changes in this release:
adam borowski 
andy owen 
carlos o'donell 
carsten grohmann 
elvira khabirova 
enrique garcia 
frederic brault 
heinrich schuchardt 
howard johnson 
jakub wilk 
jan kara 
jann horn 
john hubbard 
jürg billeter 
konstantin grinemayer 
konstantin khlebnikov 
martin mares 
mathieu desnoyers 
mattias andrée 
michael kerrisk 
michal hocko 
mike frysinger 
nikos mavrogiannopoulos 
robin kuzmin 
ross zwisler 
rusty russell 
serge e. hallyn 
song liu 
tomi salminen 
apologies if i missed anyone!
newly documented interfaces in existing pages
---------------------------------------------
membarrier.2
    mathieu desnoyers  [michael kerrisk]
        document new membarrier commands introduced in linux 4.16
            document the following membarrier commands introduced in
            linux 4.16:
                membarrier_cmd_global_expedited
                    (the old enum label membarrier_cmd_shared is now an
                    alias to preserve header backward compatibility)
                membarrier_cmd_register_global_expedited
                membarrier_cmd_private_expedited_sync_core
                membarrier_cmd_register_private_expedited_sync_core
mmap.2
    jan kara  [ross zwisler, michael kerrisk]
        add description of map_shared_validate and map_sync
    michal hocko  [john hubbard, michael kerrisk, jann horn]
        document new map_fixed_noreplace flag
            4.17+ kernels offer a new map_fixed_noreplace flag which allows
            the caller to atomically probe for a given address range.
readv.2
io_submit.2
    jürg billeter
        document rwf_append added in linux 4.16
capabilities.7
    michael kerrisk
        describe file capability versioning
    michael kerrisk  [serge e. hallyn]
        document namespaced-file capabilities
        [there's still more work to be done on this new text]
changes to individual pages
---------------------------
bpf.2
    michael kerrisk
        update list of architectures that support jited ebpf
            and note kernel version numbers where support is added.
    michael kerrisk
        kernel 4.15 added config_bpf_jit_always_on
            this causes the jit compiler to be always on and
            forces bpf_jit_enable to 1.
execve.2
    michael kerrisk
        note that describing execve as "executing a new process" is misleading
            this misdescription is so common that it's worth calling it out
            explicitly.
    michael kerrisk
        more explicitly describe effect of execve() in the opening paragraph
fallocate.2
    michael kerrisk
        since linux 4.16, btrfs supports falloc_fl_zero_range
getrlimit.2
    michael kerrisk
        cap_sys_resource capability is required in *initial user namespace*
io_submit.2
    michael kerrisk
        add kernel version numbers for various 'aio_rw_flags' flags
    michael kerrisk
        place 'aio_rw_flags' in alphabetical order
mmap.2
    jann horn
        map_fixed is okay if the address range has been reserved
            clarify that map_fixed is appropriate if the specified address
            range has been reserved using an existing mapping, but shouldn't
            be used otherwise.
    michael kerrisk
        move the text on map_fixed to notes
            this text has become rather long, making it somewhat
            unwieldy in the discussion of the mmap() flags. therefore,
            move it to notes, with a pointer in description referring
            the reader to notes.
    michael kerrisk  [heinrich schuchardt]
        clarify that when addr==null, address chosen by kernel is page-aligned
    michael kerrisk
        add a little historical detail on the obsolete map_denywrite
mount.2
    michael kerrisk
        errors: add ebusy for the case of trying to stack same mount twice
    michael kerrisk
        remove a couple of obsolete ebusy errors
            as far as i can tell, these ebusy errors disappeared
            with the addition of stackable mounts in linux 2.4.
msgget.2
semget.2
shmget.2
    michael kerrisk
        the purpose of "flags" == 0 is to obtain id of an existing ipc object
            this was implied in these pages, but the meaning of "flags" == 0
            could be more explicit, as indicated by questions such as
            https://stackoverflow.com/questions/49833569/flag-value-of-semget-function
open.2
    jann horn
        document more -etxtbsy conditions
    jakub wilk
        add missing argument for snprintf() in example code
perf_event_open.2
    song liu
        add type kprobe and uprobe
            two new types kprobe and uprobe are being added to
            perf_event_open(), which allow creating kprobe or
            uprobe with perf_event_open. this patch adds
            information about these types.
ptrace.2
    jann horn
        copy retval info for seccomp_get_filter to right section
            the "return value" section made a claim that was incorrect for
            ptrace_seccomp_get_filter. explicitly describe the behavior of
            ptrace_seccomp_get_filter in the "return value" section (as
            usual), but leave the now duplicate description in the section
            describing ptrace_seccomp_get_filter, since the
            ptrace_seccomp_get_filter section would otherwise probably become
            harder to understand.
readv.2
    michael kerrisk
        remove redundant sentence
seccomp.2
    michael kerrisk
        note that execve() may change syscall numbers during life of process
            on a multiarch/multi-abi platform such as modern x86, each
            architecture/abi (x86-64, x32, i386)has its own syscall numbers,
            which means a seccomp() filter may see different syscall numbers
            over the life of the process if that process uses execve() to
            execute programs that has a different architectures/abis.
    michael kerrisk
        note which architectures support seccomp bpf
    michael kerrisk
        in example, clearly note that x32 syscalls are >= x32_syscall_bit
shutdown.2
    carsten grohmann
        see also: add close(2)
syscall.2
    adam borowski
        add riscv
wait.2
    michael kerrisk  [robin kuzmin]
        wait() and waitpid() block the calling thread (not process)
wait4.2
    michael kerrisk  [martin mares]
        soften the warning against the use of wait3()/wait4()
            these functions are nonstandard, but there is no replacement.
            see https://bugzilla.kernel.org/show_bug.cgi?id=199215
crypt.3
encrypt.3
    carlos o'donell  [michael kerrisk]
        add notes about _xopen_crypt
            the distribution may choose not to support _xopen_crypt in the
            case that the distribution has transitioned from glibc crypt to
            libxcrypt.
fseek.3
    michael kerrisk  [andy owen]
        errors: ebadf should be espipe
    michael kerrisk
        improve epipe error text
getcwd.3
    carlos o'donell
        mention that "(unreachable)" is no longer returned for glibc >= 2.27.
makedev.3
    michael kerrisk
        since glibc 2.28,  no longer defines these macros
pthread_create.3
    frederic brault
        note default thread stack size for several architectures
tsearch.3
    jann horn
        clarify items vs nodes
            the manpage claimed that tsearch() returns a pointer to a data
            item. this is incorrect; tsearch() returns a pointer to the
            corresponding tree node, which can also be interpreted as a
            pointer to a pointer to the data item.
            since this api is quite unintuitive, also add a clarifying
            sentence.
    jann horn
        tdelete() can return dangling pointers
            posix says that deleting the root node must cause tdelete() to
            return some unspecified non-null pointer. glibc implements it by
            returning a dangling pointer to the (freed) root node.
            therefore, explicitly note that tdelete() may return bad pointers
            that must not be accessed.
elf.5
    michael kerrisk
        see also: add patchelf(1)
filesystems.5