# CVE-2019-11270：Cloud Foundry UAA 中的提权漏洞分析

#### 译文声明
本文为翻译文章，原文作者为 twistlock，发布于 twistlock.com。译文仅供参考，具体内容及含义以原文为准。

在四月份，我向 Cloud Foundry 安全团队报告了 Cloud Foundry UAA（用户帐户和身份验证服务器）中的两个漏洞，这两个漏洞分别被分配了 CVE-2019-11268 和 CVE-2019-11270 的编号。在[前一篇文章](https://www.twistlock.com/labs-blog/cloud-foundry-uaa-cve-2019-11268-identity-zones-sql-vulnerability/)中，我们讨论了 CVE-2019-11268，这是一个 SQL 注入漏洞，允许在 UAA 身份区域内泄露信息。

直到上周（2019 年 8 月 1 日），当 CF 公开披露并发布了补丁版本 [UAA v73.7](https://github.com/cloudfoundry/uaa/releases/tag/v73.7.0) 后，我才能公开讨论 CVE-2019-11270。CVE-2019-11270 是一个高危提权漏洞，涉及到 UAA 对 `clients.write` 作用域（权限）的实现。拥有该易受攻击作用域的恶意客户端能够创建具有任意作用域的新客户端，并获得对 UAA 服务器及其管理的应用程序（如 CF 部署）的完全控制权。

如果您使用 UAA 作为独立的 OAuth2 服务器或在 CF 部署中，请务必阅读本文最后的“我是否受到影响？”部分，其中包含识别您的环境中是否存在此漏洞的简单命令。

## 0x01 基础知识

### UAA
Cloud Foundry UAA（用户帐户和身份验证）是一个提供身份管理和访问控制的 OAuth2 服务器。它不仅可以在 CF 部署中使用，还可以作为任何环境中的 OAuth2 服务器运行。

在我的[之前的文章](https://www.twistlock.com/labs-blog/cloud-foundry-uaa-cve-2019-11268-identity-zones-sql-vulnerability/)中，已经介绍了一些 UAA 的基本概念，例如访问令牌、客户端和作用域。为了更好地理解 OAuth2 授权流程以及相关漏洞，我们将通过插图重新回顾这些概念。

### OAuth2
UAA 服务器实现了广泛使用的 OAuth2 授权协议。许多人可能都经历过基于 OAuth 的授权过程，例如在使用 Facebook 帐户注册 eBay 等网站时，授权网站获取对该帐户的部分权限，比如读取电子邮件地址或代表您发布内容。

简化的 OAuth2 授权流程通常包括以下步骤：
1. 用户访问第三方应用。
2. 应用请求用户的授权。
3. 用户同意授权。
4. 应用从授权服务器获取访问令牌。
5. 应用使用访问令牌访问资源服务器上的资源。

### 资源服务器和访问令牌
资源服务器是指承认由 UAA 发布的访问令牌的实体，从而允许 UAA 对其资源进行访问。资源服务器可以是数据库、API 端点，甚至是 OAuth2 服务器本身。**访问令牌**允许根据其中编码的作用域（即权限）来访问资源。**作用域**是资源服务器可以为其定义特定意义的任意字符串。例如，一个数据库应用程序可能会决定只允许带有 `db.read` 作用域的访问令牌从其中读取数据，而其他应用程序则可能不会赋予该作用域任何特殊意义。

### 客户端和用户
客户端指的是需要访问由 UAA 管理的资源服务器的应用程序。客户端拥有一组权限，分为两类：作用域（scopes）和权限（authorities）。**用户**通常指代一个人。用户具有基于 **组成员** 身份的权限，例如，属于 `db.read` 组的用户就拥有 `db.read` 所赋予的权限。用户不能直接利用自己的权限执行操作，只能授权客户端代替他们执行相应的操作。

### UAA 访问令牌授权
UAA 服务器通过认证的形式向客户端授予访问令牌。令牌可以在两种情况下授予：
1. 当客户端代表用户执行某些操作时（类似于前面提到的 Facebook 示例）。在这种情况下，访问令牌授权客户端根据客户端的作用域与用户组成员权限的交集（例如，一个具有 `db.read` 作用域的客户端和作为 `db.read` 组成员的用户）进行操作。用户还可以选择批准或拒绝客户端请求的作用域。
2. 当客户端自行行动时。访问令牌授权客户端根据客户端的权限执行操作。

在这两种情况下，客户端都可以将授予的访问令牌提交给资源服务器，并根据令牌中编码的作用域进行操作。

正如上文所述，一些客户端可以根据一组称为 **authorities** 的权限自行行动，而无需用户的批准。这对于与用户无关的资源非常有用。在 Facebook 的例子中，eBay 可能会拥有 'advertise.put' 权限，允许它将广告推送到 Facebook 或其他受其约束的网站。

### UAA 管理作用域
根据“UAA 作用域”文档的描述，某些作用域允许管理 UAA 服务器。例如，在具有 "groups.update" 权限的客户端对 UAA 服务器进行身份验证并接收访问令牌之后，它可以将该访问令牌呈现给 UAA，并修改现有的 UAA 组。在 UAA 管理作用域的情况下，UAA 同时也扮演着资源服务器的角色。

以上是对 OAuth2 和 UAA 的背景介绍。接下来，我们将深入探讨漏洞的细节。

## 0x02 CVE-2019-11270 – 通过 `clients.write` 作用域提权
`clients.write` 是 UAA 管理作用域之一，它是 `clients.admin` 的一个子集。与 `clients.admin` 类似，`clients.write` 允许创建和修改客户端，但对创建的客户端有一些额外限制。关于 `clients.write` 的[相关文档](https://docs.cloudfoundry.org/concepts/architecture/uaa.html#uaa-scopes) 描述如下：