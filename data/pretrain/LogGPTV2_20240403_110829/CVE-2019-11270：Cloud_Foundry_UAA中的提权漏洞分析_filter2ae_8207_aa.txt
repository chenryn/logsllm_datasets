# CVE-2019-11270：Cloud Foundry UAA中的提权漏洞分析
|
##### 译文声明
本文是翻译文章，文章原作者 twistlock，文章来源：twistlock.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
4月份，我向`Cloud Foundry`安全团队披露了[Cloud Foundry
UAA](https://docs.cloudfoundry.org/concepts/architecture/uaa.html)（User
Account and Authentication
Server,用户帐户和身份验证服务器）中的两个漏洞，该团队为他们分配了`CVE-2019-11268`和`CVE-2019-11270`。在[上一篇文章中](https://www.twistlock.com/labs-blog/cloud-foundry-uaa-cve-2019-11268-identity-zones-sql-vulnerability/)，我讨论了CVE-2019-11268，一种SQL注入漏洞，允许在UAA身份区域内进行信息泄露。
直到上周（19年8月1日）当CF公开发表并发布补丁版本- [UAA
v73.7](https://github.com/cloudfoundry/uaa/releases/tag/v73.7.0)时，我才能谈论有关CVE-2019-11270的内容。CVE-2019-11270是UAA实现`clients.write`作用域（scopes，即权限）的高危提权漏洞。拥有易受攻击作用域的恶意客户端可以创建具有任意作用域的新客户端，并获得对UAA服务器及其管理的应用程序的完全控制权（例如CF部署）。
如果您将UAA用作独立的Oauth2服务器或在CF部署中，强烈建议您阅读最后的“我是否受到影响？”部分。它包含识别您的环境中是否利用了漏洞的简单命令。
## 0x01 基础知识
###  UAA
`Cloud Foundry
UAA`（用户帐户和身份验证）是一个提供身份管理和访问控制的`Oauth2`服务器。它可以在包括CF部署之外的任何环境中用作Oauth2服务器。  
在我[之前的文章](https://www.twistlock.com/labs-blog/cloud-foundry-uaa-cve-2019-11268-identity-zones-sql-vulnerability/)中，涉及了UAA的部分概念，如访问令牌(access
tokens)，客户端(clients)和作用域(scopes)。让我们通过插图重新理解它们，因为理解它们是理解Oauth2授权流程和漏洞的关键。
###  oauth2
UAA服务器实现了广泛使用的Oauth2授权协议。大多数人可能都使用过基于Oauth的授权，例如在使用Facebook帐户注册eBay等网站时，并授权网站获得对该帐户的一些权限，例如阅读您的电子邮件地址或代表您发布信息。
简化一点，Oauth2授权流程通常包括以下步骤：
让我们回顾一下上图：
###  资源服务器和访问令牌(Resource Servers and Access tokens)
资源服务器被定义为承认UAA发布的访问令牌的任何实体， **允许UAA对其资源的访问**
。资源服务器可以是数据库、API端点、甚至是Oauth2服务器本身。  
 **访问令牌** 允许对其中编码的作用域（基本上是权限）进行访问。 **作用域**
是资源服务器可以决定附加含义的任意字符串。例如，数据库应用可以决定是否允许任何带有`db.read`作用域的访问令牌的客户端从中读取数据，而其他应用程序可能不会对该作用域附加任何含义。
###  客户端和用户(Clients and Users)
客户表示需要访问由UAA管理的资源服务器的应用。客户端有两组权限（permissions）-作用域（scopes）和权限（authorities）。  
用户通常代表一个人。用户具有 **组成员**
身份的权限，例如，一个`db.read`组成员的用户就拥有`db.read`赋予的权限。用户不能直接以他们的权限进行操作，只能授权客户端代替他们执行相应的操作。
###  UAA访问令牌授权
UAA服务器以认证的形式向客户端授予访问令牌。在两种情况下授予令牌：
> 1.当客户端代表用户执行相应的操作时（类似于上文提到的Facebook示例）。  
>
> 这里，访问令牌授权客户端根据客户端作用域与用户组成员权限的交集（例如，具有db.read作用域的客户端和作为db.read组成员的用户）进行操作。用户还可以选择批准或拒绝客户端请求的作用域。
> 2.当客户端自己行动时。访问令牌授权客户端根据客户端的权限执行操作。
在这两种情况下，客户端都可以将授予的访问令牌提交给资源服务器，并根据令牌中编码的作用域进行操作。
如上所述，根据一组称为 **authorities**
的权限，一些客户端可以自行行动而无需用户的批准。这对于与用户无关的资源非常有用。在Facebook的例子中，eBay可以拥有’advertise.put’权限，允许它将广告推送到Facebook或其他受其约束的网站。
###  UAA管理作用域
根据“UAA作用域（[UAA
scopes](https://docs.cloudfoundry.org/concepts/architecture/uaa.html#uaa-scopes)）”所述，某些作用域允许管理UAA服务器。例如，在具有“groups.update”权限的客户端对UAA服务器进行身份验证并接收访问令牌之后，他可以将该访问令牌呈现给UAA，然后修改现有的UAA组。在UAA管理作用域的情况下，UAA也扮演资源服务器的角色。
以上是Oauth2和UAA的背景知识，现在进入漏洞的细节部分。
## 0x02 CVE-2019-11270 – 通过clients.write作用域提权
`clients.write`是UAA管理作用域之一，是`clients.admin`的一个狭义的版本。与clients.admin一样，clients.write允许创建和修改客户端，但对创建的客户端多了一些限制。’clients.write’的[相关文档](https://docs.cloudfoundry.org/concepts/architecture/uaa.html#uaa-scopes)介绍如下：