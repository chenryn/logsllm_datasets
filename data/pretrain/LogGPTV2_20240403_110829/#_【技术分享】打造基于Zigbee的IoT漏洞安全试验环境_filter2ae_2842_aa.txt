# 【技术分享】打造基于Zigbee的IoT漏洞安全试验环境
|
##### 译文声明
本文是翻译文章，文章来源：attify
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
**翻译：**[ **shan66**](http://bobao.360.cn/member/contribute?uid=2522399780)
**预估稿费：160RMB（不服你也来投稿啊！）**
********投稿方式：发送邮件至**[ **linwei#360.cn**](mailto:PI:EMAIL) **，或登陆**[
**网页版**](http://bobao.360.cn/contribute/index) **在线投稿**** ****
**传送门**
[**【技术分享】物联网设备的固件分析技术** ****](http://bobao.360.cn/learning/detail/3250.html)
**  
**
**前言**
目前，Zigbee已经成为智能家居和医疗设备中最流行的物联网无线电通信协议，本文将讨论它的安全性以及相关的物联网设备的利用技术。
**Zigbee简介**
Zigbee是在智能家居设备和其他物联网设备中最常见的通信协议之一。
由于Zigbee具备低功耗、网状网络和易用性的优势，所以日益成为制造商的首选。它是在IEEE
802.15.4的基础之上，由Zigbee联盟成员公司共同创建的一个开放协议，该联盟成员包括TI、Silicon
Labs、Philips等公司。Zigbee协议已经进行了多次迭代，当前版本是Zigbee 3.0。
**可能的攻击**
作为一种无线电通信协议，Zigbee同样免不了受到标准无线电协议的漏洞的影响。在使用Zigbee进行通信时，可能发生的攻击有：
1\. 攻击者能够嗅探传输的数据
2\. 捕获传输的数据后重放数据包，从而执行恶意动作
3\. 在初始通信期间嗅探加密密钥
4\. 修改捕获的数据包，然后重放
5\. 欺骗攻击
6\. 拒绝服务攻击
本文只是一个入门指南，介绍如何搭设利用Zigbee漏洞的实验环境和有关的基础知识，在后续文章中，我们将在此基础上进一步介绍上述每种类型的安全漏洞的利用技术。
**硬件要求**
在继续阅读下文之前，请不要忘了，这里介绍的硬件只是探索Zigbee安全性的可能硬件组合之一。实际上，有各种其他类型的硬件可资使用，例如我们既可以使用Zigbee开发套件，也可以使用商业IoT设备发射Zigbee信号等。
下面是一个供我们入门的简单配置：
1\. Arduino Uno/Nano
2\. DigiKey Xbee module / Arduino Xbee shield
3\. Atmel RzRaven USB stick
4\. Attify Badge
Arduino：Arduino已经在各种类型的电子项目中广为普及了。实际上，你很可能已经在大学或高中阶段早就用过它了。Nano是体积最小的Arduino
nano，但是对于本文的用途来说，它的功能已经足够了。
DigiKey Xbee module / Xbee Shield ：为了学习Zigbee，你需要一些可以发送和接收Zigbee信号的东西。
Xbee是一种全双工收发器，能够使用Zigbee标准协议与其他Xbee模块进行无线通信。
Atmel RzRaven USB
Stick：这是半双工模块，它能执行嗅探，并且可以将捕获的Zigbee数据包进行相应的修改后再次传输。如果你熟悉其他类型的无线电利用技术的话，可以将其视为“用于Zigbee的HackRF”。
Attify
Badge：您可以将其插到系统上，然后使用它和XCTU对Xbee模块进行编程。之所以这么做，是因为Xbee通常没有miniUSB或类似的端口，所以无法直接插入进行编程。如果您没有Attify
Badge或类似的硬件，可以通过亚马逊或您当地的商店购买一个用于Xbee的迷你USB套件，比如类似于页面中这样的套件。
用于Xbee的MiniUSB电路板
或者，你也可以通过邮件（PI:EMAIL）方式购买 Attify BadgeAttify Badge。
利用Attify攻击物联网嵌入式设备
对于编程和硬件连接来说，使用它是最简单的方案，只需要连接下列引脚：power => power，Gnd =>
Gnd，Tx到Rx，Rx到Tx。如果需要的话，您可以进一步参考Xbee模块相应版本的说明书。
**对Arduino和Xbee进行编程**
**对Arduino进行编程**
要想对Arduino进行编程，只需从下载使用Arduino
IDE即可。加载后，可以从Attify的github库中逐一打开每个Arduino的Hub和Node程序。
代码本身提供了详细的内联注释，你可以通过注释来了解代码的含义。另外，提供的代码示例还可以通过传感器和DHT库来获取温度、湿度和光照值。它非常适合用于进行完整的分析，以及通过传输一个硬编码字符串进行攻击，而不是使用DHT值。此外，如果你想原封不动地使用这些代码的话，则需要购买DHT11和所需的其他附属设备。
所需工具
Arduino * 1 
DHT 11 * 1 
XBee S1模块（S2模块需要不同的配置）* 2 LDR / Photocell * 1
BC547 * 1 
LED *任意数量
跳线
面包板
Xbee shield * 2 
电路图
下面是我们的入门套件配置的电路图。
Node电路图：
Node电路图
Hub电路图：
Hub电路图
Node代码：  
    // Offensive IoT Exploitation by Attify 
    // www.attify.com | www.offensiveiotexploitation.com 
    // (function(){var ml="k-CeFED2o0t%ylAfaismr.4ch3un",mi=";I2@;79HD3?;I6;77C@A=:8;I>B3GJD3;F9@::A?*protected email* 
    #include  //Library for DHT11  Humidity
    #define dht_dpin A0 // DTH11 Data pin connected to AO of arduino
    #define led 2 // Led connected to Pin D2
    #define ldr A1 // LDR connected to Pin A1
    dht DHT; // Creating DHT function 
    void setup() {
      // initialize serial:
      Serial.begin(2400); // Initiliaze Hardware serial for xbee
      pinMode(2, OUTPUT); // Pin direction of LED to Output as it sends current
    }
    void loop() { // Continous loop
      // if there's any serial available, read it:
       DHT.read11(dht_dpin); // Reading DHT11 using the library
      int lig = analogRead(ldr); // Reading analog values from LDR
      int ligp = map(lig, 0, 1023, 0, 100); // Mapping the 10bit resolution ADC to 0 to 100
      int h = DHT.humidity; // Humidity value
      int t = DHT.temperature; // Temperature value
      while (Serial.available() > 0) { // Checking for any data on Xbee
        int red = Serial.parseInt(); // look for the next valid integer in the incoming serial stream
        if (Serial.read() == '!') // Check if the next Serial data is '!'
        {
          if(red == 1) // if the recieved data is 1! 
            {
            Serial.print(h,DEC); // Send humidity value with '!'
            Serial.print("!");
              }
             else 
             if(red == 2) // if the recieved data is 2!
        {