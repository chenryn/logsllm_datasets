mance.
8.2 Example Pinpoint Service
We choose two typical types of service data, pictures and
videos, to visually validate the eﬀect of the pinpoint proto-
type. Figure 7 shows the received pictures at diﬀerent posi-
tions. At the desired location, the receiver can successfully
download the original picture sent by the transmitter. We
then move the receiver 0.1, 0.2, and 0.3 meter away from the
desired location, and ﬁnd a drastic worsening of the packet
delivery rate. When the receiver is 0.3 meter away, the pic-
ture cannot be displayed at all due to the huge number of
packet loss.
We also implement the real-time video transmission that
sends a live scene captured by a web camera to the receiver.
Speciﬁcally, a web camera is connected to the transmitter to
surveillance the surrounding of the transmitter. We encode
the video stream using MPEG-4 AVC, which is the most
commonly used format for video compression, and input the
stream into the USRPs through the Linux socket interface.
We then pinpoint the stream to the receiver at the desired
location. The receiver downloads and decodes packets from
the transmitter and displays them on a video player. We
observe a clear and ﬂuent video when the receiver is located
at the desired position, and the video quality deteriorates
when the receiver moves away from undesired locations. In
particular, we encounter frequent video stuck while playing,
and severely distorted images. At the physical layer, we ﬁnd
that received symbols signiﬁcantly deviate from the ideal
points on the constellation diagram, thereby yielding a huge
amount of demodulation errors. We recorded the video dete-
rioration process and an anonymous demo video on youtube
can be found at https://youtu.be/lJ64bxYP5SM.
In the
following, we discuss the details of the evaluation results.
8.3 Evaluation Metrics
We evaluate the prototype system using the following typ-
ical metrics for measuring the service of quality:
• Signal to noise ratio (SNR): This is the ratio of the
received signal power to the noise power, which is the
sum of both the jamming signal power and the channel
noise power.
• Packet delivery rate: This is the ratio of the number
of correctly received packets to the total number of re-
ceived packets. In the prototype implementation, each
packet is appended with a 32-bit cyclic redundancy
check (CRC) code for error detection, and preﬁxed
299(a) Desired location
(b) 0.1 meter away
(c) 0.2 meter away
(d) 0.3 meter away
Figure 7: Received pictures at diﬀerent positions
with a 64-bit access code for packet synchronization.
The length of each packet is 500 bytes. The receiver
detects packets by correlating received bits with the
access code. A high correlation indicates the arrival of
a packet, and the receiver veriﬁes this packet by look-
ing at the CRC. We consider a packet to be received
correctly only if the packet passes CRC check.
• Throughput: Throughput is the number of correctly
received packets per unit time. To facilitate the com-
parison, we normalize the throughput into the range
of 0 − 1. If the throughput is close to 1, the bit rate
at the receiver is close to that at the transmitter, and
thus the service delay is near zero. If the throughput
is 0, no information bits are received at the receiver
and the service delay is regarded as inﬁnity.
In addition to the pervious metrics, we also introduce a
fourth metric, channel cross-decorrelation, which quan-
tiﬁes the disparity between two channels. A small cross-
decorrelation value indicates a strong correlation between
two channels, and a large value indicates two channels are
uncorrelated with each other. We include channel cross-
decorrelation as an extra evaluation metric, because the ser-
vice quality is also highly relevant with this metric. The
cross-decorrelation between the channels of desired and un-
desired locations should be large, so that a receiver at a
undesired location cannot obtain a service of good quality.
8.4 Measuring Channel Cross-decorrelation
SNR values, packet delivery rate and throughput can be
easily measured from the communication traﬃc based on
their deﬁnitions above. However, how to measure the last
metric channel cross-decorrelation is not as straightforward
as the pervious three metrics, because it reﬂects the dis-
parity among wireless channels that cannot be directly ob-
served.
In the following, we discuss our methodology to
measure this metric.
To achieve the channel calibration, an accurate channel
estimation between the transmitter and the receiver is re-
quired. We estimate the channel in a training stage, where
the receiver broadcasts a beacon signal to the transmitter,
and transmitter then measures the corresponding channel
impulse response from the received beacon signal. At the
training stage, we measure the channel for 500 times and
took the average value as the current channel impulse re-
sponse. Thus, we can eliminate the impact of the unex-
pected disturbance caused by the channel noise, normal tem-
poral variations, and other interferences.
Figures 8 and 9 plot the magnitude (i.e. amplitude atten-
uation) and phase (i.e phase shift) of the average channel
Figure 8: USRP 1
Figure 9: USRP 2
impulse response measured at the two USRPs respectively.
The system operates on the central frequency of 2.4 GHz
and adopts the binary phase shift keying (BPSK) modula-
tion. The unit of the X-axis is a symbol duration, which
is approximately the minimum time required to resolve two
paths. We can see that the channels of both USRPs are
quite diﬀerent in shape and magnitude. This observation is
consistent with the basic experiment setting, in which both
USRPs are separated by a certain distance to ensure the
uncorrelated channels.
Cross and Auto-variance: Before we introduce how
to measure the channel cross-decorrelation to quantize such
channel diﬀerence, we ﬁrst deﬁne two terms cross-variance
and auto-variance that will be involved in calculating the
channel cross-decorrelation. The cross-variance is deﬁned as
(cid:80)N
the Euclidean distance between two diﬀerent channels. For
channels i and j, their average cross-variance Vij is calcu-
n=1 |hin − havgj|, where N is the total number
lated by 1
N
of channel measurements, hin is the n-th estimated chan-
nel impulse response of channel i, and havgj is the average
channel impulse response of channel j. When i = j, the
cross-variance degenerates to the auto-variance Vii, which
is the Euclidean distance between an one-time channel mea-
surement and the average of multiple channel measurements
for the same channel. In the experiment, we use the aver-
age value of the auto-variance over all the channel estima-
tions. Figure 10 plots the distributions of the cross and
auto-variance of previous channels measured at two USRPs.
In addition, we also plot the cross variance of two channels
measured after the channel calibration. The cross-variance
before the calibration is much larger than the auto-variance,
because the channels of both USRPs are uncorrelated from
each other. After the calibration, the cross-variance is closed
to the auto-variance within one channel that indicates two
channel are quite correlated.
Channel Cross-decorrelation: We use channel cross-
decorrelation to normalize the cross-variance to facilitate the
24681000.020.040.06AttenuationTime delay  246810−4−202Phase ShiftAttenuationPhase Shift24681000.0050.01AttenuationTime delay  246810−505Phase ShiftAttenuationPhase Shift3001
2 |havgi+havgj| .
comparisons of the similarity and diﬀerence among wireless
channels, and the cross-decorrelation Rij between channels
i and j is deﬁned as Rij =
|Vij−Vjj|
A cross-decorrelation value of 0.5 means that the channel
diﬀerence is as large as 50% of the magnitude of the averages
of the two channels. The cross-decorrelation ranges between
0 and 2.
If it is larger than 1, the channel diﬀerence is
even larger than the magnitude of the averages of the two
channels. In Figure 10, for USRP 1 (master) and USRP 2
(slave), their cross-decorrelations are R12 = 1.28 and R21 =
1.30, which indicate that the channels measured at both
USRPs are quite diﬀerent from each other.
In addition,
after the calibration, their cross-decorrelations measured are
R12 = 0.040 and R21 = 0.043, which indicates two channels
after the calibration are highly correlated.
8.5 Jamming Signal Entanglement
As mentioned earlier, we entangle the jamming signals
into transmit signals to conceal the real information. The
jamming signals should cancel each other at the desired lo-
cation but jam the original signals at undesired locations,
so that eavesdroppers at those locations cannot distinguish
the original signals from the jamming signals, and thus fail
to decode the data.
We randomly choose an indoor location, namely Position
1, to place the receiver and calibrate the channel between
the receiver and the transmitter. We mark this location as
the desired location. We then randomly choose three other
locations, namely Positions 2, 3, and 4, that are about 0.1,
0.2, and 0.3 meter away from the desired location respec-
tively. We mark these locations as the undesired locations.
Figure 13(a) plots the symbols on the constellation diagram
with jamming signal entanglement for the desired location,
i.e., Position 1. We can see that received symbols converge
to the ideal points at Position 1. Due to slightly imperfect
synchronization and normal oscillator shift, jamming signals
may not exactly cancel each other and the residue introduces
an additional noise that cause the deviation of the received
symbols. Nevertheless, such noise is too small to impact
the decoding accuracy and the received symbols still closely
ﬂuctuate around the ideal points.
Figures 13(b), 13(c), and 13(d) plot received symbols at
undesired locations, i.e., Positions 2, 3, and 4, when jamming
signal entanglement is enforced. As mentioned earlier, for
undesired locations, transmit signals are not calibrated and
they arrive at the receiver in diﬀerent shapes and thus the
jamming signals do not cancel each other, leading to a high
demodulation error rate. As seen in these ﬁgures, received
symbols randomly scatter around the entire constellation
diagram, and become more and more diﬃcult to decode with
the increasing distance from Position 1, the desired location.
8.6 Service Area Size
We would like to explore the service area size achieved
by the prototype system in the real world. The experiment
environment is a typical indoor room with wooden doors,
metal and wooden obstacles, and electronic devices. Figure
11 shows the positions of the transmitter and the receiver.
The transmitter is placed at Position 0 and we pinpoint
the service to Positions 1, 2, 3, and 4. For each test, the
transmitter sends 3000 packets to the receiver.
Impact of distance: Without loss of generality, we choose
four moving directions for the four positions. For Positions
1, 2, 3, and 4, the receiver moves towards(⇑), backwards(⇓),
to the right(⇒), and to the left(⇐) of the transmitter. Ta-
ble 1 shows the impact of the distance between the receiver
and the desired location on the aforementioned four evalu-
ation metrics, i.e., SNR, packet delivery rate, throughput,
and the channel cross-decorrelation.
In this test, the sys-
tem operates on the central frequency of 2.4GHz and the
ratio of desired signal power to jamming signal power is set
to 1. In this table, Pos., Dir., D, Corr., and PDR denote
position, moving direction, distance between the receiver
and the desired location, cross-decorrelation, and packet de-
livery rate respectively. These abbreviations are also ap-
plied for the subsequent tables. As seen in Table 1, mov-
ing directions cause no noticeable impact on the four met-
rics. For each of the four desired locations, when the re-
ceiver is located at this location, i.e., distance is equal to
0, the receiver achieves the maximum SNR, packet delivery
rate, and throughput. When the receiver moves away from
this location, the channel cross-decorrelation increases and
the corresponding SNR, packet delivery rate, and through-
put decrease signiﬁcantly. In particular, when the distance
reaches 0.3 meter, the throughput at all four positions ap-
proximately reaches to 0 and thus no service is received.
Table 1: Impact of the distance
Pos. Dir. D(cm) Corr.
0.038
0.33
0.66
1.25
0.039
0.30
0.76
1.12
0.012
0.31
0.72
1.10
0.013
0.25
0.77
1.15
⇑
⇑
⇑
⇑
⇓
⇓
⇓
⇓
⇒
⇒
⇒
⇒
⇐
⇐
⇐
⇐
0
10
20
30
0
10
20
30
0
10
20
30
0
10
20
30
1
1
1
1
2
2
2
2
3
3
3
3
4
4
4
4
SNR
14.0
5.1
3.5
-1.4
14.0
7.0
3.4
0
14.9
8.2
3.5
0.8
14.9
9.5
4.4
1.5
PDR
99.71%
68.75%
57.41%
6.28%
99.18%
80.65%
39.70%
19.74%
97.61%
74.79%
41.57%
20.08%
96.53%
85.85%
58.95%
21.43%
Throughput
0.93
0.53
0.35
0.012
0.93
0.61
0.17
0.031
0.92
0.47
0.26
0.078