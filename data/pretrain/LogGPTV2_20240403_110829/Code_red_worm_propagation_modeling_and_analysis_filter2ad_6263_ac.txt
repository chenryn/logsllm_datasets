The decreased worm infection rate and the congestion
could also have been caused by the possible “BGP storm”
[10], although we don’t know whether “BGP storm” really
happened or not. [10] showed that there existed strong cor-
relations between BGP message storms and the Code Red
and Nimda worm propagation periods. The global Internet
routes became unstable and some autonomous systems had
transient route failures during these BGP storms. However,
recently the authors in [33] argued that BGP stood up well
during the worm attack and thus there was no BGP storm
happened.
4.2 A new worm propagation model:
factor worm model
two-
In order to account for the slowed down worm scan rate,
the infection rate β in Eq. (1) must be modeled as a func-
tion of time, i.e., β(t). From the worm’s point of view, hu-
man countermeasures remove some hosts from worm spread-
ing circulation, including both hosts that are infectious and
hosts that are still susceptible. In other words, the removal
process consists of two parts: removal of infectious hosts
and removal of susceptible hosts. Let R(t) denote the num-
ber of removed hosts from the infectious population; Q(t)
denote the number of removed hosts from the susceptible
population. According to the same principle in deriving the
Kermack-Mckendrick model (5), the change in the number
of susceptible hosts S(t) from time t to time t + (cid:4)t follows
the equation:
S(t + (cid:4)t) − S(t) = −β(t)S(t)I(t)(cid:4)t − dQ(t)
dt
(cid:4)t.
Hence
dt = −β(t)S(t)I(t) − dQ(t)
dS(t)
dt
.
(7)
(8)
Note that S(t) + I(t) + R(t) + Q(t) = N holds for any
time t. Substituting S(t) = N − I(t) − R(t) − Q(t) into Eq.
(8) yields the diﬀerential equation describing the behavior
of the number of infectious hosts I(t) as
dt = β(t)[N − R(t) − I(t) − Q(t)]I(t) − dR(t)
dI(t)
dt
.
(9)
We refer to the worm model described by Eq. (9) as the
two-factor worm model.
Strictly speaking, worm propagation is a discrete event
process. In this paper, However, we treat the worm propa-
gation as a continuous process and use the continuous dif-
ferential equation (9) to describe it. Such an approximation
is accurate for large-scale system and is widely used in epi-
demic modeling [15], Internet traﬃc ﬂuid modeling [26], etc.
Internet worm propagation is a large-scale problem so it is
suitable to use the continuous diﬀerential equation (9) to
model it.
In order to solve Eq. (9), we have to know the dynamic
properties of β(t), R(t) and Q(t). β(t) is determined by
the impact of worm traﬃc on Internet infrastructure, and
the spreading eﬃciency of the worm code; R(t) and Q(t) in-
volve people’s awareness of the worm, patching and ﬁltering
diﬃculties. By specifying their dynamic properties, we can
derive the complete set of diﬀerential equations of the two-
factor worm model. We will discuss this later in Section 6.
In the following Section 5, we ﬁrst simulate our two-factor
worm model to validate it against the observed Code Red
worm propagation data (Fig. 2).
5. SIMULATION OF CODE RED WORM
BASED ON TWO-FACTOR WORM MODEL
5.1 Description of simulation model
In the simulation, we model the propagation of the Code
Red worm in discrete time. The system in our simulation
143consists of N hosts that can reach each other directly, thus
there is no topology issue in our simulation. A host stays
in one of three states at any time: susceptible, infectious,
or removed. A host is in “removed” state when it is immu-
nized, no matter whether it is previous infected or suscepti-
ble. Thus the state transition of any host can be: “suscepti-
ble → infectious → removed” or “susceptible → removed”.
At the beginning of simulation, several hosts are initially
infectious and the others are all susceptible.
Each copy of the worm on an infectious host sends out a
sequence of infection attempts during its lifetime. At each
infection attempt, the worm randomly chooses another host
in the population to infect. The infection delay time between
two consecutive infection attempts represents the time re-
quired by a Code Red worm to ﬁnd a Windows IIS server
through random IP scans (regardless of whether the host is
already infected or still susceptible). An infected host will
not change its infection behavior if it is infected again by
other copies of the worm.
To capture the cleaning, patching and ﬁltering impacts
on the worm propagation, we dynamically immunize some
hosts in our simulation: at each discrete time t we randomly
choose some non-immunized hosts to immunize regardless
of whether they are infectious or still susceptible. The total
number of hosts that have been infected by time t, J(t),
including both infectious hosts and those previously infected
hosts that have been immunized before t, is a monotonically
increasing function of time t. Let C(t) denote the total
number of removed hosts. We run the immunization process
at each discrete simulation time t such that
C(t) = aJ(t)
(10)
where 0 ≤ a  0
0
X(t) < 0
Y (t) =
(13)
The normal distribution here is used to simulate the ran-
domness in the scan process of each worm copy. The power
exponent n in (11) is used to adjust the sensitivity of the
infection delay time D(t) to the number of infected hosts
J(t).
5.2 Simulation experiments
We simulate four scenarios. The ﬁrst one is the classical
simple epidemic model (1), the same as used in [31] and [17,
32, 34].
It does not consider the two factors discussed in
this paper and can be simulated from our model by letting
D(t) = D(0) and a = 0. In the second scenario, we consider
only the decreased infection rate by using a = 0 and D(t)
as in (12).
In the third scenario, we consider the eﬀects
of patching and ﬁltering but with constant infection rate
by using D(t) = D(0) and a = 0.5. In the last scenario we
use the two-factor worm model, allowing both immunization
and decreased infection rate, i.e., D(t) as in (12) and a =
0.5. For each scenario, we run the simulation 100 times and
derive the mean value of the number of infected hosts at
each time t, E[J(t)]. The E[J(t)] of these four scenarios are
plotted in Fig. 5 as functions of time t (The other simulation
parameters are: N = 1000000, D(0) = 10,k1 = 150, k2 =
70, n = 2; 10 initially infected hosts).
For the purpose of comparison, we plot the Fig. 2 again
right beside our simulation results Fig. 5. Comparing our
two-factor worm model simulation curve (the blue solid line
in Fig. 5) with the observed Code Red data in Fig. 6, we
observe that, by considering the removal processes and the
worm decreased infection rate, we can match the observed
data better than the original Code Red worm simulation
(the black dotted line in Fig. 5). In the beginning, the num-
ber of infected hosts, J(t), increases exponentially. However,
the propagation speed decreases when the total number of
infected hosts reaches only about 50% of the population.
The decreasing of propagation speed happens much earlier
than the original Code Red simulation. For future Internet
worms, by adjusting the parameters in our simulation, we
can adjust the curve to match real data and then understand
more of the characteristics of the worms we investigate.
We further investigate how variable each simulation is
among the 100 simulation runs of the two-factor model. By
using the maximum and minimum values for the number
of infected hosts at each time t, we derive two envelope
curves that contain all these 100 curves. These two envelope
curves are so close to each other that we can’t distinguish
them from a ﬁgure. The maximum diﬀerence between these
two curves is only 0.227% to the population size N .
In
other words, the worm propagation is almost a determinis-
tic process — it’s the reason why we can use deterministic
diﬀerential equation (9) to model large-scale Internet worm
propagation, which is essentially a stochastic process.
The reason why random events have so little eﬀect on
the worm propagation is that the population is huge (1 mil-
lion hosts) and each worm copy infects others independently.
From the whole worm propagation point of view, these huge
number of random events will eventually average out each
other.
6. NUMERICAL ANALYSIS OF THE TWO-
FACTOR WORM MODEL
The two-factor worm model (9) is a general worm model
with several undetermined dynamic parameters β(t),R(t)
and Q(t). If we assume the infection rate β(t) to be con-
stant and do not consider the removal process from sus-
ceptible population, i.e., Q(t) = 0, we derive exactly the
Kermack-Mckendrick model (5) when R(t) = γI(t) [3]. For
the general two-factor worm model, we can’t get closed-form
analytical solutions. Instead, we analyze the model based on
the numerical solutions of the diﬀerential equation by using
Matlab Simulink [25] .
First we need to determine the dynamical equations de-
scribing R(t),Q(t) and β(t) in the two-factor worm model
(9). For the removal process from infectious hosts, we use
the same assumption as what Kermack-McKendrick model
144x 105
10
Code Red propagation simulation
)
t
(
J
s
t
s
o
h
d
e
t
c
e
f
n
i
f
o
r
e
b
m
u
n
l
a
t
o
T
9
8
7
6
5
4
3
2
1
0
0
Original Code Red simulation
Consider slowing down of infection rate
Consider human countermeasures
Two−factor worm model
100
200
300
time: t
400
500
600
Figure 5: Code Red worm simulation based
on diﬀerent models.
Figure 6: Number of infected
hosts (from caida.org)
uses:
dR(t)
dt = γI(t).
(14)
The removal process from susceptible hosts is more com-
plicated. At the beginning of the worm propagation, most
people don’t know there exists such a kind of worm. Conse-
quently the number of removed susceptible hosts is small and
increases slowly. As more and more computers are infected,
people gradually become aware of this worm and the im-
portance of defending against it. Hence the speed of immu-
nization increases fast as time goes on. The speed decreases
as the number of susceptible hosts shrinks and converges to
zero when there are no susceptible hosts available.
From the above description, the removal process of the
susceptible hosts looks similar to a typical epidemic propa-
gation. Thus we will use the classical simple epidemic model
(1) to model it:
dQ(t)
dt = µS(t)J(t).
(15)
Last, we model the decreased infection rate β(t) by the
equation:
β(t) = β0[1 − I(t)
N ]
η,
(16)
where β0 is the initial infection rate. The exponent η is
used to adjust the infection rate sensitivity to the number
of infectious hosts I(t). η = 0 means constant infection rate.
Using the assumptions above on Q(t), R(t) and β(t), we
write down the complete diﬀerential equations of the two-
factor worm model:
dS(t)/dt = −β(t)S(t)I(t) − dQ(t)/dt
dR(t)/dt = γI(t)
dQ(t)/dt = µS(t)J(t)
β(t) = β0[1 − I(t)/N ]η
N = S(t) + I(t) + R(t) + Q(t)
I(0) = I0 (cid:9) N ; S(0) = N − I0; R(0) = Q(0) = 0;
(17)
For parameters N = 1, 000, 000, I0 = 1, η = 3, γ = 0.05,
µ = 0.06/N , and β0 = 0.8/N , we obtain the numerical
solutions of two-factor worm model (17) and plot them in
Fig. 7. The ﬁgure illustrates the behavior of J(t) = I(t) +
R(t), I(t), and Q(t) as functions of time t. For comparison,
we also plot the number of infected hosts J(t) of the classical
simple epidemic model (1) in this ﬁgure. The classical simple
epidemic model (1) can be derived from the two-factor worm
model (17) by simply setting η = 0, γ = 0, and µ = 0.
x 105
10
Two−factor worm model numerical solution
s
t
s
o
h
f
o
r
e
b
m
u
n
9