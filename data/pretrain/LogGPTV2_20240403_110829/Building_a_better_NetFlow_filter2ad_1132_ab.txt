There are solutions for counting the number of ﬂows at
line speeds [15], but these count the total number of ﬂows,
and one cannot later recover the number of ﬂows associated
with speciﬁc aggregates of traﬃc out of the overall mix. Our
ﬂow counting extension allows arbitrary aggregation of the
ﬂow keys in post-processing to obtain estimates of the ﬂows
in those aggregates.
Our ﬂow counting extension is related to ﬂow sampling
introduced by Hohn and Veitch [18]. Important diﬀerences
between FCE and their ﬂow sampling are that we also out-
line a hardware implementation that can work at line speeds
and that our primary focus is estimating the number of ﬂows
in arbitrary aggregates of traﬃc whereas theirs is computing
the distribution of ﬂow sizes. Choi et al. use adaptive sam-
pling [9] to guarantee that the variance introduced by the
variability of packet sizes does not exceed a pre-set limit.
There are solutions such as sFlow [26] that sample packets,
but do not build ﬂow records at all. The great advantage of
these types of solutions is that they report full packet head-
ers together with a portion of the packet payload and this
provides much richer raw data for analysis. The disadvan-
tage is that they do not beneﬁt of the compression achieved
by ﬂow records that count more than one packet.
2. ADAPTIVE NETFLOW
Adaptive NetFlow is an improved version of NetFlow that
addresses the shortcomings discussed in Section 1.2, mostly
without changes to the router hardware or the infrastruc-
ture collecting traﬃc measurement data. Section 2.1 de-
scribes how we solve the mismatch between analysis and the
ﬂow termination heuristics of NetFlow by simply terminat-
ing ﬂows only at the end of measurement bins. We eliminate
the variability of the size of reported NetFlow data and solve
the problems associated with the operator having to set the
sampling rate by automatically adapting the sampling rate
to the traﬃc mix (Section 2.2). When adapting the sam-
pling rate ANF occasionally decreases the sampling rate to
avoid ﬁlling all available memory. In order to keep the ﬁnal
results consistent with the new sampling rate, we need to
adjust the packet and byte counters of the existing entries.
We describe how we eﬃciently perform this “renormaliza-
tion” in Section 2.2.1. If an entry’s packet counter reaches
zero during renormalization, meaning that none of its pack-
ets would have been sampled at the new sampling rate, that
entry is deallocated. To ensure that ANF never runs out
of memory, renormalization must free a certain number of
entries. In Section 2.2.2 we describe the eﬃcient and accu-
rate method used by ANF to ﬁnd the new sampling rate
that ensures that the required number of entries are freed.
In Section 2.3 we give an example of how a router manu-
facturer could conﬁgure ANF to ensure that router memory
and processing power are not exhausted under any possible
traﬃc mix.
Many proofs of the lemmas presented in this section are
omitted for brevity. They can be found in the technical
report version of this paper [14].
2.1 Operation in measurement bins
It is easiest to ﬁrst address the mismatch between the Net-
Flow’s ﬂow termination heuristics and the analysis based on
time bins used by applications. We can simplify processing
of NetFlow data if all ﬂow records reported ﬁt within the
bin used in analysis. We divide the NetFlow operation into
short bins so that the bins used by traﬃc analysis are exact
multiples of the measurement bins. We do not terminate
ﬂow records during the measurement bins, but terminate all
active ﬂow records at the end of the bin. To correctly place
ﬂow records in analysis bins, the analysis application needs
to know only to which measurement bin it belongs. The
timestamps of the ﬁrst and last packet in ﬂow records are
no longer necessary, but they can be retained for backward
compatibility. Alignment between measurement and analy-
sis bins is not a problem if routers have accurate clocks, or
use solutions such as the Network Time Protocol [22] to keep
their clocks from drifting. Due to binning and to changes of
sampling rate during the operation of ANF, the timestamps
in the ﬂow records cannot be used directly to derive ﬂow
length information. While ﬂow length information might
be derived indirectly, ﬂow length statistics are outside the
scope of this paper.
The size of measurement bins is a compromise between
two opposing considerations. Larger measurement bins re-
duce the traﬃc generated by NetFlow since records are re-
ported less often. On the other hand measurement bins must
be at least as small as the smallest analysis bins, and smaller
bins mean prompter reporting of network traﬃc. Choosing
the bin size involves the same tradeoﬀs as choosing the ac-
tive timeout that controls how long the entry of an active
ﬂow stays before being terminated and reported by Cisco’s
NetFlow to avoid staleness (default 30 minutes). Anecdotal
evidence suggests that network operators often decrease the
active timeout to obtain prompter reporting [2]. We con-
clude that the size of the measurement bin will have to be a
0.01
)
e
l
a
c
s
g
o
l
(
e
t
a
r
g
n
i
l
p
m
a
S
Adaptive NetFlow
Sampled NetFlow
Adaptive NetFlow
Sampled NetFlow
1000
900
800
700
600
500
400
300
200
100
)
s
e
i
r
t
n
e
f
o
s
d
n
a
s
u
o
h
t
(
e
g
a
s
u
y
r
o
m
e
M
0.001
s
t
r
a
t
s
n
i
b
t
s
r
i
F
s
d
n
e
n
i
b
t
s
r
i
F
s
d
n
e
s
t
r
a
t
s
n
i
b
S
o
D
d
n
o
c
e
S
s
d
n
e
n
i
b
d
r
i
h
T
s
d
n
e
n
i
b
h
t
r
u
o
F
Time
s
d
n
e
s
d
n
e
n
i
b
S
o
D
h
t
f
i
F
s
d
n
e
n
i
b
h
t
x
i
S
s
d
n
e
n
i
b
h
t
n
e
v
e
S
0
s
t
r
a
t
s
n
i
b
t
s
r
i
F
s
d
n
e
n
i
b
t
s
r
i
F
s
d
n
e
s
t
r
a
t
s
n
i
b
S
o
D
d
n
o
c
e
S
s
d
n
e
n
i
b
d
r
i
h
T
s
d
n
e
n
i
b
h
t
r
u
o
F
Time
s
d
n
e
s
d
n
e
n
i
b
S
o
D
h
t
f
i
F
s
d
n
e
n
i
b
h
t
x
i
S
s
d
n
e
n
i
b
h
t
n
e
v
e
S
Figure 4: ANF automatically chooses a lower sam-
pling rate during a DoS attack. While NetFlow’s
sampling rate stays constant during a DoS attack,
our Adaptive NetFlow switches to a lower sampling
rate during each bin spanning the attack to keep the
number of ﬂow records generated constant. At the
start of each new bin the rate is reset to the maxi-
mum, so that when the attack ends the rate is not
kept unnecessarily low.
conﬁgurable parameter in Adaptive NetFlow. We consider
that one minute and ﬁve minutes are both good choices for
the default measurement bin size.
In our experiments we
used the more challenging one minute size for the measure-
ment bins.
2.2 Adapting the sampling rate
Identifying the optimal sampling rate for NetFlow is hard
because there are many conﬂicting factors to consider. One
of them is avoiding overloading the processor that performs
the NetFlow processing, whether it is the router CPU or a
processor on a line card. The network operators must use
trial and error to ﬁnd the rate the router can support. In-
stead we propose that the router manufacturer determines
the maximum sampling rate at which the processor can op-
erate under worst case conditions. This traﬃc mix could
occur for example due to a massive distributed denial of
service attack.1 We use this as the maximum sampling rate
and we initialize the sampling rate to this value at the be-
ginning of each bin.
Even if we start with a sampling rate low enough to not
overwhelm the processor, the number of entries created can
exceed the amount of available memory. With most traﬃc
mixes, the number of entries created during a one minute