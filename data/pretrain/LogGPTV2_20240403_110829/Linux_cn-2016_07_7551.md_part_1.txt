---
author: Matei Cezar
category: 系统运维
comments_data:
- date: '2016-08-04 15:47:31'
  message: "亲测不能完成搭建。在第二页新建一个default文件，内容完全复制于本页例子，将server_name全部改成本机ip，我尝试重启了一次nginx，结果重启失败。\r\n-- 启动结果为“done”。\r\n8月 04 15:43:50 PHOENIX sudo[14530]: pam_unix(sudo:session):
    session closed for user root\r\n8月 04 15:43:54 PHOENIX sudo[14551]:&nbsp;
    &nbsp;&nbsp; &nbsp;lzh : TTY=pts/4 ; PWD=/etc/nginx/sites-available ; USER=roo\r\n8月 04 15:43:54 PHOENIX sudo[14551]: pam_unix(sudo:session): session opened
    for user root by (uid=0)\r\n8月 04 15:43:54 PHOENIX systemd[1]: Starting
    A high performance web server and a reverse proxy server\r\n-- Subject:
    nginx.service 单元已开始启动\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n-- \r\n-- nginx.service 单元已开始启动。\r\n8月 04 15:43:54 PHOENIX nginx[14557]:
    nginx: [emerg] bind() to 0.0.0.0:443 failed (98: Address alread\r\n8月 04
    15:43:54 PHOENIX nginx[14557]: nginx: [emerg] bind() to [::]:443 failed (98: Address
    already i\r\n8月 04 15:43:54 PHOENIX nginx[14557]: nginx: [emerg] bind()
    to 0."
  postip: 218.249.73.5
  username: 青莲居士 [Chrome 51.0|GNU/Linux]
- date: '2016-08-04 15:49:53'
  message: "表示对default文件不理解，\r\n ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;\r\n这一行照着例子复制可以？"
  postip: 218.249.73.5
  username: 青莲居士 [Chrome 51.0|GNU/Linux]
- date: '2016-08-04 15:50:36'
  message: 删除新建的default后将备份的此文件恢复，nginx服务又可重新启动。
  postip: 218.249.73.5
  username: 青莲居士 [Chrome 51.0|GNU/Linux]
- date: '2016-08-04 21:22:46'
  message: 你这里的错误是，你的443 端口已经被占用了。
  postip: 103.243.65.192
  username: linux [Chrome 52.0|Mac 10.11]
- date: '2016-08-05 13:26:47'
  message: 谢谢，找到原因了，vmware-hostd进程占用了443端口，找了一天也没找到ubuntu中关闭这个进程自启动的方法，于是想让机器关闭vmware-workstation-server自启动，现在越找越困惑，ubuntu16怎么有的服务用systemctl
    disable管理，有的用update-rc.d 管理？我用update-rc.d关闭了vmware-workstation-server自启动后，再也不能启动这个服务了，无论是用update-rc.d还是sysv-rc-conf设置。真头痛啊。
  postip: 218.249.73.5
  username: 青莲居士 [Chrome 51.0|GNU/Linux]
- date: '2017-05-21 22:01:19'
  message: "ubuntu@VM-23-68-ubuntu:/$ openssl s_client -connect localhost:443 -nextprotoneg
    ''\r\nconnect: Connection refused\r\nconnect:errno=111\r\n这个是怎么回事"
  postip: 118.184.1.164
  username: 来自118.184.1.164的 Chrome 58.0|Windows 10 用户
count:
  commentnum: 6
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 20560
date: '2016-07-08 09:56:00'
editorchoice: false
excerpt: LEMP 是个缩写，代表一组软件包（L：Linux OS，E：Nginx 网络服务器，M：MySQL/MariaDB 数据库和 P：PHP 服务端动态编程语言)，它被用来搭建动态的网络应用和网页。
fromurl: http://www.tecmint.com/install-nginx-mariadb-php7-http2-on-ubuntu-16-04/
id: 7551
islctt: true
largepic: /data/attachment/album/201607/07/230043xr8zr0ftkr0mw1ft.png
permalink: /article-7551-1.html
pic: /data/attachment/album/201607/07/230043xr8zr0ftkr0mw1ft.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: LEMP 是个缩写，代表一组软件包（L：Linux OS，E：Nginx 网络服务器，M：MySQL/MariaDB 数据库和 P：PHP 服务端动态编程语言)，它被用来搭建动态的网络应用和网页。
tags:
- LEMP
- Nginx
- PHP
- MySQL
- MariaDB
thumb: false
title: 在 Ubuntu 16.04 为 Nginx 服务器安装 LEMP 环境（MariaDB，PHP 7 并支持 HTTP 2.0）
titlepic: true
translator: BriFuture
updated: '2016-07-08 09:56:00'
---
LEMP 是个缩写，代表一组软件包（L：Linux OS，E：Nginx 网络服务器，M：MySQL/MariaDB 数据库和 P：PHP 服务端动态编程语言)，它被用来搭建动态的网络应用和网页。
（LCTT 译注：为何采用 LEMP 而不是 LNMP 的缩写？据  的解释：Nginx 的发音是 Engine-X，重要的发音而不是首字母，而且 LEMP 实际上是可读的，而 LNMP 看起来只是字母表。）
![](/data/attachment/album/201607/07/230043xr8zr0ftkr0mw1ft.png)
*在 Ubuntu 16.04 安装 Nginx 以及 MariaDB，PHP7 并且支持 HTTP 2.0*
这篇教程会教你怎么在 Ubuntu 16.04 的服务器上安装 LEMP （Nginx 和 MariaDB 以及 PHP7）。
**前置准备**
* [安装 Ubuntu 16.04 服务器版本](http://www.tecmint.com/installation-of-ubuntu-16-04-server-edition/)
### 步骤 1：安装 Nginx 服务器
1、Nginx 是一个先进的、资源优化的 Web 服务器程序，用来向因特网上的访客展示网页。我们从 Nginx 服务器的安装开始介绍，使用 [apt 命令](http://www.tecmint.com/apt-advanced-package-command-examples-in-ubuntu/) 从 Ubuntu 的官方软件仓库中获取 Nginx 程序。
```
$ sudo apt-get install nginx
```
![](/data/attachment/album/201607/07/230043gm05lpsdfssvslzs.png)
*在 Ubuntu 16.04 安装 Nginx*
2、 然后输入 [netstat](http://www.tecmint.com/20-netstat-commands-for-linux-network-management/) 和 [systemctl](http://www.tecmint.com/manage-services-using-systemd-and-systemctl-in-linux/) 命令，确认 Nginx 进程已经启动并且绑定在 80 端口。
```
$ netstat -tlpn
```
![](/data/attachment/album/201607/07/230044jkviivhuu5ik44kz.png)
*检查 Nginx 网络端口连接*
```
$ sudo systemctl status nginx.service
```
![](/data/attachment/album/201607/07/230044pgkkzkpkrpww8bwq.png)
*检查 Nginx 服务状态*
当你确认服务进程已经启动了，你可以打开一个浏览器，使用 HTTP 协议访问你的服务器 IP 地址或者域名，浏览 Nginx 的默认网页。
```
http://IP-Address
```
![](/data/attachment/album/201607/07/230045bey5ccllsbrlry8l.png)
*验证 Nginx 网页*
### 步骤 2：启用 Nginx HTTP/2.0 协议
3、 对 HTTP/2.0 协议的支持默认包含在 Ubuntu 16.04 最新发行版的 Nginx 二进制文件中了，它只能通过 SSL 连接并且保证加载网页的速度有巨大提升。
要启用Nginx 的这个协议，首先找到 Nginx 提供的网站配置文件，输入下面这个命令备份配置文件。
```
$ cd /etc/nginx/sites-available/
$ sudo mv default default.backup
```
![](/data/attachment/album/201607/07/230045loqhtazpzqpoq8am.png)
*备份 Nginx 的网站配置文件*
4、然后，用文本编辑器新建一个默认文件，输入以下内容：
```
server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        root /var/www/html;
        index index.html index.htm index.php;
        server_name 192.168.1.13;
        location / {
                try_files $uri $uri/ =404;
        }
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_dhparam  /etc/nginx/ssl/dhparam.pem;
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 180m;
        resolver 8.8.8.8 8.8.4.4;
        add_header Strict-Transport-Security "max-age=31536000;
        #includeSubDomains" always;
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }
        location ~ /\.ht {
                deny all;
        }
}
server {
       listen         80;
       listen    [::]:80;
       server_name    192.168.1.13;
       return         301 https://$server_name$request_uri;
}
```
![](/data/attachment/album/201607/07/230046mmrrtr3mhukm3y11.png)
*启用 Nginx HTTP 2 协议*
上面的配置片段向所有的 SSL 监听指令中添加 http2 参数来启用 `HTTP/2.0`。
上述添加到服务器配置的最后一段，是用来将所有非 SSL 的流量重定向到 SSL/TLS 默认主机。然后用你主机的 IP 地址或者 DNS 记录（最好用 FQDN 名称）替换掉 `server_name` 选项的参数。
5、 当你按照以上步骤编辑完 Nginx 的默认配置文件之后，用下面这些命令来生成、查看 SSL 证书和密钥。
用你自定义的设置完成证书的制作，注意 Common Name 设置成和你的 DNS FQDN 记录或者服务器 IP 地址相匹配。
```
$ sudo mkdir /etc/nginx/ssl
$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
$ ls /etc/nginx/ssl/
```
![](/data/attachment/album/201607/07/230046gvtx7vym607u4dot.png)