ssh_user=root #检测无密码验证
ssh_port=22 #免密登录端口
repl_user=repluser #主从同步用户名
repl_password=123456
user=root #监控数据库用户名56用来监视51-55
password=123456
\[server1\]
hostname=192.168.4.51
candidate_master=1 #设置为候选master
\[server2\]
hostname=192.168.4.52
candidate_master=1 #设置为候选master
\[server3\]
hostname=192.168.4.53
candidate_master=1 #设置为候选master
\[server4\]
hostname=192.168.4.54
no_master=1 #不竞选master
\[server5\]
hostname=192.168.4.55
no_master=1 #不竞选master
#### 2.2.3部署故障切换脚本
在管理机主配置文件中如下语句里指定了故障切换脚本的目录与名称:
master_ip_failover_script=/usr/local/bin/master_ip_failover
#加载故障切换脚本
将脚本放置/usr/local/bin/目录中.并且命名为:master_ip_failover
\[root@sql56 \~\]# vim /usr/local/bin/master_ip_failover
**\-\-\-\-\-\-\--新脚本内容\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--**
#!/usr/bin/env perl
\# Copyright (C) 2011 DeNA Co.,Ltd.
\#
\# This program is free software; you can redistribute it and/or modify
\# it under the terms of the GNU General Public License as published
by：
\# the Free Software Foundation; either version 2 of the License, or
\# (at your option) any later version.
\#
\# This program is distributed in the hope that it will be useful,
\# but WITHOUT ANY WARRANTY; without even the implied warranty of
\# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
\# GNU General Public License for more details.
\#
\# You should have received a copy of the GNU General Public License
\# along with this program; if not, write to the Free Software
\# Foundation, Inc.,
\# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
\## Note: This is a sample script and is not complete. Modify the script
based on your environment.
use strict;
use warnings FATAL =\> \'all\';
use Getopt::Long;
use MHA::DBHelper;
my (
\$command, \$ssh_user, \$orig_master_host,
\$orig_master_ip, \$orig_master_port, \$new_master_host,
\$new_master_ip, \$new_master_port, \$new_master_user,
\$new_master_password
);
my \$vip = \'192.168.4.100/24\'; \# Virtual IP #此处修改实际的VIP
my \$key = \"1\";
my \$ssh_start_vip = \"/sbin/ifconfig eth0:\$key \$vip\";
my \$ssh_stop_vip = \"/sbin/ifconfig eth0:\$key down\";
GetOptions(
\'command=s\' =\> \\\$command,
\'ssh_user=s\' =\> \\\$ssh_user,
\'orig_master_host=s\' =\> \\\$orig_master_host,
\'orig_master_ip=s\' =\> \\\$orig_master_ip,
\'orig_master_port=i\' =\> \\\$orig_master_port,
\'new_master_host=s\' =\> \\\$new_master_host,
\'new_master_ip=s\' =\> \\\$new_master_ip,
\'new_master_port=i\' =\> \\\$new_master_port,
\'new_master_user=s\' =\> \\\$new_master_user,
\'new_master_password=s\' =\> \\\$new_master_password,
);
exit &main();
sub main {
if ( \$command eq \"stop\" \|\| \$command eq \"stopssh\" ) {
\# \$orig_master_host, \$orig_master_ip, \$orig_master_port are passed.
\# If you manage master ip address at global catalog database,
\# invalidate orig_master_ip here.
my \$exit_code = 1;
eval {
\# updating global catalog, etc
&stop_vip();
\$exit_code = 0;
};
if (\$@) {
warn \"Got Error: \$@\\n\";
exit \$exit_code;
}
exit \$exit_code;
}
elsif ( \$command eq \"start\" ) {
\# all arguments are passed.
\# If you manage master ip address at global catalog database,
\# activate new_master_ip here.
\# You can also grant write access (create user, set read_only=0, etc)
here.
my \$exit_code = 10;
eval {
my \$new_master_handler = new MHA::DBHelper();
\# args: hostname, port, user, password, raise_error_or_not
\$new_master_handler-\>connect( \$new_master_ip, \$new_master_port,
\$new_master_user, \$new_master_password, 1 );
\## Set read_only=0 on the new master
\$new_master_handler-\>disable_log_bin_local();
print \"Set read_only=0 on the new master.\\n\";
\$new_master_handler-\>disable_read_only();
\## Creating an app user on the new master
print \"Creating app user on the new master..\\n\";
\$new_master_handler-\>enable_log_bin_local();
\$new_master_handler-\>disconnect();
\## Update master ip on the catalog database, etc
&start_vip();
\$exit_code = 0;
};
if (\$@) {
warn \$@;
\# If you want to continue failover, exit 10.
exit \$exit_code;
}
exit \$exit_code;
}
elsif ( \$command eq \"status\" ) {
\# do nothing
exit 0;
}
else {
&usage();
exit 1;
}
}
sub start_vip() {
\`ssh \$ssh_user\\@\$new_master_host \\\" \$ssh_start_vip \\\"\`;
}
sub stop_vip() {
return 0 unless (\$ssh_user);
\`ssh \$ssh_user\\@\$orig_master_host \\\" \$ssh_stop_vip \\\"\`;
}
sub usage {
print
\"Usage: master_ip_failover \--command=start\|stop\|stopssh\|status
\--orig_master_host=host \--orig_master_ip=ip \--orig_master_port=port
\--new_master_host=host \--new_master_ip=ip
\--new_master_port=port\\n\";
}
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#### 2.2.4在主库服务器51上配置VIP
把vip 192.168.4.100配置当前主数据库服务器192.168.4.51上
\[root@sql51 \~\]# ifconfig eth0:1 192.168.4.100
\[root@sql51 \~\]# ifconfig eth0:1
eth0:1: flags=4163\ mtu 1500
inet 192.168.4.100 netmask 255.255.255.0 broadcast 192.168.4.255
ether 52:54:00:57:34:54 txqueuelen 1000 (Ethernet)
#### 2.2.5 管理主机56检测配置文件
**证ssh 免密登陆数据节点主机**
\[root@sql56 mha_manager\]# cd /usr/local/bin/
\[root@sql56 bin\]# ls
master_ip_failover
\[root@sql56 bin\]# masterha_check_ssh \--conf=/etc/mha_manager/app1.cnf
Fri Feb 22 14:31:21 2019 - \[info\] All SSH connection tests passed
successfully.
**验证数据节点的主从同步配置**
\[root@sql56 mha_manager\]# cd /usr/local/bin/
\[root@sql56 bin\]# masterha_check_repl
\--conf=/etc/mha_manager/app1.cnf
Fri Feb 22 19:31:00 2019 - \[info\] Alive Servers: #数据库服务器列表
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.51(192.168.4.51:3306)
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.52(192.168.4.52:3306)
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.53(192.168.4.53:3306)
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.54(192.168.4.54:3306)
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.55(192.168.4.55:3306)
Fri Feb 22 19:31:00 2019 - \[info\] Alive Slaves: #存活的从服务器
Fri Feb 22 19:31:00 2019 - \[info\] 192.168.4.52(192.168.4.52:3306)
Version=5.7.17-log (oldest major version between slaves) log-bin:enabled
Fri Feb 22 19:31:00 2019 - \[info\] Replicating from
192.168.4.51(192.168.4.51:3306)
验证数据节点时可以看到有哪些数据库服务器,以及目前主库服务器是192.168.4.51,
MySQL Replication Health is OK. #此结果显示成功
#如果显示 MySQL Replication Health is NOT OK! 不成功
**验证数据节点的主从同步配置遇到过的问题:**
**使用旧脚本**
\[root@sql56 \~\]# vim /etc/mha_manager/app1.cnf
master_ip_failover_script=/usr/local/bin/master_ip_failover
#加载故障切换脚本
\[root@sql56 \~\]# vim /usr/local/bin/master_ip_failover
#FIXME_xxx;
**以上两个配置文件中的两条语句只要注释其中一条即可**
要么注释master_ip_failover_script=/usr/local/bin/master_ip_failover
要么注释 FIXME_xxx;
最终更换master_ip_failover 文件,使用新的脚本文件无此问题
#### 2.2.6启动管理服务MHA_Manager
> \--remove_dead_master_conf //删除宕机主库配置
当前主库宕机后,把主库配置从配置文件中删除
> \--ignore_last_failover //忽略xxx.health文件
默认8个小时内主库连续宕机,不切换主库,如果添加
\--ignore_last_failover,则8小时内主库宕机了,就会切换
**启动:**
\[root@sql56 \~\]# masterha_manager \--conf=/etc/mha_manager/app1.cnf
\--remove_dead_master_conf \--ignoer_last_failover
Fri Feb 22 15:36:13 2019 - \[warning\] Global configuration file
/etc/masterha_default.cnf not found. Skipping.
Fri Feb 22 15:36:13 2019 - \[info\] Reading application default
configuration from /etc/mha_manager/app1.cnf..
Fri Feb 22 15:36:13 2019 - \[info\] Reading server configuration from
/etc/mha_manager/app1.cnf..
启动信息会占用一个终端显示,,,,此时不能ctrl + c
新开一个终端查看运行状态
\[root@sql56 \~\]# masterha_check_status
\--conf=/etc/mha_manager/app1.cnf
app1 (pid:13953) is running(0:PING_OK), master:192.168.4.51
当前主库:192.168.4.51
#### 2.2.7查看服务状态
\[root@sql56 \~\]# masterha_check_status
\--conf=/etc/mha_manager/app1.cnf
app1 (pid:13953) is running(0:PING_OK), master:192.168.4.51
当前主库:192.168.4.51
### 2.3配置数据库服务器51-55:
1授权监控用户,在51上做,52-55自动同步
mysql\> grant all on \*.\* to root@\"%\" identified by \"123456\";
Query OK, 0 rows affected, 1 warning (0.03 sec)
2在51-55上安装mha4mysql-node-0.56-0.el6.noarch.rpm(数据服务器节点)
\[root@sql51 \~\]# cd mha-soft-student/
\[root@sql51 mha-soft-student\]# ls
mha4mysql-manager-0.56-0.el6.noarch.rpm
mha4mysql-manager-0.56.tar.gz
mha4mysql-node-0.56-0.el6.noarch.rpm
perl-Config-Tiny-2.14-7.el7.noarch.rpm
perl-Email-Date-Format-1.002-15.el7.noarch.rpm
perl-Log-Dispatch-2.41-1.el7.1.noarch.rpm
perl-Mail-Sender-0.8.23-1.el7.noarch.rpm
perl-Mail-Sendmail-0.79-21.el7.art.noarch.rpm
perl-MIME-Lite-3.030-1.el7.noarch.rpm
perl-MIME-Types-1.38-2.el7.noarch.rpm
perl-Parallel-ForkManager-1.18-2.el7.noarch.rpm
\[root@sql51 mha-soft-student\]# rpm -ivh
mha4mysql-node-0.56-0.el6.noarch.rpm
3设置不自动删除本机的中继日志文件
Vim /etc/my.cnf
\[mysqld\]
server_id=55
relay_log_purge=off #不自动删除本机的中继日志文件
mysql\> set global relay_log_purge=off;
### 2.4测试集群配置
#### 2.4.1在主库51上授权访问客户,供客户端连接使用
mysql\> grant select,insert on bbsdb.\* to yaya@\"%\" identified by
\"123456\";
Query OK, 0 rows affected, 1 warning (0.04 sec)
mysql\> create database bbsdb;
Query OK, 1 row affected (0.04 sec)
mysql\> create table bbsdb.t1(id int);
Query OK, 0 rows affected (0.26 sec)
#### 2.4.2客户端50访问vip连接数据库服务,存取数据
\[root@client-50 \~\]# mysql -h192.168.4.100 -uyaya -p123456;
mysql\> insert into bbsdb.t1 values(11);
Query OK, 1 row affected (0.06 sec)
mysql\> insert into bbsdb.t1 values(22);