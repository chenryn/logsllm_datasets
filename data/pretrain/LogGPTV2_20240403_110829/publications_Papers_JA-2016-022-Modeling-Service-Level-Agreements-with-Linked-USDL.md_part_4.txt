4 usdl-agreement:guarantees [ previous use case, the guarantee of the compensation is
5 a usdl-agreement:GuaranteedValue ;
6 qudt:unit  ; a complex metric that specifies the formula used to com-
7 usdl-agreement:hasValue [ pute the penalty instead of a numeric value. For all these
8 a gr:QuantitativeValueFloat ;
elements, validity, evaluation and measuring intervals are
9 gr:hasValueFloat "10"ˆˆxsd:float ] ;
10 usdl-agreement:refersTo :ServiceCreditPercentage ] ; modeled using the Time ontology. Specifically, the exclu-
11 usdl-agreement:hasPrecondition [ sion interval for the application of penalties is modeled by
12 a usdl-agreement:MinGuaranteedValue ;
13 qudt:unit  ; means of setting a validity interval for each guarantee that
14 usdl-agreement:hasValue [ considers only the part of the contract for which penalties
15 a gr:QuantitativeValueFloat ;
16 usdl-agreement:hasValueFloat "99"ˆˆxsd:float ] ; apply. Listing 6 shows some of these intervals defined in
17 usdl-agreement:refersTo :monthlyUptimePercentage ] . the call for tenders. Note that in this use case description
we do not specify date and time descriptions of intervals,
but only duration, since it is not describing a concrete bid
5.2 BusinessProcessOutsourcingServiceAgreement
21.The description of the operational services part of this use case
We also tested the suitability of our vocabulary to describe
can be found at https://github.com/linked-usdl/usdl-agreement/
the SLA of the BPO service we described in Section 3.2.2, tree/master/UseCases/AndalusianHealthService
GARC´IAetal.:MODELINGSERVICELEVELAGREEMENTSWITHLINKEDUSDLAGREEMENT 9
butthemaximumexclusionintervalsdefinedinthecallfor to an SLO (a Guarantee in our model). Finally,
tenders. Time Ontology does nonetheless provide support the SLA validity period can be also expressed us-
for specifying dates and intervals both in absolute and ing the hasValidityInterval property, or rather us-
relativeterms. ing the validFrom and validThrough properties of a
ServiceOffering.
Listing6
Specificationofcontractualexclusionintervals Note that metric definitions are not directly supported,
since Linked USDL Agreement relies on external vocabu-
1 :contractInterval a time:Interval ; laries to define service property metrics. As a result, our
2 time:hasDurationDescription model is not coupled with particular mechanisms to com-
3 [ a time:DurationDescription ;
pute metrics, since that is a responsibility of each metric
4 time:years 2 ] .
5 :slaExclusionInterval a time:Interval ; provideranddependsoneachservicescenario.Concerning
6 time:intervalStartedBy :contractInterval ; composability, a single ServiceOffering that bundles
7 time:intervalBefore :slaValidityInterval ;
8 time:hasDurationDescription several single services can be considered a particular case
9 [ a time:DurationDescription ; ofacompositeservice,enablingthedefinitionofagreement
10 time:weeks 8 ] .
11 :slaValidityInterval a time:Interval ; terms guaranteed over specific services included in the
12 time:hasDurationDescription offering.
13 [ a time:DurationDescription ;
14 time:years 1 ; Regarding the rest of the criteria, they are not directly
15 time:weeks 44 ] . covered by Linked USDL Agreement because they are not
presentinmostreal-worldSLAswehavefoundinouranal-
Finally,limitstomonthlypenaltycostsandtotalpenalty ysis [7]. Specifically, the ability to express soft constraints
costs are defined as two guarantees whose guarantor is is not supported since most SLOs are formalized as hard
the Andalusian Health System that guarantee maximum requirements; the negotiation since most SLAs are take-
values for the service properties that refer to these costs. it-or-leave-it offers without room for negotiation; and the
Consequently, our model also supports that business enti- abilitytoexpressrecoveryandsettlementactionssinceSLAs
ties involved in the SLA may have different liability roles generally only specify penalties. Moreover, the number of
dependingoneachagreementterm. proposalsactuallyfulfillingthesecriteriaarenomorethan2
exceptforrecoveryactionsthatareprovidedby4proposals.
Consequently,theyareonlyusefulinveryspecificscenarios.
5.3 LinkedUSDLAgreementcoverageevaluation
Nevertheless, Linked USDL Agreement can be easily
Inadditiontothecomprehensiveusecasevalidationprevi- extended to cope with additional features that may be
ouslydiscussed,weevaluatethecoverageofLinkedUSDL neededinsomescenarios,thankstoitsdesignapproachem-
Agreement against the comparison framework proposed bracingLinkedDataprinciples.Forexample,anegotiation-
in [6]. This comparison framework comprises 22 criteria related extension could be designed by extending the
coveringthewholeSLAlifecyclethatwereusedtocompare ServiceOfferingwithinformationaboutthenegotiation
14 different SLA and Service Contract Languages. Table 3 process and adding negotiability properties to Guarantee
summarizesthecriteriaandshowstheevaluationresultsof terms.
Linked USDL Agreement. The last column showcases how Inconclusion,LinkedUSDLAgreementsufficientlysup-
manyofthe9SLAlanguagesanalyzedfulfilleachcriteria. ports the definition of the most common features required
In summary, Linked USDL Agreement fulfills 14 out todescribeanSLAaccordingtothecomparisonframework
of the 22 criteria. First, the variety of formalisms is proposedin[6],anditactuallyperformsasoneofthebest14
high, using ontologies in our case. Functional and qual- SLA and service contract languages analyzed in the above
ity terms can be both described in Linked USDL Agree- mentioned comparison. Furthermore, using formal seman-
ment through Linked USDL Core’s ServiceOffering tics to describe SLAs is a major advantage of our model
andGuaranteeterms,respectively.Reusabilityisachieved in contrast to existing approaches, enabling automation of
thanks to the Linked Data approach used to design our the SLA lifecycle by sharing machine-understandable SLA
model.AlternativeservicelevelscanbespecifiedinLinked definitionsontheWeb.
USDL Agreement through different ServiceOfferings
for the same service, or by means of preconditions. The
6 LINKED USDL AGREEMENT TOOLING
MetricProvider business role played by an involved
entity, and hasMeasuringInterval property of Metric DescribinganSLAusingLinkedUSDLAgreement(aswith
fulfill metric providers and metric schedule criteria, re- anyotherformallanguage)canbeachallengingtask.Being
spectively. The condition evaluator also exists in our a manual activity, there is a risk of introducing errors that,
model as a business role. Qualifying conditions are equiv- dependingonthecomplexityoftheagreement,canbevery
alent to preconditions of the AgreementTerms. Liability high. Furthermore, since SLAs specify rights and responsi-
roles model obliged parties for each AgreementTerm. bilitiesofthestakeholdersthatcouldleadtocompensations,
Using properties like hasEvaluationInterval and their statements include sensitive information that should
hasValidityInterval we can model the assessment be carefully modeled. In this context, inconsistencies and
schedule of an SLO and validity periods for each otherconflictsbetweentermsoftheSLAsconstituteamajor
AgreementTerm. Both penalties and rewards are mod- issue to be avoided in order to prevent misunderstandings
eled as Compensations in Linked USDL Agreement, and or unexpected situations. Moreover, the usage of formal
they can be linked using the property hasCompensation languagesrepresentsanimportantbarrierfornon-technical
10 IEEETRANSACTIONSONSERVICESCOMPUTING,VOL.XX,NO.ZZ,MMYYYY
Table3
LinkedUSDLAgreementevaluationaccordingtothecomparisonframeworkfrom[6]
Criteria Description Evaluation Proposals
Formalism Thelanguage’sformalism Ontologies Various
Coverage Theabilitytoexpressfunctionalandqualityterms [y,y] 2[y,y]
Reusability TheabilitytoreusepartsoftheSLA yes 7yes,2part.
Composability TheabilitytorepresentSLAsforcompositeservices partial 1good,4fair
Metricdefinition Theabilitytodefinequalitymetrics external 5
Alternatives Theabilitytoexpressalternativeservicelevels yes 7impl.
Softconstraints TheabilitytoexpresssoftSLOs no 2
MatchmakingMetric DefinitionofhowtocompareSLAs no 2
Meta-Negotiation Theabilitytorepresentinformationaboutthenegotiationprocess no 1good,2fair
Negotiability TheabilitytodefinewhichpartsoftheSLAarenegotiable no 2part.
MetricProvider Theabilitytodefinethepartyresponsibleforproducingmetric’smeasurements yes 4
MetricSchedule Theabilitytodefinethemeasurementfrequencyofametric yes 4
ConditionEvaluator TheabilitytodefinethepartyresponsibleforSLOevaluation yes 2
QualifyingCondition TheabilitytodefineconditionsthatmustholdinordertoassessanSLO yes 2
Obliged TheabilitytoexpressthepartyinchargeofdeliveringwhatisguaranteedinanSLO yes 7
AssessmentSchedule TheabilitytoexpresstheassessmentfrequencyofanSLO yes 3
ValidityPeriod TheabilitytoexpressthetimeperiodinwhichtheSLOisguaranteed yes 4
RecoveryActions TheabilitytoexpresscorrectiveactionstobecarriedoutwhenanSLOisviolated no 4
Penalties Theabilitytoexpresspenaltiesincurredwhenonepartyviolatesitsguarantees SLO 3SL,2SLO
Rewards Theabilitytoexpressrewardsincurredwhenonepartyexceedsitsguarantees SLO 1SL,2SLO
SettlementActions TheabilitytoexpressactionsconcerningthefinalSLAoutcome no 2
SLAValidityPeriod TheabilitytoexpresstheperiodwhereanSLAisvalid yes 5
Figure4.ToolingArchitecture.
usersthatareusedtonaturallanguagewithanappropriate questions; finally, we present the RDFa extension we have
human-orientedstructureandsyntax. developed.
Inordertofacethesechallengesweprovideaconvenient
tool22 for the formal modeling and consistency checking 6.1 Architecture
of SLAs. Additionally, we provide an intuitive RDFa-based The tool has been developed within the context of the
solution to define natural language views of the document IDEAS framework that provides a generic on-line develop-
that are bound to the formal Linked USDL Agreement in mentenvironmentfordomain-specificlanguages(DSL).
order to i) synchronize the natural language description Specifically,asshowninFigure4,theIDEASframework
andthemachinereadableserialization;andii)tohelpnon- iscomposedofanuserfront-endthatprovidesthecommon
technicalusersinproducingrichdescriptionssuitableboth functionality of on-line development environments such as
forhumansandformachinesinaneasymanner. authentication, file management and console; also, there is
In the following subsections, we describe the different a generic client-based editor that can be parametrized with
elements developed: first, we introduce the architecture different grammars and syntaxes. On the back-end, IDEAS
of the solution; second we present the different analysis proposesastandardizedmodulesystemthatisbasedupon
paradigmsusedforbothvaliditycheckingandcompetency RESTinterfaces.Eachmoduleisassociatedwithaparticular
languageanditislaunchedwhenaparticularfileisloaded
based on its type; the language is represented as a model
22.Ademoofthetoolpresentedisavailableathttp://www.isa.us.
es/IDEAS/Linked USDL Agreement that can be serialized in different formats; consequently,
Linked USDL Agreement WS Agreement
Agreement Term
>
EntityLiability
Guarantee Term Creation Constraint
hasEntityLiability Compensation
guaranteedOver AgreementTerm
Guarantee
usdl-core:Service Agreement Context
guarantees hasPrecondition Compensation
SLO
Metric Actor
Qualifying Condition
AgreementCondition
refersTo hasValue
qr:QualitativeValue Property
Service Property
hasMetric qr:QuantitativeValue
Monitorable Property Configuration Property
Metric
GARC´IAetal.:MODELINGSERVICELEVELAGREEMENTSWITHLINKEDUSDLAGREEMENT 11
Figure5.MappingfromLinkedUSDLAgreementtoWS-Agreement.
once the file is loaded, the editor supports the change
betweendifferentviewsineachoftheformatsofthespecific
language.Thestructureofamoduleiscomprisedoftwosets
ofoperations:(i)languagemanagementoperationsthatpro-
videsyntaxcheckingandthemarshalingandunmarshaling
of the different formats and (ii) analysis operations that
providespecificfunctionalitytoextractinformationoverthe
documentloaded.
In Figure 4, highlighted elements represent the specific
extension of the IDEAS platform for the current work. In
particular,thisextensioncomprisesthreeparts:
• A new IDEAS module has been created to support
editing and analyzing Linked USDL Agreement, us-
ing the Turtle RDF syntax. This module provides a
set of operations based on our competency questions
transformed into generic SPARQL queries that can be
dynamically executed over any instance of documents
intheplatform.
• A binding extension to integrate RDFa enriched de- Figure6.Screenshotofvalidityanalysis.
scriptionsinnaturallanguagewithaparticularLinked
USDLAgreementdocument.Thisbindingprovidesan
entrylevelmechanismfornontechnicalusestohandle dressthisgoal,wereusetheconstraintprogrammingbased
LinkedUSDLAgreementdocuments. techniquepresentedin[14];specifically,wehavedeveloped
• In order to boost the applicability, we have developed a transformation from Linked USDL Agreement to a WS–
a transformation from Linked USDL Agreement to Agreement template that directly maps those constraints.
the WS–agreement specification since there is a fully This solution enables the exploitation of our existing in-
functional IDEAS module already developed in the frastructure for analyzing the validity of constraints, while
IDEAS framework. This module integration provides providingsupportforimportinglegacyagreementsinWS–
thepossibilityofawiderrangeofvalidityanalysis. Agreement. In Figure 5, we present the different relation-
ships between the concepts of Linked USDL Agreement
6.2 AnalysisofLinkedUSDLAgreementdocuments andWS–Agreement;basedonthisconceptualmapping,the
transformationiscarriedoutinthreestagesasfollows:
The tooling developed provides two different perspectives
of analysis: on the one hand a set of validity operations 1) Linked USDL Agreement guarantee terms are trans-
that helps the user to create a correct document avoiding formed into WS–Agreement guarantee terms, where
differenttypesofpotentialconflicts;ontheoneotherhand, guarantees, preconditions and compensations are
thetoolprovidesalistofanalysisoperationstoanswerthe mapped to SLOs, qualifying conditions and penalties
competencyquestionsenumeratedinSection3.2.3. orrewardsinbusinessvaluelists,respectively.
Validity analysis is based on an analysis of the con- 2) Linked USDL Agreement service properties that are
straints defined in agreement conditions. In order to ad- referred by agreement conditions are transformed into
12 IEEETRANSACTIONSONSERVICESCOMPUTING,VOL.XX,NO.ZZ,MMYYYY