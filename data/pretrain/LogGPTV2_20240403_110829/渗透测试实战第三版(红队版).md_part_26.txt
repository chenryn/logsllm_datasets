Mimimikittenz 导入内存，并运行 Invoke-mimikittenz 脚本。
![](4-17.png){.calibre11}
正如上面所看到的，用户通过 Firefox 登录到 Github
中，我们可以从浏览器内存中提取他们的用户名和密码。现在，我希望这本书的读者都能把这个工具用的越来越高级，为不同的应用程序创建更多的搜索查询。
### 从 Windows 凭据管理器和浏览器获取密码 {#4_the_drive_compromising_the_network.html#从-windows-凭据管理器和浏览器获取密码 .calibre15}
Windows 凭据管理器是 Windows
的默认功能，用于保存系统、网站和服务器的用户名、密码和证书。记不记得当你使用
Microsoft IE/EDGE
对网站进行身份验证后，通常会弹出一个弹出窗口，询问"是否要保存密码？"凭证存储就是存储这些信息的地方，在凭据管理器中，有两种类型的凭据：Web
和 Windows。你还记得哪个用户有权访问这些数据吗？它不是
`system`{.calibre14 .pcalibre4
.pcalibre3}，而是登录后可以检索此信息的用户。这对我们来说是很好的，就像任何钓鱼网站或代码执行一样，我们通常都可以用别的方法获得那个用户的权限。最好的一点是，我们甚至不需要成为本地管理员来提取这些数据。
![](4-18.png){.calibre11}
如何提取这些信息呢？我们可以使用两种不同的 PowerShell
脚本导入以收集此数据：
-   收集网络凭据：
    -   [https://github.com/samratashok/nishang/blob/master/Gather/Get-WebCredentials.ps1](https://github.com/samratashok/nishang/blob/master/Gather/Get-WebCredentials.ps1){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   收集 Windows 凭证（只收集通用的而不是目标域特有的）：
    -   [https://github.com/peewpw/Invoke-WCMDump/blob/master/Invoke-WCMDump.ps1](https://github.com/peewpw/Invoke-WCMDump/blob/master/Invoke-WCMDump.ps1){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
![](4-19.png){.calibre11}
从上图中可以看到，我们提取了他们的 Facebook
存储的凭证和任何他们拥有通用的凭证。记住，对于 Web
凭据，Get-WebCredentials 只能从 Internet Explorer/Edge
获取密码。如果我们需要从 Chrome 获取，我们可以使用 Empire payload 的
powershell/collection/ChromeDump。在获取之前，要运行 ChromeDump
的话，首先需要终止 Chrome 进程，然后运行
ChromeDump，最后，我喜欢拉取下载所有的浏览器历史和 cookies。
我们不仅可以了解他们的内部服务器的大量信息，而且，如果他们的会话仍然存在，我们也可以使用他们的
cookies 和身份验证，而不必知道他们的密码!
使用如下 PowerShell
脚本：[https://github.com/sekirkity/browsergather](https://github.com/sekirkity/browsergather){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"} ，我们可以提取所有浏览器
cookies，并通过我们的浏览器利用这些 cookies，但是所有这些 cookies
都没有提升权限的功能。
![](4-20.png){.calibre11}
接下来，我们甚至可以开始在受害者系统上可能安装的所有第三方软件中寻找服务器和凭证。一个叫做
[SessionGopher](https://github.com/fireeye/SessionGopher){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"} 的工具可以从
winscp、putty、superputty、filezilla 和 microsoft
远程桌面获取主机名和保存密码。还有一个其他功能是能够从网络上的其他系统远程获取它的本地凭据，启动
sessiongopher 的最简单方法是导入 PowerShell 脚本并执行使用：
-   Load PowerShell File:
    -   . .\\SessionGopher.ps1
-   Execute SessionGopher
    -   Invoke-SessionGopher -Thorough
我们可以通过以下几种方式从主机系统获取凭证，而无需提升权限、绕过 UAC
或使用键盘记录器。因为我们是在用户的系统会话中，所以我们可以访问主机上的许多资源，以帮助我们继续攻击。
### 从 OSX 获取本地凭证和信息 {#4_the_drive_compromising_the_network.html#从-osx-获取本地凭证和信息 .calibre15}
本书内的大部分横向运动集中在 Windows
上。这是因为几乎所有中大型环境都使用 Active Directory
来管理其系统和主机。我们每年都能看到越来越多的 Mac
电脑，所以希望本书的内容也稍带提及一下 MAC。一旦进入一个 MAC
主机的内网环境，许多攻击就类似于在 Windows
主机环境中的攻击（即扫描默认凭据、Jenkin
等应用程序攻击，嗅探网络，并通过 SSH 或 VNC 横向移动）。
有多个渗透攻击框架的 payload 支持 Mac，我最喜欢的是使用 Empire。Empire
可以生成多个 payload 来诱骗受害者执行我们的代理，其中包括 Ducky
scripts、二进制可执行程序、Office 宏、Safari 启动程序、pkg
安装包等等。例如，我们可以创建一个和 Windows 主机适用的 PowerShell
Empire 中的 Office 宏：
1.  打开 Empire
2.  首先，确保你能像我们在本书的开头所做的那样设置你的 Empire 监听器
3.  接下来，我们需要构建一个 OSX 宏的 payload
    ``` calibre21
    use Stager osx/macro
    ```
4.  设置要写入本地文件系统的输出文件
    ``` calibre21
    set outfile/tmp/mac.py
    ```
5.  生成 Payload
![](4-21.png){.calibre11}
如果你查看生成的 Office 宏，你将看到它只是由 Python 执行的
Base64代码。幸运的是，Python 是 Mac
上的默认应用程序，当执行这个宏时，我们应该得到 `agent beacon`{.calibre14
.pcalibre4 .pcalibre3}。
要在 Mac 中创建恶意 Exce l文件，我们可以打开一个新的 Excel
工作表，转到"工具"，查看宏，然后在此工作簿中创建宏，一旦 Microsoft
Visual Basic
打开，就删除所有当前代码并将其替换为所有新的宏代码。最后，将其保存为
XLSM 文件。
![](4-22.png){.calibre11}
现在，把你的恶意文件发送给你的目标攻击者，看着 Empire
大展神威。在受害者那边，一旦他们打开 Excel 文件，就会出现这样的情况：
![](4-23.png){.calibre11}
确保创建了一个合理的情形，让他们单击"启用宏"。
一旦你的代理连接回你的 Empire
服务器，接下来的操作和侦察阶段就非常相似了。我们需要：
1.  转储浏览器信息和密码：
    ``` calibre21
    usemodule collection/osx/browser_dump
    ```
2.  启用键盘记录器：
    ``` calibre21
    usemodule collection/osx/keylogger
    ```
3.  让应用程序提示获取密码：
    ``` calibre21
    usemodule collection/osx/prompt
    ```
4.  始终打开电脑摄像头拍照：
    ``` calibre21
    usemodule collection/osx/webcam
    ```
## 利用 Windows 域环境的本地应用程序进行攻击 {#4_the_drive_compromising_the_network.html#利用-windows-域环境的本地应用程序进行攻击 .calibre12}
同样，在下面的示例中，我们将使用 PowerShell Empire。当然，你还可以使用
Metasploit、Cobalt Strike 等类似的攻击框架进行相同的攻击。只要你有能力将
PowerShell
脚本导入内存，并且能够绕过主机系统的任何防护，用什么其实并不重要。
现在的你已经完全空置了受害者的主机，从他们的工作主机偷走了所有的秘密，还了解一些受害者浏览的网站，并运行了一些类似
netstat 的命令进行侦察工作\...那接下来是什么?
对于红队队员来说，真正的问题是找到有关服务器、工作站、用户、服务以及他们的
Active Directory
环境的可靠信息。在许多情况下，由于受到网络警报和被抓获的风险，我们无法运行任何漏洞扫描操作，甚至无法运行
NMAP
扫描。那么，我们如何利用网络和服务的"特性"来查找我们需要的所有信息？
### Service Principal Names（服务主体名称） {#4_the_drive_compromising_the_network.html#service-principal-names（服务主体名称） .calibre15}
服务主体名称（即 SPN）是 Windows
中的一项功能，它允许客户端能够唯一地标识服务的实例。Kerberos
身份验证使用 SPN
将服务实例与服务登录帐户关联\[[https://msdn.microsoft.com/enus/library/ms677949(v=vs.85).aspx](https://msdn.microsoft.com/enus/library/ms677949(v=vs.85).aspx){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"}\]
。例如，你可以在那些运行 MSSQL 服务器、HTTP
服务器、打印服务器和其他服务器的服务帐户找到一个用于服务的
SPN。对于攻击者来说，查询 SPN
是爆破阶段的重要部分。这是因为任何域用户帐户都可以查询与 Active
Directory 关联的所有服务帐户和服务器的
AD。我们可以在不扫描单个主机的情况下识别所有数据库服务器和 Web 服务器！
作为一个攻击者，我们可以利用这些"特性"来查询 Active
Directory。在任何已经加入域的计算机上，攻击者都可以运行 setspn.exe
文件来查询 Active Directory（AD）。此文件是所有 Windows 机器默认自带的
Windows 二进制文件。
-   setspn -T \[DOMAIN\] -F -Q */*
-   功能
    -   -T = 对指定域执行查询
    -   -F = 在 AD 环境而不是域级别环境执行查询
    -   -Q = 在每个目标域或林环境上执行
    -   */* = 显示所有
我们可以从 setspn 中看到什么类型的信息？下面，运行 setspn
命令，我们会看到一些在域控制器上运行的服务的信息，还有关于工作站的信息，我们还找到了一个名为
csk-github 的服务器。在这个服务器中，我们可以看到在主机上运行着一个 HTTP
服务。如果这些相同的协议运行在不同的端口上的话，这些信息也会被列出。
![](4-24.png){.calibre11}
setspn
不仅提供有关服务用户和所有主机名的有用信息，它甚至也会告诉我们哪些服务正在系统上什么端口上运行。如果我们可以直接从