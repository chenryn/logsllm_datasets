### Process and Stability of Response Intervals

In the request-response examination, five consecutive tests are conducted. If the deviation among the five measured response intervals is minimal, the responder is deemed a legitimate device. As illustrated in Figure 11, the response interval for the same device varies from 15ms to 40ms.

If the response intervals are not stable within a group of five request-response examinations, the authentication process becomes unreliable, as it becomes difficult to distinguish between a legitimate device and an attacker that randomly generates response signals. We conducted a total of 50 groups of authentications across three different environments.

Figure 12 displays the cumulative distribution function (CDF) of the deviations of each response interval from the group average. More than 87% of the deviations are less than 0.5ms. Although the average response interval may differ among various groups, the response intervals within each group remain stable.

We set a threshold of 0.5ms to ensure that the five response signals originate from the same device. This method effectively detects legitimate responses. In the previous section, we set the authentication interval threshold to 21ms. Considering the length of the response signal, which is 8ms, and the response interval difference threshold of 0.5ms, the randomness of intervals between two adjacent authentications, ranging from 40ms to 80ms, is sufficient to prevent the response signal from being covered by the next request and to thwart attackers from predicting the timing of the request signal. Thus, the bidirectional initial authentication with ten request-response examinations can be completed in \( T \leq 10 \times 80\text{ms} = 0.8\text{s} \).

### Performance of Authentication Using ACR

Since we use the Acoustic Channel Response (ACR) to verify device identity during key agreement, the detected ACR must be highly correlated with the response signal ACR. We conducted three sets of experiments in a meeting room, a non-line-of-sight (N-LOS) meeting room, and a coffee shop to examine the correlation between the overlapped signal ACR and the response signal ACR. Figure 13 shows the probability density function (PDF) of the correlation coefficients between the ACR of the overlapped signal and the ACR of the corresponding response signal. The correlations in the meeting room and coffee shop are concentrated between 0.95 and 1. In contrast, the correlations in the N-LOS environment are mainly distributed below 0.95. Despite frequent movement in the coffee shop, the impact on ACR is limited. The N-LOS experiments were conducted in a meeting room with the line-of-sight (LOS) blocked by a booklet, where the recorded acoustic signal primarily comes from reflection paths. The multipath effects on ACR are more pronounced in the N-LOS environment, and even minor changes in the multipath environment (e.g., people walking out of the door or trees swaying in the wind) can affect the ACR. Since we can detect attackers in N-LOS, users only need to exclude attackers in LOS within a safe distance.

### Influence of Coding Density on Transmission Rate

To successfully decode using our sine wave-based pulse coding method, we need to include blank bits between adjacent coding bits to reveal the pulse shape. More blank bits mean fewer coding bits on the chirp signal, resulting in lower coding density. Figure 14 shows the bit error rate (BER) of decoding by varying the number of blank bits while keeping the device distance at 3 cm. The decoding error rate decreases with the number of blank bits, indicating that lower coding density achieves a lower BER. All coding densities have a BER below 0.1.

To successfully agree on a 2048-bit public key and session key, it is necessary to add enough error correction bits for the corresponding BER. If we use Reed-Solomon (RS) codes for error correction, the public key transmission time \( T \) for each coding density can be calculated using Equation 5:

\[
T = \frac{N_k (1 + 2 R_e)}{\text{blank} + 1} \cdot B
\]

where \( N_k = 2048 \) is the length of the 2048-bit public key, \( R_e \) is the bit error rate, "blank" and \( B \) represent the number of blank bits between two adjacent coding bits and the bandwidth, respectively. The lines in Figure 14 show the corresponding \( T \) for each coding density. Although the BER is higher with high coding density, the transmission time is shorter. If we choose a coding density with two blank bits between each pair of adjacent coding bits, the time to transmit a 2048-bit public key is only 1s, which is ten times faster than TDS [19]. Given that the bidirectional initial authentication with ten request-response examinations takes 0.8s, the 2048-bit public key transmission time is 1s, and the 256-bit encrypted session key transmission time is 0.1s, the complete authentication and key agreement process can be finished in 2s.

Figure 15 demonstrates the benefit of combining the two audio channels from the top and bottom microphones on the same smartphone. Combining the two channels significantly reduces the BER. The BER for the top microphone channel is much higher than that for the bottom microphone, likely due to the different distances from the sound source. In our experiments, we placed two smartphones side by side, with the loudspeaker of the source device at the bottom, making the responder's bottom microphone closer to the sound source than its top microphone. Figure 16 illustrates the effect of device distance on the decoding error rate, showing that the BER increases with increasing device distance.

### Related Work

In scenarios where devices need to pair without prior security associations, the only feature available for device authentication is physical proximity. Proximity-based approaches often use location-sensitive features such as received signal strength (RSS) [12][17][3][14][20] and channel state information (CSI) from orthogonal frequency division multiplexing (OFDM) [19][18][11][22][9]. RSS-based methods suffer from low key agreement efficiency; for example, ProxiMate [12] takes over a minute to agree on a 256-bit key due to a key generation rate of less than 5 bits per second. These methods are also vulnerable to predictable channel attacks. CSI provides richer information and a higher key generation rate but requires Intel 5300 wireless NICs. TDS [19] needs the authentication distance to be less than 5cm between device antennas, which is impractical for mobile devices like smartphones with built-in network cards.

Hardware fingerprinting-based approaches [8][2][16][4][23][6] generate fingerprints based on the complex physical characteristics of the hardware in mobile devices. These methods require learning the fingerprint or sharing a common fingerprint database in advance. S2M [4] authenticates devices using the frequency response (FR) of speakers and microphones from two wireless IoT devices, requiring a learning process to obtain the FR. S2M [4] and [23] consider the RF of the acoustic channel mainly related to hardware and ignore the effect of environmental multipath reflections. Our experiments show that the FR of the acoustic channel is highly related to both hardware and multipath reflections, as illustrated in Figure 2(b). The fingerprints from the learning and verification processes differ significantly when verification is not performed at the same position as the learning process in S2M.

### Conclusion

We present GeneWave, a fast authentication and key agreement protocol for commodity mobile devices using acoustic signals. GeneWave achieves bidirectional initial authentication based on the response interval between two devices, eliminating time uncertainty through fast signal detection and redundancy time cancellation. It also obtains the initial ACR for authentication. To improve coding rate while preserving ACR features, we designed a novel encoding scheme. Two devices can authenticate each other and securely agree on a symmetric key. GeneWave does not require special hardware or a pre-built fingerprint database, making it easy to use on commercial mobile devices. Extensive experiments demonstrate the flexibility and robustness of GeneWave, showing that it can achieve secure and user-friendly authentication and key agreement for mobile devices. We believe GeneWave provides a convenient way for authentication and key agreement on commodity devices.

### Acknowledgment

This work was partially supported by NSFC under grants 61572277, 61532012, and 61529202.

### References

[1] H. Bojinov, Y. Michalevsky, G. Nakibly, and D. Boneh. Mobile device identification via sensor fingerprinting. arXiv preprint arXiv:1408.1416, 2014.
[2] V. Brik, S. Banerjee, M. Gruteser, and S. Oh. Wireless device identification with radiometric signatures. In Proceedings of MobiCom, 2008.
[3] G. Chandrasekaran, J.-A. Francisco, V. Ganapathy, M. Gruteser, and W. Trappe. Detecting identity spoofs in IEEE 802.11e wireless networks. In Proceedings of GLOBECOM, 2009.
[4] D. Chen, N. Zhang, Z. Qin, X. Mao, Z. Qin, X. Shen, and X.-Y. Li. S2M: A lightweight acoustic fingerprints-based wireless device authentication protocol. IEEE Internet of Things Journal, 4(1):88–100, 2017.
[5] N. Cheng, X. O. Wang, W. Cheng, P. Mohapatra, and A. Seneviratne. Characterizing privacy leakage of public Wi-Fi networks for users on travel. In Proceedings of INFOCOM, 2013.
[6] A. Das, N. Borisov, and M. Caesar. Do you hear what I hear?: Fingerprinting smart devices through embedded acoustic components. In Proceedings of CCS, 2014.
[7] S. Dey, N. Roy, W. Xu, R. R. Choudhury, and S. Nelakuditi. AccelPrint: Imperfections of accelerometers make smartphones trackable. In Proceedings of NDSS, 2014.
[8] S. Jana and S. K. Kasera. On fast and accurate detection of unauthorized wireless access points using clock skews. IEEE Transactions on Mobile Computing, 9(3):449–462, 2010.
[9] Z. Jiang, J. Zhao, X.-Y. Li, J. Han, and W. Xi. Rejecting the attack: Source authentication for Wi-Fi management frames using CSI information. In Proceedings of INFOCOM, 2013.
[10] L. Lai, Y. Liang, and H. V. Poor. A unified framework for key agreement over wireless fading channels. IEEE Transactions on Information Forensics and Security, 7(2):480–490, 2012.
[11] H. Liu, Y. Wang, J. Yang, and Y. Chen. Fast and practical secret key extraction by exploiting channel response. In Proceedings of INFOCOM, 2013.
[12] S. Mathur, R. Miller, A. Varshavsky, W. Trappe, and N. Mandayam. Proximate: Proximity-based secure pairing using ambient wireless signals. In Proceedings of MobiSys, 2011.
[13] M. Miettinen, N. Asokan, T. D. Nguyen, A.-R. Sadeghi, and M. Sobhani. Context-based zero-interaction pairing and key evolution for advanced personal devices. In Proceedings of CCS, 2014.
[14] N. Patwari and S. K. Kasera. Robust location distinction using temporal link signatures. In Proceedings of MobiCom, 2007.
[16] G. E. Suh and S. Devadas. Physical unclonable functions for device authentication and secret key generation. In Proceedings of DAC, 2007.
[17] A. Varshavsky, A. Scannell, A. LaMarca, and E. De Lara. Amigo: Proximity-based authentication of mobile devices. In Proceedings of UbiComp, 2007.
[18] W. Xi, X.-Y. Li, C. Qian, J. Han, S. Tang, J. Zhao, and K. Zhao. KEEP: Fast secret key extraction protocol for D2D communication. In Proceedings of IWQoS, 2014.
[19] W. Xi, C. Qian, J. Han, K. Zhao, S. Zhong, X.-Y. Li, and J. Zhao. Instant and robust authentication and key agreement among mobile devices. In Proceedings of CCS, 2016.
[20] L. Xiao, L. Greenstein, N. Mandayam, and W. Trappe. A physical-layer technique to enhance authentication for mobile terminals. In Proceedings of ICC, 2008.
[21] S. Xiao, W. Gong, and D. Towsley. Secure wireless communication with dynamic secrets. In Proceedings of INFOCOM, 2010.
[22] J. Zhang, A. Marshall, R. Woods, and T. Q. Duong. Efficient key generation by exploiting randomness from channel responses of individual OFDM subcarriers. IEEE Transactions on Communications, 64(6):2578–2588, 2016.
[23] Z. Zhou, W. Diao, X. Liu, and K. Zhang. Acoustic fingerprinting revisited: Generate stable device ID stealthily with inaudible sound. In Proceedings of CCS, 2014.
[15] K. Ren, H. Su, and Q. Wang. Secret key generation exploiting channel characteristics in wireless communications. IEEE Wireless Communications, 18(4), 2011.