cess, the request-response examination is continuously con-
ducted for ﬁve times. If the deviation of the ﬁve measured
response intervals is small, the responder will be considered
as a legitimate device. As shown in Figure 11, we can see
the response interval of the same device varies from 15ms to
40ms.
If the response interval is not stable in a group of ﬁve
request-response examination, the authentication will be not
safe that we can not distinguish a legitimate device from
an attacker which randomly plays the response signal. We
conduct total 50 groups of authentication in three different
environments.
Figure 12 shows the CDF of the deviation of each response
interval with the group average. We can see that more than
87% percent of deviations are less than 0.5ms. Although the
average response interval may vary among different groups,
but the response intervals are stable in each group.
We set the threshold to 0.5 ms for guaranteeing the ﬁve
response signals are from the same device. The ﬁve request-
response examinations can work well for detecting legitimate
response. We set the authentication interval threshold to 21ms
in last section. Considering the length of response signal which
we set to 8ms, and the response interval difference threshold
that we set to 0.5ms, the randomness of intervals between two
adjacent authentications varies between 40ms and 80ms will
be enough for guaranteeing the response signal will not be
covered by the next requesting and preventing attackers from
 f0 f0+BFrequency   Powermicrophone on topmicrophone on bottom15182124273033363942Response interval (ms)00.20.40.60.81CDFMeeting roomN-LOSCoffee shop0123Interval difference(ms)00.20.40.60.81ProbabilityMeeting roomN-LOSCoffee shopFig. 13: ACR correlation in
three circumstances.
Fig. 14: Bit error rates of dif-
ferent coding densities.
Fig. 15: Bit error rate declines
by combining two channels.
Fig. 16: Bit error rate of differ-
ent device distance
guessing the time of request signal. Then the bidirectional ini-
tial authentication with 10 times request-response examination
can be ﬁnished in T ≤ 10 ∗ 80ms = 0.8s.
3) Performance of Authentication by ACR: Since we use
the ACR to verify device identity while key agreement, the
correlation of detected ACR must be highly related with the
response signal ACR. We conduct three groups of experiments
in meeting room, N-LOS meeting room, and coffee shop to see
the correlation between overlapped signal ACR and response
signal ACR. Figure 13 shows the PDF (Probability density
function) of correlation coefﬁcients between the ACR of
overlapped signal and the ACR of the corresponding response
signal. We can see that the correlations in the meeting room
and coffee shop concentrate in the interval between 0.95 and
1. In comparison, the correlations in N-LOS circumstance
mainly distribute in the interval
less than 0.95. Although
people are frequently walking in coffee shop, the inﬂuence
on ACR is limited. The N-LOS experiments are taken place
in a meeting room with the LOS blocked with a booklet,
in this circumstance recorded acoustic signal mainly comes
from reﬂection paths. The multi-path effects on ACR is more
obvious in N-LOS circumstance, any tiny change of the multi-
path environment (e.g. human walking out of the door, tree
out the window swinging with the wind) can effect the ACR.
As we can detect attackers in N-LOS, the users only need to
exclude attackers in LOS within the safe distance.
4) The Inﬂuence of Coding Density on Transmission Rate:
For the purpose of decoding with our sine wave based pulse
coding method successfully, we need to preserve some blank
bits between two adjacent coding bits for revealing the pulse
shape on coding bits. More blank bits in coding bits interspace
means fewer coding bits on the chirp signal. Thus, the more
the blank bits, the lower the coding density. Figure 14 shows
the bit error rate of decoding by varying the blank bits when
we keep the device distance at 3 cm. We can see that the
decoding error rate is decreasing with the number of blank
bits. This means lower coding density can achieve lower bit
error rate. And we can also see the bit error rates are below
0.1 for all the coding density.
To successfully agree on the 2048 bits public key and
session key, it is necessary to add enough error correction bits
for corresponding bit error rate. If we use RS (reed-solomon)
Code as the error correction code, the public key transmit time
T for each coding density can be calculated by Eq. 5:
T = Nk(1 + 2Re)
blank + 1
B
(5)
Where Nk = 2048 is the length of the 2048 bits public
key, Re is bit error rate, blank and B stand for the number of
blank bits between two adjacent coding bits and band width.
The line in Figure 14 shows the corresponding T of each
coding density. Although the bit error rate is much higher
with a high coding density, the time for successfully transmit
is shorter with higher coding density. If we choose the coding
density with two blank bits between each two adjacent coding
bits, the time for transmitting a 2048 bits public key is only 1s.
This key generation rate is ten times of TDS[19]. Considering
the bidirectional initial authentication with 10 request-response
examination take 0.8s, 2048 bits public key transmission time
is 1s, and the 256 bits encrypted session key transmission time
is 0.1s, our complete authentication and key agreement process
can be ﬁnished in 2s.
Figure 15 shows the beneﬁt of decoding by combining the
two audio channels from top and bottom microphones on
the same smartphone. It is obvious that combination of two
channels can decrease bit error rate signiﬁcantly. We can also
ﬁnd that bit error rate of top microphone channel is much
higher than bottom microphone. This phenomenon is due to
the distance of sound source device with two microphones
are different. We place two smartphones side by side in our
experiments and the loudspeaker of the source device is on the
bottom of it, so the responder’s bottom microphone is closer
with the sound source than its top microphone. The inﬂuence
of device distance on decoding error rate is illustrated in
Figure 16, We ﬁnd that the decoding error rate increases with
the increasing of device distance.
VII. RELATED WORK
In the scenario of pairing devices without prior security
associations, devices have no prior knowledge of each other,
and the only feature that they can obtain for device authentica-
tion is the physical proximity. The proximity-based approaches
always use location-sensitive features such as received signal
strength (RSS)[12][17][3][14][20], and channel state informa-
tion (CSI) from orthogonal frequency division multiplexing
(OFDM) [19][18][11][22][9]. The RSS-based methods suffers
a serious disadvantage on the efﬁcient of key agreement, it
takes more than one minute for ProxiMate [12] to agree on a
0.80.850.90.951ACR correlation020406080100120pdfMeeting roomN-LOSCoffee shop24681012141618Number of blank bits between coding bits00.030.06Bit error rate0123456Transmit time(s)24681012141618Number of blank bits between coding bits00.040.080.12Bit error rateChannel of Top micChannel of Bottom micCombine two Channels0246810121416Distance between two devices(dm)00.10.20.30.40.5Bit error rateChannel of Top micChannel of Bottom micCombine two Channels256-bit key due to its key generation rate is less than 5 bits
per seconds. These methods are also vulnerable to predictable
channel attack. CSI can provide much richer information and
lead to a higher key generation rate. However, nowadays
CSI can only obtained by Intel 5300 wireless NICs. CSI is
very sensitive to location, TDS [19] needs the authentication
distance is less than 5cm between antennas of devices for
considerable bit error rate. This distance is too close for mobile
devices like smartphones which carry built-in network cards.
The hardware ﬁngerprinting-based approaches [8] [2] [16]
[4] [23] [6] generate ﬁngerprints based on the complex phys-
ical characteristics of the hardware in mobile devices. These
methods need to learn the ﬁngerprint or share a common
ﬁngerprint database in advance. S2M [4] authenticates devices
using the frequency response (FR) of speaker and microphone
from two wireless IoT devices and it needs a learning process
to obtain the FR in advance. S2M [4] and [23] both consider
the RF of the acoustic channel mainly related with hardware
and ignore the effect of environment multipath reﬂection. In
our experiments, we ﬁnd the FR of the acoustic channel both
highly related with hardware and multipath reﬂection, which is
illustrated in Figure 2 (b). The ﬁngerprint of learning progress
and veriﬁcation progress must differ a lot with each other when
veriﬁcation is not taken place at the same position of learning
progress in S2M.
VIII. CONCLUSION
We present GeneWave, a fast authentication and key agree-
ment protocol for commodity mobile devices to agree on a sy-
metric key using acoustic signal. GeneWave ﬁrst achieves bidi-
rectional initial authentication based on the response interval
between two devices. We eliminate time uncertainty on devices
through fast signal detection and redundancy time cancellation.
We also obtain the initial acoustic channel response (ACR)
for authentication through bidirectional initial authentication.
To address the challenge of improving coding rate while
preserving ACR features, we design a novel encoding scheme
to optimize encoding rate in key agreement while ensuring se-
curity. Therefore, two devices can authenticate each other and
securely agree on a symmetric key. GeneWave does not require
special hardware or pre-built ﬁngerprint database, and thus
it is easy-to-use on commercial mobile devices. We conduct
extensive experiments to show the ﬂexibility and robustness
of GeneWave. The experimental results show that GeneWave
can achieve a secure and easy-to-use authentication and key
agreement for mobile devices. We believe GeneWave provides
a convenient way for authentication and key agreement on
commodity devices.
ACKNOWLEDGMENT
This work is in part supported by NSFC under grant
61572277, grant 61532012, grant 61529202.
REFERENCES
[1] H. Bojinov, Y. Michalevsky, G. Nakibly, and D. Boneh. Mobile device
identiﬁcation via sensor ﬁngerprinting. arXiv preprint arXiv:1408.1416,
2014.
[2] V. Brik, S. Banerjee, M. Gruteser, and S. Oh. Wireless device identiﬁ-
cation with radiometric signatures. In Proceedings of MobiCom, 2008.
[3] G. Chandrasekaran, J.-A. Francisco, V. Ganapathy, M. Gruteser, and
W. Trappe. Detecting identity spoofs in ieee 802.11 e wireless networks.
In Proceedings of GLOBECOM, 2009.
[4] D. Chen, N. Zhang, Z. Qin, X. Mao, Z. Qin, X. Shen, and X.-Y. Li. S2m:
A lightweight acoustic ﬁngerprints-based wireless device authentication
protocol. IEEE Internet of Things Journal, 4(1):88–100, 2017.
[5] N. Cheng, X. O. Wang, W. Cheng, P. Mohapatra, and A. Seneviratne.
Characterizing privacy leakage of public wiﬁ networks for users on
travel. In Proceedings of INFOCOM, 2013.
[6] A. Das, N. Borisov, and M. Caesar. Do you hear what
i hear?:
Fingerprinting smart devices through embedded acoustic components.
In Proceedings of CCS, 2014.
[7] S. Dey, N. Roy, W. Xu, R. R. Choudhury, and S. Nelakuditi. Accel-
print: Imperfections of accelerometers make smartphones trackable. In
Proceedings of NDSS, 2014.
[8] S. Jana and S. K. Kasera. On fast and accurate detection of unauthorized
wireless access points using clock skews. IEEE Transactions on Mobile
Computing, 9(3):449–462, 2010.
[9] Z. Jiang, J. Zhao, X.-Y. Li, J. Han, and W. Xi.
Rejecting the
attack: Source authentication for wi-ﬁ management frames using csi
information. In Proceedings of INFOCOM, 2013.
[10] L. Lai, Y. Liang, and H. V. Poor. A uniﬁed framework for key agreement
IEEE Transactions on Information
over wireless fading channels.
Forensics and Security, 7(2):480–490, 2012.
[11] H. Liu, Y. Wang, J. Yang, and Y. Chen. Fast and practical secret key
extraction by exploiting channel response. In Proceedings of INFOCOM,
2013.
[12] S. Mathur, R. Miller, A. Varshavsky, W. Trappe, and N. Mandayam.
Proximate: proximity-based secure pairing using ambient wireless sig-
nals. In Proceedings of MobiSys, 2011.
[13] M. Miettinen, N. Asokan, T. D. Nguyen, A.-R. Sadeghi, and M. Sobhani.
Context-based zero-interaction pairing and key evolution for advanced
personal devices. In Proceedings of CCS, 2014.
[14] N. Patwari and S. K. Kasera. Robust location distinction using temporal
link signatures. In Proceedings of MobiCom, 2007.
[16] G. E. Suh and S. Devadas. Physical unclonable functions for device
authentication and secret key generation. In Proceedings of DAC, 2007.
[17] A. Varshavsky, A. Scannell, A. LaMarca, and E. De Lara. Amigo:
In Proceedings of
Proximity-based authentication of mobile devices.
UbiComp, 2007.
[18] W. Xi, X.-Y. Li, C. Qian, J. Han, S. Tang, J. Zhao, and K. Zhao.
In
Keep: Fast secret key extraction protocol for d2d communication.
Proceedings of IWQoS, 2014.
[19] W. Xi, C. Qian, J. Han, K. Zhao, S. Zhong, X.-Y. Li, and J. Zhao. Instant
and robust authentication and key agreement among mobile devices. In
Proceedings of CCS, 2016.
[20] L. Xiao, L. Greenstein, N. Mandayam, and W. Trappe. A physical-layer
technique to enhance authentication for mobile terminals. In Proceedings
of ICC, 2008.
[21] S. Xiao, W. Gong, and D. Towsley. Secure wireless communication with
dynamic secrets. In Proceedings of INFOCOM, 2010.
[22] J. Zhang, A. Marshall, R. Woods, and T. Q. Duong. Efﬁcient key gen-
eration by exploiting randomness from channel responses of individual
ofdm subcarriers. IEEE Transactions on Communications, 64(6):2578–
2588, 2016.
[23] Z. Zhou, W. Diao, X. Liu, and K. Zhang. Acoustic ﬁngerprinting
revisited: Generate stable device id stealthily with inaudible sound. In
Proceedings of CCS, 2014.
[15] K. Ren, H. Su, and Q. Wang.
channel characteristics in wireless communications.
Communications, 18(4), 2011.
Secret key generation exploiting
IEEE Wireless