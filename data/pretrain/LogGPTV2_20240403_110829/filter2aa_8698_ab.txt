[HKEY_CURRENT_USER\Console] "CodePage"=dword:0000fde9
---
### 文件和目录
**目录**
```bash
cd              切换目录
    cd ..               进入父目录
    cd /d d:            进入上次d盘所在的目录（或在直接输入：d:）
    cd /d d:\           进入d盘根目录
    cd d:               显示上次d盘所在的目录
    cd /d d:\src        进入 d:\src 目录
    cd prj\src\view     进入当前目录下的 prj\src\view 文件夹
```
#### 查看
**目录、文件信息**
```bash
dir             显示目录中的内容
    dir                 显示当前目录中的子文件夹与文件
    dir /b              只显示当前目录中的子文件夹与文件的文件名
    dir /p              分页显示当前目录中的子文件夹与文件
    dir /ad             显示当前目录中的子文件夹
    dir /a-d            显示当前目录中的文件
    dir c:\test         显示 c:\test 目录中的内容
    dir keys.txt        显示当前目录中 keys.txt 的信息
    dir /S              递归显示当前目录中的内容
    dir key*            显示当前目录下以 key 开头的文件和文件夹的信息
    dir /AH /OS         只显示当前目录中隐藏的文件和目录，并按照文件大小从小到大排序
    dir \\[IP]\c$       查看建立IPC连接的主机的C盘目录
tree            显示目录结构
    tree d:\myfiles     显示 d:\myfiles 目录结构
attrib          查看或修改文件或目录的属性  [A：存档  R：只读  S：系统  H：隐藏]
    attrib 1.txt        查看当前目录下 1.txt 的属性
    attrib -R 1.txt     去掉 1.txt 的只读属性
    attrib +H movie     隐藏 movie 文件夹
```
**文件内容**
```bash
type            显示文本文件内容
    type c:\11.txt          显示c盘中11.txt的文本内容
    type conf.ini           显示当前目录下conf.ini的文本内容
    type c:\11.txt | more   分页显示c盘中11.txt的文本内容
more            逐屏的显示文本文件内容
    more conf.ini       逐屏的显示当前目录下conf.ini的文本内容   [空格：下一屏 q：退出 ]
```
---
#### 创建
```bash
md              用于创建文件夹，不能创建文本文档或者其他
    md movie music          在当前目录中创建名为 movie 和 music 的文件夹
    md c:\aaa               在 C 盘的根目录下创建名为 aaa 的子目录；
    md c:\aaa\USER          在 aaa 子目录下再创建 USER 子目录。
fsutil          可用于执行多种与FAT 和NTFS 文件系统相关的任务
    fsutil file createnew D:\test-500.t1 524288000      创建512MB的文件示例
```
---
#### 删除
```bash
del             删除文件   注意：目录及子目录都不会删除
    del test
    删除当前目录下的 test 文件夹中的所有非只读文件（子目录下的文件不删除；删除前会进行确认；等价于 del test\*）
    del /f test
    删除当前目录下的 test 文件夹中的所有文件（含只读文件；子目录下的文件不删除；删除前会进行确认；等价于 del /f test\*）
    del /f /s /q test d:\test2\*.doc
    删除当前目录下的 test 文件夹中所有文件及 d:\test2 中所有 doc 文件（含只读文件；递归子目录下的文件；删除前不确认）
    del /ar *.*             删除当前目录下所有只读文件
    del /a-s *.*            删除当前目录下除系统文件以外的所有文件
```
---
#### 查询
```bash
find        文件中搜索字符串
    find /N /I "pid" 1.txt  在 1.txt 文件中忽略大小写查找 pid 字符串，并带行号显示查找后的结果
    find /C "exe" 1.txt     只显示在 1.txt 文件中查找到 exe 字符串的次数
    find /V "exe" 1.txt     显示未包含 1.txt 文件中未包含 exe 字符串的行
findstr     文件中搜索字符串
    findstr "hello world" 1.txt         在 1.txt 文件中搜索 hello 或 world
    findstr /c:"hello world" 1.txt      在 1.txt 文件中搜索 hello world
    findstr /c:"hello world" 1.txt nul  在 1.txt 文件中搜索 hello world，并在每行结果前打印出1.txt:   注：findstr 只有在2个及以上文件中搜索字符串时才会打印出每个文件的文件名，nul 表示一个空文件
    findstr /s /i "Hello" *.*           不区分大小写，在当前目录和所有子目录中的所有文件中的 hello
    findstr  "^[0-9][a-z]" 1.txt        在 1.txt 中搜索以1个数字+1个小写字母开头子串的行
    findstr /si /n encry_pwd= c:\config.ini         查询向日葵的验证码
    findstr /si /n fastcode= c:\config.ini          查询向日葵的识别码
    findstr /si /n fastcodehistroy= c:\config.ini   查询向日葵的连接历史
```
---
#### 修改
```bash
ren             文件或目录重命名
    ren rec.txt rec.ini     将当前目录下的 rec.txt 文件重命名为 rec.ini
    ren c:\test test_01     将 c 盘下的 test 文件夹重命名为 test_01
```
```
copy            拷贝文件
    copy /Y key.txt c:\doc  将当前目录下的 key.txt 拷贝到 c:\doc 下（不询问，直接覆盖写）
    copy key.txt +          复制文件到自己，实际上是修改了文件日期
    copy key.txt c:\doc
    将当前目录下的 key.txt 拷贝到 c:\doc 下（若doc中也存在一个 key.txt 文件，会询问是否覆盖）
    copy jobs c:\doc
    将当前目录下 jobs 文件夹中文件（不递归子目录）拷贝到 c:\doc 下（若 doc 中也存在相应的文件，会询问是否覆盖）
    copy key.txt c:\doc\key_bak.txt
    将当前目录下的 key.txt 拷贝到 c:\doc 下，并重命名为 key_bak.txt（若 doc 中也存在一个 key_bak.txt 文件，会询问是否覆盖）
    copy /Y key1.txt + key2.txt key.txt
    将当前目录下的 key1.txt 与 key2.txt 的内容合并写入 key.txt 中（不询问，直接覆盖写）
    copy /B art_2.7z.* art_2.7z
    将当前目录下的 art_2.7z. 开头的所有文件（按照名称升序排序）依次合并生成 art_2.7z
    copy /B art_2.7z.001+art_2.7z.002 art_2.7z
    将当前目录下的 art_2.7z.001、art_2.7z.002 文件合并生成 art_2.7z
    copy test.txt \\host\c$\windows\temp\test.txt       远程拷贝
```
```
xcopy           更强大的复制命令
    xcopy c:\bat\hai d:\hello\ /y /h /e /f /c
    将 c:\bat\hai 中的所有内容拷贝到 d:\hello 中  注意：需要在 hello 后加上 \ 表示 hello 为一个目录，否则 xcopy 会询问 hello 是 F，还是 D
    xcopy c:\bat\hai d:\hello\ /d:12-29-2010
    将 c:\bat\hai 中的2010年12月29日后更改的文件拷贝到 d:\hello 中
robocopy        更强大的复制命令
    robocopy .\Plugins .\PluginsDest /MIR /xd Intermediate Binaries
    将当前目录下 Plugins 中所有内容（排除名为 Intermediate 和 Binaries 的文件夹）保留目录结构拷贝到当前目录下的 PluginsDest 中（PluginsDest 不存在会自动创建）
    robocopy c:\test d:\test2 /MIR /xd Intermediate /xf UE4Editor-SGame-Win64-DebugGame.dll *.pdb
    将c:\test中所有内容（排除名为 UE4Editor-SGame-Win64-DebugGame.dll 和 pdb 后缀的文件）保留目录结构拷贝到 d:\test2中（d:\test2 不存在会自动创建）
move            移动文件
    move *.png test
    将当前目录下的 png 图片移动到当前目录下 test 文件夹中 （若 test 中也存在同名的 png 图片，会询问是否覆盖）
    move /Y *.png test
    将当前目录下的 png 图片移动到当前目录下 test 文件夹中 （不询问，直接覆盖写）
    move 1.png d:\test\2.png
    将当前目录下的 1.png 移动到 d 盘 test 文件夹中，并重命名为 2.png （若 test 中也存在同名的png图片，会询问是否覆盖）
    move test d:\new
    若 d 盘中存在 new 文件夹，将当前目录下的 test 文件夹移动到 d 盘 new 文件夹中；若不存在，将当前目录下的 test 文件夹移动到 d 盘，并重命名为 new
replace         替换文件[即使这个文件在使用，仍然可以替换成功]
    replace d:\love.mp3 d:\mp3
    使用 d 盘下的 love.mp3 强制替换 d 盘 mp3 目录中的 love.mp3 文件
```
```bash
assoc           设置'文件扩展名'关联到的'文件类型'
    assoc                   显示所有'文件扩展名'关联
    assoc .txt              显示.txt代表的'文件类型'，结果显示.txt=txtfile
    assoc .doc              显示.doc代表的'文件类型'，结果显示.doc=Word.Document.8
    assoc .exe              显示.exe代表的'文件类型'，结果显示.exe=exefile
    assoc .txt=txtfile      恢复.txt的正确关联
ftype           设置'文件类型'关联到的'执行程序和参数'
    ftype                                           显示所有'文件类型'关联
    ftype exefile                                   显示exefile类型关联的命令行，结果显示 exefile="%1" %*
    ftype txtfile=C:\Windows\notepad.exe %1         设置txtfile类型关联的命令行为：C:\Windows\notepad.exe %1
    当双击一个.txt文件时，windows并不是根据.txt直接判断用notepad.exe打开
    而是先判断.txt属于txtfile'文件类型'；再调用txtfile关联的命令行：txtfile=%SystemRoot%\system32\NOTEPAD.EXE %1
forfiles        递归目录执行命令
    forfiles /p . /m .svn /s /c "cmd /c svn up -r12005"
    在当前目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新
    forfiles /p c:\myfiles /m .svn /s /c "cmd /c svn up -r12005"
    在c:\myfiles目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新
```
#### 链接
win7 下的 mklink 命令通过指定参数可以建立出不同形式的文件或目录链接，分为硬链接(hard link)、符号链接(symbolic link)和目录联接(junction)三种。
- 符号链接(symbolic link)
    建立一个软链接相当于建立一个文件（或目录），这个文件（或目录）用于指向别的文件（或目录），和 win 的快捷方式有些类似。删除这个链接，对原来的文件（或目录）没有影像没有任何影响；而当你删除原文件（或目录）时，再打开链接则会提示“位置不可用”。
- 目录联接(junction)
    作用基本和符号链接类似。区别在于，目录联接在建立时会自动引用原目录的绝对路径，而符号链接允许相对路径的引用。
- 硬链接(hard link)
    建立一个硬链接相当于给文件建立了一个别名，例如对 1.txt 创建了名字为 2.txt 的硬链接；
    若使用记事本对 1.txt 进行修改，则 2.txt 也同时被修改，若删除 1.txt，则 2.txt 依然存在，且内容与 1.txt 一样。
建立链接请注意：
1. 建立文件或目录链接限于 NTFS 文件系统；符号链接（目录联接）的建立可以跨分区（如：在 d 盘可以建立 c 盘文件或目录的链接），硬链接只能建立同一分区内的文件指向
2. 硬链接只能用于文件，不能用于目录；目录联接只能用于目录；符号链接则均可以；
3. 硬链接不允许对空文件建立链接，符号（软链接可以。
）
```bash
mklink          创建符号链接（win7 引入）；创建的符号链接文件上会有一个类似快捷方式的箭头
    mklink /j "C:\Users" "D:\Users"     创建 D 盘 Users 目录联接到 C 盘，并命名为 Users
```
#### 辅助
**Certutil**
可以使用该命令计算指定文件的哈希值
```bash
CertUtil -hashfile 文件名(可包含路径) md5
# 算法名可以取以下值：MD2, MD5, MD5, SHA1, SHA256, SHA384, SHA512。当该参数被省略时，使用 SHA1 算法。
```
---
## 网络管理
### IPC$
```bash
net use                                         # 查看建立的连接
net use \\IP\ipc$ " " /user:" "                 # 建立 IPC 空链接
net use \\IP\ipc$ "[pass]" /user:"[username]"   # 建立 IPC 非空链接
    net use \\192.168.1.1\ipc$ "123456" /user:"administrator"
net use z: \\ip\ipc$ "pass" /user:"user"        # 直接登录后映射对方 C: 到本地为 H:
net use h: ipc$                                 # 登录后映射对方 C: 到本地为 H:
net use \\IP\ipc$ /del                          # 删除 IPC 链接
net use h: /del                                 # 删除映射对方到本地的为 H: 的映射
net user [username] [pass] /add                 # 建立用户
net user guest /active:yes                      # 激活 guest 用户
net user                                        # 查看有哪些用户
net user [username]                             # 查看帐户的属性
net localgroup administrators                   # 列出本地管理员组成员
net localgroup administrators [username] /add   # 把"用户"添加到管理员中使其具有管理员权限
net start                                       # 查看开启了哪些服务
net start [servername]                          # 开启服务
    net start telnet                            # 开启 telnet 服务
    net start schedule
net stop [servername]       # 停止某服务
net time [IP]               # 查看对方时间
net time [IP] /set          # 设置本地计算机时间与"目标IP"主机的时间同步,加上参数 /yes 可取消确认