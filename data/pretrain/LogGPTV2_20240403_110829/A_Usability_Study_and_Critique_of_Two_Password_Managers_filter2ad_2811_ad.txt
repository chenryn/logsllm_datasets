### Safekeeping: Advantages and Disadvantages

Safekeeping of passwords has both advantages and disadvantages, depending on the threat model. Users often express reluctance to relinquish control to a computer program, raising concerns such as, "How do I know I can trust it?" and "Now I have to trust two companies with my passwords, who guards the guards?" Some users feel they have no control, stating, "Passwords are important, but I have no idea what happened." Despite recognizing that password security is a problem, many users believe they are best equipped to manage their own passwords. This view contradicts the perspective of security experts. Addressing this mismatch is crucial for the widespread adoption of security measures.

### Comparison of Findings with Previous PwdHash Studies

The authors of PwdHash briefly reported the findings of their user study [24] as follows:

- **Ease of Use**: Participants did not experience major difficulties signing up for new accounts and logging in using the password prefix.
- **Invisibility of the User Interface**: The user interface was so subtle that many participants did not notice the extension's actions. They were only aware of the extension when the password length changed, which they found confusing.
- **Remote Login Issues**: Users encountered difficulties when trying to log in from a different browser without PwdHash installed. The process of copying the site address into the remote hashing page was cumbersome, and incorrect entries (e.g., using `gmail.com` instead of `google.com`) led to confusion due to lack of useful feedback.
- **Phishing Resistance**: When presented with a fake eBay site, most participants still attempted to log in, but the use of the password prefix prevented the phishing page from capturing their actual eBay passwords.

The original study provided limited details about the methodology, participants, and results, making it difficult to assess its validity and thoroughness or to replicate the study. Our findings contradict those of the authors [24] regarding the usability of PwdHash. While PwdHash performed better than P-Multiplier, it still had significant usability issues. Although success rates for tasks were high, more than half of these successes were achieved after multiple attempts and errors. Many participants resorted to random actions until something worked, rather than understanding how to use the software correctly.

### Usability Issues with PwdHash

- **Password Length Confusion**: Most participants did not comment on the changing length of their passwords. However, many failed to realize they needed to enter `@@` before their new password when confirming it on a Change Password page. The visual cue of the length difference was often missed.
- **Lack of Feedback**: Users were confused by the lack of feedback and unsure if PwdHash was activated. Similar issues occurred with P-Multiplier, where users assumed the plug-in remained active and re-typed their password without re-activating it.
- **Remote Interface Problems**: Users struggled with the remote interface, finding the URL complicated and expressing concern that the remote web site did not ask for a username. This led to questions like, "How will it know to generate my password?" and "How does it know who I am?"
- **Instruction Adherence**: Even with clear instructions, many users did not refer to them, leading to repeated errors. The software's ability to handle both scenarios (with and without `@@`) further confused users.

### Usability of Password Multiplier

Despite claims of convenience and security, P-Multiplier also faced significant usability challenges. The software requires installation on remote computers, which many users cannot do. The memory load is not trivial, as users must remember a master username, master password, and modified domain names for each site. Transparency, while a goal, often translates to a lack of feedback, leading to usability problems. Some users never realized they only needed one password with P-Multiplier and continued to manually enter clear text passwords.

### Security Exposures Due to Usability Problems

Usability problems can lead to security exposures, even when users intend to comply with security mechanisms. Key issues include:

- **Failure to Activate Mechanisms**: Forgetting to enter `@@` or double-click the password field exposes raw passwords to JavaScript and phishing attacks.
- **Password Guessing**: Users who fail to activate the mechanism may start guessing, entering multiple passwords, which can be harvested by phishing sites.
- **Simplified Passwords**: Users may choose simple passwords, believing the password manager will strengthen them, leading to increased vulnerability to dictionary attacks.

### Further Discussion and Recommendations

Establishing and managing strong passwords for multiple accounts remains a challenge. While password managers offer a solution, current implementations suffer from significant usability problems, primarily related to users' mental models and their willingness to trust such tools. To improve usability, we recommend:

1. **Clear Indicators**: It should be obvious when a password is protected.
2. **Activation Cues**: It should be clear when the plug-in is activated and awaiting input.
3. **Better Feedback**: Systems should provide accurate, understandable, and visible feedback to help users form accurate mental models.
4. **User Education**: Educate users on the importance of following instructions and the potential risks of not doing so.

By addressing these issues, we can enhance the usability and effectiveness of password management tools.