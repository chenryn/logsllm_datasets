    ``` literallayout
    postscreen_dnsbl_reply_map = texthash:/etc/postfix/dnsbl_reply
    ```
    在 `dnsbl_reply`{.literal} 中，指定单独的 DNSBL 名称：
    ``` literallayout
    # Secret DNSBL name    Name in postscreen(8) replies
    secret.zen.spamhaus.org  zen.spamhaus.org
    ```
-   所有使用 postfix VSTREAMs 的程序都必须被重新编译，因为 VSTREAM
    错误现在使用单独的标记进行读写错误。
-   `smtp_line_length_limit`{.literal} 的默认值现在是
    `999`{.literal}，与 SMTP 标准保持一致。
-   sendmail 现在将以 ``{.literal} 结尾的所有输入行转换为 UNIX
    格式(``{.literal})。
-   默认情况下,SMTP 客户端不再会在 `MAIL FROM`{.literal} 命令中添加
    `AUTH=<>`{.literal}。
-   有些之前归类为 `fatal`{.literal} 的日志消息现在被归类为
    `error`{.literal}。基于日志文件的警报系统可能需要相应更新。要重新启用旧的行为，将
    `daemon_table_open_error_is_fatal`{.literal} 设置为
    `yes`{.literal}。
-   在 Postfix 2.9 之前不支持新支持的长队列文件名。要迁移到 Postfix 2.8
    或更早版本，必须转换任何长队列文件名称。要做到这一点，停止
    postfix，将 `enable_long_queue_ids`{.literal} 设置为
    `no`{.literal}，然后运行 `postsuper`{.literal}
    命令直到不再导出队列文件名称更改。
-   postfix 现在记录通过 TLS 日志记录级别 0 成功进行 TLS
    协商的结果。详情请查看 `postconf`{.literal} man page
    中的日志级别描述。
-   postfix SMTP 服务器现在总是检查 smtpd_sender_login_maps 表。
-   现在，默认的 `inet_protocols`{.literal} 值是 `all`{.literal} （使用
    IPv4 和 IPv6）。为了避免没有全局 IPv6 连接的站点出现意外的性能丢失,
    `make upgrade`{.literal} 和
    `postfix upgrade-configuration`{.literal} 命令目前在没有显式设置时将
    `inet_protocols = ipv4`{.literal} 附加到 `main.cf`{.literal}。
-   现在,默认的 `smtp_address_preference`{.literal} 值是 `any`{.literal}
    （随机选择 IPv4 或 IPv6）。
-   SMTP
    服务器不再报告因为查询表不可用而拒绝客户端命令的会话记录。要继续接收此类报告，请将
    `data`{.literal} 类添加到 `notify_classes`{.literal} 参数的值中。
-   添加了新的 `smtpd_relay_restrictions`{.literal} 参数。默认情况下启用
    `permit_mynetworks`{.literal}、`permit_sasl_authenticated`{.literal}
    和 `defer_unauth_destination`{.literal}。这可防止因为在
    `smtpd_recipient_restrictions`{.literal} 中出错 spam
    过滤规则而打开转发问题。但是，如果您的站点在
    `smtpd_recipient_restrictions`{.literal}
    下配置了复杂的邮件转发策略，则可能会错误地延迟一些邮件。要解决这个问题,可以删除
    `smtpd_relay_restrictions`{.literal} 配置并使用
    `smtpd_recipient_restrictions`{.literal}
    中的现有策略,或者将现有策略从
    `smtpd_recipient_restrictions`{.literal} 复制到
    `smtpd_relay_restrictions`{.literal}。
:::
:::
::: section
::: titlepage
## []{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#sect-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Networking-Network_Protocols}网络协议 {.title}
:::
本部分包括了 Red Hat Enterprise Linux 6 和 Red Hat Enterprise Linux 7
间的网络协议更改概述。
::: section
::: titlepage
### []{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#sect-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Network_Protocols-Network_File_System_NFS}网络文件系统(NFS) {.title}
:::
Red Hat Enterprise Linux 7 支持 NFS 3、NFS 4.0 和 NFS 4.1。从 Red Hat
Enterprise Linux 7 开始，不再支持 NFS 2。
NFS 4.1 提供很多性能和安全性增强,包括对 Parallel
NFS(pNFS)的客户端支持。另外,回调不再需要单独的 TCP 连接,允许 NFS
服务器即使无法联系客户端（例如,当 NAT 或防火墙中断时）允许 NFS
服务器授予程序。
服务器支持 NFS 3、NFS 4.0 和 NFS 4.1。通过更改
`/etc/sysconfig/nfs`{.literal} 文件中的`RPCNFSDARGS`{.literal}
参数的值，可以启用或禁用对特定版本的支持。例如：
`RPCNFSDARGS="-N4.1 -V3"`{.literal} 启用对 NFS 3 的支持,并禁用对 NFS 4.1
的支持。详情请查看 man page:
``` literallayout
$ man rpc.nfsd
```
NFS 客户端默认尝试使用 NFS 4.0 挂载,并在挂载操作失败时回退到 NFS
3。默认行为可通过编辑 `/etc/nfsmount.conf`{.literal}
文件并使用命令行选项来更改。详情请查看 man page。
``` literallayout
$ man nfs
```
``` literallayout
$ man nfsmount.conf
```
::: section
::: titlepage
#### []{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#sect-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Network_File_System_NFS-Parallel_NFS_pNFS}并行 NFS（pNFS） {.title}
:::
Red Hat Enterprise Linux 7 为 Parallel NFS(pNFS)提供客户端支持。pNFS
可提高 NFS 的可伸缩性,并可能会提高性能。当 Red Hat Enterprise Linux 7
客户端挂载支持 pNFS
的服务器时,该客户端可通过多个服务器同时访问数据。请注意，Red Hat
Enterprise Linux 7
支持文件布局类型，对象和块布局类型作为技术预览包含。有关此协议及其功能的更多信息，请参阅
[Red Hat Enterprise Linux 7
存储管理指南](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/ch08s02.html){.link}。
:::
:::
::: section
::: titlepage
### []{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#sect-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Network_Protocols-Apache_Web_Server_httpd}Apache Web Server(httpd) {.title}
:::
Red Hat Enterprise Linux 7 提供 Apache Web Server
的更新版本。这个新版本(2.4)包括一些显著打包变化以及一些新特性。
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Changed_proxy_config}
[更改了代理配置]{.term}
:   使用 SSL 后端的 Apache Web 服务器(`httpd`{.literal})配置现在必须使用
    `SSLProxyCheckPeerName`{.literal} 指令,如果 SSL
    证书与配置的主机名不匹配。在以前的版本中，不会验证代理后端的 SSL
    证书中的主机名。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-New_control_mechanisms}
[新的控制机制]{.term}
:   因为 Red Hat Enterprise Linux 将系统从 SysV init 脚本中移出,所以控制
    `httpd`{.literal} 服务的命令已改变。红帽现在推荐使用
    `apachectl`{.literal} 和 `systemctl`{.literal} 命令而不是
    `service`{.literal} 命令。例如：在以前运行
    `service httpd graceful`{.literal} 的情况下，红帽现在推荐使用
    `apachectl graceful`{.literal}。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Changed_default_subcommand_behavior}
[更改了默认子命令的行为]{.term}
:   [**[httpd]{.package}**]{.strong} 的 `systemd`{.literal}
    单元文件定义了 `reload`{.literal} 和 `stop`{.literal}
    子命令的不同行为。具体来说, `reload`{.literal}
    子命令现在安全地重新载入该服务, `stop`{.literal}
    命令现在默认安全停止该服务。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Hard_coded_default_configuration}
[硬编码的默认配置]{.term}
:   以前的 [**[httpd]{.package}**]{.strong}
    版本提供了一个完整的配置文件，它列出了所有配置设置及其默认值。很多常见配置设置不再在默认配置文件中被显式配置,而是现在硬编码默认设置。现在,默认配置文件的内容最小,因此可以更容易管理。所有设置的硬编码默认值都在手册中指定，默认情况下会安装到
    `/usr/share/httpd`{.literal}。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-New_Multi_Processing_Model_modules}
[新的多功能模型模块]{.term}
:   之前的 Red Hat Enterprise Linux
    版本提供了几个多产品模型（`prefork`{.literal} 和
    `worker`{.literal}）作为不同的 [**[httpd]{.package}**]{.strong}
    二进制文件。Red Hat Enterprise Linux 7
    使用单一二进制文件，并提供这些 Multi-Processing Models
    作为可加载模块： `worker`{.literal}、`prefork`{.literal} （默认）和
    `event`{.literal}。编辑
    `/etc/httpd/conf.modules.d/00-mpm.conf`{.literal}
    文件来选择载入哪个模块。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Directory_changes}
[目录更改]{.term}
:   在这个更新的 [**[httpd]{.application}**]{.strong}
    版本中,很多目录已经移动或者不再提供。
    ::: itemizedlist
    -   之前在 `/var/cache/mod_proxy`{.literal} 中安装的内容已在
        `proxy`{.literal} 或 `ssl`{.literal} 子目录中移到
        `/var/cache/httpd`{.literal}。
    -   之前在 `/var/www`{.literal} 中安装的内容已移到
        `/usr/share/httpd`{.literal}。
    -   之前在 `/var/www/icons`{.literal} 中安装的内容已移到
        `/usr/share/httpd/icons`{.literal}。该目录包含与目录索引搭配使用的一组图标。
    -   以前在 `/var/www/manual`{.literal} 中安装的
        [**[httpd]{.application}**]{.strong} 手册的 HTML 版本已移至
        `/usr/share/httpd/manual`{.literal}。
    -   之前在 `/var/www/error`{.literal} 中安装的自定义多语言 HTTP
        错误页面已移至 `/usr/share/httpd/error`{.literal}。
    :::
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Changes_to_suexec}
[对 suexec 的更改]{.term}
:   在安装时，这个 `suexec`{.literal} 二进制文件不再将其用户标识符设置为
    root。反之,会使用文件系统容量字节来应用更为严格的权限集。这提高了
    [**[httpd]{.application}**]{.strong}
    服务的安全性。另外，`suexec`{.literal} 现在会向
    [**[syslog]{.application}**]{.strong} 发送日志信息，而不是使用
    `/var/log/httpd/suexec.log`{.literal} 文件。默认情况下，发送到
    [**[syslog]{.application}**]{.strong} 的信息会出现在
    `/var/log/secure`{.literal} 中。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Changes_to_module_interface_compatibility}
[更改了模块接口兼容性]{.term}
:   对 [**[httpd]{.application}**]{.strong}
    模块接口的更改意味着这个更新版本的
    [**[httpd]{.application}**]{.strong} 与之前版本
    [**[httpd]{.application}**]{.strong}
    (2.2)构建的第三方二进制模块不兼容。在
    [**[httpd]{.application}**]{.strong} 2.4
    模块界面中需要调整这些模块,然后重建。有关版本 2.4 中的 API
    更改的详情，请查看 Apache 文档。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-Change_to_apxs_binary_location}
[apxs 二进制位置的变化]{.term}
:   用于从源构建模块的 `apxs`{.literal} 二进制文件已从
    `/usr/sbin/apxs`{.literal} 移到 `/usr/bin/apxs`{.literal}。
:::
::: variablelist
[]{#chap-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Major_Changes_and_Migration_Considerations.html#varl-Red_Hat_Enterprise_Linux-Migration_Planning_Guide-Apache_Web_Server_httpd-New_and_moved_configuration_files}
[新配置文件及移动的配置文件]{.term}
:   载入模块的配置文件现在放在 `/etc/httpd/conf.modules.d`{.literal}
    目录中。为 [**[httpd]{.application}**]{.strong}
    提供附加可加载模块的软件包（如 [**[php]{.package}**]{.strong}
    软件包）将文件添加到此目录中。`conf.modules.d`{.literal}
    目录中的所有配置文件都会在 `httpd.conf`{.literal}
    的主正文之前处理。`/etc/httpd/conf.d`{.literal}
    目录中的配置文件现在会在主 `httpd.conf`{.literal} 主体后进行处理。
    [**[httpd]{.package}**]{.strong} 软件包提供了一些额外的配置文件：
    ::: itemizedlist
    -   `/etc/httpd/conf.d/autoindex.conf`{.literal} 配置
        `mod_autoindex`{.literal} 目录索引。
    -   `/etc/httpd/conf.d/userdir.conf`{.literal}