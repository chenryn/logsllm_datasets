stances. However, such metric reset results in a considerable loss
of information which prevents network operators from achieving
desirable design objectives. In this design, we choose conversion
functions strictly according to safety conditions, which will intro-
duce a strong dependency in the ranking of routes in different rout-
ing instances. The resulting solution is applicable to only networks
where the routing instances are managed by a single operator or a
team of cooperative operators. Many networks, including individ-
ual ISP networks, enterprise networks, campus networks, and mil-
itary networks, fall into this category. In fact, our design is more
desirable for such networks because it is more expressive and sup-
ports a large range of important operational goals, including those
not achievable today. We will substantiate this point in Section 7.
Designing for incremental deployment: To enable incremental
deployment, we target a design that requires no modiﬁcation to ex-
isting routing protocols (e.g., BGP, EIGRP, OSPF, RIP, IS-IS). This
decision introduces some complications that constrain our design
space as follows. The theory assumes each routing protocol in-
stance to be correct and concentrates on the requirements for con-
version functions. As such, the theory requires each routing in-
stance to satisfy the safety conditions (as deﬁned in Sections 3 and
4). However, there are two clear violations of such conditions by
current routing protocols.
First, OSPF External Type 2 routes do not comply with the SM
condition: As explained in Section 2, OSPF does not increase the
cost of an External Type 2 route while the route propagates. We
solve this problem by imposing the following OSPF-speciﬁc re-
striction on the design:
1. Routes redistributed into OSPF are always set to External Type 1.
Second, prior work [17] has shown that BGP is not SM but can
result in various routing instabilities. Making BGP compliant with
safety conditions is more difﬁcult to achieve since even the ﬁrst at-
tribute, local-preference, of the BGP route ranking criteria, is nei-
ther SM nor M. As such, BGP cannot be rendered safe by simply
discarding speciﬁc options. Instead, we impose the following BGP-
speciﬁc restrictions:
2. BGP routes are selected only if no route is offered by other pro-
tocols.
3. Routes from BGP cannot be redistributed into a non-BGP pro-
tocol instance.
These two restrictions enforce SM between non-BGP and BGP
instances, and ultimately guarantee correct routing so long as the
BGP conﬁgurations do not result in anomalies. Although the re-
strictions do not exist today, they do not prevent common design
objectives from being accomplished. The ﬁrst restriction makes
BGP routes the least preferred routes. Indeed, when a router re-
ceives routes from both BGP and an IGP to a same destination
preﬁx, the router should typically prefer the more direct internal
route learned from the IGP over the external BGP route. This is
because sending trafﬁc through external networks (e.g., providers)
can cost money. The question of whether the second restriction
would prevent existing design objectives from being achieved is a
more complicated one, and we defer the answer to Section 7.
Finally, we note that recent proposals [17] have suggested modi-
ﬁcations to BGP which would guarantee important properties (e.g.,
SM), while at the same time, still support existing policies (e.g.,
customer-provider, peering, and sibling relationships). The mod-
iﬁcations if implemented would eliminate the need to treat BGP
separately.
5.2 Universal metric space
All non-BGP routing protocols (OSPF, IS-IS, RIP, EIGRP, static
routes) can be uniﬁed under the following 2-ary metric space: {type,
cost}. Derived from the theory, we make conversion functions an
explicit component of the design. We treat each non-BGP protocol
as a 2-ary algebra, where the ﬁrst attribute is the route type and the
second attribute is the route cost. We deﬁne the following universal
metric space for the design of conversion functions:
1. Type: Σ0,1 = {A, B, C}. The universal domain for the type con-
sists of three permitted elements, and is totally ordered with type A
being preferred to type B which is in turn preferred to type C.
2. Cost: Σ0,2 = {1, 2, 3, . . . , 232 − 1}. The universal domain for
the cost metric consists of the set of integers from 1 to 232 − 1 and
is totally ordered by the arithmetic operator ≤.
5.3 New connecting primitives
When comparing routes received from different routing protocol
instances, our design maps the type and cost of each route into the
universal metric space according to the default conversion func-
tions shown in Table 22.
It then ranks the routes based on their
ordering in the universal metric space. Since RIP does not deﬁne
a route type, all RIP routes are effectively of the same type “RIP”.
The same applies to static routes. The default conversion func-
tions for the cost dimension (e.g., x → x8 for RIP) are designed to
scale the metric space (e.g., 4-bit for RIP) of each protocol to the
32-bit value range of the universal metric space. For example, an
2Details for IS-IS are omitted because of the protocol’s similarities
with OSPF. Prohibited signatures are not listed for brevity.
226Attribute
Protocol
Type
Cost
OSPF
RIP
EIGRP
Static
OSPF
RIP
EIGRP
Static
To universal domain
Φprotocol→0
intra-area → A
inter-area → B
external type 1 → C
RIP → C
internal → B
external → C
static → C
x → x2
x → x8
x → x
x → x
From universal domain
Φ0→protocol
* → external type 1
* → RIP
* → external
NA
x → ceiling(√x)
x → ceiling( 8√x)
x → ceiling(x)
NA
Table 2: Default conversion functions. The symbol “*” repre-
sents any permitted value.
OSPF route of type “intra-area” and cost “30” would be mapped
into type “A” and cost “900” in the universal metric space. Simi-
larly, an EIGRP route of type “internal” and metric “65345” would
be mapped into type “B” and cost “65345”. Since type A routes are
preferred over type B routes, the OSPF route would be preferred.
The conversion functions in the other direction (i.e., from uni-
versal metric space to a protocol speciﬁc metric space) are needed
for route redistribution. For example, let us assume that the OSPF
route in the example above is being redistributed into RIP. It would
be given a RIP hop-count of 3 because ceiling( 8√900) = 3.
It is straightforward to show that the default conversion functions
comply with the identiﬁed safety conditions. As discussed in Sec-
tion 7, these functions are sufﬁcient for most of today’s operational
goals. Network operators may customize the conversion functions
based on operational objectives subject to these constraints: (i) the
new conversion functions comply with the safety conditions as de-
ﬁned in Section 4, and (ii) two routing processes at border routers
must be conﬁgured with the same conversion functions if they be-
long to the same routing instance.
New route selection procedure: Like before, each routing pro-
cess ﬁrst determines a best route within its own RIB. For example,
among all the received BGP routes, the BGP best path selection
algorithm would choose a single most preferred BGP route. We
note that currently, routers can run at most one instance of RIP and
BGP but can run multiple processes of OSPF and EIGRP. Conse-
quently, after each routing process has determined its best route,
a router obtains at most one BGP route, but may receive multiple
OSPF routes, each from a different OSPF process. To select one
among them for the Forwarding Information Base (FIB), a router
applies the following ranking rules in our design:
Step 1. Protocol: Prefer non-BGP (i.e., EIGRP, OSPF, RIP, static)
routes to BGP route.
Step 2. Type: If multiple non-BGP routes are available, prefer
type A routes, then type B routes, and type C last.
Step 3. Cost: Among non-BGP routes of the preferred route type,
prefer the route with the lowest cost.
If only one route is in consideration and is from BGP, the process
stops after rule 1 and selects the BGP route. Otherwise, it follows
the ordering in the 2-ary universal space. Again, step 1 of the pro-
posed route selection procedure is created to handle the special case
of BGP and to enforce the previous restrictions. Similarly, the fol-
lowing route redistribution procedure treats BGP differently.
New route redistribution procedure: The theory allows the re-
distribution to be performed in either a vectoring or a link-state
manner. In this design, for brevity, we restrict route redistribution
to the vectoring mode.
For redistribution between non-BGP instances (e.g., from OSPF
into RIP), the metrics of the redistributed routes are decided by the
conversion functions.
We disallow any redistribution from BGP into a non-BGP proto-
col instance as part of the BGP-speciﬁc restrictions deﬁned in the
beginning of this section. We allow great ﬂexibility for redistribu-
tion into BGP since this is not part of the BGP-speciﬁc restrictions.
When a route is redistributed into BGP, its BGP attributes (e.g., lo-
cal preference, AS-PATH, MED, community, etc.) can be set to
any value as long as they do not cause routing anomalies within
BGP. This ﬂexibility allows the new primitives to preserve the cur-
rent levels of autonomy, expressiveness and privacy between BGP
networks. Any policy (e.g., customer, provider, peer relationships)
currently implemented between BGP networks can still be accom-
plished. In addition, networks administered by different authorities
and connected through BGP do not need to share more information
than today. In particular, they do not need to exchange information
on the conversion functions.
6.
IMPLEMENTATION
We have implemented the new connecting primitives into the
XORP [3] routing software, version 1.6. Default conversion func-
tions are exactly as deﬁned in Section 5. It is straightforward to
conﬁgure the new primitives because they primarily have a single
tuning knob: the option to customize the conversion functions.
Custom conversion functions can be speciﬁed either in a static
conﬁguration ﬁle – which is loaded at XORP startup time – or dy-
namically through the XORP command line interface. They are
deﬁned through self-contained policy statements3 such as the one
shown below.
policy{
f_rip_to_universal_type:
c
f_rip_to_universal_cost_a:
f_rip_to_universal_cost_b:
f_rip_to_universal_cost_n:
1
0
7
}
The system veriﬁes that the deﬁnitions comply with the sufﬁcient
conditions for safety before accepting them.
For the cost dimension, the conversion functions from a routing
protocol speciﬁc metric (e.g., RIP hop-count) to the universal space
are restricted to the form of “a × xn + b” (with a, n, and b being
integer parameters), and the conversion functions in the other di-
rection are simply the inverse. This restriction facilitates a straight-
forward algorithm to verify that the conversion functions comply
with the desired conditions, while still enabling a wide range of
operational goals, as illustrated in the next section. In future work,
we will attempt to understand the full implication of this restriction
and explore other forms of conversion functions.
It should be noted that neither EIGRP nor IS-IS is part of the
implementation. EIGRP is a CISCO proprietary protocol and not
supported by XORP. The XORP community has plans to add IS-IS
to XORP but it is yet to be accomplished as of version 1.6.
3The syntax is similar to that of JUNOS. We note that an imple-
mentation in a Cisco IOS like environment would also be straight-
forward: Replace the existing distance and default-metric com-
mands with a couple of new commands for customizing the con-
version functions, and modify the redistribute command to remove
those metric related parameters.
227Office
branch 1
X
Y
A
B
RIP
OSPF
D
C
E
Office
branch 2
Figure 9: Illustration of domain backup.
7. VALIDATION OF EXPRESSIVENESS
We deﬁne expressiveness broadly as the ability of the primitives
to support operational goals. In the section, we consider ﬁve oper-
ational objectives. The ﬁrst three are regarded important require-
ments by operators [21], and we have conducted validation experi-
ments with our XORP implementation for each of them. The fourth
objective addresses the implications of the three restrictions intro-
duced in Section 5.1 on the expressiveness of our design. Finally,
the last objective illustrates the ﬂexibility with which one can de-
rive connecting primitives from the proposed theory.
In a related note, as explained in the last paragraph of Section 5,
our design preserves the current levels of autonomy, privacy and
expressiveness between BGP networks.
7.1 Domain backup
Domain backup designates the ability for a network to preserve
reachability even in the event of a routing instance partition, through
alternate physical paths traversing other routing instances. To il-
lustrate the property, consider the network from Figure 9. It con-
sists of two ofﬁce branches, each running its own routing instance
(RIP, OSPF). In the failure of router C, link A-C, or link B-C, the
routers D and E can no longer directly communicate despite the
existence of a physical path (D-A-B-E) between the two routers.
By default, the path D-A-B-E is not offered as it traverses a dif-
ferent routing instance (RIP). To make this path available, mutual
route redistribution should be enabled between OSPF and RIP at
the border routers B and A, respectively. However, route redis-
tribution at multiple points can easily result in routing anomalies
[8]. Hence, to support domain backup, current route redistribution
solutions require speciﬁc physical topologies and complex policies
[21]: The routing instances must be connected in a star topology,
and domain backup is provided only to the leaf routing instances.
In contrast, the new primitives can offer domain backup to ev-
ery routing instance with no restriction on physical topology. We
implemented the network in Figure 9. The border routers A and
B perform mutual route redistribution between the RIP and OSPF
instances, with the default conversion functions. We observed that,
in the absence of failure, E receives two paths to D: E-B-C-A-D
and E-B-A-D. E selects the ﬁrst path to forward trafﬁc to D as
it is an intra route (type A in the universal metric space) whereas
the other route is external (type C). Then, we simulated a failure of
router C, link A-C, or link B-C. Despite the partition, routers E
and D still preserved their connectivity through the path E-B-A-
D.
7.2 Router-level shortest path routing across
IGP instances
Router-level shortest path routing across IGP instances desig-
nates the ability for a pair of end hosts in different IGP instances to
route trafﬁc to each other along the shortest path. Today, this prop-
erty is supported but only between OSPF instances. IOS provides
the option to preserve the cost of a route redistributed from one
OSPF 
1500
A
4500
7000
E
policy {
    f_rip_to_universal_metric_a: 1600
    f_rip_to_universal_metric_n: 1
    f_ospf_to_universal_metric_n: 1
}
D
B
6
policy {
    f_rip_to_universal_metric_a: 1600
    f_rip_to_universal_metric_n: 1
    f_ospf_to_universal_metric_n: 1
}
RIP
C
5
Figure 10: Illustration of router-level shortest path routing
across OSPF and RIP instances.
OSPF instance into another OSPF instance. However, the current