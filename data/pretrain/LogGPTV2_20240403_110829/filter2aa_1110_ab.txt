    .exchange -> excha.ge (Georgia) 
    .helsinki -> helsi.ki (Kiribati) 
    .holdings -> holdi.gs (S.Georgia and S.Sandwich Islands) 
    .international  ->  internatio.al (Albania) 
    .tennis -> ten.is (Iceland) 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 11 of 20 
Additionally, several of the proposed new gTLDs will have URL delimiter bitsquats in ccTLD space.  Here is a list 
based on the letter “o”. 
     .boo -> .bo (Bolivia) 
    .bio -> .bi (Burundi) 
    .cooking -> .co (Colombia) 
    .cool -> .co (Colombia) 
    .cloud -> .cl (Chile) 
    .ecom -> .ec (Ecuador) 
    .food -> .fo (Faroe Islands) 
    .football -> .fo (Faroe Islands) 
    .global -> .gl (Greenland) 
    .kyoto -> .ky (Cayman Islands) 
    .ngo -> .ng (Nigeria)  
    .photo -> .ph (Philippines)  
    .photography -> .ph (Philippines) 
    .photos -> .ph (Philippines) 
    .prof -> .pr (Puerto Rico) 
    .property -> .pr (Puerto Rico) 
    .properties -> .pr (Puerto Rico) 
    .scot -> .sc (Seychelles) 
    .shop -> .sh (St. Helena) 
Finally here is a list of several proposed new gTLDs that have URL delimiter bitsquats in ccTLD space, this time 
based on the bit flips of the letter “c” bit flipping into a “#”. 
    .rocks -> .ro (Romania) 
    .auction -> .au (Australia) 
    .doctor -> .do (Dominican Republic) 
    .accountant -> .ac (Ascension Island) 
    .archi  ->  .ar (Argentina) 
    .architect -> .ar (Argentina) 
    .recipes -> .re (Reunion Island) 
    .soccer -> .so (Somalia) 
    .inc -> .in (India) 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 12 of 20 
Past Bitsquatting: Domainers the first to capitalize bitsquat domains 
Looking at the whois records for some of bitsquat domains that have already been registered also yields some 
interesting findings.  For example, the bitsquat domain wwwnfacebook.com was registered back in 2009, a full 2 
years before the initial research paper on bitsquatting was published.  The same is true for the domain 
“otwitter.com”.  Thus some of the earliest bitsquat domain registrations have come from "domainers" --
organizations that register domain names to place ads or redirect traffic for profit.  These domainers essentially 
noticed and capitalized on traffic destined for bitsquat domains long before any bitsquatting research was ever 
conducted.  Domainers might show us just how popular a domain name must be in order to have a worthwhile 
number of bitsquat requests.  There will be a threshold of domain popularity at which the domainers still make 
money off registration of the bitsquat domain due to wayward traffic.  The tools used by domainers to analyze 
potential domains for purchase would also be quite valuable to potential bitsquatters as well.     
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 13 of 20 
Section II - Mitigation of bitsquatting attacks 
The original research by Dinaburg suggested two possible mitigations.  First was that self-registration of the 
bitsquat domain variants is one good way to remove the possibility of having your data misdirected.  Second was 
the prescription to install ECC memory.  Neither of these mitigations are optimal.  The self registration can be 
costly to maintain, depending on the length of the domain name, and there is always the possibility that someone 
has already beaten you to the domain name.  The prescription for ECC memory sounds nice on the surface, but in 
reality the entire base of installed devices would have to upgrade simultaneously for bitsquatting to be prevented 
worldwide.   
The good news is that these are not the only techniques a network defender can use to protect their users from 
accidentally misdirecting their Internet traffic.  There are additional techniques that can be used.  With sufficient 
adoption, these techniques could actually eliminate the bitsquatting problem almost completely. 
Choose a TLD which has no bitsquats 
With the exception of the URL delimiter bitsquats available for .pro and .coop, there are no TLD bitsquats available 
for the currently available gTLDs or IDN TLDs (including the newly approved gTLDs from 2013).   So, they would 
all make excellent choices for eliminating potential bitsquats in the TLD.  By choosing a domain at one of these 
TLDs you can effectively remove any possibility of a bit error in the TLD from misdirecting traffic. 
If using a ccTLD, choose your domain name carefully 
Having the ccTLD registry restrict the 2nd level domains that can be registered, like the ccTLD .uk (United 
Kingdom) does, is not necessarily an effective way to prevent bitsquats.  In fact it can be even more dangerous.  
For only a few thousand dollars, one could register ltd.tk, plc.tk, sch.tk, ac.tk, mod.tk and tld.tk from Tokelau.  Then 
the attacker will receive bitsquats from every domain registered under the corresponding second level domains 
ltd.uk, plc.uk, sch.uk, ac.uk, mod.uk and tld.uk.  mod.uk corresponds with the UK’s Ministry of Defense, and all the 
one bit errors occurring in that .uk ccTLD are going to a single location.  Another ccTLD NIC with a similarly 
restrictive 2nd level domain policy is the ccTLD .br (Brazil).  A domain like eng.cr is still available in Costa Rica, and 
that enables a bitsquatter to receive traffic from every single domain registered under eng.br. 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 14 of 20 
Figure 14.  A list of *available* domains in Tokelau which correspond to reserved 2nd level domains under .uk 
Fortunately, many ccTLDs that might be good locations for registering bitsquat domains do not allow certain 
common keywords (such as “www”, “gov”, etc.) to be registered, or do not allow 2nd level domains shorter than 3 
characters, making these types of names good choices for use as 3rd level subdomains, and good protection 
against the URL delimiter bitsquatting techniques described in Section I.   There are also several other ccTLDs with 
restrictions such as local presence or citizenship in a particular country [7].  Though not impossible, these 
restrictions complicate registration of certain bitsquat variants. 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 15 of 20 
Change/rotate subdomains frequently – the moving target defense 
Both the domain delimiter and URL delimiter bitsquatting attack vectors can make use of a domain’s 3rd level 
domain name label.  Clever choice and use of 3rd level subdomains can thwart attempts by bitsquatters who use 
bitsquatting techniques targeted at 3rd level domain names. 
If a 2nd level domain eliminates entirely its use of 3rd level subdomains (a.k.a. “naked” domains), then registering a 
URL delimiter bitsquat in a ccTLD, and registering a domain delimiter bitsquat using a 3rd level subdomain are both 
impossible.  This does, however, expose you to URL delimiter bitsquats based off  of the second slash of a URL, 
plus an additional bitsquat if your domain happens to begin with the letter “o”.  As of December 2012 the team from 
no-www.org have catalogued 60,000 domains that do not use 3rd level subdomains [8].   While eliminating use of 
subdomains helps eliminate some of the new attacks, there are actually even better mitigations. 
A more effective technique is to subdivide your 2nd level domain traffic among a large number of 3rd level domains.  
Each subdomain takes on a small slice of the overall potential bitsquat traffic and therefore becomes much less 
likely to result in a successful bitsquat attack.  Using a large number of subdomains creates much more work and 
expense for a potential bitsquat attacker.  If next, those subdomains are changed or updated with any frequency, 
the bitsquatter will have practically no chance at a successful attack. 
For a real world example, consider amazon.com.  Amazon includes in their web pages content from a domain 
named cloudfront.com.  The 3rd level domain names here normally would make great URL delimiter bitsquats 
because the “o” in cloudfront yields a valid ccTLD in .cl (Chile).   Although this would seem at first to be a great 
target for a bitsquat, Amazon changes the subdomain at cloudfront.com frequently enough, that this thwarts 
attempts to capitalize on bitsquat traffic.  By changing the 3rd level domain name frequently enough Amazon leaves 
a very small window of time in which to set-up and collect bitsquat traffic.  This particular technique is actually the 
most effective protection against both domain delimiter and URL delimiter based bitsquat attacks. 
Figure 15.  Example code from amazon.com showing potential URL delimiter bitsquats at cloudfront.net 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 16 of 20 
Use relative instead of absolute references in HTML 
Bit errors, being indiscriminate as to where they occur, will affect domain names that are frequently loaded / 
accessed from memory.  Thus to reduce the exposure to any potential URL delimiter bitsquats, it is best if the links 
and content loaded from HTML pages is referenced in a relative fashion instead of an absolute fashion.  By using 
the current URL as a base href or specifically establishing a base href for an HTML page, the relative hrefs 
contained in the rest of the HTML document will eliminate many of the places where bitsquats might occur.  The 
domain name will appear only once per HTML page.  The downside here is that if a bit error does occur in the base 
href, then all links in the document would go to the same bitsquat domain.  Figure 14 shows some of the HTML the 
source of the facebook.com website.  Facebook seem to go out of their way to include an absolute link in each 
href. 
Figure 16.  Some source code from facebook.com website 
Use CAPITAL letters in URLs 
The ASCII table is laid out so that the lowercase alphabet is one bit different from the uppercase alphabet.  The 
capital letters ‘A’ (01000001) through ‘Z’ (01011010) differ by only one bit from their lowercase equivalents ‘a’ 
(01100001) through ‘z’ (01111010).  However, bit-errors in lowercase ‘p’ (01110000) through lowercase ‘y’ 
(01111001) have bitsquats in the digit range zero (00110000) through nine (00111001).  The uppercase versions 
do not possess these numeric bitsquats.   
Capital letters are also immune to several punctuation-based bitsquats.  The capital letter ‘N’(01001110) cannot via 
a single bit error become a dot ‘.’ (00101110). Neither can a capital letter ‘O’ (01001111) flip one bit to become a 
forward slash (00101111).  Similarly, the capital letter ‘C’ (01000011) cannot by the flip of one bit become a ‘#’ 
(00100011).   
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 17 of 20 
Thus storing capital letter versions of the domain names inside HTML pages makes a good choice for avoiding 
domain delimiter, URL delimiter, as well as individual bitsquats involving lowercase letters changing to digits. 
Figure 17.  A view of the ASCII table which demonstrates the binary representations of characters and punctuation.  Image from wikipedia.org. 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 18 of 20 
Create a bitsquat RPZ 
Response Policy Zones (RPZs) have been a configuration option since BIND v9.8.1, but patches exist for earlier 
versions of BIND.  An RPZ is a local zone file which allows the DNS resolver to respond to specific DNS requests 
by saying that the domain name does not exist (NXDOMAIN), or redirecting the user to a walled garden, or other 
possibilities.  To mitigate the effects of single bit errors for users of a DNS resolver the resolver administrator can 
create a Response Policy Zone that protects against bitsquats of frequently resolved, or internal-only domain 
names.  For example, the RPZ can be set up such that any requests made to the DNS resolver for bitsquat 
variants of these domains will get a NXDOMAIN response, silently “correcting” bit errors without any work on the 
part of the client experiencing the bit error.  If a domain is unavailable to potential victims of a bitsquatting attack, 
then this removes much of the incentive for attackers to bitsquat a target domain. 
The downside to configuring your DNS server in this manner is the possibility of False Positives (FPs).  For 
example, I may be looking to buy a jingle from a man named Ray Palla who runs raypal.com.  This domain also 
happens to be a one bit variant of the popular domain name paypal.com.  If the DNS request for raypal.com results 
in a NXDOMAIN response, none of my users will ever be able to contact Ray.  This isn’t terribly fair to Ray.  
Careful consideration must be paid to the one bit variants blocked as a result of any local RPZ to prevent false 
positives. 
Figure 18.  A legitimate site, raypal.com, which happens to be one bit different from paypal.com 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 19 of 20 
Additionally, although it has not yet been confirmed in-the-wild, it is also technically possible to bitsquat IP 
addresses which are stored in memory.  Given the shortage of IPv4 address space many networks have turned to 
the RFC 1918 private networks in 10.0.0.0/8, 192.168.0.0/16, and 172.16.0.0/12.  The one bit variants of these IPs 
must be receiving intranet traffic from all over the world.  It would be difficult to find and subsequently control the 
exact one bit variant IP, but this task is not impossible either.  All one bit variants of the most critical intranet 
address space can be calculated beforehand, and afterwards added to a firewall DROP list such that IP based 
bitsquats do not also result in misdirected traffic by bypassing the RPZ/DNS. 
Conclusion 
While the evidence to date that suggests that there hasn’t been a wide adoption of bitsquatting as a real-world 
attack vector that is being exploited, the fact that organizations belonging to the education, government, and 
military under restricted Top Level Domains can also be vulnerable to some bitsquatting attacks is alarming.  The 
ease, and relative anonymity of which bitsquatting attacks can be conducted means that society collectively needs 
to take precautions to protect the critical domain name infrastructure that is used to provide essential services and 
information. 
© 2013 Cisco and/or its affiliates. All rights reserved. 
Page 20 of 20 
References 
[1] Eric Fischer. ‘The Evolution of Character Codes, 1874-1968’. November 2002. 
http://www.transbay.net/~enf/ascii/ascii.pdf. Accessed April 2013. 
[2] American Standards Association. ‘American Standard Code for Information Interchange, ASA X3.4-1963’. ANSI. 
June 17, 1963. 
[3] Artem Dinaburg. ‘Bitsquatting: DNS Hijacking without exploitation’. Blackhat Technical Security Conference. 
August, 2011. 
[4] Bianca Schroeder, Eduardo Pinheiro, and Wolf-Dietrich Weber, ‘DRAM Errors in the Wild: A Large-Scale Field 
Study’. Proceedings of the 11th International Joint Conference on Measurement and Modeling of Computer 
Systems (SIGMETRICS). June 2009. 
[5] Dave Evans. ‘Thanks to IoE the next decade looks positively “nutty”’. Cisco Platform Blog. 
http://blogs.cisco.com/news/thanks-to-ioe-the-next-decade-looks-positively-nutty/. Accessed March 2013. 
[6] Artem Dinaburg.  ‘Bitsquatting PCAP Analysis Part 3: Bit-error distribution’. Artem Dinaburg's Blog.  
http://blog.dinaburg.org/2012/11/bitsquatting-pcap-analysis-part-3-bit.html. Accessed December 2012. 
[7] ICANN Wiki. ‘CcTLD’.  http://icannwiki.com/index.php/ccTLD. Accessed March 2013. 
[8] No-WWW. ‘www. Is deprecated.’. http://no-www.org/. Accessed March 2013. 
Printed in USA 
TRAC-R-20130802-01 
08/13