Latest checkpoint's oldestMultiXid:   1    
Latest checkpoint's oldestMulti's DB: 1    
Time of latest checkpoint:            Sun 26 May 2013 12:24:37 PM CST    
```
在备份目录中创建pg_xlog目录  
```
pg93@db-172-16-3-33-> mkdir -p /pgdata/digoal/1921/data04/pg93backup/pgdata1999/pg_xlog    
```
修改目录权限  
```
pg93@db-172-16-3-33-> chmod 700 /pgdata/digoal/1921/data04/pg93backup/pgdata1999/pg_xlog    
```
查找需要的pg_xlog文件  
```
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> ll -rt $PGDATA/pg_xlog/000000030000000E000000E*    
-rw------- 1 pg93 pg93 16M May 26 12:24 /pgdata1999/pg_xlog/000000030000000E000000EA    
-rw------- 1 pg93 pg93 16M May 26 12:24 /pgdata1999/pg_xlog/000000030000000E000000EB    
```
拷贝需要的pg_xlog文件  
```
pg93@db-172-16-3-33-> cp $PGDATA/pg_xlog/000000030000000E000000EB /pgdata/digoal/1921/data04/pg93backup/pgdata1999/pg_xlog/    
```
5\. 检查备份目录, 是否备份正常  
```
pg93@db-172-16-3-33-> ll    
total 112K    
drwx------ 9 pg93 pg93 4.0K May 25 16:33 base    
drwx------ 2 pg93 pg93 4.0K May 26 11:49 global    
drwx------ 2 pg93 pg93 4.0K May 24 14:52 pg_clog    
-rw------- 1 pg93 pg93 4.6K May 25 17:59 pg_hba.conf    
-rw------- 1 pg93 pg93 1.7K May 24 14:30 pg_ident.conf    
drwx------ 4 pg93 pg93 4.0K May  5 20:26 pg_multixact    
drwx------ 2 pg93 pg93 4.0K May 26 11:45 pg_notify    
drwx------ 2 pg93 pg93 4.0K May  5 20:26 pg_serial    
drwx------ 2 pg93 pg93 4.0K May  5 20:26 pg_snapshots    
drwx------ 2 pg93 pg93 4.0K May 26 11:49 pg_stat    
drwx------ 2 pg93 pg93 4.0K May 26 11:49 pg_stat_tmp    
drwx------ 2 pg93 pg93 4.0K May 16 15:30 pg_subtrans    
drwx------ 3 pg93 pg93 4.0K May 26 11:15 pg_tblspc    
drwx------ 2 pg93 pg93 4.0K May  5 20:26 pg_twophase    
-rw------- 1 pg93 pg93    4 May  5 20:26 PG_VERSION    
drwx------ 2 pg93 pg93 4.0K May 26 12:13 pg_xlog    
-rw------- 1 pg93 pg93  20K May 24 09:36 postgresql.conf    
-rw------- 1 pg93 pg93   27 May 26 11:45 postmaster.opts    
-rw-r--r-- 1 pg93 pg93 4.7K May  8 15:37 recovery.done    
-rw-r--r-- 1 pg93 pg93 2.5K May 24 13:46 root.crt    
-rw-r--r-- 1 pg93 pg93 1.3K May 24 13:37 server.crt    
-r-------- 1 pg93 pg93 1.7K May 24 13:32 server.key    
pg93@db-172-16-3-33-> cd pg_tblspc/    
pg93@db-172-16-3-33-> ll    
total 4.0K    
drwx------ 3 pg93 pg93 4.0K May 26 11:15 26417    
```
6\. 其他  
如果表空间目录非常大, 也可以分开进行备份.  
在备份$PGDATA时排除pg_tblspc目录即可，另外再分步进行表空间目录的备份.  
## 四, 还原  
还原冷备份前需要注意几个问题 :  
还原环境中的数据库软件需与备份时的版本一致(例如9.0的备份不能还原到9.1上),  
还原环境中的数据库软件的小版本尽量与原始环境一致(例如备份的版本为9.0.4, 还原的版本也尽量使用9.0.4, 版本升级请参考release说明.)  
还原环境中的数据库用到的lib库应该与原始环境一致, 例如原始环境中用到了postgis, 那么还原环境也必须编译同版本的postgis.  
还原环境的数据库软件编译项应该与原始环境保持一致, (特别是数据块的大小)可以在原始环境的config.log中找到，也可以使用pg_config得到，或者查看控制文件的内容得到 :  
```
./configure --prefix=/opt/pgsql9.3beta1 --with-pgport=2099 --with-segsize=8 --with-wal-segsize=64 --with-wal-blocksize=64 --with-perl --with-python --with-openssl --with-pam --with-ldap --with-libxml --with-libxslt --enable-thread-safety    
```
或者使用pg_config也可以得到  
```
pg93@db-172-16-3-33-> pg_config --configure    
'--prefix=/opt/pgsql9.3' '--with-pgport=1999' '--with-perl' '--with-tcl' '--with-python' '--with-openssl' '--with-pam' '--without-ldap' '--with-libxml' '--with-libxslt' '--enable-thread-safety' '--with-wal-blocksize=16' '--enable-debug'    
```
操作系统平台一致(例如linux的备份不能还原到windows上),  
硬件架构一致(例如x86的备份不能还原到小型机上)  
如果是在本地环境恢复, 那么不需要考虑以上问题, 如果是在其他服务器上恢复, 请按以上要求配置好还原环境后, 再开始恢复.  
1\. 把数据库目录, 表空间目录, pg_xlog全部删掉.  
```
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> rm -rf *    
pg93@db-172-16-3-33-> cd /pgdata/digoal/1921/data03/pg93/1999/pg_xlog    
pg93@db-172-16-3-33-> rm -rf *    
pg93@db-172-16-3-33-> cd /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal    
pg93@db-172-16-3-33-> rm -rf *    
```
2\. 还原备份  
```
pg93@db-172-16-3-33-> cp -r /pgdata/digoal/1921/data04/pg93backup/pgdata1999/* /pgdata1999/    
```
3\. 创建日志目录  
```
pg93@db-172-16-3-33-> cd $PGDATA    
pg93@db-172-16-3-33-> mkdir pg_log    
pg93@db-172-16-3-33-> chmod 700 pg_log    
```
4\. 如果pg_xlog, pg_tblspc使用了软链接.  
也恢复一下 :  
```
pg93@db-172-16-3-33-> mv /pgdata1999/pg_tblspc/26425/* /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal/    
pg93@db-172-16-3-33-> rm -rf /pgdata1999/pg_tblspc/26425    
pg93@db-172-16-3-33-> ln -s /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal /pgdata1999/pg_tblspc/26425    
```
如果不是软链可千万别删哦。  
5\. 启动数据库  
```
pg93@db-172-16-3-33-> pg_ctl start    
server starting    
pg93@db-172-16-3-33-> LOG:  00000: loaded library "pg_stat_statements"    
LOCATION:  load_libraries, miscinit.c:1296    
```
6\. 验证, 抽查几条数据看看.  
```
pg93@db-172-16-3-33-> psql    
psql (9.3devel)    
Type "help" for help.    
digoal=# \db    
                           List of tablespaces    
    Name    |  Owner   |                    Location                         
------------+----------+-------------------------------------------------    
 pg_default | postgres |     
 pg_global  | postgres |     
 tbs_digoal | postgres | /pgdata/digoal/1921/data03/pg93/1999/tbs_digoal    
(3 rows)    
digoal=# select count(*) from test;    
 count     
-------    
 10000    
(1 row)    
digoal=# \d test    
     Table "public.test"    
 Column |  Type   | Modifiers     
--------+---------+-----------    
 id     | integer |     
Tablespace: "tbs_digoal"    
```
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")