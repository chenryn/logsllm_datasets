0.82
3549
0.11
0.74
C2
170
9
Romania 33%
Poland 33%
3549
5588
0.16
0.33
0.88
0.67
1299
0.11
0.58
C3
126
7
India 93%
US 2%
9498
0.30
0.69
3257
0.10
0.43
174
0.06
0.39
C4
C5
484
8
Russia 73%
Czech Rep. 10%
12389
0.31
0.67
3257
0.07
0.28
1273
0.06
0.29
375
15
US 74%
Australia 16%
6939
0.54
0.80
174
0.06
0.25
16735
0.03
0.90
50
s
e
c
r
u
o
S
100
150
200
50
s
e
c
r
u
o
S
100
150
200
50
s
e
c
r
u
o
S
100
150
200
200
400
600
800
Destinations
1000
1200
C1
200
400
600
800
Destinations
C2
1000
1200
200
400
1000
1200
600
800
Destinations
C3
50
s
e
c
r
u
o
S
100
150
200
50
s
e
c
r
u
o
S
100
150
200
200
400
600
800
Destinations
1000
1200
C4
200
400
600
800
Destinations
1000
1200
C5
Figure 13: Visualization of the portion of N corresponding to the union of all ﬁve clusters. In each plot, we color the three
most dominant next hops used in one cluster.
247explore the nature of these local atoms, we start by charac-
terizing them in Table 1.
The ﬁrst two rows of the table give the size of the local
atom. This is captured by the number of preﬁxes in the
cluster (the size of C) and by the number of sources that
show common routing behavior to those preﬁxes (the size of
S). In each cluster, we ﬁnd a signiﬁcant number of ASes that
show similar routing behavior to a large number of preﬁxes.
Next, we dive into the characteristics of each local atom.
The next two rows characterize the geographic location of
the preﬁxes (destinations). In each case, we have only listed
the top-2 countries associated with the preﬁxes in the clus-
ter, and we give the percent of preﬁxes that we ﬁnd in each
cluster from those countries. These rows show that in most
cases, as much as 90% of the preﬁxes in a cluster are as-
sociated with only one or two countries. This shows that
geography clearly inﬂuences the formation of local atoms.
The next three rows of Table 1 illustrate the nature of the
‘common routing behavior’ that the sources S exhibit with
respect to the destinations C. The row labeled Dominant
Next Hops lists the ASNs of the three most common next-
hop ASes (in order of decreasing frequency) used by sources
in S for destinations in C. The row Next Hop Density shows
the fraction of entries in the cluster (across all 243 sources)
that correspond to each of the three common next hops.
And the row Coherence shows the fraction of entries only in
the submatrix N(S, C) that correspond to each of the three
common next hops. That is, the Coherence aims to quantify
the cohesiveness of the nexthops appearing in the submatrix
N(S, C).
This is further illustrated graphically in Figure 13.
The last two rows of Table 1 illustrate how common rout-
ing behavior is concentrated in the submatrix N(S, C). The
much larger density of the dominant next hops used by
sources in S as compared to among all sources shows that
the sources in S are indeed making similar nexthop choices.
In
this ﬁgure, each plot is a view of the nexthop matrix N.
The same portion of N is shown in each plot, namely, the
columns that correspond to preﬁxes forming the union of
clusters C1 through C5. The diﬀerence between each plot
is the choice of which next hop ASes are highlighted.
In
each plot, the three dominant next-hop ASes as given in
Table 1 are colored in blue, green, and red, respectively.
The ﬁgure shows how sharply the routing behavior of each
local atom is deﬁned. The common routing decisions made
within each local atom appear as clearly isolated regions
within the overall N matrix. This conﬁrms our intuition of
a local atom as equivalent to a coherent submatrix of N.
7. OVERLAPPING CLUSTERING
The local atoms we have found so far have non-overlapping
preﬁx sets. Consider the case of two coherent submatrices
of N as shown in Figure 14. It is quite possible for BGP
routing to result in this situation, but such local atoms can
not be distinguished by the approach we have taken so far.
The Pivot algorithm outputs a partition of the preﬁxes.
That is, every preﬁx x (column of N) is only assigned to
one cluster. However, as demonstrated by Figure 14, some
columns should belong to both clusters, thus the expressive-
ness of partition-based clustering is limited. In this section,
we propose a clustering that allows us to create clusters that
can express such scenarios. Such clustering allows for over-
lapping clusters — the same node can be assigned to more
Figure 14: Overlapping clusters in N.
than one cluster, and hence can capture the relationship
shown in Figure 14.
Algorithm 2 The Local algorithm .
A set of preﬁxes X = {x1, . . . , xn}, the matrix of their
normalized rsd distances eD and integer p.
A labeling L that assigns at most p labels (clusters) for
every x ∈ X.
Lt(x) =Initialize(p)
1: t = 0
2: for every x ∈ X do
3:
4: end for
5: while true do
6:
7:
8:
9:
10:
11:
12:
13:
14:
end if
15: end while
return Lt
t = t + 1
Lt = Lt−1
for every x ∈ X do
eLt(x) =NNLS(eD, Lt)
Lt(x) =Boolean( ˆLt(x), p)
end for
if |L-Cost(Lt) − L-Cost(Lt−1)| <  then
7.1 The Overlapping-Clustering
problem
In this section, we deﬁne the Overlapping-Clustering
problem. The output of this problem is a labeling L, which
assigns every node x to a set of clusters L(x). That is, every
label corresponds to a cluster.
Since every node is assigned to a set (rather than to a
single) cluster, we can compare a cluster-assignment for two
nodes – e.g., x and x! – by comparing the corresponding
labels. We do this by considering the Jaccard distace of the
label sets L(x) and L(x!), which is deﬁned as follows:
J `x, x! | L´ = 1 −
|L(x) ∩ L(x!)|
|L(x) ∪ L(x!)|
.
That is, the Jaccard distance captures the extent to which
two label sets overlap, as a fraction of the total number of
labels in both sets.
To capture the kind of relationship shown in Figure 14,
248