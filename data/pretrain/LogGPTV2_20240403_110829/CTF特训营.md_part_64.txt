9.
ch[]=CCH[x];
10.
11.
string chs = ch;
12.
string ins;
13.
MD5md5;
14.
cout>ins;
16.
if (ins == chs.substr(13,16))
17.
---
## Page 785
CTF特训营：技术详解、解题方法与
22.3 Revolver
785/1144
18.
return true;
19.
20.
else
21.
22.
return false;
23.
24.}
在验证proof的过程中，只需要爆破3个字符碰撞MD5即可，使用
Python计算所消耗的时间低于1秒。具体攻击代码如下：
1.def open_insurance(io):
2
io.read_until("action:")
3.
io.writeline("1")
4.
io.read_until("action:")
5.
io.writeline("1")
6.
io.read_until("opening:")
7.
md5=io.read（32)
8.
io.read(1)
9.
st=io.read(13)
10.
=
0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+
11.
foriin t:
12.
for jin t:
13.
forkint:
14.
if hashlib.md5(st + i + j + k).hexdigest() == md5:
15.
io.writeline(i+j+k）
16.
return
验证完成后，程序会读取flag文件，随机生成AES256的32字节
密钥并进行加密，然后存储于下述关键结构中：
1.struct secret_st
---
## Page 786
CTF特训营：技术详解、解题方法与
22.3 Revolver
786/1144
2.
3.
unsigned int secret_size;
4.
uint8_trules[16];
5.
uint8_t key[32];
6.
uint8_t flag[32];
7.}secret;
结构中secret_size为rules的长度，key为AES256的密钥，flag为
使用AES256加密后的flag密文。初始化完成后会给予3发子弹，并且
不可再次装填。每发子弹都可以实现选项3中的一个功能。
2.功能
选项3中包含7个功能，均为用于攻击或用于检查的实用功能。
进入选项3的条件是通过proof打开保险，并且拥有一定数量的子弹。
选项3-1会打印出AES256加密后的密文。
选项3-2可以修改rules的大小，即对上述结构体中的secret_size
进行更改，需要注意的是，这里最大可以改到32，而rules仅有16字
节，代码如下：
1.case 2:
2.{
3.
cout>tmp;
5.
if (tmp>32）
6.
bye();
---
## Page 787
CTF特训营：技术详解、解题方法与
22.3 Revolver
787/1144
7.
secret.secret_size=tmp;
8.
break;
6
选项3-3可以输入rules，且输入的长度不可以超过16字节，但是
在服务端打印rules时是以secretsize作为长度限制的，代码如下：
1.case 3:
2.{
3.
string rules;
4.
cout>rules;
6.
if (rules.length()>16)
7.
8.
9.
bye();
10.
11.
else
12.
13.
rules.copy((char *)secret.rules,secret.secret_size-1,0);
14.
d 
15.
DUMP(your rules:",tmp_i,secret.rules,secret.secret_size);
16.
17.
break;
18.}
选项3-4使用e=65537的RSA进行了AES256的密钥加密并进行打
印。
选项3-5在使用AES256进行加密的时候，因为flag为32位，并且
采取的是ECB模式，所以一共进行了14×2次密钥扩展，共14×2×2=56
---
## Page 788
CTF特训营：技术详解、解题方法与
22.3Revolver
788/1144
个轮密钥，此选项可以任意打印其中一个，代码如下：
1.case 5:
2.{
3.
int action_in;
4.
5.
action_in=get_action(56);
6.
if(action_in==0)
7.
8.
bye();
9.
10.
else
11.
12.
int i;
13.
printf("hit:");
14.
for(i=0;i>loc;
6.
if (loc=48)
7.
bye();
8.
else
9.
{
10.
secret.rules[loc]-=1
11.
12.
cout 16;i -= 4){
---
## Page 792
CTF特训营：技术详解、解题方法与
22.3 Revolver
792/1144
7.
k[i+0]^=ki-4];
8.
k[i+1]=k{i-3];
9.
ki+2]=ki-2]；
10.
k[i+3]=ki-1]；
11.
12.
13.
k[16]=ri_sbox（k[12]）;
14.