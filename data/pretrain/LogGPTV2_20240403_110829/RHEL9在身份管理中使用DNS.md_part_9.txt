::: orderedlist
**流程**
1.  可选：列出所有配置的 DNS 位置：
    ``` literallayout
    [root@server ~]# ipa location-find
    -----------------------
    2 IPA locations matched
    -----------------------
    Location name: australia
    Location name: germany
    -----------------------------
    Number of entries returned: 2
    -----------------------------
    ```
2.  将服务器分配到 DNS 位置。例如，要将位置 `germany`{.literal}
    分配给服务器 [**idmserver-01.idm.example.com**]{.strong}，请运行：
    ``` literallayout
    # ipa server-mod idmserver-01.idm.example.com --location=germany
    ipa: WARNING: Service named-pkcs11.service requires restart on IPA server
    idmserver-01.idm.example.com to apply configuration changes.
    --------------------------------------------------
    Modified IPA server "idmserver-01.idm.example.com"
    --------------------------------------------------
    Servername: idmserver-01.idm.example.com
    Min domain level: 0
    Max domain level: 1
    Location: germany
    Enabled server roles: DNS server, NTP server
    ```
3.  在您在前面的步骤中分配的主机上重启 `named-pkcs11`{.literal} 服务：
    ``` literallayout
    # systemctl restart named-pkcs11
    ```
4.  可选：重复分配 DNS 位置的步骤来进一步 IdM 服务器。
:::
::: itemizedlist
**其它资源**
-   [请参阅在相同的位置将 IdM 客户端配置为使用 IdM
    服务器](#managing-dns-locations-in-idm_working-with-dns-in-identity-management.html#configuring-an-idm-client-to-use-idm-servers-in-the-same-location_managing-dns-locations-in-idm "配置 IdM 客户端以在同一位置使用 IdM 服务器"){.link}。
:::
:::
::: section
::: titlepage
# []{#managing-dns-locations-in-idm_working-with-dns-in-identity-management.html#configuring-an-idm-client-to-use-idm-servers-in-the-same-location_managing-dns-locations-in-idm}配置 IdM 客户端以在同一位置使用 IdM 服务器 {.title}
:::
身份管理(IdM)服务器被分配给 DNS 位置，如使用 IdM [Web UI 将 IdM
服务器分配给 DNS
位置](#managing-dns-locations-in-idm_working-with-dns-in-identity-management.html#assigning-an-idm-server-to-a-dns-location-using-the-idm-web-ui_managing-dns-locations-in-idm "使用 IdM Web UI 将 IdM 服务器分配给 DNS 位置"){.link}
所述。现在，您可以将客户端配置为使用与 IdM 服务器相同的位置的 DNS
服务器：
::: itemizedlist
-   如果 `DHCP`{.literal} 服务器为客户端分配 DNS 服务器 IP 地址，请配置
    `DHCP`{.literal} 服务。有关在您的 `DHCP`{.literal} 服务中分配 DNS
    服务器的详情，请查看 `DHCP`{.literal} 服务文档。
-   如果您的客户端没有从 `DHCP`{.literal} 服务器接收 DNS 服务器 IP
    地址，请在客户端的网络配置中手动设置 IP。有关在 Red Hat Enterprise
    Linux 中配置网络的详情，请参考 [*[Red Hat Enterprise Linux
    网络指南]{.citetitle}*]{.emphasis}中的[置网络连接设置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configuring_network_connection_settings){.link}部分。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您将客户端配置为使用分配给不同位置的 DNS
服务器，客户端会联系两个位置中的 IdM 服务器。
:::
::: example
[]{#managing-dns-locations-in-idm_working-with-dns-in-identity-management.html#idm140467004101808}
**例 4.3. 不同的名称服务器条目，具体取决于客户端的位置**
::: example-contents
以下示例显示了不同位置中客户端在 `/etc/resolv.conf`{.literal}
文件中的不同名称服务器条目：
原则上的客户端：
``` literallayout
nameserver 10.10.0.1
nameserver 10.10.0.2
```
Paris 中的客户端：
``` literallayout
nameserver 10.50.0.1
nameserver 10.50.0.3
```
Oslo 中的客户端：
``` literallayout
nameserver 10.30.0.1
```
Berlin 中的客户端：
``` literallayout
nameserver 10.30.0.1
```
如果每个 DNS 服务器都被分配给 IdM 中的位置，客户端将使用其位置中的 IdM
服务器。
:::
:::
:::
::: section
::: titlepage
# []{#managing-dns-locations-in-idm_working-with-dns-in-identity-management.html#_additional_resources_2}其他资源 {.title}
:::
::: itemizedlist
-   [请参阅使用 Ansible 管理 IdM 中的 DNS
    位置](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html "第 5 章 使用 Ansible 管理 IdM 中的 DNS 位置"){.link}。
:::
:::
:::
[]{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html}
::: chapter
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management}第 5 章 使用 Ansible 管理 IdM 中的 DNS 位置 {.title}
:::
作为 Identity Management(IdM)管理员，您可以使用
`ansible-freeipa`{.literal} 软件包中的 `location`{.literal} 模块来管理
IdM DNS 位置。本章描述了以下主题和步骤：
::: itemizedlist
-   [基于 DNS
    的服务发现](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#dns-based-service-discovery_using-ansible-to-manage-dns-locations-in-idm "基于 DNS 的服务发现"){.link}
-   [DNS
    位置的部署注意事项](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm "DNS 位置的部署注意事项"){.link}
-   [生存的 DNS
    时间(TTL)](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#dns-time-to-live-ttl_using-ansible-to-manage-dns-locations-in-idm "生存的 DNS 时间(TTL)"){.link}
-   [使用 Ansible 确保存在 IdM
    位置](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#using-ansible-to-ensure-an-idm-location-is-present_using-ansible-to-manage-dns-locations-in-idm "使用 Ansible 确保存在 IdM 位置"){.link}
-   [使用 Ansible 确保 IdM
    位置不存在](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#using-ansible-to-ensure-an-idm-location-is-absent_using-ansible-to-manage-dns-locations-in-idm "使用 Ansible 确保 IdM 位置不存在"){.link}
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#dns-based-service-discovery_using-ansible-to-manage-dns-locations-in-idm}基于 DNS 的服务发现 {.title}
:::
基于 DNS 的服务发现过程是一个进程，客户端使用 DNS 协议在提供特定服务（如
`LDAP`{.literal} 或 `Kerberos`{.literal}
）的网络中查找服务器。种典型的操作类型是允许客户端在最接近的网络基础架构内定位身份验证服务器，因为它们提供更高的吞吐量和更低的网络延迟，从而减少总体成本。
服务发现的主要优点是：
::: itemizedlist
-   不需要为客户端显式配置名称服务器的名称。
-   DNS 服务器用作策略中央提供商。使用相同的 DNS
    服务器的客户端可以访问与服务提供商相关的相同策略及其首选顺序。
:::
在 Identity Management(IdM)域中，`LDAP`{.literal}、`Kerberos`{.literal}
和其他服务都存在 DNS 服务记录（SRV 记录）。例如，以下命令在 IdM DNS
域中查询 DNS 服务器以获取提供基于 TCP 的 `Kerberos`{.literal}
服务的主机：
::: example
[]{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#idm140467025441520}
**例 5.1. DNS 位置独立的结果**
::: example-contents
``` literallayout
$ dig -t SRV +short _kerberos._tcp.idm.example.com
0 100 88 idmserver-01.idm.example.com.
0 100 88 idmserver-02.idm.example.com.
```
输出中包含以下信息：
::: itemizedlist
-   `0（`{.literal} 优先级）：目标主机的优先级。首选使用较低值。
-   `100`{.literal}
    (权重).为具有相同优先级的条目指定相对权重。如需更多信息，请参阅 [RFC
    2782，第 3
    部分](https://tools.ietf.org/html/rfc2782#page-3){.link}。
-   `88`{.literal} （端口号）：服务的端口号。
-   提供该服务的主机的规范名称。
:::
:::
:::
在示例中，返回两个主机名具有相同的优先级和权重。在这种情况下，客户端使用结果列表中的随机条目。
相反，当客户端配置为查询 DNS 位置中配置的 DNS
服务器时，输出会有所不同。对于分配给某个位置的 IdM
服务器，会返回定制的值。在以下示例中，客户端被配置为查询位置
`germany`{.literal} 中的 DNS 服务器：
::: example
[]{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#idm140466905127840}
**例 5.2. 基于 DNS 位置的结果**
::: example-contents
``` literallayout
$ dig -t SRV +short _kerberos._tcp.idm.example.com
_kerberos._tcp.germany._locations.idm.example.com.
0 100 88 idmserver-01.idm.example.com.
50 100 88 idmserver-02.idm.example.com.
```
:::
:::
IdM DNS 服务器自动返回一个 DNS 别名(CNAME)指向特定 DNS 位置的 SRV
记录，该记录首选本地服务器。此 CNAME
记录显示在输出的第一行中。在示例中，主机
[**idmserver-01.idm.example.com**]{.strong}
具有最低优先级值，因此首选。[**idmserver-02.idm.example.com**]{.strong}
具有更高的优先级，因此仅在首选主机不可用时用作备份。
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm}DNS 位置的部署注意事项 {.title}
:::
在使用集成 DNS
时，身份管理(IdM)可以生成特定于位置的服务(SRV)记录。因为每个 IdM DNS
服务器都生成特定于位置的 SRV 记录，所以您必须在每个 DNS
位置中至少安装一个 IdM DNS 服务器。
客户端与 DNS 位置的关联仅由客户端接收的 DNS
记录定义。因此，如果客户端通过 IdM DNS 服务器解析来自 IdM DNS
服务器的特定记录，您可以将 IdM DNS 服务器与非 IdM DNS
消费者服务器合并，并递归。
在混合 IdM 和非 IdM DNS 服务的大多数部署中，DNS recursors
使用往返时间指标自动选择最接近的 IdM DNS 服务器。通常，这可确保使用非
IdM DNS 服务器的客户端获得最接近的 DNS 位置的记录，因此使用最佳的 IdM
服务器集合。
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#dns-time-to-live-ttl_using-ansible-to-manage-dns-locations-in-idm}生存的 DNS 时间(TTL) {.title}
:::
客户端可以缓存 DNS
资源记录，以一定时间在区域的配置中设置。因此，客户端可能无法接收更改，直到时间进入
live(TTL)值过期。Identity Management(IdM)中的默认 TTL 值为
`1 天`{.literal}。
如果您的客户端计算机在站点间漫游，您应该调整 IdM DNS 区的 TTL
值。将值设为比客户端在站点之间漫游所需的时间值更低。这样可确保在客户端中缓存的
DNS 条目在重新连接到另一个站点前过期，从而查询 DNS
服务器来刷新特定于位置的 SRV 记录。
::: itemizedlist
**其他资源**
-   请参阅 [主 IdM DNS
    区域的配置属性](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_and_managing_identity_management/index#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones){.link}。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#using-ansible-to-ensure-an-idm-location-is-present_using-ansible-to-manage-dns-locations-in-idm}使用 Ansible 确保存在 IdM 位置 {.title}
:::
作为 Identity Management(IdM)的系统管理员，您可以配置 IdM DNS
位置，以便客户端在最接近的网络基础架构中找到身份验证服务器。
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中存在 DNS
位置。这个示例描述了如何确保 IdM 中存在 [**germany**]{.strong} DNS
位置。因此，您可以将特定的 IdM 服务器分配到这个位置，以便本地 IdM
客户端可以使用它们来缩短服务器响应时间。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   示例假定您已