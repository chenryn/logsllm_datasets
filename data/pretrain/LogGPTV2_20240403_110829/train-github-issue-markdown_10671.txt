 **nicolas de loof** opened **SPR-2605** and commented
Containers like plexus use field injection. According to
http://forum.springframework.org/showthread.php?t=9692&highlight=field+injection,
This is not considered by Spring developers as a good practice.
I myself had a case where it may be better than setter injection :
A newbee developper coded into a Struts action injection of values into it's
dependencies using public setters. Dependency may use a facade interface but
was not in this case (generated code). This is not Spring responsibility to
avoid such errors, but requirement for public setters exposes components
internals.
Having protected (or package) field for dependencies keeps code testability
(only require the testcase to be in the same package) and avoid exposing
unnecessary setters.
Field injection requires Spring to make some "magic" Privileged actions, but
Hibernate and JPA also do AFAIK.
Could you please reconsider this and expose a definitive argument to exclude
field injection from Spring scope ?
* * *
**Issue Links:**
  * #10249 `@Autowired` vs. <property ( _ **"is duplicated by"**_ )