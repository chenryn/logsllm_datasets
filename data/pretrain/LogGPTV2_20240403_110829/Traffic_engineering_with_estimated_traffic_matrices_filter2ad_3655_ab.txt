from the true trafﬁc matrix. However, the resulting trafﬁc matrix
is still a real trafﬁc matrix (covering around 80% of the network
trafﬁc) on the real network topology, and so is as good a possible
set of measurements as are currently available (for instance in [5]
only three rows of the trafﬁc matrix were available). This trafﬁc
matrix is what we shall refer to as the true trafﬁc matrix throughout
the rest of the paper.
The nature of ﬂow-level data makes it only possible to approx-
imate time-series data. Flow-level information contains the start
and stop time of the ﬂow, and the number of packets/bytes, but not
when the packets were sent within the ﬂow. Given that some ﬂows
can continue for hours, it is only practical to look at time series
of the order of the timeouts used to ﬂush current ﬂows. Note that
there is no inherent reason why the timeouts will occur at the same
time at different routers, and so to use commensurate time series,
one must average over longer intervals than the timeout to obtain
useful data (using a more sophisticated interpolation scheme runs
the risk of introducing artifacts into the data). In Cisco Netﬂow,
the timeouts are of the order of 15 minutes, and so we consider
time series at a one hour time scale, allowing (with not too much
approximation) for these intervals to be offset at different routers.
Over longer intervals the trafﬁc is non-stationary (showing strong
diurnal cycles) and so we do not wish to use longer time averages
if possible.
The topology and routing information are derived from infor-
mation gathered from the same network using the methods of [1].
Given these trafﬁc matrices and the network topology, we need only
a consistent set of link load measurements to proceed.
4.3 Methodology
The problem of providing a consistent set of trafﬁc, topology and
link measurement data can be solved as follows. We simulate the
OSPF routing using the existing topology and link weights (and
area structure). The existing link weights are those currently set by
the network operator. From this we may compute a routing matrix
A, and then derive a set of link measurements x from (1). Thus the
trafﬁc matrix t, the routing matrix A and the measured link loads
x are all consistent.
We can then perform the estimation procedure to compute ˆt, the
trafﬁc matrix estimate. This approach allows us to work with a
problem for which we have both a real estimate and the true trafﬁc
matrix.
To help the reader understand the issues involved, we shall sum-
marize the errors in the estimated trafﬁc matrices in Section 5.1.
However, the point of this paper is that simply looking at these er-
rors is not enough to understand whether a trafﬁc matrix estimate
is “good”. To really understand whether an estimate is good, one
must assess how well it performs in operational tasks.
The task we assess here is trafﬁc engineering — in particular
the task of optimizing the network routing to make the network
more efﬁcient in its use of resources (and hence reduce congestion).
To do this we use one basic approach. We compute routing by
applying a routing optimizer to the estimated trafﬁc matrix. We
then assess how well these routes work for the real trafﬁc matrix.
Speciﬁcally, consider the task of optimizing the OSPF weights
in a network. Based on the trafﬁc matrix estimate, we optimize the
weight setting:
ˆw = OSPF-weight-optimizer(ˆt).
An OSPF simulator takes the new weights and ﬁnds the corre-
sponding optimized routing matrix
˜A = OSPF-route-simulater( ˆw)
Finally, we apply this new routing to the original true trafﬁc matrix
t so as to get a set of link loads:
ˆx = ˜A t.
The max-utilization optimized for the estimated trafﬁc matrix ˜t but
applied to the true trafﬁc matrix t is then
max-utilization(ˆt; t) = max
i
ˆxi
Ci
,
where Ci are the link capacities. The whole procedure behind the
experiments is illustrated in Figure 1.
We will also compare the results with those under alternative
routing, for instance, using a routing matrix derived using MPLS
optimization from the true or estimated trafﬁc matrix, and the Inv-
Cap routing. The only difference is the mechanism used to generate
the optimized routing matrix ˜A from the estimated trafﬁc matrix ˆt.
We concern ourselves with optimizing the routing of the inter-
PoP backbone-router network containing on the order of one hun-
dred routers, with a few links per router. Link based trafﬁc matrix
estimates are difﬁcult to obtain on any ﬁner granularity than this,
Current weights
OSPF simulator
SNMP data
Traffic estimator
True traffic matrix
Network data
Estimated traffic matrix
OSPF simulator
weigths optimized
for extimated traffix
max−utilization
OSPF optimizer
Figure 1: Diagram over experiment.
and OSPF allows a hierarchical routing based on areas, which can
naturally be used to isolate the routing of local intra-PoP trafﬁc
from inter-PoP trafﬁc.
5. RESULTS
The results shown here are derived from the backbone of a tier-1
ISP network. We present results over the course of one day (the
17th of August 2002) to show the effects of the changing matrix
over the course of the day. We will also show results from a sep-
arate segment of data to illustrate the performance of routing pre-
diction. The data is broken into one hour data sets over which the
trafﬁc matrix is approximately stationary.
For proprietary reasons, max-utilizations reported in this paper
are scaled so that their absolute value for the operational backbone
cannot be deduced. Such scaling does not affect the relative perfor-
mance of the different schemes. Proprietary reasons also prevent us
from exposing the performance of the OSPF weight settings used
in the operational network.
5.1 Errors in Trafﬁc Matrix Estimates
A detailed general analysis of the errors in the different trafﬁc
matrix estimates is presented in [4]. For reference in this paper
we provide some simple measurements of the errors. In Figure 2
we present relative error of estimated trafﬁc matrices versus true
trafﬁc matrices. That is, for each hour we compute the sum (over
the source-destination pairs) of the absolute value of the error be-
tween estimated and true trafﬁc, and divide this sum by the total
trafﬁc. We see that tomogravity is more than twice as good as gen-
eral gravity, which is more than twice as good as simple gravity.
These ﬁndings are consistent with those reported in [4].
In Figure 3 (a) we present an alternative representation of the
estimates more comparable with later ﬁgures on max-utilization.
A simple-minded hypothesis is that optimizing over the true traf-
ﬁc matrix, the max-utilization is going to be proportional to mean
trafﬁc and that if we optimize over an estimated trafﬁc matrix, the
performance is degraded by mean error. Figure 3 (a) shows the
mean trafﬁc plus the mean (absolute) errors for each of the data
sets over the course of the day. If our simple-minded hypothesis
is true, the curves should roughly match those of max-utilization
achieved with the estimated trafﬁc matrices.
5.2 Max-utilization versus mean errors
We now test how well the estimated trafﬁc matrices perform on
max-utilization. We apply the OSPF optimizer to each estimated
demand matrix, including the true trafﬁc matrix, and test the result-
ing routing on the true trafﬁc matrix. The resulting max-utilizations
are depicted in Figure 3 (b). At this stage, we could also have ap-
plied an MPLS optimizer, but as we shall see shortly, these are not
as reliable. Averages and maximums over the 24 hours are con-
70
60
50
40
30
20
10
)
%
(
r
o
r
r
e
n
a
e
m
e
v
i
t
l
a
e
r
0
0
3
6
9
tomogravity
general gravity
simple gravity
12
time
15
18
21
24
Figure 2: Relative error for the different trafﬁc estimates for
each of the 24 hours. The circles show the tomogravity estimate,
and the (cid:1) and (cid:2) show the general and simple gravity model
estimates. For tomogravity, the average relative error is 0.13,
for general gravity it is 0.30, and for simple gravity it is 0.67.
tained in Table 1 along with other data. More precisely, the table
reports the
• Average Max-Utilization (AMU): the average over all hours
of the max-utilization for the relevant method.
• Max Max-Utilization (MMU): the largest max-utilization
for the method over all hours.
Both quantities are reported as percentages of the MMU for Inv-
Cap (recall that we for proprietary reasons cannot give the abso-
lute numbers). The former metric gives an average view of perfor-
mance, while the latter is a type of worst case comparison.
The most interesting thing to observe is that when it comes to the
max-utilization in Figure 3 (b), the performance of simple gravity
and general gravity is roughly the same. As calculated in Table 1,
simple gravity slightly outperforms general gravity both on the av-
erage and in the worst-case. This is in sharp contrast to the ﬁndings
in §5.1 that the errors of general gravity are half as large as those
of simple gravity. Hence, the error improvement of general gravity
does not help reduce the max-utilization. The error measurements
in [4] also rate general gravity over simple gravity, so this is a strong
counter example to the idea that one can use simple error measure-
ments to make general conclusions about the performance of trafﬁc
estimates in trafﬁc engineering.
The above being said, we do see that the tomogravity estimates
perform best both with respect to errors and with respect to max-
utilization, on the average getting within 6% of OSPF optimization
based on the true trafﬁc matrix. This is quite small compared with
the 13% average error shown in Figure 2. We also note that we
actually perform slightly better with the estimated than with the
true trafﬁc in hour 8. This clearly illustrates the point from §2.2
that the OSPF optimizer is only a heuristic, not guaranteed to ﬁnd
optimal solutions.
5.3 Sensitivity of optimizers to estimates
We next see how well the OSPF optimization compares with:
• inverse capacity weights: in this default weight setting the
weights are the inverse of the capacity of links. This is a
r
o
r
r
e
n
a
e
m
+
c
i
f
f
a
r
t
n
a
e
m
n
o
i
t
a
z
i
l
i
t
i
u
m
u
m
x
a
m
d
e
a
c
s
l
100
90
80
70
60
50
40
30
20
10
n
o
i
t
a
z
i
l
i
t
i
u
m
u
m
x
a
m
d
e
a
c
s
l
true
tomogravity
general gravity
simple gravity
15
18
21
24
0
0
3
6
9
0
0
3
6
9
12
time
(a) Mean trafﬁc plus the mean absolute errors for each
method of estimation. The ’+’ signs show the magni-
tude of the true trafﬁc matrix (with zero errors), the
circles the tomogravity estimate, and the (cid:1) and (cid:2)
show the general and simple gravity model estimates.
OSPF/true
OSPF/tomogravity
OSPF/general gravity
OSPF/simple gravity
15
18
21
24
12
time
(b) The ’+’ signs show the performance of the OSPF
optimization using the true trafﬁc matrix, and the cir-
cles, (cid:1) and (cid:2) show the OSPF optimization on the
tomogravity, general and simple gravity model esti-
mates, respectively.
100
90
80
70
60
50
40
30
20
10
0
0
3
6
9
n
o
i
t
a
z
i
l
i
t
i
u
m
u
m
x
a
m
d
e
a
c
s
l
100
90
80
70
60