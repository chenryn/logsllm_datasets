Bos, and Cristiano Giuffrida. Position-independent code
reuse: On the effectiveness of aslr in the absence of infor-
mation disclosure. In 2018 IEEE European Symposium
on Security and Privacy (EuroS&P), pages 227–242.
IEEE, 2018.
[24] Boncheol Gu, Andre S. Yoon, Duck-Ho Bae, Insoon Jo,
Jinyoung Lee, Jonghyun Yoon, Jeong-Uk Kang, Moon-
sang Kwon, Chanho Yoon, Sangyeun Cho, Jaeheon
Jeong, and Duckhyun Chang. Biscuit: A framework for
near-data processing of big data workloads. In Proceed-
ings of the 43rd International Symposium on Computer
Architecture, ISCA ’16, pages 153–165, Piscataway, NJ,
USA, 2016. IEEE Press.
[25] Nikos Hardavellas, Michael Ferdman, Babak Falsaﬁ,
and Anastasia Ailamaki. Toward dark silicon in servers.
IEEE Micro, 31(4):6–15, 2011.
[26] Jason Hiser, Anh Nguyen-Tuong, Michele Co, Matthew
Hall, and Jack W Davidson. ILR: Where’d My Gadgets
Go? In Security and Privacy (SP), 2012 IEEE Sympo-
sium on, pages 571–585. IEEE, 2012.
[27] Hong Hu, Shweta
Shinde, Sendroiu Adrian,
Zheng Leong Chua, Prateek Saxena, and Zhenkai Liang.
Data-oriented programming: On the expressiveness of
non-control data attacks. In 2016 IEEE Symposium on
Security and Privacy (SP), pages 969–986. IEEE, 2016.
[28] Intel.
Intel Acceleration Stack for Intel Xeon CPU
with FPGAs Core Cache Interface (CCI-P) Reference
Manual, Nov 2019.
https://www.intel.com/
content/dam/www/programmable/us/en/pdfs/
literature/manual/mnl-ias-ccip.pdf.
[29] Intel.
Intel Xeon processor scalable family.
https://www.intel.com/content/www/us/en/
products/processors/xeon/scalable.html,
Accessed: 2020-07-08.
[30] Jafar Haadi Jafarian, Ehab Al-Shaer, and Qi Duan. Open-
ﬂow random host mutation: transparent moving target
In Pro-
defense using software deﬁned networking.
ceedings of the ﬁrst workshop on Hot topics in software
deﬁned networks, pages 127–132. ACM, 2012.
[31] Jajodia, Sushil and Ghosh, Anup K and Swarup, Vipin
and Wang, Cliff and Wang, X Sean. Moving Target
Defense: Creating Asymmetric Uncertainty for Cyber
Threats, volume 54. Springer Science & Business Media,
2011.
[32] James Jeffers and James Reinders. Intel Xeon Phi Co-
processor High Performance Programming. Morgan
Kaufmann Publishers Inc., San Francisco, CA, USA, 1st
edition, 2013.
[33] Norman P Jouppi, Cliff Young, Nishant Patil, David Pat-
terson, Gaurav Agrawal, Raminder Bajwa, Sarah Bates,
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    439
In-
Suresh Bhatia, Nan Boden, Al Borchers, et al.
datacenter performance analysis of a tensor processing
In 2017 ACM/IEEE 44th Annual International
unit.
Symposium on Computer Architecture (ISCA), pages
1–12. IEEE, 2017.
[34] Shubham Kamdar and Neha Kamdar. big.LITTLE ar-
In-
chitecture: Heterogeneous multicore processing.
ternational Journal of Computer Applications, 119(1),
2015.
[35] Gaurav S Kc, Angelos D Keromytis, and Vassilis Preve-
lakis. Countering code-injection attacks with instruction-
In Proceedings of the 10th ACM
set randomization.
conference on Computer and communications security,
pages 272–280. ACM, 2003.
[36] Chongkyung Kil, Jinsuk Jim, Christopher Bookholt, Jun
Xu, and Peng Ning. Address Space Layout Permuta-
tion (ASLP): Towards Fine-grained Randomization of
Commodity Software. In Computer Security Applica-
tions Conference, 2006. ACSAC’06. 22nd Annual, pages
339–348. IEEE, 2006.
[37] Paul Kocher, Jann Horn, Anders Fogh, , Daniel Genkin,
Daniel Gruss, Werner Haas, Mike Hamburg, Moritz
Lipp, Stefan Mangard, Thomas Prescher, Michael
Schwarz, and Yuval Yarom. Spectre Attacks: Exploiting
Speculative Execution. In 40th IEEE Symposium on
Security and Privacy (S&P’19), 2019.
[38] Koen Koning, Herbert Bos, and Cristiano Giuffrida.
Secure and Efﬁcient Multi-Variant Execution using
In 2016
Hardware-Assisted Process Virtualization.
46th Annual IEEE/IFIP International Conference on
Dependable Systems and Networks (DSN), pages 431–
442. IEEE, 2016.
[39] Koen Koning, Xi Chen, Herbert Bos, Cristiano Giuffrida,
and Elias Athanasopoulos. No need to hide: Protecting
safe regions on commodity hardware. In Proceedings of
the Twelfth European Conference on Computer Systems,
pages 437–452. ACM, 2017.
[40] H. Koo, Y. Chen, L. Lu, V. P. Kemerlis, and M. Poly-
chronakis. Compiler-assisted code randomization. In
2018 IEEE Symposium on Security and Privacy (SP),
pages 461–477, 2018.
[41] Volodymyr Kuznetsov, László Szekeres, Mathias Payer,
George Candea, R Sekar, and Dawn Song. Code Pointer
Integrity. In USENIX Symposium on Operating Systems
Design and Implementation (OSDI), 2014.
[42] Per Larsen, Andrei Homescu, Stefan Brunthaler, and
Michael Franz. SoK: Automated Software Diversity. In
Proceedings of the 2014 IEEE Symposium on Security
and Privacy, SP ’14, 2014.
[43] Hans Liljestrand, Thomas Nyman, Kui Wang, Car-
los Chinea Perez, J Ekberg, and N Asokan. Pac it up:
Towards pointer integrity using arm pointer authentica-
tion. arXiv preprint arXiv:1811.09189, 2018.
[44] Felix Xiaozhu Lin, Zhen Wang, and Lin Zhong. K2:
A mobile operating system for heterogeneous coher-
ence domains. In Proceedings of the 19th International
Conference on Architectural Support for Programming
Languages and Operating Systems, ASPLOS ’14, pages
285–300, New York, NY, USA, 2014. ACM.
[45] Moritz Lipp. Cache attacks on arm. PhD thesis.
[46] Moritz Lipp, Michael Schwarz, Daniel Gruss, Thomas
Prescher, Werner Haas, Anders Fogh, Jann Horn, Ste-
fan Mangard, Paul Kocher, Daniel Genkin, et al. Melt-
down: Reading kernel memory from user space. In 27th
USENIX Security Symposium (USENIX Security 18),
pages 973–990, 2018.
[47] Tongping Liu, Charlie Curtsinger, and Emery D. Berger.
Dthreads: Efﬁcient deterministic multithreading.
In
Proceedings of the Twenty-Third ACM Symposium on
Operating Systems Principles, SOSP ’11, page 327–336,
New York, NY, USA, 2011. Association for Computing
Machinery.
[48] Timothy P. Morgan. Tilera rescues CPU cycles with net-
work coprocessors, 2013. https://bit.ly/2DfM53R.
[49] Netronome. Agilio SmartNICs, 2019. https://www.
netronome.com/products/smartnic/overview/.
[50] Oleksii Oleksenko, Dmitrii Kuvaiskii, Pramod Bhatotia,
Pascal Felber, and Christof Fetzer. Intel mpx explained:
A cross-layer analysis of the intel mpx system stack.
Proceedings of the ACM on Measurement and Analysis
of Computing Systems, 2(2):28, 2018.
[51] Pierre Olivier, Antonio Barbalace, and Binoy Ravindran.
Multi-variant execution atop a decomposed hypervisor
on emerging heterogeneous-isa multicore. 2016. Eu-
roSys’16 (Poster).
[52] Pierre Olivier, Sang-Hoon Kim, and Binoy Ravindran.
OS Support for Thread Migration and Distribution in
the Fully Heterogeneous Datacenter. In Proceedings of
the 16th Workshop on Hot Topics in Operating Systems,
pages 174–179. ACM, 2017.
[53] Shruti Padmanabha, Andrew Lukefahr, Reetuparna Das,
and Scott Mahlke. Dynamos: dynamic schedule migra-
tion for heterogeneous cores. In Proceedings of the 48th
International Symposium on Microarchitecture, pages
322–333. ACM, 2015.
440    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
[54] Soyeon Park, Sangho Lee, Wen Xu, Hyungon Moon,
and Taesoo Kim. libmpk: Software Abstraction for Intel
Memory Protection Keys (Intel MPK). In 2019 USENIX
Annual Technical Conference (USENIX ATC 19), pages
241–254, 2019.
[65] The Ultimate Dissassembly Framework – Capstone.
http://www.capstone-engine.org/.
[66] AWS Inter-Region Latency. https://www.cloudping.
co/.
[55] QEMU. http://www.qemu.org.
[56] Stefan Rusu, Simon Tam, Harry Muljono, Jason Stinson,
David Ayers, Jonathan Chang, Raj Varada, Matt Ratta,
Sailesh Kottapalli, and Sujal Vora. A 45 nm 8-core
enterprise Xeon processor. IEEE Journal of Solid-State
Circuits, 45(1):7–14, 2010.
[57] Babak Salamat, Todd Jackson, Andreas Gal, and
Michael Franz. Orchestra: intrusion detection using
parallel execution and monitoring of program variants
in user-space. In Proceedings of the 4th ACM European
conference on Computer systems, pages 33–46. ACM,
2009.
[58] Salamat, Babak and Gal, Andreas and Franz, Michael.
Reverse stack execution in a multi-variant execution
environment. In Workshop on Compiler and Architec-
tural Techniques for Application Reliability and Secu-
rity, pages 1–7, 2008.
[59] Hovav Shacham, Matthew Page, Ben Pfaff, Eu-Jin Goh,
Nagendra Modadugu, and Dan Boneh. On the Effective-
ness of Address-space Randomization. In Proceedings
of the 11th ACM Conference on Computer and Commu-
nications Security, CCS ’04, pages 298–307, 2004.
[60] Kevin Z Snow, Fabian Monrose, Lucas Davi, Alexandra
Dmitrienko, Christopher Liebchen, and Ahmad-Reza
Sadeghi. Just-in-time Code Reuse: On the Effectiveness
of Fine-grained Address Space Layout Randomization.
In Security and Privacy (SP), 2013 IEEE Symposium
on, pages 574–588. IEEE, 2013.
[61] Avinash Sodani, Roger Gramunt, Jesus Corbal, Ho-Seop
Kim, Krishna Vinod, Sundaram Chinthamani, Steven
Hutsell, Rajat Agarwal, and Yen-Chen Liu. Knights
landing: Second-generation Intel Xeon Phi. IEEE micro,
36(2):34–46, 2016.
[62] Richard Ta-Min, Lionel Litty, and David Lie. Splitting
interfaces: Making trust between applications and op-
In Proceedings of the
erating systems conﬁgurable.
7th Symposium on Operating Systems Design and Im-
plementation, OSDI ’06, pages 279–292, Berkeley, CA,
USA, 2006. USENIX Association.
[63] PaX Team. PaX Address Space Layout Randomization
(ASLR), 2003.
[64] Marvell Technology. Liquidio ii 10/25gbe Adapter fam-
ily, 2019. https://bit.ly/2H7NWLk.
[67] Reduce TCO with Arm Based SmartNICs. https:
//community.arm.com/developer/ip-products/
processors/b/processors-ip-blog/posts/
reduce-tco-with-arm-based-smartnics.
[68] High-Performance Programmable SmartNICs. https:
//www.mellanox.com/products/smartnic/.
[69] Ashish Venkat, Harsha Basavaraj, and Dean Tullsen.
Composite-isa cores: Enabling multi-isa heterogeneity
In 25th IEEE International Sym-
using a single isa.
posium on High Performance Computer Architecture.
IEEE, February 2019.
[70] Ashish Venkat, Sriskanda
Shamasunder, Hovav
Shacham, and Dean M Tullsen. Hipstr: Heterogeneous-
In ACM SIGARCH
isa program state relocation.
Computer Architecture News, volume 44, pages
727–741. ACM, 2016.
[71] Ashish Venkat and Dean M Tullsen. Harnessing isa
diversity: Design of a heterogeneous-isa chip multipro-
cessor. ACM SIGARCH Computer Architecture News,
42(3):121–132, 2014.
[72] Stijn Volckaert, Bart Coppens, and Bjorn De Sutter.
Cloning your gadgets: Complete rop attack immunity
with multi-variant execution. IEEE Transactions on De-
pendable and Secure Computing, 13(4):437–450, 2016.
[73] Alexios Voulimeneas, Dokyung Song, Fabian Parzefall,
Yeoul Na, Per Larsen, Michael Franz, and Stijn Volck-
aert. Dmon: A distributed heterogeneous n-variant sys-
tem. arXiv preprint arXiv:1903.03643, 2019.
[74] w00d. Analysis of nginx 1.3.9/1.4.0 stack buffer
overﬂow and x64 exploitation (CVE-2013-2028)).
https://www.vnsecurity.net/research/2013/
05/21/analysis-of-nginx-cve-2013-2028.html.
[75] Xiaoguang Wang, Yong Qi, Zhi Wang, Yue Chen, and
Yajin Zhou. Design and Implementation of SecPod, A
Framework for Virtualization-Based Security Systems.
IEEE Transactions on Dependable and Secure Comput-
ing, 16(1):44–57, 2019.
[76] Xiaoguang Wang, SengMing Yeoh, Robert Lyerly, Sang-
Hoon Kim, and Binoy Ravindran. A Framework to
Secure Applications with ISA Heterogeneity. In The 9th
Workshop on Systems for Multi-core and Heterogeneous
Architectures (SFMA), 2019.
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    441
[77] Xiaoguang Wang, SengMing Yeoh, Pierre Olivier, and
Binoy Ravindran. Secure and efﬁcient in-process mon-
In Pro-
itor (and library) protection with intel mpk.
ceedings of the 13th European Workshop on Systems
Security, EuroSec ’20, page 7–12, New York, NY, USA,
2020. Association for Computing Machinery.
[81] David Williams-King, Graham Gobieski, Kent Williams-
King, James P Blake, Xinhao Yuan, Patrick Colp,
Michelle Zheng, Vasileios P Kemerlis, Junfeng Yang,
and William Aiello. Shufﬂer: Fast and Deployable Con-
tinuous Code Re-Randomization. In OSDI, pages 367–
382, 2016.
[78] Richard Wartell, Vishwath Mohan, Kevin W. Hamlen,
and Zhiqiang Lin. Binary stirring: Self-randomizing
instruction addresses of legacy x86 binary code.
In
Proceedings of the 2012 ACM Conference on Computer
and Communications Security, CCS ’12, 2012.
[79] David Wentzlaff and Anant Agarwal. Factored operating
systems (fos): The case for a scalable operating system
for multicores. SIGOPS Oper. Syst. Rev., 43(2):76–85,
April 2009.
[80] Wikipedia. MSI Protocol. https://en.wikipedia.
org/wiki/MSI_protocol, Accessed: 2020-07-08.
[82] Yuval Yarom and Katrina Falkner. FLUSH+ RELOAD:
A High Resolution, Low Noise, L3 Cache Side-Channel
In USENIX Security Symposium, volume 1,
Attack.
pages 22–25, 2014.
[83] Sebastian Österlund, Koen Koning, Pierre Olivier, An-
tonio Barbalace, Herbert Bos, and Cristiano Giuffrida.
kMVX: Detecting Kernel Information Leaks with Multi-
variant Execution. In ASPLOS, April 2019.
442    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association