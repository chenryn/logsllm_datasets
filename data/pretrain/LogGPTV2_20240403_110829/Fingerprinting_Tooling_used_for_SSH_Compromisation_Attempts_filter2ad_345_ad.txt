ferent password lists appear across 564 different hosts. This
is due to the fact that attackers in this cluster use random or
pseudo randomly generated passwords in combination with
22 ﬁxed credential tuples. The generated passwords are all
10 characters long consisting of letters and numbers. Next to
randomization, each host only performs a limited amount of
login credentials, 80% (463 out of 564 IPs) use less than 60
unique login credentials. Another indicator of randomization
is the low overlap between passwords, 6,592 of the 10,318
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 69Type
Banner
Kex
Cluster
IP count
# cred. lists
High credential / tool correlation
Popular tool
Diverse credential lists
SSH-2.0-
OpenSSH_7.4p1
Raspbian-
10+deb9u3
0df0d56bb50
c6b2426d8d4
0234bf1826
6
684
9
SSH-2.0-
OpenSSH_7.4p1
Raspbian-
10+deb9u4
0df0d56bb50
c6b2426d8d4
0234bf1826
7
1138
5
SSH-2.0-
libssh2
_1.8.1_DEV
1616c6d18e8
45e7a01168a
44591f7a35
8
85
7
SSH-2.0-
libssh2_1.7.0
SSH-2.0-
libssh2_1.8.0
SSH-2.0-Go
SSH-2.0-Go
SSH-2.0-
libssh-0.6.3
a7a87fbe867
74c2e40cc4a
7ea2ab1b3c
4
6473
2688
a7a87fbe867
74c2e40cc4a
7ea2ab1b3c
5
86805
635
c39f4cec145
ee3d50fb590
595143b9d5
1
564
557
72d744cee7c
48197c1b569
73e8600140
2
208
111
51cba571255
23ce4b9db67
714a90bf6e
3
4479
4438
Credential list
Top 1 list
Top 2 list
Top 3 list
Top 4 list
Top 5 list
672
2
2
2
2
1127
6
3
1
1
79
1
1
1
1
3602
16
16
13
10
64140
6024
4488
4347
2832
3
2
2
2
2
65
11
7
5
3
18
3
3
3
2
login credentials are used by only one IP address. The pass-
word randomization is conﬁrmed by a mean Jaccard index of
0.4 of the credential lists used in the cluster.
While randomization of credentials would make it challeng-
ing for a password-based clustering algorithm to detect simi-
larly acting groups, the same will hold true for brute forcers
that rely on a very long lists of candidate credentials from
which username/password combinations are picked. This will
dilute possible linkage from the perspective of common cre-
dentials, however a clustering based on the ﬁngerprint will
ﬁnd these relationships.
In this section we have shown that clustering based on
SSH banners and key exchange algorithms can ﬁnd differ-
ent types of clusters. The proposed method is able to ﬁnd
groups using extensive password lists or random password,
whereas password-based solutions would struggle. However,
password-based solutions can provide better clustering perfor-
mance for popular tools having multiple credentials lists such
as cluster 5, hence a combination of both a ﬁngerprint-based
and password-based approach promises to provide more, and
complementary ﬁndings.
7 Conclusion
In this work, we have described a method for ﬁngerprinting
tools for SSH brute forcing based on version strings and ad-
vertised algorithms. As this method distinguishes tools based
on the data exchanged during the key initialization, we are
able to detect tools prior to even entering the session authenti-
cation, and can deploy the mechanism transparently without
any changes necessary to an existing enterprise infrastructure.
We have deployed the ﬁngerprinting method over 4,500
honeypots for a period of one month, and from 35 million
login attempts been able to detect 49 different ﬁngerprints.
The results indicate that different tools are used in different
ways, indicating that attackers customize, or develop their
own tools. Looking at the behavior of different tools, we were
able to identify clear timing patterns originating from different
tools, while based on timing patterns we can detect distributed
brute forcing campaigns. By ﬁngerprinting the tools used in
a campaign, we are able to track and analyze the campaign
over time. Additionally password analysis of detected clusters
allowed us to identify different brute forcing methods. Both
assessments contributed in providing insights into the tactics,
techniques and procedures of the attackers.
Future Work
The work presented in this paper was conducted from the
angle of cyber threat intelligence, with the aim of augmenting
the portfolio of methods to ﬁngerprint adversarial tooling and
gather insights into their activities and behavior. This study
led to a variety of different ﬁngerprints, some of which could
be traced back to speciﬁc brute-forcing tools. In principle,
the contribution of this method could however be wider, and
potentially be suitable as an additional detection rule within
the context of intrusion detection systems. To evaluate its
merit for such active threat detection and prevention, further
research is however needed to evaluate its efﬁcacy, which has
not been done within the scope of this study.
References
[1] Aris Adamantiadis, Andreas Schneider, Nick Zitzmann,
Norbert Kiesel, and Jean-Philippe Garcia Ballester. lib-
ssh. https://www.libssh.org/.
[2] Timothy Barron and Nick Nikiforakis. Picky attackers:
Quantifying the role of system properties on intruder
behavior. In Annual Computer Security Applications
Conference, 2017.
[3] David J. Bianco. The pyramid of pain, 2013.
70          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Association[4] Zakir Durumeric, Zane Ma, Drew Springall, Richard
Barnes, Nick Sullivan, Elie Bursztein, Michael Bailey,
J. Alex Halderman, and Vern Paxson. The security im-
In The Network and Dis-
pact of https interception.
tributed System Security Symposium, 2017.
[5] Vincent Ghiette, Norbert Blenn, and Christian Doerr.
Remote identiﬁcation of port scan toolchains. In IFIP
International Conference on New Technologies, Mobility
and Security, 2016.
[6] Vincent Ghiette and Christian Doerr. How media re-
ports trigger copycats: An analysis of the brewing of
the largest packet storm to date. In ACM SIGCOMM
Workshop on Trafﬁc Measurements for Cybersecurity
(WTMC), 2018.
[7] Laurens Hellemons, Luuk Hendriks, Rick Hofstede,
Anna Sperotto, Ramin Sadre, and Aiko Pras. Sshcure:
a ﬂow-based ssh intrusion detection system. In Confer-
ence on Autonomous Infrastructure, Management and
Security, 2012.
[8] Marc Heuse, David Maciejak, and Jan Dlabal. Hydra.
https://github.com/vanhauser-thc/thc-hydra.
[9] Martin Husák, Milan ˇCermák, Tomáš Jirsík, and Pavel
ˇCeleda. Https trafﬁc analysis and client identiﬁcation
using passive ssl/tls ﬁngerprinting. The European As-
sociation for Signal Processing Journal on Information
Security, 2016.
[10] Mobin Javed and Vern Paxson. Detecting stealthy, dis-
In ACM Special Interest
tributed ssh brute-forcing.
Group on Security, Audit and Control Conference on
Computer & Communications Security, 2013.
[11] Maciej Korczy´nski and Andrzej Duda. Markov chain
ﬁngerprinting to classify encrypted trafﬁc. In IEEE In-
ternational Conference on Computer Communications,
2014.
[12] Gordon Lyon and Fotios Chantzis. Ncrack. https:
//nmap.org/ncrack/.
[13] Joe Mondloch. Medusa. http://foofus.net/goons/
jmk/medusa/medusa.html.
[14] Maryam M Najafabadi, Taghi M Khoshgoftaar, Clifford
Kemp, Naeem Seliya, and Richard Zuech. Machine
learning for detecting brute force attacks at the network
level. In International Conference on Bioinformatics
and Bioengineering, 2014.
[15] Vincent Nicomette, Mohamed Kaâniche, Eric Alata, and
Matthieu Herrb. Set-up and deployment of a high-
interaction honeypot: experiment and lessons learned.
Journal in Computer Virology, 2011.
[16] Daniel Ramsbrock, Robin Berthier, and Michel Cukier.
Proﬁling attacker behavior following ssh compromises.
In IEEE/IFIP International Conference on Dependable
Systems and Networks, 2007.
[17] Daniel Stenberg, Marc Hörsken, Viktor Szakats, and
Will Cosgrove. libssh2. https://www.libssh2.org/.
[18] Qixiang Sun, Daniel R Simon, Yi-Min Wang, Wilf Rus-
sell, Venkata N Padmanabhan, and Lili Qiu. Statistical
identiﬁcation of encrypted web browsing trafﬁc.
In
IEEE Symposium on Security and Privacy, 2002.
[19] Alexander Vetterl and Richard Clayton. Bitter har-
vest: Systematically ﬁngerprinting low- and medium-
interaction honeypots at internet scale. In USENIX Work-
shop on Offensive Technologies, 2018.
[20] T. Ylonen and C. Lonvick. The secure shell (ssh) trans-
port layer protocol. Technical report, Internet Engineer-
ing Task Force, 2006.
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 71