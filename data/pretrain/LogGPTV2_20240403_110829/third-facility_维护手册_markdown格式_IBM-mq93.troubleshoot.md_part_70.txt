### Tracing Configuration for IBM MQ Managed File Transfer

#### Trace Properties
- **trace=trace specification**: This property determines the internal classes and packages that are to be traced. Unless otherwise specified by your IBM Support representative, set this property to `com.ibm.wmqfte=all`.
- **traceFiles=number of trace files to use**: This property specifies the number of trace files to be used.
- **traceSize=size of each trace file, in MB**: This property sets the size of each trace file in megabytes.

The `traceFiles` and `traceSize` properties control the amount of trace data collected. To collect as much trace data as possible, set these properties to large values. For example, to collect 1GB of wrapping trace using the trace specification `com.ibm.wmqfte=all`, add the following lines to the `logger.properties` file:

```properties
trace=com.ibm.wmqfte=all
traceFiles=5
traceSize=200
```

This configuration will result in the logger writing trace data to a maximum of 5 files, each with a size of 200MB.

For more information on these logger properties, refer to the [MFT logger.properties file documentation](#).

#### Procedure for Collecting Trace Data
1. **Stop the Logger**:
   - Use the `fteStopLogger` command to stop the logger that needs to be traced.

2. **Start the Logger**:
   - Run the `fteStartLogger` command to start the logger.

3. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

4. **Stop the Logger**:
   - Stop the logger again using the `fteStopLogger` command.

5. **Edit the logger.properties File**:
   - Remove the entries for the `trace`, `traceFiles`, and `traceSize` properties that you added in step 2. This ensures that trace is not enabled the next time you restart the logger.

#### Results
- The resultant trace files are written to the `MQ_DATA_PATH/mqft/logs/coordination_qmgr_name/loggers/logger_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the logger.

### Collecting Managed File Transfer Standalone Logger Trace Dynamically

The `fteSetLoggerTraceLevel` command allows you to collect trace data from a running logger, which can be useful if the logger cannot be stopped.

#### Procedure
1. **Enable Trace**:
   - Run the following command to enable trace for the logger:
     ```sh
     fteSetLoggerTraceLevel -traceLogger com.ibm.wmqfte=all logger_name
     ```

2. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

3. **Disable Trace**:
   - Run the following command to disable trace for the logger:
     ```sh
     fteSetLoggerTraceLevel -traceLogger =off logger_name
     ```

4. **Reduce Trace Data (Optional)**:
   - If the logger is busy and the trace files wrap quickly, follow these steps to reduce the amount of trace data:
     1. Schedule some time to stop the logger.
     2. Locate the `logger.properties` file for the logger that needs to be traced. The file can be found in the `MQ_DATA_PATH/mqft/config/coordination_qmgr_name/loggers/logger_name` directory.
     3. Edit the file and add the following properties:
        ```properties
        traceFiles=number_of_trace_files_to_use
        traceSize=size_of_each_trace_file_in_MB
        ```
     4. Stop the logger using the `fteStopLogger` command.
     5. Start the logger using the `fteStartLogger` command.
     6. Enable trace for the logger:
        ```sh
        fteSetLoggerTraceLevel -traceLogger com.ibm.wmqfte=all logger_name
        ```
     7. Reproduce the issue.
     8. Disable trace for the logger:
        ```sh
        fteSetLoggerTraceLevel -traceLogger =off logger_name
        ```

#### Results
- The resultant trace files are written to the `MQ_DATA_PATH/mqft/logs/coordination_qmgr_name/loggers/logger_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the logger.

### Tracing Managed File Transfer for z/OS Resources

The trace facility in Managed File Transfer for z/OS helps IBM Support diagnose problems and issues. You can trace various resources, including agents, commands, and standalone database loggers.

#### Procedure
- **To trace a Managed File Transfer agent on z/OS**, see [Tracing Managed File Transfer for z/OS agents](#).
- **To trace a command**, see [Tracing Managed File Transfer for z/OS commands](#).
- **To trace a Managed File Transfer stand-alone database logger on z/OS**, see [Tracing Managed File Transfer for z/OS standalone database loggers](#).

#### Related Tasks
- [Collecting troubleshooting information for IBM Support](#)

### Tracing Managed File Transfer for z/OS Agents

The trace facility in Managed File Transfer for z/OS helps IBM Support diagnose problems and issues. Various commands and properties control the behavior of this facility.

#### Procedure
- **If it is possible to stop an agent for a short period of time**, collect a trace of the agent from startup. See [Collecting a Managed File Transfer for z/OS agent trace from startup](#).
- **If it is not possible to stop an agent**, collect a trace dynamically using the `fteSetAgentTraceLevel` command. See [Collecting a Managed File Transfer for z/OS agent trace dynamically](#).

### Collecting a Managed File Transfer for z/OS Agent Trace from Startup

Where it is possible to stop an agent for a short period of time, you should collect IBM MQ Managed File Transfer agent trace from startup.

#### Procedure
- **If using z/OS UNIX**, see [Collecting an agent trace from startup using z/OS UNIX](#).
- **If using JCL**, see [Collecting an agent trace from startup using JCL](#).

### Collecting an Agent Trace from Startup Using z/OS UNIX

To collect a trace of a Managed File Transfer for z/OS agent that is being administered using z/OS UNIX System Services (z/OS UNIX) from startup, you need to set various properties in the `agent.properties` file for that agent before it is started.

#### Procedure
1. **Locate the agent.properties File**:
   - The `agent.properties` file can be found in the `BFG_DATA/mqft/config/coordination_qmgr_name/agents/agent_name` directory.

2. **Edit the agent.properties File**:
   - Add the following properties:
     ```properties
     trace=com.ibm.wmqfte=all
     traceFiles=number_of_trace_files_to_use
     traceSize=size_of_each_trace_file_in_MB
     ```
   - For example, to collect 1GB of wrapping trace:
     ```properties
     trace=com.ibm.wmqfte=all
     traceFiles=5
     traceSize=200
     ```

3. **Stop the Agent**:
   - Use the `fteStopAgent` command to stop the agent.

4. **Start the Agent**:
   - Run the `fteStartAgent` command to start the agent.

5. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

6. **Stop the Agent**:
   - Stop the agent again using the `fteStopAgent` command.

7. **Edit the agent.properties File**:
   - Remove the entries for the `trace`, `traceFiles`, and `traceSize` properties that you added in step 2.

#### Results
- The resultant trace files are written to the `BFG_DATA/mqft/logs/coordination_qmgr_name/agents/agent_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the agent.

### Collecting an Agent Trace from Startup Using JCL

To collect a trace of a Managed File Transfer for z/OS agent that is being administered using JCL from startup, you need to set various properties in the `agent.properties` file for that agent before it is started.

#### Procedure
1. **Locate the agent.properties File**:
   - The `agent.properties` file can be found in the `BFG_DATA/mqft/config/coordination_qmgr_name/agents/agent_name` directory.

2. **Edit the agent.properties File**:
   - Add the following properties:
     ```properties
     trace=com.ibm.wmqfte=all
     traceFiles=number_of_trace_files_to_use
     traceSize=size_of_each_trace_file_in_MB
     ```
   - For example, to collect 1GB of wrapping trace:
     ```properties
     trace=com.ibm.wmqfte=all
     traceFiles=5
     traceSize=200
     ```

3. **Locate the Data Set Containing the JCL**:
   - Find the data set containing the JCL for the agent that needs to be traced.

4. **Submit the BFGAGSP Member**:
   - Submit the `BFGAGSP` member within the data set to stop the agent.

5. **Restart the Agent**:
   - Restart the agent by submitting the `BFGAGST` member in the data set.

6. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

7. **Submit the BFGAGSP Member Again**:
   - Submit the `BFGAGSP` member in the data set to stop the agent again.

8. **Edit the agent.properties File**:
   - Remove the entries for the `trace`, `traceFiles`, and `traceSize` properties that you added in step 2.

#### Results
- The resultant trace files are written to the `BFG_DATA/mqft/logs/coordination_qmgr_name/agents/agent_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the agent.

### Collecting a Managed File Transfer for z/OS Agent Trace Dynamically

Where it is not possible to stop an agent for a short period of time, you should collect Managed File Transfer for z/OS agent trace dynamically.

#### Procedure
- **If using z/OS UNIX**, see [Collecting an agent trace dynamically using z/OS UNIX](#).
- **If using JCL**, see [Collecting an agent trace dynamically using JCL](#).

### Collecting an Agent Trace Dynamically Using z/OS UNIX

Under z/OS UNIX System Services (z/OS UNIX), you can use the `fteSetAgentTraceLevel` command to collect trace from a running agent. This can be very useful if IBM Support need to see a trace from an agent that cannot be stopped.

#### Procedure
1. **Enable Trace**:
   - Run the following command to enable trace for the agent:
     ```sh
     fteSetAgentTraceLevel -traceAgent com.ibm.wmqfte=all agent_name
     ```

2. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

3. **Disable Trace**:
   - Run the following command to disable trace for the agent:
     ```sh
     fteSetAgentTraceLevel -traceAgent =off agent_name
     ```

4. **Reduce Trace Data (Optional)**:
   - If the agent is busy and the trace files wrap quickly, follow these steps to reduce the amount of trace data:
     1. Schedule some time to stop the agent.
     2. Locate the `agent.properties` file for the agent that needs to be traced. The file can be found in the `BFG_DATA/mqft/config/coordination_qmgr_name/agents/agent_name` directory.
     3. Edit the file and add the following properties:
        ```properties
        traceFiles=number_of_trace_files_to_use
        traceSize=size_of_each_trace_file_in_MB
        ```
     4. Stop the agent using the `fteStopAgent` command.
     5. Start the agent using the `fteStartAgent` command.
     6. Enable trace for the agent:
        ```sh
        fteSetAgentTraceLevel -traceAgent com.ibm.wmqfte=all agent_name
        ```
     7. Reproduce the issue.
     8. Disable trace for the agent:
        ```sh
        fteSetAgentTraceLevel -traceAgent =off agent_name
        ```

#### Results
- The resultant trace files are written to the `BFG_DATA/mqft/logs/coordination_qmgr_name/agents/agent_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the agent.

### Collecting an Agent Trace Dynamically Using JCL

You can use the `BFGAGTC` member within the data set containing the JCL for the agent that needs to be traced to collect trace from a running Managed File Transfer for z/OS agent. This can be very useful if IBM Support need to see a trace from an agent that cannot be stopped.

#### Procedure
1. **Locate the Data Set Containing the JCL**:
   - Find the data set containing the JCL for the agent that needs to be traced.

2. **Edit the BFGAGTC Member**:
   - Locate the line that contains the text `-traceAgent`. The text following this contains the list of internal classes and packages that are to be traced. By default, this list is set to `com.ibm.wmqfte=all`. Unless otherwise specified by your IBM Support representative, leave this value as is.

3. **Submit the BFGAGTC Member**:
   - Submit the `BFGAGTC` member to enable trace.

4. **Reproduce the Issue**:
   - Reproduce the issue to generate the trace data.

5. **Edit the BFGAGTC Member Again**:
   - Set the `-traceAgent` parameter to `=off`:
     ```sh
     -traceAgent =off
     ```

6. **Submit the BFGAGTC Member Again**:
   - Submit the `BFGAGTC` member again to turn trace off.

#### Results
- The resultant trace files are written to the `BFG_DATA/mqft/logs/coordination_qmgr_name/agents/agent_name/logs/trace%PID%` directory, where `%PID%` is the process identifier for the agent.