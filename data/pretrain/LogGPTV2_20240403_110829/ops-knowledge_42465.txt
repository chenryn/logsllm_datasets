I understand that you are attempting to create a Khan Academy (KA) clone using Google App Engine (GAE). You have downloaded the offline version of KA for Mac from [here](http://code.google.com/p/khanacademy/downloads/list) and set it up with the Google App Engine Launcher, which can be found [here](https://developers.google.com/appengine/). Since KA was developed using Python 2.5, you are running your setup through the Python 2.5 interpreter included in the KA download. Additionally, you've added these flags to the app configuration to replicate the functionality of the included Run file:

```
--datastore_path=/Users/Tadas/KhanAcademy/code/datastore --use_sqlite
```

With this setup, the Google App Engine Launcher (GAELauncher) is able to run the application locally without any issues. However, when you attempt to deploy the application to your Google appspot domain by changing the `application: khan-academy` line in the `app.yaml` file to a new name, the local version runs but lacks all content (e.g., exercises, videos, etc.), rendering the site largely non-functional. Furthermore, if you try to deploy the app in this state, you receive a 500 Server Error when accessing the appspot website.

The issue you are encountering is likely due to the fact that your 'clone' application does not have access to Khan Academy's original AppEngine datastore, which means there is no pre-existing content to display. Even if you use all of the code from their application, you will still need to generate and import your own content into the datastore.

If you plan to 'clone' their content as well, you will need to perform a significant amount of manual work to migrate the data into your application's datastore. This may involve writing scripts to scrape and format the content, or finding another way to import the necessary data. 

To summarize, the steps you might consider are:
1. **Data Migration**: Develop a process to import the required content into your application's datastore.
2. **Content Generation**: If cloning the content, ensure you have the rights and tools to do so, and prepare to manually or programmatically transfer the data.
3. **Testing**: Thoroughly test the application locally after making these changes to ensure that the content is properly displayed and the application functions as expected.
4. **Deployment**: Once everything is working correctly on your local environment, proceed with deploying the application to your appspot domain.

If you need further assistance with the specific steps or technical details, feel free to ask!