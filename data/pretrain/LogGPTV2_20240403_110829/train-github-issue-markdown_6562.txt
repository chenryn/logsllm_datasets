The QR decomposition works properly when used alone. However, after I plot
with a `.:` linestyle using `pyplot`, the result of QR decomposition becomes
`nan`. This bug happens under the following condition.
  * The matrix shape is larger than 9x8. A 8x7 matrix works properly on my computer.
  * Plot with `.:` or `.--` linestyle. The linestyle `.-` will not cause a problem.
  * Windows platform. There is no such bug on MacOS.
### Reproducing code example:
    import numpy as np
    import matplotlib.pyplot as plt
    def testQR(A, bug):
        if bug:
            plt.plot([0, 1], [0, 1], ".:")
        else:
            plt.plot([0, 1], [0, 1], ".-")
        Q, _ = np.linalg.qr(A)
        print("==========================")
        print("Matrix shape:        {}x{}".format(A.shape[0], A.shape[1]))
        print("Linestyle of pyplot: {}".format(".:" if bug else ".-"))
        print("First row of Q:      {}".format(Q[0]))
    M_large = np.eye(9, 8)
    M_small = np.eye(8, 7)
    testQR(M_large, bug=True)
    testQR(M_large, bug=False)
    testQR(M_small, bug=True)
    testQR(M_small, bug=False)
The result of the code above on my computer is
    ==========================
    Matrix shape:        9x8
    Linestyle of pyplot: .:
    First row of Q:      [nan nan nan nan nan nan nan nan]
    ==========================
    Matrix shape:        9x8
    Linestyle of pyplot: .-
    First row of Q:      [1. 0. 0. 0. 0. 0. 0. 0.]
    ==========================
    Matrix shape:        8x7
    Linestyle of pyplot: .:
    First row of Q:      [1. 0. 0. 0. 0. 0. 0.]
    ==========================
    Matrix shape:        8x7
    Linestyle of pyplot: .-
    First row of Q:      [1. 0. 0. 0. 0. 0. 0.]
### NumPy/Python version information:
numpy version: 1.18.1  
matplotlib version: 3.1.2  
python version: 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC
v.1916 64 bit (AMD64)]