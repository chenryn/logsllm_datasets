**Title: The Most Secure Browser? Pwning Chrome from 2016 to 2019**

Browser security is a perennial topic in the field of security research. Thanks to robust design and sustained efforts, browsers have become increasingly secure over time. However, even the most secure browsers can be vulnerable. The last time Chrome was successfully compromised at the Pwn2Own competition was during the Mobile Pwn2Own 2016 event, where our team, Keen Security Lab of Tencent, exploited the Chrome browser on a Nexus 6P device.

This year, we are excited to share an in-depth look at our research into Chrome's security. One of the primary targets for browser attackers is the JavaScript engine. Researchers have developed innovative methods, such as CodeAlchemist and Fuzzili, to exploit these engines. Our approach, Semantic Equivalent Transform (SET), stands out for several reasons:

- **Simplicity**: SET is inherently resistant to grammar and semantic errors, eliminating the need for extensive analysis code.
- **Effectiveness**: Over the past three years, we have identified eight Pwn2Own-eligible v8 bugs using SET.
- **Versatility**: SET can be applied in various scenarios, making it a flexible tool for security research.

We will also discuss novel exploitation techniques that we employed in the Pwn2Own competition. For example, while many researchers recognize Just-In-Time (JIT) compilation as a prime target for bug hunting, fewer realize its potential for exploitation. We will demonstrate how we used common JIT fragments to exploit low-quality bugs. Additionally, we will present other interesting cases and our latest findings.

Finally, we will share our recent research on sandbox bypass. Since 2016, we have successfully compromised Chrome three times. We will provide detailed insights into the Inter-Process Communication (IPC) bugs we discovered and demonstrate how we exploited Chrome in March 2019.

To our knowledge, this presentation will be the first to publicly discuss a comprehensive methodology for compromising Chrome, covering both v8 and sandbox vulnerabilities.