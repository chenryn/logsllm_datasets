.RE
.sp
..
'\"	# SO - start of list of standard options
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
'\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..
'\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
'\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
'\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.de UL
\\$1\l'|0\(ul'\\$2
..
.TH exec 3tcl 7.6 Tcl "Tcl Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
exec \- 调用子进程
.SH "总览 SYNOPSIS"
\fBexec \fR?\fIswitches\fR? \fIarg \fR?\fIarg ...\fR?
.BE
.SH "描述 DESCRIPTION"
.PP
这个命令把它的参数作为对要执行的一个或多个子进程的指定来对待。参数接受标准的 shell 管道的格式(form)，即每个 \fIarg\fR 都变成某个命令的一个字，并且每个不同的命令都变成一个子进程。
.PP
如果给 \fBexec\fR的初始的参数以 \fB-\fR 开始，则它们被作为命令行开关而不是管道指定的一部分来对待。当前支持下列开关:   
.TP 13
\fB\-keepnewline\fR
在管道的输出中保持尾随的换行符。通常要删除尾随的换行符。          
.TP 13
\fB\-\|\-\fR
标志开关(部分)的结束。此后的参数即使以\fB-\fR开头仍被作为第一个 \fIarg\fR 来对待。        
.PP
如果一个 \fIarg\fR  (或成对的 \fIarg\fR)有象下面描述的格式个某一种，则\fBexec\fR  用它来控制子进程间的输入和输出流(flow)。将不把这样的参数传递给子进程。在象“  和 >& 这样的格式。     
.TP 15
\0\fIfileName\fR
最后的命令的标准输出被重定向到叫 \fIfileName\fR\fI \fR的文件中，覆盖它以前的内容。    
.TP 15
2>\0\fIfileName\fR
把管道中所有命令的标准错误输出重定向到叫 \fIfileName\fR 的文件中，覆盖它以前的内容。          
.TP 15
>&\0\fIfileName\fR
最后的命令的标准输出和所有命令的标准错误输出都被重定向到叫 \fIfileName\fR的文件中，覆盖它以前的内容。         
.TP 15
>>\0\fIfileName\fR
最后的命令的标准输出被重定向到叫 \fIfileName\fR 的文件中，对它进行添加而不是覆盖它。      
.TP 15
2>>\0\fIfileName\fR
在管道中的所有的命令的标准错误输出都被重定向到叫 \fIfileName\fR的文件中，对它进行添加而不是覆盖它。       
.TP 15
>>&\0\fIfileName\fR
最后的命令的标准输出和所有命令的标准错误输出被重定向到叫 \fIfileName\fR 的文件中，对它进行添加而不是覆盖它。         
.TP 15
>@\0\fIfileId\fR
\fIFileId\fR  必须是一个打开了的文件的标识符，比如是从以前的 \fBopen\fR调用的返回值。最后的命令的标准输出被重定向到 \fIfileId\fR(指定)的文件中。文件必须用读模式来打开。          
.TP 15
2>@\0\fIfileId\fR
\fIFileId\fR 必须是一个打开了的文件的标识符，比如是从以前的 \fBopen\fR调用的返回值。在管道中的所有命令的标准错误输出都被重定向到 \fIfileId\fR(指定)的文件中。文件必须用写模式来打开。          
.TP 15
>&@\0\fIfileId\fR
\fIFileId\fR 必须是一个打开了的文件的标识符，比如是从以前的 \fBopen\fR调用的返回值。最后的命令的标准输出和所有命令的标准错误输出被重定向到 \fIfileId\fR(指定)的文件中。文件必须用写模式来打开。          
.PP
如果标准输出没有被重定向，则 \fBexec\fR   命令返回在管道中最后的命令的标准输出。如果在管道中的任何命令不正常退出或被杀死或被挂起，则 \fBexec\fR  将返回一个错误和并且错误信息将包含管道的输出和随后的描述不正常终止的错误信息；\fBerrorCode\fR   变量将包括关于最近所遭遇的不正常终止的额外的信息。如果任何命令写它的标准错误文件而这个标准错误未被重定向，则 \fBexec\fR 将返回一个错误；错误消息将包含管道的标准输出，跟着是关于不正常终止的信息(如果有的话)，随后是标准错误输出。
.PP
如果结果或错误信息的最后的字符是一个换行符，则这个换行符通常被从结果或错误信息中删除。这是与其他 Tcl 返回值相一致的，它们通常不用换行(作为)结束。但是，如果指定了 \fB\-keepnewline\fR则保持尾随的换行符。
.PP
如果标准输入未使用 “ 设备和一个 16位应用程序之间的重定向不总是工作。在从 \fBNUL: \fR重定向时 一些应用程序可能挂起，另一些将得到永无穷尽(infinite)的“0x01”字节流(stream)，而有一些实际上将正确的得到立即的文件结束；这些行为象是依赖于编译到应用程序自身中的某些东西。在到 \fBNUL:\fR的重定向大于或等于4K 时, 一些应用将挂起(hang)。在32位应用程序中不发生上述问题。
.sp
所有 DOS 16位应用程序都是同步运行的。从一个管道到一个 16位 DOS 应用程序的所有标准输入被搜集到一个临时文件中；在这个16位 DOS 应用程序开始执行之前，管道的其他端点(end)必须被关闭。从一个16位 DOS应用程序到一个管道的所有标准输出或错误输出被搜集到一个临时文件中；在临时文件被重定向到管道的下一个阶段之前，这个应用程序必须终止。这源于一个针对 Windows 95在实现管道中的一个缺陷的工作项目，也是标准的 Windows 95 DOS shell  自身处理管道的方式。
.sp
特定的应用程序，象 \fBcommand.com\fR ，不应该交互的执行。不从标准输入读和向标准输出写，而是直接访问控制台窗口的应用程序可能会失败，并挂起Tcl，如果它们自己的私有控制台窗口不可使用甚至可能挂起系统。   
.RE
.TP
\fBMacintosh\fR
在 Macintosh 下 \fBexec\fR  命令未被实现而不存在。   
.TP
\fBUnix\fR\0\0\0\0\0\0\0
 \fBexec\fR  命令是全功能的并象上面描述的那样工作。       
.SH "参见 SEE ALSO"
error(n), open(n)
.SH "关键字 KEYWORDS"
execute, pipeline, redirection, subprocess
.SH "[中文版维护人]"
.B 寒蝉退士
.SH "[中文版最新更新]"
.B 2001/07/11       
.SH "《中国 Linux 论坛 man 手册页翻译计划》:"
.BI http://cmpp.linuxforum.net