### 0.7
- **Error:** Fraction of short chains detected

### 0.4, 0.5, 0.6
- **Hops Allowed:**
  - 2 hops allowed
  - 5 hops allowed
  - 9 hops allowed

### 0.8, 0.9, 1
- **Figure 5:** ROC curves for rejection region S(c) for more than two, five, and nine hops downstream.

### Performance Deterioration with Increasing Hops
- As the number of hops downstream increases, the performance of the simple rejection region based on quan(E, 2α) alone deteriorates. This is particularly evident when testing for more than five or nine hops downstream.

### Variability and Tolerance
- The variability introduced by multiple downstream machines adds significant complexity. As expected, implementing tolerance for a large number of downstream hops is more challenging compared to a small number.
- In practice, a low-tolerance policy that rejects sessions with more than two hops downstream is more useful and realistic.

### 6. Discussion
#### Rejection Region
- The rejection region in Equation 6 classifies an outgoing connection as having too many hops downstream if the 2α(X) value is too small compared to the gaps in set E(X).
- For detecting connections with more than two hops, experiments indicate that using a cut-off parameter \( c = 0.9 \) provides reasonably accurate results with minimal false alarms.

#### Experimental Setup
- Experiments were conducted using a machine on the Stanford University network as the logging machine. While the cut-off parameter \( c = 0.9 \) performed well across a wide range of settings, optimal results may vary depending on specific machine and network properties. Therefore, each deployment should train on its own machines and networks to determine the best cut-off for accuracy and precision.

### 6.1 Accuracy and Precision
- Most intrusion-detection techniques suffer from a high rate of false positives [4]. By narrowing the scope of detection to specific types of attacks, the number of false positives can be significantly reduced [2].
- The problem of connection chains is well-defined and narrow enough to be considered a specific attack. However, earlier techniques [8, 10] for detecting stepping stones often identified many harmless, short chains. Echo-delay comparison specifically addresses these logical false positives and detects only connection chains with many hops downstream.
- On the other hand, echo-delay comparison does not detect the number of upstream hops in a connection chain. From the viewpoint of the recording machine, only the nearest upstream client is known. If the recording machine is a stepping stone in a long connection chain but is only one hop away from the final victim, the session will not trigger any warning. This logical false negative will be addressed in future work.
- Since delayed acknowledgments are sent in both directions, an extension of the current work may prove useful in detecting many hops upstream.

### 6.2 Hacker Intervention
- In the ongoing battle between hackers and intrusion-detection systems, intelligent hackers continually seek new ways to evade detection. Echo-delay comparison and previous approaches [8, 10] are all susceptible to hacker intervention.
- In theory, any intrusion detector relying solely on network logs can be circumvented by carefully manipulating network signals [6].
- The time gap between the client request and the delayed acknowledgment of the nearest server provides an overestimate of the travel time for one hop downstream. Two problems may arise:
  - A fast connection between the client and the nearest server may over-amplify the slow hops downstream, which does not benefit the hacker trying to avoid detection.
  - A slow connection between the client and the nearest server may mask the fast hops downstream. If the detector is used at its optimal settings to detect more than two hops downstream, there is minimal leeway for hiding many hops behind the slow first connection. Hiding many quick connections on machines within close proximity would defeat the purpose of using a connection chain.
- A knowledgeable hacker can manipulate network signals to elude detection, such as delaying and suppressing the delayed-acknowledgment signal and the reply-echo signal. However, because the analysis uses aggregate statistics, targeting a few signals will not thwart the detector. Manipulating many signals simultaneously without adversely affecting the dynamics of the connection chain would be difficult even for a skilled hacker.

### 7. Summary
- Echo-delay comparison monitors an outgoing connection to estimate two important time gaps:
  - The gap between the client request and the server delayed acknowledgment estimates the round-trip travel time between the client and the server.
  - The gap between the client request and the server reply echo estimates how far downstream the final victim is.
- Together, these two time gaps provide a simple test to identify a session whose final victim is many hops downstream.
- Unlike previous approaches for detecting stepping stones, echo-delay comparison works in isolation, without matching for similar sessions on the same connection chain. It also allows benign, short connection chains common in practice. This technique makes use of network signals found in interactive terminal sessions, such as Telnet, rlogin, and secure shell.
- Experiments demonstrate that the technique is effective under a wide range of conditions and performs especially well in identifying sessions with more than two hops downstream.

### Acknowledgments
- This research project was funded in part by the US Department of Justice grant 2000-DT-CX-K001.
- Jeffrey D. Ullman of the Stanford University Computer Science Department introduced the author to the field of intrusion detection and provided invaluable advice throughout the past year.
- Jerome H. Friedman of the Stanford University Statistics Department provided important feedback in several discussions.
- The author is grateful for their help and extends his delayed acknowledgment, long overdue.

### References
1. Stefan Axelsson. "Intrusion Detection Systems: A Survey and Taxonomy." Technical Report 99-15, Department of Computer Engineering, Chalmers University, March 2000.
2. Robert K. Cunningham, et al. "Detecting and Deploying Novel Computer Attacks with Macroscope." Proceedings of the 2000 IEEE Workshop on Information Assurance and Security. US Military Academy, West Point, NY, 6–7 June, 2001.
3. Harold S. Javitz and Alfonso Valdes. "The NIDES Statistical Component: Description and Justification." Technical report, Computer Science Laboratory, SRI International. Menlo Park, California, March 1993.
4. Richard P. Lippmann, et al. "Evaluating Intrusion Detection Systems: The 1998 ARPA Off-Line Intrusion Detection Evaluation." Proceedings of DARPA Information Survivability Conference and Exposition. DISCEX ’00, Jan 25–27, Hilton Head, SC, 2000. http://www.ll.mit.edu/IST/ideval/index.html
5. Peter G. Neumann and Phillip A. Porras. "Experience with EMERALD to Date." 1st USENIX Workshop on Intrusion Detection and Network Monitoring, pages 73-80. Santa Clara, California, USA, April 1999.
6. Thomas H. Ptacek and Timothy H. Newsham. "Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection." Secure Networks, Inc., January 1998. http://www.aciri.org/vern/PtacekNewsham-Evasion-98.ps
7. Martin Roesch. "Snort: Lightweight Intrusion Detection for Networks." 13th Systems Administration Conference (LISA’99), pages 229–238. USENIX Associations, 1999.
8. Stuart Staniford-Chen and L. Todd Heberlein. "Holding Intruders Accountable on the Internet." Proceedings of the 1995 IEEE Symposium on Security and Privacy, pages 39–49. Oakland, CA, May 1995.
9. W. Richard Stevens. TCP/IP Illustrated Volume 1: The Protocols. Addison-Wesley: Reading, Massachusetts, 1994.
10. Yin Zhang and Vern Paxson. "Detecting Stepping Stones." Proceedings of 9th USENIX Security Symposium. August 2000.

### Multiscale Stepping-Stone Detection: Detecting Pairs of Jittered Interactive Streams by Exploiting Maximum Tolerable Delay
**Authors:**
- David L. Donoho, Ana Georgina Flesia, Umesh Shankar, Vern Paxson, Jason Coit, and Stuart Staniford
- Affiliations: Departments of Statistics and Computer Science, Stanford University, University of California at Berkeley, International Computer Science Institute, and Silicon Defense

**Abstract:**
- Computer attackers frequently use compromised hosts as relays to obscure the true origin of their attacks. There is a growing literature on detecting such "stepping stones" by monitoring the access link connecting a site to the Internet. This paper considers evasion techniques where attackers modify packet arrival times or add superfluous packets. We assume a "maximum delay tolerance" for the attacker and show that, for sufficiently long connections, multiscale methods like wavelets can separate short-term behavior (where jittering or chaff masks correlation) from long-term behavior (where correlation remains). This suggests that local timing jitter and added chaff packets are ineffective against appropriate correlation-based detection for long-lived interactive connections.

**Keywords:**
- Network intrusion detection, evasion, stepping stone, interactive session, multiscale methods, wavelets, universal keystroke interarrival distribution.

**Introduction:**
- Attackers use stepping stones to relay attacks through compromised hosts, making it difficult to trace the origin. Traditional traceback methods are complex and time-consuming. An alternative is to install a monitor at the network access point to analyze incoming and outgoing traffic for correlations. This paper focuses on interactive connections and considers evasion techniques such as local timing perturbations and adding extra packets. We show that, for long connections, these evasions can be defeated using multiscale analysis.

**Previous Approaches:**
- Staniford and Heberlein (1995) [7] used character frequency analysis for clear-text Telnet connections.
- Zhang and Paxson (2000) [8] developed an activity-based approach for encrypted SSH connections, focusing on the "on–off" structure of interactive sessions.
- Yoda and Etoh (2000) [11] used average time lag between connections for detection.

**Conclusion:**
- Attackers relying on local timing jitter or added chaff packets for evasion may need to abandon standard interactive protocols like Telnet or SSH for more sophisticated steganographic methods. Our results are primarily asymptotic and require further analysis to determine the effectiveness for shorter connections.