当然此时再次查看wireshark的抓包界面，也可以看到mon0。
接下来进行一些相关的测试。
## 测试目标
###  测试环境一：WPA-PSK/WPA2-PSK模式
该模式下路由配置如下，名称为T35t
密码为t35ttest
####  实验步骤
执行命令# airodump-ng wlan0mon查看周围无线设备，发现测试目标T35t（T35t为该路由器ESSID号），频道11以及其他信息。
过滤语句airodump-ng wlan0mon –bssid 30:FC:68:CA:13:DF -c 11只查看跟该设备相关的无线信号。
可以看到存在设备mac地址为00:00:00:00:00:00（就是那串模糊的，懂不·—·）的设备正在连接该路由器
嗯，接下来使用命令airodump-ng wlan0mon –bssid 30:FC:68:CA:13:DF -c 11 -w
capture_wap将该信号抓取保存为前缀名为capture_wap的文件，执行该条命令界面运行如下：
打开新的命令行界面（注意：之前的命令行界面不要关闭），然后执行命令aireplay-ng -0 1 -a 30:FC:68:CA:13:DF -c
00:00:00:00:00:00 wlan0mon
执行成功后，正常情况下，稍等几秒，原先界面右上角即会出现WPA handshake:
30:FC:68:CA:13:DF，意味着成功抓到握手包，接下来只需字典爆破握手包即可。
执行命令aircrack-ng capture_wap-01.cap，查看捕获握手包数据信息。
执行命令aircrack-ng capture_wap-01.cap -w dictiontry.txt，爆破字典为dictiontry.txt文件。
成功找到密码t35ttest。
####  测试坑点一：
执行命令airodump-ng wlan0mon查看周围无线设备时，如果发现界面右上角存在 fixed channel mon0:
-1字样，那么，建议换成kali虚拟机重新测试吧，原因是因为操作系统内核不兼容。之前尝试ubuntu16.04抓握手包，半天抓不到，网上去找原因，才知道是这里出了问题。
####  测试坑点二：
在进行aireplay-ng -0 1 -a 30:FC:68:CA:13:DF -c 00:00:00:00:00:00
wlan0mon这条命令时，发现了一些问题。首先，该命令是执行Deauth攻击加速破解过程的命令，原理是通过发送Deauth的数据包，将已连接至无线路由器的合法客户端强制断开，此时，客户端就会重新自动重新连接无线路由器，也就是在这个过程中，有机会获得WPA-PSK握手验证的完整数据包。而这条命令中-0参数表示采用Deauth攻击模式，后面紧跟着攻击次数1次，-a参数后跟AP的MAC地址，-c参数后跟客户端的MAC地址，此命令也就表示为，采用Deauth攻击模式，将MAC地址为00:00:00:00:00:00客户端与MAC地址为30:FC:68:CA:13:DFAP之间的通信强制断开1次。其次，在经过几次测试中发现，除各型号安卓机型外，苹果手机在收到Deauth攻击后，重新连接AP的时段中，抓不到相应的握手包，而其他设备，均可抓到握手包。这里排除其他原因，单纯地看,苹果手机好像略高一畴。^……^！
###  测试环境二：WEP模式
配置的AP如下，设置WEP模式下的秘钥为12345
####  实验步骤
同样执行airodump-ng wlan0mon探测周围的设备
由上图可知当前目标AP的工作频道为11，相应地，过滤出当前AP可以清晰看到与当前AP进行连接的其他设备。
执行命令airodump-ng wlan0mon –bssid 30:FC:68:CA:13:DF -c 11
上图可以查看详细的交互设备MAC，模糊处的MAC地址为00:00:00:00:00:00。
接下来抓取IVS数据报文，执行命令airodump-ng –ivs -w capture_wep -c 11 wlan0mon –bssid
30:FC:68:CA:13:DF，该条命令表示只抓取bssid为30:FC:68:CA:13:DF的IVS数据报文，并将其保存至前缀名为capture_wep的文件中。
执行完上条命令后，新开一个命令行界面，执行命令aireplay-ng -3 -b 30:FC:68:CA:13:DF -h
00:00:00:00:00:00 wlan0mon，该命令参数-3
表示采用ArpRequest注入攻击模式，-b后紧跟AP的MAC地址，-h后紧跟客户端MAC地址。ArpRequest注入攻击原理是通过读取交互设备之间的ARP请求报文，并伪造报文再次重发出去，从而刺激AP产生更多的数据包，以供抓取更多的IVS数据包，加快破解速度。在执行该条命令后，查看之前的界面可以发现Data列的数据一直在增加。
然后再新开一个界面，执行命令aircrack-ng capture_wep-01.ivs，Aircrack-ng就会自动进行破解。
成功破解密码12345，耗时大概两分多钟。什么，密码设置的太简单了，那接下来设置个比较难的呗：#fl?2a&*6^g{
按照上面的命令，依旧破解下来，也只是多花了几分钟的时间，这还是除去虚拟机的配置，hhh~
所以如果还是WEP的，赶紧换WPA2吧，亡羊补牢，哪怕还没亡羊。
###  测试环境三：WPS模式
无线路由器PIN码设置为54808782
####  实验步骤
该模式下，可以使用Reaver工具强制爆破PIN码，通过PIN码得到wifi密码。
同样先使用airmon-ng start wlan0进行网卡嗅探
查看到目标AP的SSID即可开始测试，这里依旧与之前的MAC地址相同：30:FC:68:CA:13:DF
执行命令reaver -i wlan0mon -b 30:FC:68:CA:13:DF -p 54808782，稍等一会，即会出现以下界面
可以看到已经破解成功。当然，这是在已知PIN码情况下，进行的测试。在不知PIN码的情况下只能爆破，基本上是个几天几夜，对应的命令为reaver -i
wlan0mon -b 30:FC:68:CA:13:DF -vv。
虽然许多路由器默认关闭WPS，但还是建议大家认真检查下，如果开了QQS，顺手把它关了吧。反正也就是举手之劳，省掉一个安全隐患，何乐不为？
## 结语
以上的种种测试，均是自行配置设备，再自行测试，学术不精，见谅。实践出真知，了解攻击原理，有助于更好部署防御措施。“害群之马者坏人也，非兵也”，自行斟酌，三思后行。