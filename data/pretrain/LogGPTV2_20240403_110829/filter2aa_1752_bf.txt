__attribute__ ((deprecated)) void foo (void) {
/* ... */ }
提程或时的。
– 369 –
 A
GCC 对 C 的扩展
A.10 将函数标记为 used
以的式调。将 used 
以示程上
__attribute__ ((used)) void foo (void) { /* ...
*/ }
出相的出的。
写的调时属性。（
used 时时调时能将
。
A.11 将函数或参数标记为 unused
unused 属性示的或示
相的
void foo (long __attribute__ ((unused)) value)
{ /* ... */ }
属性 -W 或 -Wunused 
的（件程或处理
真的。
A.12 将结构体进行打包（pack）
packed 属性示对或内存以能小的内存空间
存（内存属性的内存对的。属性
或时的。时
的。将的的小内存空间
(1)。
struct __attribute__ ((packed)) foo (void) {
... };
– 370 –
 A
GCC 对 C 的扩展
 char 的 int 的
时将 int 的对 char 的 3 
将 char 的内存。间
的以对进对。的
能的内存满相上的对。
A.13 增加变量的内存对齐量
以对进 GCC 程给的
小对。对进对时 ABI 
的小对小的对。
beard_length进 32 的内存对（的对 32
进 4 对
int beard_length __attribute__ ((aligned (32)))
= 0;
的内存对能件的
内存对更写 C 
对的时。存处理存的以
存时以能。 Linux 内。
小内存对以 GCC 将给的对
设的小内存对的。段
parrot_height 的内存对 GCC 以的
double 
short parrot_height __attribute__ ((aligned))
= 5;
何内存对时间空间的上方式对的
更空间上的（以及的操作能更时
间以调处理内存的以处理内存。
工能的的内存对。 Linux 
相小的的对。时 aligned 的
对设。的对 32 
– 371 –
 A
GCC 对 C 的扩展
的能对 8  8 进对。
A.14 将全局变量置于寄存器中
GCC 程将的存将程的
内处存。 GCC 的存
。程的存的存 ebx
register int *foo asm (”ebx”);
程的存能（function-clobbered
的存能调时进存
能或操作的 ABI 作何的。
的存。的存（
的 ebx  x86 的存。
时将存以的性能提。
的子。将存（virtual stack frame pointer的
存将的处。方的存
（ x86 。存能
处理能程程。能设
能程存设。存的
的。
A.15 分支预测
GCC 程对式的进件
能真。相 GCC 以对进调以
件的性能。 GCC 的。
#define likely(x)
__builtin_expect (!!(x), 1)
#define unlikely(x)
__builtin_expect (!!(x), 0)
程以将式 likely() 或 unlikely() 以
式能真或能真。子示能真（
即能
– 372 –
 A
GCC 对 C 的扩展
int ret;
ret = close (fd);
if (unlikely (ret))
perror (”close”);
对的子示能真
const char *home;
home = getenv (”HOME”);
if (likely (home))
printf (”Your home directory is: %s\n”,
home);
else
fprintf (stderr, ”Environment variable HOME
not set!\n”);
内程的。对
式进能式。晓
对式的（ 99% 的真或的
将能真或能真。的
。
A.16 获取表达式的类型
GCC 提 typeof以给式的。上 typeof
 sizeof() 的理相同。 x 的的
typeof (*x)
以的 y
typeof (*x) y[42];
– 373 –
 A
GCC 对 C 的扩展
typeof 写的以操作的
的即
#define max(a,b) ({
\
typeof (a) _a = (a); \
typeof (b) _b = (b); \
_a > _b ? _a : _b; \
})
A.17 获取类型的内存对齐量
GCC 提__alignof__ 给对的对。对
 ABI 。的提的对
__alignof__  ABI 的对。小对
。 sizeof 相同
__alignof__(int)
上能 4 32  4 
的进对的。。的对
相的小内存对的对。 aligned 属性
小内存对（的内存对
以__alignof__ 。
以
struct ship {
int year_built;
char canons;
int mast_height;
};
段
struct ship my_ship;
– 374 –
 A
GCC 对 C 的扩展
printf (”%d\n”, __alignof__(my_ship.canons));
上对的内存对能 canons  4 
__alignedof__ 式将 1。
A.18 结构体中成员的偏移量
GCC 内以的的
。 offsetof()   ISO C 的。的
实实的操作。 GCC
的扩展更单能更
#define offsetof(type, member)
__builtin_offsetof (type, member)
上调 type  member 的
的（ 0 。
struct rowboat {
char *boat_name;
unsigned int nr_oars;
short length;
};
实的的小以及的对
 32 上对 rowboat boat_name、 nr_oars、 length 调 off-
setof()将 0 4  8。 Linux  offsetof()  GCC 的
程新。
A.19 获取函数返回地址
GCC 提以（或的调的
的
void * __builtin_return_address (unsigned int
level)
– 375 –
 A
GCC 对 C 的扩展
 level 调（call chain的。
0  的      (f0) 的     1  的    (f0) 的 调 
  (f1) 的     2  的  调  f1 的   的    以  
。    的   f0  内    将   f1 的    。   
 能   以  __builtin_return_address   （   
内  noinline        将    作  内    处 理。 
__builtin_return_address 。以调或提。
以展调以实内、工（crash dump util-
ity、调。的。
 0 能的。 0 时
的 0 调。
A.20 在 Case 中使用范围
GCC  case 对单的的。的
的
case low ... high:
switch (val) {
case 1 ... 10:
/* ... */
break;
case 11 ... 20:
/* ... */
break;
default:
/* ... */
}
处理 ASCII 的 case 的时能
case ’A’ ... ’Z’:
– 376 –
 A
GCC 对 C 的扩展
空。空
的时。写
case 4 ... 8:
写
case 4...8:
A.21 void 和函数指针的算术操作
 GCC  void 的以以。
 ISO C 的存 void 的小
小真的内。进 GCC 将
内的小 1 。将 a  1
a++;
/* a void */
 -Wpointer-arith上扩展时 GCC 
。
A.22 让代码变得更美观并有更好的移植性
我们__attribute__ 。更的
提的扩展处理进处理。调
以对我们扩展能的。处理
的。同时以 GCC 扩展更的性
 GCC（时扩展空。
的将文件文件文件
#if __GUNC__ >= 3
# undef
inline
# define inline
inline __attribute
((always_inline))
# define __noinline
__attribute__
((noinline))
– 377 –
 A
GCC 对 C 的扩展
# define __pure
__attribute__ ((pure))
# define __const
__attribute__ ((const))
# define __noreturn
__attribute__
((noreturn))
# define __malloc
__attribute__ ((malloc))
# define __must_check
__attribute__
((warn_unused_result))
# define __deprecated
__attribute__
((deprecated))
# define __used
__attribute__ ((used))
# define __unused
__attribute__ ((unused))
# define __packed
__attribute__ ((packed))
# define __align(x)
__attribute__ ((aligned
(x)))
# define __align_max
__attribute__ ((aligned))
# define likely(x)
__builtin_expect (!!(x),
1)
# define unlikely(x)
__builtin_expect (!!(x),
0)
#else
# define __noinline
/* no noinline */
# define __pure
/* no pure */
# define __const
/* no const */
# define __noreturn
/* no noreturn */
# define __malloc
/* no malloc */
# define __must_check
/* no warn_unused_result
*/
# define __deprecated
/* no deprecated */
# define __used
/* no used */
# define __unused
/* no unused */
# define __packed
/* no packed */
# define __align(x)
/* no aligned */
– 378 –
 A
GCC 对 C 的扩展
# define __align_max
/* no aligned_max */
# define likely(x)
(x)
# define unlikely(x)
(x)
#endif
以上的写方式将
__pure int foo (void) { /* ... */ }
 GCC 上 pure 属性。的 GCC
将__pure 空（no-op。的我们以
属性同时上的。
处理更写更更的
– 379 –
 B
附录 B
参考书目
程相的读, 进。读
时读作。们我相上的。
我。
的内设的读的 ( C )。
对的效 gdb Subversion（svn以及操作设
方的。的超出的 (的
程程)。内何我的。然单上
以自读。
B.1 C 语言程序设计的相关书籍
以程的 — C 。能写
C 以的（以的能方提。
以 K&R 读的。的
的 C 的单性。
The C Programming Language, 2nd ed. Brian W. Kernighan and Dennis M. Ritchie.
Prentice Hall, 1988.  C 程设的作的作 C
。
C in a Nutshell. Peter Prinz and Tony Crawford. O Reilly Media, 2005. 
的 C  C 的。 C Pocket Reference. Peter Prinz and Ulla
Kirch-Prinz. Translated by Tony Crawford. O Reilly Media, 2002. 的
C 更新新的 ANSI C99 。 Expert C Programming. Peter
van der Linden. Prentice Hall, 1994. 对 C 的进
文作的。满
的我喜。 C Programming FAQs: Frequently Asked Questions, 2nd ed.
Steve Summit. Addison-Wesley, 1995.
超 400  C 程设的（。
 FAQ  C 小对的即
的 C 程。能绝对 C
– 380 –
 B
上 ANSI C99（我
自的。的的
更新。
B.2 Linux 编程的相关书籍
的 Linux 程的相
的（ IPC以及 pthreads Linux 程工（CVS GNU
Make以及 Subversion。
Unix Network Programming, Volume 1: The Sockets Networking API, 3rd ed. W.
Rich- ard Stevens et al. Addison-Wesley, 2003.  API 的绝对
对 Linux 的更新 IPv6。
UNIX Network Programming, Volume 2: Interprocess Communications, 2nd ed. W.
Richard Stevens. Prentice Hall, 1998. 进程间（IPC的绝。
PThreads Programming: A POSIX Standard for Better Multiprocessing. Bradford
Nichols et al. O Reilly Media, 1996.  POSIX 程 API—pthreads 的。
Managing Projects with GNU Make, 3rd ed. Robert Mecklenburg. O Reilly Me-
dia, 2004.  GNU Make—Linux 上件的工的绝。
Essential CVS, 2nd ed.
Jennifer Versperman.
O Reilly Media, 2006.
CVS—Unix 上理的工的绝。
Version Control with Subversion. Ben Collins-Sussman et al. O Reilly Media,
2004.  Subversion—Unix 上理的工的
的 Subversion 的作。
GDB Pocket Reference.
Arnold Robbins.
O Reilly Media, 2005.
gdb—Linux 调的。
Linux in a Nutshell, 5th ed. Ellen Siever et al. O Reilly Media, 2005. 对 Linux
内的 Linux 的工。
B.3 Linux 内核的相关书籍
出的及 Linux 内方的。我们理对
进。内提对空间的调。内
的性上的进时出。 Linux 内
– 381 –
 B
同时。
Linux Kernel Development, 2nd ed. Robert Love. Novell Press, 2005. 
给 Linux 内设实的程读（然我
提及我上的。作 API 同时对 Linux 内
的以及的的。 Linux Device Drivers, 3rd ed.
Jonathan Corbet et al. O Reilly Media, 2005. 写 Linux 内设备
程方的绝同时的 API 。对的设备
的以程 ( Linux 内的
程)。我 Linux 内方的备。
B.4 操作系统设计的相关书籍
对 Linux 的理上操作设实。
我调的对进程上的的
。
Operating Systems, 3rd ed. Harvey Deitel et al. Prentice Hall, 2003. 操作设
理方的作同时将理实的。操作
设我的操作的展读。
UNIX Systems for Modern Architectures: Symmetric Multiprocessing and Caching
for Kernel Programming. Curt Schimmel. Addison-Wesley, 1994.
程的的性存提
绝的。
– 382 –