p .
(3) Arbitrary subgroups Gq ⊆ Z×
(4) The set R = E(F) of rational points on (certain) elliptic curves, deﬁned over a ﬁnite ﬁeld.
Proof. The set {0, 1}(cid:96)(λ) can be canonically identiﬁed with T (cid:96)(λ) := Z
2(cid:96)(λ) . It will hence, for all considered
sets R, suﬃce to indicate admissible encodings T (cid:96)(λ) → R.
(1) Let N ∈ N be a natural number, and λ = |N| its length. Consider polynomial (cid:96)(λ) = 2λ, function
F : T (cid:96)(λ) → ZN ; a (cid:55)→ a mod N , and the probabilistic mapping IF : ZN → T (cid:96)(λ); b (cid:55)→ b + kN for random
k ∈R [0,(cid:98)2(cid:96)(λ)/N(cid:99) − 1]. It is easy to see that IF inverts F . According to [26, Section 8.8], the statistical
distance  between IF (r) for r ∈R ZN and the uniform distribution in T (cid:96)(λ) is bounded by  < N/2(cid:96)(λ) ≈
2λ/22λ = 2−λ, and hence negligible.
(2) and (3) Let p = αq + 1 with primes p, q such that gcd(α, q) = 1 and |p| = λ (if α = 2 we have
p ; a (cid:55)→
the safe prime setting). Let g be a generator of G = Z×
(gq)raα−1 mod q mod p for r ∈R Zα together with its inversion F : Z×
p → Gq; b (cid:55)→ bα mod p. As gq and also
(gq)r have order α, it is easy to see that F perfectly ‘inverts’ IF . The encoding is 0-admissible as for every
h ∈ G we have h = gt = (gq)x(gα)y for some t, x, y (by CRT or Euclid), i.e. every element in G is the
(unique) product of the power of an order-α and the power of an order-q element. In above construction, the
role of the former is taken by (gq)r, while element aα−1 ∈ Gq corresponds to the latter. This encoding can
be composed with (1) for N = p to obtain the desired F : {0, 1}(cid:96)(λ) → R.
p . Consider the probabilistic IF : Gq → Z×
(4) We refer to Brier et al. [8] for an overview of (pairing-friendly) curves with suitable admissible
(cid:117)(cid:116)
encodings.
Direct PR Compiler. The PR compiler introduced below outputs pseudorandom signatures (with full key
exposure) for any signature scheme S; underlying techniques were proposed in [17] for building anonymous
signatures. Its main building block is a pair of associated randomness extractor E and hash function H.
Here, we only recall the properties of such a pair (E, H) and refer to [17] for a rigorous treatment. Basically,
a randomized hash function H takes a message m and some randomness r ∈R {0, 1}t(λ) and outputs h =
H(m; r). H is called collision-intractable if it is diﬃcult to ﬁnd m (cid:54)= m(cid:48) and r ∈ {0, 1}t(λ) with H(m; r) =
H(m(cid:48), r), for the same randomness r. The task of the randomness extractor E is to distill uniformly distributed
strings of ﬁxed length from inputs x ← X whose distribution is unknown but where a certain minimum
level of entropy is assumed. As auxiliary input, E gets a uniformly distributed randomness u ∈ {0, 1}d(λ).
The extracted value is denoted by E(m; u). A pair (E, H) is called pseudorandom if tuples (r, y, u, e) and
(r, y, u, v) are computationally indistinguishable, where r ∈R {0, 1}t(λ), y ← H(x; r), u ∈R {0, 1}d(λ), e ←
E(x; u), and v ∈R {0, 1}|e|, for x ← X . Fischlin [17] oﬀers an eﬃcient instantiation for such primitive
in the standard model13. Our analysis shows that this primitive gives rise to the following compiler for
pseudorandom signatures, which are also indistinguishable and conﬁdential (by Lemmas 10 and 5). We
notice that this compiler results in somewhat less eﬃcient schemes as opposed to our IND-to-PR compiler
(e.g. when used with our IND examples).
Output (sk, pk) ← S.KGen(1λ).
DPRC.KGen(1λ) :
Choose r ∈R {0, 1}t(λ) and u ∈R {0, 1}d(λ). Let h ← H(m; r) and σ ← S.Sign(sk, h).
DPRC.Sign(sk, m) :
Compute τ := σ ⊕ E(m; u) and output σ(cid:48) := τ (cid:107) r(cid:107) u.
DPRC.Ver(pk, m, σ(cid:48)) : Parse σ(cid:48) as σ(cid:48) = τ (cid:107) r (cid:107) u. Let σ := τ ⊕ E(m; u) and h ← H(m; r). Output
S.Ver(pk, h, σ).
Theorem 2. If (E, H) is a pseudorandom pair of an associated randomness extractor E and a hash function
H then for any signature scheme S the DPRC signature scheme, obtained using our direct PR compiler, is
pseudorandom with respect to full key exposure (in the standard model).
13 In the random oracle model H(x; r) := H #(0 (cid:107) x (cid:107) r) and E(x; u) := H #(1 (cid:107) x (cid:107) r) for a hash function H # is an
eﬃcient instantiation of a pseudorandom associated pair (E, H).
17
Proof (Sketch). Anonymity of DPRC is shown in [17] by presenting a game-hopping proof that, in the ﬁrst
hop, modiﬁes ANON game such that challenge signature σ∗ is computed as speciﬁed in DPRC, except that
τ is replaced by τ := σ ⊕ v for random v ∈R {0, 1}|E(m;u)|. As v acts as a one-time pad on σ, component τ is
uniformly distributed in {0, 1}|σ|. Obviously, the concatenation σ(cid:48) = τ (cid:107) r(cid:107) u is uniformly distributed as well,
in {0, 1}|σ|+t(λ)+d(λ). This shows pseudorandomness of DPRC. Note that the transformed scheme inherits its
(cid:117)(cid:116)
unforgeability from S under standard assumptions as proven in [17].
6 Conclusion
In this paper we gave a detailed account on the privacy hierarchy for ordinary signature schemes, taking into
account earlier deﬁnitions of anonymity and conﬁdentiality in the setting of high-entropic message spaces and
system-wide known public keys. Our major result are pseudorandom signatures that cannot be distinguished
from random strings and thus hide the entire information about message, signer, and signing algorithm. To
obtain such fully private signatures we gave two compilers: the more eﬃcient one adds pseudorandomness to
indistinguishable signature schemes and we have shown that such schemes exist in diﬀerent cryptographic
settings; our second compiler, based on Fischlin’s work [17], adds pseudorandomness to any unforgeable
signature scheme but is less eﬃcient (though in the standard model). In summary, with our hierarchy of
privacy notions and generic transformations we showed how to eﬃciently achieve an ultimate form of privacy
for arbitrary signature schemes, both in the random oracle and the standard model.
Acknowledgments.
The majority of work on this paper was performed while all its authors were in the Cryptographic Protocols
Group at TU Darmstadt. This research was supported by the German Science Foundation (DFG) through
the project PRIMAKE (MA 4957).
References
1. M. Bellare, A. Boldyreva, A. Desai, and D. Pointcheval. Key-Privacy in Public-Key Encryption. In ASIACRYPT
2001, LNCS 2248, pp. 566–582. 2001.
2. M. Bellare and S. Duan. Partial Signatures and their Applications. Cryptology ePrint Archive, Report 2009/336,
2009. http://eprint.iacr.org/2009/336.
3. M. Bellare, M. Fischlin, A. O’Neill, and T. Ristenpart. Deterministic Encryption: Deﬁnitional Equivalences and
Constructions without Random Oracles. In CRYPTO 2008, LNCS 5157, pp. 360–378. 2008.
4. M. Bellare and P. Rogaway. Random Oracles are Practical: A Paradigm for Designing Eﬃcient Protocols. In
CCS 1993, pp. 62–73. 1993.
5. D. Boneh and X. Boyen. Short Signatures Without Random Oracles and the SDH Assumption in Bilinear Groups.
J. of Cryptology, 21(2):149–177, 2008.
6. D. Boneh and M. Franklin. Identity-Based Encryption from the Weil Pairing. In CRYPTO 2001, LNCS 2139,
pp. 213–229. 2001.
7. D. Boneh, B. Lynn, and H. Shacham. Short Signatures From the Weil Pairing. J. of Cryptology, 17(4):297–319,
2004.
8. E. Brier, J.-S. Coron, T. Icart, D. Madore, H. Randriam, and M. Tibouchi. Eﬃcient Indiﬀerentiable Hashing
into Ordinary Elliptic Curves. In CRYPTO 2010, LNCS 6223, pp. 237–254. 2010.
9. J. Bringer, H. Chabanne, and T. Icart. Password Based Key Exchange Protocols on Elliptic Curves Which
Conceal the Public Parameters. In ACNS 2010, LNCS 6123, pp. 291–308. 2010.
10. C. Cachin. An Information-Theoretic Model for Steganography. In Information Hiding 1998, LNCS 1525, pp.
306–318. 1998.
11. J. Camenisch and A. Lysyanskaya. A Signature Scheme with Eﬃcient Protocols. In Security in Communication
Networks 2002, LNCS 2576, pp. 268–289. 2003.
12. R. Canetti. Towards Realizing Random Oracles: Hash Functions That Hide All Partial Information. In CRYPTO
1997, LNCS 1294, pp. 455–469. 1997.
18
13. R. Canetti and H. Krawczyk. Security Analysis of IKE’s Signature-Based Key-Exchange Protocol. In CRYPTO
2002, LNCS 2442, pp. 143–161. 2002.
14. D. Chaum and E. van Heyst. Group Signatures. In EUROCRYPT 1991, LNCS 547, pp. 257–265. 1991.
15. R. Cramer and V. Shoup. Signature Schemes Based on the Strong RSA Assumption. ACM TISSEC, 3(3):161–185,
2000.
16. A. W. Dent, M. Fischlin, M. Manulis, M. Stam, and D. Schr¨oder. Conﬁdential Signatures and Deterministic
Signcryption. In PKC 2010, LNCS 6056, pp. 462–479. 2010.
17. M. Fischlin. Anonymous Signatures Made Easy. In PKC 2007, LNCS 4450, pp. 31–42. 2007.
18. S. D. Galbraith and W. Mao. Invisibility and Anonymity of Undeniable and Conﬁrmer Signatures. In CT-RSA
2003, LNCS 2612, pp. 80–97. 2003.
19. G. Greenleaf and R. Clarke. Privacy Implications of Digital Signatures. IBC Conference on Digital Signatures,
1997. Available at http://www.anu.edu.au/people/Roger.Clarke/DV/DigSig.html.
20. N. J. Hopper, J. Langford, and L. von Ahn. Provably Secure Steganography. In CRYPTO 2002, LNCS 2442,
pp. 77–92. 2002.
21. K. Nyberg and R. Rueppel. Message Recovery for Signature Schemes Based on the Discrete Logarithm Problem.
In EUROCRYPT 1994, LNCS 950, pp. 182–193. 1995.
22. J.-F. Raymond. Traﬃc Analysis: Protocols, Attacks, Design Issues, and Open Problems. In Workshop on Design
Issues in Anonymity and Unobservability 2000, LNCS 2009, pp. 10–29. 2000.
23. R. L. Rivest, A. Shamir, and Y. Tauman. How to Leak a Secret. In ASIACRYPT 2001, LNCS 2248, pp. 552–565.
2001.
24. V. Saraswat and A. Yun. Anonymous Signatures Revisited. In Provable Security 2009, LNCS 5848, pp. 140–153.
2009.
25. C.-P. Schnorr. Eﬃcient Identiﬁcation and Signatures for Smart Cards. In CRYPTO 1989, LNCS 435, pp. 239–252.
1990.
26. V. Shoup. A Computational Introduction to Number Theory and Algebra. Cambridge Uni Press, 2008.
27. G. J. Simmons. The Prisoners’ Problem and the Subliminal Channel. In CRYPTO 1983, pp. 51–67. 1983.
28. G. Yang, D. S. Wong, X. Deng, and H. Wang. Anonymous Signature Schemes. In PKC 2006, LNCS 3958, pp.
347–363. 2006.
29. R. Zhang and H. Imai. Strong Anonymous Signatures. In Inscrypt 2008, LNCS 5487, pp. 60–71. 2009.
A Privacy and Impossibility Results for Deterministic Signature Schemes
In the following, we discuss why the privacy properties anonymity, conﬁdentiality, indistinguishability, and
pseudorandomness from Deﬁnitions 3, 4, 6, and 7, respectively, can only be achieved by probabilistic signature
schemes. By specifying further deﬁnitional constraints on the respective experiments, we obtain meaningful
notions of these privacy properties for deterministic schemes. In addition, we give several impossibility results
in case of full key exposure.
A.1 Anonymity of Deterministic Signature Schemes.
A trivial attack against anonymity of any deterministic signature scheme S works as follows: Let P (·) be some
eﬃciently computable non-trivial predicate (e.g. the last bit of its argument) that is hard-coded into both A1
and A2. By random sampling and testing, A1 picks a message m for which P (σ0) = 0 and P (σ1) = 1, where
σ0 ← Sign(sk0, m) and σ1 ← Sign(sk1, m). Adversary A2 outputs P (σ) and clearly breaks the anonymity
of the deterministic scheme S. Hence, any meaningful deﬁnition of anonymity for deterministic signature
schemes will require at least the following additional constraint (whose name was coined for conﬁdential
signatures by Dent et al. [16]):
– Signature free: A1 may not output m that has been queried to the signing oracle before.
If we also allow full key exposure, where A1 learns both sk0 and sk1 and can sign messages on its own, then
obviously the above constraint does not help:
Lemma 14. There is no deterministic signature scheme that provides anonymity with full key exposure.
Note that neither Yang et al. [28] nor Fischlin [17] addressed anonymity of deterministic schemes. In
particular, their anonymity notions, used as a basis in Deﬁnition 3, did not reﬂect possible determinism of
schemes.
19
A.2 Conﬁdentiality of Deterministic Signature Schemes.
A trivial attack against conﬁdentiality of deterministic signature schemes proceeds as follows: On each
invocation, A1 outputs (m, t), where m = (M ) consists of a single random high-entropy message M , and t =
Sign(sk, M ). A2 receives σ∗ = (σ), outputs σ, and “wins” the experiment with advantage 1/2. This and
similar more sophisticated attacks can, again, be ruled out by a ‘signature free’ restriction, similar to the
one stated on anonymous schemes, yet extended to message vectors:
– Signature free: A1 may not output m that contains a message m that has been queried to the signing
oracle before.
Note that this constraint was also marked by Dent et al. [16] as being relevant to deterministic signature
schemes in their deﬁnition of strong conﬁdentiality.
As in the case of anonymity, the ‘signature free’ restriction cannot prevent the above attack against
conﬁdentiality of deterministic schemes if private signing keys are exposed, as the adversary could always
sign m on its own.
Lemma 15. There is no deterministic signature scheme that provides conﬁdentiality with full key exposure.
Yet, ‘signature free’ is not the only restriction that is necessary to deﬁne conﬁdentiality of deterministic
schemes in a reasonable way. In particular, we present another trivial attack against Deﬁnition 4: A1 ﬂips
a coin and outputs either (m, 0), where m = (M, M ) for a random message M , or outputs (m, 1) with
m = (M, M(cid:48)), M (cid:54)= M(cid:48). Adversary A2 just compares the two signatures in σ∗ and outputs 0 or 1, accordingly.
It seems that the following ‘message uniqueness’ constraint is suﬃcient to exclude this attack.
– Message uniqueness: for each (m, t) ← A1 (where A1 is provided admissible inputs and oracles) and all
1 ≤ i, j ≤ |m|, we have i (cid:54)= j ⇒ mi (cid:54)= mj, i.e. no message is present twice in m.
Intuitively, this is a rather natural constraint: The adversary would not gain any additional knowledge
from asking the same message m ∈ {0, 1}∗ twice to a deterministic signing oracle. Interestingly, Dent et
al. [16] used the equivalent ‘pattern preservation’ constraint14 in their deﬁnition, yet without marking it as
being relevant for deterministic schemes only. We could not identify any reason why this constraint should
be relevant for probabilistic schemes: Probabilistic signatures should not carry patterns existing within m
over to σ∗. Posing the constraint on such schemes would thus weaken the general conﬁdentiality deﬁnition
unnecessarily.
A.3
Indistinguishability of Deterministic Signature Schemes.
oracle before.
As in the case of deterministic anonymous and conﬁdential signatures, we need additional constraints on the
deﬁnition of indistinguishability for deterministic schemes:
– Signature free: A1 may not output m that contains a message m that has been queried to the signing
– Message uniqueness: A1 may not output m that contains a single message twice
Basing on Lemmas 4 and 5 (IND ⇒ ANON and IND ⇒ CONF, respectively), the following two im-
possibility results with regard to information recovering and deterministic signature schemes are implied
immediately by Lemma 3 resp. Lemmas 14 and 15:
Corollary 1. There is no information recovering signature scheme that provides indistinguishability.
Corollary 2. There is no deterministic signature scheme that provides indistinguishability with full key
exposure.
14 The ‘pattern preservation’ constraint is deﬁned as follows [16]: For any adversary A1 there exists a length function
(cid:96)(λ) and relations (cid:5)ij ∈ {=,(cid:54)=} (1 ≤ i, j ≤ (cid:96)(λ)) such that for all possible (m, t) ← A1 (where A1 is provided
admissible inputs and oracles) it is required that |m| = (cid:96)(λ) and mi (cid:5)ij mj ∀i, j. In other words: If some of the
messages output by A1 are equal to each other (and hence form an “equality pattern”), then this pattern occurs
in all vectors output by A1. For deterministic signature schemes, the notions of pattern preservation and message
uniqueness are clearly equivalent.
20
A.4 Pseudorandomness of Deterministic Signature Schemes.
Not surprisingly, we also have to restrict the deﬁnition of pseudorandomness to ﬁt deterministic signatures
schemes. As for indistinguishability, the ‘signature free’ and ‘message uniqueness’ constraints have to be
added. Clearly, the impossibility of obtaining deterministic IND schemes in case where secret keys are exposed
(cf. Corollary 2) also applies to PR schemes, as Lemma 10 establishes ‘PR ⇒ IND’.
Corollary 3. There is no deterministic signature scheme that provides pseudorandomness with full key
exposure.
21