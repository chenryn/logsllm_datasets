Hi,  
I come from a java background and I love using flask. But there is some itch
with flask GET/POST API (production code and test code) I would like to
discuss about.
In a java servlet, it doesn't matter what http method you're using (GET, POST,
PUT), you always do this to get a parameter from input :
    String username = request.getParameter("username");
    String password = request.getParameter("password");
In flask, this is inconsistent :  
for a POST, flasks "assumes" data come from a form (wich is not mandatory, you
can submit data without a form) :
    username = request.form['username']
To me, in terms of API, form is wrong. But worse, if you do a GET, you can't
use form, you'll have to user args :  
GET :
    username = request.args['username']
I would prefer to see, in POST/GET/PUT/whatever (I'm using parameter, as in
java HttpServlet API) :
    username = request.parameter['username']
As Im doing TDD, I observed the same inconsiancy in writing unit tests :  
to test a POST, you can submit a dict (which is great and very pythonic) :
    app.test_client().post('/login', data=dict(
            username=username,
            password=))
to test a GET, you can't pass a dict, you have to reconstruct the URL (which I
don't find very pythonic) :
    app.test_client().get('/agent/login?username=%s&password=%s' % (username, password))
I would love to be able to write this for a GET too :
    app.test_client().get('/login', data=dict(
            username=username,
            password=))
Anyway, what do you think ?  
Thanks for your feedback.