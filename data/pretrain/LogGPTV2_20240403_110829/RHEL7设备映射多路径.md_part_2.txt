**图 1.1. 带一个 RAID 设备的主动／被动多路径配置**
:::
::: para
在这个配置中，一个 I/O 路径通过 hba1、SAN1 以及控制器 1。另一个 I/O
路径通过 hba2、SAN2 以及控制器 2。在这个配置中有很多地方可能出现故障：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    HBA 故障
    :::
-   ::: para
    FC 电缆故障
    :::
-   ::: para
    SAN 交换机故障
    :::
-   ::: para
    阵列控制器端口故障
    :::
:::
::: para
阵列控制器端口故障
:::
::: para
[图 1.2 "带两个 RAID
设备的主动／被动多路径配置"](#MPIO_Overview.html#multipath-server2-DM){.xref}
演示了更复杂的主动／被动配置，其中服务器中有两个 HBA、两个 SAN
交换机以及两个 RAID 设备（每个带两个 RAID 控制器）。
:::
::: figure
[⁠]{#MPIO_Overview.html#multipath-server2-DM}
::: figure-contents
::: mediaobject
![带两个 RAID
设备的主动／被动多路径配置](images/overview/multipath-server2.png)
:::
:::
**图 1.2. 带两个 RAID 设备的主动／被动多路径配置**
:::
::: para
在[图 1.2 "带两个 RAID
设备的主动／被动多路径配置"](#MPIO_Overview.html#multipath-server2-DM){.xref}
演示的示例中，每个 RAID 设备都有两个 I/O 路径（与 [图 1.1 "带一个 RAID
设备的主动／被动多路径配置"](#MPIO_Overview.html#multipath-server1-DM){.xref}
的示例相同）。如果配置了 DM Multipath，任一 RAID 设备的 I/O
路径的任一点出现故障，都将会导致 DM Multipath 为该设备切换到备用 I/O
路径。
:::
::: para
[]{#MPIO_Overview.html#idm140613835505840 .indexterm} [图 1.3 "带一个
RAID
设备的主动/主动多路径配置"](#MPIO_Overview.html#multipath-server3-DM){.xref}
演示在服务器中有两个 HBA、一个 SAN 交换机以及两个 RAID
控制器的主动／主动配置。在服务器和存储设备间有四条 I/O 路径：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    hba1 到控制器 1
    :::
-   ::: para
    hba1 到控制器 2
    :::
-   ::: para
    hba2 到控制器 1
    :::
-   ::: para
    hba2 到控制器 2
    :::
:::
::: para
在这个配置中，可将 I/O 分布到上述四条路径中。
:::
::: figure
[⁠]{#MPIO_Overview.html#multipath-server3-DM}
::: figure-contents
::: mediaobject
![带一个 RAID
设备的主动/主动多路径配置](images/overview/multipath-server3.png)
:::
:::
**图 1.3. 带一个 RAID 设备的主动/主动多路径配置**
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_Overview.html#storage_support}1.3. 存储阵列支持 {.title}
:::
[]{#MPIO_Overview.html#idm140613856307616
.indexterm}[]{#MPIO_Overview.html#idm140613856306656 .indexterm}
::: para
默认情况下，DM Multipath 支持大多数常用的支持 DM Multipath
的储存阵列。若要了解默认配置值和支持的设备的相关信息，请运行下列指令中的任何一个。
:::
``` screen
# multipathd show config
# multipath -t 
```
::: para
若储存阵列支持 DM Multipath 但是默认情况下未被配置，您需要将它加入 DM
Multipath 配置文件 `multipath.conf`{.filename}。如需了解 DM Multipath
配置文件的相关信息，请参阅〈[第 4 章 *DM Multipath
配置文件*](#mpio_configfile.html){.xref}〉。
:::
::: para
有些存储阵列对 I/O
错误和路径切换需要特殊处理。这些都需要独立的硬件处理器 kernel 模块。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_Overview.html#MPIO_Components}1.4. DM Multipath 组件 {.title}
:::
::: para
[表 1.1 "DM Multipath
组件"](#MPIO_Overview.html#tb-multipath_components){.xref} 对 DM
Multipath 组件进行了描述。
:::
[]{#MPIO_Overview.html#idm140613827394000
.indexterm}[]{#MPIO_Overview.html#idm140613853262592
.indexterm}[]{#MPIO_Overview.html#idm140613853261312
.indexterm}[]{#MPIO_Overview.html#idm140613853260032
.indexterm}[]{#MPIO_Overview.html#idm140613853258752
.indexterm}[]{#MPIO_Overview.html#idm140613853257472 .indexterm}
::: table
[⁠]{#MPIO_Overview.html#tb-multipath_components}
**表 1.1. DM Multipath 组件**
::: table-contents
  ------------------------------------------------------------------------------------------------------------------------
  组件                        描述
  --------------------------- --------------------------------------------------------------------------------------------
  `dm-multipath`{.filename}   为路径和路径组重新指定 I/O 并支持故障转移。
  kernel 模块                 
  `mpathconf`{.filename}      配置并启用 DM Multipath。
  工具程序                    
  `multipath`{.command} 指令  列出并配置多路径设备。通常使用 `/etc/rc.sysinit`{.filename} 启动，还可以在添加块设备时通过
                              `udev`{.command} 程序启动。
  `multipathd`{.command}      监视路径；若路径故障并返回，它可能会启动路径组切换。允许对多路径设备进行交互式修改。若需对
  守护进程                    `/etc/multipath.conf`{.filename} 文件进行任何修改，都必须重新启动本守护进程。
  `kpartx`{.command} 命令     为设备分区生成设备映射器。对于带 DM Multipath 的基于 DOS
                              的分区来说，使用此命令很有必要。`kpartx`{.command} 命令包含在它自己的软件包当中，但是
                              `device-mapper-multipath`{.literal} 软件包需要依赖它。
  ------------------------------------------------------------------------------------------------------------------------
:::
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_Overview.html#setup_overview}1.5. DM Multipath 设置概述 {.title}
:::
[]{#MPIO_Overview.html#idm140613832882656 .indexterm}
::: para
DM Multipath 包含适用于常用多路径配置的已编译默认设置。为系统配置 DM
Multipath 的基本步骤如下：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    安装 `device-mapper-multipath`{.literal} rpm。
    :::
2.  ::: para
    使用 `mpathconf`{.command}
    命令创建配置文件并启用多路径。若无需编辑该配置文件，可使用此命令启动多路径守护程序。
    :::
3.  ::: para
    如需编辑该配置文件，请编辑 `multipath.conf`{.filename}
    配置文件，修改默认值并保存更新的文件。
    :::
4.  ::: para
    启动多路径守护进程。
    :::
:::
::: para
如需了解多路径配置的详细安装说明，请参阅〈[第 3 章 *设置 DM
Multipath*](#mpio_setup.html){.xref}〉。
:::
:::
:::
[]{#mpath_devices.html}
::: chapter
::: titlepage
# [⁠]{#mpath_devices.html#mpath_devices}第 2 章 多路径设备 {.title}
:::
[]{#mpath_devices.html#idm140613839847456
.indexterm}[]{#mpath_devices.html#idm140613832146592 .indexterm}
::: para
若没有 DM
Multipath，从服务器节点到储存控制器的每一条路径都会被系统视为独立的设备，即使
I/O 路径连接的是相同的服务器节点到相同的储存控制器也是如此。DM Multipath
提供了有逻辑的管理 I/O 路径的方法，即在基础设备顶端生成单一多路径设备。
:::
::: section
::: titlepage
# [⁠]{#mpath_devices.html#multipath_device_id}2.1. 多路径设备识别符 {.title}
:::
[]{#mpath_devices.html#idm140613802977024
.indexterm}[]{#mpath_devices.html#idm140613828430528
.indexterm}[]{#mpath_devices.html#idm140613831299088
.indexterm}[]{#mpath_devices.html#idm140613825221984
.indexterm}[]{#mpath_devices.html#idm140613850136992 .indexterm}
::: para
每个多路径设备都有一个全球识别符（WWID），它是一个全球唯一的无法更改的号码。默认情况下会将多路径设备的名称设定为它的
WWID。另外，您还可以在多路径配置文件中设置
`user_friendly_names`{.literal} 选项，该选项可将别名设为格式为
`mpath`{.literal}*`n`* 的节点唯一名称。
:::
::: para
例如：有两个 HBA 的节点通过单一不分区 FC
交换机附加到有两个端口的储存控制器中时，可看到四个设备：`/dev/sda`{.literal}、`/dev/sdb`{.literal}、`dev/sdc`{.literal}
以及 `/dev/sdd`{.literal}。DM Multipath 会生成由唯一 WWID
的单一设备，该设备可根据多路径配置将 I/O
重新路由到那四个基础设备。`user_friendly_names`{.literal}
配置选项的值被设为 `yes`{.literal} 时，多路径设备的名称会被设定为
`mpath`{.literal}*`n`*。
:::
[]{#mpath_devices.html#idm140613850358032
.indexterm}[]{#mpath_devices.html#idm140613833854832 .indexterm}
::: para
新设备被纳入 DM Multipath 控制时，该设备会显示在 `/dev`{.literal}
目录的两个不同位置： `/dev/mapper/mpath`{.filename}*`n`* 和
`/dev/dm-`{.filename}*`n`*。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `/dev/mapper`{.filename}
    中的设备是在引导过程中生成的。可使用这些设备访问多路径设备，例如在生成逻辑卷时。
    :::
-   ::: para
    任何 `/dev/dm-`{.filename}*`n`*
    格式的设备都只适用于内部使用，管理员请勿直接使用。
    :::
:::
::: para
有关多路径配置默认的详情，包括 `user_friendly_names`{.literal}
配置选项，请参考 [第 4.3 节
"配置文件默认设置"](#mpio_configfile.html#config_file_defaults){.xref}。
:::
::: para
您还可以使用多路径配置文件 `multipaths`{.literal} 部分的
`alias`{.literal}
选项将多路径设备名称设为您选择的名称。有关多路径配置文件
`multipaths`{.literal} 部分的详情请参考 [第 4.4 节
"多路径设备配置属性"](#mpio_configfile.html#config_file_multipath){.xref}。
:::
:::
::: section
::: titlepage
# [⁠]{#mpath_devices.html#multipath_consistent_names}2.2. 在集群中保持多路径设备名称一致 {.title}
:::
::: para
当将 `user_friendly_names`{.literal} 配置选项设为 `yes`{.literal}
时，该多路径设备的名称对于节点来说是唯一的，但不保证对使用多路径设备的所有节点都一致。同样，如果您为
`multipath.conf`{.filename} 配置文件的 `multipaths`{.literal}
部分中的设备设定 `alias`{.literal}
选项，该名称不会自动在集群的所有节点中保持一致。如果您使用 LVM
在多路径设备中创建逻辑设备，这不应是问题。但如果您需要将您的多路径设备名称在集群中的每个节点上都保持一致，请不要将
`user_friendly_names`{.literal} 选项设定为
`yes`{.literal}，且不要为那些设备配置别名。默认情况下，如果您不将
`user_friendly_names`{.literal} 设定为
`yes`{.literal}，或者为某个设备配置别名，则设备名称将是该设备的
WWID，它是不会变的。
:::
::: para
如果您要系统定义的用户友好名称在集群的所有节点中都一致，您可按照以下步骤操作：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    在一台机器中设定所有多路径设备。
    :::
2.  ::: para
    运行以下命令禁用其它机器上所有的多路径设备：
    :::
    ``` screen
    # service multipathd stop
    # multipath -F
    ```
3.  ::: para
    将第一台机器中的 `/etc/multipath/bindings`{.filename}
    文件复制到集群中的其它所有机器中。
    :::
4.  ::: para
    使用以下命令在集群的其他机器中重新 `multipathd`{.command} 守护进程：
    :::
    ``` screen
    # service multipathd start
    ```
:::