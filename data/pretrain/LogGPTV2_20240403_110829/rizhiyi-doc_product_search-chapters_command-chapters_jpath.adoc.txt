=== jpath
摘要：
    jpath用于支持对json的数据处理，提供类似xpath的机制，并配合上多值函数对json数据进行提取和处理
语法：
    jpath [input=] output= path=
必要参数：
* output
** 语法
    |
** 描述
    表示抽取的输出字段名，字段类型收到json-path的影响，可能为单值也可能为多值类型
* json-path
** 语法
** 描述
    json-path描述的路径。语法详见：https://github.com/json-path/JsonPath
.jsonpath的操作符
[options="header"]
|=====
|操作符|描述
|*
|通配符，可用于通配子节点或者数组所有元素
|.
|名为name的子节点
|['' (, '')]
|方括号形式描述子节点，可以是多个name
|[ (, )]
|方括号形式描述数组的元素，可以是多个number
|[start:end]
|类似python中的数组用法，表示数据元素的范围
|=====
.json-path示例
[source,javascript]
{
    "store": {
        "book": [
            {
                "category": "reference",
                "author": "Nigel Rees",
                "title": "Sayings of the Century",
                "price": 8.95
            },
            {
                "category": "fiction",
                "author": "Evelyn Waugh",
                "title": "Sword of Honour",
                "price": 12.99
            },
            {
                "category": "fiction",
                "author": "Herman Melville",
                "title": "Moby Dick",
                "isbn": "0-553-21311-3",
                "price": 8.99
            },
            {
                "category": "fiction",
                "author": "J. R. R. Tolkien",
                "title": "The Lord of the Rings",
                "isbn": "0-395-19395-8",
                "price": 22.99
            }
        ],
        "bicycle": {
            "color": "red",
            "price": 19.95
        }
    },
    "expensive": 10
}
对应的查询语句结果为:
[options="header"]
|=====
|Json-path|描述
|store.book[*].author
|所有书籍的作者
|store.book[2]['author']
|第三本书的作者
|store.book[-2]['price']
|倒数第二本书的价格
|store.book[0,1]['price']
|第一本和第二本书的价格，类型为多值类型
|store.book[1:2]['price']
|第二本和第三本数的价格，类型为多值类型
|=====
可选参数：
* input
** 语法
    |
** 描述
    指定json类型的输入字段，默认为raw_message
.示例
====
日志原文为{ "a": [  ["x1","r1","31"],  ["x2","r2","32"], ["x3","r3","33"] ]}，其中a为数组的数组，其中第三个元素为价格，抽取所有价格，抽取结果为多值类型
image::images/Image-140318-041716.084.png[]
====