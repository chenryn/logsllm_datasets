User: 如何使用Python代码监测CPU利用率并及时通知管理员？
Assistant: 要使用Python代码监测CPU利用率并及时通知管理员，你需要遵循以下步骤：

1. 使用Python标准库中的psutil库来获取系统的CPU利用率，安装psutil库：`pip install psutil`

2. 设置CPU利用率的阈值，例如当CPU利用率超过90％时，发出警报。

3. 使用Python的SMTP库来发送邮件通知管理员，安装smtplib库：`pip install smtplib`

4. 编写Python代码来持续监测CPU利用率，并使用SMTP库发送邮件通知管理员。

具体代码大概如下：

```python
import psutil
import smtplib
import time

# 设置CPU利用率的阈值
CPU_THRESHOLD = 90.0

# 发送邮件的相关配置（使用163邮箱作为例子）
SMTP_SERVER = 'smtp.163.com'
SMTP_PORT = 25
EMAIL_USERNAME = 'your_email@163.com'
EMAIL_PASSWORD = 'your_email_password'
EMAIL_RECEIVER = 'admin_email@xxx.com'

while True:
    cpu_percent = psutil.cpu_percent()

    # 如果CPU利用率超过阈值则发出警报
    if cpu_percent > CPU_THRESHOLD:
        try:
            # 发送邮件通知管理员
            server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
            server.ehlo()
            server.login(EMAIL_USERNAME, EMAIL_PASSWORD)

            message = 'Subject: High CPU Usage\n\nThe CPU usage is currently '+ str(cpu_percent) + '%'
            server.sendmail(EMAIL_USERNAME, EMAIL_RECEIVER, message)

            print("Email notification sent successfully")
        except Exception as e:
            print("Error: ", str(e))

    # 每隔一段时间再次检查CPU利用率
    time.sleep(60)
```

注意：你需要将代码中的 `EMAIL_USERNAME`、`EMAIL_PASSWORD`、`EMAIL_RECEIVER` 邮箱及其密码换成你自己的。