scheme), this means that a simulated copy of (cid:25)0 being run
by Uj has generated a signature on (Uj ; sidi; pidi; acki) and
so, in particular, Uj has ended its execution of (cid:25). It only
remains to show that the value sk0
j held by Uj is identical to
the value sk0
i held by Ui. Since, by construction of the com-
piler, Fski (v0) = acki = Fskj (v0) and F is a collision-resistant
PRF, we have ski = skj except with negligible probability.
Assuming this to be the case, we then have
j = Fskj (v1) = Fski (v1) = sk0
i;
sk0
as desired.
}
Corollary 7. Except with negligible probability, any un-
corrupted players Ui; Uj who share the same values of sid; pid
and who output a session key will in fact output the same
session key.
We now summarize the di(cid:11)erences, from the point of view
of Z, between an interaction of Z with A and with S. The
summary is interspersed with (sketches of) proofs that the
di(cid:11)erences are not noticeable to Z.
(cid:15) Steps 1, 2, and 3 of S do not introduce any di(cid:11)erences
from the point of view of Z.
(cid:15) Step 4(a)(i) introduces two di(cid:11)erences. First, S may abort.
Second, the key output by \dummy" player U 0
i (as observed
by Z) is chosen uniformly at random by FGKE , not as sk0.
j 2 pid n U 0
i
We (cid:12)rst claim that the probability that S aborts at this
If S aborts at this step, it means that
step is negligible.
FGKE has not yet sent (sid; pid; ready) to S or, equivalently,
there exists some player U 0
from whom FGKE
has not yet received (sid; pid; new-session). But Claim 6
shows that, except with negligible probability, all uncor-
rupted players in pid have completed their execution of (cid:25)
and thus, in particular, have sent (sid; pid; new-session) to
FGKE (note that S does not begin running the simulated
copy of (cid:25)0 for a player Uj until S receives (sid; pid; Uj) from
FGKE , and FGKE does not send this message to S until player
U 0
j sends the appropriate \new-session" message to FGKE ).
Since, in step 4(a)(i) all players in pid are uncorrupted, it
follows that S aborts here with only negligible probability.
We claim also that it is computationally indistinguishable
(from the point of view of Z) whether \dummy" player U 0
i
outputs a random session key (as it does in the ideal world)
or Ui outputs the session key sk0 (as would occur in the real
world). We may consider two cases:
1. If A never corrupts any players in the remainder of its
execution, then this claim follows readily from Corol-
lary 7, the assumed AKE-security of (cid:25), and the pseu-
dorandomness of F . (Corollary 7 is needed to argue
that any uncorrupted players who output a session key
in the simulations being provided by S will output
identical session keys, exactly as observed by Z for
the outputs of the dummy players.)
2. If A later corrupts some players in pid, then due to the
way corruptions are handled by S this will not intro-
duce any noticeable di(cid:11)erence from the point of view
of Z (again relying on Claim 6, the assumed AKE-
security of (cid:25), and the pseudorandomness of F ).
In
particular, if a player U 0 2 pid is corrupted before it
outputs a key, then S obtains the key (cid:20) from FGKE
and \patches" the internal state of U 0 appropriately
(cf. step 5(b)). If U 0 2 pid is corrupted after it out-
puts a key, there is nothing to simulate (cf. step 5(c)).
(cid:15) Step 4(a)(ii) introduces the following di(cid:11)erence: the key
output by \dummy" player U 0
i (as observed by Z) is cho-
sen uniformly at random by FGKE , not as sk0. That this is
inconsequential follows a similar line of reasoning as in the
case of step 4(a)(i).
(cid:15) In step 4(b)(i), S may abort. However, this only occurs
if there is some uncorrupted player in pid who has not yet
sent (sid; pid; new-session) to FGKE . As argued in the case
of step 4(a)(i), however, it follows from Claim 6 that this
occurs with only negligible probability.
We remark also that the key sk0 that S sends to FGKE
matches exactly the key that (uncorrupted) player Ui out-
puts. So the simulation is perfect in that respect. Fur-
thermore, Corollary 7 indicates that, except with negligible
probability, if the simulated copy of (cid:25)0 being run on behalf
of any other honest player later outputs a session key, that
key will be sk0.
(cid:15) In step 4(b)(ii), Ui has output a session key sk0 and, fur-
thermore, at the time the (cid:12)rst uncorrupted player (say, Uj )
accepted, all players in pid were uncorrupted. But then
Corollary 7 shows that, with all but negligible probability,
the key sk0 output here is identical to the key previously
output by Uj . Similarly, the session keys output by the
\dummy" parties U 0
j (which are observed by Z) will
be identical.
i and U 0
(cid:15) In step 4(b)(iii), S may abort.
In this step, there was
an uncorrupted player who previously output session key
sk00. Corollary 7 indicates that every uncorrupted player
who outputs a session key will output the same session key
sk00. So, S will not abort except with negligible probability.
(cid:15) Steps 5(a) and 5(c) do not introduce any di(cid:11)erences from
the point of view of Z (note, in particular, that since S has
not sent the \ok" message to FGKE , no session key has yet
been chosen by FGKE in step 5(a)).
(cid:15) In step 5(b), note that if S has sent an \ok" message to
FGKE then there must be some other player Uj (di(cid:11)erent
from the player Ui being corrupted in this step) who was
uncorrupted at the time it accepted (this is because S only
sends the \ok" message when this occurs). From Claim 6,
this means that with all but negligible probability Ui indeed
has a value acki as part of its internal state (and so S will
not abort in this step). It then follows from the pseudoran-
domness of F that including the value (cid:20) (that was output
already by \dummy" player U 0
j ) in the internal state is com-
putationally indistinguishable from using the actual session
key computed by Ui.
This completes our sketch of the proof.
5. CONCLUSION
This paper provides a formal and comprehensive way of
modeling insider attacks in group key-exchange protocols
by suggesting an ideal functionality for group key exchange
within the UC framework. We show that the de(cid:12)nition in-
troduced here is strictly stronger than that of AKE-security,
and that it also encompasses prior de(cid:12)nitions of security
against insider attacks. We then show a simple and e(cid:14)-
cient compiler which transforms any AKE-secure protocol
into one secure with respect to our de(cid:12)nition. We hope the
framework introduced here will provide a basis for future
work analyzing the security of existing group key-exchange
protocols, and will also serve as a tool toward developing
more e(cid:14)cient protocols secure against insider attacks.
6. REFERENCES
[1] Y. Amir, Y. Kim, C. Nita-Rotaru, J. Schultz, J.
Stanton, and G. Tsudik. Exploring Robustness in
Group Key Agreement. ICDCS 2001.
[2] M. Bellare and P. Rogaway. Entity Authentication
and Key Distribution. Crypto ’93.
[3] M. Bellare and P. Rogaway. Provably-Secure Session
Key Distribution: the Three Party Case. STOC ’95.
[4] M. Bellare, R. Canetti, and H. Krawczyk. A Modular
Approach to the Design and Analysis of
Authentication and Key Exchange Protocols. STOC
’98.
[5] M. Bellare, D. Pointcheval, and P. Rogaway.
Authenticated Key Exchange Secure Against
Dictionary Attacks. Eurocrypt 2000.
[6] S. Blake-Wilson, D. Johnson, and A. Menezes. Key
Exchange Protocols and Their Security Analysis.
Proc. 6th IMA Intl. Conf. on Cryptography and
Coding, 1997.
[7] E. Bresson, O. Chevassut, D. Pointcheval, and J.
Quisquater. Provably Authenticated Group
Di(cid:14)e-Hellman Key Exchange. ACM CCCS 2001.
[8] E. Bresson, O. Chevassut, and D. Pointcheval.
Provably Authenticated Group Di(cid:14)e-Hellman Key
Exchange | The Dynamic Case. Asiacrypt 2001.
[9] E. Bresson, O. Chevassut, and D. Pointcheval.
Dynamic Group Di(cid:14)e-Hellman Key Exchange under
Standard Assumptions. Eurocrypt 2002.
[10] R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten,
R. Molva, and M. Yung. Systematic Design of
Two-Party Authentication Protocols. Crypto ’91.
[11] C. Cachin and R. Strobl. Asynchronous Group Key
Exchange With Failures. PODC 2004.
[12] R. Canetti. Universally Composable Security: A New
Paradigm for Cryptographic Protocols. Manuscript
dated Jan. 28, 2005, available at
http://eprint.iacr.org/2000/067. A preliminary version
appeared in FOCS 2001.
[13] R. Canetti and H. Krawczyk. Analysis of
Key-Exchange Protocols and Their Use for Building
Secure Channels. Eurocrypt 2001.
[14] R. Canetti and H. Krawczyk. Universally Composable
Notions of Key Exchange and Secure Channels.
Eurocrypt 2002. Full version available at
http://eprint.iacr.org/2002/059.
[15] R. Canetti and T. Rabin. Universal Composition with
Joint State. Crypto 2003.
[16] Z. Cheng, L. Vasiu, and R. Comley. Pairing-Based
One-Round Tripartite Key Agreement Protocols.
Available at http://eprint.iacr.org/2004/079.
[17] H.-Y. Chien. Comments: Insider Attack on Cheng et
al.’s Pairing-Based Tripartite Key Agreement
Protocols. Available at
http://eprint.iacr.org/2005/013.
[18] W. Di(cid:14)e and M. Hellman. New Directions in
Cryptography. IEEE Trans. Info. Theory 22(6):
644{654 (1976).
[19] W. Di(cid:14)e, P. van Oorschot, and M. Wiener.
Authentication and Authenticated Key Exchanges.
Designs, Codes, and Cryptography 2(2): 107{125
(1992).
[20] X. Du, Y. Wang, J. Ge, and Y. Wang. An Improved
ID-Based Authenticated Group Key Agreement
Scheme. Available at http://eprint.iacr.org/2003/260.
[21] M. Fischlin. Pseudorandom Function Tribe Ensembles
Based on One-Way Permutations: Improvements and
Applications. Eurocrypt ’99.
[22] O. Goldreich, S. Goldwasser, and S. Micali. How to
Construct Random Functions. J. ACM 33(4):
792{807 (1986).
[23] J. Katz and M. Yung. Scalable Protocols for
Authenticated Group Key Exchange. Crypto 2003.
Full version available at
http://www.cs.umd.edu/~jkatz/papers.html.
[24] G. Lowe. A Hierarchy of Authentication Speci(cid:12)cations.
Computer Security Foundations Workshop ’97.
[25] B. P(cid:12)tzmann, M. Steiner, and M. Waidner. A Formal
Model for Multi-Party Group Key Agreement.
Technical Report RZ-3383 (#93419), IBM Research.
[26] B. P(cid:12)tzmann and M. Waidner. A Model for
Asynchronous Reactive Systems and Its Application
to Secure Message Transmission. IEEE Security and
Privacy, 2001.
[27] S. Saeednia and R. Safavi-Naini. E(cid:14)cient
Identity-Based Conference Key-Distribution
Protocols. ACISP ’98.
[28] K. Shim. Cryptanalysis of Al-Riyami-Paterson’s
Authenticated Three Party Key Agreement Protocols.
Available at http://eprint.iacr.org/2003/122.
[29] V. Shoup. On Formal Models for Secure Key
Exchange. Available at
http://eprint.iacr.org/1999/012.
[30] M. Steiner. Secure Group Key Agreement. PhD
Thesis, Universitat des Saarlandes, 2002. Available at
http://www.semper.org/sirene/publ/Stei_02.thesis-
(cid:12)nal.pdf.
[31] H.-M. Sun and B.-T. Hsieh. Security Analysis of
Shim’s Authenticated Key Agreement Protocols from
Pairings. Available at http://eprint.iacr.org/2003/113.
[32] Q. Tang and C.J. Mitchell. Rethinking the Security of
Some Authenticated Group Key Agreement Schemes.
Available at http://eprint.iacr.org/2004/348.
[33] F. Zhang and X. Chen. Attack on an ID-based
Authenticated Group Key Agreement Scheme from
PKC 2004. Info. Proc. Lett. 91(4): 191{192 (2004).
Also available at http://eprint.iacr.org/2003/259.