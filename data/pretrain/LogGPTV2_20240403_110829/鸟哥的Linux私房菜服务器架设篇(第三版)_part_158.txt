sender: root
recipient: root <==就是收件者啰！
PI:EMAIL
*** MESSAGE CONTENTS 5CFBB21DB *** <==底下则是信件的实际内容啊！
Date: Tue, 09 Aug 2011 14:21:58 +0800
To: root
Subject: testing queue
User-Agent: Heirloom mailx 12.4 7/29/08
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
test
*** HEADER EXTRACTED 5CFBB21DB ***
*** MESSAGE FILE END 5CFBB21DB ***
如此一来你就知道目前我们的 MTA 主机有多少未送出的信件，还有未送出信件的内容
你也可以追踪的到了！ 很不错，对吧！不过，如果你想要我们的 postfix 立刻尝试将
这些在队列当中的信件寄出去，那又该如何是好？ 你有几个作法啦，可以重新启动
postfix ，也可以透过 postfix 的动作来处理，例如：
[root@www ~]# /etc/init.d/postfix restart
[root@www ~]# postfix flush
鸟哥个人比较建议使用 postfix flush 啰！自行参考看看先！ ^_^！接下来，让我们
先来处理一下收信的 MRA 服务器， 搞定后再来处理客户端的用户接口吧！
22.2.9 防火墙设置
因为整个 MTA 主要是透过 SMTP (port 25) 进行信件传送的任务，因此，针对
postfix 来说，只要放行 port 25 即可呦！ 修改一下 iptables.rule 吧！
[root@www ~]# vim /usr/local/virus/iptables/iptables.rule
# 找到底下这一行，并且将它批注拿掉！
iptables -A INPUT -p TCP -i $EXTIF --dport 25 --sport 1024:65534 -j
ACCEPT
[root@www ~]# /usr/local/virus/iptables/iptables.rule
这样就放行整个 Internet 对您服务器的 port 25 的读取啰！简单！搞定！
PI:EMAIL
22.3 MRA 服务器： dovecot 设定
除非你想要架设 webmail 在你的 MTA 上头，否则，你的 MTA 收下了信件，你总
得连上 MTA 去收信吧？那么收信要用的是哪个通讯协议？ 就是 22.1.4 里面谈到的
pop3 以及 imap 啰！这就是所谓的 MRA 服务器！我们的 CentOS 6.x 使用的是
dovecot 这个软件来达成 MRA 的相关通讯协议的！但由于 pop3/imap 还有数据加密的
版本，底下我们就依据是否加密 (SSL) 来设定 dovecot 吧！
22.3.1 基础的 POP3/IMAP 设定
启动单纯的 pop3/imap 是很简单的啦，你得要先确定已经安装了 dovecot 这个软
件。而这个软件的配置文件只有一个，就是 /etc/dovecot/dovecot.conf 。我们仅要
启动 pop3/imap 而已，所以可以这样设定即可：
[root@www ~]# yum install dovecot
[root@www ~]# vim /etc/dovecot/dovecot.conf
# 找到底下这一行，大约是在第 25 行左右的地方，复制新增一行内容如下：
#protocols = imap pop3 lmtp
protocols = imap pop3
[root@www ~]# vim /etc/dovecot/conf.d/10-ssl.conf
ssl = no <==将第 6 行改成这样！
改完之后你就可以启动 dovecot 啰！并且检查看看 port 110/143 (pop3/imap) 有没
有启动啊？
[root@www ~]# /etc/init.d/dovecot start
[root@www ~]# chkconfig dovecot on
[root@www ~]# netstat -tlnp | grep dovecot
Proto Recv-Q Send-Q Local Address Foreign Address State
PID/Program name
tcp 0 0 :::110 :::* LISTEN
14343/dovecot
tcp 0 0 :::143 :::* LISTEN
14343/dovecot
耶！搞定！这样就可以提供使用者来收信件啦！真是不错啊！不过记得喔，这里只提供
基本的明码 pop3/imap 传输而已， 如果想要启动其他如 pop3s (传输加密机制) 协议
时，就得要额外的设定啰！
PI:EMAIL
22.3.2 加密的 POP3s/IMAPs 设定
如果担心数据在传输过程会被窃取，或者是你的登入信息 (账号与密码) 在使用
pop3/imap 时会被窃听， 那么这个 pop3s/imaps 就显的重要啦！与之前的 Apache 相
似的，其实我们都是透过 openssl 这个软件提供的 SSL 加密机制来进行数据的加密传
输。方式很简单呢！预设的情况下，CentOS 已经提供了 SSL 凭证范例文件给我们使用
了。 如果你一点都不想要使用预设的凭证，那么我们就来自己建一个吧！
# 1. 建立凭证：到系统提供的 /etc/pki/tls/certs/ 目录下建立所需要的 pem
凭证档：
[root@www ~]# cd /etc/pki/tls/certs/
[root@www certs]# make vbirddovecot.pem
....(前面省略)....
Country Name (2 letter code) [XX]:TW
State or Province Name (full name) []:Taiwan
Locality Name (eg, city) [Default City]:Tainan
Organization Name (eg, company) [Default Company Ltd]:KSU
Organizational Unit Name (eg, section) []:DIC
Common Name (eg, your name or your server's hostname)
[]:www.centos.vbird
Email Address []:PI:EMAIL
# 2. 因为担心 SELinux 的问题，所以建议将 pem 档案放置到系统默认的目
录去较佳！
[root@www certs]# mv vbirddovecot.pem ../../dovecot/
[root@www certs]# restorecon -Rv ../../dovecot
# 3. 开始处理 dovecot.conf，只要 pop3s, imaps 不要明码传输的咯！
[root@www certs]# vim /etc/dovecot/conf.d/10-auth.conf
disable_plaintext_auth = yes <==第 9 行改成这样！取消批注！
[root@www certs]# vim /etc/dovecot/conf.d/10-ssl.conf
ssl = required <==第 6 行改成这样
ssl_cert = </etc/pki/dovecot/vbirddovecot.pem <==12, 13 行变这样
ssl_key = </etc/pki/dovecot/vbirddovecot.pem
[root@www certs]# vim /etc/dovecot/conf.d/10-master.conf
inet_listener imap {
port = 0 <== 15 行改成这样
}
inet_listener pop3 {
PI:EMAIL
port = 0 <== 36 行改成这样
}
# 4. 处理额外的 mail_location 设定值！很重要！否则网络收信会失败：
[root@www certs]# vim /etc/dovecot/conf.d/10-mail.conf
mail_location = mbox:~/mail:INBOX=/var/mail/%u <==第 30 行改这样
# 5. 重新启动 dovecot 并且观察 port 的变化：
[root@www certs]# /etc/init.d/dovecot restart
[root@www certs]# netstat -tlnp | grep dovecot
Proto Recv-Q Send-Q Local Address Foreign Address State
PID/Program name
tcp 0 0 :::993 :::* LISTEN
14527/dovecot
tcp 0 0 :::995 :::* LISTEN
14527/dovecot
最终你看到的 993 是 imaps 而 995 则是 pop3s 啰！这样一来，你收信的时候，输入
的账号密码就不怕被窃听了！ 反正是加密后的资料啰！很简单吧！
22.3.3 防火墙设置
因为上面的练习中，我们将 pop3/imap 关闭，转而打开 pop3s/imaps 了，因此防
火墙启动的埠口会不一样！ 请依据您实际的案例来设定你所需要的防火墙才好。我们
这里主要是开放 993, 995 两个埠口呦！ 处理的方法与 22.2.9 相当类似：
[root@www ~]# vim /usr/local/virus/iptables/iptables.rule
# 大约在 180 行左右，新增底下两行去！
iptables -A INPUT -p TCP -i $EXTIF --dport 993 --sport 1024:65534 -j
ACCEPT
iptables -A INPUT -p TCP -i $EXTIF --dport 995 --sport 1024:65534 -j
ACCEPT
[root@www ~]# /usr/local/virus/iptables/iptables.rule
如果你的 pop3/imap 还是决定不加密的话，请将上面的 993/995 改成 143/110 即可！
PI:EMAIL
22.4 MUA 软件：客户端的收发信软件
设定 Mail server 不是拿来好看的，当然是要好好的应用他啰！应用 mail server
有两种主要的方式，你可以直接登入 Linux 主机来操作 MTA ，当然也可以透过客户端
的 MUA 软件来收发信件，底下我们分别介绍这两种方式啰！
22.4.1 Linux mail
在 Unix like 的操作系统当中都会存有一支可以进行收发信件的软件，那就是
‘ mail ’这个指令。这个指令是由 mailx 这个软件所提供的，所以您得要先安装这
个软件才行。另外，由于 mail 是 Linux 系统的功能，所以即使你的 port 25 (smtp)
没有启动，他还是可以使用的，只是该封邮件就只会被放到队列，而无法寄出去啰！^_^！
底下我们来谈一谈最简单的 mail 用法吧
用 mail 直接编辑文字邮件与寄信
mail 的用法很简单，就是利用‘ mail [email address] ’的方式来将信件寄出
去， 那个 [email address] 可以是对外的邮件地址，也可以是本机的账号。如果是本
机账号的话，可以直接加账号名称即可。 例如：‘ mail root ’或‘ mail
PI:EMAIL ’。如果是对外寄信的时候， 信件预设的‘ Mail from ’
就会填写 main.cf 内那个 myorigin 变数的主机名啰！ 先来试看看吧！寄给
PI:EMAIL 先：
[root@www ~]# mail PI:EMAIL
Subject: Just test <==这里填写信件标题
This is a test email. <==底下为信件的内容！
bye bye !
. <==注意，这一行只有小数点！代表结束输入之
意！
这样就可以将信件寄出去了！另外，早期的 mail server 是可以接受 IP 寄信的，举
例来说： mail dmtsai@[192.168.100.254] ，记得 IP 要用中括号包起来。不过由于
受到垃圾邮件的影响， 现在这种方式几乎都无法成功的将信件寄出了。
利用已经处理完毕的‘纯文本档’寄出信件
PI:EMAIL
这可不是‘附件夹带’的方式！因为在 mail 这个程序里面编辑信件是个很痛苦的
差事， 你不能够按上下左右键来回到刚刚编辑有错误的地方，很伤脑筋。此时我们可
以透过标准输入来处理！ 如果你忘记‘ < ’代表的意义，请回到基础篇的第十一章 bash
shell中的数据流重导向瞧瞧先！举例来说你要将家目录的 .bashrc 寄给别人，可以
这样做：
[root@www ~]# mail -s 'My bashrc' dmtsai < ~/.bashrc
开始查阅接收的信件
寄信还比较简单，那么收信呢？同样的收信还是使用 mail。直接在提示字符之后
输入 mail 时，会主动的捉取使用者在 /var/spool/mail 底下的邮件信箱 (mailbox)，
例如我 dmtsai 这个账号在输入 mail 后，就会将 /var/spool/mail/dmtsai 这个档案
的内容读出来并显示到屏幕上，结果如下：
# 注意喔！底下的身份使用的是 dmtsai 这个用户来操作 mail 这个指令的呦！
[dmtsai@www ~]$ mail
Heirloom Mail version 12.4 7/29/08. Type ? for help.