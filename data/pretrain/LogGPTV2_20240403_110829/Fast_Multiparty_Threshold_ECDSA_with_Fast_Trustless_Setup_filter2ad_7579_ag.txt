Veriﬁer.
1 hs2
26
Rosario Gennaro and Steven Goldfeder
Completeness. By inspection.
Soundness. Let ˜N , ˜s be our Strong RSA challenge. We show how to solve it using a Prover who
succeeds on incorrect instances (i.e. where |m| > q3).
2 for a random χ ∈ Zq ˜N . It is not hard to see that the distribution of
Let h2 = ˜s and h1 = hχ
these values is indistinguishable from the real one with suﬃciently high probability.
Run the Prover on a successful execution over a challenge e and then rewind him and ﬁnd a
successful execution with challenge ˆe. Therefore we have the same ﬁrst message z, u, w and two
set of answers s, s1, s2 for challenge e, and ˆs, ˆs1, ˆs2 for challenge ˆe both satisfying the veriﬁcation
equations. Let ∆E = e − ˆe, ∆s1 = s1 − ˆs1 and ∆s2 = s2 − ˆs2.
Let λ = GCD(∆s2 + χ∆s1, ∆E). Assume λ (cid:54)= ∆E: denote with λs = (∆s2 + χ∆s1)/λ and
λE = ∆E/λ > 1. Then we ﬁnd µ, ν such that µλs + νλE = 1.
Then the solution to the Strong RSA challenge is ˜x = zµ˜sν mod ˜N , λE. Indeed note that
w = hs1
1 hs2
2 z−e = hˆs1
1 hˆs2
2 z−ˆe mod ˜N
therefore
which implies
Concluding
z∆E = h∆s1
1 h∆s2
2 = ˜s∆s2+χ∆s1 mod ˜N
zλE = ˜sλS mod ˜N
˜s = ˜sµλs+νλE = [zµ˜sν]λE mod ˜N
We now need to prove that the case λ = ∆E cannot happen with high probability.
Consider ﬁrst the case λ = ∆E but ∆E does not divide ∆s1. Write χ = χ0 +χ1 ˜p˜q with χ1 chosen
uniformly at random from a set of size > q. Note that the value χ1 is information theoretically
secret from the adversary (who only has h1, h2). We have that
∆s2 + χ∆s1 = ∆s2 + χ0∆s1 + χ1∆s1 ˜p˜q
Then there is a prime power ab (with a ≥ 2) such that ab|∆E, ab−1|∆s1 but ab does not divide
∆s1. Note that this implies that ab−1|∆s2. Set c0 = (∆s2 + χ0∆s1)/ab−1 and c1 = ∆s1 ˜p˜q/ab−1.
We have that c0 + χ1c1 = 0 mod a and c1 (cid:54)= 0 mod a. The number of elements χ1 for which this
equivalence holds is at most q/a + 1 and thus the probability of this holding for a random choice
q . Otherwise we are in the case above with λ (cid:54)= ∆E.
of χ1 is at most 1
Now consider the case λ = ∆E and ∆E|∆s1. Note that this implies that ∆E|∆s2 as well. Deﬁne
m1 = ∆s1/∆E, ρ1 = ∆s2/∆E, α1 = (eˆs1 − ˆes1)/∆E, γ1 = (eˆs2 − ˆes2)/∆E.
2 mod ˜N , s1 = em1 + α1 and ˆs1 = ˆem1 + α1.
1 = (eˆs1 − ˆes1)∆−1
E mod N . Note that since
1 hγ1
E mod N and α(cid:48)
1 hρ1
1 = ∆s1∆−1
q which is at most 1
2 mod ˜N , w = hα1
a + 1
2 + 1
These ensure that z = hm1
Finally denote with m(cid:48)
m(cid:48)
1 = m1 mod N and α(cid:48)
1 = α1 mod N , there must be r1, β(cid:48) ∈ Z∗
N such that
c = Γ m(cid:48)
1rN
1
and u = Γ α(cid:48)
1 (β(cid:48))N mod N 2
At this point we know the following facts
s1  q7.
1 hs2
1 ∈
1 + α1 mod N
1 + α1 mod N
Fast Multiparty Threshold ECDSA with Fast Trustless Setup
27
A.2 Respondent ZK Proof for MtAwc
This proof is run by Bob (the responder) in the MtAwc protocol. For the MtA protocol a simpler
version of this proof if needed, which we present later.
The input for this proof is a Paillier public key N, Γ and two values c1, c2 ∈ ZN 2, together with
a value X in G the DSA group.
The Prover knows x ∈ Zq, y ∈ ZN and r ∈ Z∗
1 Γ yrN mod N 2, and X = gx ∈
G, where q is the order of the DSA group.
At the end of the protocol the Veriﬁer is convinced of the above and that x ∈ [−q3, q3].
– The Prover selects α ∈R Zq3, ρ ∈R Zq ˜N , ρ(cid:48) ∈R Zq3 ˜N , σ ∈ Zq ˜N , β ∈R Z∗
N , γ ∈R Z∗
N such that c2 = cx
N and
2 mod ˜N , z(cid:48) = hα
1 hρ(cid:48)
2 mod ˜N , t = hy
1hσ
2 mod ˜N , v =
τ ∈R Zq ˜N .
The Prover computes u = gα, z = hx
1 Γ γβN mod N 2, and w = hγ
cα
The Prover sends u, z.z(cid:48), t, v, w to the Veriﬁer.
1 hρ
2 mod ˜N .
1 hτ
– The Veriﬁer selects a challenge e ∈R Zq and sends it to the Prover.
– The Prover computes s = reβ mod N , s1 = ex + α, s2 = eρ + ρ(cid:48), t1 = ey + γ and t2 = eσ + τ .
– The Veriﬁer checks that s1 ≤ q3, g1 = X eu ∈ G, hs1
The Prover sends s, s1, s2, t1, t2 to the Veriﬁer.
2 = zez(cid:48) mod ˜N , ht1
2 = tew mod ˜N ,
1 hs2
1 ht2
and cs1
1 sN Γ t1 = ce
2v mod N 2.
Completeness. By inspection.
Soundness. Let ˜N , ˜s be our Strong RSA challenge. We show how to solve it using a Prover who
succeeds on incorrect instances (i.e. where |x| > q3).
2 for a random χ ∈ Zq ˜N . It is not hard to see that the distribution of
Let h2 = ˜s and h1 = hχ
these values is indistinguishable from the real one with suﬃciently high probability.
Run the prover on a successful execution over a challenge e and then rewind him and ﬁnd a
successful execution with challenge ˆe. Therefore we have the same ﬁrst message u, z, z(cid:48), t, v, w and
two set of answers s, s1, s2, t1, t2 for challenge e, and ˆs, ˆs1, ˆs2, ˆt1, ˆt2 for challenge ˆe both satisﬁng
theveriﬁcation equations. Let ∆E = e − ˆe, ∆s1 = s1 − ˆs1, ∆s2 = s2 − ˆs2, ∆t1 = t1 − ˆt1 and
∆t2 = t2 − ˆt2.
Let λ = GCD(∆s2 + χ∆s1, ∆E). Assume λ (cid:54)= ∆E: denote with λs = (∆s2 + χ∆s1)/λ and
λE = ∆E/λ > 1. Then we ﬁnd µ, ν such that µλs + νλE = 1.
Then the solution to the Strong RSA challenge is ˜x = zµ˜sν mod ˜N , λE. Indeed note that
z(cid:48) = hs1
2 z−e = hˆs1
1 hˆs2
2 z−ˆe mod ˜N
1 hs2
therefore
which implies
Concluding
z∆E = h∆s1
1 h∆s2
2 = ˜s∆s2+χ∆s1 mod ˜N
zλE = ˜sλS mod ˜N
˜s = ˜sµλs+νλE = [zµ˜sν]λE mod ˜N
we can solve our Strong RSA challenge.
Let λ(cid:48) = GCD(∆t2 + χ∆t1, ∆E). In a similar way as above we can prove that if λ(cid:48) (cid:54)= ∆E then
Therefore we can limit ourselves to the case λ = λ(cid:48) = ∆E.
Consider ﬁrst the case λ = λ(cid:48) = ∆E but ∆E does not divide ∆s1. Write χ = χ0 + χ1 ˜p˜q with
χ1 chosen uniformly at random from a set of size > q. Note that the value χ1 is information
theoretically secret from the adversary (who only has h1, h2). We have that
∆s2 + χ∆s1 = ∆s2 + χ0∆s1 + χ1∆s1 ˜p˜q
28
Rosario Gennaro and Steven Goldfeder
Then there is a prime power ab (with a ≥ 2) such that ab|∆E, ab−1|∆s1 but ab does not divide
∆s1. Note that this implies that ab−1|∆s2. Set c0 = (∆s2 + χ0∆s1)/ab−1 and c1 = ∆s1 ˜p˜q/ab−1.
We have that c0 + χ1c1 = 0 mod a and c1 (cid:54)= 0 mod a. The number of elements χ1 for which this
equivalence holds is at most q/a + 1 and thus the probability of this holding for a random choice
q . Otherwise we are in the case above with λ (cid:54)= ∆E.
of χ1 is at most 1
In a similar fashion we can remove the case in which λ = λ(cid:48) = ∆E but ∆E does not divide ∆t1.
Now consider the case λ = λ(cid:48) = ∆E with ∆E|∆s1 and ∆E|∆t1. Note that this implies that
Deﬁne x1 = ∆s1/∆E, ρ1 = ∆s2/∆E, α1 = (eˆs1 − ˆes1)/∆E, ρ(cid:48)
1 = (eˆs2 − ˆes2)/∆E, y1 = ∆t1/∆E,
Deﬁne x(cid:48)
∆E|∆s2 and ∆E|∆t2as well.
σ1 = ∆t2/∆E, γ1 = (eˆt1 − ˆet1)/∆E and τ1 = (eˆt2 − ˆet2)/∆E.
q which is at most 1
1 = y1 mod N . Note that by deﬁnition
1 = x1 mod N and y(cid:48)
a + 1
2 + 1
cx(cid:48)
1 Γ y(cid:48)
1
1 κN = c2 mod N 2
for some κ as needed. And gx1 = X ∈ G. So we have extracted the required x, y. As in the previous
proof we can establish that x1, x(cid:48)
Honest-Verifier Zero-Knowledge. The simulator proceeds as in [29] and in the previous ZK
proof.
1 ∈ [−q3, q3].
A.3 Respondent ZK Proof for MtA
This proof is run by Bob (the responder) in the MtA protocol. It is a simpler version of the previous
protocol where Bob only proves that x is small (without proving that it is the discrete log of any
public value).
order of the DSA group.
The input for this proof is a Paillier public key N, Γ and two values c1, c2 ∈ ZN 2 .
The Prover knows x ∈ Zq, y ∈ ZN and r ∈ Z∗
At the end of the protocol the Veriﬁer is convinced of the above and that x ∈ [−q3, q3].
N , γ ∈R Z∗
– The Prover selects α ∈R Zq3 , ρ ∈R Zq ˜N , ρ(cid:48) ∈R Zq3 ˜N , σ ∈ Zq ˜N , β ∈R Z∗
N such that c2 = cx
1 Γ yrN mod N 2 where q is the
N and
– The Veriﬁer selects a challenge e ∈R Zq and sends it to the Prover.
– The Prover computes s = reβ mod N , s1 = ex + α, s2 = eρ + ρ(cid:48), t1 = ey + γ and t2 = eσ + τ .
– The Veriﬁer checks that s1 ≤ q3, hs1
The Prover sends s, s1, s2, t1, t2 to the Veriﬁer.
2 = zez(cid:48) mod ˜N , ht1
2 = tew mod ˜N , and cs1
1 sN Γ t1 =
1 hs2
1 ht2
2v mod N 2.
ce
The proof is immediate from the previous one.
τ ∈R Zq ˜N .
The Prover computes z = hx
2 mod ˜N .
N 2, and w = hγ
The Prover sends z, z(cid:48), t, v, w to the Veriﬁer.
2 mod ˜N , z(cid:48) = hα
1 hρ
1 hτ
1 hρ(cid:48)
2 mod ˜N , t = hy
1hσ
2 mod ˜N , v = cα
1 Γ γβN mod