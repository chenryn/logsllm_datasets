money-making apps similar to PPI apps, and we conjecture
that other dropped apps were advertising through PPI apps.
Finally, 23 apps create VMs or modify/emulate Android,
which impact the rankings by introducing devices used for AV-
testing and other atypical purposes. Through experiments de-
scribed in Section VII-D, we found that eliminating 8 Android-
mod apps indicative of AV-testing results in the disappearance
of 15 additional None - Android Mods VM apps and other
None apps. We also experimented with eliminating both PPI
and AV-test apps prior to running CreepRank. This drops both
FP None apps and TP creepware from the top 1,000, 64% of
which are creepware. These lost TP’s are replaced by apps that
are 85% creepware, which would have improved the rankings
while making them more representative of normal devices.
VII. MAKING SENSE OF THE CREEPWARE ECOSYSTEM
The investigations described thus far uncovered a larger
than expected ecosystem of creepware apps that includes many
varieties of abuse apps of which we were previously unaware.
Here we perform a sequence of small analyses to try to
better understand this ecosystem. First, we use the context in
which apps are installed to infer the most probable creepware-
relevant use of apps whose intent was ambiguous or unclear
(Section VII-A). Next, we seed CreepRank with various seed
sets to examine the extent and character of interesting sub-
categories of the creepware ecosystem (Section VII-B). We
contrast proﬁles of attacker and victim devices in Section
VII-C, and conclude this section with an investigation into
the role that Norton’s security app seems to play with respect
to creepware (Section VII-D). Finally, we look for changes in
creepware trends over time by analyzing a more recent year
of data, in Section VII-E.
A. Potential Use Cases of Creepware
While coding, we hypothesized about how various types
of creepware might be used. Although we have no data that
directly measures usage, app installation patterns yield circum-
stantial evidence about how people might intend to use an app.
For each category of creepware apps, we examined the context
in which individual apps pertaining to the category appear. To
this end, for each pair of creepware apps a and b that we coded,
we calculated the pointwise mutual information (PMI) [35]
measure, which represents the amount of information that the
existence of app a has on the appearance of app b on the same
p(a,b)
p(a)p(b) where p is the
device. More precisely, pmi(a; b) = log
probability function. For apps in each category and those that
were not conﬁdently coded, we examined the apps that had
the highest PMI values with respect to that app. To remove
noise we excluded PMI values for apps that co-occurred once.
There were several instances in which our initial hypotheses
about
the purposes of individual apps were shown to be
incorrect. In some instances, coders had envisioned a malicious
use for an app that was not observed in practice. More often,
we discovered unsuspected malicious uses. We now describe
several examples of apps that we either re-categorized as a
result of their PMI scores (these are correctly reﬂected in
Figure 4) or that conﬁrmed our hypotheses (see Appendix B
for additional PMI data and Table IX for details of these apps):
The “Lodefast Check Cashing App” allows users to cash
checks without visiting a bank. It has high PMI values with
the “Card Details Finder”, “Bin Checker”, and “Bank Card
Validator” apps, indicating that the app is likely used for fraud
by some users despite good intentions by its developers.
“SMS Retaliator” seems useful for both attack and defense.
We initially coded it as an anti-harassment tool because of
its SMS blocking features, but PMI values indicate that it is
typically used alongside message-bombing and attack apps.
We saw no signs of it appearing alongside victim-side apps.
The “Unseen - No Last Seen” app is the most prevalent app
for covert access to social media. This app co-occurs primarily
with other covert access apps, but also with fake surveillance
apps, suggesting that it is sometimes used by attackers.
The “Edit Website” app is one of several that enable users to
make temporary website edits that persist until the browser is
refreshed. This app provides a WYSIWIG editor for websites
and is routinely installed alongside with users of spooﬁng,
surveillance, and fake surveillance apps. Its description states
that “The obvious use of this application would be to prank
friends by changing headlines of news articles or paragraphs.”
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
634
Apps with similar functionality that advertise for web devel-
opment seem not to be used for attacks.
Finally, correlation data shows that many apps that purport
to be intended for child online safety have highest PMI with
apps that are unambiguously intended for intimate partner
surveillance. It is unsurprising that the “Family Locator for
Android” app appears alongside abuse apps, as its previous ti-
tle was “GirlFriend Cell Tracker.” “Cell Tracker”, on the other
hand, is the most prevalent app with thorough surveillance
capabilities in the top 1,000 list and its marketing focuses
on child safety. Although it does seem likely to be used in
this way, it also correlates strongly with “Cheating Spouse”,
“Where the hell are you?”, and “Boyfriend Tracker Free,” none
of which seem indicative of use on a child’s phone.
B. Finding More Creepware with Alternate Seed Sets
CreepRank can also be used to surface other classes of
apps. We now describe how we further explored the creepware
ecosystem by running CreepRank with different app seed sets.
Seeding with Harassment - Bomber Apps. We selected the 7
bombing apps that had been most conﬁdently coded as being
entirely designed for harassment. We ran CreepRank using
these apps as the seed set and coded the top 50 results (see
Table IIIa). We discovered 15 more bomber apps in the top
50. We found 26 more bombers in the top 1,000 by examining
the 49 apps with the following search terms in their title or
app ID: SMS, bomb, dial, blast, spam, empty, blank.
Users that install bomber apps are also likely to install apps
that auto-like or auto-comment on social media, presumably
to bomb and harass. Interestingly, nearly all auto-liking apps
do not appear to deliver on their promise, self-identifying as
“pranks”, with the notable exception of “404liker”, which is
often installed alongside malware. We found that several apps
coded under Evasion - Steganography, because they could
help abusers evade censoring, are typically co-installed with
bombers. These apps create huge strings of text or emojis
out of short messages or images that are sent repeatedly by
bombers to amplify the impact of their attacks. These bombing
attacks would be costly for victims that do not have unlimited
SMS messaging. Other apps in the top 50 are in unrelated
creepware categories, except perhaps for “SMS-encryption”,
which might be used for large string generation.
Seeding with Spoof SMS apps. To better understand how
SMS Spooﬁng apps are used, we seeded CreepRank with 18
Spoof - SMS apps and coded their intent and that of the top
50 apps (see Table IIIb). Among these 68 apps, we found 32
that enable impersonation. Pernicious use of these apps, such
as to damage a victim’s relationships, is directly suggested
in marketing materials for some of these apps (see Figure 1).
Such apps could also be used to elicit compromising responses
from intimate partners that are suspected of inﬁdelity, similar
to the attack suggested by the tutorial app in Figure 6b. Of
particular interest are eight impersonation apps that enable
entire conversations to be falsiﬁed, which seem to be mostly
about constructing false evidence, such as the “Sending Fake
SMS app”, which markets itself to unfaithful intimate partners
for falsifying alibis. Several others are intended for installation
on a victim’s phone, where mimicked SMS, Facebook, or
WhatsApp notiﬁcations sent by the abuser can cause the
victim to open the spooﬁng app thinking that
they have
received a genuine message from whomever the abuser chose
to impersonate. These apps have clear parallels to phishing
attacks but are under-studied.
PMI values indicate that the 15 anonymity-focused apps are
used by abusers more than victims, possibly to send anony-
mous messages that are difﬁcult to block. “SMS Receive”
and similar apps enable users to receive messages at shared
anonymized numbers, such as for 2-factor authentication no-
tiﬁcations, and in conjunction with apps that provide burner-
phone and temporary email services. Rounding out the top 50
are 19 attack apps (mostly surveillance) and 2 defensive apps.
Seeding with Control-Hide Icon apps. Table IIIc shows
the top 50 results when we seed CreepRank with nine icon-
hiding apps. The top 50 includes 12 app-hiders, three of which
camouﬂage other apps by changing their icons or metadata,
while the rest hide app icons from the user interface. Several
apps hide their own icons, while others camouﬂage themselves
by posing as a calculator, currency exchanger, or ﬂashlight.
Three of the hidden apps can only be opened by calling a
fake phone number, while most other hidden-content apps
require some sort of passcode. Users of app-hiders frequently
install apps that hide content, many of which provide dual
public and secret channels for content and/or communication.
Also noteworthy is “Hidden Apps”, a defensive app that
reveals the presence of hidden apps. The top 50 contained 9
additional defensive apps that provide access control for some
combination of the device itself, its apps, and incoming phone
calls. Eight other attack apps round out the top 50 results.
Hacking Tutorials. For further conﬁrmation of our hypotheses
about how creepware apps are used, we turned to hacking
tutorial apps. We installed the hacking tutorials that were
prominent in CreepRank’s results or had high PMI scores with
abusive apps. We now describe three such tutorials.
“SpyBoy” was notable for its high PMI scores with at-
tack apps across many categories. It conﬁrmed many of our
hypotheses by describing interpersonal attacks that cover a
remarkably large fraction of the creepware categories we
identiﬁed, including: email, HTML, SMS, and caller spooﬁng,
use of hack tools, remote control of devices, secret settings for
attack and defense, steganography, imposing WiFi use limita-
tions on other devices, and several categories of surveillance.
“Top Spy Apps” gives a ranked list of interpersonal surveil-
lance apps in general, and intimate partner surveillance apps
in particular (see Figure 6a). Each app has a page where it is
described and extolled for it’s best spying features.
“Cheating spouse tracker” includes vivid descriptions of
how to entrap a cheating spouse, recommending speciﬁc
surveillance apps (see Figure 6b).
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
635
Count
15
14
10
6
1
1
1
1
Code
Bomber
Auto-Liking
Evasion-Steganograpy
Info Extraction
SMS Encryption
Harassment
Spoof
Surveillance
Count
13 (+11 seed set)
5 (+3 seed set)
11 (+4 seed set)
13
4
2
1
1
Code
Impersonate Sender
Impersonate Conversation
Anonymity
Surveillance and Dumping
Fake Surveillance
Spoof - Call Logs
SMS Blacklist
Evasion - Hidden Content
(a) Seed set of 7 Bomber apps
(b) Seed set of 18 SMS Spooﬁng apps
Count
20
12
9
6
1
1
1
Code
Hidden Content
Hide Apps
Access Control
Surveillance
Hidden App Finder
Info Extraction
Fake Surveillance
(c) Seed set of 9 App Hiders
Table III: Coding results of the top 50 apps produced by CreepRank on 2017 install data when seeded with apps of different
categories. In the case of SMS spooﬁng apps, we re-coded the apps to capture their nuanced functionality.
by an abuser, while other apps are primarily installed on
victim devices. Let Y be a category of apps conjectured to be
indicative of a device’s role. We focus on Y being Harassment
– Bombers (likely installed on the device of abusers) or
Surveillance – Location apps (likely installed on the device
of a victim). The tables in Table IV show the ﬁve highest and
lowest app categories X for the two Y categories, where the
ranking for category X is calculated as the relative difference
ΔXY = (Pr(X|Y ) − Pr(X))/ Pr(X) where Pr(X) is the
probability of observing at least one app with category X on
a device, and Pr(X|Y ) is the probability of observing at least
one app with category X on a device given that the device
has at least one app with category Y .
As can be seen, harassment apps tend to be installed on the
same device as other harassment apps: the top four apps for Y
being Harassment – Bombers are all categories of apps useful
for sending harassing messages. For Y being Surveillance –
Location the situation is almost exactly reversed, with the top
four app categories being spyware related. This suggests that,
in some cases, it may be possible to characterize devices as
attacker-owned or victim-owned based on the types of apps
installed. Whether such predictions can be made accurate or
useful remains an open question.
D. Role of the Norton Mobile Security App
By obtaining our dataset from a security vendor, we only
have data from devices on which the vendor’s app is installed.
We wanted to investigate if the Norton app was most often
used preventatively or for post-infection cleanup. We iden-
tiﬁed 172 K devices on which the Norton app was installed
alongside one or more of the 107 thorough surveillance apps
we identiﬁed (including apps in CreepRank’s seed set). We
then dropped about 8 K potentially anomalous devices that had
more than 1 K apps installed in any one year. In 22 K of the
remaining 164 K devices, the Norton app was installed after
a surveillance app, suggesting post-infection cleanup. For the
rest of the devices, the security app was installed before the
surveillance app, suggesting it is being used preventatively.
This leads us to ask why an attacker would install a security
app on their device? A possible reason is that attackers are
frequently engaging in risky behaviors, such as installing ques-
tionable or off-store apps and rooting devices. Thus, they may
use the security app to guard against possible compromise.
(a)
(b)
Fig. 6: (a) “Top Spy Apps” lists spyware apps and their uses
for interpersonal surveillance. (b) “Cheating spouse tracker”
includes guides recommending speciﬁc surveillance apps.
Y = Harassment – Bombers
App Category X
ΔXY
Y = Surveillance – Location
App Category X
ΔXY
Evasion – Steganography
Harassment – Automation
Spoof – HTML
Spoof – Misc
Defense – Anti-harassment
5.79
5.59
3.19
2.71
2.59
CallerID – Location
Harassment – Fake Surveillance
Surveillance – Thorough
Surveillance – SMS
Defense – Misc
1.52
1.27
0.62
0.38
0.17
-0.11
-0.13
-0.15
-0.58
-0.60
None – Android Mods VM
Evasion – Steganography
Harassment – Misc
Tutorial – Root
Spoof – Misc
Surveillance – Calls
-0.63
Surveillance – Camera
-0.63
CallerID – Misc
-0.68
Surveillance – Location
-0.75
CallerID – Location
-0.75
Table IV: Relative difference ΔXY between probabilities that
a device has an app from category X given that it has an app
from category Y = Harassment – Bombers or Y = Surveillance
– Location vs. it has an app from category X.
C. Characterizing Devices via Creepware
To better understand the nature of devices with creepware
installed, we analyze correlations between different categories
of apps co-installed on devices. For example, we hypothesize
that certain apps are typically installed on devices being used