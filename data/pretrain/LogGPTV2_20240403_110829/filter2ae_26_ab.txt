Firefox的调试符号二进制文件。 图7包含使用fetch-symbols.py（由Mozilla提供）获取Firefox调试符号的输出，以及使用lipodebugwalk.py允许自定义编译版本的gdb加载Firefox。  
上面的过程允许我们利用unmask_jemalloc来探索jemalloc如何管理Firefox的堆并帮助我们进行漏洞利用开发。
图8描绘了unmask_jemalloc的帮助消息，并显示了我们在该工具中实现的功能：  
使用unmask_jemalloc，我们可以研究如何从Javascript操作Firefox的jemalloc托管堆。
以下脚本使用未转义的字符串和数组来演示受控分配和解除分配。 由于Firefox实现了对传统堆喷的缓解，因此脚本使用随机填充到已分配的块[CORL]。
    function jemalloc_spray(blocks, size)
    {
         var block_size = size / 2;
         // rop/bootstrap/whatever
         var marker = unescape("%ubeef%udead");
         marker += marker;
         // shellcode/payload
         var content = unescape("%u6666%u6666");
         while(content.length 
    0x1337
## 结论
在本白皮书中，我们从开发角度分析了jemalloc内存分配器。 我们开发了可用于攻击利用jemalloc的任何应用程序的开发原语。
此外，我们已将这些原语应用于最广泛使用的jemalloc应用程序，即Mozilla Firefox浏览器。
我们的unmask_jemalloc调试实用程序可以在漏洞利用开发期间用于探索jemalloc的内部，并帮助研究人员继续我们的工作。
## 参考
[[PHRC] argp, huku, Pseudomonarchia
jemallocum](http://phrack.org/issues.html?issue=68&id=10 "\[PHRC\] argp, huku,
Pseudomonarchia jemallocum")  
[[PHRK] huku, argp, The Art of Exploitation:
关于jemalloc堆溢出的案例研究](http://phrack.org/issues.html?issue=68&id=13 "\[PHRK\]
huku, argp, The Art of Exploitation: 关于jemalloc堆溢出的案例研究")  
[[HOEJ] Mark Daniel, Jake Honoroff, Charlie Miller,
使用Javascript进行工程堆溢出漏洞利用](http://securityevaluators.com/files/papers/isewoot08.pdf
"\[HOEJ\] Mark Daniel, Jake Honoroff, Charlie Miller,
使用Javascript进行工程堆溢出漏洞利用")  
[[FENG] Alexander Sotirov, Javascript
中的堆风水](http://www.phreedom.org/research/heap-feng-shui/heap-feng-shui.html
"\[FENG\] Alexander Sotirov, Javascript 中的堆风水")  
[[CORL] corelanc0d3r,
堆喷揭秘](https://www.corelan.be/index.php/2011/12/31/exploit-writing-tutorial-part-11-heap-spraying-demystified/ "\[CORL\] corelanc0d3r, 堆喷揭秘")