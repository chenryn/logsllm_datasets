User: The ping service that I have in mind allows users to keep easily track of their cloud application (AWS, GCP, Digital Ocean, etc.) up-time. 
The part of the application's design that I am having trouble with is how to effectively read a growing/shrinking list of hostnames from a database and ping them every "x" interval. The service itself will be written in Python and Postgres to store the user-inputted hostnames. Keep in mind that the list of hostnames to ping is variable since a user can add and also remove hostnames at will. 
How would you setup a system that checks for the most up-to-date list of hostnames, executes pings across said list of hostnames, and store the results, at a specific interval?
I am pretty new to programming. Any help or pointers in the right direction will be greatly appreciated
Assistant: Let me put it like this. You will be having these 4 statements in the following way. In the simplest way you could keep a table of users and a table of hostnames which will have following columns -> fk to users, hostname, last update and boolean is_running.
You will need the following actions.
UPDATE:
You will run this periodically on the whole table. You could optimize this by using a select with a filter on the last update column.
INSERT and DELETE:
This is for when the user adds or removes hostnames. During inserting also ping the hostname and update the last update column as the current time.
For the above 3 operations whenever they run they'd be using a lock on the respective rows. After each of the latter 2 operations you could notify the user.
Finally the READ:
This is whenever the user wants to see the status of his hostnames. If he has added or removed a hostname recently he will be notified only after the commit.
Otherwise do a select * from hostnames where user.id = x and send him the result. Everytime he hits refresh you could run this query.
You could also put indices on both the tables as the read operation is the one that has to be fastest. You could afford slightly slower times on the other 2 operations.
Do let me know if this works or if you've done differently. Thank you.