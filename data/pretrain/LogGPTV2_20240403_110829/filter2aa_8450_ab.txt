.It Cm ~R
请求连接的重建(rekeying) (仅用于SSH协议第二版, 且对方支持)
.El
.Pp
.Ss X11 和 TCP 转发 (forwarding)
.Pp
如果
.Cm ForwardX11
变量设为
.Dq yes
(或参见后面对
.Fl X
和
.Fl x
选项的描述), 并且用户正在使用 X11 (设置了
.Ev DISPLAY
环境变量), 和 X11 显示器的连接将自动以这种形式转发到远端:
任何用 shell 或命令启动的 X11 程序将穿过加密的通道, 从本地机器连接真正的
X 服务器. 用户不应该手动设置
.Ev DISPLAY .
可以在命令行上, 也可以在配置文件中设置 X11 连接的转发.
.Pp
.Nm
设置的
.Ev DISPLAY
值将指向服务器, 但是显示器号大于零. 这很自然, 因为
.Nm
在服务器上创建了一个
.Dq proxy
X 服务器, 把连接通过加密通道转发出去.
.Pp
.Nm
将自动在服务器上设置 Xauthority 数据. 目的是这样的:
SSH 生成一个随机的授权 cookie, 存放在服务器的 Xauthority 中.
SSH 检查并确保转发的连接携带了这个 cookie, 打开连接后,
把它替换为真正的 cookie.
真正的认证 cookie 绝不会送往服务器 (也不会有任何明文传送的 cookie).
.Pp
如果
.Cm ForwardAgent
变量设为
.Dq yes
(或参见后面对
.Fl A
和
.Fl a
选项的描述), 并且用户正在使用认证代理(authentication agent), 
则和代理的连接将自动转发到远程主机.
.Pp
既可以在命令行上, 也可以在配置文件中指定通过加密通道转发的任何 TCP/IP 连接.
TCP/IP 转向的应用有, 比如说, 和电子钱包的安全连接, 或者是穿过防火墙等.
.Pp
.Ss 服务器认证
.Pp
.Nm
自动维护并检查一个身份数据库, 它包含所有(成功)来访的主机的身份数据.
主机密钥存放在用户根目录下的
.Pa $HOME/.ssh/known_hosts
文件中. 另外, SSH 自动检查
.Pa /etc/ssh/ssh_known_hosts
里面已知的主机. 任何新主机将被自动添加到用户文件中.
如果某个主机的身份发生改变,
.Nm
就会发出警告, 并且关闭对它的密码认证, 以防止特洛伊木马窃取用户密码.
这个机制的另一个目的是防止中间人攻击, 否则这种攻击可能会绕过加密系统.
.Cm StrictHostKeyChecking
选项用来防止登录到主机密钥不能识别或发生改变的那些机器.
.Pp
命令行选项有:
.Bl -tag -width Ds
.It Fl a
禁止转发认证代理的连接.
.It Fl A
允许转发认证代理的连接. 
可以在配置文件中对每个主机单独设定这个参数.
.Pp
代理转发须谨慎. 
某些用户能够在远程主机上绕过文件访问权限 (由于代理的 UNIX 域 socket),
他们可以通过转发的连接访问本地代理.
攻击者不可能从代理获得密钥内容, 但是他们能够操作这些密钥, 利用加载到代理上
的身份信息通过认证.
.It Fl b Ar bind_address
在拥有多个接口或地址别名的机器上, 指定收发接口.
.It Fl c Ar blowfish|3des|des
选择加密会话的密码术.
.Ar 3des
是默认算法.
.Ar 3des
(triple-des) 用三支不同的密钥做加密-解密-加密三次运算, 被认为比较可靠.
.Ar blowfish
是一种快速的分组加密术(block cipher), 非常安全, 而且速度比
.Ar 3des
快的多.
.Ar des
仅支持
.Nm
客户端, 目的是能够和老式的不支持
.Ar 3des
的协议第一版互操作. 由于其密码算法上的弱点, 强烈建议避免使用.
.It Fl c Ar cipher_spec
另外, 对于协议第二版, 这里可以指定一组用逗号隔开, 按优先顺序排列的密码术.
详见
.Cm Ciphers .
.It Fl e Ar ch|^ch|none
设置 pty 会话的 escape 字符 (默认字符:
.Ql ~ ) .
escape 字符只在行首有效, escape 字符后面跟一个点
.Pq Ql \&.
表示结束连接, 跟一个 control-Z 表示挂起连接(suspend), 跟 escape 字符自己
表示输出这个字符. 把这个字符设为
.Dq none
则禁止 escape 功能, 使会话完全透明.
.It Fl f
要求
.Nm
在执行命令前退至后台. 它用于当
.Nm
准备询问口令或密语, 但是用户希望它在后台进行. 该选项隐含了
.Fl n 
选项. 在远端机器上启动 X11 程序的推荐手法就是类似于
.Ic ssh -f host xterm 
的命令.
.It Fl g
允许远端主机连接本地转发的端口.
.It Fl i Ar identity_file
指定一个 RSA 或 DSA 认证所需的身份(私钥)文件. 默认文件是协议第一版的
.Pa $HOME/.ssh/identity
以及协议第二版的
.Pa $HOME/.ssh/id_rsa
和
.Pa $HOME/.ssh/id_dsa
文件. 也可以在配置文件中对每个主机单独指定身份文件.
可以同时使用多个
.Fl i
选项 (也可以在配置文件中指定多个身份文件).
.It Fl I Ar smartcard_device
指定智能卡(smartcard)设备. 参数是设备文件,
.Nm
能够用它和智能卡通信, 智能卡里面存储了用户的 RSA 私钥.
.It Fl k
禁止转发 Kerberos 门票和 AFS 令牌. 
可以在配置文件中对每个主机单独设定这个参数.
.It Fl l Ar login_name
指定登录远程主机的用户.
可以在配置文件中对每个主机单独设定这个参数.
.It Fl m Ar mac_spec
另外, 对于协议第二版, 这里可以指定一组用逗号隔开, 按优先顺序排列的
MAC(消息验证码)算法 (message authentication code). 详情以
.Cm MACs
为关键字查询.
.It Fl n
把 stdin 重定向到
.Pa /dev/null
(实际上防止从 stdin 读取数据).
.Nm
在后台运行时一定会用到这个选项. 它的常用技巧是远程运行 X11 程序. 例如,
.Ic ssh -n shadows.cs.hut.fi emacs &
将会在 shadows.cs.hut.fi 上启动 emacs, 同时自动在加密通道中转发 X11 连接.
.Nm
在后台运行. (但是如果
.Nm
要求口令或密语, 这种方式就无法工作; 参见
.Fl f
选项.)
.It Fl N
不执行远程命令. 用于转发端口. (仅限协议第二版)
.It Fl o Ar option
可以在这里给出某些选项, 格式和配置文件中的格式一样.
它用来设置那些没有命令行开关的选项.
.It Fl p Ar port
指定远程主机的端口. 可以在配置文件中对每个主机单独设定这个参数.
.It Fl q
安静模式. 消除所有的警告和诊断信息.
.It Fl s
请求远程系统激活一个子系统. 子系统是 SSH2 协议的一个特性, 能够协助
其他应用程序(如 sftp)把SSH用做安全通路. 子系统通过远程命令指定.
.It Fl t
强制分配伪终端.
可以在远程机器上执行任何全屏幕(screen-based)程序, 所以非常有用,
例如菜单服务. 并联的
.Fl t
选项强制分配终端, 即使 
.Nm
没有本地终端.
.It Fl T
禁止分配伪终端.
.It Fl v
冗详模式. 使
.Nm
打印关于运行情况的调试信息. 在调试连接, 认证和配置问题时非常有用. 并联的
.Fl v
选项能够增加冗详程度. 最多为三个.
.It Fl x
禁止 X11 转发.
.It Fl X
允许 X11 转发. 可以在配置文件中对每个主机单独设定这个参数.
.Pp
应该谨慎使用 X11 转发. 如果用户在远程主机上能够绕过文件访问权限
(根据用户的X授权数据库), 他就可以通过转发的连接访问本地 X11 显示器.
攻击者可以据此采取行动, 如监视键盘输入等.
.It Fl C
要求进行数据压缩 (包括 stdin, stdout, stderr 以及转发 X11 和 TCP/IP 连接
的数据).  压缩算法和
.Xr gzip 1
的一样, 协议第一版中, 压缩级别
.Dq level
用
.Cm CompressionLevel
选项控制. 压缩技术在 modem 线路或其他慢速连接上很有用, 但是在高速网络上反而
可能降低速度. 可以在配置文件中对每个主机单独设定这个参数. 另见
.Cm Compression
选项.
.It Fl F Ar configfile
指定一个用户级配置文件. 如果在命令行上指定了配置文件, 系统级配置文件
.Pq Pa /etc/ssh/ssh_config
将被忽略. 默认的用户级配置文件是
.Pa $HOME/.ssh/config .
.It Fl L Ar port:host:hostport
将本地机(客户机)的某个端口转发到远端指定机器的指定端口.
工作原理是这样的, 本地机器上分配了一个 socket 侦听
.Ar port
端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去,
同时远程主机和
.Ar host
的
.Ar hostport
端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口.
IPv6 地址用另一种格式说明:
.Ar port/host/hostport
.It Fl R Ar port:host:hostport
将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口.
工作原理是这样的, 远程主机上分配了一个 socket 侦听
.Ar port
端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去,
同时本地主机和
.Ar host
的
.Ar hostport
端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机
才能转发特权端口. IPv6 地址用另一种格式说明:
.Ar port/host/hostport
.It Fl D Ar port
指定一个本地机器
.Dq 动态的
应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听
.Ar port
端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去,
根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 
.Nm
将充当 SOCKS4 服务器. 只有 root 才能转发特权端口.
可以在配置文件中指定动态端口的转发.
.It Fl 1
强制
.Nm
只使用协议第一版.
.It Fl 2
强制
.Nm
只使用协议第二版.
.It Fl 4
强制
.Nm
只使用 IPv4 地址.