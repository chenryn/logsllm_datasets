1、26个安全组的间接成员关系；
2、具备修改`Organization Management`安全组成员关系的权限；
3、已成为`Organization Management`组的成员；
4、具备修改`Exchange Trusted Subsystem`安全组成员关系的权限；
5、已成为`Exchange Trusted Subsystem`以及`Exchange Windows Permission`安全组的成员。
工具的输出结果如下图所示：
需要注意的是，虽然这个例子中我们使用了ACL配置信息（Exchange安装过程中会进行配置），然而这款工具并不需要依赖Exchange或者其他产品来查找或者利用关系链。
目前该工具只能枚举并利用域对象上的`writeDACL`权限，我们还可以利用其他对象上的其他类型的访问权限，比如`owner`、`writeOwner`、`genericAll`等。
BloodHound团队在一篇[白皮书](https://www.specterops.io/assets/resources/an_ace_up_the_sleeve.pdf)中详细解释了这些访问权限，我们将在未来更新这款工具时将这些权限的利用方法包含在内。大家可以从我们的[GitHub](https://github.com/fox-it/Invoke-ACLPwn)上下载Invoke-ACLPwn工具。
## 五、NTLMRelayx
去年我们为ntlmrelay编写了新的[扩充](https://www.fox-it.com/en/insights/blogs/blog/inside-windows-network/)，使其支持中继至LDAP功能，这样就能将新用户添加到活动目录中，实现域枚举并提升至域管权限。之前ntlmrelayx中的LDAP攻击会检查中继账户是否为域管（Domain
Admins）或者企业管理员（Enterprise Admins）组，如果是则会提升权限。
虽然这种方法的确有效，但并没有考虑中继账户可能拥有的任何特殊权限。根据本文介绍的研究成果，我们在ntlmrelayx中引入了新的攻击方法。这种攻击首先会请求重要域对象的ACL，然后将二进制格式解析成工具能够理解的格式，接着枚举中继账户的权限。
这样就能将中继账户所属的所有组（包括递归的组成员关系）考虑在内。一旦枚举完权限，ntlmrelayx就会检查用户是否具备足够高的权限，以便新用户或者现有用户提升权限。
为了提升权限，我们可以使用两种不同的攻击方法。第一种攻击称为“ACL攻击”，其中域对象的ACL被修改，攻击者可控的某个账户被赋予域中的`Replication-Get-Changes-All`权限，这样就可以使用前面提到过的DCSync方法。如果无法修改ACL，则使用“Group攻击”将成员添加到域的高权限组中，这些高权限组包括：
    Enterprise Admins
    Domain Admins
    Backup Operators（可以备份域控制器上的关键文件）
    Account Operators（可以控制域中几乎所有的组）
如果使用`--escalate-user`标志指定已有的某个用户，那么在可以执行ACL攻击的前提下，该用户将被赋予`Replication`权限。如果使用的是“Group攻击”，则会将该用户添加到高权限组中。如果没有指定已有的用户，则可以考虑创建新的用户。用户可以创建在User容器中（用户账户的默认位置），或者在`OrganizationalUnit`中（类似IT部门等成员具备该容器的管理权限）。
可能会有人注意到我们提到的是中继账户，而不是中继用户。这是因为这种攻击对具备高权限的计算机账户来说同样适用。比如Exchange服务器的计算机账户就属于这类账户，在默认配置下该账户属于Exchange
Windows
Permissions组的成员。如果攻击者能够让Exchange服务器向攻击者的主机发起身份认证请求（比如使用[mitm6](https://github.com/fox-it/mitm6)这种网络层的攻击技术），那么攻击者就能立即将权限提升为域管理员权限。
现在我们可以使用impacket的`secretsdump.py`或者Mimikatz导出`NTDS.dit`的哈希值。
同样，如果攻击者具备Exchange服务器的管理员权限，也有可能不需要导出任何密码或者机器账户哈希，就能实现域权限的提升。如果以`NT
AuthoritySYSTEM`身份连接到攻击者的主机并使用NTLM进行身份认证，这样就足以向LDAP进行身份认证。如下图中，我们以`SYSTEM`权限使用`psexec.py`调用`Invoke-Webrequest`这个PowerShell函数，使用`-UseDefaultCredentials`启动NTLM的自动身份验证：
_备注：这里出现404错误非常正常，因为如果中继攻击完成后，`ntlmrelayx.py`会提供一个404页面。_
需要注意的是，在默认配置的Active
Directory中，针对LDAP的中继攻击有可能顺利完成。如果启用LDAP签名就能在一定程度上缓解这种攻击，然而LDAP签名默认处于禁用状态。即便启用了LDAP签名，攻击者还是有可能中继至LDAPS（基于SSL/TLS的LDAP），因为LDAPS可以当成一个签名通道。针对此类攻击的唯一缓解方法是在注册表中为LDAP绑定通道。
如果想获取ntlmrelayx中的新功能，只需更新到[GitHub](https://github.com/CoreSecurity/impacket)上最新版本的impacket即可。
## 六、安全建议
为了缓解这类安全风险，Fox-IT有如下几点建议：
1、移除危险的ACL。
使用Bloodhound之类的工具来检查危险的ACL[3]。Bloodhound可以导出域内的所有ACL，帮助我们识别危险的ACL。
2、移除Exchange Exterprise Servers的`writeDACL`权限。
移除Exchange Exterprise
Servers的`writeDACL`权限。更多信息请参考[这篇](https://technet.microsoft.com/en-us/library/ee428169\(v=exchg.80).aspx)技术文档。
3、监控安全组。
监控可能对域产生重大影响的安全组（的成员关系），比如`Exchange Trusted Subsystem`以及`Exchange Windows
Permissions`。
4、审核并监控对ACL的修改操作。
审核域内ACL的修改操作。如果尚未部署这种机制，那么我们需要修改域控制器的策略。大家可以参考TechNet上的[这篇文章](https://blogs.technet.microsoft.com/canitpro/2017/03/29/step-by-step-enabling-advanced-security-audit-policy-via-ds-access/)了解更多细节。
当域对象的ACL被修改后，就会出现ID为5136的一条事件日志。我们可以使用PowerShell查询Windows事件日志，比如我们可以使用如下一行语句查询Security事件日志中ID为5136的事件：
    Get-WinEvent -FilterHashtable @{logname='security'; id=5136}
该事件中包含帐户名以及以SDDL（Security Descriptor Definition Language）格式表示ACL。
我们无法直接查看这个数据，但在Windows 10中有一个PowerShell cmdlet：`ConvertFrom-SDDL`[4]，这个cmdlet可以将SDDL字符串转化为可读性较好的ACL对象。
如果服务器运行的是Windows Server
2016操作系统，我们还可能看到原始的以及修改后的描述符。大家可以参考[此链接](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4715)了解更多信息。
获得这个信息后，我们就可以开始着手调查，发现哪些条目被修改过，研究背后的真实原因。
## 七、参考资料
[1]   
[2]   
[3]   
[4] 