title:Securing Application-Level Topology Estimation Networks: Facing the
Frog-Boiling Attack
author:Sheila Becker and
Jeff Seibert and
Cristina Nita-Rotaru and
Radu State
Securing Application-Level Topology Estimation
Networks: Facing the Frog-Boiling Attack
Sheila Becker1, Jeﬀ Seibert2, Cristina Nita-Rotaru2, and Radu State1
1 University of Luxembourg - SnT, L-1359 Luxembourg
{sheila.becker, radu.state}@uni.lu
{jcseiber, crisn}@cs.purdue.edu
2 Purdue University, West Lafayette, IN 47906, USA
Abstract. Peer-to-peer real-time communication and media streaming applica-
tions optimize their performance by using application-level topology estimation
services such as virtual coordinate systems. Virtual coordinate systems allow
nodes in a peer-to-peer network to accurately predict latency between arbitrary
nodes without the need of performing extensive measurements. However, sys-
tems that leverage virtual coordinates as supporting building blocks, are prone to
attacks conducted by compromised nodes that aim at disrupting, eavesdropping,
or mangling with the underlying communications.
Recent research proposed techniques to mitigate basic attacks (inﬂation, deﬂa-
tion, oscillation) considering a single attack strategy model where attackers per-
form only one type of attack. In this work we explore supervised machine learn-
ing techniques to mitigate more subtle yet highly eﬀective attacks (frog-boiling,
network-partition) that are able to bypass existing defenses. We evaluate our
techniques on the Vivaldi system against a more complex attack strategy model,
where attackers perform sequences of all known attacks against virtual coordinate
systems, using both simulations and Internet deployments.
1
Introduction
Several recent peer-to-peer architectures optimize underlying communication ﬂows by
relying on additional topological information in order to meet the performance require-
ments of real-time communication and live media streaming applications. These archi-
tectures vary from distributed approaches, where peers can independently check the
traﬃc speciﬁc network conditions and select the most appropriate candidate [34] to
more centralized approaches, where an Internet Service Provider (ISP) is actively help-
ing this process by means of an oracle service [5]. Speciﬁcally, an ISP can help avoid
the overlay-underlay routing clash by ranking peers according to several metrics such
that peer-to-peer traﬃc remains largely within the same Autonomous System (AS). The
latter approach is being followed by the IETF, where the Application-Layer Traﬃc Op-
timization (ALTO) [30] working group has deﬁned a framework for providing a service
for eﬃciently selecting peers with the objective of improving the performance of peer-
to-peer applications without disrupting ISPs.
One way of eﬃciently selecting peers is to leverage an application-level topology
estimation service for deﬁning virtual coordinates for use in the peer selection process
[30]. Virtual coordinates consist of mapping each host to a multidimensional metric
space, such that the distance metric between coordinates can approximate network level
measurements among the original hosts. This mapping is done iteratively, as each host
probes one or several other hosts and individually adjusts its virtual coordinates. Typical
network level metrics are bandwidth and round-trip time (RTT) and several coordinate
systems have been introduced in the past. For an extensive overview on the existing
approaches, the reader is referred to [16].
Systems that leverage virtual coordinates as supporting building blocks are prone
to attacks conducted by compromised nodes that aim at disrupting, eavesdropping, or
mangling with the underlying communications. These attacks aim at disrupting services
relying on virtual coordinates and this is done by biasing the mapping process. The con-
sequences of such attacks range from traﬃc eavesdropping, where attackers manipulate
the virtual coordinates in order to force their location to be part of the communication
path, to denial of service attacks, that lead to an unstable and ineﬃcient overlay network.
Speciﬁcally, identiﬁed attacks against virtual coordinate systems are: inﬂation/deﬂation
- where the coordinate of a node is made to appear bigger/smaller and oscillation -
where an attacker destabilizes the coordinate system. Previous research [32, 37] pro-
posed techniques to mitigate these attacks considering a single attack strategy model in
which attackers perform the same type of attack for the entire duration of the attack.
Recent research [10, 11] identiﬁed new, more subtle and yet highly eﬀective attacks
called frog-boiling and network-partition that are able to bypass such defenses. During
frog-boiling, attackers lie about their coordinates only by small amounts, but over time
continuously move away from their correct positions. Network-partition is a variant of
the frog-boiling attack where groups of attackers move their coordinates in opposite di-
rections. No solutions to these attacks have been proposed to the best of our knowledge.
In this paper, we consider the detection of all existing attacks against decentral-
ized virtual coordinate systems by leveraging supervised machine learning methods:
decision trees and support vector machines. Our approach is able to detect and mit-
igate all known attacks used in both single attack strategies where individual attacks
(frog-boiling, network-partition, oscillation, inﬂation and deﬂation) are launched by an
attacker and more complex attack strategies, where successive attack phases are inter-
mixed without assuming any ﬁxed order in the attack sequence. Our contributions are
as follows:
– We propose a practical method to counter the frog-boiling and network-partition
attacks, or any complex attack strategy in which several individual attacks are
launched by a powerful adversary. For example, the latter can combine several sin-
gle attacks following a Markov chain model.
– We develop a feature set, based on a node’s local information, for embedding it into
a multidimensional manifold in order to reveal attacks. This process has resulted in
seven feature variables that prove to be the most relevant for the prediction and
classiﬁcation task.
– We provide a quantitative analysis of supervised machine learning methods, i.e.,
decision trees and support vector machines, for detecting all known attacks. We
evaluate our techniques using the Vivaldi [15] virtual coordinate system through
simulations using the King data set and real deployments on PlanetLab. Among the
two diﬀerent machine learning techniques, decision trees and support vector ma-
chines, decision trees are able to mitigate all known attacks, outperforming support
vector machines by achieving a much lower false positive rate. Our approach works
both in a global manner, where all nodes actively exchange local information and
a collective decision is taken, as well as in an individual manner, where each node
locally decides whether an attack is occurring or not. The results for simulations
using the King data set and for real deployments on PlanetLab both demonstrate
good performance in terms of true positives (∼ 95%) for identifying the diﬀerent
attacks.
The remainder of this paper is structured as follows. We overview virtual coordinate
systems in Section 2. We describe existing known attacks and some limitations of exist-
ing protection mechanisms in Section 3. We describe our defense method in Section 4
and present experimental validation in Section 5. We discuss related work in Section 6.
Finally, we conclude the paper in Section 7.
2 System Model
In this section, we give an overview of virtual coordinate systems and a representative
decentralized system, Vivaldi, that we use in our simulations and experiments.
2.1 Virtual Coordinate Systems
Virtual Coordinate Systems (VCS) have been proposed as a way to accurately predict
latency between arbitrary nodes without the need of performing extensive measure-
ments. In a VCS, each node maintains a coordinate where the distance between two
node’s coordinates is the estimated round-trip time (RTT). The main service goals of
virtual coordinate systems are the accuracy and stability of the resulting virtual coordi-
nates. Accuracy captures how well the coordinates estimate actual RTTs between nodes.
Stability captures the ability of the system to converge to the real coordinate values.
Two main architectures for virtual coordinate systems have emerged: landmark-
based and decentralized. Landmark-based systems rely on infrastructure components
(such as a set of landmark servers) to predict distance between any two hosts. The set
of landmarks can be pre-determined [17, 26, 27] or randomly selected [28, 35]. Decen-
tralized virtual coordinate systems do not rely on explicitly designated infrastructure
components, requiring any node in the system to act as a reference node. Examples of
such systems include PIC [13], Vivaldi [15], and PCoord [23, 24].
In this paper, we focus on decentralized virtual coordinate systems as several such
systems have become popular due to their low cost of deployment and increased scala-
bility. In particular, we use Vivaldi [15] as a representative decentralized virtual coordi-
nate system. We chose Vivaldi because it is a mature and widely-deployed system that
has been shown to produce coordinates that result in low error estimations and is able
to do so with reasonable performance and overhead.
2.2 Vivaldi Overview
Vivaldi is based on a spring-mass system where all nodes are connected via springs,
where the current length of the spring is the estimated RTT and the actual RTT is con-
sidered to be the spring length when at rest. Thus as with real springs, if a spring is
compressed it applies a force that pushes the nodes apart and if the spring is extended
the spring pulls them together. Over time, the tension across all springs is minimized,
and the position of each node produces the resulting coordinate.
Speciﬁcally, the Vivaldi protocol works as follows. Each node i is ﬁrst assigned a
coordinate xi that is at the origin of the coordinate space and also ﬁnds several neighbors
with which it exchanges updates. Every node i maintains a local error value ei that is
initialized to 1 and decreases as the RTT estimations improve. Node i will occasionally
request an update from node j, which consists of node j’s coordinate and local error.
Node i also uses this opportunity to measure the RTT between itself and j. Once node
i has this information it follows the update process as shown in Algorithm 1. An ob-
servation conﬁdence w is calculated ﬁrst (line 1) along with the error es in comparing
the coordinates with the actual RTT (line 2). The local error value is then updated (line
4) by calculating an exponentially-weighted moving average with weight α and system
parameter ce (line 3). The movement dampening factor is then calculated with another
system parameter cc (line 5) and ﬁnally the coordinate is updated (line 6).
Algorithm 1: Vivaldi Coordinate Update
Input: Remote node observation tuple ((cid:104)x j, e j, RTTi j(cid:105))
Result: Updated local node coordinate and error (xi, ei)
1 w = ei/(ei + e j)
2 es = |(cid:107)xi − x j(cid:107) − RTTi j|/RTTi j
3 α = ce × w
4 ei = (α × es) + ((1 − α) × ei)
5 δ = cc × w
6 xi = xi + δ × (RTTi j − (cid:107)xi − x j(cid:107)) × u(xi − x j)
3 Attack Model and Strategies
While Vivaldi produces coordinates that can accurately predict RTTs, it is also vulner-
able to insider attacks. An attacker can lie about its coordinate and local error, and can
also increase the RTT by delaying probes sent to determine the RTT between itself and
other nodes. As has been shown [6, 21], Vivaldi is vulnerable against such attacks that
can lead to producing coordinates that have high error. Such attacks can be conducted
by a set of attacker nodes, either individually or coordinating together. An attacker can
mount an attack by using only one type of attack, or by mixing several attacks.
Below we ﬁrst describe single attack scenarios where a malicious node applies the
same attack for the entire duration of the experiment and all nodes apply the same
attack. We then extend these scenarios to more complex ones, by assuming that not
only one single attack is applied by all the malicious nodes, but sequences of diﬀerent
attacks can be launched.
3.1 Single Attack Strategies
Basic Attacks. Several basic attacks speciﬁc to coordinate systems have been iden-
tiﬁed. They are: inﬂation and deﬂation attacks that impact the accuracy of coordinate
systems, and oscillation attacks [37] that impact both the accuracy and stability of coor-
dinate systems. In an inﬂation attack, malicious nodes report a very large coordinate to
pull nodes away from correct coordinates. In a deﬂation attack, to prevent benign nodes
from updating and moving towards their correct coordinates, malicious nodes report
coordinates near the origin. Finally, in an oscillation attack, malicious nodes report ran-
domly chosen coordinates and increase the RTT by delaying probes for some randomly
chosen amount of time. In each of these attacks, nodes report a small, but randomly
chosen, local error value, signaling that they have high conﬁdence in their coordinate
position.
Fig. 1. Oscillation attacks against BitTorrent, 315 nodes (10% malicious) on PlanetLab.
To show how a small number of malicious nodes conducting oscillation attacks can
aﬀect application performance, we evaluated the ﬁle-sharing BitTorrent system [12] in a
real-life PlanetLab [3] deployment of 315 nodes, out of which 10% act maliciously. We
compare three scenarios in Fig. 1: No Vivaldi, the scenario where the BitTorrent tracker
does not use virtual coordinates, but simply chooses nodes at random; Vivaldi - No
Attack, the scenario where the tracker is coordinate-aware, i.e. when a client requests
other peers to download from, the tracker will respond with a selection of nodes that are
near the coordinate of the requesting node; Vivaldi - Oscillation, the scenario where the
coordinates used by BiTorrent are impacted by an oscillation attack against Vivaldi. In
our implementation, malicious nodes report randomly chosen coordinates and increase
the RTT by delaying probes for up to 1 second. As can be seen in Fig. 1, when the
tracker is aware of coordinates, the download times decreases by 50% for some nodes.
However, when under attack, much of the gains brought on by the coordinates are lost,
and for over 25% of nodes, the download times actually increase over the scenario when
no virtual coordinates are used to optimize peer selection.
Advanced Attacks. Several proposals have been made to secure virtual coordinate
systems against the above described basic attacks [20, 32, 37] and have been shown
 0 0.2 0.4 0.6 0.8 1 0 100 200 300 400 500 600 700 800Fraction of NodesCompletion Time (seconds)No VivaldiVivaldi - No AttackVivaldi - Oscillationto eﬀectively mitigate them. However, recent research [10, 11] has identiﬁed two more
subtle and yet highly eﬀective attacks that are able to bypass existing defenses. They are
the frog-boiling and network-partition attacks. In a frog-boiling attack malicious nodes
lie about their coordinates or latency by a very small amount to remain undetected by
defense mechanisms. The key of the attack is that the malicious nodes gradually in-
crease the amount they are lying about and continue to move further away from their
correct coordinates, successfully manipulating benign node’s coordinates and thus pro-
ducing inaccurate RTT estimations. In a network-partition attack two or more groups of
malicious nodes conduct a frog-boiling attack, but move their coordinates in opposite
directions, eﬀectively splitting the nodes into two or more groups.