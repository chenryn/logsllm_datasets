Certainly! Hereâ€™s a more polished and detailed version of your text:

---

I would like to upgrade the default Python installation (version 2.5.1) that comes with OS X Leopard to the latest version. Could you please provide me with the steps to achieve this?

Thank you.

---

**Response:**

I recommend leaving the default Python installation as it is and installing the latest version in `/usr/local/bin`. This approach ensures that the system remains stable while allowing you to use the newer version for your projects. Here are the steps to do so:

1. **Download the Latest Python Version:**
   - Visit the official Python website and download the source code for the latest version.

2. **Extract the Downloaded File:**
   - Use a tool like `tar` to extract the downloaded file. For example:
     ```sh
     tar -xzf Python-<version>.tgz
     ```

3. **Navigate to the Extracted Directory:**
   - Change to the directory where the Python source code is located.
     ```sh
     cd Python-<version>
     ```

4. **Configure the Installation:**
   - Run the `configure` script to prepare the build.
     ```sh
     ./configure --prefix=/usr/local
     ```

5. **Compile the Source Code:**
   - Build the Python source code using `make`.
     ```sh
     make
     ```

6. **Install the New Python Version:**
   - Install the compiled Python binary to `/usr/local/bin` with `sudo`.
     ```sh
     sudo make install
     ```

7. **Verify the Installation:**
   - Check that the new version of Python is being used by default.
     ```sh
     python --version
     ```

Since `/usr/local/bin` typically comes before `/usr/bin` in the `PATH` environment variable, typing `python` at the command line will now invoke the newly installed version (e.g., 2.6), while the original system version remains untouched.

This method ensures that your operating system remains stable and that you can use the latest Python features for your development work.

---

Feel free to reach out if you need further assistance!