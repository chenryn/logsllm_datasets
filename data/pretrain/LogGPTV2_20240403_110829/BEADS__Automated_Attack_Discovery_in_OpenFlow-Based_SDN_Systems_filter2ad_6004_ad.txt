### Packet Manipulation and Controller Bugs in OpenFlow-Based SDN Systems

#### 1. Packet Length and Flow Delay
- **Set packet in length to 0**: This operation sets the length of the packet in message to zero.
- **CD1: Delay flow add**: Introduces a delay in the flow addition process.
- **CD2: Change length to 0 on any message**: Modifies the length field of any message to zero.
- **CD3: Change inner packet length to 0 in packet in**: Sets the inner packet length to zero in the packet in message.

| Controller | POX/RYU/FL | POX | RYU | ONOS |
|------------|-------------|------|------|------|
| CD1        | No          | No   | No   | No   |
| CD2        | Yes         | No   | Yes  | Yes  |
| CD3        | No          | No   | No   | No   |

#### 2. Port List Modification
- **LD: Change port lists in features reply/port status**: Alters the port lists in the features reply and port status messages.
- **BB: Change port lists in features reply/port status**: Similar to LD, but specifically targets edge ports.

| Controller | ONOS/POX/FL | ONOS/FL | POX/RYU | RYU |
|------------|--------------|----------|----------|-----|
| LD         | Yes          | Yes      | Yes      | No  |
| BB         | Yes          | Yes      | No       | No  |

#### 3. Flow Statistics Manipulation
- **FR1: Change flow stats reply such that flow rule entry does not match**: Modifies the flow stats reply to prevent matching.
- **FR2: Change flow stats reply such that packet count is constant**: Alters the packet count to a constant value.

| Controller | ONOS | POX/RYU | RYU | FL |
|------------|-------|---------|-----|----|
| FR1        | Yes   | Yes     | Yes | No |
| FR2        | Yes   | Yes     | Yes | No |

#### 4. Packet Out Message Manipulation
- **UB: Change port in field of the packet out message**: Modifies the port in field of the packet out message.

| Controller | ONOS | POX/RYU | RYU | FL |
|------------|-------|---------|-----|----|
| UB         | Yes   | Yes     | Yes | No |

### Detailed Analysis of Identified Bugs

#### 1. Operation Stall (OS)
- **Issue**: Dropping or ignoring flow add messages causes an operation stall.
- **Impact**: The flow will eventually be inserted, but it requires additional messages and controller processing.
- **Mitigation**: None known, as this is due to the design of OpenFlow.

#### 2. Periodic Switch Disconnect (SD)
- **Issue**: Malicious switch periodically disconnects, causing topology churn and preventing flow rule installation and packet in/packet out message delivery.
- **Impact**: Network recovery takes about 3 seconds, with TCP disconnection lasting half a second.
- **Mitigations**:
  - **Handshake Duplication**: Modify the handshake state machine to tolerate message duplication.
  - **Invalid Port Number**: Sanity check the list of ports received from the switch to avoid invalid port numbers like 0xFFFD.

#### 3. Data-Plane Loss (DP)
- **Issue**: Malicious switches can cause data-plane packet loss by discarding packet in or packet out messages.
- **Impact**: Affects small flows like ARP and DNS.
- **Mitigation**: None known.

#### 4. Flow Rule Modification (FM)
- **Issue**: Modifying flow add messages to disrupt flow rules.
- **Impact**: Affects timeout, priority, match fields, and actions.
- **Mitigation**: None known.

#### 5. Port Configuration Modification (PC)
- **Issue**: Misleading the controller about the switch's port configuration.
- **Impact**: Causes network-wide denial of service or specific topology changes.
- **Mitigation**: None known.

#### 6. Packet Location Hijacking (LH)
- **Issue**: Changing the apparent source and destination ports of packets.
- **Impact**: Affects topology detection, MAC learning, and reactive forwarding.
- **Mitigation**: None known, though cryptographic techniques can mitigate LLDP-specific attacks.

#### 7. Empty Packet In (EP)
- **Issue**: Sending a packet in message with a zero-length payload triggers a NULL pointer exception in ONOS.
- **Impact**: Disconnects the malicious switch but allows the controller to continue running.
- **Mitigation**: Update the OpenFlow specification to disallow very small payload lengths.

#### 8. Controller DoS (CD)
- **Issue**: Overloading the controller by delaying flow rule installation or sending malformed messages.
- **Impact**: Flood of packet in messages or controller crashes.
- **Mitigations**:
  - **ONOS and Floodlight**: Track flow rules to prevent repeated insertion attempts.
  - **Ryu**: Patched bugs that cause infinite loops and uncaught exceptions.

#### 9. Link Detection Failure (LD)
- **Issue**: Prevents correct global topology construction by tampering with port lists in features reply and port status messages.
- **Impact**: Limits the controller's ability to route packets.
- **Mitigation**: Monitor received packet in messages for previously unknown ports and send LLDP packets on them.

#### 10. Broken ARP Broadcast (BB)
- **Issue**: Omitting ports in features reply and port status messages prevents ARP broadcasts.
- **Impact**: Hosts behind omitted ports become unreachable.
- **Mitigation**: Monitor received packet in messages for previously unknown ports and send LLDP packets on them.

#### 11. Unexpected Flow Rule Removal (FR)
- **Issue**: Confuses the controller into removing installed flow rules.
- **Impact**: Complicates debugging and directs suspicion away from the malicious switch.
- **Mitigation**: Rely on OpenFlow switches to automatically remove flow rules based on idle timeouts and ensure all expected rules are accounted for before removal.

#### 12. Unexpected Broadcast Behavior (UB)
- **Issue**: Modifying the packet out message to change the in port, causing incorrect packet forwarding.
- **Impact**: Switches learn incorrect host locations, resulting in connectivity losses.
- **Mitigation**: Detect by linking packets sent at one switch with those received by other switches.

### Attack Demonstrations

#### 1. TLS Man-in-the-Middle
- **Controller**: Ryu
- **Scenario**: Use the FM bug to insert the attacker's host into the path between the client and server, potentially performing an SSL man-in-the-middle attack.

#### 2. Web Server Impersonation
- **Controller**: ONOS (POX is also vulnerable)
- **Scenario**: Use the ARP-location-injection bug to confuse the controller into believing the target web server is located on the same port as the attacker. All future connections from new or idle hosts are then sent to the attacker.

These demonstrations show how the identified bugs can be weaponized into powerful attacks with significant consequences.