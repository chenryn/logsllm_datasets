news/verticalscope-hack/.
[95] Jeremy Kirk. New malware overwrites software updaters,
https://www.itworld.com/article/2755831/
2010.
security/new-malware-overwrites-software-
updaters.html.
[96] Juniper. 2015-12 Out of Cycle Security Bulletin: ScreenOS:
Multiple Security issues with ScreenOS (CVE-2015-7755,
CVE-2015-7756). https://kb.juniper.net/InfoCenter/
index?page=content&id=JSA10713, Dec. 15.
[97] G. Kelly. Apple iOS 12.1.4 Fails To Fix Cellular, WiFi Problems.
https://www.forbes.com/sites/gordonkelly/2019/
02/10/apple-ios-12-1-4-problem-iphone-cellular-
data-wifi-upgrade-ipad/.
[98] G. Klein, K. Elphinstone, G. Heiser, J. Andronick, D. Cock,
P. Derrin, D. Elkaduwe, K. Engelhardt, R. Kolanski, M. Norrish,
et al. sel4: Formal veriﬁcation of an os kernel. In Proc. of the
22nd ACM SOSP, pages 207–220, 2009.
[99] B. Kuhn. News: IMPORTANT: Information Regarding Savan-
nah Restoration for All Users. https://savannah.gnu.org/
forum/forum.php?forum_id=2752, 2003.
[100] T. K. Kuppusamy, A. Brown, S. Awwad, D. McCoy,
R. Bielawski, C. Mott, S. Lauzon, A. Weimerskirch, and
J. Cappos. Uptane: Securing software updates for automobiles.
14th ESCAR Europe, 2016.
[101] T. K. Kuppusamy, V. Diaz, and J. Cappos. Mercury:
Bandwidth-effective prevention of rollback attacks against
community repositories. In Proc. of the 2017 USENIX Annual
Technical Conference, 2017.
[102] T. K. Kuppusamy, S. Torres-Arias, V. Diaz, and J. Cappos.
Diplomat: using delegations to protect community repositories.
In proc. of the 13th USENIX NSDI, pages 567–581, 2016.
[103] Martin Brinkmann. Attention: Some Fosshub downloads
https://www.ghacks.net/2016/08/03/
compromised.
attention-fosshub-downloads-compromised/.
[104] M. S. Merkow and L. Raghavan. Secure and resilient software:
Requirements, test cases, and testing methods. 2011.
[105] Microsoft.
[106] Microsoft.
Microsoft secure development
lifecycle.
https://www.microsoft.com/en-us/sdl/default.aspx.
Microsoft Trusted Publishers Certiﬁcate
https://msdn.microsoft.com/en-us/library/
Store.
windows/hardware/ff553504(v=vs.85).aspx.
news/2011/06/passwords-reset/, 2011.
[108] Naked Security.
Flame malware used man-in-the-
https:
attack against Windows Update.
middle
//nakedsecurity.sophos.com/2012/06/04/flame-
malware-used-man-in-the-middle-attack-against-
windows-update/.
[109] G. C. Necula. Proof-carrying code. In Proceedings of the
ACM SIGPLAN, 1997.
[110] G. C. Necula. Proof-carrying code. design and implementa-
tion. Springer, 2002.
[111] I. S. Organization.
Information technology – security
techniques – application security – part 1: Overview
and concepts.
http://www.iso.org/iso/catalogue_
detail.htm?csnumber=44378.
[112] Patrick Gray.
Gentoo Linux server compromised.
https://www.zdnet.com/article/gentoo-linux-
server-compromised/, 2003.
[113] D. Pauli. icloud phishing attack hooks 39 ios apps and wechat.
theregister, 2015. https://www.theregister.co.uk/2015/
09/21/icloud_phishing_attack_hooks_39_ios_apps_
most_popular_message_client/.
[114] S. Quirolgico, J. Voas, T. Karygiannis, C. Michael,
Vetting the Security of Mobile Ap-
https://nvlpubs.nist.gov/nistpubs/
and K. Scarfone.
plications.
SpecialPublications/NIST.SP.800-163.pdf.
[115] Red Hat, Inc.
1200.
0855.html, 2008.
Infrastructure report, 2008-08-22 UTC
https://rhn.redhat.com/errata/RHSA-2008-
[116] J. Robbins. Adopting open source software engineering
(OSSE) practices by adopting OSSE tools. Perspectives on
free and open source software, pages 245–264, 2005.
[117] RODRIGO ARANGUA. The security ﬂaws at the heart of
the Panama Papers. https://www.wired.co.uk/article/
panama-papers-mossack-fonseca-website-security-
problems.
[118] RSA Research. Kingslayer-A Supply Chain Attack. https:
//www.rsa.com/content/dam/premium/en/white-
paper/kingslayer-a-supply-chain-attack.pdf.
[119] RubyGems.org.
Data Veriﬁcation.
//blog.rubygems.org/2013/01/31/data-
verification.html, 2013.
http:
[120] Ryan Naraine. Open-source ProFTPD hacked, backdoor
planted in source code. http://www.zdnet.com/article/
open-source-proftpd-hacked-backdoor-planted-in-
source-code.
[121] J. Samuel, N. Mathewson, J. Cappos, and R. Dingledine.
Survivable key compromise in software update systems. In
Proc. of the 17th ACM CCS, pages 61–72. ACM, 2010.
[122] Slashdot Media. phpMyAdmin corrupted copy on Korean mir-
ror server. https://sourceforge.net/blog/phpmyadmin-
back-door/, 2012.
[123] J. K. Smith. Security incident on Fedora infrastructure
https://lists.fedoraproject.org/
on 23 Jan 2011.
pipermail/announce/2011-January/002911.html,
2011.
[124] Steve Klabnik. Security advisory for crates.io, 2017-09-19.
https://users.rust-lang.org/t/security-advisory-
for-crates-io-2017-09-19/12960.
[125] Steven J. Vaughan-Nichols.
Red Hat’s Ceph and
http:
Inktank code
//www.zdnet.com/article/red-hats-ceph-and-
inktank-code-repositories-were-cracked.
repositories were
cracked.
[126] Swati Khandelwal.
CCleaner Attack Timeline–
Here’s How Hackers
Infected 2.3 Million
PCs.
https://thehackernews.com/2018/04/ccleaner-
malware-attack.html, 2018.
W32.Duqu: The precursor to the next
Stuxnet.
http://www.symantec.com/content/en/us/
enterprise/media/security_response/whitepapers/
w32_duqu_the_precursor_to_the_next_stuxnet.pdf.
https://
www.symantec.com/content/en/us/enterprise/media/
security_response/whitepapers/w32_stuxnet_
W32.Stuxnet Dossier.
[128] Symantec.
[107] M. Mullenweg. Passwords Reset. https://wordpress.org/
[127] Symantec.
USENIX Association
28th USENIX Security Symposium    1409
dossier.pdf.
[129] Symantec Corporation. Internet threat security report, 2018.
https://www.symantec.com/content/dam/symantec/
docs/reports/istr-23-2018-en.pdf.
[130] The FreeBSD Project. FreeBSD.org intrusion announced
http://www.freebsd.org/news/
November 17th 2012.
2012-compromise.html, 2012.
[131] The PHP Group.
http://
www.php.net/archive/2011.php#id2011-03-19-1, 2011.
http:
[132] The PHP Group. A further update on php.net.
php.net security notice.
//php.net/archive/2013.php#id2013-10-24-2, 2013.
[133] The YAML Project.
The Ofﬁcial YAML Web Site.
https://yaml.org/, 2019.
[134] Thomas Reed. HandBrake hacked to drop new variant of Pro-
ton malware. https://blog.malwarebytes.com/threat-
analysis/mac-threat-analysis/2017/05/handbrake-
hacked-to-drop-new-variant-of-proton-malware/.
[135] Thomas Reed. XcodeGhost malware inﬁltrates App Store.
https://blog.malwarebytes.com/cybercrime/2015/
09/xcodeghost-malware-infiltrates-app-store/.
[136] K. Thompson.
Reﬂections on Trusting Trust.
http://cm.bell-labs.com/who/ken/trust.html.
[137] Travis CI. Travis CI – test and deploy your code with
conﬁdence. https://travis-ci.org/.
[138] Trend Micro Cyber Safety Solutions Team. Supply Chain
Attack Operation Red Signature Targets South Korean
Organizations, 2018.
https://blog.trendmicro.com/
trendlabs-security-intelligence/supply-chain-
attack-operation-red-signature-targets-south-
korean-organizations/.
[139] Trend Micro Cyber Safety Solutions Team. New Magecart
Attack Delivered Through Compromised Advertising Supply
Chain, 2019. https://blog.trendmicro.com/trendlabs-
security-intelligence/new-magecart-attack-
delivered-through-compromised-advertising-
supply-chain/.
[140] W. Verduzu. Xposed Patch for Master Key and Bug 9695860
https://www.xda-developers.com/
Vulnerabilities.
xposed-patch-for-master-key-and-bug-9695860-
vulnerabilities/, 2013.
[141] L. Voss.
Newly Paranoid Maintainers.
//blog.npmjs.org/post/80277229932/newly-
paranoid-maintainers, 2014.
http:
[142] T. Warren.
Major new iOS bug can crash iPhones.
https://www.theverge.com/2018/2/15/17015654/
apple-iphone-crash-ios-11-bug-imessage.
[143] F. Weimer. CVE-2013-6435. https://access.redhat.com/
security/cve/CVE-2013-6435, 2013.
[144] D. A. Wheeler. Fully countering trusting trust through diverse
double-compiling. arXiv preprint arXiv:1004.5534, 2010.
[145] Yan/Bcrypt.
[146] Zack Whittaker.
Software transparency: Part 1.
https://
zyan.scripts.mit.edu/blog/software-transparency/.
Hacker explains how he put ‘back-
http:
door’ in hundreds of linux mint downloads.
//www.zdnet.com/article/hacker-hundreds-were-
tricked-into-installing-linux-mint-backdoor.
[147] K. Zetter. ’Google’ Hackers had ability to alter source code’.
https://www.wired.com/2010/03/source-code-hacks.
indicates that a pattern must appear as a
DISALLOW: indicates that artifacts matched by the pattern
are not allowed as materials or products of this step.
REQUIRE:
material or product of this step.
CREATE: indicates that products matched by the pattern
must not appear as materials of this step.
DELETE: indicates that materials matched by the pattern
must not appear as products of this step.
MODIFY: indicates that products matched by the pattern
must appear as materials of this step, and their hashes
must not by the same.
MATCH:
indicates that the artifacts ﬁltered in using
source-path-prefix/pattern must be matched to a
"MATERIAL" or "PRODUCT" from a destination step
with the "destination-path-prefix/pattern".
B Surveyed Attacks
Attack Name
*NotPetya [35]
CCleaner Attack [126]
Operation Red [138]
KingSlayer [118]
RedHat breach [125]
keydnap [71]
backdoored-pypi [52]
PEAR breach [33]
Monju Incident [55]
Janus Vulnerability [89]
Rust ﬂaw [124]
XcodeGhost [113]
Expensive Wall [8]
WordPress breach [107]
HandBrake breach [134]
Proton malware [86]
FOSSHub breach [103]
BadExit Tor [66]
Fake updater [95]
Bitcoin Gold breach [70]
Adobe breach [44]
Google Breach [147]
ProFTPD breach [120]
Kernel.org breach [62]
Hacked Linux Mint [146]
Code Spaces breach [51]
Unnamed Maker [53]
Gentoo backdoor [76]
Buggy Windows [68]
Buggy Mac [37]
Key
Compromise
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)























Access
Level
PI
BS, PI
PI
PI
BS
PI
PI
PI
PI
PI
PI
BS
BS
CR
PI
PI
PI
PI
PI
PI
CR
CR
CR
CR
PI
CR
PI
CR
PI
PI
A in-toto artifact rule deﬁnition
The following artifact rule deﬁnition is taken from the
in-toto speciﬁcation v0.9 [14].
ALLOW: indicates that artifacts matched by the pattern are
allowed as materials or products of this step.
Table 4: Summary of surveyed supply chain attacks. CR,
BS and PI stand for Code Repository, Build System and
Publishing Infrastructure, respectively. A (cid:88)indicates that
the attack involved a key compromise. In one attack, marked
with a star (*), it was unknown if a compromised key was
involved. We assumed that was the case.
1410    28th USENIX Security Symposium
USENIX Association