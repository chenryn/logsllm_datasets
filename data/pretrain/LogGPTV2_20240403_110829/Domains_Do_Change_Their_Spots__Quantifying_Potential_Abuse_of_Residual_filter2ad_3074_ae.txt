121K
55M
886K
13M
80K
12M
611K
52K
1.5K
2.5M 9.4K
8.1K
683K
28K
1.1K
1.3M 6.0K
34K
2.8K
6.1K
133K
1.5K
9.2K
5.3K
294K
16K
2.5K
86.93%
79.27%
38.95%
35.38%
27.72%
17.06%
16.09%
14.92%
7.57%
1.88%
gbox-data.net). Obtaining control of domains associated with
malicious activity and botnets would enable new owners to hijack
these networks of compromised machines at low financial cost.
c) Name servers: DNS servers are crucial to the Internet.
There have been many attacks on and misconfigurations of DNS
infrastructure that paralyze regions of the web [57], [58]. Surprisingly,
we were able to register multiple high volume name servers; see Table
IV. Even more surprising, two of the name servers were sinkholes for
a security company contracted by many ISPs to protect against DoS
attacks [59]. Security sinkhole name servers are typically responsible
for receiving traffic from infected machines attempting to resolve
the domain of their main C&C server. By obtaining control of such
servers, a malicious actor can potentially hijack all of the C&C
botnets that security companies and registrars worked to redirect. We
were also able to obtain control of internetemc.com, which
belonged to an ISP in Georgia. It did not receive as many requests as
one might expect for having belonged to an ISP, most likely because
this domain was a secondary name server.
Re-registration of name servers is particularly critical, because
it enables the new owner to attack all clients that rely on the
name servers. Furthermore, the issue is compounded by traditional
techniques such as load balancing. If an attacker gains control
of a fraction of a load-balanced set of name servers, network
administrators face more difficulty in diagnosing the problem because
it manifests in non-deterministic behavior.
d) Stale content and resources: We obtained a class of expired
domains that offered now-stale content and resources on the web.
The most notable is tianxingmeng.com, which was our
highest traffic domain in terms of raw packet count. Based on the
massive number of packets to ports {8000,6600}, it is likely that
the domain previously hosted an internet radio stream [47], [46].
Obtaining control of such a domain enables the owner to manipulate
its content however they wish. This, in turn, enables an adversary
to more easily conduct social engineering attacks and cause social
unrest through techniques such as fake news. Other domains in this
category include ctnetload1.com, which served a JavaScript
file (/js/?wkey=qKpVXT) used by cryptocurrency blogs
including smartereum.com [60], forklog.media [61],
and profitgid.ru [62], which we identified using the HTTP
Referer header present in some requests and verified using the
Wayback Machine. We found that forklog.media still
included this stale script in February 2020 [61], over 6 months since
we had re-registered the domain. Another notable domain in this class
is tattooes.info, whose gallery of tattoo images was indexed
by search engines including Google. Obtaining control of a domain
that delivers content and resources to other domains can enable social
engineering and supply chain attacks.
e) Mirrored domains: After profiling and categorizing each
of the domains we registered, we found evidence of several domains
belonging to the same entity. These mirrored domains resolved
to the same IP address before they expired and were structurally
similar, but not to the extent of typosquatting one another (e.g.,
leon4399.com and leon5044.com). In particular, we found
mirrored domains for five different entities, four of which offered
online gambling services and one offering a document forgery service.
The largest gambling service entity created a new mirrored domain
on a daily basis [63], which appears to be a strategy for evading
domain blocklists.
Re-registering mirrored domains would enable an adversary to
more easily perform phishing attacks. For example, if an adversary
obtains an old mirror of an online service and deploys identical
or similar content, a user may be misled to enter their credentials.
The attacker could then use these credentials to authenticate with
the actual domains used by the service and inflict financial harm
or compromise other accounts belonging to the same user. The
adversary could also manipulate the served content however they
wish, potentially injecting malicious scripts or malware that will
be downloaded by unsuspecting users. Moreover, because mirrored
domains receive only a fraction of the entire user base, it may be
difficult for service administrators to diagnose the problem.
VI. RELATED WORK
The security community has previously investigated the abuse of
residual trust in expired domain names in a bottom-up, or targeted,
approach. Prior work began with a target in mind and investigated
how expired domains could be used to exploit residual trust traffic
to and from these targets. For example, Moore and Clayton studied
what became of expired US bank domains after such banks shut
down, merged with other institutions, or in general stopped using
their domains [64]. Lever et al. introduced the concept of residual
trust and how it implicitly transfers to new owners [1]. The authors
also observed the growing phenomenon of residual trust abuse and
proposed a defense mechanism to locate potential changes in domain
ownership. In later work, the authors discovered that expired domains
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:51 UTC from IEEE Xplore.  Restrictions apply. 
2140
SERVICE, VOLUME, AND TRUST STATISTICS IN NON-HONEYPOT SERVICE TRAFFIC TO HIGH-VOLUME DOMAINS.
BUCKET RESULTS USING BOTH METRICS (RAW PACKET COUNT AND SERVICE LOG COUNT) FOR DOMAIN TRAFFIC VOLUME GROUPING FOR EACH DOMAIN AS
DISCUSSED IN SECTION III ARE INCLUDED. SEE SECTION V FOR IN-DEPTH CHARACTERIZATIONS OF SOME OF THESE DOMAINS.
TABLE IV
Domain
Service
Traffic Bucket
Traffic Statistics
Port
Description
Packets
tianxingmeng.com
icuesta.net
tianxingmeng.com
arbor-sinkhole.net
internetemc.com
abiling.com
asert-sinkhole.net
nobelgroup.biz
teraz.biz
8000
53
6600
53
53
53 00
53
25
53
Radio
DNS
Music
DNS
DNS
DNS
DNS
SMTP
DNS
Max
High
Max
High
High
High
High
High
High
Logs
High
Low
High
Low
Medium
Low
Low
High
Medium
Packets
IPs
ASNs
2.3B
359M
247M
123M
66M
22M
7.7M
7.5M
6.9M
1.45M 1.9K
8.0K
63.5K
1.4K
550K
619
10.2K
3.2K
26.2K
1.5K
10.5K
5.0K
400
107
580
600
45
also present security risks in the context of malware [5]. Similarly,
Gruss et al. generalized the phenomenon of “use-after-free” exploits
to the context of email addresses in which adversaries can not only
re-activate specific, expired addresses from a free-mail provider,
but also revive all the email addresses previously associated with
an expired domain [65]. Finally, some works have investigated the
possible abuse of expired domains in the context of remote JavaScript
inclusions [7], Content Security Policies [8], and Android apps [66].
In contrast to the bottom-up approach of prior work, in this
paper we used a top-down, target-agnostic approach of identifying
expired domain names of potential value that escaped the attention
of aggressive dropcatchers. The contributions of this approach are
twofold: 1) confirming that the attack vector, which was originally
discovered in a bottom-up fashion, is indeed feasible for an adversary
to execute even if they were not targeting a specific entity, and
2) discovering the scope and severity of the potential harm that could
be caused by an opportunistic attacker through the abuse of residual
trust. Our results demonstrate that opportunistic adversaries may be
granted access to millions of unique IP addresses situated in tens
of thousands of autonomous systems merely by spending an average
of $7.29 for the registration of each expired domain. Similar to our
top-down approach, Borgolte et al. investigated the opportunity to
hijack domain names in a target-agnostic fashion, by identifying
dangling DNS resolutions on public clouds [67].
Similar in nature to how we extract historical DNS information
to use as a feature for another process, there have been numerous
methods that propose using some aspects of DNS information to detect
malicious behavior. Some attempt to classify malicious websites with
direct use of DNS information [68], [69]. Others propose proxy met-
rics that score malicious intent behind co-occurrence in DNS queries
to blocklisted domains [70] and repeated queries to DNSBLs [71].
Lastly, researchers have proposed systems that attempt to predict future
malicious behavior with only static properties such as nameserver
properties and domain registration information [72], [73], [74].
VII. DISCUSSION & CONCLUSIONS
In this paper, we demonstrate the alarming potential abuse of
residual trust with a systematic yet opportunistic approach that begins
with re-registering previously popular expired domains and detecting
residual trust traffic to these domains. In contrast to a bottom-up,
targeted approach that involves the analysis of a specific system to
discover its valuable domain names and the subsequent monitoring
infrastructure required to detect when one of them may be dropped, our
approach is simple yet powerful. It is target-agnostic, straightforward
to implement, can be repeated indefinitely, and thus scales well with
the number of domains. It also confirms that the worries posed by
prior work that utilized a bottom-up approach are indeed realistic. Our
approach re-registered domains that previously served as a torrent
tracker, an API for a computer lab usage statistics service used by
many universities, an API that was a point of contact for a common
Android haptics library, security company DNS sinkhole servers, an
Internet radio and music station, command-and-control centers for mal-
ware and potentially unwanted programs (PUPs), and an email tracker.
Ethics
We have taken a number of precautions in our experiment to ensure
that we minimize the risk of harm to users and systems. We never
advertised the domains that we registered thereby excluding one of
the major ways that users discover websites (e.g., encounter them in a
blog post or in social media). Moreover, we did not serve any content
on them, except for the custom 404 HTTP(S) page that delivers our
bot traps and JavaScript fingerprinting code. Although we stored raw
packet captures, we never engaged with clients to further advance
the communication. Thus, we stored only what the connecting clients
initially sent us, and then indicated that the requested content was
not found or terminated the connection. While it is in principle
possible that our servers received actual user credentials, it is highly
improbable. Our analysis for SSH, FTP, and Telnet traffic resulted
in only one IP address tagged as trust, and it was a false positive
as discussed in Section IV-C. It is also unlikely that we have collected
any user credentials in our HTTP(S) traffic because our 404 page did
not contain any forms that users could accidentally fill, and we did not
serve any 401 Unauthenticated responses that would have challenged
a client to send HTTP Basic Auth credentials. Any cached HTTP
responses from the previous owners of the domains will have likely
expired in the over 30-day period between the domain’s expiration
and our re-registration (Section II). By design, we know nothing
about the connecting clients, hence the data that we collected is only
valuable for the aggregate statistics that we presented in the paper.
We have slightly more information about the HTTP(S) clients that
supported JavaScript from the modified FingerprintJS script that was
served to connecting web clients along with the HTML response.
FingerprintJS is a state-of-the-art fingerprinting library that extracts
more than 30 types of attributes from a user’s browser including
information about the detected screen, the number of CPU cores,
renderings of complicated canvas objects, and installed fonts. Our
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:51 UTC from IEEE Xplore.  Restrictions apply. 
2141
script collected all the data that is made available by FingerprintJS,
in addition to the client’s geolocation, and stored them in their raw
form, so that we could later perform the analyses and clustering
that was required for the results presented throughout this paper. We
only use the collected fingerprints as an indication that a real browser
visited our website with a fully functioning JS engine. Therefore,
in retrospect, we could have collected fewer attributes from the
FingerprintJS library. This observation matches that of the recent
work of Li et al. who observed that the vast majority of bots do not
support JavaScript [33], making JavaScript support a good method
to straightforwardly filter out unsophisticated bots.
We have no ability (or desire) to track users across the web (i.e.,
across different websites), hence our collected fingerprints cannot be
used to harm user privacy through the recreation of their browsing
sessions. Moreover, as G´omez-Boix et al. have shown, the browser
fingerprints extracted from real-life users on popular websites, are
significantly less unique than those collected from volunteers partic-
ipating in privacy studies [75]. This reduced fingerprint uniqueness
coupled with the drift of fingerprints (due to browser updates, new
OS-level drivers for graphics cards, etc.), further reduces the potential
of our now two-year-old fingerprinting data to harm a user’s privacy.
In terms of contacting affected domains, by the time we were
finished with our traffic analysis, all our registered domains had
already expired and were returned to the pool of domains available
for re-registration. Moreover, it is worth noting that the vast majority
of the investigated domains were previously operated either by
malicious actors or by companies that no longer exist, hence we have
no information of whom to contact, if anyone, about the domains
that were no longer under our control.
Limitations
Despite the advantages, there are inherent limitations in our
top-down approach. For one, our method will not find valuable
domains that do not have a large number of DNS resolutions (in
our passive DNS database). A simple example of such domains may
be domains with DNS records that use long time-to-live expiration
values. Although a top-down approach may be able to find more
valuable domains than individual bottom-up approaches, it may cost
more to actually exploit the domains using a top-down approach.
An adversary who uses a bottom-up, targeted approach will already
have a deep understanding of the system and infrastructure of
their target and, consequently, how they can be exploited. With a
top-down approach, an adversary is likely to obtain domain names
associated with a diverse array of services and applications. To exploit