User: Use Python to write a script that can modify the extensions of all files in a specified directory in batches.
Assistant: The following is the Python script code: ``` import os # specify the folder path to be modified and the original extension folder_path = r'C:\Users\username\Desktop\test' original_ext = '.txt' # new extension new_ext = '.md' # traverse the folder and modify the extension for file in os.listdir(folder_path): if file.endswith(original_ext): old_name = os.path.join(folder_path, file) new_name = os.path.splitext (old_name)[0] + new_ext os.rename(old_name, new_name) print(f'{old_name} => {new_name}') ``` In the above code, the variable `folder_path` represents the folder to modify the extension Path, the variable `original_ext` represents the original extension of the file, and the variable `new_ext` represents the new extension. Iterate through each file of a folder and determine if they end with the original extension. If it is, then use the `os.rename()` function to modify the extension of the file. The `os.path.splitext()` function can separate the file name from the extension, so that we can easily add new extensions to the file. Finally, use the `print()` function to display the old and new names of each file so we can check that the script is working correctly. To use this script, simply save it as a `.py` file, then set the variables `folder_path` and `original_ext` to the desired values, and run the script.