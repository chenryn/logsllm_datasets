title:DPSense: Differentially Private Crowdsourced Spectrum Sensing
author:Xiaocong Jin and
Rui Zhang and
Yimin Chen and
Tao Li and
Yanchao Zhang
DPSense: Differentially Private Crowdsourced
Spectrum Sensing
Xiaocong Jin
Arizona State University
PI:EMAIL
Rui Zhang
University of Delaware
PI:EMAIL
Yimin Chen
Arizona State University
PI:EMAIL
Tao Li
Arizona State University
PI:EMAIL
ABSTRACT
Dynamic spectrum access (DSA) has great potential to address
worldwide spectrum shortage by enhancing spectrum efﬁciency.
It allows unlicensed secondary users to access the underutilized
licensed spectrum when the licensed primary users are not trans-
mitting. As a key enabler for DSA systems, crowdsourced spec-
trum sensing (CSS) allows a spectrum sensing provider (SSP) to
outsource the sensing of spectrum occupancy to distributed mobile
users. In this paper, we propose DPSense, a novel framework that
allows the SSP to select mobile users for executing spatiotempo-
ral spectrum-sensing tasks without violating the location privacy of
mobile users. Detailed evaluations on real location traces conﬁr-
m that DPSense can provide differential location privacy to mobile
users while ensuring that the SSP can accomplish spectrum-sensing
tasks with overwhelming probability and also the minimal cost.
CCS Concepts
•Security and privacy → Privacy-preserving protocols; Mobile
and wireless security;
Keywords
Dynamic spectrum access; differential privacy; crowdsourced spec-
trum sensing; location privacy
1.
INTRODUCTION
Dynamic spectrum access (DSA) [28] is a key technique to ad-
dress worldwide spectrum shortage by enhancing spectrum efﬁ-
ciency.
It allows unlicensed secondary users (SUs) with cogni-
tive radio capabilities to access the underutilized licensed spec-
trum when the licensed primary users (PUs) are not transmitting.
Database-driven DSA [10,12] is the FCC-approved de facto paradig-
m. In such a system, a spectrum service provider (SSP) accepts
registrations from PUs and determines spectrum availability, and
SUs are all required to inquire the SSP about the availability of any
interested spectrum before using it. Current SSPs estimate spec-
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24-28, 2016, Vienna, Austria
© 2016 ACM. ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978426
Yaochao Zhang
Arizona State University
PI:EMAIL
trum availability based on PUs’ registered locations and transmis-
sion schedules in combination with radio propagation modeling.
Recent measurement studies such as [21], however, show that such
estimations are often inaccurate and tend to be overly conservative
due to ignoring local environmental factors, resulting in a consid-
erable waste of valuable spectrum resources.
Crowdsourced spectrum sensing (CSS) [8, 11] can effectively
improve the spectrum-estimation accuracy in database-driven D-
SA systems.
In this approach, the SSP deploys a small number
of dedicated spectrum sensors at strategic locations and outsources
the majority of spectrum-sensing tasks to ubiquitous mobile users.
The feasibility of CSS lies in three main aspects. First, 497 million
mobile devices were added in 2014, and global mobile devices will
grow to 11.5 billion by 2019 at a CAGR of 9% [1]. Such ubiquitous
penetration of mobile devices into everyday life implies sufﬁcient
geographic coverage especially in highly populated regions where
DSA systems are of high demand. Second, future mobile devices
are expected to be capable of spectrum sensing as DSA is mature
and widely deployed. Last, most mobile users in daily life take
routine or preplanned routes and may participate in CSS systems if
proper incentives are provided.
Privacy and efﬁciency are two conﬂicting concerns that impede
the wide deployment of CSS systems.
In particular, spectrum-
sensing tasks are spatiotemporal in nature and pertain to speciﬁc
time and physical locations. In addition, mobile users often need
travel to designated sensing locations, and they may desire rewards
commensurate with the travel distance. On the one hand, the SSP
seeks to maximize the system efﬁciency such that the spectrum-
sensing task can be successfully fulﬁlled with the minimum cost
which is equivalent to the minimum total travel distance for all par-
ticipating users. To achieve the maximum system efﬁciency, the
SSP needs to know the locations of candidate participants. On the
other hand, mobile users are increasingly wary of location privacy,
and disclosing their locations to the SSP may severely discourage
their participation.
This paper presents DPSense, a novel framework for striking a
good balance between location privacy and system efﬁciency in C-
SS systems. In DPSense, the SSP publishes spectrum-sensing tasks
for speciﬁc locations and time periods in the future. Each candidate
CSS participant responds to the SSP by submitting his/her predict-
ed (either routine or preplanned) mobility trace which is perturbed
to satisfy differential location privacy. We then present an optimiza-
tion formulation for the SSP to assign spectrum-sensing tasks based
on perturbed mobility traces and show that it is NP-hard. Finally,
we propose a heuristic solution and thoroughly evaluate it via de-
tailed trace-driven simulations based on real-world mobility traces.
296Our results conﬁrm that DPSense can simultaneously achieve the
following desirable objectives.
• Differential location privacy. DPSense offers differential lo-
cation privacy to mobile participants under a strong adver-
sary model by incorporating the mechanism in [27].
• Minimal cost or travel distance. DPSense assigns spectrum-
sensing tasks to mobile participants based on their perturbed
location traces while ensuring the minimal cost for the SSP
or equivalently minimum total travel distance for mobile par-
ticipants.
• High task-completion rate. DPSense guarantees that each
spectrum-sensing task can be successfully conducted with
overwhelming probability.
The rest of the paper is structured as follows. Section 2 intro-
duces the system and adversary models. Section 3 motivates the
requirement for location privacy in CSS. Section 4 reviews the d-
ifferential privacy mechanism in [27] underlying DPSense. Sec-
tion 5 presents the DPSense framework. Section 6 demonstrates
the experimental evaluations. Section 7 discusses the related work.
Section 8 concludes this paper.
2. SYSTEM AND ADVERSARY MODELS
In this section, we introduce the system model, the spectrum-
sensing model, and the adversary model.
2.1 System Model
We consider a crowdsourced spectrum sensing (CSS) system
consisting of a spectrum service provider (SSP) and N mobile par-
ticipants in CSS. In addition to having the similar functionalities to
traditional database-driven DSA system operators [10,12], the SSP
explores mobile crowdsourcing to estimate spectrum availability in
its service region and answers spectrum access requests from SUs.
Each mobile participant is a user who carries an advanced mo-
bile device with spectrum sensing capabilities and wishes to earn
rewards by participating in CSS. The participant registers with the
SSP and communicates with the SSP via an app installed on his1
mobile device. Developed by the SSP, the app is assumed to pass
the strict vetting process of the trusted app store and has no unau-
thorized access to the user’s locations.
The SSP generates a spectrum-sensing task either periodically or
on demand upon receiving a spectrum-access request from an SU.
Our system works in the same way for both cases. The SSP con-
verts each sensing task into a number of subtasks to ensure that the
sensing reports submitted by different mobile participants are inde-
pendent of each other. In particular, let Tj denote the j-th sensing
task, which includes Rj as the physical sensing region, ts
j as the
sensing time period, and divj as the targeted diversity order to be
further explained in Section 2.2. The SSP ﬁrst selects nj candidate
sensing locations in Rj, denoted by {ls
k=1, such that any two
locations are separated with a distance over d0, where d0 is a ﬁxed
system parameter. The SSP then generates nj subtasks {Sj,k}nj
k=1,
where Sj,k = (ls
j ). Finally, the SSP assigns subtasks to mo-
bile participants based on their mobility traces. A subtask can be
accepted or declined by the chosen mobile participant. Task Tj is
said to be completed if and only if at least divj subtasks are accept-
ed by mobile participants.
j,k}nj
j,k, ts
To enable spectrum-sensing task assignment, each participant i
periodically predicts his mobility trace for the upcoming time peri-
od and submits it to the SSP. This can be easily done in practice, as
1No gender implication.
most mobile users have target locations to go instead of wandering
around. Each mobility trace can be represented as a sequence of γ
location and time pairs, Li = (cid:3)(ti,1, li,1), . . . ,( ti,γ, li,γ)(cid:4), where
ti,u and li,u (∀u ∈ [1, γ]) denote the u-th time and location points,
respectively, and γ is a system parameter. To be more practical,
ti,u and li,u can be the indexes of a time slot and a physical cell,
as speciﬁed by the SSP. The mobility traces can be either automat-
ically obtained via popular location service APIs such as Google
Map API or manually fed to the mobile app by participants. Some
participants may opt to not provide their mobility traces, in which
case they are considered unavailable for the entire time period.
2.2 Spectrum Sensing Model
Each mobile participant performs spectrum sensing by detecting
PU transmissions on the speciﬁed channel in the time and loca-
tion designated by the SSP. We adopt the following conventional
spectrum-sensing model to facilitate the presentation, but our work
can be easily extended to support other sensing models.
We assume that the channels between PUs and mobile partici-
pants are Rayleigh fading with additive white Gaussian noise (AWGN).
The shadow fading is spatially correlated, and the correlation of
the received signals for two spectrum sensors separated by distance
d can be modeled as an exponential function e−ad [20], where a
refers to an environment parameter which is approximately 0.1204
and 0.002 in urban non-line-of sight and suburban environments,
respectively. The de-correlation distance d0 is deﬁned as the min-
imum distance for two spectrum sensors when the correlation is
under a desired threshold.
We assume that the SSP uses the Neyman-Pearson (NP) detector
to combine multiple sensing reports from mobile participants to
reliably determine spectrum occupancy. Speciﬁcally, for a target
average decision error probability P ∗
that accounts for both false
positives and false negatives, the number of independent spectrum-
sensing reports needs to be no less than the diversity order [6, 24],
div∗
= − lim
SNR→+∞
logP ∗
logSNR
,
(1)
where SNR is the average signal-to-noise ratio at the sensing partic-
ipants. We subsequently assume that the SSP can determine proper
div∗
for each spectrum sensing task.
Once the diversity order is concretely deﬁned, the following the-
orem can be similarly derived according to [6].
THEOREM 1. For multiuser sensing with soft information fu-
sion, when the sensing threshold is chosen to minimize the average
error probability, the diversity order of the NP detector equals the
number of cooperative users.
Similar conclusions can be drawn for hard decision fusion as well.
For details, please refer to [6].
2.3 Adversary Model
We assume that the SSP is honest but curious, which is common-
ly used to characterize a reasonable service provider. In particular,
the SSP is trusted to faithfully follow the protocol execution but is
also interested in learning mobile participants’ locations. We as-
sume that the SSP can have arbitrary prior knowledge for attempt-
ing to breach the participants’ location privacy. In particular, it may
infer target mobile participant’s location by exploiting the temporal
correlation among the submitted mobility traces.
3. LOCATION INFERENCE IN CSS
In the original CSS system, the SSP needs to know the locations
of mobile participants for assigning sensing tasks. This require-
297TA
TB
TC
Figure 1: An exemplary location-inference attack, where the par-
ticipant chooses TB over TA and TC.
TC
TB
TA
Cloaking 
region
TC
TA
TB
Figure 2: Another exemplary location-inference attack, where tri-
angulation is used to locate the possible region of the victim.
ment obviously violates the location privacy of mobile participants
in the desired sensing period. It is worth emphasizing that loca-
tion privacy here refers to the secrecy of each participant’s original
mobility trace when he is not involved in CSS. In this section, we il-
lustrate several location-inference attacks against several plausible
attempts to improve the location privacy in CSS.
One plausible solution to protecting location privacy in CSS is
to let the SSP broadcast spectrum-sensing tasks to all mobile par-
ticipants who then claim tasks without disclosing their locations
to the SSP. Unfortunately, since mobile participants tend to select
sensing tasks close to their locations, the SSP could still infer their
locations based on the tasks they choose. The reason is that mobile
participants generally are only willing to travel up to a certain dis-
tance (e.g., slightly deviating from their scheduled routes), which is
commonly referred to as the maximum travel distance (MTD) and
can be learned from publicly available data [14]. The sensing task
chosen by a mobile participant simply indicates that his location
is most likely within the circle centered at the chosen task’s cen-
ter location with a radius of MTD, and such information is what
the participants may not want to disclose. The SSP can go one
step further to shrink the area a participant resides from his sensing
preference. Consider Fig. 1 as an example. Assume that the SSP
broadcasted three tasks TA, TB, and TC, where three circles repre-
sent their corresponding maximum travel regions. Suppose that a
target participant chose task TB. Under the reasonable assumption
that the participant always chooses the closest task, the SSP can
easily conﬁne the participant’s location within the shaded area.
A more subtle attack against the above plausible solution is to
use trilateration. Assume that the SSP broadcasts one sensing task
in one round around the target area but with slight modiﬁcation of
the sensing region, as shown in Fig. 2. The three rounds can be
carefully scheduled so that during the three rounds, the participant
could be very likely located in the same location. For example,
Figure 3: Another exemplary location-inference attack that ex-
plores the temporal correlation of adjacent reported locations.
the three rounds can be scheduled simply at the same time of the
day. In the ﬁgure, the participant sequentially chooses the sensing
tasks TA, TB, and TC. The SSP could simply use triangulation
to ﬁnd out the intersection of the three regions so that the victim
is very likely in the highlighted region. As is shown, the area of
the intersection could be very small. Therefore, the participant’s
location privacy is further compromised.
Another possible solution is to let the participants submit per-
turbed locations to the SSP which in turn assigns sensing tasks
based on perturbed locations. Unfortunately, based on a recent s-
tudy [27], the SSP can still infer participant locations by exploiting
the temporal correlation among multiple perturbed locations sub-
mitted within a short time period. Consider Fig. 3 as an example.
Suppose that one participant moved from a restaurant in area 1 to
a supermarket in area 3 and submitted three circular cloaking ar-
eas generated from some spatial cloaking mechanism. Although
the individual locations were cloaked at each time, the order of the
three cloaking areas along with some side information such as road
constraints may reveal his exact location at the supermarket.
The three exemplary attacks discussed above highlight the risk
of location privacy breach in CSS and call for an advanced solution
to protect mobile participants’ location privacy.
4. DIFFERENTIAL PRIVACY WITH TEM-
PORAL CORRELATION CONSIDERATION
In this section, we brieﬂy review the differential privacy mecha-
nism in [27], which DPSense relies on for generating differentially
private mobility traces.
4.1
Inference Model
We ﬁrst discuss the Markov chain to model the temporal corre-
lations among the submitted locations of a particular CSS partici-
pant. From the SSP’s point of view, since it can only observe the
perturbed mobility trace instead of the original one, the inference
process is a Hidden Markov Model (HMM).
Assume that the sensing region is divided into disjoint cells, in-
dexed from 1 to m. Let pt = (pt[1], . . . , pt[m]) denote the prob-
ability distribution of a certain participant at time t. For example,
if a participant at time t is likely to reside in cell 1, 2, 3, and 4
with probability 0.15, 0.25, 0.35, and 0.25, respectively, we have
pt = {0.15, 0.25, 0.35, 0.25, 0, ..., 0}. Let M t = [mij] denote
298the transition matrix, where mij is the probability that the partic-
ipant moves form cell i to cell j for all 1 ≤ i, j ≤ m between
consecutive timestamps. Given a probability vector pt−1, the prob-
ability at time t can be computed as pt = pt−1M t. We assume that
the transition matrix M t is given as a priori knowledge, which can
be generated either from public transportation data or from person-
al transportation data2 using existing methods [22]. Since M t can
be constructed based on some public anonymized mobility datasets
that are totally unrelated to the participants in our system, it does
not negatively affect the location privacy of our system participants.
We further deﬁne the prior and posterior probabilities of a user’s
location before and after observing the perturbed location at time t
as p−
t , respectively. It is obvious that p−
4.2 Differential Location Privacy
t and p+
t = p+
t−1M t.
Differential location privacy is deﬁned over a δ-location set [27].
Deﬁnition 1. (δ-Location Set). Let p−
t be the prior probability
of a user’s location at time t. The δ-location set is a set containing
the minimum number of locations that have the prior probability
sum no less than 1 − δ:
(cid:2)
z
ΔXt = min{z|
t [z] ≥ 1 − δ}.
p−
(2)
Deﬁnition 2. At any time t, a randomized mechanism A satis-
ﬁes -differential privacy on the δ-location set ΔXt if, for any out-
put ˆut and any two locations u1 and u2 in ΔXt, the following
holds:
Pr(A(u1) = ˆut)
Pr(A(u2) = ˆut)
≤ e.
(3)
To satisfy the differential privacy requirement deﬁned above, a
location release algorithm that relies on Markov inference and the
planar isotropic mechanism is proposed in [27]. The output of the
algorithm is a differentially private version of the input mobility
trace. We defer the algorithm outline to Section 5.2 for clarity.
5. DPSENSE FRAMEWORK
In this section, we present the DPSense framework.
5.1 Overview
DPSense is intended to strike a balance between the spectrum-
sensing quality, the overall spectrum-sensing cost, and the location
privacy. The DPSense framework is illustrated in Fig. 4.
Assume that the SSP has M sensing tasks, denoted by T =
{Tj}M
j=1 , to fulﬁl in a future time period, e.g., starting one hour
later. Each mobile participant i submits his predicated mobility
trace either periodically or in response to the SSP’s request. Recall
that the mobility trace of participant i in the target sensing period
is deﬁned as Li = (cid:3)(ti,1, li,1), . . . ,( ti,γ, li,γ)(cid:4).
Instead of sub-
mitting Li to the SSP, participant i submits a perturbed version Lo
i
based on the algorithm in [27]. Subsequently, the SSP smooths the
perturbed traces according to the procedure in Section 5.3 and ﬁ-