title:Game of Missuggestions: Semantic Analysis of Search-Autocomplete Manipulations
author:Peng Wang and
Xianghang Mi and
Xiaojing Liao and
XiaoFeng Wang and
Kan Yuan and
Feng Qian and
Raheem A. Beyah
Game of Missuggestions: Semantic Analysis of
Search-Autocomplete Manipulations
Peng Wang∗, Xianghang Mi∗, Xiaojing Liao†, XiaoFeng Wang∗, Kan Yuan∗, Feng Qian∗, Raheem Beyah‡
∗Indiana University Bloomington, †William and Mary, ‡Georgia Institute of Technology
∗{pw7, xmi, xw7, kanyuan, fengqian}@indiana.edu, †PI:EMAIL, ‡PI:EMAIL
Abstract—As a new type of blackhat Search Engine Op-
timization (SEO), autocomplete manipulations are increasingly
utilized by miscreants and promotion companies alike to advertise
desired suggestion terms when related trigger terms are entered
by the user into a search engine. Like other illicit SEO, such
activities game the search engine, mislead the querier, and in
some cases, spread harmful content. However, little has been
done to understand this new threat, in terms of its scope, impact
and techniques, not to mention any serious effort to detect such
manipulated terms on a large scale.
Systematic analysis of autocomplete manipulation is challeng-
ing, due to the scale of the problem (tens or even hundreds of
millions suggestion terms and their search results) and the heavy
burdens it puts on the search engines. In this paper, we report
the ﬁrst technique that addresses these challenges, making a step
toward better understanding and ultimately eliminating this new
threat. Our technique, called Sacabuche, takes a semantics-based,
two-step approach to minimize its performance impact: it utilizes
Natural Language Processing (NLP) to analyze a large number
of trigger and suggestion combinations, without querying search
engines, to ﬁlter out the vast majority of legitimate suggestion
terms; only a small set of suspicious suggestions are run against
the search engines to get query results for identifying truly abused
terms. This approach achieves a 96.23% precision and 95.63%
recall, and its scalability enables us to perform a measurement
study on 114 millions of suggestion terms, an unprecedented scale
for this type of studies. The ﬁndings of the study bring to light
the magnitude of the threat (0.48% Google suggestion terms we
collected manipulated), and its signiﬁcant security implications
never reported before (e.g., exceedingly long lifetime of campaigns,
sophisticated techniques and channels for spreading malware and
phishing content).
I.
INTRODUCTION
Assume that you enter a query into Google search box.
Figure 1 shows what you would see on May 12, 2017, under
the search term “online backup free download”. Before you can
even ﬁnish typing, a list of suggestions pop up to help complete
the query. This functionality is called search autocomplete,
a service provided by search engines to enable users to
conveniently formulate an effective query by providing only a
small portion of it (called trigger), which is then complemented
by a set of suggestions identiﬁed from common search terms
Network and Distributed Systems Security (NDSS) Symposium 2018
18-21 February 2018, San Diego, CA, USA
ISBN 1-1891562-49-5
http://dx.doi.org/10.14722/ndss.2018.23036
www.ndss-symposium.org
Fig. 1: Autocomplete manipulation on Google.
observed by the search engine [43]. This search assistant
service, however, increasingly becomes the target for Spammers
to perform illicit online promotion. As we can see in the ﬁgure,
a suggestion being triggered is the name of an online backup
software “strongvault”, which turns out to be a potentially
unwanted program. The software has malicious behaviors like
installing adware, hooking the operating system and hijacking
browser. However, Google recommended it as one of the most
relevant suggestions for the trigger, since it was manipulated
to promote the software.
Autocomplete manipulations. Such autocomplete manipu-
lation takes advantage of the way a search engine ranks
suggestions for a given trigger, which according to prior
research [40], [57] and Google’s own description [28], mainly
relies on the popularity of queries observed from search logs.
The content of the logs becomes biased when a large number
of fake queries are crafted to promote a certain term (an
organization, a product, etc.). This has already been done
systematically, with the services available for selling to push
promotional information (even illicit content) to the public
(Section VI). Such activities are essentially a new type of
blackhat search engine optimization (SEO) [15], which like
other illicit SEO, not only reduces the quality of search results,
with negative impacts on the search engine’s reputation, but
also opens an unchecked avenue for miscreants to broadly
disseminate their attack content, infecting a larger victim pool
than they could through free-riding the users’ trust of search
engines. Indeed, our research shows that almost all major
search engines, including Google, Bing, Baidu, Yahoo! and
Yandex, are victims of this attack. The parties offering such
an SEO service typically have no restrict regulations about
the legitimacy of the content to promote, with phishing, even
malware discovered in our study (Section VI). Also, according
to Google, 60% of today’s searches are from mobile devices [1].
On mobile devices, due to their small form factors making them
hard to type, users may highly rely on autocomplete. Therefore
such an attack may cause even more damage to mobile users.
To understand and further mitigate this emerging threat, a
direct solution is to analyze the search logs, the sources for
generating suggestions. This approach, however, can only be
done by the search provider, like Google. Even given the logs, a
thorough analysis of the massive amount of data is by no means
trivial. So far, the only effort made is a prior study that utilizes
Yahoo!’s search logs and a set of conﬁrmed manipulations to
identify the promotion campaigns, for the purpose of monitoring
their other searches [50]. With all the resources, the study only
achieves a moderate success in terms of understanding the
threat (only 3,000 terms inspected), not to mention its fragility
to the evasion performed by those continuously changing their
IP identiﬁers. A truly large-scale study, involving millions of
search terms, by the parties without access to search logs,
cannot be done with the existing techniques. As a result, so
far we know little about the real-world impacts of these illicit
promotions, and could do almost nothing to protect ourselves
against such a threat, in the absence of search engines’ efforts.
Detecting missuggestions with semantics. In this paper, we
report the ﬁrst large-scale study on autocomplete manipulation,
based upon novel techniques to automatically discover abused
suggestions without access to query logs. Our approach, called
Sacabuche (Search AutoComplete Abuse Checking), leverages
a set of unique observations that lead to the features the
manipulators cannot easily evade. More speciﬁcally, we found
that for a query involving manipulated suggestion, there often
exists semantic inconsistency between the trigger phrases
(keywords inside a trigger) and their corresponding target
phrases (keywords in the suggestion). For example, for the
trigger “what is content delivery network”, a keyword “kajabi”
appears in its suggestion; the problem here is the semantics of
the keyword is very different from “content delivery network”,
using the word-embedding technique [7], since the word rarely
shows up together with the trigger phrases. Also observed in
our research are other differentiating features: a legitimate
suggested term tends to be more generic, e.g., “reviews”,
“list” or “companies”, while a manipulated one is often more
speciﬁc, for the purpose of promoting a particular product;
besides, the grammatical structure between a legitimate trigger-
suggestion pair and a manipulated one can differ. Using
these features, we trained a classiﬁer that automatically detect
suspicious terms from the autosuggestions iteratively retrieved
from Autocomplete APIs [19][14][36] provided by Google,
Bing and Yahoo!, using a set of seed triggers. In this way,
we avoid massively querying the search engines, which would
negatively affect its performance.
This screening step effectively removes the vast majority of
legitimate suggestions (from over 114 million terms down to
only 1 million (less than 1%)). The remaining, however, can no
longer be analyzed by only analyzing the semantics of trigger
and suggestion. For example, consider the trigger “products and
services example” and the suggestion “b2b products and service
examples”; the term “b2b” seems to be irrelevant to the trigger,
but turns out to be related. Finding such false positives needs
more information, that is, the content of search results. To this
end, our approach automatically crawls search engines with
these suspicious terms, extracting a set of salient features from
the search results. For example, one of such features measures
is the number of results indexed by search engines: even though
the manipulator could forge a large number of queries, it
becomes much harder to create many relevant results indexed
by the search engines; therefore this feature contributes to
distinguish truly problematic suggestions from legitimate ones.
Using these features (Section IV-C), we run another classiﬁer
to capture illicit suggestions. Our study shows this two-step
approach is very effective, with a precision over 96.23% and a
recall over 95.63%. Also, the approach enables us to massively
process over 114 million suggestions, an unprecedented scale
for an in-depth understanding of this emerging threat.
We note that, working on search autocomplete manipulation
detection brings in the challenge of result validation, which
is hampered by the difﬁculty in obtaining ground truth.
Speciﬁcally, the detected autocompletes include a large volume
(estimated 95% based on sampling) of results containing
unpopular products with trigger keywords, which is a common
trait of the ground truth autocompletes that we observed.
Our ﬁndings. Looking into the manipulated autocomplete
results reported by Sacabuche, we are surprised to ﬁnd that
this new threat is indeed pervasive, having a large impact
on today’s Internet. More speciﬁcally, over 383K manipulated
suggestions (across 257K triggers) were found from mainstream
search engines, including Google, Bing and Yahoo!. Particularly,
we found that at least 0.48% of the Google autocomplete
results are polluted. The security implications of the attack are
signiﬁcant. For example, our study shows that at least 20% of
these manipulation cases are used for underground advertising,
promoting content as gambling and even malware. We also
discovered that 3K compromised sites within top-10 search
results were actually related to the manipulated autocompletes.
Also interesting is the ecosystem of autocomplete manipu-
lation, as discovered in our study, including the promotion and
evasion techniques being used, the parties involved and the way
they share revenues and others. As an example, we analyzed
Seopmb[29], a suggestion manipulation tool that automatically
simulates user behaviors to generate search queries, and found
that the party using the tool needs to pay rewards points to
its developer whenever promoting suggestions, and the party
can also receive rewards for running promotional tasks for
others. Further, although the website for the tool runs in USA
(Psychz Networks Ashburn), the server it communicates with
is located in Hong Kong. Such communication is encrypted
to evade detection. Also, such autocomplete manipulation
campaigns apparently are quite successful in evading detection:
the manipulated terms typically have a quite long lifetime (34
days), and also new ones counting for 3.7% of all manipulated
terms appear on a daily basis. Our study further investigates the
potential proﬁt of this underground business, using estimated
click-through rate, which shows that the average revenue per
month for a service recipient is $95 per keyword.
Contributions. The contributions of the paper are as below:
• New techniques for detecting missuggestions. We designed
and implemented the ﬁrst system that enables the party without
access to search logs to perform efﬁcient and highly accurate
missuggestion detection. Our new techniques are built on top of
novel applications of NLP techniques, which signiﬁcantly raise
the bar for the attack and control the assumption of resources
on the search engine side, a critical feature for achieving the
scalability of detection.
2
• New understanding of autocomplete manipulation. Using our
new techniques, we conducted the ﬁrst large-scale analysis of
autocomplete manipulation, through automatically discovering
and evaluating over 114 million search terms from major search
engines. For the ﬁrst time, our study reveals the pervasiveness of
this emerging threat and its signiﬁcant security impacts. Further
we discovered the adversary’s strategy and made the ﬁrst
step toward understanding the ecosystem of this underground
business, which is invaluable for mitigating and ultimately
eliminating the threat.
Roadmap. The rest of the paper is organized as follows:
Section II provides the background information; Section III
describes our ﬁndings from the ground truth dataset; Section IV
elaborates the design and implementation of our detection
system and the evaluation of its effectiveness is described in
Section V; Section VI reports our large-scale measurement
study and our ﬁndings; Section VII discusses the limitations of
the study and potential future research; Section VIII reviews
the related prior research and Section IX concludes the paper.
II. BACKGROUND
Before moving into the details of our study, here we explain
how autocomplete works and the NLP technologies utilized in
our research, together with assumptions made in our research.
Search autocomplete. As mentioned earlier, search autocom-
plete is a query prediction service, which offers suggestions
based upon what others are searching for. Such a service is
designed to speed up human-computer interactions, making
it more convenient for users to complete her query, which is
particularly useful to less technical-savvy individuals and those
handicapped. In the meantime, the statistics collected from
query logs guide the user to better formulate her queries.
Such an autocomplete service is built upon prediction
algorithms that automatically identify relevant terms from the
query logs [28]. From the information publicly available, search
engines select suggestions according to the popularity of their
related queries: that is, the frequencies of the phrases searched
by different people and their freshness (how trending they
are as popular topics). Essentially, such search predictions are
meant to capture public interests manifested by human queries.
So all search providers are against the activities that game
their algorithms for advertising less relevant content, which is
actually a new type of blackhat SEO. For example, Google is
reported to continuously monitor suggestion Spam activities
and change its prediction algorithm to make them harder to
succeed[9], and also explicitly block all abusive suggestions, in-
cluding links to malware, phishing and discriminative, offensive
words[11], though the effectiveness of this effort can be limited
(Section VI-A); similarly, Bing is trying to ﬁlter suggestion
Spam, adult and offensive prediction words [8]. Detecting and
understanding such autocomplete Spam is therefore the focus
of our study.
Note that autocompletes may be personalized according to
the client’s location and search history. In some cases, people
won’t really come across the poisoned suggests. Although the
missuggestions detected by us may not show up to some users,
as a ﬁrst step, we mainly looked into English suggestions
(keywords in other languages also show up, see Section IV-B),
changed our search locations and cleaned up search history
after each query to collect suggestions as broadly as possible.
Natural language processing. To automatically identify ma-
nipulated suggestions from their semantics, we utilized a set
of NLP technologies, as summarized in the following.
Word embedding. Word embedding W : words → V n is a pa-
rameterized function mapping each word to a high-dimensional
vector (200 to 500 dimensions), e.g., W (“education”) =
(0.2,−0.4, 0.7, ...), to represent the word’s relation with other
words. Such a mapping can be done in different ways, e.g.,
using the continual bag-of-words model [2] and the skip-gram
technique [30] to analyze the context in which the words
show up. Such a vector representation is designed to ensure
that synonyms are given similar vectors and antonyms are
mapped to dissimilar vectors. In our research, we compared the
semantics meanings of different words by measuring the cosine
distance between the vectors. For example, word embedding
technique automatically identiﬁes the words semantically close
to “casino”, such as “gambling” (cosine distance 0.35), “vegas”
(0.46) and “blackjack” (0.48). We leveraged a popular word
embedding tool, Word2Vec [34], which runs an artiﬁcial neural
network to construct the model for generating the vectors.
Dependency parsing. Dependency parsing is an NLP technique
for describing grammatical relations among words in a sen-
tence. Such relations include direct object, determinant, noun
compound modiﬁer and others. Also, the content of a relative
clause is further analyzed to identify the dependencies between
the words it includes. The state-of-the-art dependency parser
(e.g., Stanford parser [6]) can achieve a 92.2% accuracy in
discovering the grammatical relations in a sentence.
Lemmatization. A natural language document always includes
words in different forms, due to tenses, abbreviations and
grammatical needs, e.g., “organize”, “organizes”, and “organiz-
ing”. Further, there are derivation words with similar meanings
like “slow” and “slowness”. We need to ﬁnd out the original
form of each word, then link their appearances across different
terms. This was done using lemmatization techniques, which
reduce inﬂectional forms and remove inﬂectional endings and
return the base or dictionary form of a word. A common
lemmatization algorithm is morphological analysis [55] to