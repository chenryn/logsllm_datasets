as 128, the training epoch as 200, the learning rate as 0.01.
Testbed. We conduct the Whisper, FSC, and FAE experiments on a
testbed built on a DELL server with two Intel Xeon E5645 CPUs (2
× 12 cores), Ubuntu 16.04 (Linux 4.15.0 LTS), 24GB memory, one
Intel 10 Gbps NIC with two ports that supports DPDK, and Intel
850nm SFP+ laser ports for optical fiber connections. We configure
8GB huge page memory for DPDK (4GB/NUMA Node). We bind 8
physical cores for 8 NIC RX queues to extract per-packet features
and the other 8 cores for Whisper analysis threads, which extract
the frequency domain features of traffic and perform statistical
clustering. In summary, we use 17 of 24 cores to enable Whisper.
Note that, since Kitsune cannot handle high-rate traffic, we evaluate
it with offline experiments on the same testbed.
We deploy DPDK traffic generators on the other two servers
with similar configurations. The reason why we use two traffic gen-
erators is that the throughput of Whisper exceeds the physical limit
of 10 Gbps NIC, i.e., 13.22 Gbps. We connect two flow generators
with optical fibers to generate high speed traffic.
Datasets. The datasets used in our experiments are shown in Ta-
ble 4. We use three recent datasets from the WIDE MAWI Gigabit
backbone network [69]. In the training phase, we use 20% benign
traffic to train the machine learning algorithms. We use the first
20% packets in MAWI 2020.06.10 dataset to calculate the encoding
vector via solving the SMT problem (see Section 4.2). Meanwhile,
we replay four groups of malicious traffic combined with the benign
traffic on the testbed:
• Traditional DoS and Scanning Attacks. We select five active at-
tacks from the Kitsune 2 [42] and a UDP DoS attack trace [7]
to measure the accuracy of detecting high-rate malicious
flow. To further evaluate Whisper, we collect new malicious
traffic datasets on WAN including Multi-Stage TCP Attacks,
Stealthy TCP Attacks, and Evasion Attacks.
• Multi-Stage TCP Attacks. TCP side-channel attacks exploit
the protocol implementations and hijack TCP connections
by generating forged probing packets. Normally, TCP side-
channel attacks have several stages, e.g., active connection
finding, sequence number guessing, and acknowledgement
number guessing. We implement two recent TCP side-channel
attacks [10, 17], which have different numbers of attack
stages. Moreover, we collect another multi-stage attack, i.e.,
TLS padding oracle attack [67].
• Stealthy TCP Attacks. The low-rate TCP DoS attacks gen-
erate low-rate burst traffic to trick TCP congestion control
algorithms and slow down their sending rates [25, 32, 33].
Low-rate TCP DoS attacks are more stealthy than flooding
based DoS attacks. We construct the low-rate TCP DoS at-
tacks with different sending rates. Moreover, we replay other
low-rate attacks, e.g., stealthy vulnerabilities scanning [38].
• Evasion Attacks. We use evasion attack datasets to evalu-
ate the robustness of Whisper. Attackers can inject noise
packets (i.e., benign packets of network applications) into
malicious traffic to evade detection [19]. For example, an
attacker can generate benign TLS traffic so that the attacker
sends malicious SSL renegotiation messages and the benign
TLS packets simultaneously. Basing on the typical attacks
above, we adjust the ratio of malicious packets and benign
packets, i.e., the ratio of 1:1, 1:2, 1:4, and 1:8, and the types
2We exclude passive attack datasets without malicious flow but only victim flow. Note
that, in our threat model we do not consider attacks without malicious packets.
Session 12C: Traffic Analysis and Side ChannelsCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3438Group
Label
Attack Description
Table 4: Attack Dataset Configurations
Benign
Traffic1
2020.6.10
2020.6.10
2019.1.2
2020.1.1
2020.1.1
2019.1.2
2020.6.10
2019.1.2
2020.1.1
2019.1.2
2019.1.2
2019.1.2
2020.6.10
2020.6.10
Benign
Flow Rate
5.276 Gbps
5.276 Gbps
4.827 Gbps
7.666 Gbps
7.666 Gbps
4.827 Gbps
5.276 Gbps
4.827 Gbps
7.666 Gbps
4.827 Gbps
4.827 Gbps
4.827 Gbps
5.276 Gbps
5.276 Gbps
Malicious
Flow Rate
23.04 Mbps
27.92 Mbps
0.960 Mbps
21.60 Mbps
27.20 Mbps
2.422 Gbps
0.138 Mbps
1.728 Mbps
1.626 Mbps
0.115 Gbps
0.046 Gbps
0.023 Gbps
0.214 Mbps
0.046 Gbps
Ratio of
Malicious2
0.0858
0.0089
0.0045
0.0128
0.0321
0.4712
0.0007
0.0091
0.0031
0.0228
0.0112
0.0055
0.0010
0.0071
Traditional
Attacks
Multi-stage
TCP Attacks
Stealthy
TCP Attacks
SYN DoS
Fuzz Scan
OS Scan
SSL DoS
SSDP DoS
UDP DoS
IPID SC
ACK SC
TLS Oracle
LRDoS 0.2
LRDoS 0.5
LRDoS 1.0
IPID Scan
TLS Scan
TCP SYN flooding Deny-of-Service attack.
Scanning for vulnerabilities in protocols.
Scanning for active hosts with vulnerable operating systems.
SSL renegotiation messages flooding Deny-of-Service attack.
SSDP flooding Deny-of-Service attack.
High-rate UDP traffic blocks bottleneck links.
Side-channel attack via IPID assignments, disclosed in 2020 [17].
ACK rate limit side-channel attack, disclosed in 2016 [10].
TLS padding oracle attack [67].
UDP burst triggers TCP retransmissions (burst interval 0.2s).
UDP burst triggers TCP retransmissions (burst interval 0.5s).
UDP burst triggers TCP retransmissions (burst interval 1.0s).
Prerequisite scanning of the IPID side-channel attack [17].
TLS vulnerabilities scanning [38].
1 The Benign Traffic column shows the identifier (date) of WIDE MAWI traffic datasets [69].
2 The Ratio of Malicious column shows the packet number ratio of benign and malicious traffic.
of benign traffic to generate 28 datasets. For comparison, we
replay the evasion attack datasets with the same background
traffic in Table 4.
Metrics. We use the following metrics to evaluate the detection
accuracy: (i) true-positive rates (TPR), (ii) false-positive rates (FPR),
(iii) the area under ROC curve (AUC), (vi) equal error rates (EER).
Moreover, we measure the throughput and processing latency to
demonstrate that Whisper achieves realtime detection.
6.3 Detection Accuracy
In this experiment, we evaluate the detection accuracy of different
systems by measuring TPR, FPR, AUC, and EER. Table 5 illustrates
the results. We find that Whisper can detect all 14 attacks with AUC
ranging between 0.932 and 0.999 and EER within 0.201. Figure 3
shows the scatter plots of clustering results. For simplicity, we select
two datasets with 2,000 benign and 2,000 malicious frequency do-
main features and choose two dimensions of the frequency domain
features randomly. We observe that the malicious traffic has fre-
quency domain features far from the clustering centers. We present
the ROC curves of two datasets in Figure 4. We find that, by lever-
aging the frequency domain features, detectors can detect low-rate
malicious traffic in high throughput networks, e.g., Whisper and
FAE detect 138 Kbps IPID side-channel malicious traffic with 0.932
and 0.973 AUC under the 5.276 Gbps backbone network traffic,
respectively. The increment of burst intervals in low-rate TCP DoS
attacks causes 9.0%, 7.0%, 0.10%, and 0.06% AUC decrease for Kit-
sune, FSC, FAE, and Whisper, respectively. Thus, compared with
the packet-level and the traditional flow-level detection, burst in-
tervals in the low-rate TCP DoS attacks have a negligible effect on
the detection accuracy of Whisper and FAE. However, FAE cannot
effectively detect some sophisticated attacks, e.g., the ACK throt-
tling side-channel attack and the TLS padding oracle attack, and
only achieves only 39.09% AUC of Whisper. Note that, Whisper
accurately identifies 2.4 Gbps high-rate malicious flows among 4.8
Gbps traffic online.
Kitsune cannot effectively detect the side-channel attacks be-
cause it is unable to maintain enough states for the traffic. We find
that Kitsune’s offline processing speeds in the datasets are less than
4000 packets per second (PPS), and the expected time to complete
the detection is more than 2 hours. The side-channel attacks trick
Kitsune to maintain massive flow states by sending a larger number
of probing packets. Different from using flow states to preserve
the flow context information in Kitsune, Whisper preserves the
flow-level context information via the frequency domain analysis,
which ensures the ability to detect such attacks.
We observe that, with the same ML algorithm, i.e., auto-encoder,
the frequency domain features achieve higher accuracy (at most
15.72% AUC improvements and 95.79% EER improvements) than the
state-of-the-art packet-level features and can detect more stealthy
attacks. Under the five types of stealthy TCP attacks, Kitsune
achieves 0.837 - 0.920 AUC and cannot detect the low-rate scanning
of the side-channel attack. Moreover, compared with FSC, Whis-
per achieves at most 65.26% AUC improvements and 98.80% EER
improvements. Thus, we can conclude that the frequency domain
features allow Whisper to achieve higher detection accuracy and
outperform the packet-level methods and the traditional flow-level
methods.
Moreover, we study the impact of the automatic parameter selec-
tion on the detection accuracy. We manually set encoding vectors
to compare the results with automatically selected parameters. We
use six attacks as validation sets for the manually selected encoding
vector, and use 13 attacks to test the generalization of the manually
selected parameters. Figure 5 shows the detection accuracy in terms
of parameter settings. We observe that the automatic parameter
selection module achieves 9.99% AUC improvements and 99.55%
EER improvements compared with manual parameter selection.
6.4 Robustness of Detection
In order to validate the robustness of Whisper, we assume that at-
tackers know the existence of malicious traffic detection. Attackers
can construct evasion attacks, i.e., injecting various benign traffic,
to evade the detection. In the experiments, for simplicity, we as-
sume that attackers inject benign TLS traffic and UDP video traffic
Session 12C: Traffic Analysis and Side ChannelsCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3439Table 5: Detection Accuracy of Whisper and Baselines on 14 Attacks
Kitsune
FSC
FAE
FPR
0.0910
0.0015
0.0786
0.0035
0.0132
0.1811
TPR
0.9801
0.9982
0.9997
0.9417
0.9901
0.4485
EER
0.0919
0.0336
0.0800
0.0574
0.0168
0.1433
AUC
0.9562
0.9978
0.9615
0.9781
0.9955
0.8993
FPR
0.0396
0.4007
0.1114
0.0519
0.0014
0.0173
0.2716
0.3090
TPR
0.9999
0.0000
0.0000
0.9992
0.9999
0.9999
0.0000
0.0000
Methods
Metrics
SYN DoS
Fuzz Scan
OS Scan
SSL DoS
SSDP DoS
UDP DoS
IPID SC
ACK SC
TLS Oracle
0.9925
LRDoS 0.2
0.9925
LRDoS 0.5
0.9935
LRDoS 1.0
0.9934
IPID Scan
0.6033
TLS Scan
1 We highlight the best in • and the worst in • and we mark - when AUC < 0.5 (meaningless, no better than random guess).
2 We mark / when Kitsune cannot finish the detection in 2 hours due to a large number of maintained flow state variables (process speed < 4 × 103 PPS).
TPR
0.9924
0.9999
0.9999
0.9699
0.9969
0.9999
0.6900