LPVOID __cdecl __recalloc_base(void *param_1,uint param_2,uint param_3)
{
  undefined4 *puVar1;
  LPVOID pvVar2;
  size_t sVar3;
  if ((param_2 == 0) || (param_3 > 8),1);
}
undefined __cdecl FUN_0040f15a(int param_1,int param_2)
{
  code *pcVar1;
  undefined4 uVar2;
  if (param_1 != param_2) {
    do {
      pcVar1 = *(code **)(param_2 + -4);
      if (pcVar1 != (code *)0x0) {
        uVar2 = 0;
        _guard_check_icall();
        (*pcVar1)(uVar2);
      }
      param_2 = param_2 + -8;
    } while (param_2 != param_1);
  }
  return 1;
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
void __cdecl FUN_0040f18b(undefined4 param_1)
{
  _DAT_0041f414 = param_1;
  return;
}
undefined4 __cdecl FUN_0040f19a(undefined4 param_1)
{
  code *pcVar1;
  int iVar2;
  pcVar1 = (code *)__query_new_handler();
  if (pcVar1 != (code *)0x0) {
    _guard_check_icall();
    iVar2 = (*pcVar1)(param_1);
    if (iVar2 != 0) {
      return 1;
    }
  }
  return 0;
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
// Name: __query_new_handler
// Library: Visual Studio 2015 Release
uint __query_new_handler(void)
{
  byte bVar1;
  uint uVar2;
  ___acrt_lock(0);
  bVar1 = (byte)DAT_0041e004 & 0x1f;
  uVar2 = DAT_0041e004 ^ _DAT_0041f414;
  FUN_0040f210();
  return uVar2 >> bVar1 | uVar2 @@AAV@@V@@@?$__crt_seh_guarded_call@P6AXH@Z@@QAEP6AXH@Z$$QAV@@AAV@@$$QAV@@@Z
// Library: Visual Studio 2015 Release
// public: void (__cdecl*__thiscall __crt_seh_guarded_call::operator(),class &,class
// >(class
// &&,class
// &,class
// &&))(int)
FuncDef6 * __thiscall
operator___class__lambda_a048d3beccc847880fc8490e18b82769__class__lambda_ec61778202f4f5fc7e7711acc23c3bca___class__lambda_f7496a158712204296dd6628a163878e___
          (__crt_seh_guarded_call_void____cdecl___int__ *this,
          _lambda_a048d3beccc847880fc8490e18b82769_ *param_1,
          _lambda_ec61778202f4f5fc7e7711acc23c3bca_ *param_2,
          _lambda_f7496a158712204296dd6628a163878e_ *param_3)
{
  byte bVar1;
  uint uVar2;
  ___acrt_lock(*(int *)param_1);
  bVar1 = (byte)DAT_0041e004 & 0x1f;
  uVar2 = DAT_0041e004 ^ _DAT_0041f420;
  FUN_0040f267();
  return (FuncDef6 *)(uVar2 >> bVar1 | uVar2 > bVar5 |
                     ((uint)pcVar9 ^ (uint)DAT_0041e004) << 0x20 - bVar5);
    cVar6 = local_1d;
  }
  if (pcVar9 == (code *)0x1) goto LAB_0040f482;
  if (pcVar9 == (code *)0x0) {
    if (cVar6 != 0) {
      ___acrt_unlock(3);
    }
    FUN_004097d4(3);
    pcVar9 = (code *)swi(3);
    uVar4 = (*pcVar9)();
    return uVar4;
  }
  if (((param_1 == 8) || (param_1 == 0xb)) || (param_1 == 4)) {
    local_30 = local_24[1];
    local_24[1] = (__crt_signal_action_t *)0x0;
    if (param_1 == 8) {
      puVar2 = (undefined4 *)FUN_0040f324();
      local_34 = *puVar2;
      puVar2 = (undefined4 *)FUN_0040f324();
      *puVar2 = 0x8c;
      goto LAB_0040f44f;
    }
  }
  else {
LAB_0040f44f:
    if (param_1 == 8) {
      p_Var1 = *local_24;
      p_Var7 = p_Var1 + 0x24;
      while (p_Var7 != p_Var1 + 0x90) {
        *(undefined4 *)(p_Var7 + 8) = 0;
        p_Var7 = p_Var7 + 0xc;
      }
      goto LAB_0040f482;
    }
  }
  *ppcVar8 = DAT_0041e004;
LAB_0040f482:
  FUN_0040f4b7();
  if (pcVar9 != (code *)0x1) {
    if (param_1 == 8) {
      uVar3 = FUN_0040b5c7();
      uVar4 = *(undefined4 *)(uVar3 + 8);
      uVar10 = 8;
      _guard_check_icall();
      (*pcVar9)(uVar10,uVar4);
    }
    else {
      iVar11 = param_1;
      _guard_check_icall();
      (*pcVar9)(iVar11);
      if ((param_1 != 0xb) && (param_1 != 4)) {
        return 0;
      }
    }
    local_24[1] = local_30;
    if (param_1 == 8) {
      uVar3 = FUN_0040b5c7();
      *(undefined4 *)(uVar3 + 8) = local_34;
    }
  }
  return 0;
}
void FUN_0040f4b7(void)