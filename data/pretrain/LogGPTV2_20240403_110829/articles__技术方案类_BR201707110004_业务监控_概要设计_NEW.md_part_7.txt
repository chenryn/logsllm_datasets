|           |           |      | GroupID=\*\*\*\*\ |                 |
|           |           |      | 4、               |                 |
|           |           |      | 调用链            |                 |
|           |           |      | 组名称GroupName， |                 |
|           |           |      | BES中对应为业务交 |                 |
|           |           |      | 易类型名，即Entr  |                 |
|           |           |      | yMenu，格式为：Gr |                 |
|           |           |      | oupName=\*\*\*\*\ |                 |
|           |           |      | 5、               |                 |
|           |           |      | 调用链子          |                 |
|           |           |      | 组标识SubGroupID  |                 |
|           |           |      | ，BES中对应为步骤 |                 |
|           |           |      | 标识，格式为：Su  |                 |
|           |           |      | bGroupID=\*\*\*\* |                 |
+-----------+-----------+------+-------------------+-----------------+
| C         | varchar   | 可选 | 可读文本格式的码  | 填空            |
| odeStream | (max      |      | 流（非二进制码流  |                 |
|           | 10240)    |      | ）输出，仅针对与  |                 |
|           |           |      | 门户中设置的特定  |                 |
|           |           |      | 用户号码匹配（跟  |                 |
|           |           |      | 踪匹配标志hasComp |                 |
|           |           |      | aredTrace为true） |                 |
|           |           |      | 的调用请求和响应  |                 |
|           |           |      | ，以及业务返回码  |                 |
|           |           |      | 异常的调用响应。  |                 |
|           |           |      | 不需要打印码流时  |                 |
|           |           |      | ，该字段可为空。  |                 |
+-----------+-----------+------+-------------------+-----------------+
#### 业务调用链日志输出影响应用主机IO优化
由于放开业务调用链日志后应用主机IO高，需要对业务调用链生成的日志进行简化，将一些不必要的日志打印去掉，以减少日志输出对主机IO的影响。
1、前台新增字典参数配置哪些opcode需要打印日志
新增字典参数配置需要打印的opcode，前台加载到缓存中，在打印日志的地方增加判断，如果字典参数中有配置对应的opcode，则打印业务监控日志并将交易流水传到后台CICS，后台CICS根据交易流水号判断是否需要打印日志。
2、信控、电渠、订单流程各增加一个系统参数控制是否打印日志
信控、电渠、订单流程各增加系统参数，支持按地市配置，可以单独控制是否输出业务监控日志。
参数名如下，上线时默认关闭：
\"XKJC_SwitchPrintLog\"; //信控进程日志开关
\"DZQD_SwitchPrintLog\"; //电子渠道日志开关
\"DDJC_SwitchPrintLog\"; //订单进程日志开关
3、根据目前业务打印的日志提取每个业务对应的opcode列表，选取一些关键的opcode作为字典参数的初始化配置。
#### 【新增】接口服务调用链日志开关控制（三期）
1.  针对"开户"、"缴费"、"停开机"、"产品订购退订"、"补卡"、"充值"这几个关键业务对应的电子渠道接口，增加打上服务调用链日志的标识。
  --------------------------------------------------------------------------------------------------
  **关键业务**   **电子渠道接口**                      **接口标识**               **业务类型编码**
  -------------- ------------------------------------- -------------------------- ------------------
  开户           CRM_IM_544 空中选号开户               airpickinstall             
                 CRM_IM_563 B2M白卡开户接口            opengotoneaccount          
                 CRM_IM_007订单校验                    odchkorderinfo             Install
                 CRM_IM_026 费用计算                   odqryorderfee              
                 CRM_IM_008订购提交                    odcommitorder              
  缴费           CRM_IM_478 全球通/智能网交费交易      operbankpaytrans           
  停开机         CRM_IM_536停开机接口（10007）         servicemodify              
  产品订购退订   CRM_IM_007订单校验                    odchkorderinfo             ChangeProduct
                 CRM_IM_026 费用计算                   odqryorderfee              
                 CRM_IM_008订购提交                    odcommitorder              
  补卡           CRM_IM_772 备卡申请接口               standbyget                 
                 CRM_IM_383激活（50012）               cardactivation             
                 CRM_IM_1080 白卡补换卡                baikachangecard            
  充值           CRM_IM_706全品牌充值卡充值（58147）   allbrandrechargeablecard   
                 CRM_IM_289全品牌充值卡充值（54113）   chargeallbrandchargecard   
  --------------------------------------------------------------------------------------------------
2.  根据接口业务命令匹配决定是否启用接口服务调用链日志：
> 新增一个数据字典组（SERVCALL4INTF），涉及表有：字典组表（SA_DB_DICTGROUP）、字典项表（SA_DB_DICTITEM），支持按接口（只支持需求中涉及的几个关键业务对应的接口业务命令字）、地市控制是否开启服务调用链日志打印。DICTID字段配置接口业务命令字,
> DICTNAME字段配置进一步匹配的内容，主要匹配请求报文一个字段值，一个字段可以支持多个值，多个值使用\|号隔开，DESCRIPTION字段配置的是请求报文中的业务编码，根据编号可以去CS_REC_FORMNUMRELALOG表查询交易流水号。
  ---------------------------------------------------------------------------------------------
  **DICTID**                 **DICTNAME**                     **DESCRIPTION**   **GROUPID**
  -------------------------- -------------------------------- ----------------- ---------------
  airpickInstall                                                                SERVCALL4INTF
  opengotoneaccount                                                             SERVCALL4INTF
  odchkorderinfo             rectype=Install\|ChangeProduct                     SERVCALL4INTF
  odqryorderfee                                               orderseq\|1       SERVCALL4INTF
  odcommitorder                                               orderseq\|1       SERVCALL4INTF
  operbankpaytrans                                                              SERVCALL4INTF
  servicemodify                                                                 SERVCALL4INTF
  standbyget                                                                    SERVCALL4INTF
  cardactivation                                                                SERVCALL4INTF
  baikachangecard                                                               SERVCALL4INTF
  allbrandrechargeablecard                                                      SERVCALL4INTF
  chargeallbrandchargecard                                                      SERVCALL4INTF
  ---------------------------------------------------------------------------------------------
#### 【修改】接口WAS端生成交易流水号逻辑（三期）
**场景1：**针对一个接口是专门为一个业务的场景，只需要根据接口业务命令字进行统一判断。
**场景2：**针对一个公共接口同时为多个业务的场景，需要为公共接口做定制，在匹配到接口业务命令字后，还需要匹配业务类型编码。比如订单三步走，是在订单校验（CRM_IM_007订单校验）接口预先生成订单信息，在订单提交（CRM_IM_008订购提交）接口更改订单相关状态信息。
1、改造电子渠道开发工程（NGInterface）的代码，新增统一的服务调用链日志控制逻辑，具体如下：
（1）在SoapMsgProcessor类的bizProc方法中加入接口命令字匹配，根据接口业务命令字和地市匹配"字典项表（SA_DB_DICTITEM）"中"GROUPID"为"SERVCALL4INTF"的记录，DICTID=接口业务命令字。
（2）如果当前请求中的业务命令字是配置中的业务命令字，继续执行以下的逻辑。否则，不执行下面的逻辑。
（3）判断DICTNAME字段值是否为空，用户判断是否还需要根据请求报文中的字段进行二次匹配。
a.  如果DICTNAME字段值不为空，则对DICTNAME的值进行解析并和请求报文中的字段值进行匹配。
-   解析DICTNAME字段值：将DICTNAME的字段名和字段值分别读出来，比如：rectype=Install\|ChangeProduct，字段名为rectype，字段值为Install\|ChangeProduct；如果字段值中有"\|"号，则将字段值读取成数组。比如：Install\|ChangeProduct，则数组为\[Install,
    ChangeProduct\]。
-   读取请求报文中对应字段的值，比如rectype字段。
-   判断请求报文中字段值是否在配置解析出来的数组中。如果存在，则执行下面逻辑，如果不存在，则不执行下面逻辑。
    a.  如果DICTNAME字段值为空，继续执行下面的逻辑。
（4）判断DESCRIPTION字段值是否为空，用于判断是否需生成新的交易流水号。
a)  如果DESCRIPTION字段值不为空，则对DESCRIPTION的值进行解析以及根据请求报文中的字段值查找已有的交易流水号。
-   解析DESCRIPTION字段值：将DESCRIPTION的字段值进行解析，比如"orderseq\|1"，通过"\|"隔开，左边的是对应请求报文的字段名，右边的是关系类型。
-   读取请求报文中对应字段的值，比如orderseq字段。
-   获取交易流水号：查询CS_REC_FORMNUMRELALOG表，RELAFORMNUM字段值存放交易流水号，FORMNUM字段值存放业务编码，RELATYPE字段值存放是关系类型。
  -----------------------------------------------------------------------
  SELECT RELAFORMNUM FROM CS_REC_FORMNUMRELALOG WHERE FORMNUM=业务编码
  AND RELATYPE=关系类型;
  -----------------------------------------------------------------------
  -----------------------------------------------------------------------
-   将交易流水号保存在**当前线程上下文**中，将接口业务命令字保存到**当前线程上下文**中
b)  如果DESCRIPTION字段值为空，则生成本次业务的交易流水号并保存在**当前线程上下文**中，将接口业务命令字保存到**当前线程上下文**中。
（5）生成本次业务的开始交易埋点。具体可以参考营业厅前台WAS的做法。
（6）在本次业务提交完成返回成功后或业务提交失败中断后，生成本次业务的结束交易埋点。具体可以参考营业厅前台WAS的做法。
（7）清理掉前面设置在线程上下文中的变量值。
#### 【修改】订单校验预生成服务逻辑（三期）
**OPCODE：**CheckProdOrder
1.  如果WAS侧有传入交易流水号过来，则在处理成功逻辑的最后面将订单编码和交易流水号插入到CS_REC_FORMNUMRELALOG表，RELAFORMNUM字段值存放交易流水号，FORMNUM字段值存放订单编码，RELATYPE字段值存放"1"。
#### 【修改】订单提交服务逻辑（三期）
**OPCODE：**CommitProdOrder
1.  屏蔽掉CommitProdOrder中插入交易流水号和订单关联关系的逻辑。
2.  屏蔽掉CommitProdOrder中，根据订单编码查询交易流水号的逻辑。
#### 【修改】接口WAS服务日志框架（三期）
新增一种日志类型：服务调用链日志(SERVCALL)，支持文件路径、文件名称、文件拆分大小可配置。
作为服务端，在服务请求入口处，增加输出服务调用请求（serverRecv）日志，在服务响应出口处，增加输出服务调用响应（serverSend）日志。
作为客户端，在调用服务入口处，增加输出服务调用请求日志（clientSend）,在调用服务出口处，增加输出服务调用响应日志（clientRecv），日志格式见：服务调用链日志格式及填值说明章节。
参考营业前台WAS的改造。
#### 【修改】接口WAS服务调用后台CICS服务逻辑（三期）
接口WAS服务调用CICS服务时，如果当前线程上下文中有交易流水号，则进行以下入参设置：
-   将交易流水号设置到调用请求对象CBaseIntPkg的strUniContact属性。
-   将当前接口的接口业务命令字设置到CBaseIntPkg的strMenuID属性中。
-   根据接口的调用顺序，设置服务调用的顺序号到CBaseIntPkg的m_tagParams属性中，键值为"SEQNO"，顺序号的生成见"调用序号生成逻辑"章节说明。
-   将是否打印服务调用链日志标记设置到CBaseIntPkg的m_tagParams属性中，键值为"ISPRINTBUSILOG"。如果系统参数（CtrlServCallLogPrint）为"Open"时，则"ISPRINTBUSILOG"值为"1"，其他情况都为"0"。
具体参考营业前台WAS的改造。
#### 【修改】后台CICS服务打印日志逻辑（三期）
1.  屏蔽掉后台CICS服务生成交易流水号的逻辑，统一由前台WAS或者接口WAS侧生成并传给CICS。
2.  后台CICS服务按照日志格式输出日志内容。CICS框架统一处理参考"【修改】CICS服务全局信息（一期）"章节，上述接口调用到的CICS服务都需要按照日志格式输出日志。之前营业厅前台对CICS改造过了，本次需求需要对关键业务的电渠接口对应的OPCODE进行日志改造，具体可以参考之前CICS的改造。
#### 【新增】服务调用链日志打印的开关（三期）
说明：将交易流水号生成并传递、打印服务调用链日志分成不同的开关进行控制。
1.  前台WAS的某个菜单是否生成交易流水号并传递给CICS，是通过"日志等级控制配置表(SA_DB_LOGLEVELCONTROL)"中的日志类别:（LLTYPE_SERVCALL）决定的。
2.  接口WAS的某个接口是否生成交易流水号并传递给CICS，是通过"数据字典组（SERVCALL4INTF）中的字典项进行控制。
3.  改造前台WAS的个人主体产品开户、产品订购退订代码、补卡、停机、开机和缴费这几个关键业务中打印服务调用链日志的公共框架，如果系统参数（CtrlServCallLogPrint）为"Open"时，则打印服务调用链日志。否则，则不打印服务调用链日志。
4.  改造接口WAS中打印服务调用链日志的公共框架，如果系统参数（CtrlServCallLogPrint）为"Open"时，则打印服务调用链日志。否则，则不打印服务调用链日志。
5.  改造CICS中打印服务调用链日志的公共框架，如果系统参数（CtrlServCallLogPrint）为"Open"时，则打印服务调用链日志。否则，则不打印服务调用链日志。
#### 【新增】CICS的业务日志加入交易流水号（三期）
**说明：**服务调用链日志只有调用信息，没有业务日志，当出现交易出现问题的时候，需要从海量业务日志中查找对应的日志很不容易，故此在业务日志中加入交易流水号。
1.  改造CICS写业务日志的公共框架，在打印日志逻辑前，加入下面的逻辑：
```{=html}
```
1.  如果能获取到交易流水号并且日志级别为"DEBUG"的情况下,在日志内容的最前面加上交易流水号，格式如下：\[tranid:xxxx\]。
2.  否则，则走原来的打印逻辑，不会打印交易流水号。
#### 【修改】服务调用链日志格式（四期）
修改服务调用链日志文件格式，将最后一列CodeStream修改为ProdInfo，打印订单产品相关信息：
格式：
\\>\>
说明:其中开始标志"\\>\>"之间不能有空格。
埋点日志字段内容中不可出现竖线"\|"，如果字段原始内容包含竖线"\|"，需要先转义为
&#124; 后再放入埋点日志字段内。
以下为日志服务中心要求的日志字段、字段说明以及广东项目特殊填值说明：