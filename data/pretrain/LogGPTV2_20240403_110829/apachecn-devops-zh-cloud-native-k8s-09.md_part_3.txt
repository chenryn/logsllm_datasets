6.  Go ahead and click around the dashboard – you should be able to see all the same resources you would be able to using kubectl, and you can filter by namespace in the left-hand sidebar. For instance, here's a view of the **Namespaces** page:
    ![Figure 9.5 – Kubernetes Dashboard detail](img/B14790_09_005_new.jpg)
    图 9.5-无间隙仪表板详细信息
7.  You can also click on individual resources, and even edit those resources using the dashboard as long as the Service Account you used to log in has the proper permissions.
    以下是从部署详细信息页面编辑部署资源的视图:
![Figure 9.6 – Kubernetes Dashboard edit view](img/B14790_09_006_new.jpg)
图 9.6-无间隙仪表板 edit view
Kubernetes 仪表板还允许您查看 Pod 日志，并深入了解集群中的许多其他资源类型。要了解仪表板的全部功能，请查看前面提到的 GitHub 页面上的文档。
最后，为了完善我们对 Kubernetes 上的默认可观测性的讨论，让我们来看看警报。
## Kubernetes 上的警报和踪迹
不幸的是，可观察性谜题的最后两个部分——警告——T2 和追踪——还不是 Kubernetes 的原生功能。为了创建这种类型的功能，让我们进入下一部分——结合 Kubernetes 生态系统的开源工具。
# 利用生态系统的最佳状态增强 Kubernetes 的可观测性
正如我们已经讨论过的，虽然 Kubernetes 为强大的可见性功能提供了基础，但是通常要由社区和供应商生态系统来为度量、日志、跟踪和警报创建更高级别的工具。出于本书的目的，我们将专注于完全开源的自托管解决方案。由于这些解决方案中的许多实现了度量、日志、跟踪和警报之间的多个可见性支柱，因此我们将分别审查每个解决方案，而不是在审查期间将解决方案分类到每个可见性支柱中。
让我们从常用的度量和警报技术组合开始:**普罗米修斯**和**格拉夫纳**。
## 引进普罗米修斯和格拉夫纳
普罗米修斯和格拉夫纳是 Kubernetes 上可见性技术的典型组合。普罗米修斯是一个具有许多集成的时间序列数据库、查询层和警报系统，而格拉夫纳是一个与普罗米修斯集成的复杂的图形和可视化层。我们将从普罗米修斯开始，向您介绍这些工具的安装和使用。
### 安装普罗米修斯和格拉夫纳
有许多方法可以在 Kubernetes 上安装普罗米修斯，但是大多数使用部署来扩展服务。出于我们的目的，我们将使用`kube-prometheus`项目([https://github.com/coreos/kube-prometheus](https://github.com/coreos/kube-prometheus))。该项目包括一个`operator`以及多个**自定义资源定义** ( **CRDs** )。它还会自动为我们安装 Grafana ！
操作员本质上是 Kubernetes 上的应用控制器(像 Pod 中的其他应用一样部署)，它碰巧向 Kubernetes API 发出命令，以便正确运行或操作其应用。
另一方面，CRD 允许我们在 Kubernetes API 内部建模定制功能。我们将在 [*第 13 章*](13.html#_idTextAnchor289)*中了解更多关于操作者和 CRD 的信息，但是现在只需将操作者视为创建*智能部署*的一种方式，在该部署中，应用可以适当地控制自己，并根据需要启动其他 Pods 和部署，并将 CRD 视为使用 Kubernetes 存储应用特定问题的一种方式。*
要安装普罗米修斯，首先我们需要下载一个版本，该版本可能会有所不同，具体取决于最新版本的普罗米修斯或您想要的 Kubernetes 版本:
```
curl -LO https://github.com/coreos/kube-prometheus/archive/v0.5.0.zip
```
接下来，使用任何工具解压缩文件。首先，我们需要安装 CRDs。一般来说，大多数 Kubernetes 工具安装说明会让您首先在 Kubernetes 上创建 CRDs，因为如果基础 CRD 尚未在 Kubernetes 上创建，任何使用 CRD 的附加设置都将失败。
让我们使用以下命令来安装:
```
kubectl apply -f manifests/setup
```
创建 CRD 时，我们需要等待几秒钟。该命令还将为我们的资源创建一个`monitoring`命名空间。一切准备就绪后，让我们使用以下命令加速剩余的普罗米修斯和格拉夫纳资源:
```
kubectl apply -f manifests/
```
让我们来谈谈这个命令实际上会创建什么。整个栈包括以下内容:
*   **普罗米修斯部署**:普罗米修斯应用的 Pod 
*   **普罗米修斯操作员**:控制和操作普罗米修斯应用舱
*   **警报管理器部署**:普罗米修斯组件，用于指定和触发警报
*   **Grafana** :强大的可视化仪表盘
*   **库贝状态度量代理**:从库贝内特斯应用编程接口状态生成度量
*   **普罗米修斯节点导出器**:将节点硬件和操作系统级指标导出到普罗米修斯
*   **Kubernetes 度量的普罗米修斯适配器**:Kubernetes 资源度量 API 和自定义度量 API 的适配器，用于摄取到普罗米修斯中
所有这些组件一起将为我们的集群提供复杂的可见性，从命令平面到应用容器本身。
一旦创建了栈(使用`kubectl get po -n monitoring`命令检查)，我们就可以开始使用我们的组件了。让我们从普通的普罗米修斯开始，深入探讨的用法。
### 利用普罗米修斯
虽然普罗米修斯真正的力量在于它的数据存储、查询和警报层，但它确实为开发人员提供了一个简单的用户界面。正如您将在后面看到的，Grafana 提供了更多的功能和定制，但是熟悉普罗米修斯用户界面是值得的。
默认情况下，`kube-prometheus`将只为普罗米修斯、格拉夫纳和警报器管理器创建集群 IP 服务。我们有责任将它们暴露在集群之外。出于本教程的目的，我们只需将服务转发到本地机器。对于生产，您可能希望使用入口将请求路由到三个服务。
为了`port-forward`到普罗米修斯用户界面服务，使用`port-forward` kubectl 命令:
```
Kubectl -n monitoring port-forward svc/prometheus-k8s 3000:9090
```
我们需要为普罗米修斯用户界面使用端口`9090`。在`http://localhost:3000`访问您机器上的服务。
您应该会看到如下截图:
![Figure 9.7 – Prometheus UI](img/B14790_09_007_new.jpg)
图 9.7–普罗米修斯用户界面
如您所见，普罗米修斯用户界面有一个**图形**页面，这是您可以在*图 9.4* 中看到的。它也有自己的用户界面来查看配置的警报，但是它不允许你通过用户界面创建警报。Grafana 和 Alertmanager 将帮助我们完成这项任务。
要执行查询，导航至**图形**页面，将查询命令输入**表达式**栏，然后单击**执行**。普罗米修斯使用了一种叫做`PromQL`的查询语言——我们不会在这本书里完整地呈现给你，但是普罗米修斯文档是一个很好的学习方式。您可以通过以下链接参考:[https://Prometheus . io/docs/Prometheus/latest/query/basic/](https://prometheus.io/docs/prometheus/latest/querying/basics/)。
为了展示这是如何工作的，让我们输入一个基本查询，如下所示:
```
kubelet_http_requests_total
```
该查询将针对每个请求类别列出对每个节点上的 kubelet 的 HTTP 请求总数，如下图所示:
![Figure 9.8 – HTTP requests query](img/B14790_09_008_new.jpg)
图 9.8–HTTP 请求查询
点击**表格**旁边的**图形**标签，也可以看到图形形式的请求，如下图截图所示:
![Figure 9.9 – HTTP requests query – graph view](img/B14790_09_009_new.jpg)
图 9.9–HTTP 请求查询–图形视图
这提供了来自前面截图的数据的时间系列图形视图。如您所见，绘图功能相当简单。
普罗米修斯还提供了**警报**选项卡，用于配置普罗米修斯警报。通常，这些警报是通过代码配置的，而不是使用**警报**选项卡用户界面，因此我们将在回顾中跳过该页面。有关更多信息，您可以查看位于[https://prometheus.io/docs/alerting/latest/overview/](https://prometheus.io/docs/alerting/latest/overview/)的普罗米修斯官方文档。
让我们转到格拉夫纳，在那里我们可以通过可视化扩展普罗米修斯强大的数据工具。
### 使用格拉夫纳
Grafana 为可视化指标提供了强大的工具，许多支持的图表类型可以实时更新。我们可以将格拉夫纳连接到普罗米修斯，以便在格拉夫纳用户界面上查看我们的集群指标。
要开始使用 Grafana，请执行以下操作:
1.  我们将结束当前的端口转发( *CTRL* + *C* 将完成此操作)并为 Grafana UI 设置一个新的端口转发监听器:
    ```
    Kubectl -n monitoring port-forward svc/grafana 3000:3000
    ```
2.  Again, navigate to `localhost:3000` to see the Grafana UI. You should be able to log in with **Username**: `admin` and **Password**: `admin`, at which point you should be able to change the initial password as shown in the following screenshot:
    ![Figure 9.10 – Grafana Change Password screen](img/B14790_09_010_new.jpg)
    图 9.10–格拉夫娜更改密码屏幕
3.  Upon login, you will see the following screen. Grafana does not come preconfigured with any dashboards, but we can add them easily by clicking the **+** sign as shown in the following screenshot:
    ![Figure 9.11 – Grafana main page](img/B14790_09_011_new.jpg)
    图 9.11–grafana 主页
4.  Each Grafana dashboard includes one or more graphs for different sets of metrics. To add a preconfigured dashboard (instead of creating one yourself), click the plus sign (**+**) on the left-hand menu bar and click **Import**. You should see a page like the following screenshot:
    ![Figure 9.12 – Grafana Dashboard Import](img/B14790_09_012_new.jpg)