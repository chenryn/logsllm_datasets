and consists of three phases:
• expand: A large pool of addresses P is allocated with the
last twelve bits of all addresses being zero. A random
USENIX Association
28th USENIX Security Symposium    629
050100150200Page Number253035404550Timer ValueAlgorithm
Classic [42]
Improved [14]
AA (ours)
AA (ours)
R
3
3
10
20
ttotal
46s
35s
10s
12s
tAAS
-
-
tESS
100%
100%
54% 46%
75% 25%
Success
80%
80%
67%
100%
Table 2: Comparison of different eviction set ﬁnding algo-
rithms on an Intel Core i7-4770. Classic is the method from
[42], improved is the same method with slight improvement,
Aliased Address (AA) uses SPOILER. tAAS is the time percent-
age used for ﬁnding aliased addresses. tESS is the time per-
centage for ﬁnding eviction sets. R is the number of Rounds.
part in the mapping). These can be enumerated again to form
63 more eviction sets since we still kept the bits 6-11 ﬁxed. To
accomplish full cache coverage, the aliased address pool has
to be constructed 32 times. The SPOILER variant for ﬁnding
eviction sets is more susceptible to system noise, which is why
it needs more repetitions i.e. R rounds to get reliable values.
On the other hand, it is less prone to values deviating largely
from the mean, which is a problem in the classic eviction
set creation algorithm. The classic method does not succeed
about one out of ﬁve times in our experiments, as shown in
Table 2. The unsuccessful attempts occur due to aborts if the
algorithm takes much longer than statistically expected. As a
result, SPOILER can be incorporated in an end-to-end attack
such as drive-by key-extraction cache attacks by Genkin et
al. [14]. SPOILER increases both speed and reliability of the
eviction set ﬁnding and therefore the entire attack.
6 Rowhammer Attack using SPOILER
To perform a Rowhammer attack, the adversary needs to ef-
ﬁciently access DRAM rows adjacent to a victim row. In a
single-sided Rowhammer attack, only one row is activated
repeatedly to induce bit ﬂips on one of the nearby rows. For
this purpose, the attacker needs to make sure that multiple
virtual pages co-locate on the same bank. The probability of
co-locating on the same bank is low without the knowledge of
physical addresses and their mapping to memory banks. In a
double-sided Rowhammer attack, the attacker tries to access
two different rows n + 1 an n− 1 to induce bit ﬂips in the
row n placed between them. While double-sided Rowham-
mer attacks induce bit ﬂips faster due to the extra charge on
the nearby cells of the victim row n, they further require ac-
cess to contiguous memory pages. In this section, we show
that SPOILER can help boosting both single and double-sided
Rowhammer attacks by its additional 8-bit physical address
information and resulting detection of contiguous memory.
System Model
Dell XPS-L702x
(Sandy Bridge)
Dell Inspiron-580
(Nehalem)
Dell Optiplex-7010
(Ivy Bridge)
DRAM Conﬁguration
# of Bits
1 x (4GB 2Rx8)
2 x (4GB 2Rx8)
1 x (2GB 2Rx8) (b)
2 x (2GB 2Rx8) (c)
4 x (2GB 2Rx8) (d)
1 x (2GB 1Rx8) (a)
2 x (2GB 1Rx8)
1 x (4GB 2Rx8) (e)
2 x (4GB 2Rx8)
21
22
21
22
23
19
20
21
22
Table 3: Reverse engineering the DRAM memory mappings
using DRAMA tool, # of Bits represents the number of physi-
cal address bits used for the bank, rank and channel [45].
6.1 DRAM Bank Co-location
DRAMA [45] reverse engineered the memory controller map-
ping. This requires elevated privileges to access physical ad-
dresses from the pagemap ﬁle. The authors have suggested
that prefetch side-channel attacks [17] may be used to gain
physical address information instead. SPOILER is an alterna-
tive way to obtain partial address information and is still fea-
sible when the prefetch instruction is not available, e.g. in
JavaScript. In our approach, we use SPOILER to detect aliased
virtual memory addresses where the 20 LSBs of the physical
addresses match. The memory controller uses these bits for
mapping the physical addresses to the DRAM banks [45].
Even though the memory controller may use additional bits,
the majority of the bits are known using SPOILER. An at-
tacker can directly hammer such aliased addresses to perform
a more efﬁcient single-sided Rowhammer attack with a sig-
niﬁcantly increased probability of hitting the same bank. As
shown in Table 3, we reverse engineer the DRAM mappings
for different hardware conﬁgurations using the DRAMA tool,
and only a few bits of physical address entropy beyond the 20
bits will remain unknown.
To verify if our aliased virtual addresses co-locate on the
same bank, we use the row conﬂict side channel as proposed
in [13] (timings in the appendix, Section 10.2). We observe
that whenever the number of physical address bits used by
the memory controller to map data to physical memory is
equal to or less than 20, we always hit the same bank. For
each additional bit the memory controller uses, the probabil-
ity of hitting the same bank is divided by 2 as there is one
more bit of entropy. In general, we can formulate that our
probability p to hit the same bank is p = 1/2n, where n is
the number of unknown physical address bits in the mapping.
We experimentally verify the success rate for the setups listed
in Table 3, as depicted in Figure 9. In summary, SPOILER
drastically improves the efﬁciency of ﬁnding addresses map-
ping to the same bank without administrative privilege or
reverse engineering the memory controller mapping.
630    28th USENIX Security Symposium
USENIX Association
(a) 19 bits used by memory controller, no unknown bits
(b) 21 bits used by memory controller, 1 unknown bit
(c) 22 bits used by memory controller, 2 unknown bits
(d) 23 bits used by memory controller, 3 unknown bits
Figure 9: Bank co-location for various DRAM conﬁgurations
(a), (b), (c) & (d) from Table 3. The regularity of the peaks
shows that the allocated memory was contiguous, which is
coincidental.
6.2 Contiguous Memory
For a double-sided Rowhammer attack, we need to hammer
rows adjacent to the victim row in the same bank. This re-
quires detecting contiguous memory pages in the allocated
memory, since the rows are written to the banks sequentially.
Without contiguous memory, the banks will be ﬁlled randomly
and we will not be able to locate neighboring rows. We show
that an attacker can use SPOILER to detect contiguous memory
using 1 MB aliasing peaks. For this purpose, we compare the
physical frame numbers to the SPOILER leakage for 10000
different virtual pages allocated using malloc. Figure 10
shows the relation between 1 MB aliasing peaks and physical
page frame numbers. When the distance between the peaks
is random, the trend of frame numbers also change randomly.
After around 5000 pages, we observe that the frame numbers
increase sequentially. The number of pages between the peaks
remains constant at 256 where this distance comes from the 8
bits of physical address leakage due to 1 MB aliasing.
We also compare the accuracy of obtaining contiguous
memory detected by SPOILER by analyzing the actual physi-
cal addresses from the pagemap ﬁle. By checking the differ-
ence between physical page numbers for each detected virtual
page, we can determine the accuracy of our detection method:
the success rate for ﬁnding contiguous memory is above 99%
disregarding the availability of the contiguous pages. For de-
tailed experiment on the availability of the contiguous pages,
see Section 10.3 in the appendix.
Figure 10: Relation between leakage peaks and the physical
page numbers. The dotted plot shows the leakage peaks from
SPOILER. The solid plot shows the decimal values of the phys-
ical frame numbers from the pagemap ﬁle. Once the peaks
in the dotted plot become regular, the solid plot is linearly
increasing, which shows contiguous memory allocation.
6.3 Double-Sided Rowhammer with SPOILER
As double-sided Rowhammer attacks are based on the as-
sumption that rows within a bank are contiguous, we mount a
practical double-sided Rowhammer attack on several DRAM
modules using SPOILER without any root privileges. First,
we use SPOILER to detect a suitable amount of contiguous
memory. If enough contiguous memory is available in the
system, SPOILER ﬁnds it, otherwise a double-sided Rowham-
mer attack is not feasible. In our experiments, we empirically
conﬁgure SPOILER to detect 10 MB of contiguous memory.
Second, we apply the row conﬂict side channel only to the
located contiguous memory, and get a list of virtual addresses
which are contiguously mapped within a bank. Finally, we
start performing a double-sided Rowhammer attack by se-
lecting 3 consecutive addresses from our list. While we have
demonstrated the bit ﬂips in our own process, we can free that
memory which can then be assigned to a victim process by
using previously known techniques like spraying and memory
waylaying [16]. As the bit ﬂips are highly reproducible, we
can again ﬂip the same bits in the victim process to demon-
strate a full attack. Table 4 shows some of the DRAM modules
susceptible to Rowhammer attack.
The native version of Rowhammer in this work is also ap-
plicable in JavaScript. The JavaScript-only variant implemen-
tation of Rowhammer by Gruss et al. [18], named rowham-
mer.js5, can be combined with SPOILER to implement an
end-to-end attack. In the original rowhammer.js, 2MB huge
pages were assumed to get a contiguous chunk of physical
memory. With SPOILER, this assumption is no longer required
as explained in Section 6.3.
Figure 11 shows the number of hammers compared to the
the amount of bit ﬂips for conﬁguration (e) in Table 3. We
5https://github.com/IAIK/rowhammerjs
USENIX Association
28th USENIX Security Symposium    631
200400600Cycles200400600Cycles200400600Cycles200400600Cycles020406080100Peak Number05001000Cycles0200040006000800010000Page Numbers1.52Frame Numbers106564156425643564456451.9824641.9824661.982468106DRAM Model
M378B5273DH0-CK0
M378B5273DH0-CK0
M378B5773DH0-CH9
M378B5173EB0-CK0
NT2GC64B88G0NF-CG
KY996D-ELD
M378B5773DH0-CH9
NT4GC64B8HG0NS-CG Sandy Bridge
HMA41GS6AFR8N-TF
Skylake
Architecture
Ivy Bridge
Sandy Bridge
Sandy Bridge
Sandy Bridge
Sandy Bridge
Sandy Bridge
Nehalem
Flippy
(cid:88)
(cid:88)
(cid:88)
×
×
×
(cid:88)
×
×
Table 4: DRAM modules susceptible to double-sided
Rowhammer attack using SPOILER.
Figure 11: Amount of bit ﬂips increases with the increase in
number of hammerings. The timings do not include the time
taken for reboots and 1 minute sleep time.
repeat this experiment 30 times for every measurement and
the results are then averaged out. On every experiment, the
system is rebooted using a script because once the memory
becomes fragmented, no more contiguous memory is avail-
able. The number of bit ﬂips increases with more number of
hammerings. Hammering for 500 million times is found to
be an optimal number for this DRAM conﬁguration, as the
continuation of hammering is not increasing bit ﬂips.
Figure 12: The depth of SPOILER leakage with respect to
different instructions and execution units.
timing and the load address can leak secrets [61]. Due to
the nature of SPOILER, the victim should access the memory
while there are aliased addresses in the store buffer, i.e. if the
stores are committed before the victim’s speculative load,
there will be no dependency resolution hazard.
We ﬁrst perform an analysis of the depth of the operations
that can be executed between the stores and the load to
investigate the viability of SPOILER. In this experiment, we
repeat a number of instructions between stores and the load
that are free from memory operations. Figure 12 shows the
number of stall steps due to the dependency hazard with the
added instructions. Although nop is not supposed to take any
cycle, adding 4000 nop will diffuse the timing latency. Then,