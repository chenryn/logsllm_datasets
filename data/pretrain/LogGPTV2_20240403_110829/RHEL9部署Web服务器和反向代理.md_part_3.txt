    1.  设置服务器名称：
        ``` literallayout
        ServerName example.com
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        服务器名称必须与证书的
        `Common Name`{.literal}字段中设置的条目匹配。
        :::
    2.  可选：如果证书在 `Subject Alt Names`{.literal}
        (SAN)字段中包含额外的主机名，您可以配置 `mod_ssl`{.literal}
        来为这些主机名提供 TLS
        加密。要配置此功能，请添加具有对应名称的`ServerAliases`{.literal}参数：
        ``` literallayout
        ServerAlias www.example.com server.example.com
        ```
    3.  设置到私钥、服务器证书和 CA 证书的路径：
        ``` literallayout
        SSLCertificateKeyFile "/etc/pki/tls/private/example.com.key"
        SSLCertificateFile "/etc/pki/tls/certs/example.com.crt"
        SSLCACertificateFile "/etc/pki/tls/certs/ca.crt"
        ```
    :::
3.  出于安全考虑，配置成只有 `root`{.literal} 用户才可以访问私钥文件：
    ``` literallayout
    # chown root:root /etc/pki/tls/private/example.com.key
    # chmod 600 /etc/pki/tls/private/example.com.key
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果私钥被设置为可以被未授权的用户访问，则需要撤销证书，然后再创建一个新私钥并请求一个新证书。否则，TLS
    连接就不再安全。
    :::
4.  在本地防火墙中打开端口 `443`{.literal}:
    ``` literallayout
    # firewall-cmd --permanent --add-port=443/tcp
    # firewall-cmd --reload
    ```
5.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用密码来保护私钥文件，则必须在每次
    `httpd`{.literal}服务启动时都输入此密码。
    :::
:::
::: itemizedlist
**验证步骤**
-   使用浏览器并连接到`https://example.com`{.literal}。
:::
::: itemizedlist
**其他资源**
-   请参阅 Apache 手册中的 `SSL/TLS 加密`{.literal} 文档。
-   请参阅 [安装 Apache HTTP
    服务器手册](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#installing-the-apache-http-server-manual_setting-apache-http-server "安装 Apache HTTP 服务器手册"){.link}。
-   [RHEL 9 中 TLS
    的安全注意事项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/securing_networks/planning-and-implementing-tls_securing-networks#security-considerations-for-tls-in-rhel_planning-and-implementing-tls){.link}
:::
:::
::: section
::: titlepage
## []{#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#setting-the-supported-tls-protocol-versions-on-an-apache-http-server_configuring-tls-encryption-on-an-apache-http-server}在 Apache HTTP 服务器中设置支持的 TLS 协议版本 {.title}
:::
默认情况下，RHEL 上的 Apache HTTP
服务器使用系统范围的加密策略来定义安全默认值，这些值也与最新的浏览器兼容。例如，`DEFAULT`{.literal}策略定义了在
apache 中只启用 `TLSv1.2`{.literal}和`TLSv1.3`{.literal}协议版本。
这部分论述了如何手动配置 Apache HTTP 服务器支持的 TLS
协议版本。如果您的环境只需要启用特定的 TLS
协议版本，请按照以下步骤操作，例如：
::: itemizedlist
-   如果您的环境要求客户端也可以使用弱 `TLS1`{.literal}
    (TLSv1.0)或`TLS1.1`{.literal}协议。
-   如果你想将 Apache
    配置为只支持`TLSv1.2`{.literal}或`TLSv1.3`{.literal}协议。
:::
::: itemizedlist
**先决条件**
-   TLS 加密在服务器上是启用的，如 [将 TLS 加密添加到 Apache HTTP
    服务器](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_configuring-tls-encryption-on-an-apache-http-server "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
    中所述。
:::
::: orderedlist
**步骤**
1.  编辑 `/etc/httpd/conf/httpd.conf`{.literal}
    文件，并将以下设置添加到您要为其设置 TLS
    协议版本的``{.literal}指令中。例如，只启用`TLSv1.3`{.literal}协议：
    ``` literallayout
    SSLProtocol -All TLSv1.3
    ```
2.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  使用以下命令来验证服务器是否支持`TLSv1.3`{.literal}:
    ``` literallayout
    # openssl s_client -connect example.com:443 -tls1_3
    ```
2.  使用以下命令来验证服务器是否不支持`TLSv1.2`{.literal} ：
    ``` literallayout
    # openssl s_client -connect example.com:443 -tls1_2
    ```
    如果服务器不支持该协议，命令会返回一个错误：
    ``` literallayout
    140111600609088:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:ssl/record/rec_layer_s3.c:1543:SSL alert number 70
    ```
3.  可选：为其他 TLS 协议版本重复该命令。
:::
::: itemizedlist
**其他资源**
-   请参阅 `update-crypto-policies(8)`{.literal} 手册页。
-   请参阅
    [使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
-   有关 `SSLProtocol`{.literal} 参数的详情，请查看 Apache 手册中的
    `mod_ssl`{.literal} 文档。
-   请参阅 [安装 Apache HTTP
    服务器手册](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#installing-the-apache-http-server-manual_setting-apache-http-server "安装 Apache HTTP 服务器手册"){.link}。
:::
:::
::: section
::: titlepage
## []{#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#setting-the-supported-ciphers-on-an-apache-http-server_configuring-tls-encryption-on-an-apache-http-server}在 Apache HTTP 服务器中设置支持的密码 {.title}
:::
默认情况下，Apache HTTP
服务器使用定义安全默认值的系统范围的加密策略，这些值也与最新的浏览器兼容。有关系统范围加密允许的密码列表，请查看`/etc/crypto-policies/back-ends/openssl.config`{.literal}
文件。
这部分论述了如何手动配置 Apache HTTP
服务器支持的加密。如果您的环境需要特定的加密系统，请按照以下步骤操作。
::: itemizedlist
**先决条件**
-   TLS 加密在服务器上是启用的，如 [将 TLS 加密添加到 Apache HTTP
    服务器](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_configuring-tls-encryption-on-an-apache-http-server "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
    中所述。
:::
::: orderedlist
**步骤**
1.  编辑`/etc/httpd/conf/httpd.conf`{.literal}文件，并将`SSLCipherSuite`{.literal}参数添加到您要为其设置
    TLS 密码的``{.literal}指令中：
    ``` literallayout
    SSLCipherSuite "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!SHA1:!SHA256"
    ```
    这个示例只启用
    `EECDH+AESGCM`{.literal}、`EDH+AESGCM`{.literal}、`AES256+EECDH`{.literal}
    和
    `AES256+EDH`{.literal}密码，并禁用所有使用`SHA1`{.literal}和`SHA256`{.literal}消息身份验证码(MAC)的密码。
2.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  显示 Apache HTTP 服务器支持的密码列表：
    ::: orderedlist
    1.  安装`nmap`{.literal}软件包：
        ``` literallayout
        # dnf install nmap
        ```
    2.  使用`nmap`{.literal}工具来显示支持的加密：
        ``` literallayout
        # nmap --script ssl-enum-ciphers -p 443 example.com
        ...
        PORT    STATE SERVICE
        443/tcp open  https
        | ssl-enum-ciphers:
        |   TLSv1.2:
        |     ciphers:
        |       TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (ecdh_x25519) - A
        |       TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (dh 2048) - A
        |       TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (ecdh_x25519) - A
        ...
        ```
    :::
:::
::: itemizedlist
**其他资源**
-   请参阅 `update-crypto-policies(8)`{.literal} 手册页。
-   请参阅
    [使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
-   有关 `SSLCipherSuite`{.literal} 参数的详情，请查看 Apache 手册中的
    `mod_ssl`{.literal} 文档。
-   请参阅 [安装 Apache HTTP
    服务器手册](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#installing-the-apache-http-server-manual_setting-apache-http-server "安装 Apache HTTP 服务器手册"){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#configuring-tls-client-certificate-authentication_setting-apache-http-server}配置 TLS 客户端证书身份验证 {.title}
:::
客户端证书身份验证可让管理员只允许使用证书进行身份验证的用户访问 web
服务器上的资源。这部分论述了如何为`/var/www/html/Example/`{.literal}目录配置客户端证书身份验证。
如果 Apache HTTP 服务器使用 TLS 1.3
协议，某些客户端将需要额外的配置。例如，在 Firefox
中，将`about:config`{.literal}菜单中的`security.tls.enable_post_handshake_auth`{.literal}参数设置为`true`{.literal}。详情请查看
[Red Hat Enterprise Linux
8中的传输层安全版本1.3](https://www.redhat.com/en/blog/transport-layer-security-version-13-red-hat-enterprise-linux-8){.link}。
::: itemizedlist
**先决条件**
-   TLS 加密在服务器上是启用的，如 [将 TLS 加密添加到 Apache HTTP
    服务器](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_configuring-tls-encryption-on-an-apache-http-server "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
    中所述。
:::
::: orderedlist
**步骤**
1.  编辑`/etc/httpd/conf/httpd.conf`{.literal}文件，并将以下设置添加到你要为其配置客户端验证的``{.literal}指令中：
    ``` screen
      SSLVerifyClient require
    ```
    `SSLVerifyClient require`{.literal}设置定义了服务器必须成功验证客户端证书，然后客户端才能访问`/var/www/html/Example/`{.literal}目录中的内容。
2.  重启`httpd`{.literal}服务：
    ``` screen
    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  使用`curl`{.literal}工具在没有客户端身份验证的情况下访问`https://example.com/Example/`{.literal}URL：
    ``` screen
    $ curl https://example.com/Example/
    curl: (56) OpenSSL SSL_read: error:1409445C:SSL routines:ssl3_read_bytes:tlsv13 **alert certificate required**, errno 0
    ```
    这个错误表示 web 服务器需要客户端证书验证。
2.  将客户端私钥和证书以及 CA
    证书传递给`curl`{.literal}以便使用客户端身份验证来访问相同的URL：
    ``` screen
    $ curl --cacert ca.crt --key client.key --cert client.crt https://example.com/Example/
    ```
    如果请求成功，`curl`{.literal}会显示存储在`/var/www/html/Example/`{.literal}目录中的`index.html`{.literal}文件。
:::
::: itemizedlist
**其他资源**
-   请参阅 Apache `手册中的 mod_ssl 配置指南`{.literal} 文档。
-   请参阅 [安装 Apache HTTP
    服务器手册](#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#installing-the-apache-http-server-manual_setting-apache-http-server "安装 Apache HTTP 服务器手册"){.link}。
:::
:::
::: section
::: titlepage
# []{#setting-apache-http-server_deploying-web-servers-and-reverse-proxies.html#installing-the-apache-http-server-manual_setting-apache-http-server}安装 Apache HTTP 服务器手册 {.title}
:::
这部分论述了如何安装 Apache HTTP 服务器手册。手册提供了详细信息，例如：
::: itemizedlist
-   配置参数和指令
-   性能调整
-   身份验证设置
-   模块
-   内容缓存
-   安全提示
-   配置 TLS 加密
:::
安装后，您可以使用 Web 浏览器显示手册。
::: itemizedlist
**先决条件**
-   Apache HTTP 服务器已安装并运行。
:::
::: orderedlist
**步骤**
1.  安装`httpd-manual`{.literal}软件包：
    ``` screen
    # dnf install httpd-manual
    ```