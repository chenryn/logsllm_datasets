D=book,t=parent--execute
[root@vm01~]#pt-online-schema-change--alter-foreign-keys-method=auto--alter="add age tinyint(4)"--user=root
[root@vm01 ~]# pt-online-schema-change --alter-foreign-keys-method=auto --alter="add age tinyint(4)" --user=root
Operation,tries,wait:
CannotconnecttoD=book,h=vm02.localdomain,u=root
对子表增加字段：
结论：对有外键的表，在父表增加字段，创建成功。
Swapped original and newtables OK.
Maxrowsfortherebuild_constraintsmethod:4000
Altered'book'.'_parent_new'OK.
Willautomaticallychoosethemethodtoupdateforeignkeys.
Operation,tries,wait:
CannotconnecttoD=book,h=vm02.localdomain,u=root
对父表增加字段：
Successfullyaltered'book'.'parent'
Dropped triggersOK.
Droppingtriggers...
Droppingoldtable...
RebuiltforeignkeyconstraintsOK.
Rebuildingforeignkeyconstraints...
Swappingtables..
CopiedrowsOK.
Copyingapproximately1rows...
Created triggersOK.
Creatingtriggers...
Alteringnewtable...
Creatednewtablebook._parent_new OK.
Creatingnewtable...
Altering'book''parent'..
Childtables:
book''child':1rows;canuse rebuild_constraints
"book'.'child'(approx.1rows)
row in set(0.05sec)
copy_rows,10,0.25
swap_tables,10,1
create_riggers,10,1
copy_rows,10,0.25
ENGINE=InnoDBDEFAULTCHARSET=utf8
CONSTRAINT'fk_pid'FOREIGNKEY('pid)REFERENCES'parent'(*id)
swap_tables,10,1
drop_triggers, 10,1
create_triggers,10,1
update_foreign_keys,10,1
drop_triggers,10,1
KEY"fk_pid"('pid"),
---
## Page 171
FROM'book'.'t1'LOCKINSHAREMODE/*pt-online-schema-change3205copy table*/
Cannot connect toD=book,h=vm02.localdomain,u=root
Operation,tries,wait:
Error copying rows from'book'.'t1'to'book'.'_t1_new':Copying rows caused aMySQL error 1364:
对一个字段含有not null不为空进行测试，更改表结构，如下：
结论：对有外键的表，在子表增加字段，创建成功。
book''t1'was not altered.
DroppednewtableOK.
Oroppingnewtable...
Dropped triggers OK.
Droppingtriggers...
Copyingapproximately3rows...
Created triggersOK.
Created newtable book._t1_new OK.
Creatingnewtable...
Altering'book''t1'..
测试五：字段含有notnull不为空
Successfully altered'book'.'child'.
Dropped triggersOK.
Droppedold table'book._child_old'OK.
Altered"book''_child_new'OK.
Creatednewtablebook._child_newOK.
Creatingnewtable..
Altering'book'.'child'...
No foreignkeysreference"book'.'child';ignoring--alter-foreign-keys-method.
Creatingtriggers...
Alter
Alter
Droppingtriggers...
Copy
Message:Field'address'doesn't have a default value
update_foreign_keys,10,1
create_triggers,10,
swap_tables,10,1
drop_triggers,10,1
copy_rows,10,0.25
roppingoldtable...
vappedoriginaland newtablesOK.
update_foreign_keys,10,1
Query:INSERTLOW_PRIORITYIGNOREINTObook'.t1_new（id,'name，'age,'rmb’)SELECT'id",'name'，,'age，,'rmb’
appingtables.
Level:Warning
red'book'.'_t1_new'OK.
oiedrowsOK.
ringnewtable..
yingapproximately1rows..
Code:1364
第5章性能调优·157
---
## Page 172
158·第二部分故障诊断与性能优化篇
旧表会被删除，新表将被重命名为旧的表名。相关命令如下：
复制已存在的记录到新表中，并且是在插人行时更新索引。在旧表的所有行被复制完之后
ALTERTABLE操作的原理是通过创建新的空表，定义被要求的表选项和索引，然后逐行
5.2.6
之前，建议对数据表进行备份，可以使得操作更安全、可靠。
后执行，避开业务高峰期。由于该工具不是MySQL官方的，可能存在一定的风险，在操作
另外，表的大小决定了pt-online-schema-change执行的快慢，所以一般要在凌晨0:00点以
成功。
D=book,t=t1--execute
从上面的测试来看，pt-online-schema-change也存在着一些局限性，使用时要特别注意。
在MySQL5.6之前，InnoDB 存储引擎表的许多DDL操作代价是非常昂贵的。许多
createtabletmpliket1
结论：增加的字段为 not null，不为空，该工具会报错，需要增加默认值才可以更改
[root@vm01~]#pt-online-schema-change--alter="add address varchar(20) not nulldefault'china--user=root
一行行地把原表数据复制到临时表里，且更新索引。
insert into tmpselect*fromt1
创建一个临时表。
Successfullyaltered'book'.'t1'.
Dropped triggers OK.
Droppingtriggers...
Dropped old table'book'.'_t1_old'OK.
Swapping tables.
Copied rows OK.
Copying approximately3row...
Created triggers OK.
Altered'book'."t1_new'OK.
Created new table book._t1_new OK.
Operation,tries,wait:
Cannotconnect toD=book,h=vm02.localdomain,u=root
从报错信息来看，需要对非空字段增加一个默认值，我们再测试一下：
Droppingold table...
SwappedoriginalandnewtablesOk.
Creatingtriggers...
Alteringnewtable...
Creatingnewtable...
Altering'book''t1'..
drop_triggers, 10,1
copy_rows,10,0.25
swap_tables,10,1
create_triggers,10,
MySQL5.6在线DDL更改表测试
---
## Page 173
查均不会受影响，不会锁表。这些功能的组合现在被称为onlineDDL。
MySQL5.6里进一步对其进行了优化，在某一会话中增加字段时，其他会话增、删、改、
之前在MySQL5.5里虽然增加、删除索引时不会锁表，但修改字段还是会锁表，而在
TABLE操作来避免复制表。
避免了表的复制行为。这个特性被称为Fast indexCreation。MySQL5.6加强了ALTER
socket=/tmp/mysql.sockprepare
-mysql-host=192.168.110.140--mysql-port=3306--mysql-user=admin --mysql-password=123456--mysql-db=test --mysql
些，可以看出效果来)。
，
这是MySQL5.6的一个重大特性，
针对上述特性将进行如下测试，用Sysbench 生成一张有1000万行内容的数据（数据大
但在MySQL5.5里，这样的操作是会锁表的，如图5-52所示。
这时你会发现并没有锁表，各操作顺利执行完毕，如图5-51所示。
在会话二中执行如下命令：
然后在会话一中执行如下命令：
update sbtestsetk=11whereid=1000;
insertinto sbtestvalues（1000,1,'abc',abc','abc'）;
deletefrom sbtestwhereid=1000;
alter tablesbtest add namevarchar(10)afterpad;
在这个过程中会对t1表加S锁（共享锁)，所以这个代价是很高的。
删除原表，并把临时表改名为原表tl。
droptablet1;renametabletmptot1
shcw
acheduler
(0. 01 sec)
|localhost | NULL  Daemon |4472 I Weiting en empty queue
locnlhoat teatQuery
lacalhosttestQuery
Command Iime  State
图5-51未锁表状态信息
，它参考了pt-online-schema-change的工作原理，
0init
altey table sbtezt
NULL
ahew grocesaliat
Inf
第5章性能调优·159
add
---
## Page 174
160·第二部分故障诊断与性能优化篇
name:
ariuble_name
这里故意执行了一条大结果的查询，然后再执行删除操作，删除刚才增加的字段
从图5-53中可以看到，这时就会把表给锁了。
altertablesbtestdropname;
select*from sbtest;
在会话一中执行如下命令：
可能会有人有疑问，MySQL5.6在线DDL就一定不锁表吗？我们再来一个测试，如下：
isclation
=
V
zhow variables like
agent | 192. 168. 110. 140:6064S | NULL | S1eep
User|Host
=
terprise
|loealhc
READ-
sec)
COAMLT
TE
NQuer
testQuery
test|Query
ommandTime
图5-52锁表状态信息
图5-53锁表状态信息
5
27
Wuitine for table metadita lock | delete fren sbtest where id
State
NLL
cepy te tap tale
Lor
shew procesaliat.
alte tale sbteat add rme
NLI
---
## Page 175
5.3.1
5.3
作，以免改表时出现锁等待现象。
现象。所以在凌晨上线时，一定要观察一下，此时此刻是否有某个慢SQL在对该表进行操
这之前，该表有被访问，那需要等其执行完毕后，才可以执行 alter table，否则会存在锁表
5.5.1.OverviewofOnlineDDL
关于在线DDL，请参考手册：
口对MyISAM表的写操作（加写锁），会阻塞其他进程对同一表的读和写操作，只有当
口对MyISAM表的读操作（加读锁），不会阻塞其他进程对同一表的读请求，但会阻塞
MyISAM存储引擎只支持表锁，所以对MyISAM表进行操作，会存在以下情况：
口页面锁：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和
口行级锁：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并
口表级锁：开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并
MySQL的锁有以下几种形式：
也就是说，在执行alter table表时，对该表的增、删、改、查均不会锁表。而如果在
下面来演示一下表锁的读取与释放操作：
发度也最高。InnoDB引擎属于这种类型。
写锁释放后，才会执行其他进程的读写操作。
发度最低。MyISAM引擎属于这种类型。
对同一表的写请求。只有当读锁释放后，才会执行其他进程的写操作。
采用合适的锁机制
行锁之间，并发度一般。NDB 属于这种类型。
表锁的演示
othertypes
owsfrom
6L
avoid
第5章性能调优·161
SELECT
many
---
## Page 176
162
·
部分
Session1
Session2
故
mysql>show create tablet2\G;
障诊
断
********
*************
与性能优化篇
Table:t2
CreateTable:CREATETABLE't2'（
id'tinyint(3)unsignedNOTNULLAUTO_INCREMENT,
'name'varchar(10)NOTNULL,
PRIMARY KEY('id')
)ENGINE=MyISAMAUTO_INCREMENT=8DEFAULTCHARSET=gbk
1row in set(0.00 sec)
mysql>use test;
Database changed
mysql>locktablet2read;
QueryOK,0rowsaffected(0.o0sec)
对t2表加读锁
mysql>select*fromt2;
mysql>select *from t2;
| id|name|
|id|name|
|1|a
|1|a|
|2|b
|2|b
1
|3|c
|3|c∣
|4| d
14|d1
|5|e
15|el
|6|f
161f|
|71g
|7丨g丨
--+-.-
7rows in set(0.00 sec)
7rows in set(0.00 sec)
---
## Page 177
mysql>updatet2setname='g1'where
id=7;
此时就会锁等待，等待会话一锁的释
放
mysql> show processlist;
|ld|User |Host
qp1
|Command|Time|State
|Info
|1|admin|192.168.8.1:3269|test |Sleep
1535I|NULL
|2|admin|192.168.8.1:3271|NULL|Sleep
|552IINULL
|4|root|localhost
|test|Query
丨OINULL
|showprocesslist
|5|root|localhost
|test|Query
157
|Waitingfortablelevellock|updatet2setname='g1'whereid=7|
4rowsin set(0.00sec)
mysql>unlock tables;
QueryOK,0rows affected(0.00 sec)
mysql>updatet2 set name='g1'where
id=7;
QueryOK,1row affected(27min24.11
sec)
Rowsmatched:1Changed:1
Warnings:0
锁释放后，顺利更新
第5章
性
能
调
优
·
3
---
## Page 178
164·第二部分故障诊断与性能优化篇
待超时阀值参数innodb_lock_wait_timeout 来解决，一般设置为100秒即可。
大量计算机资源，造成严重的性能问题，甚至拖垮数据库，这时需要通过设置合适的锁等
条件检索数据，InnoDB才会使用行级锁，否则，InnoDB将使用表锁。