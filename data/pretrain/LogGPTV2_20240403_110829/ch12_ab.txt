虽然我的头衔违反了我自己的建议（在其他地方也注意到了建议），但职称中的“DevOps”一词本质上是不切实际的。DevOps 更像是一种哲学、方法或实践，与敏捷开发相似。尽管在当今世界拥有“敏捷开发人员”这样的职称似乎很荒谬，但“DevOps工程师”很可能总有一天（而且应该）会面对相似的问题。
SRE 倾向于工作职能的描述。无论是遵循 DevOps 原则、敏捷原则，还是下一个热门趋势，其功能都保持不变：确保“站点”在所有组件中的可靠性，哪怕是底层基础架构也不例外。使用推荐的、公认的方法论来完成这项任务。 
—Keith McDuffee，基础设施与开发计划高级经理，Cardinal Health
◆ ◆ ◆◆ ◆ ◆
DevOps 和 SRE 是相关的，我们都是开发人员。在 80 年代初我在 IBM 的第一份工作中，有三种人帮助我们发布产品（当时是“程序产品”）：产品程序员、系统程序员和电工。从事程序产品工作的人是开发人员，系统程序员也是开发人员。我们刚刚回到一个好的模型；我们都是开发人员。某些开发人员负责保持其软件作为其他开发人员的平台正常运行，其他开发人员负责保持其软件正常运行，为其他类型的客户提供服务。在现代世界中，DevOps 和 SRE 都面向构建和操作软件，这是任何构建和操作软件产品的人关心的问题。
至于 DevOps 和 SRE 之间的差异，以及它们是否可以共存，每个组织可能都有不同的方法，就像不同的团队可以用不同的方式练习敏捷一样。但是，无论你的软件产品的客户是其他软件开发人员，还是购买新鞋的人，都需要全面构建和运维产品，并避免在 DevOps/SRE 开发人员和其他软件开发人员之间划清界限。在一些组织中将 DevOps 和 SRE 分开，可能更多地是由组织或政治结构驱动的，而不是因为两者之间有显著的差异导致的。再一次，我们都是开发人员。—Paula Paul，技术负责人，ThoughtWorks
◆ ◆ ◆
站点可靠性工程：我们不知道 DevOps 是什么，但我们知道我们有些小小的不同。—Paula Paul
—Mike Doherty, successful reliability escapee
◆ ◆ ◆
如果你看看招聘广告，答案就很清楚了：业界已经决定，DevOps 工程师将注意力集中在 SDLC 流程上，偶尔负责生产运维。SRE 的招聘广告侧重于偶尔负责 SDLC 流程的生产运维。两者是一回事：区别在于重点（#limoncelli_model_of_srecomma_devopscomma）。
SRE、DevOps 和敏捷策略的 Limoncelli 模型SRE、DevOps 和敏捷策略的 Limoncelli 模型
Google SRE 可以专注于流程的后期部分，因为在 Google 里，早期阶段要么解决了问题，要么委派给其他团队。随着时间的推移，SRE 已经能够保持他们的注意力：卓越的运维。他们潜入流程的前期部分，作为目的的手段。如果生产问题的根源在于 CI/CD 纪律不足或草率，SRE 将空降进入开发人员区域并做出改进，直到生产不再受到影响。DevOps，历史上，一直强调管道的前期部分，因为 DevOps 坚持解决整个问题，经验表明，将项目转换为使用 CI/CD 是其他一切的先决条件。这并不是说 DevOps 不关心生产运维，但如果你查看 DevOps 的招聘广告和“DevOps 角色转换”的故事，它们都倾向于将公司转向 CI/CD。一旦 CI/CD 启用快速发布，重点将更改为生产运维，同样，工作头衔通常会更改为 SRE。—Thomas A. Limoncelli, SRE manager, Stack Overflow, Inc., Google SRE Alum
◆ ◆ ◆
它们相似，因为它们都主要关注开发人员和运维工作流的自动化。DevOps 专注于使用高效的工具和策略扩展旧的工作流和文化。SRE 侧重于通过自动故障修复来避免糟糕的客户体验，尽快知道何时出现问题，并通过负荷测试以规划未来的容量。
DevOps 是针对需要改进工具和文化的敏捷新团队。SRE 适用于成熟的希望改善系统在线比例、监控、安全性和团队信心的敏捷团队。要使用一些实际示例，迁移到云应该是一个 DevOps 计划，而设置故障转移灾难恢复站点则是 SRE。两者都可以一起实施，因为公司中会有处于不同阶段的人和部门。 
—Jefferson Hale，站点可靠性工程师，Seismic Games
◆ ◆ ◆◆ ◆ ◆
SRE 通常不管理基础结构。他们可能管理调试仪表板或帮助构建它们。DevOps 似乎更关心通过自动化减轻人类的劳作。 
—Adam Shannon，软件工程师，Jack Henry and Associates
◆ ◆ ◆
DevOps 的核心是精益、敏捷等各种 IT 实践的融合。在组织中灌输 DevOps 文化就像在组织中拥抱开源一样。这是做你以前做过的事情的一种新方式。但是，像开源一样，你可以更快更便宜。但是，在开源与软件有关的地方，DevOps 大部分是关于人员、流程，较小程度的谈及工具。
另一方面，SRE 对生产中的服务和软件采取了量化分析的方法。利用指标、阈值、SLA 和 SLO，团队可以指出有关系统的具体事实。DevOps 和 SRE 没有理由不能协同工作。事实上，当配对在一起时，它们很有意义。在 DevOps 中，将 SRE 团队学到的代码生产使用情况反馈回交付流程实际上是“第三种方式”。—Chris Short，高级 DevOps 倡导者，SJ Technologies
◆ ◆ ◆
对我来说，SRE 和 DevOps 是相似的，但并不相同。我认为 SRE 是更传统的运维（系统/网络）环境的下一个演变，它带来了这种环境中最缺少的东西，即运维方面的软件工程师的观点。它仍然是高技能和专注的团队管理基础设施，和 SRE 世界似乎仍然是一个孤岛，但一个已经采取了系统管理到一个新的水平，并继续演变和发展与现代基础设施、平台、工具和理念。与 SRE 相比，我认为 DevOps 在用作促进业务所有部门之间更好关系的手段时，最有价值。DevOps 向软件开发人员介绍了运维模式，向运维团队介绍了软件思维和理解。DevOps 还利用并跟上现代基础设施、平台、工具和概念的发展，但最有价值的是所有团队的文化转变和建立共同的主人翁感。两者能共存吗？是的。它们应该共存吗？视情况而定。业务、组织和团队的目标是什么？并不是所有东西都适合所有尺寸。SRE 非常适合像 Google 这样的大型组织，它诞生于 Google，它们有非常具体和非常复杂的问题，但它对你和你的组织可能没有意义。DevOps 也是如此。尽管 DevOps 带来了好处，但只有市场上积极拥抱它的那些公司才能明确体会到。 
—Sean Lutner，基础设施架构师，Edgewise Networks, Inc。
◆ ◆ ◆
对于许多 大型企业来说，DevOps 和 SRE 的主要区别是它们作为流行语的年龄。在谷歌之外，DevOps 一词至少比 SRE 大 6岁。这意味着与 SRE 相关的书籍、博客、会议和专家的影响力要小得多。迄今为止，DevOps 和 SRE 在主题和建议方面出现了重大重叠。两者都在工具、流程、平台、文化和工作场所方面提供了很好的指导。并不是所有 SRE 的倡议都是全新的，但它们大都值得关注，任何对 DevOps 运动感兴趣的人不应忽视它。但是，将 SRE 视为 DevOps 的另一个名称是错误的。与运维方面相比，经常（而且略有讽刺意味）谈论 DevOps 的人往往更关注软件交付生命周期的开发和发布部分。另一方面，SRE 存在倾向改善运维。在某种程度上，如果 DevOps 可以被视为在敏捷将交付瓶颈从开发转移到发布代码的介入中，SRE 正在介入，以缓解运行和扩展系统实时运行的新瓶颈。SRE 也乐于成为 DevOps 从未企盼的新头衔（而且往往也是一个能够立即鼓舞员工士气的人）。最后，SRE 运动提供了有用的新术语，以增加对重复性手动工作（琐碎的事务）和发布管理（启动配置工程师）等主题的讨论。 
—Mark Rendell，首席董事，Accenture
◆ ◆ ◆—Mark Rendell，首席董事，Accenture
◆ ◆ ◆
可靠性工程和 DevOps 旨在解决世界上大多数国家现在都面临着的相同问题：保持数字服务始终在线且可用，同时随着时间的推移提高功能和可操作性。虽然 DevOps 在类型定义的宣言方面仍然难以捉摸，但可靠性工程在许多方面为该术语分配了更具体的角色和责任。自该术语开始进入 Web 运维词典以来，站点可靠性工程的核心贡献是体现并推动与 DevOps 相关的相同原则。构建和运营具有全天候可用性期望的数字服务已成为不仅仅是软件即服务提供商的必需品。几乎每个行业的企业、政府和组织都面临着在同样的问题，也就是如何权衡新功能的快速开发与维护服务的运行状况和可用性的问题。
工程实践、团队和个人都集结于 SRE 的旗帜下，帮助企业为这些角色分配具体工作。SRE（团队或个体工程师）存在的核心原因是利用系统架构、自动化和问题解决方面的技术技能，以及协作和沟通的社交技能，并寻求以新的方式更多地了解整体系统。然后，为工程团队不断寻找新的、更好的软件开发方法以及改进体系结构和交付管道提供帮助。—Jason Hand，微软高级云运维倡导者（原 VictorOps）