### 系统管理员的角色及其挑战

系统管理员，通常被称为“sysadmin”，主要职责是整合现有的软件组件，使其协同工作以提供服务。他们负责运行这些服务，响应事件，并在必要时进行更新。随着系统的复杂性和流量的增加，事件和更新的数量也随之增加，导致需要更多的管理员来处理日益增长的工作量。由于系统管理员所需的技能与产品开发人员大相径庭，因此公司通常会将这两个角色分配给不同的团队：“开发”和“运维”。

#### 优点
采用系统管理员模式管理服务有几个显著的优势：
1. **易于实施**：这是一种广为人知且被广泛应用的行业标准，有很多成功的案例可供参考。
2. **丰富的人才库**：市场上已经存在大量具备相关技能的专业人才。
3. **成熟的工具和技术**：有许多现成的工具、软件组件以及集成解决方案可以帮助新手团队快速上手，无需从零开始设计整个系统。

#### 缺点
然而，这种分离也带来了一些明显的缺点，主要可以分为直接代价和间接代价两大类：

- **直接代价**：当服务规模或流量增长时，依靠人工干预进行变更管理和事件处理的成本非常高昂，因为这要求团队人数随负载的增长而同步增加。
  
- **间接代价**：两个团队之间存在的差异（例如背景、技术栈、激励机制等）可能导致沟通障碍、目标冲突乃至信任缺失等问题。特别是对于如何发布新功能到生产环境这一点，开发团队倾向于频繁推出新特性，而运维团队则更关注于保持现有服务的稳定运行。两者之间的这种紧张关系常常表现为对变更审批流程的不同看法——运维团队可能设置较高的门槛以减少潜在风险，而开发团队则通过诸如功能切换、增量更新等方式绕过这些限制。

### Google 的网站可靠性工程（SRE）

Google 采取了一种不同的方法来解决这些问题：通过引入网站可靠性工程 (Site Reliability Engineering, SRE) 来优化其服务管理流程。简单来说，SRE 就是由具有深厚编程背景的工程师组成的团队，专注于使用自动化手段代替传统手动操作来维护大规模分布式系统。

#### 组织结构
- 大约 50%-60% 的成员是符合 Google 标准程序招聘条件的软件工程师。
- 剩下的 40%-50% 则是接近该标准但拥有额外特定领域知识（如 UNIX 系统底层及网络技术）的专业人士。
- 所有 SRE 成员都具备编写高效代码解决问题的能力，并且在职业发展路径上没有明显区别。

#### 关键策略
为了确保 SRE 团队能够持续投入于技术创新而非仅仅应对日常运维任务，Google 设定了一项重要规则：即 SRE 只能将最多一半的时间用于执行纯粹的操作性工作。剩余时间必须投入到改进现有流程或构建新的自动化工具中去。这样不仅有助于控制人力成本，还能促进跨部门间知识共享与协作。

#### 效果评估
实践证明，这种方法确实带来了诸多好处，包括但不限于：
- 提高了创新速度与灵活性；
- 减少了支持相同规模服务所需的人力资源；
- 消除了传统意义上开发与运维之间的隔阂；
- 增强了整体技术水平。

尽管如此，SRE 模式同样面临着一些独特的挑战，比如难以找到同时满足高水平编程能力和系统管理经验要求的人才；此外，在实施过程中也需要管理层给予强有力的支持才能克服某些文化阻力。

> **DevOps vs. SRE**
>
> 虽然 DevOps 和 SRE 都强调在整个 IT 生命周期内加强协作并利用自动化提高效率，但它们之间仍存在一定差异。可以认为 SRE 是一种更为具体化的 DevOps 实践形式，特别适用于那些需要高度可靠性的大型在线服务提供商。反之亦然，DevOps 则代表了一种更加通用的方法论，适用于各种类型的企业组织。

---

作者简介：Benjamin Treynor Sloss 自 2003 年起担任 Google 全球运营、网络和生产工程负责人。截至 2016 年，他领导着一个由大约 4000 名软硬件及网络工程师组成的全球团队。