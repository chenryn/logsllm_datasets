:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#gfs2.ko-component}gfs2.ko 模块 {.title}
:::
::: para
使用 GFS 文件系统的内核模块是 `gfs.ko`{.literal}。使用 GFS2
文件系统的内核模块是 `gfs2.ko`{.literal}。
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#quota-mount-option}在 GFS2 中启用配额强制 {.title}
:::
::: para
在 GFS2
文件系统中，默认禁用配额强制，必须明确配置方可启用该功能。有关启用和禁用配额强制的详情请参考
[第 4.5 节 "GFS2 配额管理"](#ch-manage.html#s1-manage-quota){.xref}。
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#data_journaling}数据日志记录 {.title}
:::
::: para
GFS2 file systems support the use of the `chattr`{.command} command to
set and clear the `j`{.literal} flag on a file or directory. Setting the
`+j`{.literal} flag on a file enables data journaling on that file.
Setting the `+j`{.literal} flag on a directory means \"inherit jdata\",
which indicates that all files and directories subsequently created in
that directory are journaled. Using the `chattr`{.command} command is
the preferred way to enable and disable data journaling on a file.
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#journal-on-the-fly}动态添加日志 {.title}
:::
::: para
在 GFS2
文件系统中，日志是存在于文件系统之外的内嵌元数据，这就需要在添加日志前，扩展包含该文件系统的逻辑卷大小。在
GFS2 文件系统中，日志是纯文本文件（虽然是隐藏的）。这意味着对于 GFS2
文件系统来说，只要在该文件系统中有可放置附加日志的空间，就可以动态添加日志将其作为附加服务器挂载到文件系统中。有关在
GFS2 文件系统中添加日志的详情请参考 [第 4.7 节
"在文件系统中添加日志"](#ch-manage.html#s1-manage-addjournalfs){.xref}。
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#atime_quantum_gone}删除 atime_quantum 参数 {.title}
:::
::: para
GFS2 文件系统不支持 `atime_quantum`{.literal} 可调节参数，GFS
文件系统可使用该参数指定 `atime`{.command} 更新的频率。在 GFS2 中支持
`relatime`{.literal} 和 `noatime`{.command} 挂载选项。建议您使用
`relatime`{.literal} 挂载选项获得与在 GFS 中使用
`atime_quantum`{.literal} 参数时得到的类似行为。
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#data-option-mount}mount 命令的 data= 选项 {.title}
:::
::: para
在挂载 GFS2 文件系统时，您可以指定 `mount`{.command} 命令的
`data=ordered`{.literal} 或者 `data=writeback`{.literal} 选项。当设定
`data=ordered`{.literal}
时，某个事务修改的用户数据会在该事务被提交到磁盘前被冲入磁盘。这样可以让用户无法在崩溃后的文件中看到未初始化的块。设定
`data=writeback`{.literal}
时，用户数据会在磁盘有数据后的任何时候被写入磁盘。这不会提供
`ordered`{.literal}
模式可提供的一致性保障，但对某些工作负载来说可稍微加快一些速度。默认设置是
`ordered`{.literal} 模式。
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#gfs2tool-diffs}gfs2_tool 命令 {.title}
:::
::: para
`gfs2_tool`{.command} 为 GFS2 支持的选项组与 `gfs_tool`{.command} 命令为
GFS 支持的选项组不同：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `gfs2_tool`{.command} 命令支持 `journals`{.literal}
    参数，它可输出当前配置日志有关信息，其中包括文件系统包含的日志数。
    :::
-   ::: para
    `gfs2_tool`{.command} 命令不支持 `counters`{.literal} 标签，而
    `gfs_tool`{.command} 命令可使用该标签显示 GFS 统计。
    :::
-   ::: para
    The `gfs2_tool`{.command} command does not support the
    `inherit_jdata`{.literal} flag. To flag a directory as \"inherit
    jdata\", you can set the `jdata`{.literal} flag on the directory or
    you can use the `chattr`{.command} command to set the `+j`{.literal}
    flag on the directory. Using the `chattr`{.command} command is the
    preferred way to enable and disable data journaling on a file.
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
从 Red Hat Enterprise Linux 6.2 开始，GFS2 支持 `tunegfs2`{.command}
命令，该命令代替了 `gfs2_tool`{.command} 命令的一些功能。有关详情请参考
`tunegfs2`{.command}(8) man page。`gfs2_tool`{.command} 命令的
`settune`{.literal} 和 `gettune`{.literal} 功能已经由 `mount`{.command}
命令的命令行选项代替，这样可在需要时使用 `fstab`{.filename}
文件进行设置。
:::
:::
:::
:::
::: simplesect
::: titlepage
### [⁠]{#ch-overview-GFS2.html#gfs2edit}gfs2_edit 命令 {.title}
:::
::: para
`gfs2_edit`{.command} 命令为 GFS2 支持的选项组与 `gfs_edit`{.command}
命令为 GFS 支持的选项组不同。有关该命令每个版本具体支持的选项，请参考
`gfs2_edit`{.command} 和 `gfs_edit`{.command} man page。
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-overview-GFS2.html#GFS2-improvements}1.4.3. GFS2 性能改进 {.title}
:::
::: para
GFS2 文件系统的很多功能与 GFS
文件系统在界面上没有什么不同，但文件系统性能会有提高。
:::
::: para
GFS2 文件系统在以下方面提供改进的文件系统性能：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    在大量使用单一目录时有较好的性能。
    :::
-   ::: para
    更快的同步 I/O 操作
    :::
-   ::: para
    更快的缓存读取（无锁定消耗）
    :::
-   ::: para
    对预先分配的文件有更快的直接 I/O （提供合理的较大 I/O 值，比如 4M
    大的块）
    :::
-   ::: para
    普遍更快的 I/O 操作
    :::
-   ::: para
    执行 `df`{.command} 命令的速度更快，因为 `statfs`{.command}
    调用的速度更快。
    :::
-   ::: para
    与 GFS 相比，改进了 `atime`{.command} 模式以减少 `atime`{.command}
    生成的写入 I/O 操作数量。
    :::
:::
::: para
GFS2 文件系统在以下方面提供更广泛和主流的支持：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    GFS2 是上游内核（整合到 2.6.19）的一部分。
    :::
-   ::: para
    GFS2 支持以下功能。
    :::
    ::: itemizedlist
    -   ::: para
        扩展的文件属性（`xattr`{.literal}）
        :::
    -   ::: para
        通过标准 `ioctl`{.command}() 调用设置 `lsattr`{.command}() 和
        `chattr`{.command}() 属性
        :::
    -   ::: para
        纳秒时间戳
        :::
    :::
:::
::: para
GFS2 在文件系统的内在效率方面提供以下改进。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    GFS2 使用更少的内核内存。
    :::
-   ::: para
    GFS2 需要非元数据生成数
    :::
    ::: para
    分配 GFS2
    元数据不需要读取。多个日志中的元数据块副本由从锁定释放前的日志中调用的块进行管理。
    :::
-   ::: para
    GFS2
    的日志管理程序更为简单，它对未链接的内节点或者配额修改一无所知。
    :::
-   ::: para
    `gfs2_grow`{.command} 和 `gfs2_jadd`{.command}
    命令使用锁定防止多个事件同时运行。
    :::
-   ::: para
    为类似 `creat`{.command}() 和 `mkdir`{.command}() 的调用简化 ACL
    编码。
    :::
-   ::: para
    在不重新挂载日志的情况下，恢复未链接的内节点以及配额和
    `statfs`{.command} 的更改。
    :::
:::
:::
:::
:::
[]{#ch-considerations.html}
::: chapter
::: titlepage
# [⁠]{#ch-considerations.html#ch-considerations}第 2 章 GFS2 配置及操作注意事项 {.title}
:::
[]{#ch-considerations.html#idm140546302183200
.indexterm}[]{#ch-considerations.html#idm140546320021120
.indexterm}[]{#ch-considerations.html#idm140546263916992 .indexterm}
::: para
全局文件系统
2（GFS2）文件系统允许集群中的多台计算机（"节点"）协同共享同一存储。为达到此合作目的，并在节点间保持数据一致，这些节点会为文件系统资源采用集群范围内的锁定方案。这个锁定方案使用类似
TCP/IP 的沟通方案交换锁定的信息。
:::
::: para
您可以使用本章中所论述的建议方法改进性能，其中包括对创建、使用和维护
GFS2 文件系统的建议。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
确定您的 Red Hat High Availability Add-On
部署满足您的需要并可获得支持。部署前请联络授权Red Hat 代表确认您的配置。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-considerations.html#s1-formatting-gfs2}2.1. 格式化注意事项 {.title}
:::
::: para
本小节提供如何格式化 GFS2 文件系统以达到最佳性能的建议。
:::
::: section
::: titlepage
## [⁠]{#ch-considerations.html#s2-fssize-gfs2}2.1.1. 文件系统大小：越小越好 {.title}
:::
::: para
GFS2 是基于 64 位架构，理论上可部署 8EB 的文件系统。但目前对 64
位架构硬件支持的最大 GFS2 文件系统为 100TB，对 32 位架构硬件支持的最大
GFS2 文件系统为 16TB。
:::
::: para
注：即使 GFS2 超大文件系统是可能的，但并不意味着建议您采用。一般来说
GFS2 是越小越好：十个 1TB 大小的文件系统要好过一个 10TB 大小的文件系统。
:::
::: para
保持较小的 GFS2 文件系统有以下几个原因：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    备份每个文件系统所需时间较短。
    :::
-   ::: para
    如果需要使用 `fsck.gfs2`{.command}
    命令检查该文件系统，则所需时间较少。
    :::
-   ::: para
    如果需要使用 `fsck.gfs2`{.command}
    命令检查该文件系统，则所需内存较少。
    :::
:::