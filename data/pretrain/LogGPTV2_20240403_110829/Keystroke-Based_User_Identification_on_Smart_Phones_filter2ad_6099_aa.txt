title:Keystroke-Based User Identification on Smart Phones
author:Saira Zahid and
Muhammad Shahzad and
Syed Ali Khayam and
Muddassar Farooq
Keystroke-Based User Identiﬁcation
on Smart Phones
Saira Zahid1, Muhammad Shahzad1, Syed Ali Khayam1,2,
and Muddassar Farooq1
1 Next Generation Intelligent Networks Research Center (nexGIN RC)
National University of Computer & Emerging Sciences (FAST-NUCES)
{saira.zahid,muhammad.shahzad,muddassar.farooq}@nexginrc.org
Islamabad, Pakistan
2 School of Electrical Engineering & Computer Science (SEECS)
National University of Sciences & Technology (NUST)
Islamabad, Pakistan
PI:EMAIL
Abstract. Smart phones are now being used to store users’ identities and
sensitive information/data. Therefore, it is important to authenticate le-
gitimate users of a smart phone and to block imposters. In this paper, we
demonstrate that keystroke dynamics of a smart phone user can be trans-
lated into a viable features’ set for accurate user identiﬁcation. To this
end, we collect and analyze keystroke data of 25 diverse smart phone users.
Based on this analysis, we select six distinguishing keystroke features that
can be used for user identiﬁcation. We show that these keystroke features
for diﬀerent users are diﬀused and therefore a fuzzy classiﬁer is well-suited
to cluster and classify them. We then optimize the front-end fuzzy clas-
siﬁer using Particle Swarm Optimization (PSO) and Genetic Algorithm
(GA) as back-end dynamic optimizers to adapt to variations in usage pat-
terns. Finally, we provide a novel keystroke dynamics based PIN (Personal
Identiﬁcation Number) veriﬁcation mode to ensure information security
on smart phones. The results of our experiments show that the proposed
user identiﬁcation system has an average error rate of 2% after the detec-
tion mode and the error rate of rejecting legitimate users drops to zero
in the PIN veriﬁcation mode. We also compare error rates (in terms of
detecting both legitimate users and imposters) of our proposed classiﬁer
with 5 existing state-of-the-art techniques for user identiﬁcation on desk-
top computers. Our results show that the proposed technique consistently
and considerably outperforms existing schemes.
1 Introduction
Smart phones1 are pervasively and ubiquitously integrating into our home and
work environments. In particular, due to the enhanced capabilities available on
contemporary smart phones, users – in addition to personal and professional
1 We use the terms smart phone and mobile phone interchangeably throughout this
paper because our proposed system, with the support of OS vendors, can be deployed
on both types of phones.
E. Kirda, S. Jha, and D. Balzarotti (Eds.): RAID 2009, LNCS 5758, pp. 224–243, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009
Keystroke-Based User Identiﬁcation on Smart Phones
225
contacts’ information – now store sensitive information such as emails, credit
card numbers, passwords, corporate secrets, etc. on mobile phones which make
them an attractive target for imposters [9]. Stolen mobile phones can be used for
identity theft which can then be exploited for malicious and/or unlawful activi-
ties. Various surveys conducted recently show that in case of mobile phone theft,
users (instead of being worried about the cost of the stolen phone) are becoming
more concerned with the misuse of information and services on the stolen phones
[1]. Therefore, it is important to develop intelligent user identiﬁcation schemes
for mobile phones.
Despite its need and importance, user identiﬁcation on mobile phones has
received little attention in research literature. User identiﬁcation systems for
mobile phones are usually based on secret PIN numbers [28]. These identiﬁca-
tion techniques are borrowed from desktop computers’ domain and have not
been very eﬀective on mobile phones [6],[28]. For instance, freely available tools
empower intruders, who have physical access to the Subscriber’s Identity Module
(SIM) and know the Personal Identiﬁcation Number (PIN), to reverse engineer
the International Mobile Subscriber Identity (IMSI) and the secret key of GSM
mobile phone users [19]. Similarly, token-based authentication schemes devel-
oped for desktops are not suitable for mobile phones because: (1) they cannot
be eﬃciently implemented on resource-constrained devices [9], and (2) loss of a
token in essence means loss of the device [26]. Biometric hardware for mobile
phones are now being developed to overcome the shortcomings of token-based
authentication [26]. A common drawback of these authentication paradigms is
that they perform one-time identity check at the beginning of a session that
allows imposters to access the smart phones once a session has been logged in.
In this paper, we propose a robust approach to identify a legitimate user of a
mobile phone by learning his/her “in-session” keystroke dynamics. The scheme
requires no additional hardware or software resources and is user-friendly as it
requires minimum user intervention after installation. While keystroke-based
user identiﬁcation was actively pursued in the domain of desktop computer
[27],[17],[14],[18], its suitability for mobile phones has not been explored, ex-
cept by the preliminary work reported in [7],[15]. To use keystroke information
for user identiﬁcation, we collect and analyze keystroke data of 25 diverse mo-
bile phone users including researchers, students, and professionals from varying
age groups. Based on our analysis, we select six distinguishing keystroke fea-
tures that can be used for user identiﬁcation. Two of these features – key hold
time (how long a key is pressed) and error rate (number of times backspace is
pressed) – are borrowed from the desktop domain. We also customize a set of
four features to capture the unique switching behavior across multiplexed mobile
phone keys2 using: (1) Horizontal Digraph: time to switch between horizontally
adjacent keys, (2) Vertical Digraph: time to switch between vertically adjacent
2 This study has been done only for the smart phones with numeric keypads. In these
phones, each key stands for multiple characters that can be produced by pressing
the key a predeﬁned number of times. We thus name the keys of such phones as
multiplexed keys.
226
S. Zahid et al.
keys, (3) Non-Adjacent Horizontal Digraph: time to switch between non-adjacent
horizontal keys, and (4) Non-Adjacent Vertical Digraph: time to switch between
non-adjacent vertical keys.
We reveal that, while these keystroke features diﬀer across users, leverag-
ing them for accurate user identiﬁcation on mobile phones is signiﬁcantly more
challenging than on a desktop computer because on a majority of contemporary
mobile phones: (1) diﬀerent keys are multiplexed on a small keypad, (2) the vari-
able and discontinuous keystroke usage of a mobile phone user results in a highly
diﬀused (overlapping) and time-varying feature space that makes it diﬃcult to
cluster and classify diﬀerent users, and (3) an imposter can get access to a mo-
bile phone at anytime so techniques that rely on static, application-speciﬁc or
keyword-speciﬁc authentication are not feasible. These challenges are aggravated
by the fact that most of the mobile OS vendors do not provide any mechanism
for key logging. In view of these challenges, we set two accuracy objectives for
the proposed technique: (1) correctly identify imposters and legitimate users us-
ing keystroke dynamics3, and (2) identify an imposter within a small number of
key hits to ensure timely information security. In addition to being accurate, an
eﬀective user authentication scheme for mobile phones must: (1) be able to con-
tinuously adapt to varying usage patterns of a phone user, (2) utilize a classiﬁer
that provides high classiﬁcation accuracy for a diﬀused features space, and (3)
have low-complexity so that it can be deployed on resource-constrained mobile
phones.
To meet the above requirements, we propose a keystroke-based user identiﬁ-
cation system which operates in three sequential modes.
Learning Mode. In this mode, we train a fuzzy classiﬁer which maps the dif-
fused feature space of a mobile phone user to his/her proﬁle. Moreover, it utilizes
a hybrid of bio-inspired optimizers – Particle Swarm Optimization (PSO) [16]
and Genetic Algorithm (GA) [11] – at the back-end for continuous evolution of
the fuzzy system in order to cope with the varying usage pattern of the user4.
Imposter Detection Mode. In this mode, the trained classiﬁer is used to
classify real-time keystroke measurements to classify a user as legitimate or im-
poster.
Veriﬁcation Mode. This mode is only invoked if a user is potentially identiﬁed
as an imposter in the detection mode or the user wants to transmit documents
from a mobile phone. In the veriﬁcation mode, the potential imposter is asked to
type a memorized 8-character PIN of the legitimate user. The system then uses
the keystroke dynamics model to analyze the typing behavior of the potential
imposter. This mode makes it diﬃcult for an imposter to have illegitimate access
3 Throughout the paper we deﬁne accuracy in terms of error in detecting an imposter
– False Acceptance Rate (FAR), and error in detecting a legitimate user – False
Rejection Rate (FRR).
4 PSO and GAs are well-known for providing eﬃcient and online solutions to dynamic
and time-varying optimization problems [10],[4].
Keystroke-Based User Identiﬁcation on Smart Phones
227
by hacking the PIN only; therefore, it serves as the last line of defence after an
imposter has breached all other security layers.
Performance evaluation on the collected dataset shows that the proposed hy-
brid PSO-GA based fuzzy classiﬁer, when trained using a mere 250 keystrokes,
achieves an average error rate of approximately 2% after the detection mode
and an FRR close to zero after the veriﬁcation mode. We compare the accuracy
of our system with ﬁve other state-of-the-art keystroke-based user identiﬁca-
tion techniques and show that our proposed system provides signiﬁcantly better
accuracy in detecting legitimate users and imposters.
The rest of the paper is organized as follows. Section 2 brieﬂy describes the
related work. We discuss our dataset in Section 3 and explain feature selection
along with a study of existing desktop schemes on these features in Section 4.
In Section 5, we ﬁrst investigate the feasibility of existing desktop classiﬁca-
tion schemes for mobile phones, and then we discuss the architecture of our
proposed user identiﬁcation system. In Section 6, we analyze the performance of
our proposed system for varying parameters. The limitations of the proposed sys-
tem and potential countermeasures to overcome these limitations are detailed in
Section 7. Finally, we conclude the paper with an outlook to our future research.
2 Related Work
The idea of using keystroke dynamics for user authentication is not new as
there have been a number of prior studies in this area for desktop computers.
Most of these studies have focused on static or context-independent dynamic
analysis using the inter-keystroke latency method for desktop keyboards only.
From the earliest studies in 1980 [5], the focus has been on the analysis of delay
between two consecutive keystrokes – also called digraph. Later studies [14],[20]
further enhanced the work by identifying additional statistical analysis methods
that provided more reliable results. This section brieﬂy summarizes some of the
prominent research on keystroke based user identiﬁcation.
One of the earlier works in the area of keystroke dynamics was accomplished
by Umphress and Williams [27] in 1985. They used digraphs as the underlying
keystroke biometric. However, they were only able to achieve an FAR of 6%.
In 1987, Williams and Leggett [17] further extended the work by: (1) increas-
ing the number of users in the study, (2) reducing experimental variables, and
(3) discarding inappropriate digraphs according to latency and frequency. They
managed to reduce the FAR to 5%.
Another extension of the above work was conducted in 1990 by Leggett et
al. [18]. While the results of the static procedure of entering a reference and
testing proﬁles achieved the same 5% FAR, they were the ﬁrst ones to utilize the
concept of keystroke dynamics for doing veriﬁcation in a dynamic environment.
They were able to achieve FAR of 12.8% and FRR of 11.1% using statistical
theory. In a study by Joyce and Gupta [14], the username was compared to
the particular proﬁle for that user. The login had four components – username,
password, ﬁrst name, and last name. Digraphs were then calculated and basic
228
S. Zahid et al.
statistical method of means, variances, and standard deviations were used to
determine a match. Using this method, the FAR was just 0.25% but the FRR
was 16.67%. Bleha et al. [3], in 1990, used a diﬀerent statistical method: the
Bayes classiﬁcation algorithm. The veriﬁcation system gave results of 8.1% for
FRR and 2.8% for the FAR. Regarding features’ set, no signiﬁcant additions
occurred until 1997 when Obaidat and Sadoun [21] introduced key hold times
as another feature of interest. Currently, the most common and widely-known
application that uses keystroke dynamics technology is BioPassword [12]. To the
best of our knowledge, BioPassword is the only product available in the market
that has relatively wide usage.
These studies, however, have focused their research only on desktop com-
puters. Except for [7],[15], no work has been done on user identiﬁcation using
keystroke dynamics on mobile phones. Clarke et al. [7] have used neural networks
to classify a user by using key hold time and inter-key latency. They performed
three sets of experiments on mobile phone emulators: (1) on PIN veriﬁcation,
(2) on speciﬁc text, and (3) on phone number entry. They achieved FARs of 3%,
15% and 18% respectively for these three experiments, however FRRs were 40%,
28% and 29%, respectively.
3 Data Acquisition
As a ﬁrst step towards developing a robust mobile phone user identiﬁcation sys-
tem, we developed an application to log mobile keystroke data. We decided to
develop the application for Symbian OS 3rd Edition because: (1) it had a rela-
tively large customer base in our social network, and (2) it provides developers
with Application Programming Interfaces (APIs) to capture key events. The
application runs in the background so that a user can continue using his/her
mobile phone uninterruptedly. All keys pressed by a user are logged along with
the press/release times of the keys5. In addition to the regular keys, we also
log left soft key, right soft key, left arrow key, right arrow key, up arrow key,
down arrow key, joystick key, menu key, call dial key, call end key, back space
key, camera key, volume up key, volume down key, * key, and # key. A text ﬁle
containing all logged key events is stored in the phone memory and is periodi-
cally uploaded to our development server. The application was digitally signed
by Symbian Signed (http://www.symbiansigned.com) before deployment.
Despite security and privacy concerns shown by most volunteers, we were able
to convince 25 mobile phone users to volunteer for this study. The subjects of our
study have diﬀerent socioeconomic backgrounds (see Table 1) that provides good
diversity in our dataset; we have teenagers, corporate executives, researchers,
students, software developers and even a senior citizen in our list of volunteers.
Another distinguishing feature of this dataset is that it is not a one prototype
model dataset and has been collected from a diverse set of Nokia mobile phones.
We have N-series, E-series and 6xxx series mobile phones all of which have
multiplexed keypad. This diversity in phone sets is important to ensure that
5 We used Active Objects to realize this functionality [2].
Keystroke-Based User Identiﬁcation on Smart Phones
229
Table 1. Feature table of 25 mobile phone users of this study (cv is coeﬃcient of
variation)
Key Hold Horizontal Vertical Vertical Horizontal
Non-
Non-
adjacent
adjacent
Total Total Time
key hit key
proﬁles hits (ms)
µ
cv
Digraph Digraph Digraph Digraph
µ
µ
µ
cv
cv
µ
cv
cv Error
Nokia
Users model
u1
u2
u3
u4
u5
u6
u7
u8
u9
u10
u11
u12
u13
u14
u15
u16
u17
u18
u19
u20
u21
u22
u23
u24
u25
N73
N95
N81
6650
6120
N79
N73
6124
N95
N82
E51
6120
N81
N77
E65
N76
N81
6121
6120
N73
N81
N73
N95
N81
6120
Social
status
manager
researcher
student
engineer
teenager
businessman
student
manager
engineer
advertiser
student
researcher
student
student
engineer
senior citizen
manager
engineer
student
researcher
researcher
director
student
researcher
teenager
(sec)
(sec)
(sec)
(sec)
17
48
12
21
34
20
30
33
37
53
27
37
41
53
55
19
12
48
17
47
20
27
41
39
33
4113 61.1 0.08 0.12 2.08 0.15 1.80 0.19 1.21 0.05 1.11
11901 83.1 0.01 0.32 0.87 0.33 0.87 0.24 1.79 0.09 1.23
2939 81.4 0.04 0.35 0.31 0.42 0.45 0.39 1.43 0.07 1.36
131 0.02 0.26 0.88 0.34 0.38 0.18 1.77 0.13 0.82
5011
8255
103 0.08 0.21 2.09 0.12 2.33 0.43 1.25 0.11 1.31
4919 25.3 0.16 0.32 1.68 0.17 3.05 0.53 0.45 0.14 1.23
7283 45.1 0.21 0.11 5.72 0.23 2.82 0.12 5.33 0.17 1.11
8209 95.9 0.03 0.12 1.50 0.11 3.09 0.53 0.43 0.09 0.79
9211 83.2 0.04 0.31 2.45 0.61 0.39 0.32 1.03 0.05 1.09
13193 76.6 0.04 0.21 0.62 0.42 0.59 0.52 1.46 0.08 1.23
6501 32.1 0.12 0.33 0.87 0.56 1.33 0.32 0.68 0.04 1.01
9028 67.3 0.03 0.18 1.66 0.82 0.42 0.54 0.62 0.11 0.92
10001 11.3 0.16 0.22 1.59 0.28 0.82 0.75 0.88 0.14 1.22
13022 35.6 0.07 0.24 1.37 0.48 1.56 0.35 1.22 0.19 0.86
13713 61.5 0.05 0.33 0.93 0.41 0.95 0.12 1.83 0.16 1.31
4744 15.9 0.13 0.71 0.33 0.86 0.75 0.43 1.55 0.13 0.87
2900 42.1 0.07 0.54 1.40 0.28 1.25 0.65 0.35 0.08 2.01
11793 57.6 0.07 0.18 1.72 0.48 1.56 0.45 1.20 0.13 1.71
4011 21.7 0.01 0.21 3.38 0.19 2.94 0.19 1.21 0.07 1.52
11529 33.4 0.15 0.15 1.53 0.32 0.81 0.43 1.23 0.15 1.08
4992 76.3 0.02 0.66 0.51 0.64 0.67 0.64 0.35 0.15 0.57
6721 23.3 0.12 0.21 1.04 0.24 3.25 0.24 2.79 0.11 1.14
10132 68.2 0.08 0.63 0.61 0.53 0.66 0.15 2.26 0.14 1.16
9531 79.7 0.05 0.44 0.72 0.31 0.74 0.32 1.71 0.09 1.11
8193 17.5 0.38 0.25 0.64 0.45 1.66 0.74 0.31 0.07 1.23
(%)
1.25
3.07
2.63
0.93
2.38
8.47
8.59
5.79
4.10
6.55
8.14
7.85
6.02
2.47
3.22
2.37
11.2
1.35
1.21