Certainly! Here is a more polished and professional version of your text:

---

I am attempting to call a Python module method to retrieve the version of a newly installed driver on a Windows computer. I have tried using `WMI_SystemDriver`, but it does not provide the version information; it only returns other fields that are not relevant to my current needs.

Is there a way to obtain the driver version in a format similar to `x.y.z.t`?

I also posted this question on a Google group, but it has not been answered yet.

**Assistant:**

While this might seem unconventional, I suggest using a PowerShell command to fetch the driver version. You can execute the following command in Python using the `subprocess` module:

```python
import subprocess

# PowerShell command to get driver version
str_command = r'powershell.exe "Get-WmiObject Win32_PnPSignedDriver | select devicename, driverversion | ConvertTo-CSV"'

# Execute the command and capture the output
result = subprocess.run(str_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True, text=True)

# Parse the CSV output
output_lines = result.stdout.splitlines()

# Skip the header line
for line in output_lines[1:]:
    device_name, driver_version = line.split(',')
    print(f"Device Name: {device_name.strip()}")
    print(f"Driver Version: {driver_version.strip()}")
```

This script will execute the PowerShell command, which retrieves the device name and driver version in CSV format. The output is then parsed, and each line is split into the device name and driver version. This approach should help you obtain the required information.

Thank you for your attention.

---

Feel free to adjust the code and text as needed for your specific use case.