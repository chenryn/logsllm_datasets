title:Automating analysis of large-scale botnet probing events
author:Zhichun Li and
Anup Goyal and
Yan Chen and
Vern Paxson
Automating Analysis of Large-Scale Botnet Probing Events
Zhichun Li, Anup Goyal and Yan Chen
Northwestern University
2145 Sheridan Road
Evanston, IL, USA
{lizc,ago210,ychen}@cs.northwestern.edu
ABSTRACT
Botnets dominate today’s attack landscape. In this work we inves-
tigate ways to analyze collections of malicious probing traf(cid:2)c in
order to understand the signi(cid:2)cance of large-scale (cid:147)botnet probes(cid:148).
In such events, an entire collection of remote hosts together probes
the address space monitored by a sensor in some sort of coordi-
nated fashion. Our goal is to develop methodologies by which sites
receiving such probes can infer(cid:151)using purely local observation(cid:151)
information about the probing activity: What scanning strategies
does the probing employ? Is this an attack that speci(cid:2)cally targets
the site, or is the site only incidentally probed as part of a larger,
indiscriminant attack?
Our analysis draws upon extensive honeynet data to explore the
prevalence of different types of scanning, including properties such
as trend, uniformity, coordination, and darknet avoidance. In ad-
dition, we design schemes to extrapolate the global properties of
scanning events (e.g., total population and target scope) as inferred
from the limited local view of a honeynet. Cross-validating with
data from DShield shows that our inferences exhibit promising ac-
curacy.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network Oper-
ations(cid:151)network monitoring; C.2.0 [Computer-Communication
Networks]: General(cid:151)Security and protection
General Terms
Algorithms, Measurement, Security
Keywords
Botnet, Global property extrapolation, Honeynet, Scan strategy in-
ference, Situational awareness, Statistical inference
1.
When a site receives probes from the Internet(cid:151)whether basic
attempts to connect to its services, or apparent attacks directed
at those services, or simply peculiar spikes in seemingly benign
activity(cid:151)often what the site’s security staff most wants to know is
INTRODUCTION
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for pro(cid:2)t or commercial advantage and that copies
bear this notice and the full citation on the (cid:2)rst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speci(cid:2)c
permission and/or a fee.
ASIACCS’09 March 10-12, 2009, Sydney, NSW, Australia
Copyright 2009 ACM 978-1-60558-394-5/09/03 ...$5.00.
Vern Paxson
UC Berkeley & ICSI
Berkeley, CA, USA
1947 Center St., Suite 600
PI:EMAIL
not (cid:147)are we being attacked?(cid:148) (since the answer to that is almost
always (cid:147)yes, all the time(cid:148)) but rather (cid:147)what is the signi(cid:2)cance of
this activity?(cid:148) Is the site being deliberately targeted? Or is the site
simply receiving one small part of much broader probing activity?
For example, suppose a site with a /16 network receives mali-
cious probes from a botnet. If the site can determine that the botnet
probed only their /16, then they can conclude that the attacker may
well have a special interest in their enterprise. On the other hand,
if the botnet probed a much larger range, e.g., a /8, then very likely
the attacker is not speci(cid:2)cally targeting the enterprise.
The answers to these questions greatly in(cid:3)uence the resources
the site will choose to employ in responding to the activity. Obvi-
ously, the site will often care more about the probing if the attacker
has speci(cid:2)cally targeted the site, since such interest may re(cid:3)ect a
worrisome level of determination on the part of the attacker. In-
deed, such targeted attacks have recently grown in prominence.
Yet given the incessant level of probing all Internet addresses re-
ceive [21], how can a site assess the risk a given event re(cid:3)ects?
In this work we seek to contribute to the types of analysis that
sites can apply to gauge such risks. We orient much of our method-
ology with an assumption that most probing events re(cid:3)ect activity
from the coordinated botnets that dominate today’s Internet attack
landscape. Our approach is limited to analyzing fairly large-scale
activity that involves multiple local addresses. As such, our tech-
niques are suitable for use by sites that deploy darknets (unused
subnets), honeynets (subnets for which some addresses are popu-
lated by some form of honeypot responder), or in general any mon-
itored networks with unexpected access, for which we can detect
botnet probing events. The main contribution of this paper is the de-
velopment of a set of techniques for analyzing botnet events, most
of which do not require the use of responders. For simplicity, we
will refer to the collection of sensors as the site’s Sensors.
In contrast to previous work on botnets, which has focused on
either host-level observations of single instances of a botnet activ-
ity, studies of particular captured botnet binaries [11], or network-
level analysis of command-and-control (C&C) activity [24], our
techniques aim to characterize facets of large-scale botnet probing
events regardless of the nature of the botnet. Our analysis does not
require assumptions about the internal organization and communi-
cation mechanisms employed by the botnets. We focus on charac-
terization of botnet properties based on inferences from their prob-
ing behavior. In addition, our approach has the signi(cid:2)cant bene(cid:2)t
of requiring only local information, rather than global information
as required by collaborative efforts such as DShield [27]. We give
more detailed comparisons in Section 6.
We frame the contributions of our work as follows. First, we
develop a set of statistical approaches to assess the attributes of
large-scale probing events seen in Sensors, including checking for
trends, uniformity, coordination, and one speci(cid:2)c form of (cid:147)hit-list(cid:148)
(Section 3). The type of hit-list we focus on is liveness-aware scan-
" (cid:5)(cid:6)(cid:14)(cid:23) (cid:6)(cid:14)(cid:12)(cid:3)%
" (cid:5)(cid:6)(cid:14)(cid:23) (cid:7)(cid:11)(cid:10)(cid:16) (cid:3)(cid:20)
(cid:27) (cid:10)(cid:11)(cid:7)(cid:7)(cid:2)(cid:4)
(cid:27) (cid:10)(cid:11)(cid:7)(cid:7)(cid:2)(cid:4)(cid:20)
(cid:18) (cid:11)(cid:3)(cid:3)(cid:2)(cid:7)(cid:2)(cid:4)(cid:11)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:29) (cid:14)(cid:6)(cid:12)(cid:20)
(cid:25) (cid:12)(cid:10)(cid:11)(cid:4)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:2)(cid:8)(cid:9)(cid:10)(cid:11)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:2)(cid:8)(cid:9)(cid:10)(cid:11)(cid:12)(cid:2)(cid:5)(cid:6)(cid:20)
(cid:26) (cid:14)(cid:22) (cid:11)(cid:10)(cid:11)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:15) (cid:5)(cid:10)(cid:16)
(cid:26) (cid:14)(cid:22) (cid:11)(cid:10)(cid:11)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:15) (cid:5)(cid:10)(cid:16)
(cid:1)(cid:5)  (cid:14)(cid:18)
(cid:4)(cid:31) (cid:14)(cid:4)!
(cid:2)(cid:6)(cid:8)
(cid:1)(cid:5)(cid:6)(cid:5)(cid:12)(cid:5)(cid:6)(cid:2)(cid:4)
(cid:12)(cid:10)(cid:14)(cid:6) 
(cid:20) (cid:4)(cid:31) (cid:14)(cid:4)!
(cid:2)(cid:6)(cid:8)
(cid:18) (cid:2)(cid:3)(cid:12)
(cid:2)(cid:12)(cid:20)
(cid:2)(cid:6)(cid:8)
(cid:4)(cid:31) (cid:14)(cid:4)!
(cid:2)(cid:12)(cid:23)
# (cid:6)(cid:2)(cid:7)(cid:5)(cid:10)(cid:16)
(cid:2)(cid:6)(cid:8)
(cid:4)(cid:31) (cid:14)(cid:4)!
$ (cid:6)  (cid:14)(cid:22) (cid:14)(cid:6)  (cid:14)(cid:6)(cid:4)(cid:23)
(cid:2)(cid:6)(cid:8)
(cid:4)(cid:31) (cid:14)(cid:4)!
(cid:13)
(cid:5)
(cid:12)
(cid:6)
(cid:14)
(cid:12)
(cid:13)(cid:5)(cid:12)(cid:6)(cid:14)(cid:12)(cid:20)
(cid:2)(cid:12)(cid:31)
(cid:9)(cid:6)(cid:2)(cid:7)(cid:5)(cid:10)(cid:16)
(cid:3)(cid:4)(cid:11)(cid:6)(cid:20)
(cid:16) (cid:5)  (cid:14)(cid:18)
(cid:18) (cid:5)(cid:19) (cid:11)(cid:18)
(cid:10)(cid:5)(cid:22) (cid:14)(cid:10)(cid:12)(cid:23)
(cid:25) (cid:12)(cid:10)(cid:11)(cid:22) (cid:5)(cid:18) (cid:11)(cid:12)(cid:2)(cid:5)(cid:6)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:3)(cid:6)(cid:7)(cid:5)(cid:3)(cid:5)(cid:8)(cid:3)(cid:9)(cid:2)(cid:4)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:3)(cid:6)(cid:10) (cid:4)(cid:11) (cid:5)(cid:12) (cid:5)(cid:4)(cid:8)(cid:5)
Figure 1: System architecture.
ning, in which the attackers try to avoid darknets. For trend and uni-
formity checking, the statistical literature provides apt techniques,
but assessing coordination and use of hit-lists requires developing
new techniques. We con(cid:2)rmed the consistency of the statistical
techniques for inferring event properties with manual inspection or
visualization.
Applying such statistical testing on massive honeynet traf(cid:2)c re-
veals some interesting and sophisticated botnet scan behaviors such
as coordinated scans. We then used our suite of tests to frame the
scanning strategies employed during different probe events, from
which we can further extrapolate the global properties for particu-
lar strategies.
Second, we devise two algorithms to extrapolate the global prop-
erties of a scanning event based on a sensor’s limited local view.
These algorithms are based on different underlying assumptions
and exhibit differing accuracies, but both enable us to infer the
global scanning scope of a probing event, as well as the total num-
ber of bots including those unseen by the Sensors, and the average
scanning speed per bot (Section 4). The global scanning scope en-
ables the site’s operators to assess whether their network is a spe-
ci(cid:2)c target of botnet activity, or if instead the botnet’s scanning
targets a large network scope that simply happens to include the
site. The estimated total botnet size can help us track trends in how
botnets are used, with implications for their C&C capabilities.
The algorithms are rooted in the observation (con(cid:2)rmed by our
checking of scanning properties) that the most frequent scanning
patterns re(cid:3)ect uniform random scanning or uniform hit-list scan-
ning.
Indeed, nearly all of the probing events we observed fol-
low one of these two scan patterns.1 In Section 5, we evaluate our
techniques using 24-month trace (293 GB total) of Honeynet traf(cid:2)c
collected at a large research institution. Of the events classi(cid:2)ed as
likely botnet activity (i.e., not miscon(cid:2)gurations or worms), most
re(cid:3)ected either uniform-random or uniform-hitlist scanning. An-
alyzing the data, we (cid:2)nd that 66.5% of botnet events exhibit uni-
form random scanning and 16.3% of botnet events re(cid:3)ect hit-list
scanning, 85% of which were also uniform.
Also, we (cid:2)nd most of these probes include attacks. As shown in
Figure 2, our honeynet measurements (cid:2)nd that about 84% of scan
events carry malicious payloads targeting vulnerabilities of differ-
ent protocols, such as SMB/RPC, MSSQL, VNC, etc.2 We note
that such botnet scans are one key technique employed for botnet
recruitment [24]. Through event correlation study, we also (cid:2)nd
some interesting behaviors of how botmasters control their bots.
1Of course there is the usual (cid:147)arms race(cid:148) here between attackers
and defenders. If our techniques become widely used, then attack-
ers may modify their probing traf(cid:2)c to skew the defenders’ analy-
sis. But until the botmasters take steps to do so, these techniques
have value. We adopt the view common in network security re-
search that there is signi(cid:2)cant utility in (cid:147)raising the bar(cid:148) for attack-
ers even if a technique is ultimately evadable.
2(cid:147)Not Vul.(cid:148) consists of instances where the honeynet received little
or no payload, or purely service-testing probes.
35%
30%
25%
20%
15%
10%
5%
0%
HTTP Vul.
MSSQL Vul.
Symantec Vul.
SMB/RPC Vul.
VNC Vul.
Other Vul.
Not Vul.
Figure 2: The distribution of the malicious payload
discovered in the scan events.
0
0
0
3
0
0
5
2
s
t
n
u
o
C
e
c
r
u
o
S
q
n
U
i
0
0
0
2
0
0
5
1
0
0
0
1
0
0
5
0
0
200
400
Time (Six Hour Interval)
Year 2006
Temporal distribution of
Figure 3:
VNC(5900).
600
800
1000
1200
1400
source count
for
To validate our estimates of the global properties, we compare
our results with those from DShield [27], the Internet’s largest
global alert repository. We (cid:2)nd that in 75% of cases, our extrap-
olated scope is within a factor of 1.35 of the scan scope observed in
DShield data. In all the cases it is within a factor of 1.5. The results
indicate that our approaches hold promise for suf(cid:2)cient accuracy
to enable sites to make reliable inferences, with the caveat that we
were unable to (cid:2)nd any instances of events in our current dataset
that re(cid:3)ected a global scope much different from /8.
2. SYSTEM FRAMEWORK
The architecture of our design is shown in Figure 1. The system
has two subsystems: botnet detection and botnet inference. In this
paper we focus on the latter (righthand half of Figure 1). All of
the steps in our analysis system are automated, most of them fully
so. We mainly use the Honeynet sensor to drive the rest of the dis-
cussion, although we can generally apply our analysis techniques
(the botnet inference subsystem) to botnet probe events detected
by other types of sensors. The system classi(cid:2)es traf(cid:2)c seen on the
sensors by different protocols or by session semantics. We de(cid:2)ne
a session as a set of connections between a pair of hosts with a
speci(cid:2)c purpose, perhaps involving multiple application protocols.
The system extracts events based on the number of unique sources
arriving in a window of time (cf. the spikes in Figure 3), classifying
the activity into miscon(cid:2)gurations, worms, and botnet-like probing.
2.1 Honeynet and Data Collection
Our detection sensor consists of ten contiguous /24 subnets
within one of a large research institution’s /16 networks. We de-
ployed Honeyd responders [23] on (cid:2)ve of the subnets and operated
the other (cid:2)ve completely (cid:147)dark(cid:148). (We use this latter for hit-list de-
tection.) The Honeyd con(cid:2)guration is similar to that used by Pang
et al.in [21]: we simulate the HTTP, NetBIOS, SMB, WINRPC,
MSSQL, MYSQL, SMTP, Telnet, DameWare protocols, with echo
servers for all other port numbers. We evaluate our analysis tech-
niques using 293 GB of trace data collected over two years (2006
(cid:17)
(cid:20)
(cid:21)
(cid:20)
(cid:24)
(cid:28)
(cid:24)
(cid:24)
(cid:20)
(cid:30)
(cid:20)
(cid:20)
"
and 2007).
2.2 Botnet Detection Subsystem
In this paper we mainly focus on botnet inference. For the com-
pleteness we brie(cid:3)y introduce how to detect botnet events here. The
details is available in our technique report [18].
Traf(cid:2)c Classi(cid:2)cation: Attack traf(cid:2)c can have complex session
structure involving multiple application protocols. For example,
an attacker can send an exploit to TCP port 139 which, if success-
ful, results in opening a shell and issuing an HTTP download com-
mand. Often the application protocol contacted (cid:2)rst is the protocol
being exploited (an exception is an initial connection to a portmap-
per service), so we label sessions with the service associated with
the (cid:2)rst destination port appearing in them. Doing so also pro-
vides consistent labeling for connection attempts seen in darknets
or other types of sensors. We aggregate connections into sessions
using an approach similar to the (cid:2)rst step algorithm by Kannan et
al [14].
For application protocols not commonly used, the background
radiation noise (including individual port scans) is typically low,
and thus we use port numbers to separate event traf(cid:2)c. However,
noise is usually strong for popular protocols, requiring further dif-