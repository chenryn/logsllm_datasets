# Installing PostgreSQL on Red Hat Enterprise Linux / Fedora Core

**Last Updated: September 3, 2007**

**Authors:**
- Devrim GÜNDÜZ (PGDG RPM Maintainer) <PI:EMAIL>
- Lamar Owen (PGDG RPM Maintainer) <PI:EMAIL>

**Note:** Contributions and feedback are welcome. Please feel free to contact us with your comments.

## Overview
This guide provides detailed instructions for installing the PostgreSQL Database Server on Red Hat Enterprise Linux and Fedora Core. The information is based on PostgreSQL 8.2 and later versions, so some details may vary for earlier versions.

## General Information
The PostgreSQL Global Development Group (PGDG) builds RPMs for various Linux distributions. At the time of writing, RPMs and SRPMs are available for the following platforms:
- Red Hat Enterprise Linux 3, 4, and 5
- Fedora Core 6, 7, and 8

For more information, visit the PGDG project page for building RPMs:
- [PgFoundry Project Page](http://pgfoundry.org/projects/pgsqlrpms)

Additionally, there are mailing lists for discussions, including -hackers, -general, and -announce. These discussions are open to everyone.

## Obtaining the RPMs
RPMs can be downloaded from the PostgreSQL FTP site and its mirrors. For convenience, you can use the web interface at:
- [PostgreSQL FTP Site](http://www.postgresql.org/ftp)

### Available RPMs
PGDG provides the following RPMs:

- **postgresql-libs**: Essential shared libraries for any PostgreSQL client or interface.
- **postgresql**: Required for manipulating a PostgreSQL database on a local or remote server.
- **postgresql-contrib**: Contributed packages included in the PostgreSQL distribution.
- **postgresql-devel**: Header files and libraries needed for developing C or C++ applications that interact with a PostgreSQL server.
- **postgresql-docs**: Documentation in SGML and PDF formats.
- **postgresql-server**: Programs needed to create and run a PostgreSQL server.
- **postgresql-tcl**: Pgtcl client library and documentation.
- **postgresql-jdbc**: .jar files for Java programs to access a PostgreSQL database.
- **postgresql-plperl**: PL/Perl procedural language for the backend.
- **postgresql-pltcl**: PL/Tcl procedural language for the backend.
- **postgresql-plpython**: PL/Python procedural language for the backend.
- **postgresql-python**: Python module for accessing a PostgreSQL database.
- **postgresql-test**: Regression tests and benchmarks for the PostgreSQL database management system.

### Recommended Packages
- **For running a PostgreSQL server**: Install `postgresql-libs`, `postgresql`, and `postgresql-server`.
- **For running a client**: Install `postgresql-libs` and `postgresql`.

### Package Naming and Versioning
Package names include version and architecture information. Official PGDG RPMs have 'PGDG' after the release number. Use distribution-specific RPMs if available, as they are tailored for specific environments. If you need the latest PostgreSQL core, use the PGDG generic set, but be aware that it is not optimized for specific distributions.

### Upgrade Process
To upgrade PostgreSQL, follow these steps:
1. Dump the database using `pg_dumpall`.
2. Take a filesystem-level backup.
3. Stop the database server.
4. Remove all PostgreSQL RPMs.
5. Remove the database cluster.
6. Install the new RPMs.
7. Start the database server.
8. Reload the data.

## File Locations
The PostgreSQL PGDG RPMs install files in locations that comply with the Linux FHS. Here are the default locations for Red Hat / Fedora Core:

- **Executables**: `/usr/bin`
- **Libraries**: `/usr/lib`
- **Documentation**: `/usr/share/doc/postgresql-x.y.z`
- **Contrib**: `/usr/share/pgsql/contrib`
- **Data**: `/var/lib/pgsql/data`
- **Backup Area**: `/var/lib/pgsql/backup`
- **Templates**: `/usr/share/pgsql`
- **Procedural Languages**: `/usr/lib/pgsql`
- **Development Headers**: `/usr/include/pgsql`
- **Other Shared Data**: `/usr/share/pgsql`
- **Regression Tests**: `/usr/lib/pgsql/test/regress` (in the `-test` package)
- **Documentation (SGML)**: `/usr/share/doc/postgresql-docs-x.y.z`

Use `rpm -ql` to confirm the exact locations.

## Installation and Upgrading
### Installing
To install the RPMs, use:
```sh
rpm -ivh package_name.version.arch.rpm
```

### Upgrading
For minor releases, use:
```sh
rpm -Uvh package_name.version.arch.rpm
```

For major upgrades, follow the steps outlined in the "How do I perform a major upgrade?" section.

### Removing
To remove PostgreSQL RPMs, use:
```sh
rpm -e package_name
```

### Starting and Stopping
To start the PostgreSQL service:
```sh
service postgresql start
```

To stop the service:
```sh
service postgresql stop
```

### Automatic Startup
To enable automatic startup:
```sh
chkconfig postgresql on
```

## Rebuilding from Source RPM
If your distribution is not supported by the binary RPMs, you can rebuild from the source RPM. Download the `.src.rpm` and install it with `rpm -i`. Then, navigate to the build directory (e.g., `/usr/src/redhat`) and rebuild the RPMs with the necessary parameters.

## Contrib Files
The `postgresql-contrib` package includes additional modules and their documentation. Most modules are located in `/usr/lib/pgsql` and binaries in `/usr/bin`.

## More Information
For more details, visit:
- [PostgreSQL Website](http://www.postgresql.org)

Please help improve this packaging by reporting issues or suggesting improvements. Contact us at:
- [PGDG Mailing List](mailto:pgsqlrpms-hackers@PgFoundry.org)