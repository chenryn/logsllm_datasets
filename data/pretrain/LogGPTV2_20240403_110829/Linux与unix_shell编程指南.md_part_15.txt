### 第二部分 文本过滤

#### 10.4.3 打印模式
假设需要匹配单词 "N e a v e" 并打印包含该单词的行。可以使用如下格式：`/pattern/`，例如 `/N e a v e/`。

#### 10.4.4 使用模式和行号进行查询
当在文件中查找某个特定单词时，`sed` 可能会返回多个包含该单词的行。为了更精确地定位，可以通过结合行号与模式来缩小搜索范围。比如，在 `quote.txt` 文件的最后一行修改单词 "t h e"，首先通过 `sed` 查询 "t h e"，结果可能包含多行。要仅在第四行进行此操作，可以使用混合格式 `line_number, /pattern/`，即 `4, /t h e/`。

#### 10.4.5 匹配元字符
若要匹配元字符 `$`，需先用反斜杠 `\` 转义其特殊含义。相应的模式为：`/\$/p`。

#### 10.4.6 显示整个文件
若要打印整个文件内容，只需设置从第一行到最后一行的范围 `1,$`，其中 `$` 表示文件的最后一行。

#### 10.4.7 任意字符
匹配以任意字母开头，后面跟随零个或多个任意字母，并以 "ing" 结尾的单词，可采用模式 `/.*ing/`。

#### 10.4.8 首行
打印文件的第一行，可以直接指定行号 `1`。

#### 10.4.9 最后一行
要打印文件的最后一行，使用元字符 `$`。

#### 10.4.10 打印行号
如果希望同时打印出与模式匹配的行及其行号，可以使用 `-e` 选项加上等号 `=`。完整的命令格式是 `sed -n -e '/pattern/p' -e '/pattern/='`。

#### 10.4.11 附加文本
要在特定位置后追加文本，使用符号 `a\`。注意，如果不指明具体位置，默认会在每行之后添加。追加文本的基本格式为：
```
address
a\
text_to_append
```

#### 10.4.12 创建 sed 脚本文件
创建一个名为 `append.sed` 的脚本文件，内容如下：
```bash
#!/bin/sed -f
/company/
a\
new text to be appended
```
确保给它执行权限：`chmod +x append.sed`。运行时若遇到“file not found”错误，请尝试在脚本前加上 `./`。

#### 10.4.13 插入文本
插入命令类似于附加命令，但区别在于它是在指定位置之前插入新文本。基本语法为：
```
address
i\
text_to_insert
```

#### 10.4.14 修改文本
修改命令用于替换匹配模式空间中的指定行。通用格式如下：
```
address
c\
new_text
```
例如，将某文件中的第一行由 `"The honeysuckle band played all night long for only $90"` 替换成 `"The office Di bble band played well"`，可以编写如下脚本：
```bash
/Honeysuckle/
c\
The office Di bble band played well
```

#### 10.4.15 删除文本
删除命令允许移除指定范围内的行或符合特定模式的行。基本语法为 `[address]d` 或 `[address_start,address_end]d`。

#### 10.4.16 替换文本
替换命令允许用新的字符串替换旧的字符串。基础格式为 `[address]s/old/new/[flags]`。常用的标志包括 `g`（全局替换）、`p`（打印替换后的行）等。

#### 10.5 使用替换修改字符串
利用 `&` 符号可以在替换过程中引用原始匹配项。如 `s/nurse/"Hello "&/p` 将把所有出现的 "nurse" 替换成 "Hello nurse"。

#### 10.6 将 sed 结果写入文件
输出重定向功能使得可以将处理结果保存到另一个文件中。基本用法为 `[address]w filename`。

#### 10.7 从文件中读取文本
`sed` 支持从其他文件读取数据并将其插入当前文档中。相关命令格式为 `address r filename`。

#### 10.8 匹配后退出
当首次匹配成功后立即停止处理剩余内容，可以使用退出命令 `q`。例如，`/pattern/q`。

#### 10.9 显示文件中的控制字符
对于识别非打印字符非常有用的功能是 `l` 命令，它能够列出所有可见及不可见字符。完整格式为 `[address]l`。

#### 10.10 使用系统 sed
最后，我们来看如何应用上述知识解决实际问题，比如去除跨平台传输文件中的控制字符等。