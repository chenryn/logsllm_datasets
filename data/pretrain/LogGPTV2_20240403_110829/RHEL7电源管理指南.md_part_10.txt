```
::: para
停用系统中的所有 Wi-Fi 设备。要停用所有已启用 RFKill 的设备，请运行：
:::
``` screen
rfkill block all
```
::: para
要重新使用设备，请运行 `rfkill unblock`{.command}，而不是
`rfkill block`{.command}。要获得 [**rfkill**]{.application}
可停用的完整设备类别列表，请运行 `rfkill help`{.command}。
:::
:::
:::
[]{#Use_Cases.html}
::: chapter
::: titlepage
# [⁠]{#Use_Cases.html#Use_Cases}第 4 章 使用案例 {.title}
:::
::: para
本章描述了两类使用案例演示本指南中描述的分析和配置方法。第一个示例说的是典型服务器，第二个是典型笔记本电脑。
:::
::: section
::: titlepage
# [⁠]{#Use_Cases.html#Example_Server}4.1. 示例 --- 服务器 {.title}
:::
::: para
现在典型的标准服务器基本都包含 Red Hat Enterprise Linux 7
中支持的所有所需硬件功能。您的首要考虑是该服务器主要使用的负载类型。根据这个信息您可以决定要优化哪些组件节能。
:::
::: para
不论服务器类型如何，通常都不需要图像性能。因此可打开 GPU 节能。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
网页服务器
:::
网页服务器需要网络和磁盘 I/O。根据外部连接速度，100 Mbit/s
应该足够了。如果该机器大多数提供的是静态页面，CPU
性能则并不重要。因此电源管理选项应包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    无 [**tuned**]{.application} 的磁盘或者网络插件。
    :::
-   ::: para
    打开 ALPM。
    :::
-   ::: para
    打开 `ondemand`{.systemitem}（按需）调节器。
    :::
-   ::: para
    网卡限制为 100 Mbit/s。
    :::
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
计算服务器
:::
计算服务器主要是 CPU。电源管理选择可能包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    根据任务以及出现数据存储的位置，激活 [**tuned**]{.application}
    的磁盘或者网络插件；或者在批处理系统中完全激活
    [**tuned**]{.application}。
    :::
-   ::: para
    根据应用，可能是 `performance`{.systemitem}（性能）调节器。
    :::
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
邮件服务器
:::
邮件服务器主要需要磁盘 I/O 和 CPU。电源管理选择应包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    打开 `ondemand`{.systemitem} 调节器，因为 CPU
    最后的几个百分比并不重要。
    :::
-   ::: para
    无 [**tuned**]{.application} 的磁盘或者网络插件。
    :::
-   ::: para
    不应该限制网络速度，因为邮件通常是内部的，并可因此从 1 Gbit/s 或者
    10 Gbit/s 连接中获益。
    :::
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
文件服务器
:::
文件服务器的需求与邮件服务器类似，但根据所用协议，可能需要更多的 CPU
性能。通常，基于 Samba 的服务器需要的 CPU 比 NFS 多，而 NFS 又比 iSCSI
需要更多的 CPU。即使如此，您应可以使用 `ondemand`{.systemitem} 调节器。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
目录服务器
:::
目录服务器通常对磁盘 I/O 的要求较低，特别是在有足够 RAM
的情况下。虽然网络 I/O
没有那么重要，网络延迟问题却很重要。您可以考虑使用较低连接速度的延迟网络调节，但您应该为具体网络进行细心的测试。
:::
:::
::: section
::: titlepage
# [⁠]{#Use_Cases.html#Example_Laptop}4.2. 示例 --- 笔记本电脑 {.title}
:::
::: para
另一个电源管理和节能通常起作用的示例就是笔记本电脑。因为笔记本电脑一般已经被设计为比工作站或者服务器节省很多电力。当使用电池模式时，节能可让您的电池使用时间多几分钟。虽然这部分着重阐述笔记本电脑的电池模式，但您仍然可在使用交流电供电时也使用全部或者部分微调。
:::
::: para
在笔记本电脑中单一组件中的节能通常要比在工作站中更明显。例如：1 Gbit/s
网络接口以 100 Mbits/s 运行时可节电大约 3-4 瓦。对于总耗电 400
瓦的典型服务器来说，这个节能大概是在 1 %。在总耗电 40
瓦的典型笔记本电脑中，这一个组件的节能就是总耗电量的 10 %。
:::
::: para
典型笔记本电脑中的具体节能优化包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    将系统 BIOS
    配置为禁用所有您不使用的硬件。例如：并口或者串口、读卡器、摄像头、WiFi
    以及蓝牙，这里只给出一些可能的硬件。
    :::
-   ::: para
    在较暗的环境中，您不需要使用最大亮度就可舒服地阅读屏幕中的内容，此时可调暗显示屏。请在
    GNOME 桌面中使用[**“系统”**]{.guimenu}+[**“首选项”**]{.guimenu}
    → [**“电源管理”**]{.guimenuitem}，在 KDE 桌面中使用 [**“Kickoff
    Application
    Launcher”**]{.guimenu}+[**“计算机”**]{.guimenu}+[**“系统设置”**]{.guimenu}+[**“高级”**]{.guimenu}
    → [**“电源管理”**]{.guimenuitem}，或者在命令行中使用
    [**gnome-power-manager**]{.application} 或者
    [**xbacklight**]{.application}，或者您笔记本电脑中的功能键。
    :::
:::
::: para
作为补充或者替代，您还可以对不同的系统设定进行许多小的调整：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    请使用 `ondemand`{.systemitem} 调控器（Red Hat Enterprise Linux 7
    中默认启用）
    :::
-   ::: para
    启用 AC97 音频节能（Red Hat Enterprise Linux 7 中默认启用）：
    :::
    ``` screen
    echo Y > /sys/module/snd_ac97_codec/parameters/power_save
    ```
-   ::: para
    启用 USB 自动挂起：
    :::
    ``` screen
    for i in /sys/bus/usb/devices/*/power/autosuspend; do echo 1 > $i; done
    ```
    ::: para
    请注意：USB 自动挂起并不适用于所有 USB 设备。
    :::
-   ::: para
    使用 relatime 装载文件系统（Red Hat Enterprise Linux 7
    中默认启用）：
    :::
    ``` screen
    mount -o remount,relatime mountpoint
    ```
-   ::: para
    将屏幕亮度降低至 `50`{.literal} 或更小，例如：
    :::
    ``` screen
    xbacklight -set 50
    ```
-   ::: para
    为屏幕闲置激活 DPMS：
    :::
    ``` screen
    xset +dpms; xset dpms 0 0 300
    ```
-   ::: para
    取消激活 Wi-Fi：
    :::
    ``` screen
    echo 1 > /sys/bus/pci/devices/*/rf_kill
    ```
:::
:::
:::
[]{#Developer_Tips.html}
::: appendix
::: titlepage
# [⁠]{#Developer_Tips.html#Developer_Tips}附录 A. 开发者小贴示 {.title}
:::
::: para
每本优秀的编程课本都包含内存分配以及具体功能性能的问题。当您开发自己的软件时，请注意可能在运行该软件的系统中增加电源消耗的问题。虽然这些考虑不会影响每一行代码，但您可以优化那些经常成为性能瓶颈部分的代码。
:::
::: para
经常会出问题的技术包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    使用线程。
    :::
-   ::: para
    不必要的唤醒 CPU
    或者未有效使用唤醒。如果您必须执行唤醒，尽快一次做完所有的事（迅速返回闲置状态）。
    :::
-   ::: para
    不必要的使用 `[f]sync()`{.function}。
    :::
-   ::: para
    不必要的活跃调用或者使用简短常规超时（使用响应事件）。
    :::
-   ::: para
    未有效使用唤醒。
    :::
-   ::: para
    低效磁盘访问。使用大量缓冲来避免频繁的磁盘访问。一次写入大块信息。
    :::
-   ::: para
    低效使用计时器。可能时使用跨应用程序（甚至跨系统）的组群计时器。
    :::
-   ::: para
    过量的 I/O、电源消耗或者内存使用（包括内存泄露）。
    :::
-   ::: para
    执行不必要的计算。
    :::
:::
::: para
下面的部分将对这些方面进行更详细地阐述。
:::
::: section
::: titlepage
# [⁠]{#Developer_Tips.html#Developer_Tips-Threads}A.1. 使用线程 {.title}
:::
::: para
大家普遍认为使用线程能够更好且更迅速地执行应用，但情况并不总是如此。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
Python
:::
Python 使用全局锁定解码器
[⁠]{#Developer_Tips.html#idm139882404799216}[^\[1\]^](#Developer_Tips.html#ftn.idm139882404799216){.footnote
xmlns:d="http://docbook.org/ns/docbook"}，因此使用线程只能在有大量 I/O
操作时受益。[**Unladen-swallow**]{.application}
[⁠]{#Developer_Tips.html#idm139882406493648}[^\[2\]^](#Developer_Tips.html#ftn.idm139882406493648){.footnote
xmlns:d="http://docbook.org/ns/docbook"} 是一个 Python
快速部署，您可用它来优化您的代码。