Splunk Performance Observations and Recommendations
Simeon Yep  |  AVP GSA 
Brian Wooden  |  GSA Partner Integrations 
2017-09-27  |  Washington, DC
Forward-Looking StatementsDuring the course of this presentation, we may make forward-looking statements regarding future events or the expected performance of the company. We caution you that such statements reflect our current expectations and estimates based on factors currently known to us and that actual events or results could differ materially. For important factors that may cause actual results to differ from those contained in our forward-looking statements, please review our filings with the SEC.The forward-looking statements made in this presentation are being made as of the time and date of its live presentation. If reviewed after its live presentation, this presentation may not contain current or accurate information. We do not assume any obligation to update any forward looking statements we may make. In addition, any information about our roadmap outlines our general product direction and is subject to change at any time without notice. It is for informational purposes only and shall not be incorporated into any contract or other commitment. Splunk undertakes no obligation either to develop the features or functionality described or to include any such feature or functionality in a future release.Splunk, Splunk>, Listen to Your Data, The Engine for Machine Data, Splunk Cloud, Splunk Light and SPL are trademarks and registered trademarks of Splunk Inc. in the United States and other countries. All other brand names, product names, or trademarks belong to their respective owners. © 2017 Splunk Inc. All rights reserved.
Agenda
▶ Performance & Bottlenecks
	• The BBQ Analogy
▶ Indexing• The BBQ Analogy
▶ Indexing
	• Index-time Pipelines
	• Indexing Tests
▶ Searching
	• Without and With Indexing Load
	• Search Types
	• Mixed Workload Impacts
▶ Metric Store
Testing Caveats 
Do Not Take Results Out of Context
▶ Arbitrary Datasets Used
▶ “Dedicated/Isolated” Lab Testing
My Splunk is Slow I knew I should have used SSD
▶ If we remove one bottleneck another 	will emerge▶ Let’s get cooking
© 2017 SPLUNK INC.
“Splunk, like all distributed computing 	systems, has various bottlenecks that 	manifest themselves differently 	depending on workloads being 	processed.”
-The one they call D 
Identifying performance bottlenecks
|  |  |
|---|---|
| Understand data flows  | Ingest        (Indexing)  Splunk > || • Splunk operations pipelines  	Instrument • Capture metrics for relevant operations 	Run tests | Ingest        (Indexing)  Splunk > |
	Draw conclusions
• Chart and table metrics, looks for 	emerging patterns 
Make recommendations 
7
Consume        (Search)
Indexing 
Pipelines, queues, and tests
Put that in your pipeline and process it
| Input | UTF-8 Converter | Line Breaker | Header  | Output ||---|---|---|---|---|
| Input |UTF-8 Converter |Line Breaker |Extraction |Output |
Pipeline 
Data
Splunk data flows thru several such pipelines before it gets indexed 
9
Lots of pipelines
LINE_BREAKER SHOULD_LINEMERGE TRANSFORMS-xxx
| TRUNCATE | BREAK_ONLY_BEFORE | SEDCMD |
|---|---|---|
| TRUNCATE |MUST_BREAK_AFTER |ANNOTATE_PUNCT |
TIME_*
10
Index-time processingTIME_*
10
Index-time processing
Event 	LINE_BREAKER  Breaking 	SHOULD_LINEMERGE 
MAX_TIMESTAMP_LOOKAHEAD 
Timestamp 	TIME_PREFIX  
Extraction 	TIME_FORMAT 
	ANNOTATE_PUNCT  Typing
11
Testing: dataset A
10M syslog-like events:10M syslog-like events: 
	. . . 
08-24-2016 15:55:39.534  
08-24-2016 15:55:40.921  
08-24-2016 15:55:41.210  
. . .
| Push data thru:  | Push data thru:  | MLA: MAX_TIMESTAMP_LOOKAHEAD = 24 LM:  SHOULD_LINEMERGE = false |
|---|---|---|
| – |Parsing > Merging > Typing Pipelines  |MLA: MAX_TIMESTAMP_LOOKAHEAD = 24 LM:  SHOULD_LINEMERGE = false || ê Skip Indexing |ê Skip Indexing |MLA: MAX_TIMESTAMP_LOOKAHEAD = 24 LM:  SHOULD_LINEMERGE = false |
| – |Tweak various props.conf settings |MLA: MAX_TIMESTAMP_LOOKAHEAD = 24 LM:  SHOULD_LINEMERGE = false |
| Measure |Measure |MLA: MAX_TIMESTAMP_LOOKAHEAD = 24 LM:  SHOULD_LINEMERGE = false |
TF:  TIME_FORMAT = %m-%d-%Y %H:%M:%S.%3N 
DC:  DATETIME_CONFIG = CURRENT 
12
Index-time pipeline resultsIndex-time pipeline results 
| Default
MLA
LM+TF
LM+DC | 
 | 
 | 
 | 
 | 
 | 
 | 
 | 
 |
|---|---|---|---|---|---|---|---|---|
| Default MLA LM+TF LM+DC | | | | | | | | |
| Default MLA LM+TF LM+DC | | | | | | | | |
| Default MLA LM+TF LM+DC | | | | | | | | |
•	All pre-indexing pipelines are 
expensive at default settings. 
| Flexibility | Performance | Time (s) | • | • | Price of flexibility  ||---|---|---|---|---|---|
| Flexibility |Performance |Time (s) |• |If you’re looking for  |If you’re looking for  |
| Flexibility |Performance |Time (s) |• |performance, minimize  |performance, minimize  |
| Flexibility |Performance |Time (s) |• |generality  |generality  |
| Flexibility |Performance |Time (s) |• |• |LINE_BREAKER |
| Flexibility |Performance |Time (s) |• |• |SHOULD_LINEMERGE || Flexibility |Performance |Time (s) |• |• |MAX_TIMESTAMP_LOOKAHEAD |
| Flexibility |Performance |Time (s) |• |• |TIME_PREFIX |
| Flexibility |Performance |Time (s) |• |• |TIME_FORMAT |
14
Next: let’s index a dataset B
Generate a much larger dataset (1TB)–	High cardinality, ~380 Bytes/event, 2.9B events
Forward to indexer as fast as possible
–	Indexer: 
	ê Linux 2.6.32 (CentOS);–	Indexer: 
	ê Linux 2.6.32 (CentOS); 
	ê 2x12 Xeon 2.30 GHz (HT enabled) 
	ê 8x300GB 15k RPM drives in RAID-0
–	No other load on the box
Measure
15
Indexing: CPU and IO
16
	Indexing Test Findings CPU Utilization
–	~17.6% in this case, 4-5 Real CPU Cores
IO Utilization 
–	Characterized by both reads and writes but not as demanding as search. Note the splunk-
optimize process.optimize process.
Ingestion Rate
–
– 30MB/s
“Speed of Light” – no search load present on the server
17
Index Pipeline Parallelization
Splunk 6.3+ introduced multiple independent pipelines sets 
	ê i.e. same as if each set was running on its own indexer 
If machine is under-utilized (CPU and I/O), you can configure the indexer to run 2 such sets. 
Achieve roughly double the indexing throughput capacity.Try not to set over 2 
Be mindful of associated resource consumption 
18
Indexing Test Conclusions
Distribute as much as you can
– Splunk scales horizontally
– Enable more pipelines but be aware of compute tradeoff 
Tune event breaking and timestamping attributes in props.conf whenever possible
Faster disk (ex. SSDs) will not generally improve indexing throughput by meaningful amountFaster (not more) CPUs would have improved indexing throughput 
– multiple pipelines would need more CPUs
19
Search 
Types & Tests
	Searching Real-life search workloads are complex and varied
–	Difficult to encapsulate every organization’s needs into one neat profile
Yet we can generate arbitrary workloads covering a wide range of resource 
utilization and profile thoseutilization and profile those
| – | Actual profile will fall somewhere in between.  | CPU |
|---|---|---|
| – |IO |CPU |
21
Search pipeline boundedness
Some 
preparatory 
steps here
Repeat until search completes
| Find buckets  | For each bucket  | For each bucket  | Process events:  | Filter events to  | Write temporary  |