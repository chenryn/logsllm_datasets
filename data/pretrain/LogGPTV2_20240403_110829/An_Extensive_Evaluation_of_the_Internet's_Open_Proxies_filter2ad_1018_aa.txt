title:An Extensive Evaluation of the Internet's Open Proxies
author:Akshaya Mani and
Tavish Vaidya and
David Dworken and
Micah Sherr
An Extensive Evaluation of the Internet’s Open Proxies
Akshaya Mani∗
Georgetown University
PI:EMAIL
David Dworken
Northeastern University
PI:EMAIL
Tavish Vaidya∗
Georgetown University
PI:EMAIL
Micah Sherr
Georgetown University
PI:EMAIL
ABSTRACT
Open proxies forward traffic on behalf of any Internet user. Listed
on open proxy aggregator sites, they are often used to bypass geo-
graphic region restrictions or circumvent censorship. Open proxies
sometimes also provide a weak form of anonymity by concealing
the requestor’s IP address.
To better understand their behavior and performance, we con-
ducted a comprehensive study of open proxies, encompassing more
than 107,000 listed open proxies and 13M proxy requests over a 50
day period. While previous studies have focused on malicious open
proxies’ manipulation of HTML content to insert/modify ads, we
provide a more broad study that examines the availability, success
rates, diversity, and also (mis)behavior of proxies.
Our results show that listed open proxies suffer poor availability—
more than 92% of open proxies that appear on aggregator sites are
unresponsive to proxy requests. Much more troubling, we find
numerous examples of malicious open proxies in which HTML con-
tent is manipulated to mine cryptocurrency (that is, cryptojacking).
We additionally detect TLS man-in-the-middle (MitM) attacks, and
discover numerous instances in which binaries fetched through
proxies were modified to include remote access trojans and other
forms of malware. As a point of comparison, we conduct and dis-
cuss a similar measurement study of the behavior of Tor exit relays.
We find no instances in which Tor relays performed TLS MitM or
manipulated content, suggesting that Tor offers a far more reliable
and safe form of proxied communication.
KEYWORDS
Internet Proxies, Anonymity
ACM Reference Format:
Akshaya Mani, Tavish Vaidya, David Dworken, and Micah Sherr. 2018.
An Extensive Evaluation of the Internet’s Open Proxies. In 2018 Annual
Computer Security Applications Conference (ACSAC ’18), December 3–7, 2018,
San Juan, PR, USA. ACM, New York, NY, USA, 14 pages. https://doi.org/10.
1145/3274694.3274711
∗Equally credited authors.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-6569-7/18/12...$15.00
https://doi.org/10.1145/3274694.3274711
252
1 INTRODUCTION
Open proxy servers are unrestricted proxies that allow access from
any Internet user. Open proxies are fairly prevalent on the Internet,
and several websites are devoted to maintaining large lists of avail-
able open proxies. In contrast to VPNs [29] and some (but not all)
anonymity systems, open proxies are generally easy for users to
use, requiring only minimal configuration changes (e.g., adjusting
“network settings”) rather than the installation of new software.
As surveyed in this paper, there is a variety of types of open prox-
ies, with differing capabilities. This leads to variation in how proxies
are used in practice. Clearly, open proxies have been (mis)used for
malicious purposes, including (but not limited to) sending spam,
injecting ads, and serving as stepping stones for various attacks [38,
46]. But open proxies have also been used for far less nefarious
reasons, including circumventing censorship efforts. More gener-
ally, they permit accessing otherwise inaccessible information and,
controversially, can be used to bypass regional content filters (e.g.,
to watch a sporting event that, due to licensing restrictions, would
otherwise not be viewable). Importantly, along with VPNs, proxies
have been suggested as a means of enhancing Internet privacy and
protecting browsing history in the face of the recent expansion of
data collection rights by U.S. Internet service providers [30].
An interesting related question, and one that unfortunately has
not undergone rigorous study, is why the owners of open proxy
servers run such services. In some instances, the proxies are due
to misconfiguration or even compromise. There is a rich history of
accidental open proxies, particularly for open proxies that operate
as SMTP relays [43]. Still, many proxies are operated by choice.
Although the rationales here are not well-understood, we posit
that some operators may run proxies as a political statement about
privacy and the freedom to access information.
A more menacing motivation for running a proxy is that it pro-
vides its operator with an expanded view of network traffic. Proxy
operators are well situated to eavesdrop on communication, per-
form man-in-the-middle (MitM) attacks, and monitize their service
by injecting spurious ads [46]. We note that while it is relatively
difficult to operate a backbone Internet router and monitor traffic,
it is not difficult to act as an open proxy and increase one’s view of
others’ communication.
We are of course not the first to suggest that open proxies should
be treated with a healthy supply of skepticism, due in large part
to the ease in which proxies can be instantiated and configured to
eavesdrop and manipulate communication. Most noteworthy is the
recent study of open proxies by Tsirantonakis et al. [46]. There, the
authors explore the extent to which open proxies modify proxied
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
A. Mani et al.
HTML pages to inject ads, collect user information, and redirect
users to malware-containing pages. Similar to Tsirantonakis et al.’s
study, we also consider the modification of retrieved webpages.
This paper compliments their work by conducting a large and more
broad study of the Internet’s open proxies.
We perform an extensive study of the open proxy ecosystem,
consisting of more than 107,000 publicly listed open proxies. We
find that the vast majority (92%) of open proxies that are publicly
listed on aggregator websites are either unavailable or otherwise do
not allow proxy traffic. Surprisingly, the open proxies that do allow
proxy traffic have very little geographic or network diversity: five
countries account for nearly 60% of the Internet’s working open
proxies, and 41% of such proxies are hosted by just ten autonomous
systems (ASes). We also evaluate the performance of the proxies,
and find a wide distribution of effective goodputs.
To understand the security implications of relaying traffic through
open proxies, we present a series of experiments designed to under-
stand a broad range of proxy behaviors. We compare the results of
traffic received via direct communication with traffic that traverses
through proxies. While our results indicate that the majority of
open proxies seemingly operate correctly (that is, they forward
the traffic unimpeded), we find a surprisingly large number of in-
stances of misbehavior. In particular, as we discuss in more detail
in what follows, we discover many instances in which proxies ma-
nipulate HTML content, not only to insert ads, but also to mine
cryptocurrency (i.e., cryptojacking). Our study also discloses numer-
ous attacks in which proxies return trojan Windows executables
and remote access trojans (RATs), and conduct TLS MitM attacks.
As a point of comparison, we compare the level of manipulation
observed using open proxies to that when content is fetched over
Tor [23]. Over the course of our nearly monthlong experiment in
which we fetched files from every available Tor exit relay, we found
no instances in which the requested content was manipulated. Our
results suggest that Tor offers a more reliable and trustworthy form
of proxied communication.
In summary, this paper describes a large-scale and broad study
of the Internet’s open proxies that (i) examines the open proxy
ecosystem, (ii) measures open proxy performance, (iii) measures
the prevelance of previously undisclosed attacks, and (iv) relates
its findings to a similar study (which we conduct) of Tor exit relay
behavior. Our results demonstrate that misbehavior abounds on
the Internet’s open proxies and that the use of such proxies carries
substantial risk.
2 BACKGROUND
The Socket Secure (SOCKS) protocol [34] was introduced in 1992
as a means to ease the configuration of network firewalls [33].
In SOCKS, a server listens for incoming TCP connections from a
client. Once connected, a client can then tunnel TCP and/or UDP
traffic through the SOCKS proxy to its chosen destination(s). Since
SOCKS forwards arbitrary TCP and UDP traffic, clients can use
end-to-end (e2e) security protocols (in particular, TLS/SSL) through
SOCKS proxies. Currently, SOCKSv4 and SOCKSv5 servers are
both deployed on the Internet, with the latter adding authentica-
tion features that enforce access control. In this paper, we do not
distinguish between SOCKSv4 and SOCKSv5, and use the general
term SOCKS proxies to describe proxies running either version.
More commonly (see §5.1), open proxies use HTTP as a transport
mechanism. This has the benefit of supporting clients whose local
firewall policies prohibit non-HTTP traffic (e.g., as is sometimes
the case on corporate networks).1
We distinguish between two types of proxies that rely on HTTP.
The first, which we refer to simply as HTTP proxies, allows clients
to specify a fully-qualified URL—with any domain name—as part of
a HTTP GET request to the proxy. The proxy parses the GET URL
and if the requested URL is on a different host, the proxy makes its
own request to fetch the URL and forwards the response back to
the client. Conceptually, a HTTP proxy is a web server that serves
pages that are hosted elsewhere.
A significant disadvantage of HTTP proxies is that it is incom-
patible with e2e security protocols such as TLS, since it is the HTTP
proxy (not the user’s browser) that initiates the connection to the
proxied URL. The inability to support fetching HTTPS URLs increas-
ingly limits the use of HTTP proxies due to the growing adoption
rate of HTTPS [27] on the web.
In contrast, CONNECT proxies use the HTTP CONNECT
method [32] to establish e2e tunnels between the client (i.e., the
browser) and the destination webserver. CONNECT proxies allow
the client to specify a host and port. The proxy then initiates a TCP
connection to the specified target and then transparently forwards
all future TCP data from the client to the destination, and vice versa.
Importantly, CONNECT proxies forward traffic at the TCP level
(layer 4) and are not limited to any particular application-layer pro-
tocol. CONNECT proxies support TLS/HTTPS connections since
the browser can effectively communicate unencumbered to the
destination webserver and perform an ordinary TLS handshake.
Example protocol interactions for HTTP and CONNECT proxies
are provided in Figures 14 and 15 in Appendix A.
The network addresses (IPs and ports) of open proxies are listed
on proxy aggregator sites. These sites also sometimes use the
term transparent, meaning that the proxy supports at least e2e
TCP tunneling; SOCKS and CONNECT proxies meet this criterion.
As another dimension, aggregator sites also sometimes categorize
proxies as anonymous proxies. These proxies purportedly do not
reveal the client’s IP address to the destination. We explore the
degree to which open proxies provide anonymity in §5.1.
3 RELATED WORK
We are not the first to investigate the use of proxies on the Internet.
Weaver et al. [52] performed a measurement study to detect the
presence of transparent HTTP proxies on connections from clients
to servers. They found that 14% of tested connections were proxied
somewhere along the network path between the client and desti-
nation. Our work focuses on the intentional use of freely available
proxies and gathers evidence of misbehavior by such proxies.
Scott et al. [40] provide insights about the use, distribution, and
traffic characteristics of open proxies on the Internet. However,
they do not focus on detecting any malicious behavior by open
proxies, which is a core focus of this work.
Other work has investigated the misuse of proxy servers. Of
note, Jessen et al. [41] deploy low-interaction honeypots to explore
1Although, as we report in §5.1, most proxies that use HTTP as a transport mechanism
do not listen on ports 80 or 443, potentially nullifying this advantage.
253An Extensive Evaluation of the Internet’s Open Proxies
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
the (ab)use of open proxies to send spam. Researchers have also
examined the abuse of the Codeen CDN network [50] by looking
at the requests that were forwarded by the network and mitiga-
tion strategies employed to minimize the forwarding of malicious
requests [38, 51]. While we also investigate misbehavior, we fo-
cus on uncovering malicious behavior by open proxies rather than
malicious use of proxies by users.
Tyson et al. [47] study HTTP header manipulation on the Inter-
net by various open proxies and discuss various observed factors
affecting HTTP header manipulation. Huang et al. [31] show that
ASes sometimes use middleboxes that interfere with HTTP traffic
and inject HTTP headers across a wide range of networks including
mobile and data centers. Durumeric et al. [25] examine the degree
of HTTPS interception by middleboxes and argue that such inter-
ception significantly reduces security. Our work has greater scope,
and focuses not only on header manipulation or HTTPS intercep-
tion, but also uncovers several other forms of suspicious behavior
exhibited by open proxies. Waked et al. [49] show that commer-
cially used TLS middleboxes do not perform sufficient validation
checks on SSL certificates and expose their clients to trivial attacks.
We also found that some open proxies exhibit similar behavior.
Previous work has also looked at ad injection in HTML con-
tent [21, 39, 44]. Similarly, we look at content manipulation by
open proxies, but consider other forms of misbehavior beyond ad
injection.
Most related to this work is the recent study by Tsirantonakis
et al. [46] that also looks at content manipulation by examining
roughly 66K open HTTP proxies on the Internet. Their work pro-
vides an in-depth analysis of different types of malicious behavior
exhibited by proxies by injecting Javascript code. Their analysis
shows that proxies inject Javascript aimed at tracking users, steal-
ing user information, fingerprinting browsers, and replacing ads.
Complementary to their work, we provide an in-breadth analy-
sis of 107K unique open proxies by evaluating their availability,
performance, and behavior across a large spectrum of potential
attacks. We look at manipulation of content by open proxies, not
only through the injection of Javascript, but also by modification of
different types of requested content (binary files, etc.) and through
TLS MitM. Additionally, unlike existing work, we evaluate the be-
havior of open proxies based on different client locations. Laudably,
Tsirantonakis et al. [46] built a service to detect malicious open
proxies on a daily basis and to publicly report the proxies deemed
unsafe. We compare our findings using this service. As an alterna-
tive to open proxies, we compare the performance of open proxies
to Tor exit relays (§9), and argue that Tor provides a safer means of
proxied communication.
4 METHODOLOGY & EXPERIMENTAL SETUP
Our study of the Internet’s open proxy servers has two main goals:
(i) to measure the proxies’ availability, composition, and perfor-
mance and (ii) to assess the degree to which proxies exhibit mali-
cious behavior. We begin by describing the methodology used to
perform our study.
We conducted our study over a 50 day period, beginning on
2018-04-12 and ending on 2018-05-31. Our measurement apparatus,
described next, was installed on 16 locations (listed in Table 8
in Appendix B); these included 15 geographically diverse AWS
Proxy Aggregator
clarketm [10]
multiproxy.org (all) [5]
multiproxy.org (anon) [6]
NordVPN [9]
ProxyBroker [22]
workingproxies.org [15]
xroxy [16]
Total (unique proxies)
Proxies
6,343
1,524
373
29,194
73,905
1,250
345
107,034
Table 1: Sources of open proxies. A given proxy may be listed by
more than one aggregator.
regions and an installation at Georgetown University. We term
each instance a client location. Having multiple client locations
allows us to determine whether proxies behave differently based on
the network and/or geographic locations of the requesting client.
From each client location, an automated process performed the
following steps once per day:
(1) Populate: We collect and combine lists of advertised prox-
ies from a number of proxy aggregator sites. We augment
this list with the results of running ProxyBroker [22], an
open source tool for finding open proxies. In all cases, prox-
ies were listed by aggregator sites as tuples containing an
IPv4 address and a TCP port number. The complete list of
sources of proxies is listed in Table 1. We emphasize that the
list of proxies is (re)fetched daily since, as we show in §5.1,
open proxies are subject to high levels of churn.
(2) Classify: Next, from each client location, we attempt to