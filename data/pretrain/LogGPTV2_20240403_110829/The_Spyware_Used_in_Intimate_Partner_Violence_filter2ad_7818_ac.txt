average value of AUC across all folds. We used Python Scikit-
Learn [50] to train and evaluate machine learning models.
We found that logistic regression (LR) with L2 penalty and
inverse of the regularization strength (C) set to 0.02094 (found
via grid search) worked the best, giving an AUC value of 0.94
(optimal value is 1.0). This leads to a false positive rate (FPR)
of 4% and a false negative rate (FNR) of 4%. We tested, among
Threshold
0.5
0.3
Accuracy
FNR
FPR
Accuracy
FNR
FPR
TR
96
4
4
86
< 1
19
TS1
TS2
TS1+2
91
4
11
82
0
25
95
10
6
81
0
24
93
6
9
82
0
25
Fig. 4: Performance (in percent) of LR classiﬁer on training
and different test sets for two classiﬁcation thresholds.
other algorithms, decision trees, random forests, K-means, and
SVM, and found none performed better than LR.
Evaluation. We ﬁnally evaluate our machine learning model
on 200 apps from two different time periods. Half of these apps
(denoted by TS1 hereafter) are sampled from the ﬁrst week’s
6,361 apps (omitting the ﬁrst day’s results that were used to
select the 1,000 training apps) and the other half (denoted
by TS2) were sampled from the fourth (last) week’s 7,581
apps. We hand-label the 200 apps as benign or IPS-relevant
as before. TS1 has 28 IPS-relevant apps, while TS2 has 22.
In Figure 4 (ﬁrst group of rows, with cutoff 0.5) we note
the accuracy, FPR, and FNR of the logistic regression model
on the training data (TR) and the two test sets (TS1 and TS2).
We see that the LR classiﬁer generalizes well, as the test
accuracy is close to that of the training dataset. Moreover,
the model handles concept drift well: apps from a month later
are as accurately classiﬁed as those coming from the same
time period. Averaging across the entire test set (TS1+2), the
classiﬁer achieves 93% accuracy with 6% false negatives.
We would like to minimize false negative rates — erro-
neously classifying an app usable for IPS as benign. Looking
ahead to potential use of our classiﬁer as a detection tool,
failing to detect IPS apps on a phone is dangerous in many IPV
settings; while misclassifying benign apps creates overhead,
but is relatively harmless. We thus experimented with multiple
classiﬁcation thresholds (how conﬁdent does the LR model
need to be before we classify something as IPS-relevant). We
found that a threshold of 0.3 (as opposed to a standard 0.5;
the positive class is IPS apps) achieves false negative rate
below 1% and false positive rate at 19%, with 34% of all
apps marked as relevant. These numbers are averages over 10
446
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:39:30 UTC from IEEE Xplore.  Restrictions apply. 
random folds of the training data. The performance at this
threshold on test data appears in Figure 4.
The false positive rate could be reduced via manual in-
spection of the ML-pruned apps. For example, in subsequent
sections we only investigate apps that we manually veriﬁed
to be IPS-relevant. Towards scaling manual inspection, we
explored using Amazon Mechanical Turk, see Appendix C.
D. Limitations of our app discovery approach
There are a few limitations to our app discovery approach.
First and foremost, we only focused on English-language
search queries and on apps with descriptions in English.
Therefore, some spyware used in non-English-speaking com-
munities may be missed. That said, our methods can readily
be localized to other languages.
Our initial seed queries are manually picked and the snow-
balls do not represent an exhaustive set of search terms that an
abuser might use. As a result, it could be that our techniques
missed some IPS apps.
Our machine learning and manual
labeling approaches
primarily relied on descriptions on the Google Play store,
but some apps have only cursory, vague, or incomplete de-
scriptions. Some apps have capabilities not
listed in their
description. Other apps promise capabilities they do not de-
liver. (In the next section we discuss some examples.) Many
of the apps falling into this category have more comprehen-
sive speciﬁcations on a separate website, and future work
might attempt
to additionally leverage this information to
improve accuracy. Likewise, using natural language processing
techniques (e.g., [49]) might help in improving accuracy.
As another route to improvements, one might augment our
techniques with direct analysis of app binaries, perhaps using
the rich set of techniques that have been developed to analyze
(other kinds of) malware apps [14, 24, 32, 44, 59].
Finally, what exactly should be considered IPS-relevant is
not always clear, even to expert human analysts. Our ground
truth labels may therefore contain some errors for apps on
the margin, and we tended to bias towards conservatively
marking apps as IPS-relevant, for the same reasons we tuned
our classiﬁer towards a low false negative rate. This viewpoint
seems appropriate, given the many online resources we found
that suggest using truly well-intentioned apps (such as folder
synchronization tools) for IPS.
IV. IPS-RELEVANT APP UX AND CAPABILITIES
In Section III we discuss how we discovered IPS tools
through manual and automated crawling. Here we dig into
the types of apps found. We group them into various high
level categories, and then analyze both their user experience
(from the perspective of both abusers and victims) as well as
their capabilities.
App selection. We manually investigated 70 apps chosen
from our corpus of apps: 61 from Google Play (on-store),
and 9 from the open web (off-store). The apps were selected
as follows: We ordered on-store apps in decreasing order of
their download counts and chose apps until we had at least
three apps from each category (see Figure 5). We capped the
maximum number of on-store apps to consider for a category
to 15, ignoring apps with lower download counts. Of the 23
off-store apps we observed, 18 apps could be downloaded
without entering any credit-card information, whereas the
remaining 5 needed to be purchased. We randomly selected
6 of the free apps and 3 that required purchase.
For each app, a researcher reviewed the description of the
app, installed it on a simulated victim phone, installed any
complementary version on a simulated attacker phone (both
phones running Android 6.0), and recorded the capabilities
provided by the app. We found that 12 of the 70 apps were
buggy or did not work in accordance with their description;
they are excluded from the discussion below.
We observed that most apps fell into three categories based
on their intended usage.
• Personal tracking: These are apps intended for use solely
by the owner of a phone. Examples include text message
forwarding services and anti-theft (Find-my-phone) apps.
• Mutual tracking: These apps allow a group of people to
track each other’s locations. Examples include Find-my-
family apps, or couple trackers.4
• Subordinate tracking: These apps are designed to enable
one party to track another, and not vice versa. Examples
include child or employee monitoring apps. Most off-store
IPS spyware falls into this category.
In Figure 5, we summarize these categories, with examples.
Some of the on-store apps that we investigated seemed,
in our assessment, to violate Play Store policy. We therefore
reported them to Google, who subsequently reviewed the apps
and took action against all those apps that they found to violate
their policy. These included some that lacked a persistent
notiﬁcation or that promoted themselves as spyware or stealth
tracking (see discussion below).
A. (Ab)user experience
Assuming physical access to a victim’s unlocked device,
installation and conﬁguration of most apps is straightforward.
Prior work [40, 58] reports that abusers often have access to
victims’ phones and either know, can guess, or can compel
disclosure of the credentials needed to unlock it.
Most of the apps we evaluated, both on and off Play
Store, have a subscription payment model with tiered pricing
for a range of capabilities. Some have free trials or free
versions with limited capabilities. The popular dual-use apps
(with more than 10 million downloads) on Play Store cost
somewhere between $5 for a lifetime upgrade (Wheres My
Droid) to $10 USD per month (TrackView). In contrast, the
apps that are distributed on the web range in cost from $20 to
$50 USD per month (for up to ﬁve phones).
On-store apps can be installed via the Play Store app on
the device. To install off-store apps, the abuser must ﬁrst con-
ﬁgure the device to allow installation of apps from “unknown
4Couple trackers’ benign use case is for consensual location and information
sharing between partners, differentiating it from their dual-use in IPS.
447
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:39:30 UTC from IEEE Xplore.  Restrictions apply. 
App types
Description
Find-my-phone
Anti-theft
Call recorder
Data syncing
Phone control
Locate phone remotely
Catch the phone thief
Record incoming / outgoing calls
Sync data from phone to other device
Control phone remotely
Examples
Find my Android
Wheres My Droid
Call Recorder
mySMS
TrackView
Capabilities
Location tracking, remote locking and wiping
Record location, photos & ambient audio; alert on SIM change
Record calls and back them up to a server
Sync SMS and call log, media, browser history
Full control with capabilities exceeding combination of data
syncing and anti-theft
Family tracking
Couple tracking
Friends tracking
Track location of family members
Consensual sharing of location and more
Track friends if they are in vicinity
Family Tracker
Couple Tracker
Friends Tracker
Mutual location sharing
Syncs location, media content, SMS and call logs
Like family tracker, and alerts if friend in vicinity
Personal
tracking
Mutual
tracking
Subordinate
tracking
Employee tracking
Parental control
Overt spyware
Track employees whereabouts
For parents to monitor their children
Claims to be spying app
Where’s my Staff
MMGuardian
Cerberus, mSpy, HelloSpy
Similar to anti-theft
Capabilities very similar to phone control
Surreptitious phone monitoring & control
Fig. 5: Different categories of IPS-relevant apps and their typical capabilities.
sources” and disable Google Play Protect [4] regular scans.
The link to download the app’s APK is then found via browser
or sent in an SMS link. As mentioned in Section III, there are
many resources online that provide step-by-step instructions
on how to do this. Installation and conﬁguration usually takes
only a few minutes of access to the victim’s phone.
Remote installation of dual-use apps is possible from the
Google Play web interface if the abuser knows the credentials
of the device’s primary Google account. However, Android
enforces that no third party apps — those not packaged with
the OS — can run until they are ﬁrst opened on the device. The
abuser must also grant permissions (for GPS, SMS and call
logs, camera, and microphone, etc.) to either on or off-store
apps, otherwise Android will not allow the app to access this
information. Thus, for all apps we analyzed, an abuser needs
to have physical access to the device at least once to perform
activation. The exception here is when a dual-use app comes
packaged with the OS, such as a family tracker provided by
a smartphone manufacturer or cellular providers. We discuss
these special cases in Section IV-C.
Once the app is installed and the permissions are granted,
the abuser links the victim device to their credentials so they
can access it remotely. Credentials may be a username and
password, or a license number (for apps that require a paid
subscription). All of the off-store spyware we analyzed can
be conﬁgured to hide the app icon from the app drawer. Two
of the 61 on-store apps we analyzed had this feature as well
(Cerberus and TrackView).
Depending on the type of IPS app, the abuser is able to
access gathered data in different ways. Most personal-use apps
simply forward data to an email or a phone number that the
abuser controls. Mutual trackers generally require installation
of the app on two phones, one used by the victim and one used
by the abuser. Some subordinate tracking apps also require a
complementary app, but the majority offer web portals for
accessing information from the target device. We discovered
that several portals have simple but severe vulnerabilities that
allow an arbitrary user of the spyware service to access sen-
sitive information taken from any victim phone, and not just
the ones associated with the abuser’s account. We repeatedly
attempted to disclose these vulnerabilities to the vendors, but
never received a response.
No app that we analyzed required rooting the victim’s
phone [7], which is a technically sophisticated process for
average users and is difﬁcult using only software for Android
6.0 or above. That said, many off-store spyware apps offer
additional functionality should the device be rooted, most
notably the ability to read contents of messaging apps such
as WhatsApp (which can’t be done without root access).
Some companies (e.g., FlexiSpy) sell phones that have their
software pre-installed (with customized versions of Android or
phones already rooted or jailbroken), providing a streamlined
abuser experience with the most invasive monitoring abilities.
As abusers often purchase and pay for the phone used by
survivors [29], this is an acute threat. In summary, installation
and use of IPS apps is easy for abusers, and gives them
dangerous surveillance capabilities.
B. App Capabilities
Both on-store and off-store apps provide a shocking array
of capabilities ranging from simple location tracking to near-
complete remote control over a phone. We separate our
discussion into three dimensions: monitoring abilities (what
information is being extracted), covertness, and control.
Monitoring abilities. Most fundamental to IPS is an app’s
ability to monitor a victim’s device. IPS apps typically gather a
subset of the following types of information: location, commu-
nication logs (SMS and call logs), communication data (SMS
content or call recordings), media content (photos, videos, or
other ﬁles stored on the device), and phone usage (app usage
or web history). In addition to passively gathering information,
many apps can take photos or record ambient sounds in real
time in response to an abuser’s remote command.
Most basic dual-use apps are GPS tracking apps that record
the location of the device and sync it with a remote server.
A user can log into the remote portal to locate the device.
Some dual-use apps, such as family locator apps, allow sharing
this location data, and therefore enable mutual tracking among
family members or friends. Most versions of Android and iOS
ship with a built-in ﬁnd-my-phone functionality; we discuss
these apps in Section IV-C. Many third party ﬁnd-my-phone
apps, such as Find My Android, dispense with a remote server;
448
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:39:30 UTC from IEEE Xplore.  Restrictions apply. 
instead they are triggered by an SMS with a code-word and
respond via SMS with the device’s location.