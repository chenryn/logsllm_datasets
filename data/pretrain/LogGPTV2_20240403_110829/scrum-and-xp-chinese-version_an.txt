它实际的含义是“关注构建新东西，而不是把旧的产品化”。真有 人会这么干？嗯，我们刚开始的时候就常犯这样的错误，我也相信 很多公司也是如此。这种症状跟压力有关。很多经理都不能真正理 解：即使所有的编程活动都已完成，距离产品发布还有很遥远的距 离。至少复杂系统是这样的。所以经理（或者产品负责人）要求团 队继续增加新特性，而大家手中那些“差不多可以发布”的代码就 越来越多，整个工作的速度都会因此而放缓。别把最慢的一环逼得太紧
假设验收测试是你那里最慢的一环。测试人员稀缺，或者低劣的代 码质量造成了过长的验收测试周期。
假设你的验收测试团队每星期最多测试三个特性（不，我们不会用“每周测试的特性”来进行度量，我只是在这个例子中用一下而 已）。而开发人员每星期能够开发 6 个特性。
经理或者产品负责人（甚至团队）会觉得不妨安排每周开发 6 个特 性。
千万不要！你最终一定会认识到现实的残酷，可那时伤害业已造成。
实际上，应该安排每周只完成 3 个特性，多余的时间用来攻克测试 的瓶颈。例如：
		让一些开发人员去做测试人员的工作（呃，他们会因此而 	爱你的……）。
	实现一些工具或脚本，用来简化测试工作。
增加更多的自动化测试代码。
100 | 硝烟中的 SCRUM 和 XP
 延长 sprint 长度，把验收测试放到 sprint 里面来。
把一些 sprint 定义为“测试 sprint”，其中整个团队都作为把一些 sprint 定义为“测试 sprint”，其中整个团队都作为
验收测试团队进行工作。
	雇佣更多测试人员（即使这会意味着减少开发人员）。
这些解决方案我们全都试过（除了最后一点）。最好的长期解决方 案当然是第 2 和第 3 点，即更好的工具与脚本，还有测试自动化。
回顾可以帮助我们更好地识别出最慢的一环。
回到现实 
也许我的话会让你认为：我们在所有的 Scrum 团队中都有测试人 员，针对每个产品都有大规模的验收测试团队，在每个 sprint 结束 以后都会进行发布，等等等等。
其实，我们也没有做到。
我们有几次能成功地做到这种程度，也能看到它所带来的正面影 响。但我们的质量保证过程想要得到认可，还有很长的路要走，我 们仍有很多东西要学。
我们怎样管理多个 SCRUM 团队| 101 
15 
我们怎样管理多个 Scrum 团队15 
我们怎样管理多个 Scrum 团队
在多个 Scrum 团队开发同一个产品的状况下，很多事情都会变得更 加复杂、棘手。这个问题普遍存在，跟 Scrum 没太大关系。更多开 发者=更多复杂情况。
我们也（和往常一样）碰到过这种情况。人最多的时候，曾有大约
40 个人开发同一个产品。
这里的核心问题是：
•	要创建多少个团队
•	如何把人员分配到各个团队中
创建多少个团队
既然管理多个 Scrum 团队这么困难，那我们干嘛还要找罪受呢？为
啥不把所有人都放到一个团队里面去呢？
在我们曾有过的团队中，单个 Scrum 团队最多包括 11 个人。大家 可以一起工作，但是效果不好。每天的 Scrum 会议基本上都会超过 15 分钟。每个人都不太清楚其他人在做什么，所以整个状态就有 些混乱。Scrum master 很难保证每个人都在向同一个目标努力，也
不太能找得到时间来解决发现的所有问题。不太能找得到时间来解决发现的所有问题。
有人可能会建议说，把大团队分成两个团队。但这样做情况就一定
会好转么？未必。
102 | 硝烟中的 SCRUM 和 XP
如果这个团队在实施 Scrum 方面很有经验，也习惯这种做法，而且 能够以符合其内在逻辑的方式切分产品，把它分成两个独立的部 分，保证各自的源代码不会重叠，那把团队分割就是一个好主意。不然我还是会坚持用一个团队，尽管大团队存在种种缺陷。
我的经验是，宁可团队数量少，人数多，也比弄上一大堆总在互相 干扰的小团队强。要想拆分小团队，必须确保他们彼此之间不会产 生互相干扰！
虚拟团队
在“大团队”和“多团队”之间权衡利弊之后，你做出了自己的决 策，可怎么知道这种决策是对还是错呢？
如果注意观察、仔细聆听，也许你会注意到“虚拟团队”的存在。
例 1：你选择了使用“大团队”。不过观察一下 sprint 中的交流方 式，你就能发现事实上这个大团队自动分成了两个子团队。例 2：你选择了使用三个小团队的方式。不过观察一下 sprint 中的 交流方式，你就会发现团队 1 和团队 2 一直在交流，而团队 3 比较 孤立。
我们怎样管理多个 SCRUM 团队| 103 
那么这到底意味着什么呢？是你的团队分割策略有问题吗？唔，如 果类似虚拟团队一直这样保持下去的话，那就表示做错了；如果只 是暂时的话，那就没问题。
让我们再看一下例 1。如果这两个虚拟的子团队一直变化（也就是 大家在虚拟团队中换来换去），那把他们放到一个团队中就没有问 题。如果二者的构成在整个 sprint 中保持不变，在下个 sprint 中可 能就得考虑把他们分成两个真正的 Scrum 团队了。现在再看看例 2。如果团队 1 和团队 2 在整个 sprint 中一直聊来聊 去（把团队 3 扔在一边），在下个 sprint 中你大概就得把团队 1 和 2 合并到一块。如果在 sprint 的前半阶段，团队 1 和团队 2 一直交 流，然后在后半阶段，团队 1 和团队 3 又相谈甚欢，那合并或者保 持原样就都是可行的。你可以在 sprint 回顾会议上提出这个问题，让团队自己决定。
在 Scrum 中，团队分割确实很困难。不要想的太多，也别费太大劲 儿做优化。先做实验，观察虚拟团队，然后确保在回顾会议上有足 够的时间来讨论这种问题。迟早就会发现针对你所在环境的解决方 案。需要重视的是，必须要让团队对所处环境感到舒适，而且不会 常常彼此干扰。
最佳的团队尺寸
在我读过的大多数书中，5 到 9 个人被公认为是“最佳的”团队构 成人数。
104 | 硝烟中的 SCRUM 和 XP104 | 硝烟中的 SCRUM 和 XP
从到目前为止观察到的情况来看，我同意这种说法。不过我会建议 说 3 到 8 个人。而且我相信，为了达到这种团队规模，花上一定代 价还是值得的。
假设你有一个 10 人的 Scrum 团队。那么就考虑一下把最差的两个 人踢出去吧。噢，我真的这么说过么？
假设你有两个不同的产品，每个产品都由一个 3 人团队负责，进度 都很慢。也许可以把他们合并成有 6 个人的团队，同时负责这两个 产品。然后让其中一个产品负责人离开这里（或者给他顾问之类的
角色）。
假设你的团队有 12 个人，因为代码库很烂，所以两个团队不可能 独立在上面工作。那就应该认真投入时间、精力修复代码库（而不
是引入新特性），直到可以分拆团队为止。这种投资很快就可以得
到回报。
是否同步多个 Sprint？
假设有三个 Scrum 团队开发同一个产品。他们的 sprints 应该同步 吗？在同样的时间启动和停止？或者应该交叉覆盖？我们一开始是让这些 sprints 有交叉（考虑到各自的时间安排）。
我们怎样管理多个 SCRUM 团队| 105 
听上去挺不错。在任何一个给定的时间点上，都有一个正在进行的 sprint 接近结束，而新的 sprint 即将开始。产品负责人的工作负担 会随着时间的推移逐步摊开。各个版本如溪水般汩汩流出。每周都
有演示。老天保佑！
耶，我知道你想说什么，但大家从前确实觉得这个想法挺不错的！
我们一开始也是这么做的，直到有一天我有机会跟 Ken Schwaber（在我的 Scrum 认证期间）进行了交流。他指出这种做法很有问题，如果将各个 sprint 同步的话会好得多。我记不清他的确切理由，但 经过几次讨论之后我就被他说服了。
从那以后我们就采用了上图所示的解决方案，也从没觉得有什么不
对劲儿的。我也没机会了解那种交叉的方案是否终会失败，但我觉 得应该如此。同步进行的 sprint 有如下优点：	可以利用 sprint 之间的时间来重新组织团队！如果各个 	sprint 重叠的话，要想重新组织团队，就必须打断至少一个 	团队的 sprint 进程。
	所有团队都可以在一个 sprint 中向同一个目标努力，他们 	可以有更好的协作。
	更小的管理压力，即更少的 sprint 计划会议、sprint 演示和 	发布。
106 | 硝烟中的 SCRUM 和 XP
为什么我们引入“团队领导”的角色
假设我们有三个团队开发同一个产品。
那个标记为“P”的红色家伙是产品负责人。标记为“S”的黑色家 伙是Scrum Masters。其他的就是一直哼哼唧唧的……呃……值得尊
敬的团队成员。
在这个群星荟萃的团队中，谁来决定哪些人属于哪个团队？产品负
责人？三个 Scrum masters 集体决定？还是每个人都可以选择自己 的团队？那如果每个人都想待在团队 1 里面怎么办（因为第一个 Scrum master 长得太好看了）？如果后来发现最多只能有两个团队并行工作在这个代码库上，那我
们就得把这三个 6 人团队变成 2 个 9 人团队。那当前这 3 个 Scrum masters 中，哪一个会失去头衔？
很多公司都有这种敏感问题。
有人可能会觉得让产品负责人来做人员分配是个好主意。但这不是
产品负责人职责以内的事情，对吧？产品负责人是领域专家，他可
以指导团队的前行方向，但不应该被牵扯到乱七八糟的扯淡细节
中。尤其是如果他是“chicken”的话（如果你不了解 chicken 和 pig 的隐喻，可以 google 一下“chickens and pigs”）。
我们怎样管理多个 SCRUM 团队| 107 
我们通过引入“团队领导”的角色来解决了这个问题。你也许把他 叫做“Scrum 中的 Scrum master”，或者“老大”，也或者“首席 Scrum master”等。他不用领导某个团队，但是会负责跨团队的问 题，例如谁担任哪个团队的 Scrum master，大家如何分组等等。我们在给这个角色取名字的时候费了好大劲。我们找到了很多名
字，“团队领导”已经算是最好的了。
这种方法效果很好，所以我也向你们推荐一下（怎么给这个角色命
名就无所谓了）。
我们怎样在团队中分配人手
有多个团队开发同一个产品时，一般有两种分配人手的策略。	•	让一个指定的人来做分配，例如我前面提到的“团队领导”，
或产品负责人，或职能经理（如果他的参与度比较高，就
	可以做出正确的决定）。
•	让团队自己决定。
我们这三种全都用过。三种？是的，策略 1，策略 2，还有二者的 组合。
我们发现二者组合以后的效果最好。