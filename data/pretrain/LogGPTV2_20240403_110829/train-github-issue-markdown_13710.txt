### TypeScript Version:
1.8.10

### Code
```typescript
declare function overload(param: number): void;
declare function overload(param: string): void;

let bar: number | string;
overload(bar); // Argument of type 'number | string' is not assignable to parameter of type 'string'
```

### Expected Behavior
Since the `overload` function can accept either a `number` or a `string`, the compiler should not generate an error when passing an argument of type `number | string`.

### Actual Behavior
The compiler generates the following error:
```
Argument of type 'number | string' is not assignable to parameter of type 'string'.
```

### Workaround
One possible solution is to rewrite the declaration of `overload` as follows:
```typescript
declare function overload(param: number | string): void;
```

However, these declarations are often found in external `.d.ts` files, which I prefer not to modify unless absolutely necessary.