Hi,
I'm having some troubles with setting up a simple angular2 app with routing,
when it's served directly through the server root. Example:
    @RouteConfig([
        { path: '/', component: Workbench },
        { path: '/login', component: Auth },
        { path: '/home', component: Home }
    ])
    export class App{
    }
Where / is the root url of the http server.
Right now, navigating to **/home** or **/login** results in the same as
navigating to **/**. After some investigation the problem seems to be the
result of _normalize_ : (inside location.ts)
    normalize: function(url) {
              return stripTrailingSlash(this._stripBaseHref(stripIndexHtml(url)));
    },
Besides the url being set to "/login" the result of
**this._stripBaseHref(stripIndexHtml(url))** is "" (empty string). This
happens because url and _baseHref (using HTML5LocationStategy) are exactly the
same.
Looking at the getBaseHref function on the last version of browser_adapter
(https://github.com/angular/angular/blob/011fab37af626535c1d5af7091d72e27d93f4391/modules/angular2/src/dom/browser_adapter.ts)
    function relativePath(url) {
        if (isBlank(urlParsingNode)) {
          urlParsingNode = document.createElement("a");
        }
        urlParsingNode.setAttribute('href', url);
        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
    }
    (...)
    getBaseHref: function() {
           return relativePath(document.baseURI);
    }
If we call **getBaseHref("http://localhost:8000/login")** what should be the
expected outcome?  
With the current implementation we are getting "/login", but it seems to me
that we should get only "/" instead.
@btford can you please let me know your thoughts on this? If the change is on
getBaseHref, the fix seems quite simple, I can submit a PR, I'm only checking
with you guys the expected behaviour before doing anything.
Best regards,