Table of Contents
Introduction 1.1
Changelog 1.2
Frontispiece 1.3
Overview
Introduction to the Mobile Security Testing Guide 2.1
Mobile App Taxonomy 2.2
Mobile App Security Testing 2.3
General Mobile App Testing Guide
Mobile App Authentication Architectures 3.1
Testing Network Communication 3.2
Cryptography in Mobile Apps 3.3
Testing Code Quality 3.4
Tampering and Reverse Engineering 3.5
Testing User Education 3.6
Android Testing Guide
Platform Overview 4.1
Setting up a Testing Environment for Android Apps 4.2
Data Storage on Android 4.3
Android Cryptographic APIs 4.4
Local Authentication on Android 4.5
Android Network APIs 4.6
Android Platform APIs 4.7
Code Quality and Build Settings for Android Apps 4.8
Tampering and Reverse Engineering on Android 4.9
Android Anti-Reversing Defenses 4.10
iOS Testing Guide
Platform Overview 5.1
Setting up a Testing Environment for iOS Apps 5.2
Data Storage on iOS 5.3
iOS Cryptographic APIs 5.4
2
Local Authentication on iOS 5.5
iOS Network APIs 5.6
iOS Platform APIs 5.7
Code Quality and Build Settings for iOS Apps 5.8
Tampering and Reverse Engineering on iOS 5.9
iOS Anti-Reversing Defenses 5.10
Appendix
Testing Tools 6.1
Suggested Reading 6.2
3
Introduction
Foreword
Welcome to the OWASP Mobile Security Testing Guide. Feel free to explore the existing content, but do note that it
may change at any time. New APIs and best practices are introduced in iOS and Android with every major (and minor)
release and also vulnerabilities are found every day.
If you have feedback or suggestions, or want to contribute, create an issue on GitHub or ping us on Slack. See the
README for instructions:
https://www.github.com/OWASP/owasp-mstg/
squirrel (noun plural): Any arboreal sciurine rodent of the genus Sciurus, such as S. vulgaris (red squirrel) or
S. carolinensis (grey squirrel), having a bushy tail and feeding on nuts, seeds, etc.
On a beautiful summer day, a group of ~7 young men, a woman, and approximately three squirrels met in a Woburn
Forest villa during the OWASP Security Summit 2017. So far, nothing unusual. But little did you know, within the next
five days, they would redefine not only mobile application security, but the very fundamentals of book writing itself
(ironically, the event took place near Bletchley Park, once the residence and work place of the great Alan Turing).
Or maybe that's going to far. But at least, they produced a proof-of-concept for an unusual security book. The Mobile
Security Testing Guide (MSTG) is an open, agile, crowd-sourced effort, made of the contributions of dozens of
authors and reviewers from all over the world.
Because this isn't a normal security book, the introduction doesn't list impressive facts and data proving importance of
mobile devices in this day and age. It also doesn't explain how mobile application security is broken, and why a book
like this was sorely needed, and the authors don't thank their wifes and friends without whom the book wouldn't have
been possible.
We do have a message to our readers however! The first rule of the OWASP Mobile Security Testing Guide is: Don't
just follow the OWASP Mobile Security Testing Guide. True excellence at mobile application security requires a deep
understanding of mobile operating systems, coding, network security, cryptography, and a whole lot of other things,
many of which we can only touch on briefly in this book. Don't stop at security testing. Write your own apps, compile
your own kernels, dissect mobile malware, learn how things tick. And as you keep learning new things, consider
contributing to the MSTG yourself! Or, as they say: "Do a pull request".
4
Introduction
5
Changelog
Changelog
This document is automatically generated at Mon Aug 05 2019 05:46:37 GMT+0200 (Midden-Europese zomertijd)
v1.1.3 2 August 2019
Updated Acknowledgments, with 2 new co-authors.
Translated various parts into Japanese.
A large restructuring of the general testing, platform specific testing and reverse-engineering chapters.
Updated description of many tools: Adb, Angr, APK axtractor, Apkx, Burp Suite, Drozer, ClassDump(Z/etc),
Clutch, Drozer, Frida, Hopper, Ghidra, IDB, Ipa Installer, iFunBox, iOS-deploy, KeychainDumper, Mobile-Security-
Framework, Nathan, Needle, Objection, Magisk, PassionFruit, Radare 2, Tableplus, SOcket CAT, Xposed, and
others.
Updated most of the iOS hacking/verification techniques using iOS 12 or 11 as a base instead of iOS 9/10.
Removed tools which were no longer updated, such as introspy-Android and AndBug.
Added missing MASVS references from version 1.1.4: v1.X, V3.5, V5.6, V6.2-V6.5, V8.2-V8.6.
Rewrote device-binding explanation and testcases for Android.
Added parts on testing unmanaged code in Objective-C, Java, and C/C++.
Applied many spelling, punctuation and style-related fixes.
Updated many cryptography related parts.
Added testaces for upgrade-mechanism verification for apps.
Updated Readme, Code of Conduct, Contribution guidelines, verification, funding link, and generation scripts.
Added ISBN as the book is now available at Hulu.
Added various fixes for the .epub format.
Added testcases on Android and iOS backup verification.
Improved key-attestation related explanation for Android.
Restructured OWASP Mobile Wiki.
Removed Yahoo Weather app and simplified reference on using SQL injection.
Improve explanation for iOS app sideloading to include various available methods.
Added explanation on using ADB and device shell for Android.
Added explanation on using device shell for iOS.
Provided comparison for using emulators/simulators and real devices for iOS/Android.
Fixed Uncrackable Level 3 for Android.
Improved explanation on how to exfiltrate data and apps on iOS 12 and Android 8.
Improved/updated explanation on SSL-pinning.
Added list of adopters of the MASVS/MSTG.
Updated English, Japanese, French and Spanish checklists to be compatible with MSTG 1.1.2.
Added a small write-up on Adiantum for Google.
Added MSTG-ID to the paragraphs to create a link between MSTG paragraphs and MASVS requirements.
Added review criteria for Android instant apps and guidance for app-bundle evaluation.
Clarified the differences between various methods of dynamic analysis.
v1.1.2 12 May 2019
Added missing mappings for MASVS V1.X.
Updated markdown throughout the English MSTG to be consistent.
Replaces some dead links.
6
Changelog
Improvements for rendering as a book, including the ISBN number.
Updated the Excel: it is now available in Japanese as well!
Many punctuation corrections, spelling and grammar issues resolved.
Added missing iOS test case regarding memory corruption issues.
Added contributing, code of conduct, markdown linting and dead link detection.
v1.1.1 7 May 2019
Improvements on various tool related parts, such as how to use on-device console, adb, nscurl, Frida and
Needle.
Updated 0x4e regarding SMS communication.
Many grammar/style updates.
Added Android description regarding MASVS requirement 7.8.
Updated contributor list.
Various updates on instructions regarding TLS and encryption.
Removed some erroneous information.
Fixed parts of the alignment of the MASVS requirements with the MSTG.
Updated information on various topics such as jailbreaking and network interception on both iOS and Android.
Added some steps for Frida detection.
Added write-ups on Android changes, regarding permissions, application signing, device identifiers, key
attestation and more.
Extended guidance on SafetyNet attestation.
Added information on Magisk.
Added Firebase misconfiguration information.
Added references to more testing tools.
Updated contributor list.
Added a lot of information to iOS platform testing.
Added a lot of fixes for our book-release.
v1.1.0 30 Nov 2018
Added more samples in Kotlin.
Simplified leanpub and gitbook publishing.
A lot of QA improvements.
Added deserialization test cases for iOS, including input sanitization.
Added test cases regarding device-access-security policies and data storage on iOS.
Added test cases regarding session invalidation.
Improved cryptography and key management test cases on both Android and iOS.
Started adding various updates in the test cases introduced by Android Oreo and Android Pie.
Refreshed the Testing Tools section: removed some of the lesser maintained tools, added new tools.
Fixed some of the markdown issues.
Updated license to CC 4.0.
Started Japanese translation.
Updated references to OWASP Mobile Top 10.
Updated Android Crackmes.
Fixed some of the anti-reverse-engineering test cases.
Added debugging test case for iOS.
7
Changelog
v1.0.2 13 Oct 2018
Updated guiding documentation (README).
Improved automated build of the pdf, epub and mobi.
Updated Frontispiece (given new contributor stats).
Added attack surface sections for Android and various.
Added vulnerable apps for testing skills.
Improved sections for testing App permissions for Android (given android Oreo/Pie), added section for testing
permissions on iOS.
Added fix for Fragment Injection on older Android versions.
Improved sections on iOS WebView related testing.
v1.0.1 17 Sept 2018
Updated guiding documentation (README, PR templates, improved style guide, issue templates).
Added automated build of the pdf and DocX.
Updated Frontispiece (given new contributor stats).
Updated Crackmes and guiding documentation.
Updated tooling commands (adb, ABE, iMazing, Needle, IPAinstaller, etc.).
Added first Russian translations of the 1.0 documents for iOS.
Improved URLs for GitBook using goo.gl in case of URLs with odd syntax.
Updated Frontispiece to give credit to all that have helped out for this version.
Clarified the app taxonomy & security testing sections by a rewrite.
Added sections for network testing, certificate verification & SSL pinning for Cordova, WebView, Xamarin, React-
Native and updated the public key pinning sections.
Removed no longer working guides (e.g. using iTunes to install apps).
Updated a lot of URLs (using TLS wherever possible).
Updated tests regarding WebViews.
Added new testing tool suites in the tools section, such as the mobile hack tools and various dependency
checkers.
Updated test cases regarding protocol handlers (added missing MASVS 6.6 for iOS).
Many small updates in terms of wording, spelling/typos, updated code segments and grammar.
Added missing test cases for MASVS 2.11, 4.7, 7.5 and 4.11.
Updated the XLS Checklist given MASVS 1.1.0.
Removed the clipboard test from iOS and Android.
Removed duplicates on local storage testing and updated data storage test cases.
Added write-ups from the mobile security sessions at the OWASP summit.
Added anti-debugging bypass section for iOS.
Added SQL injection & XML injection samples and improved mitigation documentation.
Added Needle documentation for iOS.
Added fragment injection documentation.
Updated IPA installation process guidance.
Added XSS sample for Android.
Added improved documentation for certificate installation on Android devices.
Updated Frida & Fridump related documentation.
Added sections about in-memory data analysis in iOS.
Updated software development and related supporting documentation.
Updated (anti) reverse-engineering sections for Android and iOS.
Updated data storage chapters given newer tooling.
Merged SDLC and security testing chapters.
8
Changelog
Updated cryptography and key-management testing sections for both Android and iOS (up to Android Nougat/iOS
11).
Updated general overview chapters for Android and iOS.
Updated Android and iOS IPC testing.
Added missing overviews, references, etc. to various sections such as 0x6i.
Updated local authentication chapters and the authentication & session management chapters.
Updated test cases for sensitive data in memory.
Added code quality sections.
v1.0 15 Jun 2018 (First release)
9
Frontispiece
Frontispiece
About the OWASP Mobile Security Testing Guide
The OWASP Mobile Security Testing Guide (MSTG) is a comprehensive manual for testing the security of mobile
apps. It describes processes and techniques for verifying the requirements listed in the Mobile Application Security
Verification Standard (MASVS), and provides a baseline for complete and consistent security tests.
OWASP thanks the many authors, reviewers, and editors for their hard work in developing this guide. If you have any
comments or suggestions on the Mobile Security Testing Guide, please join the discussion around MASVS and
MSTG in the OWASP Mobile Security Project Slack Channel. You can sign up for the Slack channel yourself using
this invite. (Please open a PR if the invite has expired.)
Copyright and License
Copyright © 2018 The OWASP Foundation. This work is licensed under a Creative Commons Attribution-ShareAlike
4.0 International License. For any reuse or distribution, you must make clear to others the license terms of this work.
ISBN
Our ISBN Number is 978-0-359-47489-9.
Acknowledgments
Note: This contributor table is generated based on our GitHub contribution statistics. For more information on these
stats, see the GitHub Repository README. We manually update the table, so be patient if you're not listed
immediately.
Authors
Bernhard Mueller
Bernhard is a cyber security specialist with a talent for hacking systems of all kinds. During more than a decade in the
industry, he has published many zero-day exploits for software such as MS SQL Server, Adobe Flash Player, IBM
Director, Cisco VOIP, and ModSecurity. If you can name it, he has probably broken it at least once. BlackHat USA
commended his pioneering work in mobile security with a Pwnie Award for Best Research.
Sven Schleier
Sven is an experienced web and mobile penetration tester and assessed everything from historic Flash applications to
progressive mobile apps. He is also a security engineer that supported many projects end-to-end during the SDLC to
"build security in". He was speaking at local and international meetups and conferences and is conducting hands-on
workshops about web application and mobile app security.
10
Frontispiece
Jeroen Willemsen
Jeroen is a principal security architect at Xebia with a passion for mobile security and risk management. He has
supported companies as a security coach, a security engineer and as a full-stack developer, which makes him a jack
of all trades. He loves explaining technical subjects: from security issues to programming challenges.
Co-Authors
Co-authors have consistently contributed quality content and have at least 2,000 additions logged in the GitHub
repository.
Carlos Holguera
Carlos is a security engineer leading the mobile penetration testing team at ESCRYPT. He has gained many years of
hands-on experience in the field of security testing for mobile apps and embedded systems such as automotive
control units and IoT devices. He is passionate about reverse engineering and dynamic instrumentation of mobile
apps and is continuously learning and sharing his knowledge.
Romuald Szkudlarek
Romuald is a passionate cyber security & privacy professional with over 15 years of experience in the web, mobile,
IoT and cloud domains. During his career, he has been dedicating his spare time to a variety of projects with the goal
of advancing the sectors of software and security. He is teaching regularly at various institutions. He holds CISSP,
CCSP, CSSLP, and CEH credentials.
Jeroen Beckers
Jeroen is the mobile security lead at NVISO where he is responsible for quality assurance on mobile security projects
and for R&D on all things mobile. He worked as a Flash developer during high school and college, but switched to a
career in cybersecurity once he graduated and now has more than 5 years of experience in mobile security. He loves
sharing his knowledge with other people, as is demonstrated by his many talks & trainings at colleges, universities,
clients and conferences.
Top Contributors
Top contributors have consistently contributed quality content and have at least 500 additions logged in the GitHub
repository.
Pawel Rzepa
Francesco Stillavato
Henry Hoggard
Andreas Happe