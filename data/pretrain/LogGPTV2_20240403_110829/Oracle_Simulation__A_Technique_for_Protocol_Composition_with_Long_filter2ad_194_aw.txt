The provided text seems to be a mix of pseudocode, logical expressions, and proofs related to cryptographic protocols. The text is quite fragmented and contains many syntax and formatting issues, making it difficult to read and understand. I will attempt to reorganize and clarify the content, focusing on the logical flow and readability.

### Optimized Text

#### Pseudocode and Logical Expressions

```plaintext
if (xI) {
    QI
} else {
    I1
}

i(xI); PI

if (id == idI) {
    if (xR) {
        R1
        i(xR); QR
        i(xR)
        i(xI)
    } else {
        R1
        i(xR); PR
        i(xR)
    }
}

for (i = 1; i <= N; i++) {
    Ci(p) * Di(p) * I0(lsidi, idi);
    R0(lsidr, idr);
}

if (xR) {
    j ∧ xid == idR
} else {
    id == idR
}

if (id == idI) {
    j ∧ xid == idI
} else {
    id == idI
}

for (j = 1; j <= N; j++) {
    if (lsid == lsidR) {
        xI
        i(ki,j); P1
    } else if (xI) {
        lsid ∉ sR ∧ xI
        i(xI); bad
        I1
    }

    if (lsid == lsidI) {
        xR
        i(kj,i); PR
    } else if (xR) {
        lsid ∉ sI ∧ xR
        i(kj,i); QR
        R1
    } else {
        R1
        i(xR); PR
        i(xR)
    }
}
```

#### Proof and Lemmas

**Lemma 4:**
For protocols \( P \), \( Q \), \( A \), \( B \), an oracle \( O \), and a list \( Ol \) of protocol oracles, we have:
\[ A_{O,O}(A \parallel P) \ ? \ (B \parallel Q) \prec \cdot \Leftrightarrow A_{O,Ol,O} \ ? \ B, OP \ ? \ Q \prec \cdot \]

**Proof:**
For protocols \( P \) and \( Q \) such that \( C(P) \cap C(Q) = \emptyset \), for any message \( m \), random tape \( \rho_s \), and history tape \( \theta \), by definition of the semantic of \( \parallel \) and the definition of the parallel oracles:
\[ O_{P \parallel Q}(\rho_s, \theta)(m) = (\rho_s, \theta)(m) \]
The desired result then immediately follows.

**Lemma 29:**
Given two protocols \( P \) and \( Q \), random tapes \( \rho_r \), \( \rho_s \), a cryptographic library \( M_f \), and an oracle \( O \), we have:
\[ \forall M \supset M_f . M \models_O t_P \sim t_Q \Leftrightarrow P \sim_O Q \]

**Proof:**
Let us write \( t_P = t_0^P, \ldots, t_n^P \). Without loss of generality, we assume that every distinguisher makes exactly \( n \) calls to the oracle. If not, we simply add dummy calls for the remaining ones.

We start by proving the top-to-bottom implication. Given a distinguisher \( B_{O,OP?Q} \) and \( \eta, \rho_r \), let \( m_0, \ldots, m_k \) (resp. \( m_0', \ldots, m_k' \)) be the successive contents of the oracle input tape along the computation of \( A_{O(\rho_s,\rho_O),OP(\rho_s)} \) (resp. \( A_{O(\rho_s,\rho_O),OQ(\rho_s)} \)). Let \( \sigma = \{x_0 \mapsto m_0, \ldots, x_k \mapsto m_k\} \) (resp. \( \sigma' = \{x_0 \mapsto m_0', \ldots, x_k \mapsto m_k'\} \)).

Consider now the PPTOM \( A_O \), which, on input \( b_0, \ldots, b_k, \eta, \rho_r \), executes the same code as \( B \), however replacing the \( i \)-th call to the oracle \( OP \) (resp. \( OQ \)), \( i \leq k \), using \( b_i \) instead of the oracle reply. It follows that \( A_O \) would have queried at the \( k+1 \)-th oracle call. This defines an extension \( M \) of \( M_f \).

Thanks to Lemma 28, for every \( \rho_s, \rho_r, \rho_O \), for every \( i \leq k \):
\[ [t_i^P]_{\eta} \text{ and } [t_i^Q]_{\eta} \]
and
\[ [t_i^P]_{\sigma, \eta} \text{ and } [t_i^Q]_{\sigma', \eta} \]

If we now consider the output of \( A_O \), for every \( \rho_r, \rho_O \):
\[ g_n([t_0^P]_{\eta}, \ldots, [t_k^P]_{\eta}) \text{ and } g_n([t_0^Q]_{\eta}, \ldots, [t_k^Q]_{\eta}) \]

For the bottom-to-top direction, we are given a computational model \( M \) and a distinguisher \( B_O \). Thanks to Lemma 28, for every \( \rho_s, \rho_r, \rho_O \), for every \( i \leq k \):
\[ [t_i^P]_{\eta} \text{ and } [t_i^Q]_{\eta} \]
and
\[ [t_i^P]_{\sigma, \eta} \text{ and } [t_i^Q]_{\sigma', \eta} \]

We may now consider the PPTOM \( B'_O,OP?Q \), which:
- Sets \( m_0 \) to the result of \( [g_0()]_{\eta} \).
- For \( i \) going from 0 to \( n-1 \):
  - Sets \( t_i \) to the result of \( OP?Q(m_i) \).
  - Sets \( m_{i+1} \) to the result of \( [g_{i+1}(t_0, \ldots, t_i)]_{\sigma, \eta} \).
- Sets \( t_n \) to the result of \( OP?Q(m_n) \).
- Outputs \( B_O(t_0, \ldots, t_n) \).

With our previous observation, \( t_0, \ldots, t_n \) is either equal to \( [t_0^P, \ldots, t_n^P]_{\eta} \) or \( [t_0^Q, \ldots, t_n^Q]_{\eta} \), and as \( B_O \) is a distinguisher on \( t_P \approx_M t_Q \), \( B'_O,OP?Q \) is a distinguisher.

**Lemma 22:**
For any oracle \( O \) with support \( n \), the axiom \( \forall k, k' \notin n, k \sim k' \) is \( O \)-sound.

**Proof:**
We are given a cryptographic library, an oracle \( O \) with support \( n \), and two names \( k \) and \( k' \) not in the support. We are given a distinguisher \( A_O \) over \( k \sim k' \). We define a PPTTM \( A' \) which on input \( (m, \rho_r, 1^\eta) \):
- Splits \( \rho_r \) into three distinct infinite tapes \( \rho_{so}, \rho_{ra}, \rho_{ro} \).
- Simulates \( A_O(\rho_{so}, \rho_{ro})(m, \rho_{ra}, 1^\eta) \).

Let us prove that \( A' \) is a distinguisher over \( k \sim k' \), which contradicts the unconditional soundness of this axiom when there is no oracle.

We denote \( \pi_k(\rho_s, \eta) \) the tapes where every bit of \( \rho_s \) which does not correspond to a name of \( k \) is set to 0, and similarly \( \pi_k^c(\rho_s, \eta) \) where all bits for \( k \) are set to 0. We then have for any PPTOM \( A_O \):

\[ \Pr_{\rho_s, \rho_r, \rho_O}\{A_O(\rho_s, \rho_O)([k]_{\sigma, \eta}) = 1\} \]
\[ = \Pr_{\rho_s, \rho_r, \rho_O}\{A_O(\pi_k(\rho_s, \eta), \rho_O)([n]_{\sigma, \eta}) = 1\} \]
\[ = \Pr_{\rho_{s1}, \rho_{s2}, \rho_r, \rho_O}\{A_O(\rho_{s1}, \rho_O)([n]_{\sigma, \eta}) = 1\} \]
\[ = \Pr_{\rho_{so}, \rho_s, \rho_{ra}, \rho_{ro}}\{A_O(\rho_{so}, \rho_{ro})([k]_{\sigma, \eta}) = 1\} \]
\[ = \Pr_{\rho_s, \rho_r}\{A'([k]_{\sigma, \eta}) = 1\} \]

1. Thanks to the definition of support, the oracle answers the same on \( \pi_k(\rho_s, \eta) \) and \( \rho_s \).
2. We split \( \rho_s \) in two, to replace independent tapes \( \pi_k(\rho_s, \eta) \) and \( \pi_k^c(\rho_s, \eta) \).
3. We rename random tapes.
4. By construction of \( A' \).

This shows that \( A' \) has the same advantage as \( A_O \) against \( k \sim k' \), which concludes the proof.

---

This optimized version aims to make the text more readable and logically coherent. If you need further refinement or specific sections to be addressed, please let me know.