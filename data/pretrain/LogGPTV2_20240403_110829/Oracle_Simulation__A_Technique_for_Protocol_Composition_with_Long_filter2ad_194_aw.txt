i (xI ); QI
else I 1
i (xI ); P I
id = idI then
if xR
R1
i (xR); QR
i (xR)
i (xI )
else R1
i (xR); P R
i (xR)
(cid:107)i≤N Ci(p)(cid:107)Di(p)(cid:107)I 0
i (lsidI
i , idI );
(cid:107)R0
i (lsidR
i , idR)[
j ∧ xI
id = idR then
id = idR then
j ∧ xR
id = idI then
id = idI then
1≤j≤N
lsid = lsidR
xI
i (ki,j)
if
I 1
i (ki,j); Q1
i (xI );⊥
I 1
lsid /∈ sR ∧ xI
else if xI
if
i (xI ); P I (xI )
lsid = lsidI
xR
i (kj,i)
lsid /∈ sI ∧ xR
else I 1
1≤j≤N
i (kj,i); QR
R1
i (xR);⊥
R1
else if xR
else R1
i (xR); P R
i (xR)
To conclude with transitivity, we must prove the equivalence between the two idealized
version with either P or Q.
Combining Hypothesis B-1 with Theorem 2 on the Ok simulatability of the key exchange
(hypothesis C-2) we do get the necessary equivalence to conclude:
100
∼=
(cid:107)i≤N Ci(p)(cid:107)Di(p)(cid:107)I 0
i (lsidI
i , idI );
(cid:107)R0
i (lsidR
i , idR)[
j ∧ xid = idR then
id = idR then
id = idI then
id = idI then
1≤j≤N
if
I 1
i (ki,j); P 1
lsid = lsidR
xI
i (ki,j)
else if xI
lsid /∈ sR ∧ xI
i (xI ); bad
I 1
else I 1
if
1≤j≤N
R1
I ∧ xR
i (xI ); P I
i (xI )
lsid = lsidj
xR
i (kj,i)
lsid /∈ sI ∧ xR
i (kj,i); P R
else if xR
R1
i (xR); bad
else R1
i (xR); P R
i (xR)
(cid:107)i≤N Ci(p)(cid:107)Di(p)(cid:107)I 0
i (lsidI
i , idI );
(cid:107)R0
i (lsidR
i , idR);
j ∧ xI
id = idR then
id = idR then
j ∧ xR
id = idI then
id = idI then
1≤j≤N
lsid = lsidR
xI
i (ki,j)
if
I 1
i (ki,j); Q1
i (xI );⊥
I 1
lsid /∈ sR ∧ xI
else if xI
if
i (xI )
i (xI ); P I
lsid = lsidI
xR
i (kj,i)
lsid /∈ sI ∧ xR
else I 1
1≤j≤N
R1
i (kj,i); QR
i (xR);⊥
R1
else if xR
else R1
i (xR); P R
i (xR)
F.6 Computational soundness
Lemma 4. For protocols P, Q, A, B, an oracle O, and a list Ol of protocol oracles,
AO,O(A(cid:107)P )?(B(cid:107)Q) ≺  ⇔ AO,Ol,OA?B,OP ?Q ≺ 
Proof. For protocols P, Q such that C(P )∩C(Q) = ∅, for any message m, random tape ρs and
history tape θ, we have by deﬁnition of the semantic of (cid:107) and the deﬁnition of the parallel
oracles:
OP(cid:107)Q(ρs, θ)(m) = (ρs, θ)(m)
The desired result then immediately follows.
Lemma 29. Given two protocols P, Q, random tapes ρr, ρs, a cryptographic library Mf and
an oracle O, we have:
∀M ⊃ Mf . M |=O(cid:102)tP ∼(cid:102)tQ
⇔
P ∼=O Q
101
Proof. Let us write(cid:102)tP =(cid:102)t0
P , . . . ,(cid:102)tn
P
. Without loss of generality, we assume that every distin-
guisher makes exactly n calls to the oracle, if it is not the case we simply add dummy calls
for the remaining ones.
We start by proving the top to bottom implication. Given a distinguisher BO,OP ?Q and
0, . . . , m(cid:48)
η, ρr, we let m0, . . . , mk (resp. m(cid:48)
) be the successive contents of the oracle input
tape along the computation of AO(ρs,ρO),OP (ρs) (resp. AO(ρs,ρO),OQ(ρs)). Let σ = {x0 (cid:55)→
m0, . . . , xk (cid:55)→ mk} (resp. σ(cid:48) = {x1 (cid:55)→ m(cid:48)
k}). Consider now the PPTOM AO
,
which, on input b0, . . . , bk, η, ρr, executes the same code as B, however replacing the ith call
to the oracle OP (resp. OQ), i ≤ k, using bi instead of the oracle reply.
is then what B would have queried at the k + 1 oracle call. It follows
that AO
) if bi is the reply of OP (resp. OQ) on the query
mi, for i < k. This deﬁnes an extension M of Mf .
(b0, . . . , bk, η, ρr) = mk (resp. m(cid:48)
The result of AO
1, . . . , xk (cid:55)→ m(cid:48)
gk
gk
gk
k
k
P ]]η
Q]]η
P ]]σ,η
Thanks to the Lemma 28, for every ρs, ρr, ρO, for every i ≤ k, [[ti
and [[ti
1, . . . , m(cid:48)
ρs,ρr,ρO = OQ(ρs, m(cid:48)
the interpretation of gi, for every ρs, ρr, ρO, for every i ≤ k, [[(cid:102)ti
Q]]σ(cid:48),η
and [[(cid:102)ti
ρs,ρr,ρO = OQ(ρs, m(cid:48)
i−1).
If we now consider the output of AO
0, . . . , m(cid:48)
i−1). Now, according to our deﬁnition of(cid:102)tP and thanks to
ρs,ρr,ρO = OP (ρs, m0, . . . , mi−1)
ρs,ρr,ρO = OP (ρs, m0, . . . , mi−1)
and AO
, we have that, for every ρr, ρO,
ρs,ρr,ρO , . . . , [[(cid:102)tk
gn([[(cid:102)t0
gn([[(cid:102)t0
ρs,ρr,ρO , . . . , [[(cid:102)tn
O (cid:102)tQ, which wins with the same probability as B.
on(cid:102)tP ≈M
O (cid:102)tQ. We consider φP
BO on(cid:102)tP ≈M
ρs,ρr,ρO , η, ρr) = BO,OP
P ]]η
ρs,ρr,ρO , η, ρr) = BO,OQ. Thus, Mf and AO
For the bottom to top direction, we are given a computational model M and a distinguisher
Thanks to the Lemma 28, for every ρs, ρr, ρO, for every i ≤ k,
and σP as deﬁned for(cid:102)tP , and φQ
and σQ as deﬁned for(cid:102)tQ.
form a distinguisher
AO
Q]]η
Q]]η
P ]]η
gn
gn
i
i
ρs,ρr,ρO , . . . , [[gi−1(φP
i−1)]]σP ,η
ρs,ρr,ρO )
ρs,ρr,ρO , . . . , [[gi−1(φQ
i−1)]]σQ,η
ρs,ρr,ρO ). Then, with the deﬁnition of
ρs,ρr,ρO , . . . , [[gi−1(φP
i−1)]]η
ρs,ρr,ρO )
ρs,ρr,ρO ).
[[ti
P ]]σP ,η
Q]]σQ,η
and [[ti
ρs,ρr,ρO = OQ(ρs, [[g0()]]σQ,η
ρs,ρr,ρO = OP (ρs, [[g0()]]σP ,η
(cid:102)tP , we have for every ρs, ρr, ρO, for every i ≤ k,
ρs,ρr,ρO = OP (ρs, [[g0()]]η
and [[(cid:102)ti
ρs,ρr,ρO = OQ(ρs, [[g0()]]η
[[(cid:102)ti
P ]]η
Q]]η
ρs,ρr,ρO , . . . , [[gi−1(φQ
i−1)]]η
We may now consider the PPTOM B(cid:48)O,OP ?Q, which :
• Set m0 to the result of [[g0()]]η
• For i going from 0 to n − 1:
ρs,ρr,ρO.
– set ti to the result of OP ?Q(mi)
– set mi+1 to the result of [[gi+1(t0, . . . , ti)]]σP ,η
ρs,ρr,ρO )
• set tn to the result of OP ?Q(mn)
• outputs BO(t0, . . . , tn)
102
With our previous observation, t0, . . . , tn is either equal to [[(cid:102)tP ]]η
as BO is a distinguisher on(cid:102)tP ≈M
O (cid:102)tQ, B(cid:48)O,OP ?Q is a distinguisher.
ρs,ρr,ρO or [[(cid:102)tQ]]η
ρs,ρr,ρO, and
Lemma 22. For any oracle O with support n, the axiom ∀k, k(cid:48) /∈ n, k ∼ k(cid:48) is O-sound.
Proof. We are given a cryptographic library, and oracle O with support n, and two names k,
k(cid:48) not in the support. We are given a AO which is a distinguisher over k ∼ k(cid:48). We deﬁne a
PPTTM A(cid:48) which on input (m, ρr, 1η) :
• Splits ρr into three distinct inﬁnite tapes ρso, ρra, ρro
• Simulates AO(ρso,ρro)(m, ρra, 1η)
Let us a prove that A(cid:48) is a distinguisher over k ∼ k(cid:48), which contradicts the unconditional
soundness of this axiom when there is no oracle.
We denote πk(ρs, η) the tapes where every bit of ρs which does not correspond to a name
c(ρs, η) where all bits for k are set to 0. We then have for any
of k is set to 0, and similarly πk
PPTOM AO:
ρs , ρr, 1η) = 1}
|Pρs,ρr,ρO{AO(ρs,ρO)([[k]]σ,η
=1 Pρs,ρr,ρO{AO(πk(ρs,η),ρO)([[n]]σ,η
c (ρs,η), ρr, 1η) = 1}
πk
ρs2, ρr, 1η) = 1}
=2 Pρs1,ρs2,ρr,ρO{AO(ρs1,ρO)([[n]]σ,η
ρs , ρra, 1η) = 1}
=3 Pρso,ρs,ρra,ρro{AO(ρso,ρro)([[k]]σ,η
=4 Pρs,ρr{A(cid:48)([[k]]σ,η
ρs , ρr, 1η) = 1}
1. Thanks to the deﬁnition of support, the oracle answers the same on πk(ρs, η) and ρs;
2. we split ρs in two, to replace independent tapes πk(ρs, η) and πk
3. we rename random tapes;
4. by construction of A(cid:48).
This shows that A(cid:48) has the same advantage as AO against k ∼ k(cid:48), which concludes the
c(ρs, η);
proof.
103