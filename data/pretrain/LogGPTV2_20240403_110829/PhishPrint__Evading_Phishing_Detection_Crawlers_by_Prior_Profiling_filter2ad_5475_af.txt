We used PhishPrint to evaluate 23 crawlers in a 70-day
study which found several previously unknown cloaking
weaknesses across the crawler ecosystem. We conﬁrmed
the practical impact of our ﬁndings by deploying evasive
phishing web pages and performing user studies. We also
discussed concrete mitigation measures in areas of crawling
and reporting infrastructures. We have relayed the found
weaknesses to the crawler vendors through a vulnerability
disclosure process that resulted in some remedial actions as
well as multiple vulnerability rewards.
3788    30th USENIX Security Symposium
USENIX Association
Acknowledgements
We thank Anish Chand for working on an early prototype
of PhishPrint as a proof of concept. We also like to
acknowledge Julian Gale and Christopher Martin for helping
in building the Web Scan Requestor module. We convey our
thanks to Roberto Perdisci for providing us with valuable
research advice throughout the project. We are grateful to
all the concerned PC members at IEEE SSP 2021 and Usenix
Security 2021 for providing detailed constructive feedback.
Finally, we thank Pierre Laperdrix and the AmIUnique project
team for enabling access to crucial browser ﬁngerprinting
data and code. This work was done with help of funds from
UNO Ofﬁce of Research and UNO Tolmas scholars program
whose support we hereby gratefully acknowledge.
References
[1] Advanced outlook.com security for ofﬁce 365
https://web.archive.org/web/
subscribers.
20200901032551/https://support.microsoft.
com/en-us/office/advanced-outlook-com-
security-for-office-365-subscribers-
882d2243-eab9-4545-a58a-b36fee4a46e2.
[2] Amiunique. https://amiunique.org.
[3] Browser market
share worldwide.
https:
//gs.statcounter.com/browser-market-share.
[4] Browserling. https://www.browserling.com/.
[5] Google safe browsing block all my subdomains instead
only effected one. https://support.google.com/
webmasters/thread/17514260?hl=en.
[6] Google safe browsing erroneously blocking my whole
domain and subdomains. https://support.google.
com/webmasters/thread/32022154?hl=en.
[7] Hola
better
internet –
https://hola.org/faq.
access
censored sites.
[8] Page load times.
speed-stats.
https://backlinko.com/page-
[9] Program rules – application security:
amounts for abuse-related methodologies".
//www.google.com/about/appsecurity/reward-
program/.
"reward
https:
[10] Teams powers ofﬁce 365 growth.
https:
//office365itpros.com/2020/04/30/office365-
teams-power-growth/.
[11] Virustotal. https://www.virustotal.com/gui/.
[12] Xyz domain name policies.
https://nic.
monster/files/XYZ-registry-domain-name-
policies.pdf?v=2.0.
[13] Furkan Alaca and Paul C. van Oorschot. Device
ﬁngerprinting for augmenting web authentication:
classiﬁcation and analysis of methods. In ACSAC 2016.
[14] APWG. Phishing activity trends report: 3rd quarter,
https://docs.apwg.org/reports/apwg_
2019.
trends_report_q3_2019.pdf.
[15] Michael Archambault. Microsoft security reports a mas-
sive increase in malicious phishing scams. https://
www.digitaltrends.com/computing/microsoft-
security-massive-increase-phishing-scams/.
[16] Eric Bidelman. Getting started with headless chrome.
https://developers.google.com/web/updates/
2017/04/headless-chrome, Jan 2019.
[17] Yinzhi Cao, Song Li, and Erik Wijmans.
(cross-
)browser ﬁngerprinting via OS and hardware level
features. In NDSS 2017.
[18] Zi Chu, Steven Gianvecchio, Aaron Koehl, Haining
Wang, and Sushil Jajodia. Blog or block: Detecting blog
bots through behavioral biometrics. Comput. Networks,
2013.
[19] Amit Datta, Jianan Lu, and Michael Carl Tschantz.
Evaluating anti-ﬁngerprinting privacy enhancing
technologies. In WWW 2019, pages 351–362.
[20] MDN Web Docs. Canvas api. https://developer.
mozilla.org/en-US/docs/Web/API/Canvas_API.
[21] MDN Web Docs. Webgl: 2d and 3d graphics for
https://developer.mozilla.org/en-
the web.
US/docs/Web/API/WebGL_API.
[22] Alejandro Gómez-Boix, Pierre Laperdrix, and Benoit
Baudry. Hiding in the crowd: an analysis of the
effectiveness of browser ﬁngerprinting at large scale.
In WWW 2018, pages 309–318.
[23] Luca Invernizzi, Kurt Thomas, Alexandros Kaprave-
los, Oxana Comanescu, Jean Michel Picod, and Elie
Bursztein. Cloak of visibility: Detecting when machines
browse a different web. In IEEE Symposium on Security
and Privacy, SP 2016, pages 743–758.
[24] Umar Iqbal, Steven Englehardt, and Zubair Shaﬁq.
to
CoRR,
Fingerprinting
detect browser ﬁngerprinting behaviors.
abs/2008.04480, 2020.
the ﬁngerprinters:
Learning
[25] Paul
Irish.
paulirish/headless-cat-n-mouse.
https://github.com/paulirish/headless-
cat-n-mouse, Jan 2018.
[26] Jordan Jueckstock and Alexandros Kapravelos. Visi-
blev8: In-browser monitoring of javascript in the wild.
In IMC 2019, pages 393–405.
[27] Pierre Laperdrix, Gildas Avoine, Benoit Baudry, and
Nick Nikiforakis. Morellian analysis for browsers:
Making web authentication stronger with canvas
ﬁngerprinting. In DIMVA 2019, pages 43–66.
[28] Pierre Laperdrix, Benoit Baudry, and Vikas Mishra.
Fprandom: Randomizing core browser objects to break
advanced device ﬁngerprinting techniques. In ESSoS
2017, pages 97–114.
[29] Pierre Laperdrix, Walter Rudametkin, and Benoit
Baudry. Beauty and the beast: Diverting modern web
browsers to build unique browser ﬁngerprints. In IEEE
Symposium on Security and Privacy, SP 2016, pages
878–894.
USENIX Association
30th USENIX Security Symposium    3789
[30] Pierre Laperdrix, Walter Rudametkin, and Benoit
Baudry. Mitigating browser ﬁngerprint tracking:
Multi-level reconﬁguration and diversiﬁcation.
In
10th IEEE/ACM International Symposium on Software
Engineering for Adaptive and Self-Managing Systems,
SEAMS 2015, pages 98–108.
[31] Peter Snyder Mark Pilgrim and Ben Livshits.
https://web.
randomization.
Fingerprint
archive.org/web/20200728132011/https:
//brave.com/whats-brave-done-for-my-
privacy-lately-episode3/.
[32] Sourena Marooﬁ, Maciej Korczynski, and Andrzej
Duda. Are you human?: Resilience of phishing
detection to evasion techniques based on human
veriﬁcation. In IMC 2020, pages 78–86.
[33] Angela Moscaritolo. Beware: Phishing attacks are
on the rise. https://www.pcmag.com/news/beware-
phishing-attacks-are-on-the-rise.
[34] Keaton Mowery and Hovav Shacham. Pixel perfect:
Fingerprinting canvas in HTML5. Proceedings of
W2SP, pages 1–12, 2012.
[35] Nick Nikiforakis, Wouter Joosen, and Benjamin
Livshits. Privaricator: Deceiving ﬁngerprinters with
little white lies. In WWW 2015, pages 820–830.
[36] Nick Nikiforakis, Alexandros Kapravelos, Wouter
Joosen, Christopher Kruegel, Frank Piessens, and
Giovanni Vigna. Cookieless monster: Exploring the
ecosystem of web-based device ﬁngerprinting. In 2013
IEEE Symposium on Security and Privacy, SP 2013,
pages 541–555.
[37] Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon
Ahn, Brad Wardman, and Kevin Tyers. Phishfarm: A
scalable framework for measuring the effectiveness of
evasion techniques against browser phishing blacklists.
In IEEE Symposium on Security and Privacy, SP 2019,
pages 1344–1361.
[38] Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon
Ahn, Brad Wardman, and Gary Warner.
Inside a
phisher’s mind: Understanding the anti-phishing
In eCrime
ecosystem through phishing kit analysis.
2018, pages 1–12.
[39] Adam Oest, Yeganeh Safaei, Penghui Zhang, Brad
Wardman, Kevin Tyers, Yan Shoshitaishvili, and
Adam Doupé. Phishtime: Continuous longitudinal
measurement of the effectiveness of anti-phishing
blacklists. In USENIX Security 2020, pages 379–396.
[40] Peng Peng, Limin Yang, Linhai Song, and Gang Wang.
Opening the blackbox of virustotal: Analyzing online
phishing scan engines. In IMC 2019, pages 478–485.
[41] Peter Snyder and Ben Livshits. Brave, ﬁngerprinting,
and privacy budgets.
https://web.archive.org/
web/20200809060950/https://brave.com/brave-
fingerprinting-and-privacy-budgets/.
[42] Ke Tian, Steve T. K. Jan, Hang Hu, Danfeng Yao, and
Gang Wang. Needle in a haystack: Tracking down
elite phishing domains in the wild. In IMC 2018, pages
429–442.
[43] Christof Ferreira Torres, Hugo L. Jonker, and Sjouke
Mauw. Fp-block: Usable web privacy by controlling
browser ﬁngerprinting. In ESORICS 2015, pages 3–19.
[44] Erik Trickel, Oleksii Starov, Alexandros Kapravelos,
Nick Nikiforakis, and Adam Doupé. Everyone is
different: Client-side diversiﬁcation for defending
against extension ﬁngerprinting. In USENIX Security
2019, pages 1679–1696.
[45] Phani Vadrevu and Roberto Perdisci. What you see is
NOT what you get: Discovering and tracking social engi-
neering attack campaigns. In IMC 2019, pages 308–321.
[46] Antoine Vastel, Pierre Laperdrix, Walter Rudametkin,
and Romain Rouvoy. Fp-scanner: The privacy implica-
tions of browser ﬁngerprint inconsistencies. In USENIX
Security 2018, pages 135–150.
[47] Antoine Vastel, Pierre Laperdrix, Walter Rudametkin,
and Romain Rouvoy. FP-STALKER: tracking browser
ﬁngerprint evolutions. In IEEE Symposium on Security
and Privacy, SP 2018, pages 728–741.
[48] Antoine Vastel, Walter Rudametkin, Romain Rouvoy,
and Xavier Blanc. Fp-crawlers: Studying the resilience
of browser ﬁngerprinting to block crawlers. In MADWeb
2020.
[49] David Y. Wang, Stefan Savage, and Geoffrey M.
Voelker. Cloak and dagger: dynamics of web search
cloaking. In CCS 2011, pages 477–490.
[50] Shujiang Wu, Song Li, Yinzhi Cao, and Ningfei Wang.
Rendered private: Making GLSL execution uniform
to prevent webgl-based browser ﬁngerprinting.
In
USENIX Security 2019, pages 1645–1660.
[51] Katsunari Yoshioka, Yoshihiko Hosobuchi, Tatsunori
Orii, and Tsutomu Matsumoto. Your sandbox is blinded:
Impact of decoy injection to public malware analysis
systems. J. Inf. Process., 19:153–168, 2011.
[52] Penghui Zhang, Adam Oest, Haehyun Cho, Zhibo
Sun, RC Johnson, Brad Wardman, Shaown Sarker,
Alexandros Kapravelos, Tiffany Bao, Ruoyu Wang,
et al. Crawlphish: Large-scale analysis of client-side
cloaking techniques in phishing. In Proceedings of the
IEEE Symposium on Security and Privacy, 2021.
A Breakdown of MTurk Study Results
Table 7 breaks down the results of our second user study
described in §4.2 by OS. It is to be noted that the sum of
values in the third, fourth and ﬁfth columns do not add up to
the values in the ﬁnal row. This is because of a small amount
of overlap in the ﬁngerprints across different platforms. The
ﬁnal column shows the breakdown of the 137 collisions that
were seen with the crawlers’ ﬁngerprints.
3790    30th USENIX Security Symposium
USENIX Association
OS
Windows
Chrome OS
Linux
iOS
Mac OS X
Android
All
#
Users
#
Distinct
#
Unique
#
Shared
Norm.
Entropy
#
Collide
693
35
16
29
146
88
1007
425
17
16
10
87
41
592
344
12
16
6
68
26
469
81
5
0
4
19
15
123
0.866
0.707
1.0
0.568
0.824
0.731
0.865
115
8
0
0
8
6
137
Table 7: OS-based breakdown
of ﬁngerprints collected from our second user study
B Speciﬁc Recommendations
During our proﬁling study, we saw some speciﬁc problems
with PhishTank and GSB that are discussed below along with
suitable recommendations.
B.1 PhishTank
PhishTank shows the reported URLs on their website to
allow human analysts to investigate them. We found a couple
of serious issues with PhishTank’s web portal ecosystem that
are described below:
1. We noticed that repeated URL submissions are ignored by
PhishTank and not shown in their homepage even if the
URL is being re-submitted from a different user account.
An attacker can exploit this by simply self-reporting their
URLs to PhishTank a few days before adding malicious
content to them. This will effectively prevent the URL
from ever showing up on the homepage and thus reduce
the potential variety of visitors to which the website will
get exposed. To prevent this, PhishTank should bump up
URLs to their homepage whenever they get resubmitted
by a different user account.
2. We noticed that PhishTank allows their website visitors
to open and check the new URLs either in a new window
or in an iframe in PhishTank. However, in both cases, it
is possible for an attacker to check if the Referer points
to phishtank.com and trigger benign behavior. We have
used this same evasion logic in our experiments. Thus,
unless a human analysts copies the URL and pastes it in
their URL address bar, it will always carry the Referer
artifact, thus making it easy for an attacker to decide to
cloak and evade manual analysis. Hence, we strongly
recommend PhishTank to use Referrer-Policy headers
(for example, by setting it to same-origin) to combat
such evasion strategies.
B.2 Google Safe Browsing
During the initial setup phase of our longitudinal study, we
saw a couple of serious issues with Google Safe Browsing’s
(GSB) crawler infrastructure. As these are speciﬁc to GSB,
we are reporting them separately here.