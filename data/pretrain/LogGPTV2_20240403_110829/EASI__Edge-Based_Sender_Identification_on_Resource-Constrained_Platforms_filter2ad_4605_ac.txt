is marked as malicious. This has the advantage that if the
classiﬁcation of a ﬁngerprint is not clearly possible, e.g. due to
a electromagnetic interference, the occurrence of a false alarm
is less likely. Since it is assumed that the amount of trustworthy
messages compared to malicious is signiﬁcantly higher over
the entire deployment time of the system, the reduction of
false positives, i.e. wrong alarms, is of special interest. As an
illustration, already a low false positive rate of 0.2 % would
lead to a wrong alarm every 166 ms on a common CAN bus
which transfers 3000 frames per second. At the same time, a
slightly lower detection rate of malicious messages is to be
expected. However, many attacks require the transmission of
more than one message, which increases the general attack
detection probability. In order to increase robustness against
outliers, e.g. triggered by electromagnetic interferences, and
to reduce the required computational effort, the system uses a
further threshold tk
init. Since it is known
in advance which ECU is authorized to use an identiﬁer, only
the sender’s probability for the corresponding ECU is initially
calculated. Only if this probability undercuts tk
min, the message
is marked as suspicious and the probabilities of the remaining
ECUs are calculated. If one of these probabilities exceeds
max, the message is ﬁnally marked as
the upper threshold tk
malicious. In order to determine the threshold parameters,
a statistical analysis of validation sets for the vehicle is
used. Either a single value can be deﬁned for all vehicles as
presented in this work, or an individual one, ﬁtted to the actual
bus architecture, to satisfy the needs of the car manufacturer.
2) Unmonitored ECU: Here, three cases must be consid-
ered. If the signal of the unmonitored ECU is very similar to
an ECU known to the system, which is not allowed to use
min = (1− α)∗ avgP k
the current identiﬁer, the attack is detected as in the previous
section. Should the signal from the unmonitored ECU be equal
to the signal of the authorized ECU, the attack cannot be
detected. Signals which are not similar to any of the known
signals will lead to an increase in messages that have been
classiﬁed as suspicious but not malicious. So,
the system
monitors the number of suspicious messages to detect this
type of attack. Each message marked as suspicious causes
an increase of a counter per ECU, which is decremented if
a trustworthy message is present. If one of these counters
exceeds a threshold, an alarm is triggered.
3) Additional Device: In addition to remote attacks, the
system is also able to detect the connection of additional de-
vices. The system is limited to the detection of simple devices,
since an attacker with physical access, appropriate knowledge
and sufﬁcient resources has basically unlimited possibilities to
manipulate a vehicle and thus bypass the system. However, this
is associated with higher effort. The detection is possible as
the topology changes when an additional device is connected
to the monitored bus, which leads to an abrupt change in the
signals of all monitored ECUs. This leads to a reduction in the
identiﬁcation probabilities of the existing ECUs in the moment
of the modiﬁcation. Thus, the number of suspicious frames
will increase. If the sum of the suspicious counters exceeds a
threshold value, an alarm is triggered.
4) Voltage-aware Attacker: Inﬂuencing the voltage levels
of all ECUs by an attacker leads to a reduction of all iden-
tiﬁcation probabilities. These are continuously monitored by
EASI, which leads to a permanent adaptation of the models,
whereby the sender identiﬁcation is retained. However, if an
attacker can abruptly and signiﬁcantly inﬂuence the voltage
level of all ECUs, so that a sufﬁciently high identiﬁcation is no
longer possible, a complete learning phase becomes necessary.
In principle, the system’s performance decreases during this
learning phase. However, a persistent and abrupt change can
be assumed as unlikely, since a standard ECU is not capable
of such a rapid discharge of the battery.
If it is possible for an attacker to inﬂuence the voltage
level of the compromised ECU, the voltage level can generally
rise or fall. However, since such changes are not abruptly
possible, the system is still able to continuously adapt the
model. In principle, an attacker has the ability to approximate
the signal of the ECU to be faked, but cannot achieve an
exact adjustment, since the general shape of the signal remains
unchanged. Even if the signals are similar, the success of such
an attack is unlikely, since an attacker has no information about
the characteristics of both the compromised and the ECU to be
faked. In addition, the signal is deﬁned by the actual topology,
while the system is able to continuously adapt the model, we
consider the system to be able to recognize such an attacker.
F. Model Adjustments
Since changes in the signal characteristics are expected, e.g.
due to aging of components or corrosion, it is necessary to ad-
just the trained model according to these concept drifts [19]. A
distinction must be made between an incremental drift, where
the changes are occurring over a longer period of time, and an
abrupt drift, where the changes are occurring spontaneously.
In order to detect these changes in the signal characteristics
6
and to react accordingly, the system monitors its performance
by calculating the average classiﬁcation probability avgP k
op of
each classiﬁer k in a sliding window. Observing the averages
offers the opportunity to detect a deterioration of the system
performance, which in turn can be utilized as an indication for
a required model update. A big difference to the initial training
is that after the deployment a non-manipulated system can no
longer be assumed, which means that the update process must
expect potential manipulation.
When a drift of a signal is recognized by the system, i.e. if
the average classiﬁcation probability of a classiﬁer decreases
for corresponding frames by more than 5 % or increases for
frames send from other ECUs by more than 10 % compared
to the reference probabilities avgP k
init, the update phase is
triggered. Within the adjustment phase, the IDS composes an
update batch with already classiﬁed ﬁngerprints from all ECUs
and thus does not require additional computing capacity. The
batch consist of those ﬁngerprints, which can still be assigned
to exactly one ECU with a probability greater than tk
max, which
is then used to adjust the corresponding model.
While this method deals with incremental drifts, it is also
necessary to handle abrupt changes. This is especially relevant
when it is not possible to generate an update batch due to
ﬁngerprints that cannot be classiﬁed with a probability greater
than tk
max. In this situation it is necessary to use the keys,
which are exchanged during the initial training phase between
the system and the observed ECUs. These can be used to
generate authenticated and thus securely labeled data, which
are necessary for a model update. Another case where abrupt
changes may occur is when the vehicle is in a workshop for re-
pair or maintenance. This may require a complete retraining of
the system, which must be triggered e.g. by a secure diagnostic
access [2]. Necessary cryptographic procedures are provided
by the AUTOSAR module Secure Onboard Communication
(SecOC) [3]. The use of cryptography for system retraining
has basically the same problem of bandwidth limitation, but is
not used continuously and without hard real-time requirements,
which is why calculations are realistic even for resource-
constrained ECUs. If, for example, 16 additional frames are
sent once for six control units, the bus utilization, which is
normally loaded by 65 % and corresponds to approximately
3000 frames/s at 500 kb/s, increases by 2.08 % for one second.
The continuous use of MACs with a length of 24 bits and
additional 8 bits for freshness values halves the available
payload and hence leads to transmitting twice the amount
of frames. This in turn results in a load of 130 %, which is
obviously not possible without structural changes. Depending
on the platform,
it would be also possible to use further
countermeasures [33], [16], [28] against poisoning attacks.
However, they are not exactly tailored for mini-batch training
on platforms with limited resources, as considered in this work.
This means that not all data can be held during the training
phase and must therefore be processed in pieces.
IV. EVALUATION
In the following sections, the presented system is evaluated
with regard to the basic sender identiﬁcation and the intrusion
detection. We use data from a prototype assembly, a Fiat 500
and a Porsche Panamera S E-Hybrid, which was also used
in [34], thus enabling a direct comparison of both approaches.
During the measurements for the initial evaluation, the vehicles
were switched on, but stationary, while no electrical consumers
have been actuated.
The prototype consists of ﬁve Arduino Unos, each
equipped with two CAN shields and supplied from the same
power source, a wall socket. The shields are identical
in
construction and use an MCP2515 [40] controller and an
MCP2551 [41] transceiver. For the assembly original cables
were used, while the bus was terminated with 120 Ω and the
stubs with 2400 Ω. Higher resistors at the ends of the stubs
are used to minimize reﬂections, as the bus topologies in
many vehicles are not implemented exactly according to the
standards in order to reduce costs. From this structure a total
of 48128 frames with random payload were recorded.
The Fiat 500 has six internal ECUs, each using up to seven
identiﬁers. In addition, two Raspberry Pis were connected,
each equipped with a CAN Shield, in order to increase the
number of ECUs. The ﬁrst Raspberry Pi, referred to as ECU 6,
was connected to the OBD-II port together with the DSO.
The second Raspberry Pi, referred to as ECU 7, was connected
directly to the bus in the trunk of the vehicle. Altogether 35129
frames were recorded from the Fiat 500, while its engine was
switched off.
The second vehicle, the Porsche Panamera, has several
separate CAN buses, whereby the powertrain domain was used
for the evaluation. The considered segment has six internal
control units and in order to increase the number as well,
two additional Raspberry Pis were connected to the bus.
These were connected together with the DSO directly to the
bus near the armrest, since the OBD-II port has no direct
connection to the observed bus. In this manner 9543 frames
were recorded from the Porsche while its engine was switched
on and off. Thus, in comparison to [34], the set additionally
contains frames of the switched-on vehicle, which exhibit
electromagnetic interference due to the hybrid system.
All data sets were divided into a training, validation and
test set. The ﬁrst 200 recorded frames from each available ECU
were used to train the models, 10 % of the succeeding data for
the validation and the remaining frames for the test set. The
signals were recorded with a PicoScope 5204 at a sampling
rate of 500 MS/s and a resolution of 8 bit. For processing, the
signals were ﬁrst converted to a differential signal, from which
a representative bit was extracted. In order to achieve realistic
results,
the conversion and sampling times of constrained
ADCs and comparators were considered when creating the
representative bit. Initially, the ﬁrst rising edge was detected
by a voltage rise above 0.2 V, which represents the beginning
of a frame. For the implementation, a comparator can be used
here. Henceforth, the system was on hold for the time of the
arbitration phase. Afterwards, two samples from each of the
following ten rising edges are recorded. Due to the presumed
sample rate of 2 MS/s, the recording was made at a distance
of 500 ns. After the detection of an edge, the time of sampling
was shifted by 25 ns per measurement already taken. After the
sample phase, which works without complex synchronization,
a representative bit was created from the 20 samples.
7
Fig. 4: Error rates for all setups with varying thresholds.
A. Sender Identiﬁcation
First, the accuracy of the introduced sender identiﬁcation is
evaluated. For this, the approach was implemented in Python,
using the Scikit Machine Learning and SciPy library. For
Logistic Regression, the Newton-CG method was used for
minimization and the abort condition was set to 1−6. For the
SVM, the Radial basis function was used as kernel and the
existing parameters were retained. No additional parameters
were necessary for the Naive Bayes classiﬁer. The average,
as well as the minimum identiﬁcation rates of the ECUs of
the three considered setups are shown in Table III. It can be
seen that, with the exception of the Porsche, there are no
signiﬁcant differences in the identiﬁcation rates between the
various machine learning algorithms. The lowest identiﬁcation
rate of the Porsche is explained by the two additionally
connected Raspberry Pis, which are identical in construction
and are located approximately at the same position on the bus.
Evaluating the Porsche with only one Raspberry Pi connected,
results in an identiﬁcation rate of 100%.
TABLE III: Identiﬁcation rates.
LR Avg
LR Min
SVM Avg
SVM Min
NB Avg
NB Min
Prototype
99.99
99.95
100
100
100
100
Fiat
100
100
99.98
99.83
100
100
Porsche Average
99.98
99.86
99.92
99.41
99.81
99.98
99.84
98.87
99.79
97.64
87.15
98.88
B. Detecting Compromised ECUs
An identiﬁcation rate of on average 99.98 % results in a
false positive rate of 0.02 %, which means that every 5000
frames a false alarm occurs. The goal of the proposed intrusion
detection is to reduce this rate, which is evaluated in this
section. Since the amount of recognized malicious frames is
another important criterion, attacks were simulated to inves-
tigate the false negative rate. For this purpose, 10 % of the
signals from the test sets were selected for each ECU and
handled as attacks. The targets of the attacks were continuously
changed so that each ECU was counterfeited by every other
ECU, which was achieved by changing the identiﬁers of the
frames into identiﬁers used by other ECUs. This ensures that
not only attacks from particularly well distinguishable devices
are considered. However, before it is possible to perform the
evaluation, it is necessary to conﬁgure the value α for the
calculation of the node-dependent upper and lower threshold.
This parameter was determined using the validation sets of
the three setups. Therefore, we calculated the False Positive
(FP) and False Negative (FN) rates, which are shown in
Figure 4 for different α values. As α = 0.8 is a good trade-off
between the FP and FN rates, we selected this value for the
following evaluation. The resulting confusion matrices for the
different setups and classiﬁers are shown in Table IV. It can
be seen how many of the original and the faked signals are
recognized correctly by the system. The rates show that the
threshold approach has reduced the FP to zero when Logistic
Regression is used. However, as mentioned in Section III-E1,
the detection rate of attacks decreases at the same time by
0.32 %. Accordingly, the chance for the Fiat setup is 0.06 % to
miss a single forged frame, 0.000036 % to miss a second and to
miss a third one the chance is already at 0.0000000216 %. This
allows EASI to detect all attacks with the given probabilities
that require sending at least one forged frame. Furthermore,
the rates of the Porsche show that
the robustness of the
system increases, since the threshold approach compensates
the minimum identiﬁcation rates, when Naive Bayes is used.
C. Detecting Unmonitored ECUs
This section evaluates the detection of attacks via unmon-
itored ECUs. Since an already existing frequency analysis is
assumed, i.e. missing and additional messages are detected, it
is necessary that the ECU to be counterfeited is ﬁrst deactivated
and then its messages are taken over by the unmonitored
ECU [8], as otherwise,
the impersonated ECU can easily
recognize forged frames [14]. We assume that the attacker
has these capabilities and that an intrusion remains unnoticed
by the vehicle. As a result,
the unmonitored ECU must
continuously send CAN frames to not get detected due to
missing frames, which in turn can be analyzed by EASI. For
evaluation, the Fiat 500 data set is used by training the system
without ECU 7 and using it
to send forged frames which
are normally send from ECU 6. These ECUs were chosen
as they are identical in construction and use the same power
supply, i.e. they have similar characteristics. Only the position
in the bus differs. Depending on the frequency of suspicious
8
 0 0.001 0.002 0.003 0.004 0.5 0.6 0.7 0.8 0.9 1Error RateAlphaFalse PositivesPrototypeFiatPorsche 0 0.005 0.01 0.015 0.02 0.025 0.5 0.6 0.7 0.8 0.9 1Error RateAlphaFalse NegativesPrototypeFiatPorscheTABLE IV: Confusion matrices of the IDS.
D. Detecting Additional ECUs
Logistic Regression
Prototype
Fiat 500
Porsche Panamera
Attack
0
1
0
1
0
1
Predicted
1
0
100
0
0.19
100
0.06
100