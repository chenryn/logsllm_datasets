# RF Fuzzing // River Loop Security

## Presenters
- **Matt Knight**
  - Senior Security Engineer at Cruise Automation
  - RF Principal at River Loop Security
  - BE in Electrical Engineering from Dartmouth College
  - Expertise: Software, hardware, and RF engineering; SDR and embedded systems

- **Ryan Speers**
  - Co-founder at River Loop Security
  - Director of Research at Ionic Security
  - BS in Computer Science from Dartmouth College
  - Expertise: Cryptography, embedded systems, IEEE standards, automated firmware analysis

## Background
- **Previous Work:**
  - "Making and Breaking a Wireless IDS" (Troopers Conference)
  - "Speaking the Local Dialect" (ACM WiSec Conference)
  - Collaborators: Ryan Speers, Sergey Bratus, Javier Vazquez, Ray Jenkins, bx, Travis Goodspeed, David Dowd
  - Focus: Idiosyncrasies in PHY implementations and mechanisms for automating RF fuzzing, bug discovery, and PHY FSM fingerprint generation

## Agenda
1. Overview of traditional fuzzing techniques (software and networks)
2. Challenges and opportunities in RF fuzzing
3. Ideal fuzzer design
4. Introduction to TumbleRF
5. TumbleRF usage example
6. Introducing Orthrus

## Traditional Fuzzing Techniques
- **What is Fuzzing?**
  - Measured application of pseudorandom input to a system
  - Why fuzz?
    - Automates discovery of crashes, corner cases, and bugs
    - Unexpected input can lead to unexpected states

- **What Can Be Fuzzed?**
  - Fuzzers generally attach to system interfaces, such as:
    - File format parsers
    - Network interfaces
    - Shared memory

- **State of the Art in Software Fuzzing**
  - Abundant fully-featured software fuzzers:
    - AFL / AFL-Unicorn
    - Peach
    - Scapy
  - Software is easy to instrument and hook at every level

## Other Applications of Fuzzing
- **Fuzzing Hardware**
  - Challenges:
    - Hardware is often unique with fewer standard interfaces
    - Simulation in a test harness may not be feasible
  - Existing Techniques:
    - AFL-Unicorn: Simulate firmware in Unicorn to fuzz
    - Bus Pirate: Permute pinouts and data rates to discover digital buses
    - JTAGulator: Permute pinouts that could match unlocked JTAG

- **Fuzzing RF**
  - **WiFuzz:**
    - MAC-focused protocol fuzzer
  - **Marc Newlin’s Mousejack Research:**
    - Injected fuzzed RF packets into nRF HID dongles while monitoring USB output
  - **Isotope:**
    - IEEE 802.11 PHY fuzzer

- **Existing RF Fuzzing Limitations**
  - Projects are often siloed and protocol-specific
  - Limited to COTS radio chipsets and typically focus on the MAC layer and above
  - Instrumenting RF state is challenging
  - Implicit trust in chipset: One can only see what the radio reports

## Trust and Physical Layer Vulnerabilities
- Not all PHY state machines are created equal
- Radio chipsets implement RF state machines differently
- Differences can be fingerprinted and exploited
- Initial results were profound
- Specially crafted PHYs can target specific chipsets while avoiding others

## RF PHYs: A Primer
- **How Radios Work:**
  - **Transmitter:**
    - Digital data (bits) → Analog RF energy
    - Discrete → Continuous
  - **Receiver:**
    - Analog RF energy → Digital data (bits)
    - Continuous → Discrete
  - Receiving involves sampling and synchronization

- **Digitally Modulated Waveforms:**
  - Preamble
  - Start of Frame Delimiter (SFD) / Sync Word
  - Data

- **RF PHY State Machines:**
  - **Preamble Detection:**
    - Hamming Distance: Number of bits that differ between two values
    - If Hamming Distance is zero, the values are equal
    - When Hamming Distance is less than or equal to a threshold, a preamble is detected

  - **Example:**
    - RF Symbol Value: 01010101
    - Preamble Correlation Value: 10101010
    - XOR Result: 11111111
    - Shift Register: 11111111
    - Hamming Distance: 8
    - If Hamming Distance ≤ threshold, a preamble is detected

## Conclusion
- RF fuzzing is a critical tool for discovering and mitigating vulnerabilities in wireless systems.
- The development of tools like TumbleRF and Orthrus aims to address the unique challenges of RF fuzzing and provide robust solutions for security testing.

---

This optimized version provides a clear, structured, and professional presentation of the content, making it easier to follow and understand.