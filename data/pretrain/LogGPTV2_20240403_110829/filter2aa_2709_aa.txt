RF Fuzzing // River Loop Security
River Loop Security
River Loop Security
Designing RF Fuzzing Tools to Expose 
PHY Layer Vulnerabilities
Matt Knight, Ryan Speers
 DEF CON 
RF Fuzzing // River Loop Security
whois
Matt Knight
•
Senior Security Engineer at Cruise 
Automation
•
RF Principal at River Loop Security
•
BE in EE from Dartmouth College
•
Software, hardware, and RF engineer
•
RF, SDR, and embedded systems
Ryan Speers
•
Co-founder at River Loop Security
•
Director of Research at Ionic Security
•
Computer Science from Dartmouth College
•
Cryptography, embedded systems, IEEE 
.., automated firmware analysis
River Loop Security
2
RF Fuzzing // River Loop Security
Background
“Making and Breaking a Wireless IDS”, Troopers
“Speaking the Local Dialect”,  ACM WiSec
•
Ryan Speers, Sergey Bratus, Javier Vazquez, Ray Jenkins, bx, Travis Goodspeed, & David Dowd
•
Idiosyncrasies in PHY implementations
Mechanisms for automating:
• RF fuzzing
• Bug discovery
• PHY FSM fingerprint generation
3
RF Fuzzing // River Loop Security
Agenda
Overview of traditional fuzzing techniques (software and networks)
> How these do and don’t easily map to RF
RF fuzzing overview and state of the art
Ideal fuzzer design
TumbleRF introduction and overview
TumbleRF usage example
Introducing Orthrus
4
RF Fuzzing // River Loop Security
Traditional Fuzzing 
Techniques
RF Fuzzing // River Loop Security
What is fuzzing?
Measured application of pseudorandom input to a system
Why fuzz?
• Automates discovery of crashes, corner cases, bugs, etc.
• Unexpected input → unexpected state
6
RF Fuzzing // River Loop Security
What can one fuzz?
Fuzzers generally attach to system interfaces, namely I/O:
• File format parsers
• Network interfaces
• Shared memory
7
RF Fuzzing // River Loop Security
Software Fuzzing State of the Art
Abundant fully-featured software fuzzers
• AFL / AFL-Unicorn
• Peach
• Scapy
Software is easy to instrument and hook at every level
What else can one fuzz?
8
RF Fuzzing // River Loop Security
Other Applications of 
Fuzzing
RF Fuzzing // River Loop Security
Fuzzing Hardware
Challenges:
• H/W is often unique, less “standard interfaces” to measure on
• May not be able to simulate well in a test harness
Some Existing Techniques:
• AFL-Unicorn: simulate firmware in Unicorn to fuzz
• Bus Pirate: permutes pinouts and data rates to discover digital buses
• JTAGulator: permutes pinouts that could match unlocked JTAG
• …
10
RF Fuzzing // River Loop Security
Fuzzing RF
WiFuzz
● MAC-focused . protocol fuzzer
Marc Newlin’s Mousejack research
● Injected fuzzed RF packets at nRF HID dongles while looking for 
USB output
isotope:
● IEEE .. PHY fuzzer
11
RF Fuzzing // River Loop Security
Existing RF Fuzzing Limitations
RF fuzzing projects are siloed / protocol-specific
● COTS radio chipsets
● Generally limited to MAC layer and up
RF state is hard to instrument
● What constitutes a crash / bug / etc?
Implicit trust in chipset – one can only see what one’s radio tells you is 
happening
12
RF Fuzzing // River Loop Security
Trust and Physical Layer Vulnerabilities
Not all PHY state machines are created equal!
Radio chipsets implement RF state machines differently
• Differences can be fingerprinted and exploited
• Initial results on .. were profound
• Specially-crafted PHYs can target certain chipsets while avoiding 
others
13
RF Fuzzing // River Loop Security
RF PHYs: A Primer
RF Fuzzing // River Loop Security
How Radios Work
Transmitter: digital data (bits) → analog RF energy
                                       discrete → continuous
Receiver: analog RF energy → digital data (bits)
                             continuous → discrete
Receiving comes down to sampling and synchronization!
15
RF Fuzzing // River Loop Security
Digitally Modulated Waveforms
16
RF Fuzzing // River Loop Security
Digitally Modulated Waveforms
Preamble
Start of Frame Delimiter (SFD) / Sync Word
Data
17
RF Fuzzing // River Loop Security
RF PHY State Machines
18
RF Fuzzing // River Loop Security
RF PHY State Machines
19
RF Fuzzing // River Loop Security
…
RF PHY State Machines
20
RF Fuzzing // River Loop Security
RF PHY State Machines
21
0
0
0
0
0
0
0
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
4
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
22
1
0
0
0
0
0
0
0
0
1
0
1
0
1
0
1
1
1
0
1
0
1
0
1
5
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
23
0
1
0
0
0
0
0
0
0
1
0
1
0
1
0
1
0
0
0
1
0
1
0
1
3
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
24
1
0
1
0
0
0
0
0
0
1
0
1
0
1
0
1
1
1
1
1
0
1
0
1
6
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
25
0
1
0
1
0
0
0
0
0
1
0
1
0
1
0
1
0
0
0
0
0
1
0
1
2
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
26
1
0
1
0
1
0
0
0
0
1
0
1
0
1
0
1
1
1
1
1
1
1
0
1
7
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
27
0
1
0
1
0
1
0
0
0
1
0
1
0
1
0
1
0
0
0
0
0
0
0
1
1
→ RF Symbol Value
Preamble Correlation Value
XOR Result
→ Shift Register →
Hamming Distance
Hamming Distance
● # bits that are different between two values
● If , values are equal
When Hamming Distance <= some threshold, a 
preamble has been detected
RF Fuzzing // River Loop Security
RF PHY State Machines
28
1
0
1
0
1
0
1