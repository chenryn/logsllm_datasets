title:Hijacking Bitcoin: Routing Attacks on Cryptocurrencies
author:Maria Apostolaki and
Aviv Zohar and
Laurent Vanbever
2017 IEEE Symposium on Security and Privacy
Hijacking Bitcoin: Routing Attacks on Cryptocurrencies
https://btc-hijack.ethz.ch
Maria Apostolaki
ETH Zürich
PI:EMAIL
Aviv Zohar
The Hebrew University
PI:EMAIL
Laurent Vanbever
ETH Zürich
PI:EMAIL
Abstract—As the most successful cryptocurrency to date,
Bitcoin constitutes a target of choice for attackers. While many
attack vectors have already been uncovered, one important vector
has been left out though: attacking the currency via the Internet
routing infrastructure itself. Indeed, by manipulating routing
advertisements (BGP hijacks) or by naturally intercepting trafﬁc,
Autonomous Systems (ASes) can intercept and manipulate a large
fraction of Bitcoin trafﬁc.
This paper presents the ﬁrst taxonomy of routing attacks and
their impact on Bitcoin, considering both small-scale attacks,
targeting individual nodes, and large-scale attacks, targeting the
network as a whole. While challenging, we show that two key
properties make routing attacks practical: (i) the efﬁciency of
routing manipulation; and (ii) the signiﬁcant centralization of
Bitcoin in terms of mining and routing. Speciﬁcally, we ﬁnd that
any network attacker can hijack few (<100) BGP preﬁxes to
isolate ∼50% of the mining power—even when considering that
mining pools are heavily multi-homed. We also show that on-path
network attackers can considerably slow down block propagation
by interfering with few key Bitcoin messages.
We demonstrate the feasibility of each attack against the
deployed Bitcoin software. We also quantify their effectiveness on
the current Bitcoin topology using data collected from a Bitcoin
supernode combined with BGP routing data.
The potential damage to Bitcoin is worrying. By isolating parts
of the network or delaying block propagation, attackers can cause
a signiﬁcant amount of mining power to be wasted, leading to
revenue losses and enabling a wide range of exploits such as
double spending. To prevent such effects in practice, we provide
both short and long-term countermeasures, some of which can
be deployed immediately.
I. INTRODUCTION
With more than 16 million bitcoins valued at ∼17 billion
USD and up to 300,000 daily transactions (March 2017),
Bitcoin is the most successful cryptocurrency to date. Re-
markably, Bitcoin has achieved this as an open and fully
decentralized system. Instead of relying on a central entity,
Bitcoin nodes build a large overlay network between them
and use consensus to agree on a set of transactions recorded
within Bitcoin’s core data structure: the blockchain. Anyone
is free to participate in the network which boasts more than
6,000 nodes [4] and can usually connect to any other node.
Given the amount of money at stake, Bitcoin is an obvi-
ous target for attackers. Indeed, numerous attacks have been
described targeting different aspects of the system including:
double spending [43], eclipsing [31], transaction malleabil-
ity [21], or attacks targeting mining [24], [44], [38] and mining
pools [23].
© 2017, Maria Apostolaki. Under license to IEEE.
DOI 10.1109/SP.2017.29
375
One important attack vector has been overlooked though:
attacking Bitcoin via the Internet infrastructure using routing
attacks. As Bitcoin connections are routed over the Internet—
in clear text and without integrity checks—any third-party
on the forwarding path can eavesdrop, drop, modify, inject,
or delay Bitcoin messages such as blocks or transactions.
Detecting such attackers is challenging as it requires infer-
ring the exact forwarding paths taken by the Bitcoin trafﬁc
using measurements (e.g., traceroute) or routing data (BGP
announcements), both of which can be forged [41]. Even
ignoring detectability, mitigating network attacks is also hard
as it
is essentially a human-driven process consisting of
ﬁltering, routing around or disconnecting the attacker. As an
illustration, it took Youtube close to 3 hours to locate and
resolve rogue BGP announcements targeting its infrastructure
in 2008 [6]. More recent examples of routing attacks such as
[51] (resp. [52]) took 9 (resp. 2) hours to resolve in November
(resp. June) 2015.
One of the reasons why routing attacks have been over-
looked in Bitcoin is that they are often considered too chal-
lenging to be practical. Indeed, perturbing a vast peer-to-peer
network which uses random ﬂooding is hard as an attacker
would have to intercept many connections to have any impact.
Yet, two key characteristics of the Internet’s infrastructure
make routing attacks against Bitcoin possible: (i) the efﬁciency
of routing manipulation (BGP hijacks); and (ii) the centraliza-
tion of Bitcoin from the routing perspective. First, individuals,
located anywhere on the Internet, can manipulate routing to
intercept all the connections to not only one, but many Bitcoin
nodes. As we show in this paper, these routing manipulations
are prevalent today and do divert Bitcoin trafﬁc. Second, few
ASes host most of the nodes and mining power, while others
intercept a considerable fraction of the connections.
This work In this paper, we present the ﬁrst taxonomy of
routing attacks on Bitcoin, a comprehensive study of their
impact, and a list of deployable countermeasures. We consider
two general attacks that AS-level attackers can perform. First,
we evaluate the ability of attackers to isolate a set of nodes
from the Bitcoin network, effectively partitioning it. Second,
we evaluate the impact of delaying block propagation by
manipulating a small number of key Bitcoin messages. For
both exploits, we consider node-level attacks along with more
challenging, but also more disruptive, network-wide attacks.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
Partitioning attacks The goal of a partition attack is to
completely disconnect a set of nodes from the network. This
requires the attacker to divert and cut all the connections
between the set of nodes and the rest of the network.
We describe a complete attack procedure in which an at-
tacker can veriﬁably isolate a selected set of nodes using BGP
hijacks. Our procedure is practical and only requires basic
knowledge of the Bitcoin topology, namely the IP addresses of
the nodes the attacker wants to isolate. Due to the complexity
of the Bitcoin network (e.g. multi-homed pools, and secret
peering agreements between pools), the initial isolated set
might contain nodes that leak information from and to the rest
of the network. We explain how the attacker can identify and
remove these leakage points until the partition is complete.
Delay attacks The goal of a delay attack is to slow down the
propagation of blocks towards or from a given set of nodes.
Unlike partition attacks, which require a perfect cut, delay
attacks are effective even when a subset of the connections
are intercepted. As such, attackers can perform delay attacks
on connections they are naturally intercepting, making them
even harder to detect.
We again describe a complete attack procedure an attacker
can run on intercepted Bitcoin trafﬁc so that the delivery of
blocks is delayed by up to 20 minutes. The procedure consists
of modifying few key Bitcoin messages while making sure that
the connections are not disrupted.
Practicality We showcase the practicality of each attack and
evaluate their network-wide impact using a comprehensive set
of measurements, simulations and experiments.
Regarding partitioning attacks, we show that hijacks are
effective in diverting Bitcoin trafﬁc by performing a hijack in
the wild against our own nodes. We ﬁnd that it takes less than
90 seconds to re-route all trafﬁc ﬂows through the attacker
once a hijack is initiated. We also show that any AS in the
Internet hijacking less than 100 preﬁxes can isolate up to 47%
of the mining power, and this, even when considering that
mining pools are multi-homed. Hijacks involving that many
preﬁxes are frequent and already divert Bitcoin trafﬁc.
Regarding delay attacks, we show that an attacker inter-
cepting 50% of a node connections can leave it uninformed
of the most recent Bitcoin blocks ∼60% of the time. We also
show that intercepting a considerable percentage of Bitcoin
trafﬁc is practical due to the centralization of Bitcoin at
the routing level: one AS, namely Hurricane Electric, can
naturally intercept more than 30% of all Bitcoin connections.
Impact on Bitcoin The damages caused to Bitcoin in case
of a successful routing attack can be substantial. By isolating
a part of the network or delaying the propagation of blocks,
attackers can force nodes to waste part of their mining power
as some of the blocks they create are discarded. Partitioning
also enables the attacker to ﬁlter transactions that clients try to
include in the blockchain. In both cases, miners lose potential
revenue from mining and render the network more susceptible
to double spending attacks as well as to selﬁsh mining
attacks [24]. Nodes representing merchants, exchanges and
other large entities are thus unable to secure their transactions,
or may not be able to broadcast them to the network to begin
with. The resulting longer-term loss of trust in Bitcoin security
may trigger a loss of value for Bitcoin. Attackers may even
short Bitcoin and gain from the resulting devaluation [35].
Our work underscores the importance of proposed modi-
ﬁcations which argue for encrypting Bitcoin trafﬁc [47] or
trafﬁc exchanged among miners [34]. Yet, we stress that not all
routing attacks will be solved by such measures since attackers
can still disrupt connectivity and isolate nodes by dropping
Bitcoin packets instead of modifying them.
Contributions Our main contributions are:1
• The ﬁrst comprehensive study of network attacks on Bitcoin
(Section III) ranging from attacks targeting a single node to
attacks affecting the network as a whole.
• A measurement study of the routing properties of Bitcoin
(Section VI). We show that Bitcoin is highly centralized:
few ASes host most of the nodes while others intercept a
considerable fraction of the connections.
• A thorough evaluation of the practicality of routing attacks
(partitioning and delay attacks). Our evaluation is based on
an extensive set of measurements, large-scale simulations
and experiments on the actual Bitcoin software and network.
• A comprehensive set of countermeasures (Section IX),
which can beneﬁt even early adopters.
While our measurements are Bitcoin-speciﬁc, they carry
important lessons for other cryptocurrencies which rely on a
randomly structured peer-to-peer network atop of the Internet,
such as Ethereum [1], Litecoin [9], and ZCash [14], [45].
II. BACKGROUND
A. BGP
Protocol BGP [42] is the de-facto routing protocol that reg-
ulates how IP packets are forwarded in the Internet. Routes
associated with different IP preﬁxes are exchanged between
neighboring networks or Autonomous Systems (AS). For any
given IP preﬁx, one AS (the origin) is responsible for the
original route advertisement, which is then propagated AS-
by-AS until all ASes learn about it. Routers then set their
next hop and pick one of the available routes offered by their
neighbors (this is done independently for each destination).
In BGP, the validity of route announcements is not checked.
In effect, this means that any AS can inject forged information
on how to reach one or more IP preﬁxes, leading other ASes to
send trafﬁc to the wrong location. These rogue advertisements,
known as BGP “hijacks”, are a very effective way for an
attacker to intercept trafﬁc en route to a legitimate destination.
BGP hijack An attacker, who wishes to attract all the trafﬁc
for a legitimate preﬁx p (say, 100.0.0.0/16) by hijacking could
either: (i) announce p; or (ii) announce a more-speciﬁc (longer)
1Our software, measurements and scripts can be found online at
https://btc-hijack.ethz.ch
376
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
preﬁx of p. In the ﬁrst case, the attacker’s route will be in direct
competition with the legitimate route. As BGP routers prefer
shorter paths, the attacker will, on average, attract 50% of the
trafﬁc [30]. In the second case, the attacker will attract all the
trafﬁc (originated anywhere on the Internet) addressed to the
destination as Internet routers forward trafﬁc according to the
longest-match entry. Note that trafﬁc internal to an AS cannot
be diverted via hijacking as it does not get routed by BGP but
by internal routing protocols (e.g., OSPF).
For instance, in order to attract all trafﬁc destined to p,
the attacker could advertise 100.0.0.0/17 and 100.0.128.0/17.
Routers in the entire Internet would then start forwarding any
trafﬁc destined to the original /16 preﬁx according to the two
covering /17s originated by the adversary. Advertising more-
speciﬁc preﬁxes has its limits though as BGP operators will
often ﬁlter preﬁxes longer than /24 [33]. Yet, we show that
the vast majority of Bitcoin nodes is hosted in shorter preﬁxes
(Section VI) and is thus susceptible to hijacking.
By default, hijacking a preﬁx creates a black hole at the
attacker’s location. However, the attacker can turn a hijack
into an interception attack simply by making sure she leaves
at least one path untouched to the destination [41], [30].
B. Bitcoin
Transactions Transaction validation requires nodes to be
aware of the ownership of funds and the balance of each
Bitcoin address. All this information can be learned from
the Bitcoin blockchain: an authenticated data structure that
effectively forms a ledger of all accepted transactions. Bitcoin
main innovation lies in its ability to synchronize the blockchain
in an asynchronous way, with attackers possibly attempting
to disrupt the process. Synchronization is crucial: conﬂicting
transactions attempting to transfer the exact same bitcoins to
different destinations may otherwise be approved by miners
that are unaware of each other.
Block creation Bitcoin’s blockchain is comprised of blocks,
batches of transactions, that are appended to the ledger serially.
Each block contains a cryptographic hash of its predecessor,
which identiﬁes its place in the chain, and a proof-of-work.
The proof-of-work serves to make block creation difﬁcult and
reduces the conﬂicts in the system. Conﬂicts, which take
the form of blocks that extend the same parent, represent
alternative sets of accepted transactions. Nodes converge to
a single agreed version by selecting the chain containing the
highest amount of computational work as the valid version
(usually the longest chain). The proof-of-work also serves to
limit the ability of attackers to subvert the system: they cannot
easily create many blocks, which would potentially allow them
to create a longer alternative chain that will be adopted by
nodes and thus reverse the transfer of funds (double spend).
The difﬁculty of block creation is set so that one block is
created in the network every 10 minutes on average which
is designed to allow sufﬁcient time for blocks to propagate
through the network. However, if delays are high compared to
the block creation rate, many forks occur in the chain as blocks
are created in parallel. In this case, the rate of discarded blocks
(known as the orphan rate or the fork rate) increases and the
security of the protocol deteriorates [20], [26], [49]. Newly
created blocks are propagated through the network using a
gossip protocol. In addition to the propagation of blocks, nodes
also propagate transactions between them that await inclusion
in the chain by whichever node creates the next block.
Network formation Bitcoin acts as a peer-to-peer network
with each node maintaining a list of IP addresses of potential
peers. The list is bootstrapped via a DNS server, and additional
addresses are exchanged between peers. By default, each node
randomly initiates 8 unencrypted TCP connections to peers in
different /16 preﬁxes. Nodes additionally accept connections
initiated by others (by default on port 8333). The total number
of connections nodes can make is 125 by default.
Nodes continually listen to block announcements which are
sent via INV messages containing the hash of the announced
block. If a node determines that it does not hold a newly
announced block, it sends a GETDATA message to a single
neighbor. The peer then responds by sending the requested
information in a BLOCK message. Blocks that are requested
and do not arrive within 20 minutes trigger the disconnection
of the peer and are requested from another. Transaction prop-
agation occurs with a similar sequence of INV, GETDATA,
and TX messages in which nodes announce, request, and share
transactions that have not yet been included in the blockchain.
Mining pools Mining pools represent groups of miners that
divide block creation rewards between them in order to lower
the high economic risk associated with infrequent (but high)
payments. They usually operate using the Stratum protocol
[15]. The pool server is connected to a bitcoind node that
acts as a gateway to the Bitcoin network. The node collects
recent information regarding newly transmitted transactions
and newly built blocks which are then used to construct a
new block template. The template header is then sent via the
Stratum server to the miners who attempt to complete it to
a valid block. This is done by trying different values of the
nonce ﬁeld in the header. If the block is completed, the result
is sent back to the Stratum server, which then uses the gateway
node to publish the newly formed block to the network.
Multi-homing Mining pools often use multiple gateways
hosted by diffrent Internet Service Providers. We refer to the
number of different ISPs a pool has as its multi-homing degree.
III. ROUTING ATTACKS ON BITCOIN
In this section, we give an overview of the two routing
attacks we describe in this paper: (i) partitioning the Bitcoin
network (Section III-A); and (ii) delaying the propagation of
blocks. For each attack, we brieﬂy describe its effectiveness
and challenges as well as its impact on the Bitcoin ecosystem
(Section III-B).
A. Partitioning the Bitcoin Network
In this attack, an AS-level adversary seeks to isolate a set of
nodes P from the rest of the network, effectively partitioning
377
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
miners
A
B
Stratum
AS2
C
D
AS1
mining  
pool
E
AS3
AS8
AS7