| quit |
| |
+—————————————+
SQL>
命令解释
参数 描述
help 列出所有表
help tablename 查询表所有数据,类似select * from tablename
quit 退出
4. 编译支持 ODBC 的 zabbix
增加ODBC的支持,需要增加如下参数.起先我没有加这个参数，我需要重新编译一次
--with-unixodbc[=ARG] use odbc driver against unixODBC package
5. 配置监控项
配置数据库监控项:
属性 描述
Type 类型,选择监控数据库.
Key 监控项key
db.odbc.select[unique_description,data_source_name]
unique_description 描述，要唯一
data_source_name odbc.ini中定义的数据源名称
User name 数据库用户名 (可选,如果odbc.ini中已经定义)
Password 数据库密码 (可选,如果odbc.ini中已经定义)
SQL query SQL语句
Type of information 返回值类型,如果类型选错了,这个监控项会不可用
6. 注意事项
 查询语句执行时间不能超过配置的超时时间
 查询只允许返回一个值.
 如果查询语句返回了多个列,它只读取第一列
 如果查询语句返回了多行,它读取第一条
 SQL语句必须是 select开头,只能是查询语句.
 SQL语句不能包含换行符
7. 错误消息
从zabbix 2.08开始ODBC提供如下详细的错误信息:
Cannot execute ODBC query:[SQL_ERROR]:[42601][7][ERROR: syntax error at or near “;”; Error while executing the
query]|
————————- ——— —– | ——————————————————————- |
| | | `- Native error code `- error message. `-
Record separator
| | `-SQLState
`- Zabbix message `- ODBC return code
错误消息最长不能超过128字节,因此错误消息太长会被截断.
zabbix history trends 历史与趋势数据详解
zabbix会收集历史数据（所有的数据都成为过去，O(∩_∩)O哈！），以及还会收集每小时的平均数据作为趋势数据，
每小时才收集一次，所以trends（趋势）暂用的资源很小。
1. 保留历史数据
我们可以通过如下方式来设置保留数据的时长:
 监控项（item）配置里
 匹配更新监控项（item）
 设置Housekeeper tasks
Housekeeper 会定期删除过期的数据。如果数据不是特别有意义，建议你把保留时间设置短一些。可能你会说，那
我想看我以前的数据图怎么办？好说，老数据一般不用精确到分秒，只要小时的平均数据即可，这样的话，趋势数
据保留久一点即可。例如保存历史记录14天，趋势数据5年（5年，你孩子都从小学一年级到五年级了）
备注：如果 history 设置为 0（设置为 0的人是不想看历史数据或者硬盘没空间么？），zabbix只会获取 item 的值，
然后用与触发器，然后就没有然后了，不会存到数据库的。
2. 保留趋势数据
你可以通过如下方式设置保留趋势数据的周期
 监控项配置表单
 批量更新监控项
 设置Housekeeper tasks
一般来说趋势数据都设置的时间都很长，但是时间超过了Housekeeper的老数据还是会被它删除。
备注：如果trends设置为0，zabbix server压根不会计算和存储趋势数据。
3. 注意事项
重启服务器会丢失数据导致这个小时的平均数据不准确。你的数据是什么类型的，那么趋势数据也是什么类型的。
整数的数据特别要注意一个问题，如果你一共获取了两个值，其中一个0，一个1，那么他们的平均值是0，而不是
0.5
zabbix 自定义用户 key 与参数 User parameters
为什么要自定义 KEY
有时候我们想让被监控端执行一个zabbix没有预定义的检测，zabbix的用户自定义参数功能提供了这个方法。我们
可以在客户端配置文件zabbix_angentd.conf里面配置UserParameter.
语法如下:
UserParameter=key,command
用户自定义参数包含一个key和一个命令，key必须整个系统唯一，配置好之后，重启客户端。然后配置item,在key
的位置填上我们自定义的key即可。用户自定义参数里指定的脚本由zabbix agent来执行，最大可以返回512KB的
数据.
用户自定义 key 实例
 简单点的命令示例：
UserParameter=ping,echo 1
如果调用ping这个key，将会收到返回值1.
 更复杂的命令示例:
UserParameter=mysql.ping,mysqladmin -uroot ping|grep -c alive
如果返回1表示MySQL运行中，如果返回0表示MySQL挂了
 灵活的自定义key：
如下为灵活的用户自定义参数
UserParameter=key[*],command
参数 描述
Key 唯一. [*]表示里面可以传递多个参数
Command 需要执行的脚本，key的[]里面的参数一一对应$1到$9，一共9个参数。$0表示脚本命令.
实例
 示例1
UserParameter=ping[*],echo $1
ping[0] – 将一直返回0
ping[aaa] – 将一直返回 ‘aaa’
 示例2
UserParameter=mysql.ping[*],mysqladmin -u$1 -p$2 ping | grep -c alive
如下参数用于监控MYSQL，并且可以传递用户名和密码。
mysql.ping[zabbix,our_password]
 示例3
统计一个文件中有多少行被匹配?
UserParameter=wc[*],grep -c “$2″ $1
如下方法将会返回文件中出现指定字符的行数
wc[/etc/passwd,root]
wc[/etc/services,zabbix]
注意事项
1) 如果需要使用命令行里面出现$2这种变量，那么你要使用两个$$2，例如awk ’{ print $$2 }’，之前就遇到过
这个问题，不停的测试自己脚本输出正常，但是zabbix却拿不到数据，原来是出在这里。为了防止和参数冲突，
所以zabbix做了这个规定。
2) zabbix禁止使用一些不安全的参数，如下：
\ ‘ ” ` * ? [ ] { } ~ $ ! & ; ( )  | # @
3) 从zabbix 2.0开始，zabbix返回文本数据可以是空格。
zabbix 值映射 Value mapping
1. 介绍
zabbix为了显示更人性化的数据，在使用过程中，我们可以将获取到得数据映射为一个字符串。比如，我们写脚本
监控MySQL是否在运行中， 一般返回0表示数据库挂了，1表示数据库正常，还有各种各样的监控都是返回0，1，
2，3这样的数据，监控页上显示的都是数据字，完全不知道是什么意思。 这个时候我们可以使用zabbix的值映射，
例如这边的MySQL架空0映射为”离线”，1映射为“在线”或者用于备份的监控,做如下映射:
 ‘F’ → ‘Full’
 ‘D’ → ‘Differential’
 ‘I’ → ‘Incremental’
在配置zabbix item表单中，我们可以看到如下：
点击show value mappings
选择我们需要的映射即可。在zabbix 2.2之前只有数字（无符号）数据item才能使用值映射，在之后支持浮点数和
字符类型。
如何定义值映射
点击Administration （管理）→ Genera（l 常规），导航栏的右侧，下拉选择“Value mapping”，点击 Create value map
(创建值映射)
参数说明:
参数 描述
Name 值映射名称，唯一.
Mapping 映射对.
zabbix Applications 使用介绍
介绍
Applications（我们翻译为应用程序）是 item 的一个组。例如我们要监控 MySQL，我们可以将所有和 MySQL 相关
的item放到这个应用程序中。例如MySQL的availability of MySQL, disk space, processor load, transactions per second,
number of slow queries都可以放到这个Applications里。
点击Monitoring → Latest data，可以看到所有数据都是根据application来排列的，然后点击application前面的加
号，可以看到应用程序中相关items的数据。一个item可以属于多个application。如果你有这么做，你可以在多个
application里面看到相关item的数据。
配置
先创建应用程序，然后将item连接到这个应用程序中即可。
创建应用程序
1) 点击Configuration（配置） → Hosts（主机）或者Templates（模板）
2) 点击需要创建应用程序的Hosts或者Templates
3) 点击Create application（创建应用程序）
4) 键入application（应用程序）名称
在配置 item 的表单中也可以创建一个应用程序，你可以按住 shif 然后选择多个应用程序，那么在多个应用程序里
面都可以见到当前item了。
zabbix 触发器 triggers
触发器介绍
触发器(triggers)是什么？触发器使用逻辑表达式来评估通过item获取到得数据是处于哪种状态，item一收回数据，
讲解任务交给触发器去评估状态，明白触发器是怎么一回事了把？
在触发器表达式中我们可以定义哪些值范围是合理，哪些是不合理的，如果出现不合理的值，触发器会把状态改为
PROBLEM。接下来就到了报警以及发邮件,这步在讲完触发器之后开始讲。别落下ttlsa的zabbix教程哦。
触发器状态
值 描述
OK 触发器的正常状态. 老版本的zabbix中叫做FALSE
PROBLEM 非正常状态,例如数据库挂了,系统负载高了,都会是这个状态. 老版本zabbix中叫TRUE
zabbix server item 每次获取到一个新值都会使用触发器表达式计算它的状态如果使用基于时间的表达式 (例如：
nodata(), date(), dayofmonth(), dayofweek(), time(), now()), zabbix timer每30秒会重新计算一次。
创建触发器
创建触发器步骤:
1) 点击Configuration（配置） → Hosts（主机）
2) 点击hosts（主机）相关行的trigger
3) 点击右上角的创建触发器（create trigger），你也可以修改列表中的触发器
4) 在表单中输入相应的信息
参数介绍
参数 描述
Name 触发器名称
名称可以包含宏变量： {HOST.HOST}, {HOST.NAME}, {HOST.CONN}, {HOST.DNS}, {HOST.IP},
{ITEM.VALUE}, {ITEM.LASTVALUE} and {$MACRO}.
$1, $2…$9 可以被用来关联表达式的常量
示例：
name：Processor load above $1 on {HOST.NAME}”
表达式：system.cpu.load[percpu,avg1].last(0)}>5
会显示为：Processor load above 5 on ttlsa云服务器
Expression 计算触发器状态的逻辑表达式，这边设置为上一次值等于0
Multiple 通过设置该选项，你可以在触发器产生problem的时候触发一个事件
PROBLEM
events
generation
Description 触发器的描述,一般name写的不清楚，这边可以具体描述这个触发器的作用，例如nginx当前离
线，请处理等等。Zabbix 2.2版本开始，支持触发器名称。
URL 在Monitoring → Triggers中，可以看到URL并且可以点击，一般情况下他需要配合触发器ID来
使用，在url中包含触发器ID（宏变量 {TRIGGER.ID}），这样可以直接点击到具体触发器中。
Severity 设置严重性级别,上图我设置为“灾难”,你可以相应的设置警告、严重等状态的触发器
Enabled 当前触发器是否启用
Trigger severity
severity 通常用来定义当前 item 的一个状态的严重性。我们可以根据不同的严重性来定义不同的事件，例如报警，
zabbix自带如下严重性定义。
严重性 定义 颜色
Not classified 未知 灰色
Information 一般信息 浅绿
Warning 警告 黄色
Average 一般问题 橙色
High 严重问题 红色
Disaster 灾难,会带来损失的那种 深红
severities 用途
 可视化显示，不同级别显示不同颜色，例如一般严重性为绿色
 声音报警,不同的级别不同声音.
 使用用户自定义媒体报警，例如严重问题发短信，其他问题发送邮件。
 根据严重性来定义是否报警
可以自定义触发器严重性以及颜色，请参考：customise trigger severity names and colours.
zabbix 自定义触发器严重性
触发器严重性介绍
触发器严重性命名以及颜色定义都可以在zabbix web后台定义，点击Administration（管理） → General （常规）
→ Trigger severities（触发器严重性）。这边定义好的颜色在每个不同主题/风格里面都是一样的。
所有系统默认的触发器名字在各国的语言包中都有翻译，但是你自定义的其他语言包不会给你翻译，因为在语言包
里面没有这一个项目。那么怎么保证各国语言包里面都能相应的翻译自定义的严重性呢?
我们知道zabbix默认定义了6个触发器严重性，分别为：Not classified、Information、Warning、Average、High、
Disaster，有些人觉得High不好理解或者觉得描述不满意，想改成Important，请看如下操作：
设置触发器名称
点击Administration（管理） → General （常规）→ Trigger severities（触发器严重性），将High改为important，
当然这里你也可以自定义你的颜色，我们这边就不再敖述了，修改完之后点击保存。
添加内容到 frontend.po
# /data/site/monitor.ttlsa.com/locale/en_US/LC_MESSAGES/frontend.po
msgid "Important"
msgstr "very Import"
备注：/data/site/monitor.ttlsa.com/是您zabbix站点根目录
创建.mo 文件
需要执行locale目录下的make_mo.sh文件，如果出现./make_mo.sh: line 4: msgfmt: command not found，那么请你
先安装msgfmt
# yum install gettext
然后执行make_mo.sh
# ./make_mo.sh
效果
随意选择一个Host的触发器列表，看左边信息，请看如下图
在自定义触发器名称之前应该显示High的，这边被我们修改成了Very Import。zabbix是一个多语言监控系统，如
果你想切换到中文环境，那么你需要修改zh_CN下的frontend.po，然后make_mo.sh创建frontend.mo。否则将只
会显示Important，如下：
这边直接显示触发器的MSGID，因为你没翻译。