4.1 Experiments with and extensions to KILL-
based authentication
To evaluate the viability of KILL-based authentication
(KBA) we explore the design space of possible KBA algo-
rithms. As we have explained, the implementation challenge
of a KBA algorithm is to calibrate the transmit power of a
reader such that it can interrogate tags freely, but does not
give the tags enough power to kill themselves.
As a ﬁrst step, we consider a simple algorithm in which
a reader ramps up power until it receives a response from
a tag.
In particular, our implementation ramps up the
reader’s power from 15 dBm to 30 dBm (the full range of our
reader) in 0.25 dB increments (the minimum supported by
our reader), transmitting a KILL command at each power
level in turn. (Our antenna provides an eﬀective 6 dB gain.)
When the reader successfully receives a reply from the target
tag, the power level is ﬁxed. The reader then sends a total
of N KILL commands, with N − 1 bogus PINs, and 1 real
PIN. We tested this algorithm with a tag placed at distances
of 40 cm to 200 cm from the antenna, in 10 cm increments.
For our tests we set N = 10; we repeated the algorithm 10
Distance Successful auths Kills
40cm
50cm
60cm
70cm
80cm
90cm
100cm
110cm
120cm
130cm
140cm
150cm
160cm
170cm
180cm
190cm
200cm
0
6
9
7
9
6
10
8
10
9
9
9
8
9
7
9
9
10
2
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
Table 4: Simple KILL-based Authentication
times at each distance. All experiments were performed in
a lab with the same setup that we used in our distance tests
(see section 3.4). If despite the initial power calibration, a
tag did not consistently respond across the authentication
session, we treat the authentication attempt as unsuccess-
ful. We report the number of successful authentications and
unintentional KILLs in Table 4.
The simple power-ramping algorithm unfortunately has a
notable weakness: If the tag is too close, the reader power
cannot be adjusted to a low enough level to avoid killing it.
These unintended kills aside, the algorithm proves fairly ro-
bust, successfully authenticating tags a majority of the time.
(In practice, of course, authentication could be repeated if
unsuccessful.) A reader with support for lower-power emis-
sion could in principle support shorter-range KBA.
A good KBA algorithm should be robust enough to sup-
port a wide variety of reader characteristics. We therefore
developed a more sophisticated KBA algorithm that tries
to avoid unintentional kills by ensuring a sharp separation
between the power levels required for read and write opera-
tions and carefully calibrating its power between these two
levels. We refer to this algorithm as scaled KBA. Scaled
KBA involves a calibration phase with ﬁve steps:
1. By means of power ramping, determine the minimum
reader power level P W RR required to read the target
tag.
2. By means of power ramping, determine the minimum
reader power level P W RW required to write to the
tag.
3. Verify the availability of minimum margin P W RW −
P W RR ≥ µ, where µ is a minimum power-margin
parameter. If not, abort.
4. Scale the reader’s power level within the range P W RR+
δ(P W RW − P W RR), for δ ∈ [0, 1].5
5. Ensure that the power level selected doesn’t allow a
tag to write to itself.
5Of course, more sophisticated scaling functions are possi-
ble.
Distance Auths Margin Write Test Kills
Failures
Failures
10cm
20cm
30cm
40cm
50cm
60cm
70cm
80cm
90cm
100cm
110cm
120cm
130cm
140cm
150cm
160cm
170cm
180cm
190cm
200cm
0
0
0
0
0
98
91
96
91
88
63
58
62
50
84
83
88
89
89
83
100
99
100
100
99
0
5
1
0
4
18
29
8
43
2
4
2
0
2
10
0
1
0
0
1
0
0
0
0
7
14
12
2
4
2
7
0
0
0
4
0
0
0
0
0
0
0
0
0
0
0
0
1
1
2
0
0
0
0
0
Table 5: Scaled KILL-based Authentication
Note, however, that steps 2 and 5 require writing to the
tag. One option is to temporarily overwrite part of the tag’s
EPC value. We used this technique and performed these
tests with our own tags. This technique will not work on
cards where all memory is permalocked read-only (such as
the Passport Card).
After some cursory tuning, we adopted µ = 2dBm and δ =
1/4 in our experiments. As in the simple KBA algorithm,
we incremented the power of the reader from 15 dBm to 30
dBm in 0.25 dB increments, and let N = 10. We evaluated
this algorithm at distances from 10 cm to 200 cm from the
antenna, in 10 cm increments.
We executed the scaled KBA algorithm 100 times at each
distance. Table 5 reports the number of successful authen-
tications at each distance. We also report authentication
failures due to detection of a power margin below µ, to a
failed write test (where the the tag’s EPC value is tem-
porarily changed when it shouldn’t be), or to an accidental
kill. Other authentication failures occur when the tag fails
to respond with an “insuﬃcient power” code on the correct
PIN. This can be caused by a number of factors, from RF
noise, or to the tag not having enough power to correctly
execute its state machine. These results are summarized in
Table 5. In Table 6, we report reader power measurements.
For 100 iterations of scaled KBA, we list the mean minimum
read and write power levels found, as well as their standard
deviations. In Table 7, we report timing results. The mean
time to determine the minimum read and write power lev-
els, and to perform the write and authentication tests, are
reported.
We see that the scaled KBA algorithm achieves its objec-
tive of reducing (and seemingly eliminating) unintentional
kills at short range. Table 6 informs us that if the minimum
read level is above 16 dBm, there is always at least a 2 dB
margin between the mean minimum read and write power
levels.
Distance
10 cm
20cm
30cm
40cm
50cm
60cm
70cm
80cm
90cm
100cm
110cm
120cm
130cm
140cm
150cm
160cm
170cm
180cm
190cm
200cm
Mean
Min.
Read
Power
15.3
15.3
15.3
15.3
15.3
15.3
15.7
15.3
15.6
17.7
18.0
21.2
20.4
22.3
19.8
20.0
19.6
21.8
18.7
21.6
SD
Min.
Read
Power
0
0
0
0
0
0.1
0.9
0.4
0.4
0.9
0.9
1.3
1.3
1.6
0.8
1.0
0.8
0.5
0.6
0.8
Mean
Min.
Write
Power
15.0
15.0
15
15
15.1
17.1
17.7
17.6
17.9
20.1
20.3
22.9
22.8
24.7
22.5
22.4
22.4
24.8
21.4
24.6
SD
Min.
Write
Power
0.0
0.2
0
0
0.1
0.2
0.8
0.4
0.4
0.8
0.9
1.3
1.2
1.5
0.8
0.8