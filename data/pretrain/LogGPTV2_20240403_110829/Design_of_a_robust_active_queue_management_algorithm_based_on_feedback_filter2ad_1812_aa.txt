title:Design of a robust active queue management algorithm based on feedback
compensation
author:Heying Zhang and
Baohong Liu and
Wenhua Dou
Design of a Robust Active Queue Management Algorithm 
Based on Feedback Compensation 
Zhang Heying 
School of Computer Science 
National University of Defense 
Technology 
Changsha 410073, China 
Liu Baohong 
Institute of Automation 
National University of Defense 
Technology 
Changsha 410073, China 
PI:EMAIL 
PI:EMAIL 
Dou Wenhua 
School of Computer Science 
National University of Defense 
Technology 
Changsha 410073, China 
PI:EMAIL
hence  they  can  obtain  more  bandwidth.  Thus,  unfairness  and  low 
efficiency  are  inherent  deficiencies  of  the  completely  distributed 
congestion  control  framework.  Further, 
traditional  end-to-end 
congestion  control  and  simple  drop-tail  queue  management  at 
routers have limited ability to assure even minimal fairness, delay or 
loss  guarantees.  Thus,  an  Active  Queue  Management  (AQM) 
mechanism  is  recommended  at  intermediate  nodes  to  improve  the 
end-to-end congestion control and provide low delay and low loss 
service in best-effort networks by actively signaling congestion early 
[1]. 
Among AQM mechanisms, Random Early Detection (RED), which 
was  originally  proposed  to  achieve  fairness  among  sources  with 
different burstiness and to control queue length, is probably the best 
known  [13].  The  performance  of  RED  has  been  evaluated  by 
simulations, analysis and experiments in real networks [7]. All of the 
studies demonstrate that RED is quite sensitive to parameter settings. 
S.Floyd,  the  designer  of  RED,  and  other  researchers  have  given 
several guidelines in parameter settings, such as “gentle_RED” [14], 
ARED [15], SRED[9] etc. To improve the fairness of RED, BRED 
[5], FRED [6], RED-PD [12] and CHOKe [10] are also proposed. 
Unfortunately  most  of 
for  changing  RED 
configurations have their own drawbacks, especially since they are 
valid  in  some  particular  regimes  of  load  or  traffic  conditions. 
Furthermore,  as  its  performance  is  improved,  RED  becomes  more 
and more complex to implement. 
The  problem  of  designing  an  AQM  mechanism  has  also  been 
approached from an optimization standpoint by formulating it as a 
convex program [4]. An optimal resource allocation can be achieved 
by  resolving  the  maximum  of  aggregate  source  utilities  subject  to 
link capacity constraints. As a result, a source algorithm executed at 
edge devices and a link algorithm executed inside the networks are 
obtained according to the optimal solution. This approach, however, 
is  originally  adopted  to  design  flow  control  mechanisms,  and  not 
specifically for AQM  mechanisms.  Consequently,  its  adaptation  to 
AQM is not straightforward. Another approach for AQM design is 
through control theory. C.V.Hollot linearized the TCP/AQM control 
system  model  and  proposed  a  PI  controller  expecting  better 
responsiveness by calculating packet drop probability based on the 
current queue length instead of the average queue length [2,3]. The 
results  of  various  simulations  show  that  PI  outperforms  RED  in 
regulating steady state queue length to a desired reference value with 
changing levels of congestion. But in either the case of a small buffer 
or a heavy load at the routers, the transition period before the queue 
converges to the target value is quite long. SMVS is another recently 
the  proposals 
1.  INTRODUCTION 
The  TCP  end-to-end  congestion  control  scheme  is  powerful  in 
preventing  congestion  collapse,  especially  when  most  of  the                                                                     
flows are responsive to packet losses in congested routers. However, 
unresponsive  flows  do  not  ,  either  intentional  or    unconsciously, 
slow down their sending rates when the network becomes congested; 
ABSTRACT 
Active Queue Management (AQM) is a very active research area in 
networking. The main objective of an AQM mechanism is to provide 
low delay and low loss service in best-effort service networks. In this 
paper  we  propose  a  new  AQM  algorithm  based  on  the  feedback 
compensation  technique  in  control  theory.  The  algorithm  is  called 
Proportional  Integral  based  series  compensation,  and  Position 
feedback compensation (PIP). By choosing the appropriate feedback 
compensation  element  and  its  parameters,  the  properties  of  the 
corrected system become dependent, to a great extent, on the series 
and feedback  compensatory  elements.  Thus,  PIP  can  eliminate  the 
error incurred by the inaccuracy in the linear system model as well as 
eliminate  the  sensitivity  to  the  changes  in  system  parameters  like 
load  level,  propagation  delay,  etc.  The  performance  of  PIP  is 
compared  to  PI  using  ns  simulations.  From  the  experiments  and 
analysis  we  conclude  that  PIP  is  more  responsive  to  and  robust 
under time-varying network conditions than PI.   
Categories and Subject Descriptors              C.2.6 
[Computer-Communication Networks]: Internetworking-Routers 
General Terms                                         Algorithms, 
Design, Experimentation, Performance 
Keywords 
Congestion  Control,  Active  Queue  Management,  Feedback 
Compensation, Robustness, Queue Length 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies  bear  this  notice  and  the  full  citation  on  the  first  page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany. 
Copyright 2003 ACM 1-58113-735-4/03/0008…$5.00. 
to 
(PIP) 
to  PI 
improve 
algorithm 
is  superior 
compensation 
length  [11].  Although  SMVS 
proposed  AQM  controller,  which  applies  a  sliding  mode  variable 
structure control and shares PI’s goal of maintaining a stable average 
queue 
in 
responsiveness,  stability  and  robustness,  it  is  difficult  to  constrain 
queue  oscillations  when  the  number  of  active  TCP  connections  is 
relatively small. 
In this paper we apply  series  and  feedback  compensation  schemes 
simultaneously  to  design  an  AQM  controller  and  develop  the 
Proportional  Integral  based  series  compensation  and  Position 
feedback 
the 
responsiveness  and  robustness  of  the  PI  controller.  By  choosing 
appropriate feedback compensation parameters, the properties of the 
corrected system can be determined mainly by series and feedback 
compensation  elements.  Thus,  PIP  can  eliminate  errors  due  to 
inaccuracies  in  the  linear  system  model  as  well  as  eliminate  the 
sensitivity  to  changes  in  system  parameters  like  load  level, 
propagation delay, etc. Simulations and analysis indicate that PIP is 
more responsive and robust than PI. It can maintain the queue length 
at a desired level with small oscillations regardless of load levels.  
The  rest  of  the  paper  is  organized  as  follows.  In  section  2,  we 
analyze  the  linear  control  system  model  and  summarize  the 
advantages  of  the  feedback  compensation  scheme.  Section  3 
develops a robust, stable PIP algorithm and gives some guidelines 
for  parameter  settings.  The  performance  of  PIP  is  compared  with 
that  of  PI  through  detailed  simulations  in  section  4.  Section  5 
discusses the performance of PIP theoretically. Finally, we conclude 
our research in Section 6. 
2.  CONTROL SYSTEM MODEL AND 
FEEDBACK COMPENSATION 
2.1 TCP/AQM Control System Model 
Nonlinear  ordinary  differential  equations,  which  describe  the 
transient behavior of  networks  with  AQM  routers  supporting  TCP 
flows, are developed in [16]. These equations are linearized in [2] 
and the linear TCP/AQM system model can be depicted as in Figure 
1, where, q0 is the reference queue size, G1(s) is the AQM controller, 
and G2(s) is the TCP window-control and queue dynamics. 
-
q(s)
G1(s)
G2(s)
q0
Figure 1. Block diagram of a linear 
 TCP/AQM control system. 
The action of an AQM control law is to mark (or drop) packets with 
probability p as a function of the measured difference between the 
real queue length q and the reference queue length q0. The transfer 
function of G2(s) is 
sG
)(
2
=
K
m
sT
)(1
2
+
)1
sT
(
1
+
               (1) 
where 
=
K m
3
(
)
2
RC
N
4
=
,
T
1
CR
2
N
2
,
T
2
=
R
with 
  R=Round-Trip Time (RTT)  
  N=active TCP sessions  
  C=link capacity (packets/sec) 
The  linear  model  described  in  equation  (1)  differs  from  the  real 
network model in the following ways: 
1.  The model considers TCP flows only and ignores other kinds 
of flows. In fact, the Internet is a mixture of various flows. 
Some sources use congestion control mechanisms like TCP, 
while  some  video  applications  adopt  a  constant  bit  rate 
(CBR)  transmission  that  is  unresponsive  to  congestion. 
Further,  different  versions  of  TCP  implementation,  such  as 
TCP Reno, TCP New-Reno and TCP Vegas, etc, will coexist 
in the Internet. Actually, the model describes the TCP Reno 
congestion control mechanism exactly.   
2.  The model describes the additive-increase and multiplicative-
decrease (AIMD) behavior of TCP while ignores slow start 
and  timeout.  The  model  is  accurate  under  most  conditions 
because congestion avoidance is the primary operating state 
of  TCP,  especially  for  long-lived  transmissions  like  FTP 
flows. In the case of short-lived flows like Telnet and Web, 
slow start and timeout will frequently occur when more than 
one packet is dropped consecutively in a single window.  
3.  When  evaluating  partials  at  the  operating  point  during 
the  number  of  active  TCP 
linearization 
connections  or  their  round-trip  times  are  assumed  constant. 
However,  these  parameters  are  highly  variable  in  time-
varying networks. 
[2],  either 
In  view  of  the  model  inaccuracy  mentioned  above,  a  regulation 
mechanism  should  be  chosen  that  could  eliminate  the  mismatch 
caused by the simple linear system model from a control standpoint. 
Moreover,  the  performance  of  the  selected  controller  should  be 
insensitive to the drift of system parameters as well. 
2.2  Feedback Compensation 
When  the  desired  transient  or  steady  state  behavior  of  a  control 
system  is  difficult  to  obtain,  compensation  elements  are  often 
introduced  into  the  system.  These  compensation  elements  are 
designed  so  that  they  help  achieve  system  performance,  i.e. 
bandwidth, phase margin, peak overshoot and steady state error, etc, 
without  modifying  the  entire  system  in  a  major  way.  Feedback 
compensation  is  one  of  the  widely  used  compensation  techniques 
because  of  its  specific  ability  to  improve  system  performance  [8]. 
The  most  significant  features  of  feedback  compensation  can  be 
summarized  in  four  aspects.  First,  the  impact  of  nonlinear 
characteristics  in  the  system  may  be  alleviated.  Second,  the  time-
constant of the element enclosed by feedback compensation can be 
decreased such that the system will react promptly. Third, feedback 
compensation  can  make  the  system  less  sensitive  to  parameter 
changes  as  well  as  robust  control  does.  Finally,  feedback 
compensation is very effective in restraining noise. With  regard  to 
the  advantages  mentioned  above,  feedback  compensation  is  well 
suited  for  TCP/AQM  systems.  Figure  2  exhibits  the  new  structure 
when  feedback  compensation 
introduced  into  the  system 
illustrated  in  Figure  1.  Here,  G1(s)  can  be  viewed  as  series 
is 
is satisfied within the dominant operation frequency of the system, 
the open-loop transfer function is approximate to 
T
≥
sG
)(
≈
1
sG
)(
sG
)(
c
                                                             (3) 
where 
compensation element, Gc(s) is the feedback compensation element 
and  G2(s)  is  the  uncorrected  system.  The  action  of  feedback 
compensation is similar to G1(s) in that it marks (or drops) packets 
with probability as a function of the queue length q. 
q0
-
-
q(s)
G1(s)
G2(s)
Figure 2.The structure of feedback compensation system. 
Gc(s)
According to the block diagram depicted in Figure 2, the open-loop 
transfer function of the system is  
sGsG
)(
)(
1
+
sGsG
)(
sG
)(
)(
=
1
2
2
c
Consider  frequency  response  of  the  inner  loop.  If  the  following 
inequality  
jwGjwG
)
(
)
(2
c
>>
1
                                             (2) 
The rationale behind the choice of parameters according to (2) is to 
force  Gc(s)  to  dominate  the  inner  loop  behavior.  Therefore  the 
designer  can  easily  determine  the  performance  of  the  corrected 
system by properly choosing the parameters of Gc(s) and G1(s). It is 
somewhat  similar  to  SMVS  in  the  sense  that  both  can  make  the 
system move along a predetermined trajectory. 
3.  THE PIP ALGORITHM 
In this section, we discuss the design of the PIP algorithm in detail. 
Considering the expression of G2(s), we apply proportional integral 
controller  in  the  forward  path.  In  essence,  PI  is  a  phase-lag 
compensation element, which makes the crossover frequency decline 
and the phase margin augment. PI is quite applicable to such systems 
that require high steady state precision rather than fast response. This 
is why the PI controller presented in [3] is sluggish in response. A PI 
controller has a transfer function of the form 
sG
)(1
τ+= 1
s
Ts
                                                   (4) 
tachometer 
feedback  and 
There are two commonly used feedback compensation techniques—
position 
feedback.  The  detailed 
comparison  of  the  two  techniques  is  described  in  Section  5.1.In 
order  to  avoid  calculating  the  aggregate  packet  arrival  rate  and  to 
improve the responsiveness of the system, we adopt the former in the 
inner loop of the block diagram depicted in Figure 2. The transfer 
function of position feedback is 
sG
=)(
c
K
h
Now, we will give rules for the design of a stable and robust AQM 
algorithm.  Three  coefficients  in  G1(s)  and  Gc(s)  need  to  be 
determined separately. 
Based on the previous discussion, Kh should satisfy the conditions 
described in (2). So we have  
>>hKjwG
(2
1
)
According to (1), we have 
K
h
>>
2
wT
(
1
2
2
wT
2
+
)(1
K
m
2
+