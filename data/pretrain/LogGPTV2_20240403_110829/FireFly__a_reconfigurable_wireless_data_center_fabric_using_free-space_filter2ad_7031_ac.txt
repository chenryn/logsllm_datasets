mirror mode, steering the beam to RX-2. RX-s also have aligned SMs to direct the beam to its detector (not shown for clarity). (b)
Galvo mirror (GM) on an FSO device can steer the beam within its coverage-cone. (c) Evaluating Galvo mirror response.
ration latency using an off-the-shelf 12" x 15" SM [4], and it is
≈250 msec. The switching latency decreases with the decrease in
the surface area, and is estimated [33] to be ≈10-20 msec latency
for the 1 cm2 SM size we envision.
Galvo Mirrors (GMs). Galvo mirrors (GMs) [2] are typically
used in laser scanning applications. Here, a small mirror, few mm
across, rotates (up to speciﬁc angular limits) around an axis on the
plane of the mirror in response to an electrical signal. The laser
beam is made to reﬂect from this mirror. The mirror rotation de-
ﬂects the reﬂected beam by a speciﬁed angle depending on the sig-
nal. Using a pair of such mirrors at right angles, we can steer the
beam within a desired rectangular cone. In our context, equipping
an FSO device with a GM enables us to target any receiver within
a pre-conﬁgured rectangular cone chosen ofﬂine. See Figure 4(b).
As proof of concept, we evaluate the response parameters of
GMs using an off-the-shelf GM [10] using the setup shown in Fig-
ure 4(b). The mirror rotation is controlled programmatically chang-
ing the applied voltage. Here, two detectors receive the reﬂected
beam from the mirror alternately as the mirror is fed by a square
wave (100 Hz) from a function generator. We measure the time
between the instant the voltage trigger is initiated (via the square
wave generator) and the time the mirror settles to its new position.
Figure 4(c) shows that the steering latency is linear w.r.t. the steer-
ing angle and ≤ 0.5 ms even for angles up to about ±20◦. We
measured the pointing error to be ≤ 10 µrad, which translates into
≈1 mm positioning error at 100 m, which is well within the 6 mm
tolerance of the FSO link.
The GM is inexpensive (≈$100) and small (few inches across).
But, off-the-shelf GMs have a somewhat higher average power con-
sumption (7 W measured) due to the use of an electro-mechanical
system. That said, MEMS-based scanning mirrors that provide the
same functionality as GMs are already being commoditized [6] and
can reduce the power to a few milliWatts.
3.3 Design Summary
In summary, the device roadmap we outlined will have: (1) a rough
form factor of 3"x6"; (2) a range of ≈100m and a misalignment tol-
erance of 6mm; (3) a power footprint of 3W (most of this is in SFP,
assuming MEMS-based GMs); and (4) an estimated per-port cost
of $300 ($100 for the SFP and $200 for the FSO+steering when
produced in volume). The two steering mechanisms impose differ-
ent constraints and tradeoffs for the FireFly network design (dis-
cussed in §4). In particular, having k SMs at an FSO can switch
the FSO beam between a set of k arbitrarily chosen but pre-aligned
receivers, while a GM on an FSO can steer the beam to any re-
ceiver within the coverage-cone that the GM has been pre-oriented
to target.
We address the ﬁrst problem of preconﬁguration in this section,
and defer the second problem to the next section. Ideally, we want
to create a dense preconﬁgured network by placing a large number
of FSO devices on each rack, with each FSO device equipped with
several SMs or high-coverage GMs. In practice, we have physical
limitations, e.g., the size/cost of the FSO devices, size of SM, angle
of GMs etc. Our goal is to design a high performance DC network
working within these size and cost constraints.
4.1 Preliminaries and Objective
Consider a FireFly network, i.e., a set of FSOs on each rack with
pre-aligned SMs or pre-oriented GMs. We can establish a candi-
date (bi-directional) link between a pair of FSOs a and b if (i) a has
an SM aligned towards b and vice-versa or (ii) a is located in the
coverage-cone of the GM at b and vice-versa. At any instant, only
one candidate link per FSO can be an active link. For example, in
Figure 4(a), links (TX, RX-1) and (TX, RX-2) are candidate links,
and link (TX, RX-1) is active in Figure 4(a)(i) while (TX, RX-2) is
active in Figure 4(a)(ii). We refer to the set of all candidate links
as the pre-conﬁgured ﬂexible topology (PCFT). Given a PCFT, we
refer to a set of candidate links that can be active simultaneously as
a realizable topology. Note that the only constraint on a set of links
to be active simultaneously is that each FSO has at most one active
candidate link incident on it, due to lack of wireless interference.
Thus, any realizable topology is a matching in the PCFT graph over
FSOs (Figure 5) and vice-versa.
5	
  RX-­‐1	
  TX	
  Ceiling	
  mirror	
  SM	
  in“glass”	
  mode	
  RX-­‐2	
  TX	
  RX-­‐1	
  RX-­‐2	
  FSO	
  link	
  SM	
  in	
  “mirror”	
  mode	
  (i)	
  (ii)	
  Ceiling	
  mirror	
  FSO	
  link	
  with	
  GM	
  Coverage-­‐angle	
  of	
  GM	
  Coverage-­‐cone	
  of	
  GM	
  Oscilloscope Laser source Detector 2 Detector 1 	
  Func&on	
  Generator	
  ~ 20 m  150 200 250 300 350 400 450 4 7 10 13 16 19Time (microseconds)Angle of steering (degrees)DataLinear fitRack-1 Rack-2 Rack-3 Rack-4 FSOs τ1 τ2 323Metric of Goodness. If we knew the expected set of trafﬁc de-
mands, then we can design a customized PCFT that is optimal for
this set. However, DC workloads are variable and unpredictable [23].
Thus, we want a metric to quantify the performance of a PCFT
that is analogous to the traditional notion of high bisection band-
width that captures the throughput of a network for arbitrary traf-
ﬁc patterns [32]. More formally, given a topology t and consider-
ing all possible partitions P of t into two equi-sized sets of racks,
the bisection bandwidth is deﬁned as minp∈P BW(t, p), where
BW (t, p) is the cut-size in t corresponding to p. However, bisec-
tion bandwidth only applies to a static topology, and is not mean-
ingful for a ﬂexible network. With ﬂexible designs such as FireFly,
the topology t itself can be changed on demand, which the bisection
bandwidth metric fails to capture.
We introduce a new notion of dynamic bisection bandwidth (DBW)
as the metric of goodness to evaluate a PCFT. The dynamic bisec-
tion bandwidth of a PCFT Π is deﬁned as follows. Let T be the
set of realizable topologies of a given PCFT Π. Then, the dy-
namic bisection bandwidth (DBW) for a PCFT Π is deﬁned as:
minp∈P maxt∈T BW(t, p). Note that this reﬂects the ability to
choose the best realizable topology t for each given partition p.
To illustrate this, consider the PCFT in Figure 5 again. If we
consider τ1 (solid lines) as a static topology, its bisection bandwidth
is zero due to the partition {(2,3), (1,4)} of racks. Similarly, we can
see that the bisection bandwidth of τ2 (dashed lines) is 2. However,
the DBW of the overall PCFT is 4, since τ1 yields a bandwidth of 4
for all equi-partitions except for {(2,3), (1,4)}, for which τ2 yields
a bandwidth of 4.
Constrained Optimization. Our goal is to design a PCFT that op-
erates within the given cost and physical constraints and optimizes
the DBW. For clarity, we focus on the SM and GM problems inde-
pendently and defer hybrid SM-GM combinations for future work.
In each case, we solve the overall budgeted PCFT selection prob-
lem in two steps. First, we develop techniques to design a PCFT
with maximum DBW for a ﬁxed conﬁguration (i.e., ﬁxing #FSOs,
coverage angle, and #SMs per FSO). Then, given the price/size
constraints, we exhaustively search the space of feasible combina-
tions of these network parameters and pick a feasible PCFT with
the highest DBW. Since preconﬁguration runs ofﬂine, this brute
force step is reasonable.
4.2 SM-PCFT Design Problem
Problem Formulation. Given the number of racks n, number of
FSOs m per rack, and the number of SMs k per FSO, the SM-
PCFT problem is determine the alignments of each SM such that
the resulting PCFT has maximum dynamic bisection bandwidth.
Said differently, we want a PCFT with maximum DBW, under
the constraint that the number of candidate links at each FSO is at
most k. From this view, the SM-PCFT problem falls in the class
of network design problems [25], but is different from prior work
due to the novel DBW objective. For instance, even the special
case of k = 1, the SM-PCFT problem reduces to constructing
an m-regular graph over n nodes with maximum (static) bisection
bandwidth. Even this simple case is harder than the well-studied
problem of determining an upper-bound on the bisection bandwidth
of m-regular graphs of size n, for which approximate results are
known only for very small values of m and n [36]
Random Graphs for SM-PCFT. One promising approach to con-
structing a SM-PCFT solution is to consider random regular graphs.
This is based on the intuition that graphs with (static) bisection
bandwidth are likely to have high DBW. (Because random graphs
have near-optimal spectral gap [21], they are good “expanders” and
have high static bisection bandwidth.) We can construct an n-node
regular graph of degree mk, and then group the mk edges on each
node into m sets of k edges each (corresponding to each of the m
FSOs). For every edge connecting a pair of FSOs (a, b), we align
one SM each of a and b towards each other. Because of the random-
ness, there is a small chance of some random instance performing
poorly; thus, we generate many different solutions, and pick the
one with the best DBW.8
4.3 GM-PCFT Design Problem
Problem Formulation. Given the DC layout, the number of racks
n, number of FSOs per rack m, and uniform coverage-angle (see
Figure 4(b)) of GMs, the GM-PCFT problem is to determine the
orientation of the GM on each FSO such that the resulting PCFT
has the maximum dynamic bisection bandwidth.
Note that we cannot directly use a random graph as a GM-PCFT
solution, since an FSO a’s neighbors in a PCFT must be colocated
in a coverage-cone of the GM at a. Thus, this problem imposes cer-
tain geometric constraints. In particular, for a pair (a, b) to form a
(bi-directional) candidate link in the resulting PCFT, the coverage-
cone of GM at a must cover b and vice-versa. A naive approach is
to iteratively pick a pair of FSOs (a, b) at a time and orient their
GMs towards each other. However, this approach may create only
one candidate link per FSO/GM, and hence, could result in a sparse
PCFT with poor DBW.
Block-based Heuristic. To address the shortcomings of the above
strawman approach, we use a “block”-based approach. The intu-
ition here is to create a random graph at a coarser block granularity,
where each block is a group of nearby FSOs that fall within a GM’s
coverage cone.
The approach runs in m iterations, and in each iteration we ﬁx
the orientation of the GM on the ith FSO of each rack, as described
below. (The numbering of FSOs is arbitrary; we just need some
ordering.) In each iteration, we randomly partition the set of racks
into disjoint blocks. The only requirement here is that each block
of racks is colocated and small enough to be covered by a GM
(when oriented appropriately) on any FSO in the DC. That is, for
each block B and FSO a /∈ B, there exists an orientation of GM
at a such that all racks in B fall within its coverage cone. At ﬁrst
glance, this partitioning requirement may seem complex, but we
observe that a simple grid-based partitioning scheme is sufﬁcient
in practice. Next, we create a random block-level matching Mi
over the blocks. Now, for each edge (B1, B2) ∈ Mi, we orient the
GM on each i-FSO in each rack within block B1 (correspondingly
B2) towards B2 (B1). By construction, the partitioning algorithm
guarantees that a GM on any i-FSO in B1 can cover (with some
orientation) all i-FSOs on racks in B2.
The partitioning in each iteration i can be different. In particular,
we can create random partitioning schemes: starting from the basic
grid, we can do a random offset to create a new partitioning scheme.
Finally, as in the case of SM-PCFT, we generate many randomized
GM-PCFT solutions, and pick the best.
5 Real-time Reconﬁguration
We consider two types of reconﬁgurations in FireFly: (1) periodi-
cally optimizing the network based on estimated demands; and (2)
triggered by certain network events (e.g., planned migrations or
elephant ﬂows).
8One subtle issue is even computing DBW is hard. To estimate
the DBW for a given random instance, we extend the Kernighan-
Lin [32] heuristic for estimating the bisection bandwidth. Our ex-
periments suggest this is within 5-7% of the true DBW. Due to
space constraints, we do not discuss the DBW estimation in depth.
324(cid:88)
i,j
max
∀b :
a s.t (a,b)∈κ
Ti,j , subject to :
la,b ≤ 1; ∀a :
(cid:88)
(cid:88)
a,b ≤ lab × C × E
f i,j
(cid:88)
(cid:88)
(cid:88)
b∈FSOs(k )
f i,j
a,b =
(cid:88)
(cid:88)
f i,j
a,b =
i,j
a
∀a, b :
∀i, j , k :
∀i, j :
b
a∈FSOs(i)
∀i, j : Ti,j ≤ Di,j
∀(a, b) ∈ κ : la,b ∈ {0, 1}; ∀i, j , a, b : f i,j