observed paths at observation points.
For only approximately 10% of the observed paths, there is a sin-
gle path from which to select the best one. However, for more than
10% of all observed paths, we obtain more than 50 paths that are
equally as good as the observed path, i.e. belong to the same type
of path (customer, provider, peering). Given these results, we be-
lieve that business relationships do not reveal sufﬁcient information
about the actual preference policies used in the Internet. They only
tell us that customer routes are preferred over peering routes, and
peering routes over provider routes. Still, an AS may learn multiple
customer, provider or peering routes for the same preﬁx. In such
a case, business relationships cannot tell which one of the equally
good routes should be selected as best.
To conclude this section, we state that the main problem inherent
to relationship inference is the incomplete information it provides
about the actual preference of paths.
5. FROM ROUTING POLICIES TO PATH
CHOICES
Section 4 showed that modeling policies both as per-preﬁx ﬁl-
ters and as business relationships has severe drawbacks. On the
one hand, relying on business relationships is more scalable as less
conﬁguration is required in the model. Unfortunately, inferred rela-
tionships are not enough to lead to correct path choices. Per-preﬁx
ﬁltering, on the other hand, allows for models highly consistent
with observed path choices, but it is not scalable as its granularity
is the ﬁnest possible. If we now want to answer the question of what
is the right granularity to implement routing policies in an Internet-
wide model, we realize that do not have a deﬁnitive answer. Our
conclusion so far is that business relationships are, in general, the
right way to set routing policies in a model. However, predicting
path choices requires more details about routing policies: one also
has to guess which path to select as best from a set of equivalent
paths, all permitted by policies.
To make the discussion more concrete, we need to introduce
some concept that will crystallize this choice of the paths some AS
performs. We call it the next-hop atom. A next-hop atom NH of an
AS X is a subset of X’s neighbors that X chooses as next-hops for
its best routes towards a given set of BGP atoms3. All BGP atoms
for which we see that an AS uses the same set of neighbors for its
best routes belong to the same next-hop atom. The aim of next-hop
atoms is to capture the distinct sets of neighboring ASs an AS re-
quires to describe its path choices towards groups of preﬁxes. Note
that next-hop atoms do not reveal why some AS prefers some paths
to others. Next-hop atoms only describe the choice ASs make, not
the reasons for their choice.
Figure 9 illustrates an example of the choice of paths made by
AS X towards ﬁve different BGP atoms. AS X is composed of two
quasi-routers, QRX 1 and QRX 2. It has three neighboring ASs: A,
B and C, each composed of a single quasi-router. The best path,
AS X chooses towards BGP atom 1, has as next-hop AS A. To
reach atoms 2 and 3, X uses as its next hop AS B, whereas the best
paths towards both atom 4 and 5 go through AS B and C. In this
example, AS X requires two quasi-routers because it has to choose
two different best paths towards atoms 4 and 5.
Figure 9: Example of path choices and next-hop atoms.
In the case of the example in Figure 9, AS X has three different
next-hop atoms: NH1 contains next-hop A towards BGP atom 1,
NH2 contains next-hop B towards BGP atom 2 and 3 (since AS
X chooses its best routes towards BGP atom 2 and 3 via AS B),
and NH3 contains next-hops B and C towards BGP atom 4 and 5
(because AS X chooses its best routes towards BGP atom 4 and 5
via AS B and AS C). Among all possible combinations of next-hop
ASs, only a subset will actually be used to send trafﬁc towards BGP
atoms. In our example, we only need three distinct combinations
of neighboring ASs towards the ﬁve considered BGP atoms. A
next-hop atom captures the coarsest granularity (across preﬁxes)
at which an AS chooses its best paths in distinct ways (among its
neighbors).
The reason to deﬁne next-hop atoms in terms of BGP atoms is
that BGP atoms deﬁne the ﬁnest granularity at which sets of pre-
ﬁxes share the same path choices. One might choose to use preﬁxes
instead of BGP atoms.
Now that we have the concept of next-hop atoms to capture the
granularity at which ASs select their paths, we can study the ob-
served granularity at which ASs choose their paths. The simplest
way an AS can select its best paths is by always using the same
set of neighbors for all preﬁxes. Such an AS would have the same
next-hop atom towards all preﬁxes. Single-homed ASs are in this
situation as they have a single neighbor from which to choose their
paths. Large transit providers on the other hand are expected to
have a large number of different next-hop atoms due to their larger
number of neighbors.
3The deﬁnition of next-hop atoms can be trivially extended to next-
hop routers if more detailed information about ASs is available.
s
S
A
f
o
e
g
a
t
n
e
c
r
e
P
100
90
80
70
60
50
40
30
1
10
100
1000
Number of different next-hop atoms
Figure 10: Number of next-hop atoms per AS.
Figure 10 shows the distribution of the number of next-hop atoms
per AS, over the 3,535 transit ASs considered in Section 2.1. We
observe that about 40% of the 3,535 ASs have a single next-hop
atom. Modeling routing policies for those ASs is trivial: they se-
lect, for all preﬁxes, the same set of neighbors. For the remaining
60% of the transit ASs, there can be between a few next-hop atoms
up to hundreds. As already mentioned, one expects that the larger
the AS, the more diverse its set of path choices, hence the larger its
set of next-hop atoms. Figure 11 conﬁrms this belief by giving, for
each of the 3,535 transit ASs, the relationship between the num-
ber of neighboring ASs and the number of next-hop atoms. A vast
majority of the ASs (94%) fall on the x = y line, i.e., have exactly
as many next-hop atoms as they have neighbors. Only some highly
connected ASs have far more next-hops atoms than neighbors (up
to 13 times).
10000
1000
100
10
1
s
m
o
t
a
p
o
h
-
t
x
e
n
f
o
r
e
b
m
u
N
1
10
100
1000
10000
Number of neighbors
Figure 11: Relationship between number of next-hop atoms
and neighbors.
One might conclude from Figure 11 that since the vast majority
of ASs have as many next-hop atoms as neighbors, per-neighbor
path choices are the rule. This is only true to some extent. Fig-
ure 11 does not give any information about how many neighboring
ASs any next-hop atom contains. Among all next-hop atoms from
our 3,535 transit ASs, more than 75% contain a single neighboring
AS (see Figure 12). Only for those next-hop atoms can we con-
ﬁgure per-neighbor policies. For the remaining next-hop atoms,
preferring a single over all others does not work. In that case, it
cannot be only local-pref that decides about the choice of the
best path, but other rules like MED, IGP cost or other tie-breaking
steps of the BGP decision process. One cannot hope to model such
detailed information about path choices by routers, especially by
relying only on BGP data from a limited set of vantage points.
s
m
o
t
a
p
o
h
-
t
x
e
n
f
o
e
g
a
t
n
e
c
r
e
P
80
70
60
50
40
30
20
10
0
1
3
2
Number of neighboring ASs in next-hop atoms
4
5
6
7
8
9
Figure 12: Neighboring ASs in next-hop atoms.
Even though per-neighbor path preferences appear quite com-
mon in the Internet, a non-negligible fraction of the path choices
are made not by routing policies, but by tie-breaking within the
BGP decision process.
To further illustrate the complexity of path choices made by ASs,
we study 5 large tier-1 providers in our data. As tier-1 providers
have large networks and many neighbors, we would expect them
to have complex path choices. Figure 13 provides the number of
neighboring ASs in the next-hop atoms of 5 tier-1 providers we se-
lected: UUNET (AS701), AT&T (AS7018), LEVEL3 (AS3356),
AOL (AS1668), and OPENTRANSIT (AS5511). We observe huge
differences in the fraction of next-hop atoms that are made of a sin-
gle neighbor (per-neighbor path choices). UUNET has more than
85% of its next-hop atoms consisting of a single neighbor: its path
choices are hence very coarse. AOL on the other hand, has less than
5% of its next-hop atoms consisting of a single neighbor. AOL’s
next-hop atom granularity reﬂects its business as content provider.
AOL is more likely to choose to leverage its path diversity so as to
optimize the performance of the paths. OPENTRANSIT is closer
to AOL than the other 3 tier-1 providers. UUNET and AT&T have
a small fraction of next-hop atoms made of several neighboring
ASs. LEVEL3 stands in the middle of those 5 tier-1 providers in
the granularity of its path choices.
Modeling how ASs select their path hence depends on the kind
of AS being considered. Capturing the full diversity of paths prop-
agated in the Internet, therefore, is not sufﬁcient. We also have to
ﬁnd out what rule of the BGP decision process was used to decide
about the path to reach a given preﬁx. We do not expect this to be
an easy task, as it implies inferring very detailed information about
AS network engineering.
6. RELATED WORK
Inference of business relationships between ASs [5, 12, 13] has
been the most widely studied dimension of routing policies. Rout-
ing policies are typically partitioned into a few classes that capture
the most common practices in use today [1]. Unfortunately, it is
also known that the reality of routing policies [2] and peering rela-
tionships is far more complex than those few typical classes [1, 3].
The current approaches for business relationships inference rely on
a top-down approach. They ﬁrst deﬁne a set of policies and then
try to match those policies with their observations of the system.
Yet, policies as used by ISPs have to realize high-level goals [1].
s
m
o
t
a
p
o
h
-
t
x
e
n
f
o
e
g
a
t
n
e
c
r
e
P
100
90
80
70
60
50
40
30
20
10
0
1
AS701
AS7018
AS3356
AS5511
AS1668
2
6
Number of neighboring ASs in next-hop atoms
3
4
5
7
Figure 13: Number of neighboring ASs in next-hop atoms for
tier-1 providers.
Assuming any kind of consistency of such policies across ASs is
questionable, especially as in practice, policies are often conﬁg-
ured on a per-router, per-peering, or per-preﬁx basis [1]. Observed
BGP routes do not have to make those high-level policies visible.
Our work is similar to [7,14] in allowing the propagation of mul-
tiple paths across ASs. The authors in [7] aimed at predicting AS
paths between any pair of ASs without direct access to the con-
cerned end-points and relied on a new inference of business rela-
tionships, as well as other information to predict the AS paths used
between any pair of ASs. [14] showed that to reproduce the diver-
sity of the BGP paths observed from multiple vantage points, it is
necessary to allow different routing entities inside each AS to store
and propagate the routing diversity known to ASs. Another insight
of this paper is that agnosticism about policies in the Internet helps
to build a model which is completely consistent with observed BGP
data and which has good predictive capabilities. The authors used
per-preﬁx ﬁltering policies to force their model to select the paths
observed by BGP.
7. CONCLUSION
In this paper we searched for an appropriate granularity for mod-
eling policies in the Internet. We explored the impact of routing
policies on an AS-level model of the Internet. Additionally, we
studied how and where to conﬁgure policies in this model in such a
way that the routes in the model be consistent with paths observed
by BGP from multiple vantage points.
By comparing business relationships with per-preﬁx ﬁlters, we
investigated the role and limitations of business relationships as a
model for policies. We observed there is a large freedom in the
location of ﬁlters in the model if the goal is to obtain path choices
consistent with observed BGP data. We also observed that the pop-
ular locations where ﬁltering is necessary in our model correspond
to the valleys where no path should be propagated according to
business relationships inference. This result reinforces the valid-
ity of the valley-free property used for business relationships infer-
ence. However, business relationships do not help to decide which
paths among the candidates should be chosen by each AS: after en-
forcing policies in the model in the form of business relationships,
much choice is left as to which route to choose as the best among
the candidates. Business relationships do not contain enough infor-
mation about the path choices made by ASs. To capture the way
individual ASs choose their best paths, we introduced a new ab-
straction: next-hop atoms. Next-hop atoms capture the different
sets of neighboring ASs an AS uses for its best routes. We showed
that a large fraction of next-hop atoms correspond to per-neighbor