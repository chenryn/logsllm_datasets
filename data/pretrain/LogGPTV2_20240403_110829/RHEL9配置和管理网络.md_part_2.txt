红帽建议不要禁用一致的设备命名，且不支持具有多个网络接口的主机上此功能。禁用一致的设备命名可能会导致不同类型的问题。例如：如果您在系统中添加另一个网卡，则分配内核设备名称（如
`eth0）`{.literal}
不再被修复。因此，重启后内核可以以不同的方式为该设备命名。
:::
::: itemizedlist
**先决条件**
-   系统使用一致的接口设备命名，这是默认设置。
:::
::: orderedlist
**步骤**
1.  编辑 `/etc/default/grub`{.literal} 文件，并将
    `net.ifnames=0`{.literal} 参数附加到 `GRUB_CMDLINE_LINUX`{.literal}
    变量中：
    ``` literallayout
    GRUB_CMDLINE_LINUX="... net.ifnames=0"
    ```
2.  重建 `grub.cfg`{.literal} 文件：
    ::: itemizedlist
    -   在具有 UEFI 引导模式的系统上：
        ``` literallayout
        # grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg
        ```
    -   在使用旧引导模式的系统上：
        ``` literallayout
        # grub2-mkconfig -o /boot/grub2/grub.cfg
        ```
    :::
3.  显示当前配置集名称和关联的设备名称：
    ``` literallayout
    # nmcli -f NAME,DEVICE,FILENAME connection show
    NAME           DEVICE  FILENAME
    System enp1s0  enp1s0  /etc/sysconfig/network-scripts/ifcfg-enp1s0
    System enp7s0  enp7s0  /etc/NetworkManager/system-connections/enp7s0.nmconnection
    ```
    请注意，哪个配置文件名称和配置文件与每个设备相关联。
4.  从所有连接配置集中删除 `HWADDR`{.literal} 参数：
    ``` literallayout
    # sed -i '/^HWADDR=/d' /etc/sysconfig/network-scripts/ifcfg-enp1s0 /etc/NetworkManager/system-connections/enp7s0.nmconnection
    ```
5.  显示与以太网设备关联的 MAC 地址：
    ``` literallayout
    # ip link show
    ...
    2: enp1s0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:c5:98:1c brd ff:ff:ff:ff:ff:ff
    3: enp7s0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:b6:87:c6 brd ff:ff:ff:ff:ff:ff
    ```
6.  重启主机：
    ``` literallayout
    # reboot
    ```
7.  重新引导后，显示以太网设备并根据 MAC 地址识别新接口名称：
    ``` literallayout
    # ip link show
    ...
    2: eth0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:b6:87:c6 brd ff:ff:ff:ff:ff:ff
    3: eth1:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:c5:98:1c brd ff:ff:ff:ff:ff:ff
    ```
    如果您将当前输出与上一个输出进行比较：
    ::: itemizedlist
    -   接口 `enp7s0`{.literal} （MAC 地址
        `00:53:00:b6:87:c`{.literal}6）现在命名为 `eth0`{.literal}。
    -   接口 `enp1s0`{.literal} （MAC 地址
        `00:53:00:c5:98:1c`{.literal}）现在命名为 `eth1`{.literal}。
    :::
8.  重命名配置文件：
    ``` literallayout
    # mv /etc/NetworkManager/system-connections/enp7s0.nmconnection /etc/NetworkManager/system-connections/eth0.nmconnection
    # mv /etc/sysconfig/network-scripts/ifcfg-enp1s0 /etc/sysconfig/network-scripts/ifcfg-eth1
    ```
9.  重新载入 NetworkManager：
    ``` literallayout
    # nmcli connection reload
    ```
10. 如果在配置文件中没有设置配置集名称，NetworkManager
    将使用默认值。要在重命名并重新载入连接后确定当前配置集的名称，请输入：
    ``` literallayout
    # nmcli -f NAME,DEVICE,FILENAME connection show
    NAME           FILENAME
    System enp7s0  /etc/NetworkManager/system-connections/eth0.nmconnection
    System enp1s0  /etc/sysconfig/network-scripts/ifcfg-eth1
    ```
    下一步需要配置集名称。
11. 重命名 NetworkManager 连接配置集并更新每个配置集中的接口名称：
    ``` literallayout
    # nmcli connection modify "System enp7s0" connection.id eth0 connection.interface-name eth0
    # nmcli connection modify "System enp1s0" connection.id eth1 connection.interface-name eth1
    ```
12. 重新激活 NetworkManager 连接：
    ``` literallayout
    # nmcli connection up eth0
    # nmcli connection up eth1
    ```
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#proc_customizing-the-prefix-of-ethernet-interfacesconsistent-network-interface-device-naming}自定义以太网接口的前缀 {.title}
:::
您可以在 Red Hat Enterprise Linux 安装过程中自定义以太网接口名称的前缀。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽不支持在已部署的系统中使用 `prefixdevname`{.literal}
程序自定义前缀。
:::
RHEL 安装后，`udev`{.literal} 服务命名以太网设备 \ . `{.literal}。例如，如果您选择了前缀
`net`{.literal}，RHEL 名称以太网接口 `net`{.literal} 0、`net1`{.literal}
等。
::: itemizedlist
**先决条件**
-   您要设置的前缀满足以下要求：
    ::: itemizedlist
    -   它由 ASCII 字符组成。
    -   它是字母数字字符串。
    -   它少于 16 个字符。
    -   它与用于网络接口命名的其他已知前缀不冲突，如
        `eth`{.literal}、`eno`{.literal}、`ens`{.literal} 和
        `em`{.literal}。
    :::
:::
::: orderedlist
**步骤**
1.  引导 Red Hat Enterprise Linux 安装介质。
2.  在引导管理器中：
    ::: orderedlist
    1.  选择 `Install Red Hat Enterprise Linux & lt;version`{.literal}
        \> 条目，然后按 [**Tab**]{.keycap} 键编辑该条目。
    2.  在 `内核选项中附加 net.ifnames.prefix=&lt`{.literal};prefix\>。
    3.  按 [**Enter**]{.keycap} 键启动安装程序。
    :::
3.  安装 Red Hat Enterprise Linux。
:::
::: itemizedlist
**验证**
-   安装后，显示以太网接口：
    ``` literallayout
    # ip link show
    ...
    2: net0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:c5:98:1c brd ff:ff:ff:ff:ff:ff
    3: net1:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:53:00:c2:39:9e brd ff:ff:ff:ff:ff:ff
    ...
    ```
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#assigning-user-defined-network-interface-names-using-udev-rules.adoc_consistent-network-interface-device-naming}使用 udev 规则分配用户定义的网络接口名称 {.title}
:::
`udev`{.literal} 设备管理器支持一组规则来自定义接口名称。
::: orderedlist
**步骤**
1.  显示所有网络接口及其 MAC 地址：
    ``` literallayout
    # ip link list
    enp6s0f0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:58 brd ff:ff:ff:ff:ff:ff
    enp6s0f1:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:5a brd ff:ff:ff:ff:ff:ff
    enp4s0f0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:90:fa:6a:7d:90 brd ff:ff:ff:ff:ff:ff
    ```
2.  创建包含以下内容的文件
    `/etc/udev/rules.d/70-custom-ifnames.rules`{.literal} ：
    ``` literallayout
    SUBSYSTEM=="net",ACTION=="add",ATTR{address}=="b4:96:91:14:ae:58",ATTR{type}=="1",NAME="provider0"
    SUBSYSTEM=="net",ACTION=="add",ATTR{address}=="b4:96:91:14:ae:5a",ATTR{type}=="1",NAME="provider1"
    SUBSYSTEM=="net",ACTION=="add",ATTR{address}=="00:90:fa:6a:7d:90",ATTR{type}=="1",NAME="dmz"
    ```
    这些规则与网络接口的 MAC 地址匹配，并将它们重命名为
    [**NAME**]{.strong}
    属性中指定的名称。在这些示例中，[**ATTR{type}**]{.strong} 参数值
    [**1**]{.strong} 定义接口类型为 Ethernet。
:::
::: orderedlist
**验证步骤：**
1.  重启系统：
    ``` literallayout
    # reboot
    ```
2.  验证每个 MAC 地址的接口名称是否与您在规则文件的 `NAME`{.literal}
    参数中设置的值匹配：
    ``` literallayout
    # ip link show
    provider0:  mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:58 brd ff:ff:ff:ff:ff:ff
       altname enp6s0f0
    provider1:  mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:5a brd ff:ff:ff:ff:ff:ff
        altname enp6s0f1
    dmz:  mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
        link/ether 00:90:fa:6a:7d:90 brd ff:ff:ff:ff:ff:ff
        altname enp4s0f0
    ```
:::
::: itemizedlist
**其他资源**
-   `udev(7)`{.literal} 手册页
-   `udevadm(8)`{.literal} 手册页
-   `/usr/src/kernels/ &lt;kernel_version> /include/uapi/linux/if_arp.h`{.literal}，由
    `kernel-doc`{.literal} 软件包提供
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#assigning-user-defined-network-interface-names-using-systemd-link-files.adoc_consistent-network-interface-device-naming}使用 systemd 链接文件分配用户定义的网络接口名称 {.title}
:::
通过将网络接口重命名为 `provider0`{.literal}，创建命名方案。
::: orderedlist
**步骤**
1.  显示所有接口名称及其 MAC 地址：
    ``` literallayout
    # ip link show
    enp6s0f0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:58 brd ff:ff:ff:ff:ff:ff
    enp6s0f1:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:5a brd ff:ff:ff:ff:ff:ff
    enp4s0f0:  mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
        link/ether 00:90:fa:6a:7d:90 brd ff:ff:ff:ff:ff:ff
    ```
2.  要使用 MAC 地址 [**b4:96:91:14:ae:58**]{.strong} to
    [**provider0**]{.strong} 命名接口，请使用以下内容创建
    [**/etc/systemd/network/70-custom-ifnames.link**]{.strong} 文件：
    ``` literallayout
    [Match]
    MACAddress=b4:96:91:14:ae:58
    [Link]
    Name=provider0
    ```
    此链接文件与 MAC 地址匹配，并将网络接口重命名为 `Name`{.literal}
    参数中设置的名称。
:::
::: orderedlist
**验证步骤：**
1.  重启系统：
    ``` literallayout
    # reboot
    ```
2.  验证在链接文件中指定的 MAC 地址的设备是否已分配给
    `provider0`{.literal} ：
    ``` literallayout
    # ip link show
    provider0:  mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
        link/ether b4:96:91:14:ae:58 brd ff:ff:ff:ff:ff:ff
    ```
:::
::: itemizedlist
**其他资源**
-   `systemd.link(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#_additional_resources}其他资源 {.title}
:::
::: itemizedlist
-   有关 `udev`{.literal} 设备管理器的详情，请查看 `udev(7)`{.literal}
    手册页。
:::
:::
:::
[]{#getting-started-with-networkmanager_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#getting-started-with-networkmanager_configuring-and-managing-networking}第 2 章 NetworkManager 入门 {.title}
:::
默认情况下，RHEL 使用 NetworkManager 管理网络配置和连接。