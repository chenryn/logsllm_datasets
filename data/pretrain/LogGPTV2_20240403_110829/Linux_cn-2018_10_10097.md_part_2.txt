```
记住在一些组意味着特别的权限，如 sudo 或者 wheel 组，一定要特别注意这一点。
### 移除用户，添加组等
Linux 系统也提供了移除账户，添加新的组，移除组等一些命令。例如，`deluser` 命令，将会从 `/etc/passwd` 和 `/etc/shadow` 中移除用户记录，但是会完整保留其家目录，除非你添加了 `--remove-home` 或者 `--remove-all-files` 选项。`addgroup` 命令会添加一个组，默认按目前组的次序分配下一个 id（在用户组范围内），除非你使用 `--gid` 选项指定 id。
```
$ sudo addgroup testgroup --gid=131
Adding group `testgroup' (GID 131) ...
Done.
```
### 管理特权账户
一些 Linux 系统中有一个 wheel 组，它给组中成员赋予了像 root 一样运行命令的权限。在这种情况下，`/etc/sudoers` 将会引用该组。在 Debian 系统中，这个组被叫做 sudo，但是原理是相同的，你在 `/etc/sudoers` 中可以看到像这样的信息：
```
%sudo   ALL=(ALL:ALL) ALL
```
这行基本的配置意味着任何在 wheel 或者 sudo 组中的成员只要在他们运行的命令之前添加 `sudo`，就可以以 root 的权限去运行命令。
你可以向 sudoers 文件中添加更多有限的权限 —— 也许给特定用户几个能以 root 运行的命令。如果你是这样做的，你应该定期查看 `/etc/sudoers` 文件以评估用户拥有的权限，以及仍然需要提供的权限。
在下面显示的命令中，我们过滤了 `/etc/sudoers` 中有效的配置行。其中最有意思的是，它包含了能使用 `sudo` 运行命令的路径设置，以及两个允许通过 `sudo` 运行命令的组。像刚才提到的那样，单个用户可以通过包含在 sudoers 文件中来获得权限，但是更有实际意义的方法是通过组成员来定义各自的权限。
```
# cat /etc/sudoers | grep -v "^#" | grep -v "^$"
Defaults env_reset
Defaults mail_badpass
Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
root    ALL=(ALL:ALL) ALL
%admin  ALL=(ALL) ALL       
作者：[Sandra Henry-Stocker](https://www.networkworld.com/author/Sandra-Henry_Stocker/) 译者：[dianbanjiu](https://github.com/dianbanjiu) 校对：[wxy](https://github.com/wxy)、[pityonline](https://github.com/pityonline)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出