注释RDS自定义的GUC参数  
#rds_enable_proxy=on  
#rds_available_extensions='plpgsql,pg_stat_statements,btree_gin,btree_gist,chkpass,citext,cube,dblink,dict_int,earthdistance,hstore,intagg,intarray,isn,ltree,pgcrypto,pgrowlocks,pg_prewarm,pg_trgm,postgres_fdw,sslinfo,tablefunc,tsearch2,unaccent,postgis,postgis_topology,fuzzystrmatch,postgis_tiger_geocoder,plperl,pltcl,plv8,plls,plcoffee,"uuid-ossp"'  
#rds_enable_admin_user_as_super=on  
```  
配置recovery.conf  
打开hot_standby，恢复到目标点后暂停，如果确认已经到达，使用resume激活。  
```  
$ vi recovery.conf  
standby_mode = 'on'  
restore_command = 'cp /home/digoal/%f %p'             
recovery_target_xid='561574'  # 使用我们自建的恢复点的XID  
recovery_target_inclusive=true  
pause_at_recovery_target=true  
```  
启动数据库  
```  
$ pg_ctl start  
```  
检查是否恢复到指定XID  
```  
digoal@db-172-16-3-150-> psql -h 127.0.0.1 -p 1931  
psql (9.4.1)  
Type "help" for help.  
postgres=> \dt  
             List of relations  
 Schema |      Name       | Type  | Owner    
--------+-----------------+-------+--------  
 public | ha_health_check | table | aurora  
 public | login_log       | table | digoal  
 public | restore_point   | table | digoal  
 public | session         | table | digoal  
 public | tbl_small       | table | digoal  
 public | test            | table | digoal  
 public | userinfo        | table | digoal  
(7 rows)  
```  
检查，已经恢复到DELETE test表的数据之前了。  
```  
postgres=> select count(*) from test;  
 count   
-------  
  1000  
(1 row)  
postgres=> select sum(hashtext(t.*::text)) from test t;  
     sum        
--------------  
 -69739904784  
(1 row)  
```  
接下来就交给你了，导出逻辑备份，还原，或者其他。。。。。。  
## 其他  
1\. RDS增加了一些GUC控制参数，例如，  
```  
rds_enable_proxy=on  
rds_available_extensions='plpgsql,pg_stat_statements,btree_gin,btree_gist,chkpass,citext,cube,dblink,dict_int,earthdistance,hstore,intagg,intarray,isn,ltree,pgcrypto,pgrowlocks,pg_prewarm,pg_trgm,postgres_fdw,sslinfo,tablefunc,tsearch2,unaccent,postgis,postgis_topology,fuzzystrmatch,postgis_tiger_geocoder,plperl,pltcl,plv8,plls,plcoffee,"uuid-ossp"'  
rds_enable_admin_user_as_super=on  
```  
可以看到对云化做的一些修改：  
```  
digoal@db-172-16-3-150-> cat postgresql.conf  
#  
#Thu Jun 11 22:34:23 CST 2015  
checkpoint_segments=64  
autovacuum_vacuum_scale_factor=0.1  
maintenance_work_mem=16MB  
log_min_duration_statement=1000  
archive_mode=on  
log_lock_waits=on  
max_prepared_transactions=800  
log_rotation_size=10MB  
timezone='PRC'  
archive_command='cp %p /u02/rds427ugtq91telkvtwap/arch/%f'  
track_functions=all  
port=3011  
max_replication_slots=10  
max_connections=100  
hot_standby=on  
lc_numeric='zh_CN.UTF-8'  
pg_stat_statements.max=1000  
checkpoint_completion_target=0.9  
lc_monetary='zh_CN.UTF-8'  
log_line_prefix='\1\n\t%p\t%r\t%u\t%d\t%t\t%e\t\t\t\t\t\t'  
datestyle='iso, ymd'  
wal_keep_segments=80  
superuser_reserved_connections=10  
default_text_search_config='pg_catalog.simple'  
max_wal_senders=5  
track_io_timing=on  
autovacuum_analyze_scale_factor=0.1  
work_mem=4MB  
wal_buffers=7864kB  
pg_stat_statements.track=all  
rds_enable_proxy=on  
logging_collector=on  
log_timezone='UTC'  
log_directory='pg_log'  
listen_addresses='*'  
shared_preload_libraries='pg_stat_statements'  
log_filename='postgresql-%Y-%m-%d_%H%M%S.log'  
wal_level=hot_standby  
hot_standby_feedback=off 
log_truncate_on_rotation=on  
log_rotation_age=0  
lc_time='zh_CN.UTF-8'  
lc_messages='C'  
default_statistics_target=100  
autovacuum_max_workers=5  
rds_available_extensions='plpgsql,pg_stat_statements,btree_gin,btree_gist,chkpass,citext,cube,dblink,dict_int,earthdistance,hstore,intagg,intarray,isn,ltree,pgcrypto,pgrowlocks,pg_prewarm,pg_trgm,postgres_fdw,sslinfo,tablefunc,tsearch2,unaccent,postgis,postgis_topology,fuzzystrmatch,postgis_tiger_geocoder,plperl,pltcl,plv8,plls,plcoffee,"uuid-ossp"'  
log_temp_files=100000  
log_statement='all'  
shared_buffers=256MB  
effective_cache_size=768MB  
autovacuum_vacuum_cost_delay=0  
bgwriter_delay=20ms  
rds_enable_admin_user_as_super=on  
```  
2\. 从pg_hba.conf可以看出，阿里云的RDS 基于流复制的standby 节点有两个，本地一个，异地一个。  
但是实际上只开了一个异地的流复制节点。（没有使用slot，原因可能是准备用于同步流复制的。）  
```  
digoal@db-172-16-3-150-> grep "^[a-z]" pg_hba.conf   
local   all             all                                     trust  
host    all             all             127.0.0.1/32            trust  
host    all             all             ::1/128                 trust  
local replication pgrds427ugtq91telkvtwap   trust  
host all all 0.0.0.0/0 md5  
host replication replicator 10.151.133.24/32 md5  
```  
实际开了1个流复制节点：  
```  
postgres=> select * from pg_stat_replication ;  
  pid  | usesysid |  usename   | application_name | client_addr | client_hostname | client_port | backend_start | backend_xmin | sta  
te | sent_location | write_location | flush_location | replay_location | sync_priority | sync_state   
-------+----------+------------+------------------+-------------+-----------------+-------------+---------------+--------------+----  
---+---------------+----------------+----------------+-----------------+---------------+------------  
 27049 |    16384 | replicator | standby1         |             |                 |             |               |       561915 |      
   |               |                |                |                 |               |   
(1 row)  
postgres=> select * from pg_replication_slots ;  
 slot_name | plugin | slot_type | datoid | database | active | xmin | catalog_xmin | restart_lsn   
-----------+--------+-----------+--------+----------+--------+------+--------------+-------------  
(0 rows)  
```  
## 参考  
1\. http://www.postgresql.org/docs/9.4/static/recovery-config.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")