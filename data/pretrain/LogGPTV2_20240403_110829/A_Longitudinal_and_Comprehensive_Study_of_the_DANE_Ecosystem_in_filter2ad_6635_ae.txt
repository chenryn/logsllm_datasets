










No
Cert




-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
DANE
Usage




-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
Correctly Rejected
Wrong
Selector Match




-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-




-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
Cert




-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
Table 3: Table showing the top 29 popular email providers’ support for DNSSEC, STARTTLS, and DANE; if email providers do not support
STARTTLS, we do not test if they accept an expired, self-signed, Common Name mismatched certiﬁcate (hence the –). Similarly, if they do not
fetch TLSA records we also do not test if they accept the wrong TLSA records (hence the –).
that 9 out of 29 mail service providers use DNS resolvers
outside their own network, which makes them vulnerable to
man-in-the-middle attacks (Same Op. column in Table 3).
Second, we also observe that 24 out of the 29 mail service
providers support STARTTLS; this is in line with a prior
study [30], which showed that 81.8% of Alexa 1M domains
support STARTTLS. However, we ﬁnd that none of the 24
email service providers correctly verify presented certiﬁcates;
they successfully complete the TLS handshake even though
destination email servers present expired or self-signed cer-
tiﬁcates, or even certiﬁcates whose Common Name ﬁelds are
inconsistent with their corresponding MX records. We believe
this is due to the lack of specifying what to do in case of
invalid certiﬁcates in STARTTLS [37]. This result is also in
line with prior work [30] that studied the STARTTLS support
of popular email service providers; only 52% of popular email
servers present valid certiﬁcates. However, our results suggest
that popular email service providers never authenticate the
certiﬁcates of the counterparts, which strongly motivates the
need to deploy DANE for securing incoming and outgoing
emails.
Third, we ﬁnd that only four email service providers
(mail.com, comcast.net, gmx.com, tutanota.com) ac-
tually fetch TLSA records. Fortunately, we ﬁnd that
these four email service providers correctly reject TLSA
records if their Selector, Matching Type, or Certificate
Association Data ﬁeld is not valid. Equally, they also
refuse to connect if our test server refuses to initiate a
TLS connection (No Cert column). However, we observe
that mail.com, tutanota.com do not check whether the
Certificate Usage value of the TLSA record is consis-
tent with the certiﬁcate. That is, we present a self-signed
certiﬁcate through STARTTLS, but the TLSA record sets its
Certificate Usage to PKIX-EE. Given that self-signed cer-
tiﬁcates can never be PKIX valid, they should have rejected
the invalid certiﬁcates during the TLS handshake. There are
two possible hypotheses for this; they might (1) ignore a
TLSA record whose Certificate Usage is either PKIX-TA
or PKIX-EE (as these usages are not recommended [28]), or
(2) skip the PKIX certiﬁcate validation except for checking
the Certificate Association Data. To test our hypothe-
sis, we introduce another subdomain that serves a TLSA record
with the PKIX-EE usage and with a wrong Certificate
Association Data. Thus, if they ignore the entire TLSA
record, then our certiﬁcate would be accepted and the email
would be delivered successfully; if they skip the PKIX valida-
tion, the invalid certiﬁcate would be rejected, thus the email
would not be transmitted. From the additional experiment, we
ﬁnd that the email is not transmitted to this subdomain, imply-
ing that two mail servers currently skip the PKIX validation
except for checking the Certificate Association Data.
USENIX Association
29th USENIX Security Symposium    625
6.2 Popular MTAs and DNS software
To deploy DANE in the SMTP protocol at a larger scale,
the software of Mail Transfer Agents (MTAs) and DNS re-
solvers/servers must be correctly implemented. If email ser-
vice providers wish to support DANE, (1) the software of
their DNS servers and DNS resolvers must be able to under-
stand TLSA records and to support DNSSEC to validate DNS
responses, and (2) their SMTP software must look up and
validate TLSA records along with the corresponding certiﬁ-
cates. More speciﬁcally, sending MTAs (i.e., SMTP clients)
must be able to (1) look up TLSA records by themselves, or
use their DNS resolvers to look up and validate TLSA records,
(2) send the STARTTLS command to receiving MTAs (i.e.,
SMTP servers), and (3) validate the certiﬁcates of the receiv-
ing MTAs with the corresponding TLSA records. The receiv-
ing MTAs must (1) deploy DNS servers that can serve TLSA
records and support DNSSEC to sign their DNS records, and
(2) support STARTTLS to present their certiﬁcates consistent
with the TLSA records.
However, it remains unclear whether the MTA and DNS
software achieves the above objectives [39]. In this section,
we examine whether the popular MTA and DNS software
correctly supports DANE from two perspectives:
• DANE for outgoing emails: Unlike other SMTP exten-
sions that impose responsibilities on receiving MTAs to au-
thenticate sending MTAs (e.g., SPF, DKIM, and DMARC),
DANE requires the sending MTAs and their DNS resolvers
to execute the following tasks: (1) fetch the receiving
MTA’s certiﬁcate through STARTTLS, and (2) verify the
certiﬁcates with their TLSA records. Thus, we ﬁrst examine
whether popular SMTP software supports STARTTLS for
their outgoing emails, sends TLSA requests, and veriﬁes the
fetched certiﬁcates. Additionally, we also check whether
the SMTP software resolves DNS records by itself (thus
an SMTP client becomes a recursive resolver), or relies on
DNS resolvers to look up DNS records on its behalf (thus
an SMTP client becomes a stub resolver). As discussed in
subsection 6.1, if the SMTP client software looks up TLSA
records, it is recommended to resolve the DNS records by
itself to block man-in-the-middle attacks. For the MTA
software leveraging external recursive resolvers, we also
check whether the popular DNS software understands TLSA
records and supports DNSSEC as a recursive resolver.
• DANE for incoming emails: It is relatively easy to enable
DANE for incoming emails. The MTA software needs to
enable STARTTLS and its DNS server needs to serve TLSA
records that are signed correctly and consistent with the
certiﬁcate.
Selecting popular MTA and DNS software
To obtain
a list of popular open source MTA programs, we refer to a
prior study that showed four popular MTAs (Exim, Postﬁx,
MTA Software
Postﬁx 3.4.7 [65]
Exim 4.92.3 [4]
sendmail 8.15.2 [71]
Exchange Server 2019 [3]
DNS
Resolver
Stub
Stub
Stub
Stub
SMTP as a
Client
START-
TLS




TLSA records
Req. Valid.






-
-
Server
START-
TLS




Table 4: Experiment results on four popular SMTP software imple-
mentations of their support for STARTTLS and DANE.
DNS
Software
BIND9 9.14.7 [2]
PowerDNS 4.2.0 [9]
Microsoft DNS [7]
Simple DNS Plus 8.0.110 [10]
NSD 4.2.2 [8]
KnotDNS 2.9.0 [5]
YADIFA 2.3.9 [11]
djbdns 1.05 [84]
MaraDNS 3.4.01 [6]
posadis 0.60.6 [63]
DNS
Recursive
Auth.




















Support
DNSSEC
TLSA




















Table 5: Experiment results on ten popular DNS software imple-
mentations of DNSSEC and DANE (TLSA records). Among them,
seven implementations support both protocols correctly.
Sendmail, Exchange13), together had a 61% market share
in 2015 [30]. To obtain a list of popular open source DNS
programs, we refer to prior work [54] that identiﬁed DNS
software programs running on second-level domains for the
.com, .net, .org TLDs. In total, we investigated ten DNS
software programs.
Results Our results are summarized in Table 4 and Table 5;
we make the following observations. First, we note that all
of the SMTP programs rely on external recursive resolvers to
resolve TLSA records14. Considering that a stub resolver can
check the authenticity of TLSA records only by the AD bit set
by its recursive resolver, a sending MTA may wish to install
its own recursive resolver supporting DNSSEC and DANE
(Table 5) to verify the DNS records by itself, thereby reducing
the attack vectors.
Second, we notice that all of the MTA programs support
STARTTLS for both incoming and outgoing emails. However,