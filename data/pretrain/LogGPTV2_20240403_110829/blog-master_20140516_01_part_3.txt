postgres=# \q  
pg93@db-172-16-3-150-> cd  
pg93@db-172-16-3-150-> pgbench -M prepared -n -r -f ./test.sql -h /opt/pg_root -p 1922 -U postgres -c 16 -j 8 -T 30 postgres  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 8  
duration: 30 s  
number of transactions actually processed: 39062  
tps = 1301.492448 (including connections establishing)  
tps = 1302.085710 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.004463        \setrandom id 1 500000  
        12.278317       select f_test(:id);  
显然, ZFS在使用了LOG和二级缓存的情况下性能完胜.  
最后, 直接使用SSD, 对比一下性能, 因为本例LOG是使用两个文件来代替块设备的, 而不是文件系统, 所以和直接在SSD上的EXT4有性能差距 :   
pg93@db-172-16-3-150-> pg_ctl stop -m fast -D /opt/pg_root  
waiting for server to shut down.... done  
server stopped  
pg93@db-172-16-3-150-> exit  
logout  
You have new mail in /var/spool/mail/root  
[root@db-172-16-3-150 ~]# cp -r /zptest/pg93/pg_root /ssd4/  
database/   pg92/       pg931/      pgxl/       test.pl     zfs.log2      
lost+found/ pg93/       pg94/       ssd3/       zfs.log1      
[root@db-172-16-3-150 ~]# cp -r /zptest/pg93/pg_root /ssd4/pg_root  
[root@db-172-16-3-150 ~]# chown -R pg93:pg93 /ssd4/pg_root  
[root@db-172-16-3-150 ~]# su - pg93  
pg93@db-172-16-3-150-> pg_ctl start -D /ssd4/pg_root  
server starting  
pg93@db-172-16-3-150-> LOG:  00000: redirecting log output to logging collector process  
HINT:  Future log output will appear in directory "pg_log".  
LOCATION:  SysLogger_Start, syslogger.c:649  
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 1922 -U postgres postgres  
psql (9.3.3)  
Type "help" for help.  
postgres=# truncate test;  
TRUNCATE TABLE  
postgres=# \q  
pg93@db-172-16-3-150-> pgbench -M prepared -n -r -f ./test.sql -h /ssd4/pg_root -p 1922 -U postgres -c 16 -j 8 -T 30 postgres  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 8  
duration: 30 s  
number of transactions actually processed: 266565  
tps = 8876.805761 (including connections establishing)  
tps = 8881.884999 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.003877        \setrandom id 1 500000  
        1.793971        select f_test(:id);  
接下来把EXT4放到文件中对比.  
[root@db-172-16-3-150 ~]# cd /ssd4  
[root@db-172-16-3-150 ssd4]# dd if=/dev/zero of=./test.img bs=1024k count=1024  
[root@db-172-16-3-150 ssd4]# mkfs.ext4 ./test.img   
[root@db-172-16-3-150 ssd4]# mount -o loop ./test.img /mnt  
[root@db-172-16-3-150 ssd4]# su - pg93  
pg93@db-172-16-3-150-> pg_ctl stop -m fast -D /ssd4/pg_root  
waiting for server to shut down.... done  
server stopped  
pg93@db-172-16-3-150-> exit  
logout  
[root@db-172-16-3-150 ssd4]# cp -r /ssd4/pg_root /mnt/  
[root@db-172-16-3-150 ssd4]# chown -R pg93:pg93 /mnt/pg_root  
[root@db-172-16-3-150 ssd4]# su - pg93  
pg93@db-172-16-3-150-> pg_ctl start -D /mnt/pg_root  
server starting  
pg93@db-172-16-3-150-> LOG:  00000: redirecting log output to logging collector process  
HINT:  Future log output will appear in directory "pg_log".  
LOCATION:  SysLogger_Start, syslogger.c:649  
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 1922 -U postgres postgres  
psql (9.3.3)  
Type "help" for help.  
postgres=# truncate test;  
TRUNCATE TABLE  
postgres=# \q  
pg93@db-172-16-3-150-> pgbench -M prepared -n -r -f ./test.sql -h /mnt/pg_root -p 1922 -U postgres -c 16 -j 8 -T 30 postgres  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 8  
duration: 30 s  
number of transactions actually processed: 192445  
tps = 6410.026454 (including connections establishing)  
tps = 6412.254485 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.004118        \setrandom id 1 500000  
        2.486914        select f_test(:id);  
```  
## 参考  
1\. http://zfsonlinux.org/docs.html  
2\. http://zfsonlinux.org/  
3\. https://pthree.org/2012/12/05/zfs-administration-part-ii-raidz/  
4\. http://en.wikipedia.org/wiki/Non-RAID_drive_architectures  
5\. https://github.com/zfsonlinux  
6\. http://open-zfs.org/wiki/Main_Page  
7\. http://rudd-o.com/linux-and-free-software/ways-in-which-zfs-is-better-than-btrfs  
8\. https://java.net/projects/solaris-zfs/pages/Home  
9\. http://www.oracle.com/technetwork/server-storage/solaris11/documentation/index.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")