1
1
1
1
2
1
3
Time(s)
DA
187.97
197.56
147.97
41.13
39.59
73.18
148.37
286.34
256.58
227.15
167.97
210.35
219.45
108.78
602.35
671.46
39.32
227.15
224.56
156.52
296.31
473.89
157.97
1124.53
2128.16
336.5844
DP
2.26
2.14
3.13
2.72
1.53
1.57
6.85
5.25
5.23
3.35
3.39
2.56
3.02
1.19
1.93
2.76
1.23
5.90
3.40
2.06
4.61
2.01
1.23
3.54
3.16
3.04
CVE
CVE-2018-9451
CVE-2018-9340
CVE-2017-13232
CVE-2018-9345
CVE-2018-9420
CVE-2017-13210
CVE-2018-9470
CVE-2017-13209
CVE-2018-9411
CVE-2017-13252
CVE-2017-13253
CVE-2018-9499
CVE-2018-9424
CVE-2018-9491
CVE-2017-13278
CVE-2018-9410
CVE-2017-13208
CVE-2018-9498
CVE-2017-13279
CVE-2018-9440
CVE-2018-9427
CVE-2017-13178
CVE-2017-13180
CVE-2018-9412
CVE-2017-13182
Average
TP
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
Deep Learning Classiﬁcation
TN
1148
1113
961
349
111
110
1420
947
858
611
608
531
570
443
2159
601
178
13647
722
722
1110
551
581
4391
5103
Total
1183
1183
987
357
116
116
1433
1020
1020
617
617
617
617
467
2538
653
180
13729
735
735
1181
594
594
5646
5646
FP
34
69
25
7
4
5
12
72
161
5
8
85
46
23
378
51
1
81
12
12
70
42
12
971
542
FN
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
FP(%)
2.87%
5.83%
2.53%
1.96%
3.45%
4.31%
0.84%
7.06%
15.78%
0.81%
1.30%
13.78%
7.46%
4.93%
14.89%
7.81%
0.56%
0.59%
1.63%
1.63%
5.93%
7.07%
2.02%
17.20%
9.60%
5.67%
8
6
5
4
1
2
4
7
10
6
5
9
5
1
19
21
1
6
6
5
2
13
2
327
42
2
1
1
3
1
1
1
1
2
1
2
3
1
1
1
1
1
1
1
2
2
1
1
2
1
DP
2.29
2.07
3.20
1.66
1.50
1.63
5.93
4.07
4.24
2.33
2.67
2.57
2.01
2.20
1.90
2.83
1.08
4.89
3.48
4.84
4.74
2.86
2.17
3.52
3.15
2.95
DA
246.25
197.56
177.97
148.37
59.59
91.19
160.46
207.15
301.23
230.56
165.51
287.65
156.32
45.93
587.86
651.45
35.53
243.3
236.78
175.52
99.18
390.89
71.48
8676.91
1249.96
595.784
In this section, we evaluate the accuracy of PATCHECKO’s
deep learning model, dynamic analysis engine, as well as its
patch detection.
Deep learning model. Figure 8 shows the accuracy and loss
when we train our deep learning model for ˜15 hours. The
accuracy can reach 96%.
Since [42] needs the previous similarity checking solutions
to locate the target function when the symbol table is not
available, the target function may be missed if the vulnerable
version and patched version are not similar. To validate this
notion, we use our deep learning model to check the similarity
between the vulnerable and patched version of the same
function for 25 CVEs. We found that there is a possibility
that vulnerable and patch versions are not similar based on
the deep learning model. For example, if CVE-2018-9345 had
been patched, the solution in [42] will miss the target function
based on vulnerable function features and, thus, may use the
wrong function to detect whether it is patched.
We use the training model to detect 25 CVEs in Android
Things and Google Pixel 2 XL. The average detection accuracy
is more than 93%. Figure 7 shows the false positive rate when
we test vulnerable and patched versions in the two devices’
ﬁrmware images. It is interesting that the false positive rate of
the vulnerable and patched versions of CVE-2017-13209 and
CVE-2018-9412 on the two devices are obviously different,
which is reﬂective of their dissimilar result. Furthermore, we