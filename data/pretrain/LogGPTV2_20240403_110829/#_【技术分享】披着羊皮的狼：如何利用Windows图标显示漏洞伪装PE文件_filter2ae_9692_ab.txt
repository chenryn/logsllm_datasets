看起来该问题起源于系统对已渲染图标的缓存方式以及对TMI图标的特殊处理方式，使得它们无法覆盖已有的图标。
Windows资源管理器以及基于资源管理器的其他应用都是通过使用 **comctl32.dll** 模块（用户体验控制库）中的 **CImageList**
类来实现图标的缓存。CImageList类的官方说明文档如下：
系统将文件的路径映射为某个CImageList对象内部的一个索引来实现图标的缓存（这里包含多个图标缓存，不同大小的图标会对应不同的缓存）。因此，当用户查看某个文件时，若对应的图标之前已完成渲染，那么系统就会直接从缓存中获取图标。如果系统进程之前尚未处理过该路径，那么系统就会根据具体的文件类型进行渲染，并将其存到缓存中。这也就是为什么当我们查看包含多个图标文件或者具有图标的PE文件的某个目录时，系统会稍加延迟，逐渐显示文件的原因所在。当文件被复制或被重命名时，文件的图标会被再次渲染，因为此时系统会认为这些路径属于新的路径。
这个处理逻辑的具体实现位于 **CImageList::_ReplaceIcon** 函数中：
程序会根据给定的索引来添加或替换缓存图标：
经过若干处理步骤后，函数会检查索引对应的当前图像是否包含一个alpha通道，如果包含（基本上都会包含该通道），函数就会设置一个标志，后续处理过程中会使用该标志来决定如何调用
**DrawIconEx** ：
如果程序设置了该标志，那么函数就会在之后的处理过程中，调用DrawIconEx来实际绘制给定的图标，以替换列表中已有的缓存图标，调用DrawIconEx时使用的是DI_MASK
(1)标志而不是DI_NORMAL (3)标志。
在文件内部，图标以及图像通常情况下会包含两个不同的像素图：分别为“colors”以及“mask”图层，后者可以作用于colors图层之上，如ICONINFO文档中描述的那样：
因此，从本质上讲，图标中只有“mask”部分会被渲染，并会覆盖mask（[esi+7ch）的DC（Device
Context，设备上下文），而并不会覆盖colors（[esi+78h）的DC。当图标为TMI图标时，这个处理过程就会导致没有任何新的像素被覆盖，并且系统在渲染图标时会借用CImageList当前索引所对应的之前的那个缓存图标！
这个利用过程需要缓存处于饱满状态，这取决于这些函数的调用者。然而，对于类似资源管理器的组件而言（如“文件打开”对话框），缓存的大小通常是非常小的。
使用这种组件的任何进程都可能复现这种现象。如下图所示，我们使用Outlook
2016的“添加附件”窗口来查看被TMI图标填满的某个目录（免责声明：在访问单色图标目录之前，我们已经在同一窗口中浏览了几个包含图标的目录）：
很显然，不仅图标文件会触发这个问题，任何包含图标的PE文件也会触发此类问题。触发条件在于此类图标是目标文件的 **唯一的**
图标类型，因为Windows的算法会根据大小、并且按照高颜色深度（high-color-depth）到低颜色深度（low-color-depth）顺序，选择“最合适”的图标来渲染文件。
既然如此，我们决定在我们的恶意软件数据库中，查找资源区中只包含 **真正单色图标**
的那些样本，最终我们找到了数百个样本，这些样本最早可以追溯到2013年（是我们数据库中最早的样本）。毫无疑问，这些样本全部都可以触发这种现象。在良性样本数据库中进行类似搜索后，我们没有得到任何结果。
根据样本所使用的不同图标，我们将样本分成几组：
前面提到过，我们在4月17日检测到滥用Adobe图标的Cerber勒索软件样本，这也是我们第一次检测到的此类恶意软件样本。这里我们再举5个类似的样本，如下所示（截图中为这些样本当时在我们主机上的显示情况）：
在virustotal上的地址分别为：
[https://www.virustotal.com/en/file/10b2fd1e06c3ac73d23e67bb59c4294cef8485bdc1b116005c56bfb950f21e44/analysis/](https://www.virustotal.com/en/file/10b2fd1e06c3ac73d23e67bb59c4294cef8485bdc1b116005c56bfb950f21e44/analysis/%5D\(https://www.virustotal.com/en/file/10b2fd1e06c3ac73d23e67bb59c4294cef8485bdc1b116005c56bfb950f21e44/analysis/)
[https://www.virustotal.com/en/file/4559b52596deb7a8181df722bebcf08921b97451d944840cf6bdf0c04c1bc364/analysis/](https://www.virustotal.com/en/file/4559b52596deb7a8181df722bebcf08921b97451d944840cf6bdf0c04c1bc364/analysis/%5D\(https://www.virustotal.com/en/file/4559b52596deb7a8181df722bebcf08921b97451d944840cf6bdf0c04c1bc364/analysis/)
[https://www.virustotal.com/en/file/f2bf40f15b44a28be2d9ff5c1572a84c6ba5a8942d6c1a01aa44db51aa2d1ccb/analysis/](https://www.virustotal.com/en/file/f2bf40f15b44a28be2d9ff5c1572a84c6ba5a8942d6c1a01aa44db51aa2d1ccb/analysis/%5D\(https://www.virustotal.com/en/file/f2bf40f15b44a28be2d9ff5c1572a84c6ba5a8942d6c1a01aa44db51aa2d1ccb/analysis/)
[https://www.virustotal.com/en/file/f7c15cb91ddaebf03f523e4eed412377217b511ee8f37ba99a8d8b7832f227df/analysis/](https://www.virustotal.com/en/file/f7c15cb91ddaebf03f523e4eed412377217b511ee8f37ba99a8d8b7832f227df/analysis/%5D\(https://www.virustotal.com/en/file/f7c15cb91ddaebf03f523e4eed412377217b511ee8f37ba99a8d8b7832f227df/analysis/\))
**三、总结**
****
本文分析的这些样本很有可能只是自动生成的PE文件中的冰山一角，这些PE文件会附加伪随机的资源作为掩护资源，并且这种漏洞从未被Cerber刻意利用（不过我们很难确定这个结论）。然而，我们还是找到了从2014年到2017年时间跨度内的一些样本，这些样本使用了单一的、空白的真正单色图标，这种模式与我们自己构造的利用文件非常类似。在我们看来，这足以证明这些文件的创建者已经掌握这个漏洞，并且过去已经积极利用过这个漏洞，因为如果不是这种情况，选择使用空白图标、而不是尝试模仿已有应用的图标是没有任何价值的一件事情。
虽然这个漏洞不是一个严重的安全漏洞，但足以敦促我们保持对网络钓鱼邮件的警觉性。之前灌输给用户的安全建议同样适用于这种情况，那就是：不要打开可疑的邮件以及附件。此外，我们还建议用户勾掉“隐藏已知文件的扩展名”选项，这样能帮助我们识别可执行文件，如下图所示：
我们已于2017年6月向微软报告了这个漏洞，本文的发布经过了微软的许可。