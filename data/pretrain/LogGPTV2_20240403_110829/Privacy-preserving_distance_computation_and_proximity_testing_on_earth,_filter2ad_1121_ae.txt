PP-UTM is small.
Proximity testing is signiﬁcantly slower (and requires higher
bandwidth) than simple distance computation. We perform
tests using diﬀerent discretization parameters, which impact
computation and communication cost for both the homomor-
phic comparison protocol and garbled circuits.
On the desktop, comparison with garbled circuits takes 0.5
to 0.6 seconds, compared to 0.7 to 1.7 seconds with Erkin’s
protocol. The time and bandwidth for precomputation and
protocol execution are listed separately in Table 3. On the
other hand, bandwidth requirements for garbled circuits is
between 37.5 and 41.0 kB, more than twice as much as the 7
to 14 kB required for Erkin’s protocol.
Unlike the Erkin’s comparison protocol, garbled circuits
allow part of the computation to be done without providing
any user input. This precomputation can be done in advance
(e.g., while charging the smartphone or during extended peri-
ods of inactivity), but still requires communication between
protocol participants. Without precomputation, comparison
using garbled circuits takes 2.4 to 2.8 s, while the Erkin’s
protocol is faster with 1.2 to 2.8 seconds, depending on dis-
cretization and distance function. With precomputation,
however, protocol execution time and bandwidth usage is
reduced to 1.2-1.6 s.
Time Communication
Desktop
PP-HS
PP-ECEF
PP-UTM
Smartphone
PP-HS
PP-ECEF
PP-UTM
41.3 ms
34.9 ms
26.5 ms
78.0 ms
66.7 ms
53.5 ms
896 B
640 B
512 B
896 B
640 B
512 B
Table 2: Cost of our privacy-preserving distance
measurement protocols. Discretization is performed
with 1-meter accuracy for PP-UTM and PP-ECEF
and roughly equivalent accuracy (9 digits) for PP-
HS.
8. CONCLUSION
In this paper we introduced PP-UTM, PP-ECEF and PP-
HS, three privacy-preserving protocols for secure distance
computation and secure proximity testing. In contrast with
previous work, our PP-ECEF and PP-HS protocols compute
distances over a spherical surface instead of a plane. This
allows us to provide signiﬁcantly more accurate results over
long distances, while incurring in very small overhead.
We rely on diﬀerent techniques for distance computation –
namely, Euclidean distance on a plane (which we use as a
baseline) and distance on the surface of a sphere – in order
to oﬀer diﬀerent trade-oﬀs between accuracy and cost.
To the best of our knowledge, this is the ﬁrst work that
provides a thorough characterization of the geometrical error
and the approximation introduced by input discretization on
distances computed using privacy-preserving protocols.
We evaluated the cost of our protocols on a commodity
Android device and on a desktop computer via a prototype
implementation. Our analysis shows that our protocols are
108Proximity testing
Desktop
PP-HS (9 decimal digits)
PP-ECEF (1 m discretization)
PP-ECEF (100 m discretization)
PP-UTM (1 m discretization)
PP-UTM (100 m discretization)
Smartphone
PP-HS (9 decimal digits)
PP-ECEF (1 m discretization)
PP-ECEF (100 m discretization)
PP-UTM (1 m discretization)
PP-UTM (100 m discretization)
With Homomorphic Comparison
Time
Comm.
With Garbled Circuit
Precomp. Comm. Exec. Comm.
1.7 s
1.3 s
1.0 s
1.1 s
0.7 s
2.8 s
2.2 s
1.6 s
1.8 s
1.2 s
17 kB
14 kB
10 kB
10 kB
7 kB
17 kB
14 kB
10 kB
10 kB
7 kB
409 ms
404 ms
404 ms
401 ms
401 ms
1.2 s
1.2 s
1.2 s
1.2 s
1.2 s
22.1 kB 124 ms
22.1 kB 109 ms
22.1 kB 105 ms
22.1 kB 102 ms
22.1 kB 104 ms
18.1 kB
18.1 kB
18.1 kB
18.1 kB
18.1 kB
1.6 s
1.4 s
1.3 s
1.3 s
1.2 s
18.9 kB
17.7 kB
16.6 kB
16.6 kB
15.4 kB
16.4 kB
15.2 kB
14.1 kB
14.1 kB
12.9 kB
Table 3: Cost of proximity testing protocols with Homomorphic Comparison and Garbled Circuits.
practical and can be run eﬃciently on standard smartphones.
Finally, we analyzed the security of our protocols under
standard assumptions.
9. ACKNOWLEDGEMENTS
Jaroslav ˇSedˇenka kindly acknowledges the support by the
ESF Project CZ.1.07/2.3.00/20.0051 Algebraic Methods in
Quantum Logic of the Masaryk University. Supported by
10. REFERENCES
[1] Find my Friends. http://www.apple.com/icloud/
features/find-my-friends.html.
[2] A. Beresford and F. Stajano. Location Privacy in
Pervasive Computing. Pervasive, 2(1), 2003.
[3] M. Blanton and P. Gasti. Secure and eﬃcient protocols
for iris and ﬁngerprint identiﬁcation. In ESORICS,
2011.
[4] Boost Mobile Loopt.
http://www.boostmobile.com/boostloopt/how.html.
[5] Cab4me. http://www.cab4me.com.
[6] I. Damg˚ard, M. Geisler, and M. Krøig˚ard. A correction
to eﬃcient and secure comparison for on-line auctions.
Cryptology ePrint Archive, Report 2008/321, 2008.
[7] I. Damg˚ard, M. Geisler, and M. Krøig˚ard.
Homomorphic encryption and secure comparison.
IJACT, 2008.
[8] Defense Mapping Agency, Hydrographic/Topographic
Center. The universal grids: Universal transverse
mercator (UTM) and universal polar stereographic
(UPS). Technical Report TM8358.2, 1989.
[9] M. Duckham and L. Kulik. A formal model of
obfuscation and negotiation for location privacy. In
Pervasive, 2005.
[10] Z. Erkin, M. Franz, J. Guajardo, S. Katzenbeisser,
I. Lagendijk, and T. Toft. Privacy-preserving face
recognition. In PETS, 2009.
[11] Flickr. http://www.flickr.com.
[12] Java geodesy library.
http://www.gavaghan.org/blog/free-source-code/
geodesy-library-vincentys-formula-java/.
[13] O. Goldreich. Foundations of Cryptography: Volume 2,
Basic Applications. Cambridge University Press, 2004.
[14] O. Goldreich, S. Micali, and A. Wigderson. How to
play any mental game or a completeness theorem for
protocols with honest majority. In ACM Symposium on
Theory of Computing (STOC), pages 218–229, 1987.
[15] P. Golle and K. Partridge. On the anonymity of
home/work location pairs. In Pervasive, 2009.
[16] Google Latitude. http://www.google.com/latitude.
[17] Groupon Local. http://www.groupon.com.
[18] M. Gruteser and D. Grunwald. Anonymous usage of
location-based services through spatial and temporal
cloaking. In MobiSys, 2003.
[19] B. Hoh, T. Iwuchukwu, Q. Jacobson, D. Work,
A. Bayen, R. Herring, J. Herrera, M. Gruteser,
M. Annavaram, and J. Ban. Enhancing privacy and
accuracy in probe vehicle-based traﬃc monitoring via
virtual trip lines. TMC, 11(5), 2012.
[20] Find my iPhone - iCloud. http://www.icloud.com.
[21] Instagram. http://instagram.com.
[22] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank.
Extending oblivious tranfers eﬃciently. In Advances in
Cryptology – CRYPTO, 2003.
[23] Java map projection library.
http://www.jhlabs.com/java/maps/proj/.
[24] T. Jiang, H. Wang, and Y.-C. Hu. Preserving location
privacy in wireless lans. In MobiSys, 2007.
[25] Jscience library. http://jscience.org/.
[26] T. Jung and X.-Y. Li. Search me if you can:
Privacy-preserving location query service. CoRR,
abs/1208.0107, 2012.
[27] C. Karney. Algorithms for geodesics. Journal of
Geodesy, 87(1), Jan. 2013.
[28] V. Kolesnikov, A.-R. Sadeghi, and T. Schneider.
Improved garbled circuit building blocks and
applications to auctions and computing minima. In
Cryptology and Network Security (CANS), 2009.
[29] V. Kolesnikov and T. Schneider. Improved garbled
circuit: Free XOR gates and applications. In
International Colloquium on Automata, Languages and
Programming (ICALP), 2008.
[30] J. Krumm. Inference attacks on location tracks. In
Pervasive, 2007.
109[31] P. Lory. Enhancing the eﬃciency in privacy preserving
[40] R. Shokri, G. Theodorakopoulos, J. Boudec, and
learning of decision trees in partitioned databases. In
PSD, 2012.
J. Hubaux. Quantifying location privacy. In SP, 2011.
[41] R. Shokri, G. Theodorakopoulos, G. Danezis, J.-P.
[32] J. Manweiler, R. Scudellari, Z. Cancio, and L. Cox. We
saw each other on the subway: secure, anonymous
proximity-based missed connections. In HotMobile,
2009.
Hubaux, and J.-Y. Boudec. Quantifying location
privacy: The case of sporadic location exposure. In
PETS, 2011.
[42] R. Sinnott. Virtues of the haversine. Sky and Telescope,
[33] S. Mascetti, C. Bettini, and D. Freni. Longitude:
68(2), 1984.
Centralized privacy-preserving computation of users’
proximity. In SDM, 2009.
[34] MIT iFIND Project.
http://web.mit.edu/newsoffice/2006/ifind.html.
[35] M. Naor and B. Pinkas. Eﬃcient oblivious transfer
protocols. In ACM-SIAM Symposium On Discrete
Algorithms (SODA), 2001.
[36] A. Narayanan, N. Thiagarajan, M. Lakhani,
M. Hamburg, and D. Boneh. Location privacy via
private proximity testing. In NDSS, 2011.
[37] P. Paillier. Public-key cryptosystems based on
composite degree residuosity classes. In EUROCRYPT,
1999.
[43] W. Torge. Geodesy. De Gruyter, 2001.
[44] TripAdvisor. http://www.tripadvisor.com.
[45] T. Vincenty. Direct and inverse solutions of geodesics
on the ellipsoid with application of nested equations.
Survey Review, 22(176), 1975.
[46] Apple Pays Out $946 in Locationgate Settlement.
http://www.wired.com/gadgetlab/2011/07/
apple-locationgate-settlement/.
[47] Stalkers Exploit Cellphone GPS.
http://online.wsj.com/article/
SB10001424052748703467304575383522318244234.
html.
[48] A. Yao. How to generate and exchange secrets. In
[38] B. Pinkas, T. Schneider, N. Smart, and S. Williams.
FOCS, 1986.
Secure two-party computation is practical. In Advances
in Cryptology – ASIACRYPT, volume 5912 of LNCS,
2009.
[39] P. Shankar, V. Ganapathy, and L. Iftode. Privately
querying location-based services with sybilquery. In
UbiComp, 2009.
[49] Yelp. http://www.yelp.com.
[50] G. Zhong, I. Goldberg, and U. Hengartner. Louis,
Lester and Pierre: Three protocols for location privacy.
In PET, 2007.
110