### Ensemble of Features and Robustness Against Evasion

The collective set of features, when considered as a whole, significantly enhances the robustness of our detection tool. Even if attackers are aware of the presence of our tool, it will not be trivial for them to evade detection by selectively modifying individual features.

### Model Generalizability

Utilizing network-level features increases the robustness of our classifier against various modifications that attackers might make to thwart fingerprinting attempts. Our goal is to create a classifier that is not only effective in detecting the three identified MITM phishing toolkits in their current form but also generalizable to updates to these toolkits and new toolkits that may emerge in the future.

To test the impact of MITM phishing toolkit updates on model performance, we downloaded all releases of the three MITM phishing toolkits (Evilginx, Muraena, and Modlishka) up to two years old and collected data using the methodology described in Section 3.4. We then trained our classifier on the oldest available release of each toolkit along with known non-MITM phishing toolkit data, and tested it on the remaining releases. In total, we collected 13 versions of the MITM phishing toolkits: Evilginx (4 versions), Muraena (7 versions), and Modlishka (2 versions). The results, shown in Table 2B, indicate that the network-level features of each toolkit generally remain consistent through incremental updates.

The only exception is Muraena, which added support for HTTP requests in its most recent release (version 0.3), while previous versions only handled HTTPS requests. This change in behavior led to a drop in performance. However, this experiment represents a worst-case scenario where the classifier is not updated to match changes in the MITM phishing toolkit space for multiple years.

To measure the classifier's performance when encountering a previously unknown MITM phishing toolkit, we iteratively removed each toolkit's data from our training set, leaving only the two remaining toolkits and known non-MITM phishing toolkit data. We then trained the classifier on this new dataset and tested it on the excluded toolkit's data. The results, shown in Table 2C, indicate that the accuracy of our classifier drops by less than 2% when tested on data from a completely unknown MITM phishing toolkit. Since the network architecture is consistent across all MITM phishing toolkits, our classifier maintains high performance even when presented with unfamiliar data.

### PHOCA: MITM Phishing Toolkit Detection

Using the previously described machine learning classifier, we developed a tool called PHOCA, named after the Latin word for "seal." Seals are aquatic mammals known to hunt hidden prey using vibrations generated by their breathing. Similarly, PHOCA can detect previously hidden MITM phishing toolkits using inherent network-level features rather than visual cues.

When provided with a URL or domain name, PHOCA probes the web server to collect network-level features and uses our trained classifier to determine if the web server is a MITM phishing toolkit. This tool can easily generate new training data for future iterations of MITM phishing toolkits and can be integrated into existing anti-phishing workflows to identify active threats.

### Discovering MITM Phishing Sites in the Wild

Using PHOCA, we conducted a large-scale search for MITM phishing toolkits in the wild to determine their online presence and uncover usage patterns. This allows us to expose the sources of phishing campaigns, targeted users, and trademarks.

### Phishing Website Crawling Infrastructure

We designed a URL crawling infrastructure that visits thousands of potential phishing web pages daily, records information about them, and classifies them as MITM phishing toolkits or not.

#### URL Collection

To gain a comprehensive view of the MITM phishing ecosystem, we crawled URLs from popular open-source phishing databases (Phishtank and OpenPhish) and Certificate Transparency logs. We used the Facebook Certificate Transparency Phishing API to receive alerts for certificate registrations of impersonating domain names. Additionally, we supplemented this with our own Certificate Transparency log parser, which uses regular expressions to search for combosquatting domains. In total, we searched for impersonating domains of 22 trademarks using Certificate Transparency.

It is important to note that both Facebook's and our own Certificate Transparency log parsers do not classify MITM phishing websites; they search for domain names that appear to be impersonating known trademarks. We used all URLs and domains from these sources as input to our crawling infrastructure to find MITM phishing websites deployed in the wild.

Our reliance on Certificate Transparency and phishing lists excludes, by design, any test deployments of the evaluated MITM phishing toolkits by security analysts and researchers. Setting up a subdomain or purchasing a domain name that matches the target site and deploying a phishing toolkit there crosses the line between benign and malicious. If we had used Internet-wide scanning tools like ZMAP, we would not have been able to reliably differentiate between test deployments and those by attackers.

Our use of Certificate Transparency logs limits us to domain names rather than full URLs, which are typically available on phishing blocklists. However, since PHOCA uses network-level features to discover MITM phishing toolkits, we do not require access to phishing content. This is a strength of our detection technique, as we are intuitively fingerprinting the phishing web server rather than the phishing content, as is the case with traditional phishing detection.

#### Crawling Infrastructure

Figure 5 presents a high-level view of our URL crawling infrastructure. Our queue-based system takes URLs from various sources, including phishing blocklists and impersonating domains found in Certificate Transparency logs, and dispatches crawlers to collect data on the corresponding websites in real time. Each crawler consists of a headless Selenium browser and a PHOCA worker. For each website, we record the following information: i) HTML and screenshot of the landing page, ii) TLS certificate offered to our browser, iii) original and redirected (if applicable) domain IP address, and iv) original and redirected (if applicable) classification.

This data is forwarded to the analysis module, which clusters web pages based on their content, assisting in the manual verification of the classifications made by our model. Using information such as TLS certificates, web server IP addresses, and domain names, we can uncover connections between seemingly independent phishing websites and cluster individual phishing sites into phishing campaigns.

Our system also utilizes time-based re-queuing to record data on previously crawled websites, mapping the life cycle of MITM phishing websites over time. We re-crawl all such domains periodically following their initial recording, especially for domains captured as soon as their certificates are created. We also re-crawl all URLs classified as one of the phishing tools to measure how long these websites remain active after creation.

### Experimental Evaluation and Results

#### MITM Phishing Toolkit Presence

We deployed our phishing website crawling infrastructure for 365 days from March 25, 2020, to March 25, 2021. This period was divided into two phases. The first phase was exploratory, using URLs from Certificate Transparency, OpenPhish, and PhishTank. We captured 17 MITM phishing websites from OpenPhish and PhishTank, compared to 189 from Facebook’s Certificate Transparency API. The highly targeted nature of attacks using MITM phishing toolkits makes it difficult for user-curated blocklists to report these websites in a timely manner. Furthermore, the cloaking abilities of MITM phishing toolkits complicate the task of identifying and blocklisting these websites, as existing crawlers will never observe the malicious content.

After the exploratory phase, we focused our resources on an additional Certificate Transparency source. During the second phase, PHOCA labeled 6,875 sites as operated by MITM phishing toolkits, 849 from Facebook’s Certificate Transparency API, and 6,026 from our own Certificate Transparency Log parser. We manually inspected the data collected on each positively labeled phishing website, removing 5,861 false positives from a total of 7,081 positive classifications. Throughout our recording period, we classified 841,711 web pages, resulting in a 0.6% false positive rate—approximately sixteen per day, on average.

#### MITM Phishing Website Locations

We used the collected IP addresses to map each MITM phishing website geographically and by autonomous system. Figure 7 shows the geographic distribution of IP addresses associated with MITM phishing websites. Most instances are located in North America and Europe, corresponding to areas with large concentrations of hosting providers. Table 3 shows the top autonomous systems in which MITM phishing websites were found, composed mostly of popular hosting providers.

The ability for attackers to quickly launch and remove cloud servers on hosting providers makes them a popular location for MITM phishing websites. Additionally, being located on popular web hosting infrastructure can thwart security scanners searching for websites hosted in low-quality autonomous systems.

### MITM Phishing Website Life Cycle

Figure 8 provides insights into the life cycle of MITM phishing websites, including the days between domain registration and detection, hours before the websites go online, and the duration they remain active.