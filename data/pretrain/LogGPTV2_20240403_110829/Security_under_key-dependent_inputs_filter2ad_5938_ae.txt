### 6.2 Insecurity of a Textbook Randomized Scheme

In this section, we consider a natural PRF-based symmetric encryption scheme, which is similar to the one proven secure in the random-oracle model by Black et al. [4]. We show that not only does this construction fail to be KDI-secure in the standard model, but this failure is also evident even for practical instantiations of the PRF.

Given a PRF \( f_s(\cdot) \), the encryption scheme is defined as:
\[
\text{Enc}_s(x) = (r, f_s(r) \oplus x)
\]
where \( r \) is chosen at random for each encryption. This scheme is CPA-secure (up to the birthday bound on \( |r| \)) if \( f_s(\cdot) \) is a secure PRF. Intuitively, it seems that it should also be KDI-secure. Indeed, it was shown in [4, Thm 5.1] that when \( f_s \) is implemented as \( f_s(x) = H(s \| x) \) and \( H \) is a random oracle, the scheme in Eq. (8) is KDI-secure with respect to all functions of the key \( s \).

However, we demonstrate that this construction is not KDI-secure in general, and more surprisingly, it fails even for practical PRFs. Specifically, when the underlying PRF is implemented from a block cipher via the Davies-Meyer construction:
\[
f_s(x) = E_x(s) \oplus s
\]
the resulting encryption scheme is not KDI-secure, even with respect to the identity function (and even if the block cipher itself is an ideal cipher). The Davies-Meyer construction was originally intended for collision-resistant hash functions, but for contemporary block ciphers, it can also be expected to be a good PRF. For example, the assumption that the Davies-Meyer compression function keyed via its IV is a PRF has been used in the analysis of HMAC.

When the Davies-Meyer construction is plugged into Eq. (8), the encryption scheme becomes:
\[
\text{Enc}_s(x) = (r, (E_r(s) \oplus s) \oplus x)
\]
An attacker who requests the encryption of the secret key will receive:
\[
\text{Enc}_s(s) = (r, (E_r(s) \oplus s) \oplus s) = (r, E_r(s))
\]
From this, the attacker can recover \( s \) using the decryption routine \( E^{-1} \) with \( r \) as the key. This construction fails even if \( E \) is an ideal cipher (and even when augmented with a MAC function to provide CCA security).

**Negative Example 4.** The symmetric encryption scheme:
\[
\text{Enc}_s(x) = (r, x \oplus f_s(r)), \quad \text{with } f_s \text{ implemented via the Davies-Meyer construction } f_s(x) = E_x(s) \oplus s,
\]
is KDI-insecure with respect to the identity function, even when \( E \) is an ideal cipher.

### 6.3 KDI-Secure Symmetric Encryption

On the positive side, we show that an invertible KDI-secure PRF can be used to obtain KDI-secure symmetric encryption using a slight variation of the insecure "textbook" construction. A PRF \( f_s \) is called invertible if, given \( s \) and \( f_s(x) \), one can efficiently recover \( x \). Specifically, consider the encryption scheme:
\[
\text{Enc}_s(x) = (r, f_s(r) \oplus f_s(x)), \quad \text{Dec}_s(r, y) = f_s^{-1}(y \oplus f_s(r))
\]

We show that if the family \( f_s \) is a KDI-secure (invertible) PRF with respect to a class \( C \), then the encryption scheme from Eq. (10) is CPA-KDI secure with respect to the same class \( C \).

**Lemma 4.** If the family \( f_s \) has input size \( \omega(\log n) \) (with \( n \) the security parameter), and if it is a KDI-secure (invertible) PRF with respect to a class \( C \), then the encryption scheme from Eq. (10) is CPA-KDI secure with respect to the same class \( C \).

**Proof.** Fix a class \( C \) and assume toward contradiction that the encryption scheme from Eq. (10) is not CPA-KDI secure. Let \( \mathcal{A}_E \) be an attacker that demonstrates the KDI-insecurity of the encryption scheme. We use it to describe an attacker \( \mathcal{A}_f \) that demonstrates the KDI-insecurity of the PRF family.

\( \mathcal{A}_f \) is provided with oracle access to \( \phi \) and \( \phi^{-1} \) as described in Definition 1. It activates the attacker \( \mathcal{A}_E \) (on the same security parameter). When \( \mathcal{A}_E \) asks to encrypt an explicit string \( x \), \( \mathcal{A}_f \) chooses a random string \( r \), queries \( s = \phi(r) \) and \( t = \phi(x) \), and returns the ciphertext \( (r, s \oplus t) \) to \( \mathcal{A}_E \). When \( \mathcal{A}_E \) asks to encrypt \( g(s) \) for some \( g \in C \), \( \mathcal{A}_f \) chooses again a random string \( r \), queries \( s = \phi(r) \) and \( t = \phi(g(s)) \), and returns the ciphertext \( (r, s \oplus t) \) to \( \mathcal{A}_E \).

When \( \mathcal{A}_E \) outputs \( q_0 \) and \( q_1 \), \( \mathcal{A}_f \) chooses a random bit \( b \) and returns an encryption of \( q_b \) using the same procedure as above. Finally, \( \mathcal{A}_f \) outputs whatever \( \mathcal{A}_E \) does.

It follows by definition that when \( \phi = f_s \), the view of \( \mathcal{A}_E \) is identical to its view when interacting with the real encryption scheme. On the other hand, when \( \phi \) is a random function, the view of \( \mathcal{A}_E \) is nearly independent of \( q_0 \) and \( q_1 \) (except for the case where the random string \( r \) that \( \mathcal{A}_f \) chooses for the encryption of \( q_b \) collides with an earlier input to \( \phi \) or \( \phi^{-1} \), which happens with negligible probability if \( |r| \) is large enough). Hence, the advantage of \( \mathcal{A}_f \) is negligibly close to half the advantage of \( \mathcal{A}_E \).

**Theorem 4.** If secure PRF families exist, then for every efficiently computable function \( g \), there is a symmetric encryption scheme that depends on \( g \) and is CPA-KDI-secure with respect to the singleton class \( \{g\} \).

### References

[1] P. Adão, G. Bana, J. Herzog, and A. Scedrov. Soundness of Formal Encryption in the Presence of Key-Cycles. In 10th European Symposium on Research in Computer Security - ESORICS 2005, volume 3679 of Lecture Notes in Computer Science, pages 374–396. Springer, 2005.

[2] M. Bellare and T. Kohno. A theoretical treatment of related-key attacks: RKA-PRPs, RKA-PRFs, and applications. In Advances in Cryptology – EUROCRYPT ’03, volume 2656 of LNCS, pages 491–506. Springer, 2003.

[3] M. Bellare, T. Krovetz, and P. Rogaway. Luby-Rackoff backwards: Increasing security by making block ciphers non-invertible. In Advances in Cryptology - EUROCRYPT’87, volume 1403 of Lecture Notes in Computer Science, pages 266–280. Springer, 1998.

[4] J. Black, P. Rogaway, and T. Shrimpton. Encryption-scheme security in the presence of key-dependent messages. In Selected Areas in Cryptography, volume 2595 of Lecture Notes in Computer Science, pages 62–75. Springer, 2002.

[5] J. Camenisch and A. Lysyanskaya, An Efficient System for Non-transferable Anonymous Credentials with Optional Anonymity Revocation. In Advances in Cryptology - EUROCRYPT’01, volume 2045 of Lecture Notes in Computer Science, pages 93–118. Springer, 2001.

[6] Y. Dodis, A. Sahai, and A. Smith. On Perfect and Adaptive Security in Exposure-Resilient Cryptography. In Advances in Cryptology - EUROCRYPT’01, volume 2045 of Lecture Notes in Computer Science, pages 301–324. Springer, 2001.

[7] O. Goldreich, S. Goldwasser, and S. Micali. How to construct random functions. Journal of the ACM, 33(4):210–217, 1986.

[8] S. Goldwasser and S. Micali. Probabilistic encryption. Journal of Computer and System Sciences, 28(2):270–299, April 1984.

[9] S. Halevi and H. Krawczyk. Security Under Key-Dependent Inputs. ACM-CCS 2007, long version at http://eprint.iacr.org/2007/315.

[10] C. Hall, D. Wagner, J. Kelsey, and B. Schneier. Building PRFs from PRPs. In Advances in Cryptology – CRYPTO’98, volume 1462 of Lecture Notes in Computer Science, pages 370–389. Springer, 1998.

[11] J. Håstad, R. Impagliazzo, L. A. Levin, and M. Luby. A pseudorandom generator from any one-way function. SIAM J. Comput., 28(4):1364–1396, 1999.

[12] IEEE P1619.* email archive. http://grouper.ieee.org/groups/1619/email/.

[13] IEEE P1619. Standard for cryptographic protection of data on block-oriented storage devices. Draft standard, available temporarily from http://ieee-p1619.wetpaint.com/page/IEEE+Project+1619+Home, 2007.

[14] J. Katz and M. Yung. Characterization of security notions for probabilistic private-key encryption. Journal of Cryptology, 19(1):67–95, January 2006. Earlier version in STOC’00, pages 245-254.

[15] P. Laud and R. Corin. Sound Computational Interpretation of Formal Encryption with Composed Keys. In 6th International Conference on Information Security and Cryptology - ICISC 2003, volume 2971 of Lecture Notes in Computer Science, pages 55–66. Springer, 2003.

[16] M. Liskov, R. L. Rivest, and D. Wagner. Tweakable block ciphers. In Advances in Cryptology – CRYPTO 2002, volume 2442 of Lecture Notes in Computer Science, pages 31–46. Springer, 2002.

[17] M. Luby and C. Rackoff. How to construct pseudorandom permutations from pseudorandom functions. SIAM Journal of Computing, 17(2), 1988.

[18] S. Lucks. The sum of PRPs is a secure PRF. In Advances in Cryptology - EUROCRYPT’00, volume 1807, pages 470–484. Springer, 2000.

[19] N. Nisan and D. Zuckerman. Randomness is linear in space. J. Comput. Syst. Sci., 52(1):43–52, 1996.

[20] P. Rogaway. Efficient instantiations of tweakable blockciphers and refinements to modes OCB and PMAC. In Advances in Cryptology - ASIACRYPT’04, volume 3329 of Lecture Notes in Computer Science, pages 16–31. Springer, 2004.

[21] L. Trevisan and S. P. Vadhan. Extracting Randomness from Sampleable Distributions. In 41st Symposium on Foundations of Computer Science - FOCS’00, pages 32–42. IEEE Computer Society, 2000.

### Appendix A: Randomness Extractors

#### Min-Entropy and Statistical Distance

We use the terms probability distributions and random variables interchangeably. For a discrete random variable \( X \), the min-entropy of \( X \) is related to the most probable value that \( X \) can assume, specifically:
\[
\text{min-entropy}(X) = -\log_2 (\max_x \Pr[X = x])
\]
In other words, if \(\text{min-entropy}(X) = \lambda\), then \( X \) does not assume any value with probability more than \( 2^{-\lambda} \). In this case, we also say that "X has \(\lambda\) bits of min-entropy."

The statistical distance between two random variables \( X \) and \( Y \) is defined as:
\[
\text{dist}(X, Y) \triangleq \sum_{x} |\Pr[X = x] - \Pr[Y = x]|
\]
where the summation is taken over the union of the supports of both \( X \) and \( Y \). If \(\text{dist}(X, Y) = \epsilon\), then we say that \( X \) is \(\epsilon\)-close to \( Y \).

#### Randomness Extractors

A (strong) randomness extractor [19] is a function \(\text{extr}(x)\) that takes a random seed \( r \) and a "somewhat random" input \( x \), and produces an output \( y \) (shorter than \( x \)) which should be almost uniform, even given \( r \). Specifically, a function \(\text{ext} : \{0, 1\}^t \times \{0, 1\}^n \to \{0, 1\}^m\) is a strong \((k, \epsilon)\) extractor if for any distribution \( D \) over \(\{0, 1\}^n\) with more than \( k \) bits of min-entropy, the statistical distance between the two distributions:
\[
\{(r, y) : r \leftarrow \{0, 1\}^t, x \leftarrow D, y \leftarrow \text{extr}(x, r)\}
\]
and
\[
\{(r, y) : r \leftarrow \{0, 1\}^t, y \leftarrow \{0, 1\}^m\}
\]
is at most \(\epsilon\). For any \( k > m \), there are known constructions (e.g., using the leftover hash lemma [11]) that are strong \((k, \epsilon)\) extractors with \(\epsilon = 2^{-(k-m)/2}\).

We will also need a slightly stronger notion of a \((k, \epsilon, \delta)\) extractor, where with probability \( 1 - \delta \) over the seed \( r \), the distribution \(\text{extr}(D)\) is \(\epsilon\)-close to uniform. An extension of the leftover hash lemma [21, 6] says that we can get \((k, \epsilon, \delta)\) extractors with \(\delta = 2^{-\lambda}\) and \(\epsilon = 2^{-(k-m-O(\log \lambda))/2}\) using \(\lambda\)-wise independent hash functions.