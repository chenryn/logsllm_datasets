Red Hat Enterprise Linux 提供 `iptables-translate`{.literal} 和
`ip6tables-translate`{.literal} 工具来将现有 `iptables`{.literal} 或
`ip6tables`{.literal} 规则转换为对等的 `nftables`{.literal} 规则。
请注意，一些扩展可能缺少响应的转换支持。如果存在这样的扩展，该工具会输出带有
`#`{.literal} 符号前缀的未转换的规则。例如：
``` screen
# iptables-translate -A INPUT -j CHECKSUM --checksum-fill
nft # -A INPUT -j CHECKSUM --checksum-fill
```
另外，用户可以使用 `iptables-restore-translate`{.literal} 和
`ip6tables-restore-translate`{.literal}
工具来转换规则转储。请注意，在此之前，用户可以使用
`iptables-save`{.literal} 或 `ip6tables-save`{.literal}
命令来打印当前规则的转储。例如：
``` screen
# iptables-save >/tmp/iptables.dump
# iptables-restore-translate -f /tmp/iptables.dump
# Translated by iptables-restore-translate v1.8.0 on Wed Oct 17 17:00:13 2018
add table ip nat
...
```
要获得更多信息以及可能的选项和值列表，请使用
`iptables-translate --help`{.literal} 命令。
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#ref_comparison-of-common-iptables-and-nftables-commands_assembly_migrating-from-iptables-to-nftables}常见 iptables 和 nftables 命令的比较 {.title}
:::
以下是常见 `iptables`{.literal} 和 `nftables`{.literal} 命令的比较：
::: itemizedlist
-   列出所有规则：
    ::: informaltable
      iptables                    nftables
      --------------------------- ------------------------------
      `iptables-save`{.literal}   `nft list ruleset`{.literal}
    :::
-   列出特定的表和链：
    ::: informaltable
      iptables                                    nftables
      ------------------------------------------- ----------------------------------------------
      `iptables -L`{.literal}                     `nft list table ip filter`{.literal}
      `iptables -L INPUT`{.literal}               `nft list chain ip filter INPUT`{.literal}
      `iptables -t nat -L PREROUTING`{.literal}   `nft list chain ip nat PREROUTING`{.literal}
    :::
    `nft`{.literal}
    命令不会预先创建表和链。只有在用户手动创建它们时才会出现它们。
    ::: title
    **示例：列出 firewalld 生成的规则**
    :::
    ``` literallayout
    # nft list table inet firewalld
    # nft list table ip firewalld
    # nft list table ip6 firewalld
    ```
:::
:::
:::
::: section
::: titlepage
# []{#getting-started-with-nftables_configuring-and-managing-networking.html#writing-and-executing-nftables-scripts_getting-started-with-nftables}编写和执行 nftables 脚本 {.title}
:::
`nftables`{.literal} 框架提供了一个原生脚本环境，它比使用 shell
脚本维护防火墙规则得到主要优势：执行脚本是原子的（以一个整体运行）。这意味着，系统会应用整个脚本，或者在出现错误时防止执行。这样可保证防火墙始终处于一致状态。
另外，`nftables`{.literal} 脚本环境使管理员能够：
::: itemizedlist
-   添加评论
-   定义变量
-   包含其他规则集文件
:::
本节介绍如何使用这些功能，以及创建和执行 `nftables`{.literal} 脚本。
当您安装 `nftables`{.literal} 软件包时，Red Hat Enterprise Linux 会在
`/etc/nftables/`{.literal} 目录中自动生成 `*.nft`{.literal}
脚本。这些脚本包含为不同目的创建表和空链的命令。
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#supported-nftables-script-formats_writing-and-executing-nftables-scripts}支持的 nftables 脚本格式 {.title}
:::
`nftables`{.literal} 脚本环境支持以下格式的脚本：
::: itemizedlist
-   您可以以与 `nft list ruleset`{.literal}
    命令相同的格式编写脚本，显示规则集：
    ``` literallayout
    #!/usr/sbin/nft -f
    # Flush the rule set
    flush ruleset
    table inet example_table {
      chain example_chain {
        # Chain for incoming packets that drops all packets that
        # are not explicitly allowed by any rule in this chain
        type filter hook input priority 0; policy drop;
        # Accept connections to port 22 (ssh)
        tcp dport ssh accept
      }
    }
    ```
-   您可以使用与 `nft`{.literal} 命令相同的语法：
    ``` literallayout
    #!/usr/sbin/nft -f
    # Flush the rule set
    flush ruleset
    # Create a table
    add table inet example_table
    # Create a chain for incoming packets that drops all packets
    # that are not explicitly allowed by any rule in this chain
    add chain inet example_table example_chain { type filter hook input priority 0 ; policy drop ; }
    # Add a rule that accepts connections to port 22 (ssh)
    add rule inet example_table example_chain tcp dport ssh accept
    ```
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#running-nftables-scripts_writing-and-executing-nftables-scripts}运行 nftables 脚本 {.title}
:::
您可以通过将其传递给 `nft`{.literal} 工具或直接执行脚本来运行
`nftables`{.literal} 脚本。
::: itemizedlist
**先决条件**
-   本节的步骤假设您在文件
    `/etc/nftables/example_firewall.nft`{.literal} 中保存了
    `nftables`{.literal} 脚本。
:::
::: itemizedlist
**流程**
-   要运行 `nftables`{.literal} 脚本，请将其传递给 `nft`{.literal}
    工具程序，请输入：
    ``` literallayout
    # nft -f /etc/nftables/example_firewall.nft
    ```
-   要直接运行 `nftables`{.literal} 脚本：
    ::: orderedlist
    1.  只需要执行一次的步骤：
        ::: orderedlist
        1.  确保脚本以以下 shebang 序列开头：
            ``` literallayout
            #!/usr/sbin/nft -f
            ```
            ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
            ### 重要 {.title}
            如果省略 `-f`{.literal} 参数，`nft`{.literal}
            实用程序不会读取该脚本并显示：
            `Error: syntax error, unexpected newline, expecting string`{.literal}。
            :::
        2.  可选：将脚本的所有者设置为 `root`{.literal} ：
            ``` literallayout
            # chown root /etc/nftables/example_firewall.nft
            ```
        3.  使脚本可以被其所有者执行：
            ``` literallayout
            # chmod u+x /etc/nftables/example_firewall.nft
            ```
        :::
    2.  运行脚本：
        ``` literallayout
        # /etc/nftables/example_firewall.nft
        ```
        如果没有输出结果，系统将成功执行该脚本。
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
即使 `nft`{.literal}
成功执行脚本，在脚本中错误地放置规则、缺失的参数或其他问题都有可能导致防火墙的行为不如预期。
:::
::: itemizedlist
**其它资源**
-   有关设置文件所有者的详情，请参考 `chown(1)`{.literal} man page。
-   有关设置文件权限的详情，请查看 `chmod(1)`{.literal} man page。
-   有关使用系统引导载入 `nftables`{.literal}
    [规则的更多信息，请参阅在系统引导时自动载入 nftables
    规则。](#getting-started-with-nftables_configuring-and-managing-networking.html#automatically-loading-nftables-rules-when-the-system-boots_writing-and-executing-nftables-scripts "系统引导时自动载入 nftables 规则"){.link}
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#using-comments-in-nftables-scripts_writing-and-executing-nftables-scripts}使用 nftables 脚本中的注释 {.title}
:::
`nftables`{.literal} 脚本环境将 `#`{.literal}
字符右边的所有内容都作为注释来解释。
::: example
[]{#getting-started-with-nftables_configuring-and-managing-networking.html#idm140431055348768}
**例 47.1. nftables 脚本中的注释**
::: example-contents
注释可在一行的开始，也可以在命令后：
``` literallayout
...
# Flush the rule set
flush ruleset
add table inet example_table  # Create a table
...
```
:::
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#using-variables-in-an-nftables-script_writing-and-executing-nftables-scripts}使用 nftables 脚本中的变量 {.title}
:::
要在 `nftables`{.literal} 脚本中定义变量，请使用 `define`{.literal}
关键字。您可以在变量中存储单个值和匿名集合。对于更复杂的场景，请使用 set
或 verdict 映射。
#### []{#getting-started-with-nftables_configuring-and-managing-networking.html#variables_with_a_single_value}只有一个值的变量
以下示例定义了名为 `INET_DEV`{.literal} 的变量，其值为
`enp1s0`{.literal}：
``` literallayout
define INET_DEV = enp1s0
```
您可以通过在脚本中写入 `$`{.literal}
符号后加上变量名称来使用脚本中的变量：
``` literallayout
...
add rule inet example_table example_chain iifname $INET_DEV tcp dport ssh accept
...
```
#### []{#getting-started-with-nftables_configuring-and-managing-networking.html#variables_that_contain_an_anonymous_set}包含匿名集合的变量
以下示例定义了一个包含匿名集合的变量：
``` literallayout
define DNS_SERVERS = { 192.0.2.1, 192.0.2.2 }
```
您可以通过在脚本中写入 `$`{.literal}
符号后加上变量名称来使用脚本中的变量：
``` literallayout
add rule inet example_table example_chain ip daddr $DNS_SERVERS accept
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
请注意，在规则中使用大括号时具有特殊的意义，因为它们表示变量代表一个集合。
:::
::: itemizedlist
**其它资源**
-   有关集合的更多信息，请参阅 [nftables
    命令中的集合](#getting-started-with-nftables_configuring-and-managing-networking.html#using-sets-in-nftables-commands_getting-started-with-nftables "使用 nftables 命令中的设置"){.link}
-   有关 ver [字典映射的更多信息，请参阅在 nftables 命令中使用 verdict
    映射](#getting-started-with-nftables_configuring-and-managing-networking.html#using-verdict-maps-in-nftables-commands_getting-started-with-nftables "在 nftables 命令中使用 verdict 映射"){.link}。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_configuring-and-managing-networking.html#including-files-in-an-nftables-script_writing-and-executing-nftables-scripts}在 nftables 脚本中包含文件 {.title}
:::
`nftables`{.literal} 脚本环境可让管理员使用 `include`{.literal}
说明包括其他脚本。
如果您只指定没有包括绝对路径或相对路径的文件名， `nftables`{.literal}
包含默认搜索路径中的文件，在 Red Hat Enterprise Linux 中为
`/etc`{.literal}。
::: example
[]{#getting-started-with-nftables_configuring-and-managing-networking.html#idm140431055312944}
**例 47.2. 包含默认搜索目录中的文件**
::: example-contents
从默认搜索目录中包含一个文件：
``` literallayout
include "example.nft"
```
:::
:::
::: example