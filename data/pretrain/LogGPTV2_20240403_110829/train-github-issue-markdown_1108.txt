## Bug Report
**Current Behavior**  
Using webpack + preset-env with useBuiltIns: usage + corejs3 does not work on
IE11 without additional configuration of webpack entries.
The generated code currently fails with "Unhandled promise rejection
TypeError: Target is not iterable" raised from core-js/internal/iterate.js.
To make it work I have to manually add 'core-js/modules/es.array.iterator' to
my webpack entry:
    entry: [
            'core-js/modules/es.array.iterator',        
            path.join(__dirname, 'src', 'index.js')
        ],
**Input Code**  
A repro project can be found here:  
https://github.com/sarod/bugs-repro/tree/master/babel-bugs/dynamic-import-ie11
Run `yarn install && yarn serve ` and access localhost:8080 using ie11.
**Expected behavior/code**  
According to @zloirock with core-js3 + useBuiltins:usage this should work
without additional configuration.
**Babel Configuration (.babelrc, package.json, cli command)**
    {
            presets: [
                [
                    '@babel/preset-env',
                    {
                        "modules": false,
                        "useBuiltIns": "usage",
                        "corejs": {
                            version: 3
                        }
                    }
                ]
            ],
            plugins: ['@babel/plugin-syntax-dynamic-import']
        }
**Environment**
  * Babel version(s): [e.g. v7.4.3]
  * Node/yarn version: [e.g. Node 8.12.0/yarn 1.15.2]
  * OS: [e.g. Ubuntu 18.04]
  * Monorepo: [e.g. no]
  * How you are using Babel: `loader`
**Possible Solution**  
It looks like webpack is using Promise.all which requires Promise to be
iterable.
So preset-env should probably import "core-js/modules/es.array.iterator"  
in addition to "core-js/modules/es.object.to-string" and "core-
js/modules/es.promise" when finding a dynamic import statement.