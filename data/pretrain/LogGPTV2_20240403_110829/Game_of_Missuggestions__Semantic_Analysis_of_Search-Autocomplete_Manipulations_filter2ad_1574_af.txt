to convert Sacabuche into an online system, for the purpose
of helping users avoid autocomplete scams. The Sacabuche
service can be maintained by the search engine providers or,
more attractively, 3rd-party organizations (recall that Sacabuche
does not require query logs). We leave this as future work.
Our current
implementation of Sacabuche focuses on
detecting missuggestion on search engines. In the meantime,
e-commerce platforms’(such as Amazon and eBay) search
services are also vulnerable to similar attacks. A natural follow-
up is to develop the detector to protect those services.
GoogleBingYahoo104105106107108# of suggestionsAll SuggestionsManipulated Suggestions02/0902/1902/2803/0903/1903/2904/0904/1904/2905/09100000200000300000400000500000600000700000# of manipulated suggestionsnewly-appeared60Lifetime(days)010000200003000040000500006000070000# of manipulated suggestions0.00.51.01.52.02.5ranking of website1e70.00.20.40.60.81.0% of hacked websitesComparison with traditional blackhat SEO. We found that
the manipulators always promote unpopular terms which are
within the same context as the triggers. This is because it is
more effective to advertise the targets and evade detection.
Speciﬁcally, the autocompletes can be regarded as long-tail
keywords. As studied in [48] and [47], searching for the long-
tail keywords, which relate to speciﬁc terms, will make it more
easy to convert the trafﬁc to sales than generic searches. From
the description of the manipulators and the missuggestions
they promoted (see Section III), they indeed tend to promote
speciﬁc targets in coherence with the triggers. Note that on the
other hand, different from autocomplete manipulation, some
traditional blackhat SEO techniques (such as keyword stufﬁng)
pollute the search results by adding irrelevant keywords.
However, they have a different goal for content promotion.
Instead of achieving a higher trafﬁc conversion rate, they tried
to gain trafﬁc from other popular keywords which are out
of search intentions. In the autocomplete manipulation, users
already have search intentions (as the trigger terms). As a result,
the manipulators targeted a higher conversion rate by adding
unpopular while coherent terms.
Lesson Learnt. Based on our ﬁndings, we identiﬁed several
potentially effective mitigation strategies besides the detection
efforts from the third party such as Sacabuche. First, search en-
gine operators do have responsibilities to act more aggressively
on detecting and removing manipulated suggestion. They could
detect similar phrase patterns from the search logs, or degrade
the positioning of autocomplete phrases with highly similar but
low-quality search result contents. Further, the afﬁliate networks
could monitor HTTP refers and identify other indications that
their afﬁliates are engaging in autocomplete manipulation. We
found that most of the afﬁliate networks currently have reactive
policies, such as abuse reporting to restrict illicit practices of
afﬁliates. A more proactive policy might help to mitigate the
surge of autocomplete manipulation.
Responsible Disclosure. Since the discovery of manipulated
suggestions, we have been in active communication with
the parties affected. So far, we have reported 100 sampled
manipulated phrases to Google, Bing, and Yahoo!. By now,
Google has responded to our report. However, considering the
size of the manipulations, the full-scale reporting and validation
process takes time and is our on-going work.
VIII. RELATED WORK
Detection on Autocomplete Manipulation. To the best of our
knowledge, the work most relevant to ours was done by Liu et.
al [50] who used query logs to detect promotion campaigns. The
authors proposed a framework to detect promotion campaigns
abusing autocomplete service, and then extended it to identify
the promotion target (e.g., drugs). Their core technique is
to construct and analyze a user-query bipartite graph that
captures the relationship between promoters and manipulations.
Their technique requires (usually proprietary) search query logs,
manual annotation of thousands of terms, and even promoters’
IDs (through cookies). In contrast, our NLP-based technique is
fully automated and requires neither query logs nor promoters’
IDs that are easy to spoof. We further conducted a large-
scale measurement to reveal the pervasiveness of autocomplete
manipulation and its signiﬁcant security impacts.
Abusing Search Engines. Numerous malicious activities lever-
aging blackhat SEO have been reported in the literature. To
name a few, Leontiadis et al. conducted a measurement study on
search redirection attacks for online pharmacy promotion [46].
Lu et al. developed a browser plug-in for detecting malicious
search redirections [51]. Moore et al. performed a measurement
of the abuse of “trending” terms, which are usually obtained
from popular search terms or tweets, for web search-engine
manipulation and social-network spam [52]. Invernizzi et al. de-
signed an efﬁcient system called Evilseed to identify malicious
webpages indexed by search engines, which adopts preﬁltering
techniques to speed up the inspection process [45]. Different
from these works, our paper designed and implemented a system
to perform efﬁcient and highly accurate missugestion detection,
a different type of blackhat SEO.
Attacking recommendation systems. Prior research has also
reported attacks on manipulating the results of recommendation
systems as well as devised mitigation strategies. For example,
Xing et al. proposed pollution attacks that utilize cross-site
requests to inject fake information in order to perturb web
services’ personalization algorithms [60]. Yang et al proposed
attacks on the co-visitation recommendation systems [61].
Gelernter et al. introduced an attack to pollute the personalized
search history and therefore the auto-suggest
list of the
victim [42]. The bar for the attack is high: the victim must log
into the search engine service (e.g., Google account), and she
has to visit the malicious website controlled by the attacker. This
attack is therefore different from our studied crowd-sourcing
autocomplete manipulation attack, which can be regarded as
an emerging type of attack on recommendation systems.
Security Analysis Leveraging NLP. Recently, researchers
leverage natural language processing for security and privacy
research. Examples include analyzing web privacy policies [62],
generating Android privacy policies [54], inferring mobile app
permission through apps’ descriptions [54], [56], detecting sen-
sitive user input [44], [53], and website promotional infection
detection [49]. Our work identiﬁes a novel application of NLP,
i.e., scalable detection of autocomplete manipulations.
IX. CONCLUSION
In this paper, we present the ﬁrst technique that supports a
large-scale semantics-based analysis of autocomplete manipula-
tions, an emerging threat with signiﬁcant security implications.
Our system, called Sacabuche, utilizes a two-step approach to
ﬁlter through a large number of trigger-suggestion pairs, based
upon a lightweight NLP analysis, thereby avoiding expensive
queries to search engines. Only a small set of suspicious
suggestions are run against the search engines to acquire search
results for a more in-depth analysis. Our study shows that
this approach achieves a high effectiveness (96.23% precision,
95.63% recall) and also enables a large-scale measurement
study involving 114 million query terms. Our ﬁndings reveal
the signiﬁcant impact of the threat, with hundreds of thousands
of manipulated terms promoted through major search engines
(Google, Bing, Yahoo!), spreading low-quality content and even
malware and phishing. Also discovered in the study are the
sophisticated evasion and promotion techniques employed in
the attack and exceedingly long lifetimes of the abused terms,
which call for further studies on the illicit activities and serious
efforts to mitigate and ultimately eliminate this threat.
14
ACKNOWLEDGMENT
We are grateful to our shepherd Gianluca Stringhini and
the anonymous reviewers for their insightful comments. This
work is supported in part by the NSF CNS-1223477, 1223495,
1527141, 1618493, 1618898, Samsung Gift fund and ARO
W911NF1610127.
REFERENCES
reputation
organic
click-through
rates,”
https://moz.com/blog/
management,”
keywords-wordstream,”
http://www.wordstream.com/
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]
[18]
[19]
[20]
[21]
[22]
[23]
[24]
[25]
[26]
[27]
[28]
“60 percent of searches from mobile devices,” http://searchengineland.
com/report-nearly-60-percent-searches-now-mobile-devices-255025.
“Bag-of-words model,” en.wikipedia.org/wiki/Bag-of-words model.
“Casino keywords,” 50-highest-paying-adsense-keywords.blogspot.com/
2006/10/casino-keywords.html.
“Dependency grammar,” en.wikipedia.org/wiki/Dependency grammar.
“Prescription drug lists,” www.uhcrivervalley.com/pharmacy/PDL.html.
“The stanford parser,” http://nlp.stanford.edu/software/lex-parser.shtml.
“Word embedding,” https://en.wikipedia.org/wiki/Word embedding.
“A deeper look at bing autosuggest,” https://blogs.bing.com/search/2013/
03/25/a-deeper-look-at-autosuggest, 2013.
“Google autosuggest manipulation,” https://www.smartt.com/insights/
google-autosuggest-manipulation-is-it-a-legitimate-strategy, 2014.
“1,000,000 top high paying cpc for 2015,” http://grepwords.com/
1000000-top-high-paying-cpc-adwords-adsense-keywords-2015/, 2015.
“Google search autocomplete,” https://blog.google/products/search/
google-search-autocomplete/, 2016.
“An update to our adwords policy on lending products,” https://blog.
google/topics/public-policy/an-update-to-our-adwords-policy-on/, 2016.
“Affordable
http://
affordablereputationmanagement.com/, 2017.
“Bing autocomplete api,” http://api.bing.com/osjson.aspx, 2017.
“Blackhat seo,” https://en.wikipedia.org/wiki/Spamdexing, 2017.
“Casino
popular-keywords/casino-keywords, 2017.
“Cleanmx,” http://support.clean-mx.com/clean-mx/viruses.php, 2017.
“Geonames,” http://www.geonames.org/export/, 2017.
“Google autocomplete api,” http://suggestqueries.google.com, 2017.
“Google autocomplete study results,” https://www.wiideman.com/
research/google-autocomplete/study-results, 2017.
“Google
google-organic-click-through-rates, 2017.
“Google safe browsing,” https://safebrowsing.google.com/, 2017.
“Google search api,” http://developers.google.com/custom-search/
json-api/v1/overview, 2017.
“ixiala,” http://www.ixiala.com/, 2017.
“Keyword tool,” https://keywordtool.io/, 2017.
“Malware domain blacklist: Dns-bh,” www.malwaredomains.com/, 2017.
“Natural language toolkit,” http://www.nltk.org/, 2017.
“Search using autocomplete,” https://support.google.com/websearch/
answer/106230?hl=en, 2017.
“Seopmb,” http://www.seopmb.com/, 2017.
“Skip-gram,” https://en.wikipedia.org/wiki/N-gram\#Skip-gram, 2017.
“Source code search engine,” https://publicwww.com/, 2017.
“Stopwords in multiple languages,” http://www.ranks.nl/stopwords, 2017.
“Virustotal,” https://www.virustotal.com/, 2017.
“Word2vec,” https://en.wikipedia.org/wiki/Word2vec, 2017.
“Wordnet,” www.nltk.org/ modules/nltk/stem/wordnet.html, 2017.
“Yahoo! autocomplete api,” http://sugg.search.yahoo.net/sg/, 2017.
“Yinc marketing,” http://yincmarketing.com/, 2017.
[29]
[30]
[31]
[32]
[33]
[34]
[35]
[36]
[37]
[38] S. Alrwais, X. Liao, X. Mi, P. Wang, X. Wang, F. Qian, R. Beyah, and
D. McCoy, “Under the shadow of sunshine: Understanding and detecting
bulletproof hosting on legitimate service provider networks,” in Security
and Privacy (SP), 2017 IEEE Symposium on.
[39] C. Bishop, Pattern recognition and machine learning.
springer, 2006.
[40] P. Boldi, F. Bonchi, C. Castillo, D. Donato, and S. Vigna, “Query
suggestions using query-ﬂow graphs,” in Proceedings of the 2009
workshop on Web Search Click Data. ACM, 2009, pp. 56–63.
[41] M. F. Der, L. K. Saul, S. Savage, and G. M. Voelker, “Knock it
off: proﬁling the online storefronts of counterfeit merchandise,” in
Proceedings of the 20th ACM SIGKDD international conference on
Knowledge discovery and data mining. ACM, 2014, pp. 1759–1768.
[42] N. Gelernter and A. Herzberg, “Autocomplete injection attack,” in
European Symposium on Research in Computer Security.
[43] K. Hofmann, B. Mitra, F. Radlinski, and M. Shokouhi, “An eye-tracking
study of user interactions with query auto completion,” in Proceedings of
the 23rd ACM International Conference on Conference on Information
and Knowledge Management. ACM, 2014, pp. 549–558.
J. Huang, Z. Li, X. Xiao, Z. Wu, K. Lu, X. Zhang, and G. Jiang, “Supor:
Precise and scalable sensitive user input detection for android apps.” in
USENIX Security Symposium, 2015, pp. 977–992.
[44]
[45] L. Invernizzi and P. M. Comparetti, “Evilseed: A guided approach to
ﬁnding malicious web pages,” in Security and Privacy (SP), 2012 IEEE
Symposium on.
IEEE, 2012, pp. 428–442.
[46] N. Leontiadis, T. Moore, and N. Christin, “Measuring and analyzing
search-redirection attacks in the illicit online prescription drug trade.”
in USENIX Security Symposium, vol. 11, 2011.
[47] A. A. Lew, “Long tail tourism: New geographies for marketing niche
tourism products,” Journal of Travel & Tourism Marketing.
[48] X. Liao, C. Liu, D. McCoy, E. Shi, S. Hao, and R. Beyah, “Characterizing
long-tail seo spam on cloud web hosting services,” in Proceedings of
the 25th International Conference on World Wide Web.
International
World Wide Web Conferences Steering Committee, 2016, pp. 321–332.
[49] X. Liao, K. Yuan, X. Wang, Z. Pei, H. Yang, J. Chen, H. Duan, K. Du,
E. Alowaisheq, S. Alrwais et al., “Seeking nonsense, looking for trouble:
Efﬁcient promotional-infection detection through semantic inconsistency
search,” in Security and Privacy (SP), 2016 IEEE Symposium on.
[50] Y. Liu, Y. Liu, K. Zhou, M. Zhang, S. Ma, Y. Yin, and H. Luo, “Detecting
promotion campaigns in query auto completion,” in Proceedings of the
25th ACM International on Conference on Information and Knowledge
Management. ACM, 2016, pp. 125–134.
[51] L. Lu, R. Perdisci, and W. Lee, “Surf: detecting and measuring search
poisoning,” in Proceedings of the 18th ACM conference on Computer
and communications security. ACM, 2011, pp. 467–476.
[52] T. Moore, N. Leontiadis, and N. Christin, “Fashion crimes: trending-term
exploitation on the web,” in Proceedings of the 18th ACM conference
on Computer and communications security. ACM, 2011, pp. 455–466.
[53] Y. Nan, M. Yang, Z. Yang, S. Zhou, G. Gu, and X. Wang, “Uipicker:
User-input privacy identiﬁcation in mobile applications.” in USENIX
Security Symposium, 2015, pp. 993–1008.
[54] R. Pandita, X. Xiao, W. Yang, W. Enck, and T. Xie, “Whyper: Towards
automating risk assessment of mobile applications.” in USENIX Security
Symposium, 2013, pp. 527–542.
[55] M. F. Porter, “An algorithm for sufﬁx stripping,” Program.
[56] Z. Qu, V. Rastogi, X. Zhang, Y. Chen, T. Zhu, and Z. Chen, “Autocog:
Measuring the description-to-permission ﬁdelity in android applications,”
in Proceedings of the 2014 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2014, pp. 1354–1365.
[57] M. Shokouhi and K. Radinsky, “Time-sensitive query auto-completion,”
in Proceedings of the 35th international ACM SIGIR conference on
Research and development in information retrieval.
J. Wadleigh, J. Drew, and T. Moore, “The e-commerce market for lemons:
Identiﬁcation and analysis of websites selling counterfeit goods,” in
Proceedings of the 24th International Conference on World Wide Web.
[59] W. Webber, A. Moffat, and J. Zobel, “A similarity measure for indeﬁnite
[58]
rankings,” ACM Transactions on Information Systems (TOIS).
[60] X. Xing, W. Meng, D. Doozan, A. C. Snoeren, N. Feamster, and W. Lee,
“Take this personally: Pollution attacks on personalized services.” in
USENIX Security, 2013, pp. 671–686.
[61] G. Yang, N. Z. Gong, and Y. Cai, “Fake co-visitation injection attacks
to recommender systems,” 2017.
[62] S. Zimmeck and S. M. Bellovin, “Privee: An architecture for automati-
cally analyzing web privacy policies.” in USENIX Security Symposium.
15