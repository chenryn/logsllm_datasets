### Converting Sacabuche to an Online System

To transform Sacabuche into an online system, the primary goal is to help users avoid autocomplete scams. The service can be maintained by search engine providers or, more desirably, by third-party organizations. This approach is feasible because Sacabuche does not require query logs. We leave the implementation and maintenance of this service as future work.

### Current Implementation and Future Directions

Our current implementation of Sacabuche focuses on detecting missuggestions on search engines. Additionally, e-commerce platforms like Amazon and eBay are also vulnerable to similar attacks. A natural next step would be to extend the detector to protect these services.

### Data and Observations

We observed that manipulators often promote unpopular terms within the same context as the triggers. This strategy is more effective for advertising targets and evading detection. Specifically, autocompletes can be considered long-tail keywords. As noted in [48] and [47], searching for long-tail keywords, which are specific, converts traffic to sales more effectively than generic searches. The manipulators indeed tend to promote specific targets that are coherent with the triggers.

In contrast, traditional blackhat SEO techniques, such as keyword stuffing, pollute search results by adding irrelevant keywords. Their goal is to gain traffic from popular keywords rather than achieving a higher conversion rate. In autocomplete manipulation, users already have search intentions (trigger terms), so manipulators aim for a higher conversion rate by adding unpopular but coherent terms.

### Mitigation Strategies

Based on our findings, we identified several potential mitigation strategies beyond the detection efforts of third-party systems like Sacabuche:

1. **Search Engine Operators' Responsibilities:**
   - Search engine operators should act more aggressively to detect and remove manipulated suggestions.
   - They can detect similar phrase patterns from search logs or degrade the positioning of autocomplete phrases with highly similar but low-quality search result contents.

2. **Affiliate Network Monitoring:**
   - Affiliate networks can monitor HTTP referrers and identify indications that their affiliates are engaging in autocomplete manipulation.
   - Most affiliate networks currently have reactive policies, such as abuse reporting. A more proactive policy might help mitigate the surge of autocomplete manipulation.

### Responsible Disclosure

Since discovering manipulated suggestions, we have been in active communication with the affected parties. We have reported 100 sampled manipulated phrases to Google, Bing, and Yahoo!. Google has responded to our report. However, given the scale of the manipulations, the full-scale reporting and validation process is ongoing.

### Related Work

**Detection of Autocomplete Manipulation:**
- The most relevant work to ours was done by Liu et al. [50], who used query logs to detect promotion campaigns. Their technique requires proprietary search query logs, manual annotation of thousands of terms, and even promoters' IDs. In contrast, our NLP-based technique is fully automated and requires neither query logs nor promoters' IDs, which are easy to spoof. Our large-scale measurement study revealed the pervasiveness of autocomplete manipulation and its significant security impacts.

**Abusing Search Engines:**
- Numerous malicious activities leveraging blackhat SEO have been reported. For example, Leontiadis et al. [46] studied search redirection attacks for online pharmacy promotion, while Lu et al. [51] developed a browser plug-in for detecting malicious search redirections. Moore et al. [52] measured the abuse of trending terms for web search-engine manipulation and social-network spam. Invernizzi et al. [45] designed Evilseed to identify malicious webpages indexed by search engines. Unlike these works, our paper focuses on efficient and highly accurate missuggestion detection.

**Attacking Recommendation Systems:**
- Prior research has reported attacks on recommendation systems and proposed mitigation strategies. For instance, Xing et al. [60] proposed pollution attacks using cross-site requests, and Yang et al. [61] introduced attacks on co-visitation recommendation systems. Gelernter et al. [42] described an attack to pollute personalized search history. These attacks differ from our crowd-sourced autocomplete manipulation, which is an emerging type of attack on recommendation systems.

**Security Analysis Leveraging NLP:**
- Recent research leverages NLP for security and privacy. Examples include analyzing web privacy policies [62], generating Android privacy policies [54], inferring mobile app permissions [54, 56], detecting sensitive user input [44, 53], and website promotional infection detection [49]. Our work identifies a novel application of NLP for scalable detection of autocomplete manipulations.

### Conclusion

In this paper, we present the first technique for large-scale, semantics-based analysis of autocomplete manipulations, an emerging threat with significant security implications. Our system, Sacabuche, uses a two-step approach to filter through a large number of trigger-suggestion pairs, based on lightweight NLP analysis. Only a small set of suspicious suggestions are run against search engines for in-depth analysis. Our study shows high effectiveness (96.23% precision, 95.63% recall) and enables a large-scale measurement involving 114 million query terms. Our findings reveal the significant impact of this threat, with hundreds of thousands of manipulated terms promoted through major search engines, spreading low-quality content and even malware and phishing. The sophisticated evasion and promotion techniques and the long lifetimes of abused terms call for further studies and serious efforts to mitigate and eliminate this threat.

### Acknowledgment

We thank our shepherd Gianluca Stringhini and the anonymous reviewers for their insightful comments. This work is supported in part by the NSF CNS-1223477, 1223495, 1527141, 1618493, 1618898, Samsung Gift fund, and ARO W911NF1610127.

### References

[References listed here, formatted and organized as per the original text.]