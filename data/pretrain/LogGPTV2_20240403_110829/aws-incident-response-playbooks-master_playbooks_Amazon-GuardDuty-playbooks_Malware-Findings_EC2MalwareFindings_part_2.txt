If you determine that the activity is unauthorized, or decide it is prudent to assume so, the first priority is to prevent further compromise without impact to production workloads.
1. Determine if disabling the EC2 instance in question will not result in a service outage.
2. If the EC2 instance is a part of an Auto Scaling group it will need to be removed from the group. You can remove the instance from the auto-scaling group with the AWS CLI command below.
    aws autoscaling detach-instances \
        --instance-ids $Instance_ID \
        --auto-scaling-group-name 
3. Next the instance will need to be deregistered if attached to an Elastic Load Balancer to prevent requests from being sent.
    aws elb deregister-instances-from-load-balancer \
        --instances $Instance_ID \
        --load-balancer-name 
4. Remove the instance profile from the instance with the AWS CLI command below to remove IAM permissions.
    aws ec2 disassociate-iam-instance-profile --association-id $Association_ID
5. Prevent further connections to Isolate and quarantine the instance via security groups with the AWS CLI commands below in step 5. (Note that this isolation security group needs to be created beforehand. This can be a security group that doesn't allow any traffic, or traffic allowed specific to your use case)
    **Note**
    Be aware that there is currently no way to completely isolate/contain/quarantine an Instance using Security Groups, due to Connection Tracking. While Security Groups can be used to prevent future connections, they CANNOT be used to terminate existing Tracked Connections, as noted in the documentation [Connection Tracking](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html). The following are the only methods to completely isolate/contain/quarantine an Instance:
    1. Shutting the instance down
        - You must ensure that you’ve collected all necessary volatile data needed for investigations like memory, disk, and/or system logs BEFORE shutting down!
    2. Using the endpoint’s local/native utilities
        - Implementing OS/host firewall rules to terminate/block connections at the system level
    3. Using an Endpoint Agent
        - Leveraging an EDR or similar endpoint agent with containment/isolation capabilities
    4. NACL’s
        - Note that using NACL's will affect an entire subnet and cannot be used to isolate a singular Instance
    5. Disconnecting the ENI
        - This is only possible for non-Primary ENI’s as you cannot disconnect a primary ENI
    aws ec2 modify-instance-attribute \
        --instance-id $Instance_ID \
        --groups $Isolation_SG_ID  
You can also automate the incident response and forensics capabilities utilizing AWS services. Examples on how to automate this activity can be found at this [AWS documentation](https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/automate-incident-response-and-forensics.html)
### **Part 3**: Eradicate the Incident
This is the stage for taking remedial action to minimize the impact of the unauthorized activities.
1. To remediate the compromised EC2 instance, follow the steps below 
    1. Investigate the potentially compromised instance for malware and remove any discovered malware. You may check the [AWS Marketplace](https://aws.amazon.com/marketplace) to see if there are helpful partner products to identify and remove malware.  
    2. If you are unable to stop unauthorized activity on your EC2 instance, we recommend that you terminate the compromised EC2 instance and replace it with a new instance as needed or only leave it running for additional data acquisition. Use the AWS CLI Command below to shut the system down.
        aws ec2 stop-instances --instance-ids $Instance_ID
    3. If it is determined in your forensic analysis (part 5) that your AMI is potentially compromised you will need to follow your playbook for creating or recreating AMIs to ensure full eradication of any potential compromise.
### **Part 4**: Recover from the Incident
1. For resources that were modified during the compromise:
    1. If the resource can be removed and replaced, do so. For example, EC2 instances in an EC2 Auto Scaling group, with a Launch Configuration referencing a non-compromised AMI, or Launch Templates used to create EC2 instances, terminate the instance, allow EC2 Auto Scaling to adjust capacity as required
    1. If the resource cannot be replaced, either:
        1. Restore the resource from a known good backup, or;
        1. Prepare a new resource and configure it into the application’s infrastructure, while isolating the compromised resource and removing it from the application’s infrastructure. Update the CMDB accordingly
        1. Either remove the compromised resource, or continue to leave it isolated for post-incident forensics
1. For resources that were deleted during the compromise:
    1. Determine what (if any) application the resource belonged to, by checking in the CMDB, or confirming the resource’s tag(s) (Check AWS Config if the tags aren’t listed in the CloudTrail entry and the [resource is supported by AWS Config](https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html))
    1. If the deleted resource can be restored from backup, commence the restore procedure
    1. If you are using immutable architectures or similar deployment methods, redeploy the relevant resources
    1. If neither of the above options are possible, consult the CMDB to obtain the resource’s configuration, and recreate the resource and configure it into the application’s infrastructure.
    1. If the CMDB information is inadequate or non-existent, assign resource creation to the relevant personnel in your organization
1. For resources that were created during the compromise. For more details on what to do if you notice unauthorized activity refer to [this knowledge center article](https://aws.amazon.com/premiumsupport/knowledge-center/potential-account-compromise/)
    1. Confirm these have been deleted or isolated for further analysis, per the steps in **Part 3**.
1. Validate that the affected resources were remediated and the expected state of any impacted systems were restored
### **Part 5**: Post-Incident Activity
This activity contains two parts. Firstly, some compromised resources may require forensic analysis, either to fulfil regulatory obligations or improve incident handling, both taking input from the root cause analysis that will result from forensic investigation. The second part is a “sharpen the saw” activity which helps teams to assess their response to the actual incident, determine what worked and what didn’t, update the process based on that information and record these findings.
Firstly, perform any required forensic investigation to determine (for compromised resources) what methods the actors may have used and to determine if additional risks and risk mitigations are required for the resources and/or applications in question.
1. For any compromised resources that have been isolated for further analysis, perform the forensic activity on those resources and incorporate the findings into the post-incident report. For an example, please refer to the [Automated Forensics Orchestrator for Amazon EC2](https://aws.amazon.com/solutions/implementations/automated-forensics-orchestrator-for-amazon-ec2/)
1. Ensure that the CMDB is correctly updated to reflect the current status of all resources and applications impacted
Secondly, review the incident itself and the response to it, to determine if anything needs to be changed for handling any similar incidents in the future.
1. Review the incident handling and the incident handling process with key stakeholders identified in Part 1, Step 8.
1. Document lessons learned, including attack vector(s) mitigation(s), misconfiguration, etc.
1. Store the artifacts from this process with the application information in the CMDB entry for the application and also in the CMDB entry for the credential compromise response process.
## Additional Resources
### Incident Response
https://aws.amazon.com/blogs/security/how-get-started-security-response-automation-aws/
https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/welcome.html
https://aws.amazon.com/blogs/security/how-to-automate-incident-response-in-aws-cloud-for-ec2-instances/
https://aws.amazon.com/blogs/security/forensic-investigation-environment-strategies-in-the-aws-cloud/
https://aws.amazon.com/blogs/security/how-to-automate-forensic-disk-collection-in-aws/
### GuardDuty
https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings-summary.html
### Preperation
Security and Networking sections in [Best practices for Amazon EC2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-best-practices.html).
[Amazon EC2 security groups for Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html) and [Amazon EC2 security groups for Windows instances](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-security-groups.html).
[Tips for securing your EC2 instances (Linux)](https://aws.amazon.com/articles/tips-for-securing-your-ec2-instance/).
[AWS security best practices](https://aws.amazon.com/architecture/security-identity-compliance/)
[Infrastructure Domain Incidents on AWS](https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/infrastructure-domain-incidents.html)
Browse for further assistance on the AWS developer forums: *https://forums.aws.amazon.com/index.jspa*
If you are a Premium Support package subscriber, you can submit a [technical support](https://support.console.aws.amazon.com/support/home?#/case/create?issueType=technical) request.