### Extract information using NetBIOS Name Service NBNS (TCP 137)
NBNS is a service used by Windows Internet Name Service and it is
responsible for establishing session connections between different
windows devices on the network. This service maintains a database that
holds host names and the corresponding IP addresses. NBNS does not
support IPv6.
### Extract information using NTP Enumeration (UDP 123)
Network Time Protocol is responsible for clock synchronization between
computer systems and trusted time servers. This technique may provide
valuable information, such as a list of hosts connected to an NTP
server, client IP addresses and their system names and OS's, and/or
internal IPs if the NTP server is in the DMZ (demilitarized zone).
## Enumeration Tools on Linux and Windows
In this section, we will talk about commonly used tools for enumeration
and will identify their uses.
### SMTP Enumeration
-   **NetScanTools Pro** is a Windows tool with a graphical user
    interface, it is an email generator and email relay testing tool.
-   **SMTP-user-enum** is a tool that enumerates OS-level user accounts
    on Solaris (UNIX) via the SMTP service.
-   **Metasploit** offers the "auxiliary/scanner/SMTP/smtp_enum" module
    that helps to enumerate usernames.
### NetBIOS Enumeration
-   **Nbtstat** is a tool in Windows that displays protocols'
    statistics, NetBIOS name tables and name cache.
-   **SuperScan** is a tool in Windows that scans ports and resolves
    hostnames.
-   **Hyana** is a tool that shows user login names for Windows servers
    and domain controllers.
-   **Netview** is a command line tool to identify shared resources on a
    network.
### SNMP Enumeration
-   Rory McCune's **snmpwalk** wrapper script helps automate the
    username enumeration process for SNMPv3.
-   **OpUtils** is a tool for Windows and Linux that helps to monitor,
    diagnose, and troubleshoot IT resources.
-   **SNMP-check** allows enumerating the SNMP devices and returns the
    output in a human-readable format.
### LDAP Enumeration
-   **LDAP Admin Tool** or **JXplorer** is a cross-platform LDAP browser
    and editor that can be used to search, read, and edit any standard
    LDAP directory. It can be used on Linux, Windows, and many other
    operating systems.
-   **Windapsearch** is a Python script to help enumerate users, groups,
    and computers from a Windows domain through LDAP queries.
### NTP Enumeration
-   **ntptrace** is a utility available on Linux to trace a chain of NTP
    servers.
-   **ntpdc** and **ntpq** are utilities available on Linux to monitor
    the operation of the NTP daemon.
### DNS Enumeration
-   **nslookup** is one of the oldest DNS querying tools to obtain a
    domain name to IP address mapping and other DNS details.
-   **host** or **dig** (domain information groper) are utilities
    available on Linux that help to query DNS servers and perform DNS
    lookups.
### SMB enumeration
-   **SMBMap** allows users to enumerate share drives across an entire
    domain.
### Other Helpful Enumeration Tools Provided with Kali
-   **theHarvester** gathers emails, subdomains, hosts, employee names,
    open ports, and banners from different public sources like PGP key
    servers and SHODAN.
-   **Enum4linux** is a tool to enumerate information from Windows and
    Samba systems.
-   **Devploit** is a simple python script for Information Gathering.
-   **Red Hawk v2** is an all-in-one tool for Information Gathering.
-   **Metagoogil** is a tool that utilizes the Google search engine to
    get metadata from the documents available in the target domain.
## Summary
This chapter was a lightweight overview of the enumeration process. We
started by introducing the importance of enumeration, then we continued
with a list of the different enumeration techniques. Later we dived into
specific tools that we can use to obtain our objectives.
> Chapter 4
>
> **External Reconnaissance**
>
> Contributor: Haythem Arfaoui
>
> **Active Reconnaissance Introduction**
Active footprinting involves the use of tools and techniques that can
aid you in gathering more information about your target. Unlike passive
footprinting where the process never 'touches' the target, active
footprinting involves tasks that may be logged by the target's systems,
therefore stealth is key.
## Nmap
Let's start by giving you a quick introduction is to what "NMAP" is.
NMAP is short for "Network MAPper", a free and open-source command-line
tool for network discovery and security assessment. It is used by
ethical hackers, penetration testers, systems administrators, black hat
hackers; anyone, in fact, who wants to understand more about the devices
on a given network. It is also often called a network scanner or a port
scanner because it scans for open ports on devices, but it has much more
functionality than just a simple port or network scanner. In addition to
the classic command line, NMAP also includes a GUI called "Zenmap."
Now, we are going to go through the required steps to use NMAP in order
to gather information on a target by running port scanning and
fingerprinting. Essentially, in this screenshot you can see the output
of running ***nmap -h*** which is the help command.
![](media/image17.jpeg)The above screenshot illustrates the most basic
and simple command for NMAP., ***nmap***
***\***. Now, this simple default scan is actually scanning
1000 TCP ports. If we do a little search into this directory,
(/usr/share/nmap, but this may differ depending on where NMAP is
![](media/image18.jpeg)installed on your system) you can see some of the
default ports that NMAP uses for the default scan.
If we run the default scan command as a privileged user, NMAP will
launch what's known as a Raw SYN Stealth Scan. On the other hand, if we
run the NMAP command as an unprivileged user, it will run a TCP Connect
Scan. Without root privileges it will run a full connect scan.
### Nmap Port Status
**Open**: This indicates that an application is actively accepting TCP
connections or UDP datagrams or SCTP associations on this port.
Essentially this means that it is accepting connections and each open
port is an avenue for attacks.
**Closed**: A closed port is accessible in that it receives and responds
to NMAP probe packets but there is no application listening on it. These
closed ports can be helpful in showing that a host is
up because closed ports are reachable and it's possible that it may be
worth scanning it later in case something opens up.
**Filtered**: A filtered port means that NMAP cannot determine whether
or not the port is open because some form of packet filtering prevents
its probes from reaching the port. This means the probes are filtered by
some sort of a dedicated firewall, router rules, ACLs, or a host-based
firewall. Sometimes these ports respond with ICMP error message such as
Type 3 Code 13, which is like destination unreachable.
**Unfiltered**: The unfiltered state means that a port is accessible,
but NMAP is unable to determine whether it is open or closed. Only the
ACK scan, which is used to map firewall rulesets, classifies ports into
this state. Scanning unfiltered ports with other scan types such as a
Window scan, a SYN scan, or a FIN scan, may help resolve whether the
port is open.
**Open\|Filtered**: This state indicates that NMAP isn't able to
determine whether a port is open or filtered. The lack of response could
also mean that the packet filter dropped the probe or any response it
received. Thus, NMAP can not make sure that the port is open, or that it
is filtered. UDP, IP, FIN, Null and Xmas scans categorize ports as well.
**Closed\|Filtered**: This state is received when NMAP isn't able to
determine whether a port is closed or filtered. This state is only used
by the Idle scan based on IP packet identifiers.
> **Host Discovery**
Finding live hosts in your local network is a common task among
penetration testers and system administrators to enumerate active
machines on a network segment. Nmap offers higher detection rates over
the traditional ping utility because it sends additional probes than the
traditional ICMP echo request to discover hosts.
This recipe describes how to perform a ping scan with Nmap to find live
hosts in a local network.
> ***#nmap -sL \*** : (List Scan) No Scan. List targets only.
***#nmap -sn \*** : (Disable Port Scan) This option tells Nmap
not to run a port scan after host discovery.
> ***#nmap -Pn \*** : (Disable Ping) Disable host discovery.
> Port scan only.
>
> ***#nmap -PS/PA/PU/PY \[portlist\] \*** : TCP SYN/ACK, UDP or
> SCTP discovery to given ports.
### Scan Techniques
Most of the scan types are only available for privileged users. This is
because they are sending and receiving raw IP packets, (or even ethernet
frames) that require root access on Unix systems. Using an administrator
account on Windows is recommended, though Nmap sometimes works for
unprivileged users on that platform if WinPcap has already been loaded
into the OS. So in this section, we are going to discuss the different
scanning techniques that Nmap offers:
> ***#nmap -sS/sT/sA/sW/sM*** : TCP SYN/Connect()/ACK/Window/Maimon
> scans
>
> ***#nmap -sU*** : UDP Scan
>
> ***#nmap -sN/sF/sX*** : TCP Null, FIN, and Xmas scans
>
> ***#nmap \--scanflags \*** : Customize TCP scan flags
>
> ***#nmap -sI \*** : Idle scan
>
> ***#nmap -sY/sZ*** : SCTP INIT/COOKIE-ECHO scans
>
> ***#nmap -sO*** : IP protocol scan
>
> ***#nmap -b \*** : FTP bounce scan
### Port Specification and Scan Order
Port specification is an important part of the scan. We should set port
scope carefully because the wrong scope will make our result vulnerable
to false positives and timeout.
As we know TCP and UDP protocols have port numbers from 0 to 65535.
There are default values for some scans but we can specify the target
ports with this parameters.
> ***#nmap -p \ \*** : Only scan specific ports
>
> ***#nmap -p \ \--exclude-ports \
> \*** : Exclude the specified ports from scanning
>
> ***#nmap -F \*** : Fast mode - Scan fewer ports than the
> default scan
>
> ***#nmap -r \*** : Scan ports consecutively - don\'t
> randomize
>
> ***#nmap \--top-ports \ \*** : Scan most common
> ports
>
> ***#nmap \--port-ratio \ \*** : Scan ports more
> common than \
### Nmap Script and Version Scan
Nmap provides script scanning capability which gives Nmap very flexible
behavior to get more information and tests about the target host. This
feature is called Nmap Scripting Engine (NSE). NSE gives the user the
ability to write scripts for the test. Lua is a programming language
supported by NSE. NSE has some vulnerability detection scripts too.
![](media/image19.jpeg)NSE has categories to make things tidy. The
following are the categories
> *Source:
> [[https://www.poftut.com/nmap-script-version-scan/]{.underline}](https://www.poftut.com/nmap-script-version-scan/)*
To use different category scripts in the Nmap script, NSE should be
enabled for script scan with
***-sC*** . This will by default enable default category scripts for the
target
> ***#nmap -sC \*** : Enable Script Scan.
Now we want to use a specific script for our scan but first, we should
list and get information about these scripts. Nmap have a web page where
all scripts are listed. Here is the list of available NSE Scripts.
Default category scripts are fired while Nmap scanning is performed but
if we want to run a specific script we can specify the script name or
category name like the following.
> ***#nmap -sC \--script=\ \*** : Run a specific
> script
### Nmap Operating System Detection
One of Nmap\'s best-known features is remote OS detection using TCP/IP
stack fingerprinting. OS detection enables some other tests which make
use of information that is gathered during the process anyway.
> ***#nmap -O \*** : Remote OS detection using TCP/IP stack
> fingerprinting
***#nmap -A \*** : Enables OS detection, version detection,
script scanning, and traceroute
Finally, for more details about the Nmap commands and the different
techniques such as Nmap Timing and Performance, Nmap Output and others,
I recommend you to check this cheat sheet created by Stationx.com.
## Scanning
Scanning is a set of procedures for identifying live hosts, ports, and
services, discovering Operating system and architecture of the target
system, Identifying vulnerabilities and threats in the network. Network
scanning is used to create a profile of the target organization.
Types of scanning:
-   **Port Scanning**: To find open ports and services on a target
-   **Network Scanning**: Find IP address in the network of the target
-   **Vulnerability Scanning**: Find weakness or vulnerabilities on the
    target
**Port Scanning**: In this process, the ethical hackers, penetration
testers, system administrators identify available and open ports and
understand the services that run on the target. Ports and ports number
can be classified into these three ranges:
A.  Well-known ports: **from 0 to 1023**
B.  Registered ports: **from 1024 to 49151**
C.  Dynamic ports: **from 49152 to 65535**
## Port Scanning Tools
> **NMAP**
![](media/image20.jpeg)As we discovered it in the previous sections,
Nmap is the most popular network discovery and port scanner in the
history.
### Unicornscan
![](media/image21.jpeg)This is the second most popular free port scanner
after Nmap. It is intended to provide a researcher with a superior
interface for introducing a stimulus into and measuring a response from
a TCP/IP enabled device or network.
### Zenmap
![](media/image22.jpeg)Zenmap is the official Nmap Security Scanner GUI.
It is a multi-platform (Linux, Windows, Mac OS X, BSD, etc.) free and
open source application which aims to make Nmap easy for beginners to
use while providing advanced features for experienced Nmap users.
**Network Scanning**: This means to look for active machines or targets
on the network. This can be done using tools or scripts that ping to all
IP addresses on the networks and get a list of the alive nodes and their
IP addresses.
## Network Scanning Tools
### Angry IP Scanner
![](media/image23.jpeg)This is our third recommended port scanning tool
for network discovery. It\'s popular for its fast scanning speed thanks
to its multi-thread approach which is separating each scan.
### Wireshark
Wireshark is an open source tool which is known as multi-platform
network protocol analyzer. It scans data vulnerabilities on a live
network between the active client and server.
### ![](media/image24.jpeg)Advanced IP Scanner