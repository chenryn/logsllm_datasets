title:Efficient Hierarchic Management For Reconfiguration of Networked Information
Systems
author:Jonathan C. Rowanhill and
Philip E. Varner and
John C. Knight
Efficient Hierarchic Management For Reconfiguration of Networked Information 
Systems
Jonathan C. Rowanhill
Philip E. Varner
John C. Knight
Department of Computer Science
University of Virginia
151 Engineer’s Way, Charlottesville, VA 22904-4740
{rowanhill | varner | knight}@cs.virginia.edu
Abstract
The management of modern distributed systems is com-
plicated  by  scale  and  dynamics.  Scalable,  decoupled  com-
munication establishes flexible, loosely coupled component
relationships, and these relationships help meet the present
demands  on  management.  However,  traditional  decoupled
addressing mechanisms tend to focus the addressing on only
one of the parties involved in communication while, in gen-
eral, a communication relationship involves a sender, com-
municated content, and receivers. The state of all three are
simultaneously  relevant  to  correctness  of  a  management
relationship and its communications. We introduce Selective
Notification,  a  scalable,  decoupled  event  dissemination
architecture 
simultaneous  and  combined
addressing  of  senders,  receivers,  and  events.  We  demon-
strate  its  application  to  programming  dynamic,  scalable
management relationships. We then discuss its implementa-
tion, and present measurements of its effective capabilities.
supporting 
1. Introduction
Very  large  networked  information  systems—with  mil-
lions of components—have become crucial to many organi-
zations, both military and civilian. Yet they are inescapably
exposed  to  a  wide  variety  of  traumas  including  extreme
environmental  conditions,  failures  of  operating  software,
and  losses  of  available  resources  because  of  malicious  or
accidental  damage.  In  order  to  provide  dependable  service
such  networks  have  to  respond  to  these  changes  with
explicit  management  because,  without  response,  depend-
ability would be limited by entropy. The required responses
may  be  large  and  complex,  necessitating  a  sophisticated
management service architecture.
In this paper we introduce a communication mechanism
for  facilitating  the  distributed  management  of  networked
information  systems,  Selective  Notification,  that  provides
symmetrically addressed, decoupled event dissemination. It
permits  reconfiguration  to  be  commanded  quickly,  effi-
ciently and in a highly scalable way. This type of reconfigu-
ration  can  be  used  for  error recovery.  Coupling  this  with  a
sense/analysis  error-detection  capability  yields  an  architec-
ture for hierarchical management in support of general fault
tolerance mechanisms for networked information systems.
Researchers are pursuing more dynamic and less hierar-
chical management structures. Yet there is still merit to the
hierarchical approach  because of its ability to  respond in a
coordinated  way  to  damage  or  attacks  that  are  geographi-
cally  diverse.  The  combination  of  hierarchical  and  widely
distributed management has significant potential in complex
systems,  and  more  generally,  management  hierarchy  must
apply  to  increasingly  large  and  dynamic  information
systems [10].
The elements of an approach to hierarchical management
with  increased  dynamics  may  be  found  in  the  form  of  a
loosely  coupled  system [5].  Our  proposed  mechanism  is  a
general architecture, illustrated by the intentionally general
example  of  Figure  1.  A  very  large  collection  (millions)  of
nodes of type A (e.g., those requiring management) operate
in coordination with a smaller collection of nodes of type B
(e.g.,  those  determining  management  actions).  The  hierar-
chical  relationships  between  them  are  established  dynami-
cally,  being  based  on  the  current  state  of  participants  and
third parties such as trust authorities. In this example, nodes
interact with those of the same shade, where shade indicates
some aspect of a node’s state. As their modelled state (shade
in  the  figure)  change,  their  management  relationships  are
automatically  updated  to  reflect  appropriate  connections.
Thereby, these relationships remain current and appropriate
over highly dynamic system state. This occurs transparently,
without requiring any node to know the state of any other.
Consider  the  nodes  of  Figure  1  to  be  managers  over  a
large  distributed  system.  In  general,  the  appropriateness  of
their intercommunication might involve any combination of
the state of senders, content, and receivers. This requires a
communication service addressing all three elements. It is in
their  simultaneous  combination  that  loosely  coupled  man-
agement relationships may be achieved. By contrast, exist-
ing  scalable  services  such  as  publish/subscribe  support
asymmetric  addressing.  The  questions  we  address  are:  (1)
whether  a  symmetrically  addressed  mechanism  can  scale
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:50:41 UTC from IEEE Xplore.  Restrictions apply. 
with reasonable performance; and (2) whether it can be used
effectively for expressing management relationships.
Selective  Notification  is  a  symmetrically  addressed,
decoupled event service that deals with both of these ques-
tions. In this paper we present Selective Notification’s core
concept,  symmetric  indirect  addressing,  and  then  we  dem-
onstrate its utility through application in a hypothetical man-
agement  scenario.  This  is  followed  by  exposition  of  its
implementation as data transforms as well as modifications
and  extensions  to  Siena [2],  a  scalable  publish/subscribe
architecture.
Our  assessment  of  feasibility  is  based  on  experiments
with a full implementation. The results of these experiments
allow  us  to  model  its  performance  for  systems  far  larger
than we can implement directly. We conclude that symmet-
rically addressed decoupled communication scales for hier-
archical 
coupled
management.
dissemination 
event 
in 
loosely 
2. Selective Notification
Clients  of  decoupled  communication  interact  without
having  knowledge  of  one  another.  More  specifically,  spa-
tially  decoupled  communication [5]  allows  clients  to  inter-
act  despite  not  knowing  each  others’  location,  quantity,
distribution,  or  state.  Property-based  communication  is  a
particularly  useful  form  that  allows  otherwise  decoupled
components  to  communicate  by  describing—rather  than
explicitly naming—relevant objects in communication rela-
tionships.  Communication  in  this  form  involves  two  key
elements:
• Property  addressable  objects:  Some  objects  advertise  a
model of their properties to the communications service.
An object’s properties constitute its address.
• Descriptive, indirect addresses: Clients communicate by
describing,  (often  through  constraints)  properties  of
addressable  objects.  A  description  forms  an  indirect
address of the relevant targets for communication.
Scheme
Content-based
Publish Subscribe
Addressed 
Addressing
Object
Events
Object
Receivers
Intentionally 
Receivers
Senders
Addressed One-to-
many Messaging
Sender Qualified 
Senders
Receivers
Messaging
Table 1: Summary of traditional, decoupled, property 
based addressing schemes.
Several forms are in use today, and they differ in which
objects are addressable and which objects perform address-
ing. Three common forms are summarized in Table 1. They
are  content-based  publish/subscribe [3, 4], 
intentionally
addressed one-to-many messaging [1], and sender qualified
messaging. If these decoupled addressing mechanisms were
used by a loosely coupled hierarchy such as that illustrated
in Figure 1, several requirements might arise. A node under-
taking reconfiguration might apply intentional addressing to
indirectly  target  an  event  to  managed  nodes,  doing  so  by
describing  the  states  of  their  internal  security  alarms  for
example.  Likewise,  managed  nodes  might  apply  sender
qualification  to  describe  necessary  properties  of  high-level
Thousands of Type B Nodes
With Dynamic State
Dynamic
Management
Relationships
Third-Party
Authorities
Millions of Type A Nodes
with Dynamic State
Figure 1. General networked information system management relationships.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:50:41 UTC from IEEE Xplore.  Restrictions apply. 
managers  from  which  they  will  receive  commands,  requir-
ing proper authority for example. However, the architectures
of Table 1 do not support delivery of communication events
based upon simultaneous consideration of all three address-
ing mechanisms.
2.1 The concept of Selective Notification
Selective  Notification  combines  content,  sender,  and
receiver  addressing  in  a  unified,  simultaneously  applied
addressing mechanism, and permits a scalable implementa-
tion. We refer to the mechanism as the Selective Notification
service or just Selective Notification where the meaning is
clear. We refer to events using this mechanism as Selective
Notification events. Selective Notification event delivery is
illustrated  in  Figure  2.  A  message  sending  client  is  shown
on  the  left  and  an  array  of  potential  receivers  clients  are
shown  on  the  right.  Both  senders  and  receivers  advertise
their local state to form their respective addresses. In the fig-
ure,  each  client’s  advertised  state  is  represented  by  an
attached  “puzzle-piece”.  Sender  addresses  are 
lightly
shaded,  while receiver addresses  are  white.  Sender qualifi-
cation is shown by sender puzzle pieces attached to receiv-
ers,  and  intentional  addressing  is  shown  with  receiver
puzzle  pieces  attached  to  senders.  The  characteristics  that
define  receiver  content  of  interest  are  depicted  by  a  black
puzzle-piece at each receiver.
Senders push events to the communications system. Fig-
ure 2 shows a sender emitting an event. Its content is a U-
shaped black puzzle-piece. In the notation of this figure, an
address  matches  an  indirect  address  when  their  respective
puzzle-pieces “fit together”. The Selective Notification ser-
vice delivers an event to a receiver if and only if intentional
addressing,  sender  qualification,  and  content  addressing
match. In this example, the sender’s event will be delivered
to  receivers  1  and  4.  The  remaining  receivers  mismatch  in
one or more element of addressing.
3. Related work
Several  research  groups  have  applied  decoupled  com-
munication for the purpose of management, including Soft-
ware  Dock [7]  and  Astrolabe [13].  To  our  knowledge,  the
importance  of  symmetry  in  establishing  loosely  coupled
management relationships has not been discussed.
Skarmeas et al. [11] describe a symmetrically addressed,
decoupled  communication  mechanism  in  the  form  of  an
agent blackboard. It was not designed as a scalable architec-
ture.
Overlap  in  potential  between  intentional  addressing  and
publish/subscribe  has  been  applied  in  many  applications,
including sensor networks [9] and the control of robots [6].
Designers of scalable communication mechanisms have also
noted this potential. For example, Siena has been modified
to support intentional addresses [8], while the authors of the
Astrolabe  system  have  proposed  using  Bloom  filters  to
achieve publish/subscribe [12].
4. An example application
An  example  application  for  Selective  Notification
might be defending against a worm. Returning to the illus-
tration of Figure 1, we assume on the order of a million low-
level managers are embedded within a global distribution of
Internet Web servers and several thousand high-level man-
agers are run by service providers. We also assume that the
Web servers are owned by a fictitious corporation, “Macro-
corp”,  that  Macrocorp  obtains  security  service  from  a  sec-
ond 
that
Macrocorp  cooperates  with  government  emergency
response activities.
fictitious  corporation,  “Intellimune”,  and 
Our hypothesized scenario assumes the spread of a worm
that,  like  most  worms,  exploits  a  bug  in  network  code  to
self-replicate (in this case, in Web servers). Unchecked, the
worm  might  undermine  Macrocorp’s  global  application.
Fortunately,  Intellimune  and  government  systems  monitor
Sender
Event
Addressing Type
Address
Indirect Address
Sender
Qualified
Intentional
Sender
Sender
Content
Event
Receiver
Receiver
Receiver
Figure 2. Selective Notification Addressing
Receiver 1
Receiver 2
Receiver 3
Receiver 4
Receiver 5
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:50:41 UTC from IEEE Xplore.  Restrictions apply. 
for attacks against common software applications. Detecting
the  attack,  they  manage  systems  such  as  Macrocorp’s
through symmetrically addressed decoupled communication
policies.  Our  implementation  uses  an  XML  syntax  but,  in
this example, a more human-readable syntax is used.
4.1 Modelling system state
Our model of Web servers, i.e., the state that Web servers
advertise as their address, is:
 = {
String
String
String
int
DomainedSet{docs, cgi, xml} services;
float
application;
application_version;
serviceIPAddress;
servicePort;
load}
Models  are  named  elements  consisting  of  typed,  named
attributes.  Every  Web  service  in  our  example  application
presents an instance of this model to Selective Notification
in  which  there  is  an  assignment  of  a  value  to  each  model
attribute such as in the following example:
 = {
application
application_version
serviceIPAddress
servicePort
services
load
= “IIS”;
= “2.4.0”; 
= “128.142.55.55”;
= 8080; 
= {docs, cgi};
= 0.39}
This Web server is free to change its attribute values at any
time.  It  might,  for  example,  periodically  update  its  load
attribute with its latest calculation. Changes can also include
servers joining and leaving the system. All such changes are
handled  automatically  by  the  decoupled  communications
aspect of Selective Notification.
Now  suppose  that  Macrocorp  agrees  to  respond  to  gov-
ernment  regional  fault-response  systems.  Such  high-level
systems are not allowed to define their own region of com-
mand or trustworthiness. Instead, these are assigned to fault-
response systems by authorized third parties, such as a regu-
lated trust manager. For example, a Northwest regional con-
troller might be assigned the following sender qualifications
by authorized third parties:
 = {
String
int
_command_region
_trust_level
= “northwest”;
= 4}
Restricted sender qualification within Selective Notification
allows a tiered-authority model of sender state enforcement,
so that increasingly critical state can be managed by increas-
ingly trustworthy elements.
4.2 Connectivity policies
Web servers describe the messages they will receive and
the  clients  from  which  they  will  receive  messages  through
definition  of  connectivity  policies.  For  example,  the  Web
servers  in  our  hypothetical  application  might  register  the
following policy:
{ : {
alert
threat_level
==  ANY
>= 4}
AND
AND
 : {
_command_region
_trust_level
== “northwest” AND 
>= 2}}
OR
{ : {
command
AND
 : {
== ANY}
entity
_command_region
== “Intellimune” AND 
== “national”}}
which  translates  to  “Observes  command  events  from  any
national Intellimune control system as well as alerts greater
than  or  equal  to  threat-level  4  from  Northwest  controllers