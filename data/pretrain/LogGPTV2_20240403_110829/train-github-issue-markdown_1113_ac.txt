以下是优化后的文本，使其更加清晰、连贯和专业：

---

正在构建 XLA 并将其安装到 jaxlib 源代码树中...

命令如下：
```sh
./bazel-3.7.2-darwin-x86_64 run --verbose_failures=true --config=short_logs --config=avx_posix --config=mkl_open_source_only :build_wheel -- --output_path=/Users/mateusz/PycharmProjects/jax/dist
```

客户端提供的选项：
- 继承的 'common' 选项: `--isatty=0 --terminal_columns=80`

从 `/Users/mateusz/PycharmProjects/jax/.bazelrc` 读取 'run' 的 rc 选项：
- 继承的 'common' 选项: `--experimental_repo_remote_exec`

再次从 `/Users/mateusz/PycharmProjects/jax/.bazelrc` 读取 'run' 的 rc 选项：
- 继承的 'build' 选项:
  - `--repo_env PYTHON_BIN_PATH=/usr/local/opt/python@3.8/bin/python3.8`
  - `--action_env=PYENV_ROOT`
  - `--python_path=/usr/local/opt/python@3.8/bin/python3.8`
  - `--repo_env TF_NEED_CUDA=0`
  - `--action_env TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0`
  - `--repo_env TF_NEED_ROCM=0`
  - `--action_env TF_ROCM_AMDGPU_TARGETS=gfx803,gfx900,gfx906,gfx1010`
  - `--distinct_host_configuration=false -c opt`
  - `--apple_platform_type=macos --macos_minimum_os=10.9`
  - `--announce_rc`
  - `--define open_source_build=true`
  - `--define=no_kafka_support=true`
  - `--define=no_ignite_support=true`
  - `--define=grpc_no_ares=true`
  - `--spawn_strategy=standalone`
  - `--strategy=Genrule=standalone`
  - `--enable_platform_specific_config`
  - `--define=with_tpu_support=true`

在文件 `/Users/mateusz/PycharmProjects/jax/.bazelrc` 中找到适用的配置定义：
- `build:short_logs`: `--output_filter=DONT_MATCH_ANYTHING`
- `build:avx_posix`: `--copt=-mavx --host_copt=-mavx`
- `build:mkl_open_source_only`: `--define=tensorflow_mkldnn_contraction_kernel=1`
- `build:macos`: `--config=posix`
- `build:posix`: 
  - `--copt=-Wno-sign-compare`
  - `--define=no_aws_support=true`
  - `--define=no_gcp_support=true`
  - `--define=no_hdfs_support=true`
  - `--cxxopt=-std=c++14`
  - `--host_cxxopt=-std=c++14`

加载状态：
- 已加载 0 个包

---