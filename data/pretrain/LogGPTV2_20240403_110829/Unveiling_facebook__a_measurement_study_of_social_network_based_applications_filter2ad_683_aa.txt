title:Unveiling facebook: a measurement study of social network based applications
author:Atif Nazir and
Saqib Raza and
Chen-Nee Chuah
Unveiling Facebook: A Measurement Study of Social
Network Based Applications
Atif Nazir
Saqib Raza
Chen-Nee Chuah
University of California, Davis
University of California, Davis
University of California, Davis
Davis, CA
PI:EMAIL
Davis, CA
PI:EMAIL
Davis, CA
PI:EMAIL
ABSTRACT
Online social networking sites such as Facebook and MyS-
pace have become increasingly popular, with close to 500
million users as of August 2008. The introduction of the
Facebook Developer Platform and OpenSocial allows third-
party developers to launch their own applications for the
existing massive user base. The viral growth of these social
applications can potentially inﬂuence how content is pro-
duced and consumed in the future Internet.
To gain a better understanding, we conducted a large-
scale measurement study of the usage characteristics of on-
line social network based applications.
In particular, we
developed and launched three Facebook applications, which
have achieved a combined subscription base of over 8 mil-
lion users. Using the rich dataset gathered through these
applications, we analyze the aggregate workload character-
istics (including temporal and geographical distributions) as
well as the structure of user interactions. We explore the
existence of ‘communities’, with high degree of interaction
within a community and limited interaction outside the com-
munity. We ﬁnd that a small fraction of users account for
the majority of activity within the context of our Facebook
applications and a small number of applications account for
the majority of users on Facebook. Furthermore, user re-
sponse times for Facebook applications are independent of
source/destination user locality. We also investigate distin-
guishing characteristics of social gaming applications. To
the best of our knowledge, this is the ﬁrst study analyzing
user activities on online social applications.
Categories and Subject Descriptors
C.2.0 [Computer - Communication Networks]: Gen-
eral; H.4.3 [Information Systems Applications]: Com-
munications Applications
General Terms
Measurement
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’08, October 20–22, 2008, Vouliagmeni, Greece.
Copyright 2008 ACM 978-1-60558-334-1/08/10 ...$5.00.
Keywords
Online Social Networks, Social Games, Facebook, Applica-
tions, Characterization
1.
INTRODUCTION
Over the past few years, online social networks (OSNs)
have attracted a massive following, with close to 90% of
undergraduate students in the United States using one or
the other social network on a regular basis [6]. As a result,
two OSNs (Facebook [21] and MySpace [25]) are now among
the top ten visited websites on the Internet [26].
OSNs have an inherent viral property in that applications’
user base can undergo exponential growth given the quick
spread of information much like real-world social networks.
Furthermore, through open developer platforms, large OSNs
such as Facebook and MySpace have recently opened their
doors to developers across the world, enabling even amateur
developers to create applications by leveraging the underly-
ing social graphs. The introduction of these third-party ap-
plications has led to even higher traﬃc on the corresponding
social networks. For example, there was a 30% increase in
Facebook’s site traﬃc in the week following the launch of
its developer platform. Given the increasing popularity of
these applications, we believe it is important to characterize
such social network-based applications as an emerging type
of workload.
This paper presents a detailed study of the usage charac-
teristics and the nature of user interactions for three home-
grown applications launched using Facebook’s pioneering
Developer Platform1 [14]. We believe this is the ﬁrst anal-
ysis of its kind. The key contributions of this paper are
summarized as follows:
• We developed and launched three applications using
the Facebook Developer Platform. Our applications
have been able to realize a combined user base of more
than 8 million users, placing them amidst the top 1%
of Facebook applications at the time of writing this pa-
per. We used these applications to procure a rich data
set on the usage of social network applications, which
has been made available to the Internet measurement
community2.
1We chose Facebook since it was the pioneer in launching its
Developer Platform (in May 2007). Moreover, multi-million
dollar investment and Facebook’s active development have
made Facebook Developer Platform the most evolved third-
party application base to date.
2Data available at http://www.ece.ucdavis.edu/rubinet/data.html
• We analyze various usage characteristics of our appli-
cations, such as geographical distribution of users, user
interactions and response times, and how they vary
with respect to the application type.
• We use our data set to infer the nature of user in-
teraction through Facebook applications. We model
this interaction through interaction graphs and show
that it exhibits small-world properties. One of our key
ﬁndings is that application dynamics can signiﬁcantly
aﬀect the structure of interaction graphs, hence weak-
ening the association between them and the underly-
ing real-world (friendship) relationships between users.
For example, user interaction graphs for non-gaming
applications are shown to contain stronger community
structures as compared to gaming applications.
• We also analyze global usage data for a broader set
of Facebook applications and show that application
popularity is characterized by a power-law distribu-
tion with exponential decay, and use our ﬁnding to
give insights into the underlying mechanism behind
application subscription and usage.
The paper is structured as follows. We begin with a brief
overview of the related work in Section 2. Section 3 describes
our data collection methodology and the design of our appli-
cations in detail. We then present high-level characteristics
of Facebook applications in Section 4, our ﬁndings regarding
community structures for our applications in Section 5, and
our ﬁndings related to user-level behavior for those appli-
cations in Section 6. We conclude with a discussion of our
results and future work in Section 7.
2. RELATED WORK
Over the past few years there has been a ﬂurry of ac-
tivities on social network analysis. While some researchers
have focused on graph theoretic properties of social net-
works [7, 9, 10], others have analyzed individual networks’
usage patterns [2, 6]. However, there has not been a detailed
study of third-party applications developed and launched on
OSNs with a massive user base such as Facebook. We be-
lieve this paper is the ﬁrst to measure and characterize this
new workload, the user interaction, and its relationship to
the underlying social networks.
Facebook has been the focus of a few studies recently. A
newly published study on characterization of Facebook ap-
plications [5] uses proﬁle crawling to explore the high-level
characteristics of application users on Facebook, as well as
growth patterns of applications using publicly available us-
age statistics from Adonomics [16]. We conﬁrm some of the
ﬁndings of this paper, and go beyond the scope of this study
by analyzing activity data from our home-grown applica-
tions.
Another important study by Golder et al. [6] on messaging
activity inside Facebook highlights Facebook-speciﬁc char-
acteristics such as regularities in daily and weekly traﬃc and
its relation to the use of Facebook by a select demographic
(college students). The same study found that activity on
Facebook seems to be focused on individual ‘networks’ and is
related to temporal usage patterns of those networks. Here,
‘networks’ refers to Facebook’s classiﬁcation of users into
diﬀerent networks of school, college, work and regional cat-
egories. We were able to conﬁrm the ﬁndings of [6] with
regards to periodicity of traﬃc on Facebook, as well as ex-
tend our understanding of traﬃc patterns and user behavior
to third-party Facebook applications.
Other relevant studies include Newman’s work on com-
munity extraction algorithms [13] and Liben-Nowell’s work
on the relationship between geography and online friend-
ships [8]. We utilize results of the former and attempt to
extend Liben-Nowell’s ﬁndings by looking at user interaction
on social applications and its relation to users’ geographical
placement.
Furthermore, a recent study by Mislove et al. [10] focused
on the graph theoretic properties of large OSNs such as
YouTube [31], Flickr [24], and Orkut [29]. It discussed the
existence of small-world and scale-free properties. While we
do touch upon similar aspects in this study, note that we
focus on a new workload, namely third-party applications on
OSNs. In our study, we analyzed the actual user interactions
through our home-grown applications, rather than focusing
on the social networks determined through user friendship
proﬁles.
3. BACKGROUND AND METHODOLOGY
Facebook is a social networking website that has recently
gained immense popularity. Part of the reason for Face-
book’s success is its developer platform, which we shall dis-
cuss shortly. A friendship is formed on Facebook when one
Facebook user extends a (friendship) invitation to another
user. Upon conﬁrmation by the latter, the friendship rela-
tionship is formed. Much of the activity on Facebook occurs
due to these friendship relationships. However, due to the
introduction of the Developer Platform, non-friend interac-
tions are now rising through interaction on social applica-
tions. Therefore, it is important to analyze users’ interac-
tions through these social applications, beyond the deﬁnition
of ‘friends’ through Facebook proﬁles.
In this section, we provide a brief overview of the Facebook
Developer Platform, followed by details of the applications
we implemented and a description of the data set used for
our study.
3.1 Facebook Developer Platform
The Facebook Developer Platform was launched in May
2007 [14] with little fanfare and only about eight applications
in its roster. Over the subsequent months, the Platform ex-
perienced phenomenal growth, showcasing more than 35,000
applications by July 2008 [16]. The launch of the Platform
also increased Facebook’s traﬃc by about 30% in the open-
ing week, and it has seen overall growth since [30].
Fig. 1 shows aspects of the Facebook Developer Plat-
form’s architecture that are relevant to our applications. In
this architecture, a user interacts indirectly with the appli-
cation servers through Facebook’s API servers. This enables
Facebook to protect users from malicious content that may
be embedded in the response data by the application servers,
since Facebook can process and strip undesirable content
from the server responses before forwarding them to users.
We must note, however, that Facebook has an alternate
method for deploying applications on its Platform that en-
ables users to interact directly with the application servers.
reason for picking the ﬁght, and select a ﬁght duration (from
15 to 48 hours).
Defender: The Facebook friend ‘picked on’ by the of-
fender is the defender.
Supporter: The oﬀender and defender may advertise
the ﬁght to their Facebook friends. These friends then pick
one side (the oﬀender’s or the defender’s) and support the
chosen user’s team. Supporters may withdraw support from
ﬁghts or change sides until the last 2 hours of the ﬁght.
We decided to make the games last at least 15 hours be-
cause of the wide geographical wide geographical distribu-
tion (of users) possible on social networks, and in order to
accommodate users’ inability to react instantly when games
are formed against them. This delay in reaction is an artifact
of OSNs, and is discussed later in Section 4.2.3.
3.2.2 Non-Gaming: Got Love (GL)
Got Love (GL) [27] was launched on the Facebook De-
veloper Platform on Nov 27, 2007 and has been used by a
striking 4.07 million users since. The purpose of the appli-
cation is to enable users to pick a set of ‘special’ friends they
admire in order to display them as a distinct set of ‘loved’
friends on their user proﬁle page.
3.2.3 Non-Gaming: Hugged
The third application, Hugged [28], was launched on Face-
book on Jan 29, 2008 and has since been used by more than
730,000 users. Like GL, Hugged is also a simple application
where users are able to send virtual ‘hugs’ to their friends.
However, unlike GL where a user targets the same friend
only once, Hugged allows users to send virtual ‘hugs’ repeat-
edly to the same friends.
3.3 Data Collection
Data from FC, GL & Hugged: Most of the data analyzed in
this paper is from a 3-week trace, starting March 20, 2008,
taken at the respective applications’ servers. By recording
and time-stamping each user request forwarded by Facebook
to our application servers, we were able to trace all activities
on FC, GL, and Hugged for the 3-week period. Formally, we
deﬁne activity as an action performed by a subscribing user
on FC, GL, or Hugged on another user. More speciﬁcally:
• On FC, an activity involves picking a ﬁght with a
friend, supporting a ﬁghter in a given ﬁght, and hitting
an opponent in a ﬁght. Note that a user may support
and hit non-friends.
• On GL, an activity occurs when a user A sends ‘love’
to user B. An individual B may be ‘loved’ by A only
once. In this case, A and B must be Facebook friends.
• On Hugged, an activity occurs when a user A sends
a virtual ‘hug’ to a user B.
Individual A may send
multiple virtual ‘hugs’ to B. In this case, too, A and
B must be Facebook friends.
Table 1 summarizes our data set from the three applica-
tions, along with the following user statistics:
Total Unique Users: Total number of unique Facebook
identities that appear in our 3-week long trace.
Total Subscribing Users: Unique Users that had in-
stalled our applications on Facebook.
Total Active Users: Subscribing Users that instigated
at least one activity on our applications.
Figure 1: Facebook Developer Platform’s architecture used
by Fighters’ Club, Got Love? and Hugged.
However, the architecture shown in Fig. 1 is the dominant
architecture used, primarily due to the ease of displaying
content to the application users3 and the protection of the
application servers’ identity from the end-users. We adopt
this architecture to develop our own Facebook applications
to limit the resources required to render content to users.
3.2 Implementation of Social Applications
For the purpose of this study, we implemented three Face-
book applications: Fighters’ Club, Got Love, and Hugged,
which will be discussed below. At the time of writing this pa-
per, these applications had been used by a total of 8.24 mil-
lion users (7.23 million unique Facebook identities). There
are some overlapped users across the three applications. Note
that applications on Facebook generally require user sub-
scription (or installation). Once a user installs an appli-
cation, it may provide updates on users’ and their friends’
activities through the proﬁle page.
3.2.1 Social Gaming: Fighters’ Club (FC)
Fighters’ Club (FC) [23] was launched on Jun 19, 2007
on the Facebook Developer Platform. It is one of the ﬁrst
games to launch on Facebook, and evolved over a period
of 9 months to have been played by over 3.44 million users
on Facebook. FC allows users to pick virtual ﬁghts with
their Facebook friends that last from 15 to 48 hours. For
the duration of the ﬁght, each player may request support
from their Facebook friends, who then help the individual’s
team defeat the opposing user’s team through a series of
virtual ‘hits’ decreasing the (limited) strength4 of the target
opponent(s). The team with the higher cumulative strength
at the end of the ﬁght is declared the winner5.
Users on FC may have one of the following three roles in
a given game instance (ﬁght):
Oﬀender: The user instigating the ﬁght is the oﬀender.
This user must choose a friend to ﬁght against, provide a
3This architecture relieves application servers from the the
extra task of downloading and uploading extra content, such
as users’ real names and graphical content from Facebook.
4The measure of strength is a point system ranging from
0 to 5 points for each individual on FC. By default, each
user’s strength is 3.0, and it increases/decreases as the users
win/lose ﬁghts, respectively. Individuals with 0.0 strength
cannot be targetted in virtual ‘hits’.
5In cases where both teams have 0.0 cumulative strength,
the team making the last ‘hit’ wins.
Table 1: Data set analyzed in this paper.
Total Activities
Total Unique Users
Total Subscribing Users
Total Active Users
(Active) Users w/ Geo Info
Users w/ Friendship Data
Fighters’ Club
25,911,335
154,681
85,928
43,669
40,982
35,349
Got Love
7,196,302
5,376,704
1,518,767
642,088
97,465
72,074
Hugged
2,146,819
1,322,631
408,651
198,379
180,216
121,389
BW Consumption Info
Google Analytics Data
Dec 15 Onwards Feb 15 Onwards Feb 15 Onwards
Dec 15 Onwards Feb 15 Onwards Mar 22 Onwards
However, since we use the indirection-based platform ar-
chitecture described previously (Section 3.1), we had to sep-
arately capture IP addresses of the users in order to map in-
dividual users to diﬀerent geographical locations. We achieved
this by having users’ browsers initiate HTTP requests di-
rectly to our application servers using FBML6 IFrames at
every visit to the application home page. We were then able
to capture users’ IP addresses and the respective Facebook
user IDs.
In order to map IP addresses to geographical locations
(countries), we used longest-preﬁx matching with the legacy
country zones provided in [18]. We were able to track IP
addresses for only a portion of the active users (see Table
1). Moreover, for users who visited our application sites, we
tracked the number of their friends and the subset of their
friends who also subscribed to our applications (referred to
as ‘subscribing friends’ in the remaining discussions). This is
feasible since Facebook provides each user’s friends list data
with every request sent to an application server. Note that
we gathered IP addresses and friendship data for application
users over the period of one week, ending April 1, 2008.
Furthermore, we utilized bandwidth consumption data
tracked directly at the application servers, as well as the
‘average time spent’ metric tracked through Google Analyt-
ics7 [17] for each application. We also acquired daily unique
usage activity data for the top 200 applications on Facebook
(as of April 22, 2008) from Developer Analytics8 [19] for the
period starting January 29, 2008 and ending April 22, 2008.
However, many applications’ statistics were missing for days
in between. For the analysis in the next section, we selected
160 out of the 200 applications that have clean data for a
total of 79 days.
4. HIGH-LEVEL CHARACTERISTICS
4.1 Global Facebook Application Statistics
We use the top applications’ data from Developer Analyt-
ics to study the daily volume of users that use a particular
application. We deﬁne the Daily Active Usage (DAU) to
be the number of unique users that visit the application at
6Facebook Markup Language.
7While it is well-known that ‘average time spent’ is web-
session based, exact details regarding this metric have not
been made publicly available by the website at the time of
writing this paper.
8Developer Analytics is a popular metric measurement site
focused on Facebook applications. We infer the reliability
of its measurements through anecdotal evidence as well as
validation using data collected from our applications.
l
e
v
i
t
a
u
m
u
C
f
o
n
o
i
t
c
a
r
F
e
g
a
s
U
y
l
i
a
D
1
0.8
0.6
0.4
0.2
0
0
0.2
0.4
0.6
Fraction of Applications
0.8
1
Figure 3: Cumulative distribution of DAU with applications
sorted by descending order of average daily active users over
79 days.
least once during a given day. Fig. 2 plots the mean DAU for
the entire set of the top 160 applications that we selected.
The dotted vertical lines delineate weekends over the 79-
day period. We see a consistent pattern showing that Face-
book applications attract a relatively less number of unique
users on weekends as compared to weekdays. Our data also
shows that application usage generally peaks on Tuesdays.
To show the relative popularity of our three applications
(FC, GL, and Hugged), we rank the 160 applications in our
data set in decreasing order of their DAU over the 79-day
measurement period. We divide the 160 applications into
4 tiers by DAU and plot the mean DAU for each quartile.
Fig. 2 shows that the DAU of our three applications are
comparable to the mean DAU for the bottom two quartiles
of applications (divided DAU-wise). Since Facebook hosts
more than 35,000 applications [16], this shows that our ap-
plications are comfortably placed within the top 1% of all
applications.
We also looked at the distribution of DAU across our set
of the 160 top applications. Fig. 3 plots the fraction of the
sum of DAU values averaged over the 79-day period that is
accounted for by the top x percent of the applications. The
Pareto principle or the 80-20 rule is evident in that 20%
of the most popular applications account for approximately
69% of the daily active users. Fig. 4 compares the distri-
bution of average DAU across the 160 top applications in
greater detail against the best-ﬁt power-law and exponen-
tial curves. It suggests that application popularity follows
a power-law distribution with an exponential cutoﬀ, which
is characterized by an exponential decay term that domi-
nates the power-law behavior after a certain threshold. [2]
showed the popularity distribution of user generated video
All
2nd to Bottom Quartile
Bottom Quartile
FC
Hugged GL
Hugged
Fighters’ Club
Got Love?
10
20
30
50
No. of Days Elapsed
40
60
70
80
x 105
2
1.5
1
0.5
0
0
s
r
e
s
U
e
v
i
t
c
A
y
l
i
a
D
)
U
A
D
(