robotic system called “CEBOT.” Kokaji [12] and Murata,
Kurokawa, and Kokaji [15] constructed self-reorganizing
mechanical units called “Fractal Machine” and “Fractum,”
respectively, based on a similar concept, and discussed dy-
namic reconﬁguration using a set of local rules. Recently,
Tomita, Murata, Kurokawa, Yoshida, and Kokaji [24] pro-
posed a self-assembly and self-repair method for a homo-
geneous distributed mechanical system where the concept
of Fractum is utilized. These systems, however, are based
on the assumption that the faulty units have already been
identiﬁed. Therefore, some fault identiﬁcation algorithms
are needed. We propose to apply the recursive procedure
described in Section 2 to make the system fault-tolerant. In
this section, we show an example of applying this method
to a robotic system which forms a circle. The results of the
simulation show the usefulness of the proposed method.
4.1 A Decentralized Self-Organizing Autonomous
Robotic System used for Forming a Circle
The system has n units (robots) that moves on a plane.
The object of each unit is to move to or from the furthest
unit to adjust the mutual distance to the given value (di-
ameter) and to move away from the nearest unit. Then the
system forms a circle of a given diameter where units are
placed on the circumference spaced evenly. The assump-
tions of the system are:
Assumption 1: Each unit knows the diameter of the circle.
Assumption 2: Each unit can obtain the information of dis-
tance to all the other n − 1 units at any time.
Each unit follows an algorithm Circle [22], [23] and
forms a circle without any centralistic controlled mecha-
nism. The outline of the algorithm Circle is as follows:
[ outline of the algorithm Circle ]
input: The diameter D
output: Circumference C which consists of n units
Step 1: A unit u obtains the distances to the other units,
and ﬁnds the furthest unit uf and the nearest unit un.
Step 2: If the distance between the unit u and uf is
larger than the diameter D, then u approaches uf
marginally.
Step 3: If the distance between the unit u and uf is smaller
than the diameter D, then u distances itself from uf
marginally.
Step 4: If the distance between the unit u and uf is almost
equal to the diameter D, then u distances itself from
uf marginally.
Step 5: Repeat Step 1 through Step 4.
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:11:42 UTC from IEEE Xplore.  Restrictions apply. 
4.2 Summary of the Simulation and Its Result
A window image of the simulator which we developed
is shown in Fig. 7, where a unit is represented by a small
disk with ID number. A black point in each disk means the
direction of advance of the unit. In addition, the black point
in each small disk means the direction of advance of the
unit. In Fig. 7, a circle is normally constructed by all units,
that is, all units are fault-free.
To have the system fault-tolerant, that is, to allow the
system up to two permanently faulty units, we implemented
an optimal highly structured 7-unit 2-OD system having no
mutual tests as shown in Fig. 8. We restricted the fault to
the following case:
Assumption 3: Faults occur only on the diameter value of
the circle such as the diameter value changes into an abnor-
mal larger value ( 1.5 times the given diameter D ).
And the faulty units will be treated as:
Assumption 4: The faulty units are ignored, that is, the dis-
tance to faulty units are not used by the algorithm Circle.
We made the two units v2 and v3 faulty. Then, the op-
timal highly structured 7-unit 2-OD system shown in Fig. 8
identiﬁed the two faulty units and the circle was recon-
structed by all remaining fault-free units. When we made
the three units v2, v3, and v5 faulty, the optimal highly struc-
tured 7-unit 2-OD system could not identify the faulty units
correctly. Namely, since the unit v6 was identiﬁed as either
permanently faulty or fault-free as shown in Table 3, the
circle broke down as shown in Figs. 9 and 10.
At this
point, by using Method 1, an optimal highly structured 9-
unit 3-OD system in Fig. 11 was constructed by adding two
fault-free units v8 and v9 to the system where the units v8
and v9 correspond to u1
b in Fig. 4, respectively. As
a result, the three faulty units v2, v3, and v5 were identiﬁed
correctly, and a new circle was automatically reconstructed
by other units as shown in Fig. 12.
a and u1
The result of simulation above shows that the system can
be restored by sequentially adding two fault-free units to the
system according to Method 1. In general, the number of
the faulty units may exceed the assumed bound t. Hence
Method 1 is useful in reconﬁguring the self-organizing sys-
tems composed of homogeneous units [12],[15].
5 Conclusion
The highly structured self-diagnosable system has an
O(|E|) fault-identiﬁcation algorithm that can diagnose each
of the units in the system independently, locally and ran-
domly ordered. Applying the theory of highly structured
t-OD system to a common, yet simple example, we were
able to introduce a fault-tolerance mechanism into a self-
organizing system that allows t permanent faulty units with-
out a centralistic controlled mechanism. Furthermore, using
Table 3. The test result of the self-diagnosable
The units v2, v3, and
system in Fig. 8.
v5 are permanently faulty.
Subsystem
H(v; 2, 0) of unit v consists of
two test
links {(xi, v), (yi, xi)} with test outcomes
{a1 = a(xi, v), a2 = a(yi, xi)}. The symbol
* indicates either 0 or 1. The range of val-
ues δ = δ(H(v; 2, 0)) together with identiﬁed
states of v are also shown where fault-free
and permanently faulty state are denoted by
F F and P F , respectively. The unit v6 is iden-
tiﬁed as either permanently faulty or fault-
free, and all other units are fault-free.
v
v1
v2
v3
v4
v5
v6
v7
xi
v6
v7
v1
v7
v1
v2
v2
v3
v3
v4
v4
v5
v5
v6
yi
v4
v5
v6
v5
v6
v7
v7
v1
v1
v2
v2
v3
v3
v4
a1
0
0
1
1
1
∗
∗
∗
∗
1
0
∗
∗
0
a2
0
∗
0
∗
0
1
1
1
1
∗
∗
∗
∗
0
δ
1 ∼ 2
−2 ∼ −1
−1
0
−1
STATE
F F
P F
P F
F F
P F
−1 ∼ 2
0 ∼ 2
P F|F F
F F
the recursive procedure for optimally designing the highly
structured t-OD systems, we reconﬁgured the system in
which the number of the permanently faulty units exceeded
the assumed number t. The results of the simulation showed
the usefulness of the proposed method to make the system
fault-tolerant.
References
[1] A.T. Dahbura, G.M. Masson, and C.L. Yang, “Self-
Implicating Structures for Diagnosable Systems,”
IEEE Transactions on Computers, vol. C-34, no. 8,
pp. 718–723, Aug. 1985.
[2] E.P. Duarte Jr. and T. Nanya, “A Hierarchical Adap-
tive Distributed System-Level Diagnosis Algorithm,”
IEEE Transactions on Computers, vol. 47, no. 1,
pp. 34–45, Jan. 1998.
[3] T. Fukuda and S. Nakagawa, “Approach to the Dy-
namically Reconﬁgurable Robot Systems,” Journal of
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:11:42 UTC from IEEE Xplore.  Restrictions apply. 
Intelligent and Robotics Systems, vol. 1, pp. 55–72,
1988.
on Computers, vol. C-29, no. 6, pp. 461–470, June
1980.
[4] S.L. Hakimi and A.T. Amin, “Characterization of
Connection Assignment of Diagnosable Systems,”
IEEE Transactions on Computers, vol. C-23, no. 1,
pp. 86–88, Jan. 1974.
[15] S. Murata, H. Kurokawa, and S. Kokaji, “Self-
Assembling Machine,” in Proceedings of the IEEE In-
ternational Conference on Robotics and Automation,
San Diego, CA, pp. 441-448, 1994.
[5] ITU-T Recommendation X.509 (1997 E): Information
Technology – Open Systems Interconnection – The
Directory: Authentication Framework, June 1997.
[6] G. Jeon and Y. Cho, “A System-Level Diagnosis for
Internet-based Virtual Private Networks,” in Proceed-
ings of the 29th International Symposium on Fault-
Tolerant Computings (FTCS-29), pp. 27-28, Fast Ab-
stracts, Madison, June 1999.
[7] Y. Kawauchi, M. Inaba, and T. Fukuda, “A Principle
of Decision Making of Cellular Robotic System (CE-
BOT),” in Proceedings of the IEEE International Con-
ference on Robotics and Automation, Los Alamitos,
CA, pp. 833-838, 1993.
[8] T. Kohda, “On Sequentially Diagnosable Systems
Containing at Most t Faulty Units,” IEICE Transac-
tions, vol. 61-D, no. 9, pp. 688–694, Sept. 1978 (in
Japanese); English translation published in Systems ·
Computers · Controls, vol. 9, no. 5, pp. 30–37, 1978.
[9] T. Kohda and H. Mitsuoka, “An Optimal Design
of One-Step t-Fault Diagnosable System with an
O(|E|) Fault Identiﬁcation Algorithm,” IEICE Trans-
actions, vol. 69-D, no. 11, pp. 1547–1555, Nov. 1986
(in Japanese).
[10] T. Kohda, “Hybrid Fault Diagnosable Systems under
a Restriction on the Intermittent Nature of Faults,”
IEICE Transactions, vol. E73, no. 8, pp. 1270–1277,
Aug. 1990.
[11] T. Kohda, “A Simple Discriminator for Identifying
Faults in Highly Structured Diagnosable Systems,”
Journal of Circuits, Systems, and Computers, vol. 4,
no. 3, pp. 255–277, Sept. 1994.
[12] S. Kokaji, “A Fractal Mechanism and a Decentral-
ized Control Method,” in Proceedings of the USA-
Japan Symposium on Flexible Automation, Minneapo-
lis, MN, pp. 1129-1134, 1988.
[13] S. Mallela and G.M. Masson, “Diagnosable Systems
for intermittent Faults,” IEEE Transactions on Com-
puters, vol. C-27, no. 6, pp. 560–566, June 1978.
[14] S. Mallela and G.M. Masson, “Diagnosis without Re-
pair for Hybrid Fault Situations,” IEEE Transactions
[16] D.K. Pradhan and M.R. Samatham, “A Fault-Tolerant
Communication Architecture for Distributed Sys-
tems,” IEEE Transactions on Computers, vol. 31,
no. 9, pp. 863–870, Sept. 1982.
[17] F.P. Preparata, G. Metze, and R.T. Chien, “On the
Connection Assignment Problem of Diagnosable Sys-
tems,” IEEE Transactions on Electronic Computers,
vol. EC-16, no. 6, pp. 848–854, Dec. 1967.
[18] B. Randell, “Fault Tolerance in Decentralized Sys-
IEICE Transactions on Communications,
tems,”
vol. E83-B, no. 5, pp. 903–907, May 2000.
[19] RFC 2459: Internet X.509 Public Key Infrastructure –
Certiﬁcate and CRL Proﬁle, Jan. 1999.
[20] S. J. Russell and P. Norvig, Artiﬁcial Intelligence: A
Modern Approach, Prentice Hall, 1995.
[21] K. Saleh and K. Al-Saqabi, “Error Detection and Di-
agnosis for Fault Tolerance in Distributed Systems,”
Information and Software Technology, vol. 39, no. 14-
15, pp. 975–983, 1998.
[22] K. Sugihara and I. Suzuki, “Distributed Motion Co-
ordination of Multiple Mobile Robots,” in Proceed-
ings IEEE International Symposium on Intelligence
and Control, Philadelphia, PA, pp. 138–143, 1990.
[23] I. Suzuki and M. Yamashita, “Distributed Anonymous
Mobile Robots: Formation of Geometric Patterns,”
SIAM Journal on Computing, vol. 28, no. 4, pp. 1347–
1363, 1999.
[24] K. Tomita, S. Murata, H. Kurokawa, E. Yoshida, and
S. Kokaji, “Self-Assembly and Self-Repair Method
for a Distributed Mechanical System,” IEEE Trans-
actions on Robotics and Automation, vol. 15, no. 6,
pp. 1035 -1045, Dec. 1999.
[25] C.L. Yang and G.M. Masson, “A New Measure
for Hybrid Fault Diagnosability,” IEEE Transactions
on Computers, vol. C-36, no. 3, pp. 378–383, March
1987.
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:11:42 UTC from IEEE Xplore.  Restrictions apply. 
Figure 7. A circle is normally formed by all
units, that is, all units are fault-free.
Figure 10. The system is completely out of
order and can not form a circle.
Figure 8. An optimal highly structured 7-unit
2-OD system having no mutual tests.
Figure 11. By adding two fault-free units to
the system in Fig.8 and using Method 1, an
optimal highly structured 9-unit 3-OD system
shown is constructed where the units v8 and
v9 correspond to u1
b in Fig.4, respec-
tively.
a and u1
Figure 9. Units v2, v3, and v5 have simultane-
ously been broken and the circle is breaking
down.
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Figure 12. The three faulty units v2, v3, and v5
are identiﬁed as permanently faulty unit and
ignored by other units. All the fault-free units
form a new circle automatically.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:11:42 UTC from IEEE Xplore.  Restrictions apply.