 (1 row)
 digoal=# execute p(2);
 count
 -------
 1
 (1 row)
 http://www.postgresql.org/docs/9.3/static/sql-prepare.html
 http://www.postgresql.org/docs/9.3/static/sql-execute.html
PostgreSQL plan cache management
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")prepare p(int) as select count(*) from test where id=$1;3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")prepare p(int) as select count(*) from test where id=$1;3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")prepare p(int) as select count(*) from test where id=$1;3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")execute p(2);3622 -- psql产生的简单调用.
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")execute p(2);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")execute p(2);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 choose custom plan called 1
 plansource={.magic=195726186, .raw_parse_tree=0x2169950, .query_string="prepare p(int) as select count(*) from test where
id=$1;", .commandTag="SELECT", .param_types=0x2169fa0, .num_params=1, .parserSetup=0x0, .parserSetupArg=0x0, .cursor_options=0, .fixed_result='\001', .resultDes
c=0x2169fc0, .context=0x2159dc8, .query_list=0x216a868, .relationOids=0x2174938, .invalItems=0x0, .search_path=0x2174970, .query_context=0x215a020, .gplan=0x0,
.is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=0, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num_custom_plans=0}
boundParams={.paramFetch=0x0, .paramFetchArg=0x0, .parserSetup=0x0, .parserSetupArg=0x0, .numParams=1, .params=[{.value=2, .isnull='\000', .pflags=1, .ptype=23}
, ...]} avg_custom_cost=?
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 注意观察num_custom_plans的变化.
PostgreSQL plan cache management
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")execute p(2);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")execute p(2);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")execute p(2);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 choose custom plan called 2
 plansource={.magic=195726186, .raw_parse_tree=0x2169950, .query_string="prepare p(int) as select count(*) from test where
id=$1;", .commandTag="SELECT", .param_types=0x2169fa0, .num_params=1, .parserSetup=0x0, .parserSetupArg=0x0, .cursor_options=0, .fixed_result='\001', .resultDes
c=0x2169fc0, .context=0x2159dc8, .query_list=0x216a868, .relationOids=0x2174938, .invalItems=0x0, .search_path=0x2174970, .query_context=0x215a020, .gplan=0x0,
.is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=1, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num_custom_plans=1}
boundParams={.paramFetch=0x0, .paramFetchArg=0x0, .parserSetup=0x0, .parserSetupArg=0x0, .numParams=1, .params=[{.value=2, .isnull='\000', .pflags=1, .ptype=23}
, ...]} avg_custom_cost=?
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
PostgreSQL plan cache management
 第5次开始生成generic plan cache. 后面可以看出query plan cache节点没有了.
 但是execute 这个SQL因为是psql使用exec_simple_query调用的, 所以还需要parse, rewrite阶段.
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")execute p(1);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")execute p(1);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")execute p(1);3622
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 choose custom plan called 16
 plansource={.magic=195726186, .raw_parse_tree=0x2169950, .query_string="prepare p(int) as select count(*) from test where id=$1;", .commandTag="SELECT",
.param_types=0x2169fa0, .num_params=1, .parserSetup=0x0, .parserSetupArg=0x0, .cursor_options=0, .fixed_result='\001', .resultDesc=0x2169fc0, .context=0x2159dc8,
.query_list=0x216a868, .relationOids=0x2174938, .invalItems=0x0, .search_path=0x2174970, .query_context=0x215a020, .gplan=0x21890a0, .is_oneshot='\000',
.is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=6, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num_custom_plans=5}
boundParams={.paramFetch=0x0, .paramFetchArg=0x0, .parserSetup=0x0, .parserSetupArg=0x0, .numParams=1, .params=[{.value=1, .isnull='\000', .pflags=1,
.ptype=23}, ...]} avg_custom_cost=?
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3622
 这里观察choose custom plan函数的结果, 有多少次选择了custom plan, 目前num_custom_plans=5
PostgreSQL plan cache management
 使用pgbench测试libpq prepared statement 接口. (隐藏choose custom plan的输出)
 pg93@db-172-16-3-150-> cat test.sql
 \setrandom id 1 2
 select count(*) from test where id=:id;
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")select count(*) from test where id=$1;3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")3765 // 生成generic plan
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765 // 开始使用plan cache.
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")3765
PostgreSQL plan cache management
 跟踪函数的plan cache (plpgsql函数调用spi_prepare接口)
 http://www.postgresql.org/docs/9.3/static/plpgsql-implementation.html
 CREATE OR REPLACE FUNCTION public.f_test_cnt(i_id integer)
 RETURNS bigint
 LANGUAGE plpgsql
 STRICT
 AS $function$
 declare
 res int8;
 begin
 select count(*) into res from test where id=i_id; --调用spi prepare
 return res; -- 调用spi prepare
 end;
 $function$;
PostgreSQL plan cache management
 digoal=# explain analyze select * from test where id=1;
 QUERY PLAN
 ------------------------------------------------------------------------------------------------------------------
 Seq Scan on test (cost=0.00..37948.05 rows=2000004 width=177) (actual time=0.042..710.060 rows=2000000 loops=1)
 Filter: (id = 1)
 Rows Removed by Filter: 4
 Total runtime: 865.982 ms
 (4 rows)
 digoal=# explain analyze select * from test where id=2;
 QUERY PLAN
 -------------------------------------------------------------------------------------------------------------------
 Index Scan using idx_test_1 on test (cost=0.43..4.45 rows=1 width=177) (actual time=0.043..0.053 rows=4 loops=1)
 Index Cond: (id = 2)
 Total runtime: 0.177 ms
 (3 rows)
 digoal=# select f_test_cnt(2); // 由于数据分布不均匀, 如果在生成generic plan前有id=2的查询, 将造成choose custom plan得出结果持续使用custom plan.
 f_test_cnt
 ------------
 1
 (1 row)
PostgreSQL plan cache management
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")select f_test_cnt(2);4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")select f_test_cnt(2);4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")select f_test_cnt(2);4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")select count(*) from test where id=i_id4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")select count(*) from test where id=i_id4287
 choose custom plan called 213
 plansource={.magic=195726186, .raw_parse_tree=0x2165200, .query_string="select count(*) from test where
id=i_id", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .cursor_options=0, .fixed_result='\00
0', .resultDesc=0x2165908, .context=0x2177f80, .query_list=0x2166518, .relationOids=0x218fe98, .invalItems=0x0, .search_path=0x218fed0, .query_context=0x2178248,
.gplan=0x0, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=0, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num_custom
_plans=0}
boundParams={.paramFetch=0x7f3ddc31d9e0, .paramFetchArg=0x7fff8e199150, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .numParams=4, .params=[{.
value=2, .isnull='\000', .pflags=1, .ptype=23}, ...]} avg_custom_cost=?
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")4287 对应上面这个SQL的plan
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")SELECT res4287
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")SELECT res4287
 choose custom plan called 214
PostgreSQL plan cache management
 plansource={.magic=195726186, .raw_parse_tree=0x2190bb0, .query_string="SELECT
res", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217e138, .cursor_options=0, .fixed_result='\000', .
resultDesc=0x2190ed0, .context=0x2178f80, .query_list=0x21916b8, .relationOids=0x0, .invalItems=0x0, .search_path=0x2191978, .query_context=0x21788f0, .gplan=0x
0, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=0, .next_saved=0x21650e8, .generic_cost=?, .total_custom_cost=?, .num_custom_p
lans=0} boundParams=ERROR avg_custom_cost=?
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")4287 // 对应上面这个SQL的plan
 choose custom plan called 215
 plansource={.magic=195726186, .raw_parse_tree=0x2190bb0, .query_string="SELECT
res", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217e138, .cursor_options=0, .fixed_result='\000', .
resultDesc=0x2190ed0, .context=0x2178f80, .query_list=0x21916b8, .relationOids=0x0, .invalItems=0x0, .search_path=0x2191978, .query_context=0x21788f0, .gplan=0x
2192178, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=1, .next_saved=0x21650e8, .generic_cost=?, .total_custom_cost=?, .num_cu
stom_plans=0} boundParams=ERROR avg_custom_cost=?
 choose custom plan called 216
 plansource={.magic=195726186, .raw_parse_tree=0x2190bb0, .query_string="SELECT
res", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217e138, .cursor_options=0, .fixed_result='\000', .
resultDesc=0x2190ed0, .context=0x2178f80, .query_list=0x21916b8, .relationOids=0x0, .invalItems=0x0, .search_path=0x2191978, .query_context=0x21788f0, .gplan=0x
2192178, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=1, .next_saved=0x21650e8, .generic_cost=?, .total_custom_cost=?, .num_cu
stom_plans=0} boundParams=ERROR avg_custom_cost=?
PostgreSQL plan cache management
 n次调用后, 不管使用id=1还是id=2查询都会继续使用custom plan.
 choose custom plan called 375
 plansource={.magic=195726186, .raw_parse_tree=0x2165200, .query_string="select count(*) from test where
id=i_id", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .cursor_options=0, .fixed_result='\00
0', .resultDesc=0x2165908, .context=0x2177f80, .query_list=0x2166518, .relationOids=0x218fe98, .invalItems=0x0, .search_path=0x218fed0, .query_context=0x2178248,
.gplan=0x20b32a0, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=14, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num
_custom_plans=13}
boundParams={.paramFetch=0x7f3ddc31d9e0, .paramFetchArg=0x7fff8e199150, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .numParams=4, .params=[{.
value=1, .isnull='\000', .pflags=1, .ptype=23}, ...]} avg_custom_cost=?
PostgreSQL plan cache management
 n次调用后, 不管使用id=1还是id=2查询都会继续使用custom plan. 原因 :
 digoal=# explain select count(*) from test where id=2;
 QUERY PLAN
 -----------------------------------------------------------------------------
 Aggregate (cost=4.45..4.46 rows=1 width=0)
 -> Index Scan using idx_test_1 on test (cost=0.43..4.45 rows=1 width=0)
 Index Cond: (id = 2)
 (3 rows)
 digoal=# explain select count(*) from test where id=1;
 QUERY PLAN
 --------------------------------------------------------------------
 Aggregate (cost=42948.06..42948.07 rows=1 width=0)
 -> Seq Scan on test (cost=0.00..37948.05 rows=2000004 width=0)
 Filter: (id = 1)
 (3 rows)
 一次id=2的调用加4次id=1的调用得到的avg custom plan cost如下 :
 digoal=# select (4.45+42948*4)/5;
 ?column?
 --------------------
 34359.290000000000
 (1 row)
PostgreSQL plan cache management
 generic plan = seq scan
 全表扫描(generic plan)id=2的 cost显然大于avg custom cost 34359.
 所以会选择custom plan.
 digoal=# explain select count(*) from test where id=2;
 QUERY PLAN
 --------------------------------------------------------------
 Aggregate (cost=37948.05..37948.06 rows=1 width=0)
 -> Seq Scan on test (cost=0.00..37948.05 rows=1 width=0)
 Filter: (id = 2)
 (3 rows)
 使用custom plan后, avg custom cost将进一步降低.
 digoal=# select (4.45*2+42948*4)/6;
 ?column?
 --------------------
 28633.483333333333
 (1 row)
 所以后面会一直使用custom plan.
PostgreSQL plan cache management
 场景2
 前5次调用id=1的查询, 得到generic plan, 并可持续使用. (并且能观察到使用id=2时将选择custom plan)
 前面讲了generic plan cache 基于会话, 所以请退出会话后测试.
 psql
 digoal=# select f_test_cnt(1);
 f_test_cnt
 ------------
 2000000
 (1 row)
 5次后, select count(*) from test where id=i_id; 不再需要custom plan.
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start")select f_test_cnt(1);4522
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__parse__start")select f_test_cnt(1);4522
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__rewrite__start")select f_test_cnt(1);4522
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__plan__start")4522
 process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__execute__start")4522
 choose custom plan called 396
PostgreSQL plan cache management
 plansource={.magic=195726186, .raw_parse_tree=0x2165200, .query_string="select count(*) from test where
id=i_id", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .cursor_options=0, .fixed_result='\00
0', .resultDesc=0x2165908, .context=0x2177f80, .query_list=0x2166518, .relationOids=0x218fe98, .invalItems=0x0, .search_path=0x218fed0, .query_context=0x2178248,
.gplan=0x20b32a0, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=6, .next_saved=0x0, .generic_cost=?, .total_custom_cost=?, .num_
custom_plans=5}
boundParams={.paramFetch=0x7f3ddc31d9e0, .paramFetchArg=0x7fff8e199150, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217df38, .numParams=4, .params=[{.
value=1, .isnull='\000', .pflags=1, .ptype=23}, ...]} avg_custom_cost=?
 choose custom plan called 397
 plansource={.magic=195726186, .raw_parse_tree=0x2190bb0, .query_string="SELECT
res", .commandTag="SELECT", .param_types=0x0, .num_params=0, .parserSetup=0x7f3ddc318af0, .parserSetupArg=0x217e138, .cursor_options=0, .fixed_result='\000', .
resultDesc=0x2190ed0, .context=0x2179018, .query_list=0x21916b8, .relationOids=0x0, .invalItems=0x0, .search_path=0x2191978, .query_context=0x21788f0, .gplan=0x
2192178, .is_oneshot='\000', .is_complete='\001', .is_saved='\001', .is_valid='\001', .generation=1, .next_saved=0x21650e8, .generic_cost=?, .total_custom_cost=?, .num_cu
stom_plans=0} boundParams=ERROR avg_custom_cost=?