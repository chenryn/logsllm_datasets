to being ofﬂine), which the terminal accepts given that it
cannot verify its correctness. The mismatching AC will later
be detected by the issuing bank. This violates both properties
formalized in Deﬁnitions 1 and 2.
To our surprise, all-but-one of the Visa contactless proto-
col’s conﬁgurations fail to provide security. The Visa pro-
tocol
is shown in Figure 2 and the secure conﬁguration
Visa DDA High corresponds to the protocol executions where
all bracketed terms are present, especially the SDAD. The in-
secure conﬁguration Visa DDA Low, which applies to ofﬂine
transactions, can be abused similarly to the aforementioned
issue with Mastercard.
Particularly critical are the violations of authentication in
the conﬁguration Visa EMV High (Table II, Line 2, Remark
1), which applies to high-value transactions and corresponds to
the protocol executions where the bracketed terms in the card’s
last message are not present. Our Tamarin analysis identiﬁes
a trace for an accepted transaction where neither the terminal
nor the bank agree with the card on the Card Transaction
Qualiﬁers (CTQ). The CTQ is a card-sourced data object that
tells the terminal which CVM is to be used (see [32], p.
97). The trace shows that, whereas the card’s view of the
CTQ is a request for online PIN veriﬁcation, the terminal’s
view indicates that the Consumer Device CVM (CDCVM) was
performed, which makes the terminal consider the cardholder
successfully veriﬁed (see [32], pp. 68–69). This is possible
because no cryptographic protection of the CTQ is offered.
This ﬂaw is critical since it allows an attacker to bypass the
PIN for a victim’s Visa card, as pointed out in the introduction.
Bypassing the PIN by enforcing the Consumer Device CVM
in Mastercard transactions is not possible because the card’s
support for this CVM is determined by the second bit of
AIP’s ﬁrst byte. The AIP is authenticated through the AC and,
if present, the SDAD too. Consequently, modifying this data
object would result in a declined transaction.
In terms of secrecy, the results are identical for all models
and are as expected. The keys (private and shared) and the
PIN are secret, whereas the PAN is not.
Summary: Our analysis proves that Mastercard transactions
using CDA are secure. Fortunately, this is the most common
kind of Mastercard transaction that is currently taking place.
In contrast, critical ﬂaws were found in common, currently
used conﬁgurations of the Visa protocol. These ﬂaws can be
turned into practical attacks, which we describe in the next
section.
VI. ATTACK AND DEFENSE
Our analysis of EMV’s security uncovered numerous serious
shortcomings. Particularly critical are the issues encountered
in EMV contactless, because of their practical relevance given
that tampering with the card-terminal contactless channel over
NFC is much simpler than tampering with this channel over
the contact chip. In this section we show how these issues can
be exploited by an attacker to carry out fraudulent transactions.
We also suggest ﬁxes that lead to veriﬁed, secure contactless
transactions.
A. Setup
We developed a proof-of-concept Android application to
demonstrate the practical impact of the shortcomings uncov-
ered by our formal analysis. Our application supports man-in-
the-middle attacks on top of a relay attack [5]–[7] architecture,
depicted in Figure 3. In this architecture, the attacker employs
two mobile devices: one running our app in Point-Of-Sale
(POS) emulator mode and the other in card emulator mode.
Both devices must have NFC support and run Android 4.4
KitKat (API level 19) or later. The card emulator device must
support Android’s Host-based Card Emulation (HCE) [35].
To conduct the attacks, the POS emulator must be held near
the card to be attacked and the card emulator must be held
near the payment terminal. The two emulators communicate
wirelessly through a TCP/IP socket channel over WiFi. A man-
in-the-middle attack modiﬁes, as appropriate:
• the inbound commands read from the wireless channel
before delivering them to the card through the NFC
channel, and
• the card’s responses before transmitting them to the card
emulator through the WiFi channel.
B. Bypassing Cardholder Veriﬁcation
In a Visa contactless transaction, the card’s response to the
terminal’s GET PROCESSING OPTIONS command carries
the Card Transaction Qualiﬁers (CTQ). The CTQ is a 2-
byte data object that instructs the terminal which Cardholder
Veriﬁcation Method (CVM) is to be used. As explained in
Section V-B, our analysis revealed that the card authenticates
the CTQ neither to the terminal nor to the bank (Table II,
Line 2, Remark 1). Our app exploits this and implements a
man-in-the-middle attack that:
• clears the 8th bit of CTQ’s ﬁrst byte, which tells the
terminal that online PIN veriﬁcation is not required; and
• sets the 8th bit of CTQ’s second byte, which tells the
terminal that the Consumer Device CVM was performed.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:50 UTC from IEEE Xplore.  Restrictions apply. 
1775
ANALYSIS RESULTS FOR THE EMV CONTACTLESS PROTOCOL. ALL TARGET MODELS HAVE 60 RULES. HERE WE USED THE SAME SETUP AS WITH THE
EXPERIMENTS SHOWN IN TABLE I. AGAIN, THE MODEL(S) FOR WHICH ALL FOUR PROPERTIES WERE VERIFIED ARE HIGHLIGHTED IN BOLD.
TABLE II
No.
Target model
executable
bank accepts
auth. to terminal
auth. to bank
LoC
Time
Properties
Visa EMV Low
Visa EMV High
Visa DDA Low
Visa DDA High
Mastercard SDA OnlinePIN Low
Mastercard SDA OnlinePIN High
Mastercard SDA NoPIN Low
Mastercard SDA NoPIN High
Mastercard DDA OnlinePIN Low
Mastercard DDA OnlinePIN High
Mastercard DDA NoPIN Low
Mastercard DDA NoPIN High
Mastercard CDA OnlinePIN Low
Mastercard CDA OnlinePIN High
Mastercard CDA NoPIN Low
Mastercard CDA NoPIN High
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
Legend:
(cid:88): property veriﬁed ×: property falsiﬁed
(2): disagrees with the card on the AC (3): high-value transactions without CVM are not completed over the contactless interface
1m26s
1m30s
31m41s
25m00s
4m22s
12m28s
4m11s
43s
8m18s
27m08s
8m11s
47s
19m44s
47m21s
18m38s
49s
823
823
832
841
831
840
825
793
837
846
831
799
846
846
840
799
–: not applicable
(1): disagrees with the card on the CVM used
(cid:88)
(cid:88)
×(2)
(cid:88)
×(2)
(cid:88)
×(2)
–
×(2)
(cid:88)
×(2)
–
(cid:88)
(cid:88)
(cid:88)
–
×(1)
×(1)
×(2)
(cid:88)
×(2)
(cid:88)
×(2)
–
×(2)
(cid:88)
×(2)
–
(cid:88)
(cid:88)
(cid:88)
–
×(1)
×(1)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
–
(cid:88)
(cid:88)
(cid:88)
–
(cid:88)
(cid:88)
(cid:88)
–
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
–(3)
(cid:88)
(cid:88)
(cid:88)
–(3)
(cid:88)
(cid:88)
(cid:88)
–(3)
Using our app, we have successfully carried out a number
of real-world, PIN-less transactions with amounts greater than
the domestic CVM-required limit with Visa credit and debit
cards. Figure 4 shows screenshots of our app. The transaction
log displayed in the POS emulator screen in this ﬁgure
corresponds to one of such transactions, whose parsed log is
given in Appendix B. A video demonstration of the attack for
a 200 CHF transaction is available on [36].
Our attack should also work for the EMV Contactless
Kernels 6 [37] (Discover) and 7 [38] (UnionPay), but these
have not been tested yet. To avoid defrauding others, all of
our tests were carried out with our own debit/credit cards, and
in all attacks the purchased goods were paid for in full.
As discussed in Section II, Galloway and Yunusov [28]
recently presented at BlackHat Europe another man-in-the-
middle attack that also bypasses Visa’s PIN veriﬁcation. In
contrast to our PIN bypass attack, their attack does not clear
the 8th bit of CTQ’s ﬁrst byte. Instead, it clears the 7th bit of
the Terminal Transaction Qualiﬁers’ second byte. This bit tells
the card whether the terminal requires cardholder veriﬁcation
for the transaction (see [32], p. 115).
The Terminal Transaction Qualiﬁers (TTQ) is a terminal-
sourced data object passed onto the card within the payload
of the GET PROCESSING OPTIONS command. The TTQ is
part of the Processing Data Object List (PDOL) and, according
to the EMV Security and Key Management book [34] (p.
88), the Application Cryptogram (AC) is a MAC computed
on the data referenced by the card’s data object lists such
as the PDOL. For this reason, our Tamarin analysis does not
report the attack of [28] since the (generic) AC should prevent
the modiﬁcation of the PDOL and of the TTQ in particular.
Visa’s proprietary AC does not, as noted in [28]. Clearly, our
attack works even if the TTQ is authenticated as it needs no
modiﬁcation.
Another noticeable difference between our attack and that
of [28] is on the implementation side. Their attack prototype
is composed of two wired Raspberry Pi boards. This setup is
rather conspicuous and could not be easily used outside of a
lab environment. In contrast, our proof-of-concept implemen-
tation is an innocent-looking phone app that can, and has been,
easily used in live, attended terminals. Moreover, as opposed
to Galloway and Yunusov’s attack, ours does not require that
the card and the payment terminal are physically close. In fact,
one can extend our app so that the relay channel covers even
overseas distances. Surprisingly, Visa has shown no intention
to ﬁx such vulnerabilities, as noted in [28].
Observe that our attack, as well as that of [28], presume
that the attacker’s device is physically within NFC proximity
of the victim’s card. These attacks can therefore be carried
out by acquiring the actual card (e.g., stealing it or ﬁnding it
if lost) or by holding the POS emulator near the card in the
victim’s possession.
C. Unauthenticated Ofﬂine Transactions
For all low-value transactions of Visa as well as Mastercard
with either SDA or DDA ofﬂine authentication, our Tamarin
analysis uncovers a trace that violates the property that the
bank accepts all terminal-accepted transactions (Table II, Re-
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:50 UTC from IEEE Xplore.  Restrictions apply. 
1776
Fig. 2. The Visa contactless protocol. The terminal’s request for cardholder veriﬁcation and online authorization is encoded in the PDOL, speciﬁcally in the
Terminal Transaction Qualiﬁers (TTQ, tag 9F66). The card’s response to the TTQ requests is encoded in the Card Transaction Qualiﬁers (CTQ, tag 9F6C).
The input to the AC represented here includes the full PDOL as per [34]; proprietary cryptograms might use fewer data objects [28].
1
2
NFC
WiFi
APDU commands
APDU responses
3
4
NFC
Fig. 3. A relay attack on contactless payment, where (1) is a payment terminal,