### Upper-Bound on the True Degree Distribution

**Figure 8** presents a comparison of the degree distribution of reachable ultrapeers in Gnutella, as observed by Cruiser and a sampling tool (capturing approximately 1,000 samples with \( r = 25 \) hops). The results also include those from a short crawl, a sampling technique commonly used in earlier studies (e.g., [33]). To minimize the system changes between measurements taken by different tools, we interleaved their execution.

**Examination of Figure 8** reveals that the full crawl and sampling distributions are quite similar. The sampling tool identifies slightly more peers with lower degrees compared to the full crawl, aligning with our expectations. We examined several pairs of crawling and sampling data and found this pattern consistently. In contrast, the short crawl exhibits a substantial bias towards high-degree peers relative to both the full crawl and sampling. We computed the Kolmogorov-Smirnov (KS) statistic (D) between each pair of datasets, presented in **Table 3**.

Since the full crawl is a close upper-bound of the true degree distribution, and since the sampling distribution is lower, the error in the sampling distribution relative to the true distribution is \( D \leq 4.3 \). Conversely, because the short crawl data exceeds the full crawl distribution, its error relative to the true distribution is \( D \geq 12 \). Thus, the true D for the sampling data is at most 4.3, while the true D for the short crawl data is at least 12. It is possible that sampling with Metropolized Random Walk with Backtracking (MRWB) produces more accurate results than a full crawl (which suffers from distortion), but this is difficult to prove conclusively.

### Validity and Efficiency of MRWB

Having demonstrated the validity of the MRWB technique, we now focus on its efficiency. Performing the walk requires \( n \cdot r \) queries, where \( n \) is the desired number of samples and \( r \) is the length of the walk in hops. If \( r \) is too low, significant bias may be introduced. If \( r \) is too high, it should not introduce bias but is less efficient. From graph theory, we expect to require \( r \geq O(\log |V|) \) for an ordinary random walk.

To empirically explore the selection of \( r \) for Gnutella, we conducted multiple sets of sampling experiments using different values of \( r \), with full crawls interspersed between the sampling experiments. For each sampling experiment, we computed the KS statistic, \( D \), between the sampled degree distribution and that captured by the most recent crawl. **Figure 9** presents the mean and standard deviation of \( D \) as a function of \( r \) across different experiments. The figure shows that low values of \( r \) (≤ 10) can lead to enormous bias (\( D \geq 40 \)). The amount of bias decreases rapidly with \( r \), and low bias is observed for \( r \geq 25 \) hops. However, in one experiment with \( r = 30 \) hops, we observed \( D > 30 \), while all other experiments at that length showed \( D < 9 \). Investigating the anomalous dataset, we found that a single peer was selected 309 out of 999 times.

Further examination of the trace of this walk revealed that it started at a peer with only a single neighbor. In such cases, the walk gets stuck at that peer due to the way Metropolis–Hastings transitions to a new peer \( y \) with probability only \( \frac{\text{degree}(x)}{\text{degree}(y)} \). When this "stuck" event occurs late in the walk, it is part of the normal re-weighting to correct for a regular random walk's bias towards high-degree peers. However, when it occurs during the first step of the walk, a large fraction of the walks will end at the unusual low-degree peer, resulting in an anomalous set of selections where the same peer is chosen many times.

One way to address this problem is to increase the walk length by requiring:
\[ r \geq \frac{\text{maximum degree}}{\text{minimum degree}} \cdot \log |V| \]
However, this reduces the efficiency of the walk. More importantly, we typically do not accurately know the maximum degree, i.e., while increasing \( r \) decreases the probability of an anomalous event, it does not preclude it. Therefore, we suggest the following heuristic to prevent such problems: during the first few steps of the walk, always transition to the next peer as in a regular random walk; after the first few steps, use the Metropolis–Hastings method for deciding whether to transition to the next peer or remain at the current one. This modification eliminates the correlations induced by sharing a single starting location while keeping the walk length relatively short. We are experimenting with this modification in our ongoing work. Anomalous datasets can easily be detected (and discarded) by the presence of the same IP address being selected a statistically improbable number of times. Given these considerations, we regard \( r = 25 \) as a safe walk length for Gnutella. Choosing \( r = 25 \), we can collect 1,000 samples by querying 25,000 peers, which is over an order of magnitude more efficient than performing a full crawl, which must contact more than 400,000 peers.

### Execution Time and Implementation

Preliminary results show that an implementation of ion-sampler with \( r = 25 \) hops has an execution time comparable to using Cruiser to capture the entire network, or around 10 minutes. While ion-sampler contacts significantly fewer peers, the sequential nature of the walks limits the amount of parallelism that ion-sampler can exploit. As discussed earlier, while longer execution time negatively impacts the accuracy of Cruiser’s results, ion-sampler’s results are not significantly impacted by the time required to perform the walk (as demonstrated in Section 5.4, where we simulate walks of 10,000 hops).

In our initial implementation of ion-sampler, a small fraction of walks would get "stuck" in a corner of the network, repeatedly trying to contact a set of departed peers. While the walks eventually recover, this corner-case significantly and needlessly delayed the overall execution time. We added a small cache to remember the addresses of unresponsive peers to address this issue.

### Summary

These empirical results support the conclusion that a Metropolized Random Walk with Backtracking is an appropriate method for collecting measurements from peer-to-peer systems and demonstrate that it is significantly more accurate than other common sampling techniques. They also illustrate the dramatic improvement in efficiency and scalability of MRWB compared to performing a full crawl. As network size increases, the cost of a full crawl grows linearly and takes longer to complete, introducing greater distortion into the captured snapshots. For MRWB, the cost increases logarithmically, and no additional bias is introduced.

### Discussion

#### 7.1 How Many Samples Are Required?

An important consideration when collecting samples is to know how many samples are needed for statistically significant results. This is primarily a property of the distribution being sampled. Consider the problem of estimating the underlying frequency \( f \) of an event, e.g., that the peer degree takes a particular value. Given \( N \) unbiased samples, an unbiased estimate of \( f \) is \( \hat{f} = \frac{M}{N} \), where \( M \) is the number of samples for which the event occurs. The root mean square (RMS) relative error is given by:
\[ \sqrt{\frac{\text{Var}(\hat{f})}{f}} = \sqrt{\frac{(1 - f)}{fN}} \]

From this expression, we derive the following observations:
- Estimation error does not depend on the population size; in particular, the estimation properties of unbiased sampling scale independently of the size of the system under study.
- The above expression can be inverted to derive the number of samples \( N_{f,\sigma} \) required to estimate an outcome of frequency \( f \) up to an error \( \sigma \). A simple bound is \( N_{f,\sigma} \leq \frac{1}{f \sigma^2} \).
- Unsurprisingly, smaller frequency outcomes have a larger relative error. For example, gathering 1,000 unbiased samples gives us very little useful information about events which only occur once in 10,000; the associated \( \sigma \) value is approximately 3, meaning the likely error dominates the value to be estimated. This motivates using biased sampling in certain circumstances, as discussed in the next subsection.

The presence of sampling bias complicates the picture. If an event with underlying frequency \( f \) is actually sampled with frequency \( f_0 \), then the RMS relative error acquires an additional term \( (1 - \frac{f_0}{f})^2 \), which does not reduce as the number of samples \( N \) grows. In other words, when sampling from a biased distribution, increasing the number of samples only increases the accuracy with which we estimate the biased distribution.

#### 7.2 Unbiased versus Biased Sampling

At the beginning of this paper, we set the goal of collecting unbiased samples. However, there are circumstances where unbiased samples are inefficient. For example, while unbiased samples provide accurate information about the body of a distribution, they provide very little information about the tails, as discussed in the previous subsection.

In circumstances such as studying infrequent events, it may be desirable to gather samples with a known sampling bias, i.e., with non-uniform sampling probabilities. By deliberately introducing a sampling bias towards the area of interest, more relevant samples can be gathered. During analysis of the data, each sample is weighted inversely to the probability that it is sampled. This yields unbiased estimates of the quantities of interest, even though the selection of the samples is biased.

A known bias can be introduced by choosing an appropriate definition of \( \mu(x) \) in the Metropolis–Hastings equations presented in Section 4 and altering the walk accordingly. Because the desired type of known bias depends on the focus of the research, we cannot exhaustively demonstrate through simulation that Metropolis–Hastings will operate correctly in a dynamic environment for any \( \mu(x) \). Our results show that it works well in the common case where unbiased samples are desired (i.e., \( \mu(x) = \mu(y) \) for all \( x \) and \( y \)).

#### 7.3 Sampling from Structured Systems

Throughout this paper, we have assumed an unstructured peer-to-peer network. Structured systems (also known as Distributed Hash Tables or DHTs) should work just as well with random walks, provided links are still bidirectional. However, the structure of these systems often allows a more efficient technique.

In a typical DHT scheme, each peer has a randomly generated identifier. Peers form an overlay that actively maintains certain properties such that messages are efficiently routed to the peer "closest" to a target identifier. The exact properties and the definition of "closest" vary, but the theme remains the same. In these systems, to select a peer at random, we may simply generate an identifier uniformly at random and find the peer closest to the identifier. Because peer identifiers are generated uniformly at random, we know they are uncorrelated with any other property. This technique is simple and effective, as long as there is little variation in the amount of identifier space that each peer is responsible for. We made use of this sampling technique in our study of the widely-deployed Kad DHT [38].

### Conclusions and Future Work

This paper explores the problem of sampling representative peer properties in large and dynamic unstructured P2P systems. We show that the topological and temporal properties of P2P systems can lead to significant bias in collected samples. To collect unbiased samples, we present the Metropolized Random Walk with Backtracking (MRWB), a modification of the Metropolis–Hastings technique, which we developed into the ion-sampler tool. Using both simulation and empirical evaluation, we show that MRWB can collect approximately unbiased samples of peer properties over a wide range of realistic peer dynamics and topological structures.

We are pursuing this work in the following directions:
- First, we are exploring improving sampling efficiency for uncommon events (such as in the tail of distributions) by introducing known bias, as discussed in Section 7.2.
- Second, we are studying the behavior of MRWB under flash-crowd scenarios, where not only are the properties of individual peers changing, but the distribution of those properties is also rapidly evolving.
- Finally, we are developing additional plugins for ion-sampler and using it in conjunction with other measurement tools to accurately characterize several properties of widely-deployed P2P systems.

### Acknowledgments

We would like to thank Amir Rasti and John Capehart for their invaluable efforts in developing the dynamic overlay simulator. We would also like to thank Virginia Lo for her valuable feedback on this paper.

This material is based upon work supported in part by the National Science Foundation (NSF) under Grant No. Nets-NBD-0627202 and an unrestricted gift from Cisco Systems. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF or Cisco.

### References

[References listed as in the original text]