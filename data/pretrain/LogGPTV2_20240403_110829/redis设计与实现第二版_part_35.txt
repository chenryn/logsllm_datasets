ip
ip
第 16章
Sentinel
225
---
## Page 230
226·第三部分多机数据库的实现
通信的。
令连接和订阅连接的例子。．
络连接：
服务器的客户端，它可以向主服务器发送命令，并从命令回复中获取相关的信息。
16.1.5创建连向主服务器的网络连接
接下来的一节将介绍 Sentinel是如何通过命令连接和订阅连接来与被监视主服务器进行
服务器进行通信，所以 Sentinel还必须向主服务器创建命令连接。
专门用一个订阅连接来接收该频道的信息。
这条信息。因此，为了不丢失_sentinel__:hello频道的任何信息，Sentinel 必须
如果在信息发送时，想要接收信息的客户端不在线或者断线，那么这个客户端就会丢失
对于每个被 Sentinel监视的主服务器来说，Sentinel会创建两个连向主服务器的异步网
初始化 Sentinel 的最后一步是创建连向被监视主服务器的网络连接，Sentinel 将成为主
图16-8展示了一个 Sentinel向被它监视的两个主服务器 master1和 master2 创建命
口另一个是订阅连接，这个连接专门用于订阅主服务器的_
一个是命令连接，
另一方面，除了订阅频道之外，Sentinel 还必须向主服务器发送命令，以此来与主
因为 Sentinel 需要与多个实例创建多个网络连接，所以 Sentinel使用的是异步连接。
在 Redis 目前的发布与订阅功能中，被发送的信息都不会保存在 Redis 服务器里面，
sentinelstate
masters
，这个连接专门用于向主服务器发送命令，并接收命令回复。
图16-7Sentinel 状态以及 masters 字典
为什么有两个连接？
"master2"
"masterl"
dict
 sentinelRedisinstance
sentinelRedisInstance
"master2"
"masterl"
__sentinel_:hello 频道。
name
name
---
## Page 231
容的回复：
地向主服务器发送INFO命令，并获得类似于以下内
一个 Sentinel正在连接主服务器，那么Sentinel将持续
有三个从服务器slave0、slave1 和 slave2，并且
析 INFO命令的回复来获取主服务器的当前信息。
连接向被监视的主服务器发送 INFO 命令，并通过分
16.2
举个例子，假设如图 16-9 所示，主服务器 master
Sentinel默认会以每十秒一次的频率，
口另一方面是关于主服务器属下所有从服务器的信息，每个从服务器都由一个"slave"
一方面是关于主服务器本身的信息，包括 run_id域记录的服务器运行 ID，以及
通过分析主服务器返回的INFO命令回复，Sentinel可以获取以下两方面的信息：
# Other sections 
slave2:ip=127.0.0.1,port=33333,state=online,offset=43,lag-0
slave0:ip=127.0.0.1,port=11111,state=online,offset=43,lag=0
role:master 
# Replication
# Server
role 域记录的服务器角色；
器的地址信息，就可以自动发现从服务器。
录了从服务器的端口号。根据这些IP地址和端口号，Sentinel无须用户提供从服务
字符串开头的行记录，每行的 ip= 域记录了从服务器的 IP 地址，而 port=域则记
获取主服务器信息
图 16-8
masterl
(master1 和master2 的客户端)
Sentinel 向主服务器创建网络连接
 Sentinel
健
通过命令
master2
图 16-9Sentinel向带有三个从服务器
slave0
的主服务器发送INFO命令
 Sentinel
 slave1
master
INFO
第16章Sentinel·227
slave2
---
## Page 232
228·第三部分多机数据库的实现
到主服务器实例结构的 slaves 字典里面，如图16-10 所示。
的例子来说，Sentinel 将分别为三个从服务器创建它们各自的实例结构，并将这些结构保存
是否已经存在于slaves 字典：
典，这个字典记录了主服务器属下从服务器的名单：
检测到这一情况之后，就会对实例结构的运行ID 进行更新。
例如，主服务器重启之后，它的运行 ID 就会和实例结构之前保存的运行 ID 不同，Sentinel
"7611c59dc3a29aa6fa0609f841bb6a1019008a9c"
对于我们之前列举的主服务器 master 和三个从服务器 slave0、slave1和 slave2
口如果从服务器对应的实例结构已经存在，那么 Sentinel 对从服务器的实例结构进行
Sentinel 在分析INFO命令中包含的从服务器信息时，会检查从服务器对应的实例结构
字典的键是由 Sentinel 自动设置的从服务器名字，格式为 ip:port：如对于IP地
至于主服务器返回的从服务器信息，则会被用于更新主服务器实例结构的slaves 字
口如果从服务器对应的实例结构不存在，那么说明这个从服务器是新发现的从服务器，
根据 run_id 域和 role 域记录的信息，Sentinei 将对主服务器的实例结构进行更新，
口至于字典的值则是从服务器对应的实例结构：比如说，如果键是127.0.0.1：11111
Sentinel 会在 slaves 字典中为这个从服务器新创建一个实例结构。
更新。
那么这个键的值就是IP地址为127.0.0.1，端口号为11111的从服务器的实例结构。
是127.0.0.1:11111。
址为127.0.0.1，端口号为11111的从服务器来说，Sentinel为它设置的名字就
sentinelRedisInstance
SRI_MASTER
slaves
"master"
run_
name
flags
id
图16-10主服务器和它的三个从服务器
"127.0.0.1:33333
"127.0.0.1:22222"
"127.0.0.1:11111
dict
sentinelRedisInstance
sentinelRedisInstance
sentinelRedisInstance
"127.0.0.1:33333"
"127.0.0.1:22222"
SRI_SLAVE
SRI_SLAVE
 SRI_SLAVE
flags
flags
flags
name
name
---
## Page 233
根据上面的INFO命令回复对从服务器的实例结构进行更新之后，实例结构的样子。
类似于以下内容的回复：
连接向从服务器发送INFO命令，并获得
情况下，会以每十秒一次的频率通过命令
和 slave2 三个从服务器分别创建命令连接和订阅连接，如图 16-11 所示。
创建相应的实例结构之外，Sentinel还会创建连接到从服务器的命令连接和订阅连接。
16.3
在创建命令连接之后，Sentinel在默认
举个例子，对于图 16-10 所示的主从服务器关系来说，Sentinel将对 slave0、slave1
当 Sentinel发现主服务器有新的从服务器出现时，Sentinel除了会为这个新的从服务器
根据这些信息，Sentinel会对从服务器的实例结构进行更新，图16-12展示了 Sentinel
口从服务器的复制偏移量 slave_repl_offset。
口
口从服务器的角色role。
口 从服务器的运行 ID run_id。
根据INFO命令的回复，Sentinel会提取出以下信息：
# Other sections
master_link_status:up
master_host:127.0.0.1
role:slave
#Replication
run_id:32be0699dd27b410f7c90dada3a6
# Server
口主服务器实例结构的 name 属性的值是用户使用 Sentinel 配置文件设置的，而从服务
flags 属性的值为 SRI_SLAVE。
口主服务器实例结构的 flags 属性的值为 SRI_MASTER，而从服务器实例结构的
注意对比图中主服务器实例结构和从服务器实例结构之间的区别：
主服务器的 IP 地址 master_host，以及主服务器的端口号 master_port。
·
从服务器的优先级 slave_priority。
主从服务器的连接状态master_link_status。
器实例结构的name属性的值则是 Sentinel根据从服务器的IP地址和端口号自动设置的。
fab17f97899f
获取从服务器信息
图16-11lSentinel与各个从服务器建立命令连接和
创建命令连接
slave0
创建订阅连接
创建订阅连接
订阅连接
Sentinel
slavel
master
第 16 章 Sentinel
创建命令连接
slave2
创建命令连接
创建订阅连接
·229
---
## Page 234
230·第三部分多机数据库的实现
个参数组成：
器和从服务器发送以下格式的命令：
16.4
s_epoch
 s_runid
s_port
s_ip
其中以 s_开头的参数记录的是 Sentinel 本身的信息，各个参数的意义如表 16-2
在默认情况下，Sentinel会以每两秒一次的频率，通过命令连接向所有被监视的主服务
口而m_开头的参数记录的则是主服务器的信息，各个参数的意义如表16-3 所示。如
PUBLISH
所示。
主服务器的信息。
果 Sentinel正在监视的是从服务器，那么这些参数记录的就是从服务器正在复制的
果 Sentinel正在监视的是主服务器，那么这些参数记录的就是主服务器的信息；如
向主服务器和从服务器发送信息
 sentinel
"32be0699dd27b410f7c90dada3a6fab17f97899f"
表 16-2  信息中和 Sentinel 有关的参数
SENTINEL_MASTER_LINK_STATUS_UP
图16-12从服务器实例结构
slave_master_link_status
sentinelRedisInstance
slave_repl_offset
slave_master_port
 slave_master_host
slave_priority
"127.0.0.1"
SRI_SLAVE
Sentinel 当前的配置纪元（configuration epoch）
Sentinel 的 IP 地址
11887
run id
Sentinel 的运行 ID
台口警 pouus
6379
flags
100
意
义
---
## Page 235
都会收到这条信息，如图 16-14所示。
息时，所有订阅了
同一个服务器，那么当 sentinell 向服务器的_
务器的认知。
也会被用于更新其他 Sentinel对被监视服
其他Sentinel 对发送信息 Sentinel的认知，
Sentinel接收到，这些信息会被用于更新
来说，一个 Sentinel发送的信息会被其他
频道接收信息，如图16-13 所示。
sentinel_:hello频道发送信息，又通过订阅连接从服务器的_
连接断开为止。
连接，向服务器发送以下命令：
16.5
举个例子，
对于监视同一个服务器的多个 Sentinel
这也就是说，对于每个与 Sentinel连接的服务器，Sentinel既通过命令连接向服务器的，
m_epoch
"_port
m_ip
m_name
 SUBSCRIBE _sentinel_:hello
当Sentinel与一个主服务器或者从服务器建立起订阅连接之后，Sentinel就会通过订阅
Sentinel 对_
口主服务器的名字为mymaster，IP地址为127.0.0.1，端口号为6379，当前的
口 Sentinel的IP地址为127.0.0.1端口号为26379，运行ID为e955b4c85598ef
这个示例包含了以下信息：
以下是一条 Sentinel通过PUBLISH命令向主服务器发送的信息示例：
5b5f055bc7ebfd5e828dbed4fa，当前的配置纪元为0。
配置纪元为0。
接收来自主服务器和从服务器的频道信息
379,0"
假设现在有 sentinell、sentinel2、sentinel3三个 Sentinel在监视
#
_sentinel_
_sentinel_
表16-3
_:hello频道的订阅会一直持续到 Sentinel与服务器的
_:hello频道的 Sentinel（包括 sentinell自已在内）
信息中和主服务器有关的参数
主服务器当前的配置纪元
主服务器的端口号
主服务器的IP地址
主服务器的名字
图16-13
Sentinel
_sentinel_:hello频道发送一条信
Sentinel同时向服务器发送和接收信息
从频道中接收信息
通过订阅连接
发送信息到频道
通过命令连接
_sentinel_
K
第 16章 
服务器
-_:he1lo
Sentinel
·231
---
## Page 236
232◆第三部分多机数据库的实现
结构的 sentinels 字典中，源 Sentinel的实例结构是否存在：
字典中查找相应的主服务器实例结构，然后根据提取出的Sentinel参数，检查主服务器实例
下两方面参数：
所有同样监视这个主服务器的其他Sentinel的资料：
16.5.1
等八个参数，并进行以下检查：
地址、Sentinel端口号、Sentinel运行ID
息进行分析，提取出信息中的 Sentinel IP
Sentinel为主服务器创建的实例结构中的 sentinels字典保存了除 Sentinel本身之外，
举个例子，假设分别有127.0.0.1:26379、127.0.0.1:26380、127.0.0.1:26381
口 如果源 Sentinel 的实例结构不存在，那么说明源 Sentinel是刚刚开始监视主服务器
口如果源 Sentinel 的实例结构已经存在，那么对源 Sentinel 的实例结构进行更新。
根据信息中提取出的主服务器参数，目标 Sentinel会在自己的 Sentinel状态的masters
口与主服务器有关的参数：源 Sentinel正在监视的主服务器的名字、IP地址、端口号
口与 Sentinel有关的参数：源 Sentinel的IP地址、端口号、运行ID 和配置纪元。
当一个 Sentinel接收到其他 Sentinel 发来的信息时（我们称呼发送信息的 Sentinel为源
口 sentinels字典的值则是键所对应 Sentinel的实例结构，比如对于键"127.0.0.