### Figure 12: Number of Events and Messages per Day

Figure 12 illustrates the number of events and messages per day over a two-week period for dataset A. The data has been normalized by a fixed factor to protect proprietary information. As observed, there is a three-order-of-magnitude compression in the number of messages. Additionally, the number of events per day remains relatively stable across the days.

### Table 7: Effectiveness (Compression Ratio) of Three Digest Methodologies

| Methodology | Ratio (Dataset A) | Ratio (Dataset B) |
|-------------|-------------------|-------------------|
| T (Temporal Based) | 1.63 × 10⁻² | 9.08 × 10⁻³ |
| T+R (Temporal + Rule Based) | 5.15 × 10⁻³ | 2.26 × 10⁻³ |
| T+R+C (Temporal + Rule + Cross-Router) | 3.27 × 10⁻³ | 0.91 × 10⁻³ |

### Figure 12: Event Digests and Active Rules per Day for Dataset A

The figure shows the number of event digests and active rules per day for dataset A. The number of active rules, which are the association rules used in message grouping, is also stable, ranging from 100 to 200 per day. Similar observations for dataset B are omitted due to space constraints.

### Figure 13: Normalized Number of Raw Messages and Events per Router for Dataset A

Figure 13 presents the normalized number of raw messages and events on each individual router for dataset A. It is evident that the distribution of events across routers is less skewed compared to the distribution of raw syslog messages. Routers with a higher volume of syslog messages generally exhibit better compression ratios. The best compression ratio is achieved on the router with the largest number of raw messages.

### Verification of Event Coverage

To ensure that SyslogDigest does not miss important network events during extraction, we compared the event digests generated by SyslogDigest with known network events obtained from trouble tickets. For both datasets A and B, each trouble ticket is associated with a unique case identifier, timestamp, and type and location of the event. In our preliminary evaluation, we ranked the tickets based on the frequency of investigation and updates. We selected the top 30 tickets for dataset B and correlated them with the event digests. A match was identified if the duration of the event digest covered the creation time of the trouble ticket and the event location matched at the state level. Our results show that all 30 tickets matched with event digests ranked in the top 5% or higher by SyslogDigest, indicating that SyslogDigest effectively captures important incidents.

### 6. Applications

#### 6.1 Complex Network Troubleshooting

SyslogDigest can be an essential tool for network troubleshooting, especially for diagnosing complex events involving multiple network layers and locations. For example, in a commercial IPTV network, PIM neighbor loss events can disrupt live TV streams. SyslogDigest revealed that a single link failure on the primary path caused the PIM neighbor session to be interrupted, as the secondary path had not been set up successfully. This insight would have been difficult to obtain manually, as it required analyzing hundreds of syslog messages across multiple routers. SyslogDigest's ability to group related syslog messages based on their types and co-occurrence patterns significantly enhances the efficiency of troubleshooting.

#### 6.2 Network Health Monitoring and Visualization

Network operators need to keep track of network events efficiently. Visualization tools like SyslogDigest can help operators "see" what is happening in the network. Figures 14 and 15 compare the network status maps using SyslogDigest and raw syslog messages, respectively. The circles in the maps represent events, with larger circles indicating more events. While the raw syslog messages provide detailed information, they can be overwhelming and potentially misleading. SyslogDigest simplifies this by summarizing the events, making it easier for operators to focus on significant issues.

### 7. Related Work

Several commercial tools, such as NetCool and Lonix, parse and analyze log data but require extensive domain knowledge. Other research, such as Xu et al. [19], proposes methods for mining console logs but assumes access to the source code, which is impractical for router syslogs. Troubleshooting approaches, like those by Huang et al. [7] and Kandula et al. [10], use advanced statistical methods on multiple data sources. SyslogDigest, while not specifically designed for troubleshooting, can significantly benefit complex troubleshooting tasks. Rule learning techniques, such as those by Brauckhoff et al. [4] and Yamanishi et al. [20], focus on different aspects of network problems and data sources. Tools like FlowScan [16] and NICE [14] aggregate traffic data, but SyslogDigest is the first to extract high-level network events from logs.

### 8. Conclusion

SyslogDigest is a system that groups large volumes of syslog messages into meaningful network events using data mining techniques. It identifies syslog message signatures, learns association rules, groups related messages, and labels and prioritizes events. Evaluated on real syslog data from two large operational networks, SyslogDigest has demonstrated its effectiveness in complex network troubleshooting and network health monitoring. Future work includes applying SyslogDigest to other network data and integrating it into various network management tools.

### 9. References

[References listed as provided in the original text]

This optimized version of your text is more structured, clear, and professional, with improved readability and coherence.