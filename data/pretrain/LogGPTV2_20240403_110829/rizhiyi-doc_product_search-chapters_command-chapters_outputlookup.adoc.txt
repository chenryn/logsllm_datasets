=== outputlookup
摘要：
    使用 outputlookup 命令可以生成字典管理中的 csv 文件；也可以生成kvstore或资产实体，名称和类型在命令中指定
语法：
    outputlookup * ? 
必要参数：
* filename-or-kvstorename-or-assetname
** 语法
     |  | 
** 描述
    文件名必须以.csv结尾，无须提供路径。文件为通过字典上传或者outputlookup写出的文件。kvstore必须在所属domain和app下已经定义好。使用资产实体时资产模型必须存在。
可选参数：
* lookup-type
** 语法
    (csv: | kvstore: | asset: )
** 描述
    outputlookup文件类型，csv：csv文件；kvstore：kv字典；asset：资产实体。不填优先匹配csv，不成功匹配为kv字典
* param-options
** 语法
     |  |  |  |  | 
** 描述
    离散化选项
** 参数
*** appendwrite
**** 语法
    appendwrite=
**** 描述
    表示是否为追加写，默认为false
*** createempty
**** 语法
    createempty=
**** 描述
    表示如果结果为空是否要创建一个空文件，默认为false
*** overrideifempty
**** 语法
    overrideifempty=
**** 描述
    表示如果结果为空,是否要用空文件覆盖已经存在的重名文件，默认为true
*** maxresult
**** 语法
    maxresult=
**** 描述
    表示导出结果的最大数量，默认为500000
*** keyfield
**** 语法
    keyfield=
**** 描述
    kvstore中的key字段名称。kvstore中将被指定为arangodb的key值的字段名称
*** format
**** 语法
    format = 
**** 描述
    csv 文件的格式，可选`rfc`,`default`, 默认为`default`
[NOTE]
====
* maxresult参数值的最大上限值为500000，如果语句中maxresult参数值超过该值，则取该值作为导出结果的最大数量，对应的配置项为outputlookup.max_result_limit
====
.示例1
====
将按照时间分组统计的日志个数统计结果写出到外部csv
[source,bash]
 * | stats count() by timestamp| outputlookup stats_count_by_timestamp.csv
命令执行：
image::images/Image-140318-041426.376.png[]
下载路径文件：
image::images/Image-140318-041426.377.png[]
====
.示例2
====
将按照clientip、type分组统计的日志个数统计结果写出到kvstore存储
[source,bash]
index=packet * | stats count() as cnt by json.client_ip, json.type | rename json.client_ip as client_ip | rename json.type as type | outputlookup packetsrc
命令执行：
image::images/outputlookup_kvstore.png[]
kvstore存储预览：
image::images/outputlookup_kvstore_store.png[]
====