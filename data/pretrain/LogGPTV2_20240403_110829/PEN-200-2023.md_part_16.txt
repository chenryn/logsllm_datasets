application, if we were given user accounts by the client, include them here along with the IP
addresses that the attacks came from (i.e our testing machines). We should also note any
accounts that we created so the client can confirm they have been removed. The following is an
example of this high level structure:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 103
Made in Morocco
Penetration Testing with Kali Linux
Executive Summary:
- Scope: https://kali.org/login.php
- Timeframe: Jan 3 - 5, 2022
- OWASP/PCI Testing methodology was used
- Social engineering and DoS testing were not in scope
- No testing accounts were given; testing was black box from an external IP address
- All tests were run from 192.168.1.2"
Listing 28 - Pertinent Details
Next, we’ll prepare the long-form Executive Summary. This is a written summary of the testing
that provides a high-level overview of each step of the engagement and establishes severity,
context, and a “worst-case scenario” for the key findings from the testing. It’s important not to
undersell or oversell the vulnerabilities. We want the client’s mental model of their security
posture to be accurate. For example, if we’ve found an SQL injection that enables credit card
y
details to be stolen, then that represents a very different severity than if we’ve found an
authentication bypass on a system hosting public data. We would certainly emphasize the former
in the Executive Summary, but we may not highlight the latter ikn this section.
We should make note of any trends that were observed in the testing to provide strategic advice.
s
The executive doesn’t need to be given the full technical details in this section, and technical staff
will be able to find them as each vulnerability will be expanded upon in later sections of the report.
What we can do, however, is to describe the treonds we’ve identified and validate our concerns
with summaries of one or two of the more important related findings.
n
To highlight trends, we want to group findings with similar vulnerabilities. Many vulnerabilities of
the same type generally show a failure in that particular area. For example, if we find stored and
reflected XSS, along with SQL injectiion and file upload vulnerabilities, then user input is clearly not
being properly sanitized across the board. This must be fixed at a systemic level. This section is
z
an appropriate place to inform the client of a systemic failure, and we can recommend the
necessary process changes as the remediation. In this example, we may encourage the client to
D
provide proper security training for their developers.
It is useful to mention things that the client has done well. This is especially true because while
management may be paying for the engagement, our working relationship is often with the
technical security teams. We want to make sure that they are not personally looked down upon.
Even those penetration tests that find severe vulnerabilities will likely also identify one or two
areas that were hardened. Including those areas will soften the impact on people, and make the
client more accepting of the report as a whole.
The Executive Summary can generally be broken down as follows:
First we include a few sentences describing the engagement:
- "The Client hired OffSec to conduct a penetration test of
their kali.org web application in October of 2025. The test was conducted
from a remote IP between the hours of 9 AM and 5 PM, with no users
provided by the Client."
Listing 29 - Describing the Engagement
Next, we add several sentences that talk about some effective hardening we observed:
- "The application had many forms of hardening in place. First, OffSec was unable to
upload malicious files due to the strong filtering
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 104
Made in Morocco
Penetration Testing with Kali Linux
in place. OffSec was also unable to brute force user accounts
because of the robust lockout policy in place. Finally, the strong
password policy made trivial password attacks unlikely to succeed.
This points to a commendable culture of user account protections."
Listing 30 - Identifying the positives
Notice the language here. We do not say something like “It was impossible to upload malicious
files”, because we cannot make absolute claims without absolute evidence. We were given a
limited time and resource budget to perform our engagement and we ourselves are fallible. We
must be careful to make sure our language does not preclude the possibility that we were simply
unable to find a flaw that does actually exist and remains undetected.
Next, we introduce a discussion of the vulnerabilities discovered:
- "However, there were still areas of concern within the application.
OffSec was able to inject arbitrary JavaScript into the browsyer of
an unwitting victim that would then be run in the context of that
victim. In conjuction with the username enumeration on the login
k
field, there seems to be a trend of unsanitized user input compounded
by verbose error messages being returned to the user. This can lead
to some impactful issues, such as password or sesssion stealing. It is
recommended that all input and error messages that are returned to the
user be sanitized and made generic to prevent this class of issue from
o
cropping up."
Listing 31 - Explaining a vulnerability
Several paragraphs of this type may ben required, depending on the number and kind of
vulnerabilities we found. Use as many as necessary to illustrate the trends, but try not to make up
trends where they don’t exist.
i
z
Finally the Executive Summary should conclude with an engagement wrap-up:
"These vulnerabilities anDd their remediations are described in more
detail below. Should any questions arise, OffSec is happy
to provide further advice and remediation help."
Listing 32 - Concise conclusion
We should mention here that not all penetration testers will offer remediation
advice, and not all clients will expect it. That said, we believe that the most
effective relationships are those between clients and vendors that do work on
that level together.
5.2.4 Testing Environment Considerations
The first section of the full report should detail any issues that affected the testing. This is usually
a fairly small section. At times, there are mistakes or extenuating circumstances that occur
during an engagement. While those directly involved will already be aware of them, we should
document them in the report to demonstrate that we’ve been transparent.
It is our job as penetration testers and consultants to inform the client of all circumstances and
limitations that affected the engagement. This is done so that they can improve on the next
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 105
Made in Morocco
Penetration Testing with Kali Linux
iteration of testing and get the most value for the money they are paying. It is important to note
that not every issue needs to be highlighted, and regardless of the circumstances of the test, we
need to ensure the report is professional.
We’ll consider three potential states with regard to extenuating circumstances:
• Positive Outcome: “There were no limitations or extenuating circumstances in the
engagement. The time allocated was sufficient to thoroughly test the environment.”
• Neutral Outcome: “There were no credentials allocated to the tester in the first two days of
the test. However, the attack surface was much smaller than anticipated. Therefore, this did
not have an impact on the overall test. OffSec recommends that communication of
credentials occurs immediately before the engagement begins for future contracts, so that
we can provide as much testing as possible within the allotted time.”
y
• Negative Outcome: “There was not enough time allocated to this engagement to conduct a
thorough review of the application, and the scope became much larger than expected. It is
k
recommended that more time is allocated to future engagements to provide more
comprehensive coverage.”
s
The considerations we raise in this section will allow both us and the client to learn from mistakes
or successes on this test and apply them to future engagements.
o
5.2.5 Technical Summary
n
The next section should be a list of all of the key findings in the report, written out with a summary
and recommendation for a technical person, like a security architect, to learn at a glance what
needs to be done. i
z
This section should group findings into common areas. For example, all weak account password
issues that have been identified would be grouped, regardless of the testing timeline. An example
D
of the structure of this section might be:
• User and Privilege Management
• Architecture
• Authorization
• Patch Management
• Integrity and Signatures
• Authentication
• Access Control
• Audit, Log Management and Monitoring
• Traffic and Data Encryption
• Security Misconfigurations
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 106
Made in Morocco
Penetration Testing with Kali Linux
An example of a technical summary for Patch Management is as follows:
4. Patch Management
Windows and Ubuntu operating systems that are not up to date were
identified. These are shown to be vulnerable to publicly-available
exploits and could result in malicious execution of code, theft
of sensitive information, or cause denial of services which may
impact the infrastructure. Using outdated applications increases the
possibility of an intruder gaining unauthorized access by exploiting
known vulnerabilities. Patch management ought to be improved and
updates should be applied in conjunction with change management.
Listing 33 - Example Technical Summary
The section should finish with a risk heat map based on vulnerability severity adjusted as
appropriate to the client’s context, and as agreed upon with a client ysecurity risk representative if
possible.
k
5.2.6 Technical Findings and Recommendation
The Technical Findings and Remediation section is whsere we include the full technical details
relating to our penetration test, and what we consider to be the appropriate steps required to
address the findings. While this is a technical section, we should not assume the audience is
o
made up of penetration testers.
Not everyone, even those who work withnin the technologies that were being tested, will fully
understand the nuances of the vulnerabilities. While a deep technical dive into the root causes of
an exploit is not always necessary, a broad overview of how it was able to take place should
i
usually be provided. It is better to assume less background knowledge on behalf of the audience
z
and give too much information, rather than the opposite.
This section is often presented in tabular form and provides full details of the findings. A finding
D
might cover one vulnerability that has been identified, or may cover multiple vulnerabilities of the
same type.
It’s important to note that there might be a need for an attack narrative. This narrative describes,
in story format, exactly what happened during the test. This is typically done for a simulated
threat engagement, but is also useful at times to describe the more complex exploitation steps
required for a regular penetration test. If it is necessary, then writing out the attack path step-by-
step, with appropriate screenshots, is generally sufficient. An extended narrative could be placed
in an Appendix and referenced from the findings table.
Below are three example entries:
Ref Risk Issue Description and Implications Recommendations
Account, Password, and Privilege
All accounts should have passwords that
Management is inadequate. Account
are enforced by a strict policy. All
management is the process of
accounts with weak passwords should
provisioning new accounts and
1 H be forced to change them. All accounts
removing accounts that are no longer
should be set to expire automatically.
required. The following issues were
Accounts no longer required should be
identified by performing an analysis of
removed.
122,624 user accounts post-
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 107
Made in Morocco
Penetration Testing with Kali Linux
compromise: 722 user accounts were
configured to never expire; 23,142
users had never logged in; 6 users were
members of the domain administrator
group; default initial passwords were in
use for 968 accounts.
To prevent information gathering via
Information enumerated through an
anonymous SMB sessions: Access to
anonymous SMB session. An
TCP ports 139 and 445 should be
anonymous SMB session connection
restricted based on roles and
2 H was made, and the information gained
requirements. Enumeration of SAM
was then used to gain unauthorized
accounts should be disabled using the
user access as detailed in Appendix
Local Security Policy > Local Policies >
E.9.
Security Options
y
Malicious JavaScript code can be run
to silently carry out malicious activity.
k
A form of this is reflected cross-site
scripting (XSS), which occurs when a
web application accepts user input s
with embedded active code and then
outputs it into a webpage that is o
subsequently displayed to a user. This
will cause attacker-injected code to be Treat all user input as potentially tainted,
n
executed on the user’s web browser. and perform proper sanitization through
XSS attacks can be used to achieve special character filtering. Adequately
3 M outcomes such as unauthorized encode all user-controlled output when
i
access and credential theft, which can rendering to a page. Do not include the
z
in some cases result in reputational username in the error message of the
and financial damage as a result of bad application login.
D
publicity or fines. As shown in
Appendix E.8, the [client] application is
vulnerable to an XSS vulnerability
because the username value is
displayed on the screen login attempt
fails. A proof-of-concept using a
maliciously crafted username is
provided in Appendix E.
Table 1 - Findings and Recommendations
It’s important to understand that what we identify as the severity of an issue based on its
vulnerability score is not context-specific business risk. It only represents technical severity, even
if we adjust it based on likelihood. We can reflect this in our findings as technical severity, or we
can work with the client’s risk team to gain an understanding of the appropriate level of business
risk by including consideration of the unique business impact to the client.
We can start our findings description with a sentence or two describing what the vulnerability is,
why it is dangerous, and what an attacker can accomplish with it. This can be written in such a
way to provide insight into the immediate impact of an attack. We then describe some of the
technical details about the vulnerability. There is often no need to go into overwhelming detail;
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 108
Made in Morocco
Penetration Testing with Kali Linux
simply explain at a basic level what the vulnerability is and how to exploit it. The intention is to
describe a complex exploit in a way that most technical audiences can understand.
We also need to include evidence to prove the vulnerability identified is exploitable, along with any
further relevant information. If this is simple, it can be included inline as per the first entry above.
Otherwise, it can be documented in an appendix as shown in the second entry.
Once the details of the vulnerability have been explained, we can describe the specific finding that
we have identified in the system or application. We will use the notes that we took during testing
and the screenshots that support them to provide a detailed account. Although this is more than
a few sentences, we’ll want to summarize it in the table and reference an appendix for the full
description.
It’s good practice to use our notes and screenshots to walk the reader through how we achieved
the result step-by-step. The screenshots should contain a short explanation of what it shows. We
y
should not rely on the screenshot to speak for itself. We should present the impact of the
vulnerability in a way that frames its severity for the client in an appropriate manner, and is
k
directly relevant to the business or application.
The remediation advice should be detailed enougsh to enable system and application
administrators to implement it without ambiguity. The remediation should be clear, concise, and
thorough. It should be sufficient to remove the vulnerability in a manner acceptable to the client
o
and relevant to the application. Presenting remediation that is excessive, unacceptably costly, or
culturally inappropriate (e.g. not allowing remote logins for a remote working environment) will
lead to the fix never being implemented. nA strong understanding of the needs of the client is
necessary here.
There are several other important iteims to keep in mind. First, broad solutions should be avoided,
in favor of things that drill down zinto the specifics of the application and the business. Second,
theoretical solutions are not effective in combating a vulnerability. Make sure that any solution