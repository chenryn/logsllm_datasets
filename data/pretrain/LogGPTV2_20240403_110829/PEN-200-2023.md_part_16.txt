### Application and IP Address Details

If the client provided user accounts, include them here along with the IP addresses from which the attacks originated (i.e., our testing machines). Additionally, note any accounts we created so the client can confirm their removal. Here is an example of this high-level structure:

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 103**
Made in Morocco
Penetration Testing with Kali Linux

**Executive Summary:**
- **Scope:** https://kali.org/login.php
- **Timeframe:** January 3 - 5, 2022
- **Testing Methodology:** OWASP/PCI
- **Exclusions:** Social engineering and DoS testing
- **Test Accounts:** None provided; testing was black-box from an external IP address
- **Testing IP Address:** 192.168.1.2

**Listing 28 - Pertinent Details**

Next, we will prepare the long-form Executive Summary. This summary provides a high-level overview of each step of the engagement, establishing severity, context, and a "worst-case scenario" for key findings. It is crucial to neither undersell nor oversell vulnerabilities, ensuring the client's understanding of their security posture is accurate.

For instance, if we discovered an SQL injection that allows credit card details to be stolen, this would be more severe than an authentication bypass on a system hosting public data. The former would be emphasized in the Executive Summary, while the latter might not be highlighted in this section.

We should also note any trends observed during testing to provide strategic advice. The executive summary does not need to include full technical details, as these will be expanded upon in later sections. Instead, we can describe identified trends and validate concerns with summaries of one or two important findings.

To highlight trends, group similar vulnerabilities. For example, if we find stored and reflected XSS, SQL injection, and file upload vulnerabilities, it indicates a systemic failure in input sanitization. This section is appropriate for informing the client of such systemic issues and recommending necessary process changes, such as providing proper security training for developers.

It is also useful to mention areas where the client has performed well. This is particularly important because while management may be paying for the engagement, our working relationship is often with the technical security teams. We want to ensure they are not personally criticized. Even in penetration tests that find severe vulnerabilities, there are usually one or two areas that were hardened. Including these areas can soften the impact on people and make the client more accepting of the report as a whole.

The Executive Summary can generally be broken down as follows:

1. **Describing the Engagement:**
   - "The Client hired OffSec to conduct a penetration test of their kali.org web application in October 2025. The test was conducted from a remote IP between 9 AM and 5 PM, with no users provided by the Client."

2. **Identifying the Positives:**
   - "The application had several effective hardening measures in place. OffSec was unable to upload malicious files due to strong filtering. Additionally, brute force attacks on user accounts were prevented by a robust lockout policy, and trivial password attacks were unlikely to succeed due to a strong password policy. This indicates a commendable culture of user account protection."

3. **Explaining Vulnerabilities:**
   - "However, there were still areas of concern within the application. OffSec was able to inject arbitrary JavaScript into the browser of an unwitting victim, which could lead to significant issues such as password or session stealing. This trend of unsanitized user input, compounded by verbose error messages, can have serious implications. It is recommended that all input and error messages returned to the user be sanitized and made generic to prevent such issues."

4. **Concise Conclusion:**
   - "These vulnerabilities and their remediations are described in more detail below. Should any questions arise, OffSec is happy to provide further advice and remediation help."

### Testing Environment Considerations

The first section of the full report should detail any issues that affected the testing. This is typically a small section but is essential for transparency. We must inform the client of all circumstances and limitations that affected the engagement to help them improve future testing and get the most value for their money.

Consider three potential states with regard to extenuating circumstances:
- **Positive Outcome:** "There were no limitations or extenuating circumstances in the engagement. The allocated time was sufficient to thoroughly test the environment."
- **Neutral Outcome:** "No credentials were provided to the tester in the first two days of the test. However, the attack surface was smaller than anticipated, so this did not impact the overall test. OffSec recommends that credentials be communicated immediately before future engagements."
- **Negative Outcome:** "Insufficient time was allocated for a thorough review of the application, and the scope became larger than expected. It is recommended that more time be allocated for future engagements to provide comprehensive coverage."

### Technical Summary

The next section should list all key findings, written with a summary and recommendation for a technical person, such as a security architect, to quickly understand what needs to be done. Group findings into common areas, such as:
- User and Privilege Management
- Architecture
- Authorization
- Patch Management
- Integrity and Signatures
- Authentication
- Access Control
- Audit, Log Management, and Monitoring
- Traffic and Data Encryption
- Security Misconfigurations

An example of a technical summary for Patch Management:
- **Patch Management:**
  - Outdated Windows and Ubuntu operating systems were identified, making them vulnerable to publicly available exploits. This could result in malicious code execution, theft of sensitive information, or denial of service, impacting the infrastructure. Patch management should be improved, and updates should be applied in conjunction with change management.

### Technical Findings and Recommendations

The Technical Findings and Remediation section includes full technical details and the steps required to address the findings. While this is a technical section, we should not assume the audience is made up of penetration testers. Provide a broad overview of how the vulnerability was exploited, and include evidence to prove its exploitability.

Below are three example entries:

| Ref | Risk | Issue Description and Implications | Recommendations |
|-----|------|-----------------------------------|-----------------|
| 1 H | High | Inadequate Account, Password, and Privilege Management. Issues included 722 user accounts configured to never expire, 23,142 users who never logged in, and 6 domain administrators. | Enforce strict password policies, set accounts to expire, and remove unnecessary accounts. |
| 2 H | High | Information enumerated through anonymous SMB sessions. Access to TCP ports 139 and 445 should be restricted based on roles and requirements. | Restrict access to TCP ports 139 and 445, and disable enumeration of SAM accounts using Local Security Policy. |
| 3 M | Medium | Malicious JavaScript code can be run via reflected cross-site scripting (XSS) when a web application accepts user input with embedded active code. This can lead to unauthorized access and credential theft. | Treat all user input as potentially tainted, perform proper sanitization, and encode user-controlled output. |

It’s important to understand that the severity of an issue based on its vulnerability score is not context-specific business risk. It only represents technical severity. We can reflect this in our findings as technical severity or work with the client’s risk team to understand the appropriate level of business risk.

Start the findings description with a brief explanation of the vulnerability, its dangers, and what an attacker can accomplish. Include technical details at a basic level, and provide evidence of exploitability. Summarize the finding in the table and reference an appendix for the full description.

Use notes and screenshots to walk the reader through the steps taken to achieve the result. Screenshots should include a short explanation. Present the impact of the vulnerability in a way that frames its severity appropriately and is directly relevant to the business or application.

Remediation advice should be detailed enough to enable system and application administrators to implement it without ambiguity. Avoid broad, theoretical solutions and ensure the remediation is clear, concise, and thorough. A strong understanding of the client's needs is necessary to provide practical and cost-effective recommendations.