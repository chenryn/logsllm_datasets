DEF CON 24 
Side-channel attacks on high-
security electronic safe locks 
PI:EMAIL 
Background – Electronic safe locks 
Image: ellenm1 on Flickr / CC BY-NC 
Background – Electronic safe locks 
• In scope: decent, listed locks 
– UL Type 1 High-security electronic lock 
• Out of scope: cheap, poor-quality locks 
Sargent & Greenleaf 6120-332 
6120 – System model 
MCU 
Outside of safe 
Battery 
Keypad 
EEPROM 
Bolt 
motor 
Inside of safe 
Lock 
Steel safe door 
¼” hole 
for wires 
Buzzer 
6120 – Circuit model 
Data line volts 
100 k 
Data line 
Volts across R1 
Current through R1 
R1 
1 
0 
0 volts 
5 volts 
50 A 
0 A 
 Higher current consumption means the bit being read from 
EEPROM is a 0, and a lower current means the bit is 1 
Vcc 
Bit value 
5 volts 
0 volts 
EEPROM 
Amplifier 
Oscilloscope 
Sense 
Resistor 
Battery 
MCU 
6120 – Power analysis 
• 1 nibble per keycode digit 
• Only lower byte in each EEPROM word is used 
6120 – Demo 
S&G Titan PivotBolt 
Titan – Timing attack 
• Entire six-digit keypad sequence is captured 
before starting comparison to key from EEPROM 
• Pseudocode of Titan keycode comparison: 
bool check_code(int enteredCode[6], int actualCode[6]) 
{ 
for (int digit = 0; digit = 5 
LOCKOUT 
Titan – EEPROM write example 
Starting value: 0xA4 
Time from start of write 
Write value: 0x1C 
Value in EEPROM 
400 s 
0xA4 
2500 s 
3000 s 
0 
500 s 
0x?? 
0x00 
0x?? 
0x1C 
Titan – Interrupt EEPROM write 
2.7v Brownout 
600 s from detection 
1.1 ms from write start 
Supply voltage 
Current 
consumption 
The hack – Custom PCB 
• Micro-ammeter 
• Power supply/control for lock 
• Keypress simulator 
The hack – Algorithm 
• Try all values for first digit 
– Oversample to reduce noise 
• Longest time delay  correct value 
• Repeat for digits 2 through 5 
• Every fifth attempt, clear the lockout counter 
• Brute-force the sixth digit 
– Just 10 attempts 
Titan – Demo 
Conclusions 
• Applicability to other systems and mitigations 
– Power analysis 
– Timing attack 
– EEPROM manipulation 
• Burglars aren’t going to bother with this 
Image: HomeSpotHQ  on Flickr / CC BY 
Feel free to email me: 
PI:EMAIL 
Backup slides 
Background – Electronic safe locks 
• Opening a lock 
– User enters code on keypad 
– Microcontroller (MCU) checks code 
– MCU drives motor to free bolt if correct 
Background – Electronic safe locks 
• Safe lock certification 
– UL Type 1 High-security electronic lock 
– Many others 
• Out of scope: cheap, non-certified locks 
– Many of these can be easily brute-forced 
– Some can be “spiked” (bolt motor driven directly) 
– Some can be bypassed mechanically (see, e.g., [2] 
or [3]) 
Background – Electronic safe locks 
• All logic resides inside safe 
• Only keypad and battery are outside safe 
• Connection is via wires through a small hole in 
the door metal 
• Hardened steel plate in lock 
• No direct access to the lock PCB possible 
Background – Side channel attack 
• Side channel attack 
– Gaining knowledge about the state of a device 
through unintentional information leakage  
• Attacks used in this talk 
– Power analysis 
– Timing attack 
• And, a related concept 
– Forcing a system into a particular state using 
unexpected inputs (in this case, removing power) 
S&G 6120 
• Sargent & Greenleaf 6120-332 safe lock 
– UL listed Type 1 high-security electronic lock 
– Still being produced (as of at least late 2015)  
– Designed and certified ca. 1994 
– ST62T25C microcontroller (ST) 
– 93LC46B serial EEPROM (Microchip) 
– 9v alkaline battery located in external keypad 
– S&G is a large, well-respected lock manufacturer 
6120 – MCU 
6120 – EEPROM 
6120 – Keycode storage 
Suppose that the actual code is 908437 
EEPROM address 
Keycode digits 
Stored word value 
0x00 
0x01 
0x02 
0x03 
Start of next keycode 
Keycode 1 
0x 0 0 9 0 
0x 0 0 8 4 
0x 0 0 3 7 
9, 0 
8, 4 
3, 7 
Keycode 2 
.  .  . 
S&G 6120 (and Titan) Keypad Interior 
6120 – Wires from keypad 
Line 
Description 
Battery 
Ground 
Keypress 
9v nominal 
… 
5v when idle, less depending on key being pressed 
There are four wires from the keypad to the lock inside the safe: 
Buzzer 
Hi-Z when idle, pulled to ground for buzzer/LED 
6120 – Design 
• Keycodes stored in the clear in EEPROM 
• MCU reads/writes EEPROM via 3-wire serial 
– “Microwire” interface (similar to SPI) 
• Nice and slow 
– EEPROM to MCU ~1.5 kbit/s 
– Hundreds of milliseconds to read all data 
• Lock reads all keycodes out of EEPROM on 
every attempt 
6120 – Vulnerability 
• Susceptible to power analysis 
• Keycode bit values change amount of current 
consumed during EEPROM read-out 
• Translate current changes into key values 
• Enter key values on keypad 
• Zero modification required 
• Zero evidence of tampering left behind 
– Covert entry 
6120 – Actual vs Power Zoomed  
• Yellow: Actual data line between MCU and EEPROM 
• Blue: Current into lock (2 A per mV) 
6120 – Annotated trace 
• In this case, the keycode is “123456” 
6120 – Microammeter 
U1A 
Oscilloscope 
Lock 
10   
9v 
Battery 
+ 
- 
2.2 k  
2.2 k  
220   
+ 
- 
Vcc 
Vcc 
U1B 
220   
220   
2.2 k  
Current 
sense 
21 dB 
amp 
20 dB 
amp 
6120 – Demo 
• Only basic equipment required to read code 
– Cheap oscilloscope  
– 1x probe 
– 10  current-sense resistor 
– A few wires 
• Don’t even need an amplifier! 
– Set scope to 500 uV/div 
6120 – Notes 
• Final bit in each word (i.e., LSB for every even 
keycode digit) is shifted lower in amplitude by 
about 20 A regardless of value 
• Reading first three words is enough for master 
keycode 
• Remaining words are for additional keycodes 
• Failure count written after all codes read out 
6120 – Lesson 1 
• Don’t store data in the clear 
– I mean, good lord… 