### Windows Service Privileges and Accounts

#### List of Common Privileges
- SeDebugPrivilege
- SeDelegateSessionUserImpersonatePrivilege
- SeImpersonatePrivilege
- SeIncreaseBasePriorityPrivilege
- SeIncreaseQuotaPrivilege
- SeIncreaseWorkingSetPrivilege
- SeLoadDriverPrivilege
- SeLockMemoryPrivilege
- SeManageVolumePrivilege
- SeProfileSingleProcessPrivilege
- SeRestorePrivilege
- SeSecurityPrivilege
- SeShutdownPrivilege
- SeSystemEnvironmentPrivilege
- SeSystemProfilePrivilege
- SeSystemtimePrivilege
- SeTakeOwnershipPrivilege
- SeTcbPrivilege
- SeTimeZonePrivilege
- SeTrustedCredManAccessPrivilege
- SeRelabelPrivilege
- SeUndockPrivilege (client only)
- SeAssignPrimaryTokenPrivilege
- SeAuditPrivilege
- SeChangeNotifyPrivilege
- SeCreateGlobalPrivilege

#### Network Service Account
The network service account is designed for services that need to authenticate to other machines on the network using the computer account, similar to the local system account. However, it does not require membership in the Administrators group or many of the privileges assigned to the local system account.

- **Access Control**: Services running under the network service account have limited access to registry keys, file system folders, and files compared to those running under the local system account.
- **Privilege Limitations**: The restricted set of privileges limits the potential damage from a compromised process. For example, a process running under this account cannot load device drivers or open arbitrary processes.
- **Profile Usage**: Processes running under the network service account use the network service profile. The registry component of this profile is located at `HKU\S-1-5-20`, and the files and directories are stored in `%SystemRoot%\ServiceProfiles\NetworkService`.

**Example Service**: DNS Client, which resolves DNS names and locates domain controllers.

#### Local Service Account
The local service account is similar to the network service account but with an additional restriction: it can only access network resources that allow anonymous access.

- **Privileges and Groups**: The local service account has the same privileges as the network service account and belongs to the same groups, except it is part of the local service group instead of the network service group.
- **Profile Usage**: The profile used by processes running in the local service account is loaded into `HKU\S-1-5-19` and is stored in `%SystemRoot%\ServiceProfiles\LocalService`.

**Example Services**:
- Remote Registry Service, which allows remote access to the local systemâ€™s registry.
- LmHosts service, which performs NetBIOS name resolution.

#### Running Services in Alternate Accounts
Some services require the security credentials of a user account. You can configure a service to run in an alternate account when the service is created or by specifying an account and password using the Windows Services MMC snap-in.

- **Steps to Configure**:
  1. Open the Services snap-in.
  22. Right-click the desired service and select Properties.
  3. Click the Log On tab.
  4. Select the "This Account" option and provide the necessary credentials.

**Note**: A service running with an alternate account is launched using those credentials, even if the account is not currently logged on. This means the user profile is loaded regardless of the user's login status.

#### Running with Least Privilege
To adhere to the principle of least privilege, developers can specify the privileges their service requires. The Service Control Manager (SCM) then creates a security token containing only those privileges.

- **API Usage**: Developers use the `ChangeServiceConfig2` API with the `SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO` information level to specify the required privileges.
- **Registry Storage**: The SCM saves this information in the `RequiredPrivileges` value of the root service key.
- **Token Creation**:
  - For standalone services, the SCM creates a token with only the specified privileges.
  - For shared services, the SCM computes the union of the required privileges and combines them for the hosting process's token.

**Note**: The specified privileges must be a subset of those available to the service account.

#### Experiment: Viewing Privileges Required by Services
You can view the privileges a service requires using the `sc.exe` utility and Process Explorer.

- **Steps**:
  1. Use `sc qprivs cryptsvc` to see the required privileges for the CryptSvc service.
  2. Run Process Explorer as an administrator and locate the Svchost.exe process hosting the CryptSvc service.
  3. Open Task Manager and find the PID of the CryptSvc hosting process.
  4. In Process Explorer, double-click the corresponding Svchost.exe process and check the Security tab for the privileges.

#### Service Isolation
Restricting privileges helps, but it does not isolate a service from resources accessible to its account. To address this, Windows uses service SIDs to grant specific permissions without lowering overall security.

- **Service SIDs**: These SIDs represent a service and are used to set permissions on objects like registry keys and files.
- **Virtual Service Accounts**: If a service is configured to use a virtual service account, a service SID is generated and assigned to the service's token.

#### Experiment: Understanding Service SIDs
To understand how service SIDs are generated, you can use Process Explorer and the Registry Editor.

- **Steps**:
  1. Open the Registry Editor and navigate to `HKLM\SYSTEM\CurrentControlSet\Services`.
  2. Find a service with a `ServiceSidType` value of 3 (restricted) or 1 (unrestricted).
  3. Use Process Explorer to find the hosting process for the service and check the Security tab for the service SID.
  4. The service SID is generated using the SHA-1 hash of the service name.

**Example**:
- **BFE Service**:
  - Service SID: `S-1-5-80-1383147646-27650227-2710666058-1662982300-1023958487`
  - Hash: `7e 28 71 52 b3 e8 a5 01 4a 7b 91 a1 9c 18 1f 63 d7 5d 08 3d`
  - First DWORD: `0x5271287E` (1383147646 in decimal)

By following these steps and understanding the principles, you can better manage and secure your Windows services.