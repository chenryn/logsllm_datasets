then the target network meets the conditions in Theorem 1.
We assume that a target data path p j,k
is identiﬁed. Since p j,k
d
d
is a target data path, it at least crosses with a control path pi
c.
Obviously, the reconnaissance can only be launched by the
compromised hosts. Thus, j ∈ ˜H, k ∈ H, and j (cid:8)= k. We
only need to prove that the crossed control path belongs to a
d , i.e., i ∈ S j,k. Let us con-
switch along with the data path p j,k
sider the opposing case i /∈ S j,k. Note that the timing packets
in our reconnaissance trigger rule installation into switches
S j,k along the data path. Thus, only the latencies of con-
trol paths belonging to the switches in S j,k can be measured.
When i /∈ S j,k, the delay variation of pi
c cannot be noticed by
our reconnaissance. Thus, there must be i ∈ S j,k if a target
data path can be identiﬁed.
E(X) =
n−γ∑
k=1
kγ
n− k
k−2∏
j=0
(1−
γ
n− 1− j
).
(7)
Equation (7) indicates the average number of explored
data paths E(X) totally depends on n and γ. We will show
that E(x) gets small values with proper parameters and the
theoretical values are consistent with our experimental val-
ues in Section 4.1. In reality, our reconnaissance can quickly
ﬁnd a target data path by exploring several data paths (see
Figure 6 in Section 4.1).
4 Attack Evaluation
In this section, we perform large-scale simulations to demon-
strate that the CrossPath attack can be launched with various
network topologies. Moreover, we conduct experiments to
evaluate the feasibility and effectiveness of the attack in a
real SDN testbed.
4.1 Large-Scale Simulation Experiments
Simulation Setup. We perform simulations with 261 real
network topologies [4] around the world. As these network
topologies do not contain hosts and routing information, we
generate 100 hosts 1 in each topology and apply Dijkstra’s al-
gorithm [28] to generate the shortest data path between two
hosts. Note that shortest path forwarding is commonly used
in the intra-domain routing system. We add another host in
each network topology as the SDN controller. The controller
can connect switches via shortest paths (SP) to minimize de-
lays, a minimum spanning tree (MST) to minimize costs, or
randomly searching available paths (RS). We conduct exper-
iments with different types of connection in turn. Moreover,
for simplicity and without loss of generality, we assume that
the attacker only controls one host in the network and we
attach such a host to each network topology.
We note that the positions of hosts in a network will affect
our experimental results. Thus, we conduct 1,000 experi-
ments for each network topology and randomly changes the
positions of all hosts in each experiment. We show the aver-
age results over 1,000 experiments for each topology.
Average Percentage of Identiﬁed Target Paths. Figure 5a
shows the CCDF of the average percentage of identiﬁed tar-
get paths with 261 various network topologies. From the
results, we can see all the network topologies have at least
5% identiﬁed target paths among total data paths in a net-
work regardless of types of connections. More than 98%
of the network topologies have at least 30% identiﬁed target
paths. Moreover, the network tends to have more identiﬁed
data paths when the controller connects switches via MST.
1In reality, we also conduct our experiments with 50, 500, 1000 hosts,
respectively. The results are similar to those in Figure 5.
Theorem 1 indicates that our reconnaissance can ﬁnd a tar-
get data path only if the network meets the conditions. For-
tunately, it only requires at least one data path which crosses
with a control path of switches that are in the data path. Such
conditions can be easily met in practice. We will show that
our reconnaissance can ﬁnd a target data path with various
real network topologies for most cases in Section 4.1.
In order to estimate the average number of explored data
paths for ﬁnding a target data path, we introduce a parameter
γ denoting the total number of target data paths which can
be identiﬁed in a network. In addition to the notations we
used in Theorem 1, let ρ be the total number of data paths
between a compromised host in ˜H and a host in H, and let X
be a random variable denoting the number of explored data
paths for ﬁnding a target data path. Obviously, if we ﬁnd a
target data path at the kth exploration, then we have already
failed to ﬁnd a target data path for k − 1 times. Thus, the
probability of ﬁnding a target data path at the kth exploration
for the ﬁrst time is:
γ
P(X = k) =
ρ − (k− 1)
ρ − γ − j
ρ − j
where 1 ≤ k ≤ ρ − γ + 1. Here, we deﬁne ∏y
j=x a = 1, when
x > y. The average number of explored data paths can be
calculated as:
k−2∏
j=0
,
(5)
E(X) =
=
ρ−γ+1∑
ρ−γ+1∑
k=1
k=1
k· P(X = k)
kγ
ρ − (k− 1)
k−2∏
j=0
ρ − γ − j
ρ − j
.
(6)
If we consider the case where there is only one compromised
host in the network and each of the data paths between two
hosts is different, then ρ = n− 1. n is the number of hosts in
USENIX Association
28th USENIX Security Symposium    25
 1
 0.8
 1
 0.8
F
D
C
C
 0.6
 0.4
 0.2
 0
 0
SP
MST
RS
 20
 80
Identified Target Paths (%)
 60
 40
F
D
C
C
 0.6
 0.4
 0.2
 0
 0
 100
SP
MST
RS
 20
 80
Affected Switches (%)
 40
 60
 100
(a)
(b)
Figure 5: Complementary Cumulative Distribution Function
(CCDF). (a) shows the CCDF of the average percentage of
identiﬁed target paths with 261 real topologies; (b) shows
the CCDF of the average percentage of affected switches by
attacking a target path with 261 real topologies.
 500
 400
)
X
(
E
 300
 200
n = 100 theoretical
n = 100 experimental
n = 500 theoretical
n = 500 experimental
n = 1000 theoretical
n = 1000 experimental
 100
 0
 0
 20
 40
(cid:1)
 60
 80
 100
Figure 6: Comparison of theoretical values and experimental
values of E(X) with different n and γ.
The results demonstrate that the conditions in Theorem 1 can
be easily met. An attacker can use our reconnaissance to ﬁnd
some target data paths to launch the CrossPath attack.
Average Percentage of Affected Switches. As attacking
different target paths will affect the average percentage of
switches in a network topology, we randomly attack a target
path in the 1,000 experiments for a network topology and
calculate the average percentage of affected switches. Fig-
ure 5b shows that more than 20% of the switches can be af-
fected by attacking a target path for 90%, 99% and 99% of
the 261 network topologies with SP, MST and RS connec-
tions, respectively. For some network topologies, attacking a
target path can even affect half of the whole switches. Thus,
it is possible for an attacker to attack multiple target paths
to cause damages for the whole switches and incur network-
wide DoS.
Average Number of Explored Data Paths. Equation (7)
denotes the average number of explored data paths E(X) for
ﬁnding a target path totally depends on the number of data
paths γ containing shared links and the number of hosts in a
network n. We draw the theoretical values of E(X) in Fig-
ure 6. We can see that E(x) declines quickly when γ in-
creases from 0 to 20. When there are 1,000 hosts and 40 data
paths (2% of the 1,000 total data paths) containing shared
links, E(X) is less than 50. Moreover, E(x) tends to be the
same with the growth of γ. The results demonstrate that our
reconnaissance can fast ﬁnd a target data path and has a good
scalability with a different number of hosts in the network.
The experimental values of E(x) are also plotted in Figure 6.
Each experimental value with different n and γ is obtained by
conducting 1,000 experiments to get the average number of
explored data paths. The results show that the experimental
values are consistent with the theoretical values.
4.2 Experiments in a Real SDN Testbed
Experiment Setup. Our testbed contains a popular SDN
controller Floodlight [12], ﬁve hardware SDN switches
(AS4610-54T [10]), and three physical hosts. The controller
is deployed on a server with a quad-core Intel Xeon CPU
E5504 and 32GB RAM. Each physical host has a quad-core
Intel i3 CPU and 4GB RAM. All hosts run Ubuntu 14.04
server LTS. The network topologies, control paths and data
paths are illustrated in Figure 1. An attacker ﬁrst compro-
mises host h1 to conduct the algorithm of adversarial path re-
connaissance (see Appendix A for details) for the data paths
of the other hosts. The burst rate of short-term testing pack-
ets is 1 Gbps, which is the maximal rate the host can send.
The attacker then generates LDoS data trafﬁc to disrupt
the control channels of switches s1 and s2 by attacking the
data path between h1 and h3. Basically, there are three pa-
rameters for the LDoS ﬂows: burst length, inter-burst period,
and peak magnitude. The previous study [42] has conducted
comprehensive experiments on how different parameters de-
termine the attack impacts of LDoS ﬂows and how to bet-
ter choose these parameters. As our paper mainly focus on
studying the impacts for the SDN functionalities after the
control channel is attacked by the data trafﬁc, we apply ﬁxed
parameters in our attack. We choose the burst length as 100
ms, inter-burst period as 200 ms, and peak magnitude as the
maximal speed 1 Gbps that the host can send for our all ex-
periments in the paper. These parameters show how an at-
tacker can affect the SDN functionalities to the maximum
extent by generating data trafﬁc to disrupt the control chan-
nel. Moreover, compared to simply ﬂooding the target paths,
which needs to send trafﬁc with 1 Gbps all the time, the rate
of our LDoS ﬂow is only approximate 0.33 Gbps on average.
Accuracy of Reconnaissances. We ﬁrst collect the delay
variations in delivering control messages. The delay vari-
ation is deﬁned as the absolute difference between the de-
lays of control messages measured with and without testing
stream. We collect 5,000 records both for two data paths
in the network. We wait up to 20 seconds for each timing
packet to get a response in order to obtain possible maximum
delays. Figure 7 shows the distribution of the probability of
the delay variation. The results demonstrate that the target
data path has a signiﬁcantly different probability distribution
compared with the non-target data path. In particular, most
delay variations with the non-target data path are less than 2
ms, while most delay variations are much larger for the tar-
get data path. These results illustrate that the discrimination
26    28th USENIX Security Symposium
USENIX Association
 0.8
 0.6
the target path
the non-target path
 1
 0.8
 1
 0.8
y
t
i
l
i
b
a
b
o
r
P
 0.4
 0.2
y
c
a
r
u
c
c
A
 0.6
 0.4
 0.2
 0
 1
 10
 100
Delay (ms)
 1000
 10000
 0
 0.01
 0.03
 0.05
(cid:1)
 0.07
(cid:2) = 10
(cid:2) = 20
(cid:2) = 30
(cid:2) = 40
(cid:2) = 50
 0.09
y
c
a
r
u
c
c
A
 0.6
 0.4
 0.2
 0
 1
 0.8
 0.6
 0.4
o
i
t
a
R
n
o
i
t
a
d
a
r
g