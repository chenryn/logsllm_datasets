title:As-awareness in Tor path selection
author:Matthew Edman and
Paul F. Syverson
AS-awareness in Tor Path Selection
Matthew Edman
Department of Computer Science
Rensselaer Polytechnic Institute
Troy, NY 12180
PI:EMAIL
Paul Syverson
Center for High Assurance Computer Systems
U.S. Naval Research Laboratory
Washington, DC 20375
PI:EMAIL
ABSTRACT
Tor is an anonymous communications network with thou-
sands of router nodes worldwide. An intuition reﬂected
in much of the literature on anonymous communications is
that, as an anonymity network grows, it becomes more se-
cure against a given observer because the observer will see
less of the network. In particular, as the Tor network grows
from volunteers operating relays all over the world, it be-
comes less and less likely for a single autonomous system
(AS) to be able to observe both ends of an anonymous con-
nection. Yet, as the network continues to grow signiﬁcantly,
no analysis has been done to determine if this intuition is
correct. Further, modiﬁcations to Tor’s path selection al-
gorithm to help clients avoid an AS-level observer have not
been proposed and analyzed.
Five years ago a previous study examined the AS-level
threat against client and destination addresses chosen a pri-
ori to be likely or interesting to examine. Using an AS-
level path inference algorithm with improved accuracy, more
extensive Internet routing data, and, most importantly, a
model of typical Tor client AS-level sources and destinations
based on data gathered from the live network, we demon-
strate that the threat of a single AS observing both ends
of an anonymous Tor connection is greater than previously
thought. We look at the growth of the Tor network over
the past ﬁve years and show that its explosive growth has
had only a small impact on the network’s robustness against
an AS-level attacker. Finally, we propose and evaluate the
eﬀectiveness of some simple, AS-aware path selection algo-
rithms that avoid the computational overhead imposed by
full AS-level path inference algorithms. Our results indicate
that a novel heuristic we propose is more eﬀective against an
AS-level observer than other commonly proposed heuristics
for improving location diversity in path selection.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; C.2.4 [Computer-Communication
Networks]: Distributed Systems—Distributed Applications
Copyright 2009 Association for Computing Machinery. ACM acknowl-
edges that this contribution was authored or co-authored by an employee,
contractor or afﬁliate of the U.S. Government. As such, the Government re-
tains a nonexclusive, royalty-free right to publish or reproduce this article,
or to allow others to do so, for Government purposes only.
CCS’09, November 9–13, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-352-5/09/11 ...$10.00.
General Terms
Algorithms, Design, Measurement, Security
Keywords
Anonymity, autonomous systems, privacy, Tor
1.
INTRODUCTION
Much of the existing research into anonymous communi-
cation seeks to design and build applications running on top
of the existing Internet protocols and infrastructure that al-
low people to communicate with others without necessarily
revealing potentially identifying network information, such
as IP addresses. Designs for anonymous communication sys-
tems can often be classiﬁed into two general categories: high-
latency systems and low-latency systems.
High-latency anonymity systems are able to provide bet-
ter hiding within an anonymity set, but are only practically
usable for non-interactive applications that can tolerate de-
lays of several hours or more, such as email. Because of their
high-latency, they typically provide stronger anonymity but
relative to a smaller set of users. Low-latency anonymity
systems, on the other hand, are able to provide better per-
formance and are intended for real-time applications like web
browsing. The increased performance, however, often comes
at the cost of decreased resilience against certain types of
attacks. In particular, low-latency anonymity systems are
more easily susceptible to traﬃc analysis by an adversary
who can observe both the connection from a client to the
anonymity network and the connection from the network to
the client’s intended destination [19, 8].
As of August 2009, the most popular publicly deployed
low-latency anonymity system is an onion routing network
called Tor [3]. First gaining public notice in 2004, the Tor
network has grown to include over 2,000 volunteer-operated
network relays and has an estimated 250,000 or more users.
Tor aims to provide anonymity to clients by sending multiply-
encrypted data packets through a series of relays distributed
across the Internet. Each relay removes a layer of encryp-
tion and forwards the result on to either another relay or to
the client’s intended destination, such as a website.
It is important to keep in mind that the network con-
nections between clients, relays and destinations in the Tor
network are rarely (if ever) direct connections. Rather, the
Internet is composed of thousands of independent networks
called autonomous systems (ASes). As data is relayed from
the client to a Tor node, it traverses a series of ASes. Previ-
ous work [5, 15] has shown that if the same AS appears on
the path from the client to the anonymity network and from
the anonymity network to the client’s destination, then an
observer located at that AS can perform a statistical corre-
lation attack to identify the client and her destination.
Intuition from the anonymity literature suggests that as
the Tor network grows and volunteers operate relays all over
the world, it becomes less likely for a single AS to be able
to observe both ends of a connection. Intuition from com-
munications networking is more muddy. On the one hand,
there have been great increases in both the size and the ge-
ographic diversity of the Tor relay network. On the other
hand, this might not be reﬂected in the number of network
providers involved, and corporate and service consolidation
could even imply a contraction of the distribution of ASes
involved in carrying Tor traﬃc. In any case, no analysis has
been done to determine which intuition is correct. Further,
no work has been done to suggest and verify modiﬁcations to
Tor’s path selection algorithm that would help clients avoid
an AS-level observer.
In this work, we make the following contributions:
• Based on a more accurate algorithm for inferring AS-
level routing paths and a larger set of real-world BGP
(Border Gateway Protocol) routing data, we revisit
and validate an earlier analysis of the potential threat
of AS-level adversaries against the public Tor network.
• We provide a more realistic global model of typical Tor
client ASes and destination ASes based on traﬃc data
collected from public Tor relays.
• Using recent Tor directory information and a simula-
tion of Tor’s current path selection algorithm, we ex-
amine how scalability and performance optimizations
made to the Tor software’s path selection algorithm
have in turn aﬀected its ability to resist AS level at-
tackers.
• We propose and evaluate the eﬀectiveness of some sim-
ple, AS-aware path selection algorithms that avoid the
computational overhead imposed by full AS-level path
inference algorithms.
The rest of this paper is organized as follows. In Section
2, we provide an overview of the Tor design and review the
limitations of previous work done to understand its AS-level
diversity. Next, in Section 3, we describe the algorithms and
data we employed to infer the AS-level paths between Tor
clients and their destinations.
We then present in Section 4 the results of a period of
data collection that helped to better understand the AS-
level distribution of clients and destinations on the public
Tor network. Section 5 considers how the growth and evolu-
tion of the Tor network over the past ﬁve years has aﬀected
its susceptibly to an AS-level observer.
In Section 6, we
propose and evaluate alternative “AS-aware” path selection
algorithms that attempt to reduce the probability of a sin-
gle AS observing both ends of a Tor connection. Finally, in
Section 7 we discuss the conclusions we made based on the
results of our experiments.
2. BACKGROUND
We ﬁrst review the design and current implementation of
Tor, as well as previous eﬀorts to study the location diversity
of the Tor network.
2.1 Tor
Tor [3] is a low-latency anonymity network loosely based
on the original onion routing design [7] but with several mod-
iﬁcations and improvements over the original design in terms
of security, eﬃciency, and deployability.
The Tor network includes a small set of trusted authori-
tative directory servers responsible for aggregating and dis-
tributing signed information about known routers in the net-
work. The signed directory information is also mirrored by
other servers in the network. Tor clients periodically fetch
the directory information from directory mirrors in order to
learn information about other servers in the network, such
as their IP addresses, public keys, etc.
To build an anonymous connection through the Tor net-
work, a client ﬁrst selects an ordered sequence of (usually)
three servers. The client then negotiates session keys with
each server starting with the ﬁrst node in the sequence,
called the entry node. The client can then connect to the
middle node via the encrypted tunnel established with the
entry node, and then again with the last node in the circuit.
The last node is called the exit node since it is responsi-
ble for establishing the connection from the Tor network to
the client’s intended destination. The resulting encrypted
tunnel through the Tor network is called a circuit.
The method the Tor software uses to select the nodes in a
client’s circuit has undergone many changes since the design
was ﬁrst published. For example, originally clients selected
all nodes for their circuit uniformly at random. Later, a
primitive form of load-balancing was added wherein relays
are selected proportional to a self-reported bandwidth es-
timate based on how much traﬃc each server has relayed
during a measurement interval. We discuss in greater detail
this and other changes made to Tor’s path selection algo-
rithm in Section 5.
2.2 Location Diversity
Feamster and Dingledine [5] conducted an empirical anal-
ysis of the threat AS-level adversaries could pose to the Tor
and Mixmaster [14] networks. The authors deﬁned a loca-
tion independence metric intended to reﬂect the probability
that connections to and from the anonymity network will
traverse the same AS. They found that a single AS could
observe both ends of a connection 10% to 30% of the time.
We note that improved AS path inference algorithms (dis-
cussed further in Section 3) have been put forth since the
authors’ analysis was published. We will later consider how
the improved inference algorithms aﬀect the previously pub-
lished results.
It is not at all clear, however, that their results are appli-
cable to the current Tor network. First, it was conducted
at a time when the Tor network consisted of only 33 relays.
Since then, the network has seen considerable growth and
the number of relays has increased by almost two orders of
magnitude. Second, the authors based their analysis on their
personal impressions of websites they thought Tor users were
likely to be concerned about visiting anonymously (e.g., in-
dymedia.org), and only considered clients located at a hand-
ful of consumer ISPs within the United States. Third, the
authors’ simulation only considered Tor clients that chose
relays for their circuits uniformly at random. As mentioned
above, this is indeed no longer true, yet it has never been
investigated whether such changes have had a measurable
eﬀect on Tor’s susceptibility to an AS-level observer.
Murdoch and Zieli´nski [15] further considered the threat
of an adversary with access to an Internet Exchange (IX)
point. An IX is a shared physical location at which multiple
ASes are able to interconnect and exchange network traﬃc
with each other. An adversary located at an IX is thus, in
theory, able to monitor traﬃc passing through any of the
ASes co-located at the IX. The authors argued that some
IXes often sample the network traﬃc ﬂowing through them
for performance analysis purposes. They showed that it is
quite possible for a modestly equipped attacker at the IX
to perform a traﬃc analysis attack on the sampled network
data and correlate an anonymous sender with her destina-
tion, even under limited sampling intervals [15].
To estimate the impact of IX-level observers on the Tor
network, Murdoch and Zieli´nski collected traceroute re-
sults from volunteers operating Tor relays in the UK. The
traceroute destinations used were the same list of websites
and consumer ISPs used in [5]. The paths returned showed
that large IXes, like LINX in England, DE-CIX in Germany,
and AMS-IX in the Netherlands, occurred on 32% of the
paths collected.
Since Murdoch and Zieli´nski’s analysis used the same list
of suspected client origins and destination websites from [5],
it is not evident from either study that the results are ap-
plicable to the Tor network as a whole.
In order to bet-
ter understand the true nature of where typical Tor clients
and servers are geographically located, McCoy et al. [12]
collected traﬃc statistics from a relay they brieﬂy oper-
ated on the public Tor network. Their analysis only pro-
vided country-level information though. We, however, re-
quire both client and destination statistics at the AS level
to be able to accurately compute the likelihood of a single
AS-level observer monitoring both ends of a Tor connection.
3. AS-LEVEL PATH INFERENCE
Perhaps the most straightforward approach to detecting
an AS that exists on both ends of Tor connection would be
to use a traceroute-like tool to learn the network path from
the client to its chosen entry node and the path from the exit
node to the destination. There are several problems with
such an approach, though. First, since Tor is a volunteer
network, we do not have access to all of the relays and thus
are unable to run traceroute from each machine. There do
exist web interfaces that let anyone run traceroute queries
from special servers across the Internet. These are not suﬃ-
cient for our purposes because not all Tor relays are located
on an AS with a publicly available traceroute server. Sec-
ond, the forward and reverse paths between two hosts on
the Internet are often asymmetric. Thus, even if we could
run traceroute from every Tor relay to a particular desti-
nation, we would not be able to do the same in the reverse
direction.
Thus, to determine whether an AS exists on both ends
of an anonymous connection, we must attempt to predict
the path network traﬃc will take between clients and desti-
nations given an unavoidably incomplete knowledge of the
Internet’s topology. In the remainder of this section, we de-
scribe the AS-level path inference algorithm and correspond-
ing implementation used for the analysis in this paper. We
also compare Feamster and Dingledine’s [5] results to those
we obtained using an improved inference algorithm that has
been developed since their paper’s publication.
3.1 Path Inference Algorithms
If we could collect routing tables—sometimes referred to
as Routing Information Bases (RIBs)—from every AS on the
Internet, then determining AS-level paths without trace-
route would be relatively straightforward; however, this is
clearly infeasible for many reasons. Instead, we must make
some inferences about AS-level paths given routing informa-
tion from a subset of ASes. Inferring network paths between
two endpoints on the Internet given only partial routing in-
formation has been the focus of active research within the
networking community over the past decade [10, 9, 18].
Gao previously observed that AS paths typically satisfy a
valley-free property [6]. Consider customer-provider edges as
“uphill” path segments, provider-customer edges as “down-
hill” segments, and peer-to-peer or sibling-to-sibling edges as
“ﬂat” segments. (See next paragraph for meaning of ‘peer’
vs. ‘sibling’.) Thus, in a valley-free AS path, a provider-to-
customer edge is followed only by other provider-to-customer
or sibling-to-sibling edges. Similarly, a peer-to-peer edge is
followed only by provider-to-customer or sibling-to-sibling
edges. AS path inference algorithms can then use this heuris-
tic to reduce the number of possible AS paths between two
endpoints to only those that satisfy the valley-free property.
Unfortunately, the nature of contractual relationships be-
tween ASes are often kept as conﬁdential business informa-
tion. Thus, we are forced to also infer the relationships
between ASes. Gao proposed an algorithm that exploits the
valley-free heuristic to infer relationships between ASes [6].
Given one or more RIBs, the algorithm builds an AS-level
graph based on which ASes are adjacent to each other in
an advertised route. For each route in the routing table,
each pair of ASes before the AS with the highest degree
in the path is assigned a customer-to-provider relationship.
Each pair of ASes after the highest degree AS is assigned
a provider-to-customer relationship. Two ASes marked as
customers of each other are designated as having a peer-to-
peer relationship.
If more than some constant number of
routes infer that two ASes provide transit for each other,
then those two ASes are assigned a sibling-to-sibling rela-
tionship.
After inferring AS adjacencies and their relationship types
from known routing tables, we have a graph G = (V, E)
where V is the set of ASes and E is the set of AS relation-
ships between them. We can then use this graph topology to
infer AS paths. Feamster and Dingledine’s study of location
diversity in the Tor and Mixmaster networks employed Mao