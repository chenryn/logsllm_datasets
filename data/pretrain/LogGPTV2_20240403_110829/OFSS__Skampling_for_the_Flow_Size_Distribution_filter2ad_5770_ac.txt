ferent resource allocation (A value). Calculation details for
α∗
k can be found in [13].
4. PERFORMANCE COMPARISON
We compare the CRLB performance of OFSS against that
of FS, Sk, and enhanced versions of our skampling competi-
tors SGS and ESk. For SGS(β, ), we use the assisted form
as described above, and also test using β = 0.75 in addition
to the β = 1 value used in [8]. For ESk(L), we compare not
only against the L = 2 favoured in [9], but also larger values
adapted to α, and ignore the additional memory required to
maintain the ownership variables. In data estimation com-
parisons, we use ML estimators for all methods. Previously
a sub-optimal estimator was used to test SGS and ESk.
We compare on a basis of equal counter memory. The
methods Sk, FSS, OFSS, ESk are each given an array with A
counters, whereas the sampling methods FS, SGS are given
ﬂow tables with A entries. This means that if Nf > A,
only N(cid:48)
f = min(Nf , A) ﬂows will actually be delivered to the
methods (we ignore ﬂow expiry).
With A and Nf (or equivalently α = Nf /A) ﬁxed, meth-
ods Sk, ESk(2) and FS(pf =N(cid:48)
f /Nf = min(1, 1/α)) are deter-
mined, as are OFSS(k) given the target θk. For SGS, for
each of β = {0.75, 1} we set  to match the average number
of captured packets to that of FS. For ESk, at larger α val-
ues we select two values of L > 2 to bracket OFSS (at the
chosen k∗). Finally, we also compare against FS(1), that is
perfect ﬂow collection.
We compare over an operating range of 1  3, and becomes almost impossible to calculate for
α = 100. This is consistent with the poor behaviour of
packet sampling [11], whose structure SGS generalises, but
does not fundamentally change. For small α ESk(2) outper-
forms OFSS, however as α increases both Sk and ESk(2) also
have variances orders of magnitude beyond OFSS for all k,
and then become diﬃcult to calculate. At α = 100 the ﬁeld
therefore narrows to ESk(L) for well chosen L (cid:29) 2 versus
OFSS. For each of plots (c) and (d) L values are used so that
238(a) α = 1.1
(b) α = 2
(c) α = 10
(d) α = 100
Figure 1: CRLB Comparisons with uniform θ, W = 50. We plot SGS(β, ) when possible; ESk(2) and Sk for
α ≤ 2, else ESk(L) for values bracketing OFSS(p∗
f (1)), and FS(1/α). Here p∗
f ≈ 1/α. since α∗
1 ≈ 1.
(a) θ from TG(50, 1000)
(b) θ from TG(1000, 1000)
(c) θ from Abilene-III
(d) θ from Leipzig-II
Figure 2: CRLB Comparisons, α = 100. [Abilene, Leipzig] truncated at W = [1000, 200].
ESk brackets OFSS. In plot(d) we see that OFSS is within
a constant factor of, and the same order of magnitude as,
the benchmark FS(1/α). We see that to (just) defeat OFSS
requires ESk with L = 64. Assuming a generous 32 bits per
counter, this means that ≈ 19% extra memory is needed to
achieve this, more for larger α.
Comparing plot(d) with Figure 2(a) shows that similar
conclusions hold even after changing the distribution shape
quite radically from uniform to TG(50, 1000). For TG(W, R)
with R = {10, 1000}, W = {50, 1000}, similar results were
found. Changing from optimising for θ1 to other θk changes
variance values somewhat for OFSS(k) and the matching L
slightly for ESk(L), but not the conclusions.
Figure 2 provides a bridge from models to data with load
ﬁxed at α = 100. From plots(a) to (b) we increase W from
W = 50 to a more realistic W = 1000. The picture is
remarkably unchanged. From plot(b) to (c) we move from a
very rough traﬃc model, TG(1000, 1000), to data from the
Abilene-III dataset (see Table 1), truncated at W = 1000.
Again the same model-comparison conclusions hold. Finally,
plot(d) uses θ from the Leipzig-II dataset where θk = 0 for
many k, resulting in zeros manifesting as gaps in the FS and
FS(1) curves. Associated ‘spiky’ far-tail estimates for OFSS
and ESk are a sign of the need for truncation, here we used
W = 200.
4.2 Estimation Comparisons
We now compare ˆθ estimates, again for α = 100, for FS,
OFSS, SGS(1, ), and ESk(64) using maximum likelihood
estimation (see [13] for MLE derivations).
Trace
Leipzig-II
Abilene-III
Link
Capacity
50 Mbps
10 Gbps
Nf
2,277,052
23,806,285
Duration
(hh:mm:ss)
02:46:01
00:59:49
D
19.76
16.12
Table 1: Summary of the data traces used.
The datasets, summarised in Table 1, are old but adequate
for testing the methods. We extract TCP ﬂows according
to the standard 5-tuple (with no timeout).
Figure 3 plots ˆθ for Abilene-III, truncated at W = 2000,
which is approximately the largest value for which θk > 0
for all k. The grey curve, FS(1), corresponds to θ itself. The
estimate for SGS: ˆθ1 = 1, and ˆθk = 0 for all k > 1, is as
expected very poor, in fact degenerate. All other methods
appear to perform quite well, however it is very diﬃcult to
assess performance reliably from such plots, in particular
Figure 3: ˆθ for Abilene, W = 2000. Here α = 100,
and OFSS and ESk are optimised for θ1.
1510152025303540455010−2100102104106kCRLB(θk)  SGS(0.75,0.162)SGS(1,0.0777)ESk(2)SkOFSS(0.9089)FS(0.9091)FS(1)1510152025303540455010−2100102kCRLB(θk)  SGS(0.75,0.531)SGS(1,0.278)ESk(2)SkOFSS(0.4999)FS(0.5)FS(1)1510152025303540455010−210−1kCRLB(θk)  ESk(4)ESk(8)OFSS(0.09998)FS(0.1)FS(1)1510152025303540455010−310−210−1kCRLB(θk)  ESk(32)ESk(64)OFSS(0.009998)FS(0.01)FS(1)1510152025303540455010−410−2100kCRLB(θk)  ESk(32)ESk(64)OFSS(0.009529)FS(0.01)FS(1)1200400600800100010−610−410−2kCRLB(θk)  ESk(32)ESk(64)OFSS(0.009529)FS(0.01)FS(1)1200400600800100010−5100kCRLB(θk)  ESk(32)ESk(64)OFSS(0.009382)FS(0.01)FS(1)15010015020010−5100kCRLB(θk)  ESk(32)ESk(64)OFSS(0.008822)FS(0.01)FS(1)10010210−1010−5100kθk  SGS(1,5.21)ESk(64)OFSS(0.00938)FS(0.01)FS(1)10010110210−610−410−2100ZOOMkθk239f
k∗
1
1
p∗
L
Trace
0.009 64
Abilene
0.009 64
Leipzig
Abilene W 0.005 64
Leipzig W 0.013 64
FS
OFSS
5.6e-3
ESk
SGS
1.6e-3
7.8e-2 8.9e-1
9.4e-2 2.1e-2 2.5e-1 2.8e-1
1.6e-3
7.8e-2 8.9e-1
9.4e-2 2.1e-2 2.5e-1 2.5e-1
4.1e-3
Table 2: (cid:96)2 error: Abi. (W=2000), Leip. (W=200).
ror (cid:107) ˆθ − θ(cid:107)2 = ((cid:80)W
in the far tail because of the high variablility inherent in
single point estimates as the data ‘runs out’. Smoothing is
typically used to improve behaviour in such cases [3].
For a more objective assessment, we employ the (cid:96)2 er-
k=1(ˆθk − θk)2)1/2 to summarise perfor-
mance of each method over all k. Overall, for each trace
the results of Table 2 reﬂect the variance pecking order
FS 2. Note that these exceptions are
in part due to the limitations of (cid:96)2 as a summary metric.
Leipzig-II provides an instructive example of diﬃculties (for
all methods) which arise when the assumption of θk > 0 is
violated. Abilene-III avoids this by a suitable, and larger,
choice of W .
5. CONCLUSION
We have introduced OFSS, a hybrid ‘skampling’ method
for ﬂow size estimation.
Its Fisher information gathering
ability is of the same order as Flow Sampling (the optimum),
but its sketch data structure allows its use in resource con-
strained applications. It is clearly superior to the alternative
SGS and ESk in implementation terms, and in information
terms, except for ESk for large enough L. However ESk is
more complex and requires supplementary memory which
increases both with L and hence with load. OFSS(k∗) is
tuned to minimise the CRLB of θk∗ , but for any k∗, it per-
forms well for all θk.
Acknowledgment
Partially supported by Australian Research Council’s Dis-
covery Projects funding schemes # DP120102834 and #
DP110103505.
6. REFERENCES
[1] Cisco NetFlow.
http://www.cisco.com/en/US/products/ps6601/
products ios protocol group home.html.
[2] B. H. Bloom. Space-time trade-oﬀs in hash coding
with allowable errors. Communications of the ACM,
13(7):422–426, 1970.
[3] N. Duﬃeld, C. Lund, and M. Thorup. Estimating ﬂow
distributions from sampled ﬂow statistics. IEEE/ACM
Transactions on Networking, 13(5):933–946, 2005.
[4] C. Estan and G. Varghese. New directions in traﬃc
measurement and accounting. ACM Transactions on
Computer Systems, 21(3):270–313, August 2003.
[5] J. D. Gorman and A. O. Hero. Lower bounds for
parametric estimation with constraints. IEEE Trans.
Info. Th., 36(6):1285–1301, Nov. 1990.
[6] N. Hohn and D. Veitch. Inverting Sampled Traﬃc. In
Proc. 2003 ACM SIGCOMM Internet Measurement
Conference, pages 222–233, Miami, Oct. 2003.
[7] A. Kumar, M. Sung, J. Xu, and J. Wang. Data
streaming algorithms for eﬃcient and accurate
estimation of ﬂow size distribution. In Proceedings of
ACM SIGMETRICS / IFIP WG 7.3 Performance
2004, New York, June 2004.
[8] A. Kumar and J. Xu. Sketch Guided Sampling: Using
online estimates of ﬂow size for adaptive data
collection. In Proceedings of IEEE Infocom 2006,
Barcelona, Spain, April 2006.
[9] B. Ribeiro, D. Towsley, and T. Ye. A
Resource-minimalist Flow Size Histogram Estimator.
In Proc. ACM/SIGCOMM Internet Measurement
Conf., pages 285–290, Vouliagmeni, Greece, Oct. 20-22
2008.
[10] P. Tune and D. Veitch. Towards Optimal Sampling for
Flow Size Estimation. In Proc. ACM SIGCOMM
Internet Measurement Conf., pages 243–256,
Vouliagmeni, Greece, Oct. 20-22 2008.
[11] P. Tune and D. Veitch. Fisher Information in Flow
Size Distribution Estimation. IEEE Transactions on
Information Theory, 57(10):7011–7035, Oct. 2011.
[12] P. Tune and D. Veitch. Sampling vs Sketching: An
Information Theoretic Comparison. In IEEE Infocom
2011, pages 2105–2113, Shanghai, China, April 10-15
2011.
[13] P. Tune and D. Veitch. OFSS: Skampling for the Flow
Size Distribution: Technical Report. Technical report,
Dept. E&EE, The University of Melbourne, 2014.
copy available upon request.
[14] H. Zhao, A. Lall, M. Ogihara, O. Spatscheck, J. Wang,
and J. Xu. A data streaming algorithm for estimating
entropies of OD ﬂows. In Proc. 7th ACM SIGCOMM
Internet Measurement Conf., pages 279–290, New
York, NY, USA, 2007. ACM.
240