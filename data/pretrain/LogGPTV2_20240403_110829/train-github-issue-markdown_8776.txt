I have a following class
    export class AddAnimalComponent {
      public st: string;
      public dyn: string;
      public errMessage: string;
      @Output() added = new EventEmitter();
      constructor() {
      }
      add() {
        throw new Error('Not implemented');
      }
      clearErr() {
        this.errMessage = '';
      }
      normalize() {
        this.st = this.st.trim();
        if (this.dyn) {
          this.dyn = this.dyn.trim();
        }
      }
      clear() {
        this.clearErr();
        this.st = '';
        if (this.dyn) {
          this.dyn = '';
        }
      }
    }
And then a subclass:
    @Component({
      selector: 'add-expansion',
      templateUrl: './templates/add-expansion.html',
      directives: [MultiValueInput]
    })
    export class AddExpansionComponent extends AddAnimalComponent implements AfterViewInit {
      //@Input('expansion') expansionType: string;
      constructor(private _animalService: AnimalService,
                  @Inject('App.constants') private constants,
                  private toastr: ToastsManager
      ) {
        super();
      }
      ngAfterViewInit() {
        //if (!this.expansionType) {
        //  throw new Error('No expansion synonym type specified.');
        //}
      }
      add() {
        this.clearErr();
        this.normalize();
        if (this.st && this.st.length) {
          let abbr = new Animal(this.st);
          this._animalService.addAnimal(this.constants.activePartner, 'expansion-synonym', abbr)
            .subscribe((data) => {
                if (!data.success) {
                  this.toastr.error(data.error, 'Oops');
                  if (data.result) {
                    this.errMessage = 'Existed: ' + JSON.stringify(data.result[0]);
                  }
                } else {
                  abbr = new Animal(data.result.st, data.result.dyn, data.result._id, data.result.status, data.result.action, data.result.newdyn);
                  this.added.emit(abbr);
                  this.clear();
                }
              },
              (err) => { this.errMessage = `Oops, server error: ${err}`; }
            );
        }
      }
      onDuplicate(item) {
        this.toastr.warning(`You have entered '${item}' more than once.`);
      }
    }
When I have @input expansionType defined, the line  
`this.added.emit(abbr);` is not emitting any events. However, once I got all
expansionType commented, the emit works.