i )i∈[n]
be the result of the sorting. Then, due to the above relations, we
have
i , y∗
(10)
Since we are considering the case that yi ∈ {0, 1} for each i ∈ [n],
the sequence (y∗
i )i∈[n] has the property that there exists an index
k ∈ {0, 1, . . . , n} such that y∗
k +1 = · · · =
y∗
n = 1. There are n + 1 candidates for k. Hence, by computing the
1 = · · · = y∗
= 0 and y∗
∗
2 ≤ · · · ≤ y
∗
n .
∗
1 ≤ y
y
k
CVLtri(x) =
x =
distance between the target vector x and n + 1 vectors satisfying
Eq. (10), we can compute the closest vector y.
1, . . . , x′
(1) Sort {xi}i∈[n] in ascending order. Let (x′
The concrete procedure for computing the closest vector y =
i∈[n] yi bi (with yi ∈ {0, 1}) from a target vector
i∈[n] xi bi (with xi ∈ [0, 1)) is as follows:
n) be the
result of the sorting, and let σ : [n] → [n] be the permutation
representing this sorting. Namely, we have x′
= xσ(i) ⇔
xi = x′
i
(2) For each k ∈ {0, 1, . . . , n}, let yk = yk ,1b1 + · · · + yk ,nbn)
be the vector satisfying yk ,σ(j) = 0 for j ≤ k and yj,σ(j) = 1
for j > k. Note that {y0, y1, . . . , yk} is the set of candidates
of the closest vector CVLtri(x).
(3) Compute ∥x − yk ∥2 for each k ∈ {0, 1, . . . , n}, and find the
index k∗ ∈ {0, 1, . . . , n} of the smallest vector such that
yk∗ = mink ∥x − yk ∥2.
σ −1(i) for each i ∈ [n].
(4) Output ymin := yk∗ as the closest vector CVLtri(x) of x.
The computational cost of the above procedure in terms of n
can be estimated as follows: The sorting in Step 1 costs O(n log n).
The calculation of ∥x − yk ∥2 in Step 3 for each k ∈ {0, 1, . . . , n}
costs O(n). Since we calculate the distance n + 1 times, Step 3 costs
in total O(n
2). Hence, in total we can calculate CVLtri(x) with
computational cost O(n
The above algorithm can be extended to cover the general case
i∈[n] xi bi with xi ∈ R for each i ∈ [n]. Specifically,
before executing the above algorithm, we decompose each xi as
where zi ∈ Z and x′
xi = zi + x′
i ∈ [0, 1). We then apply the above
algorithm to {x′
i }i∈[n]. Let ymin be the result. Then, the closest
i∈[n] zi bi. It is easy to see the cor-
rectness of this algorithm, and that the asymptotic computational
cost in terms of n remains the same.
where x =
vector CVLtri(x) of x is ymin +
2).
i
E COMPOSING MULTIPLE FUZZY KEY
SETTINGS
Our formalization of a lattice-based fuzzy key setting and the linear
sketch scheme in Sec. 5 can easily be adapted to handle a “composed”
fuzzy key setting and associated linear sketch scheme.
Specifically, suppose we have m kinds of fuzzy data, and for
i ∈ [m], let Fi = (Xi ,Xi , ARi , Φi , ϵi) be a lattice-based fuzzy key
setting for the i-th fuzzy data, where the i-th fuzzy data space Xi =
Rni is associated with a lattice with the basis matrix Bi ∈ Rni×ni .
For simplicity, assume that the parameter p is common for all of
{Fi}i∈[m]. Then, we can consider the composed fuzzy key setting
F ∗ = (X∗,X∗, AR∗, Φ∗, ϵ∗) that is a natural combination of the
fuzzy key settings {Fi}i∈[m]: The fuzzy data space X∗ is the direct
i∈[m] Xi for which the lattice B∗ of the following form
is associated:
product
 ;
Bm
B∗ =
B1
B2
. . .
The fuzzy data distributionX∗ is the joint distribution(X1, . . . ,Xm),
and the same for the error distribution Φ∗; The acceptance region
function AR∗ has the property that for x∗ = (x1, . . . , xm), x′∗ =
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2062Figure 15: DET Curve for n = 400.
and performed EVA to estimate eachConFMRt by setting k∗ =
(cid:103)FMR when the dimension n ∈ { 200, 300, 400 } andConFMRt for t ∈
We also set M = 100 to define the M-variant of { ConFMRt }t ∈[M]
0.5% × kmax. Fig. 16 illustrates the validity of our estimation for
{ 25, 50, 100 }.
i∈[m] ϵi by the union bound.
m) ∈ X∗, we have x′∗ ∈ AR∗(x∗) if and only if x′
(x′
1, . . . , x′
i ∈
ARi(xi) for all i ∈ [m]; The error parameter ϵ∗ can be upper-
Furthermore, the algorithms of the linear sketch scheme for the
composed fuzzy key setting F ∗ can be computed by computing
those for the linear sketch scheme for each fuzzy key setting Fi
with which Bi is associated, and concatenate the results, except for
the proxy key a in Sketch and the difference ∆a in DiffRec. For a in
Sketch and ∆a in DiffRec, we need an application of the universal
hash function UH for the combined linear sketch scheme whose
i∈[ni ] ni and which takes the concatenated results
bounded by
domain is (Zp)
as input.
F FURTHER EXPERIMENTAL RESULTS
This section provides details on experimental results that were
omitted in the main body.
F.1 Preprocessing biometrics
We first clarify how fuzzy biometrics are handled in more detail.
That is, given, say a raw image of a fingerprint, what is the cor-
responding fuzzy biometric x that we have been abstractly using
throughout the paper. As with any real-world data, we preprocess
(e.g., conduct feature extraction on) raw biometric data obtained
via some measurement and represent them in a meaningful way.
This preprocessed data is in fact what we have been calling “fuzzy
biometrics x” throughout the paper. A pictorial explanation is pro-
vided in the bottom of Fig. 14. The method of preprocessing raw
biometric data depends on the concrete type of biometrics being
used. We provide a concrete example in Sec. 7.1, where we conduct
experiments using real-world finger-veins. In the following, when
we mention fuzzy biometrics, we always assume the preprocessed
version. Moreover, the distribution X of fuzzy biometrics is the
distribution induced by preprocessing a randomly sampled raw
biometrics.
Figure 14: The above (resp. bottom) depicts a simplified (resp. real-
istic) version of how we handle biometrics.
F.2 DET curve for dimension n = 400
Fig. 15 plots the detection error tradeoff (DET) curve for fuzzy
biometrics with dimension n = 400. Any region that lies above the
DET curve is realizable. It can be checked that for a small (resp.
large) size of d (hence the acceptance region AR), we achieve better
values forFNMR (resp.ConFMR) as expected.
estimation of(cid:103)FMR andConFMRt for t ∈ [M]. Recall that we set k∗ =
0.1% × kmax, where kmax = 3, 925, 584 to estimate(cid:103)FMR using EVA.
F.3 Validity of EVA result
We provide the omitted graphical evidence on the validity of our
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2063(a) sFMR(w) for n = 200
(b) sConFMR25(w) for n = 200
(c) sConFMR50 for n = 200
(d) sConFMR100 for n = 200
(e) sFMR(w) for n = 300
(f) sConFMR25(w) for n = 300
(g) sConFMR50 for n = 300
(h) sConFMR100 for n = 300
(i) sFMR(w) for n = 400
(j) sConFMR25(w) for n = 400
(k) sConFMR50 for n = 400
(l) sConFMR100 for n = 400
Figure 16: The blue line indicates the measured values of sFMR(w) and sConFMR50(w) w.r.t to our dataset S. The red line indicates our estimation
of the probability distribution of sFMR(w) and sConFMRt(w) for t ∈ { 25, 50, 100 } via EVA. The gray region is the region for which EVA provides
a reliable estimation. The square plots (w∗, k∗) and the triangle plots (1, X), where X is the estimation for(cid:103)FMR andConFMRt for t ∈ { 25, 50, 100 }.
Contents
Introduction
Our Contribution
Fuzzy Data and Fuzzy Signatures
Fuzzy Key Setting
Fuzzy Signatures
Linear Sketch
Fuzzy Signature from Discrete Log
Construction
Correctness and Security Proof
Abstract
1
1.1
2
2.1
2.2
3
4
4.1
4.2
5
5.1
5.2
5.3
5.4
6
Instantiating Linear Sketch over Lattices
Fuzzy Key Setting with a Lattice
Construction of Linear Sketch
Concrete Lattice for Efficient Linear Sketch
Security of the DL Assumption with Sketch
Experimental Method For Estimating Biometric
Entropy
6.1
Preparation
1
1
3
4
4
4
5
5
5
6
6
6
7
7
8
8
9
6.2
6.3
7
7.1
Estimating FNMR of Biometrics
Estimating ConFMR of Biometrics
Efficiency Analysis of Our Fuzzy Signature
Estimating Quality of Real-World Finger-Vein
Biometrics
Efficiency Analysis of Our Fuzzy Signature
7.2
References
A
A.1
A.2
B
B.1
B.2
C
D
E
F
F.1
F.2
F.3
Omitted Preliminary
Correctness and Security of Fuzzy Signature
Leftover Hash Lemma
Omitted Proof of Our Fuzzy Signature ΠDL
FS
Omitted Proof of Correctness: Thm. 4.1
Omitted Proof of Security: Thm. 4.3
Proof of Our Linear Sketch
Further Details on Triangular Lattices
Composing Multiple Fuzzy Key Settings
Further Experimental Results
Preprocessing biometrics
DET curve for dimension n = 400
Validity of EVA result
9
9
11
11
13
13
14
14
14
15
15
15
16
17
17
18
18
18
18
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2064Contents
19
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2065