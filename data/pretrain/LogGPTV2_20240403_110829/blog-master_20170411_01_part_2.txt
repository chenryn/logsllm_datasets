1\. /etc/sysctl.conf  
```  
vi /etc/sysctl.conf  
追加到文件末尾  
kernel.shmall = 4294967296  
kernel.shmmax=135497418752  
kernel.shmmni = 4096  
kernel.sem = 50100 64128000 50100 1280  
fs.file-max = 7672460  
fs.aio-max-nr = 1048576  
net.ipv4.ip_local_port_range = 9000 65000  
net.core.rmem_default = 262144  
net.core.rmem_max = 4194304  
net.core.wmem_default = 262144  
net.core.wmem_max = 4194304  
net.ipv4.tcp_max_syn_backlog = 4096  
net.core.netdev_max_backlog = 10000  
net.ipv4.netfilter.ip_conntrack_max = 655360  
net.ipv4.tcp_timestamps = 0  
net.ipv4.tcp_tw_recycle=1  
net.ipv4.tcp_timestamps=1  
net.ipv4.tcp_keepalive_time = 72   
net.ipv4.tcp_keepalive_probes = 9   
net.ipv4.tcp_keepalive_intvl = 7  
vm.zone_reclaim_mode=0  
vm.dirty_background_bytes = 40960000  
vm.dirty_ratio = 80  
vm.dirty_expire_centisecs = 6000  
vm.dirty_writeback_centisecs = 50  
vm.swappiness=0  
vm.overcommit_memory = 0  
vm.overcommit_ratio = 90  
```  
生效  
```  
sysctl -p  
```  
2\. /etc/security/limits.conf   
```  
vi /etc/security/limits.conf   
* soft    nofile  131072  
* hard    nofile  131072  
* soft    nproc   131072  
* hard    nproc   131072  
* soft    core    unlimited  
* hard    core    unlimited  
* soft    memlock 500000000  
* hard    memlock 500000000  
```  
3\. /etc/security/limits.d/*  
```  
rm -f /etc/security/limits.d/*  
```  
4\. 关闭selinux  
```  
# vi /etc/sysconfig/selinux   
SELINUX=disabled  
SELINUXTYPE=targeted  
```  
5\. 配置OS防火墙  
（建议按业务场景设置，我这里先清掉）       
```  
iptables -F  
```  
配置范例     
```  
# 私有网段  
-A INPUT -s 192.168.0.0/16 -j ACCEPT  
-A INPUT -s 10.0.0.0/8 -j ACCEPT  
-A INPUT -s 172.16.0.0/16 -j ACCEPT  
```  
重启linux。  
```  
reboot  
```  
### 9 配置yum仓库(可选)  
在linux虚拟机中，找一个有足够空间的分区，下载ISO镜像    
```  
wget http://mirrors.163.com/centos/6.9/isos/x86_64/CentOS-6.9-x86_64-bin-DVD1.iso  
wget http://mirrors.163.com/centos/6.9/isos/x86_64/CentOS-6.9-x86_64-bin-DVD2.iso  
```  
新建ISO挂载点目录    
```  
mkdir /mnt/cdrom1  
mkdir /mnt/cdrom2  
```  
挂载ISO    
```  
mount -o loop,defaults,ro /u01/CentOS-6.8-x86_64-bin-DVD1.iso /mnt/cdrom1  
mount -o loop,defaults,ro /u01/CentOS-6.8-x86_64-bin-DVD2.iso /mnt/cdrom2  
```  
备份并删除原有的YUM配置文件    
```  
mkdir /tmp/yum.bak  
cd /etc/yum.repos.d/  
mv * /tmp/yum.bak/  
```  
新增YUM配置文件    
```  
cd /etc/yum.repos.d/  
vi local.repo  
[local-yum]  
name=Local Repository  
baseurl=file:///mnt/cdrom1  
enabled=1  
gpgcheck=0  
```  
刷新YUM缓存    
```  
yum clean all  
```  
测试    
```  
yum list  
yum install createrepo   -- 方便后面测试  
```  
修改YUM配置，修改路径为上层目录    
```  
cd /etc/yum.repos.d/  
vi local.repo  
[local-yum]  
name=Local Repository  
baseurl=file:///mnt/  
enabled=1  
gpgcheck=0  
```  
创建YUM索引    
```  
cd /mnt/  
createrepo .  
```  
刷新YUM缓存，测试      
```  
yum clean all  
yum list  
yum install vim  
```  
### 10 创建普通用户  
```  
useradd digoal  
```  
### 11 规划数据库存储目录  
假设/home分区有足够的空间, /home/digoal/pgdata规划为数据文件目录  
```  
Filesystem      Size  Used Avail Use% Mounted on  
/dev/sda3        14G  5.7G  7.2G  45% /  
```  
### 12 下载PostgreSQL源码  
https://www.postgresql.org/ftp/source/  
```  
su - digoal  
wget https://ftp.postgresql.org/pub/source/v9.6.2/postgresql-9.6.2.tar.bz2  
```  
### 13 安装PostgreSQL  
安装依赖包  
```  
root用户下，使用yum 安装依赖包  
yum -y install coreutils glib2 lrzsz mpstat dstat sysstat e4fsprogs xfsprogs ntp readline-devel zlib-devel openssl-devel pam-devel libxml2-devel libxslt-devel python-devel tcl-devel gcc make smartmontools flex bison perl-devel perl-Ext  
Utils* openldap-devel jadetex  openjade bzip2  
```  
编译安装PostgreSQL  
```  
digoal用户下，编译安装PostgreSQL  
tar -jxvf postgresql-9.6.2.tar.bz2  
cd postgresql-9.6.2  
./configure --prefix=/home/digoal/pgsql9.6  
make world -j 8  
make install-world  
```  
### 14 配置linux用户环境变量  
digoal用户下，配置环境变量  
```  
su - digoal  
vi ~/.bash_profile  
追加  
export PS1="$USER@`/bin/hostname -s`-> "  
export PGPORT=1921  
export PGDATA=/home/digoal/pgdata  
export LANG=en_US.utf8  
export PGHOME=/home/digoal/pgsql9.6  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH  
export PATH=$PGHOME/bin:$PATH:.  
export DATE=`date +"%Y%m%d%H%M"`  
export MANPATH=$PGHOME/share/man:$MANPATH  
export PGHOST=$PGDATA  
export PGUSER=postgres  
export PGDATABASE=postgres  
alias rm='rm -i'  
alias ll='ls -lh'  
unalias vi  
```  
重新登录digoal用户，配置生效  
```  
exit  
su - digoal  
```  
### 15 初始化数据库集群  
```  
initdb -D $PGDATA -E UTF8 --locale=C -U postgres  
```  
### 16 配置数据库  
配置文件在$PGDATA目录中  
1\. 配置postgresql.conf  
```  
追加  
listen_addresses = '0.0.0.0'  
port = 1921  
max_connections = 200  
unix_socket_directories = '.'  
tcp_keepalives_idle = 60  
tcp_keepalives_interval = 10  
tcp_keepalives_count = 10  
shared_buffers = 512MB  
dynamic_shared_memory_type = posix  
vacuum_cost_delay = 0  
bgwriter_delay = 10ms  
bgwriter_lru_maxpages = 1000  
bgwriter_lru_multiplier = 10.0  
bgwriter_flush_after = 0   
old_snapshot_threshold = -1  
backend_flush_after = 0   
wal_level = replica  
synchronous_commit = off  
full_page_writes = on  
wal_buffers = 16MB  
wal_writer_delay = 10ms  
wal_writer_flush_after = 0   
checkpoint_timeout = 30min   
max_wal_size = 2GB  
min_wal_size = 128MB  
checkpoint_completion_target = 0.05    
checkpoint_flush_after = 0    
random_page_cost = 1.3   
log_destination = 'csvlog'  
logging_collector = on  
log_truncate_on_rotation = on  
log_checkpoints = on  
log_connections = on  
log_disconnections = on  
log_error_verbosity = verbose  
autovacuum = on  
log_autovacuum_min_duration = 0  
autovacuum_naptime = 20s  
autovacuum_vacuum_scale_factor = 0.05  
autovacuum_freeze_max_age = 1500000000  
autovacuum_multixact_freeze_max_age = 1600000000  
autovacuum_vacuum_cost_delay = 0  
vacuum_freeze_table_age = 1400000000  
vacuum_multixact_freeze_table_age = 1500000000  
datestyle = 'iso, mdy'  
timezone = 'PRC'  
lc_messages = 'C'  
lc_monetary = 'C'  
lc_numeric = 'C'  
lc_time = 'C'  
default_text_search_config = 'pg_catalog.english'  
shared_preload_libraries='pg_stat_statements'  
```  
2\. 配置pg_hba.conf  
```  
追加  
host all all 0.0.0.0/0 md5  
```  
### 17 启动数据库集群  
```  
su - digoal  
pg_ctl start  
```  
### 18 连接数据库  
```  
su - digoal  
psql  
psql (9.6.2)  
Type "help" for help.  
postgres=#   
```  
### 19 安装pgadmin(可选)  
在windows 机器上，安装pgadmin  
https://www.pgadmin.org/download/windows4.php  
### 20 配置pgadmin(可选)  
参考章节1  
### 21 使用pgadmin连接数据库(可选)  
参考章节1  
## 三、云数据库RDS for PostgreSQL  
### 1 购买云数据库  
https://www.aliyun.com/product/rds/postgresql  
### 2 设置并记住RDS for PostgreSQL数据库根用户名和密码  
在RDS 控制台操作。  
### 3 配置网络  
在RDS 控制台操作，配置连接数据库的URL和端口。  
### 4 配置白名单  
在RDS 控制台操作，配置来源IP的白名单，如果来源IP为动态IP，白名单设置为0.0.0.0。  
(数据库开放公网连接有风险，请谨慎设置，本文仅为测试环境。)  
### 5 本地安装pgadmin(可选)  
在windows 机器上，安装pgadmin  
https://www.pgadmin.org/download/windows4.php  
### 6 本地配置pgadmin(可选)  
参考章节1  
### 7 使用pgadmin连接RDS PostgreSQL数据库(可选)  
参考章节1  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")