### Issue Description
I am attempting to implement a 3D fully convolutional network on my GPU, but I encounter a crash during the process.

### Environment Information
- **Operating System**: Ubuntu 14.04 LTS
- **GPU**: GeForce Titan X
- **CUDA Version**: 8.0
- **cuDNN Version**: 5
- **TensorFlow Version**: 0.11.0rc2
- **Docker Image**: gcr.io/tensorflow/tensorflow:latest-gpu

#### CUDA and cuDNN Installation Verification
To verify the installation, you can check the output of the following command:
```sh
ls -l /path/to/cuda/lib/libcud*
```
The output is attached in `cud.filelist.txt`.

### Example Code
The following code reproduces the issue:

```python
import numpy as np
import tensorflow as tf

graph = tf.Graph()
with graph.as_default():
    tf_dataset = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))
    tf_label = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))
    layer1_weights = tf.Variable(tf.truncated_normal((2, 2, 2, 1, 1), stddev=0.1))
    layer1_bias = tf.Variable(tf.zeros(1))
    conv = tf.nn.conv3d(tf_dataset, layer1_weights, (1, 1, 1, 1, 1), padding='SAME')
    logits = tf.nn.relu(conv + layer1_bias)
    loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits, tf_label))
    optimizer = tf.train.GradientDescentOptimizer(0.05).minimize(loss)

with tf.Session(graph=graph) as session:
    tf.initialize_all_variables().run()
    batchData = np.random.rand(1, 512, 512, 512, 1).astype(np.float32)
    batchLabels = (np.random.rand(1, 512, 512, 512, 1) > 0.5).astype(np.float32)
    feed_dict = {tf_dataset: batchData, tf_label: batchLabels}
    _ = session.run((optimizer,), feed_dict=feed_dict)
```

### Error Output
The error message is as follows:
```
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties:
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:01:00.0
Total memory: 11.92GiB
Free memory: 11.68GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0
I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0: Y
I tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)
F tensorflow/stream_executor/cuda/cuda_dnn.cc:2440] failed to enqueue convolution on stream: CUDNN_STATUS_NOT_SUPPORTED
```

### Additional Notes
- The error indicates that the specific convolution operation is not supported by cuDNN.
- Ensure that your CUDA and cuDNN versions are compatible with the TensorFlow version you are using.
- Consider updating to a more recent version of TensorFlow, CUDA, and cuDNN if possible, as they may have better support for 3D convolutions.