### Action:
```sh
deno run --allow-read --allow-net xxx.ts
```

### Result:
**File**: `file:///....../xxx.ts`

**Error**: TS2322 [ERROR]: Type `'import("https://deno.land/std@0.75.0/http/server.ts").ServerRequest | null'` is not assignable to type `'import("https://deno.land/std/http/server.ts").ServerRequest | null'`.

- **Detail**: The type `'import("https://deno.land/std@0.75.0/http/server.ts").ServerRequest'` is not assignable to the type `'import("https://deno.land/std/http/server.ts").ServerRequest'`.
- **Reason**: The types have separate declarations of a private property `_contentLength`.

**Code Location**:
```typescript
request = await readRequest(conn, reader);
       ~~~~~~~
```
**Source File**: `https://deno.land/std/http/server.ts:147:9`

---

### Explanation:
The error occurs because the `ServerRequest` type from the `std@0.75.0` version and the `ServerRequest` type from the latest version of the `std` library are not compatible. This incompatibility is due to differences in the private property `_contentLength`.

### Suggested Solution:
To resolve this issue, ensure that you are using the same version of the `std` library throughout your project. You can do this by updating the import statements to use the same version. For example:

```typescript
import { ServerRequest } from "https://deno.land/std@0.75.0/http/server.ts";
// or
import { ServerRequest } from "https://deno.land/std/http/server.ts";
```

Choose one version and consistently use it in your project to avoid type conflicts.