title:Detecting prefix hijackings in the internet with argus
author:Xingang Shi and
Yang Xiang and
Zhiliang Wang and
Xia Yin and
Jianping Wu
Detecting Preﬁx Hijackings in the Internet with Argus
Xingang Shi†§
Yang Xiang‡§
PI:EMAIL
PI:EMAIL
Zhiliang Wang†§
PI:EMAIL
Xia Yin‡§
PI:EMAIL
Jianping Wu†‡§
PI:EMAIL
†Institute for Network Sciences and Cyberspace, Tsinghua University
‡Department of Computer Science & Technology, Tsinghua University
§Tsinghua National Laboratory for Information Science and Technology (TNList)
ABSTRACT
Border Gateway Protocol (BGP) plays a critical role in the
Internet inter-domain routing reliability. Invalid routes gen-
erated by mis-conﬁgurations or forged by malicious attacks
may hijack the traﬃc and devastate the Internet routing sys-
tem, but it is unlikely that a secure BGP can be deployed in
the near future to completely prevent them. Although many
hijacking detection systems have been developed, they more
or less have weaknesses such as long detection delay, high
false alarm rate and deployment diﬃculty, and no systemat-
ic detection results have been studied. This paper proposes
Argus, an agile system that can accurately detect preﬁx hi-
jackings and deduce the underlying cause of route anomalies
in a very fast way. Argus is based on correlating the con-
trol and data plane information closely and pervasively, and
has been continuously monitoring the Internet for more than
one year. During this period, around 40K routing anoma-
lies were detected, from which 220 stable preﬁx hijackings
were identiﬁed. Our analysis on these events shows that, hi-
jackings that have only been theoretically studied before do
exist in the Internet. Although the frequency of new hijack-
ings is nearly stable, more speciﬁc preﬁxes are hijacked more
frequently. Around 20% of the hijackings last less than ten
minutes, and some can pollute 90% of the Internet in less
than two minutes. These characteristics make Argus espe-
cially useful in practice. We further analyze some represen-
tative cases in detail to help increase the understanding of
preﬁx hijackings in the Internet.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]:
[Gener-
al Security and Protection]; C.2.3 [Network Operations]:
[Network Monitoring]
Keywords
BGP, Security, Preﬁx Hijacking, Hijacking Detection
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’12, November 14–16, 2012, Boston, Massachusetts, USA.
Copyright 2012 ACM 978-1-4503-1705-4/12/11 ...$15.00.
1.
INTRODUCTION
The Internet is composed of tens of thousands of Au-
tonomous Systems (ASes) which operate individual parts of
the infrastructure. As Border Gateway Protocol (BGP) [27]
controls the packet forwarding path between ASes, it plays
a critical role in the eﬃciency and reliability of the Inter-
net. However, because of the lack of security considerations,
several BGP security problems have not been well resolved
yet [25]. For example, the route information received from
neighbors can not be validated, so invalid routes may cause
packets being forwarded along wrong paths. This is known
as the preﬁx hijacking problem.
Preﬁx hijacking is often generated by accidental miscon-
ﬁgurations, and may cause serious routing problems and e-
conomic losses [24]. For instance, in 2008, Pakistan Telecom
hijacked YouTube for two hours [29], while in 2010, one AS
of China Telecom hijacked more than 50,000 preﬁxes (15%
of the Internet) of 170 diﬀerent countries [28]. Malicious
users also use preﬁx hijacking to intercept or drop certain
traﬃc, or to launch spam or DDoS attacks.
To improve the security of BGP, several methods have
been proposed, which broadly fall into three categories: cryp-
tographic based prevention, anomaly mitigation, and anoma-
ly detection. Cryptographic approaches [17, 21] usually use
the Public Key Infrastructure (PKI) to ensure the authen-
tication of routing announcements and prevent hijacking.
They often consume signiﬁcant router resources due to their
computation and storage complexity, and are unlikely to be
widely deployed very soon [10]. Anomaly mitigation ap-
proaches [30, 18] propose to ignore or demote suspicious
routes once they are detected. These approaches are hard
to deploy, and their misjudgments may disturb the routing
system. At last, anomaly detection approaches [36, 16, 34,
12] aim to discover anomalous information or behavior in
BGP announcements and raise alarm. As a viable secure
scheme in the current stage, they oﬀer valuable information
for the understanding and diagnosis of the routing system,
and help to push ISPs to deploy cryptographic solutions.
This paper focuses on the third category, anomaly de-
tection. Although many workable detection systems have
been developed, more or less, they have weaknesses such as
long detection delay, high false alarm rate and great deploy-
ment diﬃculty. Our solution, Argus, exploits a key observa-
tion about IP preﬁx hijacking: polluted routers (i.e., routers
whose traﬃc is hijacked) usually can not communicate with
the hosts in the victim preﬁx, while normal routers can.
This observation makes hijacking distinguishable from other
15anomalous route events, and let Argus achieve four superi-
or capabilities over existing solutions: (1) Low false positive
rate: Argus closely correlates the control-plane anomaly and
the data-plane reachability information of a large number of
vantage points, so that preﬁx hijacking can be accurately
distinguished from other BGP events.
(2) Low false neg-
ative rate: Argus monitors a much wider range of routing
anomalies, including origin AS and AS-path anomalies, and
considers the sub-preﬁx problem, so the chance of missing a
hijacking event is much lower. (3) Realtime detection: Ar-
gus usually detects a hijacking within a few seconds, while
existing methods often need orders of magnitudes longer.
(4) Agile: Argus is very easy to deploy, and does not need
to upgrade any existing network infrastructure or device.
Based on our earlier prototype [32] of Argus, 1 this paper
makes four new contributions as follows:
• System improvement and service. We carefully eval-
uate the performance of Argus, and continuously im-
prove it from several aspects. In particular, we tune
the system parameters based on our monitoring prac-
tice, and add a scheme to collect and choose live IP
addresses, resulting in better detection accuracy. We
contribute it to the community by providing several
public online services, and by raising alerts in realtime
via diﬀerent channels. We also discuss the limitations
of Argus to facilitate further studies in this ﬁeld.
• Hijacking monitoring and analysis. Since being de-
ployed one year ago, Argus has already identiﬁed 220
stable preﬁx hijackings (i.e., hijackings that last longer
than 10 seconds) from 40K anomalous BGP events.
We systematically analyze these events, and get many
interesting results. In particular, hijackings that have
only been theoretically studied before do exist in the
Internet. Although the frequency of new hijackings is
nearly stable, more speciﬁc preﬁxes are hijacked more
frequently. Around 20% of the hijackings last less than
ten minutes, and some can pollute 90% of the Internet
in less than two minutes. These characteristics make
Argus especially useful in practice, and to the best of
our knowledge, we are the ﬁrst to present these statis-
tics and trend of preﬁx hijackings in the Internet.
• Hijacking conﬁrmation and diagnosis. Starting from
March 2012, we directly contact the corresponding net-
work operators if a stable preﬁx hijacking is detected.
We provide detailed information collected by Argus to
help their diagnosis work. More than 30% of those hi-
jackings have been conﬁrmed, and we did not received
any objection to our judgments.
• Cause analysis of anomalous route events. We extend
Argus to not only detect preﬁx hijackings, but also
deduce the possible cause of anomalous route events
and classify them into diﬀerent categories. We further
analyze several representative cases in detail, in order
to help increase the understanding of hijackings in the
Internet.
1In particular, most of Section 4.1 and Section 4.2, and part
of Section 4.4 are replications of those in [32], with moderate
revisions.
This paper is organized as follows. Section 2 introduces
the necessary background of preﬁx hijacking and some relat-
ed work. Section 3 illustrates our key observation for hijack-
ing detection, and Section 4 describes the design details of
Argus. Section 5 presents our Internet monitoring practice
in the past year, while Section 6 further studies some repre-
sentative hijacking cases and other anomalous route events.
The pros and cons of our system are discussed in Section 7,
and ﬁnally, Section 8 concludes.
2. BACKGROUND AND RELATED WORK
2.1 Preﬁx Hijacking
Each AS in the Internet manages a number of networks,
which can be expressed as IP preﬁxes. BGP propagates
routes (AS-paths) between neighboring ASes to determine
how these networks can be reached, i.e., through which AS-
path. An AS-path p = han, · · · , a0i is a sequence of ASes,
where the last one, a0, is called the origin AS of p. When
the network connectivities change, BGP UPDATEs will be
generated, and new AS-paths will be announced throughout
the Internet.
Figure 1: An example of BGP preﬁx hijacking.
As shown in Figure 1, AS1 announces a route for its preﬁx
f with an AS-path h1i, and AS2 and AS3 will get a route to
f (i.e., h1i and h2, 1i respectively). However, AS4 can also
announce a route for f with a forged but shorter AS-path
h4i. As AS3 considers the shorter path to be better 2 than
the valid path it has previously received (i.e., h2, 1i), it will
forward the traﬃc destined to f to AS4. In this way, AS4
eﬀectively hijacks the traﬃc by forging a route. We call AS3
polluted by the route announced by AS4, and indicate that
by a gray circle in the ﬁgure.
A manipulator hijacks the traﬃc destined to a victim pre-
ﬁx either accidentally or intentionally. Based on how the
hijacked traﬃc is ﬁnally dealt with, hijackings can be clas-
siﬁed into the following two categories:
• Blackholing: the traﬃc is dropped, although the ma-
nipulator can eavesdrop on it at ﬁrst.
• Imposture or Interception: the traﬃc is handled either
by mimicking the victim’s action, or by forwarding to
the victim.
This paper only focuses on detecting blackholing due to
the following reasons. First, mis-conﬁgurations will typical-
ly cause blackholing. Second, Although a malicious attacker
may perform any of these actions, it is very diﬃcult for
him to mimic all behaviors of the victim, or to successfully
forward the traﬃc to the victim, if not impossible. Third,
detecting interception is very hard [9] since any AS can be
viewed as a man-in-the-middle. Last, an end-to-end mech-
anism can be much more eﬀective in protecting traﬃc from
either imposture or interception.
2This is a simpliﬁed example, as the length of an AS-path
is only one factor in BGP’s route decision process.
16Table 1: Pros and Cons of Hijacking Detection Methods
Methods
Detection
Attacker
delay
Information
Control-plane [8, 22, 12, 4] Realtime
Minutes
Data-plane [36, 34]
Minutes
Combination [16]
Correlation (Argus)
Realtime
Yes
No
Yes
Yes
Accuracy
Low
Medium
High
High
Sub-preﬁx
hijacking
Yes
No
Yes
Yes
Scalability Deployment
Good
Poor
Good
Good
Easy
Easy
Hard
Easy
2.2 Related Work
Existing hijacking detection proposals can be classiﬁed in-
to three categories based on the type of information they use,
as compared in Table 1.
The control-plane approaches [8, 22, 12, 4] passively moni-
tor the BGP routing information to collect anomalous events.
They are easy to deploy, react in realtime, and can deduce
information like who the attacker is or when the attack s-
tarts. However, they are fairly inaccurate and usually raise
many unnecessary alarms, since they can not tell normal
route events from hijackings very well [35].
The data-plane approaches [34, 36] continuously probe the
Internet to detect whether any data path changes. The prob-
ing often involves a large number of networks, and the paths
are collected by tools such as traceroute, hence these meth-
ods suﬀer from poor scalability and large latency. Due to a
lack of control-plane information, they can not detect sub-
preﬁx hijacking, and can provide little diagnosis such as who
the attacker is.
Control and data plane information can be combined to
complement each other. In [16], data-plane probing is launched
only after an anomalous UPDATE is received, so the scala-
bility is much better than a pure data-plane method. How-
ever, this system relies on some complicated probing meth-
ods like traceroute, nmap and IP/TCP timestamp, and also
bears large latencies up to several minutes. More impor-
tantly, since customized software have to be installed on its
vantage points, this solution is hard to deploy. Typically,
a limited number of Planetlab nodes are used, which suﬀer
from many side eﬀects. In particular, the Planetlab nodes
are unaware of BGP, so the beneﬁts of combining control
and data plane are limited. For example, the method can
not distinguish preﬁx hijacking from BGP anycast, since
both will result in diﬀerent probing results. The nodes are
mostly located in stub academic networks, so the data paths
that can be probed are not diversiﬁed enough, and the ca-
pability of detecting hijackings is reduced.
We think the deep-rooted reason of their ineﬃciency is a
lack of close and pervasive correlation between the control
and the data plane. Argus makes a step forward, through
correlating the control-plane route and data-plane reacha-
bility on a number of distributedly located diagnosis nodes
in realtime.
There are also many measurement studies on BGP related
problems, for example, analyzing route changes and their
root causes [11, 14], measuring how the Internet end-to-end
performance is impacted by BGP policy, timer or updates
[31, 13], quantifying path exploration and slow convergence
[26], and studying global black-holes in the Internet [20].
We monitor and identify anomalous route events and preﬁx
hijackings, and systematically study the statistics and trend
of these events that occurred over the past year, to help
better understand the characteristics of Internet hijackings.
Figure 2: Diﬀerent forwarding paths from normal
ASes and polluted ASes during a hijacking.
3. KEY OBSERVATION
Preﬁx hijacking can be caused by changing either the ori-
gin AS, or some AS-path segments in a route announcement.
Typically, only a portion of the ASes in the Internet can be
polluted by a hijacking, due to the complexity and diversi-
ty of the Internet. As shown in Fig. 2, the attacker AS3
announces itself as the origin AS of the preﬁxes owned by
the victim AS1,3 and successfully pollutes AS4, AS6, AS7,
AS9 and AS10. 4 These ASes will change their routes and
forward the traﬃc which is originally destined to AS1 along
the dashed line, while the other unpolluted ASes will for-
ward such traﬃc along the solid line as usual. Unless the
attacker forwards the hijacked traﬃc to AS1, a host in a
polluted AS will not be able to communicate with a host in
the victim, AS1, since the traﬃc goes to a black-hole.
Generally speaking, when the preﬁx hijacker acts as a
black-hole, it is likely that a data-plane probe sent from
an unpolluted AS to the victim preﬁx can successfully ar-
rive at the destination and get a reply, while a probe from
a polluted AS will most probably get no reply. This simple
observation is the key basis of Argus, our preﬁx hijacking
detection system. Next, we analyze this data-plane reacha-
bility problem in more detail.
As shown in Fig. 3, after an anomalous AS-path aﬀects
a portion of ASes in the Internet, the reachability to the
aﬀected preﬁx reﬂects diﬀerent scenarios: 5
1. When multi-origin (e.g., due to AS multi-homing, BG-
P anycast or static route) or traﬃc engineering is de-
ployed, a new origin AS or new AS-path segments are
introduced, and traﬃc may reach the destination pre-
ﬁx via diﬀerent paths. In this case, both the normal
ASes and the aﬀected ASes can reach the destination
preﬁx. (Fig. 3(a))
3Other cases, such as announcing false AS-path segments,
will be discussed in Section 4.
4We assume AS6 prefers AS3 to AS1.
5By reachability, we mean one host can communicate with
the other one in both directions, i.e., probe and reply.
17(a) multi-origin, 
traffic engineering
(b) route
failure
(c) route 
migration
(d)
hijacking
Figure 3: Data-plane reachabilities in diﬀerent route
events.
2. When node or link failure happens, there may not exist
a valid route to the destination preﬁx, then no AS can
reach it. Firewalls or inactive hosts may also lead to
this result. (Fig. 3(b))
3. When route migrates (e.g., due to network merge or
preﬁx acquisition, the ownership of a preﬁx changes, or
new AS-path segments are used, either temporarily or
permanently), ASes that have learned the new route
are able to reach the destination preﬁx, while ASes
have not learned the new route are not. (Fig. 3(c))
4. Under a hijacking as explained above, normal ASes
can reach the destination preﬁx while polluted ASes
can not. (Fig. 3(d))
The relation between the routes (control-plane) and the
reachabilities (data-plane) in diﬀerent ASes can be regarded
as a ﬁngerprint of a route event, and by this ﬁngerprint,
we can ﬁgure out whether a route change is actually caused
by a hijacking.
In Argus, we use show ip bgp to get the
BGP routes, and use ping to test the reachability. These
two commands are very simple, and are commonly enabled
in a vast number of public route-servers and looking-glasses.
These diagnosis nodes lie in diﬀerent ASes nearly all over the
Internet, and using them can greatly enhance our detection
capabilities.
However, the real situation in the Internet is more com-
plicated than the four scenarios above. Since there exists a
convergence process after a route event happens, diﬀerent
ASes often experience route change at diﬀerent time, and
the control-plane does not always coincide with the data-
plane. For example, as shown in Fig. 4, AS6 has already
recovered from the pollution but its route UPDATE has not
yet reached AS9. At this moment, probe from AS9 can get
a response, even though AS9 is using a polluted AS-path.
Figure 4: A polluted AS can reach the victim preﬁx
during route convergence.
On the other hand, a normal AS not aﬀected by a route
change may also lose connectivity to certain destinations
due to reasons not related to BGP [20]. Therefore, directly
matching the control-plane status and data-plane probing
results at each diagnosis node is error-prone. Instead, Argus
correlates the control-plane and data-plane information of
a large number of diagnosis nodes in a statistical manner.
The details of this correlation process will be described in
Section 4, and evaluated in Section 5.
4. PREFIX DETECTION SYSTEM - ARGUS
4.1 Overview
Argus is composed of three main modules: the Anomaly
Monitoring Module (AMM ), the Live-IP Retrieving Mod-
ule (LRM ), and the Hijacking Identiﬁcation Module (HIM ).