## PolarDB for PostgreSQL 三节点开源版 3主机集群部署实践  
### 作者  
digoal  
### 日期  
2021-08-16   
### 标签  
PostgreSQL , PolarDB    
----  
## 背景  
PolarDB for PostgreSQL 三节点开源版本在3台主机上的部署例子.   
[视频回放](https://www.bilibili.com/video/BV1Nv411N76M/)    
[加入POLARDB社区](https://h5.dingtalk.com/circle/healthCheckin.html?corpId=ding5740c29047b71a2b501b06cb5f4c1e33&a3696e77-c53f-=c01c2ad6-8cca-&cbdbhh=qwertyuiop&origin=1)    
https://github.com/alibaba/PolarDB-for-PostgreSQL  
## 环境  
3台ecs  
```  
8c 64g 2T ssd  
内网ip:  
172.17.164.62  
172.17.164.63  
172.17.164.64  
```  
## 系统环境部署  
请参考这篇文档:   
[《PolarDB 为什么要解决FPW的性能问题?》](../202108/20210809_01.md)    
部署好后继续.   
## 环境依赖  
1、操作系统  
```  
cat /etc/redhat-release   
CentOS Linux release 7.9.2009 (Core)  
```  
2、内核  
```  
uname -a  
Linux iZbp18r4s9zxcmpkulkmkyZ 3.10.0-1160.31.1.el7.x86_64 #1 SMP Thu Jun 10 13:32:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux  
```  
3、GCC版本  
```  
gcc -v  
Using built-in specs.  
COLLECT_GCC=gcc  
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper  
Target: x86_64-redhat-linux  
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux  
Thread model: posix  
gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)   
```  
## 部署步骤  
1、安装依赖包  
```  
yum install -y bison flex libzstd-devel libzstd zstd cmake openssl-devel protobuf-devel readline-devel libxml2-devel libxslt-devel zlib-devel bzip2-devel lz4-devel snappy-devel python-devel unzip  
```  
2、添加OS用户, 用于部署PolarDB数据库集群    
```  
useradd digoal  
```  
3、设置用户密码  
```  
passwd digoal  
```  
4、下载PolarDB for PostgreSQL源码  
```  
su - digoal  
wget https://github.com/alibaba/PolarDB-for-PostgreSQL/archive/refs/heads/distributed.zip
unzip distributed.zip  
```
5、配置PolarDB OS用户主机之间的ssh互认, 配置ssh互认后, 方便集群管理, 这也是Greenplum使用的方法.    
all node:  
产生ssh key  
```  
su - digoal  
ssh-keygen  
chmod 700 ~/.ssh
chmod 400 ~/.ssh/id_rsa*
```  
all node:  
配置互相认证  
```  
su - digoal  
ssh-copy-id -f PI:EMAIL  
ssh-copy-id -f PI:EMAIL  
ssh-copy-id -f PI:EMAIL  
输入目标主机digoal用户登陆密码, 完成互认证  
```  
all node:  
验证是否不需要密码, 返回日期表示已经完成互认  
```  
su - digoal  
ssh 'PI:EMAIL' date  
ssh 'PI:EMAIL' date  
ssh 'PI:EMAIL' date  
```  
6、配置环境变量  
all node:  
```  
su - digoal  
vi ~/.bashrc  
export POLARDBHOME="$HOME/polardb"  
export PATH="$POLARDBHOME/bin:$PATH"  
export LD_LIBRARY_PATH="$POLARDBHOME/lib:$LD_LIBRARY_PATH"  
export PGUSER=digoal  
export PGDATABASE=postgres  
export PGHOST=/tmp  
export PGPORT=10001  
```  
应用环境变量生效  
```  
su - digoal  
. ~/.bashrc  
```  
7、编译安装PolarDB for PostgreSQL二进制软件.  
all node:  
```  
su - digoal  
cd ~/PolarDB-for-PostgreSQL-distributed
```  
设置安装目录  
```  
export PG_INSTALL=$HOME/polardb  
```  
其他部署详情, 可以看一下build.sh脚本的内容.  
编译安装二进制软件:  
```  
sh build.sh debug   ## 开发环境 
或  
sh build.sh deploy  ## 生产环境
```  
8、配置PolarDB 3主机集群.    
创建配置文件存放目录  
all node:  
```  
su - digoal  
mkdir $POLARDBHOME/etc  
```  
创建存放PolarDB集群数据文件的目录  
```  
su - root  
mkdir -p /data01/polardb/data  
chown -R digoal:digoal /data01/polardb  
chmod 700 /data01/polardb  
```  
生成集群部署配置文件模板(这个只需要在master主机执行即可, ```172.17.164.62```)  
master node:  
```  
su - digoal  
touch $POLARDBHOME/etc/polardb_paxos.conf  
pgxc_ctl -v -c $POLARDBHOME/etc/polardb_paxos.conf prepare standalone  
```  
修改配置文件内容, 匹配我们的三主机环境  
```  
vi $POLARDBHOME/etc/polardb_paxos.conf  
#!/usr/bin/env bash  
#  
# polardb Configuration file for pgxc_ctl utility.   
#  
# Configuration file can be specified as -c option from pgxc_ctl command.   Default is  
# $PGXC_CTL_HOME/pgxc_ctl.org.  
#  
# This is bash script so you can make any addition for your convenience to configure  
# your polardb.  
#  
#========================================================================================  
#  
#  
# pgxcInstallDir variable is needed if you invoke "deploy" command from pgxc_ctl utility.  
# If don't you don't need this variable.  
# 修改  
pgxcInstallDir=$HOME/polardb  
#---- OVERALL -----------------------------------------------------------------------------  
#  
# 建议db superuser和os user使用同名  
pgxcOwner=digoal			# owner of the Postgres-XC databaseo cluster.  Here, we use this  
					    	# both as linus user and database user.  This must be  
					    	# the super user of each coordinator and datanode.  
pgxcUser=digoal		        # OS user of Postgres-XC owner  
tmpDir=/tmp					# temporary dir used in XC servers  
localTmpDir=$tmpDir			# temporary dir used here locally  
configBackup=n					# If you want config file backup, specify y to this value.  
configBackupHost=pgxc-linker	# host to backup config file  
configBackupDir=$HOME/pgxc		# Backup directory  
configBackupFile=pgxc_ctl.bak	# Backup file name --> Need to synchronize when original changed.  