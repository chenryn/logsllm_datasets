## Page 404
完成的signup.php
PHP&MySQL磁贴答案
MismatchSign-Up脚本使用了一个定制表单提示用户输入他们
这是Sign-Up
期望的用户名和口令。问题在于，这个脚本代码还不完整。
表单。
使用下面的磁贴完成脚本，使新用户可以注册并加入
A0O
Mismatch社区。
Mismatch - Sign Up
Regist
Infe
Pasword:
Lserna
Vty
dud>
(retype):
(,dudsxeadde,)aouoaxnbax
onads
require_once('connectvars.php');
// Connect to the database
$dbc = mysqli_connect (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
获取用户输入的所有数据，确保先完
if (isset($_POST['submit'])){
成清理。
// Grab the profile data from the POST
mysqli_real_escape_string($dbc, trim($_PoST['
username
(（[
Susername
mysqli_real_escape_string($dbc, trim($_PosT['
passwordl
password2
mysqli_real_escape_string($dbc, trim($_POST[*
检查表单域，确保表单
if (!empty($username) ss !empty($passwordl) ss !empty($password2) &6
域都不为空，而且两个口
$passwordl
$password2
今一致。
// Make sure someone isn't already registered using this usernam
Susername
究成查询，
壹看是否有与所输
Sdata =mysqli_query($dbc, $query);
入用户名匹配的数据行。
if (mysqli_num_rows ($data) == 0) {
//The username is unique, so insert the data into the database
$query = "INSERT INTO mismatch_user (username, password, join_date) VALUEs "
如果没有找到匹配，说明
,SHA('
'),NOW())";
该用户名是唯一的，所以
$username
可以执行NSERT壹询。
mysqli_query($dbc,$query);
可以使用这里任意一个口今，因为
如果能执行到这里，说明这两个口今必然相等。
// Confirm success with the user
‘edit your profile,′;
K
mysqli_close ($dbc);
向用户确认已经成功注
exit ();
1
册，并退出脚本。
368
第7章
---
## Page 405
构建个性化Web应用
else (
// An account already exists for this username, so display an error message
echo 'An account already exists for this username. Please use a different '
'address,';
Susernam
清空Susername变量，从而
显示一个错误消息。
清空相应的表单域。
1
else {
echo 'You must enter all of the sign-up data, including the desired password '
'twice,';
某个表单域或多个表单域为空，所以
显示一个错误消息。
mysqli_close ($dbc) ;
Please enter your username and desired password to sign up to Mismatch,
Registration Info
Username:
"/>
Password:
Password (retype):
there-areng
duddnubis
DumbQuestions
问。Sign-Up脚本的任务是允许用户输入一个唯一的用户名
本处理，没有必要在Sign-Up脚本中重复这个代码。实际
和口令，然后将其增加到用户数据库。当然，也可以使用
上，Sign-Up脚本会提供一个指向EditProfile页面的链接，
HTTP认证窗口作为用户名和口令的输入表单，不过，对
一般都认为用户注册后会来到这个页面。另外，由于用户尚
于注册新用户这样一个任务来说，认证功能显得有些大材
未登录，所以试围访问Edit Profile页面时会为他们显示Log-
小用。最好创建一个定制的表单完成注册，这样一来，你
In窗口，所以Sign-Up脚本会通过Edit Profile页面引导用户
还能得到一个好处，可以通过检查两次口令来避免数据输
进入Log-In窗口，而不是自动完成登录。
入错误。
你现在的位置
369
---
## Page 406
增加一个注册链接
为用户提供注册的机会
我们有了一个Sign-Up脚本，但是用户怎么访问到这个脚本呢？需要让用
户知道如何注册。一种选择是在Mismatch页面上放置一个“SignUp”（
注册）链接。这个主意不坏，不过理想情况下我们需要根据用户是否已
经登录能够来显示或取消这个链接。另一种可能的做法是直接在Log-In
脚本中显示一个“SignUp”（注册）链接。
例如，新用户点击主页上的“ViewProfile”或“EditProfile”链接时，
会由Log-In脚本提示他们输人用户名和口令。由于他们还没有用户名或
口令，很可能会点击Cancel（取消）直接退出登录。这就提供了一个机
会，我们可以修改log-In脚本显示的登录失败消息来提供signup·php的
链接，从而显示一个指问Sign-Up脚本的链接。
这个代码只是墨示一个警录错误消息，根本
以下是原先的登录失败代码：
没有提到如何注册Mismatch。
       >>
'this page.');
这个代码实际上出现在Log-In脚本中的两个不同位置：没有输入用户名
或口令时，以及用户名和口令输人不正确时。一种不错的想法是可以更
进一步，在这两个位置上都提供一个“注册”链接。以下是新代码：
这个代码更有帮助，因为它生
成了一个指向Sign-Up脚本的链
接，以便用户注册。
exit('MismatchSorry, you must enter a valid username and password to log in and *
这里并没有新内容，只是一个指向
sisnup.php脚本的正常HTML链接。
370
享集
---
## Page 407
构建个性化Web应用
运行测试
为Mismatch增加注册功能。
创建一个新的文本文件，名为signup·php，在其中输人Sign-Up脚本的代码（或者从
HeadFirstLabs网站（www.headfirstlabs.com/books/hfphp）下载这个脚本）。
然后修改login.php脚本为不能登录的用户增加Sign-Up脚本的链接。
将脚本上传到你的Web服务器，然后在一个Web浏览器中打开Sign-Up页面。作为一个新
用户进行注册，然后登录应用。接下来编辑你的情况简表，并查看情况简表确认注册和
登录都能正常工作。现在应用就有了原先所没有的个性化功能。
A00.
HTTP认证用于根据注册
信息完成Ruby的警录。
太酷了！我可以登录
Sign-wp和los-in将非个性化应用
Mismateh，然后编辑
转变成有关用户的社区。
和查看我的个人情况筒
表了。
V
D
Mianatch - Viev Profle
只有警录后才可
以访间Ruby的情
况筒表。
371
---
## Page 408
mismatch还需要允许用户注销
我和两个室友共用一台计算
机，我命望他们无法访问我的
Mismateh情况筒表，我需要能
够注锁！
社交网站必须允许用户注销，这样才能避免从一台共用的计算机访
问别人的个人数据。
充许用户注销听起来可能相当简单，不过这对HTTP认证提出了一个
相当严峻的问题：对于一个给定页面或一组页面只会完成一次HTTP
认证，只是在浏览器关闭时才会重置。换句话说，在浏览器关闭或用
户手工清除HTTP认证的会话之前，用户永远不会“注销”一个经过
HTTP认证的Web页面。较之于一些浏览器（如Safari），某些浏览器
中（例如Firefox）手工清除会话相对更容易一些。
000
Mismatch-Edit Profe
You are logged in as sidneyk.
一显整录，则一直保持
Mismatch -Edit Profle
To view this page, you need to log in te area
警录，直到关闭测览器。
"Mismatch" on www.mis-match.net
Personal Information
wll be seet in the clear
First name: Sony
Name:
sidneyk
Last name:
Gender:
[femae]
Keisow
Password:......
Birthdate:
1994-07-19
Cky:
Tempe
State:
AZ
（Canceitogtn
Pictre:oF）sp
注销特性元许Sidney.小心
地控制对其个人情况筒
表的访问。
尽管HTTP认证提供了一个简单方便的途径来支持Mismatch应用中的
用户登录，但是完全无法控制用户的注销。需要既能够记住用户，还
要在他们希望的时候允许其注销。
372
第7章
---
## Page 409
构建个性化Web应用
如果能记住用户而不围让他们永远登
录就好了，这难遥只能是个梦吗？我只是
一个无可救药的PHP浪漫主义者吗？
PDG
你现在的位置
373
---
## Page 410
引入cookie
有时只需要一个cookie
原先用HTTP认证解决的问题有两方面：一是要限制对某些页面的访H丁丁P认证将数据持
题比较困难，因为这要求应用能够跨多个页面（脚本）记住用户是
谁。Mismatch通过检查存储在S_SERVER超级全局变量中的用户名和是工作结束时不允许
个页面持久保存的超级全局变量中，我们就充分利用了这一点。
$_SERVER['PHP_AUTH_USER']
S_SERVER超级全局查
量会持久存储用户名
Name
sidneyk
>$_SERVER['PHP_AUTH_PW']
和口今。
Password.......
Remember this password in my keychain
Canceltogin
不过我们不能再使用HTTP认证，因为它不支持注销。所以我们需要
看看有没有其他途径支持跨多个页面的用户持久存储。一种可能的解
决方法就是利用cookie，cookie是浏览器存储在用户计算机上的小段
Cookie充许将小段
数据。cookie与PHP变量非常类似，只不过关闭浏览器或者关闭计算
数据持久地存储
机之后cookie还存在。更重要的是，cookie可以删除，这说明完成数
据的存储后，如果用户表示想要注销，完全可以清除cookie。
在客户端，远些
数据可以跨脚本存
Web服务器
存储cookie数据
在···而且可以根
据需要删除！
获取cookie数据
cookie数据由用户的Web浏览器存储在他们的计算机上。可以从PHP
代码访问cookie数据，而且cookie不仅能够跨多个页面（脚本）持久保
存，甚至可以跨多个浏览器会话持久存储。所以如果一个用户关闭其
浏览器，并不会自动从Mismatch注销。对于我们来说这并不成问题，
客户
web浏览器
因为我们可以在任何时候从脚本代码删除cookie，从而提供注销特性。
这样就能允许用户充分控制其何时注销。
374
第7章
---
## Page 411
构建个性化Web应用
cookie里有什么？
cookie在一个唯一的名之下存储了一小段数据，这非常类似于PHP中
的变量。但与变量不同，cookie可以有一个到期日期。达到这个到期
日期时，这个cookie就会被销毁。所以cookie并不是永恒的，它们只是
比PHP变量寿命更长。可以创建一个没有到期日期的cookie，在这种
情况下，它就类似于一个PHP变量，会在浏览器关闭时被销毁。
名
cookie的唯一名
user_id = 1
12/08/2009
值
存储在cookie中的值
到期日期
cookie到期的日期...
寿终正寝！
theregareno
cookie允许在某个名之下存储一个文本串，类似于一个PHP文本变量。
DumbQuestions
由于cookie的寿命比普通的脚本数据更长，这使得它们的能力更强，特
别是某些情况下一个包含多个页面的应用可能需要记住一些数据（如
不了的？存储在MySQL数据库中的数
登录信息），此时cookie就可以发挥威力。
据不也是持久的吗？
usernane = sidneyk
01/01/3000
user_id = 1
的。实际上，理论上讲数据库数据比
cookie要持久得多，因为这些数据不存
在到期日期，如果将数据存放在数据库
将cookie的到期日期设
如果根本不提供到
中，它会一直留在那里，直到你显式地
置为很久以后，使它存
期日期，全导致浏慧
将其删除。关于cookie和持久性真正重
储得更久。
器美闭时就将cookie
要的是它提供的方便性。尽管需要允许
删除。
用户访问其情况简表，但我们不必为此
永久存储当前用户的ID或用户名：而只
需要一个快捷的方法来了解他们是谁。
所以Mismatch可以通过设置两个cookie来模拟SSERVER超级全局变
我们真正需要的是一种临时持久性，这
量提供的持久存储，一个对应用户名，另一个对应口令。不过我们并不
看起来好像有点矛盾，不过这样来考虑
需要保留口令，存储用户ID可能更有帮助。
你就会明白：我们需要数据比页面的存
活时间长（持久），但不是永远。
你现在的位置
375
---
## Page 412
setcookie(）函数
使用
用PHP烘烤cookie
PHP通过一个名为setcookie（)的函数和一个名为$_COOKIE的超
级全局变量提供对cookie的访问。Setcookie（）函数用于设置一个
cookie的值以及一个可选的到期日期，$_COOKIE超级全局变量用于
获取一个cookie的值。
setcookie('username'，'sidneyk');
7
sidneyk
setcookie的第一个
存储在cookie中的值作为
参数是cookie的名。
第二个参数传入。
cookie的名用于在S_COOKE超级
全局变量中引用cookie值。
设置cookie的作用在于，cookie数据可以跨多个脚本持久存储，所以
利用PHP
我们可以记住用户名，而无需每次用户从应用中的一个页面转到另一
setcookie（函数可
个页面时都提示他们登录。但是不要忘记，我们还需要在一个cookie
以在cookie中存储
中存储用户的ID，因为它要作为数据库查询的主键。
数据。
cookie总是作为文本存健，所以
即使用户0是一个数字，也含把