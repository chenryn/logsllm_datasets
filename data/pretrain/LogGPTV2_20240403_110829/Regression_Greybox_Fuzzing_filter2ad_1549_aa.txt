title:Regression Greybox Fuzzing
author:Xiaogang Zhu and
Marcel B&quot;ohme
Regression Greybox Fuzzing
Xiaogang Zhu
PI:EMAIL
Swinburne University of Technology & CSIRO’s Data61
Australia
ABSTRACT
What you change is what you fuzz! In an empirical study of all
fuzzer-generated bug reports in OSSFuzz, we found that four in
every five bugs have been introduced by recent code changes. That
is, 77% of 23k bugs are regressions. For a newly added project, there is
usually an initial burst of new reports at 2-3 bugs per day. However,
after that initial burst, and after weeding out most of the existing
bugs, we still get a constant rate of 3-4 bug reports per week. The
constant rate can only be explained by an increasing regression
rate. Indeed, the probability that a reported bug is a regression (i.e.,
we could identify the bug-introducing commit) increases from 20%
for the first bug to 92% after a few hundred bug reports.
In this paper, we introduce regression greybox fuzzing (RGF)
a fuzzing approach that focuses on code that has changed more
recently or more often. However, for any active software project, it
is impractical to fuzz sufficiently each code commit individually.
Instead, we propose to fuzz all commits simultaneously, but code
present in more (recent) commits with higher priority. We observe
that most code is never changed and relatively old. So, we identify
means to strengthen the signal from executed code-of-interest. We
also extend the concept of power schedules to the bytes of a seed and
introduce Ant Colony Optimization to assign more energy to those
bytes which promise to generate more interesting inputs.
Our large-scale fuzzing experiment demonstrates the validity
of our main hypothesis and the efficiency of regression greybox
fuzzing. We conducted our experiments in a reproducible manner
within Fuzzbench, an extensible fuzzer evaluation platform. Our
experiments involved 3+ CPU-years worth of fuzzing campaigns
and 20 bugs in 15 open-source C programs available on OSSFuzz.
CCS CONCEPTS
· Security and privacy → Software security engineering.
KEYWORDS
greybox fuzzing, regression bugs, power schedule
ACM Reference Format:
Xiaogang Zhu and Marcel Böhme. 2021. Regression Greybox Fuzzing. In
Proceedings of the 2021 ACM SIGSAC Conference on Computer and Commu-
nications Security (CCS ’21), November 15ś19, 2021, Virtual Event, Republic of
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15ś19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11. . . $15.00
https://doi.org/10.1145/3460120.3484596
Marcel Böhme
PI:EMAIL
Monash University
Australia
●
●
●
●
●
●
●
●●●●
●●
●
●
●●
●●
●
●●
●●
●●
●●●●●
●
●
●
●●
●●
●
●●
●
●●
●
●
●●●
●●●●●●●
●
●●●
●●●
●
●●
●
●
●
●
●
●●
●
●●
●●●
●
●
●
●
●
●
●●
●
●●
●
●
●
●
●
●●●
●●●●
●●●
●●
●●●●●●●
●●
●
●
●
●
●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●
●●●●●
●●
●
●
●●●●
●●●●●
●●●
●●●
●
●●●
●●●
●
●●●●
●●●●
●
●●
●●●
●●●
●●
●●●●●●●
●●●
●●●●●
●●●●
●●●
●●
●●●●●●●●●●●●●●●●●●●●●
●●
●●●●●●●
●●●●●●●●●●●●
●●●●●●●
●
●●●●●●●●●●
●●
●
●●
●
●
●
●
●●
●●
●●
●●
●●
●●●●
●●
●
●
●
●
●
●●●●
●
●
●●
●●●
●●
●
●●●●●●
●●●●●●●●
●
●●●
●
●●●●●●●●●●●
●
●●●●●
●
●●●
●
●●●
●●●●
●●
●●●
●
●
●
●●●●
●●
●●●●●●●●●●●●●●●●●●●●●●●●●
●
●●●
●●●●●●●●●●●
●
●●●●
●
●
●
●●●
●
●●●●●
●
●●●
●
●
●●●
●
●●●
●
●
●●●
●●●
●●●●●
●●●●
●●●●●●●
●●●
●●
●●
●
●
●
●●●●●●
●
●●●●
●●●●
●●●●●
●●●●●●●●●●●
●●●●●●●●●●●●●
●
●●●●●●●●●●●
●●
●
●●●●●
●●●●●
●●●●
●
●●●●●
●●●●●
●●●●●●●●●●●●
●●●
●●
●
●●●
●●●●●●●●●
●●●●●●
●●●●
●●●
●
●●●●●●
●
●●●
●●●●●●●
●
●
●
●●●
●
●●
●●
●
●●
●●
●●●●
●●
●●●●●●●●●
●●
●●●●
●●●●●●●●●●●●●
●●●
●●●●●●
●
●●●●●●●●●●●●●●●●●●●●●●●●
●
●●●
●●●●●
●●●●●●●●●●
●●●●
●●
●
●●●
●●●●●
●●●●●●●●●●●●●●
●●●●●●●●
●●●●●●●●●●●
●●●●●●●●●●
●
●
●●
●●●●
●●
●●●
●●●
●●●
●●●
●●●●●●●●●●●●●●●●●
●●●●●●
●●●
●●
●●●●
●
●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●
●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●
●●●●●●●●
●●●●●●●●●●●●●●●●
●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●
●●●
●●
●●●
●●
●
●●
●
●
●
●●
●●●
●
●●
●●
●●
●●
●
●
●
●●●
●●
●●
●●
●
●
●
●
●
●
●
●●
●
●
●●
●
●
●
●●●●
●●●
●
●
●●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●●
●
●
●
●
●
●●
●●
●●●
●
●
●
●
●
●
●●
●
●
●
●
●●
●
●
●
●
●●●
●
●
●●●
●●●●●●
●
●●●
●
●
●●●●
●●●
●
●●
●
●
●
●
●●
●●
●
●●●●●●●
●●●●
●
●
●●
●●
●
●●●
●●●
●
●
●
●
●
●
●●●
●●●
●
●
●●
●●
●
●
●
●●
●●
●
●●●
●
●
●
●●
●
●
●
●
●
●
●
●●
●
●
●
●●●
●
●●●●●
●●
●
●
●●●●●
●●●
●●
●●
●
●●
●
●●
●
●
●
●●
●●
●
●●●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●●●
●
●
●
●
●
●●
●●
●
●
●●●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●●
●●
●
●
●
●●●●●●●●
●●●
●●●●●●●
●
●●
●●●●
●●
●
●
●●●●
●
●
●●●
●
●●
●●●●●●
●
●
●●●
●
●
●●
●
●