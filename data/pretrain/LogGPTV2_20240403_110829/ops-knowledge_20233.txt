Question: Consider the following Java code snippets from a web application using an ORM layer for database operations. Select the code examples that correctly implement prepared statements to mitigate ORM Injection risks:
"A": "List results = session.createQuery("from Orders as orders where orders.id = " + currentOrder.getId()).list();",
"B": "Query hqlQuery = session.createQuery("from Orders as orders where orders.id = ?");
List results = hqlQuery.setString(0, currentOrder.getId()).list();",
"C": "List results = session.createQuery("Select * from Books where author = '" + book.getAuthor() + "'").list();",
"D": "List results = session.createSQLQuery("Select * from Users where username = :username")
.setParameter("username", user.getUsername()).list();"
Answer: BD