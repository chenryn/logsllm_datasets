title:Assessing the Attack Threat due to IRC Channels
author:Robert Meyer and
Michel Cukier
Assessing the Attack Threat due to IRC Channels 
Robert Meyer* and Michel Cukier** 
*Department of Electrical 
and Computer Engineering 
University of Maryland, College Park 
PI:EMAIL  
Abstract 
1. 
This  practical  experience  report  presents the results 
of  an  investigation  into  the  threat  of  attacks  associated 
with  the  chat medium IRC. A combination of simulated 
users  (i.e.,  bots),  some  configured  with  scripts  that 
simulated  conversations,  and  regular  users  were  used. 
The  average  number  of  attacks  per  day  a  user  on  IRC 
can  expect,  the  effect  of  channel  activity,  gender  based 
on the name, and network type on the number of attacks 
were  determined.  The  social  structure  of  IRC  channels 
and  the  types  of  users  that  use  it  were  analyzed.  The 
results indicate that attacks through IRC channels come 
from  human  users  selecting 
than 
targets  rather 
automated scripts targeting every user in a channel. 
Introduction and Motivation 
Among the chat programs widely used today, the vast 
majority  (e.g.,  AIM  [1],  MSN  messenger  [12],  Yahoo 
[17],  ICQ  [9])  focus  on  two-person  conversations  and 
require distinct steps to be taken to allow a multi-person 
chat.  IRC  [10]  is  based  upon  the  opposite  philosophy, 
consisting primarily of chat rooms containing as many as 
several  thousand  people,  and  requiring  users  to  preface 
messages  with  /msg    to  initiate  a  private 
conversation.  This 
easier 
communication  between  large  groups  of  people,  but 
offers  the  opportunity  for  attackers  to  reach  large 
numbers  of  people  quickly.  The  types  of  attacks  and 
overall threat of attacks associated with IRC are not well 
documented yet. The experiment described in this paper 
was  designed  to  investigate  that  threat  and  determine 
what, if any, factors affected it. The average daily attack 
frequency  was  compared  among  a  combination  of  bots 
approach 
allows 
for 
**Center for Risk and Reliability 
Department of Mechanical Engineering 
University of Maryland, College Park 
PI:EMAIL 
(i.e.,  programs  that  simulate  users  in  a  channel)  and 
regular  users  to  determine  whether  channel  activity, 
gender of username, or the security rules of the network, 
specifically  whether  or  not  the  network  allowed  bots, 
increased the threat of attack. 
The paper is organized as follows. Section 2 provides 
background  information  on  the  IRC  protocol  and  the 
types  of  networks  and  channels  that  implement  it. 
Section 3 details the setup of the experiment. Section 4 
details the methods used to collect and analyze data and 
the results garnered. Section 5 concludes the paper. 
2. 
Background on IRC 
The  IRC  protocol  is  implemented  by  hundreds  of 
networks,  each  of  which  operates  independently.  Each 
network  consists  of  several  dozen  servers 
linked 
together. Some networks primarily focus on local issues, 
allowing people in that area to connect with each other. 
Others provide channels devoted to one specific subject, 
such as gaming or sports. The largest networks provide 
some channels for all of these topics, as well as channels 
with  no  particular  topic  intended  for  general  chat.  One 
main difference between the networks is whether or not 
they  provide  services  to  keep  registered  channels  from 
being taken over when no one is using them. EFNet [5] 
and  IRCNet  [11]  are  the  largest  networks  that  do  not 
provide channel services, requiring users to protect their 
own  channels.  DALNet  [3]  provides  “full  services” 
including  registration  of  channels  of  any  size  and 
nicknames,  while  other 
large  networks,  such  as 
UnderNet [15], QuakeNet [13], and GalaxyNet [8], fall 
somewhere  in  the  middle.  While  most  of  the  large 
networks provide channels for all subjects, QuakeNet is 
devoted to the discussion of online games. 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:19 UTC from IEEE Xplore.  Restrictions apply. 
Because of the fast connection speeds possible using 
the  XDCC  protocol  (Xabi  Direct  Client-to-Client)  [16], 
channels devoted to file sharing (i.e., around 80% of all 
channels),  especially  of  large  files  such  as  movies  and 
pornography, are the most heavily populated by far, with 
several  averaging  more  than  3,000  users  at  any  given 
time  [14]. A study of the effects of channel activity on 
attack  threat  would  be  rather  useless  in  these  types  of 
channels,  since  the  only  communication  is  the  constant 
spamming of the files available. The next most popular 
channel  types  are  channels  used  by  guilds  (i.e.,  around 
10% of all channels), organized groups of players of one 
or  more  online  games.  These  channels  are  restricted  to 
members  of  the  guild  and  password  protected,  and 
without access to the channel, users cannot be placed in 
it to run the experiment. The remaining channels, those 
allowing  any  connection  and  used  for  chat,  consist  of 
about  10%  [14]  of  the  channels  of  IRC,  but  were  the 
only ones that could provide meaningful results. 
IRC’s  security  status  is  made  more  ambiguous  by 
several  extra  features  not  directly  related  to  chatting. 
Through XDCC, IRC users can download files hosted by 
other  users  in  addition  to  being  able  to  send  files  from 
one person to another. This carries the risk of the file not 
being what the user intended to download, as well as the 
possibility  of  receiving  copyrighted  material  illegally. 
DCC  (Direct  Client  to  Client)  [4]  allows  users  to  have 
direct conversations with each other, without the traffic 
passing through the IRC server. It is also the only way to 
issue  commands  to  a  bot  while  it  is  running.  Bots  are 
simulated  users  that  are  frequently  used  to  act  as 
administrators  in  channels  and  also  as  placeholders, 
keeping  a  presence  in  the  channel  even  when  all  the 
human users disconnect to ensure that ownership of the 
channel does not change. Bots can, however, be used in a 
variety  of  attacks  against  IRC  networks  and  users, 
flooding  a  channel  with  repeated  connections  and 
disconnections  to  make  conversation  impossible  and  to 
increase  server  load.  IRC  also  uses  CTCP  (Client  to 
Client  Protocol)  [2],  a  protocol  that  allows  users  to  get 
information  about  others,  including  the  version  of  the 
client they are running. Note that a simple “version” sent 
against a bot will provide the name of the software used 
to create the bot and thus help differentiating simulated 
users (i.e., bots) from real users. 
Starting in 2000, nearly all of the large IRC networks 
have slowed to a halt at one point or another by massive 
Denial  of  Service  (DoS)  attacks.  EFNet  was  hit  hard 
enough in 2000 and again in 2001 to cause widespread 
rumor that the network was about to shut down. DALNet 
had similarly serious problems in 2003. The attacks were 
conducted  mostly  through  the  use  of  large  numbers  of 
bots flooding first channels, then the servers themselves. 
Once  order  was 
large  networks 
implemented  various  security  policies  to  prevent  future 
attacks.  Some  full  and  partial  service  networks  decided 
there was no legitimate need for bots, and automatically 
restored, 
the 
the 
closed  any  connection  by  a  bot  (UnderNet,  DALNet). 
Others limit the number of connections allowed per IP, 
usually to five (QuakeNet, GalaxyNet). Note that during 
the study, no evidence of DoS attacks was observed (i.e., 
no  connection  problem,  no  massive  number  of  users 
leaving the network simultaneously). 
3. 
Experimental Setup 
The channels chosen for the experiments described in 
this paper all met the criteria of being used primarily for 
chat,  not  requiring  passwords  for  entry  and  allowing 
bots.  They  were  #teens  (in  the  GalaxyNet  network), 
#guildwars  and  #wow  (both  in  QuakeNet),  #usa  and 
#allnightcafe (both in UnderNet), #chat and #poker (both 
in  EFNet).  The  experiments  include  real  and  simulated 
users. 
Several different groups have developed open source 
IRC  bots  for  the  purpose  of  channel  administration. 
Eggdrop  [6]  and  EnergyMech  [7]  are  the  two  most 
popular, and they were both given serious consideration 
because  of  the  large  support  groups  available  in  case 
help was needed with the bots. Eggdrop was chosen over 
EnergyMech  because  it  includes  several  dozen  tcl 
commands and bindings designed to make scripting for 
Eggdrop  bots  easier.  The  bots  used  in  this  experiment 
had  all  of 
for  channel 
administration disabled. 
features  designed 
For  the  experiments  described  in  this  paper,  three 
types of bots were developed: one silent bot, one slightly 
talkative bot, and one very talkative bot. Each type of bot 
interacts with another bot of the same type in pairs. Both 
types  of  talkative  bots  ran  a  simple  tcl  script  that 
simulated a simple conversation. Each bot listened for a 
specific private message, and if it received that message, 
it posted a public message to the channel and then sent a 
private message to its partner. This message triggered a 
public  message  and  a  private  message,  and 
the 
conversation continued. To implement this the msg bind 
was used, which upon reception of a private message ran 
a  procedure.  In  this  case  the  procedure  sent  the 
corresponding  public  message  and  the  private  message 
that continued the conversation. The very talkative bots 
sent one public message every two minutes for a period 
of  three  hours,  at  which  point  the  conversation  looped 
after a one-hour break. The conversation consisted of the 
bots telling each other about their activities the previous 
day,  which 
included  on-line  gaming  and  playing 
basketball.  The  slightly  talkative  bots  sent  messages 
every  two  minutes  in  short  bursts  that  lasted  about  10 
minutes,  with  30  minute  breaks  between  bursts.  The 
conversation involved exchanging greetings and making 
plans to meet up in real life, which is presumably what 
happened  during  the  breaks.  The  bots  had  names  using 
different letters of the alphabet to keep track of them. 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:19 UTC from IEEE Xplore.  Restrictions apply. 
4. 
Data Collection and Data Analysis 
For the purposes of the experiments conducted in this 
paper,  the  definition  of  an  attack  was  restricted  to 
malicious  behavior  that  could  occur  through  IRC.  This 
way, it would be clear that the attack was a result of IRC 
activity and directed towards a particular bot or user. The 
set of behaviors defined as attacks included attempts to 
send a file to the user, attempted DCC chats with a user, 
malicious private messages sent to a user, and links sent 
to a user. File send attempts and links were considered 
malicious because both were not solicited and could very 
easily  be  viruses,  trojans,  commands,  or  other  harmful 
programs. DCC chat attempts were considered malicious 