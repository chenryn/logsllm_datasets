successfully added.**]{.strong}
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在向配置添加新的转发区域后，Web UI 可能会显示一条有关 DNSSEC
验证失败的警告。
[![Screenshot displaying a popup window that reads \"DNSSEC validation
failed - record ad.example.com SOA failed DNSSEC validation on server
192.168.122.2. Please verify your DNSSEC configuration or disable DNSSEC
validation on all IPA
servers.\"](images/web_ui-forward-zone-dnssec-valid.png)]{.inlinemediaobject}
DNSSEC（域名系统安全扩展）使用数字签名来保护 DNS 数据，使 DNS
免受攻击。在IdM 服务器中默认启用该服务。出现警告的原因是远程 DNS
服务器没有使用 DNSSEC。红帽建议您在远程 DNS 服务器上启用 DNSSEC。
如果您无法在远程服务器上启用 DNSSEC 验证，您可以在 IdM 服务器中禁用
DNSSEC ：
::: orderedlist
1.  选择要编辑的合适的配置文件：
    ::: itemizedlist
    -   如果您的 IdM 服务器使用 RHEL 8.0 或 RHEL 8.1，请打开
        `/etc/named.conf`{.literal} 文件。
    -   如果您的 IdM 服务器使用 RHEL 8.2 或更高版本，请打开
        `/etc/named/ipa-options-ext.conf`{.literal} 文件。
    :::
2.  添加以下 DNSSEC 参数：
    ``` literallayout
    dnssec-enable no;
    dnssec-validation no;
    ```
3.  保存并关闭配置文件。
4.  重启 DNS 服务：
    ``` literallayout
    # systemctl restart named-pkcs11
    ```
:::
:::
::: itemizedlist
**验证步骤**
-   将 `nslookup`{.literal} 命令与远程 DNS 服务器名称一起使用：
    ``` literallayout
    $ nslookup ad.example.com
    Server:        192.168.122.2
    Address:       192.168.122.2#53
    No-authoritative answer:
    Name:          ad.example.com
    Address:       192.168.122.3
    ```
    如果正确配置了域转发，`nslookup`{.literal} 请求会显示远程 DNS
    服务器的 IP 地址。
:::
:::
::: section
::: titlepage
# []{#configuring-dns-and-realm-settings-for-a-trust_installing-trust-between-idm-and-ad.html#configuring-dns-zones-in-cli_configuring-dns-and-realm-settings-for-a-trust}在 CLI 中配置 DNS 转发区域 {.title}
:::
这部分描述了如何使用命令行界面（CLI）将新的 DNS
转发区域添加到身份管理(IdM)服务器中。
使用 DNS 转发区域，您可以将对特定区域的 DNS 查询转发到不同的 DNS
服务器。例如，您可以将活动目录(AD)域的 DNS 查询转发到 AD DNS 服务器。
::: itemizedlist
**先决条件**
-   使用具有管理员权限的用户帐户访问 CLI。
-   正确配置了 DNS 服务器。
:::
::: itemizedlist
**步骤**
-   为 AD 域创建 DNS 转发区域，并使用 `--forwarder`{.literal}
    选项指定远程 DNS 服务器的 IP 地址：
    ``` literallayout
    # ipa dnsforwardzone-add ad.example.com --forwarder=192.168.122.3 --forward-policy=first
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在向配置添加新的转发区域后，您可能会在 `/var/log/messages`{.literal}
系统日志中看到有关 DNSSEC 验证失败的警告：
``` literallayout
named-pkcs11[2572]: no valid DS resolving 'host.ad.example.com/A/IN':  192.168.100.25#53
```
DNSSEC（域名系统安全扩展）使用数字签名来保护 DNS 数据，使 DNS
免受攻击。在IdM 服务器中默认启用该服务。出现警告的原因是远程 DNS
服务器没有使用 DNSSEC。红帽建议您在远程 DNS 服务器上启用 DNSSEC。
如果您无法在远程服务器上启用 DNSSEC 验证，您可以在 IdM 服务器中禁用
DNSSEC ：
::: orderedlist
1.  选择要编辑的合适的配置文件：
    ::: itemizedlist
    -   如果您的 IdM 服务器使用 RHEL 8.0 或 RHEL 8.1，请打开
        `/etc/named.conf`{.literal} 文件。
    -   如果您的 IdM 服务器使用 RHEL 8.2 或更高版本，请打开
        `/etc/named/ipa-options-ext.conf`{.literal} 文件。
    :::
2.  添加以下 DNSSEC 参数：
    ``` literallayout
    dnssec-enable no;
    dnssec-validation no;
    ```
3.  保存并关闭配置文件。
4.  重启 DNS 服务：
    ``` literallayout
    # systemctl restart named-pkcs11
    ```
:::
:::
::: itemizedlist
**验证步骤**
-   将 `nslookup`{.literal} 命令与远程 DNS 服务器名称一起使用：
    ``` literallayout
    $ nslookup ad.example.com
    Server:        192.168.122.2
    Address:       192.168.122.2#53
    No-authoritative answer:
    Name:          ad.example.com
    Address:       192.168.122.3
    ```
    如果正确配置了域转发，`nslookup`{.literal} 请求会显示远程 DNS
    服务器的 IP 地址。
:::
:::
::: section
::: titlepage
# []{#configuring-dns-and-realm-settings-for-a-trust_installing-trust-between-idm-and-ad.html#configuring-dns-forwarding-in-ad_configuring-dns-and-realm-settings-for-a-trust}在 AD 中配置 DNS 转发 {.title}
:::
这部分描述了如何在 Active Directory(AD)中为 身份管理(IdM)服务器设置 DNS
正向解析。
::: itemizedlist
**先决条件**
-   已安装 AD 的 Windows Server。
-   在两个服务器中打开 DNS 端口。
:::
::: orderedlist
**流程**
1.  登录到 Windows 服务器。
2.  打开 [**Server Manager**]{.strong}。
3.  打开 [**DNS Manager**]{.strong}。
4.  在 [**Conditional Forwarders**]{.strong}
    中，使用以下内容添加新的条件正向解析器：
    ::: itemizedlist
    -   IdM 服务器 IP 地址
    -   完全限定域名，例如 `server.idm.example.com`{.literal}
    :::
5.  保存设置。
:::
:::
::: section
::: titlepage
# []{#configuring-dns-and-realm-settings-for-a-trust_installing-trust-between-idm-and-ad.html#verifying-the-dns-configuration_configuring-dns-and-realm-settings-for-a-trust}验证 DNS 配置 {.title}
:::
在配置信任前，请验证身份管理（IdM）和 Active
Directory（AD）服务器是否可以相互解析。
::: itemizedlist
**先决条件**
-   您需要以 sudo 权限登录。
:::
::: orderedlist
**流程**
1.  对通过 UDP 的 Kerberos 和通过 TCP 服务记录的 LDAP 运行 DNS 查询。
    ``` literallayout
    [admin@server ~]# dig +short -t SRV _kerberos._udp.idm.example.com.
    0 100 88 server.idm.example.com.
    [admin@server ~]# dig +short -t SRV _ldap._tcp.idm.example.com.
    0 100 389 server.idm.example.com.
    ```
    这些命令应该列出所有 IdM 服务器。
2.  使用 IdM Kerberos 域名称对 TXT 记录运行 DNS
    查询。获得的值应该与您在安装 IdM 时指定的 Kerberos 域匹配。
    ``` literallayout
    [admin@server ~]# dig +short -t TXT _kerberos.idm.example.com.
    "IDM.EXAMPLE.COM"
    ```
    如果前面的步骤没有返回所有预期的记录，请使用缺失的记录更新 DNS
    配置：
    ::: itemizedlist
    -   如果您的 IdM 环境使用集成的 DNS 服务器，请输入不带任何选项的
        `ipa dns-update-system-records`{.literal}
        命令，来更新您的系统记录：
        ``` literallayout
        [admin@server ~]$ ipa dns-update-system-records
        ```
    -   如果您的 IdM 环境没有使用集成的 DNS 服务器：
        ::: orderedlist
        1.  在 IdM 服务器中，将 IdM DNS 记录导出到文件中：
            ``` literallayout
            [admin@server ~]$ ipa dns-update-system-records --dry-run --out dns_records_file.nsupdate
            ```
            该命令使用相关的 IdM DNS 记录创建一个名为
            [**dns_records_file.nsupdate**]{.strong} 的文件。
        2.  使用 `nsupdate`{.literal} 工具和 [
            **dns_records_file.nsupdate**]{.strong} 文件向 DNS
            服务器提交 DNS 更新请求。如需更多信息，请参阅 RHEL 7
            文档中的 [使用 nsupdate 更新外部 DNS
            记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#dns-update-external-nsupdate){.link}。或者，请参阅
            DNS 服务器文档来添加 DNS 记录。
        :::
    :::
3.  验证 IdM 能够通过一个命令来解析 AD 的服务记录，该命令对 Kerberos
    和通过 TCP 服务记录的 LDAP 运行 DNS 查询：
    ``` literallayout
    [admin@server ~]# dig +short -t SRV _kerberos._tcp.dc._msdcs.ad.example.com.
    0 100 88 addc1.ad.example.com.
    [admin@server ~]# dig +short -t SRV _ldap._tcp.dc._msdcs.ad.example.com.
    0 100 389 addc1.ad.example.com.
    ```
:::
:::
:::
[]{#assembly_configuring-idm-clients-in-an-active-directory-dns-domain_installing-trust-between-idm-and-ad.html}
::: chapter
::: titlepage
# []{#assembly_configuring-idm-clients-in-an-active-directory-dns-domain_installing-trust-between-idm-and-ad.html#assembly_configuring-idm-clients-in-an-active-directory-dns-domain_installing-trust-between-idm-and-ad}第 8 章 在活动目录 DNS 域中配置 IdM 客户端 {.title}
:::
如果您在由活动目录控制的 DNS
域中有客户端系统，并且您需要这些客户端能够加入 IdM 服务器以从其 RHEL
功能中受益，则可以配置用户，来使用活动目录 DNS 域的主机名访问客户端。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
这不是推荐的配置，存在一些限制。红帽建议始终将 IdM
客户端部署在与活动目录拥有的区域不同的 DNS 区域中 ，并通过其 IdM
主机名访问 IdM 客户端。
:::
您的 IdM 客户端配置取决于您是否需要使用 Kerberos 单点登录。
::: section
::: titlepage
# []{#assembly_configuring-idm-clients-in-an-active-directory-dns-domain_installing-trust-between-idm-and-ad.html#proc_configuring-an-idm-client-without-kerberos-single-sign-on_assembly_configuring-idm-clients-in-an-active-directory-dns-domain}配置没有 Kerberos 单点登录的 IdM 客户端 {.title}
:::
如果 IdM 客户端位于活动目录 DNS 域中，密码身份验证是唯一可供用户访问 IdM
客户端上资源的身份验证方法。这个流程描述了如何配置没有 Kerberos
单点登录的客户端。
::: orderedlist
**步骤**