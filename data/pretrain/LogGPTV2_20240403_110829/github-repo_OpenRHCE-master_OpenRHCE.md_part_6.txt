`-D  `
:   Deletes a rule by number
`-F `
:   Flushes all rules from the chain
#### Matching packets
A source IP or network:
    -s 192.0.2.0/24
A destination IP or network:
    -d 10.0.0.1
UDP/TCP and ports:
    -p udp --sport 68 --dport 67
ICMP and types:
    -p icmp --icmp-type echo-reply
Inbound network interface:
    -i ETH0
Outbound network interface:
    -o ETH0
State tracking:
    -m state --state ESTABLISHED,RELATED    
#### Iptables Tips
Use `system-config-firewall` to enable and select FTP and SSH to
generate a sample set of rules and load the connection tracking module.
Show connections being accepted or rejected in realtime:
    # watch -d -n 2 `iptables -nvL`
#### SELinux
SELinux is a set of security rules that determine which processes can
access which files, directories, ports, and other system resources.
Purposes:
-   Provide another method of securing a system.
-   Implement Mandatory Access Control policies (required in some
    institutional contexts).
-   Protect the system and its data from system services that have been
    compromised.
#### SELinux in Action
-   httpd allows remote anonymous access.
-   This allows the possibility of attempts to compromise the httpd
    daemon with security exploits.
-   httpd runs with the identity of the user \"apache\" and the group
    \"apache\" \-- a successful exploit gains system access with the
    permissions granted to that user and group.
-   In addition to the filesystem areas needed to run a webserver, the
    apache user and group also have access to other \"world-readable\"
    and \"world-writeable\" location such as `/tmp`.
-   SELinux ensures that a compromised service cannot gain access to
    these filesystem location where it should not need access in the
    normal course of events.
#### SELinux Enforcement Modes
Disabled
:   No rules are enforced and the SELinux filesystem contexts are
    stripped away. Moving to or from this mode to one of the others
    requires a reboot \-- during which the entire filesystem will be
    processed to add or remove the SELinux filesystem context labels.
Permissive
:   Rules are in place, violations are logged, but access is permitted
    (rules not enforced). Useful for troubleshooting.
Enforcing
:   Rules are in place and enforced. Attempted violations are logged and
    access is denied.
#### Important SELinux Filesystem locations
`/etc/sysconfig/selinux`
:   Used to set enforcement mode and policy set.
`/var/log/audit/audit.log`
:   Extensive log of SELinux messages
`/var/log/messages`
:   Contains short summaries of SELinux messages when
    `setroubleshoot-server` is installed and active
-   Watch for \"AVC\" (Access Vector Cache) in log messages.
#### Related Packages
coreutils
:   Always installed. Provides some default elements of SELinux.
policycoreutils
:   Provides `restorecon`, `secon`, `setfiles`, et al.
libselinux-utils
:   Provides `getenforce`, `setenforce`, `getsebool`, `setsebool`, et
    al.
policycoreutils-gui
:   Provides `system-config-selinux` and `sepolgen`, et al.
policycoreutils-python
:   Provides `semanage`, `audit2allow`, `audit2why`, et al.
setroubleshoot
:   Provides `seapplet`
setroubleshoot-server
:   Provides `sealert`, `sedispatch`, `setroubleshootd`, et al.
#### Useful Commands
`sestatus`
:   Displays information about the current SELinux parameters.
`chcon`
:   Changes context labels on files (but non-persistently! Use with
    `semanage` for persistent changes.
`semanage`
:   Modifies SELinux contexts persistently.
#### Additional Documentation
#### Setting the SELinux Enforcement Mode
View the current setting:
    # getenforce
    Enforcing
Change the current setting:
    # setenforce 
To make persistent changes, edit `/etc/sysconfig/selinux`
#### SELinux Policy Types
Targeted (default)
:   Default policy set that aims to protect the most high-risk system
    services.
Strict
:   (Deprecated? Unable to find RHEL6 information about this policy
    type. Replaced by MLS?)
MLS
:   Implements Multi-Level Security policies \-- a much stricter policy
    set than the default
Minimum
:   A less intrusive implementation of minimal aspects of SELinux
The RHCE exam will likely only be concerned with the default
\"Targeted\" policy set.
#### SELinux Contexts
When SELinux is not disabled, every file, directory, and process has an
SELinux context label. These labels are used to determine which
protected service(s) can operate in this location.
View SELinux contexts of processes:
> `ps -eZ`, `ps -axZ`, `ps -Zc `, etc.
View SELinux contexts of files and directories:
> `ls -Zd /path/to/dir/`, `ls -Z /path/to/file`, etc.
View SELinux contexts of users:
> `id -Z`
#### Setting SELinux file contexts
The initial contexts are created based on a set of rules, which are also
used by `restorecon` to restore contexts to the default. When using the
default \"targeted\" policy, these rules are stored in
`/etc/selinux/targeted/contexts/files/file_contexts`. New customized
rules are stored in
`/etc/selinux/targeted/contexts/files/file_contexts.local`.
View these rules with:
    # semanage fcontext -l
Or search for a specific service or path:
    # semanage fcontext -l | grep "/var/ftp"
    /var/ftp(/.*)?                                     all files           system_u:object_r:public_content_t:s0 
    /var/ftp/bin(/.*)?                                 all files          system_u:object_r:bin_t:s0 
    /var/ftp/etc(/.*)?                                 all files          system_u:object_r:etc_t:s0 
    /var/ftp/lib(64)?(/.*)?                            all files          system_u:object_r:lib_t:s0 
    /var/ftp/lib(64)?/ld[^/]*\.so(\.[^/]*)*            regular file       system_u:object_r:ld_so_t:s0 
In these rules the regular expression `(/.*)?` is a match for the
preceding directory and everything within it, recursively.
Add/delete/modify rules with:
    #semanage fcontext -[a|d|m] -f  -t  ''
#### SELinux Booleans
SELinux uses a collection of boolean variables to allow users to change
SELinux policy in pre-defined ways without the need to reload or
recompile SELinux policies.
Show all booleans and their current values:
    # getsebool -a
Show all booleans with current values and meanings:
    # semanage boolean -l
Show a specific boolean value:
    # getsebool 
#### Modifying SELinux Booleans
Modify a boolean non-persistently (for testing, or temporary use):
    # setsebool  
Modify a boolean persistently:
    # setsebool -P  
Use the graphical tool: `system-config-selinux`
#### Help for SELinux with regard to specific services
Many targeted services have specialised man pages dealing with SELinux
configuration.
Display these pages with:
    # man -k '_selinux'
    ftpd_selinux         (8)  - Security-Enhanced Linux policy for ftp daemons
    httpd_selinux        (8)  - Security Enhanced Linux Policy for the httpd daemon
    kerberos_selinux     (8)  - Security Enhanced Linux Policy for Kerberos
    named_selinux        (8)  - Security Enhanced Linux Policy for the Internet Name server (named) daemon
    nfs_selinux          (8)  - Security Enhanced Linux Policy for NFS
    pam_selinux          (8)  - PAM module to set the default security context
    rsync_selinux        (8)  - Security Enhanced Linux Policy for the rsync daemon
    samba_selinux        (8)  - Security Enhanced Linux Policy for Samba
    ypbind_selinux       (8)  - Security Enhanced Linux Policy for NIS
#### Monitor SELinux Violations
Installing `setroubleshoot-server` sends SELinux error messages to
`/var/log/messages`. These can be further parsed with `sealert`.
`audit2why` and `audit2allow` can be used to parse the messages in
/var/log/audit/audit.log and explain why access was denied, and how to
modify your configuration to allow it.
### Session 6 Virtualization
#### Virtualization Terms
Physical Machine
:   The actual physical machine with RAM, disk space, etc.
Virtual Machine
:   A logical construct provided by hardware and/or software
    capabilities that can run an independent OS and perform work as
    though it were a physical machine.
Hypervisor
:   A specialized OS that provides virtual machines.
Xen
:   A hypervisor previously available on Red Hat operating systems that
    was implemented as a modified version of the Linux kernel.
KVM
:   Kernel Virtual Machine, the hypervisor Red Hat currently supports on
    RHEL6. It is implemented within (as a set of kernel modules) the
    mainstream Linux kernel.
Guest
:   The operating system that runs on a virtual machine.
Host
:   The operating system that runs on a physical machine hosting virtual
    machines (i.e. the hypervisor).
#### RHEL6 KVM requirements
-   64-bit Intel or AMD processor
    > To confirm, search `/proc/cpuinfo` for the string `lm` on the
    > flags line.
-   CPU Hardware assisted virtualization extensions (enabled in BIOS)
    > To confirm, search `/proc/cpuinfo` for the string `vmx` (for
    > Intel) or `svm` (for AMD)
-   64-bit version of RHEL6
    > To confirm, look for `x86_64` in the output of `uname -m`.
#### KVM Virtualization Components
-   KVM kernel modules
-   libvirt
-   `virsh` virtualization shell
-   `virt-manager`
#### Installing Virtualization Capabilities
At OS Installation:
:   Select the `Virtual Host` server role \--or\-- customize packages
    and select the `Virtualization` package group. In a kickstart file,
    these packages can be installed as a group with the `@kvm` group
    name.
After Installation:
:   With entitlement to the Virtualization packages, or access to them
    through a 3rd party repository,: `yum install kvm`
Other recommended packages:
> -   python-virtinst
> -   libvirt
> -   libvirt-python
> -   virt-manager
> -   libvirt-client
#### Virsh Commands
Power on a virtual machine:
    virsh start 
Gracefully shut down a virtual machine:
    virsh shutdown 
Power off a virtual machine:
    virsh destroy 
Connect to a virtual machine console (requires guest configuration):
    virsh console 
Disconnect from a console of a virtual machine:
    ^]  ( "ctrl + ]" )
Set a VM to start at boot:
    virsh autostart 
#### Creating Virtual Machines with Virt-Manager
Demonstrated and practiced in the classroom.
#### Creating Virtual Machines with virt-install
`virt-install` is a command-line tool used to create virtual machines.
See the syntax with `man virt-install` or `virt-install --help`.
Sample command:
    # virt-install --name StXVM3 --ram 768 \
    --disk path=/var/lib/libvirt/images/StXVM3disk1.img,size=8\
    --network network=default --cdrom /dev/cdrom
#### SELinux considerations
-   SELinux expects file-based guest images to be stored in
    `/var/lib/libvirt/images/`. Use of other locations with SELinux
    enforcing will require adding the location to the SELinux policies.
1.  Find the context applied to the expected location:
        # ll -Z /var/lib/libvirt/
        drwx--x--x. root root system_u:object_r:virt_image_t:s0 images
2.  Add a new context policy:
        # semanage fcontext -a -t virt_image_t "/virtstorage(/.*)?"
3.  Set the context to match the newly created policy:
        # restorecon -R -v /virtstorage/
        restorecon reset /virtstorage context unconfined_u:object_r:
        default_t:s0->system_u:object_r:virt_image_t:s0
### Session 7 Logging and remote access
#### RHEL 6 Logging with Rsyslog
Red Hat uses `rsyslog` for its logging facility. `rsyslog` can be
configured to for local logging only, to send log messages to a remote
destination as well, and to recieve log messages from other systems as
well.
**Terms**
facility
:   A name that indicates what the message concerns or from what service
    it originates.
priority
:   A name that indicates the importance of the messages in that
    category.
The man pages for logger(1) and syslog(3) have more information.
`rsyslog` is configured in `/etc/rsyslog.conf` and defaults to using
port 514 (TCP or UDP) to send and receive messages.
The man page for rsyslog is under rsyslogd(8). Add\'l extensive
documentation is in /usr/share/doc/rsyslog-5.8.10/index.html
#### Accepting Remote Logs
By default, `rsyslog` is configured for only local logging. To enable it
to receive log messages from other systems, uncomment one of the
following groups of lines in the config file (depending on which
transport protocol, tcp or udp, you prefer to use):
For UDP (more widely supported but less reliable):
    # Provides UDP syslog reception
    #$ModLoad imudp.so
    #$UDPServerRun 514
For TCP (less widely supported but more reliable):
    # Provides TCP syslog reception
    #$ModLoad imtcp.so  
    #$InputTCPServerRun 514
After changing the appropriate lines, restart the service.
#### Rsyslog Configuration: Message Selection
In `/etc/rsyslog.conf` in the \"RULES\" section, ensure that a rule
exists (or write one) for the kind of messages you want to send. The
format is:
    .        
facility
:   One of: auth, authpriv, cron, daemon, kern, lpr, mail, news, syslog,
    user, uucp, local0-7, or \"\*\"
priority
:   One of (in ascending priority): debug, info, notice, warning (warn),
    err (error), crit, alert, emerg (panic), none, or \"\*\"
-   Multiple facilities can be specified with the same priority with the
    use of a comma.
    >     uucp,news.crit       /var/log/spooler
-   Multiple selectors (facility/priority pairs) can be specified for
    the same action with the use of a semicolon.
    >     *.info;mail.none;authpriv.none;cron.none   /var/log/messages
#### Rsyslog Configuration: Actions
action
:   One of the following:
    > -   A file, specified with a full path name.
    > -   A named pipe (fifo)
    > -   A terminal (tty) or console
    > -   A remote machine\'s IP or hostname, prefaced with \"@\" (for
    >     UDP), \"@@\" (for TCP), or \":omrelp:\" for the RELP protocol.
    > -   A list of users (comma-delimited). This notifies them via
    >     console message if they are logged in. An asterisk (\*)
    >     includes all logged-in users
    > -   A tilde, to indicate that these messages should be discarded.
    > -   See the documentation for others.
#### Investigate SELinux implications for Syslog
Find SELinux Filesystem contexts that might affect rsyslog:
    # semanage fcontext -l  |grep syslog
Find SELinux port contexts that might affect rsyslog:
    # semanage port -l  |grep syslog
Find SELinux booleans that might affect rsyslog:
    # getsebool -a  |grep syslog
#### Practice
Configure one system to receive remote log messages. Configure the other
to log only a particular facility or priority to the remote syslog
server.
Use `logger` to generate test messages.
Remember to investigate firewall and SELinux considerations.
#### Remote Access via SSH
RedHat installs by default both the OpenSSH client package (openssh) and
the server package (openssh-server)