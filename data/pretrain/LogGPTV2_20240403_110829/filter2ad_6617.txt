title:PLAS'20: 15th Workshop on Programming Languages and Analysis for Security
author:Alley Stoughton and
Marco Vassena
PLAS’20: 15th Workshop on Programming Languages and
Analysis for Security
Alley Stoughton
Boston University
PI:EMAIL
ABSTRACT
The 15th ACM SIGSAC Workshop on Programming Languages and
Analysis for Security (PLAS 2020) is co-located with the 27th ACM
Conference on Computer and Communications Security (ACM
CCS 2020). Over its now more than ten-year history, PLAS has
provided a unique forum for researchers and practitioners to ex-
change ideas about programming language and program analysis
techniques with the goal of improving the security of software
systems. Strongly encouraged are proposals of new, speculative
ideas, evaluations of new or known techniques in practical settings,
and discussions of emerging threats and important problems.
CCS CONCEPTS
• Security and privacy → Software and application security;
KEYWORDS
programming languages; security
ACM Reference Format:
Alley Stoughton and Marco Vassena. 2020. PLAS’20: 15th Workshop on
Programming Languages and Analysis for Security. In Proceedings of the
2020 ACM SIGSAC Conference on Computer and Communications Security
(CCS ’20), November 9–13, 2020, Virtual Event, USA. ACM, New York, NY,
USA, 2 pages. https://doi.org/10.1145/3372297.3416252
1 INTRODUCTION
PLAS aims to provide a forum for exploring and evaluating ideas
on the use of programming language and program analysis tech-
niques to improve the security of software systems. Strongly en-
couraged are proposals of new, speculative ideas, evaluations of
new or known techniques in practical settings, and discussions of
emerging threats and important problems. We are especially inter-
ested in position papers that are radical, forward-looking, and likely
to lead to lively and insightful discussions that will influence future
research that lies at the intersection of programming languages and
security.
2 SCOPE
The scope of PLAS includes, but is not limited to:
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-7089-9/20/11.
https://doi.org/10.1145/3372297.3416252
Marco Vassena
CISPA Helmholtz Center for Information Security
marco.vassena@cispa.saarland
bilities, including program (binary) analysis and fuzzing.
• Programming language techniques and verification applied
to security in other domains (e.g., adversarial learning and
smart contracts).
• Software isolation techniques (e.g., SFI and sandboxing) and
compiler-based hardening techniques (e.g., secure compila-
tion).
• Compiler-based security mechanisms (e.g., security type sys-
tems) or runtime-based security mechanisms (e.g., inline
reference monitors).
• Techniques for discovering and detecting security vulnera-
• Automated introduction and/or verification of security en-
• Language-based verification of security properties in soft-
• Specifying and enforcing security policies for information
• Model-driven approaches to security.
• Security concerns for Web programming languages.
• Language design for security in new domains such as cloud
• Applications, case studies, and implementations of these
ware, including verification of cryptographic protocols.
flow and access control.
forcement mechanisms.
computing and IoT.
techniques.
3 WORKSHOP FORMAT
This year, PLAS received high quality submissions, attesting to the
continued vitality of the community whose work sits at the intersec-
tion of programming languages and security. PLAS 2020 welcomed
the submission of both long research papers as well as short papers
presenting preliminary or exploratory work intended to generate
lively discussions at the workshop. PLAS 2020 attracted twelve
submissions—of which, seven were short papers—from seven coun-
tries (Denmark, Estonia, France, Germany, Sweden, Switzerland,
USA), with authors spanning both academia and industry. The sub-
missions covered a variety of topics of interest to PLAS, including
type systems for security languages and smart contracts, runtime
monitoring of security protocols, secure multiparty logic program-
ming, oblivious computations and data structures, and program
synthesis of checksum algorithms.
Approach, Sandrine Blazy (University of Rennes, France)
PLAS 2020 is delighted to feature two excellent invited talks:
• From Verified Compilation to Secure Compilation: a Semantic
• How APIs Are Both the Illness and the Cure, The Software
Heterogeneity Problem in Modern Web Applications, Jean Yang
(Akita Software, USA)
4 PROGRAM COMMITTEE MEMBERS
• Amal Ahmed (Northeastern University, USA)
Workshop CCS '20, November 9–13, 2020, Virtual Event, USA21516 ACKNOWLEDGEMENTS
We would like to thank all the authors who submitted contributions
to PLAS as well as the program committee members whose review-
ing efforts were essential to creating a strong program. Thanks
also to the invited speakers Sandrine Blazy and Jean Yang who
have kindly accepted our invitations to present their research at
the workshop.
• Owen Arden (University of California, Santa Cruz, USA)
• Musard Balliu (KTH Royal Institute of Technology, Sweden)
• Ethan Cecchetti (Cornell University, USA)
• Dominique Devriese (Vrije Universiteit Brussel, Belgium)
• François Dupressoir (University of Bristol, UK)
• Anitha Gollamudi (Harvard University, USA)
• Marco Guarnieri (IMDEA Software Institute, Spain)
• Scott Moore (Galois, USA)
• Deian Stefan (University of California, San Diego, USA)
• Alley Stoughton (Boston University, USA)
• Marco Vassena (CISPA, Helmholtz Center for Information
Security, Germany)
5 WORKSHOP ORGANISERS
Alley Stoughton (PC Co-chair) is a research professor at Boston
University. She has a background in programming language theory,
but in recent years has focused on applying formal methods to
security. She has worked on language-based security, applying the
real/ideal paradigm of theoretical cryptography to the definition
of program security. And she has worked extensively on using the
EasyCrypt proof assistant to prove the security of cryptographic
schemes and protocols. In recent years, Alley has published in, and
served on the program committees of, CCS and CSF, and has served
as a reviewer for the Journal of Cryptology.
Marco Vassena (PC Co-chair) is a postdoctoral researcher at
CISPA, Helmholtz Center for Information Security and a mem-
ber of the CISPA-Stanford Center for Cybersecurity. Marco’s re-
search interests lie at the intersection of security and programming
languages. In particular, his work focuses on applying principled
programming languages techniques (e.g., information-flow control
and secure compilation) to the design and implementation of secure
software systems. Marco has published in prestigious security and
programming languages conferences and received a distinguished
paper award from the Symposium on Principles of Programming
Languages (POPL 2019). Marco has served on the program commit-
tees of various workshops (PriSC, FCS, PLAS), and as a reviewer
for ACM Transactions on Privacy and Security (TOPS) and Trans-
actions on Programming Languages and Systems (TOPLAS).
Workshop CCS '20, November 9–13, 2020, Virtual Event, USA2152