xor eax, 0x9ce66186
sub eax, 0x4ec067b8
not eax
sub eax, 0xc98775b4
xor eax, 0xbdc52b4f
ror eax, 2
sub eax, 0xd925192c
ror eax, 3
add eax, 0x48fa27f1
sub eax, 0xd353c205
sub eax, 0xa888b8b2
xor eax, 0xe017f6fa
ror eax, 0xd
sub eax, 0x247dab96
add eax, 0xf6696155
sub eax, 0xbeaeaad5
add eax, 0xd6c7b4ee
add eax, 0x120d5924
add eax, 0x9a0be9b9
sub eax, 0xbfe386c3
ror eax, 0x17
add eax, 0x14c58836
ror eax, 5
xor eax, 0x1984a5de
not eax
sub eax, 0x4d956430
sub eax, 0x9c9df86
add eax, 0xd88904bc
xor eax, 0xf5bcc022
xor eax, 0x205c4a75
add eax, 0xbcbb2b45
sub eax, 0xdb0a2bc0
ror eax, 0xd
add eax, 0x529eba0f
ror eax, 0x1c
add eax, 0x8150605
sub eax, 0xd8fe0628
add eax, 0xad81052c
ror eax, 5
add eax, 0x762e0f15
not eax
sub eax, 0x75707780
add eax, 0xe3265fc4
xor eax, 0x22952628
add eax, 0x231a8655
ror eax, 2
not eax
sub eax, 0x2c75569a
sub eax, 0x88ad3417
not eax
ror eax, 0x19
add eax, 0xe7634a71
not eax
xor eax, 0x500026f6
add eax, 0xad1a2fd2
sub eax, 0x937ead1b
not eax
add eax, 0x2f112a91
sub eax, 0x801608e8
xor eax, 0x9cb2998b
xor eax, 0xe626a2be
add eax, 0x3185e741
xor eax, 0x197e9520
xor eax, 0x5665148d
sub eax, 0xc739155d
add eax, 0x58f934ef
sub eax, 0xa623710f
xor eax, 0x8051cbca
ror eax, 0x1d
ror eax, 0xc
ror eax, 0x1c
xor eax, 0xa96f3357
ror eax, 0xa
xor eax, 0xf13d8c20
not eax
xor eax, 0xfb42f152
add eax, 0xb813492a
sub eax, 0x4f8728ef
add eax, 0xee0e75bc
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
The Remote Metamorphic Engine
Artificial Immunity | Detecting the non-self
1st
2nd
3rd
4th
5th
6th
7th
Mutations
156720689
147853893
15689519
-21215987
10778328
-689519
11979087
Responses
0
0
0
0
137106
0
0
Decrypted
Tampered
non-self
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
The Remote Metamorphic Engine
Artificial Immunity | Detecting the non-self
1st
2nd
3rd
4th
5th
6th
7th
Mutations
47 ms
65 ms
52 ms
106 ms
579 ms
39 ms
53 ms
Response Time
500 ms
200 ms
>200 ms
>200 ms
>200 ms
200 ms
>200 ms
Time Threshold
Emulated
non-self
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Evading AI Machine Learning
Mixing Morphed Blocks
Morphed Function 1
Head
Tail
Morphed Function 2
Head
Tail
Morphed Function 3
Head
Tail
Disabling the AI from differentiating 
functions before, during and after execution
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
The Remote Metamorphic Engine
Anti-Emulation
In memory code integrity check
Execution environment integrity check
Clock synchronization
Detect debuggers
Detect Virtual Machines
Collect Machine IDs
In memory APIs code integrity check
Detect hooks
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
{ Conclusion
}
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
{ Questions?
}