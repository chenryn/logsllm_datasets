### Hardware Verification and Error Analysis in the SPARC64 V Microprocessor

#### 1. Introduction
A hardware verification program is designed to detect hardware failures. LINPACK, a standard HPC (High-Performance Computing) floating-point benchmark, implements a linear equation solver. From the SPEC CPU2000 integer benchmark suite, gcc (a C compiler) and bzip2 (a file compression program) were selected. Additionally, galgel (a computational fluid dynamics program) and sixtrack (a design program for high-energy nuclear accelerators) were chosen from the SPEC CPU2000 floating-point benchmark suite. All six programs check results for correct program execution.

#### 2. Single-Bit and Double-Bit Error Probabilities
Given the probability \( P \) of a single-bit error in a 72-bit word, the probability of two single-bit errors accumulating in one word is approximately \( P^2 \). For accelerated tests, this probability is multiplied by the acceleration factor \( Acc \), making the single-bit error probability \( Acc \times P \). The probability of two single-bit errors accumulating in one word during an accelerated test is \( (Acc \times P)^2 \). This indicates that the frequency of accumulated double-bit errors during an accelerated test is larger than the scaled value by a factor of \( Acc \). In this experiment, the acceleration factor is on the order of \( 10^8 \).

#### 3. Multi-Bit SRAM Errors
A significant number of uncorrectable multi-bit SRAM errors were observed. Static test results suggest that multi-bit errors are unlikely to be generated in a single word by a single neutron collision. These multi-bit errors may be attributed to the accumulation of multiple hits and are considered artifacts of accelerated testing. Observed multi-bit SRAM error events were removed from the measured error count.

#### 4. Error Detection and Recovery
All single-bit errors in the SRAM arrays were corrected by the SECDED (Single Error Correction, Double Error Detection) ECC and other recovery mechanisms.

##### 4.1 Logic Soft-Error Measurement under Program Execution
Logic errors were recorded while running the six programs mentioned earlier. Although the SPARC64 V implements various error detection mechanisms, the amount of error information available during program execution is limited compared to static tests, where all latches can be accessed via scan chains. During normal server operation, hardware-detected errors, including single-bit SRAM errors, are reported by interrupts and logged for diagnostic purposes. However, the high frequency of single-bit SRAM errors during accelerated testing would overwhelm the diagnostic logging capability. Instead, hardware error detection information was collected via polling, which somewhat compromised the resolution of the error detection timing.

The PRIMEPOWER 650 is an 8-CPU symmetric multi-processor system. When a logic error occurs in the bus control logic for a single CPU (including the cache coherency mechanism between CPUs), the bus protocol may hang, causing innocent (error-free) CPUs to fail with a watchdog timeout if their bus access cannot be completed in time. Therefore, watchdog timeout failures of multiple CPUs in a short period were regarded as the result of a single error.

The total number of logic errors was estimated based on the latch error probability obtained from static measurements, considering the acceleration factor at each module position. Combinatorial gate errors were neglected, leading to conservative estimates.

As shown in Table 3, 93.6% of the estimated latch flips "vanished," meaning the system did not fail and no error information was recorded. The remaining 6.4% of latch flips were detected by parity checkers, other error detection mechanisms, or simply felt as the system failed without error information. Of these, 4.9% of the logic errors were recovered by the hardware, while the remaining 1.5% were fatal and resulted in system failures.

Thus, the latch AVF (Average Vulnerability Factor) of the SPARC64 V processor is 1.5%. Among the fatal errors observed, one instance was a SDC (Silent Data Corruption) while running galgel. The remaining fatal errors caused the system to go down.

For noticed errors, hardware error information was missing in about 10% of the cases, matching the latch parity coverage of 86%. The processor successfully recovered from errors 76% of the time, slightly better than the estimated 67%.

Figure 10 shows the logic derating factor for noticed errors (number of observed errors divided by the number of errors that occurred) under the execution of each of the six test programs. Floating-point benchmarks (LINPACK, galgel, and sixtrack) tend to exhibit higher derating factors than integer benchmarks, as errors in floating-point registers and execution units affect the correctness of floating-point benchmarks but not integer benchmarks. Errors in fixed-point registers and execution units affect both integer and floating-point benchmarks.

#### 5. Conclusions
Accelerated soft error measurements were conducted for the SPARC64 V microprocessor using the white neutron beam facility at Osaka University's RCNP. The SPARC64 V is manufactured with a 90nm bulk CMOS process.

Fail bit maps generated from SRAM static test measurements indicate that the frequency of double-bit errors in a single word due to one neutron hit is extremely low. Multiple-bit errors observed during test program runs were primarily caused by multiple collisions and treated as artifacts of accelerated testing.

The processor successfully detected all SRAM single-bit errors and recovered from those errors without any failures. 93.6% of the estimated neutron-induced faults in latches "vanished." Among the 6.4% faults detected as logic errors, 76% were recovered by the error recovery mechanisms implemented in the processor. Thus, only 1.5% of the estimated neutron-induced faults in the microprocessor resulted in a system failure.

Considering the number of observed system failure incidents, the atmospheric neutron-induced fatal soft error rate of the 90nm SPARC64 V microprocessor is well below 10 FIT (less than one failure in 10,000 years) assuming the system is operated at NYC sea level.

The agreement between the estimate made from the design data and the measured error detection and recovery rate is within the statistical variation of the measurements. The effectiveness of the implemented error detection and recovery mechanisms in the SPARC64 V microprocessor is validated.

#### Acknowledgment
The authors would like to acknowledge Ken Seki, Satoru Sakashita, Masatoshi Aihara, Kenji Imada, Masaru Itoh, and Masamichi Nagai for conducting the accelerated tests. They also thank Ryozo Takasu for beam flux measurement, Taiki Uemura for useful discussions, Tsuyoshi Motokurumada, Kuniki Morita, and Hideo Yamashita for interpreting logic error logs. The authors also thank the members of the Server systems group, Product business support group, and Fujitsu Electron Laboratories for their contributions. These measurements were made possible by the support of higher-level managers Akira Yamanaka, Noriyuki Toyoki, and Masayoshi Kimoto.

#### References
[1] Ziegler et al., "IBM Experiment in Soft Fails in Computer Electronics (1978-1994)", IBM J R&D, Vol. 40, No.1, pp. 3-18, 1996.
[2] Karlsson et al., "Using Heavy-Ion Radiation to Validate Fault Handling Mechanisms", IEEE Micro, Vol. 14, No.1, pp. 8-32, 1994.
[3] Ziegler et al., "Soft-error Rate", IBM J R&D, Vol. 40, No.1, pp. 51-72, 1996.
[4] Ariat et al., "Comparison of Physical and Software Implemented Fault Injection Techniques", IEEE Trans. on Computers, Vol. 52, No.9, pp. 1115-1133, Sept. 2003.
[5] K. Harris, "Asymmetries in Soft-Error Rates in a Large Cluster System", IEEE J of Dev & Mat. Reliability, Vol. 5, No.3, pp. 336-342, Sept. 2005.
[6] C. Constantinescu, "Using Physical and Simulated Fault Injection to Evaluate Error Detection Mechanisms", Pacific Rim IntI. Sym. on Dependable Computing 1999, pp. 186-192, Dec. 1999.
[7] C. Constantinescu, "Experimental Evaluation of Error-Detection Mechanisms", IEEE Trans. on Reliability, Vol. 52, No.1, pp. 53-57, Mar. 2003.
[8] Kellington et al., "IBM POWER6 Processor Soft Error Tolerance Analysis Using Proton Irradiation", SELSE 3 workshop, Apr. 2007.
[9] C. Constantinescu, "Neutron SER Characterization of Microprocessors", IntI. Conf. of Dependable Systems and Networks 2005, pp. 754-759, June 2005.
[10] H. Ando et al., "Accelerated Testing of a SPARC64 V Microprocessor for Neutron SER", SELSE 3 workshop, Apr. 2007.
[11] Y. Tosaka et al., "Comprehensive study of soft errors in advanced CMOS circuits with 90/130 nm technology", IEEE International Electron Device Meeting 2004, Tech. dig. pp. 941-944, Dec. 2004.
[12] A. Inoue, "Fujitsu's New SPARC64 V for Mission-Critical Servers", Microprocessor Forum 2002, Oct. 2002.
[13] H. Ando, Y. Yoshida et al., "A 1.3GHz Fifth Generation SPARC64 Microprocessor", IEEE ISSC, Vol. 38, Issue 11, pp. 1896-1905, Nov. 2003.
[14] JEDEC Standard, "Test Method for Beam Accelerated Soft Error Rate JESD89-3", Sept. 2005.
[15] S. Mukherjee, C. Weaver, E. Erner, S. Reinhardt, and T. Austin, "A Systematic Methodology to Compute the Architectural Vulnerability and Cross Sections", MICRO-36, Proc. 36th Int. Symp. on Microarchitecture, 2003.
[16] "Neutron scattering lengths for http://www.ncnr.nist.gov/resources/n-lengths/"

---

**Note:** The reference [16] appears to be incomplete. Please verify and provide the full reference if necessary.