8 RELATED WORK
There has been much work on the traffic analysis of Shadow-
socks [4, 12, 28, 57–59]. Some works assume a more powerful ad-
versary than what we observed in practice. For example, Zeng et al.
assume that the adversary considers the DNS behavior of hosts
when building its detection model [57]. Many proof-of-concept
tools to detect Shadowsocks traffic have been developed. Zhixin
Wang proposed an attack based on the high entropy of the first
few packets [23]. Madeye used the distribution of packet lengths to
identify Shadowsocks and ShadowsocksR traffic [31]. In addition,
Wang et al. [51, §5] demonstrated that entropy-based traffic anal-
ysis could accurately identify circumvention protocols like obfs3,
obfs4, and FTE.
Many studies and reports empirically show that the GFW de-
ploys active probing techniques to discover censorship circumven-
tion tools. The known targeted protocols include Tor [13, 52, 56],
obfs2 [55], VPN Gate [34], and other VPN services [24]. Winter
et al. [56] studied how GFW discovered Tor relays by active probing
as early as 2012. Dunna et al. [13] revisited active probing against
Tor in 2018. Ensafi et al. [14] fingerprinted the GFW’s probes target-
ing different protocols and inferred the underlying infrastructure
of the probing machines. The developers of V2Ray reported that
V2Ray servers have experienced replay attacks since as early as
2017 [39]. To the best of our knowledge, the earliest documenta-
tion of active probing being used against Shadowsocks was in June
2019 [5].
Many theoretical active-probing attacks and defenses have been
proposed [2, 8, 10, 15, 33, 35–37]. Most notably, Frolov et al. [19]
identified various proxy servers using TCP flags and timing infor-
mation when a server closes a connection. Frolov and Wustrow [20]
demonstrate a promising direction against active probing, namely
hiding proxies behind popular applications. This concept, known
as application fronting, has been adopted in many popular circum-
vention tools [27, 43, 49, 50].
9 FUTURE WORK
In this work, we focused on the GFW’s active probing against
Shadowsocks specifically. However, several pieces of evidence from
our observations suggest that the GFW targets active probing
against other, unknown circumvention protocols. First, as intro-
duced in Section 4.1, we were able to trigger active probes using
random data. Since other circumvention protocols, like VMess for
example, also fully encrypts their traffic, they are likely to be de-
tected, too. Second, as introduced in Section 4.2, we have discovered
new types of probes that were not received by our Shadowsocks
and OutlineVPN servers. If these probes are not directed towards
Shadowsocks, what are they directed towards? Third, in June 2020,
VMess was discovered to be vulnerable to active probing [2, 33, 35].
We want to test if this vulnerability has actually been exploited by
the GFW.
10 ETHICS
Censorship measurement research carries an element of risk, which
can range from having a sensitive request being logged, to legal
repercussions. We took steps to minimize risk while conducting
our measurement experiments. First, this work does not involve
122
How China Detects and Blocks Shadowsocks
IMC ’20, October 27–29, 2020, Virtual Event, USA
human subjects. All network traffic was generated automatically by
programs under our control. Second, although it may be low risk to
have sensitive queries observed by the censor, we tried to limit the
number of these sensitive queries. Specifically, in only one of our
experiments did we use a host in China as a Shadowsocks server.
In that experiment, we initially had the server proxy the browsing
traffic of a subset of Alexa top 1 million websites. After running the
experiment for 45 hours, we decided to remove censored websites
from the browsing list, so that the host in China would not make
connections to sensitive websites outside the firewall. Third, we
minimized the potential collateral damage of blocking by using
dedicated IP addresses for our circumvention servers. We rented
our non-censoring network hosts from a VPS provider that permits
Shadowsocks and OutlineVPN, and in fact even offers automatic
installation of OutlineVPN.
11 CONCLUSION
In this study, we revealed and systematically studied the GFW’s lat-
est weapon against Shadowsocks. We found that the GFW detects
potential Shadowsocks traffic using the size and entropy of the first
data packet in each connection; it then sends active probes, in dif-
ferent stages, to the suspected servers. The active probes consist of
replay-based probes and random probes with varied lengths. They
are essentially different types of attacks that target vulnerabilities
in different Shadowsocks implementations. We fingerprinted the
probers and found differences relative to previous work on active
probing. A network-level side channel reveals that the probes sent
by thousands of IP addresses are very likely controlled by a set of
centralized structures.
Finally, based on our gained understanding, we presented a tem-
porary workaround that mitigates the GFW’s traffic analysis attack.
We further discussed the essential strategies to defend against ac-
tive probing. We closely collaborated with developers to make
Shadowsocks and related tools more resistant to blocking.
RESPONSIBLE DISCLOSURE
We shared our findings and suggestions to the Shadowsocks-libev
and OutlineVPN developers. OutlineVPN released v1.1.0 in February
2020, providing an option to defend against replay of client data [26].
OutlineVPN further provided defense against replay of server data
in September 2020. In July 2020, OutlineVPN developers merged the
header and initial data into one packet, making the size of the first
packet in each connection variable [18]. The OutlineVPN developers
reported at the beginning of September 2020 that their servers had
not been blocked since these changes were made, although they
had still been intensively probed. We also shared our preliminary
findings publicly [3], which potentially led to the replay defense
feature in Shadowsocks-rust v1.8.5 [60].
ACKNOWLEDGMENTS
The authors express their thanks to Shadowsocks-libev developers;
Vinicius Fortuna and other OutlineVPN developers at Jigsaw; and
Eric Wustrow and other researchers at the University of Colorado.
They are also thankful to Dave Levin for serving as the shepherd
of this paper. The work was supported in part by the NSF CAREER
grant CNS-1553301.
123
AVAILABILITY
To maintain reproducibility and stimulate future work, we have
released our data and source code to the maximum extent that does
not harm our anonymity: https://gfw.report/publications/imc20/en.
REFERENCES
[1] Anonymous. 2014. Towards a Comprehensive Picture of the Great Firewall’s
DNS Censorship. In Free and Open Communications on the Internet. USENIX.
https://www.usenix.org/system/files/conference/foci14/foci14-anonymous.pdf
[2] Anonymous. 2020. Summary on Recently Discovered V2Ray Weaknesses. Retrieved
September 2020 from https://gfw.report/blog/v2ray_weaknesses/en/
[3] Anonymous, Anonymous, Anonymous, David Fifield, and Amir Houmansadr.
2019. How China Detects and Blocks Shadowsocks. Retrieved September 2020
from https://gfw.report/blog/gfw_shadowsocks
[4] Matthieu Baerts and Quentin De Coninck. 2015. Multipath TCP with real
Smartphone applications. Master’s thesis. Université catholique de Louvain.
https://dial.uclouvain.be/memoire/ucl/object/thesis:366
[5] bluesky. 2019. 6.4期间翻墙观察. Retrieved February 2020 from https://pincong.
rocks/article/2019
[6] Kevin Bock, iyouport, Anonymous, Louis-Henri Merino, David Fifield, Amir
Houmansadr, and Dave Levin. 2020. Exposing and Circumventing China’s Cen-
sorship of ESNI. Retrieved September 2020 from https://github.com/net4people/
bbs/issues/43#issuecomment-673322409
[7] David Borman, Bob Braden, Van Jacobson, and Richard Scheffenegger. 2014. TCP
Extensions for High Performance. RFC 7323. RFC Editor. https://tools.ietf.org/
html/rfc7323
[8] BreakWa11. 2015.
Retrieved Au-
gust 2019 from https://web.archive.org/web/20160829052958/https://github.com/
breakwa11/shadowsocks-rss/issues/38
Shadowsocks协 议 的 弱 点 分 析 和 改 进.
[9] Zimo Chai, Amirhossein Ghafari, and Amir Houmansadr. 2019. On the Impor-
tance of Encrypted-SNI (ESNI) to Censorship Circumvention. In Free and Open
Communications on the Internet. USENIX. https://www.usenix.org/system/files/
foci19-paper_chai_update.pdf
[10] Jiaxing Cheng, Ying Li, Cheng Huang, Ailing Yu, and Tao Zhang. 2020. ACER:
detecting Shadowsocks server based on active probe technology. Journal of
Computer Virology and Hacking Techniques 16, 3 (2020), 217–227. https://link.
springer.com/article/10.1007/s11416-020-00353-z
[11] Richard Clayton, Steven J. Murdoch, and Robert N. M. Watson. 2006. Ignoring
the Great Firewall of China. In Privacy Enhancing Technologies. Springer, 20–35.
https://www.cl.cam.ac.uk/~rnc1/ignoring.pdf
[12] Ziye Deng, Zihan Liu, Zhouguo Chen, and Yubin Guo. 2017. The Random Forest
based Detection of Shadowsock’s Traffic. In Intelligent Human-Machine Systems
and Cybernetics. IEEE. https://www.directory-root.com/wp-content/uploads/
2018/02/Shadowsocks-Sniffing.pdf
[13] Arun Dunna, Ciarán O’Brien, and Phillipa Gill. 2018. Analyzing China’s Blocking
of Unpublished Tor Bridges. In Free and Open Communications on the Internet.
USENIX. https://www.usenix.org/system/files/conference/foci18/foci18-paper-
dunna.pdf
[14] Roya Ensafi, David Fifield, Philipp Winter, Nick Feamster, Nicholas Weaver,
and Vern Paxson. 2015. Examining How the Great Firewall Discovers Hid-
den Circumvention Servers. In Internet Measurement Conference. ACM. http:
//conferences2.sigcomm.org/imc/2015/papers/p445.pdf
[15] David Fifield. 2017. Shadowsocks active-probing attacks and defenses. Retrieved
February 2020 from https://groups.google.com/d/msg/traffic-obf/CWO0peBJLGc/
Py-clLSTBwAJ
[16] David Fifield. 2019. Decryption vulnerability in Shadowsocks stream ciphers. Re-
trieved June 2020 from https://github.com/net4people/bbs/issues/24
[17] David Fifield. 2019. Intensive Shadowsocks blocking in China since mid-September.
Retrieved February 2020 from https://github.com/net4people/bbs/issues/16
[18] Vinicius Fortuna. 2020. Outline changes since the prelinimary report. https:
//github.com/net4people/bbs/issues/22#issuecomment-670781627
[19] Sergey Frolov, Jack Wampler, and Eric Wustrow. 2020. Detecting Probe-resistant
Proxies. In Network and Distributed System Security. The Internet Society. https:
//www.ndss-symposium.org/wp-content/uploads/2020/02/23087.pdf
[20] Sergey Frolov and Eric Wustrow. 2020. HTTPT: A Probe-Resistant Proxy. In Free
and Open Communications on the Internet. USENIX. https://www.usenix.org/
system/files/foci20-paper-frolov.pdf
[21] ghost (unnamed user). 2017. How did GFW block circumvention tools during
the 19th people’s congress? Retrieved February 2020 from https://github.com/
net4people/bbs/issues/1
[22] go Shadowsocks2 developers. [n.d.]. go-Shadowsocks2. https://github.com/
shadowsocks/go-shadowsocks2
[23] isofew. 2017. sssniff. https://github.com/isofew/sssniff
IMC ’20, October 27–29, 2020, Virtual Event, USA
Alice et al.
[42] Will Scott. 2017. Reports of China disrupting shadowsocks. Retrieved February 2019
from https://groups.google.com/d/msg/traffic-obf/dqw6CQLR944/1Icd4691AQAJ
[43] Sergey Frolov and others. [n.d.]. forwardproxy. https://github.com/caddyserver/
[44] Shadowsocks developers. [n.d.]. Shadowsocks. https://github.com/shadowsocks/
forwardproxy
shadowsocks/tree/master
[45] Shadowsocks developers. [n.d.].
shadowsocks/shadowsocks-libev
Shadowsocks-libev.
https://github.com/
[46] Shadowsocks developers. 2019. Shadowsocks whitepaper. Retrieved Febru-
ary 2020 from https://github.com/shadowsocks/shadowsocks-org/blob/master/
whitepaper/whitepaper.md
[47] shadowsocksr-csharp developers. [n.d.]. shadowsocksr-csharp. https://github.
com/shadowsocksrr/shadowsocksr-csharp
[48] tatianab, alalamav, et al. 2019. Probing resistance via timeout. Retrieved Sep-
tember 2020 from https://github.com/Jigsaw-Code/outline-ss-server/commit/
c70d512e78525eba36bb1e6ad7a0868593166cf9
[49] trojan developers. [n.d.]. trojan. https://github.com/trojan-gfw/trojan
[50] V2Ray developers. [n.d.]. V2Ray. https://github.com/v2fly/v2ray-core
[51] Liang Wang, Kevin P. Dyer, Aditya Akella, Thomas Ristenpart, and Thomas
Shrimpton. 2015. Seeing through Network-Protocol Obfuscation. In Computer and
Communications Security. ACM. http://pages.cs.wisc.edu/~liangw/pub/ccsfp653-
wangA.pdf
[52] Tim Wilde. 2012. GFW actively probes obfs2bridges. Retrieved February 2020
from https://blog.torproject.org/blog/knock-knock-knockin-bridges-doors
[53] Brandon Wiley. 2017. Re: Reports of China disrupting shadowsocks. Retrieved
July 2019 from https://groups.google.com/d/msg/traffic-obf/dqw6CQLR944/V5_
61SVTBAAJ
[54] Philipp Winter. 2010. brdgrd. https://github.com/NullHypothesis/brdgrd
[55] Philipp Winter. 2013. GFW actively probes obfs2bridges. Retrieved February 2020
from https://bugs.torproject.org/8591
[56] Philipp Winter and Stefan Lindskog. 2012. How the Great Firewall of China
is Blocking Tor. In Free and Open Communications on the Internet. USENIX.
https://www.usenix.org/system/files/conference/foci12/foci12-final2.pdf
[57] Xuemei Zeng, Xingshu Chen, Guolin Shao, Tao He, Zhenhui Han, Yi Wen, and
Qixu Wang. 2019. Flow Context and Host Behavior Based Shadowsocks’s Traf-
fic Identification. IEEE Access 7 (2019), 41017–41032. https://doi.org/10.1109/
ACCESS.2019.2907149
[58] Yankang Zhao, Xiaobo Ma, Jianfeng Li, Shui Yu, and Wei Li. 2018. Revisiting
Website Fingerprinting Attacks in Real-World Scenarios: A Case Study of Shadow-
socks. In International Conference on Network and System Security. Springer,
319–336.
[59] Zhongliu Zhuo, Yang Zhang, Zhi li Zhang, Xiaosong Zhang, and Jingzhong
Zhang. 2018. Website Fingerprinting Attack on Anonymity Networks Based on
Profile Hidden Markov Model. IEEE Transactions on Information Forensics and
Security 13, 5 (May 2018), 1081–1095. https://doi.org/10.1109/TIFS.2017.2762825
[60] zonyitoo. [n.d.]. Shadowsocks-rust v1.8.5. https://github.com/shadowsocks/
shadowsocks-rust/releases/tag/v1.8.5
[24] Andrew Jacobs. 2015. China further tightens grip on the Internet. The New York
Times (Jan. 2015). Retrieved February 2020 from https://www.nytimes.com/2015/
01/30/world/asia/china-clamps-down-still-harder-on-internet-access.html
[25] Jigsaw. [n.d.]. Outline. https://getoutline.org/
[26] Jigsaw. [n.d.]. Outline v1.1.0. https://github.com/Jigsaw-Code/outline-ss-server/
releases/tag/v1.1.0
[27] klzgrad. [n.d.]. NaïveProxy. https://github.com/klzgrad/naiveproxy
[28] Xiaolei Liu, Zhongliu Zhuo, Xiaojiang Du, Xiaosong Zhang, Qingxin Zhu, and
Mohsen Guizani. 2019. Adversarial attacks against profile HMM website fin-
gerprinting detection model. Cognitive Systems Research 54 (2019), 83–89.
https://doi.org/10.1016/j.cogsys.2018.12.005
[29] Zhen Lu, Zhenhua Li, Jian Yang, Tianyin Xu, Ennan Zhai, Yao Liu, and Christo
Wilson. 2017. Accessing Google Scholar under Extreme Internet Censorship: A
Legal Avenue. In Middleware. ACM. https://censorbib.nymity.ch/pdf/Lu2017a.pdf
https:
[30] madeye. 2016. Changes between shadowsocks-libev v2.5.4 and v2.5.5.
//github.com/shadowsocks/shadowsocks-libev/compare/v2.5.4...v2.5.5
[31] madeye. 2017. sssniff. https://github.com/madeye/sssniff
[32] madeye. 2019. Simplify the server auto blocking mechanism. Retrieved Sep-
tember 2020 from https://github.com/shadowsocks/shadowsocks-libev/commit/
a99c39c7dd314939082348d96d06727570b514a8
[33] nametoolong. 2020. Some extra ways of active probing. Retrieved September 2020
from https://github.com/v2ray/v2ray-core/issues/2539
[34] Daiyuu Nobori and Yasushi Shinjo. 2014. VPN Gate: A Volunteer-Organized
Public VPN Relay System with Blocking Resistance for Bypassing Govern-
ment Censorship Firewalls. In Networked Systems Design and Implementation.
USENIX. https://www.usenix.org/system/files/conference/nsdi14/nsdi14-paper-
nobori.pdf
[35] p4gefau1t, studentmain, et al. 2020. vmess协议设计和实现缺陷可导致服务
器遭到主动探测特征识别(附PoC). Retrieved September 2020 from https:
//github.com/v2ray/v2ray-core/issues/2523
[36] Zhiniang Peng. 2020. Redirect attack on Shadowsocks stream ciphers. Retrieved
June 2020 from https://github.com/edwardz246003/shadowsocks
[37] printempw. 2017. 为何shadowsocks 要弃用一次性验证(OTA). Retrieved Febru-
ary 2020 from https://web.archive.org/web/20191002190325/https://printempw.
github.io/why-do-shadowsocks-deprecate-ota/
[39] projectv2ray. 2017. Replay attack monitored by V2Ray.
[38] Program Think. 2017. 2017年10月翻墙快报（兼谈用I2P 突破封锁）. Retrieved
February 2019 from https://program-think.blogspot.com/2017/10/gfw-news.html
Retrieved Febru-
ary 2020 from https://github.com/shadowsocks/shadowsocks-org/issues/44#
issuecomment-282525358 (originally from https://twitter.com/projectv2ray/
status/833959357423448064).
[40] riobard, madeye, Mygod, et al. 2017. Defend against replay attack. Retrieved
February 2020 from https://github.com/shadowsocks/shadowsocks-org/issues/44
[41] Shadowsocks rust developers. [n.d.]. Shadowsocks-rust. https://github.com/
shadowsocks/shadowsocks-rust
124