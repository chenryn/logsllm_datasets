\
\
###### Context
Host 中的子标签 Context用于配置一个Web应用，默认的配置如下
\
\...
\
属性说明：
1）docBase:
Web应用目录或者War包的部署路径。可以是绝对路径，也可以是相对于Host中appEase的相对路径。
2）path:
Web应用的Context路径。如果我们Host名为localhost，则该web应用访问的根路径为：http://localhost:8080/myApp
它支持的内嵌元素为：CookieProcessor, Loader, Manager, Realm, Resources,
WatchedResource, JarScanner, Valve。
\
234567
\\
\
\
\
\
## tomcat-users.xml文件配置
该配置文件中，主要配置的是 Tomcat的用户，角色等信息，
用来控制 Tomcat中 manager,host- manager的访问权限
## web.xml文件配置（web应用配置）
分
### Tomcat中的web.xml文件配置
在tomcat安装包中的conf/web.xml文件
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--web.xml文件配置详情\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
\
\
\
\default\ \-\--默认sevlet配置
\org.apache.catalina.servlets.DefaultServlet\
\
\debug\
\0\
\
\
\listings\
\false\
\
\1\
\
> \....
\
\jsp\ \-\--默认jsp servlet的配置
\org.apache.jasper.servlet.JspServlet\
\
\fork\
\false\
\
\
\xpoweredBy\
\false\
\
\3\
\
\...\....
\
\default\ \--默认servlet拦截路径
\/\
\
\....
\
\
\jsp\ \-\-- jsp servlet的拦截路径
\\*.jsp\
\\*.jspx\
\
\.....
\
\30\ \-\--默认的seesion
超时时间30分钟
\
\...\.....
\ \-\-\--很多的mime-mapping映射，太多不一一列举
\123\
\application/vnd.lotus-1-2-3\
\
\
\3dml\
\text/vnd.in3d.3dml\
\
\...\.....
\
\index.html\ \-\--默认的欢迎页面文件
\index.htm\
\index.jsp\
\
### 工程项目中的web.xml配置
在java开发出来的包中的WEB-INF/web.xml文件
#### Servletcontext初始化参数
我们可以通过\添加
Servletcontext初始化参数，它配置了一个键值对，这样我们可以在应用程序中使用javax.
serv1et.serv1 context, getinitparameter（）方法获取参数。
配置\的参数，可在servlet中引用
\
\project_param 01\
\itcast\
\
例如：
![截图_20200307090909](media/image16.png){width="7.25in"
height="3.1416666666666666in"}
![截图_20200307091309](media/image17.png){width="7.266666666666667in"
height="2.0319444444444446in"}
#### 会话session-config配置
\用于配置web应用会话，包括超时时间、cookie配置以及会话追踪模式。
它将覆盖 server.xml和context.xml中的配置。
\
\30\ \--session有效期30分钟
\
> \JESSIONID\ \--cookie名字
>
> \www.itcast.cn\ \--cookie域名
>
> \/\ \--cookie路径
>
> \Session Cookie\ \--注释信息
>
> \true\
> \--cookie对象只能通过http访问，不能通过js获取，提高安全性
>
> \false\
> \--如果为true此cookie只能通过HTTPS连接传递到服务器，而HTTP连接则不会传递该信息。注意是从浏览器传递到服务器，服务器端的Cookie对象不受此项影响
>
> \3600\ \--以秒为单位表示
> cookie的生存期，默认为-1表示是会话 Cookie，浏览器关闭时就会消失
\
\COOKIE\ \--用于配置会话追踪模式，
Servlet3.0版本中支持的追踪模式：COOKIE、URL、SSL
\
支持的追踪模式：
-   A. COOKIE：通过 Http
    Cookie追踪会话是最常用的会话追踪机制，而且servlet规范也要求所有的
    Servlet规范都需要支持Cookie追踪
-   B.URL:URL重写是最基本的会话追踪机制。当客户端不支持
    Cookie时，可以采用URL重写的方式。当采用URL追踪模式时，请求路径需要包含会话标识信息，servlet容器会根据路径中的会话标识设置请求的会话信息。如http://www.myserver.com/user/index.html;jessionid=1234567890.
-   C.SSL：对于ssl请求，通过s会话标识确定请求会话标识。
#### servlet的配置
servlet的配置主要是两部分， servlet和servlet- mapping：
\
\myservlet\
\cn. itcast web. MyServlet\
\
\fileName\
\init. conf\
\
\1\
\true\
\
\
\myServlet\ \-\--
\\*.do\ \-\--请求路径1
\/myservet/\*\ \-\--请求路径2，可多个
\
配置说明：
-   servlet-name：指定servlet的名称，该属性在web.xml中唯一
-   servlet-class：用于指定servelet类名
-   init- param：用于指定servlet的初始化参数，在应用中可以通过
    HttpServlet.getInitParameter获取
-   load-on-startup：用于控制在web应用启动时，servelet的加载顺序，值小于0，web应用启动时，不加载该servlet，第一次访问时加载
-   enabled：true / false。 若为fase，表示该servlet不处理任何请求
-   
-   
#### Listener配置
Listen用于监听servlet中的事件，例如
context、request、session对象的创建、修改、删除，并触发响应事件。Listener是观察者模式的实现，在servlet中主要用于对
context、request、session对象的生命周期进行监控。在servlet2.5规范中共定义了8种Listener。在启动时，servletContextListener的执行顺序与web.xm1中的配置顺序一致，停止时执行顺序相反。
\
\org. Springframework.web.context.
ContextLoaderListener\
\
#### Filter配置(过滤器)
Filter用于配置web应用过滤器，用来过滤资源请求及响应，拦截用户验证访问权限。经常用于认证、日志、加密、数据转换等操作，配置如下:
\
\myFilter\
\cn. Itcast.web.MyFilter\
\true\
\
> \language\
>
> \CN\
\
\
\
\myFilter\
\/\*\
\
配置说明
-   filter-name：用于指走过滤器名称，在web.xml中，过滤器名称必须唯一
-   filter- class：过滤器的全限定类名，该类必须实现 Filter接口
-   async- supported：该过滤器是否支持异步
-   init- param：用于配置 Filter的初始化参数,可以配置多个,可以通过
    Filterconfig. getInitParameter获取
-   url- pattern：指定该过滤器需要拦截的URL
#### 欢迎页面配置
welcome-file-list用于指定we应用的欢迎文件列表。在tomcat/config/web.xml中有配置，也可以在自己的web应用中配置，请求的顺序，从上到下。
\
\index. html\
\index. htm\
\index. isp\
\
自定义欢迎页面：