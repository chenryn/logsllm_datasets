Underhanded PowerShell
GitHub
GitHub Gists
PoshCode
PowerShell Gallery
TechNet
Invoke-Obfuscation
Invoke-CradleCrafter
ISE Steroids Obfuscation
and created a huge PowerShell corpus ...
> We need more data!
Underhanded PowerShell
GitHub
GitHub Gists
PoshCode
PowerShell Gallery
TechNet
Invoke-Obfuscation
Invoke-CradleCrafter
ISE Steroids Obfuscation
Politely of course ...
Code
Code
Canadian
> But first, a word of thanks
> Guess What We Found?
https://ci.memecdn.com/6795487.jpg
https://s-media-cache-ak0.pinimg.com/originals/d8/50/58/d850584c02689c9f4d4a092028ed6a59.jpg
SOPA – Stop Online Piracy Act
> We need more data!
Underhanded PowerShell
GitHub
GitHub Gists
PoshCode
PowerShell Gallery
TechNet
Invoke-Obfuscation
Invoke-CradleCrafter
ISE Steroids Obfuscation
Some statistics ...
408,665 Scripts
28,748 Authors
Manually labeled ~7,000 scripts
Found ~1600 obfuscated scripts
Obfuscated ~4000 scripts with 
existing frameworks
https://cobbr.io/ObfuscationDetection.html
Measure
Score
Accuracy
0.71
Precision
0.89
Recall
0.37
F1 Score
0.52
True Positives
0.16
False Positives
0.02
True Negatives
0.55
False Negatives
0.27
https://en.wikipedia.org/wiki/Precision_and_recall
> Surely we can do better!
Yes!
Get-Command -Name ("{1}{0}" -f "-Process","Get") 
Generic
Parameter
LParen
StringExpandable
Format
Comma
StringExpandable
StringExpandable
RParen
Yes!!
Get-Command -Name ("{1}{0}" -f "-Process","Get") 
Generic
Parameter
LParen
StringExpandable
Format
Comma
StringExpandable
StringExpandable
ScriptBlockAst
NamedBlockAst: Begin
NamedBlockAst: End
StatementAst
PipelineAst
CommandAst
StringConstantExpressionAst
CommandParameterAst
ParenExpressionAst
PipelineAst
BinaryExpressionAst
Operator: Format
Left: StringConstantAst
Right: ArrayLiteralAst
0: StringConstantExpressionAst
1: StringConstantExpressionAst
RParen
The Mighty PowerShell AST
https://github.com/lzybkr/ShowPSAst
> Identifying Obfuscation
0.0/00
Using context to detect obfuscation techniques
- Distribution of AST types
- Distribution of language operators
- Assignment, binary, invocation, …
- Array sizes
- Statistics within each AST type
- Character frequency, entropy, length (max, min, median, 
mode, range), whitespace density, character casing, …
- Statistics of command names, .NET methods, variables… 
Title . @Speaker . Location
This gives us 4098 features to thumbprint a script
> 4098 Features!
0.0/00
Title . @Speaker . Location
> Calculating Obfuscation
0.0/00
What do we do with all these features?
- Result = Bias + (F1 * Weight1) + (F2 * Weight2) + (…)
- If(Result > Limit) { Obfuscated = True }
Title . @Speaker . Location
Logistic Regression
+
=
Linear Regression + Logit Function, Sitting in a Tree… M.A.T.H.I.N.G
https://en.wikipedia.org/wiki/Logistic_regression
> Calculating Obfuscation
0.0/00
What do we do with all these features?
- Result = Bias + (F1 * Weight1) + (F2 * Weight2) + (…)
- If(Result > Limit) { Obfuscated = True }
Title . @Speaker . Location
How do we decide 4098 importance values?
Calculating Weights
If at first you don’t succeed…
- Result = Bias + (F1 * Weight1) + (F2 * Weight2) + (…)
- ExpectedResult = (From labeled data)
- Error = Result – ExpectedResult
- Adjust each weight according to how much they contributed 
to the error. Do this a lot.
https://en.wikipedia.org/wiki/Stochastic_gradient_descent
Measure
Cosine
Similarity
Logistic Regression with 
Gradient Descent
Accuracy
0.71
0.96
Precision
0.89
0.96
Recall
0.37
0.95
F1 Score
0.52
0.96
True Positives
0.16
0.41
False Positives
0.02
0.01
True Negatives
0.55
0.55
False Negatives
0.27
0.02
https://en.wikipedia.org/wiki/Precision_and_recall
Measure
Cosine
Similarity
Logistic Regression with 
Gradient Descent
Accuracy
0.71
0.96
Precision
0.89
0.96
Recall
0.37
0.95
F1 Score
0.52
0.96
True Positives
0.16
0.41
False Positives
0.02
0.01
True Negatives
0.55
0.55
False Negatives
0.27
0.02
https://en.wikipedia.org/wiki/Precision_and_recall
10x better at finding obfuscated content
Half the false positives
> What about Sketchy stuff?
0.0/00
Hunting and Deep Investigations
Title . @Speaker . Location
Measure
Cosine
Similarity
Obfuscated
Sketchy
Accuracy
0.71
0.96
0.88
Precision
0.89
0.96
0.86
Recall
0.37
0.95
0.89
F1 Score
0.52
0.96
0.88
True Positives
0.16
0.41
0.43
False Positives
0.02
0.01
0.07
True Negatives
0.55
0.55
0.43
False Negatives
0.27
0.02
0.05
https://en.wikipedia.org/wiki/Precision_and_recall
> What about other algorithms?
0.0/00
Beyond Logistic Regression & Gradient Descent
Title . @Speaker . Location
> Demo Time!
0.0/00
Title . @Speaker . Location
> Demo Time!
0.0/00
Title . @Speaker . Location
0.0/00
Title . @Speaker . Location
0.0/00
Title . @Speaker . Location
> Demo Time!
0.0/00
Title . @Speaker . Location
Want to operationalize? 
We’ve built in a few whitelisting options…
Now go. Find Evil.
00/00
> Thank you!
# Release
https://github.com/danielbohannon/Revoke-Obfuscation
# References
- https://www.leeholmes.com/blog/2015/11/13/detecting-obfuscated-powershell/
- https://github.com/danielbohannon/Invoke-Obfuscation
- https://www.leeholmes.com/blog/2016/10/22/more-detecting-obfuscated-powershell/
- https://msdn.microsoft.com/en-us/magazine/dn913188.aspx
- https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/
# Contact
@DanielHBohannon @Lee_Holmes
> Demo Time!
0.0/00
Title . @Speaker . Location