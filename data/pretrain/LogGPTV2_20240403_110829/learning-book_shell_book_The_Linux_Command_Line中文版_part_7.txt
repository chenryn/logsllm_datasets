有许多Linux工具来处理文本文件。甚至Windows也承认这种文件格式的重要性。
著名的NOTEPAD.EXE程序就是一个纯ASCII文本文件编辑器。
为什么我们要查看文本文件呢？因为许多包含系统设置的文件（叫做配置文件），是以文本
格式存储的，阅读它们可以更深入的了解系统是如何工作的。另外，许多系统所用到的实际程
序（叫做脚本）也是以这种格式存储的。在随后的章节里，我们将要学习怎样编辑文本文件以
修改系统设置，还要学习编写自己的脚本文件，但现在我们只是看看它们的内容而已。
less命令是这样使用的：
less filenane
一旦运行起来，less程序允许你前后滚动文件。例如，要查看一个定义了系统中全部用户身
份的文件，输入以下命令：
[ne@linuxbox -]$ less /etc/passud
一旦less程序运行起来，我们就能浏览文件内容了。如果文件内容多于一页，那么我们可
以上下滚动文件。按下“q”键，退出less程序。
下表列出了less程序最常使用的键盘命令。
命令
行为
 Page UP or b
向上翻滚一页
Page Down or space
向下翻滚一页
UP Arrow
向上翻滚一行
Down Arrow
向下翻滚一行
G
移动到最后一行
1G or g
移动到开头一行
/charaters
向前查找指定的字符串
37
---
## Page 39
n
向前查找下一个出现的字符串，这个字符串是
之前所指定查找的
h
显示帮助屏幕
q
退出less 程序
表 4-3:less 命令
4.6less就是more（禅语：色即是空）
less程序是早期Unix程序more的改进版。“less”这个名字，对习语“less is more”开了个玩
笑，这个习语是现代主义建筑师和设计者的座右铭。
less属于“页面调度器”类程序，这些程序允许以逐页方式轻松浏览长文本文档。more程序
只能向前翻页，而less程序允许前后翻页，此外还有很多其它的特性。
4.7旅行指南
Linux系统中，文件系统布局与类Unix系统的文件布局很相似。实际上，一个已经发布的标
准，叫做Linux文件系统层次标准，详细说明了这种设计模式。不是所有Linux发行版都根据
这个标准，但大多数都是。
下一步，我们将在文件系统中漫游，来了解Linux系统的工作原理。这会给你一个温习跳转
命令的机会。我们会发现很多有趣的文件都是纯人类可读文本。下面旅行开始，做做以下练习：
1.cd到给定目录
2.列出目录内容ls-1
3.如果看到一个有趣的文件，用file命令确定文件内容
4.如果文件看起来像文本，试着用less命令浏览它
记得复制和粘贴技巧！如果你正在使用鼠标，双击文件名，来复制它，然后按下鼠标中键
粘贴文件名到命令行中。
3
---
## Page 40
在系统中漫游时，不要害怕四处看看。普通用户是很难把东西弄乱的。那是系统管理员的
工作！如果一个命令抱怨一些事情，不要管它，尝试一下别的东西。花一些时间四处看看。系
统是我们自己的，尽情地探究吧。记住在Linux中，没有秘密存在！表4-4仅仅列出了一些我
们可以浏览的目录。随意尝试更多！
目录
评论
/
根目录，万物起源。
/bin
包含系统启动和运行所必须的二进制程序。
/boot
包含Linux内核、初始RAM磁盘映像（用于启动时所需
的驱动）和启动加载程序。
有趣的文件：
·/boot/grub/grub.conf or menu.lst，被用来配置启动
加载程序。
▪/boot/vmlinuz,Linux 内核。
 /dev
这是一个包含设备结点的特殊目录。“一切都是文件”，也适
用于设备。在这个目录里，内核维护着所有设备的列表。
/etc
这个目录包含所有系统层面的配置文件。它也包含一系列
的shell脚本，在系统启动时，这些脚本会开启每个系统服
务。这个目录中的任何文件应该是可读的文本文件。
有趣的文件：虽然/etc目录中的任何文件都有趣，但这里只
列出了一些我一直喜欢的文件：
·/etc/crontab，定义自动运行的任务。
·/etc/fstab，包含存储设备的列表，以及与他们相关的
挂载点。
·/etc/passwd，包含用户帐号列表。
68
---
## Page 41
/home
在通常的配置环境下，系统会在/home下，给每个用户分配
一个目录。普通用户只能在自己的目录下写文件。这个限
制保护系统免受错误的用户活动破坏。
/lib
包含核心系统程序所使用的共享库文件·这些文件与
Windows中的动态链接库相似。
/lost+found
每个使用Linux文件系统的格式化分区或设备，例如ext3
文件系统，都会有这个目录。当部分恢复一个损坏的文件系
统时，会用到这个目录。这个目录应该是空的，除非文件系
统真正的损坏了。
/media
在现在的Linux系统中，/media目录会包含可移动介质的
挂载点，例如USB驱动器，CD-ROMs等等。这些介质连
接到计算机之后，会自动地挂载到这个目录结点下。
/mnt
在早些的Linux系统中，/mnt目录包含可移动介质的挂载
点。
do/
这个/opt目录被用来安装“可选的”软件。这个主要用来
存储可能安装在系统中的商业软件产品。
/proc
这个/proc目录很特殊。从存储在硬盘上的文件的意义上说，
它不是真正的文件系统。相反，它是一个由Linux内核维护
的虚拟文件系统。它所包含的文件是内核的窥视孔。这些
文件是可读的，它们会告诉你内核是怎样监管计算机的。
/root
root帐户的家目录。
/sbin
这个目录包含“系统”二进制文件。它们是完成重大系统任
务的程序，通常为超级用户保留。
/tmp
这个/tmp目录，是用来存储由各种程序创建的临时文件的
地方。一些配置导致系统每次重新启动时，都会清空这个目
录。
/usr
在Linux系统中，/usr目录可能是最大的一个。它包含普
通用户所需要的所有程序和文件。
/usr/bin
/usr/bin目录包含系统安装的可执行程序。通常，这个目录
会包含许多程序。
/usr/lib
包含由/usr/bin目录中的程序所用的共享库。
40
---
## Page 42
/usr/local
这个/usr/local目录，是非系统发行版自带程序的安装目
录。通常，由源码编译的程序会安装在/usr/local/bin目录
下。新安装的Linux系统中会存在这个目录，并且在管理员
安装程序之前，这个目录是空的。
/usr/sbin
包含许多系统管理程序。
/usr/share
/usr/share目录包含许多由/usr/bin目录中的程序使用的
共享数据。其中包括像默认的配置文件、图标、桌面背景、
音频文件等等。
/usr/share/doc
大多数安装在系统中的软件包会包含一些文档。在/usr/
share/doc目录下，我们可以找到按照软件包分类的文档。
/var
除了/tmp和/home目录之外，相对来说，目前我们看到的
目录是静态的，这是说，它们的内容不会改变。/var目录存
放的是动态文件。各种数据库，假脱机文件，用户邮件等等，
都位于在这里。
/var/log
这个/var/log目录包含日志文件、各种系统活动的记录。这
些文件非常重要，并且应该时时监测它们。其中最重要的一
个文件是/var/log/messages°注意，为了系统安全，在一些
系统中，你必须是超级用户才能查看这些日志文件。
表4-4:Linux系统中的目录
4.8符号链接
在我们到处查看时，我们可能会看到一个目录，列出像这样的一条信息：
lrvxrvxrux 1 root root 11 2007-08-11 07:34 1ibc.so.6 -> 1ibc2.6.so
注意看，为何这条信息第一个字符是“1”，并且有两个文件名呢？这是一个特殊文件，叫做
符号链接（也称为软链接或者symlink）。在大多数“类Unix”系统中，有可能一个文件被多
个文件名所指向。虽然这种特性的意义并不明显，但它真的很有用。
描绘一下这样的情景：一个程序要求使用某个包含在名为“foo”文件中的共享资源，但是
“foo”经常改变版本号。这样，在文件名中包含版本号，会是一个好主意，因此管理员或者其
41
---
## Page 43
它相关方，会知道安装了哪个“foo”版本。这会导致另一个问题。如果我们更改了共享资源的
名字，那么我们必须跟踪每个可能使用了这个共享资源的程序，当每次这个资源的新版本被安
装后，都要让使用了它的程序去寻找新的资源名。这听起来很没趣。
这就是符号链接存在至今的原因。比方说，我们安装了文件“foo”的2.6版本，它的文件
着，当一个程序打开文件“foo”时，它实际上是打开文件“foo-2.6”。现在，每个人都很高兴。
依赖于“foo”文件的程序能找到这个文件，并且我们能知道安装了哪个文件版本。当升级到
“foo-2.7”版本的时候，仅添加这个文件到文件系统中，删除符号链接“foo”，创建一个指向新
版本的符号链接。这不仅解决了版本升级问题，而且还允许在系统中保存两个不同的文件版
）
们只需要删除指向新版本的符号链接，然后创建指向旧版本的符号键接就可以了。
在上面列出的目录（来自于Fedora的/lib目录）展示了一个叫做“libc.so.6”的符号链接
这个符号链接指向一个叫做“libc-2.6.so”的共享库文件。这意味着，寻找文件“libc.so.6”的
程序，实际上得到是文件“libc-2.6.so”。在下一章节，我们将学习如何建立符号链接。
4.9硬链接
讨论到链接问题，我们需要提一下，还有一种链接类型，叫做硬链接。硬链接同样允许文件有
多个名字，但是硬链接以不同的方法来创建多个文件名。在下一章中，我们会谈到更多符号链
接与硬链接之间的差异问题。
4.10拓展阅读
·完整的Linux文件系统层次体系标准可通过以下链接找到：
http:/ /www.pathname.com/fhs)
12
---
## Page 44
5：
操作文件和目录
此时此刻，我们已经准备好了做些真正的工作！这一章节将会介绍以下命令：
·P一复制文件和目录
·mv一移动/重命名文件和目录
·mkdir一创建目录
·rm一删除文件和目录
·ln一创建硬链接和符号链接
这五个命令属于最常使用的Linux命令之列。它们用来操作文件和目录。
现在，坦诚地说，用图形文件管理器来完成一些由这些命令执行的任务会更容易些。使用文
件管理器，我们可以把文件从一个目录拖放到另一个目录、剪贴和粘贴文件、删除文件等等。
那么，为什么还使用早期的命令行程序呢？
答案是命令行程序，功能强大灵活。虽然图形文件管理器能轻松地实现简单的文件操作，但
是对于复杂的文件操作任务，则使用命令行程序比较容易完成。例如，怎样拷贝一个目录下所
有的HTML文件——这些文件在目标目录不存在或者版本比目标目录的文件更新—到目标目
录呢？要完成这个任务，使用文件管理器相当难，使用命令行相当容易：
cp -u *.htal destination
5.1
通配符
在开始使用命令之前，我们需要介绍一个使命令行如此强大的shell特性。因为shell频繁地使
用文件名，shell提供了特殊字符来帮助你快速指定一组文件名。这些特殊字符叫做通配符。使
43
---
## Page 45
用通配符（也以文件名代换著称）允许你依据字符的组合模式来选择文件名。下表列出这些通
配符以及它们所选择的对象：
通配符
意义
*
匹配任意多个字符（包括零个或一个）
？
匹配任意一个字符（不包括零个）
[characters]
匹配任意一个属于字符集中的字符
[characters]
匹配任意一个不是字符集中的字符
[[:class:]]
匹配任意一个属于指定字符类中的字符
表5-1：通配符
表5-2列出了最常使用的字符类：
字符类
意义
[:alnum:]
匹配任意一个字母或数字
[:alpha:]
匹配任意一个字母
[digit:]
匹配任意一个数字
[:lower:]
匹配任意一个小写字母
[upper:]
匹配任意一个大写字母
表5-2:普遍使用的字符类
借助通配符。为文件名构建非常复杂的选择标准成为可能。下面是一些类型匹配的范例：
模式
匹配对象
*
所有文件
g*
文件名以“g”开头的文件
b*.txt
以"b”开头，中间有零个或任意多个字符。并以"txt”结尾
的文件
Data???
以“Data”开头。其后紧接着3个字符的文件
[abe]*
文件名以"a""b"，或"e”开头的文件
BACKUP.[0-9] [0-
以"BACKUP开头，并紧接着3个数字的文件
[6-0][6