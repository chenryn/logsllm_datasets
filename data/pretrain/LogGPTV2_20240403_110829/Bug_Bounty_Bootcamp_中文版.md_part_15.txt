![[Figure 4-4]{#c04.xhtml#figure4-4} : Burp Suite Community Edition
startup window ¶ 图4-4：Burp
Suite社区版启动窗口](image_fi/501546c04/f04004.png){.keyline}
[ ]{#c04.xhtml#Page_50 .pagebreak title="50"} Now let's configure Burp
so it can work with HTTPS traffic. HTTPS protects your data's privacy by
encrypting your traffic, making sure only the two parties in a
communication (your browser and the server) can decrypt it. This also
means your Burp proxy won't be able to intercept HTTPS traffic going to
and from your browser. To work around this issue, you need to show
Firefox that your Burp proxy is a trusted party by installing its
certificate authority (CA) certificate.
现在让我们配置Burp，以便它可以处理HTTPS流量。
HTTPS通过加密流量来保护您的数据隐私，确保只有通信中的双方（您的浏览器和服务器）才能解密它。这也意味着您的Burp代理将无法拦截您的浏览器发送和接收的HTTPS流量。为了解决这个问题，您需要向Firefox展示您的Burp代理是可信方，方法是安装其证书颁发机构（CA）证书。
Let's install Burp's certificate on Firefox so you can work with HTTPS
traffic. With Burp open and running, and your proxy settings set to
127.0.0.1:8080, go to *http://burp/* in your browser. You should see a
Burp welcome page ( [Figure
4-5](#c04.xhtml#figure4-5){#c04.xhtml#figureanchor4-5} ). Click **CA
Certificate** at the top right to download the certificate file; then
click **Save File** to save it in a safe location.
让我们在Firefox上安装Burp的证书，这样您就可以处理HTTPS流量。在Burp打开和运行，并将代理设置为127.0.0.1：8080的情况下，转到浏览器中的http://burp/。您应该看到Burp欢迎页面（图4-5）。单击右上角的CA证书以下载证书文件；然后单击"另存为"以将其保存在安全位置。
![[Figure 4-5]{#c04.xhtml#figure4-5} : Go to *http://burp/* to download
Burp's CA certificate. ¶
图4-5：访问http://burp/下载Burp的CA证书。](image_fi/501546c04/f04005.png){.keyline}
Next, in Firefox, click **Preferences** [ ▶ ]{.MenuArrow} **Privacy &
Security** [ ▶ ]{.MenuArrow} **Certificates** [ ▶ ]{.MenuArrow} **View
Certificates** [ ▶ ]{.MenuArrow} **Authorities** . Click **Import** and
select the file you just saved, and then click **Open** . Follow the
dialog's instructions to trust the certificate to identify websites (
[Figure 4-6](#c04.xhtml#figure4-6){#c04.xhtml#figureanchor4-6} ).
接下来，在Firefox中，点击Preferences▶Privacy &
Security▶Certificates▶View
Certificates▶Authorities。点击导入并选择刚刚保存的文件，然后点击打开。按照对话框的指示信任证书以识别网站（图4-6）。
![[Figure 4-6]{#c04.xhtml#figure4-6} : Select the ***Trust this CA to
identify websites*** option in Firefox's dialog. ¶
图4-6：在Firefox的对话框中选择信任此CA以识别网站选项。](image_fi/501546c04/f04006.png){.keyline}
Restart Firefox. Now you should be all set to intercept both HTTP and
HTTPS traffic.
重新启动Firefox。现在您已准备好拦截HTTP和HTTPS流量。
Let's perform a test to make sure that Burp is working properly. Switch
to the Proxy tab in Burp and turn on traffic interception by clicking
**Intercept is off** . The button should now read Intercept is on (
[Figure 4-7](#c04.xhtml#figure4-7){#c04.xhtml#figureanchor4-7} ). This
means you're now intercepting traffic from Firefox or the embedded
browser.
让我们执行一个测试，以确保Burp正常工作。在Burp中切换到代理选项卡，并通过单击"拦截关闭"开启流量拦截。按钮现在应该显示"拦截已开启"（图4-7）。这意味着您现在正在拦截来自Firefox或嵌入式浏览器的流量。
[ ]{#c04.xhtml#Page_51 .pagebreak title="51"}
![[Figure 4-7]{#c04.xhtml#figure4-7} : Intercept is on means that you're
now intercepting traffic. ¶
图4-7：截取开启表示您现在正在截取流量。](image_fi/501546c04/f04007.png){.keyline}
Then open Firefox and visit
[https://www.google.com/](https://www.google.com/){.LinkURL} . In Burp's
proxy, you should see the main window starting to populate with
individual requests. The Forward button in Burp Proxy will send the
current request to the designated server. Click **Forward** until you
see the request with the hostname *www.google.com* . If you see this
request, Burp is correctly intercepting Firefox's traffic. It should
begin like this:
然后打开Firefox并访问https://www.google.com/。在Burp的代理中，您应该看到主窗口开始填充个别请求。
Burp Proxy的向前按钮将将当前请求发送到指定的服务器。
点击向前，直到看到主机名www.google.com的请求。
如果您看到此请求，则Burp正确拦截了Firefox的流量。 它应该像这样开始：
    GET / HTTP/1.1
    Host: www.google.com
Click **Forward** to send the request over to Google's server. You
should see Google's home page appear in your Firefox window.
点击"前进"将请求发送到谷歌的服务器。你应该能够在Firefox窗口中看到谷歌的主页出现。
If you aren't seeing requests in Burp's window, you might not have
installed Burp's CA certificate properly. Follow the steps in this
chapter to reinstall the certificate. In addition, check that you've set
the correct proxy settings to 127.0.0.1:8080 in Firefox's Connection
Settings.
如果你在Burp的窗口中没有看到请求内容，可能是没有正确安装Burp的CA证书。请按照本章的步骤重新安装证书。另外，检查一下Firefox的连接设置中是否设置了正确的代理设置：127.0.0.1:8080。
## Using Burp {#c04.xhtml#h1-123456c01-0003}
Burp Suite has a variety of useful features besides the web proxy. Burp
Suite also includes an *intruder* for automating attacks, a *repeater*
for manipulating individual requests, a *decoder* for decoding encoded
content, and a *comparer* tool for comparing requests and responses. Of
all Burp's features, these are the most useful for bug bounty hunting,
so we'll explore them here.
除了网络代理之外，Burp Suite 还有各种有用的功能。Burp Suite
还包括可以自动攻击的 Intruder 工具、可以操作单个请求的 Repeater
工具、可以解码编码内容的解码器以及比较请求和响应的比较器工具。在 Burp
的所有功能中，这些对于漏洞赏金猎人来说最为有用，因此我们将在这里进行探讨。
### [ ]{#c04.xhtml#Page_52 .pagebreak title="52"} The Proxy {#c04.xhtml#h2-123456c01-0004}
Let's see how you can use the Burp *proxy* to examine requests, modify
them, and forward them to Burp's other modules. Open Burp and switch to
the Proxy tab, and start exploring what it does! To begin intercepting
traffic, make sure the Intercept button reads Intercept is on ( [Figure
4-8](#c04.xhtml#figure4-8){#c04.xhtml#figureanchor4-8} ).
让我们看看如何使用Burp代理来检查请求、修改它们并将它们转发到Burp的其他模块。打开Burp并切换到代理选项卡，开始探索它的功能！要开始拦截流量，请确保拦截按钮显示"拦截已开启"(图4-8)。
![[Figure 4-8]{#c04.xhtml#figure4-8} : The Burp Proxy tab shows
Intercept is on. ¶
图4-8：Burp代理标签显示截取已开启。](image_fi/501546c04/f04008.png){.keyline}
When you browse to a site on Firefox or Burp's embedded browser, you
should see an HTTP/HTTPS request appear in the main window. When
intercept is turned on, every request your browser sends will go through
Burp, which won't send them to the server unless you click Forward in
the proxy window. You can use this opportunity to modify the request
before sending it to the server or to forward it over to other modules
in Burp. You can also use the search bar at the bottom of the window to
search for strings in the requests or responses.
当您在Firefox或Burp的嵌入式浏览器中浏览到网站时，您应该会在主窗口中看到一个HTTP/HTTPS请求出现。当截获被打开时，浏览器发送的每个请求都将通过Burp，而Burp不会将它们发送到服务器，除非您在代理窗口中单击"转发"。您可以利用这个机会在发送请求到服务器之前修改请求或将其转发到Burp中的其他模块。您也可以使用窗口底部的搜索栏搜索请求或响应字符串。
To forward the request to another Burp module, right-click the request
and select **Send to** ***Module*** ( [Figure
4-9](#c04.xhtml#figure4-9){#c04.xhtml#figureanchor4-9} ).
右键单击请求，选择发送到模块（图4-9），可将请求转发到另一个Burp模块。
Let's practice intercepting and modifying traffic by using Burp Proxy!
Go to Burp Proxy and turn on traffic interception. Then open Firefox or
Burp's embedded browser and visit
[https://www.google.com/](https://www.google.com/){.LinkURL} . As you
did in the preceding section, click **Forward** until you see the
request with the hostname *www.google.com* . You should see a request
like this one:
让我们通过使用Burp代理来练习拦截和修改流量！转到Burp代理并打开流量拦截。然后打开Firefox或Burp的嵌入式浏览器并访问https://www.google.com/。如同在前面的章节中所做的那样，点击\"转发\"直到你看到主机名为www.google.com的请求。你应该会看到像这样的一个请求：
    GET / HTTP/1.1
    Host: www.google.com
    User-Agent: Mozilla/5.0
    Accept-Language: en-US
    Accept-Encoding: gzip, deflate
    Connection: close
![[Figure 4-9]{#c04.xhtml#figure4-9} : You can forward the request or
response to different Burp modules by right-clicking it. ¶
图4-9：右键单击请求或响应，可以将其转发到不同的Burp模块中。](image_fi/501546c04/f04009.png){.keyline}
Let's modify this request before sending it. Change the
`      Accept-Language     ` header value to `      de     `{.bold} .
让我们在发送之前修改这个请求。将"Accept-Language"头的值更改为"de"。
    GET / HTTP/1.1
    Host: www.google.com
    User-Agent: Mozilla/5.0
    Accept-Language: de
    Accept-Encoding: gzip, deflate
    Connection: close
Click **Forward** to send the request over to Google's server. You
should see Google's home page in German appear in your browser's window
( [Figure 4-10](#c04.xhtml#figure4-10){#c04.xhtml#figureanchor4-10} ).
点击"转发"将请求发送到Google的服务器。您应该在浏览器窗口中看到以德语为主的Google主页（图4-10）。
[ ]{#c04.xhtml#Page_54 .pagebreak title="54"}
![[Figure 4-10]{#c04.xhtml#figure4-10} : Google's home page in German ¶
图4-10：Google在德国的主页](image_fi/501546c04/f04010.png){.keyline}
If you're a German speaker, you could do the test in reverse: switch the
`      Accept-Language     ` header value from `      de     ` to
`      en     ` . You should see the Google home page in English.
Congratulations! You've now successfully intercepted, modified, and
forwarded an HTTP request via a proxy.
如果您是德语说话者，可以反向进行测试：将Accept-Language标头值从de切换到en。您应该会看到英文版的Google首页。恭喜！
您现在已成功拦截、修改和转发代理请求。
### The Intruder {#c04.xhtml#h2-123456c01-0005}
The Burp *intruder* tool automates request sending. If you are using the
Community version of Burp, your intruder will be a limited, trial
version. Still, it allows you to perform attacks like *brute-forcing* ,
whereby an attacker submits many requests to a server using a list of
predetermined values and sees if the server responds differently. For
example, a hacker who obtains a list of commonly used passwords can try
to break into your account by repeatedly submitting login requests with
all the common passwords. You can send requests over to the intruder by
right-clicking a request in the proxy window and selecting **Send to
intruder** .
Burp
intruder工具可以自动发送请求。如果您使用的是Burp的社区版本，那么您的intruder将是一个有限制的试用版本。但是，它可以让您执行像暴力破解这样的攻击，攻击者使用预先确定的值列表向服务器提交许多请求，看看服务器是否会有不同的响应。例如，一个黑客如果获得了一个常用密码的列表，可以通过反复提交所有常用密码的登录请求来尝试入侵您的帐户。您可以通过在代理窗口中右键单击请求并选择发送到intruder来将请求发送到intruder。
The **Target** screen in the intruder tab lets you specify the host and
port to attack ( [Figure
4-11](#c04.xhtml#figure4-11){#c04.xhtml#figureanchor4-11} ). If you
forward a request from the proxy, the host and port will be prefilled
for you.
"Intruder"选项卡中的"目标屏幕"可让您指定攻击的主机和端口（图4-11）。如果您从代理服务器转发请求，主机和端口将自动填充。
![[Figure 4-11]{#c04.xhtml#figure4-11} : You can specify the host and
port to attack on the Target screen. ¶
图4-11：您可以在目标屏幕上指定要攻击的主机和端口。](image_fi/501546c04/f04011.png){.keyline}
The intruder gives several ways to customize your attack. For each
request, you can choose the payloads and payloads positions to use. The
*payloads* are the data that you want to insert into specific positions
in the [ ]{#c04.xhtml#Page_55 .pagebreak title="55"} request. The
*payload positions* specify which parts of the request will be replaced
by the payloads you choose. For example, let's say users log in to
*example.com* by sending a POST request to *example.com/login* . In
Burp, this request might look like this:
入侵者提供了多种方式来定制你的攻击。对于每个请求，你可以选择使用的负载和负载位置。负载是你想要插入到请求特定位置的数据。负载位置指定请求的哪些部分将被你选择的负载替换。例如，让我们假设用户通过发送
POST 请求到 example.com/login 来登录 example.com。在 Burp
中，这个请求可能看起来像这样：
    POST /login HTTP/1.1
    Host: example.com
    User-Agent: Mozilla/5.0
    Accept: text/html,application/xhtml+xml,application/xml
    Accept-Language: en-US
    Accept-Encoding: gzip, deflate
    Connection: close
    username=vickie&password=abc123
The POST request body contains two parameters: `      username     ` and
`      password     ` . If you were trying to brute-force a user's
account, you could switch up the `      password     ` field of the
request and keep everything else the same. To do that, specify the
payload positions in the **Positions** screen ( [Figure
4-12](#c04.xhtml#figure4-12){#c04.xhtml#figureanchor4-12} ). To add a
portion of the request to the payload positions, highlight the text and
click **Add** on the right.
POST请求正文包含两个参数：用户名和密码。如果您试图暴力破解用户的帐户，可以更改请求的密码字段并保持其他内容不变。要做到这一点，请在"位置"屏幕（图4-12）中指定有效载荷位置。要将请求的一部分添加到有效载荷位置，请突出显示文本，然后单击右侧的"添加"。
![[Figure 4-12]{#c04.xhtml#figure4-12} : You can specify the payload
positions in the Positions screen. ¶
图4-12：您可以在位置屏幕中指定有效载荷的位置。](image_fi/501546c04/f04012.png){.keyline}
Then, switch over to the **Payloads** screen ( [Figure
4-13](#c04.xhtml#figure4-13){#c04.xhtml#figureanchor4-13} ). Here, you
can choose payloads to insert into the request. To brute-force a login
password, you can add a list of commonly used passwords here. You can
also, for example, use a list of numbers with which to brute-force IDs
in requests, or use an attack payload list you downloaded from the