 **Config:**
    {
      "presets": [
        "node6",
        "stage-1"
      ],
      "plugins": [
        "babel-plugin-transform-async-to-generator",
        "babel-plugin-syntax-async-functions"
      ]
    }
**Code:**
    class A {
      log() {
        return new Promise(resolve => {
          setTimeout(function () {
            console.log('should print after 1 second');
            resolve();
          }, 1000);
        });
      }
    }
    class B extends A {
      async log() {
        await super.log();
      }
    }
    const b = new B;
    b.log();
**Expected:**
Should dump `should print after 1 second` to screen
**Actual:**
> yield super.log();  
>  ^^^^^  
>  SyntaxError: 'super' keyword unexpected here
**Issue:**
The issue is that an `await` statement is wrapped like this...
    let B = class B extends A {
      log() {
        return _asyncToGenerator(function* () {
          yield super.log(); // <--- `super` loses its context
        })();
      }
    };
This fixes it:
    let B = class B extends A {
      log() {
        const fn = super.log.bind(this);
        return _asyncToGenerator(function*() {
          yield fn.call();
        })();
      }
    };