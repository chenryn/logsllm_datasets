### 第二章 Mifare Classic Card介绍

#### 第三节 Crypto-1加密演算法

##### 二、PRNG（Pseudo-random Number Generator）伪乱数产生器
- **n位元的LFSR**：变化周期最大为 \(2^n - 1\) 种。
- **suc(x0x1...x31)**：定义为 \(x1x2...x31 \oplus (x16x17...x31) \oplus (x0x1...x15)\)
- **L(x0x1...x15)**：定义为 \(x0 \oplus x2 \oplus x3 \oplus x5\)

##### 三、Filter Function
- **48位元LFSR**
- **f(a), f(b), f(c)**：用于生成密钥串流

##### 四、同位元（Parity Bit）
- **数据结构**：
  ```
  0 1 2 3 4 5 6 7 P 0 1 2 3 4 5 6 7
  1 2 3 4 5 6 7 P 0 1 2 3 4 5 6 7
  0 1 2 3 4 5 6 7
  0 1 2 3 4 5 6 7
  0 1 2 3 4 5 6 7
  1 2 3 4 5 6 7
  0
  明文
  密钥串流
  ```

##### 五、Crypto-1演算法加密过程
1. **初始状态设定**
   - **Crypto-1 Key**
   - **Keystream**
   - **Nt**
   - **UID**

2. **Nr加密**
   - **Nr** 加密后得到 **{Nr}**

3. **Tag产生Ar、At前的Crypto-1状态**
   - **加密{Nr}**

4. **Reader产生Ar、Tag产生At的密文**
   - **Suc2(Nt)**
   - **Suc3(Nt)**
   - **Halt**
   - **Nack**
   - **keystream**
   - **{Ar}, {At}, {Halt}, {Nack}**

#### 第四节 Mifare Classic Card弱点

##### 一、密钥串流之取得
- **Reader** 和 **Tag** 之间的通信包括 **UID, Nt, {Ar}, {At}, {Halt}, {Nack}**

##### 二、LFSR Rollback
- **R(x1x2...x47 L(x0x1...x47)) = x0**

##### 三、Inputs to Filter Function
- **48位元LFSR**
- **Filter Function**
  - **1 bit** 可以推导出 **20 bit** 的奇偶位元
  - **连续2个bit** 则可以推导出 **21 bit** 的奇偶位元

##### 四、Parity Bit
- **数据结构**：
  ```
  0 1 2 3 4 5 6 7 P 0 1 2 3 4 5 6 7
  0 1 2 3 4 5 6 7
  0 1 2 3 4 5 6 7
  明文
  密钥串流
  已知
  {0} {1} {2} {3} {4} {5} {6} {7} {P} {0} {1} {2} {3} {4} {5} {6} {7}
  密文
  ```

##### 五、Nested Authentications
- **Nt0**
- **{Nt1}**
- **Nt1 ⊕ {Nt1} => 密钥串流**
- **Nt**：有 \(2^{16} - 1\) 种变化

### 第三章 Mifare Classic Card现有攻击方式

##### 窃听攻击法
- **Reader** 和 **Tag** 之间的通信包括 **UID, Nt, {Nr}, {Ar}, {At}**
  1. 使用 **Nt, {At}, {Halt}, {Ar}** 计算 **ks3, ks2**
  2. 使用 **{Nr}** 计算 **ks1, Nr**
  3. 使用 **Nr** 回推 **state**
  4. 使用 **UID, Nt** 回推 **Key**

##### {Nr}差分攻击法
- **{Nr}**
- **固定的LFSR差异**
- **金钥**

##### 攻击工具
1. **CRYPTO1 lib**
   - 主要针对 **CRYPTO1** 加密算法编写，通过该程序可以解出 **Key** 的内容。
   - 示例：`UID = 0x9c599b32; Nt = 0x82a4166c; {Nr} = 0xa1e458ce; {Ar} = 0x6eea41e0; {At} = 0x5cadf439;`
   - 计算出 **Key** 为 `ffffffffffff`

2. **MFCUK：Mifare Classic Universal toolkit**
   - 包含相关的范例和各种使用在 **Libnfc** 和 **Crypto-1** 的工具。
   - 针对 **Mifare Classic** 卡的弱点，并参考了相关论文的攻击方式。

3. **MfOC (Mifare Classic Offline Cracker)**
   - **NFC** 工具之一，利用 **Nested Authentication** 还原 **Mifare Classic** 卡片的密钥。
   - 只要知道某个 **Sector** 的密钥及 **Nt**，就可以还原其他 **Sector** 的密钥。

4. **Libnfc [NFC10]**
   - 使 **NFC** 设备可以进行相关模拟，可以模拟 **Mifare Classic** 卡片认证的过程。
   - 自由软件，开放源代码，可以根据需求进行修改。

5. **Proxmark 3**
   - 可以用于任何类型的低频（125 KHz）或高频（13.56 MHz）的 **RFID** 设备。
   - 可以模拟成卡片或读卡机，窃听读卡机和卡片之间的通信过程，并分析接收的信号。

### Mifare Classic模拟

##### 卡片内存说明
- **Sector 0**：卡片基本资料（卡片 **UID**）
- **Sector 1**：卡片认证及管理的资料
- **Sector 2**：卡片的余额
- **Sector 3**：最近2次交易的记录
- **Sector 4**：最近6次使用记录1-3
- **Sector 5**：最近6次使用记录4-6
- **Sector 6**：公车使用记录
- **Sector 7**：最后进出站记录
- **Sector 14**：大学学生资料
- **Sector 15**：小额付款每日花费最大金额
- **Sector 8-13**：空白（保留）

```
Data Block
Sector
0-3    0
4-7    1
8-11   2
12-15  3
16-19  4
20-23  5
24-27  6
28-31  7
32-35  8
36-39  9
40-43  10
```