When running unit tests with Node.js and using injection in `beforeEach`, I encountered the following error:

```
TypeError: Cannot read property 'getXHR' of null
    at _runtimeCompilerBindings (angular2/src/testing/test_injector.ts:129:32)
    at Object.createTestInjectorWithRuntimeCompiler (angular2/src/testing/test_injector.ts:141:48)
    at Object.<anonymous> (angular2/src/testing/testing.ts:247:20)
```

This error occurs because the DOM is not available in a Node.js environment, leading to `DOM` being `null`.

The problematic code snippet is as follows:

```javascript
function _runtimeCompilerBindings() {
  return [
    provide(XHR, {useClass: DOM.getXHR()}),
    COMPILER_PROVIDERS,
  ];
}
```

### Suggested Solution

To resolve this issue, you can use a different XHR implementation that is compatible with Node.js. One common approach is to use a mock or a polyfill for the XHR object.

Hereâ€™s an example of how you can modify the `_runtimeCompilerBindings` function to use a mock XHR implementation:

```javascript
const MockXHR = class MockXHR {
  // Implement the necessary XHR methods here
};

function _runtimeCompilerBindings() {
  return [
    provide(XHR, { useClass: MockXHR }),
    COMPILER_PROVIDERS,
  ];
}
```

By providing a mock XHR implementation, you can avoid the `TypeError` and ensure that your tests run correctly in a Node.js environment.