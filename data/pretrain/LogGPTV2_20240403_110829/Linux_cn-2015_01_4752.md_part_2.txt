![](/data/attachment/album/201501/26/211853yl3kppftilsk5ayu.jpg)
显然你需要一个Evernote账号来完成这些，因此先去注册吧。
完成这些之后，你就可以开始创建新的笔记并编辑它们了。
不过首先，你还需要设置你最喜欢的文本编辑器：
```
$ geeknote settings --editor vim 
```
然后，一般创建一条新笔记的语法是：
```
$ geeknote create --title [title of the new note] (--content [content] --tags [comma-separated tags] --notebook [comma-separated notebooks]) 
```
上面的命令中，只有‘title’是必须的，它会与一条新笔记的标题相关联。其他的标注可以为笔记添加额外的元数据：添加标签来与你的笔记关联、指定放在那个笔记本里。同样，如果你的标题或者内容中有空格，不要忘记将它们放在引号中。
比如:
```
$ geeknote create --title "My note" --content "This is a test note" --tags "finance, business, important" --notebook "Family" 
```
然后，你可以编辑你的笔记。语法很相似：
```
$ geeknote edit --note [title of the note to edit] (--title [new title] --tags [new tags] --notebook [new notebooks]) 
```
注意可选的参数如新的标题、标签和笔记本，用来修改笔记的元数据。你也可以用下面的命令重命名笔记：
```
$ geeknote edit --note [old title] --title [new title] 
```
现在基本的创建和编辑已经完成了，更高级的特性是搜索和删除。你可以下面的语法搜索你的笔记：
```
$ geeknote find --search [text-to-search] --tags [comma-separated tags] --notebook [comma-separated notebooks] --date [date-or-date-range] --content-search 
```
默认地上面的命令会通过标题搜索笔记。 用"--content-search"选项，就可以按内容搜索。
比如：
```
$ geeknote find --search "*restaurant" --notebooks "Family" --date 31.03.2014-31.08.2014 
```
显示指定标题的笔记：
```
$ geeknote show [title] 
```
![](/data/attachment/album/201501/26/211857l5lml27nlxde1155.jpg)
我最喜欢使用的一个技巧是使用：
```
$ geeknote show "*" 
```
这会显示所有的笔记并允许你在这中选择一个。
删除一条笔记：
```
$ geeknote remove --note [title] 
```
小心这是真正的删除。它会从云存储中删除这条笔记。
最后有很多的选项来管理标签和笔记本。我想最有用的就是显示笔记本列表。
```
$ geeknote notebook-list 
```
![](/data/attachment/album/201501/26/211859rhhwxdmxpp5nau9n.jpg)
下面的命令非常相像。你可以猜到，可以用下面的命令列出所有的标签：
```
$ geeknote tag-list 
```
创建一个笔记本：
```
$ geeknote notebook-create --title [notebook title] 
```
创建一个标签：
```
$ geeknote tag-create --title [tag title] 
```
一旦你了解了窍门，很明显这些语法是非常自然明确的。
如果你想要了解更多，不要忘记查看[官方文档](http://www.geeknote.me/documentation/)。
### 福利
作为福利，Geeknote自带的gnsync工具可以让你在Evernote和本地计算机之间同步。不过，我发现它的语法有点枯燥：
```
$ gnsync --path [where to sync] (--mask [what kind of file to sync] --format [in which format] --logpath [where to write the log] --notebook [which notebook to use]) 
```
下面是这些参数的意义。
* **--path /home/adrien/Documents/notes/**: 与Evernote同步笔记的位置。
* **--mask "\*.txt"**: 只同步纯文本文件。默认gnsync会尝试同步所有文件。
* **--format markdown**: 你希望它们是纯文本或者markdown格式（默认是纯文本）。
* **--logpath /home/adrien/gnsync.log**: 同步日志的位置。为防出错，gnsync会在那里写入日志信息。
* **--notebook "Family"**: 同步哪个笔记本中的笔记。如果留空，程序会创建一个以你同步文件夹命令的笔记本。
总的来说，Geeknote是一款漂亮的Evernote的命令行客户端。我个人不常使用Evernote，但它仍然很漂亮和有用。命令行一方面让它变得很极客且很容易与shell脚本结合。此外，在Git上还有Geeknote的一个分支项目，在ArchLinux AUR上称为[geeknote-improved-git](https://aur.archlinux.org/packages/geeknote-improved-git/)，貌似它有更多的特性和比其他分支更积极的开发。我觉得值得去看看。
你认为Geeknote怎么样？ 有什么你想用的么？或者你更喜欢使用传统的程序？在评论区中让我们知道。
---
via: 
作者：[Adrien Brochard](http://xmodulo.com/author/adrien) 译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出