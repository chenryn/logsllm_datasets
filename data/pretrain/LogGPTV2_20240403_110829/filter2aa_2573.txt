考勤机的管理方式
本
地
管
理
局
域
网
管
理
互
联
网
管
理
星耀实验室是斗象科技网络安全发展战略的重要组成，
星耀之名取自《山海经》中的星耀独角兽，实验室专
注于前沿创新的安全技术的研究，覆盖包括红蓝对抗、
漏洞挖掘、IoT及移动安全等各安全细分领域，通过研
究积累和内部研发，为公司安全能力支撑保驾护航。
设备的外部通信
从简化后的通信架构来看，我们对设备的漏洞
挖掘可以从设备与云端的通信、以及设备与用
户的通信这两方面入手
流量分析
设备启动后会主动连接到
tls.*****.com
但是没有校验
服务器的证书
流量分析
设备=>云端
云端=>设备
设备向云端上传了自身的信息，
包括固件版本和操作系统类型
云端返回的数据中包含了大
量不明意义的二进制数据
设备采用了FreeRTOS系统，首先考虑植入恶意固件
但是修改这里的固件版本无法触发OTA
继续分析设备与云端的通信意义不大
BLE通信分析
移动端
(Android)
App Log
开启ADB即可获
取日志
需要App打印BLE通信
相关Log
Hook关键API
Hook系统关键
API即可，通用
性强
需要熟悉移动安全相
关知识
通信信道
空口嗅探
硬件软件都有现
成的解决方案
无法处理加密通信
设备端
调试设备
无奈之选
需要分析固件，并开
启设备调试接口
BLE通信分析
针对本考勤机的情况，最简单的方法是
直接嗅探通信，通信内容均以明文传输，
通过分析可以知道通信数据的大体结构
BLE通信分析
用户在App中可以执行的操作、与设备可以执行的命令对应关系如下
激活/绑定：
getActiveInfo -> getWifiInfo -> 
connectWifi -> active
切换WiFi：
getWifiInfo -> handshake -> 
connectWifi
重置设备：
resetDevice
获取设备状态
getActiveInfo
获取设备扫描的WiFi列表
getWifiInfo
控制设备连接到指定WiFi
connectWifi
通知设备进行绑定操作
active
握手命令，用于身份认证
handshake
重置设备
resetDevice
重置设备时没有使用handshake进行身份认证，
所以通过BLE通信可以未授权重置设备
一点小插曲
实际上我们是通过调试设备来获取BLE通信数据的
MCU提供了SDK及
示例代码，可以
用来分析BLE协议
栈的使用方式
示例代码中有一部分日志，这些字符串
在固件中同样也出现了，通过交叉引用
可以确定固件中BLE协议栈的相关代码
一点小插曲
一点小插曲
使用gdb调试脚本，在关键代码处下断点
并以hexdump的形式输出BLE通信数据
至此，我们发现可以在不需要任何前置条件的情况下，进行中间人攻击
未授权重置
设备
未校验TLS
证书
？？？
劫持设备连接到指
定WiFi
那么控制了云端与设备之间的通信后，有何危害
要解答这个问题，需要先对设备固件进行分析
MITM篡改通
信数据
拆解设备
PCF8563
RTC芯片
GD25Q128
128M-bit Flash芯片
ESP32
MCU，xtensa架构
ESP32
GD25Q128
PCF8563
UART
拆解设备
ESP32需要Flash遵守固定的分区格式[1]
结合串口打印的数据，提取ota_0分区
使用IDA加载ota_0分区[2]
拆解设备
TDI
TDO
TCLK
TMS
GND
VDD
可以使用JTAG调试
ESP32[3]，但是会在执行
到某一条命令后中断
拆解设备
多次尝试后发现I2C接口初始化
完成后就会中断JTAG调试
由芯片手册可以发现，JTAG接口的TDO
引脚可以复用作I2C的SDA引脚
PCF8563芯片使
用了I2C接口
跳过I2C初始化之后，设备可以正常调试，但是
获取不到正确的日期时间
准备工作完成，可以开始分析固件了
分析固件
从字符串入手逆向OTA流程
分析固件
被动等待设备进行OTA
查询耗时太长，
故考虑通过调试触发
OTA更新
OTA查询请求每隔一小时触发一次
分析固件
通过调试触发OTA流程
由atmStateSync请求查询云端是否有新版本固件
(1)设备发送给云端的的设备固件版本号
(2)云端最新的固件版本
(3)OTA镜像的URL
(4)OTA镜像的MD5校验
(1)
(2)
(3)
(4)
分析固件
启动固件更新需要两个条件满足其一
分析固件
通过HTTP请求获取固件
HTTP Response Header中需包含OTA镜像长度、MD5校验值
和Content-Type
分析固件
通过MD5检查后，还需要检查OTA镜像的hash值，
检查通过后镜像会被写入OTA分区
分析固件
启动时bootloader读取OTA分区并进行校验
利用设备的OTA功能
我们有了一条完整的漏洞链
未授权重
置设备
未校验
TLS证书
植入恶意
固件
劫持设备连接到
指定WiFi
MITM篡改
通信数据
顺便还有一个不太好利用[4]的栈溢出
content_type = strstr(httpRspHeader, “Content-Type”)
sscanf(content_type, “%*s %s”, sp + 4)
[1]ESP32的Flash分区：
docs.espressif.com/projects/espressif-esp-moonlight/zh_CN/latest/firmwareupgrade.html
[2]IDA加载ESP32程序镜像的插件：github.com/jrozner/esp-image-ida
   xtensa架构的反汇编插件：github.com/themadinventor/ida-xtensa
[3]使用JTAG接口调试ESP32：
docs.espressif.com/projects/esp-idf/zh_CN/v4.2/esp32/api-guides/jtag-debugging/index.html
[4]ESP32的Register Window机制及栈溢出的利用：emb-team.com/exploiting-vulnerabilities-on-xtensa/
[5]