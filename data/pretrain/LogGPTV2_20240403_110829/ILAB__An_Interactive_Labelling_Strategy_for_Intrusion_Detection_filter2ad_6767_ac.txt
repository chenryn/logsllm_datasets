### 图4. 标注策略比较：Contagio 10%（左侧）与NSL-KDD 10%（右侧）

#### 家族检测
图4a展示了在标注过程中，不确定性采样和Görnitz等人的标注策略遗漏了许多家族。这两种标注策略都存在采样偏差。Görnitz等人的标注策略依赖于k-近邻算法来检测未知的恶意家族，但仅限于决策边界附近，因此许多远离决策边界的家族未能被发现。他们的策略在两个数据集上对发现未知家族的效果不佳。

ILAB将部分标注预算用于检测未知家族，因此Aladin比ILAB检测到稍多一些家族。ILAB查询了一些高似然实例，这些实例不太可能属于新家族，但它们有助于在迭代过程中持续提升检测性能（见图4b）。

ILAB和Aladin在两个数据集的迭代过程中发现的家族数量大致相同。这些标注策略有效避免了采样偏差。它们设计用于检测稀有类别，并且能够在两个数据集中发现几乎所有家族。

#### 检测性能
图4b显示了验证数据集上的AUC（曲线下面积）随迭代次数的变化。可以看出，在两个数据集上，ILAB的性能优于其他标注策略。

Görnitz等人的标注策略在Contagio 10%数据集上的表现非常差。尽管在第一次迭代中检测性能有所提升，但在添加新的标注实例后，性能却不断下降。这种异常行为可以归因于SVDD检测模型的简单性，无法正确区分良性与恶意实例。数据的几何结构使得SVDD无法在一个球体内将良性实例与恶意实例隔离开。在NSL-KDD 10%数据集上也观察到了类似但不那么明显的行为。解决这一问题的方法是使用核函数训练SVDD以增加模型复杂度。然而，这将显著增加执行时间，而当前的执行时间已经过高，无法保证良好的专家-模型交互（见图4c）。

在NSL-KDD 10%数据集上，Görnitz等人的标注策略初始表现优于其他策略。由于采用了半监督学习，Görnitz等人不仅使用20个初始标注实例训练检测模型，还使用了所有未标注池中的实例。然而，在Contagio 10%数据集上，Görnitz等人的半监督检测模型并不如逻辑回归模型有效。SVDD假设未标注实例大多是良性的，因此未标注池中的恶意实例可能会损害检测模型的性能。

不确定性采样在NSL-KDD 10%数据集的前几次迭代中表现出色，因为它将全部标注预算用于细化决策边界。相反，ILAB将90%的标注预算用于检测稀有类别以避免采样偏差。最终，不确定性采样会因为采样偏差而导致性能较差。

在Contagio 10%数据集的前几次迭代中，不确定性采样和Aladin的检测性能都有所下降。这种不良行为是由于采样偏差造成的：非代表性实例被查询并添加到训练数据集中，导致检测模型无法很好地泛化。不确定性采样查询的是靠近决策边界的难以分类的实例，但它们不一定代表恶意或良性行为。Aladin只查询不确定性和低似然实例，这些实例也不一定代表恶意或良性行为。ILAB通过将部分标注预算分配给高似然实例来获取每个家族的代表性示例，从而解决了这个问题。因此，检测性能在迭代过程中持续提升。

#### 可扩展性
图4c展示了每次迭代的查询生成执行时间（以秒为单位）。Görnitz等人的查询生成算法非常慢。对于NSL-KDD 10%数据集，专家需要等待超过10分钟才能进行下一次迭代。三分之一的执行时间用于计算半监督SVDD模型，剩余三分之二的时间用于k-近邻算法。即使在包含少于100,000个实例的数据集上，Görnitz等人的标注策略执行时间也过高，无法保证良好的专家-模型交互。

ILAB的执行时间与不确定性采样相当。对于NSL-KDD 10%数据集，专家每次迭代只需等待不到1分钟。相比之下，Aladin的执行时间随着新实例的添加和新家族的发现而急剧增加。Aladin对所有实例运行稀有类别检测，而ILAB则分别对恶意和良性实例进行检测。ILAB的分治方法减少了执行时间，因为在较小的数据集上运行稀有类别检测两次比在整个数据集上运行更快。Aladin的作者意识到了这个高执行时间的问题。在他们的实验中，专家每天被要求标注1000个实例，新的标注查询则在夜间计算。这种方法减少了专家的等待时间，但显著影响了专家-模型交互，因为专家反馈只能每天集成一次。

总之，不确定性采样和Görnitz等人的标注策略都存在采样偏差。只有Aladin和ILAB能够通过在家族级别进行稀有类别检测来避免采样偏差（见图4a）。ILAB的主要优势在于其分治方法，显著减少了执行时间（见图4c），从而改善了专家-模型交互。我们的比较表明，ILAB既是一种有效的标注策略，也是一种可扩展的标注策略，适用于实际标注项目。

### 实际标注项目：NetFlow数据

本节中，我们在一个来自生产环境的大规模未标注NetFlow数据集上部署ILAB。

**NetFlow**：正如[5]所述，“NetFlow是Cisco提出并实现的一种网络协议，用于将网络流量总结为一系列网络流。流被定义为共享特定网络属性（如源/目的IP地址、TCP或UDP端口等）的一系列单向数据包。”每个流由属性和统计信息描述：源和目的IP地址、源和目的端口、协议（TCP、UDP、ICMP、ESP等）、开始和结束时间戳、字节数、数据包数以及TCP流的TCP标志汇总。

| 数据集 | 流数量 | IP地址数量 | 特征数量 | TRW警报数量 |
| --- | --- | --- | --- | --- |
| NetFlow数据集 | 1.2 × 10^8 | 463,913 | 134 | 70 |

**数据集和特征**：这些流记录在受保护网络的边界处。我们计算描述每个外部IP地址与受保护网络通信的特征，基于其在给定时间窗口内的流。