---
author: Aaron Kili
category: 技术
comments_data:
- date: '2017-02-17 11:41:39'
  message: 顶一下，挺全的。
  postip: 218.17.122.82
  username: 何亮 [Chrome 56.0|Windows 7]
- date: '2017-02-17 22:31:35'
  message: 第一天进入社区学习，仔细的看完了12条命令，顶一下！
  postip: 61.167.60.239
  username: ZHENGHUI [Baidu Spark 8.4|Windows 10]
count:
  commentnum: 2
  favtimes: 13
  likes: 0
  sharetimes: 1
  viewnum: 13325
date: '2017-02-17 09:00:00'
editorchoice: false
excerpt: 在这篇文章中，我们将会看一些 Linux 中的过滤器命令行工具。过滤器是一个程序，它从标准输入读取数据，在数据上执行操作，然后把结果写到标准输出。
fromurl: http://www.tecmint.com/linux-file-operations-commands/
id: 8216
islctt: true
largepic: /data/attachment/album/201702/17/002023ddfo707fo4ma0dmy.jpg
permalink: /article-8216-1.html
pic: /data/attachment/album/201702/17/002023ddfo707fo4ma0dmy.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 在这篇文章中，我们将会看一些 Linux 中的过滤器命令行工具。过滤器是一个程序，它从标准输入读取数据，在数据上执行操作，然后把结果写到标准输出。
tags:
- 过滤
thumb: false
title: Linux 上 12 个高效的文本过滤命令
titlepic: true
translator: yangmingming
updated: '2017-02-17 09:00:00'
---
在这篇文章中，我们将会看一些 Linux 中的过滤器命令行工具。过滤器是一个程序，它从标准输入读取数据，在数据上执行操作，然后把结果写到标准输出。
因此，它可以用来以强大的方式处理信息，例如重新结构化输出以生成有用的报告，修改文件里面的文本，以及其他很多系统管理任务。
![](/data/attachment/album/201702/17/002023ddfo707fo4ma0dmy.jpg)
下面是 Linux 上的一些有用的文件或者文本过滤器。
### 1、 awk 命令
[awk](https://linux.cn/tag-awk.html) 是一个卓越的模式扫描和处理语言，它可被用于在 Linux 下构造有用的过滤器。你可以通过阅读我们的 [awk 系列 1 到 13 部分](/article-7586-1.html) 来开始使用它。
另外，也可以通过阅读 **awk** 的 man 手册来获取更多的信息和使用选项。
```
$ man awk
```
### 2、 sed 命令
[sed](https://linux.cn/tag-sed.html) 是一款过滤和转换文本的强大的流编辑器。我们已经写了两篇关于 sed 的有用的文章，你可以通过这儿来了解：
* [如何使用 GNU sed 命令在 Linux 下创建、编辑和处理文件](/article-7161-1.html)
* [日常 Linux 系统管理员任务使用的 15 个有用的 sed 命令小贴士和技巧](http://www.tecmint.com/linux-sed-command-tips-tricks/)
sed 的 man 手册已经添加控制选项和说明：
```
$ man sed
```
### 3、 grep、 egrep、 fgrep、 rgrep 命令行
这些过滤器输出匹配指定模式的行。它们从一个文件或者标准输入读取行，并且输出所有匹配的行，默认输出到标准输出。
**注意**：主程序是 [grep](https://linux.cn/tag-grep.html)，这些变体与[使用特定的选项的 grep](http://www.tecmint.com/linux-grep-commands-character-classes-bracket-expressions/) 相同，如下所示（为了向后兼容性，它们依旧在使用）：
```
$ egrep = grep -E
$ fgrep = grep -F
$ rgrep = grep -r  
```
下面是一些基本的 grep 命令：
```
tecmint@TecMint ~ $ grep "aaronkilik" /etc/passwd
aaronkilik:x:1001:1001::/home/aaronkilik:
tecmint@TecMint ~ $ cat /etc/passwd | grep "aronkilik"
aaronkilik:x:1001:1001::/home/aaronkilik:
```
在 [Linux 下的 grep、 egrep 和 fgrep 的差异？](http://www.tecmint.com/difference-between-grep-egrep-and-fgrep-in-linux/)中，你可以了解更多。
### 4、 head 命令
**head** 用于显示文件前面的部分，默认情况下它输出前 **10** 行。你可以使用 `-n` 标志来指定显示的行数：
```
tecmint@TecMint ~ $ head /var/log/auth.log  
Jan  2 10:45:01 TecMint CRON[3383]: pam_unix(cron:session): session opened for user root by (uid=0)
Jan  2 10:45:01 TecMint CRON[3383]: pam_unix(cron:session): session closed for user root
Jan  2 10:51:34 TecMint sudo:  tecmint : TTY=unknown ; PWD=/home/tecmint ; USER=root ; COMMAND=/usr/lib/linuxmint/mintUpdate/checkAPT.py
Jan  2 10:51:34 TecMint sudo: pam_unix(sudo:session): session opened for user root by (uid=0)
Jan  2 10:51:39 TecMint sudo: pam_unix(sudo:session): session closed for user root
Jan  2 10:55:01 TecMint CRON[4099]: pam_unix(cron:session): session opened for user root by (uid=0)
Jan  2 10:55:01 TecMint CRON[4099]: pam_unix(cron:session): session closed for user root
Jan  2 11:05:01 TecMint CRON[4138]: pam_unix(cron:session): session opened for user root by (uid=0)
Jan  2 11:05:01 TecMint CRON[4138]: pam_unix(cron:session): session closed for user root
Jan  2 11:09:01 TecMint CRON[4146]: pam_unix(cron:session): session opened for user root by (uid=0)
tecmint@TecMint ~ $ head  -n 5 /var/log/auth.log  
Jan  2 10:45:01 TecMint CRON[3383]: pam_unix(cron:session): session opened for user root by (uid=0)
Jan  2 10:45:01 TecMint CRON[3383]: pam_unix(cron:session): session closed for user root
Jan  2 10:51:34 TecMint sudo:  tecmint : TTY=unknown ; PWD=/home/tecmint ; USER=root ; COMMAND=/usr/lib/linuxmint/mintUpdate/checkAPT.py
Jan  2 10:51:34 TecMint sudo: pam_unix(sudo:session): session opened for user root by (uid=0)
Jan  2 10:51:39 TecMint sudo: pam_unix(sudo:session): session closed for user root
```
学习如何 [使用带有 tail 和 cat 命令的 head 命令](http://www.tecmint.com/view-contents-of-file-in-linux/)，以便在 Linux 下更有效的使用。
### 5、 tail 命令
**tail** 输出一个文件的后面的部分（默认 **10** 行）。使用 `-n` 选项来指定显示的行数。
下面的命令将会输出指定文件的最后 5 行：
```
tecmint@TecMint ~ $ tail -n 5 /var/log/auth.log
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on 0.0.0.0 port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on :: port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Received SIGHUP; restarting.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on 0.0.0.0 port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on :: port 22.
```
另外，**tail** 有一个特殊的选项 `-f` ，可以 [实时查看一个文件的变化](http://www.tecmint.com/fswatch-monitors-files-and-directory-changes-modifications-in-linux/) （尤其是日志文件）。
下面的命令将会使你能够监控指定文件的变化：
```
tecmint@TecMint ~ $ tail -f /var/log/auth.log
Jan  6 12:58:01 TecMint sshd[1269]: Server listening on :: port 22.
Jan  6 12:58:11 TecMint sshd[1269]: Received SIGHUP; restarting.
Jan  6 12:58:12 TecMint sshd[1269]: Server listening on 0.0.0.0 port 22.
Jan  6 12:58:12 TecMint sshd[1269]: Server listening on :: port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Received SIGHUP; restarting.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on 0.0.0.0 port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on :: port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Received SIGHUP; restarting.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on 0.0.0.0 port 22.
Jan  6 13:01:27 TecMint sshd[1269]: Server listening on :: port 22.
```
阅读 tail 的 man 手册，获取使用选项和说明的完整内容：
```
$ man tail
```
### 6、 sort 命令
[sort](https://linux.cn/tag-sort.html) 用于将文本文件或标准输入的行进行排序。
下面是一个名为 domain.list 的文件的内容：
```
tecmint@TecMint ~ $ cat domains.list
tecmint.com
tecmint.com
news.tecmint.com
news.tecmint.com
linuxsay.com
linuxsay.com
windowsmint.com
windowsmint.com
```
你可以像这样运行一个简单的 [sort 命令](https://linux.cn/tag-sort.html) 来排序文件内容：
```
tecmint@TecMint ~ $ sort domains.list
linuxsay.com
linuxsay.com
news.tecmint.com
news.tecmint.com
tecmint.com
tecmint.com
windowsmint.com
windowsmint.com
```
你可以有多种方式来使用 sort 命令，请参阅以下一些关于 sort 命令的有用的文章。
* [Linux 的 ‘sort’命令的14个有用的范例（一）](/article-5372-1.html)
* [Linux 的 'sort'命令的七个有趣实例（二）](/article-5373-1.html)
* [如何基于修改日期和时间来查找和排序文件](http://www.tecmint.com/find-and-sort-files-modification-date-and-time-in-linux/)
### 7、 uniq 命令