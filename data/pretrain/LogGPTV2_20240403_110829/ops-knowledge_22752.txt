User: 如何使用Python编写脚本来监控AWS EC2实例的CPU和内存利用率？
Assistant: 要使用Python编写脚本来监控AWS EC2实例的CPU和内存利用率，可以使用AWS SDK for Python（Boto3）来获取实例的指标数据。以下是基本步骤：

1. 安装AWS SDK for Python（Boto3）：

```
pip install boto3
```

2. 配置AWS凭证：

要使用Boto3访问AWS资源，需要配置访问凭证。可以使用AWS CLI配置凭证或使用IAM角色。更多详情请参阅AWS文档：https://docs.aws.amazon.com/sdk-for-python/v1/developer-guide/credentials.html

3. 获取EC2实例ID：

需要获取要监控的EC2实例ID。可以在AWS控制台中找到实例的ID，或使用Boto3获取。例如：

```
import boto3

ec2 = boto3.resource('ec2')
instances = ec2.instances.filter(Filters=[{'Name': 'instance-state-name', 'Values': ['running']}])

for instance in instances:
    print(instance.id)
```

4. 获取CPU和内存指标数据：

可以使用Boto3的CloudWatch客户端来获取EC2实例的CPU和内存指标数据。以下是获取实例CPU利用率的代码示例：

```
import boto3
from datetime import datetime, timedelta

cloudwatch = boto3.client('cloudwatch')

instance_id = 'your-instance-id'
metric_name = 'CPUUtilization'
namespace = 'AWS/EC2'
period = 300
end_time = datetime.utcnow()
start_time = end_time - timedelta(hours=1)

response = cloudwatch.get_metric_statistics(
    Namespace=namespace,
    MetricName=metric_name,
    Dimensions=[{'Name': 'InstanceId', 'Value': instance_id}],
    StartTime=start_time,
    EndTime=end_time,
    Period=period,
    Statistics=['Average']
)

print(response['Datapoints'][-1]['Average'])
```

要获取实例的内存指标数据，可以使用MetricName为MemoryUsage。其他参数与获取CPU指标数据时相同。

5. 生成报告或发送警报：

在获取实例的CPU和内存利用率数据后，可以编写脚本来生成报告或发送警报，以便及时发现问题并采取相应措施。报告和警报可以通过电子邮件、Slack等方式发送。