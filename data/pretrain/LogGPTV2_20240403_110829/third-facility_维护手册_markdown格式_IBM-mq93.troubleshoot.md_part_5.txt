### Troubleshooting IBM MQ: Queue and Application Issues

#### 1. Queue Manager and Process Checks
If you cannot find any issues with the queue and the queue manager is running, perform the following checks on the process that should have put the message on the queue:

- **Application Start**: 
  - Did the application start? If it should have been triggered, verify that the correct trigger options were specified.
  - Is a trigger monitor running?
  - Was the trigger process defined correctly?
  - Did the application complete successfully? Check the job log for any signs of an abnormal end.
  - Did the application commit its changes, or were they rolled back?

- **Transaction Conflicts**:
  - If multiple transactions are serving the queue, they might occasionally conflict with one another. For example, one transaction might issue an `MQGET` call with a buffer length of zero to determine the message length, and then issue a specific `MQGET` call specifying the `MsgId` of that message. However, in the meantime, another transaction might have issued a successful `MQGET` call for that message, resulting in the first application receiving an `MQRC_NO_MSG_AVAILABLE` completion code.
  - Applications designed to run in a multi-server environment must handle such conflicts.

- **Message Processing**:
  - Consider whether the message was received but not processed correctly. For instance, did an error in the expected message format cause your program to reject it? If so, refer to Step 5 on page 28.

#### 2. Message Content and Format
If the information in the message is unexpected or corrupted, consider the following points:

- **Application Changes**:
  - Has your application or the application that put the message on the queue changed? Ensure that all changes are simultaneously reflected on all systems that need to be aware of the change. For example, if a copyfile formatting the message has been modified, recompile both applications to incorporate the changes. If one application has not been recompiled, the data will appear corrupted to the other.

- **Incorrect Queue**:
  - Is an application sending messages to the wrong queue? Verify that the messages your application is receiving are intended for it and not for another application servicing a different queue. If necessary, update your security definitions to prevent unauthorized applications from putting messages on the wrong queues. If your application uses an alias queue, ensure that the alias points to the correct queue.

- **Trigger Information**:
  - Has the trigger information been specified correctly for this queue? Confirm that your application should have been started, or if a different application should have been started.

- **CCSID and Data Conversion**:
  - Has the CCSID (Coded Character Set Identifier) been set correctly, or is the message format incorrect due to data conversion?

#### 3. Distributed Queues
If your application uses distributed queues, consider the following points:

- **Distributed Queuing Installation**:
  - Has distributed queuing been correctly installed on both the sending and receiving systems?

- **System Availability**:
  - Are the links available between the two systems? Ensure that both systems are available and connected to IBM MQ for IBM i. Verify that the connection between the two systems is active.

- **Triggering**:
  - Is triggering enabled on the sending system?
  - Is the message you are waiting for a reply message from a remote system? Ensure that triggering is activated in the remote system.

- **Queue Capacity**:
  - Is the queue already full? If so, an application might have been unable to put the required message on the queue. Check if the message has been placed on the undelivered-message queue. The dead-letter queue message header (dead-letter header structure) contains a reason or feedback code explaining why the message could not be put on the target queue. For more information about the dead-letter header structure, see `MQDLH - Dead-letter header`. Refer also to the IBM i Application Programming Reference (ILE/RPG).

- **Queue Manager Mismatch**:
  - Is there a mismatch between the sending and receiving queue managers? For example, the message length might be longer than the receiving queue manager can handle.

- **Channel Compatibility**:
  - Are the channel definitions of the sending and receiving channels compatible? A mismatch in sequence number wrap, for example, can stop the distributed queuing component. See the section on Distributed queuing and clusters.

### Related Tasks
- **Contacting IBM Support**:
  - If you need help with a problem related to IBM MQ, contact IBM Support through the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and other news.

- **Identifying Characteristics of the Problem on IBM i**:
  - If you have not been able to identify the cause of the problem using the preliminary checks, start to look at the characteristics of the problem in greater detail.

### Initial Checks on Linux
Before starting detailed problem determination on Linux, consider whether there is an obvious cause of the problem or an area of investigation that is likely to yield useful results. This approach can often save time by highlighting simple errors or narrowing down the range of possibilities.

#### Procedure
1. **Identify Characteristics of the Problem**:
   - Has IBM MQ run successfully before?
   - Have any changes been made since the last successful run?
   - Have you applied any maintenance updates?
   - Has the application run successfully before?
   - Are you receiving errors when using special characters in descriptive text for some commands?
   - Are there any error messages or return codes to help determine the location and cause of the problem?
   - Can you reproduce the problem?
   - Does the problem affect specific parts of the network?
   - Does the problem occur at specific times of the day?
   - Is the problem intermittent?

2. **Investigate Potential Problems with Applications, Commands, and Messages**:
   - Are messages failing to arrive on the queue?
   - Do messages contain unexpected or corrupted information?
   - Are unexpected messages received when using distributed queues?
   - Have you received no response from a PCF command?
   - Are only some of your queues failing?
   - Does the problem affect only remote queues?
   - Is your application or system running slowly?

3. **Investigate Resource Problems**:
   - Investigate any problems connected to IBM MQ resources, including resource usage by IBM MQ processes, problems related to insufficient resources, and your resource limit configurations. For more information, see "Additional checks for resource problems on Linux" on page 38.

4. **Detailed Troubleshooting**:
   - If you need further information to help identify the cause of the problem, see "Detailed troubleshooting" on page 64.

### Related Tasks
- **Contacting IBM Support**:
  - If you need help with a problem related to IBM MQ, contact IBM Support through the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and other news.

- **Initial Checks on AIX, IBM i, Windows, and z/OS**:
  - Before starting detailed problem determination on these platforms, consider whether there is an obvious cause of the problem or an area of investigation that is likely to yield useful results. This approach can often save time by highlighting simple errors or narrowing down the range of possibilities.

### Related Reference
- **Messages and Reason Codes**:
  - Use the provided list of initial questions as pointers to help identify the cause of the problem. Make a note of anything that might be relevant to the problem. Even if your observations do not suggest a cause immediately, they might be useful later if you need to carry out a systematic problem determination exercise.

- **Collecting Troubleshooting Information for IBM Support**:
  - When you open a case with IBM, include additional IBM MQ troubleshooting information (MustGather data) that you have collected to help with investigating the problem. For more information, see "Collecting troubleshooting information for IBM Support" on page 302.