# Availability Evaluation of Digital Library Cloud Services

**Authors:**
- Julian Araujo
- Paulo Romero Martins Maciel
- Matheus Torquato
- Gustavo Rau de Almeida Callou
- Ermeson C. Andrade

**Affiliations:**
- **Julian Araujo, Paulo Maciel, Matheus Torquato:**
  Informatics Center, Federal University of Pernambuco (UFPE), Recife, PE, Brazil
- **Gustavo Callou, Ermeson Andrade:**
  Department of Statistics and Informatics, Federal Rural University of Pernambuco (UFRPE), Recife, PE, Brazil

**Emails:**
- Julian Araujo, Paulo Maciel: [cjma@ufpe.br, prmm@ufpe.br]
- Gustavo Callou: [gustavo@ufrpe.br]

## Abstract
Cloud computing is a new paradigm that provides services through the Internet. This paradigm builds on previous technologies such as cluster, peer-to-peer, and grid computing, and it has been adopted to reduce costs, provide flexibility, and simplify management. Major companies like Google, Amazon, Microsoft, IBM, HP, Yahoo, Oracle, and EMC have invested significantly in cloud infrastructure to offer services with high availability levels. The advantages of cloud computing have enabled the construction of digital libraries, which are essential for the conservation and dissemination of scientific and literary information. This paper proposes an approach to model and evaluate the availability of a digital library. A case study is conducted to demonstrate the applicability of the proposed approach. The results obtained are valuable for the design of such systems, as missing data can lead to various errors and incalculable losses.

**Keywords:** Cloud computing, Digital Library, Accelerated Life Testing, Petri net, Reliability Block Diagram, Availability

## I. Introduction
The rapid development and utilization of cloud computing services have emerged in recent years. Many corporations and institutions have shown interest in cloud computing, and several platforms have been proposed. Companies like Google, Amazon, Microsoft, IBM, HP, Apple, Oracle, and Salesforce are investing heavily in cloud services. The U.S. National Institute of Standards and Technology (NIST) defines "cloud computing as a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services)." Five essential characteristics of cloud computing include on-demand self-service, broad network access, resource pooling, rapid elasticity, and measured service. Additionally, other common characteristics that impact the availability and reliability of such systems include virtualization, geographic distribution, resilient computing, security, scalability, and homogeneity.

Cloud computing is a relevant tool for the dissemination of scientific information and literature. Digital libraries worldwide have become fundamental not only for protecting thousands of articles, collections, and books but also for sharing knowledge with society. Educational institutions, such as schools, universities, and colleges, as well as companies, have shown interest in digitizing their books and creating their own digital libraries to provide services to their members. However, these services require substantial computing resources to achieve high levels of reliability, availability, scalability, and security.

To provide uninterrupted services through cloud computing, it is crucial to evaluate and improve the dependability parameters of the underlying infrastructure. If an infrastructure experiences a server outage due to database deadlocks, data loss, or network failure, the damage can be incalculable. There is also a cost associated with data recovery, and in some cases, full recovery may not be possible.

This paper proposes an availability model for a digital cloud library to estimate downtime levels. A free and open-source cloud computing manager (OpenNebula) and a library service (DSpace) were defined and deployed as the environment for analysis. Measurements were performed to obtain the availability parameters of the library service in a private cloud. An accelerated failure testing (AFT) approach was used to achieve the availability parameters. Reliability block diagrams (RBD) and stochastic Petri nets (SPNs) were employed to model and assess the digital library environment. Strategies are discussed to improve the design and compare the availability of digital libraries through cloud infrastructures.

The remaining sections are organized as follows: Section II describes the architecture of the private cloud system analyzed in this paper. Section III presents the models developed to represent the library cloud environment. Section IV discusses the results obtained through model analysis, focusing on the metric of availability. Section V presents related work. Section VI concludes the paper and suggests possible future work.

## II. Architecture Overview
This study considers a private cloud hosting a digital library service. The service is a digital asset management system that allows educational institutions to collect, preserve, and disseminate scholarly and intellectual endeavors. The library service includes:
- A secure user identification mechanism
- Workflow processes for item submission
- Import and export of collections
- Statistical reports/summaries
- A searchable engine

Users can access bibliographic information such as articles, papers, theses, books, and dissertations. The user interface serves as the interface between the user and the digital library management system. Figure 1 illustrates a digital library service hosted in a private cloud, where the service allows content submission to the database by a manager, making it accessible to users.

![Digital Library Overview](fig1.png)

The private cloud consists of three main components: the Main Node, Standby Node, and Management Server (Figure 2). The Main Node contains a Virtual Machine Monitor (VMM) and a Virtual Machine (VM) running the digital library service. The Standby Node ensures high availability by taking over if the Main Node fails. The Management Server supervises and controls the entire cloud environment using a specific cloud management tool. The remote storage volume is managed through the Management Server, and all components are interconnected via a private network.

The operational mode of the cloud is as follows: the Main Node (and its VM) and the Management Server must be operational for the system to function. If the Standby Node fails, the availability of the cloud decreases. The roles of the Standby Node and Main Node are swapped when the VM recovers, making host availability essential for cloud availability. The objective of the Standby Node is to maximize cloud availability, adhering to constraints established through service level agreements.

![Architecture Overview](fig2.png)

## III. Models
This section presents the adopted AFT, SPN, and RBD models to compute the availability of the private cloud environment for the digital library service. A hierarchical model was created to estimate the availability of the previously described architecture.

### A. Accelerated Life Testing
Accelerated life testing (ALT) is used to reduce the lifetime of products by accelerating performance degradation features. This method aims to obtain data from experiments under higher stress conditions than usual. The accelerated exponential model is adopted when the time to failure under stress conditions is exponentially distributed with a constant failure rate \(\lambda_s\). The failure rate under normal conditions \(\lambda_0\) is calculated by:

\[
\lambda_0 = \frac{\lambda_s}{AF}
\]

where \(AF\) is the acceleration factor, the ratio of normal and accelerated conditions. The Weibull distribution is used to model the lifetimes of devices. The mean time to failure under normal conditions is given by:

\[
MTTF_0 = \theta \left( \frac{1}{\gamma} \Gamma\left(1 + \frac{1}{\gamma}\right) \right)
\]

### B. Reliability Block Diagram
Reliability block diagrams (RBDs) are combinatorial models used to calculate the reliability of a system using intuitive block diagrams. This technique can also be extended to calculate other dependability metrics, such as availability and maintainability. Figure 3 shows two examples of RBDs: independent blocks in parallel (Figure 3a) and series (Figure 3b) structures.

In a series arrangement, the system fails if any single component fails. For a system with \(n\) independent components, the reliability (instantaneous or steady-state availability) is:

\[
P_s(t) = \prod_{i=1}^n P_i
\]

where \(P_i\) is the reliability or availability of block \(b_i\).

In a parallel arrangement, the system remains operational if at least one component is operational. For a system with \(n\) independent components, the reliability is:

\[
P_s(t) = 1 - \prod_{i=1}^n (1 - P_i)
\]

#### 1. Front-end Model
Figure 4 depicts the RBD model representing the front-end, which consists of three serial components: hardware (Hw), operating system (OS), and the Management Server (Mng). The front-end is represented by the Management Server machine.

![Frontend RBD Model](fig4.png)

#### 2. Node Model
Figure 5 shows the RBD model for the Node, which includes five serial components: hardware, OS, Management Server, VM, and the digital library service (DL). The Node Model is represented by the Main Node.

![Node RBD Model](fig5.png)

#### 3. Composition Model
After modeling the front-end and node subsystems, a composition model is adopted to represent the entire system. Figure 6 shows the composition model, where each subsystem is interconnected in a serial arrangement.

![Frontend and Node RBD Model](fig6.png)

#### 4. Front-end and Redundant Node
This model includes a front-end and two redundant node subsystems in a hot standby arrangement. Figure 7 shows the corresponding RBD model, which increases the availability of the environment by automatically switching to a backup node when the primary node fails.

![Frontend + Redundant Node RBD Model](fig7.png)

For a k-out-of-n system, the system functions if at least \(k\) out of \(n\) components are functioning. The system success probability (reliability or availability) is calculated by:

\[
P_s = \sum_{i=k}^n \binom{n}{i} p^i (1 - p)^{n-i}
\]

### C. Stochastic Model
Stochastic Petri Nets (SPNs) are used to model the system. SPNs allow the association of probabilistic delays to transitions using the exponential distribution, and the state space is isomorphic to continuous-time Markov chains (CTMCs). SPNs also enable the use of simulation techniques to obtain dependability metrics.

#### 1. Cold Standby Redundant Model
A cold standby redundant system includes a non-active spare module that becomes active when the main module fails. Figure 8 shows the SPN model, which includes four places: VM1 ON, VM1 OFF, VM2 ON, and VM2 OFF, representing the operational and failure states of both the main and spare modules. The spare module (VM2) is initially deactivated. When the main module fails, the transition T_ACT is fired to activate the spare module.

![Cold Standby Redundant Model](fig8.png)

Table I presents the MTTF and MTTR parameters used to analyze the RBD models. The values are based on the observed behavior of the infrastructure.

## IV. Results
To define performance-intensive scenarios, HTTP requests generated while navigating the library service were recorded using the Jmeter tool. A load test with one user was used to determine the response time of performance-intensive requests. Three measurement experiments were defined to obtain the response time of the digital library service. Data were collected over 48 hours until failures occurred. A failure was defined as a response time greater than 6 seconds. Abnormalities or errors in the measurements were removed, and the failure data were fitted to an appropriate probabilistic distribution. The environment was configured under the same conditions after each measurement.

### B. Numerical Results
Before the measurements, ATF planning was conducted. The test plan included constant stress tests with HTTP requests. The accelerating stress factor was defined, with normal conditions at 0.034 requests/s and accelerated conditions at 4 requests/s. Table II shows the workload parameters.

| Workload Parameter | Regular | High |
|--------------------|---------|------|
| Request rate (req/s) | 0.034 | 4 |

After defining the plan, the statistical parametric model was determined. The failure times at each stress level were used to identify the most appropriate failure time probability distribution. The accelerated Weibull model was found to be the most suitable. The Weibull parameters were calculated to describe the mean time to failure (MTTF). Table III shows the mean time to repair (MTTR) and MTTF. The MTTR for recovering a VM was estimated from observations of the analyzed infrastructure.

## V. Related Work
[Details on related work can be added here, summarizing existing research and how this study differs or builds upon it.]

## VI. Conclusion and Future Work
This paper presented an approach to model and evaluate the availability of a digital library in a cloud environment. The results obtained are valuable for designing such systems, as they help in identifying potential issues and improving the overall availability. Future work could include extending the model to more complex cloud architectures and incorporating additional dependability metrics.

[Further details on future work and concluding remarks can be added here.]