---
author: Petras Liumparas
category: 技术
comments_data:
- date: '2015-06-12 13:37:30'
  message: V3=$V1+$V2 可以不用加&quot;+&quot;, 直接 V3=${V1}${V2}
  postip: 118.122.120.235
  username: 来自 - 四川成都 的 Firefox/Linux 用户
- date: '2015-06-12 13:51:49'
  message: "原文表述有误，应该是&nbsp;&nbsp;let V3=V1+V2 。已经修正。\r\n另外，欢迎大家补充和挑错。"
  postip: 106.120.220.78
  username: linux
- date: '2015-06-12 16:05:36'
  message: "21) 我觉得在后台运行命令的最佳操作是：nohup command &amp;\r\n大部分时间我们可能是远程使用Linux，我碰到过由于网络断线使得在后台运行的command
    &amp;没了..."
  postip: 117.169.214.128
  username: kashu
- date: '2015-06-12 16:12:27'
  message: "13) 两个整数相加\r\nA=5\r\nB=6\r\n\r\n(1)# echo $(($A+$B))\r\n11\r\n\r\n(2)# echo $[$A+$B]\r\n11\r\n\r\n(3)#
    expr $A + $B\r\n11\r\n\r\n(4)# echo $A+$B | bc\r\n11\r\n\r\n(5)# awk 'BEGIN{print '&quot;$A&quot;'+'&quot;$B&quot;'}'\r\n11"
  postip: 117.169.214.128
  username: kashu
- date: '2015-06-12 21:46:25'
  message: 嗯，这个是更完善的。
  postip: 114.245.6.54
  username: linux
- date: '2015-06-12 21:48:05'
  message: 这个更好了——我补充到文章中。
  postip: 114.245.6.54
  username: linux
- date: '2015-06-14 00:50:38'
  message: 不错！都是很常用的，也很基础！收藏了！
  postip: 115.60.10.104
  username: 不简单
- date: '2015-06-14 14:04:39'
  message: 非常感谢，辛苦了！
  postip: 58.218.37.154
  username: Yaso-T
- date: '2015-06-17 11:59:53'
  message: 第一个感觉就错了吧，不是现实名称吗- -cat $1如果在同一个目录就直接现实出文件内容了，应该是echo $1吧
  postip: 123.126.109.217
  username: 来自 - 北京 的 Chrome/Windows 用户
- date: '2015-06-17 15:28:28'
  message: 是的，你是对的，这个原文就错了，校对时也没发现。。汗。
  postip: 123.120.61.87
  username: linux
- date: '2015-06-18 16:24:25'
  message: "麻烦解析一下这个哈：19) 命令：[ -z &quot;&quot; ] &amp;&amp; echo 0 || echo 1 的输出是什么？
    \r\n这个命令是什么意思？谢谢"
  postip: 101.68.93.182
  username: 来自 - 浙江杭州 的 Chrome/Windows 用户
- date: '2015-06-30 17:48:13'
  message: "56）条\r\n答案与问题不符\r\n\r\n56) [[ $string == abc* ]] 和 [[
    $string == &quot;abc*&quot; ]] 有什么区别\r\n[[ $string == abc* ]] - 检查字符串是否以字母
    abc 开头\r\n[[ $string == &quot;abc&quot; ]] - 检查字符串是否完全等于 abc"
  postip: 58.250.57.177
  username: 来自 - 广东深圳 的 Firefox/Windows 用户
- date: '2015-06-30 17:50:20'
  message: 判断是不是为空 如果是输出0 不是输出1
  postip: 58.250.57.177
  username: 桀桀bd
- date: '2015-06-30 21:00:27'
  message: 谢谢，这个是MARKDOWN 的笔误。。马上修改。
  postip: 123.118.180.29
  username: linux
- date: '2015-07-08 20:32:10'
  message: 17条 sed -n &quot;10p&quot;
  postip: 180.102.101.162
  username: dingrui37
- date: '2016-07-21 20:00:07'
  message: 11条：function example (){
  postip: 36.149.5.234
  username: 来自36.149.5.234的 Baidu Spark 8.4|Windows 7 用户
- date: '2016-07-22 19:04:02'
  message: 谢谢。
  postip: 123.120.70.171
  username: linux [Chrome 52.0|Mac 10.11]
count:
  commentnum: 17
  favtimes: 41
  likes: 0
  sharetimes: 0
  viewnum: 29281
date: '2015-06-12 10:30:00'
editorchoice: false
excerpt: '我们为你的面试准备选择了 70 个你可能遇到的 shell 脚本面试问题及解答。了解脚本或至少知道基础知识对系统管理员来说至关重要，它也有助于你在工作环境中自动完成很多任务。在过去的几年里，我们注意到所有的
  linux 工作职位都要求脚本技能。  1) 如何向脚本传递参数 ? ./script argument  例子 : 显示文件名称脚本 ./show.sh file1.txt
  cat show.sh #!/bin/bash cat $1  2) 如何在脚本中使用参数 ? 第一个参数 : $1，第二个参数 : $2 例子 : 脚本会复制文件(arg1)
  到目标地址(arg2) ./copy.sh file1.txt /tmp/ cat copy.sh #!/bin/bash'
fromurl: http://linoxide.com/linux-shell-script/shell-scripting-interview-questions-answers/
id: 5607
islctt: true
largepic: /data/attachment/album/201506/11/103441j12o49f7qstm7o22.jpg
permalink: /article-5607-1.html
pic: /data/attachment/album/201506/11/103441j12o49f7qstm7o22.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: '我们为你的面试准备选择了 70 个你可能遇到的 shell 脚本面试问题及解答。了解脚本或至少知道基础知识对系统管理员来说至关重要，它也有助于你在工作环境中自动完成很多任务。在过去的几年里，我们注意到所有的
  linux 工作职位都要求脚本技能。  1) 如何向脚本传递参数 ? ./script argument  例子 : 显示文件名称脚本 ./show.sh file1.txt
  cat show.sh #!/bin/bash cat $1  2) 如何在脚本中使用参数 ? 第一个参数 : $1，第二个参数 : $2 例子 : 脚本会复制文件(arg1)
  到目标地址(arg2) ./copy.sh file1.txt /tmp/ cat copy.sh #!/bin/bash'
tags:
- 脚本
- 面试
- shell
thumb: false
title: Shell 脚本面试问题大全
titlepic: false
translator: ictlyh
updated: '2015-06-12 10:30:00'
---
我们为你的面试准备选择了 70 个你可能遇到的 shell 脚本面试问题及解答。了解脚本或至少知道基础知识对系统管理员来说至关重要，它也有助于你在工作环境中自动完成很多任务。在过去的几年里，我们注意到所有的 linux 工作职位都要求脚本技能。
[![](/data/attachment/album/201506/11/103441j12o49f7qstm7o22.jpg)](https://img.linux.net.cn/data/attachment/album/201506/11/103441j12o49f7qstm7o22.jpg)
### 1) 如何向脚本传递参数 ?
```
./script argument
```
**例子** : 显示文件名称脚本
```
./show.sh file1.txt
cat show.sh
#!/bin/bash
echo $1
```
（LCTT 译注：谢谢某匿名访客的提醒，原题有误，修改之。）
### 2) 如何在脚本中使用参数 ?
第一个参数 : $1，第二个参数 : $2
例子 : 脚本会复制文件(arg1) 到目标地址(arg2)
```
./copy.sh file1.txt /tmp/
cat copy.sh
#!/bin/bash
cp $1 $2
```
### 3) 如何计算传递进来的参数 ?
```
$#
```
### 4) 如何在脚本中获取脚本名称 ?
```
$0
```
### 5) 如何检查之前的命令是否运行成功 ?
```
$?
```
### 6) 如何获取文件的最后一行 ?
```
tail -1
```
### 7) 如何获取文件的第一行 ?
```
head -1
```
### 8) 如何获取一个文件每一行的第三个元素 ?
```
awk '{print $3}'
```
### 9) 假如文件中每行第一个元素是 FIND，如何获取第二个元素
```
awk '{ if ($1 == "FIND") print $2}'
```
### 10) 如何调试 bash 脚本
将 -xv 参数加到 #!/bin/bash 后
例子：
```
#!/bin/bash –xv
```
### 11) 举例如何写一个函数 ?
```
function example() {
echo "Hello world!"
}
```
### 12) 如何向连接两个字符串 ?
```
V1="Hello"
V2="World"
V3=${V1}${V2}
echo $V3
```
输出
```
HelloWorld
```
> 
> 据匿名网友评论，本题原答案有误，已经修正。
> 
> 
> 
### 13) 如何进行两个整数相加 ?
```
V1=1
V2=2
let V3=$V1+$V2
echo $V3
```
输出
```
3
```
> 
> 据 @kashu 的意见，本题的更佳回答为：
> 
> 
> 两个整数相加，还有若干种方法实现：
> 
> 
> 
> ```
> A=5
> B=6
> 
> echo $(($A+$B))  # 方法 2
> echo $[$A+$B]    # 方法 3
> expr $A + $B     # 方法 4
> echo $A+$B | bc  # 方法 5
> awk 'BEGIN{print '"$A"'+'"$B"'}'   # 方法 6
> ```
> 
> 
### 14) 如何检查文件系统中是否存在某个文件 ?
```
if [ -f /var/log/messages ]
then
echo "File exists"
fi
```
### 15) 写出 shell 脚本中所有循环语法 ?
#### for 循环 :
```
for i in $( ls ); do
echo item: $i
done
```
#### while 循环 :
```
#!/bin/bash
COUNTER=0
while [ $COUNTER -lt 10 ]; do
echo The counter is $COUNTER
let COUNTER=COUNTER+1
done
```
#### until 循环 :
```
#!/bin/bash
COUNTER=20
until [ $COUNTER -lt 10 ]; do
echo COUNTER $COUNTER
let COUNTER-=1
done
```
### 16) 每个脚本开始的 #!/bin/sh 或 #!/bin/bash 表示什么意思 ?
这一行说明要使用的 shell。#!/bin/bash 表示脚本使用 /bin/bash。对于 python 脚本，就是 #!/usr/bin/python。（LCTT译注：这一行称之为[释伴行](/article-3664-1.html)。）
### 17) 如何获取文本文件的第 10 行 ?
```
head -10 file|tail -1
```
### 18) bash 脚本文件的第一个符号是什么
```
#
```
### 19) 命令：[ -z "" ] && echo 0 || echo 1 的输出是什么
```
0
```
### 20) 命令 “export” 有什么用 ?
使变量在子 shell 中可用。
### 21) 如何在后台运行脚本 ?
在脚本后面添加 “&”。
> 
> 据 @kashu 的意见，更好的答案是：
> 
> 
> 
> ```
> nohup command &
> ```
> 
> 大部分时间我们可能是远程使用Linux，我碰到过由于网络断线使得在后台运行的command &没了...
> 
> 
> 
### 22) "chmod 500 script" 做什么 ?
使脚本所有者拥有可执行权限。
### 23) ">" 做什么 ?
重定向输出流到文件或另一个流。
### 24) & 和 && 有什么区别
* & - 希望脚本在后台运行的时候使用它
* && - 当前一个脚本成功完成才执行后面的命令/脚本的时候使用它
### 25) 什么时候要在 [ condition ] 之前使用 “if” ?
当条件满足时需要运行多条命令的时候。
### 26) 命令： name=John && echo 'My name is $name' 的输出是什么
```
My name is $name
```