案例：
::: bodypic-c
![](OEBPS/Images/047-2-i.jpg){.calibre149}
:::
和上面命令类似，启动服务。
###### 8.am broadcast {.section-subtitle}
说明：发送一个广播。
用法：am broadcast-a\[广播动作\]
案例：
::: bodypic-c
![](OEBPS/Images/047-3-i.jpg){.calibre150}
:::
和上面的命令类似，发送一个广播。有时候定义了一个广播，可能需要测试，就可以借助这个功能模拟发送一个广播。
###### 9.netcfg {.section-subtitle}
说明：查看设备的ip地址。
用法：netcfg
有时候想查看设备的ip地址，去设置页面太费劲了，可以直接用这个命令即可：
::: bodypic-c
![](OEBPS/Images/047-4-i.jpg){.calibre151}
:::
###### 10.netstat {.section-subtitle}
说明：查看设备的端口号信息。
用法：netstat
有时候想查看设备的端口号信息，这个命令也是非常重要的，例如：
::: bodypic-c
![](OEBPS/Images/047-5-i.jpg){.calibre56}
:::
::: bodypic-c
![](OEBPS/Images/048-i.jpg){.calibre152}
:::
###### 11.app_process {.section-subtitle}
说明：运行Java代码。
用法：app_process\[运行代码目录\]\[运行主类\]
案例：
::: bodypic-c
![](OEBPS/Images/048-2-i.jpg){.calibre153}
:::
这个命令主要用于Android中一些特殊开发场景中，想启动一个jar包，不过这个jar包有要求：需要dx命令把dex文件转化成jar包功能，实际上它不是一个正常的jar包了，而是一个包含了classes.dex文件的压缩文件了。
###### 12.dalvikvm {.section-subtitle}
说明：运行一个dex文件。
用法：dalvikvm-cp\[dex文件\]\[运行主类\]
案例：
::: bodypic-c
![](OEBPS/Images/048-3-i.jpg){.calibre154}
:::
有时候为了测试一个dex文件功能可以用到这个命令，与上面的命令有很大相似之处，只是运行的文件不一样。
###### 13.top {.section-subtitle}
说明：查看当前应用的CPU消耗信息。
用法：top\[-n/-m/-d/-s/-t\]
-m//最多显示多少个进程
-n//刷新次数
-d//刷新间隔时间（默认5秒）
-s//按哪列排序
-t//显示线程信息而不是进程
案例：
::: bodypic-c
![](OEBPS/Images/049-i.jpg){.calibre155}
:::
这个命令在分析应用性能的时候非常有用，可以用grep过滤想要分析的应用信息，查看它的当前CPU使用率。
###### 14.getprop {.section-subtitle}
说明：查看系统属性值。
用法：getprop\[属性值名称\]
案例：
::: bodypic-c
![](OEBPS/Images/049-2-i.jpg){.calibre156}
:::
这个命令可以查看设备的信息，比如设备版本号、系统属性等，后面章节会介绍在root设备之后，还可以去修改这些系统属性。比如debug开关，让所有的应用都处于可调试状态。
[]{#023.xhtml}
#### 3.4 操作apk命令 {.bodycontent-title2}
有两个命令可直接获取apk的信息，下面分别介绍。
###### 1.用aapt操作apk命令 {.section-subtitle}
说明：查看apk中的信息以及编辑apk程序包。
用法：aapt dump xmltree\[apk包\]\[需要查看的资源文件xml\]
案例：
::: bodypic-c
![](OEBPS/Images/049-3-i.jpg){.calibre157}
:::
::: bodypic-c
![](OEBPS/Images/050-i.jpg){.calibre158}
:::
依然用重定向把输出信息保存到文件中，然后再打开查看，可以看到非常详细的apk清单文件了。所以有时候想查看一个apk中的清单文件，也没必要进行复杂的反编译工作。
###### 2.用dexdump操作dex命令 {.section-subtitle}
说明：可以查看一个dex文件的详细信息。
用法：dexdump\[dex文件路径\]
案例：
::: bodypic-c
![](OEBPS/Images/050-2-i.jpg){.calibre159}
:::
这个命令用于查看apk中dex文件的详细信息，有时候也没必要反编译，可以直接用这个命令即可。
[]{#024.xhtml}
#### 3.5 进程命令 {.bodycontent-title2}
这里介绍用cat命令查看当前应用进程的信息，在逆向中可能用得到。
###### 1.查看当前进程的内存加载情况 {.section-subtitle}
可以使用如命令
::: bodypic-c
![](OEBPS/Images/051-i.jpg){.calibre160}
:::
查看当前进程的内存映射信息，比如加载了哪些so文件，dex文件等：
::: bodypic-c
![](OEBPS/Images/051-2-i.jpg){.calibre161}
:::
###### 2.查看进程的状态信息 {.section-subtitle}
可以利用如下命令
::: bodypic-c
![](OEBPS/Images/051-3-i.jpg){.calibre162}
:::
查看当前进程的状态信息，比如熟知的TracerPid：
::: bodypic-c
![](OEBPS/Images/051-4-i.jpg){.calibre163}
:::
###### 3.查看当前应用使用的端口号信息 {.section-subtitle}
可以使用如下命令
::: bodypic-c
![](OEBPS/Images/051-5-i.jpg){.calibre157}
:::
获取当前应用使用到的端口号信息：
::: bodypic-c
![](OEBPS/Images/051-6-i.jpg){.calibre164}
:::
::: bodypic-c
![](OEBPS/Images/052-i.jpg){.calibre82}
:::
[注意：]{.yanse}上面介绍的shell命令也可以在手机中直接运行，需要去下载一个"终端模拟器"应用，直接在里面输入这些shell命令即可，这样不用电脑就可以进行操作了。
[]{#025.xhtml}
#### 3.6 本章小结 {.bodycontent-title2}
本章分析了Android开发和逆向中常用的一些命令，这些命令对于后续操作起到非常高效的助推作用。当然还有其他命令，只是没有那么好用，也就没有介绍了。
[]{#026.xhtml}
### 第4章 so文件格式解析 {.bodycontent-title4}
本章详细介绍so文件的内容，so文件的格式解析非常重要，不仅对Android中的底层开发非常有用，而且对Android的安全更重要。在这个内容基础之上，后面的章节中会进一步介绍如何对so文件进行加密做到应用的安全防护，以及逆向分析应用的so代码逻辑。
[]{#027.xhtml}
#### 4.1 ELF文件格式 {.bodycontent-title2}
Android中的so文件就是ELF文件，所以要了解so文件，必须先来了解一下ELF文件的格式。如何详细了解ELF文件？最好的方法就是手动写一个工具类来解析一个ELF文件。ELF文件格式见图4-1。
::: bodypic-c
![](OEBPS/Images/4a1-i.jpg){.calibre165}
:::
图4-1 ELF文件格式（见书后彩图，图片由@非虫授权）
这张图已经很详细了，后面用Java代码来解析ELF文件的时候，就是按照这张图来进行的。
[]{#028.xhtml}
#### 4.2 解析工具 {.bodycontent-title2}
这里还需要介绍一个工具readelf，因为这个工具在解析ELF文件的时候也非常有用，而且是检查解析ELF文件的模板。不过Window下这个命令不能用，因为这个命令是Linux的，所以还得做个工作，就是安装Cygwin。
[提示：]{.yanse}Cygwin下载地址：[http://pan.baidu.com/s/1C1Zci](http://pan.baidu.com/s/1C1Zci){.calibre32
.pcalibre}
下载Cygwin之后，需要改一个东西才能用，如图4-2所示。
::: bodypic-c
![](OEBPS/Images/4a2-i.jpg){.calibre166}
:::
图4-2 下载Cygwin工具
改一下这个文件：
::: bodypic-c
![](OEBPS/Images/4a3-i.jpg){.calibre167}
:::
将路径要改成你本地cygwin64中的bin目录的路径，不然运行错误。改好之后，直接运行Cygwin.bat就可以了。
关于readelf工具我们这里不做太详细的介绍，只介绍本章要用到的命令。
###### 1.readelf-h xxx.so {.section-subtitle}
查看so文件的头部信息，如下所示：
::: bodypic-c
![](OEBPS/Images/054-i.jpg){.calibre168}
:::
::: bodypic-c
![](OEBPS/Images/055-i.jpg){.calibre169}
:::
###### 2.readelf-S xxx.so {.section-subtitle}
查看so文件的节（Section）头的信息，如下所示：
::: bodypic-c
![](OEBPS/Images/055-2-i.jpg){.calibre170}
:::
###### 3.readelf-l xxx.so  {.section-subtitle}
查看so文件的程序段头信息（Program），如下所示：
::: bodypic-c
![](OEBPS/Images/055-3-i.jpg){.calibre102}
:::
::: bodypic-c
![](OEBPS/Images/056-i.jpg){.calibre171}
:::
###### 4.readelf-a xxx.so {.section-subtitle}