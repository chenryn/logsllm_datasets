title:Improved anonymous proxy re-encryption with CCA security
author:Qingji Zheng and
Wei Zhu and
Jiafeng Zhu and
Xinwen Zhang
Improved Anonymous Proxy Re-encryption with CCA
Security
Qingji Zheng
Department of Computer
Science
University of Texas at San
PI:EMAIL
Antonio, TX, USA
Jiafeng Zhu
Huawei Research Center
Santa Clara, CA, USA
PI:EMAIL
Wei Zhu
Anhui, China
Julymobile Tech Co., Ltd
PI:EMAIL
Xinwen Zhang
Huawei Research Center
Santa Clara, CA, USA
PI:EMAIL
ABSTRACT
Outsourcing private data and heavy computation tasks
to the cloud may lead to privacy breach as attackers (e.g.,
malicious outsiders or cloud administrators) may correlate
any relevant information to penetrate information of their
interests. Therefore, how to preserve cloud users’ privacy
has been a top concern when adopting cloud solutions. In
this paper, we investigate the identity privacy problem for
the proxy re-encryption, which allows any third party (e.g.,
cloud) to re-encrypt ciphertexts in order to delegate the de-
cryption right from one to another user. The relevant iden-
tity information, e.g., whose ciphertext was re-encrypted
to the ciphertext under whose public key, may leak be-
cause re-encryption keys and ciphertexts (before and after
re-encryption) are known to the third party. We review
prior anonymity (identity privacy) notions, and ﬁnd that
these notions are either impractical or too weak. To address
this problem thoroughly, we rigorously deﬁne the anonymity
notion that not only embraces the prior anonymity notions
but also captures the necessary anonymity requirement for
practical applications. In addition, we propose a new and
eﬃcient proxy re-encryption scheme. The scheme satisﬁes
the proposed anonymity notion under the Squared Deci-
sional Bilinear Diﬃe-Hellman assumption and achieves se-
curity against chosen ciphertext attack under the Decisional
Bilinear Diﬃe-Hellman assumption in the random oracle
model. To the best of our knowledge, it is the ﬁrst proxy re-
encryption scheme attaining both chosen-ciphertext security
and anonymity simultaneously. We implement a prototype
based on the proposed proxy re-encryption scheme and the
performance study shows that it is eﬃcient.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590322.
Categories and Subject Descriptors
E.3 [Data Encryption]: Public Key Cryptosystems; H.3.4
[Information Storage and Retrieval]: Distributed Sys-
tems
General Terms
Security
Keywords
proxy re-encryption, anonymity, chosen-ciphertext secu-
rity, outsourced computation
1.
INTRODUCTION
Cloud computing has become an increasingly popular com-
puting paradigm as it oﬀers numerous beneﬁts, e.g., on-
demand service, service elasticity and low maintenance cost.
However, when outsourcing data and heavy computation
tasks to the cloud, cloud users can enjoy these beneﬁts only
if they are willing to assume that the cloud is full trusted.
This assumption is inevitably impractical because the cloud
imposes great attack surface from the inside and outside at-
tackers. Therefore, privacy concern might hinder cloud users
deploying applications in the public cloud.
In this paper, we study the anonymity problem for Proxy
Re-Encryption (PRE), which is to delegate the decryption
right by re-encrypting ciphertexts decrypted by Alice to new
ciphertexts that can be decrypted by Bob without revealing
plaintexts. In order to understand the anonymity problem
for PRE, consider the following application: Company A has
an email gateway handling all incoming encrypted emails
and forwarding them to appropriate recipients. Alice (an
employee of Company A) can send a re-encryption request
to the gateway in order to delegate the decryption right to
Bob (another employee of Company A) when she is unable
to manage her emails properly (e.g., when she is traveling
or on vacation). Due to large amount of re-encryption re-
quests and its own limited computation capability, the gate-
way will outsource those re-encryption operations to a public
cloud. As re-encryption keys and corresponding ciphertexts
need to be delivered to the cloud, it is expected that the
re-encryption procedure does not reveal any participant’s
249identity, which otherwise might leak important business in-
formation (e.g., schedule information).
To address this concern, the anonymity notion (or key-
[5] 1.
private) for PRE was introduced by Ateniese et al.
They pointed out that many prior proxy re-encryption schemes
(before their paper) cannot satisfy the intuition of anonymity:
an adversary cannot learn identities by observing suﬃcient
ciphertexts (before or after re-encryption) and re-encryption
keys, even it colludes with some corrupted users. That is, for
any probabilistically polynomial time adversary, it cannot
distinguish a valid re-encryption key for a pair of users, from
a random one selected from the re-encryption key space,
although it can access re-encryption key generation oracle
and re-encryption oracle (perhaps decryption oracle addi-
tionally).
Why prior anonymity notions are insuﬃcient? There
are two anonymity notions in the literature. The ﬁrst anonymity
notion of PRE in [5] suﬀers from the limitation that it only
allows one re-encryption key for any pair of users. As stated
in [5], the proposed scheme cannot achieve the anonymity
deﬁnition if someone could obtain multiple re-encryption
keys per pair of users. That is, if the cloud possesses multiple
re-encryption keys for the same pair of users, then it can de-
rive the identities involved in these re-encryption keys. Let
us take the above motivational application as an example:
If the cloud received two re-encryption keys that were used
to delegate the decryption right from Alice to Bob at diﬀer-
ent times, then it is able to infer that the re-encryption key
corresponds to Alice and Bob. Consequently, the constraint
of allowing only one re-encryption key per pair of users does
not meet the requirement in practice, because in reality it
likely happens that multiple re-encryption keys coexist for
any pair of users.
Another anonymity notion was introduced by [19, 20].
While their notion allows multiple re-encryption keys co-
existing for any pair of users, it achieves weak anonymity be-
cause the adversary is not allowed to access the re-encryption
oracle (section 2.2.4 [19] and section 2.3.3 [20]) to obtain re-
encrypted ciphertexts. Instead, the adversary has to query
the re-encryption key generation oracle and applies the re-
turned re-encryption key to compute re-encrypted cipher-
Intuitively, their notion fails to capture the follow-
texts.
ing attack:
If knowing the identity corresponding to the
re-encrypted ciphertext, then the attack may be possible to
infer the identities involved in the re-encryption key that
is used to generate that re-encrypted ciphertext. To further
understand this attack, let us look at the scenario of the mo-
tivational example: The cloud receives a re-encryption key
to delegate the decryption right from Alice to Bob, then it re-
encrypts the ciphertext and sends the re-encrypted cipher-
text to the gateway. Since the cloud communicates with the
gateway without private channel (all communication data is
encrypted), an attacker can eavesdrop the channel to obtain
the re-encrypted ciphertext and might learn the related iden-
tity without seeing the re-encryption key (perhaps via some
side channels). As long as the attacker sees the re-encryption
key, he might be able to infer the participants’s identity be-
cause the corresponding re-encrypted ciphertexts leaks that
1The anonymity for PRE has two-fold: the anonymity of
ciphertexts and the anonymity of re-encryption keys. The
former has been investigated by Bellare et al [7] and the
latter one is the additional target in the context of PRE,
which is the focus of this paper.
information. Especially, this attack always happens when
the re-encryption algorithm is deterministic. Indeed, this is
the reason why the scheme in [19] satisﬁes their anonymity
notion while still suﬀering from this attack. Therefore, disal-
lowing the adversary directly accessing re-encryption oracle
weakens its capability of distinguishing the diﬀerence be-
tween a valid re-encryption key and a random one from the
re-encryption key space.
Our contributions. As prior anonymity notions are in-
complete, we rigorously deﬁne the anonymity notion which
adequately ﬁxes these insuﬃciencies. We propose the ﬁrst
PRE construction that not only achieves chosen-ciphertext
security (CCA) in the random oracle model, but also attains
the anonymity property. To be speciﬁc, our contribution
can be characterized as follows:
• We rigorously deﬁne the anonymity notion with a well-
deﬁned anonymous game, which cannot be extended
trivially from that in [19, 20] by simply providing ac-
cess to the re-encryption oracle.
• We present a single-hop, unidirectional PRE scheme
satisﬁes the proposed anonymity notion. Our con-
struction is anonymous under the Squared Decisional
Bilinear Diﬃe-Hellman assumption and CCA secure
under the Decisional Bilinear Diﬃe-Hellman assump-
tion in the random oracle model, which resolves one of
the open problems stated in [5].
• Towards building a generic cloud-based re-encryption
service, we have built a prototype that integrates the
proposed scheme and the Amazon Web Services (AWS),
where EC2 is for re-encryption computation and S3 for
data storage. We deﬁned general web services inter-
faces that can be easily integrated into existing appli-
cations to provide anonymous re-encryption function.
As a case study, we have implemented an anonymous
email forwarding service built upon our scheme. Our
experimental evaluation demonstrates that the pro-
posed anonymous PRE scheme is eﬃcient.
Paper organization. Section 2 reviews the deﬁnitions of
single-hop, unidirectional PRE and its CCA security, and
then proposes a strong anonymity notion. Section 3 con-
structs an anonymous and CCA secure PRE and shows its
security analysis. Section 4 presents the detail of our im-
plementation and performance study. Section 5 summarizes
related work and Section 6 concludes this paper.
2. PRE: DEFINITION AND SECURITY
NO-TIONS
Let s
R← S denote selecting element s from set S uniformly
at random, ⊥ denote an error message, and || denote string
concatenation. In the present paper we consider single-hop,
unidirectional proxy re-encryption only, and name an origi-
nal ciphertext as a second level ciphertext and the ciphertext
after re-encryption as a ﬁrst level ciphertext as in [6, 17]. Let
U be the set of users, denoted by U = {1, · · · , n}. Denote
the set of uncorrupted users by Uh and the set of corrupted
Ue = U. The following PRE
users by Ue, such that Uh
deﬁnition and the CCA notion are based on prior work [6, 5,
9].
(cid:2)
250Definition 1. A single-hop, unidirectional PRE consists
of following algorithms:
• Param ← Setup(1(cid:2)): Given a security parameter 1(cid:2),
this algorithm is run by the trusted party to generate
the public parameter Param. For brevity, we assume
that the following algorithms implicitly take Param as
parts of inputs.
• (pki, ski) ← KeyGen(i): This algorithm is run by the
user i to generate public and private keys (pki, ski).
• rki→j ← ReKeyGen(ski, pkj): This algorithm is run by
user i to output a re-encryption key rki→j , which can
be used to re-encrypt second level ciphertexts decrypted
by user i to ﬁrst level ciphertexts decrypted by user j.
• C ← Enc(pki, m): This algorithm is run to encrypt
message m to a second level ciphertext C which can be
decrypted by user i.
• C(cid:3) ← ReEnc(rki→j , C): This algorithm is run to re-
encrypt a second level ciphertext C to a ﬁrst level ci-
phertext C(cid:3) which can be decrypted by user j.
• {m, ⊥} ← Dec(ski, C(C(cid:3))): This algorithm is run to
decrypt a second level ciphertext C (or a ﬁrst level ci-
phertext C(cid:3)), which might output the message m or a
error message ⊥.
Correctness: A single-hop, unidirectional PRE is correct if:
given any m from the message space, (i) ∀ i ∈ U, (pki, ski) ←
KeyGen(i), so that Dec(ski, Enc(pki, m)) = m, and (ii) ∀ i, j ∈
U, (pki, ski) ← KeyGen(i), (pkj, skj ) ← KeyGen(j), and rki→j
← ReKeyGen(ski, pkj) , so that Dec(skj , ReEnc(rki→j , Enc(pki,
m))) = m.
CCA Security: The CCA notion [9] can be formalized by
the following CCA-security game between an adversary A
and the challenger C.
Phase 1: C runs Setup(1(cid:2)) to initialize the public param-
eter. A can access oracles below in polynomially many
times. Note that before querying OReKeyGen(pki, pkj) and
OReEnc(pki, pkj, C), (pki, ski) and (pkj , skj) have been gen-
erated.
• key generation oracle OKeyGen(i): (i) If i has not been
queried before, C runs KeyGen to obtain (pki, ski) and
i ∈
records (i, pki, ski). If i is a corrupted user, s.t.
Ue, C returns (pki, ski) to A, and pki otherwise. (ii)
Otherwise C retrieves (pki, ski) and returns (pki, ski)
to A if i ∈ Ue, and pki otherwise.