# Receiver Window, Bandwidth, and Throughput Analysis

## 4. Performance Metrics
### 4.1 TCP Transfer Performance in Dataset1
- **Uplink (Percentage)**
  - Receiver Window: 81.0%
  - Bandwidth: 4.1%
  - Transport: 6.8%
  - Application: 5.1%
  - Unknown: 0.7%
  - Uplink: 0.0%
  - Retransmission: 2.4%

- **Downlink (Percentage)**
  - Receiver Window: 61.5%
  - Bandwidth: 27.4%
  - Transport: 3.4%
  - Application: 2.9%
  - Unknown: 0.0%
  - Downlink: 0.0%
  - Retransmission: 4.8%

- **Throughput Limits**
  - Uplink: 0
  - Downlink: 0
  - Throughput (kbps): 1, 10, 100, 1000

**Figure 6: Performance of TCP transfers in Dataset1.**

- **Retransmission Rates:**
  - 5% of the packets are retransmitted.
  - 10% of the packets retransmit more than 10% of the packets.

### 4.2 Throughput Analysis
As a final measure of smartphone traffic performance, we focus on the throughput observed by TCP connections in our data. Connection throughput is influenced by path RTT, loss rate, and application-level factors such as the amount of data.

- **Figure 6(c):** 
  - Shows the throughput of TCP transfers with at least 10 data packets in a given direction.
  - Most transfers have very low throughput:
    - Median uplink: 0.8 Kbps
    - Median downlink: 3.5 Kbps
    - 90th percentile uplink: 3 Kbps
    - 90th percentile downlink: 15 Kbps

Given that half the transfers in the analysis above have over 25 data packets, the lack of application data or slow TCP dynamics alone cannot explain the low throughputs observed. To understand the bottlenecks, we use the analysis method of Zhang et al. [23], which estimates the limiting factor based on packet timing and sequence. The accuracy of this analysis has been evaluated in wired settings but not in wireless ones. Manual inspection of several cases shows that it provides accurate answers for our data, giving us confidence in its aggregate characterization.

- **Figure 6(d):**
  - Shows the results for transfers with more than 100 data packets in the given direction.
  - Packet loss is the primary limiting factor in both directions.
  - Large transfers are rarely bottlenecked by transport or application dynamics.
  - Sender window limits over a quarter of the downlink transfers, suggesting that increasing the size of this window at servers could improve downlink TCP transfer throughput to smartphones.

### 5. Interaction with Radio Power Management
The radio is a major power consumer on a smartphone [17], and the nature of traffic influences the efficacy of its power management policy. In this section, we study the interaction between this policy and real smartphone traffic.

- **Figure 7:**
  - Shows the current drawn by an HTC Touch smartphone with Windows Mobile 6.1 when transmitting data over the 3G radio.
  - Four distinct phases:
    - Phase 1: The radio takes about 1.5 seconds to become operational from sleep mode.
    - Phase 2: Data transmission completes.
    - Phase 3: The radio remains at its highest power level for 5 seconds.
    - Phase 4: The radio remains at a lower power level for 12 seconds before going to sleep.
  - This power signature is consistent across different manufacturers and OSes, though exact timer values may vary by carrier.

- **Figure 8:**
  - CDF of the inter-packet delays in Dataset1, showing that 95% of the packets are received or transmitted within 4.5 seconds of the previous packet.

- **Figure 9:**
  - Shows the energy savings from using a 4.5-second long tail compared to a 17-second long tail.
  - An oracle with perfect knowledge can reduce energy consumption by 60%, while a 4.5-second tail reduces it by 35% on average.

- **Figure 10:**
  - Shows the percentage of overall packets that trigger a radio wake-up across different approaches.
  - With a 4.5-second tail, only an additional 2-5% of the packets are delayed due to radio wake-up.

In summary, current radio power management policies are highly inefficient. Reducing the tail length to 4.5 seconds can save 35% of the energy consumed by the radio, and an additional 25% can be saved with an optimal approach. We are currently investigating how to achieve this practically by learning traffic patterns and dynamically adjusting radio sleep timers.

### 6. Related Work
- **Existing Studies:**
  - Based on observations from the infrastructure [19, 15, 3, 13, 21, 20].
  - Maier et al. [15] study packet-level traces from residential DSL connections.
  - Trestian et al. [20] study 3G authentication traces to measure correlations between location, time-of-day, and application usage.
  - Our approach complements these studies by providing a comprehensive view of monitored devices and enabling the study of aspects such as interaction with radio power management.

- **Recent Work:**
  - Broadly characterized smartphone usage, including user interactions, daily traffic, and diurnal patterns [10].
  - Active measurements using synthetic workloads [12, 4, 5, 16] provide insights into network characteristics but do not reflect actual user experiences.

### 7. Conclusions
Based on monitoring the devices of 43 users, we presented a detailed look at smartphone traffic. We found that browsing contributes most traffic, lower layer protocols have high overhead due to small transfer sizes, and packet loss is the primary bottleneck for traffic throughput. Current server-side transfer buffers and radio power management policies are not well-tuned for smartphone workloads.

Our analysis points to several simple mechanisms that can improve the efficiency, performance, and power consumption of smartphone communication:
- Aggregating multiple small transfers through an in-cloud proxy.
- Increasing socket buffer sizes at servers.
- Reducing radio sleep timers.

In the future, we plan to investigate the efficacy of these mechanisms in detail.

### Acknowledgments
We are grateful to the users who participated in our data collection efforts.

### References
[References listed as provided]

---

This revised version aims to enhance clarity, coherence, and professionalism. It organizes the content into clear sections, improves the flow of information, and ensures that the text is more readable and structured.