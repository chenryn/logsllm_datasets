当然我们也可以定制配置文件目录, 目录中以cfg结尾的文件, 在nagios启动时都会解析和加载.  
修改主配置文件, 在OBJECT CONFIGURATION FILE配置组中新增如下行 :   
```  
cfg_dir=/opt/nagios-3.5.0/etc/db_servers  
```  
新建目录, 修改权限  
```  
[root@db-172-16-3-33 etc]# mkdir -p /opt/nagios-3.5.0/etc/db_servers  
[root@db-172-16-3-33 etc]# chown nagios:nagios db_servers  
```  
在该目录中新建配置文件 :   
配置主机 :   
```  
[root@db-172-16-3-33 etc]# cd /opt/nagios-3.5.0/etc/db_servers/  
[root@db-172-16-3-33 db_servers]# vi hosts.cfg  
define host{  
  use linux-box ; Inherit default values from a template  
  host_name db_3_39 ; The name we're giving to this server  
  alias postgresql_3_39 ; A longer name for the server  
  address 172.16.3.39 ; IP address of the server  
}  
[root@db-172-16-3-33 db_servers]# chown nagios:nagios hosts.cfg  
```  
配置主机对应的服务 :   
```  
[root@db-172-16-3-33 db_servers]# cd /opt/nagios-3.5.0/etc/db_servers/  
[root@db-172-16-3-33 db_servers]# vi services.cfg  
define service{  
  use generic-service  
  host_name db_3_39   ; this is host.host_name  
  service_description Current Users  
  check_command check_nrpe!check_users  ;check_users对应客户端/opt/nagios/etc/nrpe.cfg中定义的command, 后面亦如此.  
}  
define service{  
  use generic-service  
  host_name db_3_39  
  service_description CPU Load  
  check_command check_nrpe!check_load  
}  
define service{  
  use generic-service  
  host_name db_3_39  
  service_description /dev/hda1 Free Space  
  check_command check_nrpe!check_hda1  
}  
define service{  
  use generic-service  
  host_name db_3_39  
  service_description Total Processes  
  check_command check_nrpe!check_total_procs  
}  
define service{  
  use generic-service  
  host_name db_3_39  
  service_description Zombie Processes  
  check_command check_nrpe!check_zombie_procs  
}  
```  
修改配置文件权限  
```  
[root@db-172-16-3-33 db_servers]# chown nagios:nagios *.cfg   
```  
检测配置文件是否合法  
```  
[root@db-172-16-3-33 db_servers]# /opt/nagios-3.5.0/bin/nagios -v /opt/nagios-3.5.0/etc/nagios.cfg  
```  
如果配置文件没有错误的话, 重启nagios  
```  
[root@db-172-16-3-33 db_servers]# service nagios restart  
Running configuration check...done.  
Stopping nagios: done.  
Starting nagios: done.  
```  
nagios显示截图如下 :   
![pic](20130603_02_pic_002.png)   
PENDING是指还未执行check, 所以状态未知.  
## 三, 客户端对应的nrpe.cfg配置  
```  
[root@db-172-16-3-39 nrpe-2.14]# vi /opt/nagios/etc/nrpe.cfg  
command[check_users]=/opt/nagios/libexec/check_users -w 5 -c 10  
command[check_load]=/opt/nagios/libexec/check_load -w 15,10,5 -c 30,25,20  
command[check_hda1]=/opt/nagios/libexec/check_disk -w 20% -c 10% -p /  
command[check_zombie_procs]=/opt/nagios/libexec/check_procs -w 5 -c 10 -s Z  
command[check_total_procs]=/opt/nagios/libexec/check_procs -w 150 -c 200  
```  
自定义监控也是配置这些东西. 配置完后需要重启xinetd服务.  
```  
[root@db-172-16-3-39 nrpe-2.14]# service xinetd restart  
Stopping xinetd: [  OK  ]  
Starting xinetd: [  OK  ]  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/16387704020135313354383/  
2\. http://downloads.sourceforge.net/project/nagios/nrpe-2.x/nrpe-2.14/nrpe-2.14.tar.gz?r=&ts=1363788540&use_mirror=hivelocity  
3\. nrpe-2.14/docs/NRPE.pdf  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")