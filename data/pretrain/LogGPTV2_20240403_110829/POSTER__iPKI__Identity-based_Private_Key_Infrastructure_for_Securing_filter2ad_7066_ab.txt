parameter k as input and outputs a set of public pa-
rameters.
• KeyGen ({sk, IP} → dIP). The key generation al-
gorithm is run by both the root IP PKG and domain
IP PKGs. It takes the private key of a IP preﬁx and an
sub-allocation of the IP address as input and outputs
a private key of the sub-address.
• Signing ({ASN, IP} → σ). The signing algorithm
is run by the IP address holder. It takes the identity
of authorized AS, i.e. the ASN , and a private key as
input, and outputs a signature σ.
Figure 1: IP block and private key assignment hier-
archy. RIR, NIR and LIR are respectively short for
Regional/National/Local Internet Registry. Note
labels illustrate an example of hierarchical sub-
blocks and private keys assignment.
Figure 2: UPDATE message format with self route
origin authorization.
• Veriﬁcation ({IP, ASN, σ} → τ ). The veriﬁcation
algorithm is run by the BGP speakers. It takes an IP
address, an ASN and a signature as input, and outputs
a result τ ∈ {0, 1}. If σ is generated by singing ASN
with respect to IP , τ = 1. Otherwise, τ = 0.
Although IP PKGs are organized as a tree hierarchy, the
iPKI tree is quite diﬀerent from the CA tree in X.509. Unlike
CAs, IP PKGs need not to interact with users during the
signed object verifying procedures. That is, once private
keys are obtained, the sIP address holders will no longer
necessary to communicate with the IP PKGs, thus signif-
icantly reducing the communication and transmission cost
while implementing routing veriﬁcation procedures.
2.2 In-Band Self Origin Veriﬁcation
Based on the sIP addresses, we propose the In-Band Self
Origin Veriﬁcation (IBSOV) protocol, to verify the route ori-
gin validation, which is inherently missing in BGP protocol.
The IBSOV protocol employs a signed object named self
Route Origin Authorization (sROA). Analogous to the ROA
in RPKI, the sROA is an authority created by an IP block
holder, authorizing an AS to originate one or more speciﬁc
route advertisements. Fig. 2 illustrates an sROA piggy-
backed in a UPDATE message. It consists of an AS number,
expiring time of the sROA and a signature. The AS is the
speciﬁc AS being authorized to originate a route advertise-
ment. And the signature is signed by the IP block holder
authorizing the sROA. The IP block holder uses the pri-
vate key(s) of its sIP address(es) to sign an sROA, utilizing
the signing algorithm in iPKI. Other than the out-of-band
transmitted ROAs in RPKI, the sROAs are small enough to
be transmitted as part of each UPDATE.
………………IANA(IP_PKG)……RIR(IP_PKG)RIR(IP_PKG)LIR(IP_PKG)NIR(IP_PKG)ISP(IP_PKG)NIR(IP_PKG)ISP(IP_PKG)ISP(IP_PKG)10.0.0.0/8& PrvKey10.128.0.0/16& PrvKey10.128.6.0/26& PrvKeyNLRIPath AttributeUnreachable RoutesBGP Headerself Route Origin AuthorizationAttribute HeaderUPDATE MessagePath attribute for sROASignatureExpiring TimeASNself Route Origin Authorization1633With the sROA, the authorized AS designates a speciﬁc
BGP speaker to advertise an UPDATE message to announce
the reachability information. The sROA is piggybacked as
a path attribute of the UPDATE message. BGP speakers
receiving UPDATE message extract public key(s) from the
message. With the public key(s), i.e., the sIP address(es),
they then verify the signature in the sROA by using the
corresponding veriﬁcation algorithm. If the validity is con-
ﬁrmed, the BGP speakers accept the route that the AS orig-
inated. Otherwise, drop the UPDATE message.
2.3 Preliminary Analysis
The in-band transmission makes the IBSOV protocol in-
troduce much fewer transmission overheads. And the ab-
sence of third party’s participation in the IBSOV protocol
ensures that the iPKI introduces fewer veriﬁcation overheads
than does the RPKI.
To better understand, we classify the BGP protocol secur-
ing models into two categories based on whether repository
is used. Figure 3 shows the typical models. In a repository-
based model, extra agencies and procedures shown in the
dotted box are needed. An IP address holder creates and
publishes credential with respect to an AS, authorizing the
AS to advertise IP preﬁx. While receiving an UPDATE
message, the BGP speaker queries a speciﬁc trusted party
which synchronizes credentials from the repositories. In a
repository-less mechanism, an IP address holder assigns cre-
dential to the authorized AS and the AS can carry the cre-
dential along with the UPDATE message while announcing
the reachability information. Due to the self-attested IP ad-
dress, BGP speakers can conﬁrm the validity of the creden-
tials without the help of third parties. Thus, a repository-
based mechanism introduces extra overheads caused by the
following procedures: 1) IP address holders publish creden-
tials to repositories; 2) trusted parties periodically synchro-
nize credentials from repositories; 3) BGP speakers interact
with trusted parties for credential veriﬁcation. To endow IP
address self-attested characteristic, a repository-less mech-
anism has to 1) redesign the IP address structure [1] or 2)
establish extra key assigning architecture just as the iPKI.
Nevertheless, it is more eﬃcient to achieve origin veriﬁcation
using self-attested IP address.
3. DISCUSSION
The iPKI is a lightweight authentication framework with
low infrastructure complexity, and provides route origin veri-
ﬁcation for BGP with low transmission and veriﬁcation over-
heads. The following problems need to be further consid-
ered: 1) Private key escrow of sIP address. IP PKGs
generate private keys for IP holders and thereby potentially
abuse the keys. We have proposed a trustworthy and se-
cure HIBE scheme which solves the key escrow problem by
generating keys in a hierarchical and distributed manner [8].
Besides, in the HIBS scenario, we can address the key escrow
issue in a more eﬃcient manner that employs a user-selected
secret to generate the signature for a message. A verifying
factor with respect to the secret is attached as part of the
signature. As a result, an IP PKG cannot forge sROAs with-
out knowing the secret selected by the IP holder, though it
knows the private key of the IP. 2) Private key revoca-
tion of sIP address. Private key needs to be revoked once
it is leaked. We add an expiring time ﬁeld to the public key
and generate time-restricted private keys. By adapting such
Figure 3: The generic models of BGP securing
mechanism.
time coarse-grained method, our identity-based public key
infrastructure implicitly revokes private keys.
Acknowledgment
This research is supported in part by the project of the Na-
tional High Technology Research and Development Program
of China(863 Program) No. 2011AA01A103; and Hunan
Province Natural Science Foundation of China (11JJ7003).
4. REFERENCES
[1] D. G. Andersen, H. Balakrishnan, N. Feamster,
T. Koponen, D. Moon, and S. Shenker. Accountable
internet protocol (aip). ACM SIGCOMM Computer
Communication Review, 38(4):339–350, 2008.
[2] D. Cooper, E. Heilman, K. Brogle, L. Reyzin, and
S. Goldberg. On the risk of misbehaving rpki
authorities. In Proceedings of the Twelfth ACM
Workshop on Hot Topics in Networks, page 16. ACM,
2013.
[3] S. Goldberg. Why is it taking so long to secure internet
routing? Communications of the ACM, 57(10):56–63,
2014.
[4] E. Heilman, D. Cooper, L. Reyzin, and S. Goldberg.
From the consent of the routed: Improving the
transparency of the rpki. In Proceedings of the 2014
ACM conference on SIGCOMM, pages 51–62. ACM,
2014.
[5] G. Huston, G. Michaelson, and S. Kent. Resource
certiﬁcation-a public key infrastructure for ip addresses
and as’s. In GLOBECOM Workshops, 2009 IEEE,
pages 1–6. IEEE, 2009.
[6] S. Kent, C. Lynn, and K. Seo. Secure border gateway
protocol (s-bgp). Selected Areas in Communications,
IEEE Journal on, 18(4):582–592, 2000.
[7] N. Wang, Y. Zhi, J. Zhang, D. Cheng, and B. Wang.
Identity-based secure inter-domain routing protocol.
Journal of Software, 20(12), 2009.
[8] X. Wang, P. Chen, H. Zhou, and J. Su. T-hibe: A
trustworthy and secure hierarchical identity-based
encryption system [in press]. Chinese Journal of
Electronics, page 0, 2015.
Repository……TrustedPartyRepository……IANANIRRIRISPTrustedPartyASASBGP speakerBGP speakerPublishcredentialsPublishcredentialsPublishcredentialsPublishcredentialsSynchronizecredentialsVerify origin ASVerify origin ASSynchronizecredentialsExchange credentialsI. repository-based componentsII. assign credentialII. Verify origin AS1634