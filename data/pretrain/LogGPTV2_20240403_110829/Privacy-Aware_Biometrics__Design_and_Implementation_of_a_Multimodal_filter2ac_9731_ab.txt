recognition (e.g., with improved error rates or relying
on novel traits) can be directly and easily incorporated
in the biometric authentication system. This allows for
updating continuously the global solution by exploit-
ing the opportunities offered by the state of the art. On
the other hand, since the biometric system for a spe-
ciﬁc application is realized by combining components
based on well-known algorithms and its characteristics
can be directly derived from the ones of these compo-
nents, the resulting system will be easy to understand
and be accepted by the application owner.
5. Independence from a centralized repository of identi-
ties. The system should not rely on the availability of
a central database supporting the authentication proce-
dure. National privacy agencies often rule against such
Figure 1. The overall structure of the multi-
modal biometric authentication system.
can produce printable IDs obtained from an extracted and
compressed iris feature and an arbitrary text.
The problem of generating strong keys from biomet-
ric readings has been addressed by Dodis et al [8], where
the properties of both secure sketches and fuzzy extractors
primitives have been analyzed. In [1], the author points out
how the multiple use of the same fuzzy secret can cause
security problems, and can introduce outsider and insider
attack scenarios, where an adversary tries to obtain informa-
tion on the secret by performing repeatedly extractions and
regenerations of the fuzzy secret. In such scenarios, with
some limitations, it is possible to show that information the-
oretic security can be achieved and existing constructions
can be adapted to satisfy the additional requirements. More
general attack models and constructions to achieve a secure
remote biometric authentication are proposed in [2]. A gen-
eral framework to design and analyze a secure sketch for
biometric templates is presented in [26], where face bio-
metrics have been used as case study. Interestingly, the pa-
per shows that theoretical bounds have their limitations in
practical schemes. In particular, it has been shown that the
entropy loss of the template cannot be considered a com-
plete description of the robustness level of the scheme in
practical applications, while the analysis of the false match
rate (FMR, i.e., the probability of an individual not enrolled
being identiﬁed) and false non-match rate (FNMR, i.e., the
probability of an enrolled individual not being identiﬁed by
the system) should be always envisioned. Finally, the appli-
cation of a fuzzy sketch based scheme to iris biometrics has
been presented in [3]. The paper relies on a near-optimal
error-correcting code (based on a two-dimensional iterative
min-sum decoding algorithm) and provides also an explicit
estimation of the upper bounds on the correction capacity
of such a kind of schemes.
3. Requirements
A ﬁrst step in the construction of a privacy-aware multi-
modal biometric system is the identiﬁcation of the require-
ments it should have. In particular, we have identiﬁed the
following requirements.
1. Privacy-awareness. The system should be able to
122132
I1I2IDVerificationModuleEnrollmentModuleYes/NoI2’I1’BiometricmatchingI1I2IDVerificationModuleEnrollmentModuleYes/NoI2’I1’BiometricmatchingFigure 2. The Basic Enrollment Module.
databases. Also, the system should not rely on network
architecture for cryptographic authentication to reduce
the points of failure.
6. Deployability. The system should be deployable. The
overall encryption and processing schemes should be
computationally efﬁcient enough to be implemented
also in real-time applications. The overall structure
should be compact and conﬁgurable so as to be eas-
ily tailored to the real needs of the applications.
4. General Scheme
In this section we describe the scheme of our multimodal
biometric system. We consider ﬁrst that only two biomet-
ric traits are employed concurrently; extensions to a larger
number of biometric traits will be obtained by the compo-
sition of basic modules (see Section 4.3). For each biomet-
ric trait a feature extraction algorithm Fi is selected among
the ones available in the literature. The algorithm, given a
digital representation of the trait, generates a mathematical
description that can then be turned in a digital string Ii (ni
bit long). In the following, to simplify the discussion we
refer to Ii as biometric input. We assume that for at least
one of the two feature extraction algorithms, it is possible
to measure its error rate ei (i.e., the rate of bits in the pattern
Ii which could be modiﬁed without affecting the biometric
veriﬁcation of the subject). Without loss of generality, we
denote such an algorithm as F1.
It is composed of two basic modules:
With regards to inputs and outputs, the overall scheme
resembles a common multimodal system and is depicted in
the en-
Figure 1.
rollment module creates an ID starting from the biometric
readings of a user. The ID can be envisioned as a function of
the binary strings I1 and I2 and is associated with the owner
of the biometric traits. The ID is then stored or printed on
a document and must be provided during the veriﬁcation
phase. The veriﬁcation module veriﬁes the identity claimed
by the user using the ID and novel biometric readings (bio-
metric inputs I(cid:48)
2). The process is successful if the
novel readings match the ones used to build the ID.
1 and I(cid:48)
4.1. Preliminaries:
primitive
the fuzzy extractor
As brieﬂy stated in the introduction, one of the problems
in deriving cryptographic keys from biometric traits is that
digital representations of the same biometric trait always
differ slightly. The same sort of differences are encountered
also among templates. Obviously, a single-bit difference in
a binary string (e.g., a password), by construction, makes it
impossible to recover the secret or validate an authentica-
tion procedure. The ﬁrst problem that needs to be solved is
therefore the one of obtaining reliably reproducible binary
strings from noisy non-uniform inputs.
The secure or fuzzy sketch [8] is a cryptographic prim-
itive that solves the problem of error tolerance. It enables
the computation of a public string P from a binary string
r such that from another binary string r(cid:48) sufﬁciently close
to r it is possible to reconstruct the original one.
In this
construction, the knowledge of P (which is made public),
does not reveal enough information on the original secret
reading r, provided that the entropy of r is large enough.
Secure sketches are therefore attractive in the context of
biometrics, given the large entropy of biometric templates.
Unfortunately, generally speaking, entropy is not uniformly
distributed along biometric templates and low entropy re-
gions do exist. Among other reasons, this might be eas-
ily understood considering that templates usually are for-
matted according to international standards (e.g., ANSI IN-
CITS 378-2004 for ﬁngerprints) and then follow a regular
structure. Moving a step further, fuzzy extractors [1] ad-
dress the problem of non-uniformity by associating a ran-
dom uniform string R to the public string P still preserv-
ing the error-tolerance property of fuzzy sketches. Indeed,
fuzzy extractors can be constructed from fuzzy sketches and
enable the recovering of the secret uniform random string
R, from the knowledge of the public string P and a read-
ing r(cid:48) sufﬁciently close to r. A fuzzy extractor can be seen
as pair of functions: Generate (Gen) and Reproduce (Rep).
Gen is a randomized generation function that from the in-
put binary string w produces a private binary string R and
a public binary string P . The construction guarantees that
the probability density function of the bits in R is close to
uniform even for those who observe P . Rep is a regenera-
tion function that, given in input a public string P obtained
from the Gen procedure and a value w(cid:48) close enough to w
with respect to a certain metric, returns a string S such that
S = R.
The application of a fuzzy extractor to biometric tem-
plates in the real world poses a number of problems. Bio-
metric templates have different formats, which are not al-
ways compatible with the application of fuzzy extractors,
and the deﬁnition of a distance metric among templates
is not always straightforward. Furthermore, at the core of
123133
ExtSS{s, x}scxI1x{P, δ}I2RPFuzzy Extractor GenerationIDδEnrollment ModuleExtSS{s, x}scxI1x{P, δ}I2RPFuzzy Extractor GenerationIDδEnrollment Modulefuzzy extractors typically lies an error correcting code. The
variability among different readings of the same biometric
trait is often larger than the correction capabilities of most
codes and special constructions are needed. (More details
on the speciﬁc fuzzy-extractor we used are reported in the
next section and some practical details in Section 5).
4.2. The Basic Modules
A simpliﬁed sketch of the enrollment phase is reported
in Figure 2 where the basic enrollment module is depicted.
A novel identiﬁer ID is created for each user, by composing
the available biometric features. The ﬁrst biometric input I1
is used as input to the generation function of a fuzzy extrac-
tor that returns a public string P , and a secret R. The secret
string R is then xor-ed with I2 to produce the resulting bi-
nary string δ, that together with P constitute the ID for the
user. The construction guarantees that the randomness in R
is uniformly distributed, therefore from the ID it is not pos-
sible to reconstruct I2. The strings P and R are produced
directly by the Gen procedure of the fuzzy extractor which
has been built out of a secure sketch SS, according to the
construction proposed in [1]. The secret uniform random
string R is computed as R = Ext(I1, x), where Ext(w; x)
is the application of a strong extractor with randomness x
. A possible strong extractor is constructed selecting a ran-
dom binary string x and using it as key in a Hash-based
Message Authentication Code (HMAC). The public string
P is computed as P = SS(I1; c)||x, where SS(w; c) is the
output of the secure sketch with randomness c, used in the
construction of the fuzzy extractor. In practise, one selects
an error correcting code with n1 bits-long codewords and
error correcting capability t = e1 × n1. Then, a random
codeword c is selected and the distance between c and I1 is
computed as s = I1 ⊕ c.
1 and I(cid:48)
The veriﬁcation module, illustrate in Figure 3, combines
the ID associated with the user and two fresh biometric
readings to execute the authentication procedure through
biometric matching. The digital representations of the bio-
metric traits are processed through the same algorithms se-
lected for enrollment (e.g., F1 and F2) leading to the binary
strings I(cid:48)
2. Given the variability inherent to biomet-
rics, I1 and I2 are similar to I(cid:48)
2 respectively, with
respect to a certain metric. The veriﬁcation module relies
on the regeneration phase of the fuzzy extractor, which em-
1 and the public string P = {s, x} regenerates
ploying I(cid:48)
the same secret string R obtained from I1. More in detail,
1 ⊕ s is a corrupted version of c, if the fresh reading
c(cid:48) = I(cid:48)
I(cid:48)
1 is sufﬁciently close to the enrolled feature I1. In this case
the Rec phase of the secure sketch embedded in the fuzzy
extractor will return the string I1. In fact, processing c(cid:48) with
the decoding algorithm of the selected error correcting code
one might obtain c which in turn leads to I1 = c ⊕ s. With
1 and I(cid:48)
Figure 3. The Basic Veriﬁcation Module.
I1 in hand, R is obtained following the same path used at
enrollment: I1 is given in input to the strong extractor Ext
together with x contained in the public string P . Finally,
the reconstruction of the second biometric feature I2 is ob-
tained from R as I2 = R ⊕ δ. The veriﬁcation succeeds
if the biometric matching between I2 and the I(cid:48)
2 is positive.
It is worth noticing that differently from other approaches
that are based on fuzzy sketches or extractors, the veriﬁca-
tion phase relies on a biometric matcher and not on a direct
comparison between reconstructed strings. If more accurate
matching modules were developed for the same biometric
trait, it would be possible to embed them into the scheme
with no impact on the remaining modules. Moreover, no-
tice that no requirements are set for the construction of the
matcher.
4.3. Composition of basic modules
The composition of the basic modules enables the cre-
ation of authentication applications having different levels
of security and using a higher number of biometric features.
The basic enrollment and veriﬁcation modules can be com-
bined hierarchically and/or in parallel (with respect to the