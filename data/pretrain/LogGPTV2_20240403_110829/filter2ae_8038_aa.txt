# U2F安全协议分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
U2F，Universal 2nd Factor，通用第二因素，属于2FA的一种，意即在用户名和密码的基础上再增加一种验证手段，以增强用户验证的安全性。
出于研究的用途，笔者买了一支yubico 的usb key，并对其进行了测试和研究。以下是笔者的研究笔记，供对U2F感兴趣的朋友参考。
## 方法
对于想要测试U2F朋友，yubico已经提供了测试用的网站，网址是：
在测试网址上可以测试注册和登录功能。
U2F可以理解为一种协议标准，目前该标准由FIDO联盟进行维护和设备认证，也就是说FIDO联盟制定了U2F协议标准并对该标准进行维护，同时对厂商生产的U2F设备进行认证。
U2F标准规定了U2F设备可以使用USB接口，蓝牙，NFC的方式与PC机进行通信。通信过程需要三方的支持：网站，U2F客户端，U2F设备。目前常用的U2F客户端为浏览器。
U2F的业务流程描述如下：U2F主要支持两种业务，注册和登录。既然是双因素认证，首先，用户使用浏览器（U2F客户端）输入自己的用户名和密码在网站注册。当注册成功后，网站向浏览器发起U2F设备注册请求，浏览器收到网站的请求后，将请求打包发给U2F设备，设备进行处理，在设备内针对每个不同的网站都生成一对ECC曲线的公私钥，并将用户公钥传给网站。
接着是登录过程，登录过程必须先使用用户名和密码登录，用户名和密码验证正确后，网站使用之前注册的信息向浏览器发出登录验证请求，浏览器向U2F设备转发。U2F使用私钥对协议数据进行签名，网站使用注册时留下的公钥进行验签，以鉴别用户身份。验签成功，完成2FA过程。
目前，chrome浏览器已经实现了对U2F协议和U2F设备的支持。
笔者的测试方法就是使用chrome浏览器访问
执行网页上的注册和登录操作，同时，使用Wireshark监听USB通信（是的，Wireshark不仅能监听网络包，还能监听USB包，安装Wireshark记得把USBPcap的选项选上），同时参考U2F协议的文档，对协议进行分析。
因为笔者手上仅有USB接口的U2F设备，因此以下分析仅针对U2F-HID协议进行分析。
## 协议分析
U2F-HID协议由底至顶可以分为三层，USB层，U2F-HID层，U2F-Raw
Message层。因为我手上的yubikey使用USB接口与PC机进行通信。因此，首先必须实现USB协议，接下来是U2F-HID层。USB层，U2F-HID层都与接口有关。最后一层是与接口无关的。不管使用的USB，蓝牙还是NFC都是一样的。
首先是USB层的实现，一款USB-HID设备想要和PC进行通信，首先必须实现最基本的USB协议，响应主机的USB配置请求。
如上图所示，主机向yubikey发送设备描述符请求和接口描述符请求，yubikey响应这些请求，告诉主机自己是一款USB-HID设备及使用哪一个USB端口。因为在这里USB协议仅仅是U2F协议的一个载体，不影响U2F协议的分析，而且在网上有很多针对USB协议的分析文章，这一部分我们就略过不表。
接下来是U2F-HID层。我们先来介绍下U2F的协议。
根据U2F协议要求，每个U2F-HID包的最大大小是64个字节，当一个包的数据长度超过64个字节时，需要将包进行拆分。拆分出来的包格式也不一样，第一个包的格式如下：
偏移 | 长度 | 缩写 | 描述  
---|---|---|---  
0 | 4 | CID | 通道ID  
4 | 1 | CMD | 命令类型  
5 | 1 | BCNTH | 长度高字节  
6 | 1 | BCNTL | 长度底字节  
7 | N | DATA | 数据  
从上表我们可以看出，第一个包的头7个字节已经被用掉了，还剩下64-7=57个字节用于存放数据。当包头的BCNTH*256+BCNTL>57的时候，就说明还有数据剩余，在这一个包里面装不下。接下来剩下的包都必须按如下的格式封装：
偏移 | 长度 | 缩写 | 描述  
---|---|---|---  
0 | 4 | CID | 通道ID（0~127）  
4 | 1 | SEQ | 包序号  
5 | N | DATA | 剩余数据  
从上表可以看出，在一段数据中剩下的包序列从0开始，最大可以达到127，所有一共有128个可用序列。而可用数据长度为64-5=59个字节。  
所以，一段数据的最大长度为57+128*59=7609。
在上面两张表中，通道ID就是通信双方进行通信的通道ID，一整个通信过程使用一个通道ID。当通信信道还没有建立的时候，使用通道ID
ffffffff，表示此时使用的是广播用的通道ID。
CMD命令类型是如下四种中的一个：
命令类型 | 描述  
---|---  
U2FHID_MSG | 传递数据  
U2FHID_INIT | 初始化  
U2FHID_PING | 状态监测  
U2FHID_ERROR | 告知错误  
BCNTH，BCNTL，两个字节用于告知数据长度，这个很好理解。
那么DATA段里面是什么内容呢？
DATA的内容根据不同的CMD有不同的内容。
当CMD为U2FHID_MSG时，DATA段里面的数据根据U2F-Message层进行封装。不管你采用哪种通信接口，蓝牙，NFC，还是USB。U2F-Message层的封装都是一致的。U2F-Message层的封装主要参考ISO7816国际标准，采用APDU格式进行封装。主要包括CLA，INS，P1，P2，长度及数据6个部分。
CLA是CLASS的缩写，用于表示类别。INS用于表示指令，P1，P2用于表示参数。
U2F-Message支持三种命令：U2F_REGISTER，
U2F_AUTHENTICATE和U2F_VERSION，这三种命令根据INS字节进行区别，三种命令的字段填充如下：
类型 | INS | P1 | P2  
---|---|---|---  
U2F_REGISTER | 01 | 00 | 00  
U2F_AUTHENTICATE | 02 | 03/07/08 | 00  
U2F_VERSION | 03 | 00 | 00  
CLS字段在当前版本的协议中统一填充0；