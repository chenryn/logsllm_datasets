* ignore client-updates; 现在这个选项是可以忽略的，因为 DDNS 在前面已在配置文件中已经被禁用，但是当 DDNS 运行时，这个选项会忽略主机更新其 DNS 主机名的请求。
5、 文件中下面一行是权威 DHCP 所在行。这行的意义是如果服务器是为文件中所配置的网络分发地址的服务器，那么取消对该 权威关键字   （    authoritative stanza    ） 的注释。
通过去掉关键字 authoritative 前面的 ‘#’，取消注释全局权威关键字。这台服务器将是它所管理网络里面的唯一权威。
![Enable ISC Authoritative](/data/attachment/album/201512/25/113156kzkakqi2msc2672y.png)
默认情况下服务器被假定为**不是**网络上的权威服务器。之所以这样做是出于安全考虑。如果有人因为不了解 DHCP 服务的配置，导致配置不当或配置到一个不该出现的网络里面，这都将带来非常严重的连接问题。这行还可用在每个网络中单独配置使用。也就是说如果这台服务器不是整个网络的 DHCP 服务器，authoritative 行可以用在每个单独的网络中，而不是像上面截图中那样的全局配置。
6、 这一步是配置服务器将要管理的所有 DHCP 地址池/网络。简短起见，本教程只讲到配置的地址池之一。作为管理员需要收集一些必要的网络信息（比如域名，网络地址，有多少地址能够被分发等等）
以下这个地址池所用到的信息都是管理员收集整理的：网络 ID 172.27.60.0, 子网掩码 255.255.255.0 或 /24, 默认子网网关 172.27.60.1，广播地址 172.27.60.255.0 。
以上这些信息对于构建 dhcpd.conf 文件中新网络非常重要。使用文本编辑器修改配置文件添加新网络进去，这里我们需要使用 root 或 sudo 访问权限。
```
# nano /etc/dhcp/dhcpd.conf
```
![Configure DHCP Pools and Networks](/data/attachment/album/201512/25/113159yh78d07w6878td2h.png)
当前这个例子是给用 VMWare 创建的虚拟服务器分配 IP 地址。第一行显示是该网络的子网掩码。括号里面的内容是 DHCP 服务器应该提供给网络上面主机的所有选项。
第一行， range 172.27.60.50 172.27.60.254; 这一行显示的是，DHCP 服务在这个网络上能够给主机动态分发的地址范围。
第二行，option routers 172.27.60.1; 这里显示的是给网络里面所有的主机分发的默认网关地址。
最后一行， option broadcast-address 172.27.60.255; 显示当前网络的广播地址。这个地址不能被包含在要分发放的地址范围内，因为广播地址不能分配到一个主机上面。
必须要强调的是每行的结尾必须要用（;）来结束，所有创建的网络必须要在 {} 里面。
7、 如果要创建多个网络，继续创建完它们的相应选项后保存文本文件即可。配置完成以后如果有更改，ISC-DHCP-Server 进程需要重启来使新的更改生效。重启进程可以通过下面的命令来完成：
```
# service isc-dhcp-server restart
```
这条命令将重启 DHCP 服务，管理员能够使用几种不同的方式来检查服务器是否已经可以处理 dhcp 请求。最简单的方法是通过 [lsof 命令](http://www.tecmint.com/10-lsof-command-examples-in-linux/)来查看服务器是否在侦听67端口，命令如下：
```
# lsof -i :67
```
![Check DHCP Listening Port](/data/attachment/album/201512/25/113203nfb1rg8vvvlr9911.png)
这里输出的结果表明 dhcpd（DHCP 服务守护进程）正在运行并且侦听67端口。由于在 /etc/services 文件中67端口的映射，所以输出中的67端口实际上被转换成了 “bootps”。
在大多数的系统中这是非常常见的，现在服务器应该已经为网络连接做好准备，我们可以将一台主机接入网络请求DHCP地址来验证服务是否正常。
### 测试客户端连接
8、 现在许多系统使用网络管理器来维护网络连接状态，因此这个设备应该预先配置好的，只要对应的接口处于活跃状态就能够获取 DHCP。
然而当一台设备无法使用网络管理器时，它可能需要手动获取 DHCP 地址。下面的几步将演示怎样手动获取以及如何查看服务器是否已经按需要分发地址。
‘[ifconfig](http://www.tecmint.com/ifconfig-command-examples/)‘工具能够用来检查接口的配置。这台被用来测试的 DHCP 服务器的设备，它只有一个网络适配器（网卡），这块网卡被命名为 ‘eth0‘。
```
# ifconfig eth0
```
![Check Network Interface IP Address](/data/attachment/album/201512/25/113205zxppllueoljupnzp.png)
从输出结果上看，这台设备目前没有 IPv4 地址，这样很便于测试。我们把这台设备连接到 DHCP 服务器并发出一个请求。这台设备上已经安装了一个名为 ‘dhclient‘ 的DHCP客户端工具。因为操作系统各不相同，所以这个客户端软件也是互不一样的。
```
# dhclient eth0
```
![Request IP Address from DHCP](/data/attachment/album/201512/25/113207dyru6frkmryj0mr5.png)
当前 `'inet addr:'` 字段中显示了属于 172.27.60.0 网络地址范围内的 IPv4 地址。值得欣慰的是当前网络还配置了正确的子网掩码并且分发了广播地址。
到这里看起来还都不错，让我们来测试一下，看看这台设备收到新 IP 地址是不是由服务器发出的。这里我们参照服务器的日志文件来完成这个任务。虽然这个日志的内容有几十万条，但是里面只有几条是用来确定服务器是否正常工作的。这里我们使用一个工具 ‘tail’，它只显示日志文件的最后几行，这样我们就可以不用拿一个文本编辑器去查看所有的日志文件了。命令如下：
```
# tail /var/log/syslog
```
![Check DHCP Logs](/data/attachment/album/201512/25/113215jxwmv3cgagugvkae.png)
OK!服务器记录表明它分发了一个地址给这台主机 (HRTDEBXENSRV)。服务器按预期运行，给它充当权威服务器的网络分发了适合的网络地址。至此 DHCP 服务器搭建成功并且运行。如果有需要你可以继续配置其他的网络，排查故障，确保安全。
在以后的Debian教程中我会讲一些新的 ISC-DHCP-Server 功能。有时间的话我将写一篇关于 Bind9 和 DDNS 的教程，融入到这篇文章里面。
---
via: 
作者：[Rob Turner](http://www.tecmint.com/author/robturner/) 译者：[ivo-wang](https://github.com/ivo-wang) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出