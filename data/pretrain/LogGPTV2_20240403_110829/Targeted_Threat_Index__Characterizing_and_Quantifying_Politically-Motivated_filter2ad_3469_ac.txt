### 4.2.3 Summary of Social Engineering Sophistication Base Value

Figure 3 illustrates the social engineering sophistication base value assigned to email submissions from groups that submitted at least 50 emails. The data shows that actors targeting these groups put significant effort into crafting their messages. Notably, more than half of the emails targeting the three Tibetan groups (Tibet Group 1, Tibet Group 2, and Tibet Group 4) received a score of 3 or higher. This indicates that adversaries are carefully making the emails appear to come from legitimate sources and often include relevant information, such as news reports or exchanges from public mailing lists.

Higher targeting scores, which result from actions like personalizing lures to specific individuals or including information that requires prior reconnaissance, are less common but still observed. For example, an email sent to China Group 3 received a social engineering score of 5, claiming to be from the groupâ€™s funder and referencing a specific meeting that was not publicly known.

### 4.3 Technical Sophistication

#### 4.3.1 Assessment Methodology

We manually analyzed all submitted emails and attachments to determine whether they contained politically-motivated malware. The analysis process includes:

1. **Initial Inspection**: Checking for social engineering techniques in the email message and attachment, such as an executable masquerading as a document.
2. **Correlation with Known Malware**: Comparing the email with other known malware samples to identify any matches.
3. **Exclusion of Common Malware**: Well-known malware attacks, such as the Zeus trojan or Bredolab, are not considered targeted attacks in our study but are kept for potential review.

For suspected emails containing politically-motivated malware, we perform the following steps:

1. **Sandbox Analysis**: Running the attachment in a sandboxed virtual machine (VM) to detect malicious activity, such as file writing or C&C server connections.
2. **MD5 Hash Check**: Verifying the MD5 hash of the attachment against the Virus Total database.
3. **Manual Examination**: Analyzing the attached file for signs of malicious intent, such as executable payloads in PDFs, shellcode, or JavaScript.
4. **Exclusion of Non-Malicious Graphics**: Ignoring graphics used for social engineering that do not contain malicious payloads.

#### 4.3.2 Detailed Technical Analysis

Once we confirm the presence of malware, we conduct a more detailed analysis:

1. **File Type Verification**: Manually verifying the file type to ensure accuracy, as automated tools can be misled by byte manipulation.
2. **Vulnerability Identification**: Checking if the vulnerability is listed in the Common Vulnerabilities and Exposures (CVE) system.
3. **Network Traffic Analysis**: Identifying the C&C server the malware attempts to contact.
4. **Manual Extraction**: In cases where the malware does not execute in our controlled environment, manually examining the file to extract relevant information.

We use additional tools like IDA and OllyDbg for static and dynamic analysis, respectively. Our goal is to identify relationships between malware campaigns and instances of the same malware family targeting specific organizations. By observing overlapping C&C servers and mapping malware to common exploits, we can cluster attacks that likely come from the same adversary.

#### 4.3.3 Technical Sophistication Multiplier

To measure the relative technical sophistication of malware, we assign each sample a numerical score based on the level of code protection and obfuscation:

- **1 (Not Protected)**: No code protection, such as packing, obfuscation, or anti-reversing tricks.
- **1.25 (Minor Protection)**: Simple methods of protection, such as UPX packing or basic anti-reversing techniques.
- **1.5 (Multiple Minor Protection Techniques)**: Multiple minor code protection techniques, such as anti-reversing tricks, packing, and VM detection.
- **1.75 (Advanced Protection)**: Minor code protection techniques plus at least one advanced method, such as rootkit functionality or custom virtualized packers.
- **2 (Multiple Advanced Protection Techniques)**: Multiple advanced protection techniques, clearly designed by a professional team.

The purpose of this multiplier is to assess how well the malware can conceal its presence on a compromised machine. Advanced malware requires more time and effort to customize, making it more challenging to detect and analyze.

### 4.3.4 Summary of Technical Sophistication Multiplier Value

Figure 4 shows the technical sophistication multiplier values for emails submitted by different organizations in our study. The key observation is that the email-based targeted malware reported by our study groups is relatively simple. The highest multiplier value observed is 1.5, and even this value is infrequent. Most malware is rated either 1 or 1.25, with Tibetan groups observing a higher fraction of malware rated 1.25 and Chinese groups observing a higher fraction rated 1.

The technical sophistication multiplier is also useful for assessing the technical evolution of threats. We observe multiple versions of malware families, such as Enfal, Mongal, and Gh0st RAT, with increasing levels of sophistication and defenses, resulting in an increase in the technical multiplier from 1 to 1.25. Interestingly, when both Windows and Mac versions of a malware family are observed, the Mac version tends to have a lower technical score, indicating it is relatively primitive compared to the Windows variant.

### 4.4 TTI Results

Figure 5 shows the technical sophistication multiplier and maximum/minimum TTI scores for malware families observed in our dataset. Since most observed malware has a technical sophistication multiplier of 1 or 1.25, this value alone is insufficient to differentiate the threat posed by different malware families. However, by incorporating both the technical sophistication and targeting base value into the TTI metric, we can gain more insights into the effectiveness of these targeted attacks.

---

**USENIX Association**  
**23rd USENIX Security Symposium**  
**Page 536**