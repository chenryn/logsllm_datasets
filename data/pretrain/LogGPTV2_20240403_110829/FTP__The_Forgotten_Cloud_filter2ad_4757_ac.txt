.gif
.png
.mp4
.doc
.html
.zip
15,962,091
2,443,285
1,010,005
955,832
762,581
476,530
456,471
440,118
426,646
294,649
10,187
4,912
9,825
4,954
5,291
5,456
5,797
3,924
5,275
6,698
providers as a major source of anonymous FTP servers in
the IPv4 address space. Table VIII shows the most common
ﬁle extensions found on devices we can identify as small-
ofﬁce/home-ofﬁce devices. Although we will later address the
use of anonymous FTP for pirated content exchanges, we ﬁnd
that the majority of .mp3, .avi, and .mp4 ﬁles appear to be
users’ personal media collections.
Sensitive Documents. We also looked for ﬁles from less
common yet more sensitive classes of documents. We ﬁnd large
numbers of email and ﬁnancial documents, including more than
12.6K email archives and 7.7K Quicken data ﬁles. We show a
breakdown of the most prevalent and likely sensitive ﬁles in Ta-
ble IX. We also found instances of what appear to be company-
or ofﬁce-wide backups on single FTP servers resulting in
occurrences of a single server holding 688 .pst ﬁles (Outlook
mailboxes), another with 146 shadow ﬁles (Unix password
databases), and a third with years of backups for ﬁnancial ﬁles.
Anecdotally, we observed many other apparent examples of
private information while sifting through our dataset, including
what appeared to be medical records, companies’ bids for
work, and human resource records. Unfortunately, these are
mostly personalized in terms of ﬁlename, location, and (likely)
contents, making precise measurement infeasible.
Photo Libraries. A similar pattern emerged for personal
photos, where we found 13.7M photos (12.9M with readable
permissions) with names consistent with the common default
formats for consumer cameras on 17K servers. Based on the
directory paths alone, it appears that these photos provide an
intimate glimpse into users’ personal lives. Weddings, family
reunions, vacations, birthday parties, and more are organized
and available to any voyeur who wishes to look.
Root File Systems Exposed. Many devices look to ex-
pose most of, if not all, of their ﬁlesystem over FTP. By looking
for known OS-root directories, we can estimate the number.
Within the same FTP path, we looked for : bin, var, boot, and
etc on Linux; Applications, bin, var, Library and Users
on Mac OS; Program Files, Documents and Settings,
and WINDOWS on early Windows versions; and Windows,
Program Files, and Users on later Windows. With this
approach we found 825 Windows, 3,858 Linux, and 15 OS X
servers with their OS-root exposed.
Scripting Source Code.
In the case of hosting providers,
allowing customers to upload and traverse webpages’ source
ﬁles is not necessarily a vulnerability, but if it exposes the
source code to server-side scripts, it can drastically reduce
the difﬁculty of ﬁnding vulnerabilities to exploit. Additionally,
any inline conﬁguration ﬁles (such as .htaccess) and any
secrets (such as API keys) contained within server-side code
are also shared. In total, we found 189.4K .htaccess ﬁles
on 4.5K servers along with 10.2M other server-side scripting
source ﬁles on 32K servers.
B. Responsible Devices
When we look to explain the exposure of this sensitive
information, our device ﬁngerprints described in Section IV
shed some light on possible sources. As shown in Table X, we
are able to determine 12.3% of the devices exposing sensitive
user information, pointing to a manufacturer and often a speciﬁc
device model. We see two major classes of devices: consumer
NAS devices and consumer-grade “smart” routers. Using this
information, we investigated the user manuals for many of these
devices to determine how and why anonymous FTP might be
enabled and exposed to the Internet.
Consumer NAS Devices. The ﬁrst of these major classes
is the personal/small-ofﬁce Network Attached Storage (NAS)
devices previously referenced in Section IV-A and includes
198K devices (18K of which enable anonymous access). Similar
in form to USB external disks enclosures, these devices contain
one or more hard drives and connect to the network via ethernet
or WiFi.
The user manuals for many of these devices provide great
insight as to why they are accessible from the Internet. While
we, as security researchers, recommend that ﬁrewalls or NAT be
used to restrict access to user’s internal/trusted home networks,
it is apparently not the recommendation of device manufacturers.
Many of the manuals contain dedicated sections on Accessing
your device from anywhere where they describe how to set up
port forwarding or UPnP sharing on the user’s home router,
how to ﬁnd the router’s public IP address, and information
about Dynamic DNS providers [12], [33], [40]. Many of
507
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:25 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IX.
EXAMPLES OF SENSITIVE EXPOSURE VIA ANONYMOUS FTP INCLUDING FILE PERMISSIONS
Type
File
# Servers
# Files
# Readable
# Non-readable
# Unk-readable
Financial Information
Password Databases
Key Material
Other
TurboTax Export
Quicken Data
KeePass/KeePassX
1Password
SSH host private keys
Putty SSH client keys
“priv” .pem ﬁles
shadow ﬁles
.pst ﬁles
464
440
210
11
819
82
701
8,190
7,702
1,812
24
1,597
128
1,397
590
2,419
718
12,636
8,139
7,652
1,762
23
139
98
1,335
238
10,918
6
6
6
0
1,427
0
2
473
103
45
241
44
1
31
30
60
7
1,615
TABLE X.
BREAKOUT OF DEVICES EXPOSING USER INFORMATION
Type of Exposure
Generic
Sensitive Documents
Photo Libraries
Root File Systems
Scripting Source
All
26.29%
39.98%
10.54%
72.51%
56.05%
Embedded
NAS
Router
7.08%
12.35%
0.68%
1.74%
20.16%
11.52%
1.30%
3.26%
4.54%
6.31%
Other
0.18%
0.01%
0.00%
2.36%
1.45%
Hosting
Unk
0.12%
3.12%
0.00%
3.48%
3.00%
45.54%
33.00%
87.34%
16.56%
28.67%
devices display their IP address in their FTP banners, and
we can see from our dataset that many are using private
addresses (192.168.0.0/16, 10.0.0.0/8, etc.), indicating that they
are conﬁgured in this way. With few exceptions (e.g., [11]),
these manual sections are devoid of warnings on the hazards
of making a device accessible from the entire Internet. As we
will discuss in Section VIII, even devices without anonymous
access enabled are vulnerable to attackers guessing weak or
default passwords.
With regard to anonymous access, the user manuals are often
ambiguous with regard to permissions and how they apply in
different conﬁgurations. The LaCie CloudBox’s description of
the built-in “Family” directory is an example of this. While one
part of the manual explicitly states,“This type of unrestricted
use of a shared folder is called Public Access”, other portions
discuss it in terms of “everyone in the home” or “all the
computers connected to the same router”, giving the impression
that the public access is restricted to the local network [33].
While misleading, this description of “in the home” is not
incorrect. The manual typically describes accessing the device
via SMB, which is not a routable protocol due to it being built
on top of NetBIOS. If accessed via FTP, this directory allows
anonymous access.
Smart Routers. The second class of devices is “smart”
home routers, which, unlike traditional home routers, do much
more than provide basic NAT and ﬁrewall features. Such devices
account for 59.9K devices (6.7K with anonymous access).
Among other features, many smart routers include NAS-like
functionality and can expose external USB drives over the
network [35] [5], and others ship with pre-installed internal
hard drives [4].
Unlike NAS devices, home routers are typically on the
edge of the user’s network and do not require port forwarding
to be accessible. Unfortunately, this further lowers the bar
for exposing user information. For a time, ASUS routers
automatically enabled anonymous access for any USB drive
attached to the router [38]. But even without such dangerous
default conﬁgurations, routers as a whole are no better than NAS
devices with regard to their documentation. In addition to the
lack of clarity with regard to public access to shares described
above, some routers also suffer from a lack of proper naming
conventions. For example, certain routers include a built-in
ﬁrewall rule named, “Filter Anonymous Internet Requests”, yet
this rule actually only blocks anonymous ICMP echo requests
and not anonymous FTP access [34].
VI. MALICIOUS USE
We ﬁnd several malicious campaigns that leverage world-
writable anonymous FTP to distribute malware, launch DDoS
attacks, and carry out SEO campaigns. During this investigation,
we downloaded a small number of ﬁles associated with malware
for analysis. In all instances, the ﬁles were hand selected based
on their frequent occurrence across diverse servers or their
frequent co-location with known malicious ﬁles.
A. World-writable Determination
We ﬁrst investigated whether anonymous servers support
ﬁle upload through FTP or if our read access simply allows us
to see infections that originated from an unrelated vulnerability.
The most precise way to determine whether a server is world
writable would be to attempt to upload a ﬁle to every anonymous
FTP server. However, to reduce the impact of our scans, we
took a more conservative approach and instead looked at the
attributes and behavior of writable servers to create a reference
set of ﬁles that indicate that a server allows anonymous write
access.
This set mainly consists of two types of ﬁles. The ﬁrst
type is those indicated by the server as having been uploaded
anonymously. Some servers are conﬁgured to allow anonymous
users to upload ﬁles, but those ﬁles may not be downloaded
until the administrator changes the ﬁle’s ownership. Pure-
FTPd explicitly conﬁrms that certain ﬁles were uploaded by
responding to relevant RETR commands with “This file has
been uploaded by an anonymous user. It has not
yet been approved for downloading by the site
administrators.” The second type is ﬁles that are parts of
508
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:25 UTC from IEEE Xplore.  Restrictions apply. 
write-probing campaigns. The three most pervasive probing
campaigns upload ﬁles named w0000000t.[txt/php],
sjutd.txt, and hello.world.txt. Each ﬁle contains
a simple string such as “Anonymous”, “test”,