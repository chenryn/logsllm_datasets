·command（str类型），执行的命令串；
·bufsize（int类型），文件缓冲区大小，默认为–1（不限制）。
3.load_system_host_keys方法
加载本地公钥校验文件，默认为~/.ssh/known_hosts，非默认路径需要手工指
定，方法定义：
load_system_host_keys（self， filename=None）
参数说明：
filename（str类型），指定远程主机公钥记录文件。
4.set_missing_host_key_policy方法
设置连接的远程主机没有本地主机密钥或HostKeys对象时的策略，目前支持
三种，分别是AutoAddPolicy、RejectPolicy（默认）、WarningPolicy，仅限用于
SSHClient类，分别代表的含义如下：
·AutoAddPolicy，自动添加主机名及主机密钥到本地HostKeys对象，并将其
保存，不依赖load_system_host_keys（）的配置，即使~/.ssh/known_hosts不存在
也不产生影响；
·RejectPolicy，自动拒绝未知的主机名和密钥，依赖
load_system_host_keys（）的配置；
·WarningPolicy，用于记录一个未知的主机密钥的Python警告，并接受它，功
能上与AutoAddPolicy相似，但未知主机会有告警。
使用方法如下：
ssh=paramiko.SSHClient（）
ssh.set_missing_host_key_policy（paramiko.AutoAddPolicy（））
6.2.2 SFTPClient类
SFTPClient作为一个SFTP客户端对象，根据SSH传输协议的sftp会话，实现
远程文件操作，比如文件上传、下载、权限、状态等操作，下面介绍SFTPClient
类的常用方法。
1.from_transport方法
创建一个已连通的SFTP客户端通道，方法定义：
from_transport（cls， t）
参数说明：
t（Transport），一个已通过验证的传输对象。
例子说明：
t = paramiko.Transport（（"192.168.1.22"，22））
t.connect（username="root"， password="KJSdj348g"）
sftp =paramiko.SFTPClient.from_transport（t）
2.put方法
上传本地文件到远程SFTP服务端，方法定义：
put（self， localpath， remotepath， callback=None， confirm=True）
参数说明：
·localpath（str类型），需上传的本地文件（源）；
·remotepath（str类型），远程路径（目标）；
·callback（function（int，int）），获取已接收的字节数及总传输字节数，以
便回调函数调用，默认为None；
·confirm（bool类型），文件上传完毕后是否调用stat（）方法，以便确认文
件的大小。
例子说明：
localpath='/home/access.log'
remotepath='/data/logs/access.log'
sftp.put（localpath，remotepath）
3.get方法
从远程SFTP服务端下载文件到本地，方法定义：
get（self， remotepath， localpath， callback=None）
参数说明：
·remotepath（str类型），需下载的远程文件（源）；
·localpath（str类型），本地路径（目标）；
·callback（function（int，int）），获取已接收的字节数及总传输字节数，以
便回调函数调用，默认为None。
例子说明：
remotepath='/data/logs/access.log'
localpath='/home/access.log'
sftp.get（remotepath， localpath）
4.其他方法
SFTPClient类其他常用方法说明：
·Mkdir，在SFTP服务器端创建目录，如
sftp.mkdir（"/home/userdir"，0755）。
·remove，删除SFTP服务器端指定目录，如sftp.remove（"/home/userdir"）。
·rename，重命名SFTP服务器端文件或目录，如
sftp.rename（"/home/test.sh"，"/home/testfile.sh"）。
·stat，获取远程SFTP服务器端指定文件信息，如
sftp.stat（"/home/testfile.sh"）。
·listdir，获取远程SFTP服务器端指定目录列表，以Python的列表（List）形
式返回，如sftp.listdir（"/home"）。
5.SFTPClient类应用示例
下面为SFTPClient类的一个完整示例，实现了文件上传、下载、创建与删除
目录等，需要注意的是，put和get方法需要指定文件名，不能省略。详细源码如
下：
#！/usr/bin/env python
import paramiko
username = "root"
password = "KJsd8t34d"
hostname = "192.168.1.21"
port = 22
try：
t = paramiko.Transport（（hostname， port））
t.connect（username=username， password=password）
sftp =paramiko.SFTPClient.from_transport（t）
sftp.put（"/home/user/info.db"， "/data/user/info.db"） #上传文件
sftp.get（"/data/user/info_1.db"， "/home/user/info_1.db"） #下载文件
sftp.mkdir（"/home/userdir"，0755） #创建目录
sftp.rmdir（"/home/userdir"） #删除目录
sftp.rename（"/home/test.sh"，"/home/testfile.sh"） #文件重命名
print sftp.stat（"/home/testfile.sh"） #打印文件信息
print sftp.listdir（"/home"） #打印目录列表
t.close（）；
except Exception， e：
print str（e）
6.3 paramiko应用示例
6.3.1 实现密钥方式登录远程主机
实现自动密钥登录方式，第一步需要配置与目标设备的密钥认证支持，具体
见9.2.5节，私钥文件可以存放在默认路径“~/.ssh/id_rsa”，当然也可以自定义，如
本例的“/home/key/id_rsa”，通过paramiko.RSAKey.from_private_key_file（）方法
引用，详细代码如下：
【/home/test/paramiko/simple2.py】
#！/usr/bin/env python
import paramiko
import os
hostname='192.168.1.21'
username='root'
paramiko.util.log_to_file（'syslogin.log'）
ssh=paramiko.SSHClient（）
ssh.load_system_host_keys（）
privatekey = os.path.expanduser（'/home/key/id_rsa'） #定义私钥存放路径
key = paramiko.RSAKey.from_private_key_file（privatekey） #创建私钥对象key
ssh.connect（hostname=hostname，username=username，pkey = key）
stdin，stdout，stderr=ssh.exec_command（'free -m'）
print stdout.read（）
ssh.close（）
程序执行结果见图6-1。
6.3.2 实现堡垒机模式下的远程命令执行
堡垒机环境在一定程度上提升了运营安全级别，但同时也提高了日常运营成
本，作为管理的中转设备，任何针对业务服务器的管理请求都会经过此节点，
比如SSH协议，首先运维人员在办公电脑通过SSH协议登录堡垒机，再通过堡垒
机SSH跳转到所有的业务服务器进行维护操作，如图6-2所示。
图6-2 堡垒机模式下的远程命令执行
我们可以利用paramiko的invoke_shell机制来实现通过堡垒机实现服务器操
作，原理是SSHClient.connect到堡垒机后开启一个新的SSH会话（session），通
过新的会话运行“ssh user@IP”去实现远程执行命令的操作。实现代码如下：
【/home/test/paramiko/simple3.py】
#！/usr/bin/env python
import paramiko
import os，sys，time
blip="192.168.1.23" #定义堡垒机信息
bluser="root"
blpasswd="KJsdiug45"
hostname="192.168.1.21" #定义业务服务器信息
username="root"
password="IS8t5jgrie"
port=22
passinfo='\'s password： ' #输入服务器密码的前标志串
paramiko.util.log_to_file（'syslogin.log'）
ssh=paramiko.SSHClient（） #ssh登录堡垒机
ssh.set_missing_host_key_policy（paramiko.AutoAddPolicy（））
ssh.connect（hostname=blip，username=bluser，password=blpasswd）
channel=ssh.invoke_shell（） #创建会话，开启命令调用
channel.settimeout（10） #会话命令执行超时时间，单位为秒
buff = ''
resp = ''
channel.send（'ssh '+username+'@'+hostname+'\n'） #执行ssh登录业务主机
while not buff.endswith（passinfo）： #ssh登录的提示信息判断，输出串尾含
有"\'s password："时
try： #退出while循环
resp = channel.recv（9999）
except Exception，e：
print 'Error info：%s connection time.' % （str（e））
channel.close（）
ssh.close（）
sys.exit（）
buff += resp
if not buff.find（'yes/no'）==-1： #输出串尾含有"yes/no"时发送"yes"并回车
channel.send（'yes\n'）
buff=''
channel.send（password+'\n'） #发送业务主机密码
buff=''
while not buff.endswith（'# '）： #输出串尾为"# "时说明校验通过并退出while循环
resp = channel.recv（9999）
if not resp.find（passinfo）==-1： #输出串尾含有"\'s password： "时说明密码
不正确，
#要求重新输入
print 'Error info： Authentication failed.'
channel.close（） #关闭连接对象后退出
ssh.close（）
sys.exit（）
buff += resp
channel.send（'ifconfig\n'） #认证通过后发送ifconfig命令来查看结果
buff=''
try：
while buff.find（'# '）==-1：
resp = channel.recv（9999）
buff += resp
except Exception， e：
print "error info："+str（e）
print buff #打印输出串
channel.close（）
ssh.close（）
运行结果如下：
# python /home/test/paramiko/simple3.py
ifconfig
eth0 Link encap：Ethernet HWaddr 00：50：56：28：63：2D
inet addr：192.168.1.21 Bcast：192.168.1.255 Mask：255.255.255.0
inet6 addr： fe80：：250：56ff：fe28：632d/64 Scope：Link
UP BROADCAST RUNNING MULTICAST MTU：1500 Metric：1
RX packets：3523007 errors：0 dropped：0 overruns：0 frame：0
TX packets：6777657 errors：0 dropped：0 overruns：0 carrier：0
collisions：0 txqueuelen：1000
RX bytes：606078157 （578.0 MiB） TX bytes：1428493484 （1.3 GiB）
lo Link encap：Local Loopback
inet addr：127.0.0.1 Mask：255.0.0.0
… …
显示“inet addr：192.168.1.21”说明命令已经成功执行。
6.3.3 实现堡垒机模式下的远程文件上传
实现堡垒机模式下的文件上传，原理是通过paramiko的SFTPClient将文件从
办公设备上传至堡垒机指定的临时目录，如/tmp，再通过SSHClient的
invoke_shell方法开启ssh会话，执行scp命令，将/tmp下的指定文件复制到目标业
务服务器上，如图6-3所示。
图6-3 堡垒机模式下的文件上传
本示例具体使用sftp.put（）方法上传文件至堡垒机临时目录，再通过
send（）方法执行scp命令，将堡垒机临时目录下的文件复制到目标主机，详细
的实现源码如下：
【/home/test/paramiko/simple4.py】
#！/usr/bin/env python
import paramiko
import os，sys，time
blip="192.168.1.23" #定义堡垒机信息
bluser="root"
blpasswd=" IS8t5jgrie"
hostname="192.168.1.21" #定义业务服务器信息
username="root"
password=" KJsdiug45"
tmpdir="/tmp"
remotedir="/data"
localpath="/home/nginx_access.tar.gz" #本地源文件路径
tmppath=tmpdir+"/nginx_access.tar.gz" #堡垒机临时路径
remotepath=remotedir+"/nginx_access_hd.tar.gz" #业务主机目标路径
port=22
passinfo='\'s password： '
paramiko.util.log_to_file（'syslogin.log'）
t = paramiko.Transport（（blip， port））
t.connect（username=bluser， password=blpasswd）
sftp =paramiko.SFTPClient.from_transport（t）
sftp.put（localpath， tmppath） #上传本地源文件到堡垒机临时路径
sftp.close（）
ssh=paramiko.SSHClient（）
ssh.set_missing_host_key_policy（paramiko.AutoAddPolicy（））
ssh.connect（hostname=blip，username=bluser，password=blpasswd）
channel=ssh.invoke_shell（）
channel.settimeout（10）
buff = ''
resp = ''
#scp中转目录文件到目标主机
channel.send（'scp '+tmppath+' '+username+'@'+hostname+'：'+remotepath+'\n'）
while not buff.endswith（passinfo）：
try：
resp = channel.recv（9999）
except Exception，e：
print 'Error info：%s connection time.' % （str（e））
channel.close（）
ssh.close（）
sys.exit（）
buff += resp
if not buff.find（'yes/no'）==-1：