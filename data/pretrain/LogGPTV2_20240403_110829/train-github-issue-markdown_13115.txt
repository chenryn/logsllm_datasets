##### Description of the problem
BLEND mode when loading a gltf is broken in three.js if a material has both
texture + emission texture. Interestingly, a broken material will also break
all other transparent materials (e.g. adding a 3rd object with a broken
material will break totally separate materials on objects 1 + 2).
![image](https://user-
images.githubusercontent.com/2693840/75697694-bd1b4500-5cad-11ea-9cc3-27a2c2c608e6.png)
![image](https://user-
images.githubusercontent.com/2693840/75697716-c60c1680-5cad-11ea-9688-d95dc84338d5.png)
A workaround, for whatever reason, is to use KHR_Texture_Transform - if
TexTransform is present on a material, it will not break but instead display
texture + emission texture correctly.
![image](https://user-
images.githubusercontent.com/2693840/75697736-cdcbbb00-5cad-11ea-8b03-ea36fb5e339c.png)
![image](https://user-
images.githubusercontent.com/2693840/75697764-d6bc8c80-5cad-11ea-9135-04f1efa54971.png)
Live reproduction:  
https://glitch.com/edit/#!/spice-water-dormouse
##### Three.js version
  * r114
Note that this breaks in all of the following:
  * Visual Studio Code glTF extension, only in three.js mode, Cesium and Babylon work fine
  * model-viewer (e.g. your https://model-viewer-tester.glitch.me/)
  * https://gltf-viewer.donmccurdy.com/
##### Browser
  * All of them
  * Chrome
  * Firefox
  * Internet Explorer
##### OS
  * All of them
  * Windows
  * macOS
  * Linux
  * Android
  * iOS