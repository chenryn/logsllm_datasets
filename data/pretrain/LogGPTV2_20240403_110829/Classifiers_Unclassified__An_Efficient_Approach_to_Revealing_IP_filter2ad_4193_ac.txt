the “Galaxy Wars Multiplayer” app is mistakenly clas-
siﬁed as BBC’s iPlayer because the keyword iplayer
appears in the HTTP header.
3.3 Priority Rules
We characterized how the device classiﬁes a ﬂow when
multiple rules match a single ﬂow. Such “tie-breaker”
cases (which we found to be consistent over time) pro-
vide additional insight into the accuracy of a classiﬁer
and its resilience to subversion.
We tested all combinations of text in matching ﬁelds
to identify how the shaper prioritizes them. Figure 2 de-
picts a decision process that captures our observations
for HTTP traﬃc. The device ﬁrst examines the content
in the GET request, then it checks the Content-Type
headers from the server response only if the request does
not match any rule.
Importantly, the device exhibits a “match-and-forget”
policy where an entire ﬂow is classiﬁed by the highest
priority matching rule even if later packets match a dif-
ferent rule that would lead to more accurate classiﬁca-
tion. For example, if the URI contains /user/youtube
and the Host contains facebook.com, the ﬂow is clas-
siﬁed as YouTube instead of Facebook. Further, the
priority of diﬀerent matching rules in the GET re-
quest depends both on the ﬁeld and the content. For
7Note that we cannot conﬁrm whether this is the actual matching
implementation; rather, we can only say that our observations
suggest this is the case.
243Figure 2: Observed decision process for applying matching rules to HTTP traﬃc.
example, the FrankenFlow with Host: www.hulu.com
and User-Agent: Pandora is classiﬁed depending on
which header appears ﬁrst in the GET request (i.e., if
Hulu appears ﬁrst, it is classiﬁed as Hulu).
In con-
trast, the FrankenFlow with Host: facebook.com and
User-Agent: Pandora is classiﬁed as Pandora regard-
less of the order of headers in the GET request.
Our results for classiﬁcation-rule priorities for all 87
matching keywords in HTTP traﬃc are summarized in
Table 3. We ﬁnd six distinct priority groups, with only
two groups containing more than one service. For exam-
ple, if the URI matches NBC Sports, the classiﬁer will
label the entire ﬂow as NBC Sports, even if the strings
for YouTube, Netﬂix, or iPlayer also appear in the ﬂow.
When multiple matching strings from the third prior-
ity group appear in the same ﬂow, the device uses yet
another set of tie-breaking priorities, listed in Table 4.
For example, if Netﬂix and Facebook appear in the Host
header, then the ﬂow is classiﬁed as Netﬂix regardless
of where in the host ﬁeld the string netﬂix appears (be-
cause Netﬂix is in a higher priority group). For match-
ing rules in the same tie-breaking group, e.g., Netﬂix
and LinkedIn, the ﬂow is classiﬁed as the ﬁrst keyword
to appear in the Host string. We found no particular
reason for the priority order found on this device.
The device classiﬁes HTTPS traﬃc with multiple
matching rules similarly to HTTP. For example, after
matching on a TLS Client Hello packet, the device
ignores matching rules in the server response.
4. ADDITIONAL CASE STUDIES
We also tested our methodology against two other
traﬃc shaping devices: a carrier-grade IPS device in our
possession and a deployed device in T-Mobile’s network.
Priority Matching Field(s)
Example Apps #cases
1
2
3
4
5
6
URI
URI
Host header,
User-Agent
Host header
URI
User-agent
NBC Sports
YouTube
Netﬂix, ESPN,
Pandora
Facebook
iPlayer
Apple Service,
Android Content,
Mobile browsing
1
1
80
1
1
3
Table 3: When a ﬂow triggers multiple matching rules, the
packet shaper classiﬁes the ﬂow according to the rule with
highest priority. Tie-breaking priorities are listed in Table 4.
Carrier-grade IPS Device (Testbed).
Our IPS
device uses coarse-grained classiﬁcation, e.g., it identi-
ﬁes “streaming video” traﬃc, but does not identify spe-
ciﬁc applications. We tested all our recorded streaming
video traces against the device, and found that it does
not classify any of them as video traﬃc except for a Net-
ﬂix trace from 2014 (newer Netﬂix traces are not clas-
siﬁed). In this case, the device matched on the string
ftypmp4 (presumably matching on “ﬁle type mp4”) in
the HTTP payload. Interestingly, this is the only case
we found so far that inspect packet content beyond
HTTP headers. We suspect that the poor matching
results are due to the device using outdated rules, in
addition to the fact that the device’s primary purpose
is detecting security threats (and not applications).
T-Mobile’s Binge On Service
T-Mobile’s “Binge
On” service allows opt-in subscribers to stream video
content from participating providers without counting
those bytes against their data plan (i.e., such content is
zero-rated). In previous work, Molavi et al. [8] used ad-
hoc techniques to show that T-Mobile identiﬁes Binge-
On-eligible content by inspecting the values in HTTP
Content-Type and Host headers in addition to some
ﬁelds of the TLS handshake. The ground truth signal
that traﬃc is classiﬁed as Binge On is that its data is
zero-rated (based on our account’s data-usage counter).
We use this information, along with the methodology
in Section 2, to revisit Binge On—where we have no a
priori knowledge about the vendor or their rules, and
describe new ﬁndings below.
As an example of our ﬁndings, our analysis re-
vealed that Netﬂix, which was previously identiﬁed us-
ing HTTP traﬃc, has since moved to HTTPS connec-
tions. Our analysis shows that the T-Mobile classiﬁer
checks the SNI ﬁeld for the string nflx and the contents
of the Common Name in the server certiﬁcate in the
Tiebreaking
Priority
Example Apps
1
2
3
NetFlix, LinkedIn, Skype, SkyDrive,
Symantec, Yahoo Video, Gmail
Youtube, Instagram, Tango, AmazonCloud,
Kaspersky, EA Games, Wechat
Facebook, Yahoo Mail, Zynga
Table 4: When a ﬂow matches multiple rules in the same
priority group in Table 3, the classiﬁer picks the one with
the highest tie-breaking priority. If the ﬂow matches mul-
tiple rules of the same priority, the classiﬁer picks the ﬁrst
matching string to appear in the ﬂow.
GET request?Keyword inURI, Host, User-Agent?Keyword inContent-Type?HTTP inGET request?Select rule based on matching priorityThe ﬁrst two packetsContent-TypeBased ClassiﬁcationHTTP BrowsingApplicationorMobile BrowsingHTTPyesnononoyesyesyes244TLS handshake for the value nflxvideo.net. These
highly speciﬁc matching ﬁelds are surprising, since it
seems likely that such domain names change often and
require signiﬁcant manual maintenance to ensure reli-
able classiﬁcation.
Interestingly, we further ﬁnd that
unlike the packet-shaping device in our testbed, T-
Mobile’s classiﬁer parses the TLS handshake and will
not properly detect HTTPS traﬃc if the TLS packets
are malformed or the value is not in a matching ﬁeld
(SNI or Common Name).
We investigated priorities when a packet matches
multiple applications and found that T-Mobile matches
only on the last Host header if multiple are present.
Interestingly, this leads to zero-rated traﬃc if the last
header matches a BingeOn participant, even if other
headers do not.
If the ﬁrst header is, for example, a
Google App Engine domain, Web site content is re-
turned without error even though there are multiple
Host headers. This provides a way to zero-rate arbi-
trary HTTP traﬃc beyond was was found previously [8].
5. DISCUSSION AND CONCLUSION
In this paper, we presented an eﬃcient approach for
identifying the matching rules used in traﬃc shapers
for applying policies such as packet shaping, security,
and zero-rating. We showed that using existing appli-
cation traﬃc facilitates eﬃcient and reliable discovery
of matching rules. We applied this approach to several
devices and found that their approach to classifying the
applications that we tested was surprisingly simple and
generally based on matching text in a small number of
HTTP and HTTPS ﬁelds.
Our work on revealing matching rules provides a solid
framework for researchers and regulators to audit im-
plementations of policies in today’s middlebox deploy-
ments, understand their impact on issues such as net-
work performance and net neutrality, and understand
security implications. As part of our future work, we
are investigating other deployments and extending our
analysis to UDP traﬃc. We expect to further reﬁne our
methodology as we encounter new policies and classiﬁer
implementations not covered by our current approach.
Acknowledgements
We thank the anonymous reviewers and our shepherd
Renata Teixeira for their helpful feedback. This work is
supported in part by a Google Research Award, and
NSF awards CNS-1617728, CNS-1350720, and CNS-
1518845.
6. REFERENCES
[1] Complete MIME types list.
http://www.freeformatter.com/mime-types-list.html.
[2] Neubot – the network neutrality bot.
http://www.neubot.org.
[3] T-Mobile BingeOn. http://www.t-mobile.com/offer/
binge-on-streaming-video.html.
[4] Global DPI market 2014-2018: Key vendors are allot
communications, cisco, procera networks and sandvine.
http://www.prnewswire.com/news-releases/global-dpi-
market-2014-2018-key-vendors-are-allot-
communications-cisco-procera-networks-and-sandvine-
275106991.html, September 2014.
[5] V. Bashko, N. Melnikov, A. Sehgal, and J. Schonwalder.
Bonaﬁde: A traﬃc shaping detection tool for mobile
networks. In IFIP/IEEE International Symposium on
Integrated Network Management (IM2013), 2013.
[6] M. Dischinger, M. Marcon, S. Guha, K. P. Gummadi,
R. Mahajan, and S. Saroiu. Glasnost: Enabling end users
to detect traﬃc diﬀerentiation. In Proc. of USENIX NSDI,
2010.
[7] FCC announces ”Measuring Mobile America” program.
http://www.fcc.gov/document/fcc-announces-
measuring-mobile-america-program.
[8] A. M. Kakhki, F. Li, D. R. Choﬀnes, E. Katz-Bassett, and
A. Mislove. BingeOn under the microscope: Understanding
t-mobile’s zero-rating implementation. In Proc. of
SIGCOMM Workshop on Internet QoE, 2016.
[9] A. M. Kakhki, A. Razaghpanah, A. Li, H. Koo, R. Golani,
D. R. Choﬀnes, P. Gill, and A. Mislove. Identifying traﬃc
diﬀerentiation in mobile networks. In Proc. of IMC, 2015.
[10] P. Kanuparthy and C. Dovrolis. ShaperProbe: end-to-end
detection of ISP traﬃc shaping using active methods. In
Proc. of IMC, 2011.
[11] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson.
Netalyzr: Illuminating the edge network. In Proc. of IMC,
2010.
[12] R. Mahajan, M. Zhang, L. Poole, and V. Pai. Uncovering
performance diﬀerences among backbone ISPs with Netdiﬀ.
In Proc. of USENIX NSDI, 2008.
[13] Measurement Lab Consortium. ISP interconnection and its
impact on consumer internet performance. http://www.
measurementlab.net/blog/2014_interconnection_report,
October 2014.
[14] A. Nikravesh, H. Yao, S. Xu, D. R. Choﬀnes, and Z. M.
Mao. Mobilyzer: An open platform for controllable mobile
network measurements. In Proc. of MobiSys, 2015.
[15] J. Ren, A. Rao, M. Lindorfer, A. Legout, and D. R.
Choﬀnes. ReCon: Revealing and controlling privacy leaks
in mobile network traﬃc. In Proc. of MobiSys, 2016.
[16] Switzerland network testing tool. https://www.eff.org/
pages/switzerland-network-testing-tool.
[17] M. B. Tariq, M. Motiwala, N. Feamster, and M. Ammar.
Detecting network neutrality violations with causal
inference. In CoNEXT, 2009.
[18] N. Weaver, C. Kreibich, M. Dam, and V. Paxson. Here Be
Web Proxies. In Proc. PAM, 2014.
[19] N. Weaver, R. Sommer, and V. Paxson. Detecting forged
TCP reset packets. In Proc. of NDSS, 2009.
[20] X. Xu, Y. Jiang, T. Flach, E. Katz-Bassett, D. Choﬀnes,
and R. Govindan. Investigating transparent web proxies in
cellular networks. In Proc. PAM, 2015.
[21] Y. Zhang, Z. M. Mao, and M. Zhang. Detecting Traﬃc
Diﬀerentiation in Backbone ISPs with NetPolice. In Proc.
of IMC, 2009.
[22] Z. Zhang, O. Mara, and K. Argyraki. Network neutrality
inference. In Proc. of ACM SIGCOMM, 2014.
245