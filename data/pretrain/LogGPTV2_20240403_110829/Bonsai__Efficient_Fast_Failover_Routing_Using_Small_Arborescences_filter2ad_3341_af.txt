given algorithm or conﬁguration. Recently, polynomial-time
veriﬁcation algorithms have been presented for MPLS networks,
based on automata theory [4], [66], and supporting arbitrarily
large header sizes as they may result from header rewriting
during failover (see above).
Ideal resilience. Our paper is motivated by robust routing
algorithms which provide static resiliency in the data plane
without requiring header rewriting, initially proposed in [48]
and [20] and subsequently studied intensively by Stephens et
al. [16], [17], Chiesa et al. [14], [15], [18], [22], Elhourani et
al. [25], and Pignolet et al. [8], [13], among others. Feigenbaum
et al. [48] raised the question of whether it is possible to achieve
an “ideal (static) resilience”: Is it always possible to deﬁne
failover rules such that connectivity is preserved as long as the
network is physically connected? The authors already proved
that this is not possible. Simultaneously, Borokhovich and
Schmid showed that this is not even possible in an initially
completely connected network which is still highly connected
after the failures [20]. Chiesa et al. [15] then raised the
interesting (and so far only partially answered) question whether
it is at least always possible to preserve connectivity in a k-
(edge-)connected network if there are at most k−1 link failures.
Pignolet et al. [13], [23] observed and exploited a connection
of fast rerouting problems to combinatorial block designs, in
order to minimize congestion on failover routes.
Approaches going beyond connectivity. Most of the existing
literature on fast rerouting under multiple link failures focuses
on connectivity, which alone however is insufﬁcient to meet the
availability and performance guarantees of emerging communi-
cation networks. The study of the quality of failover paths has
been stated as an open problem in the literature [7], and except
for some notable ﬁrst studies on the load on failover paths in
very dense networks [13], the space is largely unexplored. In
particular, not only the arborescence based solutions in [14],
[15], [18], [22], without further optimizations, may result in
long failover paths, but also many other algorithms, e.g., based
on graph search which rely on packet header rewriting [27].
To the best of our knowledge, the work by Foerster et al. [8]
is the only one that generates arborescences with small stretch,
however only for the special cases of torus, hypercube, and grid
graphs, as well as trees of complete bipartite graphs. Unlike
in our work, no approaches for (more) general graphs are
provided nor practical evaluations or complexity results.
Arborescences with good depth and other application
domains. We note that the problem of ﬁnding arborescences
also arises in other domains, e.g., in broadcast applications [67].
There also already exists work on arborescences of improved
depth, either by reducing the number of arborescences [68] or
by considering restricted topologies, such as hypercubes [69]
or tori [70]. We refer to the surveys in [67], [71], [72] for
further references.
VIII. CONCLUSION
In this paper, we studied local fast failover algorithms which
guarantee not only resiliency but also provide routes with
bounded stretch. In addition to analytical results regarding
the complexity of the problem and the impact of failure
distributions on the resilience and stretch, we proposed and
evaluated arc-selection methods to create suitable arborescences.
Our solutions can lead to signiﬁcantly shorter failover routes
than with state of the art methods, without modifying the packet
headers and without incurring rule convergence delays.
11
Other costs or capacities could be included in the balanced
arc-selection algorithm with a vector instead of scalar based
approach. To keep the evaluation simple, we focus on scalar
values, yet the algorithm can be extended to further constraints
and multi-objective scenarios.
Our work opens several
interesting avenues for future
this paper has focused on a hop
research. For example,
distance metric, which is natural to capture resource allocations;
however, it would be interesting to generalize our results to
arbitrary link weights (e.g., representing latencies). Another
open question in terms of algorithms concerns provably low-
stretch failover algorithms for further special graph classes.
Along the same lines, the study of rerouting techniques with
header re-writing constitutes another interesting direction for
future research on low stretch failover algorithms.
In order to guarantee reproducibility and facilitate other
researchers to build upon our algorithms, we will make source
code and simulation results publicly available at [34].
Acknowledgements. We would like to thank the anonymous
reviewers and our shepherd Elias P. Duarte Jr.
REFERENCES
[1] Y. Wang, H. Wang, A. Mahimkar, R. Alimi, Y. Zhang, L. Qiu, and Y. R.
Yang, “R3: Resilient routing reconﬁguration,” ACM SIGCOMM CCR,
vol. 40, no. 4, pp. 291–302, Aug. 2010.
[2] P. Gill, N. Jain, and N. Nagappan, “Understanding network failures in
data centers: measurement, analysis, and implications,” ACM SIGCOMM
CCR, vol. 41, pp. 350–361, 2011.
[3] A. Markopoulou, G. Iannaccone, S. Bhattacharyya, C.-N. Chuah, and
C. Diot, “Characterization of failures in an ip backbone,” in Proc. IEEE
INFOCOM, 2004.
[4] S. Schmid and J. Srba, “Polynomial-time what-if analysis for preﬁx-
manipulating mpls networks,” in Proc. IEE INFOCOM, 2018.
[5] A. Shaikh, C. Isett, A. Greenberg, M. Roughan, and J. Gottlieb, “A case
study of ospf behavior in a large enterprise network,” in Proc. ACM
IMW, 2002.
[6] D. Xu, Y. Xiong, C. Qiao, and G. Li, “Failure protection in layered
networks with shared risk link groups,” IEEE network, vol. 18, no. 3,
pp. 26–41, 2004.
[7] J. Liu, A. Panda, A. Singla, B. Godfrey, M. Schapira, and S. Shenker,
“Ensuring connectivity via data plane mechanisms,” in Proc. 10th USENIX
NSDI, 2013, pp. 113–126.
[8] K.-T. Foerster, Y.-A. Pignolet, S. Schmid, and G. Tredan, “Local fast
failover routing with low stretch,” ACM SIGCOMM CCR, vol. 1, pp.
35–41, Jan. 2018.
[9] A. K. Atlas and A. Zinin, “Basic speciﬁcation for ip fast-reroute: loop-free
alternates,” IETF RFC 5286, 2008.
[10] A. Kamisi´nski, “Evolution of ip fast-reroute strategies,” in Proc. Interna-
tional Workshop on Resilient Networks Design and Modeling (RNDM),
2018.
[11] P. Pan, G. Swallow, and A. Atlas, “Fast reroute extensions to RSVP-TE
for LSP tunnels,” in Request for Comments (RFC) 4090, 2005.
[12] Switch
Speciﬁcation
1.3.1,
“OpenFlow,”
in
https://
www.opennetworking.org/ wp-content/ uploads/ 2013/ 04/ openﬂow-
spec-v1.3.1.pdf , 2012, (last accessed in April 2019).
[13] Y.-A. Pignolet, S. Schmid, and G. Tredan, “Load-optimal local fast
rerouting for dependable networks,” in Proc. DSN, 2017.
[14] M. Chiesa, I. Nikolaevskiy, S. Mitrovic, A. V. Gurtov, A. Madry,
M. Schapira, and S. Shenker, “On the resiliency of static forwarding
tables,” IEEE/ACM Trans. Netw., vol. 25, no. 2, pp. 1133–1146, 2017.
[15] M. Chiesa, A. Gurtov, A. Madry, S. Mitrovic, I. Nikolaevkiy, A. Panda,
M. Schapira, and S. Shenker, “Exploring the limits of static failover
routing (v4),” arXiv:1409.0034 [cs.NI], 2016.
[16] B. Stephens, A. L. Cox, and S. Rixner, “Plinko: Building provably
resilient forwarding tables,” in Proc. ACM HotNets, 2013.
[17] ——, “Scalable multi-failure fast failover via forwarding table compres-
sion,” in Proc ACM SOSR, 2016.
12
[18] M. Chiesa, A. V. Gurtov, A. Madry, S. Mitrovic, I. Nikolaevskiy,
M. Schapira, and S. Shenker, “On the resiliency of randomized routing
against multiple edge failures,” in Proc. ICALP, 2016.
[19] E. Blanton and M. Allman, “On making tcp more robust to packet
reordering,” ACM SIGCOMM Computer Communication Review, vol. 32,
no. 1, pp. 20–30, 2002.
[20] M. Borokhovich and S. Schmid, “How (not) to shoot in your foot with
sdn local fast failover: A load-connectivity tradeoff,” in Proc. OPODIS,
2013.
[21] E. Gafni and D. Bertsekas, “Distributed algorithms for generating loop-
free routes in networks with frequently changing topology,” Trans.
Commun., vol. 29, no. 1, pp. 11–18, 1981.
[22] M. Chiesa, I. Nikolaevskiy, S. Mitrovic, A. Panda, A. Gurtov, A. Madry,
M. Schapira, and S. Shenker, “The quest for resilient (static) forwarding
tables,” in Proc. IEEE INFOCOM, 2016.
[23] K.-T. Foerster, Y.-A. Pignolet, S. Schmid, and G. Tredan, “CASA:
congestion and stretch aware static fast rerouting,” in Proc. IEEE
INFOCOM, 2019.
[24] T. Elhourani, A. Gopalan, and S. Ramasubramanian, “Ip fast rerouting
for multi-link failures,” in Proc. IEEE INFOCOM, 2014.
[25] ——, “IP fast rerouting for multi-link failures,” IEEE/ACM Trans. Netw.,
vol. 24, no. 5, pp. 3014–3025, 2016.
[26] M. Kaufmann and K. Mehlhorn, “A linear-time algorithm for the
homotopic routing problem in grid graphs,” SIAM J. on Computing,
vol. 23, no. 2, pp. 227–246, 1994.
[27] M. Borokhovich, L. Schiff, and S. Schmid, “Provable data plane connec-
tivity with local fast failover: Introducing openﬂow graph algorithms,”
in Proc. ACM SIGCOMM HotSDN, 2014.
[28] J. Edmonds, “Edge-disjoint branchings,” Combinatorial algorithms, vol. 9,
no. 91-96, p. 2, 1973.
[29] A. Bhalgat, R. Hariharan, T. Kavitha, and D. Panigrahi, “Fast edge
splitting and edmonds’ arborescence construction for unweighted graphs,”
in Proc. SODA, 2008.
[30] H. N. Gabow, “Efﬁcient splitting off algorithms for graphs,” in Proc.
ACM STOC, 1994.
[31] J. Tapolcai, L. R´onyai, B. Vass, and L. Gyimothi, “List of shared risk
link groups representing regional failures with limited size,” in Proc.
IEEE INFOCOM, 2017.
[32] J.-C. Bermond and P. Fraigniaud, “Broadcasting and np-completeness,”
Graph Theory Notes of New York, no. XXII, pp. 8–14, 1992.
[33] L. Lov´asz, “Covering and coloring of hypergraphs,” in Proc. 4th
Southeastern Conf. on Combinatorics, Graph Theory, and Computing,
Utilitas Mathematica, 1973.
[34] https://gitlab.cs.univie.ac.at/ct-papers/2019-dsn.
[35] NetworkX
“Random
2.2,
regular
graph
generation,”
https://networkx.github.io/documentation/stable/reference/
generated/networkx.generators.random graphs.random regular
graph.html#networkx.generators.random graphs.random regular
graph, 2018, (last accessed in April 2019).
[36] B. Bollob´as, Random Graphs, ser. Cambridge Studies in Advanced
Mathematics. Cambridge University Press, 2001, no. 73.
[37] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson, “Measuring ISP
topologies with rocketfuel,” IEEE/ACM Trans. Netw., vol. 12, no. 1, pp.
2–16, 2004.
[38] D. Zhuo, M. Ghobadi, R. Mahajan, K.-T. Foerster, A. Krishnamurthy,
and T. E. Anderson, “Understanding and mitigating packet corruption in
data center networks,” in Proc. ACM SIGCOMM, 2017.
[39] H. Abelson and A. A. DiSessa, Turtle geometry. MIT press, 1986.
[40] F. Kuhn, R. Wattenhofer, Y. Zhang, and A. Zollinger, “Geometric ad-hoc
routing: of theory and practice,” in Proc. ACM PODC, 2003.
[41] D. Madory, “Renesys blog: Large outage in pakistan,” https://dyn.com/
blog/large-outage-in-pakistan/, (last accessed in April 2019).
[42] R. Singel, “Fiber optic cable cuts isolate millions from internet, future
cuts likely,” https://www.wired.com/2008/01/ﬁber-optic-cab/, 2008, (last
accessed in April 2019).
[43] Wikitech, “Site issue aug 6 2012,” http://wikitech.wikimedia.org/view/
Site issue Aug 6 2012, 2012, (last accessed in April 2019).
[44] C. Wilson,
“’dual’ ﬁber
cut
causes
sprint
outage,”
https:
//web.archive.org/web/20080906210432/http://telephonyonline.com/
access/news/Sprint service outage 011006/, 2006, (last accessed in
April 2019).
[45] G. Iannaccone, C.-n. Chuah, R. Mortier, S. Bhattacharyya, and C. Diot,
“Analysis of link failures in an ip backbone,” in Proc. ACM SIGCOMM
Workshop on Internet Measurment, 2002.
[46] A. Markopoulou, G. Iannaccone, S. Bhattacharyya, C. N. Chuah,
Y. Ganjali, and C. Diot, “Characterization of failures in an operational
ip backbone network,” IEEE/ACM Transactions on Networking, vol. 16,
no. 4, pp. 749–762, Aug 2008.
[47] A. J. Gonz´alez and B. E. Helvik, “Analysis of failures characteristics in the
uninett ip backbone network,” in 2011 IEEE Workshops of International
Conference on Advanced Information Networking and Applications, 2011.
[48] J. Feigenbaum, B. Godfrey, A. Panda, M. Schapira, S. Shenker, and
A. Singla, “Brief announcement: On the resilience of routing tables,” in
Proc. ACM PODC, 2012.
[49] J. Meza, T. Xu, K. Veeraraghavan, and O. Mutlu, “A large scale study
of data center network reliability,” in Proc. ACM IMC, 2018.
[50] A. Vahdat, D. Clark, and J. Rexford, “A purpose-built global network:
Google’s move to sdn,” Commun. ACM, vol. 59, no. 3, pp. 46–54, Feb.
2016.
[51] G. Enyedi, G. R´etv´ari, and T. Cinkler, “A novel loop-free ip fast reroute
algorithm,” in Proc. EUNICE, 2007.
[52] S. Nelakuditi, S. Lee, Y. Yu, Z.-L. Zhang, and C.-N. Chuah, “Fast local
rerouting for handling transient link failures,” IEEE/ACM Transactions
on Networking (ToN), vol. 15, no. 2, pp. 359–372, 2007.
[53] J. Wang and S. Nelakuditi, “Ip fast reroute with failure inferencing,”
in Proc. ACM SIGCOMM Workshop on Internet Network Management,
2007.
[54] B. Zhang, J. Wu, and J. Bi, “Rpfp: Ip fast reroute with providing complete
protection and without using tunnels,” in Proc. IEEE IWQoS, 2013.
[55] L. Shen, X. Yang, and B. Ramamurthy, “Shared risk link group (srlg)-
diverse path provisioning under hybrid service level agreements in
wavelength-routed optical mesh networks,” IEEE/ACM Transactions
on Networking, vol. 13, no. 4, pp. 918–931, 2005.
[56] J. Tapolcai, B. Vass, Z. Heszberger, J. Bır´o, D. Hay, F. A. Kuipers,
and L. R´onyai, “A tractable stochastic model of correlated link failures
caused by disasters,” in Proc. IEEE INFOCOM, 2018.
[57] M. S. Corson and A. Ephremides, “A distributed routing algorithm for
mobile wireless networks,” Wireless networks, vol. 1, no. 1, pp. 61–81,
1995.
[58] V. D. Park and M. S. Corson, “A highly adaptive distributed routing
algorithm for mobile wireless networks,” in Proc. IEEE INFOCOM,
1997.
[59] J. L. Welch and J. E. Walter, “Link reversal algorithms,” Synthesis
Lectures on Distributed Computing Theory, vol. 2, no. 3, pp. 1–103,
2011.
[60] C. Busch, S. Surapaneni, and S. Tirthapura, “Analysis of link reversal
routing algorithms for mobile ad hoc networks,” in Proc. SPAA, 2003.
[61] M. Canini, P. Kuznetsov, D. Levin, and S. Schmid, “A Distributed and
Robust SDN Control Plane for Transactional Network Updates,” in Proc.
IEEE INFOCOM, 2015.
[62] K. Lakshminarayanan, M. Caesar, M. Rangan, T. Anderson, S. Shenker,
and I. Stoica, “Achieving convergence-free routing using failure-carrying
packets,” in Proc. ACM SIGCOMM, 2007.
[63] K.-T. Foerster, M. Parham, M. Chiesa, and S. Schmid, “Ti-mfa: Keep calm
and reroute segments fast,” in Proc. IEEE Global Internet Symposium
(GI), 2018.
[64] P. Hande, M. Chiang, R. Calderbank, and S. Rangan, “Network pricing
and rate allocation with content-provider participation,” in Proc. IEEE
INFOCOM, 2010.
[65] H. H. Liu, S. Kandula, R. Mahajan, M. Zhang, and D. Gelernter, “Trafﬁc
engineering with forward fault correction,” in Proc. ACM SIGCOMM,
2014.
[66] J. S. Jensen, T. B. Krogh, J. S. Madsen, S. Schmid, J. Srba, and M. T.
Thorgersen, “P-rex: Fast veriﬁcation of mpls networks with multiple link
failures,” in Proc. ACM CoNEXT, 2018.
[67] P. Fraigniaud and E. Lazard, “Methods and problems of communication
in usual networks,” Discrete Applied Mathematics, vol. 53, no. 1-3, pp.
79–133, 1994.
[68] T. Hasunuma, “On edge-disjoint spanning trees with small depths,” Inf.
Process. Lett., vol. 75, no. 1-2, pp. 71–74, 2000.
[69] S. L. Johnsson and C. Ho, “Optimum broadcasting and personalized
communication in hypercubes,” IEEE Trans. Computers, vol. 38, no. 9,
pp. 1249–1268, 1989.
[70] J. G. Peters, C. Rapine, and D. Trystram, “Small depth arc-disjoint
spanning trees in two-dimensional torodial meshes,” Technical Report
SFU-CMPT-TR-2002-10, School of Computing Science, Simon Fraser
University, Tech. Rep., 2002.
[71] S. M. Hedetniemi, S. T. Hedetniemi, and A. L. Liestman, “A survey
of gossiping and broadcasting in communication networks,” Networks,
vol. 18, no. 4, pp. 319–349, 1988.
[72] A. Pelc, “Fault-tolerant broadcasting and gossiping in communication
networks,” Networks, vol. 28, no. 3, pp. 143–156, 1996.
13