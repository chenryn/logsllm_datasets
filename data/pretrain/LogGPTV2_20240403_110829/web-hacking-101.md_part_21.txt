### Tools and Resources for Web Security Testing

#### S3 Buckets Testing
- **AWS CLI**: You can test writing to S3 buckets using the AWS CLI. For more details, refer to Example 6 in the Authentication Chapter of "How I Hacked HackerOne S3 Buckets."

#### Race Condition Testing
- **Race the Web**:
  - **Link**: [GitHub](https://github.com/insp3ctre/race-the-web)
  - **Description**: A tool designed to test for race conditions in web applications by sending a user-specified number of simultaneous requests to a target URL (or URLs). It compares server responses for uniqueness and offers various configuration options.

#### Google Dorks
- **Link**: [Google Hacking Database](https://www.exploit-db.com/google-hacking-database)
- **Description**: Google Dorking involves using advanced search syntaxes provided by Google to find information not readily available, such as vulnerable files or opportunities for external resource loading.

#### Other Useful Tools
- **JD GUI**:
  - **Link**: [GitHub](https://github.com/java-decompiler/jd-gui)
  - **Description**: A standalone graphical utility that displays Java sources from CLASS files. It is useful for exploring Android apps, though the author has limited experience with it.

- **Mobile Security Framework (MobSF)**:
  - **Link**: [GitHub](https://github.com/ajinabraham/Mobile-Security-Framework-MobSF)
  - **Description**: An open-source, all-in-one mobile application (Android/iOS) automated pen-testing framework capable of performing static, dynamic analysis, and web API testing.

- **Ysoserial**:
  - **Link**: [GitHub](https://github.com/frohoff/ysoserial)
  - **Description**: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.

#### Firefox Plugins
- **FoxyProxy**:
  - **Description**: An advanced proxy management add-on for Firefox that enhances the built-in proxy capabilities.
  
- **User Agent Switcher**:
  - **Description**: Adds a menu and toolbar button to switch the user agent, helping in spoofing the browser during attacks.

- **Firebug**:
  - **Description**: Integrates a web development tool inside the browser, allowing you to edit and debug HTML, CSS, and JavaScript live in any webpage. It is useful for analyzing JS files to find XSS vulnerabilities.

- **Hackbar**:
  - **Description**: A simple penetration tool for Firefox that helps in testing SQL injection and XSS vulnerabilities. It allows manual form data submission with GET or POST requests.

- **Websecurify**:
  - **Description**: Detects common vulnerabilities in web applications, including XSS, SQL injection, and other web application vulnerabilities.

- **Cookie Manager+**:
  - **Description**: Allows you to view, edit, and create new cookies, providing extra information and the ability to manage multiple cookies at once, backup, and restore cookies.

- **XSS Me**:
  - **Description**: Scans forms on a page and performs attacks with predefined XSS payloads, listing pages that may be vulnerable to XSS.

- **Offsec Exploit-db Search**:
  - **Description**: Allows you to search for vulnerabilities and exploits listed on exploit-db.com, which is regularly updated with the latest exploits and vulnerability details.

- **Wappalyzer**:
  - **Link**: [Mozilla Add-ons](https://addons.mozilla.org/en-us/firefox/addon/wappalyzer/)
  - **Description**: Identifies the technologies used on a site, including CloudFlare, frameworks, and JavaScript libraries.

### Online Training and Resources
- **Web Application Exploits and Defenses**:
  - **Link**: [Google Gruyere](https://google-gruyere.appspot.com)
  - **Description**: A codelab with a vulnerable web app and tutorials to discover common vulnerabilities like XSS, privilege escalation, CSRF, and path traversal.

- **The Exploit Database**:
  - **Link**: [Exploit-DB](https://www.exploit-db.com)
  - **Description**: Includes exploits for discovered vulnerabilities, often linked to CVEs. Use with caution as the code can be destructive.

- **Udacity**:
  - **Link**: [Intro to HTML and CSS](https://www.udacity.com/course/intro-to-html-and-css--ud304), [JavaScript Basics](https://www.udacity.com/course/javascript-basics--ud804)
  - **Description**: Free online learning courses in web development and programming.

### Bug Bounty Platforms
- **HackerOne**:
  - **Link**: [HackerOne](https://hackerone.com)
  - **Description**: A platform for vulnerability coordination and bug bounties, created by security leaders from Facebook, Microsoft, and Google.

- **Bugcrowd**:
  - **Link**: [Bugcrowd](https://bugcrowd.com)
  - **Description**: Founded in 2012, it aims to even the odds against malicious actors.

- **Synack**:
  - **Link**: [Synack](https://synack.com)
  - **Description**: A private platform offering security expertise to clients. Participation requires approval, but reports are typically resolved and rewarded within 24 hours.

- **Cobalt.io**:
  - **Link**: [Cobalt](https://cobalt.io)
  - **Description**: A bug bounty platform with a core group of researchers working on private programs.

### Video Tutorials
- **YouTube Channel**:
  - **Link**: [youtube.com/yaworsk1](https://youtube.com/yaworsk1)
  - **Description**: The author's YouTube channel with tutorials on finding vulnerabilities to complement this book.

- **SecCasts**:
  - **Link**: [SecCasts](https://seccasts.com)
  - **Description**: A security video training platform offering tutorials from basic web hacking techniques to in-depth security topics.

- **How to Shot Web**:
  - **Link**: [Jason Haddix's Presentation](https://github.com/jhaddix/tbhm)
  - **Description**: Jason Haddix’s presentation from DefCon23, providing insights into becoming a better hacker based on his own experiences and research.

### Further Reading
- **OWASP**:
  - **Link**: [OWASP](https://owasp.org)
  - **Description**: A comprehensive source of vulnerability information, including a Security101 section, cheat sheets, and in-depth descriptions of most vulnerability types.

- **HackerOne Hacktivity**:
  - **Link**: [HackerOne Hacktivity](https://hackerone.com/hacktivity)
  - **Description**: A list of all reported vulnerabilities from their bounty program. Public disclosures can be accessed via the GitHub script.

- **Mozilla Bug Tracker**:
  - **Link**: [Bugzilla](https://bugzilla.mozilla.org)
  - **Description**: Mozilla’s bug tracking system, including all security-related issues reported to their bug bounty program.

- **Twitter Hashtags**:
  - **Description**: Follow #infosec and #bugbounty for security and vulnerability-related tweets, often with links to detailed write-ups.

- **Twitter @disclosedh1**:
  - **Description**: An unofficial HackerOne public disclosure watcher that tweets recently disclosed bugs.

- **Web Application Hackers Handbook**:
  - **Description**: Written by the creators of Burp Suite, this is a must-read for web application security.

- **Bug Hunters Methodology**:
  - **Link**: [GitHub](https://github.com/jhaddix/tbhm)
  - **Description**: A GitHub repo from Jason Haddix, providing insights into how successful hackers approach a target.

### Recommended Blogs
- **Philippe Harewood**:
  - **Blog**: [philippeharewood.com](https://philippeharewood.com)
  - **Facebook Page**: [Facebook](https://www.facebook.com/phwd-113702895386410)

- **fin1te.net**:
  - **Blog**: [fin1te.net](https://fin1te.net)

- **NahamSec**:
  - **Blog**: [NahamSec](https://nahamsec.com)

- **Patrik Fehrenbach**:
  - **Blog**: [blog.it-securityguard.com](https://blog.it-securityguard.com)

- **filedescriptor**:
  - **Blog**: [blog.innerht.ml](https://blog.innerht.ml)

- **Orange TW**:
  - **Blog**: [blog.orange.tw](https://blog.orange.tw)

- **Portswigger Blog**:
  - **Blog**: [Portswigger Blog](https://portswigger.net/blog)

- **Nvisium Blog**:
  - **Blog**: [Nvisium Blog](https://nvisium.com/blog)

- **ZSEC UK**:
  - **Blog**: [blog.zsec.uk](https://blog.zsec.uk)

- **BruteLogic**:
  - **Blog**: [brutelogic.com.br](https://brutelogic.com.br)

- **Michal Zalewski**:
  - **Blog**: [lcamtuf.blogspot.ca](https://lcamtuf.blogspot.ca)

- **Bug Crowd Blog**:
  - **Blog**: [Bug Crowd Blog](https://bugcrowd.com/blog)

- **HackerOne Blog**:
  - **Blog**: [HackerOne Blog](https://hackerone.com/blog)

### Cheatsheets
- **Path Traversal Cheat Sheet Linux**: [Graceful Security](https://www.gracefulsecurity.com/path-traversal-cheat-sheet-linux/)
- **XXE Cheat Sheet**: [Graceful Security](https://www.gracefulsecurity.com/xxe-cheatsheet/)
- **HTML5 Security Cheat Sheet**: [HTML5Sec](https://html5sec.org/)
- **Brute XSS Cheat Sheet**: [BruteLogic](http://brutelogic.com.br/blog/cheat-sheet/)
- **XSS Polyglots**: [InnerHT](http://polyglot.innerht.ml/)
- **MySQL SQL Injection Cheat Sheet**: [Pentest Monkey](http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet)
- **AngularJS Sandbox Bypass Collection (Includes 1.5.7)**: [Pastebin](http://pastebin.com/xMXwsm0N)

### Glossary
- **Black Hat Hacker**: A hacker who violates computer security for malicious reasons or personal gain. They are also known as "crackers" and perform actions to destroy, modify, or steal data.

- **Buffer Overflow**: A situation where a program writes more data to a buffer than it can hold, overwriting adjacent memory and potentially leading to security vulnerabilities.

- **Bug Bounty Program**: A program offered by websites where White Hat Hackers can receive recognition or compensation for reporting security vulnerabilities.

- **Bug Report**: A description of a potential security vulnerability in a product or service, submitted by a researcher.

- **CRLF Injection**: A vulnerability where a user injects a Carriage Return Line Feed (CRLF) into an application, sometimes called HTTP Response Splitting.

- **Cross Site Request Forgery (CSRF)**: An attack where a malicious website, email, or message causes a user's browser to perform an action on another website where the user is authenticated.

- **Cross Site Scripting (XSS)**: An attack where a website includes unintended JavaScript code, which is executed by users' browsers.

- **HTML Injection**: An attack where a malicious user injects HTML into a site due to improper handling of user input.

- **HTTP Parameter Pollution (HPP)**: A vulnerability where a website accepts user input and uses it to make an HTTP request to another system without validating the input.

- **HTTP Response Splitting**: Another name for CRLF Injection, where a malicious user can inject CRLF characters into an HTTP response.