# Preface

## Who This Book is For
This book is designed for individuals who wish to deepen their understanding of data security, particularly those who are interested in the rationale behind the use of specific tools rather than simply applying a multitude of tools to a system to identify potential vulnerabilities. The goal is to help readers develop their own methodologies and approaches to effective penetration testing, enabling them to experiment and learn as they progress. I believe that this approach is essential for comprehending how malicious actors attack data systems, and thus, it is the most effective way to mitigate vulnerabilities before they can be exploited.

If you are a security professional, a penetration tester, or have an interest in the security of complex data environments, this book is tailored for you.

## Conventions
In this book, various text styles are used to differentiate between different types of information. Here are some examples and their meanings:

- **Code words**, database table names, folder names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles are shown as follows:
  - "In this particular case, the VM has been assigned an IP address of 192.168.204.132."

- **Blocks of code** are set as follows:
  ```bash
  # MSF port scanner
  onhost_add {
      println("[*] MSF Port Scanner New Host OpenPorts on$1");
      $console = console();
      cmd($console, "use auxiliary/scanner/portscan/tcp");
      cmd($console, "set THREADS 12");
      cmd($console, "set PORTS 139, 143");
      # enter other ports as required
      cmd($console, "set RHOSTS $1");
      cmd($console, "run -j");
      cmd($console, "use auxiliary/scanner/discovery/udp_sweep");
      cmd($console, "set THREADS 12");
      cmd($console, "set BATCHSIZE 256");
      cmd($console, "set RHOSTS $1");
      cmd($console, "run -j");
      db_sync();
  }
  ```

- **Command-line input or output** is written as follows:
  ```bash
  root@kali~# update-rc.d networking defaults
  ```

- **New terms and important words** are shown in bold. Words that you see on the screen, such as in menus or dialog boxes, appear in the text like this: "If you double-click on the truecrypt1 icon, you will be taken to a File Browser view."

- **Warnings or important notes** appear in a box like this.
- **Tips and tricks** appear in a similar format.

## Reader Feedback
We welcome feedback from our readers. Please let us know what you think about this book—what you liked or may have disliked. Your feedback is crucial for us to develop titles that truly meet your needs.

To send us general feedback, simply send an email to `PI:EMAIL` and mention the book title in the subject line of your message.

If you have expertise in a specific topic and are interested in writing or contributing to a book, please refer to our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).

## Customer Support
As the proud owner of a Packt book, we offer several resources to help you get the most out of your purchase.

### Errata
While we strive for accuracy, mistakes can occur. If you find an error in one of our books, whether in the text or the code, we would appreciate it if you could report it to us. By doing so, you can help other readers avoid frustration and assist us in improving future editions of the book.

To report an erratum, visit [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata), select your book, click on the errata submission form link, and enter the details of the error. Once verified, your submission will be accepted, and the erratum will be uploaded to our website or added to the list of existing errata under the Errata section of that title. You can view any existing errata by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).

### Piracy
Piracy of copyrighted material on the Internet is a persistent problem across all media. At Packt, we take the protection of our copyrights and licenses very seriously. If you come across any illegal copies of our works, in any form, on the Internet, please provide us with the location address or website name immediately so that we can take appropriate action.

Please contact us at `PI:EMAIL` with a link to the suspected pirated material. We appreciate your help in protecting our authors and our ability to deliver valuable content.

### Questions
If you have any questions or encounter any issues with any aspect of the book, please contact us at `PI:EMAIL`, and we will do our best to address your concerns.

## Disclaimer
The content within this book is intended for educational purposes only. It is designed to help users test their own systems against information security threats and protect their IT infrastructure from similar attacks. Packt Publishing and the author of this book assume no responsibility for actions resulting from the inappropriate usage of the learning materials contained herein.

# Part 1: The Attacker's Kill Chain

## Starting with Kali Linux

### Identifying the Target – Passive Reconnaissance
### Active Reconnaissance and Vulnerability Scanning
### Exploit
### Post-Exploit – Action on the Objective
### Post-Exploit – Persistence

## Introduction to Kali Linux
Kali Linux (Kali) is the successor to the BackTrack penetration testing platform, which is generally regarded as the de facto standard package of tools used for securing data and voice networks. This chapter provides an introduction to Kali and focuses on customizing Kali to support advanced aspects of penetration testing. By the end of this chapter, you will have learned:

- An overview of Kali
- Configuring network services and secure communications
- Updating Kali
- Customizing Kali
- Extending Kali's functionality with third-party applications
- Effective management of penetration tests

### Kali Linux Overview
BackTrack (BT), available at [www.offensive-security.com](http://www.offensive-security.com), was released to provide a wide variety of penetration testing and defensive tools, suitable for auditors and network administrators interested in assessing and securing their networks. Both authorized and unauthorized (hackers) penetration testers used these tools.

The final version of BackTrack, BT 5r3, was released in August 2012. Based on the Ubuntu Linux platform, it was widely adopted and supported by the security community. However, its file architecture made it difficult to manage the array of tools and their dependencies.

### Transition from BackTrack to Kali Linux
In BackTrack, all the tools used for penetration testing were placed in the `/pentest` directory, with subfolders like `/web` or `/database` to further define the location of tools. Finding and executing tools within this hierarchy could be counterintuitive. For example, determining the category of `sqlninja`, which identifies SQL injection, was challenging.

In March 2013, BackTrack was superseded by Kali Linux, which uses a new platform architecture based on the Debian GNU/Linux operating system. Debian adheres to the Filesystem Hierarchy Standard (FHS), making it easier to navigate and call tools from anywhere on the system.

Other features of Kali include:

- Support for multiple desktop environments such as Gnome, KDE, LXDE, and XFCE, with multilingual support.
- Debian-compliant tools synchronized with the Debian repositories at least four times daily, facilitating easy updates and security fixes.
- Support for ISO customizations, allowing users to build their own versions of Kali. The bootstrap function also supports automated enterprise-wide network installations using pre-seed files.
- ARMEL and ARMHF support, enabling Kali to be installed on devices like Raspberry Pi, ODROID-U2/-X2, and the Samsung Chromebook.
- Over 300 penetration testing, data forensics, and defensive tools, including extensive wireless support with kernel patches for packet injection required by some wireless attacks.
- Kali remains an open-source project that is free and well-supported by an active online community.

Throughout this book, we will use a VMware virtual machine (VM) of 64-bit Kali (refer to the Appendix for instructions on installing Kali). A VM is used because it allows for easy execution of applications in other operating systems, such as Microsoft Windows, and can be archived with the results from a penetration test for review.

### Kali Linux Menu
When Kali is launched, the user is presented with the default desktop GUI, featuring a menu bar at the top and a few simple icons. By selecting the menu item "Applications" and then "Kali Linux," the user gains access to a menu system containing the Top 10 Security Tools and a series of folders organized in the general order followed during a penetration test, as shown in the following screenshot:

[Insert Screenshot Here]

The menu will be familiar to users of BT 5r3, with some changes, including simplified access to network services and communications.

### Configuring Network Services and Secure Communications
The first step in using Kali is to ensure it has connectivity to either a wired or wireless network to support updates and customization.

You may need to obtain an IP address via DHCP (Dynamic Host Configuration Protocol) or assign one statically. First, confirm your IP address using the `ifconfig` command from a terminal window, as shown in the following screenshot:

[Insert Screenshot Here]

In this particular case, the VM has been assigned an IP address of 192.168.204.132.

If an IP address was not obtained, you can assign one by DHCP using the command `dhclient eth0` (or other available interfaces, depending on your system configuration).

If a static IP address is used, additional information may be required. For example, to assign a static IP of 192.168.204.128, you would need the following details:
- Host IP address: 192.168.204.128
- Subnet mask: 255.255.255.0
- Default gateway: 192.168.204.1
- DNS server: 192.168.204.10

Enter a terminal window and use the following commands:
```bash
root@kali:~# ifconfig eth0 192.168.204.128 netmask 255.255.255.0
root@kali:~# route add default gw 192.168.204.1
root@kali:~# echo nameserver 192.168.204.10 > /etc/resolv.conf
```

Changes made to IP settings are non-persistent and will be lost when Kali is rebooted. To make the changes permanent, edit the `/etc/network/interfaces` file, as shown in the following screenshot:

[Insert Screenshot Here]

By default, Kali does not start with the DHCP service enabled. Enabling this service announces the new IP address on the network, which may alert administrators to the presence of the tester. For some test cases, this may not be an issue, and it may be advantageous to have certain services start automatically during boot-up. This can be achieved by entering the following commands:
```bash
root@kali:~# update-rc.d networking defaults
root@kali:~# /etc/init.d/networking restart
```

Kali installs with network services that can be started or stopped as required, including DHCP, HTTP, SSH, TFTP, and the VNC server. These services are usually invoked from the command line, but some are accessible from the Kali menu.

### Adjusting Network Proxy Settings
Users located behind an authenticated or unauthenticated proxy connection must modify `bash.bashrc` and `apt.conf`. Both files are located in the `/root/etc` directory.

1. Edit the `bash.bashrc` file, as shown in the following screenshot, and use a text editor to add the following lines to the bottom of the file:
   ```bash
   export ftp_proxy="ftp://user:password@proxyIP:port"
   export http_proxy="http://user:password@proxyIP:port"
   export https_proxy="https://user:password@proxyIP:port"
   export socks_proxy="https://user:password@proxyIP:port"
   ```

2. Replace `proxyIP` and `port` with your proxy IP address and port number, respectively, and replace the username and password with your authentication credentials. If there is no need to authenticate, write only the part following the `@` symbol.

3. In the same directory, create the `apt.conf` file and enter the following command lines, as shown in the following screenshot:
   ```bash
   Acquire::http::Proxy "http://user:password@proxyIP:port";
   Acquire::ftp::Proxy "ftp://user:password@proxyIP:port";
   Acquire::https::Proxy "https://user:password@proxyIP:port";
   ```

4. Save and close the file. Log out and then log back in to activate the new settings.

### Securing Communications with Secure Shell (SSH)
To minimize detection by a target network during testing, Kali does not enable any externally-listening network services. Some services, such as Secure Shell (SSH), are already installed but must be enabled prior to use.

Kali comes preconfigured with default SSH keys. Before starting the SSH service, it is advisable to disable the default keys and generate a unique keyset for use. Move the default SSH keys to a backup folder, and then generate a new SSH keyset using the following command:
```bash
dpkg-reconfigure openssh-server
```

The process of moving the original keys and generating the new keyset is shown in the following screenshot:

[Insert Screenshot Here]

To verify that the newly generated keys are unique, calculate their `md5sum` hash values and compare them with the original keys, as shown in the following screenshot:

[Insert Screenshot Here]

To start the SSH service using the menu, select "Applications | Kali Linux | System Services | SSHD | SSHD Start."

To start SSH from the command line, use the following command:
```bash
service ssh start
```

To verify that SSH is running, perform a `netstat` query, as shown in the following screenshot:

[Insert Screenshot Here]

The SSH daemon is listening on port 22 in the previous example. To stop SSH, use the following command:
```bash
/etc/init.d/ssh stop
```

### Updating Kali Linux
Kali must be regularly patched to ensure that the base operating system and applications are up-to-date and that security patches have been applied.

#### Debian Package Management System
Debian's package management system relies on discrete bundled applications called packages. Packages can be installed or removed by the user to customize the environment and support tasks such as penetration testing. They can also extend the functionality of Kali, supporting tasks like communications (Skype, instant messaging, and secure emails) or documentation (OpenOffice and Microsoft Office running under Wine).

Packages are stored in repositories and are downloaded to the system user to ensure the integrity of the package.

#### Packages and Repositories
By default, Kali uses only the official Kali repositories. It is possible that an incomplete installation process may not add the repositories to the correct sources.list file, or you may wish to extend the available repositories when new applications are added.

Updating the `sources.list` file can be done from the command line:
```bash
echo "deb http://http.kali.org/kali kali main contrib non-free" >> /etc/apt/sources.list
```
or by using a text editor.

The default package repositories that should be present in `/etc/apt/sources.list` are listed as follows; if not present, edit the `sources.list` file to include them:
```plaintext
## Kali
deb http://http.kali.org/kali kali main contrib non-free

## Kali-dev
deb http://http.kali.org/kali kali-dev main contrib non-free

## Kali Security updates
deb http://security.kali.org/kali-security kali/updates main contrib non-free
```

Not every Kali tool is maintained in the official tool repositories. If you choose to update a tool manually, it is possible that you will overwrite existing packaged files and break dependencies. Therefore, some tools that have not been officially moved to Debian repositories, such as `aircrack-ng`, `dnsrecon`, `sqlmap`, `beef-xss`, and the Social Engineering Toolkit (SET), are maintained in the Bleeding Edge repository. This repository can be added to `sources.list` using the following command line:
```plaintext
## Bleeding Edge repository
deb http://repo.kali.org/kali kali kali-bleeding-edge main
```

#### Dpkg
Dpkg is Debian's package management system. This command-line application is used to install, remove, and query packages. In general, dpkg performs actions on individual packages.

Dpkg is particularly useful in compiling a list of installed applications in Kali using the command:
```bash
dpkg -l > list.txt
```

If you want to know if a specific tool is installed, use:
```bash
dpkg -l | grep <tool-name>
```

The following screenshot shows an excerpt of the returned data when `dpkg -l` is invoked, providing a list of all applications installed on the Kali distribution; this is particularly useful in identifying applications that may only be accessible directly from the command line.

[Insert Screenshot Here]

#### Using Advanced Packaging Tools (APT)
Advanced Packaging Tools (APT) extend the functionalities of dpkg by searching repositories and installing or upgrading packages along with all the required dependencies. APT can also be used to upgrade a complete distribution.

The most common APT commands are as follows:

- `apt-get update`: Resynchronizes the local package index files with their source as defined in `/etc/apt/sources.list`. The `update` command should always be used first, before performing an upgrade or dist-upgrade.
- `apt-get upgrade`: Installs the newest versions of all packages installed on the system using `/etc/apt/sources.list`.
- `apt-get dist-upgrade`: Upgrades the entire distribution, handling changing dependencies with new versions of packages.
- `apt-get install <package>`: Installs the specified package.
- `apt-get remove <package>`: Removes the specified package.
- `apt-get autoremove`: Removes unused packages and dependencies.

These commands are essential for maintaining a secure and up-to-date Kali Linux environment.