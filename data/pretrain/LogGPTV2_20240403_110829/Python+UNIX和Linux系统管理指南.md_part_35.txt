通常，为了使用OS X，对于系统管理员来说，了解一些与实际的UI进行交互的高级脚本
OS × 脚本 API
. In [4]: from appscript import app
iTunesHelper
GrowlHelperApp
Folder Actions Dispatcher
DashboardClient
In [7]: processnames.sort(Iambda x, y: cmp(x.lower(), y.lower()
(as'weusssanoid uotteotidde'susaass = saweussaoid :[a] ui
iCal
GrowlMenu
Dock
AppleSpell
Activity Monitor
In [5]: sysevents = app('System Events')
AirPort
Lnder
amino
:Base Station Agent
www.TopSage.com
操作系统什锦丨243
。这一处理方式似
PDG
---
## Page 258
Copy Cloner的原始版本是在Applescritp studio下编写完成的。如果有充裕的时间，值得
Python GUI，并且通过“do shell script”调用Python。一个鲜为人知的事实是，Carbon
Effects。一个最终的建议是：通过Applescript Studio可以非常快速地在OS X上创建
系统管理员需要做的一些事情包括创建进行交互的批处理操作，例如，Adobe After
using-python-and-applescriptto-get-the-most-out-of-your-mac.html。
篇文章，对此进行了阐述，参见：http://www.macdevcenter.com/publalmac/2007/05/08/
错的工具。它可以在Python中完成我们通常使用Applescript来完成的工作。Noah写了一
如果碰巧需要使用针对OS X的应用，来完成工作流自动化任务，appscript是一个非常不
from wx import PySimpleApp, ProgressDialog, PD_APP_MODAL, PD_ELAPSED_TIME 
#!/usr/bin/env pythonw
例8-12：自动映射OS X分区并使用WXPython显示进度
都应该被符号链接到另一个分区或者可用的网络上，参见例8-12。
一台计算机，当然也可以从硬盘的第二个分区运行。/Users目录和任何其他重要的目录
下面是一个简化的硬编码自动启动脚本，可以在网络启动的映像上运行，自动重新映像
要重启主机并且按下“N”键选择网络启动就可以了，或者说主机会自行修复。
动再映像主机中起到重要作用。事实上，它可以完全自主开始工作。一个用户应该仅需
是非常流行的自由软件克隆工具Carbon Copy Cloner中的一个关键组件，并且在许多自
另外一个使用OS X开发的极为神奇的，具有领先水平的工具是ASR命令行工具。该工具
自动再映像主机
在其身上花上一些时间进行研究。
244
import sys
import subprocess
importos
Spotlight
quicklookd
PandoraBoy
Terminal
System Events
Safari
Python
mdworker
loginwindow
JavaApplicationStub
TextMate
TextEdit
第8章
www.TopSage.com
PDG
---
## Page 259
if_
def main():
def rebuild():
def boot2main():
application = PySimpleApp()
#wxpython portion
#Reboot Variables
dpath =
os_path = '/Volumes/main'
#path variables
asr = '/usr/sbin/asr -source
#commands to rebuild main partition using asr utility
name
else:
while True:
time.sleep(30)
try:
sys.exit(1)
""'asnae.ued prrea put+ you pino. suid
rebuild()
if os.path.exists(os_path):
sys.exit(1)
print "CMD: %s [ERROR: invalid path]" % reimage_cmd
time.sleep(5) #Gives dialog time to run
'/net/server/image.dmg
else:
(. *".-uewray. ‘T + x ) aepdn-orerp
wxSleep(1)
×=0
break
boot2main() #calls reboot/bless function
wxSleep(5)
wxSleep(1)
print
"repaired volume.."+ os_path
maximum = 100, Style= PD_APP_MODAL| PD_ELAPSED_TIME)
www.TopSage.com
'Attempting Rebuild of Main Partition',
操作系统什锦丨245
DG
---
## Page 260
http:/let.redhat.com/page/Main_Page。下面是一些使用Python的项目列表：
Red Hat中一些最有意义的新应用来自Emerging Technologies group（前瞻技术组）
Red Hat使用Python来做许多事情，可以将Python作为一个伙伴或是一个操作系统。在
RedHat Linux系统管理
的名称即为plistlib。这里没有时间通过示例对其进行介绍，但是它值得你去认真学习
上的Python与plistlib是绑定在一起的，plistlib允许解析和创建Plist文件。模块自身
在第3章中，我们使用ElementTree解析了来自system_profiler的XML数据流，但是OSX
从Python中管理Plist文件
Python语言编写，但它可以很容易地在Python中脚本化。
更多的资料，可以参考http:/rsug.itd.umich.edu/software/radmindl。尽管radmind没有用
系统类型，可以检查文件系统的变化，并且可以基于变化对主机进行恢复。如果需要
如果你正在做一些重要的OSX系统管理工作，那么应该学习radmind。radmind是tripwire
X安装，完成一个基本的操作系统安装，然后使用radmind完成剩下的步骤。
理系统或是开放源码的工具radmind来发布。一种情况是，首先自动重映像一个新的OS
的映像，甚至通过查看硬件驱动的老名字来实现。接下来，软件包可以使用OSX的包管
该脚本很容易成为企业软件发布和管理系统的基础，因为它可以根据硬件签名发布不同
进度条，被重新映像的分区再次成为根卷，然后提示重新启动计算机。
被正确设置，并且没有其他错误，将继续使用ASR命令映像硬件驱动和一个自动升级的
回顾上述代码，脚本试图重新映像一个分区并且弹出一个WXPython进度条。如果路径
246
在所有的主流Linux发行版中，Ubuntu或许是与Python关联最多的。其中的部分原因是
Ubuntu管理
一下。
FUNC（Fedora统一网络控制器）
Virt-Factory：基于web的虚拟管理，具有侧重于应用的特点
Cobbler，针对PXE和虚拟化可以建立全自动的网络启动服务器
使用libvirtVirtInst建立的Python+PyGTK的管理应用
Libvert，虚拟API的虚拟计算机管理器
一个使用libvirt来简化访客VMs配置的Python库
第8章
www.TopSage.com
ODG
---
## Page 261
可以找到Ubuntu的一个非常不错的Python源码包：https:/launchpad.netl。
创建者Mark Shuttleworth是一个资深的Python黑客（可以追溯到90年代初期）。在这里
疑问，在未来的数据中心操作系统中Python将起到重要作用。
过Python API移动物理计算机到虚拟机。Python在虚拟世界中已经占有一席之地，毫无
以处理虚拟化。Python能够以一种基本的方法与虚拟机交互，可以控制虚拟机，可以通
多。Noah最近的雇员Racemi曾经在Python中写了一个全面的数据中心管理应用程序，可
你或许正在家中阅读到这里，然后想到：什么事情必须使用Python去做呢？回答是相当
是需要付出一些代价的，这就是其复杂性超出了普通系统管理员的能力。
操作系统，也不再仅能处理小的商业活动，它可以是一个大的数据中心。而所有的效率
行测试的方法，另一方面，它也显著增加了管理的复杂性。一台计算机不再只安装一个
虚拟化对系统管理员来说是一把双刃剑，一方面它开创了可以很容易地对配置和应用进
统管理作业。可以说，在经常形容为“颠覆性技术”的技术中，虚拟化是非常简单的一-
走到支持虚拟化的队伍中来。有一点是毫无疑问的，即虚拟化将彻底改变数据中心和系
词已经在一些大的公司被谈论来谈论去了。每一个来自微软、RedHat，Oracle的人都会
心和系统管理的未来发展方向。预测未来总是有风险的，但是“数据中心操作系统”一
2007年8月14日，VMware上市，募集了数十亿美元，并且巩固了“虚拟化”作为数据中
虚拟化
用
LDOM。Python在Solaris中工作得非常不错，甚至在它的开发包管理系统中都被普遍使
具有一些非常有意义的技术，包括ZFS、容器，以及在某些方面等同于VMware虚拟机的
对于一名使用Python的系统管理员，这意味着什么呢？Sun突然变得令人兴奋，因为它
新的CD版本，或是通过http://www.opensolaris.com预定一个。
通过与Solaris社区开发版的整合，融人一些RedHat与Fedora的思想。你可以下载一张最
月的支持窗口一样。同时也将采用Ubuntu的单CD方法，抛弃大的DVD发行版。最后，
将来，Sun将在一些有意义的开发方向上以6个月为一个发行周期，就像Ubunto具有18个
麻烦。但是，最近一些系统管理员、开发人员以及企业又重新开始谈论Sun。
初，Linux的metioric迅速被剪裁成Solaris的metioric。Sun在发展过程中确实遇到了一些
从90年代后期到本世纪初，Solaris是首选的、Unix的“Big Iron”发行版本。在本世纪
Solaris系统管理
个。
www.TopSage.com
操作系统什锦丨247
---
## Page 262
248
创建新域：
初始化连接：
要好多了。下面是一个简单的示例，演示了SimpleDB是如何工作的：
一下项目主页：http://code.google.com/p/boto/。这里有最新的信息，比起我们能给你的
Mechanical Turk和SimpleDB。因为这是非常新且极其强大的API，我们建议你自己查看
下面的事情: Simple Storage Service, Simple Queue Service, Elastic Compute Cloud,
处理Amazon的云计算基础结构的一个非常好的选择是Boto。使用Boto，你可以完成
使用Boto的AmazonWeb服务
API。最后，我们将讨论这一技术是如何影响系统管理员的工作的。
在这一节将介绍一些可用的API，或许你在处理Amazon和Google App引擎时会需要这些
们确信它不会令你太失望。
Google提供了一个非常有用的twist，当前仅支持Python。这是一本Python编程的书，我
Amazon和Google。在这本书送到出版商之前几周Google刚刚抛出了“云炸弹”。其中
计算是根据工作负载需求进行响应的资源使用方法。在云计算方面有两个大的应用是
当虚拟化刚从喧嚣中走出来时，云计算的出现再次吸引了人们的目光。简单地讲，云
云计算
紧密跟踪这些产品，验证Python在其中的作用。
这里没有时间进一步介绍这些技术如何脚本化，因为这超出了本书的范围，但是我们会
API的不同的产品。一些你或许希望脚本化的产品包括VMware Site Recovery Manager、
况会有所改变。VMware的新方向出现在XML-RPC API方面。VMware有一些具有不同
C 的API可以使用。在写这本书时，Python在这方面的实现还是有限的，但是下一步情
机进行全面控制，是人们梦寐以求的目标。幸运的是有一些Perl、XML-RPC、Python和
正如我们之前提到的，VMware在当前的虚拟化领域中占有重要地位。通过程序对虚拟
VMware
In [3]: domain = sdb.create_domain('my_domain')
第8章
www.TopSage.com
X
DG
---
## Page 263
因素。他们提到了下面这些任务：
我们会见了一些来自App Engine Team的工作人员，与他们谈论了影响系统管理员工作的
其他服务。
在某些点可能有变化。关于App Engine的另一个有意义的事情是它也可以整合Google的
用程序在Google的基础框架下免费运行。App Engine现在具有严格的Python API，但是
Google App引擎是作为测试服务发布的，从发布之日起就广泛引起注意。它允许你的应
Google App引擎
如何工作的一个最好的方式。
念：http://code.google.com/p/boto/source/browse。值得注意的是，查看测试是理解库是
以上就是当前API方式的工作，但是你应该在svn库查看测试，以获得处理过程的具体概
添加新元素：
一个数据中心已日益成为可能，这也进一步影响着系统管理员的工作方式。掌握如
技术组）工作，主要从事各种工具的开发。如今将自己数据中心中的数据发送到另
加入Google之前，Kevin在IBM的Advanced Internet Technology group（互联网高级
此对其进行深入学习也是非常有意义的。
In [4]: item = domain.new_item('item')
大量数据的上传：http://code.google.com/appenginelarticles/bulkload.html。系统管
记录日志：http:/code.google.com/appenginelarticles/logging.html。
成这一任务的工具。
理员经常处理移动大量数据的任务，这是一个在GoogleApp Engine的app背景下完
创建者，GoogleSuggest可以在你输入时交互地给出搜索建议。在
统基础框架组工作了几年，在那里他从事集群管理系统工作，这部
入Google，在Google App Engine工作之前，Kevin曾在Google的系
Kevin Gibbs是Google App Engine中的先进技术。Kevin在2004年加
名人简介：GOOGLE APPANGINE TEAM
www.TopSage.com
Kevin Gibbs
操作系统什锦|249
---
## Page 264
#1/usr/bin/env python2.5
教程了。如果你访问http://greedycoin.appspot.com/，你可以测试一个我们正要介绍的版
在这一节，我们提供了一个与Google App Engine相反的教程，因为已经有一个非常棒的
通过非常不错的GoogleAppEngine教学（网址：http://code.google.comlappengine/docs)
的SDK，可以从这里下载：http://code.google.com/appengine/downloads.html。你可以
建立一个GoogleApp Engine的应用示例
3
250
from google.appengine.ext.webapp import template
from google.appengine.api import users
importos
import decimal
#Noah Gift
例8-13：贪婪硬币web应用
询的能力。参见例8-13。
回适当的变化结果。它也具有通过Google的认证API进行登录，并且执行一个最近的查
本，以及最近的源码版本。应用程序会将变化作为输入，将其保存到数据库中，然后返
gettingstartedl）来完成学习。
为完成普通任务而设置的Cron作业。
邮件API: send_mail_to_admins()函数：http://code.google.comlappengineldocs/maill
版本管理：http://code.google.com/appengine/docs/configuringanapp.html#Required
这不是Google App Engine的最直接的一部分，但是你可以在自己服务器上使用cron
行为，你可以向app的系统管理员自动发送邮件。
在系统管理环境中，这对于完成监测任务非常有意义。对于一些重要的异常或关键
同时运行多个app版本，使用admin控制台来选择哪一个版本接收实时流量。
ID，它用新的编码进行替换。如果你改变了版本ID，你可以在正式的产品环境中
http://yourapp.com/emailsummary，这会触发一个邮件发送机制，将邮件发送给系
以常规间隔向你的app发送请求。例如，你可以有一个cron作业，每隔一小时点击
functions.html.
一个需要为你的app设置的字段是版本。每次你上传一个app都会使用相同的版本
Elements.
统管理员，邮件中包含了上一小时重要事件的统计结果。
 wsgiref.handlers
第8章
import db
import webapp
www.TopSage.com
---
## Page 265
class Recent(webapp.RequestHandler):
class ChangeModel(db.Model):
date = db.DateTimeProperty(auto_now_add=True)
user = db.UserProperty()
def get(self):
def
def get(self):
def get(self):
input = db.IntegerProperty()
collection ={}
#ust grab the latest post
self.coins = [1,5,10,25]
self.coin_lookup ={25:
:,sandur.
template_values = {
#formats decimal correctly
records = query.fetch(limit=10)