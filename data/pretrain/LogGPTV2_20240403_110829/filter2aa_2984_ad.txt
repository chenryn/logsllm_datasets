### Understanding Web Vulnerability Scanners

Web vulnerability scanners must be configured to search for specific files or directories on a web server. Typically, these tools scan for vulnerable files or directories that may contain sample code or known vulnerabilities. The discovered vulnerabilities are often stored in a file, formatted as follows:

```
/cgi-bin/cgiemail/uargg.txt
/random_banner/index.cgi
/cgi-bin/mailview.cgi
/cgi-bin/maillist.cgi
/cgi-bin/userreg.cgi
/iissamples/ISSamples/SQLQHit.asp
/SiteServer/admin/findvserver.asp
/scripts/cphost.dll
/cgi-bin/finger.cgi
```

### Utilizing Vulnerability Files for Google Hacking

The lines in a vulnerability file can serve as a roadmap for a Google hacker. Each line can be used in an `index.of` or `inurl` search to identify vulnerable targets. For example, a Google search for `allinurl:/random_banner/index.cgi` might return results similar to those shown in Figure 25.

**Figure 25: Example search using a line from a CGI scanner**

A hacker can then take the sites returned from this search, apply additional techniques, and potentially exploit the `random_banner` program to access any file on the web server, including the password file, as illustrated in Figure 26.

**Figure 26: Password file captured from a vulnerable site found using a Google search**

This technique is particularly suitable for automation because CGI scanner vulnerability files can be extensive. Tools like `gooscan`, developed by j0hnny, can automate this process and perform other functions. Automation with `gooscan` is discussed later.

### Automated Scanning and Google's Policies

Given the vast number of potential search combinations, an automated tool that scans for known dangerous pages would be highly useful. However, Google prohibits such automation, as stated in their [Terms of Service](http://www.google.com/terms_of_service.html):

- You may not send automated queries to Google without express permission.
- This includes using software to determine website rankings, meta-searching Google, and performing offline searches.

Google does offer an alternative through the [Google Web APIs](http://www.google.com/apis/). However, there are several limitations:
- Both users and developers must have Google license keys.
- API-created programs are limited to 1,000 queries per day due to resource constraints.

Therefore, any user running an automated Google querying tool (excluding API-based tools) must obtain express permission from Google. The consequences of violating these terms are unknown, but it is advisable to comply with Google's policies.

### Google Search Appliances

The [Google Search Appliance](http://www.google.com/appliance/) is a locally controlled and operated mini-Google search engine for individuals and corporations. When querying a Google appliance, extra parameters are often required. For example, a search for "Steve Hansen" at Stanford University might result in a URL like:

```
http://find.stanford.edu/search?q=steve+hansen
&site=stanford&client=stanford&proxystylesheet=stanford
&output=xml_no_dtd&as_dt=i&as_sitesearch=
```

These parameters can vary between appliances, but certain default parameters are common.

### Googledorks and Gooscan

The term "googledork," coined by Johnny Long, originally referred to foolish people revealed by Google. It now describes those who use Google to find sensitive information. The [official googledorks page](http://johnny.ihackstuff.com/googledorks) lists many examples of sensitive data found via Google.

**Gooscan** is a UNIX tool that automates queries against Google search appliances to find potential vulnerabilities. It should only be used with express permission from Google or the owner of the Google appliance. Unauthorized use may violate Google's terms of service.

### GooPot: A Google Honeypot System

A honeypot is a system designed to attract and trap attackers. A **GooPot** is a web-based honeypot that mimics vulnerable web pages to attract Google hackers. By monitoring the referrer variables, GooPot administrators can learn about new search techniques and protect their sites.

### Google Sets

[Google Sets](http://labs.google.com/sets) helps generate lists of related items based on a few examples. This can help Google hackers come up with new search terms and understand trends in search results.

### Protecting Yourself from Google Hackers

1. **Keep Sensitive Data Off the Web**: Use secure methods like SSH/SCP or encrypted email to share sensitive data.
2. **Use Googledork Techniques**: Check your site for sensitive information and use tools like gooscan (with permission).
3. **Remove Your Site from Googleâ€™s Index**: Follow the steps outlined in the [Google Webmaster FAQ](http://www.google.com/webmasters/).
4. **Use a robots.txt File**: Implement a `robots.txt` file to exclude parts of your site from being crawled, though note that malicious actors may ignore this.

### Acknowledgments

- Thanks to God, family, and friends for their support.
- Special thanks to contributors and media outlets for their coverage and support.

For more information, visit [Johnny Long's website](http://johnny.ihackstuff.com).