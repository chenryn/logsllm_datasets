This means that with a veriﬁcation timer of 200 msec, we can expect most ARP
responses to come back before the timer expires. So we believe this type of false
negative is rare in practice when the veriﬁcation timer is properly set.
In summary, among the three types of false negatives examined, only the
second type, simulating the victim’s sequence number, appears feasible from the
attacker’s standpoint. Even if the attacker can simulate the victim’s sequence
number correctly, the spooﬁng will be caught as soon as the victim sends out any
frame. By sending a probe for each sensitive management frame, the proposed
spoof detection algorithm can detect spooﬁng of these frames in real time, further
reducing the potential threat of this type of false negatives. The ﬁrst type, faking
an out-of-order frame that the AP happens to lose, is unlikely to be exploited
because the percentage of lost frames before a beacon/probe response frame is
below 0.03%. The third type, receiving no probe responses within the veriﬁcation
period, is also rare in practice if the veriﬁcation timer is properly set.
5.4 Detecting Real Attacks
Finally we installed the AirJack tool [5] on the attacker node, and mounted
attacks by injecting spoofed frames as if they were from the victim node. Figure 6
shows that the algorithm detects all of the four spoofed frames because in the
veriﬁcation process, the sequence number of the ARP response frame is “smaller”
than the spoofed frame. There is no false negative.
Because the victim node is placed far away from the AP, there are several
frames with a gap around 6. This triggers the veriﬁcation process. Since all sub-
sequent frames in the veriﬁcation period are “larger” than the frame triggering
Spoofed Frame Gap
1000
p
a
G
r
e
b
m
u
N
e
c
n
e
q
e
S
100
10
1
0
Frame Index
500
Fig. 6. Inter-frame sequence number gaps for frames that appear in an attack test.
There are 4 attacks in the test and the proposed spoof detection algorithm detects all
of them. Even though there are lost frames, they do not cause false positives.
328
F. Guo and T.-c. Chiueh
the veriﬁcation, the algorithm correctly ignores these abnormal sequence number
gaps and there is no false positive either.
6 Conclusion
Compared with wired networks, wireless LAN opens up new attack possibili-
ties because an attacker can easily send any frames to a given WLAN. More-
over, because the IEEE 802.11 standard does not provide any mechanism for
per-frame source authentication, it is relatively easy for an attacker to pretend
to be any entity it desires. By impersonating a legitimate AP or STA, an at-
tacker can disrupt the operation of a wireless LAN by mounting various types
of denial-of-service attacks, using faked deauthentication/disassociation frames,
power saving frames, etc. Using a spoof attack, an attacker can also steal cre-
dential information, launch man-in-the-middle attacks, or simply gain access
to a network. Widely available wireless LAN attack tools such as Airjack [5],
Void11 [4], KisMAC [7], Airsnarf [6], dsniﬀ [8], WEPWedgie [3], etc., further sim-
pliﬁes the logistics of mounting these attacks, making it possible for casual users
to attempt these attacks. While the ultimate solution to the spooﬁng problem
is through a cryptographic sender authentication mechanism, so far incorporat-
ing link-layer sender authentication for all types of frames into the IEEE 802.11
standard does not appear likely, at least in the foreseeable future. Moreover, the
large installed base of legacy IEEE 802.11 devices demands a diﬀerent solution
that does not require any infrastructure modiﬁcations.
This paper proposes a sequence number-based spoof detection algorithm that
can eﬀectively detect MAC address spooﬁng without requiring any changes to
existing APs or STAs. By leveraging the sequence number ﬁeld in the IEEE
802.11 MAC header, all existing spooﬁng attacks can be detected without any
false positive or negative. Although the idea of using sequence number for spoof
detection has been discussed in other papers and some commercial WLAN mon-
itoring systems [17,18,19] claim the ability to detect spooﬁng, to the best of our
knowledge this paper represents the ﬁrst paper that details the results of a sys-
tematic study on how to detect spooﬁng using sequence numbers in real WLAN
environments, where frame loss, retransmission and out-of-order transmission
is common. We describe the proposed spoof detection algorithm in detail and
comprehensively analyze its weaknesses in terms of its false positives and false
negatives. Furthermore, the proposed spoof detection algorithm is implemented
and quantitatively tested against real WLAN traﬃc to empirically evaluate the
seriousness of its false positives and false negatives.
The test results show the algorithm can tolerate STAs with abnormal sequence
number evolution patterns without generating any false positives. As for false
negatives, each spoofed frames will be detected if casual attackers don’t exploit
the false negative of the algorithm. If attackers can successfully exploit the false
negatives, in the worst case the proposed algorithm can always detect a spooﬁng
activity although some of the spoofed frames may go undetected, and all spoofed
management frames will be detected in real time.
Sequence Number-Based MAC Address Spoof Detection
329
References
1. IEEE 802.11
Standard.
http://standards.ieee.org/getieee802/download/802.
11-1999.pdf
2. J. Bellardo and S. Savage. 802.11 Denial-of-Service Attacks: Real Vulnerabili-
ties and Practical Solutions. In Proceedings of the USENIX Security Symposium,
Washington D.C., August 2003.
3. WEPWedgie. http://sourceforge.net/projects/wepwedgie/
4. void11. http://www.wlsec.net/void11/
5. AirJack. http://sourceforge.net/projects/airjack/
6. Airsnarf. http://airsnarf.shmoo.com/
7. KisMAC. http://binaervarianz.de/projekte/programmieren/kismac/
8. dsniﬀ. http://www.monkey.org/∼dugsong/dsniﬀ
9. N. Borisov, I. Goldberg, and D. Wagner. Intercepting Mobile Communications:
The Insecurity of 802.11. Mobicom 2001
10. J. Wright. Detecting Wireless LAN MAC Address Spooﬁng. http://home.
jwu.edu/jwright/papers/wlan-mac-spoof.pdf
11. E. D Cardenas. MAC Spooﬁng–An Introduction. http://www.giac.org/practical/
GSEC/Edgar Cardenas GSEC.pdf
12. D. Dasgupta, F. Gonzalez, K. Yallapu and M. Kaniganti. Multilevel Monitoring
and Detection Systems (MMDS). In the proceedings of the 15th Annual Computer
Security Incident Handling Conference (FIRST), Ottawa, Canada June 22-27, 2003
13. J. Hall, M. Barbeau and E. Kranakis. Using Transceiverprints for Anomaly Based
Intrusion Detection. In Proceedings of 3rd IASTED, CIIT 2004, November 22-24,
2004, St. Thomas, US Virgin Islands.
14. J. Yeo, M. Youssef and A. Agrawala. A framework for wireless LAN monitoring and
its applications. In Proceedings of the 2004 ACM workshop on Wireless security,
October 01-01, 2004, Philadelphia, PA, USA
15. F. Robinson. 802.11i and WPA Up Close. Network Computing, 2004.
16. A. Mishra and W. Arbaugh. An Initial Security Analysis of the IEEE 802.1X
Standard. CS-TR 4328, Department of Computer Science, University of Maryland,
College Park, December 2002.
17. AirDefense. Enterprise Wireless LAN Security and WLAN Monitoring. http://
www.airdefense.net/
18. Aruba Wireless Networks. Wireless
Intrusion Protection.
http://www.
arubanetworks.com/pdf/techbrief-IDS.pdf
19. AirMagnet. http://www.airmagnet.com/products/enterprise.htm
20. J. Malinen. Host AP driver for Intersil Prism2/2.5/3. http://hostap.epitest.ﬁ/
A Specification-Based Intrusion Detection Model 
for OLSR* 
Chinyang Henry Tseng1, Tao Song1, Poornima Balasubramanyam1, 
Calvin Ko2, and Karl Levitt1 
1 Computer Security Laboratory, University of California, Davis 
{ctseng, tsong, pbala, knlevitt}@ucdavis.edu  
2 Sparta Inc., Sunnyvale, CA 94085 
PI:EMAIL 
Abstract.  The unique characteristics of mobile ad hoc networks, such as shared 
wireless  channels,  dynamic  topologies  and  a  reliance  on  cooperative  behavior, 
makes routing protocols employed by these networks more vulnerable to attacks 
than routing protocols employed within traditional wired networks. We propose a 
specification-based  intrusion-detection  model  for  ad  hoc  routing  protocols  in 
which  network  nodes  are  monitored  for  operations  that  violate  their  intended 
behavior.  In  particular,  we  apply  the  model  to  detect  attacks  on  the  OLSR 
(Optimized Link State Routing) protocol. We analyze the protocol specification of 
OLSR, which describes the valid routing behavior of a network node, and develop 
constraints  on  the  operation  of  a  network  node  running  OLSR.  We  design  a 
detection  mechanism  based  on  finite  state  automata  for  checking  whether  a 
network node violates the constraints. The detection mechanism can be used by 
cooperative distributed intrusion detectors to detect attacks on OLSR. To validate 
the research, we investigate vulnerabilities of OLSR and prove that the developed 
constraints can detect various attacks that exploit these vulnerabilities. In addition, 
simulation experiments conducted in GlomoSim demonstrate significant success 
with the proposed intrusion detection model. 
Keywords:  Intrusion  Detection,  MANET,  Mobile  ad  hoc  network,  OLSR, 
Specification based IDS, Network Security, Constraints. 1 
1   Introduction 
The popularity of powerful new  wireless technologies has given rise to several new 
applications.  Many  of  these  applications  are  designed  to  deploy  mobile  ad-hoc 
networks  (MANETs)  in  various  environments  that  include  cellular  phone  services, 
*  This  research  has  been  prepared  through  the  following  grants  -  UCSB/AFOSR/MURI  grant 
(#F49620-00-1-0331),  NSF/ITR  grant  (#0313411)  and  collaborative  participation  in  the 
Communications and Networks Consortium sponsored by the U.S. Army Research Laboratory 
under  the  CTA  program  (subcontracted  through  Telcordia  under  grant  #10085064).  The  U.S. 
Government  is  authorized  to  reproduce  and  distribute  reprints  for  government  purposes, 
notwithstanding any copyright notation thereof. 
A. Valdes and D. Zamboni (Eds.): RAID 2005, LNCS 3858, pp. 330 – 350, 2006. 
© Springer-Verlag Berlin Heidelberg 2006 
A Specification-Based Intrusion Detection Model for OLSR 
331 
disaster relief, emergency services, and battlefield scenarios, among others. MANETs 
are particularly attractive since they enable a group of mobile nodes to communicate 
using the wireless medium in the absence of pre-existing infrastructure such as base 
stations. MANETs depend on the cooperative behavior of all the nodes in the network 
to function optimally.  
Security  is  an  important  issue  for  MANETs,  especially  for  critical  applications 
such as in battlefields and in disaster recovery. Due to the shared nature of wireless 
channels,  noise  within  the  channels,  and  instability  caused  by  mobility,  wireless 
communication is much more vulnerable to attacks than wired networks. Dependence 
on  cooperative  communication  behavior  as  well  as  the  presence  of  possibly  highly 
dynamic  network  topology  make  MANETs  more  vulnerable  than  normal  wireless 
networks with base stations. Traditional security mechanisms such as firewalls are not 
sufficient to mitigate these additional risks. 
A challenging problem in MANETs is the security of the ad hoc routing protocol. 
Routing  in  a  wired  network  is  made  secure  by  a  variety  of  mechanisms,  including 
using a few trusted routers, hardening these routers, and deploying rigorous intrusion 
detection systems (IDS) on the router platforms. However, ad hoc routing protocols 
allow,  and  in  fact  require,  every  node  in  the  network  to  cooperate  in  establishing 
routing  information  within  the  nodes  of  the  network.  Such  an  approach  enables 
mobile  nodes  to  communicate  with  each  other  without  a  pre-existing  infrastructure. 
Nevertheless,  this  dynamic  and  cooperative  behavior  also  makes  them  particularly 
vulnerable  to  attacks.  A  malicious  node  can  fabricate  packets,  intercept  and  modify 
packets  going  through  it,  or  refuse  to  forward  packets.  Even  with  end-to-end 
cryptographic protection, a malicious node can drop packets that route through it or 
can manipulate the route a packet takes by supplying false routing information. 
This paper introduces a specification-based intrusion-detection model for detecting 
attacks on routing protocols in MANETs. Intrusion detection is a viable approach to 
enhancing  the  security  of  existing  computers  and  networks.  Briefly,  an  intrusion 
detection system monitors activity in a system or network in order to identify ongoing 
attacks.  Intrusion  detection  techniques  can  be  classified  into  anomaly  detection, 
signature-based  detection,  and  specification-based  detection.  In  anomaly  detection 
[26], activities that deviate from the normal behavior profiles, usually statistical, are 
flagged  as  attacks.  Signature-based  detection  [24,  25]  matches  current  activity  of  a 
system against a set of attack signatures. Specification-based detection [20] identifies 
system operations that are different from the correct behavior model.  
Our specification-based approach analyzes the protocol specification (e.g., RFC) of 
an  ad  hoc  routing  protocol  to  establish  a  finite-state-automata  (FSA)  model  that 
captures  the  correct  behavior  of  nodes  supporting  the  protocol.    Then,  we  extract 
constraints on the behavior of nodes from the FSA model. Thus, our approach reduces 
the intrusion detection problem to monitoring of the individual nodes for violation of 
the  constraints.  Such  monitoring  can  be  performed  in  a  decentralized  fashion  by 
cooperative distributed detectors,  which allows  for scalability. In addition, since the 
constraints are developed based on the correct behavior, our approach can detect both 
known and unknown attacks. 
We  choose  OLSR  as  the  routing  protocol  for  the  current  investigation.  In 
particular, we focus on the correctness of the route control traffic generated by nodes. 
The  intrusion  detection  model  consists  of  four  constraints  on  the  control  traffic 
332 
C.H. Tseng et al. 
between neighboring nodes, i.e., on the Hello and Topology Control (TC) messages 
of OLSR that are assumed here to be the only messages used to establish the routing 
topology in OLSR. We analyze the model and experiment it in a simulated MANET 
environment to investigate its detection capability and false positive rate. 
In Section 2, we provide an overview of OLSR and analyze vulnerabilities related 
to  the  Hello  and  TC  message  traffic,  including  a  description  of  possible  attacks  on 
OLSR  and  their  impact.  In  Section  3,  we  describe  the  FSA  model  of  OLSR,  and 
discuss  the  behavioral  constraints  for  detecting  attacks.  In  addition,  we  discuss 
temporary inconsistency issues and limitations. In  Section  4,  we present analysis of 
the  model  illustrating  that  the  constraints  can  ensure  the  integrity  of  the  OLSR 
network. In Section 5, we discuss implementation of the constraints, example attacks, 
and simulation results of the model in the GlomoSim simulation platform. Finally, in 
Section 6, we present a brief survey of the related literature, and conclude in Section 7. 
2   OLSR Vulnerability Analysis 
In  this  section,  we  provide  an  overview  of  the  OLSR  protocol  and  discuss  its 
vulnerabilities. 
2.1   Overview of OLSR  
OLSR  is  a  proactive  table-driven  link-state  routing  protocol  developed  by  INRIA 
[15]. The protocol is a refinement of traditional link state protocols employed in wired 
networks;  in  the  latter,  the  local  link  state  information  is  disseminated  within  the 
network using broadcast techniques. This flooding effect  will consume considerable 
bandwidth  if  directly  employed  in  the  MANET  domain,  and  therefore,  OLSR  is 
designed to optimally disseminate the local link state information around the network 
using a dynamically established sub-network of multipoint relay (MPR) nodes; these 
are selected from the existing network of nodes in the MANET by the protocol.  
OLSR employs two main control messages: Hello messages and Topology Control 
(TC) messages to disseminate link state information. These messages are periodically 
broadcast in the MANET in order to independently establish the routing tables at each 
node.  In  OLSR,  only  nodes  that  have  bidirectional  (symmetric)  links  between  them 
can be neighbors. Hello messages contain neighbor lists to allow nodes to exchange 
neighbor information, and set up their 1-hop and 2-hop neighbor lists; these are used 
to calculate multi-point relay (MPR) sets.  
An  MPR  set  is  a  1-hop  neighbor  subset  of  a  node  to  be  used  to  reach  all  2-hop 
neighbors  of  the  node.  OLSR  uses  MPR  sets  to  minimize  flooding  of  the  periodic 
control  messages.  Nodes  use  Hello  messages  to  announce  their  MPR  sets  together 
with  1-hop  neighbor  sets.  When  a  node  hears  its  neighbors  choosing  it  as  an  MPR 
node, those neighbors are MPR selectors of the node, and the node will announce its 
MPR selector set to the network by broadcasting TC messages.  
TC  messages  are  forwarded by  MPR  nodes  to  all  nodes of  the  network.  When  a 
node  receives  a  TC  message,  it  will  note  that  the  originator  of  TC  message  is  the 
“last-hop”  toward  all  MPR  selectors  listed  in  the  TC  message.  The  links  are  then 
added into the topology table. Using its topology table, the node can set up its routing 
A Specification-Based Intrusion Detection Model for OLSR 
333 
table by recursively traversing the (last-hop to node, node) pairs in its topology table 
(see Figure 1) and picking up the shortest path with the minimal hop count. Therefore, 
each node of the network can reach all other nodes. 
Destination 
Last Hop 
Last Hop of “Last Hop”  
Source   
Fig. 1. Generation of a route from Topology Table 
2.2   OLSR Vulnerability and Attacks 
Several studies have been done on the vulnerabilities of OLSR [21,27]. In general, an 
attacker can fabricate packets, intercept and modify packets going through it, or refuse 
to forward packets, causing compromises of confidentiality, integrity, and availability. 
In this paper, we only focus on those vulnerabilities that could compromise the integrity 
of  the  network,  i.e.,  the  routing  tables  in  the  nodes.  In  OLSR,  each  node  injects 
topological information into the network through HELLO messages and TC messages. 
Therefore, a malicious node can inject invalid HELLO and TC messages to disrupt the 
network integrity, causing packets to route incorrectly or to the advantage of the attacks.  
Table 1. Critical fields in Hello and TC Messages 
Message Type 
Hello Message 
TC Message 
Critical fields 
1-hop neighbor list 
MPR sets 
MPR selectors 
Advertised neighbor sequence number (ANSN) 
Displays  the  critical  fields  in  Hello  message  and  TC  message  on  which  the 
computation of the routing table depends. The 1-hop neighbor list in a Hello message 
is used by its neighbor to create the 2-hop neighbor list and MPR set.  The MPR set in 
a  Hello  Message  denotes  the  MPR  set  of  the  sender.    The  MPR  selectors  in  TC 
messages are used in calculating routing tables at nodes receiving the messages.   
Thus, an attack can: 
1.  provide an incorrect 1-hop neighbor list in a Hello message 
2.  provide an incorrect MPR set in a Hello message 
3.  provide incorrect MPR selectors in a TC message 
4.  modify the MPR selectors before it forwards a TC message 
An  attacker  can  launch  more  sophisticated  attacks  such  as  denial-of-service  or 