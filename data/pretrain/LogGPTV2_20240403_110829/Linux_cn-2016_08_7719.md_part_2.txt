```
# wget http://localhost/index.html
# ls -lZ /websrv/sites/gabriel/public_html/index.html
```
![](/data/attachment/album/201608/26/073625tljelkssveasnigv.png)
*被标记为 default\_t SELinux 类型*
和之前的例子一样，你可以用以下命令验证这是不是 SELinux 相关的问题：
```
# cat /var/log/audit/audit.log | grep AVC | tail -1
```
![](/data/attachment/album/201608/26/073626ao3v1wilyjnryo3l.png)
*检查日志确定是不是 SELinux 的问题*
要将 `/websrv/sites/gabriel/public_html` 整个目录内容标记为 `httpd_sys_content_t`，执行：
```
# semanage fcontext -a -t httpd_sys_content_t "/websrv/sites/gabriel/public_html(/.*)?"
```
上面这个命令会赋予 Apache 对那个目录以及其内容的读取权限。
最后，要应用这条策略（并让更改的标记立即生效），执行：
```
# restorecon -R -v /websrv/sites/gabriel/public_html
```
现在你应该可以访问这个目录了：
```
# wget http://localhost/index.html
```
![](/data/attachment/album/201608/26/073626opngu2uaa4anatjb.png)
*访问 Apache 目录*
要获取关于 SELinux 的更多信息，参阅 Fedora 22 中的 [SELinux 用户及管理员指南](https://docs.fedoraproject.org/en-US/Fedora/22/html/SELinux_Users_and_Administrators_Guide/index.html)。
### AppArmor 介绍以及如何在 OpenSUSE 和 Ubuntu 上使用它
AppArmor 的操作是基于写在纯文本文件中的规则定义，该文件中含有允许权限和访问控制规则。安全配置文件用来限制应用程序如何与系统中的进程和文件进行交互。
系统初始就提供了一系列的配置文件，但其它的也可以由应用程序在安装的时候设置或由系统管理员手动设置。
像 SELinux 一样，AppArmor 以两种模式运行。在  强制   （    enforce    ）  模式下，应用被赋予它们运行所需要的最小权限，但在  抱怨   （    complain    ）  模式下 AppArmor 允许一个应用执行受限的操作并将操作造成的“抱怨”记录到日志里（`/var/log/kern.log`，`/var/log/audit/audit.log`，和其它放在 `/var/log/apparmor` 中的日志）。
日志中会显示配置文件在强制模式下运行时会产生错误的记录，它们中带有 `audit` 这个词。因此，你可以在 AppArmor 的  强制   （    enforce    ）  模式下运行之前，先在  抱怨   （    complain    ）  模式下尝试运行一个应用并调整它的行为。
可以用这个命令显示 AppArmor 的当前状态：
```
$ sudo apparmor_status
```
![](/data/attachment/album/201608/26/073627hzhvxq7rqbbcljh0.png)
*查看 AppArmor 的状态*
上面的图片指明配置 `/sbin/dhclient`，`/usr/sbin/`，和 `/usr/sbin/tcpdump` 等处在  强制   （    enforce    ）  模式下（在 Ubuntu 下默认就是这样的）。
因为不是所有的应用都包含相关的 AppArmor 配置，apparmor-profiles 包给其它没有提供限制的包提供了配置。默认它们配置在  抱怨   （    complain    ）  模式下运行，以便系统管理员能够测试并选择一个所需要的配置。
我们将会利用 apparmor-profiles，因为写一份我们自己的配置已经超出了 LFCS [认证](http://www.tecmint.com/sed-command-to-create-edit-and-manipulate-files-in-linux/)的范围了。但是，由于配置都是纯文本文件，你可以查看并学习它们，为以后创建自己的配置做准备。
AppArmor 配置保存在 `/etc/apparmor.d` 中。让我们来看看这个文件夹在安装 apparmor-profiles 之前和之后有什么不同：
```
$ ls /etc/apparmor.d
```
![](/data/attachment/album/201608/26/073627iauc5udkc1acxcaa.png)
*查看 AppArmor 文件夹内容*
如果你再次执行 `sudo apparmor_status`，你会在  抱怨   （    complain    ）  模式看到更长的配置文件列表。你现在可以执行下列操作。
将当前在  强制   （    enforce    ）  模式下的配置文件切换到  抱怨   （    complain    ）  模式：
```
$ sudo aa-complain /path/to/file
```
以及相反的操作（抱怨 –> 强制）：
```
$ sudo aa-enforce /path/to/file
```
上面这些例子是允许使用通配符的。举个例子：
```
$ sudo aa-complain /etc/apparmor.d/*
```
会将 `/etc/apparmor.d` 中的所有配置文件设置为  抱怨   （    complain    ）  模式，反之
```
$ sudo aa-enforce /etc/apparmor.d/*
```
会将所有配置文件设置为  强制   （    enforce    ）  模式。
要完全禁用一个配置，在 `/etc/apparmor.d/disabled` 目录中创建一个符号链接：
```
$ sudo ln -s /etc/apparmor.d/profile.name /etc/apparmor.d/disable/
```
要获取关于 AppArmor 的更多信息，参阅[官方的 AppArmor wiki](http://wiki.apparmor.net/index.php/Main_Page) 以及 [Ubuntu 提供的](https://help.ubuntu.com/community/AppArmor)文档。
### 总结
在这篇文章中我们学习了一些 SELinux 和 AppArmor 这两个著名的强制访问控制系统的基本知识。什么时候使用两者中的一个或是另一个？为了避免提高难度，你可能需要考虑专注于你选择的发行版自带的那一个。不管怎样，它们会帮助你限制进程和系统资源的访问，以提高你服务器的安全性。
关于本文你有任何的问题，评论，或建议，欢迎在下方发表。不要犹豫，让我们知道你是否有疑问或评论。
---
via: 
作者：[Gabriel Cánepa](http://www.tecmint.com/author/gacanepa/) 译者：[alim0x](https://github.com/alim0x) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出