# 云产品安全攻防探索

## 关于我
- **工作**：阿里云-云平台安全
- **团队**：n0tr00t (http://www.n0tr00t.com/)
- **ID**：Demon (微博：Demon写Demo)
- **跨界兴趣**：摇滚乐、编程、安全

## 第一部分：分类和架构

### 1. 云的基础架构
- **种类繁多**：基础服务大同小异，但每家云厂商都有其特色云服务。
- **资源开放**：按需付费和资源开放意味着更多的可控点，但也增加了安全风险。
- **木桶原理**：任何弱点都可能成为致命点。

### 2. 云产品的通用架构
- **物理集群**
- **服务器**
- **Portal**
- **运维管控**
- **实例**
- **虚拟机**
- **用户管理**
- **监控系统**
- **计费系统**
- **资源管理**
- **运维管理**
- **容灾系统**
- **网关系统**
- **逻辑服务**
- **控制器**
- **调度系统**
- **生产系统**
- **存储系统**
- **底层云组件**
- **API**

### 3. 云产品的安全基石 - 沙箱（SandBox）
- **沙箱结构**：决定了产品的持久稳固性。
- **避免root权限**：使用Linux capability。
- **多层隔离**：
  - **脚本层**：禁用JSM、PHP中的危险函数。
  - **容器层**：Docker、Linux namespace、cgroup。
  - **用户权限层**：遵循最小权限原则。

## 第二部分：隐匿在结界内的隐患

### 4. 结界的划分
- **结界外**：
  - 控制台（Portal）：用户可管理产品。
  - API服务：通过API访问操作实例，方便自动化管理。
  - 实例本身：如连接虚拟服务器、Redis、MongoDB等。
- **暗物质**：
  - 未知模块：如额外的存储系统。
  - 游离在架构之外的服务：难以发现。
- **结界内**：
  - 业务逻辑服务：负责业务逻辑处理。
  - 调度服务：负责调配资源，控制链路。
  - 生产系统：负责生成或释放实例。
  - 管控系统：用于管理和监控实例。
  - 其他：如日志组件、任务下发模块等。

### 5. 过度松耦合导致的隐患
- **十人传话游戏**：多层模块分离，安全职责不明。

### 6. 攻击中间件服务
- **开源消息中间件**：Kafka、ActiveMQ、RabbitMQ、OpenJMS等。
- **分布式服务框架**：Dubbo、Zookeeper、TAF等。
- **攻击方式**：
  - Load eval Mbean via “getMBeansFromURL” (http://www.n0tr00t.com/2015/04/16/JMX-RMI-Exploit.html)
  - Java反序列化漏洞 (http://blog.nsfocus.net/java-deserialization-vulnerability-overlooked-mass-destruction/)
  - XML实体注入、命令注入、未授权调用服务。

### 7. 使用Java Message Exploitation Tool (JMET)
- **支持的中间件**：Apache ActiveMQ, Redhat/Apache HornetQ, Oracle OpenMQ, IBM WebSphereMQ, Pivotal RabbitMQ, IIT Software SwiftMQ, Apache ActiveMQ Artemis, Apache QPID JMS, Apache QPID Client。
- **项目地址**：https://github.com/matthiaskaiser/jmet
- **使用方法**：
  ```sh
  java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -Y xterm 127.0.0.1 61616
  ```

### 8. ActiveMQ CVE-2016-3088
- **示例请求**：
  ```http
  MOVE /fileserver/shell.txt HTTP/1.1
  Destination: file:///usr/local/apache-activemq-5.7.0/webapps/shell.jsp
  Host: x.x.x.x
  PUT /fileserver/shell.txt HTTP/1.1
  Host: x.x.x.x
  Content-Length: 16
  ```

### 9. 运维管控系统
- **功能**：
  - 管理控制实例
  - 部署发布系统
  - 状态监控系统
  - 统一配置管理系统
- **安全隐患**：
  - ACL绕过、API未授权调用
  - 通过XSS漏洞打入到管控系统执行任务
  - 开源管控系统的漏洞（Hue、Splunk、Cacti、Jenkins、Zabbix、Zenoss、Elasticsearch）

### 10. 内部服务未授权问题
- **常见问题**：
  - Redis未授权访问
  - MongoDB未授权访问
  - Rsync未授权访问
  - Memcache未授权访问

## 第三部分：以点破面-Hacking

### 11. 云服务
- **开源服务**：
  - **脆弱点**：
    - 已知的安全问题
    - 配置和权限设置不严格
    - 网络边界和部署存在安全问题
  - **案例**：
    - FFmpeg SSRF & 任意文件读取
    - ImageMagick RCE
    - Linux本地提权
    - Redis执行Lua脚本枚举服务器文件
    - MySQL、MSSQL危险函数或存储扩展未禁用
    - （MSSQL、MongoDB、Postgres、CouchDB）SSRF
    - 云服务控制系统(接口)暴露在公网

- **自研服务**：
  - 引用《三体II 黑暗森林》：“宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，任何暴露自己坐标的生物都将很快被消灭。”
  - **类比**：
    - 宇宙 = 网络
    - 文明 = 系统(服务)

### 12. 隐藏在云环境下的脆弱目标
- **服务器分布**：
  - server1, server2, server3, ..., serverN
- **攻击方式**：
  - 从进程、网络流量、端口中找寻agent的相关信息
  - 定位agent的坐标
  - 对agent实施安全测试
  - 对agent坐标同网络段下的系统进行测试

### 13. 案例
- **某云厂商RPC组件任意代码执行**

### 14. 利用产品自身功能收集内网IP坐标信息
- **负载均衡的健康检查机器**
- **云安全扫描**
- **云监控的请求日志**
- **浏览器测试类产品的请求日志**

### 15. 借用实例网络环境访问内部组件
- **回源功能（CDN、云WAF）**
- **域名解析+组合服务**
- **网络代理、回调（API网关、云通信、移动端网络接入服务）**
- **消息推送（移动消息推送、视频直播流推送）**

### 16. 文件处理属性相关产品
- **文件读取、解压软链接文件**
- **命令执行、沙箱绕过**
- **SSRF**
- **Python沙箱绕过**

### 17. 目标禁止外连怎么办？
- **解决方案**：
  - 通过私有网络环境向实例透出数据
  - 攻击者连接实例读取数据

### 18. 在内部能做什么
- **流量监控**
- **寻找特权AK**
- **批量生产实例**
- **控制集群**

## 总结：如何进行黑客攻击
- **阅读公开文档、架构文档、操作手册**：了解产品功能和架构模块。
- **研究实例的网络环境与组件间调用关系**。
- **寻找组件中可能使用的开源组件列表**。
- **结合功能和支持的协议分析风险点**。
- **大量测试，找到漏洞**。

感谢阅读！

[ Demon@KCon ]