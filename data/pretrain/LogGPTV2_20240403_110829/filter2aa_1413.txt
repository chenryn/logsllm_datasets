CrossC2基本满足了我对linux C2的需求
最近用碎片时间学习和使用了一下CrossC2，可以看出是一线小伙伴结合实战经验写出来的实用性工
具。因此鼓励大家使用和反馈BUG给作者。
1. 什么是CrossC2
CrossC2是一款扩展CobaltStrike在Linux、Android、IOS等系统上使用的闭源免费工具，作者编写了较
为详细的使用文档，可以很快上手。详情请阅读：https://gloxec.github.io/CrossC2/zh_cn/
CobaltStrike: 暂时仅支持3.14最后一个版本(bug fixs), 以及4.x版本(详见cs4.1分支).
Linux: 特别老旧的系统可以选择cna中的"Linux-GLIBC"选项（2010年左右）
MacOS: 新系统仅支持64位程序
iOS: sandbox
Embedded: only *nix
⍻ : 加载还在完善中
2. 注意事项
CrossC2可执行文件windows版本有BUG，请使用Linux版本和Mac版本。
一定要注意作者master分支支持的是CS3.14，由于大部分同学可能使用的是CS4.1，因此一定要切
换到CS4.1分支去下载CrossC2
经和作者确认CS4.1分支只有基础功能，其他类似frp等插件适配还需要继续开发，CS3.14功能是完
善的。
在c2profile配置中所有数据的编码只能使用base64，其他方式皆不可使用
在c2profile配置中，关于get和post的uri只能是用单个。
作者提供的插件包中，利用CS自带的文件浏览和进程浏览有点问题，需要修改jar适配
作者给的c2profile.c示例文件中缺少了查找字符串函数的实现
3.使用感受
我只使用了简单的功能和自定义流量，总体体验不错，满足我C2基本要求：命令、文件、隧道。
char *find_payload(char *rawData, long long rawData_len, char *start, char 
*end, long long *payload_len) { 
    rawData = strstr(rawData, start) + strlen(start);
    //*payload_len = xx; //返回找到的payload长度
    *payload_len = strlen(rawData) - strlen(strstr(rawData, end));
    //return payload; //返回找到的payload
    char *payload = (char *)calloc(*payload_len ,sizeof(char));
    memcpy(payload, rawData, *payload_len);
    return payload;
}