### Title: A New Era of One-Click Attacks: How to Break Install-Less Apps

**Abstract:**

As apps become increasingly large, cumbersome, and resource-intensive, vendors are seeking ways to streamline the user experience, allowing users to access content and complete tasks with just a few clicks. Install-less apps, which run without requiring installation but offer a user experience similar to native apps, have emerged as a promising solution. However, these apps present new security challenges, as they share similar attack surfaces despite their different implementations.

In this presentation, we will explore novel attack methods targeting install-less apps and detail multiple vulnerabilities discovered in Apple App Clips, Google Progressive Web Apps (PWA), Google Instant Apps, and QuickApps. These vulnerabilities can be exploited to achieve "one-click" attacks, compromising user data, enabling code execution, and facilitating spoofing.

We will begin by sharing key observations on the structure of install-less apps and providing insights into the entry points for exploit chains, such as QR codes, NFC, and web links. We will then delve into the core components of these apps, including data interchange, privilege control, and storage isolation, and demonstrate how these components can be exploited to steal sensitive user data, execute arbitrary code, and perform spoofing attacks.

These critical vulnerabilities and attack vectors affect a vast number of devices worldwide, impacting at least 1 billion users across both Android and iOS platforms. To address these issues, we will also provide mitigation techniques and tips for developers and users, aiming to promote a more secure and robust development community.

**Key Points:**
- **Introduction to Install-Less Apps:** Overview of the benefits and challenges.
- **Attack Surfaces and Vectors:** Detailed exploration of vulnerabilities in Apple App Clips, Google PWA, Google Instant Apps, and QuickApps.
- **Exploit Methods:** Techniques for exploiting QR codes, NFC, and web links.
- **Core Component Analysis:** In-depth examination of data interchange, privilege control, and storage isolation.
- **Mitigation Strategies:** Practical advice for developers and users to enhance security.

By understanding these vulnerabilities and implementing effective mitigations, we can help ensure that the convenience of install-less apps does not come at the cost of security.