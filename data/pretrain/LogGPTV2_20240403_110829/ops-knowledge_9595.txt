User: Playing around with project ideas that I might actually use, figured I might try to write my own simple version of Bit9 Parity, in either C# or Python. My question is what is the best way to go about doing this. I've googled .Net functionality for prevent processes from executing, but I havn't really found what I'm looking for. What I'd like to do is monitory the system memory as a whole, and deny any process or application from starting unless specifically identified in a list. ProcessWatcher caught my eye, but is that not for a specific process ID. How do I block ALL other processes from starting? Is this possible in .Net? What about python?
Assistant: How do I block ALL other processes from starting? 

Deep, mysterious OS API magic.  After all, you're interfering with how the OS works.  You must, therefore patch or hook into the OS itself.

Is this possible in .Net? What about python?

It doesn't involve time-travel, anti-gravity or perpetual motion.  It can be done.
It's a matter of figuring out (1) which OS API calls are required to put your new hook into the OS, and (2) implementing a call from the OS to your code.

Is really hard.
Is really easy.