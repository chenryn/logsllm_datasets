general, is to disable prerequisites for displaying such con-
tent in web browsers. This can involve disabling image
loading, blocking Flash Player and similar browser plugins,
or blocking JavaScript code used by advertising networks
through widely available browser security extensions [25].
Similarly, Web proxies could be deployed to ﬁlter out trick
banners before they could be displayed in the browser [3, 4].
While these solutions are eﬀective at blocking trick banners,
they also signiﬁcantly impair the user’s browsing experience,
or even render many websites nonfunctional, as the World
Wide Web today makes extensive use of multimedia and dy-
namic content. Moreover, deploying HTTP proxies might
not be accessible to the average Internet user, or might not
be a viable option on more restricted mobile devices.
An alternative approach to the problem is using special-
ized ad ﬁltering software that is often included as part of
commercial antivirus suites, or designed as open-source web
browser extensions such as the popular Adblock Plus [1]. On
the one hand, these solutions oﬀer the ability to selectively
block oﬀending content and therefore provide improved us-
ability over the previously discussed solutions. On the other
hand, they typically detect links to advertisements by con-
sulting various blacklists and whitelists that must be con-
tinuously maintained and updated, which often involves sig-
niﬁcant manual labor. TrueClick instead performs trick
banner detection based on the visual characteristics of such
content in a completely automated manner and, thus, is able
to detect trick banners that have not previously been clas-
siﬁed into blacklists or whitelists.
Security Uses of Visual Features. Another body of
work applies image comparison techniques and visual sim-
ilarity metrics to diﬀerent Internet security problems. For
instance, various groups have investigated phishing site de-
tection techniques based on visually comparing suspected
phishing pages to their legitimate counterparts [9, 33, 34,
49], and Gargiulo and Sansone [13] use image processing
to extract visual and text features from spam emails.
In
contrast, we identify visual features speciﬁcally tailored to
detect trick banners and implement them in TrueClick.
Doppelganger [43] explores the results of diﬀerent cookie
policies on websites by transparently mirroring the user’s
web session to create two conceptual browser windows, one
with cookies enabled and one without. They then com-
pare the two to investigate the impact of accepting cookies
from a given website on the content displayed. Likewise,
TrueClick utilizes a detection feature based on comparing
multiple views of a webpage, as we explain in Section 5.1.
Securely Isolating Ads and Applications. A large
number of studies aim to protect sensitive web content from
potentially malicious third-party ads by sandboxing the ads
displayed on the page. Several projects use language con-
tainment and static policy enforcement to restrict JavaScript
features used by ad networks [2, 11, 19, 23, 31], while others
perform dynamic policy enforcement [15, 35, 46]. Likewise,
researchers have investigated the ad ecosystem on mobile
devices and proposed approaches that aim to isolate third-
party ad libraries from mobile applications [16, 29, 38, 44].
Other approaches to create general secure mashups of ad-
vertisements and applications include secure browser archi-
tectures and browser-based operating systems [17, 39, 48].
In another set of studies, researchers explore the privacy
issues around Internet advertising, and propose techniques
to deliver targeted ads while limiting the exposure of privacy-
sensitive user information to ad networks [20, 21, 28, 40, 47].
These studies have the common goal of protecting applica-
(cid:23)(cid:24)(cid:27)
Step 1
Step 2
Figure 2: The image extraction process illustrated on a real trick banner. Step 1 detects four superﬂuous
sub-regions on the banner, Step 2 then corrects this error, and matches the fragments to the actual image.
tions against uncontrolled and potentially malicious ad code.
While the isolation they provide is clearly essential for secure
deployment of online ads, the measures they employ do not
provide protection in a scenario in which Internet users are
deceived and misled to click on a trick banner that links to
a malicious destination. In contrast, TrueClick addresses
this problem by analyzing the ad banners on a web page and
guiding users to identify the genuine download link among
a set of trick banners.
4.
IMAGE EXTRACTION
Before we can compute any features on potential trick
banner images, we ﬁrst need to identify and extract all of
the image regions on a webpage, which are subsequently fed
to our trick banner classiﬁcation system. Note that simply
searching for HTML image tags in the page source is not
suﬃcient to perform this task correctly, because some of the
banners may be loaded dynamically by JavaScript, or they
may come in non-image formats like Flash ﬁles or regular
links stylized to look like buttons. In this section, we brieﬂy
explain the details of this process.
The image extraction technique we propose in this work is
a two-step process. Initially, we leverage well-known image
processing techniques designed for this task, which follow the
common pipeline of edge detection, region ﬁlling and con-
nected component analysis [14], and banner region identiﬁ-
cation on the webpage. However, the enormous variability
in webpage content often does not allow a single generic im-
age processing pipeline to perform perfectly in all cases, and
our early experiments indicate that extracting image regions
solely through image processing usually falls short. For ex-
ample, when faced with a trick banner that displays several
button lookalikes in a single image ﬁle, the aforementioned
image processing pipeline yields multiple detection results
for each disconnected component in the image. (See the ban-
ner presented in Figure 2 for a real example.) Similarly, more
sophisticated visual designs could result in a large number of
superﬂuous detections of small sub-regions on a single image
(or, conversely, missed portions of banners), which would
later result in unnecessary detection feature computations
or inaccurate results. Although image processing methods
that are customized for each speciﬁc website can be devised
to improve extraction accuracy and performance, such an
approach would be time and eﬀort-intensive, without any
clear indication as to how the extraction scheme could be
adapted to the future banner designs.
Instead, based on the observation that while the discussed
image processing techniques are imperfect, they rarely com-
pletely miss entire banner regions, we employ a second step
to correct for partially detected and fragmented banners.
This involves collecting and temporarily caching all of the
actual image ﬁles requested from the web server for a given
webpage to form a small image database. Next, the pos-
sibly fragmented banners extracted using the initial image
processing step are matched to the images in the database.
This matching is performed using the SURF (Speeded-Up
Robust Features) feature detector and descriptor, which is
widely used for object detection and recognition in the com-
puter vision community [6]. Our experiments show that
even when a signiﬁcant portion of the banner is fragmented,
SURF is able to match the banner to the correct image in
the database. When a match is found, or in other words
the extracted region is detected as a fragment of a larger
image, the extracted banner image is simply replaced with
the correct image from the database.
This process is illustrated in Figure 2.
In Step 1, the
image processing pipeline incorrectly identiﬁes four separate
regions in the banner. Later, in Step 2, these four extracted
regions are all matched to the actual banner image stored
in the database (and are replaced by it), resulting in an
accurate banner extraction.
We must point out that even in the presence of the image
database we build in Step 2 of this process, the banners
extracted through image processing in Step 1 still provide
valuable information for detecting trick banners; speciﬁcally,
those that come in non-image formats. For example, in our
experiments we observed static banners delivered in Flash
ﬁles, or as regular links in HTML iframes stylized to look like
buttons. While image processing can identify and extract
such non-traditional banners, attempts to match them to
image ﬁles in Step 2 would fail since there does not exist
a corresponding image ﬁle on the webpage. Therefore, in
cases where we cannot ﬁnd any successful match in Step 2,
we do not discard the regions extracted in Step 1 but instead
input them to the classiﬁer as-is.
5. TRICK BANNER CLASSIFICATION
Once possible trick banner regions have been identiﬁed
on the webpage, ﬁve visual features are extracted to help
classify each region as either a trick banner or a genuine
download link. These features include a) image color, b) im-
age size, c) image placement, d) presence of animation, and
e) image diﬀerences between consecutive page loads. In the
remainder of this section, we provide details on each of these
features, explain why they are useful for distinguishing trick
banners from genuine download links, and then present the
classiﬁcation approach we adopt in this work.
(cid:23)(cid:24)(cid:28)
Figure 3: Sample webpages that illustrate that EMD scores vary with the color theme of the websites, and
should only be compared after normalization. The correct banners are marked with dashed boxes.
5.1 Features
Color. Trick banners are often not designed by the site
owners, and are usually served by third-party advertising
networks just like regular ad banners. Consequently, the de-
signers of trick banners do not know the exact website their
banners are going to be displayed on, which leads them to
follow common webpage theme speciﬁcations in their visual
designs. As a result, trick banners often do not ﬁt the gen-
eral color theme of the website, but instead display distinc-
tive color signatures. In contrast, genuine download buttons
usually cohere to the overall website colors. This distinction
suggests that banners can be classiﬁed based on their color
similarity to that of the overall website.
This classiﬁcation requires ﬁrst a description of the colors
inside the banner region. Experiments indicate both gen-
uine and trick banners can be quite complex in terms of the
color patterns they contain. Most banners are composed of
a multitude of colors, highlights, and gradients, and also in-
clude other small images. Color histograms are ideal for the
purposes of capturing the global color features of the banner.
Histograms are constructed simply by binning the color of
each pixel in the banner region. The histograms are ﬁnally
normalized by their total mass such that they are invariant
of the number of pixels in the banner region.
Classiﬁcation based on color histograms also requires a
method to compute the similarity between histogram pairs.
In our work, we compute color histogram similarity using the
Earth Mover’s Distance (EMD) [41], which is widely used in
content-based image retrieval applications. In short, EMD
is a metric between two distributions (of equal total mass)
that measures the minimal cost incurred to transform one
distribution to the other. The comparison is made between
each banner and the whole page histograms. We made our
computations on the RGB channel.
Note that the EMD score of a banner is computed with
respect to the color histogram of the overall webpage and,
thus, this score provides a measure relative to the other
banners within the webpage. For instance, on the left-side
webpage in Figure 3, the EMD score of the correct ban-
ner (marked with dashed lines) is 17443.67, and the trick
banners on the same webpage have higher scores than the
correct banner. However, we cannot generalize this outcome
and consider scores higher than 17443.67 obtained from dif-
ferent pages to indicate a trick banner. To illustrate, the
webpage on the right side of Figure 3 has a correct banner
that has an EMD score of 19773.83, and while this value is
still lower than the EMD scores of the trick banners on the
same webpage, it is higher than 17443.67. Therefore, a nor-
malization is required so that the EMD scores of all banners
in training and classiﬁcation are comparable. Mapping the
EMD scores of banners in each website to a ﬁxed interval
such as [0, 1] is suﬃcient for this purpose.
Size. Websites often reserve ﬁxed sections in their visual
layouts where advertisements can be displayed. The sizes
of these reserved spaces are not strictly controlled. How-
ever, in accordance with the Interactive Advertising Bureau
online advertisement size guidelines [26], these sections are
usually large, horizontal, or vertical rectangular regions in
which standard web banners that advertising networks serve
can ﬁt. In contrast, genuine links on a ﬁle sharing website
usually take the form of a single, relatively small image that
serves as a download button. Consequently, in order not
to throw oﬀ their disguise by displaying unusually large fake
buttons that contrast with the rest of the page’s style, many
trick banners resort to tricks such as using large empty bor-
ders around a smaller fake button image, or including two or
more button images on a single banner as if they were sep-
arate clickable entities. Thus, image size is a strong feature
for distinguishing trick banners from genuine buttons.
We measure the size of these images in the x and y dimen-
sions in the number of pixels. In order to deal with varying
webpage sizes, we ﬁrst normalize the numbers to [0, 1] with
respect to the absolute size of the enclosing webpage.
Placement. Navigation links on a website, including the
genuine download buttons, are tightly integrated with the
rest of the site’s content. In contrast, advertisement ban-
ners are often laid out separately in reserved spaces in order
not to interfere with the coherence of the website’s interface
and content. They are usually placed at the page header,
footer, sidebars, or are otherwise isolated from the actual
page content. Therefore, the position of the banner can be
used as an indicator for trick banners. We use the x and y
(cid:23)(cid:25)(cid:19)
positions of the geometric center of the banner as the place-
ment feature. Similarly to the size feature, we ﬁrst normalize
the values to [0, 1].
Animation. Another signiﬁcant indicator for trick ban-
ners is the use of animations that are employed to draw the
attention of the user. Animated banners rapidly display a
sequence of images, typically in the form of GIF images.
Most genuine download links do not contain animations. In
fact, during our study we didn’t encounter any genuine links
that contained animations.
Animation is a binary feature, indicating whether or not
the banner is animated. The presence of animation is de-
tected by ﬁrst checking whether the banner image format
allows animations. If it does, the number of frames embed-
ded in the ﬁle is used to decide the presence of animation.
This animation check is performed only on the images that
were selected from the database because it is not possible to
reach fragmented image information unless it matches with
a cached image.
Visual Diﬀerences in Multiple Page Views. A com-
mon method for deploying advertisements on a page for a
website owner is to utilize advertising networks, which serve
a diﬀerent ad banner every time a user visits the page. Sim-
ilarly, large content publishers may use their own advertis-
ing infrastructures that rotate the banners displayed on the
page each time the page is visited. Consequently, the vi-
sual contents of banner spaces on webpages tend to be very
dynamic, often changing every time the page is loaded or
refreshed in the browser. In contrast, the user interfaces of
webpages are often comprised of a ﬁxed set of images that