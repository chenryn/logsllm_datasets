headers into a server response.
Memory Corruption
Memory corruption is a technique used to expose a vulnerability by causing
codetoperformsometypeofunusualorunexpectedbehaviour.Theeffectis
similar to a buffer overflow where memory is exposed when it shouldn’t be.
Open Redirect
Anopenredirectoccurswhenanapplicationtakesaparameterandredirects
a user to that parameter value without any conducting any validation on the
value.
Glossary 187
Penetration Testing
A software attack on a computer system that looks for security weaknesses,
potentially gaining access to the computer’s features and data. These can
include legitimate, or company endorsed, tests or illegitimate tests for ne-
farious purposes.
Researchers
Also known as White Hat Hackers. Anyone who has investigated a poten-
tial security issue in some form of technology, including academic security
researchers, software engineers, system administrators, and even casual
technologists.
Response Team
A team of individuals who are responsible for addressing security issues
discovered in a product or service. Depending on the circumstances, this
mightbeaformalresponseteamfromanorganization,agroupofvolunteers
on an open source project, or an independent panel of volunteers.
Responsible Disclosure
Describingavulnerabilitywhileallowingaresponseteamanadequateperiod
of time to address the vulnerability before making the vulnerability public.
Vulnerability
Asoftwarebugthatwouldallowanattackertoperformanactioninviolation
of an expressed security policy. A bug that enables escalated access or
privilegeisavulnerability.Designflawsandfailurestoadheretosecuritybest
practices may qualify as vulnerabilities.
Vulnerability Coordination
A process for all involved parties to work together to address a vulnerability.
For example, a research (white hat hacker) and a company on HackerOne or
a researcher (white hat hacker) and an open source community.
Glossary 188
Vulnerability Disclosure
A vulnerability disclosure is the release of information about a computer
securityproblem.Therearenouniversalguidelinesaboutvulnerabilitydisclo-
suresbutbugbountyprogramsgenerallyhaveguidelinesonhowdisclosures
should be handled.
White Hat Hacker
A White Hat Hacker is an ethical hacker who’s work is intended to ensure
the security of an organization. White Hat’s are occasionally referred to as
penetration testers. This is the opposite of a Black Hat Hacker.
26. Appendix B - Take Aways
Open Redirects
Notallvulnerabilitiesarecomplex.Thisopenredirectsimplyrequiredchanging
the redirect parameter to an external site which would have resulted in a user
beingredirectedoff-sitefromShopify.
When looking for open redirects, keep an eye out for URL parameters which
includeurl,redirect,next,etc.Thismaydenotepathswhichsiteswilldirectusers
to.
As you search for vulnerabilities, take note of the services a site uses as they
eachrepresentanewattackvectors.Here,thisvulnerabilitywasmadepossible
by combining HackerOne’s use of Zendesk and the known redirect they were
permitting.
Additionally,asyoufindbugs,therewillbetimeswhenthesecurityimplications
arenotreadilyunderstoodbythepersonreadingandrespondingtoyourreport.
This is why it I have a chapter on Vulnerability Reports. If you do a little work
upfront and respectfully explain the security implications in your report, it will
helpensureasmootherresolution.
But,eventhatsaid,therewillbetimeswhencompaniesdon’tagreewithyou.If
that’sthecase,keepdigginglikeMahmouddidhereandseeifyoucanprovethe
exploitorcombineitwithanothervulnerabilitytodemonstrateeffectiveness.
HTTP Parameter Pollution
Be on the lookout for opportunities when websites are accepting content and
appeartobecontactinganotherwebservice,likesocialmediasites.
Inthesesituations,itmaybepossiblethatsubmittedcontentisbeingpassedon
withoutundergoingthepropersecuritychecks.
AppendixB-TakeAways 190
Though a short description, Mert’s efforts demonstrate the importance of per-
sistence and knowledge. If he had walked away from the vulnerability after
testing another UID as the only parameter or had he not know about HPP type
vulnerabilities,hewouldn’thavereceivedhis$700bounty.
Also,keepaneyeoutforparameters,likeUID,beingincludedinHTTPrequests
asI’veseenalotofreportsduringmyresearchwhichinvolvemanipulatingtheir
valuesandwebapplicationsdoingunexpectedthings.
This is similar to the previous Twitter vulnerability regarding the UID. Unsur-
prisingly, when a site is vulnerable to an flaw like HPP, it may be indicative of a
broadersystemicissue.Sometimesifyoufindavulnerabilitylikethis,it’sworth
taking the time to explore the platform in its entirety to see if there are other
areaswhereyoumightbeabletoexploitsimilarbehaviour.Inthisexample,like
the UID above, Twitter was passing a user identifier, screen_name which was
susceptibletoHPPbasedontheirbackendlogic.
Cross Site Request Forgery
Broadenyourattackscopeandlookbeyondasite’swebsitetoitsAPIendpoints.
APIs offer great potential for vulnerabilities so it is best to keep both in mind,
especially when you know that an API may have been developed or made
availableforasitewellaftertheactualwebsitewasdeveloped.
Inthissituation,thisvulnerabilitycouldhavebeenfoundbyusingaproxyserver,
like Burp or Firefox’s Tamper Data, to look at the request being sent to Shopify
andnotingthatthisrequestwasbeingperformedwithbywayofaGETrequest.
SincethiswasdestructiveactionandGETrequestsshouldnevermodifyanydata
ontheserver,thiswouldbeasomethingtolookinto.
Wherethereissmoke,there’sfire.Here,Mahmoudnoticedthatthertparameter
wasbeingreturnedindifferentlocations,inparticularjsonresponses.Because
ofthat,herightlyguesseditmayshowupsomewherethatcouldbeexploited-
inthiscaseajsfile.
Goingforward,ifyoufeellikesomethingisoff,keepdigging.UsingBurp,check
alltheresourcesthatarebeingcalledwhenyouvisitatargetsite/application.
AppendixB-TakeAways 191
HTML Injection
When you’re testing out a site, check to see how it handles different types of
input,includingplaintextandencodedtext.Beonthelookoutforsitesthatare
accepting URI encoded values like %2F and rendering their decoded values, in
this case /. While we don’t know what the hacker was thinking in this example,
it’s possible they tried to URI encode restricted characters and noticed that
Coinbasewasdecodingthem.TheythenwentonestepfurtherandURIencoded
allcharacters.
A great URL Encoder is http://quick-encoder.com/url. You’ll notice using it that
it will tell you unrestricted characters do not need encoding and give you the
optiontoencodeurl-safecharactersanyway.That’showyouwouldgetthesame
encodedstringusedonCoinbase.
Justbecausecodeisupdated,doesn’tmeaneverythingisfixed.Testthingsout.
Whenachangeisdeployed,thatalsomeansnewcodewhichcouldcontainbugs.
Additionally,ifyoufeellikesomethingisn’tright,keepdigging!Iknewtheinitial
trailingsinglequotecouldbeaproblem,butIdidn’tknowhowtoexploititand
I stopped. I should have kept going. I actually learned about the meta refresh
exploit by reading XSS Jigsaw’s blog.innerht.ml (it’s included in the Resources
chapter)butmuchlater.
Keep an eye on URL parameters which are being passed and rendered as
site content. They may present opportunities for attackers to trick victims into
performingsomemaliciousaction.
CRLF Injections
Goodhackingisacombinationofobservationandskill.Inthiscase,thereporter,
@filedescriptor, knew of a previous Firefox encoding bug which mishandled
encoding. Drawing on that knowledge led to testing out similar encoding on
Twittertogetlinereturnsinserted.
Whenyouarelookingforvulnerabilities,alwaysremembertothinkoutsidethe
boxandsubmitencodedvaluestoseehowthesitehandlestheinput.
AppendixB-TakeAways 192
Be on the lookout for opportunities where a site is accepting your input and
using it as part of its return headers. In this case, Shopify creates a cookie
with last_shop value which was actually pulled from a user controllable URL
parameter. This is a good signal that it might be possible to expose a CRLF
injectionvulnerability.
Cross-Site Scripting
Test everything, paying particular attention for situations where text you enter
isbeingrenderedbacktoyou.TesttodeterminewhetheryoucanincludeHTML
orJavascripttoseehowthesitehandlesit.Alsotryencodedinputsimilartothat
describedintheHTMLInjectionchapter.
XSS vulnerabilities don’t have to be intricate or complicated. This vulnerability
wasthemostbasicyoucanfind-asimpleinputtextfieldwhichdidnotsanitize
a user’s input. Andit was discovered on December 21, 2015 and netted the
hacker$500!Allitrequiredwasahacker’sperspective.
There are two things to note here which will help when finding XSS vulnerabili-
ties:
1. The vulnerability in this case wasn’t actually on the file input field itself -
itwasonthenamepropertyofthefield.SowhenyouarelookingforXSS
opportunities,remembertoplaywithallinputvaluesavailable.
2. Thevalueherewassubmittedafterbeingmanipulatedbyaproxy.Thisis
key in situations where there may be Javascript validating values on the
clientside(yourbrowser)beforeanyvaluesactuallygetbacktothesite’s
server.
Infact,anytimeyouseevalidationhappeninginrealtimeinyourbrowser,
itshouldbearedflagthatyouneedtotestthatfield!Developersmaymake
themistakeofnotvalidatingsubmittedvaluesformaliciouscodeoncethevalues
get to their server because they think the browser Javascript code has already
handlingvalidationsbeforetheinputwasreceived.
XSS vulnerabilities result when the Javascript text is rendered insecurely. It is
possible that the text will be used in multiple places on a site and so each and
every location should be tested. In this case, Shopify does not include store or
checkout pages for XSS since users are permitted to use Javscript in their own
store. Itwould have been easyto write this vulnerabilityoffbefore considering
whetherthefieldwasusedontheexternalsocialmediasites.
AppendixB-TakeAways 193
PassingmalformedorbrokenHTMLisagreatwaytotesthowsitesareparsing
input. As a hacker, it’s important to consider what the developers haven’t. For
example, with regular image tags, what happens if you pass two src attributes?
Howwillthatberendered?
Alwaysbeonthelookoutforvulnerabilities.It’seasytoassumethatjustbecause
a company is huge or well known, that everything has been found. However,
companiesalwaysshipcode.
In addition, there are a lot of ways javascript can be executed, it would have
beeneasyinthiscasetogiveupafterseeingthatGooglechangedthevaluewith
an onmousedown event handler, meaning anytime the link was clicked, with a
mouse.
Two things are interesting here. First, Patrik found an alternative to providing
input - be on the lookout for this and test all methods a target provides to
enter input. Secondly, Google was sanitizing the input but not escaping when
rendering. Had they escaped Patrik’s input, the payload would not have fired
sincetheHTMLwouldhavebeenconvertedtoharmlesscharacters.
There are a number of things I liked about this vulnerability that made me
want to include this. First, Mustafa’s persistence. Rather than give up when his
payload wouldn’t fire originally, he dug into the Javascript code and found out
why. Secondly, the use of blacklists should be a red flag for all hackers. Keep
an eye out for those when hacking. Lastly, I learned a lot from the payload and
talkingwith@brutelogic.AsIspeakwithhackersandcontinuinglearningmyself,
it’s becoming readily apparent that some Javascript knowledge is essential for
pullingoffmorecomplexvulnerabilities.
SSTI
BeonthelookoutfortheuseofAngularJSand testoutfieldsusingtheAngular
syntax {{ }}. To make your life easier, get the Firefox plugin Wappalyzer - it will
showyouwhatsoftwareasiteisusing,includingtheuseofAngularJS.
AppendixB-TakeAways 194
Take note of what technologies a site is using, these often lead to key insights
into how you can exploit a site. In this case, Flask and Jinja2 turned out to be
great attack vectors. And, as is the case with some of the XSS vulnerabilities,
thevulnerabilitymaynotbeimmediateorreadilyapparent,besuretocheckall
places were the text is rendered. In this case, the profile name on Uber’s site
showedplaintextanditwastheemailwhichactuallyrevealedthevulnerability.
This vulnerability wouldn’t exist on every single Rails site - it would depend on
howthesitewascoded.Asaresult,thisisn’tsomethingthataautomatedtoolwill
necessarilypickup.BeonthelookoutwhenyouknowasiteisbuiltusingRailsas
mostfollowacommonconventionforURLs-atthemostbasic,it’s/controller/id
forsimpleGETrequests,or/controller/id/editforedits,etc.
Whenyouseethisurlpatternemerging,startplayingaround.Passinunexpected
valuesandseewhatgetsreturned.
SQL Injection
This example was interesting because it wasn’t a matter of submitting a single
quote and breaking a query. Rather, it was all about how Drupal’s code was
handling arrays passed to internal functions. That isn’t easy to spot with black
box testing (where you don’t have access to see the code). The takeaway from
thisistobeonthelookoutforopportunitiestoalterthestructureofinputpassed
to a site. So, where a URL takes ?name as a parameter, trying passing an array
like ?name[] to see how the site handles it. It may not result in SQLi, but could
leadtootherinterestingbehaviour.
SQLi, like other injection vulnerabilities, isn’t overly tough to exploit. The key is
to test parameters which could be vulnerable. In this case, adding the double
dash clearly changed the results of Stefano’s baseline query which gave away
theSQLi.Whensearchingforsimilarvulnerabilities,beonthelookoutforsubtle
changestoresultsastheycanbeindicativeofablindSQLivulnerability.
AppendixB-TakeAways 195
Server Side Request Forgery
GoogleDorkingisagreattoolwhichwillsaveyoutimewhileexposingallkinds
ofpossibleexploits.Ifyou’relookingforSSRFvulnerabilities,beonthelookout
foranytargeturlswhichappeartobepullinginremotecontent.Inthiscase,it
wastheurl=whichwasthegiveaway.
Secondly,don’trunoffwiththefirstthoughtyouhave.Brettcouldhavereported
the XSS payload which wouldn’t have been as impactful. By digging a little
deeper,hewasabletoexposethetruepotentialofthisvulnerability.Butwhen
doingso,becarefulnottooverstep.
XML External Entity Vulnerability
EventheBigBoyscanbevulnerable.Althoughthisreportisalmost2yearsold,
itisstillagreatexampleofhowbigcompaniescanmakemistakes.Therequired
XMLtopullthisoffcaneasilybeuploadedtositeswhichareusingXMLparsers.
However,sometimesthesitedoesn’tissuearesponsesoyou’llneedtotestother
inputsfromtheOWASPcheatsheetabove.
Thereareacoupletakeawayshere.XMLfilescomeindifferentshapesandsizes
-keepaneyeoutforsitesthataccept.docx,.xlsx,.pptx,etc.AsImentionedpre-
viously,sometimesyouwon’treceivetheresponsefromXXEimmediately-this
example shows how you can set up a server to be pinged which demonstrates
theXXE.
Additionally, as with other examples, sometimes reports are initially rejected.
It’simportanttohaveconfidenceandstickwithitworkingwiththecompanyyou
are reporting to, respecting their decision while also explaining why something
mightbeavulnerability.
As mentioned, this is a great example of how you can use XML templates from
a site to embed your own XML entities so that the file is parsed properly by
the target. In this case, Wikiloc was expecting a .gpx file and David kept that
structure, inserting his own XML entities within expected tags, specifically, the
tag.Additionally,it’sinterestingtoseehowservingamaliciousdtdfile
backcanbeleveragedtosubsequentlyhaveatargetmakeGETrequeststoyour
serverwithfilecontentsasURLparameters.