    # ssh arguments to use
    # Leaving off ControlPersist will result in poor performance, so use
    # paramiko on older platforms rather than removing it
    #ssh_args = -o ControlMaster=auto -o ControlPersist=60s
    # The path to use for the ControlPath sockets. This defaults to
    # "%(directory)s/ansible-ssh-%%h-%%p-%%r", however on some systems with
    # very long hostnames or very long path names (caused by long user names or
    # deeply nested home directories) this can exceed the character limit on
    # file socket names (108 characters for most platforms). In that case, you
    # may wish to shorten the string below.
    #
    # Example:
    # control_path = %(directory)s/%%h-%%r
    #control_path = %(directory)s/ansible-ssh-%%h-%%p-%%r
    # Enabling pipelining reduces the number of SSH operations required to
    # execute a module on the remote server. This can result in a significant
    # performance improvement when enabled, however when using "sudo:" you must
    # first disable 'requiretty' in /etc/sudoers
    #
    # By default, this option is disabled to preserve compatibility with
    # sudoers configurations that have requiretty (the default on many distros).
    #
    #pipelining = False
    # if True, make ansible use scp if the connection type is ssh
    # (default is sftp)
    #scp_if_ssh = True
    [accelerate]
    accelerate_port = 5099
    accelerate_timeout = 30
    accelerate_connect_timeout = 5.0
    # The daemon timeout is measured in minutes. This time is measured
    # from the last activity to the accelerate daemon.
    accelerate_daemon_timeout = 30
    # If set to yes, accelerate_multi_key will allow multiple
    # private keys to be uploaded to it, though each user must
    # have access to the system via SSH to add a new key. The default
    # is "no".
    #accelerate_multi_key = yes
    [selinux]
    # file systems that require special treatment when dealing with security context
    # the default behaviour that copies the existing context or uses the user default
    # needs to be changed to use the file system dependant context.
    #special_context_filesystems=nfs,vboxsf,fuse
##### OS / ENVIRONMENT
    [root@172-20-12-5 ~]# cat /etc/system-release
    CentOS Linux release 7.2.1511 (Core)
##### SUMMARY
I have a test script which will re-run a task on the host(localhost), but
after a lot of times(sometimes only a few minutes) re-run the task, the task
failed by report:
    TASK: [pre-install script] ****************************************************
     ESTABLISH CONNECTION FOR USER: root
     EXEC ssh -C -tt -vvv -o ControlMaster=auto -o ControlPersist=60s -o ControlPath="/root/.ansible/cp/ansible-ssh-%h-%p-%r" -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 172.20.12.5 /bin/sh -c 'mkdir -p $HOME/.ansible/tmp/ansible-tmp-1464595244.34-181895261530692 && echo $HOME/.ansible/tmp/ansible-tmp-1464595244.34-181895261530692'
     PUT /tmp/tmp_l2Pf4 TO tmp_l2Pf4
     EXEC ssh -C -tt -vvv -o ControlMaster=auto -o ControlPersist=60s -o ControlPath="/root/.ansible/cp/ansible-ssh-%h-%p-%r" -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 172.20.12.5 /bin/sh -c 'chmod +rx tmp_l2Pf4'
     EXEC ssh -C -tt -vvv -o ControlMaster=auto -o ControlPersist=60s -o ControlPath="/root/.ansible/cp/ansible-ssh-%h-%p-%r" -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o ConnectTimeout=10 172.20.12.5 /bin/sh -c 'LANG=C LC_CTYPE=C tmp_l2Pf4 '
    failed: [172.20.12.5] => {"changed": true, "rc": 127}
    stderr: OpenSSH_6.6.1, OpenSSL 1.0.1e-fips 11 Feb 2013
    debug1: Reading configuration data /etc/ssh/ssh_config
    debug1: /etc/ssh/ssh_config line 57: Applying options for *
    debug1: auto-mux: Trying existing master
    debug2: fd 3 setting O_NONBLOCK
    debug2: mux_client_hello_exchange: master version 4
    debug3: mux_client_forwards: request forwardings: 0 local, 0 remote
    debug3: mux_client_request_session: entering
    debug3: mux_client_request_alive: entering
    debug3: mux_client_request_alive: done pid = 30030
    debug3: mux_client_request_session: session request sent
    debug1: mux_client_request_session: master session id: 2
    debug3: mux_client_read_packet: read header failed: Broken pipe
    debug2: Received exit status from master 127
    Shared connection to 172.20.12.5 closed.
    stdout: /bin/sh: tmp_l2Pf4: command not found
    FATAL: all hosts have already failed -- aborting
##### STEPS TO REPRODUCE
Only need to replace your real host ip and run the test_script.py will re-
produce the bug.  
BTW, don't forget to add your host ip to /etc/ansible/hosts
    [root@172-20-12-5 ~]# cat test_script.py
    #!/usr/bin/env python
    # encoding: utf-8
    import argparse
    import sys
    import os
    import subprocess
    import signal
    import simplejson
    import ConfigParser
    import string
    import tempfile
    import pwd, grp
    import traceback
    import uuid
    import yaml
    import jinja2
    import datetime
    yaml = '''---
    - hosts: 172.20.12.5
      remote_user: root
      tasks:
        - name: pre-install script
          script: $pre_install_script
    '''
    pre_install_script = '''
    [ -d /etc/yum.repos.d/ ] && echo -e "#aliyun base\n[alibase]\nname=CentOS-\$releasever - Base - mirrors.aliyun.com\nfailovermethod=priority\nbaseurl=http://mirrors.aliyun.com/centos/\$releasever/os/\$basearch/\ngpgcheck=0\nenabled=0\n \n#released updates \n[aliupdates]\nname=CentOS-\$releasever - Updates - mirrors.aliyun.com\nfailovermethod=priority\nbaseurl=http://mirrors.aliyun.com/centos/\$releasever/updates/\$basearch/\nenabled=0\ngpgcheck=0\n \n[aliextras]\nname=CentOS-\$releasever - Extras - mirrors.aliyun.com\nfailovermethod=priority\nbaseurl=http://mirrors.aliyun.com/centos/\$releasever/extras/\$basearch/\nenabled=0\ngpgcheck=0\n \n[aliepel]\nname=Extra Packages for Enterprise Linux \$releasever - \$basearce - mirrors.aliyun.com\nbaseurl=http://mirrors.aliyun.com/epel/\$releasever/\$basearch\nfailovermethod=priority\nenabled=0\ngpgcheck=0\n" > /etc/yum.repos.d/zstack-aliyun-yum.repo
    '''
    fd, pre_install_script_path = tempfile.mkstemp()
    os.fdopen(fd, 'w').write(pre_install_script)
    t = string.Template(yaml)
    yaml = t.substitute({
        'pre_install_script': pre_install_script_path
    })
    cmd = '''
    yaml_file=`mktemp`
    cat > $$yaml_file
    $yaml
    EOF
    ansible-playbook -vvvv $$yaml_file
    '''
    t = string.Template(cmd)
    cmd = t.substitute({
        'yaml': yaml,
    })
    class ShellCmd(object):
        def __init__(self, cmd, workdir=None, pipe=True):
            self.cmd = cmd
            if pipe:
                self.process = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE, cwd=workdir)
            else:
                self.process = subprocess.Popen(cmd, shell=True, cwd=workdir)
            self.return_code = None
            self.stdout = None
            self.stderr = None
        def __call__(self, is_exception=True):
            print 'executing shell command[%s]:' % self.cmd
            (self.stdout, self.stderr) = self.process.communicate()
            if is_exception and self.process.returncode != 0:
                print self.stderr
                print self.stdout
                sys.exit(1)
            return self.stdout
    def shell_no_pipe(cmd, is_exception=True):
        print datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        return ShellCmd(cmd, pipe=False)(is_exception)
    while True:
        shell_no_pipe(cmd)
##### EXPECTED RESULTS
Tasks can run normally all the time.
##### ACTUAL RESULTS
After repeat the task, task will failed by lost the tmp dir.
Below is the output of test script
https://gist.github.com/winger007/97aca1543b19680b4a4ee960672c537e