title:Revisiting IP multicast
author:Sylvia Ratnasamy and
Andrey Ermolinskiy and
Scott Shenker
Revisiting IP Multicast
Sylvia Ratnasamy
Intel Research
Andrey Ermolinskiy
U.C.Berkeley
Scott Shenker
U.C.Berkeley and ICSI
ABSTRACT
This paper revisits a much explored topic in networking – the search
for a simple yet fully-general multicast design. The many years of
research into multicast routing have led to a generally pessimistic
view that the complexity of multicast routing – and inter-domain
multicast routing in particular – can only be overcome by restrict-
ing the service model (as in single-source) multicast. This paper
proposes a new approach to implementing IP multicast that we
hope leads to a reevaluation of this commonly held view.
Categories and Subject Descriptors: C.2.2 [Network Protocols]:
Routing Protocols
General Terms: Design.
Keywords: Routing, Multicast.
1.
INTRODUCTION
In 1990, Deering proposed IP multicast – an extension to the IP
unicast service model for efﬁcient multipoint communication [1].
The multicast service model offered two key beneﬁts: (1) the efﬁ-
cient use of bandwidth for multipoint communication and, (2) the
indirection of a group address which allows for network-level ren-
dezvous and service discovery. Deering’s proposal triggered an era
of research on the implementation and applications of IP multi-
cast. In terms of actual deployment, this research has had some-
what mixed success. On the one hand, support for multicast is built
into virtually every endhost and IP router and the service is often
deployed within enterprise networks. However there is little cross-
provider global deployment of multicast, and today, ﬁfteen years
after Deering’s seminal work, the vision of a ubiquitous multicast
“dialtone” remains an elusive, if not altogether abandoned, goal.
Theories abound for why this vision was never realized (e.g.,
[2–4]). Very broadly, most of these can be viewed as questioning
the viability of IP multicast on two fronts. The ﬁrst is its practical
feasibility given the apparent complexity of deploying and manag-
ing multicast at the network layer. The second is the desirability of
supporting multicast with many questioning whether the demand
for multicast applications justiﬁed the complexity of its deploy-
ment, whether ISPs could effectively charge for the service, the
adequacy of alternate solutions, and so forth.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’06, September 11–15, 2006, Pisa, Italy.
Copyright 2006 ACM 1-59593-308-5/06/0009 ...$5.00.
This paper directly addresses the issue of feasibility, proposing
a simpler approach to implementing IP multicast that we call Free
Riding Multicast (FRM). We focus on inter-domain multicast for
which complexity proved particularly acute but (as we describe
later) FRM can be extended to the intra-domain scenario as well.
FRM offers two key advantages over existing solutions:
• by leveraging existing unicast routes, FRM virtually elim-
inates the need for a distributed multicast route computa-
tion thus side-stepping much of the network layer complexity
associated with traditional solutions (hence the name “Free
Riding”).
• a domain’s participation and use of inter-domain multicast is
effected via the same channel as in the unicast case, namely
BGP, thus offering network operators a familiar framework
within which to tackle the management (access control, ac-
counting, etc.) of a multicast service.
These advantages however come at a cost and the core tradeoff
FRM makes is to tilt the complexity of route computation to the in-
ternals of a router (as opposed to distributed protocol mechanism).
Consequently, FRM requires more storage and algorithmic sophis-
tication at routers and can be less efﬁcient in bandwidth consump-
tion than traditional multicast solutions. However this tradeoff – the
avoidance of distributed computation and conﬁguration at the cost
of optimal efﬁciency – is one we believe is worth exploring given
technology trends [5] that can endow routers with signiﬁcant mem-
ory and processing on the one hand and our continued difﬁculties
taming wide-area routing algorithms on the other [6, 7].
The primary focus of this paper is the design and evaluation of
FRM. We lay the context for our work in Section 2, then discuss
prior work and our overall approach in Sections 3 and 4 respec-
tively. We present the design, evaluation and implementation of
FRM in Sections 5, 6 and 7 respectively. Finally, we observe that
FRM represents a more general approach to supporting network-
layer services such as anycast or data-centric routing. We touch on
this and other directions in Section 8.
Our contribution is a new approach to implementing multicast
that we hope would lower the technical barriers to its deployment.
At the same time, our exploration is triggered in part by the sus-
picion that the desirability of multicast too might merit rescrutiny.
We brieﬂy touch on this in the following section.
2.
IN DEFENSE OF IP MULTICAST
While we make no claims to understand the “market” for multi-
cast, we observe that many of the applications that originally mo-
tivated the research on multicast have (ﬁnally) arrived and would
still be well served by native multicast support.
One example is massive multiplayer games (MMORPGs) with
reports of 30-100% [8, 9] annual subscription growth and upto 5
million active subscriptions in a year [10]. In these games, a player’s
moves must be propagated to those in its “virtual” vicinity. Cur-
rently, game operators achieve this by deploying multiple servers,
each assigned a region of the virtual world, that relay commu-
nication between players. Thus, for n nodes in a virtual region,
the corresponding server’s bandwidth requirements vary from O(n)
to O(n2) depending on the extent to which timeliness constraints
allow multiple updates to be aggregated [11, 12]. Such scaling
can be problematic and indeed numerous reports cite overloaded
servers affecting the user experience [8, 12].1
In a simple sce-
nario, game operators might use multicast to cut server bandwidth
to between O(1) to O(n). In a more sophisticated scenario, play-
ers might directly multicast updates thus ofﬂoading data forward-
ing from servers.
In short, IP Multicast can aid game operators
in building more lightweight, and hence ultimately cheaper infras-
tructure.
Another example is the adoption of Internet TV technology [15]
with several providers already in customer trials. These efforts
use IP multicast within their networks but currently rely on pre-
provisioned channels from the content source in to their networks.
Such provisioning allows ISPs to deliver content from major con-
tent providers to their immediate access customers. Supporting
multicast across domains would further allow ISPs to transitively
extend this delivery to more viewers and content providers without
requiring each content provider to partner with individual ISPs.
File-sharing, software updates, RSS dissemination, video con-
ferencing, grids are additional examples of deployed services that
could potentially leverage multicast delivery.
It has been argued however that it is difﬁcult for ISPs to charge
for the use of multicast, leaving them with little incentive for de-
ployment. As Diot et al. observe [3], this has much to do with
the open, available-to-all usage model of earlier research. We as-
sume that ISPs will instead enforce a more closed access model
enabling them to charge for and better control usage (Section 8).
Given a closed usage model, the emergence of ISP hosting services
and IPTV lend hope that viable charging models exist; i.e., ISPs
charge server operators and/or endusers for multicast connectivity.
A rejoinder is that alternate techniques such as source-speciﬁc
(SSM) or application-layer multicast can meet the needs of the
above applications. Regarding SSM, we note that multi-source
applications do exist (e.g., game servers exchanging summary up-
dates, P2P, video conferencing) and FRM could support these with
complexity comparable (although different in nature) to SSM. SSM
also loses the rendezvous features of the more general service model;
while difﬁcult to assess precisely, the many uses of a DHT’s indi-
rection capabilities [16–18] and the interest in auto-discovery mech-
anisms that enable opportunistic [19, 20] or conﬁguration-free net-
working [17] suggest that low-level rendezvous might be a broadly
useful feature.
Which leaves us with application-layer solutions. While both
network and application layer solutions offer the beneﬁts of mul-
ticast – efﬁcient multipoint communication and indirection – they
do so with very different tradeoffs. While application layer so-
lutions are less constrained by the operational concerns of ISPs,
scaling these to a global user population with even modest per-user
bandwidth requirements represents a serious investment in band-
width, server resources, and management. For example, the global
1A revealing anecdote is the virtual demonstration in which, to
protest issues with Warcraft’s [13] operators, players overloaded
and crashed operator servers by assembling in one virtual loca-
tion [14].
adoption of IPTV with no support for multicast would require the
ubiquitous deployment of video servers down at the DSLAM level.
Moreover, deployments of such scale are likely beyond the resources
of any single application provider but independent deployments
bring with them non-trivial issues of application-level peering and
interoperability. Network-layer solutions by contrast, allow the de-
ployment of services that scale by augmenting an existing global
ecosystem of infrastructure, services, customers, and peering ar-
rangements. As a deployment vehicle, this can be particularly at-
tractive for general-purpose services such as multicast or rendezvous,
that can serve a variety of applications. The clear downside is that
any evolution to this complex ecosystem is inevitably constrained.
While these tradeoffs are well-recognized, the reputed complex-
ity of IP multicast has had the unfortunate consequence of trans-
forming the debate on the desirability of IP multicast into one of
whether it is strictly necessary to support multicast in routers. By
lowering the complexity of network-layer multicast, we hope in-
stead to revert back to debating its utility. In this context, the above
discussion offers examples of existing applications that stand to
gain from ISP deployment of IP multicast. We conjecture that ulti-
mately both network and application-layer solutions to multicast –
each used as appropriate – have much to offer in the implementa-
tion and scaling of networked applications such as network games,
IPTV, etc. and it would be valuable to leave the door open to both
approaches.
3. FRM: BACKGROUND, APPROACH
IP Multicast offers endhosts a simple abstraction: a host can join
or leave a multicast group G and any host can send to a group G.
As with unicast, the internals of the network provide the founda-
tional packet delivery service atop which richer functionality may
be implemented at endsystems. The multicast routing problem is
thus key to supporting the service model and has been the subject
of much research over the years [4, 21–27]. We start with a brief
review of this literature. In the following, we distinguish between
multicast routing and forwarding – the former to refer to the con-
struction of distribution trees, the latter to the process by which
routers propagate packets.
3.1 Multicast Routing
Deering’s early work deﬁned DVMRP, a broadcast-and-prune
approach in which a packet multicast by a source S is forwarded
towards all endhosts and those that receive unwanted packets send
“prune” messages up the distribution tree toward the source [1,21].
DVMRP constructs efﬁcient shortest-path trees from any source but
scales poorly for which reason it is typically limited to intra-domain
routing.
Another intra-domain protocol is MOSPF, a multicast extension
to unicast OSPF in which a router augments its link state advertise-
ment with the list of groups for which it has local receivers which
allows all routers to compute the shortest path tree from any source
to all receivers. MOSPF is a fairly incremental extension and builds
efﬁcient trees but is limited to networks that run link-state proto-
cols.
Shared tree protocols such as Core-Based Trees (CBT) [22] and
PIM-SM [23] emerged to address the poor scaling of ﬂood-and-
prune tree construction. These protocols associate a special ren-
dezvous point (RP) router that serves as the root of a single tree
shared across all senders for a group. A new receiver sends a JOIN
message along the unicast path towards the group’s RP, instanti-
ating forwarding state at routers along the way. While shared-tree
protocols offer a dramatic improvement in scalability, they give rise
to non-trivial issues regarding the placement and discovery of RPs.
Perhaps more importantly, the RP is the nerve center that deter-
mines the very availability of a PIM-SM tree and hence ISPs proved
reluctant to depend on RPs run by other ISPs. This led to the devel-
opment of the Multicast Source Discovery Protocol [24] that allows
domains to discover and interconnect multiple RPs in a loose mesh.
To accommodate the incremental deployment of PIM-SM/MSDP,
multi-protocol extensions were introduced in BGP-4 (MBGP) [27].
MSDP has its own scaling problems and was thus originally in-
tended as a temporary measure pending the deployment of a more
scalable inter-domain solution.
BGMP [25] is one such proposal and incorporates many of the
above ideas [25]. BGMP supports source-rooted, shared and bidi-
rectional shared trees. Key to BGMP is the association of a group
to a “home” AS responsible for allocating the group address. A
group’s home AS acts as the domain-level RP for the group’s rout-
ing tree. To map a group to its home AS, BGMP proposes address
advertisement (AAP) [25] that may be used in conjunction with
MASC [28], a dynamic address allocation protocol.
The ever increasing complexity of multicast routing led Hol-
brook et al. [4] to challenge the wisdom of Deering’s service model.
They argued that many large-scale applications only require deliv-
ery from a single, often well-known, source. By exposing the iden-
tity of this source to the endpoints, routing can be greatly simpli-
ﬁed by having receivers just send JOIN messages directly towards
the source, moving RP discovery out of routers. Their Express pro-
tocol (now PIM-SSM) thus proposes a single-source service model
in which a multicast “channel” is identiﬁed by both a group (G) and
source (S) IP address. Endhost joins/leaves specify an (S,G)
channel address and only the source S may transmit to a channel.
Holbrook et al’s insight represents a practical compromise that
has done much to further ISP adoption of IP Multicast. The price
is a loss in generality – with SSM, a group address is tied to a
speciﬁc endhost IP address and hence the value of multicast as a
network-layer rendezvous mechanism is largely lost. FRM makes a
different compromise – retaining generality and seeking simplicity
by accepting higher bandwidth and (off-the-fast-path) storage costs
at routers.
3.2 Multicast Forwarding
The above centered on efforts to scale multicast routing. Of at
least equal concern is the scalability of multicast forwarding state
within routers. Because group membership need not be topologi-
cally contained, multicast forwarding entries are not easily aggre-
gatable and, left unchecked, forwarding state grows linearly in the
number of groups that pass through a router. Thaler and Hand-
ley [29] propose an interface-centric implementation model appli-
cable to shared-bus router architectures which allows some aggre-
gation. Their implementation model however does not apply to
switched router architectures nor implementations which store for-
warding state as a list of per-group incoming-outgoing interfaces.
Moreover, in the absence of careful address allocation, forwarding
state remains fundamentally linear in the number of active groups
and can hence be non-trivial. Radoslavov [30] proposes “leaky”
aggregation that tradesoff bandwidth for scalability in state while
Briscoe et al. [31] propose a scheme wherein applications coop-
erate to select addresses that aid aggregation. To the best of our
knowledge, none of these schemes have been adopted in common
router implementations.
Discussion. The quest for a satisfactory multicast routing so-
lution thus led down an increasingly tortuous path. Perhaps re-
ﬂective of this is the somewhat daunting list of multicast protocols
found in most commercial routers; e.g., Cisco routers advertise im-
c.d.e.*
AS X
a.b.*.*
AS Y
AS P
m.n.*.*
AS M
AS Q
R1
AS U
R2
e.f.*.*
AS Z
Rs
AS V
s
Figure 1: FRM: group membership and forwarding.
plementations of PIM-SM, PIM-DM, Bidir-PIM, PIM-SSM, Au-
toRP, MBGP, MSDP and IGMP v1,v2,v3 (while still lacking sup-
port for address allocation (MASC/AAP) and scalable inter-domain
(BGMP) protocols!) It is hard, even in retrospect, to cleanly lay the
blame for this abundance of mechanism at the feet of any one prob-
lem or issue as each solution addresses a very real concern. Unfor-
tunately, the complexity of the ensemble greatly raises the barrier
to deployment of a multicast service. Our primary goal with FRM
was thus to provide a “leaner” solution while retaining acceptable
performance. Next, we describe our approach to achieving this.
4. FRM: APPROACH AND TRADEOFFS
4.1 Approach
In the abstract, multicast delivery requires knowledge of: (1)
which end hosts are group members and, (2) how to reach these
member hosts or domains. While most solutions combine these
two components into a single from-the-ground-up protocol, FRM
decouples membership discovery from route discovery. This sep-
aration offers the advantage that, once group members are known,
any source can construct the multicast tree from its unicast routes
to each member host. This is easily done for path-vector or link-
state unicast protocols that reveal the required paths; as we discuss
in Section 8, this approach can also be adapted to distance-vector
protocols.
As stated earlier, we focus on inter-domain routing in which sce-
nario the basic FRM scheme operates as follows: a domain’s BGP
advertisements are augmented with a description of the multicast
groups currently in use within the domain. These adverts are then
propagated as per the normal operation of BGP thereby giving ev-
ery (border) router a description of the groups present in each desti-
nation preﬁx. To discover the dissemination tree for a group G, the
the border router at the source (denoted Rs) scans its BGP table to
identify those preﬁxes with members of G. Having thus identiﬁed
all destination domains, Rs simply computes the dissemination tree
from the union of the BGP unicast paths to all destination domains.
Rs then forwards a single copy of the packet to each next hop on
this dissemination tree along with an encoding of the subtree each