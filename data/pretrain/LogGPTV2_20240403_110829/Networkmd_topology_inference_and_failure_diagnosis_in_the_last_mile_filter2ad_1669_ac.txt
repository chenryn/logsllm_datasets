n
i
20
40
60
80
100
120
140
50
100
modems
150
200
50
100
modems
150
200
(c) Reordered failure
stances
in-
(d) Reordered diagnosis re-
sult
Figure 10: Simulating FG inference on a two-level
balanced topology
NMF-based algorithm against the one based on the k-means
method.
5.1.1 A Case Study on Balanced Topology
We ﬁrst use the balanced topology to illustrate how Net-
workMD works. We simulate a topology of 200 cable modems
in a randomly generated balanced tree topology similar to
that of Figure 9. Both level-1 and level-2 nodes are hid-
den from our algorithm. Here we show how we can identify
level-1 nodes as major FGs. The algorithm has no prior
knowledge of either the topology or the numbers of nodes
on level 1 and 2.
In this simulation, we set the modem failure probability
to pm = 0.1 (note that pm simulates noise) and set the re-
peater failure probability to pr = 0.5. When the ratio of
failed leaf nodes exceeds 25%, active probes are simulated
and the statuses of all leaf nodes are collected as a measure-
ment sample. We run the simulation until 150 such failure
instances are observed.
Figure 10(a) shows the simulated failure matrix. A black
dot in the ﬁgure indicates a failure observed on a modem
in a probing instance. Note that the failure groups associ-
ated with the 4 level-1 nodes are hardly visible, unless we
re-order the columns according to the modems’ association
with these 4 nodes (see Figure 10(c)). Using the original
failure matrix as input, our algorithm infers 4 failure groups
and computes the derived failure matrix (X ′). The latter is
shown in Figure 10(b) with each FG marked with a diﬀerent
color. If we reorder the columns in Figure 10(b) based on the
modems’ association to the derived FGs as in Figure 10(d),
we can see the algorithm successfully ﬁltered out the noise
and accurately identiﬁed the dominant FGs represented by
the level-1 nodes, i.e., Rp = Rn = 0%. Note that despite the
existence of noise caused by random cable modem failures,
balanced topology
NMF
k−means
balanced topology
NMF
k−means
0.3
0.25
0.2
0.15
0.1
0.05
0
e
t
a
r
e
v
i
t
i
s
o
p
e
s
a
l
f
0.6
0.5
0.4
0.3
0.2
0.1
0
e
t
a
r
e
v
i
t
a
g
e
n
e
s
a
f
l
−0.05
0
10
20
40
number of failure instance
30
50
60
−0.1
0
10
20
40
number of failure instance
30
50
60
(a) False positive rate comparison
(b) False negative rate comparison
Figure 11: Comparing the eﬀect of sample size on a balanced topology
t
e
a
r
e
v
i
t
i
s
o
p
e
s
a
l
f
cascaded topology
NMF
k−means
t
e
a
r
e
v
i
t
a
g
e
n
e
s
a
l
f
0.2
0.15
0.1
0.05
0
−0.05
0
10
20
40
number of failure instance
30
50
60
0.12
0.1
0.08
0.06
0.04
0.02
0
−0.02
−0.04
0
cascaded topology
NMF
k−means
10
20
40
number of failure instance
30
50
60
(a) False positive rate comparison
(b) False negative rate comparison
Figure 12: Comparing the eﬀect of sample size on a cascaded topology
high level nodes have a bigger impact on leaf nodes if they
fail. This explains why only the 4 FGs associated with the
4 level-1 nodes are identiﬁed.
5.1.2 The Effect of Sample Size
We vary the number of observed failure instances and
study its impact on the performance of NetworkMD. In the
simulation, we set the modem failure probability to pm =
0.1, and the repeater failure probability to pr = 0.05. We
vary the number of observed failure instances (hence the
number of measurement samples) from 30 to 250 and repeat
each test 50 times.
Figure 11 compares the average false positive and false
negative rates, as well as their standard deviation (shown
as error bar), for the NMF and k-means algorithm, in a
balanced topology. As the ﬁgure shows, the NMF-based al-
gorithm has a lower false positive rate on average, and its
standard deviation reduces to 0 when the number of sam-
ples is more than 30. That is, in the balanced topology, the
NMF-based algorithm can always ﬁnd the correct FGs given
enough failure samples. However, having more samples does
not necessarily help improve the accuracy of the k-means al-
gorithm. While its average false positive rate decreases with
the increasing number of failure samples, its standard devi-
ation remains high. Therefore, even with a suﬃciently large
number of failure samples, the k-means algorithm cannot
guarantee correct identiﬁcation of all FGs in the balanced
topology.
Similar to Figure 11, Figure 12 compares the false positive
and false negative rates for the two algorithms in a cascaded
topology. In this case, the average false positive and false
negative rates of the NMF-based algorithm are very close to
0, regardless of the number of failure samples, and are much
less than the rates of the k-means algorithm. Note that when
the number of failure samples is small, the results inferred by
the NMF-based algorithm in a cascaded topology is better
than that inferred in a balanced topology. This is because in
cascaded topologies those dominant repeaters are more likely
to cause failures observed by the monitoring system, and
therefore more likely to be identiﬁed. When more samples
e
t
a
r
e
v
i
t
i
s
o
p
e
s
a
f
l
0.3
0.25
0.2
0.15
0.1
0.05
0
−0.05
−0.1
0
NMF
k−means
t
e
a
r
e
v
i
t
a
g
e
n
e
s
a
l
f
NMF
k−means
1.2
1
0.8
0.6
0.4
0.2
0
0.05
0.1
0.15
0.2
noise level
0.25
0.3
0.35
0.4
−0.2
0
0.05
0.1
0.15
0.2
noise level
0.25
0.3
0.35
0.4
(a) False positive rate comparison
(b) False negative rate comparison
Figure 13: Eﬀect of noise on a balanced topology
are observed, the eﬀect of noise decreases to a reasonable
level such that the accuracy of inference improves. When
enough samples are collected, both algorithms give better
results in balanced topology than in cascaded topology since
regularity is beneﬁcial for our clustering-based algorithms.
5.1.3 The Effect of Noise
As noted earlier, individual modem failures are consid-
ered noise in the measurement data. To study the im-
pact of noise, we simulate diﬀerent noise levels in the bal-
anced topology. The failure probability of repeater is set to
pr=0.01. We vary the failure probability of cable modem,
pm, from 0.01 to 0.36, and compare in Figure 13 the ra-
tios Rp and Rn for NetworkMD, when it is equipped with
NMF and k-means algorithms, respectively. The tests are
repeated 10 times and we again show both the average value
of Rp and Rn and their standard deviations. It can be seen
that when pm ≤ 0.21, the NMF algorithm has false positive
and false negative rates close to 0. Both NMF and k-means
algorithms have higher false negative rate when the noise
level pr is higher than 0.25 (which is unlikely to be observed
in practice). However, the false positive ratio of NMF al-
gorithms is almost always less than 0.1, and has smaller
standard deviation than the k-means algorithm.
5.1.4 Simulation with Real Topology
We extract a topology from a real cable network that we
have monitored. The topology has a tree structure with
two levels, consisting of roughly 3000 leaf nodes (i.e. cable
modems) and 24 FGs (i.e. repeaters). The topology tree
is not balanced.
In the simulation, we vary the number
of observed failure instances and study the impact on the
performance of NetworkMD. We set the modem (leaf node)
failure probability to pm = 0.1, and the repeater (ﬁrst-level
node) failure probability to pr = 0.05. We vary the number
of observed instances from 30 to 250 and repeat each test 50
times.
Figure 14 plots the average false positive and false nega-
tive rates when the NMF and the k-means algorithms are
used in the extracted topology. As the ﬁgure shows, NMF
algorithm always has a close-to-zero false positive rate. For
the k-means algorithm , having more samples does not nec-
essarily decrease its false positive rate.
In terms of false
negative rate, it is decreasing for NMF algorithm when more
failure instances are provided as input. However, when there
are more than 250 failure instances, both the NMF and the
k-means algorithms provide satisfactory results.
5.2 Evaluations based on Real Datasets
We have collected a set of monitoring data from a large ca-
ble provider that serves hundreds of thousands of customers
and has a topology with thousands of intermediate network
devices. The data contains detailed status report for all
CMTSs, CMTS interfaces, and most of the underlying ﬁber
nodes. Every CMTS interface has a register to record how
many cable modems are physically connected to it, and how
many of them are online. We launch active probes to all
modems within a CMTS interface when an alarm is trig-
gered by the interface, indicating that more than 15% of the
modems are oﬄine. Recall from the topology in Figure 1
that only the CMTSs, CMTS interfaces, and the underlying
ﬁber nodes are visible to the NOC. Therefore, even though
we can use NetworkMD to infer the missing topology be-
tween ﬁber nodes and cable modems, we do not have the
actual connectivity information of those repeaters to vali-
date our results. Such validation requires actual deployment
of our system and access to failure incident records.
Because of the above limitations, we use the following
methodology to validate our approach. We hide the con-
nectivity information between the ﬁber nodes to the CMTS,
and let NetworkMD infer the failure groups under the entire
CMTS. Conceivably, the failures from those repeaters have
less impact to the entire CMTS and should be considered
as noise in the system. Hence, the identiﬁed major FGs
should roughly match the composition of CMTS interfaces
and ﬁber nodes, which will lead to more modem failures if
any one of them fails.
We used the measurement data collected from a number
CMTSs to validate our method. Here, we report the re-
sults for one of them. As shown by the measurement data,
the speciﬁc CMTS has 3404 cable modems attached to it.
During our monitoring process, we captured 53 failure in-
stances (i.e., with 15% or more modems appeared oﬄine for
at least one of its interfaces). We found that 1933 cable
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
e
t
a