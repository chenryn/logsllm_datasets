### ©PentesterAcademy.com
**网站**: [PentesterAcademy.com](https://PentesterAcademy.com/)

#### 现状
- 无法通过监听流量恢复ECDHE/DHE派生的密钥。
- 对于RSA，获取到服务器私钥即可解密流量。

#### TLS流量 (SIP over TLS)
- **Diffie-Hellman密钥交换**
  - 未解码的SRTP流量
  - 解码为RTP
  - 检查RTP流
  - 分析RTP流
  - 播放RTP流

- **基于RSA的密钥交换**
  - 解密TLS流量
    - 使用RSA交换密钥
    - 可解密安装在Asterisk One上的密钥
    - Asterisk/One密钥和证书的位置: `/etc/asterisk/keys`
    - 必须从服务器获取`default.key`

- **配置步骤**
  - 编辑 > 偏好 > 协议 > SSL
  - 添加Asterisk默认私钥
  - 解密SIP流量
  - SIP/SDP解密包中的SRTP密钥

#### SRTP解密
- **开源工具**
  - **SRTP Decrypt**
    - GitHub: [github.com/gteissier/srtp-decrypt](https://github.com/gteissier/srtp-decrypt)
  - **Libsrtp**
    - 安全实时传输协议(SRTP)的具体实现
    - 可解密SRTP数据包
    - GitHub: [github.com/cisco/libsrtp](https://github.com/cisco/libsrtp)

- **安装前的准备**
  - 安装 `libgcrypt`
  - 安装 `libpcap`

- **安装步骤**
  - 克隆仓库
  - 编译代码

- **解密流程**
  - 复制SRTP密钥
  - 指定UDP端口
  - 解密SRTP流量
  - 指令示例:
    ```bash
    ./srtp-decrypt -k uK+RfjSi9/fUFr8zoJu6zdqPw6MGtONhgX4yqwRj decoded.raw Normal_Call_two_parties.pcap
    ```
    - `-k`: 定义SRTP密钥
    - `Normal_Call_two_parties.pcap`: 输入文件
    - `decoded.raw`: 输出文件

- **后续操作**
  - 导入解密内容
  - 导入解密的UDP数据包
  - 解码为RTP
  - 检查RTP流
  - 分析RTP流
  - 播放解密后的通话

- **Libsrtp使用**
  - 指令示例:
    ```bash
    ./rtp_decoder -a -t 10 -e 128 -b 2stvabBcXXf3HtaHCSsB8WACeRBst9f7lwLqlzqE < Normal_Call_two_parties_Exported_RTP.pcap
    ```
    - `-a`: 使用消息验证
    - `-t 10`: 认证标签大小（80位，即10字节）
    - `-e 128`: 加密密钥长度（AES_CM_128_HMAC_SHA1_80，密钥长度是128位）
    - `-b`: ASCII格式的SRTP密钥

- **指令输出**

希望这些信息对您有所帮助。如需进一步的详细信息，请访问我们的网站或联系支持团队。