EVT, 2008.
[9] D. Chaum and T. P. Pedersen. Wallet databases with
observers. In CRYPTO, 1992.
[10] R. Cramer, I. Damgård, and B. Schoenmakers. Proofs of
partial knowledge and simpliﬁed design of witness hiding
protocols. In CRYPTO, 1994.
[11] G. Dagher, B. Bünz, J. Bonneau, J. Clark, and D. Boneh.
Provisions: Privacy-preserving proofs of solvency for bitcoin
exchanges (full version). Technical report, IACR Cryptology
ePrint Archive, 2015.
[12] S. Eskandari, D. Barrera, E. Stobert, and J. Clark. A ﬁrst look
at the usability of bitcoin key management. In USEC, 2015.
[13] A. Fiat and A. Shamir. Witness indistinguishable and
witness hiding protocols. In ACM STOC, 1990.
[14] D. Geer. Technical maturity, reliability, implicit taxes, and
wealth creation. login: The magazine of Usenix & Sage,
26(8), 2001.
[15] S. Goldfeder. Better wallet security for bitcoin. Technical
report, Princeton, March 2014.
[16] C. Hazay and Y. Lindell. Efﬁcient Secure Two-Party
Protocols. Springer, 2010.
[17] R. Kusters, T. Truderung, and A. Vogt. Accountability:
Deﬁnition and relationship to veriﬁability. In ACM CCS,
2010.
[18] P. Litke and J. Stewart. Cryptocurrency-stealing malware
landscape. Technical report, Dell SecureWorks Counter
Threat Unit, 2014.
[19] W. Mao. Guaranteed correct sharing of integer factorization
with off-line shareholders. In PKC, 1998.
[20] S. Meiklejohn, M. Pomarole, G. Jordan, K. Levchenko,
D. McCoy, G. M. Voelker, and S. Savage. A ﬁstful of
bitcoins: characterizing payments among men with no
names. In IMC, 2013.
[21] R. C. Merkle. Secrecy, Authentication, and Public Key
Systems. PhD thesis, Stanford, 1979.
[22] T. Moore and N. Christin. Beware the middleman: Empirical
analysis of bitcoin-exchange risk. In Financial Cryptography
and Data Security, 2013.
[23] S. Nakamoto. Bitcoin: A peer-to-peer electionic cash
system. Unpublished, 2008.
[24] C. A. Neff. A veriﬁable secret shufﬂe and its application to
e-voting. In ACM CCS, 2001.
[25] R. Parhonyi. Micropayment Systems. In Handbook of
Financial Cryptography and Security. CRC, 2011.
[26] T. P. Pedersen. Non-interactive and information-theoretic
secure veriﬁable secret sharing. In CRYPTO, 1992.
[27] C. P. Schnorr. Efﬁcient signature generation by smart cards.
Journal of Cryptography, 4, 1991.
[28] A. Vogt, T. Truderung, and R. Kusters. Clash attacks on the
veriﬁability of e-voting systems. In IEEE Symposium on
Security and Privacy, 2012.
[29] Z. Wilcox. Proving your bitcoin reserves.
https://iwilcox.me.uk/2014/proving-bitcoin-reserves, Feb.
2014.
730APPENDIX
A. PROOF OF ASSETS IS HVZKP
Recall Theorem 1:
Theorem 1. The Σ-protocol in Protocol 1 is a honest-veriﬁer zero
knowledge proof of knowledge of quantities
Assets and psi P t0, 1u, vi, ti, ˆxi P Zqq for i P r1, ns
that satisfy conditions (1),(2), (3) and (4) for all i P r1, ns.
In other words, Protocol 1 is honest-veriﬁer zero knowledge of
the following relation:
PoKtpAssets, si P t0, 1u, vi, ti, ˆxiq : g, h, yi, balpyiq, li, piu
Proof. By the deﬁnition of HVZKP (see full paper [11]), proofs of
the following Claims 1.1, 1.2, and 1.3 imply Theorem 1 holds.
Claim 1.1. (Completeness) If P and a veriﬁer V follow protocol 1
on input pg, h, yi, balpyiq, li, piq and private input pAssets, si P
t0, 1u, vi, ti, ˆxiq, then V always accepts.
Proof. Suppose E knows vi , si and ti. By assumption E followed
the protocol and all pi and li are, thus, well formed. E can then
for any random u
and challenges ci compute all responses rp¨q.
Completeness follows because for i P r1, ns:
p4q
i hci¨vi
p¨q
i
rsi
b
y
rsi
hu
p1q
i hrvi “ b
bci¨si
u
i
i
i
“ pci
p1q
i a
i
p1q
i hrti “ y
yci¨si
u
i
i
i
“ lci
p2q
p3q
i a
i a
i
p3q
grˆxi hrti “ gu
i gci¨ˆxi hu
“ lci
p3q
i a
i a
p4q
i
hu
p2q
i hci¨ti
p2q
i hci¨ti
Claim 1.2. (Soundness) There exists a polynomial-time algorithm
(extractor E) for Protocol 1 such that for each i P r1, ns and any
pair of accepting transcripts with the same a
i, E can
compute pvi, si, ti, ˆxiq.
i and ci ‰ c1
p¨q
Proof. We show in Figure 4 that there exists an extractor E for all
efﬁcient provers P‹ that convince the veriﬁer. Note that
1. For i P r1, ns
p1q
(a) Run P ‹ to obtain a
i
$ÐÝ Zq to P ‹
(b) Send ci
(c) P ‹ will output rsi , rti , rˆxi , rvi such that
p2q
i
p3q
i
p4q
i
, a
, a
, a
b
rsi
i hrvi “ pci
i a
i hrti “ lci
y
i a
grˆxi hrti “ lci
i a
p1q
i
p2q
i a
p3q
i a
rsi
p3q
i
p4q
i
i
b
(d) Rewind P ‹ to right after step 1b of the protocol.
$ÐÝ Zqztciu to P ‹
(e) Send c1
ˆxi , r1
ti , r1
si , r1
(f) P ‹ will output r1
r1
vi “ pc1
i hr1
si
i a
r1
i hr1
ti “ lc1
si
y
i a
gr1
ˆxi hr1
ti “ lc1
i a
(g) Output: vi “ rvi´r1
mod q, si “ rsi´r1
v1
si
ci´c1
ci´c1
´r1
mod q, ti “ rti´r1
mod q, ˆxi “ rˆxi
ˆxi
ti
ci´c1
ci´c1
vi such that
p1q
i
p2q
i a
p3q
i a
p3q
i
p4q
i
i
i
i
i
i
i
mod q
Figure 4: Extractor for Proof of Assets protocol
Claim 1.3. (Honest Veriﬁer Zero Knowledge) There exists a prob-
abilistic polynomial-time simulator S that, given pg, h, yi, balpyiq,
li, pi and random challenge ci for each i P r1, ns, can produce a
transcript that has the same distribution as a transcript between P
and an honest veriﬁer.
Proof. A simulator is given in Figure 5. Note that both the original
a’s as well as the simulated a’s are distributed uniformly at random
in G given that the challenge ci was chosen uniformly at random.
Given uniformly chosen u’s the responses in the protocol are uni-
form in Zq. The simulated responses are uniformly drawn. The
probability of a simulated transcript thus equals the probability of
an actual transcript.
nź
b
i“1
i
hrtZ ´r1
tZ
rsi´r1
si
“ pZAssetsqci´c1
i
1. For each i P r1, ns
y
and
rsi´r1
si
i
hrti´r1
ti “ lci´c1
i
i
grˆxi
´r1
ˆxi hrti´r1
ti “ lci´c1
i
i
Since ci ‰ c1
that the protocol is sound.
i we can conclude that E gives valid outputs and thus
Additionally in the full version [11], we provide an extractor and
simulator for a HVZKP proof that a committed value is binary.
Were this extractor run on li, it can extract a binary si.
(a) Choose rsi , rti , rˆxi , rvi uniformly at
i “ y
p2q
from Zq
i “ b
p1q
(b) Let: a
´ci
, and a
hrti l
(c) Publish pa
´ci
rsi
i hrvi p
i “ grˆxi
p4q
p3q
p2q
, a
i
i
as the transcript.
p1q
i
p4q
i
, a
, a
, a
rsi
i
i
i
random
i “
p3q
, a
; ci ; rsi , rti , rˆxi , rviq
Figure 5: Simulator for Proof of Assets protocol
731