In order to defend against both the clone attack and the
anonymous attack, currently a complete content protection
system has to utilize two schemes. For example, AACS [1]
deployed both NNL and JL schemes for these two attacks.
Each device stores a set of device keys and a set of
sequence (tracing) keys. When playing back movie #i
from the movie sequence, a device will process MKB
ﬁrst to obtain the valid media key (Km). It then uses
its sequence key Ksi for movie #i , together with Km
to derive a media key variant Kmsi. This key enables
the device to decrypt TKB and obtain a valid variant
data Dv, which ultimately allows the device to playback
the content through its corresponding playback path. As
one can see, these two schemes work together to provide
content protection.
Putting together two schemes into one system requires
the cost of managing two schemes. Moreover, as dis-
cussed earlier, NNL scheme provides efﬁcient revocation
but relatively weak tracing on clone attack; JL scheme
offers good traceability but ﬁnite revocation limit based
on TKB as well as degraded traceability with revocations.
Unfortunately the overall strength of the entire system is
the weakest link on either scheme on both traceability and
revocation.
III. Main contribution of this paper
In this paper we shall present a system that seamlessly
combines the features provided by the two schemes into
one uniﬁed scheme. More importantly it exploits the best
of what can be provided by the two schemes and improves
revocation capability and traceabilities on both attacks.
Overall, as summarized in the following table it provides
signiﬁcant improvements over the current system.
1) Current content protection system requires two set
of keys stored into receiving devices, and manage
multiple types of key blocks. Our new system makes
use of only one set of keys and one uniﬁed type of
key block.
2) Current system needs different solutions for two
different attacks. Our uniﬁed system can defend
against both attacks in exactly the same way.
3) The traceability for clone attack is improved from
O(T 3 log T ) to O(T ).
4) The traceability for anonymous attack is greatly
improved from the current system; revocation capa-
bility for anonymous attack is lifted from a ﬁnite
limit in the current system to be unlimited in our
new system.
142
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:13:28 UTC from IEEE Xplore.  Restrictions apply. 
5) Our uniﬁed system’s revocation capability is unlim-
block.
ited, precise and concise
Measurements
Keys need to store at devices
Key blocks need to manage
Tracing for clone attack
Tracing for anonymous attack
Traceability for clone attack
Traceability for
anonymous attack
Current system
Device keys;
tracing keys
MKB, TKB,
Forensic MKB
Forensic MKB
Tracing key/TKB
3
O(T
logT )
40 (based on
sample parameters)
Uniﬁed System
Device keys
Uniﬁed MKB
Uniﬁed MKB
uniﬁed MKB
O(T )
10,000 (same
parameters)
Unlimited
40
Revocation for anonymous attack
In summary, the contributions of our paper is two-fold.
Practically, we reduce the tracing time from tens of years to
hours. The much simpliﬁed design and improved efﬁciency
has caused AACS to adopt it in its new speciﬁcation.
Scientiﬁcally we show it is possible to look at broadcast
encryption and traitor tracing in a uniﬁed way and design
one scheme that can offer superior efﬁciency on both
revocation and traceability. We also show the equivalence
of two types of attacks, which were originally viewed
differently, and we show how to defend against them
in exactly the same way. Our work opens new research
directions in these areas.
IV. A uniﬁed system for broadcast encryption
and traitor tracing for both clone attack and
anonymous attack
While our new system uses only one set of keys (device
keys) from a broadcast encryption scheme, for example,
from the tree-based NNL scheme, it employs additional
media keys in a uniﬁed media key block instead of a
single media key as is used in current broadcast encryption
schemes. Those additional media keys replace the media
key variants typically obtained in a traitor tracing system
like the JL scheme. The content is prepared with multiple
versions in a manner similar to that in the JL scheme,
namely, with multiple variations of some chosen segments
in the content. Processing this new uniﬁed media key block
can directly obtain different valid media key variants for
different devices, ultimately enabling devices to play back
the content through different variations in the content. This
is in contrast to the system in which devices have to
process both the MKB and the TKB to obtain a media
key variant data in order to playback the content. With the
multiple media key variants and uniﬁed MKB in place,
traitor tracing for clone attack and re-broadcasting attack
become identical.
A. Preliminaries
Media Key Variant (Kmv): Any of several valid media
keys that can be obtained by processing the new media key
143
Uniﬁed Media Key Block (MKBu): A structure com-
prising different media key variants encrypted by different
compliant device keys. Compliant devices obtain different
valid media key variants after processing the MKBu.
Title Key (Kt): The key actually used to encrypt and
decrypt the segments in the content. Each variation of a
segment is encrypted by a different title key.
Variant Title Key Table: A table that allows a device
with a media key variant to calculate a list of title keys
for different segments to playback the content. This table
also comes together with the content. Rows of the table
are indexed by Kmv. Columns of the table comprise the
segments for the content.
Segment1
Segment2
E(Kt1)Km1,1 E(Kt7)Km1,7
E(Kt1)Km2,1 E(Kt4)Km2,4
...
...
E(Kt1)Kmn,1 E(Kt7)Kmn,7
Segment m
...
... E(Kt20)Km1,20
... E(Kt27)Km2,27
...
... E(Kt29)Kmn,29
...
In the sample table shown above, segment 1 is a com-
mon segment and does not have any variations. Therefore
any device using a valid media key variant Kmv can
decrypt an entry in ﬁrst column and obtain the same
valid title key (marked as Kt1 in the table). Segment 2
is a segment that has multiple variations. Devices with
a media key variant Km1 will get Kt7 for this segment;
devices with a media key variant Km2 will get Kt4 for
this segment. Segment m shown in this example also has
multiple variations.
B. Receiver playback process
The media player ﬁrst uses the device key to read and
process the uniﬁed media key block on the media and
obtain a media key variant (Kmv). This indexes into a row
in the variant key table and allows the decryption of one
title key for each segment from the table. The player also
locates variant numbers corresponding to the variations
from the variant key table. Then the media player uses the
decrypted title keys to decrypt and play back segment(s)
or variation(s) of the segments of the encrypted content.
V. Traitor tracing in uniﬁed system
In NNL scheme, a production MKB revokes known
compromised devices while a forensic MKB tries to detect
unknown compromised devices. A forensic MKB only
serves the purpose of forensics and does not perform
revocations on compromised devices. However, a Tracing
Key Block in JL scheme for anonymous attack is both for
production and for forensics. It revokes known compro-
mised devices and also collects new forensic information
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:13:28 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 1 Dynamic Tracing
1: Initialize frontier F
2: loop
3:
4:
Construct a uniﬁed MKB for the current frontier F
Distribute uniﬁed MKB with next content release or
Feed MKB into the clone device
Recover pirated content or collect clone box output
Identify variation qi and its corresponding subset Si
used in the clone or recovered pirated content.
Update frontier F
5:
6:
7:
for remaining unknown compromised devices. In our new
system, all these three types of key blocks are uniﬁed into
one uniﬁed MKB, which is both production and forensic.
Furthermore, an old forensic MKB in NNL can only get
one of the two testing results from the clone after feeding
it a forensic MKB, namely, the clone box can either de-
crypt/playback content or not. In our new system, because
the content is prepared and encoded with q playback paths,
every time a clone device processes a uniﬁed MKB it will
give the tracing agency one of the q results (the playback
path). The effect of this is exactly same as the tracing
agency recovers a pirated version of the content or content
decrypting key in an anonymous attack. Therefore, traitor
tracing for clone device attack and anonymous attack can
be treated identically in our new uniﬁed system.
We know in order to create an MKB one ﬁrst ﬁnds
a set of nodes (subsets) that can cover all non-revoked
devices. A uniﬁed MKB is multiple media key variants
encrypted by the keys associated with the subsets in the
cover. We continue to call the set cover the “frontier”.
However, a new question arises. One has to decide how
to assign those media key variants among the non-revoked
devices in the frontier. The answer to this question affects
how efﬁciently one can revoke and trace. Different types
of tracing strategies may mean different ways to create the
uniﬁed MKBs.
A. Create uniﬁed MKB for dynamic trac-
ing
The nature of the clone device tracing using forensic
MKB is dynamic. A forensic MKB intentionally enables
some keys in the frontier and disables other keys in the
frontier. A series of forensic MKBs are fed into the clone
and the black box subset tracing procedure identiﬁes which
key is compromised in current frontier. As shown in Figure
1, this process repeats until the clone cannot playback the
forensic MKB or a traitor is found on the leaf.
As shown in Algorithm 1, the new uniﬁed system can
also perform dynamic traitor tracing for clone device and
re-broadcasting attack similar to the NNL tracing approach
Algorithm 2 Dynamic Tracing with ”single identity until
revoked” strategy
1: Divide tree into q subsets to form a frontier
2: loop
3:
Assign a separate media key variant to each of the
q newly added subsets in the frontier
Assign one separate media key variant to all the
remaining subsets in the frontier if any
Generate a uniﬁed media key block based on the
media key assignment and distribute with content
release or feed into clone
Recover variation qi and identify subset Si used in
the clone or recovered pirated content.
if Si is a leaf then
Si is identiﬁed as a traitor and revoked in future
uniﬁed MKBs; also remove Si from F
else
Subdivide Si into q subdivided subsets
Remove Si from F , but add the q newly subdi-
vided subsets into F
4:
5:
6:
7:
8:
9:
10:
11:
shown in Figure 1. It follows the same three main steps.
The ﬁrst step is to construct a uniﬁed MKB and distribute
it with the content or feed it into the clone. Remember a
uniﬁed MKB is both operational and forensic. The second
step is to recover a pirated content/key version or get a
response from the clone. The third step is to update the
frontier based on the response and go to loop the ﬁrst step
again. The difference is that a forensic testing in NNL
scheme gets only two results, namely play or not-play the
content; in uniﬁed system tracing each uniﬁed MKB will
give the tracing agency one of the q results.
Of course uniﬁed MKBs are created slightly differently
as the original forensic MKBs. Now we have to carefully
assign the different media keys to different subsets in the
current frontier before constructing uniﬁed MKBs. As one
can imagine, the best strategy to assign the media key
versions to the subsets in current frontier partly depends
on the attack strategy. For example, they may choose to
use one traitor’s keys until he is revoked and keep other
identities in reserve; or they choose to use more traitors’
keys to delay any one traitor’s identity being detected.
Since we do not know the attack strategy and the attackers
equally do not know our tracing strategy, literature often
assumes a random strategy. For example, NNL tracing
assumed attackers randomly choose to use one key they
have on the current frontier. If the key is enabled it plays;
if the key is disabled it does not play. We show two
different algorithms in Algorithm 2 and Algorithm 3 for
two different attack strategies.
In Algorithm 2 for “single identity until revoked” strat-
egy, it starts with a frontier with q subsets, each assigned
144
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:13:28 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 3 Dynamic tracing to defend against attacks in
random strategy
1: The inactive group I = {root}, The initial frontier F
contains a single group I
2: loop
3:
Distribute q versions evenly amongst each group in
the frontier, each group gets q/|F| versions
For each group G in F, distribute all versions as-
signed to the group evenly amongst each subset in
the group, each subset gets: x = q/(|F||G|)
If x >= 1, for each subset S in group G, sub-divide
S into x smaller subsets, and distribute x versions
to x smaller subsets
If x < 1, randomly distribute q/|F| versions among
all subsets in G, some subsets get the same version.
Construct a uniﬁed MKB enabling all subsets using
the different versions of the media keys assigned to
each subset and distribute the MKB with content or
feed into clone
{Si, Sj..} were given version v
if A subset Si is a leaf then
else
Si is identiﬁed as a traitor and revoked in future
MKBs
Create a new group G’ = {Si, Sj...}
(cid:2) ⊂ children(I), add G’ into F, update I =
If G
I- G’,
(cid:2) ⊂ children(G)(an existing active group in
If G
F), add G’ to F, add G-G’ to I, remove G from F
8: With the recovered version v, ﬁnd which subsets
4:
5:
6:
7:
9:
10:
11:
12:
13:
14:
one of the q media keys. We will create a uniﬁed MKB
based on this assignment and distribute it with the content
or feed into the clone. Once a version is responded, the
identiﬁed suspect subset will be split into q subsets. Those
newly spawn child subsets are added into the frontier
replacing their parent subset. In the new frontier, we assign
almost all of the q versions to those newly added subsets,
and assign one version to all the remaining subsets. A new
uniﬁed MKB is constructed based on this new assignment
on the new frontier. The process repeats with the new
uniﬁed MKB.
In Algorithm 3 for random attack strategy, we will
group those non-revoking subsets in the frontier. An inac-
tive group contains all currently believed innocent subsets.
The frontier initially only contains the inactive group that
consists of the subset associated with the root node. The
subsets that correspond to a version responded from the
attacker will form an active group. So an active group
contains one or more subsets that the traitors belong to.
With the attackers responding and suspect subsets being
identiﬁed, more and more active groups are formed and
145
added into the frontier. The q versions will spread evenly
among the groups in the frontier. If there are multiple
subsets in a group, the versions assigned to the group will