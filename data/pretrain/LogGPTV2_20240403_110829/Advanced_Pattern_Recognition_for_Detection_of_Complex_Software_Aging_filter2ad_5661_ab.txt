(sums and derivatives) were generated to complement or 
replace the corresponding raw data signals. The combined 
measured  and  derived  signals  resulted  in  100  correlated 
signals used in the modeling and monitoring analysis. 
4. Analytical results 
The  following  describes  two  examples  of  the  results. 
Figure  2  shows  several  actual  signal  values,  estimates, 
and alert patterns for a window from one hour before to 
one-half hour after a latch contention event from August 
2000. The  top  three  sub-plots  represent  the  three  canary 
wait-time variables, signals 54-56, defining the start of the 
event at t = 54 min. Note here t = 0 is an arbitrary time 
corresponding  to  the  beginning  of  the  viewed  window. 
Several signals alert just prior to the latch: signals 60, 62, 
and 70 from the (cid:145)ao(cid:146) group, and signals 93 and 100 from 
(cid:145)at(cid:146).  About a half-hour prior to the latch, signals 11 and 
14  from  group  (cid:145)ac(cid:146)  alert  signifying  higher  than  the 
expected value, accompanied by a spike in signal 61 from 
(cid:145)ao(cid:146).  Signal  14  deviates  significantly  from  its  estimated 
value from t = 22 to 26 min; signal 11 deviates from its 
estimate starting at t = 23 min and alerts from t = 26 to 28 
min. Lines are drawn across the plots at t = 22 min (onset 
of alerts) and t = 54 (onset of latch). 
Figure 2. August 2000 Latch Contention Event. SmartSignal 
eCM alerts start at t = 22 min; Canary-test fault (signals 54, 55, 
56) starts at t = 54 min. 
Figure  3  shows  data  for  a  window  from  two  hours 
before  to  one  hour  after  a  latch  contention  event  from 
October 2000. The top three sub-plots represent the three 
canary  wait-time  variables;  the  event  begins  at  t  =  127 
minutes (t = 0 is arbitrary).  Several signals begin to alert 
a  few  minutes  prior  to  the  latch  (t  =  112  min),  and 
continue  through  the  event:  signals  59,  62,  and  70  from 
the (cid:145)ao(cid:146) group, signal 35 from the (cid:145)ai(cid:146) group, and signals 
90, 91, and 98 from the (cid:145)at(cid:146) group.  Individual alerts are 
also apparent in many of those signals at times around 80 
min and a few around t = 43 min. Nearly two hours before 
the event, from t = 17 to 42 min, signal 44 from the (cid:145)aj(cid:146) 
group  is  showing  constant  alerts  as  the  actual  value  is 
significantly  lower  than  the  estimate.  From  t  =  30  to  43 
min, signal 48 from the (cid:145)ak(cid:146) group and signals 65 and 67 
from  the  (cid:145)ao(cid:146)  group  are  also  alerting  from  abnormally 
high values. Lines are drawn across the plots at t = 17 min 
(onset of alerts) and t = 127 (onset of latch). 
5. Discussion 
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:22:17 UTC from IEEE Xplore.  Restrictions apply. 
Empirical  models  were  created  based  on  time  periods 
spanning weeks with no latching events.  Models predict 
most  monitored  signals  with  very  high  accuracy.    Test 
results  show  13  variables  consistently  demonstrate  early 
warning,  from  5  minutes  (high  consistency)  to  2  hours 
(low consistency) prior to a latch contention hang; 7 other 
variables  occasionally  demonstrate  early  warning.  The 
signals  found  to  alert  were  related  to  the  Concurrent 
Manager, 15  min (from  group (cid:145)ac(cid:146)), Total Free Memory 
in  Share  Pool  (sum  (cid:145)ai(cid:146)),  Disk  Reads  grouped  by  size 
(from  group  (cid:145)ak(cid:146)),  Latch  Misses  (group  (cid:145)ao(cid:146)),  DB 
Statistics:  Physical  Read/Write  Rates  (derivatives  from 
group (cid:145)at(cid:146)), and the Ratio of Parse Time Elapsed to Parse 
Time  CPU  (derived  from  (cid:145)at(cid:146)).  Each  time  the  eCMTM 
provided early warning, signals from the (cid:145)ai(cid:146), (cid:145)ao(cid:146) and (cid:145)at(cid:146) 
groups  demonstrated  alerts  prior  to  the  latch  event.  We 
speculate that the relationship of total free memory, latch 
misses  and  database  statistics  may  be  relevant 
to 
increased  availability  and  quality-of-service  performance 
for the server. 
Consider  the  possibility  of  utilizing  the  early  warning 
information to avoid unnecessary downtime caused by a 
latch contention event.  Once a latch contention begins, a 
shared memory pool flush can disrupt service for up to 30 
minutes.  Early  warning  would  allow  administrators  to 
conduct a preemptive flush prior to the hang, decreasing 
the  duration  of  transaction  interference  from  30  minutes 
(flush duration during a hang) to 8 minutes (flush duration 
prior  to  a  hang).  Assuming  that  at  least  5  minutes  of 
eCMTM  alerts  are  required  for  an  administrator  to 
acknowledge notification of an impending event, at least 
two  of  the  events  investigated  here  could  have  been 
avoided. For a 22- minute reduction of denied service for 
each,  at  a  near-peak  time  that  is  processing  $100k  per 
minute  of  booking,  shipping,  and  billing  orders, 
approximately  $4.4M  of  transaction  interference  may 
have  been  avoided.  The  actual  dollar  amount  saved  is 
difficult to measure because some orders are processed at 
a later time; but the impact on reliability and performance, 
as  well  as  on  productivity  of  the  hundreds  of  company 
users of this business critical system, is evident. 
This  study  demonstrates 
the  feasibility  of  using 
advanced  statistical  pattern  recognition  for  detection  of 
the  incipience  of  a  complex  software  aging  mechanism 
known  as  latch  contention  in  large  OLTP  eCommerce 
compute  servers.    The  test  results  provide  a  substantial 
early  warning  capability  from  the  eCMTM  tool,  with 
numerical results of 5 minutes to 2 hours advanced alerts.  
Nevertheless,  because 
investigation  was 
conducted as a "blind study" by SmartSignal to determine 
how well their off-the-shelf tool would perform with raw 
signals  treated  as  a  black  box  system,  it  should  be 
considered that there was no eCMTM model optimization 
(i.e.  analysis  of  input  variables  to  remove  weakly 
correlated  variables,  training  set  optimization,  or  pre-
this  pilot 
processing  to  enhance  model  accuracy).    It  is  therefore 
expected  that  when  a  real-time  eCMTM-based  software 
aging  and  rejuvenation  agent  is  deployed  for  the  OLTP 
server  in  a  follow-on  implementation  effort,  the  results 
obtained with that system may be improved. 
Figure 3. October 2000 Latch Contention Event. SmartSignal 
eCM alerts start at t = 17 min; canary-test fault (signals 54, 55, 
56) starts at t = 127 min. 
It is also noteworthy that no false alarms were obtained 
by  eCMTM  in  this  pilot  investigation.    Although  there 
were  some  individual,  uncorrelated  SSCADI  alerts  on 
individual  signals,  there  were  no  simultaneous  multiple-
parameter  alarms  that  would  have  triggered  a  premature 
rejuvenation  in  a  real-time  implementation.  In  general, 
this  is  a  substantial  advantage  of  a  technique  based  on 
multivariate  pattern  recognition,  as  compared  to  the 
conventional  practice  of  using 
limits  on 
performance and/or resource-consumption variables.  The 
threshold 
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:22:17 UTC from IEEE Xplore.  Restrictions apply. 
difficulty of applying threshold limit tests to noisy process 
variables, as observed in large eCommerce data centers, is 
that spurious data values can trigger false alarms.  In the 
case of software aging and rejuvenation, the false alarms 
can  trigger  unnecessary  rejuvenation  actions,  which  can 
adversely  impact  performance  and/or  availability.  If 
thresholds are moved further apart to avoid false alarms, 
then the software aging mechanism can be more severely 
progressed  before  any  alarms  are  generated-and  the 
system  can  hang,  panic,  or  crash  before  a  rejuvenation 
action is initiated.  Multivariate pattern recognition avoids 
unnecessary  compromise  between  detection  sensitivity 
and  false  alarms,  allowing 
the  surveillance  system 
architect to independently specify the desired false-alarm 
and  missed-alarm  probabilities.    This  feature  makes  the 
integrated 
system 
amenable to formal reliability analysis by advanced tools 
such as  SHARPE [12].  With SmartSignal eCMTM, each 
signal monitored has a quantifiable (and user adjustable) 
mean-time between failures, where a "failure" is defined 
to be a false or missed alarm. This amenability to formal 
reliability  analysis  methodology 
is  not  shared  by 
surveillance  methods  based  upon  neural  networks, 
because  stochastic  optimization  of  the  weights  in  neural 
networks  makes 
propagation-of-uncertainty 
analyses intractable.  
system/monitored 
surveillance 
formal 
6. Conclusions 
that  of 
Software  aging  is  a  transient  phenomenon  that  affects 
computing  systems  and  can  cause  degradation 
in 
performance,  and  can  additionally  cause  them  to  hang, 
panic  or  crash.    In  this  study,  we  have  explored  the 
feasibility  and  practicability  of  exploiting  advanced 
statistical  pattern  recognition  for  proactively  detecting 
incipient conditions that can lead to software aging.  The 
techniques  embodied  in  the  commercially  available  tool 
SmartSignal  eCMTM  were  applied  to  a  particularly 
complex  software  aging  mechanism, 
latch 
contention  in  large  OLTP  DBMS  servers.  The  eCMTM 
results demonstrate a significant early warning capability 
from 5 minutes to 2 hours prior to a latch contention fault, 
without  false  alarms.    Several  parameters  repeatedly 
showed  abnormal  signal  deviation  prior  to  the  fault, 
particularly pertaining to total free memory, latch misses 
and  database  statistics.    Early  warning  of  an  incipient 
latch  contention  hang  may  allow  operators  to  flush  the 
system prior to a hang, reducing downtime by as much as 
22 minutes per event. For the data analyzed in this study 
covering  5  months  of  time,  we  calculate  as  much  as 
$4.4M of transaction interference may have been avoided 
by  using  the  SmartSignal  eCMTM  equipment  condition 
monitoring  system.  The  presented  empirical  modeling 
approach,  using  early  warning  fault  detection  systems 
applied  to  complex  software  aging  phenomena,  is  an 
important first step towards automated, real-time software 
aging  and  rejuvenation  algorithms  for  enhancing  the 
availability and quality of  service  for future eCommerce 
data centers. 
7. References 
[1] SmartPartner Magazine, September 18, 2000. 
[2] K. Validyanathan, R. E. Harper, S. W. Hunter, and K. 
S.  Trivedi,  (cid:147)Analysis  and  Implementation  of  Software 
Rejuvenation  in  Cluster  Systems,(cid:148)  ACM  Sigmetrics 
2001/Performce 2001, June 2001. 
[3]  K.  S.  Trivedi,  K.  Vaidyanathan  and  K.  Goseva-
Popstojanova, (cid:147)Modeling and Analysis of Software Aging 
and Rejuvenation,(cid:148) IEEE Annual Simulation Symposium, 
April 2000. 
[4]  T.  Dohi,  K.  Goseva-Popstojanova  and  K.  Trivedi, 
(cid:147)Analysis  of  Software  Cost  Models  with  Rejuvenation,(cid:148) 
IEEE  International  Symposium  on  High  Assurance 
Systems Engineering (HASE 2000), November 2000. 
[5]  W.  Yurcik  and  D.  Doss,  (cid:147)Achieving  Fault-Tolerant 
Software with Rejuvenation and Recon-figuration,(cid:148) IEEE 
Software, pp. 48-52, July/August 2001. 
[6]  K.  C.  Gross,  R.  M.  Singer,  S.  W.  Wegerich,  J.  P. 
Herzog,  R.  VanAlstine,  and  F.  Bockhorst.,  (cid:147)Application 
of a Model-based Fault Detection System to Nuclear Plant 
Signals,(cid:148) Proceedings, Intelligent System  App. to Power 
Systems (ISAP (cid:146)97), Seoul, Korea, July 6-10, 2001. 
[7] R. M. Singer, K. C. Gross, J. P. Herzog, R. W. King, 
and  S.  Wegerich,  (cid:147)Model-based  Nuclear  Power  Plant 
Monitoring  and  Fault  Detection:  Theoretical  Foun-
dations,(cid:148)  Proceedings,  Intelligent  System  App.  to  Power 
Systems (ISAP (cid:146)97), Seoul, Korea, July 6-10, 2001. 
[8]  K.  C.  Gross,  S.  Wegerich,  and  R.  M.  Singer,  (cid:147)New 
Artificial  Intelligence  Technique  Detects  Instrument 
Faults  Early,(cid:148)  Power  Magazine,  (42)  no.  6,  pp.  89-95, 
1998. 
[9] J. W. Hines, A. Gribok, and B. Rasmussen, (cid:147)On-Line 
Sensor Calibration Verification: A Survey,(cid:148) Presented at 
the  14th  International  Congress  and  Exhibition  on 
Condition  Monitoring  and  Diagnostic  Engineering 
Management, Manchester, England, Sept., 2001. 
[10]  W.  Nieman  and  R.  Singer,  (cid:147)Detection  of  Incipient 
Signal or Process Faults in a Co-Generation Plant Using 
the  Plant  ECM  System,(cid:148)  Proceedings,  Power  Plant  Sur-
veillance and Diagnostics, Halden, Norway, August 2001.  
[11]  S.  Wegerich,  R.  Singer,  J.  Herzog,  and  A.  Wilks, 
(cid:147)Challenges  Facing  Equipment  Condition  Monitoring 
Systems,(cid:148)  Proceedings,  Maintenance  and  Reliability 
Conference (MARCON), Gatlinburg, TN, May 6-9, 2001.  
[12]  R.  A.  Sahner,  K.  S.  Trivedi,  and  A.  Puliafito, 
(cid:147)Performance  and  Reliability  Analysis  of  Computer 
Systems using the SHARPE Software Package,(cid:148) Kluwer 
Academic Pub. 1995.  
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:22:17 UTC from IEEE Xplore.  Restrictions apply.