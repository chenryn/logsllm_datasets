##### Issue Type:
Bug report
##### Ansible Version:
ansible 2.0.0.2  
ansible 2.1.0 (devel `7e39634`)
##### Ansible Configuration:
N/A
##### Environment:
Ubuntu 15.10
##### Summary:
Ansible 2.0 added a feature to use _include_ statements together with
_with_items_ loops. When nesting _include_ statements, (i.e. file _A.yml_
includes _B.yml_ , which includes _C.yml_ ) the _item_ variable is not set
properly, i.e. the inner _include_ \+ _with_items_ loop does not override the
_item_ value from the outer loop.
##### Steps To Reproduce:
_main.yml_
    ---
    - include: include_outer.yml
      with_items:
        - 1
        - 2
        - 3
_include_outer.yml_
    ---
    - debug:
        msg: "Outer include: item={{ item }}"
    - include: include_inner.yml
      with_items:
        - A
        - B
        - C
_include_inner.yml_
    ---
    - debug:
        msg: "Inner include: item={{ item }}"
##### Expected Results:
    "msg": "Outer include: item=1"
    "msg": "Inner include: item=A"
    "msg": "Inner include: item=B"
    "msg": "Inner include: item=C"
    "msg": "Outer include: item=2"
    "msg": "Inner include: item=A"
    "msg": "Inner include: item=B"
    "msg": "Inner include: item=C"
    "msg": "Outer include: item=3"
    "msg": "Inner include: item=A"
    "msg": "Inner include: item=B"
    "msg": "Inner include: item=C"
##### Actual Results:
    "msg": "Outer include: item=1"
    "msg": "Inner include: item=1"
    "msg": "Inner include: item=1"
    "msg": "Inner include: item=1"
    "msg": "Outer include: item=2"
    "msg": "Inner include: item=2"
    "msg": "Inner include: item=2"
    "msg": "Inner include: item=2"
    "msg": "Outer include: item=3"
    "msg": "Inner include: item=3"
    "msg": "Inner include: item=3"
    "msg": "Inner include: item=3"