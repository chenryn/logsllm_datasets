HERE_I_AM_T秒内没有 HERE_I_AM报文，路由器就会发送此报
发送过WCCP2_HERE_ 文，以查看是否应该将这个缓存从服务组中
I_AM报文的缓存 删除掉。来自缓存的正确响应为三条完全相
同的WCCP2_HERE_I_AM报文，中间间隔
HERE_I_AM_T/10秒
WCCP2_HERE_I_AM的报文格式为：
WCCP Message Header
Security Info Component
Service Info Component
Web-cache Identity Info Component
Web-cache View Info Component
Capability Info Component (可选)
Command Extension Component (可选)
WCCP2_I_SEE_YOU的报文格式为：
WCCP Message Header
Security Info Component
重定向与负载均衡 ｜ 493
Service Info Component
Router Identity Info Component
Router View Info Component
Capability Info Component (可选)
Command Extension Component (可选)
WCCP2_REDIRECT_ASSIGN的报文格式为：
WCCP Message Header
Security Info Component
Service Info Component
Assignment Info Component, or Alternate Assignment Component
WCCP2_REMOVAL_QUERY的报文格式为：
WCCP Message Header
Security Info Component
Service Info Component
Router Query Info Component
3. 报文组件
每条WCCP2报文都由一个首部和一些组件构成。WCCP首部信息包含报文类型
（Here I Am、I See You、Assignment或Removal Query）、WCCP版本和报文长度
（不包括首部的长度）。
每个组件都以一个描述组件类型和长度的4字节首部开始。组件长度不包括组件首
471 部的长度。报文组件如表20-5所述。
表20-5 WCCP2报文组件
组 件 描 述
安全信息 包含安全选项和安全实现。安全选项可以是：
WCCP2_NO_SECURITY (0)
WCCP2_MD5_SECURITY (1)
如果选项是不安全的（NO），安全实现字段就不存在。如果选项为MD5，安全实
现字段就是一个包含了报文校验和、服务组密码的16字节的字段。密码不能超过
8个字节
服务信息 描述服务组。服务类型ID可以使用两个值：
WCCP2_SERVICE_STANDARD (0)
WCCP2_SERVICE_DYNAMIC (1)
如果服务类型是标准的（STANDARD），服务就是完全由服务ID定义的知名服务。
HTTP就是个知名服务。如果服务类型是动态的（DYNAMIC），就由下列设置来定
义服务：优先级、协议、服务标记（决定是否散列）以及端口
路由器身份信息 包含路由器的IP地址和ID，并（通过IP地址）列出了路由器想要通信的所有
Web缓存
494 ｜ 第20章
（续）
组 件 描 述
Web缓存身份信息 包含了Web高速缓存的IP地址和重定向散列表映射
路由器视图信息 包含了路由器的服务组视图（路由器和缓存的身份）
Web缓存视图信息 包含了Web缓存的服务组视图
分配信息 显示了如何将Web缓存分配到特定的散列桶中去
路由器查询信息 包含了路由器的IP地址、所要查询的Web缓存的地址以及服务组中最近从Web
缓存中收到Here I Am报文的路由器ID
能力信息 那些需要广告所支持的分组转发方式、负载均衡和分组返回方式的路由器会使用
此信息。那些要让路由器知道它希望使用哪种方法的Web缓存也会使用此信息
替换分配 包含了负载均衡的散列表分配信息
分配图 包含了服务组的“掩码/值”设置元素
命令扩展 Web缓存用它来告诉路由器它们正在关机。路由器用它来确认缓存是否关闭
4. 服务组
服务组（service group）由一组支持WCCP的路由器和缓存组成，它们之间可以交
换WCCP报文。路由器会向服务组中的缓存发送Web流量。服务组的配置确定了
如何将流量分配到服务组的缓存中去。路由器和缓存会在Here I Am和I See You报
文中交换服务组的配置信息。
5. GRE分组封装
支持WCCP的路由器会用服务器的IP地址将HTTP分组封装起来，将其重定向到
特定的服务器上去。分组封装中还包含了IP首部的proto字段，用来说明通用路
由器封装（GRE）。proto字段的存在告诉接收代理，它有一个封装的分组。分组
被封装起来，客户端的IP地址就不会丢失了。图20-12显示了GRE分组的封装过程。 472
发往代理 Proto:GRE
3.3.3.3
8080
来自：客户端
来自：客户端：
1.1.1.1
1.1.1.1
80 发往：Joe的服务器 穿过WCCP路由器 80 发往：Joe的服务器
2.2.2.2 2.2.2.2
80 80
HTTP数据
HTTP数据
图20-12 WCCP路由器如何修改HTTP分组的目的IP地址
重定向与负载均衡 ｜ 495
6. WCCP的负载均衡
除了路由功能之外，WCCP路由器还可以在几个接收服务器之间进行负载均衡。
WCCP路由器及其接收服务器会交换心跳报文（heartbeat message），以便相互通知
自己处于启动运行状态。如果某特定接收服务器停止发送心跳报文，WCCP路由器
就会将请求流量直接发送到因特网上，而不会将其重定向给那个节点。节点重新提
供服务时，WCCP路由器会再次开始接收心跳报文，并继续向节点发送请求流量。
20.7 因特网缓存协议
ICP（因特网缓存协议）允许缓存在其兄弟缓存中查找命中内容。如果某个缓存中
没有HTTP报文所请求的内容，它可以查明内容是否在附近的兄弟缓存中，如果在，
就从那里获取内容，以避免查询原始服务器而带来的更多开销。可以把ICP当作一
个缓存集群协议。HTTP请求报文的最终目的地可以通过一系列的ICP查询确定，
从这个角度来说，它就是一个重定向协议。
ICP是一个对象发现协议。它会同时去询问附近的多个缓存，看看它们的缓存中
是否有特定的URL。附近的缓存如果有那个URL的话，就会返回一个简短的报文
HIT，如果没有，就返回MISS。然后，缓存就可以打开一条到拥有此对象的邻居缓
存的HTTP连接了。
ICP是很简单直接的。ICP报文是一个以网络字节序表示的32位封装结构，这样更
473 便于进行解析。为了提高效率，可以由UDP数据报承载其报文。UDP是一种不可
靠的因特网协议，说明在传输的过程中数据可能会被破坏，因此使用ICP的程序要
具有超时功能，以检测丢失的数据报。
下面简要描述一下ICP报文中的部分信息。
• Opcode（操作码）
Opcode是个8位的二进制值，用以描述ICP报文的含义。基本的opcode包括
ICP_OP_QUERY请求报文和ICP_OP_HIT和ICP_OP_MISS响应报文。
• 版本
8位的版本号描述了ICP协议的版本编号。Squid使用的ICP版本记录在RFC
2186第2版中。
• 报文长度
以字节为单位的ICP报文总长。因为只有16位，所以ICP报文的长度不能超过
16 383字节。URL通常都小于16 KB，如果超过这个长度，很多Web应用程序
就无法处理它了。
496 ｜ 第20章
• 请求编号
支持ICP的缓存会用请求编号来记录多个同时发起的请求和响应。ICP应答报文
数必须与触发应答的ICP请求报文数相同。
• 选项
32位的ICP选项字段是个包含了若干标记的位矢量，这些标记可用来修改ICP
的行为。ICPv2定义了两个标记，这两个标记都会修改ICP_OP_QUERY请求。
ICP_FLAG_HIT_OBJ 标记用来启动或禁止在 ICP 响应中返回文档数据。ICP_
FLAG_SRC_RTT标记请求由兄弟缓存测量的、到原始服务器的环回时间的估
计值。
• 可选数据
保留了32位的可选数据用于可选特性。ICPv2使用了可选数据的低16位来装载
从兄弟缓存到原始服务器的可选环回时间的估计值。
• 发送端主机地址
承载了报文发送端32位IP地址的著名字段。实际中并未使用。
• 净荷
净荷内容的变化取决于报文的类型。对ICP_OP_QUERY来说，净荷是一个4
字节的原始请求端主机地址，后面跟着一个由NUL结尾的URL。对ICP_OP_
HIT_OBJ来说，净荷是一个由NUL结尾的URL，后面跟着一个16位的对象长
度，接着是对象数据。
更多有关ICP的信息，请参见RFC 2186和RFC 2187。从美国应用网络研究国
家实验室的网站上（http://www.nlanr.net/Squid/）也可以获得一些很棒的有关
ICP和对等实体的参考文献。 474
20.8 缓存阵列路由协议
代理服务器通过拦截来自单个用户的请求，提供所请求Web对象的缓存副本，极大
地降低了发往因特网的流量。但随着用户数的增加，大量流量可能会使代理服务器
自身超载。
对此问题的一种解决方案就是使用多个代理服务器将负载分散到一组服务器上。
CARP（缓存阵列路由协议）是微软公司和网景公司提出的一个标准，通过这个协
议来管理一组代理服务器，使这组代理服务器对用户来说就像一个逻辑缓存一样。
CARP是ICP的一个替代品。CARP和ICP都允许管理者通过使用多个代理服务器
来提高性能。本节讨论了CARP与ICP的区别，用CARP代替ICP的优缺点以及
重定向与负载均衡 ｜ 497
CARP协议实现上的一些技术细节。
ICP中出现缓存未命中时，代理服务器会用ICP报文格式来查询附近的缓存，以确
定Web对象是否存在。附近的缓存会以HIT或MISS进行响应，请求代理服务器会
用这些响应来选择能够获取到对象的最适当的位置。如果ICP代理服务器是以层次
结构排列的，未命中的查询会被提交给其父代理。图20-13以图形方式显示了如何
通过ICP来解决命中和未命中的问题。
命中或未命中应答
（时间n+1）
兄弟代理
）
n
间
时 如果兄弟代理都返回未命中，
（
就去轮询该代理的上一级代理
询
轮
客户端请求 请求（时间n+2）
因特网
浏览器 缓存代理 父代理
轮
询
（
时
间
n
）
命中或未命中应答
（时间n+1）
兄弟代理
图20-13 ICP查询
475 注意，通过ICP协议连接起来的每个代理服务器都是将内容进行了冗余镜像的独立
缓存服务器，这就说明在不同的代理服务器之间复制Web对象条目是可行的。相
反，用CARP连接起来的一组服务器会被当作一个大型的服务器，其中每个组件服
务器都只包含全部缓存文档中的一部分。通过对某个Web对象的URL应用散列函
数，CARP就可以将此对象映射到特定的代理服务器上去。每个Web对象都有一个
唯一的家，所以我们可以通过单次查找确定对象的位置，而无须去查询集合中配置
的每个代理服务器。图20-14总结了CARP重定向的方式。
498 ｜ 第20章
兄弟代理
客户端请求 请求（时间n+2）
因特网
浏览器 缓存代理 父代理
（时间n）
用来确定应该联系哪个
兄弟代理缓存的散列函数
响应（ 时
间n+1）
兄弟代理