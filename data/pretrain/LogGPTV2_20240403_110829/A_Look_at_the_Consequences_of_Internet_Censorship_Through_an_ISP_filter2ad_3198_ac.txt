obtained by active testing. If ASNtrace belongs to an ISP within
Pakistan, while ASNreal does not, the query received a false re-
sponse. This technique has the limitation that we cannot detect
cases where the censor’s redirection points to an IP address that be-
longs to an AS outside the country. The same problem holds for a
censor who employs null-routing. Furthermore, this technique will
ﬂag caching servers employed within the country.6
TCP/IP blocking. IP-level blocking is an ambiguous indicator
of censorship, as it is hard to distinguish from legitimate causes
of inaccessibility. However, we can weed out some of the non-
censorship cases because censorship generally requires that all at-
tempts to establish a connection to a blocked address will fail. To
ﬁnd such IP addresses, we use the heuristic described below.
First, iterate over all the A records for queries resolved correctly,
and for each connection seen for one of these addresses, label it
according to the following three connection states:
• PARTIAL: No SYN seen from the connection originator, but
packets seen from the responder.
• EST: Full TCP establishment handshake observed.
• BLOCKED: The originator sent a SYN but either (i) re-
ceives no response, or (ii) receives a TCP RST (potentially
injected by the censor).
6Indeed we identify the ISP’s caching machines using this method-
ology.
We ﬂag IP addresses for which we never observe EST and for
which we observe BLOCKED at least once. We map these IP ad-
dresses back to their corresponding domain names in the DNS logs
and consider these domains as potentially censored.
HTTP Level Blocking. At the HTTP level, a censor can block
via: (i) No HTTP response (for example, by injecting a RST after
connection establishment), (ii) return an HTTP-level error response
code, or (iii) return a false response such as a block page (either
directly or via HTTP-level redirection). We assess these as follows:
• No Response: This can occur for legitimate reasons. We do
not attribute it to censorship when the censored content is un-
known. For known censored content, consistently observing
TCP-layer blocking can conﬁrm censorship (for example, the
case where the responder always sends a RST in response to
an HTTP request).
• Error Response Codes: This error can be ambiguous be-
cause a client can receive such responses due to resources
legitimately not found or forbidden. For known censored
content, however, this provides a strong indicator if it is the
dominant behavior.
• Block Page such as via 3XX redirection: The censor may
redirect diverse domains/sub-domains to the same Location.
We can detect this mechanism by analyzing histograms of
the Location header in responses. If, however, the censor
redirects attempted access for different content to distinct lo-
cations (such as by incorporating the request URI into the
redirect location), the histogram will not reveal any common
redirection target. In this case, the analysis in the next item
might reveal blocking.
• Block Page via 2XX response: We can detect when the cen-
sor sends the same block page for multiple URLs by ﬁnger-
printing block pages known to be associated with the cen-
sor, or by looking for potential candidates by investigating
spikes/modes in a histogram of the number of bytes sent in
server reply items.
4.2 Identifying YouTube Censorship
Table 4 shows our ﬁndings for deducing the mechanism of
YouTube censorship in Pakistan at the two different points in time
that are currently under study.
First, we observe DNS redirection in both traces for queries re-
solved using the ISP’s DNS resolvers: all YouTube queries received
275YouTube
Porn
Trace
18Sep12
02Aug13
21Dec11
28Feb12
18Sep12
02Aug13
DNS
DNS_REDIR
DNS_REDIR
DNS_REDIR
DNS_REDIR
DNS_REDIR
DNS_REDIR
IP
—
—
—
—
—
IP_BLOCK
HTTP
HTTP_REDIR
HTTP_NORESP
—
—
—
HTTP_NORESP
Table 4: Censorship mechanisms for YouTube and porn blocking
as observed in our post-censorship traces. “—” indicates that we
did not ﬁnd any concrete evidence of the given mechanism.
Trace
21Dec11
28Feb12
18Sep12
02Aug13
DNS
226
145
105
100
IP blocking HTTP blocking
2 / 0%
1 / 0%
6 / 0%
8 / 62%
3 / 0%
7 / 0%
56 / 41%
0 / 0%
Table 5: Number of porn domains potentially blocked at each layer.
For IP and HTTP blocking, we also show the percentage overlap
with DNS blocking. HTTP blocking when present took the form of
consistent No Response conditions.
replies with a single ISP-owned address. Queries sent to non-ISP
resolvers obtained correct answers. Second, we do not ﬁnd IP
blocking in either trace. We see only one potentially blocked ad-
dress in 18Sep12, which reverse-maps to a YouTube content server.
Finally, in addition to DNS-based blocking, we also observe
HTTP-level blocking in both traces. In 18Sep12, we ﬁnd block-
ing of YouTube via 3XX redirection to an IP owned by a large
local provider, one of the two with direct international connec-
tivity.
In 02Aug13, the blocking shifted from redirection to No
Response.
In traces before 02Aug13 (including pre-YouTube-
censorship traces), the number of YouTube HTTP requests that re-
ceived no response averaged ≈ 2%, whereas in 02Aug13 this num-
ber jumps to ≈ 95%, with nearly all of these reset by the responder.
These observations conﬁrm the two-layered censorship mecha-
nism for YouTube described by a prior study [32], i.e., ISPs block
locally using DNS redirection, and the two large providers in the
country with direct international connectivity (PTCL and TWA)
employ HTTP-level blocking.
4.3
Identifying Porn Censorship
To accurately identify porn censorship, we characterize all web-
sites recorded in our traces using McAfee’s URL categorization
service [30] and extract the ones it labels as Pornography. We
spot-checked a random sample of its decisions (both positive and
negative) to conﬁrm its apparent accuracy and lack of any regional
lacuna. We did not ﬁnd any errors.
In recovering the censor’s porn blacklist, we worked on each
trace in turn. Recovered blacklists necessarily represent only a frac-
Porn domains
Unblocked
Blocked
New entries
% overlap
Oct11 Dec11
1,313
1,181
226
0
—
0
— 8.2%
Feb12
1,609
145
37
0.2%
Sep12 Aug13
2,210
2,352
105
161
0
36
0.5%
0%
Table 6: Evolution of porn blacklist as seen in our traces. % over-
lap corresponds to the proportion of new entries present (and un-
blocked) in all previous traces. Oct11 reﬂects two traces captured
during that month.
tion of the censor’s true blacklist, since our data-driven approach
can only identify the fraction of censored content present in our
traces.
We aim to recover to blacklists at the granularity of registered
domains, per the master list kept by Mozilla [31], since later in
our analysis we use that granularity for characterizing trafﬁc to
blacklisted domains. Where applicable, we mark domains in our
blacklist as partially blocked. We consider the possibility of partial
blocking of a domain only at IP-level (due to incomplete IP address
coverage) and HTTP-level (due to incomplete regex coverage). For
DNS, we assume that the true blacklist contains domains at the
granularity of registered domains. Hence, we only add a domain to
our blacklist if we observe consistent blocking behavior for all of
its subdomains that appear in the respective trace.
Table 4 summarizes the mechanisms used for censorship for the
4 post-porn censorship traces. Table 5 shows the corresponding
development of blacklist. We observe the following:
• We ﬁnd evidence of DNS redirection in all four traces.
All ISP resolvers consistently redirect blocked queries to
the same ISP-owned address (the same address as used for
YouTube censorship). However, non-ISP resolvers resolve
the blocked content queries correctly, indicating that the cen-
sor does not employ DNS injection such as discussed by
Duan et al. [17]. Table 5 lists the number of blacklisted do-
mains per trace that we recover using this indicator.
• We also observe IP blocking for some porn domains. Since
this is an ambiguous indicator, we check for any overlap of
potential censored domains we ﬁnd using IP blocking with
those found via DNS blocking. We ﬁnd signiﬁcant evidence
of IP based blocking only in 18Sep12, with a 41% overlap
with our DNS blacklist. The TCP state of these connec-
tions indicates that the originator never received any response
packet from the responder, consistent with blackholing.
• We did not ﬁnd any instances of users receiving an HTTP
block-page either through injection or redirection. Some do-
mains consistently receive no response, but with negligible
overlap with our DNS blacklist, except for the last trace, as
shown in Table 5. The TCP states of these connections reveal
that in a high percentage of the cases, the responder termi-
nated the connection by sending a RST, indicative of likely
censorship.
Based on the above observations, we do not ﬁnd concrete evi-
dence of extensive IP- or HTTP-level blocking for porn, except for
the cases where we observe a high overlap with our DNS blacklist.
Accordingly, we do not include these ambiguous domains in our
blacklist reconstruction. Doing so omits only a handful of poten-
tially blocked domains.
Table 6 illustrates how the porn blacklist evolved over time. We
can in addition consider the question of whether the censoring au-
thority acts in a reactive fashion; that is, do they block porn do-
mains that begin to gain popularity with users? In pre-block traces
(03Oct11 and 22Oct11), we see 1,313 unique porn domains. We
ﬁnd that 8.2% of these domains were blocked in 21Dec11. After
the initial dissemination of the blacklist in 21Dec11, we see a lull in
its updating; we observe only ≈ 35 new domains added in each of
28Feb12 and 18Sep12, and no new ones in the last trace. Moreover,
the “new” blocked domains have little overlap with porn domains
previously observed and unblocked—reinforcing information un-
ofﬁcially shared with us by local operators that the central regu-
lator disseminates blacklists to ISPs and that their development is
independent of the porn browsing trends of users. (Section 2).
276Summary. Table 4 summarizes our ﬁndings on the mechanism
of censorship for YouTube and porn as seen in different traces. We
ﬁnd blocking of both YouTube and porn at the DNS-level using
redirection in all of the respective post-block traces. In addition,
in 18Sep12 we ﬁnd YouTube blocked using HTTP redirection, and
porn using IP blocking, and in 02Aug13 both are blocked using
RST injection.
5. METRICS RELEVANT TO CONTENT
PROVIDERS
In this section we discuss two key aspects for our study: (i) what
constitutes a “content provider” relative to each censorship event,
and (ii) the metrics on which we base our assessment of changes
resulting from censorship events (note that we can only apply these
metrics to unencrypted trafﬁc).
Censorship events affect both primary and alternate providers
of the censored content. For the YouTube event, these relate to
the general category of Video Content Platforms, for which we fo-
cus our analysis on four major players: YouTube, DailyMotion,
Tune.pk and Vimeo. These constitute the primary video providers
for Pakistan as based on their market share [2] and the results of
our user survey [45]. For the porn censorship event, we consider
all porn domains seen in our traces as identiﬁed by McAfee’s URL
categorization service in April 2014. Given that our most recent
trace was captured in August 2013, some domains might have been
inaccurately classiﬁed.
The primary metric that we employ is downstream trafﬁc (server
response bytes) served by blocked and alternate content providers,
which we will often abbreviate as “bandwidth” for shorthand. We
base this choice on the observation that both the censored cate-
gories, video and porn, make heavy use of network downloads—
what is censored primarily constitutes images and videos. For these
categories, downstream bandwidth reasonably captures the degree
of user interest in a content provider. This metric also allows us to
readily study shifts in trafﬁc trends in the presence of encryption
technologies—a potential response to broad category-based cen-
sorship.
In addition, for the video category we assess changes in con-
tent embedded in other sites in response to censorship.7 This met-
ric captures the broader ecosystem for users viewing videos some-
times in response to other websites that embed a content provider’s
videos. (Porn content, on the other hand, is presumably only em-
bedded on other porn sites.) After censorship of a content provider,
local websites lack an incentive to embed the provider’s videos.
We now discuss computing these two metrics:
(i) Direct vs. embedded video viewing requests: To distinguish
between these two types of requests, we need to develop signatures
that classify a given URL as one or the other (or neither) of these.
One approach for developing signatures is to analyze trafﬁc dumps
collected by actively downloading video content [24]. However,
given we collected our traces over a span of three years, we cannot
employ an active approach like this, as signatures can change over
the years. To develop signatures that can span our datasets, we use
a data-driven methodology: for each video content platform, we
examine a histogram of its URI root preﬁxes and associate them
with distinct classes of web content based on inspecting the cor-
responding content type observed in trafﬁc captures, and in some
cases entering the full URL into a browser to see if the video plays.
7Note that we treat links to a content provider’s page returned in
search results as a form of direct access, rather than “embedded”
access, because we presume that often users navigate to such pages
via search engines.
This approach provides us with ﬁngerprints for both direct and em-
bedded viewing request URLs for each video content platform. We
note that direct and embedded video watching requests have a con-
sistent signature across traces, perhaps because these span the same
domain.
(ii) Bandwidth per content provider: We could compute
downstream bandwidth by accumulating server bytes for all HTTP
requests where the content provider domain appears in the Host
header. However, this approach risks missing trafﬁc because: (i)
content can be served by CDNs (often the case for videos and
images), the domain name of which may have no relationship to
the host corresponding to the original video/image request, and (ii)
CDNs typically serve content on behalf of multiple domains, mak-
ing it infeasible to exclusively associate a given CDN domain with a
speciﬁc origin server. We might consider accounting for such trafﬁc
by accumulating all response bytes for requests where the content
provider appears in Referer, but doing so will: (i) include bytes
belonging to other websites/providers, since the Referer might
instead reﬂect the user clicking on a link on the original content
provider page that leads to a different content provider’s page, and
(ii) miss bytes belonging to the content provider in cases where an
automatic chain of requests traverses multiple domains in order to
ultimately reach the CDN.
Putting the above considerations together, we employ the follow-
ing approaches for estimating trafﬁc volume:
• Video Content Platforms: Because these analyses concern
just a handful of content providers, for the video cate-
gory it remains practical to develop URI signatures for
each of the four major players. Note that these signa-
tures are different than the direct and embedded watch
signatures, because the video is in general fetched from
a URL different
than that of the watch page. Along
with analysis of active fetches, we analyze all HTTP re-
quests where either Host or Referer contains the con-
tent provider’s domain, and the Content-Type header in