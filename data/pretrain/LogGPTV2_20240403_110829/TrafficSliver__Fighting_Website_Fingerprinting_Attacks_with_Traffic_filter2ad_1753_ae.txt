c
n
a
t
r
o
p
m
i
e
r
u
t
a
e
F
Timing information (undefended)
Size information (undefended)
Timing information (TrafficSliver-Net)
Size information (TrafficSliver-Net)
Timing information (TrafficSliver-App)
Size information (TrafficSliver-App)
0
1
5
10
15
25
30
20
Feature rank
35
40
45
50
Figure 5: Feature importance score of the first 50 best-
ranked features for defended and non-defended traces.
thus, cover all potential variations of testing subtraces. Although
the adversary achieves a slightly higher recognition rate for 𝑘-NN
when using 𝑆4, the difference in the accuracies between 𝑆4 and 𝑆5
is neglectable and might be caused by the use of a specific dataset.
Thus, we conclude that 𝑆5 serves as our most effective training
strategy in case of multiple malicious entry ORs. Notably, as 𝑛 gets
closer to 𝑚, the training dataset contains fewer combinations of
subtraces. The attacker can fully reconstruct the page load, if 𝑛 = 𝑚.
We further analyze the susceptibility of our defense against WFP
attacks for an increasing number of malicious entry ORs by apply-
ing 𝑆5 for training. Table 2b shows the classification results obtained
for a closed-world scenario and malicious entry ORs varying from
two to five. As expected, the more traffic is observed, the higher
accuracy the adversary achieves. Nevertheless, the accuracies of all
classifiers remain below 36% in case of two malicious entry ORs.
Although the detection rate increases dramatically (especially for
DF) when three or more entry ORs are compromised, the probabil-
ity to select an excessive number of malicious entry ORs belonging
to a single adversary is statistically not feasible in the real Tor
network. Moreover, when the attacker controls more entry ORs,
DF outperforms the best-performing classifier, k-FP. Finally, the
accuracy achieved in case of five malicious entry ORs converges to
that of non-defended traces (see Section 8.5 for countermeasures).
8.2 Analysis of Our Application-layer Defense
This section provides insights into the efficiency of our application-
layer defense. Based on our preliminary knowledge gained from
the simulation results in Section 8.1.1, we established a variable
random number 𝑚, 2 ≤ 𝑚 ≤ 7, of entry ORs used for each page load.
We then collected a separate dataset for each of our application-
layer splitting schemes (see Section 6) in the real Tor network as
described in Section 7 and compared the accuracies. In Table 3, we
detail the accuracy of each WFP classifier in a closed-world for one
malicious OR without defense and against our application-layer
splitting strategies and discuss the results below.
𝑘-NN CUMUL k-FP DF
98.20
98.40 98.75
Undefended
TrafficSliver-Net
15.44 8.07
5.02
TrafficSliver-App 14.93
28.72 57.34
Tamaraw
5.50
4.86
4.11
21.45 11.88
10.40
CS-BuFLO
WTF-PAD
35.23
67.50 85.62
98.50
5.18
24.13
6.86
15.49
75.73
Multi-path. We first focus on the splitting scheme where the
defense does not require any additional cooperation by web servers
but simply sends full HTTP requests for different web objects over
distinct randomly-chosen entry ORs. Surprisingly, we observe here
the highest decline in accuracy compared to all application-layer
splitting strategies. In particular, 𝑘-NN, and CUMUL achieve less
than 25% accuracy, and k-FP, less than 29%. For the best-performing
classifier, DF, our defense reduces the detection rate by almost
50 percent points. We believe that this decrease is caused by the
diversity of split traces that is implicitly generated through the
transmission of different resources over distinct paths.
Exp Weighted Random & Varying Exp Weighted Random. Next,
we analyze splitting schemes that rely on the support of the range
option by web servers. As the fraction of resources within a website
for which the range option is enabled may influence the effective-
ness of our splitting strategies, we evaluated the success of these
schemes by using the Alexa Top 100 most popular sites as well
as the first Alexa 100 most popular websites, which contain only
splittable web objects. Appendix B presents detailed information
about the splittability of websites. However, as we do not observe
any significant difference in the accuracies, we focus only on those
classification results related to the Alexa Top 100 most popular sites
and, thus, enable a comparison with the other results. We also omit
the results for our round robin scheme, since they are similar to
those obtained for our network-layer defense. Overall, we observe a
steep decrease in accuracy with the exp weighted random strategy.
Nonetheless, the detection rate of DF still remains comparatively
high, corresponding to the correct identification of most page loads.
A reason for this might be that TrafficSliver-App cannot hide the
relationship between incoming and outgoing cells sent over a single
client-to-entry connection.
To sum up, we showed that our simple multi-path splitting
scheme creates subtraces with diverse characteristics and, thus,
serves as our most effective application-layer splitting strategy.
However, we believe that — in future work — the level of security
provided by TrafficSliver-App can be further optimized.
8.3 Obfuscation of Most Informative Features
When designing a WFP countermeasure, it is important to ensure
that this defense can obfuscate all discriminating features used by
WFP classifiers. Therefore, to better understand the influence of our
TrafficSliver defenses on the features used in state-of-the-art WFP
attacks, we computed the feature importance score of non-defended
traces and traces defended by our TrafficSliver defenses by using
an exiting approach presented in [19]. To do this, we categorized
all generated features in two main groups: (𝑖) features which are
s
d
a
o
l
e
g
a
p
f
o
n
o
i
t
c
a
r
F
1
0.8
0.6
0.4
0.2
0
TrafficSliver-Net
TrafficSliver-App
Tamaraw
WTF-PAD
CS-BuFLO
Undefended
101
103
102
Number of Tor cells
(a) Bandwidth overhead.
104
105
s
d
a
o
l
e
g
a
p
f
o
n
o
i
t
c
a
r
F
1
0.8
0.6
0.4
0.2
0
TrafficSliver-Net
TrafficSliver-App
Tamaraw
WTF-PAD
CS-BuFLO
Undefended
103
100
101
102
Total page load time [s]
(b) Latency overhead.
Figure 6: Cumulative distribution function (CDF) of bandwidth and latency overhead created by WFP defenses.
Forward
Backward
Forward
Backward
]
c
e
s
/
t
i
B
M
[
t
u
p
h
g
u
o
r
h
T
14
12
10
8
6
4
2
0
]
s
𝜇
[
i
e
m
T
g
n
i
s
s
e
c
o
r
P
l
l
e
C
2
1.5
1
0.5
0
Forward
Backward
]
s
m
[
e
m
i
t
l
a
v
i
r
r
a
-
r
e
t
n
I
30
20