### Feature Importance Analysis

- **Timing Information (Undefended)**
- **Size Information (Undefended)**
- **Timing Information (TrafficSliver-Net)**
- **Size Information (TrafficSliver-Net)**
- **Timing Information (TrafficSliver-App)**
- **Size Information (TrafficSliver-App)**

**Figure 5: Feature Importance Scores of the Top 50 Ranked Features for Defended and Non-Defended Traces.**

### Training Strategy Evaluation

The analysis covers all potential variations of testing subtraces. Although the adversary achieves a slightly higher recognition rate for \( k \)-NN when using \( S4 \), the difference in accuracies between \( S4 \) and \( S5 \) is negligible and may be attributed to the use of a specific dataset. Therefore, we conclude that \( S5 \) is the most effective training strategy when dealing with multiple malicious entry ORs.

As \( n \) approaches \( m \), the training dataset contains fewer combinations of subtraces. If \( n = m \), the attacker can fully reconstruct the page load. We further analyze the susceptibility of our defense against WFP attacks by increasing the number of malicious entry ORs, using \( S5 \) for training. Table 2b shows the classification results for a closed-world scenario with varying numbers of malicious entry ORs (from two to five). As expected, the more traffic observed, the higher the accuracy achieved by the adversary. However, with two malicious entry ORs, the accuracies of all classifiers remain below 36%.

While the detection rate increases significantly, especially for DF, when three or more entry ORs are compromised, the probability of an adversary controlling such a large number of entry ORs is statistically infeasible in the real Tor network. Moreover, as the number of controlled entry ORs increases, DF outperforms the best-performing classifier, \( k \)-FP. The accuracy achieved with five malicious entry ORs converges to that of non-defended traces (see Section 8.5 for countermeasures).

### Application-layer Defense Analysis

This section provides insights into the efficiency of our application-layer defense. Based on preliminary knowledge from simulation results (Section 8.1.1), we established a variable random number \( m \) (where \( 2 \leq m \leq 7 \)) of entry ORs used for each page load. We then collected a separate dataset for each of our application-layer splitting schemes in the real Tor network (as described in Section 7) and compared the accuracies. Table 3 details the accuracy of each WFP classifier in a closed-world scenario for one malicious OR without defense and against our application-layer splitting strategies.

| Classifier | Undefended | TrafficSliver-Net | TrafficSliver-App | Tamaraw | CS-BuFLO | WTF-PAD |
|------------|------------|-------------------|-------------------|---------|----------|---------|
| \( k \)-NN  | 98.20      | 15.44             | 14.93             | 5.50    | 35.23    | 5.18    |
| CUMUL      | 98.40      | 8.07              | 28.72             | 4.86    | 67.50    | 24.13   |
| \( k \)-FP  | 98.75      | 5.02              | 57.34             | 4.11    | 85.62    | 6.86    |
| DF         | 98.50      | 21.45             | 11.88             | 10.40   | 98.50    | 15.49   |

### Multi-path Splitting Scheme

We first focus on the splitting scheme where the defense does not require additional cooperation by web servers but simply sends full HTTP requests for different web objects over distinct randomly-chosen entry ORs. Surprisingly, this scheme shows the highest decline in accuracy compared to other application-layer splitting strategies. Specifically, \( k \)-NN and CUMUL achieve less than 25% accuracy, while \( k \)-FP achieves less than 29%. For the best-performing classifier, DF, our defense reduces the detection rate by almost 50 percentage points. This decrease is likely due to the diversity of split traces generated through the transmission of different resources over distinct paths.

### Exp Weighted Random & Varying Exp Weighted Random

Next, we analyze splitting schemes that rely on the support of the range option by web servers. The fraction of resources within a website for which the range option is enabled may influence the effectiveness of our splitting strategies. We evaluated these schemes using the Alexa Top 100 most popular sites and the first Alexa 100 most popular websites containing only splittable web objects. Appendix B provides detailed information about the splittability of websites. Since there were no significant differences in accuracies, we focus on the classification results related to the Alexa Top 100 most popular sites. We also omit the results for our round-robin scheme, as they are similar to those obtained for our network-layer defense. Overall, we observe a steep decrease in accuracy with the exp weighted random strategy. However, the detection rate of DF remains comparatively high, possibly because TrafficSliver-App cannot hide the relationship between incoming and outgoing cells sent over a single client-to-entry connection.

### Summary

Our simple multi-path splitting scheme creates subtraces with diverse characteristics, making it our most effective application-layer splitting strategy. However, future work could further optimize the security provided by TrafficSliver-App.

### Obfuscation of Most Informative Features

When designing a WFP countermeasure, it is crucial to ensure that the defense can obfuscate all discriminating features used by WFP classifiers. To better understand the influence of our TrafficSliver defenses on these features, we computed the feature importance scores for non-defended and defended traces using an existing approach [19]. We categorized all generated features into two main groups: (i) features that are...

**Figure 6: Cumulative Distribution Function (CDF) of Bandwidth and Latency Overhead Created by WFP Defenses.**

- **(a) Bandwidth Overhead**
- **(b) Latency Overhead**

**Figure 6** shows the cumulative distribution function (CDF) of bandwidth and latency overhead created by various WFP defenses, including TrafficSliver-Net, TrafficSliver-App, Tamaraw, WTF-PAD, and CS-BuFLO, compared to undefended traces.