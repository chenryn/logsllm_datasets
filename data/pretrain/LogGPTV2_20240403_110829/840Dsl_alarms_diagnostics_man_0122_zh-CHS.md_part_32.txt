反应： 局部报警反应。
已设置接口信号。
报警显示。
解释器终止。
排除方法： 减小零件程序中的公差（CTOL，OTOL，ATOL）。
程序继续： 用复位键清除报警，重新启动子程序。
10964 [通道%1: ] 程序段%2一些功能受到系统限制
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 原因
说明： 一些功能受到系统限制，报警可能由以下原因引发：
原因：
1. COMPSURF中运行的轴数超出了系统的允许数量。
2. 该系统不允许使用CUT3DFD。
反应： 局部报警反应。
已设置接口信号。
报警显示。
解释器终止。
报警
诊断手册, 01/2022, 6FC5398-6BP40-6RA6 159
NC 报警
排除方法： 1. 减少程序段中的轴数。
2. 撤销CUT3DFD。
程序继续： 用复位键清除报警，重新启动子程序。
10970 [通道 %1: ] 程序段 %2 冲孔时轨迹控制运行有效
参数： %1 = 通道号
%2 = 程序段号
说明： 冲裁/步冲时忽略有效的路径控制运行G64x。
反应： 报警显示。
排除方法： 冲裁/步冲时用G60关闭路径控制运行。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
10980 [通道%1：] 程序句%2无法执行定向功能
参数： %1 = 通道号
%2 = 程序段号、 标记
说明： 引发该报警的原因可能有：
1. MD28580 $MC_MM_ORIPATH_CONFIG = 0，因此无法用OSD或OST激活刀具角度的平滑，该MD必须设为1。
2. MD28580 $MC_MM_ORIPATH_CONFIG = 0，因此无法用ORIPATH/ORIPATHS和MD21094 $MC_ORIPATH_MODE = 1激活
轨迹相关的刀具角度。MD21094 $MC_ORIPATH_MODE = 1时，MD28580 $MC_MM_ORIPATH_CONFIG必须设为1。
3. MD28580 $MC_MM_ORIPATH_CONFIG = 0但是MD21094 $MC_ORIPATH_MODE = 1，因此在6轴坐标转换中无法用
ORIROTC激活轨迹相关的刀具角度。MD21094 $MC_ORIPATH_MODE = 1时，MD28580 $MC_MM_ORIPATH_CONFIG 必须
设为1。
反应： 重组补偿程序段。
解释器终止。
已设置接口信号。
报警显示。
排除方法： 更改零件程序。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
10982 [通道 %1: ] 程序段%2：不能通过ORISON进行定向平整
参数： %1 = 通道号
%2 = 程序段号、 标记
说明： 报警由以下原因引起：
如果需要通过ORISON进行定向平整，则机床数据MD28590 $MC_MM_ORISON_BLOCKS 必须>= 4。
反应： 重组补偿程序段。
解释器终止。
已设置接口信号。
报警显示。
排除方法： 修改零件程序或者设置机床数据MD28590 $MC_MM_ORISON_BLOCKS >= 3。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
10990 [通道%1: ] 程序段%2 带 FIR 滤波器的轴 %3 无法使用 CPRECON
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 轴
说明： CPRECON 虽然有效， 但是没有通过 MD38020 $MA_MM_CPREC_FIR_POINTS 为带有FIR 滤波器的轴（MD32402
$MA_AX_JERK_MODE=5）提供存储空间。
这是个数据配置错误。
报警
160 诊断手册, 01/2022, 6FC5398-6BP40-6RA6
NC 报警
反应： 报警显示。
已设置接口信号。
解释器终止。
排除方法： 使用MD38020 $MA_MM_CPREC_FIR_POINTS设置该功能所需的存储空间。
程序继续： 用复位键清除报警，重新启动子程序。
12000 [通道 %1: ] 程序段 %2 地址 %3 多次编程
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 地址源字符串
说明： 大部分地址(地址类型)在NC程序块中只被设计一次，以便程序块信息保持非二义性(例如X. . T. . . F. . . 等。 - 例外情况： G和
M功能)。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并使用软键PROGRAMM KORREKTUR（程序修正）选择功能"修正程序段"。修正指针位置指示在出错并需要修
正的程序段上。
在NC程序中删除多次出现的地址(除了那些允许多重赋值的地址)。
检查是否通过自定义变量规定了地址(例如：轴名称)(如果程序中通过计算操作才将轴名称分配到变量中的话，则此项检查
不容易看见)。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12010 [通道 %1: ] 程序段 %2 地址 %3 地址类型编程太经常
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 地址源字符串
说明： 对于每一种地址类型，在内部设定了其在一个NC程序段中出现的频度(例如，所有轴是同一种地址类型，同样受一个程序
段限制。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按下“NC停止”键并按下“程序修正”软键选择功能“修正程序段”。修正指针位置指示在出错的程序段上。
程序信息必须分成多个程序段(但是要注意程序段方式生效的功能！)。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12020 [通道 %1: ] 程序段 %2 地址修改与地址的组合不允许
参数： %1 = 通道号
%2 = 程序段号、 标记
说明： 有效地址类型是' IC '、' AC '、' DC '、' CIC '、' CAC '、' ACN '、' ACP '、' CACN '，' CACP '。并非这些地址修改中的每一个都可
以用于每个地址类型。程序设计手册中规定了可以用于各种地址类型的地址修改。如果此地址修改被用于不允许的地址类型，
则会产生报警，例如：
N10 G02 X50 Y60 I=DC(20) J30 F100
利用DC插补参数。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并利用软键设计校正选择功能"校正程序块"。校正指针位置指示在差错块上。
根据程序设计手册中的说明，非典型性的地址修改只能应用于可允许的地址中。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
报警
诊断手册, 01/2022, 6FC5398-6BP40-6RA6 161
NC 报警
12030 [通道 %1: ] 程序段 %2 %3 中参数或数据类型无效
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 源字符串
说明： 在多项式插补中，多顶式不能大于3次幂(参看程序设计手册)。
f(p) = a0 + a1 p + a2 p2 + a3 p3
系数a0 (起点)与前面的程序段末端相吻合，不必进行编程。在多顶式程序段中，每个轴最多只允许有3个系数( a1、a2、
a3)。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并利用软键设计校正选择功能"校正程序块"。校正指针位置指示在差错块上。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12040 [通道 %1: ] 程序段%2 表达式%3不是数据类型‘AXIS’（轴）
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 程序段中的源字符串
说明： 一些关键字要求其参数中的数据被写入" AXIS "型变量中。例如，在关键字PO中，必须在括号表达式中规定轴标识符，并且
必须定义为一个AXIS型变量。利用下列关键字，只允许AXIS型参数：
AX[. . ], FA[. . ], FD[. . ], FL[. . ], IP[. . ], OVRA[. . ], PO[. . ], POS[. . ], POSA[. . ]
例如：
N5 DEF INT ZUSTELL=Z1 不正确，除了编号26 161之外，没有规定轴标识符。
N5 DEF AXIS ZUSTELL=Z1 正确。
N10 POLY PO[X]=(0.1,0.2,0.3) PO[Y]=(22,33,44) &PO[INFEED]=(1,2,3)
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并利用软键设计校正选择功能"校正程序块"。校正指针位置指示在差错块上。
根据程序设计手册中给出的说明校正部件加工程序。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12050 [通道%1: ] 程序段%2 DIN地址%3没有设计
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 程序段中的DIN地址
说明： 控制器中没有确定DIN地址的名称(例如：X、U、X1)。除了固定的DIN地址，控制器还具有可变地址。参看程序设计手册
中的"可变地址"。这些地址的名称可以通过机床数据来改变。
例如：DIN identifier - >配置标识符
G01 -> LINE, G04 -> WAIT . . .
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 研究程序设计手册和机床数据中有关实际地址配置及其重要性以及相应地校正DIN程序块。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12060 [通道 %1: ] 程序段 %2 相同的G功能重复定义
参数： %1 = 通道号
%2 = 程序段号、 标记
报警
162 诊断手册, 01/2022, 6FC5398-6BP40-6RA6
NC 报警
说明： 可被用于部件加工程序的G功能被分成几个根据确定语法的或非确定语法的组。每个G组中只能在程序中设计一项G功能。
一个分组内的功能是相互排斥的。
报警只指非确定语法的G功能。如果在一个NC程序块中调用这些组中的多项G功能，则在所有情况下只有该组中最后调
用的一项是有效的(先前调用的项被忽略)。
确定语法的G功能：1. G 组中第4项功能
非确定语法的G功能：5. G组中第n项功能
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 程序校正软键。校正指针位置指示在差错块上。
不需要采取补救措施。但是，应该检查最后程序中设计的G功能是否是真正需要的功能。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12070 [通道 %1: ] 程序段 %2 G功能句法定义太多
参数： %1 = 通道号
%2 = 程序段号、 标记
说明： 句法确定的G功能可以确定部件加工程序程序段的结构和其中包含的地址。在每个NC程序段中只能编程一种确定语法的G
功能。第1到4的G组G功能的句法是确定的。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并利用软键设计校正选择功能"校正程序块"。校正指针位置指示在差错块上。
分析NC程序块并将G功能分配到多个NC程序块中。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
12080 [通道 %1: ] 程序段 %2 句法错误在文本 %3
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 源程序正文区
说明： 此处指出的程序段位置上的语法错误。该错误由多种原因导致，无法一一详述。
示例1：
N10 IF GOTOF ... ; 没有写入跳转条件！
示例2：
N10 DEF INT VARI=5
N11 X VARI ;没有为变量X和VARI写入操作数
示例3：
N13 R1=5
N15 R1=10 M=R1 ;赋值必须占用一条程序段，即其中不能再编写其他诸如辅助功能输出或移动之类指令。
原因也有可能是使用了Unicode字符。该字符在报警文本ASCII字符段以外的字符显示中识别。
通过MD 10280 $MN_PROG_FUNCTION_MASK，位3可以设置是否将ASCII字符段以外的字符转换为空格或是否输出报警
12080。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。
排除方法： 按NC停机键并利用软键设计校正选择功能"校正程序块"。校正指针位置指示在差错块上。
分析程序块并根据程序设计手册中给出的语法规则进行校正。
程序继续： 按下CYCLE START键或RESET键清除报警，继续运行程序。
报警
诊断手册, 01/2022, 6FC5398-6BP40-6RA6 163
NC 报警
12090 [通道 %1: ] 程序段 %2 不需要的参数 %3
参数： %1 = 通道号
%2 = 程序段号、 标记
%3 = 文本中不允许的参数
说明： 程序设计的功能已经被预先确定;对其调用不允许有任何参数。显示第一个未预料到的参数。
例如：在调用预先确定的子程序TRAFOF (关闭转换)时，参数已经被传输(一个或多个)。
反应： 重组补偿程序段。
已设置接口信号。
报警显示。