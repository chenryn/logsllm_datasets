# 与第三方合作的艺术
Jonathan Mercereau，traffiq 公司（原 LinkedIn）
  多年来，站点可靠性工程（SRE）的定义已经演变，但最容易理解的是"当软件工程被用于完成过去所谓的运维"这样的说法。*站点可靠性工程*，[简介](https://landing.google.com/sre/book/chapters/introduction.html)。大多数站点可靠性团队将*运维*视为在他们的基础结构上运行的应用程序。如今，越来越多的公司依靠第三方来履行他们擅长的非常具体的职能。这包括域名系统（DNS）、内容交付网络（CDN）、应用程序性能管理（APM）、存储、支付、电子邮件、短信（SMS）、安全性（如单一登录【SSO】或双重身份验证【2FA】）、日志处理等。这些资源中的任何一个（如果未正确实现）都可能导致依赖它的站点无法正常运作。
供应商是我们无法控制的黑匣子吗？不一定。随着我们与供应商合作，将同一套
SRE 规程应用于与第三方合作，以努力减少其困难，这一点非常重要。
# 自建、购买或采用？
  在深入探讨与供应商合作的话题之前，应该先讨论那些导致我们*购买*或*自建*或*采用*的决定。我们参与这一进程的程度将取决于重要性和利益攸关方的结合。确定重要性是整个过程的第一步，它将决定其他决定性因素的重要性，例如成本权重、支持权重、影响因素、服务级别协议（SLA）等。
## 建立重要性
 对于负责项目的 SRE 或其他团队集成的 SRE
来说，确定重要性可能具有挑战性。例如，如果决定使用哪个 JavaScript
框架用于网站的下一个版本，则很明显，决策过程中将涉及许多利益相关者，而影响的因素会更多，例如数据科学、质量保证、工具等。
  但是，决定选择哪个证书颁发机构（CA）完全是另一回事。对于一些人来说，证书的选择很简单，就如同做出简单的决定"干脆先用
Let\'s Encrypt
好了"，然后等到合适的时候再考虑正式的证书。但是，也有少数公司必须深入考虑超出单一域名证书和多域名证书之间的区别。
如果你现在开始有点头大，很好。让我们进一步探讨一下。
根据 SRE 团队的不同，证书可能只是意味着安全性。对于其他 SRE
团队，证书可能会引起对性能影响的担忧。然而，*其他*SRE
团队可能会质疑对协议和密码套件的影响。而且 SRE
团队将来要关心的，还有长期所有权、集成、请求流程更改、工作流、访问控制、吊销过程、证书轮换等问题。
尽早确定集成的重要性将有助于避免技术债务和扩展限制。
## 确定利益相关者
  公司越小，决策过程就越容易。然而，随着公司的发展，至少考虑影响规模、增长缓慢、降低生产率和引发头痛的因素非常重要。此外，了解重要性还使我们能够确定谁可能会受到我们决策的影响，以便他们能够被纳入决策中。
作为 SRE，我们最了解协作对于站点可靠性的作用。 Google 最早的 SRE
团队嵌入了软件工程团队，为可扩展性提供了宝贵的见解，并采用了运维的思路来构建可靠服务。当我们考虑整合的影响时，必须确定利益相关者和受影响者，这些人将是证明我们项目整体成功的关键。
主人翁感和重要性在项目的成功中起着重要的作用。不用说，人们不喜欢计划外的工作，他们不喜欢别人告诉他们该做什么。越早确定和咨询利益相关者，就越容易申请所有权，并让更多人员为项目的成功而努力。没有什么比盲目启动一个项目并投入时间和精力更糟糕的了，这会因为利益相关者的角色没有被考虑，而导致项目被一票否决。
## 做出决策
 在确定了重要性和利益相关者后，我们可以开始评估*构建*或*购买*的决定。通常，构建讨论在很大程度上依赖于开源解决方案的纳入，因此我建议这算是一个需要考虑的完全新的类别：*采用*。让我们分解每个选项之间的差异。
构建（从头开始内部开发）
:   你的需求是如此的定制化和创新，因此它不能由其他人（除了你的公司）来完成。通常，这些解决方案是经过不断强化后开源的。这些例子包括LinkedIn
    的 Kafaka，Facebook 的 React 和 Lyft 的 Envoy。
购买（SaaS、托管或许可解决方案）
:   你的需求是常见的，并且存在付费解决方案来解决此问题。
采用（集成开源解决方案）
:   你的需求是常见的，且存在开源解决方案。
当我们考虑是*建造*、*购买*还是采用时，可能会注意到，在何时何地花费资金方面存在着一些关键差异。当我们考虑采用开源解决方案时，  资本支出（CapEx）和运营支出（OpEx）可能难以预测。评估和研究的投入较低，对于开源项目来说 概念验证（PoC）成本低；然而，由于项目得到大规模利用，诸如内存利用率、计算约束和存储需求等问题可能会迅速超过研发期间捕获的基准。除了初期的集成，持续运行、增强和不可避免的升级都对技术人员的熟练度提出了要求。开源项目将存在可能导致重大安全漏洞、内存泄漏和数据丢失的
Bug。在某些情况下，由于功能弃用，完整版本升级会与其他集成产生不兼容。最后，但往往被忽视的一点，在开源版本之间迁移会带来*重大更改*，这通常会导致完全配置重写、向后兼容性丢失以及操作不稳定。此类问题带来的花销通常包含在
CapEx 表中的单行条目中，但其实这个条目应扩展到其自己的项目运营费用
（PrOpEx） 表中。
因此，如果我们不咨询有经验的项目经理，我们的预测往往目标较低。在购买案例中，CapEx
通常较低，集成成本较低，而运营支出通常*被认为*较高（因为我们通常不考虑为生产类似的可行产品而要花费的工时）。开源采用所涉及的许多考虑因素都通过第三方解决方案来满足，它们对于保持运维稳定性有希望。
采用或购买两种方案都不应忽视服务的文档、维护、监视、日志记录、工具、自动化这些方面的需求。PoC、功能原型、最小可行产品（MVP）和具有高运维完整性的一流服务之间的区别类似于太阳和行星之间的距离。在本章的结尾，我们将讨论定义一流服务的一些关键方面。
但是，现在我们至少在考虑构建、购买和采用之间的区别，我们可以解决一些额外的考虑点。
## 承认现实
 也许你是个很棒的
SRE。也许你的代码质量无可挑剔。也许你是个天生的领导者。没准你有设计可扩展性的天分。但你并不能擅长每件事。很可能你已经找到了一个领域，让你出类拔萃。下一个有趣的项目可能不应该从头开始构建。不是因为你不能，而是因为商业决策充斥着超越个人利益的理由。作为一个负责任的
SRE，将业务目标优于个人利益可以带来成功。不幸的现实是，做一些很酷的事情并不总是对企业最好的。
当我们开始面对现实，看看我们需要评估的一些其他项目注意事项：
-   正在解决什么问题？
-   这对底线有什么影响？
-   这会影响关键路径吗？
-   这是核心竞争力吗？
-   解决方案的成熟度？
-   真的需要拥有还是看上去需要？
-   这是否会继续采用？
-   暴露了哪些漏洞？
-   我们的资本支出是怎样的？
-   我们的运营支出是怎样的？
-   我们的项目运营支出是怎样的？
-   我们的放弃费用是多少？
-   谁是我们的客户？
-   我们是谁的客户？
-   我们是否确定了辅助福利？
-   生产初期的增量是什么？
-   什么是集成时间线？
-   如何监控？
-   谁长期负责？
-   问题报告是怎样的？
-   什么是 SLA？这关键吗？
-   有哪些风险/好处？
-   我们的退路是什么？
-   如何衡量成功？
-   如何容忍失败？
-   如果出现重大失误怎么办？
在讨论是购买还是采用时，这些要点只是头脑中需要牢记的一小部分。与你的团队一起考虑每个问题取决于集成的重要性。当我们考虑购买服务时，值得在其中几个问题上进一步延申，以引发可能没有考虑过的其他想法。
### 这是核心竞争力吗？
 始终记得权衡考虑的解决方案/集成是否既是你的核心竞争力，同时也是公司的核心竞争力。
第三方提供专门的解决方案，并设有工程师团队，通过构建其他功能和服务来扩展其价值主张。从长远来看，用于日志聚合的软件即服务（SaaS）解决方案可能比尝试采用开源解决方案（如
Elasticsearch）更有效。你必须确定 Elasticsearch
是否真的是你个人、你的团队和公司需要关注的内容。
### 集成时间表？
 无论你认为完成集成需要多长时间，请先加倍，然后再添加一点缓冲时间。开源解决方案的
PoC 可能很容易实现，但这并不意味着项目已做好生产准备。 SRE
的*生产就绪*定义应包括测试/暂存、监视、日志记录、配置管理、部署过程、灾难恢复等。
使用 CDN、DNS、监视、CA
和消息传递解决方案，实施这些生产就绪因素可能是极具挑战性的，在某些情况下几乎不可能。幸运的是，对于第三方集成，尤其是在大公司中，随着我们进行集成工作，各种团队将评估解决方案。应该期望法律、安全和采购 采购团队是处理采购订单和分包合同的专家。他们购买项目和公司计划所需的商品和服务。他们支付账单，以保持服务继续，但也确保法律和业务义务得到满足。团队将在采购过程中发挥作用。每个团队都将引入自己的流程，这可能会延迟将第三方解决方案投入生产。
### 项目运营费用和放弃费用
 除了考虑购买商品和服务的初始成本（CapEx，如硬件、软件和一次性许可证）以及运行和维护的持续成本（运营成本，如每月服务器价格、经常性服务费）之外，还考虑额外的成本。费用类别应该是考虑过程的一部分。