.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.TH PERL 1 "2003-09-02" "perl v5.8.1" "Perl Programmers Reference Guide"
.SH NAME
perl \- Practical Extraction and Report Language (实用摘录和汇报语言)
.SH "总览 SYNOPSIS"
\&\fBperl\fR	[\ \fB\-sTuU\fR\ ] [\ \fB\-hv\fR\ ]\ [\ \fB\-V\fR[:\fIconfigvar\fR]\ ]
    [\ \fB\-cw\fR\ ]\ [\ \fB\-d\fR[:\fIdebugger\fR]\ ]\ [\ \fB\-D\fR[\fInumber/list\fR]\ ]
    [\ \fB\-pna\fR\ ]\ [\ \fB\-F\fR\fIpattern\fR\ ]\ [\ \fB\-l\fR[\fIoctal\fR]\ ]\ [\ \fB\-0\fR[\fIoctal\fR]\ ]
    [\ \fB\-I\fR\fIdir\fR\ ]\ [\ \fB\-m\fR[\fB\-\fR]\fImodule\fR\ ]\ [\ \fB\-M\fR[\fB\-\fR]\fI'module...'\fR\ ]
    [\ \fB\-P\fR\ ] [\ \fB\-S\fR\ ] [\ \fB\-x\fR[\fIdir\fR]\ ]
    [\ \fB\-i\fR[\fIextension\fR]\ ] [\ \fB\-e\fR\ \fI'command'\fR\ ]\ [\ \fB\-\-\fR\ ]\ [\ \fIprogramfile\fR\ ]\ [\ \fIargument\fR\ ]...
.PP
如果你是 Perl 新手，还是从 perlintro 看起吧，那是为初学者准备的简单介绍，提供了一些背景知识，帮助你浏览 Perl 其余的大量文档
.PP
为方便阅读，Perl 手册分成了很多章
.Sh "概述 Overview"
.Vb 3
\&    perl                Perl 概述 (本小节) 
\&    perlintro           Perl 介绍 (为新手准备) 
\&    perltoc             Perl 目录 (所有内容列表) 
.Ve
.Sh "教程 Tutorials"
.Vb 3
\&    perlreftut          Perl 引用 
\&    perldsc             Perl 数据结构 
\&    perllol             Perl 高级数据结构 
.Ve
.PP
.Vb 2
\&    perlrequick         Perl 正则表达式快速入门 
\&    perlretut           Perl 正则表达式 
.Ve
.PP
.Vb 4
\&    perlboot            Perl OO 面向对象 入门 
\&    perltoot            Perl OO 面向对象 教程 (第一部分) 
\&    perltooc            Perl OO 面向对象 教程 (第二部分) 
\&    perlbot             Perl OO 面向对象 窍门和例子 
.Ve
.PP
.Vb 1
\&    perlstyle           Perl 程序风格 
.Ve
.PP
.Vb 3
\&    perlcheat           Perl 投机取巧 
\&    perltrap            Perl 大意者的陷阱 
\&    perldebtut          Perl 调试 
.Ve
.PP
.Vb 10
\&    perlfaq             Perl 常见问题 
\&      perlfaq1          有关 Perl 的一般问题
\&      perlfaq2          获取/学习 Perl 
\&      perlfaq3          编程工具
\&      perlfaq4          数据操纵
\&      perlfaq5          文件与文件格式
\&      perlfaq6          正则表达式
\&      perlfaq7          Perl 语言本身的问题
\&      perlfaq8          与操作系统交互
\&      perlfaq9          网络
.Ve
.Sh "参考手册 Reference Manual"
.Vb 21
\&    perlsyn             Perl 语法
\&    perldata            Perl 数据结构
\&    perlop              Perl 操作符及优先级
\&    perlsub             Perl 定义函数
\&    perlfunc            Perl 内置函数
\&      perlopentut       Perl open() 教程
\&      perlpacktut       Perl pack() 和 unpack() 教程
\&    perlpod             Perl POD 文档
\&    perlpodspec         Perl POD 文档格式规约
\&    perlrun             Perl 执行选项
\&    perldiag            Perl 诊断信息
\&    perllexwarn         Perl 警告 控制警告
\&    perldebug           Perl 调试
\&    perlvar             Perl 预定义变量
\&    perlre              Perl 正则表达式 其余的部分
\&    perlreref           Perl 正则表达式快速索引
\&    perlref             Perl 参考 其余的部分 
\&    perlform            Perl 格式
\&    perlobj             Perl 对象
\&    perltie             Perl 用简单变量隐藏对象
\&      perldbmfilter     Perl DBM 层
.Ve
.PP
.Vb 3
\&    perlipc             Perl 进程间通信
\&    perlfork            Perl fork() 相关信息
\&    perlnumber          Perl 数字的语义
.Ve
.PP
.Vb 2
\&    perlthrtut          Perl 线程
\&      perlothrtut       旧版 Perl 线程
.Ve
.PP
.Vb 5
\&    perlport            Perl 移植向导
\&    perllocale          Perl 语言环境支持
\&    perluniintro        Perl Unicode 介绍
\&    perlunicode         Perl Unicode 支持
\&    perlebcdic          在 EBCDIC 平台上运行 Perl
.Ve
.PP
.Vb 1
\&    perlsec             Perl 安全性
.Ve
.PP
.Vb 5
\&    perlmod             Perl modules: 它如何工作
\&    perlmodlib          Perl modules: 如何写和用它们
\&    perlmodstyle        Perl modules: 如何写好它
\&    perlmodinstall      Perl modules: 如何从 CPAN 安装它们
\&    perlnewmod          Perl modules: 准备释放出新模块
.Ve
.PP
.Vb 1
\&    perlutil            Perl 附带的工具
.Ve
.PP
.Vb 1
\&    perlcompile         Perl 编译套件介绍
.Ve
.PP
.Vb 1
\&    perlfilter          Perl 源码过滤
.Ve
.Sh "内部以及 C 接口 Internals and C Language Interface"
.Vb 7
\&    perlembed           在 C/C++ 应用中内置 Perl 的独特方法
\&    perldebguts         Perl 调试要点和技巧
\&    perlxstut           Perl XS 
\&    perlxs              Perl XS 应用程序编程接口
\&    perlclib            标准 C 库的内部实现
\&    perlguts            为高级开发者准备的 Perl 内部函数
\&    perlcall            从 C 转换为 Perl 调用
.Ve
.PP
.Vb 4
\&    perlapi             Perl API 列表 (自动生成)
\&    perlintern          Perl 内部函数 (自动生成)
\&    perliol             Perl 以\(lq层\(rq方式实现 IO 用到的 C API 
\&    perlapio            Perl 内部 IO 抽象接口
.Ve
.PP
.Vb 1
\&    perlhack            修改 Perl 
.Ve