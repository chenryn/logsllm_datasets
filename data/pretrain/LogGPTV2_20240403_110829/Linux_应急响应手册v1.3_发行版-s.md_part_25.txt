### Livosys-Lato 和 Network 服务状态

```
livosys-lato
IWXr-xI-X.
1 root root 7.8K 29 Mar 2019 network
1 root
root 4.5K 29 Mar 2019
netconsole
-TWXI-XI-X.
TW-====,
root 1.2K 08 Aug 2019 README
[helper@centos-7 ~]$
● chkconfig --list
---
## Page 214
[helper@centos-7 ~]$ sudo chkconfig --list
注：该输出结果只显示SysV服务，并不包含原生Systemd服务。SysV配置数据可能被原生systemd配置覆盖。
要列出systemd 服务，请执行 'systemctl list-unit-files'。
查看在具体target启用的服务请执行 'systemctl list-dependencies [target]'。

livesys
0: 关
1: 关
2: 关
3: 开
4: 开
5: 开
6: 关

livesys-late
0: 关
1: 关
2: 关
3: 开
4: 开
5: 开
6: 关

netconsole
0: 关
1: 关
2: 关
3: 关
4: 关
5: 关
6: 关

network
0: 关
1: 关
2: 关
3: 关
4: 关
5: 关
6: 关
[helper@centos-7 ~]$
```

### /etc/profile 文件内容

```bash
/etc/profile
---
## Page 215
[helper@centos-7 -]S cat /etc/profile
# System wide environment and startup programs, for login setup
# Functions and aliases go in /etc/bashrc
# It's NOT a good idea to change this file unless you know what you are doing.
# It's much better to create a custom.sh shell script in /etc/profile.d/ to make custom changes to your environment, as this will prevent the need for merging in future updates.

pathmunge() {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            if [ "$2" = "after" ]; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

if [ -x /usr/bin/id ]; then
    if [ -z "$EUID" ]; then
        # ksh workaround
        EUID=`/usr/bin/id -u`
        UID=`/usr/bin/id -ru`
    fi
    USER=`id -un`
    LOGNAME=$USER
    MAIL=/var/spool/mail/$USER
fi

# Path manipulation
pathmunge /usr/local/sbin
pathmunge /usr/sbin after

HOSTNAME=`/usr/bin/hostname 2>/dev/null`
HISTSIZE=1000
export HISTCONTROL=ignoreboth

export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL

# Current threshold for system reserved uid/gids is 200
# You could check uidgid reservation validity in /usr/share/doc/setup-*/uidgid file

umask 022
for i in /etc/profile.d/*.sh /etc/profile.d/sh.local ; do
    if [ -r "$i" ]; then
        . "$i"
    elif [ -x "$i" ]; then
        "$i"
    fi
done

unset -f pathmunge
unset i
[helper@centos-7 ~]
```

### SSH 隧道设置与验证

#### 设置SSH隧道

假设我们已经获得了CentOS主机的密码（或通过公钥认证）：

在攻击机（物理机 10.211.55.2）上执行以下命令：

```bash
ssh -f -N -C -g -L 8008:10.211.55.10:80 helper@10.211.55.11 -p 22
```

- `-f` 后台执行
- `-N` 不需要TTY，即notty
- `-C` 使用压缩
- `-g` 设置监听端口为0.0.0.0这种形式

输入密码后，攻击机可以直接访问自己的8008端口以访问受限主机的Apache服务。

#### 验证SSH隧道

访问 `http://127.0.0.1:8008` 可以看到成功映射的Ubuntu Apache服务。

#### 查看日志

查看Ubuntu上的Apache日志 `/var/log/apache2/access.log`，可以看到访问IP为受控主机CentOS的IP地址。

#### 检查网络连接和进程

##### 网络连接

```bash
(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:631          0.0.0.0:*               LISTEN
tcp        0      0 127.0.0.1:25           0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:111            0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:22             0.0.0.0:*               LISTEN
tcp        0      0 10.211.55.11:22        10.211.55.2:56450       ESTABLISHED
tcp        0      0 10.211.55.11:53348     10.211.55.10:80         TIME_WAIT
tcp        0      0 10.211.55.11:22        10.211.55.2:55843       ESTABLISHED
tcp        0      0 10.211.55.11:22        10.211.55.2:55845       ESTABLISHED
tcp6       0      0 ::1:631                :::*                    LISTEN
tcp6       0      0 ::1:111                :::*                    LISTEN
tcp6       0      0 ::1:22                 :::*                    LISTEN
udp        0      0 0.0.0.0:951            0.0.0.0:*               -
udp        0      0 0.0.0.0:68             0.0.0.0:*               -
udp        0      0 0.0.0.0:111            0.0.0.0:*               -
udp        0      0 0.0.0.0:5353            0.0.0.0:*               -
udp        0      0 127.0.0.1:323          0.0.0.0:*               -
udp        0      0 0.0.0.0:55883          0.0.0.0:*               -
udp6       0      0 ::1:951                :::*                    -
udp6       0      0 ::1:111                :::*                    -
udp6       0      0 ::1:323                :::*                    -
```

从流量上看，多了一个攻击机连接受控主机CentOS 22端口的连接，同时多了一个受控主机CentOS访问10.211.55.10 80端口的连接。在实际情况下，如果多个业务在同一主机上运行，很难分辨出这是一个SSH隧道。

##### 进程

```bash
ps afjx
  PID TTY      STAT   TIME COMMAND
2460 pts/0    Ss     0:00 bash
2658 ?        Ss     0:00 /usr/sbin/sshd -D
2567 ?        Ss     0:00 sshd: helper [priv]
2599 ?        S      0:00 sshd: helper
```

从进程角度看，多了一个SSH连接进程，这个进程可能是有问题的，可以联系相关主机业务人员确认。