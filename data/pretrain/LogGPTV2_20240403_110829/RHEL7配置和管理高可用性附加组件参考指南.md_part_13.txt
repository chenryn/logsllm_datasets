::: titlepage
# []{#ch-clustresources-HAAR.html#s1-resource_cleanup-HAAR}集群资源清理 {.title}
:::
[]{#ch-clustresources-HAAR.html#idm140680238064672 .indexterm}
如果资源失败，则显示集群状态时会出现一个失败信息。如果解析该资源，您可以使用
[**pcs resource cleanup
命令清除该故障状态**]{.command}。此命令会重置资源状态和
`故障计数`{.literal}，指示集群忘记资源的操作历史记录并重新检测其当前状态。
以下命令清理由 *`resource_id`* 指定的资源。
``` screen
pcs resource cleanup resource_id
```
如果没有指定 *`resource_id`*，这个命令会重置所有资源的资源状态和
`故障计数`{.literal}。
从 Red Hat Enterprise Linux 7.5 [**开始，pcs resource
cleanup**]{.command}
命令只会探测显示为失败操作的资源。要探测所有节点上的所有资源，使用以下命令：
``` screen
pcs resource refresh
```
默认情况下，pcs [**resource refresh**]{.command}
命令只会探测到已知资源状态的节点。要探测所有资源，包括状态未知的资源，使用以下命令：
``` screen
pcs resource refresh --full
```
:::
:::
[]{#ch-resourceconstraints-HAAR.html}
::: chapter
::: titlepage
# []{#ch-resourceconstraints-HAAR.html#ch-resourceconstraints-HAAR}第 7 章 资源约束 {.title}
:::
您可以通过配置该资源的约束来决定集群中资源的行为。您可以配置以下约束类别：
::: itemizedlist
-   `位置`{.literal} 限制 -
    位置约束决定资源可在哪个节点上运行。位置限制在
    ["位置限制"一节](#ch-resourceconstraints-HAAR.html#s1-locationconstraints-HAAR "位置限制"){.xref}
    中描述。
-   `顺序`{.literal} 约束 - 顺序约束决定资源运行的顺序。在
    ["顺序限制"一节](#ch-resourceconstraints-HAAR.html#s1-orderconstraints-HAAR "顺序限制"){.xref}
    中描述了顺序限制。
-   `共存`{.literal} 约束 - 共同位置约束(colocation
    constraint)决定资源相对于其他资源的位置。在
    ["资源共存"一节](#ch-resourceconstraints-HAAR.html#s1-colocationconstraints-HAAR "资源共存"){.xref}
    中描述了 colocation 约束。
:::
简而言之，配置一组限制会将一组资源放在一起，并确保资源按顺序启动并按相反顺序停止，Pacemaker
支持资源组的概念。有关资源组的详情请参考
["资源组"一节](#ch-clustresources-HAAR.html#s1-resourcegroups-HAAR "资源组"){.xref}。
::: section
::: titlepage
# []{#ch-resourceconstraints-HAAR.html#s1-locationconstraints-HAAR}位置限制 {.title}
:::
位置限制决定资源可在哪些节点上运行。您可以配置位置限制，以确定资源是否首选或避免指定节点。
除了位置限制外，资源运行的节点还受到 `该资源的资源粘性`{.literal}
值的影响，这决定了资源是否首选保留在当前运行的节点中。有关设置
`资源粘性`{.literal} 值的详情请参考
["配置资源以首选其当前节点"一节](#ch-resourceconstraints-HAAR.html#s2-resource-stickiness-HAAR "配置资源以首选其当前节点"){.xref}。
::: section
::: titlepage
## []{#ch-resourceconstraints-HAAR.html#s2-simplelocationconstraints-HAAR}基本位置限制 {.title}
:::
[]{#ch-resourceconstraints-HAAR.html#idm140680351001552
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680354319904
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680251975840
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680344282528
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680348188432
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680348259776
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680241177744
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680350183824
.indexterm}
您可以配置基本位置约束，以指定资源首选项或避免节点，使用可选
`分数`{.literal} 值来指示约束的首选程度。
以下命令为资源创建一个位置约束，以偏好指定节点。请注意，可以使用单个命令为多个节点在特定资源上创建限制。
``` screen
pcs constraint location rsc prefers node[=score] [node[=score]] ...
```
以下命令为资源创建一个位置约束,以避免指定节。
``` screen
pcs constraint location rsc avoids node[=score] [node[=score]] ...
```
[表 7.1
"简单位置限制选项"](#ch-resourceconstraints-HAAR.html#tb-locationconstraint-options-HAAR "表 7.1. 简单位置限制选项"){.xref}
以最简单的形式总结了配置位置限制的选项的含义。
::: table
[]{#ch-resourceconstraints-HAAR.html#tb-locationconstraint-options-HAAR}
**表 7.1. 简单位置限制选项**
::: table-contents
+------------------+--------------------------------------------------+
| 项               | 描述                                             |
+==================+==================================================+
| `rsc`{.literal}  | 资源名称                                         |
+------------------+--------------------------------------------------+
| `node`{.literal} | 节点的名称                                       |
+------------------+--------------------------------------------------+
| `分数`{.literal} | 动态整数值，用于指示资                           |
|                  | 源应首选的资源还是避免节点。`INFINITY`{.literal} |
|                  | 是资源位置约束的默认 `分`{.literal} 数值。       |
|                  |                                                  |
|                  | `pcs contraint 位置 器`{.literal}``{=html}  |
|                  | 命令``{=html} 中的 `分数`{.literal} 值为  |
|                  | `INFINITY`{.literal}                             |
|                  | 表示该节点首选该节点（如果节点可用），但         |
|                  | 不会阻止资源在指定节点不可用时在另一节点上运行。 |
|                  |                                                  |
|                  | `pcs contraint 位置 器c`{.literal}``{=html} |
|                  | 中的 `分数`{.literal} 值为 `INFINITY`{.literal}  |
|                  | 表示``{=html}                             |
|                  | 该资源永远不会在该节点                           |
|                  | 上运行，即使没有其它节点可用。这等同于设置分数为 |
|                  | `-INFINITY 的`{.literal}                         |
|                  | `pcs constraint location add`{.literal} 命令。   |
+------------------+--------------------------------------------------+
:::
:::
以下命令创建了位置约束，以指定资源 `Web 服务器首选`{.literal} 节点
`node1`{.literal}。
``` screen
# pcs constraint location Webserver prefers node1
```
从 Red Hat Enterprise Linux 7.4 开始，pcs
[**支持命令行中的位置限制中的正则表达式**]{.command}。这些限制适用于基于正则表达式匹配资源名称的多个资源。这可让您使用单一命令行配置多个位置限制。
以下命令创建一个位置约束，将资源 `dummy0 指定为 dummy`{.literal}
`9`{.literal} 首选 `node1`{.literal}。
``` screen
# pcs constraint location 'regexp%dummy[0-9]' prefers node1
```
因为 Pacemaker 使用 POSIX 扩展正则表达式，如
[http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04){.ulink}
所述，您可以使用以下命令指定相同的约束。
``` screen
# pcs constraint location 'regexp%dummy[[:digit:]]' prefers node1
```
:::
::: section
::: titlepage
## []{#ch-resourceconstraints-HAAR.html#s2-advancedlocationconstraints-HAAR}高级位置限制 {.title}
:::
在节点上配置位置限制时，您可以使用 [**pcs constraint
location**]{.command} 命令的 `resource-discovery`{.option} 选项指示
Pacemaker
是否应该为指定资源在该节点上执行资源发现。将资源发现限制到物理上能够运行的节点子集可能会在有大量节点时显著提高性能。当使用
`pacemaker_remote`{.literal}
将节点数扩展到数百个节点范围时，应考虑此选项。
以下命令显示为 [**pcs constraint location**]{.command} 命令指定
`resource-discovery`{.option} 选项的格式。*`请注意，id`* 是约束 id。在
[表 7.1
"简单位置限制选项"](#ch-resourceconstraints-HAAR.html#tb-locationconstraint-options-HAAR "表 7.1. 简单位置限制选项"){.xref}
*`中总结了rsc`*、*``* node
和分数的含义``{=html}``{=html}。*`在这个命令中，正分数值对应一个基本位置约束 `*，它配置为首选节点，而分数的负数值对应配置资源以避免节点的基本位置约束``{=html}``{=html}。与基本位置限制一样，您也可以使用这些限制的资源使用正则表达式。
``` screen
pcs constraint location add id rsc node score [resource-discovery=option]
```
[表 7.2
"资源发现值"](#ch-resourceconstraints-HAAR.html#tb-resdiscov-options-HAAR "表 7.2. 资源发现值"){.xref}
总结了您可以为 `resource-discovery`{.literal} 选项指定的值的含义。
::: table
[]{#ch-resourceconstraints-HAAR.html#tb-resdiscov-options-HAAR}
**表 7.2. 资源发现值**
::: table-contents
  值                   描述
  -------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `always`{.literal}   始终为此节点上的指定资源执行资源发现。这是资源位置约束的默认 `resource-discovery`{.literal} 值。
  `never`{.literal}    永不为这个节点上的指定资源执行资源发现。
  `专用`{.literal}     仅在此节点上对指定资源执行资源发现（及其他标记为 `专用`{.literal}的节点）。在不同节点间使用 `专用`{.literal} 发现同一资源的多个位置限制可创建节点 `资源发现的`{.literal} 子集。如果某个资源在一个或多个节点上标记为 `独`{.literal} 占发现，则该资源仅被允许放置到节点的子集中。
:::
:::
请注意，将 `resource-discovery`{.literal} 选项设置为 `never`{.literal}
或 `专用`{.literal}
选项可在这些位置中激活资源，而无需了解集群的知识。如果服务在集群控制之外启动（如
`systemd`{.literal}
或管理员），则可能会导致资源在多个位置处于活跃状态。如果
`部分`{.literal} 群集发生故障或遭遇脑裂，或者资源在该节点上活跃时更改了
`resource-discovery`{.literal}
属性，则也会发生这种情况。因此，只有在有超过八个节点时才使用这个选项，并可以保证只能在特定位置运行该资源（例如，当所需的软件没有在其它任何位置安装时）。
:::
::: section
::: titlepage
## []{#ch-resourceconstraints-HAAR.html#s2-using_rules_to_determine_resource_location}使用规则确定资源位置 {.title}
:::
[]{#ch-resourceconstraints-HAAR.html#idm140680342530688
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680342435648
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680342434384
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680355554432
.indexterm}[]{#ch-resourceconstraints-HAAR.html#idm140680361965664
.indexterm}
对于更复杂的位置限制，您可以使用 Pacemaker 规则来确定资源的位置。有关
Pacemaker 规则以及您可以设置的属性的一般信息，请参阅 [第 11 章
*Pacemaker
规则*](#ch-pacemakerrules-HAAR.html "第 11 章 Pacemaker 规则"){.xref}。
使用以下命令配置使用规则的 Pacemaker 约束。如果省略
`分数`{.literal}，则默认为 INFINITY。如果省略
`resource-discovery`{.literal}，则默认为 `always`{.literal}。有关
`resource-discovery`{.literal} 选项的详情请参考
["高级位置限制"一节](#ch-resourceconstraints-HAAR.html#s2-advancedlocationconstraints-HAAR "高级位置限制"){.xref}。与基本位置限制一样，您也可以使用这些限制的资源使用正则表达式。
使用规则配置位置限制时，`分`{.literal}
数值可以是正数或负数，正值表示\"prefers\"，负值表示\"avoids\"。
``` screen
pcs constraint location rsc rule [resource-discovery=option] [role=master|slave] [score=score | score-attribute=attribute] expression
```
*`expression`* 选项可以是以下之一，其中
*`duration_options 和 date_spec_options`* ``{=html}``{=html}
是：hours、monthdays、workerdays、yeardays、monthdays、month、weeks、weekyears、moon，如
[表 11.5
"日期规格的属性"](#ch-pacemakerrules-HAAR.html#tb-datespecs-props-HAAR "表 11.5. 日期规格的属性"){.xref}
所述。
::: itemizedlist
-   `defined|not_defined attribute`{.literal}``{=html}``{=html}
-   `attribute`{.literal}``{=html} lt\|gt\|lte\|gte\|eq\|ne
    \[string\|integer\|version\] *`值`* ``{=html}
-   `日期 gt|lt date`{.literal}``{=html} ``{=html}
-   `至今为止`{.literal}``{=html} *`的日期`* ``{=html}
-   `持续时间为 duration_options`{.literal}``{=html}
    *`的日期`*\...``{=html}
-   `date-spec date_spec_options`{.literal}``{=html}``{=html}
-   `expression`{.literal}``{=html} and\|or
    *`表达式`*``{=html}
-   `（表达式`{.literal}``{=html}）``{=html}
:::
下面的位置约束配置一个满足以下位置的表达式（如果现在是 2018 年）。
``` screen
# pcs constraint location Webserver rule score=INFINITY date-spec years=2018 
```
以下命令配置一个周一到周五从上午 9 点下午 5 点为 true
的表达式。请注意，小时值为 16 可以匹配到 16:59:59，因为小时数仍然匹配。
``` screen
# pcs constraint location Webserver rule score=INFINITY date-spec hours="9-16" weekdays="1-5"
```
下面的命令配置一个表达式，当周五且为 13 号并为一个满月时，这个表达式为
true。
``` screen
# pcs constraint location Webserver rule date-spec weekdays=5 monthdays=13 moon=4
```
:::
::: section
::: titlepage
## []{#ch-resourceconstraints-HAAR.html#s2-locationconstraintstrategy-HAAR}位置限制策略 {.title}
:::
使用
["基本位置限制"一节](#ch-resourceconstraints-HAAR.html#s2-simplelocationconstraints-HAAR "基本位置限制"){.xref}、["高级位置限制"一节](#ch-resourceconstraints-HAAR.html#s2-advancedlocationconstraints-HAAR "高级位置限制"){.xref}
和
["使用规则确定资源位置"一节](#ch-resourceconstraints-HAAR.html#s2-using_rules_to_determine_resource_location "使用规则确定资源位置"){.xref}
中描述的任何位置限制，您可以配置常规策略来指定资源可在哪些节点上运行：
::: itemizedlist
-   Opt-In 集群 -
    配置一个集群，默认情况下，任何资源都无法在任何位置运行，然后有选择地为特定资源启用允许的节点。配置
    opt-in 集群的步骤请参考 ["配置 \"Opt-In\"
    集群"一节](#ch-resourceconstraints-HAAR.html#s3-optin-clusters-HAAR "配置 "Opt-In" 集群"){.xref}。
-   Opt-Out 集群s -
    配置一个集群，默认情况下，所有资源都可在任何位置运行，然后为不允许在特定节点上运行的资源创建位置限制。配置
    opt-out 集群的步骤请参考 ["配置 \"Opt-Out\"