let N = {a ∈ (tND(t)\P)|a is a snapshot Boolean variable asserted to false}. Let
i
P∪· N beapartitionoftND(t i)suchthatP={a∈2tND(ti)\0/|aisasnapshotBoolean
variable asserted to true} and let N ={a∈(2tND(ti)\0/\P)|a is a snapshot Boolean
variable asserted to false}. A snapshot of t, denoted by tss(t) is a set of asserted
i i
·
snapshotBooleanvariablessuchthat,ift isaXOR-splitthentss(t)=P∪N;ift is
i i i
·
anOR-splitthentss(t)=P∪N.
i
Remark20 ClearlyP∩N=P∩N=0/.NotethatP,PandN arealwaysnonempty
sets, but N can be empty. When N is empty, it means that all the Boolean terms of
theoutgoingconditionofthetaskt aretrue,i.e.,allsnapshotBooleanvariablesare
i
assertedtotrue.
Notation21 We denote bytss(t)tND(t) to specify thattss(t) is a snapshot with
i i i
allsnapshotBooleanvariablesintND(t).
i
Example22 Thetaskt oftheworkflowfromFigure1hasthetasksnapshottss (t )=
2 1 2
·
P∪N, where P ={a } and N ={a }, i.e.,a is asserted to true anda is as-
1 1 1 2 1 3 2 3
·
sertedtofalse. Ithasalsothetasksnapshottss (t )=P∪N,whereP ={a }and
2 2 2 2 2 3
N ={a },i.e.,a isassertedtotrueanda isassertedtofalse.
2 2 3 2
Definition23 Workflow snapshot. Let WG be a workflow. Suppose that ND =
{i ,i ,...,i }, i.e., t ,t ,...,t are the non-deterministic tasks of WG. For every
1 2 k i1 i2 ik
l∈{1,...,k}lettss(t )beasnapshotoft .AsnapshotofWG,denotedbywss(WG),
il il
isanelementoftheform(tss(t ),tss(t ),...,tss(t )).
i1 i2 ik
Table2: Behavioraltaskmodels
EAmodelstructure Behavioraltaskmodel TaskSnapshot
t : f  f b(t)/b(t,s) s=tss(t)
E C
t :a •a •···•a a a =a =···=a =a —
i1 i2 il j i1 i2 il j
t :aa •a •···•a a=a =a =···=a —
i j1 j2 jl i j1 j2 jl
t :a ⊕a ⊕···⊕a a a =a ⊕a ⊕···⊕a —
i1 i2 il j j i1 i2 il
t :aa ⊕a ⊕···⊕a a =a∧a , stND(t)
i j1 j2 jl j1 i j1
a =a∧a ,
j2 i j2
.
.
.
a =a∧a
jl i jl
t :a ⊗a ⊗···⊗a a a =a ⊗a ⊗···⊗a —
i1 i2 il j j i1 i2 il
t :aa ⊗a ⊗···⊗a a =a∧a , stND(t)
i j1 j2 jl j1 i j1
a =a∧a ,
j2 i j2
.
.
.
a =a∧a
jl i jl
t :aa a=a —
i j i j
Example24 The workflow from Figure 1 has several snapshots. As ND={2,6},
wND(WG)={tND(t ),tND(t )},tND(t )={a ,a },tND(t )={a ,a }.Lettss(t )=
2 6 2 2 3 6 7 8 2
·
P∪N,whereP={a }andN={a },i.e.,a isassertedtotrueanda isasserted
2 3 2 3
·
to false. Let tss(t )=P∪N, where P={a } and N ={a }, i.e.,a is asserted to
6 7 8 7
true anda is asserted to false. Then one snapshot of WG, is (tss(t ),tss(t )) =
8 2 6
· ·
(P∪N,P∪N),i.e.,a =true,a = false,a =true,a = false.
2 3 7 8
Remark25 Ift isaXOR-splitthenithas|tND(t)|snapshots,ift isanOR-splitthen
i i i
ithas|2tND(ti)|−1snapshots. IftheworkflowWGdoesnotcontainnon-deterministic
tasks,ND=0/. Therefore,therearenoworkflowsnapshots.
Definition26 Abehavioraltaskmodelofataskt isabehavioralexpressiondenoted
byb(t)whent isadeterministictask;andift isanon-deterministictaskitisdenoted
byb(t,s),wheresisatasksnapshot. Thebehavioralexpressionsb(t)andb(t,s)are
expressedinTable2anddependonthetypetheoftheEAmodelsassociatedtothem.
Definition27 Let WG be a workflow. Let t : f  f be an EA model. If t is a
E C
deterministictask,i.e.,t : f  f isanAND-join,AND-split,XOR-join,OR-joinor
E C
Sequence,wesaythatb(t)ispositivewhen:
(a)Ift isanAND-joinorAND-split,allitsBooleantermsaretrue,
(b)Ift isaXOR-join,OR-joinorSequence,bothsidesofitsequalitiesaretrue.
Ift isanon-deterministictask,i.e.,t : f  f isaXOR-splitoranOR-split,we
E C
saythatb(t,s)ispositivewhen:
(a)Ift : f  f isaXOR-split,thereisonlyoneofitsequalitieswithbothsides
E C
true,
(b) If t : f  f is an OR-split, there is at least one of its equalities with both
E C
sidestrue.
Ift isanytaskofT,wesaythatt isnegativeifisnotpositive.
Definition28 LetWGbeaworkflow. ThebehavioralworkflowmodelofWG(denoted
by B(WG,s)) is a system of equalities formed by the behavioral task models of all
taskst ∈T,i.e.,
i
Case 1. If WG does not contain non-deterministic tasks, then the behavioral
n
workflowmodelis b(t).
i
i=1
Case 2. IfWG contain non-deterministic tasks, suppose that t , t , ..., t are
i1 i2 ik
the non-deterministic tasks of WG. For any workflow snapshot s = (s , s , ...,
i1 i2
s ) = wss(WG) = (tss(t ), tss(t ), ..., tss(t )) the behavioral workflow model is
ik i1 i2 ik
n
b(t,s),where
i i
i=1
b(t),i∈{1,...,n}\{i ,i ,...,i },
i 1 2 k
b(t,s)= (1)
i i
b(t ,s ), l∈{1,2,...,k}.
il il
Remark29 Ifallthetaskst ∈T aredeterministicandthereforethereisnoworkflow
i
snapshots,wecandenoteB(WG,s)simplybyB(WG).
Example30 The workflow from Figure 1 has the following behavioral workflow
modelB(WG,s):
a =a,a =a,a =a,a =a ,
2 4 3 5 7 9 8 10
a =a =a,a =a =a ,
 1 6 11 12 
a =a ∧a ,a =a ∧a ,a =a ⊕a ,
7 6 7 8 6 8 11 9 10
a =a ∧a ,a =a ∧a ,a =a ⊗a.
2 1 2 3 1 3 12 4 5
Definition31 WesaythatWGlogicallyterminatesifa istruewhenevera istrue
andwesaythatWGneverlogicallyterminatesifa is falsewhenevera istrue.
Definition32 LetWGbeaworkflowandB(WG,s)beitsbehavioralworkflowmodel.
We say that B(WG,s) is positive if a in B(WG,s) is true, whenever a is asserted
to true in B(WG,s). We say that B(WG,s) is negative if a in B(WG,s) is false,
whenevera isassertedtotrueinB(WG,s).
Theorem33 Let WG be a workflow and let B(WG,s) be its behavioral workflow
model. Then,WGlogicallyterminatesifandonlyifB(WG,s)ispositive.
Proof. Case1. SupposethatWGdoesnotcontainnon-deterministictasks,i.e.,allthe
n
tasks present inWG are deterministic. Then, B(WG,s)=B(WG)= b(t). Since
i
i=1
WGisformedbyallitsEAmodels,andaccordingtoDefinition26,everyEAmodel
t : f  f isdescribedbyitsbehavioraltaskmodelb(t),consequentlythebehavior
i Ei Ci i
oftheworkflowisdescribedbyB(WG).Hence, a istruewhena istrueinWGif
andonlyifa istruewhena istrueinB(WG),i.e.,WGlogicallyterminatesifand
onlyifB(WG)ispositive.
Case 2. Suppose thatWG contains non-deterministic tasks. Suppose thatND=
{i ,i ,...,i },i.e.,t ,t ,...,t arethenon-deterministictasksofWG.Lets=(s ,
1 2 k i1 i2 ik i1
s , ..., s ) = (tss(t ), tss(t ), ..., tss(t )) be a workflow snapshot of WG. Then
i2 ik i1 i2 ik
n
B(WG,s)= b(t,s),whereb(t,s)isdefinedby(1).
i i i i
i=1
Bearing in mind thatWG is formed by all itsEA models, and according to Def-
inition 26, every EA model t : f  f is described by its behavioral task model
i Ei Ci
b(t,s),thenthebehavioroftheworkflowisdescribedbyB(WG,s).Therefore,a is
i i 
truewhena istrueinWGifandonlyifa istruewhena istrueinB(WG,s),i.e.,
WGlogicallyterminatesifandonlyifB(WG,s)ispositive.
Theorem34 Let WG be a workflow and let B(WG,s) be its behavioral workflow
model. Then,WGneverlogicallyterminatesifandonlyifB(WG,s)isnegative.
Proof. UsingsimilarargumentsasthosefromtheproofofthepreviousTheorem,we
canstatethata isfalsewhenevera istrueinWGifandonlyifa isfalsewhena
is true in B(WG,s). Thus,WG never logically terminates if and only if B(WG,s) is
negative.
3 Conclusions
To guarantee that workflows successfully terminate, it is necessary to verify their
propertiesatdesigntime. Inthispaperwepresentaformaltheory,basedongraphs,
tochecktheterminationofworkflows. Inourapproachwemodelworkflowswithtri-
logic acyclic directed graphs and develop a snapshot-based formalism to investigate
the termination of workflows. The analysis of graphs-based workflows is important
sincemanyofthemostwell-knownandwidespreadworkflowsystemsuseanotation
based on graphs. While it is possible to transform a graph-based workflow into a
Petri net-based workflow and then verify its termination, we believe that it is more
practical for workflow vendors to directly implement into their systems the theory
that we havedeveloped. This solution will allowcommercial applications to be less
complexandeliminatestheneedtoimplementasoftwarelayertointerpretPetrinets.
The contribution of our work will enable the development of a new set of tools that
willsupport andallowbusinessprocessanalysts toverifythe correctdesignof their
workflowsinanearlyphaseoftheworkflowlifecycledevelopment.
References
[1] W.M.P.vanderAalst. Theapplicationofpetrinetstoworkflowmanagement.
TheJournalofCircuits,SystemsandComputers,8(1):21–66,1998.
[2] P. Attie, et al. Specifying and enforcing intertask dependencies. In Proc. 19th
Int.ConferenceonVeryLargeDataBases,pp.134–145,Ireland,1993.
[3] J. Cardoso and G. Cravo Verifying the logical termination of workflows. In
Proc. 5th Annual Hawaii International Conference on Statistics, Mathematics
and Related Fields, pp. 330–346, ISSN: 1550-3747, 16-18 January, Hawaii,
USA,2006.
[4] Umeshwar Dayal, et al. Organizing long-running activities with triggers and
transactions. In ACM SIGMOD international conference on Management of
datatableofcontents,pp.204–214,1990.
[5] J. Eder, et al. A workflow system based on active databases. In Proceedings
ofCON’94,WorkflowManagement: Challenges,ParadigmsandProducts,pp.
249–265,Austria,1994.
[6] A.H.M. ter Hofstede and E.R. Nieuwland. Task structure semantics through
processalgebra. SoftwareEngineeringJournal,8(1):14–20,1993.
[7] J. Klingemann, et al. Deriving service models in cross-organizational work-
flows. InProceedingsofRIDE-InformationTechnologyforVirtualEnterprises
(RIDE-VE’99),pp.100–107,Sydney,Australia,1999.
[8] METEOR. Meteor(managingend-to-endoperations)projecthomepage,2004.
[9] P.Muth,etal. Enterprise-wideworkflowmanagementbasedonstateandactiv-
ity charts. In Proceedings NATO Advanced Study Institute on Workflow Man-
agementSystemsandInteroperability.SpringerVerlag,1998.
[10] M.P. Singh. Semantical considerations on workflows: An algebra for inter-
taskdependencies. InFifthInternationalWorkshoponDatabaseProgramming
Languages,ElectronicWorkshopsinComputing,Italy,1995.