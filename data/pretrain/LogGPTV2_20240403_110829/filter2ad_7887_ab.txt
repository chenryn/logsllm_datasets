                      {/if}
这里也是可以打cookie的，跟上述一样，为了演示方便就选择了弹窗  
# sql注入
## 第一处sql注入
`/Home/c/MessageController.php`中的index方法
    function index(){
            if($_POST){
                $w = $this->frparam();
                $w = get_fields_data($w,'message',0);
                $w['body'] = $this->frparam('body',1,'','POST');
                $w['user'] = $this->frparam('user',1,'','POST');
                $w['tel'] = $this->frparam('tel',1,'','POST');
                $w['aid'] = $this->frparam('aid',0,0,'POST');
                $w['tid'] = $this->frparam('tid',0,0,'POST');
                if($this->webconf['autocheckmessage']==1){
                    $w['isshow'] = 1;
                }else{
                    $w['isshow'] = 0;
                }
                $w['ip'] = GetIP();
                $w['addtime'] = time();
                if(isset($_SESSION['member'])){
                    $w['userid'] = $_SESSION['member']['id'];
                }
    ......
    ......
    ......
    ......
这里第20行`$w['ip'] = GetIP();`，然后我们回溯，去找到`GetIP()`函数
`/FrPHP/common/Functions.php`
    function GetIP(){ 
      static $ip = '';
      $ip = $_SERVER['REMOTE_ADDR'];
      if(isset($_SERVER['HTTP_CDN_SRC_IP'])) {
        $ip = $_SERVER['HTTP_CDN_SRC_IP'];
      } elseif (isset($_SERVER['HTTP_CLIENT_IP']) && preg_match('/^([0-9]{1,3}\.){3}[0-9]{1,3}$/', $_SERVER['HTTP_CLIENT_IP'])) {
        $ip = $_SERVER['HTTP_CLIENT_IP'];
      } elseif(isset($_SERVER['HTTP_X_FORWARDED_FOR']) AND preg_match_all('#\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}#s', $_SERVER['HTTP_X_FORWARDED_FOR'], $matches)) {
        foreach ($matches[0] AS $xip) {
          if (!preg_match('#^(10|172\.16|192\.168)\.#', $xip)) {
            $ip = $xip;
            break;
          }
        }
      }
      return $ip;
    }
这里第5行并没有对`$_SERVER['HTTP_CDN_SRC_IP']`进行过滤，我们只需要在http头中传入`CDN-SRC-IP`字段即可
我们可以本地对该函数进行输出，是可以传入任意字符的，上面的xss漏洞处已经做过演示了，这里就不再重复赘述了。
然后我们继续跟进，在`/Home/c/MessageController.php`中的第76行`$res =
M('message')->add($w);`，这个`add`方法是`Frphp`框架的一个插入数据表的方法
`/FrPHP/lib/Model.php`中的add方法
    // 新增数据
        public function add($row)
        {
           if(!is_array($row))return FALSE;
            $row = $this->__prepera_format($row);
            if(empty($row))return FALSE;
            foreach($row as $key => $value){
                if($value!==null){
                    $cols[] = $key;
                    $vals[] = '\''.$value.'\'';
                }
            }
            $col = join(',', $cols);
            $val = join(',', $vals);
            $table = self::$table;
            $sql = "INSERT INTO {$table} ({$col}) VALUES ({$val})";
            if( FALSE != $this->runSql($sql) ){
                if( $newinserid = $this->db->lastInsertId() ){
                    return $newinserid;
                }else{
                    $a=$this->find($row, "{$this->primary} DESC",$this->primary);
                    return array_pop($a);
                }
            }
            return FALSE;
        }
显然，第10行的`$value`我们可控（前面的ip可控），而且这里也并没有对插入数据表的数据进行过滤，所以这里存在sql注入，这里可以直接进行报错注入
查询当前用户payload：
    2' and extractvalue(0x0a,concat(0x0a,(select user()))) and '1
## 第二处sql注入
`/Home/c/UserController.php`中的`release`方法中的关键代码如下：
    //文章发布和修改
        function release(){
        $this->checklogin();
        error_reporting(E_ALL^E_NOTICE);
        if($_POST){
            $data = $this->frparam();
    ........
    ........
    ........
                    $w['tid'] = $this->frparam('tid');
            if(!$w['tid']){
                if($this->frparam('ajax')){
                    JsonReturn(['code'=>1,'msg'=>'请选择分类！']);
                }else{
                    Error('请选择分类！');
                }
            }
          $w['molds'] = $this->classtypedata[$w['tid']]['molds'];
          $w = get_fields_data($data,$w['molds']);
    ........
    ........
    ........
              if($this->frparam('id')){
                $a = M($w['molds'])->update(['id'=>$this->frparam('id')],$w);
上述代码第7行`$data = $this->frparam()`，`frparam()`方法前面已经提过了，这里就不再累赘重复了
这里是用来接收值的，如果是post传输的，就接收所有post的值，并且不进行过滤。
然后第11行代码`$w['tid'] = $this->frparam('tid');`，这里会接收参数名为`tid`的值，并且会进行`return
(int)$value;`处理，这样传入`1'`就不行了，但是没关系，我们接着看第21行`$w =
get_fields_data($data,$w['molds']);`，我们回溯一下`get_fields_data()`方法
`/Conf/Functions.php`
    function get_fields_data($data,$molds,$isadmin=1){
         if($isadmin){
             $fields = M('fields')->findAll(['molds'=>$molds,'isadmin'=>1],'orders desc,id asc');
         }else{
             //前台需要判断是否前台显示
             $fields = M('fields')->findAll(['molds'=>$molds,'isshow'=>1],'orders desc,id asc');
         }
         foreach($fields as $v){
             if(array_key_exists($v['field'],$data)){
                 switch($v['fieldtype']){
                     case 1:
                     case 2:
                     case 5:
                     case 7:
                     case 9:
                     case 12:
                     $data[$v['field']] = format_param($data[$v['field']],1);
                     break;
                     case 11:
                     $data[$v['field']] = strtotime(format_param($data[$v['field']],1));
                     break;
                     case 3:
                     $data[$v['field']] = format_param($data[$v['field']],4);
                     break;
                     case 4:
                     case 13:
                     $data[$v['field']] = format_param($data[$v['field']]);
                     break;
                     case 14:
                     $data[$v['field']] = format_param($data[$v['field']],3);
                     break;
                     case 8:
                     $r = implode(',',format_param($data[$v['field']],2));
                     if($r!=''){
                         $r = ','.$r.',';
                     } 
                     $data[$v['field']] = $r;
                     break;
                 }
             }else if(array_key_exists($v['field'].'_urls',$data)){
                 switch($v['fieldtype']){
                     case 6:
                     case 10:
                     $data[$v['field']] = implode('||',format_param($data[$v['field'].'_urls'],2));
                     break;
                 }
             }else{
                $data[$v['field']] = '';      
             }
         }
         return $data;
     }
因为我们不是admin，所以我们会执行第6行代码`$fields =
M('fields')->findAll(['molds'=>$molds,'isshow'=>1],'orders desc,id asc');`
这里我post传入参数，简单的debug了一下，如下
所以上述代码`$fields['field']`是不存在的，所以只会执行第51行代码`$data[$v['field']] =
'';`，所以第56行返回的代码就是`$data =
$this->frparam();`，这也就解释了为什么中间对`tip`进行过滤，但为什么最后依然还是存在注入，这应该是个严重的开发失误。
然后我们接着回溯`update()`方法
`/FrPHP/lib/Model.php`
    // 修改数据
        public function update($conditions,$row)
        {
            $where = "";
            $row = $this->__prepera_format($row);
            if(empty($row))return FALSE;
            if(is_array($conditions)){
                $join = array();
                foreach( $conditions as $key => $condition ){
                    $condition = '\''.$condition.'\'';
                    $join[] = "{$key} = {$condition}";
                }
                $where = "WHERE ".join(" AND ",$join);
            }else{
                if(null != $conditions)$where = "WHERE ".$conditions;
            }
            foreach($row as $key => $value){
                if($value!==null){
                    $value = '\''.$value.'\'';
                    $vals[] = "{$key} = {$value}";
                }else{
                    $vals[] = "{$key} = null";
                }
            }
            $values = join(", ",$vals);
            $table = self::$table;
            $sql = "UPDATE {$table} SET {$values} {$where}";
            return $this->runSql($sql);
        }
`/Home/c/UserController.php`关键代码中的第25-26行，虽然25行`if($this->frparam('id'))`对`id`进行了过滤，但是第26行`$a
=
M($w['molds'])->update(['id'=>$this->frparam('id')],$w);`这里`update`插入的是最原始的数据，，=也就是`$w
= get_fields_data($data,$w['molds']);`。虽然`$conditions`也就是条件被过滤了，但是不影响我们注入。
所以这里的`id`，`molds` ，`tid`三个字段都存在sql注入
## 第三处sql注入
`/Home/c/UserController.php`中的`userinfo()`方法中的关键代码如下：
    function userinfo(){
            $this->checklogin();
            if($_POST){
                $w = $this->frparam();
                $w['tel'] = $this->frparam('tel',1);
                $w['pass'] = $this->frparam('password',1);
                $w['sex'] = $this->frparam('sex',0,0);
                $w['repass'] = $this->frparam('repassword',1);
                $w['username'] = $this->frparam('username',1);
                $w['email'] = $this->frparam('email',1);
                $w['litpic'] = $this->frparam('litpic',1);
                $w['signature'] = $this->frparam('signature',1);
                $w = get_fields_data($w,'member',0);
    ........
    ........
    ........
                $re = M('member')->update(['id'=>$this->member['id']],$w);
                $member = M('member')->find(['id'=>$this->member['id']]);
                unset($member['pass']);
                $_SESSION['member'] = array_merge($_SESSION['member'],$member);
                if($this->frparam('ajax')){
                    JsonReturn(['code'=>0,'msg'=>'修改成功！']);
                }
                Error('修改成功！');
这里我们对比一下我post抓包后的字段，我们发现有3个字段没有进行过滤，分别是`province`、`city`、`address`这三个字段
然后第17行`$re =
M('member')->update(['id'=>$this->member['id']],$w);`所有字段依旧被`update`更新了，所以这里就存在了注入，还是一个报错注入，如果不回显报错也没有关系的，这里存在时间盲注，也是可以注入的
payload：
    1' or (updatexml(1,concat(0x7e,(select user()),0x7e),1)) or '
`province`字段演示
`city`字段演示
`address`字段演示
# 逻辑漏洞
## 第一处逻辑漏洞——任意订单查看
首先注册两个账号，账号A和账号B
然后用账号B购买一些商品，产生交易记录和订单号码
然后在A用户这里我的钱包——交易记录可以看到其他人的交易订单
而且这里的订单号明显是更具时间戳进行命名的，我用其他A账户也可以直接访问到B账户的一些订单信息
然后我们来分析为什么
`/Home/c/UserController.php`
    //购买列表
        function buylist(){
            $this->checklogin();
            //兑换记录
            $page1 = new Page('buylog');
            $this->type = $this->frparam('type',0,1);
            if($this->type==1){
                $sql =" buytype='money' and type=2 ";
            }else if($this->type==2){
                $sql =" buytype='jifen' and type=1 ";
            }else{
                $sql = " type=3 ";
            }
            $data1 = $page1->where($sql)->orderby('addtime desc')->page($this->frparam('p',0,1))->go();
            $page1->file_ext = '';
            $pages1 = $page1->pageList(5,'?p=');
            $this->pages1 = $pages1;
            foreach($data1 as $k=>$v){
                $data1[$k]['date'] = date('Y-m-d H:i:s',$v['addtime']);
                $data1[$k]['details'] = U('user/buydetails',['id'=>$v['id']]);
            }
            $this->lists1 = $data1;//列表数据
            $this->sum1 = $page1->sum;//总数据
            $this->listpage1 = $page1->listpage;//分页数组-自定义分页可用
            $this->prevpage1 = $page1->prevpage;//上一页
            $this->nextpage1 = $page1->nextpage;//下一页
            $this->allpage1 = $page1->allpage;//总页数
            //订单记录
            $page = new Page('orders');
            $this->type = $this->frparam('type',0,1);
            if($this->type==1){
                $sql =" ptype=1 ";
            }else{
                $sql =" ptype=2 ";