(cid:88)
(cid:88)
i∈P
j∈Q
Di(x),
for all x
Dj(x),
for all x
then it is diﬃcult to distinguish packets from P and Q. In
such case, we say that a collision has occurred.
In general, the associated Di should be chosen so as to
minimize collisions, for example, using a collision-resistant
code. However, due to the size of the problem, RPM employs
random codes as it is more practical. For each i, the Di is
generated from a random function (for example, SHA) with
i as input. We will show in later section that use of random
codes provides suﬃciently good results.
Note that given the network topology, certain sets of
markers are more likely to appear compare to others. Ideally,
the Di can be chosen by considering the network topology
to avoid collisions. However, in practice, individual marker
lacks the global topology information. Hence, a reasonable
approach, as used in RPM, is to assign the Di randomly.
3.2.3 Reconstruction algorithm
Due to the large problem size, a PPM scheme needs to ad-
dress both the choice of Di and the identiﬁcation algorithm
at the same time. Enforcing certain relationship among the
tags in Di for each i can aid identiﬁcation. For example,
in RnL [9], all tags from a marker contain the same ”cord”.
That is, a substring (the cord) of every tag from a marker
is the same. An example given by [9] invests 15 bits for the
cord when L = 25. Based on the cord, the received pack-
ets can be easily divided into smaller groups. Next, packets
in diﬀerent groups are identiﬁed independently. Since the
number of packets in each group is smaller than the total
number of packets, the task of identiﬁcation become easier.
RPM does not exploit special structure in the tags for re-
construction. Instead, it assumes prior knowledge of neigh-
borhood nodes and uses a hop-by-hop reconstruction. Such
assumptions are also made in FMS, AMS, and FIT.
Figure 1: Path Length Distribution
3.2.4 Marking Structures of Existing Schemes
Existing schemes often divide the L-bit tags into multiple
components to include structures that contains path infor-
mation or aid reconstruction. If the number of unique tags
generated by a marker is h, i.e. |Xi| = h, there is a (cid:100)log2 h(cid:101)-
bit component which labels the tags. Let us call it the hash
index. For example, if |Xi| = 2, then the hash index starts
from 00, 01, 10 to 11. In addition, there is a component that
is determined from the hash index and the marker’s identity.
Let us call this the hashed value. A few schemes, for exam-
ple, FMS [14], AMS[16], and FIT[20], allocate 8 bits for the
hashed value and 2-3 bits for the hashed index, and employ
diﬀerent hash functions to compute the hashed value. RnL
[9] also reserves some bits for the hash index and the hash
value.
3.3 Entropy of Packet Marks
One measure of the quality of a chosen Di is the entropy
of the mixture of distributions received by the victim. In-
tuitively, uniformly random packet marks deliver highest
entropy. Higher entropy carries more bits of information,
which can reduce the false negatives ratio α and the false
positives ratio β. Entropy measure provides a means to
evaluate the performance of PPM schemes. A good marking
scheme should strive to achieve high entropy packet marks.
Some existing schemes trade oﬀ some entropy in the tags
for easy path reconstruction; but they underperform in ef-
fectiveness. In particular, we will show that the use of hop
count to indicate distance from markers to the victim results
in lower entropy than uniformly random bits.
The design of FMS, AMS and FIT are very similar. They
allocate 8 or 13 bits for hash value, 2-3 bits to indicate the
hash index, and 5-6 bits to keep the hop count from the
marker to the server. AMS slightly improves over FMS on
the traceback accuracy because it uses a better hash func-
tion. FIT in turn outperforms AMS by reducing hash colli-
sions. It introduces longer hash outputs, and encodes node
information instead of edge, since there are fewer nodes than
edges. However, for FIT, L = 21 instead of 16. It updates 5
bits of the Time-To-Live (TTL) ﬁeld, besides marking over
the 16-bit packet ID ﬁeld. This changes the semantics of
TTL. For instance, an intermediate router can now prolong
the lifetime of a packet by enlarging its TTL value.
FMS and AMS utilize 5 bits of distance information to aid
in the hop-by-hop path reconstruction. The entropy of such
distance information is low, resulting in ineﬃcient use of the
00.020.040.060.080.10.120.140.160510152025303540Path LengthFraction of All PathsUniverseSample2 bits for a hash fragment; AMS uses 5 bits for the dis-
tance and 7 bits for the hash value. The simulation uses the
same topology as the previous experiment. Every edge in
the topology generates 1,000 packet marks according to the
marking schemes.
Figure 3 shows how the accumulated ratio of packet mark
varies with ratio of tags received by the victim. Each point
in the plot corresponds to a bin size of at least 1,000 distinct
tags. In the ideal case, the packet marks distribution should
be uniform and is shown for comparison purpose. The plot
clearly shows that the distribution generated for AMS and
RnL are skewed and much worse than the uniform distribu-
tion. For AMS, up to 70% of all tags are carried by a small
number of packets ( 50%) carry small portion ( 15 hops) values
occur with low probability and are under-utilized. Second,
the schemes allow routers to reset the distance information.
Distance information embedded by remote routers are likely
to be overwritten by routers closer to the victim. Again,
as shown in Figure 2, the distance ﬁeld ends up more fre-
quently with small values.
In sum, the distance ﬁeld has
lower entropy than uniformly random bits. The marking
bits are not eﬃciently utilized by incorporating the distance
information.
Now we measure the performance of diﬀerent PPM
schemes with respect to their tags’ entropy. For compar-
ison, we include marking schemes of AMS and RnL. RnL
or randomize-and-link, uses large checksum cords to facili-
tate fast identiﬁcation. RnL is selected because the packet
marks are designed to have high randomness. The drawback
of RnL is that its path reconstruction process is not scalable.
The scheme RPM will be presented in Section 4. The tags
it generates have an entropy very close to that of RnL, but
RPM also has a scalable path reconstruction.
For a fair comparison, both RnL and AMS generate 16
16-bit packet marks for each edge and have a marking prob-
ability of p = 1/16. RnL uses 10 bits for the checksum and
00.020.040.060.080.10.120.140.16051015202530DistanceFraction of All PacketsFMS, AMSIdeal00.20.40.60.8100.20.40.60.81Ratio of TagsAccumulated Ratio of Packet MarksOptimumRPMRnLAMS3.4.1 Without Topology Information
RnL is designed for a marker to transmit a message, which
can be the marker’s identity. In RnL, the reconstruction of
the message, or identiﬁcation can be carried out without
prior knowledge of the network. It associates fragments of
a path information message using checksum cord. A frag-
ment has v (3 to 6) bits, but 8 to 11 bits out of 17 is allo-
cated to the checksum, so as to reduce the likelihood that
diﬀerent markers producing the same cord in the whole net-
work. Identiﬁcation uses checksum as an associative address
of message fragments, as it is invariant for a message. The
veriﬁcation of valid fragment combinations is expensive, par-
ticularly when many markers have the same checksum. By
using combinatorial search to reconstruct multiple attack
paths, the scalability of RnL is limited.
The algebraic approach [7] proposes an interesting way to
reconstruct the attack path. In this approach, only a small
number of packets is needed for reconstruction. The scheme
has ﬂexible parameterizations, with the length of a packet
mark ranges from 18 to 25. It uses s bits to instantiate a
random variable, and use router IP addresses as the coeﬃ-
cients to construct a polynomial. v bits are allocated to store
the evaluated polynomial. h bits are assigned to keep track
of the number of participating routers, which is translated
into the degree of the polynomial. The values of v and h
are tunable depending on the total number of bits allocated
to a tag. The entropy of each component is high. However,
the encoding and path reconstruction processes are expen-
sive. Even though BCH decoding can be employed to ﬁnd a
high degree polynomial among samples, no known algorithm
can eﬃciently identify multiple polynomials among samples.
That is, its path reconstruction does not scale with multiple
attack paths.
3.4.2 With Topology Information
An example scheme that uses topology information is
AMS. AMS assumes that the upstream router map is avail-
able. It subdivides the path information to track the hop
count from the marker to the victim. The distance informa-
tion binds diﬀerent fragments of a message. It reduces the
path reconstruction complexity by limiting the combinato-
rial search of messages to each distance. However, as shown
in Section 3.3, storing distance information reduces entropy
of tags.
In general, reconstruction without any topology informa-
tion is expensive. Hence, reconstruction with topology infor-
mation is more practical. For eﬀectiveness, it is important
that the information associating tags to markers have high
entropy. At the same time, using more bits to limit the
search space can increase the reconstruction eﬃciency. In
the next section, we will present our algorithm RPM that
takes all these considerations into account.
4. RANDOM PACKET MARKING (RPM)
As mentioned in Section 3.4, RnL is designed for scenar-
ios where knowledge of the network topology is not available
during identiﬁcation. Without network topology, it is com-
putationally diﬃcult to identify large number of markers,
although suﬃcient information is hidden in the tags. On
the other hand, some PPM schemes facilitate easy identiﬁ-
cation but sacriﬁce some randomness in the tags, reducing
the amount of information tags carry. For example, AMS
exploits topology information and encodes hop count to fa-
cilitate eﬃcient reconstruction; but the entropy per tag is
low.
In this section, we present RPM that naturally follows
from our model. RPM achieves both high entropy tags and
eﬃcient reconstruction.
It does not divide a packet mark
into components. All available bits are allocated to tags
associated with markers. The eﬀectiveness of RPM is in-
ﬂuenced by the collision probability of the distributions Di.
Yet RPM is general enough to support any functions in as-
signing Di. RPM caters for high entropy in the mixture of
packet mark distributions. With a reasonable Di assignment
function and a proper setting of system parameters, RPM
suﬃces in obtaining high traceback accuracy. Its path recon-
struction is lightweight and scalable, aided by the topology
information. RPM improves over AMS in that its marking
scheme is simple, fast, and the marks have high entropy. At
the same time, RPM simpliﬁes RnL and extends it to iden-
tify large number of markers with topology information.
4.1 Packet Marking