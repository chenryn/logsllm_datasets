用法：adb shell dumpsys package[pkgname]
案例：
这里就是相当于把应用的清单文件打印出来而已。
3.adb shell dumpsys meminfo
说明：可以查看指定进程名或者进程id的内存信息。
用法：adb shell dumpsys meminfo[pname/pid]
案例：
利用这个命令可以查看进程当前的内存情况，和后面的top命令可以结合使用，分析应用的性能消耗情况。
4.adb shell dumpsys dbinfo
说明：可以查看指定包名应用的数据库存储信息（包括存储的SQL语句）。
用法：adb shell dumpsys dbinfo[packagename]
案例：
这里可以清晰地看到应用执行过的SQL语句信息，对应用逆向的时候具有一定用途。毕竟可以查看应用操作数据库信息了。
5.adb intall
说明：安装应用包apk文件。
用法：adb install[apk文件]。
案例：
注意：如果应用已经安装了，需要使用adb install-r[apk文件]，相当于升级安装。这个命令就不多说了，非常简单。
6.adb uninstall
说明：卸载应用。
用法：adb uninstall[packagename]
案例：
和上面的命令类似。
7.adb pull
说明：将设备中的文件放到本地。
用法：adb pull设备目录文件本地目录。
案例：
注意，在操作的时候可能遇到文件权限问题，用chmod改一下权限即可。
8.adb push
说明：将本地文件放到设备中。
用法：adb push本地目录文件设备目录。
案例：
注意，在操作的时候可能遇到文件权限问题，用chmod改一下权限即可。
9.adb shell screencap
说明：截屏操作。
用法：adb shell screencap-p截图文件路径。
案例：
这个命令对于测试人员非常有用，有时候想快速截取手机屏幕，只要快速打开，就可以利用这个命令写一个简单的脚本文件，内容如下：
这样就一步到位，很快打开一个截图图片。这个是Windows中的bat命令格式。
延伸：一些恶意软件利用设备root之后，运行该命令就可以获取用户当前屏幕信息，对于盗取账号非常危险。
10.adb shell screenrecord
说明：录屏操作。
用法：adb shell screenrecord视频保存路径。
案例：
这个命令其实和上面截屏命令差不多，只不过这个是录制屏幕，对于测试人员来说更加重要，有时候想复现问题步骤，那么就可以采用这个命令进行录屏功能。
延伸：现在很多录屏软件（在5.0之前版本）可以在root之后用这个命令进行录屏功能。
11.adb shell input text
说明：输入文本内容。
用法：adb shell input text[需要输入文本框内容]
案例：
让需要输入内容的文本框获取焦点：
注意：这个命令也可以模拟物理按键、虚拟键盘、滑动、滚动等事件。
延伸：这个命令对于需要输入一大堆信息到文本框中的情况非常有用，比如在PC端有一段内容，想输入到手机的某个搜索框中，那么可以通过把这段内容发送到手机，然后再复制操作。但是有了这个命令就非常简单，先让想要输入的文本框获取焦点，然后运行这个命令即可。
12.adb forward
说明：设备的端口转发。
用法：adb forwrad[（远程端）协议：端口号][（设备端）协议：端口号]
案例：
这个命令在IDA调试中非常有用。
13.adb jdwp
说明：查看设备中可以被调试的应用的进程号。
用法：adb jdwp
案例：
这个命令或许用途不是很多，但是在调试的时候还是有点用途。
14.adb logcat
说明：查看当前日志信息。
用法1：adb logcat-s tag
案例：adb logcat-s fb
用法2：adb logcat|findstr pname/pid/keyword
案例：adb logcat|findstr cn.wjdiankong.demo
这个命令大家都不陌生，也是重中之重，有的同学或许会好奇，为何不用AS查看日志了，但是有时候AS不能满足需求，比如想开多个日志窗口，这时候可以打开多个cmd窗口利用这个命令查看日志信息即可。用得最多的就是-s参数，可以直接查看对应的tag日志信息，利用findstr进行信息过滤：
这里因为是在Windows下，所以用findstr进行信息过滤了，当然这个命令也可以直接在adb shell运行之后，比如：
这样就可以用grep进行信息过滤了。
3.3 shell命令
我所说的shell命令运行的前提是先运行adb shell，而这些命令和非shell命令都是互通的，所谓互通就是要想在设备中运行shell命令，就优先运行adb shell一下。比如查看当前应用信息，可以这么做：
也可以直接在外部运行，比如清空应用数据：
1.run-as
说明：可以在非root设备中查看指定debug模式的包名应用沙盒数据。
用法：run-as[package name]
案例：run-as cn.wjdiankong.demo
后面章节会详细介绍这个命令的原理。在开发中有时候对一个非root手机想看debug应用的沙盒数据，那么这个命令就可以帮助进行这项操作了。
2.ps
说明：查看设备的进程信息，或者指定进程的线程信息。
用法：ps|grep过滤内容
ps-t[pid]查看pid对应的线程信息
案例：
这个命令的重要程度不必多说，可以结合grep进行信息过滤。
3.pm clear
说明：清空指定包名应用的数据。
用法：pm clear[packagename]
案例：pm clear cn.wjdiankong.demo
有时候想清空一个应用的数据，可能需要去设置页面进行操作。可以不用那么麻烦，直接用这个命令即可。
4.pm install
说明：安装设备中的apk文件，功能和adb install一样。
用法：pm install[apk文件]
案例：
这个命令与adb install命令一样。
5.pm uninstall
说明：卸载设备中的应用，功能与adb uninstall一样。
用法：pm uninstall[packagename]
案例：
这个命令和adb uninstall命令一样。
6.am start
说明：启动一个应用。
用法：am start-n[包（package）名]/[包名].[活动（activity）名称]
案例：