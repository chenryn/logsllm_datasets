64 GB
128 GB
256 GB
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
YES
YES
–
–
–
–
–
–
–
–
YES
YES
10.0
9.0
9.0
9.0
9.0
10.0
10.0
9.0
10.0
9.0
10.0
10.0
10.0
9.0
10.0
10.0
10.0
10.0
10.0
10.0
10.0
9.0
10.0
10.0
9.0
9.0
10.0
10.0
10.0
10.0
10.0
10.0
10.0
10.0
2.71%
3.02%
7.31%
3.90%
2.85%
4.33%
1.44%
4.07%
5.47%
5.78%
1.18%
1.44%
5.39%
2.98%
3.98%
3.02%
1.09%
0.26%
1.31%
0.57%
2.80%
0.44%
0.84%
3.25%
4.99%
2.15%
1.84%
7.14%
1.31%
1.01%
1.88%
3.63%
4.78%
1.84%
28%
13%
10%
19%
21%
4%
5%
0.15%
2%
27%
25%
33%
26%
15%
25%
19%
28%
13%
24%
21%
36%
38%
44%
37%
14%
17%
22%
28%
30%
30%
28%
29%
32%
25%
35.9
23.8
13.8
22.4
28.2
5.3
6.4
2.3
2.6
36.8
28.5
43.5
18.7
17.9
26.7
28.0
48.4
38.8
44.8
33.0
46.6
61.1
49.6
38.0
19.6
24.6
54.2
58.1
65.1
90.2
61.7
57.8
70.9
79.3
such as mountain and offshore areas, where the BSes have been long
neglected and in disrepair.
Among the 2.32 billion collected cellular failures, the vast major-
ity (>99%) include Data_Setup_Error, Out_of_Service, and Data_Stall
events. The remainder (<1%) are mainly related to the traditional
short message and voice call services that are less frequently used
today (e.g., short message sending failure tagged by Android as
RIL_SMS_SEND_FAIL_RETRY [7]), whose functions and enabling
techniques have been stable for nearly 20 years. As depicted in
Figure 3, an average of 16 Data_Setup_Error, 14 Data_Stall, and 3
Out_of_Service events occur to a single phone in our study. While
most (95%) phones do not experience Out_of_Service events, the
maximum number of Out_of_Service events on a single phone is
as large as 102,696. In particular, Data_Stall failures lead to the
vast majority of (94%) cellular failure duration among all the col-
lected cellular failure events, which will be explained in §3.2 and
practically mitigated in §4.2.
3.2 Android Phone Landscape
In this part, we go deeper into the internals of user devices with
respect to their hardware, software and OS components that may
pose impact on cellular failures, especially those with regard to the
emerging technologies.
Intuitively, using higher-end cell phones
Hardware Conﬁguration.
should help to mitigate cellular failures as they usually imply the
adoption of more reliable and/or powerful hardware components.
However, our measurement results generally indicate the opposite:
as shown in Figure 2 and Figure 5, both the prevalence and frequency
of cellular failures tend to increase with better hardware conﬁgura-
tions. To demystify this, we examine the correlation between each
feature (in Table 1) and the prevalence/frequency of cellular failures,
ﬁnding that two features, i.e., 5G capability and Android version,
have signiﬁcant inﬂuence on the occurrence of cellular failures.
Four out of the 34 phone models are equipped with 5G modems,
in which Models 23 and 24 have typical hardware conﬁgurations at
the moment while Models 33 and 34 have the best. As illustrated in
Figure 6 and Figure 7, both the prevalence and frequency of cellular
failures on 5G phones are higher than those on non-5G phones.
This suggests that the emerging 5G communication modules have
negative impact on the reliability of cellular connections, probably
due to the high workload they inﬂict on the network stack and system
kernel of Android for processing large volumes of inbound/outbound
data in short time, as well as their relatively immature production
state at the moment.
Android Version. The studied 34 phone models use either An-
droid 9 or Android 10, which are released in Aug. 2018 and Sep.
2019, respectively. Android 11 was recently released in Sep. 2020
and thus was not covered in our study (from Jan. to Aug. 2020).
We note that as Android evolves from version 9 to 10, a number
of new functions and performance improvements have been imple-
mented [1]. Although these updates are supposed to beneﬁt users, we
unexpectedly ﬁnd that both the prevalence and frequency of cellular
147101316192225283134Phone Model00.10.20.30.40.50.6PrevalenceAll Failures Data_Stall Data_Setup_Error Out_of_Service02004006008001,000Number of Failures0.70.750.80.850.90.951CDFMean=14 Max=118,891Mean=16 Max=138,076Mean=3 Max=102,696Mean=33 Max=198,228Out_of_Service Data_Setup_Error  Data_StallAll  Failures020040060080010001200Failure Duration (s)00.20.40.60.81CDFMin=0 Median=6 Mean=188 Max=91,770Figure 5: Frequency of cellular failures
on each model of phones.
Figure 6: Prevalence of cellular failures
on models w/ and w/o the 5G module.
Figure 7: Frequency of cellular failures
on models w/ and w/o the 5G module.
Figure 8: Prevalence of cellular failures
for different Android versions.
Figure 9: Frequency of cellular failures
for different Android versions.
Figure 10: Most Data_Stall failures are
automatically ﬁxed in a few seconds.
failures on Android 10 phones are higher than those on Android
9 phones, as demonstrated in Figure 8 and Figure 9. We attribute
this primarily to the better stability and robustness of Android 9, as
Android 10 was still undergoing constant ﬁxes and patches during
our measurement 4.
Adapting to the emerging 5G techniques, Android 10 added con-
siderable dedicated services, network functions, and programming
APIs [6]. While these novelties can enable various high-demanding
applications such as UHD video streaming and AR/VR [24], they
inevitably bring defects, risks, and vulnerabilities to the cellular
connection management modules of Android from the perspective
of software engineering.
In particular, we note that in the RAT (radio access technology)
selection policy of Android 10, 5G is blindly preferred to the other
RATs, probably aiming to maximize the potential beneﬁt of 5G,
especially its remarkably higher peak bandwidth. Nevertheless, this
policy could incur severe cellular failures. For example, when a user
device can establish either a 5G connection with low received signal
strength (RSS) or a 4G connection with high RSS, the preferred
4Given that 5G phone models can only run Android 10 (since Android 9 does not
support 5G), to make an independent analysis and a fair comparison, when comparing
the prevalence and frequency of cellular failures on 5G and non-5G models earlier in
this section, we should only select non-5G models running Android 10. Similarly, for a
fair comparison between Android 9 and Android 10 regarding their impacts on cellular
failures, we should only compare the phone models running Android 9 with the non-5G
models running Android 10. Since the corresponding fair-comparison results are similar
to those shown in Figure 6, Figure 7, Figure 8, and Figure 9, we choose not to plot
additional ﬁgures to demonstrate them.
usage of 5G might bring rather unstable cellular performance and
even cellular failures, although the co-existing 4G connection might
have better cellular performance. Worse still, this example is not a
rare case but happens frequently in our everyday life, thus leading to
a great number of cellular failures on 5G phones.
Data_Setup_Error Decomposition. When a data connection setup
fails, an error code will be generated by the radio interface to de-
scribe the reasons of the Data_Setup_Error failure, based on the
responses to the issued setup requests (if any) or the return values
of executed modem commands. In Android, a total of 344 error
codes are deﬁned. In Table 2 we list the top 10 most common er-
ror codes (after removing false positives) and their corresponding
meanings and percentages. As shown, the top 10 codes account for
nearly half (46.7%) of the Data_Setup_Error failures. In addition,
we ﬁnd that these error codes and their related causes are quite
diverse, covering cellular failures occurring at the physical layer
(e.g., SIGNAL_LOST and IRAT_HANDOVER_FAILED), the data link
or MAC layer (e.g., PPP_TIMEOUT), and the network layer (e.g.,
INVALID_EMM_STATE).
Data_Stall Recovery. Recall that in Android, when there have
been over 10 outbound TCP segments but not a single inbound
TCP segment during the last minute, a Data_Stall event happens [5].
According to our measurement, ∼40% of the cellular failures are