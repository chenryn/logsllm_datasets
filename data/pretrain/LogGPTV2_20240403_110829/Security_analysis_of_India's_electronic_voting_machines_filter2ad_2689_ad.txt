commands to read or write the EEPROM. This allows the
attacker to download the machine’s ordered vote records to
the laptop.
9After extracting the vote records, the attacker would only
need to determine the order in which voters used the machine
to learn which candidate each chose. An attacker might do
this by examining the register that voters sign, in order,
as they enter the polling place. This information can be
obtained by the public under India’s Right to Information
law. Generally there is only one EVM per polling place per
race, so the votes in the EVM will match the recorded order
of the voters.
5.
INEFFECTIVE COUNTERMEASURES
India’s EVMs and election procedures incorporate a num-
ber of features designed to prevent fraud. Unfortunately,
these mechanisms are not suﬃcient to prevent the attacks
we have demonstrated, and, in some cases, may actually
make security worse. We discuss the most important of these
countermeasures here.
Safety in Numbers Physically tampering with a large
fraction of EVMs might be diﬃcult because there are so many
in use. However, in close races an attacker might be able to
change the election outcome by tampering with only a few
machines. A small number of tightly contested seats often
determine which party holds a majority in the parliament,
so a national-level attacker could focus on tampering with
machines in these districts.
Physical Security Documented election procedures [24]
focus on guarding the EVMs from the time they are inspected
before an election until the ﬁnal public counting session.
Security in the period after the counting seems considerably
more lax, even though hardware replacement attacks would
be equally eﬀective during this period. States have reportedly
stored EVMs at places like high schools or “the abandoned
godown [warehouse] of Konark Jute mill” [50, p. 217]. In one
video [45], the “Strong Room” in which EVMs are stored
prior to counting appears to be a closet with a ﬁberboard
door and a paper sign that says “Strong Room.”
Tamper-Evident Seals Poll workers attempt to protect
the EVMs from tampering using an elaborate system of seals
placed over diﬀerent parts of the machine at various points
in the election cycle [45]. However, these seals are extremely
weak, consisting of stickers, strings, melted wax and plain
paper labels (see Figure 7). None of the materials are diﬃcult
to obtain or manipulate.
Election authorities might switch to more sophisticated
seals in the future, but this would not be suﬃcient to make the
EVMs secure. Tamper-evident seals have been thoroughly
discredited in scientiﬁc studies of electronic voting. For
example, Appel reports [3] that it is easy to defeat the seals
applied to AVC Advantage DREs in New Jersey. He shows
how to undetectably remove and replace the seals using
simple, readily available tools. He defeats a plastic strap
seal with a jeweler’s screwdriver, and he circumvents tamper-
evident tape by carefully peeling it oﬀ with the aid of a heat
gun. Other researchers who study tamper-evident seals have
reported that nearly every kind they have experimented with
is trivial to attack [34].
Even if the seals were diﬃcult to attack, responding to bro-
ken seals presents additional challenges for election oﬃcials.
What should oﬃcials do if, after an election but before votes
are counted, they discover that a large number of control
unit seals have been broken? This could be evidence of a
memory manipulation attack like the one we demonstrated,
which would leave no other visible traces, so oﬃcials might
decide to discard all votes from machines with broken seals.
However, this would create an even easier, low-tech attack
opportunity: a dishonest insider or other criminal could sim-
ply break the seals on control units at polling places where
voters were likely to favor an opponent.
Mock Elections The Election Commission attaches great
value to the small “mock polls” that are conducted before
each election. Their 2006 technical experts’ report states:
“Most importantly it is noted that the EVMs are subject to
mock-poll validation at various stages in front of all party
representatives. This is the best proof of validation of fairness
of the program as well as data being stored inside” [1]. On
the contrary, we conclude that these mock polls oﬀer very
little protection. It would be trivial to program a dishonest
EVM so that fraud would go unnoticed in pre-election mock
polls. For example, it could be instructed to cheat only after
several hours have passed or after the EVM has recorded
hundreds of votes. Although mock polls might protect against
non-malicious malfunction, or against a simplistic attacker
who switched the wires to the buttons and LEDs, it cannot
protect against the attacks we propose in this paper.
Secret Source Code The second- and third-generation
EVMs use election software masked into the microcontroller
and are designed to make it diﬃcult to read out the code.
The Election Commission’s experts cited this as a major
security feature: “The program is burnt into the microchip
on a ‘one time programmable’ basis (OTP) and once burnt
it cannot be read, copied out, altered and re-fed into the
chip at all” [1]. However, this also makes it diﬃcult for even
the EVM manufacturers to verify that the correct code is
actually present in the chips. One of the expert committee
members claimed in an interview that “even the BEL and
ECIL,” the companies that make the machines, “cannot read
what is in the code” [18].
Even if the correct software is there, it is risky to design a
voting system such that its security depends on keeping the
program secret. If the secret software does become known to
attackers, there is no way to recover except by changing to
new software — an expensive and time-consuming proposition.
Discovering the secret requires only a single weak link, such
as a dishonest insider at BEL or ECIL, or a security breach of
their software development systems. As Auguste Kerckhoﬀs
famously said of good military cryptographic design, “It must
not be required to be secret, and it must be able to fall into
the hands of the enemy without inconvenience” [36]. This
advice is equally true for EVM code.
In fact, the program can be read from the chips, given suf-
ﬁcient resources. Techniques for reverse engineering chips by
carefully opening them and inspecting them under a micro-
scope have been known in the literature for over 15 years [2].
Though expensive and time-consuming, these procedures are
routine in industry and are now being performed at the level
of academic security research (e.g., [44]). Thus, the secret
code could be revealed by one well-funded attacker with
access to a single EVM.
Machine Distribution Before each election, authorities
use an elaborate two-stage process to shuﬄe batches of EVMs
among parliamentary districts and to assign them to polling
places within each district [24]. This might make it harder for
an attacker who has placed dishonest hardware into a small
10number of EVMs to target a speciﬁc region, yet the process
is insuﬃciently transparent and may actually introduce a
new risk. The random assignments are made using custom
software that, to our knowledge, is not published. If this
software is dishonest, it could output assignments that appear
to be random but actually place EVMs that have already
been tampered with in the places the attacker wants to target.
Additionally, many parliamentary districts are as large as
voting districts, so randomization within the district would
not hamper an attacker who sought to steal votes for those
seats [50, p. 161].
Candidate Ordering The ﬁnal ballot positions of the
candidates are only known a few weeks before the election.
The Election Commission’s expert report claims that this
prevents fraud, because malicious software in the EVMs
would have no means of knowing which candidate to favor:
“It is noted that for biasing the program to favor a partic-
ular candidate, the ‘key number’ allotted to the candidate
is essential to be known, and this information for various
elections to be conducted in the future cannot possibly be
known at the EVM’s manufacturing stage. Hence no bias
can be introduced in the program at the time of manufacture
of the chip” [1, p. 4].
In practice, the order of the candidates is less random than
one might assume. Parliamentary candidates, for example,
are split into three groups: (1) candidates of recognized na-
tional parties and state political parties, (2) candidates of
registered unrecognized political parties and (3) other (inde-
pendent) candidates. Within each group the candidates are
listed alphabetically. So if four national parties participate
in a district, then, based on likely candidates for these four,
an attacker can make an educated guess about how the ﬁrst
four buttons will be assigned.
A dishonest EVM might also be commanded by a signal
sent by the attacker after the ballot order is determined.
There are several signaling methods that could be used:
Secret Knocks An attack might be designed to be signaled
by a designated sequence of inputs before or during the
election. Depending on the mode of attack, this might be a
series of button presses on the ballot unit, a series of votes
during the mock election, or even a series of real votes made
by the attacker’s accomplices.
Tampering During First-Level Checking The Election Com-
mission mandates “ﬁrst level checking” of EVMs before elec-
tions by authorized technicians of the EVM manufactur-
ers [21] in order to detect and remedy hardware problems.
This means a group of technically skilled insiders has full
access to the machines after the election process is set in
motion. These authorized technicians are also sometimes
involved at various later stages of the election, such as prepar-
ing EVMs for polling and assisting oﬃcials during the count.
Dishonest technicians could open and manipulate hardware
or perform secret knocks during these checks.
Using the Total Number of Candidates Signaling many
EVMs individually would be relatively labor intensive. How-
ever, as noted by Mehta [41], an attacker can send signals
to EVMs throughout an election district with another kind
of covert channel. This is done by taking advantage of a
procedural peculiarity of Indian elections. Candidates can
register to be on the ballot and then withdraw after the order
of candidates is determined [23, 48]. This means an attacker
can gain some control over the total number of candidates
(a) Workers seal the control unit with wax and string.
(b) Paper seals (here, broken) cover the screw holes.
Figure 7: Tamper-Evident Seals — Frames from an oﬃ-
cial training video [45] show how poll workers seal the control
unit doors using red wax and string (a). The paper tags are
signed by candidates’ representatives, but these signatures
are not routinely veriﬁed. Seals placed over screw holes on
the underside of the control unit consist of printed paper
stickers (b, upper left and right). All these low-tech seals
can be easily faked and provide extremely weak protection.
11on the ballot by registering a number of dummy candidates
and then having some of them withdraw.
If there are n
candidates, the dishonest machines might be programmed
to steal a percentage of votes in favor of candidate n mod 5,
for instance. This would allow the attacker to pick any of
the ﬁrst ﬁve candidates to favor (all likely national party
candidates) and to send the signal throughout the district by
having between zero and four dummy candidates withdraw.
EVM Upgrades The third-generation EVMs manufac-
tured after 2006 add a number of additional safeguards rec-
ommended by the Election Commission’s technical expert
committee. These safeguards do not prevent the attacks
we propose, and some of them may actually harm secu-
rity. For example, the committee recommended adding a
real-time clock and logging all key presses with a timestamp —
presumably to prevent “secret knock” signaling or to be able
to revert the eﬀects of booth capture. Having a real-time
clock gives any dishonest software in the EVM another way
to ﬁnd out whether a real election is occurring, which helps
it cheat while avoiding detection in mock polls and other
testing. Logging every key press together with the time also
provides an even stronger way for attackers to violate ballot
secrecy. If attackers can observe which machine a voter used
and record the time, they can later consult the records in
that machine to determine which candidate the voter chose.
6. RELATED WORK
Security Problems in Complex E-Voting Systems
Numerous studies have uncovered security problems in com-
plex touch-screen DRE voting machines. Several early stud-
ies focused on the Diebold AccuVote-TS, including security
analyses by Kohno et al. [38], SAIC [54], RABA [49], and
Feldman et al. [29]. These works concentrated on vulnera-
bilities in the voting machine’s ﬁrmware. They uncovered
several ways that malicious code could compromise election
security, including the possibility that malicious code could
spread as a voting machine virus.
Following these studies, several states conducted indepen-
dent security evaluations of their election technology.
In
2007, California Secretary of State Debra Bowen commis-
sioned a “top-to-bottom review” of her state’s voting ma-
chines, which found signiﬁcant problems with procedures,
code, and hardware [6]. The review tied many problems
to the complexity of the machines’ software, which, in sev-
eral systems, comprised nearly one million lines of code in
addition to commercial oﬀ-the-shelf operating systems and
device drivers [5, 10]. Also in 2007, Ohio Secretary of State
Jennifer Brunner ordered Project EVEREST — Evaluation
and Validation of Election Related Equipment, Standards
and Testing — as a comprehensive review of Ohio’s electronic
voting machines [7]. Critical security ﬂaws were discovered,
including additional problems in the same systems that had
been studied in California. The analysts concluded that still
more vulnerabilities were likely to exist in software of such
complexity [9].
Security Problems in Simple E-Voting Systems A
few other studies have examined relatively simple computer
voting systems, though these systems are still complex com-
pared to the Indian EVMs, incorporating some form of up-
gradeable ﬁrmware as well as external memories for ballot
programming and vote tabulation. Several of these stud-
ies focused on replacing memory chips that store election
software. Gonggrijp and Hengeveld examined Nedap DRE
voting machines and demonstrated software attacks based
on replacing the socketed ROM chips [30]. Appel et al. per-
formed an extensive analysis of the AVC Advantage DRE and
warned against attacks based on replacing the ROM chips or
swapping the Z80 processor with a dishonest look-alike [4].
They brieﬂy suggest a hardware-based attack that would
change the signals from the machine’s candidate buttons
before they were recorded by the CPU. Checkoway et al. also
examined the AVC Advantage DRE and reverse-engineered
the hardware and software [17]. They built hardware de-
vices to interface with the machine’s proprietary memory
cartridges and created vote-stealing software that employed
return-oriented programming to bypass the machine’s mem-
ory protection hardware.
The Role of Complexity in Voting Security Much
has been written about the problem of complexity in DREs.
The California top-to-bottom review focused on vulnerabil-
ities in complex software. One report concluded that “the
Diebold software is too complex to be secure. Put another
way: If the Diebold system were secure, it would be the ﬁrst
computing system of this complexity that is fully secure” [10].
Sastry et al. focus on the size of the software source code that
must be analyzed: “One problem with current DRE systems,
in other words, is that the trusted computing base (TCB)
is simply too large” [53]. They recommend that election
software be designed in ways that make veriﬁcation easier,
such as minimizing the amount of code that needs to be