Question: "An online shopping platform has a legacy system that extensively uses inline scripts for dynamic content generation. The security team is considering an update to the Content-Security-Policy header to better protect against XSS without completely refactoring the existing codebase. What would be the primary security consequence of including 'unsafe-inline' in the Content-Security-Policy header in this scenario?"
 "A": "It will enhance the security of the site by allowing inline scripts which are essential for legacy systems."
 "B": "Including 'unsafe-inline' will maintain the status quo, neither increasing nor decreasing security."
 "C": "It would introduce significant security risks by allowing the execution of inline scripts, which can be exploited for XSS attacks."
 "D": "Adding 'unsafe-inline' will automatically sandbox all inline scripts, thus providing additional protection against XSS."
Answer: C