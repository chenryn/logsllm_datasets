improve  the  crypto-engine  performance.  A  similar  trend,
but  with  a  much  less  dramatic  effect,  is  observed  with
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
3DES+SHA.  Slightly  anomalous  is  the  behavior  with
3DES only, although the absolute throughput values are in
the  same  range  as  those  measured  for  3DES+SHA.  The
longer  and  more  elaborate  computation  of  3DES  is
responsible  for  the  lower  throughput.  Therefore,  from  a
qualitative  point  of  view,  the  crypto-engine  behaves  as  a
link with bandwidth equal to its maximum throughput.
Figure  6:  Crypto-engine  throughput  in  Mbps
for  60,  100,  250,  and  1000  bytes  long  packets
(bars from left to right in each group) for various
sets of cryptographic functions.
We then performed experiments with real voice traffic,
instead  of  a  syntethic  flow  of  packets.  We  considered  a
3DES  encrypted  phone  call  without  any  other  traffic  on
the  link,  whose  results  are  reported  in  Figure  7,  and  a
3DES encrypted call on a link carrying 1200 byte packets
extra traffic, whose results are reported in Figure 8. In both
cases, the interarrival time between consecutive packets is
plotted. The spike in Figure 7 is due to a single late packet,
which was immediately followed by the next one.
l
]
c
e
s
[
y
a
e
d
e
v
i
t
a
e
R
l
0.03
0.025
0.02
0.015
0.01
0.005
Packets
Figure  7:  Individual  packet  interarrival  time  for
voice traffic on an empty link.
As the figures show, the two graphs differ significantly,
thus  showing  how  much  voice  traffic  suffers  from
heterogeneous traffic on the link.
]
c
e
s
[
y
a
e
d
e
v
i
t
l
l
a
e
R
0.03
0.025
0.02
0.015
0.01
0.005
Packets
Figure 8: Individual packet interarrival time for
voice  traffic  on  a  link  with  1200  bytes  long
packets extra traffic.
4.3 QoS and VoIPsec
We  now  describe  a  test  aimed  at  verifying  the
importance  of  QoS  protocols  during  the  transmisison  of
encrypted voice traffic.   For this experiment we generated
three  traffic  streams:  a  phone  call  (with  the  TOS  bit  set)
with 70 bytes long packets at a rate of 50 pps (T.Stream 1),
a  phone  call  without  priority  and  equal  parameters  (T.
Stream  2),  and  an  extra  stream  of  jumbo  datagrams  with
1500  bytes  long  packets  at  a  rate  of  1pps  (T.  Stream  3),
which  simulates  ordinary  traffic.  All  traffic  streams  are
3DES encrypted. Traffic characteristics are summarized in
Table 4.
T.Stream Length
70
70
1500
1
2
3
Rate
50
50
1
TOS
Yes
No
No
Table  4:  Traffic  stream  characteristics for  the
QoS experiments. All streams are encrypted with
3DES.
For all types of traffic we measured the traffic delay as
the difference between arrival time of consecutive packets.
As it can be seen from the data reported in Figure 9, calls
performed without QoS control (T. Stream 2, central bar in
each  set)  suffer  a  great  variability  in  the  measured
interarrival times, which accounts for the largest standard
deviation. The more stable stream is the one comprised of
jumbodatagrams (T. Stream 3, rightmost bar in each set),
which  is  less  sensitive  to  variations.  The  phone  call
without  priority  (T.  Stream  1,  leftmost  bar  in  each  set)
experiences some variability, although not as significant as
the phone call with no priority.
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
idea  is  based  on  the  cRTP  [5,  8]  protocol,  we  call  our
compression scheme for IPsec cIPSec.
cIPsec  needs  to  maintain  a  collection  of  shared
information  and  a  session  context  in  a  consistent  state
between  the  two  endpoints.  Such  information  is  mainly
used  at  the  receiving  endpoint  to  reconstruct  the  original
headers. A session context is defined by the combination
of the IP source and destination addresses, the UDP source
and  destination  ports,  and  the  RTP  SSRC  field.  The
information shared in each context, which is stored in each
crypto-end-point, consists of the following items:
• 
• 
full IP, UDP and RTP headers of the last packet sent
by  the  compressor  or  reconstructed  by  the
decompressor;
last  value  of  the  4-bit  sequence  number,  which  is
used  to  detect  packet  loss  between  the  compressor
and decompressor.
If the information above described is maintained at the
two end-points then during the transmission the IP-UDP-
RTP  internal  headers  can  be  reduced  to  the  header
depicted in Figure 10. The meanings of the various fields
in Figure 10 are:
•  Session  Context  ID  (CID):  it  identifies  the  peer  to
peer  communication.  These  16  bits  allow  to
maintain  up  to  65536  calls  between  the  two
endpoints. In case of multiple calls, the CID bits are
used to index the context information.
•  Link  sequence:   it  contains  the  least  significant  8
bits of the RTP header sequence number. It can keep
track of up to 256 consecutively lost packets.
•  Sequence bit (S): it notifies the presence of the RTP
Sequence bits.
•  Checksum  bit  (C):  it  notifies  the  presence  of  the
UDP checksum bits.
•  UDP  Checksum  (opt.):  it  contains  the  checksum
value,  sometimes  needed  to  guarantee  end-to-end
data  integrity.  This  field  is  optional  and  can  be
disabled if the ESP protocol uses an authentication
algorithm.
•  RTP  Sequence  (opt.):   it  is  the  complete  RTP   bit
sequence used for context synchronization.
•  Retransmission bit (R): it indicates the necessity to
retransmit and uncompress a packet.
SESSION
CONTEXT
ID
LINK
SEQ.
S
C
R
NOT
USED
UDP CHECKSUM (if C =1)
RTP SEQUENCE (if S or S’ =1)
Figure 10: Compressed  IP/UDP/RTP headers.
The main problem with the cIPsec compression scheme
is related to the occurrence of transmission errors as they
can be detected by the CRC or by the checksum value in
Figure  9:  Minimum  (leftmost),  maximum
(second  leftmost),  and  average  (third  leftmost)
packets  interarrival  time  with  std.  deviation
(rightmost) for three traffic streams (T. Stream 1:
leftmost bar in each group, T. Stream 2: central
bar in each group, T. Stream 3: rightmost bar in
each group) with (T. Stream 1) and without QoS
(T. Stream 2 and 3).
5.  Header compression
As  our  experiments  show,  one  of  the  most  critical
aspects  in  transmitting  voice  traffic  over  networks  that
implement IPsec is the increase in packet size due to IPsec
itself.  In  this  section  we  describe  a  header  compression
scheme that could be adopted to solve such a problem and
present measurements of the proposed scheme.
5.1 cIPsec
The  idea  is  based  on  the  observation  that  most  of  the
fields belonging to the internal headers of a packet, i.e., IP
original  header,  UDP  and  RTP  headers  carry  values  that
either  remain  constant  over  the  entire  life  of  the
connection, or change but the second order difference, i.e.,
the  difference  of  consecutive  differences  computed  on
packet parameters, is zero. Furthermore, some other fields
contain  information  already  present  in  the  external
headers.   Such  an  approach  is  adopted  also  in  low  speed
serial  link  compression  (cSLIP),  although  it  applies  to
TCP/IP flow rather than UDP [13].
Starting  from  such  observations,  we  devised  a
compression  scheme  that  allows  to  reduce  the  internal
IP/UDP/RTP headers down to four bytes for most packets.
A routine was added to the IPsec module at the operating
system level. Such a routine is composed of two modules,
a compressor module that performs packet compression on
outgoing packets and a decompressor module that restores
the headers original content of incoming traffic. Since the
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
the IP/UDP headers, or because of packet loss. Because
of  the  real-time  nature  of  voice  transmission,  no  error
correction is possible and packets are lost. In this case a
resynchronization process is required.
show  an  increase  in  the  CPU  usage  by  4%.  As  the
improvements  on  the  encryption  phase  due  to  the  use  of
cIPsec  are  between  4%  to  6,5%  it  turns  out  that  overall
cIPSec does not influence the computation time.
5.2 cIPSec performance
In this section we report a preliminary evaluation of the
performance of the cIPSec compression scheme. Figure 11
reports the bandwidth used in case of (from left to right in
the  figure)  plain  VoIP  packets,  VoIPsec  packets  and
cIPsec packets for various error rates. As the figure shows,
the difference of bandwidth usage in case of VoIP packets
and  cIPsec packets are comparable, even  with error rates
as high as 10% (rightmost bar in Figure 10), which force
retransmission.
Figure 10: Bandwidth usage for plain IP, plain
IPsec and cIPsec: from left to right, plain IP, plain
IPsec, cIPsec. The three rightmost bars compare
the performance of cIPsec with 2%, 5% and 10%
traffic error rate.
The advantages of the adoption of cIPsec when dealing
with  voice  traffic  are  a  better  end-to-end  bandwidth
utilization,  reduction  of  transmission  delay,  and  better
usage of the CPU and of the crypto-engine. The expected
reduction  on  the  transmission  delay  is  similar  to  the
bandwidth usage optimization and, for two 64Kbps access
links, it can be improved up to 10ms. The reduction of the
delay due to encryption depends on the algorithm chosen.
Relative gains are reported in Table 5.
On  the  other  side,  its  implementation  will  negatively
impact  on  the  CPU  performance  and  on  the  memory  use
because of the additional computational burden put on the
CPU  by  cIPsec.  This  factor  can  be  estimated  by
considering  the  time  required  for  computing  a  cRTP
header,  which  is  a  more  complex  operation  than  that
required by cIPSec and thus the cRTP value can be used as
an  upper  bound  for  cIPSec.  In  case  of  cRTP,  our  results
Encryption algorithm
DES
3DES
NULL+SHA
3DES+SHA
AES128
SEAL
Relative Gain
4%
6.5%
4.4%
1.8%
5.2%
4%
Table  5:  Relative  gains 
for  various
cryptographic  algorithms  when  cIPsec  is  used
w.r.t. standard IPsec.
6.  Conclusions
In this paper we have presented an experimental study
of  VoIP  when  an  IPsec   network  is  used.  The  impact  on
performance, with particular attention to bandwidth usage
and transmission delay has been evaluated through a series
of  experiments on  a  real testbed. The  critical role  played
by the scheduling algorithm adopted by the IPsec crypto-
engine  in  affecting  real-time  traffic  delay  has  been
identified. A new compression scheme based on cRTP to
improve the effective bandwidth used by secure traffic has
been  proposed  and  preliminary  performance  results
presented.  Experiments  with  other  types  of  real-time
traffic  to  see  whether  the  results  presented  in  this  paper
can be generalized to all real-time traffic are part of future
work.
7.  Bibliography
[1] R. Barbieri, Studio e analisi delle problematiche di
trasmissione  di  voce  cifrata  in  ambienti  con  QoS,
Ms.Thesis, Univeristà degli Studi di Milano, 2002.
[2] U. Black, Voice over IP. Pretice Hall, 1999.
[3]  C.-N.  Chuah,  Providing  End-to-End  QoS  for  IP-
based  Latency-sensitive  Applications.  Technical  Report,
Dept.  of  Electrical  Engineering  and  Computer  Science,
University of California at Berkeley, 2000.
[4] M. Goncalves, Voice over IP Networks. McGraw-
Hill, 2000.
[5]  M.  Leelanivas,  RTP  Header  Compression.   Cisco
Systems, 1997.
[6]  P.  Loshin,  Big  Book  of  IPsec  RFCs:  Internet
Security Architecture. November 1999.
[7]  M.  Marjalaakso,  Security  Requirements  and
Constraints of VoIP. Technical Report, Dept. of Electrical
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Engineering and Telecommunications, Helsinki University
of Technology, 2001.
[8]  D.  Nguyen,  J.  Lequang,  cRTP  Performance
Enhancement. CISCO SYSTEM [ENG 102721].
[9]  A.  Sayeed,  RSVP  &  its  use  for  Voip.  Cisco
Systems.
[10]  B.  Thompson,  Voice  over  IP  Quality  of  Service
Architecture  and  Performance  Requirements.  Cisco
Systems, ENG- 53391, May 2000.
[11]  Z.  Wang,  Internet  QoS:  Architectures  and
Mechanisms for Quality of Service.
[12]  B.  Schneier.  Applied  cryptography:  Protocols,
Algorithms, and Source Code in C. John Wiley & Sons,
Inc., 2nd Edition, 1996.
[13]  V.  Jacobson,  Compressing  TCP/IP  Headers  for
Low-Speed Serial Links, RFC 1144, February 1990.
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE