### Improving Crypto-Engine Performance

A similar, but less pronounced, trend is observed with 3DES+SHA. The behavior of 3DES alone is slightly anomalous, although the absolute throughput values are in the same range as those measured for 3DES+SHA. The longer and more complex computation of 3DES results in lower throughput. From a qualitative perspective, the crypto-engine behaves like a link with a bandwidth equal to its maximum throughput.

**Figure 6: Crypto-Engine Throughput in Mbps for 60, 100, 250, and 1000 Byte Packets (bars from left to right in each group) for Various Cryptographic Functions**

We then conducted experiments using real voice traffic instead of synthetic packet flows. We considered a 3DES-encrypted phone call without any other traffic on the link, as shown in Figure 7, and a 3DES-encrypted call on a link carrying 1200-byte packets of extra traffic, as shown in Figure 8. In both cases, the interarrival time between consecutive packets is plotted. The spike in Figure 7 is due to a single late packet, which was immediately followed by the next one.

**Figure 7: Individual Packet Interarrival Time for Voice Traffic on an Empty Link**

As the figures show, the two graphs differ significantly, demonstrating how much voice traffic is affected by heterogeneous traffic on the link.

**Figure 8: Individual Packet Interarrival Time for Voice Traffic on a Link with 1200-Byte Packets of Extra Traffic**

### QoS and VoIPsec

Next, we describe a test aimed at verifying the importance of QoS protocols during the transmission of encrypted voice traffic. For this experiment, we generated three traffic streams: a phone call (with the TOS bit set) with 70-byte packets at a rate of 50 pps (T.Stream 1), a phone call without priority and with the same parameters (T.Stream 2), and an extra stream of jumbo datagrams with 1500-byte packets at a rate of 1 pps (T.Stream 3), simulating ordinary traffic. All traffic streams were 3DES-encrypted. The traffic characteristics are summarized in Table 4.

| T.Stream | Length (bytes) | Rate (pps) | TOS |
|----------|----------------|------------|-----|
| 1        | 70             | 50         | Yes |
| 2        | 70             | 50         | No  |
| 3        | 1500           | 1          | No  |

**Table 4: Traffic Stream Characteristics for QoS Experiments. All Streams are Encrypted with 3DES.**

For all types of traffic, we measured the traffic delay as the difference between the arrival times of consecutive packets. As seen in Figure 9, calls performed without QoS control (T.Stream 2, central bar in each set) experience significant variability in interarrival times, leading to the largest standard deviation. The most stable stream is the one comprised of jumbo datagrams (T.Stream 3, rightmost bar in each set), which is less sensitive to variations. The phone call without priority (T.Stream 1, leftmost bar in each set) also experiences some variability, though not as significant as the phone call with no priority.

**Figure 9: Minimum (leftmost), Maximum (second leftmost), and Average (third leftmost) Packet Interarrival Times with Standard Deviation (rightmost) for Three Traffic Streams (T.Stream 1: leftmost bar in each group, T.Stream 2: central bar in each group, T.Stream 3: rightmost bar in each group) with (T.Stream 1) and without QoS (T.Stream 2 and 3).**

### Header Compression

Our experiments show that one of the most critical aspects of transmitting voice traffic over networks implementing IPsec is the increase in packet size due to IPsec itself. In this section, we describe a header compression scheme that can address this problem and present measurements of the proposed scheme.

#### cIPsec

The idea is based on the cRTP [5, 8] protocol, and we call our compression scheme for IPsec "cIPSec." cIPsec needs to maintain a collection of shared information and a session context in a consistent state between the two endpoints. This information is primarily used at the receiving endpoint to reconstruct the original headers. A session context is defined by the combination of the IP source and destination addresses, the UDP source and destination ports, and the RTP SSRC field. The shared information in each context, stored in each crypto-endpoint, includes:

- Full IP, UDP, and RTP headers of the last packet sent by the compressor or reconstructed by the decompressor.
- Last value of the 4-bit sequence number, used to detect packet loss between the compressor and decompressor.

If this information is maintained at both endpoints, the IP-UDP-RTP internal headers can be reduced to the header depicted in Figure 10. The meanings of the various fields in Figure 10 are:

- **Session Context ID (CID):** Identifies the peer-to-peer communication. These 16 bits allow up to 65536 calls between the two endpoints. In case of multiple calls, the CID bits index the context information.
- **Link Sequence:** Contains the least significant 8 bits of the RTP header sequence number, allowing tracking of up to 256 consecutively lost packets.
- **Sequence Bit (S):** Notifies the presence of the RTP Sequence bits.
- **Checksum Bit (C):** Notifies the presence of the UDP checksum bits.
- **UDP Checksum (opt.):** Contains the checksum value, sometimes needed to guarantee end-to-end data integrity. This field is optional and can be disabled if the ESP protocol uses an authentication algorithm.
- **RTP Sequence (opt.):** The complete RTP bit sequence used for context synchronization.
- **Retransmission Bit (R):** Indicates the need to retransmit and uncompress a packet.

**Figure 10: Compressed IP/UDP/RTP Headers**

The main challenge with the cIPsec compression scheme is handling transmission errors, which can be detected by the CRC or the checksum value. In such cases, a resynchronization process is required.

**Figure 11: Bandwidth Usage for Plain IP, Plain IPsec, and cIPsec: From Left to Right, Plain IP, Plain IPsec, cIPsec. The Three Rightmost Bars Compare the Performance of cIPsec with 2%, 5%, and 10% Traffic Error Rates.**

The advantages of adopting cIPsec for voice traffic include better end-to-end bandwidth utilization, reduced transmission delay, and improved CPU and crypto-engine usage. The expected reduction in transmission delay is similar to the bandwidth usage optimization and can improve up to 10ms for two 64Kbps access links. The delay reduction due to encryption depends on the chosen algorithm. Relative gains are reported in Table 5.

| Encryption Algorithm | Relative Gain (%) |
|----------------------|-------------------|
| DES                  | 4                 |
| 3DES                 | 6.5               |
| NULL+SHA             | 4.4               |
| 3DES+SHA             | 1.8               |
| AES128               | 5.2               |
| SEAL                 | 4                 |

**Table 5: Relative Gains for Various Cryptographic Algorithms When cIPsec is Used vs. Standard IPsec.**

On the downside, implementing cIPsec will negatively impact CPU performance and memory use due to the additional computational burden. This factor can be estimated by considering the time required to compute a cRTP header, which is a more complex operation than that required by cIPsec. Our results for cRTP provide an upper bound for cIPsec.

### Conclusions

In this paper, we presented an experimental study of VoIP over an IPsec network. The impact on performance, particularly in terms of bandwidth usage and transmission delay, was evaluated through a series of experiments on a real testbed. We identified the critical role played by the scheduling algorithm adopted by the IPsec crypto-engine in affecting real-time traffic delay. We proposed a new compression scheme based on cRTP to improve the effective bandwidth used by secure traffic and presented preliminary performance results. Future work will include experiments with other types of real-time traffic to see if the results can be generalized.

### Bibliography

[1] R. Barbieri, Studio e analisi delle problematiche di trasmissione di voce cifrata in ambienti con QoS, Ms.Thesis, Universit√† degli Studi di Milano, 2002.
[2] U. Black, Voice over IP. Prentice Hall, 1999.
[3] C.-N. Chuah, Providing End-to-End QoS for IP-based Latency-sensitive Applications. Technical Report, Dept. of Electrical Engineering and Computer Science, University of California at Berkeley, 2000.
[4] M. Goncalves, Voice over IP Networks. McGraw-Hill, 2000.
[5] M. Leelanivas, RTP Header Compression. Cisco Systems, 1997.
[6] P. Loshin, Big Book of IPsec RFCs: Internet Security Architecture. November 1999.
[7] M. Marjalaakso, Security Requirements and Constraints of VoIP. Technical Report, Dept. of Electrical Engineering and Telecommunications, Helsinki University of Technology, 2001.
[8] D. Nguyen, J. Lequang, cRTP Performance Enhancement. CISCO SYSTEM [ENG 102721].
[9] A. Sayeed, RSVP & its use for Voip. Cisco Systems.
[10] B. Thompson, Voice over IP Quality of Service Architecture and Performance Requirements. Cisco Systems, ENG- 53391, May 2000.
[11] Z. Wang, Internet QoS: Architectures and Mechanisms for Quality of Service.
[12] B. Schneier. Applied Cryptography: Protocols, Algorithms, and Source Code in C. John Wiley & Sons, Inc., 2nd Edition, 1996.
[13] V. Jacobson, Compressing TCP/IP Headers for Low-Speed Serial Links, RFC 1144, February 1990.