aPIDGINGOL
NOUN
ARTICLE
NOUNCLAUSE= ARTICLE,NOUN
VERB
PREDICATE
PIDGINGOL
这种循环永不成功终止，这也就是从其字母表中删除V
VMTWO=VMONE,VMONE
a dog bites thc cat
the cat soratches a dog
JNOWA*= LOWA
={a,the,cat,dog,bites,soratches}
=(bites-→SKIP|scratches-→SK1P)
a(*P)=aP-{V}
*P=μX.(P,X)
=(cat-SKIP|dog-SKIP)
=(a→SKIP|the→SKIP)
= VERB, NOUNCLAUSE
= NOUNCLAUSE,PREDICATE
=P;P;P,.·
161
口
口
口
---
## Page 185
和一样。它不理会α和，因为它们不在它的字母表中。这对
接受。（e不在它的字母表中）。的右边的进程负责保证e的个数
们假定递归调用接受的α和c的个数相同，那末A"BC·的非递归
打头，以。结尾，中间是递归调用进程X而接受的句子。如果我
这类名词子句如
X5名词子句中可包含任意多个形容词furry或者prize
中间由b分开。在接受适量个数c以后，才接受一个4；但它不
f将α映射为c，b为d，及c为。
其中
再接受等量个数的。合
X7定义一个进程，
多个状态的机器。
句子，开头多个α，结尾多个c。
调用也接受等量的4和0，其接受的句子比之遵归调用所接受的
们的个数相同都是零。若取第二个分支，其所接受的句子则以4
若先接受b，则进程终止；此时，既未接受a，也未接受c，故它
的c，最后成功终止。合
X
NOUNCLAUSE= ARTICLE;uX.(furry->X|prize-X
162
这个例子中，的左边的进程负责保证4和的个数相同，且
这个例子表明如何使用顺序组合和递归式，来定义具有无穷
一个进程接受任意多个a，然后一个b，然后和a个数相同多
A"BC=μX.(b-→SKIP|a-→(X;(c→SKIP)))
αdog
the furry furry prize dog
，先如 A"BC"般动作，然后接受一个d，接
C"DE"=f(A"BC")
|cat-+SKIP|dog--SKIP)
厂
口
---
## Page 186
X9下列进程C,的行为类似于CT。（1.1.4节X2)
然后再多接受一个。故需要顺序地两次递归调用POS。
up，则必须再多接受两个down。为此，先设法多接受一个down，
若第一个符号是down，POS的任务就完成了。若第一个符号是
的个数一旦超出 up的个数时，进程就终止。即
X8可以接受down和up任意穿插的序列的进程，并要求down
关的语言，例如X7。
性。在环境做出选择前，这种选择算子的两个分支一直并发运行；
型的选择算子，它能象0r3（3.2.2节）一样，提供安琪儿非确定
成死锁，无法读逼输入的全部内容。解决这一间题，需要一种新
性，可以任选一个子句来分析剩下的输入。一且选错了，就会酿
prize。使用算子口（见3.3节）也无济于事，因为这会引入非确定
字prize既可为名词叉可为形容词，例如theprixedog，thefurry
一个事件都不相同。这样，在X5中就不可能定义名词子句，使
溯也不超前。其原因在于，在使用选择算了时要求各个分支的第
程所能定义的语言必须能由左至右实现语法分解的，分解时不回
归式后，可增加上下文无关文法的部分能力，但不是其全部。进
进程在完成分派的任务后，一起终止。
性，而且不允许回阙。但是，引入【算子后，可定义非上下文无
其定义留作练习。
接受进程定义语言的能力和正则表达式的能力相同。使用递
，其能力不如上下文无关文法，因为它要求自左向右的可分解
我们现在可以给出2.6.2节X3中所提出问题的更简便的一个
上述定义语言的方法，在没有安琪儿非确定性选择算子情况
POS =(4own-→SKIP|up-→(POS,POS))
C,
=(around-→C,iup→C)
= POS..,POS,POS,C.
■欢
n>0
163
口
---
## Page 187
L7 ((x:B→P(x))[SKIPa)=(x:(B-A)-→(P(x)ISKIPA))
也增加一次，这样可补偿最初减少的值，使1恢复为初始值。口
掉的值加到m上（利用递归调用ADD)。然后m再增加一次，1
若！的初始值是素，什么事都不必做。否则，【逐步减少，所碱
X10进程USER加工两个计数变量m和L（参见2.6.2节X3），
求的结果。
后的其余动作。使用SKIP和顺序组合后，就可方便地得到所要
庸逃程的操作，
答案，这个同题在4.5节K3中也提到过。解决这个问题用到对附
终止的进程不再参予并发伙伴提供的事件
组合式才成功终止，即
14
选择算子法则的推论是，
元
下列子进程（属于USER）将I的当前值加到m上去
164
(a→P);Q=α→(P;Q)
'STOP,Q=STOP
(x：B→P(x));Q=(x:B-→(P(x);Q))
将顺序进程并行组合起来，只有当两个组分都终止时，整个
(P;Q)R=P;(Q,R)
SKIP,P=P,SKIP=P
顺序组合的法则类同于连接（见1.6.1节)，SKIP是其单位
有
ADD=(l.around→SKIP
而且还必须清楚地说明用后进程中继这个操作之
1l,down-→(ADD;(m,up-→l,up-=SKIP)))
1:CT,!m:CTaIUSER
5.2法
2
---
## Page 188
证明
对n>0，需证明
卫式递归方程组。首先，定义CT。的方程和定义C。的方程相同
由于C遵从的卫式递归方程组和CT，的相同，故它们的行为也
样才能避免一个进程在执行√后还继续活动。
个进程的字母表包含V时，该前提条件必须激守。因为，只有这
这条法则的前提条件是很合理的，当并发运行的进程对中只有一
L8 STOPAISKIP,=SKIP:
束后，另一个进程也什么都做不成了。故有
相同。
么组合式的终止性由顺序进程所决定；其原因是，当顺序进程结
功又简单地证明了这个断言。
用对n的归纳法都不会成功的。好在求助解唯一性的法则，既成
n的归纳法。实际上，由于CT,的定义中包含了进程CTn+，使
中，把细节都写至了。看来仍可疑的是，这个证明有使用关于
（1.1.4节X2）的行为相同。为此，需要说明C满足定义CT的
止呢？如果顺序进程的字母表完全包含了它的伙伸的字母表，那
LHS= POS;Cn-1
为了阐明法则的应用，也免得怀疑为循环推理，在这个证明
法则-L1至L3可用来证明5.1节X9中的断言，即C。和CT。
顺序进程与非顺序进程的并发组合，什么情况下才会成功终
= RHS
=(down-=Cn-1lup-→POS;G,)
Gn=(up→Gn+1!down-→Cn-1)
C=(around-→Clup-→C)
若VEA且A二B
POS定义
Cn+1定义
C定义
C定义
C定义
L1,L2
165
L3
---
## Page 189
在证明
L2 PIs=SKIP
这个定义易于理解，但难以使用。
L1A traces(P;Q)={s|s∈traces(P)A-in s}
与其等价的定义是
L1 traces(P;Q) = [s;t[s∈traces(P)At∈traces(Q))
结尾时，将V替换为Q的迹，即
详见1.9.7节。（P;Q）的迹是由P的迹所组成，且当P的迹以V
是迹，不包含V，则
为定义进程顺序组合，我们先定义进程迹的顺序组合。若8和
L0traces(SKIP)={,}
的第一个也是仅有的一个动作是成功终止，故它只有两个迹
5.3.1确定性进程
和往常一样，确定性进程的数学处理比较简单，故由此开始。
故我们需要下列法则
的法则的真实性。特别要留意的是
166
当进程执行V后：
我们用结果进程的迹来定义确定性进程的运算。SKIP 进程
在形式陈逃顺序组合的数学定义时，应该保证上一节中列出
，进程应该终止，这就是符号V的全部含义，
5.3
U{sts∈traces(P)A
(s)=s
若s∈iraces(P)
P,SKIP=P
P,SKIP=P
数学处理
(s,t)s
[∈traces(Q)
---
## Page 190
擅自终止。为使L2A成立，必须遵守前面各节中的限制，而且还
这条法则表明，只要P能终止，P就可以不向环境提供可能事件，
解决这个问题的--种办法是减弱5.3.1节中的L2，变为
5.3.2
由于这种限制，当V∈A时，RUNA也就不合法了。
最后，我们不允许在选择结构中使用√，
时，f(P)才有效。若m是进程名，我们还需规定
时，不能变换V，故只有
成立时，（PIQ）才是有效的组合。同样的原因，在变换宇母表
有当
而 PK>≠SKIP。因此，需对并行组合的字母表加以约束。只
L2A s^∈traces(P)>(P/s)≤SKIP
可不满足上节的法则L2，“如
则traces(P)={<>,,,,}，尽管
例如，合
中，上越法则是必不可少的。可惜，该法则只对部分进程有效。
要规定
（如果改变--下口和I的定义，
非确定进程的顺序组合带来一系列问题。其一，非确定进程
非确定性进程
SKIP不能无卫地出现在口的运算对象中
αP≤aQVaQ≤aPVV∈ (aP∩aQUaPnaQ)
不能出现在Ⅱ的运算对象的字母表中
P=(SKIP(,c-→STOP,)
SKIPi(e-→SKIP)
(√→Plc→Q)
(V>∈traces(P)
m.V=
f(v)=v
上逃限制可有所放松。）
如
167
---
## Page 191
D3 failures(P;Q)={(s,X)|(s,XU{V})∈failures(P))
D2 divergences(P;Q)= {s|s∈divergences(P)A-in s}
迹集定义为
的。当P发散，或者P成功终止而Q发散时，（P；Q）发散。发散
集。P的终止性也可能是非确定的，这一情形也应考虑。故有定
过渡动作是被屏蔽的，这时，Q的拒绝集也成了（P;Q）的拒绝
可能终止，那末在（P；Q）中可自主地出现顺序过渡；而且这种
3.4.1节L11)。在这种情况下，X.也是（P;Q）的拒绝集。但P若
若P拒绝X，叉不能成功终止，则XU{V}也是P的拒绝集（见
处理它的拒绝集和发散性，我们先刻画它的拒绝集（见3.4节）。
L2A (PQ);R=(P;R)(Q;R)
顺序组合对非确定性选择是可分配的
L1CHAOS,P=CHAOS
仍发散，即
足下述法则。首先，不论如何规定进程终止后的行为，发散进程
止后Q的一个绝境，
义
L2B
（P；Q）的绝境，要末是P在终止前的一个绝境，或者是在P终
168
在非确定性进程的数学模型中（见3.9节)定义（P；Q)，需要
refusals(P;Q)={X|(XU{V})∈refusals(P))
除了本章中已给出的法则外，非确定性进程的顺序组合还满
R,(PQ)=(R,P)(R,Q)
（P；Q）的迹的定义对于确定的或者非确定的进程都是相同
即
U{(st,X)ls∈traces(P)
U{X|∈traces(P)
U{s~lis^∈traces(P)
AinsAi∈divergences(Q))
AX∈refusais(Q))
A(t,X)∈failures(Q))
---
## Page 192
由于STOP不提供任何事件，故不能被环境所驱动。类似地，若
L2(P^Q)^R=P^(Q^R)