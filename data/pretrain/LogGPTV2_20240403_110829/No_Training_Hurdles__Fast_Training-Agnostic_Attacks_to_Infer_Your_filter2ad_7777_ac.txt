0
1
0
c5
0
0
0
0
1
.
Matrix R2 is constructed in the same way for the second word. Com-
bining both words and considering all similar CSI samples forms
the joint sequence c1||c2||c3||c4||c5||c6||c7||c8, and likewise the new
inter-element relationship matrix Rnew can be obtained. To search
the dictionary W for these CSI word groups, we pre-compute the
inter-element relationship matrix for each word in W. We compare
each with R1 and find the words “apple” and “offer” survive this
test. Each is compared with R2, and “hat”, “old”, “are”, and “pen”
survive the test for the second word group. The 8 resulting candi-
dates for the two-word sequence are thus “apple||are”, “apple||hat”,
“apple||old”, “apple||pen”, “offer||are”, “offer||hat”, “offer||old”, and
“offer||pen”. We use T to denote the set of these candidates. Again,
Figure 2: Uniqueness rate for words of different length.
Figure 3: Uniqueness rate for joint words.
an input CSI word group to a word. The repetition feature only
provides the result of repeated letters in a word, however, and does
not consider the position information of these letters. We expect
that the uniqueness rate can be further increased if we construct
a feature that not only employs the word length and repetition
information, but also distinguishes the positions of repeated letters
from non-repeated letters.
Inter-Element Relationship Matrix. We define a new data
3.3.2
structure to represent the structure of every word/CSI word group.
Specifically, we denote a word or a CSI word group by a vector
[x1, . . . ,xn] of n elements, each of which is a letter (CSI sample).
We then define its inter-element relationship matrix as
 .
M : [x1, . . . ,xn] (cid:55)→
r1,2
r2,2
r1,3
r2,3
r1,n
r1,1
r2,1
r2,n
. . . . . . . . . . . . . . . . . . . . . . . . . . .
rn,1
rn,n
. . .
. . .
rn,2
rn,3
. . .
To construct M, for a CSI word group [x1, . . . ,xn], we set ri,j = 1 if
xi and xj are similar CSI samples as classified during the CSI word
group generation step (Section 3.2). Otherwise, we set ri,j = 0. Note
the diagonal elements are always 1 and the matrix is symmetric.
We build the inter-element relationship matrix for each word and
ultimately partition the 1,500 most commonly used words into 337
sets. The words in a particular set having the same inter-element
relationship matrix. On average, each set has about 1,500/337 ≈
4 words which are possible candidates for the CSI word group
having that inter-element relationship matrix. The corresponding
uniqueness rate is 337/1,500 ≈ 0.225, which is much larger than
those of the previously discussed features.
0	
  0.1	
  0.2	
  0.3	
  0.4	
  0.5	
  0.6	
  0.7	
  0.8	
  0.9	
  1	
  2	
  3	
  4	
  5	
  6	
  7	
  8	
  9	
  10	
  11	
  12	
  13	
  Uniqueness	
  rate	
  Word	
  length	
  Repe??on	
  Rela?onship	
  matrix	
  The number of letters in a phrase 4 6 8101214161820222426Uniqueness rate00.20.40.60.81Session 9B: Mobile 2 CCS’18, October 15-19, 2018, Toronto, ON, Canada1751we generate the relationship matrix for each new candidate in T
and compare it with Rnew . Only “apple||pen” survives this test and
must be the final result.
3.3.4 General Joint Demodulation Method. In the following, we
extend the joint demodulation method utilized in this example to m
CSI word groups. After CSI word group generation, assume that the
attacker obtains from the eavesdropped typing m CSI word groups
denoted by S = {S1,S2, . . . ,Sm}. We further use W1,W2, . . . ,Wq
to denote the q words in the dictionary W. Our goal is to find a
phrase of m words that corresponds to the m CSI word groups.
Clearly, while each individual CSI word group could have several
candidate dictionary words with matching structure, each candidate
will impose a mapping of some CSI samples and letters on some
successive words, and several of these possible mappings will result
in successive words that are not real, so the below technique works
to rule out these impossible mappings. The full method includes
two steps: 1) demodulation of each single CSI word group; and 2)
joint demodulation of multiple CSI word groups.
Step 1: This step finds initial candidate words for each CSI word
group or determines if a word cannot be immediately demodulated
and must be returned to later. We first create the inter-element
relationship matrices for W1,W2, . . . ,Wq in our dictionary W. We
next iterate over each Si ∈ S, creating its inter-element relationship
matrix and considering the subset W′ of W whose entries are of
the same length as Si. We compare the relationship matrix of Si
to that of each Wj ∈ W′ and mark that Wj as a candidate if the
two matrices are equal. If no candidates match, the word must not
appear in the collection of English words comprising our dictionary,
so we add Si to the “undemodulated set” U.
Step 2: This step works to build up a mapping between CSI
samples and letters that works for multiple CSI word groups simul-
taneously, successively ruling out the many candidates established
by the first step, until (ideally) only one candidate remains for each
word and the message is uncovered. Conceptually, we iterate over
the word groups not in the undemodulated set U,
(a) concatenating each with all those previous,
(b) applying each possible mapping thus far constructed,
(c) ruling out all candidates that cannot coexist with any mappings,
(d) and adding any new CSI sample/character mapping information
from the remaining candidates.
Specifically, we name Ti the concatenation of the first i − 1 CSI
word groups {S1, . . . ,Si−1},1  0)
in TiC do
for Tij
in SiC do
if M (Ti||Si )=M (Tij ||Sik ) then
T(i +1)C ← T(i +1)C ∪ Tij ||Sik
end if
Algorithm 1 Joint Demodulation
1: procedure Joint_Demod(Si, TiC
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15: end procedure
= ∅ then
U ← U ∪ Si
T(i +1)C ← TiC
, U
end if
return T(i +1)C
end for
if T(i +1)C
▷ no candidates, skip Si
is therefore a new candidate for Ti +1.
will work in concordance with the mapping established for
Sik
while maintaining the structure stipulated by Ti||Si. Each such
Tij
Tij ||Sik
In the event that no Tij ||Sik
has a relationship matrix matching
that for Ti||Si, this means that no CSI sample/character mappings
satisfying the structure of Ti result in valid words within our dic-
tionary when applied to Si. Such Si are placed in U and execution
skips to Si +1. Pseudocode for this step is shown in Algorithm 1.
In this manner, we iterate over i and gradually build up Ti until
all distinct CSI samples are mapped to characters in the alphabet.
At this time, the mapping can be applied to the remaining word
groups, including those in U, for which no matches were found in
the dictionary used. An example of this final alphabet matching is
visible in Figure 4.
3.3.5 Error tolerance. Wireless channel noise may cause CSI clas-
sification errors, such that a recorded CSI sample for a character
typed might not appear like others for that character or may appear
like a different character. Otherwise, CSI samples may be classified
correctly but a typo by the user may mean a word is misspelled and
will not appear in the dictionary. This can cause a concatenated set
of CSI word groups to have an incorrect inter-element relationship
matrix, which may match with invalid words or have no candidates
at all. The latter is the ideal case as the word group having the CSI
sample in question will simply be added to the undemodulated set
and skipped. However, if invalid words are incorporated into the
candidates for joint demodulation, incorrect relationship matrices
will continue to be used as the joint demodulation progresses, and
the content recovery will fail. We have observed in experiments that
even if a wrong matrix matches to other word sequences, cascading
discovery failures inevitably happen for successive words.
The attacker may employ this observation to work around the
presence of typos or CSI classification errors. If a CSI word group
is successfully demodulated but continuous recovery failures occur
thereafter, this word can be added to the undemodulated set and
skipped in favor of proceeding with the next word. Further word
groups are thus less likely to be processed with an incorrect portion
of the relationship matrix, and a correct mapping is more probable.
Algorithm 2 shows how our system checks for cascading errors at
Session 9B: Mobile 2 CCS’18, October 15-19, 2018, Toronto, ON, Canada1752Impact of Non-Alphabetical Characters. Users mostly type al-
3.3.6
phabetical characters and spaces, but also occasionally use numbers
and punctuation, which obviously cannot be matched by examining
word structures. If these appear during alphabet mapping construc-
tion, they will cause cascading demodulation errors, be added to
the undemodulated set, and be skipped, similar to typos or CSI clas-
sification errors as just discussed. If the mapping has already been
constructed, the CSI samples for these numbers or punctuation will
not appear in the mapping and will be left as unknown. In both
cases, the attacker can use some common knowledge to infer or
narrow down candidates for these characters.
For example, users press the backspace key to remove multiple
characters before the cursor and then continue typing. For a CSI
word group that is recovered as “abab××out”, the attacker may