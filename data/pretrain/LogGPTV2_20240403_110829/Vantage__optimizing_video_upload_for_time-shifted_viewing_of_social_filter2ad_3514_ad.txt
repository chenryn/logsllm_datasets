• Vantage simultaneously achieves high real-time quality (within
3.3% of the quality achieved by real-time optimized streaming
techniques on average) and high quality for delayed viewing
(within 7.7% of the optimal quality achievable for delayed view-
ing on average), demonstrating the eﬀectiveness of using Van-
tage for applications that involve time-shifted viewing such as
SLVS applications (Section 5.2.1).
• Vantage is able to adapt and achieve high QoE for skews in the
distribution of viewing delays (Section 5.2.3).
• Vantage can also improve the QoE across diﬀerent viewing
delays for videos with highly dynamic (i.e., harder to encode)
content, even when there are no bandwidth variations (Sec-
tion 5.2.4).
• Vantage is robust to bandwidth misestimation (Section 5.2.6).
5.2.1 Overall improvements. Table 1 contains the SQI-SSIM
of the received video at both real-time and a delay of 30 seconds for
all the traces and videos. The average SQI-SSIM over the two delays
(shown in brackets) captures how a particular upload technique
caters to both viewing delays.
We observe that in all cases, Vantage achieves signiﬁcantly better
quality than Base-RT (up to 42.9%) for delayed viewing. The gains
are biggest for the AT&T-LTE network trace; this can be attributed
to the signiﬁcant variations in the bandwidth. Even for the TMobile-
UMTS network trace, which has very low bandwidth and signiﬁcant
periods of zero bandwidth, we observe modest improvements in
the delayed viewing quality over Base-RT. This demonstrates that
Vantage can simultaneously deliver high QoE for both real-time and
time-shifted viewing. We also ﬁnd that, across all traces and videos,
Vantage (bolded entries) signiﬁcantly outperforms both Base-RT
and Base-Delay in average SQI-SSIM across the viewing delays.
Vantage: Optimizing video upload for time-shi(cid:28)ed viewing of social live streams
SIGCOMM ’19 August 19–23, 2019 Beijing, China
for real-time frames slightly, and using the excess bandwidth for
sending the high-quality retransmissions, as shown in the band-
width usage graph in the top subplot in Figure 4c. With Vantage,
the delayed viewing quality comes very close to that of Base-Delay,
while simultaneously achieving real-time playback quality that is
comparable to Base-RT.
Improvements at ﬁne-grained time shifts. Figure 5a plots
the SQI-SSIM of the video for each viewing delay. For real-time
viewing, Base-RT outperforms both Base-Delay and Vantage. At
viewing delays beyond 15 seconds, Base-Delay outperforms both
Base-RT and Vantage. While the performance of Base-RT and Base-
Delay is unsatisfactory for the viewing delays that they are not
optimized for, Vantage provides a smooth increase in quality as
time-shift delay increases. Vantage’s performance is competitive
simultaneously at the delays for whith the two baselines are sepa-
rately optimized for.
Figure 5b shows the number of frames of the received video that
are skipped in groups of 10 or more frames for diﬀerent delays.
This quantiﬁes the smoothness of the resulting video. Both Base-RT
and Base-Delay suﬀer from a large number of skipped frames for
time-shifts that they are not optimized for. In contrast, Vantage has
nearly the same number of skipped frames as the baselines at their
respective optimal delays and signiﬁcantly reduces the number of
skipped frames for intermediate delays.
5.2.3 Adapting to viewer-delay distributions. An impor-
tant aspect of Vantage is the ability to optimize the video upload
process for diﬀerent distributions of the viewing delays. We evalu-
ated the performance of Vantage for three diﬀerent viewing delay
distributions, one skewed towards real-time viewing, one skewed
towards delayed viewing and one with uniform weights for low
latency and delayed viewing. Figure 5c shows the eﬀect of these
weights on the quality of video at diﬀerent viewing delays between
0 and 30 seconds. For low viewing delays between 0 and 10 seconds,
Vantage with a real-time skewed delay distribution achieves the
highest quality, whereas for highr viewing delays between 22 and
30 seconds, Vantage with a delay skewed distribution achieves the
highest quality. Vantage with a uniform delay distribution strikes a
balance between the two across all delays, achieving the highest
quality for viewing delays between 10 and 22 seconds. This demon-
strates that Vantage can not only support multiple time-shifted
viewing delays, but also be tuned to cater to the exact distribution
of the viewing delays for optimized QoE across the diﬀerent delays.
5.2.4 (cid:30)ality improvements for dynamic videos. In addi-
tion to improving QoE in the face of bandwidth variations, Vantage
can also be used to compensate for lower video quality for harder to
encode segments of a video, even when there is no bandwidth varia-
tion. Video content with varying compression diﬃculty is common
in video game streaming applications like Twitch, where the video
is signiﬁcantly harder to encode during highly dynamic segments
compared to more static segments like in-game menus. To emulate
this setting, we run Vantage and Base-RT for the Animation video,
which is an animated sequence with highly dynamic scene content,
with a constant bandwidth of 1.5 Mbps.
Base-RT causes 7 frames to be dropped. These drops not only
aﬀect real-time viewing, but are also present during delayed view-
ing. On the other hand, Vantage drops 8 frames in real-time, but
retransmits these later during the live-stream, resulting in no lost
frames for delayed playback and a corresponding increase in the
SQI-SSIM from 0.960 (for Base-RT) to 0.963.
5.2.5 Optimizer period. We ran Vantage with diﬀerent val-
ues of P ranging from 1 second to 8 seconds, and the results are
shown in Figure 6a. Choosing a large time period allows the opti-
mizer to spread the retransmissions over a longer duration, resulting
in better real-time quality, but smaller improvements for delayed
viewing since the bandwidth estimates are stale. Smaller time pe-
riods result in more accurate bandwidth estimates, but choosing
a time period that is too small results in a bigger drop in the real-
time quality and smaller improvements for delayed viewing due to
retransmissions being squeezed into shorter periods.
5.2.6 Errors in bandwidth estimation. Recall from Sec-
tion 4.3 that Vantage’s scheduler uses the average bandwidth from
the previous 1 second to schedule frame transmissions for a time
period that is 2 seconds in the future. To evaluate the eﬀect of
bandwidth misestimation, we analyze Vantage’s performance when
given consistently erroneous bandwidth estimates on the AT&T-
LTE trace with the Talking Heads video.
Figure 6b depicts the SQI-SSIM for diﬀerent time-shifted delays
when Vantage is faced with varying degrees of bandwidth estima-
tion error. Vantage in its normal operation mode (i.e., using the
average bandwidth of the past) is listed as “Past estimate (Vantage).”
We also emulate Vantage for the hypothetical scenario where it
knows the exact future bandwidth, along with a 50% underesti-
mate and a 100% overestimate from the future bandwidth (labeled
accordingly in Figure 6b).
We see that Vantage achieves only slightly lower SQI-SSIM val-
ues across times-shift delays compared to what it would achieve
with knowledge of the exact future bandwidth. Across all video-
trace combinations, we ﬁnd that Vantage results in drops in quality
of at most 1.7%, 3.2%, and 2.4% for real-time, 15 second, and 30
second viewing delays, as compared to what it would achieve with
knowledge of the exact future bandwidth. This suggests that Van-
tage’s approach of using the average bandwidth from the previous
1 s is satisfactory for generating high-quality bandwidth allocation
schedules and Vantage is resilient to errors in bandwidth estimation.
Figure 6b further indicates that Vantage is highly resilient to even
large bandwidth estimation errors due to eﬀective fallback mecha-
nisms: Vantage achieves high SQI-SSIM even when the bandwidth
is severely misestimated. The real-time video is largely unaﬀected
by bandwidth misestimation in the scheduler since the execution
engine adapts to rapid variations in the real-time bandwidth (de-
scribed in Section 4.3). When the generated retransmissions are
too large to be transmitted, the scheduler overwrites the sched-
ule in the next iteration. On the other hand, when the generated
retransmissions are small, they get transmitted faster and the ex-
cess bandwidth is allocated to real-time frames. We observe similar
patterns for the other two network traces. Additional graphs and
discussion are included in Appendix C.
5.2.7 Ablation studies. The use of a quality enhancing re-
transmissions to improve the video quality for higher viewing
delays can be implemented in multiple ways and it is important to
understand the additional beneﬁts Vantage’s design provides over
Vantage: Optimizing video upload for time-shi(cid:28)ed viewing of social live streams
SIGCOMM ’19 August 19–23, 2019 Beijing, China
[30] Hongzi Mao, Ravi Netravali, and Mohammad Alizadeh. 2017. Neural Adaptive
Video Streaming with Pensieve. In Proceedings of the Conference of the ACM
Special Interest Group on Data Communication.
[31] Ravi Netravali, Anirudh Sivaraman, Somak Das, Ameesh Goyal, Keith Winstein,
James Mickens, and Hari Balakrishnan. 2015. Mahimahi: Accurate Record-and-
Replay for HTTP. In 2015 USENIX Annual Technical Conference (USENIX ATC
15).
[32] Reza Rejaie, Mark Handley, and Deborah Estrin. 2000. Layered quality adaptation
for Internet video streaming. IEEE Journal on Selected Areas in Communications
18, 12 (2000), 2530–2543.
[33] Robert Ricci, Eric Eide, and The CloudLab Team. 2014. Introducing CloudLab:
Scientiﬁc Infrastructure for Advancing Cloud Architectures and Applications.
USENIX ;login: (2014).
[34] Luigi Rizzo. 1997. Dummynet: a Simple Approach to the Evaluation of Network
Protocols. ACM SIGCOMM Computer Communication Review (CCR) (1997).
[35] Heiko Schwarz, Detlev Marpe, and Thomas Wiegand. 2007. Overview of the
Scalable Video Coding Extension of the H.264/AVC Standard. IEEE Transactions
on Circuits and Systems for Video Technology 17, 9 (2007), 1103–1120.
[36] Douglas Soo. Twitch Engineering: An Introduction and Overview. https://bit.ly/
2JGR5yb. Last accessed 19 June 2018.
[37] John C Tang, Gina Venolia, and Kori M Inkpen. 2016. Meerkat and Periscope:
I Stream, you Stream, Apps Stream for Live Streams. In Proceedings of the 2016
CHI Conference on Human Factors in Computing Systems (CHI 16).
[38] Ming Tang, Lin Gao, Haitian Pang, Jianwei Huang, and Lifeng Sun. 2017. Opti-
mizations and Economics of Crowdsourced Mobile Streaming. IEEE Communica-
tions Magazine 55, 4 (2017), 21–27.
[39] Luis Teixeira. 2011. Rate-distortion Analysis for H.264/AVC Video Statistics. In
Recent Advances on Video Coding. InTech.
[40] Bolun Wang, Xinyi Zhang, Gang Wang, Haitao Zheng, and Ben Y Zhao. 2016.
Anatomy of a Personalized Livestreaming System. In Proceedings of the 2016
Internet Measurement Conference (IMC 16).
[41] Xiaodong Wang, Ye Tian, Rongheng Lan, Wen Yang, and Xinming Zhang. 2018.
Beyond the Watching: Understanding Viewer Interactions in Crowdsourced Live
Video Broadcasting Services. IEEE Transactions on Circuits and Systems for Video
Technology (2018).
[42] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Simoncelli. 2004. Image
quality assessment: from error visibility to structural similarity. IEEE transactions
on image processing 13, 4 (2004), 600–612.
[43] Stefan Winkler and Praveen Mohandas. 2008. The evolution of video quality
measurement: from PSNR to hybrid metrics. IEEE Transactions on Broadcasting
54, 3 (2008), 660–668.
[44] Keith Winstein, Anirudh Sivaraman, and Hari Balakrishnan. 2013. Stochastic
Forecasts Achieve High Throughput and Low Delay over Cellular Networks. In
Presented as part of the 10th USENIX Symposium on Networked Systems Design
and Implementation (NSDI 13).
[45] X Rex Xu, Andrew C Myers, Hui Zhang, and Raj Yavatkar. 1997. Resilient
Multicast Support for Continuous-Media Applications. In Proceedings of the IEEE
7th International Workshop on Network and Operating System Support for Digital
Audio and Video (NOSSDAV 97).
[46] Jongwon Yoon, Honghai Zhang, Suman Banerjee, and Sampath Rangarajan.
2012. MuVi: A Multicast Video Delivery Scheme for 4G Cellular Networks. In
Proceedings of the 18th Annual International Conference on Mobile Computing and
Networking (Mobicom 12).
REFERENCES
[1] Facebook Live. https://live.fb.com/. Last accessed 18 June 2018.
[2] Hangouts On Air with YouTube Live. https://support.google.com/youtube/
answer/7083786?hl=en. Last accessed 4 July 2018.
[3] HTTP Live Streaming. https://developer.apple.com/streaming/. Last accessed 19
June 2018.
[4] More Ways To Connect with Friends in Facebook Live. https://newsroom.fb.
com/news/2017/05/more-ways-to-connect-with-friends-in-facebook-live/. Last
accessed 4 July 2018.
[5] MPEG-DASH standard.
https://mpeg.chiariglione.org/standards/mpeg-a/
mpeg-dash. Last accessed 23 June 2019.
[6] Open Broadcaster Software. https://obsproject.com/. Last accessed 19 June 2018.
[7] Periscope. https://www.pscp.tv/. Last accessed 19 June 2018.
[8] Real-Time Messaging Protocol (RTMP) Speciﬁcation. https://www.adobe.com/
devnet/rtmp.html. Last accessed 19 June 2018.
[9] WebRTC. https://webrtc.org/. Last accessed 19 June 2018.
[10] Xiph.org Test Media. https://media.xiph.org/. Last accessed 27 January 2019.
[11] Youtube-Live. https://www.youtube.com/channel/UC4R8DWoMoI7CAwX8_
LjQHig. Last accessed 18 June 2018.
[12] Facebook Live video for News Feed (part 2). https://atscaleconference.com/videos/
facebook-live-video-for-news-feed-part-2/. Last accessed 19 June 2018.
[13] Hamed Ahmadi, Omar Eltobgy, and Mohamed Hefeeda. 2017. Adaptive multicast
streaming of virtual reality content to mobile users. In Proceedings of the on
Thematic Workshops of ACM Multimedia 2017.
[14] Cisco. 2017. Cisco Visual Networking Index: Forecast and Methodology, 2016-2021.
Technical Report 1465272001663118.
[15] Luca De Cicco, Gaetano Carlucci, and Saverio Mascolo. 2013. Experimen-
tal Investigation of the Google Congestion Control for Real-time Flows. In
Proceedings of the 2013 ACM SIGCOMM Workshop on Future Human-centric
Multimedia Networking (FhMN ’13). ACM, New York, NY, USA, 21–26. https:
//doi.org/10.1145/2491172.2491182
[16] Zhengfang Duanmu, Kai Zeng, Kede Ma, Abdul Rehman, and Zhou Wang. 2016.
A quality-of-experience index for streaming video. IEEE Journal of Selected Topics
in Signal Processing 11, 1 (2016), 154–166.
[17] Aiman Erbad and Charles Buck Krasic. 2012. Sender-side buﬀers and the case
for multimedia adaptation. Commun. ACM 55, 12 (2012), 50–58.
[18] Sadjad Fouladi, John Emmons, Emre Orbay, Catherine Wu, Riad S. Wahby, and
Keith Winstein. 2018. Salsify: Low-Latency Network Video through Tighter
Integration between a Video Codec and a Transport Protocol. In 15th USENIX
Symposium on Networked Systems Design and Implementation (NSDI 18).
[19] LLC Gurobi Optimization. Gurobi Optimizer Reference Manual. http://www.
gurobi.com
[20] Jian He, Mubashir Adnan Qureshi, Lili Qiu, Jin Li, Feng Li, and Lei Han. 2018.
Favor: Fine-Grained Video Rate Adaptation. In Proceedings of the 9th ACM Multi-
media Systems Conference (MMSys 18).
[21] Stefan Holmer, Mikhal Shemer, and Marco Paniconi. 2013. Handling Packet Loss
in WebRTC. In 2013 20th IEEE International Conference on Image Processing (ICIP
13).
[22] Te-Yuan Huang, Ramesh Johari, Nick McKeown, Matthew Trunnell, and Mark
Watson. 2014. A Buﬀer-based Approach to Rate Adaptation: Evidence from a
Large Video Streaming Service. In Proceedings of the 2014 ACM Conference on
SIGCOMM (SIGCOMM ’14). ACM, New York, NY, USA, 187–198. https://doi.org/
10.1145/2619239.2626296
[23] Junchen Jiang, Vyas Sekar, Henry Milner, Davis Shepherd, Ion Stoica, and Hui
Zhang. 2016. CFA: A Practical Prediction System for Video QoE Optimization. In
13th USENIX Symposium on Networked Systems Design and Implementation (NSDI
16).
[24] Junchen Jiang, Vyas Sekar, and Hui Zhang. 2012. Improving Fairness, Eﬃciency,
and Stability in HTTP-based Adaptive Video Streaming with FESTIVE. In Pro-
ceedings of the 8th International Conference on Emerging Networking Experiments
and Technologies (CoNEXT 12).
[25] Junchen Jiang, Vyas Sekar, and Hui Zhang. 2014.
Improving Fairness, Eﬃ-
ciency, and Stability in HTTP-Based Adaptive Video Streaming With Festive.
IEEE/ACM Trans. Netw. 22, 1 (Feb. 2014), 326–340. https://doi.org/10.1109/TNET.
2013.2291681
[26] Colin Levy and Ton Roosendaal. 2010. Sintel. In ACM SIGGRAPH ASIA 2010
Computer Animation Festival (SA ’10). ACM, New York, NY, USA, Article 82,
1 pages. https://doi.org/10.1145/1900264.1900346
[27] Zhenyu Li, Mohamed Ali Kaafar, Kave Salamatian, and Gaogang Xie. 2017. Char-
acterizing and Modeling user Behavior in a Large-scale Mobile Live Streaming
System. IEEE Transactions on Circuits and Systems for Video Technology 27, 12
(2017), 2675–2686.
[28] Xing Liu, Qingyang Xiao, Vijay Gopalakrishnan, Bo Han, Feng Qian, and Matteo
Varvello. 2017. 360 Innovations for Panoramic Video Streaming. In Proceedings
of the 16th ACM Workshop on Hot Topics in Networks (HotNets 17).
[29] Kaixuan Long, Chencheng Ye, Ying Cui, and Zhi Liu. 2019. Optimal Multi-Quality
Multicast for 360 Virtual Reality Video. arXiv preprint arXiv:1901.02203 (2019).