(4) from seal.eecs.umich.edu
(d-110-235.eecs.umich.edu. [141.212.110.235])
by mx.google.com
with ESMTP id no10si2673927igc.10.2012.02.25.07.02.20;
Sat, 25 Feb 2012 07:02:20 -0800 (PST)
(3) from seal.eecs.umich.edu (localhost [127.0.0.1])
by seal.eecs.umich.edu (Postfix)
with ESMTP id EE11954C72F
for ;
Sat, 25 Feb 2012 10:05:12 -0500 (EST)
(2) from backend.www.inm.smartertravel.net
(backend.www.inm.smartertravel.net [75.98.73.172])
by seal.eecs.umich.edu (Postfix)
with ESMTPS id CA35354C722
for ;
Sat, 25 Feb 2012 10:05:12 -0500 (EST)
(1) from smarter (helo=localhost)
by backend.www.inm.smartertravel.net
with local-bsmtp (Exim 4.76)
(envelope-from
)
id 1S1J8d-0007SB-QG
for PI:EMAIL;
Sat, 25 Feb 2012 10:02:19 -0500
Figure 7: Values of the Received header ﬁelds for an email, an-
notated with the order in which they were pushed onto the mail
header. The receipt timestamps are highlighted in gray.
in which known legitimate senders may be treated as untrusted. For
instance, in a more severe case, if a user is subscribed to a mailing
list under a semi-private alias that the user later marks as restricted,
and then the domain name of the mailing list’s server is changed,
the mailing list would then be treated as untrusted and would likely
ignore our service’s prompts to solve a CAPTCHA challenge, re-
sulting in that newsletter being silently blocked. One simple miti-
gation would be to deliver these messages to the user’s spam folder,
instead of completely blocking them (this requires cooperation be-
tween SEAL and the mail provider). The user can then mark the
senders that are incorrectly delivered as trusted.
Another concern is the potential misuse of SEAL by spammers.
For example, they could create aliases to be used in the From ﬁeld
of spam messages, providing a channel for the recipients of spam
to respond (e.g. to spam advertisements). But it is unclear if this
offers signiﬁcant advantages to spammers since it is trivial for them
to create multiple email addresses using mail servers they control
and, as far as we are aware, this does not help them bypass existing
spam defense mechanisms. Note that a spammer would still have to
create an account with an email provider that is coupled with their
SEAL account. Legitimate SEAL servers could be conﬁgured to
permit only coupling with email providers that have checks against
spammer registration or receipt of large amounts of bulk mail in
short intervals (e.g., Gmail appears to have such controls). Illegiti-
mate SEAL servers that are primarily designed to protect spammers
would probably get blacklisted over time, just as mail servers do.
Spammers could also attempt to attack SEAL protocols directly.
For example, a spammer could attempt to spoof a legitimate user
and send commands to add themselves to the trusted set. But, to
do that, the spammer would need several pieces of information that
are not easy to get: email ID with the mail provider and account
userid/password on SEAL. Email sent to command addresses, such
as getalias@sealserver, is rejected unless it arrives over an authen-
ticated SMTP session and the commands are executed under the
identity of the user that authenticated, rather than the content of the
“From” ﬁeld in the message headers.
Spammers could attempt to compromise SEAL infrastructure as
well. While SEAL servers should be secured using best practices,
one should minimize the damage that results in case the server is
compromised. We consider two forms of attacks: (1) a one-time
intrusion that simply steals all the data within the databases and (2)
an active attack where the attacker compromises the code within
the server. In the ﬁrst case, the only email IDs that the attacker gets
hold of are the user’s email ID at the mail provider (Gmail ID in
Figure 3. All other email IDs are stored as salted hashes, which
should be difﬁcult to reverse1. Our implementation recommends
that the user create a fresh, private account on the Gmail provider.
That email address should not be publicly used – all email from it
is routed via the SEAL server by conﬁguration of SMTP settings
within the mail provider. Recipients only see semi-private aliases.
If the email ID at the mail provider is ever leaked, it is easy to
change, since it is only relevant to the owner and not shared.
In the second case, if a spammer compromises the SEAL servers,
they can monitor emails ﬂowing through the system and collect ad-
dresses. While this is serious, the addresses collected are limited
to the time that the attack goes unnoticed. It is certainly less se-
rious than the compromise of an email provider, where both older
messages and future email are potentially accessible.
SEAL is not designed to provide anonymity against local net-
work snooping. A government, for example, could monitor the
network channels to a SEAL server and collect emails, since they
could go over unauthenticated and unencrypted SMTP from arbi-
trary senders. As far as we are aware, this is not a typical attack
used by spammers.
6.2 Usability
Despite our efforts to make SEAL easy to use and minimize im-
pact on non-spam senders, we acknowledge that some users will
still prefer permanent addresses to semi-private aliases. Permanent
addresses have the advantage that they can be printed on business
cards, are easy to remember, and thus hand out. With SEAL, a user
could generate an alias on a mobile device and then write it by hand
on a form or business card (which may not be too bad for one-on-
one situations). For better scalability when the user is handing out
the cards to a large number of users, a possible solution would be to
publish a means for a requester to send a text message and receive
the alias as a response. This ties the requester’s cell phone number
to the alias. Cell phones are sufﬁciently common now among email
users that we don’t see this as a signiﬁcant usage barrier.
For publishing email IDs on web pages, we are currently exper-
imenting with a mechanism that generates a semi-private alias on
the web page based on the IP address from which the HTTP request
was received. The reason for looking into this is to investigate if
this provides additional means to identify servers that are used to
harvest email IDs from web sites. We are still in the process of
collecting data from this mechanism.
One signiﬁcant usability concern with SEAL is that, over time,
one person could appear multiple times in an address book. This
would occur when email containing aliases in the From or To ﬁelds
is sent to a group. When those aliases are added to an address book,
one person may end up with multiple aliases in an address book.
This occurs today also to some extent as people both have work and
personal email accounts. As a result, many address books permit
multiple email IDs to be associated with one person. With SEAL,
being able to mark an email ID as the preferred or primary email
1Besides, if the spammer had a dictionary of email IDs, there are
cheaper means of verifying them than trying to do a dictionary at-
tack on the salted hashes.
ID will be useful. In our design, we require the alias name of an
alias to be associated with a single account. As a result, a SEAL-
compatible address book could automatically associate all email
IDs that have the same alias name (e.g., aliasname.*@sealserver)
with the same person.
As mentioned before, the browser extension for using aliases as
web usernames was adapted from PwdHash [25], and so it comes
with some of the same limitations as their work, including lack
of portability to all applications that render HTML, vulnerability
to spyware coexisting on the same computer, and susceptibility to
attacks on DNS to confuse the resolution of domain names. One
potential improvement in usability over PwdHash comes from the
convenient fact that the username ﬁeld is not normally scrambled
on login web forms, so that the user can more easily see the fetching
and replacement of their username and know that it was successful.
It is also notable that while the user must input a sensitive pass-
word when using PwdHash, the information being input for our
extension is not nearly as sensitive, and so attacks such as focus
stealing are not likely to pose as substantial a threat to web account
security.
7. CONCLUSION
The current paradigm does not provide email address owners
sufﬁcient control of their addresses, leading to email address leak-
ages. In addition to traditional risks posed by underground crack-
ers, some services require the users’ ofﬁcial addresses to validate
their afﬁliations with certain organizations. Current technologies
do not allow users to provide alternative addresses that do not over-
disclose user information to these services.
We propose the concept of semi-private email aliases and its em-
bodiment, SEAL, a system that provides users more control over
their email aliases and allows web services to validate the user’s
afﬁliation with an organization without having access to the user’s
private information. Semi-private aliases are randomized email ad-
dresses that can be restricted progressively when the user detects
that they have leaked. This is related to the common disposal fea-
ture of DEA systems. However, what distinguishes SEAL from
other DEA systems is that it both includes a more advanced mech-
anism for managing ﬁner-grained alias lifecycles, allowing for a
more ﬂexible approach to retiring compromised email addresses,
and also that it integrates fully with current email systems while
at the same time not being overly restrictive. Experimental results
indicate that SEAL can be useful in controlling unsolicited email,
while being compatible with existing email systems.
In corporate settings, SEAL also permits use of aliases to val-
idate a user’s afﬁliation, while preventing disclosure of the work-
related email ID or associated information. This proved useful in
a test deployment where an instructor of a freshmen course at our
institution required students to use an online forum provided by Pi-
azza.com but did not wish to require the students to disclose their
university email ID to the service because of concerns about stu-
dent privacy. Piazza.com’s default sign-up mechanism uses stu-
dent’s email IDs to validate their university afﬁliation. Over 80%
of students chose to use email aliases issued by SEAL rather than
their university email ID, to sign up at Piazza.com.
8. ACKNOWLEDGMENTS
This paper is based upon work supported by the National Sci-
ence Foundation Grant No. CNS 0916126. Any opinions, ﬁndings,
and conclusions or recommendations expressed in this paper are
those of the author(s) and do not necessarily reﬂect the views of the
National Science Foundation.
technologies, ISICT ’03, pages 291–296. Trinity College
Dublin, 2003.
[17] Jonathan A. Zdziarski. Ending Spam: Bayesian Content
Filtering and the Art of Statistical Language Classiﬁcation.
No Starch Press, San Francisco, CA, USA, 2005.
[18] Vipul Ved Prakash and Adam O’Donnell. Fighting Spam
with Reputation Systems. Queue, 3:36–41, November 2005.
[19] Jennifer Golbeck and James Hendler. Reputation Network
Analysis for Email Filtering. In In Proc. of the Conference
on Email and Anti-Spam (CEAS), Mountain View, 2004.
[20] P. Oscar Boykin and Vwani Roychowdhury. Personal Email
Networks: An Effective Anti-Spam Tool. IEEE
COMPUTER, 38:61, 2004.
[21] Sushant Sinha, Michael Bailey, and Farnam Jahanian.
Shades of Grey: On the Effectiveness of Reputation-based
“blacklists”. In Proceedings of the 3rd International
Conference on Malicious and Unwanted Software
(MALWARE ’08), pages 57–64, Fairfax, Virginia, USA,
October 2008.
[22] Joshua Goodman and Robert Rounthwaite. Stopping
Outgoing Spam, 2004.
[23] Chris Kanich, Christian Kreibich, Kirill Levchenko, Brandon
Enright, Geoffrey M. Voelker, Vern Paxson, and Stefan
Savage. Spamalytics: an empirical analysis of spam
marketing conversion. In Proceedings of the 15th ACM
conference on Computer and communications security, CCS
’08, pages 3–14, New York, NY, USA, 2008. ACM.
[24] Martín Abadi, Andrew Birrell, Mike Burrows, Frank Dabek,
and Ted Wobber. Bankable Postage for Network Services. In
In Proc. Asian Computing Science Conference, pages 72–90,
2003.
[25] Blake Ross, Collin Jackson, Nick Miyake, Dan Boneh, and
John C. Mitchell. Stronger password authentication using
browser extensions. In Proceedings of the 14th conference on
USENIX Security Symposium - Volume 14, pages 2–2,
Berkeley, CA, USA, 2005. USENIX Association.
[26] Postﬁx. Postﬁx. http://www.postfix.org/, 2011.
[27] Dovecot. Dovecot. http://www.dovecot.org/, 2011.
[28] Alexa. Alexa The Web Information Company. Online.
http://www.alexa.com/, 2011.
[29] IETF. RFC 5322: Internet Message Format. Online, October
2008.
[30] Listserv. Lists with 10,000 subscribers or more. Online, July
2011.
9. REFERENCES
[1] David Mazières and M. Frans Kaashoek. The design,
implementation and operation of an email pseudonym server.
In Proceedings of the 5th ACM conference on Computer and
communications security, CCS ’98, pages 27–36, New York,
NY, USA, 1998. ACM.
[2] Jean-Marc Seigneur and Christian Damsgaard Jensen.
Privacy recovery with disposable email addresses. IEEE
Security and Privacy, 1:35–39, November 2003.
[3] Anonymous Email: Free disposable email service for
receiving emails anonymously. Online, 2011.
[4] Your Own Protection Mail. Online.
http://www.yopmail.com/en/, 2011.
[5] Mailinator. Online, 2011.
[6] Aram Yegenian and Tassos Dimitriou. Inexpensive Email
Addresses: An Email Spam-Combating System. In Sushil
Jajodia, Jianying Zhou, Ozgur Akan, Paolo Bellavista,
Jiannong Cao, Falko Dressler, Domenico Ferrari, Mario
Gerla, Hisashi Kobayashi, Sergio Palazzo, Sartaj Sahni,
Xuemin (Sherman) Shen, Mircea Stan, Jia Xiaohua, Albert
Zomaya, and Geoffrey Coulson, editors, Security and
Privacy in Communication Networks, volume 50 of Lecture
Notes of the Institute for Computer Sciences, Social
Informatics and Telecommunications Engineering, pages
35–52. Springer Berlin Heidelberg, 2010.
[7] John Ioannidis. Fighting spam by encapsulating policy in
email addresses.
[8] TMDA. Tagged Message Delivery Agent (TMDA). Online.
[9] David Recordon and Drummond Reed. Openid 2.0: a
platform for user-centric identity management. In
Proceedings of the second ACM workshop on Digital identity
management, DIM ’06, pages 11–16, New York, NY, USA,
2006. ACM.
[10] Gary Robinson. A statistical approach to the spam problem.
Linux J., 2003:3–, March 2003.
[11] Le Zhang, Jingbo Zhu, and Tianshun Yao. An evaluation of
statistical spam ﬁltering techniques. ACM Trans. Asian Lang.
Inf. Process., 3(4):243–269, December 2004.
[12] Ion Androutsopoulos, John Koutsias, Konstantinos
Chandrinos, Georgios Paliouras, and Constantine D.
Spyropoulos. An evaluation of Naive Bayesian anti-spam
ﬁltering. CoRR, cs.CL/0006013, 2000.
[13] Ion Androutsopoulos, John Koutsias, Konstantinos V.
Chandrinos, and Constantine D. Spyropoulos. An
experimental comparison of naive Bayesian and
keyword-based anti-spam ﬁltering with personal e-mail
messages. In Proceedings of the 23rd annual international
ACM SIGIR conference on Research and development in
information retrieval, SIGIR ’00, pages 160–167, New York,
NY, USA, 2000. ACM.
[14] Karl-Michael Schneider. A comparison of event models for
Naive Bayes anti-spam e-mail ﬁltering. In Proceedings of the
tenth conference on European chapter of the Association for
Computational Linguistics - Volume 1, EACL ’03, pages
307–314, Stroudsburg, PA, USA, 2003. Association for
Computational Linguistics.
[15] Tony A. Meyer and Brendon Whateley. Spambayes:
Effective open-source, bayesian based, email classiﬁcation
system. In CEAS, 2004.
[16] Cormac O’Brien and Carl Vogel. Spam ﬁlters: bayes vs.
chi-squared; letters vs. words. In Proceedings of the 1st
international symposium on Information and communication
APPENDIX
A. APPENDIX
Figure 8: State diagram for alias.
From: bob@sealserver
To: getalias@sealserver
Subject: bobhome
From: getalias@sealserver
To: bob@sealserver
Reply-To: bobhome.b3f9cehd@sealserver
Subject: bobhome.b3f9cehd@sealserver
Body:
Your new randomized email is: "bobhome.b3f9cehd@sealserver"
Append this to your recipient list. We do not recommend
using this address for multiple recipients.
Figure 9: (L) Example email sent by Bob to request an alias. (R) Example response to Bob’s alias request.
From: bob@sealserver
To: "work" PI:EMAIL
Reply-To: bob@sealserver
Subject: Business Proposal
Body:
Dear Alice, ...
Figure 10: Example of using hint.