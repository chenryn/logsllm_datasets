the password wrapped credential is dcredu = ⟨M; [s]pwu ; k⟩3.
Finally, the user puts dcredu to her preferred storage such as
password wrapped credential dcredu = ⟨M; [s]pwu ; k⟩ avail-
mobile phone, USB ﬂash memory, or a public facility.
Anonymous Authentication: Suppose user u already has her
able at the point of login. The anonymous authentication
protocol oﬀering mutual authentication and key exchange
between u and the server works as follows.
Step 1. The user does the following:
(1)
(2)
1; R2 =
(3)
unwraps [s]pwu with her password pwu to get s;
picks r; v1 ∈R Zq, and computes R1 = gr
tv1 ˜e(g1; w)r;
constructs
sends
R1; R2; CMT(ΠBBS+) to the server as a login
request:
User −→ Server: R1; R2; CMT(ΠBBS+)
CMT(ΠBBS+);
Step 2. Upon receipt of the login request, the authentica-
tion server does the following:
3We also leave M unprotected, and the only reason is that it
is an element in G1 and it has certain known structure, e.g.,
if its representation is a (x; y) pair, then the x-coordinate
and y-coordinate must satisfy the underlying elliptic curve.
Note that the quantities under protection must be random,
without known properties.
(1)
(2)
(3)
~e(R1;w) = tv1 ;
computes V1 = R2
picks v2 ∈R Zq and computes V2 = tv2 ;
computes ˜V = H1(V1; V2), and sends back V2; ˜V
to the user:
Server −→ User: V2; ˜V
Step 3. Receiving the message, the user does as follows:
(1)
(2)
(3)
(4)
checks H1(tv1 ; V2) ?= ˜V , and aborts if not;
taking V2 as the challenge, constructs and sends
RES(ΠBBS+) to the server;
stops the protocol by computing a shared key sk =
H2(tv1 ; V2; V v1
User −→ Server: RES(ΠBBS+)
At the server end, the server computes sk =
H2(V1; V2; V v2
1 ) upon validating RES(ΠBBS+), and
stops.
2 ).
Remarks. It is not necessary to follow the protocol step
by step, as it is already self-contained. We only outline the
intuitions. First of all, we point out that (R1; R2) consti-
tutes an encryption of V1 = tv1 under public key ˜e(g1; w),
so that only the server knows the private key w. This use
of (˜e(g1; w); w) as a public-private key pair for encryption
represents a novelty of our scheme. As such, authentication
of the server by the user is through the encryption of V1,
such that only the server can decrypt. Second, V1; V2 serve
not only for an apparent Diﬃe-Hellman key exchange, but
also as the respective parties’ freshness nonces.
3.3 Performance Comparison and More
0 gy
The above scheme is comparable to the basic scheme (cf.
Section 4.2) of [42]. To demonstrate the performance gain
under our new method of public key suppression, we provide
an analytical performance comparison between the two. As
a rule of thumb, for computation overhead we only count the
number of exponentiations (we treat point multiplication in
G1; G2 as exponentiation) and bilinear paring operations,
as they are the operations that dominate the computation-
al overhead; besides, a multi-exponentiation is treated as
multiple exponentiations (e.g., gx
1 is counted as 2 expo-
nentiations). Let |G| denote the bit length of an element
in group G, EXPG an exponentiation operation in G, and
Pair a bilinear pairing operation. The comparison results
are reported in Table 1. We remark that we had avoided
computing bilinear pairing operations as much as possible
in both schemes, e.g., ˜e(g0; h); ˜e(g2; h) are treated as ﬁxed
bases in GT .
To be speciﬁc on the comparison, let the two schemes
achieve the same level of security, e.g., 80 bits, then |q| =
|G2| = |GT| = 1024; and 1EXPGq
≈
160,
≈ 1
1EXPG1
4 Pair (see, e.g., [4]). As such, user-side
and server-side computations in our scheme have been im-
proved, respectively, 20% and 30% compared to the scheme
in [42]; while communications are similar. While the gain
may seem moderate, it is actually not trivial considering
that we obtained the gain by working over exactly the same
primitive, i.e., BBS+ Signature.
|G1| = 171,
≈ 1EXPGT
Besides better performance, more important of public key
suppression is generality. It enables a direct use of the orig-
inal blind veriﬁcation protocol of BBS+ Signature; in addi-
tion, possession of homomorphic encryption by the authen-
tication server is not required, which greatly simpliﬁes the
145Table 1: Performance Comparison
Computationa
User
Server
Basic scheme of [42]
Our scheme
4EXPGq + 7EXPG1
1EXPGq + 6EXPG1
+8EXPGT + 2Pair +7EXPGT + 4Pair
9EXPG1 + 9EXPGT
7EXPG1 + 8EXPGT
+1Pair
+2Pair
(bits)
Communication
9|q| + 7|G1| + 1|GT|
7|q| + 4|G1| + 2|GT|
a Homomorphic encryption in [42] is assumed substantiated as ElGamal encryption in group Gq of
a prime order q.
system conﬁguration and makes the anonymous authentica-
tion protocol much neater and easier for security analysis.
These are important factors when it comes to practical de-
ployment.
3.4 Security Analysis
As speciﬁed in [41, 42], a storage extra APA scheme must
satisfy Security of Password, User Unlinkability, and Au-
thenticated Key Exchange.
It is not hard to see that our
scheme meets User Unlinkability and Authenticated Key
Exchange: the former is due to blind veriﬁcation of BB-
S+ Signature; for the latter, our anonymous authentication
protocol is essentially a combination of signature based au-
thenticator and (public key) encryption based authenticator
- see the security arguments in [42].
It remains to analyze Security of Password. The biggest
threat to Security of Password comes from a collusion of
some enrolled users, each having his own authentication cre-
dential; they target a particular user’s password wrapped
credential by means of oﬄine guessing attacks; to assist in
their attacks, they may eavesdrop on the victim performing
the anonymous authentication protocol with the server. We
argue that overseeing the anonymous authentication proto-
col does not give them more advantage for oﬄine guessing
attacks. To see this, recall that the only place where the
protocol could reveal information on the underlying authen-
tication credential is the blind veriﬁcation protocol of BBS+
Signature, which results in (M1; M2) and P oK on the cre-
dential elements. (M1; M2) information theoretically hides
M , while the zero-knowledge proof P oK by deﬁnition does
not reveal any information on the values to be proved.
It thus suﬃces to model the threat to Security of Password
as an adversary with a set of valid authentication credentials
in possession, and to show that the adversary cannot discern
a particular authentication credential under attack. To this
end, Theorem 1 mandates that any PPT adversary against
our method of BBS+ Signature under public key suppression
has a negligible advantage in distinguishing a valid BBS+
signature from a random “simulation”, even with the knowl-
edge of other BBS+ signatures. This ensures that oﬄine
guessing attacks to password wrapped credentials is futile,
thus Security of Password is attained. We shall stress that
this “indistinguishability” property is irrelevant in the origi-
nal BBS+ Signature, as it does not suppress public key.
Theorem 1. De(cid:12)ne an adversary’s advantage in the fol-
lowing \indistinguishability game" as | Pr((cid:27)
= (cid:27)) − 1=2|.
In the general group model, any PPT adversary A has a
negligible advantage.
∗
1.
2.
3.
4.
5.
Set up the system parameters g0; g1; g2; h; w = h(cid:31)
for BBS+ Signature; publish ⟨g0; g1; g2; h; ˜e(g1; w)⟩
as public parameters and keep ⟨(cid:31); w⟩ as secret.
A can repeatedly ask for signatures by submitting
a message each time, upon which a signature under
BBS+ Signature is given to A.
Finally, A submits a message m.
Toss a fair coin (cid:27) R←− {0; 1};
if (cid:27) = 1 then a
valid BBS+ signature on m is returned; else return
(M; k; s), where M ∈R G1; k; s ∈R Zq.
A outputs a bit (cid:27)
, which is a guess on (cid:27).
∗
Proof. (Sketch) For clarity of illustration, the proof pro-
ceeds in several steps. First, we consider a simpliﬁed format
of BBS+ signatures, i.e., a signature is deﬁned as (M; k)
1
k+(cid:31)
. We need to show that if the sim-
such that M = g
0
pliﬁed BBS+ signatures are secure (i.e., no adversary has
non-negligible advantage in the “indistinguishability game”),
then the original signatures are secure (with respect to the
“indistinguishability game”). To that end, in fact it is easy
to transform an adversary A against the original signatures
to an adversary B against the simpliﬁed signatures, both un-
der the “indistinguishability game”. Speciﬁcally, B works by
choosing r1; r2 ∈R Zq and setting g1 = gr1
0 ; then B
can simulate the “indistinguishability game” to A by query-
ing its own signature oracle. In particular, when A asks for
a signature upon m, B ﬁrst queries its own oracle which will
; then B selects s ∈R Zq
return ( ¯M ; k) satisfying ¯M = g
k+(cid:31)
0
and computes M = ¯M 1+r1m+r2s, and returns (M; k; s) to
A. Clearly (M; k; s) is a valid original BBS+ signature on
m, and the simulation is perfect.
0 ; g2 = gr2
1
1
g
k+(cid:31)
0
The remainder of the proof will work on the simpliﬁed
BBS+ signatures. The second step involves proving that
the simpliﬁed signatures are indeed secure. The proof is
based on the SDDHI (Strong DDH Inversion) assumption
in G1 with ˜e : G1 × G2 → GT , which has been proven to
hold in the generic group model [10]. In particular, the SD-
DHI assumption states that given public parameters (g0 ∈
0 ; h ∈ G2) and the access to an oracle that returns
G1; g(cid:31)
, upon input k ∈ Zq, no PPT adversary can tell a-
). It is apparent that
part (g
(g0; g(cid:31)
0 ; h) leak more information than (g0; ˜e(g0; h(cid:31)); h), as
the latter can be computed from the former, but not the
vice versa. Hence the SDDHI assumption certainly hold-
s with respect to public parameters (g0; ˜e(g0; h(cid:31)); h). What
we need is that the SDDHI assumption holds with respect to
(g0; g1; ˜e(g1; h(cid:31)); h), where g1 ∈R G1. It is rather straight-
forward to transform an adversary against the SDDHI as-
sumption under (g0; g1; ˜e(g1; h(cid:31)); h) to an adversary under
(g0; ˜e(g0; h(cid:31)); h), and the trick is that the latter adversary
′ ∈R G1; k
) from (M
1
k′+(cid:31)
0
′
; k
′
1460 with a random r ∈ Zq. This means that if
sets g1 = gr
the SDDHI assumption under (g0; ˜e(g0; h(cid:31)); h) holds, then
it must also hold under (g0; g1; ˜e(g1; h(cid:31)); h).
The ﬁnal step is to show that under the SDDHI assump-
tion with respect to (g0; g1; ˜e(g1; h(cid:31)); h), no adversary in the
“indistinguishability game” can have non-negligible advan-
tage. This step is trivial and the speciﬁcs are omitted.
4. BIOMETRIC WRAPPED CREDENTIAL:
TOWARDS ANONYMOUS BIOMETRIC
AUTHENTICATION
The idea of achieving anonymous password authentica-
tion with password wrapped credentials is somewhat un-
orthodox, but helps get around the linear server-side com-
putation barrier inherent in the standard setting, thus enor-
mously advancing the ﬁeld and making anonymous pass-
word authentication a practically usable primitive. Presum-
ably a more reliable alternative to passwords, biometrics al-
so possess portability; but achieving anonymous biometric
authentication in its standard setting suﬀers from an even
worse linear server-side computation problem (although al-