range of values of each performance metric is prob-
lematic due to the large variance in distribution (e.g.,
unusually large RTT). Normalizing all values based on
such a wide range leads to poor decisions because the
difference between values in the common case become
hard to discern. Instead, we normalize the rewards by
dividing them by the average of upper 95% conﬁdence
bounds (Predupper(s, d, r)) of the top-k candidates.
2. The top-k pruning in §4.4 is a function of only the sam-
ples explored. Therefore, to avoid being blindsided by
dynamically changing performance distributions, VIA
also sets aside  fraction of calls to random relays (out-
side of the top-k) for general exploration. This step
is not required in traditional exploration-exploitation
techniques as they assume the reward (performance)
distribution of each bandit (relay option) is static, which
may not hold in our context.
3Exploration-exploitation could also be invoked on per-
packet basis within the call. However, this would require
packet-level control, which is out of the scope of this paper.
*/
(cid:80)
performance as normalizer w.
/* Initializing variables
ucbmin ← ∞; rtop ← null
/* To avoid outliers, we do not use maximum
*/
w ← 1|TopK|
/* Following is the standard UCB1, except
T ← |Assign| + 1
for r ∈ TopK do
for the normalization scheme.
r∈TopK(Predupper(s, d, r))
*/
(cid:80)
Q(c(cid:48), r) −(cid:113) 0.1 log T
Cr ← {c(cid:48)|Assign(c(cid:48)) = r}
/* Q is the quality function.
ucb ← 1
c(cid:48)∈Cr
w|Cr|
if ucb < ucbmin then
rtop ← r
ucbmin ← ucb
|Cr|
*/
return rtop
2
3
4
5
6
7
8
9
10
11
Algorithm 3: Exploring the top-k candidates in real
time using modiﬁed UCB1.
4.6 Budgeted relaying
We extend VIA’s relaying decision to consider budget con-
straints: so the fraction of calls being relayed must be less
than a certain limit, B (e.g., 30%). While such an overall
budget on relayed calls is simple, in general it may also be
of interest to consider other budget models, such as per-relay
limits or bandwidth cap on call-related trafﬁc.
VIA utilizes the budget using a simple extension to the
heuristic in §4.5. It decides to relay a call only if the beneﬁt
of relaying is sufﬁciently high. If the overall budget for re-
laying calls is B percent, a call should be relayed only if the
beneﬁt of relaying it is within the top B percentile of calls.
VIA uses historical call information (of relaying beneﬁts) to
keep track of the percentiles. It decides to relay a call only
if the expected beneﬁt is above the Bth percentile beneﬁt.
5 Evaluation
In this section, we show that VIA can signiﬁcantly improve
performance on network metrics. Speciﬁcally, we show that:
• VIA achieves substantial improvement on all network
metrics — 20% − 58% reduction on median (compared
to the oracle’s 30%-60%; §3) and 35% − 60% on 99th
percentile. VIA reduces PNR by 39% − 45% for the in-
dividual metrics (compared to the oracle’s 53% in Fig-
ure 8b), and by 23% when PNR is computed on an "at
least one bad" metric (compared to the oracle’s 30%).
• VIA achieves close-to-optimal performance under bud-
get constraints by selectively relaying calls that have higher
potential beneﬁt (§4.6).
• VIA’s improvement increases as relay decisions are made
at ﬁner spatial granularities and more dynamically. How-
ever, we start to see diminishing gains at granularities
ﬁner than AS-pair and daily.
(a) VIA, strawmen, oracle vs. default
(b) VIA improvement on percentiles
Figure 12: Improvement of VIA. PNR on individual met-
rics improve by 39%− 45% and on the "at least one bad"
metric by 23%.
5.1 Methodology
We perform data-driven simulations based on 430 million
Skype calls (§2.1). The calls are replayed in the same chrono-
logical order as in the trace thereby allowing VIA to gain
knowledge as it goes along (using newer call measurements).
We assume that when a call is assigned to certain relay op-
tion, its performance would be the same as that of a call
which is randomly sampled from the set of calls between the
same AS pair through the same relay option in the same 24-
hour window. Tomography-based performance prediction is
made based on call performance in the last 24-hour window.
For statistical conﬁdence, in each 24-hour window, we focus
on AS pairs where there are at least 10 calls on at least 5 re-
lay options 4. Also, the relaying options considered for a call
are only those with at least 10 call samples. To quantify the
conﬁdence in the results, we also add error bars (of standard
error of mean) to the graphs. Note that even with the aggre-
gation, we used distribution (e.g., mean, percentiles) of the
metrics and not per-call values for evaluation.
This section shows how much VIA can reduce PNRs (frac-
tion of calls having poor performance on the individual net-
work metrics or on the "at least one bad" metric), compared
with the oracle approach and a strawman, such as using the
default paths for all calls ("default strategy").
5.2 Improvement of VIA
PNR reduction: Figure 12a shows the PNR reduction of
VIA over default strategy (always using default paths), and
compares it with the PNR reduction of pure prediction-based
selection, based just on history (Strawman I), pure exploration-
based selection without any pruning of the options up front
(Strawman II), and oracle. Across all three performance
metrics, we see that VIA achieves close-to-oracle perfor-
mance and signiﬁcantly outperforms both the default strat-
4Otherwise, selecting relays from a handful of candidates
would be trivial. 32 million calls remain after these ﬁlters.
(a) International
(b) Domestic
Figure 13: VIA improvement on international and do-
mestic calls. We also have similar observation regarding
inter-domain and intra-domain calls.
egy and the two strawman approaches. The strawman ap-
proaches yield much less improvement, which conﬁrms the
inefﬁciency of the pure predictive and pure exploratory strate-
gies (§4.2).
Improvement on percentiles: Figure 12b shows the im-
provement over default strategy on different percentiles. We
ﬁrst calculate the percentiles of performance of each strategy
and calculate the improvement between these percentiles (which
avoids the bias of calculating improvement on each call). We
see that VIA has improved performance on both median (by
20% − 58%) and the extreme tail (by 20% − 57% on 90th
percentile), which shows VIA is able to improve the perfor-
mance of a wide spectrum of calls.
Transit vs. bouncing relay: Finally, we ﬁnd that also using
transit relaying (i.e., using inter-DC connection between the
ingress and egress relays as part of the path) usually results
in higher improvement on PNR than only using bouncing
relays (i.e., using one relay node to bounce off trafﬁc). On
AS pairs which have used both bouncing and transit relays,
we see 50% lower PNR when both transit and bouncing re-
lays are available than when transit relays are excluded. We
also ﬁnd that VIA sends about 54% calls to bouncing relays,
38% to transit relays, 8% to default paths, with a marginal
difference in the distribution across network metrics.
International vs. domestic: Figure 13 compares PNR of
international and domestic calls under strategies of default,
VIA and oracle.We see signiﬁcant improvement of VIA on
both international and domestic calls, while international calls
have a slightly higher magnitude of improvement than do-
mestic calls. This can be explained by the fact that relaying
has limited beneﬁts when the bottleneck is the last-mile ISP
or the last-hop connection.
Beneﬁts by countries: Figure 14 further dissects the im-
provement of VIA by countries (with one side of the interna-
tional call in that country) with worst (direct) PNR. It shows
that the worst countries have a much higher (direct) PNR
than the global PNR, shown by the horizontal red line, and
that the performance of VIA is closer to the oracle than to
the default for most of these countries.
5.3 VIA’s design choices
Prediction accuracy of relay-based tomography: As a
 0 20 40 60 80 100RTTLossJitterAt leastone badReduction of PNR (%)Strawman IStrawman IIVIAOracle 0 20 40 60 80 100RTTLossJitter% of reductionMedian90th%99th% 0 0.1 0.2 0.3 0.4 0.5 0.6RTTLossJitterAt leastone badPNRDirectVIAOracle 0 0.1 0.2 0.3 0.4 0.5 0.6RTTLossJitterAt leastone badPNRDirectVIAOracle(a) PNR of RTT
Figure 15: Comparing guided-exploration strategies.
(b) PNR of loss rate
(c) PNR of jitter
Figure 14: Dissecting VIA improvement on PNR by
country of one side. There is a substantial diversity on
VIA improvement across different countries.
ﬁrst step, VIA uses relay-based tomography (§4.4) to pre-
dict the performance each relaying option. We evaluated the
accuracy of tomography-based predictions on the different
metrics and found that on 71% of calls, the predicted perfor-
mance is within 20% from the actual performance. However,
for 14% of the calls, the error can be ≥ 50%. This non-
negligible prediction error explains the poor performance of
Strawman I (pure prediction-based) that we have seen in Fig-
ure 12a, and also motivates real-time exploration.
Beneﬁts of prediction-guided exploration: As discussed
in §4, VIA is not a simple combination of prediction and ex-
ploration approach. First, instead of picking a ﬁxed number
top candidates, VIA pick top candidates by taking variance
of prediction into account. Second, instead of using the orig-
inal UCB1 algorithm, which assumes a normal distribution
of rewards, we adopt a different way to normalize values
to cope with performance outliers. Figure 15 quantiﬁes the
incremental contribution of both modiﬁcations on PNR of
the three metrics. It shows that each modiﬁcation makes a
signiﬁcant contribution to VIA’s improvement. With the “at
least one bad” metric, picking top k and using the normal-
ized reward reduces PNR by 24% compared to 15% with just
the top 2 (loss rate PNR by 44% compared to 26%).
5.4 Practical relaying factors
Relaying budget: Being able to use relays judiciously within
a budget for relayed calls is an inherent requirement in the
context of managed overlay networks such as VIA. Here,
we deﬁne budget as the maximum fraction of calls being re-
Figure 16: Impact of budget constraint on VIA.
layed. We only impose an overall budget, not a per-relay
one. Figure 16 shows the impact of budget on PNR (of
at least one bad metric) of three strategies: oracle, budget-
unaware VIA and budget-aware VIA. The budget-unaware
VIA, which selects relays based on Algorithm 1, will relay
calls whenever there is potential beneﬁt of doing so, with-
out taking into consideration the overall budget of relaying.
Therefore, there is a risk of the budget getting used up by
calls with only small beneﬁt. In contrast, budget-aware VIA
(§4.6) relays a call only when the beneﬁt is larger than a
threshold, which depends on the actual budget. That means
calls with minimal beneﬁt will not be relayed, saving re-
sources for the calls that would beneﬁt the most by relay-
ing. From Figure 16, we see that the budget-aware VIA
(§4.6) can use budget much more efﬁciently than the budget-
unaware VIA. Also, budget-aware VIA can achieve about
half of the maximum beneﬁt (i.e., when budget is 100% of
calls) with a budget of 0.3 (i.e., only relying 30% of calls).
Relaying decision granularities: We show performance
improvement as a function of the spatial and temporal gran-
ularity at which VIA operates. First, to show the impact of
spatial granularity, Figure 17a ﬁxes the temporal granular-
ity to running stage (2) and (3) of VIA every 24 hours, i.e.,
T = 24 hours (Figure 10) and compares the PNR if different
relay options could be selected for calls in different spatial
granularities. For fair comparison, the PNR are calculated
based on the same set of calls.
We see two consistent trends. First, making decision at
granularities coarser than a per AS pair results in a smaller
reduction in PNR. For instance, different ISPs within a coun-
try have different peering relationships, and thus may have
different optimal relay options, but such opportunities will
not be exploited when making decision per country. Sec-
ond, making decisions on ﬁner granularities does not help
much, though for a different reason. At ﬁner granularities,
the coverage becomes much smaller, which make VIA un-
able to predict many potential relay options. In future work
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1PHPKLKINAESAUSEGQAJOPNR (RTT)Countries ranked by PNR of its international callsDirectVIAOracle 0 0.1 0.2 0.3 0.4 0.5 0.6EGJPSAPHKRPKJOINAEDZPNR (Loss rate)Countries ranked by PNR of its international callsDirectVIAOracle 0 0.1 0.2 0.3 0.4 0.5 0.6AEEGPHLKPKUSQASADZINPNR (Jitter)Countries ranked by PNR of its international callsDirectVIAOracle 0 20 40 60 80 100RTTLossJitterAt leastone badReduction of PNR (%)Top-2, original UCBTop-k, original UCBVIA (Top-k, modified UCB) 0.1 0.12 0.14 0.16 0.18 0 20 40 60 80 100PNR of at least onebad metricBudget (as % of total calls)OracleBudget-unaware VIABudget-aware VIA(a) Impact of spatial granularity
(b) Impact of temporal granularity
(c) Impact of relay deployment
Figure 17: Sensitivity analysis of VIA improvement. Figure 17a and 17b compares PNR under different control granu-
larities. Figure 17c shows PNR when some of the (least used) relays are excluded.
we hope to analyze a much larger data set In Figure 17b,
we see a similar pattern when comparing PNR of different
temporal granularities, i.e., different values of T (§4.3).
Relay usage: Figure 17c shows reduction of PNR when
a subset of (least used) relays is excluded. We see that the
contribution of beneﬁts from different relay nodes are highly
skewed. Removing 50% of the (least used) relays causes lit-
tle drop in VIA’s gains. This suggests that new relays should
be deployed carefully in future.
5.5 Real-world controlled deployment
We implemented and deployed a prototype containing the
relevant components of VIA at a small scale using modi-
ﬁed Skype clients and using Skype’s production relays. The
central controller of our prototype (Figure 7), deployed on
the public Microsoft Azure cloud, aggregated performance
measurements from instrumented Skype clients and imple-
mented the relay selection algorithm. The instrumented Skype
clients contacted the controller to decide which of the relays
of Skype, if any, to use for their calls. We deploy the instru-
mented client on 14 machines across Singapore, India, USA,
UK and Sri Lanka. Overall, we required minimal modiﬁca-
tions to the Skype client.
The controller also orchestrated each client to make calls
to the other clients. In total, it created around 1000 calls be-
tween 18 caller-callee pairs. Speciﬁcally, it instructed each
caller-callee pair to make (short) back-to-back calls using
9 − 20 different relaying options, 4 − 5 times each. Since
our testbed is at a small scale, such back-to-back calling
provides us with high density performance samples between
source-destination pairs through many different relays. We
use these samples to perform a controlled experiment on