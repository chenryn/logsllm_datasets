i∈I
which can be computed by B since it knows all terms in-
volved in above expression. All the other components in
can also be computed by B since they do not involve
SK Id(cid:63)
An+2. Finally, simulator B generates secret key for Id(cid:63) and
responds it to adversary A.
Challenge. Adversary A outputs two equal-length EHRs
EHR0, EHR1. Simulator B ignores them and selects ran-
dom element REn from GT . B also selects random elements
Q1, Q2, Q3 from Gq. B sends the challenge ciphertext to A
(Hdr, En) = (C1, C2, C3, REn) = (C xQ1, T3
zQ2, T3
yQ3, REn)
where T3 are given from challenge tuple (D3, T3). Observe
each component in the challenge ciphertext and we have
C1 = (Ab
2)xQ1 = GbQ(cid:48)
p · R3, then
1. If T3 = gb
n+2R(cid:48)
pR3)zQ2 = F bQ
pR3)yQ3 = (U H Id(cid:89)
(cid:48)
2
C2 = (gb
C3 = (gb
Ri
i
H
)bQ
(cid:48)
3
p(cid:101)R3 where r is random
integer chosen from ZN and (cid:101)R3 is a random element chosen
R← G, T3 can be written as gr
If T3
i∈I
from Gq. Then
p(cid:102)R3)zQ2 = F rQ
p(cid:102)R3)yQ3 = (U H Id(cid:89)
(cid:48)
2
C2 = (gr
C3 = (gr
Ri
i
H
)rQ
(cid:48)
3
i∈I
.
In this case, C2 and C3 share the same random r, while
C1 uses random b independent from r. Both b and r ﬁrst
appear in ciphertext from adversarial viewpoint and they
are uniformly and independently chosen from ZN . Hence,
C1 is a random element from the adversarial viewpoint and
(Hdr, En) is the ciphertext of Game4.
,
p
p
p , gan+1
,··· , ga2n+2
,
p·R3 or T4
2 where gai
i.e.
R← G.
Phase 2. Repeat Phase 1.
Guess. Adversary A outputs a guess.
if A decides
to output 0 (Game3 ), simulator B output T3 = gb
p · R3;
if A decides to output 1 (Game4), B output T3
If
A has the advantage (cid:48)
3 to distinguish Game3 and Game4,
B can solve the Decision cDH problem with the advantage
3 · (1 − p+q−1
(cid:48)
N )qs , which completes the proof of Lemma 3.
Indistinguishability between Game4 and Game5.
P roof of Lemma 4. Assume that there exists an adversary
A that can distinguish between Game4 and Game5 with
4. Then there is an simulator B that can solve
advantage (cid:48)
4 · (1−
the (n + 1)-cDHE problem with the same advantage (cid:48)
N )qs . The input of simulator B is the challenge tuple
p+q−1
(D4, T4) of the decision cDHE problem with
 (N, G, GT , e), gp, gq, ga
gan+2
p
· R1, gan+2·b
p
· R2, gan+3
p
p , ga2
p ,··· , gan
D4 ←
1
1 and C = Ab
R← G.
p , R(cid:48)
p , B = An+2·R(cid:48)
Simulator B needs to decide whether T4 = gb
n+2·R(cid:48)
Let Ai = gai
2 are deﬁned in D4 for 1 ≤ i ≤ 2n + 2.
and R(cid:48)
Init. Adversary A outputs an access policy P containing
roles for medical staﬀ that A may decide to be challenged.
Also, algorithm A outputs an identity Id for a patient that
it may decide to be challenged. We denote the challenge
roles as { (cid:126)Ri ∈ P}, the challenge atom roles as {Ri ∈ SP},
and I = {i : Ri ∈ SP}. A sends P and Id to simulator B.
Setup. To generate system parameter P K, simulator B re-
quests an instance of the Decision (n+1)-cDHE assumption.
B randomly chooses integers γ, x, y, z,{xi}i∈[1,n+1]
R← ZN ,
R← Gq. It
ω R← Gp and elements Rg, Rf , Ru, Rh,{Rhi}i∈[1,n]
n+1 ·Rh,
sets E = e(gx
{Hi = Axi
Ri ))Ru.
B gives P K = {gp, gq, G, F, U, H,{Hi}i∈[1,n], E} to A.
Phase 1. Adversary A can adaptively issue secret key query
for medical staﬀ with role (cid:126)R(cid:63) and secret key query for a
patient with identity Id(cid:63).
I. When A issues secret key query for a medical staﬀ with
role (cid:126)R(cid:63), we also have the restriction that (cid:126)R(cid:63) /∈ P ref (P).
This ensures (cid:126)R(cid:63) contains at least one atom role R(cid:63)
k ∈ S (cid:126)R(cid:63)
such that R(cid:63)
k /∈ S (cid:126)R, where k ≤ n. Let k be the small-
est index satisfying this condition. To response the query,
simulator B ﬁrst generates secret key for the medical staﬀ
with role (cid:126)R(cid:63)
k), from which B can then derive
p·Rg, F = Bz·Rf , H = Axn+1
n+1−iRh,i}i∈[1,n], U = (gy
p /(H Id ·(cid:81)
1,··· ,R(cid:63)
p , ω), G = gx
k = (R(cid:63)
i∈I
Hi
569(cid:111)
KeyDelegM algorithm for (cid:126)R(cid:63). Denote I (cid:63) = {i : R(cid:63)
}.
i ∈ S (cid:126)R(cid:63)
B randomly choose integers r1, r2 ∈ ZN to compute SK (cid:126)R =
, SK (cid:126)R(cid:63)
SK (cid:126)R(cid:63)
, where we posit ˆr1 = ak+1zr1 + r2, ˆr2 =
k −Rk)r1. We observe the ﬁrst component of SK (cid:126)R(cid:63)
−xk(R(cid:63)
,
)ˆr1 f ˆr2 . Since u, f and hi can be obtained by
h
d
r
k
removing blind factors from U, F and Hi respectively, it is
ω((gy
n+2. We focus
Axi·R(cid:63)
n+1−i)ˆr1 Az·ˆr2
AxiRi
n+1
i
on the exponent of gp in above expression and have
i
d
i∈I
i∈I(cid:63)
R(cid:63)
i
·(cid:81)
y − an+1xn+1Id−
n+1−i)· (cid:81)
(cid:88)
(cid:110)
ω(u (cid:81)
i∈I(cid:63)
p /Axn+1·Id
(cid:88)
(cid:88)
+ an+2z ·(cid:0)−xk(R(cid:63) − Rk)r1
(cid:88)
i∈I(cid:63)
y + an+1−kxk(R(cid:63)
y − (cid:88)
an+1−ixiRi +
yak+1z−
i∈I,i /∈I(cid:63)
i∈I,i /∈I(cid:63)
i∈I,i /∈I(cid:63)
i∈I
=
=
(cid:1)
an+1−ixiRi+
an+1−ixiR(cid:63)
i
k − Rk)−
an+1−ixiRi − an+1xn+1Id
 ˆr1 + an+2zˆr2
 · (ak+1zr1 + r2)
 z · r1+
 · r2
an+k+2−ixiRi − an+k+2xn+1Id
an+1−kxk(R(cid:63)
k − Rk) − an+1xn+1Id
All the terms in above expression are not associated with
An+2 and do not exceed A2n+2, so B can compute the ﬁrst
. Similarly, B can compute the rest
component of SK (cid:126)R(cid:63)
components in SK (cid:126)R(cid:63)
.
d
Next, B generates SK (cid:126)R(cid:63)
d
in a similar manner to generating
. The details of this procedure are highly similar to
, so they are skipped. B randomly choose
SK (cid:126)R(cid:63)
those of SK (cid:126)R(cid:63)
s1, s2, t1, t2 ∈ ZN and let
d
r
d
As u, gh, f can be obtained by removing Ru, Rh, Rf from
U, H, F respectively, the ﬁrst component can be rewritten
as ω((gy
)ˆr1 · Az ˆr(cid:48)
n+2.
n+1
2
n+1
i∈I
We focus on the exponent of gz
n+1−i) · Axn+1Id(cid:63)
AxiRi
p and get
·(cid:81)
p /Axn+1·Id
 y − an+1xn+1Id−
(cid:88)
= (y −(cid:88)
+ (y + an+1xn+1(Id(cid:63) − Id) −(cid:88)
an+1−ixiRi + an+1xn+1Id(cid:63)
an+1−ixiRi)az · r
i∈I
i∈I
(cid:48)
1
 ˆr1 + an+2z · ˆr
(cid:48)
2
an+1−ixiRi)r
(cid:48)
2
i∈I
All the terms in above expression are not associated with
An+2 and do not exceed A2n+2, so B can compute the ﬁrst
. Similarly, B can compute the rest
component of SK Id(cid:63)
.Finally, simulator B generates secret
components in SK Id(cid:63)
key for Id(cid:63) and responds it to adversary A.
Challenge. Adversary A outputs two equal-length EHRs
EHR0, EHR1. Simulator B ignores them and selects REn
from GT . B also selects R1 from G and random elements
Q1, Q2 from Gq. Then B sends the challenge ciphertext to
adversary A
(Hdr, En) = (R1, C2, C3, REn) = (R1, C zQ1, T4
yQ2, REn)
where T4 are given from challenge tuple (D4, T4). Observe
each component in the challenge ciphertext and we have
C2 = (Ab
n+2R
p · R3, then C3 = (gb
If T4 = gb
p(cid:101)R3 where r is random
integer chosen from ZN and (cid:101)R3 is a random element chosen
R← G, T4 can be written as gr
If T4
i∈I
H
2
(cid:48)
1
(cid:48)
2)zQ1 = F bQ
pR3)yQ2 = (U H Id(cid:81)
p(cid:102)R3)yQ2 = (U H Id(cid:81)
H
from Gq. Then C3 = (gr
Ri
i
)bQ(cid:48)
Ri
i
)rQ(cid:48)
2. In
i∈I
ˆs1 = ak+1zs1 + s2, ˆs2 = −xk(R(cid:63)
ˆt2 = −xk(R(cid:63)
ˆt1 = ak+1zt1 + t2,
k − Rk)s1
k − Rk)t1
ˆs1, ˆs2, ˆt1, ˆt2 must satisfy equation ˆs1 · ˆt2 − ˆs2 · ˆt1 (cid:54)= 0 mod
p and mod q with probability 1 − p+q−1
N . Therefore SK (cid:126)R(cid:63)
has the same distribution and structure as that of the actual
key distribution with probability 1 − p+q−1
N .
II.When A issues secret key query for a patient with identity
Id(cid:63), the restriction is that Id(cid:63) (cid:54)= Id. To response the query,
B randomly choose ˆr(cid:48)
1, ˆr(cid:48)
2 and
2 = −xn+1(Id(cid:63) − Id)r(cid:48)
ˆr(cid:48)
ω(ugId(cid:63)
2 ∈ ZN and let ˆr(cid:48)
1. Then it computes
2 ,{hˆr(cid:48)
h )ˆr(cid:48)
1 = azr(cid:48)
j }j∈[1,n]
1 + r(cid:48)
SK Id(cid:63)
2 , g ˆr(cid:48)
1 , g ˆr(cid:48)
1 f ˆr(cid:48)
(cid:17)
(cid:16)
=
1
this case, C2 uses random integer b, while C3 uses random
integer r which is independent from b. Both b and r ﬁrst
appear in ciphertext from adversarial viewpoint and they are
uniformly and independently chosen from ZN . Hence, C2
and C3 are random elements from the adversarial viewpoint
and (Hdr, En) is the ciphertext of Game5.
Phase 2. Repeat Phase 1.
Guess. Adversary A outputs a guess.
if A decides to
output 0 (Game4 ), simulator B output T4 = gb
p · R3; if A
decides to output 1 (Game5), B outputs T4
R← G. If A has
4 to distinguish Game4 and Game5, B can
the advantage (cid:48)
solve the Decision (n+1)-cDHE problem with the advantage
4 · (1 − p+q−1
(cid:48)
N )qs , which completes the proof of Lemma 4.
i.e.
570