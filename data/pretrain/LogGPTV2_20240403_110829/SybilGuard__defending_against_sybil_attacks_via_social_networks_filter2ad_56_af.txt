performs a short (3-hop in our experiments) random walk
ending at some node
then both perform random
routes to determine when the two routes intersect, which is used
as a sample. The sample taken is bad (i.e., potentially inﬂuenced
by the adversary) if any of the two routes or the short random
walk enters the sybil region. Our simulation shows that the prob-
ability of obtaining bad samples increases roughly linearly with
reaches 2500, the
the number of attack edges
fraction of bad samples is still below 20%. Since our estima-
tion uses the median of the samples, these 20% bad samples
. For the
will have only limited inﬂuence on the estimate for
ten-thousand-node graph and the hundred-node graph, the frac-
and
tion of bad samples is always below 20% when
. Even when
, respectively.
VII. RELATED WORK
The sybil attack [1] is a powerful threat faced by any decen-
tralized distributed system (such as a p2p system) that has no
central, trusted authority to vouch for a one-to-one correspon-
dence between users and identities. As mentioned in Section I,
the ﬁrst investigation [1] into sybil attacks already proved a se-
ries of negative results.
Bazzi and Konjevod [4] proposed using network coordinates
[5] to foil sybil attacks, and a similar idea has also been explored
for sensor networks [20]. The scheme relies on the assumption
that a malicious user can have only one network position, de-
ﬁned in terms of its minimum latency to a set of beacons. How-
ever, with network coordinates in a -dimensional space, an ad-
versary controlling more than malicious nodes at
different
network positions can fabricate an arbitrary number of network
coordinates, and thus break the defense in [4]. This is problem-
) in practice.
atic because
Moreover, a solution based on network coordinates fundamen-
tally can only bound the number of sybil groups and not the size
of the sybil groups.
is usually a small number (e.g.,
Danezis et al. [21] proposed a scheme for making DHT
lookups more resilient to sybil attacks. The scheme leverages
the bootstrap tree of the DHT, where two nodes share an edge if
one node introduced the other into the DHT. The insight is that
sybil nodes will attach to the rest of the tree only at a limited
number of nodes (or attack edges in our terminology). One can
imagine deﬁning a similar notion of equivalence groups here,
which correspond to subtrees. The scheme can then properly
bound the number of sybil groups. In comparison, SybilGuard
exploits the graph property in social networks instead of the
bootstrap tree. This helps SybilGuard to further bound the size
of sybil groups, which is not possible based on bootstrap trees.
As a result, even with a single attack edge, the effectiveness
of the scheme based on bootstrap tree deteriorates [21] as the
adversary creates more and more sybil nodes. Furthermore,
compromising even a single node in the bootstrap tree will
disconnect the tree, breaking the assumption of the scheme.
588
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 16, NO. 3, JUNE 2008
Sybil attacks in sensor networks. Sybil attacks have also
been studied for sensor networks [22]. The solutions there, such
as radio resource testing and random key predistribution, unfor-
tunately do not apply to distributed systems in the wide-area.
A sybil-related attack in sensor networks is the node replication
attack [23], where a single compromised sensor is replicated in-
deﬁnitely, by loading the node’s cryptographic information into
multiple generic sensor nodes. All these replicated nodes have
the same ID (e.g., they all have to use the same secret key issued
to the compromised sensor). The solution [23], which is based
on simple random walk intersection, does not extend to sybil at-
tacks because the sybil nodes do not necessarily share a single,
veriﬁable ID.
Sybil attacks have also been studied for sensor networks [22].
The solutions there, such as radio resource testing and random
key predistribution, unfortunately do not apply to distributed
systems in the wide-area. A sybil-related attack in sensor net-
works is the node replication attack [23], where a single com-
promised sensor is replicated indeﬁnitely, by loading the node’s
cryptographic information into multiple generic sensor nodes.
All these replicated nodes have the same ID (e.g., they all have
to use the same secret key issued to the compromised sensor).
The solution [23], which is based on simple random walk inter-
section, does not extend to sybil attacks because the sybil nodes
do not necessarily share a single, veriﬁable ID.
Sybil attacks in reputation systems. In a reputation system,
each user has a rating describing how well the user behaves. For
example, eBay ratings are based on users’ previous transactions
with other users. Sybil attacks can create a large number of sybil
nodes that collude to artiﬁcially increase a user’s rating. Known
defenses [24]–[26] against such attacks aim at preventing the
sybil nodes from boosting a malicious user’s rating (and at-
tracting buyers, in the case of eBay). All of the sybil nodes are
able to obtain the same rating/reputation as the malicious user.
Unlike SybilGuard, these defenses cannot and do not aim to con-
trol the number of sybil nodes.
In some other reputation systems such as Credence [27], users
cast votes regarding the validity of shared ﬁles. The votes are
then combined using a weighted average based on the ratings of
the user. Sybil nodes are able to dramatically inﬂuence the av-
erage (even when applying the techniques from [24]), and thus
Credence relies on a central authority to limit sybil nodes [27].
Trust networks. The social network in SybilGuard is one
kind of trust network. Many previous works [24], [25], [27]
use trust networks that are based on past successful transac-
tions or demonstrated shared interest between users. The trust
associated with our social network is much stronger, which is
essential to the effectiveness of SybilGuard. Such a strong-trust
social network is also leveraged by LOCKSS [28], where
the veriﬁer accepts all its direct social friends, as well as a
proportional number of other nodes. The total number of nodes
accepted (proportional to the degree of the veriﬁer) can be
orders of magnitude smaller than the system size. Because a
node can only accept and thus use a limited number of other
nodes in the system, LOCKSS is more suited for speciﬁc
application scenarios such as digital library maintenance. Ostra
[29] leverages strong-trust social networks to prevent the ad-
versary from sending excessive unwanted communication. In
comparison, SybilGuard’s functionality is more general: Since
SybilGuard already bounds the number of sybil nodes, it can
readily provide functionality equivalent to Ostra by allocating
each node a communication quota. Furthermore, different from
Ostra, SybilGuard has strong, provable end guarantees and has
a complete design that is decentralized.
Trust propagation or transitive trust is a common technique
for trust networks [24]–[27]. SybilGuard is more related to ex-
ploiting graph properties rather than trust propagation.
VIII. CONCLUSION
This paper presented SybilGuard, a novel decentralized pro-
tocol for limiting the corruptive inﬂuences of sybil attacks, by
bounding both the number and size of sybil groups. SybilGuard
relies on properties of the users’ underlying social network,
namely that (i) the honest region of the network is fast mixing,
and (ii) malicious users may create many nodes but relatively
few attack edges. In all our simulation experiments with one
million nodes, SybilGuard ensured that (i) the number and size
of sybil groups are properly bounded for 99.8% of the honest
users, and (ii) an honest node can accept, and be accepted by,
99.8% of all other honest nodes.
The current SybilGuard design relies on the fast mixing prop-
erty of social networks. If the social network is not fast mixing,
SybilGuard will still properly bound the number of accepted
(with high probability). The main draw-
sybil nodes within
back of a slower mixing social network is that more honest
nodes will be (mistakenly) rejected. Although this paper al-
ready referred to several independent results conﬁrming the fast
mixing property based on social network models, our follow-on
work [7] provides further assurance through an experimental
study based on real and large-scale social networks. That work
also presents a revised protocol that reduces the number of sybil
.
nodes accepted per attack edge from
Other future work includes deploying SybilGuard in real ap-
plications. Important issues include how to bootstrap the social
network (can we leverage an existing social network, can we
make it easy to join the social network, etc.) and what appli-
cations can best beneﬁt from SybilGuard’s fully decentralized
approach.
to
ACKNOWLEDGMENT
The authors thank D. Andersen, T. Anderson, M. Freedman,
P. Maniatis, A. Perrig, S. Seshan, and the anonymous SIG-
COMM’06 and ToN reviewers for many helpful comments on
the paper.
REFERENCES
[1] J. R. Douceur, “The sybil attack,” in Proc. 1st Int. Workshop on Peer-to-
Peer Systems (IPTPS), Cambridge, MA, Mar. 2002, 6 pp.
[2] A. Ramachandran and N. Feamster, “Understanding the network-level
behavior of spammers,” in Proc. ACM SIGCOMM 2006, Pisa, Italy,
Sep. 2006, pp. 291–302.
[3] L. von Ahn, M. Blum, N. J. Hopper, and J. Langford, “CAPTCHA:
Using hard AI problems for security,” in Proc. Eurocrypt 2003,
Warsaw, Poland, May 2003, pp. 294–311.
[4] R. Bazzi and G. Konjevod, “On the establishment of distinct iden-
tities in overlay networks,” in Proc. 24th ACM Symp. Principles of
Distributed Computing (PODC 2005), Las Vegas, NV, Jul. 2005, pp.
312–320.
YU et al.: SYBILGUARD: DEFENDING AGAINST SYBIL ATTACKS VIA SOCIAL NETWORKS
589
[5] T. S. E. Ng and H. Zhang, “Predicting Internet network distance with
coordinates-based approaches,” in Proc. IEEE INFOCOM 2002, New
York, NY, Jun. 2002, pp. 170–179.
[6] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, “SybilGuard:
Defending against sybil attacks via social networks,” in Proc. ACM
SIGCOMM 2006, Pisa, Italy, Sep. 2006, pp. 267–278.
[7] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao, “SybilLimit: A near-
optimal social network defense against sybil attacks,” in Proc. 2008
IEEE Symp. Security and Privacy, Oakland, CA, May 2008, pp. 3–17.
[8] I. Stoica, R. Morris, D. Karger, F. Kaashoek, and H. Balakrishnan,
“Chord: A scalable peer-to-peer lookup service for Internet applica-
tions,” in Proc. ACM SIGCOMM 2001, San Diego, CA, Aug. 2001,
pp. 149–160.
[9] M. Mitzenmacher and E. Upfal, Probability and Computing. Cam-
bridge, U.K.: Cambridge Univ. Press, 2005.
[10] S. Boyd, A. Ghosh, B. Prabhakar, and D. Shah, “Gossip algorithms:
Design, analysis and applications,” in Proc. IEEE INFOCOM 2005,
Miami, FL, Mar. 2005, pp. 1653–1664.
[11] A. Flaxman, “Expansion and lack thereof
in randomly per-
turbed graphs,” Microsoft Research, Redmond, WA, Tech. Rep.
MSR-TR-2006-118, Aug. 2006 [Online]. Available:
ftp://ftp.re-
search.microsoft.com/pub/tr/TR-2006-118.pdf
[12] I. Abraham and D. Malkhi, “Probabilistic quorums for dynamic sys-
tems,” in Proc. DISC 2003, Sorrento, Italy, Oct. 2003, pp. 60–74.
[13] R. Morselli, B. Bhattacharjee, A. Srinivasan, and M. Marsh, “Efﬁcient
lookup on unstructured topologies,” in Proc. 24th ACM Symp. Prin-
ciples of Distributed Computing (PODC 2005), Las Vegas, NV, Jul.
2005, pp. 77–86.
[14] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, “SybilGuard:
Defending against sybil attacks via social networks,” Intel Research
Pittsburgh, Pittsburgh, PA, Tech. Rep. IRP-TR-06-01, Jun. 2006 [On-
line]. Available: http://www.comp.nus.edu.sg/~yuhf/sybilguard-tr.pdf
[15] W. J. Bolosky, J. R. Douceur, D. Ely, and M. Theimer, “Feasibility of a
serverless distributed ﬁle system deployed on an existing set of desktop
PCs,” in Proc. ACM SIGMETRICS 2000, Santa Clara, CA, Jun. 2000,
pp. 34–43.
[16] International Network for Social Network Analysis. 2006 [Online].
Available: http://www.insna.org/INSNA/data_inf.htm
[17] Center for Computational Analysis of Social and Organizational Sys-
tems (CASOS). 2006 [Online]. Available: http://www.casos.cs.cmu.
edu/computational_tools/data.php
[18] J. Kleinberg, “The small-world phenomenon: An algorithm perspec-
tive,” in Proc. ACM Symp. Theory of Computing (STOC 2000), Port-
land, OR, May 2000, pp. 163–170.
[19] D. J. Watts and S. H. Strogatz, “Collective dynamics of “small-world”
networks,” Nature, vol. 393, no. 6684, 1998.
[20] N. Sastry, U. Shankar, and D. Wagner, “Secure veriﬁcation of location
claims,” in Proc. ACM Workshop on Wireless Security (WiSE’03), San
Diego, CA, Sep. 2003, 10 pp.
[21] G. Danezis, C. Lesniewski-Laas, M. F. Kaashoek, and R. Anderson,
“Sybil-resistant DHT routing,” in Proc. European Symp. Research
in Computer Security (ESORICS 2005), Milan, Italy, Sep. 2005, pp.
305–318.
[22] J. Newsome, E. Shi, D. Song, and A. Perrig, “The Sybil attack in sensor
networks: Analysis & defenses,” in Proc. 3rd Int. Symp. Information
Processing in Sensor Networks (IPSN 2004), Berkeley, CA, Apr. 2004,
pp. 259–268.
[23] B. Parno, A. Perrig, and V. Gligor, “Distributed detection of node repli-
cation attacks in sensor networks,” in Proc. IEEE Symp. Security and
Privacy, Oakland, CA, May 2005, pp. 49–63.
[24] A. Cheng and E. Friedman, “Sybilproof reputation mechanisms,” in
Proc. 3rd ACM SIGCOMM Workshop on Economics of Peer-to-Peer
Systems (P2PECON-05), Philadelphia, PA, Aug. 2005, pp. 128–132.
[25] M. Feldman, K. Lai, I. Stoica, and J. Chuang, “Robust incentive tech-
niques for peer-to-peer networks,” in Proc. ACM Electronic Commerce
(EC’04), New York, NY, May 2004, 10 pp.
[26] M. Richardson, R. Agrawal, and P. Domingos, “Trust management for
the semantic web,” in Proc. 2nd Int. Semantic Web Conf. (ISWC2003),
Sanibel Island, FL, Oct. 2003, pp. 351–368.
[27] K. Walsh and E. G. Sirer, “Experience with an object reputation system
for peer-to-peer ﬁlesharing,” in Proc. 3rd USENIX Symp. Networked
Systems Design and Implementation (NSDI 2006), San Jose, CA, May
2006, pp. 1–14.
[28] P. Maniatis, M. Roussopoulos, T. Giuli, D. S. H. Rosenthal, and M.
Baker, “The LOCKSS peer-to-peer digital preservation system,” ACM
Trans. Comput. Syst. (TOCS),, vol. 23, no. 1, pp. 2–50, 2005.
[29] A. Mislove, A. Post, K. Gummadi, and P. Druschel, “Ostra: Lever-
aging trust to thwart unwanted communication,” in Proc. 5th USENIX
Symp. Networked Systems Design and Implementation (NSDI 2008),
San Francisco, CA, Apr. 2008, pp. 15–30.
Haifeng Yu received the B.E. degree from Shanghai
Jiaotong University, China, in 1997, and the M.S. and
Ph.D. degrees from Duke University, Durham, NC, in
1999 and 2002, respectively.
He is currently an Assistant Professor in the De-
partment of Computer Science, National University
of Singapore (NUS). Prior to joining NUS, he was a
Researcher at Intel Research Pittsburgh and an Ad-
junct Assistant Professor in the Department of Com-
puter Science, Carnegie Mellon University. His re-
search interests cover the general area of distributed
systems, as well as related ﬁelds such as fault tolerance, large-scale peer-to-peer
systems, distributed computing, and security. More information about his re-
search is available at http://www.comp.nus.edu.sg/yuhf.
Michael Kaminsky received the B.S. degree from
the University of California at Berkeley, and the S.M.
and Ph.D. degrees from the Massachusetts Institute of
Technology, Cambridge, MA.
He is currently a Research Scientist at Intel Re-
search Pittsburgh and an Adjunct Research Scientist
at Carnegie Mellon University, Pittsburgh, PA. He
is generally interested in computer science systems
research, including distributed systems, networking,
operating systems and network/systems security.
Dr. Kaminsky has been a member of the ACM
since 2004. More information about his research is available at http://www.pitts-
burgh.intel-research.net/people/kaminsky/.
Phillip B. Gibbons (M’89) received the B.A. degree
in mathematics from Dartmouth College in 1983 and
the Ph.D. degree in computer science from the Uni-
versity of California at Berkeley in 1989.
He is currently a Principal Research Scientist
at Intel Research Pittsburgh. He joined Intel after
11 years at (AT&T and Lucent) Bell Laboratories.
His research interests include parallel computing,
databases, and sensor systems, with over 100
publications.
Dr. Gibbons has served as an Associate Editor for
the Journal of the ACM, the IEEE TRANSACTIONS ON COMPUTERS, and the IEEE
TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS. He has served on
over 35 conference program committees, including serving as program chair/co-
chair/vice-chair for the SPAA, SenSys, IPSN, DCOSS, and ICDE conferences.
He has been an ACM Fellow since 2006. More information about his research
is available at http://www.pittsburgh.intel-research.net/people/gibbons/.
Abraham D. Flaxman received the B.S. degree
from the Massachusetts Institute of Technology,
Cambridge, MA, and the Ph.D. degree from Carnegie
Mellon University, Pittsburgh, PA.
He is currently a postdoctoral researcher with the
Microsoft Research Theory Group, Redmond, WA.
He is interested in measurement, modeling, algo-
rithms, and decision making for complex networks.
Dr. Flaxman has been a member of the ACM since
2006.