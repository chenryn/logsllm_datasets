User: 如何使用Python中的socket编程实现简单的网络通信？
Assistant: 以下是一个简单的例子，演示了如何使用Python中的socket编程实现基本的网络通信：

服务器端代码：

```python
import socket

HOST = '127.0.0.1'
PORT = 8888

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(1)

print('Waiting for connection...')
conn, addr = s.accept()
print('Connected by', addr)

while True:
    data = conn.recv(1024)
    if not data:
        break
    conn.sendall(data)

conn.close()
```

客户端代码：

```python
import socket

HOST = '127.0.0.1'
PORT = 8888

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

while True:
    message = input("Enter message to send: ")
    s.sendall(message.encode())
    data = s.recv(1024)
    print('Received', repr(data.decode()))

s.close()
```

在这个例子中，我们创建了一个TCP socket，并绑定到本地IP地址和端口8888。服务器等待客户端连接，一旦连接建立，就打印出客户端的地址和端口号，并开始接收和发送数据。客户端连接到服务器的IP地址和端口号，一旦连接建立，发送用户输入的消息，并等待服务器回复。当客户端关闭时，连接终止。

该例子只是一个简单的示例，演示了如何使用Python中的socket编程建立网络通信。实际应用中，您需要根据您的具体需求编写更完整的代码。