### Issue Report

**Bug Report?**  
- No

**Feature Request?**  
- Yes

**BC Break Report?**  
- No

**RFC?**  
- No

**Symfony Version**  
- Any

### Real Case Scenario
I want to pass an extra parameter to a route (as described in the documentation), and the value of this parameter is an object. A common example would be a `Uuid` object (e.g., from the Ramsey\Uuid library).

### Problem
PHP does not automatically cast objects to strings, which can cause issues when passing objects as route parameters. This is a known limitation, as documented in a related PHP bug report.

In a typical plain PHP context, you can easily cast an object to a string. However, in a Symfony context, this is more challenging and often requires workarounds that are less elegant.

### Example of Non-Working Code
```twig
{# generated URL has no query string #}
<a href="{{ path('my_route', {'foo': uuidObject}) }}">my link</a>
```

### Example of Working Code with Ugly Workaround
```twig
{# generated URL has the expected query string, e.g., ?foo=7ecff38e-4145-11e8-80b9-0242ac140004 #}
<a href="{{ path('my_route', {'foo': uuidObject->toString()}) }}">my link</a>
```

### Proposal
To address this issue, I propose that inside the `doGenerate` method of the `UrlGenerator` class, Symfony should cast all parameters to strings before passing them to `http_build_query`. This would ensure that objects, such as `Uuid`, are properly converted to their string representations, making the code cleaner and more intuitive.

This change would improve the developer experience by reducing the need for manual casting and workarounds, while maintaining the expected behavior of route generation.