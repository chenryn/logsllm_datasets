在这个技术下, 实际上的二进制数据被传输通过这个电缆, 不是作为一个序列的逻辑 1 或 0 来发送的 (NRZ). 与 NRZ 相反, 这些位被转换为一个稍微不同的格式, 它通过使用直接的二进制编码.
曼彻斯特编码还被用于局域网传输.
- 优点
    与 NRZ 相比,曼彻斯特编码提供一种同步机制,保证发送端与接收端信号同步.
- 缺点
    曼彻斯特编码的频率要比NRZ高一倍,传输等量数据所需的带宽大一倍
曼彻斯特编码表示0或1有两种不同的方法：
第一种G. E. Thomas, Andrew S. Tanenbaum1949年提出的，它规定0是由低-高的电平跳变表示，1是高-低的电平跳变。按此规则有：
* 编码0101（即0x5），表示原数据为00；
* 编码1001（0x9）表示10；
* 编码0110（0x6）表示01；
* 编码1010（0xA）表示11。
第二种IEEE 802.4（令牌总线）和低速版的IEEE 802.3（以太网）中规定, 按照这样的说法, 低-高电平跳变表示1, 高-低的电平跳变表示0。
* 编码0101（0x5）表示11；
* 编码1001（0x9）表示01；
* 编码0110（0x6）表示10；
* 编码1010（0xA）表示00；
![](../../../assets/img/Security/Crypto/Crypto/曼彻斯特编码.png)
(根据802.3中规定编码方式)从接收的编码位中提取原始数据:
原始数据时钟曼彻斯特值0=0XOR ⊕01110110
总结:
- 每个比特发送时间恒定("周期").
- 0用低至高转换表示,1用高到低转换表示(根据G.E. Thomas方式—IEEE 802.3方式与之相反).
- 表示0或1的转换出现在周期的中点.
- 周期开始的转换不表示数据.
**相关文章**
- [曼彻斯特编码](https://zh.wikipedia.org/wiki/%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E7%BC%96%E7%A0%81)
- [crypto 曼彻斯特编码](https://blog.csdn.net/Yu_csdnstory/article/details/102975604)
- [crypto之曼彻斯特编码](https://mp.weixin.qq.com/s/wSDmE5JjSSwQtAuzf8sypA)
**在线工具**
- https://eleif.net/manchester.html
---
### 图片码
条形码或称条码（barcode）是将宽度不等的多个黑条和空白，按照一定的编码规则排列，用以表达一组信息的图形标识符。常见的条形码是由反射率相差很大的黑条（简称条）和白条（简称空）排成的平行线图案。条形码可以标出物品的生产国、制造厂家、商品名称、生产日期、图书分类号、邮件起止地点、类别、日期等信息，因而在商品流通、图书管理、邮政管理、银行系统等许多领域都得到了广泛的应用。
要将按照一定规则编译出来的条形码转换成有意义的信息，需要经历扫描和译码两个过程。物体的颜色是由其反射光的类型决定的，白色物体能反射各种波长的可见光，黑色物体则吸收各种波长的可见光，所以当条形码扫描器光源发出的光在条形码上反射后，反射光照射到条码扫描器内部的光电转换器上，光电转换器根据强弱不同的反射光信号，转换成相应的电信号。根据原理的差异，扫描器可以分为光笔、CCD、激光三种。电信号输出到条码扫描器的放大电路增强信号之后，再送到整形电路将模拟信号转换成数字信号。白条、黑条的宽度不同，相应的电信号持续时间长短也不同。然后译码器通过测量脉冲数字电信号0、1的数目来判别条和空的数目，通过测量0、1信号持续的时间来判别条和空的宽度。此时所得到的数据仍然是杂乱无章的，要知道条形码所包含的信息，则需根据对应的编码规则（例如：EAN-8码），将条形符号换成相应的数字、字符信息。最后，由计算机系统进行数据处理与管理，物品的详细信息便被识别了。
#### 线性条形码
第一代，“一维”的条码是由线条和空间的各种宽度，创建特定的模式。
**相关工具**
- [免费在线条码生成器](https://barcode.tec-it.com/zh)
- http://tiaoxingma.wiicha.com/
---
#### 二维码
**在线制作/识别二维码工具**
- http://tool.chinaz.com/qrcode/
- http://jiema.wwei.cn/
- https://cli.im/
- https://www.beaconstac.com/qr-code-generator
**二维码分析与恢复工具包**
- [Merricx/qrazybox](https://github.com/Merricx/qrazybox)
    - 在线使用 : https://merricx.github.io/qrazybox/
##### PDF147
PDF417条码是二维码的一种。由台湾赴美王寅君（Wang, Ynjiun P.）博士于1992年底在美国符号科技公司（Symbol Technologies, Inc.）发明。现收录入ISO 15438国际标准。
PDF417条码是一种高密度、高信息含量的便携式数据文件，是实现证件及卡片等大容量、高可靠性信息自动存储、携带并可用机器自动识读的理想手段。可以用传统的线性扫码器（linear scanner）识别；而二维码需要图像传感器成像才能识别。
PDF417编码 由3到90行组成，每一行都类似于小的线性编码，并有如下内容：
- 分割区：这个区域包含了编码开始前的空格
- [起始标识]PDF417起始识别编码
- [数据左标]本行的设定信息（如行号，纠错等级）
- [数据]1到30个数据码字：码字是一组代表一个或多个字符的小黑条和空格
- [数据右标]包含本行的其他信息
- [结束标识]
- 分割区（quiet zone）：在条码上下左右都要有空白区域。
每行都是同样的宽度，每行都有同样数量的码字。每个PDF417的码字（code word）的长度都为17个单位，包含了长度不等的4个黑色区域（bar）与4个白色区域（space），单个区域的长度不得超过6个单位。故得名417。标准规定，宽度单位的下限为0.0075英寸（约0.191毫米）。每个码字基于929编码，即码值为0-928。每个码字以bar开始，以space结束。有三套不同的码字编码，称作clusters，分别标记为0，3，6。各行依次采用一套cluster，依次循环，即：第1行使用cluster 0， 第2行使用cluster 3， 第3行使用cluster 6， 第4行又使用cluster 0，依次类推。
**在线工具**
- [ZXing Decoder Online](https://zxing.org/w/decode.jspx)
- [Free Online Barcode Generator](https://www.barcodesinc.com/generator/index.php?redirect=welcome-raco-customers)
---
##### 汉信码
汉信码是一种矩阵式二维条码。从形状上，它呈正方向、有深色和浅色数据模块分布其间。汉信码的研发始于2003年，并于2005年年末完成。
**在线识别汉信码工具**
- http://www.efittech.com/hxdec.html
---
## 哈希&摘要&散列
Hash，一般翻译做散列、杂凑，或音译为哈希，是把任意长度的输入（又叫做预映射pre-image）通过散列算法变换成固定长度的输出，该输出就是散列值。这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来确定唯一的输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。
将数据（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。
### BCrypt
Bcrypt 是一种跨平台的文件加密工具。Bcrypt 使用的是布鲁斯 · 施内尔在 1993 年发布的 Blowfish 加密算法。由它加密的文件可在所有支持的操作系统和处理器上进行转移。它的口令必须是 8 至 56 个字符，并将在内部被转化为 448 位的密钥。
Bcrypt 就是一款加密工具，可以比较方便地实现数据的加密工作。你也可以简单理解为它内部自己实现了随机加盐处理。使用 Bcrypt，每次加密后的密文是不一样的。
对一个密码，Bcrypt 每次生成的 hash 都不一样，那么它是如何进行校验的？
虽然对同一个密码，每次生成的 hash 不一样，但是 hash 中包含了 salt（hash 产生过程：先随机生成 salt，salt 跟 password 进行 hash）；
在下次校验时，从 hash 中取出 salt，salt 跟 password 进行 hash；得到的结果跟保存在 DB 中的 hash 进行比对。
BCrypt 算法将 salt 随机并混入最终加密后的密码，验证时也无需单独提供之前的 salt，从而无需单独处理 salt 问题。
加密后的格式一般为：
```
$2a$10$/bTVvqqlH9UiE0ZJZ7N2Me3RIgUCdgMheyTgV0B4cMCSokPa.6oCa
其中：$ 是分割符，无意义；2a 是 bcrypt 加密版本号；10 是 cost 的值；而后的前 22 位是 salt 值；再然后的字符串就是密码的密文了。
```
**相关文章**
- [算法高级（22）-BCrypt加密算法，号称目前最安全的算法之一](https://blog.csdn.net/m0_37609579/article/details/100785947)
**在线工具**
- https://bcrypt-generator.com/
### MD5
MD5消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。MD5由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）设计，于1992年公开，用以取代MD4算法。这套算法的程序在 RFC 1321 中被加以规范。
一般128位的MD5散列被表示为32位十六进制数字。以下是一个43位长的仅ASCII字母列的MD5散列：
```
MD5("The quick brown fox jumps over the lazy dog")= 9e107d9d372bb6826bd81d3542a419d6
```
即使在原文中作一个小变化（比如用 c 取代 d）其散列也会发生巨大的变化：
```
MD5("The quick brown fox jumps over the lazy cog")= 1055d3e698d289f2af8663725127bd4b
```
空文的散列为：
```
MD5("")= d41d8cd98f00b204e9800998ecf8427e
```
**相关文章**
- [MD5](https://zh.wikipedia.org/wiki/MD5#cite_note-1)
- [md5(unix)原理分析](https://www.leavesongs.com/PENETRATION/about-hash-password.html)
- [一个文件变出六种格式？它比"格式工厂"厉害多了](https://www.pingwest.com/a/185806)
- [MD5碰撞的一些例子](https://www.jianshu.com/p/c9089fd5b1ba)
**在线工具**
- https://md5.navisec.it/
- https://www.somd5.com/
- https://www.somd5.com/batch.html
- https://www.md5online.org/
- http://md5.tellyou.top/
- http://www.cmd5.com/
- http://hashcrack.com/
- https://md5.gromweb.com/
- http://tool.chinaz.com/Tools/MD5.aspx
- https://cmd5.la/
- http://pmd5.com/
- http://www.ttmd5.com/
- http://www.xmd5.org/
- https://crackstation.net/
- http://www.md5this.com/index.php
- https://md5online.org/
- http://md5.my-addr.com/md5_decrypt-md5_cracker_online/md5_decoder_tool.php
- https://md5.la/
- https://md5.cc/
- https://pmd5.com/
**相关工具**
```
md5sum xxx.txt
```
#### hash 碰撞
**fastcoll**
下载地址
- http://www.win.tue.nl/hashclash/fastcoll_v1.0.0.5.exe.zip
创建一个文本文件，写入任意的文件内容，命名为 test.txt（源文件）
运行 fastcoll 输出以下参数。-p 是源文件，-o 是输出文件
```
fastcoll_v1.0.0.5.exe -p test.txt -o 1.txt 2.txt
```
对生成的 1.txt 和 2.txt 文件进行测试
```php
";
echo  'url编码 '. urlencode(readmyfile("1.txt"));
echo "";
echo '二进制md5加密 '.md5( (readmyfile("2.txt")));
echo "";
echo  'url编码 '.  urlencode(readmyfile("2.txt"));
echo "";
```
```
二进制md5加密 b8c21b7bfde6adea3a438f22e6672789
url编码 test%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00F%D5%E6R%C99%14%F3%95p%D0f%C9%17%90%1D%2C%27%5Bn_%F2%16%DAV%FA9%7Dj%0C%09%E5%BF%C3%C9%E0%DC%E58K%8B%10%EA%A2%EF_%BC%60%27%B2%A1%D9_%FF%E6%B78%8C%9F%5Ck6%EF%89N%D1%013%19%03%BAb%BB%9F.%9B%E7%7CPd%23%A3%C8S8%1C%02%D9%09%B3%107%2B%60%88%D7%D7%F3pD%AFBL%F4y%3CH%9B%94%9C%F6%3E%60u%D2%9Cf%1F%3B%EF%B3M%C6%88%ABS%19%2C
二进制md5加密 b8c21b7bfde6adea3a438f22e6672789
url编码 test%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00F%D5%E6R%C99%14%F3%95p%D0f%C9%17%90%1D%2C%27%5B%EE_%F2%16%DAV%FA9%7Dj%0C%09%E5%BF%C3%C9%E0%DC%E58K%8B%10%EA%A2%EF%DF%BC%60%27%B2%A1%D9_%FF%E6%B78%8C%9F%DCk6%EF%89N%D1%013%19%03%BAb%BB%9F.%9B%E7%7CPd%23%A3%C8%D38%1C%02%D9%09%B3%107%2B%60%88%D7%D7%F3pD%AFBL%F4y%3CH%9B%94%1C%F6%3E%60u%D2%9Cf%1F%3B%EF%B3M%C6%08%ABS%19%2C
```
可以看到，1.txt 和 2.txt 文件二进制 md5 加密后的结果完全相同。
**monomorph**
- https://github.com/DavidBuchanan314/monomorph
    ```bash
    git clone https://github.com/DavidBuchanan314/monomorph.git
    cd monomorph
    python3 monomorph.py bin/monomorph.linux.x86-64.benign bin/monomorph.linux.x86-64.meterpreter sample_payloads/bin/linux.x64.meterpreter.bind_tcp.bin
    ```