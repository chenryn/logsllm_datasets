# []{#assembly_getting-started-with-managing-user-accounts_configuring-basic-system-settings.html#proc_managing-accounts-and-groups-using-command-line-tools_assembly_getting-started-with-managing-user-accounts}使用命令行工具管理帐户和组 {.title}
:::
这部分论述了管理用户帐户和组群的基本命令行工具。
::: itemizedlist
-   显示用户和组群 ID:
    ``` screen
    $ id
    uid=1000(example.user) gid=1000(example.user) groups=1000(example.user),10(wheel) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
    ```
-   要创建新用户帐户，请执行以下操作：
    ``` screen
    # useradd example.user
    ```
-   为 [*example.user*]{.emphasis} 所属用户帐户分配新密码：
    ``` screen
    # passwd example.user
    ```
-   将用户添加到组中：
    ``` screen
    # usermod -a -G example.group example.user
    ```
:::
::: itemizedlist
**其它资源**
-   `man useradd(8)`{.literal}、`man passwd(1)和`{.literal}
    `man usermod(8)`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-managing-user-accounts_configuring-basic-system-settings.html#system-user-accounts-managed-in-the-web-console_assembly_getting-started-with-managing-user-accounts}Web 控制台中管理的系统用户帐户 {.title}
:::
您可在 RHEL web 控制台中显示用户帐户：
::: itemizedlist
-   在访问系统时验证用户。
-   设置系统的访问权限。
:::
RHEL web 控制台显示系统中的所有用户帐户。因此，在首次登录 web
控制台后，至少可以看到一个可用的用户帐户。
登录到 RHEL web 控制台后，您可以执行以下操作：
::: itemizedlist
-   创建新用户帐户。
-   更改其参数。
-   锁定帐户。
-   终止用户会话。
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-managing-user-accounts_configuring-basic-system-settings.html#adding-new-accounts-using-the-web-console_assembly_getting-started-with-managing-user-accounts}使用 Web 控制台添加新帐户 {.title}
:::
使用以下步骤将用户帐户添加到系统，并通过 RHEL web
控制台为帐户设置管理权限。
::: itemizedlist
**先决条件**
-   必须安装并可以访问 RHEL web 控制台。详情请参阅 [安装和启用 Web
    控制台](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_systems_using_the_rhel_8_web_console/getting-started-with-the-rhel-8-web-console_system-management-using-the-rhel-8-web-console#installing-the-web-console_getting-started-with-the-rhel-8-web-console){.link}。
:::
::: orderedlist
**流程**
1.  登录到 RHEL web 控制台。
2.  点 [Account]{.guibutton}。
3.  点 [Create New Account]{.guibutton}。
:::
::: orderedlist
1.  在 [**Full Name**]{.strong} 字段中输入用户全名。
    RHEL web 控制台会自动在全名中推荐用户名并在 [**User Name**]{.strong}
    字段中填充该用户名。如果您不想使用原始命名规则（由名的第一个字母和完整的姓组成），对它进行更新。
2.  在 [**Password/Confirm**]{.strong}
    字段中输入密码并重新输入该密码以便验证您的密码是否正确。
    下面的颜色栏显示您输入密码的安全等级，这不允许您创建带弱密码的用户。
:::
::: orderedlist
1.  点 [Create]{.guibutton} 保存设置并关闭对话框。
2.  选择新创建的帐户。
3.  在 [**Roles**]{.strong} 项中选择 [**Server
    Administrator**]{.strong}。
    [![cockpit terminate session
    pf4](images/cockpit-terminate-session-pf4.png)]{.inlinemediaobject}
    现在您可以在 [**Accounts**]{.strong}
    设置中看到新帐户，您可以使用凭证连接到该系统。
:::
:::
:::
[]{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings}第 8 章 转储崩溃的内核以便稍后进行分析 {.title}
:::
要分析系统崩溃的原因，可以使用 `kdump`{.literal}
服务保存系统内存内容，以便稍后进行分析。本节概述了 `kdump`{.literal}
以及使用 RHEL web 控制台或使用对应的 RHEL 系统角色配置 `kdump`{.literal}
的信息。
::: section
::: titlepage
# []{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html#what-is-kdump_assembly_dumping-a-crashed-kernel-for-later-analysis}kdump {.title}
:::
`kdump`{.literal}
是提供崩溃转储机制的服务。服务允许您保存系统内存内容，以便稍后进行分析。`kdump`{.literal}
使用 `kexec`{.literal} 系统调用在不重启的情况下引导至第二个
[*内核（捕获内核*]{.emphasis}），然后捕获崩溃内核的内存（
[*崩溃转储*]{.emphasis} 或
[*vmcore*]{.emphasis}）的内容并将其保存。这个第二个内核位于系统内存保留的一部分。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
内核崩溃转储可能会是系统失败时唯一可用的信息（关键错误）。因此，在关键任务环境中确保
`kdump`{.literal}
操作正常运行非常重要。红帽建议系统管理员在正常内核更新周期内定期更新和测试
`kexec-tools`{.literal}。这在部署了新内核功能时尤为重要。
:::
:::
::: section
::: titlepage
# []{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html#configuring-kdump-memory-usage-and-target-location-in-web-console_assembly_dumping-a-crashed-kernel-for-later-analysis}在 web 控制台中配置 kdump 内存用量和目标位置 {.title}
:::
下面的步骤显示如何使用 RHEL web 控制台界面中的内核 `转储`{.literal}
标签页中配置为 `kdump`{.literal}
内核保留的内存量。此流程还描述了如何指定 `vmcore`{.literal}
转储文件的目标位置以及如何测试您的配置。
::: orderedlist
**流程**
1.  打开 `Kernel Dump`{.literal} 标签页，启动 `kdump`{.literal} 服务。
2.  使用命令行配置 `kdump`{.literal} 内存用量。
3.  点 `Crash dump location`{.literal} 选项旁的链接。
    ::: informalfigure
    ::: mediaobject
    ![Web 控制台初始界面](images/web_console_initial_screen.png)
    :::
    :::
4.  从下拉菜单中选择 `Local Filesystem`{.literal}
    选项，并指定要保存转储的目录。
    ::: informalfigure
    ::: mediaobject
    ![Web 控制台 crashdump
    目标](images/web_console_crashdump_target.png)
    :::
    :::
    ::: itemizedlist
    -   或者，从下拉菜单中选择 `Remote over SSH`{.literal} 选项，使用
        SSH 协议将该 vmcore 发送到远程机器。
        在 `Server`{.literal}、`ssh key`{.literal} 和
        `Directory`{.literal} 项中提供远程机器的地址、ssh
        密钥位置和目的地目录。
    -   另一种选择是从下拉菜单中选择 `Remote over NFS`{.literal}
        选项，并填写 `Mount`{.literal} 字段，以使用 NFS 协议将 vmcore
        发送到远程计算机。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        选择 `Compression`{.literal} 复选框来缩小 vmcore 文件的大小。
        :::
    :::
5.  崩溃内核以测试您的配置。
    ::: informalfigure
    ::: mediaobject
    ![Web 控制台测试 kdump
    配置](images/web_console_test_kdump_config.png)
    :::
    :::
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    这一步会破坏内核的执行，并导致系统崩溃和数据丢失。
    :::
:::
::: itemizedlist
**其它资源**
-   [支持的 kdump
    目标](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/supported-kdump-configurations-and-targets_managing-monitoring-and-updating-the-kernel#supported-kdump-targets_supported-kdump-configurations-and-targets){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html#kdump-using-rhel-system-roles_assembly_dumping-a-crashed-kernel-for-later-analysis}使用 RHEL 系统角色的 kdump {.title}
:::
RHEL 系统角色是 Ansible 角色和模块的集合,可为远程管理多个 RHEL
系统提供一致的配置界面。`kdump`{.literal}
角色可让您在多个系统中设置基本内核转储参数。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
通过替换 `/etc/kdump.conf`{.literal} 文件，`kdump`{.literal}
角色完全取代了受管主机的 `kdump`{.literal} 配置。另外,如果应用了
`kdump`{.literal} 角色，则之前的所有 `kdump`{.literal}
设置也会被替换，即使它们没有被角色变量指定，也可以替换
`/etc/sysconfig/kdump`{.literal} 文件。
:::
以下示例 playbook 演示了如何应用 `kdump`{.literal}
系统角色来设置崩溃转储文件的位置：
``` screen
---
- hosts: kdump-test
  vars:
    kdump_path: /var/crash
  roles:
    - rhel-system-roles.kdump
```
有关 `kdump`{.literal} 角色变量的详情，请安装
`rhel-system-roles`{.literal} 软件包，并参阅
`/usr/share/doc/rhel-system-roles/kdump`{.literal} 目录中的
`README.md`{.literal} 或者`README.html`{.literal} 文件。
::: itemizedlist
**其它资源**
-   [RHEL
    系统角色简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_dumping-a-crashed-kernel-for-later-analysis_configuring-basic-system-settings.html#_additional_resources_5}其它资源 {.title}
:::
::: itemizedlist
-   [安装
    kdump](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_monitoring_and_updating_the_kernel/index#installing-kdump_managing-monitoring-and-updating-the-kernel){.link}
-   [在命令行中配置
    kdump](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_monitoring_and_updating_the_kernel/index#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel){.link}
-   [在 web 控制台中配置
    kdump](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_monitoring_and_updating_the_kernel/index#configuring-kdump-in-the-web-console_managing-monitoring-and-updating-the-kernel){.link}
:::
:::
:::
[]{#assembly_recovering-and-restoring-a-system_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_recovering-and-restoring-a-system_configuring-basic-system-settings.html#assembly_recovering-and-restoring-a-system_configuring-basic-system-settings}第 9 章 恢复系统 {.title}
:::
要使用现有备份恢复系统，Red Hat Enterprise Linux 提供了
Relax-and-Recover(ReaR)实用程序。
您可以使用这个工具作为灾难恢复解决方案，也用于系统迁移。
该工具可让您执行以下任务：
::: itemizedlist
-   生成可引导镜像，并使用镜像从现有备份中恢复系统。
-   复制原始存储布局。
-   恢复用户和系统文件。
-   将系统还原到不同的硬件中。
:::
另外，对于灾难恢复，您还可以将某些备份软件与 ReaR 集成。
设置 ReaR 涉及以下高级别的操作：
::: orderedlist
1.  安装 ReaR。
2.  修改 ReaR 配置文件以添加备份方法详情。
3.  创建救援系统。
4.  生成备份文件。
:::
::: section
::: titlepage
# []{#assembly_recovering-and-restoring-a-system_configuring-basic-system-settings.html#proc_setting-up-rear_assembly_recovering-and-restoring-a-system}设置 ReaR {.title}
:::
使用以下步骤，使用 Relax-and-Recover(ReaR)实用程序安装
软件包，创建救援系统，配置和生成备份。
::: itemizedlist
**先决条件**
-   根据备份恢复计划完成必要的配置。
    请注意： 您可以使用 `NETFS`{.literal} 备份方法，该方法是 ReaR
    完全整合的、内置的方法。
:::
::: orderedlist
**流程**
1.  运行以下命令来安装 ReaR 工具：
    ``` screen
    # yum install rear
    ```