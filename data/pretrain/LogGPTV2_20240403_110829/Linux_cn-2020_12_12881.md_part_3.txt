**00:19:07 - Saron Yitbarek**：
按照 Elizabeth 的说法，在这 14 年里有过多次尝试。中间经历了漫长而痛苦的深度的尝试。开发者们心力交瘁；人们陷入了死胡同。到 2015 年圣诞节那天 Perl 6 终于问世时，世界上的许多地方已经开始了新的发展。而需要注意的是 Perl 6 并没有给予成为某种革命性的新事物，从而实现对 Python 的反击。Perl 6 是对原版进行了深思熟虑的重新设计。
**00:19:43 - Elizabeth Mattijsen**：
我认为 Larry Wall 在他的“ 洋葱状态   State of the Onion ”演讲中使用了一个很好的比喻。对他来说，Perl 5 就像《 霍比特人   The Hobbit 》，而 Perl 6 就像《 指环王   Lord of the Rings 》。如果你仔细看过《霍比特人》和《指环王》的故事，你会发现它们基本上是同一个故事。只是《霍比特人》比《指环王》小得多，情节漏洞也更多，没有《指环王》那么宏大的背景。我认为这很好地描述了 Perl 5 和 Perl 6 之间的区别。它基本上是同样的想法，同样的思路，同样的环境，只是对它的重新构想。
**00:20:26 - Saron Yitbarek**：
Elizabeth Mattijsen 是 Perl 6 的核心贡献者。
**00:20:32**：
如今，Perl 甚至可能不在前 20 种语言之列。在外部竞争和内部拖延之间，它还没有向大多数新开发人员证明自己。但这提出了一个大问题，我们真的应该根据一种语言的流行度来判断我们的编程语言吗？或者说我们应该根据其他方面来判断一种编程语言的价值？当昔日的超级巨星成为陪衬时，这到底意味着什么呢？
**00:21:06**：
在世纪之交时互联网泡沫破裂时，Perl 的统治地位开始衰退时，Larry Wall 发表了一个有趣的声明。他认为尽管 Perl 永远不会再成为世界上最流行的编程语言，但它可以成为较小类别中的领先者。Larry Wall 说那才是真正的目标。成为同类中最好的，而不是世界上最好的。正如他所说的，SUV 永远不会和赛车竞争。
**00:21:38 - Saron Yitbarek**：
我想深入研究这个想法，我想了解在细分类别中做到最好对编程语言的真正含义。
**00:21:48 - John Siracusa**：
我是 John Siracusa，我是一个程序员，也是一个播客主。
**00:21:53 - Saron Yitbarek**：
John 实际上共同主持了三个播客：《Accidental Tech Podcast》、《Reconcilable Differences》和《Robot or Not?》。我们刚刚聊到了 Perl 在当今世界的地位。
**00:22:06**：
Perl 在当今世界排名如何？它仍然是最好的计算机语言吗？
**00:22:10 - John Siracusa**：
Perl 6 具有其他语言没有的、其他语言应该具有的东西，我一直在等待其他语言偷学它。例如语法是将常见任务概念化的一种好方法，而在我看来，使用语法来解决解析问题比使用现有的工具更令人愉快、更干净、更好。
**00:22:31**：
在 Perl 中，对象系统的许多部分看起来很琐碎而无关紧要，但我完全期待其他语言最终会采用它，就像许多语言最终采纳了 Perl 5 中的许多思想一样。因此我认为 Perl 6 在许多方面都是最好的。遗憾的是，很少有人有机会使用它。
**00:22:52 - Saron Yitbarek**：
你认为 Perl 6 社区的发展需要做些什么？想让人们更多地参与到 Perl 6 中，需要做些什么？
**00:23:00 - John Siracusa**：
这有点像 Perl 6 的故事，就像它一直在寻找一个真正奇妙的实现一样。这是第二系统问题的一部分…… 第二系统综合症   second-system syndrome ，我想他们是这样称呼……
**00:23:11 - Saron Yitbarek**：
哦。
**00:23:12 - John Siracusa**：
Perl 6 的，人们希望修复世界上的所有问题。他们想要解决的问题之一是运行时环境。是什么在运行我们的代码？运行 Perl 5 和之前的 Perl 4 的东西是一个巨大的 C 程序，这是由具有独特编码风格的开发者编写的。还有大量的宏，它是一种相当难以理解的东西。
**00:23:33**：
Perl 6 的想法是让我们不要再那样做了，让我们不要制造大量的 C 代码。相反，让我们使用一个虚拟机，这在当时是一种时尚，有很多关于如何实现它的伟大想法。最终我们得到了几个中规中矩的虚拟机实现版本，有时这些还会相互竞争，但没有一个达到真正交付语言使用时需要的性能、稳定性和特性。
**00:24:01 - Saron Yitbarek**：
现如今 Perl 到底发生了什么？你对此有什么看法？
**00:24:06 - John Siracusa**：
Perl 5 绝对像是在走下坡路，因为与 Perl 5 同时代的所有其他语言都采纳了它的大部分最佳思想，并获得了更多的支持。也就是说，因为它在很长一段时间内都是王者，所以有很多 Perl 5 代码在运行一些大型的、重要的站点，人们需要维护和扩展这些代码。
**00:24:29**：
这需要很长时间才能消失。只要看看现今仍然存在的 COBOL，人们怎么还在雇佣人在 COBOL 上做维护吧？
**00:24:35 - Saron Yitbarek**：
嗯。是这样。
**00:24:36 - John Siracusa**：
你刚才问 Perl 是不是一门垂死的语言，我提到了 COBOL，这听起来并不乐观。Perl 6 本身会成为主流语言吗？看起来可能性不大。现在对其他语言有非常多的关注，如果 Perl 6 现在还没有得到开发者的关注，我不知道将会需要发生什么变化来让它流行起来。
**00:24:54 - Saron Yitbarek**：
如果你是这样想的，你对 Perl 有什么期望？你希望在 Perl 5 或 Perl 6 中看到什么，以及希望看到将来发生什么？
**00:25:04 - John Siracusa**：
我对 Perl 5 的希望是人们不要忽视它，因为尽管有其它更流行的语言，但今天许多公司仍然采用 Perl 5 做为解决问题的最佳方案。通常这些都是胶水类型语言的问题。如果你发现自己曾经编写过 shell 脚本，并且可能会说:“好吧，我不会用我的‘真正的编程语言’来做这件事。”不管是 Python，还是 Ruby，还是别的什么。但是 shell 脚本可以让我把一堆东西连接起来（胶水类型语言）。Perl 是完成这项工作的更好工具。编写正确的 Perl 脚本要比编写正确的 shell 脚本更容易。
**00:25:40 - Saron Yitbarek**：
我认为归根结底 Perl 可能不再是一个适合入门的语言，但对于经验更丰富的多语言开发人员来说，它是那个你永远不希望扔掉的工具箱中的小工具，而且特定的工具有时让你提升水平的工具。
**00:25:58 - John Siracusa**：
有时我为 Perl 6 感到难过和沮丧，认为它不会有任何进展，有时我想“好吧，这是个不错的小社区”。每个社区都不需要称霸世界，也不需要成为整个行业的主导语言。也许可以就这样一直走下去，就是，无限期地走下去。这就是开源，和编程语言的伟大之处。没人可以阻止你，你可以像以前一样继续开发 Perl 6。
**00:26:27 - Saron Yitbarek**：
John Siracusa 是一名程序员，也是三个科技播客的联合主持人。
**00:26:34**：
语言都是有生命周期的。当新的语言出现时它们能够精确地适应新的现实，像 Perl 这样的选择可能会占据更小的、更小众的领域，但这并不是一件坏事。我们的语言应该随着我们需求的变化而扩大或缩小它们的群体。在互联网开发的早期历史中，Perl 是一个至关重要的角色，它以各种方式与我们联系在一起，只要看一看它的历史就会发现它的存在。
**00:27:11**：
下次在《代码英雄》中，我们将讨论：是什么将一种语言变成了标准？以及在基于云的开发世界中，新的标准将如何出现？
**00:27:26**：
《代码英雄》是红帽的原创播客。如果你想深入了解 Perl 的故事，或者任何我们在第三季中探索的编程语言，请访问 [redhat.com/commandlineheroes](file:///Users/xingyuwang/develop/LCRH-wxy/translated/redhat.com/commandlineheroes) 。我们的网站里有许多精彩内容等你去探索。
**00:27:49**：
我是 Saron Yitbarek。下期之前，编码不止。
> 
> **什么是 LCTT SIG 和 LCTT LCRH SIG**
> 
> 
> LCTT SIG 是 LCTT  特别兴趣小组   Special Interest Group ，LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
> 
> 
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
> 
> 
> 
---
via: 
作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[Mikedkmilk](https://github.com/Mikedkmilk) 校对：[Northurland](https://github.com/Northurland), [wxy](https://github.com/wxy)
本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出