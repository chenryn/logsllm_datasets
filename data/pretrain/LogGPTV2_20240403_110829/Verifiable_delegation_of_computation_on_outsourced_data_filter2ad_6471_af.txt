⋆ Pairing
Exp. in G
⋆ Exp. in G
Exp. in GT
⋆ Exp. in GT
Multiexp(2). in G
Multiexp(3). in GT
Time (ms)
80-bits
128-bits
1.23
0.62
1.83
0.24
0.22
0.05
2.53
0.44
12
6.34
9.55
1.34
1.15
0.26
13.34
2.45
⋆ Costs obtained using precomputation.
Table 1: Summary of costs per operation (in ms).
only in the full version of this work. Below we provide the
reader with some intuitive ideas.
Roughly speaking, correctness is based on the following
facts: (i) our MACs “encode” polynomials y(x) satisfying
y(0) = m and y(α) = r(∆,τ ); (ii) by the property of GroupEval,
the veriﬁcation can recompute w = f (r(∆,τ1), . . . , r(∆,τn))
“in the exponent”; (iii) Eval essentially evaluates PolyEval
“in the exponent”, thus preserving the property on y(α),
i.e., y(α) = w. Correctness of EﬀVer instead follows from
the correctness of the amortized closed-form eﬃciency for
GroupEval (see Section 4.3).
The security of EVH−MAC is shown via the following the-
orem whose proof is contained in the long version [7].
Operations at
the client side
Data Outsourcing
Verif. w/o prep.
Time (ms)
80 bits
128 bits
Size of tags (kB)
80 bits
128 bits
0.24
1.06
1.34
8.79
0.08
0.21
0.22
0.59
Table 2: Clients’ costs to outsource and to verify.
Theorem 3. Let λ be the security parameter, F be a pseu-
dorandom function with security ǫF, and G be a bilinear
group generator. Then, any PPT adversary A making Q
veriﬁcation queries has probability at most ǫ = 2·ǫF+ 8Q
of breaking the security of EVH−MAC.
p−2(Q−1)
summarized in Table 2. Below we illustrate how they are
obtained, and we give more details on the remaining costs.
To obtain the bandwidth costs, we observe that the MAC
σ created by the client, i.e., as generated by Auth, consists of
two elements (y0, Y1) ∈ Zp × G, whereas the MAC returned
by Eval may include the additional element ˆY2 ∈ GT .
Next, let us consider the computational performances of
the algorithms of EVH−MAC. To authenticate a data item,
the client runs Auth, whose cost basically boils down to that
of computing Y1. The latter requires one PRF evaluation
to generate R (which amounts to one exponentiation in G),
plus two other exponentiations, one for m, and one for α−1.
However, with a more careful look at our PRF construction,
we observe that this operation can be optimized by comput-
ing directly Y1 = g(ua+vb−m)/α, a single exponentiation in
G (with precomputation on the ﬁxed basis g). For veriﬁca-
tion, the client has to ﬁrst prepare the re-usable veriﬁcation
information VKP using VerPrep. The cost of this algorithm
depends on the computation of ω←CFEvaloﬀ
GroupEval, ˜τ (K, f ),
which is essentially the same as computing the function f (no
exponentiations, pairings or group operations are needed).
Such value VKP is stored by the client (its size amounts
to at most 5 elements of Zp), and it can be re-used over
and over when running P on diﬀerent data sets, thus amor-
tizing the cost of its computation. To verify a MAC us-
ing EﬀVer in the online phase, the client needs to compute
only one pairing (with precomputation on the ﬁxed g), i.e.,
e(Y1, g), and one multi-exponentiation with three bases4,
for e(g, g)y0−we(Y1, g)α( ˆY2)α2
. To conclude our analysis, we
consider the cost required to the server for generating the
correctness proofs, i.e., to run Eval. As one can notice, Eval
evaluates the circuit f with an additional, constant, over-
head which derives from replacing every addition of f with
the group operation (in either G or GT ), and every multipli-
cation with one multi-exponentiation in G plus one pairing.
Correctness and Security. For lack of space, we formally
prove correctness and security properties of our construction
4Here we observed that the explicit computation of W =
e(g, g)w in CFEvalon can be avoided by directly considering
e(g, g)y0−w.
6. REFERENCES
[1] S. Agrawal and D. Boneh. Homomorphic MACs:
MAC-based integrity for network coding. In ACNS,
2009.
[2] B. Applebaum, Y. Ishai, and E. Kushilevitz. From
secrecy to soundness: Eﬃcient veriﬁcation via secure
computation. In ICALP 2010, Part I, 2010.
[3] N. Attrapadung and B. Libert. Homomorphic network
coding signatures in the standard model. In PKC,
2011.
[4] N. Attrapadung, B. Libert, and T. Peters. Computing
on authenticated data: New privacy deﬁnitions and
constructions. In ASIACRYPT, 2012.
[5] N. Attrapadung, B. Libert, and T. Peters. Eﬃcient
completely context-hiding quotable and linearly
homomorphic signatures. In PKC, 2013.
[6] L. Babai. Trading group theory for randomness. In
STOC, 1985.
[7] M. Backes, D. Fiore, and R. M. Reischuk. Veriﬁable
delegation of computation on outsourced data.
Cryptology ePrint Archive, Report 2013/469, 2013.
http://eprint.iacr.org/.
[8] M. Belenkiy, M. Chase, C. C. Erway, J. Jannotti,
A. K¨up¸c¨u, and A. Lysyanskaya. Incentivizing
outsourced computation. In NetEcon, 2008.
[9] S. Benabbas, R. Gennaro, and Y. Vahlis. Veriﬁable
delegation of computation over large datasets. In
CRYPTO, 2011.
[10] N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer.
From extractable collision resistance to succinct
non-interactive arguments of knowledge, and back
again. In ITCS, 2012.
[11] D. Boneh, X. Boyen, and H. Shacham. Short group
signatures. In CRYPTO, 2004.
[12] D. Boneh, D. Freeman, J. Katz, and B. Waters.
Signing a linear subspace: Signature schemes for
network coding. In PKC, 2009.
[13] D. Boneh and D. M. Freeman. Homomorphic
signatures for polynomial functions. In EUROCRYPT,
2011.
873[14] D. Boneh and D. M. Freeman. Linearly homomorphic
[36] C. Martel, G. Nuckolls, P. Devanbu, M. Gertz,
signatures over binary ﬁelds and new tools for
lattice-based signatures. In PKC, 2011.
[15] D. Catalano and D. Fiore. Practical homomorphic
MACs for arithmetic circuits. In EUROCRYPT, 2013.
[16] D. Catalano, D. Fiore, R. Gennaro, and
K. Vamvourellis. Algebraic (trapdoor) one way
functions and their applications. In TCC, 2013.
A. Kwong, and S. G. Stubblebine. A general model for
authenticated data structures. Algorithmica,
39(1):21–41, 2004.
[37] S. Micali. CS proofs. In 35th FOCS, 1994.
[38] F. Monrose, P. Wyckoﬀ, and A. D. Rubin. Distributed
execution with remote audit. In NDSS, 1999.
[39] M. Naor and K. Nissim. Certiﬁcate revocation and
[17] D. Catalano, D. Fiore, and B. Warinschi. Adaptive
certiﬁcate update. In USENIX Security, 1998.
pseudo-free groups and applications. In
EUROCRYPT, 2011.
[18] D. Catalano, D. Fiore, and B. Warinschi. Eﬃcient
network coding signatures in the standard model. In
PKC, 2012.
[19] K.-M. Chung, Y. Kalai, and S. P. Vadhan. Improved
delegation of computation using fully homomorphic
encryption. In CRYPTO, 2010.
[20] K.-M. Chung, Y. T. Kalai, F.-H. Liu, and R. Raz.
Memory delegation. In CRYPTO, 2011.
[21] G. Di Battista and B. Palazzi. Authenticated
relational tables and authenticated skip lists. In
DBSec, 2007.
[22] D. Fiore and R. Gennaro. Publicly veriﬁable
delegation of large polynomials and matrix
computations, with applications. In CCS, 2012.
[23] D. M. Freeman. Improved security for linearly
homomorphic signatures: A generic framework. In
PKC, 2012.
[24] R. Gennaro, C. Gentry, and B. Parno. Non-interactive
veriﬁable computing: Outsourcing computation to
untrusted workers. In CRYPTO, 2010.
[25] R. Gennaro, C. Gentry, B. Parno, and M. Raykova.
Quadratic span programs and succinct NIZKs without
PCPs. In EUROCRYPT, 2013.
[26] R. Gennaro, J. Katz, H. Krawczyk, and T. Rabin.
Secure network coding over the integers. In PKC,
2010.
[40] C. Papamanthou, E. Shi, and R. Tamassia. Signatures
of correct computation. In TCC, 2013.
[41] C. Papamanthou and R. Tamassia. Time and space
eﬃcient algorithms for two-party authenticated data
structures. In ICICS, 2007.
[42] C. Papamanthou, R. Tamassia, and N. Triandopoulos.
Optimal veriﬁcation of operations on dynamic sets. In
CRYPTO, 2011.
[43] B. Parno, J. Howell, C. Gentry, and M. Raykova.
Pinocchio: Nearly practical veriﬁable computation. In
IEEE Symposium on Security and Privacy, 2013.
[44] B. Parno, M. Raykova, and V. Vaikuntanathan. How
to delegate and verify in public: Veriﬁable
computation from attribute-based encryption. In
TCC, 2012.
[45] S. Setty, B. Braun, V. Vu, A. Blumberg, B. Parno, and
M. Walﬁsh. Resolving the conﬂict between generality
and plausibility in veriﬁed computation. EuroSys 2013.
[46] S. Setty, R. McPherson, A. Blumberg, and M. Walﬁsh.
Making argument systems for outsourced computation
practical (sometimes). In NDSS, 2012.
[47] S. Setty, V. Vu, N. Panpalia, B. Braun, A. Blumberg,
and M. Walﬁsh. Taking proof-based veriﬁed
computation a few steps closer to practicality. In
USENIX Security Symposium, 2012.
[48] A. Shpilka and A. Yehudayoﬀ. Arithmetic circuits: A
survey of recent results and open questions.
Foundations and Trends in TCS, 2010.
[27] R. Gennaro and D. Wichs. Fully homomorphic
[49] S. W. Smith and S. Weingart. Building a
message authenticators. Cryptology ePrint Archive,
Report 2012/290, 2012. http://eprint.iacr.org/.
[28] C. Gentry and D. Wichs. Separating succinct
non-interactive arguments from all falsiﬁable
assumptions. In STOC, 2011.
high-performance, programmable secure coprocessor.
Computer Networks, 1999.
[50] R. Tamassia. Authenticated data structures. In
G. Battista and U. Zwick, editors, Algorithms - ESA.
Springer, 2003.
[29] S. Goldwasser, Y. T. Kalai, and G. N. Rothblum.
[51] V. Vu, S. Setty, A. Blumberg, and M. Walﬁsh. A
hybrid architecture for interactive veriﬁable
computation. In IEEE Security and Privacy, 2013.
[52] B. Yee. Using Secure Coprocessors. PhD thesis,
Carnegie Mellon University, 1994.
Delegating computation: interactive proofs for
muggles. In STOC, 2008.
[30] M. T. Goodrich, R. Tamassia, and J. Hasic. An
eﬃcient dynamic and distributed cryptographic
accumulator. In ISC, 2002.
[31] M. T. Goodrich, R. Tamassia, N. Triandopoulos, and
R. Cohen. Authenticated data structures for graph
and geometric searching. In CT-RSA, 2003.
[32] R. Johnson, D. Molnar, D. X. Song, and D. Wagner.
Homomorphic signature schemes. In CT-RSA, 2002.
[33] J. Kilian. A note on eﬃcient zero-knowledge proofs
and arguments. In STOC, 1992.
[34] A. B. Lewko and B. Waters. Eﬃcient pseudorandom
functions from the decisional linear assumption and
weaker variants. In CCS, 2009.
[35] B. Lynn. PBC: The pairing-based crypto library.
874