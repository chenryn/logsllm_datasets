D
N4
N4
N2
RREP(D, 5)
{D,N3}
N3
D
{D,N3}
N1
M
{D,N3}
N4
(d)
S
RREP(D, 5)
{D,N3,N2}
N2
{D,N3,N2}
N3
D
{D,N3,N2}
N1
M
N4
{D,N3,N2}
(e)
S
D
N2
N3
N1
RREP(D, 20)
N4
M
In AODV, a source S requests a route to a destination D by ﬂooding a RREQ message in the
network. When the RREQ reaches D, node D constructs a RREP, which is unicast back to S
using the reverse route through which RREQ was received. Forwarding nodes update their
routing tables so as to create a route from S to D.
In the inner-circle approach, the Inner-circle Callbacks maintain a mapping fw in each
node. The mapping associates a pair (D, dseqno)—where D is a destination node and dseqno is
a destination sequence number—with the set of nodes (depicted in brackets in the ﬁgure on the
left) that can forward messages addressed to node D when the active route to D has destination
sequence number dseqno. The operation is as follows:
• AODV service
at
a node
c
sends
a RREP message
(initially node D)
(cid:9)RREP, route dst, dseqno, next hop(cid:10), where route dst
is destination D, dseqno
is the associated destination sequence number, and next hop is c’s designated next node
in the process of unicasting the RREP message back to node S.
• Node c’s Inner-circle Interceptor intercepts the RREP message and passes it to c’s Inner-
circle Voting Service (see Fig. 1). At this point, a deterministic voting algorithm is exe-
cuted (see Fig. 3(a)) in which node c sends to its inner-circle nodes a propose message
that includes the intercepted RREP message.
• On receiving the propose message, an inner-circle node p veriﬁes that c’s proposed RREP
is valid (method check of Inner-circle Callbacks). The check succeeds only if c is the
destination of the sought route (c = route dst) or p considers c as a valid forwarding
node to the route destination (c ∈ fw(route dst, dseqno)).
• If L inner-circle nodes acknowledge c’s proposed RREP, then c assembles an agreed
• On receiving the agreed message, an inner-circle node p updates the local mapping fw to
include both nodes c and next hop (method onAgreed); moreover, if p is c’s designated
next hop, then p passes the RREP message encapsulated in the agreed message to its
local AODV service.
• The operation continues with node p’s AODV service sending an RREP message heading
message and sends it to all its inner-circle nodes (including c’s designated next hop).
back to S.
Figure 6. Neutralizing a black hole attack.
information cannot prevent compromised nodes from gener-
ating correctly signed yet malicious routing packets.
Some work has attempted to cope with black hole attacks
in AODV networks. The proposed techniques require changes
to AODV, have limited coverage and unbounded detection la-
tency because they are based on network-wide mechanisms,
and cannot cope with attack variations (gray hole attacks) in
which a malicious node behaves most of the time as a good
node and only sporadically as a black hole node [4, 5, 23].
In our approach, each wireless node embeds the inner-
circle framework, which is conﬁgured to intercept incom-
ing/outgoing RREP messages and to run the deterministic
voting service (see § 4.2) to check the validity of those mes-
sages. The execution of the deterministic voting protocol is
adapted to our case study by the instantiation (e.g., in a Linux
shared library) of Inner-circle Callbacks (see § 4) that imple-
ment AODV-speciﬁc actions that prevent black hole attacks.
This service is discussed in Fig. 6(a)–(d) through an execu-
tion example that assumes a dependability level L = 1. In
Fig. 6(e), a malicious node M sends an invalid RREP mes-
sage that never gets approved by M’s inner-circle nodes, and
thus, never propagates in the network.
It is possible to show [16] that if the dependability level
L is chosen so as to guarantee at least one non-Byzantine
inner-circle node other than the center node (i.e., T = 1,
see § 4.2), then the proposed mechanism guarantees that only
valid routes are established, i.e., it is impossible for a ma-
licious node M to diffuse a malicious RREP message for a
destination D if M is not on a path to destination D.
We have used the ns-2 network simulator [3] to study the
effectiveness of the proposed inner-circle approach in neutral-
izing black hole attacks. The simulation parameters and the
results are reported in Fig. 7. Figure 7(a) shows the overall
network throughput (measured as the total number of packets
received in the network divided by the total number of pack-
ets sent in the network). A signiﬁcant result is that a single
malicious node is capable of inﬂicting about 1000% through-
put degradation (from 98% throughput with no attack to 9%
throughput with attacks) in a network of 50 nodes. This degra-
dation goes up to 3000% (3.5% throughput) for 10 malicious
nodes. On the other hand, the inner-circle approach pays the
price of a 10% throughput degradation in the absence of at-
tacks (due to underlying STS and IVS communication) but
can signiﬁcantly reduce the effect of the malicious nodes to
only 22% throughput degradation. Figure 7(b) shows a node’s
average energy consumption. The results indicate that the
overhead brought by the inner-circle approach ranges from
7% in the absence of attacks, to less than 50% in the presence
of attacks. Note that when the inner-circle approach is not
used, black hole attacks result in reduced energy consump-
tion because of the reduced number of messages delivered in
the network.
5.2. Reliable and Secure Sensor Networks: Faulty
Sensors Case Study
This section demonstrates an application of the inner-circle
consistency approach to improve sensor data accuracy in spite
of sensor errors. The scenario considered is a wireless sensor
network deployed in a remote region R to detect and local-
ize events of interest. It is assumed that a target event at a
location u emits an energy signal Si(u) that can be measured
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Simulation Parameters
Topology: 1000 × 1000 m2
Number of nodes: 50
Node mobility:
Random waypoint model
Speed 10 m/s, Pause time 0 s
Trafﬁc:
Constant Bit Rate UDP trafﬁc
Send rate: 4 packets/s
Packet size: 512 bytes
Number of connections: 10
Physical layer: 802.11
Transmission range: 250 m
Energy consumption:
Tx 660 mJ, Rx 395 mJ, Idle 35 mJ
Simulation time: 300 s
Inner-circle framework:
STS timer: ∆STS = 2 s
Dependability level: L = 1, 2
Secret key length: 1024 bits
Number of experiments: 50
]
t
n
e
s
#
/
v
c
e
r
#
[
t
u
p
h
g
u
o
r
h
T
]
J
[
n
o
i
t
p
m
u
s
m
o
C
y
g
r
e
n
E
 100
 80
 60
 40
 20
 0
 0
 60
 50
 40
 30
 20
 10
 0
 0
No IC
IC, L=1
IC, L=2
 2
 4
 6
 8
 10
Number of Malicious Nodes
(a) Network throughput.
No IC
IC, L=1
IC, L=2
 2
 4
 6
 8
 10
Number of Malicious Nodes
(b) Energy consumption.
Figure 7. Simulation study of black hole attack.
by a sensor node i at location si. In addition, the strength of
the emitted signal is assumed to decay polynomially with the
distance, as modeled below [19]:
K · T
K·T
(d/d0)k
if d > 1;
• Calibration Error, a faulty sensor i’s readings are af-
fected by a multiplicative error : Ei = clbr · (Si + N2
i );
• Signal Interference, a faulty sensor i reports readings
affected by strong environmental disturbances: Ei =
Si + intf · N2
• Positioning Error, a faulty sensor i has an incorrect esti-
mate of its own position si: si ∼ Uniform(R).
The remainder of this section contrasts two solutions to the
detection/localization problem formulated above: (1) a cen-
tralized solution, where the base station collects raw target no-
tiﬁcations (cid:6)ti, Ei, ui(cid:7) as they are generated by the sensor nodes;
and (2) an inner-circle solution, where each wireless sensor
node embeds the inner-circle framework, which is conﬁgured
to intercept incoming/outgoing directed diffusion messages
that carry target notiﬁcations (cid:6)ti, Ei, ui(cid:7), and to run the sta-
tistical voting service. The execution of the statistical voting
protocol is adapted to our case study by the instantiation (e.g.,
in a TinyOS component) of Inner-circle Callbacks (see § 4)
that implement sensor-speciﬁc actions to prevent both faulty
and redundant data propagation. Due to space limitations, for-
mal speciﬁcations of these actions are relegated to [16].
To carry out reliable and secure in-network processing, the
inner-circle solution uses statistical voting to improve the ﬁ-
delity of each ﬁeld of a target notiﬁcation (cid:6)ti, Ei, ui(cid:7), where the
fault-tolerant cluster algorithm5 of § 4.3 is used as the fault-
tolerant fusion function. In particular, a target’s position is es-
timated locally by (1) computing the distance di of each inner-
circle sensor i from the target (by using Eqn. 4), (2) using a
trilateration algorithm on each triple of pairs (ui, di) to obtain
L
target location estimates pi, and (3) ﬁltering the obtained
3
estimates pi with the fault-tolerant cluster algorithm.
(cid:4)
(cid:5)
We have used the ns-2 network simulator [3] to study the
effectiveness of the proposed inner-circle approach in coping
with sensor errors. The simulation parameters and the results
are reported in Fig. 8. Figure 8(a) shows the probability of
missing a valid target, which is zero for all conﬁgurations
considered. Figure 8(b) shows the probability of a spurious
target detection. In the centralized case (marked as “No IC”
on all graphs), this probability can be as high as 19% (un-
der the signal interference fault model), while the inner-circle
solution can reduce it to zero by exploiting target informa-
tion shared by neighboring nodes. Figure 8(c) and Fig. 8(d)
show a node’s average energy consumption both when there
is a target and when there is no target. The ﬁgures indicate an
over 50% reduction in energy consumption (due to the ability
of suppressing both duplicate and spurious detections), which
can result in doubling overall network lifetime. Figure 8(e)
and Fig. 8(f) show the target detection latency (i.e., the time
elapsed between when a target pops up and when the base sta-
tion receives the ﬁrst notiﬁcation) and the target localization
5Parameter η is set based on the standard deviation of noise Ni
2.
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Simulation Parameters
Topology: 200 × 200 m2
Number of nodes: 100
No node movement
Sensor Model:
Target sensing rate: 5 s
Neumann-Person threshold: λ = 6.635
Single node maximum PF: α = 0.01
K · T = 20000
σN = 1
k = 2
Single target of 25s duration every 100s
Number of faulty nodes: 10
Sensor fault model: clbr = 2, intf = 10
Physical layer: 802.11
Transmission range: 40 m
Energy consumption:
Tx 660 mJ, Rx 395 mJ, Idle 35 mJ
Simulation time: 200 s
Inner-circle framework:
STS timer: ∆STS = 100 s
Dependability level: L = 2..7
Secret key length: 512 bits
Fault-tolerant cluster threshold: η = 5
Number of experiments: 50
y
t
i
l
i
b
a
b
o
r
P
m
r
a
A
s
s
M
i
l
n
o
i
t
p
m
u
s
n
o
C
y
g
r
e
n
E
]
J
[
t
e
g
r
a
T
h
t
i
w
]
s
[
y
c
n
e
t
a
L
n