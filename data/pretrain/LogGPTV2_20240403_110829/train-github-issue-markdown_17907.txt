CSS Grid layout excels at dividing a page into major regions, or defining the
relationship in terms of size, position, and layer, between parts of a control
built from HTML primitives.
Watched a youtube about CSS Grids: https://youtu.be/txZq7Laz7_4
Nice concept that seems to play nice with component based development.
Integration with Next.js may prove to solve CSS issues and the way we think
about making apps.
Probably goes against providing options to the developer but could image a
lean mean workflow.
Any thoughts?
  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
Standard  with built in support for grid layouts/fallback support.
## Current Behavior
Currently CSS can be a mess and look quite ugly with multiple nested divs and
leads to accessibility issues.
## Steps to Reproduce (for bugs)
  1. To many options for front end CSS frameworks that don't work well with component based workflow.
  2. Heavy CSS frameworks in the global space.
  3. Incomplete CSS react libraries like Semantic UI.
  4. Doing things the old way.
## Context
Providing a rich UX is one of the most complicating parts of developing an app
and Next.js definitely makes things easier and is also lightning fast. I
believe something like "CSS Grid" could make layouts of the components where
you want them easy while increasing performance.
## Links
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout  
https://css-tricks.com/snippets/css/complete-guide-grid/  
https://www.w3.org/TR/css-grid-1/