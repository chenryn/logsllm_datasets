3967
3967
50% 1.000
80% 1.000
50% 1.302
80% 1.303
50% 1.157
80% 1.157
non-fail-opt
1.22
2.34
2.21
4.20
1.40
2.21
ospf
1.916
1.916
6.878
6.878
4.537
4.537
Table 3: Performance ratio of diﬀerent routings un-
der link failures. Median performance ratio for fail-
ure of random link.
5.1 Basic lemmas
The following lemma shows that for the purpose of com-
puting performance ratio, we can “factor out” parts of the
network where path diversity is not possible (thus, all rout-
ing would perform the same.). We used this lemma to reduce
the size of the input topologies.
Lemma 5.1. Removal of degree-one nodes does not aﬀect
the oblivious ratio of the network. Similarly, it does not
aﬀect the optimal performance ratio with respect to any set
of TMs.
Lemma 5.1 is a corollary of the following Lemma:
Lemma 5.2. The optimal oblivious ratio of a network can
be computed by partitioning the network to 2-edge-connected
components and taking the maximum of the oblivious ratio
over these components.
Proof. If the network G is not 2-edge connected, it can
be partitioned to two non-empty components A and B that
are connected by an edge (a, b) where a ∈ A and b ∈ B.
It is easy to see that the optimal oblivious ratio of G is
at least that of the maximum optimal oblivious ratios of
A and B: The optimal performance ratio obtained on G
for TMs that have positive demands only at OD pairs that
both lie in A (respectively, both lie in B) is equal to the
optimal oblivious ratio of A (respectively, B). To see that,
observe that all ﬂow leaving/entering A must go through
the edge (a, b), thus there is never an advantage to route
demand internal to A through the edge (a, b) and out of A,
since this ﬂow will have to traverse back on the same edge
and form a ﬂow cycle (the symmetric argument holds for
B). The optimal oblivious ratio of G is at least the optimal
performance ratio on these more restricted set of TMs.
(cid:3)
(cid:3)
, b
) where a
(cid:3)
(cid:3)
, a
(cid:3) ∈ A and b
We now argue the converse, that the optimal oblivious ra-
tio on G is at most the maximum optimal oblivious ratio of
A and B. Let fA (respectively, fB) be an optimal oblivious
routing on A (respectively, B). We extend the routings fA
and fB to a routing fG on G as follows: all OD pairs inter-
nal to A or B are routed according to the respective routing.
(cid:3) ∈ B
The routing for OD pair (a
(similar construction for pairs (b
)) is routed by concate-
(cid:3)
nating the routing fA from a
to a with a ﬂow of value 1 from
(cid:3)
a to b with the routing fB from b to b
. Consider now a TM
DG on G. We will show that the performance ratio of fG
on G is at most the maximum optimal oblivious ratio of A
and B. We can assume (by scaling DG) that the maximum
edge utilization of the optimal routing of DG is 1. Thus,
the performance ratio of fG on DG is equal to the maximum
edge utilization. We now deﬁne the TMs DA and DB for A
and B, respectively; where DA is obtained by aggregating
all the demand into/from nodes in A from/into nodes in B
to demands from/into the node a (DB is similarly deﬁned).
The maximum edge utilization of fG on DG is the max-
imum utilization over the edges of A, the edges of B, and
the edge (a, b). The utilization of the edge (a, b) is equal to
the aggregated demand between A and B. Since the uti-
lization must be at least that also for the optimal routing
for DG, from our scaling assumption it follows that the ag-
gregated demand is at most the capacity of (a, b), and thus
the utilization is at most 1. The maximum edge utilization
over the edges of A is equal to the utilization of fA on the
demands DA, which is at most the optimal oblivious ratio
of A (similar for B.) The symmetric argument for the edges
of B concludes the proof.
The following Lemma states that the optimal oblivious
ratio of a network with symmetric directed links (that is,
the link capacities are equal in both direction) is the same as
the oblivious ratio of an undirected network derived from it
by replacing each set of directed links by a single undirected
link with the same capacity. This lemma says that known
bounds for undirected graphs carry over to “real” networks
(where links are directed and symmetric). We also use this
lemma for reducing the size of our LP models.
Lemma 5.3. Consider an undirected network G, and a di-
(cid:3)
rected network G
derived from it by replacing each edge e
by two anti-parallel arcs that have the same capacity as e.
(cid:3)
have the same optimal oblivi-
The two networks, G and G
(cid:3)
ous ratio. Moreover, G and G
have (the same) symmetric
optimal oblivious routing.
5.2 The LP model of [3]
It was shown in [3] that an optimal oblivious routing can
be computed by solving a Linear Program (LP) with a poly-
nomial number of variables, but inﬁnitely many constraints
(for every possible TM there is a set of constraints). We
refer to this LP in the sequel as the “master LP.” We use
the following notation: the term “link” for an undirected
edge, “edge” for a directed edge, and let link-of(e) be the
link corresponding to edge e. We use the notation
fij (l) = X
fij (e) .
e:link-of(e)=l
We learn from Lemma 5.3 that the routing problem on sym-
metric directed networks (where the two directions of each
link have the same capacity) can be reduced to one on “undi-
rected” networks. We use this equivalence to reduce the
number of variables in our LP models.4
min r
fij (e) is a routing
∀ links l, ∀ TMs D with optU(D) = 1:
fij (l)dij/cap(l) ≤ r
X
ij
(1)
Furthermore, given a routing fij (e), the constraints (1) can
be tested by solving, for each link l, the following “slave
LP,” and testing if the objective is ≤ r or not.
max X
ij
fij (l)dij/cap(l)
(2)
gij(e) is a ﬂow of demands dij
gij (m) ≤ cap(m)
∀ links m: X
∀ demands i → j: dij ≥ 0
ij
Thus, the LPs (2) can be used as a separation oracle for
the constraints (1), giving polynomial solvability using the
Ellipsoid algorithm [12].
5.3 Deriving a simpler LP model
We derive a simpler LP model that enables us to eﬃciently
process larger networks. For presentation simplicity, our dis-
cussion focuses on computing the optimal oblivious routing,
that is, a routing that provides performance guarantees with
respect to all possible TMs. We then state the generalized
LP model we used to support interval restrictions on OD
pairs demands.
The ﬁrst simpliﬁcation one might try to apply is to some-
how directly combine the master and slave LPs, to yield a
single polynomial size LP instance. However, there are two
obstacles: ﬁrst, both fij (l) and dij would be variables in a
combination, resulting in quadratic (non linear) constraints,
and second, requiring that a maximum over an LP be ≤ r is
not readily modeled. Fortunately, the LP dual of the slave
systems (2) leads to a nice characterization:
Theorem 1. A routing fij (e) has oblivious ratio ≤ r if
and only if there exist weights π(l, m) for every pair of links
l, m such that
P1 m cap(m)π(l, m) ≤ r for every link l
P2 For every link l, for every demand i → j, and for every
path h1, h2, . . . , hp from i to j,
fij (l) ≤ cap(l)
p
X
k=1
π(l, link-of(hk)) .
P3 π(l, m) ≥ 0 for all links l, m
4To simplify our presentation we discuss “undirected” net-
works, but, similarly to the model in [3], our models can
be extended to directed-asymmetric networks (with a 2-fold
increase in the size of the LPs).
Proof. The proof is essentially duality applied to the
slave problem. Requirements (P1)-(P3) are equivalent to
stating that the slave LP’s have dual objective values ≤ r.
(“if ” direction): Let fij (e) be a routing, and π(l, m) be
weights satisfying requirements (P1)-(P3). Suppose (g, d)
is a ﬂow of demands d with maximum utilization of 1, and
let l be a link. For each demand i → j, gij must contain
paths from i → j of total weight dij. From (P2) and (P3),
summing over all paths, we have
fij (l)dij ≤ cap(l) X
π(l, link-of(h))gij(h) .
Summing over all demands i → j, we have
h
fij (l)dij ≤ cap(l) X
ij
X
ij
X
h
π(l, link-of(h))gij (h)
= cap(l) X
≤ cap(l) X
m
m
(π(l, m) X
gij (m))
ij
π(l, m)cap(m)
The last inequality follows since g ﬁts within the edge ca-
pacities (ij gij(m) ≤ cap(m)), and from (P1)
fij (l)dij ≤ cap(l) X
π(l, m)cap(m) ≤ cap(l)r .
X
ij
m
This says that for any demands d which can be routed with
congestion 1, f ’s utilization on any link l is at most r, which
is what we wanted.
(“only if ” direction): Let ﬂow fij (e) have oblivious
ratio ≤ r, and let l be a link. The dual of the slave LP (2)
for link l is:
m
cap(m)π(l, m)
min X
∀ demands i → j: λij(l, j) ≥ fij (l)/cap(l)
∀ demands i → j, ∀ edges e = i
(cid:3) → j
(cid:3)
:
) ≥ 0
) − λij(l, j
(cid:3)
(cid:3)
π(l, link-of(e)) + λij(l, i
∀ links m: π(l, m) ≥ 0
∀ demands i → j, ∀ nodes k: λij (l, k) ≥ 0
∀ demands i → j: λij(l, i) = 0
(3)
(4)
The variable λij (l, k) is the dual multiplier on the ﬂow
conservation constraint for demand i → j at node k. Since
there is no ﬂow conservation constraint in the primal at node
i, we have introduced λij (l, i), ﬁxed at 0, for convenience.
The variable π(l, m) is the dual multiplier on the capacity
constraint for link m.
Since fij (e) has oblivious ratio ≤ r, the primal slave LP
for any link l must have optimum ≤ r, and hence also the
dual slave LP for link l must have optimum ≤ r. Hence,
the π(l, m) from the dual slave LPs satisfy (P1). Trivially,
they also satisfy (P3). Now, let i → j be a demand, and
h1, . . . , hp be a path from i to j. Summing up constraint (4)
over edges h1, . . . , hp, we have
π(l, link-of(hk)) + λij(l, i) − λij (l, j) ≥ 0
p
X
k=1
Since λij(l, i) = 0,
π(l, link-of(hk)) ≥ λij (l, j) ≥ fij (l)/cap(l)
p
X
k=1
so the π(l, m) satisfy (P2).
We next apply Theorem 1 to show that the problem can
be solved by a single polynomial-sized LP. This results in a
signiﬁcant algorithmic performance gain, since it means the
problem can be solved by the more eﬃcient Interior-Point
algorithm [13].
Theorem 2. The oblivious ratio of a network can be com-
puted by a single LP with O(mn2) variables and O(nm2)
constraints.
Proof. We introduce the variables pl(i, j), for each link
l and OD pair i, j. The variable pl(i, j) is the length of
the shortest path from i to j according to the link weights
π((cid:26), m) (for all m). The introduction of these variables al-
lows us to replace the exponential number of constraints (for
all possible paths) in Requirement (P2) of Theorem 1 with
a small polynomial number of constraints.
(5)
min r
fij (e) is a routing
cap(m)π(l, m) ≤ r
∀ links l: X
∀ links l, ∀ pairs i → j:
m
fij (l)/cap(l) ≤ pl(i, j)
∀ links l, ∀ nodes i, ∀ edges e = j → k:
π(l, link-of(e)) + pl(i, j) − pl(i, k) ≥ 0
∀ links l, m: π(l, m) ≥ 0
∀ links l, ∀ nodes i: pl(i, i) = 0
∀ links l,∀ nodes i, j: pl(i, j) ≥ 0
This LP has O(mn2) variables and O(nm2) constraints.
5.4 Interval restrictions on OD demands
To compute the oblivious ratio when demand i→j is re-
stricted to the range [aij , bij ], we modify the slave LP (2)
by replacing the constraint dij ≥ 0 with aij ≤ dij ≤ bij,
and following that change through the dual LP (3) into the
single LP (5). This results in the introduction of the slack
l (i, j) for the lower and upper bound
variables s
constraints on dij .
−
l (i, j) and s+
min r
fij (e) is a routing
∀ links l: X
∀ links l, ∀ pairs i → j:
m
fij (l)/cap(l) − s
cap(m)π(l, m) ≤ r
+
l (i, j) + s
−
l (i, j) = pl(i, j)
∀ links l, ∀ nodes i, ∀ edges e = j → k:
π(l, link-of(e)) + pl(i, j) − pl(i, k) ≥ 0
∀ links l:
X
l (i, j)) ≤ 0
−
+
ij
(bijs
l (i, j) − aij s
∀ links l, m: π(l, m) ≥ 0
∀ links l, ∀ nodes i: pl(i, i) = 0
∀ links l, ∀ nodes i, j: pl(i, j) ≥ 0
∀ links l, ∀ nodes i, j: s
l (i, j) ≥ 0
−
∀ links l, ∀ nodes i, j: s
l (i, j) ≥ 0
+
This reduces to the single LP (5) if the bounds are [0, ∞).
6. CLIQUES AND CYCLES
We analyze the optimal oblivious ratio for two simple fam-
ilies of network topologies: The cycle topology Cn has n
nodes that are connected in a cycle pattern with unit ca-
pacity links. The clique topology Kn has n nodes connected
via a complete graph, that is, there is a unit capacity edge
connecting any two nodes.
Our interest in these networks is two-fold. First, we shall
see that these networks admit an optimal oblivious ratio
bounded by 2 (even for large values of n). This is in agree-
ment with the ratio computed for our ISP networks, and