### Issue Description

Despite the startup database folder being clean, the test `quickBenchmark2` is failing. I suspect this issue is related to the underlying Lucene index.

### Test Code

```java
@Test
public void quickBenchmark2() {
    for (int i = 0; i < 10000; i++) {
        // Insert test data
    }
    batchInserter.shutdown();
}
```

### Error Stack Trace

The test fails with the following exception:

```
org.neo4j.kernel.impl.store.UnderlyingStorageException: java.io.IOException: Exception in the page eviction thread
    at org.neo4j.kernel.impl.store.CommonAbstractStore$1.next(CommonAbstractStore.java:1171)
    at org.neo4j.kernel.impl.store.CommonAbstractStore$1.next(CommonAbstractStore.java:1147)
    at org.neo4j.unsafe.impl.batchimport.staging.ReadRecordsStep.nextBatchOrNull(ReadRecordsStep.java:85)
    at org.neo4j.unsafe.impl.batchimport.staging.ProducerStep.process(ProducerStep.java:78)
    at org.neo4j.unsafe.impl.batchimport.staging.ProducerStep$1.run(ProducerStep.java:56)
Caused by: java.io.IOException: Exception in the page eviction thread
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.assertHealthy(MuninnPageCache.java:654)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.grabFreeAndExclusivelyLockedPage(MuninnPageCache.java:708)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.grabFreeAndExclusivelyLockedPage(MuninnPagedFile.java:521)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.pageFault(MuninnPageCursor.java:317)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.initiatePageFault(MuninnPageCursor.java:290)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.uncommonPin(MuninnPageCursor.java:271)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.pin(MuninnPageCursor.java:254)
    at org.neo4j.io.pagecache.impl.muninn.MuninnReadPageCursor.next(MuninnReadPageCursor.java:60)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.next(MuninnPageCursor.java:121)
    at org.neo4j.kernel.impl.store.CommonAbstractStore.readIntoRecord(CommonAbstractStore.java:1026)
    at org.neo4j.kernel.impl.store.CommonAbstractStore.access$000(CommonAbstractStore.java:63)
    at org.neo4j.kernel.impl.store.CommonAbstractStore$1.next(CommonAbstractStore.java:1166)
    ... 4 more
Caused by: java.io.IOException: No space left on device
    at sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
    at sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:66)
    at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:89)
    at sun.nio.ch.IOUtil.write(IOUtil.java:51)
    at sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:778)
    at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:764)
    at org.neo4j.io.fs.StoreFileChannel.write(StoreFileChannel.java:50)
    at org.neo4j.io.fs.StoreFileChannel.writeAll(StoreFileChannel.java:65)
    at org.neo4j.io.pagecache.impl.SingleFilePageSwapper.swapOut(SingleFilePageSwapper.java:270)
    at org.neo4j.io.pagecache.impl.SingleFilePageSwapper.write(SingleFilePageSwapper.java:435)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPage.doFlush(MuninnPage.java:154)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPage.flush(MuninnPage.java:142)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPage.evict(MuninnPage.java:209)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.evictPage(MuninnPageCache.java:979)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.evictPages(MuninnPageCache.java:937)
    at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.continuouslySweepPages(MuninnPageCache.java:863)
    at org.neo4j.io.pagecache.impl.muninn.EvictionTask.run(EvictionTask.java:39)
    at org.neo4j.io.pagecache.impl.muninn.BackgroundTask.run(BackgroundTask.java:45)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)
```

### Analysis

The error indicates that there is an issue with the page eviction thread, specifically due to a lack of disk space (`No space left on device`). This suggests that the system is running out of storage capacity, which is causing the page cache to fail when it tries to write data to the disk.

### Recommendations

1. **Check Disk Space**: Verify the available disk space on the system where the test is running. Ensure there is sufficient free space to accommodate the test data and the page cache operations.

2. **Increase Disk Space**: If the disk space is low, consider increasing the available storage. This can be done by either freeing up existing space or adding more storage capacity.

3. **Optimize Data Generation**: Review the data generation logic in the test to ensure it is not creating an excessive amount of data. Consider reducing the number of iterations or the size of the data if possible.

4. **Monitor Page Cache**: Monitor the page cache usage during the test to identify any potential issues. This can help in understanding if the page cache is configured optimally for the test environment.

By addressing these points, you should be able to resolve the issue and ensure the test runs successfully.