Question: In the context of memory-safety vulnerabilities, what is a benefit of implementing non-executable pages, and why are they not sufficient on their own to prevent all types of attacks?
"A": "Non-executable pages prevent the execution of attacker-injected code in data regions, but they do not stop attackers from leveraging existing executable code in memory.",
"B": "Non-executable pages encrypt the contents of memory, making it harder to execute code, but attackers can still decrypt the memory with sufficient computational resources.",
"C": "Non-executable pages can detect and alert on unusual memory access patterns, but they cannot prevent attackers from reading sensitive information.",
"D": "Non-executable pages prevent buffer overflow attacks by isolating the stack and heap, but attackers can still perform return-oriented programming (ROP) attacks."
Answer: A