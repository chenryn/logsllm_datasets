em4       Link encap:Ethernet  HWaddr 00:22:19:60:77:95    
          BROADCAST MULTICAST  MTU:1500  Metric:1  
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0  
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0  
          collisions:0 txqueuelen:1000   
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)  
lo        Link encap:Local Loopback    
          inet addr:127.0.0.1  Mask:255.0.0.0  
          inet6 addr: ::1/128 Scope:Host  
          UP LOOPBACK RUNNING  MTU:16436  Metric:1  
          RX packets:14685 errors:0 dropped:0 overruns:0 frame:0  
          TX packets:14685 errors:0 dropped:0 overruns:0 carrier:0  
          collisions:0 txqueuelen:0   
          RX bytes:3881472 (3.7 MiB)  TX bytes:3881472 (3.7 MiB)  
[root@db-172-16-3-150 ~]# ip link  
1: lo:  mtu 16436 qdisc noqueue state UNKNOWN   
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00  
2: em1:  mtu 1500 qdisc mq state UP qlen 1000  
    link/ether 00:22:19:60:77:8f brd ff:ff:ff:ff:ff:ff  
3: em2:  mtu 1500 qdisc noop state DOWN qlen 1000  
    link/ether 00:22:19:60:77:91 brd ff:ff:ff:ff:ff:ff  
4: em3:  mtu 1500 qdisc noop state DOWN qlen 1000  
    link/ether 00:22:19:60:77:93 brd ff:ff:ff:ff:ff:ff  
5: em4:  mtu 1500 qdisc noop state DOWN qlen 1000  
    link/ether 00:22:19:60:77:95 brd ff:ff:ff:ff:ff:ff  
9: bond0:  mtu 1500 qdisc noop state DOWN   
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff  
10: bond4:  mtu 1500 qdisc noop state DOWN   
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff  
11: bond1:  mtu 1500 qdisc noop state DOWN   
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff  
12: bond2:  mtu 1500 qdisc noop state DOWN   
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff  
13: bond3:  mtu 1500 qdisc noop state DOWN   
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff  
15: br0:  mtu 1500 qdisc noqueue state UNKNOWN   
    link/ether 00:22:19:60:77:8f brd ff:ff:ff:ff:ff:ff  
```
以上是实际存在的, 当使用KVM虚拟机时, 指定bridge后, 会自动帮你创建虚拟口, 这些虚拟口也可以被ovs控制, 例如打TAG. 建立VLAN.   
那么接下来你可能会问，通常的交换机不都是有一个管理接口，可以telnet到交换机上进行配置吧，那么在OVS中创建的虚拟交换机有木有这种呢，有的！上面既然创建交换机brname的时候产生了一个虚拟网口brname,   
那么，你给这个虚拟网卡配置了IP以后，就相当于给交换机的管理接口配置了IP，此时一个正常的虚拟交换机就搞定了。    
```
ip address add 192.168.1.1/24 dev brname  
```
最后，我们来看看一个br的具体信息：  
```
[root@db-172-16-3-150 ~]# ovs-vsctl show  
d267062e-d7ed-45e1-9de7-71d058127c1b  
    Bridge "br0"  
        Port "em1"  
            Interface "em1"  
        Port "br0"  
            Interface "br0"  
                type: internal  
    ovs_version: "1.9.3"  
```
首先，这里显示了一个名为br0的桥（交换机），这个交换机有两个接口, 一个是em1，一个是br0 (type: internal)，   
上面说到，创建桥的时候会创建一个和桥名字一样的接口，并自动作为该桥的一个端口，那么这个虚拟接口的作用，一方面是可以作为交换机的管理端口，另一方面也是基于这个虚拟接口，实现了桥的功能。    
## 概念及工作流程 2 
这一部分我以一个简单的例子，说明在虚拟化环境中OpenvSwitch的典型工作流程。  
前面已经说到，OVS主要是用来在虚拟化环境中。虚拟机之间一个虚拟机和外网之间的通信所用，如下是一个典型的结构图：  
那么，通常情况下的工作流程如下：  
![pic1](20140801_01_pic_001.png)    
(instance指虚拟机.)  
1\. VM实例instance产生一个数据包并发送至实例内的虚拟网络接口VNIC，图中就是instance中的eth0.  
2\. 这个数据包会传送到物理节点上的VNIC接口，如图就是vnet1接口。  
3\. 数据包从vnet NIC出来，到达桥（虚拟交换机）br100上.  
4\. 数据包经过交换机的处理，从物理节点上的物理接口发出，如图中物理节点上的eth0.  
5\. 数据包从eth0出去的时候，是按照物理节点上的路由以及默认网关操作的，这个时候该数据包其实已经不受你的控制了。  
一般L2 switch连接eth0的这个口是一个trunk口, 因为虚拟机对应的VNET往往会设置VLAN TAG, 可以通过对虚拟机对应的vnet打VALN TAG来控制虚拟机的网络广播域.   
如果跑多个虚拟机的话, 多个虚拟机对应的vnet可以设置不同的vlan tag, 那么这些虚拟机的包从eth0(4)出去的时候, 会带上TAG标记. 这样也就必须是trunk口才行.  
## 参考  
1\. http://git.openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=blob_plain;f=FAQ;hb=HEAD  
2\. http://git.openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=blob_plain;f=README;hb=HEAD  
3\. http://openvswitch.org/support/config-cookbooks/vlan-configuration-cookbook/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")