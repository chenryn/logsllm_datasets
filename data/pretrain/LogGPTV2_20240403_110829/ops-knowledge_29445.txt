User: 请回答以下安全问题sql注入的受限窗口如何被滥用？我有一个postgres 11数据库，里面没有机密信息，在应用中，入侵者可以在下面的更新语句中编写查询。
UPDATE表
设置col_a=val_b
其中｛可能有其他一些筛选器｝
AND｛注入的SQL｝；
我已将其限制为没有带；，/*的字符串或者--是允许的。
那么入侵者怎么能对table.col_a之外的数据库做任何事情呢？
这个问题是允许用户在更新语句中安全地输入原始SQL的延续问题，我在这里解释了允许这样一个开放系统的要求。

Assistant: 由于您明确允许用户构造原始SQL代码，因此您必须信任他们。
然而，这并不意味着你没有防御能力。
关系数据库——尤其是那些具有复制功能的数据库——具有作为逐事务增量备份的预写日志（WAL）文件。如果您执行定期的完整（异地）备份，并经常将WAL文件运送到异地，则可以从恶意用户那里进行恢复。
不过，有一点建议：定期练习从备份中恢复数据库。。。没有什么比认为自己有稳定的备份，然后在灾难发生时发现备份由于某种原因无法恢复更糟糕的了。
您还希望记录其中包含自定义子句的每个查询，无论它是否成功（事实上，在尝试运行查询之前进行记录），尤其是记录过滤器捕获的自定义子句。请确保将用户ID与他们尝试的子句一起记录。人们喜欢先玩显而易见的东西，所以看到一些，1=1'；——条款的出现会让你知道该关注谁。
如果你对用户知道他们被密切关注很满意，那么当一个子句超出你的过滤器时，你可以自动向自己发送一封带有该用户CC’d的电子邮件。不要指责电子邮件，只是检测到并过滤了可能存在问题的输入。大概，您仍然希望他们成为用户；你只想确保他们是一个行为良好的用户。
此日志的一个额外好处是，您将能够找到并修复误报，即and text LIKE'%em破折号通常键入为两个破折号，“--”.%'