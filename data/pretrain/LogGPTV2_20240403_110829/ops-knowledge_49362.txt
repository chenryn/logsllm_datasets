User: I'm a little confused on the deployment process for Python. Let's say you

create a brand new project with virtualenv
source bin/activate
pip install a few libraries
write a simple hello world app
pip freeze the dependencies

When I deploy this code into a machine, do I need first make sure the machine is sourced before installing dependencies? I don't mean to sound like a total noob but in the PHP world, I don't have to worry about this because it's already part of the project. All the dependencies are registered with the autoloader in place.
The steps would be:

rsync the files (or any other method)
source bin/activate
pip install the dependencies from the pip freeze output file

It feels awkward, or just wrong and very error prone. What are the correct steps to make? I've searched around but it seems many tutorials/articles make an assumption that anyone reading the article has past python experience (imo).
UPDATE:
I've should have mentioned that I'm trying to understand how it hooks up with Apache.
Assistant: Copy the directory containing the virtualenv. Exclude all virtualenv-generated files.
On the destination machine, create a virtualenv over the directory.
source bin/activate
pip install -r requirements.txt

The first step is simplified if you use version control; you simply clone (Mercurial or Git) or checkout (Subversion) the code. All the virtualenv-generated files should have been in the appropriate ignore file. (.hgignore, .gitignore, .svnignore).