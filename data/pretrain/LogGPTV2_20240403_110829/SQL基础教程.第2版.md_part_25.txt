ABC | abc 凡 例
aBC | abc low_str：LOWER(str1)的返回值
既然存在小写转换函数，那么肯定也有大写转换函数，UPPER就是
大写转换函数。
■REPLACE——字符串的替换
语法6-7 REPLACE函数
REPLACE(对象字符串，替换前的字符串，替换后的字符串)
KEYWORD 使用REPLACE函数，可以将字符串的一部分替换为其他的字符串（代
●REPLACE函数
码清单6-10）。
代码清单6-10 替换字符串的一部分
SELECT str1, str2, str3,
REPLACE(str1, str2, str3) AS rep_str
FROM SampleStr;
执行结果
str1 | str2 | str3 | rep_str
----------+------+------+---------
opx | rt | |
abc | def | |
山田 | 太郎 | 是我 | 山田
aaa | | |
| xyz | |
@!#$% | | | 凡 例
ABC | | | str1：对象字符串
aBC | | | str2：替换前的字符串
abc太郎 | abc | ABC | ABC太郎 str3：替换后的字符串
abcdefabc | abc | ABC | ABCdefABC rep_str：REPLACE(str1,str2,str3)
micmic | i | I | mIcmIc 的返回值(替换结果)
● 188 第6章 函数、谓词、CASE表达式
■SUBSTRING——字符串的截取
语法6-8 SUBSTRING函数（PostgreSQL/MySQL专用语法）
SUBSTRING（对象字符串 FROM 截取的起始位置 FOR 截取的字符数）
KEYWORD 使用SUBSTRING函数可以截取出字符串中的一部分字符串（代码清
●SUBSTRING函数
单6-11）。截取的起始位置从字符串最左侧开始计算A。
注A
代码清单6-11 截取出字符串中第3位和第4位的字符
需要大家注意的是，该函数也存
在和LENGTH函数同样的多字
PostgreSQL MySQL
节字符的问题。详细内容请大 SELECT str1,
家参考专栏“对1个字符使用 SUBSTRING(str1 FROM 3 FOR 2) AS sub_str
LENGTH函数有可能得到2字节 FROM SampleStr;
以上的结果”。
执行结果
str1 | sub_str
----------+--------
opx | x
abc | c
山田 |
aaa | a
|
@!#$% | #$
ABC | C
aBC | C
abc太郎 | c太
abcdefabc | cd 凡 例
micmic | cm sub_str：SUBSTRING(str1 FROM 3 FOR 2)的返回值
虽然上述SUBSTRING函数的语法是标准SQL承认的正式语法，但
是现在只有PostgreSQL和MySQL支持该语法。
特定的SQL
SQL Server将语法6-8a中的内容进行了简化（语法6-8b）。
语法6-8a SUBSTRING函数（SQL Server专用语法）
SUBSTRING(对象字符串，截取的起始位置，截取的字符数)
Oracle和DB2将该语法进一步简化，得到了如下结果。
语法6-8b SUBSTR函数（Oracle/DB2专用语法）
SUBSTR(对象字符串，截取的起始位置，截取的字符数)
6-1 各种各样的函数 189 ●
SQL有这么多特定的语法，真是有些让人头疼啊。各DBMS中能够得到与代码清
单6-11相同结果的专用语法如下所示。
SQL Server
SELECT str1,
SUBSTRING(str1, 3, 2) AS sub_str
FROM SampleStr;
Oracle DB2
SELECT str1,
SUBSTR(str1, 3, 2) AS sub_str
FROM SampleStr;
■UPPER——大写转换
语法6-9 UPPER函数
UPPER(字符串)
KEYWORD UPPER函数只能针对英文字母使用，它会将参数中的字符串全都转
●UPPER函数
换为大写（代码清单6-12）。因此，该函数并不适用于英文字母以外的情况。
此外，该函数并不影响原本就是大写的字符。
代码清单6-12 将小写转换为大写
SELECT str1,
UPPER(str1) AS up_str
FROM SampleStr
WHERE str1 IN ('ABC', 'aBC', 'abc', '山田');
执行结果
str1 | up_str
------+--------
abc | ABC
山田 | 山田
ABC | ABC 凡 例
aBC | ABC up_str：UPPER(str1)的返回值
与之相对，进行小写转换的是LOWER函数。
● 190 第6章 函数、谓词、CASE表达式
日期函数
KEYWORD 虽然SQL中有很多日期函数，但是其中大部分都依存于各自的DBMS，
●日期函数
因此无法统一说明A。本节将会介绍那些被标准SQL承认的可以应用于
注A 绝大多数DBMS的函数。
如果想要了解日期函数的详细
内容，目前只能查阅各个DBMS的 ■CURRENT_DATE——当前日期
手册。
语法6-10 CURRENT_DATE函数
CURRENT_DATE
KEYWORD CURRENT_DATE函数能够返回SQL执行的日期，也就是该函数执
●CURRENT_DATE函数
行时的日期。由于没有参数，因此无需使用括号。
执行日期不同，CURRENT_DATE函数的返回值也不同。如果在
2009年12月13日执行该函数，会得到返回值“2009-12-13”。如果在
2010年1月1日执行，就会得到返回值“2010-01-01”（代码清单6-13）。
代码清单6-13 获得当前日期
PostgreSQL MySQL
SELECT CURRENT_DATE;
执行结果
date
------------
2016-05-25
该函数无法在SQL Server中执行。此外，Oracle和DB2中的语法略
有不同。
特定的SQL
SQL Server使用如下的CURRENT_TIMESTAMP（后述）函数来获得当前日期。
SQL Server
-- 使用CAST（后述）函数将CURRENT_TIMESTAMP转换为日期类型
SELECT CAST(CURRENT_TIMESTAMP AS DATE) AS CUR_DATE;
6-1 各种各样的函数 191 ●
执行结果
CUR_DATE
----------
2010-05-25
在Oracle中使用该函数时，需要在FROM子句中指定临时表（DUAL）。而在DB2
中使用时，需要在CRUUENT和DATE之间添加半角空格，并且还需要指定临时表
SYSIBM.SYSDUMMY1（相当于Oracle中的DUAL）。这些容易混淆的地方请大家多
加注意。
Oracle
SELECT CURRENT_DATE
FROM dual;
DB2
SELECT CURRENT DATE
FROM SYSIBM.SYSDUMMY1;
■CURRENT_TIME——当前时间
语法6-11 CURRENT_TIME函数
CURRENT_TIME
KEYWORD CURRENT_TIME函数能够取得SQL执行的时间，也就是该函数执
●CURRENT_TIME函数
行时的时间（代码清单6-14）。由于该函数也没有参数，因此同样无需使
用括号。
代码清单6-14 取得当前时间
PostgreSQL MySQL
SELECT CURRENT_TIME;
执行结果
timetz
-----------------
17:26:50.995+09
该函数同样无法在SQL Server中执行，在Oracle和DB2中的语法
同样略有不同。
● 192 第6章 函数、谓词、CASE表达式
特定的SQL
SQL Server使用如下的CURRENT_TIMESTAMP函数（后述）来获得当前日期。
-- 使用CAST函数（后述）将CURRENT_TIMESTAMP转换为时间类型
SELECT CAST(CURRENT_TIMESTAMP AS TIME) AS CUR_TIME;
执行结果
CUR_TIME
----------------
21:33:59.3400000
在Oracle和DB2中使用时的语法如下所示。需要注意的地方和CURRENT_DATE
函数相同。在Oracle中使用时所得到的结果还包含日期。
Oracle
-- 指定临时表（DUAL）
SELECT CURRENT_TIMESTAMP
FROM dual;
DB2
/* CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1 */
SELECT CURRENT TIME
FROM SYSIBM.SYSDUMMY1;
■CURRENT_TIMESTAMP——当前日期和时间
语法6-12 CURRENT_TIMESTAMP函数
CURRENT_TIMESTAMP
KEYWORD CURRENT_TIMESTAMP函数具有CURRENT_DATE + CURRENT_
●CURRENT_TIMESTAMP
TIME的功能。使用该函数可以同时得到当前的日期和时间，当然也可以
函数
从结果中截取日期或者时间。
代码清单6-15 取得当前日期和时间
SQL Server PostgreSQL MySQL
SELECT CURRENT_TIMESTAMP;
执行结果
now
---------------------------
2 016-04-25 18:31:03.704+09
6-1 各种各样的函数 193 ●
注A 该函数可以在SQL Server等各个主要的DBMS中使用A。但是，与
之前我们已经介绍过，在SQL 之前的CURRENT_DATE和CURRENT_TIME一样，在Oracle和DB2
Server中无法使用CURRENT_
DATE和CURRENT_TIME函 中该函数的语法略有不同。
数。可能是因为在SQL Server中，
CURRENT_TIMESTAMP已经涵盖
了这两者的功能吧。 特定的SQL
Oracle和DB2使用如下写法可以得到与代码清单6-15相同的结果。其中需要注意的
地方与CURRENT_DATE时完全相同。
Oracle
-- 指定临时表（DUAL）
SELECT CURRENT_TIMESTAMP
FROM dual;
DB2
/* CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1 */
SELECT CURRENT TIMESTAMP
FROM SYSIBM.SYSDUMMY1;
■EXTRACT——截取日期元素
语法6-13 EXTRACT函数
EXTRACT(日期元素 FROM 日期)
KEYWORD 使用EXTRACT函数可以截取出日期数据中的一部分，例如“年”
●EXTRACT函数
“月”，或者“小时”“秒”等（代码清单6-16）。该函数的返回值并不是日
期类型而是数值类型。
代码清单6-16 截取日期元素
PostgreSQL MySQL
SELECT CURRENT_TIMESTAMP,
EXTRACT(YEAR FROM CURRENT_TIMESTAMP) AS year,
EXTRACT(MONTH FROM CURRENT_TIMESTAMP) AS month,
EXTRACT(DAY FROM CURRENT_TIMESTAMP) AS day,
EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AS hour,
EXTRACT(MINUTE FROM CURRENT_TIMESTAMP) AS minute,
EXTRACT(SECOND FROM CURRENT_TIMESTAMP) AS second;
执行结果
now | year | month | day | hour | minute | second
--------------------------+------+-------+-----+------+-------+-------
2010-04-25 19:07:33.987+09 | 2010 | 4 | 25 | 19 | 7 | 33.987
● 194 第6章 函数、谓词、CASE表达式
需要注意的是SQL Server也无法使用该函数。
特定的SQL
KEYWORD SQL Server使用如下的DATEPART函数会得到与代码清单6-16相同的结果。
●DATEPART函数
（SQL Server） SQL Server
SELECT CURRENT_TIMESTAMP,
DATEPART(YEAR , CURRENT_TIMESTAMP) AS year,
DATEPART(MONTH , CURRENT_TIMESTAMP) AS month,
DATEPART(DAY , CURRENT_TIMESTAMP) AS day,
DATEPART(HOUR , CURRENT_TIMESTAMP) AS hour,
DATEPART(MINUTE , CURRENT_TIMESTAMP) AS minute,
DATEPART(SECOND , CURRENT_TIMESTAMP) AS second;
Oracle和DB2想要得到相同结果的话，需要进行如下改变。注意事项与CURRENT_
DATE时完全相同。
Oracle
-- 在FROM子句中指定临时表（DUAL）
SELECT CURRENT_TIMESTAMP,
EXTRACT(YEAR FROM CURRENT_TIMESTAMP) AS year,
EXTRACT(MONTH FROM CURRENT_TIMESTAMP) AS month,
EXTRACT(DAY FROM CURRENT_TIMESTAMP) AS day,
EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AS hour,
EXTRACT(MINUTE FROM CURRENT_TIMESTAMP) AS minute,
EXTRACT(SECOND FROM CURRENT_TIMESTAMP) AS second
FROM DUAL;
DB2
/* CURRENT和TIME之间使用了半角空格，指定临时表SYSIBM.SYSDUMMY1 */