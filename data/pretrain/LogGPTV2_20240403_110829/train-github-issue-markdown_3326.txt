**I'm submitting a ...** (check one with "x")
    [ ] bug report => search github for a similar issue or PR before submitting
    [*] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
The developer needs to think on three different options (imports, declares or
providers) for deciding where to put the related code.
    @NgModule({
      imports:      [ CommonModule, FormsModule ],
      declarations: [ ContactComponent, HighlightDirective, AwesomePipe ],
      exports:      [ ContactComponent ],
      providers:    [ ContactService ]
    })
    export class ContactModule { }
**Expected/desired behavior**  
Use a single attribute (e.g.: 'imports') to simplify the way things should be
imported by a module. The framework should be smart enough to detect (at
runtime) the type of each imported entry (if required).
**Reproduction of the problem**  
If the current behavior is a bug or you can illustrate your feature request
better with an example, please provide the steps to reproduce and if possible
a minimal demo of the problem via https://plnkr.co or similar (you can use
this template as a starting point:
http://plnkr.co/edit/tpl:AvJOMERrnz94ekVua0u5).
**What is the expected behavior?**
    @NgModule({
      imports:      [ CommonModule, FormsModule,                     
                      ContactComponent, HighlightDirective, AwesomePipe,
                      ContactService]
      exports:      [ ContactComponent ]
    })
    export class ContactModule { }
**What is the motivation / use case for changing the behavior?**  
Simplify. Less code to think about, less code to write, and less code to
maintain.
**Please tell us about your environment:**
  * **Angular version:** 2.0.0-rc.5
  * **Browser:** [all | Chrome XX | Firefox XX | IE XX | Safari XX | Mobile Chrome XX | Android X.X Web Browser | iOS XX Safari | iOS XX UIWebView | iOS XX WKWebView ]
  * **Language:** [all | TypeScript X.X | ES6/7 | ES5]  
TypeScript