 **Context:**
  * Playwright Version: 1.27.0
  * Operating System: Mac
  * Node.js version: 16 LTS
  * Browser: All
**Code Snippet**
I couldn't get it working in CodeSandbox but please see the reproduction here
(or try a sandbox)
  1. run `npx playwright test`\- the test should pass
  2. uncomment `import {testData} from '../mockData'` in the `repro.test.ts` file
  3. run the test again
**Describe the bug**
The test will fail on the second run with an error, event though the import
that is causing the error in `mockData.ts` is not used by the playwright test
itself. This also appears when our `mockData.ts` file imports types from other
files, and in going to those files playwright evaluates module level js that
would not normally be run (e.g. outside of NextJs runtime). We don't see this
behaviour with jest when running unit tests.
We have a general mock data file that is used across our unit/integration/e2e
tests, which contains info such as dummy card details, mock redux state,
pretend user details etc. Importing anything from this file in our playwright
tests seems to result in playwright evaluating every single import in that
file rather than just using what it needs.
There is a similar issue here (#18150) which relates to using experimental
components and not being able to import anything other than components. We
aren't using component testing, and either way I would consider the `mockData`
file to essentially be our helper in that scenario.