## Page 491
数据的流程化管理上下一些功夫，这也是元数据梳理中最有难度的一部分内容。
它们之间并没有因果关系，是无法给出明确的标准和建议的，所以在这个方面我们需要在元
改来完成，而应该是通过流程来触发，因为元数据的维度是相对固定的；但是如何触发关联，
化，我们怎么去有效管理呢，需要明确的一点是，对于元数据的管理，不应该是通过手工修
13.1.4
信息，对于业务使用来说是一种很好的补充。
例的数据库对象做了变更。
显示近3天的备份情况。
业务简称、业务描述、归属部门、业务负责人等。
来，如应用维度；以上信息的小结如下：
工单、监控等，同时也可以把已有维度的信息补充起
的方式把这些配置维度也组织起来，比如备份、恢复、
图13-7所示。
示明细信息。
一（3）工单维度：相关的工单信息，比如在某个实
（2）备份维度：相关的实例备份记录信息，比如
这样一来，如果只是查看实例的信息，却发现同时会有备份、工单、监控等维度的
（4）报警维度：抽取接口得到报警的相关信息。
（1）应用维度：补充应用维度的属性信息，比如
这些配置维度是元数据的消费方，可以通过有效
明确了元数据的通用查询之后，我们可以对元数据进行有效查询，但是元数据发生了变
（5）监控维度：得到概览的监控信息。
在这个过程中需要补充的是一些其他维度的信息，我们理解为元数据的配置维度，如
通过IP信息进行信息下钻，
（8）根据用户组来鉴别权限，如果不属于这个组，可以提示数据库类型，但是不显
（7）如果IP 对应的业务有主机故障和实例故障，要明确给出提示信息。
（6）如果IP对应的业务已下线，要明确提示出来。
（5）女
（4）
（3）1
（2）如果IP为从库信息，
（1）如果IP为主库信息，
根据IP信息查询是其中一个核心功能，功能设计上可以参考如下的规则：
元数据流程管理
如果IP 为多网卡附加 IP，能够定位到实例信息。
如果 IP 为 VIP，能够定位到实例信息。
如果 IP 为中间件 IP，能够定位到集群信息。
，能够定位到主库及集群相关信息。
，能够定位到从库及集群信息。
映射到集群和应用，
使得元数据的维护更加清晰明确。
第13章MySQL运维基础架构设计|469
配置维度
图13-7
任务配置
字典管理
高可用配置
报警配置
密码管理
监控配置
binlog配置
备份配置
---
## Page 492
470丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
是误解，如不校正，就会为工作埋下隐患。我们分两个方面来说。
Slave 等）、数据版本和应用信息等。其实我们对这些信息的理解存在很大的偏差，甚至
13.1.5
比如实例部署的时候，如果新增了实例，就需要映射其他几个维度的元数据信息，包含
来，当然根据不同的业务场景会有一定的偏差。
数据库实例的角色分为了4类，如下图13-9所示。
个明确的数据字典来标识这个角色的，所以我们需要对已有的这些认知做一些梳理。我们把
主库也是从库，那么到底应该标识 Master 还是 Slave，况且 MySQL 数据字典里面是没有一
一些配置元数据。
比如一个数据库实例角色是Master，但是实际上它没有从库或者一个级联节点，它既是
1．数据库实例角色的认知偏差
通常我们理解的实例管理，基本信息应该包括IP、端口、机房、数据库角色（Master,
如果服务下线，流程是相对复杂的，会涉及多个维度的信息关联更新。
可以看到，我对一些常见的业务流程进行了梳理，对关联关系的联动进行了总结，
级联主机配置信息，生成futurejob回收资源
我整理了如下图13-8所示的元数据管理流程图，把常见的一些业务常见都组合了起
注册默认的管理员密码到密
如何玩转MySQL实例信息管理
切换其他的执行任务，任务配置
换主库的crontab
修改服务器主从信息，默认主库
查看实例概要信息，检查是否存在
户信息
数据库实例概要信息
数据库实例概要信息
修改实例明
修改备份配置
新增
用配置
查询
数据库权限开通
修改
查询
修改
高可用切换
服务下线
元数据流程管理
图13-8
数据恢复
实例部署
新增恢复日志记录
单机部署，集群部署
修改
新增
查询
注册默认的管理员密码到密码管理配置
注册监控配置
查看实例概要信息
信息
检查是否存
---
## Page 493
个关系图。
联关系的存在，但是如果我们对这些数据进行抽象，就很快能够得到下图13-12这样的一
可以在这个基础上进行扩展。
show slave status 这三条命令来判断，流程图如下图13-10所示。
一个基本信息列表。
面对这样一个关系，
比如下面的 IP 信息，数据库角色是中继节点 RelayDB，
可以通过这种方式来标识已有的实例角色，
我们来总结一下这些角色的逻辑，主要是通过 show slave hosts、show processlist 和
在已有的 Master 和 Slave 的基础上，我们补充了 RelayDB 和 SingleDB。
没有备份，没有从库的实例
级联节点，既是主库也是从库
SingleDB
RelayDB
如果自己来刻意维护，
否有repl线程
MySQL实例角色
图13-10
Showslavehosts
图13-9
其实很容易迷茫，或者意识不到这种级
使得实例的角色管理能够有章可循，并
我们得到下图13-11所示的
Slave
Master
第13章MySQL 运维基础架构设计丨471
，我们常规理解的从库，只读
我们常规理解的主库，可写入
---
## Page 494
472丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
更需要的，
数据文件路径、buffer_pool大小、是否开启 binlog、server_id、VIP 等这些信息才是我们
际需求，比如一个MySQL 服务端配置，是否开启GTID、版本、角色、socket 文件路径、
需要，完全可以借助图的方式来展现。
3306
3306
4306
确切的说，上面的这些实例信息只是通用信息，属于概要信息，很难满足业务的实
这样一来，关系图有了前面的数据支撑，
2.
瘤
福
开
开倍
开
开密
实例明细信息的更新
2131
1360
一个基本的展示界面如下图13-13所示。
2600
3600
7200
5120
5120
机房
5.5.19-1og
5.5.19.log
5.5.19-10g
5.716-10-0g
5.5.19-log
5.519-1og
55.19-10g
124.196
124.16
28.246
OFF
OFF
OFF
3306
3306
Idata/mysol_.4306/data
pbsu
datarmysqldatal
tata/mysqlitbi
idata/mysqlidbl
idatamysql_4308data
ldata/mysql4306/data/
124.16
124.76
图13-13
图13-12
图13-11
MySQL
MySQL
MySQL
cataysql.4306mmysq.sock
taysq4300tpmysqsock
类型
datayslyqlsock
dat/mysqltmg/mysgl.sock
/tmp/mysqlsock
/tmpimysql.sock
/data/mysol_4306itmp/mysql.sock
一来可以明确已有的实例信息，
124.196
RelayDB
RelayDB
RelayDB
角色
Master信息
gbk
abk
utf8
LUTB
ut8
124.16.3306MySQL55.19
124.16:3306
124.76:3306MySQL5.5.19
#
21211
21210
21169
21168
150157
12414
MySQL5.5.19
版本
None
9:3306
二来如果
---
## Page 495
的措施，一旦问题上升为故障，这个影响力和前期的技术债就会是雪崩式涌来。
障，另外还有一起重伤、死亡事故。在问题没有成为故障之前，我们有无数种可以弥补
清楚之后，就会有一种豁然开朗的感觉。
模型不够严谨，所以模型也要升级，数据还需要持续稽核，梳理的时候痛苦，但是整理
容易误判。
二个网卡注册，导致实例管理时会有很多冗余的实例。
是使用VIP 来注册，有些服务器有多个网卡，有的用第一个网卡地址注册，则有的用第
导致元数据不够准确的原因。
着元数据的接入，会发现已有的模型在灵活度和扩展性方面就会存在一些欠缺，这也是
如果元数据都不能保证准确的话，那后期的工作就步履维艰了。
13.1.6
上做到更好的保障。
来进行稽核，因为流程会有欠缺，人也可能会遗漏变更，周期性的任务会在这些基础之
管理的过程真正“动”起来，尤其是在变更频繁的场景中。
让数据的收集实现自动化，批量完成，而不需要手工来触发完成。
以让它变得高大上一些，比如我们把信息收集后使用前端页面做汇总和信息稽核，比如
的管理我们需要也做一些改变。整个信息的收集看起来是重复性的工作，实际上我们可
（2）通过周期性任务来抽取和稽核，元数据的一些固有属性应该通过周期性的任务
（2）有的实例主从配置不规范，比如 repl 用户的命名不统一，
海因里希法则说：当一个企业有300起隐患或违章，非常可能要发生 29起轻伤或故
数据稽核和修正的过程，消耗的时间和精力成本较大，而且是一个持续的过程，随
诸如此类的问题，看起来很细碎，在碰到问题去检查的时候才可能意识到是原来的
（5）有的服务器可以连接，但是数据库的用户配置有问题，导致实例无法登录。
（4）有的服务器仍在线，但是服务却无法连接。
（3）有的服务器已经标识下线，但是通过远程工具还可以正常连接。
（1）对于IP地址的理解不同，比如实例的粒度为IP 和端口的组合，但是有的元数据
（6）有的节点是单点实例，没有备份也没有从库。
元数据稽核中发现的一些问题大体有：
由于数据的沉淀和数据的录入过程中的不规范，发现元数据会存在越来越多的问题，
对于数据稽核的内容，我们需要展开来说明一下。
（1）通过业务流程触发，流程化的元数据联动是非常必要的，这种方式就会让数据
总体来说，元数据的联动过程涉及以下两种实现方式：
有了这些信息，才能够让我们对于实例有一个更加清晰地理解，当然对于实例信息
数据库元数据稽核实践
第13章MySQL运维基础架构设计丨473
导致信息采集的时候
---
## Page 496
474丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
qlen 1000
qlen 1000
批量连接。
芽阶段。有以下的一些建议供参考：
续可以继续检查实例层面的 IP 配置等。通过这些筛选，能把很多潜在的问题都消灭在萌
不是通过一种一刀切的方式来妄图达到所有的目标。
3：
2: eth0:  mtu 1500 qdisc mq state
1:1o: mtu 65536 qdisC noqueue state UNKNOWN
（2）检测实例是否可连接，可以使用类似 mysql-uxxx-pxxx-hxxx-Pxxx的方式来
（3）VIP映射的逻辑，
（1）检测服务可用性，比如发送一个简单的命令，如hostname 等，只要正常返回即可。
第一个阶段里，如果服务器不可访问，后续的流程都不用走了。如果实例可用，后
我初步设计了如下图13-14所示的数据稽核拓扑图。
所以用了多个维度去梳理元数据之后，我觉得需要通过循序渐进的方式来梳理，而
ethl:
1ink/1oopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
inet
inet
服务可用性检查
102
102
link/ether 00:50:56:b2:a4:ea brd ff:ff:ff:ff:ff:ff
<BROADCAST,
1ink/ether 00:50:56:ab:be:c7
.130.
130
121
可以打个比方，
,MULTICAST,UP,LOWER
249/23
管理
不可连接实例
故障服务器
图13-14
，如下是一个服务器的 IP信息明细。
102
数据库角色梳理
多网卡IP信息抽取
VIP信息抽取
brd ff:ff:ff:ff:ff:ff
UP
mtu
Master,Slave信息稽核
inet127.0.0.1/8