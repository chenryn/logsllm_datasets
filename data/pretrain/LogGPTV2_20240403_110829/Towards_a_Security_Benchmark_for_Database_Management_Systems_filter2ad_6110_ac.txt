CUSTOMER
C_ID
C_FNAME
C_LNAME
C_PHONE
C_EMAIL
C_SINCE
C_LAST_VISIT
C_DISCOUNT
C_BALANCE
C_YTD_PMT
C_BIRTH_DATE
C_DATA
C_ADDR_ID
ADDRESS
ADDR_ID
ADDR_STREET1
ADDR_STREET2
ADDR_CITY
ADDR_STATE
ADDR_ZIP
ADDR_CO_ID
Figure 1. Data model to assess DBMS security. 
After  defining  the  data  model,  we  need  to  classify 
each  table  according  to  the  data  criticality  levels  pro-
posed  in  Subsection  2.1.  Table  3  shows  the  proposed 
classification for the data model shown in Figure 1. 
To  test  mechanisms  like  user  authentication  and 
privileges  we  need  to  define  the  set  of  database  users 
that will access each of the tables and define privileges 
for those users.  
Taking into account the business represented by the 
data  model  shown  in  Figure  1,  we  have  identified  the 
following five database accounts (each account should 
represent  several  concrete  users):  Admin  (database 
administrator),  Client  (this  account  represents  all  the 
clients  of  the  online  store),  PubMan  (account  that 
manages  the  publications),  OrderMan  (account  that 
manages/dispatches  the  orders  from  the  clients),  and 
Owner  (account  that  owns  the  database  tables).  Note 
that the account Owner is not used to access the tables 
through  the  client  applications  and  is  only  meant  to 
store  the  tables  (this  is  a  common  approach  in  typical 
database applications). 
Table 3. Data criticality levels for each table. 
Data Criti-
cality Level
Tables 
Level 1 
COUNTRY 
Level 2 
ITEM 
AUTHOR 
Level 3 
CUSTOMER 
ADDRESS 
ORDER 
ORDER_LINE
Level 4 
USER 
Level 5  CREDIT_CARD
Comments 
The  data  in  table  COUNTRY  can 
easily  be  recovered  and  does  not 
represent confidential information 
These tables contain data that must 
be  protected  against  unauthorized 
alteration. It isn’t critical if this data 
is read by an unauthorized person 
These tables contain data that must 
be  protected  against  unauthorized 
read  and  alteration.  While  it  is  not 
critical  if  an  unauthorized  person 
reads the data in the ITEM table, it 
is  critical  if  someone  accesses  or 
changes  the  data  related  to  the 
organization’s clients 
Usernames  and  passwords  must  be 
protected even if someone is able to 
break into the system. This way, the 
username  and  password 
the 
in 
USER table must be encrypted 
Credit  card  information  represents 
critical data that must be extremely 
protected  even  when  someone  is 
able  to  break  into  the  system.  Fur-
thermore,  the  accesses  or  altera-
tions to this data must be audited 
Table 4 presents the object privileges that each user 
will have over the tables of the data  model. The types 
of object privileges considered are: select (the user can 
select  data  from  the  table),  insert  (the  user  can  insert 
new  data  on  the  table),  update  (the  user  can  modify 
existing data), and delete (the user can delete data from 
the table). Note that the users Admin and Owner must 
possess full access to all the tables. 
Table 4. Object privileges assigned to each account. 
Tables 
Accounts 
Object Privileges 
COUNTRY 
ITEM, AUTHOR 
CUSTOMER, AD-
DRESS, ORDER, 
ORDER_LINE 
USER 
CREDIT_CARD 
Client,  PubMan, 
OrderMan 
Client 
PubMan 
OrderMan 
Client 
OrderMan 
Client 
Client 
OrderMan 
select, insert, update, delete
select 
select, insert, update, delete
select, update 
select, insert, update, delete
select, update 
select, insert, update 
insert 
select, update 
Table  5  presents  the  list  of  system  privileges  for 
each  account.  Note  that  the  database  administrator 
must have all system privileges available. 
Table 5. System privileges assigned to accounts. 
Accounts 
Owner 
System Privileges 
session,  alter 
session, 
create 
create/drop table 
Client, PubMan, OrderMan create session 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
3.2. Evaluating DBMS security mechanisms 
Table 6. Tests to verify DBMS security mechanisms.
As  mentioned  before,  a  set  of  tests  must  be  per-
formed  in  order  to  verify  which  of  the  requirements 
presented  in  Table  2  are  achieved.  This  way  Table  6 
presents  the  tests  proposed  for  each  requirement  (the 
second  column  is  the  reference  of  the  requirement  as 
was  specified  in  Table  2).  Note  that  the  requirements 
may 
characteris-
tics/functionalities  and/or  to  the  correct  configuration 
of the mechanism. Each requirement is fulfilled if it is 
possible to execute the corresponding tests. 
specific 
related 
be 
to 
One  important  aspect  related  to  the  security  tests 
presented  in  Table  6  is  that  in  the  evaluation  of  the 
performance  degradation  caused  by  the  encryption  in 
the  data  storage  (requirements  5.2  and  5.3)  only  con-
siders  the  selection  and  insertion  of  data  in  the  data-
base. Updating and deleting operations are not consid-
ered as the impact of encryption in these operations is 
similar to insert and select. This way, as the goal is to 
evaluate  the  performance  degradation  caused  by  en-
cryption  mechanisms  we  do  not  need  to  consider  all 
types of database operations. In fact, we only need to 
perform the basic operations to test the performance of 
the encryption and decryption methods. 
4. Assessing database installations security 
Security in a real database environment depends on 
the DBMS  and the  client applications.  Nevertheless, 
the  DBMS is  the key  component and  represents the 
ultimate layer in preventing unauthorized access to the 
data.  In  this  work  we  are  mainly  concerned  with  the 
evaluation  of  the  security  mechanisms  of  the  DBMS 
used  in  real  installations  and  the  security  aspects  of 
the  client  applications  are  outside  the  scope  of  our 
study. 
The  administration  of  large  databases  is  a  very 
complex task. A DBA is responsible for managing all 
aspects concerning the DBMS environment, including 
database  performance,  recovery  and  security.  Given
the  relevance of  security  issues,  especially  when  re-
lated to the security of sensitive data, the proposal of a
practical way to assess security in real database instal-
lations is of utmost importance. 
To  assess  security  in  systems  in  the  field  we  have 
to  define  a  set  of  generic  tests  applicable  in  different 
circumstances  (i.e.,  portable  across  different  database 
installations).  In  the  approach  to  compare  different 
DBMS proposed in Section 3, we have defined a typi-
cal  scenario,  which  is  used  as  a  security  benchmark 
for DBMS. However, as each system in the field repre-
sents a different situation, we cannot use that scenario 
to  evaluate  security  in  real  database  installations  (in 
Mech. Req.
Tests 
n
o
i
t
a
c
i
t
n
e
h
t
u
a
r
e
s
u
l
a
n
r
e
t
n
I
)
d
r
o
w
s
s
a
p
/
e
m
a
n
r
e
s
u
(
-
a
c
i
t
n
e
h
t
u
a
r
e
s
u
l
a
n
r
e
t
x
E
n
o
i
t
s
e
g
e
l
i
v
i
r
p
r
e
s
U
-
m
o
c
a
t
a
d
e
h
t
n
i
n
o
i
t
p
y
r
c
n
E
n
o
i
t
a
c
i
n
u
m
e
g
a
r
o
t
s
a
t
a
d
e
h
t
n
i