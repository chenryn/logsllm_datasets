### Environment
- Deno: 0.13.0
- V8: 7.7.200
- TypeScript: 3.5.1

### Problem Description
I recently wrote a function to format currency values, which I believe is a more sensible use of the `$` character as a function name in JavaScript. Here's the code:

```javascript
function $(dollarAmount) {
    const locale = 'en-US';
    const options = { style: 'currency', currency: 'USD' };
    return Intl.NumberFormat(locale, options).format(dollarAmount);
}

$(987654.321); // Expected output: '$987,654.32'
```

### Issue
When I run this code in Deno, I encounter the following error:

```
error: Uncaught ReferenceError: Intl is not defined
    at $ (:5:2)
    at :7:1
    at evaluate (js/repl.ts:87:34)
    at replLoop (js/repl.ts:145:13)
```

### Analysis
The error indicates that the `Intl` object, which is part of the ECMAScript Internationalization API, is not available in the current environment. This could be due to the version of Deno or the runtime configuration.

### Solution
To resolve this issue, you can either:
1. **Update Deno**: Ensure you are using a version of Deno that supports the `Intl` object.
2. **Polyfill**: Use a polyfill for the `Intl` object if you need to support older environments.

Here is an example of how to include a polyfill:

```javascript
import 'https://cdn.jsdelivr.net/npm/intl@1.2.5/dist/Intl.min.js';

function $(dollarAmount) {
    const locale = 'en-US';
    const options = { style: 'currency', currency: 'USD' };
    return Intl.NumberFormat(locale, options).format(dollarAmount);
}

console.log($(987654.321)); // Output: '$987,654.32'
```

By including the polyfill, you ensure that the `Intl` object is available, and your function should work as expected.