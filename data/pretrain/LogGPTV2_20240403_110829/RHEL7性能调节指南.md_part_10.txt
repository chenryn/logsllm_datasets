:::
::: para
此章中的参数都在 `/proc/sys/fs`{.filename} 内，除非另有标明。
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-File_system_parameters-aio_max_nr}[aio-max-nr]{.term}
:   ::: para
    定义在异步输入/输出环境中允许的最大事件数量。默认值为
    `65536`{.literal}。修改此值不会预分配或改变任何内核数据结构的大小。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-File_system_parameters-file_max}[file-max]{.term}
:   ::: para
    定义内核分配的最大的文件句柄数量。默认值与内核中的
    `files_stat.max_files`{.systemitem} 值相匹配，将此值设为最大值
    *`NR_FILE`*（8192，在红帽企业版 Linux 中）或是以下结果：
    :::
    ``` screen
    (mempages * (PAGE_SIZE / 1024)) / 10
    ```
    ::: para
    增加此值可以解决由于缺少可用的文件句柄而引起的错误。
    :::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuring_system_memory_capacity-Kernel_parameters}4.3.2.3. 内核参数 {.title}
:::
::: para
此章中的参数都在 `/proc/sys/kernel`{.filename} 内，除非另有标明。
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-msgmax}[msgmax]{.term}
:   ::: para
    以字节为单位，定义任何一个在信息队列中的信息可能的最大值。该值不能超过队列的大小（*`msgmnb`*）。默认值为
    `65536`{.literal}。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-msgmnb}[msgmnb]{.term}
:   ::: para
    以字节为单位，定义每一个信息队列的最大值。默认值为
    `65536`{.literal}。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-msgmni}[msgmni]{.term}
:   ::: para
    定义信息队列标识符的最大数量（以及队列的最大数量）。在 64
    位架构的系统中，默认值为 `1985`{.literal}。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-shmall}[shmall]{.term}
:   ::: para
    定义页面上共享内存的总量，这些内存是系统可以同时使用的。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-shmmax}[shmmax]{.term}
:   ::: para
    定义页面上内核允许的单个共享内存片段的最大值。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-shmmni}[shmmni]{.term}
:   ::: para
    定义系统范围内最大的共享内存片段数量。在所有系统中的默认值为
    `4096`{.literal}。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Memory.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Kernel_parameters-threads_max}[threads-max]{.term}
:   ::: para
    定义系统范围内内核能同时使用的最大线程量。默认值与内核参数
    *`max_threads`* 相同，或为以下结果：
    :::
    ``` screen
    mempages / (8 * THREAD_SIZE / PAGE SIZE )
    ```
    ::: para
    最小值为 `20`{.literal}。
    :::
:::
:::
:::
:::
:::
[]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html}
::: chapter
::: titlepage
# [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems}第 5 章 存储和文件系统 {.title}
:::
::: para
此章节概述支持的文件系统和配置选项，此选项影响在红帽企业版 Linux 7 中
I/O 和文件系统的应用程序性能。〈[第 5.1 节
"注意事项"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Considerations){.xref}
〉讨论了影响性能的 I/O 和文件系统相关因素。〈[第 5.2 节
"性能问题监控和诊断"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Monitoring_and_diagnosing_performance_problems){.xref}〉教授如何使用红帽企业版
Linux 7 工具诊断与 I/O 或者文件系统配置细节相关的性能问题。〈[第 5.3 节
"配置工具"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Configuration_tools){.xref}
〉讨论了为解决红帽企业版 Linux 7中 I/O
和文件系统相关的性能问题，您可使用的工具和策略。
:::
::: section
::: titlepage
# [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Considerations}5.1. 注意事项 {.title}
:::
::: para
存储和文件系统性能的合理设置在很大程度上取决于存储目的。 I/O
和文件系统性能会受到下列因素的影响：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    数据写入或读取模式
    :::
-   ::: para
    数据重新排列与底层几何
    :::
-   ::: para
    块大小
    :::
-   ::: para
    文件系统大小
    :::
-   ::: para
    日记大小和位置
    :::
-   ::: para
    记录访问次数
    :::
-   ::: para
    确保数据可靠性
    :::
-   ::: para
    预取数据
    :::
-   ::: para
    预先分配磁盘空间
    :::
-   ::: para
    文件碎片
    :::
-   ::: para
    资源争用
    :::
:::
::: para
阅读此章节可了解影响文件系统吞吐量、可伸缩性、响应能力、资源使用和可用性的格式和挂载选项。
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Considerations-Solid_State_Disks}5.1.1. 固态硬盘 {.title}
:::
::: para
SSD（固态硬盘）使用闪存芯片而非旋转磁盘存储永久数据。它们为逻辑块地址内的全部数据提供恒定访问时间，且不会像它们旋转的对应物那样出现可测量的搜寻成本。每千兆字节的存储空间更昂贵且存储密度更小，但比
HDD 延迟时间短、吞吐量更大。
:::
::: para
当在 SSD
上使用的块接近磁盘容量，性能通常会降低。降低的程度因供应商的不同而异，在此情况下，所有设备性能都会降低。启用放弃有助于缓解性能降低；更多细节，请参见〈[第 5.1.4.3 节
"维护"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Generic_tuning_considerations_for_file_systems-Maintenance){.xref}〉
。
:::
::: para
默认 I/O 调度器和虚拟内存选项适用于 SSD。
:::
::: para
SSD 部署建议的更多信息，可从 《*红帽企业版 Linux 7 存储管理指南*》获得，
参见
。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Considerations-IO_Schedulers}5.1.2. I/O 调度器 {.title}
:::
::: para
I/O 调度器决定 I/O 操作何时运行在存储设备上以及运行多久。它也被称为 I/O
elevator（I/O 升降机）。
:::
::: para
红帽企业版 Linux 7 提供三种 I/O 调度器。
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-IO_Schedulers-deadline}[deadline]{.term}
:   ::: para
    除了 SATA 磁盘为所有块设备的默认 I/O 调度器。`Deadline`{.systemitem}
    尝试为指向到达 I/O
    调度器的请求提供有保障的延迟。该调度器适合大多数用例，尤其适用于读取操作比写入操作更频繁的请求。
    :::
    ::: para
    将排队的 I/O 请求分类为读或者写批处理，并按照 LBA
    递增顺序执行。默认设置下，读批处理优先于写批处理，这是因为应用更可能阻止读取
    I/O。批处理后，`deadline`{.systemitem}
    检查写入操作因等待处理器时间而处于多久的"饥饿"状态，并且适当地调度下一个读批处理或写批处理。解决批处理的请求数量、发出写批处理的读批处理数量、以及请求过期前的时间量都是可配置的，更多细节，请参见〈[第 5.3.4 节
    "调整期限调度器"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Tuning_the_deadline_scheduler){.xref}〉。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-IO_Schedulers-cfq}[cfq]{.term}
:   ::: para
    默认调度器只适用于标识为 SATA
    硬盘的设备。完全公平队列调度器，`cfq`{.systemitem}，将进程分成三个独立类别：实时、尽其所能和空闲。实时类别的进程总是先于尽其所能类别进程执行，而尽其所能类别进程总是在空闲类别进程之前执行。这意味着实时类别的进程可以使尽其所能和空闲进程等待处理器时间而忍受"饥饿"。默认设置下，分配进程到尽其所能类别。
    :::
    ::: para
    `Cfq`{.systemitem} 使用历史数据来预测应用是否会在不久之后发出更多
    I/O 请求。如果将有更多 I/O 请求，`cfq`{.systemitem} 空闲则会等待新的
    I/O，即使有来自其他进程的 I/O 在等待处理。
    :::
    ::: para
    因为有空闲的趋势，cfq 调度器不应用于连接不会引起大量搜寻
    penalty（惩罚）的硬件，除非它为此目的而被调整。cfq
    调度器也不应用于连接其他断续工作型调度器，例如基于主机的硬件 RAID
    控制器，因为这些调度器的堆积有造成大量延迟的趋势。
    :::
    ::: para
    `Cfq`{.systemitem}
    行为是可高度配置的，更多细节，请参见〈[第 5.3.5 节 "调整 cfq
    调度器"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Tuning_the_cfq_scheduler){.xref}
    〉。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-IO_Schedulers-noop}[noop]{.term}
:   ::: para
    `noop`{.systemitem} I/O 调度器执行简单的
    FIFO（先进先出）调度算法。请求通过简单的最后选中的缓存数据在一般块层合并。对于使用最快存储的受
    CPU 限制的系统，这是最佳调度器。
    :::
:::
::: para
设置不同默认 I/O
调度器的细节，或为特定设备指定不同的调度器，请参见〈[第 5.3 节
"配置工具"](#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Configuration_tools){.xref}〉。
:::
:::
::: section
::: titlepage