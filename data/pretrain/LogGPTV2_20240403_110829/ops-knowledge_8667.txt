User: We are writing a Python application that relies on copying and pasting content from the top windows.
To do that we issue sendkey commands:
Ctrl-Esc for going to the previous windows 
Ctrl-A  followed by Ctrl-C to copy all text from the window
And Cnrl-V to paste the the clipboard content to the top window.
Unfortunately at times we run into timing problems.
Is there some way to queue the SendKey commands so that 
Cntl-A waits for Alt-Esc, and then 
Cntl-C waits till Cntl-A is done? 
Or perhaps there is a way to know when each command is finished before sending the next one?
Thank you in advance for your help.
Assistant: No, I don't think so. You're talking about separate message queues here.  Alt+Esc is a global hotkey, presumably handled by windows explorer.  Ctrl+A and Ctrl+C are handled by the source app, and should be processed in order.  However, there will be a lag after the Ctrl+C, as the clipboard must be locked, cleared, and updated, and then clipboard notification messages are sent to all applications registered on the clipboard notification chain, as well as the newer clipboard notification API.  After all of those applications have had a chance to react to the data, THEN it is safe to paste with Ctrl+V.
Note that if you're running any sort of remote desktop software, you also have to wait for OTHER SYSTEMS to react to the clipboard notification, which will include syncing clipboard data across the network.
Now you see why this is hard. Sorry for the bad news.