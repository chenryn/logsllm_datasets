### Weighting of Public Lists and Its Effect on Password Guessability

We assigned weights to each condition, setting them to one-tenth, equal, and ten times the cumulative size of the public lists. Each weighting was tested on 500 additional passwords from each condition. Our findings indicate that the choice of weighting had a minor impact on guessability. There were few significant differences at one million, one billion, or one trillion guesses, with equal weighting occasionally outperforming the other two in certain conditions. Based on these results, we concluded that the choice of weighting is not particularly critical. However, for consistency and potential marginal benefits, we used equal weighting in all subsequent experiments involving our dataset.

### BFM Training and Efficiency

We also investigated the effect of training data on the performance of the BFM calculator using four different training sets: one with only public data, one combining public data with collected passwords across all conditions, and two specialized sets for basic8 and comprehensive8. Since the BFM algorithm will eventually guess every password, our focus was on efficiency rather than total cracking success. Adding cross-condition data had negligible effects, both at smaller and larger numbers of guesses. Specialized training for basic8 was similarly unhelpful. However, specialized training for comprehensive8 did improve efficiency, achieving 50% cracked passwords with about 30% fewer guesses.

### Effects of Test-Data Selection

Researchers often lack access to passwords created under specific password-composition policies. To address this, they typically start with a large set of passwords (e.g., the RockYou set) and filter out those that do not meet the desired policy. A critical question is whether such subsets are representative of passwords actually created under the specific policy. Our experiments show that these subsets are not representative and may contain passwords more resistant to guessing than those created under the policy in question.

We compared the guessability of 1,000 comprehensive8 passwords to 206 passwords that met the comprehensive8 requirements but were collected under other conditions (comprehensiveSubset). We conducted this comparison using two training sets: public data with an emphasis on RockYou passwords meeting comprehensive8 requirements (Experiment S1), and the same data enhanced with 2,000 collected comprehensive8 passwords (Experiment S2). Both experiments revealed significant differences in guessability, as shown in Figure 6. On average, 40.9% of comprehensive8 passwords were cracked, compared to only 25.8% of comprehensiveSubset passwords. The divergence between the two test sets was evident even at one billion guesses (6.8% vs. 0.5%).

When we excluded comprehensiveSubset passwords created under basic16, leaving 171 passwords, only 25.2% were cracked on average. This suggests that subsets drawn exclusively from less strict conditions are more difficult to guess than those created under stricter requirements. Further analysis of the structure distribution showed that comprehensiveSubset had greater diversity, explaining why comprehensive8 passwords were significantly easier to guess.

### Guessability and Entropy

Shannon entropy has historically been used to summarize password strength, but its effectiveness in reflecting guess resistance remains unclear. While entropy provides a theoretical lower bound on guessability, practical concerns often focus on the number of passwords that can be cracked within a given number of guesses. We examined the correlation between entropy and guess resistance using two independent measures: empirically calculated estimates and NIST estimates.

Empirically estimated entropy showed a significant correlation with the proportion of passwords cracked at one trillion guesses (Kendall’s τ = 0.71, Holm-corrected p = 0.042). However, this correlation was not significant at one million or one billion guesses. The same pattern was observed in our largest public-data experiment (P4). These results suggest that entropy might be useful for adversaries making a large number of guesses but not for smaller numbers.

NIST entropy produced three equivalence classes, as it does not account for dictionary size or implementation details. Our results show that variations in these factors lead to very different levels of password strength. Despite this, NIST entropy correctly ordered the equivalence classes based on guessability after 50 trillion guesses, suggesting it serves as a "rough rule of thumb."

### Discussion

#### Ethical Considerations

Our research primarily relies on passwords collected via a user study approved by our institution's IRB. We also used publicly available password lists like RockYou and MySpace, which have been used in various scientific studies. Using these lists for training and testing guessing algorithms does not increase harm to the victims and is relevant for evaluating password strength.

#### Ecological Validity

Our participants were younger and more educated than the general population but more diverse than typical small-sample studies. We tested two password-creation scenarios: a survey scenario for short-term, low-value accounts and an email scenario for longer-term, higher-value accounts. Users provided stronger passwords in the email scenario, consistent with choosing better passwords for high-value accounts.

To further validate our findings, we surveyed users of Carnegie Mellon University's email system, which uses the comprehensive8 policy. The university responses (n = 280) were closer to those of our comprehensive8 participants, showing that study participants make different decisions based on password-composition requirements.

#### Other Limitations

We tested multiple password-guessing tools, with the Weir algorithm performing best. While there may be more effective algorithms or training sets, most of our conclusions are robust, supported by multiple experiments and metrics. Our focus was on automated offline password-guessing attacks, and we did not account for other threats like phishing or shoulder surfing. The behaviors induced by different password-composition policies, such as writing down or forgetting passwords, were reported in prior work [46].

### Conclusion

Despite the increasing complexity of password-composition requirements, their actual value is poorly understood. This work introduces a new, efficient technique for evaluating password strength, applicable to various password-guessing algorithms and training sets. Our findings suggest that basic16 is superior to comprehensive8 against large numbers of guesses and is also easier for users. The effectiveness of a dictionary check depends heavily on the choice of dictionary, with a large, state-of-the-art blacklist being more effective than a standard dictionary. Our results also highlight the importance of using closely matched training data and the limitations of using subsets from larger corpora for characterizing password sets. Finally, while Shannon entropy is a convenient metric, it has limitations in predicting guessability.