Figure  2  was  generated  by  this algorithm.  This algorithm 
is sufficiently fast for practical  cases. In the experiment, all 
factor covering designs were constructed in a minute by the 
algorithm on a PC. 
3.2  Random Testing 
Random testing  is the most common method for black- 
box testing.  In this method, the values of the inputs in each 
test case are selected randomly,  regardless  of the previous 
tests applied.  Random testing and its variations  have been 
extensively  used  in  practice  [lo, 171.  In  our experiments 
we use the most conventional one which generates each test 
completely randomly. 
The variations  include, for example, [22, 231,  in  which 
random testing based on an input probability distribution  on 
the input domain is proposed.  If such information  is avail- 
able, this method  is preferable to the conventional  random 
testing. 
Mutation scores 
2-way 
36.8 
3-way 
70.5 
4-way  BMIS 
79.8 
89.8 
P Y T r  
Percentage Ex. T. S 
2.8 
7.4 
14.3 
8.7 
Table 4. Average percentage of the size of the 
exhaustive t e a  suites by ranges. 
NO. o f h s  1  2-way  1  3-way  I 4-way  I  BMIS 
I 1 9-1 I 7 12-14 
16.5 
1  17.6 
I 
32.9 
6.7 
2.0 
1.1 
5-8 
I 
I 
I 
I 
I 
2-way 
3-way 
4-way 
No.  ofVars 
-37.980.888.791.2 
-32.364.575.491.0 
74.1 
5-8 
9-1 1 
12-14 
40.9 
6.5.2 
BMIS 
86.9 
4  Experimental Results 
4.1  Specifications and Test Suites 
In  this section, we  consider  the  cost  and effectiveness 
of  using  the  three approaches.  As  in  [26], we conducted 
an  experimental analysis by  using 20 of  the  larger transi- 
tion  specifications  from the TCAS I1 specification.  They 
340 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:02:50 UTC from IEEE Xplore.  Restrictions apply. 
No.  ofVars 
VNF 
5-8 
9-1 I 
12-14 
avg 
33.7140.6 
38.6129.0 
41.0125.2 
37.6131.9 
ENF 
73.0167.3 
54.3153.9 
76.5148.9 
67.5157.1 
VRF 
21.4127.1 
25.8122.2 
32.2120.7 
26.2123.5 
ORF 
64.5158.4 
40.2141.9 
61.4140.0 
55.1l47.1 
ASF 
29.7142.9 
48.0129.8 
36.1134.1 
38.0135.7 
avg 
37.9140.8 
32.3128.5 
40.9127.3 
36.8132.4 
Table 7. Average mutation scores of 3-factor covering designs for each type of faults by ranges. 
1 
avg 
1  82.7153.9  1  89.6/78.5  I 60.8146.1  I  81.6/75.0  1  75.3/62.5  )I 
70.5 
] 
-  No. of Vars 
5-8 
9-1 I 
12- 14 
avg 
VNF 
92.41793 
80.4168.7 
77.4160.0 
83.7169.8 
ENF 
94.519 I .4 
94.5188.1 
96.9183.7 
95.2187.9 
VRF 
82.7169.1 
68.8159.8 
67.21.55.7 
73.2161.8 
ORF 
94.9188.0 
86.5179.1 
82.3176.2 
88.418 I .3 
ASF 
93.3177.7 
78.2167.9 
74.7169.3 
82.4171.7 
avg 
88.7177.9 
75.4166.4 
74.7162. I 
79.8169.1 
No.  of  Vars 
5-8 
9-1 I 
12-14 
avg 
VNF 
91.4/64.3 
91.6170.6 
88.0162.6 
90.4165.9 
ENF 
94.5/86.0 
98.1/91.7 
97.0185.7 
965187.9 
V RF 
89.3149.0 
88.8161.0 
84.21575 
87.6155.7 
ORF 
96.0177.5 
98.3179.1 
89.6174.4 
94.6177.7 
ASF 
90.4/60.6 
86368.2 
82.5170.6 
86.6166.3 
avg 
91.2162.1 
91.0167.9 
86.9164.0 
89.8164.7 
~ 
varied  in  size  from  5 to  14 variables.  In  Figure  I ,   the  20 
specifications are listed in ascending order of the number of 
variables. 
For each specification, we constructed test  suites by  us- 
ing all  the different  approaches.  BMIS was used  as a test 
generation method in the specification-based approach.  As 
for  combinatorial  testing,  we  used  2-factor,  3-factor,  and 
4-factor  covering  designs,  since they  were  similar  in  size 
to  test  suites  generated  by  BMIS. Thus by  using  the  two 
approaches, four test suites were constructed for each spec- 
ification. 
Table 1 shows the sizes of the generated test suites, repre- 
sented as percentages ofthe size of the exhaustive test suite 
for that  specification,  as well  as the average  size for each 
method.  In  all  tables,  2-,  3-,  and  4-way stand  for  2-,  3-, 
and  4-factor covering  designs, respectively.  For  example, 
Specification 1 contains five variables, and hence exhaustive 
testing would require 25 = 32 test cases.  Because the size 
of the 3-factor covering design obtained for this formula is 
15 as shown Figure 2, the entry  in Table  1 for the method 
x  100). The other entries 
and the specification is 46.9(= 
are computed similarly. 
In Table 1 ,  one can see that the relative size to the exhaus- 
tive test suite rapidly decreases with the number of variables 
for all the four methods.  In [ 5 ] ,  it is shown that the size of 
factor covering designs constructed by incrementally choos- 
ing the best test  cases grows at most  logarithmically in  the 
number of variables.  The algorithm described in Section 4.1 
is a heuristic approximation of this construction. The results 
in Table  1  show  that  logarithmic growth is exhibited even 
when  the  heuristic  version  is  adopted.  2-factor  covering 
designs and 3-factor covering designs were usually smaller 
than  test  suites generated  by  BMIS. Although the  average 
size of 4-factor covering designs was larger than BMIS, the 
sizes  of 4-factor covering  designs  were  approximately  the 
same as BMIS for most of the specifications; 
4.2  Mutation Analysis 
Here, we examine the effectiveness at detecting faults for 
each method.  In this paper, mutation analysis [8] is used as 
the basis for the assessment of effectiveness.  In this analysis, 
faulty specifications, called  mutunrs, are generated first.  A 
test suite constructed is then evaluated with mutation score, 
which is the percentage  of the number of mutants detected 
341 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:02:50 UTC from IEEE Xplore.  Restrictions apply. 
19 
20 
avg 
45.0 
23.5 
37.6 
29.0 
22.9 
31.9 
66.7 
94.4 
82.7 
45.0 
45.3 
53.9 
80.0 
82.4 
83.7 
56.0 
73.5 
69.8 
100.0 
100.0 
90.4 
74.0 
72.4 
65.9 
20 
17 
18.0 
to the total number of mutants. That is, 
Mutation  score = 
Number of mutants detected 
Number of all mutants 
x  100. 
Although we stated earlier that previously proposed  fault 
classes are not well justified, some assumption was needed to 
create mutants. In the experiment, we adopted the five fault 
models described in Section 2.2. Table 2 shows the mutation 
score for each method and each specification,  as well as the 
average mutation  score for each method.  In  the  table,  the 
mutation  scores obtained  by  BMIS  and  k-factor covering 
designs are compared with those by randomly  selected  test 
suites ofexactly the same size. The scores for random testing 
are the average of 10 trials.  The columns with a label starting 
with R shows the mutation score of a randomly selected test 
suite of size equal to that  of the test suite generated by the 
corresponding method.  As  shown  in  Table  2, we created 
from 33 to 341 mutants for each specification.  In each case, 
mutants of  all types VNF, ENF, VRF, ORF and ASF were 
included  in  the  analysis.  In  Tables  10-14, we  show  the 
mutation  scores, by  mutation types,  for each method and 
each specification. 
Table  3  directly  compares  the  average  mutation  scores 
for each method to those of random test suites of equal size. 
The tableâ€™s third row shows the average size of each method 
as percentages of the size of the exhaustive test suite. 
From these results, it is seen that test suites generated by 
BMIS were very effective on average, in comparison to not 
only randomly  selected test suites of the same size, but also 
to factor covering  designs.  Recall  that  test  suites obtained 
from 4-factor covering  designs are similar in  size to those 
generated  by  BMIS.  Thus  if  available,  the  specification- 
based approach is preferable. 
As for the two non-specification-based  approaches, there 