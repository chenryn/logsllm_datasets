title:Weak Links in Authentication Chains: A Large-scale Analysis of Email
Sender Spoofing Attacks
author:Kaiwen Shen and
Chuhan Wang and
Minglei Guo and
Xiaofeng Zheng and
Chaoyi Lu and
Baojun Liu and
Yuxuan Zhao and
Shuang Hao and
Haixin Duan and
Qingfeng Pan and
Min Yang
Weak Links in Authentication Chains: A Large-scale 
Analysis of Email Sender Spoofing Attacks
Kaiwen Shen, Chuhan Wang, and Minglei Guo, Tsinghua University; Xiaofeng 
Zheng, Tsinghua University and Qi An Xin Technology Research Institute; Chaoyi 
Lu and Baojun Liu, Tsinghua University; Yuxuan Zhao, North China Institute of 
Computing Technology; Shuang Hao, University of Texas at Dallas; Haixin Duan, 
Tsinghua University; Qi An Xin Technology Research Institute; Qingfeng Pan, 
Coremail Technology Co. Ltd; Min Yang, Fudan University
https://www.usenix.org/conference/usenixsecurity21/presentation/shen-kaiwen
This paper is included in the Proceedings of the 30th USENIX Security Symposium.August 11–13, 2021978-1-939133-24-3Open access to the Proceedings of the 30th USENIX Security Symposium is sponsored by USENIX.Weak Links in Authentication Chains:
A Large-scale Analysis of Email Sender Spooﬁng Attacks
Kaiwen Shen 1,∗, Chuhan Wang 1, ∗, Minglei Guo 1, Xiaofeng Zheng 1,2,†, Chaoyi Lu 1,
Baojun Liu 1,†, Yuxuan Zhao 4, Shuang Hao 3, Haixin Duan 1,2, Qingfeng Pan 5 and Min Yang 6
1Tsinghua University 2Qi An Xin Technology Research Institute 3University of Texas at Dallas
4North China Institute of Computing Technology 5Coremail Technology Co. Ltd 6Fudan University
Abstract
As a fundamental communicative service, email is playing an
important role in both individual and corporate communica-
tions, which also makes it one of the most frequently attack
vectors. An email’s authenticity is based on an authentication
chain involving multiple protocols, roles and services, the
inconsistency among which creates security threats. Thus, it
depends on the weakest link of the chain, as any failed part
can break the whole chain-based defense.
This paper systematically analyzes the transmission of an
email and identiﬁes a series of new attacks capable of bypass-
ing SPF, DKIM, DMARC and user-interface protections. In
particular, by conducting a "cocktail" joint attack, more real-
istic emails can be forged to penetrate the celebrated email
services, such as Gmail and Outlook. We conduct a large-
scale experiment on 30 popular email services and 23 email
clients, and ﬁnd that all of them are vulnerable to certain types
of new attacks. We have duly reported the identiﬁed vulner-
abilities to the related email service providers, and received
positive responses from 11 of them, including Gmail, Yahoo,
iCloud and Alibaba. Furthermore, we propose key mitigating
measures to defend against the new attacks. Therefore, this
work is of great value for identifying email spooﬁng attacks
and improving the email ecosystem’s overall security.
1 Introduction
Email service has been a popular and essential communicative
service with abundant individual and corporate information,
which makes it a key target of cyber attacks [22]. Yet, the
email transmission protocols are far from capable of counter-
ing potential attacks. An email system’s security relies on a
multi-party trust chain maintained by various email services,
which increases its systemic vulnerability to cyber attacks.
As the Wooden Bucket Theory reveals, a bucket’s capacity
is determined by its shortest stave. The authenticity of an
∗Both authors contributed equally to this work.
†Corresponding authors:{zxf19, lbj15}@mails.tsinghua.edu.cn.
email depends on the weakest link in the authentication chain.
Even a harmless issue may cause unprecedented damages
when it is integrated into a more extensive system. Generally,
the email authentication chain involves multiple protocols,
roles and services, any failure among which can break the
whole chain-based defense.
First, despite the existence of various security extension
protocols (e.g., SPF [24], DKIM [2] and DMARC [31]) to
identify spooﬁng emails, spooﬁng attacks might still succeed
due to the inconsistency of entities protected by different
protocols.
Second, authentication of an email involves four different
roles: senders, receivers, forwarders and UI renderers. Each
role should take different security responsibilities.
If any
role fails to provide a proper security defensive solution, an
email’s authenticity can not be guaranteed.
Finally, security mechanisms are implemented by different
email services with inconsistent processing strategies. Be-
sides, those security mechanisms are implemented by dif-
ferent developers, some of which deviate from RFC speciﬁ-
cations while dealing with emails with ambiguous headers.
Therefore, there are a number of inconsistencies among dif-
ferent services. Attackers can utilize these inconsistencies to
bypass the security mechanisms and present deceptive results
to the webmails and email clients.
This work systematically analyzes four critical stages of
authentication in the email delivery process: sending authen-
tication, receiving veriﬁcation, forwarding veriﬁcation and
UI rendering. We found 14 email spooﬁng attacks capable of
bypassing SPF, DKIM, DMARC and user-interface protec-
tions. By combining different attacks, a spooﬁng email can
completely pass all prevalent email security protocols, and no
security warning is shown on the receiver’s MUA. We show
that it is still challenging to identify whether such an email is
spooﬁng, even for people with a senior technical background.
To understand the real impacts of spooﬁng email attacks in
the email ecosystem, we conducted a large-scale experiment
on 30 popular email services with billions of users in total.
Besides, we also tested 23 popular email clients on different
USENIX Association
30th USENIX Security Symposium    3201
operating systems to measure the impact of attacks on the UI
level. All of them are vulnerable to certain types of attacks,
including reputable email services, such as Gmail and Out-
look. We have already duly reported all identiﬁed issues to
the involved email service providers and received positive re-
sponses from 11 of them (e.g., Gmail, Yahoo, iCloud, Alibaba
Cloud).
Our work shows the vulnerability of the chain-based au-
thentication structure in the email ecosystem. The attacks
reveal that more security issues are led by the inconsistency
among multiple parties’ understanding and implementation of
security mechanisms. To counter email spooﬁng attacks, we
proposed a UI notiﬁcation scheme. Coremail, a well-known
email service provider in China, has adopted our scheme and
implemented it on the webmails and email clients for users.
Besides, we have also released our testing tool on Github for
email administrators to evaluate and increase their security.
Contributions. To sum up, we make the following contribu-
tions:
• By analyzing the email authentication chain systemati-
cally, we identiﬁed a total of 14 email spooﬁng attacks,
9 of which (i.e., A3, A6, A7, A8, A9, A10, A11, A13, A14)
are new attacks, to the best of our knowledge so far. By
combining different attacks, we can forge more realistic
spooﬁng email to penetrate celebrated email services
like Gmail and Outlook.
• We conducted a large-scale measurement on 30 popular
email services and 23 email clients. We found all of them
are vulnerable to some of attacks. We have responsibly
disclosed vulnerabilities and received positive responses
from 11 email vendors (e.g., Gmail, Yahoo, iCloud and
Alibaba Cloud).
• To enhance the protection of email system against spoof-
ing attacks, we proposed a UI notiﬁcation scheme and
provided an email security evaluation tool for email ad-
ministrators to evaluate and increase their security.
2 Background
2.1 Email Delivery Process
Simple Mail Transfer Protocol (SMTP) [38] is a basic proto-
col for email services. Figure 1 shows the basic email delivery
process. An email written by a sender is transmitted from the
Mail User Agent (MUA) to the Mail Transport Agent (MTA)
via SMTP or HTTP protocol. Then, the sender’s MTA trans-
mits the email to the receiver’s MTA via the SMTP protocol,
which later delivers the email content to the receiver’s MUA
via HTTP, IMAP or POP3 [27] protocols.
Extra transmission needs could complicate the actual de-
livery process. When the original email’s target recipient is a
mailing list or conﬁgured with an automatic email forwarding
service, the email will be relayed through an email server,
such as the email forwarding server in Figure 1. The email
forwarding server will modify the receiver’s address and re-
deliver it.
Figure 1: The email delivery process.
In the SMTP communication process, a sender’s identity in-
formation is contained in multiple ﬁelds in a complex manner.
(1) Auth username, the username used in the AUTH command
to authenticate the client to the server. (2) MAIL From, the
sender on the envelope, is mainly used for identity veriﬁca-
tion during the email delivery process. (3) From, the sender in
the email body, is the displayed address that the email client
shows to the user. (4) Sender, the Sender ﬁeld is used to
identify the real sender when there are multiple addresses in
the From. The inconsistency of these ﬁelds provides the basis
for email spooﬁng attacks.
As shown in Figure 1, the authentication in the email trans-
mission process involves four important stages.
Email Sending Authentication. When sending an email
from the MUA via the SMTP protocol, the sender needs to
enter his username and password for authentication. In this
part, the sender’s MTA not only needs to verify the user’s
identity but also to ensure the Mail From is consistent with
the Auth username.
Email Receiving Veriﬁcation. When the receiver’s MTA
receives the email, MTA validates the sender’s authenticity
through SPF, DKIM and DMARC protocols. See Section
2.2.1 for details of these protocols.
Email Forwarding Veriﬁcation. Email automatic forward-
ing is another commonly used way to send emails. When a
forwarder automatically forwards an email, it should verify
the sender’s address. If the DKIM signature is enabled, the
original DKIM veriﬁcation status should be "pass" at ﬁrst,
then a new DKIM signature will be added. If the ARC [4]
protocol is deployed, the ARC veriﬁcation chain will also be
veriﬁed.
Email UI Rendering. This stage is to provide users with a
friendly email rendering display. Unfortunately, most popular
email clients’ UI will not present the authenticity check result
to users. Some encoding formats or special characters can
mislead receiver with a spooﬁng address. We argue that Email
UI rendering is the last but crucial step in the authentication
process, which is often overlooked in previous research.
3202    30th USENIX Security Symposium
USENIX Association
Figure 2: A spooﬁng email that fails the Sender Inconsistency
Checks.
2.2 Email Spooﬁng Protections
2.2.1 Email Security Extension Protocols
To defend against email spooﬁng attacks, various security
extensions have been proposed and standardized. At present,
SPF, DKIM and DMARC protocols are the most widely used
ones.
SPF. Sender Policy Framework (SPF) [24] is an IP-based
authentication protocol. It marks and records the sender’s
domain and IP address together. The receiver can determine
whether the email is from the claimed domain by querying
the SPF record under the DNS server corresponding to the
sender’s domain name.
DKIM. DomainKeys Identiﬁed Mail (DKIM) [9] is an au-
thentication protocol based on digital signatures. It uses an
asymmetric key encryption algorithm to allow a sender to add
a digital signature to an email’s header to identify spooﬁng
attempts during transmission. The receiver can retrieve the
sender’s public key from DNS querying to verify the signa-
ture, and then determine whether the email was spooﬁng or
modiﬁed.
DMARC. Domain-based Message Authentication, Reporting
and Conformance (DMARC) [31] is an authentication sys-
tem based on the results of SPF and DKIM veriﬁcation. It
introduces a mechanism for multiple authenticated identiﬁers
alignment, which associates the identity information in From
with the authenticated identiﬁer of SPF or DKIM. Meanwhile,
the domain owner can publish a policy suggesting solutions to
the recipient to handle unveriﬁed emails sent by this domain
name. The domain owner can get regular feedback from the
recipient. Speciﬁcally, DMARC employs an "or" status check
of the SPF and DKIM veriﬁcation results. If an email passes
the detection of either SPF or DKIM, and From can be aligned
with the authenticated identiﬁer, it passes the validation of
DMARC.
2.2.2 UI-level Spooﬁng Protections
UI rendering is a crucial part that affects the users’ perception
of an email’s authenticity. However, the necessity of increas-
ing UI level protection has not yet fostered any prevalent
security protocol. Each Email vendor employs different UI
level protections, and there is no widely accepted comprehen-
sive protection mechanism so far.
Figure 3: The Attack Model: a(cid:13), b(cid:13) and c(cid:13) represent shared
MTA Attack, Direct MTA Attack and Forward MTA Attack
respectively.
Sender Inconsistency Checks (SIC). As shown in Figure
2, some email services add a security indicator to alert the
receiver that the actual sender (MAIL From) may not be the
displayed one (From). It is worth noting that this inconsistency
exists throughout the email system, including email forward-
ing, alias, and email subscriptions. Therefore, the receiver’s
MTA cannot directly reject an email because of the inconsis-
tency, which lowers the success rate to detect spooﬁng emails.
However, the protection measure addressing this issue has
not received a clear deﬁnition in the industry yet. We deﬁne
this protection measure as the Sender Inconsistency Checks
(SIC).
3 Attack Model and Experiments
3.1 Attack Model
As shown in Figure 3, the attack model of email spooﬁng
attacks includes a trusted email sender (Alice, which has an
email account under a.com), a victim receiver (Bob, which
has an email account under b.com), and an adversary (Oscar).
Speciﬁcally, Oscar’s goal is to send an email to Bob, spooﬁng
PI:EMAIL and bypassing all security validation.
In general, there are three common types of email spooﬁng
attacks.
a(cid:13) Shared MTA Attack. We assume that Oscar has an
email account (PI:EMAIL), which is different from Al-
ice’s account (PI:EMAIL). Oscar can send spooﬁng emails
through the MTA of a.com by modifying the Mail From/
From/ Auth username headers. Since the credibility of the
sender’s MTA IP is an essential factor affecting the spam
engine’s decision algorithm [5], the spooﬁng email can easily
enter the victim’s inbox. The IP of the sender’s MTA is in
a.com’s SPF scope. The sender’s MTA may also automatically
attach DKIM signatures to the spooﬁng email. Therefore, Os-
car has little difﬁculty in bypassing the SPF/DKIM/DMARC
veriﬁcation and spoofs Alice@a.com.
b(cid:13) Direct MTA Attack. Oscar can also send spooﬁng emails
through his own email server. Note that the communication
process between the sender’s MTA and the receiver’s MTA
USENIX Association
30th USENIX Security Symposium    3203
spooﬁng attack using the direct MTA attack and forward MTA
attack models. The attack details are described in Section 5.
All the three email security protocols give "pass" veriﬁca-
tion results to the spooﬁng email. Furthermore, the receiver’s
MUA does not display any security alerts. The victim could
hardly recognize any traces of attack from such a seemingly
authentic spooﬁng email. Therefore, it is challenging to iden-
tify whether such an email is spooﬁng, even for people with
asenior technical background.
3.2 Experimental Target Selection
We systematically analyze 30 email services, including the
most popular free public email services, enterprise-level email
services and self-hosted ones. Our testing targets include
the public email services that have been measured by Hu
et al. [20], except for the ones that can neither be registered
in China (e.g., gmx.com and sapo.pt) nor have valid SMTP
services (e.g., tutanota.com and protonmail.com).
In total, we select 22 popular emails services that have
more than 1 billion users. We believe their security issues can
expose a wide range of common users to threats. Besides, we
also select 5 popular enterprise email services, including Of-
ﬁce 365, Alibaba Cloud and Coremail, to test the threat effect
on the institutional users. As for the self-hosted email systems,
we build, deploy and maintain 3 famous email systems (i.e.,
Zimbra, EwoMail, Roundcube).
Further, we test our attacks against 23 widely-used email
clients in different desktop and mobile operating systems to
evaluate the impact on the UI rendering implementation.
3.3 Experiment Methodology
This work aims to cover all possible veriﬁcation issues
throughout the email delivery process. Hence, we conduct a
ﬁve-step empirical security analysis:
First, we systematically analyze the email speciﬁcations.
In terms of syntax, we extract the ABNF rules [10], focusing
on headers (e.g., Mail From/From/Helo/Sender headers)
related to authentication. We also pay attention to seman-
tics, particularly the identity veriﬁcation of emails at each
stage in the RFCs. Second, we collect legitimate email sam-
ples and generate the test samples with authentication-related
headers based on the ABNF grammar [17]. Since common
email services usually refuse to handle emails with highly
deformed headers, we specify certain header values for our
empirical experiment purposes. For example, we limit the
value of domain to several famous email domain names (e.g.,
gmail.com, icloud.com). Third, we introduce the common
mutation methods in protocol fuzzing [35], such as header re-
peating, inserting spaces, inserting Unicode characters, header
encoding, and case variation. Fourth, we use the generated
samples to test the security veriﬁcation logic of the target
(a) Gmail’s Web UI does not display any spooﬁng alerts
(b) The spooﬁng email passes all email security protocol veriﬁcation
Figure
PI:EMAIL via Gmail.
4: A spooﬁng
example
to
impersonate
does not have an authentication mechanism. Oscar can spoof
an arbitrary sender by specifying the Mail From and the From