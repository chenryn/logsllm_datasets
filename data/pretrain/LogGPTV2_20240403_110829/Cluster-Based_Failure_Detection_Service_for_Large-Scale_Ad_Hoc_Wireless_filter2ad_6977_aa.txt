title:Cluster-Based Failure Detection Service for Large-Scale Ad Hoc Wireless
Network Applications
author:Ann T. Tai and
Kam S. Tso and
William H. Sanders
Cluster-Based Failure Detection Service for Large-Scale Ad Hoc Wireless
Network Applications
Ann T. Tai Kam S. Tso
IA Tech, Inc.
10501 Kinnard Avenue
Los Angeles, CA 90024
William H. Sanders
Coordinated Science Laboratory
University of Illinois
Urbana, IL 61801
Abstract
The growing interest in ad hoc wireless network appli-
cations that are made of large and dense populations of
lightweight system resources calls for scalable approaches
to fault tolerance. Moreover, the nature of these systems
creates signiﬁcant challenges for the development of failure
detection services (FDSs), because their quality often de-
pends heavily on reliable communication. In particular, ad
hoc wireless networks are notoriously vulnerable to mes-
sage loss, which precludes deterministic guarantees for the
completeness and accuracy properties of FDSs. To meet
the challenges, we propose an FDS based on the notion of
clustering. Speciﬁcally, we use a cluster-based communi-
cation architecture to permit the FDS to be implemented
in a distributed manner via intra-cluster heartbeat diffusion
and to allow a failure report to be forwarded across clusters
through the upper layer of the communication hierarchy.
In doing so, we extensively exploit the message redundancy
that is inherent in ad hoc wireless settings to mitigate the
effects of message loss on the accuracy and completeness
properties of failure detection. As shown by our mathemat-
ical analysis, the resulting FDS is able to provide satisfac-
tory probabilistic guarantees for the desired properties.
1
Introduction
Recent advances in MEMS (micro-electro-mechanical
systems) and wireless networking technologies have led to
a growing interest in applications that are made of large and
dense populations of lightweight, inexpensive system re-
sources. Examples of such applications include air-dropped
sensor networks, smart-dust devices, and micro-UAV or
nano-satellite swarms. Not surprisingly, those applications
will be built over ad hoc wireless networks, since it is im-
possible for them to have any ﬁxed communication infras-
tructure. In addition, such applications are often mission-
critical. For example, sensor networks are deployed to de-
tect potential threats to homeland security, to support crisis
management, or to help natural disaster relief and recovery
[1, 2]. However, due to their large sizes, lightweight compo-
nents, and inhospitable operational environments, such sys-
tems are particularly vulnerable to failures. Accordingly,
given the unattended nature of such systems, it is crucial
that the operation team be kept updated on the network’s
health. Such information could offer early warnings of
system failure (e.g., a signiﬁcant number of lost resources
may suggest an imminent system capacity exhaustion) and
would aid in maintenance scheduling for the deployment of
additional resources to the ﬁeld to preserve system capacity.
Failure detection services (FDSs) are thus important for
ad hoc wireless network applications that are built on large
and dense populations of lightweight resources. Nonethe-
less, the development of such services leads to greater chal-
lenges than those involved in the development of failure de-
tectors for traditional distributed systems. Speciﬁcally, the
large size and high population density of such networks of-
ten lead to scalability problems [1, 3]. Moreover, ad hoc
wireless networks are notoriously vulnerable to message
loss, which makes it difﬁcult to let every operational host
in the system be aware of detected failures and may cause
frequent false detections. Consequently, it is impossible
for an FDS to provide deterministic guarantees for com-
pleteness and accuracy (see Section 4.1 for the deﬁnitions)
in the context of ad hoc network applications. Recently,
researchers devised methods for wireless sensor network
monitoring (see [4], for example), proposed the use of heart-
beat mechanisms for connectivity probing in large sensor
networks (see [5], for example), and investigated the com-
munication strategies for heartbeat-style failure detectors in
ad hoc wireless network settings [6]. Nonetheless, efforts
that directly tackle failure detection problems themselves
for ad hoc network applications are still largely lacking.
With the above motivation and based on the observation
that clustering approaches have become an emerging tech-
nology for building scalable, robust, and energy-balanced
ad hoc network applications [1, 7], we derive a cohesive so-
lution for FDSs that exploits a cluster-based communication
hierarchy to achieve scalability, completeness, and accuracy
simultaneously.
More speciﬁcally, we use a cluster-based communica-
tion architecture to allow an FDS to execute in parallel in
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:03:37 UTC from IEEE Xplore.  Restrictions apply. 
clusters and to detect failures via intra-cluster heartbeat dif-
fusion. Further, if a failure is detected in a local cluster,
the detection result will be forwarded across the clusters,
in a way that is resilient to message loss and node failure,
through the upper layer of the communication hierarchy.
More importantly, this cluster-based architecture enables us
to extensively exploit the message redundancy that is in-
herent in ad hoc wireless networks to mitigate the effects
of message loss on the completeness and accuracy proper-
ties of failure detection. Consequently, the resulting FDS is
able to provide satisfactory probabilistic guarantees for the
desired properties.
The remainder of the paper is organized as follows. Sec-
tion 2 describes the application model, assumptions, ter-
minologies, and the problem we aim to solve. Section 3
presents a cluster-based communication architecture. Sec-
tion 4 discusses the implementation of the failure detection
service, followed by Section 5 which provides a probabilis-
tic analysis. Section 6 concludes the paper.
2 Fundamentals
2.1 Application Model
As described in Section 1, the type of system we con-
sider consists of a large, dense population of lightweight
resources and is built over ad hoc wireless networks. Ap-
plications of such systems often use localized algorithms to
enable hosts to interact with each other in clusters but col-
lectively achieve a global objective [1]. A system will nor-
mally have hundreds or thousands of hosts. Among those
hosts, some will be so-called “base-stations,” which are able
to transmit periodically, or on demand, the collected obser-
vations, measurements, and system conditions to an aircraft,
an LEO satellite, or another network [2].
While those large-scale systems emphasize localized
host interaction, local systems must be aware of condition
changes in the global system or changes of the global ob-
jective. In addition, the information collecting points (base-
stations) may be scattered in the ﬁeld. Accordingly, it is im-
portant to let the summary information regarding locally de-
tected failures be propagated to all the clusters to make the
failure information accessible anywhere in the system. Fur-
thermore, due to the redundancy in large-size high-density
systems, completeness and accuracy of failure detection are
more important than time to failure detection.
Nodes could be the hosts that become stationary after
deployment (as is assumed/postulated in most of the recent
investigations of large sensor networks) or mobile hosts that
have localization capability and may migrate in the ﬁeld
autonomously (e.g., nano-sat swarms or networks of smart
sensors). For simplicity, we do not address resource migra-
tion problems in this paper. Nonetheless, as sound cluster-
ing algorithms will support cluster and routing stability in
mobile ad hoc wireless settings [8, 9], our failure detection
framework can be extended accordingly to accommodate
host migration.
Hosts are equipped with solar cells for “energy harvest”
[10]; therefore, intra-cluster heartbeat diffusion with a rea-
sonably low frequency will be feasible. Finally, hosts may
fail over time. When the number of operational hosts drops
below a threshold, additional resources will be deployed
to replenish the system to maintain its population density.
On the other hand, excessive false detections will increase
maintenance cost signiﬁcantly and unnecessarily.
2.2 Assumptions
Our proposed FDS assumes a fail-stop model. In addi-
tion, we assume that a node will not fail during an FDS
execution. More precisely, if a node sends its heartbeat at
the epoch of a heartbeat interval φ (the duration between
two consecutive FDS executions), the node will not crash
within the FDS execution duration (a small fraction of φ).
Further, we assume that there will be no creations or alter-
ations of messages over the transmission links. However,
we assume that it is always possible for a message to be lost
during transmission with a non-negligible probability.
In addition, we assume that 1) the clock rate on each host
is close to accurate, and 2) in most cases the delay of mes-
sage delivery within the transmission range is smaller than
a reasonable time Thop, as typically assumed in the litera-
ture concerning failure detectors for asynchronous systems
(see [6, 11], for example). Finally, since 1) radio links in
the type of application we consider are typically symmetric
[12], and 2) clustering can help circumvent asymmetric link
problems via open- or closed-loop power control [8], we as-
sume that all the hosts have the same transmission range.
2.3 Terminologies
An ad hoc network will be modeled by a graph G =
(V, E), where V is a set of nodes (hosts) and E is a set of
edges (links). A link between nodes v and v(cid:1)
means that v is
within the transmission range of v(cid:1)
, and vice versa. If we let
R denote the transmission range of v, all the nodes that are
at a distance from v less than or equal to R are called one-
hop neighbors of v. For simplicity of illustration, unless
stated otherwise, we use the term “neighbor” or “immediate
neighbor” to refer to a “one-hop neighbor” in the rest of
the text. In addition, the terms “node” and “host” are used
interchangeably in the remainder of this paper.
In ad hoc wireless network applications, hosts normally
operate under the promiscuous receiving mode [12]. More
succinctly, when a node sends a message, all its immediate
neighbors may hear the message, regardless of whether or
not they are the intended recipients of that message. There-
fore, the effect of sending a message to a neighbor is indeed
equivalent to that of a broadcast to all the neighbors, which
suggests that the two terms “send” and “broadcast” could be
used interchangeably. Nonetheless, for clarity we do not use
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:03:37 UTC from IEEE Xplore.  Restrictions apply. 
the word “broadcast” unless all the neighbors of the sender
are the intended recipients.
To distinguish unwanted redundant message-forwarding
from the phenomenon caused by the promiscuous receiv-
ing mode (in which a message may always be heard or
overheard by all the neighbors of the sender), we use the
terms “redundant message forwarding” and “inherent mes-
sage redundancy” to refer to the former and the latter, re-
spectively. In addition, we use “across-cluster forwarding”
to refer to a process that forwards a message from cluster C
(cid:1)
which is an immediate neighbor of C, whereas
to cluster C
by “inter-cluster forwarding,” we mean the general cluster-
level message-forwarding process in which the source and
destination are not necessarily neighboring clusters.
2.4 Problem Description and Scope
A major challenge for FDSs in ad hoc wireless net-
works is their vulnerability to message loss. For example,
a healthy node may be wrongly identiﬁed as failed if the
node’s heartbeat is lost during transmission, which leads to
the violation of the accuracy property (see the deﬁnitions of
accuracy and completeness in Section 4.1). As another ex-
ample, if a message that announces a detected failed node
v cannot be forwarded successfully to all the operational
nodes, some nodes will be unaware of v’s failure, and the
completeness property will thus be compromised. Those
factors have collectively motivated us to seek a solution that
can simultaneously address the issues concerning scalabil-
ity, completeness, and accuracy. Accordingly, our effort
is not intended to develop a new abstract failure detector;
instead, the central purpose of this paper is to show how
a cluster-based communication architecture coupled with
the algorithms exploiting the characteristics of ad hoc net-
works will lead to probabilistic guarantees of the properties
suggested by the established abstract failure detectors (see
[13, 11, 14], for example).
Although the proposed failure detection service is also
intended to support group membership management, we
do not address group membership issues such as mem-
bership subscription and unsubscription. While energy is-
sues are beyond the scope of this paper, we suggest an
intra-cluster message-loss-recovery mechanism that consid-
ers energy balancing. As a cluster-based communication
architecture gives us the ﬂexibility to adopt or adapt var-
ious existing routing algorithms, we assume the presence
of a routing protocol at the inter-cluster communication
layer. Meanwhile, we implement some mechanisms that
take advantage of the inherent message redundancy to make
across-cluster forwarding robust and efﬁcient; when imple-
mented in middleware, those mechanisms will be able to
coordinate with a routing protocol. Finally, as the FDS is
designed for a middleware implementation, we do not ad-
dress issues at or below the MAC layer.
3 Communication Architecture
It is well-understood that the quality of failure detec-
tion services often depends heavily on efﬁcient and reliable
communication. However, to make communication in ad
hoc wireless networks both scalable and robust is difﬁcult.
As clustering approaches are particularly appealing to large-
scale high-density ad hoc network applications, we seek a
solution from the notion of clustering for ad hoc wireless
communications [15, 7, 9].
A cluster can be viewed as a unit disk with a radius equal
to the center node’s transmission range. As a result, any
non-center nodes in a cluster are one-hop neighbors of the
center node. With a clustering algorithm, the center node
is called the clusterhead (CH), while a node that is a one-
hop neighbor of the CHs of two different clusters can be-
come the gateway (GW) node (see Figure 1). (A node that
is located outside two clusters but has at least one non-CH
neighbor in each of the clusters can also become a gateway,
but we do not adopt that option under normal situations
because it may reduce robustness of communication and
failure detection.) After the autonomous cluster formation,
only clusterheads and gateway nodes, which are elected in
a fully distributed fashion, participate in the inter-cluster
communication (see Figure 1(b)), while ordinary members
(OMs) in each cluster talk only to their CHs (and to other
members when necessary). As shown in Figure 1(a), the
distance between any two non-CH nodes in a cluster will be