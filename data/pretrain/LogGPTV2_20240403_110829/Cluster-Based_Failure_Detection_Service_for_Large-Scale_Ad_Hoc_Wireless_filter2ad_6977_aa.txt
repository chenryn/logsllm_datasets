# Cluster-Based Failure Detection Service for Large-Scale Ad Hoc Wireless Network Applications

**Authors:**
- Ann T. Tai
- Kam S. Tso
- William H. Sanders

**Affiliations:**
- Ann T. Tai and Kam S. Tso, IA Tech, Inc., 10501 Kinnard Avenue, Los Angeles, CA 90024
- William H. Sanders, Coordinated Science Laboratory, University of Illinois, Urbana, IL 61801

## Abstract

The increasing interest in ad hoc wireless network applications, characterized by large and dense populations of lightweight system resources, necessitates scalable approaches to fault tolerance. These systems pose significant challenges for the development of failure detection services (FDSs) due to their reliance on reliable communication. Specifically, ad hoc wireless networks are highly susceptible to message loss, which complicates the provision of deterministic guarantees for the completeness and accuracy of FDSs. To address these challenges, we propose an FDS based on clustering. This approach leverages a cluster-based communication architecture, enabling distributed implementation via intra-cluster heartbeat diffusion and inter-cluster failure reporting. By exploiting the inherent message redundancy in ad hoc wireless settings, our FDS mitigates the effects of message loss, providing satisfactory probabilistic guarantees for the desired properties.

## 1. Introduction

Recent advancements in MEMS (micro-electro-mechanical systems) and wireless networking technologies have led to a growing interest in applications involving large and dense populations of lightweight, inexpensive system resources. Examples include air-dropped sensor networks, smart dust devices, and micro-UAV or nano-satellite swarms. These applications often rely on ad hoc wireless networks, as fixed communication infrastructure is impractical. Such systems are frequently mission-critical, deployed for tasks such as threat detection, crisis management, and natural disaster relief [1, 2]. However, due to their size, lightweight components, and harsh operational environments, these systems are particularly vulnerable to failures. Effective failure detection services (FDSs) are crucial to keep the operation team updated on the network's health, providing early warnings and aiding in maintenance scheduling.

Developing FDSs for ad hoc wireless networks presents greater challenges than for traditional distributed systems. The large size and high population density of these networks can lead to scalability issues [1, 3]. Additionally, message loss in ad hoc networks makes it difficult to ensure that all operational hosts are aware of detected failures, potentially leading to frequent false detections. Consequently, deterministic guarantees for completeness and accuracy in FDSs are unattainable in ad hoc network contexts. Recent research has explored methods for monitoring wireless sensor networks [4], using heartbeat mechanisms for connectivity probing [5], and investigating communication strategies for heartbeat-style failure detectors [6]. However, direct solutions for failure detection in ad hoc network applications remain limited.

Motivated by the need for robust and scalable FDSs, and recognizing the potential of clustering for building scalable, robust, and energy-balanced ad hoc networks [1, 7], we propose a cohesive solution. Our approach uses a cluster-based communication architecture to achieve scalability, completeness, and accuracy simultaneously. Specifically, we implement the FDS in a distributed manner through intra-cluster heartbeat diffusion and inter-cluster failure reporting. This architecture exploits the inherent message redundancy in ad hoc wireless networks to mitigate the effects of message loss, providing satisfactory probabilistic guarantees for the desired properties.

The remainder of this paper is organized as follows: Section 2 describes the application model, assumptions, terminologies, and the problem we aim to solve. Section 3 presents the cluster-based communication architecture. Section 4 discusses the implementation of the failure detection service, followed by a probabilistic analysis in Section 5. Finally, Section 6 concludes the paper.

## 2. Fundamentals

### 2.1 Application Model

The systems we consider consist of large, dense populations of lightweight resources built over ad hoc wireless networks. These applications often use localized algorithms to enable hosts to interact within clusters while collectively achieving a global objective [1]. A typical system may have hundreds or thousands of hosts, some of which are base-stations capable of periodically transmitting collected data to an aircraft, LEO satellite, or another network [2].

While these large-scale systems emphasize localized host interaction, local systems must be aware of global condition changes and objectives. It is essential to propagate summary information about locally detected failures to all clusters, making the failure information accessible throughout the system. In large, high-density systems, completeness and accuracy of failure detection are more critical than the time to detect failures.

Nodes can be stationary hosts or mobile hosts with localization capabilities. For simplicity, we do not address resource migration problems in this paper. However, our framework can be extended to accommodate host migration, as sound clustering algorithms support cluster and routing stability in mobile ad hoc settings [8, 9].

Hosts are equipped with solar cells for energy harvesting, allowing for feasible intra-cluster heartbeat diffusion at a reasonably low frequency. When the number of operational hosts drops below a threshold, additional resources will be deployed to maintain the system's population density. Excessive false detections can significantly increase maintenance costs.

### 2.2 Assumptions

Our proposed FDS assumes a fail-stop model. We assume that a node will not fail during an FDS execution. Specifically, if a node sends its heartbeat at the start of a heartbeat interval φ, the node will not crash within the FDS execution duration (a small fraction of φ). We also assume that there will be no message creation or alteration over transmission links, but messages may be lost with a non-negligible probability.

Additionally, we assume that:
1. The clock rate on each host is close to accurate.
2. The delay of message delivery within the transmission range is typically smaller than a reasonable time Thop, as assumed in literature on failure detectors for asynchronous systems [6, 11].
3. Radio links are symmetric, and clustering can help manage asymmetric link problems via power control [8]. Therefore, all hosts have the same transmission range.

### 2.3 Terminologies

An ad hoc network is modeled as a graph G = (V, E), where V is a set of nodes (hosts) and E is a set of edges (links). A link between nodes v and v' indicates that v is within the transmission range of v', and vice versa. If R denotes the transmission range of v, all nodes within distance R from v are called one-hop neighbors of v. For simplicity, we use "neighbor" or "immediate neighbor" to refer to a "one-hop neighbor."

In ad hoc wireless networks, hosts typically operate in promiscuous receiving mode, meaning all immediate neighbors can hear a message regardless of whether they are intended recipients. Thus, sending a message to a neighbor is equivalent to broadcasting to all neighbors. For clarity, we use "send" and "broadcast" interchangeably only when all neighbors are intended recipients.

To distinguish unwanted redundant message-forwarding from the inherent message redundancy caused by promiscuous receiving, we use "redundant message forwarding" and "inherent message redundancy," respectively. "Across-cluster forwarding" refers to forwarding a message from one cluster to a neighboring cluster, while "inter-cluster forwarding" refers to general cluster-level message forwarding where the source and destination are not necessarily neighboring clusters.

### 2.4 Problem Description and Scope

A major challenge for FDSs in ad hoc wireless networks is their vulnerability to message loss. For example, a healthy node may be wrongly identified as failed if its heartbeat is lost during transmission, violating the accuracy property (see definitions in Section 4.1). Similarly, if a message announcing a detected failure cannot be successfully forwarded to all operational nodes, the completeness property is compromised. These factors motivate the need for a solution that addresses scalability, completeness, and accuracy simultaneously. Our goal is not to develop a new abstract failure detector but to show how a cluster-based communication architecture, coupled with algorithms that exploit the characteristics of ad hoc networks, can provide probabilistic guarantees for the properties suggested by established abstract failure detectors [13, 11, 14].

Although our FDS supports group membership management, we do not address issues such as membership subscription and unsubscription. While energy considerations are beyond the scope, we suggest an intra-cluster message-loss-recovery mechanism that considers energy balancing. We assume the presence of a routing protocol at the inter-cluster communication layer and implement mechanisms to make across-cluster forwarding robust and efficient. These mechanisms, implemented in middleware, can coordinate with a routing protocol. Finally, as the FDS is designed for middleware implementation, we do not address issues at or below the MAC layer.

## 3. Communication Architecture

Effective failure detection services depend heavily on efficient and reliable communication. However, achieving both scalability and robustness in ad hoc wireless networks is challenging. Clustering approaches are particularly appealing for large-scale, high-density ad hoc network applications. Therefore, we seek a solution based on clustering for ad hoc wireless communications [15, 7, 9].

A cluster can be viewed as a unit disk with a radius equal to the center node's transmission range, making any non-center nodes in a cluster one-hop neighbors of the center node. The center node is called the clusterhead (CH), and a node that is a one-hop neighbor of the CHs of two different clusters can become a gateway (GW) node (see Figure 1). After autonomous cluster formation, only CHs and GWs, elected in a fully distributed fashion, participate in inter-cluster communication, while ordinary members (OMs) in each cluster communicate only with their CHs (and other members when necessary). As shown in Figure 1(a), the distance between any two non-CH nodes in a cluster will be...