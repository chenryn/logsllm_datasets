3
2.5
2
1.5
1
0.5
0
0
10
50
20
Number of Edge Proxies
30
40
60
70
60
70
Figure 15 Resilience and Proxy Network Size 
Our  analysis  on  the  spread  attacks  and  concentrated
attacks  explains  why  there  is  a  near-linear  scaling 
property.  For both attack scenarios, as long as there is
available capacity in the edge proxies, they can keep the
application accessible to users if users can switch to the
60
14th USENIX Security Symposium
USENIX Association
edge proxies that are not saturated.  Therefore, having
more edge proxies allows larger attacks being tolerated.
However, we can also observe from Figure 15 that the
scaling  is  not  perfectly  linear  (results  for  the  R1K 
network); that is due to the limitation of the underlying
network discussed in Figure 11.  Such phenomenon is
less  likely  when  the  proxies  are  scattered  in  larger 
underlying networks, since in that case it is less likely
to have two edge proxies in the same sub-network.  We 
can see in Figure 15 that the proxy network achieves a 
much  better  scaling  in  the  R10K  network,  which  is 
larger  than  the  R1K  network.    These  results  indicate
that,  when  proxies  are  widely  dispersed  in  a  large 
network, the proxy network has the potential to achieve
DoS resilience with excellent scaling properties. 
In  summary,  we  first  explore  the  user-experienced
performance  using  a  range  of  proxy  networks  in  two
simulated  large  realistic  network  environments.    We
find  that  proxy  networks  can  in  fact  improve  the 
performance  for  TCP-based  applications. Then, we
conduct a series of experiments investigating the user-
experienced  performance  under  different  attack
scenarios  using  a  range of  proxy networks.    We  find
that  proxy  networks  provide  effective  resilience  to
spread  and  concentrated  attacks  ñ  most  users  (>90%)
can  retain good  performance.
the 
properties  of  large  proxy  networks,  we find that  by
growing the proxy network size (width), the magnitude
of DoS attacks that it can tolerate grows almost linearly.  
Therefore,  in  realistic  large  network  environments, 
proxy  networks can  have  great performance  potential
and scalable DoS-resilience. 
In  exploring 
6 Related Work 
Our focus is the capabilities of proxy networks used for 
DoS  defense.    The  most  related  studies  are  those 
exploring  the use  of  overlay  networks  to  resist  DoS
attacks.    Secure  Overlay  Services  (SOS)  [1]  protects 
applications against flooding DoS attacks by installing 
filters  around  applications and  only  allowing  traffic 
from secret ìservletsî.  SOS uses Chord [29] to mediate 
communication  between  users  and  the  secret  servlets, 
without  revealing  the  IP  addresses  of  the  servlets. 
WebSOS [7] is an implementation of SOS.  Mayday [4]
generalizes  the  SOS  architecture,  and  analyzes  the
implications  of  choosing different  filtering  techniques 
and  overlay  routing  mechanisms.    Internet  Indirection 
Infrastructure  (i3)  [3,  5] also  uses Chord overlay to
protect  applications  from  direct  DoS  attacks.    SOS, 
WebSOS, Mayday, and i3 can all be viewed as specific
instances of our generic proxy network. Each of these
efforts  has  involved  some  evaluation  via  theoretical
analysis or small-scale experiments.  
The primary distinctions of our work are:  
First,  our  work differs  in  scale,  fidelity,  and  realism.
These  other  efforts  except  WebSOS  [7]  are  limited  to 
theoretical analysis and small-scale experiments, which
cannot  capture  detailed  network  and application 
dynamics,  such  as  router  queues,  packet  drops, real 
temporal  and  feedback  protocol behavior.    All  these
factors  are  critical  to  application  and  proxy  network
performance.    WebSOS [7]  conducted  larger  scale
experiments  and performance  evaluation on PlanetLab 
testbed.  But due to the malicious nature of DoS attacks, 
they  could  not  study  the  DoS  resilience  problems  on
PlanetLab.    Therefore  none  of  the other  efforts  can 
capture  detailed  application  performance  dynamics 
under DoS attacks; the validity of their results depends
on  the  accuracy  of  their  models,  which  has  not been
empirically validated.  In contrast, our studies are based 
on detailed  network behavior,  and  explore  large  scale
network structures as well as proxy networks, with real
application,  attacks,  and protocol  software. Our work
provides a qualitative advance in the scale, fidelity, and
realism over the other efforts.  Furthermore, our results 
provide the first quantitative understanding of the DoS-
resilience  capability  of  proxy  networks  in  large-scale 
network environments.  The primary reason we are able
to  undertake  these  studies  is  the  novel  capabilities  of
MicroGrid. 
Second, our work differs in focus.  Each of these other
efforts  focuses  on  their  specific  proposed  solution, 
exploiting its structure and characteristics for analysis. 
Therefore  the  evaluation  of  one  often  applies  only  to
that particular instance of proxy networks.  In contrast, 
our  work focuses  on  the  fundamental  capabilities  and 
limitations  of proxy  networks  in general.    Our  results 
apply to a wide range of proxy networks, including the 
other proposed solutions. 
Another class of related research is on the performance 
and  static  resilience  of  overlay  networks  in  general. 
[30]  studied these  issues  from  a  graph  theoretic
perspective,  and [31]  takes an  empirical  approach  to 
study  the  overlay  network  performance.    There  are
three  key  differences  between  our  work  and  their 
studies. First,  our  work  studies  the  impact  of DoS
attacks,  which  affects  network  dynamics  and  the
performance  of  real  applications,  which  is  not  their 
focus.    Second,  our  work  studies  performance  of  real
applications,  taking  into  account dynamic  behavior of
network protocols such as TCP, while their work only
USENIX Association
14th USENIX Security Symposium
61
considers  RTT.    Third,  our  work focuses  on  the 
performance  between  users  and  an  application, while 
they study  performance  between  any  pair of  overlay
nodes.
A  third  class of related work  is  the  simulation  studies 
on  Internet  worms  and  their  impact  on  BGP  [32,  33].
They focus on worm propagation and its impact on the
network, 
and 
vulnerabilities of BGP, which are not our focus.  These 
studies are complementary to ours. 
particularly 
behavior 
on 
the 
Our  work  focuses  on  infrastructure-level  DoS  attacks 
and their countermeasures.  Meanwhile there are studies 
such as Mutable Services [34] and Roaming Honeypots
[35]  which  explore  solutions 
to  protect  Internet
applications from application-level DoS attacks.  These 
efforts focus on a different class of DoS attacks, and are 
complementary to our work. 
7 Conclusions and Future Work 
To understand the performance implications and DoS-
resilience capability of proxy networks in large realistic
networks, we use a detailed large-scale online network
simulator  ñ  MicroGrid  [9,  10]  ñ  to  study proxy
networks  with  real  applications  and  real  DoS  attacks. 
Using  MicroGrid,  we  are  able  to  conduct  detailed
performance  studies  in  large  networks  environment 
with  complex,  typical  application  packages,  and  real
attack programs.  Our studies include networks with up 
to 10,000 routers and 40 (ASes), with a physical extent
comparable  to  the  North  American  continent.    We
believe  this  is  the  first  empirical  study  of  proxy
networks for  DoS  resilience  at  large-scale,  using  real 
attacks, and in a realistic environment.  
Our  experiments  explore  a  range  of network  sizes,
proxy  network  configurations,  attack parameters,  and 
application  characteristics. 
  The  key  results  are
summarized below: 
Rather than incurring a performance penalty, proxy
!
networks can improve usersí experienced performance, 
reducing  latency  and  increasing delivered  bandwidth. 
The intuition that indirection reduces performance turns
out to be incorrect, as the improved TCP performance 
more than compensates. 
Proxy networks can effectively mitigate the impact 
!
of both spread and concentrated large-scale DoS attacks
in  large  network  environment.    Our  experiments  have
shown  that  a  192-node  proxy  network with  64  edge
proxies  (each  connected  by  a  100Mbps  uplink),  can 
successfully  resist  a  range  of  large-scale distributed
DoS attacks with up to 6.0Gbps aggregated traffic and 
different attack load distribution; most users (>90%) do
not  experience  significant performance  degradation
under these attack scenarios. 
Proxy networks  provide scalable  DoS-resilience  ñ
!
resilience  can  be  scaled up  to  meet  the  size  of  the
attack,  enabling  application  performance 
to  be
protected.  Resilience increases almost linearly with the 
size of a proxy network; that is the attack traffic a given 
proxy  network  can resist while  preserving a  particular
level of application performance grows almost linearly
with proxy network size.  
These  results  provide  empirical  evidence that  proxy
networks  can  be  used  to tolerate  DoS  attacks  and
quantitative guidelines for designing a proxy network to
meet a resilience goal. 
Our  main  contributions  are  the  following.    First,  we 
provide the first large-scale empirical study on the DoS 
resilience  capability  of  proxy  networks  using  real
applications  and  real  attacks. 
  This  provides  a 
qualitative  advance  over  previous  studies  based  on
theoretical  models  and  small  scale  experiments. 
Second, we provide the first set of empirical evidence
on large-scale network environment to prove that proxy
networks have effective and scalable resilience against
infrastructure-level  DoS  attacks.    Third, we  provide  a 
detailed  performance  analysis  of  proxy  networks  in
large-scale  network  environment,  and  show  that  in
contrast to intuition proxy networks can improve user-
experienced performance. 
There are several directions for future work.  First, we
can  study proxy  networks with  topologies  which  have
multiple paths from each edge proxy to the application, 
in  order  to understand  the  benefit  of  multi-path  on
performance  and DoS-tolerance.    Second,  multiple
applications can share the same proxy network.  We can
study the correlated impact of DoS attacks on multiple
applications.    Third,  further  study  is  necessary  to
understand the impact of proxy deployment and proxy
network 
service
performance.  Fourth, this paper studied the impact of
proxy network  depth  on  user-experienced  service
performance,  but we  did  not  study  its  impact  on  the 
DoS-resilience capability of proxy networks.  It needs 
to  be  addressed  in our  future  work.    Last,  this  work 
focuses  on  congestion-based  DoS  attacks.    It  can be 
extended to study other forms of DoS attacks, such as
SYN floods. 
user-experienced 
topology 
on
62
14th USENIX Security Symposium
USENIX Association
References
1. Keromytis,  A.D.,  V.  Misra,  and  D.  Rubenstein.
SOS: Secure Overlay Services. in ACM SIGCOMM'02. 
2002. Pittsburgh, PA: ACM. 
2.  Stoica,  I.,  et  al. Internet  Indirection  Infrastructure. 
in SIGCOMM. 2002. Pittsburge, Pennsylvania USA. 
3. Adkins, D., et al., Towards a More Functional and 
Secure  Network 
Infrastructure.  2003,  Computer
Science Division, UC Berkeley: Berkeley. 
4.  Andersen,  D.G. Mayday:  Distributed  Filtering  for 
Internet Services. in 4th Usenix Symposium on Internet
Technologies and Systems. 2003. Seattle, Washington. 
5. Adkins,  D.,  et  al.  Taming  IP  Packet  Flooding 
Attacks. in HotNets-II. 2003. 
6. Wang, J., L. Lu, and A.A. Chien. Tolerating Denial-
of-Service Attacks Using Overlay Networks ñ Impact of 
Topology.  in 2003  ACM  Workshop  on  Survivable  and 
Self-Regenerative  Systems.  2003.  Washington  DC: 
ACM.
7.  Stavrou,  A.,  et  al.,  WebSOS:  An  Overlay-based
System For  Protecting Web Servers  From  Denial  of
Service  Attacks.  Elsevier 
Journal  of  Computer 
Networks, special issue on Web and Network Security, 
2005. 
8. Wang,  J.  and  A.A.  Chien, Understanding  When
Location-Hiding  Using Overlay  Networks  is  Feasible.
Elsevier  Journal  of  Computer  Networks,  special  issue
on  Overlay  Distribution  Structures 
and  Their 
Applications, 2005. 
9. Liu, X. and A.  Chien. Traffic-based Load Balance 
for  Scalable  Network  Emulation.  in  SuperComputing 
2003.  Noverber
the
Proceedings of 
the  ACM  Conference  on  High 
Performance Computing and Networking. 
10. Liu, X.,  H.  Xia,  and  A.A. Chien, Validating  and
Scaling the MicroGrid: A Scientific Instrument for Grid 
Dynamics. Journal of Grid Computing, 2003.
11. Dittrich, D., The DoS Project's "trinoo" distributed 
denial of  service  attack  tool.  1999,  University  of
Washington. 
12. Dittrich, D., The "Tribe Flood Network" distributed
denial of  service  attack  tool.  1999,  University  of
Washington. 
13. Dittrich, D., et al., The "mstream" distributed denial
of service attack tool. 2000. 
Phoenix,  Arizona: 
2003.
14. CERT,  "Code  Red  II:"  Another  Worm  Exploiting 
Buffer Overflow In IIS Indexing Service DLL. 2001. 
15. CERT,  "Code  Red"  Worm  Exploiting  Buffer 
Overflow In IIS Indexing Service DLL. 2001. 
16. apache, Apache  HTTP  Server Version  2.0
Documentation. 
17. JoeDog.org, http://www.joedog.org/siege/index.php. 
18. Akamai, Akamai Technology Overview. 
19. Liu,  X.  and  A.A.  Chien.  Realistic  Large-Scale 
Online  Network  Simulation.  in SuperComputing'04. 
2004. Pittsburgh, PA. 
20. Medina, A., et al. BRITE: An Approach to Universal
Topology Generation. in the International Workshop on
Modeling,  Analysis  and  Simulation  of  Computer  and
Telecommunications  Systems-  MASCOTS  '01.  2001. 
Cincinnati, Ohio. 
21. Lougheed, K.  and  Y. Rekhter, RFC  1106:  Border 
Gateway Protocol (BGP). 1990. 
22. Moy, J., RFC 2178: OSPF Version 2. 1998. 
23. Socolofsky,  T.  and  C.  Kale, RFC  1180  -  TCP/IP
tutorial. 1991. 
24. Postel,  J.,  RFC 792  -  Internet Control  Message
Protocol. 1981. 
25. Chun, B., et al., PlanetLab: An Overlay Testbed for
Broad-Coverage 
Computer
Communications  Review,  a  special  issue on  tools  and 
technologies  for  networking  research  and  education, 
2003. 33(3).
26. The  ns  Manual 
(formerly  ns  Notes  and
Documentation), K. Fall and K. Varadhan, Editors, UC 
Berkeley, LBL, USC/ISI, and Xerox PARC. 
27. Faloutsos,  M.,  P.  Faloutsos,  and  C.  Faloutsos.  On
Power-Law Relationships  of  the  Internet  Topology.  in
SIGCOMM'99. 1999. 
28. Swany,  D.M.  and  R.  Wolski.  Data  Logistics  in
Network  Computing:  The  Logistical Session  Layer.  in
IEEE Network Computing and Applications (NCA'01). 
2001. 
29. Stoica,  I.,  et  al.  Chord:  A  Scalable  Peer-to-peer
Lookup Service  for  Internet  Applications.  in  ACM
SIGCOMM'01. 2001. 
30. Loguinov,  D.,  et  al.  Graph-Theoretic  Analysis  of
Structured  Peer-to-Peer  Systems:  Routing  Distances 
and  Fault  Resilience.  in  SIGCOMM.  2003.  Karlsruhe, 
Germany: ACM. 
Services. 
ACM 
USENIX Association
14th USENIX Security Symposium
63
31. Jain, S., R. Mahajan, and D. Wetherall. A Study of
the  Performance  Potential  of  DHT-based Overlays.  in 
the  4th  Usenix Symposium  on  Internet Technologies
and Systems (USITS). 2003. Seattle, WA. 
32. Lad,  M.,  et  al.  An  Analysis of  BGP  Update  Burst
during  Slammer  Attack.  in  Proceedings  of  the 5th 
International  Workshop  on Distributed  Computing 
(IWDC). 2003. 
33. Liljenstam,  M.,  et  al.  Simulating  realistic  network 
worm  traffic  for  worm  warning  system  design and 
testing. in Proceedings of the 2003 ACM workshop on 
Rapid Malcode. 2003. 
34. Mutable Services, New York University.
35. Khattab,  S.M.,  et  al.  Roaming  Honeypots  for 
Mitigating  Service-level  Denial-of-Service  Attacks.  in
Proceedings  of  the  24th International  Conference  on 
Distributed Computing Systems (ICDCS'04). 2004. 
1 The term ìoverlay networkî refers to both structured
Distributed  Hash  Tables  (DHT)  and  unstructured
overlays. 
2 Only a one-way trip is needed from the edge proxy to
the application proxy, instead of a full hand-shake.  In
fact, once the user gets connected to the edge proxy, it 
can start sending data.  This can be overlapped with the 
connection setup at the application proxy side. 
3 Use of user authentication may not be a reason for the 
performance  degradation,  because  it  also  introduces
great overhead for the baseline case of direct access. 
4WebSOS is implemented in Java. Our implementation 
is  in  C++,  and  optimized  to  achieve  comparable
throughput as Apache server on Linux. 
64
14th USENIX Security Symposium
USENIX Association