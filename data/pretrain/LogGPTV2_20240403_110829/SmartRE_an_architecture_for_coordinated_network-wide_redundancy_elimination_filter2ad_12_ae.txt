originates from a single ISP PoP. In this case, the decoding capa-
bilities in the network are split proportionally by volume across
all ingress-access routers; on each link L, each ingress I’s share
is vol I (L)
vol(L) , where vol I (L) is the volume of trafﬁc originating at
ingress I ﬂowing through link L and vol(L) is the total volume
of trafﬁc through L from all ingresses. The following results use
two conﬁgurations with γ = 25% and γ = 50% redundancy, with
γintrapop and γintrapath set to 0.5 in each case. Our choice of γ is
based on measurements of redundancy in real trafﬁc traces from
enterprise and university networks [10].
Our main metric of interest is the fractional reduction in the net-
work footprint (§4). Figure 9 shows a CDF of the reduction in net-
work footprint for the four solutions for the Sprint topology. The
footprint reduction of SmartRE is 24-30% across the ingresses for
the 50%-redundant trace (12-15% for the 25%-redundant trace),
indicating the extent to which the aggregate utilization of the ISP
improves for trafﬁc from the ingress in question. The median frac-
tional reduction across the ingresses for the 50%-redundant trace in
SmartRE is 5× better than the naive approach. More importantly,
the median value is less than the ideal unconstrained case with no
processing and memory constraints by only 0.04 in absolute terms.
Figure 10 shows the network-wide reduction for 4 tier-1 ISPs.
Here, we consider the top 20 PoPs (by degree) in each topology,
and assume that the total trafﬁc entering each of the 80 ingresses
(4 per PoP) is the same. For simplicity, we also assume that the
redundancy proﬁle is the same across all ingresses. Across the dif-
ferent topologies, SmartRE is consistently 4× better than the naive
approach; even the edge-only variant of SmartRE is roughly 2−3×
better than a naive approach. Also, SmartRE is quite close to the
unconstrained ideal case and provides 80-90% of the ideal savings.
950.35
0.3
0.25
0.2
0.15
0.1
0.05
t
n
i
r
p
t
o
o
f
k
r
o
w
t
e
n
n
i
n
o
i
t
c
u
d
e
R
0
Hop−by−hop
Edge
SmartRE
Ideal
Hop−by−hop
Edge
SmartRE
Ideal
t
n
i
r
p
t
o
o
f
k
r
o
w
t
e
n
n
i
n
o
i
t
c
u
d
e
R
0.3
0.25
0.2
0.15
0.1
0.05
0
 AT&T 
Sprint
  AOL 
  NTT 
(b) 25 % redundancy trace
 AT&T 
Sprint
  AOL 
  NTT 
(a) 50% redundancy trace
Figure 10: Network-wide footprint reduction for four tier-1 ISP
topologies using synthetic traces.
Importance of SmartRE optimizations: SmartRE takes into ac-
count three factors while assigning caching responsibilities across
RE devices in the network: (1) memory constraints on RE devices,
(2) packet processing constraints imposed by memory accesses,
and (3) trafﬁc and routing matrices and redundancy proﬁles. We
evaluate the relative importance of these next.
To do so, we consider four hypothetical scenarios:
1. SmartRE with no memory constraints (SmartRE-nomem);
setting each Mr = ∞ in the LP from § 4.2.
noproc); setting each Lr = ∞ in the LP .
2. SmartRE with no packet processing constraints (SmartRE-
3. A heuristic (Heur1) where the hash-ranges are divided equally
across the RE devices on a path – if there are k RE devices
on the path p, each caches 1
k of the packets on this path.
4. A second heuristic (Heur2) similar to the one above, ex-
cept that RE devices further downstream are assigned more
caching responsibilities. Speciﬁcally, if path p has k hops,
then the ith hop caches
j=1 j of the packets on this path.
i
k
P
Table 3 compares the performance of these schemes with SmartRE
and the ideal solution with no resource constraints. Note that Heur1
and Heur2 are also resource aware; the effective caching and decod-
ing responsibilities are capped off by the actual memory and pro-
cessing constraints. We see three effects. First, SmartRE performs
signiﬁcantly better than both heuristics showing that accounting for
trafﬁc, routing, and redundancy patterns while assigning caching
responsibilities is necessary. Second, the gap between SmartRE-
nomem and SmartRE is negligible. This is because cache size has
a natural diminishing property (see Figure 11); it is necessary to
have a sufﬁciently large cache but increasing it further does not
help much. Finally, relaxing processing constraints does not help
too much. This is because the core RE devices are not overloaded
for the redundancy proﬁle we use for this evaluation (γintrapop =
γintrapath = 0.5) and perform fewer decodings than their effec-
tive capacity. However, in other redundancy proﬁles where the
core devices operate at full capacity, the gap between SmartRE and
SmartRE-noproc is more noticeable (not shown).
SmartRE with no resource constraints is still 0.04 lower than
the ideal solution. This is an effect of enforcing non-overlapping
caches. For example, consider two paths (cid:6)X, A, B(cid:7) and (cid:6)X, A, C(cid:7)
with the same ingress X and a packet P along (cid:6)X, A, B(cid:7) that
matches future packets on both paths. If we allow caches to over-
lap, P can be stored on both A and B, to achieve optimal RE. If
we use non-overlapping caches, P can be on either A or B, but
not both. This sacriﬁces either inter-path RE (if we store P on B
alone) or the footprint reduction for intra-path RE (if we store P
on A alone). Allowing caches to overlap can yield better RE when
there are no memory constraints. However, overlapping caches are
not optimal in realistic settings with actual resource constraints.
Further, there are other practical difﬁculties in extending SmartRE
to allow overlapping caches (see §8).
Topology Heur1
(equal)
0.145
0.138
0.152
0.142
Sprint
ATT
AOL
NTT
Heur2
(distance)
0.168
0.162
0.178
0.167
SmartRE SmartRE SmartRE Ideal
0.264
0.244
0.267
0.259
nomem noproc
0.274
0.267
0.248
0.262
0.278
0.277
0.264
0.278
0.31
0.297
0.33
0.31
Table 3: Understanding the relative importance of the different
components of SmartRE’s optimization.
(γintrapop , γintrapath )
(0.5, 0.5)
(0.5, 0.75)
(0.75, 0.75)
(0.25, 0.5)
Reduction in network footprint
SmartRE
0.26
0.28
0.38
0.18
Edge Hop-by-hop
0.12
0.18
0.27
0.05
0.08
0.08
0.11
0.06
Ideal
0.31
0.31
0.42
0.20
Table 4: Exploring different redundancy proﬁles on the Sprint
topology, with total redundancy γ = 0.5.
k
r
o
w
t
e
N
n
i
n
o
i
t
c
u
d
e
R
t
n
i
r
p
t
o
o
F
 0.35
 0.3
 0.25
 0.2
 0.15
 0.1
 0.05
 0
 0
T=10s
 6
 4
 2
Cache Size(GB) of interior devices
 8  10  12  14  16
Figure 11: Varying cache size in the interior using a synthetic
trace over the Sprint topology.
Varying redundancy proﬁles: Table 4 compares different types of
redundancy proﬁles. While SmartRE is consistently better, the im-
provement depends on the redundancy proﬁle. For example, when
intra-path redundancy dominates (0.75, 0.75), SmartRE is not sig-
niﬁcantly better than the edge-based variant. Again, across all the
proﬁles, SmartRE is within 0.04 of the ideal unconstrained case.
The conﬁguration (0.25, 0.5) where there is signiﬁcant redun-
dancy across egress PoPs should be ideal for SmartRE. However,
all three approaches fare poorly, and hop-by-hop marginally out-
performs the edge-only approach. The latter does poorly in this
case because most of the redundancy is inter-path, not intra-path.
We were surprised at why SmartRE and even the ideal case did
worse in this scenario. We ﬁnd that shortest path routing between
the top-20 PoPs in this ISP does not allow for much scope for on-
path coordination between paths because the paths have very few
hops in them. In this context, redundancy-aware routing [12] can
additionally boost the performance of SmartRE.
Memory provisioning: Figure 11 shows the effect of adding more
cache memory to interior devices, while keeping the cache size on
the edge devices ﬁxed. Adding cache memory to the interior has
two beneﬁts. (1) The total on-path memory increases and greater
intra-path redundancy is identiﬁed. However, this increase hap-
pens only up to a certain point when the total memory on a path
matches the memory used for encoding. (2) Interior nodes see re-
dundancy between paths from same ingress destined to different
egresses. The amount of inter-path redundancy increases monoton-
ically with memory. Adding more memory to core devices lever-
ages such sources of redundancy that cannot be identiﬁed in an
edge-only approach. While adding more memory in the core ex-
ploits more redundancy, the beneﬁts are marginal beyond 4GB. Be-
yond this, the amount of inter-path redundancy identiﬁed is small.
7.3 Evaluation Using Real Traces
We use packet traces collected at a large US university to ex-
amine the effectiveness of SmartRE with real trafﬁc patterns. To
simulate a real trace over a speciﬁc topology, we map the observed
96 1
 0.8
n
o
i
t