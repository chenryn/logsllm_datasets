以找到那个迁移后的数据库目录。这个文件的扩展名为·sym，基本名为数据库名。例如，把
数据库位置。
这个过程在Unix和Windows上有所不同。
/var/db:
11.3.5迁移单个数据库
以外，还可以在原来的数据目录里创建一个符号链接，让它指向新位置。
要使用能明确指示新位置的--datadir 选项来重启服务器。在 Unix上，丨
11.3.4迁移整个数据目录
许多徒劳无功的事情。
服务器总是会在数据目录里查找数据库目录，因此迁移数据库的唯一方法是使用符号链接。
（4）保证在重启服务器时启用了符号链接支持功能。Windows 服务器在默认情况下应该已
在迁移数据目录时，要停止MySQL 服务器，并把数据目录移至新的位置。在移动之后，
口操作系统必须具有一个可工作的realpath（)系统调用。如果真有，那么下面这个查询
口必须使用Unix系统，并且要迁移的表必须为MyISAM表。
只有在满足以下条件时才能迁移单个表。
symbolic-links
[mysqld]
E:\mysql-book\sampdb\
(3）在MySQL数据目录中创建一个文件，充当符号链接，让MySQL服务器知道在何处可
(2）把数据库移至新的位置；或者将其复制过去，并删除原来那个。
执行这些命令时，要以MySQL管理员的身份登录。
下面这个示例展示了如何把bigdb数据库从/usr/local/mysql/data目录迁移至
（1）停止正在运行的服务器。
（4）重启服务器。
(3）在数据目录中创建一个符号链接，让其具有原来那个数据库的名字，并指向那个新的
(2）把数据库移至新的位置；或者将其复制过去，并删除原来那个。
（1）停止正在运行的服务器。
在Unix上，迁移数据库的过程如下：
olo
mysqld_safe&
1n-s/var/db/bigdb bigdb
cd/usr/local/mysql/data
的结果将为YES：
carcf
迁移单个表
-rf bigdb
bigdb|(cd/var/ab;tar xf -)
****★*
11.3
迁移数据目录的内容
除了使用--datadir
409
---
## Page 430
账
想要把MySQL的PID文件保存到那里，从而与系统操作的保持一致。类似地，如果你的系纟
--pid-file=mysqld.pid时，这个 PID文件即为数据目录下的mysqld.pid。
是相对路径名，那么服务器将在其自己的数据目录中创建该文件。例如，当指定
文件新位置的选项来重启它。例如，为把 PID 文件创建为/tmp/mysql.pid，可以在命令行上
11.3.8
许
把
指定的，所以你必须按以下步骤来迁移部分或者全部的表空间文件。
的那些常规文件，例如，把它们分散到不同的文件系统里。因为文件的位置是通过系统变量来
件里。（更多相关细节请参考12.5.3.1节。）如果你已经创建了表空间，可能就可以迁移组成它
innodb_data_file_path系统变量，将InnoDB系统表空间的各个组成文件罗列在某个选项文
11.3.7
务
（.frm文件仍然需要留在原来的数据库目录里。）在执行此操作之前，可以在移动文件时停止服
的位置；接着在原来的数据文件和索引文件所在的数据库目录里创建符号链接，分别指向它们。
410
长户。例如，这个账户的用户名和用户组名都是mysql，以root 用户的身份执行以下命令：
1录/var/run/mysql和/var/log/mysql，并把它们的所有者设置成你用于运行服务器的那个
山
行服务器一
多系统都只允许root用户对这些子目录进行写操作。这意味着，你必须以root用户权限来
日志文件都保存在/var/log目录里，那么你也可以把MySQL的日志文件放置到那里。不过，
用--pid-file=/tmp/mysql.pid选项，或者在某个选项文件里包含以下内容：
器；也可以锁定表，以防止服务器使用它，如14.2节所描述的那样。
有些系统会把各种服务器的PID文件保存在某个特定的目录里，如/var/run。你可能也
如果要迁移 PID 文件或日志文件，则需要先停止 MySQL 服务器，然后使用一个可以指定
然后，服务器就能毫无问题地在这些目录里写入文件了，并且可以使用指定这些文件所在
如果是用绝对路径名来指定文件名，那么服务器会使用该路径名来创建文件。如果使用的
pid-file=/tmp/mysql.pid
[mysqla]
（1）如果服务器在运行，要停止它。
在初次配置InnoDB系统表空间时，
如果上述两个条件都满足，那么你便可以把表的.MYD数据文件和.MYI索引文件移动到新
（4）
chmodu=rwx,go-rwx/var/log/mysql
chown
mkdir
chmod
chgrp
chown
mkdir
mySql> SHOW VARIABLES LIKE
修改定义InnoDB配置的那个选项文件，反映出文件迁移后的新位置。
have_symlink
第11章MySQL数据目录
重启服务器。
移动需要迁移的表空间文件。
迁移状态文件和日志文件
迁移InnoDB系统表空间
mysql/var/log/mysql
/var/1og/mysql
mysql
mysql /var/run/mysql
/var/run/mysql
一从安全的角度来讲，这可是个不太好的做法。比较可行的做法是：创建两个子
/var/log/mysql
/var/run/mysql
1YES
'have_symlink';
可以使用innodb_data_home_dir和
统
会
---
## Page 431
位置的选项来启动服务器。例如：
与日志文件选项及其用法有关的更多信息请参考12.8节。
log-error
pid-file
[mysqld]
og-bin
/var/log/mysql/log.err
/var/run/mysql/mysql.pid
file
/mysql/binlog
/var/log/mysql/querylog
11.3
迁移数据目录的内容
411
---
## Page 432
要的那些账户设置密码，删除那些你不需要的账户。
器只能被授权用户访问。其工作内容包括了解安装过程会创建哪些MySQL用户账户，为你需
12.1
本章讨论的SQL语句和程序特定相关的更多信息请参考附录E和附录F。
的数据目录有所了解，有助于更好地理解本章的大部分内容。更多详细内容请参考第11章。与
MySQL的基本管理
第12章
MySQL的安装过程会在服务器的数据目录里生成两个数据库。
我们先从一项在MySQL安装之后应该立即执行的管理任务开始，其目的在于要确保服务
MySQL的数据目录里存储着MySQL服务器的数据库、日志文件和其他信息。对MySQL
□管理工具mysqladmin。
MySQL服务器mysqld。
本章将涉及下面几个应用程序，它们对MySQL管理员来讲都是不可或缺的工具。
其他一些比较重要的管理内容将在第13章和第14章进行讨论。
口确定是否需要将MySQL升级到较新版本，若需要，何时升级。
口
口级
口确保服务器尽可能长时间地正常运行。
口
口
口在MySQL安装完成之后加强安全设置
保护新安装的MySQL
运行多个服务器。
分析底层硬件，解决物理约束，进而提高性能。
调整服务器，以获得更好的性能。
维护服务器日志。
选择插件，启用服务器功能。
监视和设置服务器的运作参数。
---
## Page 433
询user 表。这时，应该不需要指定密码，因为一开始，即使是 root 账户也还没有密码。
此外，user 表的行还有很多其他列，用来表示此账户所拥有的各种超级权限。
Password就是这个账户的密码（它已被散列处理，不会以明文形式显示出来）；如果身份认证
Password 列和plugin 列，它们表示的是这个用户的授权方式：如果账户密码不为空，那么
修改已有账户提供了指导。
你所指定的名字来连接服务器，同时拥有许可范围内的适当权限。13.2节对如何创建新账户和
份连接服务器，获得服务器的超级用户访问权限。
到那些初始账户。默认情况下，这些账户都没有密码，因为MySQL认为你肯定会提供自己的
密
些示例还会假设你已经启动了MySQL服务器，因为你需要连接它。
从这台机器连接该服务器。你要将本节中出现的主机名，替换成你自己服务器主机的名字。
节的示例都将假设你在某台主机名为cobra.example.com的机器上运行MySQL服务器，并想
12.1.1为初始的MySQL账户建立密码
的MySQL用户账户。
择创建密码。不过，即使你使用了这种安装程序，这里提供的信息也能帮助你更好地理解初始
服务器可能会从已有版本创建的选项文件里提取这些密码，详见12.1.2节的讨论。
置来安装另一个版本，那么你需要为这个新服务器设置密码。不过，你可能会遇到这样的麻烦，
该尽快为这些账户分配密码。如果你是在一台已经安装有MySQL的机器上，选择了另一个位
其初始状态是允许任何人在无需身份认证的情况下连接到服务器。这样做很不安全，因此你应
要想查看存在有哪些账户，以及这些账户是否需要授权，可以用root身份连接服务器查
件（服务器为了使用这个账户会调用它来处理身份认证事宜）不为空，则plugin为该插件。
user 表里的每一个行都包含有Host 值和User 值，它们分别代表的是主机（用户可以从
码。因此，管理MySQL安装的第一步应该是建立密码。否则，未授权的用户可以用root：
在加强初始账户的安全之后，还应该继续创建其他的账户，以便用户社区的成员可以使月
MySQL安装过程会在mysq1数据库的权限表里设置以下两种账户。
本节将讲述如何检查权限表里存在有哪些账户，以及如何设置它们的密码。具体来讲，本
mysql> SELECT Host, User, Password, plugin FROM mysql.user;
%mysql-u root
下面的讨论会假设你还没有建立任何密码。有些MySQL安装程序会在安装过程中让你选
口
口
如果你刚刚完成了MySQL的第一次安装，那么mysql数据库的权限表将会包含多个账户，
口数据库test。它可用于测试。
口数据库 mysql。它里面包含了用于控制客户端对服务器进行访问的各种权限表。
cobra.example.com
localhost
Host
行的操作加以限制。
用户名为空白的账户。这些是“匿名”账户。有了它们，任何人都可以连接服务器，
名字都是root，这只是一种巧合。虽然这两个超级账户都拥有最高的权限，但彼此毫无
以做任何事情，其中包括删除所有的数据库和关闭服务器。（MySQL和Unix的超级账户
用户名为root 的账户。这些是用于管理的超级用户账户。root 账户拥有全部的权限，
而不用事先显式地为他们建立账户。匿名用户的权限通常比较少，为的是对它们所能进
葛。）
root
root
User|
I Password l plugin
12.1保护新安装的MySQL
413
一
用
户
三
---
## Page 434
的账户（假设服务器主机名为cobra.example.com）。
主机特定相关的账户：一个是用户root，另一个是匿名用户。
安装程序会给你机会选择是否需要建立密码。
是那些在所有平台里都存在的账户。尽管如前面提到的，所有这些账户在开始时都没有密码，但是
该为它们分配密码。
你所看到的每一个账户，其 Password 和 plugin 的内容都为空，就说明它们是不安全的，应
414
在 Unix系统里，可以通过运行 mysql_instal1_db 脚本来初始化权限表，你会得到两个与
口root账户可以使用主机名localhost、IPv4地址127.0.0.1或IPv6地址：:1来连接本地
user表里的这些账户允许客户端程序使用的连接方式如下所示。
在所有平台上，大部分的初始账户都是相同的。有一些账户则与特定的平台有关。下表显示的
数据目录里的权限表源自何处呢？依据你所使用的平台不同，答案也会有所不同。
在你自己的服务器上看到的输出结果，与上面所显示的内容可能不完全相同。但是，如果
口
口
口
User值为空白的账户是匿名账户。
作为root，你将拥有全部权限，
持 IPv6，就可以像下面这样使用此账户来进行连接：
对于 Host值为：：1的账户，可以通过IPv6方式从本地主机进行连接。如果你的系统支
%mysql -h 127.0.0.1 -u root
MySQL服务器。例如，你可以使用下面两条命令中的任何一条，以root身份连接服务器：
包里。
在 Windows系统里，数据目录和mysql数据库都被包含在预先初始化好的MySQL发行
mysql_install_db 脚本的其中一个目标便是在 mysql 数据库里建立权限表。如果你是不
在 Unix 系统里，mysql_install_db 脚本会在安装过程中完成数据目录的初始化工作。
cobra.example.com
%mysql -h localhost
而不用指定任何用户名：
%mysql -h localhost -u root
localhost
：:1
127.0.0.1
%mysql-h::1-uroot