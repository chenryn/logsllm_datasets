targets chose other curves). Only among those who did not chose
X25519 there is in parts a discrepancy between QUIC and TLS over
TCP. Although the vast majority uses the offered key exchange
group, this shows on a small scale the effect of two different TLS
deployments.
270
It’s Over 9000: Analyzing Early QUIC Deployments with the Standardization on the Horizon
IMC ’21, November 2–4, 2021, Virtual Event, USA
We got a similar result for the chosen cipher. Currently, TLS
1.3 has five allowed cipher suites, limited to four by the QUIC
draft [43] and only three specified as required to be supported,
hence it provides less choice compared to TLS 1.2. Most servers
chose TLS_AES_128_GCM_SHA256 in both scans.
QUIC requires a new TLS extension in order to transmit its
transport parameters. We exclude that from our comparison to
TLS over TCP to guarantee comparability. Furthermore, the latest
draft of QUIC also requires using ALPN for application protocol
negotiation unless there is another mechanism [44]. ALPN is also
the single most significant extension which is missing in TLS over
TCP no SNI scans while it is present in the QUIC scan. Again, Google
and its edge deployments are the root cause for this observation.
The mismatch for the SNI scans is caused by a missing SNI
extension on the TLS over TCP scans. According to RFC6066 [1]
the server is required to return the extension if it used the name for
certificate selection. The RFC does not actively forbid to send the
extension if the value from the client is not used. As it is unlikely
that a target on TCP 443 only serves a single domain but multiple
on QUIC, we assume this uncritical gap in the standard leads to
this observation.
Key take-away. We find that the TLS deployments on QUIC
enabled hosts are very similar to the ones over TCP even though
QUIC deployments are often based on new, dedicated implementa-
tions or forked TLS libraries. For a majority of QUIC deployments,
the respective TLS over TCP deployments use TLS 1.3 with similar
configurations. All major differences can be explained with new
requirements by QUIC. As QUIC requires TLS 1.3 and most QUIC
deployments are by large providers the overall state seems solid.
We expect more diversity in deployments when adoption increases.
5.2 QUIC Configurations and Setups
We evaluate the previously omitted and newly specified TLS ex-
tension to transmit transport parameters [43] in more detail in-
dividually. While some transport parameters are session specific,
e.g., stateless reset token, others are implementation and / or con-
figuration specific [43] and can be used to analyze deployments,
thus we ignore options which contain tokens or connection IDs. In
total, we see 45 different configurations, combining all parameters.
All configurations are published with our results (see Section 1).
Figure 9 depicts the usage of each configuration based on targets
and ASes.
Most of the scanned domains reside within Cloudflare (AS13335),
which all share the same parameter configuration (0 in Figure 9).
The configuration is used by targets in 15 ASes in total. It mostly
consists of the default values as specified in draft 34 [22], an initial
stream data of 1 048 576 B and initial max data of a magnitude larger.
20 configurations are only used by a single AS each and in 50 %
of the seen ASes, we only see a single configuration. Analyzing
specific values reveals, that while for the parameters active conn
id limit, max ack delay and ack delay exponent default values are
mostly used, some parameters differ widely. For example, in the
QUIC specification max udp payload size is by default set to the
maximum UDP payload size (65 527 B). This value is used by 12
configurations, however 12 further configurations use 1500 B and
271
Table 6: Top 5 HTTP Server values by the number of ASes
with at least one target returning the value. #Parameters
displays the number of distinct transport parameter configu-
rations seen in combination with the Server value.
Server Value
proxygen-bolt
gvs 1.0
LiteSpeed
nginx
Caddy
#ASes
2224
1537
238
156
105
#Targets
46 421
5664
23 846
10 526
1526
#Parameters
4
1
2
16
1
overall, 10 different values can be seen. Furthermore, data transmis-
sion related parameters vary within multiple orders of magnitudes.
While some deployments only promote 8192 B of inital max data,
others support up to 16 777 216 B. For initial stream data, values
still range in between 32 k and 10 M. However, these values can be
updated throughout the connection.
Edge Point of Presences (POPs). Interestingly, targets in 42.2 %
of the ASes use three configurations. To better understand these
results, we include results from HTTP additionally collected by the
QScanner. The HTTP HEAD request is successful for:
• IPv4 with SNI: 12.6 M (95.8 %)
• IPv4 without SNI: 104 k (70.4 %)
• IPv6 with SNI: 12.3 M (96.1 %)
• IPv6 without SNI: 36 k (62.2 %)
In total, we collect more than 8 k different HTTP Headers but
focus on the HTTP Server header in the following. Even though
it is often recommended to reduce information included in the
Server header, it can contain hints about implementations. Besides
the most frequent value, Cloudflare, some values can be seen from
targets located in a wide variety of ASes.
As shown in Table 6, we see the value proxygen-bolt from targets
in 2244 ASes. It indicates usage of the Facebook HTTP Library
Proxygen [12] which provides QUIC based on the mvfst [11] imple-
mentation. The value is from successful connections with 50 k IP
addresses, out of which we were able to associate 7.5 k addresses
with a domain and scan with SNI. 95 % of domains contain either
fbcdn.net or cdninstagram.com. Furthermore, they share four combi-
nations of QUIC transport parameters not seen in combination with
other HTTP server values. Two configurations are only used by tar-
gets located in the Facebook AS (AS32934). They allow a relatively
high initial value for all stream data parameters with 10 485 760.
They differ only in the max_udp_payload_size parameter with
1500 B and 1404 B respectively.
The remaining two configurations are mostly responsible for
two out of three configurations seen in 42.2 % ASes as mentioned
earlier. They respectively announce both payload sizes as well but
further differ in the initial value for all stream data parameters with
67 584. We assume, the latter are edge POPs part of the Facebook
CDN providing content close to the user [27]. Therefore, while
these deployments are not hosted on Facebook ASes directly, they
are most likely set up by Facebook as large provider.
The value gvs 1.0 behaves similarly with 8.5 k IP addresses in
1.7 k ASes. While in most cases, we cannot associate a domain with
IMC ’21, November 2–4, 2021, Virtual Event, USA
Johannes Zirngibl, Philippe Buschmann, Patrick Sattler, Benedikt Jaeger, Juliane Aulbach, and Georg Carle
Figure 9: Distribution of transport parameter configurations ranked by number of targets.
these IP addresses, they all use the same set of transport parameters
not seen with any other HTTP Server header values. Furthermore,
this value is the third configuration, seen besides the values above
for many ASes. 14 % of IP addresses are part of Google (AS15169)
indicating a similar deployment with edge POPs.
This shows, that results about the deployment state of QUIC
as shown in Section 4 can be misleading if further information
about deployments is neglected. Combining the unique informa-
tion collected by the QScanner allows to investigate QUIC in more
detail throughout the early stages of the protocol. These additional
insights show that the current deployment status is mainly domi-
nated by large providers, not only in their own networks, but also
due to POPs in external networks.
Diversity within single ASes. Single ASes do not necessarily need
to provide a unique setup, e.g., from cloud providers, a variety of
configurations could be visible due to individual setups from cus-
tomers. The highest number of different configurations in a single
AS is 11 seen at Google (AS15169), Amazon (AS16509) and DigitalO-
cean (AS14061). All three offer cloud computing services allowing
setups from customers. The configurations differ in most values
and single configurations dominate for most of the hosts while the
remaining ones are rarely seen. Considering HTTP Server header
values reveals a large diversity, with 44 different values at Google,
including e.g., different NGINX versions or Python/3.7 aiohttp/3.7.2.
For Amazon, only 12 values can be seen and 9 for DigitialOcean.
While some of these deployments and corresponding server values
are most likely set up by the provider themselves, we argue that
others imply individual setups inside the cloud computing services.
Additional HTTP Server Values. Besides the earlier mentioned
values, the third most common value is LiteSpeed (see Table 6)
indicating a deployment based on LSQUIC [30]. It is used by 24 k
domains in combination with 1.3 k IP addresses and 240 ASes. While
most targets share the same configuration, no relation between
domains or ASes can be found. Thus, in our data it is the most seen
implementation not deployed by a single large provider.
The value nginx is present for 15 k targets but also as sub-string
of the HTTP Server header value for 16 k targets on 7.8 k scanned
IP addresses in combination with 17 different transport parame-
ter combinations. Besides only nginx, yunjiasu-nginx is used by
15 k targets and the remaining values include a variety of differ-
ent versions between 1.13.12 and 1.20.0. This reflects, that besides
the official QUIC branch from NGINX starting after the release of
version 1.17.8 [35], others have based HTTP3 implementations on
NGINX forks, e.g., Cloudflare [15].
Searching for further implementations listed by the QUIC work-
ing group [17] only reveals a few hits, e.g., h2o used by 12 targets in
five ASes including different commit hashes. Most implementations
are either infrequently used or not revealed by the header value.
Key take-away. Using the QUIC specific Transport Parameter
TLS extension allows analyzing and identifying deployments in
more detail. Due to the variety of used configurations and individ-
ual parameters, we are able to identify deployments located in a
multitude of ASes as edge POPs of large providers similar to the
work from Gigis et al. [16] but based on a differing methodology.
Taking these edge POPs into account, reveals that the deployment
state of QUIC is even more focused towards large providers than
shown in Section 4, solely based on originating ASes.
Furthermore, we argue that advertised transport parameters can
be used to analyze deployments and their differences in more detail
in the future. The availability of server preferences of relevant pa-
rameters regarding connection properties allows analyzing setups
and the impact of different parameters on QUIC connections.
6 RELATED WORK
After the initial announcement of QUIC by Google in 2013 [23]
and their initial study regarding the Internet-wide deployment
by Google [29] little has been done to analyze the deployment of
QUIC in its early stages. To our knowledge, the only large scale
study, that investigates the deployment of QUIC on the Internet is
from Rüth et al. [39]. However, they focused on the deployment
and usage of Google QUIC versions in 2016 and early 2017. The
IETF drafts were only in an early stage and not considered. They
discover a steady growth of IP addresses with gQUIC support and
an increasing traffic share mainly deployed by Google and Akamai
as driving forces. Our work is similar in parts of our approach
and overall goals but we set our self apart, by focusing on IETF
QUIC versions, including IPv6 and investigating additional sources,
namely HTTPS DNS RR and HTTP ALT-SVC Header, to discover
QUIC capable targets. The inclusion of the latter two sources reveals
additional QUIC deployments not found by the implemented ZMap
module. Furthermore, our stateful approach allows the analysis of
deployment characteristics like QUIC transport parameters and
TLS configurations.
272
010203040101103105107#Targets010203040100101102103#ASesIt’s Over 9000: Analyzing Early QUIC Deployments with the Standardization on the Horizon
IMC ’21, November 2–4, 2021, Virtual Event, USA
A subsequent study from Piraux et al. [38] introduces a test suite
which scans targets on the Internet and evaluates specification con-
formity of QUIC implementations. They determine that 10 % to 20 %
of the responses contain errors, which is similar to our SNI stateful
scans but do not further present the distribution of error messages.
In comparison, we investigate deployments in more detail, analyz-
ing their current state independent of used implementations.
A recent study from Trevisan et al. [45] investigates the HTTP/3
adoption based on the HTTP ALT-SVC Header extracted from the
open-source HTTPArchive Dataset but finds only 14 k websites
with HTTP/3 support in December 2020. The remaining study
focuses on a performance comparison between HTTP versions of
found sites. Deploying active scans, we find that the current QUIC
and HTTP/3 support is larger by multiple order of magnitudes.
A longitudinal analysis of the general TLS deployment can be
found in Kotzias et al. [28]. They show the overall reaction to known
high profile attacks (e.g., Heartbleed) and that the ecosystem can
react quickly to such. The deployment of TLS 1.3 throughout its
standardization and early years was analyzed by Holz et al. [19].
Similar to our work, they find that new transport protocols are
deployed quickly but mainly due to large providers activating server
side support by default, e.g., Cloudflare but also client side support,
e.g., Google and Mozilla. Based on their results, 75 % of domains
with TLS 1.3 support are hosted at Cloudflare. They solely focus on
TLS 1.3 over TCP and do not investigate QUIC. Our QScanner can
be used to perform similar analyses for QUIC.
Gigis et al. [16] recently reported about hypergiants’ off-nets and
their development over several years. They used TLS certificates
and HTTP header information from Internet-wide scans to identify
edge POPs of large providers. They report extensive usage of edge
POPs by large providers, e.g., Google and Facebook. Using QUIC
transport parameters in combination with HTTP Server header
values, we independently identify similar deployments for QUIC.
Additional related work covering QUIC mainly focuses on secu-
rity aspects [13, 31], the QUIC diversity due to the rapidly involv-
ing draft [38] and variety of available implementations [33] and
performance analyses including comparisons to TLS and / or TCP
[25, 26, 34, 38, 46].
7 DISCUSSION AND CONCLUSION
As a foundation for future research regarding the newly standard-
ized, fundamental network protocol QUIC, our work provides a
versatile tool set, to identify QUIC capable hosts and their proper-
ties. We presented an extensive analysis of different methodologies
to detect the QUIC deployment state on the Internet shortly before
the standardization. We verified that IETF QUIC already gained
relevant traction before its final standardization, and we showed
widespread QUIC deployment. Based on ZMap scans, HTTPS DNS
RRs and HTTP ALT-SVC Header, we find deployments in more than
4.7 k ASes and are able to conduct successful QUIC handshakes
with more than 26 M targets using the QScanner. We argue, that
QUIC has the potential to change the Internet ecosystem drastically
and highlight its importance to future Internet studies due to the