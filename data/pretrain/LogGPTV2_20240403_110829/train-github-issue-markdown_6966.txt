This is what I had to do to get Raven's Sentry client working with Celery:
Disable the logger to avoid duplicates in Sentry (one would be logged in
`celery.worker.job` with no frames locals, the other one with the root logger
with locals).
        celery.worker.job:
          level: INFO
          handlers: [yourhandler]
          propagate: no
I also had `CELERYD_HIJACK_ROOT_LOGGER` to `False` in my Celery configuration,
and had to disable celery logging completely:
    @signals.setup_logging.connect
    def setup_logging(**kwargs):
        """Setup logging."""     
        pass
I set up Sentry exactly like in the docs:
    from raven import Client
    from raven.contrib.celery import register_signal, register_logger_signal
    client = Client()
    # register a custom filter to filter out duplicate logs
    register_logger_signal(client)
    # hook into the Celery error handler
    register_signal(client)
I use:
    celery==3.1.17
    kombu==3.0.24
    raven==5.1.1
I understand there was already some discussion about this in #1867, not sure
if it has evolved.