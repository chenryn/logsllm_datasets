neither conﬁguration is connected to an external network,
there are several possible infection vectors. If the opera-
tors or maintenance personnel are malicious, they could
abuse their access in order to manually install malware.
USENIX Association  
23rd USENIX Security Symposium  375
7
smartphone — although operators are forbidden to have
such devices in the screening room [39].
Second, INSECURE.EXE selectively subverts the scan-
ner’s ability to detect contraband. Before displaying each
scan, it applies a pattern recognition algorithm to look for
a “secret knock” from the attacker: the concentric squares
of a QR code position block. If this pattern occurs, INSE-
CURE.EXE replaces the real scan with a preprogrammed
innocuous image. The actual scan, containing the trigger
pattern and any other concealed contraband, is entirely
hidden.
To trigger this malicious substitution, the subject sim-
ply wears the appropriate pattern, made out of any mate-
rial with a sufﬁciently different Zeff than human tissue. In
our experiments, we arranged lead tape in the target shape,
attached to an undershirt, as shown in Figure 7. When
worn under other clothing, the target is easily detected by
the malware but hidden from visual inspection.
Recently, in response to privacy concerns, the TSA has
replaced manual review of images with algorithmic image
analysis software known as automated target recognition
(ATR) [51]. Instead of displaying an image of the subject,
this software displays a stylized ﬁgure, with graphical
indicators showing any regions which the software con-
siders suspect and needing manual resolution. (Delays
in implementing this algorithm led the TSA to remove
Secure 1000 machines from airports entirely [1].) If mal-
ware can compromise the ATR software or its output
path, it can simply suppress these indicators — no image
replacement needed.
4.2 Embedded Controller Attacks
The System Control Board (SCB) managing the physi-
cal scanner is a second possible point of attack. While
the SCB lacks direct control over scan images, it does
control the scanner’s mechanical systems and X-ray tube.
We investigated whether an attacker who subverts the
SCB ﬁrmware could cause the Secure 1000 to deliver an
elevated radiation dose to the scan subject.
This attack is complicated by the fact that the Se-
cure 1000 includes a variety of safety interlocks that
prevent operation under unexpected conditions. Circuits
sense removal of the front panel, continuous motion of the
chopper wheel and the vertical displacement servo, X-ray
tube temperature and supply voltage, X-ray production
level, key position (“Standby” vs. “On”), and the duration
of the scan, among other parameters. If any anomalous
state is detected, power to the X-ray tube is immediately
disabled, ceasing X-ray emission.
While some of these sensors merely provide inputs to
the SCB software, others are tied to hard-wired watchdog
circuits that cut off X-ray power without software media-
tion. However, the ﬁrmware can bypass these hardware
interlocks. At the beginning of each scan, operational
Figure 6: Concealing Explosives by Shaping — Left: Subject
with no contraband. Right: Subject with more than 200 g of C-4
plastic explosive simulant plus detonator, molded to stomach.
The software on our machine lacks any sort of electronic
access controls (e.g., passwords) or software veriﬁcation.
While the PC is mounted in a lockable cabinet, we were
able to pick the lock in under 10 seconds with a commer-
cially available tool. Therefore, even an outsider with
temporary physical access could easily introduce mali-
cious code. TSA systems may be better locked down, but
sophisticated adversaries have a track record of infecting
even highly secured, airgapped systems [26, 31].
We implemented a form of user console malware by re-
verse engineering SECURE65.EXE, the front-end software
package used by the Secure 1000, and creating a mali-
cious clone. Our version, INSECURE.EXE, is a functional,
pixel-accurate reimplementation of the original program
and required approximately one man-month to create.
In addition to enabling basic scanning operations, IN-
SECURE.EXE has two malicious features. First, every
scan image is saved to a hidden location on disk for
later exﬁltration. This is a straightforward attack, and
it demonstrates one of many ways that software-based
privacy protections can be bypassed. Of course, the user
could also take a picture of the screen using a camera or
376  23rd USENIX Security Symposium 
USENIX Association
8
(a) Lead tape pattern
(b) Pattern concealed
(c) Scan as captured
Figure 7: A Secret Knock — We demonstrate how malware infecting the Secure 1000 user console could be used to defeat the
scanner. The malware is triggered when it detects a speciﬁc pattern in a scan, as shown here. It then replaces the real image (c) of the
attacker, which might reveal hidden contraband, with an innocuous image stored on disk. Pattern recognition occurs in real time.
characteristics such as tube voltage and servo motion
ﬂuctuate outside their nominal ranges. To prevent imme-
diate termination of every scan, SCB software temporarily
asserts a bypass signal, which disables the hardware inter-
locks. This signal feeds a “bypass watchdog” circuit of
its own, meant to prevent continual interlock bypass, but
the SCB can pet this watchdog by continuously toggling
the bypass signal, and cause all hardware interlocks to
be ignored. Thus, every safety interlock is either directly
under software control or can be bypassed by software.
We developed replacement SCB ﬁrmware capable of
disabling all of the software and hardware safety inter-
locks in the Secure 1000. With the interlocks disabled,
corrupt ﬁrmware can, for instance, move the X-ray tube
to a speciﬁc height, stop the chopper wheel, and activate
X-ray power, causing the machine to deliver the radia-
tion dose from an entire dose to a single point. Only the
horizontal displacement of this point is not directly un-
der ﬁrmware control — it depends on where the chopper
wheel happens to come to rest.
Delivering malicious SCB ﬁrmware presents an addi-
tional challenge. The ﬁrmware is stored on a replaceable
socketed EPROM inside the scanner unit, which is se-
cured by an easily picked wafer tumbler lock. Although
attackers with physical access could swap out the chip,
they could cause greater harm by, say, hiding a bomb
inside the scanner. For SCB attacks to pose a realistic
safety threat, they would need to be remotely deployable.
Due to the scanner’s modular design, the only feasible
vector for remote code execution is the serial link between
the user console and the SCB. We reverse engineered the
SCB ﬁrmware and extensively searched for vulnerabili-
ties. The ﬁrmware is simple (<32 KiB) and appears to
withstand attacks quite well. Input parsing uses a ﬁxed
length buffer, to which bytes are written from only one
function. This function implements bounds checking cor-
rectly. Data in the buffer is always processed in place,
rather than being copied to other locations that might re-
sult in memory corruption. We were unable to cause any
of this code to malfunction in a vulnerable manner.
While we are unable to remotely exploit the SCB to
deliver an elevated radiation dose, the margin of safety
by which this attack fails is not reassuring. Hardware
interlocks that can be bypassed from software represent a
safety mechanism but not a security defense. Ultimately,
the Secure 1000 is protected only by its modular, isolated
design and by the simplicity of its ﬁrmware.
4.3 Privacy Side-Channel Attack
AIT screening raises signiﬁcant privacy concerns because
it creates a naked image of the subject. Scans can re-
veal sensitive information, including anatomical size and
shape of body parts, location and quantity of fat, existence
of medical conditions, and presence of medical devices
such as ostomy pouches, implants, or prosthetics. As
ﬁgures throughout the paper show, the resulting images
are quite revealing.
Recognizing this issue, the TSA and scanner manu-
facturers have taken steps to limit access to raw scanned
images. Rapiscan and DHS claim that the TSA machines
had no capacity to save or store the images [27, 45]. The
TSA also stated that the backscatter machines they used
had a “privacy algorithm applied to blur the image” [50].
We are unable to verify these claims due to software dif-
USENIX Association  
23rd USENIX Security Symposium  377
9
the privacy threat model for AITs appears to have been
focused almost entirely on concerns about the behavior
of screening personnel, rather than the general public.
In the scenario we envision, an attacker follows a target
subject (for instance, a celebrity or politician) to a screen-
ing checkpoint while carrying an X-ray detector hidden in
a suitcase. As the victim is scanned, the hardware records
the backscattered X-rays for later reconstruction.
We experimented with the Secure 1000 to develop a
proof-of-concept of such an attack. The major technical
challenge is gathering enough radiation to have an accept-
able signal/noise ratio. The Secure 1000 uses eight large
photomultiplier tubes (PMTs) — four on either side of
the X-ray generator — in order to capture as much signal
as possible. For best results, an attacker should likewise
maximize observing PMT surface area, and minimize
distance from the subject, as radiation intensity falls off
quadratically with distance. To avoid arousing suspicion,
an attacker may be limited to only one PMT, and may
also be restricted in placement.
To determine whether external image reconstruction is
feasible, we used a small PMT, a 75 mm Canberra model
BIF2996-2 operated at 900 V, with a 10 cm× 10 cm NaI
crystal scintillator. We placed this detector adjacent to
the scanner and fed the signal to a Canberra Model 1510
ampliﬁer connected to a Tektronix DPO 3014 oscillo-
scope. After capturing the resulting signal, we converted
the time varying intensity to an image and applied manual
enhancements to adjust levels and remove noise.
Figure 8 shows the results from the scanner and from
our corresponding reconstruction. While our proof-of-
concept results are signiﬁcantly less detailed than the
scanner’s output, they suggest that a determined attacker,
equipped with a suitcase-sized PMT, might achieve sat-
isfactory quality. A further concern is that changes in
future backscatter imaging devices might make this attack
even more practical. Since the PMTs in the Secure 1000
are close to the maximum size that can ﬁt in the avail-
able space, further improvements to the scanner’s per-
formance — i.e., better resolution or reduced time per
scan — would likely require increased X-ray output. This
would also increase the amount of information leaked to
an external detector.
5 Discussion and Lessons
The Secure 1000 appears to perform largely as advertised
in the non-adversarial setting. It readily detected a variety
of naïvely concealed contraband materials. Our prelim-
inary measurements of the radiation exposure delivered
during normal scanning (Appendix A) seem consistent
with public statements by the manufacturer, TSA, and
the FDA [5, 18, 38, 54]. Moreover, it seems clear that
the manufacturer took signiﬁcant care to ensure that pre-
dictable equipment malfunctions would not result in un-
(a) From scanner
(b) From external detector
Figure 8: Attacking Privacy — An attacker could use a detec-
tor hidden in a suitcase to capture images of the subject during
scanning. As a proof of concept, we used a small external
PMT to capture images that are consistent with the scanner’s
output. A larger detector would produce more detailed images.
ferences between our machine and TSA models. Our
Secure 1000 has documented save, recall (view saved
images), and print features and does not appear to have a
mechanism to disable them. In fact, using forensic anal-
ysis software on the user console’s drive, we were able
to recover a number of stored images from test scans that
were incompletely deleted during manufacturing.
These software-based defenses aim to safeguard pri-
vacy in images that are constructed by the machine, but
they do not address a second class of privacy attacks
against AITs: an outsider observer could try to recon-
struct scanned images by using their own external detector
hardware. The most mechanically complex, dangerous,
and energy intensive aspects of backscatter imaging are
related to X-ray illumination; sensing the backscattered
radiation is comparatively simple. Since X-rays scatter
off the subject in a broad arc, they create a kind of physi-
cal side channel that potentially leaks a naked image of
the subject to any nearby attacker. To the best of our
knowledge, we are the ﬁrst to propose such an attack;
378  23rd USENIX Security Symposium 
USENIX Association
10
safe radiation doses; in order for this to happen a number
of independent failures would be required, including fail-
ures of safety interlocks speciﬁcally designed to prevent
unsafe conditions.
However, the Secure 1000 performs less well against
clever and adaptive adversaries, who can use a number
of techniques to bypass its detection capabilities and to
attempt to subvert it by cyberphysical means.
In this
section, we use the device’s strengths and weaknesses
to draw lessons that may help improve the security of
other AITs and cyberphysical security systems more gen-
erally.
The effectiveness of the device is constrained by facts
of X-ray physics . . . As discussed in Section 2.1,
Compton scattering is the physical phenomenon which
enables backscatter imaging. As the tight beam of X-rays
shines upon the scene, it interacts with the scene material.
The intensity and energy spectrum of the backscattered
radiation is a function of both the X-ray spectrum emitted
by the imaging device and the atomic composition of the
material in the scene.
The Secure 1000 emits a single constant X-ray spec-
trum, with a maximum energy of 50 keV, and detects the
intensity of backscatter to produce its image. Any two
materials, no matter their actual atomic composition, that
backscatter the same approximate intensity of X-rays will
appear the same under this technology. This physical pro-
cess enables our results in Section 3.3. This issue extends
beyond the Secure 1000: any backscatter imaging device
based upon single-spectrum X-ray emission and detection
will be vulnerable to such attacks.
By contrast, baggage screening devices (such as the re-
cently studied Rapiscan 522B; see [37]) usually use trans-
missive, rather than backscatter, X-ray imaging. These de-
vices also often apply dual-energy X-ray techniques that
combine information from low-energy and high-energy
scans into a single image. To avoid detection by such sys-
tems, contraband will need to resemble benign material
under two spectra, a much harder proposition.
. . . but physics is irrelevant in the presence of soft-
ware compromise.
In the Secure 1000, as in other
cyberphysical screening systems, the image of the ob-
ject scanned is processed by software. If that software
has been tampered with, it can modify the actual scan
in arbitrary ways, faking or concealing threats. Indeed,
the ability of device software to detect threats and bring
them to the attention of the operator is presumed in the
“Automated Target Recognition” software used in current
TSA millimeter-wave scanners [51]. Automatic suppres-
sion of threats by malicious software is simply the (easier
to implement) dual of automatic threat detection. As we
show in Section 4.1, malware can be stealthy, activating
only when it observes a “secret knock.”
Software security, including ﬁrmware updates, net-
worked access, and chain-of-custody for any physical
media, must be considered in any cyberphysical scanning
system. Even so, no publicly known study commissioned
by TSA considers software security.
Procedures are critical, but procedural best practices
are more easily lost than those embedded in software.