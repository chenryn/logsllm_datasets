### Feature Request

**Current Behavior:**
When using a UI kit that incorporates `forwardRefs`, I encounter error messages similar to the following:
![Error Message](https://user-images.githubusercontent.com/12100/53372321-61ceae00-3907-11e9-9d20-190315cc7f06.png)

**Expected Behavior:**
The error messages and component stack traces would be more readable and informative if `forwardRefs` were less obtrusive and if they used the `displayName` of the wrapped function instead of the function's name. 

In our UI Kit, we use a pattern like this:
```javascript
const View = forwardRef(function UIView() { return <div></div>; });
View.displayName = 'SomeDisplayName';
```
However, the `displayName` is not being picked up, and only the inner function name is shown. Additionally, the presence of `ForwardRef` in the stack trace makes it visually cumbersome when scanning.

**Proposed Improvements:**

1. **Use `displayName` for Wrapped Components:**
   - The `displayName` should be used in the stack trace instead of the function name.
   - This would make the stack trace more meaningful and easier to read.

2. **Simplify `ForwardRef` Representation:**
   - The `ForwardRef` wrapper should be less prominent in the stack trace.
   - For example, instead of `in Gloss (ForwardRef)`, it could simply be `in Gloss`.

3. **Improve `created by` Information Alignment:**
   - The `created by` information should be better aligned and formatted for readability.
   - This would help in quickly identifying the source of the components in the stack trace.

**Example of Improved Stack Trace:**
```plaintext
Warning: Encountered two children with the same key, `confluence`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted â€” the behavior is unsupported and could change in a future version.
  in div (created by Row)
  in View (forwardRef)
from OnboardMain:
  in Row (forwardRef)
from Col (forwardRef):
  in div
  in Grid (forwardRef)
from SliderPane:
  in View (forwardRef)
```

**Summary:**
By picking up the `displayName` of the wrapped functions and simplifying the representation of `ForwardRef` in the stack trace, the error messages and component hierarchy would be much more readable and useful for debugging.