User:  How to receive mail from a mail server using Python script?
Assistant: To receive mail from a mail server, you can use Python's built-in imaplib library. The following are the steps to achieve: 1. Establish a connection with the mail server To receive mail, you first need to establish a connection with the mail server. Use the IMAP4_SSL() method of the imaplib library to establish an SSL connection with the server. For example: ``` import imaplib mail = imaplib.IMAP4_SSL('mail.example.com') ``` 2. Log in to the mailbox Use the login() method of the imaplib library to log in to the mailbox. This method requires a username and password to be passed in. For example: ``` mail.login('your_email@example.com', 'password') ``` 3. Select the mailbox folder Use the select() method of the imaplib library to select the mailbox folder to receive mail. For example: ``` mail.select('INBOX') ``` 4. Search emails Use the search() method of the imaplib library to search for eligible emails. For example: ``` result, data = mail.search(None, 'FROM', '"sender@example.com"') ``` The above code will search for all emails sent by sender@example.com. The search criteria can be modified as required. 5. Obtaining the digest of the mail Use the fetch() method of the imaplib library to obtain the digest information of the mail. For example: ``` result, data = mail.fetch(b'1', '(BODY[HEADER.FIELDS (SUBJECT FROM DATE)])') ``` The above code will get the subject and sender of the first email person and date. 6. Download email attachments You can also download email attachments using the fetch() method of the imaplib library. For example: ``` result, data = mail.fetch(b'1', '(BODY.PEEK[])') ``` The above code will download the entire content of the first email, including email attachments. It should be noted that if the message is too large, it may cause insufficient memory. 7. Close the connection After completing all operations, you need to use the logout() method of the imaplib library to close the connection. For example: ``` mail.logout() ``` The complete sample code is as follows: ``` import imaplib mail = imaplib.IMAP4_SSL('mail.example.com') mail.login('your_email@example.com', 'password') mail.select('INBOX') result, data = mail.search(None, 'FROM', '"sender@example.com"') for num in data[0].split(): result, summary = mail.fetch(num, '(BODY[HEADER.FIELDS (SUBJECT FROM DATE)])') print(summary[0][1].decode('utf-8')) result, data = mail.fetch (b'1', '(BODY.PEEK[])') print(data[0][1]) mail.logout() ```