It seems that the scikit-learn test job that runs against numpy master found a
breaking change in numpy:
scikit-learn/scikit-learn#12467
Minimal reproduction case:
    >>> import numpy as np
    >>> np.__version__
    '1.16.0.dev0+8aa1214'
    >>> np.vstack([0] for _ in range(3))
    Traceback (most recent call last):
      File "", line 1, in 
        np.vstack([0] for _ in range(3))
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/overrides.py", line 151, in public_api
        implementation, public_api, relevant_args, args, kwargs)
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/overrides.py", line 96, in array_function_implementation_or_override
        return implementation(*args, **kwargs)
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/shape_base.py", line 260, in vstack
        return _nx.concatenate([atleast_2d(_m) for _m in tup], 0)
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/overrides.py", line 151, in public_api
        implementation, public_api, relevant_args, args, kwargs)
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/overrides.py", line 96, in array_function_implementation_or_override
        return implementation(*args, **kwargs)
      File "/opt/venvs/py37/lib/python3.7/site-packages/numpy/core/multiarray.py", line 193, in concatenate
        return _multiarray_umath.concatenate(arrays, axis, out)
    ValueError: need at least one array to concatenate
This used to work in past versions of numpy:
    >>> import numpy as np
    >>> np.__version__
    '1.14.5'
    >>> np.vstack([0] for _ in range(3))
    array([[0],
           [0],
           [0]])