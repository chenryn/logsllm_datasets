80 Inthisexample,theticketstableisscannedonlyonce.The
v arrayofairportsisdisplayedforclarity;forlargevolumesof
data,itmakessensetoremoveitfromthequerysinceextra
datacanhamperperformance.
Problem.Findtheround-tripticketsinwhichtheoutbound
routediffersfromtheinboundone.
Problem. Findthepairsofairportswithinboundandout-
boundflightsdepartingondifferentdaysoftheweek.
Solution.Thepartoftheproblemthatinvolvesbuildingan
arrayofdaysoftheweekisvirtuallysolvedintheroutes
view. Youonlyhavetofindtheintersectionofarraysusing
the&&operator,andmakesureit’sempty:
SELECT r1.departure_airport,
r1.arrival_airport,
r1.days_of_week dow,
r2.days_of_week dow_back
FROM routes r1
JOIN routes r2
ON r1.arrival_airport = r2.departure_airport
AND r1.departure_airport = r2.arrival_airport
WHERE NOT (r1.days_of_week && r2.days_of_week);
RecursiveQueries
Problem. HowcanyougetfromUst-Kut(UKX)toNeryungri
(CNN)withtheminimalnumberofconnections,andwhatwill
theflighttimebe?
Solution.Hereyouhavetofindtheshortestpathinthegraph.
Itcanbedonewiththefollowingrecursivequery:
WITH RECURSIVE p( 81
last_arrival,
v
destination,
hops,
flights,
flight_time,
found
) AS (
SELECT a_from.airport_code,
a_to.airport_code,
array[a_from.airport_code],
array[]::char(6)[],
interval '0',
a_from.airport_code = a_to.airport_code
FROM airports a_from,
airports a_to
WHERE a_from.airport_code = 'UKX'
AND a_to.airport_code = 'CNN'
UNION ALL
SELECT r.arrival_airport,
p.destination,
(p.hops || r.arrival_airport)::char(3)[],
(p.flights || r.flight_no)::char(6)[],
p.flight_time + r.duration,
bool_or(r.arrival_airport = p.destination)
OVER ()
FROM p
JOIN routes r
ON r.departure_airport = p.last_arrival
WHERE NOT r.arrival_airport = ANY(p.hops)
AND NOT p.found
)
SELECT hops,
flights,
flight_time
FROM p
WHERE p.last_arrival = p.destination;
Adetailedstep-by-stepexplanationofthisqueryispublished
athabr.com/en/company/postgrespro/blog/490228/,sowe’ll
onlyprovidesomebriefcommentshere.
82 Infinite looping is prevented by checking the hops array,
v whichisbuiltwhilethequeryisbeingexecuted.
Notethatthebreadth-firstsearchisperformed,sothefirst
paththatisfoundwillbetheshortestoneconnection-wise.
Toavoidloopingoverotherpaths(thatcanbenumerousand
aredefinitelylongerthanthealreadyfoundone),thefound
attributeisused.Itiscalculatedusingthebool_orwindow
function.
Itisusefultocomparethisquerywithitssimplervariant
withoutthefoundtrick.
Tolearnmoreaboutrecursivequeries,seedocumentation:
postgrespro.com/doc/queries-with.html
Problem.Whatisthemaximumnumberofconnectionsthat
canberequiredtogetfromanyairporttoanyotherairport?
Solution.Wecantakethepreviousqueryasthebasisforthe
solution. However,thefirstiterationmustnowcontainall
possibleairportpairs,notasinglepair:eachairportmustbe
connectedtoallotherairports.Forallthesepairsofairports
wefirstfindtheshortestpath,andthenselectthelongestof
them.
Clearly,itisonlypossibleiftheroutesgraphisconnected,
butthisistrueforourdemodatabase.
Thisqueryalsousesthefoundattribute,buthereitshould
becalculatedseparatelyforeachpairofairports.
WITH RECURSIVE p( 83
departure,
v
last_arrival,
destination,
hops,
found
) AS (
SELECT a_from.airport_code,
a_from.airport_code,
a_to.airport_code,
array[a_from.airport_code],
a_from.airport_code = a_to.airport_code
FROM airports a_from,
airports a_to
UNION ALL
SELECT p.departure,
r.arrival_airport,
p.destination,
(p.hops || r.arrival_airport)::char(3)[],
bool_or(r.arrival_airport = p.destination)
OVER (PARTITION BY p.departure,
p.destination)
FROM p
JOIN routes r
ON r.departure_airport = p.last_arrival
WHERE NOT r.arrival_airport = ANY(p.hops)
AND NOT p.found
)
SELECT max(cardinality(hops)-1)
FROM p
WHERE p.last_arrival = p.destination;
Problem. FindtheshortestroutefromUst-Kut(UKX)toNe-
gungri (CNN) from the flight time point of view (ignoring
connectiontime).
84 Hint:theroutemaybenon-optimalwithregardstothenum-
v berofconnections.
Solutionfollowsbelowandonthenextpage.
WITH RECURSIVE p(
last_arrival,
destination,
hops,
flights,
flight_time,
min_time
) AS (
SELECT a_from.airport_code,
a_to.airport_code,
array[a_from.airport_code],
array[]::char(6)[],
interval '0',
NULL::interval
FROM airports a_from,
airports a_to
WHERE a_from.airport_code = 'UKX'
AND a_to.airport_code = 'CNN'
UNION ALL
SELECT r.arrival_airport,
p.destination,
(p.hops || r.arrival_airport)::char(3)[],
(p.flights || r.flight_no)::char(6)[],
p.flight_time + r.duration,
least(
p.min_time, min(p.flight_time+r.duration)
FILTER (
WHERE r.arrival_airport = p.destination
) OVER ()
)
FROM p
JOIN routes r
ON r.departure_airport = p.last_arrival
WHERE NOT r.arrival_airport = ANY(p.hops)
AND p.flight_time + r.duration  a_to.coordinates) *
1.609344
)
FROM airports a_from,
airports a_to
WHERE a_from.airport_code = 'KGD'
AND a_to.airport_code = 'PKC';
Problem.Drawthegraphofflightsbetweenallairports.
87
vi
VI PostgreSQL
for Applications
ASeparateUser
Inthepreviouschapter,weshowedhowtoconnecttothe
databaseserveronbehalfofthepostgresuser.Thisisthe
onlydatabaseuseravailablerightafterPostgreSQLinstalla-
tion. Butsincethepostgresuserhassuperuserprivileges,
itshouldnotbeusedbyapplicationsfordatabaseconnec-
tions.Itisbettertocreateanewuserandmakeittheowner
ofaseparatedatabase,sothatitsrightsarelimitedtothis
databaseonly.
postgres=# CREATE USER app PASSWORD 'p@ssw0rd';
CREATE ROLE
postgres=# CREATE DATABASE appdb OWNER app;
CREATE DATABASE
Tolearnmoreaboutusersandprivileges,see:
postgrespro.com/doc/user-manag.html
andpostgrespro.com/doc/ddl-priv.html.
Toconnecttoanewdatabaseandstartworkingwithiton
behalfofthenewlycreateduser,run:
postgres=# \c appdb app localhost 5432
88 Password for user app: ***
You are now connected to database "appdb" as user
vi
"app" on host "127.0.0.1" at port "5432".
appdb=>
Thiscommandtakesfourparameters,inthefollowingorder:
databasename(appdb),username(app),node(localhostor
127.0.0.1),andportnumber(5432).
Notethatthedatabasenameisnottheonlythingthathas
changedintheprompt:insteadofthehashsymbol(#),the
greaterthansignisdisplayed(>).Thehashsymbolindicates
thesuperuserrights,similartotherootuserinUnix.
Theappuserworkswiththeirdatabasewithoutanyrestric-
tions.Forexample,thisusercancreateatable:
appdb=> CREATE TABLE greeting(s text);
CREATE TABLE
appdb=> INSERT INTO greeting VALUES ('Hello, world!');
INSERT 0 1
RemoteConnections
Inourexample,boththeclientandthedatabasearelocated
onthesamesystem.Clearly,youcaninstallPostgreSQLonto
aseparateserverandconnecttoitfromadifferentsystem
(forexample,fromanapplicationserver). Inthiscase,you
mustspecifyyourdatabaseserveraddressinsteadoflocal-
host. Butitisnotenough:forsecurityreasons,PostgreSQL
onlyallowslocalconnectionsbydefault.
Toconnecttothedatabasefromtheoutside,youmustedit
twofiles.
Firstofall,modifythepostgresql.conffile,whichcontains 89
themainconfigurationsettings. Itisusuallylocatedinthe vi
datadirectory.Findthelinedefiningnetworkinterfacesfor
PostgreSQLtolistenon:
#listen_addresses = 'localhost'
andreplaceitwith:
listen_addresses = '*'
Next,editthepg_hba.conffilewithauthenticationsettings.
When a client tries to connect to the server, PostgreSQL
searchesthisfileforthefirstlinethatmatchestheconnec-
tionbyfourparameters: connectiontype, databasename,
username,andclientIP-address.Thislinealsospecifieshow
theusermustconfirmtheiridentity.
Forexample,onDebianandUbuntu,thisfileincludesthe
followingsettingamongothers(thetoplinestartingwitha
hashsymbolisacomment):
# TYPE DATABASE USER ADDRESS METHOD
local all all peer
Itmeansthatlocalconnections(local)toanydatabase(all)
onbehalfofanyuser(all)mustbevalidatedbythepeer
authenticationmethod(forlocalconnections,IP-addressis
obviouslynotrequired).
ThepeermethodmeansthatPostgreSQLrequeststhecur-
rentusernamefromtheoperatingsystemandassumesthat
theOShasalreadyperformedtherequiredauthentication
check(promptedforthepassword).ThisiswhyonLinux-like
90 operatingsystemsusersusuallydon’thavetoenterthepass-
vi wordwhenconnectingtotheserveronthelocalcomputer:
itisenoughtoenterthepasswordwhenloggingintothe
system.
ButWindowsdoesnotsupportlocalconnections,sothisline
looksasfollows:
# TYPE DATABASE USER ADDRESS METHOD
host all all 127.0.0.1/32 md5
Itmeansthatnetworkconnections(host)toanydatabase
(all) on behalf of any user (all) from the local address
(127.0.0.1) must be checked by the md5 method. This
methodrequirestheusertoenterthepassword.
Forourpurposes,youhavetoaddthefollowinglineatthe
endofthepg_hba.conffile,sothattheappusercanaccess
theappdbdatabasefromanyaddressifthecorrectpassword
isentered:
host appdb app all md5
Afterchangingtheconfigurationfiles,don’tforgettomake
theserverre-readthesettings:
postgres=# SELECT pg_reload_conf();
Tolearnmoreaboutauthenticationsettings,see
postgrespro.com/doc/client-authentication.html
PingingtheServer 91
vi
ToaccessPostgreSQLfromanapplicationinanyprogram-
minglanguage,youhavetouseanappropriatelibraryand
installthecorrespondingdatabasedriver.Adriverisusually
awrapperforlibpq(astandardlibrarythatimplementsthe
client-serverprotocolforPostgreSQL),butotherimplemen-
tationsarealsopossible.
Belowweprovidesimplecodesnippetsforseveralpopular
languages.Theseexamplescanhelpyouquicklycheckthe
connectionwiththedatabasesystemthatyouhaveinstalled
andsetup.
Theprovidedprogramscontainonlytheminimalviablecode
to run a simple database query and display the result; in
particular,thereisnoerrorhandling.Don’ttakethesecode
snippetsasaverbatimexampletofollow.
IfyouareworkingonaWindowssystem,toensurethecorrect
displayofextendedcharactersets,youmayneedtoswitch
toaTrueTypefontintheCommandPromptwindow(forex-
ample,“LucidaConsole”or“Consolas”)andchangethecode
page.Forexample,fortheRussianlanguage,runthefollow-
ingcommands:
C:\> chcp 1251
Active code page: 1251
C:\> set PGCLIENTENCODING=WIN1251
92 PHP
vi
PHPinteractswithPostgreSQLviaaspecialextension. On
Linux,apartfromthePHPitself,youalsohavetoinstallthe
packagewiththisextension:
$ sudo apt-get install php5-cli php5-pgsql
You can install PHP for Windows from the PHP website:
windows.php.net/download. TheextensionforPostgreSQL
isalreadyincludedintothebinarydistribution,butyoumust
findanduncomment(byremovingthesemicolon)thefollow-
inglineinthephp.inifile:
;extension=php_pgsql.dll
Asampleprogram(test.php):
Let’sexecutethiscommand:
$ php test.php
Hello, world!
YoucanreadaboutthisPostgreSQLextensioninPHPdocu-
mentation:php.net/manual/en/book.pgsql.php.
Perl 93
vi
InthePerllanguage,databaseoperationsareimplemented
viatheDBIinterface. OnDebianandUbuntu,Perlitselfis
pre-installed,soyouonlyneedtoinstallthedriver:
$ sudo apt-get install libdbd-pg-perl
ThereareseveralPerlbuildsforWindows,whicharelisted
atwww.perl.org/get.html.PopularbuildsofActiveStatePerl
andStrawberryPerlalreadyincludethedriverrequiredfor
PostgreSQL.
Asampleprogram(test.pl):
use DBI;
my $conn = DBI->connect(
'dbi:Pg:dbname=appdb;host=localhost;port=5432',
'app','p@ssw0rd') or die;
my $query = $conn->prepare('SELECT * FROM greeting');
$query->execute() or die;
while (my @row = $query->fetchrow_array()) {
print @row[0]."\n";
}
$query->finish();
$conn->disconnect();
Let’sexecutethiscommand:
$ perl test.pl
Hello, world!
Theinterfaceisdescribedindocumentation:
metacpan.org/pod/DBD::Pg.
94 Python
vi
ThePythonlanguageusuallyusesthepsycopglibrary(pro-
nouncedas“psycho-pee-gee”)toworkwithPostgreSQL.On
DebianandUbuntu, Python2ispre-installed, soyouonly
needthecorrespondingdriver:
$ sudo apt-get install python-psycopg2
IfyouareusingPython3,installthepython3-psycopg2pack-
ageinstead.
YoucandownloadPythonforWindowsfromthewww.python.
org website. The psycopg library is available at initd.org/
psycopg(choosetheversioncorrespondingtotheversionof
Pythoninstalled). Youcanalsofindalltherequireddocu-
mentationthere.
Asampleprogram(test.py):
import psycopg2
conn = psycopg2.connect(
host='localhost', port='5432', database='appdb',
user='app', password='p@ssw0rd')
cur = conn.cursor()
cur.execute('SELECT * FROM greeting')
rows = cur.fetchall()
for row in rows: