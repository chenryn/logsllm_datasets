title:Who Knocks at the IPv6 Door?: Detecting IPv6 Scanning
author:Kensuke Fukuda and
John S. Heidemann
Who Knocks at the IPv6 Door?
Detecting IPv6 Scanning
Kensuke Fukuda
National Institute of Informatics/Sokendai
John Heidemann
USC/Information Sciences Institute
ABSTRACT
DNS backscatter detects internet-wide activity by looking for com-
mon reverse DNS lookups at authoritative DNS servers that are
high in the DNS hierarchy. Both DNS backscatter and monitoring
unused address space (darknets or network telescopes) can detect
scanning in IPv4, but with IPv6’s vastly larger address space, dark-
nets become much less effective. This paper shows how to adapt
DNS backscatter to IPv6. IPv6 requires new classification rules, but
these reveal large network services, from cloud providers and CDNs
to specific services such as NTP and mail. DNS backscatter also
identifies router interfaces suggesting traceroute-based topology
studies. We identify 16 scanners per week from DNS backscatter
using observations from the B-root DNS server, with confirmation
from backbone traffic observations or blacklists. After eliminating
benign services, we classify another 95 originators in DNS backscat-
ter as potential abuse. Our work also confirms that IPv6 appears to
be less carefully monitored than IPv4.
CCS CONCEPTS
• Networks → Network measurement; Network security;
KEYWORDS
IPv6, Scanning, DNS backscatter
ACM Reference Format:
Kensuke Fukuda and John Heidemann. 2018. Who Knocks at the IPv6
Door? Detecting IPv6 Scanning. In Proceedings of 2018 Internet Measure-
ment Conference (IMC ’18). ACM, New York, NY, USA, 7 pages. https:
//doi.org/10.1145/3278532.3278553
1 INTRODUCTION
Active network scanning is a popular approach to study the Internet
topology [7], the network edge [19], with applications including
identification of Internet-of-Things devices [25], security risks [11]
and mechanisms [10], and network reliability [26]. With multiple
IPv4 scanning tools freely available today [11, 18, 21], IPv4 scanning
is something anyone can do, and many groups are doing it [9, 23].
As IPv6 use grows, so does interest in carrying out and detecting
IPv6 scanning. Yet IPv6 scanning is much more difficult, because
the much larger address space size (2128 instead of only 232) makes
brute-force enumeration impossible. Optimizations to search the
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5619-0/18/10...$15.00
https://doi.org/10.1145/3278532.3278553
IPv6 address space are an open area of research [1, 2, 12, 13, 16, 17,
24]. Yet little is known about scanning in IPv6 today.
One thing we know about IPv6 is that it is new, and one conse-
quence of this novelty is that often it is not as carefully secured as
IPv4, as shown by Czyz et al. [8]. Their study was made with dual-
stack IPv4 and IPv6 computers, but our study includes additional
sources allowing broader IPv6 detection.
DNS backscatter detects network-wide events by watching for
frequent, common reverse DNS names [14]. Although developed
for IPv4, its sensitivity depends on traffic triggered by network wide
events (not address space size), so DNS backscatter holds promise
for IPv6.
The goal of this paper is to adapt DNS backscatter to IPv6 and to
use it to understand IPv6 scanning and security. Our first contribu-
tion is to show how DNS backscatter can be adapted from IPv4 to
IPv6, taking care in filtering out network services that also cause
DNS backscatter (§2). Although similar to IPv4, we use a different
(simpler) classification to accommodate lower amounts of backscat-
ter in IPv6. Second, we use IPv6 DNS backscatter to confirm that
IPv6 security policies are weaker than IPv4 (§3), reexamining prior
evaluation of dual-stack hosts [8]with probe measurements across
all IPv6 hosts. Our final contribution (§4) is to study what IPv6
DNS backscatter finds over six months of data observed at B-root
DNS server. We detect a number of major internet services (cloud
providers, NTP operators), and lookups of router interfaces due to
traceroute-driven topology studies. More importantly, we find 16
active IPv6 scanners per week, seen in DNS backscatter and con-
firmed in backbone packet traces or blacklists. We also find another
95 potential abuse cases not seen in traces or darknets, suggesting
the importance of backscatter for IPv6. Our observations suggest
that scanning rates are growing slowly over six months.
2 DNS BACKSCATTER AS IPV6 SENSOR
We first review how DNS backscatter works from prior work, then
describe how we adapt it to IPv6 and classify originators.
2.1 Background on DNS Backscatter
We first summarize DNS backscatter from prior work [14].
Consider a network scanner (the originator) who sends probes to
a number of hosts (the targets) in the IPv6 Internet. Firewalls on or
in front of some of these targets investigate probe packets, looking
up the reverse DNS name of the probe’s source IP address. This
DNS query is done by the recursive resolver (the querier) for the
firewall, and is ultimately handled by the authoritative server (the
authority) that is responsible for the originator’s reverse address
in ip6.arpa. Depending on caching, this query may also be seen at
other authorities higher in the DNS hierarchy.
DNS backscatter is the process of observing originators (IPv6
addresses) that occur frequently from many queriers. These are
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
Kensuke Fukuda and John Heidemann
backscatter detections that represent some kind of widespread net-
work activity from the originator. DNS backscatter is attenuated
by caching, and the degree of attenuation depends on where in the
hierarchy the authority is. Thus, although attenuation makes it dif-
ficult to quantify the size of scans, in principle, many network-wide
events can be observed in reverse queries at a root DNS server.
Many types of events trigger DNS backscatter; some of them are
benign, such as CDNs, cloud providers or large services (Google,
Microsoft, Facebook), and NTP servers. Others are malicious or
potentially malicious, including network scanners and spammers.
2.2 DNS Backscatter in IPv6
We describe the procedure to characterize network-wide events
using authoritative DNS server logs.
We first extract reverse IPv6 address queriers from the DNS logs
and group queriers per originator. We discard querier-originator
pairs where all queriers and the originator belong to the same
Autonomous System (AS) because such activities are local to that
AS and not network-wide activity. We aggregate data over some
duration d, then report cases where there are more than a detection
threshold q queriers in that period. We use 7 days for d and 5
distinct queriers for q, values chosen based on our comparison of
observations to ground truth (see also below). The result is a list of
significant queriers per originator in d days.
Finally, we apply classification, as described in §2.3, to originators
in the list. The result is network services (mostly benign) and a
few that are potentially abuses. Finally, we check potential abuse
(originator IP addresses that do not match any of our benign classes)
to DNS-based black lists (spam and scan) and other ground truth
data of anomalous activities to confirm, as described in §4.1.
Our classification procedure and the parameters for duration
and threshold all differ from IPv4 because DNS backscatter is less
frequent in IPv6 than in IPv4. The IPv6 duration and threshold
(d of 7 days and q of 5 queriers) are both laxer than IPv4, where
d = 1 and q = 20 [14]. In preliminary investigations using the IPv4
parameters we did not detect any ground truth scans (Table 5). This
absence in IPv4 likely results from fewer present targets, and less
logging per target. Thus for IPv6 we adopt larger d and smaller
q. Since one target can trigger multiple queriers (due to multiple
recursive resolvers), we tune q to capture network events related
to more than one target. Should future IPv6 responses grow (due
to greater logging per target, or perhaps due to improved scanning
heuristics), it may be possible to use paramters and ML techniques
as we used for IPv4.
2.3 Originator Classification in IPv6
We next describe our heuristics to classify originators. Originator
are assigned to the first class they match.
major service Big application servers, including Facebook, Google,
Microsoft, Yahoo. Determined by AS numbers.
cdn CDN infrastructure, including Akamai, Cloudflare, Edgecast,
CDN77, Fastly. Determined by AS number or name suffix.
dns nameservers like ns.example.com. Determined by keywords
in name: cns, dns, ns cache, resolv, name. We also rely on
root.zone file for authoritative servers. Additionally, we find
other dns servers by sending DNS queries to originators.
ntp NTP servers like ntp.example.com. Determined by keywords
(ntp, time) in name, and by crawling IP addresses in pool.
ntp.org (4.8k IPs).
mail mail servers like mail.example.com. Determined by key-
words in name: mail, mx, smtp, post, correo, poczta, send,
lists, newsletter, spam, zimbra, mta, pop, imap.
web web servers, determined by keyword (www) in name www.
tor tor servers, as appear in https://www.dan.me.uk/torlist/ (1.2k
example.com.
IPs).
other service Other application servers, e.g., push services, VPN
services. Determined by name suffix.
iface router interfaces. Determined by interface or location in
name (like ge0-lon-2.example.com), or by presence in the
publicly available IPv6 topology data provided by CAIDA [4].
near-iface router interfaces inferred by following conditions:
(1) all queriers belong to the same AS name, and (2) the orig-
inator’s AS provides transit to querier’s AS. These queriers
are doing many traceroutes traversing a common link, and
these are inferred to be interfaces are near the traceroute
source. (If DNS confirmed them as interfaces they would
be just “iface”, but they either lack reverse DNS or it is not
recognizable.)
qhost quasi-hosts—inferred to be edge devices seen in several
ISPs, where the originator has no reverse name and all queriers
are end-hosts in one AS (i.e., /64 randomized IPs or automat-
ically assigned names like home-1-2-3-4.example.com. We
believe these represent some software running on customer-
provided equipment.
tunnel IP addresses for IPv4/v6 tunneling: Teredo [20] (2001::/32)
and 6to4 [5] (2002::/16).
scan Confirmed scanners, as determined by appearance in black-
lists: https://www.abuseipdb.com or https://access.watch, or
in backbone traffic data (see also §4.1).
spam Confirmed spammers, as determined by appearance in ei-
ther of DNSBLs: sbl.spamhaus.org, all.s5h.net, dnsbl.beetjevreemd.
nl.
Different from our prior work on DNS backscatter in IPv4 [14],
we directly infer the class of originator instead of using machine
learning (ML) techniques. We shift away from ML because the
number of queriers is much smaller, so the dataset is too small
for effective classification with ML. However, our IPv6 rules in-
clude discriminative features similar to those we used in IPv4’s
ML-based classification, such as keywords, geolocation diversity
and similarity of querier’s IPs shown in near-iface and qhost. In
fact, non-matched originators are queried from queriers spread in
multiple ASes by definition.
We evaluate this classification in §4. As with prior work, some
rules are forgeable. For example, rules that use domain names will
misclassify if scanning is done from mail.example.com. As IPv6 use
increases, more backscatter will allow use of more robust rules and
potentially machine learning, as we used for IPv4 [14].
3 REACTIVITY OF IPV6 HOSTS TO SCANS
We first use controlled experiments to show that IPv6 hosts react
less frequently to scanning than IPv4 hosts.
Who Knocks at the IPv6 Door? Detecting IPv6 Scanning
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
Label
Alexa
rDNS
P2P
# addrs Description
10k Alexa 1M; servers
1.4M Reverse DNS
40k
P2P Bittorrent; clients
Table 1: IPv4/IPv6 hitlists
3.1 Methodology
To understand DNS backscatter as a sensor, we first consider how
often IPv6 hosts react to scanning compared to IPv4 hosts.
To answer this question we scan IPv6 ourselves and observe the
response. Following prior work in IPv6 scanning [8, 16], we harvest
IPv4 and IPv6 hitlists from three sources, as listed in Table 1: Alexa:
we resolve Alexa 1M domains and pick up domains that have both
IPv4 and IPv6 addresses. rDNS: we scan the IPv4 reverse DNS map
and list all names that also have IPv6 addresses (following [16]).
P2P: we crawl IPv4 and IPv6 addresses in a DHT-based BitTorrent
network for a month. We expect Alexa to represent servers, P2P
clients, and rDNS to have both. Alexa and rDNS hosts are names
that bind to both v4 and v6, but for P2P we do not have pairs of
addresses. We crawl many more IPv4 addresses than have IPv6 in
P2P. We normalize the sizes of the two sets by randomly sampling
IPv4 addresses from the set to match the number of IPv6 addresses.
We set up an IPv4 (with ZMap) and IPv6 (with a custom scanner)
network scanner. The scanner sends a packet to each target IP, then
records corresponding reply packets. It probes multiple application
ports (ICMP echo, HTTP, ssh, DNS, and NTP). We also prepare a
local authoritative DNS server for monitoring queriers querying
reverse lookups of the scanner’s IP address. The TTL of the PTR
record is set to 1 second at the authority to minimize caching
effects1. For IPv6, we embed target IPv6 information to the source
IP address of the scanner, allowing us to track correspondence
between the target IP we scan and any DNS backscatter triggered
by that scan. (Backscatter is sent from the querier, the recursive
resolver of the target, so without this embedding we must guess
the target.)
For IPv4, there is only one source IPv4 address for the scanner
and thus we cannot directly pair replies to requests. Instead, we
count total replies over the 24 hours following a scan. Our data from
IPv6 confirms that this period will cover 99% of DNS backscatter
that will be generated. We also exclude resolvers that appear in our
DNS logs in weeks before our experiments as background noise.
These include shodan.io, he.net, and Google’s crawlers.
3.2 Comparing Backscatter: IPv4 and IPv6
We now compare IPv4 and IPv6 response to scanning using the
methodology we just described. DNS backscatter is caused by re-
verse DNS queries from the target or middleboxes, typically due
to security policies that investigate or log traffic. Comparing DNS
backscatter between v4 and v6 will therefore highlight any differ-
ences in security policy. Prior work has shown IPv6 security is
often more lax [8], so our study will reevaluate that result.
Figure 1 shows the amount of DNS backscatter that results from
scans using each of our three target lists (Alexa, P2P, and rDNS).
Colors and labels indicate particular target lists, while squares show
1We do not have enough knowledge on the distribution of originator’s TTLs in the
wild, however, our controlled experiment setting expects to yield the highest number
of queriers.
Figure 1: DNS backscatter sensitivity
the IPv6 version and circles the IPv4 version. For reference, we also
provide observations for scans of random IPv4 addresses (data from
Figure 4 from [14]) and a projected fit along the diagonal.
Comparing the Alexa and rDNS datasets, we see that the IPv4
version of each target list produces about 10× more DNS backscatter
than IPv6. This confirms that IPv6 appears to be less heavily logged
than IPv4. An alternative hypothesis is that our target lists are
unusual in some way, but, if anything, Alexa4 and rDNS4 are more
heavily monitored than random IPv4 addresses, since they are above
the dashed line fitting DNS backscatter resulting from random
probing.
Finally, the P2P6 dataset is even more below the IPv4 baseline
(for its size) than Alexa6 or rDNS6. While Alexa6 and rDNS6 gen-
erally represent servers, P2P6 represents clients, so one possible
explanation is that clients are even less monitored in IPv6 than