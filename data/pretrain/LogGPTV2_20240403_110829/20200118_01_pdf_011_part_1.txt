# 多维向量搜索

## 概述
多维向量搜索是一种在高维空间中查找相似或相关向量的技术。它广泛应用于图像识别、相似向量扩选和向量范围搜索等领域。本文将介绍阿里云提供的几种多维向量搜索技术，包括CUBE、IMGSMLR和PASE，并提供相应的使用示例。

## CUBE
### 介绍
CUBE是PostgreSQL中的一个扩展模块，支持n维点和n维立方体（cube）的存储和查询。它通过GiST索引实现高效的向量距离排序。

### 特性
- 支持n维点：(x1, x2, ..., xn)
- 支持n维立方体：[(x1, ..., xn), (y1, ..., yn)]
- 向量距离排序：支持欧氏距离、曼哈顿距离和切比雪夫距离

### 示例
1. **创建插件**
   ```sql
   CREATE EXTENSION cube;
   ```

2. **创建测试表**
   ```sql
   CREATE TABLE tt (id INT, c1 CUBE);
   ```

3. **创建GIST索引**
   ```sql
   CREATE INDEX idx_tt_1 ON tt USING GIST(c1);
   ```

4. **生成随机CUBE的函数**
   ```sql
   CREATE OR REPLACE FUNCTION gen_rand_cube(INT, INT) RETURNS CUBE AS $$
   SELECT ('(' || STRING_AGG((RANDOM() * $1)::INT::TEXT, ',') || ')')::CUBE FROM GENERATE_SERIES(1, $2);
   $$ LANGUAGE SQL STRICT;
   ```

5. **生成16维向量**
   ```sql
   SELECT gen_rand_cube(10000, 16); -- 生成16维向量，每一维度取值范围0-10000
   ```

6. **写入测试数据**
   ```sql
   INSERT INTO tt SELECT id, gen_rand_cube(10000, 16) FROM GENERATE_SERIES(1, 1000000) t(id);
   ```

7. **通过单个特征值CUBE查询相似人群**
   ```sql
   SELECT * FROM tt ORDER BY c1 <-> '(6671, 1730, 2177, 4208, 2613, 4877, 3942, 4402, 244, 9945, 2581, 3640, 2384, 8457, 9126, 1102)' LIMIT 10;
   ```

8. **CUBE范围圈选人群**
   ```sql
   SELECT * FROM tt WHERE
   '[(7079, 3124, 1165, 4973, 3042, 6319, 5866, 3759, 1667, 7551, 3949, 3373, 4504, 9673, 9808, 199),
   (17079, 13124, 11165, 14973, 11042, 16319, 15866, 3759, 1667, 17551, 13949, 13373, 14504, 19673, 19808, 1199)]'::CUBE @> c1;
   ```

## IMGSMLR
### 介绍
IMGSMLR是一个用于图像特征提取和匹配的PostgreSQL扩展。它支持将图像转换为特征值，并进行高效的相似性搜索。

### 特性
- 图像特征值转换
- 内部使用float4存储每个维度的值

### 示例
1. **创建插件**
   ```sql
   CREATE EXTENSION imgsmlr;
   ```

2. **创建原始表和特征表**
   ```sql
   CREATE TABLE t_img_bytea (id INT PRIMARY KEY, vid INT, pic BYTEA); -- 原始表，二进制存储原始图像
   CREATE TABLE t_img_sig (id INT PRIMARY KEY, vid INT, sig SIGNATURE, pat PATTERN); -- 特征表
   ```

3. **创建特征索引**
   ```sql
   CREATE INDEX idx_t_img_sig_1 ON t_img_sig USING GIST(sig);
   ```

4. **写入原始图像**
   ```sql
   INSERT INTO t_img_bytea VALUES (......); -- 写入原始图像
   ```

5. **转换为特征**
   ```sql
   INSERT INTO t_img_sig SELECT id, vid, png2pattern(pic), pattern2signature(png2pattern(pic)) FROM t_img_bytea;
   ```

6. **根据图像搜索**
   ```sql
   SELECT * FROM t_img_sig ORDER BY sig <-> pattern2signature(png2pattern('用户上传的照片的二进制')) LIMIT 1;
   ```

## PASE
### 介绍
PASE是阿里云RDS PostgreSQL 11版本中引入的一个扩展，即将覆盖所有主流版本。它支持两种新的索引接口（ivfflat和hnsw），并采用float4存储每个维度的值，从而提高查询性能。

### 特性
- 支持新增两种索引接口（ivfflat, hnsw）
- 内部采用float4存储每个维度的值
- 查询性能更好

### ivfflat索引存储结构介绍
- **算法流程说明**：
  1. 高维空间中的点基于隐形的聚类属性，按照kmeans等聚类算法对向量进行聚类处理，使得每个类簇有一个中心点。
  2. 检索向量时首先遍历计算所有类簇的中心点，找到与目标向量最近的n个类簇中心。

## 应用场景介绍
- **图像识别**：通过图像特征提取和匹配，实现图像检索和分类。
- **相似向量扩选**：在大规模向量集合中查找与给定向量最相似的向量。
- **向量范围搜索**：在指定范围内查找符合条件的向量。

希望以上内容能帮助您更好地理解和应用多维向量搜索技术。如需更多详细信息，请参考相关文档和示例代码。