http://www.ibis-journal.net ISSN:1862-6378 IBIS – Issue 3 (3), 2006
Figure 13: Instances of the classes of the ontology
Request
We are interested in getting the name and the address information of a person.
The correct query in order to get the right information is:
The hasAddress object property connects the two required classes Address and
Person.
The middleware generates automatically and on the fly the SQL statement by
extracting the ‘mapping information’ stored in the instances of the ontology.
SELECT
TablPerson.PersonName AS name,
TablAddress.Address AS address
FROM TablPerson
LEFT JOIN TablPersonAddress
ON TablPerson.IdPerson = TablPersonAddress.IdPerson
LEFT JOIN TablAddress
ON TablPersonAddress.IdAddress = TablAddress.IdAddress
Response
The returned data, formatted in XML accordingly to the domain layer, would be:
© IBIS – Issue 1 (1), 2006
IBIS – Interoperability in Business Information Systems
The structure of the XML is accordingly to the ontology structure. The main reason
that motivated this approach was that, in the current application scenario, it is
easier to clients (php, java …) to read and manipulate raw XML than an OWL
structure.
Related Work
Several tools and approaches to integrate heterogeneous data sources exist today.
We will briefly describe the Corporate Ontology Grid (COG), the Mediator
envirOnment for Multiple Information Systems (MOMIS), OBSERVER, the Knowledge
Reuse And Fusion/Transformation (KRAFT) and InfoSleuth.
Some of the approches are based on agents. Examples are InfoSleuth and KRAFT.
InfoSleuth is a multi-agent system for semantic interoperability in heterogeneous
data sources [NFKPTU99]. Agents are used to query and instance transformations
between data schemas. An agent is aware of its own ontology and the mapping
between that ontology and the data schema, it is aware of the shared ontologies
and it can map its ontology to those of other agents. InfoSleuth uses several shared
ontologies, made available through the ontology agents.
KRAFT architecture is designed to support knowledge fusion from distributed
heterogeneous databases and knowledge bases. The basic philosophy of KRAFT is to
define a “communication space” within certain communication protocols and
languages must be respected [GPFGB97].
In both systems, a language implementing the protocol of communication agents
and a language expressing the information to be extracted is needed.
OBSERVER is a component-based approach to ontology mapping. It provides
brokering capabilities across domain ontologies to enhance distributed ontology
querying, thus avoiding the need to have a global schema or collection of concepts.
It uses multiple pre-existing ontologies to access heterogeneous distributed and
independently developed data repositories. Each component node has an ontology
server that provides definitions for the terms in the ontology and retrieves data
underlying the ontology in the component node [MKSI96]. Query language in the
OBERVER is specific. In each node, component mapping must exist to all other
relevant nodes (one-to-one mapping).
The COG aims to create a semantic information management in which several
heterogeneous data sources are integrated into a global virtual view [Bru04]. COG
allows the integration of imported RDBMS schema databases, XML Schemas, COBOL
© IBIS – Issue 3 (3), 2006
http://www.ibis-journal.net ISSN:1862-6378 IBIS – Issue 3 (3), 2006
copybook and custom wrappers. The workbench that allows the integration is
Unicorn Workbench. The tool accommodates both the GAV and LAV approach
[Bru04, BJ04]. Queries cannot be executed in the workbench and it is not possible
to query multiple data sources. Views over the global virtual view have to be
previously created in order to permit the access to the data. Queries are very
similar to SQL. The access to the global virtual view is done via specific API.
Compared to COG, our approach only allows integration of RDBMS data sources.
Queries are generated dynamically and it is possible to execute queries over
different databases. Requests are formatted in XML. Our approach allows the
provision of services through Web Servives.
The goal of MOMIS is to give the user a global virtual view of the information
coming from heterogeneous data sources [BB04, BBCG04]. MOMIS creates a global
mediation schema for the structured and semi structured heterogeneous data
sources, in order to provide the user with a uniform query language. It is based in
GAV approach, which means that the global schema is built based on the local
sources. OWL and SPARQL are not used in MOMIS. Queries are expressed using a
SQL-like language.
None of the solutions presented use OWL as a way of describing the domain model
and storing the mappings to the databases. Much of the presented solutions are
somehow limited in generating the statement to get the data. In others, a specific
query language was created using proprietary language.
Conclusion
In this paper, we have presented our solution for creating a middleware to provide
integration and abstraction between clients and databases. Our system creates a
global virtual view over a set of data sources, using ontologies specified in OWL.
We used a layered system, allowing reuse, evolution and incremental development.
Therefore, three layers compose the middleware: data source, domain and
interface. The interface layer provides services and allows the interoperability of
our solution with other systems/organizations, structuring requests and responses
in XML, exposed as Web Services. A customize request language, expressed in XML,
allows users to interact with the system, abstracting from technical details.
The domain layer uses OWL ontologies, describing the domain and allowing the
integration of several data sources. Mappings to the data sources are stored in the
instances of the ontology. With this solution, we can distribute our ontology among
stakeholders because it does not contain neither confidential nor technical data.
The data source layer is implemented using Hibernate, which allows connection to
more that 20 database vendors using JDBC.
We are convicted that our solution will guarantee and improve the integration of
heterogeneous data sources by the use of a semantic abstraction layer, described
in OWL. It also decouples client applications from database servers, minimizing
maintenance.
© IBIS – Issue 1 (1), 2006
IBIS – Interoperability in Business Information Systems
References
[ABBFLL05] Alexiev, V.; Breu, M.; Bruijn, Jd.; Fensel, D.; Lara, R.; Lausen, H.: Information
Integration with Ontologies, John Wiley &Sons, 2005
[AH04] Antoniou, G.;, Harmelen, F.: A Semantic Web Primer, MIT Press, 2004
[Bru04] Bruijn, Jd.: Semantic Integration of Disparate Data Sources in the COG Project,
www.debruijn.net/publications/COG-ICEIS2004.pdf , 2004
[BB04] Beneventano, D.; Bergamaschi, S.: The MOMIS Methodology for Integrating
Heterogeneous Data Sources, www.dbgroup.unimo.it/prototipo/paper/ifip2004.pdf ,
2004
[BBCG04] Bergamaschi. S.; Beneventano, D.; Corni, A.; Gelati, G. and others: The MOMIS
System, http://www.dbgroup.unimo.it/Momis/ ,2004
[BJ04] Bruijn, Jd.: Best Practices in Semantic Information Integration, 2004
[BM02] Berners-Lee, T.; Miller, E.: The Semantic Web Lifts Off, Special Issue of ERCIM
News, 2002
[CA06] Cardoso, J.; Sheth, A.: Semantic Web Services, Processes and Applications, Springer,
2006
[Dar97] Darleen, S.: Client/Server Software Architectures – An Overview,
http://www.sei.cmu.edu/str/descriptions/clientserver.html, 1997
[DS00] Darleen, S.; Santiago, C: Three tier software architectures,
http://www.sei.cmu.edu/str/descriptions/threetier.html, 2000
[FC] http://www.webopedia.com/TERM/F/fat_client.html
[FRFHM02] Fowler, M.; Rice, D.; Foemmel, M.; Hieatt, E.; Mee. R.; Stafford, R.: Patterns of
Enterprise Application Architecture, Addison-Wesley, 2002
[FWK02] Fremantle, P.; Weerawarana, S.; Khalaf, R.: Enterprise Services, Communications of
the ACM, 2002
[GPFGB97] Grayy, P.; Preecey, A.; Fiddianz, N.; Grayz, W.; Bench-Capon T. and others: KRAFT:
Knowledge Fusion from Distributed Databases and Knowledge Bases,
www.csd.abdn.ac.uk/~apreece/research/download/dexa1997.pdf , 1997
[Grub93] Gruber, T.: A translation approach to portable ontologies. Knowledge Acquisition,
Academic Press, 1993
[He03] He, H.: What is Service-Oriented Architecture,
http://www.xml.com/pub/a/ws/2003/09/30/soa.html, 2003
[HIB] http://www.hibernate.org/
[HL] http://en.wikipedia.org/wiki/Abstraction_layer
[HW04] Hohpe, G.; Woolf, B.: Enterprise Integration Patterns, Addison-Wesley, 2004
[J06] JBoss: Hibernate Reference Documentation, http://labs.jboss.com/portal/ , 2006
[Lan02] Lanzerini, M.: Data Integration: A Theoretical Perspective,
http://www.cs.ubc.ca/~rap/teaching/534a/readings/Lenzerini-pods02.pdf , 2002
[MFK01] Manolescu, I.; Florescu, D.; Kossmann, D.: Answering XML Queries over
Heterogeneous Data Sources, www.vldb.org/conf/2001/P241.pdf , 2001
[MKSI96] Mena, E.; Kashyap, V.; Sheth, A.; Illarramendi, A.: OBSERVER: An Approach for
Query Processing in Global Information Systems based on Interoperation across Pre-
existing Ontologies, http://dit.unitn.it/~p2p/RelatedWork/Matching/MKSI96.pdf ,
1996
[MW] http://en.wikipedia.org/wiki/Middleware
[NFKPTU99] Nodine, M.; Fowler, J.; Ksiezyk, T.; Perry, B.; Taylor. M.; Unruh, A.: Active
Information Gathering in InfoSleuth,
www.argreenhouse.com/InfoSleuth/publications/codas99.pdf , 1999
[Ogb02] Ogbuji, U.: The Past, Present and Future of Web Services Part 1 and 2, Web
Services.org, 2002
[O06] Oracle White Paper, Semantic Data Integration for the Enterprises, Oracle, 2006
[Pal01] Palmer, S.: The Semantic Web: An Introduction,
http://infomesh.net/2001/swintro/, 2001
[PA03] Polikoff, I.; Allemang, D.: Semantic Integration: Strategies and Tools, TopQuadrant,
http://www.topquadrant.com/documents/TQ0303_Semantic%20Integration.PDF,
2003
© IBIS – Issue 3 (3), 2006
http://www.ibis-journal.net ISSN:1862-6378 IBIS – Issue 3 (3), 2006
[PS06] Prud'hommeaux, E.; Seaborne, A.: SPARQL query language for RDF,
http://www.w3.org/TR/rdf-sparql-query/, 2006
[PTE] http://protege.stanford.edu/
[Rit05] Rito, A.: A Software Architecture for WEB Applications: A Student Management
System Example, Instituto Superior Técnico, 2005
[Sta02] Stal, M.: Web Services: Beyond Component-Based Computing, Communications of
the ACM, 2002
[Tay06] Taylor, J.: Enterprise Information Integration: A new Definition, Integration
Consortium, http://www.dmreview.com/article_sub.cfm?articleId=1009669, 2006
[TC] http://www.webopedia.com/TERM/T/thin_client.html
[W3CSC] http://www.w3.org/XML/Schema
[W3CSP] http://www.w3.org/TR/soap/
[W3CXS] http://www.w3.org/TR/xslt
[WS] http://www.w3.org/2002/ws/
[Yag02] Yager, T.: The Future of Application Integration,
http://www.computerworld.com/action/article.do?command=viewArticleTOC&spec
ialReportId=3&articleId=71198, 2002
Biography
Bruno Caires has received a Post Graduate Diploma in Software Engineering from
University of Madeira, Portugal. He is currently pursuing MS in Software Engineering
from the same University. Actually, and for the last three years, he is responsible
for the development of SOA middleware. His interests include System Integration,
SOA, Web Services, Middleware and Semantic Web Technologies.
Jorge Cardoso received his PhD in Computer Science from the University of
Georgia in 2002. Actually, he is Professor at University of Madeira. He previously
gave lectures at University of Georgia (USA) and Instituto Politécnico de Leiria
(Portugal). While at the University of Georgia he was part of the LSDIS Lab, where
he did extensive research on workflow management systems. Current interests
include Workflow Quality of Service, Semantic Workflow Composition, Web
services, Web processes, e-Commerce, and Groupware/CSCW.
© IBIS – Issue 1 (1), 2006