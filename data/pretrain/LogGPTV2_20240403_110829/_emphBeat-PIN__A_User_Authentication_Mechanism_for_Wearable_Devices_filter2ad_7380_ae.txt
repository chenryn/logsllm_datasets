0
0
Sample acquisition
Training
Login
100
200
300
400
Sample index
500
600
Figure 12: Instant power reading via the power monitor.
Figure 12 shows the instant power reading via the power monitor
when executing one beat-PIN. We clearly specify the part dedicated
to sample acquisition, training and login in the gure. We can tell
that sample acquisition consumes the largest amount of power
among these three, which is about 341.5mW on average, while the
average power for training and login take 337.2mW and 181.4mW,
separately. Figure 13 further depicts the statistic result of power
consumption according to our dataset. We observe that the power
consumption during enrollment spans from 272.4mW to 374.1mW,
with 90% of samples lower than 367.0mW. The power consumption
during login spans from 165.8mW to 197.6mW, with 90% of the
samples lower than 191.4mW. Hence, in general, the enrollment
stage costs about twice the power than the login stage.
We also compare the average power consumption of Beat-PIN’s
login process with some common smartwatch tasks in Table 7. We
notice that the power consumption of Beat-PIN login, 181.4mW, is
only slightly higher than that for screen on operation, 161.5mW. It
is much more energy-ecient than most of the operations, such
as voice assistant, map service, sending a text message, etc. For
instance, the average power for sending a voice message is 524.7mW,
which is about three times of our power consumption. Together
with the fact that Beat-PIN can be performed within a short period,
1
F
D
C
0.5
1
F
D
C
0.5
0
250
Enrollment
300
350
400
Power consumption (mW)
(a)
0
160
Login
170
180
190
200
Power consumption (mW)
(b)
Figure 13: Distribution of power consumption in executing
beat-PINs. (a) Enrollment. (b) Login.
Table 7: Power consumption by dierent operations at the
smartwatch.
Operation
Beat-PIN login
Screen on
Voice assistant
Map service
Sending a text message
Sending a voice message
Web browsing
Measuring heartbeat
Power consumption (mW)
181.4
161.5
585.0
508.7
410.5
524.7
574.8
428.0
we conclude that our authentication mechanism only imposes mild
energy consumption overhead to the smartwatch. This is a desirable
property for the battery-constrained wearable devices.
8.2.3
Impact of User Motions. Ideally, Beat-PIN should be insen-
sitive to user motions because wearable devices are mainly used in
mobile environments and the user motion always introduces noises.
In this experiment, we test the impact of user motions to the au-
thentication accuracy. Three types of user motions are considered:
sitting, slow walk and fast walk. Results are shown in Figure 14.
We observe that the best authentication accuracy is realized when
a user is in the sitting status, with the corresponding FRR as 4.5%
and FAR as 8.0%. The lowest accuracy takes place when a user is in
the fast walk status, with the corresponding FRR as 9.0% and FAR
as 8.3%. It means that user motion does impact the authentication
performance. This meets our expectation because the faster motion
will increase vibration in one’s smartwatch and thus causing more
noise. On the other hand, we notice that FAR keeps relatively stable
under all three motion patterns, for example, FAR=8.2% under slow
walk while FAR=8.1% under fast walk. It implies that user motion
has more impact on usability, i.e., a legitimate user has a higher
chance to get denied when walking; while the impact on security is
limited, an imposter gets rejected at a stable rate regardless his/her
motion status.
/
R
R
F
R
A
F
0.1
0.08
0.06
0.04
0.02
0
Sitting
Slow walk
Fast walk
FAR
FRR
Figure 14: Impact of user motions on authentication accu-
racy.
Session 3: AuthenticationASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea1119 CONCLUSIONS
As wearable devices are increasingly weaved into our everyday
life, providing security to the data acquired by or accessed through
these devices becomes critically important. In this study, we have
developed a user authentication mechanism, Beat-PIN, which relies
on timing of beat sequences for direct authentication to a wearable
device. Compared to existing authentication solutions, our solution
delivers accurate authentication, incurs low processing overhead,
and oers great convenience to users.
Through an extensive evaluation that involves 124 participants,
we observe that the average EER of our approach is 7.2% with
only 7 training samples. We have also implemented a prototype
on Moto 360 smartwatches, and measured its security, in terms of
robustness against various types of attackers, and its utility, from
aspects of time consumption, power consumption, impact of user
motions and memorability. As a conclusion, we believe Beat-PIN
is a realistic authentication mechanism applicable on resource-
constrained wearables.
ACKNOWLEDGMENTS
The work of Ming Li was supported by the U.S. National Science
Foundation under grants CNS-1566634 and ECCS-1711991. The
work of Lei Yang was supported in part by the U.S. National Science
Foundation under Grants CNS-1559696 and IIA-1301726.
REFERENCES
[1] Fitbit. http://en.wikipedia.org/wiki/Fitbit.
[2] Gartner Says Worldwide Wearable Devices Sales to Grow 18.4 Percent in 2016.
[3]
https://www.gartner.com/newsroom/id/3198018.
3
Watch
Apple
Series
https://www.apple.com/watch/battery.html.
Battery
Information.
[4] Google glass. http://en.wikipedia.org/wiki/Google Glass.
[5] IDC Forecasts Worldwide Shipments of Wearables to Surpass 200 Million in
2019, Driven by Strong Smartwatch Growth and the Emergence of Smarter
Watches. https://www.businesswire.com/news/home/20160317005136/en/IDC-
Forecasts-Worldwide-Shipments-Wearables-Surpass-200.
[6] PIN Analysis. http://www.datagenetics.com/blog/september32012/.
[7] Power Monitor Software. http://msoon.github.io/powermonitor/.
[8] scikit-learn-Machine Learning in Python. http://scikit-learn.org/stable/.
[9] Unmasked: What 10 million passwords reveal about the people who choose them.
https://wpengine.com/unmasked/.
[10] Wearable Technology Market - Global Opportunity Analysis and Industry
Forecast, 2014-2022. https://www.prnewswire.com/news-releases/wearable-
technology-market—global-opportunity-analysis-and-industry-forecast-2014-
2022-300460342.html.
[11] Here’s How iPhone Thermal Cameras Can Be Used to Steal Your Pin
Codes. https://petapixel.com/2014/08/29/heres-iphone-thermal-cameras-can-
used-steal-pin-codes/. (2014).
[12] Adam J Aviv, Katherine L Gibson, Evan Mossop, Matt Blaze, and Jonathan M
Smith. 2010. Smudge attacks on smartphone touch screens. In Proceedings on
USENIX conference on Oensive technologies (WOOT).
[13] Michael Backes, Markus Dürmuth, and Dominique Unruh. 2008. Compromising
reections-or-how to read LCD monitors around the corner. In IEEE Symposium
on Security and Privacy.
[14] Jagmohan Chauhan, Hassan Jameel Asghar, Anirban Mahanti, and Mohamed Ali
Kaafar. 2016. Gesture-Based Continuous Authentication for Wearable Devices:
The Smart Glasses Use Case. In International Conference on Applied Cryptography
and Network Security. Springer, 648–665.
[15] Hsin-Yi Chiang and Sonia Chiasson. 2013. Improving user authentication on mo-
bile devices: A touchscreen graphical password. In Proceedings of ACM conference
on Human-computer interaction with mobile devices and services (MobileHCI).
[16] Geumhwan Cho, Jun Ho Huh, Junsung Cho, Seongyeol Oh, Youngbae Song, and
Hyoungshick Kim. 2017. SysPal: System-guided Pattern Locks for Android. In
Proceedings of IEEE Symposium on Security and Privacy.
[17] Se Young Chun, Jae-Hwan Kang, Hanvit Kim, Chungho Lee, Ian Oakley, and
Sung-Phil Kim. 2016. ECG based user authentication for wearable devices using
short time Fourier transform. In Proceedings of IEEE International Conference on
Telecommunications and Signal Processing (TSP).
[18] Nathan L Clarke, SM Furnell, BM Lines, and Paul L Reynolds. 2003. Keystroke
dynamics on a mobile handset: a feasibility study. Information Management &
Computer Security 11, 4 (2003), 161–166.
[19] Nathan L Clarke and Steven M Furnell. 2007. Authenticating mobile phone users
using keystroke analysis. International Journal of Information Security 6, 1 (2007),
1–14.
[20] Sauvik Das, Gierad Laput, Chris Harrison, and Jason I Hong. 2017. Thumprint:
Socially-Inclusive Local Group Authentication Through Shared Secret Knocks. In
Proceedings of ACM Conference on Human Factors in Computing Systems (CHI).
[21] Benjamin Dran, Jiang Zhu, and Joy Ying Zhang. 2013. KeySens: Passive User
Authentication through Micro-behavior Modeling of Soft Keyboard Interaction.
In Proceedings of International Conference on Mobile Computing, Applications, and
Services.
[22] Mario Frank, Ralf Biedert, Eugene Ma, Ivan Martinovic, and Dawn Song. 2013.
Touchalytics: On the applicability of touchscreen input as a behavioral biometric
for continuous authentication. IEEE Transactions on Information Forensics and
Security 8, 1 (2013), 136–148.
[23] Benjamin Laxton, Kai Wang, and Stefan Savage. 2008. Reconsidering physical
key secrecy: Teleduplication via optical decoding. In Proceedings of the ACM
conference on Computer and Communications Security.
[24] Jeong Jun Lee, Seungin Noh, Kang Ryoung Park, and Jaihie Kim. 2004.
Iris
recognition in wearable computer. In Biometric Authentication. Springer, 475–
483.
[25] Sugang Li, Ashwin Ashok, Yanyong Zhang, Chenren Xu, Janne Lindqvist, and
Macro Gruteser. 2016. Whose move is it anyway? Authenticating smart wearable
devices using unique head movement patterns. In Proceedings of IEEE International
Conference on Pervasive Computing and Communications (PerCom).
[26] Felix Xiaozhu Lin, Daniel Ashbrook, and Sean White. 2011. RhythmLink: securely
pairing I/O-constrained devices by tapping. In Proceedings of ACM symposium on
User interface software and technology.
[27] Jim Pitman. 1999. Probability. Springer Science & Business Media (1999).
[28] Volker Roth, Kai Richter, and Rene Freidinger. 2004. A PIN-entry method resilient
against shoulder surng. In Proceedings of the ACM conference on Computer and
Communications Security.
[29] Yunpeng Song, Zhongmin Cai, and Zhi-Li Zhang. 2017. Multi-touch Authentica-
tion Using Hand Geometry and Behavioral Information. In Proceedings of IEEE
Symposium on Security and Privacy.
[30] Jingchao Sun, Rui Zhang, Jinxue Zhang, and Yanchao Zhang. 2014. Touchin:
Sightless two-factor authentication on multi-touch mobile devices. In Proceedings
on IEEE Conference on Communications and Network Security (CNS).
[31] Furkan Tari, Ant Ozok, and Stephen H Holden. 2006. A comparison of perceived
and real shoulder-surng risks between alphanumeric and graphical passwords.
In Proceedings of The Symposium on Usable privacy and security.
[32] Tianzi Wang, Zheng Song, Jian Ma, Yongping Xiong, and Yun Jie. 2013. An
anti-fake iris authentication mechanism for smart glasses. In Proceedings of IEEE
International Conference on Consumer Electronics, Communications and Networks
(CECNet).
[33] Jacob Otto Wobbrock. 2009. Tapsongs: tapping rhythm-based passwords on a
single binary sensor. In Proceedings of ACM symposium on User interface software
and technology.
[34] Junshuang Yang, Yanyan Li, and Mengjun Xie. 2015. MotionAuth: Motion-based
authentication for wrist worn smart devices. In Proceedings of IEEE International
Conference on Pervasive Computing and Communication Workshops (PerCom
Workshops).
[35] Yulong Yang, Gradeigh D Clark, Janne Lindqvist, and Antti Oulasvirta. 2016.
Free-form gesture authentication in the wild. In Proceedings of ACM Conference
on Human Factors in Computing Systems (CHI).
[36] Yunze Zeng, Amit Pande, Jindan Zhu, and Prasant Mohapatra. 2017. WearIA:
Wearable Device Implicit Authentication based on Activity Information. In Pro-
ceedings of IEEE International Symposium on A World of Wireless, Mobile and
Multimedia Networks (WoWMoM).
[37] Nan Zheng, Kun Bai, Hai Huang, and Haining Wang. 2014. You are how you
touch: User verication on smartphones via tapping behaviors. In Proceedings of
IEEE International Conference on Network Protocols.
A PROOF OF THEOREM 5.1
We rst write down Theorem 5.1 here again.
TA.1. The raw size of beat-PIN space is
| | =
    (  b
LmaxXl =1   Tmax
    1) ⇥ l   (  s
2l   1
    1) ⇥ (l   1)
!,
Session 3: AuthenticationASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea112where Lmax, Tmax,  ,  b and  s stand for the maximum length, max-
imum time duration, minimum unit of the system clock, minimum
value of a beat-duration duration and minimum value of a space-
duration, respectively.
P. Our objective is to nd out how many dierent beat-PINs
there are, when the beat-PIN’s length and time duration are limited
by Lmax, Tmax, respectively. Meanwhile, due to the constraint of
human tapping speed, we assume that the beat-duration and space-
duration are lower bounded by  b and  s, respectively.
First of all, with the minimum system clock unit  , the corre-
sponding maximum number of time slots in a beat-PIN is calculated
by N = Tmax
  . We now analyze the number of all possible beat-PINs
when their lengths, i.e., number of beats, are l (l 2 [1,Lmax]).
By treating each beat-duration as a “white” bin, each space-
duration as a “black” bin, and the entire N time slots as N stars,
our problem is equivalent to nd out the number of all possible
congurations tot N stars into l “white” bins and l   1 “black”
bins. Besides, there should be no less than  b
  stars in each “white”
bin and no less than  s
Instead of coping with the above problem directly, we rst check
a simpler question. There are N stars and l + l   1 = 2l   1 bins,
including both the black ones and white ones. How many cong-
urations are there to place at least one star into each bin? Note
that bins are distinguishable, while stars are not. In fact, this is a
standard “Stars and Bins” (or called “Stars and Bars”) problem [27].
  stars in each “black” bin.
Its solution is calculated by⇣ N
2l 1⌘.
We are now ready to solve our problem. The idea is to rst place
 b
    1 stars in each “white” bin and  s
    1 stars in each “black”
bin. Then there are N   (  b
    1) ⇥ l   (  s
    1) ⇥ (l   1) stars left.