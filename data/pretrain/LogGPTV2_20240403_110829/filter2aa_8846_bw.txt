目的。
67
安全测试 ST1
根据软件编码和软件需求建立为执行基本安全测试的过程
措施
A. 从已知的安全需求中得到测试实例
根据一个项目的已知安全要求，确定一组测试用例，
以检查软件功能是否正确。通常，这些测试用例从围绕功
能要求和系统业务逻辑的安全问题中获得，但还应包括针
对基于编程语言或技术堆栈的常见威胁漏洞的通用测试。
通常，最有效的方法是由项目团队来建立应用程序特
定的测试用例，并采用可用的资源或者以购买的知识库，
为安全性选择可用的常见测试用例。虽然不是必需的，也
可以使用自动化安全测试工具覆盖常见的安全测试用例。
这个测试用例计划应该执行在需求分析和设计阶段，
且必须在发布以前的最终测试之前执行。选用的测试用例
应由相关的开发人员、安全人员和QA人员针对其适用性、
有效性、可行性进行审核。
B. 为软件发布引导进行渗透测试
使用为每个项目选定的安全测试用例进行渗透测试，
以评估该系统对于每个用例的表现。这种测试在测试阶段
应经常被执行。
渗透测试用例应包括应用程序特定的测试，以检查业
务逻辑的完整性；以及一般威胁漏洞测试，以检查设计和
程序代码。一旦指定，安全测试用例可以由具有安全常识
的质量保证或开发人员执行。但项目小组第一次使用安全
测试用例时，应当在安全审计员的监控下进行，以协助并
指导团队成员。
在发布或部署之前，利益相关者必须审核安全测试的
结果，并在发布时期接受由未通过的安全测试检测显示出
的风险。在后一种情况下，一个具体的时间表应当被建立，
以弥补相关的漏洞缺陷。
结果
✦独立验证围绕关键
业务功能的预期安全
机制；
✦为达到安全性测试
的高级别审慎调查；
✦对于每个软件项目
安全测试的特定完善。
成功指标
✦>50％的项目在过去
的12个月里指定了安
全测试实例；
✦>50％的利益相关者
在过去6个月里大概了
解了项目安全测试的
状态。
成本
✦扩充或许可安全测
试实例；
✦维护和评估安全测
试实例的项目持续开
销。
人员
✦QA测试员（1－2天/
年）
✦安全审计员（1－2
天/年）
✦开发人员（1天/年）
✦架构师（1天/年）
✦业务拥有者（1天/
年）
相关等级
✦安全需求－1
 68
安全测试 ST2
通过自动化使开发过程中的安全测试更加完善和有效
措施
A. 使用自动化的安全测试工具
为了测试安全性，需要对每个软件界面进行大量输入
用例的检测，但这样会使安全用例的有效手动测试实施和
执行难以控制。因此，应该使用自动化安全测试工具自动
测试软件，以使安全测试更加有效，并获得更高质量的结
果。
针对组织的适用性，审核商业的和开源的产品。选择
一个合适工具，应基于以下一些因素，其中包括：内置安
全测试用例的健康性和准确性；对组织重要的测试架构种
类的有效性；改变或添加测试用例的自定义；开发组织结
果的质量和可用性等。
在选择过程中，由具有安全知识的技术人员和开发人
员、质量保证人员参与介入，并和利益相关者一起审核全
部结果。
B. 将安全测试整合到开发过程中
通过使用自动化工具进行安全测试，组织内的项目在
开发过程中应当经常执行安全测试并审核结果。为了保持
低开销，安全测试工具应该在经常执行的基础上被配置为
自动运行，例如：每晚或每周，并检查获得的结果。
只要对需求或者设计有利，就应尽早执行安全测试。
虽然在传统意义上，使用了功能性测试用例。但这种测试
驱动的开发方法，包含了在开发生命周期的早期阶段（通
常是设计阶段），识别并运行安全测试用例。随着安全测
试用例自动化的执行，项目在一些针对并不存在的功能而
没有通过测试的情况下，进入了编码执行阶段。当所有的
测试通过以后，编码执行完成。这在开发生命周期中为开
发人员提供了一个清晰的早期目标，从而降低了对于安全
考虑而延迟发布的风险，或为赶上项目的最后期限而被迫
接受安全漏洞的风险。
对于每个项目的发布，通过自动和手动安全检测方式
获得的结果，应当由管理人员和业务利益相关者进行审核。
如果在发布内容中仍然有未解决的风险，利益相关者和开
发管理人员应共同努力，建立解决这些问题的具体时间表。
结果
✦更加深入以及更加
连贯地验证软件的安
全功能；
✦在发布以前开发团
队实现自我检查和错
误更正；
✦利益相关者在做出
风险认同决定时，能更
好的意识到开放的威
胁漏洞。
额外成功指标
✦>50％的项目在过去
的6个月里执行了安全
测试并由利益相关者
认可；
✦>80％的项目在过去
1个月里查看了自动化
安全测试的结果。
额外成本
✦自动化安全测试方
案的研究和选择；
✦自动化整合的初始
开支和维护；
✦正在进行的项目执
行自动化安全测试和
抑制的项目持续开销。
额外人员
✦开发人员（1天/年）
✦架构师（1天/年）
✦经理（1－2天/年）
✦安全审计员（2天/
年）
✦QA测试员（3－4天/
年）
相关等级
✦
69
安全测试 ST3
要求应用程序特定的安全测试以在部署以前确保安全的基准线
措施
A. 为特定应用程序使用自动化的安全测试
通过自定义安全测试工具、增强通用测试用例执行工
具或者通过扩充自定义用户测试工具，项目小组通过安全
要求建立一组自动的检查器，开始正式迭代工作以测试所
执行业务逻辑的安全。
另外，如果对自动安全测试工具进行自定义，以使它
们能够理解关于正在进行测试的项目中的特定软件界面的
更多信息，就可以明显改善测试的精度和覆盖深度。还有，
可将特定于组织的规范或技术标准的特定问题，整理为一
个可重复使用、集中的测试系列，以使能够更容易地查看
审计数据集合和每个项目的管理情况。
项目小组应在他们的软件业务功能基础上，着重于安
全测试用例的建立；另外，一个由安全审计员领导的组织
级别团队，应着重于详细阐述对符合规定和内部标准的自
动化测试。
B. 为安全测试建立发布关卡
为了避免在即将发布的软件中存在极易被发现的安全
bug，应在软件开发生命周期中设立一个的特定检测点，
已建立的安全测试用例必须通过该点才能发布项目。这就
建立了一个所有项目都应该通过的各种安全测试的基准。
由于在初期添加太多的测试用例可能会导致一个间接
成本增加，因此，在开始时选择一到两个安全问题，包括
对每种问题的各种测试用例，并以项目必须通过所有的测
试为期望。随着时间的推移，这个基准应随着额外安全问
题的选择以及添加各种相应测试用例而被改善。
总的来说，这个安全测试检测点应在编程阶段快结束
时或是测试阶段执行，且必须在发布以前。
对于旧系统或暂未活动的项目，应建立例外处理流程，
以允许项目的持续操作，但需要有一个明确的审核时间计
划安排以抑制结果。例外应限制于不超过所有项目的20％。
结果
✦应用程序对于抵抗
预期攻击的表现的组