devising a protocol that can use the cloud service to buffer and
multicast messages without having to trust the cloud service.
Timeweave [34] was an early use of attested histories
to verify the actions of an untrusted party. Since then, the
idea of using an attested history has been applied to detect
misbehaving virtual machines [35], misbehaving replicas in
BFT systems [36], [37], as well as to improve the performance
of BFT systems [38], [39]. Recent work has also proposed the
use of trusted platform modules (TPMs) as integrity veriﬁers
for cloud infrastructure [40]. However, none of these previous
works directly address the problem of consistency veriﬁcation.
Several cryptographic ﬁle systems also guarantee fresh-
ness [41]–[46]. However, they all assume that all operations
are linearizable so that the only need to check that the latest
values are read by a client (i.e. strong consistency). As stated in
the Brewer’s well-known CAP theorem, systems that enforce
strong consistency cannot scale. In contrast, Caelus provides
protection on systems with weaker consistency models such
as eventual and causal consistency, which are more suitable
for globally distributed cloud infrastructure.
Finally, other work has proposed distributing data cross mul-
tiple cloud services to protect the integrity and recoverability
of data [47]–[49], as well as using cryptographic techniques
to probabilistically prove retrievability [50], [51], data posses-
sion [52], or whether data is encrypted properly [53]. However,
these systems do not address the consistency of data and in
the case of the cryptographic techniques, mostly assume static
data. On the other hand, Caelus does not directly address
recoverability or retrievability, making some combination of
these techniques with Caelus interesting future work.
IX. CONCLUSION
From designing and evaluating our Caelus prototype, we
draw two major conclusions. First, Caelus is able to avoid
direct client-to-client communication and use the untrusted
cloud provider for communication by ofﬂoading parts of the
monitoring task in a way that doesn’t require trust in the
cloud service provider. Second, the role of the attestor can
be partitioned into two root and active attestor devices that
each fulﬁll one of the roles required of the single monolithic
attestor. Through careful protocol design, Caelus ensure that
the root and active attestor devices cannot be partitioned by a
malicious cloud service.
Our evaluation shows that Caelus is able to detect consis-
tency violations on Amazon’s S3 storage service in a compute
and battery efﬁcient manner. Attestation-partitioning reduces
the battery impact of the root attestor by about 40× and the
cost in CPU time and network bandwidth overhead is minimal.
ACKNOWLEDGEMENT
We thank our shepherd Alina Oprea, for her wonderful
guidance. We also thank Wei Huang, Afshar Ganjali, Sukwon
Oh, Ding Yuan, Michael Stumm, Ashvin Goel, Eyal de Lara
and Angela Demke-Brown for their helpful comments. This
research was supported by an ORF-RE grant from the Ontario
Ministry of Research and Innovation and by an NSERC
Discovery Grant.
REFERENCES
[1] J. Cook, “Google Drive Now Has 10 Million Users: Available on iOS
and Chrome OS,” http://techcrunch.com/2012/06/28/google-drive-now-
has-10-million-users-available-on-ios-and-chrome-os-ofﬂine-editing-
in-docs/.
[2] P. Maass and L. Poitras, “Core Secrets: NSA Saboteurs in China and
Germany,” https://ﬁrstlook.org/theintercept/2014/10/10/core-secrets.
894
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:07:39 UTC from IEEE Xplore.  Restrictions apply. 
[3] J. Li, M. Krohn, D. Mazi`eres, and D. Shasha, “Secure Untrusted Data
repository (SUNDR),” in The 6th USENIX Symposium on Operating
Systems Design and Implementation (OSDI), Dec. 2004.
[4] P. Mahajan, S. T. V. Setty, S. Lee, A. Clement, L. Alvisi, M. Dahlin,
and M. Walﬁsh, “Depot: Cloud Storage with Minimal Trust,” in The 9th
USENIX Symposium on Operating Systems Design and Implementation
(OSDI), Oct. 2010.
[5] A. J. Feldman, W. P. Zeller, M. J. Freedman, and E. W. Felten, “SPORC:
Group Collaboration using Untrusted Cloud Resources,” in The 9th
USENIX Symposium on Operating Systems Design and Implementation
(OSDI), Oct. 2010.
[6] A. Shraer, C. Cachin, A. Cidon,
I. Keidar, Y. Michalevsky, and
D. Shaket, “Venus: Veriﬁcation for Untrusted Cloud Storage,” in The
2010 ACM Workshop on Cloud Computing Security Workshop (CCSW),
Oct. 2010.
[7] B. H. Kim, W. Huang, and D. Lie, “Unity: Secure and Durable Personal
Cloud Storage,” in The 2012 ACM Workshop on Cloud Computing
Security Workshop (CCSW), Oct. 2012.
[8] J. Li and D. Mazieres, “Beyond one-third faulty replicas in byzantine
fault tolerant systems.” in The 4th USENIX Symposium on Networked
Systems Design and Implementation (NSDI), Apr. 2007.
[9] R. A. Popa, J. R. Lorch, D. Molnar, H. J. Wang, and L. Zhuang,
“Enabling Security in Cloud Storage SLAs with CloudProof,” in The
2011 USENIX Annual Technical Conference (ATC), Jun. 2011.
[10] T. Lodderstedt and M. Scurtescu, “OAuth 2.0 Token Revocation,” IETF
RFC 7009, Aug. 2013.
[11] J. C. Corbett, J. Dean, M. Epstein, A. Fikes, C. Frost, J. J. Furman,
S. Ghemawat, A. Gubarev, C. Heiser, P. Hochschild, W. Hsieh, S. Kan-
thak, E. Kogan, H. Li, A. Lloyd, S. Melnik, D. Mwaura, D. Nagle,
S. Quinlan, R. Rao, L. Rolig, Y. Saito, M. Szymaniak, C. Taylor,
R. Wang, and D. Woodford, “Spanner: Google’s Globally-Distributed
Database,” in The 10th USENIX Symposium on Operating Systems
Design and Implementation (OSDI), Oct. 2012.
[12] K. Fall, “A Delay-Tolerant Network Architecture for Challenged Inter-
nets,” in The 2003 Conference on Applications, Technologies, Architec-
tures, and Protocols for Computer Communications (SIGCOMM), Aug.
2003.
[13] P. Bailis, S. Venkataraman, M. J. Franklin, J. M. Hellerstein, and
I. Stoica, “Probabilistically Bounded Staleness for Practical Partial
Quorums,” The VLDB Endowment, vol. 5, no. 8, pp. 776–787, Apr.
2012.
[14] W. Golab, M. Rahman, A. Auyoung, K. Keeton, and I. Gupta, “Client-
Centric Benchmarking of Eventual Consistency for Cloud Storage Sys-
tems,” in The 34th International Conference on Distributed Computing
Systems (ICDCS), Jun. 2014.
[15] D. Bermbach and S. Tai, “Eventual Consistency: How Soon Is Eventual?
An Evaluation of Amazon S3’s Consistency Behavior,” in The 6th
Workshop on Middleware for Service Oriented Computing (MW4SOC),
Dec. 2011.
[16] E. Anderson, X. Li, M. A. Shah, J. Tucek, and J. J. Wylie, “What
Consistency Does Your Key-Value Store Actually Provide?” in The
6th International Conference on Hot Topics in System Dependability
(HotDep), Oct. 2010.
[17] M. R. Rahman, W. Golab, A. AuYoung, K. Keeton, and J. J. Wylie,
“Toward a Principled Framework for Benchmarking Consistency,” in
The 8th USENIX Conference on Hot Topics in System Dependability
(HotDep), Oct. 2012.
[18] H. Wada, A. Fekete, L. Zhao, K. Lee, and A. Liu, “Data Consistency
Properties and the Tradeoffs in Commercial Cloud Storages: the Con-
sumers’ Perspective,” in The 5th Biennial Conference on Innovative Data
Systems Research (CIDR), Jan. 2011.
[19] S. Patil, M. Polte, K. Ren, W. Tantisiriroj, L. Xiao, J. L´opez, G. Gibson,
A. Fuchs, and B. Rinaldi, “YCSB++: Benchmarking and Performance
Debugging Advanced Features in Scalable Table Stores,” in The 2nd
ACM Symposium on Cloud Computing (SOCC), Oct. 2011.
[20] D. Bermbach, S. Sakr, and L. Zhao, “Towards Comprehensive Mea-
surement of Consistency Guarantees for Cloud-Hosted Data Storage
Services,” in The 5th TPC Technology Conference on Performance
Evaluation & Benchmarking (TPCTC 2013), Aug. 2013.
[21] W. Santos,
“76 Storage APIs: Box.net, Amazon S3, Drop-
box,” http://www.programmableweb.com/news/76-storage-apis-box.net-
amazon-s3-dropbox/2012/01/31.
[22] B. Voo, “20+ Tools To Supercharge Your Dropbox,” http://www.
hongkiat.com/blog/dropbox-tools/.
[23] I. Drago, M. Mellia, M. M Munafo, A. Sperotto, R. Sadre, and A. Pras,
“Inside Dropbox: Understanding Personal Cloud Storage Services,” in
The 2012 ACM conference on Internet measurement conference (IMC),
Nov. 2012.
[24] D. B. Terry, V. Prabhakaran, R. Kotla, M. Balakrishnan, M. K. Aguilera,
and H. Abu-Libdeh, “Consistency-Based Service Level Agreements for
Cloud Storage,” in The 24rd ACM Symposium on Operating Systems
Principles (SOSP), Nov. 2013.
[25] W. Lloyd, M. J. Freedman, M. Kaminsky, and D. G. Andersen, “Don’t
Settle for Eventual: Scalable Causal Consistency for Wide-Area Storage
with COPS,” in The 23rd ACM Symposium on Operating Systems
Principles (SOSP), Nov. 2011.
[26] R. Ladin, B. Liskov, L. Shrira, and S. Ghemawat, “Providing High
Availability Using Lazy Replication,” ACM Transactions on Computer
Systems (TOCS), vol. 10, no. 4, pp. 360–391, Nov. 1992.
[27] M. Mannan, B. H. Kim, A. Ganjali, and D. Lie, “Unicorn: Two-
Factor Attestation for Data Security,” in The 18th ACM Conference on
Computer and Communications Security (CCS), Oct. 2011.
[28] J. M. McCune, B. J. Parno, A. Perrig, M. K. Reiter, and H. Isozaki,
“Flicker: An Execution Infrastructure for TCB Minimization,” SIGOPS
Opering Systems Review, vol. 42, no. 4, pp. 315–328, Apr. 2008.
[29] Ericsson Mobility, “Interim Update: Ericsson Mobility Report,”
http://www.ericsson.com/res/docs/2014/ericsson-mobility-report-
august-2014-interim.pdf.
[30] S. Ghemawat and J. Dean, “Leveldb: A Fast and Lightweight Key/Value
Database Library by Google,” https://code.google.com/p/leveldb/.
[31] B. F. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan, and R. Sears,
“Benchmarking Cloud Serving Systems with YCSB,” in The 1st ACM
Symposium on Cloud Computing (SOCC). ACM, 2010, pp. 143–154.
[32] C. Cachin, “Integrity and Consistency for Untrusted Services,” in The
37th International Conference on Current Trends in Theory and Practice
of Computer Science (SOFSEM), Jan. 2011.
[33] C. Cachin and O. Ohrimenko, “Verifying the Consistency of Remote
Untrusted Services with Commutative Operations,” in The 18th Interna-
tional Conference on Principles of Distributed Systems (OPODIS), Dec.
2014.
[34] P. Maniatis and M. Baker, “Secure History Preservation through Time-
line Entanglement,” in The 11th USENIX Security Symposium, Aug.
2002.
[35] A. Haeberlen, P. Aditya, R. Rodrigues, and P. Druschel, “Accountable
Virtual Machines.” in The 9th USENIX Symposium on Operating Systems
Design and Implementation (OSDI), Oct. 2010.
[36] A. Haeberlen, P. Kouznetsov, and P. Druschel, “PeerReview: Practical
Accountability for Distributed Systems,” ACM SIGOPS Operating Sys-
tems Review, vol. 41, no. 6, pp. 175–188, Dec. 2007.
[37] A. Adya, W. J. Bolosky, M. Castro, G. Cermak, R. Chaiken, J. R.
Douceur, J. Howell, J. R. Lorch, M. Theimer, and R. P. Wattenhofer,
“Farsite: Federated, Available, and Reliable Storage for an Incompletely
Trusted Environment,” in The 5th USENIX Symposium on Operating
Systems Design and Implementation (OSDI), Dec. 2002.
[38] B.-G. Chun, P. Maniatis, S. Shenker, and J. Kubiatowicz, “Attested
Append-Only Memory: Making Adversaries Stick to their Word,” ACM
SIGOPS Operating Systems Review, vol. 41, no. 6, pp. 189–204, Dec.
2007.
[39] D. Levin, J. R. Douceur, J. R. Lorch, and T. Moscibroda, “TrInc: Small
Trusted Hardware for Large Distributed Systems,” in The 6th USENIX
Symposium on Networked Systems Design and Implementation (NSDI),
Apr. 2009.
[40] J. Schiffman, Y. Sun, H. Vijayakumar, and T. Jaeger, “Cloud Veriﬁer:
Veriﬁable Auditing Service for IaaS Clouds,” in 2013 IEEE Ninth World
Congress on Services (SERVICES), Jun. 2013.
[41] E. Stefanov, M. van Dijk, A. Juels, and A. Oprea, “Iris: A Scalable
Cloud File System with Efﬁcient Integrity Checks,” in The 28th Annual
Computer Security Applications Conference (ACSAC), Dec. 2012.
[42] E.-J. Goh, H. Shacham, N. Modadugu, and D. Boneh, “SiRiUS: Securing
Remote Untrusted Storage,” in The 10th Symposium on Network and
Distributed System Security (NDSS), Feb. 2003.
[43] R. L. Rivest, K. Fu, and K. E. Fu, “Group Sharing and Random Access
in Cryptographic Storage File Systems,” Masters Thesis, MIT, Tech.
Rep., Jun. 1999.
[44] M. T. Goodrich, C. Papamanthou, R. Tamassia, and N. Triandopoulos,
“Athos: Efﬁcient Authentication of Outsourced File Systems,” in The
11th International Conference on Information Security (ISC), Sep. 2008.
895
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:07:39 UTC from IEEE Xplore.  Restrictions apply. 
user is trying to access the cloud service while in an area of
poor reception, they can likely remedy the situation by moving
to a different location.
Various industry measures indicate that smartphone usage is
rising, so intuitively one would believe that cellular networks
have to be fairly reliable to have fostered such heavy use.
Our ﬁndings do not contradict this intuition and they suggest
that smartphones do indeed have a high enough level of
connectivity that episodes of connectivity loss are short and
isolated.
[45] A. Barsoum and A. Hasan, “Enabling Dynamic Data and Indirect Mutual
Trust for Cloud Computing Storage Systems,” IEEE Transactions on
Parallel and Distributed Systems, vol. 24, no. 12, pp. 2375–2385, Dec
2013.
[46] D. Dobre, G. Karame, W. Li, M. Majuntke, N. Suri, and M. Vukolic,
“PoWerStore: Proofs of Writing for Efﬁcient and Robust Storage,” in
The 20th ACM Conference on Computer and Communications Security
(CCS), Nov. 2013.
[47] M. Vrable, S. Savage, and G. M. Voelker, “BlueSky: A Cloud-Backed
File System for the Enterprise,” in The 10th USENIX Conference on
File and Storage Technologies (FAST), Feb. 2012.
[48] A. Bessani, M. Correia, B. Quaresma, F. Andr´e, and P. Sousa, “DepSky:
Dependable and Secure Storage in a Cloud-of-Clouds,” ACM Transac-
tions on Storage (TOS), vol. 9, no. 4, p. 12, Nov. 2013.
[49] K. D. Bowers, A. Juels, and A. Oprea, “HAIL: A High-Availability and
Integrity Layer for Cloud Storage,” in The 16th ACM Conference on
Computer and Communications Security (CCS), Nov. 2009.
[50] A. Juels and B. S. K. Jr., “PORs: Proofs of Retrievability for Large
Files,” in The 14th ACM Conference on Computer and Communications
Security (CCS), Oct. 2007.
[51] H. Chen and P. Lee, “Enabling Data Integrity Protection in Regenerating-
Coding-Based Cloud Storage: Theory and Implementation,” IEEE Trans-
actions on Parallel and Distributed Systems, vol. 25, no. 2, pp. 407–416,
Feb 2014.
[52] G. Ateniese, R. Burns, R. Curtmola, J. Herring, L. Kissner, Z. Peterson,
and D. Song, “Provable Data Possession at Untrusted Stores,” in The
14th ACM Conference on Computer and Communications Security
(CCS), Nov. 2007.
[53] M. van Dijk, A. Juels, A. Oprea, R. L. Rivest, E. Stefanov, and
N. Triandopoulos, “Hourglass Schemes: How to Prove that Cloud
Files Are Encrypted,” in The 19th ACM Conference on Computer and
Communications Security (CCS), Oct. 2012.
APPENDIX
[Smartphone Connectivity Study]
While smartphones are designed to be constantly connected
and cellular coverage is available in most populated areas of
the world, momentary gaps in cellular connectivity is still quite
a common occurrence. To better understand this phenomenon,
we performed an informal smartphone connectivity study. We
acknowledge that our study has limitations – the participants
are from the same geographical area so the study is limited
to the 4-5 carriers who service the area. However, given that
cellular coverage will only continue to improve in all parts of
the world, we believe that the results we attain here should be
representative of what most populated areas of the world will
be able to achieve in the near future.
To record the availability of phones, we built a simple
Android application that records the periods when the phone
is not connected to the Internet. The application continually
monitors network connectivity on both cellular and WiFi inter-
faces by registering for network status events. The application
was installed on the phones of 12 participants over a 7 month
period. At the end of the period, we measured the total time
the phones had network connectivity over the total monitored
time to be 97.81%. The average duration of a disconnection
was roughly exponentially distributed, with a mean of 94
seconds and a longest measured period of disconnection to
be 5.7 hours. About 90% of disconnections last for less than
2 minutes suggesting that even if smartphone unavailability is
encountered, it wouldn’t last long enough for a human user to
perceive too much inconvenience. In addition, we found that
most disconnection events tended to be clustered, suggesting
they were related to the user’s physical location. Thus, if the
896
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:07:39 UTC from IEEE Xplore.  Restrictions apply.