# mysql
## 常用操作:
\[root@localhost \~\]# grep \'temporary password\' /var/log/mysqld.log
#第一次登陆之前可查看初始密码
\[root@localhost \~\]# mysqladmin -uroot --p\[oldpassword\] password
newpassword #修改密码1
mysql\> UPDATE user SET password=PASSWORD(\"new password\") WHERE
user=\'root\'; #修改密码2要刷新配置
mysql\> FLUSH PRIVILEGES;
mysql\> SET PASSWORD FOR \'root\'@\'localhost\' = PASSWORD(\'newpass\');
#修改密码3
mysql\> alter user root@\"localhost\" identified by \"123qqq\...AAA\" ;
#修改密码4
mysql\> show variables like \"%password%\" ;
mysql\>set global validate_password_policy=0; //只验证长度,临时修改
\[root@sql51 \~\]# vim /etc/my.cnf //永久修改
\[mysqld\]
validate_password_length=6
validate_password_policy=0
mysql\> alter user user() identified by \"123456\"; //修改登陆密码1
mysql\> alter user root@\"localhost\" identified by \"123qqq\...AAA\" ;
//修改登陆密码2
\[root@sql51 \~\]# mysql -uroot -p123456 mysql #指定mysql库名登录
mysql\> system ls /var/lib/mysql #登录MySQL后运行系统命令
mysql\> show databases;
mysql\> use sys; //切换到sys库
mysql\> create database newdb; //新建名为newdb的库
mysql\> drop database newdb; //删除名为newdb的库,在当前库也能被删除
**查询授权,结构,配置等信息**
mysql\> select database(); //查看当前所在库
mysql\> show tables;
**mysql\> desc columns_priv\\G**
//查看表结构，以列表形式展现，末尾不用分号
**mysql\> desc columns_priv;**
//查看表结构，以表格形式展现末尾需要有分号
**mysql\> desc mysql.columns_priv; //查看mysql里面的columns表**
mysql\> desc t3;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| age \| tinyint(3) unsigned \| YES \| \| NULL \| \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
Field:字段名 Type:数据类型 Null 是否允许为空值,
Key:键值(索引) Default:字段的默认值 Extra 额外设置
数据中"" "null" 都不是空值,null才是空(没双引号)
mysql\> create table pwlist(
-\> name char(16) not null,
-\> password char(48)default \'\',
-\> primary key(name)
-\> );
包括name、password两列，其中name列作为主键。两个字段值均不允许为空，其中密码列赋予默认空值，相关操作如下所述。
mysql\> show create table mydb.student; //show create
table查看表的实际创建指令：
mysql\> CREATE TABLE mydb.student(
-\> 学号 char(9) NOT NULL,
-\> 姓名 varchar(4) NOT NULL,
-\> 性别 enum(\'男\',\'女\') NOT NULL,
-\> 手机号 char(11) DEFAULT \'\',
-\> 通信地址 varchar(64),
-\> PRIMARY KEY(学号)
-\> ) DEFAULT CHARSET=utf8; //手工指定字符集，采用utf8
mysql\> SHOW VARIABLES LIKE \'character%\'; //查看字符集,确认更改结果
mysql\>show variables like '% %'; //搜索数据库中关键字
mysql\> show variables like \'have_dynamic_loading\' ;
//查看mysql主从同步复制模块
mysql\> show variables like \"%password%\" ; #查看密码策略
mysql\>show grants ; #查看权限默认是看root
mysql\>show grants for tom; #可查看tom的权限(查看所有权限)
mysql\>show grants for mydba@\"%\"; #查看mydba用户权限详情,%表示所有库
mysql\> select host,user from mysql.user; #查看用户登录授权信息
mysql\> show index from t1; #查看索引
mysql\> show index from t1\\G; #将显示内容竖向显示,一定要大写G
mysql\>show slave status\\G; #查看主从信息
mysql\>show master status; #查看binlog日志
mysql\>show engines\\G; #查看数据库此版本支持的所有存储引擎以及属性
mysql\> show status like \'%table_lock%\'; #查看当前表锁状态信息
mysql\> show variables like \'%autocommit%\';
#查看自动提交开关,数据变更立即生效
mysql\> show variables like \'%secure%\'; #查询默认检索文件目录：
mysql\> desc columns_priv\\G //查看表结构，以列表形式展现，末尾不用分号
mysql\> desc columns_priv; //查看表结构，以表格形式展现末尾需要有分号
mysql\> desc mysql.columns_priv; //查看mysql里面的columns表
mysql\> select \* from t1;
mysql\> insert into t1 values (\"bob\",19,\"boy\") ;
mysql\> update ygt set ygt_id=8 where ygt_id=3;
//将ygt表中的ygt_id=3数据中的ygt_id数据改为8
mysql\> delete from db1.t1 where name=\"bob\";
mysql\> delete from db1.t1; //delete删除所有表记录（表还在）
mysql\> drop table t3; //删除表
假定stuinfo表用来记录每个家庭成员的姓名（name）主键、性别（gender）、出生日期（birth）、职业（job）、与户主关系（relation）。
mysql\> CREATE TABLE stuinfo (
-\> name varchar(16) NOT NULL,
-\> gender enum(\'male\',\'femal\') DEFAULT \'male\',
-\> birth date NOT NULL,
-\> job varchar(16) DEFAULT \'\',
-\> relation varchar(24) NOT NULL,
-\> PRIMARY KEY(name)
-\> );
## 配置选项
\[mysqld\]
bind-address=0.0.0.0 #监听地址，有些版本差异，添上不会出问题
server-id= {{id.stdout}} #用ansible批量传送，传参方式获取
binlog-format=mixed #binglog日志格式
log_bin=/var/log/mysql/mysql-bin #binlog日志存放路径和命名
relay-log=/var/log/mysql/relay-log #relay-log中继日志
relay-log-index=/var/log/mysql/relay-log.info #relay-log中继日志
relay-log-info-file=/var/log/mysql/relay-log.info
relay_log_purge=0 #不删除日志，MHA用得上
> #以下是主从半同步复制的配置（semi sync master/slave）
plugin-load=rpl_semi_sync_master=semisync_master.so
#加载主半同步复制模块
plugin-load=rpl_semi_sync_slave=semisync_slave.so #加载从半同步复制模块
rpl_semi_sync_slave_enabled=1 #启用从半同步复制模式
rpl_semi_sync_master_enabled=1 #启用主半同步复制模式
rpl_semi_sync_master_timeout=3000
## 数据类型
数值型:
整数型:tinyint(微小整数) smallint(小整数) mediumint(中整数) int(大整数)
bigint(极大整数)
> mysql\> create table t3(age tinyint);
>
> mysql\> create table t3(age tinyint unsigned); #无符号范围
浮点型:float(单精度浮点数) double(双精度浮点数)
> mysql\> create table t6(pay float(7,2)); #总宽度7,小数位数2
字符型: 定长型char() 变长型varchar 大文本类型text/blob
mysql\> create table t7 (name char(20),homedir char(15),mail
varchar(30));
枚举型: 多选一enum() 多选多set()
mysql\> create table t10(name char(10),
-\> sex enum(\"boy\",\"girl\"),
-\> likes set(\"hgn\",\"game\",\"sleep\",\"eat\")
-\> );
**日 期:**
**日期时间：datetime ** 占用４个字节
> 范围：1000-01-01 00:00:00.000000～9999-12-31 23:59:59.9999
**日期时间：timestamp** 占用４个字节 
> 范围：1970-01-01 00:00:00.000000\~2038-01-19 03:14:07.9999
Datetime和timestamp存储格式：yyyymmddHHMMSS，201901012018
**日  期：date** 占用４个字节 范围：0001-01-01\~9999-12-31 格式:yyyymmdd
**年  份：year** 占用１个字节 范围：1901－2155 格式:yyyy
**时  间：time** 占用３个字节 格式：HH:MM:SS
mysql\> create table t8 ( name char(15),
-\> age tinyint unsigned,
-\> birthday date,
-\> upclass time,
-\> party datetime,
-\> cs year );
## 日期函数:
mysql\> select now(); #now()查看当前的日期和时间
mysql\> SELECT sysdate(); #sysdate()查看系统日期和时间
mysql\> SELECT curdate(); #curdate()获得当前的日期，不含时间
mysql\> SELECT curtime(); #curtime()获得当前的时间，不含日期
mysql\> SELECT year(now()),month(now()),day(now());
#分别获取当前日期时间中的年份、月份、日
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
\| year(now()) \| month(now()) \| day(now()) \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
\| 2017 \| 4 \| 2 \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
mysql\> SELECT month(sysdate()),day(sysdate());
#获取系统日期时间中的月份、日
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| month(sysdate()) \| day(sysdate()) \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 4 \| 2 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
mysql\> SELECT time(sysdate());获取系统日期时间中的时刻
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| time(sysdate()) \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 04:06:08 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
mysql\> insert into db1.t8 values(
-\> \"zdd2\",28,curdate(),curtime(),now(),year(now()) );
#可根据日期函数插入实时数据
Query OK, 1 row affected (0.03 sec)
mysql\> select \* from t8;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| birthday \| upclass \| party \| cs \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| zdd \| 17 \| 2019-11-23 \| 08:30:00 \| 2019-02-14 20:30:00 \| 1991 \|
\| zdd2 \| 28 \| 2019-02-13 \| 17:33:29 \| 2019-02-13 17:33:29 \| 2019
\|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
2 rows in set (0.00 sec)
## 建表约束条件：（表结构）
mysql\> desc t3;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|