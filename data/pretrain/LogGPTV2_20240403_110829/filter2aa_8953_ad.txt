server 0.asia.pool.ntp.org
server 1.asia.pool.ntp.org
server 2.asia.pool.ntp.org
# 记录上次的 NTP server 与上层 NTP server 联接所花费的时间
driftfile /etc/ntp/drift
# 设置默认策略为允许任何主机进行时间同步
restrict default ignore
# 设置允许访问此时间服务器的时间服务的 IP 地址
# 根据自己实际情况配置
restrict 127.0.0.1   
restrict 192.168.10.2                           # 指定某台机器时间同步
restrict 192.168.0.0 mask 255.255.255.0         # 允许 192.168.0.0/254 子网内主机时间同步
restrict 0.0.0.0 mask 0.0.0.0 nomodify notrap   # 允许任何主机跟进行时间同步
# 指定阶层编号为 10，降低其优先度。
fudge 127.127.1.1 stratum 10
# 设置 ntp 日志的 path
statsdir /var/log/ntp/
# 设置 ntp 日志文件
logfile /var/log/ntp/ntp.log
```
---
### /home
用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的. 比如用户 user 的主目录就是 `/home/user`，可以用 `~user` 表示；
---
### /lib
这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件.几乎所有的应用程序都需要用到这些共享库.
**/lib/modules**
各不同版本核心的模组
---
### /lost+found
这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件.
---
### /media
linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下.
---
### /mnt
系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 `/mnt/` 上，然后进入该目录就可以查看光驱里的内容了.
---
### /opt
这是给主机额外安装软件所摆放的目录.比如你安装一个 ORACLE 数据库则就可以放到这个目录下.默认是空的.
---
### /proc
这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息.这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件.
**/proc/self/**
我们都知道可以通过 `/proc/$pid/` 来获取指定进程的信息，例如内存映射、CPU 绑定信息等等.如果某个进程想要获取本进程的系统信息，就可以通过进程的 pid 来访问` /proc/$pid/` 目录.但是这个方法还需要获取进程 pid，在 fork、daemon 等情况下 pid 还可能发生变化.为了更方便的获取本进程的信息，linux 提供了 `/proc/self/` 目录，这个目录比较独特，不同的进程访问该目录时获得的信息是不同的，内容等价于 `/proc/本进程 pid/`.进程可以通过访问 `/proc/self/` 目录来获取自己的系统信息，而不用每次都获取 pid.
/proc/[pid], 当查看当前进程的时候可以用 /proc/self 代替
* cmdline — 启动当前进程的完整命令，但僵尸进程目录中的此文件不包含任何信息
* cwd — 指向当前进程运行目录的一个符号链接
* environ — 当前进程的环境变量列表，彼此间用空字符（NULL）隔开；变量用大写字母表示，其值用小写字母表示
---
### /root
该目录为系统管理员，也称作超级权限者的用户主目录.
**/root/anaconda-ks.cfg**
系统安装的时候生成的一个文件，通过这个文件可以修改成自动安装的脚本，用于自动安装同样配置的系统.这个配置文件经修改之后使用 Kickstart 来自动安装大量同样的操作系统，
---
### /run
是一个临时文件系统，存储系统启动以来的信息.当系统重启时，这个目录下的文件应该被删掉或清除.如果你的系统上有 `/var/run` 目录，应该让它指向 run.
转到 /run。如果你使用 df 来检查它，你会看到这样的输出：
```bash
> cd /run
> df -k .
Filesystem     1K-blocks  Used Available Use% Mounted on
tmpfs             609984  2604    607380   1% /run
```
它被识别为 “tmpfs”（临时文件系统），`/run` 中的文件和目录没有存储在磁盘上，而只存储在内存中。它们表示保存在内存（或基于磁盘的交换空间）中的数据，它看起来像是一个已挂载的文件系统，这个可以使其更易于访问和管理。
---
### /sbin
s 就是 Super 的意思，这里存放的是系统管理员使用的系统管理程序.
---
### /selinux
这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放 selinux 相关的文件的.
---
### /srv
该目录存放一些服务启动之后需要提取的数据.如 www 服务需要访问的网页数据存放在 `/srv/www` 内.
---
### /sys
因为 UEFI 系统会将其固件、变量和设置映射到根目录下的 `/sys` 分区里面，所以，如果在 UEFI 环境中清除根目录下的所有内容，也会同样清除 `/sys` ，这将可能会导致你丢失 UEFI 的固件设置，从而使设备变砖。
**/sys/devices/system/cpu/vulnerabilities/**
CPU 漏洞修复的文件
---
### /tmp
这个目录是用来存放一些临时文件的.
---
### /usr
这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录.
**/usr/etc**
存放配置文件
**/usr/games**
存放游戏和教学文件.
**/usr/include**
开发和编译应用程序所需要的头文件.
**/usr/share**
存放结构独立的数据.
**/usr/bin**
系统用户使用的应用程序.
**/usr/sbin**
超级用户使用的比较高级的管理程序和系统守护程序.
**/usr/share/man , /usr/share/info , /usr/share/doc**
手册页、GNU信息文档和各种其他文档文件.
**/usr/lib**
程序或子系统的不变的数据文件，包括一些 site-wide 配置文件，名字 lib 来源于库(library)， 编程的原始库存在 `/usr/lib` 里.
**/usr/local**
本地安装的软件和其他文件放在这里，`/usr/local/bin` 存放本地增加的命令，`/usr/local/include` 存放本地增加的库文件.
**/usr/src**
存放程序的源代码，linux 内核的源代码存放在 `/usr/src/kernels` .
---
### /var
这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下.包括各种日志文件.
这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 `/var/log` 目录下，另外 mail 的预设放置也是在这里.
**/var/catman**
当要求格式化时的 man 页的 cache.man 页的源文件一般存在 `/usr/man/man*` 中;有些 man 页可能有预格式化的版本，存在 `/usr/man/cat*` 中.而其他的 man 页在第一次看时需要格式化，格式化完的版本存在 `/var/man` 中，这样其他人再看相同的页时就无须等待格式化了. (`/var/catman` 经常被清除，就象清除临时目录一样.)
**/var/lib**
系统正常运行时要改变的文件.
**/var/local**
`/usr/local` 安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他 `/var` 目录，例如 `/var/lock` .
**/var/lock**
锁定文件.许多程序遵循在 `/var/lock` 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.
**/var/log**
各种程序的 Log 文件，特别是 login (`/var/log/wtmp` log 所有到系统的登录和注销) 和 syslog (`/var/log/messages` 里存储所有核心和系统程序信息. `/var/log` 里的文件) 经常不确定地增长，应该定期清除.
**/var/run**
保存到下次引导前有效的关于系统的信息文件.例如， `/var/run/utmp` 包含当前登录的用户的信息.
**/var/spool，/var/mail, /var/news**
打印队列和其他队列工作的目录.每个不同的 spool 在 `/var/spool` 下有自己的子目录，例如，用户的邮箱在 `/var/spool/mail` 中.
**/var/tmp**
比 `/tmp` 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许 `/var/tmp` 有很旧的文件.)
---
## inode
inode 译成中文就是索引节点，每个存储设备(例如硬盘)或存储设备的分区被格式化为文件系统后，应该有两部份，一部份是 inode，另一部份是 block，block 是用来存储数据用的.而 inode 呢，就是用来存储这些数据的信息，这些信息包括文件大小、属主、归属的用户组、读写权限等.inode 为每个文件进行信息索引，所以就有了 inode 的数值.linux 操作系统下可以使用 ls -id 命令来查看文件或者目录的 inode 值，一般"root"目录的 inode 值为 2,一个分区挂载到一个目录下时，这个"root"目录的 inode 值为 2
---
## Source & Reference
* [Linux 系统目录结构](https://www.runoob.com/linux/linux-system-contents.html)
* [Linux目录结构及详细介绍](https://blog.csdn.net/m0_38044196/article/details/72844025)
* [文件的 SUID 、SGID 、Sticky属性](https://www.linuxidc.com/Linux/2015-05/116982.htm)
* [linux基础教程之特殊权限SUID、SGID和SBIT](https://www.jb51.net/article/147555.htm)
* [/etc/ld.so.conf详解](https://blog.51cto.com/lsscto/904078)
* [ldconfig动态链接库管理以及修改ld.so.conf.d](https://blog.csdn.net/unix21/article/details/12119861)
* [探索 Linux 上的 /run](https://linux.cn/article-11008-1.html)
* [Linux 网络调优：内核网络栈参数篇](https://www.starduster.me/2020/03/02/linux-network-tuning-kernel-parameter/)