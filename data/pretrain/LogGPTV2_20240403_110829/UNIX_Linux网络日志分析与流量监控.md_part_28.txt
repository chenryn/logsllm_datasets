锁了流向 192.168.150.173 和 192.168.150.174 的 ping 的流量。
流量（如TCP和UDP）。
及Nmap。）
扫描器，如 strobe。（它可以记录指定计算机所有开放端口，特点是扫描速度快，但灵活性不
的端口，扫描是通过手动或者自动脚本实现的。这种端口扫描就像是一个快速的TCP 端口
（1）主机对 icmp_echo (ping)不反应，虽然它们处于运行当中，但允许一些其他的网络
采用TCP端口扫描器实际上是很不成熟的，原因有两个：
接着，攻击者探测了DNS 服务器。最初的数据流可能只是些混乱的无目标的查询，
注意两次 ping 扫描的时间差，以及攻击者下一轮的信息包。这可能就是攻击者手动分
我们又一次看到了同样的情况：小宋的防火墙允许192.168.150.172 端口的通信，但封
有针对性的扫描可以减少数据流量和可能产生的日志数量。攻击者只扫描了他打算攻击
（2）虽然这种端口扫描是选择性的，但是它仍然可以触发网络中放置的NIDS报警。
; VERSION.BIND, type = TXT, class = CHAOS
QUERYSECTION:
; flags: qr a rdra; QUERY: 1, ANSWER: 1, AUTHORITY: 0
"；->>HEADER192.168.150.172:53
Apr 23 01:24:00 accept UDP 172.20.14.1:1030->192.168.150.172:53
Apr2301:22:09 accept TCP172.20.14.1:1030->192.168.150.172:23
Apr 23 01:21:33 accept TCP172.20.14.1:1030->192.168.150.172:23
<>DiG8.2<>@192.168.150.172VERSION.BINDchaos txt
01:
01:00:0
B
00:0
60:00:
0:00:
0:00:
808
8
00000
accept
acce
IP echoreq.
2
20
4
1:10
085
081-
081->19
->19
1
2526
262626262626
168
一
8
68
88
888
150.
第4章DNS系统故障分析139
11
安
---
## Page 163
旦攻击者通过DNS服务器进入内部网络，他就可以对内部的其他计算机实施攻击。
用户的根目录访问权限。这样，他就能顺利地访问这台服务器。
置有差异)。
一点可以很容易地在DNS 服务器的 Syslog 记录中发现（时间差是因为两台计算机的时钟设
期的8.2.2。
了一次 DNS 混合类（chaos class）查询，小宋的 DNS 服务器显示出版本号，原来是早就过
140UNIX/Linux网络日志分析与流量监控
端
端口上的交互式命令解释器，允许远程的telnet连接），运行在TCP端口31337并具有root
最后5条记录显示：攻击者整个上午都通过他打通的这个端口连在小宋的计算机上。
外部防火墙日志在2:00~10:15的记录：
DNS服务器上的Syslog日志文件记录：
内部防火墙日志记录，时间在凌晨2:00日志情况如下：
接下来的4 条记录表明，攻击者实际上已经利用系统漏洞侵入了这台DNS 服务器，这
由此可见，DNS服务器由于溢出而崩溃，
安全顾问用 dig 程序（专业的 DNS 追查工具，能显示比 nslookup 更详细的信息）执行
营营
223
Apr 23 01:33:11 accept TCP172.20.14.1:1234->192.168.150.172:31337
Apr 23 01:32:04 accept TCP 172.20.14.1:1233->192.168.150.172:31337
Apr 23 01:25:17 accept TCP172.20.14.1:1232->192.168.150.172:53
Apr 23 01:25:15 accept UDP172.20.14.1:1031->192.168.150.172:53
Apr 23 01:25:14 accept UDP172.20.14.1:1030->192.168.150.172:53
;MSG SIZE sent:30 rcvd: 60
Apr 2307:29:11 accept TCP172.20.14.1:1598->192.168.150.172:31337
Apr 2305:25:31 accept TCP172.20.14.1:1401->192.168.150.172:31337
Apr 23 03:37:54accept TCP172.20.14.1:1239->192.168.150.172:31337
;Total query time:3msec
VERSION.BIND.OS CHAOSTXT"8.2.2"
ANSWERSECTION:
Apr2301:25:14 accept TCP172.20.14.1:1231->192.168.150.172:53
02:03:15
10
WHEN:WedApr2512:02:372010
00
acC
compa
any.
888
88.88
ame
192.168.150.172->192.168.150.173
mes
>192.
，之后又被小宋的脚本重启。攻击者成功地通
1[14231
not
173:
---
## Page 164
漏洞。出现这些漏洞的原因往往是由于在软件编写过程中不注重安全性、稳健性，以及程序
像我们以前看到的那样，保持程序为最新版或者安装最新的补丁也是很重要的。
预防措施
查询数量除以DNS运行总时间即可。
过滤应该在攻击发生之前阻止攻击的发生，即使在防火墙这边还存在有漏洞的服务。
于其他可能有漏洞的服务还在其他端口上运行，所以仅仅打上这一个补丁是不够的。适当的
可以避免这一攻击。给DNS服务器打上补丁往往是小宋的网络安全计划的基本要素。但由
部分。
法访问权。
中邻近的内存。覆盖这段内存使攻击者（结合其他缓冲区溢出技术）可以获得这个系统的非
设。特别是这个过程还将在响应里增加一条新的签名，这将使请求缓冲区溢出，并覆盖堆栈
代码没有按正常方式进行变量初始化，后面的函数调用对请求缓冲区的大小做了无效的假
合法的密钥，BIND就会跳过正常的请求程序，直接跳到发送错误响应的代码段。由于这
签名的测试，查看该报文是否包括一个有效的密钥。如果请求中有事务签名，但是没有包括
处理的特征提供了验证和鉴别DNS交换的途径，在处理事务签名的过程中，BIND 执行一个
有的证据都表明，攻击者利用的是著名的 BIND 漏洞，即“TSIG Bug”。BIND 的事务签名-
的内容日志或内存转储文件（Core Dump），顾问不能确定攻击者利用的是哪一个漏洞。但所
问题解答
被攻击。
检查了内部网络中是否还有其他计算机（包括防火墙）遭到攻击，最后确认没有其他计算机
对此类攻击的预防非常简单，在所有边界设备上设置严格的进入流量过滤即可。而且，
在整个DNS系统中，不仅DNS协议存在缺陷，DNS服务器的实现软件也存在着多种
4）如何衡量DNS服务器的负载呢？当DNS业务量异常时如何检测？总体思路是用总
。攻击者最初是通过DNS 服务器上的一个漏洞进入网络的。但是，因为没有攻击发生时
20884/288=72，即每小时查询72次，每秒1.2次查询，从而判断DNS负载不大。
3）关键因素是小宋边界防火墙上流量过滤设置的漏洞。如果过滤的限制更加严格，就
2）攻击者发现了一个未受保护的DNS服务器，其上有一个易受攻击的BIND版本。
1）攻击者扫描网络，寻找可攻击点。这大概只是针对网络地址块大面积扫描的一
攻击者使用同样的工具来扫描内部计算机。这就是所有可疑记录的来源。安全顾问彻底
DNS运行总时间：977797432-976760631=1036801秒，约等于288小时。
总查询量：2+13192+321+11204+1173+4+32+4956=20884次。
攻击者利用了这个漏洞，获得了根目录的访问权限。
这一攻击的事件顺序如下：
2626
188
-1
第4章DNS系统故障分析141
---
## Page 165
维护DNS系统的安全，大家还应关注下面两个地址的DNS公告。
出于预防的角度安装一个网络入侵检测系统软件 Snort（Snort 的使用会在后面讲解）。为了
进而帮助防止DNS缓存攻击。
安全运行。
DNSSEC设置的例子：
存在的应答）是否来自真实的服务器，或者是否在传输过程中被篡改过。下面看一个经过
性和完整性的机制。利用密码技术，域名解析服务器可以验证它所收到的应答（包括域名不
性，而 DNSSEC 给解析服务器提供了防止上当受骗的武器，即一种可以验证应答信息真实
BIND服务器升级到Bind9.x。
虑，安全顾问建议完全重装DNS服务器。备份配置文件，并用可靠的介质重装操作系统，
算机遭到攻击，不经过艰难的调查，很难知道受攻击的程度。出于时间、金钱和安全的考
情况不容乐观，本案例中就是采用的BIND8。此类攻击的缓解措施就比较复杂了。一旦
Linux，Windows所占比例在36%左右，国内域名服务器多使用漏洞较多的BIND 8/9，安全
级域名服务系统中的所有权威服务器进行扫描，统计发现，62%以上的域名服务器使用
发出 40多种，使用最普遍的是 BIND。域名服务器使用最多的操作系统是Linux。对国内各
者经常利用这些漏洞来进行DNS攻击。比如缓冲区溢出问题。现在DNS 服务器软件已经开
测试不全面，导致在某种特定条件下程序执行出现异常和错误，从而引发灾难性后果。攻击
142UNIX/Linux网络日志分析与流量监控
通过DNSSEC的部署，可以增强对DNS域名服务器的身份认证，保护DNS的连接，
在这个案例中，由于其他计算机没有被殃及，顾问建议升级所有的软件至最新版本，并
·关注国家域名安全中心。http://www.cnnic.net.cn/giymaqzx/aqgg/aqggaqld/。
●关注BIND最新版动态。http://www.isc.org/software/bind。
传统的DNS配置信息有很多漏洞可以利用，但经过DNSSEC加密设置后就就能够保证
example.cn.
经过分析得知，DNS的最大缺陷是解析的请求者无法验证它所收到的应答信息的真实
本0
亿亿
21600
21600
RRSIG
INSOA
NS1,exam
201
92.
lea/
168
m5
0809
21600
m216.o0n
/ZKd
20110508091758（
nc
expirem(wobka)
2011
examp
4
le.cn
营五吉货
全
---
## Page 166
因为传统工具有时候是最快最方便的一种工具。但也有些不足：
4.2.2检查工具
软件类型和版本。
本，通常是利用各种软件的代码特征来构造错误代码特征库进行软件和版本的识别。
器的响应，然后根据DNS 服务器的响应报文的不同区分出DNS服务器所使用的软件及版
4.2.1DNS扫描的关键技术
主域名服务器进行及时修复。然而实际工作中辅域名服务器往往被忽略。m3
继续提供服务时，启动辅域名服务器来替代主域名服务器，从而保证服务的连续性，然后对
库中提取漏洞修复策略，
大的是无效授权和回送地址委派错误，无效授权错误会严重影响域名系统的性能和可用性。
宽，同时给整个DNS系统造成很大的负担。据统计，DNS的配置错误多种多样，其中影响比较
在无效授权配置错误的DNS服务器其响应时间可能达到4s，是正常响应时间的40倍，这样一来
可靠性，甚至会对DNS造成致命的损害。例如正常的DNS请求响应时间是100ms，但是一个存
漏洞扫描的关键技术是采用指纹识别技术，通过构造特殊的DNS请求报文来测试服务
，传统的 DNS 查询和测量多用到 Nslookup 和 Dig 工具来完成网络诊断、故障排除工作，
4.2
（5）查询漏洞库，找出该类型和版本的软件所存在的漏洞。
（2）配置自动纠错：在发现系统配置错误之后，一般是通知管理员进行手动纠正。
在实际工作中，经常可以发现DNS 配置错误。错误的DNS 配置不仅会影响DNS的性能和
DNSenum 的目的是尽可能收集一个域及子域的信息，它能分析出可能存在的域名，以
在BT4/5系统中集成了更加实用的工具。
1.高级工具使用
（3）对结果没有进行进一步处理，一般只得到权威域名服务器的域名。
（2）每次操作只能针对一个域名进行。
（1）需要进行大量的人机交互过程。
（6）将漏洞扫描结果写入数据库中。
（4）解析服务器的响应报文，并和预先设定的特征进行匹配，得到目标服务器所使用的
（3）读取所有特殊请求报文的格式，并逐项测试。
（2）通过本地DNS服务器获取该域的权威名字服务器列表。
（1）读取待检测域名列表。
DNS漏洞扫描的过程如下：
（3）启动余系统：最后的救命稻草就是余了，当主域名服务器出现严重错误，无法
（1）漏洞自动修补：在发现系统漏洞之后，
针对DNS的故障修复有以下三种方法：
DNS漏洞扫描方法
如关闭不必要的服务，运行补丁程序等。
，首先根据漏洞标识查找漏洞库，然后从漏洞
第4章DNS系统故障分析143
---
## Page 167
服务器指纹信息的历史记录，还能生成统计报告，如图4-2所示。
能提供在一定间隔内的访问响应时间、平均响应时间，可以探测 Web 服务器，并保留含有
域名服务器不知道，它会返回授权域的域名服务器或返回根域名服务器的地址，这有助于检
同样功能的还有 DNSmap 工具。
边界上，也就是说通过扫描这些系统，攻击者可以识别出一些不安全因素。下面举个例子。
（邮件交换记录）并把地址段写入指定文件。
测配置错误。下面是命令举例：
及对一个网段进行反向查询。它可以查询网站的主机地址信息、域名服务器、MX Record
144UNIX/Linux网络日志分析与流量监控
除了命令行工具还有一种在线诊断工具，例如 netcraft.com 提供领先网站响应时间。它
MX地址的详细资料对一些攻击者是非常有用的，这是因为邮件服务器通常位于企业网