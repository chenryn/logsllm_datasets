title:Adaptive Congestion Control for Unpredictable Cellular Networks
author:Yasir Zaki and
Thomas P&quot;otsch and
Jay Chen and
Lakshminarayanan Subramanian and
Carmelita G&quot;org
Adaptive Congestion Control for Unpredictable
Cellular Networks
Yasir Zaki
NYU Abu Dhabi
Abu Dhabi, UAE
PI:EMAIL
Thomas Pötsch
University of Bremen
Bremen, Germany
PI:EMAIL
Jay Chen
NYU Abu Dhabi
Abu Dhabi, UAE
PI:EMAIL
Lakshminarayanan
Subramanian
NYU and CTED
New York, USA
PI:EMAIL
Carmelita Görg
University of Bremen
Bremen, Germany
cg@comnets.uni-
bremen.de
ABSTRACT
Legacy congestion controls including TCP and its vari-
ants are known to perform poorly over cellular net-
works due to highly variable capacities over short time
scales, self-inﬂicted packet delays, and packet losses un-
related to congestion. To cope with these challenges, we
present Verus, an end-to-end congestion control proto-
col that uses delay measurements to react quickly to
the capacity changes in cellular networks without ex-
plicitly attempting to predict the cellular channel dy-
namics. The key idea of Verus is to continuously learn
a delay proﬁle that captures the relationship between
end-to-end packet delay and outstanding window size
over short epochs and uses this relationship to incre-
ment or decrement the window size based on the ob-
served short-term packet delay variations. While the
delay-based control is primarily for congestion avoid-
ance, Verus uses standard TCP features including mul-
tiplicative decrease upon packet loss and slow start.
Through a combination of simulations, empirical eval-
uations using cellular network traces, and real-world
evaluations against standard TCP ﬂavors and state of
the art protocols like Sprout, we show that Verus out-
performs these protocols in cellular channels. In com-
parison to TCP Cubic, Verus achieves an order of mag-
nitude (> 10x) reduction in delay over 3G and LTE net-
works while achieving comparable throughput (some-
Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for components of this work
owned by others than ACM must be honored. Abstracting with credit is per-
mitted. To copy otherwise, or republish, to post on servers or to redistribute to
lists, requires prior speciﬁc permission and/or a fee. Request permissions from
permissions@acm.org.
SIGCOMM ’15, August 17 - 21, 2015, London, United Kingdom
c(cid:13) 2015 ACM. ISBN 978-1-4503-3542-3/15/08. . . $15.00
DOI: http://dx.doi.org/10.1145/2785956.2787498
times marginally higher).
In comparison to Sprout,
Verus achieves up to 30% higher throughput in rapidly
changing cellular networks.
CCS Concepts
•Networks → Network protocol design; Trans-
port protocols; Network performance analysis;
Keywords
Congestion control, Cellular network, Transport proto-
col, Delay-based
1.
INTRODUCTION
Cellular network channels are highly variable and users
often experience ﬂuctuations in their radio link rates
over short time scales due to scarce radio resources mak-
ing these channels hard to predict [26, 20, 7]. TCP and
its variants are known to perform poorly over cellular
networks due to high capacity variability, self-inﬂicted
queuing delays, stochastic packet losses that are not
linked to congestion, and large bandwidth-delay prod-
ucts [15, 32, 33].
Three speciﬁc characteristics directly impact the un-
predictability of cellular channels. First, the state of
a cellular channel between a mobile device and a base
station undergoes several complex state transitions that
aﬀect channel availability in short time scales [15]; this
introduces variability in the underlying channel. Sec-
ond, the frame scheduling algorithms used in cellular
networks cause burstiness in the cellular channel. Based
on real-world cellular measurements, we observe that
the typical traﬃc characteristics at a receiver are bursty
(even for smooth sending patterns) with variable burst
sizes and burst inter-arrival periods. Third, while prior
work has considered only self-inﬂicted queuing delay as
a cause for high delays [33], we ﬁnd that competing
509traﬃc does aﬀect end-to-end delay characteristics, espe-
cially under high contention or when the cellular chan-
nel is near saturation. Finally, device mobility has a
substantial impact on channel characteristics that fur-
ther compounds these challenges. The lack of channel
predictability has important implications on the design
of new congestion control protocols.
In this paper we present Verus, a delay-based con-
gestion control protocol that is primarily designed for
highly variable channel conditions that are hard to pre-
dict. Instead of attempting to predict the cellular chan-
nel dynamics, Verus uses cues from delay variations to
track channel conditions and quickly change its sending
window. The key idea of the Verus protocol is to remain
in constant exploration mode and continuously learn a
delay proﬁle that captures the relationship between the
sending window size and the perceived end-to-end delay.
Using this delay proﬁle and delay variation cues, Verus
replaces the conventional Additive Increase (AI) in TCP
with a series of increment/decrement steps to quickly
adapt to changing channel conditions. While these con-
trol steps are primarily for congestion avoidance, Verus
retains the loss-based multiplicative decrease step of
TCP to quickly respond to congestion.
We implemented and tested Verus across a variety
of environments, comparing it against Sprout and vari-
ants of TCP including Cubic, NewReno and Vegas. We
then evaluated Verus using a combination of simula-
tions, trace-based simulations, and real-world experi-
ments. In these experiments we demonstrate that Verus
achieves an interesting trade-oﬀ between the through-
put and delay characteristics of Sprout and TCP vari-
ants in cellular channels. In comparison to TCP Cubic,
Verus achieves an order of magnitude (> 10x) reduc-
tion in delay over 3G and LTE networks while achieving
comparable throughput (sometimes margin-ally higher).
In comparison to Sprout, Verus achieves higher through-
put under rapidly ﬂuctuating channel conditions while
maintaining low delay. Finally, we show that Verus
provides good fairness properties when competing with
other protocols and that it can rapidly adapt to highly
variable channel conditions over short time scales.
2. RELATED WORK
Legacy Congestion Control Protocols
Congestion control is an extensively studied topic with
numerous variants of TCP. TCP Reno [5], TCP Tahoe
[16] and TCP NewReno [14] were among the early popu-
lar variants which are loss-based and TCP Vegas [3] was
among the earliest delay-based control protocols. Most
current operating systems leverage TCP Cubic [13] or
Compound TCP [29]. While TCP Cubic makes spe-
ciﬁc modiﬁcations to the increment function in conven-
tional AIMD-based window control, Compound TCP
maintains two congestion windows to adapt its sending
window. There are also a number of other TCP ﬂavors
such as LEDBAT [27], TCP Nice [30], equation based
rate control [9], and Binomial congestion control [2].
None of these legacy congestion control protocols are
directly suited for cellular network conditions where the
underlying channel changes at short time scales and the
basic assumption that a link has a ﬁxed capacity does
not hold [31].
In addition, none of these TCP vari-
ants can distinguish stochastic losses that are part of
the cellular environment from losses caused by conges-
tion. Our work aims to combine ideas from conventional
loss-based control with delay-based control drawing in-
spiration from protocols like TCP Vegas.
Router-feedback-based Protocols
A common approach used in congestion control research
to make TCP functional in new network environments
(where TCP variants are not well suited) is to use router
feedback. Examples of such techniques include Explicit
Congestion Notiﬁcation (ECN) [8], VCP [34], or active
queue management like RED [10], BLUE [4], CHOKe
[25], AVQ [19], CoDel [22]. The problem with these
methods is that they require modiﬁcations to interme-
diate routers which has remained a roadblock for adop-
tion.
In our setting, we aim to design an end-to-end
congestion control protocol for cellular networks with
no middle-box support or router feedback.
Recent Congestion Control Proposals
TCP has remained the gold standard for many years,
but there have been several recent publications on new
congestion control protocols for various environments.
Sprout [33], for example, is a recent protocol speciﬁcally
designed for the context of cellular networks. Sprout
speciﬁcally focused on the problem of reducing self-
inﬂicted delay that aﬀects TCP and its variants under
varying channel conditions. Sprout shows a signiﬁcant
reduction in the end-to-end delay experienced by ﬂows
in cellular networks while maintaining good throughput
characteristics. We compare our work against Sprout
later in this paper. Remy [32] focuses on the prob-
lem of machine generated automated congestion control
algorithms where a machine can be trained oﬄine to
learn congestion control schemes. The protocol designer
speciﬁes the desired targets of the network and Remy
uses prior knowledge of the network to parametrize the
protocol generation. Sivaraman et. al. [28] looked at
the learnability of congestion control under imperfect
knowledge of the network through an experimental study
leveraging Remy as a design tool.
Another recent congestion control protocol is Data
Center TCP (DCTCP) [1] that leverages ECN feed-
back to address several network impairments of TCP
within data center networks. Recursive Cautious Con-
gestion Control (RC3) [21] shows that the initial small
window of TCP during slow start often wastes several
RTTs until the ﬂow fully utilizes the available link band-
width. RC3 uses several levels of lower priority services
to achieve nearly optimal throughputs. Performance-
oriented Congestion Control (PCC) proposes to empir-
ically observe and adopt actions that result in high per-
formance, but PCC’s adaptation to “rapidly” changing
510networks is on the order of seconds and does not con-
sider unpredictable ﬂuctuations on the order of millisec-
onds that occur in cellular networks [6].
Cellular Performance
Several measurement studies have examined TCP per-
formance problems in cellular networks. Cellular net-
works tend to over-dimension their buﬀers by using large
buﬀers at base stations to smooth the overall ﬂow of
traﬃc. As a result, conventional congestion control
protocols result in “buﬀer-bloats” [12] and multi-second
delays. Jiang et. al. [18] have shown the severity of
buﬀerbloats through extensive measurements done on
3G and LTE commercial networks. The authors of [23]
run long-term measurements to investigate the end-to-
end performance of mobile devices within and across a
wide range of carriers (i.e., 100), using 11 cellular net-
work access technologies. Their results show that there
are signiﬁcant performance diﬀerences across carriers,
access technologies, geographic regions and time. Zaki
et. al. [35] conclude similar observations on cellular net-
works in developing regions as well as developed regions.
Huang et. al. [15] studied the eﬀect of network protocols
on 3G and LTE networks by means of active and passive
measurements. They discovered that TCP connections
over LTE have various ineﬃciencies such as slow start.
In comparison to 3G networks, LTE shows lower delays
while many TCP connections (∼52%) under-utilize the
available bandwidth of LTE.
3. CHANNEL UNPREDICTABILITY
The physical properties of radio propagation such as
path-loss and slow-fading eventually cause changes in
link performance despite mitigation techniques. As a re-
sult, cellular channels ﬂuctuate rapidly over short time
scales (milliseconds) and change more dramatically over
slightly longer time scales (seconds). The inherent un-
predictability of radio propagation along with the com-
plex interactions between cellular networking compo-
nents makes it diﬃcult for simple channel prediction
models to track channel variations and thus they moti-
vate adaptive exploration protocols like Verus.
We present results from several experiments on com-
mercial 3G/UMTS and LTE networks to highlight these
issues. We make three speciﬁc observations:
• Burst scheduling: Typical traﬃc characteris-
tics observed at a receiver are highly bursty with
variable burst sizes and burst inter-arrival periods.
Mobility further ampliﬁes these characteristics.
• Competing traﬃc: When two or more ﬂows con-
tend for radio resources and their sending rates
approach network capacity, we observe cross-ﬂow
dependencies.
• Channel unpredictability: Standard prediction
mechanisms even using the most recent samples
are far from capturing the bursty behavior of the
channel.
We measured cellular network performance under sev-
eral diﬀerent conditions, investigating the eﬀects of sev-
eral factors including: data rates, mobility, compet-
ing traﬃc, and 3G/UMTS or LTE. The measurements
were conducted on two commercial cellular networks,
Du and Etisalat1, for both downlink and uplink direc-
tion. Our measurement setup consisted of a standard
rack server and a client laptop tethered to a Sony Xpe-
ria Z1 LTE mobile phone. We implemented a measure-
ment tool that sends/receives UDP packets between the
server and client at 0.4 ms sending intervals. We per-
formed clock synchronization, tagged packets with se-
quence numbers, and included the sender timestamp to
calculate the one-way delay at the receiver.
Burst Scheduling
Packet arrivals at receivers exhibit a cellular radio sched-
uler phenomenon known as “burst scheduling”. The ra-
dio scheduler serves users at diﬀerent one millisecond
Transmission Time Intervals (TTI) and the amount of
data sent during the serving TTI is determined by radio
conditions that lead to sending a burst of several pack-
ets. Figure 1 illustrates this phenomenon for one of our
LTE 10 Mbps downlink measurements.
Figure 1: LTE 10 Mbps burst arrival time
Figure 2 summarizes our ﬁndings on burst scheduling
for the two operators on 3G and LTE. In these down-
link measurements our client was stationary and in an
urban residential area. We observe that the burst size
and inter-burst arrival time are diﬃcult to predict and
vary widely over the course of the 5 minute trace de-
spite low contention and mobility. The LTE networks
exhibit more frequent smaller bursts. Repeating this ex-
periment while driving in the same area produces qual-
itatively similar results, but mobility causes both burst
size and inter-arrival times to vary more widely. We
make similar observations on the uplink.