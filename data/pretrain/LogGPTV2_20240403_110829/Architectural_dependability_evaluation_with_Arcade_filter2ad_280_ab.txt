A user can essentia yspeci y any number 0 OM roups
as on as or each roup the mode switches are c ear )de(cid:173)
fined. At this point, we have identified a predefined set of
OM roups 10m which a user can chose:
1.
ct v / n ct 12 As exp ailed ear ie~ this OM roup
a ws the mode in 0 a component actin as a spare
)havin a reduced a lIe rate whi e
(and thus typica
in inactive mode). The activation and deactivation si
na s (causin the mode switchin ) are mana ed by a
spare mana ement unit (c . Section 3.3).
2. n/
: This
roup a ws to mode, or instance, the
cct that i
the power ai s, then the BC is shut down
and can no m er a (i.e., its ai urerate equa szero).
3.
b
/ oc
b : This
roup is used to mode a
cc
nd nc (as in, e.., [10,
n n d t uct v urct n d
21]); or examp ea database becomes inaccessib ei
the bus
10m accessi(cid:173)
b eto inaccessib edoes not mean that the component
ai s. Switchin
in in to it
2For readability, all input self loops have been omitted.
~
power fails?
activate?
~
deactivate?
power up?
power fails?
Figure 2. Defining operational modes of aBC.
1-4244-2398-9/08/$20.00 ©2008 IEEE
514
DSN 2008: Boudali et al.
(cid:173)
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
correspondin a rre si na (jaileddj! and failedm f). Any
other BC, RU, or SMU can now respond to these output ai
ure si na s. Once a BC has ai ed, it waits or a repaired?
input si na (c . Section 3.2 or detai s on the interaction
with an RU) and then immediate youtputs an up! si na
and moves to its operationa state. The rate A in Fi
. 3 is
on ya p acmo derwhich wi be instantiated once the ai
ure mode is combined with the operationa modes. Note
that i
the BC ai s due to a destructive unctiona depen(cid:173)
dency and is repaired without the component upon which
it depends bein operationa, then the repair does not ead
to an operationa state (transition 10m DOWNDP to state
3). Si na -,DF is the comp emento DF. Typica
yDF
corresponds to the failed (faileddj or failedm ) si na 0 an(cid:173)
other component and -,DF corresponds to its up si na . I
a BC has no destructive unctiona dependency, we can dis(cid:173)
card states 3,4,5,6, and DOWNDP.
ai uc mode, we a so a w mu tip e
In the
d with re ard to the inherent ai uc. In this case, i
u
the
BC has n a rre modes, the user needs to speci y n proba(cid:173)
y
bi itie~, and the Mar ovian rates are adjusted accordin
Fi .4 shows the I/O-IMC 0 a BC with two a rre modes
(with probabi
itiesl - p and p).
3.1.3 Combining operational modes and failure model
To obtain the finall/O-IMC model of a BC, we simply su(cid:173)
perimpose the a rre mode on each operationa state, with
the UPstate 0 the ai ue mode correspondin to an oper(cid:173)
ationa state. Note that here, di erent Mar ovian rates can
be specified according to the operational state the BC is in.
. 5 shows the I/O-IMC mode 0 a BC havin opera(cid:173)
Fi
. 2 and a a rre mode with one ai ure
tiona modes 0 Fi
mode and no destructive unctiona dependency5. Note the
di erent rates used in the mode .There is, 0 course, a syn(cid:173)
tactic way orspeci yin these rates (c . Section 3.5).
4With their sum being 1.
5For readability, we omitted the transitions from the four unnumbered
states which are similar to the ones for states 1 through 4.
has a ed(hence, no repair is initiated). However, to
the system, an inac(cid:173)
the environment, i.e., the rest 0
cessib ecomponent mi ht or mi ht not be, dependin
on the system at hand, viewed as a ai edcomponent.
While defining a BC, the user has to specify if inac(cid:173)
ai ue or
cessibi
not (c . Section 3.5).
ity is seen by the environment as a
4. n
/d g
d d This
raded modes 0 operation. A prime examp eis
roup is use u to mode de-
d
ng where a component switches to a de raded
operationa mode (and consequent y exhibits an in(cid:173)
creased ai uc rate) in case the component with which
course possib e
it is sharin the Old ai s.
.,
to mode a
norma Ide raded1lde raded2/ ••• Ide radedn .
roup with more than two modes, e.
It is 0
Whenever a mode switch (except or the ct v / n ct v
OM roup) occurs, this is due to ai uc or repair events 0
other components (this is uther exp aned in Section 3.5).
3.1.2 Failure model
ai uremode to each BC operationa state.
We attach a
-stnctured,
For simp icityand to eep the ramewor we
the a rre mode 0
y
the same except or possib ydi erent va ueso Mar ovian
rates3•
each operationa state is essentia
nt
: (1) an n
The ai ue mode describes how a BC a s,i.e., how it
moves 10m an operationa (or up) state to a ai ed(or down)
state and visa versa. We distin uish two ways in which a
u specified as a
component can ai
Mar ovian transition, and (2) a a rre due to a d
t zet v
urct n d
nd nc (as in [21, 10]) specified as a tran-
sition to a ai edstate upon the receipt 0 a si na (denoted
D F). The destructive mctiona dependency is due to the
a rre 0 another (or many other) component; e.., a pro(cid:173)
cessor depends upon the unctionin 0 a an and i
the an
a s, the processor overheats and a s as we
. The two
types 0 a rres
eat to s i ht )di erent behavior, in par(cid:173)
ticu arwhen dea in with repair. The a lee mode consists
o an UP, DOWNM, DOWNDP , and some (numbered)
intermediate states. Fi
. 3 shows the I/O-IMC represent(cid:173)
in a BC ai uc mode . The upper portion (states 1, 2,
and DOWNM) represents an inherent ai ue. The
ewer
portion (states 3,4,5, and DOWNDP) represents a de(cid:173)
structive unctiona dependency ai uc. UP is the startin
operationa state, and state 6 is added to proper yhand ethe
transitions between the two portions 0
the I/O-IMC.
From the UPstate, the BC can ai in two ways by mov(cid:173)
in to state 2 or state 3 respective )( and 10m these states the
BC immediate ymoves to the down states by outputtin the
3In the future, one might allow for more flexibility in the failure model
used for each operational state.
Figure 3. The failure model of aBC.
1-4244-2398-9/08/$20.00 ©200B IEEE
515
DSN 2008: Boudali et al.
(cid:173)
(cid:173)
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
3.2 Repair unit
repaired!
UlS hand in comp EX
Repairin a component or a set 0 components is hand ed
edhe repair unit (RU). In act, this
in a separate entity ca
a
n
d nc
between various components. The RU semantics is
a ain described in terms 0 an I/O-IMC with ai rre si na s
as inputs and repair si na sas outputs. The RU is a soaware
C and
d
repaired!
(a) Single failure mode.
(b) Multiple failure modes.
Figure 6. Dedicated repair strategy.
o a rates re atedto repair times. In short, the RU istensto
a rre si na soutput by one or many components, pic s a
component ( iven some po i<y) and initiates a repair oper(cid:173)
ation according to a specific repair rate, and finally outputs
the appropriate repaired! signal when the repair is finished.
This procedure is then repeated. We a
UI at most one RU
per component.
Figure 4. The failure model of a BC having
two failure modes.
_---f.-\-----V-faiJedl
t v
t
(PP).
t
. 7 shows the 1/0-IMC 0
. 6(a) shows the I/O-IMC 0
So far we have considered the following repair configu(cid:173)
rations/strate ies: (1) d d c t drepair, where each compo(cid:173)
nent has its own RU, (2).first come first served (FCFS), (3)
FCFS with n n
(PNP), and (4) FCFS
t v
with
Fi
the dedicated repair
po i<¥ and Fi
the FCFS repair
strate y with two components A and B. Note that the 1/0(cid:173)
IMC mode so the FCFS, PP, and PNP can et quite (f e
with increasin number 0 components. This is essentia
y
due to the act that the RU needs to eep trac 0 the ai
components and the order in which the a rres occurred.
o tena component has mu tip e ai ue modes, Le., di (cid:173)
erent ai ue si na s, and di erent repair rates or each
. 6(b) shows a dedicated RU or a component
mode. Fi
havin two di erent a rre si na s,i.e., two a rre modes,
in
Figure 5. The I/O-IMC model of aBC.
Figure 7. FCFS repair strategy.
1-4244-2398-9/08/$20.00 ©2008 IEEE
516
DSN 2008: Boudali et al.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 2008
with two repair rates, /-lm and /-ldj respective y
3.5 Syntax
3.3 Spare management unit
This section describes the (textua ) syntax 0 Arcade,
i.e., the syntax cr the BC, the RU, and the SMU.
The spare mana ement unit (SMU) hand es the activa(cid:173)
tion and deactivation of spare components. Two configura(cid:173)
tions are possib eat this point:
3.5.1 BC syntax
1. One primary and one spare:
In this configuration,
the assumption6 is that the primary component is a (cid:173)
ways in active mode, and thus a ways providin the
service whenever it is operationa .In ad, the primary
component does not have an inactive mode per se and
is there cre never activated or deactivated by the SMU.
When the primary a ~ the SMU activates the spare
component which ta es over the primary. As soon as
the primary is up a ain, the spare is deactivated and
the primary resumes operation. The I10-IMC mode
o the SMU is shown in Fi
. 8.
2. One primary and two or more spares: This con(cid:173)
figuration can be modeled based on the previous con(cid:173)
figuration; however, due to lack of space it will not be
urther discussed here.
3.4 System failure evaluation
Once a
the basic components and units have been de(cid:173)
fined along with their interactions and dependencies, we
need to speci y the condition under which the who e sys(cid:173)
tem is a ed or operationa . We chose a al t tree repre(cid:173)
iten s are
sentation (i.e., an AND/OR expression whose
a tre modes 0
the BCs)7 as the system eva uation crite(cid:173)
rion8• A au tree a so has a correspondin I/O-IMC mode
the entire system a tre/operation is repre(cid:173)
[6]. Thus,
sented as an I/O-IMC. A simp eexamp ewou dbe a system
two redundant processors; the system ai si
comprised 0
. In this case, the who e system a(cid:173)
both processors ai
ure/operation wou dbe mode tIl by a al ttree consistin
o a repairab eAND ate with the two processors as inputs.
The repairab eAND ate represents the overa system a (cid:173)
ure/operation and has a correspondin I/O-IMC mode [6].
60ther assumptions, e.g., treating symmetrically both components, are
possible at the cost of complicating the SMU I/O-IMC model.
7We can also use the KIM gate as a shorthand notation.
8We can also consider adding the Priority-AND gate [10].