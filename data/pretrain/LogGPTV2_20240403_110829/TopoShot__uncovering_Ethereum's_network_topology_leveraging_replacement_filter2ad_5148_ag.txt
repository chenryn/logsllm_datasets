317
V1) All blocks produced in [t1, t2 + e] are full in the sense that
the Gas limit of each block is filled. Here, e denotes the
expiration time of a transaction in Ethereum-node mempool,
for instance, e = 3 hours in Geth by default.
V2) In the blocks produced in [t1, t2 + e], all transactions’ Gas
prices are higher than the preset Gas price Y0.
C.2 Non-interference Analysis
In this subsection, we first define what the measurement interfer-
ence means. We then prove that verified Conditions V1 and V2
ensure non-interference on the measured nodes.
Intuitively, non-interference means the action of measurement
does not affect what blocks are produced by the Ethereum network
being tested. In other words, with and without the measurement P,
the blocks produced by the Ethereum network should be the same.
Formally, we consider a node M runs a measurement process
against a subject node S, which is connected to the rest of an
Ethereum network C. In the case that TopoShot is used to de-
tect the link between A and B, S can be either node A or B. The
measurement process starts at time t1 and ends at time t2.
Definition C.1. Consider a measurement process parameterized
by P(M, S, C, t1, t2). Denote by {bi} the sequence of blocks produced
by the Ethereum network (S, C) in period [t1, t2 + e].
Now consider a hypothetical world in which the measurement
did not occur at t1 and the Ethereum network produces the sequence
of block headers with {b′
i}. The hypothetical world is deterministic
in the sense that it produces the same block from the same miner
at the same time with the actual world with measurement, that is,
block b′
i
P(M, S, C, t1, t2) does not interfere with the measured Ethereum
network (S, C), if and only if the transactions included in each block
bi (i.e., the block at the index i of the sequence) in the actual world
with measurement are identical to those included in block b′
in the
i
hypothetical world without measurement.
has the same timing with bi.
Theorem C.2. Consider a measurement P(M, S, C, t1, t2) is con-
ducted using the method of TopoShot. If Conditions V1 and V2 hold,
P does not interfere with the Ethereum network (S, C).
Proof. Generally speaking, blocks can be produced by node S
or other nodes in Ethereum network C. Because TopoShot will not
evict transactions on nodes besides S, the measurement will not
affect the block produced by nodes other than S. Thus, we consider
TopoShot: Uncovering Ethereum’s Network Topology Leveraging Replacement Transactions
IMC ’21, November 2–4, 2021, Virtual Event, USA
Table 10: Graph properties of the Goerli testnet
Measured
Goerli
5
23
ER (n=1025,
m=18530)
3.0
1025.0
3
115
3.775
0.0354
0.09616
-0.1573
134.49
0.048
3.0
1025.0
3.0
0.0355
0.0354
-0.0036
416.8
0.132
Diameter
Periphery
size
Radius
Center size
Eccentricity
Clustering
coefficient
Transitivity
Degree
as-
sortativity
Clique num-
ber
Modularity
CM
5.1
31.3
3.0
154.7
3.911
0.1281
0.1052
-0.0742
1007.2
0.125
BA (n=1025,
l=36)
3.0
866.3
2.0
158.7
2.845
0.1380
0.1374
-0.0050
63.4
0.084
in this proof the “worst case” that all blocks {bi} are produced by
node S.
Due to the design of TopoShot, the measurement process will
evict only the transactions in S’s mempool (as late as of time t2)
whose Gas prices are lower than Y0. For other transactions whose
Gas prices are higher than Y0 and transactions submitted after t2,
measurement process P will not affect them.
Now, we are ready to prove the theorem by contradiction: As-
suming there is interference under Conditions V1 and V2, our goal
of the proof is to find contradictory. That is, with V1 and V2, there
is at least one transaction included in a block produced hypotheti-
cally without measurement, say b′
, and that is not included in the
i
corresponding actual block bi. We name this transaction by txl .
Since the measurement will only affect the transactions with Gas
prices lower than Y0, txl ’s Gas price must be lower than Y0.
Because of V 1, bi must be full. Thus, there must be a “victim”
transaction in the hypothetical world, say txh, that is included in bi
but is replaced by txl in b′
. Because txh’s Gas price is higher than
Y0 and is not affected by the presence of measurement, txh must
reside in the node’s mempool in the hypothetical world without
measurement.
Now, we can constitute a scenario in the hypothetical world that
Miner S is faced with two transactions in its mempool, txl and txh.
To make txl in the blockchain, S must prioritize txl (with Gas price
lower than Y0) over txh (with Gas price higher than Y0) to mine. This
contradicts with the property in Ethereum client implementations
(both Geth and Parity) that transactions of higher Gas price have
higher priority to be mined than those of lower Gas price. Note
that here both txl and txh have small enough Gas and can fit into
block bi under the block Gas limit.
□
i
D MEASUREMENT RESULTS OF RINKEBY &
GOERLI
Table 9: Graph properties of the Rinkeby testnet
BA (n=446,
l=69)
2.0
446.0
Measured
Rinkeby
4
203
ER (n=446,
m=15380)
2.7
512.0
CM
4.6
76.1
0.3513
-0.04555
0.4981
-0.03202
274775.0
0.01063
0.1548
-0.001536
2.0
446.0
2.0
0.3592
3.0
233.3
3.4953
0.3407
2.0
442.4
2.008
0.1548
3
243
3.455
0.4375
Diameter
Periphery
size
Radius
Center size
Eccentricity
Clustering
coefficient
Transitivity
Degree
as-
sortativity
Clique num-
ber
Modularity
We similarly apply the TopoShot method to measure the
Rinkeby testnet. Compared with Ropsten, Rinkeby is more heav-
ily used and the mempools there contain more transactions. For
instance, on our local node M connected to Rinkeby, it is not un-
common that the mempool has more than 4500 transactions. We thus
estimate the median Gas price in the mempool (using the method
described in § 5.2.1) and use it as txC’s Gas price.
Noteworthy is that during this measurement, we found when
our measurement node M sends future transactions (as in Step 2 )
150.6
0.08198
0.3589
-0.03275
383.2
0.07332
82.5
0.05310
to certain nodes in Rinkeby, these nodes return the same future
transactions back to node M. To avoid overloading M with the fu-
ture transactions bounced back, we modify the Geth client running
on M to discard figure transactions received from other nodes.
We present the similar measurement metrics of Rinkeby with
Ropsten. The node degree distribution is in Figure 9 where node
degrees are distributed from 1 to 180. There are many nodes with
degree smaller than 15, and between degrees 15 and 180 the nodes
are evenly distributed. Graph statistics of Rinkeby, in comparison
with the three random graphs, are presented in Table 9, where the
measured testnet similarly shows most traits, such as with much
lower modularity, which implies the testnet’s higher resilience to
network partitioning. Particularly, there are many more cliques
found on Rinkeby than on the random graphs, which corroborates
the low modularity of the testnet and hardness to partition its
topology.
Compared with Ropsten, Rinkeby has a much larger center size
(more nodes in the center of the graph), a higher transitivity (more
likely the adjacent nodes are connected) and a lower-level modular-
ity (harder to partition the graph into densely connected modules).
We conducted a similar measurement study on Goerli, another
Ethereum testnet, and present results in node degree distribution in
Figure 10 and Figure 11, and graph statistical properties in Table 10.
Notably, there are nodes in the Goerli network that are globally
connected and are with very high degrees (e.g., more than 700
neighbors). It has a very low clustering coefficient (0.0354) com-
pared with those of Rinkeby (0.4375) and Ropsten (0.207). In terms
of modularity, Goerli (0.048) is comparably lower than Ropsten
(0.0605), and is much higher than Rinkeby (0.0106). This implies
that Rinkeby is the most resilient to network partitioning (in terms
of low graph modularity), and Ropsten is the least partitioning
resilient.
D.1 Visualization of Rinkeby & Goerli
Using the NetworkX tool [3], we detect the communities of the
Rinkeby and Goerli, respectively in Figures 8a and 8c. In Rinkeby,
there are four communities detected, and the biggest one (in green)
are of 33.9% of the nodes of the network. The average degree in the
community is 52.3, and 5.3% of the nodes (i.e., 8 out of 151 nodes)
only have a degree of 1. In Goerli, there are seven communities
detected, and the biggest one (in black) are of 24.6% of the nodes of
the network. The average degree in the community is 40.5, and 2%
of the nodes (i.e., 5 out of 252 nodes) only have a degree of 1.
318
IMC ’21, November 2–4, 2021, Virtual Event, USA
Kai Li et al., Kai Li, Yuzhe Tang, Jiaqi Chen, Yibo Wang, and Xianghong Liu
Figure 11: Nodes of large degree in Goerli
Degree range
Count
100-150
200-300
697
Count Degree range
12
4
1
150-200
300-500
711
3
3
1
(burnt) and pays the priority fees to the miner. It is also ensured
that the sum of the base fee and priority fee is lower than the max
fee.
Under EIP1559, the mempool uses the max fee to make admis-
sion/eviction decisions. Noteworthy is that when a pending trans-
action’s max fee is below the base fee (i.e., negative priority fee), the
transaction becomes underpriced and is dropped. Thus, in EIP1559,
as long as we ensure the max fee in measurement transactions (i.e.,
txA, txC , txO ) is above the base fee, the measurement process is
not affected by the presence of EIP1559.
6(https://github.com/maxmind/GeoIP2-python
Figure 10: Node degree distribution in
Goerli
Figure 9: Degree distribution in
Rinkeby
We plot the geographical distributions of the Rinkeby and Goerli
testnets using GeoLite2 database service6. Figures 8b and 8d re-
spectively show the Rinkeby and Goerli nodes in a world map and
their connections. In both testnets, most nodes are located in the
United States, Europe, and East Asia. Particularly in Goerli, there
are a significant portion of nodes located in Australia.
E DISCUSSION ON THE IMPACTS OF EIP1559
In EIP1559, there are three fee components: a base fee that is auto-
matically set by the blockchain based on the recent block utilization,
a priority fee set by the sender and a max fee also set by the sender.
A transaction included in the blockchain always pays the base fee
319
1225483109134157180Node degree05101520253035Number of nodes0102030405060718191Node degree020406080Number of nodes