---

## Page 199
### 第6章 curses函数库

#### COLORS 和 COLOR_PAIRS
- **COLORS**: 可用颜色的数量。
- **COLOR_PAIRS**: 可用的颜色对数量（最大为64）。

#### 调整颜色深度
此函数允许用户在0到`COLORS`之间选择一个可用的颜色，并调整其红、绿、蓝三原色的强度值，范围从0到1000。这类似于定义PC屏幕VGA调色板的颜色值。

#### 6.14 逻辑屏幕与显示平面
在编写复杂的curses程序时，可以创建一个逻辑屏幕，再将全部或部分内容输出至物理屏幕。如果逻辑屏幕尺寸大于物理屏幕，则可以根据需要仅显示逻辑屏幕的一部分。

虽然目前学过的curses函数不允许窗口尺寸超过物理屏幕，但curses提供了“显示平面”这一特殊数据结构来处理这种情况。显示平面的大小可以超过物理屏幕，使用方法类似普通窗口。

##### 创建显示平面
```c
#include <curses.h>
WINDOW *newpad(int number_of_lines, int number_of_columns);
```
- 返回值：指向`WINDOW`结构的指针。
- 使用`delwin`函数销毁显示平面。

##### 刷新显示平面
```c
int prefresh(WINDOW *pad_ptr, int pad_row, int pad_col, 
             int screen_row_min, int screen_col_min,
             int screen_row_max, int screen_col_max);
```
- 将显示平面上指定区域的内容刷新到屏幕上。
- `prefresh`和`pnoutrefresh`用于更高效地刷新屏幕。

#### 示例代码：pad.c
```c
#include <curses.h>

int main() {
    WINDOW *pad;
    int x, y;
    int pad_lines = LINES + 50;
    int pad_cols = COLS + 50;
    char disp_char = 'a';

    initscr();
    pad = newpad(pad_lines, pad_cols);

    for (y = 0; y < pad_lines; y++) {
        for (x = 0; x < pad_cols; x++) {
            mvwaddch(pad, y, x, disp_char);
        }
    }

    prefresh(pad, 0, 0, 0, 0, LINES - 1, COLS - 1);
    getch();

    delwin(pad);
    endwin();
    return 0;
}
```

---
## Page 200
### Linux程序设计

#### 显示平面刷新函数
```c
int prefresh(WINDOW *pad_ptr, int pad_row, int pad_col,
             int screen_row_min, int screen_col_min,
             int screen_row_max, int screen_col_max);
```
- 作用：将显示平面上从`(pad_row, pad_col)`开始的区域写入屏幕。
- 屏幕显示区由坐标`(screen_row_min, screen_col_min)`和`(screen_row_max, screen_col_max)`定义。

#### CD唱盘管理软件
我们通过以下示例程序来说明如何使用这些函数。

##### 初始化
1. 定义全局变量：
   ```c
   static char current_cd[MAX_STRING] = "\0";
   static char current_cat[MAX_STRING];
   ```
2. 文件名声明：
   ```c
   const char *title_file = "title.cdb";
   const char *tracks_file = "tracks.cdb";
   ```

##### 函数预定义
```c
void clear_all_screen(void);
int get_confirm(void);
void get_return(void);
int getchoice(char *greet, char *choices[]);
void draw_menu(char *options[], int highlight, int start_row, int start_col);
void insert_title(char *cdtitle);
void count_cds(void);
void add_record(void);
void find_cd(void);
void list_tracks(void);
void update_cd(void);
void remove_cd(void);
```

##### 菜单选项
```c
char *main_menu[] = {
    "find CD",
    "add new CD",
    "count CDs and tracks in the catalog",
    "quit"
};

char *extended_menu[] = {
    "find CD",
    "add new CD",
    "count CDs and tracks in the catalog",
    "list tracks on current CD",
    "update track information",
    "remove current CD",
    "quit"
};
```

##### 主函数
```c
int main() {
    int choice;

    initscr();
    while (true) {
        choice = getchoice("options:", main_menu);
        switch (choice) {
            case 'q':
                break;
            case 'a':
                add_record();
                break;
            case 'c':
                count_cds();
                break;
            case 'f':
                find_cd();
                break;
            case 'l':
                list_tracks();
                break;
            case 'r':
                remove_cd();
                break;
            case 'u':
                update_cd();
                break;
        }
        if (choice == 'q') break;
    }
    endwin();
    exit(EXIT_SUCCESS);
}
```

以上是初始化工作。接下来我们将详细分析各个函数的实现。

---

加入Java编程群：524621833