# 总结
> 原文：
SRE 的主要目标之一是提高大规模系统的可靠性。为了做到这一点，对系统内部运作的基本理解是必要的。
了解信号是如何工作的非常重要，因为它们在流程的生命周期中扮演着重要的角色。我们看到信号在一系列流程操作中的使用:从创建流程到终止流程。信号知识非常重要，尤其是在程序中处理它们的时候。如果您预期某个事件会引起信号，您可以定义一个处理函数，并告诉操作系统在特定类型的信号到达时运行它。
在调试任何 Linux 进程时，理解系统调用对 SRE 特别有用。系统调用提供了操作系统内部功能的精确知识。它为程序员提供了对 C 库函数的深入理解，这些库函数在较低的层次上实现系统调用。使用 *strace* 命令，可以轻松调试缓慢或挂起的进程。
# 进一步阅读
[https://www . oreilly . com/library/view/understanding-the-Linux/0596002130/ch01s 06 . html](https://www.oreilly.com/library/view/understanding-the-linux/0596002130/ch01s06.html)
[https://jvns . ca/blog/2021/04/03/what-problems-do-people-solve-with-strace/](https://jvns.ca/blog/2021/04/03/what-problems-do-people-solve-with-strace/)
[https://medium . com/@ akhandmishra/important-system-calls-every-programmer-should-know-8884381 ceadb](https://medium.com/@akhandmishra/important-system-calls-every-programmer-should-know-8884381ceadb)
[https://www . brendang regg . com/blog/2014-05-11/strace-wow-much-syscall . html](https://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html)