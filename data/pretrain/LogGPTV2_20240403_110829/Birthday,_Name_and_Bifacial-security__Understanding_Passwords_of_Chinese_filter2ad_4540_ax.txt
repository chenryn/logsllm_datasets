### 优化后的文本

#### 产生 k 个猜测
与 [36] 类似，具体细节省略。
```python
segmentSet.insert(date)
```

#### 表 6：对原始 PCFG 语法的修改
| 训练集 | 基础结构 | L 段 | D 段 | S 段 |
|--------|----------|------|------|------|
| Duowan 1M | 155693+24416 | 465157+20341 | 865+0 | - |
| Duowan 全部 | 559017+98654 | 1824404+9744 | 2417+0 | 8905+0 |
| - | 20961+0 | - | - | - |

随着猜测次数的增加，成功率逐步提高。例如，在 10^5 次猜测时，成功率提高了 0.09% 至 0.85%；在 10^6 次猜测时，这一数值为 1.32% 至 4.32%；在 10^7 次猜测时，这一数值达到 1.70% 至 4.29%。这表明，使用单调长密码、拼音名字和生日等易受攻击的行为有助于攻击者缩小搜索空间，且在允许大量猜测的情况下，这一问题更为严重。

#### 对比
Li 等人 [34] 报告称，使用 2M Dodonew 密码作为训练集，在 10^10 次猜测时，他们的最佳成功率为 17.30%。然而，针对相同的中文测试集，我们的改进攻击在仅 10^7 次猜测时就能达到更高的成功率（29.41% 至 39.47%）。这意味着我们能破解的密码数量比 Li 等人的最佳记录多出 70% 至 128%。我们的攻击效果更好，原因如下：
1. 我们的训练集（即 Duowan）比 [34] 中使用的 Dodonew 更有效，因为 Duowan 更好地代表了中文密码的分布（见表 2）；
2. 我们不仅通过添加语义词典来优化 PCFG，还通过转换单调长的基础结构来进行优化。

#### 名字的作用
在我们改进的基于 PCFG 的攻击中，外部名字段被添加到 PCFG 的 L 段词典中进行训练，并且我们发现成功率有所提高（见图 4(c)）。然而，这种提升并不如中文密码中名字的普遍性那么显著。为了阐明这一悖论，我们仔细检查了内部情况。

#### 表 8：五种基于马尔可夫的攻击场景
| 攻击场景 | 平滑方法 | 归一化 | 马尔可夫阶数 |
|----------|----------|---------|--------------|
| #1 | Laplace | Laplace | 3/4/5 |
| #2 | Laplace | End-symbol | 3/4/5 |
| #3 | Good-Turing | End-symbol | 3/4/5 |
| #4 | Distribution | End-symbol | 3/4/5 |
| #5 | Backoff | Backoff | 3/4/5 |

#### 图 5：Pinyin-name-segments 在测试集 Tianya 中的覆盖率及其对安全的影响
（Duowan 作为训练集，拼音名字是我们在改进的 PCFG 攻击中的额外输入词典）

### 参考文献
- 第 28 届 USENIX 安全研讨会
- USENIX 协会

---

希望这些优化使文本更加清晰、连贯和专业。如果有任何进一步的需求，请告诉我！