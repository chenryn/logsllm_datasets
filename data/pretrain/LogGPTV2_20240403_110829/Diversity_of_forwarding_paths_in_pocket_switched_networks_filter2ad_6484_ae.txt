3000
4000
Time (s)
(a)
Figure 9: Delay Distributions (a) Infocom 06 9-12 (b) Conext 9-12
x 105
16
14
12
10
8
6
4
2
s
e
g
a
s
s
e
M
f
o
#
0
9 AM
10 AM
Time 
11 AM
Figure 10: Message Reception Times Infocom 9-12
the diﬀerent algorithms show quite similar distributions of
delay as well.
To explore reasons behind the similar performance of the
diﬀerent algorithms, we ﬁrst verify that message delivery is
not ‘bursty’. That is, we conﬁrm that the phenomenon is
not simply due to many nodes all making contact at rel-
atively infrequent times. An example scenario in the con-
ference could be that participants convened at a common
area after a session and it was during this time period that
many packets were delivered. To conﬁrm that this is not
the case, we plot the cumulative totals of in Figure. 10. We
plot the cumulative totals of delivery times of all optimal
and near-optimal paths. As can be seen the delivery rate is
fairly uniform in time. This shows that there are no special
periods of time in which most messages are delivered.
Likewise, the fact that epidemic routing does noticeably
better than the other algorithms means that similarity in
performance among algorithms does not occur because they
are all ﬁnding the same, optimal paths. That is, in many
cases there are better paths to be found than those chosen by
most forwarding algorithms. However algorithms generally
seem to ﬁnd paths that are close to, though not exactly,
optimal.
To understand the remarkably similar performance of the
many diﬀerent forwarding algorithms we examine which
paths are being taken by the diﬀerent algorithms. Some
typical results are shown in Figure 11. Each plot in the ﬁg-
ure corresponds to a particular message (σ, δ, t1). The x axis
measures the time since T1 for this particular message, and
the y axis shows the number of paths that reach the destina-
tion over time. Furthermore, for each algorithm, its symbol
is superimposed on the bar corresponding to the path chosen
by the algorithm.
The two cases in the ﬁgure show the typical path explo-
sion phenomenon — the number of paths arriving at the
destination grows approximately exponentially with time.
Furthermore, the plots show that the paths used by all the
forwarding algorithms reach the destination early in the path
explosion process.
For example, the left hand plot shows that for this par-
ticular message, FRESH and Greedy are able to ﬁnd paths
arriving at time T1 (i.e., optimal paths) while Greedy On-
line and Greedy Total ﬁnd paths arriving in the next burst,
20 sec after T1. Finally Dynamic Programming ﬁnds a path
arriving in the third burst at 90 seconds after T1. The situ-
ation is similar for the case of the message in the right hand
plot.
This ﬁgure suggests that diﬀerent algorithms may have
similar (though non-optimal) performance because of the
large number of paths that reach the destination shortly af-
ter T1. When there are a large number of nearly-optimal
paths, a forwarding algorithm may be able to ﬁnd one of
those paths relatively easily. That is, the existence of path
explosion may be a factor that allows many algorithms to
achieve somewhat similar performance.
If this hypothesis is correct, then the performance of for-
warding algorithms should be strongly inﬂuenced by the way
in which path explosion occurs. In Section 5.2 we found that
path explosion occurs in diﬀerent ways for diﬀerent types of
source-destination pairs, i.e., in-in, in-out, out-in, and out-
out. Here we can put that insight to use.
If the path explosion eﬀect is a major reason why diﬀerent
forwarding algorithms have similar performance, then algo-
rithm performance should be fairly similar within pair types
and quite diﬀerent between pair types. For example, algo-
rithm performance should be similar across all in-in pairs,
but performance on in-in pairs should be quite diﬀerent from
that on in-out pairs.
s
h
t
a
P
f
o
m
u
N
2000
1800
1600
1400
1200
1000
800
600
400
200
0
Paths
Fresh
Greedy Onl
Grd Tot
Greedy
Dynamic Programming
0
20
Path Arrival Time (s) 
90
(a)
s
h
t
a
P
f
o
m
u
N
900
800
700
600
500
400
300
200
100
0
Paths
Fresh
Greedy Onl
Grd Tot
Greedy
Dynamic Programming
0
20
90100
60 70
Path Arrival Time (s) 
180
(b)
Figure 11: Paths taken by forwarding algorithms for two messages in Infocom ’06 9-12 (a) Msg 88-82 (b)
Msg 86-26
To see whether this is the case, we separate our simulation
results by pair type. The results are shown in Figure 12. The
ﬁgure shows the average delay and success rate across the
four pair types for each of the six forwarding algorithms.
The ﬁgure shows that success and delay depend primarily
on the type of the source-destination pair as opposed to the
type of algorithms used. All forwarding algorithms, with the
exception of epidemic, again show similar performance.
However the ﬁgure also shows that, once messages are bro-
ken down by pair type, diﬀerences between forwarding algo-
rithms start to emerge. In particular, we note a diﬀerence
for algorithms making use of maximum information about
contact patterns – i.e., Greedy Total and Dynamic Program-
ming, which use both past and future information. These
algorithms outperform others, but only in the case where one
node is an ‘out’ node. That is, in the case where both nodes
are ‘in’ nodes, then information about contact patterns is
not particularly helpful. However, when one or both nodes
are ‘out’ nodes, then maximum information about contact
patterns is helpful.
Digging deeper, we see that Greedy Total performs partic-
ularly well when the source node is an ‘out’ node. Recalling
the discussion in Section 5.2, when a source node has low
rate λσ, then rapid path explosion does not occur until the
message has been moved to a high rate node with λi > λσ.
This is consistent with the strategy of Greedy Total. Note
that Greedy Total is a destination-unaware strategy — it
only seeks to move the message toward nodes with higher
contact rates, i.e., those with λi > λσ.
These results suggest some heuristics for eﬀective forward-
ing in settings like pocket switched networks. In particular,
they suggest that a forwarding algorithm will be successful
if it causes path explosion to take place as quickly as pos-
sible. This is a somewhat diﬀerent principle for forwarding
than has typically been used in past proposals. That is,
rather than seeking to ﬁnd a short path to the destination
directly, a forwarding algorithm may instead work to cause
path explosion to occur as quickly as possible. This suggests
forwarding toward high rate nodes preferentially, regardless
of their relationship to the destination.
The picture that emerges from the results in this paper
gives a better view of the nature of node mobility, contact
patterns, and forwarding performance in a conference type
setting. In broad terms, the picture is as follows. Connec-
tion patterns between nodes lead to an exponential path
explosion eﬀect whose rate depends on the contact rates of
nodes. Since contact rate varies considerably across nodes,
path explosion occurs much faster among the higher rate
nodes than the lower rate nodes. In this setting successful
forwarding relies on moving the message toward high con-
tact rate nodes so that path explosion can occur quickly.
Once path explosion occurs among high contact rate nodes,
contact between one of them and the destination leads to
message delivery.
7. CONCLUSION
Forwarding in pocket switched networks is challenging be-
cause of the irregular and unpredictable contact patterns
between nodes.
In order to understand the nature of the
forwarding problem, this paper has taken the novel ap-
proach of enumerating and characterizing the set of forward-
ing paths that are available in such settings. More speciﬁ-
cally we study the setting where there is high node and con-
tact density and movement is in a restricted physical space.
Our main result is the observation that for most messages
there is a path explosion eﬀect, meaning that while the op-
timal path may be long, there are usually a large number
of nearly-optimal paths to the destination. We support this
result both analytically and empirically. We present a sim-
ple model of homogeneous inter-node contact and show that
path explosion is to be expected in that case. And we show
empirically that path explosion does occur in our data, al-
though in a more complicated manner due to varying contact
rates across nodes. Our empirical results focus attention on
the diﬀerence between high contact rate (‘in’) nodes and low
contact rate (‘out’) nodes.
These results help us understand why diﬀerent forwarding
algorithms show quite similar performance. As a result of
path explosion, diﬀerent forwarding algorithms often ﬁnd
paths to the destination of nearly-equal duration.
Our study leaves open a number of important questions.
Our understanding of the inhomogeneous case is not as pre-
cise as that of the homogeneous case; more sophisticated an-
)
s
(
s
y
a
e
D
l
.
g
v
A
2500
2000
1500
1000
500
0
Epidemic
Fresh
Greedy
Greedy Total
Greedy Online
Dynamic Programming
in−in
in−out
out−in
out−out
(a)
e
t
a
R
s
s
e
c
c
u
S
.
g
v
A
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
Epidemic
Fresh
Greedy
Greedy Total
Greedy Online
Dynamic Programming
in−in
in−out
out−in
out−out
(b)
Figure 12: Performance of Forwarding Algorithms on Diﬀerent Types of Source-Destination Pairs: (a) Av-
erage Delay (b) Success Rate.
alytic models would be useful in that regard. Furthermore,
we have not considered the cost of forwarding, and so there
may be good reasons to prefer one algorithm over another
even if they show similar performance. It is possible that an
understanding of the path explosion phenomenon may help
in understanding the relative costs of diﬀerent forwarding
algorithms.
Acknowledgments
The authors thank members of Web and Internetworking
Group (WING) at Boston University for valuable feedback
on early stages of this work, and Mostafa Ammar for helpful
conversations at Thomson Paris during summer 2006. We
would also like to thank Laurent Massouli`e for helpful advice
on the analytical section. This work was supported by NSF
grants CCR-0325701 and ANI-0322990, and by funding from
the HAGGLE FET project.
8. REFERENCES
[1] V. Borrel, M. D. de Amorim, and S. Fdida. A
preferential attachment gathering mobility model.
IEEE Communications Letters, 9(10):900–902, 2005.
[2] T. Camp, J. Boleng, and V. Davies. A survey of
mobility models for ad hoc network research. WCMC:
Special issue on Mobile Ad Hoc Networking: Research,
Trends and Applications, 2(5):483–502, 2002.
[3] A. Chaintreau, P. Hui, J. Crowcroft, C. Diot, R. Gass,
and J. Scott. Pocket Switched Networks: Real-world
mobility and its consequences for Opportunistic
Forwarding. Technical Report UCAM-CL-TR-617,
University of Cambridge, 2005.
[4] A. Chaintreau, P. Hui, J. Scott, R. Gass, J. Crowcroft,
and C. Diot. Impact of human mobility on the
performance of opportunistic forwarding algorithms.
In Proceedings of IEEE INFOCOM, 2006.
[5] V. Conan, J. Leguay, and T. Friedman. The
heterogeneity of inter-contact time distributions: its
importance for routing in delay tolerant networks.
ArXiv Computer Science e-prints, Sept. 2006.
[6] H. Dubois-Ferriere, M. Grossglauser, and M. Vetterli.
Age matters: eﬃcient route discovery in mobile ad hoc
networks using encounter ages. In ACM MobiHoc ’03,
pages 257–266, 2003.
[7] M. Grossglauser and D. N. C. Tse. Mobility increases
the capacity of ad hoc wireless networks. IEEE/ACM
Trans. Netw., 10(4):477–486, 2002.
[8] M. Grossglauser and M. Vetterli. Locating mobile
nodes with ease: learning eﬃcient routes from
encounter histories alone. IEEE/ACM Trans. Netw.,
14(3):457–469, 2006.
[9] P. Hui, A. Chaintreau, J. Scott, R. Gass, J. Crowcroft,
and C. Diot. Pocket switched networks and human
mobility in conference environments. In WDTN ’05.
[10] S. Jain, K. Fall, and R. Patra. Routing in a Delay
Tolerant Network. In ACM SIGCOMM ’04.
[11] E. P. C. Jones, L. Li, and P. A. S. Ward. Practical
routing in delay-tolerant networks. In WDTN ’05.
[12] T. G. Kurtz. Limit theorems for sequence of jump
markov processes approximating ordinary diﬀerential
processes. Journal of Applied Probability, pages
344–356, 1971.
[13] A. Lindgren, A. Doria, and O. Schelen. Probabilistic
routing in intermittently connected networks.
SIGMOBILE Mob. Comput. Commun. Rev.,
7(3):19–20, 2003.
[14] S. Merugu, M. Ammar, and E. Zegura. Routing in
space and time in networks with predictable mobility.
Technical Report GIT-CC-04-7, Georgia Institute of
Technology, 2004.
[15] M. Musolesi and C. Mascolo. A community based
mobility model for ad hoc network research. In
REALMAN ’06, pages 31–38, 2006.
[16] E. Nordstrom, C. Diot, R. Gass, and P. Gunningberg.
Experiences from measuring human mobility using
bluetooth inquiring devices. In MobiEval 2007: System
Evaluation for Mobile Platforms, 2007.
[17] T. Spyropoulos, K. Psounis, and C. Raghavendra.
Single-copy routing in intermittently connected mobile
networks. In IEEE SECON ’04, pages 145–158, 2004.
[18] T. Spyropoulos, K. Psounis, and C. S. Raghavendra.
Spray and wait: an eﬃcient routing scheme for
intermittently connected mobile networks. In ACM
WDTN ’05, pages 252–259, 2005.
[19] A. Vahdat and D. Becker. Epidemic routing for
partially connected ad hoc networks. Technical Report
CS-200006, Duke University, 2000.
[20] X. Zhang, G. Neglia, J. Kurose, and D. Towsley.
Performance modeling of epidemic routing. In
Proceedings of IFIP Networking, 2006.