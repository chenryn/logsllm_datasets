## 1. 环境分析
- **操作系统**: Windows XP SP3
- **软件**: Microsoft Office 2003

## 2. 基本信息
- **漏洞类型**: 栈溢出
- **影响范围**:
  - Microsoft Office XP SP3
  - Office 2003 SP3
  - Office 2007 SP2
  - Office 2010
  - Office 2004 and 2008 for Mac
  - Office for Mac 2011

## 3. 样本分析
- **样本MD5**: f5da6e333729a9809e3c0abaff619665
- **样本名称**: 过程论的观点分析六方会谈 审查意见.doc

### 分析过程
在不知道CVE编号的情况下，我们首先通过行为来分析样本。我们发现该样本在临时文件夹中释放了一个PE文件，并执行了该文件。

#### 1. 执行程序断点
- 在执行程序时设置断点。
- 第一个参数为执行的文件路径，返回地址是栈地址。
- 返回到该地址后，可以看到执行的shellcode，表明这是一个栈溢出。

#### 2. Shellcode分析
- 我们顺着shellcode向上查看，发现了三个`909090`（nop指令）。
- 反编译该地址，发现这是shellcode的开头，下面是获取PEB地址的代码。
- 栈溢出覆盖了这个地址以下的内容，我们在附近寻找返回地址。

#### 3. 返回地址定位
- 向上查找，找到几个返回地址并在这些地址下断点。
- 成功中断在mso模块的`3107f609`处，开始定位栈溢出地址。
- 发现mso模块中的某个函数返回后执行了经典的`jmp esp`来执行shellcode。

#### 4. IDA Pro分析
- 将mso模块加载到IDA Pro中，详细查看问题所在。
- 动态调试发现，执行该函数返回时跳转到`jmp esp`。
- 关注函数`30F4cc5d`，在其返回地址下设置内存写断点，以确定哪句代码导致返回地址被覆盖。

#### 5. 拷贝操作分析
- 最终定位到拷贝操作导致返回地址被覆盖。
- 控制复制长度的是`ecx`寄存器，通过分析发现`ecx`值对应文档中的特定位置。
- 文档中该位置之后是经典的跳转地址和shellcode。
- 栈地址开辟的大小只有14h字节。

#### 6. 利用分析
- 攻击样本未考虑ASLR和DEP等保护机制，直接使用XP下的经典跳转地址`7ffa4512`将EIP控制为ESP，从而执行shellcode。
- 具体的shellcode内容在此不进行深入分析，感兴趣的读者可以自行研究。

## 总结
该漏洞是一个简单的栈溢出，利用方法也比较简单。由于其易于控制，成为许多APT组织常用的攻击手段，在各类攻击中频繁出现。