User: I'm working on TCP client-server application using the IntNReceiver protocol. Server is accepting multiple TCP connections from client. I would like to let other threads use the protocol's sendString method, on both client and the server. I tried to use synchronized queue, monitored in separate thread and reactor.callFromThread() to call the sendString from there. This seems to work but there is a weird delay of about 20 seconds before the actual sendString actually sends the string. It does not block, returns immediately. I ran strace and the send() system call is definitely delayed. What is the proper way to do this kind of thing with twisted?
Assistant: Just use callFromThread directly as your queue.  The reactor is already synchronizing on and monitoring it.  Anywhere you want to call foo.sendString() from a non-reactor thread, just do reactor.callFromThread(foo.sendString).  Building additional infrastructure to do this (your own custom synchronized queues, for example) is just additional code that might break â€“ as you have already discovered.