 0.05
 0
0
y
c
n
e
u
q
e
r
F
 350
 300
 250
 200
 150
 100
 50
 0
 0
Prob(F(x) = f)
s = 100
s = 200
s = 300
0.5
1
1.5
2
Free Area: f
 50
 100
 150
 200
 250
 300
 350
number of searches required
Figure 5: Distribution of free area, Pr(F (x) = f ),
and conditional probability of arrival order given
free area, Pr(Ax  1
The average speedup factor compare to the brute-force at-
tacker can be estimated in the following ways. Consider a
sample point set R = {x1, x2, . . . , xm}. We can compute
the likelihood of the actual minutiae X. Recall that we esti-
mate the likelihood of the set X byx∈X LookUp(x). Also
recall that our attacker sends the candidates to the blackbox
in the order of decreasing likelihood. Thus, the number of
blackbox calls required to hit X is same as the number of
Figure 7: Histogram of number of calls made by our
attacker. Number of Bins= 100, Bin Size= 2.97
candidates whose likelihood is larger than that of X.
the
consider
set L = {log(LookUp(x1)), . . . ,
Now,
log(LookUp(xm))}. By Central Limit Theorem, the distri-
bution of the sum of s randomly chosen numbers from L
can be approximated by a normal distribution, whose mean
and variance can be derived from the mean and variance of
L. From this normal distribution, we can estimate the pro-
portion of subsets of R whose likelihood is larger than that
of X. Assuming that the candidates are randomly located
among all subsets of R, we can obtain the speedup factor
provided by the attacker.
y
c
n
e
u
q
e
r
F
 350
 300
 250
 200
 150
 100
 50
 0
-1
Speedup Factor(likehood)
Speedup Factor(idendity function)
 0
 1
 2
 3
 4
 5
 6
 7
 8
log10 ( Speedup Factor )
Figure 8: Comparison on speedup factor, n = 20.7.
Figure 8 shows the histogram of the speedup factor, when
s = 38 and expected number of points in R is 312.6. The
average speedup for the 10000 samples is 77.5, and the geo-
metric mean is 18.0. It also shows the result for the same
s, but using a diﬀerent LookUp. Here, we simply choose the
identity function as the lookup function. Interestingly, the
average improves to 2192.7, and the geometric mean reduces
to 13.88. Observe that for some samples, the speedup fac-
tor reaches 105. This is undesirable in security applications
because it indicates that, with some probability, small but

noticeable, the attack can be very successful.
4.5 Entropy loss
We want to estimate the min-entropy of the minutiae X
given the white noise sketch R, that is, H∞(X|R). Note
that each sample R is a randomly chosen white noise sketch.
Using the approximation in (4), the set {x1, x2, . . . , xs} that
maximizes the conditional probability Pr(X = {x1, . . . ,
xs}|R) is the set with s largest looked-up value. Hence, for a
sample R, we can obtain maxa Pr(X = a|R). By averaging
over all samples, we have a lower bound of min-entropy of
X given the white noise sketch. When s = 38 and n = 20.7,
the min-entropy is at most 61.2 bits.
In other words, by
making the white noise sketch public, the min-entropy of
the minutiae is reduced to at most 61.2.
The above estimate does not consider the replacement sketch.
The entropy loss of many set-diﬀerence schemes is known.
For example, if we employ the scheme by Juels et al. [7], and
the replacement noise is t = 3, then the entropy loss due to
the replacement sketch is at least 2t log2 |R| < 49.72. As an
approximation, let us assume that the replacement sketch is
generated independently from the white noise sketch. Then,
the min-entropy given the sketch PX is at most 61.2 −
49.72 = 11.48.
Figure 9: Conditional probability whereby the on-
line parking generates ﬁxed number of chaﬀ points.
The ﬁgure shows Pr(Ax < s|F (x) = f ) where m, the
number of chaﬀ points, is 250, 200,or 150, and s = 38.
The domain is [0, n] × [0, n], where n is 20.7.
4.6 Online Parking with Fixed Number of Chaff
Points
In previous sections, we employ the ﬁrst stopping condition
for online parking process (that is, the process stops when
it is impossible to add any more chaﬀ points).
It would
be interesting to investigate the second stopping condition
that stops at a ﬁxed number of chaﬀ points. We conduct
experiment with m = 250, 200, and 150, where m is the total
number of chaﬀ points. The result is illustrated in Figure 9.
Observe that the conditional probability is still increasing
although for smaller m, it increases more gradually.

5. CONCLUSION
A known sketch scheme for ﬁngerprint templates hides the
minutiae by adding random chaﬀ points. The chaﬀ gen-
eration is essentially the online parking process where ran-
dom points are selected one-by-one. The chaﬀ points are
randomly selected and thus seems impossible to be distin-
guished from the minutiae. However, since the selection of
a new point depends on the location of the previously se-
lected points, the online process is not memoryless. Hence,
statistical properties of the points that arrive early may be
diﬀerent from the latecomers. We observed that the late-
comers tend to have more nearby points. The observation is
formulated using free area, and we conjecture that the late-
comers are more likely to have smaller free area (inequality
(3)). This leads to the use of free area in distinguishing the
minutiae from the chaﬀ points.
6. REFERENCES
[1] Fvc2004 databases.
http://biometrics.cse.msu.edu/fvc04db/index.html .
[2] Boyen, X. Reusable cryptographic fuzzy extractors.
In 11th ACM conf. on Computer and Communications
Security (2004), pp. 82–91.
[3] Chang, E.-C., and Li, Q. Small secure sketch for
point-set diﬀerence. Cryptology ePrint Archive, Report
2005/145 (2005).
[4] Clancy, T. C., Kiyavash, N., and Lin, D. J.
Secure smartcardbased ﬁngerprint authentication. In
ACM SIGMM workshop on Biometrics methods and
applications (2003), pp. 45–52.
[5] Dodis, Y., Reyzin, L., and Smith, A. Fuzzy
extractors: How to generate strong keys from
biometrics and other noisy data. In Eurocrypt’04
(2004), pp. 523–540.
[6] Jr., E. C., Flatto, L., and Jelenkovi´c, P.
Interval packing: the vacant interval distribution. The
Annals of Applied Probability 10, 1 (2000), 240–257.
[7] Juels, A., and Sudan, M. A fuzzy vault scheme. In
[8] Juels, A., and Wattenberg, M. A fuzzy
commitment scheme. In ACM Conf. on Computer and
Communications Security (1999), pp. 28–36.
[9] Linnartz, J.-P. M. G., and Tuyls, P. New
shielding functions to enhance privacy and prevent
misuse of biometric templates. In AVBPA 2003
(2003), pp. 393–402.
[10] Maltoni, D., Maio, D., Jain, A. K., and
Prabhakar, S. Handbook of Fingerprint Recognition.
Springer-Verlag, 2003.
[11] Palasti, I. On some random space ﬁlling problems.
Publ. Math. Inst. Hung. Acad. Sci. 5 (1960), 353–359.
[12] Rnyi, A. On a one-dimensional problem concerning
random space-ﬁlling. Publ. Math. Inst. Hung. Acad.
Sci. 3 (1958), 109–127.
[13] S. Yang, I. V. Secure fuzzy vault based ﬁngerprint
veriﬁcation system. In 38th Asilomar Conf. on Signals,
Systems, and Computers (2004), vol. 1, pp. 577– 581.
 0.3
 0.25
 0.2
 0.15
 0.1
y
t
i
l
i
b
a
b
o
r
P
l
a
n
o
i
t
i
d
n
o
C
 0
 50
 100
 150
 200
Free Area: f
m = 250
m = 200
m = 150
 250
 300
 350
IEEE Intl. Symp. on Information Theory (2002).