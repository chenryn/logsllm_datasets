# 10. 数据存储的合理性：金融业务可以不用关系型数据库吗？

你好，我是任杰。这节课我们来探讨金融业务在选择数据存储类型时应考虑的因素。

提到金融行业的数据存储，许多人首先想到的是使用关系型数据库。然而，如果追问为什么一定要用关系型数据库，很多人可能难以给出明确答案。实际上，金融行业可以选择多种数据存储方案。今天，我们将一起探讨这些选项，并分析它们各自的特点和适用场景。

## 数据分类

不同的数据对存储和使用有不同的要求。因此，在选择数据存储类型之前，我们需要先分析数据的特点。通常，根据数据之间的关系复杂度，我们可以将数据分为以下几类：

1. **无关联的数据**：如市场数据，这类数据之间没有直接联系。
2. **树状结构数据**：数据之间存在单向关系，形成一个树状结构。
3. **图数据**：数据之间存在复杂的网状关系，也称为图数据类型。

虽然这些数据类型在金融系统中都存在，但它们的重要性和出现频率不同，因此在选择存储方案时需要综合考虑。

### 图数据库

顾名思义，图数据库用于存储图数据，并支持图查询，例如相邻关系查询或连通关系查询。尽管金融行业较少使用图数据（因为金融数据通常具有清晰的结构），但在某些特定领域，如客户背景调查（KYC）和反洗钱（AML）分析中，图数据库仍然有用武之地。这些场景下，通过图数据可以更好地表示和分析客户的社交网络和财务状况。

### 时序数据库

金融市场数据通常带有时间戳。例如，大盘、汇率、指数等数据都是指某个特定时间点的数据。这种带有时间戳的数据更适合使用时序数据库进行存储。时序数据库采用列存储方式，而关系型数据库则通常采用行存储方式。列存储方式在处理大量时间序列数据时，特别是在查询和计算方面，具有明显的优势。

#### 列存储与行存储

- **行存储**：关系型数据库将每行作为一个整体存储，适用于需要频繁读取整行数据的场景。
- **列存储**：时序数据库将每列作为一个整体存储，适用于需要频繁读取某一列数据的场景。例如，计算多个时间点的平均买入价格时，只需加载相关列的数据即可，从而提高查询效率。

### KDB简介

KDB是一种专为金融行业设计的高性能数据库，它不仅支持列存储，还拥有自己的编程语言Q和K。KDB特别适用于GB到TB级别的数据量，并且在IO和CPU性能上表现出色。然而，KDB的学习门槛较高，且价格昂贵，主要应用于顶级金融机构。

### 双时序数据库

双时序数据库主要用于处理交易量较小的场外交易业务，如债券、期货等。由于其多时间维度的特点，不适合高吞吐量业务。双时序数据库通常由大型金融机构自主研发，是其核心竞争力之一。

### 关系型数据库

关系型数据库在金融行业中广泛使用，尤其是在处理结构化数据时。然而，面向对象编程与关系型数据库之间存在天然的矛盾，即“对象关系阻抗不匹配”。这一问题源于两者在数据模型上的差异：面向对象编程基于图论，而关系型数据库基于集合论。NewSQL试图解决这一问题，但其分布式架构带来了新的挑战，如最终一致性和二级索引一致性问题。

## 小结

在这节课中，我们讨论了金融业务如何选择合适的数据存储类型。根据数据的关系复杂度，我们可以将金融数据分为图数据、无关联数据和树状数据，分别对应图数据库、时序数据库和关系型数据库。对于金融市场数据，时序数据库因其高效的列存储方式而更具优势。KDB作为一种高性能的列存储数据库，特别适用于对计算速度有极高要求的场景。双时序数据库则适合交易量较小的场外交易业务。最后，关系型数据库虽然在处理结构化数据方面表现出色，但与面向对象编程之间存在一定的矛盾，需要通过NewSQL等技术加以解决。

希望这节课对你有所帮助。欢迎你在留言区分享你的想法，或转发给朋友和同事共同学习进步。