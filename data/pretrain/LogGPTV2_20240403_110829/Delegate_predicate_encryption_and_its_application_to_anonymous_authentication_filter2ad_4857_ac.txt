{1, . . . , w − 1}. Generally speaking, each time the algorithm performs
(cid:4)
some computations on two of the ˆDLv components to obtain a DL
(cid:4) will consists of w − 1 components. For
component. The resulting DL
(cid:4)
1, then choose ˆDL2 and
example, choose ˆDL1 and ˆDL2 to compute DL
(cid:4)
ˆDL3 to compute DL
w−1,
choose ˆDLw−1 and ˆDL1.
(cid:4)
2, etc. To compute the last component DL
(cid:4), where W
(cid:4). DL
i=1
238
D. Sun, C. Boyd, and J.M. Gonz´alez Nieto
Now we describe how to compute on two of ˆDLv components to obtain
(cid:4) component. Assume two components are ˆDL1 and ˆDL2. First
a DL
perform a circular shift on ˆDL1:
(cid:4)
1,1,1 = ˆL1,n,1, pL
(cid:4)
2,1,1 = ˆL2,n,1
(cid:9)
(cid:10)
(cid:4)
1 = ˆL1, pL
pL
{pL
(cid:4)
1,i,1 = ˆL1,i−1,1, pL
2,i,1 = ˆL2,i−1,1}n
(cid:4)
i=2
pDL
(cid:4)
1 =
Next, choose random Y
element in ˆDL2 to −ˆx and output the following DL
, Y
(cid:4)
1:
(cid:4)(cid:4)
(cid:4)(cid:4)
1,i, Y
2,i ∈ Gs for i = 1 to n, then raise every
(cid:4)(cid:4)
(cid:4)
1 =
DL
(cid:9)
−ˆx
(cid:4)
1 = ˆL
L
{L
2
(cid:4)
1,i,1 = ˆL
· pL
−ˆx
1,i,2
(cid:4)
1
· Y
(cid:4)(cid:4)
· pL
(cid:4)
1,i,1
· Y
(cid:4)(cid:4)
1,i, L
In this way, we will be able to compute DL
(cid:4)
2,i,1 = ˆL
−ˆx
2,i,2
· pL
v for all v ∈ W
(cid:4)
(cid:4)
2,i,1
(cid:4).
(cid:10)
· Y
2,i}n
(cid:4)(cid:4)
i=1
NB: If there is only one delegatable ﬁeld in X, we have one delegation com-
ponent DL1. In Step 1 – 3, we use DL1 to randomize DK and DL1, all
other computations are the same.
Query(SKX , C). Given a ciphertext and a secret key for X, where X ∈ Ωl
?,
compute the following:
(cid:4) · e(C0, K) · n(cid:11)
C
i=1
e(C1,i, K1,i)e(C2,i, K2,i)
It returns M, if M ∈ M. Otherwise, it returns an error.
Correctness. To verify that the correctness holds for the scheme, we ﬁrst show
that the secret keys obtained by Delegate algorithm have the same structures
as those created directly by GenKey algorithm. We focus on the decryption key
component and the delegation component, respectively. The notation is the same
as in the scheme. In the decryption components DK, for i = 1 to n, the substi-
tutions:
1,i = μ · r1,i,w + r1,i, r
(cid:4)
1 = μ · f1 + f1,
(cid:4)
f
2,i = μ · r2,i,w + r2,i
(cid:4)
2 = μ · f2 + f2
(cid:4)
r
f
can be rewritten in the Delegate algorithm as
(cid:9)
(cid:4)
=
DK
(cid:4)
5
(cid:4) = R
(cid:4)
1,i = g
K
{K
· Q
r(cid:2)
1,i
p
−r(cid:2)
−r(cid:2)
−γ · (cid:2)n
· h
· h
(cid:4)
1,i
2,i
i=1 h
6
2
1
r(cid:2)
1·a(cid:2)
· g
· Y
f(cid:2)
(cid:4)
(cid:4)
2,i
2,i = g
1,i, K
p
q
· Y
(cid:4)
,
2·a(cid:2)
· g
f(cid:2)
q
i
i
(cid:10)
· Y
2,i}n
(cid:4)
i=1
(cid:4)
i, for i = 1 to n, are coeﬃcients of polynomial after the delegating
where a
operations. It is not hard to see that the decryption key component is correctly
distributed. Similarly, it can be shown that the delegation component DL is also
correctly distributed. Hence, we establish that the secret keys computed from
GenKey and Delegate have the correct distributions.
Delegation in Predicate Encryption Supporting Disjunctive Queries
239
Now we need to prove that the scheme is consistent with respect to the En-
crypt, GenKey, Delegate and Query algorithms. Since we have already proven that
the secret keys produced by GenKey and Delegate have the correct distributions,
we will only consider GenKey for consistency. The rest of the proof is exactly the
same argument shown in the work of Katz et al [4]. We omit it in here.
5 Proof of Security
Theorem 1. If G satisﬁes the composite 3-party Diﬃe-Hellman assumption, as-
sumption 1 and 2, then the delegatable predicate encryption scheme is selectively
secure.
Our scheme is secure against adversaries, who are not allowed to perform delega-
tion computation. In our security games, the adversaries can only request secret
keys for full attribute vectors, in which there are no delegatable ﬁelds. The secret
keys can be computed from either the GenKey or the Delegate algorithm. We note
that delegated secret keys have some correlations with their parent secret keys.
As a result, the distributions of delegated keys diﬀer from freshly generated keys.
Our proof is inspired by the technique used in Shi and Waters’ work [2], which
is called “key indistinguishability”. Although delegated keys have correlations
with their parent keys, they are computationally indistinguishable from freshly
generated keys computed by the GenKey algorithm. This is a crucial step in our
proof and simpliﬁes our simulation. Now, instead of answering the adversary’s
query honestly, the simulator can give a freshly generated key to the adversary
whenever the adversary makes a fresh key query or a delegated key query. Intu-
itively, the notion of “key indistinguishability” relies on the C3DH assumption:
if we use a random hiding factor from Gr to randomize each term in the key,
then Decisional Diﬃe-Hellman problem is hard in the subgroup Gp.
After “key indistinguishability” is established, the rest of the proof will be
very similar to the proof in Katz’s work [4]. It is not hard to see that by “key
indistinguishability”, we eﬀectively reduce our security game to Katz’s original
game, because the delegation key queries are treated as fresh key queries. We
provide a proof in the full version of this paper.
6 Conclusion
In this paper, we study delegation techniques in predicate encryption systems,
which support disjunctive predicate evaluation. We ﬁrst provide security deﬁni-
tions for delegatable predicate encryption and then give a delegatable scheme
in the public-key setting supporting disjunctive predicate evaluation. In the fu-
ture, we will focus on delegatable predicate encryption supporting disjunctive
and conjunctive normal form. Our aim is to ﬁnd a delegatable system which can
support arbitrary combinations of disjunctive and conjunctive predicate evalua-
tions. The ultimate goal is to achieve delegation in all predicate systems.
240
D. Sun, C. Boyd, and J.M. Gonz´alez Nieto
References
1. Shi, E., Bethencourt, J., Chan, H.T., Song, D., Perrig, A.: Multi-Dimensional
Range Query over Encrypted Data. In: IEEE Symposium on Security and Pri-
vacy, pp. 350–364. IEEE Press, Los Alamitos (2007)
2. Shi, E., Waters, B.: Delegating Capability in Predicate Encryption Systems. In:
Aceto, L., Damg˚ard, I., Goldberg, L.A., Halld´orsson, M.M., Ing´olfsd´ottir, A.,
Walukiewicz, I. (eds.) ICALP 2008, Part II. LNCS, vol. 5126, pp. 560–578. Springer,
Heidelberg (2008)
3. Boneh, D., Waters, B.: Conjunctive, Subset, and Range Queries on Encrypted
Data. In: Vadhan, S.P. (ed.) TCC 2007. LNCS, vol. 4392, pp. 535–554. Springer,
Heidelberg (2007)
4. Katz, J., Sahai, A., Waters, B.: Predicate Encryption Supporting Disjunctions,
Polynomial Equations, and Inner Products. In: Smart, N.P. (ed.) EUROCRYPT
2008. LNCS, vol. 4965, pp. 146–162. Springer, Heidelberg (2008)
5. Shen, E., Shi, E., Waters, B.: Predicate Privacy in Encryption Systems. In: Rein-
gold, O. (ed.) TCC 2009. LNCS, vol. 5444, pp. 457–473. Springer, Heidelberg
(2009)
6. Shamir, A.: Identity-Based Cryptosystems and Signature Schemes. In: Blakely,
G.R., Chaum, D. (eds.) CRYPTO 1984. LNCS, vol. 196, pp. 47–53. Springer,
Heidelberg (1985)
7. Boneh, D., Franklin, M.: Identity-Based Encryption From the Weil Pairing. In:
Kilian, J. (ed.) CRYPTO 2001. LNCS, vol. 2139, pp. 213–229. Springer, Heidelberg
(2001)
8. Waters, B.: Eﬃcient Identity-Based Encryption Without Random Oracles. In:
Cramer, R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494, pp. 114–127. Springer,
Heidelberg (2005)
9. Boneh, D., Boyen, X.: Eﬃcient Selective-ID Secure Identity Based Encryption
Without Random Oracles. In: Cachin, C., Camenisch, J.L. (eds.) EUROCRYPT
2004. LNCS, vol. 3027, pp. 223–238. Springer, Heidelberg (2004)
10. Gentry, C.: Practical Identity-Based Encryption Without Random Oracles. In:
Vaudenay, S. (ed.) EUROCRYPT 2006. LNCS, vol. 4004, pp. 445–464. Springer,
Heidelberg (2006)
11. Goyal, V., Pandey, O., Sahai, A., Waters, B.: Attribute-Based Encryption for Fine-
grained Access Control of Encrypted Data. In: ACM Conference on Computer and
Communication Security 2006, pp. 89–98. ACM, New York (2006)
12. Bethencourt, J., Sahai, A., Waters, B.: Ciphertext-Policy Attribute-Based Encryp-
tion. In: 2007 IEEE Symposium on Security and Privacy, pp. 321–334. IEEE Press,
Los Alamitos (2007)
13. Sahai, A., Waters, B.: Fuzzy Identity-Based Encryption. In: Cramer, R. (ed.)
EUROCRYPT 2005. LNCS, vol. 3494, pp. 457–473. Springer, Heidelberg (2005)
14. Horwitz, J., Lynn, B.: Towards Hierarchical Identity-Based Encryption. In:
Knudsen, L.R. (ed.) EUROCRYPT 2002. LNCS, vol. 2332, pp. 466–481. Springer,
Heidelberg (2002)
15. Boyen, X., Waters, B.: Anonymous Hierarchical Identity-Based Encryption (With-
out Random Oracles). In: Dwork, C. (ed.) CRYPTO 2006. LNCS, vol. 4117, pp.
290–307. Springer, Heidelberg (2006)
16. Boneh, D., Boyen, X., Goh, E.: Hierarchical Identity Based Encryption with Con-
stant Size Ciphertext. In: Cramer, R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494,
pp. 440–456. Springer, Heidelberg (2005)