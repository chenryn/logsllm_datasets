### 优化后的文本

#### 算法描述
给定集合 \(\{1, \ldots, w-1\}\)，每次算法从 \(\hat{DL}_v\) 的两个分量中进行计算，以获得一个 \(DL\) 分量。最终的 \(DL\) 将包含 \(w-1\) 个分量。例如，选择 \(\hat{DL}_1\) 和 \(\hat{DL}_2\) 来计算 \(DL_1\)，然后选择 \(\hat{DL}_2\) 和 \(\hat{DL}_3\) 来计算 \(DL_2\)，依此类推。为了计算最后一个分量 \(DL_{w-1}\)，选择 \(\hat{DL}_{w-1}\) 和 \(\hat{DL}_1\)。

#### 计算过程
现在我们详细说明如何通过 \(\hat{DL}_v\) 的两个分量来获得一个 \(DL\) 分量。假设这两个分量是 \(\hat{DL}_1\) 和 \(\hat{DL}_2\)。首先对 \(\hat{DL}_1\) 进行循环移位：
\[
\begin{aligned}
pL_{1,1,1} &= \hat{L}_{1,n,1}, & pL_{2,1,1} &= \hat{L}_{2,n,1} \\
pL_1 &= \hat{L}_1, & pL_2 &= \hat{L}_2 \\
pL_{1,i,1} &= \hat{L}_{1,i-1,1}, & pL_{2,i,1} &= \hat{L}_{2,i-1,1} \quad \text{for } i = 2, \ldots, n
\end{aligned}
\]

接下来，选择随机元素 \(Y_{1,i}, Y_{2,i} \in G_s\) 对于 \(i = 1\) 到 \(n\)，然后将 \(\hat{DL}_2\) 中的每个元素提升到 \(-\hat{x}\) 并输出以下 \(DL_1\)：
\[
\begin{aligned}
DL_1 &= \left( L_1, L_{1,1}, \ldots, L_{1,n} \right) \\
L_1 &= \hat{L}_2 \\
L_{1,i,1} &= \hat{L}_{1,i,2} \cdot pL_{1,i,1} \cdot Y_{1,i}^{-\hat{x}} \cdot pL_{1,i,1} \cdot Y_{1,i} \\
L_{2,i,1} &= \hat{L}_{2,i,2} \cdot pL_{2,i,1} \cdot Y_{2,i}^{-\hat{x}} \cdot pL_{2,i,1} \cdot Y_{2,i} \quad \text{for } i = 1, \ldots, n
\end{aligned}
\]

通过这种方式，我们可以计算出所有 \(v \in W\) 的 \(DL_v\)。

**注释**：如果 \(X\) 中只有一个可委托字段，则我们有一个委托组件 \(DL_1\)。在步骤 1 到 3 中，我们使用 \(DL_1\) 来随机化 \(DK\) 和 \(DL_1\)，其他计算保持不变。

#### 查询
给定密文和 \(X\) 的密钥（其中 \(X \in \Omega_l\)），计算以下内容：
\[
C' = C \cdot e(C_0, K) \cdot \prod_{i=1}^n e(C_{1,i}, K_{1,i}) \cdot e(C_{2,i}, K_{2,i})
\]
如果 \(M \in M\)，则返回 \(M\)；否则，返回错误。

#### 正确性
为了验证方案的正确性，我们首先证明由 `Delegate` 算法生成的秘密密钥具有与 `GenKey` 算法直接创建的密钥相同的结构。我们分别关注解密密钥组件和委托组件。记号与方案中的相同。对于解密组件 \(DK\)，对于 \(i = 1\) 到 \(n\)，替换：
\[
\begin{aligned}
r_{1,i} &= \mu \cdot r_{1,i,w} + r_{1,i}, & \hat{f}_1 &= \mu \cdot f_1 + f_1 \\
r_{2,i} &= \mu \cdot r_{2,i,w} + r_{2,i}, & \hat{f}_2 &= \mu \cdot f_2 + f_2
\end{aligned}
\]
可以在 `Delegate` 算法中重写为：
\[
\begin{aligned}
\hat{DK} &= \left( \hat{K}_1, \hat{K}_{1,1}, \ldots, \hat{K}_{1,n} \right) \\
\hat{K}_1 &= g^{r_1} \cdot Q^{r_1} \cdot h^{-r_1} \cdot h^{-\gamma \cdot r_1^n} \cdot \prod_{i=1}^n h_i^{-r_1 \cdot a_i} \\
\hat{K}_{1,i} &= g^{f_1} \cdot Y_{1,i} \cdot g^{a_i} \cdot Y_{2,i} \quad \text{for } i = 1, \ldots, n
\end{aligned}
\]
其中 \(a_i\) 是多项式在委托操作后的系数。不难看出解密密钥组件被正确分布。类似地，可以证明委托组件 \(DL\) 也被正确分布。因此，我们建立了从 `GenKey` 和 `Delegate` 计算的秘密密钥具有正确的分布。

#### 安全性证明
**定理 1**：如果 \(G\) 满足复合 3 方 Diffie-Hellman 假设（假设 1 和 2），则该可委托谓词加密方案是选择性安全的。

我们的方案对不允许执行委托计算的对手是安全的。在我们的安全游戏中，对手只能请求完整的属性向量的密钥，这些向量中没有可委托字段。密钥可以从 `GenKey` 或 `Delegate` 算法中计算。请注意，委托密钥与其父密钥有一些关联。因此，委托密钥的分布与新生成的密钥不同。

我们的证明受到 Shi 和 Waters 工作 [2] 中称为“密钥不可区分性”的技术启发。尽管委托密钥与其父密钥有相关性，但它们在计算上与 `GenKey` 算法生成的新密钥是不可区分的。这是证明的关键步骤，并简化了我们的模拟。现在，模拟器可以在对手查询新鲜密钥或委托密钥时，提供一个新生成的密钥。直观地说，“密钥不可区分性”依赖于 C3DH 假设：如果我们使用来自 \(G_r\) 的随机隐藏因子来随机化密钥中的每个项，则子群 \(G_p\) 中的 Decisional Diffie-Hellman 问题是困难的。

一旦建立了“密钥不可区分性”，其余的证明将非常类似于 Katz 的工作 [4]。通过“密钥不可区分性”，我们将安全性游戏有效地归约为 Katz 的原始游戏，因为委托密钥查询被视为新鲜密钥查询。我们在论文的完整版本中提供了详细的证明。

#### 结论
本文研究了支持析取谓词评估的谓词加密系统中的委托技术。我们首先提供了可委托谓词加密的安全定义，然后给出了支持析取谓词评估的公共密钥设置下的可委托方案。未来，我们将专注于支持析取范式和合取范式的可委托谓词加密。我们的目标是找到一种可以支持任意组合的析取和合取谓词评估的可委托系统。最终目标是在所有谓词系统中实现委托。

#### 参考文献
1. Shi, E., Bethencourt, J., Chan, H.T., Song, D., Perrig, A.: Multi-Dimensional Range Query over Encrypted Data. In: IEEE Symposium on Security and Privacy, pp. 350–364. IEEE Press, Los Alamitos (2007)
2. Shi, E., Waters, B.: Delegating Capability in Predicate Encryption Systems. In: Aceto, L., Damgård, I., Goldberg, L.A., Halldórsson, M.M., Ingólfsdóttir, A., Walukiewicz, I. (eds.) ICALP 2008, Part II. LNCS, vol. 5126, pp. 560–578. Springer, Heidelberg (2008)
3. Boneh, D., Waters, B.: Conjunctive, Subset, and Range Queries on Encrypted Data. In: Vadhan, S.P. (ed.) TCC 2007. LNCS, vol. 4392, pp. 535–554. Springer, Heidelberg (2007)
4. Katz, J., Sahai, A., Waters, B.: Predicate Encryption Supporting Disjunctions, Polynomial Equations, and Inner Products. In: Smart, N.P. (ed.) EUROCRYPT 2008. LNCS, vol. 4965, pp. 146–162. Springer, Heidelberg (2008)
5. Shen, E., Shi, E., Waters, B.: Predicate Privacy in Encryption Systems. In: Reingold, O. (ed.) TCC 2009. LNCS, vol. 5444, pp. 457–473. Springer, Heidelberg (2009)
6. Shamir, A.: Identity-Based Cryptosystems and Signature Schemes. In: Blakely, G.R., Chaum, D. (eds.) CRYPTO 1984. LNCS, vol. 196, pp. 47–53. Springer, Heidelberg (1985)
7. Boneh, D., Franklin, M.: Identity-Based Encryption From the Weil Pairing. In: Kilian, J. (ed.) CRYPTO 2001. LNCS, vol. 2139, pp. 213–229. Springer, Heidelberg (2001)
8. Waters, B.: Efficient Identity-Based Encryption Without Random Oracles. In: Cramer, R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494, pp. 114–127. Springer, Heidelberg (2005)
9. Boneh, D., Boyen, X.: Efficient Selective-ID Secure Identity Based Encryption Without Random Oracles. In: Cachin, C., Camenisch, J.L. (eds.) EUROCRYPT 2004. LNCS, vol. 3027, pp. 223–238. Springer, Heidelberg (2004)
10. Gentry, C.: Practical Identity-Based Encryption Without Random Oracles. In: Vaudenay, S. (ed.) EUROCRYPT 2006. LNCS, vol. 4004, pp. 445–464. Springer, Heidelberg (2006)
11. Goyal, V., Pandey, O., Sahai, A., Waters, B.: Attribute-Based Encryption for Fine-Grained Access Control of Encrypted Data. In: ACM Conference on Computer and Communication Security 2006, pp. 89–98. ACM, New York (2006)
12. Bethencourt, J., Sahai, A., Waters, B.: Ciphertext-Policy Attribute-Based Encryption. In: 2007 IEEE Symposium on Security and Privacy, pp. 321–334. IEEE Press, Los Alamitos (2007)
13. Sahai, A., Waters, B.: Fuzzy Identity-Based Encryption. In: Cramer, R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494, pp. 457–473. Springer, Heidelberg (2005)
14. Horwitz, J., Lynn, B.: Towards Hierarchical Identity-Based Encryption. In: Knudsen, L.R. (ed.) EUROCRYPT 2002. LNCS, vol. 2332, pp. 466–481. Springer, Heidelberg (2002)
15. Boyen, X., Waters, B.: Anonymous Hierarchical Identity-Based Encryption (Without Random Oracles). In: Dwork, C. (ed.) CRYPTO 2006. LNCS, vol. 4117, pp. 290–307. Springer, Heidelberg (2006)
16. Boneh, D., Boyen, X., Goh, E.: Hierarchical Identity Based Encryption with Constant Size Ciphertext. In: Cramer, R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494, pp. 440–456. Springer, Heidelberg (2005)

希望这些改进能帮助您更好地理解并传达您的想法。如果有任何进一步的问题或需要更多帮助，请告诉我！