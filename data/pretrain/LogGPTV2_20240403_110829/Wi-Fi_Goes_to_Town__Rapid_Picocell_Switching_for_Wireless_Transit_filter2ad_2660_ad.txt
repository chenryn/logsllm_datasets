and 8.2 Mbits/s UDP throughput in the single client case, which
is 2.5× and 2.1× of the TCP and UDP throughput achieved by En-
hanced 802.11r. As we gradually increase the number of clients on
road, the throughput gap between WGTT and Enhanced 802.11r
increases to 2.6× and 2.4 × for TCP and UDP transmissions, respec-
tively. The reason behind is that multiple vehicles (clients) moving
around will introduce dynamic multi-path, and so a higher packet
loss rate. Accordingly, the throughput of Enhanced 802.11r drops
significantly. In contrast, WGTT benefits from the uplink diversity:
329
Wi-Fi Goes to Town: Rapid Picocell Switching for Wireless Transit Networks
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
each AP overheard the uplink packet will forward it to the server,
resulting in a reduced amount of retransmissions and so a higher
throughput.
)
s
/
s
t
i
b
M
(
t
u
p
h
g
u
o
r
h
T
12
8
4
0
TCP − WGTT
TCP − Enhanced 802.11r
UDP − WGTT
UDP − Enhanced 802.11r
1
2
Number of client
3
Figure 17: Average per-client downlink throughput with dif-
ferent numbers of clients. All clients move at 15 mph.
To demonstrate this, we draw the packet loss rate of three clients’
uplink UDP flow during the client’s transition among eight APs.
We also plot the packet loss rate when the client transmits uplink
packets through only one AP (Enhanced 802.11r) during its transi-
tion. As shown in Figure 18, with a single up link, the packet loss
rate changes abruptly for all these three clients. In contrast, with
multiple up links, the packet loss rate maintains in a very low level
(below 0.02) for these three clients.
e
t
a
r
s
s
o
l
t
e
k
c
a
P
0.6
0.4
0.2
0
0.6
0.4
0.2
0
0.6
0.4
0.2
0
Client 1
WGTT
Enhanced 802.11r
Client 2
Client 3
0
3
Time (s)
6
9
Figure 18: Packet loss rate of uplink UDP packets sent by
three mobile clients.
We further test the TCP throughput in three multiple-client sce-
narios: following driving, parallel driving, and driving in opposing
direction, as shown in Figure 19. In each testing, the server sends
UDP packets at a constant rate (15 Mb/s) to the clients moving at
15 mph.
Figure 20 shows the TCP and UDP throughput in these three
testing cases. As shown, we achieve the highest TCP and UDP
throughput in case (c): two cars driving in opposite direction. This
is due to the fact that the two clients stay far way from each other
Figure 19: TCP/UDP throughput measurement testing in
multiple client scenario, including (a) following driving
with a spacing of 3 m; (b) parallel driving, and (c) driving
in opposing direction. The clients move at 15 mph in each
experiment.
during their transition period in this case. Hence each client expe-
riences minimum link contention. We observe that both the lowest
TCP (4.8 Mbits/s) throughput and UDP throughput (5.0 Mbits/s)
appear in parallel driving case (case (b)). This is because the two
clients could carrier sense each other, thus experiencing a higher
link contention. Nevertheless, WGTT achieves consistently better
performance than Enhanced 802.11r fast roaming protocol in all
three multi-client testing cases. This is because WGTT leverages
the link diversity to let all APs forward their overheard packet to
the remote sever, thereby reducing the packet retransmissions.
)
s
/
s
t
i
b
M
(
t
u
p
h
g
u
o
r
h
T
12
10
8
6
4
2
0
TCP −WGTT
TCP − Enhanced 802.11r
UDP − WGTT
UDP − Enhanced 802.11r
(a)
(b)
Testing case
(c)
Figure 20: TCP/UDP throughput in different multi-client
testing case. The client moves at 15 mph.
5.3 Microbenchmarks
We now present microbenchmarks, aimed at understanding the
impact of certain parameters on our system’s performance.
5.3.1 Choosing a proper window size. WGTT uses a time win-
dow w to compare ESNR readings from different APs (§3.1.1), so
w is critical to the accurateness and agility of our AP selection
algorithm. We do an emulation-based experiment to determine w.
We drive at a constant speed (15 mph) and collect 10 runs of ESNR
data. Based on that, we vary the window size and compute the
average channel capacity loss of 10 test cases. The result is shown
in Figure 21. As shown, the capacity loss decreases as we enlarge
the window size to 10 ms, and then increases as we expand the
window size further. Suggested by the experiment result, we set w
to 10 ms, which achieves the minimal channel capacity loss. We
330
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
Zhenyu Song, Longfei Shangguan, and Kyle Jamieson
further perform a sensitivity analysis of w at various vehicle speeds
and find that it remains unchanged.
s
s
o
l
y
t
i
c
a
p
a
C
)
s
/
s
t
i
b
M
(
e
t
a
r
40
20
0
0
10 ms
100
200
Window size (ms)
300
400
Figure 21: Capacity loss rate for different window sizes.
5.3.2 Link layer ACK collision rate. As all APs in the network
are simultaneously associated with the client, they all reply with
link layer (block) acknowledgements after hearing an uplink packet,
resulting in potential collisions at the client, and so uplink packet
retransmissions. To understand how frequently link layer acknowl-
edgement collisions happen in our system, we first turn RTS/CTS
off and send a constant-rate stream of UDP packets using iperf3 and
measure the number of uplink retransmissions to find the upper-
bound of the frequency of link layer acknowledgment collisions.
The result is shown in Table 3. Link layer acknowledgement colli-
sions rarely happen in our system, with only 0.001% for 70 Mbits/s
UDP sending rate, and 0.004% for 90 Mbits/s UDP sending rate. We
speculate the reason is that TP-Link AP issues an HT-immediate
block ACK with some backoff. We find that the interval between
the last MPDU and block ACK varies in the range of us instead
of being a fixed time. If backoff is performed, side lobes of our
parabolic antenna prevent link layer acknowledgement collisions
from happening. Given our experiment results, we conclude that
such a small fraction of collision have minimal impact on WGTT’s
throughput.
Table 3: Link layer ACK collision rate at the client side.
Data rate (Mbits/s)
Ack collision rate (%)
70
0.001
80
0.003
90
0.004
5.3.3
Impact of time hysteresis for AP switching. We next exam-
ine the impact of time hysteresis for AP switching on the through-
put. In this experiment, we vary the time hysteresis from 120 ms
down to 40 ms, and let a client transit across eight APs to receive
TCP packets sent from the server. Figure 22 shows the throughput
against time and a timeseries showing which AP the client is associ-
ated with during its movement. As shown, the throughput changes
in a similar trend for the three different time hysteresis settings,
fluctuating due to channel variations but never dropping to zero
due to prompt AP switches, as shown below in the figure. As we
decrease the time hysteresis, we can see the throughput grows grad-
ually from 1.3 Mbits/s to around 6.4 Mbits/s at 2 s. The throughput
gain is due to the fact that the channel condition changes frequently
at driving speed. A smaller time hysteresis renders our switching
algorithm more able to adapt to the fast channel changes, and so
achieving a higher throughput.
12
t
u
p
h
g
u
o
r
h
T
)
s
/
s
t
i
b
M
(
.
q
e
S
P
A
6
0
8
1
8
1
8
1
0
T = 120 ms
T = 80 ms
T = 40 ms
T = 40ms
T = 80ms
T = 120ms
2
4
6
Time (s)
8
10
Figure 22: The TCP throughput against time in different and
a timeseries showing which AP the client is associated with
during its movement. The client moves at 15 mph.
5.3.4
Impact of AP density. We now examine the impact of AP
density on the throughput. In this experiment, we vary the driving
speed of the client and measure the UDP throughput in both a dense
and sparse AP deployment area of our testbed. Figure 23 shows
the result. As expected, WGTT achieves a consistently high UDP
throughput in both sparse and dense AP deployment under different
driving speeds. The UDP throughput increases from 6.7 Mbits/s on
average to around 9.3 Mbits/s as the client moves from the area
of low AP density to the area of high AP density. This is due to
the fact WGTT benefits from uplink diversity of nearby APs and
receives packets through multiple paths.
)
s
/
s
t
i
b
M
(
t
u
p
h
g
u
o
r
h
T
15
10
5
0
15
10
5
0
0
Transit through sparsely deployed APs (AP5, AP6, AP7)
Enhanced 802.11r
WGTT
Transit though densely deployed APs (AP2, AP3, AP4)
2
4
6
8
10
Driving speed (mph)
Figure 23: UDP throughput in areas of different density in
our testbed deployment.
331
Wi-Fi Goes to Town: Rapid Picocell Switching for Wireless Transit Networks
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
5.4 Case studies
We next conduct three real-world case studies to examine WGTT’s
performance in streaming applications: online video streaming,
remote video conferencing, and web browsing.
Online video. In this case study, we test WGTT’s ability to reliably
stream video to mobile clients. We employ the video rebuffer ratio