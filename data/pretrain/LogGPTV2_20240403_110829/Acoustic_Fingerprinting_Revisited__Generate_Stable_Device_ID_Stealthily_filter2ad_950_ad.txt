### 7.2 Slowly Changing Features

The features of a device can change slowly over time, for example, due to variations in air humidity. The vapor in the air can influence the vibration of the coil, leading to slight changes in the fingerprint. To address this issue, we propose a slow updating technique for the fingerprint. If the fingerprint remains distinguishable but a small, constant offset is detected, we update the fingerprint in the database. This approach helps to compensate for the gradual changes in the device's characteristics.

### 7.3 Sudden Changes (Upheavals)

The stability experiment was conducted in an office environment. However, a phone may encounter various situations that can rapidly change its features. For instance, a sudden drop to the floor can alter the mechanical properties of the speaker, changing its frequency response. Similarly, accidental exposure to water can also affect the device's characteristics. We have not yet developed a practical solution to identify such sudden changes (upheavals).

### 7.4 Interference from Background Noises

Although our proposed scheme uses specific frequency combinations at about seventy discrete points, it can still fail to extract unique device IDs in environments with high-power noise signals, such as train stations or crowded restaurants.

To overcome this limitation and make our method work even under low Signal-to-Noise Ratio (SNR) conditions, we can borrow advanced techniques from the communication field, such as spread-spectrum communication [9]. Spread-spectrum communication spreads the narrowband information signal over a wide band of frequencies using a sequential noise-like signal structure. It can also use frequency-hopping, where information is sent following a sequence of pseudo-random frequencies. The receiver can reproduce the same pseudo-random sequence, allowing it to correlate the received signals and retrieve the transmitted information [9].

Inspired by spread-spectrum communication, we can modify our scheme. At each effective frequency point from 14 kHz to 21 kHz, the original mono tone sine wave is modulated with a pseudo-random sequence. This spreads the energy originally concentrated at a single frequency point over a wider range, reducing the energy density while keeping the overall signal energy unchanged. The recorded audio data is then passed through a band-pass filter and de-spread to recover the sine wave. The recovered sine wave at each frequency point has different amplitudes due to the speaker's attenuation, reflecting the unique characteristics of that speaker.

### 7.5 Device ID for Smartphones of Different Models or Manufacturers

In this study, we evaluated the features of 50 OEM speakers from Samsung Galaxy S3 devices, all from the same assembly line with continuous serial numbers. We did not extend our study to smartphones from different manufacturers, assuming that speakers from different manufacturers are generally easier to differentiate, as confirmed by previous work [19].

Even if this assumption fails, we propose incorporating other hardware features or information into the device ID. For example, the CPU type, memory capacity, and operating system version can be used. According to previous studies, an app can access this information without requiring special permissions [45].

### 7.6 Detection of Audio Fingerprinting Operations

Although an Android application based on our proposed scheme can disguise itself as a legitimate one by requesting microphone access for other legal purposes, it is still possible to detect if such an application is performing audio fingerprinting. For example, Fast Fourier Transform (FFT) is required to generate audio stimuli, and code analysis can detect the presence of such operations, even if they are hidden within equalizer processing. However, if an application's original function includes FFT operations, detecting the fingerprinting operation becomes more challenging.

### 8. Related Work

#### Software Fingerprint
Many browser configuration details can be exploited to differentiate devices, such as User Agent, installed fonts, plugin information, and benchmark results [22, 33, 14, 40]. Additionally, OS version, Kernel version, and application lists can be used to distinguish devices. Differences in the implementation of networking protocols, such as TCP initial window size and IP header ID sequence generation, can also be leveraged to generate fingerprints [25, 38, 26].

#### Hardware Fingerprint
Several works have focused on identifying devices by exploiting minute differences in the signals produced by phone components. For example, wireless NICs can be distinguished by analyzing RF signals emitted by the transmitter [42, 23, 20, 13, 15, 17]. However, these methods are not suitable for internet tracking, as there may be no direct physical link between the user and the tracer. Data from accelerometers can also be used to distinguish users with coarse precision [21], and photos taken by cameras can be differentiated by their patterns and noise [31].

The scheme proposed in [19] also leverages the features of the speaker embedded in the phone to identify users. However, the scalability and robustness of their cepstral feature were not evaluated, raising questions about the feasibility of long-term tracking. Furthermore, no practical method was proposed to hide the identification process, and playing audible music as a stimulus would attract users' attention.

#### Location Stealing
Researchers have also focused on position-stealing methods in Android devices without the necessary permissions. Zhou et al. studied how to infer location using public information provided by Android [45]. Han et al. proposed that accelerometers in smartphones can be used to infer location [27]. Lester et al. described techniques to determine if two phones are carried by the same person [30]. In [34], a probabilistic method for positioning mobile devices in the pocket without GPS information was introduced.

### 9. Conclusion

This paper demonstrates that there are differences between individual smartphone speakers, reflected in their response curves. These differences enable applications to generate unique identities based on the response curves. The identity is stable and suitable for long-term tracking, and it has sufficient entropy to cover all phones globally. Both practical experiments and theoretical analysis show that the scheme works in common situations, except in environments with high-power noise. Additionally, the location of the device may be exposed due to the narrow broadcasting range of sound waves. To calculate the error rate, we analyzed the distribution model of the similarity, fitting the similarity between identities to a probabilistic model and choosing the most overlapped one. The entropy is determined based on the size of the distinguishable device pool calculated by the error rate.

### 10. Acknowledgements

We thank our shepherd Christina PÃ¶pper for her valuable time and guidance in preparing the final version of this paper. We also appreciate the anonymous reviewers for their comments on the draft. Special thanks to Zhou Li from RSA Laboratories for his insightful suggestions.

### 11. References

[References listed here as in the original text]

---

This optimized version aims to improve clarity, coherence, and professionalism, making the content more accessible and understandable.