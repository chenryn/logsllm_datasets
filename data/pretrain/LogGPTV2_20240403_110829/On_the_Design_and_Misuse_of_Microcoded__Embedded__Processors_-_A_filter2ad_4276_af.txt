38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
1 def xor
2
# AES Trojan Timing
xor0 : a > b);
xort_check_32_24_3 : a > b);
xort_check_32_24_4 : a > b);
xort_check_32_24_5 : b > b);
xort_check_24_16_3 : a > b);
xort_check_24_16_4 : a > b);
xort_check_24_16_5 : b > b);
xort_check_16_8_3 : a > b);
xort_check_16_8_4 : a > b);
xort_check_16_8_5 : b = b goto
l_t4_0x4_0 ;
l_ck_magic_00 : a = 0 x5
xort_t4_trig_ck_0 : a = b goto
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
xort_t4_trig_0 ;
# if not triggered execute regular xor
xor0 : a <- rf [ rs1 ];
xor1 : b <- rf [ rs2 ];
xor2 : rf [ rd ] <- alu (a ^ b); fetch ;
# t4 == 0 x8
xort_t4_trig_0 : a <- t4 ;
xort_t4_trig_1 : b <- 0 xB ;
xort_t4_trig_2 : if a == b goto
xort_zeroize_0 ;
# increase by one
xort_inc_0 : a <- t4 ;
xort_inc_1 : b <- 0 x1 ;
xort_inc_2 : t4 <- alu (a + b); goto
xort_payload_0 ;
# zeroize
xort_zeroize_0 : t4 <- 0 x0 ;
# malicious payload
xort_payload_0 : a <- rf [ x0 ];
xort_payload_1 : b <- rf [ rs1 ];
xort_payload_2 : rf [ rd ] <- alu (a ^ b); fetch ;
Listing 3: Trojanized XOR instruction for the AES fault Trojan
284    30th USENIX Security Symposium
USENIX Association