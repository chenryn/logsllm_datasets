2、DDL语句记录到表里面(密码相关部分，加密（掩码）显示)。
3、不带条件的DML (delete, update) ， 记录到表里面
4、影响行数超过N（可配置）的DML(update, delete)，记录到表里面。
5、返回结果超过N（可配置）的查询（select） ， 记录到表里面。
#### 68 
cube 支持float4元素，提高INDEX搜索性能。   
[《PostgreSQL 相似搜索插件介绍大汇总 (cube,rum,pg_trgm,smlar,imgsmlr,pg_similarity) (rum,gin,gist)》](../201809/20180904_01.md)    
[《PostgreSQL 11 相似图像搜索插件 imgsmlr 性能测试与优化 1 - 单机单表 (4亿图像)》](../201809/20180904_02.md)    
#### 69
开启full page write，写压测的情况下，checkpoint时性能抖动严重。   
找一下原因，改进。   
#### 70
```
write sensitive
1. mvcc (vacuum, bloat) zheap stable
2. 32 bit xid  (freeze)
3. fpw (checkpoint, write sensitive场景性能下降)
4. column store 分析场景
5. mem table
6. sharding
7. multi master
```
#### 71 
merge join + limit的优化   
[《PostgreSQL JOIN limit 优化器 成本计算 改进 - mergejoin startup cost 优化》](../201810/20181004_03.md)    
#### 72 
PostgreSQL recovery 优化  
[《PostgreSQL WAL replay 加速(datapage preload) - 恢复加速, 备库延迟优化》](../201807/20180711_03.md)    
#### 73 
schema 支持设置默认表空间。  
在schema中创建的对象，如果没有指定TBS，则使用schema指定的默认表空间。  
#### 74 
资源限制，资源配额（一个配额周期（时间周期），限制用户、数据库可以扫描的block数、。。。）。     
[《PostgreSQL 数据库资源限制 + HOOK(limit guc) - 降低攻击伤害、自动SQL优化等》](../201908/20190812_02.md) 
#### 75
merge join query rewrite优化。   
[《PostgreSQL merge join 扫描方法实例细说，以及SQL写法注意 或 内核优化建议 - query rewrite》](../201907/20190713_01.md)    
#### 76
一个参数支持多个配置。  根据角色设置不同的参数。  
例如当角色是primary时，wal_keep_segments=1000
当前是standby时，wal_keep_segments=0   
#### 77
按需开启binlog，用户勾选数据库、表，开启对应对象的binlog。   数据库自动解析并存储binlog。   
#### 78 
oom信号为9,pg无法处理这个信号，oom如果可以改成15来terminate process，可以避免数据库recovery状态，提高稳定性。  
#### 79
gist 索引order by距离，filter 距离范围, limit 时，自动判定filter不满足条件后不再扫描。目前如果遇到满足条件的limit记录数不足，会导致扫描所有索引。性能很差。  
[《PostgreSQL GiST Order by 距离 + 距离范围判定 + limit 骤变优化与背景原因》](../201912/20191218_02.md)  
#### 80
pg支持index scan或者其他除seqscan以外的随机采样方法， 例如select xx from xx where xx return random limit x; 既能走索引， 又能高效率随机访问满足条件的结果。  
需求同50  
#### 81
SQL审计接口， paser+stats+explain+rule   
### 十、安全  
#### 1. 自动隐藏隐私信息（如create user password, alter role.... password)      
#### 2. sql 防火墙      
代价， 白名单， 黑名单， 学习， where等部位规则。   
#### 3. 支持每个USER多个密码，每个密码有对应的过期时间      
用户如果要更换DB密码，那么应用层可以做到非常平滑。  
#### 4. 表级访问秘钥      
#### 5. PG，GP， 数据采样（已支持）、脱敏功能。      
#### 6. 数据类型， 透明加密功能.      
#### 7. 块级透明加密
#### 8. pl language 执行沙盒，过滤有风险的操作。
#### 9. pl language 代码内容加密。  
### 十一、benchmark
#### 1. pgbench接入更加丰富的benchmark case支持
## Greenplum      
#### 1、自动垃圾回收，目前的调度太烂了。但是注意LOCK冲突问题。先解决与DML的冲突，再开启自动。        
#### 2、优化器（非分布键的点查，现在建立master-segment的耗费较大，目测可能是串行的，节点多的情况下可能会比较糟糕。），      
#### 3、master到segment的连接保持。      
#### 4、segment之间的interconnect使用POOL连接池，减少motion时会话多的问题。      
#### 5、逻辑复制订阅支持（类似逻辑复制）通过PGQ、消息队列...实现。      
https://wiki.postgresql.org/wiki/PGQ_Tutorial      
#### 6、greenplum segment节点开放读写      
#### 7、GIN倒排（很多用户需求）      
#### 8、依赖GIN索引，pg_trgm插件（模糊查询、全文检索、相似搜索）      
#### 9、提高greenplum的Oracle兼容性，特别是存储过程，自定义函数的性能。  
#### 10. greenplum, 按虚拟字段(或按表达式)分区、分布键      
#### 11. greenplum, 大表, 多segment，analyze速度偏慢。原因可能是需要在SEGMENT采样，并发送给MASTER，然后在MASTER再生成统计信息的原因。 有优化空间。  
#### 12. greenplum, 广播结果的复用，下次调用前如果未修改，则不需要再次发起广播。同时有多个会话广播同一张表，只广播一遍，共享。     
#### 13. AO表考虑一下类似lsm tree理念，分级写入，解决单步insert的性能问题，膨胀问题。   
#### 14. 目前GPDB的dml(update, delete)为exclusive lock，相互冲突。增加分布式死锁检测机制，同时将DML的锁降低为row exclusive lock.  解决从冲突问题，提高并发能力。 
#### 15. 维度表功能。(复制表，每个SEGMENT内容一样)
#### 16. 增加流计算功能.   
#### 17. 内存表功能，提升这种表的高并发更新性能。
#### 18. 全局临时表功能，目前每次需要重建结果。频繁使用使得元数据表膨胀。
## 其他重要功能
```
xid 64 bit
undo storage engine
热插拔存储接口
内置连接池
flashback query 
column store 
block level compress 
sharding improve
native partition improve (performance)
gpu native support
向量计算
只读实例支持mpp, 支持多个实例MPP查询.   
block level increment backup
(plugable)transfer database，支持增量
(plugable)transfer table
(plugable)transfer schema
wal wirter parallel , 提升写性能 , 高并发处理吞吐能力  
global temp table 
memory table
optimizer improve（复杂QUERY优化、机器学习、AP类查询动态根据上一步调整下一步nodeplan）
(AWR) waiting sample statistic improve
statistics activity improve(统计信息：qps, tps, net, iops, insert rows/s, fetch rows/s, delete rows/s, update rows/s)
client driver + auto failover quorum based replication - zero downtime
audit performance improve
checkpoint performance smoothly
quorum based sync replication performance improve 目前PG的wal sender需要等wal落盘才会往wal receiver发送。实际上可以在wal 写入wal buffer就往wal receiver发送，弥补网络的RT。 
build-in logical decoding client for continuent sync data to message queue
slot info sync to standby, 目前slot不会同步到standby，如果有基于流复制主从的架构下使用SLOT，切换后SLOT就没了。
统计信息增强，增加多种柱状图，类似ORACLE
skip index scan (支持非驱动列搜索，高速count distinct)
disk quota
job 支持
copy filter
mview performance improve，类似ORACLE
分段 brin
更好的共享、会话级内存管理(work mem, relcache, ...)
global snapshot, 读写分离跨库一致性（一个事务的请求可以被拆到多个实例执行）.
透明读写分离client driver。
pgpool-II improvement
oracle 兼容性
mysql 兼容性
ms sql 兼容性
```
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")