# 苹果AMDRadeonX4150内核扩展中存在未修复的漏洞？

##### 译文声明
本文是翻译文章，原文作者为objective-see，来源于objective-see.com。
译文仅供参考，具体内容及含义以原文为准。

> 在苹果的AMDRadeonX4150内核扩展中发现了一个触发内核崩溃的漏洞，这究竟是怎么回事？

## 引言
2018年1月21日，我在ShmooCon会议上就“OpenBSM审计”进行了演讲。有兴趣的同学可以参考我的演讲文稿【[传送门](http://shmoocon.org/speakers/#theugly)】。

在准备演讲内容的过程中，我利用休息时间对我的新MacBook进行了一次安全分析。几分钟后，我的笔记本电脑突然崩溃了。这让我感到非常困惑，因为当时我只是在用户模式下操作。然而，这一现象也令我兴奋不已，毕竟谁不想发现一个macOS内核漏洞呢？

在这篇文章中，我将分析内核崩溃报告，尝试找到导致崩溃的具体原因和错误指令。尽管这个漏洞表面上可能不会引发严重的安全问题，但对于熟悉内核安全和显卡kext的专业人士来说，它可能具有潜在价值。无论如何，我希望通过这篇文章为大家提供一些有价值的思路。

## 内核崩溃分析

首先，我们来了解一下目标设备的系统信息：
- **macOS版本**：10.13.2
  ```bash
  $ uname -a
  Darwin Patricks-MacBook-Pro.local 17.3.0 Darwin Kernel Version 17.3.0: root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64
  ```

- **内核崩溃报告**：
  ```bash
  $ /Library/Logs/DiagnosticReports/Kernel_2018-01-15-185538_Patricks-MacBook-Pro.panic
  ```
  
以下是部分内核崩溃报告的内容，完整报告请点击【[这里](https://objective-see.com/downloads/Kernel_%20AMDRadeonX4150.panic)】查看：
  ```bash
  $ less Kernel_2018-01-15-185538_Patricks-MacBook-Pro.panic
  *** Panic Report ***
  panic(cpu 6 caller 0xffffff8008b6f2e9): Kernel trap at 0xffffff7f8c7ba8b1, type 14=page fault
  registers:
  CR0: 0x000000008001003b, CR2: 0xffffff80639b8000, CR3: 0x0000000022202000, CR4: 0x00000000003627e0
  RAX: 0x0000000000000564, RBX: 0x0000000000000564, RCX: 0x0000000000000020, RDX: 0x000000000000002a
  RSP: 0xffffff92354ebc80, RBP: 0xffffff92354ebce0, RSI: 0x00000000000fbeab, RDI: 0xffffff92487b9154
  R8:  0x0000000000000000, R9:  0x0000000000000010, R10: 0x0000000000000010, R11: 0x0000000000000000
  R12: 0xffffff80639b6a70, R13: 0xffffff92354ebdc0, R14: 0xffffff92354ebdd4, R15: 0x0000000000000000
  RFL: 0x0000000000010297, RIP: 0xffffff7f8c7ba8b1, CS:  0x0000000000000008, SS:  0x0000000000000010
  Fault CR2: 0xffffff80639b8000, Error code: 0x0000000000000000, Fault CPU: 0x6, PL: 0, VF: 1
  Backtrace (CPU 6), Frame : Return Address
  0xffffff92354eb730 : 0xffffff8008a505f6
  0xffffff92354eb780 : 0xffffff8008b7d604
  0xffffff92354eb7c0 : 0xffffff8008b6f0f9
  0xffffff92354eb840 : 0xffffff8008a02120
  ...
  Kernel Extensions in backtrace:
  com.apple.iokit.IOAcceleratorFamily2(376.6) @0xffffff7f8b2b0000->0xffffff7f8b345fff
  com.apple.kext.AMDRadeonX4150(1.6) @0xffffff7f8c7b4000->0xffffff7f8cf20fff
  BSD process name corresponding to current thread: kernel_task
  Mac OS version:
  17C88
  Kernel version:
  Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64
  Kernel slide: 0x0000000008600000
  ```

内核崩溃报告提供了大量信息，有助于我们定位崩溃的原因。从第二行开始分析：
  ```bash
  panic(cpu 6 caller 0xffffff8008b6f2e9): Kernel trap at 0xffffff7f8c7ba8b1, type 14=page fault
  ```
该行告诉我们，内核崩溃是由一个页面错误（`type 14=page fault`）引起的。页面错误通常表示无效的内存访问或向未映射的内存页写入数据。注意报告中的RIP寄存器值，它存储了错误指令的地址：0xffffff7f8c7ba8b1。

进一步分析，我们可以找到导致页面错误的内存地址：0xffffff80639b8000。
  ```bash
  Fault CR2: 0xffffff80639b8000, Error code: 0x0000000000000000, Fault CPU: 0x6 ...
  ```

此外，崩溃报告还包含了回溯信息（backtrace），帮助我们追踪方法调用或函数调用的顺序，并确定错误指令的执行情况：
  ```bash
  Backtrace (CPU 6), Frame : Return Address
  0xffffff92354eb730 : 0xffffff8008a505f6
  0xffffff92354eb780 : 0xffffff8008b7d604
  0xffffff92354eb7c0 : 0xffffff8008b6f0f9
  0xffffff92354eb840 : 0xffffff8008a02120
  0xffffff92354eb860 : 0xffffff8008a5002c
  0xffffff92354eb990 : 0xffffff8008a4fdac
  0xffffff92354eb9f0 : 0xffffff8008b6f2e9
  0xffffff92354ebb70 : 0xffffff8008a02120
  0xffffff92354ebb90 : 0xffffff7f8c7ba8b1
  0xffffff92354ebce0 : 0xffffff7f8c7ba40f
  0xffffff92354ebd60 : 0xffffff7f8c7b85e8
  0xffffff92354ebda0 : 0xffffff7f8c7b9db2
  0xffffff92354ebe00 : 0xffffff7f8b2b3873
  0xffffff92354ebe50 : 0xffffff7f8b2bd473
  0xffffff92354ebe90 : 0xffffff7f8b2bcc7d
  0xffffff92354ebed0 : 0xffffff8009091395
  0xffffff92354ebf30 : 0xffffff800908fba2
  0xffffff92354ebf70 : 0xffffff800908f1dc
  0xffffff92354ebfa0 : 0xffffff8008a014f7
  ```

根据回溯信息提供的内容，崩溃报告还列出了相关的内核扩展及其加载地址：
1. kext: `com.apple.iokit.IOAcceleratorFamily2`
   地址：0xffffff7f8b2b0000
2. kext: `com.apple.kext.AMDRadeonX4150`
   地址：0xffffff7f8c7b4000

这些地址中很可能包含导致页面错误并引发内核崩溃的指令。

最后，我们总结一下从内核崩溃报告中收集到的信息：
1. 内核崩溃是由对内存地址0xffffff80639b8000的无效访问导致的页面错误引起的。

通过以上分析，我们能够更好地理解内核崩溃的原因，并为进一步的研究提供基础。