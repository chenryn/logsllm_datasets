### Policy-Driven Device and Network Management

#### Policy Conditions
- **Time Range:** When the time falls within a specific range as defined by the policy.
- **Type:**
  - **Port Status:** The status of network ports.
  - **Location:** The physical or logical location of the device.
  - **Time:** The current time.
  - **User Behavior:** Changes in settings, permissions, or the foreground application.
  - **Device:** The specific device being managed.
  - **Role:** The role of the user (e.g., guest, employee).
  - **Device Mode:** The mode of the device (e.g., Normal, Sleep, Airplane).
  - **Control State:** The state of the device (e.g., power down, recovery).

#### Target Definition
- **Target:** Specifies the entities to which the policy applies.
  - **APP (APP_ID | APP_NAME | ALL):** Targets specific applications or all applications.
  - **APP_GRP (TRUST | THIRD_PARTY | UNKNOWN):** Targets groups of applications based on trust level.
  - **DEVICE (DEV_ID | GROUP | UNAUTHORIZED | ALL):** Targets specific devices, device groups, unauthorized devices, or all devices.

#### Match and Predicate
- **Match:** Defines the criteria for matching and associating a flow with a policy.
- **Predicate:** Describes the conditions under which the policy should be enforced.
  - **Event:** Events that trigger the policy (e.g., PORT_STAT, LOC, TIME, USR_ROLE, DEV_MODE, CNTRL_STATE, PKT, RATE).
  - **Condition:** The condition that must be met (e.g., Operator + Value).

#### Actions
- **Actions:** Specifies the actions to be taken if the predicate is satisfied.
  - **Control:** Access control actions (e.g., ALLOW, DENY, REDIRECT, MIRROR, QUARANTINE).
  - **Manage:** Management actions (e.g., REPORT, OF_ACTION).
  - **Trigger:** Trigger options (e.g., IMMEDIATE, PERIODIC + Value).

### High-Level Policy Language
The high-level policy language, as shown in Figure 10, simplifies the assignment of network administrative policies. It requires less familiarity with SDN/OpenFlow concepts, making it easier for administrators to manage the network. The language consists of four basic elements: Target, Match, Predicate, and Actions.

- **Target:** Defines the specific Android application, device, or group that the policy targets.
- **Match:** Filters and associates flows with policies.
- **Predicate:** Lists device context events and conditions for policy enforcement.
- **Actions:** Specifies access control, management decisions, and trigger options.

### Example Policies
- **Figure 11:** Disallows an employee from accessing Facebook during work hours.
- **Figure 12:** Quarantines packets from unregistered devices via a different VLAN.
- **Figure 13:** Allows full network access in Building A and denies access in Building B for a hypothetical accounting group.

### Communication via PBS Protocols
- **PBS Protocol:** Extends the existing OpenFlow protocol with new messages (e.g., PBS REGISTER POLICY, PBS REMOVE POLICY, PBS MODIFY POLICY, PBS REPORT).
- **Sequence Diagram (Figure 14):** Illustrates the communication between PBS-DROID and PBS CONTROLLER, including secure connection establishment, initial setup, and reactive policy management.

### Optimization Schemes
- **Message PushDown:** Reduces message handling overhead by utilizing the policy table to specify detailed flow timeout values.
- **Two-tiered Programming Model:** Employs minimal intelligence on the device to react to events in real-time, reducing communication and processing overhead.
- **Tailor to Mobile Device:** Adapts SDN operations to the mobile environment by removing unnecessary periodic operations and using an event-driven approach.
- **Short-circuit Operation:** Optimizes the packet processing pipeline by checking global properties early and skipping subsequent steps when appropriate.

### Implementation
- **PBS CONTROLLER:** Built as an extension to Floodlight v1.0, providing northbound APIs for BYOD controller-applications.
- **PBS-DROID:** Supports OpenFlow 1.0 and above, leveraging Openvswitch with components like ovs-vswitchd, datapath, and ovsdb.

This structured and optimized approach ensures efficient and effective management of BYOD environments, while minimizing resource overhead on mobile devices.