6. (cid:13)SYN/ACK(cid:13)
            Src IP:  IP(cid:13) 1(cid:13)
Probing Machine(cid:13)
IP(cid:13) 1(cid:13)
3. (cid:13)SYN to port 80(cid:13)
       Src IP: 195.6.203.3(cid:13)
2.(cid:13)RST(cid:13)
      IP ID = 1234(cid:13)
1.(cid:13)SYN/ACK(cid:13)
     Src IP: IP(cid:13) 1(cid:13)
7.(cid:13)RST(cid:13)
      IP ID = 1236(cid:13)
4. (cid:13)SYN/ACK(cid:13)
       Src IP: 195.6.216.26(cid:13)
5.(cid:13)RST(cid:13)
      IP ID = 1235(cid:13)
6.(cid:13)SYN/ACK(cid:13)
     Src IP: IP(cid:13) 1(cid:13)
H(cid:13)2(cid:13) 195.6.203.3(cid:13)
P(cid:13)2(cid:13) 195.6.203.0/24(cid:13)
AS 2(cid:13)
b) No Hijacking Attacks(cid:13)
Figure 2. Re(cid:3)ect-scan: detection of hijacking subnet of a pre(cid:2)x (type-3 and type-4 attacks).
4.5. Type 4: Detect subnet, AS hijacking
The most devious attack type as illustrated in Fig-
ure 1(h), discussed in x3.4, occurs when the attacker hijacks
a subnet and retains the correct origin AS. Similar to type-2
attack, there is no MOAS nor subMOAS con(cid:3)icts. To de-
tect this attack type, we continuously monitor new pre(cid:2)xes
that are subnets of existing pre(cid:2)xes in the routing tables.
If they do not cause a subMOAS con(cid:3)ict, they may fall
into this category. We apply similar checks for type-2 at-
tacks: edge popularity constraints, geographic constraints,
and relationship constraints to reduce false positives and
then apply re(cid:3)ect-scan probing to deal with the remaining
cases that violate any of the checks. Note that we can still
achieve real-time monitoring given that the space of suspi-
cious cases for this attack only includes new pre(cid:2)xes not
present in the current routing tables.
1. Monitor Module processes BGP updates in real time
to identify potential IP hijacking. The classi(cid:2)er in this
module depicted by Figure 3(b) classi(cid:2)es each update
into two types: valid and anomalous. For the latter
case, it groups them into four hijacking types described
in x3. Then both the type and the update information
(i.e., pre(cid:2)x and AS path) are fed into the Probing Mod-
ule for further analysis.
2. Probing Module takes input from the Monitor Mod-
ule and selects corresponding probing techniques.
It chooses the appropriate probing locations and
launches probing (e.g., OS detection, IP ID re(cid:3)ect-
scan) to the target pre(cid:2)x. Probe results are sent to the
Detection Module.
3. Detection Module analyzes and compares the probe
results to identify suspicious updates.
5. Implementation of Real-Time Monitoring
5.2. Experimental methodology
One of the most important properties of our system is
real-time monitoring. As hijacking sometimes lasts only for
a short time period to avoid detection, a real-time detection
system is essential to defend against malicious attacks in a
timely manner, reduce the damage incurred, and identify the
culprit. We demonstrate next how we achieve the real-time
capability in our prototype system.
5.1. System architecture
We developed a prototype system aimed at online detec-
tion of anomalous BGP routing updates and selective light-
weight active probing to gather data-plane (cid:2)ngerprints for
identifying hijacking attacks. Figure 3(a) illustrates the ar-
chitecture of the prototype. It consists of three modules.
BGP data set: We use BGP update data primarily from
two sources: University of Oregon RouteViews Server [2]
which peers with 57 BGP routers in 46 ASes and our own
route monitor peering with 7 BGP routers in 7 distinct ASes.
RouteViews data has better coverage; however, its update
(cid:2)les have a two-hour lag. Thus, we obtain real-time BGP
updates from our own monitor. Because of the larger num-
ber of feeds in RouteViews data, we use it to evaluate our
system’s scalability and ef(cid:2)ciency in processing large vol-
umes of updates. For update-triggered response, we use
data from our own monitor to study timely responses to
anomalous updates.
Probe location selection: We use the Planetlab
testbed [1] (consisting of 642 machines in 179 different
ASes including 3 tier-1 ISPs) as the candidate probing
BGP Update(cid:13)
New Prefix(cid:13)
Y(cid:13)
 C-P :  Customer-Provider(cid:13)
 EGR:  Edge, Geographic and(cid:13)
 Relationship(cid:13)
Hijack prefix(cid:13)
Hijack(cid:13)
unallocated prefix(cid:13)
Hijack prefix, AS(cid:13)
Y(cid:13)
Y(cid:13)
Y(cid:13)
N(cid:13)
MOAS(cid:13)
N(cid:13)
Subset of(cid:13)
existed prefix(cid:13)
N(cid:13)
Y(cid:13)
subMOAS(cid:13)
Y(cid:13)
In Bogon list(cid:13)
N(cid:13)
C-P Check(cid:13)
Violate  EGR(cid:13)
constraints(cid:13)
N(cid:13)
Violate  EGR(cid:13)
constraints(cid:13)
Y(cid:13)
N(cid:13)
Y(cid:13)
Y(cid:13)
Hijack(cid:13)
subnet prefix(cid:13)
Hijack(cid:13)
subnet prefix, AS(cid:13)
Hijack(cid:13)
supernet prefix(cid:13)
BGP Updates(cid:13)
Classifier(cid:13)
Potential Hijack(cid:13)
Hijack prefix(cid:13)
Hijack prefix, AS(cid:13)
Hijack subnet prefix(cid:13)
Hijack subnet(cid:13)
prefix, AS(cid:13)
Monitor Module(cid:13)
Probing Targets(cid:13)
OS Detection(cid:13)
IP ID Probing(cid:13)
TCP Timestamp(cid:13)
ICMP Timestamp(cid:13)
Reflect Scan(cid:13)
Probing Module(cid:13)
Probing(cid:13)
Results(cid:13)
Valid Updates(cid:13)
Not Hijacking(cid:13)
Detection Module(cid:13)
Raise Alarms of(cid:13)
Hijacking attacks(cid:13)
(a)
N(cid:13)
Superset of(cid:13)
existed Prefix(cid:13)
Valid Update(cid:13)
N(cid:13)
N(cid:13)
(b)
Figure 3. (a) System architecture for real-time detection of IP pre(cid:2)x hijacking attacks, (b) Classi(cid:2)ca-
tion of hijacking types.
Attack
Type
1
2
3
4
Anomalous updates
Hijacking a pre(cid:2)x (MOAS con(cid:3)icts)
Hijacking a pre(cid:2)x and its AS
Hijacking a pre(cid:2)x subnet (subMOAS)
After Customer-provider check
Hijacking a pre(cid:2)x subnet and its AS
After EGR constraint check
Max rate
/15 min
Avg rate
/15 min
0.42
28.17
2.92
0.86
3.74
0.15
0.08
1.60
0.16
0.09
0.33
0.01
Table 2. Anomaly rate of updates/BGP feed
(1 day of RouteViews data).
1
0.8
0.6
0.4
0.2
F
D
C
0
0
200
Nmap probing
Reflect−scan
IP ID probing
ICMP timestamp probing
400
600
Probing time (seconds)
800
1000
places for both type-1 and type-2 attacks. Note that re(cid:3)ect-
scans can be conducted anywhere as long as IP spoo(cid:2)ng is
permitted. Altogether we are able to (cid:2)nd probe locations
for 89% MOAS cases and 75% type-2 attack cases.
Live IP addresses: Live IP addresses for probing are
collected by combining locally collected DNS and Web
server logs. We also use reverse DNS to look up authori-
tative DNS servers and mail servers of various domains. In
addition, we conduct light-weight ping sweeps for a very
limited address range. Currently our list contains 1,165,845
unique IP addresses allowing us to (cid:2)nd target hosts for
70.3% of all pre(cid:2)xes in MOAS con(cid:3)icts, 55.2% for type-2
attacks, 71.0% for subMOAS con(cid:3)icts, and 90.1% for type-
4 attacks.
Geographic information of pre(cid:2)xes: In our current im-
plementation, we use the NetGeo [12] database, developed
by CAIDA to map IP addresses and AS numbers to geo-
graphic locations, providing detailed longitude and latitude
values for 98.4% of all 198,146 pre(cid:2)xes. We plan to explore
other techniques [37].
5.3. Real-time detection
To understand our system performance of real-time de-
tection, we measure BGP update rate, detected anomaly
Figure 4. The probing time distribution.
rate, the probing time of different attack types, and the
memory usage of the prototype. We use RouteViews data
for its better coverage. We simulate update processing by
feeding RouteViews Data into the Monitor Module.
Update rate: The update rate determines the workload of
our system. We take one week’s updates (from 04/01/2006
to 04/07/2006) from RouteViews and calculate the average
update rate for each BGP feed over a period of the seven
days. The maximum update rate is 12 updates/second, the
minimum rate is less than 1 update/second, and the average
rate is about 2.45 updates/second. Because the classi(cid:2)cation
process does not involve active probings, even a desktop
machine can easily handle many BGP feeds.
Anomaly rate: The anomaly rate is the number of suspi-
cious updates per unit time after classi(cid:2)cation. This deter-
mines the rate of active probing to detect hijacking attacks.
Table 2 show the anomaly rate for each of four hijacking
types using one day of RouteViews data. As illustrated in
the (cid:2)gure, the average anomaly rates for all attack types are
usually small leading to relatively low overhead. Given that
all the probing can be done in parallel, our system can easily
scale to monitoring an even larger number of BGP feeds.
Probing time: For each anomalous BGP update, the sys-
tem performs active probing to identify IP hijacking. In the
current implementation, we adopt four probing techniques:
Nmap scan, IP ID probing, ICMP timestamp probing, and
re(cid:3)ect scan. Based on one week’s experiments, probing du-
ration distribution is shown in Figure 4.
In general, the
probing takes less than 10 minutes, with the average time
of less than 3 minutes for Nmap, and less than 4 minutes
for re(cid:3)ect-scan (mostly due to the overhead of (cid:2)nding idle
hosts and open ports). Our prototype implementation can
easily handle much a higher anomaly rate.
5.4. Deployment and Operational issues
Our system requires neither end-host cooperation nor
modi(cid:2)cation of existing protocols, making it easily and in-
crementally deployable in the current Internet. We highlight
two important operational issues here. First, although any
network can deploy our system to detect all potential hi-
jacking attacks on the Internet, in general each AS starts
probing only when it suspects its own network is under hi-
jacking attacks. Thus no (cid:3)ash crowd will occur toward a
victim network. On the other hand, our system can also be
deployed on a few centralized servers monitoring hijacking
attacks for the entire Internet and notifying victims via some
out-of-band channels [33]. Second, asking victim ASes to
probe the suspicious pre(cid:2)x can offer additional advantages.
Fingerprinting may be limited by (cid:2)rewalls in some destina-
tion networks blocking external probing packets. However,
if the probing is initiated from inside the network to identify
if external networks can reach its own network correctly,
the probing packets are usually permitted by the (cid:2)rewalls,
facilitating the collection of con(cid:3)icting (cid:2)ngerprints. Thus,
ASes that are suspicious of being hijacked (informed by the
monitoring module)can select one probing location inside
its own network and another location near the culprit AS to
collect con(cid:2)rming evidence of the hijacking attack.
6. Evaluation
We next describe results in data probing and evaluate the
effectiveness of the detection system by illustrating inter-
esting results collected during a two weeks time period, in-
cluding validation using IP anycast of root DNS servers, a
special legitimate case of IP address hijacking, as well as
correlation with known spam source IPs.
6.1. Monitoring results
We now present some interesting results obtained from
over 253 hours of real-time monitoring across two weeks
(We do not have results for the remaining hours due to net-
work problems with the BGP monitor.) The type and num-
ber of anomalies are summarized in Table 3. The rate is av-
eraged over all 7 feeds monitored. We implemented probing
for IP-ID and ICMP timestamp on Planetlab using Scrip-
troute [44] and re(cid:3)ect-scan using hping [43]. Probing to the
same IP across different paths are conducted roughly simul-