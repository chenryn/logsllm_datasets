# 并查集
并查集是一种树型的数据结构，用于处理一些不交集（Disjoint Sets）的合并及查询问题
- 连接问题
## find
- find操作返回该节点连接的节点
```java
int find(int p) {
    return data[p];
}
```
另外一种实现，通过判断两个节点是否拥有同样的祖先来判断是否相连
```java
while (p != parent[p]) {
    p = parent[p];
}
return p;
```
## isConnected
- 判断两个节点是否连接在一起的（判断这两个节点是否连接了同一个节点）
```java
boolean isConnected(int p, int q) {
    return find(p) == find(q);
}
```
## union
- 连接两个节点（将一个节点指向另外一个节点）
```java
int pid = find(p);
int qid = find(q);
if (pid == qid){
    return;
}
for (int i = 0; i  rank[qRoot])) {
    parent[qRoot] = pRoot;
} else {
    parent[pRoot] = qRoot;
    rank[qRoot] += 1;
}
```
## 路径压缩
- find
```java
while (p != parent[p]) {
    parent[p]=parent[parent[p]];
    p = parent[p];
}
return p;
```