### Content Model and Security in Social Networks

#### Introduction
With the increasing number of users on social networks, these platforms are becoming more frequent targets for attacks. The large user base not only amplifies the impact of vulnerabilities but also increases the likelihood of successful attacks.

#### Offsite Content Attacks
Offsite content is beyond the control of the social network. Malicious actors can hijack calls to offsite content and redirect requests. Many sites that allow linking to offsite content do so across their entire platform, providing multiple opportunities for attackers to link to their malicious content.

#### Attacking with the IMG Tag
The IMG tag is often exploited in Cross-Site Scripting (XSS) attacks through attributes like ONERROR and ONCLICK. Even if a site sanitizes for XSS, links to offsite content can still be used to attack both external systems and the social network itself. For example, a high-traffic profile might receive thousands of views daily, and simply viewing the profile can trigger a request. This creates numerous opportunities for attackers to forge requests and exploit clients.

#### Request Forgeries and Social Networks
We identified several issues related to request forgery on various social networking sites. These forgeries can occur within the same site (Server-Side Request Forgery, SSRF) or across different sites (Cross-Site Request Forgery, CSRF). For instance, viewing a page on one site could trigger a CSRF attack, causing the user to install an app, send a message, or add a friend on another site.

#### Attacking "Innocuous" Functions
Some functions, such as logging out, are often overlooked in terms of security. However, these seemingly harmless functions can be exploited to create denial-of-service conditions. For example, an attacker can forge a request to log out a user, effectively preventing them from accessing their account. This can be particularly problematic for administrators trying to remove malicious content, as they may be logged out before completing the task.

#### Combining Social and Technical Attacks
Combining social engineering and technical attacks can increase the effectiveness of the overall attack. For instance, an attacker might first launch a technical attack to assume someone's identity, then create a new profile and re-add the individual's friends, claiming that something happened to their original profile. A complementary technical attack could block communication from the individual's account, making it difficult for the real user to alert their contacts.

#### Attacking Social Network Applications
Social network applications are vulnerable to the same types of attacks as traditional web applications. These applications are often developed by individuals with limited programming and security experience. The low barrier to entry for creating and deploying applications on social networks means that many developers may unknowingly introduce vulnerabilities. Exploiting these vulnerabilities can allow malicious users to take actions in the name of others, potentially leading to the compromise of private information.

#### Social Network Applications as Attack Vectors
Social network applications extend the functionality of the platform and can be used to deliver attacks. These applications are rendered in a browser, giving users a false sense of security since they are not installed on their computers. Popular and "cool" applications can be easily targeted, and once deployed, they can be used to attack users across multiple social networks. The implied endorsement from the social network further enhances the credibility of these applications.

#### An Impersonation Experiment
To explore the potential for impersonation, we decided to create a doppelganger profile for a well-known figure in the InfoSec community, Marcus Ranum. We built a plausible profile using publicly available information and started building connections. Within 24 hours, we had created a credible profile and established rapport with high-value targets, including security professionals and family members. This experiment demonstrated the ease with which trust can be exploited in social networks.

#### Building Credibility Through Connections
On LinkedIn, we leveraged the "open networkers" community to quickly build a credible profile. By joining relevant security groups and sending connection requests, we were able to establish a network of connections within a short period. This rapid accumulation of connections made our profile appear legitimate and increased the potential for successful social engineering attacks.

#### Conclusion
The experiment highlighted the vulnerabilities in social networks, particularly the lack of identity validation and the ease with which trust can be manipulated. It underscores the need for robust security measures and user education to mitigate the risks associated with social engineering and technical attacks.