Ries 还说这种技术减少开发时间。 “snap 软件包允许开发人员向支持它的任何平台提供相同的二进制包，从而降低开发和测试成本，减少部署时间和提高更新速度。 “使用 snap 软件包，开发人员完可以全控制开发生命周期，并可以立即更新。 snap 包提供了所有必需的依赖项，因此开发人员可以选择定制他们使用的组件。”
### ResinOS: 为 IoT 而生的 Docker
Resin.io 公司，与其商用的 IoT 框架同名，最近剥离了该框架的基于 Yocto Linux 的 [ResinOS 2.0](http://hackerboards.com/can-linux-containers-save-iot-from-a-security-meltdown/%3Ca%20href=)，ResinOS 2.0 将作为一个独立的开源项目运营。 Ubuntu Core 在 snap 包中运行 Docker 容器引擎，ResinOS 在主机上运行 Docker。 极致简约的 ResinOS 抽离了使用 Yocto 代码的复杂性，使开发人员能够快速部署 Docker 容器。
![](/data/attachment/album/201705/06/190032ipi2niddepncp9cl.jpg)
*ResinOS 2.0 架构*
与基于 Linux 的 CoreOS 一样，ResinOS 集成了 systemd 控制服务和网络协议栈，可通过异构网络安全地部署更新的应用程序。 但是，它是为在资源受限的设备（如 ARM 黑客板）上运行而设计的，与之相反，CoreOS 和其他基于 Docker 的操作系统（例如基于 Red Hat 的 Project Atomic）目前仅能运行在 x86 上，并且更喜欢资源丰富的服务器平台。 ResinOS 可以在 20 中 Linux 设备上运行，并不断增长，包括 Raspberry Pi，BeagleBone 和Odroid-C1 等。
“我们认为 Linux 容器对嵌入式系统比对于云更重要，”Resin.io 的 Marinos 说。 “在云中，容器代表了对之前的进程的优化，但在嵌入式中，它们代表了姗姗来迟的通用虚拟化“
![](/data/attachment/album/201705/06/190035kjm2m0xzcrir7ezm.jpg)
*BeagleBone Black*
当应用于物联网时，完整的企业级虚拟机有直接访问硬件的限制的性能缺陷，Marinos 说。像 OSGi 和 Android 的Dalvik 这样的移动设备虚拟机可以用于 IoT，但是它们依赖 Java 并有其他限制。
对于企业开发人员来说，使用 Docker 似乎很自然，但是你如何说服嵌入式黑客转向全新的范式呢？ “Marinos 解释说，”ResinOS 不是把云技术的实践经验照单全收，而是针对嵌入式进行了优化。”此外，他说，容器比典型的物联网技术更好地包容故障。 “如果有软件缺陷，主机操作系统可以继续正常工作，甚至保持连接。要恢复，您可以重新启动容器或推送更新。更新设备而不重新启动它的能力进一步消除了故障引发问题的机率。”
据 Marinos 所说，其他好处源自与云技术的一致性，例如拥有更广泛的开发人员。容器提供了“跨数据中心和边缘的统一范式，以及一种方便地将技术、工作流、基础设施，甚至应用程序转移到边缘（终端）的方式。”
Marinos 说，容器中的固有安全性优势正在被其他技术增强。 “随着 Docker 社区推动实现镜像签名和鉴证，这些自然会转移并应用到 ResinOS，”他说。 “当 Linux 内核被强化以提高容器安全性时，或者获得更好地管理容器所消耗的资源的能力时，会产生类似的好处。
容器也适合开源 IoT 框架，Marinos 说。 “Linux 容器很容易与几乎各种协议、应用程序、语言和库结合使用，”Marinos 说。 “Resin.io 参加了 AllSeen 联盟，我们与使用 IoTivity 和 Thread的 伙伴一起合作。”
### IoT的未来：智能网关与智能终端
Marinos 和 Canonical 的 Ries 对未来物联网的几个发展趋势具有一致的看法。 首先，物联网的最初概念（其中基于 MCU 的端点直接与云进行通信以进行处理）正在迅速被雾化计算架构所取代。 这需要更智能的网关，也需要比仅仅在 ZigBee 和 WiFi 之间聚合和转换数据更多的功能。
其次，网关和智能边缘设备越来越多地运行多个应用程序。 第三，许多这些设备将提供板载分析，这些在最新的[智能家居集线器](http://hackerboards.com/linux-based-smart-home-hubs-advance-into-ai/)上都有体现。 最后，富媒体将很快成为物联网组合的一部分。
![](/data/attachment/album/201705/06/190037ke4m2ryq2prbfynq.jpg)
*最新设备网关: Eurotech 的 [ReliaGate 20-26](http://hackerboards.com/atom-based-gateway-taps-new-open-source-iot-cloud-platform/)*
![](/data/attachment/album/201705/06/190039y8433k6ifflokf3o.jpg)
*最新设备网关: Advantech 的 [UBC-221](http://hackerboards.com/compact-iot-gateway-runs-yocto-linux-on-quark/)*
“智能网关正在接管最初为云服务设计的许多处理和控制功能，”Marinos 说。 “因此，我们看到对容器化的推动力在增加，可以在 IoT 设备中使用类似云工作流程来部署与功能和安全相关的优化。去中心化是由移动数据紧缩、不断发展的法律框架和各种物理限制等因素驱动的。”
Ubuntu Core 等平台正在使“可用于网关的软件爆炸式增长”，Canonical 的 Ries 说。 “在单个设备上运行多个应用程序的能力吸引了众多单一功能设备的用户，以及现在可以产生持续的软件收入的设备所有者。”
![](/data/attachment/album/201705/06/190040zo4toydseossqhos.jpg)
*两种 IoT 网关: [MyOmega MYNXG IC2 Controller](http://hackerboards.com/wireless-crazed-customizable-iot-gateway-uses-arm-or-x86-coms/)*
![](/data/attachment/album/201705/06/190041lnub3ij4kaub7ckb.jpg)
*两种 IoT 网关: TechNexion 的 [LS1021A-IoT Gateway](http://hackerboards.com/iot-gateway-runs-linux-on-qoriq-accepts-arduino-shields/)*
不仅是网关 - 终端也变得更聪明。 “阅读大量的物联网新闻报道，你得到的印象是所有终端都运行在微控制器上，”Marinos 说。 “但是我们对大量的 Linux 终端，如数字标牌，无人机和工业机械等直接执行任务，而不是作为操作中介（数据转发）感到惊讶。我们称之为影子 IoT。”
Canonical 的 Ries 同意，对简约技术的专注使他们忽视了新兴物联网领域。 “轻量化的概念在一个发展速度与物联网一样快的行业中初现端倪，”Ries 说。 “今天的高级消费硬件可以持续为终端供电数月。”
虽然大多数物联网设备将保持轻量和“无头”（一种配置方式，比如物联网设备缺少显示器，键盘等），它们装备有如加速度计和温度传感器这样的传感器并通过低速率的数据流通信，但是许多较新的物联网应用已经使用富媒体。 “媒体输入/输出只是另一种类型的外设，”Marinos 说。 “总是存在多个容器竞争有限资源的问题，但它与传感器或蓝牙竞争天线资源没有太大区别。”
Ries 看到了工业和家庭网关中“提高边缘智能”的趋势。 “我们看到人工智能、机器学习、计算机视觉和上下文意识的大幅上升，”Ries 说。 “为什么要在云中运行面部检测软件，如果相同的软件可以在边缘设备运行而又没有网络延迟和带宽及计算成本呢？“
当我们在这个物联网系列的[开篇故事](http://hackerboards.com/an-open-source-perspective-on-the-internet-of-things-part-1/)中探索时，我们发现存在与安全相关的物联网问题，例如隐私丧失和生活在监视文化中的权衡。还有一些问题如把个人决策交给可能由他人操控的 AI 裁定。这些不会被容器，快照或任何其他技术完全解决。
如果 AWS Alexa 可以处理生活琐事，而我们专注在要事上，也许我们会更快乐。或许有一个方法来平衡隐私和效用，现在，我们仍在探索，如此甚好。
---
via: 
作者：[Eric Brown](http://hackerboards.com/can-linux-containers-save-iot-from-a-security-meltdown/) 译者：[firstadream](https://github.com/firstadream) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出