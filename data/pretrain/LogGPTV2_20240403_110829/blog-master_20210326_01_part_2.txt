  65     int2col int2_minmax_multi_ops,  
  66     int4col int4_minmax_multi_ops,  
  67     oidcol oid_minmax_multi_ops,  
  68     tidcol tid_minmax_multi_ops,  
  69     float4col float4_minmax_multi_ops,  
  70     float8col float8_minmax_multi_ops,  
  71     macaddrcol macaddr_minmax_multi_ops,  
  72     inetcol inet_minmax_multi_ops,  
  73     cidrcol inet_minmax_multi_ops,  
  74     datecol date_minmax_multi_ops,  
  75     timecol time_minmax_multi_ops,  
  76     timestampcol timestamp_minmax_multi_ops,  
  77     timestamptzcol timestamptz_minmax_multi_ops,  
  78     intervalcol interval_minmax_multi_ops,  
  79     timetzcol timetz_minmax_multi_ops,  
  80     numericcol numeric_minmax_multi_ops,  
  81     uuidcol uuid_minmax_multi_ops,  
  82     lsncol pg_lsn_minmax_multi_ops  
  83 );  
  84 DROP INDEX brinidx_multi;  
  85 CREATE INDEX brinidx_multi ON brintest_multi USING brin (  
  86     int8col int8_minmax_multi_ops,  
  87     int2col int2_minmax_multi_ops,  
  88     int4col int4_minmax_multi_ops,  
  89     oidcol oid_minmax_multi_ops,  
  90     tidcol tid_minmax_multi_ops,  
  91     float4col float4_minmax_multi_ops,  
  92     float8col float8_minmax_multi_ops,  
  93     macaddrcol macaddr_minmax_multi_ops,  
  94     inetcol inet_minmax_multi_ops,  
  95     cidrcol inet_minmax_multi_ops,  
  96     datecol date_minmax_multi_ops,  
  97     timecol time_minmax_multi_ops,  
  98     timestampcol timestamp_minmax_multi_ops,  
  99     timestamptzcol timestamptz_minmax_multi_ops,  
 100     intervalcol interval_minmax_multi_ops,  
 101     timetzcol timetz_minmax_multi_ops,  
 102     numericcol numeric_minmax_multi_ops,  
 103     uuidcol uuid_minmax_multi_ops,  
 104     lsncol pg_lsn_minmax_multi_ops  
 105 ) with (pages_per_range = 1);  
 106 CREATE TABLE brinopers_multi (colname name, typ text,  
 107     op text[], value text[], matches int[],  
 108     check (cardinality(op) = cardinality(value)),  
 109     check (cardinality(op) = cardinality(matches)));  
 110 INSERT INTO brinopers_multi VALUES  
 111     ('int2col', 'int2',  
 112      '{>, >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=}',  
 137      '{0, 0}',  
 138      '{100, 100}'),  
 139     ('int8col', 'int4',  
 140      '{>, >=}',  
 141      '{0, 0}',  
 142      '{100, 100}'),  
 143     ('int8col', 'int8',  
 144      '{>, >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=}',  
 177      '{10.2.14.231/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',  
 178      '{1, 100, 100, 125, 125}'),  
 179     ('inetcol', 'cidr',  
 180      '{, >=}',  
 181      '{255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',  
 182      '{100, 100, 125, 125}'),  
 183     ('cidrcol', 'inet',  
 184      '{=, , >=}',  
 185      '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',  
 186      '{2, 100, 100, 125, 125}'),  
 187     ('cidrcol', 'cidr',  
 188      '{=, , >=}',  
 189      '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',  
 190      '{2, 100, 100, 125, 125}'),  
 191     ('datecol', 'date',  
 192      '{>, >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, , >=, =, <=, <, IS, IS NOT}',  
 229      '{0/1200, 0/1200, 44/455222, 198/1999799, 198/1999799, NULL, NULL}',  
 230      '{100, 100, 1, 100, 100, 25, 100}');  
 231 DO $x$  
 232 DECLARE  
 233     r record;  
 234     r2 record;  
 235     cond text;  
 236     idx_ctids tid[];  
 237     ss_ctids tid[];  
 238     count int;  
 239     plan_ok bool;  
 240     plan_line text;  
 241 BEGIN  
 242     FOR r IN SELECT colname, oper, typ, value[ordinality], matches[ordinality] FROM brinopers_multi, unnest(op) WITH ORDINALITY AS oper LOOP  
 243   
 244         -- prepare the condition  
 245         IF r.value IS NULL THEN  
 246             cond := format('%I %s %L', r.colname, r.oper, r.value);  
 247         ELSE  
 248             cond := format('%I %s %L::%s', r.colname, r.oper, r.value, r.typ);  
 249         END IF;  
 250   
 251         -- run the query using the brin index  
 252         SET enable_seqscan = 0;  
 253         SET enable_bitmapscan = 1;  
 254   
 255         plan_ok := false;  
 256         FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond) LOOP  
 257             IF plan_line LIKE '%Bitmap Heap Scan on brintest_multi%' THEN  
 258                 plan_ok := true;  
 259             END IF;  
 260         END LOOP;  
 261         IF NOT plan_ok THEN  
 262             RAISE WARNING 'did not get bitmap indexscan plan for %', r;  
 263         END IF;  
 264   
 265         EXECUTE format($y$SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond)  
 266             INTO idx_ctids;  
 267   
 268         -- run the query using a seqscan  
 269         SET enable_seqscan = 1;  
 270         SET enable_bitmapscan = 0;  
 271   