f
o
t
n
e
c
r
e
p
 0
3
32 probes
20 probes
10 probes
5 probes
2 probes
1 probes
5
10
20
30
50
70 100
200
number of v4 + v6 address in equiv. class
Figure 6: Percent of v4 + v6 address in equivalence
classes of at least a given size, for open resolvers probed
32 times on September 14, 2012
3.3 Active DNS Siblings
As the passive-DNS data set was collected over a six-
month period, and contains large equivalence classes,
discussed in Section 4.3, we next turn to understanding
the results gathered over a much shorter time frame using
the active DNS measurement technique of §2.3. We ﬁrst
determine the open resolvers in the passive-DNS data set,
for which we ﬁnd 6,581 IPv4 and 2,658 IPv6. We probe
each of these open resolvers via active DNS measure-
ment 32 times on Sept 14, 2012, requesting resolution
for our special domain which induces chains of lookups
across IPv4 and IPv6 DNS glue. Thus, we obtain a data
set over a short period of time, about 2 hours, and for
which the same set of nameservers is probed repeatedly.
Each 4-tuple of v4/v6/v4/v6 yields either 1, 2, or 4 (v4,
v6) address pairs, depending on whether the two v4’s and
two v6’s are the same.
We ﬁrst consider the marginal beneﬁt of repeated ac-
tive probing of the open resolvers. We examine those re-
solvers for which the 4-tuple is obtained at least 20 times
and then compute equivalence classes as obtained by dif-
ferent amounts of probing. Figure 6 shows the percent
of addresses that are in equivalence classes of at least a
given size, as a function of the number of probes. One
can view Figure 6 as the complementary distribution of
the size of the equivalence classes. For example, in the
case of 32 probes, 15% of the addresses are in equiv-
alence classes of size at least 15. Note that with the
x-axis beginning at 3, one can infer the percent of ad-
dresses in 1-1 equivalence classes, e.g. the y-intercept of
23% means that 77% of the addresses are in an equiva-
lence class of size 2. The curves that are higher up in the
Figure indicate that, overall, the equivalence classes are
larger and more complex – the distribution has a heavier
tail. The lowest curve in the plot is of equivalence classes
 20
 15
 10
 5
’
s
S
A
/
s
e
x
i
f
e
r
p
/
s
s
e
r
d
d
a
f
o
t
n
e
c
r
e
p
 0
3
32 probes
omit AS’s 15169, 6939
32 probes, aggregate to prefixes (after)
omit AS’s 15169, 6939, aggregate to prefixes (after)
aggregate to AS’s (after)
omit AS’s 15169, 6939, aggregate to AS’s (after)
5
10
20
30
50
70 100
200
number of v4 + v6 address/prefixes/AS’s in equiv. class
Figure 7: Percent of v4 + v6 address/preﬁxes in equiva-
lence classes of at least a given size, for open resolvers
probed 32 times on September 14, 2012
from those 4-tuples discovered as a result of just the ﬁrst
probe to each of the nameservers. The next curve above
that one is from those 4-tuples discovered after the ﬁrst
two probes, and likewise, for the ﬁrst ﬁve, ten, twenty, ﬁ-
nally all 32 probes. The Figure shows that with increased
sampling, additional nameservers are discovered, and the
equivalence classes overall become larger.
Looking at the AS’s of the nameservers in the set of
32 probes, we ﬁnd that two play a signiﬁcant role in
the complexity of the equivalence classes: AS 15169
(Google) and AS 6939 (Hurricane Electric). Figure 7
again examines the actively collected DNS siblings, and
shows the impact of excluding these AS’s and/or aggre-
gating to preﬁxes, or to AS’s (after). The red (top) line
is the same as in Figure 6. Removing the two AS’s (the
green line) signiﬁcantly reduces the complexity. If the
addresses are then aggregated to preﬁxes, the resulting
equivalence classes of preﬁxes (the dark blue and purple
lines), as expected, are further simpliﬁed. Lastly, when
the addresses are aggregated to AS’s, the resulting equiv-
alence classes of AS’s (the light blue and dash-dot red
lines), are simpler still.
When AS 15169 and 6939 are included, one of equiv-
alence classes of AS’s is signiﬁcantly bigger than all the
others, and is of size 51-20. Figure 8 shows the struc-
ture of this equivalence class. Note that AS 15169 plays
a dominant role - if just one resolver in an AS uses
Google’s public DNS for either v4 or v6, then that AS
becomes paired with 15169. Off from the center, towards
the lower right of the Figure, AS 6939, Hurricane Elec-
tric [14], which provides 6in4 tunnels, plays a secondary
role in linking together other AS’s. When these two AS’s
are excluded, this large equivalence class is no longer
present, yielding the dash-dot red line in Figure 7.
Figure 8: Cluster plot of AS’s in 51-20 equivalence class
3.4 Active and Passive Validation
We examine the overlap between the nameserver pairs
found by the active and the passive techniques. Of ac-
tively discovered address pairs, 75% of the pairs are
present within a single passively-discovered equivalence
class (of any size). In other words, we verify that 75%
of the active sibling pairs are constituents of an equiva-
lence class created via the passive technique. This over-
lap between two different methodologies for ﬁnding sib-
lings, given the large difference in data collection dura-
tion, helps validate correctness of the two techniques.
To put this value of 75% in perspective, we perform an
analogous calculation using partitions of the active-DNS
data set itself in order to understand the consistency of
the results over time. In particular, we consider siblings
pairs received from open and forwarding resolvers that
obtain at least twenty-ﬁve 4-tuples via the active tech-
nique. For all such resolvers, we temporally divide re-
ceived sibling pairs from each into bins. The ﬁrst bin
contains the ﬁrst 10 sibling pairs received from each re-
solver, the second bin the next 10 pairs from each re-
solver, and so on. Thus each bin will have results from
all of these resolvers, and there will be results from each
of the resolvers in each of the bins. We compare the ad-
dress pair overlap between bins to determine the overall
temporal consistency of sibling result sets obtain via re-
peated probing. Hypothetically, if each open resolver re-
turns the same 4-tuple as a result of each probe, then each
bin would contain the same set of pairs, and the overlap
is 100%. For each of possible pairs of bins, we compute
the percent of address pairs that are in common. We ﬁnd
an inter-bin consistency ranging from from 75% to 77%
with a median value of 77%. Different partitions of the
multiple probes yield similar results, ranging from 65%
to 85% with median values in the mid 70’s. We are en-
couraged that, across the multiple active probes sent over
8
Table 2: Alexa 100K Targeted Machine-Sibling Infer-
ence
Case
v4 and v6 non-monotonic (possible siblings)
v4 or v6 non-monotonic (non-siblings)
v4 and v6 no timestamps (possible siblings)
v4 or v6 no timestamps (non-sibling)
Skew-based siblings
Skew-based non-siblings
Total
Count
109 (7.8%)
140 (10.0%)
94 (6.7%)
101 (7.2%)
839 (60.0%)
115 (8.3%)
1398 (100%)
a short time span, we obtain the same level of consis-
tency as when we compare this set of recent probes with
the passive collection done over a six-month period.
3.5 Web Server Machine Siblings
We evaluate our TCP-based clock skew machine-sibling
detection technique on the Alexa [4] top 100,000 web-
sites. For each Alexa website, we record the DNS A and
any AAAA record on May 3, 2012. From the top 100,000
sites, we ﬁnd 1398 (≈ 1.4%) with IPv6 DNS records3.
We then repeatedly probe each site via IPv4 and IPv6
using HTTP by fetching the root HTML page. Probing
proceeds sequentially using the deterministic addresses;
no DNS lookups are performed during fetching. We con-
servatively use t = 1.0 degree in applying the method of
§2.2.
Table 2 depicts the machine sibling inference of the
1398 Alexa sites advertising IPv4 and IPv6 records in the
DNS. We identify 839 siblings (60.0%), 356 non-siblings
(25.5%), and 210 possible siblings (14.5%).
Two exceptions can cause our inference technique to
fail: the timestamps are not monotonic across TCP ﬂows,
or the TCP timestamp option may fail to be negotiated.
A total of 195 sites (14.0%) did not negotiate timestamps
for at least one of the addresses. We learned via personal
communication with a website operator that the lack of
timestamps in this one case is due to a front-end load bal-
ancing device; we surmise that similar middleboxes are
the cause of the remaining instances missing timestamps
in the TCP negotiation. When neither the IPv6 nor the
IPv4 address support timestamps, we can only weakly
conclude that they are possible siblings. However, if one
address supports timestamps and the other does not, they
are positively non-siblings.
Second, some TCPs, notably BSD-based [33], ran-
domize the initial TCP timestamp values on a per-ﬂow
basis. Again, when one of the two addresses presents
randomized values and the other does not, we infer a
non-sibling relationship.
3IPv6 yield is slightly higher for Alexa top 10K: ∼ 2%.
9
IPv4
Inferred IPv4 Skew
IPv6
Interferred IPv6 Skew
 80
 70
 60
 50
 40
 30
 20
 10
 0
)
c
e
s
m
(
t
e
s
f
f
o
d
e
v
r
e
s
b
o
-10
 0
 500
 1000
 2000
 1500
 2500
measurement time(sec)
 3000
 3500
 4000
Figure 9: Non-Siblings:
www.socialsecurity.gov via IPv4 and IPv6
Inferred clock skew to
It is important to note that while it is sometimes pos-
sible to infer siblings on the basis of application layer
ﬁngerprints, for instance the HTTP headers in our exper-
iment, this is not a reliable mechanism. Figure 9 presents
one example in our dataset to highlight the advantage of
using the clock skew ﬁngerprinting method. We probe
www.socialsecurity.gov and receive identical HTTP
headers via either IPv4 or IPv6 in response. However,
Figure 9 suggests that the IPv4 and IPv6 addresses are
not machine-siblings – further implying that these two
addresses will not have correlated failures and will be-
have differently under attack than if they were addresses
of the same machine.
Among our inferred sibling and non-sibling popula-
tions, we examine the origin autonomous system (AS)
of the routed preﬁxes to which the addresses belong, as
viewed from the public routeviews [24] BGP table. The
origin AS of the corresponding IPv4 and IPv6 addresses
of a website allow us to determine whether non-siblings
are within the same network, if not the same host – and
better understand the impact of measurement studies that
are not mindful of siblings (e.g. those that simply pick
a server’s destination IPv4 and IPv6 addresses and mea-
sure path or performance properties, ignoring that the ad-
dresses may be on different machines or networks).
Of the 1398 websites in the Alexa top 100,000 with
IPv6 records, 246 (17.6%) have IPv4 and IPv6 addresses
that reside in different ASes. 49 of 115 skew-based non-
siblings (43%) are in different ASes, while 106 of 839
skew-based siblings (12.6%) are in different ASes. Many
of the non-siblings in different ASes are due to content
distribution network (CDN) effects, where for instance,
the IPv4 version of the site is hosted by the CDN, while
the IPv6 version of the site is not. Manual investigation
of instances of siblings in different ASes reveals some
that are different, but related to the same organization.
In future work, we plan to use AS-to-organization map-
pings [7] to better understand these instances of divergent
ASes between IPv4 and IPv6.
l
s
e
s
s
a
C
v
u
q
E
i
t
i
n
e
m
p
u
q
E
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
 1
 2
 3
 4
 5
 6
Num Machine Equiv Classes
l
i
s
e
s
s
a
C
v
u
q
E
S
N
D
e
v
i
t
c
A
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
 0.1
 0
 1
Size Largest Machine Equiv Class / Size of Equipment Equiv Class
 0.9
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
Figure 10: Relationship between equipment siblings and