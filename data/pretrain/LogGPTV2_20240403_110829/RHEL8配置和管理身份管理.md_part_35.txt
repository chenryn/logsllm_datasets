:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_configuring-and-managing-idm.html#using-ansible-to-ensure-a-host-group-is-a-member-of-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm}使用 Ansible 确保主机组是 IdM RBAC 角色的成员 {.title}
:::
作为在身份管理 (IdM)
中管理基于角色的访问控制的系统管理员，您可能希望确保特定的主机或主机组与特定角色关联。以下示例描述了如何确保自定义
[**web_administrator**]{.strong} 角色可以管理运行 `HTTP`{.literal}
服务的 IdM 主机组的 [**web_servers**]{.strong} 组。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已创建了一个 [Ansible
    清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm.html "第 26 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}，其具有要在其上配置
    IdM 服务器的完全限定域名(FQDN)。
-   您的 Ansible 清单文件位于
    [**\~/[*\*]{.emphasis}/**]{.strong} 目录中。
-   [**web_administrator**]{.strong} 角色存在于 IdM 中。
-   [**web_servers**]{.strong} 主机组存在于 IdM 中。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*\*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~//
    ```
2.  创建位于 `/usr/share/doc/ansible-freeipa/playbooks/role/`{.literal}
    目录的 `role-member-hostgroup-present.yml`{.literal} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/role/role-member-hostgroup-present.yml role-member-hostgroup-present-copy.yml
    ```
3.  打开 `role-member-hostgroup-present-copy.yml`{.literal} Ansible
    playbook 文件以进行编辑。
4.  通过在 `iparole`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为您要分配的角色的名称。
    -   将 `hostgroup`{.literal} 列表设置为 hostgroup 的名称。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Playbook to manage IPA role with members.
      hosts: ipaserver
      become: yes
      gather_facts: no
      tasks:
      - iparole:
          ipaadmin_password: Secret123
          name: web_administrator
          hostgroup:
          - web_servers
          action: member
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i ~//inventory role-member-hostgroup-present-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关如何使用 Ansible Vault
    将密码存储在单独的文件中的更多信息，或者将其加密为 playbook
    文件中的变量，请参阅[使用 Ansible Vault
    加密内容](https://docs.ansible.com/ansible/latest/user_guide/vault.html){.link}。
-   有关 IdM 中角色概念的更多信息，请参阅 [IdM
    中的角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_configuring-and-managing-idm.html#roles-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的角色"){.link}。
-   有关使用 `iparole`{.literal} 模块的更多 Ansible playbook
    示例，请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-role`{.literal} Markdown 文件。该文件还包含
    `iparole`{.literal} 变量的定义。
-   有关使用 `iparole`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/iparole`{.literal} 目录。
:::
:::
:::
[]{#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm}第 28 章 使用 Ansible playbook 管理 RBAC 特权 {.title}
:::
基于角色的访问控制 (RBAC)
是一种基于角色、特权和权限定义的策略中立访问控制机制。尤其是在大型公司，使用
RBAC 可以帮助创建具有各个职责领域的管理员分层系统。
本章介绍了以下操作，以使用 Ansible playbook 管理身份管理 (IdM) 中的 RBAC
特权：
::: itemizedlist
-   [使用 Ansible 确保存在自定义 RBAC
    特权](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-a-custom-idm-rbac-privilege-is-present_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保存在自定义 IdM RBAC 特权"){.link}
-   [使用 Ansible 确保自定义 IdM RBAC
    特权中存在成员权限](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-member-permissions-are-present-in-a-custom-idm-rbac-privilege_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保自定义 IdM RBAC 特权中存在成员权限"){.link}
-   [使用 Ansible 确保 IdM RBAC
    特权不包括权限](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-an-idm-rbac-privilege-does-not-include-a-permission_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保 IdM RBAC 特权不包括权限"){.link}
-   [使用 Ansible 重命名自定义 IdM RBAC
    特权](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-rename-a-custom-idm-rbac-privilege_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 重命名自定义 IdM RBAC 特权"){.link}
-   [使用 Ansible 确保缺少 IdM RBAC
    特权](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-an-idm-rbac-privilege-is-absent_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保缺少 IdM RBAC 特权"){.link}
:::
::: itemizedlist
**先决条件**
-   您已了解 [RBAC
    的概念和原则](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_configuring-and-managing-idm.html "第 27 章 在 IdM 中使用 Ansible playbook 管理基于角色的访问控制"){.link}。
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-a-custom-idm-rbac-privilege-is-present_using-ansible-playbooks-to-manage-rbac-privileges}使用 Ansible 确保存在自定义 IdM RBAC 特权 {.title}
:::
要在 Identity Management (IdM) 基于角色的访问控制 (RBAC)
中有一个完全设计的自定义权限，您需要逐步进行：
::: orderedlist
1.  创建没有附加权限的特权。
2.  将您选择的权限添加到特权。
:::
以下流程描述了如何使用 Ansible playbook
创建空特权，以便稍后您可以向它添加权限。这个示例描述了如何创建名为
[**full_host_administration**]{.strong}
的特权，它旨在组合与主机管理相关的所有 IdM 权限。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已创建了一个 [Ansible
    清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm.html "第 26 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}，其具有要在其上配置
    IdM 服务器的完全限定域名(FQDN)。
-   您的 Ansible 清单文件位于
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录中。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible-freeipa/playbooks/privilege/`{.literal}
    目录中的 `privilege-present.yml`{.literal} 文件副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/privilege/privilege-present.yml privilege-present-copy.yml
    ```
3.  打开 `privilege-present-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipaprivilege`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为新特权
        [**full_host_administration**]{.strong} 的名称。
    -   （可选）利用 `description`{.literal} 变量描述特权。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Privilege present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure privilege full_host_administration is present
        ipaprivilege:
          ipaadmin_password: Secret123
          name: full_host_administration
          description: This privilege combines all IdM permissions related to host administration
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory privilege-present-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-member-permissions-are-present-in-a-custom-idm-rbac-privilege_using-ansible-playbooks-to-manage-rbac-privileges}使用 Ansible 确保自定义 IdM RBAC 特权中存在成员权限 {.title}
:::
要在 Identity Management (IdM) 基于角色的访问控制 (RBAC)
中有一个完全设计的自定义权限，您需要逐步进行：
::: orderedlist
1.  创建没有附加权限的特权。
2.  将您选择的权限添加到特权。
:::
以下流程描述了如何使用 Ansible playbook
向上一步中创建的特权添加权限。这个示例描述了如何将与主机管理相关的所有
IdM 权限添加到名为 [**full_host_administration**]{.strong}
的特权中。默认情况下，权限在
`Host Enrollment`{.literal}、`Host Administrators`{.literal} 和
`Host Group Administrator`{.literal} 特权之间分发。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已创建了一个 [Ansible
    清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm.html "第 26 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}，其具有要在其上配置
    IdM 服务器的完全限定域名(FQDN)。
-   您的 Ansible 清单文件位于
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录中。
-   [**[*full_host_administration*]{.emphasis}**]{.strong}
    特权存在。有关如何使用 Ansible 创建特权的详情，请参阅[使用 Ansible
    确保存在自定义 IdM RBAC
    特权](#using-ansible-playbooks-to-manage-rbac-privilegesconfiguring-and-managing-idm.html#using-ansible-to-ensure-a-custom-idm-rbac-privilege-is-present_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保存在自定义 IdM RBAC 特权"){.link}。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible-freeipa/playbooks/privilege/`{.literal}
    目录中的 `privilege-member-present.yml`{.literal} 文件副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/privilege/privilege-member-present.yml privilege-member-present-copy.yml
    ```
3.  打开 `privilege-member-present-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipaprivilege`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务的 `name`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为特权的名称。
    -   将 `permission`{.literal} 列表设置为您要包含在权限中的权限名称。
    -   确保 `action`{.literal} 变量设置为 `member`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Privilege member present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that permissions are present for the "full_host_administration" privilege
        ipaprivilege:
          ipaadmin_password: Secret123
          name: full_host_administration
          permission:
          - "System: Add krbPrincipalName to a Host"
          - "System: Enroll a Host"
          - "System: Manage Host Certificates"
          - "System: Manage Host Enrollment Password"
          - "System: Manage Host Keytab"
          - "System: Manage Host Principals"
          - "Retrieve Certificates from the CA"
          - "Revoke Certificate"
          - "System: Add Hosts"
          - "System: Add krbPrincipalName to a Host"
          - "System: Enroll a Host"
          - "System: Manage Host Certificates"
          - "System: Manage Host Enrollment Password"
          - "System: Manage Host Keytab"
          - "System: Manage Host Keytab Permissions"
          - "System: Manage Host Principals"
          - "System: Manage Host SSH Public Keys"
          - "System: Manage Service Keytab"
          - "System: Manage Service Keytab Permissions"
          - "System: Modify Hosts"
          - "System: Remove Hosts"
          - "System: Add Hostgroups"
          - "System: Modify Hostgroup Membership"
          - "System: Modify Hostgroups"
          - "System: Remove Hostgroups"
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory privilege-member-present-copy.yml
    ```
:::
:::