## Systemtap Formatted output  
### 作者                               
digoal                                 
### 日期                                                
2013-10-10                             
### 标签                             
PostgreSQL , Linux , systemtap , stap , dtrace , probe                              
----                                       
## 背景          
```  
本文要讲的是Systemtap中的格式话输出函数 :   
print, println, printf, printd, printdln, sprint, sprintf.   
9.1 print  
print函数可用于打印输出任何类型,   
General syntax:  
print ()  
This function prints a single value of any type.  
例如 :   
[root@db-172-16-3-39 ~]# stap -e 'probe kernel.function("icmp_echo") {print($skb$$); exit()}'  
{.next=0x0, .prev=0x0, .sk=0x0, .tstamp={.off_sec=1381363468, .off_usec=801990}, .dev=0xffffffff80352b80, .input_dev=0xffffffff80352b80, .h={.th=0xffff810119cbd624, .uh=0xffff810119cbd624, .icmph=0xffff810119cbd624, .igmph=0xffff810119cbd624, .ipiph=0xffff810119cbd624, .ipv6h=0xffff810119cbd624, .raw="}, .nh={.iph=0xffff810119cbd610, .ipv6h=0xffff810119cbd610, .arph=0xffff810119cbd610, .raw="E"}, .mac={.raw=""}, .dst=0xffff8101e76eae40, .sp=0x0, .cb="", .len=56, .data_len=0, .mac_len=14, .csum=1265218710  
[root@db-172-16-3-39 ~]# stap -e 'global s; probe begin {for(i=0;i:1:65  
     source: global s; probe begin {for(i=0;i for (i = 97; i  printf("%3d: %1b%1b%1b\n", i, i, i-32, i-64)  
> exit()  
> }'  
 97: aA!  
 98: bB"  
 99: cC#  
100: dD$  
101: eE%  
102: fF&  
103: gG'  
104: hH(  
105: iI)  
106: jJ*  
107: kK+  
108: lL,  
109: mM-  
Another example:  
[root@db-172-16-3-39 ~]# stap -e 'probe begin{printf("%b%b", 0xc0dedbad, 0x12345678);exit()}'| hexdump -C  
00000000  ad db de c0 00 00 00 00  78 56 34 12 00 00 00 00  |........xV4.....|  
00000010  
Another example:  
[root@db-172-16-3-39 ~]# stap -e 'probe begin{  
> printf("%1b%1b%1blo %1b%1brld\n", 72,101,108,87,111)  
> exit()  
> }'  
Hello World  
9.3 printd  
用于输出带分隔符的字符串.  
General syntax:  
printd (delimiter:string, ...)  
This function takes a string delimiter and two or more values of any type, then prints the values with the delimiter interposed.   
The delimiter must be a literal string constant.  
For example:  
printd("/", "one", "two", "three", 4, 5, 6)  
prints:  
one/two/three/4/5/6  
9.4 printdln  
General syntax:  
printdln (delimiter:string, ...)  
This function operates like printd, but also appends a newline.  
与printd类似, 只是末尾自动添加一个换行.  
[root@db-172-16-3-39 ~]# stap -e 'probe begin {printdln("/", "one", "two", "three", 4, 5, 6); exit()}'  
one/two/three/4/5/6  
[root@db-172-16-3-39 ~]#   
9.5 println  
General syntax:  
println ()  
This function prints a single value like print, but also appends a newline.  
println(), 就是带换行的print()  
[root@db-172-16-3-39 ~]# stap -e 'probe begin {print("hello"); exit()}'  
hello[root@db-172-16-3-39 ~]# stap -e 'probe begin {println("hello"); exit()}'  
hello  
9.6 sprint  
General syntax:  
sprint:string ()  
This function operates like print, but returns the string rather than printing it.  
sprint和print类似, 但是sprint不是将字符串输出到标准输出, 而是返回字符串.  
sprint不能单独执行, 需要赋值给变量.  
[root@db-172-16-3-39 ~]# stap -e 'probe begin {sprint("hello"); exit()}'  
WARNING: Eliding side-effect-free expression : identifier 'sprint' at :1:14  
 source: probe begin {sprint("hello"); exit()}  
                      ^  
[root@db-172-16-3-39 ~]# stap -e 'probe begin {var=sprint("hello"); println(var); exit()}'  
hello  
需要把特殊的标准输出转换为字符串是可以考虑使用sprint, 例如本文中的@hist_log例子  
9.7 sprintf  
General syntax:  
sprintf:string (fmt:string, ...)  
This function operates like printf, but returns the formatted string rather than printing it.  
sprint和printf类似, 但是sprintf不是将字符串输出到标准输出, 而是返回字符串.  
```  
## 参考  
1\. https://sourceware.org/systemtap/langref.pdf  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")