# *CTF 2019国际赛安胜ISEC WriteUp
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
2019年4月29日上午9:00，第五届XCTF国际联赛分站赛——*CTF
2019国际赛宣告圆满落幕。据官方报道，本次赛事共有来自71个国家和地区的1026支队伍参赛，参赛人数达5078人。安胜ISEC团队本着学习交流、共同提高的目的，与各队伍同台竞技、互相切磋，最终获得第五名的成绩。
榜单结果
本次比赛面向全球CTF战队，在全球不同地点同时开赛。从4月27日早上9:00开始，比赛持续48小时，赛题分为pwn、reverse、crypto、web、misc几大类型，偏重于二进制，考察点从基本的汇编指令，到更深一步的高级漏洞利用都有涉及，需要参赛选手有较强的二进制基础，更考验队员之间的默契配合程度。
想知道我们的参赛选手们是如何见招拆招、攻克一道道难题的吗？别急，WriteUp解题思路看这里…..
## MISC
###  misc1：She
Enjoy the game!
HINT：Please combine numbers in the order of the rooms  
解题  
通过分析下载文件发现是使用RPG Makr XP制作的一款游戏，下载RPG Maker XP V1.03
.exe软件，创建新项目，将项目中的Game.rxproj放到She目录下，打开文件即可进行游戏编辑，通过分析代码将第一只BOOS的攻击改为1。
图1
通过老鹰后，显示一些提示，会有幽灵找你，碰到要重新开始，通过编辑器将幽灵删除。
图2
有9个门，测试后37无条件打开，双击门判断门打开的前提条件，发现382157这个顺序，按照该顺序获取到的数值是371269，按照房间顺序排列得到213697。
图3
根据提示将拿到的数字进行MD5加密，得到d6f3fdffbcb462607878af65d059f274，即为flag。
###  misc2：babyflash
Recently my younger brother learnt how to make a flash.  
Here’s his first work.  
解题  
用JPEXS反编译flash.swf得到441张黑白图片和1个mp3文件。
图4
令黑的为1、白的为0利用python处理。
图5
图6
生成二维码。
图7
得到*ctf{half _flag_ &，用audacity打开mp3以频谱图显示。
图8
最后flag*ctf{half _flag_ &&_the_rest}。
###  misc3：otaku
One day,you and your otaku friend went to the comic expo together and he had a
car accident right beside you.Before he died,he gave you a USB hard disk which
contained this zip.Please find out his last wish.  
提示：The txt is GBK encoding.  
解题  
用winhex等工具打开压缩包去掉伪加密09标识，得到doc的一段话。
图9
Hello everyone, I am Gilbert. Everyone thought that I was killed, but actually
I survived. Now that I have no cash with me and I’m trapped in another
country. I cant contact Violet now. She must be desperate to see me and I dont
want her to cry for me. I need to pay 300 for the train, and 88 for the meal.
Cash or battlenet point are both accepted. I dont play the Hearthstone, and I
dont even know what is Rastakhans Rumble.  
利用python处理，将此写入txt，编码为gbk。
根据注释：  
压缩软件：winrar版本 5.70 beta 2  
配置：zip压缩文件（低压缩率）  
压缩方式：标准  
下载winrar
图10
压缩后进行明文攻击，密钥从1开始。
图11
成功得到口令My_waifu，再解压图片zsteg
flag.png，最后得到flag*ctf{vI0l3t_Ev3rg[@RdeN](https://github.com/RdeN "@RdeN")}。
图12
###  misc4：Sokoban
Lets play another Sokoban game.  
You only have 60 seconds to complete 25 levels,the number of boxes is greater
than or equal to 1,less than or equal to 3,and the map size is at most 12*10.  
$ nc 34.92.121.149 9091  
解题  
根据题目提示进行nc连接。
图13
发现是一个推箱子的游戏，需要找到最优解（路径最短），且在60秒内完成25个关卡。  
C++编程实现找到最优解并提交通关。  
文件夹下两个CPP为源文件，a为编译后的脚本部分代码：
图14
运行结果：
图15
## 二、CRYPTO
###  crypto1：babyprng
$ nc 34.92.185.118 10002  
解题  
根据题目提示进行nc连接。
图16
下载py文件，根据程序了解，需要输入四个字符（字母数字）和随机的一串字符进行sha256加密，密文要等于给的那串。  
py脚本：
图17
输入正确的四个字符后进入下一步，需要输入十六进制数。按题目中的程序，十六进制数有取值范围，使用py脚本暴力破解符合条件的数。
图18
图19
由于原本题目中的size为100000，本地根本跑不出来，修改size数值后获取了一个十六进制数。
图20
###  crypto2：babyprng2
nc 34.92.185.118 10003  
解题  
第二题和第一题类似，第一步还是sha256，只是第二步多了些十六进制数匹配和数值修改。
py脚本：
图21
图22
这里size数值取1，十六进制数为5个，得到结果0004350106。  
但在本地测试数值是否正确时，提交几遍后才出flag。在赛题环境中手动提交一直失败，而且在重新跑过脚本后出来的结果又不同，怀疑为脚本问题，但本地提交多次都成功，可能为最后随机数的问题，最终以一个PHP脚本提交答案。
图23
获取flag。
图24
###  crypto3：notcurves
!!!this challenge is under maintaince. !!! For the sake of fairness you can
download the old script.  
this challenge is up now! the file has been updated, you can download the old
script at here.$ nc 34.85.45.159 20005  
解题  
分析Python脚本源程序，发现其是两层加密，第一层是破解SHA256，求出输入字符的前4个字符，其破解SHA256的Python源代码如下。
图25
将上面破解求出的4个字母字符，提交服务器即可进入第二层破解算法。
图26
分析上述代码，进入这里的时候，前面很多应该是扰乱代码，输入”5”可进入下一步，输入一个坐标点(u,v)，使其满足条件：(u*v)%p==0，这里的p是两个15比特素数的乘积，尝试多次输入两个素数，才使其满足前面的条件。后来总结时发现其实是可以输入(0,0)的，这可能是出题者的一个失误。
图27
## 三、WEB
###  web1：mywebsql
图28
提示：
图29
解题  
通过admin/admin弱口令登录。
图30
找到一个Mywebsql漏洞：  
Create a test table (code) and write a shell code in this table.
图31
Shell地址：
图32
使用perl反弹shell。
图33
转义单引号并url编码，根目录下有readflag和flag文件，执行readflag脚本提示一个算术题，需提交答案。由于无法直接输入，所以需要脚本实现结果的输入。
图34
使用PHP的proc_open来执行/readflag，并算出随机算式的答案重定向到程序中获取flag，附上脚本代码。
图35
###  web2：Echohub
how2stack
图36
提示：  
run.sh =>#!/bin/sh service —status-all | awk {print $4}| xargs -i service {}
start sleep infinity;  
I am sorry for that `sandbox.php` is basically no use, so this challenge can
be solved more easily.  
解题  
进入题目，发现在data中提交任意字符都会返回phpinfo，而提交长度过大时会提示emmmmmm…Dont attack me!，查看页面代码，发现提示：
图37