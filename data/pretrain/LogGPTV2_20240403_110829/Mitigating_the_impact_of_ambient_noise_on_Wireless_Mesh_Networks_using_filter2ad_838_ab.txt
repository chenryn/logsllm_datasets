### Noise and Communication Link Reliability

While the capacity to maintain communication links under noisy conditions is a critical aspect, as Section III will demonstrate, such capacity alone may be insufficient to sustain reliable communication when noise persists over time or reaches high levels.

### Proactive Routing Protocols Under Study

Three state-of-the-art proactive routing protocols have been selected for this case study: Optimised Link State Routing (OLSR), Better Approach To Mobile Ad hoc Networking (B.A.T.M.A.N.), and Babel.

**Optimised Link State Routing (OLSR)**:
- **Overview**: OLSR is a well-known link-state protocol and one of the most widely used proactive routing protocols today.
- **Mechanism**: OLSR employs an optimized flooding mechanism where only specific nodes, called Multi-Point Relay (MPR) nodes, are responsible for broadcasting routing information across the network.
- **Metrics**: The initial specification (RFC 3626) used hop-count as the metric for route computation. However, the current specification (OLSRv2) promotes the use of link quality extensions, such as Expected Transmission Count (ETX).

**Better Approach To Mobile Ad hoc Networking (B.A.T.M.A.N.)**:
- **Overview**: B.A.T.M.A.N. is a novel proactive distance-vector routing protocol.
- **Mechanism**: Each node periodically sends broadcast messages to inform its neighbors of its existence. This process continues until the routing information reaches all nodes in the network.
- **Metrics**: B.A.T.M.A.N. uses the TQ (Transmission Quality) metric to estimate the quality of network links. The arrival rate of routing packets is advertised to allow neighboring nodes to determine link quality.

**Babel (RFC 6126)**:
- **Overview**: Babel is the most recent protocol under consideration and is a distance-vector routing protocol.
- **Mechanisms**:
  - **History-Sensitive Route Selection**: Babel minimizes the impact of route flaps by favoring previously established paths.
  - **Request for Routing Information**: When a link failure is detected from a preferred neighbor, Babel forces a request for updated routing information to reduce convergence time.
- **Metrics**: Like OLSR, Babel also uses ETX as a metric for network links.

### Assessment of Proactive Routing Protocols

This section outlines the ambient noise model used in our experimentation and integrates the previously introduced protocols into a real experimental test-bed. The protocols are then thoroughly assessed to evaluate their adaptability to resist ambient noise, with a focus on specific parameters. The results are analyzed from the perspective of overhead to determine the cost and feasibility.

#### A. Fault Model: Ambient Noise Characterization

To subject the routing protocols to ambient noise, it is essential to characterize the noise in practice. A simple communication setup between two nodes within the same radio range was deployed for 24 hours using the iperf tool to establish a 200 Kbps UDP data flow. This experiment identified three levels of ambient noise:
- **High Noise**: During workdays, packet loss ranged from 35% to 50%.
- **Moderate Noise**: During lunch breaks, packet loss ranged from 5% to 35%.
- **Low Noise**: At night, packet loss was between 0% and 5%.

Additionally, external perturbations, such as malicious attacks or interferences from microwave ovens, can cause packet loss ranging from 50% to 100%.

Since ambient noise is manifested as packet loss, emulating ambient noise through packet loss is a feasible solution to recreate the exact conditions in an experimental environment. Tools like netem were used to inject a specified rate of packet loss into the network, enhancing repeatability and accuracy.

#### B. Experimental Test-Bed

The implementations considered for the experimentation are the latest stable open-source versions of the routing protocols:
- **OLSR (olsrd v.0.6.0)**: From www.olsrd.org
- **Babel (babeld v.1.1.1)**: From www.pps.jussieu.fr/jch/software/babel/
- **B.A.T.M.A.N. (batmand v.0.3.2)**: From www.open-mesh.org

Both regular and tiny devices were used:
- **Regular Nodes**: 7 HP 530 laptops with 1.6GHz processors and 512MB RAM running Ubuntu 7.10 OS.
- **Tiny Devices**: 10 Linksys WRT54GL routers with 200MHz processors and 16MB RAM running OpenWRT White Russian OS.

Each node was equipped with both a wired Ethernet and a wireless IEEE 802.11b/g interface. The wired interface was used for control and management, ensuring no interference with the actual data measurement on the wireless channel.

A more elaborate network deployment was set up, implementing the topology shown in Figure 2. Routes typically do not expand beyond 4 hops, so a 4-hop route (S-D) was considered representative. Given physical obstacles, the best route from S to D often went through xi nodes, with yi nodes used as a secondary route when the primary route was unavailable.

Two types of experiments were defined:
1. **Normal Use**: Increasing ambient noise to study the robustness of the S-D route.
2. **Node Crash**: Forcing a crash in one of the nodes (x3) to study the effect of route switching under increasing ambient noise.

An UDP constant bit-rate data flow of 200 Kbps was established to compute the Effective Packet Delivery Ratio (EPDR) of the route.

**Effective Packet Delivery Ratio (EPDR)**:
- **Definition**: EPDR is the percentage of application packets received out of the total sent.
- **Formula**: \( \text{EPDR}(r) = \text{RA}(r) \times (1 - \text{PLR}(r)) \)
  - **RA (Route Availability)**: Average time the route was available, expressed as a percentage.
  - **PLR (Packet Loss Ratio)**: Caused by ambient noise.

Experiments were conducted at night to minimize real ambient noise, assuming an acceptable intrusiveness of 0% to 5% packet loss. In total, 600 experiments, each lasting 300 seconds, were executed.

#### C. Results Analyzed from a Black-Box Viewpoint

**Figure 3a** shows the EPDR for the S-D route through xi nodes. B.A.T.M.A.N. and Babel exhibit similar performance, with EPDR decreasing proportionally with ambient noise. OLSR starts degrading at 30% ambient noise.

**Figure 3b** illustrates the RA of the different protocols. B.A.T.M.A.N. maintains the highest RA, resisting up to 95% ambient noise. Babel starts degrading at 70% ambient noise, while OLSR is affected by ambient noise around 30%.

For the second type of experiments, **Figure 3c** shows the EPDR when node x3 crashes, and the route S-D must be re-established through yi nodes. EPDR never reaches 100% even in the absence of ambient noise. **Figure 3d** explains this by showing the RA, indicating that the new route application involves a cost, including convergence time. Babel performs best up to 50% ambient noise, but B.A.T.M.A.N. tolerates higher noise slightly better. OLSR is the worst option. These results align with the convergence times in Table I, highlighting the impact of convergence time on route availability.

#### D. Results Analyzed from a White-Box Viewpoint

The ranking of the protocols is not arbitrary. After analyzing the code with debugging tools like gdb, three common parameters were identified that influence the behavior of proactive routing protocols against ambient noise:

- **T**: Default period to send a routing packet advertising a given link.
- **Twindow**: Validity time determining the temporal window after which the protocol decides whether to discard a link.
- **Minimum Quality Threshold (MQT)**: Minimum acceptable quality before flushing a link.

These parameters and their default values are summarized in Table II, providing insights into the protocols' performance under varying noise conditions.