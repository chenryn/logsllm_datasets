noise. However, as Section III will show, such capacity is not enough
to keep communication links alive whenever such noise persist along
the time or it is very high.
C. Proactive Routing Protocols Under Study
Three state-of-the-art proactive routing protocols have been se-
lected as targets of this case study. Their names are Optimised Link
State Routing (OLSR), the Better Approach To Mobile Ad hoc
Networking (B.A.T.M.A.N) and Babel.
OLSR [6] is the most well-known link state protocol and one of
the most widely-used proactive routing protocols nowadays. OLSR
employs an optimised ﬂooding mechanism, where only special
nodes called Multi-Point Relay (MPR) are responsible for broad-
casting the routing information along the network. Although the
initial speciﬁcation of OLSR (RFC 3626) established route com-
putation using hop-count as metric, current speciﬁcation OLSRv2
promote the use of link quality extensions, like ETX.
B.A.T.M.A.N [8] is a novel proactive distance-vector routing pro-
tocol. For each node, B.A.T.M.A.N periodically sends out broadcast
messages to inform neighbours of its existence. This process is
repeated until the routing information reaches all network nodes.
For each link the routing packets arrival rate is advertised so that
neighbour nodes can determine the link quality. B.A.T.M.A.N uses
the TQ metric to estimate the quality of network links.
Babel (RFC6126) [7] is the most recent protocol under consid-
eration. It is a distance-vector routing protocol that has two main
characteristics to optimise its relay mechanism. On one hand, it uses
history-sensitive route selection to minimise the impact of route
ﬂaps. In such a way, the route selection favours the previously
established path rather than alternating between two routes. On the
other hand, it forces a request for routing information each time
it detects a link failure from one of its preferred neighbours. This
is a best-effort mechanism to reduce the convergence time of the
network. Like OLSR, Babel uses ETX as a metric for network links.
III. ASSESSMENT OF PROACTIVE ROUTING PROTOCOLS
This section presents the ambient noise model used in our ex-
perimentation. Then, previous protocols introduced in Section II-C
are integrated within a real experimental test-bed. After that, these
routing protocols are thoroughly assessed to show to what extent
their level of adaptiveness to resist the presence of ambient noise
depend on a particular set of parameters. Such results will be ﬁnally
analysed from the viewpoint of the overhead introduced to determine
the cost to pay and evaluate if it is affordable or not.
A. Fault model: ambient noise characterisation
Before subjecting the commented routing protocols to the pres-
ence of ambient noise, it is necessary to characterise it in prac-
tice. Accordingly, a simple communication between two nodes
in the same radio range (thus not requiring the aid of rout-
ing protocols) was deployed in our department for a period of
24 hours. This communication consisted in the establishment of
an UDP data ﬂow of 200 Kbps throughout the iperf
tool from
http://sourceforge.net/projects/iperf. Thanks to this experimenta-
tion, we could distinguish three different levels of ambient noise: a
high ambient noise coinciding with the workday involving a packet
loss ranging from 35% to 50%, a moderate one matching with the
Figure 2. Experimental WMN deployment
lunch breaks from 5% to 35% and a low one from 0% to 5% at night.
Despite not being so frequent, the range from 50% to 100% typically
representing additional external perturbations like malicious attacks
from signal inhibitors or accidental faults like interferences from
microwave ovens, completes this model.
As ambient noise is eventually manifested in terms of packet loss
[9], the emulation of ambient noise through packet loss is a possible
solution to recreate the exact conditions of noise in an experimental
environment. Thus, it is possible to enhance the repeatability and
reproducibility in the experimentation, and the accuracy in the
results provided. So, the use of tools such as netem1 for the injection
of a given rate of packet loss in the network has been required.
B. Experimental test-bed
The implementation targets considered for our experimentation
are last steady open-source versions of the routing protocols pre-
viously described in Section II-C. Accordingly, well-known im-
plementations of OLSR (olsrd v.0.6.0 from www.olsrd.org), Babel
(babeld v.1.1.1 from www.pps.jussieu.fr/jch/software/babel/) and
B.A.T.M.A.N (batmand v.0.3.2 from www.open-mesh.org) have
been taken into account. To illustrate their portability, both regu-
lar and tiny devices were considered for their execution. Regular
nodes were implemented by 7 HP 530 laptops with a processor of
1.6GHz and 512MB of RAM running Ubuntu 7.10 OS. Tiny devices
consisted of 10 Linksys WRT54GL routers with a processor of 200
MHz and 16MB of RAM running OpenWRT White Russian OS.
Considered nodes were equipped with both a wired Ethernet and
a wireless IEEE 802.11b/g interface. Following the experimental
approach described in [10], the wired interface was used to perform
control and management, thus not interfering with the actual (ap-
plicative and routing) data measurement on the wireless channel.
To carry out our experiments and assess the robustness of routing
protocols against ambient noise, a more elaborated network deploy-
ment was considered this time. Concretely, the WMN implementing
the topology depicted in Figure 2 was installed in our department.
As stated in [11], routes do not usually expand beyond 4 hops, so
a route of 4-hops distance (S-D) has been considered representative
in our study. Given the unavoidable presence of physical obstacles
like walls or other objects, the studied protocols found the best
route from S to D through xi nodes most of the times, relegating
the use of yi nodes to those situations where the route through xi
1http://www.linuxfoundation.org/collaborate/workgroups/networking/netem
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:20:46 UTC from IEEE Xplore.  Restrictions apply. 
15 real nodesTarget routing protocolsOLSRBATMANBABELExecuted onRegular devices: HP laptopsTiny devices: Linksys routersFormed byExperimental deploymentInjected onAmbientnoiseemulationPacketlossgeneratorDx3x1Network topologyx2y3y2Sy1Primary routeSecondary routenodes is not possible. Accordingly, two types of experiments were
deﬁned. The ﬁrst one, consisted in the normal use of the route S-D
through xi nodes while increasing the presence of ambient noise in
the environment, to study the robustness of the route against network
partitioning. The second type, additionally, forced a node crash in
one of the nodes concerning the best route (x3) to study the effect of
route switching when incrementing the presence of ambient noise.
An UDP constant bit-rate data ﬂow of 200 Kbps was established
from source S to destination D to compute the Effective Packet
Delivery Ratio (EPDR) of the route.
The EPDR for a given route r is expressed as the percentage of
applicative packets received from the total sent. It can be theoreti-
cally computed according to Formula 1, where the route availability
(RA) is typically expressed in percentage and accounts for the
average time the route between source and destination was ready
to be used, and the packet loss ratio (PLR) caused by ambient noise.
Obviously, the RA ends up conditioning the EPDR in the applicative
layer because, if any link fails, all the communications supported by
such link will be irremediable affected. The higher RA and the lower
PLR, the better.
In order to limit the inﬂuence of real ambient noise in our results,
our experimentation was carried out at night, assuming an acceptable
intrusiveness of 0% to 5% of real (non-emulated) packet loss for
wireless networks. In summary, 600 experiments of 300s each
divided in two experimental campaigns (one per type of experiment)
were executed.
EP DR(r) = RA(r) ∗ (1 − P LR(r))
(1)
C. Results analysed from a black-box viewpoint
Figure 3a illustrates the results of the ﬁrst type of experiments
obtained from measuring the EPDR in the route S-D through xi
nodes. As observed when batmand is in charge of routing, the
EPDR decreases proportionally with the amount of ambient noise
introduced. babeld also presents very similar results, while olsrd
starts the degradation from 30% ambient noise. If analysing these
results, the case representing the ideal EPDR loss should involve an
identical decrement with respect to the ambient noise introduced.
Any case where the EPDR decreases faster than the ambient noise
introduced, necessarily involves the presence of any additional effect
impacting on the EPDR. To study this effect in more detail, Figure
3b shows the RA of the different routing protocols considered. In
this graphic, it is possible to appreciate the robustness of the route
exhibited by each routing protocol against ambient noise. As can
be deduced according to Formula 1, any RA below 100% impacts
negatively on the global EPDR of the route. Consequently, the
longer the protocol can maintain the route available, the better for
the EPDR. In this sense, batmand deserves being the best routing
protocol since their route S-D strongly resists and do not create
network partitioning until introducing 95% of ambient noise in the
system. babeld, starts the degradation of RA with 70% of ambient
noise. Finally, olsrd starts suffering the impact of ambient noise
(around 30% in avg.) within the daily levels of ambient noise deﬁned
in Section III-A (breaks and workday).
Now let us focus on the results obtained for the second type of
experiments. Figure 3c shows the EPDR when node x3 crashes
and the route S-D must be dynamically re-established through yi
nodes. In this case, the major difference introduced in Figure 3c
with respect to Figure 3a is that EPDR never achieves 100% even
in absence of ambient noise. Figure 3d illustrates the RA for this
CONVERGENCE TIME ELAPSED WHEN A NODE CRASHES IN ROUTE S-D
Protocol version
Convergence time (s) per PLR (%)
Table I
olsrd v.0.6.0
babeld v.0.9.6
batmand v.0.3.2
0% 10% 20% 30% 40% 50% 60% 70% 80% 90%
293
58
283
13
28
253
106
33
51
130
38
62
147
50
87
165
80
90
81
27
45
200
151
120
250
193
172
274
242
203
type of experiment to explain this result. From this graphic it is
possible to deduce that the application of the new route is not for
free and involves a cost, even in absence of ambient noise. During
the time required to apply the new route when the old one is no
longer available (convergence time), the communication between
S and D is not possible. Consequently, the longer this time, the
major impact on the route availability. Concretely, in absence of
ambient noise, babeld is the protocol presenting the best behaviour
up to considering an ambient noise of 50%, but beyond this rate,
batmand tolerates the presence of ambient noise slightly better. In
any case, olsrd is the worst option. These results are consistent with
the convergence time measured in Table I, and show how this time
is one of the main reasons of route unavailability in WMNs.
D. Results analysed from a white-box viewpoint
The ranking previously established is not casual. After analysing
the code in detail throughout debugging tools like gdb, we observe
that, behind the name of different variables and constants, there are
three common parameters characterising the behaviour of proactive
routing protocols against ambient noise. Table II identiﬁes them and
state their default values. Basically, T, is the default period to send
a routing packet advertising a given link. Twindow is the validity
time determining the temporal window after which the protocol
decides whether discarding a link or not. With respect to the Mini-
mum Quality Threshold (MQT), it deﬁnes the minimum acceptable
quality before ﬂushing a link. After analysing the targeted routing