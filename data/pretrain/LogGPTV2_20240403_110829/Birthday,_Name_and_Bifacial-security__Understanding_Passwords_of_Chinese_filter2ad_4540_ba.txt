produce k=107 guesses, we employ the strategy of ﬁrst
setting a lower bound (i.e., 10−10) for the probability
of guesses generated, then sorting all the guesses, and
ﬁnally selecting the top k ones.
In this way, we can
reduce the time overheads by 170% at the cost of about
110% increase in storage overheads, as compared to the
strategy of producing exactly k guesses.
In Laplace
Smoothing, it is required to add δ to the count of each
substring and we set δ=0.01 as suggested in [36].
4.2.2 Markov-based experimental results
The experiment results for these ﬁve scenarios are quite
similar. Here we mainly show the cracking results of
Scenario #1 in Fig. 6, while the experiment results for
Scenarios #2∼#5 are omitted due to space constraints.
We can see that, for both Chinese and English test
sets: (1) At large guesses (i.e., >2*106), order-4 markov-
chain evidently performs better than the other two or-
ders, while at small guesses (i.e., <106) the larger the
order, the better the performance will be; (2) There is
little difference in performance between Laplace and
GT Smoothing at small guesses, while the advantage of
Laplace Smoothing gets greater as the guess number in-
creases; (3) End-symbol normalization always performs
better than the distribution-based approach, while at
small guesses its advantages will be more obvious. Such
observations have not been reported in previous major
studies [15, 36]. This suggests that: 1) At large guesses,
the attacks with order-4, Laplace Smoothing and end-
symbol normalization (see Figs. 6(b) and 6(e)) perform
best; and 2) At small guesses, the attacks preferring
order-5, Laplace Smoothing and end-symbol normaliza-
tion (see Figs. 6(a) and 6(d)) perform best.
Results show that the bifacial-security nature found in
our PCFG attacks (see Sec. 5.1) also applies in all the
Markov attacks. For example, in order-4 markov-chain-
based experiments (see Fig.6(b) and Fig.6(e)), we can
see that, when the guess number is below about 7000,
Chinese web passwords are generally much weaker than
their English counterparts. For example, at 1000 guesses,
the success rate against Tianya, Dodonew and CSDN
is 11.8%, 6.3% and 11.6%, respectively, while their
English counterparts (i.e., Rockyou, Yahoo and Phpbb)
is merely 8.1%, 4.3% and 7.1%, respectively. However,
105
104
102
106
PCFG
Ofﬂine guessing
Online guessing
101
103
Table 9: Bifacial-security nature of Chinese passwords.†
Algorithm∗
Attacking scenario
107
Test set
0.027 0.044 0.068 0.103 0.150 0.225 0.288
Dodonew
0.008 0.022 0.063 0.136 0.212 0.316 0.390
Yahoo
0.073 0.105 0.138 0.213 0.295 0.355 0.376
Tianya
Rockyou rest 0.020 0.044 0.110 0.214 0.320 0.438 0.497
0.070 0.105 0.136 0.189 0.229 0.272 0.300
CSDN
0.021 0.038 0.087 0.183 0.274 0.369 0.415
Phpbb
0.024 0.040 0.060 0.085 0.145 0.212 0.305
Dodonew
0.007 0.016 0.043 0.097 0.165 0.261 0.361