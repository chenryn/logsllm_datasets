e
r
14
12
10
8
6
4
2
0
0
5
tionate improvement in the estimates. The results were similar even
when errors were added to the ﬂow level measurements, and so sam-
pled ﬂows may also provide practical improvements.
7.2 Local Trafﬁc Matrices
Another appealing alternative to collect additional information
with minimal cost is to collect local router trafﬁc matrices. That
is, for the router to keep a table of trafﬁc from in-interface to out-
interface. As shown in [25], the collection of local trafﬁc matrices
only requires minimal changes to router hardware, and can be in-
cluded in our algorithm as constraints. Figure 8 shows the CDF
including local trafﬁc matrices, and Table 4 shows a summary of
the results in comparison to those without local trafﬁc information.
Notice that the results with a local trafﬁc matrix, are not only better,
but also less sensitive to measurement errors.
2002 06 08
2002 06 12
2002 06 24
10
15
20
number of missing link measurements
25
30
Figure 6: The impact of missing data on the relative errors for
three days (each comprising 24 data sets).
7.1 Flow Level Data
In this section we consider the impact of having ﬂow level data at
some locations, which gives the rows of the trafﬁc matrix for those
locations. This inclusion was explored in [16] in a simulation. They
showed that the methods of [23, 3] provided improvements to trafﬁc
matrix estimates roughly in proportion to the number of rows mea-
sured, but that it did not matter whether one selected the rows to be
measured randomly, or in order of largest row sum.
Flow level information can be included in our algorithm by sim-
ply including additional constraint equations. Results are presented
for three separate days of data, each consisting of twenty four, one-
hour data sets. We compare the error in the estimates as we in-
clude a variable number of known rows of the trafﬁc matrix, both
in row sum order, and randomly. Figure 7 shows the results. In the
random-ordering case, we see an approximately linear improvement
as additional information is included, but in contrast to the results
of [16] row sum order is signiﬁcantly better. In fact, once 10 rows
are included, the error for the row sum case is about half that of the
random ordered case, and this ratio improves until we have included
around half of the rows, when the error for the row sum ordered
case becomes negligible. One possible reason why these results do
not agree with [16] is that the trafﬁc matrices used in the simulation
were not as skewed as those observed in real networks.
r
o
r
r
e
e
v
i
t
l
a
e
r
14
12
10
8
6
4
2
0
0
5
     rand: 2002/06/08
     rand: 2002/06/12
     rand: 2002/06/24
    order: 2002/06/08
    order: 2002/06/12
    order: 2002/06/24
10
15
20
25
30
number of known traffic matrix rows
Figure 7: Effect of addition of known trafﬁc matrix rows.
Dashed lines show largest row sum ordering, and solid show
random order. There are over 60 rows in the trafﬁc matrix.
The result is a clear win for measuring ﬂow, or packet level data.
Such data on a fraction of the network may provide a dispropor-
100
90
80
70
60
50
40
30
20
10
s
d
n
a
m
e
d
f
o
e
g
a
t
n
e
c
r
e
p
0
0
20
noise=0.00
noise=0.01
noise=0.05
noise=0.10
link measurements (zero noise)
40
60
relative error
80
100
Figure 8: The result of including local trafﬁc matrices, for vary-
ing error levels. Also included as a baseline is the zero noise,
links measurement case from Figure 3.
0.10
noise level (σ)
with local TM
7.3%
w/o local TM 11.26% 11.63% 14.00% 18.01%
0
3.06%
0.01
3.40%
0.05
5.04%
Table 4: The relative errors given a particular noise level, with
and without local trafﬁc matrix data.
The star topology illustrates why a local trafﬁc matrix helps. In
that case, a local trafﬁc matrix at the hub router provides the trafﬁc
matrix directly. In reality the network is not a star, so a large amount
of additional information is redundant. In our problem, the number
of constraints is of the order of a factor of 20 times the simple link
measurement constraints, but the number of independent constraints
is only roughly doubled. However, this redundant information is
still useful because it makes the algorithm more robust to noise in
the measurements, as seen in Table 4.
These results show that it is quite practical to improve the trafﬁc
matrix estimates above by incorporating additional information.
8. CONCLUSION
To summarize, we present a new approach to trafﬁc matrix es-
timation for IP networks. We demonstrate on real data that the
method has nice properties: it is fast, accurate, ﬂexible, and robust.
In addition, this paper provides some insight into the problem of
trafﬁc matrix estimation itself. In particular, by testing the method
on Rocketfuel topologies we provide some measure of what aspects
of a network make the problem easier or harder: estimates on more
highly meshed networks were more accurate. Further, we found that
the relationship between the trafﬁc volumes and the topology played
a signiﬁcant role in the accuracy of the estimates. Apart from this,
the method also provides additional insight into a broad range of
approaches to trafﬁc matrix estimation.
There is still considerable work to do in this area: for instance,
the choice of priors is interesting. It is known that regularization
and shrinkage approaches improve estimates even when the prior
to which we shrink is arbitrary. However, it is also known that a
better prior results in a better estimate. While the prior used here
seems adequate, one may be able to do better (for instance by using
[16]). Other areas of future work include, understanding why the
methods are so insensitive to the value of λ, and performing further
validations of the method, on alternate data sets (including different
trafﬁc patterns), and direct point-to-multipoint validation.
Acknowledgments
We would like to thank Michael Saunders for the PDSCO code used
here, George Varghese for suggesting the collection of local trafﬁc
matrices, Dina Katabi and anonymous reviewers for their helpful
comments, and the people who helped collect some of the data used
here, in particular Joel Gottlieb, and Fred True.
9. REFERENCES
[1] M. Bertero, T. Poggio, and V. Torre. Ill-posed problems in early
vision. In Proc. of the IEEE, 76:869–889, 1988.
[2] I. J. Craig and J. C. Brown. Inverse Problems in Astronomy: A Guide
to Inversion Strategies for Remotely Sensed Data. Adam Hilger,
Boston, 1986.
[3] J. Cao, D. Davis, S. V. Wiel, and B. Yu. Time-varying network
tomography. J. Amer. Statist. Assoc, 95(452):1063–1075, 2000.
[4] J. Cao, S. V. Wiel, B. Yu, and Z. Zhu. A scalable method for
estimating network trafﬁc matrices from link counts. Preprint.
Available at http://stat-www.berkeley.edu/˜binyu/
publications.html.
[5] S. S. Chen, D. L. Donoho, and M. A. Saunders. Atomic
decomposition by basis pursuit. SIAM Review, 43(1):129–159, 2001.
[6] B. Efron and C. Morris. Stein’s paradox in statistics. Scientiﬁc
American, 236(5):119–127, 1977.
[7] A. Feldmann, A. Greenberg, C. Lund, N. Reingold, and J. Rexford.
Netscope: Trafﬁc engineering for IP networks. IEEE Network
Magazine, pages 11–19, March/April 2000.
[8] A. Feldmann, A. Greenberg, C. Lund, N. Reingold, J. Rexford, and
F. True. Deriving trafﬁc demands for operational IP networks:
Methodology and experience. IEEE/ACM Transactions on
Networking, pages 265–279, June 2001.
[9] P. C. Hansen. Regularization tools (for Matlab). http:
//www.imm.dtu.dk/˜pch/Regutools/index.html.
[10] P. C. Hansen. Regularization tools: A Matlab package for analysis and
solution of discrete ill-posed problems. Numerical Algorithms,
6:1–35, 1994.
[11] P. C. Hansen. Rank-Deﬁcient and Discrete Ill-Posed Problems:
Numerical Aspects of Linear Inversion. SIAM, 1997.
[12] G. Jumarie. Relative Information. Springer-Verlag, 1990.
[13] E. Lehmann. Theory of Point Estimates. Wiley, New York, 1983.
[14] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson. Inferring link
weights using end-to-end measurements. In ACM SIGCOMM Internet
Measurement Workshop, 2002.
[15] A. Medina, C. Fraleigh, N. Taft, S. Bhattacharyya, and C. Diot. A
taxonomy of IP trafﬁc matrices. In SPIE ITCOM: Scalability and
Trafﬁc Control in IP Networks II, Boston, USA, August 2002.
[16] A. Medina, N. Taft, K. Salamatian, S. Bhattacharyya, and C. Diot.
Trafﬁc matrix estimation: Existing techniques and new directions. In
ACM SIGCOMM, Pittsburg, USA, August 2002.
[17] A. Neumaier. Solving ill-conditioned and singular linear systems: A
tutorial on regularization. SIAM Review, 40(3), 1998.
[18] R. Parker. Geophysical Inverse Theory. Princeton University Press,
Princeton, NJ, 1994.
[19] A. Shaikh, C. Isett, A. Greenberg, M. Roughan, and J. Gottlieb. A
case study of OSPF behavior in a large enterprise network. In ACM
SIGCOMM Internet Measurement Workshop, Marseille, France, 2002.
[20] J. Skilling. The axioms of maximum entropy. In G. J. Erickson and
C. R. Smith, editors, Maximum-Entropy and Bayesian Methods in
Science and Engineering, Volume 1: Foundations, pages 173–187.
Kluwer Academic Publishers, 1988.
[21] N. Spring, R. Mahajan, and D. Wetherall. Measuring ISP topologies
with Rocketfuel. In ACM SIGCOMM, 2002.
[22] N. Spring, R. Mahajan, D. Wetherall, and H. Hagerstrom. Rocketfuel:
An ISP topology mapping engine. http://www.cs.
washigton.edu/research/networking/rocketfuel/.
[23] C. Tebaldi and M. West. Bayesian inference on network trafﬁc using
link count data. J. Amer. Statist. Assoc, 93(442):557–576, 1998.
[24] Y. Vardi. Network tomography: estimating source-destination trafﬁc
intensities from link data. J. Am. Statist. Assoc., 91:365–377, 1996.
[25] G. Varghese and C. Estan. The measurement manifesto. Technical
Report CS2003-0747, UCSD, 2003.
[26] G. Wahba. Constrained regularization for ill posed linear operator
equations, with applications in meteorology and medicine. In
Statistical Decision Theory and Related Topics III, 2:383–418,
Academic Press, 1982.
[27] B. Yu. Maximum pseudo likelihood estimation in network
tomography. In NISS Internet Tomography Technical Day, Research
Triangle Park, March 28 2003. Available at
http://www.niss.org/affiliates/internet030328/
presentations20030328.html.
[28] Y. Zhang, M. Roughan, N. Dufﬁeld, and A. Greenberg. Fast accurate
computation of large-scale IP trafﬁc matrices from link loads. In ACM
SIGMETRICS, San Diego, USA, June 2003.
APPENDIX
A. CONDITIONAL INDEPENDENCE
In Section 3.5 we present a result based on conditional indepen-
dence, rather than simple independence. Zero transit trafﬁc makes
it is more reasonable to adopt a conditionally independent model in
which the probabilities of a packet (bit) arriving at s and departing
at d given the class of arrival and destination link (peering or access)
are independent:
pS,D(s, d|S ∈ Cs, D ∈ Cd) =
pS(s|S ∈ Cs, D ∈ Cd) pD(d|S ∈ Cs, D ∈ Cd),
(32)
where Cs, and Cd are the source the destination’s link class, respec-
tively. We know
pS,D(s, d) = pS,D(s, d|S ∈ Cs, D ∈ Cd) pS,D(Cs, Cd)
The source and destination links only depend on the class of the
source and destination respectively, so
(33)
pS(s|S ∈ Cs, D ∈ Cd) = pS(s|S ∈ Cs),
pD(d|S ∈ Cs, D ∈ Cd) = pD(d|D ∈ Cd).
Furthermore, from the deﬁnition of conditional probability
pS(s|S ∈ Cs) = pS(s) / pS(Cs),
pD(d|D ∈ Cd) = pD(d) / pD(Cd),
(34)
(35)
(36)
(37)
with the result
pS,D(s, d) =
pS(s)
pS(Cs)
pD(d)
pD(Cd)
pS,D(Cs, Cd)
(38)
If the class of source and destination were independent, then (38)
would result in the independent model pS,D(s, d) = pS(s)pD(d).
However, noting that all trafﬁc from peering must go to access, and
likewise, all trafﬁc to peering links comes from access, and further
that the four probabilities must add to one, we get.
pS,D(P, P ) = 0
pS,D(P, A) = p(d ∈ A|s ∈ P ) pS(P ) = pS(P )
pS,D(A, P ) = p(s ∈ A|d ∈ P ) pD(P ) = pD(P )
pS,D(A, A) = 1 − pS(P ) − pD(P ).
Substituting into (38) we get (28).