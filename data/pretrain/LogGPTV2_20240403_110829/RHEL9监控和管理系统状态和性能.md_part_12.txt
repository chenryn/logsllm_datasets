**验证步骤**
-   确保您可以从每个目录中访问最新的归档文件：
    ``` screen
    # for i in /var/log/pcp/pmlogger/rhel*/*.0; do pmdumplog -L $i; done
    Log Label (Log Format Version 2)
    Performance metrics from host rhel6u10a.local
      commencing Mon Nov 25 21:55:04.851 2019
      ending     Mon Nov 25 22:06:04.874 2019
    Archive timezone: JST-9
    PID for pmlogger: 24002
    Log Label (Log Format Version 2)
    Performance metrics from host rhel7u4a
      commencing Tue Nov 26 06:49:24.954 2019
      ending     Tue Nov 26 07:06:24.979 2019
    Archive timezone: CET-1
    PID for pmlogger: 10941
    [..]
    ```
    `/var/log/pcp/pmlogger/`{.literal}
    目录中的存档文件可用于进一步分析和显示。
:::
::: itemizedlist
**其他资源**
-   `pmlogger(1)`{.literal} man page
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
-   [使用 PCP
    分发的系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance#system-services-distributed-with-pcp_setting-up-pcp){.link}
-   `/var/lib/pcp/config/pmlogger/config.default`{.literal} file
:::
:::
::: section
::: titlepage
# []{#logging-performance-data-with-pmlogger_monitoring-and-managing-system-status-and-performance.html#replaying-the-pcp-log-archives_logging-performance-data-with-pmlogger}使用 pmrep 重现 PCP 日志存档 {.title}
:::
记录指标数据后，您可以重新执行 PCP
日志存档。要将日志导出到文本文件并将其导入到电子表格中，请使用
`pcp2csv`{.literal}、`pcp2xml`{.literal}、`pmrep`{.literal} 或
`pmlogsummary`{.literal} 等。
使用 `pmrep`{.literal} 工具，您可以：
::: itemizedlist
-   查看日志文件
-   解析所选 PCP 日志存档，并将值导出到 ASCII 表中
-   通过在命令行中指定单个指标，从日志中提取整个存档日志或只从日志中选择指标值
:::
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
-   `pmlogger`{.literal} 服务已启用。如需更多信息，请参阅[启用 pmlogger
    服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/logging-performance-data-with-pmlogger_monitoring-and-managing-system-status-and-performance#enabling-the-pmlogger-service_logging-performance-data-with-pmlogger){.link}。
-   安装 `pcp-system-tools`{.literal} 软件包：
    ``` screen
    # dnf install pcp-gui
    ```
:::
::: itemizedlist
**步骤**
-   显示指标上的数据：
    ``` screen
    $ pmrep --start @3:00am --archive 20211128 --interval 5seconds --samples 10 --output csv disk.dev.write
    Time,"disk.dev.write-sda","disk.dev.write-sdb"
    2021-11-28 03:00:00,,
    2021-11-28 03:00:05,4.000,5.200
    2021-11-28 03:00:10,1.600,7.600
    2021-11-28 03:00:15,0.800,7.100
    2021-11-28 03:00:20,16.600,8.400
    2021-11-28 03:00:25,21.400,7.200
    2021-11-28 03:00:30,21.200,6.800
    2021-11-28 03:00:35,21.000,27.600
    2021-11-28 03:00:40,12.400,33.800
    2021-11-28 03:00:45,9.800,20.600
    ```
    上述示例以逗号分隔值格式显示存档中以 [*5 秒*]{.emphasis} 间隔收集的
    `disk.dev.write`{.literal} 指标中的数据。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    将此示例中的 `20211128`{.literal} 替换为包含您要显示数据的
    `pmlogger`{.literal} 存档的文件名。
    :::
:::
::: itemizedlist
**其他资源**
-   `pmlogger(1`{.literal} )、`pmrep(1)`{.literal} 和
    `pmlogsummary(1)`{.literal} man page
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
-   [使用 PCP
    分发的系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance#system-services-distributed-with-pcp_setting-up-pcp){.link}
:::
:::
:::
[]{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance}第 6 章 使用 Performance Co-Pilot 监控性能 {.title}
:::
Performance
Co-Pilot(PCP)是用于监控、视觉化、存储和分析系统级性能测量的工具、服务和库集。
作为系统管理员，您可以使用 Red Hat Enterprise Linux 9 中的 PCP
应用程序监控系统性能。
::: section
::: titlepage
# []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#monitoring-postfix-with-pmda-postfix_monitoring-performance-with-performance-co-pilot}使用 pmda-postfix 监控 postfix {.title}
:::
这个步骤描述了如何使用 `pmda-`{.literal} `postfix`{.literal} 监控
postfix 邮件服务器的性能指标。它有助于检查每秒接收多少电子邮件。
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
-   `pmlogger`{.literal} 服务已启用。如需更多信息，请参阅[启用 pmlogger
    服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/logging-performance-data-with-pmlogger_monitoring-and-managing-system-status-and-performance#enabling-the-pmlogger-service_logging-performance-data-with-pmlogger){.link}。
:::
::: orderedlist
**步骤**
1.  安装以下软件包：
    ::: orderedlist
    1.  安装 `pcp-system-tools`{.literal} ：
        ``` screen
        # dnf install pcp-system-tools
        ```
    2.  安装 `pmda-postfix`{.literal} 软件包以监控 `postfix`{.literal}
        ：
        ``` screen
        # dnf install pcp-pmda-postfix postfix
        ```
    3.  安装日志记录守护进程：
        ``` screen
        # dnf install rsyslog
        ```
    4.  安装邮件客户端进行测试：
        ``` screen
        # dnf install mutt
        ```
    :::
2.  启用 `postfix`{.literal} 和 `rsyslog`{.literal} 服务：
    ``` screen
    # systemctl enable postfix rsyslog
    # systemctl restart postfix rsyslog
    ```
3.  启用 SELinux 布尔值，以便 `pmda-postfix`{.literal}
    可以访问所需的日志文件：
    ``` screen
    # setsebool -P pcp_read_generic_logs=on
    ```
4.  安装 `PMDA`{.literal} ：
    ``` screen
    # cd /var/lib/pcp/pmdas/postfix/
    # ./Install
    Updating the Performance Metrics Name Space (PMNS) ...
    Terminate PMDA if already installed ...
    Updating the PMCD control file, and notifying PMCD ...
    Waiting for pmcd to terminate ...
    Starting pmcd ...
    Check postfix metrics have appeared ... 7 metrics and 58 values
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 `pmda-postfix`{.literal} 操作：
    ``` screen
    echo testmail | mutt root
    ```
-   验证可用指标：
    ``` screen
    # pminfo postfix
    postfix.received
    postfix.sent
    postfix.queues.incoming
    postfix.queues.maildrop
    postfix.queues.hold
    postfix.queues.deferred
    postfix.queues.active
    ```
:::
::: itemizedlist
**其他资源**
-   `rsyslogd(8)`{.literal}, `postfix(1)`{.literal}, 和
    `setsebool(8)`{.literal} man pages
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
-   [使用 PCP
    分发的系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#system-services-distributed-with-pcp_setting-up-pcp){.link}
-   `/var/lib/pcp/config/pmlogger/config.default`{.literal} file
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#visually-tracing-pcp-log-archives-with-pcp-charts_monitoring-performance-with-performance-co-pilot}使用 PCP Charts 应用程序可视化追踪 PCP 日志存档 {.title}
:::
记录指标数据后，您可以作为图形重新执行 PCP
日志存档。指标来源于一个或多个实时主机，可通过替代选项将 PCP
日志存档中的指标数据用作历史数据的来源。要自定义 [**PCP 图表**]{.strong}
应用程序接口来显示性能指标中的数据，您可以使用行图表、栏图或利用率图形。
使用 [**PCP Charts**]{.strong} 应用程序，您可以：
::: itemizedlist
-   重播 [**PCP 图表**]{.strong}
    应用程序中的数据，并使用图形来视觉化重新内省数据以及系统的实时数据。
-   将性能指标值图表到图表中。
-   同时显示多个 chart。
:::
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
-   使用 `pmlogger`{.literal} 记录性能数据。如需更多信息，请参阅[使用
    pmlogger
    的日志记录性能数据](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/index#logging-performance-data-with-pmlogger_monitoring-and-managing-system-status-and-performance){.link}。
-   安装 `pcp-gui`{.literal} 软件包：
    ``` screen
    # dnf install pcp-gui
    ```
:::
::: orderedlist
**步骤**
1.  从命令行启动 [**PCP Charts**]{.strong} 应用程序：
    ``` screen
    # pmchart
    ```
    ::: figure
    []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#idm140048816237120}
    **图 6.1. PCP Charts 应用程序**
    ::: figure-contents
    ::: mediaobject
    ![pmchart started](images/pmchart_started.png)
    :::
    :::
    :::
    `pmtime`{.literal} 服务器设置位于底部。可以使用 [**start**]{.strong}
    和 [**pause**]{.strong} 按钮控制：
    ::: itemizedlist
    -   PCP 轮询指标数据的时间间隔
    -   历史数据指标的日期和时间
    :::
2.  点 [**File**]{.strong} 然后点 [**New
    Chart**]{.strong}，通过指定主机名或地址来选择来自本地机器和远程机器的指标。高级配置选项包括手动设置图表值的功能，以及手动选择图表颜色。
3.  记录在 [**PCP Charts**]{.strong} 应用程序中创建的视图：
    以下是获取镜像或记录 [**PCP Charts**]{.strong}
    应用程序中创建的视图的选项：
    ::: itemizedlist
    -   单击 [**File**]{.strong}，然后单击 [**Export**]{.strong}
        以保存当前视图的镜像。
    -   点 [**Record**]{.strong}，然后 [**Start**]{.strong} 启动记录。点
        [**Record**]{.strong}，然后 [**Stop**]{.strong}
        停止记录。停止记录后，会存档记录的指标，以便稍后查看。
    :::
4.  可选：在 [**PCP Charts**]{.strong} 应用程序中，主配置文件称为
    [**view**]{.strong}，允许保存与一个或多个 chart
    关联的元数据。此元数据描述了所有图表，包括所使用的指标和图表列。通过单击
    [**File**]{.strong} 保存自定义 [**视图**]{.strong} 配置，然后保存
    [**View**]{.strong}，稍后载入 [**视图**]{.strong} 配置。
    以下 [**PCP 图表**]{.strong}
    应用程序视图配置文件示例描述了一个堆栈图图，显示了读取和写入到给定
    XFS 文件系统 `loop1`{.literal} 的字节总数：
    ``` screen
    #kmchart
    version 1
    chart title "Filesystem Throughput /loop1" style stacking antialiasing off
        plot legend "Read rate"   metric xfs.read_bytes   instance  "loop1"
        plot legend "Write rate"  metric xfs.write_bytes  instance  "loop1"
    ```
:::
::: itemizedlist
**其他资源**
-   `pmchart(1)`{.literal} 和 `pmtime(1)`{.literal} man page
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
:::
:::
::: section
::: titlepage