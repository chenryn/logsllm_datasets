# Self-Learning IP Traffic Classification Based on Statistical Flow Characteristics

**Authors:**
- Sebastian Zander
- Thuy T. T. Nguyen
- Grenville J. Armitage

**Affiliation:**
Centre for Advanced Internet Architectures (CAIA), Swinburne University of Technology, Melbourne, Australia

**Contact:**
- {szander, tnguyen, garmitage}@swin.edu.au

## Abstract
In various key areas of IP network engineering, management, and surveillance, the ability to dynamically identify traffic flows based on the applications that generate them is highly beneficial. Current classification methods rely on specific packet header fields (e.g., destination port) or application layer protocol decoding, which have limitations such as unpredictable port usage and high resource requirements. We propose a framework for application classification using unsupervised machine learning (ML). Flows are classified based on their statistical characteristics, and we present a systematic approach to identify an optimal set of flow attributes. The effectiveness of our approach is evaluated using captured traffic traces.

## 1. Introduction
Over recent years, the variety of applications used on the Internet has increased dramatically. Besides traditional applications like email and web browsing, new applications such as gaming and P2P have gained significant traction. The ability to dynamically classify flows according to their applications is highly beneficial in areas such as trend analysis, network-based QoS mapping, application-based access control, lawful interception, and intrusion detection.

The most common identification technique, based on known port numbers, is limited because many applications no longer use fixed, predictable port numbers. Some applications use ports registered with the Internet Assigned Numbers Authority (IANA), but many only utilize well-known default ports, which do not guarantee unambiguous identification. Applications may use non-standard ports due to:
- Non-privileged users needing to use ports above 1024.
- Users deliberately hiding their presence or bypassing port-based filters.
- Multiple servers sharing a single IP address.
- Dynamic ports (e.g., passive FTP) that are unknown in advance.

A more reliable technique involves stateful reconstruction of session and application information from packet contents. However, this method is complex and resource-intensive, requiring extensive knowledge of application semantics and powerful processing capabilities. It can be difficult or impossible when dealing with proprietary protocols or encrypted traffic. Signature-based methods, while more efficient than stateful reconstruction, are still protocol-dependent.

Machine Learning (ML) can automatically build classifiers by learning the inherent structure of a dataset. Classification in a high-dimensional attribute space is challenging for humans and rule-based methods, but stochastic ML algorithms can handle it effectively. While previous work has explored the use of ML for traffic classification, a systematic approach for application classification and evaluation is lacking. We propose a detailed framework for self-learning flow classification based on statistical flow properties, including a systematic approach to identify the optimal set of flow attributes that minimizes processing cost while maximizing classification accuracy. We evaluate our approach using traffic traces collected at different locations in the Internet.

## 2. Related Work
Previous studies have used various parameters to describe network traffic. The idea of using stochastic ML techniques for flow classification was first introduced in the context of intrusion detection. In [7], principal component analysis and density estimation were used to classify traffic into different applications, but the evaluation was based on a small dataset. In [3], nearest neighbor and linear discriminant analysis were used to separate different application types, but this supervised learning approach requires a priori knowledge of the number of classes. In [4], the Expectation Maximization (EM) algorithm was used to cluster flows into different application types, but the influence of different attributes and the quality of clustering were unclear.

## 3. ML-Based Flow Classification Approach and Evaluation
Our approach uses traffic traces or capture data from the network. First, packets are classified into flows based on IP addresses, ports, and protocols, and flow characteristics are computed. These characteristics and a model of the flow attributes are used to learn the classes. Once the classes are learned, new flows can be classified. The results can be exported for evaluation and used for QoS mapping, trend analysis, etc.

We define a flow as a bidirectional series of IP packets with the same source and destination address, port numbers, and protocol (with a 60-second flow timeout). Our attribute set includes packet inter-arrival time and packet length mean and variance, flow size (bytes), and duration. All attributes, except duration, are computed in both directions. We use NetMate [8] for packet classification and autoclass [9] for ML-based classification, which implements the EM algorithm [10].

For evaluation, we use the Auckland-VI, NZIX-II, and Leipzig-II traces from NLANR [11], captured at different locations and times. We use 1,000 randomly sampled flows for eight destination ports (FTP data, Telnet, SMTP, DNS, HTTP, AOL Messenger, Napster, Half-Life), resulting in a total of 8,000 flows. We use sequential forward selection (SFS) to find the best attribute set, starting with each single attribute and iteratively adding the next best attribute until no further improvement is achieved.

To assess the quality of the resulting classes, we compute the intra-class homogeneity H. For each trace, the best set of attributes varies in size between 4-6. The preferred attributes are forward packet length mean, forward/backward packet length variance, forward inter-arrival times mean, and forward size (75%), backward packet length mean (50%), duration, and backward size (25%). Packet length statistics are preferred over packet inter-arrival time statistics for the ports we use. The average maximum H is 0.87±0.02, but H varies significantly for different ports (e.g., 0.98±0.01 for Half-Life and 0.74±0.14 for HTTP).

## 4. Conclusions and Future Work
We have proposed a framework for ML-based flow classification based on statistical flow properties, identified a systematic approach to identify an optimal set of flow attributes, and evaluated the effectiveness of our approach. The results show that some separation of applications can be achieved if the flow attributes are chosen properly. Future work will include evaluating our approach with a larger number of flows and more applications, obtaining traces with payload information for verification, experimenting with additional attributes, and assessing the precision and performance of the resulting classifier.

## References
1. S. Sen, O. Spatscheck, D. Wang, “Accurate, Scalable In-Network Identification of P2P Traffic Using Application Signatures”, WWW 2004, New York, USA, May 2004.
2. J. Frank, “Machine Learning and Intrusion Detection: Current and Future Directions”, Proceedings of the National 17th Computer Security Conference, 1994.
3. M. Roughan, S. Sen, O. Spatscheck, N. Duffield, “Class-of-Service Mapping for QoS: A Statistical Signature-Based Approach to IP Traffic Classification”, ACM SIGCOMM Internet Measurement Workshop 2004, Taormina, Sicily, Italy.
4. A. McGregor, M. Hall, P. Lorier, J. Brunskill, “Flow Clustering Using Machine Learning Techniques”, Passive & Active Measurement Workshop 2004, France, April, 2004.
5. K. Lan, J. Heidemann, “On the Correlation of Internet Flow Characteristics”, Technical Report ISI-TR-574, USC/Information Sciences Institute, July, 2003.
6. K. Claffy, H.-W. Braun, G. Polyzos, “Internet Traffic Profiling”, CAIDA, San Diego Supercomputer Center, http://www.caida.org/outreach/papers/1994/itf/, 1994.
7. T. Dunnigan, G. Ostrouchov, “Flow Characterization for Intrusion Detection”, Oak Ridge National Laboratory, Tech Report, http://www.csm.ornl.gov/~ost/id/tm.ps, November 2000.
8. NetMate, http://sourceforge.net/projects/netmate-meter/ (as of January 2005).
9. P. Cheeseman, J. Stutz, “Bayesian Classification (Autoclass): Theory and Results”, Advances in Knowledge Discovery and Data Mining, AAAI/MIT Press, USA, 1996.
10. A. Dempster, N. Laird, D. Rubin, “Maximum Likelihood from Incomplete Data via the EM Algorithm, Journal of Royal Statistical Society, Series B, Vol. 30, No. 1, 1977.
11. NLANR traces: http://pma.nlanr.net/Special/ (as of January 2005).