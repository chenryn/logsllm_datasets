### Android WebLogin: Google's Skeleton Key
**Presenter: Craig Young, Senior Researcher at Tripwire VERT**

#### About the Presenter
- **Professional Background:** I am a senior researcher at Tripwire VERT, where I research, identify, and disclose vulnerabilities.
- **Personal Interests:** In my free time, I enjoy long bike rides, testing systems for input sanitization issues, and building furniture with my wife on weekends.
- **Disclaimer:** I am not an Android developer.

#### Talk Overview (tl;dr)
1. **Security vs. Convenience in Android**
2. **WebLogin: Bypassing Password Prompts**
3. **Undetected Token Egress by Security Tools**
4. **One Token Can Fully Compromise Google Apps**

#### Understanding WebLogin
- **Android Token Type Example:**
  - `weblogin:service=youtube&continue=https://www.youtube.com/`
- **Functionality:**
  - Grants cookies for the desired service.
  - Acts as a substitute for password entry.

#### Abusing WebLogin
- **Cookies Not Limited by Service:**
  - An app may request a token for YouTube but then access your email.
  - Android permission prompts are often unclear.
  - For example, a YouTube token can also provide access to Gmail.
- **Prompt Frequency:**
  - The prompt appears once per app per token type.
- **Access Methods:**
  - Root or physical access can also be used to obtain tokens.

#### Attacking Google Apps Using the Skeleton Key
- **Admin WebLogin:**
  - Provides extensive control:
    - Disable 2-Step Verification
    - Reset Passwords
    - Add Super-Users
    - Create and Modify Privileges/Roles
    - Create and Control Mailing Lists on Target Domain
    - Reveal Temporary Passwords
  - *Note:* Google attempted to address some of these issues before my talk. See the demo for details.

#### Personal Google Accounts at Risk
- **Full Access:**
  - Google Drive, Calendar, Gmail, etc.
  - Ability to reset passwords (if 2-Step Verification is not enabled).
  - Data dump via Google Takeout.
  - *Note:* Google addressed some of these issues in response to my talk.

#### Additional Access Capabilities
- **Remote Installation of Apps from Google Play**
- **Federated Login Authentication**
- **Creation of Google Sites**

#### Methods to Obtain WebLogin Tokens
- **Malware + AccountManager API**
- **Querying accounts.db (Using root exploit)**
- **Physical Access (Chrome auto sign-in)**
- **Chip-Off Forensics (Memory extraction)**

#### Stock Viewer Proof of Concept (PoC)
- **Objectives:**
  1. Create a token-stealing app without root access.
     - The app requests access to Google Finance.
     - Two token requests: one for the device and one for the attacker.
  2. Publish the app on Google Play.
     - Will Google Bouncer allow the token request?
     - Will Bouncer detect that the app is malicious?
  3. Scan the app with Android security software.
     - Do privacy advisors recognize the threat?
     - Is the token theft blocked?

#### App Development
- **Key Code:**
  ```java
  TOKEN_TYPE = "weblogin:service=finance&continue=https://finance.google.com/";
  getAuthToken(acct, TOKEN_TYPE, null, this, new TokenCallback(), null);
  ```
- **getAuthToken() Prompt:**
  - Generates a generic and uninformative prompt.

#### App Revisions
- **TubeApp (Quick PoC):**
  - Presents as a 'YouTube' downloader.
  - Fetches domain OAuth secret for in-app display.
  - No token egress.
- **Stock View V1:**
  - Description indicates it is for testing only.
  - Price is $150.
  - Uploads token if permitted.
- **Stock View V2 (SSL Release):**
  - Description updated to convey that it is spyware.
  - Uploads all available account details.
  - Uploads token if permitted.

#### App Permissions
- **On Install:**
- **On Run:**

#### App Results
- **Google Play Publication:**
  - The app was successfully published.
  - No data received indicating Bouncer execution.
- **New Questions:**
  - Does Bouncer run all apps?
  - Does Bouncer run with Google accounts?
  - Does Google perform any manual review?

#### Stock Viewer in Google Play
- **Play Store Retrospective:**
  - The app was live on Google Play for a month.
  - Android Verify now detects it as spyware, unless the app is renamed.

#### Endpoint Protection
- **Antivirus/Privacy Advisors:**
  - Scanned with 5 popular tools:
    - Lookout: Safe
    - Norton: No Risk
    - Sophos: Clean
    - Avast: Zero Problems
    - Trend Micro Mobile Security: No Threats Found
- **Privacy Advisors:**
  - Avast lists it as having account access.
  - Lookout Premium did not report access to tokens.

#### Demo
- **Live Demonstration:**
  - [Demo Details]

#### Preventive Measures
- **Avoid Using Admin Accounts on Android:**
- **Be Skeptical of Token Requests:**
  - Be cautious of `weblogin:` and `LSID/SID` tokens.
- **Stick with Trusted App Stores and Vendors:**
- **Run Antivirus to Detect Root Exploits:**

#### Incident Response
- **Punt the Intruder:**
  - Invalidate all sign-in cookies.
  - Reset passwords.
- **Review Affected Accounts:**
  - Check for new mail forwarding rules.
  - Verify new recovery email addresses.
  - Review new domain admins.
- **Analyze Google Apps Audit Trail:**
  - Identify unauthorized actions.
  - Record IP addresses used by the intruder.

#### Further Reading
- **Helpful References:**
  - Excellent blog on AccountManager: [Link]
  - My BSides SF 2013 talk on bypassing 2-step verification: [Link]
  - Duo Security blog on bypassing 2-step verification: [Link]

#### Questions?
- **Follow @CraigTweets for more updates.**