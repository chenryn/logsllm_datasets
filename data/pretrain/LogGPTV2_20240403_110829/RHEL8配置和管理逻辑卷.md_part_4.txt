:::
::: itemizedlist
**其它资源**
-   此 playbook 还执行持久挂载示例，如 [Ansible playbook
    永久挂载文件系统示例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/managing-local-storage-using-rhel-system-roles_managing-file-systems#an-example-ansible-playbook-to-persistently-mount-a-file-system_managing-local-storage-using-rhel-system-roles){.link}。
:::
::: itemizedlist
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#an-example-playbook-to-create-mount-an-ext4-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 Ext4 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来创建和挂载 Ext4 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471696684512}
**例 2.5. 在 /dev/sdb 上创建 Ext4 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext4
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 会永久将文件系统挂载到 `/mnt/data`{.literal} 目录中。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#an-example-ansible-playbook-to-create-mount-ext3-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 ext3 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来创建和挂载 Ext3 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471628983312}
**例 2.6. 在 /dev/sdb 上创建 Ext3 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext3
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 会永久将文件系统挂载到 `/mnt/data`{.literal} 目录中。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#example-ansible-playbook-to-resize-an-existing-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色重新定义现有 Ext4 或 Ext3 文件系统大小的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来调整块设备中现有 Ext4 或 Ext3 文件系统的大小。
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471635250576}
**例 2.7. 在磁盘上设置单个卷的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 12 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
:::
:::
::: itemizedlist
-   如果上例中的卷已存在，若要调整卷的大小，您需要运行同一个
    playbook，这与参数 `size`{.literal} 的值不同。例如：
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471745484320}
**例 2.8. 调整 `ext4`{.literal} 大小的 playbook `/dev/sdb`{.literal}**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 10 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中为barefs）当前是任意卷。存储角色根据 disk:
    属性中列出的磁盘设备识别卷。
:::
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在其它文件系统中使用 `Resizing`{.literal}
操作可能会破坏您要使用的设备中的数据。
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#example-ansible-playbook-to-resize-an-existing-lvm-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色在 LVM 上调整现有文件系统大小的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用存储 RHEL
系统角色来重新定义带有文件系统的 LVM 逻辑卷的大小。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在其它文件系统中使用 `Resizing`{.literal}
操作可能会破坏您要使用的设备中的数据。
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471731533008}
**例 2.9. 调整 myvg 卷组中现有 mylv1 和 myvl2 逻辑卷大小的 playbook**
::: example-contents
``` screen
---
- hosts: all
   vars:
    storage_pools:
      - name: myvg
        disks:
          - /dev/sda
          - /dev/sdb
          - /dev/sdc
        volumes:
            - name: mylv1
              size: 10 GiB
              fs_type: ext4
              mount_point: /opt/mount1
            - name: mylv2
              size: 50 GiB
              fs_type: ext4
              mount_point: /opt/mount2
- name: Create LVM pool over three disks
  incude_role:
    name: rhel-system-roles.storage
```
::: itemizedlist
-   此 playbook 调整了以下现有文件系统的大小：
    ::: itemizedlist
    -   `mylv1`{.literal} 卷中的 Ext4 文件系统挂载到
        `/opt/mount1`{.literal}，大小调整为 10 GiB。
    -   `mylv2`{.literal} 卷中的 Ext4 文件系统挂载到
        `/opt/mount2`{.literal}，大小调整为 50 GiB。
    :::
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#example-ansible-playbook-to-create-a-swap-partition-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色创建交换分区的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal}
角色来创建交换分区（如果不存在），或使用默认参数在块设备中修改交换分区（如果已存在）。
::: example
[]{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#idm140471735609856}
**例 2.10. 在 /dev/sdb 上创建或修改现有 XFS 的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device with swap
- hosts: all
  vars:
    storage_volumes:
      - name: swap_fs
        type: disk
        disks:
          - /dev/sdb
	size: 15 GiB
        fs_type: swap
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中为`swap_fs`{.literal}
    ）目前是任意卷。`storage`{.literal} 角色根据在 `disks:`{.literal}
    属性中列出的磁盘设备识别卷。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::