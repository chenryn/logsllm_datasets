title:Towards a Taxonomy of Cloud Recovery Strategies
author:Min Fu and
Len Bass and
Anna Liu
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Towards a Taxonomy of Cloud Recovery Strategies 
Min Fu, Len Bass, Anna Liu  
School of Computer Science and Engineering, University of New South Wales, Sydney, Australia 
Software Systems Research Group, NICTA, Sydney, Australia 
{Min.Fu, Len.Bass, Anna.Liu}@nicta.com.au 
of 
from 
failures 
Abstract—Recovering 
sporadic 
operations  such  as  rolling  upgrade  or  migration 
is 
complicated by the fact that the application being upgraded 
or  migrated  must  continue  to  provide  service.  This  means 
that recovery strategies for sporadic operations must include 
facilities for recovering from normal operations as well. As a 
step  in  deriving  methods  for  recovering  from  failures  in 
sporadic  operations,  we  classify  existing  methods  into  four 
categories  according  to  their  purposes  and  the  life  cycle 
phase  for  which  they  are  applicable.  Not  only  does  this 
taxonomy  facilitate  the  research  on  recoverability  of  cloud 
sporadic  operations  but  also  it  can  help  better  understand 
the existing cloud recovery strategies. 
Keywords—cloud  recovery;  consumer-initiated;  sporadic 
operations;  
I. 
 INTRODUCTION 
the 
features 
recovery 
From  a  cloud  consumer’s  perspective,  recovery  from 
cloud failures is challenging because cloud platforms only 
provide  consumers  with  very 
limited  visibility  and 
control[1].  For  example,  in  AWS  consumers  are  not 
allowed  to  explicitly  assign  a  specified  IP  address  to  an 
instance.  This  means  clients  of  a  failed  instance  must 
rediscover  the  IP  address  of  its  replacement.  Sporadic 
operations such as upgrade or migration also fail both from 
operational  errors  and  applications  errors.  According  to 
industry  practice, 
for  cloud 
applications  are  turned  off  during  sporadic  operations  on 
them  because  of  the  creation  of  a  large  number  of  false 
positives. This may lead to a decrease of the dependability 
of  cloud  applications  when  operators  perform  sporadic 
operations  on  them.  Although  there  are  several  existing 
recovery  strategies  for  cloud  sporadic  operations,  one  of 
their  drawbacks  is  that  they  usually  only  consider  the 
operational  errors  but  do  not  consider  application  errors 
that happen during cloud sporadic operations. A recovery 
mechanism  for  cloud  sporadic  operations  may  need  to 
integrate a wide range of cloud recovery strategies. Hence, 
in order to propose fine-grained recovery mechanisms for 
cloud  sporadic  operations,  we  first  analyze  those  various 
existing cloud recovery strategies and make taxonomy for 
them. 
methods for normal activities, there are recovery methods 
for sporadic activities[3] (e.g. upgrade operation on cloud 
applications).  For  a  particular  sporadic  activity,  such  as 
upgrade,  it  can  be conducted either  manually  or  with  the 
assistance  of  automation  scripts  such  as  Chef[6].  When 
cloud  operators  are  conducting  the  sporadic  activities 
either manually or automatically, recovery strategies such 
as process-oriented recovery methods[2] can be employed 
if  runtime  errors  happen.  Those  recovery  strategies  are 
intended  for  sporadic  activities  during  runtime  phase. 
When  operators  are  designing  the  scripts  for  sporadic 
activities,  they  may  utilize  script  mini  test[7]  to  test  the 
availability  of  the  scripts  or  they  may  design  exception 
handlers[7] to handle the potential errors. Those recovery 
strategies are intended for sporadic activities during design 
phase.  
The categories we have identified – normal operations 
vs.  sporadic  operations  and  design  time  vs.  runtime 
constitute the axes for our taxonomy. 
Our  research  has  two  main  contributions:  1)  We 
summarize of the existing cloud recovery methods; 2) We 
classify those cloud recovery methods. 
The  remainder  of  this  paper  is  organized  as  follows. 
Section  II  presents  the  methodology  of  establishing  the 
taxonomy;  section  III  is  literature  review  for  cloud 
recovery;  section  IV  is  data  analysis  and  taxonomy; 
section V is discussion; section VI is conclusion and future 
work. 
II.  METHODOLOGY OF ESTABLISHING THE TAXONOMY 
We  establish  the  taxonomy  by  a  three-step  approach. 
This  approach  is  illustrated  in  Fig.  1.  The  first  step  is  to 
define the research questions for our research. The second 
step  is  to  extract  the  data  of  existing  cloud  recovery 
strategies  from  the  literature  review.  The  third  step  is  to 
analyze the data to figure out the taxonomy.  
Some cloud recovery methods are designed for normal 
activities[3]  (e.g.  cloud  applications  workflow).  For 
example, virtual machine replication mechanism[4] can be 
employed to recover from errors in cloud applications by 
switching  from  an  erroneous  machine  to  its  backup  one. 
This  mechanism  takes  effect during  the runtime  of  cloud 
applications and it is intended for normal activities runtime 
phase.  Other  cloud  recovery  methods  for  normal  actives, 
e.g.  fault-tolerance  design[5],  are  implemented  in  the 
design phase of cloud applications.  In addition to recovery 
Fig. 1.  Methodology of Establishing Taxonomy 
A.  Defining Research Questions 
Our research goal is to provide a taxonomy for existing 
cloud  recovery  strategies  for  the  purpose  of  facilitating 
research on recoverability for sporadic operations on cloud 
applications.  As  has  been  discussed  in  previous  sections, 
cloud applications have different variety of activities, and 
those  activities  have  different  life  cycle  phases.  The 
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
DOI 10.1109/DSN.2014.70
696
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:21:46 UTC from IEEE Xplore.  Restrictions apply. 
classification  will  reflect  those  activities  and  life  cycle 
phases. As such, we have defined the below three research 
questions: 
1) What are the existing cloud recovery strategies? 
2)  What  types  of  activities  of  cloud  applications  are 
those methods applicable for? 
3)  What  phases  in  the  activities’  life  cycle  are  those 
methods applicable for? 
B.  Literature Review and Extracting Data 
To  answer  research  question  1,  we  reviewed  existing 
cloud  recovery  strategies  from  literatures.  Based  on  our 
literature review, we extracted the data of several recovery 
strategies  for  cloud.  Those  recovery  strategies  include: 
rollback  recovery,  disaster  recovery,  virtual  machine 
replication,  fault-tolerance,  recovery  for  cloud  internal 
protocols, test driven scripts, exception handling, recovery 
for  operations  as  transaction,  recovery  for  operations  as 
processes and user guided recovery for cloud applications. 
The details of these cloud recovery strategies are provided 
in section III.  
C.  Analysing Data 
To  answer  research  question  2,  we  analyzed  the 
activity  types  (normal  activity  or  sporadic  activity)  and 
what  recovery  methods  are  designed  for  each  type  of 
activity.  Normal  activities  are  the  activities  of  cloud 
applications themselves, such as application workflow[3]. 
Among the recovery strategies for normal activities, some 
strategies perform recovery on the infrastructure level and 
some methods on the application level. Sporadic activities 
are activities on cloud applications such as deployment and 
upgrade[3][8]. Among the recovery strategies for sporadic 
activities,  some  strategies  perform  recovery  on 
the 
infrastructure  level  and  some  methods  on  the  application 
level.  The  two  types  of  activities  of  normal  activity  and 
sporadic  activity  can  be  one  dimension 
the 
classification. 
for 
To answer research question 3, we analyzed the phases 
of the life cycle the recovery methods are applicable and 
what  recovery  methods  are  designed  for  each  life  cycle 
phase. We did this for both normal activities and sporadic 
activities.  A  life  cycle  for  an  application  or  a  script 
contains  several  phases:  design  phase,  runtime  phase, 
downtime  phase,  and  off-service  phase.  Some  of  the 
recovery  strategies  are  applicable  for  normal  activities 
design phase or sporadic activities design phase, and some 
of the strategies are intended for normal activities runtime 
phase  or  sporadic  activities  runtime  phase.  For  the  other 
phases  such  as  downtime  phase  or  off-service  phase,  the 
existing  recovery  methods  are  out  of  scope  for  this  the 
paper. Hence, the two phases of design phase and runtime 
phase  can  be  put  as  another  dimension 
the 
classification. 
for 
If  we  organize  these  two  dimensions  as  a  two-
dimension coordinate chart, they form the coordinate chart 
in Fig. 2. Now the problem is to figure out what recovery 
strategies  should  be  placed  into  each  block  of  the 
coordinate chart. 
Fig. 2.  Coordinate Chart for Dimensions in Taxonomy 
III.  LITERATURE REVIEW FOR CLOUD RECOVERY 
We organized cloud recovery strategies into table I. In 
this table, recovery strategies and example of each strategy 
are provided. 
TABLE I.  
EXISTING CLOUD RECOVERY STRATEGIES 
Recovery Strategies 
Cloud Application Rollback 
Disaster Recovery 
Virtual Machine Replication 
Fault-Tolerance 
Recovery for Cloud Internal 
Protocols 
Test Driven Scripts 
Cloud Operations Exception 
Handling 
Recovery for Cloud Operations as 
Transactions 
Recovery for Cloud Operations as 
Processes 
User Guided Recovery for Cloud 
Applications 
A.  Cloud Application Rollback 
Examples 
checkpoint based rollback[9] 
Log based rollback[9] 
Geographical redundancy[10] 
Cloud storage replication[11] 
Remus[12] 
Recovery Block[13] 
N-version Programming[14] 
Parallel[15] 
FTCloud[15] 
FATE&DESTINI[16] 
Chef mini test[7] 
Scripts exceptions 
handling[23] 
Cloud  management tool 
exceptions handling[24] 
Forward recovery[17] 
Backward recovery[17] 
Operation undo & redo[18] 
Reparation[19] 
Recovery plan generation[20] 
Rollback  treats  a  cloud  distributed  system  as  a 
collection  of  application  processes  that  communicate 
through  the  network  [9].  It  can  be  classified  into  two 
categories:  checkpoint  based  rollback[9]  and  Log  based 
rollback[9].  For  the  checkpoint  based  rollback,  upon  a 
failure,  a  process  will  roll  back  to  the  previously  saved 
consistent  checkpoint  which  includes  at  a  minimum  the 
state  of  the  participating  processes.  In  contrast,  The  log 
based  rollback  recovery  combines  checkpointing  with 
logging  of  nondeterministic  events[9].  It  logs  all  the 
697
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:21:46 UTC from IEEE Xplore.  Restrictions apply. 
nondeterministic events that a process executes as well as 
the  information  necessary  to  replay  each  event.  By 
replaying  those  logged  events  when  failure  happens,  a 
process  can  be  recovered.  Hence,  log  based  rollback 
recovery  is  particularly  attractive  for  applications  that 
frequently interact with the outside world[9]. As such, both 
checkpoint  based  rollback  and  log  based  rollback  are 
intended  for  applications  running  in  cloud  during  the 
applications’  run  time.  The  checkpoints  as  well  as  the 
event logs are generated at applications’ run time, and the 
recovery  actions  are  taken  at  runtime  as  well.  One 
challenge  behind  this  strategy  is  the  overhead  of  making 
checkpoints (e.g. checkpointing a VM) and the efficiency 
of retrieving and understanding the checkpoints in order to 
make a rollback recovery. 
B.  Disaster Recovery 
recovery 
Disaster 