+-------------------+-----------+------+-----------------------------+
| subTransSeq       | 子        | Y    | 考虑到审单中组合的情        |
|                   | 审单序号  |      | 况，通常需要报关单号和子审  |
|                   |           |      | 单序号进行组合子审单的识别  |
+-------------------+-----------+------+-----------------------------+
| serviceId         | 服务标识  | Y    | 当前执行的服务的标识        |
|                   |           |      |                             |
|                   |           |      | 可以是                      |
|                   |           |      | 组粒度的服务标识，组件标识  |
|                   |           |      |                             |
|                   |           |      | 也可以是细粒度的类名，      |
|                   |           |      | 方法名，进程号，线程号，某  |
|                   |           |      | 一特定程序段落给出特定名称  |
+-------------------+-----------+------+-----------------------------+
| processName       | 业务      |      | 表示当前业务处理流          |
|                   | 流程名称  |      | 程的名称，用于业务日志分析  |
+-------------------+-----------+------+-----------------------------+
| processId         | 业        |      | 表示当前业务处理流程        |
|                   | 务流程ID  |      | 的实例ID，用于业务日志分析  |
+-------------------+-----------+------+-----------------------------+
| processStep       | 业务流    |      | 表示业务处理流程当前执行步  |
|                   | 程步名称  |      | 骤的名称，用于业务日志分析  |
+-------------------+-----------+------+-----------------------------+
| processStepId     | 业务      |      | 表                          |
|                   | 流程步ID  |      | 示业务处理流程当前执行步骤  |
|                   |           |      | 的实例ID，用于业务日志分析  |
+-------------------+-----------+------+-----------------------------+
| status            | 状态      | Y    | 标识当前审单的状态          |
+-------------------+-----------+------+-----------------------------+
| SourceServiceId   | 审单发    | Y    | 表示审单发起方，服          |
|                   | 起者，服  |      | 务使用方，调用发起方的标识  |
|                   | 务使用者, |      |                             |
|                   |           |      |                             |
|                   | 调        |      |                             |
|                   | 用发起者  |      |                             |
+-------------------+-----------+------+-----------------------------+
| argument(xx)      | 参数值    |      | 其                          |
|                   |           |      | 中xx可以是参数名称或者序号  |
+-------------------+-----------+------+-----------------------------+
| result(xx)        | 结果值    |      | 其                          |
|                   |           |      | 中xx可以是参数名称或者序号  |
+-------------------+-----------+------+-----------------------------+
| config(xx)        | 配置      |      | 其                          |
|                   |           |      | 中xx可以是参数名称或者序号  |
+-------------------+-----------+------+-----------------------------+
| errorCode         | 错误码    | Y    | 出错时必填                  |
+-------------------+-----------+------+-----------------------------+
| errorMessage      | 错误消息  | Y    | 出错时必填                  |
+-------------------+-----------+------+-----------------------------+
| errorResolution   | 错误      |      | 对解决错误的建议            |
|                   | 解决方案  |      |                             |
+-------------------+-----------+------+-----------------------------+
| retCode           | 返回码    |      | 审单返回码（业务意义）      |
+-------------------+-----------+------+-----------------------------+
| messageId         | 消        | Y    | 系统间异步传                |
|                   | 息跟踪号  |      | 递的消息的全局唯一性标识。  |
|                   |           |      |                             |
|                   |           |      | 注：消息跟踪                |
|                   |           |      | 号由前端系统产生；后端系统  |
|                   |           |      | 除了在不同系统的消息跟踪号  |
|                   |           |      | 格式标准变动或有组合审单时  |
|                   |           |      | ，才需要产生新的消息跟踪号  |
|                   |           |      | 。但是必须和前者设立关联。  |
+-------------------+-----------+------+-----------------------------+
| messageRetCode    | 消息中    | Y    | 系统间传递的消息中的返回码  |
|                   | 的返回码  |      |                             |
+-------------------+-----------+------+-----------------------------+
| correlationId     | 消息关    | Y    | 在响应消息中标              |
|                   | 联跟踪号  |      | 识被应答的请求消息的跟踪号  |
+-------------------+-----------+------+-----------------------------+
| messageIdOrg      | 原始消    | Y    | 当消息跟踪号发生变化        |
|                   | 息跟踪号  |      | 时，用于表示原始信息跟踪号  |
+-------------------+-----------+------+-----------------------------+
| errorCodeOrg      | 原        |      | 当错误                      |
|                   | 始错误码  |      | 码被转译时，记录原始错误码  |
+-------------------+-----------+------+-----------------------------+
| errorMessageOrg   | 原始      |      | 当错误消息                  |
|                   | 错误消息  |      | 被转译时，记录原始错误消息  |
+-------------------+-----------+------+-----------------------------+
| messageSource     | 消息源    | Y    | 标识消息源头系统            |
+-------------------+-----------+------+-----------------------------+
| m                 | 消        | Y    | 标识消息目标接收系统        |
| essageDestination | 息目的地  |      |                             |
+-------------------+-----------+------+-----------------------------+
| duration          | 耗时      |      | 单位为毫                    |
|                   |           |      | 秒，表示某一服务所用时间。  |
|                   |           |      |                             |
|                   |           |      | 如果一个服务的日志分        |
|                   |           |      | 为在开始、结束都记录了日志  |
|                   |           |      | ，则耗时应放置在结束记录中  |
|                   |           |      | 。或者有程序自动解析生成。  |
+-------------------+-----------+------+-----------------------------+
**交易流程跟踪和错误定位**
日志应该实现错误定位的功能以及审单流程跟踪的功能，能够清晰记录每笔审单的痕迹。由于审单全流程往往是需要跨越多个应用系统的，而且有可能会被拆成多个子过程，因此必须制定统一的审单标识来跟踪跨系统审单。
**报关单号**（transId）：在一个审单完成过程中，该"报关单号"是全局唯一的，跟踪审单的全生命周期记录。
**本地审单跟踪号**（subTransSeq）：考虑到审单组合的情况，通常需要报关单号和子审单序号进行组合识别。
**消息跟踪号**（messageId）：系统间传递的消息的全局唯一性标识。"消息跟踪号"在全局是唯一的，用来跟踪系统间操作记录。
**消息关联跟踪号**（correlationId）：用于在响应消息中标识被应答的请求消息的跟踪号。内容为请求消息的消息跟踪号。
**原始消息跟踪号**（messageIdOrg）：当消息跟踪号发生变化时，用于表示原始信息跟踪号。内容为原始消息的消息跟踪号。
如果在一个交易中包含两个或两个以上的系统间通信，以上设计可以保证跟踪跨系统交易的完整链路情况，同时可以保证跟踪消息传递，按不同服务（应用）接口建立调用时间序列，收集链路上每个服务的性能数据。
下图给出了一个示例的场景：
![](media/image1.png){width="4.824305555555555in" height="2.5625in"}
其中描述的交易流程如下：
1)  由用户界面发起一个交易请求，触发审单，报关单号为T-1
2)  用户界面将接受到的请求转给服务组件1
3)  为了完成这个审单，服务组件需要先后调用业务对象1的服务和业务对象2的服务
```{=html}
```
a)  调用业务对象1时，业务对象1需要向核心系统发请求
b)  调用业务对象2时，业务对象2需要向核心系统发请求
为了区分这两次跨系统调用，需要为业务对象1和业务对象2对核心系统发送消息分别给出消息跟踪号，分别为msg-1和msg-2。
## 终端类日志
1.  桌面终端设备日志格式规范
  --------------- -------------------------------------------------------
  1               终端标识
  2               系统用户
  3               窗口标题
  4               键盘输入
  5               鼠标点击
  6               编辑内容
  7               新进程
  8               网络连接
  9               剪贴板
  10              打开文件
  11              SECURE-CRT
  12              X-SHELL
  13              CMD窗口
  14              目标账号
  15              使用协议
  16              操作内容
  17              目标地址
  18              PLSQL SQL
  19              IM2000
  20              工具名称
  21              目标账号
  22              使用协议
  23              操作对象
  24              操作内容
  25              源IP地址
  26              目标IP地址
  27              应用系统账号
  28              登录时间
  29              标题信息
  30              URL信息
  31              操作方式
  32              页面加载时间
  33              Html源代码数据
  34              表单信息
  35              关键字
  --------------- -------------------------------------------------------
2、采集终端类日志格式规范
  --------------- -------------------------------------------------------
  **序号**        **记录项**
  1               资产编号
  2               终端名称
  3               终端IP
  4               MAC地址
  5               安装位置
  6               责任人
  7               接入方式
  8               发起时间
  9               结束时间
  10              连接方向
  11              上传流量
  12              下载流量
  13              传输内容
  --------------- -------------------------------------------------------
# 日志统一采集规范
日志中心对日志的收集采用统一的规范策略，制定针对不同设备日志类型的日志采集方式和采集频度。具体采集规范要求如下：
  ----------------------- ---------------------------- -----------------------
  **设备类型**            **采集方式**                 **采集频度**
  主机                    Agent主动采集                默认100ms，可配置
                          Syslog/rsyslog被动收集       实时收集
  数据库                  Agent主动采集                默认100ms，可配置
                          旁路监控技术                 实时收集分析
  中间件                  Agent主动采集                默认100ms，可配置
                          Syslog/rsyslog被动收集       实时收集
  交换机                  Syslog方式被动收集           实时收集
  网络流量                流量采集器采用端口镜像方式   实时收集
  防火墙                  Syslog方式被动收集           实时收集
  IPS                     Syslog方式被动收集           实时收集
  WAF                     Syslog方式被动收集           实时收集
  业务系统日志            Agent主动采集                默认100ms，可配置
                          被动收集                     实时收集
  其他                    Agent主动采集                默认100ms，可配置
                          Syslog/rsyslog被动收集       实时收集
                          Snmp协议主动采集             默认1s，可配置
  文件                    专用文件采集Agent主动采集    默认100ms，可配置
  视频                    专用视频采集Agent主动采集    默认100ms，可配置
  ----------------------- ---------------------------- -----------------------
视频、文件等非格式化数据采用特殊的agent进行采集，利用基于中间件传输文件传输方式将这类非格式化数据传输至日志中心数据采集服务器，并建立非格式化数据与其他数据资源的关联。利用MQ中间件传输文件，它具有数据压缩、传输大文件、断点续传等功能，能够实现视频、文件等非格式化数据的安全、可靠传输。
# 日志分析规范
## 日志解析
通过app_name对日志进行类型划分，在此基础上针对不同的日志类型采用对应的分析策略。
不用类型的日志其格式虽然是不同的，但日志的格式却都是遵循一定规范的，这些日志格式的规范、规则统一汇总至日志中心的分析策略中，用于日志的分析处理。
例如：
-   迪普防火墙设备日志格式：
+-----------------------------------------------------------------------+
| 日志整体输出格式为如下形式：                                          |
|                                                                       |
| \TIMESTAMP HOSTNAME %%AAA/BBB/C/DDD(l): YYYY                    |
|                                                                       |
| 1.  ② ③ ④ ⑤ ⑥ ⑦ ⑧                                                     |
|                                                                       |
| 其中：                                                                |
|                                                                       |
| -   ①\：为优先级：是RFC                                         |
|     3164中定义的Facility和Severity的                                  |
| 组合。PRI:Facility\*8+Severity。并使用十进制表示。长度为1\~3个字符。  |
|                                                                       |
| -   ②TIMESTAMP：为时间戳，紧跟在①部分的"\>"后面，中间不允许有空格。   |
|                                                                       |
| -                                                                     |
| ③HOSTNAME：为主机名，与TIMESTAMP之间有一个空格,与%%之间也有一个空格。 |