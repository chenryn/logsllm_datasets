首先，CONCAT（1，2，3）会返回字符串‘123’。接着，
口
（60928）在数字上大于0xff（255），所以最终的结果为真。
术运算。接着，为完成比较，左操作数也会转换成一个数字。最后，由于0xee00
在下面的表达式里，右操作数中的十六进制常量会被转换成一个数字，因为那是个算
0xee00>0xff+0
0xee00>0xff
个字节值小，因此结果为假。
0x0a=10
先转换成数字。
0x0d0a='\r\n'
第3章数据类型
住，默认情况下，MySQL会尽量把值转换为表达式所需要的类型，而不是产生错误。
然后应
0+
应用前面的这些规则。
+0）
+0）
。左操作数的第一个字节值比右操作数的第一
日期：“0000-00-00＇。另外，由于任
→1
，*123+/10会转换成123/10，因为
→1
→1
→
↑
ia'
7
6
97
e
，
间
---
## Page 199
较。
来进行计算。
字，
那些值大于1的操作数才会被认为是逻辑真值：
也不会被当成逻辑真值。因为当它转换成整数时，所得结果为0。在下面几个表达式里，只有
数（根据情况进行相应的类型转换）。这意味着，对于像0.3这样的小数，即使它为非零值，
转换：
部分不是数字，
并不会检查整个字符串，以期望找到某个数字；它只会检查字符串的开头。如果字符串的开头
算术运算符为例。它们期望的是数字，因此其操作数都会进行相应的转换：
2
=等）跟上下文密切相关，
，它们不仅要求操作数得是数字，而且还要求它们是整
因为它们都是数字：
也就是说，它们会根据操作数的类型
01
→1
↑
一
→0
→
→-428.9
↑
↑
→
↑
3.5表达式计算和类型转换
O
0.0003
0
1973
0
L
-23
2
7
L
179
---
## Page 200
达式，并检查其结果：
3.5.2.2
符串来比较。
间值时，会发生到日期或时间类型的转换。在比较操作中，一般的规则是把日期/时间值当作字
将自动转换成日期或时间。当把某个值赋给日期或时间类型列，或者当某个函数需要日期或时
行相反转换。在数字上下文中，日期/时间值将自动转换成数字；在日期或时间上下文中，数字
3.5.2.1时态值的解释规则
180
如果想看看某个表达式会发生什么样的类型转换，那么可以在SELECT 语句里计算这个表
根据表达式中上下文的需要，MySQL会把字符串和数字自动转换成日期/时间值，或者进
如果无法直观地看出表达式的类型，那么可以把查询结果放到一个新表里，然后查看这个
mySql> SELECT x'41',X'41+0;
TO_DAYS(20250413)
TO_DAYS('2025-04-13')
在下列示例里，TO_DAYS（）函数的3种表达式参数都将解释成相同的值：
如果 mytbl表里有一个名为 data_col 的 DATE 列，那么下列语句都是等价的：
INSERT
口
口
口如果两个操作数都是字符串，那么它们将按字符串进行词法比较。对于二进制串，
口除运算符以外，所有涉及 NULL值的比较结果都为 NULL。（另外，与=很像，只
在进行比较运算时，MySQL会根据需要按以下规则对操作数进行类型转换。
2 SELECT char_col FROM mytb1 WHERE char_col = 00;
一非常意外吧！这完全是MySQL的类型转换规则惹的祸。char_co1是一个字符串列，但
0x65
在对某个值的使用方式不太确定时，可以利用MySQL的类型转换机制，把表达式强制转换
其本意可能只是想删除包含00·值的那两行。而实际的执行效果却是把所有的行都删除
DELETE FROMmytbl WHERE char_Col=00;
给定这些值之后，下面这条语句会产生什么样的效果呢？
'abc'
对于那些用来删改行的DELETE或UPDATE语句，提前对表达式计算进行测试特别有用，因
mysql> DESCRIBE t;
mySql> CREATE TABLE t SELECT X'41' AS co11, X'41' + 0 AS co12;
0x65+0.0
0x65
char_col
ghi'
00
def'
'00"
co12
ghi
def
0
abc
col1
+0
+-------
1 double(17,0) 1 NO
varbinary(1)
一
NO
Null|Key|Default丨Extra
→13
→
3.5表达式计算和类型转换
101
'e
181
句
把
---
## Page 202
用函数CONVERT（)和 HEX（）。
释成那个引导符所指示的字符集：
有所要的字符集，可以使用CHARSET（）函数：
个数字对应于原字符串里的一个字节：
182
如果想确定某个给定十六进制UCS-2字符所对应的UTF-8字符的十六进制值，可以组合使
CHARSET(_ucs2‘abcd')
在字符串的前面带上字符集引导符，并不会导致该字符串发生转换，但 MySQL会把它解
CHARSET(CONVERT('abcd'USING ucs2))
CHARSET('abcd')
CONVERT('abcd'USING ucs2)
如果想把字符串从一个字符集转换到另一个，
如果想去掉小数秒部分，
带有时间部分的时态值可以转换成带有微秒部分的值：
CURDATE()
DATE_ADD(20130101,
使用DATE_ADD（）或INTERVAL运算时，