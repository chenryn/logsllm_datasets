3[KOS15, OOS17] refer to uniform OT as random OT F m,κ
4The sender set all the OT messages to be the same value and force the receiver to conclude their item is in the
ROT
sender’s set.
5
OT
Base OT Security
Uniform Security F Uu
Sender Chosen F Su
Sender Chosen F S
Receiver Chosen F R
Endemic Security F E
OT
OT
OT
OT
Πext
OT Extension Security
Uniform Security F U
Sender Chosen F S
OT
OT
Receiver Chosen F R
Endemic Security F E
OT
OT
Figure 2: The ﬁgure shows the implications of the base OT security (Deﬁnition 2.6) when Πext
from Figure 9 or a slight variation (dashed line) is applied. F∗u
OT security where the
receiver’s selection is uniformly sampled by the functionality Deﬁnition 2.4 ,A.13.
OT denotes F∗
where Πext is their respective extension protocol up to hashing.
In addition, Section 5.3 details new OT extension protocols that can eﬃciently be realized in
the ideal cipher model. These protocol are inspired by existing implementation [Rin, Kel, WMK16]
but are provably secure. Unfortunately, these existing implementation improperly apply the ideal
cipher model which could be leverage by a malicious receiver to fully break all OT messages.
Implementation. We instantiate our OT protocol with the Diﬃe-Hellman key exchange. We
show how the security loss can be reduced using the random self-reducibility of the DDH assump-
tion. We also instantiate it based on the Kyber key exchange [BDK+17, SAB+17]. This is a proof
of concept instantiation that shows that our framework is very agile in terms of assumptions and
allows to obtain post-quantum security eﬃciently.
We give implementations and benchmarks for the two OT protocols as well as ﬁve implemen-
tations of OT extension protocols. Both our OT protocols can perform an OT in one millisecond.
We compare our results with the OTs of Chou & Orlandi [CO15] and Naor & Pinkas [NP01]. In a
WAN network setting we observe that our one-round DDH protocol is the fastest, requiring 110ms.
The next fastest framework was the two round protocol of [CO15], requiring 210ms. In addition to
being faster than [CO15] in the WAN setting, our protocols achieve full simulation based security
without performing additional rounds as [CO15] requires.
Our communication optimized OT extension protocol achieving endemic security requires two
rounds of communication and can processes 2 million OTs per second. This is on par with a
throughput optimized version of [KOS15, Rin] in the LAN setting. In the WAN setting our pro-
tocol becomes 2.5 times faster than [KOS15] (which achieves stronger security). Our computation
optimized protocol in the ideal cipher model can process 23 million OTs per second in the LAN
over the course of 5 rounds and achieves full uniform message security.
2 Preliminaries
2.1 Notation
κ denotes the security parameter. For n ∈ N, [n] := {1, . . . , n} and (sj)j(cid:54)=i denotes ther ordered
set (sj)j∈[n]\{i}. We use ΠA,B, Π when A and B are clear from the context, to denote a protocol
between two parties A and B. (cid:104)A, B(cid:105) denotes as the transcript of the protocol, which consists of all
the messages sent between them. We use (A(a), B(b))Π to denote the joint output distribution of
A and B when interacting in protocol Π with inputs a and b.
Deﬁnition 2.1 (Random Oracle). A random oracle over a set of domains and an image is a
6
A:
mA ← A(tA)
kA = Key(tA, mB)
mA
mB
B:
mB ← B(tB, mA)
kB = Key(tB, mA)
Figure 3: The ﬁgure shows a key agreement protocol between parties A and B with random tapes
tA and tB. Correctness requires kA = kB.
collection of functions H that map an element q within one of the domains to a uniform element
H(q) in the image.
Deﬁnition 2.2 (Ideal Cipher). An ideal cipher over a set of tuples of domains and an image is a
collection of functions π such that for any element k of the ﬁrst domain, πk is a permutation that
map an element q within the second domain to a uniform element πk(q) in the image.
2.2 Key Agreement
Deﬁnition 2.3 ((Two Message) Uniform Key Agreement (UKA)). Let G be a group. We call a
protocol Π between two ppt parties A and B (two message) uniform key agreement if A ﬁrst sends
a message mA ∈ G to B and B responds with a ﬁnal message mB and in the end, both establish
a common key k (see Figure 3) using a key establishing algorithm Key. Further, we require three
properties:
Correctness:
Pr[kA = Key(tA, mB) = Key(tB, mA) = kB] ≥ 1 − negl,
where tA ← {0, 1}∗, tB ← {0, 1}∗, mA ← A(tA) and mB ← B(tB).
Key-Indistinguishability: For any ppt distinguisher D and any polynomial size auxiliary input
z,
| Pr[D(z,(cid:104)A, B(cid:105), k) = 1] − Pr[D(z,(cid:104)A, B(cid:105), u) = 1]| = negl,
where k is the established key between A and B and u is a uniform element from the key
domain.
Uniformity: For any ppt distinguisher D and any polynomial size auxiliary input z,
| Pr[D(z, mA) = 1] − Pr[D(z, u) = 1]| = negl,
where u is a uniform element from G and mA ← A(tA).
When A and B can send their messages concurrently, we call it a one-round UKA.
In Appendix A.1, we deﬁne multi-instance security notions when executing multiple instances
of a key agreement. All the considered notions follow from the standard notions from above, but
potentially with a polynomial security loss.
7
2.3 Oblivious Transfer
Deﬁnition 2.4 (Ideal k-out-of-n Oblivious Transfer). An ideal k-out-of-n oblivious transfer is a
functionality that interacts with two parties, a sender S and a receiver R. R sends a set S ⊆ [n] of
size k to the functionality.
The functionality is publicly parameterized by one of the following message sampling methods:
Sender Chosen Message: S sends the messages (mi)i∈[n] to the functionality who sets si := mi.
Receiver Chosen Message: R sends the messages (mi)i∈[k] to the functionality who sets sSi :=
i for i ∈ [k] and uniformly samples si ← {0, 1}(cid:96) for i ∈ [n] \ S.
s(cid:48)
Uniform Message: The functionality uniformly samples (s1, ..., sn) ← {0, 1}(cid:96)×n.
Endemic: If S is corrupt, S sends the messages (si)i∈[n] to the functionality. If R is corrupt, R
i for i ∈ [k]. All remaining
sends the messages (s(cid:48)
si for i ∈ [n] are uniformly sampled si ← {0, 1}(cid:96) by the functionality.
i)i∈[n] to the functionality who sets sSi := s(cid:48)
As speciﬁed by the message sampling method, the functionality constructs messages (si)i∈[n].
Thereafter, the functionality sends (si)i∈[n] to S and (si)i∈S to R. We denote the ideal function-
OT,F E
alities for sender chosen, receiver chosen, uniform message and endemic as F S
OT,
respectively.
OT,F U
OT,F R
OT,F U
OT,F E
Remark 2.5. We generalize this deﬁnition for the case where n can be exponential. In addition,
we consider the case when the set S is sampled uniformly by the functionality. We call this uni-
form selection as opposed to receiver selection. In this case, we denote the analogous oracles for
OT,F R
F S
In our deﬁnition of OT, we use the simpliﬁed UC security deﬁnition that is suﬃcient for full
UC security [CCL15]. We also use this deﬁnition for our stand-alone security analysis in the main
body of this paper, but in that case, we allow adversary A’ to rewind adversary A.
OT, respectively. See Deﬁnition A.13.
OT as F Su
OT, F Ru
OT,F Uu
OT,F Eu
Deﬁnition 2.6 (k-out-of-n Oblivious Transfer (OTk,n)). We call a protocol Π between two ppt
parties, a sender S and a receiver R, a k-out-of-n oblivious transfer if at the end, S outputs n
strings (si)i∈[n] and R outputs (si)i∈S and a set S ⊂ [n] s.t. |S| = k. For security, we require two
properties with respect to a functionality FOT.
Security Against a Malicious Sender: For any ppt adversary A, there exists a ppt adversary
A’ such that for any ppt environment D and any polynomial size auxiliary input z
| Pr[D(z, (A, R)Π) = 1] − Pr[D(z, (A(cid:48),FOT)) = 1]| = negl,
where all algorithms receive input 1κ. R additionally receives input S.
Security Against a Malicious Receiver: For any ppt adversary A, there exists a ppt adversary
A’ such that for any ppt distinguisher D and any polynomial size auxiliary input z
| Pr[D(z, (S,A)Π) = 1] − Pr[D(z, (FOT,A(cid:48))) = 1]| = negl,
where all algorithms receive input 1κ.
We distinguish four diﬀerent security notions.
8
Uniform Message Security: The OT is secure with respect to F U
Sender Chosen Message Security: The OT is secure with respect to F S
Receiver Chosen Message Security: The OT is secure with respect to F R
Endemic Security: The OT is secure with respect to F E
OT, i.e. F U
OT, i.e. F E
OT-secure.
OT-secure.
OT, i.e. F S
OT, i.e. F R
OT-secure.
OT-secure.
Remark 2.7. It is important to notice that we distinguish the functionality an OT provides from the
ideal functionality for which the OT is secure. Here, F U
OT-security is the strongest security deﬁnition
since a malicious party cannot tweak the distribution of the strings (si)i∈[n]. Endemic security gives
the weakest security guarantees since in both cases, the malicious receiver and malicious sender
case, the adversary can potentially choose the strings (si)i∈S.
Remark 2.8. In the following, we assume that all messages from a sender or a receiver also contain
a session identiﬁer sid and that for every new session between a sender and a receiver, they receive
access to a fresh random oracle that is unique to that session (local random oracle).
3 Relations Between OT Security Notions
OT-security.
OT or F R
OT-security implies
OT-security. F S
OT-security imply F E
We show now how endemic security relates to the other security notions of uniform, receiver and
sender chosen message security. For an overview, see Figure 1.
Lemma 3.1. Let the distribution of OT strings be eﬃciently sampleable. Then F U
F S
OT as well as F R
Proof. In the ﬁrst step, we show that uniform message security implies sender chosen message
security and receiver chosen message security implies endemic security. These two implications
result from the same simple fact that a malicious sender interacting with the ideal OT is easier to
construct when it can choose the OT strings than when it receives the strings from the ideal OT.
The following claim formalizes this fact.
Claim 3.2. Let Π be an OT secure against a malicious sender with respect to an ideal OT F∗
OT that
sends the OT strings (si)i∈[n] to the sender, i.e. functionality F U
OT, and the distribution
of (si)i∈[n] is eﬃciently sampleable. Then Π is also secure against a malicious sender with respect
to ideal OT FOT, which receives the OT strings (si)i∈[n] from the sender, i.e functionality F S
OT and
F E
OT.
OT and F R
Proof. We show that if there is an adversary that breaks the security against a malicious security
with respect to ideal OT FOT then there is also an adversary that breaks the security with respect
to F∗
1 there
exists a ppt distinguisher D1 and a polynomial size auxiliary input z with
OT. More precisely, if there is a ppt adversary A1 such that for any ppt adversary A(cid:48)
| Pr[D1(z, (A1, R)Π) = 1] − Pr[D1(z, (A(cid:48)
1,FOT)) = 1]| = ,
where all algorithms receive input 1κ and R additionally receives input S. Then there is also a
ppt adversary A2 such that for any ppt adversary A(cid:48)
2 there exists a ppt distinguisher D2 and a
polynomial size auxiliary input z with
| Pr[D2(z, (A2, R)Π) = 1] − Pr[D1(z, (A(cid:48)
2,F∗
OT)) = 1]| = ,
where all algorithms receive input 1κ and R additionally receives input S.
9
Sender((si)i∈[n]):
∀i ∈ [n] :
ri := si ⊕ mi
output (si)i∈[n]
S
(mi)i∈S
(mi)i∈[n]
F E
OT
(ri)i∈[n]
Receiver(S ⊂ [n]):
∀i ∈ S :
si := ri ⊕ mi
output (si)i∈S
Figure 4: Sender chosen OT protocol ΠS
mi and si are in {0, 1}(cid:96).
k,n in the F E
OT hybrid (Deﬁnition 2.4). For all i ∈ [n], ri,
We set A2 := A1 and D2 := D1. Further, for any A(cid:48)
2,F∗
of (A(cid:48)
choose the OT strings (si)i∈[n] from the same distribution as F∗
description of A(cid:48)
as a subset of the set of all ppt adversaries A(cid:48)
1.
OT) is identical with the distribution (A(cid:48)
2. Since D1 is successful for any A(cid:48)
1,FOT). This follows from the fact that A(cid:48)
1 such that the distribution
1 could
OT does and otherwise follow the