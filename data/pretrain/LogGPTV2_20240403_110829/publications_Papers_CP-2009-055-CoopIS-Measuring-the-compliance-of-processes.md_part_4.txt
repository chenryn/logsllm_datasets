expressive and hard to explain. It is not possible to trace the missing or dissent
instances. The solution proposed in this paper obtains two different values for
compliance (i.e. degree and maturity) and also calculates intermediate results
from instance compliance. This enables process designers to trace back which
instances are affecting positively or negatively the compliance of the processes
under analysis. The industrial application shows that the notion of equivalence
cannot be used with satisfactory results to evaluate the compliance of processes
with a reference model.
5.5 Feasibility Study
The sequence-based compliance algorithm is based on the generation of sets of
firing sequences to describe the behavior of a process model. Unfortunately, in
general,thesizeofthesesetscangrowexponentiallywiththesizeoftheWF-net
in terms of activities. This section shows the applicability of our algorithm in
spite of its exponentialcomplexity.Like Dijkman [8],we used a sample ofEPCs
oftheSAPreferencemodeltotestwhetherouralgorithmcanbeappliedinprac-
tice by showing that the computation times are acceptable. The SAP reference
model has been described in [20,10] and is referred to in many research papers
(e.g. [8]). Since it is among the most comprehensive reference models covering
over 600 business processes,we assume that these models can be regarded as a
representativeexample.The study is performedby applyingthe sequence-based
compliance algorithm to a subset of 126 pairs of EPCs from the SAP reference
model, which we have converted to WF-nets. The pairs are put together based
on their similarity computed by the ProM plugin “EPC Similarity Calculator”.
Our pairs are characterized with a similarity greater than 50%. Figure 6 shows
the percentageofmodelpairsforwhichthe compliancecanbe computedwithin
a given number of milliseconds on a regular desktop computer. Ninety percent
ofthe processmodels analyzedwithour compliancealgorithmtookless than62
milliseconds. In the experiment, the runtime of the algorithm takes on average
50.5 milliseconds with a standard deviation of 9.3 milliseconds. Figure 7 shows
the runtime per activities in the processes of a model pair.The averagenumber
of activities in these processes is 16. We only found a weak correlation between
runtime and the number of activities of a process. Therefore, we conclude that
for the number of activities, which we found in the SAP reference models, the
90 K. Gerke, J. Cardoso, and A. Claus
Analysis10 800 %% ms)10 890
00
mpletedCompliance 246 0000 %%%% AverageRuntime( 34567 00000
Co 30 40 50 60 70 80 90 100 0 5 10 15 20 25 30 35
AverageRuntime(ms) NumberofActivities
Fig.6. Averageruntime Fig.7. Runtimeas function of activities
sequence-based compliance analysis is applicable. These results show that, in
theoryweareconfrontedwithexponentialruntime whenthe complexityismea-
suredintermsoftheinputsizeonly,i.e.activities.However,inpracticethereare
naturalboundaries,e.g.the number ofactivities per processmodel is betweena
lower bound and an upper bound. Hence, the algorithmcan be used in practice
despite its exponential complexity.
An alternative to address complexity with regard to the input size of the al-
gorithmistocapturethebehaviorofamodelusingthestatespaceofaWF-net.
Astate spacecorrespondsto the setofreachablemarkingsofa WF-net[3].The
resulting graph is denoted as the reachability graph. Buchholz et al. [5] present
a method focusing on optimizing the generation of the reachability graph of
large Petri nets. The central idea is to decompose a net, to generate reachabil-
ity graphs for the parts and to combine them. Furthermore, there exist various
techniques for state space reduction [8], which may be exploited to improve the
efficiency of the underlying algorithm of the sequence-based compliance algo-
rithm. Corresponding approaches are referred to reduction rules. These rules
aimatreducingthe sizeofthestatespacebyreducingthe numberofplacesand
transitions preserving information relevant for analysis purpose. For example,
it is possible to account for the significance of transitions. Transitions, which
are rarely executed, can be left out using abstraction or encapsulation. Again,
we found arguments for the applicability of state spaces in the context of the
input size. For example, Verbeek et al. [28] argue that state spaces generating a
reachability graph are often feasible for systems up to 100 transitions.
6 Related Work
Ourworkcanberelatedtovariousresearchareas,namelyprocessdiscoveryand
verification, process integration, and behavior inheritance.
Measuringcomplianceassumesthepresenceofagivenmodel.Therefore,pro-
cess mining, which aims at the discoveryof sucha model, is related to the work
presented in this paper. Various algorithms have been developed to discover
process models based on a log file [17,1].
Intheliterature,wehaveidentifiedtwowaystoverifythecompliancebetween
processes and supporting IS: log-basedverificationand inter-model verification.
Measuring the Compliance of Processes with Reference Models 91
Since it is possible to verify if a model and a log file fit together, measuring the
compliancecanbeseenasaveryspecificformoflog-basedverification.Thus,our
paperisrelatedtotheworkofCooketal.[7]whohaveintroducedtheconceptof
process validation. They propose a technique comparing the event stream com-
ing from the process model with the event stream from the execution log based
ontwo differentstring distance metrics.The notionof compliancehas alsobeen
discussed in the context of genetic mining [1]. Compliance checking is applied
by using fitness, behavioral precision and recall. All these compliance measures
propose some kind of replay of the instances in a Petri net. However, the appli-
cabilityofthelog-basedverificationpresumestheexistenceoflogfileswhichare
notalwaysavailable.Inthe contextofthe inter-modelverificationvanderAalst
introduces the delta analysis, which compares the real behavior of an IS with
the expected behavior (e.g. a reference model) [23]. Different notions of equiva-
lence of process models being subject to verification, such as trace equivalence
[27],bisimulation[27],andbehavioralequivalence[24],havebeendeveloped.The
classical equivalence notions are defined as a verification property which yields
yes or no, but do not provide a degree of equivalence [26]. Notions searchingfor
behavioral similarity, for instance causal footprint [26] and structural appropri-
ateness [17,24] are applicable in the context of process mining. However, they
do not account for the characteristics of compliance with reference models. We
introduced them in Sect. 5.3. For a detailed overview we refer to [24].
Froma conceptualviewpoint,processintegrationandprocessinheritance are
similar to our work. Comparing two process models in order to measure com-
pliance in terms of corresponding behavior implies that there are distinctions.
Commonintegrationapproachesforprocessmodelsshowhowthese distinctions
can be integrated, for example to harmonize processes after an organizational
merger [14]. In [8], Dijkman has categorized differences related to control flow,
resourceassignment,andactivitycorrespondenceandhaspresentedatechnique
to diagnose these differences between process models. Juan [13] applied a string
comparison approach of the firing sequences embedded in each process model
to identify differences between process models. These works are complementary
to our approach and can be considered together during the compliance analy-
sis to locate the exact position of a difference between the models and analyze
the type of a difference in the process models. However, since process integra-
tionapproachesaredesignedforsimilarbusinesssituations,they typicallyfocus
on very similar processes on the same level of abstraction. Basten and van der
Aalst [3] have introducedthe relationsof behavioralinheritance, whichcan also
be used to identify commonalities and differences in process models. The ap-
proach is motivated by improving reusability and adaptivity of process models
andconcentratesonapplyingtheideaofinheritanceknownfromobject-oriented
modeling. The relations are based on labeled transition systems and branching
bisimulationandcorrespondtothealgebraicprinciplesofencapsulationandab-
straction [3]. Process inheritance assumes that process models originate from
common sources and, therefore, are different yet very similar. Thus, notions of
inheritance do not account for different level of granularities.
92 K. Gerke, J. Cardoso, and A. Claus
7 Conclusion and Future Work
Reference models provide valuable recommendations for the implementation of
business processes. However, methods and solutions to determine how these
guidelines are implemented in practice are non-existing. Known algorithms to
evaluate the equivalence of processes have proven to be insufficient to measure
compliance since many factors and characteristics related to compliance are ig-
nored. In this paper, we have investigatedthe characteristicsof compliance and
wehavedevisedagenericapproachtoanalyzethe complianceofprocessmodels
with reference models. Our main contribution is an algorithm, called sequence-
based compliance, which is based on the observation that process models can
have different structures but one process can still be compliant with the other.
In order to validate our approach and our algorithm we have measured the
compliance of a complaint handling process of a German passenger airline. The
passengerairlinehasobtainedtransparencyofitscurrentcustomersupportpro-
cesses by carrying out process mining on their log files. Nonetheless, the next
step, which needed to be executed, was to determine to which extent the pro-
cess were aligned with a reference model (i.e. ITIL). This second step has been
addressed in this paper.
We have further evaluated our methodology by comparing the results with
two existing approaches.The validation wasnot trivialsince we applied process
miningandequivalencealgorithmsonrealdata.Theresultshaveshownthatthe
sequence-based compliance yields more insightful values when compared to the
results of existing algorithms based on analyzing the equivalence of processes.
In the future, we are planning to apply our approach and algorithm to other
business and industry domains. We also aim to learn which additional types
of customization of reference models are important and study how traceability
can be incorporatedinto compliance analysis to enable organizations to quickly
identify problematic parts of their running processes.
References
1. Alves de Medeiros, A.K., Weijters, A.J.M.M., van der Aalst, W.M.P.: Genetic
ProcessMining:ABasicApproachanditsChallenges.In:Bussler,C.J.,Haller,A.
(eds.) BPM 2005. LNCS, vol. 3812, pp.203–215. Springer, Heidelberg (2006)
2. APQC, American Productivity & Quality Center, http://www.apqc.org/pcf
3. Basten, T., van der Aalst, W.M.P.: Inheritance of Behavior. Journal of Logic and
Algebraic Programming 47(2), 47–145 (2001)
4. Bergroth, L., Hakonen,H., Raita, T.: A Surveyof Longest Common Subsequence
Algorithms. In: 7th IEEE Intl. Symposium on String Processing Information Re-
trieval, pp.39–48. IEEE Press, Los Alamitos (2000)
5. Buchholz, P., Kemper, P.: Hierarchical Reachability Graph Generation for Petri
Nets. Form. Methods Syst. Des. 21(3), 281–315 (2002)
6. CMMI, Software Engineering Institute, http://www.sei.cmu.edu/cmmi
7. Cook, J.E., He, C., Ma, C.: Measuring Behavioral Correspondence to a Timed
Concurrent Model. In: 17th IEEE Intl. Conf. on Software Maintenance, p. 332.
IEEE Press, Los Alamitos (2001)
Measuring the Compliance of Processes with Reference Models 93
8. Dijkman,R.:DiagnosingDifferencesbetweenBusinessProcessModels.In:Dumas,
M., Reichert, M., Shan, M.-C. (eds.) BPM 2008. LNCS, vol. 5240, pp. 261–277.
Springer, Heidelberg (2008)
9. Ehrig, M., Koschmider, A.,Oberweis, A.:Measuring Similarity between Semantic
Business Process Models. In: 4th Asia-Pacific Conf. on Conceptual Modeling, pp.
71–80 (2007)
10. Teufel,T.,Keller,G.:SAPR/3ProcessOrientedImplementation:IterativeProcess
Prototyping. Addison-Wesley,Reading (1998)
11. Gerke, K., Tamm, G.: Continuous Quality Improvementof ITProcesses based on
Reference Models and Process Mining. In: 15th Americas Conf. on Information
Systems (2009)
12. IDS ScheerAG, http://www.ids-scheer.com
13. Juan, Y.C.: A String Comparison Approach to Process Logic Differences between
Process Models. In:9th Joint Conference on Information Sciences (2006)
14. Mendling, J., Simon, C.: Business Process Design by View Integration. In: Eder,
J.,Dustdar,S.(eds.)BPMWorkshops2006.LNCS,vol.4103,pp.55–64.Springer,
Heidelberg (2006)
15. OfficialIntroductiontotheITILServiceLifecycle.StationeryOfficeBooks,London
(2007)
16. ProM, http://www.processmining.org
17. Rozinat,A.,Veloso,M.,vanderAalst,W.M.P.:EvaluatingtheQualityofDiscov-
ered Process Models. In: Bridewell, W., et al. (eds.) 2nd Intl. Workshop on the
Induction of Process Models, Antwerp,Belgium, pp. 45–52 (2008)
18. SAPAG, http://www.sap.com
19. Supply-Chain Council, SupplyChain Operations Reference Model, SCOR (2006)
20. Ladd, A., Curran, T., Keller, G.: SAP R/3 Business Blueprint: Understanding
the Business Process Reference Model. Prentice Hall PTR Enterprise Resource
Planning Series, UpperSaddle River(1997)
21. The IT Governance Institute,COBIT 4.1 (2007)
22. van der Aalst, W.M.P.: Verification of Workflow Nets. In: Az´ema, P., Balbo, G.
(eds.) ICATPN 1997. LNCS, vol. 1248, pp.407–426. Springer, Heidelberg (1997)
23. van der Aalst, W.M.P.: Business Alignment: Using Process Mining as a Tool for
Delta Analysis and Conformance Testing. Requir.Eng. 10(3), 198–211 (2005)
24. van der Aalst, W.M.P., Alves de Medeiros, A.K., Weijters, A.J.M.M.: Process
Equivalence: Comparing Two Process Models Based on Observed Behavior. In:
Dustdar, S., Fiadeiro, J.L., Sheth, A.P. (eds.) BPM 2006. LNCS, vol. 4102, pp.
129–144. Springer, Heidelberg (2006)
25. vanderAalst,W.M.P.,Dreiling,A.,Gottschalk,F.,Rosemann,M.,Jansen-Vullers,
M.: Configurable Process Models as a Basis for Reference Modeling. In: Bussler,
C.J., Haller,A.(eds.)BPM2005. LNCS,vol.3812, pp.512–518. Springer,Heidel-
berg (2006)
26. van Dongen, B.F., Dikman, R., Mendling, J.: Measuring Similarity between Busi-
ness Process Models. In: Bellahs`ene, Z., L´eonard, M. (eds.) CAiSE 2008. LNCS,
vol. 5074, pp.450–464. Springer, Heidelberg (2008)
27. vanGlabbeek,R.J.,PeterWeijland,W.:BranchingTimeandAbstractioninBisim-
ulation Semantics. Communications of the ACM 43(3), 555–600 (1996)
28. Verbeek,H.M.W.:VerificationandEnactmentofWorkflowManagement Systems.
PhD thesis, University of Technology, Eindhoven,The Netherlands (2004)