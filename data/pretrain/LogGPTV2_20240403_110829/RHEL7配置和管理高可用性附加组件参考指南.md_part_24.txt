node1: Stopping Cluster (pacemaker)...
node1: Stopping Cluster (corosync)...
node2: Stopping Cluster (corosync)...
[root@node1:~]# pcs quorum update wait_for_all=1
Checking corosync is not running on nodes...
node2: corosync is not running
node1: corosync is not running
Sending updated corosync.conf to nodes...
node1: Succeeded
node2: Succeeded
[root@node1:~]# pcs quorum config
Options:
  wait_for_all: 1
```
:::
::: section
::: titlepage
# []{#ch-Quorum-HAAR.html#s1-quorumunblock-HAAR}仲裁 unblock 命令 {.title}
:::
在您知道集群不仲裁但您希望集群进行资源管理的情况下，您可以使用以下命令来防止集群在建立仲裁时等待所有节点。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
使用这个命令时需要特别小心。在运行此命令前，请确定关闭没有在集群中的节点，并确保无法访问共享资源。
:::
``` screen
# pcs cluster quorum unblock
```
:::
::: section
::: titlepage
# []{#ch-Quorum-HAAR.html#s1-quorumdev-HAAR}仲裁设备 {.title}
:::
Red Hat Enterprise Linux 7.4
完全支持配置作为集群的第三方设备的独立仲裁设备。它的主要用途是允许集群保持比标准仲裁规则允许更多的节点故障。建议在具有偶数节点的集群中使用仲裁设备。对于双节点群集，使用仲裁设备可以更好地决定在脑裂情况下保留哪些节点。
在配置仲裁设备，您必须考虑以下内容。
::: itemizedlist
-   建议您在与使用该仲裁设备的集群相同的站点中的不同的物理网络中运行仲裁设备。理想情况下，仲裁设备主机应该独立于主集群，或者至少位于一个独立的
    PSU，而不要与 corosync 环或者环位于同一个网络网段。
-   您不能同时在集群中使用多个仲裁设备。
-   虽然您不能同时在集群中使用多个仲裁设备，但多个集群可能同时使用一个仲裁设备。每个使用这个仲裁设备的集群都可以使用不同的算法和仲裁选项，因为它们保存在集群节点本身。例如，单个仲裁设备可由一个具有破坏
    `(`{.literal} fifty/fifty split)算法的集群和具有 `lms`{.literal}
    (last man standing)算法的第二个群集使用。
-   不应在现有集群节点中运行制裁设备。
:::
::: section
::: titlepage
## []{#ch-Quorum-HAAR.html#s2-quorumdevinstall-HAAR}安装仲裁设备软件包 {.title}
:::
为集群配置仲裁设备需要您安装以下软件包：
::: itemizedlist
-   在现有群集的节点上安装 `corosync-qdevice`{.literal}。
    ``` screen
    [root@node1:~]# yum install corosync-qdevice
    [root@node2:~]# yum install corosync-qdevice
    ```
-   在仲裁设备主机上安装 `pcs`{.literal} 和 `corosync-qnetd`{.literal}。
    ``` screen
    [root@qdevice:~]# yum install pcs corosync-qnetd
    ```
-   在仲裁设备主机上启动 ` pcsd`{.literal} 服务并在系统启动时启用
    pcsd``{=html}。
    ``` screen
    [root@qdevice:~]# systemctl start pcsd.service
    [root@qdevice:~]# systemctl enable pcsd.service
    ```
:::
:::
::: section
::: titlepage
## []{#ch-Quorum-HAAR.html#s2-quorumdevconfig-HAAR}配置仲裁设备 {.title}
:::
本节提供了在红帽高可用性集群中配置仲裁设备的示例步骤。以下流程配置了仲裁设备并将其添加到集群中。在本例中：
::: itemizedlist
-   用于仲裁设备的节点是 `qdevice`{.literal}。
-   仲裁设备模型是
    `net`{.literal}，这是目前唯一支持的模型。`net`{.literal}
    模型支持以下算法：
    ::: itemizedlist
    -   `ffsplit`{.literal} ：5-fifty
        split.这为拥有最多活跃节点的分区提供一个投票。
    -   `lMS：le`{.literal} -man-standing.如果节点是集群中唯一可以看到
        `qnetd`{.literal} 服务器的节点，则它将返回一个投票。
        ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 警告 {.title}
        LMS
        算法允许在集群中只剩下一个节点时仍保持仲裁，但也意味着制裁设备的投票权利更大，它等同于
        number_of_nodes - 1。丢失与制裁设备的连接意味着丢失了
        number_of_nodes - 1
        个投票，就是说只有具有所有活跃节点的集群才能保持仲裁（因为仲裁设备的投票权利更大），
        其它任何群集都每以处于仲裁状态。
        :::
    :::
    有关实施这些算法的详情，请查看 `corosync-qdevice`{.literal}(8)man
    page。
-   集群节点是 `node1`{.literal} 和 `node2`{.literal}。
:::
下面步骤配置一个仲裁设备，并将仲裁设备添加到集群中。
::: orderedlist
1.  在您要用来托管仲裁设备的节点中，使用以下命令配置仲裁设备。这个命令配置并启动仲裁设备模型
    `net`{.literal}，并将设备配置为在引导时启动。
    ``` screen
    [root@qdevice:~]# pcs qdevice setup model net --enable --start
    Quorum device 'net' initialized
    quorum device enabled
    Starting quorum device...
    quorum device started
    ```
    配置制裁设备后，您可以检查其状态。这应该显示
    `corosync-qnetd`{.literal}
    守护进程正在运行，此时没有连接的客户端。`--full`{.option}
    命令选项提供详细输出。
    ``` screen
    [root@qdevice:~]# pcs qdevice status net --full
    QNetd address:                  *:5403
    TLS:                            Supported (client certificate required)
    Connected clients:              0
    Connected clusters:             0
    Maximum send/receive size:      32768/32768 bytes
    ```
2.  使用以下命令在 `firewalld`{.literal} 上启用 `高可用性`{.literal}
    服务，从而在防火墙上启用 `pcsd`{.literal} 守护进程和网络
    `仲裁`{.literal} 设备所需的端口：
    ``` screen
    [root@qdevice:~]# firewall-cmd --permanent --add-service=high-availability
    [root@qdevice:~]# firewall-cmd --add-service=high-availability
    ```
3.  从现有集群中的某个节点中，在托管仲裁设备的节点上验证用户
    `hacluster`{.literal}。
    ``` screen
    [root@node1:~] # pcs cluster auth qdevice
    Username: hacluster
    Password:
    qdevice: Authorized
    ```
4.  在集群中添加仲裁设备。
    在添加仲裁设备前，您可以检查当前的配置以及仲裁设备的状态以便稍后进行比较。这些命令的输出表明集群还没有使用仲裁设备。
    ``` screen
    [root@node1:~]# pcs quorum config
    Options:
    ```
    ``` screen
    [root@node1:~]# pcs quorum status
    Quorum information
    ------------------
    Date:             Wed Jun 29 13:15:36 2016
    Quorum provider:  corosync_votequorum
    Nodes:            2
    Node ID:          1
    Ring ID:          1/8272
    Quorate:          Yes
    Votequorum information
    ----------------------
    Expected votes:   2
    Highest expected: 2
    Total votes:      2
    Quorum:           1  
    Flags:            2Node Quorate 
    Membership information
    ----------------------
        Nodeid      Votes    Qdevice Name
             1          1         NR node1 (local)
             2          1         NR node2
    ```
    以下命令添加您之前在集群中创建的仲裁设备。您不能同时在集群中使用多个仲裁设备。但是，一个仲裁设备可以被多个集群同时使用。这个示例命令将仲裁设备配置为使用
    `ffsplit`{.literal} 算法。有关仲裁设备的配置选项的详情，请查看
    `corosync-qdevice`{.literal}(8)man page。
    ``` screen
    [root@node1:~]# pcs quorum device add model net host=qdevice algorithm=ffsplit
    Setting up qdevice certificates on nodes...
    node2: Succeeded
    node1: Succeeded
    Enabling corosync-qdevice...
    node1: corosync-qdevice enabled
    node2: corosync-qdevice enabled
    Sending updated corosync.conf to nodes...
    node1: Succeeded
    node2: Succeeded
    Corosync configuration reloaded
    Starting corosync-qdevice...
    node1: corosync-qdevice started
    node2: corosync-qdevice started
    ```
5.  检查仲裁设备的配置状态。
    在集群一端，您可以执行以下命令查看如何更改配置。
    [**pcs quorum config**]{.command} 显示已配置的仲裁设备。
    ``` screen
    [root@node1:~]# pcs quorum config
    Options:
    Device:
      Model: net
        algorithm: ffsplit
        host: qdevice
    ```
    [**pcs quorum status**]{.command}
    命令显示仲裁运行时状态，这表示仲裁设备正在使用中。
    ``` screen
    [root@node1:~]# pcs quorum status
    Quorum information
    ------------------
    Date:             Wed Jun 29 13:17:02 2016
    Quorum provider:  corosync_votequorum
    Nodes:            2
    Node ID:          1
    Ring ID:          1/8272
    Quorate:          Yes
    Votequorum information
    ----------------------
    Expected votes:   3
    Highest expected: 3
    Total votes:      3
    Quorum:           2  
    Flags:            Quorate Qdevice 
    Membership information
    ----------------------
        Nodeid      Votes    Qdevice Name
             1          1    A,V,NMW node1 (local)
             2          1    A,V,NMW node2
             0          1            Qdevice
    ```
    [**pcs quorum 设备状态显示仲裁设备运行时状态**]{.command}。
    ``` screen
    [root@node1:~]# pcs quorum device status
    Qdevice information
    -------------------
    Model:                  Net
    Node ID:                1
    Configured node list:
        0   Node ID = 1
        1   Node ID = 2
    Membership node list:   1, 2
    Qdevice-net information
    ----------------------
    Cluster name:           mycluster
    QNetd host:             qdevice:5403
    Algorithm:              ffsplit
    Tie-breaker:            Node with lowest node ID
    State:                  Connected
    ```
    从仲裁设备一侧，您可以执行以下 status 命令，该命令显示
    `corosync-qnetd`{.literal} 守护进程的状态：
    ``` screen
    [root@qdevice:~]# pcs qdevice status net --full
    QNetd address:                  *:5403
    TLS:                            Supported (client certificate required)
    Connected clients:              2
    Connected clusters:             1
    Maximum send/receive size:      32768/32768 bytes
    Cluster "mycluster":
        Algorithm:          ffsplit
        Tie-breaker:        Node with lowest node ID
        Node ID 2:
            Client address:         ::ffff:192.168.122.122:50028
            HB interval:            8000ms
            Configured node list:   1, 2
            Ring ID:                1.2050
            Membership node list:   1, 2
            TLS active:             Yes (client certificate verified)
            Vote:                   ACK (ACK)
        Node ID 1:
            Client address:         ::ffff:192.168.122.121:48786
            HB interval:            8000ms
            Configured node list:   1, 2
            Ring ID:                1.2050
            Membership node list:   1, 2
            TLS active:             Yes (client certificate verified)
            Vote:                   ACK (ACK)
    ```
:::
:::
::: section
::: titlepage
## []{#ch-Quorum-HAAR.html#s2-manageqnetd-HAAR}管理仲裁设备服务 {.title}
:::
PCS