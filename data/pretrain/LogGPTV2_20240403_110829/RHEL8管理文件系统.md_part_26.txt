    # requesting: ALL
    #
    # foo, auto.home, example.com
    dn: automountKey=foo,automountMapName=auto.home,dc=example,dc=com
    objectClass: automount
    automountKey: foo
    automountInformation: filer.example.com:/export/foo
    # /, auto.home, example.com
    dn: automountKey=/,automountMapName=auto.home,dc=example,dc=com
    objectClass: automount
    automountKey: /
    automountInformation: filer.example.com:/export/&
    ```
    :::
    :::
:::
::: itemizedlist
**其它资源**
-   [`rfc2307bis`{.literal}
    草案](https://tools.ietf.org/html/draft-howard-rfc2307bis){.link}
:::
:::
:::
[]{#using-sssd-component-from-idm-to-cache-the-autofs-map_managing-file-systems.html}
::: chapter
::: titlepage
# []{#using-sssd-component-from-idm-to-cache-the-autofs-map_managing-file-systems.html#using-sssd-component-from-idm-to-cache-the-autofs-map_managing-file-systems}第 19 章 使用 IdM 中的 SSSD 组件缓存 autofs 映射 {.title}
:::
系统安全服务后台程序(SSSD)是一种系统服务，可访问远程服务目录和身份验证机制。当网络连接较慢时，数据缓存非常有用。要将
SSSD 服务配置为缓存 autofs 映射，请按照本节中的步骤操作。
::: section
::: titlepage
# []{#using-sssd-component-from-idm-to-cache-the-autofs-map_managing-file-systems.html#configuring-autofs-manually-to-use-sssd-and-idm_using-sssd-component-from-idm-to-cache-the-autofs-map}手动配置 autofs 以将 IdM 服务器用作 LDAP 服务器 {.title}
:::
这个过程演示了如何将 `autofs`{.literal} 配置为使用 IdM 服务器作为 LDAP
服务器。
::: orderedlist
**流程**
1.  编辑 `/etc/autofs.conf`{.literal} 文件，以指定 `autofs`{.literal}
    搜索的 schema 属性：
    ``` literallayout
    #
    # Other common LDAP naming
    #
    map_object_class = "automountMap"
    entry_object_class = "automount"
    map_attribute = "automountMapName"
    entry_attribute = "automountKey"
    value_attribute = "automountInformation"
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    用户可以在 `/etc/autofs.conf`{.literal}
    文件中以小写和大写形式编写属性。
    :::
2.  （可选）指定 LDAP
    配置。执行此操作有两种方法：最简单的方法是让自动挂载服务自行发现
    LDAP 服务器和位置：
    ``` literallayout
    ldap_uri = "ldap:///dc=example,dc=com"
    ```
    [*这个选项要求 DNS 包含可发现服务器的 SRV 记录。*]{.emphasis}
    或者，明确设置要使用的 LDAP 服务器，以及用于 LDAP 搜索的基本 DN：
    ``` literallayout
    ldap_uri = "ldap://ipa.example.com"
    search_base = "cn=location,cn=automount,dc=example,dc=com"
    ```
3.  编辑 `/etc/autofs_ldap_auth.conf`{.literal} 文件，以便 autofs
    允许客户端通过 IdM LDAP 服务器进行身份验证。
    ::: itemizedlist
    -   将 `authrequired`{.literal} 更改为 yes。
    -   将主体设置为 IdM LDAP 服务器 [*host/fqdn@REALM*]{.emphasis} 的
        Kerberos 主机主体。主体名称用于连接 IdM 目录，作为 GSS
        客户端身份验证的一部分。
        ``` literallayout
        ```
        有关主机主体的更多信息，请参阅在 [IdM 中使用规范化 DNS
        主机名](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-canonicalized-dns-host-names-in-idm_configuring-and-managing-idm){.link}。
        如有必要，运行 `klist -k`{.literal} 获取确切的主机主体信息。
    :::
:::
:::
::: section
::: titlepage
# []{#using-sssd-component-from-idm-to-cache-the-autofs-map_managing-file-systems.html#configuring-sssd-to-cache-autofs-map_using-sssd-component-from-idm-to-cache-the-autofs-map}配置 SSSD 以缓存 autofs map {.title}
:::
为手动使用配置 `autofs`{.literal} 允许 IdM
服务器完全绕过系统安全服务(SSS)。此流程演示了如何配置 SSSD 来缓存 autofs
映射。
::: itemizedlist
**先决条件**
-   `sssd`{.literal} 软件包已安装。
:::
::: orderedlist
**流程**
1.  打开 SSSD 配置文件：
    ``` literallayout
    # vim /etc/sssd/sssd.conf
    ```
2.  将 `autofs`{.literal} 服务添加到 SSSD 处理的服务列表中。
    ``` literallayout
    [sssd]
    domains = ldap
    services = nss,pam,autofs
    ```
3.  创建新的 `[autofs]`{.literal} 部分。您可以将此留空，因为
    `autofs`{.literal} 服务的默认设置适用于大多数基础架构。
    ``` literallayout
    [nss]
    [pam]
    [sudo]
    [autofs]
    [ssh]
    [pac]
    ```
    如需更多信息，请参阅 `sssd.conf`{.literal} man page。
4.  （可选）为 `autofs`{.literal} 条目设置搜索基础。默认情况下，这是
    LDAP 搜索基础，但可以在 `ldap_autofs_search_base`{.literal}
    参数中指定子树。
    ``` literallayout
    [domain/EXAMPLE]
    ldap_search_base = "dc=example,dc=com"
    ldap_autofs_search_base = "ou=automount,dc=example,dc=com"
    ```
5.  重启 SSSD 服务：
    ``` literallayout
    # systemctl restart sssd.service
    ```
6.  检查 `/etc/nsswitch.conf`{.literal} 文件，以便 SSSD
    被列为自动挂载配置的来源：
    ``` literallayout
    automount: sss files
    ```
7.  重启 `autofs`{.literal} 服务：
    ``` literallayout
    # systemctl restart autofs.service
    ```
8.  通过列出用户的 `/home`{.literal} 目录来测试配置：
    ``` literallayout
    # ls /home/userName
    ```
    如果这没有挂载远程文件系统，请检查 `/var/log/messages`{.literal}
    文件是否有错误。如有必要，通过将 `logging`{.literal} 参数设置为
    debug `来提高 /etc/sysconfig/autofs`{.literal} 文件中的
    `debug`{.literal} 级别。
:::
:::
:::
[]{#setting-read-only-permissions-for-the-root-file-system_managing-file-systems.html}
::: chapter
::: titlepage
# []{#setting-read-only-permissions-for-the-root-file-system_managing-file-systems.html#setting-read-only-permissions-for-the-root-file-system_managing-file-systems}第 20 章 为 root 文件系统设置只读权限 {.title}
:::
有时，您需要使用只读权限挂载 root
文件系统(`/`{.literal})。示例用例包括增强安全性或在意外的系统关机后确保数据完整性。
::: section
::: titlepage
# []{#setting-read-only-permissions-for-the-root-file-system_managing-file-systems.html#files-and-directories-that-always-retain-write-permissions_setting-read-only-permissions-for-the-root-file-system}始终保留写入权限的文件和目录 {.title}
:::
要使系统正常工作，一些文件和目录需要保留写入权限。当 root
文件系统以只读模式挂载时，这些文件将使用 `tmpfs`{.literal}
临时文件系统挂载到 RAM 中。
这些文件和目录的默认集合是从 `/etc/rwtab`{.literal}
文件中读取的，该文件包含：
``` screen
dirs	/var/cache/man
dirs	/var/gdm
empty	/tmp
empty	/var/cache/foomatic
files	/etc/adjtime
files	/etc/ntp.conf
```
`/etc/rwtab`{.literal} 文件中的条目采用以下格式：
``` screen
copy-method    path
```
在这个语法中：
::: itemizedlist
-   用指定如何将文件或者目录复制到 tmpfs 的关键字之一替换
    [*[copy-method]{.replaceable}*]{.emphasis}。
-   使用到文件或目录的路径替换 [*[path]{.replaceable}*]{.emphasis}。
:::
`/etc/rwtab`{.literal} 文件可识别将文件或目录复制到 `tmpfs`{.literal}
的以下方法：
::: variablelist
[`空`{.literal}]{.term}
:   一个空路径被复制到 `tmpfs`{.literal}。例如：
    ``` screen
    empty /tmp
    ```
[`dirs`{.literal}]{.term}
:   目录树复制到 `tmpfs`{.literal} 空。例如：
    ``` screen
    dirs /var/run
    ```
[`文件`{.literal}]{.term}
:   将文件或目录树复制到 `tmpfs 完整`{.literal}。例如：
    ``` screen
    files /etc/resolv.conf
    ```
:::
在向 `/etc/rwtab.d/`{.literal} 添加自定义路径时，也适用相同的格式。
:::
::: section
::: titlepage
# []{#setting-read-only-permissions-for-the-root-file-system_managing-file-systems.html#configuring-the-root-file-system-to-mount-with-read-only-permissions-on-boot_setting-read-only-permissions-for-the-root-file-system}将 root 文件系统配置为在引导时使用只读权限挂载 {.title}
:::
使用这个步骤时，在所有引导后，root 文件系统都会以只读方式挂载。
::: orderedlist
**流程**
1.  在 `/etc/sysconfig/readonly-root`{.literal} 文件中，将
    `READONLY`{.literal} 选项设置为 `yes`{.literal} ：
    ``` screen
    # Set to 'yes' to mount the file systems as read-only.
    READONLY=yes
    ```
2.  在 / `etc/fstab 文件中的 root 条目(/`{.literal}``{=html}
    )中添加 `ro`{.literal} 选项：
    ``` screen
    /dev/mapper/luks-c376919e...  /  xfs  x-systemd.device-timeout=0,ro  1  1
    ```
3.  在 `/etc/default/grub`{.literal} 文件中的
    `GRUB_CMDLINE_LINUX`{.literal} 指令中添加 `ro`{.literal}
    选项，并确保该指令不包含 `rw`{.literal} ：
    ``` screen
    GRUB_CMDLINE_LINUX="rhgb quiet... ro"
    ```
4.  重新创建 GRUB2 配置文件：
    ``` screen
    # grub2-mkconfig -o /boot/grub2/grub.cfg
    ```
5.  如果您需要在 `tmpfs`{.literal}
    文件系统中添加使用写入权限挂载的文件和目录，请在
    `/etc/rwtab.d/`{.literal} 目录中创建一个文本文件，并将配置放在其中。
    例如：要使用写入权限挂载 `/etc/example/file`{.literal}
    文件，请将此行添加到 `/etc/rwtab.d/example`{.literal} 文件中：
    ``` screen
    files /etc/example/file
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    对 `tmpfs`{.literal} 中的文件和目录所做的更改不会在启动后保留。
    :::
6.  重启系统以应用更改。
:::
::: itemizedlist
**故障排除**
-   如果您错误地使用只读权限挂载 root
    文件系统，则可以使用以下命令再次使用读写权限重新挂载它：
    ``` screen
    # mount -o remount,rw /
    ```
:::
:::
:::
[]{#limiting-storage-space-usage-with-quotas_managing-file-systems.html}
::: chapter
::: titlepage