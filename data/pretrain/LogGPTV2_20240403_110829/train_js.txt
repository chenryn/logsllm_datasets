.\" fixme . the ftm requirements seem inconsistent here.  file a glibc bug?
.pp
.br fgetgrent_r ():
    since glibc 2.19:
        _default_source
    glibc 2.19 and earlier:
        _svid_source
.sh description
the functions
.br getgrent_r ()
and
.br fgetgrent_r ()
are the reentrant versions of
.br getgrent (3)
and
.br fgetgrent (3).
the former reads the next group entry from the stream initialized by
.br setgrent (3).
the latter reads the next group entry from
.ir stream .
.pp
the \figroup\fp structure is defined in
.i 
as follows:
.pp
.in +4n
.ex
struct group {
    char   *gr_name;        /* group name */
    char   *gr_passwd;      /* group password */
    gid_t   gr_gid;         /* group id */
    char  **gr_mem;         /* null\-terminated array of pointers
                               to names of group members */
};
.ee
.in
.pp
for more information about the fields of this structure, see
.br group (5).
.pp
the nonreentrant functions return a pointer to static storage,
where this static storage contains further pointers to group
name, password, and members.
the reentrant functions described here return all of that in
caller-provided buffers.
first of all there is the buffer
.i gbuf
that can hold a \fistruct group\fp.
and next the buffer
.i buf
of size
.i buflen
that can hold additional strings.
the result of these functions, the \fistruct group\fp read from the stream,
is stored in the provided buffer
.ir *gbuf ,
and a pointer to this \fistruct group\fp is returned in
.ir *gbufp .
.sh return value
on success, these functions return 0 and
.i *gbufp
is a pointer to the \fistruct group\fp.
on error, these functions return an error value and
.i *gbufp
is null.
.sh errors
.tp
.b enoent
no more entries.
.tp
.b erange
insufficient buffer space supplied.
try again with larger buffer.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lb lb lbx
l l l.
interface	attribute	value
t{
.br getgrent_r ()
t}	thread safety	t{
mt-unsafe race:grent locale
t}
t{
.br fgetgrent_r ()
t}	thread safety	t{
mt-safe
t}
.te
.hy
.ad
.sp 1
in the above table,
.i grent
in
.i race:grent
signifies that if any of the functions
.br setgrent (3),
.br getgrent (3),
.br endgrent (3),
or
.br getgrent_r ()
are used in parallel in different threads of a program,
then data races could occur.
.sh conforming to
these functions are gnu extensions, done in a style resembling
the posix version of functions like
.br getpwnam_r (3).
other systems use the prototype
.pp
.in +4n
.ex
struct group *getgrent_r(struct group *grp, char *buf,
                         int buflen);
.ee
.in
.pp
or, better,
.pp
.in +4n
.ex
int getgrent_r(struct group *grp, char *buf, int buflen,
               file **gr_fp);
.ee
.in
.sh notes
the function
.br getgrent_r ()
is not really reentrant since it shares the reading position
in the stream with all other threads.
.sh examples
.ex
#define _gnu_source
#include 
#include 
#include 
#include 
#define buflen 4096
int
main(void)
{
    struct group grp;
    struct group *grpp;
    char buf[buflen];
    int i;
    setgrent();
    while (1) {
        i = getgrent_r(&grp, buf, sizeof(buf), &grpp);
        if (i)
            break;
        printf("%s (%jd):", grpp\->gr_name, (intmax_t) grpp\->gr_gid);
        for (int j = 0; ; j++) {
            if (grpp\->gr_mem[j] == null)
                break;
            printf(" %s", grpp\->gr_mem[j]);
        }
        printf("\en");
    }
    endgrent();
    exit(exit_success);
}
.ee
.\" perhaps add error checking - should use strerror_r
.\" #include 
.\" #include 
.\"         if (i) {
.\"               if (i == enoent)
.\"                     break;
.\"               printf("getgrent_r: %s", strerror(i));
.\"               exit(exit_failure);
.\"         }
.sh see also
.br fgetgrent (3),
.br getgrent (3),
.br getgrgid (3),
.br getgrnam (3),
.br putgrent (3),
.br group (5)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/stailq.3
.so man2/signalfd.2
.so man2/wait.2
.so man3/ctan.3
.so man3/argz_add.3
.so man2/set_thread_area.2
.\" copyright 1993 david metcalfe (PI:EMAIL)
.\" and copyright 2008, linux foundation, written by michael kerrisk
.\"     
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" references consulted:
.\"     linux libc source code
.\"     lewine's _posix programmer's guide_ (o'reilly & associates, 1991)
.\"     386bsd man pages
.\" modified 1993-07-24 by rik faith (PI:EMAIL)
.\" modified 1996-06-08 by aeb
.\" modified 2002-07-27 by walter harms
.\" (PI:EMAIL)
.\"
.th cosh 3 2021-03-22 ""  "linux programmer's manual"
.sh name
cosh, coshf, coshl \- hyperbolic cosine function
.sh synopsis
.nf
.b #include 
.pp
.bi "double cosh(double " x );
.bi "float coshf(float " x );
.bi "long double coshl(long double " x );
.fi
.pp
link with \fi\-lm\fp.
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br coshf (),
.br coshl ():
.nf
    _isoc99_source || _posix_c_source >= 200112l
        || /* since glibc 2.19: */ _default_source
        || /* glibc 
.\"
.\" %%%license_start(gplv2+_doc_onepara)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\" %%%license_end
.\"
.\" references consulted:
.\"   gnu glibc-2 source code and manual
.\"   dinkumware c library reference http://www.dinkumware.com/
.\"   opengroup's single unix specification http://www.unix-systems.org/online.html
.\"   iso/iec 9899:1999
.\"
.th mbtowc 3  2021-03-22 "gnu" "linux programmer's manual"
.sh name
mbtowc \- convert a multibyte sequence to a wide character
.sh synopsis
.nf
.b #include 
.pp
.bi "int mbtowc(wchar_t *restrict " pwc ", const char *restrict " s \
", size_t " n );
.fi
.sh description
the main case for this function is when
.ir s
is not null and
.i pwc
is
not null.
in this case, the
.br mbtowc ()
function inspects at most
.i n
bytes of the multibyte string starting at
.ir s ,
extracts the next complete
multibyte character, converts it to a wide character and stores it at
.ir *pwc .
it updates an internal shift state known only to the
.br mbtowc ()
function.
if
.i s
does not point to a null byte (\(aq\e0\(aq), it returns the number
of bytes that were consumed from
.ir s ,
otherwise it returns 0.
.pp
if the
.ir n
bytes starting at
.i s
do not contain a complete multibyte
character, or if they contain an invalid multibyte sequence,
.br mbtowc ()
returns \-1.
this can happen even if
.i n
>=
.ir mb_cur_max ,
if the multibyte string contains redundant shift sequences.
.pp
a different case is when
.ir s
is not null but
.i pwc
is null.
in this case, the
.br mbtowc ()
function behaves as above, except that it does not
store the converted wide character in memory.
.pp
a third case is when
.i s
is null.
in this case,
.ir pwc
and
.i n
are
ignored.
the
.br mbtowc ()
function
.\" the dinkumware doc and the single unix specification say this, but
.\" glibc doesn't implement this.
resets the shift state, only known to this function,
to the initial state, and
returns nonzero if the encoding has nontrivial shift state, or zero if the
encoding is stateless.
.sh return value
if
.i s
is not null, the
.br mbtowc ()
function returns the number of
consumed bytes starting at
.ir s ,
or 0 if
.i s
points to a null byte,
or \-1 upon failure.
.pp
if
.i s
is null, the
.br mbtowc ()
function
returns nonzero if the encoding
has nontrivial shift state, or zero if the encoding is stateless.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br mbtowc ()
t}	thread safety	mt-unsafe race
.te
.hy
.ad
.sp 1
.sh conforming to
posix.1-2001, posix.1-2008, c99.
.sh notes
the behavior of
.br mbtowc ()
depends on the
.b lc_ctype
category of the
current locale.
.pp
this function is not multithread safe.
the function
.br mbrtowc (3)
provides
a better interface to the same functionality.
.sh see also
.br mb_cur_max (3),
.br mblen (3),
.br mbrtowc (3),
.br mbstowcs (3),
.br wcstombs (3),
.br wctomb (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man2/symlink.2
.\" copyright (c) 1983, 1991 the regents of the university of california.
.\" all rights reserved.
.\"
.\" %%%license_start(bsd_4_clause_ucb)
.\" redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. all advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	this product includes software developed by the university of
.\"	california, berkeley and its contributors.
.\" 4. neither the name of the university nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" this software is provided by the regents and contributors ``as is'' and
.\" any express or implied warranties, including, but not limited to, the
.\" implied warranties of merchantability and fitness for a particular purpose
.\" are disclaimed.  in no event shall the regents or contributors be liable
.\" for any direct, indirect, incidental, special, exemplary, or consequential
.\" damages (including, but not limited to, procurement of substitute goods
.\" or services; loss of use, data, or profits; or business interruption)