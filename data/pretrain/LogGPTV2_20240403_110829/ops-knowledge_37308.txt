User: 请解答这个和日志有关的问题Cronjob to push MongoDB Backup via git Task: Create a Cronjob that executes a bash script once every night. The bash script should do a mongoDB Backup and push it to a Git Repo.

So I created a cronjob as the root user via the crontab -e command:

#!/bin/bash
SHELL=/bin/bash
USER=root
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PWD=/root
HOME=/root

0 2 * * * /path/script.sh &gt; /path/script.log


This is the script that should be executed:

BAK="/path"

#MONGO="/usr/bin/mongo"
#MONGODUMP="/usr/bin/mongodump"
#GIT="/usr/bin/git"

echo "starting backup"
echo $BAK
/usr/bin/mongodump --username=myusername --password=mypassword --db=mydatabase --out=$BAK$
echo "backup created"
/usr/bin/git add .
/usr/bin/git commit -m "backup from `date +'%Y_%m_%d'`"
echo "committed"
/usr/bin/git push -u origin master
echo "pushed backup. done"


Outcome: Backups are being created but not pushed to the repo. Executing the script manually pushes the backups as desired. The Log only includes all the echos from the script.

Assistant: You need to change directory to "$BAK" before issuing the git commands.

You explicitly write your backups to $BAK$ but when you run the gid add . you will be in the home directory of the user that is running the cron job. In this case that will be /root.



Here is a test script

pwd &gt;/tmp/atest.out
touch ./atest.file


When run from root's crontab with 

* * * * * /home/iain/atest


The contents of /tmp/atest.out


  /root


So where is ./atest.file

ls -l /home/iain/atest.file
ls: cannot access /home/iain/atest.file: No such file or directory


Hmm

ls -l /root/atest.file
-rw-r--r--. 1 root root 0 Nov 16 13:24 /root/atest.file


Bingo!. It does not matter that you are running the script from git's home directory. The working directory is in this case is /root. 

/usr/bin/git add .


is adding the current working directory, which unless you have changed it is /root.