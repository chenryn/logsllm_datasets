ecx,dword ptr [eax]
002b1e6a 83e2fc
pue
edx,8FFFFFFFCh
882b1e6d c78451e8086888
mov
dword ptr [ecx+edx*2],θ
e02b1e74 ff4830
dec
dword ptr [eax+3eh]
8e2b1e77 a194da2bee
mov
eax,dword ptr ds:[ee28DA94h]
002b1e7c 8b159eda2bee
mov
edx,dword ptr ds:[2BDA9eh]
002b1e82 894284
mov
dword ptr [edx+4],eax
802b1e85 33cθ
xor
eax,eax
802b1e87 8be5
mov
esp,ebp
802b1e89 5d
pop
dqa
e02b1e8a c21000
ret
1eh
---
## Page 479
460漏洞战争：软件漏洞分析精要
运行效果如图9-44所示，关于完整的漏润利用代码，Vsbat已将其公布在看雪论坛上，具体可访
问以下链接获取：http:/bbs.pediy.com/showthread.php?p=1331045
公口
口
图9-44利用漏洞提权成功
9.7.4
补丁分析
如图9-45所示，由于微软并未提供本节漏洞的Windows7补丁，所以只能通过升级到Windows7
SP1系统版本，再打相应的漏洞补丁。读者可从微软官方站点（http:/www.microsoft.com/zh-cn/
download/confirmation.aspx7id=5842）下载相应的SP1升级包，然后再从官网下载MS14-040的Windows
7 SP1 漏润补丁(http:/www.microsoft.com/en-us/download/details.aspx?id=43429)。
丁管得器
L
B丁
丁网：82961072
有16为个轮了因对不女持是介系洗，不支神钥件不文件系统环填破物能采卷
丁客补丁述
8261072
25447-09
图9-45微软未提供支持Windows7的漏洞补丁
用IDA加载补丁后的afd.sys，然后定位到漏润函数AfdRetumTplnfo进行分析，由于只有当
TplnfoElementCount>0时，才会调用到IoFreeMdl函数，如图9-46所示。因此补丁在第一次调用完
---
## Page 480
第9章内核漏洞分析461
loFreeMdl后，将TplnfoElementCount清零，如图9-47所示，使得它不会再次调用loFreeMdl，从而避
免造成双重释放漏润。
hr (].
图9-46只有当TpInfoElementCount>0时，才会调用到IoFreeMdl函数
---
## Page 481
462漏洞战争：软件漏洞分析精要
1ec_ar91:
：rx-TplefeElesttount 清写
Trfer
arafreeTglnfet
ege
图9-47将TpInfoElementCount清零
9.8
本章总结
本章主要针对Windows内核漏洞原理进行分析，并介绍各种漏洞分析技巧，也专门挑选几个不
同类型的经典内核漏洞案例进行剖析，对其中颇具艺术的漏洞利用技巧进行深入探究，旨在帮助广
大读者理解Windows平台上的各类常见内核漏洞原理，以及掌握一些内核漏洞的常用攻击手法。正
所调“未知攻，焉知防”，只有广大安全人士理解漏润及攻击手法，才能制定出更加完善的漏洞检
测与拦截规则，帮助保护用户的电脑安全。而对于开发者，掌握几类漏洞的常见修复方法，也可以
帮助自己快速制定漏润修复方案，尽快推出补丁，将漏洞造成的损失降到最低。
内核漏洞的调试相对普通应用的调试会更麻烦，而且一蓝屏，就得重启系统从头再来，所费时
间也肯定更多。结合一定的驱动开发经验，在调试分析时将会更加顺手，借助开发功底可以帮助你
更快地找出漏洞根源。所以，读者在学习Windows内核漏洞之前，不妨先学学Windows驱动开发，相
信会起到事半功倍的作用。
---
## Page 482
第10章Android平台漏洞分析
10.1Android平台漏洞简史
随着移动互联网时代的来临，很多移动终端的安全问题已经逐渐暴露出来，而其中尤以Android
平台最为显著。正是由于Android的用户量占移动终端总用户量的70%以上，面且不仅用于手机上，
平板电脑、智能穿戴、电视、相机及其他智能设备上都使用到Android系统，因此本章专门用于讲解
Android平台上的漏润分析技巧。
2008年9月发布Android1.0以来，至今Android已有7年历史，笔者在编写本章时，Android的最新
版本是5.1.1，历年的Android版本、名称及发布时间如图10-1所示。最初的Android是由AndyRubin开
发的，专门用于手机的移动系统，后来被Google收购，并进行系统改良，随后又以开源形式发布
Android系统。
2014
图10-1Android发展史
国外对于Android漏洞的研究相对较早，在CVE漏洞库上最早关于Android漏洞的记录是2008年3
月的CVE-2008-0985AndroidSDK缓冲区溢出漏洞（如图10-2所示），虽然Android系统首发于2008
年9月，但是Android SDK在2007年11月就已由Google对外发布。
国内对Android平台漏洞的公开讨论最早约在2010年，当时讨论的人比较少，且更偏向于病毒分
析。到2011年讨论的人才逐渐多起来，笔者也是从那时开始研究Android平台漏润的，在看雪论坛
（http:/bbs.pediy.com）上的一些Android漏洞精华帖也是始于2011年。
漏洞战争：软件漏洞分析精要
---
## Page 483
464漏洞战争：软件漏洞分析精要
CVE-I
Des
图10-2第一个被记录的Android漏洞
2011年，笔者开始针对Android应用漏洞进行审计，发现超过一半的主流Android应用都存在漏洞，
当时Android漏洞较少被关注，Android病毒是当时的主要安全挑战，经常可以看到一些Android病毒
分析的文章，特别是安天博客上的文章，当时基本成为第一手资料。
后来笔者编写出Android应用自动化审计工具DroidAppAuditor，主要用Perl语言编写，支持
Android模拟器和实体机，可自动安装APK文件并运行软件，然后实现动态自动化检测，并图文并茂
地输出分析报告，如图10-3所示。当时审计点较少，主要聚焦在敏感信息、组件权限审计上，后来
逐步增加审计规则，并将其应用在腾讯的“金刚”审计系统上（详见：http://security.tencent.com
index.php/opensource/detail/13) 
Android教件安全审计银告
三
图10-3DroldAppAduitor自动化审计报告
---
## Page 484
第10章Android平台漏润分析4465
图10-3DroidAppAduitor自动化审计报告（续）
除了Android第三方应用漏
洞外，系统自身也存在不少漏洞，
早期主要是一些Linux内核提权
漏润（如图10-4所示）备受关注，
(C}28a hy 7M
因此可以直接用来Root手机，扩
110L:
展手机应用功能，但同时也会降
低手机的安全性。
从2013年开始，Android平台
alnu
aian
上许多通用漏洞被逐渐曝光，特
B111
PESLaPt
别是WebView漏洞，影响大部分
nltaat
adb ki11-tercr
Android应用的安全，导致代码执
行、隐私窃取等危害，此前出过
许多著名漏润，例如Android签名
图10-4Android本地提权漏润
---
## Page 485
466漏洞战争：软件漏洞分析精要
漏洞、Android WebViewaddJavascriptlnterface漏润、Android设备管理器漏润、Android WebView
UXSS、AndroidFakeID证书验证漏洞等，如图10-5所示。
DCVE-2010-1119-A
 Chn
CVE-2011-1352A
WCARSESRBR
BE CVE-2011-1823-Android vold volume dan
BE CVE-2011-3874-AN
 C-2014-1909AddA0B出海
 CVE-2014-2094.
oid 内 oer_swernit BtR2
BS CVE-2014-4322 An
BCVE-2014-7911Ardi0tjec
SoidQSEECOMEZMTRHI润R
B CVE-2015-1532.An
i9h文件维运出
 CVE-2015-336六8gE用(pg0org 
图10-5曾经曝光过的部分Android漏洞
10.2
Android平台漏洞分类
如图10-6所示，根据Android系统架构的分层情况可以将Android平台上的漏洞分为如下几种。
Applcatiom
AppicationFram
Jbraries
Android Run
Core Lbrar
OpenGliEsFreeTpeWebkt
Linux Kernel
图10-6Android系统构架图
。应用层漏润：包括系统自带应用及第三方应用。
---
## Page 486
第10章Android平台漏洞分析467
框架层漏洞：即应用程序所依赖的API框架漏洞。
Native层漏润：包括系统链接库、核心库、Dalvik虚拟机漏洞。
内核层漏洞：即Android内核漏洞，许多Linux内核漏洞同样影响到Android
10.3常见的漏洞分析方法
关于Android平台上的一些逆向方法，在《Android软件安全与逆向分析》一书中已有介绍，大家
可以作为额外参考，但本节主要介绍的是该书未提到的分析方法。
10.3.1APK静态分析
AndroidAPK的逆向分析工具很多，比如ApkTool、baksmali、JD-GUI等，但它们都是单向功能
相互依赖使用的，笔者只推荐一款APK逆向工具——JEB，如图10-7所示。JEB是一款用Java写的综
合逆向工具，支持跨平台，面且集合各项Android逆向功能，完全可代表前面提到的各款工具。使用
JEB加载APK即可实现反编译，直接查看AndroidManifestxml、smali及Java反编译代码（查看smali
代码时按Tab键可自动进行Java反编译），还支持交叉索引、字符串搜索、重命名功能等，新版JEB
中又增加了Dex、Office、PDF等文件格式的解析。不过JEB属于收费软件，单个售价7200元，在看雪
论坛上可以我到你需要的版本。
A
mram
图10-7JEB反编译器
---
## Page 487
468漏洞战争：软件漏洞分析精要
10.3.2smali动态调试
调试smali主要有两种方式，一种是使用IDA，另一种是使用Android编译器，比如AndroidStudio、
Eclipse等（补充说明：在本书出版前，JEB最新版已经支持smali动态调试），此处主要介绍如何使
用AndroidStudio，毕竞这是Google官方出品的工具，再结合Smalidea插件可以更方便地进行smali调
试，这也是笔者常用的调试方法。
步骤：先下载smalidea插件，下载地址https:/bitbucket.org/JesusFreke/smali/downloads/smalidea-
v0.02.zip，然后在Android Studio中，选择“Settings”（旧版的是“Perferences”）→“Plugins”→
“Install plugin from disk..”选项，在打开的窗口中选择已下载的smalida-v0.02.zip，确认后可直接安
装，如图10-8所示。安装成功后，会提示你重启AndroidStudio，单击“Restart”按钮即可，如图10-9
所示。
图10-8安装smalidea插件
---
## Page 488
第10章Android平台漏润分析4469
图10-9选择重启AndroidStudio
步骤二：使用baksmali（下载地址：https:/bitbucket.org/JesusFreke/smali/downloads/baksmali-
2.0.6.jar）或者ApkTool工具（下载地址：https:/bitbucket.org/iBotPeaches/apktool/downloads/apktool
2.0.1jar）反编译需要调试的APK包，如图10-10所示。
图10-10使用baksmali反编译APK包
步骤三：用AndroidStudio导入前面生成的smali目录（如图10-11所示，由于测试时已生成过alipay工
程，因此alipay目录显示成Android Studio工程图标），单击“OK”按钮后，按默认设置操作，成功导入
---
## Page 489
470漏洞战争：软件漏洞分析精要
工程后鼠标右键单击src目录，在弹出的快捷菜单中选择“MarkDirectory As”→“TestSourcesRoot”选
项，如图10-12所示，接下来，再打开“file”一“projectstucture”设置对应的SDK版本，如图10-13所示。
图10-11导入smali目录
图10-12设置源目录
---
## Page 490
第10章Android平台漏润分析471
图10-13设置SDK版本
步骤四：开启应用调试选项，但很多APK都设置android:debugable=“false”，经常需要改配置重
打包。为了一劳永逸，笔者编写了专门开启应用调试选项的Xposed模块一BDOpener（下载地址：
http:/security.tencent.com/index.php/opensource/detail/17），如图10-14所示。通过Hook配置信息修
改debugable值。使用前安装手机已Root，并且已安装Xposed，然后在“模块”中勾选“BDOpener”
选项再重启手机即可。
s2p 12*13 p19 0 : d4 *7 190*65092 131118212+ 11 E020]
031144.*t7nr-* fr4Kek s
07=03 1145:44452178111828:/ 120408
8019
07-03 11.45:44.8012 80040
07*09 11 4.44. 462178:1*1828: * 10004n47
003114444217121
esxx xft4r Hes2 tt1t
07=03 114244. 4217811-12:/7 : 05406
1510190
图10-14BDOpener输出日志
步骤五：在手机上安装待调试的程序，然后在开发者选项里设置“选择待调试的应用程序”选
项，勾选“等待调试程序”选项，如图10-15所示，之后打开调试程序，如图10-16所示，待调试器加
载它。
---
## Page 491
472漏洞战争：软件漏润分析精要
护SD卡
USBA
选择持调试的应用程序
调试屋序
图10-15设置待调试程序
图10-16等待应用被调试
步骤六：在Android Studio中配置远程调试（Run一EditConfigurations），单击“+”按钮，选
中“Remote”添加配置（如图10-17所示），更改Debug端口为8700（默认的调试端口，如图10-18所
示），并指定源文件目录，如图10-19所示。
图10-17添加远程调试配置
ndnoidapp
122
Mppsg
图10-18从DDMS中获取调试端口
---
## Page 492
第10章Android平台漏洞分析473
图10-19设置配置名称、调试端口及源目录
步骤七：打开任意smali文件，在代码行前面单击即可设置断点，它会在前面显示红点标记，再
点下可取消断点。将手机通过USB连接电脑后，单击“Run”→“Debugdebug”即可开始远程调试，
此时图10-16所示的提示会消失，然后启动应用，直到最后被断下，如图10-20所示可以看到此时的栈
回溯、变量值等信息。
关于smali的调试方法，还可参考阿里聚安全发表的文章《APK无源码调试》，链接http:/bbs
pediy.com/showthread.php?t=195660,里面提到多个smali方法，包括IDA、Android Studio、Idea及Eclipse
等，有兴趣的读者可以看下。