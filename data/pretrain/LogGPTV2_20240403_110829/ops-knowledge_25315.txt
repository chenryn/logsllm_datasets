Certainly! Here's a more polished and detailed version of your text:

---

I am looking to use TeamCity as the Continuous Integration (CI) tool for my Python project. My project uses `virtualenv` to manage its dependencies, and I have created a `venv` folder at the root of the project to store the environment-related files.

When I attempt to create a build step in TeamCity with the command `source venv/bin/activate` as a custom script, it fails with the error "source: not found." If I try to create this step as a command line executable, using `source` as the file and `venv/bin/activate` as the parameter, it also fails with the error "Cannot run process 'source venv/bin/activate': file not found."

How can I resolve this issue?

**Solution:**

To solve this, you can implement a custom bash script, such as `tests.sh`, which will handle the activation of the virtual environment and the execution of your tests or other commands. Hereâ€™s how you can do it:

1. **Create a Custom Bash Script:**
   - Create a file named `tests.sh` in your project directory.
   - Add the following content to `tests.sh`:
     ```bash
     #!/bin/bash
     source venv/bin/activate
     # Add your test or other commands here
     pytest  # Example: Run pytest
     ```

2. **Make the Script Executable:**
   - Ensure the script is executable by running:
     ```bash
     chmod +x tests.sh
     ```

3. **Create a Build Step in TeamCity:**
   - In TeamCity, create a new build step.
   - Set the runner type to "Command Line."
   - For the "Run" field, specify `bash`.
   - For the "Script path" field, provide the path to your `tests.sh` script (e.g., `./tests.sh`).

This approach ensures that the virtual environment is activated correctly and that your commands are executed within the context of the activated environment.

---

This should help you set up your CI pipeline in TeamCity with the necessary environment management.