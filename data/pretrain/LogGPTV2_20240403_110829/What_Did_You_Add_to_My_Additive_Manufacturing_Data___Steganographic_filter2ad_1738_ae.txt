vation of four bytes for the size field, up to 46,076 bytes of secret
can be encoded in this carrier STL file, which is sufficient for the
selected example.
The console output of the encoding process is presented in Fig-
ure 9c. With the above mentioned carrier file and payload, the
overall duration of encoding was 9 sec and of decoding 5 sec. To
verify the lossless extraction of the data, we calculated and printed
out on the console the MD5 cryptographic hash sum of the en-
coded secret. We further calculated the checksum over the secret
extracted from the used carrier STL file. The MD5 value for the
decoded secret was exactly the same. This indicates that the hidden
binary file can be retrieved without loss.
We verified the ability of the proposed approach to avoid de-
tection by loading models in two different slicers (Cura and Cat-
alystEx), and 3D printing both the original design and the carrier
file with encoded secret on two different 3D printers Lulzbot Taz
6 and Stratasys Dimension Elite 5. Neither showed indicators of
manipulation from the embedded payload. Screenshots and photos
for side-by-side comparison are in Appendix A.2.
7 DISCUSSION
7.1 Steganography with Engineering Designs
There is a large body of literature covering both theoretical and
practical steganography (see Section 3.2 for a brief outline). This
raises the question of novelty, considering the existence of stegano-
graphic techniques for other document formats. A major difference
is that, while the file formats traditionally used in steganography
are “end-user facing” digital audio, video, image, or text documents,
the proposed approach manipulates an engineering design file.
In any approach, the steganographically encoded information
should not interfere with the ability of programs to correctly process
it. With data formats for audio, video, and textual information, this
corresponds to the ability to represent it to an end-user. In the case
considered in this paper, modifications introduced in the digital
design file should not interfere with the ability to 3D print the
object. In Section 6 we demonstrated that encoding data in an STL
using the proposed approach does not interfere with 3D printing.
5Equipment and software identified in this paper do not imply recommendation or
endorsement by the authors or their organisations.
Figure 10: Extended Taxonomy of AM Security Threat Cate-
gories – Introduced in this Paper Use of 3D Printing Design
Files for Data In- and Exfiltration is New (based on [24, 66])
To evade suspicion, the distortions introduced in user-facing
data formats should be imperceptible to a human. In the case of en-
gineering design files, it is more complicated. Geometric distortions
introduced in manufactured parts could interfere with their integra-
tion in a designated system. Furthermore, distortions introduced
in the 3D printing process could degrade the part’s mechanical
characteristics, and cause its premature failure (like in the case
of deliberate sabotage attacks outlined in Section 3.2). All these
“side effects” would likely trigger an investigation and lead to the
discovery of the channel.
7.2 Implications for the AM Security Field
The presented attack has profound implications for the AM Secu-
rity field as a whole. As discussed in Section 3.2, up until now only
three security threat categories have been identified and discussed
(theft of technical data, sabotage attacks, and illegal part manu-
facturing) [66], with the theft of technical data being a common
prerequisite for illegal part manufacturing and targeted sabotage
attacks [24]. The presented work extends the threat categories with
yet another, Data In-/Exfiltration (see Figure 10).
As mentioned throughout this paper, the introduced stegano-
graphic communication channel can be used in a variety of attacks
(see specifically Section 2). Among others, this channel can be used
for malicious actions like the exfiltration of stolen information,
Theft of Technical DataAM SabotageAM Security Threats CategoriesIllegal Part ManufacturingInfringement / OverproductionExport Controlled PartsPart GeometryRequired PropertiesManufacturing Process Manufactured PartAM EquipmentEnvironmentInternationally Prohibited PartsEnable Targeted/ StealthyEnableData In-/ExfiltrationEncoded in Design FileChannel for Data ExfiltrationNew Threat Category New Threat Category 276RAID ’21, October 6–8, 2021, San Sebastian, Spain
Yampolskiy et al.
is the question of prevention. Specifically, how robust is the pro-
posed steganographic communication channel against disruption
efforts that are limited by the same constraint – avoiding impacts
on the 3D design? Such efforts are especially relevant in environ-
ments where exfiltration of highly sensitive information might be a
security concern, and can be applied in addition to attack detection.
With the proposed bit encoding scheme, the “sanitization” of STL
files is fairly simple and straightforward. Defenders can overwrite
all facets in the file with either the same value (0 or 1) or with a
completely random value. As mentioned before, due to the semantic
equivalency of the vertex cyclical rotation, it should not affect
the described 3D object geometry. However, while theoretically
sound, this assumption needs to be verified empirically; we plan to
conduct such an investigation in a follow-up work. Consequently,
the proposed approach is fragile, and can be easily disrupted by the
described sanitation approach.
infiltration of malicious software, or hidden storage of content the
possesion of which is illegal.
In the AM Security context, the attacks introduced in this paper
can be used as an additional communication channel through which
the stolen AM technical data can be exfiltrated. Therefore, it can
also act as an additional precursor for two other threat categories.
Considering that the works on the 3D printed object water-
marking via modifications of the 3D object geometry (discussed in
Section 3.2) can be re-purposed as a hidden communication channel,
we propose two sub-categories for the new security threat: Encoded
in Design File and Encoded in 3D Printed Object.
7.3 Three Contexts of Distinguishability
Throughout Sections 4 and 5, we introduced and discussed three
distinct contexts of distinguishability. We think that this is impor-
tant to reiterate these in a condensed manner, because each and any
of these can determine a defender’s ability to detect the subliminal
steganographic channel and even extract the encoded message for
further analysis. Such detection is critical for follow-on security
procedures, such as attribution of the communication to IP/e-mail
addresses and thus attribution of the malicious actors.
First, in the case of the weak attack (defined in Sections 4), the
question is whether it is possible to distinguish between parts of the
carrier STL file that are steganographically encoded with the sub-
liminal message and those that are not. This distinction would allow
extraction and analysis of the embedded message. This depends
on the behavior of the CAD program using the modified STL file.
Should the order in which vertices are specified be fully random, the
weak attack could be distinguishable because the encoded content
is not distributed pseudo-randomly. Should a CAD program exhibit
deterministic behavior here instead, both the altered distribution of
a weak attack and the pseudo-random distribution of the encrypted
file in a regular attack could stand out when the encoded file does
not exhaust the encoding capacity of the carrier STL.
In the strong attack (described in Section 5) we addressed the
concern of distinguishability within a carrier file by encoding every
single bit with either the secret message or a random pad. This
ensures that the distribution of vertex order within STL files with an
encoded message is always pseudo-random. However, we identified
a second distinguishability context – between STL files that contain
a fully-encrypted steganographically encoded message and those
that don’t. To address this, we proposed to encode a random bit
stream even when no real message is embedded in the STL.
This led us to the third context of distinguishability – between
system(s) on the corporate network that are compromised and
encode messages (either real or random) in all STL files and those
that are benign. Currently, we see no way an attacker can address
this kind of distinguishability. Therefore, this might be used by a
defender to identify systems that are compromised.
We should note that the distinguisheability has to be addressed
for all alternative encoding approaches described in Appendix A.1.
7.4 Robustness Against STL File Sanitation
Countermeasures to the proposed attack can fall into different cate-
gories, similar to ransomware countermeasures [5, 38]. In addition
to the question of detection (based on the distinguishability), there
We should note, however, that alternative encoding techniques
are possible (see Appendix A.1). Similar to distinguishability, each
of these encoding techniques would require a different sanitation
approach. Any technique meeting the same criteria as our selected
encoding, non-interference with printed geometry, would exhibit
the same level of fragility against sanitation.
Alternatively, incoming and outgoing STL files can be read into
a CAD program and re-saved, assuming that this step will remove
all possible steganographically encoded information, regardless of
the encoding primitives used. However, if such a CAD program is
trojanized, it can be used by a malicious actor for the encoding of
secret information instead of removing it.
8 CONCLUSION
In this paper we demonstrated that even engineering design files
can be used as steganographic channels. While the ability to encode
information is not surprising, the restrictions on such files are sig-
nificantly tighter than in the case of user-facing audio, video, and
text data formats. In the case of Additive Manufacturing (AM), en-
coding at a minimum should not disrupt the ability to manufacture
the part; furthermore, in the case of functional parts, even slight
distortions can be unacceptable.
We focus on the most popular digital design format in 3D print-
ing, STL. We identified several sources of entropy that can be used
to encode individual bits of information. Upon choosing one—the
order in which vertices are listed—we showed how a raw stegano-
graphic channel can be defined. We further introduced a strong at-
tack, an approach that illustrates how the proposed steganographic
channel can be fully encrypted. To demonstrate a legally question-
able application, we encoded and later recovered several design
files for the Liberator printed pistol. We used this example to verify
that the proposed approach does not interfere with printability nor
does it introduce any visually noticeable distortions.
In the future, we plan to develop an automatic distinguisher for
the sources of entropy we identified. We intend to use it to study the
actual distribution of STL files produced by various CAD programs,
and to explore all three contexts of distinguishability we identified
for STL. We further believe that the steganographic channel could
be used to integrate watermarks in STL files, thus protecting IP in
Additive Manufacturing.
277What Did You Add to My Additive Manufacturing Data?
RAID ’21, October 6–8, 2021, San Sebastian, Spain
REFERENCES
[1] 2014.
Repository.
http://graphics.stanford.edu/data/3Dscanrep/. (2014). http://graphics.stanford.
edu/data/3Dscanrep/
Scanning
Stanford
The
[2] 2018. 3D Printing Business Directory. https://www.3dprintingbusiness.directory.
3D
(2018). [Online; accessed 29-May-2019].
[3] 2019. Watermark3D. https://www.watermark3d.com. (2019). [Online; accessed
10-December-2019].
[4] Thomas Agrikola, Geoffroy Couteau, Yuval Ishai, Stanisław Jarecki, and Amit
Sahai. 2020. On pseudorandom encodings. In Theory of Cryptography Conference.
Springer, 639–669.
[5] Bander Ali Saleh Al-rimy, Mohd Aizaini Maarof, and Syed Zainudeen Mohd Shaid.
2018. Ransomware threat success factors, taxonomy, and countermeasures: A
survey and research directions. Computers & Security 74 (2018), 144–166.
[6] Ross J Anderson and Fabien AP Petitcolas. 1998. On the limits of steganography.
IEEE Journal on selected areas in communications 16, 4 (1998), 474–481.
[7] Sofia Belikovetsky, Mark Yampolskiy, Jinghui Toh, Jacob Gatlin, and Yuval
Elovici. 2017. dr0wned – Cyber-Physical Attack with Additive Manufacturing.
In 11th USENIX Workshop on Offensive Technologies (WOOT 17). USENIX Associa-
tion, Vancouver, BC, 16. https://www.usenix.org/conference/woot17/workshop-
program/presentation/belikovetsky
[8] Matt Bishop, Sophie Engle, Deborah A Frincke, Carrie Gates, Frank L Greitzer,
Sean Peisert, and Sean Whalen. 2010. A risk management approach to the “insider
threat”. In Insider threats in cyber security. Springer, 115–137.
[9] Danton Bryans. 2015. Unlocked and loaded: government censorship of 3D-printed
firearms and a proposal for more reasonable regulation of 3D-printed goods. Ind.
LJ 90 (2015), 901.
[10] Christian Cachin. 2024. An information-theoretic model for steganography. Inf.
Comp. (2024), 41–56.
[11] François Cayre and Benoit Macq. 2003. Data hiding on 3-D triangle meshes. IEEE
Transactions on signal Processing 51, 4 (2003), 939–949.
[12] CBS. 2020. Austin-based company attempting to distribute 3D gun blueprints
online hits legal setback. (Jan 2020). https://cbsaustin.com/news/local/austin-
based-company-attempting-to-distribute-3d-gun-blueprints-online-hits-
legal-setback
[13] Abbas Cheddad, Joan Condell, Kevin Curran, and Paul Mc Kevitt. 2010. Digital
image steganography: Survey and analysis of current methods. Signal processing
90, 3 (2010), 727–752.
[14] Fei Chen, Yuxi Luo, Nektarios Georgios Tsoutsos, Michail Maniatakos, Khaled
Shahin, and Nikhil Gupta. 2019. Embedding tracking codes in additive manu-
factured parts for product authentication. Advanced Engineering Materials 21, 4
(2019), 1800495.
[15] Fei Chen, Gary Mac, and Nikhil Gupta. 2017. Security features embedded in
computer aided design (CAD) solid models for additive manufacturing. Materials
& Design 128 (2017), 182–194.
[16] Fei Chen, Jian H Yu, and Nikhil Gupta. 2019. Obfuscation of embedded codes
in additive manufactured components for product authentication. Advanced
engineering materials 21, 8 (2019), 1900146.
[17] Ingemar Cox, Matthew Miller, Jeffrey Bloom, Jessica Fridrich, and Ton Kalker.
2007. Digital watermarking and steganography. Morgan kaufmann.
[18] Howard Kuhn David L. Bourell, William Frazier and Mohsen Seifi. 2020. ASM
Handbook Volume 24 – Additive Manufacturing Processes. ASM International.
[19] Nenad Dedić, Gene Itkis, Leonid Reyzin, and Scott Russell. 2009. Upper and lower
bounds on black-box steganography. Journal of Cryptology 22, 3 (2009), 365–394.
[20] Arnaud Delmotte, Kenichiro Tanaka, Hiroyuki Kubo, Takuya Funatomi, and
Yasuhiro Mukaigawa. 2019. Blind Watermarking for 3D Printed Objects by
Locally Modifying Layer Thickness. IEEE Transactions on Multimedia (2019).
[21] David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. 2015.
Blocking-resistant communication through domain fronting. Proceedings on
Privacy Enhancing Technologies 2015, 2 (2015), 46–64.
[22] Carl Franzen. 2014. 3D-printed gun maker in Japan sentenced to two years in
prison. https://www.theverge.com/2014/10/20/7022809/3d-printed-gun-maker-
in-japan-sentenced-2-years. (2014).
[23] Sarah Goehrke. 2019.
A Look Ahead in 3D Printing with Gartner’s
Pete Bailiere. https://www.fabbaloo.com/blog/2019/1/10/a-look-ahead-in-3d-
printing-with-gartners-pete-basiliere
[24] Lynne MG Graves, Joshua Lubell, Wayne King, and Mark Yampolskiy. 2019. Char-
acteristic Aspects of Additive Manufacturing Security From Security Awareness
Perspectives. IEEE Access 7 (2019), 103833–103853.
[25] Andy Greenburg. 2013. 3D-Printed Gun’s Blueprints Downloaded 100,000
(May 2013).
Times In Two Days “(”With Some Help From Kim Dotcom“)”.
https://www.forbes.com/sites/andygreenberg/2013/05/08/3d-printed-guns-
blueprints-downloaded-100000-times-in-two-days-with-some-help-from-
kim-dotcom/#86151c710b88
[26] Frank Hartung and Martin Kutter. 1999. Multimedia watermarking techniques.
Proc. IEEE 87, 7 (1999), 1079–1107.
[27] LEE Heung-Kyu, Jong-Uk Hou, Hak-Yeol Choi, SONG Hyun-Ji, Do-Gon Kim, and
Han-Ul Jang. 2019. Watermark embedding apparatus and method, and watermark
House, UK.
detecting apparatus and method for 3D printing environment. (Oct. 2019).
[28] Whitney Hipolite. 2015. 3D printable files for Cody Wilson’s Liberator Gun
are Now Available to All on 3DShare. (Jun 2015). https://3dprint.com/73842/
download-3d-printed-gun/
[29] Ivan Homoliak, Flavio Toffalini, Juan Guarnizo, Yuval Elovici, and Martín Ochoa.