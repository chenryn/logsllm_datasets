    53116ca07207+ tip
    This is a bit of a silly example, but the behavior is different on Linux and Windows
    nonetheless, and I'm wondering if it might be part of a bigger issue:
    package main
    import "fmt"
    func main() {
            n := uint8(0)    // or uint16, uint32, uint64...                                                                             
            f := float64(-1) // or float32, but not int32/int64                                                                          
            on := uint8(f)   // does not underflow on Windows                                                                            
            // on := uint8(int32(f)) // this works on both platforms                                                                     
            fmt.Printf("on is %d\n", on)
            n += on
            if n != 255 {
                    fmt.Printf("n is not 255: %d\n", n)
            }
    }
    On Linux (x64):
    # uintunderflow 
    on is 255
    On Windows (x64):
    # uintunderflow.exe
    on is 0
    n is not 255: 0