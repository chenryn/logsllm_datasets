### 创建 `mapIt.py` 脚本

#### 第一步：确定URL格式
首先，你需要明确如何构建一个指向特定街道地址的URL。当你在浏览器中访问 [http://maps.google.com/](http://maps.google.com/) 并搜索某个地址时，你会看到类似以下的URL：
```
https://www.google.com/maps/place/870+Valencia+St/@37.7590311,-122.4215096,17z/data=!3m1!4b1!4m2!3m1!1s0x808f7e3dadc07a37:0xc86b0b2bb93b73d8
```
尽管这个URL包含许多额外信息，但你只需使用基础部分即可成功定位到所需地址。例如，仅使用如下格式也能够正确显示地图：
```
https://www.google.com/maps/place/870+Valencia+St+San+Francisco+CA
```

#### 第二步：处理命令行参数
接下来，在你的 `mapIt.py` 文件中添加以下代码，以处理从命令行传递过来的地址参数。
```python
#!/usr/bin/env python3
# mapIt.py - 使用来自命令行或剪贴板的地址打开浏览器中的地图。

import webbrowser, sys

if len(sys.argv) > 1:
    # 从命令行获取地址。
    address = ' '.join(sys.argv[1:])
else:
    # 如果没有提供命令行参数，则尝试从剪贴板读取地址。
    import pyperclip
    address = pyperclip.paste()

webbrowser.open(f'https://www.google.com/maps/place/{address}')
```

**说明：**
- `sys.argv` 是一个列表，包含了脚本名以及所有通过命令行传入的参数。
- 当有命令行参数时，我们用 `' '.join(sys.argv[1:])` 将这些参数连接成一个完整的字符串（即地址）。
- 如果没有提供命令行参数，程序将调用 `pyperclip.paste()` 来获取当前剪贴板的内容作为地址。
- 最后，使用 `webbrowser.open()` 方法打开默认浏览器并导航至指定的地图位置。

#### 第三步：测试和运行
确保已安装了 `pyperclip` 库，可以通过 pip 安装它：
```
pip install pyperclip
```

现在，你可以通过两种方式运行此脚本：
1. **通过命令行参数：**
   ```
   python3 mapIt.py 870 Valencia St, San Francisco, CA 94110
   ```
2. **复制地址到剪贴板然后直接运行脚本：**
   ```
   python3 mapIt.py
   ```

这将自动打开你的默认网络浏览器，并加载对应地址的地图页面。

### 进阶功能与扩展
一旦掌握了基本操作，你可以进一步扩展此脚本的功能，比如：
- 在新标签页中打开多个链接。
- 自动获取并展示本地天气预报。
- 快速访问常用的社交媒体网站等。

希望以上内容对你有所帮助！如果有任何疑问或需要进一步的帮助，请随时告诉我。