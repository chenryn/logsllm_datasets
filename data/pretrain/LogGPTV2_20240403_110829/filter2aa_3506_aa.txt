# Cover Your APIs: Securing Your Hidden Web Attack Surface
## WHITE PAPER

### Securing Your Hidden Web Attack Surface
**Cover Your APIs**

#### Highlights from this white paper include:
- The significance of web APIs and web services in software development.
- The challenges of incorporating APIs into application security testing and strategies to overcome them.
- The security and efficiency benefits of a holistic approach to Application Security (AppSec).

---

### Executive Summary

Web application programming interfaces (APIs) present a significant, yet often underprotected, attack surface for cybercriminals. While traditional application security testing has focused on the user interface, modern applications increasingly rely on APIs for data exchange and architectural flexibility. Today’s enterprise web applications are no longer monolithic; instead, they consist of loosely coupled services communicating through APIs, which are rapidly developed and deployed in response to evolving business requirements. This dynamic environment significantly increases the web attack surface, exposing organizations to attacks that target APIs to access sensitive data and functionality directly.

According to Gartner, "By 2023, 90% of web-enabled applications will have more surface area for attack in the form of exposed APIs rather than the user interface, up from 50% in 2020." As API abuses are expected to become the top threat vector in 2022, it is clear that application security testing must cover APIs. However, legacy AppSec approaches have not kept pace with these developments, leaving organizations struggling to integrate multiple testing tools and processes, or overlooking web application APIs entirely. Continued neglect can only lead to more successful cyberattacks.

This white paper highlights the importance of including APIs in web application security testing and outlines a modern, comprehensive approach to vulnerability testing that covers the entire attack surface of modern web applications, from development to production.

---

### What You Don’t See Can Hurt You Most

APIs are a critical, yet often overlooked, part of the hidden infrastructure of your web application environment. Just as 80% of an iceberg is submerged, the majority of modern applications operate primarily through APIs rather than the user interface. Research indicates that APIs account for 83% of all web traffic, largely due to their role in powering content delivery networks and data back-ends.

We often equate the user interface with the application itself, but the visible controls are just the tip of the attack surface. Cybercriminals, like physical criminals, prefer to exploit less visible entry points. Why hack a login form when they can quietly extract the same data through an API? More importantly, APIs are frequently overlooked during testing and asset inventory, making them easier to exploit.

In modern service-oriented architectures, most, if not all, application functionality is implemented as web services and exposed through APIs. These APIs are the gatekeepers of the world’s business logic and data. With information being the most valuable resource, it is no surprise that API-based attacks are on the rise. Gartner predicts that by 2023, 90% of web-enabled applications will have more attack surface area in the form of exposed APIs rather than the user interface. By 2022, API abuses will move from infrequent to the most frequent attack vector, resulting in data breaches for enterprise web applications.

To avoid becoming the next breach headline, it is essential to test and secure your web applications, including both the UI and API, as cybercriminals will target the weakest point. While web application security testing is a mature field, API security is still catching up, and there are many misconceptions and misunderstandings to address.

---

### Why APIs Make Attractive Targets

- **API Endpoints**: Easy to define but hard to find, test, and secure.
- **Private APIs**: Many start as internal or test APIs but slip into production without proper inventory, documentation, logging, or access control.
- **Automated Access**: Designed for automated access, which is convenient for both valid users and attackers.
- **Lax Request Validation**: API creators may expect well-formed requests from known systems, leading to less stringent validation of incoming calls.

---

### Demystifying Web APIs

The rising tide of API-based attacks is partly due to the lack of clarity around what web APIs an organization has, how to manage them, and what questions to ask about API security. This section explains web APIs and related concepts, showing how they work, what hides behind the acronyms, and why API security is often misunderstood and underestimated as a risk vector.

#### Attacks on APIs vs. Attacks via APIs

- **Attacks on APIs**: Focus on bypassing access controls to gain unauthorized access to the API itself.
- **Attacks via APIs**: Use authorized or unauthorized API access to probe and exploit underlying applications or services.

---

### Web API Glossary

- **Application Programming Interface (API)**: A connection for exposing software functionality to other systems and applications. Defines a request and return format.
- **Web API**: An interface for accessing web-based software. Common models include REST, SOAP, and GraphQL.
- **Web Service**: Web-based code that performs specific operations and is accessible only through its API.
- **API Endpoint**: The URL for calling a specific web API. Should be documented in the API specification.

---

### Common Web API Types

- **REST (REpresentational State Transfer)**: The most popular type, using HTTP communication and JSON or XML data formats.
- **SOAP (Simple Object Access Protocol)**: A protocol using XML messages, suitable for complex communication.
- **GraphQL**: A query language for APIs, allowing clients to retrieve exactly the data they need in a single request.

---

### Meet Your Ever-Growing Web Attack Surface

External APIs are essential for any web app that needs to interact or integrate with other software. They enable communication between various systems, driving innovation and unlocking new business opportunities. In the enterprise software world, APIs are crucial for integration and customization, such as Invicti products providing REST API endpoints for vulnerability scanning, result fetching, user management, and more.

If you have web applications, you already have APIs in your web attack surface. Originally, APIs extended access to application functionality beyond the graphical user interface, but with the shift to service-oriented architectures and agile development, they have become fundamental building blocks of modern web apps. This means hundreds of potential entry points to defend.

In general, APIs require a unique access key for authorization, adding another layer of complexity to security management.

---

This optimized version aims to make the text more coherent, professional, and reader-friendly, while maintaining the original content and intent.