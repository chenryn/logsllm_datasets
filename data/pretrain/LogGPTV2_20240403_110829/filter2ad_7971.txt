# 如何利用Android Hook技术成为微信运动排行榜第一名
#### 译文声明
本文为翻译文章，原文来源：drops.wooyun.org。译文仅供参考，具体内容以原文为准。

### 引言
随着越来越多的智能手机配备了协处理器，以及人们开始佩戴手环，微信运动迅速流行起来。用户只需关注微信运动公众号，手机就能自动记录每天行走的步数，并且可以与朋友进行PK。每日排名第一的用户还可以登上当日排行榜封面，这极大地激发了人们的竞争欲望。因此，关于此功能的故事也层出不穷，有励志的，也有令人遗憾的。

### 微信运动作弊教程
实际上，成为排行榜第一并不难，只需要掌握一点Android Hook知识即可轻松实现。接下来，我将一步步指导你如何操作。
1. 准备一台已root的Android设备（例如Nexus 5）。
2. 下载并安装Xposed框架及特定插件。这些文件可以从我的GitHub仓库获取：
   [https://github.com/zhengmin1989/WechatSportCheat](https://github.com/zhengmin1989/WechatSportCheat)
3. 安装Xposed.apk后，打开应用选择“安装/更新”，按照提示重启手机。
4. 重启后安装xposedwechat.apk插件，在Xposed模块界面中启用该插件，再次重启手机。
5. 此时，当你随意走动几步再查看微信运动时，你会发现步数增加了许多倍。通过这种方式，你甚至可以在家中仅移动几步就获得大量的步数奖励（如图所示），从而参与微信运动发起的慈善活动——用你的步数换取捐款。

### 作弊原理详解
我们是如何做到这一点的呢？简单来说，当微信运动需要获取用户的步数信息时，它会向Android系统的计步传感器查询数据。如果我们能够拦截两者之间的通信，并修改返回的数据，就可以达到篡改步数的目的。

具体步骤如下：
- 使用Xposed框架hook `android.hardware.SystemSensorManager$SensorEventQueue` 类中的 `dispatchSensorEvent()` 方法。
- 在每次微信请求步数信息时，先读取当前步数，然后在此基础上增加1000步，再将修改后的数值发送回去。这样，微信就会认为用户确实走了这么多步。

关键代码片段如下：
```java
final Class sensorEL = findClass("android.hardware.SystemSensorManager$SensorEventQueue", lpparam.classLoader);
XposedBridge.hookAllMethods(sensorEL, "dispatchSensorEvent", new XC_MethodHook() {
    @Override
    protected void beforeHookedMethod(MethodHookParam param) throws Throwable {
        XposedBridge.log(" mzheng  Hooked method: " +  param.method);
        ((float[]) param.args[1])[0] = ((float[]) param.args[1])[0] + 1000 * WechatStepCount;
        WechatStepCount += 1;
    }
});
```

此外，也可以通过其他传感器接口获取更多信息，例如开机以来总的步数、时间戳等。

值得注意的是，除了在Android平台上实施此类攻击外，在iOS上同样可以通过越狱并hook相关API来达成类似效果。

### 防止作弊建议
要有效防止这种作弊行为，我提出以下两点建议：
1. 加强服务器端逻辑验证能力，比如限制短时间内异常高的步数增长。
2. 增加对hook行为的检测机制。尽管目前这类作弊主要满足了一些人的虚荣心需求，但考虑到安全风险，尤其是涉及隐私泄露或财务损失的情况，必须加强对潜在威胁的防护措施。

### 结论
本文介绍了使用Android Hook技术实现微信运动作弊的基本方法及其背后的工作原理。对于更深入的技术细节和其他应用场景，请参阅WooYun Book系列文章《安卓动态调试七种武器之离别钩 – Hooking》。

### 参考资料
- [**Android.Hook框架xposed篇(Http流量监控)**](http://drops.wooyun.org/tips/7488)
- [**人手一份核武器 – Hacking Team 泄露(开源)资料导览手册**](http://drops.wooyun.org/news/6977)