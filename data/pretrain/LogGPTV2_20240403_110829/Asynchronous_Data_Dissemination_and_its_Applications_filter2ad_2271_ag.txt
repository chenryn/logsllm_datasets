communication cost to 𝑂(𝜅𝑛2 log 𝑛). If we assume a trusted setup
and use the polynomial commitment scheme of [33], then the total
communication cost can be improved to 𝑂(𝜅𝑛2). Moreover, during
the sharing phase, all of the above mentioned schemes provide
secrecy only against an adversary that corrupts up to 𝑡 nodes. Con-
trary to the existing schemes, our dual-threshold ACSS ensures
secrecy against an adversary that corrupts up to ℓ nodes.
Asynchronous Distributed Key Generation. There are relatively
few works on asynchronous DKG [2, 18, 29, 34]. The ADKG con-
struction of Canetti and Rabin [18] uses 𝑛2 AVSS and is hence
inefficient. Kokoris et al, [34] uses 𝑛 dual-threshold ACSS with
reconstruction threshold of 2𝑡 + 1 and an asynchronous common
subset protocol to design an ADKG scheme with a total communi-
cation cost of 𝑂(𝜅𝑛4).
Very recently, Abraham et al. [2] proposed an ADKG protocol
with a communication cost of 𝑂(𝜅𝑛3 log 𝑛). The factor of log 𝑛 in
the ADKG construction stems from the use of the prior best RBC
protocol of Cachin and Tessaro [16]. Using our new RBC protocol
in a blackbox manner, we can improve the communication cost of
their ADKGto 𝑂(𝜅𝑛3). A limitation of the Abraham et al ADKG [2]
is that the secret key is a group element and not a field element. As
a result, their ADKG protocol is not compatible with off-the-shelf
threshold signature schemes such as [10]. Since we only replace
the RBC of [2] with ours, we inherit this limitation.
Concurrent work. Concurrently and independently, Gao et al. [29]
design a new AVSS scheme that has a communication cost of 𝑂(𝜅𝑛2).
Gao et al. [29] then use their improved AVSS scheme along with a
novel reasonably-fair common coin protocol to design Asynchro-
nous Byzantine Agrement (ABA) [35] and ADKG protocol both
with an expected communication cost of 𝑂(𝜅𝑛3). They also inherit
the aforementioned limitation from Abraham et al’s ADKG [2]. Gao
et al. [29] additionally observes that the asynchronous Validated
Byzantine Agreement (VBA) protocol in Abraham et al. [2] im-
plicitly gives an ABA [35] protocol with a communication cost of
𝑂(𝜅𝑛3 log 𝑛) and no trusted setup. This means our RBC protocol can
also improve the communication cost of VBA and ABA to 𝑂(𝜅𝑛3).
8 DISCUSSION
Concrete communication cost our ADD and RBC protocols.
Although we mostly discuss asymptotic cost in this paper, it is
equally important from a practical point of view to make the hidden
constants small. Indeed, this is the case with the primitives we
construct in this work. In particular, our ADD with 𝑛 = 3𝑡 + 1 has
a concrete communication cost of 𝐵ADD = 6𝑛|𝑀|+2𝑛2. The factor
6 is due to the increase in the size of the message due to RSEnc
and the fact that ADD has two rounds of communication. If we
substitute 𝐵ADD in our RBC protocol for long messages we get a
communication cost of 𝑛|𝑀|+2𝜅𝑛2 + 𝐵ADD. Here the 𝑛|𝑀| accounts
for the communication cost the broadcaster incurs while sending 𝑀
to all nodes. The 2𝜅𝑛2 is the cost of Bracha’s RBC on the hash(𝑀).
Similarly, our four-round RBC incurs the same communication cost
of 7𝑛|𝑀|+2𝜅𝑛2 + 2𝑛2.
Limitation of ADD. One limitation of using ADD in our RBC is
its higher computation costs due to encoding and decoding of the
message. Additionally, in the presence of malicious nodes, each
honest node may have to try decoding 𝑡 times. Contrary to this, in
the RBC protocol of Cachin and Tessaro [15], each node needs to
run the decoding algorithm only once.
9 CONCLUSION
In this paper we have introduced the problem of Data Dissemina-
tion, which seeks to disseminate a data blob 𝑀 from a subset of
honest subset of honest nodes to all honest nodes, despite the pres-
ence of some malicious nodes. We have presented an Asynchronous
Data Dissemination (ADD) protocol for 𝑛 parties with a commu-
nication cost of 𝑂(𝑛|𝑀|+𝑛2). We then used our ADD protocol to
improve the communication cost or trust assumption of RBC for
long messages, AVSS, ACSS, dual-threshold ACSS, and ADKG.
We believe ADD can be useful in other applications that we did
not study in this paper, e.g., in improving the communication cost
Session 10C: Foundations CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2716of recent randomness beacon protocols for both synchronous [8]
and partially synchronous networks [23]. Generally speaking, ADD
will be useful in protocols that involve distribution of long common
messages across all nodes. These messages include but are not
limited to blocks in blockchain protocols, polynomial commitments,
encrypted shares, NIZK proofs, etc.
ACKNOWLEDGMENTS
The authors would like to thank Vinith Krishnan, Andrew Miller,
and Tom Yurek for many helpful discussions related to the paper.
REFERENCES
[1] Ittai Abraham, TH Hubert Chan, Danny Dolev, Kartik Nayak, Rafael Pass, Ling
Ren, and Elaine Shi. 2019. Communication complexity of byzantine agreement,
revisited. In Proceedings of the 2019 ACM Symposium on Principles of Distributed
Computing. 317–326.
[2] Ittai Abraham, Philipp Jovanovic, Mary Maller, Sarah Meiklejohn, Gilad Stern,
and Alin Tomescu. 2021. Reaching Consensus for Asynchronous Distributed Key
Generation. In Proceedings of the 2021 ACM Symposium on Principles of Distributed
Computing. 363–373.
[3] Nicolas Alhaddad, Mayank Varia, and Haibin Zhang. 2021. High-Threshold AVSS
with Optimal Communication Complexity. Cryptology ePrint Archive, Report
2021/118. (2021). https://eprint.iacr.org/2021/118.
[4] Michael Backes, Amit Datta, and Aniket Kate. 2013. Asynchronous computational
VSS with reduced communication complexity. In Cryptographers’ Track at the
RSA Conference. Springer, 259–276.
[5] Soumya Basu, Alin Tomescu, Ittai Abraham, Dahlia Malkhi, Michael K Reiter, and
Emin Gün Sirer. 2019. Efficient Verifiable Secret Sharing with Share Recovery in
BFT Protocols. In Proceedings of the 2019 ACM SIGSAC Conference on Computer
and Communications Security. 2387–2402.
[6] Michael Ben-Or, Ran Canetti, and Oded Goldreich. 1993. Asynchronous secure
computation. In Proceedings of the twenty-fifth annual ACM symposium on Theory
of computing. 52–61.
[7] Michael Ben-Or, Boaz Kelmer, and Tal Rabin. 1994. Asynchronous secure com-
putations with optimal resilience. In Proceedings of the thirteenth annual ACM
symposium on Principles of distributed computing. 183–192.
[8] Adithya Bhat, Nibesh Shrestha, Aniket Kate, and Kartik Nayak. 2021. RandPiper–
Reconfiguration-Friendly Random Beacons with Quadratic Communication. In
(To appear) Proceedings of the 2021 ACM SIGSAC Conference on Computer and
Communications Security.
[9] George Robert Blakley. 1979. Safeguarding cryptographic keys. In 1979 Interna-
tional Workshop on Managing Requirements Knowledge (MARK). IEEE, 313–318.
[10] Alexandra Boldyreva. 2003. Threshold signatures, multisignatures and blind sig-
natures based on the gap-Diffie-Hellman-group signature scheme. In International
Workshop on Public Key Cryptography. Springer, 31–46.
[11] Dan Boneh and Xavier Boyen. 2004. Short signatures without random oracles. In
International conference on the theory and applications of cryptographic techniques.
Springer, 56–73.
[12] Dan Boneh and Xavier Boyen. 2008. Short signatures without random oracles
and the SDH assumption in bilinear groups. Journal of cryptology 21, 2 (2008),
149–177.
[13] Dan Boneh, Ben Lynn, and Hovav Shacham. 2001. Short signatures from the Weil
pairing. In International conference on the theory and application of cryptology
and information security. Springer, 514–532.
[14] Gabriel Bracha. 1987. Asynchronous Byzantine agreement protocols. Information
and Computation 75, 2 (1987), 130–143.
[15] Christian Cachin, Klaus Kursawe, Anna Lysyanskaya, and Reto Strobl. 2002.
Asynchronous verifiable secret sharing and proactive cryptosystems. In Pro-
ceedings of the 9th ACM Conference on Computer and Communications Security.
88–97.
[16] Christian Cachin and Stefano Tessaro. 2005. Asynchronous verifiable information
dispersal. In 24th IEEE Symposium on Reliable Distributed Systems (SRDS’05). IEEE,
191–201.
[17] Ran Canetti. 1996. Studies in secure multiparty computation and applications.
[18] Ran Canetti and Tal Rabin. 1993. Fast asynchronous Byzantine agreement with
optimal resilience. In Proceedings of the twenty-fifth annual ACM symposium on
Theory of computing. 42–51.
[19] Ignacio Cascudo and Bernardo David. 2017. SCRAPE: Scalable randomness
attested by public entities. In International Conference on Applied Cryptography
and Network Security. Springer, 537–556.
Ph.D. Dissertation. Citeseer.
[24] Danny Dolev and Rüdiger Reischuk. 1985. Bounds on information exchange for
Byzantine agreement. Journal of the ACM (JACM) 32, 1 (1985), 191–204.
[25] Sisi Duan, Michael K Reiter, and Haibin Zhang. 2018. BEAT: Asynchronous BFT
made practical. In Proceedings of the 2018 ACM SIGSAC Conference on Computer
and Communications Security. 2028–2041.
[26] Amos Fiat and Adi Shamir. 1986. How to prove yourself: Practical solutions to
identification and signature problems. In Conference on the theory and application
of cryptographic techniques. Springer, 186–194.
[27] Adam Gągol, Damian Leśniak, Damian Straszak, and Michał Świętek. 2019. Aleph:
Efficient atomic broadcast in asynchronous networks with byzantine nodes. In
Proceedings of the 1st ACM Conference on Advances in Financial Technologies.
214–228.
[28] Shuhong Gao. 2003. A new algorithm for decoding Reed-Solomon codes. In
[20] Miguel Castro, Barbara Liskov, et al. 1999. Practical Byzantine fault tolerance. In
Proceedings of the Third Symposium on Operating Systems Design and Implemen-
tation. 173–186.
[21] David Chaum and Torben Pryds Pedersen. 1992. Wallet databases with observers.
In Annual International Cryptology Conference. Springer, 89–105.
[22] Ashish Choudhury. 2020. Optimally-resilient Unconditionally-secure Asynchro-
nous Multi-party Computation Revisited. IACR Cryptol. ePrint Arch. 2020 (2020),
906.
[23] Sourav Das, Vinith Krishnan, Irene Miriam Isaac, and Ling Ren. 2021. SPURT:
Scalable Distributed Randomness Beacon with Transparent Setup. Cryptology
ePrint Archive, Report 2021/100. (2021). https://eprint.iacr.org/2021/100.
Communications, information and network security. Springer, 55–68.
[29] Yingzi Gao, Yuan Lu, Zhenliang Lu, Qiang Tang, Jing Xu, and Zhenfeng Zhang.
2021. Efficient Asynchronous Byzantine Agreement without Private Setups.
arXiv preprint arXiv:2106.07831 (2021).
[30] Bingyong Guo, Zhenliang Lu, Qiang Tang, Jing Xu, and Zhenfeng Zhang. 2020.
Dumbo: Faster asynchronous bft protocols. In Proceedings of the 2020 ACM SIGSAC
Conference on Computer and Communications Security. 803–818.
[31] Somayeh Heidarvand and Jorge L Villar. 2008. Public verifiability from pair-
ings in secret sharing schemes. In International Workshop on Selected Areas in
Cryptography. Springer, 294–308.
[32] James Hendricks, Gregory R Ganger, and Michael K Reiter. 2007. Verifying
distributed erasure-coded data. In Proceedings of the twenty-sixth annual ACM
symposium on Principles of distributed computing. 139–146.
[33] Aniket Kate, Gregory M Zaverucha, and Ian Goldberg. 2010. Constant-size
commitments to polynomials and their applications. In International conference
on the theory and application of cryptology and information security. Springer,
177–194.
[34] Eleftherios Kokoris Kogias, Dahlia Malkhi, and Alexander Spiegelman. 2020.
Asynchronous Distributed Key Generation for Computationally-Secure Random-
ness, Consensus, and Threshold Signatures.. In Proceedings of the 2020 ACM
SIGSAC Conference on Computer and Communications Security. 1751–1767.
[35] Leslie Lamport, Robert Shostak, and Marshall Pease. 1982. The Byzantine Gen-
erals Problem. ACM Transactions on Programming Languages and Systems 4, 3
(1982), 382–401.
[36] Donghang Lu, Thomas Yurek, Samarth Kulshreshtha, Rahul Govind, Aniket Kate,
and Andrew Miller. 2019. Honeybadgermpc and asynchromix: Practical asyn-
chronous mpc and its application to anonymous communication. In Proceedings
of the 2019 ACM SIGSAC Conference on Computer and Communications Security.
887–903.
[37] Yuan Lu, Zhenliang Lu, Qiang Tang, and Guiling Wang. 2020. Dumbo-mvba:
Optimal multi-valued validated asynchronous byzantine agreement, revisited.
In Proceedings of the 39th Symposium on Principles of Distributed Computing.
129–138.
[38] Florence Jessie MacWilliams and Neil James Alexander Sloane. 1977. The theory
[39] Robert J. McEliece and Dilip V. Sarwate. 1981. On sharing secrets and Reed-
of error correcting codes. Vol. 16. Elsevier.
Solomon codes. Commun. ACM 24, 9 (1981), 583–584.
[40] Andrew Miller, Yu Xia, Kyle Croman, Elaine Shi, and Dawn Song. 2016. The
honey badger of BFT protocols. In Proceedings of the 2016 ACM SIGSAC Conference
on Computer and Communications Security. 31–42.
[41] Kartik Nayak, Ling Ren, Elaine Shi, Nitin H Vaidya, and Zhuolun Xiang. 2020.
Improved Extension Protocols for Byzantine Broadcast and Agreement. In 34th
International Symposium on Distributed Computing (DISC 2020). Schloss Dagstuhl-
Leibniz-Zentrum für Informatik.
[42] Arpita Patra, Ashish Choudhary, and C Pandu Rangan. 2009. Efficient statistical
asynchronous verifiable secret sharing with optimal resilience. In International
Conference on Information Theoretic Security. Springer, 74–92.
[43] Arpita Patra, Ashish Choudhury, and C Pandu Rangan. 2015. Efficient asynchro-
nous verifiable secret sharing and multiparty computation. Journal of Cryptology
28, 1 (2015), 49–109.
[44] Torben Pryds Pedersen. 1991. Non-interactive and information-theoretic secure
verifiable secret sharing. In Annual international cryptology conference. Springer,
129–140.
Session 10C: Foundations CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2717[45] David Pointcheval and Jacques Stern. 1996. Security proofs for signature schemes.
In International Conference on the Theory and Applications of Cryptographic Tech-
niques. Springer, 387–398.
[46] Irving S Reed and Gustave Solomon. 1960. Polynomial codes over certain finite
fields. Journal of the society for industrial and applied mathematics 8, 2 (1960),
300–304.
[47] Alexandre Ruiz and Jorge L Villar. 2005. Publicly verifiable secret sharing from
Paillier’s cryptosystem. In WEWoRC 2005–Western European Workshop on Re-
search in Cryptology. Gesellschaft für Informatik eV.
[48] Berry Schoenmakers. 1999. A simple publicly verifiable secret sharing scheme and
its application to electronic voting. In Annual International Cryptology Conference.