title:BGP convergence in virtual private networks
author:Dan Pei and
Jacobus E. van der Merwe
BGP Convergence in Virtual Private Networks
Dan Pei
AT&T Labs – Research
180 Park Ave
Florham Park, NJ
Jacobus Van der Merwe
AT&T Labs – Research
180 Park Ave
Florham Park, NJ
PI:EMAIL
PI:EMAIL
ABSTRACT
Multi-protocol label switching (MPLS) virtual private net-
works (VPNs) have had signiﬁcant and growing commer-
cial deployments.
In this paper we present the ﬁrst sys-
tematic study of BGP convergence in MPLS VPNs using
data collected from a large tier-1 ISP. We combine several
data sources to produce a methodology to accurately esti-
mate routing convergence delays. We discovered an iBGP
version of BGP path exploration, and show that the route
invisibility problem occurs frequently and is one of the most
signiﬁcant contributing factors to BGP convergence delay
in the VPNs we studied. We therefore propose and evalu-
ate several conﬁguration changes that can be employed to
greatly improve the routing convergence time and minimize
the connectivity disruption in the face of network changes.
Categories and Subject Descriptors
C.2 [Computer Communication Networks]: Network
protocols, Network operations
General Terms
Measurement, Performance
Keywords
BGP, MPLS VPN, Routing Convergence
1.
INTRODUCTION
Multi-protocol
label switching (MPLS) virtual private
networks (VPNs) [13] have had signiﬁcant and growing com-
mercial deployments. VPNs often carry business applica-
tions, such as VoIP, data replication, and ﬁnancial transac-
tions that do not react well to even the smallest disruptions
in connectivity. Therefore, the timely convergence of routing
protocols in the face of network events is critically important
to the continued operation of these applications. Despite the
importance of MPLS VPN networks, their routing behavior
has not been studied by the research community, with the
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’06, October 25–27, 2006, Rio de Janeiro, Brazil.
Copyright 2006 ACM 1-59593-561-4/06/0010 ...$5.00.
notable exception of [3] which formally analyzed the conﬁg-
uration conditions to ensure the correct VPN operation.
As is the case in the public Internet, Border Gateway Pro-
tocol (BGP) [11] plays a key role in MPLS VPNs. Diﬀerent
sites of the same VPN are connected via the provider net-
work, for example as shown in Figure 1. Preﬁxes reachable
in a particular VPN site are advertised to the provider net-
work via external BGP (eBGP) sessions between routers in
the VPN sites and the provider network. Multi-protocol
extension to BGP [2] allows these VPN routes to be dis-
tributed via internal BGP (iBGP) throughout the provider
network, and then via eBGP to other VPN sites that are
part of the same VPN. The AS-level topology of VPN net-
works is therefore basically a hub-and-spoke topology (with
some exceptions), in which the provider AS is the hub and
the customer ASes are the spokes. This is in contrast to
the public Internet BGP topology which have thousands of
ASes in several tiers.
In the public Internet it is well-known that BGP suﬀers
from slow convergence due to the exploration of invalid paths
through diﬀerent parts of the extensive AS topology. Be-
cause of the shallow AS topologies found in MPLS VPNs,
much fewer AS paths are available to explore and iBGP
convergence (in the provider network) therefore plays a rel-
atively more important role in overall BGP convergence in
MPLS VPNs. To the best of our knowledge, there has been
no study on iBGP convergence in general, and iBGP conver-
gence in MPLS VPNs in particular. In this paper we present
an analysis of BGP convergence in MPLS VPNs using data
obtained from a large Tier-1 ISP.
In our analysis we discovered an iBGP version of the path
exploration phenomena. Because a router can receive multi-
ple internal paths (from diﬀerent route reﬂectors) which all
go through the same egress link to reach a speciﬁc preﬁx,
it can mistakenly choose a failed path during the conver-
gence. Further, there is a iBGP route invisibility problem
in which certain network conﬁgurations can also cause al-
ternative (backup) paths to remain “hidden” from the net-
work, until after the route for the primary path has been
completely withdrawn, thus causing periods of disconnect
during convergence.
Our study made use of several data sources (router con-
ﬁgurations, forwarding table dumps, syslog messages and
BGP updates) from the provider network. Combining these
data sources allowed us to develop a new methodology to
accurately determine the BGP convergence times caused by
network events. Our measurement results show that most
convergence delays we observed were relatively short (less
Figure 1: Components of an MPLS VPN
Figure 2: BGP Convergence an MPLS VPN
than 20 seconds). We also found that route invisibility oc-
curs frequently and signiﬁcantly contributes to the total con-
vergence delay, while path exploration does not. This is
diﬀerent from the results in the public Internet, where the
path exploration is the dominant factor [5, 9] even though
invisibility of routes might occur.
Fortunately, most of the factors contributing to conver-
gence delay can be either eliminated completely or signif-
icantly mitigated through a series of router conﬁguration
changes. Through measurement-based estimation, we show
that our proposed changes can greatly reduce the conver-
gence delay in MPLS VPN networks.
The rest of the paper is organized as follows. Section 2
provides some MPLS VPN background. Section 3 discusses
the path exploration and route invisibility in MPLS VPNs
using a representative example from our testbed experiment.
Section 4 and Section 5 present our measurement methodol-
ogy and results. Section 6 evaluates our proposed solutions,
and Section 7 concludes the paper.
2. MPLS VPN BACKGROUND
We now present a brief overview of MPLS VPNs and
speciﬁcally the role played by BGP. In Figure 1 we show the
essential components that constitute an MPLS VPN. The
ﬁgure shows two VPNs: sites A, D and E are part of VPN
I and sites B, C and F are part of VPN II. A customer-
edge (CE) router at each site connects to a provider-edge
(PE) router in the provider network. The PE routers in
turn connect to a set of provider (P) routers in the core of
the provider network. The ﬁgure also shows a set of route-
reﬂectors (RR) that distributes routes within the provider
network.
In order to simply the diagram we show route-
reﬂectors to be co-resident with provider routers.
The provider network provides connectivity between the
diﬀerent VPN sites in such a way that separation of traﬃc
between VPNs is maintained. A key construct to achieve
this separation is the virtual routing and forwarding (VRF)
table that is associated with each VPN on each PE. Each
VRF table contains only routing information related to the
VPN it is associated with. First, the VRF contains routes
associated with the directly connected CE(s) which it typi-
cally obtains via an eBGP session between the PE and the
CE. In much the same way as “regular” IPv4 BGP, these
eBGP learned routes need to be distributed to other PEs
via iBGP to allow remote PEs to reach the preﬁxes in ques-
tion. This is achieved through the use of a VPN speciﬁc
address family (VPNv4) in multiprotocol-BGP (MP-BGP)
iBGP sessions within the provider network.
A salient feature of the VPNv4 address family is the
eight byte route-distinguisher (RD) with which each VRF
is conﬁgured. When routes associated with a VRF gets dis-
tributed via the MP-BGP session, this RD gets added to
each IPv4 preﬁx to form a VPNv4 preﬁx (i.e., (RD:IPv4-
Preﬁx)). Inside the provider network, the complete VPNv4
preﬁx is used for route comparison as part of the route se-
lection process. This allows diﬀerent VPNs to use the same
address space (e.g., 10./8), without any conﬂict (assuming
of course that they are conﬁgured with diﬀerent RD values).
3. BGP CONVERGENCE IN MPLS VPNS
The key metric for BGP convergence is the time it takes
for the network to converge on a stable set of routing tables
after a routing change that was triggered by some network
event. With reference to Figure 2, we focus on the case
where the link between P E2 and CE1 fails, and we consider
the BGP convergence from the point of view of P E3 and the
BGP messages it receives from RR4. There are three factors
that contribute to the BGP convergence time. First, it takes
time for P E2 to detect the failure, which can be 0 to 180
seconds (the BGP hold-timer default value). Second, BGP
messages need to be distributed through the iBGP topol-
ogy, which in practice normally consist of a route-reﬂector
hierarchy. Third, there is an eBGP component between PEs
and CEs. We focus on the ﬁrst two factors in this paper,
given the lack of eBGP update data between PEs and CEs.
We setup a testbed corresponding to Figure 2 in which
RR1 through RR4 and P E1 and P E2 were Cisco routers,
while CE1 and P E3 were software routers running the
Quagga open source routing software. Table 1 shows the
representative event times in the testbed experiment.
It
shows the update messages sent from RR4 to P E3 as well
as the state of RR4’s routing table in the form of iBGP
signaling path, constructed based on two route attributes
(originator and the cluster-list). The originator attribute
indicates the PE who originally injects the route into the
AS. The cluster-list indicates the route reﬂectors traversed
by the updates. For example, the route learned by P E3 and
RR4 before the link failure has the iBGP signaling path of
(RR4,RR3,P E2), meaning that the path was ﬁrst injected
by P E2 into the AS, then propagated to RR3’s cluster, and
then propagated to RR4’s cluster. We now use Table 1 to
illustrate the path exploration and route invisibility problem.
time
before failure
T=0
T=0.7s
T=4.7s
T=9.7s
RR4’s updates
(RR4,RR3,P E2)
failure happens
(RR4,RR2,P E2)
withdrawal
(RR4,RR1,P E1)
RR4’s table
(RR3, P E2), (RR2, P E2)
(RR3, P E2), (RR2, P E2)
(RR2, P E2)
none
(RR1, P E1)
Table 1: iBGP signaling path of RR4’s routes.
3.1 Path Exploration in iBGP
At T = 0 second, we tear down the eBGP session between
CE1 and P E2, and P E2 loses the primary path. Because
P E2 does not have any other path in its routing table, it
sends a withdrawal message to RR2 and RR3 to withdraw
the primary path. One might expect that RR4 will quickly
send a withdrawal to P E3. But at T = 0.7 second, RR4
announces a path (RR4,RR2,P E2) to P E3. Note that at
this point in time this path is in fact invalid since P E2 does
not have a route to the destination at T = 0.7 second.
What happens is the following. Due to background BGP
load at RR2, it processes the withdrawal from P E2 much
slower than RR3 does.
(In the testbed background BGP
traﬃc was provided by an Agilent router emulator connected
to RR2.) Eventually RR2 will process the withdrawal from
P E2 and send a withdrawal to the rest of the reﬂectors.
However, its withdrawal arrives at RR4 somewhat later than
RR3’s. As a result, RR4 receives and processes the with-
drawal from RR3 ﬁrst and computes the new (invalid) best
path, (RR2, P E2), which is not yet withdrawn by RR2.
This “new route” is thus sent to P E3 at T = 0.7 second.
Note that in the testbed environment, the above update
propagation (P E2 → RR3 → RR4 → P E3) does not in-
volve any MRAI delay because the updates are the ﬁrst to
be exchanged on the sessions involved. However, after that
the MRAI timers are turned on for these sessions, including
the one from RR4 to P E3. This means that no other up-
date can be sent over this session until M seconds later (M
is by default set to 4 to 5 seconds). Therefore, when RR2