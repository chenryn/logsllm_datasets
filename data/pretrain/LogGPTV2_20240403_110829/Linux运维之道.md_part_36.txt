Google Perftools
GeolP
FLV
Embedded Perl
Log
Index
Headers
Upstream
SCGI
Rewrite
Referer
Memcached
Map
Limit Conn
模块名称
模块名称
支持SSL/TLS加密邮件协议
邮件代理功能
支持WebDAV
查看服务器状态
支持HTTPS/SSL
使用密钥保护页面
使用Nginx作为后端服务器
支持MP4
转换图形的过滤器
压缩静态文件
支持谷歌的性能优化工具
通过IP变量实现负载均衡
支持Flash视频
支持Perl
自定义日志
首页
设置http响应的头部信息
负载均衡
支持SCGI协议
使用正则表达式重写请求
基于Referer头部信息过滤
Memcache支持
设置变量
会话的并发连接
描述
描述
--with-http_dav_module
--with-http_ss_module
--with-http_mp4_module
--with-http_flv_module
--without-http_upstream_ip_hash_module
--without-http_scgi_module
--without-http_rewrite_module
--with-mail_ssl_module
--without-mail_smtp_module
--without-mail_imap_module
--without-mail_pop3_module
--with-http_stub_status_module
--with-http_secure_link_module
--with-google_perftools_module
--with-http_geoip_module
--without-http_referer_module
--without-http_memcached_module
--without-http_map_module
--without-http_limit_conn_module
--with-mail
--with-http_realip_module
--with-http_image_filter_module
--with-http_gzip_static_module
--with-http_perl_module
开启选项
禁用选项
第4章搭建网络服务
263
续表
---
## Page 280
拟主机，server必须位于http内部，一个配置文件中可以有多个server。
http、server 设置，event主要用来定义Nginx工作模式，http 提供Web 功能，server用来设置虚
表4-16
信号给该进程号，常用信号参见表4-16。具体案例如下：
器进程，建议将常用的进程管理任务写成脚本。下面是Nginx常用的进程管理指令。
Nginx 默认没有提供启动脚本，需要手动输入命令来管理进程，如果需要更加方便地操作服务
为 conf（主配置文件目录）、html（网站根目录）、logs（日志文件目录）、sbin（主程序目录）。
Linux运维之道
USR2
HUP
TERM,INT
4.10.3
信号名称
264
Nginx 默认的配置文件为/usr/local/nginx/conf/nginx.conf，配置文件主要包括全局、event、
#mime.types为文件类型定义文件
http
Nginx会将进程号保存在/usr/local/nginx/logs/nginx.pid文件中，
#每个进程可以处理的连接数，
events
pidlogs/nginx.pid;
#进程号保存文件
error_log logs/error.log info;
#错误日志文件，以及日志级别
worker_processes
#启动子进程数，可以通过psauxIgrepnginx查看
#usernobody;
#设置用户与组
[root@centos6 ~]# kill
xox、x#o]
[root@centos6~]#/usr/local/nginx/sbin/nginx-s
[root@centos6
>/usr/local/nginx/conf/nginx.conf
[root@centos6 ~]#/usr/local/nginx/sbin/nginx -c
[root@centos6~]#/usr/local/nginx/sbin/nginx
worker_connections
配置文件解析
升级程序
重启应用新的配置文件
快速关闭
～1#
描述
/usr/local/nginx/sbin/nginx -s
1024;
受系统文件句柄的限制
-HUP
cat /usr/local/nginx/logs/nginx.pid
WINCH
USRI
QUIT
信号名称
优雅地关闭工作进程
重新打开日志文件
优雅地关闭，保持现有的客户端连接
reload
stop
，我们可以使用kili指令发送
#指定配置文件启动主程序
描述
#启动主程序
#重新加载设置
#关闭主程序
---
## Page 281
#服务器监听的端口
#使用server定义虚拟主机
#
#
keepalive_timeout
#保持连接的超时时间
#开启后服务器的响应头部信息产生独立的数据包发送，即一个响应头信息一个包
sendfile on;
#一般的read、write更高效
#是否调用sendfile（）进行数据复制，sendfile（）复制数据是在内核级别完成的，所以会比
#创建访问日志，格式采用main定义的格式
#使用log_format可以自定义日志格式，
default_type
是否采用压缩功能，将页面压缩后传输更节省流量
#默认文件类型
include
#access_log logs/access.log main;
#设置错误代码对应的错误页面
#首页文件，先找index.html，若没有，再找index.htm
#设置网页根路径，
#对URL进行匹配
#设置虚拟主机的访问日志
#编码格式，如果网页编码与此设置不同，则将被自动转码
#访问域名
error_page
#access_log
#charset koi8-r;
server name
listen
#下面三行注释行表明，若用户访问URL以.php结尾，则自动将该请求转交给
# proxy the PHP scripts to Apache listening on 127.0.0.1:80
location
#redirect server error pages to the static page /50x.html
#error_page404
location
root
index
root
application/octet-stream;
mime.types;
html;
index.html
html;
/50x.html
使用的是相对路径，html指的是处于Nginx安装路径下
500502503504/50x.html;
logs/host.access.logmain;
www.jacob.com;
80;
65;
'$status $body_bytes_sent
'$remote_addr-$remote_user[$time_local]
index.htm;
名称为main
/404.html;
第4章搭建网络服务
"$request"
®
265
---
## Page 282
Linux运维之道
266
#指定私钥文件，使用相对路径私钥需要存放在与nginx.conf同目录下
#指定证书文件，
#开启SSL功能
#监听TLS使用的443端口
#server{
#server{
#定义虚拟主机
# another virtual host using mix of IP-, name-, and port-based configuration
#location/\.ht
#
#
ssl_certificate
Ssl
server_name
#HTTPS server
#
listen
#拒绝所有的人访问.ht页面
#location
#127.0.0.1服务器，通过proxy_pass可以实现代理功能
ssl_prefer
ssl_
ssl_protocols
ssl_session_timeout
ssl_certificate_key
location/
server_name
listen
listen
location
denyaccessto.htaccess
_cipherS HIGH:!aNULL:!MD5;
root
deny
proxy_pass
使用相对路径证书需要存放在与nginx.conf同目录下
index
include
fastcgi_param
fastcgi index
fastcgi_pass
root
localhost;
all;
html;
\.phps
\.php${
index.html index.htm;
server
443;
somename
somename:8080;
:0008
SSLv2SSLv3 TLSv1;
!uo
http://127.0.0.1;
cert.pem;
html;
ciphers
fastcgi_params;
SCRIPT_FILENAME
index.php;
127.0.0.1:9000;.
cert.key;
5m;
alias
files，
on;
another.alias;
 server 1istening on 127.0.0.1:9000
if Apache's document root
/scripts$fastcgi_script_name;
---
## Page 283
index.html。
代码块。其次，为4个虚拟主机创建网页根路径，并为每个网站创建测试用的首页文件
也就是域名无法匹配以上所有的域名时，使用该虚拟主机响应客户端请求。具体操作如下。
指令是server_name和root,分别用来设置域名与网页根路径。第四个虚拟主机为默认虚拟主机，
web.domain.com访问网站，第三个虚拟主机使用www.example.com访问。虚拟主机中最重要的
首先需要修改nginx主配置文件/usr/local/nginx/conf/nginx.conf，在该文件中添加虚拟主机
以及除web.domain.com外的所有以domain.com结尾的域名都可以访问，第二个虚拟主机使用
4.10.4
下面的例子中，我们创建4个基于域名的虚拟主机，第一个虚拟主机使用www.domain.com
http{
events{
pid
error_log
worker_processes 1;
user nobody;
[root@centos6conf]#vim/usr/local/nginx/conf/nginx.conf
server{
gzipon;
keepalive_timeout
default_type
worker_connections
sendfile
include
虚拟主机应用案例
accesslog
servername
listen
location/
logs/nginx.pid;
logs/error.log
index
root
application/octet-stream;
mime.types;
index.html index.htm;
html;
logs/www.domain.com.access.logmain;
www.domain.com*.domain.com;
80;
on;
'$status $body_bytes_sent"$http_referer"
65;
4;
info;
第4章搭建网络服务
267
---
## Page 284
Linux运维之道
268
为客户端提供DNS 域名解析后，
[root@centos6 conf]#echo"default"> /usr/local/nginx/html/default/index.html
[root@centos6 conf]#echo"example.com">/usr/local/nginx/html/example/index.html
[root@centos6 conf]#echo"web.domain.com">/usr/local/nginx/html/web/index.html
[root@centos6conf]#echo"domain.com">/usr/local/nginx/html/domain/index.html
[root@centos6conf]#mkdir/usr/local/nginx/html/{domain,web,example,default}
server{
server{
server
listen
location/{
server_name
listen
location/{
server_name
listen
location~/\.ht{
location=/50x.html
error_page
location
root
root
deny
index
root
index
index
root
index
root
all;
index.html index.htm;
html/default;
index.htmlindex.htm;
html/example;