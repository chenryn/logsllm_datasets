    }
    puVar2 = (undefined4 *)FUN_00407f40();
    *puVar2 = 0x16;
    uVar1 = FUN_00407e83();
    uVar1 = uVar1 & 0xffffff00;
  }
  else {
LAB_004078e5:
    uVar1 = CONCAT31((int3)(uVar1 >> 8),1);
  }
  return uVar1;
}
// Library Function - Single Match
// Name: ?write_character@?$string_output_adapter@_W@__crt_stdio_output@@QBE_N_WQAH@Z
// Library: Visual Studio 2015 Release
// public: bool __thiscall
// __crt_stdio_output::string_output_adapter::write_character(wchar_t,int * const)const 
bool __thiscall write_character(string_output_adapter_wchar_t_ *this,wchar_t param_1,int *param_2)
{
  int iVar1;
  undefined uVar2;
  undefined in_stack_00000005;
  iVar1 = *(int *)this;
  if (*(int *)(iVar1 + 8) == *(int *)(iVar1 + 4)) {
    if (*(char *)(iVar1 + 0xc) == 0) {
      *param_2 = -1;
    }
    else {
      *param_2 = *param_2 + 1;
    }
    uVar2 = *(undefined *)(*(int *)this + 0xc);
  }
  else {
    *param_2 = *param_2 + 1;
    *(int *)(*(int *)this + 8) = *(int *)(*(int *)this + 8) + 1;
    *(undefined2 *)**(undefined4 **)this = _param_1;
    **(int **)this = **(int **)this + 2;
    uVar2 = 1;
  }
  return (bool)uVar2;
}
uint __thiscall FUN_0040792f(void *this,byte param_1)
{
  uint uVar1;
  if (((*(uint *)(*(int *)this + 0xc) >> 0xc & 1) == 0) || (*(int *)(*(int *)this + 4) != 0)) {
    uVar1 = FUN_0040c28e(param_1,*(FILE **)this);
    uVar1 = uVar1 & 0xffffff00 | (uint)(uVar1 != 0xffffffff);
  }
  else {
    uVar1 = CONCAT31((int3)((uint)*(int *)this >> 8),1);
  }
  return uVar1;
}
void __fastcall FUN_00407965(int param_1)
{
  ushort uVar1;
  int iVar2;
  int iVar3;
  ushort *puVar4;
  int local_14;
  int local_10 [2];
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if ((*(char *)(param_1 + 0x3c) == 0) || (*(int *)(param_1 + 0x38) > 8),1);
}
void __thiscall FUN_00407aa3(void *this,byte *param_1,int param_2,int *param_3,int **param_4)
{
  int iVar1;
  uint uVar2;
  int *piVar3;
  byte *pbVar4;
  int *piVar5;
  if (((*(uint *)(*(int *)this + 0xc) >> 0xc & 1) != 0) && (*(int *)(*(int *)this + 4) == 0)) {
    *param_3 = *param_3 + param_2;
    return;
  }
  piVar5 = *param_4;
  if (piVar5 == (int *)0x0) {
    piVar5 = (int *)FUN_00407f40();
    *param_4 = piVar5;
  }
  iVar1 = *piVar5;
  pbVar4 = param_1 + param_2;
  *piVar5 = 0;
  if (param_1 != pbVar4) {
    do {
      uVar2 = FUN_0040792f(this,*param_1);
      if ((char)uVar2 == 0) {
        piVar3 = *param_4;
        if (piVar3 == (int *)0x0) {
          piVar3 = (int *)FUN_00407f40();
          *param_4 = piVar3;
        }
        if (*piVar3 != 0x2a) {
          *param_3 = -1;
          break;
        }
        uVar2 = FUN_0040792f(this,0x3f);
        if ((char)uVar2 != 0) goto LAB_00407bb6;
        *param_3 = -1;
      }
      else {
LAB_00407bb6:
        *param_3 = *param_3 + 1;
      }
      param_1 = param_1 + 1;
    } while (param_1 != pbVar4);
  }
  if ((*piVar5 == 0) && (iVar1 != 0)) {
    *piVar5 = iVar1;
  }
  return;
}
void __thiscall FUN_00407acf(void *this,undefined8 *param_1,uint param_2,int *param_3)
{
  undefined4 *puVar1;
  uint uVar2;
  if (param_2 == 0) {
    return;
  }
  puVar1 = *(undefined4 **)this;
  if (puVar1[2] == puVar1[1]) {
    if (*(char *)(puVar1 + 3) == 0) {
LAB_00407b33:
      *param_3 = -1;
      return;
    }
  }
  else {
    uVar2 = puVar1[1] - puVar1[2];
    if (param_2 @@@CAPAXI@Z, _malloc
// Library: Visual Studio 2015 Release
void * __cdecl allocate(size_t _Size)
{
  LPVOID pvVar1;
  pvVar1 = __malloc_base(_Size);
  return pvVar1;
}
// Library Function - Single Match
// Name: ___acrt_call_reportfault
// Library: Visual Studio 2015 Release
void ___acrt_call_reportfault(int param_1,DWORD param_2,DWORD param_3)
{
  BOOL BVar1;
  LONG LVar2;
  byte in_PF;
  byte in_AF;
  byte in_TF;
  byte in_IF;
  byte in_NT;
  byte in_AC;
  byte in_VIF;
  byte in_VIP;
  byte in_ID;
  _EXCEPTION_POINTERS local_32c;
  EXCEPTION_RECORD local_324;
  int local_2d4 [39];
  PCONTEXT local_224;
  uint local_214;
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if (param_1 != -1) {
    FUN_00402855();
  }
  FUN_00402e50((int *)&local_324,0,0x50);
  FUN_00402e50(local_2d4,0,0x2cc);
  local_32c.ExceptionRecord = &local_324;
  local_32c.ContextRecord = (PCONTEXT)local_2d4;
  local_214 = (uint)(in_NT & 1) * 0x4000 | (uint)SCARRY4((int)&stack0xfffffcb8,0x18) * 0x800 |
              (uint)(in_IF & 1) * 0x200 | (uint)(in_TF & 1) * 0x100 |
              (uint)((int)&stack0xfffffcd0 > bVar2 |
                      (DAT_0041e004 ^ _DAT_0041ed30) << 0x20 - bVar2), pcVar3 == (code *)0x0)) {
    FUN_00407e93();
    pcVar3 = (code *)swi(3);
    (*pcVar3)(param_2,param_3,param_4,param_5);
    return;
  }