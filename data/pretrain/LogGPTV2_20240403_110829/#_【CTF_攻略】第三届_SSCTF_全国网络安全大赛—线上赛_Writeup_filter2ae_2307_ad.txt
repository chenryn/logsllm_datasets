### 通过 GitHack 下载文件后的分析

在使用 GitHack 工具下载了目标仓库后，我们可以通过 `git log` 命令查看提交历史，以进一步分析代码库中的潜在信息。以下是具体的命令及其输出：

```bash
root@kali:~/Desktop/GitHack/dist/60.191.205.87# git log
```

#### 提交记录：
- **Commit:** 6a0bbb4f6ce6d101c0cf5abac4b04ff004b1a918
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 06:10:14 2017 -0400
  - **Message:** this is flag

- **Commit:** 8894bb4d45643d52b5eb8175710999fcd398ebd4
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 06:08:12 2017 -0400
  - **Message:** 666666666

- **Commit:** 473e9cce7391e913ffcf10b96ba6e4c0b950fe8e
  - **Author:** zhang tie
  - **Date:** Wed Apr 20 06:05:28 2017 -0400
  - **Message:** test pass

- **Commit:** 9ab1451776fb32e82c2524fc4f37fa3f33ceae2f
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 05:46:06 2017 -0400
  - **Message:** password?

- **Commit:** eac8d383f192730a605bb5d3115aa4bbba8a99ea
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 05:32:31 2017 -0400
  - **Message:** pass??

- **Commit:** cd7bee8ad1b5807b7136fd8fb0c9ae853204c1fc
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 05:29:33 2017 -0400
  - **Message:** pass????

#### 分析特定提交

针对 `8894bb4d45643d52b5eb8175710999fcd398ebd4` 这个提交，我们可以使用 `git show` 命令来查看详细信息：

```bash
root@kali:~/Desktop/GitHack/dist/60.191.205.87# git show 8894bb4d45643d52b5eb8175710999fcd398ebd4
```

**警告：**
Git 不会创建一个以40位十六进制字符命名的引用。如果提供了40位十六进制字符，它将被忽略。不过这些引用也可能被错误地创建。例如：

```bash
git checkout -b $br $(git rev-parse ...)
```

当 `$br` 空白时，一个40位十六进制的引用将被创建。请检查这些引用，并可能需要删除它们。用 `git config advice.objectNameWarning false` 命令关闭本消息通知。

**提交详情：**

- **Commit:** 8894bb4d45643d52b5eb8175710999fcd398ebd4
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 06:08:12 2017 -0400
  - **Message:** 666666666
  - **Diff:**
    ```diff
    diff --git a/ssctf/phpcms/templates/flag.txt b/ssctf/phpcms/templates/flag.txt
    new file mode 100644
    index 0000000..7746a53
    --- /dev/null
    +++ b/ssctf/phpcms/templates/flag.txt
    @@ -0,0 +1 @@
    +SSCTF{xsL3HOvFlV+H40s0mhszc5t1x38EU0ZIFJHZ/h2sC3U=}
    ```

这个提交中新增了一个文件 `flag.txt`，内容为 `SSCTF{xsL3HOvFlV+H40s0mhszc5t1x38EU0ZIFJHZ/h2sC3U=}`。这是一个加密字符串，我们需要进一步解密。

#### 查看另一个提交

针对 `9ab1451776fb32e82c2524fc4f37fa3f33ceae2f` 这个提交，同样使用 `git show` 命令查看详细信息：

```bash
root@kali:~/Desktop/GitHack/dist/60.191.205.87# git show 9ab1451776fb32e82c2524fc4f37fa3f33ceae2f
```

**提交详情：**

- **Commit:** 9ab1451776fb32e82c2524fc4f37fa3f33ceae2f
  - **Author:** zhang tie
  - **Date:** Wed Apr 26 05:46:06 2017 -0400
  - **Message:** password?
  - **Diff:**
    ```diff
    diff --git a/ssctf/pass.php b/ssctf/pass.php
    index 23fdea9..f0acac5 100644
    --- a/ssctf/pass.php
    +++ b/ssctf/pass.php
    @@ -1 +1,30 @@
    -this is pass?
    +
    ```

在这个提交中，`pass.php` 文件的内容被修改。通过分析，我们发现这是 RC4 加密。通过对密文重新进行一次加密，可以得到明文。最终我们得到了 flag `f6daf9bf00e45f52f23d844f20952503`。

### 其他挑战

#### Misc150 互相伤害

- 解压流量包，导出一堆图片（实际上是表情包）。
- 通过二维码扫描到信息：`U2FsdGVkX1+VpmdLwwhbyNU80MDlK+8t61sewce2qCVztitDMKpQ4fUl5nsAZOI7bE9uL8lW/KLfbs33aC1XXw==`。
- 该信息是 AES 加密后的密文，密钥可能是 CTF。
- 在线解密后得到字符串 `668b13e0b0fc0944daf4c223b9831e49`，但这并不是 flag。
- 使用 binwalk 解析所有图片，在第11张图片中找到一个压缩包，解压后得到一张包含两个二维码的图片，反色扫描得到 flag。

#### Misc200 我们的秘密是绿色的

- 使用隐写工具 OurSecret，key 是图中绿色的文字 `0405111218192526`，得到一个名为 `try` 的压缩包。
- 压缩包密码提示：你知道 coffee 的生日是多少么？通过字典爆破得到密码 `19950822`。
- 使用 Advanced Archive Password Recovery 统计信息，得到密文 `Y29mZmVl`。
- 通过伪加密和栅栏、凯撒解密，最终得到 flag `{ssctf_@seclover%coffee_*}`。

#### Misc300 你知道我在等你吗

- 对 MP3 文件进行 binwalk 处理，得到三个文件：一个提示、一个压缩包、一个 MP3。
- 使用 strings 命令解析 MP3 文件，得到密码 `falg_config_@tl_`。
- 解压压缩包后得到一张咖啡图片，从中提取数据并保存为 PNG 图片，扫描二维码得到下载链接。
- 下载的 txt 文件中看到 PK 字样，改为 zip 后缀，解压后得到 flag `keyis{sec1over%6ugscan@coffee}`。

### Web 渗透

#### Web100 捡吗？

- 题目考察 SSRF 漏洞。
- 利用大小写绕过，最终得到 flag `ssctf{85c43ae2851ba3142364b65d3f1e360f}`。

#### Web200 弹幕

- 利用 WebSocket 显示弹幕，发现特殊的 welcome 弹幕是一个 XSS 平台 payload。
- 登录 XSS 平台，利用漏洞注入 XSS payload，获取 cookie 即 flag。

#### Web300 白吗? 全是套路

- 通过 SSRF 利用 file 协议读取源码。
- 发现可以直接 post 提交参数 sub 为 XSS payload，然后访问 `/admin/js.php` 获取 flag。

#### Web500 WebHook

- 审计 Python 源码，找到内置 KEY `ssctf`。
- 添加 GitHub 或 Coding 项目，每次调用 push 接口时会从项目获取源码并压缩。
- 通过 SSH 私钥下载 flag 项目，最终得到 flag `SSCTF{02d6d06ec9e35d11d1f421a400edbb06}`。

#### Web500 CloverSec Logos

- 在显示图片处找到注入点，直接布尔盲注。
- 访问 `index.php.swp` 和 `include.php.swp`，设置 cookie 参数以读取 flag 文件。

### 结语

以上是第三届 SSCTF 全国网络安全大赛线上赛的部分题目解答。更多详细信息和完整题解，请参考 [官方活动页面](http://bobao.360.cn/ctf/activity/421.html)。