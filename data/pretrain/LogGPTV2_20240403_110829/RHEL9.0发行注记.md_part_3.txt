# []{#distribution.html#_application_streams}应用程序流 {.title}
:::
用户空间组件的多个版本会以 Application
Streams（应用程序流）的形式提供，其更新频率会比核心操作系统软件包的更新频率更快。这为自定义
RHEL 提供了更大的灵活性，而不影响平台或特定部署的基本稳定性。
应用程序流以 RPM 格式提供，可以是一个模块（RPM
格式的一个扩展），软件集合（Software Collections,），或 Flatpaks。
每个 Application Stream 组件都有其特定的生命周期，可能和 RHEL 9
的生命周期相同或更短。有关 RHEL 生命周期信息，请查看 [Red Hat Enterprise
Linux
生命周期](https://access.redhat.com/support/policy/updates/errata){.link}。
RHEL 9 通过提供初始 Application Stream 版本（可以使用传统
`dnf install`{.literal} 命令）安装为 RPM 软件包改进了 Application
Streams 体验。
一些额外的 Application Stream 版本将作为模块发布，并在以后的 RHEL 9
次要发行本中带有较短的生命周期。建议查看 [Red Hat Enterprise Linux
Application Stream
Lifecycle](https://access.redhat.com/support/policy/updates/rhel-app-streams-life-cycle){.link}
定义中是否有任何内容生命周期注意事项。
模块是代表逻辑单元的软件包集合：
应用程序、语言堆栈、数据库或一组工具。这些软件包被一同构建、测试并发布。
需要快速更新的内容（例如备用编译器和容器工具）会在滚动流中提供，且不会并行提供替代版本。滚动流可以打包为
RPM 或模块。
有关 RHEL 9 中可用的 Application Streams
及其应用程序兼容性级别的详情，请查看
[软件包清单](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/package_manifest/index){.link}。应用程序兼容性等级在
[Red Hat Enterprise Linux 9
中解释：应用程序兼容性指南](https://access.redhat.com/articles/rhel9-abi-compatibility){.link}
文档。
:::
::: section
::: titlepage
# []{#distribution.html#package_management_with_yum_dnf}使用 YUM/DNF 管理软件包 {.title}
:::
在 Red Hat Enterprise Linux 9 中，使用 [**DNF**]{.strong} 确保软件安装
。红帽继续支持使用 `yum`{.literal} 术语，以便与以前的 RHEL
主版本保持一致。如果您键入 `dnf`{.literal} 而不是
`yum`{.literal}，则命令按预期运行，因为它们都是兼容性的别名。
虽然 RHEL 8 和 RHEL 9 基于 [**DNF**]{.strong}，但它们与 RHEL 7 中使用的
[**YUM**]{.strong} 兼容。
如需更多信息，请参阅使用 [DNF
工具管理软件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_software_with_the_dnf_tool){.link}。
:::
:::
[]{#New-features.html}
::: chapter
::: titlepage
# []{#New-features.html#New-features}第 4 章 新功能 {.title}
:::
这部分论述了 Red Hat Enterprise Linux 9.0 中的新功能及主要改进。
::: section
::: titlepage
# []{#New-features.html#enhancement_installer-and-image-creation}安装程序和镜像创建 {.title}
:::
[]{#New-features.html#BZ-1951709}
::: title
**Anaconda 支持通过用于 satellite 的 Kickstart 安装进行机器置备的
`rhsm`{.literal} 命令**
:::
在以前的版本中，机器置备依赖于一个自定义 `%post`{.literal} 脚本在 Red
Hat Satellite 上进行 Kickstart 安装。此 `%post`{.literal}
脚本可导入自定义 satellite
自签名证书，注册机器，附加订阅并安装驻留在存储库中的软件包。
在 RHEL 9 中，使用 `rhsm`{.literal} 命令添加了 satellite
支持来进行机器置备。现在，您可以使用这个 `rhsm`{.literal}
命令进行所有置备任务，如注册系统、附加 RHEL 订阅以及使用
`rhsm`{.literal} kickstart 命令从 satellite 实例安装。
(BZ#1951709)
[]{#New-features.html#BZ-1878583}
::: title
**在标准安装后禁用了许可证、系统和用户设置配置屏幕**
:::
在以前的版本中，RHEL 用户在 gnome-initial-setup 和登录屏幕前配置
Licensing、System(Subscription Manager)和 User
Settings。在这个版本中，初始设置页面已被默认禁用，以改进用户体验。
如果需要运行初始设置以便用户创建或许可证显示，请根据要求安装以下软件包。
::: orderedlist
1.  安装初始安装软件包。
    ``` screen
    # dnf install initial-setup initial-setup-gui
    ```
2.  在下次重启系统时启用初始设置。
    ``` screen
    # systemctl enable initial-setup
    ```
3.  重启系统以查看初始设置。
:::
对于 kickstart 安装，将 initial-setup-gui 添加到 packages 部分并启用
initial-setup 服务。
``` screen
firstboot --enable
%packages
@^graphical-server-environment
initial-setup-gui
%end
```
(BZ#1878583)
[]{#New-features.html#BZ-1978264}
::: title
**Anaconda 会自动为互动安装激活网络**
:::
在以前的版本中，当在没有 kickstart
或引导选项激活网络的情况下进行交互式安装时，用户必须在网络定制中手动激活网络。在这个版本中，Anaconda
会自动激活网络，无需用户访问网络 spoke 并手动激活它。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在这个版本中，不会更改 kickstart 安装的安装体验，并使用 `ip=`{.literal}
引导选项安装。
:::
([BZ#1978264](https://bugzilla.redhat.com/show_bug.cgi?id=1978264){.link})
[]{#New-features.html#BZ-2011448}
::: title
**镜像构建器现在支持文件系统配置**
:::
在这个版本中，您可以在蓝图中指定自定义文件系统配置，您可以使用所需的磁盘布局创建镜像。因此，通过具有非默认布局，您可以从安全基准中受益，与现有设置、性能以及防止磁盘不足错误的一致性。
要自定义蓝图中的文件系统配置，请设置以下自定义：
``` screen
[[customizations.filesystem]]
mountpoint = "MOUNTPOINT"
size = MINIMUM-PARTITION-SIZE
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在蓝图中添加文件系统自定义后，该文件系统将转换为 LVM 分区。
:::
([BZ#2011448](https://bugzilla.redhat.com/show_bug.cgi?id=2011448){.link})
[]{#New-features.html#BZ-1940653}
::: title
**使用 `锁定 root 帐户和`{.literal}
`允许使用密码进行 root SSH 登录`{.literal}的新选项**
:::
在 root 密码配置屏幕中添加了新的选项：
::: itemizedlist
-   锁定 root 帐户：使用这个选项锁定对计算机的 root 访问权限。
-   允许使用密码进行 root SSH 登录：使用这个选项启用基于密码的身份验证。
:::
要启用 `基于密码的身份验证`{.literal}，请在 kickstart
安装方法过程中将以下行添加到 kickstart 文件中：
``` screen
%post
echo "PermitRootLogin yes" > /etc/ssh/sshd_config.d/01-permitrootlogin.conf
%end
```
(BZ#1940653)
[]{#New-features.html#BZ-2019318}
::: title
**镜像构建器现在支持创建可引导安装程序镜像**
:::
在这个版本中，您可以使用镜像构建器创建由 `tarball`{.literal}
文件组成的可引导 ISO
镜像，其中包含一个根文件系统。因此，您可以使用可引导 ISO 镜像将
`tarball`{.literal} 文件系统安装到裸机系统中。
([BZ#2019318](https://bugzilla.redhat.com/show_bug.cgi?id=2019318){.link})
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_rhel-for-edge}RHEL for Edge {.title}
:::
[]{#New-features.html#BZ-2083036}
::: title
**RHEL for Edge 现在默认支持 `Greenboot`{.literal} 内置健康检查**
:::
在这个版本中，RHEL for Edge `Greenboot`{.literal} 包括带有
`watchdog`{.literal}
功能的内置健康检查，以确保在重启时硬件不会挂起或冻结。使用这个方法，您可以从以下功能中获益：
::: itemizedlist
-   它使 `watchdogs`{.literal} 硬件用户可以轻松采用内置健康检查
-   组默认健康检查，为内置操作系统组件提供值
-   `watchdog`{.literal} 现在作为默认预设，可以轻松地启用或禁用此功能
-   基于已可用的健康检查，创建自定义健康检查。
:::
([BZ#2083036](https://bugzilla.redhat.com/show_bug.cgi?id=2083036){.link})
[]{#New-features.html#BZ-1961324}
::: title
**RHEL 9 提供 `rpm-ostree`{.literal} v2022.2**
:::
RHEL 9 带有 `rpm-ostree`{.literal} 版本
v2022.2，它提供多个程序错误修复和增强。主要变更包括：
::: itemizedlist
-   现在，可以使用新的 `--append-if-missing`{.literal} 和
    `--delete-if-present`{.literal} kargs 标志以幂等方式更新内核参数。
-   现在，所有存储库查询都默认禁用 DNF 的 `Count Me`{.literal}
    功能，且只被对应的 `rpm-ostree-countme.timer`{.literal} 和
    `rpm-ostree-countme.service`{.literal} 单元触发。请参阅
    [countme](https://coreos.github.io/rpm-ostree/countme/){.link}。
-   后处理逻辑现在可以处理 `user.ima`{.literal} IMA 扩展属性。找到
    `xattr`{.literal} 扩展属性时，系统会自动将它转换为最终
    `OSTree`{.literal} 软件包内容的 `security.ima`{.literal}。
-   `treefile`{.literal} 文件中有一个新的 `repo-packages`{.literal}
    字段。您可以使用它来将一组软件包固定到特定的软件仓库。
:::
([BZ#1961324](https://bugzilla.redhat.com/show_bug.cgi?id=1961324){.link})
[]{#New-features.html#BZ-1961254}
::: title
**RHEL 9 提供 `OSTree`{.literal} v2021.2**
:::
RHEL 9 与 `OSTree`{.literal} 软件包版本 v2021.2
一起发布，提供多个程序错误修复和增强。主要变更包括：
::: itemizedlist
-   用于编写文件的新 API（在新的 ostree-rs-ext 项目中使用），以改进
    tarball 中的导入。
-   `rofiles-fuse`{.literal} 命令现在处理 `xattrs`{.literal}
    扩展属性。备注：`rofiles-fuse`{.literal} 被视为已弃用，请参阅
    [#2281](https://github.com/ostreedev/ostree/issues/2281){.link}。
-   对 `introspection`{.literal} API 和测试的改进。
:::
([BZ#1961254](https://bugzilla.redhat.com/show_bug.cgi?id=1961254){.link})
[]{#New-features.html#BZ-2082306}
::: title
**`rpm-ostree rebase`{.literal} 工具支持从 RHEL 8 升级到 RHEL 9**
:::