当你开启更多路由器，这个 peer 成员列表会更长。当你新开一个路由器时，要指定前一个宿主机的 IP 地址，请注意不是第一个宿主机的 IP 地址（LCTT 译注：链状结构）。
现在你已经有了一个 weave 网络了，它由位于不同宿主机的 weave 路由器组成。
### 把不同宿主机上的容器互联起来
接下来要做的就是在不同宿主机上开启 Docker 容器，并使用虚拟网络将它们互联起来。
假设我们创建一个私有网络 10.0.0.0/24 来互联 Docker 容器，并为这些容器随机分配 IP 地址。
如果你想新建一个能加入 weave 网络的容器，你就需要使用 weave 命令来创建，而不是 docker 命令。原因是 weave 命令内部会调用 docker 命令来新建容器然后为它设置网络。
下面的命令是在宿主机 hostA 上建立一个 Ubuntu 容器，然后将它放到 10.0.0.0/24 网络中，分配的 IP 地址为 10.0.0.1：
```
hostA:~$ sudo weave run 10.0.0.1/24 -t -i ubuntu 
```
成功运行后，终端会显示出容器的 ID 号。你可以使用这个 ID 来访问这个容器：
```
hostA:~$ docker attach  
```
在宿主机 hostB 上，也创建一个 Ubuntu 容器，IP 地址为 10.0.0.2：
```
hostB:~$ sudo weave run 10.0.0.2/24 -t -i ubuntu 
```
访问下这个容器的控制台：
```
hostB:~$ docker attach  
```
这两个容器能够互相 ping 通，你可以通过容器的控制台检查一下。
![](/data/attachment/album/201506/02/152338dvmpc44jc477mdgn.jpg)
如果你检查一下每个容器的网络配置，你会发现有一块名为“ethwe”的网卡，你分配给容器的 IP 地址出现在它们那里（比如这里分别是 10.0.0.1 和 10.0.0.2）。
![](/data/attachment/album/201506/02/152342l3m9bbhmqq88gz8v.jpg)
### Weave 的其他高级用法
weave 提供了一些非常巧妙的特性，我在这里作下简单的介绍。
#### 应用分离
使用 weave，你可以创建多个虚拟网络，并为每个网络设置不同的应用。比如你可以为一群容器创建 10.0.0.0/24 网络，为另一群容器创建 10.10.0.0/24 网络，weave 会自动帮你维护这些网络，并将这两个网络互相隔离。另外，你可以灵活地将一个容器从一个网络移到另一个网络而不需要重启容器。举个例子：
首先开启一个容器，运行在 10.0.0.0/24 网络上：
```
$ sudo weave run 10.0.0.2/24 -t -i ubuntu
```
然后让它脱离这个网络：
```
$ sudo weave detach 10.0.0.2/24 
```
最后将它加入到 10.10.0.0/24 网络中：
```
$ sudo weave attach 10.10.0.2/24  
```
![](/data/attachment/album/201506/02/152349ynem6o64dkzfb4ob.jpg)
现在这个容器可以与 10.10.0.0/24 网络上的其它容器进行通信了。这在当你创建一个容器而网络信息还不确定时就很有帮助了。
#### 将 weave 网络与宿主机网络整合起来
有时候你想让虚拟网络中的容器能访问物理主机的网络。或者相反，宿主机需要访问容器。为满足这个功能，weave 允许虚拟网络与宿主机网络整合。
举个例子，在宿主机 hostA 上一个容器运行在 10.0.0.0/24 中，运行使用下面的命令：
```
hostA:~$ sudo weave expose 10.0.0.100/24 
```
这个命令把 IP 地址 10.0.0.100 分配给宿主机 hostA，这样一来宿主机 hostA 也连到了 10.0.0.0/24 网络上了。显然，你在为宿主机选择 IP 地址的时候，需要选一个没有被其他容器使用的地址。
现在 hostA 就可以访问 10.0.0.0/24 上的所有容器了，不管这些容器是否位于 hostA 上。好巧妙的设定啊，32 个赞！
### 总结
如你所见，weave 是一个很有用的 docker 网络配置工具。这个教程只是它[强悍功能](http://zettio.github.io/weave/features.html)的冰山一角。如果你想进一步玩玩，你可以试试它的以下功能：多跳路由功能，这个在 multi-cloud 环境（LCTT 译注：多云，企业使用多个不同的云服务提供商的产品，比如 IaaS 和 SaaS，来承载不同的业务）下还是很有用的；动态重路由功能是一个很巧妙的容错技术；或者它的分布式 DNS 服务，它允许你为你的容器命名。如果你决定使用这个好东西，欢迎分享你的使用心得。
---
via: 
作者：[Dan Nanni](http://xmodulo.com/author/nanni) 译者：[bazz2](https://github.com/bazz2) 校对：[校对者ID](https://github.com/%E6%A0%A1%E5%AF%B9%E8%80%85ID)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出