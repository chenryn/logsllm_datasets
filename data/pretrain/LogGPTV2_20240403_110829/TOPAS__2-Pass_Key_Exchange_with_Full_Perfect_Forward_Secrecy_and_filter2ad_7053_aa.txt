title:TOPAS: 2-Pass Key Exchange with Full Perfect Forward Secrecy and
Optimal Communication Complexity
author:Sven Sch&quot;age
TOPAS
2-Pass Key Exchange with Full Perfect Forward Secrecy and Optimal
Communication Complexity
Sven Schäge
Ruhr-Universität Bochum
Germany
PI:EMAIL
ABSTRACT
We present TOPAS (Transmission Optimal Protocol with Active
Security), the ﬁrst key agreement protocol with optimal commu-
nication complexity that provides security against fully active ad-
versaries. This solves a longstanding open problem. The size
of the protocol messages (≈ 160 bits for 80-bit security) and the
computational costs to generate them are comparable to the basic
Difﬁe-Hellman protocol over elliptic curves (which is well-known
to only provide security against passive adversaries). Session keys
are indistinguishable from random keys – even under reﬂection and
key compromise impersonation attacks – under generalizations of
the Computational Bilinear Difﬁe-Hellman Inversion assumption.
What makes TOPAS stand out is that it also features a security
proof of full perfect forward secrecy (PFS), where the attacker can
actively modify messages sent to or from the test-session. The
proof of full PFS relies on two new extraction-based security as-
sumptions. It is well-known that existing implicitly-authenticated
2-message protocols like HMQV cannot achieve this strong form of
(full) security against active attackers (Krawczyk, Crypto’05). We
also present a variant of our protocol, TOPAS+, which, under the
Strong Difﬁe-Hellman assumption, provides better computational
efﬁciency in the key derivation phase.
1.
INTRODUCTION
Besides encryption systems and digital signatures, key exchange
protocols are among the most important building blocks of cryp-
tography. It is well-known that the famous Difﬁe-Hellman (DH)
protocol [14] only provides security against passive attackers. This
is why since its introduction in 1976, many works focused on up-
grading the DH protocol to also shield it against active attacks while
trying to keep the overall efﬁciency as close as possible to the orig-
inal protocol. An important step in that direction are authenticated
DH-based protocols like MQV [21] and its successor HMQV [20].
As in the basic unauthenticated DH protocol, each message con-
sists of only a single group element and messages can be sent in
any order. An important feature of these DH-based protocols is
that no long-term secret is required when computing the protocol
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813683.
messages; it is only when the session key is derived that the long-
term secrets come into play. This generally makes the computa-
tion of protocol messages very efﬁcient. The class of protocols
that compute messages in this way (without the use of the long-
term secrets) are called “implicitly-authenticated” protocols [20].
Unfortunately, in 2005 Krawczyk presented an attack that shows
that implicitly-authenticated protocols inherently cannot provide
forward secrecy against active attackers [20] (see Appendix D for
a summary). Only if the attacker remains passive with respect to
the test-session, implicitly-authenticated protocols can provide per-
fect forward secrecy. This passive form of PFS is commonly called
weak PFS. We stress that weak forward secrecy is not a satisfying
deﬁnition of security in practice (see Appendix B for a brief ex-
ample). Ultimately, there is no reason to assume that an otherwise
unrestricted adversary (with respect to network control) may just
refrain from using its full power. Arguably, weak forward-secrecy
has rather been deﬁned to show what protocols like HMQV can
achieve. This is why Krawczyk proposes an extension of HMQV,
termed HMQV-C, which comprises three message ﬂows (while the
second ﬂow now also consists of more than 160 bits) and adds ex-
plicit key conﬁrmation to the protocol. This guarantees full-PFS
security but decreases the protocol’s overall efﬁciency.
We stress that (full) perfect forward secrecy is an important se-
curity property for key exchange protocols and that it is naturally
well-supported by the original, unauthenticated Difﬁe-Hellman pro-
tocol. As pointed out in [18], the support of PFS is an important
advantage over public-key based session key transport and the main
reason for the prevalence of DH-like protocols in protocol suites
like SSH, IPsec, and TLS. We note that although RSA-based key
transport is still the most common TLS variant in use, Google has
recently announced that it will push the use of TLS with ephemeral
Difﬁe-Hellman key exchange exactly because of its guarantee of
perfect forward secrecy [2]. Moreover, it is clear that the next ver-
sion of TLS will not support RSA-based key establishment partly
because of its lack of forward secrecy [24]. The only two-message
protocol we are aware of that provides truly satisfactory security
guarantees against active attackers while maintaining high efﬁcien-
cy is the modiﬁed Okamoto-Tanaka (mOT) protocol by Gennaro,
Krawczyk, and Rabin (GKR) [18]. Basically, mOT is an enhanced
variant of the classical Okamoto-Tanaka protocol [22] from 1989
that introduces additional hashing operations to protect it against
several practical attacks and allows a rigorous proof of security.1
Like the original Okamoto-Tanaka protocol, mOT is deﬁned in
groups of hidden order and its security relies on the RSA assump-
1In contrast to the original Okamoto-Tanaka protocol, all identities
are hashed before usage and the session key is hashed in the ﬁnal
step.
1224Alice (A)
skA = (H(idA))1/z
x $← Zp
b ∈ G1?
Bob (B)
skB = (H(idB))1/z
y $← Zp
a ∈ G1?
a = gx
b = gy
1 skA
1skB
kA = (e (b, gz
k(cid:48)
A = (e(b, hz
KA = H(cid:48)(kA, k(cid:48)
2) /e(H(idB), g2))x
2)/e(H(idB), h2))x
A, idA, idB, a, b)
kB = (e (a, gz
k(cid:48)
B = (e(a, hz
KB = H(cid:48)(kB, k(cid:48)
2) /e(H(idA), g2))y
2)/e(H(idA), h2))y
B, idA, idB, a, b)
2 , hz
Figure 1: Overview of TOPAS. The key generation center main-
tains public parameters mpk containing g1, g2, h2, gz
2, prime p,
a description of the pairing e, and descriptions of two hash func-
tions H : {0, 1}∗ → G1 and H(cid:48) : {0, 1}∗ → {0, 1}∗. These pa-
rameters are available to all parties. The master secret msk consists
of z and is used by the key generation center to derive the user se-
cret keys as ski = (H(idi))1/z. KA (resp. KB) is the session key
computed by Alice (Bob). The pairing operations in the denomina-
tor are message-independent and can be pre-computed (in times of
low workload) and stored for later use. If Alice also pre-computes
2)x and e(H(idB), g2)x, e(H(idB), h2)x
a = gx
the computation of k, k(cid:48) will require two pairing operations and two
divisions in GT per key exchange. Messages can be sent in any or-
der. Without loss of generality we assume that lexically idA ≤ idB.
1 skA, (gz
2 )x, (hz
tion. Unfortunately, group elements consists of at least 1024 bits so
that the overall number of transmitted bits for the two messages is
2048 bits which is much more than what is possible with the basic
DH protocol and protocols like HMQV when deﬁned over prime
order elliptic curves. However, the protocol has very good com-
putational efﬁciency. It is a longstanding open problem to design
a protocol with full security (including full PFS) against active at-
tackers and optimal communication complexity, i.e. where each
message only consists of about 160 bits.2 This is of course optimal,
since the birthday bound requires messages to be at least 160 bits
for 80 bit security.
Contribution
As our main result we present TOPAS (short for Transmission Op-
timal Protocol with Active Security), the ﬁrst two-message key ex-
change protocol that provides full perfect forward secrecy and op-
timal communication complexity (Figure 1). To achieve this, the
design of TOPAS relies on new ideas and techniques that are dif-
ferent from all existing two message protocols that we are aware
of. Key indistinguishability, security against key-compromise im-
personation (KCI) attacks and reﬂection attacks are proven under
generalizations of the Computational Bilinear Difﬁe-Hellman In-
version assumption. At the same time, TOPAS is weakly PFS
secure under the Computational Bilinear Difﬁe-Hellman assump-
tion. In Appendix C, we show that all our assumptions are con-
crete instantiations of the Uber-assumption introduced by Boyen in
2008 and therefore inherit its security in the generic bilinear group
model [8]. We stress that for none of our assumptions does the
2Of course, it is necessary that the protocol consists of at least two
messages to provide security against active attacks.
In any one-
message protocol the receiver’s computation of the session key can
only depend on its knowledge of the secret key (as it cannot feed
any session-speciﬁc random nonce or ephemeral secrets into the
key derivation process). Therefore corrupting the receiver will al-
ways reveal the session key (even after the session completes) and
PFS is not achievable.
input size grow with the number of adversarial queries (i.e.
they
do not constitute so-called q-type assumptions). Full-PFS secu-
rity is shown under two new knowledge-type (or extraction-type)
assumptions that are related to the difﬁculty of inverting bilinear
pairings. (Traditional knowledge-type assumptions are usually re-
lated to the difﬁculty of inverting the modular exponentiation func-
tion, i.e. computing discrete logarithms.) Our protocol is deﬁned
over asymmetric (Type-3) bilinear groups and all our proofs rely
on random oracles. Remarkably, for 80 bit security, each message
consists of only about 160 bits, resulting in the ﬁrst key exchange
protocol achieving full-PFS with an overall communication com-
plexity of only 320 bits. Moreover, our protocol is identity-based
what allows two parties to securely agree on a common session
key without a prior exchange of their certiﬁcates. With respect to
computational efﬁciency, we note that all protocol messages can
be computed very efﬁciently, virtually as efﬁcient as in the orig-
inal DH key exchange. In particular, each message consists of a
single ephemeral DH public key that is additionally multiplied by
the user’s secret long-term key. No additional exponentiation is
required. Thus the computational overhead when compared to pro-
tocols like HMQV is minimal. However, session key derivation in
our scheme is comparably slow. This is due to the application of
a bilinear pairing in the key derivation process. We note that half
of the required pairing operations must only be performed once per
communication partner as they only depend on the identity of the
communication partner. Finally, we remark that the size of the se-
cret keys derived by the key generation center (KGC) is also only
160 bits and thus optimal as well.
We also present, TOPAS+ (Figure 2), a slightly modiﬁed ver-
sion of TOPAS where the security proofs additionally rely on a
variant of the Strong Difﬁe-Hellman assumption [1]. Basically,
we require that our generalizations of the Computational Bilinear
Difﬁe-Hellman Inversion assumption remain valid even when the
adversary is also given access to an oracle that checks, given input
k and k, whether kz2
= k for z unknown to the adversary. The
resulting protocol requires less public parameters and only half the
number of pairings required to compute the session key. When pre-
computing message-independent values ofﬂine, key derivation only
requires a single pairing operation online. The cost for this modiﬁ-
cation is that we have to rely on interactive security assumptions
even when proving key indistinguishability and security against
KCI and reﬂection attacks.
As mentioned before, the identity-based properties of our pro-
tocols avoid that additional information like certiﬁcates have to be
exchanged between unknown communication partners, in contrast
to PKI-based protocols like for example HMQV. This guarantees
that in TOPAS and TOPAS+ the size of each messages does in-
deed never exceed 160 bits. Also the time for key derivation is
not slowed down by the additional veriﬁcation of the received cer-
tiﬁcate. We also remark that although message computation in-
volves the usage of the secret key, all our protocols provide the
strong form of deniability deﬁned in [13]. This means that Bob or
any other party cannot convince any third party that it once talked
to Alice (given that there are no additional side information avail-
able to Bob that prove this fact in another way). This is a valuable
privacy feature of our protocols that make them suitable for im-
plementing “off-the-record” communication over (insecure) digital
networks. We remark that, as with forward secrecy, the basic unau-
thenticated Difﬁe-Hellman protocol naturally supports this strong
form of deniability (simply because the session key entirely relies
only on ephemeral parameters). On the other hand, protocols based
on digital signatures (like signed Difﬁe-Hellman) do not provide
such deniability features.
1225Finally, we note that our proofs of TOPAS and TOPAS+ heav-
ily exploit the programmability of the random oracle model. Using
a separation technique that was introduced by Fischlin and Fleis-
chhacker [16] and applied to identity-based non-interactive key ex-
change by Chen, Huang, and Zhang [11] we can show that, in some
sense, the programmability of the random oracle model is actually
necessary for our reductions. More concretely, under a one-more-
type security assumption, the programmability of the random ora-
cle model is necessary for all security proofs that call the adversary
once and in a black-box manner, which is the most common type of
reduction in cryptography. Unfortunately, the results of [11] cannot
directly by applied to TOPAS and TOPAS+ such that we have to
rely on new ideas. Due to space limitations we postpone the formal
statement and proof of this result to the full version of this paper.
We admit that the feature of full PFS security comes at the cost
of relying on (highly) non-standard security assumptions. How-
ever, we stress that the existing two-message key exchange proto-
cols with 160 bit messages are implicitly-authenticated and there-
fore cannot provide full PFS under any security assumption.
Protocol
id-based
(no cert.)
message
bit-size
pairings
in key
derivat.
on./off.
HMQV [20]
no
mOT [18]
TOPAS
yes
yes
160
(+ cert.)3
1024
–
–
160