### 优化后的文本

#### HDFS 配置
在 `writer.hdfs.filesystem` 中，`hdfs://master:9000/` 是 Hadoop 分布式文件系统的地址。Chukwa 将使用该地址来存储数据。根据实际情况，可以修改该地址。

以下属性设置用于指定 Chukwa 数据的存储位置：
```xml
<property>
    <name>chukwaCollector.outputDir</name>
    <value>/chukwa/logs/</value>
    <description>Chukwa 数据存储目录</description>
</property>
```
默认情况下，Collector 监听 8080 端口，但此端口可以进行修改。Agent 会向该端口发送消息。
```xml
<property>
    <name>chukwaCollector.http.port</name>
    <value>8080</value>
    <description>Collector 监听的 HTTP 端口号</description>
</property>
```

#### Agent 配置
Agent 的配置文件位于 `$CHUKWA_CONF_DIR/agents`，其格式与 `$CHUKWA_CONF_DIR/collectors` 类似，每行代表一台运行 Agent 的机器。例如：
```
master
slave1
slave2
```
此外，`$CHUKWA_CONF_DIR/chukwa-Agent-conf.xml` 文件中维护了代理的基本配置信息，其中最重要的属性是集群名称，用于标识被监控的节点。每个收集到的数据块中都会包含这个值以区分不同的集群。
```xml
<property>
    <name>chukwaAgent.tags</name>
    <value>cluster="chukwa"</value>
    <description>该 Agent 所属的集群名称</description>
</property>
```
另一个可选属性是 `chukwaAgent.checkpoint.dir`，该目录用于 Chukwa 运行 Adaptor 的定期检查点。此目录必须是本地且不可共享的。

#### 使用 Pig 进行数据分析
Pig 可用于数据分析，因此需要设置环境变量。首先确保 Pig 已正确安装，然后将 Hadoop 和 HBase 的配置文件目录添加到 Pig 的 classpath 中：
```bash
export PIG_CLASSPATH=$HADOOP_CONF_DIR:$HBASE_CONF_DIR
```
接下来创建 HBASE_CONF_DIR 的 JAR 文件：
```bash
jar cf $CHUKWA_HOME/hbase-env.jar $HBASE_CONF_DIR
```
创建周期性运行的分析脚本作业：
```bash
pig -Dpig.additional.jars=${HBASE_HOME}/hbase-0.90.4.jar:${ZOOKEEPER_HOME}/zookeeper-3.3.2.jar:${PIG_HOME}/pig-0.10.0.jar:${CHUKWA_HOME}/hbase-env.jar ${CHUKWA_HOME}/share/chukwa/script/pig/ClusterSummary.pig
```
其中，`hbase-env.jar` 是上一步生成的 JAR 文件。

#### Chukwa 的运行
在启动 Chukwa 之前，请先启动 Hadoop 和 HBase。之后，分别启动 Collector 和 Agent 进程。

**Collector 进程的启动**
在单个节点上运行 Collector 进程可以使用 `bin/chukwa collector` 命令：
```bash
chukwa collector
```
Collector 成功启动后，将监听 8080 端口。Collector 也可以作为守护进程运行，使用脚本命令 `sbin/start-collectors.sh` 来启动。关闭 Collector 进程可以使用 `sbin/stop-collectors.sh` 或 `bin/chukwa collector stop` 命令。

**Agent 进程的启动**
在单个节点上启动 Agent 进程可以使用 `bin/chukwa agent` 命令。另外，也可以通过 `sbin/start-agents.sh` 脚本来启动所有配置文件中列出的机器上的 Agent 进程。

**HICC 进程的启动**
启动 HICC 进程可以使用命令 `$CHUKWA_HOME/bin/chukwa hicc`。成功启动后，在 Web 浏览器中输入 `http://<Server>:<port>/hicc` 即可看到 Chukwa 的可视化界面，默认端口为 4080。

#### 启动 Chukwa 的过程
1. 启动 Hadoop 和 HBase。
2. 启动 Chukwa：`$CHUKWA_HOME/sbin/start-chukwa.sh`。

#### Chukwa 数据流处理
Chukwa 的原始日志收集和聚集流程基于 HDFS。以下是 Chukwa 文件在 HDFS 中的存储流程：

1. Collector 将数据块写入 `logs/` 目录下的 `*.chukwa` 文件中，直到达到块大小（64MB）或超时。随后，Collector 关闭块并将 `logs/*.chukwa` 改为 `logs/*.done`。
2. DemuxManager 每 20 秒检查一次 `*.done` 文件。如果存在这些文件，则将其移动到 `demuxProcessing/mrInput` 目录，并执行 MapReduce 作业。
3. PostProcessManager 定期执行聚合、排序和去重作业，并将结果文件移动到相应的目录。
4. HourlyChukwaRecordRolling 每小时运行一次 MapReduce 作业，将每小时的日志数据划分为 5 分钟间隔的日志。
5. DailyChukwaRecordRolling 在凌晨 1:30 运行 MapReduce 作业，将以小时为单位的日志归类到以日为单位的日志中。
6. ChukwaArchiveManager 大约每半小时使用 MapReduce 作业对 `dataSinkArchives` 中的数据进行聚合和移除。
7. 需要定期清理的目录包括 `finalArchives/[yyyyMMdd]/*` 和 `repos/[clusterName]/[dataType]/[yyyyMMdd]/*.evt`。

#### Chukwa 与其他监控系统比较
Chukwa 与其他监控系统相比具有以下特点：

- **Splunk**：一个商业化的日志收集和索引分析系统，依赖于集中存储和收集架构。
- **Scribe**：一个开源的日志收集系统，其元数据模型比 Chukwa 简单，但灵活性较差，且没有端到端的传输保证。
- **Artemis**：由 Microsoft 设计，专用于调试大规模 Dryad 集群，仅在本地处理日志，不适合长期可靠的存储。
- **Ganglia**：擅长实时故障检测，而 Chukwa 有分钟级的延迟，但能处理海量数据并提供详细的诊断信息。

#### 本章小结
Chukwa 作为 Hadoop 的子项目，不仅能帮助处理 Hadoop 日志，还能利用 MapReduce 对日志进行分析。通过 Chukwa，用户可以清晰地了解系统运行状态、作业状态及 HDFS 文件存储状态。Chukwa 利用分布在各节点上的 Agent 收集信息，并通过 HTTP Post 汇总到 Collector，再由 Collector 处理后存储到 HDFS 中。之后，这些数据经过 Archiving 和 Demux 处理，最终通过 HICC 展示给用户。

更多关于 Chukwa 的信息，请访问其官网：[http://incubator.apache.org/chukwa/](http://incubator.apache.org/chukwa/)。

#### 参考资料
- [1] J. Tan, X. Pan, S. Kavulya, R. Gandhi, and P. Narasimhan. SALSA: Analyzing Logs as StAte Machines. In First USENIX Workshop on Analysis of System Logs (WASL'08), San Diego, CA, December 2008.
- [2] J. Tan, X. Pan, S. Kavulya, R. Gandhi, and P. Narasimhan. Mochi: Visual Log-Analysis Based Tools for Debugging Hadoop. In Workshop on Hot Topics in Cloud Computing (HotCloud'09), San Diego, CA, June 2009.
- [3] http://management.silicon.com/itpro/0,39024675,39157789,00.html
- [4] Burns, Bryan; Killion, Dave; Beauchesne, Nicolas; Moret, Eric; Sobrier, Julien; Lynn, Michael; Markham, Eric; Iezzoni, Chris; Biondi, Philippe; Granick, Jennifer; W. Manzuik, Steve; Guersch, Paul. Security Power Tools. O'Reilly Media, Inc. ISBN 0-596-00963-1.
- [5] Schubert, Max; Bennett, Derrick; Gines, Jonathan; Hay, Andrew; Strand, John. Nagios 3 Enterprise Network Monitoring: Including Plug-Ins and Hardware Devices. Syngress. ISBN 1-59749-267-1.
- [6] Splunk Inc. IT Search for Log Management, Operations, Security and Compliance. http://www.splunk.com/, 2009.
- [7] https://github.com/facebook/scribe