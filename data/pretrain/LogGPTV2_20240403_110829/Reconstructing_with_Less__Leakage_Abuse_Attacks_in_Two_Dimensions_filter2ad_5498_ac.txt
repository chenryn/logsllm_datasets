𝑦1)(𝑁0 + 1 − max
𝑧∈𝑆
𝑧0)(𝑁1 + 1 − max
𝑤∈𝑆
𝑤1).
3 Order and Equivalent Databases
Before developing our attacks, we present our results on the infor-
mation-theoretic limitations of order reconstruction.
3.1 Equivalent Databases
Definition 3.1. Databases D and D′ are equivalent with respect
to the response multiset if RM(D) = RM(D′) and equivalent
with respect to the response set if RS(D) = RS(D′).
As shown in [13], given some database D we can generate a
database D′ that is equivalent with respect to the response multiset
by rotating/reflecting D according to the symmetries of the square
and by independently flipping the reflectable components across
the main diagonal.
Proposition 1. [13] Let D be a two-dimensional database that
contains components 𝐶1 and 𝐶2. Let D′ be a database such that
|D′| = |D|, which contains 𝐶1 and 𝐶′
2, where each point 𝑝 ∈ 𝐶′
2
is the reflection of some point 𝑝′ ∈ 𝐶2 along the diagonal. Then
u2u4u1u3u5u6u7u8Session 7C: Database and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2246(a) Illustration of Definition 2.3 and Proposition 1.
𝐶1 and 𝐶2 are components of D. Flipping 𝐶2 along
the diagonal yields an equivalent database with
respect to the response multi-set.
(b) Illustration of Definition 3.2 and Proposition 2.
Points 𝑝 and 𝑞 are an antipodal pair. Each remain-
ing point is in 𝐿 or 𝑅. Replacing 𝑝 with 𝑝′ ∈ 𝑃 and
𝑞 with 𝑞′ ∈ 𝑄 gives an equivalent database with
respect to the response set.
(c) Illustration of Definition 3.3 and Proposition 3.
Points 𝑝 and 𝑞 are a close pair. There are no points
in regions 𝑋1, 𝑋2 or 𝑋3. Replacing 𝑞 with any 𝑞′ ∈
𝑄 yields an equivalent database with respect to
the response set.
Figure 3: Examples of transformations that yield equivalent databases with respect to the response set (Definition 3.1).
databases D and D′ are equivalent with respect to the response set,
i.e., RS(D) = RS(D′).
Note that if D and D′ are equivalent with respect to the response
multiset, then they are equivalent with respect to the response set.
However, the converse is not necessarily true. We show in Proposi-
tions 2 and 3 (Figure 3) that there are two additional symmetries
that produce equivalent databases with respect to the response set.
Definition 3.2. A pair of points (𝑝, 𝑞) of a database D is an antipo-
dal pair if for every point 𝑟 ∈ D − {𝑝, 𝑞} we have (1) 𝑞1  max(𝑝0, 𝑞0). See Figure 3b.
Definition 3.3. A pair (𝑝, 𝑞) of points of a database D are said to
be a close pair if 𝑞 minimally dominates 𝑝, and there exists no point
𝑟 ∈ D − {𝑝, 𝑞} such that 𝑟 anti-dominates 𝑝 or 𝑟 is anti-dominated
by 𝑞 or 𝑟 is between 𝑝 and 𝑞. See Figure 3c.
The following proposition, illustrated in Figure 3b, shows that
one cannot infer the horizontal ordering of an antipodal pair from
the response set.
Proposition 2. Let D be a database from domain D that contains
an antipodal pair (𝑝, 𝑞). Let 𝑉 be the widest vertical strip of points of
D that contains 𝑝 and 𝑞, and let 𝑃 and 𝑄 be the tallest horizontal strips
of 𝑉 containing 𝑝 and 𝑞, respectively, but no other point of D. Let D′ be
the database obtained from D by replacing 𝑝 with another point, 𝑝′, of
𝑃 and 𝑞 with another point, 𝑞′, of 𝑄. We have that databases D and D′
are equivalent with respect to the response set, i.e., RS(D) = RS(D′).
[Proof in Appendix C]
By Proposition 2, the two points of the antipodal pair (𝑝, 𝑞) of
D and of the corresponding antipodal pair (𝑝′, 𝑞′) of D′ can be
ordered, reverse ordered, or collinear in the horizontal dimension
and these three orderings cannot be distinguished using RS(D).
Proposition 3. Let D be a database from domain D that has a
close pair (𝑝, 𝑞). Let D′ be the database obtained from D by replacing 𝑞
1 ≤ 𝑞1. Then D and D′
with any point 𝑞′ such that 𝑞′
are equivalent with respect to the response set, i.e., RS(D) = RS(D′).
[Proof in Appendix C]
0 = 𝑞0 and 𝑝1 ≤ 𝑞′
Definition 3.4. Let D be a database and let 𝐺 and 𝐺′ be the dom-
inance and anti-dominance graphs of D, respectively. We define
Eo(D) as the set of all possible point orderings of databases equiva-
lent to D with respect to response set, RS(D).
Combining Propositions 1, 2 and 3, we characterize the information-
theoretic limitations of order reconstruction.
Figure 4: Example of a
graph and
dominance
associated
its
canoni-
cal
antichain partition
comprising
antichains
𝐴0 = {𝑠}, 𝐴1 = {𝑢1, · · · 𝑢6},
and 𝐴2 = {𝑣1, · · · 𝑣4}.
Theorem 3.5. Let D be a two-dimensional database. The set of
point orderings Eo(D) can be obtained from the dominance graph 𝐺,
the anti-dominance graph 𝐺′, the antipodal pair (if it exists), and the
set of close pairs of D by means of the following transformations:
(1) Flipping the direction of 𝐺 and/or a subset of components of 𝐺′
according to Proposition 1.
(2) If D contains an antipodal pair, add or remove one or two edges
from 𝐺 or 𝐺′ to make the pair collinear or switch their relationship
from strict dominance to strict anti-dominance or vice versa.
(3) For each close pair in D, add or remove one or two edges from 𝐺
or 𝐺′ to make them collinear or put them in a strict dominance
relationship.
We prove Theorem 3.5 in Section 4.1. The equivalent configura-
tions of Propositions 2 and 3 arise only with respect to the response
set. The multiplicity information from the response multiset pro-
vided by the search pattern resolves them. Indeed, Theorem 3.5
adds transformations (2) and (3) to transformation (1) given in [13].
3.2 Chains and Antichains
Our order reconstruction algorithm uses the concepts of chains
and antichains of the dominance and anti-dominance relations for
points in the plane [14, 46]. A set of points 𝑆 ⊆ D is a chain if any
two points 𝑥, 𝑤 ∈ 𝑆 are in a dominance relationship i.e. 𝑥 ⪯ 𝑤 or
𝑤 ⪯ 𝑥. A subset of points 𝐴 ⊆ D is an antichain if for any two
points 𝑥, 𝑤 ∈ 𝐴 neither 𝑥 ⪯ 𝑤 nor 𝑤 ⪯ 𝑥. Let D ⊆ D be a set of
points. The height of a point 𝑥 ∈ D is the length of the longest
chain in D with 𝑥 as the maximal element. Note that two points of
the same height cannot have a dominance relation. Thus, the set
of all points in D with the same height yields a partition A of D
into antichains, namely the canonical antichain partition. We
denote the canonical antichain partition by (𝐴0, 𝐴1, . . . , 𝐴𝐿) where
𝐴𝑖 is the set of points at height 𝑖.
Let D be a database and let (𝐺, 𝐺′) be the dominance and anti-
dominance graphs of D. Now note that the paths in the dominance
graph correspond to chains in D. Formally, if (𝑢1, 𝑢2, . . . , 𝑢ℓ) is a
′RQPLpp′qq′q′X2pX1X3qQSession 7C: Database and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2247path of record IDs in 𝐺, then D[𝑢1] ⪯ D[𝑢2] ⪯ · · · ⪯ D[𝑢ℓ] and
{D[𝑢1], D[𝑢2], . . . , D[𝑢ℓ]} forms a chain in D. By definition the
edges of 𝐺 represent the minimal dominance relations of the points
in D and thus determining the length of a longest possible path
in 𝐺 from a source to 𝑢 ∈ [𝑅] is equivalent to determining the
height of point D[𝑢] in the database. This gives us a nice way
of partitioning the IDs such that the partition corresponds to the
canonical antichain partition. Formally, if 𝑠 is a source of 𝐺 then
D[𝑠] has height 0. And if 𝑆𝑖 ⊆ [𝑅] is the set of IDs in 𝐺 that have a
maximum distance of 𝑖 from any sink, then the canonical antichain
partition of D is given by 𝐴𝑖 = {D[𝑎] : 𝑎 ∈ 𝑆𝑖}.
For an example, see Figure 4. Since 𝐺 is acyclic we can compute
these longest paths efficiently. For convenience we may use 𝐴𝑖
to instead refer to the IDs of points within each partition of the
canonical antichain.
These observations are crucial in the design of our OR algorithm.
E.g., we construct the dominance graph starting at the IDs of points
with height 0. We then compute the partition on IDs that corre-
spond to the canonical antichain partition and use this partition to
construct the anti-dominance graph.
4 Overview of Order Reconstruction
A high-level intuitive explanation for our order reconstruction al-
gorithm is schematically illustrated in Figure 5, where we show a
database that has distinct extreme points left, right, top and bottom.
We assume, without loss of generality, that left ⪯ right. The two
parts of the figure distinguish the cases where top is to the left or
right of bottom, respectively. By symmetry, these two cases cover
all the possible configurations of the extreme points. For simplicity,
we assume that none of the remaining points are horizontally or
vertically aligned with each other or the extreme points. Thus, only
the four extreme points are on the boundary of the rectangle occu-
pied by the database points. The OR algorithm presented in the next
section will remove these simplifying assumptions and reconstruct
an arbitrary database. A first building block of our OR algorithm
finds such extreme points from the response set. We leverage an
algorithm from [13] to find these extreme points, however our
techniques diverge considerably from [13] after this. Whereas they
solve a system of degree four polynomials with full knowledge of
RM(D), our OR algorithm determines the relationships between
pairs of records using only set containment observed in RS(D).
Partition of the Database into Regions. By drawing horizon-
tal and vertical lines through the extreme points, we partition the
database points into nine regions labeled XY for X ∈ {T, M, B} and
Y ∈ {L, M, R}, where T, B, L, R, and M stand for top, bottom, left,
right, and middle, respectively. Note that some of these regions
may be empty. We can compute the points in each region from
the response set by finding minimal responses that contain certain
pairs and triplets of extreme points and performing intersections
and differences of such responses with each other and the entire
database. We show how to compute the rows and columns, from
which a region can be computed by intersecting its row with its
column. The middle row and column are the minimal response
containing left and bottom and the minimal response containing
top and bottom, respectively. The other rows and columns are ob-
tained by computing the minimal response containing the triplet
(a) top to the left of bottom
(b) top to the right of bottom
Figure 5: Partition of the database points into nine regions
induced by the four extreme points.
of extreme points opposite to the column and subtracting this re-
sponse from the database. For example, the left column is obtained
by subtracting from the database the minimal response containing
top, right, and bottom.
(Anti-)Dominance with a Corner. Consider a subset 𝑆 of the
database containing a dominance corner, 𝑠, defined as a point that
dominates or is dominated by all other points of 𝑆. For example,
point left is a dominance corner for the points in region ML in
Figure 5a. Another building block of our algorithm is a method
that given 𝑆 and 𝑠, computes all pairs of points of 𝑆 that have a
dominance relation. By symmetry, the same methods compute the
anti-dominance relation pairs for a subset of points that admits
a similarly defined anti-dominance corner. Let 𝑠 be a dominance
corner for 𝑆 and assume 𝑠 is dominated by all the other points.
The method considers for each point 𝑣 of 𝑆, the smallest response
containing points 𝑠 and 𝑣. The points contained in this response
are the points of 𝑆 dominated by 𝑣. For example, in the point set
of Figure 4, we have that point 𝑠 is a dominance corner. Also, the
smallest response containing 𝑠 and 𝑣3 is {𝑠, 𝑢3, 𝑢4, 𝑣3}, which implies
that the points dominated by 𝑣3 are 𝑠, 𝑢3 and 𝑢4.
Points in Different Rows and Columns. Consider two points,
𝑝, and 𝑞. For some placement of these points into regions, namely
when they are in regions in different rows and columns, we can
immediately decide their horizontal and vertical order and thus
whether they are in a dominance or anti-dominance relation. For
example, if 𝑝 is in BL and 𝑞 is in MM, MR, TM, or TR, then we have
that 𝑞 is above and to the right of 𝑝 and thus dominates 𝑝. Also, if 𝑝
is in BM and 𝑞 is ML or TL, then we have that 𝑞 is above and to the
left of 𝑝 and thus 𝑞 anti-dominates 𝑝. Similar considerations hold
for other placements of 𝑝 and 𝑞 in different rows and columns.
Points in Different Regions in Same Row or Column. Con-
sider now the case when 𝑝 and 𝑞 are in different regions that share
the same row or column. In this case, we know one of the horizontal
or vertical ordering of the points, but not the other. Let 𝑝 be in TL
and 𝑞 be in TR. We have that 𝑝 is to the left of 𝑞. We can use our
building block method applied to the points in the top row and
their anti-dominance corner right to determine whether 𝑝 and 𝑞
are in anti-dominance relation. If they are not, given that 𝑝 is to the
left of 𝑞, we conclude that 𝑞 dominates 𝑝. The same reasoning holds
when 𝑝 is in TL and 𝑞 is in TM and, more generally, by symmetry,
for 𝑝 and 𝑞 in contiguous regions of the same row or column.
Session 7C: Database and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2248Points in Same Region. We now turn to the case when 𝑝 and
𝑞 are in the same region. Here, we need to take into account the
configurations of the extreme points. We distinguish the cases when
top is to the left bottom (Figure 5a) and top is to the right of bottom
(Figure 5b). It is worth noting that we can distinguish these two