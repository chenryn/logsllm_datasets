TypeScript is really stingy about the _way_ you call `super` from the child
constructor. I have seen questions on SO e.g. this one, where people want to
splice and dice arguments they receive from varargs (rest parameters) before
passing it on to super. My workarounds have been ugly:
    class Parent {
        constructor (required1, required2, ...rest) { //...
            if(required1 === undefined) return;
        }
    }
    class Child extends Parent {
        constructor (...args) {
           super(undefined,undefined); // make the compiler happy
           Parent.apply(this,[val1,val2].concat(args)) // the actual call  
        }
    }
Suggestion: Support `super.apply(this, /*any|arr[]*/)` as a part of the
language grammar.
Also tagging @Steve-Fenton as he's answered similarly in the past.