### AMD64 GNOME Solitaire Card Game Collection

#### Installed Packages on a Debian Linux System
- **alsa-utils 1.1.8-2 (amd64)**: Utilities for configuring and using ALSA.
- **anacron 2.3o-28 (amd64)**: A cron-like program that does not rely on time.
- **analog 2:6.0-22 (amd64)**: Web server log analyzer.
- **apache2 2.4.38-3+deb10u7 (amd64)**: Apache HTTP Server.
- **apache2-bin 2.4.38-3+deb10u7 (amd64)**: Apache HTTP Server (modules and other binary files).
- **apache2-data 2.4.38-3+deb10u7 (all)**: Apache HTTP Server (common files).
- **apache2-doc 2.4.38-3+deb10u7 (all)**: Apache HTTP Server (on-site documentation).
- **apache2-utils 2.4.38-3+deb10u7 (amd64)**: Apache HTTP Server (utility programs for web servers).

**Listing 469 - All installed packages on a Debian Linux operating system**

This list confirms our earlier findings from enumerating listening ports: the Debian 10 machine is indeed running a web server, specifically Apache2.

### Vulnerabilities in File Permissions

Files with insufficient access restrictions can create vulnerabilities, potentially granting an attacker elevated privileges. This often occurs when an attacker can modify scripts or binary files executed under a privileged account. Sensitive files readable by unprivileged users may also contain important information such as hard-coded credentials for databases or service accounts running with higher privileges.

**Reference**: Marc Ewing, 2003, [man page for rpm](https://linux.die.net/man/8/rpm)

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 539**
**Made in Morocco**
**Penetration Testing with Kali Linux**

### Automating Permission Checks

Manually checking the permissions of each file and directory is impractical. We can use the `find` command to identify files with insecure permissions. For example, to find all directories writable by the current user:

```bash
joe@debian-privesc:~$ find / -writable -type d 2>/dev/null
```

**Output:**

- `/home/joe`
- `/home/joe/Videos`
- `/home/joe/Templates`
- `/home/joe/.local`
- `/home/joe/.local/share`
- `/home/joe/.local/share/sounds`
- `/home/joe/.local/share/evolution`
- `/home/joe/.local/share/evolution/tasks`
- `/home/joe/.local/share/evolution/tasks/system`
- `/home/joe/.local/share/evolution/tasks/trash`
- `/home/joe/.local/share/evolution/addressbook`
- `/home/joe/.local/share/evolution/addressbook/system`
- `/home/joe/.local/share/evolution/addressbook/system/photos`
- `/home/joe/.local/share/evolution/addressbook/trash`
- `/home/joe/.local/share/evolution/mail`
- `/home/joe/.local/share/evolution/mail/trash`
- `/home/joe/.local/share/evolution/memos`
- `/home/joe/.local/share/evolution/memos/system`
- `/home/joe/.local/share/evolution/memos/trash`
- `/home/joe/.local/share/evolution/calendar`
- `/home/joe/.local/share/evolution/calendar/system`
- `/home/joe/.local/share/evolution/calendar/trash`
- `/home/joe/.local/share/icc`
- `/home/joe/.local/share/gnome-shell`
- `/home/joe/.local/share/gnome-settings-daemon`
- `/home/joe/.local/share/keyrings`
- `/home/joe/.local/share/tracker`
- `/home/joe/.local/share/tracker/data`
- `/home/joe/.local/share/folks`
- `/home/joe/.local/share/gvfs-metadata`
- `/home/joe/.local/share/applications`
- `/home/joe/.local/share/nano`
- `/home/joe/Downloads`
- `/home/joe/.scripts`
- `/home/joe/Pictures`
- `/home/joe/.cache`

**Listing 470 - All world-writable directories**

As shown, several directories, including `/home/joe/.scripts`, are world-writable, warranting further investigation.

### Enumerating Mounted Drives

On most systems, drives are automatically mounted at boot time. However, unmounted drives may contain valuable information. We should check for unmounted drives and their mount permissions.

**Commands:**

- `cat /etc/fstab`: Lists all drives that will be mounted at boot time.
- `mount`: Lists all currently mounted filesystems.

**Example:**

```bash
joe@debian-privesc:~$ cat /etc/fstab
UUID=60b4af9b-bc53-4213-909b-a2c5e090e261 / ext4 errors=remount-ro 0 1
# swap was on /dev/sda5 during installation
UUID=86dc11f3-4b41-4e06-b923-86e78eaddab7 none swap sw 0 0
/dev/sr0 /media/cdrom0 udf,iso9660 user,noauto 0 0

joe@debian-privesc:~$ mount
sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)
proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
udev on /dev type devtmpfs (rw,nosuid,relatime,size=1001064k,nr_inodes=250266,mode=755)
devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)
tmpfs on /run type tmpfs (rw,nosuid,noexec,relatime,size=204196k,mode=755)
/dev/sda1 on / type ext4 (rw,relatime,errors=remount-ro)
securityfs on /sys/kernel/security type securityfs (rw,nosuid,nodev,noexec,relatime)
tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev)
tmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k)
tmpfs on /sys/fs/cgroup type tmpfs (ro,nosuid,nodev,noexec,mode=755)
cgroup2 on /sys/fs/cgroup/unified type cgroup2 (rw,nosuid,nodev,noexec,relatime,nsdelegate)
cgroup on /sys/fs/cgroup/systemd type cgroup (rw,nosuid,nodev,noexec,relatime,xattr,name=systemd)
pstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime)
bpf on /sys/fs/bpf type bpf (rw,nosuid,nodev,noexec,relatime,mode=700)
systemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=25,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=10550)
mqueue on /dev/mqueue type mqueue (rw,relatime)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
hugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime,pagesize=2M)
tmpfs on /run/user/117 type tmpfs (rw,nosuid,nodev,relatime,size=204192k,mode=700,uid=117,gid=124)
tmpfs on /run/user/1000 type tmpfs (rw,nosuid,nodev,relatime,size=204192k,mode=700,uid=1000,gid=1000)
binfmt_misc on /proc/sys/fs/binfmt_misc type binfmt_misc (rw,relatime)
```

**Listing 471 - Content of /etc/fstab and all mounted drives**

The output reveals a swap partition and the primary ext4 disk. The system administrator might have used custom configurations or scripts to mount drives not listed in `/etc/fstab`. Therefore, it's good practice to use both `cat /etc/fstab` and `mount` to gather comprehensive information.

### Listing Available Disks

We can use `lsblk` to view all available disks:

```bash
joe@debian-privesc:~$ lsblk
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      8:0    0   32G  0 disk
├─sda1   8:1    0   31G  0 part /
├─sda2   8:2    0    1K  0 part
└─sda5   8:5    0  975M  0 part [SWAP]
sr0     11:0    1 1024M  0 rom
```

**Listing 472 - All available drives using lsblk**

### Enumerating Loaded Kernel Modules

Exploitation of device drivers and kernel modules is another common privilege escalation technique. First, we need to enumerate the loaded kernel modules using `lsmod`:

```bash
joe@debian-privesc:~$ lsmod
Module                  Size  Used by
binfmt_misc             20480  1
rfkill                  28672  1
sb_edac                 24576  0
crct10dif_pclmul        16384  0
crc32_pclmul            16384  0
ghash_clmulni_intel     16384  0
vmw_balloon             20480  0
...
drm                    495616  5 vmwgfx,drm_kms_helper,ttm
libata                270336  2 ata_piix,ata_generic
vmw_pvscsi              28672  2
scsi_mod               249856  5 vmw_pvscsi,sd_mod,libata,sg,sr_mod
i2c_piix4               24576  0
button                 20480  0
```

**Listing 473 - Loaded drivers**

To get more information about a specific module, such as `libata`, use `modinfo`:

```bash
joe@debian-privesc:~$ /sbin/modinfo libata
filename:       /lib/modules/4.19.0-21-amd64/kernel/drivers/ata/libata.ko
version:        3.00
license:        GPL
description:    Library module for ATA devices
author:         Jeff Garzik
srcversion:     00E4F01BB3AA2AAF98137BF
depends:        scsi_mod
retpoline:      Y
intree:         Y
name:           libata
vermagic:       4.19.0-21-amd64 SMP mod_unload modversions
sig_id:         PKCS#7
signer:         Debian Secure Boot CA
sig_key:        4B:6E:F5:AB:CA:66:98:25:17:8E:05:2C:84:66:7C:CB:C0:53:1F:8C
...
```

**Listing 474 - Additional information about a module**

### Searching for SUID Files

SUID and SGID are special file permissions that allow a user to execute a file with the rights of the file owner or the owner's group. We can use `find` to search for SUID-marked binaries:

```bash
joe@debian-privesc:~$ find / -perm -u=s -type f 2>/dev/null
/usr/bin/chsh
/usr/bin/fusermount
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/ntfs-3g
/usr/bin/gpasswd
/usr/bin/newgrp
/usr/bin/bwrap
/usr/bin/su
/usr/bin/umount
/usr/bin/mount
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/xorg/Xorg.wrap
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/sbin/pppd
```

**Listing 475 - SUID files**

### Automated Enumeration

Collecting detailed information manually can be time-consuming. We can use various scripts to automate this process. One such script is `unix-privesc-check`, which is pre-installed on Kali Linux at `/usr/bin/unix-privesc-check`.

**Usage:**

```bash
kali@kali:~$ unix-privesc-check
unix-privesc-check v1.4 ( http://pentestmonkey.net/tools/unix-privesc-check )
```

**References:**

- G0tmi1k, 2011, [Basic Linux Privilege Escalation](https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation)
- Swissky, 2022, [Linux - Privilege Escalation](https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md)
- Carlos Polop, 2022, [Linux Hardening - Privilege Escalation](https://book.hacktricks.xyz/linux-hardening/privilege-escalation)
- Pentest Monkey, 2019, [Unix Privesc Check](http://pentestmonkey.net/tools/audit/unix-privesc-check)

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 544**
**Made in Morocco**
**Penetration Testing with Kali Linux**