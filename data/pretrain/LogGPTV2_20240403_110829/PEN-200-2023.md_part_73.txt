amd64 GNOME solitaire card game collection
s
ii alsa-utils 1.1.8-2
amd64 Utilities for configuring and using ALSA
ii anacron 2.3o-28
amd64 cron-like program that doesn't go by time
ii analog 2:6.0-22
amd64 web server log analyzer n
ii apache2 2.4.38-3+deb10u7
amd64 Apache HTTP Server
ii apache2-bin i 2.4.38-3+deb10u7
amd64 Apache HTTP Servezr (modules and other binary files)
ii apache2-data 2.4.38-3+deb10u7
all Apache HTTP Server (common files)
D
ii apache2-doc 2.4.38-3+deb10u7
all Apache HTTP Server (on-site documentation)
ii apache2-utils 2.4.38-3+deb10u7
amd64 Apache HTTP Server (utility programs for web servers)
...
Listing 469 - Listing all installed packages on a Debian Linux operating system
This confirms what we expected earlier from enumerating listening ports: the Debian 10 machine
is, in fact, running a web server. In this case, it is running Apache2.
As we previously mentioned, files with insufficient access restrictions can create a vulnerability
that may grant an attacker elevated privileges. This most often happens when an attacker can
modify scripts or binary files that are executed under the context of a privileged account.
Sensitive files that are readable by an unprivileged user may also contain important information
such as hard-coded credentials for a database or a service account running with higher privileges.
843 (Marc Ewing, 2003), https://linux.die.net/man/8/rpm
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 539
Made in Morocco
Penetration Testing with Kali Linux
Since it is not feasible to manually check the permissions of each file and directory, we need to
automate this task as much as possible. As a start, we can use find844 to identify files with
insecure permissions.
In the example below, we are searching for every directory writable by the current user on the
target system. We’ll search the whole root directory (/) and use the -writable argument to specify
the attribute we are interested in. We can also use -type d to locate directories, and filter errors
with 2>/dev/null:
joe@debian-privesc:~$ find / -writable -type d 2>/dev/null
..
/home/joe
/home/joe/Videos
/home/joe/Templates
/home/joe/.local
y
/home/joe/.local/share
/home/joe/.local/share/sounds
/home/joe/.local/share/evolution k
/home/joe/.local/share/evolution/tasks
/home/joe/.local/share/evolution/tasks/system
/home/joe/.local/share/evolution/tasks/trash s
/home/joe/.local/share/evolution/addressbook
/home/joe/.local/share/evolution/addressbook/system
o
/home/joe/.local/share/evolution/addressbook/system/photos
/home/joe/.local/share/evolution/addressbook/trash
/home/joe/.local/share/evolution/mail
n
/home/joe/.local/share/evolution/mail/trash
/home/joe/.local/share/evolution/memos
/home/joe/.local/share/evolutioni/memos/system
/home/joe/.local/share/evolution/memos/trash
z
/home/joe/.local/share/evolution/calendar
/home/joe/.local/share/evolution/calendar/system
/home/joe/.local/share/evDolution/calendar/trash
/home/joe/.local/share/icc
/home/joe/.local/share/gnome-shell
/home/joe/.local/share/gnome-settings-daemon
/home/joe/.local/share/keyrings
/home/joe/.local/share/tracker
/home/joe/.local/share/tracker/data
/home/joe/.local/share/folks
/home/joe/.local/share/gvfs-metadata
/home/joe/.local/share/applications
/home/joe/.local/share/nano
/home/joe/Downloads
/home/joe/.scripts
/home/joe/Pictures
/home/joe/.cache
...
Listing 470 - Listing all world writable directories
844 (Linux man-pages project, 2019), http://man7.org/linux/man-pages/man1/find.1.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 540
Made in Morocco
Penetration Testing with Kali Linux
As shown above, several directories seem to be world-writable, including the /home/joe/.scripts
directory, which is the location of the cron script we found earlier. This certainly warrants further
investigation.
Let’s move further with our enumeration. On most systems, drives are automatically mounted at
boot time. Because of this, it’s easy to forget about unmounted drives that could contain valuable
information. We should always look for unmounted drives, and if they exist, check the mount
permissions.
On Linux-based systems, we can use mount845 to list all mounted filesystems. In addition, the
/etc/fstab846 file lists all drives that will be mounted at boot time.
joe@debian-privesc:~$ cat /etc/fstab
...
UUID=60b4af9b-bc53-4213-909b-a2c5e090e261 / ext4 errors=remount-ro 0
y
1
# swap was on /dev/sda5 during installation
UUID=86dc11f3-4b41-4e06-b923-86e78eaddab7 none k swap sw 0
0
/dev/sr0 /media/cdrom0 udf,iso9660 user,noauto 0 0
s
joe@debian-privesc:~$ mount
sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)
o
proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
udev on /dev type devtmpfs
(rw,nosuid,relatime,size=1001064k,nr_innodes=250266,mode=755)
devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)
tmpfs on /run type tmpfs (rw,nosuid,noexec,relatime,size=204196k,mode=755)
/dev/sda1 on / type ext4 (rw,reliatime,errors=remount-ro)
securityfs on /sys/kernel/security type securityfs (rw,nosuid,nodev,noexec,relatime)
z
tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev)
tmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k)
tmpfs on /sys/fs/cgroup tDype tmpfs (ro,nosuid,nodev,noexec,mode=755)
cgroup2 on /sys/fs/cgroup/unified type cgroup2
(rw,nosuid,nodev,noexec,relatime,nsdelegate)
cgroup on /sys/fs/cgroup/systemd type cgroup
(rw,nosuid,nodev,noexec,relatime,xattr,name=systemd)
pstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime)
bpf on /sys/fs/bpf type bpf (rw,nosuid,nodev,noexec,relatime,mode=700)
...
systemd-1 on /proc/sys/fs/binfmt_misc type autofs
(rw,relatime,fd=25,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=10550)
mqueue on /dev/mqueue type mqueue (rw,relatime)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
hugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime,pagesize=2M)
tmpfs on /run/user/117 type tmpfs
(rw,nosuid,nodev,relatime,size=204192k,mode=700,uid=117,gid=124)
tmpfs on /run/user/1000 type tmpfs
(rw,nosuid,nodev,relatime,size=204192k,mode=700,uid=1000,gid=1000)
binfmt_misc on /proc/sys/fs/binfmt_misc type binfmt_misc (rw,relatime)
Listing 471 - Listing content of /etc/fstab and all mounted drives
845 (Linux.die.net, 2003), https://linux.die.net/man/8/mount
846 (Geek University, 2019), https://geek-university.com/linux/etc-fstab-file
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 541
Made in Morocco
Penetration Testing with Kali Linux
The output reveals a swap partition and the primary ext4 disk of this Linux system.
Keep in mind that the system administrator might have used custom
configurations or scripts to mount drives that are not listed in the /etc/fstab file.
Because of this, it’s good practice to not only scan /etc/fstab, but to also gather
information about mounted drives using mount.
Furthermore, we can use lsblk847 to view all available disks.
joe@debian-privesc:~$ lsblk
NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda 8:0 0 32G 0 disk
y
|-sda1 8:1 0 31G 0 part /
|-sda2 8:2 0 1K 0 part
`-sda5 8:5 0 975M 0 part [SWAP] k
sr0 11:0 1 1024M 0 rom
s
Listing 472 - Listing all available drives using lsblk
We’ll notice that the sda drive consists of three different numbered partitions. In some situations,
o
showing information for all local disks on the system might reveal partitions that are not
mounted. Depending on the system configuration (or misconfiguration), we then might be able to
mount those partitions and search for intneresting documents, credentials, or other information
that could allow us to escalate our privileges or get a better foothold in the network.
Another common privilege escalatioin technique involves exploitation of device drivers and kernel
modules. We will explore actual zexploitation tactics later in this Module, but first let’s examine
some important enumeration techniques.
D
Since this technique relies on matching vulnerabilities with corresponding exploits, we’ll need to
gather a list of drivers and kernel modules that are loaded on the target. We can enumerate the
loaded kernel modules using lsmod without any additional arguments.
joe@debian-privesc:~$ lsmod
Module Size Used by
binfmt_misc 20480 1
rfkill 28672 1
sb_edac 24576 0
crct10dif_pclmul 16384 0
crc32_pclmul 16384 0
ghash_clmulni_intel 16384 0
vmw_balloon 20480 0
...
drm 495616 5 vmwgfx,drm_kms_helper,ttm
libata 270336 2 ata_piix,ata_generic
vmw_pvscsi 28672 2
scsi_mod 249856 5 vmw_pvscsi,sd_mod,libata,sg,sr_mod
i2c_piix4 24576 0
button 20480 0
847 (Linux.die.net, 2003), https://linux.die.net/man/8/lsblk
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 542
Made in Morocco
Penetration Testing with Kali Linux
Listing 473 - Listing loaded drivers
Once we’ve collected the list of loaded modules and identified those we want more information
about, such as libata in the above example, we can use modinfo to find out more about the
specific module. We should note that this tool requires the full path to run.
joe@debian-privesc:~$ /sbin/modinfo libata
filename: /lib/modules/4.19.0-21-amd64/kernel/drivers/ata/libata.ko
version: 3.00
license: GPL
description: Library module for ATA devices
author: Jeff Garzik
srcversion: 00E4F01BB3AA2AAF98137BF
depends: scsi_mod
retpoline: Y
intree: Y y
name: libata
vermagic: 4.19.0-21-amd64 SMP mod_unload modversions
sig_id: PKCS#7 k
signer: Debian Secure Boot CA
sig_key: 4B:6E:F5:AB:CA:66:98:25:17:8E:05:2C:84:66:7C:CB:C0:53:1F:8C
s
...
Listing 474 - Displaying additional information about a module
o
Once we’ve obtained a list of drivers and their versions, we are better positioned to find any
relevant exploits.
n
Later in this Module, we will explore various methods of privilege escalation. However, there are a
few specific enumerations we should cover in this section that could reveal interesting “shortcuts”
i
to privilege escalation.
z
Aside from the rwx file permissions described previously, two additional special rights pertain to
executable files: setuid and setgid. These are symbolized with the letter “s”.
D
If these two rights are set, either an uppercase or lowercase “s” will appear in the permissions.
This allows the current user to execute the file with the rights of the owner (setuid) or the owner’s
group (setgid).
When running an executable, it normally inherits the permissions of the user that runs it. However,
if the SUID permissions are set, the binary will run with the permissions of the file owner. This
means that if a binary has the SUID bit set and the file is owned by root, any local user will be able
to execute that binary with elevated privileges.
When a user or a system-automated script launches a SUID application, it inherits the UID/GID of
its initiating script: this is known as effective UID/GID (eUID, eGID), which is the actual user that
the OS verifies to grant permissions for a given action.
Any user who manages to subvert a setuid root program to call a command of their choice can
effectively impersonate the root user and gains all rights on the system. Penetration testers
regularly search for these types of files when they gain access to a system as a way of escalating
their privileges.
We can use find to search for SUID-marked binaries. In this case, we are starting our search at the
root directory (/), searching for files (-type f) with the SUID bit set, (-perm -u=s) and discarding all
error messages (2>/dev/null):
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 543
Made in Morocco
Penetration Testing with Kali Linux
joe@debian-privesc:~$ find / -perm -u=s -type f 2>/dev/null
/usr/bin/chsh
/usr/bin/fusermount
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/ntfs-3g
/usr/bin/gpasswd
/usr/bin/newgrp
/usr/bin/bwrap
/usr/bin/su
/usr/bin/umount
/usr/bin/mount
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/xorg/Xorg.wrap y
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
k
/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/sbin/pppd
s
Listing 475 - Searching for SUID files
In this case, the command found several SUID boinaries. Exploitation of SUID binaries will vary
based on several factors. For example, if /bin/cp (the copy command) were SUID, we could copy
and overwrite sensitive files such as /etc/passwd.
n
A comprehensive list of Linux privilege escalation techniques can be found in a compendium848
by g0tmi1k as well as in other,849 more up-to-date,850 resources.
i
Having covered the main concezpts behind manually enumerating Linux systems for privilege
escalation techniques, we are going to learn how to automate the process in bulk in the upcoming
section. D
17.1.3 Automated Enumeration
As we learned in the previous section, Linux systems contain a wealth of information that can be
used for further attacks. However, collecting this detailed information manually can be rather
time-consuming. Fortunately, we can use various scripts to automate this process.
To get an initial baseline of the target system, we can use unix-privesc-check851 on UNIX
derivatives such as Linux. This Bash script is pre-installed on our local Kali machine at
/usr/bin/unix-privesc-check, and it performs a number of checks to find any system
misconfigurations that can be abused for local privilege escalation. We can review the tool’s
details by running the script without any arguments.
848 (G0tmi1k, 2011), https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation
849 (Swissky, 2022),
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-
%20Privilege%20Escalation.md
850 (Carlos Polop, 2022), https://book.hacktricks.xyz/linux-hardening/privilege-escalation
851 (Pentest Money, 2019), http://pentestmonkey.net/tools/audit/unix-privesc-check
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 544
Made in Morocco
Penetration Testing with Kali Linux
kali@kali:~$ unix-privesc-check
unix-privesc-check v1.4 ( http://pentestmonkey.net/tools/unix-privesc-check )