### 5. Time-Space Decomposed Model

#### 5.1 Phased Recovery Model
The phased recovery model, as shown in Figure 2, describes the rerouting and restoration processes. The system starts in Phase I and progresses through Phases II, III, and IV. The transient probabilities \( p(t, y) \) for the four phases \( y = I, II, III, IV \) can be obtained using the convolution integration approach [27]. The expressions for these probabilities are given by:

\[
p(t, I) = e^{-t\alpha_d}
\]

\[
p(t, II) = \frac{\alpha_d}{\alpha_d - \tau} \left( e^{-t\tau} - e^{-t\alpha_d} \right)
\]

\[
p(t, III) = \frac{\alpha_d \tau}{(\alpha_u - \tau)(\alpha_d - \tau)} \left( e^{-t\alpha_d} - e^{-t\alpha_u} \right)
\]

\[
p(t, IV) = 1 - p(t, I) - p(t, II) - p(t, III)
\]

These expressions assume that \(\alpha_d \neq \tau \neq \alpha_u\). For the case where \(\alpha_d = \alpha_u\), the solution simplifies further.

#### 5.2 Survivability Model
The space decomposition of the exact model into node-independent models significantly improves scalability. The time decomposition decouples the performance and recovery models, allowing for the steady-state probabilities in the performance models and the transient solution of the phased recovery model to be obtained separately and independently. This means that:

\[
p_i(t, y, x_i) \approx p(t, y) \cdot \pi_i(x_i, y)
\]

where the transient probabilities \( p(t, y) \) are from (9), and the steady-state probabilities \(\pi_i(x_i, y)\) are the \(\pi_i(x_i)\) from (7) for different phase-dependent arrival intensities \(\Gamma_i(y)\). We assume steady-state performance in each phase. The approximation is valid when the steady-state performance in the new phase is reached quickly compared to the duration of the phase, which is typically the case in our network models when \((\Gamma_i, \mu_i) \gg (\alpha_d, \tau, \alpha_u)\).

The global state probabilities are then obtained by combining both space and time decompositions:

\[
p(t, y, \#x) \approx \prod_{i=1}^n p_i(t, y, x_i) \approx p(t, y) \cdot \prod_{i=1}^n \pi_i(x_i, y)
\]

When the phased recovery model is simple, such as in the example in Figure 2, a closed-form solution is available, enabling efficient evaluation of large networks with large or even infinite server and buffer capacities \( n_i \). For more complex phased recovery models, where a closed-form transient solution is difficult or impossible, the time decomposition approach still offers significant advantages, as numerical solutions are much faster compared to the full node model due to the reduced number of states.

### 6. Model Scalability
The primary goal of the approximations proposed in this paper is to reduce the computational effort required to obtain transient solutions in large network models without sacrificing accuracy. The assumptions made are discussed in Section 7, and the accuracy is demonstrated using two small network models in Section 8.

The underlying CTMC model of the exact Stochastic Reward Net has a state space proportional to \(\prod_{i=1}^n n_i \times n_p\), where \( n_p \) is the number of phases. The space-decomposed CTMC model reduces the state space of the transient solution to \(\sum_{i=1}^n n_i \times n_p\), while the time-space decomposed model requires solving a transient model with only \( n_p \) states.

Simulation models are considered attractive when analytical models fail due to restrictive modeling assumptions or intractable or inefficient solutions. The strength of the simulation approach is its ability to handle arbitrary levels of detail, making it suitable for various studies. However, the efficiency of the simulation approach depends on the network size and the stiffness of the model, i.e., the ratio between packet arrival and departure rates, and the repair and rerouting rates [25]. Simulations become inefficient when the events of interest are infrequent, such as rare packet losses. In such cases, numerical solutions might be less computationally intensive unless rare event simulation techniques like importance sampling, RESTART, or importance splitting [17] are applied.

### 7. Modeling Assumptions
In the network models presented in this paper, we assume that external packet arrivals to the source of a virtual connection follow a Poisson process. If a bursty arrival process is required, an MMPP or MAP type process [27] can be used, though this will result in larger CTMC models. The packet service time distribution is assumed to be exponential, influenced by the packet size distribution, aggregation level, and header processing time. Non-exponential empirical distributions, such as the Weibull distribution observed in [24], can be approximated using phase-type fits, again leading to larger CTMC models.

In our space decomposition model, we assume independence between network nodes, which is a good approximation in networks with low loss probability and high aggregation, i.e., multiplexing of many connections. We have decoupled the performance and recovery models, assuming steady-state performance in each phase. This approximation is valid if the steady-state performance in a phase is reached quickly after a phase change, relative to the expected duration of the phase. A rule of thumb is that the approximation is good if there is at least a two-order-of-magnitude difference between the time granularity of events in the performance model and the recovery model. For example, in medium-loaded (30-50%) high-capacity networks (100 Mbit/s - 10 Gbit/s), you may observe 3-300 packets/ms, while routing, rerouting, and repair (at the IP level) take on the order of 100s of ms, meaning several hundred to several thousand packets are expected in each phase.

For simplicity, the phase time distribution in the recovery model is assumed to be exponential, but any general distribution can be accommodated using semi-Markov models [27].

### 8. Network Examples

#### 8.1 Evaluation Tools
Simulations in this paper are conducted using a process-oriented simulator implemented in SIMULA [18] with the DEMOS (Discrete Event Simulation on SIMULA [3]) class library. Analytical evaluations of the Stochastic Reward Net are performed in SHARPE [15, 26] and SPNP [7], while the CTMC models are numerically solved in SHARPE and the symbolic closed-form solution is checked in Mathematica [1].

#### 8.2 A 4-Node Example
The first example is a network with \( n = 4 \) nodes, as depicted in Figure 4. The performance of the virtual connection between nodes \( s = 1 \) and \( d = 4 \) is evaluated after the failure of node 2 at time \( t = 500 \). Each node \( i \) is an M/M/1/\( n_i \) system with parameters given in Table 1. The parameters in the phased recovery model are \(\alpha_d = \alpha_u = 0.01\) and \(\tau = 0.001\).

The network example is studied using simulations and all three analytical approaches. The estimated performance metrics from \( R = 90 \) simulation replicas (Simulations) are compared against the analytical values of the Stochastic Reward Net model solved by SPNP (SRN model). The loss probability and the average number of packets in the system at different times \( t \) are shown in Figures 7(a) and 7(b), respectively. The space and time-space decomposed models are indistinguishable and are represented by a single curve (Decomposed CTMC model).

The main observations from the experiments are that the simulations and SRN models show perfect fit, as expected since the modeling assumptions are identical. The decomposed CTMC models capture the transient performance very well. The time-space decomposed model with the closed-form solution is a significant simplification that enables the study of large networks with many, and even infinite, buffers. The results show that when the transient performance is dominated by impairments in a single node, this decomposed, product-form approximation is a viable approach.

#### 8.3 A 10-Node Example
The second example is a network with \( n = 10 \) nodes. The directed graph \(\#G[1,10]\) for routing virtual connections is shown in Figure 4. The parameters for the 4-node network are given in Table 1, and the parameters for the 10-node network are similar but with additional nodes and connections.

| Node | \( n_i \) | \( \mu_i \) | \( \Gamma_i(IV) \) | \( \Gamma_i(I) \) | \( \Gamma_i(II) \) | \( \Gamma_i(III) \) |
|------|----------|------------|-------------------|------------------|------------------|------------------|
| 1    | 10       | 100.0      | 80.0              | 80.0             | 46.9             | 0.0              |
| 2    | 8        | 100.0      | 0.0               | 78.1             | 31.2             | 77.9             |
| 3    | 10       | 100.0      | 69.1              | 80.0             | 31.2             | 31.0             |
| 4    | 4        | 100.0      | 0.0               | 0.0              | 0.0              | 0.0              |

The performance metrics for the 10-node network are evaluated similarly to the 4-node example, and the results show that the decomposed models continue to provide accurate and efficient solutions.