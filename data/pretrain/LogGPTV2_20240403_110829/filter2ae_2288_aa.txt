### 0x00 前言
想学XXE漏洞，XXE(XML External Entity
Injection)全称为XML外部实体注入。XML？！发现我不会，简单看了一下基础知识，发现XML还可能存在XML注入和XPath注入。于是把XML注入、XPath注入和XML
外部实体注入一起学习了！并写了一下学习笔记。
### 0x01 XML
**什么是 XML？**  
XML 指可扩展标记语言（EXtensible Markup Language）。  
XML 的设计宗旨是传输数据，而不是显示数据。  
XML 是 W3C 的推荐标准。  
XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。  
XML 语言没有预定义的标签。
**XML 和 HTML 之间的差异**  
XML 不是 HTML 的替代。  
XML 和 HTML 为不同的目的而设计：
> XML 被设计用来传输和存储数据，其焦点是数据的内容。  
>  HTML 被设计用来显示数据，其焦点是数据的外观。  
>  HTML 旨在显示信息，而 XML 旨在传输信息。
**为什么需要XML**  
现实生活中一些数据之间往往存在一定的关系。我们希望能在计算机中保存和处理这些数据的同时能够保存和处理他们之间的关系。XML就是为了解决这样的需求而产生数据存储格式。
**XML基本格式与基本语法**  
_基本格式：_
    Everyday Italian           
    Giada De Laurentiis                  
    2005                                     
    30.00                                  
`` 称为 XML prolog
，用于声明XML文档的版本和编码，是可选的，必须放在文档开头。  
standalone值是yes的时候表示DTD仅用于验证文档结构，从而外部实体将被禁用，但它的默认值是no，而且有些parser会直接忽略这一项。
_基本语法：_
  * 所有 XML 元素都须有关闭标签。
  * XML 标签对大小写敏感。
  * XML 必须正确地嵌套。
  * XML 文档必须有根元素。
  * XML 的属性值须加引号。
若多个字符都需要转义，则可以将这些内容存放到CDATA里面
### 0x02 DTD
**DTD基本概念**  
XML 文档有自己的一个格式规范，这个格式规范是由一个叫做 DTD（document type definition） 的东西控制的。  
DTD用来为XML文档定义语义约束。可以嵌入在XML文档中(内部声明)，也可以独立的放在另外一个单独的文件中(外部引用)。是XML文档中的几条语句，用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体。  
**实体引用**  
XML元素以形如 `foo` 的标签开始和结束，如果元素内部出现如` & ' "` 。  
实体引用可以起到类似宏定义和文件包含的效果，为了方便，我们会希望自定义实体引用，这个操作在称为 Document Type
Defination（DTD，文档类型定义）的过程中进行。  
**dtd的引入方式**  
DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。  
_内部 DTD_  
使用内部的dtd文件，即将约束规则定义在xml文档中
示例代码：
    ]>
    Y0u
    @re
    v3ry
    g00d!
_外部 DTD_  
（1）引入外部的dtd文件
（2）使用外部的dtd文件(网络上的dtd文件)
当使用外部DTD时，通过如下语法引入：
示例代码：
    Y0u
    @re
    v3ry
    g00d!
test.dtd
**PCDATA**  
PCDATA的意思是被解析的字符数据。PCDATA是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。文本中的标签会被当作标记来处理，而实体会被展开。  
被解析的字符数据不应当包含任何`&`，``字符，需要用`&amp;` `&lt;` `&gt;`实体来分别替换。  
**CDATA**  
CDATA意思是字符数据，CDATA 是不会被解析器解析的文本，在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。  
**DTD元素**  
**DTD属性**  
**属性声明语法** ：
DTD实例：
XML实例：
以下是 属性类型的选项：  
默认属性值可使用下列值：  
**DTD实体**
> 实体是用于定义引用普通文本或特殊字符的快捷方式的变量。  
>  实体引用是对实体的引用。  
>  实体可在内部或外部进行声明。
_按实体有无参分类，实体分为一般实体和参数实体_  
_一般实体的声明_ ：``  
引用一般实体的方法：`&实体名称;`  
ps：经实验，普通实体可以在DTD中引用，可以在XML中引用，可以在声明前引用，还可以在实体声明内部引用。
_参数实体的声明_ ：``  
引用参数实体的方法：`%实体名称;`  
ps：经实验，参数实体只能在DTD中引用，不能在声明前引用，也不能在实体声明内部引用。  
DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。
_按实体使用方式分类，实体分为内部声明实体和引用外部实体_  
_内部实体_
内部实体示例代码：
    ]>
    &writer;©right;
_外部实体_  
外部实体，用来引入外部资源。有`SYSTEM`和`PUBLIC`两个关键字，表示实体来自本地计算机还是公共计算机。
    或者
外部实体示例代码：
    ]>
    &file;©right;
外部实体可支持http、file等协议。不同程序支持的协议不同：  
PHP支持的协议会更多一些，但需要一定的扩展：  
PHP引用外部实体， **常见的利用协议** ：
    file://文件绝对路径 如：file:///etc/passwd
    http://url/file.txt
    php://filter/read=convert.base64-encode/resource=xxx.php
_参数实体+外部实体_
参数实体+外部实体示例代码：
      %file;
    ]>
`%file`(参数实体)是在DTD中被引用的，而`&file;`是在xml文档中被引用的。
### 0x03 XML注入
XML的设计宗旨是传输数据，而非显示数据。  
XML注入是一种古老的技术，通过利用闭合标签改写XML文件实现的。
#### XML注入简介
XML是一种数据组织存储的数据结构方式，安全的XML在用户输入生成新的数据时候应该只能允许用户接受的数据，需要过滤掉一些可以改变XML标签也就是说改变XML结构插入新功能（例如新的账户信息，等于添加了账户）的特殊输入，如果没有过滤，则可以导致XML注入攻击。
#### XML注入前提条件
（1）用户能够控制数据的输入  
（2）程序有拼凑的数据
**注入实例**  
test1.xml