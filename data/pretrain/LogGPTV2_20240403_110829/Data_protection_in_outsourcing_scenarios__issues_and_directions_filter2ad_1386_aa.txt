title:Data protection in outsourcing scenarios: issues and directions
author:Pierangela Samarati and
Sabrina De Capitani di Vimercati
Data Protection in Outsourcing Scenarios
Sabrina De Capitani di Vimercati
Dipartimento di Tecnologie dell’Informazione
Università degli Studi di Milano
PI:EMAIL
3rd International Workshop on Autonomous and Spontaneous Security
(SETOP 2010)
Data Protection in Outsourcing Scenarios
1/45
Motivation (1)
Recent advances in the communications and information technology
have led new emerging scenarios
• Outsourcing (data and services)
◦ data storage and service access through honest-but-curious
servers
• Pervasive and ubiquitous computing
◦ computing and communication services anytime and anywhere
• Ambient intelligence
◦ seamless support for the different activities and interactions of
users acting within a controlled environment
• Cloud computing
◦ Internet-based access to data and applications shared among
different clients
Data Protection in Outsourcing Scenarios
2/45
Motivation (2)
• The availability of online services anytime and anywhere and the
ability to process and store sensitive data securely are becoming
crucial
• Our data will be no longer remain on personal hard disks: they will
be stored in remote systems
◦ can move around in different locations
◦ can be distributed and fragmented among different protection
domains (i.e., different data centers)
◦ should be accessible only to the authorized parties
◦ should be managed according to possible restrictions on their
storage and usage
◦ . . .
Data Protection in Outsourcing Scenarios
3/45
Issues to be addressed
• Data protection
• Query execution
• Private access
• Data integrity and correctness
• Access control enforcement
• Support for selective write privileges
• Data publication and utility
• Private collaborative computation
Data Protection in Outsourcing Scenarios
4/45
Issues to be addressed
• Data protection: fragmentation and encryption
• Query execution
• Private access
• Data integrity and correctness
• Access control enforcement
• Support for selective write privileges
• Data publication and utility: fragmentation and loose associations
• Private collaborative computation
Data Protection in Outsourcing Scenarios
4/45
Fragmentation and encryption
• Encryption proposed in outsourcing scenarios makes query
evaluation more expensive or not always possible
• Often what is sensitive is the association between values of
different attributes, rather than the values themselves
◦ e.g., association between employee’s names and salaries
=⇒protect associations by breaking them, rather than encrypting
• Recent solutions for enforcing privacy requirements couple:
◦ encryption
◦ data fragmentation
Data Protection in Outsourcing Scenarios
5/45
Conﬁdentiality constraints
• Privacy requirements are represented as a set of conﬁdentiality
constraints that capture sensitivity of attributes and associations
◦ sets of attributes such that the (joint) visibility of values of the
attributes in the sets should be protected
• Sensitive attributes: the values assumed by some attributes are
considered sensitive and cannot be stored in the clear
=⇒ singleton constraints
• Sensitive associations: the association between values of given
attributes is sensitive and should not be released
=⇒ non-singleton constraints
Data Protection in Outsourcing Scenarios
6/45
Outline
• Non-communicating pair of servers [Aggarwal et al., CIDR’05]
• Multiple fragments [ESORICS’07, ACM TISSEC’10]
• Departing from encryption: Keep a few [ESORICS’09]
• Fragments and loose associations [PVLDB’10]
P. Samarati, S. De Capitani di Vimercati, “Data Protection in Outsourcing Scenarios: Issues and Directions,” in Proc. of
the 5th ACM Symposium on Information, Computer and Communications Security (ASIACCS 2010), Beijing, China,
April, 2010.
Data Protection in Outsourcing Scenarios
7/45
Non-Communicating Pair of Servers
G. Aggarwal, M. Bawa, P. Ganesan, H. Garcia-Molina, K. Kenthapadi, R. Motwani, U. Srivastava, D. Thomas, Y. Xu, “Two
Can Keep a Secret: A Distributed Architecture for Secure Database Services,” in Proc. of the Conference on Innovative
Data Systems Research Asilomar, CA, USA, January 4-7, 2005.
Data Protection in Outsourcing Scenarios
8/45
Non-communicating pair of servers
• Conﬁdentiality constraints are enforced by splitting information
over two independent servers that cannot communicate (need to
be completely unaware of each other)
◦ Sensitive associations are protected by distributing the involved
attributes between the two servers
◦ Encryption is applied only when explicitly demanded by the
conﬁdentiality constraints or when storing the attribute in any of the
servers would expose at least a sensitive association
E 
C 1
EXTERNAL SERVER
• E ∪ C1 ∪ C2 = R
• C1 ∪ C2 ⊆ R
OWNER
E 
C 2
EXTERNAL SERVER
Data Protection in Outsourcing Scenarios
9/45
Enforcing conﬁdentiality constraints
• Conﬁdentiality constraints C deﬁned over a relation R are
enforced by decomposing R as (cid:6)R1,R2,E(cid:7) where:
◦ R1 and R2 include a unique tuple ID needed to ensure lossless
decomposition
◦ R1 ∪ R2 = R
◦ E is the set of encrypted attributes and E ⊆ R1, E ⊆ R2
◦ for each c ∈ C , c (cid:9)⊆ (R1 − E) and c (cid:9)⊆ (R2 − E)
Data Protection in Outsourcing Scenarios
10/45
Conﬁdentiality constraints – Example (1)
R = (Name,DoB,Gender,Zip,Position,Salary,Email,Telephone)
• {Telephone}, {Email}
◦ attributes Telephone and Email are sensitive (cannot be stored in
the clear)
• {Name,Salary}, {Name,Position}, {Name,DoB}
◦ attributes Salary, Position, and DoB are private of an individual and
cannot be stored in the clear in association with the name
• {DoB,Gender,Zip,Salary}, {DoB,Gender,Zip,Position}
◦ attributes DoB, Gender, Zip can work as quasi-identiﬁer
• {Position,Salary}, {Salary,DoB}
◦ association rules between Position and Salary and between Salary
and DoB need to be protected from an adversary
Data Protection in Outsourcing Scenarios
11/45
Enforcing conﬁdentiality constraints – Example (2)
R = (Name,DoB,Gender,Zip,Position,Salary,Email,Telephone)
{Telephone}
{Email}
{Name,Salary}
{Name,Position}
{Name,DoB}
{DoB,Gender,Zip,Salary}
{DoB,Gender,Zip,Position}
{Position,Salary}
{Salary,DoB}
=⇒ R = (Name,DoB,Gender,Zip,Position,Salary,Email,Telephone)
• R1: (ID,Name,Gender,Zip,Salarye,Emaile,Telephonee)
• R2: (ID,Position,DoB,Salarye,Emaile,Telephonee)
Note that Salary is encrypted even if non sensitive per se since storing
it in the clear in any of the two fragments would violate at least a
constraint
Data Protection in Outsourcing Scenarios
12/45
Query execution
At the logical level: replace R with R1 (cid:2)(cid:3) R2
Query plans:
• Fetch R1 and R2 from the servers and execute the query locally
◦ extremely expensive
• Involve servers S1 and S2 in the query evaluation
◦ can do the usual optimizations, e.g., push down selections and
projections
◦ selections on encrypted attributes cannot be pushed down
◦ different options for executing queries:
− send sub-queries to both S1 and S2 in parallel, and join the results at
the client
− send only one of the two sub-queries, say to S1; the tuple IDs of the
result from S1 are then used to perform a semi-join with the result of
the sub-query of S2 to ﬁlter R2
Data Protection in Outsourcing Scenarios
13/45
Query execution – Example
• R1: (ID,Name,Gender,Zip,Salarye,Emaile,Telephonee)
• R2: (ID,Position,DoB,Salarye,Emaile,Telephonee)
Data Protection in Outsourcing Scenarios
14/45
Identifying the optimal decomposition
Brute force approach for optimizing wrt workload W:
• For each possible safe decomposition of R:
◦ optimize each query in W for the decomposition
◦ estimate the total cost for executing the queries in W using the
optimized query plans
• Select the decomposition that has the lowest overall query cost
Too expensive! =⇒ Exploit afﬁnity matrix
Data Protection in Outsourcing Scenarios
15/45
Multiple Fragments
V. Ciriani, S. De Capitani di Vimercati, S. Foresti, S. Jajodia, S. Paraboschi, P. Samarati, “Combining Fragmentation and
Encryption to Protect Privacy in Data Storage,” in ACM Transactions on Information and System Security (TISSEC),
vol. 13, no. 3, July, 2010.
Data Protection in Outsourcing Scenarios
16/45
Multiple fragments (1)
Coupling fragmentation and encryption interesting and promising, but,
limitation to two servers:
− too strong and difﬁcult to enforce in real environments
− limits the number of associations that can be solved by
fragmenting data, often forcing the use of encryption
=⇒ allow for more than two non-linkable fragments
E1 C1 E2 C2
En Cn
...
OWNER
EXTERNAL SERVER
• E1 ∪ C1 = . . . = En ∪ Cn = R
• C1 ∪ . . . ∪ Cn ⊆ R
Data Protection in Outsourcing Scenarios
17/45
Multiple fragments (2)
• A fragmentation of R is a set of fragments F = {F1, . . . ,Fm}, where
Fi ⊆ R, for i = 1, . . . ,m
• A fragmentation F of R correctly enforces a set C of
conﬁdentiality constraints iff the following conditions are satisﬁed:
◦ ∀F ∈ F , ∀c ∈ C : c (cid:9)⊆ F (each individual fragment satisﬁes the
constraints)
◦ ∀Fi,Fj ∈ F ,i (cid:9)= j : Fi ∩ Fj = /0 (fragments do not have attributes in
common)
Data Protection in Outsourcing Scenarios
18/45
Multiple fragments (3)
• Each fragment F is mapped to a physical fragment containing:
◦ all the attributes in F in the clear
◦ all the other attributes of R encrypted (a salt is applied on each
encryption)
• Fragment Fi = {Ai1
, . . . ,Ain
} of R mapped to physical fragment
Fe
i (salt,enc,Ai1
◦ each t ∈ r over R is mapped to a tuple te ∈ f e
, . . . ,Ain):
i with f e
i a relation over
Fe
i and:
− te[enc] = Ek(t[R − Fi] ⊗ te[salt])
− te[Aij
], for j = 1, . . . ,n
] = t[Aij
Data Protection in Outsourcing Scenarios
19/45
Multiple fragments – Example (1)
MEDICALDATA
SSN
123-45-6789
987-65-4321
963-85-2741
147-85-2369
Zip
IllnessSSN Physician
Name DoB
Nancy 65/12/07 94142 hypertension M. White
D. Warren
Ned
M. White
Nell
Nick
D. Warren
73/01/05 94141 gastritis
86/03/31 94139 ﬂu
90/07/19 94139 asthma
c0= {SSN}
c1= {Name, DoB}
c2= {Name, Zip}
c3= {Name, Illness}
c4= {Name, Physician}
c5= {DoB, Zip, Illness}
c6= {DoB, Zip, Physician}
Data Protection in Outsourcing Scenarios
20/45
Multiple fragments – Example (1)
MEDICALDATA
SSN
123-45-6789
987-65-4321
963-85-2741
147-85-2369
Zip
IllnessSSN Physician
Name DoB
Nancy 65/12/07 94142 hypertension M. White
D. Warren
Ned
M. White
Nell
Nick
D. Warren
73/01/05 94141 gastritis
86/03/31 94139 ﬂu
90/07/19 94139 asthma
c0= {SSN}
c1= {Name, DoB}
c2= {Name, Zip}
c3= {Name, Illness}
c4= {Name, Physician}
c5= {DoB, Zip, Illness}
c6= {DoB, Zip, Physician}
F1
enc
α
β
γ
δ
Name
Nancy
Ned
Nell
Nick
salt
s1
s2
s3
s4
salt
s5
s6
s7
s8
enc
ε
ζ
η
θ
F2
DoB
65/12/07
73/01/05
86/03/31
90/07/19
Zip
94142
94141
94139
94139
salt
s9
s10
s11
s12
enc
ι
κ
λ
μ
Physician
F3
Illness
hypertension M. White
D. Warren
gastritis
ﬂu
M. White
D. Warren
asthma
Data Protection in Outsourcing Scenarios
20/45
Executing queries on fragments
• Every physical fragment of R contains all the attributes of R
=⇒ no more than one fragment needs to be accessed to respond
to a query
• If the query involves an encrypted attribute, an additional query
may need to be executed by the client
Original query on R
Translation over fragment F e
3
Q :=SELECT SSN, Name
FROM MedicalData
WHERE (Illness=‘gastritis’ OR
Illness=‘asthma’) AND
Physician=‘D. Warren’
AND
Zip=‘94141’
Q3 :=SELECT salt, enc
FROM Fe
3
WHERE (Illness=‘gastritis’ OR
Illness=‘asthma’) AND
Physician=‘D. Warren’
Q(cid:13) := SELECT SSN, Name
FROM Decrypt(Q3, Key)
WHERE Zip=‘94141’
Data Protection in Outsourcing Scenarios
21/45
Optimization criteria
• Goal: ﬁnd a fragmentation that makes query execution efﬁcient
• The fragmentation process can then take into consideration
different optimization criteria:
◦ number of fragments [ESORICS’07]
◦ afﬁnity among attributes [ACM TISSEC’10]
◦ query workload [ICDCS’09]
• All criteria obey maximal visibility
◦ only attributes that appear in singleton constraints (sensitive
attributes) are encrypted
◦ all attributes that are not sensitive appear in the clear in one
fragment
Data Protection in Outsourcing Scenarios
22/45
Departing from Encryption: Keep a Few
V. Ciriani, S. De Capitani di Vimercati, S. Foresti, S. Jajodia, S. Paraboschi, P. Samarati, “Keep a Few: Outsourcing Data
while Maintaining Conﬁdentiality,” in Proc. of the 14th European Symposium On Research In Computer Security
(ESORICS 2009), Saint Malo, France, September 21-25, 2009.
Data Protection in Outsourcing Scenarios
23/45
Keep a few
Basic idea:
− encryption makes query execution more expensive and not always
possible
− encryption brings overhead of key management
=⇒ Depart from encryption by involving the owner as a trusted party
to maintain a limited amount of data
C2
• C1 ∪ C2 = R
C1
OWNER
EXTERNAL SERVER
Data Protection in Outsourcing Scenarios
24/45
Fragmentation
Given:
• R(A1, . . . ,An): relation schema
• C = {c1, . . . ,cm}: conﬁdentiality constraints over R
Determine a fragmentation F = (cid:6)Fo,Fs(cid:7) for R, where Fo is stored at the
owner and Fs is stored at a storage server, and
• Fo ∪ Fs = R (completeness)
• ∀c ∈ C ,c (cid:9)⊆ Fs (conﬁdentiality)
• Fo ∩ Fs = /0 (non-redundancy)
/* can be relaxed */
At the physical level Fo and Fs have a common attribute (additional tid
or non-sensitive key attribute) to guarantee lossless join
Data Protection in Outsourcing Scenarios
25/45
Fragmentation – Example
PATIENT
Name
DoB
SSN
123-45-6789 Nancy 65/12/07 white waiter hypertension ace
987-65-4321 Ned
963-85-2741 Nell
147-85-2369 Nick
73/01/05 black nurse
86/03/31 red
90/07/19 asian waiter asthma
Race Job
Treatment
HDate
09/01/02
09/01/06
antibiotics
aspirin
09/01/08
anti-inﬂammatory 09/01/10
banker ﬂu
Illness
gastritis
c0 ={SSN}
c1 ={Name,Illness}
c2 ={Name,Treatment}
c3 ={DoB,Race,Illness}
c4 ={DoB,Race,Treatment}
c5 ={Job,Illness}
F o
Illness
Treatment
tid SSN
1 123-45-6789 hypertension ace
2 987-65-4321 gastritis
3 963-85-2741 ﬂu
4 147-85-2369 asthma
antibiotics
aspirin
anti-inﬂammatory
F s
tid Name DoB Race Job
1 Nancy 65/12/07 white waiter 09/01/02
73/01/05 black nurse 09/01/06
2 Ned
3 Nell
86/03/31 red
banker 09/01/08
90/07/19 asian waiter 09/01/10
4 Nick
HDate
Data Protection in Outsourcing Scenarios
26/45
Query evaluation
• Queries formulated on R need to be translated into
equivalent queries on Fo and/or Fs
• Queries of the form: SELECT A FROM R WHERE C
where C is a conjunction of basic conditions
◦ Co: conditions that involve only attributes stored at the client
◦ Cs: conditions that involve only attributes stored at the sever
◦ Cso: conditions that involve attributes stored at the client and
attributes stored at the server
Data Protection in Outsourcing Scenarios
27/45
Query evaluation – Example
• Fo={SSN,Illness,Treatment}, Fs={Name,DoB,Race,Job,HDate}
• q = SELECT SSN, DoB
FROM Patient
WHERE (Treatment=“antibiotic”)
AND (Job=“nurse”)
AND (Name=Illness)
• The conditions in the WHERE clause are split as follows
◦ Co = {Treatment = “antibiotic”}
◦ Cs = {Job = “nurse”}
◦ Cso = {Name = Illness}
Data Protection in Outsourcing Scenarios
28/45
Query evaluation strategies
Server-Client strategy
• server: evaluate Cs and return result to client
• client: receive result from server and join it with Fo
• client: evaluate Co and Cso on the joined relation
Client-Server strategy
• client: evaluate Co and send tid of tuples in result to server
• server: join input with Fs, evaluate Cs, and return result to client
• client: join result from server with Fo and evaluate Cso
Data Protection in Outsourcing Scenarios
29/45
Server-client strategy – Example
q = SELECT SSN, DoB
FROM Patient
WHERE (Treatment = “antibiotic”)
AND (Job = “nurse”)
AND (Name = Illness)
Co={Treatment = “antibiotic”}
Cs={Job = “nurse”}
Cso={Name = Illness}
qs = SELECT tid,Name,DoB
FROM F s
WHERE Job = “nurse”
qso = SELECT SSN, DoB
FROM F o JOIN r s
ON F o.tid=r s.tid
WHERE (Treatment = “antibiotic”) AND (Name = Illness)
Data Protection in Outsourcing Scenarios
30/45
Client-server strategy – Example
q = SELECT SSN, DoB
FROM Patient
WHERE (Treatment = “antibiotic”)
AND (Job = “nurse”)
AND (Name = Illness)
Co={Treatment = “antibiotic”}
Cs={Job = “nurse”}
Cso={Name = Illness}
qo = SELECT tid
FROM F o
WHERE Treatment = “antibiotic”
qs = SELECT tid,Name,DoB
FROM F s JOIN r o ON F s.tid=r o.tid
WHERE Job = “nurse”
qso = SELECT SSN, DoB
FROM F o JOIN r s ON F o.tid=r s.tid
WHERE Name = Illness
Data Protection in Outsourcing Scenarios
31/45
Server-client vs client-server strategies
• If the storage server knows or can infer the query
◦ Client-Server leaks information: the server infers that some tuples
are associated with values that satisfy Co
• If the storage server does not know and cannot infer the query