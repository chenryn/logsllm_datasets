# Data Protection in Outsourcing Scenarios: Issues and Directions

## Authors
Pierangela Samarati and Sabrina De Capitani di Vimercati

## Abstract
This presentation, delivered at the 3rd International Workshop on Autonomous and Spontaneous Security (SETOP 2010), addresses the challenges and potential solutions for data protection in outsourcing scenarios. The focus is on ensuring that sensitive data remains protected when stored and processed by third-party servers.

## 1. Motivation

### 1.1 Recent Technological Advancements
Recent advances in communications and information technology have led to several emerging scenarios, including:

- **Outsourcing (data and services)**: Data storage and service access through honest-but-curious servers.
- **Pervasive and ubiquitous computing**: Computing and communication services available anytime and anywhere.
- **Ambient intelligence**: Seamless support for various user activities and interactions within a controlled environment.
- **Cloud computing**: Internet-based access to data and applications shared among different clients.

### 1.2 Importance of Secure Data Storage
- **Availability and Security**: The ability to securely process and store sensitive data is becoming crucial.
- **Remote Storage**: Data will be stored in remote systems, potentially moving between different locations and distributed across multiple protection domains (e.g., different data centers).
- **Access Control**: Data should be accessible only to authorized parties and managed according to specific restrictions on storage and usage.

## 2. Issues to be Addressed

- **Data Protection**
- **Query Execution**
- **Private Access**
- **Data Integrity and Correctness**
- **Access Control Enforcement**
- **Support for Selective Write Privileges**
- **Data Publication and Utility**
- **Private Collaborative Computation**

## 3. Data Protection: Fragmentation and Encryption

### 3.1 Challenges with Encryption
- **Query Evaluation**: Encryption can make query evaluation more expensive or even impossible.
- **Sensitive Associations**: Often, the association between values of different attributes (e.g., employee names and salaries) is more sensitive than the values themselves.

### 3.2 Solutions
- **Fragmentation and Encryption**: Recent solutions combine encryption with data fragmentation to protect sensitive associations.

## 4. Confidentiality Constraints

### 4.1 Definition
- **Confidentiality Constraints**: Represent privacy requirements as a set of constraints that capture the sensitivity of attributes and their associations.
- **Singleton Constraints**: Sensitive attributes whose values cannot be stored in the clear.
- **Non-Singleton Constraints**: Sensitive associations between values of given attributes that should not be released.

## 5. Outline of Solutions

### 5.1 Non-Communicating Pair of Servers
- **Aggarwal et al. (CIDR’05)**: Enforce confidentiality constraints by splitting information over two independent, non-communicating servers.
- **Decomposition**: Decompose the relation R into (R1, R2, E) where R1 and R2 include unique tuple IDs, and E is the set of encrypted attributes.

### 5.2 Multiple Fragments
- **Ciriani et al. (TISSEC’10)**: Allow for more than two non-linkable fragments to address the limitations of the two-server approach.
- **Optimization Criteria**: Consider factors such as the number of fragments, affinity among attributes, and query workload.

### 5.3 Departing from Encryption: Keep a Few
- **Ciriani et al. (ESORICS’09)**: Involve the data owner as a trusted party to maintain a limited amount of data, reducing the need for encryption.
- **Fragmentation**: Determine a fragmentation (Fo, Fs) where Fo is stored at the owner and Fs is stored at a storage server, ensuring completeness, confidentiality, and non-redundancy.

## 6. Query Evaluation

### 6.1 Strategies
- **Server-Client Strategy**:
  - Server evaluates conditions involving server-stored attributes.
  - Client joins the results with locally stored data and evaluates remaining conditions.
- **Client-Server Strategy**:
  - Client evaluates conditions involving client-stored attributes.
  - Server joins the results with server-stored data and evaluates remaining conditions.
  - Client finalizes the query by joining the results and evaluating any cross-conditions.

### 6.2 Example
- **Example Query**: `SELECT SSN, DoB FROM Patient WHERE (Treatment = "antibiotic") AND (Job = "nurse") AND (Name = Illness)`
- **Conditions**:
  - Co: `Treatment = "antibiotic"`
  - Cs: `Job = "nurse"`
  - Cso: `Name = Illness`

### 6.3 Comparison
- **Server-Client vs. Client-Server**:
  - If the server knows or can infer the query, the Client-Server strategy may leak information about tuples satisfying Co.
  - If the server does not know and cannot infer the query, the Server-Client strategy is more secure.

## References
- P. Samarati, S. De Capitani di Vimercati, “Data Protection in Outsourcing Scenarios: Issues and Directions,” in Proc. of the 5th ACM Symposium on Information, Computer and Communications Security (ASIACCS 2010), Beijing, China, April, 2010.
- G. Aggarwal, M. Bawa, P. Ganesan, H. Garcia-Molina, K. Kenthapadi, R. Motwani, U. Srivastava, D. Thomas, Y. Xu, “Two Can Keep a Secret: A Distributed Architecture for Secure Database Services,” in Proc. of the Conference on Innovative Data Systems Research Asilomar, CA, USA, January 4-7, 2005.
- V. Ciriani, S. De Capitani di Vimercati, S. Foresti, S. Jajodia, S. Paraboschi, P. Samarati, “Combining Fragmentation and Encryption to Protect Privacy in Data Storage,” in ACM Transactions on Information and System Security (TISSEC), vol. 13, no. 3, July, 2010.
- V. Ciriani, S. De Capitani di Vimercati, S. Foresti, S. Jajodia, S. Paraboschi, P. Samarati, “Keep a Few: Outsourcing Data while Maintaining Confidentiality,” in Proc. of the 14th European Symposium On Research In Computer Security (ESORICS 2009), Saint Malo, France, September 21-25, 2009.