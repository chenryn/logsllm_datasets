User: I am currently engaged in a project which has the following requirements. 

The application is written in Python, 
The Application has two threads running at any instance, one is the 'server' and the other is the 'app-logic'. 
The server listens on port 6000 (or any such custom port) and reads the incoming message (which is plain text commands), then passes that message to app-logic,which then processes the input, creates an output, and then passes the outbound message to the server. 
The server then writes to the port 7000 of the client(or any such fixed port, the client is specially made to read from their aforementioned port)

So far I have tried The Google-App-Engine and let it go because of issues regarding Threading. I tried OpenShift and they did not support binding to a custom port. They only supported binding to port 8080 (which is fine), but to that, they had forwarded traffic from somewhere else. So as it turns out, the 'server' in my application reads the inbound stream is from a different port of the same machine that I have been allocated for the site, and since the messages are not HTTP format, I have no way of writing back to the client. 
Is there any PaaS that supports an app of this nature?? 
Update: I have finished the project some time  back using Openshift. It was a piece of cake to work around this problem that I had once we use a third party messaging service such as pubnub or pusher.
Assistant: You can also bind to arbitrary ports as long as you either want to talk out on that port or want to only consume it internally. For example some people write IRC bots using OpenShift, which goes out on port 6666 or 6667. If you want to have something listening to requests that come from outside openshift then you can only bind to 8080