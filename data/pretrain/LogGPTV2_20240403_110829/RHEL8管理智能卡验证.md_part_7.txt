您必须：
::: itemizedlist
-   安装 `gnutls-utils`{.literal} 软件包，帮助您管理证书。
-   安装 `opensc`{.literal} 软件包，它提供一组库和实用工具来使用智能卡。
-   启动与智能卡读取器通信的 `pcscd`{.literal} 服务。
:::
::: orderedlist
**流程**
1.  安装 `opensc`{.literal} 和 `gnutls-utils`{.literal} 软件包：
    ``` literallayout
    # dnf -y install opensc gnutls-utils
    ```
2.  启动 `pcscd`{.literal} 服务。
    ``` literallayout
    # systemctl start pcscd
    ```
:::
验证 `pcscd`{.literal} 服务是否已启动并在运行。
:::
::: section
::: titlepage
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#storing-a-certificate-on-the-smart-card_configuring-and-importing-local-certificates-to-a-smart-card}在智能卡中存储证书 {.title}
:::
本节论述了使用 `pkcs15-init`{.literal} 工具配置智能卡，帮助您配置：
::: itemizedlist
-   擦除智能卡
-   设置新的 PIN 和可选的 PIN Unblocking Keys（PUKs）
-   在智能卡上创建新插槽
-   在插槽存储证书、私钥和公钥
-   锁定智能卡设置（有些智能卡需要这种类型）
:::
::: itemizedlist
**先决条件**
-   已安装 `opensc`{.literal} 软件包，其中包含 `pkcs15-init`{.literal}
    工具。
    详情请查看[安装用于管理和使用智能卡的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth){.link}。
-   该卡插入读卡器并连接到计算机。
-   您有可保存在智能卡中的私钥、公钥和证书。在此过程中，`testuser.key`{.literal}、`testuserpublic.key`{.literal}
    和 `testuser.crt`{.literal} 是用于私钥、公钥和证书的名称。
-   您当前的智能卡用户 PIN 和 Security Officer PIN（SO-PIN）
:::
::: orderedlist
**流程**
1.  擦除智能卡并使用您的 PIN 验证自己：
    ``` literallayout
    $ pkcs15-init --erase-card --use-default-transport-keys
    Using reader with a card: Reader name
    PIN [Security Officer PIN] required.
    Please enter PIN [Security Officer PIN]:
    ```
    这个卡已经被清除。
2.  初始化智能卡，设置您的用户 PIN 和 PUK，以及您的安全响应 PIN 和 PUK：
    ``` literallayout
    $ pkcs15-init --create-pkcs15 --use-default-transport-keys \
        --pin 963214 --puk 321478 --so-pin 65498714 --so-puk 784123
    Using reader with a card: Reader name
    ```
    `pcks15-init`{.literal} 工具在智能卡上创建新插槽。
3.  为插槽设置标签和验证 ID：
    ``` literallayout
    $ pkcs15-init --store-pin --label testuser \
        --auth-id 01 --so-pin 65498714 --pin 963214 --puk 321478
    Using reader with a card: Reader name
    ```
    标签设置为人类可读值，本例中为
    `testuser`{.literal}。`auth-id`{.literal}
    必须是两个十六进制值，在本例中设为 `01`{.literal}。
4.  在智能卡的新插槽中存储并标记私钥：
    ``` literallayout
    $ pkcs15-init --store-private-key testuser.key --label testuser_key \
        --auth-id 01 --id 01 --pin 963214
    Using reader with a card: Reader name
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您为 `--id`{.literal}
    指定的值在存储您的私钥和证书时必须相同。如果没有为 `--id`{.literal}
    指定值，则更复杂的值由工具计算，因此更易于定义您自己的值。
    :::
5.  在智能卡上的新插槽中存储并标记该证书：
    ``` literallayout
    $ pkcs15-init --store-certificate testuser.crt --label testuser_crt \
        --auth-id 01 --id 01 --format pem --pin 963214
    Using reader with a card: Reader name
    ```
6.  （可选）在智能卡上新插槽中保存并标记公钥：
    ``` literallayout
    $ pkcs15-init --store-public-key testuserpublic.key
        --label testuserpublic_key --auth-id 01 --id 01 --pin 963214
    Using reader with a card: Reader name
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果公钥与私钥和/或证书对应，您应该指定与私钥和/或证书相同的 ID。
    :::
7.  （可选）有些智能卡要求您通过锁定设置来完善卡：
    ``` literallayout
    $ pkcs15-init -F
    ```
    此时您的智能卡在新创建的插槽中包含证书、私钥和公钥。您还创建了您的用户
    PIN 和 PUK，以及安全响应 PIN 和 PUK。
:::
:::
::: section
::: titlepage
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#configuring-ssh-access-using-smart-card-authentication_configuring-and-importing-local-certificates-to-a-smart-card}使用智能卡验证配置 SSH 访问 {.title}
:::
SSH 连接需要身份验证。您可以使用密码或证书。本节描述：
::: itemizedlist
-   使用保存在智能卡中的证书启用验证所需的配置
-   使用 `authselect`{.literal} 工具设置删除时的锁定
:::
取出卡时进行锁定会强制在智能卡被取出后注销用户的登陆。
有关使用 `authselect`{.literal} 配置智能卡的详情，请参考 [使用
authselect
配置智能卡](#configuring-smart-cards-using-authselect_managing-smart-card-authentication.html#configuring-smart-card-authentication-to-enable-user-password-authentication_configuring-smart-cards-using-authselect "启用用户密码验证来配置智能卡验证"){.link}。
::: itemizedlist
**先决条件**
-   该智能卡包含您的证书和私钥。
-   该卡插入读卡器并连接到计算机。
-   已安装并配置了 SSSD。
-   您的用户名与证书的 SUBJECT 中的通用名称(CN)或用户 ID(UID)匹配。
-   `pcscd`{.literal} 服务正在您的本地计算机上运行。
    详情请查看[安装用于管理和使用智能卡的工具](#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#installing-tools-for-managing-and-using-smart-cards_configuring-and-importing-local-certificates-to-a-smart-card "安装用来管理和使用智能卡的工具"){.link}。
:::
::: orderedlist
**流程**
1.  在使用智能卡验证的用户主目录中为 SSH 密钥创建新目录：
    ``` literallayout
    # mkdir /home/example.user/.ssh
    ```
2.  使用 `opensc`{.literal} 库运行 `ssh-keygen -D`{.literal}
    命令，以检索智能卡上私钥对的现有公钥，并将其添加到用户的 SSH
    密钥目录的 `authorized_keys`{.literal} 列表中，以使用智能卡验证启用
    SSH 访问。
    ``` literallayout
    # ssh-keygen -D /usr/lib64/pkcs11/opensc-pkcs11.so >> ~example.user/.ssh/authorized_keys
    ```
3.  SSH 需要 `/.ssh`{.literal} 目录和 `authorized_keys`{.literal}
    文件进行正确的访问。要设置或更改访问权限，请输入：
    ``` literallayout
    # chown -R example.user:example.user ~example.user/.ssh/
    # chmod 700 ~example.user/.ssh/
    # chmod 600 ~example.user/.ssh/authorized_keys
    ```
4.  另外，显示密钥：
    ``` literallayout
    # cat ~example.user/.ssh/authorized_keys
    ```
    终端会显示密钥。
5.  验证 `/etc/sssd/sssd.conf`{.literal}
    文件中是否启用了智能卡身份验证：
    在 `[pam]`{.literal} 部分中，启用 pam 证书身份验证模块：pam
    `_cert_auth = True`{.literal}
    如果 `sssd.conf`{.literal}
    文件尚未创建，您可以通过将以下脚本复制到命令行来创建最小功能配置：
    ``` literallayout
    # cat > /etc/sssd/sssd.conf 
# []{#configuring-smart-cards-using-authselect_managing-smart-card-authentication.html#configuring-smart-cards-using-authselect_managing-smart-card-authentication}第 5 章 使用 authselect 配置智能卡 {.title}
:::
这部分论述了如何配置智能卡以达到以下目的之一：
::: itemizedlist
-   启用密码和智能卡验证
-   禁用密码并启用智能卡验证
-   在删除时启用锁定
:::
::: itemizedlist
**先决条件**
-   已安装 authselect
    authselect 工具在 Linux
    主机中配置用户验证，您可以使用它配置智能卡验证参数。有关 authselect
    的详情，请参考[使用 authselect
    配置用户身份验证](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_authentication_and_authorization_in_rhel/index#configuring-user-authentication-using-authselect_configuring-authentication-and-authorization-in-rhel){.link}。
-   RHEL 8 支持的智能卡或者 USB 设备
    详情请参阅 [RHEL8
    中的智能卡支持](https://access.redhat.com/articles/4253861){.link}。
:::
::: section
::: titlepage
# []{#configuring-smart-cards-using-authselect_managing-smart-card-authentication.html#certificates-eligible-for-smart-cards_configuring-smart-cards-using-authselect}适用于智能卡的证书 {.title}
:::
在使用 `authselect`{.literal}
配置智能卡前，您必须将证书导入到您的卡中。您可以使用以下工具生成证书：
::: itemizedlist
-   Active Directory(AD)
-   Identity Management (IdM)
    有关如何创建 IdM
    证书的详情，请参阅[请求新用户证书并将其导出到客户端](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#requesting-and-exporting-a-user-certificate_dc-web-ui-auth){.link}。
-   红帽认证系统(RHCS)
    详情请参阅[使用企业安全客户端管理智能卡](https://access.redhat.com/documentation/en-us/red_hat_certificate_system/10/html/managing_smart_cards_with_the_enterprise_security_client/index){.link}。
-   本地认证认证机构。如果用户不是某个域的一部分或用于测试,您可以使用本地认证认证机构生成的证书。
    有关如何创建并导入本地证书到智能卡的详情，请参阅[配置和导入本地证书到智能卡](#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#creating-local-certificates_configuring-and-importing-local-certificates-to-a-smart-card "创建本地证书"){.link}。
:::
:::
::: section
::: titlepage