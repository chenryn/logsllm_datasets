Full-text search in PostgreSQL in
milliseconds
Oleg Bartunov
(thanks 1C for support)
Alexander Korotkov
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
FTS in PostgreSQL
Full integration with PostgreSQL
●
27 built-in configurations for 10 languages
●
Support of user-defined FTS configurations
●
Pluggable dictionaries ( ispell, snowball, thesaurus ),
●
parsers
Relevance ranking
●
GiST and GIN indexes with concurrency and recovery
●
support
Rich query language with query rewriting support‏
●
It's cool, but we want faster FTS !
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
FTS in PostgreSQL
OpenFTS — 2000, Pg as a storage
●
GiST index — 2000, thanks Rambler
●
Tsearch — 2001, contrib:no ranking
●
Tsearch2 — 2003, contrib:config
●
GIN —2006, thanks, JFG Networks
●
FTS — 2006, in-core,
●
thanks,EnterpriseDB
E-FTS — Enterprise FTS, thanks ???
●
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
ACID overhead is really big :(
Foreign solutions: Sphinx, Solr,
●
Lucene....
Crawl database and index (time lag)
–
No access to attributes
–
Additional complexity
–
BUT: Very fast !
–
Can we improve native FTS ?
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
Can we improve native FTS ?
156676 Wikipedia articles:
postgres=# explain analyze
SELECT docid, ts_rank(text_vector, to_tsquery('english', 'title')) AS rank
FROM ti2
WHERE text_vector @@ to_tsquery('english', 'title')
ORDER BY rank DESC HEAP IS SLOW
LIMIT 3; 400 ms !
Limit (cost=8087.40..8087.41 rows=3 width=282) (actual time=433.750..433.752 rows=3 loops=1)
-> Sort (cost=8087.40..8206.63 rows=47692 width=282)
(actual time=433.749..433.749 rows=3 loops=1)
Sort Key: (ts_rank(text_vector, '''titl'''::tsquery))
Sort Method: top-N heapsort Memory: 25kB
-> Bitmap Heap Scan on ti2 (cost=529.61..7470.99 rows=47692 width=282)
(actual time=15.094..423.452 rows=47855 loops=1)
Recheck Cond: (text_vector @@ '''titl'''::tsquery)
-> Bitmap Index Scan on ti2_index (cost=0.00..517.69 rows=47692 width=0)
(actual time=13.736..13.736 rows=47855 loops=1)
Index Cond: (text_vector @@ '''titl'''::tsquery)
Total runtime: 433.787 ms
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
Can we improve native FTS ?
156676 Wikipedia articles:
postgres=# explain analyze
SELECT docid, ts_rank(text_vector, to_tsquery('english', 'title')) AS rank
FROM ti2
WHERE text_vector @@ to_tsquery('english', 'title')
ORDER BY text_vector> Index Scan using ti2_index on ti2 (cost=20.00..26256.30 rows=47692 width=282)
(actual time=18.375..18.425 rows=3 loops=1)
Index Cond: (text_vector @@ '''titl'''::tsquery)
Order By: (text_vector > 1034, 2, 2 (4 bytes)
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
Fast scan
entry1 && entry2
Visiting 3 pages instead of 7
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
ORDER BY using index
Before After
SELECT itemid, title SELECT itemid, title
FROM items FROM items
WHERE fts @@ to_tsquery('english', 'query') WHERE fts @@ to_tsquery('english', 'query')
ORDER BY ORDER BY
ts_rank(fts, to_tsquery('english', 'query')) DESC fts > Index Scan using test_idx on public.test (cost=0.00..309.25 rows=1000 width=16)
(actual time=11.341..103.422 rows=10 loops=1)
Output: x, y, slow_func(x, y)
Total runtime: 103.524 ms
(5 rows)
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague
After
test=# EXPLAIN (ANALYZE, VERBOSE) SELECT * FROM test ORDER BY slow_func(x,y)
LIMIT 10;
QUERY PLAN
-------------------------------------------------------------------------------------------------------------------
Limit (cost=0.00..3.09 rows=10 width=16) (actual time=0.062..0.093 rows=10 loops=1)
Output: x, y
-> Index Scan using test_idx on public.test (cost=0.00..309.25 rows=1000 width=16)
(actual time=0.058..0.085 rows=10 loops=1)
Output: x, y
Total runtime: 0.164 ms
(5 rows)
Oleg Bartunov Full-text search in PostgreSQL in milliseconds
Alexander Korotkov PGConf.EU-2012, Prague