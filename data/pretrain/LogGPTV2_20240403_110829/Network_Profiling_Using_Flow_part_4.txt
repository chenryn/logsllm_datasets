--protocol=6 --ack-flag=1 --packets=4- \
--dport=80,8000,8080,443,1935,1755,554 \
--pass=stdout \
| rwset --sip-file=tcp_clients.set
2. Add in the UDP traffic to the ports in Table 8 using the following command.
$ rwfilter sample.rw --type=out,outweb \
--protocol=17 --dport=1755,554 \
--pass=stdout \
| rwset --sip-file=udp_clients.set
3. Listing legitimate TCP-only (flows of four packets or more with an ACK flag) and UDP flows
separately ignores some scanning traffic. Looking at outbound rather than inbound traffic also
CMU/SEI-2012-TR-006 | 19
helps with this. After both lists are created, combine them for analysis, as in the following
example.
$ rwsettool --union tcp_clients.set udp_clients.set \
--output-path=web_clients.set
$ rwsetcat --count web_clients.set
31
The output from the above command shows that the sample network has 31 web clients. Look at
only the hosts with at least 1% of the client web traffic on the network because most hosts will act
as web clients at some point. Even DNS, web, and other servers often have some web traffic from
updates or configuration changes; but this traffic is usually minimal. When using a proxy, there
should be very few internal IPs that fall into this category because the client traffic will be
funneled through these devices. If this is not the case, it may be useful to try profiling the
workstations separately from other hosts (separate them based on traffic volume).
4. The bulk of the packets for client web traffic will be inbound. Therefore, filter incoming traffic
if possible.
$ rwfilter sample.rw --type=in,inweb \
--dipset=web_clients.set --sport=80,8080,8000,443,1935,1755,554 \
--pass=stdout \
| rwstats --fields=dip --bytes --percentage=1
INPUT: 2973484 Records for 31 Bins and 168273056846 Total Bytes
OUTPUT: Top 2 bins by Bytes (1% == 1682730568)
dIP| Bytes| %Bytes| cumul_%|
203.0.113.33| 154723380928| 91.947804| 91.947804|
203.0.113.220| 12334655077| 7.330143| 99.277947|
The above command results in a list of two IP addresses accounting for 99.27% of the client web
traffic. Update the profile to include only the results from filtering incoming traffic.
5. If it is not possible to filter inbound traffic, use the following filter on outbound traffic. This
filter checks traffic going from the web clients to external web servers, rather than traffic coming
from external web servers to the internal web clients as the previous filter does.
$ rwfilter sample.rw --type=out,outweb \
--sipset=web_clients.set --dport=80,8080,8000,443,1935,1755,554 \
--pass=stdout \
| rwstats --fields=sip --percentage=1
INPUT: 2921867 Records for 32 Bins and 2921867 Total Records
OUTPUT: Top 2 bins by Records (1% == 29218)
sIP| Records| %Records| cumul_%|
203.0.113.33| 2625228| 89.847621| 89.847621|
203.0.113.220| 274448| 9.392898| 99.240520|
6. Next, associate each IP address with the ports and protocols with which it is interacting using
the command in the following example, which also shows the output. Place these addresses and
their associated ports into the profile table.
CMU/SEI-2012-TR-006 | 20
$ rwfilter sample.rw --type=out,outweb \
--sipset=web_clients.set --dport=80,8000,8080,443,1935,1755,554 \
--pass=stdout \
| rwuniq --fields=sip,dport,protocol
sIP|dPort|pro| Records|
203.0.113.220| 80| 6| 235334|
203.0.113.220| 443| 6| 38733|
203.0.113.220| 554| 6| 5|
203.0.113.220| 8080| 6| 95|
203.0.113.220| 1935| 6| 281|
203.0.113.33| 1935| 6| 128|
203.0.113.33| 443| 6| 251473|
203.0.113.33| 8000| 6| 1|
203.0.113.33| 8080| 6| 895|
203.0.113.33| 80| 6| 2372731|
The sample network has web clients as shown in Table 9, which were added to the full profile.
Table 9: Potential Web Clients for the Sample Network
Internal IP Internal External External Port Protocol
Port IP
203.0.113.220 * * 80, 443, 554, 1935, 8080 6
203.0.113.33 * * 80, 443, 1935, 8000, 8080 6
Follow the next section to carefully validate this list of potential web clients.
5.2.2 How to Validate Findings
Web clients are more difficult to validate than web servers. Look for three types of web clients:
proxy servers, NAT gateways, and directly connected workstations that do not use a proxy or
NAT server. This requires looking at inbound traffic as well as outbound. Some of the addresses
in the list might not be web clients at all.
The different types of web clients can be determined based on several characteristics. The first are
traffic volume and timing. Directly connected workstations typically have traffic patterns that
match the schedule of the organization. As with the sample network, many organizations have no
after-hours or weekend traffic, and their daily traffic volume tends to be very small. Web
gateways (NAT servers) have a high volume of traffic. Web proxy servers have a medium to high
volume of traffic.
For the sample network, the traffic volume for the web clients is as follows.
$ rwfilter sample.rw --type=out,outweb \
--sipset=web_clients.set --dport=80,8080,8000,443,1935,1755,554 \
--pass=stdout \
| rwstats --fields=sip --bytes --count=2
INPUT: 3029615 Records for 15228 Bins and 168278493869 Total Bytes
OUTPUT: Top 2 Bins by Bytes
sIP| Bytes| %Bytes| cumul_%|
203.0.113.33| 154723380928| 91.944833| 91.944833|
203.0.113.220| 12334655077| 7.329906| 99.274739|
CMU/SEI-2012-TR-006 | 21
Based on traffic volume alone, one can make an educated guess that the top IP address
(203.0.113.33) is a web gateway and the other is a web proxy server.
Another characteristic to check is whether the client is running any other services. Client
workstations usually do not have any services running. Web gateways are likely to look as if they
host services because they are often gateways for the rest of the services on the network. A client
that looks as if it is hosting many services could also be a VPN gateway. Web proxies are not as
likely to host other services unless they come with services configured by default.
To keep the list size manageable, look for common services such DNS, FTP, SSH, SMTP, HTTP,
and HTTPS. The following output shows the command and results for looking for common
services.
$ rwfilter sample.rw --type=out,outweb \
--sipset=web_clients.set --sport=20,21,22,25,53,80,8000,8080,443 \
--pass=stdout \
| rwuniq --fields=sip,sport
sIP|sPort| Records|
203.0.113.220| 8080| 7|
203.0.113.220| 8000| 7|
203.0.113.33| 20| 1|
203.0.113.33| 443| 492|
203.0.113.33| 21| 27|
203.0.113.33| 8000| 44|
203.0.113.33| 8080| 58|
203.0.113.33| 22| 7|
203.0.113.33| 80| 42|
Because 203.0.113.33 makes connections over so many ports, as the example’s output shows,
there is a good chance that it is actually a multipurpose gateway or a VPN gateway. We removed
it from the web clients list and show how to profile it later in this report.
There may be a fair amount of high port traffic, indicating that clients are using various host-
based applications or streaming media. Also, most client operating systems use ephemeral ports in
a sequential fashion within a certain range. For example, if most clients on the network are
Windows 7 machines that use the range 49152 to 65535, look for hosts using ports starting on the
lower end to make connections and working their way up to port 65535.
If plotting software is available, it may help to view ephemeral port usage over time. This will
allow you to quickly see sequential port usage and what range is being used. This is a method
often referred to as “passive fingerprinting.”
After we checked traffic volume, services, and port usage of the potential web clients on the
sample network, we validated the one client left on the list as an actual web proxy server.
5.2.3 Anomalies
Almost all machines at some point generate a small amount of web traffic, whether they are
servers, gateways, or local hosts. Client web traffic coming from machines that serve another
purpose can be ignored because it does not need to be part of the profile. If this traffic is of
CMU/SEI-2012-TR-006 | 22
concern for security reasons, look into the flows in more detail, or check firewall/proxy logs and
configurations.
Here is a more detailed description of some of the anomalies mentioned in Section 5.2.2 about
validation.
• directly connected workstations hosting services
Client operating systems come with certain services preinstalled. Sometimes those services
are left on by default. So, just because services are hosted at an address does not necessarily
indicate that the machine is a server or gateway. Look at the specific service being hosted
and the amount of traffic connecting to it.
• servers with client web traffic
Though servers sometimes use web traffic to get their updates or configuration changes, this
traffic is usually minimal and received from a small number of external addresses. If this is
the only client web traffic to an address in the list, that address probably should not be listed
as a web client.
• other types of traffic over web ports
Just because there is traffic at the typical web ports does not mean it is HTTP or streaming
traffic. Any service can be configured to use those ports. This is often done for application
ease of use or to get around firewall policies.
5.2.4 Results
The sample network had one web client that was added to the profile as listed in Table 10.
Table 10: Final Web Clients for the Sample Network
Proto. Internal Port External IP External Port External Name Comments
203.0.113.220
6 * * 80, 443, 554, 1935, 8080 * Web gateway
CMU/SEI-2012-TR-006 | 23
5.3 Email
Email services are provided through several different protocols. The most common protocol for
sending mail across the internet is Simple Mail Transfer Protocol (SMTP) on TCP port 25. SMTP
traffic is mostly server-to-server traffic. Email clients, desktop clients in particular, do not use
SMTP but instead submit emails to the SMTP server at port 587 to be forwarded by the server. To
receive messages, clients use Post Office Protocol (POP), Internet Message Access Protocol
(IMAP), or web mail.
Email protocols allow for encryption over the standard TCP ports outlined above. However, some
additional ports are set aside for encrypted email sessions. These are less commonly used but may
still show up on networks. Email ports are listed in Table 11.
Table 11: Email Ports and Protocols
Protocol Port Encrypted Session Port
SMTP 25 465
POP3 110 995
IMAP 143 993
MSA 587 None
5.3.1 The Process
1. Using the following command, start by looking for email servers, which will send traffic from
the SMTP, POP3, and IMAP ports listed in Table 11. Look for outgoing traffic with a source TCP
equal to those ports and an IP protocol of 6. TCP port 587 (MSA) is not used here because it is
only used with inbound traffic to servers.
$ rwfilter sample.rw --type=out \
--protocol=6 --ack-flag=1 --packets=4- --sport=25,465,110,995,143,993 \
--pass=stdout \
| rwset --sip-file=smtp_servers.set
The results of the above command on the sample network are listed in Table 12.
Table 12: Potential Email Servers for the Sample Network
Internal IP Internal Port External IP External Port
203.0.113.231 25 * *
203.0.113.195 25 * *
203.0.113.221 25 * *
203.0.113.220 25 * *
203.0.113.222 25 * *
Because the sensors for the sample network are located on the internet-facing side of the network,
no IMAP or POP traffic is seen between internal clients and servers. Only server SMTP traffic is
seen by the sensor.
2. Now look for potential email clients. Depending on where the sensors are placed, client traffic
may not cross the flow collectors because it only has to go as far as the mail server on the
CMU/SEI-2012-TR-006 | 24
network. This a good test to see if any clients are sending email directly outside of the network
without using standard mail services.
3. Desktop email clients typically submit messages to TCP port 587 and collect them from TCP
ports 110 and 143 (or encrypted ports 995 and 993), so filter outbound traffic for these ports using
the following command.
$ rwfilter sample.rw --type=out \
--protocol=6 --packets=4- --ack-flag=1 --dport=110,143,587,995,993 \
--pass=stdout \
| rwset --sip-file=email_clients.set
The sample network did not have any email clients visible in the day-long sample data set, a
strong indicator that its internal hosts are correctly set up to get their (corporate) email through the
network’s email servers. It could also mean that hosts are getting all their email through web mail.
5.3.2 How to Validate Findings
Once again, it is important to validate the results for the email servers and clients. Potential
servers sending mail out of the network to TCP port 25 are almost guaranteed to be servers. This
can be thought of as an email server’s way of acting as client to other servers on the internet.
Filtering for this traffic on the sample network validates two addresses. The following example
shows the command results.
$ rwfilter sample.rw --type=out \
--protocol=6 --packets=4- --ack-flag=1 --dport=25,465 \
--pass=stdout \
| rwuniq --fields=sip
sIP| Records|
203.0.113.222| 10479|
203.0.113.231| 74852|
Servers can also be validated using nslookup for each of the addresses in the list or using the MX
record of the domain. Obtain the MX record by typing the following command:
nslookup –type=MX example.org
The result should be a list of servers, like the one below, that relay email to and from the domain.
Non-authoritative answer:
example.org mail exchanger = 10 checkov.example.org.
example.org mail exchanger = 20 sulu.example.org.
Use this list of mail exchanger servers as a guide to help with validation. Using a regular DNS
lookup on each address in the server list can help you validate simply by looking at the name of
the server (all externally facing SMTP servers will have a DNS record and associated IP address).
Telnetting to each IP address at port 25 may also produce a banner message hinting at the purpose
of a machine. These messages sometimes contain error information that is specific to a particular
operating system or service running on the remote machine.
As a result of using these methods, all but one of the addresses was verified as an email server—
203.0.113.220, which was listed in the previous section as a gateway for web client traffic. It
CMU/SEI-2012-TR-006 | 25
looks as if this address may also be proxying email traffic, which indicates that it is probably a
main gateway for all client traffic.
Email servers almost always come with a default web mail application. This means that these
email servers are also basically acting as web servers. Unfortunately, these web servers are not
usually discovered when filtering for web servers (as done in Section 5.1) because of their low
traffic volume. After the email servers have been validated, test each one for a running web mail
application by going to each server’s address in a web browser. Try this on both ports 80 and 443.
As is often the case, the sample network was running web applications on two of its email servers.
Both were open to connections over HTTP, meaning email login credentials were being sent in
plain text.
It is slightly more difficult to validate client email traffic because there is not usually any external
information to use in the validation. Try searching the web for a particular client address to see if
it shows up in any email headers. Also, try looking at the traffic in more detail to see if it matches
expected client traffic.
5.3.3 Anomalies
Email service is probably the most straightforward service discussed in this report. However,
there are some anomalies to be aware of.
• nondedicated email servers
Email servers do not necessarily have to be dedicated machines. They can, and often do, run
in parallel with other services, especially web services. So, it is acceptable if an IP address of
an email server has already been listed as a web server because it is just one machine running
several different services.
• clients acting as servers
Because email services do not have to be on dedicated servers, any host can run an email
server, even a client. If an IP address in a client subnet is listed as a server or an IP address is
listed as both a server and a client, this is probably what is happening. These servers will
likely have a very low SMTP traffic volume compared to the other servers. Check policies
on clients hosting such services and firewall configurations. (On most networks, only certain
IPs should be allowed to send and receive SMTP traffic.)
• desktop clients sending SMTP messages
It is possible for client machines to be configured to send their messages to port 25 (SMTP)
rather than port 587 (MSA). Investigate any clients that bypass the internal email
infrastructure by sending messages directly to the internet.
CMU/SEI-2012-TR-006 | 26