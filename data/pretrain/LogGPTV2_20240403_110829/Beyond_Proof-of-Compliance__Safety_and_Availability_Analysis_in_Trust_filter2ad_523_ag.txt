P4 = {A.dk ←− A.d(cid:2)
k.pk1, A.d(cid:2)
+ + 1 ≤ k ≤ n, dk = pk1 ∧ pk2 ∧ pk3}
P5 = {A.pi ←− A | 1 ≤ i ≤ s}
k ←− A.pk2 .pk3 |
1.c1,
(cid:15)−1.c(cid:15)−1, A.c(cid:2)
(cid:15)−2←− A.c(cid:2)
A.c(cid:2)
Let R be the restriction rule such that all the A.pi’s are g-
restricted and s-unrestricted, and all other roles mentioned
in P are g/s-restricted.
In every reachable state, the deﬁnitions of some A.pi’s
are removed, which correspond to assigning false to some
In every reachable state, A.c and A.d either
of the pi’s.
includes only A or is empty. A.c includes A if and only
if the corresponding truth assignment makes c1 ∧ ··· ∧ cm
true, and A.d includes A if and only the corresponding truth
assignment makes (dm+1 ∨ ··· ∨ dn) true. Therefore, A.c
contains A.d if and only if ψ is valid.
Theorem 4.5: Containment analysis in SRT is in coNEXP.
Proof. Given P and R, if a query X.u (cid:20) A.r is not nec-
essary, i.e., X.u does not contain A.r, then there exists a
and a principal E such that SP(P(cid:2)) |=
reachable state P(cid:2)
m(A, r, E) and SP(P(cid:2)) (cid:25)|= m(X, u, E). From Lemma A.3,
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
15
Given such a P(cid:2)
we can assume, without lose of generality, that P(cid:2) −P con-
sists of only type-1 statements and P(cid:2)
uses the same role
names as P.
and E, we show that one can con-
that has size exponential in P and
struct another state P(cid:2)(cid:2)
SP(P(cid:2)(cid:2)) |= m(A, r, E) and SP(P(cid:2)) (cid:25)|= m(X, u, E). The
way we construct P(cid:2)(cid:2)
is through collapsing equivalent prin-
cipals in P(cid:2)
into one, to be made precise as follows. Let
SigRoles(P,P(cid:2),Q) be {X.u} ∪ {A.r1 | A.r←− A.r1.r2 ∈
P ∩ P(cid:2)} ∪ {B1.r1, B2.r2 | A.r ←− B1.r1 ∩ B2.r2 ∈
P ∩ P(cid:2)}. Deﬁne a binary relation ≡ over the principals in
as follows: Y1 ≡ Y2 if one of the following two condi-
P(cid:2)
tions are satisﬁed: (1) Y1 = Y2; (2) Y1, Y2 (cid:25)∈ Principals(P)
and for every role Z.w ∈ SigRoles(P,P(cid:2),Q), SP(P(cid:2)) |=
m(Z, w, Y1) if and only if SP(P(cid:2)) |= m(Z, w, Y2). The re-
lation ≡ is easily seen to be an equivalence relation. For
each equivalence class, we pick one principal in it as a
unique representative; for a given principal Y , we use [Y ]
to denote the representative the equivalence class of Y . We
assume that [E] = E. P(cid:2)(cid:2)
as follows:
for each statement, replace all the principals with their rep-
resentatives, then remove duplicate statements.
Given P that has size N, clearly SigRoles(P,P(cid:2),Q) has
O(N) roles. Therefore, there are in total M = O(2O(N ))
principals in P(cid:2)
, these principals will result in O(M 2N)
new type-1 statements. Therefore, if a containment does
not hold, there exists a counter-example state that has size
exponential in P. Once the state is guessed correctly, it can
be veriﬁed in time polynomial in the size of the state. This
shows that the problem is in coNEXP. An obvious algorithm
that has double exponential time complexity is as follows:
ﬁrst collect SigRoles(P,P,Q) from X.u and all type-2 and
3 statements from P, and add one principal for each sub-
set of SigRoles(P,P,Q), then enumerate all reachable sub-
states to see whether a containment holds.
is constructed from P(cid:2)
It remains to prove that our construction of P(cid:2)(cid:2)
|= m(A, r, E) and SP(P(cid:2)(cid:2))
works,
(cid:25)|=
i.e.,
m(X, u, E).
To prove SP(P(cid:2)(cid:2)) |= m(A, r, E), we use induction to
prove the following claim: For any role Z.w in Roles(P(cid:2))
, if m(Z, w, Y ) ∈ TSP(P(cid:1))↑i, then SP(P(cid:2)(cid:2)) |=
and Y in P(cid:2)
m([Z], w, [Y ]). The basis is trivial, since TSP(P(cid:1)) ↑0= ∅.
Now consider the step. One of (m1), (m2), (m3), and
(m4) is used to derive m(Z, w, Y ) ∈ TSP(P(cid:1))↑i+1. Case
, [Z].w←−
(m1): Z.w←− Y ∈ P(cid:2)
; therefore, SP(P(cid:2)(cid:2)) |= m([Z], w, [Y ]). In the
[Y ] ∈ P(cid:2)(cid:2)
next three cases, a type-2, 3, or 4 statement A.r ←− e exist
. It must also exist in P, since P(cid:2) − P only has type-
in P(cid:2)
1 statements; therefore, principals in A.r ←− e are each in
their own equivalence class. The statement must also ex-
, since the equivalence substitution for A.r ←−
ist in P(cid:2)(cid:2)
e will not change the statement. Case (m2): Z.w ←−
Z1.w1 ∈ P(cid:2),P,P(cid:2)(cid:2)
and m(Z1, w1, Y ) ∈ TSP(P(cid:1))↑i. From
. By construction of P(cid:2)(cid:2)
that SP(P(cid:2)(cid:2))
induction hypothesis, SP(P(cid:2)(cid:2)) |= m([Z1], w1, [Y ]).
It
must be that [Z1] = Z1. The claim then follows from
(m2). Case (m3): Z.w ←− Z.w1.w2 ∈ P(cid:2),P,P(cid:2)(cid:2)
and m(Z, w1, F ), m(F, w2, Y ) ∈ TSP(P(cid:1)) ↑i.
It must
be that [Z] = Z. By induction hypothesis, SP(P(cid:2)(cid:2)) |=
m([Z], w1, [F ]), and SP(P(cid:2)(cid:2)) |= m([F ], w2, [Y ]). The
claim follows from (m3). Case (m4): Z.w ←− Z1.w1 ∩
Z2.w2 ∈ P(cid:2),P,P(cid:2)(cid:2)
and m(Z1, w1, Y ), m(Z2, w2, Y ) ∈
TSP(P(cid:1))↑i. This case is similar to (m2).
We now prove that SP(P(cid:2)(cid:2)) (cid:25)|= m(X, u, E), by prov-
ing the following claim: for any role Z.w ∈ Roles(P(cid:2)(cid:2))
and any principal Y in Principals(P(cid:2)(cid:2)), if m(Z, w, Y ) ∈
TSP(P(cid:1)(cid:1)) ↑i, then there exists Z(cid:2), Y (cid:2)
such that [Z(cid:2)] = Z
and [Y (cid:2)] = Y and SP(P(cid:2)) |= m(Z(cid:2), w, Y (cid:2)). Given this
claim, if SP(P(cid:2)(cid:2)) |= m(X, u, E), then there exists X(cid:2)
and
in Principals(P(cid:2)) such that [X(cid:2)] = X, [E(cid:2)] = E, and
E(cid:2)
SP(P(cid:2)) |= m(X(cid:2), u, E(cid:2)). Since X ∈ Principals(P), it
must be that X(cid:2) = X. And by deﬁnition of ≡, [E(cid:2)] = E
means that E is also a member of X.u, giving us a contra-
diction with our assumption on P(cid:2)
We now use induction to prove the claim. The basis
is trivial, since TSP(P(cid:1)(cid:1)) ↑0= ∅. Now consider the step.
One of (m1), (m2), (m3), and (m4) is used to derive
m(Z, w, Y ) ∈ TSP(P(cid:1)(cid:1)) ↑i+1. Case (m1): Z.w ←− Y ∈
, there exists Z(cid:2).w ←− Y (cid:2) ∈ P(cid:2)
P(cid:2)(cid:2)
such that [Z(cid:2)] = Z and [Y (cid:2)] = [Y ]. From this we have
SP(P(cid:2)) |= m(Z(cid:2), w, Y (cid:2)) by (m1). In the following three
cases, a type 2, 3, or 4 statement A.r ←− e of P(cid:2)(cid:2)
is
used; such a statement must be mapped from a type 2, 3,
4 statement in P(cid:2)
are also
in P and do not change in the mapping, A.r ←− e ∈
P ∩ P(cid:2)
and
m(Z1, w1, Y ) ∈ TSP(P(cid:1)(cid:1)) ↑i. From induction hypothesis,
SP(P(cid:2)) |= m(Z(cid:2)
1] = Z1 and [Y (cid:2)] = Y .
Because Z1 ∈ Principals(P), it must be that Z(cid:2)
1 = Z1.
The conclusion follows from (m2). Case (m3): Z.w ←−
Z.w1.w2 ∈ P(cid:2)(cid:2),P,P(cid:2)
and m(Z, w1, F ), m(F, w2, Y ) ∈
TSP(P(cid:1)(cid:1)) ↑i for some principal F . By induction hypothe-
sis, SP(P(cid:2)) |= m(Z, w1, F (cid:2)), m(F (cid:2)(cid:2), w2, Y (cid:2)) and [F (cid:2)] =
[F (cid:2)(cid:2)] = F . Since Z.w1 ∈ SigRoles(P,P(cid:2),Q), by deﬁnition
of ≡ applied to F (cid:2) ≡ F (cid:2)(cid:2)
, SP(P(cid:2)) |= m(Z, w1, F (cid:2)(cid:2)). The
claim follows from (m3). Case (m4): Z.w ←− Z1.w1 ∩
Z2.w2 ∈ P(cid:2)(cid:2),P,P(cid:2)
and m(Z1, w1, Y ), m(Z2, w2, Y ) ∈
TSP(P(cid:1)(cid:1))↑i. By induction hypothesis and the fact Z1, Z2 ∈
Principals(P), SP(P(cid:2)) |= m(Z1, w1, Y (cid:2)), m(Z2, w2, Y (cid:2)(cid:2))
and [Y (cid:2)] = [Y (cid:2)(cid:2)] = Y . By deﬁnition of ≡, SP(P(cid:2)) |=
m(Z2, w2, Y (cid:2)). Therefore, SP(P(cid:2)) |= m(Z, w, Y (cid:2)).
. Case (m2): Z.w ←− Z1.w1 ∈ P(cid:2)(cid:2),P,P(cid:2)
. Since all such statements in P(cid:2)
. By deﬁnition of P(cid:2)(cid:2)
.
1, w1, Y (cid:2)) and [Z(cid:2)
Observe that in the proof, only roles in the body of type-3
and 4 statements need to be collected. This may be used to
explain why containment in BRT is efﬁciently decidable.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
16
References
[1] Mart´ın Abadi. On SDSI’s linked local name spaces.
Journal of Computer Security, 6(1–2):3–21, 1998.
[2] Matt Blaze,
Joan Feigenbaum,
and Angelos D. Keromytis.
management system, version 2.
September 1999.
John Ioannidis,
The KeyNote trust-
IETF RFC 2704,
[3] Ajay Chander, Drew Dean, and John C. Mitchell. A
state-transition model of trust management and access
control.
In Proceedings of the 14th IEEE Computer
Security Foundations Workshop, pages 27–43. IEEE
Computer Society Press, June 2001.
[4] Dwaine Clarke, Jean-Emile Elien, Carl Ellison, Matt
Fredette, Alexander Morcos, and Ronald L. Rivest.
Certiﬁcate chain discovery in SPKI/SDSI. Journal of
Computer Security, 9(4):285–322, 2001.
[5] William F. Dowling and Jean H. Gallier. Linear-
time algorithms for testing the satisﬁability of proposi-
tional horn formulae. Journal of Logic Programming,
1(3):267–284, 1984.
[6] Carl Ellison, Bill Frantz, Butler Lampson, Ron Rivest,
Brian Thomas, and Tatu Ylonen. SPKI certiﬁcate the-
ory. IETF RFC 2693, September 1999.
[7] Michael R. Garey and David J. Johnson. Comput-
ers And Intractability: A Guide to the Theory of NP-
Completeness. W.H. Freeman and Company, 1979.
[8] Joseph Halpern and Ron van der Meyden. A logic for
SDSI’s linked local name spaces. Journal of Computer
Security, 9(1-2):47–74, 2001.
[9] Michael A. Harrison, Walter L. Ruzzo, and Jeffrey D.
Ullman. Protection in operating systems. Communi-
cations of the ACM, 19(8):461–471, August 1976.
[10] Somesh Jha and Thomas Reps.
Analysis of
SPKI/SDSI certiﬁcates using model checking. In Pro-
ceedings of the 15th IEEE Computer Security Founda-
tions Workshop, pages 129–144. IEEE Computer So-
ciety Press, June 2002.
[11] Butler W. Lampson. Protection.
In Proceedings of
the 5th Princeton Conference on Information Sciences
and Systems, 1971. Reprinted in ACM Operating Sys-
tems Review, 8(1):18-24, Jan 1974.
[12] Ninghui Li. Local names in SPKI/SDSI. In Proceed-
ings of the 13th IEEE Computer Security Foundations
Workshop, pages 2–15. IEEE Computer Society Press,
July 2000.
[13] Ninghui Li and John C. Mitchell. Datalog with
constraints: A foundation for trust management lan-
guages.
In Proceedings of the Fifth International
Symposium on Practical Aspects of Declarative Lan-
guages (PADL 2003), pages 58–73. Springer, January
2003.
[14] Ninghui Li and John C. Mitchell. RT: A role-based
trust-management framework.
In The Third DARPA
Information Survivability Conference and Exposition
(DISCEX III), April 2003.
[15] Ninghui Li, John C. Mitchell, and William H. Wins-
borough. Design of a role-based trust management
framework. In Proceedings of the 2002 IEEE Sympo-
sium on Security and Privacy, pages 114–130. IEEE
Computer Society Press, May 2002.
[16] Ninghui Li, William H. Winsborough, and John C.
Mitchell. Distributed credential chain discovery in
trust management.
Journal of Computer Security,
11(1):35–86, February 2003.
[17] Richard J. Lipton and Lawrence Snyder. A linear time
Journal of
algorithm for deciding subject security.
ACM, 24(3):455–464, 1977.
[18] John W. Lloyd. Foundations of Logic Programming,
Second Edition. Springer, 1987.
[19] Ravi S. Sandhu. The Schematic Protection Model: Its
deﬁnition and analysis for acyclic attenuating systems.
Journal of ACM, 35(2):404–432, 1988.
[20] Ravi S. Sandhu. The typed access matrix model. In
Proceedings of the 1992 IEEE Symposium on Security
and Privacy, pages 122–136. IEEE Computer Society
Press, May 1992.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
17