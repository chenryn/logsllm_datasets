COMPREPLY=( $ ( comPgen
=
$config_file )"
“$cur）；
fi
_grub_list_modules ()
local grub_dir=$(grub_dir);
local IFS='
“${grub_dir}/$cur"|{
while read =r tmp; do
[=n $tmp ]6{
tmp=${tmp*#+/}
printf “ts\n′ ${tmp&.mod)
done
_grubconp ()
1ocal cur="$(coMP_WORDS[coMP_cWORD]}*;
if [ $#=gt 2 ]; then
cur="$3";
fi;
case “$cur" in
==*=)
COMPREPLY=()
*)
local IFS=
---
## Page 86
F
esac
_1trim_colon_completions ()
1ocal colon_word=$(18"$(1#**:)"} ;
local i=${#COMPREPLY[*1}:
while [I $4(-=i))=ge 0 1]; do
1auop
fi
_parse_options ()
local option option2 i IFS=
/1;
option=;
for i in $1;
case $i in
===*)
break
= ? * )
option=$i;
break
T$=uorado ll [f uotados u= 1]
11
* )
break
esac;
done;
[[=n $option ]] 1| return 0;
IFS='
if [[ $option =-(\[((no|dont)?)\]) - 1]: then
option2=${option/"$(BASH_REMATCH[1])"/};
option2=${option2tt[]uodo）=uodo
(=/+=udo)u\.ud
reassenble_comp_words_by_ref ()
---
## Page 87
1jIine ret;
if [[ =n $1 1]; then
fi;
eval $3=$COMP_CWORD;
if [[ =n $exclude ]]; then
line=$COMP_LINE;
for ((i=0， j=O;i = 2 )) &s ((j-=));
ref=*$2[$j]';
eval $2[$j]=\${1ref)\$(coNP_woRDs[i]};
[[$i == $COMP_CWORD 1] && eval $3=$j;
{（++）） [[+[.,]== u$ 1]
（（$i/dev/null ll groups 2>/dev/null )"
‘$1"));
fi
_alloved_users ()
1
if
_complete_as_root; then
local IFS='
else
local IFS='
COMPREPLY=($( COmPgen -N
"$( id =un 2>/dev/null |l whoami 2>/dev/null j"
‘${1==$cur)"}};
---
## Page 88
()6nq-zodde
local cur dashoptions prev paran;
COMPREPLY=();
cur=_get_cword':
prev=${COMP_NORDS[CONP_CHORD-1]} :
R=be== uots1== A= saes== dtoy= y=,=suotdousp
=window'
case “$prev" in
ubuntubug |apport=bug)
=*)
$cur}
*）
_apport_paraneterless
esac
F
==Save)
F F
(nopuTA==|A=
dashoptions=*==save ==tag";
=$cur])
=h | --help | =v | ==version | -=tag)
return 0
*)
dashoptions=*==tag";
if ！ [I *${coMP_oRDS[*])" =-,*--save.* ]]; then
,suotadouseps aaes==,=suotadousep
fi;
[[A=+'-=([+lsaHO aNO)s.AOpuTA=-,-=([+lsaHO dNO}s.1]1 
then
:,suotadoqseps nopusa== M=,=suotadousop
fi;
=*)
（==
*)
_apport_parameterless
esac
esac
apport=cli ()
---
## Page 89
CONPREPLY=();
cur=_get_cword':
prev=${COMP_WORDS[COMP_CWORD=1]} :
wodms== g= bnq=aepdn== n= 6nq=atT== J= dtoy== =,=suotdoqsep
=C ==crash=file -=save =v ==version ==tag =w ==window’;
apport=cli)
u ,nos. seo
=*)
*)
_apport_parameterless
F
esac
=f | --file=bug)
,wozduAs== s= abrxoed-- d- prd-- d=,=uered
((anos -- . (smoidmAe iaodde)s weaeds. N- uahduoo 1s/=xaaadno
F
|--symptom)
((xmos -- .(suopdus saodde)$. N- uabduoo 1s)=xraaaano
F
==Save)
=c | ==crash=file)
（（yso*(xno)sD=uabduoo
(nopuTA==
dashoptions='==save ==tag":
(( smos - suogadousops. N- uahduoo 1s/=xraaanoo
-h | --help | -v | -=version | --tag)
F F
return 0
11
*)
dashoptions='==tag' :
fi;
then
:,suotadoqseps nopusa== M=,=suotadousop
fi;
if！ [I“${COMP_HORDS[*])" =-.*-=symptom.* ||*${COMP_WORDS[*]}" =-.*\=s\.* ]];
then
dashoptions=*=s ==symptom $dashoptions*;
fi;
---
## Page 90
then
dashoptions=*=u ==update $dashoptions";
fi;
if ！[I *${coMP_ORDs[*])" =-.*--file=bug.* || "${coMP_woRDS[*]}” =-
J];then
dashoptions=*-f --file-bug $dashoptions*;
fi;
if ！ [I *${cOMP_WORDS[*])" =- .*-=crash-file.* |]*${cOMP_wORDS[*])" =-.*\
1]; then
dashoptions=*=c ==crash=file $dashoptions";
fi;
 s. 
*)
$cur})
*)
_apport_parameterless
F
esac
F
esac
apport=collect ()
local cur prev;
COMPREPLY=();
1.p1om2 qa6 =1na
prev=${COMP_WORDS[COMP_CWORD=1]} :
UT mAards. aseo
apport-co1lect)
$cur})
F
=P | --package)
coMPREPLY=($( apt=cache pkgnames $cur 2> /dev/null ))
==tag)
return 0
F
*)
{[+1saomanoo）s1|d=\+-=([+1somamoo)s11 
then
==$cur）}
else
$cur));
fi
F
esac
_apport-unpack ()
local cur prev;
---
## Page 91
COMPREPLY=();
cur=_get_cword';
prev=${COMP_NORDS[COMP_CHORD-1]}:
apport=unpack)
((qseo*+(mo)sD=uabduoo
esac
_apport_paraneterless ()
local param;
paran="$dashoptions
$( apt-cache pkgnames $cur 2> /dev/null )
conmand ps axo pid l sed 1d j
1suopdus aaodde 1s
$(cur}+"}";
1ocal syns;
if [ =r /usr/share/apport/symptoms ]; then
for FILE in $(ls /usr/share/apport/symptoms) ;
do
/usr/share/apport/syaptoms/$riLe) 1l: then
(dsara)s sss,=suas
done1
fi;
echo $syns
_available_interfaces ()
1ocal cmd PATH=$PATH:/sbin;
if [[ ${1:=} == = 1]; then
cnd="iwconfig";
else
if [[ ${1:=} == =a 1]; then
cmd=*{ ifconfig ll ip link show up; }";
else
(tnoqs xutt d ll v 6guoyT ).=pu
fi;
fi;
cOMPREPLY=($( eval $cmd 2>/dev/null | awk
/t]/(if($1-/[0=9]+=/）(print
$2）else（print$i）”')=
((anos -- (/[[ound:]ls/[alxaaam)s, N- uabdoo )s/=xraaa
_cd()
local cur prev words cvord;
_init_completion |ll return;
---
## Page 92
ijk;
compopt =o filenames;
uq f[[/(-)c(·)c =anos1(-1Havao)s。z=1] 
_filedir =d;
return 0;
fi;
local =r mark_dirs=$(_rl_enabled mark-directories && echo Yl:
local =r mark_syndirs=$(_rl cnabled mark-symlinked-directories Ss echo yl:
for i in ${CDPATH//:/'
do
k="${#COMPREPLY[]}”:
for j in $l compgen =d $i/$cur ):
do
if [[ ( =n $mark_syndirs &s =h $j 1] =n $mark_dirs &s ！ -h $j ) && ! =d $(j#$i/}
11; then
j+="/";
fi;
++1
done;
done;
filedir =d;
if [[ ${#coMPREPLY[e1} =eq 1 1]; then
i=${CONPREPLY[0]}:
uuf[[/+=1T$952m$。==$1]
/()$=[1xO
fi;
return 0
cd_devices ()
COMPREPLY+=($( compgen =fd=X "!+/24[amEs]]cd+"--"${curi=/dev/}" )
local offset i;
offset=1;
for ((i=1; i /dev/null );
if [[ ! =n $cspec 6& $cnd == */→ ]]; then
cspec=s[ complete =p $(cmd*e+/} 2>/dev/null ];
[[=n $cspec ]] &5 compcmd=${cmd##*/};
fi;
if [[ ! =n $cspec 1]; then
(/#p）s=pdo
_completion_loader $compcmd;
tl Ttnu/aap/sl puoduoos d- azatduoo ls=oadso
fi;
if [[ =n $cspec 1]; then
if [[ ${cspec* =F } 1= $cspec 1]; then
local func=${cspec#*=F };
fune=$(funceg *}:
if [[ ${#coMP_woRDs[@]} =ge 2 1]; then
{[z{[@1soawo)s1saondno)s.
else
fi;
local opt;
vhile [[ $cspec == +* =o "* ]]; do
o=oads）s=adso
---
## Page 94
opt=${cspectt *};
qdos o= qdoduo
{dosoadso)$=adso
1auop
else
cspec=$(cspec#complete);
 /dev/null &s return 124;
_configured_interfaces ()
if [[ =f /etc/debian_version 1]; then
| , Nu=xo
else
if [[ =f /etc/SuSE-release ]]; then
(ss. Jaurad )s. M- uabouoo )s/=xnaaadwos
etc/sysconfig/network/ifcfg-*|
else
if [[ =f /etc/pld=release ]]; then
/etc/sysconfig/interfaces |
else
ulss, yuTid 1$. N- uahcuoo isl=xaaaaawoo 
/ete/sysconfig/network
scripts/ifcfg
fi;
fi;
fi
count_args ()
local i cword words;
_reassenble_comp_words_by_ref *$1" words cword;
---
## Page 95
args=l;
{t=pzon[]spon}s. uT og
op
[["$i" 1= =→ ]] s args=s[($args+l)];
done
cryptdisks ()
local tf;
tf=$(TABFILE=*/etc/crypttab*);
{[aaouo awoolsaaomawoo)$ oda1b|(g)s (s|)+:ardsi1lAdaba)s)=xTaawo
:((,+[[:asrds+],]
return 0
_dvd_devices ()
+Pnp()2/+i XP==uduoo1s）=+xaadno
=="${cur:=/dev/}")
_expand ()
if [[ "$cur" == \-*/+ j]; then
eval cur=$cur 2> /dev/null;
else
if [[ "$cur" == \-* ]]; then
cur=${cur#\-);
COMPREPLY=($\ cOmPgen-P
return ${#COMPREPLY[]};
fi;
fi
_file()
local cur prev words cword;
_init_completion || return;
case Sprev in
=-help | =v | ==version | =F | ==separator)
return
m
==magic=file | -f | --files=from)
_filedir;
return
=exclude)
soft tar text tokens troff'--“$cur")
return
11
esac;
if [[ $cur == =* ]]; then
CoMPREPLY=($( conpgen -W'$( parse_help"$i" )'--"$cur));
return;
---