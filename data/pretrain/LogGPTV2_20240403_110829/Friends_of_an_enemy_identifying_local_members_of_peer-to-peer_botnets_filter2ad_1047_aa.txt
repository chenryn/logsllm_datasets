title:Friends of an enemy: identifying local members of peer-to-peer botnets
using mutual contacts
author:Baris Coskun and
Sven Dietrich and
Nasir D. Memon
Friends of An Enemy: Identifying Local Members of
Peer-to-Peer Botnets Using Mutual Contacts
∗
Baris Coskun
AT&T
33 Thomas Street
PI:EMAIL
New York, NY
Sven Dietrich
Stevens Inst. of Technology
Castle Point on Hudson
Hoboken, NJ
PI:EMAIL
Nasir Memon
Polytechnic Institute of NYU
Six Metrotech Center
Brooklyn, NY
PI:EMAIL
ABSTRACT
In this work we show that once a single peer-to-peer (P2P)
bot is detected in a network, it may be possible to eﬃciently
identify other members of the same botnet in the same net-
work even before they exhibit any overtly malicious behav-
ior. Detection is based on an analysis of connections made
by the hosts in the network. It turns out that if bots select
their peers randomly and independently (i.e. unstructured
topology), any given pair of P2P bots in a network com-
municate with at least one mutual peer outside the network
with a surprisingly high probability. This, along with the
low probability of any other host communicating with this
mutual peer, allows us to link local nodes within a P2P
botnet together. We propose a simple method to identify
potential members of an unstructured P2P botnet in a net-
work starting from a known peer. We formulate the problem
as a graph problem and mathematically analyze a solution
using an iterative algorithm. The proposed scheme is simple
and requires only ﬂow records captured at network borders.
We analyze the eﬃcacy of the proposed scheme using real
botnet data, including data obtained from both observing
and crawling the Nugache botnet.
Categories and Subject Descriptors
C.2.0 [Computer Communication Networks]: General—
Security and protection (e.g., ﬁrewalls); C.2.3 [Computer
Communication Networks]: Network Operations—Net-
work Monitoring
General Terms
Security
Keywords
P2P Botnet, IDS, Network Security
∗This work was carried out while Baris Coskun was with
Polytechnic Institute of NYU
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’10 Dec. 6-10, 2010, Austin, Texas USA
Copyright 2010 ACM 978-1-4503-0133-6/10/12 ...$10.00.
131
1.
INTRODUCTION
Botnets, which are networks of compromised hosts (bots)
under the control of a botmaster, have become a major
threat in recent years. Botnets are used to perform vari-
ous malicious activities such as spamming, phishing, steal-
ing sensitive information, conducting distributed denial of
service (DDoS) attacks, scanning to ﬁnd more hosts to com-
promise, etc. Bots which perform such malicious activity,
occasionally go over the radar and get detected by Intru-
sion/Anomaly/Behavior Detection Systems present within
the network. In fact, network administrators routinely dis-
cover bots which are then immediately quarantined or re-
moved. However, some interesting and important questions
remain, such as: “Does the network contain more bots
of the same type which haven’t been exposed yet?”
“Can the discovered bot be leveraged to ﬁnd other dor-
mant bots of the botnet before they commit any ma-
licious activity?” “Can all this be done without any
access to backbone traﬃc and only from netﬂow data
from the edge router?”
A common and fairly obvious approach to ﬁnd dormant
bots is to characterize the Command and Control (C&C)
channel from the discovered bot’s recent traﬃc and iden-
tify hosts that exhibit similar C&C traﬃc characteristics.
For example, botnets with a centralized C&C architecture,
where all bots receive commands from a few central con-
trol servers, the source of the C&C messages can be used
to characterize the corresponding C&C channel and reveal
potential dormant bots [23].
However, characterizing the C&C channel is in general not
a trivial task for botnets that utilize a peer-to-peer (P2P)
architecture involving no central server. For example, this
kind of source analysis falls short for P2P botnets as here
the botmaster can use any node to inject C&C messages. To
receive and distribute C&C messages, each P2P bot com-
municates with a small subset of the botnet (i.e. peer list)
[30, 14, 18] and maintains its own peer list independently.
Hence, no obvious common source of C&C messages can be
observed, thereby preventing the linking of the discovered
bot with the dormant bots. Furthermore, features based on
packet sizes and timings, such as packets per ﬂow, bytes per
ﬂow, ﬂows per hour, etc. may not be useful in characterizing
a C&C channel, since botmasters can easily randomize such
features thereby obtaining diﬀerent feature values for each
bot [29]. Botnets such as Nugache, Storm, Waledac and
Conﬁcker employ advanced encryption mechanisms [30, 14,
18, 28, 27] making characterization based on packet contents
In this paper we propose an eﬃcient technique to dis-
cover additional P2P bots in a network after one such bot
has been discovered. Speciﬁcally, the proposed technique
provides a list of hosts ordered by a degree of certainty,
that potentially belong to the same P2P botnet as the dis-
covered bot. Network administrators can use this list as a
starting point of their investigation and potentially identify
more bots in their network once they discover one. The
proposed technique is based on the simple observation that
peers of a P2P botnet communicate with other peers in or-
der to receive commands and updates. Although diﬀerent
bots may communicate with diﬀerent peers, we show that
for P2P botnets with an unstructured topology, where bots
randomly pick peers to communicate with, there is a sur-
prisingly high probability that any given pair of P2P bots
communicate with at least one common external bot during
a given time window. In other words, there is a signiﬁcant
probability a pair of bots within a network have a mutual
contact. We present a precise mathematical derivation of
this probability as a function of the size of a botnet and the
number of peers a bot contacts. Notice that we focus on
P2P botnets with unstructured topology in this work and
the term ”P2P botnet“ refers to unstructured P2P botnets
in the rest of the paper unless stated otherwise.
In order to discover dormant bots, we ﬁrst construct a mu-
tual contacts graph where every host is a node and two nodes
share an edge if they share a mutual contact. The weight or
capacity on an edge is the number of mutual contacts shared
between the corresponding hosts incident on the edge. Then
given a discovered bot or seed bot, we present an iterative
algorithm, which identiﬁes other potential members of the
botnet by iteratively computing a level of conﬁdence to each
host on the graph. We declare the hosts which have conﬁ-
dence levels higher than a threshold as potential members
of the same P2P botnet as the seed-bot. We present experi-
mental results with real and simulated traﬃc to measure the
eﬀectiveness of our technique. We also present mathemati-
cal analysis characterizing the structure of a mutual contact
graph.
scheme has the following desirable properties:
In addition to being simple and eﬀective the proposed
• The proposed method is not an anomaly detection
scheme and hence doesn’t require P2P bots to exhibit
any overtly malicious activity.
• Similarly, it is not a behavior clustering algorithm and
therefore doesn’t require any common behavior exhib-
ited by all the bots.
• It utilizes the pairwise mutual-contact relationships
between pairs of bot peers, which arise due to P2P
C&C communications. We validate the existence of
such relationships both mathematically and experi-
mentally.
• The proposed method is generic and doesn’t depend
on speciﬁc properties of speciﬁc botnets. Therefore,
it doesn’t require reverse engineering bot binaries or
C&C protocols [3].
• Contrary to existing graph-based network traﬃc anal-
ysis methods [26] [19], the proposed method doesn’t
require any access to backbone traﬃc. Mutual-contact
relationships are deduced locally at an edge router.
infeasible.
In the rest of this paper, we explain the basic idea and de-
tails of the proposed method in Section 2. Following that,
Host Y
Host Z
Host C
Node C
Host B
Benign Hosts
Host A
Node B
2
1
Benign
Benign
Host X
Network Boundary
(a)
Node A
(b)
Figure 1:
Illustration of P2P Botnet communi-
cations for a network (a) and its corresponding
mutual-contact graph (b). The network contains 2
benign hosts and 3 bots (Hosts A, B, and C). The
bots are members of a P2P botnet with 9 bots in to-
tal. Mutual-contact relationship among hosts, which
is indicated by red dashed arrows in (a), are repre-
sented by the mutual-contact graph in (b). The edge
capacities are determined by the number of mutual
contacts between nodes.
we present our experimental results with the Nugache bot-
net in Section 3. In Section 4, we present a mathematical
analysis that provides insights on why the proposed scheme
works and its limitations. Then in Section 5, we discuss
practical limitations of the proposed scheme, possible eva-
sion techniques and their implications on P2P botnets. We
present the related work in Section 6. Finally, we conclude
the paper and discuss future work in Section 7.
2. FINDING FRIENDS OF AN ENEMY
In this section, we present the basic idea and the details
of the proposed algorithm. We ﬁrst begin with an intuitive
explanation in the next subsection and then provide a more
detailed and formal explanation in subsequent subsections.
2.1 Basic Idea
Consider the botnet illustrated in Figure 1(a). The basic
idea of the proposed method is that, Host A can be linked
to Host B since they both communicate with Host X (the
mutual contact). Similarly Host B and Host C are linked
together through Host Y and Host Z. As a result, if Host
A becomes known as a member of a P2P botnet, then by
examining its connections, one may suspect that Host B
is likely to be a member due to the presence of a mutual
contact with the known bot Host A. Similarly, if Host B is
likely to be a member, then Host C is likely to be a member
as well.
Now it is clear that, aside from P2P botnet traﬃc, le-
gitimate traﬃc probably includes several mutual-contacts
among hosts as well. For instance, there are some very pop-
ular servers that almost every host in the network commu-
nicates with such as google.com, microsoft.com. etc. As a
result, every host in the network would be linked to most
of the other hosts through such popular mutual-contacts.
However, if Host A is a known bot and both Host A and
Host B have been in communication with Host X, and Host
X has not talked to almost anyone else within our network,
then it is likely that Host B is a member of the same bot-
net as Host A. Hence in our mutual contact based analysis
we restrict ourselves to private mutual-contacts. Private
mutual contacts are mutual contacts which communicate
with less than k internal hosts during an observation win-
132
dow. Here, k is the privacy-threshold. Private mutual
contacts capture the intuition that it is very unlikely that
external peers which are part of a botnet will be communi-
cating with many internal hosts that do not belong to the
botnet. Therefore, private mutual-contacts can be strong in-
dicators of peer relationships among hosts within a botnet.
In the rest of this paper, we use the term mutual-
contacts to mean private mutual contacts.
The question then remains that given a known bot, how
do we systematically rank all the hosts in our network based
on their likelihood of being a member of the same P2P
botnet using private mutual contact relationships they ex-
hibit? To do this, we ﬁrst extract mutual-contacts from the
ﬂow records captured at the network border for a time win-
dow prior to discovering the seed-bot. We then represent
the mutual-contact relationships among hosts by a directed
graph called the mutual-contacts graph, such that: 1. Nodes
represent the hosts in the network. 2. There is a bidirec-
tional edge between two nodes if the corresponding hosts have
at least one mutual-contact during the given time window.
3. Each edge has a capacity determined by the number of
mutual-contacts between corresponding nodes.
As an example, the mutual-contact graph for the network
illustrated in Figure 1(a) is shown in Figure 1(b). Now intu-
itively speaking, it is expected that hosts which are likely to
be P2P bots are at a short distance from the seed-bot on a
mutual-contacts graph since such hosts are expected to have
mutual-contacts with the seed-bot itself and/or with other
hosts which have mutual-contacts with the seed-bot. In fact,
we observe this behavior in various real world botnets as pre-
sented later in Table 1. Furthermore, the more the mutual
contacts that a host has with the seed bot and other sus-
pected bots, the more likely it is that this host is also a
bot. The mutual contacts graph illustrated in Figure 2(a)
displays such behavior (black edges). Based on these two
intuitions, we propose a scheme that iteratively computes a
conﬁdence level of being a member of the same P2P botnet
as the seed bot for each node. This iterative process can
be illustrated as pumping red dye into the mutual-contacts
graph from the node representing the seed-bot as depicted in
Figure 2(b). During the process, the dye coming to a node
is distributed across its outgoing edges proportional to their
capacities. Therefore, the dye accumulated in a node reﬂects
our conﬁdence for that host being a part of the same botnet
as the seed-bot. Inspired by this illustration, we named our
proposed algorithm the “Dye-Pumping Algorithm”.
In Figure 2(b), it is also observed that along with the P2P
bots, few benign hosts also share mutual-contacts with P2P
bots (via green edges in Figure 2(a)), and therefore receive
some amount of dye. Such hosts potentially result in false
positives. However, we expect the capacity of the edges con-
necting these benign hosts to P2P bots to be usually lower
thereby keeping the dye accumulated on these benign hosts
below a threshold in most cases. In later sections we provide
detailed experimental and mathematical analysis, that sup-