c and then uses the parameters and operations to simulate FCC.
Then, S requests the environment E for the cryptographic algo-
rithms required in the execution of FCC.
452Crypto-Chain: A Relay Resilience Framework for Smart Vehicles
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
If FMK D indicates that a user (ID, sid, l) has started a mutual
authentication and key derivation based on ci(ci−1), S updates its
internal simulation accordingly. If an ephemeral random value rB
and public key QB = dB .G are accepted by an uncorrupted initiator
instance (IDA, sidA, A) and the initiator outputs a pointer ptriv to a
shared secret session key ki, then S instructs FMK D to create a ses-
sion from (IDA, sidA, A) and the responder instance (IDB , sidB , B)
that created encryption and MAC in the second message of the
protocol. Then, FCC will ask S to provide the session key value
and S provides and uses the same value in its simulation. Finally, S
instructs FMK D to output the session key pointer for (IDA, sidA, A).
If S receives a message that some instance has closed its session, S
updates its internal simulation accordingly and returns Okay. To
process messages for/from corrupted instances, S uses its internal
simulation. Due to the use of restricting messages, we say that all
operations performed by FCC are always successful and have no
side effects on MA(MK D) or MB(MK D).
Furthermore, we argue that the simulation is perfect in the case of
an honest initiator instances during mutual authentication and key
derivation and in the case of an honest responder instances during
mutual authentication and key derivation. Firstly, let (IDA, sidA, A)
be an honest instance of MA that wants to establish a mutual au-
′. The instance
thentication and key derivation session with user ID
will use FCC to generate ephemeral random values, encrypt and
decrypt messages, create and verify MACs, generate preshared
keys via ECDH keys, and derive shared secret session keys, and
compute cryptographic proof and cryptographic timestamp. We
need to argue that S finds an honest responder instance that can
be paired with (IDA, sidA, A) and further ensure relay resilience: If
a session key pointer is output by (IDA, sidA, A) within the max-
imum computation time of MKD, this shows that (IDA, sidA, A)
must have accepted the second message and validated the expected
time of completing the MKD, and the derived key must still be un-
corrupted. Otherwise, the protocol would stop and block according
′,
to our corruption model. Thus, there exists some instance of ID
′), that provided the cryptographic proof proo f =
say (ID
′
MACki(x) and x = Encki(ki , rA, rB), where ki = F
η(H(k.rA.rB)),
k = Fη(H((dA.QB),(rB , rA))), QB = dB .G, timestamp t3 and cryp-
tographic timestamp ctimestamp = t3.H(ki .rA.rB). Note that dA
is the private key of (IDA, sidA, A) and dB is the private key of
′ is
′). This shows that (ID
(ID
uncorrupted, the instance cannot be explicitly corrupted by the ad-
′
versary. We now argue that (ID
= B:
′) received and ac-
If l
cepted the first message of the protocol (QA, rA, t1) provided by
an uncorrupted instance of IDA, where QA = dA.G and dA is the
private key of the instance IDA. However, as dA/QA is ideally com-
puted and cryptographic operations are integrated, there is only
one instance that would provide and send such a message, namely
(IDA, sidA, A), which does not output any encryption or MAC be-
fore accepting the first message. This implies l
= B. We observe
that as dA/QA and dB/QB are ideally computed and validated, the
session key, cryptographic proof, and cryptographic timestamp
derived from them will be considered uncorrupted in FCC and only
′) can get a pointer to the session key
(IDA, sidA, A) and (ID
′) is uncorrupted. As ID
, l
′
′) is a responder, i.e., l
′
, sid
, l
= A, then z would imply that (ID
, sid
, sid
, sid
, sid
, sid
, l
, l
, l
, l
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
′
, l
, l
, l
, sid
, sid
, sid
, sid
and know the cryptographic proof and cryptographic timestamp
which corresponds to the behavior of FMK D.
Lastly, let (IDB , sidB , B) be an uncorrupted instance of MB(DK D)
that wants to establish a mutual authentication and key derivation
′. We need to show that (IDB , sidB , B) is already part
session with ID
of a session in FAK D when it outputs a session key pointer and every
operation and action up to that point can be perfectly simulated. We
observe that if such a pointer is output by (IDB , sidB , B) within the
maximum computation time of MKD, this shows that it has accepted
′ must still be uncorrupted.
the first message of the protocol and ID
′, say (ID
′), that
This shows that there is an instance of ID
provided and sent the message (QA, rA, tA), where QA = dA.G,
′
′). Thus, this instance
where dA is the private key of (ID
is uncorrupted. We now argue that this instance is an initiator,
′) cannot have
′
i.e., l
received its first message of the protocol before (IDB , sidB , B) has
received its first message of the protocol. Thus, l
= I. We argue that
′) has derived a session key and cryptographic proof
as (ID
via its accepted second message of the protocol, it has completed its
part of the mutual authentication and key derivation. Furthermore,
the instance (IDB , sidB , B) is the only instance that can encrypt
and MAC proof in the second message of the protocol as dB/QB
is unique and ideal computed and cryptographic operations are
′) is in a session with(IDB , sidB , B). Note
integrated, thus(ID
that as both instances use the same uncorrupted private keys dA and
dB to derive a session key and cryptographic proof and dA (cid:44) dB,
these instances will output pointers to the same uncorrupted session
key and cryptographic proof. Thus, the simulation is perfect in this
case.
, l
= R, the instance (ID
= I: Suppose l
We note that other cases such as honest instances after mutual
authentication and key derivation as well as corrupted instances
are omitted due to page limit.
By Theorem 3, we can now replace FCC[c] by its realization
PCC[c] which yields that the MKD when using the actual cryp-
tographic operations is a universally composable relay resilience
mutual authentication and key derivation protocol.
Proposition 1. Let MA(MK D) and MB(MK D) be machines as defined
above, let FCC[c] and PCC[c] be as in Theorem 3 and M∗ enforces
well-behaved environments. Then, the following holds true:
, sid
, l
′
′
∗|MA(MK D)|MB(MK D)|PCC[c] ≤R M
∗|FMK D|FCC[c]
M
Proof: This proposition follows easily from Theorem 2, Theorem
3, and Theorem 4 that the machines MA(MK D) and MB(MK D) con-
stitute a well-behaved environment when combined with M∗ and
any other environment E.
E Photograph of Crypto-Chain
Implementation
Figure 5 presents the photography of Crypto-Chain implementation
in our laboratory. This figure shows the components that are used
in our implementation.
453ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Sani, et al.
G Theorem and Proof Sketch of the Enhanced
Hitag-AES/Pro
The following theorem states that the Enhanced Hitag-AES/Pro is a
secure universally composable relay resilience mutual authentica-
tion and key derivation protocol.
Theorem 6. Let MA(H P) and MB(H P) be the machines modelling the
Enhanced Hitag-AES/Pro that encrypt and MAC messages, decrypts
and VMAC messages, provide/verify cryptographic proof, and verifies
expected time of completing the protocol execution. Let c be a sequence
of cryptographic operations of PCC and FCC such that every operation
ci in c always rely on the preceding operation ci−1, and let FMK D be
the ideal functionality for mutual authentication and key derivation
with parameter skey = authenc −key. Then, the following holds true:
MA(H P)|MB(H P)|FCC[c] ≤R FMK D
synchronizes
the
and
keeps
instances using
corruption
shows
S
The proof of this theorem is similar to the MKD and Megamos
Crypto, except that, S internally simulates the protocol MA(H P)|
MB(H P)|FCC[c],
simulated instances of
MA(H P)/MB(H P),
sta-
the
tuses
of user
FMK D.
that
E|MA(H P)|MB(H P)|FCC[c] ≡ E|S|FMK D for all environments
E ∈ EnvR(MA(H P)|MB(H P)|FCC[c]). Just as in the MKD and
Megamos Crypto, FCC[c] can be replaced with PCC[c] which yields
that the Enhanced Hitag-AES/Pro is a secure universally composable
relay resilience mutual authentication and key derivation protocol.
Proposition 3. Let MA(H P) and MB(H P) be machines as defined
above, let FCC[c] and PCC[c] be as in Theorem 3 and M∗ enforces
well-behaved environments. Then, the following holds true:
∗|FMK D|FCC[c]
∗|MA(H P)|MB(H P)|PCC[c] ≤R M
M
Proof: Using Theorem 2, Theorem 3, and Theorem 7, it can be
seen easily that M∗|MA(H P)|MB(H P) creates a well-behaved envi-
ronment with any environment E.
Figure 5: Photograph of Crypto-Chain Implementation in
our laboratory. Notations: (a) MacBook Pro, (b)/(h) CM3000
sensor, (c)/(e) CM5000 sensor, (d)/(f) CM4000 sensor, (g)
XM1000 sensor.
F Theorem and Proof Sketch of the Enhanced
Megamos Crypto
The following theorem states that the Enhanced Megamos Crypto is
a secure universally composable relay resilience mutual authenti-
cation and key derivation protocol.
Theorem 5. Let MA(MC) and MB(MC) be the machines modeling the
Enhanced Megamos Crypto as described above. Let c be a sequence of
cryptographic operations of PCC and FCC such that every operation
ci in c always rely on the preceding operation ci−1, and let FMK D be
the ideal functionality for mutual authentication and key derivation
with parameter skey = authenc −key. Then, the following holds true:
MA(MC)|MB(MC)|FCC[c] ≤R FMK D
Proof Sketch: The proof sketch of this theorem is straightforward
and does not require any probabilistic reasoning. The simulator S
in this proof internally simulates the protocol MA(MC)|MB(MC)|
FCC[c], uses instances MA(MC) and MB(MC), and show that
E|MA(MC)|MB(MC)|FCC[c] ≡ E|S|FMK D for all environments E ∈
EnvR(MA(MC)|MB(MC)|FCC[c]). Just as the MKD, by Theorem 3,
we can replace FCC[c] with its realization PCC[c] which yields that
the Enhanced Megamos Crypto is a secure universally composable
relay resilience mutual authentication and key derivation protocol.
Proposition 2. Let MA(MC) and MB(MC) be machines as defined
above, let FCC[c] and PCC[c] be as in Theorem 3 and M∗ enforces
well-behaved environments. Then, the following holds true:
∗|MA(MC)|MB(MC)|PCC[c] ≤R M
∗|FMK D|FCC[c]
M
Proof: It can be seen easily from Theorem 2, Theorem 3, and
Theorem 5 that M∗|MA(MC)|MB(MC) constitutes a well-behaved
environment when combined with E.
(a)(b)(c)(d)(e)(f)(g)(h)454