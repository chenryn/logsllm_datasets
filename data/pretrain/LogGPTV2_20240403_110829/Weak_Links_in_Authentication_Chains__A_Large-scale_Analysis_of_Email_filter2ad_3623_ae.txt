email spooﬁng is a complex problem involving multiple par-
ties, multi-party collaboration is required to counter the rele-
vant issues.
More Accurate Standard. Note that email providers may
fail to offer a secure and reliable email service with ambiguous
deﬁnitions in email protocols. Thus, providing more accurate
email protocol descriptions is necessary to eliminate inconsis-
tencies in the practice of multi-party protocols. For example,
the DKIM standard should specify when a DKIM signature
should be added to forwarded emails. It is reasonable for for-
warders to add DKIM signatures to improve the credibility
of emails; however, they should not add DKIM signatures to
emails that have never passed DKIM veriﬁcation.
UI Notiﬁcation. Email UI rendering is a signiﬁcant part that
affects the users’ perception of an email’s authenticity. Un-
fortunately, most of webmails and email clients in our experi-
ments only show the From header without any more authenti-
cation details. Therefore, it is difﬁcult for ordinary users to
judge the authenticity of emails.
Additionally, some visual attacks (e.g., A12, A13) can not be
defended at the protocol level. An effective defense method is
to provide a user-friendly UI notiﬁcation and alerts users that
their received emails may be spooﬁng emails. Hu et al. [20]
also demonstrate that a good visual security notiﬁcation has a
positive effect on mitigating phishing email threats in the real
world. As shown in Figure 4, the spooﬁng email in Section 5
can be veriﬁed by all the three email protocols. Nevertheless,
users can not distinguish this spooﬁng email from normal
emails without a UI notiﬁcation.
As shown in Figure 16, users intuitively can recognize
whether the received email contains malicious behaviors,
based on the UI notiﬁcation. Coremail, a well-known email
service provider in China, has adopted our suggestions and im-
plemented the UI notiﬁcation on its webmail and email client.
In addition, we have released the UI notiﬁcation scheme in the
form of a chrome extension for Gmail called "NoSpooﬁng"1.
Evaluation Tools. We have released our testing tool publicly
on GitHub 2 for email administrators to evaluate and increase
their security. After conﬁguring the target email system in-
formation, the tool can interact with the target system and
evaluate whether the target system is vulnerable to the at-
tacks.
7 Disclosure and Response
Vulnerabilities found in this work have already been reported
to all 30 relevant email vendors in detail. We have been con-
1NoSpooﬁng : https://chrome.google.com/webstore/detail/no
spoofing/ehidaopjcnapdglbbbjgeoagpophfjnp
2Email Spooﬁng Test Tool: https://github.com/mo-xiaoxi/Email
SpoofingTestTool
Figure 16: An example of UI notiﬁcation against the com-
bined attack
tacting these entities to help them mitigate the detected threats.
Our contact results are summarized as follows.
Alibaba Cloud: They are interested in the attacks and have
an in-depth discussion with us about the speciﬁcations. They
mention that RFC 6376 suggests adding a DKIM signature
in the email forwarding stage to increase emails’ credibility.
They have now recognized the risk of adding DKIM signa-
tures without veriﬁcation and promise to evaluate and ﬁx such
issues. They also suggest we contact the authors of related
RFCs to reach an agreed ﬁx proposal.
Gmail: They acknowledge our report and will ﬁx related
issues in subsequent updates. They contact us for discussing
the essential reasons behind these security issues.
iCloud: They discuss with us about the details of the attacks
and their potential consequences. In particular, Apple iCloud
Email has already ﬁxed related security issues with our coop-
eration.
Sina: They evaluate the issue as a high-risk vulnerability and
internally assess the corresponding protective measures. As a
bonus, they provide us a reward of ≈ $90.
Yandex: They accept our report and conﬁrm the vulnerability.
At the same time, they provide a bonus of $200 for apprecia-
tion.
Yahoo: They conﬁrm the vulnerability. But they claim that it
is not an immediate risk.
Coremail: They acknowledge our report and particularly
thank us for reporting the issue of UI attacks. To counter
those security issues, they adopt our suggestions and and start
to implement the UI notiﬁcation to protect users against email
spooﬁng attacks.
QQ Mail and 163.com: They appreciate our work and in-
form us that they would ﬁx those security issues by anti-spam
strategies.
Outlook and Mail.ru: They claim that they are strictly op-
erating their email service in accordance with RFC stan-
dards. They categorize these problems as phishing emails
and promise to pay more attention to the impact of such at-
tacks.
Others: We have contacted other relevant email vendors and
look forward to receiving their feedback.
3214    30th USENIX Security Symposium
USENIX Association
8 Related Work
9 Conclusion
Prior works have revealed certain threats of phishing email
attacks [8,12], including the impacts of spear phishing attacks
on email user’s behavior [32]. Our work focuses on more
novel forms of spooﬁng attacks and their inﬂuence on the
whole authentication process. Poddebniak et al. [37] discuss
how practical spooﬁng attacks break various protections of
OpenPGP and S/MIME email signature veriﬁcation. They
also discuss two new protocols that are proposed to enhance
spooﬁng detection, such as BIMI (Brand Indicators for Mes-
sage Identiﬁcation) [41] and ARC (Authenticated Received
Chain) [3]. However, BIMI is built on DMARC and has not
been fully standardized. Thus, the attacks we found are also
effective. ARC protocol is standardized in 2019, yet, only
three vendors (i.e., Gmail, Ofﬁce 365, Zoho) have deployed
the protocol in our experimental targets. Our work ﬁnds that,
however, both Ofﬁce 365 and Zoho have ﬂaws with the im-
plementation of ARC, which can still lead to some security
issues .
Hu et al. [20] analyzed how email vendors detect and han-
dle spooﬁng emails through an end-to-end email spooﬁng
experiment. We ﬁnd that the vulnerabilities they mentioned
have been mostly ﬁxed in the past two years. Besides, they
did not discuss bypassing security protocols detection. Our
work focuses on new attacks that can bypass security proto-
cols or user-interface protections. We can construct a highly
realistic spooﬁng email that can completely bypass all the
email security protocols and user-interface protections.
In addition, prior literature has proposed many techniques
to defend traditional phishing attacks. SMTP extensions, such
as SPF, DKIM, and DMARC, are designed to protect the
authenticity of emails. Foster et al. [14] measured the imple-
mentation and deployment of these protocols and pointed out
that, unfortunately, despite years of development, the accep-
tance rate of these security protocols are still not very high.
This low acceptance rate seriously jeopardizes the security of
the email ecosystem [19].
Besides, there are many works discussing phishing detec-
tion methods based on features extracted from email content
and headers [7,13,28], lots of which rely on machine learning
technology. Furthermore, Ho et al. [18] point out the posi-
tive effects of a good security metric against phishing attacks.
Other works [21, 36] indicates that the current email services
does not have a UI Notiﬁcation as HTTPS [33]. The contem-
porary visual security indicators are not enough to provide
full phishing protection [20, 29]. For email spooﬁng attacks,
our research provides a UI notiﬁcation scheme and evaluation
tools for email systems’ administrators. It could effectively
boost the development of protective measures against email
spooﬁng in the future.
This paper explored the vulnerabilities of the chain-based
authentication structure in the email ecosystem. Speciﬁcally,
a failure in any part can break the whole chain under this
chain-based structure. Namely, the authenticity of an email
depends on the weakest link in the email authentication chain.
We presented a series of new attacks that can bypass SPF,
DKIM, DMARC and user-interface protections through a sys-
tematic analysis of the email delivery process. In addition,
we conducted a large-scale analysis of 30 popular email ser-
vices and 23 email clients. Experiment results show that all
of them are vulnerable to the new attacks, including famous
email services, such as Gmail and Outlook. We underscore
the unfortunate fact that many email services have not imple-
mented adequate protective measures. Besides, recognizing
the limitation of past literature, which focused on spooﬁng
attacks’ impacts on a single step of the authentication pro-
cess, we concentrated on spooﬁng attacks’ inﬂuence on the
chain-based email authentication process as a whole.
Based on our ﬁndings, we analyzed the root causes of these
attacks and reported the issues to corresponding email service
providers. We also proposed key mitigating measures for
email protocol designers and email providers to defend against
email spooﬁng attacks. Our work is devoted to helping the
email industry more efﬁciently protect users against email
spooﬁng attacks and improve the email ecosystem’s overall
security.
Acknowlegments
We sincerely thank our shepherd Zakir Durumeric and all
the anonymous reviewers for their valuable reviews and com-
ments to improve this paper. We also thank Mingming Zhang,
Kangdi Cheng, Zhuo Li, Ennan Zheng, and Jianjun Chen for
peer-reviewing and assisting in editing this paper.
This work is supported in part by the National Natural
Science Foundation of China (Grant No. U1836213 and
U1636204), the BNRist Network and Software Security Re-
search Program (Grant No. BNR2019TD01004).
References
[1] Bidirectional text. https://en.wikipedia.org/wik
i/Bidirectional_text. Accessed: November 11,
2019.
[2] E Allman, Jon Callas, M Delany, Miles Libbey, J Fenton,
and M Thomas. Domainkeys identiﬁed mail (dkim)
signatures. Technical report, RFC 4871, May, 2007.
[3] Kurt Andersen, Brandon Long, S Jones, and Murray
Kucherawy. Authenticated received chain (arc) protocol.
ser. Internet-Draft’17, 2017.
USENIX Association
30th USENIX Security Symposium    3215
[4] S Blank and M Kucherawy. The authenticated received
chain (arc) protocol. 2019.
[5] Enrico Blanzieri and Anton Bryl. A survey of learning-
based techniques of email spam ﬁltering. Artiﬁcial In-
telligence Review, 29(1):63–92, 2008.
[6] Jianjun Chen, Jian Jiang, Haixin Duan, Nicholas Weaver,
Tao Wan, and Vern Paxson. Host of troubles: Multiple
host ambiguities in http implementations. In Proceed-
ings of the 2016 ACM SIGSAC Conference on Computer
and Communications Security, pages 1516–1527. ACM,
2016.
[7] Asaf Cidon, Lior Gavish, Itay Bleier, Nadia Korshun,
Marco Schweighauser, and Alexey Tsitkin. High preci-
sion detection of business email compromise. In 28th
{USENIX} Security Symposium ({USENIX} Security
19), pages 1291–1307, 2019.
[8] Dan Conway, Ronnie Taib, Mitch Harris, Kun Yu,
Shlomo Berkovsky, and Fang Chen. A qualitative inves-
tigation of bank employee experiences of information
In Thirteenth Symposium on
security and phishing.
Usable Privacy and Security ({SOUPS} 2017), pages
115–129, 2017.
[9] D Crocker, T Hansen, and M Kucherawy. Domainkeys
Internet
identiﬁed mail (dkim) signatures (rfc6376).
Society Requests for Comments.(Year: 2011), 2011.
[10] Dave Crocker and Paul Overell. Augmented bnf for
syntax speciﬁcations: Abnf. Technical report, RFC 2234,
November, 1997.
[11] Robin Dhamankar, Yoonkyong Lee, AnHai Doan, Alon
Halevy, and Pedro Domingos. imap: discovering com-
plex semantic matches between database schemas. In
Proceedings of the 2004 ACM SIGMOD international
conference on Management of data, pages 383–394,
2004.
[12] Christine E Drake, Jonathan J Oliver, and Eugene J
Koontz. Anatomy of a phishing email. In CEAS. Cite-
seer, 2004.
[13] Ian Fette, Norman Sadeh, and Anthony Tomasic. Learn-
ing to detect phishing emails. In Proceedings of the 16th
international conference on World Wide Web, pages 649–
656. ACM, 2007.
[14] Ian D Foster, Jon Larson, Max Masich, Alex C Snoeren,
Stefan Savage, and Kirill Levchenko. Security by any
other name: On the effectiveness of provider based email
In Proceedings of the 22nd ACM SIGSAC
security.
Conference on Computer and Communications Security,
pages 450–464. ACM, 2015.
[15] Ned Freed, Nathaniel Borenstein, et al. Multipurpose in-
ternet mail extensions (mime) part one: Format of inter-
net message bodies, rfc2045. See for instance http://ietf.
org/rfc/rfc2045. txt, 1996.
[16] Evgeniy Gabrilovich and Alex Gontmakher. The homo-
graph attack. Communications of the ACM, 45(2):128,
2002.
[17] Markus Gruber, Phillip Wieser, Stefan Nachtnebel,
Christian Schanes, and Thomas Grechenig. Extraction
of abnf rules from rfcs to enable automated test data
generation. In IFIP International Information Security
Conference, pages 111–124. Springer, 2013.
[18] Grant Ho, Aashish Sharma, Mobin Javed, Vern Paxson,
and David Wagner. Detecting credential spearphish-
ing in enterprise settings. In 26th {USENIX} Security
Symposium ({USENIX} Security 17), pages 469–485,
2017.
[19] Hang Hu, Peng Peng, and Gang Wang. Towards un-
derstanding the adoption of anti-spooﬁng protocols in
email systems. In 2018 IEEE Cybersecurity Develop-
ment (SecDev), pages 94–101. IEEE, 2018.
[20] Hang Hu and Gang Wang. End-to-end measurements
of email spooﬁng attacks. In 27th {USENIX} Security
Symposium ({USENIX} Security 18), pages 1095–1112,
2018.
[21] Hang Hu and Gang Wang. Revisiting email spooﬁng
attacks. arXiv preprint arXiv:1801.00853, 2018.
[22] Tom N Jagatic, Nathaniel A Johnson, Markus Jakobsson,
and Filippo Menczer. Social phishing. Communications
of the ACM, 50(10):94–100, 2007.
[23] Scott Kitterman. Rfc 7208–sender policy framework
(spf) for authorizing use of domains in email, version 1,
2014.
[24] Scott Kitterman. Sender policy framework (spf) for
authorizing use of domains in email, version 1. 2014.
[25] J Klensin. Simple mail transfer protocol (rfc5321). Net-
work Working Group, Internet Engineering Task Force.
http://tools. ietf. org/html/rfc5321, 2008.
[26] John Klensin. Rfc 2821: Simple mail transfer protocol.
Request For Comment, Network Working Group, 2001.
[27] John Klensin, Randy Catoe, and Paul Krumviede.
Imap/pop authorize
chal-
lenge/response. In RFC 2195. Network Working Group,
1997.
extension for simple
3216    30th USENIX Security Symposium
USENIX Association
[41] T. Loder S. Blank, P. Goldstein and T. Zink. Brand
indicators for message identiﬁcation (bimi). Technical
report, 2019.
[28] Tim Krause, Rafael Uetz, and Tim Kretschmann. Recog-
nizing email spam from meta data only. In 2019 IEEE
Conference on Communications and Network Security
(CNS), pages 178–186. IEEE, 2019.
[29] Kat Krol, Matthew Moroz, and M Angela Sasse. Don’t
work. can’t work? why it’s time to rethink security warn-
ings. In 2012 7th International Conference on Risks and
Security of Internet and Systems (CRiSIS), pages 1–8.
IEEE, 2012.
[30] M Kucherawy. Domainkeys identiﬁed mail (dkim) and
mailing lists. Technical report, RFC 6377, September,
2011.
[31] Murray Kucherawy and Elizabeth Zwicky. Domain-
based message authentication, reporting, and confor-
mance (dmarc). 2015.
[32] Tian Lin, Daniel E Capecci, Donovan M Ellis, Harold A
Rocha, Sandeep Dommaraju, Daniela S Oliveira, and
Natalie C Ebner. Susceptibility to spear-phishing emails:
Effects of internet user demographics and email con-
tent. ACM Transactions on Computer-Human Interac-
tion (TOCHI), 26(5):32, 2019.
[33] Meng Luo, Oleksii Starov, Nima Honarmand, and Nick
Nikiforakis. Hindsight: Understanding the evolution of
ui vulnerabilities in mobile browsers. In Proceedings of
the 2017 ACM SIGSAC Conference on Computer and
Communications Security, pages 149–162. ACM, 2017.
[34] DomainKeys Identiﬁed Mail. Signatures rfc 6376.
[35] Joshua Pereyda. boofuzz: Network protocol fuzzing for
humans. Accessed: Feb, 17, 2017.
[36] Justin Petelka, Yixin Zou, and Florian Schaub. Put your
warning where your link is: Improving and evaluating
email phishing warnings. In Proceedings of the 2019
CHI Conference on Human Factors in Computing Sys-
tems, page 518. ACM, 2019.
[37] Damian Poddebniak, Christian Dresen, Jens Müller,
Fabian Ising, Sebastian Schinzel, Simon Friedberger,
Juraj Somorovsky, and Jörg Schwenk. Efail: Breaking
s/mime and openpgp email encryption using exﬁltra-
tion channels. In 27th {USENIX} Security Symposium
({USENIX} Security 18), pages 549–566, 2018.
[38] Jon Postel. Simple mail transfer protocol. Information
Sciences, 1982.
[39] Paul Resnick. Rfc2822: Internet message format, 2001.
[40] Paul Resnick. Rfc 5322, internet message format. On-
line: https://tools. ietf. org/html/rfc5322, 2008.
USENIX Association
30th USENIX Security Symposium    3217