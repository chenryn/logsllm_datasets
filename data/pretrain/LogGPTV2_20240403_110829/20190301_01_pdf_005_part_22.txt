SAT. If the given date contains a time portion, it is carried forward to the result
unchanged.
The following are examples of the NEXT_DAY function.
SELECT NEXT_DAY(TO_DATE('13-AUG-07','DD-MON-YY'),'SUNDAY') FROM DUAL;
next_day
--------------------
19-AUG-07 00:00:00
(1 row)
SELECT NEXT_DAY(TO_DATE('13-AUG-07','DD-MON-YY'),'MON') FROM DUAL;
next_day
--------------------
20-AUG-07 00:00:00
(1 row)
2.4.8.5 NEW_TIME
The NEW_TIME function converts a date and time from one time zone to another.
NEW_TIME returns a value of type DATE. The syntax is:
NEW_TIME(DATE, time_zone1, time_zone2)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 259
Database Compatibility for Oracle® Developers
Reference Guide
time_zone1 and time_zone2 must be string values from the Time Zone column of the
following table:
Table 2-27 Time Zones
Time Zone Offset from UTC Description
AST UTC+4 Atlantic Standard Time
ADT UTC+3 Atlantic Daylight Time
BST UTC+11 Bering Standard Time
BDT UTC+10 Bering Daylight Time
CST UTC+6 Central Standard Time
CDT UTC+5 Central Daylight Time
EST UTC+5 Eastern Standard Time
EDT UTC+4 Eastern Daylight Time
GMT UTC Greenwich Mean Time
HST UTC+10 Alaska-Hawaii Standard Time
HDT UTC+9 Alaska-Hawaii Daylight Time
MST UTC+7 Mountain Standard Time
MDT UTC+6 Mountain Daylight Time
NST UTC+3:30 Newfoundland Standard Time
PST UTC+8 Pacific Standard Time
PDT UTC+7 Pacific Daylight Time
YST UTC+9 Yukon Standard Time
YDT UTC+8 Yukon Daylight Time
Following is an example of the NEW_TIME function.
SELECT NEW_TIME(TO_DATE('08-13-07 10:35:15','MM-DD-YY HH24:MI:SS'),'AST',
'PST') "Pacific Standard Time" FROM DUAL;
Pacific Standard Time
---------------------
13-AUG-07 06:35:15
(1 row)
2.4.8.6 ROUND
The ROUND function returns a date rounded according to a specified template pattern. If
the template pattern is omitted, the date is rounded to the nearest day. The following table
shows the template patterns for the ROUND function.
Table 2-28 Template Date Patterns for the ROUND Function
Pattern Description
Returns January 1, cc01 where cc is first 2 digits of the given year if last 2 digits  50; (for AD
years)
SYYY, YYYY, Returns January 1, yyyy where yyyy is rounded to the nearest year; rounds down on
YEAR, SYEAR, June 30, rounds up on July 1
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 260
Database Compatibility for Oracle® Developers
Reference Guide
Pattern Description
YYY, YY, Y
Rounds to the beginning of the ISO year which is determined by rounding down if
IYYY, IYY, IY, I the month and day is on or before June 30th, or by rounding up if the month and day
is July 1st or later
Returns the first day of the quarter determined by rounding down if the month and
Q day is on or before the 15th of the second month of the quarter, or by rounding up if
the month and day is on the 16th of the second month or later of the quarter
Returns the first day of the specified month if the day of the month is on or prior to
MONTH, MON, MM,
the 15th; returns the first day of the following month if the day of the month is on
RM
the 16th or later
Round to the nearest date that corresponds to the same day of the week as the first
WW
day of the year
Round to the nearest date that corresponds to the same day of the week as the first
IW
day of the ISO year
Round to the nearest date that corresponds to the same day of the week as the first
W
day of the month
Rounds to the start of the nearest day; 11:59:59 AM or earlier rounds to the start of
DDD, DD, J
the same day; 12:00:00 PM or later rounds to the start of the next day
DAY, DY, D Rounds to the nearest Sunday
HH, HH12, HH24 Round to the nearest hour
MI Round to the nearest minute
Following are examples of usage of the ROUND function.
The following examples round to the nearest hundred years.
SELECT TO_CHAR(ROUND(TO_DATE('1950','YYYY'),'CC'),'DD-MON-YYYY') "Century"
FROM DUAL;
Century
-------------
01-JAN-1901
(1 row)
SELECT TO_CHAR(ROUND(TO_DATE('1951','YYYY'),'CC'),'DD-MON-YYYY') "Century"
FROM DUAL;
Century
-------------
01-JAN-2001
(1 row)
The following examples round to the nearest year.
SELECT TO_CHAR(ROUND(TO_DATE('30-JUN-1999','DD-MON-YYYY'),'Y'),'DD-MON-YYYY')
"Year" FROM DUAL;
Year
-------------
01-JAN-1999
(1 row)
SELECT TO_CHAR(ROUND(TO_DATE('01-JUL-1999','DD-MON-YYYY'),'Y'),'DD-MON-YYYY')
"Year" FROM DUAL;
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 261
Database Compatibility for Oracle® Developers
Reference Guide
Year
-------------
01-JAN-2000
(1 row)
The following examples round to the nearest ISO year. The first example rounds to 2004
and the ISO year for 2004 begins on December 29th of 2003. The second example rounds
to 2005 and the ISO year for 2005 begins on January 3rd of that same year.
(An ISO year begins on the first Monday from which a 7 day span, Monday thru Sunday,
contains at least 4 days of the new year. Thus, it is possible for the beginning of an ISO
year to start in December of the prior year.)
SELECT TO_CHAR(ROUND(TO_DATE('30-JUN-2004','DD-MON-YYYY'),'IYYY'),'DD-MON-
YYYY') "ISO Year" FROM DUAL;
ISO Year
-------------
29-DEC-2003
(1 row)
SELECT TO_CHAR(ROUND(TO_DATE('01-JUL-2004','DD-MON-YYYY'),'IYYY'),'DD-MON-
YYYY') "ISO Year" FROM DUAL;
ISO Year
-------------
03-JAN-2005
(1 row)
The following examples round to the nearest quarter.
SELECT ROUND(TO_DATE('15-FEB-07','DD-MON-YY'),'Q') "Quarter" FROM DUAL;
Quarter
--------------------
01-JAN-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('16-FEB-07','DD-MON-YY'),'Q') "Quarter" FROM DUAL;
Quarter
--------------------
01-APR-07 00:00:00
(1 row)
The following examples round to the nearest month.
SELECT ROUND(TO_DATE('15-DEC-07','DD-MON-YY'),'MONTH') "Month" FROM DUAL;
Month
--------------------
01-DEC-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('16-DEC-07','DD-MON-YY'),'MONTH') "Month" FROM DUAL;
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 262
Database Compatibility for Oracle® Developers
Reference Guide
Month
--------------------
01-JAN-08 00:00:00
(1 row)
The following examples round to the nearest week. The first day of 2007 lands on a
Monday so in the first example, January 18th is closest to the Monday that lands on
January 15th. In the second example, January 19th is closer to the Monday that falls on
January 22nd.
SELECT ROUND(TO_DATE('18-JAN-07','DD-MON-YY'),'WW') "Week" FROM DUAL;
Week
--------------------
15-JAN-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('19-JAN-07','DD-MON-YY'),'WW') "Week" FROM DUAL;
Week
--------------------
22-JAN-07 00:00:00
(1 row)
The following examples round to the nearest ISO week. An ISO week begins on a
Monday. In the first example, January 1, 2004 is closest to the Monday that lands on
December 29, 2003. In the second example, January 2, 2004 is closer to the Monday that
lands on January 5, 2004.
SELECT ROUND(TO_DATE('01-JAN-04','DD-MON-YY'),'IW') "ISO Week" FROM DUAL;
ISO Week
--------------------
29-DEC-03 00:00:00
(1 row)
SELECT ROUND(TO_DATE('02-JAN-04','DD-MON-YY'),'IW') "ISO Week" FROM DUAL;
ISO Week
--------------------
05-JAN-04 00:00:00
(1 row)
The following examples round to the nearest week where a week is considered to start on
the same day as the first day of the month.
SELECT ROUND(TO_DATE('05-MAR-07','DD-MON-YY'),'W') "Week" FROM DUAL;
Week
--------------------
08-MAR-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('04-MAR-07','DD-MON-YY'),'W') "Week" FROM DUAL;
Week
--------------------
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 263
Database Compatibility for Oracle® Developers
Reference Guide
01-MAR-07 00:00:00
(1 row)
The following examples round to the nearest day.
SELECT ROUND(TO_DATE('04-AUG-07 11:59:59 AM','DD-MON-YY HH:MI:SS AM'),'J')
"Day" FROM DUAL;
Day
--------------------
04-AUG-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('04-AUG-07 12:00:00 PM','DD-MON-YY HH:MI:SS AM'),'J')
"Day" FROM DUAL;
Day
--------------------
05-AUG-07 00:00:00
(1 row)
The following examples round to the start of the nearest day of the week (Sunday).
SELECT ROUND(TO_DATE('08-AUG-07','DD-MON-YY'),'DAY') "Day of Week" FROM DUAL;
Day of Week
--------------------
05-AUG-07 00:00:00
(1 row)
SELECT ROUND(TO_DATE('09-AUG-07','DD-MON-YY'),'DAY') "Day of Week" FROM DUAL;
Day of Week
--------------------
12-AUG-07 00:00:00
(1 row)
The following examples round to the nearest hour.
SELECT TO_CHAR(ROUND(TO_DATE('09-AUG-07 08:29','DD-MON-YY HH:MI'),'HH'),'DD-
MON-YY HH24:MI:SS') "Hour" FROM DUAL;
Hour
--------------------
09-AUG-07 08:00:00
(1 row)
SELECT TO_CHAR(ROUND(TO_DATE('09-AUG-07 08:30','DD-MON-YY HH:MI'),'HH'),'DD-
MON-YY HH24:MI:SS') "Hour" FROM DUAL;
Hour
--------------------
09-AUG-07 09:00:00
(1 row)
The following examples round to the nearest minute.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 264
Database Compatibility for Oracle® Developers
Reference Guide
SELECT TO_CHAR(ROUND(TO_DATE('09-AUG-07 08:30:29','DD-MON-YY
HH:MI:SS'),'MI'),'DD-MON-YY HH24:MI:SS') "Minute" FROM DUAL;
Minute
--------------------
09-AUG-07 08:30:00
(1 row)
SELECT TO_CHAR(ROUND(TO_DATE('09-AUG-07 08:30:30','DD-MON-YY
HH:MI:SS'),'MI'),'DD-MON-YY HH24:MI:SS') "Minute" FROM DUAL;
Minute
--------------------
09-AUG-07 08:31:00
(1 row)
2.4.8.7 TRUNC
The TRUNC function returns a date truncated according to a specified template pattern. If
the template pattern is omitted, the date is truncated to the nearest day. The following
table shows the template patterns for the TRUNC function.
Table 2-29 Template Date Patterns for the TRUNC Function
Pattern Description
CC, SCC Returns January 1, cc01 where cc is first 2 digits of the given year
SYYY, YYYY,
YEAR, SYEAR, Returns January 1, yyyy where yyyy is the given year
YYY, YY, Y
IYYY, IYY, IY, I Returns the start date of the ISO year containing the given date
Q Returns the first day of the quarter containing the given date
MONTH, MON, MM,
Returns the first day of the specified month
RM
Returns the largest date just prior to, or the same as the given date that corresponds
WW
to the same day of the week as the first day of the year
IW Returns the start of the ISO week containing the given date
Returns the largest date just prior to, or the same as the given date that corresponds
W
to the same day of the week as the first day of the month
DDD, DD, J Returns the start of the day for the given date
DAY, DY, D Returns the start of the week (Sunday) containing the given date
HH, HH12, HH24 Returns the start of the hour
MI Returns the start of the minute
Following are examples of usage of the TRUNC function.
The following example truncates down to the hundred years unit.
SELECT TO_CHAR(TRUNC(TO_DATE('1951','YYYY'),'CC'),'DD-MON-YYYY') "Century"
FROM DUAL;
Century
-------------
01-JAN-1901
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 265
Database Compatibility for Oracle® Developers
Reference Guide
(1 row)
The following example truncates down to the year.
SELECT TO_CHAR(TRUNC(TO_DATE('01-JUL-1999','DD-MON-YYYY'),'Y'),'DD-MON-YYYY')
"Year" FROM DUAL;
Year
-------------
01-JAN-1999
(1 row)
The following example truncates down to the beginning of the ISO year.
SELECT TO_CHAR(TRUNC(TO_DATE('01-JUL-2004','DD-MON-YYYY'),'IYYY'),'DD-MON-
YYYY') "ISO Year" FROM DUAL;
ISO Year
-------------
29-DEC-2003
(1 row)
The following example truncates down to the start date of the quarter.
SELECT TRUNC(TO_DATE('16-FEB-07','DD-MON-YY'),'Q') "Quarter" FROM DUAL;
Quarter
--------------------
01-JAN-07 00:00:00
(1 row)
The following example truncates to the start of the month.
SELECT TRUNC(TO_DATE('16-DEC-07','DD-MON-YY'),'MONTH') "Month" FROM DUAL;
Month
--------------------
01-DEC-07 00:00:00
(1 row)
The following example truncates down to the start of the week determined by the first
day of the year. The first day of 2007 lands on a Monday so the Monday just prior to
January 19th is January 15th.
SELECT TRUNC(TO_DATE('19-JAN-07','DD-MON-YY'),'WW') "Week" FROM DUAL;
Week
--------------------
15-JAN-07 00:00:00
(1 row)
The following example truncates to the start of an ISO week. An ISO week begins on a
Monday. January 2, 2004 falls in the ISO week that starts on Monday, December 29,
2003.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 266
Database Compatibility for Oracle® Developers
Reference Guide
SELECT TRUNC(TO_DATE('02-JAN-04','DD-MON-YY'),'IW') "ISO Week" FROM DUAL;
ISO Week
--------------------
29-DEC-03 00:00:00
(1 row)
The following example truncates to the start of the week where a week is considered to
start on the same day as the first day of the month.
SELECT TRUNC(TO_DATE('21-MAR-07','DD-MON-YY'),'W') "Week" FROM DUAL;
Week
--------------------
15-MAR-07 00:00:00
(1 row)
The following example truncates to the start of the day.
SELECT TRUNC(TO_DATE('04-AUG-07 12:00:00 PM','DD-MON-YY HH:MI:SS AM'),'J')
"Day" FROM DUAL;
Day
--------------------
04-AUG-07 00:00:00
(1 row)
The following example truncates to the start of the week (Sunday).
SELECT TRUNC(TO_DATE('09-AUG-07','DD-MON-YY'),'DAY') "Day of Week" FROM DUAL;
Day of Week
--------------------
05-AUG-07 00:00:00
(1 row)
The following example truncates to the start of the hour.
SELECT TO_CHAR(TRUNC(TO_DATE('09-AUG-07 08:30','DD-MON-YY HH:MI'),'HH'),'DD-
MON-YY HH24:MI:SS') "Hour" FROM DUAL;
Hour
--------------------
09-AUG-07 08:00:00
(1 row)
The following example truncates to the minute.
SELECT TO_CHAR(TRUNC(TO_DATE('09-AUG-07 08:30:30','DD-MON-YY
HH:MI:SS'),'MI'),'DD-MON-YY HH24:MI:SS') "Minute" FROM DUAL;
Minute
--------------------
09-AUG-07 08:30:00
(1 row)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 267
Database Compatibility for Oracle® Developers
Reference Guide
2.4.8.8 CURRENT DATE/TIME
Advanced Server provides a number of functions that return values related to the current
date and time. These functions all return values based on the start time of the current
transaction.
 CURRENT_DATE
 CURRENT_TIMESTAMP
 LOCALTIMESTAMP
 LOCALTIMESTAMP(precision)
CURRENT_DATE returns the current date and time based on the start time of the current
transaction. The value of CURRENT_DATE will not change if called multiple times within
a transaction.