leads to unfairness between the ﬂows with diﬀerent RTTs.
3.2 Stationary Rate Allocation
In this section, we examine how packet-loss function (5)
aﬀects the resource allocation of Kelly’s proportional fair-
ness (1). Consider a network of M resources and N ho-
mogeneous users (i.e., with the same parameters κ and ω).
Further assume that resource j has capacity Cj, user i uti-
lizes route ri of length Mi (i.e., Mi = |ri|), and packet-loss
ηi(n) fed back to user i is the aggregate feedback from all
resources in path ri. We further assume that there is no
redundancy in the network (i.e., each user sends its packets
through at least one resource and all resources are utilized
by at least one user). Thus, we can deﬁne utilization matrix
AN×M such that Aij = 1 if user i passes through resource j
(i.e., j ∈ ri) and Aij = 0 otherwise. Further denote the j-th
column of A by vector Vj. Clearly, Vj identiﬁes the set sj
of ﬂows passing through router j.
N j)(cid:105)
be the vector of sending rates of individual users observed
at router j at time instant n. In the spirit of (5), the packet
loss of resource j at instant n can be expressed as:
Let xj(n) = (cid:104)x1(n− D→
2j ),··· , xN (n− D→
1j ), x2(n− D→
pj(n) =
,
(7)
xj(n) · Vj − Cj
xj(n) · Vj
where the dot operator represents vector multiplication. Ac-
cordingly, the end-to-end feedback ηi(n) of user i is:
ηi(n) =
pj(n − D
←
ij ),
(8)
(cid:88)
(cid:179)
j∈ri
(cid:180)
and the control equation assumes the following shape:
xi(n) = xi(n − 1) + κi
ωi − xi(n − Di)ηi(n)
.
(9)
Then, we have the following result.
Lemma 1. Let x∗ = (cid:104)x∗
2,··· , x∗
N(cid:105) be the stationary
rate allocation of Kelly control (9) with packet-loss function
(7)-(8). Then x∗ satisﬁes:
1, x∗
N(cid:88)
M(cid:88)
∗
Mix
i =
Cj + N ω.
(10)
i=1
j=1
Lemma 1 provides a connection between the stationary re-
source allocation and the path length of each ﬂow. Note that
according to (10), the stationary rates x∗
i are constrained by
the capacity of all resources instead of by that of individ-
ual bottlenecks. In fact, this observation shows an impor-
tant diﬀerence between the real network paths, which are
limited by the slowest resource, and the model of propor-
tional fairness, which takes into account the capacity of all
010203040020040060080010001200sending rate (mb/s)control steps0102030405060700200400600800100012001400sending rate (mb/s)control steps050100150200250300350020040060080010001200140016001800sending rate (mb/s)control steps0100200300400500−1.5−1−0.500.511.52x 108sending rate (mb/s)control steps0510152001020304050607080time (sec)sending rate (mb/s)05101520050100150200250time (sec)sending rate (mb/s)utilization) by abandoning proportional fairness and focus-
ing on its max-min counterpart.
4. STABLE CONGESTION CONTROL
In this section, we propose a new version of discrete Kelly
controls, which allows negative packet-loss feedback and main-
tains stability under heterogeneous delays.
4.1 Max-min Kelly Control
We start our discussion with the following observations.
First, we notice that in the classic Kelly control (1), the end-
user decides its current rate xi(n) based on the most recent
rate xi(n − 1) and delayed feedback µj(n − D←
ij ). Since
the latter carries information about xi(n − Di), which was
in eﬀect RTT time units earlier, the controller in (1) has
no reason to involve xi(n − 1) in its control loop. Thus, the
sender quickly becomes unstable as the discrepancy between
xi(n − 1) and xi(n − Di) increases. One natural remedy
to this problem is to retard the reference rate to become
xi(n − Di) instead of xi(n − 1) and allow the feedback to
accurately reﬂect network conditions with respect to the ﬁrst
term of (1).
Second, to avoid unfairness1 between ﬂows, one must ﬁx
the control parameters of all end-users and establish a uni-
form set of equations that govern the system. Thus, we cre-
ate a new notation in which κiωi = α, κi = β and discretize
the Kelly control as following:
xi(n) = xi(n − Di) + α − βηi(n)xi(n − Di),
(12)
where ηi(n) is the congestion indication function of user i.
Next, to overcome the problems of proportional fairness
demonstrated in the previous section and utilize negative
network feedback, we combine (12) with max-min fairness
(this idea is not new [11]), under which the routers only feed
back the packet loss of the most-congested resource instead
of the combined packet loss (8):
pj(n − D
←
ij ),
ηi(n) = max
j∈ri
(13)
where pj(·) is the congestion indication function of individ-
ual routers that depends only on the aggregate arrival rates
of end-users:
pj(n) = pj
xu(n − D
→
uj)
.
(14)
(cid:180)
(cid:179)(cid:88)
u∈sj
We call the resulting controller (12)-(14) Max-min Kelly
Control (MKC) and emphasize that the ﬂows congested by
the same bottleneck receive the same feedback and behave
independently of the ﬂows congested by the other links.
Therefore, in the rest of this paper, we study the single-
bottleneck case since each MKC ﬂow is always congested
by only one router. Implementation details of how routers
should feed back function (13) and how end-ﬂows track the
changes in the most-congested resource are presented in the
simulation section.
4.2 Delay-Independent Stability
Before restricting our analysis to MKC, we examine a wide
class of delayed control systems, whose stability directly fol-
lows from that of the corresponding undelayed systems. We
1While “fairness” is surely a broad term, we assume its max-
min version in this paper.
4(cid:88)
(a) simulation setup
(b) simulation results
Figure 3: Rate allocation of proportional fairness
(κ = 0.1 and ω = 5 mb/s).
resources in the network. This diﬀerence leads to severe
under/over-utilization of individual routers as illustrated in
the following simulation.
Figure 3(a) shows the topology of the simulation, in which
there are two ﬂows, x1 and x2, and four resources, C1-C4.
Notice that resource C2 = 20 mb/s is the bottleneck of x1
and C4 = 15 mb/s is the bottleneck of x2. The path lengths
of the two ﬂows are, respectively, M1 = 2 and M2 = 3. Set-
ting ω = 5 mb/s and κ = 0.1, let (cid:104)x∗
2(cid:105) be the stationary
rate allocation of the system, which according to (10) must
satisfy:
1, x∗
∗
∗
1 + 3x
2 =
2x
Ci + 2 × 5 = 95.
(11)
j=1
Simulation results for this setup are depicted in Figure
3(b). As seen in the ﬁgure, the steady-state rate assignment
is (cid:104)23.436, 16.042(cid:105) mb/s, which indeed satisﬁes prediction
(11); however, notice that the combined stationary rate of
both ﬂows is 39.5 mb/s, which exceeds C2 by 97%. As a
result, the users overshoot network capacity in the steady
state and persistently suﬀer from signiﬁcant packet loss.
This problem is easy to understand. Observe that uncon-
gested routers C1 and C3 encourage end-ﬂows to increase
their rates through negative feedback, while congested re-
sources C2 and C4 signal the opposite and encourage the
ﬂows to reduce their rates. Combining this conﬂicting feed-
back into summation (8), each user settles in some middle
ground that keeps neither their slowest, nor their fastest re-
sources in ri fully “satisﬁed.” Even for a network with a
single ﬂow, (11) shows that the stationary rate of the ﬂow
is simply the average capacity of all resources on its path:
x∗ = (
j=1 Cj + ω)/M . For the example in Figure 3, x1
would converge to 27.5 mb/s, which is well in excess of its
bottleneck capacity C2.
(cid:80)M
In general, for proportional fairness (8) and similar meth-
ods that rely on the combined pricing function of all re-
sources to remain viable, no price should be charged at
routers that are not suﬀering any packet loss. Under these
circumstances, notice in (1) that the ﬂows increase their
rates by κiωi at each discrete time-step before they reach
full link utilization at the slowest router. This results in
linear AIMD-like probing for new bandwidth, which is gen-
erally considered “too slow” for high-speed networks.
In the next section, we overcome both drawbacks of con-
troller (1) (i.e., instability under delay and undesirable link
x1x2C1C3C220 mb/s15 mb/sC430 mb/s20 mb/s0501001502000510152025control stepssending rate (mb/s)x1*=23.436 mb/s x2*=16.042 mb/s N(cid:88)
j=1
N(cid:88)
subsequently show that MKC belongs to this category and
obtain a very simple proof of its stability. First consider the
following theorem.
Theorem 1. Assume an undelayed linear system L with
N ﬂows:
xi(n) =
aijxj(n − 1).
(15)
If coeﬃcient matrix A = (aij) is real-valued and symmetric,
then system LD with arbitrary directional delays:
xi(n) =
aijxj(n − D
j − D
→
←
i ),
(16)
is asymptotically stable if and only if L is stable.
j=1
Proof. We ﬁrst show the suﬃcient condition. Assume
that L is asymptotically stable. Applying the z-transform
to system (16), we obtain:
H(z) = Z1AZ2H(z),
(17)
where Z1 = diag(z−D←
i ) are the di-
agonal matrices of directional delays, and H(z) is the vector
of z-transforms of each ﬂow rate xi:
i ) and Z2 = diag(z−D→
H(z) =
H1(z), H2(z),··· , HN (z)
(cid:174)T .
(cid:173)
Notice that linear system (16) is stable if and only if all
poles of its z-transform H(z) are within the unit circle in
the z-plane [12]. To examine this condition, re-organize the
terms in (17):
(Z1AZ2 − I) H(z) = 0.
(19)
Next notice that the poles of H(z) are simply the roots of
the determinant of Z1AZ2 − I, which leads to the following
condition that is both suﬃcient and necessary for stability
of LD:
det(Z1AZ2 − I) = 0.
(20)
Re-writing (20):
det(Z1AZ2 − I) = det(Z1[A − Z
−1
1 IZ
= det(Z1)det(A − Z
−1
2 ]Z2)
−1
−1
1 Z
2 )det(Z2).
(21)
(cid:162)
(cid:161)
Since det(Z1) and det(Z2) are strictly non-zero for non-
trivial z, (20) reduces to:
det(A − Z
−1
−1
1 Z
2 ) = det
(22)
where B(z) = −Z
· Z
2 = −diag(zDi ) is the diagonal
−1
−1
1
matrix of round-trip delays. Thus, it remains to examine
whether the roots of (22) are inside the unit circle.
A + B(z)
= 0,
To bound the roots of (22), we ﬁrst need the following
theorem from [20].
Theorem 2
(Li-Mathias [20]). Given N -dimensional
square matrices Q1 and Q2, whose singular values are α1 ≥
α2 ≥ ··· ≥ αN and β1 ≥ β2 ≥ ··· ≥ βN , respectively, the
following holds:
det(Q1 + Q2) ≥
if [αN , α1] ∩ [βN , β1] (cid:54)= ∅
(αj − βN−j+1)
. (23)
otherwise
(cid:175)(cid:175)(cid:175)
 0
(cid:175)(cid:175)(cid:175) N(cid:89)
j=1
(18)
det
A + B(z0)
= 0 ≥
(αj − βN−j+1)
(24)
We next apply the lower bounds given in the above theo-
rem to (22). Recall that singular values of a square matrix
X are the non-negative square roots of the eigenvalues of
the product of X and its adjoint (or equivalently, conjugate
transpose) matrix X∗ [1]. In (22) both matrices A and B(z)
are symmetric and real-valued, which means that their sin-
gular values are the absolute values of their eigenvalues. Let
{λi} be the eigenvalues of A. Then the singular values of
A are {αi|αi = |λi|}. Similarly, we get that the singular
values of a diagonal matrix B(z) are {βi|βi = |zDi|}. With-
out loss of generality, we assume that {αi} and {βi} are
ordered by their magnitude, i.e., α1 ≥ α2 ≥ ··· ≥ αN and
β1 ≥ β2 ≥ ··· ≥ βN .
Let z0 be a root of (22). Then there are two possibilities:
1) The intervals deﬁned by {αi} and {βi} intersect, i.e.,
[αN , α1] ∩ [βN , β1] (cid:54)= ∅. This means that there must ex-
ist at least one singular value βj such that βj ∈ [αN , α1].
According to the assumption that undelayed system L in
(15) is stable, each eigenvalue λi of matrix A must satisfy
|λi| = αi < 1, which leads to 0 ≤ βj < 1. This translates
into |zDj
0 | < 1, for some j, and directly leads to |z0| < 1
since all delays Dj are discrete and no less than 1.
2) The two segments do not overlap, i.e., [αN , α1]∩[βN , β1] =
∅. Then, combining (22) and (23), we have:
(cid:161)
(cid:162)
(cid:175)(cid:175)(cid:175) N(cid:89)
(cid:175)(cid:175)(cid:175),
(cid:175)(cid:175)(cid:175) N(cid:89)
j=1