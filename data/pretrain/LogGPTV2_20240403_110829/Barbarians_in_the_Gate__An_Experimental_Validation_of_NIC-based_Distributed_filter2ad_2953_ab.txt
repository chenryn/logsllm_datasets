### Bandwidth and HTTP Load Testing

To measure the available bandwidth, both Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) were utilized. The firewall policy was configured to allow communication between the iPerf client and server, as illustrated in Figure 1.

#### HTTP Load Testing
HTTP load tests were conducted using `http_load` to repeatedly request a web page from an Apache2 web server. The server was configured with the default Gentoo settings. To measure performance loss, `http_load` was set to use at most one connection at a time with an unlimited rate for 30 seconds. Alternatively, `http_load` could be configured to measure the number of parallel connections supported by the server at a given connection rate.

### Flood Tolerance Testing
The flood tolerance of the EFW/ADF was tested using an additional machine as a hypothetical attacker, as shown in Figure 1. Tests involved sending a packet flood to the target and then measuring the bandwidth between the client and the target. If the flood prevented the measurement (i.e., 0 Mbps), the denial-of-service attempt was deemed successful. The implementation of our flood generator is detailed in [11].

### Performance Analysis
#### Rule-Set Impact on 100 Mbps Network
For rule-sets containing fewer than 64 rules on a 100 Mbps network, the ADF's performance drop was more significant when VPGs were used. This is attributed to the additional encryption/decryption overhead for all VPG packets processed by the ADF. Inserting non-matching VPGs into the rule-set did not appreciably decrease performance, indicating that the ADF can avoid decrypting incoming packets until they reach the matching VPG rule.

#### Available Bandwidth During Floods
The poor performance of the EFW/ADF suggested that a packet flood could easily overload the EFW/ADF card. To measure flood tolerance, a packet flood was directed at the firewall, and the available bandwidth was measured. If the flood consumed all firewall resources, no bandwidth would be available. This experiment measured the maximum throughput of the minimal, one-rule rule-set.

At each of nine flood rates, three bandwidth measurements were taken and averaged. The results are shown in Figure 3(a). Both the EFW and ADF experienced a major bandwidth loss with a flood of 16,000 packets per second. A flood of 20,000 packets per second reduced the available bandwidth to almost zero, creating a successful denial-of-service attack. In contrast, the standard NIC and iptables supported 77 Mbps under a 20,000 packet-per-second flood, indicating that the EFW and ADF were solely responsible for the loss. Additionally, the flood tolerance of a single VPG showed a near-linear relationship between bandwidth and flood rate.

#### Minimum Flood Rate
From the previous experiment, it was clear that even a simple one-rule rule-set is vulnerable to denial-of-service attacks. However, embedded firewalls typically have more complex rule-sets. Therefore, it is important to determine if adding rules decreases the minimum required flood rate.

The minimum flood rate is defined as the minimum packet rate needed to cause a denial of service. This rate was determined by incrementally increasing the flood rate until the measured bandwidth fell to approximately 0 Mbps. Two rule-set classes were tested: one allowing flood packets and another denying them. The results are presented in Figure 3(b).

With only eight rules, an attacker on a 10 Mbps network could easily cause a denial-of-service if the flood packets were allowed. For the largest rule-set, the attacker needed to generate 4,500 packets/s to create a denial-of-service. Denying flood packets provided some flood tolerance, but this was due to the lack of outgoing TCP responses. When attack packets are dropped, no outgoing response packets are sent, halving the total traffic through the firewall and doubling the required flood rate.

#### HTTP Performance
The denial-of-service experiments indicated that the EFW/ADF may significantly impact application performance. To convert raw packet performance to application-level performance, we conducted an additional experiment measuring web server performance. HTTP performance tests were run against an Apache2 web server, providing direct insight into the performance decrease associated with the firewall filtering.

### Conclusion
The EFW/ADF's performance drop with VPGs and its vulnerability to packet floods highlight the need for careful rule-set configuration. While denying flood packets can provide some protection, it is only partially effective. The standard NIC and iptables demonstrated superior flood tolerance, suggesting that these solutions may be more suitable for high-traffic environments.