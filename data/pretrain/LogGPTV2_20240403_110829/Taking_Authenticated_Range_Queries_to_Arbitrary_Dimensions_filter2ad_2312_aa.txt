title:Taking Authenticated Range Queries to Arbitrary Dimensions
author:Dimitrios Papadopoulos and
Stavros Papadopoulos and
Nikos Triandopoulos
Taking Authenticated Range Queries to
Arbitrary Dimensions
Dimitrios Papadopoulos
Boston University
Boston MA, USA
PI:EMAIL
Stavros Papadopoulos
Intel Labs & MIT
Cambridge MA, USA
PI:EMAIL
Nikos Triandopoulos
RSA Laboratories &
Boston University
Cambridge MA, USA
PI:EMAIL
ABSTRACT
We study the problem of authenticated multi-dimensional range
queries over outsourced databases, where an owner outsources its
database to an untrusted server, which maintains it and answers
queries to clients. Previous schemes either scale exponentially in
the number of query dimensions, or rely on heuristic data structures
without provable bounds. Most importantly, existing work requires
an exponential, in the database attributes, number of structures to
support queries on every possible combination of dimensions in the
database. In this paper, we propose the ﬁrst schemes that (i) scale
linearly with the number of dimensions, and (ii) support queries on
any set of dimensions with linear in the number of attributes setup
cost and storage. We achieve this through an elaborate fusion of
novel and existing set-operation sub-protocols. We prove the secu-
rity of our solutions relying on the q-Strong Bilinear Difﬁe-Hellman
assumption, and experimentally conﬁrm their feasibility.
Categories and Subject Descriptors
H.2.7 [Database Management]: Database Administration—secu-
rity, integrity and protection; C.2.4 [Communication Networks]:
Distributed Systems—client/server, distributed databases
General Terms
Algorithms, Security, Veriﬁcation
Keywords
authenticated range queries; authenticated data structures; delega-
tion of computation; database outsourcing
1.
INTRODUCTION
Database outsourcing [16] has lately emerged as a common prac-
tice for companies and institutions. It allows a data owner to del-
egate the maintenance and administration of its database to a pow-
erful third-party server. Clients access the database by contacting
the server instead of the owner. This paradigm reduces the owner’s
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright 2014 ACM 978-1-4503-2957-6/14/11 ...$15.00.
http://dx.doi.org/10.1145/2660267.2660373 .
needs for building a sophisticated and potentially costly infrastruc-
ture, since storage and computationally intensive tasks are ofﬂoaded
to the server. On the other hand, the server proﬁts from accommo-
dating a large number of owners. Despite its merits, database out-
sourcing poses the challenge that the server may be untrusted and,
thus, tamper with the results (e.g., to bias the competition among
rival serviced companies). Hence, it is vital that the server provides
the client with proofs certifying the result integrity, i.e., that the
query was executed correctly on the owner’s data.
In this work we target the case where the client issues a multi-
dimensional range query. We model the owner’s database as a ta-
ble T that contains n tuples with m attribute values. A range query
is deﬁned over d out of the m attributes, which we refer to as di-
mensions. It is expressed as d pairs of values li, ui, each along a
certain dimension ai. Its result includes all the tuples whose value
on ai is in range [li, ui] for all dimensions ai speciﬁed in the query.
This query is fundamental in a vast variety of applications. For
instance, it is a typical select...where query in conventional rela-
tional databases. Moreover, it is a frequent query in the emerging
scientiﬁc databases (e.g., it is called subarray in SciDB [7]). Re-
lational and scientiﬁc database systems manage numerous types of
data, such as corporate, stock, astronomical, medical, etc. With the
advent of “big data,” such systems are commonly deployed by third
party servers in massively parallel architectures, in order to address
the issue of scalability. Integrity assurance is a desirable property
that serves both as a guarantee against a possibly malicious server,
but also as a tool for error detection.
Prior work. The most basic authentication problem is set member-
ship, i.e., whether an element belongs in a data collection. Well-
known example schemes include Merkle trees [19] and accumu-
lation trees [22]. At the opposite extreme, there exist generic ap-
proaches (e.g., [11, 25]) that aim at authenticating any possible
query on outsourced data. Although such protocols can address our
problem, they incur an excessive proof construction overhead at the
server, due to their generality. Therefore, there is a large variety of
specialized constructions that have been proposed in the literature
for the problem of authenticated multi-dimensional range queries.
Martel et al. [18] provide a generalization of Merkle trees, which
captures the case of multi-dimensional range queries. Chen et al. [9]
proposes a solution that is similar to [18], based on attribute do-
main partition and access control. For the restricted case of 1-
dimensional and 2-dimensional queries, Goodrich et al. [14, 15]
construct schemes based on cryptographic extensions of Merkle
trees. Li et al. [17] propose a variant of the B+-tree that incor-
porates hash values similarly to the Merkle tree, for processing 1-
dimensional queries in external storage. Yang et al. [28] extend this
idea to multiple dimensions, by transforming the R∗-tree [4] into a
819Scheme
Martel et al. [18]
Chen et al. [9]
Our basic scheme (using [19])
Our basic scheme (using [22])
Our update-efﬁcient scheme (using [19])
Our update-efﬁcient scheme (using [22])
O(|T|)
O(|T|)
√
√
n)
O(m
n)
O(m
m: # attributes, n: # tuples, |T|(= mn): database size, d: # dimensions, Ri: partial result at dimension ai, R: query result, N: maximum domain size,  ∈ (0, 1]
˜O(|R|) + O(d log n)
˜O(|R|) + O(d log n)
˜O(|R|) + O(d)
˜O(|R|) + O(d)
Table 1: Comparison of asymptotic complexities of authenticated multi-dimensional range query schemes
Veriﬁcation
O(logd−1 |T|)
O(logd N )
Update
O(logm−1 |T|)
O(logm N )
Setup
Proof size
O(|T| logm−1 |T|) O(logd−1 |T|)
O(|T| logm N )
O(logd N )
O(|T| log n)
O(d log n)
O(|T| log n)
O(|T| log n)
O(|T| log n)
O(d log n)
O(d)
O(d)
Proof construction
˜O((cid:80)d
˜O((cid:80)d
˜O((cid:80)d
˜O((cid:80)d
O(logd−1 |T|)
O(logd N )
i=1 |Ri|) + O(d log n)
i=1 |Ri|) + O(dn log n)
i=1 |Ri|) + O(d log n)
i=1 |Ri|) + O(dn log n)
Merkle R∗-tree. There are also other cryptographically augmented
data structures (e.g., [20, 10] based on signatures instead of hashes).
The existing literature suffers from the following critical prob-
lems. On the one hand, the schemes of [18, 9] that provide guar-
anteed (non-trivial) complexity bounds, scale exponentially with
the number of dimensions d. On the other hand, the rest of the
approaches rely on the heuristic R∗-tree and fail to accommodate
more than a limit of dimensions in practice (e.g., more than 8), as
the performance and effectiveness of the index deteriorates with
dimensionality. Most importantly, all methods require an exponen-
tial in m number of structures to support queries on every possible
combination of dimensions in the database. This is because each
structure is built on a speciﬁc set of dimensions, and different sets
require separate structures.
Finally, there is a work by Xu [27] that, contrary to [18, 9], scales
quadratically with d. However, this scheme falls within a different
model, as it necessitates multi-round interaction between server and
client (as opposed to our non-interactive setting).
Its security is
based on non-falsiﬁable “knowledge-type” assumptions. Moreover,
this scheme makes use of functional encryption [6], considerably
reducing its potential for implementation.
Our contributions. We introduce two schemes for authenticated
multi-dimensional range query processing; a basic, and a update-
efﬁcient. Our solutions feature two novel and powerful properties:
• They are the ﬁrst schemes where all costs (i.e., setup, stor-
age, update, proof construction, veriﬁcation, and proof size)
grow only linearly with the number of dimensions, a huge
improvement over the current literature. Table 1 provides
a comparison of our asymptotic complexities against known
schemes (with non-trivial bounds).
• They are the ﬁrst to support an exponential in m number of
range queries with linear in m setup cost and storage.
In that sense, the main result of this work is that it takes authenti-
cated range query processing to arbitrary dimensions, both in terms
of number and choice.
The central idea of our solutions is the reduction of the multi-
dimensional range query to set-operations over appropriately de-
ﬁned sets in the database. In particular, in a one-time setup stage,
the owner builds a novel authenticated structure over every database
attribute separately, and then binds all structures using an existing
set-membership structure (e.g., [19, 22]). Given a query involv-
ing any set of dimensions, the server decomposes it into its d 1-
dimensional ranges, and processes them individually on the struc-
ture of each dimension, producing d proofs for the partial results
R1, . . . , Rd. The main challenge is for these d proofs to (i) be
combinable such that they verify the intersection of Ri, which is
the ﬁnal result R, and (ii) be veriﬁable without the partial results,
so that the total proof size and veriﬁcation cost are independent of
their (potentially large) sizes. We address this challenge through
an elaborate fusion of existing and novel intersection, union, and
set-difference protocols, based on bilinear accumulators.
This particular treatment of the problem, i.e., the efﬁcient au-
thentication of a d-dimensional range query via the combination of
d separate 1-dimensional proofs, would not be feasible without the
recent advances in set-operation authentication (e.g., [24, 8]). We
anticipate that future research will substantially improve the efﬁ-
ciency of the set-operation sub-protocols. Motivated by this, as an
additional important contribution, we identify and abstract the set-
operation sub-protocols needed as building blocks in our schemes,
and formulate a general framework that can integrate any future
improved machinery for set-operation authentication.
We formally prove our constructions secure under the q-Strong
Bilinear Difﬁe-Hellman [5] assumption and the security of the un-
derlying set-membership schemes. We also provide an experimen-
tal evaluation, demonstrating the feasibility of our schemes.
Roadmap. Section 2 contains the necessary cryptographic back-
ground. Section 3 formulates our problem. Section 4 presents our
basic scheme for authenticated multi-dimensional range query pro-
cessing, whereas Section 5 introduces an alternative construction
with optimized updates. Section 6 provides a thorough experimen-
tal evaluation of our solutions. Finally, Section 7 concludes our
paper with directions to future work.
2. CRYPTOGRAPHIC BACKGROUND
In the following, λ denotes the security parameter, ν(λ) a negli-
gible function, and PPT a probabilistic polynomial time algorithm.
In complexity analysis, we also use ˜O notation that hides a poly-
logarithmic multiplicative factor. Moreover, for proof sizes, we
omit the factor imposed by the bit representation of group elements.
Bilinear pairings. Let G1, G2 be cyclic multiplicative groups of
prime order p, generated by g1, g2 respectively. Let also GT be a
cyclic multiplicative group with the same order p and e : G1 ×
G2 → GT be a bilinear pairing with the following properties: (1)
Bilinearity: e(P a, Qb) = e(P, Q)ab for all P, Q ∈ G1 × G2 and
a, b ∈ Zp. (2) Non-degeneracy: e(g1, g2) (cid:54)= 1. (3) Computability:
There is an efﬁcient algorithm to compute e(P, Q) for all P, Q ∈
G1 × G2. In the sequel, for ease of presentation, we will assume a
symmetric (Type I) pairing, where G1 = G2 = G. We denote with
pub = (p, G, GT , e, g) the bilinear pairings parameters, output by
a PPT algorithm BilGen on input 1λ. We will make use of the
following assumption over bilinear groups:
ASSUMPTION (q-Strong Bilinear Difﬁe-Hellman (q-SBDH) [5]).
Let λ be a security parameter and let pub ← BilGen(1λ). Given