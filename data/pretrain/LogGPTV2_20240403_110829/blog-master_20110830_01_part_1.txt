## the order of chinese char in PostgreSQL DB with different encoding and it's collate         
### 作者                                                                   
digoal                                                                    
### 日期                                                                  
2011-08-30                                                                     
### 标签                                                                  
PostgreSQL , 拼音首字母 , 转换 , 字符边界                                                                                                    
----                                                                  
## 背景     
这是一篇比较老的文章，仅作记录，拼音相关建议看以下文章  
[《PostgreSQL WHY ERROR: invalid byte sequence for encoding "UTF8"》](../201212/20121228_01.md)  
[《PostgreSQL SQL_ASCII encoding introduce》](../201305/20130510_01.md)   
[《PostgreSQL Server Encoding sql_ascii attention》](../201303/20130315_01.md)  
[《PostgreSQL 按拼音排序 - convert to GBK/EUC_CN coding》](../201612/20161205_01.md)  
[《PostgreSQL 获取拼音首字母的函数 - 摘自互联网》](../201605/20160511_01.md)  
[《在PostgreSQL中实现按拼音、汉字、拼音首字母搜索的例子》](../201611/20161109_01.md)    
## 正文  
今天群里面在讨论关于中文排序的问题,下面从PostgreSQL数据库编码来整理一下。  
下面是在一台Linux(RHEL5)机器上的测试,数据库版本PostgreSQL 9.1beta2  
首先,  
可以存储简体中文的服务端字符集编码(不含繁体)：  
1\. EUC_CN  
2\. SQL_ASCII  
3\. UTF8  
可以显示简体中文的客户端字符集编码(不含繁体)，除以上三种还有如下：  
1\. GB18030  
2\. GBK  
排序除与字符编码有关，还与COLLATE有关。  
在pg_collation系统表可以查找到字符集对应的可以选择的collate和ctype信息。  
下面来测试一组中文排序：  
1\. UTF8编码的数据库  
```  
postgres=# create database db_utf8 with owner digoal template template0 encoding 'UTF8';  
CREATE DATABASE  
postgres=# \c db_utf8 digoal  
You are now connected to database "db_utf8" as user "digoal".  
db_utf8=> create table tbl_chinese_order (info text);  
CREATE TABLE  
db_utf8=> insert into tbl_chinese_order values ('刘少奇');  
INSERT 0 1  
db_utf8=> insert into tbl_chinese_order values ('刘德华');  
INSERT 0 1  
db_utf8=> insert into tbl_chinese_order values ('张学友');  
INSERT 0 1  
```  
以下SQL得到的结果一致：  
```  
select * from tbl_chinese_order order by info;  
select * from tbl_chinese_order order by info collate "C";  
select * from tbl_chinese_order order by info collate "zh_CN";  
select * from tbl_chinese_order order by info collate "zh_CN.utf8";select * from tbl_chinese_order order by info collate "POSIX";  
select * from tbl_chinese_order order by info collate "default";  
```  
结果都一样:  
```  
  info    
--------  
 刘少奇  
 刘德华  
 张学友  
(3 rows)  
```  
2\. SQL_ASCII编码的数据库(不推荐 "多字节字符" 使用sql_ascii, 参考手册对应部分)  
```  
postgres=# create database db_sql_ascii with owner digoal template template0 encoding 'SQL_ASCII';  
CREATE DATABASE  
```  
测试数据同上.  
以下SQL得到的结果一致：  
```  
select * from tbl_chinese_order order by info;  
select * from tbl_chinese_order order by info collate "C";  
select * from tbl_chinese_order order by info collate "POSIX";  
select * from tbl_chinese_order order by info collate "default";  
```  
结果都一样:  
```  
  info    
--------  
 刘少奇  
 刘德华  
 张学友  
(3 rows)  
```  
3\. EUC_CN编码的数据库  
```  
postgres=# create database db_euc_cn with owner digoal template template0 encoding 'EUC_CN';  
CREATE DATABASE  
```  
测试数据同上.  
这次结果有变化:  
```  
select * from tbl_chinese_order order by info collate "zh_CN.gb2312";  
select * from tbl_chinese_order order by info collate "zh_CN";  
```  
结果如下:  
```  
  info    
--------  
 刘少奇  
 刘德华  
 张学友  
(3 rows)  
```  
以下SQL按拼音返回顺序了:  
```  
select * from tbl_chinese_order order by info;  
select * from tbl_chinese_order order by info collate "C";  
select * from tbl_chinese_order order by info collate "POSIX";  
select * from tbl_chinese_order order by info collate "default";  
  info    
--------  
 刘德华  
 刘少奇  
 张学友  
(3 rows)  
```  
根据以上的测试结果，说明EUC_CN字符集的字符对应的编码顺序和SQL_ASCII以及UTF8不一样，因此使用collate=C来排序时得到了不一样的结果。  
然而order by info collate "zh_CN"并没有带来所需要的结果，当然这个可能是LIBC有关, 也可能是其他原因.  
https://www.postgresql.org/docs/9.6/static/collation.html  
补充一个例子,PostgreSQL9.1可以针对列设置collate值，如下:  
```  
db_euc_cn=> drop table tbl_chinese_order;  
DROP TABLE  
db_euc_cn=> create table tbl_chinese_order (info text collate "zh_CN");  
CREATE TABLE  
db_euc_cn=> insert into tbl_chinese_order values ('刘少奇');  
INSERT 0 1  
db_euc_cn=> insert into tbl_chinese_order values ('刘少奇');  
INSERT 0 1  
db_euc_cn=> insert into tbl_chinese_order values ('刘德华');  
INSERT 0 1  
db_euc_cn=> insert into tbl_chinese_order values ('张学友');  
INSERT 0 1  
```  
默认的collate就不再是数据库初始化时默认的C了, 而是指定的zh_CN.  
```  
db_euc_cn=> select * from tbl_chinese_order order by info;  
  info    
--------  
 刘少奇  
 刘少奇  
 刘德华  
 张学友  
(4 rows)  
db_euc_cn=> select * from tbl_chinese_order order by info collate "POSIX";  
  info    
--------  
 刘德华  
 刘少奇  
 刘少奇  
 张学友  
(4 rows)  
```  
## 抛开数据库，来看看操作系统下的排序  
1\. 首先是LINUX(RHEL5)操作系统里面的排序风格：  
```  
postgres@db5-> export LANG=en_US.utf8  
postgres@db5-> cat order   
刘德华  
张学友  
刘少奇  
postgres@db5-> cat order |sort  
刘少奇  
刘德华  
张学友  
postgres@db5-> export LANG=zh_CN.gbk  
postgres@db5-> cat order |sort  
张学友  
刘德华  
刘少奇  
postgres@db5-> export LANG=zh_CN.utf8  
postgres@db5-> cat order |sort  
刘少奇  
刘德华  
张学友  
postgres@db5-> export LC_COLLATE=zh_CN.gbk  
postgres@db5-> cat order |sort  
张学友  
刘德华  
刘少奇  
postgres@db5-> export LC_COLLATE=C  
postgres@db5-> cat order |sort  
刘少奇  
刘德华  
张学友  
postgres@db5-> export LC_COLLATE=POSIX  
postgres@db5-> cat order |sort  
刘少奇  
刘德华  
张学友  
```  