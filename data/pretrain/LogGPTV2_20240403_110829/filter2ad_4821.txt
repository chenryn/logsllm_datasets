# Title: SoftCast: One-Size-Fits-All Wireless Video

## Authors
- Szymon Jakubczak, Massachusetts Institute of Technology, PI:EMAIL
- Dina Katabi, Massachusetts Institute of Technology, PI:EMAIL

## Abstract
This demonstration focuses on the performance of streaming video over mobile wireless channels. We compare two approaches: the standard method, which transmits H.264/AVC-encoded streams over 802.11-like PHY, and SoftCast, a novel design that allows each receiver to decode a video quality commensurate with its specific instantaneous channel quality.

**Categories and Subject Descriptors**: C.2 [Computer-Communication Networks]: Miscellaneous  
**General Terms**: Algorithms, Design, Performance, Theory  
**Keywords**: Wireless networks, scalable video communications, joint source-channel coding

## 1. Introduction
Mobile video broadcasting presents significant challenges for traditional wireless designs. Channel quality can vary unpredictably due to mobility [3,9]. Video codecs, which operate over groups of pictures (GOPs), cannot instantaneously adapt the video rate to the channel bit rate, leading to video glitches and stales [2]. In multicast scenarios, different receivers experience different channel qualities (SNRs) and support different bit rates. The transmitter must select a single transmission bit rate, often resulting in all receivers being limited to the quality supported by the worst receiver.

This demonstration advocates SoftCast, an alternative design for wireless video streaming. SoftCast uses a novel encoding technique that allows it to broadcast a single stream, from which each receiver can decode a video quality that matches its instantaneous channel quality. This eliminates the need for the source to adapt to varying channel conditions, and ensures that different multicast receivers are served without reducing everyone to the quality of the worst receiver. Additionally, SoftCast can achieve this performance without requiring any receiver feedback.

SoftCast integrates video compression and transmission over the wireless physical layer. It starts with video represented as a sequence of numbers, each corresponding to a pixel luminance. By applying a series of linear transformations, it generates the final signal samples for transmission. The linearity of these transformations ensures that the transmitted signal samples are linearly related to the original pixel values. As a result, increasing channel noise progressively perturbs the transmitted bits in proportion to their significance for the video application. High-quality channels perturb only the least significant bits, while low-quality channels still preserve the most significant bits. Each receiver decodes the received signal into video whose quality is proportional to its specific instantaneous channel quality.

We previously presented a preliminary design of SoftCast in [6]. Since then, we have enhanced SoftCast to include inter-frame compression, allowing it to exploit the correlation between subsequent frames in addition to the correlation of pixels within each frame. The new design also includes packet erasure protection and is refined to work with actual OFDM PHY, such as provided by GNURadio [5].

## 2. Demonstration
This demonstration showcases live video streaming to mobile USRP software radio nodes. It compares the video performance of two schemes: SoftCast and the existing design using H.264/AVC (MPEG-4 part 10) over 802.11a/g PHY. In the experiment, a video sequence is streamed over the wireless channel to one or two mobile receivers. Spectators can freely move the nodes around and observe the live video feed on a laptop screen, noting how channel conditions affect the perceptible video quality.

The compared schemes share the same low-level OFDM PHY implemented in GNURadio [5] and the USRP2 hardware, ensuring identical channel conditions, including parameters such as channel bandwidth, airtime, transmission power, and receiver noise. While channel attenuation and fading are not directly controlled, they can be influenced by changing the node location (distance from the transmitter, presence of walls, etc.).

We have implemented real-time SoftCast using the ATLAS linear algebra package [1]. SoftCast encodes the video from pixels directly into OFDM frequency bin samples. The H.264 implementation is provided by libx264 [11], and the H.264-encoded bitstream is processed using 802.11 FEC developed with Spiral [8] and modulated using GNURadio signal processing blocks.

The experiment demonstrates that SoftCast's performance is robust to unpredictable channel conditions in mobile scenarios and scales gracefully with multiple receivers. Each receiver observes video quality that matches its instantaneous channel quality, without experiencing glitches or stales. This adaptation occurs naturally in response to the noise or interference level in the received signal, without requiring receiver feedback or sender adaptation.

## 3. Experimental Results
Figure 2 graphically illustrates the characteristics of different video encoding and transmission schemes. Each graph plots the video quality at the receiver as a function of the channel quality, with all schemes using the same transmission power and channel bandwidth over the same period of time.

### Figure 2(a)
This graph shows the realizable space of video qualities for conventional MPEG-based approaches. Each line represents a particular choice of transmission bit rate, i.e., a specific forward error correction code and modulation scheme. The video codec encodes the video at the same rate as the channel transmission bit rate. The effective compression ratio of the video codec changes from 33:1 at the lowest rate to 3.7:1 at the highest rate. The graph shows that for any selection of transmission bit rate, the conventional design experiences a performance cliff, where there is a critical SNR below which the video is not watchable, and above which the video quality does not improve with further improvements in channel quality.

### Figure 2(b)
This graph shows the video qualities obtained by layered video coding. The video is encoded using the JSVM reference implementation for scalable video coding (SVC) [7]. The physical layer transmits the video using hierarchical modulation over OFDM, an inner convolutional code, and an outer Reed-Solomon code, following the recommendations in [4]. The figure shows two solid lines: the red line encodes the video into two layers, while the blue line encodes the video into three layers. For reference, the dashed lines show the single-layer MPEG-4 videos that span the range of channel SNRs covered by the layered video. Layered video transforms the performance cliff of the conventional design into milder cliffs. However, layering introduces extra overhead [10], increasing the size of the video. Given a particular bit rate budget, the video codec must reduce the quality of the layered video compared to the single-layer video to ensure that the videos have the same size and can be streamed at the same bit rate. As a result, the enhancement layer of the 3-layer video has lower quality than the corresponding layer in the 2-layer video, which in turn has lower quality than the single-layer video.

### Figure 2(c)
This graph shows the video qualities obtained with SoftCast. Since SoftCast maps pixels to channel samples in the real field, it has no concept of bit rate. Unlike the conventional or layered designs, where channel noise determines the maximum reliable (layer) bit rate, in SoftCast, channel noise directly translates to distortion in the video pixels. Therefore, SoftCast's video quality is proportional to the channel quality and remains competitive with the envelope of all MPEG curves.

## 4. References
[1] Automatically tuned linear algebra software. http://math-atlas.sourceforge.net/.

[2] G. Bai and C. Williamson. The Effects of Mobility on Wireless Media Streaming Performance. In Proceedings of Wireless Networks and Emerging Technologies, pages 596â€“601, July 2004.

[3] J. Camp and E. W. Knightly. Modulation Rate Adaptation in Urban and Vehicular Environments: Cross-Layer Implementation and Experimental Evaluation. In MOBICOM, 2008.

[4] ETSI. Digital Video Broadcasting; Framing Structure, Channel Coding and Modulation for Digital Terrestrial Television, Jan 2009. EN 300 744.

[5] The GNU Software Radio. http://gnuradio.org/trac.

[6] S. Jakubczak, H. Rahul, and D. Katabi. One-Size-Fits-All Wireless Video. In HotNets, 2009.

[7] SVC Reference Software. http://ip.hhi.de/imagecom_G1/savce/downloads/SVC-Reference-Software.htm.

[8] Spiral Project: Viterbi Decoder Software Generator. http://www.spiral.net.

[9] M. Vutukuru, H. Balakrishnan, and K. Jamieson. Cross-Layer Wireless Bit Rate Adaptation. In ACM SIGCOMM, Aug 2009.

[10] M. Wien, H. Schwarz, and T. Oelbaum. Performance Analysis of SVC. IEEE Trans. Circuits and Systems for Video Technology, 17(9), Sept. 2007.

[11] x264 - A Free H.264/AVC Encoder. http://www.videolan.org/developers/x264.html.