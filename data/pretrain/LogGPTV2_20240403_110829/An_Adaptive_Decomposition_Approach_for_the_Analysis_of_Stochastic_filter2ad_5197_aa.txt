title:An Adaptive Decomposition Approach for the Analysis of Stochastic
Petri Nets
author:Peter Buchholz
An Adaptive Decomposition Approach for the Analysis of Stochastic Petri Nets
Institute for Applied Computer Science, Dresden University of Technology, D-01062 Dresden, Germany
PI:EMAIL
Peter Buchholz
Abstract
We present a new approximate solution technique for the
numerical analysis of superposed generalized stochastic
Petri nets (SGSPNs) and related models. The approach
combines numerical iterative solution techniques and ﬁxed
point computations using the complete knowledge of state
space and generator matrix. In contrast to other approxi-
mation methods, the proposed method is adaptive by con-
sidering states with a high probability in detail and aggre-
gating states with small probabilities. Probabilities are ap-
proximated by the results derived during the iterative solu-
tion. Thus, a maximum number of states can be predeﬁned
and the presented method automatically aggregates states
such that the solution is computed using a vector of a size
smaller or equal to the maximum. By means of a non-trivial
example it is shown that the approach computes good ap-
proximations with a low effort for many models.
1. Introduction
Stochastic Petri nets (SPNs) and their variants like GSPNs
[1] are important model types to describe discrete event sys-
tems and to analyze them according to their performance,
dependability or performability. Often the long run behav-
ior of a system is analyzed which results in the computa-
tion of the stationary distribution of the continuous time
Markov chain (CTMC) underlying a (G)SPN. Three differ-
ent classes of solution approaches exist to analyze (G)SPNs
or the underlying CTMCs. First, the (G)SPN can be used as
a speciﬁcation of a simulation model and discrete event sim-
ulation can be applied to obtain estimates for the required
results [18]. The advantage of this approach is the general
applicability and ﬂexibility. However, the disadvantage is
that only estimates of result measures are computed such
that often very long simulation runs are necessary to ob-
tain results with a sufﬁcient accuracy. For rare event mea-
sures or when a high accuracy is required, simulation can-
not be used at all. An alternative to discrete event simula-
tion is the numerical analysis of the CTMC which implies
that the underlying state space is enumerated and the result-
ing system of linear equations is solved numerically [22].
This approach is exact up to the numerical precision of the
used machine. Usually this precision is orders of magnitude
higher than the precision reachable with discrete event sim-
ulation and is sufﬁcient for most applications. However, the
major problem of state based analysis is the so called state
space explosion which means that the state spaces of SPNs
or GSPNs tend to grow exponentially with the model size
and might even be inﬁnite. Apart from a few lucky cases,
where the CTMC has a speciﬁc structure such that product
form solvers [21] or matrix geometric methods [16] can be
applied, largeness is the major problem of CTMC analysis.
Consequently, a large amount of effort has been spent to
develop numerical methods dealing with large state spaces.
Successfully applied has been the idea of using the structure
of the SPN model to describe the generator matrix of the un-
derlying CTMC in a compact form as a sum of Kronecker
products of small component matrices [20, 2, 15, 4, 8, 9].
For this matrix representation different efﬁcient numerical
analysis algorithms have been developed [6, 17, 10, 5]. Al-
though the use of model structure for numerical solutions
signiﬁcantly increases the size of solvable CTMCs, it can-
not eliminate state space explosion. Thus, for the analysis
of larger models one has to search for methods avoiding the
combinatorial growth of the state space. This usually means
to go from an exact to an approximate solution of CTMCs.
A widely used class of approximate solution methods are
the so-called ﬁxed point approaches where the model is de-
composed into components and components are analyzed
in partial isolation such that other components are repre-
sented by some parameter which is updated in an iteration
process. Examples where the approach has been success-
fully applied are [12, 19]. Recently it has been noticed that
the ﬁxed point approach can be combined naturally with
structured solution techniques such that a complete descrip-
tion of the state space and generator matrix is available, but
aggregated vectors are computed [11, 3]. However, one dis-
advantage of the known ﬁxed point approaches is that the
decomposition is static which means that before the solu-
tion is computed the modeler decides which parts are ag-
gregated and which parts are considered in detail. Since
it is known that the quality of the approximation induced
by a ﬁxed point approach depends on the decomposition,
it would be desirable to lead the decomposition by the re-
sults derived during the solution procedure. An approach
for the analysis of CTMCs by considering only a subset of
the most important states can be found in [14] where states
are generated on demand during the iterative solution proce-
dure and always the most likely states are chosen. However,
the mentioned approach works on some ﬂat description of
model and generator matrix, it does not remove states from
the set of states when they become less important, it does
not use aggregation/disaggregation to improve the quality
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:24:03 UTC from IEEE Xplore.  Restrictions apply. 
of the approximation and it does not use knowledge about
the states which are not considered in detail. This limits the
applicability of the technique.
In this paper we present a new approach which in some
sense combines and extends the ideas of [11] and [14]. The
new approach exploits the knowledge of the complete state
space and generator matrix of a structured CTMC. How-
ever, in contrast to exact numerical solution techniques,
parts of the distribution vector are described as Kronecker
products of component distribution vectors. This represen-
tation is an approximation but reduces space and time com-
plexity of an iterative solution signiﬁcantly. If all vectors
are represented as Kronecker products, then the solution
approach is similar to [11], although we use another struc-
tured representation and another solution method to com-
pute stationary component vectors simultaneously. In con-
trast to [11] the proposed approach allows the representation
of some parts of the solution vector in detail. The decision
of which parts are presented in detail is made during the iter-
ative solution by considering more important parts in detail
and less important parts as Kronecker products of compo-
nent vectors.
If the importance changes during iteration,
then the decision can be modiﬁed during the iterative solu-
tion. We propose the approach here for a hierarchical Kro-
necker representation of the generator matrix [2, 4, 8, 9],
but it can as well be applied for other representations like
the one used in [11].
The paper is organized as follows: In the next section, the
model class, the underlying structured representation of the
state space and generator matrix and some basic notation
are introduced. Section 3 presents the compositional rep-
resentation of distribution vectors, operations to multiply a
compositional vector with a sum of Kronecker products of
matrices and operations to translate a detailed in a compo-
sitional representation and vice versa. The following sec-
tion introduces an adaptive iteration algorithm which com-
putes the stationary solution of a structured CTMC by con-
sidering a maximum number of detailed states which are
selected adaptively during the iteration process. In section
5 we present some examples to show the advantages of the
proposed approach. The paper concludes with a summary
of presented results and an outline of future extensions of
the proposed approach.
2 Basic Deﬁnitions and Notations
We present the solution approach in the context of a hierar-
chical Kronecker representation of the generator matrix of a
structured CTMC resulting from a GSPN decomposed into
components. First, some notation and the class of GSPNs
are introduced, afterwards the resulting structure of state
space and generator matrix are presented and the iterative
solution procedure is brieﬂy outlined.
2.1 Basic Notation
In the sequel we consider models which are decomposed
into  components numbered 1 through . We use super- or
subscripts i; j 2 f1; : : : ; g to indicate components. Sets
i=1 i  i 1
are denoted by caligraphic letters except the sets of (non-
negative) real numbers R (R) and natural numbers . RS
is the set of states and RS i is the set of states of component
i. x; y; z are used for the linearized description of states of
the complete model. We assume that states in each set or
subset are numbered starting from 0 and that jRSj denotes
the number of elements in set RS. Thus, we can assume
that RS is isomorphic to f0; : : : ; jRSj 1g. For the number
of elements we use  = jRSj and i = RS i.
Vectors and matrices are denoted as bold-faced small
and capital letters. Elements are described using brack-
ets. The component structure is mapped onto the state
space. Hence RS or subsets of RS (as introduced be-
low) can be represented as cross products of (subsets of)
component state spaces. E.g., in the simplest representa-
tion RS = 
i=1RS i. Since the state space is described
by the states of components, each state has a -dimensional
description as a vector x such that xi is the state of com-
ponent i in global state x. The -dimensional represen-
tation can be linearized via x = 
1 where
j = 	i
k=j k and empty products are 1. We use linearized
i
and -dimensional representation interchangeably.
	 is the global generator matrix with elements 	x; y or
	x; y.  and e are the unit matrix and vector, respectively.
If the dimension is required, then it is added as a subscript,
e.g.,  is the identity matrix of dimension .
In the hierarchical structure we use in this paper, sets are
decomposed into subsets and matrices and vectors are de-
composed into subvectors and submatrices, respectively.
Subsets are numbered and we use a tilde to denote the
number of a subset and square brackets to indicate sub-
sets, submatrices and subvectors. Similar to the number-
ing of states a -dimensional numbering scheme is used
for subsets. Thus, RS[~x] is the subset of RS belonging
to the component subsets RS i[~xi] and 	[~x; ~y] is a sub-
matrix of 	 describing transitions from RS[~x] and RS[~y].
	[~x; ~y]x; y denotes element x; y of this matrix where el-
ements are numbered 0 through jRS[~x]j 1 or jRS[~y]j 1.
A similar notation is used for subvectors.
2.2 The Class of GSPNs
We assume that the reader is familiar with GSPNs [1] and
the generation of CTMCs resulting from GSPNs. The fol-
lowing two deﬁnitions introduce GSPNs as basic model
class.
Deﬁnition 1
eight-tuple
; T;  ; ; ;  ; W; 0 where  is the set of places, T is
the set of transitions such that T \  = ;,   : T ! f0; 1g
is the priority function, ; ;   : T   ! , are
the input-, output- and inhibition function, respectively,
W : T ! R is a function that assigns a non-zero weight
to each transition, 0 :  !  is the initial marking: a
function that assigns a non-negative integer to each place.
To apply structured solution approaches, some structure is
required which implies that the net is decomposed into com-
ponents. One possibility to deﬁne such components is to
partition the set of places which yields an SGSPN if some
an
A
GSPN
is
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:24:03 UTC from IEEE Xplore.  Restrictions apply. 
a
is
An
the
are
SGSPN
; T;  ; ; ;  ; W; 0; (cid:30)
restricted to  i and T i,
Partition (cid:30) deﬁnes for each component
additional restrictions are respected.
Deﬁnition 2
nine-
tuple
where
; T;  ; ; ;  ; W; 0 is a GSPN, (cid:30) = f 1; : : : ;   g
is a partition of  which deﬁnes  components
0, where T i = (cid:15) i [  i(cid:15)
 i; T i;  i;  i; i;   i; W i;  i
functions
and
 i;  i; i;   i; W i;  i
0
respec-
 ; ; ;  ; W; 0
tively.
i
the set of local
T i = f 2 T ij (cid:15)  [ (cid:15) (cid:18)  ig,
transitions and T S = T  [
i=1T i, the set of synchro-
nized transitions. (cid:30) has to assure that all transitions in T S
are timed (i.e, 8 2 T S :   = 0).
Component state spaces can now be generated in com-
plete or partial
In complete isolation only
0 is considered to generate
 i; T i;  i;  i; i;   i; W i;  i
the state space of component i.
In partial isolation addi-
tional information on the environment is used during state
space generation for component i. Additional information
can be the use of place capacities due to global invariants
[17] or the deﬁnition of some skeleton of the environment
as in [2, 8, 9] and often assures that component state spaces
become ﬁnite for nets with a ﬁnite state space.
isolation.
2.3 State Spaces and Transition Matrices
We consider bounded GSPNs describing an ergodic
CTMC with state space RS. Let 	 be the generator ma-
trix and (cid:25) the stationary solution vector (i.e., (cid:25)	 = 0
and (cid:25)eT = 1:0). By considering the projection of states
for the complete GSPN onto component i we can deﬁne
RS i as the state space for component i. In structured anal-
ysis approaches usually RS i or a superset of RS i is gen-
erated ﬁrst and afterwards RS is generated from the com-
ponent state spaces (see e.g. [4]). In general the relation
i=1RS i holds, but often RS is a proper subset
RS (cid:18) 
such that the knowledge of the component state spaces is
not sufﬁcient to characterize the complete state space. How-
ever, to compute the stationary solution vector (cid:25) by means
of iterative techniques the exact state space has to be known.
Different approaches exist to describe RS in terms of RS i.
One class of methods uses directed graphs to deﬁne a pro-
i=1RS i into RS [6, 10, 11, 17], alternatively
jection from 
one can deﬁne a hierarchical structure [2, 8, 4, 9]. We use
the latter approach in this paper, but the proposed method
can as well be deﬁned for the former representation.
For a hierarchical representation of RS each component
state space is decomposed into a number of subsets. Let
~i be the number of subsets, let gRS i be the set of subset
numbers for component i and let RS i[~xi] be the subset
number ~xi 2 gRS i for component i with i~xi =
jRS i[~xi]j. Each subset can be interpreted as a macro
state. We can deﬁne the global macro state space gRS con-