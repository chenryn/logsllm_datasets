因此，如果你希望将改变命令重复应用到地址范围内的所有行上，除了将它封装到一个块中之外，你将没有其它的选择：
```
cat -n inputfile | sed -e '
19,22{c\
# :REMOVED:
}
s/:.*// # This will NOT be applied to the "changed" text
'
```
#### 插入命令
插入命令（`i\`）将立即在输出中给出用户提供的文本。它并不以任何方式修改程序流或缓冲区的内容。
![The Sed insert command](/data/attachment/album/201811/14/190655fj22mhwnmj7zw2ee.png)
```
# display the first five user names with a title on the first row
sed >` 相同）：
```
sed  
> 在 XBD 转义序列中列出的字符和相关的动作（`\\`、`\a`、`\b`、`\f`、`\r`、`\t`、`\v`）将被写为相应的转义序列；在那个表中的 `\n` 是不适用的。不在那个表中的不可打印字符将被写为一个三位八进制数字（在前面使用一个反斜杠 `\`），表示字符中的每个字节（最重要的字节在前面）。长行应该被换行，通过写一个反斜杠后跟一个换行符来表示换行位置；发生换行时的长度是不确定的，但应该适合输出设备的具体情况。每个行应该以一个 `$` 标记结束。
> 
> 
> 
![The Sed unambiguous print command](/data/attachment/album/201811/14/190700z1fjx4ql299iznz6.png)
我怀疑这个命令是在非 [8 位规则化信道](https://en.wikipedia.org/wiki/8-bit_clean) 上交换数据的。就我本人而言，除了调试用途以外，也从未使用过它。
#### 移译命令
 移译   transliterate （`y`）命令允许从一个源集到一个目标集映射模式空间的字符。它非常类似于 `tr` 命令，但是限制更多。
![The Sed transliterate command](/data/attachment/album/201811/14/190702th123v1b5lre3l8r.png)
```
# The `y` c0mm4nd 1s for h4x0rz only
sed 
作者：[Sylvain Leroux](https://linuxhandbook.com/author/sylvain/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[qhwdw](https://github.com/qhwdw) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出