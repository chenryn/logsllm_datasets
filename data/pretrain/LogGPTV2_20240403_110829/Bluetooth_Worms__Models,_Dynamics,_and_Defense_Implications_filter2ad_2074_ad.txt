### 优化后的文本

#### 图11. 由于同频道干扰导致的数据包丢失率
- **环境**：75m×75m，移动设备
- **置信区间**：95%

#### 图12. 平均查询次数和平均查询时长
- **环境**：75m×75m，移动设备

#### 图13. 成功和失败的连接建立尝试结果
- **环境**：75m×75m，移动设备

#### 图14. 连接建立和蠕虫代码复制的平均持续时间
- **环境**：75m×75m，移动设备
- **描述**：在大多数设备被感染后，成功建立连接所需的时间维持在1.5到2秒之间，这与静态情况相似。该图还显示了将蠕虫代码复制到受害设备所需的平均时间。
- **观察**：如果禁用同频道干扰导致的数据包丢失，蠕虫代码复制的持续时间几乎没有变化。这与我们之前的发现一致，即同频道干扰是影响蠕虫代码复制性能的主要因素。

### 6. 建模考虑
一个准确的蠕虫传播模型可以为有效的检测和防御提供有用的指导。已经有许多研究致力于分析互联网蠕虫的动态特性。自然的问题是，现有的互联网蠕虫传播模型是否可以直接应用于蓝牙蠕虫传播。为了回答这个问题，我们的仿真结果可以用于验证，并提供构建良好分析模型所需元素的指导。

#### 6.1 物流模型
我们从文献[17]中提出的物流模型开始：
\[ N(t) = \frac{N_{\text{dev}} \times e^{K(t-T)}}{1 + e^{K(t-T)}} \]
其中，\( N(t) \) 是时间 \( t \) 时的感染设备数量，\( N_{\text{dev}} \) 是网络中的总设备数量，\( K \) 和 \( T \) 是模型中的两个参数。在物流模型中，增长曲线在拐点处对称，此时增长率达到峰值。

#### 6.2 模型假设
物流模型的基本假设是个体应该均匀混合，使得个体感染另一个个体的概率在任何两个个体之间完全相同。这在静态网络中的蓝牙蠕虫传播中不成立，因为蠕虫只能感染其邻居。因此，模型拟合仅在第5.2节中的场景中进行，在该场景中设备在一个有限区域内移动并因此在整个仿真过程中混合。

#### 6.3 模型拟合
我们通过简单的模型拟合方法来检查物流模型如何适应仿真结果。我们将初始点 \( N(0) \) 固定为1，并从仿真结果中导出拐点。使用这两个点，我们可以推导出模型的参数。图15显示了随着仿真时间推进的平均感染设备数量以及根据上述模型拟合方法得出的物流曲线。显然，物流曲线在蠕虫传播的早期阶段低估了传播速度，而在后期阶段高估了传播速度。

### 7. 模型参数的影响
前几节中的基线蓝牙蠕虫模型仿真实验使我们对蓝牙蠕虫传播有了一些了解，但还不清楚改变模型参数如何影响蠕虫传播。高级蠕虫可能会策略性地选择其参数以提高传播速度。以下讨论集中在那些旨在最小化感染大部分（例如95%）易受攻击设备所需时间的蠕虫类型。

#### 7.1 调整查询参数
从图7和图12可以看出，随着更多设备被感染，基线蠕虫需要花费更长时间来收集其邻居信息，当网络中充满感染设备时，这段时间接近查询超时值（即 \( T_{\text{inq}} \)）。蓝牙协议规定，如果在查询超时时间内没有找到新的邻居，则停止查询。

### 其他观察
- **图16**：在一次运行中，每秒每个蠕虫发现的设备平均数量（禁用了同频道干扰以简化解释）。该图显示，随着网络中感染设备数量的增加，设备之间的总体逻辑接触率实际上下降了，这可能在蠕虫传播的后期阶段减缓传播速度。
- **图17**：比较未感染设备在整个人群中的比例和在所有发现的设备中的比例。明显地，发现的未感染设备比它们在整个人群中的比例要多。因此，假设未感染和感染设备的发现比率相同的模型并不能完全捕捉蓝牙蠕虫的动态特性。
- **图18**：设备在邻居列表中的位置与其被感染概率的关系。位于列表前端的设备更容易被感染，反之亦然。

---

通过以上优化，文本变得更加清晰、连贯和专业。希望这对您有所帮助！