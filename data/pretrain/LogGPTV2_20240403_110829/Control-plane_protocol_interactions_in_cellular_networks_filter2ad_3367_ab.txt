through MM, GMM, and EMM in 3G CS, 3G PS and 4G PS (see
Figure 1), respectively. The underlying radio access switch (e.g.,
radio channel setup/teardown) is handled by 3G/4G RRC .
2243. METHODOLOGY
We develop CNetVeriﬁer, a tool that conducts two-phase proto-
col diagnosis, as shown in Figure 2. It helps to uncover two types
of issues: (i) design problems originated from the 3GPP standards,
and (ii) operational slips originated from the carrier practice.
3.1 CNetVeriﬁer Overview
CNetVeriﬁer takes a two-phase approach. During the screening
phase, CNetVeriﬁer ﬁrst explores possible logical design defects in
control-plane protocols via model-checking techniques, and pro-
duces counterexamples due to design defects. Once they are found,
we move to the validation phase. For each counterexample, we set
up the corresponding experimental scenario and conduct measure-
ments over operational networks for validation.
We use the two-phrase approach since both phases are necessary.
The issues discovered during the ﬁrst phase are implementation-
and measurement-independent ones, since they come from the
3GPP design standards. Moreover, its outputs (i.e., these coun-
terexamples) offer us hints to conﬁgure the experiments to vali-
date possible design problems. The second phase alone may not
uncover all problematic issues since it is measurement dependent.
This phase is needed for validating the design problems and study-
ing their impact. Moreover, it helps to identify operational slips or
implementation bugs. For example, S5 and S6 are found during the
S3’s validation experiments.
Before elaborating techniques for each phase, we rush to point
out several downsides of CNetVeriﬁer. First, it focuses on the
control-plane protocol interactions, thus simplifying data-plane op-
erations (e.g., ignoring packet communication time and call du-
rations). Second, the deﬁned properties are from the user’s per-
spective. It may not uncover all issues at base stations and in the
core network which operators are interested in. Third, using ran-
dom sampling for usage scenarios, some parameter-sensitive de-
fects may not be exposed. The impact could be alleviated by in-
creasing sampling rates. Fourth, due to limited access to cellular
networks, some ﬁndings may not be validated by experiments. For
example, S2 is discovered by protocol screening but not observed
through phone-based experiments. We cannot conﬁrm whether it
rarely happens or it is not a real defect. Finally, we mainly conduct
experiments according to those counterexamples reported during
the screening phase. Not all operational slips may be identiﬁed.
3.2 Domain-Speciﬁc Protocol Screening
During protocol screening, we discover the issues originated
from cellular network design. To this end, we develop a cellular-
It
speciﬁc model-checking tool, which is written in Spin [12].
works as follows. First, we model signaling protocol interactions,
and deﬁne cellular-oriented properties. Second, given these inputs,
CNetVeriﬁer checks whether a set of desired properties are satis-
ﬁed. It thus generates a counterexample for each concrete instance
of property violation, which indicates a possible design defect. To
make the above idea work in the cellular context, we address three
domain-speciﬁc issues: (1) How to model cellular networks? (2)
How to deﬁne the desired properties? (3) How to check the prop-
erty given the cellular network model?
3.2.1 Modeling
Our modeling effort covers both parts of 3G/4G protocol stacks
and usage scenarios. The protocol interactions occur between pro-
tocols in the stack, and are driven by usage scenarios.
Modeling 3G/4G protocol stacks.
The modeling of cellular
protocols is derived from the 3GPP standards [3,6–8], which spec-
ify the operations for each protocol. Table 2 lists the studied cellu-
lar protocols, including PS/CS services, mobility management and
Phase 1: Protocol Screening 
Cellular-specific
Properties
Common 
Demands
Network Model
Usage 
Scenarios
Protocol 
Cellular 
Model
Standards
Phase 2: Validation
Cellular 
Network
Model 
Checker
Property 
Satisfaction
Property Violation  
+Counterexamples
User Device
Scenario Setup
Trace 
Collector
Operational 
Flaws
Design Flaws
Validation
Figure 2: CNetVeriﬁer Overview
Function
PS/CS
Mobility
Name
CM/CC
SM
ESM
MM
GMM
EMM
3G-RRC
4G-RRC
System Net. Element Standard Description
3G
3G
4G
3G
3G
4G
3G
4G
TS24.008 CS Connectivity Management
MSC
PS Session Management
3G Gateways TS24.008
MME
TS24.301
4G Session Management
TS24.008 CS Mobility Management
MSC
3G Gateways TS24.008
PS Mobility Management
TS24.301
MME
4G Mobility Management
3G BS
TS25.331 Radio Resource Control
4G BS
TS36.331 Radio Resource Control
Radio
Table 2: Studied protocols on network elements and devices.
radio resource control. We model each cellular protocol as two Fi-
nite State Machines (FSMs), one running at the user device and
the other operating in the speciﬁc network element (for instance,
CM/MM, SM/GMM, ESM/EMM are operated at MSC, 3G Gate-
ways and MME, respectively).
Modeling usage scenarios. Modeling usage scenarios is more
challenging. They are not formally deﬁned by the 3GPP standards,
and largely depend on user demands and operation policies.
Ide-
ally, we should test all combinations of usage scenarios, so that all
possible design defects can be found. However, some usage sce-
narios may have unlimited choices. Enumeration is thus deemed
unrealistic. Consequently, we take the random sampling approach.
We assign each usage scenario with certain probability, and ran-
domly sample all possible usage scenarios. Speciﬁcally, for sce-
narios with limited options (e.g., device switch on/off, all types of
accept/reject requests, all inter-system switch techniques), we enu-
merate all possible combinations. For scenarios with unbounded
options (e.g., user mobility at various speed, trafﬁc arrival patterns
of PS/CS services), we implement a run-time signal generator that
randomly activates these options at any time. Last, each customiz-
able parameter is initialized with a random value. By increasing the
sampling rate, we expect that more defects can be revealed. Specif-
ically, we model user demands and operator responses as follows.
In our model, the phone device uses at most
one network at a time, and cannot concurrently access both 3G and
4G networks. This is the default practice for most smartphones
in reality. Once the device powers on, it randomly attaches to 3G
or 4G. Afterwards, a run-time signal generator randomly creates
user-speciﬁc events, such as starting voice or data service, location
change or user-initiated detach (i.e., switch off). These events thus
trigger relevant protocol entities at the device to respond accord-
ingly and further activate procedures towards the network.
◦ Operator responses Upon receiving a user request, the net-
work accepts or rejects it. We equally test with all the possibil-
ities, including the reject with various error causes. For exam-
ple, more than 30 error causes are deﬁned in the 4G attach pro-
cedure [8].
In the meantime, the run-time signal generator ran-
domly produces network-speciﬁc events, e.g., inter-system switch
and network-oriented detach. Similarly, corresponding procedures
towards the user device are triggered. Note that all options for
◦ User demands
225network-speciﬁc events are stipulated by the standards and will be
enumerated in our model. More details will be given later.
3.2.2 Deﬁning Desirable Properties
In this work, we seek to check those problematic protocol inter-
actions that incur user-perceived problems. The properties to be
checked represent the services offered to users. Thus, we deﬁne
three cellular-oriented properties: (1) PacketService_OK: Packet
data services should be always available once device attached to
3G/4G, unless being explicitly deactivated. (2) CallService_OK:
Call services should also be always available. In particular, each
call request should not be rejected or delayed without any explicit
user operation (e.g., hanging up at the originating device).
(3)
MM_OK: inter-system mobility support should be offered upon re-
quest. For example, a 3G↔4G switch request should be served
if both 3G/4G are available. We consider inter-system mobility
only because intra-system mobility is seamlessly supported in prac-
tice. Note that PacketService_OK and CallService_OK represent
the expected behaviors for network services, while MM_OK is for
mobility support. In CNetVeriﬁer, these properties act as logical
constraints on the PS/CS/mobility states.
3.2.3 Property Checking
We perform the formal model checking procedure. First, the
model checker creates the entire state space by interleaving all
FSMs for each individual protocol. With the constraints of three
properties, some states will be marked with “error.” Then we run
the depth-ﬁrst algorithm to explore the state transitions from the
initial state (i.e., the device attempting to attach to 3G/4G net-
works) under various usage scenarios. Once an error state is hit, a
counterexample is generated for the property violation. The model
checker ﬁnally generates all counterexamples and their violated
properties for further experimental validation.
3.3 Phone-based Experimental Validation
Given counterexamples for design defects, the validation phase
needs to conduct experiments, collect protocol traces from real net-
works and compare them with the anticipated operations. The main
challenge is trace collection. The core cellular network is operated
as a black box, so it is not easy to obtain protocol traces from cel-
lular network operators. Therefore, we seek to retrieve protocol
traces from user devices. Fortunately, most cellular modem ven-
dors (e.g., QualComm or Mediatek) allow for developers to power
on the debugging mode and obtain protocol traces3. Based on this,
we collect ﬁve types of information: (1) timestamp of the trace
item using the format of hh:mm:ss.ms(millisecond), (2) trace type
(e.g., STATE), (3) network system (e.g., 3G or 4G), (4) the module
generating the traces (e.g., MM or CM/CC), and (5) the basic trace
description (e.g., a call is established).
To facilitate PS and CS signaling exchanges, we further devise
automatic test tools on the phone. One is to automatically dial out,
answer and terminate an incoming voice call. The other is to keep
turning on and off data services. We use Speedtest [1] to measure
the uplink and downlink speed of the Internet access on the phone.
Each experiment has 10 runs unless explicitly speciﬁed.
We conduct experiments over two major US operators, denoted
as OP-I and OP-II, for privacy concerns. They together serve more
than 140M subscribers. We use ﬁve smartphone models that sup-
port dual 3G and 4G LTE operations: HTC One, LG Optimus G,
Samsung Galaxy S4 and Note 2, and Apple iPhone5S. They cover
both Android and iOS. All phones are used in all validation ex-
periments. The experimental settings are constructed based on the
3For example, both QXDM (http://www.qualcomm.com/qxdm)
and XCAL-Mobile (http://www.accuver.com) support this mode.
counterexamples from the screening phase. We also test with com-
mon use scenarios to explore whether any operational slip is ob-
served to break three properties in practice.
4. OVERVIEW OF FINDINGS
We uncover signaling interaction problems in both design and
operations through CNetVeriﬁer. We examine standards speciﬁca-
tion to identify design issues, and collect protocol traces to infer
improper operational practice. Our ﬁndings are summarized in Ta-
ble 1. They are grouped into two classes. The ﬁrst class, necessary
yet problematic cooperations, refers to the protocol interactions
that are required but misbehave. The second class, independent
yet unnecessarily coupled operations, refers to the protocol inter-
actions that are not necessary but indeed occur and result in neg-
ative impact. The troubling inter-protocol signaling each leads to
functional incorrectness or performance penalty. Not all the issues
are operational slips, so they cannot be fully ﬁxed by simply updat-
ing their implementations. For design problems, 3GPP standards
should be revised to address them. Speciﬁcally, we ﬁrst identify
four instances S1-S4 in the screening phrase and then uncover two
more operational issues S5 and S6 in the validation phrase. In fact,
other issues are revealed by CNetVeriﬁer, but they are not reported
here because they do not belong to problematic protocol interac-
tions. Both classes of issues are found in all three dimensions.
• Cross-layer Protocols in the upper-layer and low-layer di-
rectly interact with each other via the interfaces between them. Two
representative instances are found in this category. In both cases,
the principle of protocol layering is not properly honored. In the
ﬁrst case (§5.2), the low-layer RRC protocol fails to offer reliable
and in-sequence signal delivery required by the upper-layer EMM
protocol. EMM thus should have implemented its own end-to-end
mechanism but does not. Subsequently, the signaling exchange be-
tween the device and the network can be lost or delayed, trigger-
ing wrong reactions from EMM. It denies user’s network access
right after accepting the access request. In the second case (§6.1),
CM/SM and MM/GMM protocols, running on different layers in
3G, should act on outgoing call/data requests and location updates
independently and concurrently. However, they prioritize location
updates over call/data requests. The head of line blocking is expe-
rienced, and the outgoing calls and data are unnecessarily delayed.
• Cross-domain In cross-domain protocol interactions, pro-
tocol variants are developed for different domains and indirectly
coupled over the common lower-layer protocols (e.g., RRC). The
cross-domain category also has two cases. In principle, the CS-
domain voice and the PS-domain data have distinct requirements.
Data prefers high throughput whereas voice values timely delivery.
They should be treated differentially. However, in both cases, iden-
tical operations are performed on trafﬁc from both domains. In the
ﬁrst case (§5.3), RRC keeps its state for the aggregated CS and PS
data trafﬁc. When the CS trafﬁc terminates, the PS data may get
stuck in 3G without returning to 4G networks. In the second case
(§6.2), carriers use RRC to assign PS and CS sessions on a shared
channel, using a single modulation scheme for both voice and data.
The PS data rate may drop signiﬁcantly over the shared channel.
• Cross-system Cross-system interactions occur with an
3G↔4G switch. Two instances are further uncovered in this cate-
gory. In this scenario, both systems may be motivated to share or
even act on certain state information. On one hand, correct infor-
mation should be properly protected and shared during the cross-
system operations. This is exempliﬁed by the ﬁrst case (§5.1). To
enable data services, the user and the network must keep the PDP
context in 3G and the EPS bearer context in 4G. However, such
states are not well protected during inter-system switching. 3G
226IMPROPER COOPERATION
may delete the PDP context, and then the 4G network cannot re-
cover its EPS bearer context. The user device is thus out of service
in 4G after the inter-system handover. In the second case (§6.1), 3G
and 4G share information on location update failures. The actions
on such failures should be conﬁned between 3G and 4G networks.
However, 4G takes action on the user device when handling failure
signals from 3G. The user consequently loses its network access.
In following §5 and§ 6, we elaborate on each problematic case.
Given each instance, we describe its concrete procedure, deduce its
root cause, validate and assess its negative impact over US carriers.
5.
We describe three instances S1-S3 that exhibit troubling interac-
tions in cross-system, cross-layer, and cross-domain settings.
5.1 Unprotected Shared Context in 3G/4G
The ﬁrst is on cross-system signaling interactions between 3G
and 4G. When the user device switches from 4G to 3G during mo-
bility or CSFB calls, the data service is indeed migrated accord-
ingly. However, under certain conditions, when the user switches
back to the 4G network (e.g., after completing a CSFB call or roam-
ing back to a 4G BS), the device might be temporarily out of ser-
vice. Our experiments validate its existence, and show that this
out-of-service status may last from several to tens of seconds in
operational networks. It is also quite common in reality. The root
cause lies in improper cross-system interactions, and the involved
protocols are SM/GMM in 3G and ESM/EMM in 4G, running at
two signaling layers of session control and mobility support. These
protocols should interact, because they need to support seamless PS