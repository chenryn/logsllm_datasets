of attackers and their gains. If passive attackers cannot achieve a certain
density/distribution, they can adjust their gains to satisfy (14), which ensures
instability.
0.6
0.4
0.2
0
15
n
o
i
t
a
u
n
e
t
t
A
%
10
ω [rad/s]
5
0
2.5
5
Victim kd
7.5
10
Figure 4: Percentage of attenuation for a victim vehicle, with
respect to victim gain and frequency.
string stable, the second case illustrates global string instability.
In each the victim vehicle’s control law is trying to attenuate the
error while the passive attackers are amplifying error. Figure 5a
shows that even with a large initial oscillation, a string stable
system will attenuate errors upstream, whereas in Figure 5b
even a minor disturbance in a weakly string unstable system
can be ampliﬁed.
IV. DISCUSSION
The security and safety implications of the ﬁndings detailed
in Section III are discussed here. We will consider two main
attacks scenarios: (1) the attackers have stable but string
unstable gains, i.e. the poles of each resulting transfer function
have strictly negative eigenvalues, and the criterion of (6) has
been satisﬁed, and (2) the attackers have strictly unstable gains,
i.e. the eigenvalues of corresponding to each transfer function
have zero real parts or are strictly positive.
As discussed previously, barring collisions, a single attacker
will have limited effect on a large trafﬁc system due to physical
saturations in acceleration and velocity. However, a density
of attackers can propagate an attack through a large system.
Attackers using scenario 1 can ensure string instability but
maximum error amplitude will be limited by the frequency
of oscillation. For example an oscillation at 1 rad s−1 or 0.15
Hz will have a period of 6.3 s. If the average vehicle in
the system accelerates at 2 m s−2, for example, a maximum
velocity error of approximately 1.6 m s−1 can be achieved due
to the frequency of oscillation. Lower attack frequencies will
achieve higher errors and can be attained by judicious gain
selection. Because the attacker gains are stable they will settle
to a steady nominal state in the absence of input. Input can be
provided by the active attacker, by operating at the resonate
frequency of the attacker transfer functions maximum gain can
be achieved. The resulting effect on the trafﬁc system is seen
in Figure 5b.
In attack scenario 1 the vehicles will not likely hit maximum
velocity. Attack scenario 2 has greater potential to cause
maximum acceleration and velocity saturation. As a sub system
of vehicles begin to saturate the frequency of oscillation will
drop. This frequency reduction will cause an entire system
to saturate as shown in Figure 5c. Once this condition is
reached vehicles will accelerate and decelerate rapidly from
zero to maximum velocity. This type of stop and go trafﬁc
will drastically increase the possibility of large scale collisions.
Attack scenario 1 on the other hand will still generate error
but with a much lower likelihood of collisions, resulting in
persistent oscillation.
504
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:22:35 UTC from IEEE Xplore.  Restrictions apply. 
Figure 5: A system of 100 vehicles under attack. (a) The attacker density is too low (6%), the system is global string stable. (b)
A higher attacker density (8%) produces global string instability even when the attackers are only slightly string unstable. (c)
Attack scenario 2 where victims are utilizing Control Algorithm 1.
The attack of scenario 1 has been simulated against Control
Algorithms 1–5. All results (Table III) are for a system of 100
vehicles traveling at a nominal velocity of 31 m s−1 with an 8%
attacker density, where all attackers follow control algorithm
1, using a simulation time of 20 minutes. The automated
systems do not perform well under this attack, with highway
utilization (a measure of capacity) decreasing for all algorithms
by between 2–35%. Additionally, in each case the attack has
a measurable impact on the standard deviation of the vehicles’
velocity (the higher the deviation the greater the passenger
discomfort, wasted energy, and increase in travel time), with
simulated values ranging from 1.1–9.6. The persistent nature
of the attack, as well as its severity, is highlighted by the
portion of vehicles deviating from the nominal system velocity
(by 10%, 20%, 30%, and 40%) after 400 s. In the worst
case (algorithm 5), 25.7% of vehicles are deviating from the
nominal speed by at least 40%. The most resilient automated
law is Control Algorithm 1, which exhibits the loosest coupling
between vehicles and therefore yields the lowest capacity under
normal operation. The case of attack scenario 2 is considered
in Section IV-B, as the attackers must intelligently select
their gains according to their positions to avoid collisions.
In effecting this attack scenario the attackers cause all of the
vehicles to oscillate between a maximum allowable velocity
and zero velocity at a predetermined frequency, in perpetuity.
The decrease in highway utilization also directly affects the
capacity (ﬂow of cars) on a highway. Most trafﬁc ﬂow models
use some multiple of cars per distance and their velocity to
denote trafﬁc ﬂow [5]. Highway utilization directly affects any
metric of this sort, which implies that a decrease in utilization
caused by attacks will affect ﬂow. Because the average velocity
is not signiﬁcantly different between attack and non-attack
scenarios, a percentage decrease in utilization implies that
fewer vehicles will be able to reach their destination on time.
That is, while travel time for individual vehicles already on
the highway may not be severely affected, the time required
for all vehicles desiring to use the highway to complete their
journey will be increased, as queuing ensues, proportional to
the decrease in highway utilization.
The devastating extent and lasting effects of both attacks
should be considered. The attack is generated due to instability
in the automated control algorithm. Thus, once an attack has
been initiated the trafﬁc system will be unstable for all time. The
only chance of recovery is for vehicles to drop out of automated
mode or leave the trafﬁc system altogether, if that is even an
option. In other words, it would be far safer and pleasant for
drivers to take their chances with manual operation versus
suffer from the abrupt changes in acceleration and velocity
caused by the unstable automated system.
As a comparison we have simulated the proposed attacks
against
the intelligent driver model (IDM), which is an
empirically validated car-following model that captures the
features of trafﬁc ﬂow in freeway and urban environments,
particularly for congested systems [4]. The IDM predicts
inter-vehicle separation will increase as inter-vehicle velocity
increases. Intuitively this makes sense: a human driver would
tend to distance their vehicle from wildly oscillating vehicles.
The IDM predicts these attacks will not be effective against
a human driver (Table III), at the expensive of much lower
highway utilization. In short, the act of automating vehicles
introduces new vulnerabilities, and the greater the gains of
automation (in terms of capacity) the more vulnerable the
system becomes.
We next discuss the frequency of the phantom jam a group
of attackers may possibly induce. Secondly, we derive a criteria
which, if the active and passive attackers jointly follow, ensures
that a phantom jam can take place under attack scenario 2
with a very low probability of collision. Our discussion ends
with an examination of the attack in mixed trafﬁc systems (i.e.
systems in which automated and non-automated vehicles are
present).
A. Frequency of Jam
Since the active attacker is providing an oscillatory input,
its frequency is already known. Such behavior can be achieved
by applying a sinusoidal acceleration input. It is also possible
to achieve this by choosing unstable gains. But since we are
considering a system with realistic velocity and acceleration
constraints, the active attacker (at least) will saturate its velocity
and acceleration. Thus choosing unstable gains does not mean
the attacker’s velocity becomes unbounded;
the attacking
vehicle enters a limit cycle and does not produce unbounded
505
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:22:35 UTC from IEEE Xplore.  Restrictions apply. 
Table III: Results of attack against Control Algorithms 1-5.
Initial Inter-Vehicle
Spacing [m]
Highway Utilization
[Vehicles per km]
Start of Sim
End of Sim
Attacker
31.29
31.29
31.29
31.29
31.29
31.29
Victim
31.29
15.64
15
20.65
22.65
64.73
32.27
59.77
60.74
46.98
43.27
16.27
31.58
52.84
N/A
30.54
35.45
16.27
31.29
36.01
28.49
28.42
Decrease in
Utilization [%]
Victim STD [m/s]
@>400 sec
2.14
11.59
N/A
34.99
18.07
0
0
Collisions
1.1
7.1
6.1
9.6
0.09
0.19
Percentage of Vehicles Deviating
From Nominal Velocity @>400 sec
10% Dev.
20% Dev.
30% Dev.
40% Dev.
7.9%
55.5%
N/A
25.7%
49.5%
3.96%
37.6%
N/A
14.9%
35.6%
0.9%
24.8%
N/A
8.9%
28.5%
0%
10.9%
N/A
8.5%
25.7%
0%
0%
0%
0%
0%
0%
0%
0%
Control
Algorithm
1
2
3
4
5
1.6 s Hdwy
IDM
IDM
0.8 s Hdwy
disturbances. We should expect a lower response at higher
frequencies and vice versa.
An upper bound on the magnitude of the active attacker
position depending on frequency can be approximated by the
following transfer function
(cid:2)(cid:2)(cid:2)(cid:2)(cid:2)(cid:2)
(cid:10)
|A(s)| =
vmax
s
vmax
amax
s + 1
(cid:2)(cid:2)(cid:2)(cid:2)(cid:2)(cid:2)
(cid:11)
(16)
where vmax and amax are the maximum acceleration and
velocity of the cars respectively. The attacker is able to produce
a sinusoid (in its position deviation) as long as its magnitude
is less than |A(jω)| at any given frequency.
Given the constraint implied by (16), the attacker has to
choose an input frequency that is low enough to produce
a position disturbance of a given amplitude. If the attacker
(active or passive) tries to produce a disturbance that violates
this constraint, it will enter into saturation (e.g. Figure 5b/c).
Given that the victims are designed to be string stable, we
do see that the error continues to decay upstream along the
victims. Thus string stability, in this sense, ensures that no
further harmonics are produced by the victims (the earlier ones
are just replicated at lower amplitudes). Also, for the attacker,
even if there are some adverse effects from saturation, they
are much lower in magnitude compared to the fundamental
frequency. Thus we can conclude that the frequency of the
jam can be set by the active attacker and the followers will
replicate this frequency. This is expected as the system, barring
the saturation effects from passive attackers, is linear time
invariant.
B. Establishing Collision-Free Jams
In order to ensure that the jam is collision free under attack
scenario 2, we need to ﬁnd a relationship between the passive
and active attacker’s position and the surrounding cars. Since
our system is designed to be string stable in nominal operation,
we can expect that the collisions to ﬁrst appear around the
string unstable (or strictly unstable) attackers. In other words,
if the attackers do not collide, then no other car collides since
errors are always attenuated by the victims.
With this assumption, we can set up the transfer function
between the zi and the xi+1 coordinates.
(cid:2)(cid:2)(cid:2)(cid:2) = |1 − G(s)|
(17)
(cid:2)(cid:2)(cid:2)(cid:2) Zi
Xi+1
(cid:2)(cid:2)(cid:2)(cid:2) =
(cid:2)(cid:2)(cid:2)(cid:2) Xi+1
Xi+1
(s)
(s) − Xi
Xi+1
(s)
where G(s) = Ga (if vehicle i is a passive attacker) or Gv
(if it is a regular vehicle). This transfer function will provide
an amplitude at the frequency of attack. Since this problem
is framed from the attacker’s perspective, the amplitude and
frequency of the active attacker are already known. In the worst-
case scenario, we can choose the highest amplitude of the active
attacker given by (16). This signal is then injected into the
transfer function (17) and the frequency domain representation
of what happens to the separation zi is Zi(s) = A(1 − G).
Since the frequency is known, we have dropped that argument
in the transfer functions.
Furthermore, the vehicles have a desired (nominal) separation
(for the CTG case we focus on, this is vdh). Assuming the
platoon is in steady state when the attack starts, then if the
amplitude of error is greater than the nominal separation, then
we can say a collision might happen. If not, then there should
not be a collision. So it follows that the disturbance injected
into vehicle i by i+1 should be less than the nominal separation
for a collision-free jam.
The collision can then happen only if d(A(1−G)) = |A(1−
G)|− vdh + l > 0, where l can be taken as the length of a car.
Thus d is our collision prediction function, which is greater
than zero for when collisions can take place and less than zero
when they can not. Simulation results show that this has a high
rate of false positives (d > 0, but no collisions) but a very low
false negative rate (d ≤ 0 but collisions).
Before we present simulation results, something about false
positives needs to be said. It should be noted that the maximum
amplitude of the attacker is in general hard to ﬁnd if there
is saturation and/or transients present. Because we use the
worst-case active attacker amplitude for prediction, there will
be a large number of false positives, that is cases where the
worst-case amplitude would have caused a collision, but the
actual amplitude did not. But keeping in mind that the goal of
the attacker is to create phantom jams that are collision free,
this gives the attacker a robust measure to ensure the absence of
collisions. In any case, the general trend of a positive prediction