    ```
    ::: itemizedlist
    -   使用您要检查的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis}
        ：例如：`/dev/sda`{.literal}。
    :::
2.  查看分区表：
    ``` screen
    (parted) print
    ```
3.  另外，使用以下命令切换到您想要检查下一个设备的另一个设备：
    ``` screen
    (parted) select block-device
    ```
:::
::: itemizedlist
**其他资源**
-   `parted(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_viewing-the-partition-table_managing-file-systems.html#ref_example-output-of-parted-print_assembly_viewing-the-partition-table}`parted print`{.literal} 的输出示例 {.title}
:::
本节提供了 `parted`{.literal} shell 中的 `print`{.literal}
命令的输出示例，并描述了输出中的字段。
::: example
[]{#assembly_viewing-the-partition-table_managing-file-systems.html#idm139895610983312}
**例 14.1. `print`{.literal} 命令的输出**
::: example-contents
``` screen
Model: ATA SAMSUNG MZNLN256 (scsi)
Disk /dev/sda: 256GB
Sector size (logical/physical): 512B/512B
Partition Table: msdos
Disk Flags:
Number  Start   End     Size    Type      File system  Flags
 1      1049kB  269MB   268MB   primary   xfs          boot
 2      269MB   34.6GB  34.4GB  primary
 3      34.6GB  45.4GB  10.7GB  primary
 4      45.4GB  256GB   211GB   extended
 5      45.4GB  256GB   211GB   logical
```
下面是这些字段的描述：
::: variablelist
[`Model：ATA SAMSUNG MZNLN256(scsi)`{.literal}]{.term}
:   磁盘类型、制造商、型号号和接口。
[`磁盘 /dev/sda:256GB`{.literal}]{.term}
:   块设备的文件路径和存储容量。
[`分区表：msdos`{.literal}]{.term}
:   磁盘标签类型。
[`Number`{.literal}]{.term}
:   分区号。例如，次号 1 的分区对应于 `/dev/sda1`{.literal}。
[`Start`{.literal} 和 `End`{.literal}]{.term}
:   在分区启动和结束的设备中的位置。
[`Type`{.literal}]{.term}
:   有效类型为 metadata、free、primary、extended 或 logical。
[`File system`{.literal}]{.term}
:   文件系统类型。如果设备的 `File system`{.literal}
    字段未显示值，这意味着其文件系统类型为未知。`parted`{.literal}
    工具无法识别加密设备上的文件系统。
[`标记`{.literal}]{.term}
:   列出为分区设置的标记。可用的标志有
    `boot`{.literal}、`root`{.literal}、`swap`{.literal}、`hidden`{.literal}、`raid`{.literal}、`lvm`{.literal}
    或 `lba`{.literal}。
:::
:::
:::
:::
:::
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#assembly_creating-a-partition-table-on-a-disk_managing-file-systems}第 15 章 在磁盘中创建分区表 {.title}
:::
作为系统管理员，您可以使用不同类型的分区表格式化块设备来启用该设备的分区。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
使用分区表格式化块设备会删除该设备中所有存储的数据。
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#con_considerations-before-modifying-partitions-on-a-disk_assembly_creating-a-partition-table-on-a-disk}修改磁盘分区前的注意事项 {.title}
:::
本节列出了在创建、删除或重新定义分区大小前需要考虑的关键点。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本节不涵盖 DASD 分区表，它特定于 IBM Z 构架。有关 DASD 的详情请参考：
::: itemizedlist
-   [在 IBM Z 中配置 Linux
    实例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/performing_a_standard_rhel_installation/configuring-a-linux-instance-on-ibm-z_installing-rhel){.link}
-   IBM 知识库中的 [您应该知道的有关 DASD
    的内容](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lgdd/lgdd_c_dasd_know.html){.link}
    的文章
:::
:::
### []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#_the_maximum_number_of_partitions}分区的最大数量
设备中的分区数量受分区表类型的限制：
::: itemizedlist
-   在使用 [**主引导记录(MBR)**]{.strong}
    分区表格式化的设备上，您可以有：
    ::: itemizedlist
    -   最多四个主分区，或者
    -   最多有三个主分区，以及一个扩展分区，其中包括多个逻辑分区。
    :::
-   在使用 [**GUID 分区表(GPT)**]{.strong}
    格式化的设备上，最大的分区数为 128。尽管 GPT
    规范通过增大为分区表保留的空间来允许更多的分区，但
    `parted`{.literal} 工具的常用的做法是将其限制为足够容纳 128
    个分区的空间。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽建议，除非有其他原因，否则 [*至少*]{.emphasis} 要创建以下分区：
`swap`{.literal}、`/boot/`{.literal} 和 `/`{.literal} (root)。
:::
### []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#_the_maximum_size_of_a_partition}分区的最大大小
设备中的分区大小受分区表类型的限制：
::: itemizedlist
-   在使用[**主引导记录（MBR）**]{.strong}
    分区表格式化的设备中，最大值为 2TiB。
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备上，最大大小为
    8ZiB。
:::
如果要创建一个大于 2TiB 的分区，该磁盘必须使用 GPT 格式化。
### []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#_size_alignment}大小协调
`parted`{.literal} 工具可让您使用多个不同的后缀来指定分区的大小：
::: variablelist
[MiB、GiB 或 TiB]{.term}
:   大小为 2 的指数代表。
    ::: itemizedlist
    -   分区的起点与根据大小指定的扇区一致。
    -   结束点与指定大小减 1 扇区一致。
    :::
[MB、GB 或 TB]{.term}
:   以 10 的指数表示容量。
    起始和结束点在指定单元的一半内一致：例如,使用 MB 后缀时 ±500KB。
:::
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#ref_comparison-of-partition-table-types_assembly_creating-a-partition-table-on-a-disk}分区表类型比较 {.title}
:::
本节比较您可以在块设备中创建的不同类型的分区表的属性。
::: table
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#idm139895592810272}
**表 15.1. 分区表类型**
::: table-contents
  分区表               最多分区数                                                  最大分区大小
  -------------------- ----------------------------------------------------------- --------------
  主引导记录（MBR）    4 个主分区，或 3 个主分区和一个扩展分区中的 12 个逻辑分区   2TiB
  GUID 分区表（GPT）   128                                                         8ZiB
:::
:::
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#mbr-disk-partitions_assembly_creating-a-partition-table-on-a-disk}MBR 磁盘分区 {.title}
:::
本章图表显示分区表与实际磁盘分开。但这并不完全准确。实际上，分区表被保存在磁盘的最开始，并在任何文件系统或用户数据之前。为了简洁，下图将它们分开。
::: figure
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#idm139895478419840}
**图 15.1. 有 MBR 分区表的磁盘**
::: figure-contents
::: mediaobject
![未使用的分区驱动器](images/unused-partitioned-drive.png)
:::
:::
:::
如上图所示，分区表被分为四节（四个主分区）。主分区是在硬盘中只能包含一个逻辑驱动器（或部分）的分区。每个部分都保存定义单个分区所需的信息，意味着分区表可定义不超过四个分区。
每个分区表条目包含分区的几个重要特征：
::: itemizedlist
-   磁盘上分区开始和结束的地方。
-   分区是否
    [**活跃**]{.strong}。只能有一个分区被标记为[**活跃**]{.strong}分区。
-   分区的类型。
:::
起点和结束点定义了分区的大小和在磁盘中的位置。\"active（活跃）\"标志是被某些操作系统引导装载程序使用。换句话说，位于被标记为\"活跃\"的分区中的操作系统会被引导。
类型是一个数字，用于识别分区预定的用法。某些操作系统使用分区类型来表示特定的文件系统类型，来将分区标记为与特定操作系统关联的分区，来表示分区包含可引导的操作系统，或三者的某种组合。
下图显示了含有单一分区的驱动器示例：
::: figure
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#idm139895616151824}
**图 15.2. 只有一个分区的磁盘**
::: figure-contents
::: mediaobject
![dos 单个分区](images/dos-single-partition.png)
:::
:::
:::
本例中的单个分区被标记为
`DOS`{.literal}。此标签显示分区类型，`DOS`{.literal}
是最常见的分区类型之一。
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#extended-mbr-partitions_assembly_creating-a-partition-table-on-a-disk}扩展 MBR 分区 {.title}
:::
如果四个分区不足，您可以使用扩展分区来创建额外的分区。您可以把分区类型设置为\"Extended\"来达到此目的。
扩展分区本身就如同磁盘驱动器一样 -
它有自己的分区表，指向一个或多个分区（现在称为逻辑分区，而不是四个主分区），它完全包含在扩展的分区中。下图显示了一个磁盘驱动器，它有两个主分区和一个包含两个逻辑分区（以及一些未分区的可用空间）的扩展分区：
::: figure
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#idm139895581756624}
**图 15.3. 带主和扩展 MBR 分区的磁盘**
::: figure-contents
::: mediaobject
![扩展分区](images/extended-partitions.png)
:::
:::
:::
如图表中所暗示,主分区和逻辑分区之间有一个区别 -
主分区和扩展分区的数量只能是 4
个，但逻辑分区的数量没有固定限制。但是，由于在 Linux
中访问分区的方式，单个磁盘驱动器上不能定义超过 15 个逻辑分区。
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#mbr-partition-types_assembly_creating-a-partition-table-on-a-disk}MBR 分区类型 {.title}
:::
下表显示了一些常用的 MBR 分区类型和用于代表它们的十六进制数字。
::: table
[]{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#idm139895477832400}
**表 15.2. MBR 分区类型**
::: table-contents
  ----------------------------- ---------------------- ----------------------------- ----------------------
  [**MBR 分区类型**]{.strong}   [**Value**]{.strong}   [**MBR 分区类型**]{.strong}   [**Value**]{.strong}
  空                            00                     Novell Netware 386            65
  DOS 12-bit FAT                01                     PIC/IX                        75
  XENIX root                    O2                     Old MINIX                     80
  XENIX usr                     O3                     Linux/MINUX                   81
  DOS 16-bit ⇐32M               04                     Linux swap                    82
  Extended                      05                     Linux native                  83
  DOS 16-bit \>=32              06                     Linux extended                85
  OS/2 HPFS                     07                     Amoeba                        93
  AIX                           08                     Amoeba BBT                    94
  AIX bootable                  09                     BSD/386                       a5
  OS/2 Boot Manager             0a                     OpenBSD                       a6
  Win95 FAT32                   0b                     NEXTSTEP                      a7
  Win95 FAT32(LBA)              0c                     BSDI fs                       b7
  Win95 FAT16(LBA)              0e                     BSDI swap                     b8
  Win95 Extended (LBA)          0f                     Syrinx                        c7
  Venix 80286                   40                     CP/M                          db
  Novell                        51                     DOS access                    e1
  PRep Boot                     41                     DOS R/O                       e3
  GNU HURD                      63                     DOS secondary                 f2
  Novell Netware 286            64                     BBT                           ff
  ----------------------------- ---------------------- ----------------------------- ----------------------
:::
:::
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition-table-on-a-disk_managing-file-systems.html#guid-partition-table_assembly_creating-a-partition-table-on-a-disk}GUID 分区表 {.title}
:::
GUID 分区表(GPT)是基于使用全局唯一标识符(GUID)的分区方案。GPT
的开发目的是弥补 MBR
分区表的限制，特别是对磁盘的最大可寻址存储空间的限制。MBR 无法寻址大于 2
TiB 的存储（等同于大约 2.2 TB）,而 GPT
可以用于大于这个存储限制的硬盘，其可寻址的最大磁盘大小为 2.2
ZiB。另外，GPT 默认支持创建最多 128
个主分区。这个号码可以通过为分区表分配更多空间来扩展。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
GPT 有基于 GUID 的分区类型。请注意，某些分区需要一个特定的
GUID。例如，EFI 引导加载程序的系统分区需要 GUID
`C12A7328-F81F-11D2-BA4B-00A0C93EC93B`{.literal}。
:::
GPT 磁盘使用逻辑块寻址(LBA)，分区布局如下：