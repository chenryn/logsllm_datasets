ordering is [0,2,1,3] .
Note:
e uaoepe sou 'sagpa go ssll e  pauasdas yde e s saisnbasad ndu au 1
Read more about how a graph is represented
2. You may assume that there are no duplicate edges in the input prerequisites.
题目大意
现在你总共有n门课需要选，记为0到n-1。在选修某些课程之前需要一些先修课程。例如，想要学习
课程0，你需要先完成课程1，我们用一个匹配来表示他们：[0.1]。给定课程总量以及它们的先决条
件，返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回一种就可以
了。如果不可能完成所有课程，返回一个空数组。
解题思路
·给出n个任务，每两个任务之间有相互依赖关系，比如A任务一定要在B任务之前完成才行。问
是否可以完成所有任务，如果可以完成任务，就输出完成任务的顺序，如果不能完成，输出空数
组。
●这一题是第207题的加强版。解题思路是AOV网的拓扑排序。最后输出数组即可。代码和第207
题基本不变。具体解题思路见第207题。
代码
package leetcode
func findorder(numCourses int, prerequisites [][]int) []int {
in := make([]int, numCourses)
frees := make([][]int, numCourses)
next := make([]int, 0, numCourses)
for _, v := range prerequisites {
in[v[o]] ++
frees[v[1]] = append(frees[v[1]], v[0])
for i:= 0; i false
search("bad") -> true
search(".ad") -> true
search("b..") -> true
Note: You may assume that all words are consist of lowercase letters a-z.
题目大意
---
## Page 345
设计一个支持以下两种操作的数据结构：voidaddword（word)、bool
search（word）。search（word）可以搜索文字或正则表达式字符串，字符串只包含字母.或a-z。"
可以表示任何一个字母。
解题思路
·设计一个wordDictionary 的数据结构，要求具有addword（word）和search（word)的操
作，并且具有模糊查找的功能。
·这一题是第208题的加强版，在第208题经典的Trie上加上了模糊查找的功能。其他实现一模一
样。
代码
package leetcode
type worddictionary struct {
children map[rune]*wordDictionary
isword
boo1
/* Initialize your data structure here.*/
func Constructor211() wordDictionary {
return wordDictionary{children: make(map[rune]*wordDictionary)}
/*# Adds a word into the data structure. */
func (this *wordDictionary) Addword(word string) {
parent := this
for _, ch := range word {
if child, ok := parent.children[ch]; ok {
parent = chi1d
}else{
newChi1d := &wordDictionary{chi1dren: make(map[rune]*wordDictionary)}
parent. chi1dren[ch] = newChi1d
parent = newchi1d
3
parent.isword = true
/* Returns if the word is in the data structure. A word could contain the dot
character '.' to represent any one letter. */
func (this *wordDictionary) Search(word string) boo1 {
parent := this
for i, ch := range word {
if rune(ch) =='.'{
---
## Page 346
isMatched := false
for _, v = range parent.children {
if v.Search(word[i+1:]){
isMatched = true
return isMatched
} else if _, ok := parent.children[rune(ch)]; !ok {
return false
}
parent = parent.children[rune(ch)]
return 1en(parent.children) == 0 11 parent.isword
/**
obj := ConstructorO;
obj .Addword(word) ;
*param_2 := obj.Search(word);
212.WordSearchll
题目
Given a 2D board and a list of words from the dictionary, find all words in the board.
Each word must be constructed from letters of sequentially adjacent cell, where “adjacent" cells
are those horizontally or vertically neighboring. The same letter cell may not be used more than
once in a wordl.
Example:
Input:
] = pueoq
['o′,'a','a*,'n'],
['e','t','a,'e'],
['i','h',k,'r′],
['1',*f',*1*,'v']
一
words = ["oath","pea","eat","rain"]
[..+eo. .,ea,.] :4ndno
Note:
1. All inputs are consist of lowercase letters a-z
---
## Page 347
2. The values of words are distinct.
题目大意
给定一个二维网格board和一个字典中的单词列表words，找出所有同时在二维网格和字典中出现的
单词。
单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻“单元格是那些水平相邻或垂直相
邻的单元格。同一个单元格内的字母在一个单词中不允许被重复使用。
解题思路
·这一题是第79题的加强版，在第79题的基础上增加了一个word数组，要求找出所有出现在地
图中的单词。思路还是可以按照第79题DFS搜索，不过时间复杂度特别高！
·想想更优的解法。
代码
package leetcode
func findwords(board [][]byte, words []string) []string {
res := []string{}
for _, v := range words {
if exist(board, v) {
res = append(res, v)
3
return res
213.HouseRobber
题目
You are a professional robber planning to rob houses along a street. Each house has a certain
amount of money stashed. All houses at this place are arranged in a circle. That means the first
house is the neighbor of the last one. Meanwhile, adjacent houses have security system
connected and it will automatically contact the police if two adjacent houses were broken
into on the same night.
Given a list of non-negative integers representing the amount of money of each house,
dletermine the maximum amount of money you can rob tonight without alerting the police.
Example 1:
---
## Page 348
Input: [2,3,2]
Output: 3
=auo)  asno qo uau  ( = uo)  asnou qo ou no :uoudx3
2)，
because they are adjacent houses.
Example 2:
Input: [1,2,3,1]
Output: 4
( = auow)  asnou qou uau pue ( = auow) I asnou qo :uoyeuedx3
Total amount you can rob = 1 + 3 = 4.
题目大意
你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成
一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，
如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最
高金额。
解题思路
·这一题是第198题的加强版。不过这次是在一个环形的街道中，即最后一个元素和第一个元素是
邻居，在不触碰警报的情况下，问能够窃取的财产的最大值是多少？
·解题思路和第198完全一致，只需要增加额外的一个转换。由于首尾是相邻的，所以在取了第一
个房子以后就不能取第n个房子，那么就在[0,n-1]的区间内找出总价值最多的解，然后再[1,n]
的区间内找出总价值最多的解，两者取最大值即可。
代码
package leetcode
func rob213(nums []int) int {
n := 1en(nums)
if n == 0 {
return 0
if n == 1 {
return nums[o]
if n == 2{
return max(nums [o], nums[1])
---
## Page 349
//由于首尾是相邻的，所以需要对比[0，n-1]、[1，n]这两个区间的最大值
return max(rob213_1(nums, 0, n-2), rob213_1(nums, 1, n-1))
func rob213_l(nums []int, start, end int) int {
preMax = nums[start]
curMax := max(preMax, nums[start+1])
for i:= start + 2; i= i{
C = append(c，i)
findcombinationSum3(k,target-i,i+1,c,res)
C = c[: 1en(c)-1]
217.ContainsDuplicate
题目
sajednp Kue sujeuos Keue au j! puy saaqu jo Keue ue uaaig
Your function should return true if any value appears at least twice in the array, and it should
return false if every element is distinct.
Example 1:
Input: [1,2,3,1]
Output: true
Example 2:
Input: [1,2,3,4]
Output: false
Example 3:
Input: [1,1,1,3,3,4,3,2,4,2]
Output: true
---
## Page 353
题目大意
这是一道简单题，如果数组里面有重复数字就输出true，否则输出flase。
解题思路
用map判断即可。
代码
package leetcode
func containsDuplicate(nums []int) bool{
record := make(map[int]boo1, 1en(nums))
for _, n := range nums {
if _,found := record[n];found {
return true
record[n] = true
return false
218.TheSkylineProblem
题目
A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when
viewed from a distance. Now suppose you are given the locations and height of all the
auys au ndno o weod e anm ( aunis) ooud adessio e uo umous se suping
formed by these buildings collectively (Figure B).
---
## Page 354
15
A
10
5
10
15
20
25
---
## Page 355
15
B
10
5
11
0
5
10
15
20
25
The geometric information of each building is represented by a triplet of integers [Li , Ri , Hi] 