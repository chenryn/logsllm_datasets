### Issue Description

I am encountering an `ImportError: No module named simplejson` when attempting to access the datastore admin on the development server. After the first occurrence of this error, I installed the `simplejson` package from SlackBuilds (I am using Slackware). The `simplejson` module can be imported without any issues in the Python console, but the import error persists when I try to access the datastore admin. Restarting the development server did not resolve the issue.

### Stack Trace

```python
Traceback (most recent call last):
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 3245, in _HandleRequest
    self._Dispatch(dispatcher, self.rfile, outfile, env_dict)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 3186, in _Dispatch
    base_env_dict=env_dict)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 531, in Dispatch
    base_env_dict=base_env_dict)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 2410, in Dispatch
    self._module_dict)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 2320, in ExecuteCGI
    reset_modules = exec_script(handler_path, cgi_path, hook)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 2216, in ExecuteOrImportScript
    exec module_code in script_module.dict
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/ext/datastore_admin/main.py", line 30, in <module>
    from google.appengine.ext.datastore_admin import copy_handler
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1945, in load_module
    return self.FindAndLoadModule(submodule, fullname, search_path)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1847, in FindAndLoadModule
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1798, in LoadModuleRestricted
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/ext/datastore_admin/copy_handler.py", line 40, in <module>
    from google.appengine.ext.datastore_admin import utils
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1945, in load_module
    return self.FindAndLoadModule(submodule, fullname, search_path)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1847, in FindAndLoadModule
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1798, in LoadModuleRestricted
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/ext/datastore_admin/utils.py", line 35, in <module>
    from google.appengine.ext.mapreduce import control
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1945, in load_module
    return self.FindAndLoadModule(submodule, fullname, search_path)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1847, in FindAndLoadModule
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1798, in LoadModuleRestricted
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/ext/mapreduce/control.py", line 26, in <module>
    from google.appengine.ext.mapreduce import handlers
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1945, in load_module
    return self.FindAndLoadModule(submodule, fullname, search_path)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1847, in FindAndLoadModule
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1295, in Decorate
    return func(self, *args, **kwargs)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/tools/dev_appserver.py", line 1798, in LoadModuleRestricted
    description)
  File "/home/lwlun/AppEngine/google_appengine/google/appengine/ext/mapreduce/handlers.py", line 26, in <module>
    import simplejson
ImportError: No module named simplejson
```

### Solution

The development server (`dev_appserver`) is designed to mimic the production environment. Therefore, any modules installed at the system level will not be available for import in your scripts. This is to ensure that your application works consistently both in the development and production environments.

In this case, you do not need to bundle the `simplejson` module because it is already available in the Django package installed in the production environment and with the SDK.

To resolve the `ImportError`, you should use the following import statement:

```python
from django.utils import simplejson
```

This will allow you to use the `simplejson` module without needing to install it separately.

### General Advice

- **Include External Libraries**: In general, if you need to use external libraries, you should include them in your application directory. You can symlink these libraries from their installed locations, and they will be deployed to production when you deploy your application.
- **Environment Consistency**: Always ensure that your development environment closely mirrors the production environment to avoid discrepancies in behavior.