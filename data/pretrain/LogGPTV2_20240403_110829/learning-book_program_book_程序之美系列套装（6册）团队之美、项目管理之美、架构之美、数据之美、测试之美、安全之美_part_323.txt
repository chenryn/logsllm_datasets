进来，由此产生的活动将带来更多好奇的人接近赛场，你的下一个
活动就能影响到他们了。
在日历项目中，我们在更大的Mozilla社区论坛给更大范围的观众宣
布了我们的活动。我们通过博客定期发布公告，PlanetMozilla上也
会同步发布。我们发布到邮件列表、Mozilla项目新闻组和Mozilla论
坛中。为了项目，你必须回答这个问题：“用户在看什么？”那里就
是你想要去宣传的地方。例如，如果你的用户在用Facebook，那就
在上面创建和使用一个群。我们试过这一招了，但我们在Facebook
上没有结识到足够多的日历用户，所以那个群不是很成功。
另一个想法是把你的一些活动写成标准新闻稿提交给新闻媒体。传
统的技术新闻媒体很少会报道一个小的QA活动，除非你真有什么独
特之处。不过，如果你走运能够把活动塞进传统新闻报道，那么将
触及大量从没听说过该项目的受众。所以，时不时花些时间和精力
给传统媒体供稿还是值得的。我们有一次走大运，传统新闻媒体报
道了我们早期的一个活动，我们发现这一报道比任何其他努力都能
激励和吸引日历QA团队人员的眼球。当天我们有超过50名志愿者参
与活动，其中约有15个在一段时间后仍参与项目，有些人甚至一直
参与到今天。
我们实际上做了什么
1848
---
## Page 1850
我们举行了几种类型的QA活动，每个活动的QA主题有所不同。我
们希望通过不同的活动来吸引不同技能和兴趣的志愿者。第一个也
是最成功的活动，是测试日。恰如其名，专门抽出一块时间邀请你
的志愿者来测试应用程序的功能。事情最具体的测试日是最好的测
试日，一套完整的测试用例，配以完整的文档以及如何运行这些测
试的指示，人们比我们让他们做随机测试时有着更多的参与热情。
在测试日，我们鼓励资深志愿者运行较难的测试用例，如对时区的
支持，让新志愿者去运行文档写得较好的手工测试用例。在这两种
情况下，鼓励用户参与测试日直接影响了该项目的质量，因为应用
程序得以在多种不同的运行坏境、操作系统和硬件配置运行。
测试日变得对项目如此重要，我们创建了模板和辅助文件，这样即
使志愿者都能让测试日活动运转起来。一旦我们开始做不同时区的
测试日“轮班”，这就更显得尤为重要。但是，你要注意不要把帮助
和交流文档写得好像味同嚼蜡。我们最近就遇到这样的问题，日历
项目因此而失去了不少志愿者。即使你已经写了一万份这样的文档
了，你还得让这些文档看上去保持新鲜而令人兴奋。
缺陷日活动致力于评估缺陷。在Mozilla缺陷系统，我们每大都会有
一些新的缺陷，还会有些老的缺陷好长时间没人管了。在缺陷日
上，我们努力带领人们来走评估缺陷的流程，看老缺陷是否仍然成
立，并尝试重现和清理新缺陷，让开发人员能有所行动。在这样的
一个大项目中设置明确的目标很重要，这样才不会让志愿者感觉到
不堪重负。例如，单是在日历项目中，我们一开始就有数千个或新
或老的缺陷需要评估，这就应该让志愿者只关注其中的一个子集。
你还需要从外部用户的角度来评估缺陷系统的不足之处。有一件很
关键的事是，我们希望得到志愿者帮助，那就是标记缺陷为“已核
实”，这表明QA评审了开发人员的改变，发现该缺陷的确被修复
了。然而，在Mozilla的Bugzilla安装中，你需要特权才能设置“已核
实"的标记。我们尽可能把这个权限给予用户，还发明了一种替代方
案，以便权限有限的用户仍然可以作出责献。但是，这始终是我们
缺陷日的一个遗憾，我们总是没有获得足够的帮助来核实缺陷。
我们最少举行的活动是测试用例编写日。在第一次做这个不寻常活
动的时候，如前所述，我们意外得到了新闻媒体的报道。活动当
天，我们邀请社区同胞为我们编写手工和自动化测试用例。像这样
一个活动的成败，与你提供的编写测试用例的模板有直接的关系。
我们发现，许多人被关于编写这些用例的虚假想象所吓倒，但当我
1849
---
## Page 1851
们解释说“把某人做了什么动作写下来，再写出应用程序为此应该如
何响应”，大家立即理解了。我们并未经常举行这个活动，原因很简
单，要办得成功还是很困难的。
目标设置和奖励
对于你所有的活动，你心中应该一直有个明确的目标：运行的测试
用例数目、评估的缺陷数目、编写的测试用例数目。我们曾尝试为
在活动中突出表现者颁发认证奖品，还是比较成功的。作为一个小
的志愿者项目，很难提供任何真正的奖励，人们来只是因为想帮
忙，而不是因为他们期待获得物质奖励。所以，尽管奖励在活动中
是一个刺激团队之间竞争的有趣方式，它并未如我们预期的那样多
地激励人们。然而，我们发现在活动中获得公开认可是一个巨大的
激励方式。
在每个测试日之后，我们都会写博客描述活动，列出所有参与者，
并感谢他们。我们还列出发现缺陷的人以及缺陷的名称。这种简单
的博客文章带旺了社区，我们停止列举“成果"的博客文章之日，就
是我们的持续志愿者减少之时。归结起来，这就是认可每个志愿者
闲暇时候的时间和精力。写这样的"成果”博客文章，显示的是我们
的感谢，当我们不这么做了，他们也就销声匿迹了。
结论
创建一个QA项目的社区是你能为产品所做的最好的事情。它在流程
早期就把产品摆在感兴趣的用户面前，并让他们能使用和试验正在
开发的功能。它还可以把你的测试扩展到各种不同的最终用户配
置、硬件和操作系统上。但是，说为QA项目创建一个社区是“美丽
的”称号的原因，是因为它汇集了一群感兴趣有活力的人和积极的志
愿者，还创造了一个支持你产品的亲友团。该部落的推广传道和口
口相传能让任何泛着光泽的广告相形见细。把五湖四海来自各行各
业的人，为了一个共同的目标凝聚在一起，是一项绝对美丽的有益
活动。
第4章协作是性能测试之美的基石
ScottBarber
1850
---
## Page 1852
性能测试通常是软件开发项目中最无系、最复杂、最缺人手、时间
最紧迫、最易被误解、最好斗以及最吃力不讨好的方面，但它并不
必要如此。我曾在几个不同场合亲身经历过美丽的性能测试。事实
上，似乎大多数优秀的职业测试人员都有至少一个关于美丽的性能
测试的故事。
那么，美丽的性能测试有哪些特性呢？我认为它们应该是：
·期望的
·有意的
·有用的
有技术含量的
·社会的
·值得尊敬的
·谦逊的
·有效率的
：（适度）挑战性的
价值驱动的
·价值导向的
但我认为如果性能测试要变得美丽，首先就必须协作。
在接下来的故事中，我将与你分享塑造了我对性能测试之美的看法
的关键事件。巧合的是，这一章也是在讲述一个软件开发公司如何
处理性能测试，使几个开发项目在过程中变得越来越美丽。在阅读
时，你需要特别注意两件事。第一，请注意这些故事在开始时，可
以说，并不美丽。第二，请注意在每个故事中，协作都是取得进
展、成功和解决冲突的关键。
设置舞台
1851
---
## Page 1853
下面的所有事件都发生在.com时代的，一家精品软件定制开发公司
的14个月之内，我在那里担任性能测试技术组长和实践经理。这些
事件跨越好几个开发项目，但核心项目小组在整个期间大致相同
这里的项目团队，我指不只是那些写代码的人，还包括管理人
员、客户经理、项目管理、业务分析、测试人员、系统管理员和技
术支持人员。
虽然我尽最大努力准确、客观地复述这些事件，不过接下来完全是
我对所发生的事件的观点。事件发生的顺序与它们在这一章中出现
的顺序一样，我没有任何故意调换，除了删除了一些攻击性的词汇
或将其替换成一些不那么具有攻击性的词。此外，我必须说明的
是，我故意修改了一些有关的个人、客户以及合同的识别信息，以
保护无辜的、犯了错的、害羞的，以及那些我已经失去联系、无法
获得使用其真实姓名的许可的人。
100%？！？失败
我刚刚被告知，在接下来的星期一，我将开始一个新项目，为一家
财富50强的公司建立一个基于计算机的学习交付和学生进度跟踪系
统（我将称其为eVersity）。该项目已经正式进入开发阶段，这意味
着，客户接受了我们的概念，是时候让项目组的其余成员开始工作
了。我当时正在我的办公桌前整理之前的项目的文档，新项目的测
试经理Harold走到我面前，直截了当地递给我一张纸，并问道“你能
测试这个吗？”虽然我觉得这个问题略带侮辱性，不过我仍然看了那
份文件。我刚看到：
系统性能要求：
100%的情况下，100%的网页会在5秒或者更短的时间内显示出来。
·应用程序应.....
就在一张便签上写下“失败”，将其拍在文件上，并从肩膀上递回给
Harold，然后回到我之前的工作中去了。Harold毫不掩饰对我的做法
答：“如果你确实想要，我可以做测试。不过得了吧，这是互联网！
任何东西都无法保证100%的概率！"Harold拂袖而去。
第二周开始的时候，Harold又拿着另一张纸来了。他将这份文件交
给了我，只是问：“这样好一些了么？”这一次我尽力阅读了所有条
1852
---
## Page 1854
目。
系统性能要求：
95%的情况下，95%的网页会在5秒或者更短的时间内显示出来。
应用程序应支持1000个用户同时使用。
98%的情况下，课程将在第一次尝试时就完全正确下载，
95%的情况下，课程将在60秒或者更短的时间内下载完成。
“好一些？确实。不过还是没什么意义，而且完全无法验证。话说回
来，这到底是用来做什么的呢？"我回答。Harold显然有些失望，但
还是冷静地告诉我，他被要求创建我们与客户的合同的性能要求，
我终于理解了他的意图，我建议Harold安排一个数个小时的会议，
我们进一步讨论他的任务。他同意了。
结果，Harold却花了好几个会议，向我解释客户的预期、他的任务
背后的故事，而我则向Harold解释了为什么我们不希望将本来就模
棱两可的性能指标写到合同义务中去，这些含糊之处是什么，以及
哪些数据是我们确实可以度量且有价值的。最后，Harold和我将篇
幅已扩展到好几张纸的下述要点交给我们的项目经理Sadra审查：
系统性能测试要求：
性能测试将在多种负载和使用模型下进行，具体负载和使用模型将
在系统功能和工作流程建立时确定。
对于任何内部版本，凡是出现性能测量结果超出以下数据的，必须
报告开发组长：
一在任意数量的用户条件下，有超过5%的情况加载网页的时间超过
5秒。
一在任意数量的用户条件下，有超过1%的情况加载网页的时间超过
8秒。
一超过2%的情况，课程无法完整或正确下载。
1853
---
## Page 1855
一在任意数量的用户条件下，有超过5%的情况课程下载所需的时间