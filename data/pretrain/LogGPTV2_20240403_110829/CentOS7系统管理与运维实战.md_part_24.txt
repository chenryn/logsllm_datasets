搭建好LAMP后，
ohpinfo();
[rooteCentos
【示例6-48】
重启Apache服务，然后编辑测试脚本，如【示例6-48】所示。
MySQL权限管理
MySQL日常维护
Configuration
ile
erver
PHP Version 5.4.16
www.testdomain.
port
API
，还要注意MySQL的日常维护，包含权限管理、日志管理、备份与恢
/etc/ohp.d
usr/
url=
ache2.0
/usr
ne
loce
图6.5PHP测试页面
Com
3.10.0-229.1.2e7.x86.64#1SMPFrnMar2703:04:26UTC
井
cat
php
第6章搭建LAMP服务
163
---
## Page 176
如需添加新账号，可以使用GRANT语句，MySQL的常见权限说明如表6.3所示。
和 procs_priv表中，在MySQL启动时服务器将这些数据库表内容读入内存。要修改一个用户
CentOS7系统管理与运维实战
164
UPDATE，则可以使用以下命令分配，操作过程如【示例6-49】所示。
SUPER
SHUTDOWN
SHOWDATABASES
REPLICATIONSLAVE
REPLICATION CLIENT
RELOAD
PROCESS
CREATEUSER
LOCKTABLES
CREATETEMPORARYTABLES
FILE
EXECUTE
CREATEROUTINE
ALTERROUTINE
SHOWVIEW
CREATEVIEW
UPDATE
SELECT
INSERT
INDEX
DELETE
ALTER
REFERENCES
GRANTOPTION
DROP
CREATE
参数
#分配用户名、
【示例6-49】
如主机192.168.1.12需要远程访问MySQL服务器的account.users表，权限为 SELECT和
1.分配账号
MySQL账户权限信息被存储在MySQL 数据库的user、db、host、tables_priv、columns_priv
密码和对应权限
超级用户
关闭服务器
显示数据库
用于复制
用于复制
重载服务
管理服务器和客户连接进程
创建用户
锁定表格
创建临时表
读、写服务器上的文件
执行存储过程
创建存储过程
修改存储过程
显示视图的定义
创建视图
修改表的数据
从表中查询数据
向表中添加数据
创建和删除索引
在表中删除数据
修改数据库、表的属性
可以创建外键
可以对用户授权的权限
删除数据库、表
创建数据库、表
说明
表6.3MySQL权限说明
---
## Page 177
Create
mysql>flush privileges;
pass123456;
mysgl> grant select,update
ysgl>
账户创建成功后查看my
Replclientpriv:
Repl slave priv: N
max questions: 0
Execute priv:
tmp table priv:
Show db priv:
x509_subject:
x509 issuer:
Event priv:
Super priv:
Reload priv:
Alter_priv:N
Create priv:
Index priv: N
Select priv: N
File_priv:
Drop priv:N
ssl type:
cipher:
User:
Host:192.168.1
sq1数据库表的变化
userl
N
Z
Z
Z
12
userlG
ser1@192
第6章搭建LAMP服务
168.1
12
IDENTIR
165
---
## Page 178
的账户具有account.users表的SELECT和UPDATE权限，权限验证通过，用户成功登录。
继续寻找db 表中的记录，如没有则继续寻找tables_priv 表中的记录，通过对比发现当前连接
新权限。当用户登录时，首先检查user表，发现对应记录，但由于各个权限都为“N“，因此
CentoS7系统管理与运维实战
166
user1@'192.168.1.12'
'user1'@'192.168.1.12'
提示
3 rows in set (0.00 sec)
Grants for PI:EMAIL:GRANT SELECT,
Grants for PI:EMAIL: GRANT SELECT,UPDATE ON bbs*TO
Grants for PI:EMAIL: GRANT USAGE ON *,* TOuser1@'192.168.1.12
mysql> show grants for PI:EMAIL \G
【示例6-50】
如需查看当前用户的权限，可以使用SHOWGRANTSFOR命令，如【示例6-50】所示。
2.查看或修改账户权限
上述示例为MySQL服务器给远程主机192.168.1.12分配了访问表accout.users的查询和更
1row in set (0.00 sec)
Column_priv:
Table_priv: Select,Update
mysgi>
mysql> select *from db where user='userl'\G
1row in set (0.00 sec)
Table name:
max user connections:0
Timestamp:2015-06-18 23:38:03
Grantor:root@localhost
User: userl
max_connections:0
权限为“Y”
MySQL权限按照user→db→tables_priv→columns_priv 检查的顺序，如果user表中对应的
Host:192.168.1.12
Db:account
users
，则不会检查后面表中的权限。
---
## Page 179
错误日志、访问日志和慢查询日志。
务器的运行状态，及时发现服务运行中的各种问题。MySQL服务支持的日志有二进制日志、
6.5.2
DROPUSER命令，如【示例6-52】所示。
注意此权限操作的账户需具有GRANT权限。使用方法如【示例6-51】所示。
提示
和更新权限。
权限，但不能操作数据库表，其他记录表示该账户具有表“bbs.*”和表 account.users 的查询
综合。密码为经过MD5算法加密后的结果。USAGE权限表示当前用户只具有连接数据库的
MySQL服务提供了多种日志用于记录数据库的各种操作，通过日志可以追踪MySQL服
ERROR 1141 (42000): There is no such grant defined for user 'test3! on host %
mysql> show grants for test3@i%';
Query OK,0 rows affected (0.00 sec)
mysql> drop user test3@;
1 row in set (0.00 sec)
I Grants for test3@%
mysql> show grants for test3@'%';
【示例6-52】
账户所有权限回收后用户仍然可以连接该MySQL服务器，如需彻底删除用户，可以使用
Query OK,0 rows affected (0.00 sec)
mysql> revoke ALL on *.* from test3@'%;
Query OK,0 rows affected (0.00 sec)
mysql>revoke
【示例6-51】
如需回收账户的权限，MySQL提供了REVOKE命令，可以对应账户的部分或全部权限，
3.回收账户权限
一
上述示例通过查看指定账户和主机的权限，PI:EMAIL具有的权限为三条记录的
MySQL日志管理
不会影响之前会话中用户的权限，如需使用最新的权限，用户需要重新登录。
MySQL用户登录成功后权限加载到内存中，此时如果在另一会话中更改该账户的权限并
insert on *,* from test3@%';
-----
第6章搭建LAMP服务
167
---
## Page 180
CentOS7系统管理与运维实战
g8 IEUg8BAAAAZgAAAGoAAAABAAQANS4xLj Y2LWxvZWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
查看，如【示例6-53】所示。
制文件存放的位置，位置可以为相对路径或是绝对路径。
168
BOLD COM
括数据查询语句。
lation server=8/*!*
esession.unique_checks=1,
5.1.
由于binlog以二进制方式存储，如需查看其内容需要通过MySQL 提供的工具mysqlbinlog
如需启用二进制日志，可以通过在配置文件中添加“--log-bin=[file-name]”选项指定二进
[root@MysoL_192 168_19_230 binlog]# mysqlbinlog mysql-bin.0000051cat-n
【示例6-53】
二进制日志也通常被称为 binlog，记录了数据库表的所有 DDL 和 DML 操作，但并不包
1.二进制日志
27SET TIMESTAMP=1376043692/*1*/
26#130809 18:21:32 server
N
20
6
印
13
6
9AAAAAAAAAAAAAAAAAAAAAAAAEzgNAAgAEgAEBAQEEgAAUwAEGggAAAAICAgC
3DELIMITER /*!*/;
/*!\clatin1
SET @esession.auto_increment
SET
SET TIMESTAMP=1376043685/*1*/
#130809 18:21:25 server
SET @@session.pseudo _thread id=3/*!*/;
#at106
*!*/;
log created 130809 18:20:51
#at228
1*1*/=
update users myisam
SET @@session.sql mode=o/*i*/:
SET @@session.foreign_key_checks=l, @osession.sgl_auto _is_null=1,
BINLOG
#at4
Warning:
40019
error_code=0
SET @@session.max insert_delayed_threads=o*/:
this binlog is either
*1/*!*/
client=8,@@session.collation connection=8,@@session.co
@@session.autocommit=l/*!*/:
set name="xxx" where name='petter
id1
end_log pos 106Start:binlogv 4, server
end_1og_pos 350
in use or was not closed properly.
ouen
Query
thread id=3
thread id=3
---
## Page 181
mysgl_upgrade to create it.
设置，则错误日志默认位于MySQL服务的datadir目录下。
MySQL故障定位方面有重要的作用。
日志文件。
例6-55】的命令。
的保留天数，此参数也可以通过MySQL变量设置，如需删除7天之前的binlog，可以使用【示
或删除指定时间之前的日志，如【示例6-54】所示。
第26~28行则记录了执行的SQL及时间。
data/master/dbdata
如需删除binlog，可以使用“purge binary logs”命令，该命令可以指定删除的binlog序号
【示例6-56】
MySQL的操作错误日志记录了MySQL启动、运行至停止过程中的相关异常信息，在
2.操作错误日志
此参数设置了binlog日志的过期天数，此时MySQL可以自动清理指定天数之前的二进制
Query ok,0 rows affected (0.01 sec)
mysql> set global expire_logs_days=7;
除通过以上方法外，可以在配置文件中指定“expire_logs_days=#”参数设置二进制文件
PURGE BINARY LOGS BEFORE2015-04-02 22:46:26';
[root@Centos tmp]# cat /data/master/dbdata/Centos.err
一段错误日志如示例【示例6-56】所示。
【示例6-55】
#删除指定时间之前的二进制日志
#删除指定序号之前的二进制日志
【示例6-54】
第5行记录了当前MySQL 服务的 server-id、偏移量、binlog 版本、MySQL版本等信息，
41308100:00:09 InnoDB:Initializing buffer pool,size=8.0M
33/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION TYPE*/;
28 update users_myisam set name="xxx" where name='myisam
DELIMITER;
#End of log file
/*1*/;
第6章搭建LAMP服务
run
169
---
## Page 182
170
一种方法可以在登录MySQL实例后通过设置变量启用此日志，如【示例6-57】所示。
相对繁忙的系统中建议将此设置关闭。
实例将自动退出。
“perror13”查看。第21~23行则说明系统中已经启动了同样端口的实例，当前启动的MySQL
启动MySQL之前并没有初始化MySQL系统表，错误码13对应的错误提示可以使用命令
CentOs7系统管理与运维实战
data/master/dbdata/Centos.pid ended
该日志可以通过在配置文件中设置“--log=[fil-name]”指定访问日志存放的位置，另外
ready in use
mysql> show variables likeageneral log%';
eated
eated
#查询日志位置
Duery oK,
mysgi>
#启用该日志
【示例6-57】
此日志记录了所有关于客户端发起的连接、查询和更新语句，由于其记录了所有操作，在
3.访问日志
以上日志信息记录了第1次运行MySQL时的错误信息，其中第2~3行的错误信息说明在
27
22
A
23
21