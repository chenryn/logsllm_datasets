**Kevin Mudrick** opened **SPR-9670** and provided the following comments:

We have observed a significant performance degradation in the 3.1.x branch compared to 3.0.x (and 2.5.6) when creating large quantities of prototype-scoped beans. In our test case, we are calling `context.getBean()` with a bean that references two levels of nested beans within a large loop. The performance difference is as follows:

- **3.0.7**: 40,604 ms
- **3.1.2**: 685,150 ms

The only variable between these tests is the version of the Spring dependencies.

After profiling with YourKit, I identified the primary performance bottlenecks in 3.1.x as follows:

### 1. `org.springframework.beans.TypeConverterDelegate`

This appears to be the more significant issue. The changes introduced in 3.1 (specifically in commit `6f14673`) to `findDefaultEditor()` result in an expensive initialization of an editor registry every time this method is called. This occurs for each property applied during every bean creation, leading to a substantial cumulative performance hit. Previously, the commented-out code (which relied on the now-removed `PropertyTypeDescriptor/PropertyDescriptor`) bypassed this expensive operation. Replacing the commented-out code with a static call to `PropertyEditorManager.findEditor()` significantly reduces the slowness, though it introduces a dependency on `java.beans`, which some commit comments suggest should be avoided for better platform compatibility.

### 2. `org.springframework.core.convert.Property`

This is also a notable performance issue. The overhead of annotation parsing via reflection, as noted in #13981, is evident here. My profiling shows that this class is constructed for every property found on every bean being created. With a large number of prototype beans, this performance impact becomes apparent quickly. A potential solution could be to implement a caching strategy similar to that used by Apache Commons BeanUtils' `PropertyUtilsBean` for annotations, which could help mitigate this performance hit.

---

**Affects:** 3.1.2

**Issue Links:**
- #13981: `org.springframework.core.convert.Property` class performs expensive operations in its constructor ( _ **"is duplicated by"**_ )
- #12081: Concurrent prototype creation causes `NullPointerException`
- #13109: `TypeConverterDelegate` contains commented out code

**Votes:** 0
**Watchers:** 6