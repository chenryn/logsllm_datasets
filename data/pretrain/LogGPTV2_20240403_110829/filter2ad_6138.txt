# PathCache: A Path Prediction Toolkit

## Authors
Rachee Singh and Phillipa Gill  
Stony Brook University  
{racsingh, phillipa}@cs.stonybrook.edu

## 1. Introduction

In recent years, network measurement platforms such as RIPE Atlas [6] and CAIDA’s Ark [3] have become increasingly popular, with each platform supporting millions of measurements daily. These platforms are valuable resources for network measurements, but they are limited in terms of scheduling measurements and maintaining the necessary backend storage systems. In this poster, we introduce PathCache, a system that allows researchers to reuse existing traceroute measurements to learn properties of network paths.

Our goal is to support research that is not well-served by existing measurement platforms. PathCache provides an interface that can deliver path information without waiting for new measurements to complete. By bootstrapping from multiple empirical datasets, PathCache can predict paths that have not been directly measured, offering higher accuracy than algorithmic simulations used in previous work [7]. PathCache aims to reduce the load on existing measurement platforms by making it easy for researchers to reuse measurements through a unified, user-friendly interface.

### Key Features

- **Predicting Unmeasured Paths:** PathCache can predict paths even when direct measurements are not possible. It uses a path-stitching approach based on destination-based routing to combine disparate traceroute measurements. We develop a methodology to resolve violations of destination-based routing by assigning confidence values to computed paths.
- **Improving Prediction Accuracy:** For applications that require high accuracy, such as security-sensitive Tor clients, PathCache infers paths without requiring the client to issue its own measurements. It includes metadata about the measurement and data source, allowing for easy validation and evaluation of predicted paths.
- **Easy Interfacing with PathCache:** Our goal is to make PathCache as simple to use as possible. For Tor clients that cannot query a central server without revealing their intended destination, we provide a downloadable version of PathCache with nightly updates (approximately 15MB). We also expose a REST API to make PathCache accessible to researchers and network operators.

## 2. PathCache System Design

PathCache aggregates multiple data- and control-plane datasets from publicly available measurements and BGP route monitors. Traceroutes are converted to AS-level paths, which are then combined to produce destination-based AS graphs used to derive network paths. These paths are provided to users via a REST API and a client-side interface.

### From Traceroutes to AS-Level Paths

We take a best-effort approach to converting traceroutes to AS paths, noting that improved IP-to-AS path mapping solutions would enhance PathCache's accuracy. We create an AS graph for each destination AS, including edges used by other ASes to reach the destination.

### Merging Measured Paths to Infer New Paths

Using these AS graphs, we estimate AS paths. Violations of destination-based routing present themselves as multiple paths between a source and a destination. We assign a confidence value to each path (based on the number of times the path is observed in measurements) to highlight more likely paths.

### Usability of PathCache

We provide two interfaces for PathCache:
1. **Client-Side Interface:** A software client can download the set of destination-based graphs (approximately 125MB) from our central server. This allows the client to satisfy path queries locally without leaking information to a third party.
2. **REST API:** The REST API provides an easy way for researchers to experiment with the platform.

## 3. Evaluating PathCache

### Benefits of Merging Datasets

Figure 2 shows the number of ASes in each destination-based tree, indicating the breadth of our coverage. Destinations covered by RIPE experiments, which leverage thousands of vantage points, have the most sources. iPlane and Ark data increase the coverage breadth.

### Accuracy of PathCache

We evaluate PathCache over a set of paths from the top 200 ASes to the top 200 Alexa websites. We find that the exact path between sources and destinations is present in the five highest-confidence paths returned by PathCache 82% of the time (Fig 3). This is nearly 20% higher than simulation-based approaches, which infer the correct path 65% of the time [1].

## 4. References

[1] R. Anwar, H. Niaz, D. Choﬀnes, I. Cunha, P. Gill, and E. Katz-Bassett. Investigating interdomain routing policies in the wild. In ACM IMC, 2015.

[2] BGPStream. https://bgpstream.caida.org/.

[3] CAIDA Ark. http://www.caida.org/projects/ark/.

[4] P. Gill, M. Schapira, and S. Goldberg. Modeling on quicksand: Dealing with the scarcity of ground truth in interdomain routing data. ACM SIGCOMM Computer Communication Review, 42(1):40–46, 2012.

[5] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane: An Information Plane for Distributed Services. In Proc. of Operatings System Design and Implementation, 2006.

[6] RIPE Atlas. https://atlas.ripe.net/.

[7] O. Starov, R. Nithyanand, A. Zair, P. Gill, and M. Schapira. Measuring and mitigating as-level adversaries against tor. arXiv preprint arXiv:1505.05173, 2015.

## Figures

**Figure 1: Overall PathCache System Design**

**Figure 2: Benefit of Different Data Sources in Building Destination-Based Graphs**

**Figure 3: Accuracy of PathCache on "High Traffic" Paths**

---

This revised version of the text is more structured, clear, and professional, with improved readability and coherence.