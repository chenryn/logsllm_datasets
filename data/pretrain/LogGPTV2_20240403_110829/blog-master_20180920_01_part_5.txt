progress: 7.0 s, 89717.4 tps, lat 0.357 ms stddev 0.144  
........  
progress: 604792.0 s, 87531.8 tps, lat 0.366 ms stddev 0.112  
progress: 604793.0 s, 88013.5 tps, lat 0.364 ms stddev 0.085  
progress: 604794.0 s, 88438.9 tps, lat 0.362 ms stddev 0.119  
progress: 604795.0 s, 87804.3 tps, lat 0.364 ms stddev 0.416  
progress: 604796.0 s, 86275.8 tps, lat 0.371 ms stddev 0.103  
progress: 604797.0 s, 86883.9 tps, lat 0.368 ms stddev 0.356  
progress: 604798.0 s, 87882.8 tps, lat 0.364 ms stddev 0.071  
progress: 604799.0 s, 87601.3 tps, lat 0.365 ms stddev 0.083  
progress: 604800.0 s, 86404.5 tps, lat 0.369 ms stddev 0.091  
transaction type:   
scaling factor: 1000  
query mode: prepared  
number of clients: 32  
number of threads: 32  
duration: 604800 s  
number of transactions actually processed: 52381795265  
latency average = 0.369 ms  
latency stddev = 0.800 ms  
tps = 86610.109407 (including connections establishing)  
tps = 86610.150411 (excluding connections establishing)  
statement latencies in milliseconds:  
         0.001  \set aid random(1, 100000 * :scale)  
         0.001  \set bid random(1, 1 * :scale)  
         0.001  \set tid random(1, 10 * :scale)  
         0.000  \set delta random(-5000, 5000)  
         0.026  BEGIN;  
         0.086  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;  
         0.046  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
         0.058  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;  
         0.057  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;  
         0.046  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);  
         0.049  END;  
```  
### 结果 8.66万 tps   
7*24小时压测，数据库完成了523.8亿个事务，50几次freeze，性能平稳8.66万 tps 。      
## 小结  
### 1、1000万 tpcc测试，在16小时压测后，约1.8W tps，108 万tpmC。    
由于TPCC不断有数据写入，29小时后，活跃数据量接近2TB，IO waiting成为瓶颈，TPS下降到1.3万左右。     
### 2、1亿 tpcb测试，7天强压，性能平稳， 完成了523.8亿个事务，平均 tps 8.66万     
## 参考    
[《PostgreSQL 11 tpcc 测试(103万tpmC on ECS) - use sysbench-tpcc by Percona-Lab》](../201809/20180913_01.md)      
[《(TPC-H测试 SF=10,SF=200) PostgreSQL 11 vs 10 vs Deepgreen》](../201808/20180823_01.md)      
[《PostgreSQL 11 100亿 tpcb 性能测试 on ECS》](../201809/20180916_01.md)      
https://github.com/digoal/sysbench-tpcc    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")