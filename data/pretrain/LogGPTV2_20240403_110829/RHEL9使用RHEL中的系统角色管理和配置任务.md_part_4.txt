      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              interface_name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 192.0.2.1/24
                  - 2001:db8:1::1/64
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-static-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-a-static-ethernet-connection-using-rhel-system-roles-with-a-device-path_using-system-roles-to-configure-network-connections}使用设备路径的 RHEL 系统角色配置静态以太网连接 {.title}
:::
此流程描述了如何使用 RHEL 系统角色通过运行 Ansible playbook
为与特定设备匹配的设备远程添加带有静态 IP 地址的以太网连接。
您可以使用以下命令识别设备路径：
``` literallayout
# udevadm info /sys/class/net/ | grep ID_PATH=
```
此流程会为与 PCI ID `0000:00:0[1-3].0`{.literal}
表达式匹配的设备（但不包括设置 `0000:00:02.0`{.literal}）进行以下设置 ：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-dynamic-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with dynamic IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: example
              match:
                path:
                  - pci-0000:00:0[1-3].0
                  - &!pci-0000:00:02.0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 192.0.2.1/24
                  - 2001:db8:1::1/64
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              state: up
    ```
    本例中的 `match`{.literal} 参数定义了，将 play 应用到与 PCI ID
    `0000:00:0[1-3].0`{.literal} 匹配的设备，但不包括
    `0000:00:02.0`{.literal}。有关可以使用的特殊修饰符和通配符的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件中的 `match`{.literal} 参数描述。
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-dynamic-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-dynamic-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-a-dynamic-ethernet-connection-using-rhel-system-roles-with-the-interface-name_using-system-roles-to-configure-network-connections}使用接口名称的 RHEL 系统角色配置动态以太网连接 {.title}
:::
此流程描述了如何使用 RHEL 系统角色通过运行 Ansible playbook 为
`enp7s0`{.literal} 接口远程添加动态以太网连接。在这个设置中，网络连接从
DHCP 服务器请求这个连接的 IP 设置。在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   网络中有 DHCP 服务器。
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-dynamic-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with dynamic IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              interface_name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                dhcp4: yes
                auto6: yes
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-dynamic-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-dynamic-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-a-dynamic-ethernet-connection-using-rhel-system-roles-with-a-device-path_using-system-roles-to-configure-network-connections}使用设备路径的 RHEL 系统角色配置动态以太网连接 {.title}
:::
此流程描述了如何使用 RHEL 系统角色通过运行 Ansible playbook
为与特定设备路径匹配的设备远程添加动态以太网连接。使用动态 IP
设置时，网络连接会从 DHCP 服务器请求这个连接的 IP 设置。在 Ansible
控制节点上运行此步骤。
您可以使用以下命令识别设备路径：
``` literallayout
# udevadm info /sys/class/net/ | grep ID_PATH=
```
::: itemizedlist
**先决条件**
-   网络中有 DHCP 服务器。
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-dynamic-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with dynamic IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: example
              match:
                path:
                  - pci-0000:00:0[1-3].0
                  - &!pci-0000:00:02.0
              type: ethernet
              autoconnect: yes
              ip:
                dhcp4: yes
                auto6: yes
              state: up
    ```
    本例中的 `match`{.literal} 参数定义了，将 play 应用到与 PCI ID
    `0000:00:0[1-3].0`{.literal} 匹配的设备，但不包括
    `0000:00:02.0`{.literal}。有关可以使用的特殊修饰符和通配符的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件中的 `match`{.literal} 参数描述。
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-dynamic-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-dynamic-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件