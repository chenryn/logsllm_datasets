tion from them. There were important diﬀerences between
our study and theirs, however. One diﬀerence is that they
gathered information about destination protocols and traf-
ﬁc amounts rather than destination locations in any sense,
while we intentionally avoided gathering any information
about speciﬁc connections and only aggregated source or
destination AS information. They did gather source loca-
tion information, but their published results are at the level
of country rather than AS. Though interesting for under-
standing who uses Tor, we require AS-level knowledge to
analyze and make recommendations concerning an AS-level
threat. Their published results for source location also re-
ﬂect data gathered for only a single day (vs. a week for us).
Despite these diﬀerences, our results are largely consistent
where they overlap. Both studies show the largest number of
originations in Germany, far ahead of all other sources. And
both have essentially the same order of origin AS/country
for the top several sources.
5. TOR GROWS UP
The Tor network and software implementation have un-
dergone many changes since its public deployment in 2004.
In particular, the network has grown to include around 1,500
running relays at any given time. The Tor software’s path
selection algorithm has also undergone many changes to im-
prove the network’s load balancing, performance and secu-
rity. In this section, we seek to better understand how these
changes have impacted the Tor network’s ability to avoid an
AS-level observer.
5.1 Network Growth
To evaluate how only the growth of the Tor network has
aﬀected its ability to resist an AS-level observer, we ﬁrst
compare the location diversity of the network as it existed
in June 2004 (33 relays) versus September 2008 using the
same set of senders and recipients as described in [5]. To
avoid skewing our results, we used three diﬀerent snapshots
of the Tor network in September 2008—taken on the 2nd at
0000UTC, the 15th at 0800UTC, and the 29th at 1600UTC—
and then averaged the results. We noted above that some of
the source and destination ASes used in Feamster and Din-
gledine’s 2004 analysis have since relocated to other ASes.
Consequently, we restrict our comparison to only those end-
points that have not moved to another AS since 2004. The
resulting comparison is given in Table 2.
From 2004 to 2008 there is a drop in the median proba-
bility of a single AS observing both ends of a connection,
from .24 to .13 in the forward direction and from .27 to .14
in the reverse direction. The mean probability overall de-
creased from .38 to .22. That there is a non-trivial decrease
is certainly good news. But closer inspection shows this to
be a disappointing result for Tor’s resistance to such threats.
The ﬁrst thing to observe is how small a drop it is. Simply
growing the network has had only a slight eﬀect on AS-level
adversaries. This eﬀect should further diminish as the net-
work grows, both because nodes are increasingly more likely
to occupy already occupied ASes rather than new ones, and
because, even if they do, the more unusual and remote a
newly occupied AS is, the greater the number of hops over
more common ASes necessary to connect them to clients or
destinations.
The more surprising caution on this somewhat positive re-
sult is that it is not entirely uniform. Twenty three percent
of source/destination AS pairs from the Feamster-Dingledine
set had the location independence for forward paths decrease
as the network grew by two orders of magnitude. Indeed,
12.5% of these AS path combinations were worse oﬀ after
growth than before. Some of the issues raised above may
have played a role. In any case, even substantial network
growth does not guarantee improved path diversity: a sig-
niﬁcant fraction of paths got worse rather than better.
5.2 Path Selection
Tor’s path selection algorithm has undergone many changes
since its initial deployment. These changes have often been
intended to improve client performance, reliability and net-
work load balancing. Sometimes the changes have also been
in response to published attacks on the network [17, 1]. We
consider the following signiﬁcant path selection algorithm
modiﬁcations that have been implemented in Tor and how
they might also aﬀect the resistance the Tor software pro-
vides clients against AS-level observers.
Weighted Node Selection. Tor clients initially selected
all nodes in their path uniformly at random; however, given
Tor’s volunteer-driven network, clearly not all nodes are able
(or willing) to push the same amount of traﬃc. As a form of
primitive load balancing, Tor servers periodically report how
much traﬃc they have relayed and report this information
to the directory authorities. Clients receive this information
when they download a Tor directory, and then weight their
node selection proportional to the amount of bandwidth each
node advertises it can handle.
Feamster and Dingledine previously suggested that a good
strategy for deploying servers in an anonymity network might
be to place them at Tier 1 ISPs that have a high degree of
inter-AS connectivity. While Tor can’t dictate where its
volunteers operate their servers, it is reasonable to believe
June 2004 (33 relays)
September 2008 (1239–1303 relays)
Sender
209
1668
4355
6079
18566
22773
22909
23504
2914
0.49
0.39
0.38
0.62
0.39
0.56
0.21
0.39
11643
0.45
0.24
0.27
0.45
0.42
0.35
0.24
0.29
12182
0.40
0.30
0.28
0.48
0.41
0.37
0.26
0.37
15130
0.39
0.30
0.27
0.24
0.32
0.21
0.22
0.33
15169
0.19
0.19
0.43
0.43
0.56
0.34
0.22
0.42
26101
0.30
0.32
0.51
0.71
0.73
0.54
0.37
0.54
2914
0.17
0.18
0.13
0.12
0.18
0.21
0.19
0.49
11643
0.26
0.23
0.29
0.30
0.36
0.14
0.30
0.22
12182
0.19
0.20
0.12
0.15
0.20
0.20
0.24
0.23
15130
0.51
0.25
0.20
0.22
0.31
0.20
0.25
0.19
15169
0.23
0.13
0.19
0.20
0.20
0.17
0.21
0.16
26101
0.25
0.16
0.14
0.17
0.16
0.19
0.19
0.12
Table 2: Location independence comparison between the Tor network in June 2004 versus an average of three
days in September 2008. Despite over 1,000 new relays being added to the network, the mean probability of
a single AS observing both ends of a circuit in either the forward or reverse direction only decreased from
37.74% to 21.86%.
that servers operated at Tier 1 ISPs have greater bandwidth
available to them than nodes operated by users on, say, a
consumer broadband connection. Thus, it is not unreason-
able to expect nodes in Tier 1 ISPs to be used more fre-
quently than if all nodes were chosen uniformly at random,
which may in turn actually help increase Tor’s location di-
versity.
Distinct /16 Subnets. An easy attack on the Tor net-
work would be for an adversary to simply run two relays on
the same machine or network. Eventually a client will pick
the attacker’s nodes for their entry and exit nodes, poten-
tially allowing the adversary to correlate the sender with her
destination. In order to avoid this basic form of Sybil at-
tack [4], Tor clients ensure that the IP address of each node
in their circuit is from a diﬀerent /16 subnet.
Entry Guards. Current Tor clients always pick the
ﬁrst node in their path from a small set of trusted relays
called entry guards [17]. When a client ﬁrst runs, it selects
a handful of entry guards from available high-bandwidth,
high-uptime relays in the network. As previously mentioned,
these high-bandwidth nodes may be more likely to exist in
highly-connected ASes.
We implemented a simulation of Tor’s path selection al-
gorithm based on the TorFlow1 Python library in order to
evaluate the cumulative eﬀect of the above changes to Tor’s
path selection algorithm on the likelihood of choosing a path
that can be observed at both ends by an AS observer. As
shown in Section 4, the hypothesized model of typical Tor
client and destination ASes does not ﬁt well with the current
network usage. Instead, we used the distribution of client
ASes and destination ASes we collected from a public Tor
relay.
Using the Tor path simulator and the same three snap-
shots of the Tor network from Section 5.1, we generated
15,000 paths—5,000 for each snapshot. We also generated
15,000 paths (again, 5,000 for each Tor directory snapshot)
using where entry and exit nodes were selected uniformly
at random to represent how a Tor client from 2004 would
choose paths.
Sender and recipient ASes were selected proportional to
their observed distribution on the public Tor network. We
then used our AS path inference implementation and archived
RouteViews BGP data corresponding to each snapshot to in-
1https://svn.torproject.org/svn/torflow/
fer the forward and reverse paths between senders and entry
nodes, and exit nodes and destinations, resulting in a total of
60,000 AS paths to infer. The following are the aggregated
results over all three snapshots:
Uniform
Weighted (Tor)
Forward Reverse
Total
12.79% 13.23% 20.49%
10.92% 11.14% 17.81%
The ﬁrst row of the above table gives the probability of
an AS observing both ends of a connection for a uniformly
random node selection. The second row gives the same re-
sults but instead for Tor’s current path selection algorithm,
incorporating bandwidth weighting, entry guards and dis-
tinct /16 subnet enforcement. Even though the algorithm
Tor uses to select relays in path was done primarily for per-
formance reasons, we see that Tor’s path selection algorithm
has also had a small but positive and non-negligible impact
on the probability that a single AS will be able to observe
both ends of a typical client’s connection. We stress that
the same Tor directory information, sender and recipient
distributions, and routing table data were used for both ex-
periments. The only diﬀerence between the two was the
method used for choosing entry and exit nodes.
5.3 Effectiveness of Distinct /16 Subnets
Tor’s policy of ensuring that every node in a circuit is
selected from a distinct /16 subnet seems like a reasonably
eﬀective approach to increasing AS-level diversity within a
circuit. We wanted to investigate how eﬀective this practice
actually is on the current Tor network. Taking a snapshot of
the Tor network in mid-September 2008, we observed 1238
running relays existing in a total of only 474 diﬀerent ASes.
Of those 1238 relays, 417 of them had an IP address in the
same /16 subnet of another Tor relay. More surprisingly, a
total of 876 relays (or about 70%) existed in the same AS
as at least one other relay but had a diﬀerent /16 network
address from it. Such pairs of relays would not be detected
by Tor’s distinct /16 subnet enforcement. Of those 876 re-
lays, 850 not only had a distinct /16 but also a distinct /8
network address.
In order to see how often such nodes appear in the entry
and exit positions of the same circuit, we again generated
15,000 paths according to Tor’s path selection algorithm,
including the requirement that nodes belong to distinct /16
subnets. We then resolved the entry and exit node IP ad-
dress to their origin ASes. Out of 15,000 paths, 113 (ap-
proximately 1 out of every 133 circuits) contained an entry
and exit node that resided in the same AS despite having
an IP address from diﬀerent /16 subnets. Within those 113
paths, all but four also had a distinct /8 network address.
These results suggest that Tor’s policy of requiring nodes
in a path to have IP address in distinct /16 subnets is largely
eﬀective, though may not be stringent enough. Increasing
the policy to enforcing distinct /8 subnets appears be a rea-
sonable suggestion, but is by no means a solution to avoiding
an AS-level observer.
6. AS-AWARE PATH SELECTION
Based on the results above, it is apparent that simply in-
creasing the size of the Tor network with volunteer-operated
relays is not a suﬃcient approach to signiﬁcantly reducing
the threat of an AS-level observer. Rather, a more proactive
approach on the part of Tor clients is needed. In this sec-
tion, we evaluate the eﬀectiveness of various modiﬁcations
to Tor’s path selection algorithm that also try to enforce
better AS-level diversity.
6.1 Using diversity within the Tor network
Diversity of relay locations within the Tor network has of-
ten been considered a boon to anonymity. Tor Project Pro-
posal 144 [13] speciﬁcally suggests requiring that diﬀerent
nodes in a circuit not only exist in disjoint /16 networks, but
also come from diﬀerent ASes.2 Another potential method
to enforce location diversity in Tor circuits is to ensure each
hop in a client’s circuit is located in a diﬀerent country. If
eﬀective, this would be an appealing option since the Tor