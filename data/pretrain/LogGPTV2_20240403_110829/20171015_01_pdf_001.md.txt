pg_pathman– extensionforPostgreSQLpar(cid:415)(cid:415)oning
AlexanderKorotkov,IldarMusin
PostgresProfessional
2016
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 1/10
Whyshould wework aroundconstraint
exclusionmechanism?
Constrain exclusionmechanism problemswework
aroundwith pg_pathman:
▶ Very slowplanning on manypar(cid:415)(cid:415)ons: iterateeach
par(cid:415)(cid:415)on during query planning;
▶ Querycondi(cid:415)onsarepushed“asis”tothepar(cid:415)(cid:415)ons;
▶ Support of limitedtypes of par(cid:415)(cid:415)oning. For
instance,HASH-par(cid:415)(cid:415)oning isn’t supported;
▶ Don’t support run(cid:415)mepar(cid:415)(cid:415)ons selec(cid:415)on.
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 2/10
Whatdoes pg_pathmando be(cid:425)er?
▶ Fastpar(cid:415)(cid:415)on selec(cid:415)on
▶ Be(cid:425)erfiltercondi(cid:415)onprocessing
▶ Run(cid:415)mepar(cid:415)(cid:415)ons selec(cid:415)on
We’re workingon making it a part of futuredeclara(cid:415)ve
par(cid:415)(cid:415)oning.
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 3/10
Fastpar(cid:415)(cid:415)on selec(cid:415)on
http://akorotkov.github.io/blog/2016/03/18/pg_pathman-update-delete-benchmark/
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 4/10
Be(cid:425)erfiltercondi(cid:415)onprocessing:
pg_partman
# EXPLAIN SELECT * FROM test WHERE
(ts >= ’2015-02-01’ AND ts = ’2015-05-15’ AND ts  Seq Scan on test (cost=0.00..0.00 rows=1 width=40)
Filter: (((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts = ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts  Seq Scan on test_2 (cost=0.00..1183.40 rows=40320 width=41)
Filter: (((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts = ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts  Bitmap Heap Scan on test_3 (cost=444.46..1266.02 rows=20178 width=41)
Recheck Cond: (((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts = ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts  BitmapOr (cost=444.46..444.46 rows=20178 width=0)
-> Bitmap Index Scan on test_3_ts_idx (cost=0.00..430.07 rows=20178 width=0)
Index Cond: ((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts  Bitmap Index Scan on test_3_ts_idx (cost=0.00..4.30 rows=1 width=0)
Index Cond: ((ts >= ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts  Seq Scan on test_5 (cost=0.00..1310.80 rows=24360 width=41)
Filter: (((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts = ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts  Seq Scan on test_6 (cost=0.00..1268.00 rows=43200 width=41)
Filter: (((ts >= ’2015-02-01 00:00:00’::timestamp without time zone) AND (ts = ’2015-05-15 00:00:00’::timestamp without time zone) AND (ts = ’2015-02-01’ AND ts = ’2015-05-15’ AND ts  Seq Scan on test_2 (cost=0.00..780.20 rows=0 width=0)
-> Index Scan using test_3_ts_idx on test_3 (cost=0.29..767.99 rows=0 width=0)
Index Cond: (ts  Seq Scan on test_5 (cost=0.00..864.40 rows=0 width=0)
Filter: (ts >= ’2015-05-15 00:00:00’::timestamp without time zone)
-> Seq Scan on test_6 (cost=0.00..836.00 rows=0 width=0)
(7 rows)
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 6/10
Nestedloopjoin:WITHOUTRun(cid:415)meAppend
node
# EXPLAIN ANALYZE SELECT * FROM q JOIN journal j ON q.dt = j.dt; QUERY PLAN
-------------------------------------------------------------------------------------------------------------------------------
Hash Join (cost=27.50..35978.91 rows=1052270 width=56) (actual time=0.696..274.896 rows=385 loops=1)
Hash Cond: (j.dt = q.dt)
-> Append (cost=0.00..21482.70 rows=1052270 width=49) (actual time=0.008..177.315 rows=1051201 loops=1)
-> Seq Scan on journal_1 j (cost=0.00..58.80 rows=2880 width=49) (actual time=0.008..0.303 rows=2880 loops=1)
-> Seq Scan on journal_2 j_1 (cost=0.00..58.80 rows=2880 width=49) (actual time=0.003..0.280 rows=2880 loops=1)
.....................................................................
-> Seq Scan on journal_366 j_365 (cost=0.00..20.70 rows=1070 width=48) (actual time=0.001..0.002 rows=1 loops=1)
-> Hash (cost=15.00..15.00 rows=1000 width=8) (actual time=0.249..0.249 rows=1000 loops=1)
Buckets: 1024 Batches: 1 Memory Usage: 48kB
-> Seq Scan on q (cost=0.00..15.00 rows=1000 width=8) (actual time=0.005..0.121 rows=1000 loops=1)
Planning time: 28.302 ms
Execution time: 277.620 ms
(374 rows)
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 7/10
Nestedloop join: WITH Run(cid:415)meAppend
node
# EXPLAIN ANALYZE SELECT * FROM q JOIN journal j ON q.dt = j.dt; QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
Nested Loop (cost=0.28..482.15 rows=1052270 width=56) (actual time=0.043..4.185 rows=385 loops=1)
-> Seq Scan on q (cost=0.00..15.00 rows=1000 width=8) (actual time=0.008..0.108 rows=1000 loops=1)
-> Custom Scan (RuntimeAppend) (cost=0.28..0.46 rows=1 width=49) (actual time=0.002..0.002 rows=0 loops=1000)
-> Index Scan using journal_349_dt_idx on journal_349 j (cost=0.28..0.46 rows=1 width=49) (actual time=0.009..0.010 rows=1 l
Index Cond: (dt = q.dt)
-> Index Scan using journal_342_dt_idx on journal_342 j (cost=0.28..0.46 rows=1 width=49) (actual time=0.003..0.003 rows=1 l
Index Cond: (dt = q.dt)
.....................................................................
-> Index Scan using journal_353_dt_idx on journal_353 j (cost=0.28..0.46 rows=1 width=49) (actual time=0.003..0.003 rows=1 l
Index Cond: (dt = q.dt)
Planning time: 29.631 ms
Execution time: 5.304 ms
(495 rows)
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 8/10
Staytuned, be involved
▶ pg_pathmanis available atgithub:
https://github.com/postgrespro/pg_pathman
▶ Newsarepublished in myblog:
http://akorotkov.github.io/blog/
categories/pg-pathman/
▶ Currentstatusis beta,not produc(cid:415)onready.Any
help with tes(cid:415)ngis very welcome.
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 9/10
Thank you for a(cid:425)en(cid:415)on!
AlexanderKorotkov,IldarMusin pg_pathman–extensionforPostgreSQLpar(cid:415)(cid:415)oning 10/10