title:\(≈Åambda\)\(o\)\(≈Çambda\): Functional Lattice Cryptography
author:Eric Crockett and
Chris Peikert
SIMPLY SAFE LATTICE CRYPTOGRAPHY
A Dissertation
Presented to
The Academic Faculty
By
Eric Crockett
In Partial FulÔ¨Ållment
of the Requirements for the Degree
Doctor of Philosophy in the
School of Computer Science
Georgia Institute of Technology
August 2017
Copyright ¬© Eric Crockett 2017
SIMPLY SAFE LATTICE CRYPTOGRAPHY
Approved by:
Dr. Chris Peikert, Advisor
Electrical Engineering and Com-
puter Science
University of Michigan
Dr. Alexandra Boldyreva
School of Computer Science
Georgia Institute of Technology
Dr. Richard J. Lipton
School of Computer Science
Georgia Institute of Technology
Dr. J. Alex Halderman
Electrical Engineering and Com-
puter Science
University of Michigan
Dr. Craig Costello
Cryptography and Security Group
Microsoft Research
Date Approved: July 26, 2017
Complexity is still the worst enemy of security.
Bruce Schneier
To Mal Hodges, Dean Isaacs, and Gus Kaufman, Jr.,
who taught me more than a Ph.D. ever could.
ACKNOWLEDGEMENTS
I am extremely grateful to my advisor and faithful collaborator, Chris Peikert. Your
expertise, and the patience with which you share it, have been invaluable. Thank you for
pushing me to be my absolute best.
I also want to thank my fabulous Atlanta family, The Gaggle. Your friendship allowed
me to escape Georgia Tech with both a Ph.D. and my sanity, but you also helped me on a
much more important journey to Ô¨Ånd myself.
Kevin, I can‚Äôt tell you how much I appreciate having someone to call for advice, or just
to listen to me complain about the tribulations of Ph.D. life. I know I can always count on
you (unless you‚Äôre planning to visit me). Mom and Dad, you‚Äôve sacriÔ¨Åced more than I will
ever know to get me where I am. None of this would have been possible without your love
and support. Thank you.
v
TABLE OF CONTENTS
Acknowledgments .
.
.
List of Tables . .
. .
. .
List of Figures
.
. .
. .
Summary .
. .
. .
. .
.
.
.
.
.
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
v
x
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
xi
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xii
Chapter 1: Introduction .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.1 Advantages of Lattice Cryptography . . . . . . . . . . . . . . . . . . . . .
1
1.2 Lattice Cryptography Today . . . . . . . . . . . . . . . . . . . . . . . . .
4
1.2.1 Lattice Operations
. . . . . . . . . . . . . . . . . . . . . . . . . .
4
1.2.2 Complexity of Homomorphic Encryption . . . . . . . . . . . . . .
5
. . . . . . . . . . . . . . . . . . . . . . . . . .
1.2.3
6
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
1.3.1 A Functional Library for Lattice Cryptography . . . . . . . . . . .
8
1.3.2 A Language and Compiler for Homomorphic Encryption . . . . . .
9
1.3.3 Cryptanalytic Challenges for Ring Cryptography . . . . . . . . . . 10
1.3.4 Organization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
1.3 Our Contributions .
Security Estimates
Chapter 2: Background .
2.2 Cyclotomic Rings .
2.1 Mathematical Background and Notation . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
. 12
2.1.1
Integers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
2.1.2 Lattices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
2.1.3 Gaussians. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
2.2.1
. . . . . . . . . . . . . . . . . . . . . . . 17
2.2.2 Tensor Product of Rings
2.2.3
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
2.2.4 Canonical Embedding . . . . . . . . . . . . . . . . . . . . . . . . 20
2.2.5
(Tweaked) Decoding Basis . . . . . . . . . . . . . . . . . . . . . . 21
2.2.6 Chinese Remainder Bases
. . . . . . . . . . . . . . . . . . . . . . 25
2.2.7 Computational Problems for Cyclotomic Rings . . . . . . . . . . . 28
2.3 Haskell Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
2.3.1 Types
.
2.3.2 Type Classes
Powerful Basis
.
.
vi
.
.
.
3.2
3.3
3.1 Contributions
Chapter 3: Œõ‚àòùúÜ: Functional Lattice Cryptography . . . . . . . . . . . . . . . . . 34
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
3.1.1 Novel Attributes of Œõ‚àòùúÜ . . . . . . . . . . . . . . . . . . . . . . . 35
3.1.2 Other Technical Contributions . . . . . . . . . . . . . . . . . . . . 38
3.1.3 Limitations and Future Work . . . . . . . . . . . . . . . . . . . . . 40
3.1.4 Comparison to Related Work . . . . . . . . . . . . . . . . . . . . . 41
3.1.5 Architecture and Chapter Organization . . . . . . . . . . . . . . . . 43
Integer and Modular Arithmetic
. . . . . . . . . . . . . . . . . . . . . . . 44
3.2.1 Representing Z and Zùëû
. . . . . . . . . . . . . . . . . . . . . . . . 44
Reduce and Lift . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
3.2.2
3.2.3
Rescale .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
Gadget, Decompose, and Correct . . . . . . . . . . . . . . . . . . 48
3.2.4
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
3.2.5
CRTrans .
3.2.6 Type-Level Cyclotomic Indices . . . . . . . . . . . . . . . . . . .
. 52
3.2.7
Promoting Factored Naturals . . . . . . . . . . . . . . . . . . . .
. 53
3.2.8 Applying the Promotions . . . . . . . . . . . . . . . . . . . . . . . 55
Tensor Interface and Sparse Decompositions
. . . . . . . . . . . . . . . . 56
Single-Index Transforms . . . . . . . . . . . . . . . . . . . . . . . 57
3.3.1
3.3.2 Two-Index Transforms and Values . . . . . . . . . . . . . . . . .
. 67
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
3.3.3 CRT Sets
3.4 Sparse Decompositions and Haskell Framework . . . . . . . . . . . . . . . 75
3.4.1
Sparse Decompositions . . . . . . . . . . . . . . . . . . . . . . . . 75
3.4.2 Haskell Framework . . . . . . . . . . . . . . . . . . . . . . . . . . 76
3.5 Cyclotomic Rings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
3.5.1 Cyclotomic Types: Cyc and UCyc . . . . . . . . . . . . . . . . . . . 80
. 85
3.5.2
Chapter 4: State-of-the-art Homomorphic Encryption with Œõ‚àòùúÜ . . . . . . . . . 91
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
4.1.1 Example: SHE in Œõ‚àòùúÜ . . . . . . . . . . . . . . . . . . . . . . . . 92
4.1.2 Related Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
4.1.3 Organization . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. 96
4.2 EfÔ¨Åcient Ring-Switching . . . . . . . . . . . . . . . . . . . . . . . . . . . 96
. 98
. 99
. 100
4.3 Somewhat-Homomorphic Encryption in Œõ‚àòùúÜ . . . . . . . . . . . . . . . . 103
4.3.1 Keys, Plaintexts, and Ciphertexts . . . . . . . . . . . . . . . . . . . 104
4.3.2 Encryption and Decryption . . . . . . . . . . . . . . . . . . . . . . 106
4.3.3 Homomorphic Addition and Multiplication . . . . . . . . . . . . . 108
4.3.4 Modulus Switching . . . . . . . . . . . . . . . . . . . . . . . . . . 109
4.3.5 Key Switching and Linearization . . . . . . . . . . . . . . . . . . . 110
4.3.6 Ring Tunneling . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115
Source Code Analysis . . . . . . . . . . . . . . . . . . . . . . . . . 116
. . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . .
4.2.1 Linear Functions
4.2.2 Error Invariant
4.2.3 Ring tunneling as key switching.
Implementation . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.1 SHE with Œõ‚àòùúÜ .
4.4 Evaluation .
.
.
.
4.4.1
.
.
vii
4.4.2
Performance . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. 119
Chapter 5: ALCHEMY: A Language and Compiler for Homomorphic Encryp-
5.1
. .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
tion Made easY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
. 125
Introduction .
5.1.1
Principles of ALCHEMY . . . . . . . . . . . . . . . . . . . . . . . 127
5.1.2 Example Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131
5.1.3 ALCHEMY In The Real World . . . . . . . . . . . . . . . . . . . . 138
5.1.4 Related Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
5.1.5 Chapter Organization . . . . . . . . . . . . . . . . . . . . . . . . . 140
5.2 ALCHEMY Domain-SpeciÔ¨Åc Languages . . . . . . . . . . . . . . . . . . . 141
5.2.1 Typed Tagless Final Style . . . . . . . . . . . . . . . . . . . . . . . 141