### Android Full Disk Encryption (FDE) and MobiCeal Performance Analysis

#### Performance Comparison
- **Initialization Time:**
  - **MobiPluto:** 37 minutes 2 seconds ± 2 seconds
  - **MobiCeal:** 2 minutes 16 seconds ± 3 seconds
  - **Android FDE:** 18 minutes 23 seconds ± 1 second

- **Booting Time (Decoy Password):**
  - **MobiPluto:** 1.36 seconds ± 0.02 seconds
  - **MobiCeal:** 1.68 seconds ± 0.04 seconds
  - **Android FDE:** 0.29 seconds ± 0.02 seconds

- **Switching Time (Enter Hidden Mode):**
  - **MobiPluto:** 68 seconds ± 4 seconds
  - **MobiCeal:** 9.27 seconds ± 0.28 seconds
  - **Android FDE:** N/A

- **Switching Time (Exit Hidden Mode):**
  - **MobiPluto:** 64 seconds ± 5 seconds
  - **MobiCeal:** 63 seconds ± 6 seconds
  - **Android FDE:** N/A

**Note:** The overhead of MobiCeal is only about 22%. The high overhead of DEFY is due to the additional computational requirements for cryptographic operations. MobiCeal uses the dm-crypt kernel module, which is more efficient. HIVE, based on Oblivious RAM (ORAM), has a high overhead due to the high computational cost of ORAM. MobiCeal relies on modified thin provisioning for deniability, resulting in much lower overhead. HIVE can defend against a stronger adversary who can constantly monitor the device, but its significant performance overhead makes it impractical for deployment on mobile devices.

### Timing Measurements
We tested the initialization time, booting time, and switching time, which are critical for user experience. 

- **Initialization Time:** This is the time taken to complete the initialization process (Section V-B). We measured this by recording the time interval between the moment MobiCeal is activated by the `vdc` command and the moment the password entry interface appears.
- **Booting Time:** This is the time interval between entering the decoy password and the decryption of the public volume.
- **Switching Time:** This is the time interval between entering a password in the screen lock and the system switching to hidden mode.

Each test was conducted 10 times, and the means and standard deviations are shown in Table II. MobiCeal's initialization takes about 2 minutes, significantly shorter than MobiPluto [21]. The booting time is approximately 1.7 seconds, and the switching time is less than 10 seconds. Previous solutions (MobiFlage [34], MobiHydra [43], and MobiPluto [21]) require a reboot to switch modes, which is time-consuming (more than 1 minute). MobiCeal does not need a reboot, making it useful in emergencies.

### Related Work
The concept of deniable encryption has been applied to network communications, disk storage, and cloud storage [25]. In disk storage, existing Plausibly Deniable Encryption (PDE) designs can be classified into two categories: those against single-snapshot adversaries and those against multi-snapshot adversaries.

#### Designs Against Single-Snapshot Adversaries
- **Anderson et al. [13]:** Proposed the first file encryption scheme with PDE support, using hiding blocks within cover files and random data. However, these solutions have high storage and I/O overheads, making them unsuitable for resource-limited mobile devices.
- **StegFS [29]:** Uses the second approach from [13] and works on the Ext2 file system. It relies on the Ext2 file system and may not work on other file systems, with low disk usage due to collision avoidance.
- **TrueCrypt [2], FreeOTFE [3], EDS [10], and Fuyoal [8]:** Well-known desktop PDE tools that can defend against a single snapshot adversary.
- **MobiFlage [34, 35]:** The first PDE scheme for mobile devices, with versions for FAT32 and Ext4 file systems.
- **MobiHydra [43]:** Introduces multi-level deniability and supports sensitive data storage without rebooting.
- **MobiPluto [21]:** Combines hidden volume techniques and thin provisioning for a file system-friendly PDE design.
- **DEFTL [27]:** Incorporates deniability into the flash translation layer, considering the nature of NAND flash.

These PDE systems cannot mitigate a multi-snapshot adversary as they rely on static defense strategies, such as denying the existence of hidden data using initial randomness.

#### Designs Against Multi-Snapshot Adversaries
- **Pang et al. [32]:** Propose a steganographic file system where blocks used by hidden files are marked as occupied. They use "abandoned blocks" and "dummy blocks" to hide sensitive data. Their design is for desktop systems and lacks technical details for mobile devices. MobiCeal, in contrast, provides a clear "dummy write" mechanism specifically for mobile devices.
- **Blass et al. [15]:** Present HIVE, which uses expensive write-only ORAM, leading to high system overhead. Chakraborti et al. [18, 19] improve HIVE but still rely on ORAM, making it unsuitable for mobile devices. MobiCeal eliminates ORAM and is lightweight enough for mobile devices.
- **Peters et al. [33]:** Introduce DEFY, a deniable encrypted file system for mobile devices based on YAFFS. DEFY relies on YAFFS, limiting its applicability since YAFFS is rarely deployed. MobiCeal, integrated into the block layer, ensures broader applications.

### Conclusion
In this paper, we propose MobiCeal, a practical PDE solution for mobile devices. MobiCeal is the first block-layer PDE scheme resistant to multi-snapshot adversaries on mobile devices. It is file system friendly and supports fast switching. We implemented a prototype on an LG Nexus 4 phone using Android 4.2.2 and tested it on a Huawei Nexus 6P phone using Android 7.1.2. MobiCeal's performance overhead is significantly lower than other PDE systems, making it suitable for mobile devices.

### Acknowledgment
Chang, Li, and Ching’s work is supported by the Singapore National Research Foundation under NCR Award Number NCR2016NCR-NCR002-022. Dr. Fengwei Zhang is supported by the National Science Foundation Grant No. CICI-1738929 and IIS-1724227.

### References
[1]–[43] (References provided in the original text)

---

This version of the text is more structured and coherent, with clear headings and improved readability.