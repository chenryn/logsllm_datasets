### System information
  * **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)** : No
  * **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)** :  
Ubuntu 18.04 Bionic Beaver  
AMD Phenom x4 II 965
  * **TensorFlow installed from (source or binary)** : binary; docker image tensorflow-1.8.0-gpu-py3
  * **TensorFlow version (use command below)** : 1.18.0
  * **Python version** : 3.5
  * **Bazel version (if compiling from source)** :N/A
  * **GCC/Compiler version (if compiling from source)** :N/A
  * **CUDA/cuDNN version** :  
CUDA 9.0  
CuDNN 7.0.5
  * **GPU model and memory** :  
Geforce GTX 760 (compute capability 3.0) 2GB
  * **Exact command to reproduce** :  
`import tensorflow as tf` on tensorflow-gpu on system without AVX
### Describe the problem
Jupyter Kernel crashes when doing `import tensorflow as tf`using a system that
does not have AVX.
Similarly if i enter a python shell and do `import tensorflow as tf` i get an
`Illegal Instruction (core dumped)` error and it exits the shell.
I have confirmed this is due to the AVX instruction because when i use the
docker image Tensorflow-1.15.0-gpu-py3 I am able to successfully import
tensorflow.
_Unfortunately_ , tensorflow 1.15.0 requires compute capability 3.5 or higher
which is extremely frusterating because i cannot find a build of tensorflow
online that supports compute capaibility 3.0 but does not use AVX
instructions.
Why do i need a CPU that supports AVX just to import tensorflow when i dont
actually need the AVX instruction since i have a supported GPU (at least it is
supported on all tensorflow versions other than 1.15.0).
Is there a way around this or do i need to build tensorflow from source to not
use AVX but to allow compute capability 3.0? I tried using tensorflow-
gpu-1.18.0-devel-py to build a new version from source but it did not even ask
me what compute capabilities i wanted to build for and so i just let it build
but it took over 24 hours and it was still going.
Can someone either provide a tensorflow-gpu release with CUDA 9.0 and CuDNN 7
support that does not use AVX and supports compute capability 3.0 or at least
tell me the best way to obtain such a build (since apparently building using
the docker-devel image wont work).