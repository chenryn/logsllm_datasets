ulonglong __fastcall __aullshr(byte bParm1,uint uParm2)
{
  uint in_EAX;
  if (0x3f > (bParm1 & 0x1f),
                    in_EAX >> (bParm1 & 0x1f) | uParm2 > (bParm1 & 0x1f));
}
// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
uint __alloca_probe_16(void)
{
  uint in_EAX;
  uint uVar1;
  uVar1 = 4 - in_EAX & 0xf;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}
// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
uint __alloca_probe_8(void)
{
  uint in_EAX;
  uint uVar1;
  uVar1 = 4 - in_EAX & 7;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}
// WARNING: This is an inlined function
// Library Function - Single Match
// Name: __alloca_probe
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
void __alloca_probe(void)
{
  undefined *in_EAX;
  undefined4 *puVar1;
  undefined4 local_res0;
  undefined auStack4 [4];
  puVar1 = (undefined4 *)((uint)auStack4 & 0xfffff000);
  while ((undefined4 *)
         ((uint)(&stack0x00000000 + -(int)in_EAX) & ~-(uint)(register0x00000010 > 0x20 - (bParm1 & 0x1f),
                    in_EAX > 0x20);
    fVar4 = (float)in_ST0;
    if ((local_20 != 0) || (fVar4 = fStack28, (uVar1 & 0x7fffffff00000000) != 0)) {
      if ((int)fVar4 > 8,0);
        cVar28 = SUB161(auVar2 >> 0x10,0);
        cVar29 = SUB161(auVar2 >> 0x18,0);
        cVar30 = SUB161(auVar2 >> 0x20,0);
        cVar31 = SUB161(auVar2 >> 0x28,0);
        cVar32 = SUB161(auVar2 >> 0x30,0);
        cVar33 = SUB161(auVar2 >> 0x38,0);
        cVar34 = SUB161(auVar2 >> 0x40,0);
        cVar35 = SUB161(auVar2 >> 0x48,0);
        cVar36 = SUB161(auVar2 >> 0x50,0);
        cVar37 = SUB161(auVar2 >> 0x58,0);
        cVar38 = SUB161(auVar2 >> 0x60,0);
        cVar39 = SUB161(auVar2 >> 0x68,0);
        cVar40 = SUB161(auVar2 >> 0x70,0);
        cVar41 = SUB161(auVar2 >> 0x78,0);
        auVar26 = CONCAT115(-(cVar41 == SUB161(auVar42 >> 0x78,0)),
                            CONCAT114(-(cVar40 == SUB161(auVar42 >> 0x70,0)),
                                      CONCAT113(-(cVar39 == SUB161(auVar42 >> 0x68,0)),
                                                CONCAT112(-(cVar38 == SUB161(auVar42 >> 0x60,0)),
                                                          CONCAT111(-(cVar37 ==
                                                                     SUB161(auVar42 >> 0x58,0)),
                                                                    CONCAT110(-(cVar36 ==
                                                                               SUB161(auVar42 >>
                                                                                      0x50,0)),
                                                                              CONCAT19(-(cVar35 ==
                                                                                        SUB161(
                                                  auVar42 >> 0x48,0)),
                                                  CONCAT18(-(cVar34 == SUB161(auVar42 >> 0x40,0)),
                                                           CONCAT17(-(cVar33 ==
                                                                     SUB161(auVar42 >> 0x38,0)),
                                                                    CONCAT16(-(cVar32 ==
                                                                              SUB161(auVar42 >> 0x30
                                                                                     ,0)),
                                                                             CONCAT15(-(cVar31 ==
                                                                                       SUB161(
                                                  auVar42 >> 0x28,0)),
                                                  CONCAT14(-(cVar30 == SUB161(auVar42 >> 0x20,0)),
                                                           CONCAT13(-(cVar29 ==
                                                                     SUB161(auVar42 >> 0x18,0)),
                                                                    CONCAT12(-(cVar28 ==
                                                                              SUB161(auVar42 >> 0x10
                                                                                     ,0)),
                                                                             CONCAT11(-(cVar27 ==
                                                                                       SUB161(
                                                  auVar42 >> 8,0)),
                                                  -(SUB161(auVar2,0) == SUB161(auVar42,0))))))))))))
                                                  )))));
        uVar21 = pmovmskb(uVar21,CONCAT115(-(cVar41 == 0),
                                           CONCAT114(-(cVar40 == 0),
                                                     CONCAT113(-(cVar39 == 0),
                                                               CONCAT112(-(cVar38 == 0),
                                                                         CONCAT111(-(cVar37 == 0),
                                                                                   CONCAT110(-(
                                                  cVar36 == 0),
                                                  CONCAT19(-(cVar35 == 0),
                                                           CONCAT18(-(cVar34 == 0),
                                                                    CONCAT17(-(cVar33 == 0),
                                                                             CONCAT16(-(cVar32 == 0)
                                                                                      ,CONCAT15(-(
                                                  cVar31 == 0),
                                                  CONCAT14(-(cVar30 == 0),
                                                           CONCAT13(-(cVar29 == 0),
                                                                    CONCAT12(-(cVar28 == 0),
                                                                             CONCAT11(-(cVar27 == 0)
                                                                                      ,-(SUB161(
                                                  auVar2,0) == 0)))))))))))))))));
        uVar21 = uVar21 & uVar19;
        if (uVar21 != 0) break;
        uVar21 = pmovmskb(0,auVar26);
        uVar21 = uVar21 & uVar19;
        iVar22 = 0x1f;
        if (uVar21 != 0) {
          while (uVar21 >> iVar22 == 0) {
            iVar22 = iVar22 + -1;
          }
        }
        if (uVar21 != 0) {
          pbVar23 = param_1 + iVar22;
        }
        uVar19 = 0xffffffff;
        param_1 = param_1 + 0x10;
      }
      uVar24 = pmovmskb(unaff_EBX,auVar26);
      uVar19 = (uVar21 * 2 & uVar21 * -2) - 1 & uVar24 & uVar19;
      iVar22 = 0x1f;
      if (uVar19 != 0) {
        while (uVar19 >> iVar22 == 0) {
          iVar22 = iVar22 + -1;
        }
      }
      pbVar25 = param_1 + iVar22;
      if (uVar19 == 0) {
        pbVar25 = pbVar23;
      }
      return pbVar25;
    }
    if (param_2 == 0) {
      pcVar20 = (char *)((uint)param_1 & 0xfffffff0);
      uVar19 = pmovmskb(param_1,CONCAT115(-(pcVar20[0xf] == 0),
                                          CONCAT114(-(pcVar20[0xe] == 0),
                                                    CONCAT113(-(pcVar20[0xd] == 0),
                                                              CONCAT112(-(pcVar20[0xc] == 0),
                                                                        CONCAT111(-(pcVar20[0xb] ==
                                                                                   0),CONCAT110(-(
                                                  pcVar20[10] == 0),
                                                  CONCAT19(-(pcVar20[9] == 0),
                                                           CONCAT18(-(pcVar20[8] == 0),
                                                                    CONCAT17(-(pcVar20[7] == 0),
                                                                             CONCAT16(-(pcVar20[6]
                                                                                       == 0),
                                                  CONCAT15(-(pcVar20[5] == 0),
                                                           CONCAT14(-(pcVar20[4] == 0),
                                                                    CONCAT13(-(pcVar20[3] == 0),
                                                                             CONCAT12(-(pcVar20[2]
                                                                                       == 0),
                                                  CONCAT11(-(pcVar20[1] == 0),-(*pcVar20 == 0)))))))
                                                  ))))))))));
      uVar19 = uVar19 & -1 > iVar22 & 1) == 0) {
          iVar22 = iVar22 + 1;
        }
      }
      pbVar23 = (byte *)(pcVar20 + iVar22);
    }
    else {
      pbVar23 = (byte *)0x0;
      uVar19 = (uint)param_1 & 0xf;
      while (uVar19 != 0) {
        if ((uint)*param_1 == (uint)param_2) {
          pbVar23 = param_1;
        }
        if (*param_1 == 0) {
          return pbVar23;
        }
        param_1 = param_1 + 1;
        uVar19 = (uint)param_1 & 0xf;
      }
      do {
        pbVar25 = param_1 + 0x10;
                    // WARNING: Load size is inaccurate
        iVar22 = pcmpistri(ZEXT416((uint)param_2),*(undefined *)param_1,0x40);
        if ((byte *)0xffffffef < param_1) {
          pbVar23 = pbVar25 + iVar22 + -0x10;
        }
        param_1 = pbVar25;
      } while (pbVar25 != (byte *)0x0);
    }
    return pbVar23;
  }
  iVar22 = -1;
  do {
    pbVar23 = param_1;
    if (iVar22 == 0) break;
    iVar22 = iVar22 + -1;
    pbVar23 = param_1 + 1;
    bVar18 = *param_1;
    param_1 = pbVar23;
  } while (bVar18 != 0);
  iVar22 = -(iVar22 + 1);
  pbVar23 = pbVar23 + -1;
  do {
    pbVar25 = pbVar23;
    if (iVar22 == 0) break;
    iVar22 = iVar22 + -1;
    pbVar25 = pbVar23 + -1;
    bVar18 = *pbVar23;
    pbVar23 = pbVar25;
  } while (param_2 != bVar18);
  pbVar25 = pbVar25 + 1;
  if (*pbVar25 != param_2) {
    pbVar25 = (byte *)0x0;
  }
  return pbVar25;
}
void Unwind_00416896(void)
{
  uint *puVar1;
  int unaff_EBP;
  if (*(char *)(unaff_EBP + -0x30) != 0) {
    puVar1 = (uint *)(*(int *)(unaff_EBP + -0x3c) + 0x350);
    *puVar1 = *puVar1 & 0xfffffffd;
  }
  return;
}