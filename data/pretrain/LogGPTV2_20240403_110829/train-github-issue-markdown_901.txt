Hi,
We have discovered that Celery might be swallowing a raised exception during
task discovering, resulting in silently ignoring tasks.
We run Celery in a Django Project. We run the autodiscover process to fetch
all the tasks defined in each one of our tasks.py file in our installed apps
packages. We want Celery Beat to fire periodical tasks using Crontab.
Steps to reproduce :
    # In function.py
    def add2(number):
      return number + 2
    raise Exception()
    # In tasks.py
    from celery import shared_task
    from . import function
    @shared_task
    def add2(number):
      return function.add2(number)
    # In settings.py
    CELERY_BEAT_SCHEDULE = {
        'test_tasks': {
            'task': 'path.to.task.add2,
            'schedule': crontab(hour=0, minute=0)
        }
    }
I mention that tasks.py is not imported by any other module. It seems to us
that when discovering tasks Celery will be the only one trying to import it
from a string, so we canâ€™t see the issue happening unless we manually try to
import it ; that is actually how we discovered our issue.
Cheers,  
Adrien Czerny