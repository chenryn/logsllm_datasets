### Requisitioning, Approving, and Order Fulfillment
The process involves requisitioning, approving, placing orders, tracking fulfillment, and making payments. 

### Roles and Responsibilities
- **Purchasers**: Responsible for sourcing and ordering products through a custom browser window or directly from supplier websites. They also manage approvals, reporting, and other procurement-related functions.
- **Suppliers**: Create and manage product information, customer account classes, and pricing. They process and complete orders, and respond to tenders.
- **TRADEZONE**: Acts as a broker between purchasers, suppliers, and their banks. It facilitates all ancillary services associated with e-commerce activities.

### TRADEZONE Application Domains
Purchasers can source and order products through a custom browser window, accessing approved suppliers, or directly through a supplier’s website. The system supports various approval, management, and reporting functions to streamline the procurement process. Suppliers use a cataloging system to create and maintain product information, define different account classes with specific pricing, and process orders through to fulfillment.

### 3.2 TRADEZONE Security Policy
The MAFTIA conceptual model characterizes a security policy in terms of security goals and security rules [2]. Security goals capture high-level security requirements, and any violation of these goals constitutes a security failure. In contrast, rules are lower-level constraints designed to ensure the system is robust against faults. Violations of rules typically correspond to erroneous states where the system is more prone to failure.

#### 3.2.1 Security Goals
The high-level security goals of the TRADEZONE security policy are:
- Purchasers should be correctly charged for goods they receive.
- Suppliers should receive correct payment for goods supplied.
- Suppliers should dispatch goods in a timely fashion once an order has been accepted.
- Purchasers should confirm receipt of goods in a timely fashion.
- Banks should process payment requests and post confirmation signals in a timely fashion.
- The integrity and availability of supplier catalogs should be assured.
- All transactions should remain confidential.

#### 3.2.2 Security Rules
To achieve these security goals, the TRADEZONE application must enforce the following security rules:
- A registered purchaser should have read access to all the catalogs.
- A registered supplier should only have write access to their own catalog.
- All communications should be authenticated and logged by TRADEZONE.
- All messages should be authenticated and encrypted.
- All orders should follow the steps of the TRADEZONE transaction workflow.

#### 3.2.3 Security Failures
A security failure will occur if one of the security goals of the TRADEZONE application is violated. For example:
- A supplier receives payment for which there is no corresponding delivery of goods.
- Goods are delivered, but the supplier does not receive payment.

Such failures could be due to flaws in the formulation or implementation of the security rules, allowing someone to fake order and receipt messages. Alternatively, the failure of an authentication mechanism might allow fake messages to be introduced into the system. Finally, failures could be due to a fault in the architectural assumptions, such as flawed trusted channels or bypassable authorization mechanisms.

### 3.3 TRADEZONE in a MAFTIA Setting
Figure 2 illustrates a possible implementation of the TRADEZONE application using MAFTIA architectural components. It is assumed that TRADEZONE and the banks communicate via secure channels.

**Logical Configuration**:
- Identifies the interactions between components.
- Shows the relationship between single-site purchasers and suppliers, the multi-site Authorisation Service (AS), the multi-site Intrusion Detection System (IDS), and the TRADEZONE service with its transaction and resource managers.

**Physical Configuration**:
- The IDS is composed of IDS sensors, event analyzers, and System Security Officers (SSOs) who administer the system and receive notifications from the IDS.
- Secure channels form a Virtual Private Network (VPN) implemented using standards like IPSec.
- MAFTIA mechanisms enhance the security capabilities of the services provided over the Internet.
- All multi-site services use replication and fault masking to achieve intrusion tolerance.
- The authorisation service uses probabilistic asynchronous Byzantine-agreement protocols and diversity to reduce the chance of a common mode failure.
- The TRADEZONE services are replicated, using the TTCB to construct a tamper-proof trusted channel between the servers.

Each distributed site (host) must be associated with a MAFTIA-issued smartcard containing the security keys needed for secure communication and authorization.

### 3.4 Fault-Tree Analysis
We used fault-tree analysis to develop a representative, although not exhaustive, set of informal attack scenarios to illustrate the difficulties an attacker (Malice) faces when trying to intrude upon the TRADEZONE application. Malice could be either an insider or an outsider, and the MAFTIA conceptual model considers both within the same framework.

**Notation Overview**:
- Different shadings are used to distinguish MAFTIA fault-events from IPSec fault-events and others.
- MAFTIA fault-events correspond to failures of MAFTIA’s intrusion-tolerance capabilities.

### 3.5 Example: Subverting the Authorisation Service
To illustrate our approach, we consider how Malice might subvert the MAFTIA authorisation service. This involves forming acceptable operational requests that appear to come from target sites by inserting or modifying high-level operation requests (with valid vouchers), and having them honored by the TRADEZONE reference monitor.

**Cases Considered**:
- **Authorisation Service Compromised**:
  - Malice modifies the authorisation service’s access-control matrix.
  - Malice forges illegal capabilities.
- **Authorised User Impersonated**:
  - Malice steals the purchaser’s smartcard and obtains its PIN.
  - Malice forges a user’s smartcard.

These cases are illustrated and discussed below. Note that we do not consider the possibility that the authorisation mechanisms on the local host could be bypassed, as this is reasonable given the design of the TRADEZONE server.

**Conspiracy of System Admins**:
- **Authorisation Server Access Control Matrix Modified**:
  - Time-free Byzantine agreement fails.
  - Authorisation servers are compromised.
  - Threshold Crypto is cracked.
  - Malice forges illegal capabilities.
  - Malice gains smartcard and PIN.

**Output Event**:
- The output event occurs if any of the inputs occur (≥1).
- The output event occurs if all of the inputs occur (&).

This analysis helps in understanding the potential vulnerabilities and designing more robust security measures.