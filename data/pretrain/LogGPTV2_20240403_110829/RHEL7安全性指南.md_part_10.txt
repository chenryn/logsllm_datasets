:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_the_Boot_Loader}4.2.5. 引导装载程序的保护 {.title}
:::
::: para
使用密码保护 Linux 引导装载程序的主要原因如下：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    [*防止进入单用户模式*]{.emphasis} ---
    如果攻击者可将系统引导至单用户模式，他们就可以自动成为 root
    ，而不会被提示其输入 root 密码。
    :::
    ::: warning
    ::: admonition_header
    **警告**
    :::
    ::: admonition
    ::: para
    不建议通过编辑 `/etc/sysconfig/init`{.filename} 文件下的 *`SINGLE`*
    参数，来实现禁止用密码访问单用户模式。 攻击者可以通过在 GRUB 2 的
    kernel 命令行指定一个自定义的初始命令（使用 *`init=`*
    参数）来跳过密码。如《[Red Hat Enterprise Linux 7
    系统管理员指南](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html)》所介绍，推荐使用密码保护
    GRUB 2 引导装载程序。
    :::
    :::
    :::
2.  ::: para
    [*禁止访问 GRUB 2 控制台*]{.emphasis} --- 如果机器使用 GRUB 2
    作为其引导装载程序，攻击者可使用 GRUB 2
    编辑器界面来改变其配置，或使用 `cat`{.command} 命令来收集信息。
    :::
3.  ::: para
    [*禁止访问不安全的操作系统*]{.emphasis} ---
    如果是双重引导系统，攻击者可以在启动时选择操作系统，例如 DOS
    ，这就可忽略访问控制和文件权限。
    :::
:::
::: para
Red Hat Enterprise Linux 7 在 Intel 64 和 AMD 64 平台上使用 GRUB 2
引导装载程序。关于 GRUB 2 的详细资料，请参阅《[Red Hat Enterprise 
Linux 7
系统管理员指南](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html)》。
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Disabling_Interactive_Startup}4.2.5.1.  不允许交互式启动 {.title}
:::
::: para
在启动顺序的开头按 [**I**]{.keycap}
键，可允许您交互式启动系统。在交互式启动中，系统会提示您逐一启动每项服务。然而，这可能会导致那些通过物理访问您系统的攻击者禁用安全相关的服务，以及获取访问系统的权限。
:::
::: para
要防止用户交互式启动系统，则须作为 root 用户禁用
`/etc/sysconfig/init`{.filename} 文件下的 *`PROMPT`* 参数：
:::
``` screen
PROMPT=no
```
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_Services}4.3. 安全服务 {.title}
:::
::: para
虽然用户访问管理控制对机构管理员来说是个重要问题，但监控哪些网络处于活跃状态对任何一位管理员以及
Linux 系统操作者来说都更为重要。
:::
::: para
Red Hat
Enterprise Linux 7中的很多服务都类似网络服务器。如果在一个机器上运行网络服务，那么服务器应用程序（亦称为
*daemon*），就会侦听一个或者多个网络端口的连接。这些服务器被视为潜在的攻击手段。
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Available_Network_Services-Risks_To_Services}4.3.1. 服务的风险 {.title}
:::
::: para
网络服务可为 Linux 系统造成很多危险。以下是一些主要问题列表：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [*拒绝服务攻击（DoS）*]{.emphasis} ---
    通过向服务发出大量请求，拒绝服务攻击可让系统无法使用，因为它会尝试记录并回应每个请求。
    :::
-   ::: para
    [*分布的拒绝服务攻击（DDoS）*]{.emphasis} --- 一种 DoS
    攻击类型，可使用多台被入侵的机器（经常是几千台或者更多）对某个服务执行联合攻击，向其发送海量请求并使其无法使用。
    :::
-   ::: para
    [*脚本漏洞攻击*]{.emphasis} ---
    如果某台服务器使用脚本执行服务器端动作，网页服务器通常这样做，那么破解者就可以攻击那些没有正确编写的脚本。这些脚本漏洞攻击导致缓存溢出，或者允许攻击者更改系统中的文件。
    :::
-   ::: para
    [*缓存溢出攻击*]{.emphasis} --- 连接到特权端口为1023
    的服务器必须作为管理用户来运行。如果应用程序有可利用的缓存溢出，那么攻击者就可作为运行该应用程序的用户访问系统。因为有可利用的缓存溢出存在，破解者可使用自动工具来识别有漏洞的系统，并在获得访问后，使用自动工具套件保持其对该系统的访问。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在 Red Hat Enterprise Linux 7 中可使用 *ExecShield*
缓和缓冲溢出漏洞的威胁，这是可执行内存片段和保护技术，由 x86
兼容的唯一或者多处理器内核支持。ExecShield
可通过将虚拟内存分成可执行片段以及不可执行片段降低缓冲溢出的风险。所有尝试执行可执行片段之外程序代码（比如缓存溢出漏洞注入的恶意代码）可触发片段失败并终止。
:::
::: para
Execshield 还支持 *禁止执行*
(``{=html}NX``{=html}) 在 AMD64
平台的技术 *eXecute Disable*
(``{=html}XD``{=html}) 在 Itanium
上的技术以及 [Intel]{.trademark}® 64 系统。这些技术与 Execshield
合作可防止恶意代码在有 4KB
可执行代码单位的虚拟内存的可执行部分运行，降低来自隐藏缓存溢出漏洞的攻击风险。
:::
:::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
要限制通过网络进行攻击，应该将所有不使用的服务关闭。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Available_Network_Services-Identifying_and_Configuring_Services}4.3.2. 识别并配置服务 {.title}
:::
::: para
要提高安全性，默认关闭在 Red Hat Enterprise Linux 7
中安装的大多数服务。但有些是例外：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `cups`{.command} --- Red Hat Enterprise Linux 7 的默认打印服务器。
    :::
-   ::: para
    `cups-lpd`{.command} --- 备用打印服务器。
    :::
-   ::: para
    `xinetd`{.command} --- 控制与一系列下级服务器连接的超级服务器，比如
    `gssftp`{.command} 和 `telnet`{.command} 超级服务器。
    :::
-   ::: para
    `sshd`{.command} --- OpenSSH 服务器，是 Telnet 的安全替代产品。
    :::
:::
::: para
在决定是否要让服务保持运行时，最好根据常识，并避免冒任何风险。例如：如果无法使用打印机时，那就不要让
`cups`{.command} 继续运行。同样也适用于
`portreserv`{.command}。如果您没有挂载 NFSv3 卷或者使用
NIS（`ypbind`{.command} 服务），则应该禁用
`rpcbind`{.command}。检查哪些可用的网络服务可以在开机时启动是不够的。我们推荐还应该检查哪些端口已打开并在侦听。详情请参阅＜[第 4.4.2 节
"验证使用侦听的端口"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Verifying_Which_Ports_Are_Listening){.xref}＞
。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Available_Network_Services-Insecure_Services}4.3.3. 不安全的服务 {.title}
:::
::: para
无疑，任何网络服务都是不安全的。这就是为什么要关闭不使用的服务是如此的重要。我们会常规发现并修补服务漏洞，这些工作对常规更新与网络服务有关的软件包非常重要。详情请参阅＜[第 3 章
*及时更新系统*](#chap-Keeping_Your_System_Up-to-Date.html){.xref}＞。
:::
::: para
某些网络协议本身就比其它协议更不安全。这些协议包含一些服务：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [*以不加密的方式在网络中传输用户名和密码*]{.emphasis} ---
    很多老的协议，比如 Telnet 和
    FTP，它们对认证会话都不加密，应尽量避免使用。
    :::
-   ::: para
    [*以不加密方式传输敏感数据*]{.emphasis} ---
    很多协议在网络间传输数据时不加密。这些协议包括 Telent、FTP、HTTP 和
    SMTP。很多网络文件系统，比如 NFS 和 SMB
    也以不加密的方式在网络间传输信息。用户在使用这些协议时有责任限制要传输的数据类型。
    :::
:::
::: para
本身就不安全的服务示例包括 `rlogin`{.command}、`rsh`{.command}、
`telnet`{.command}、以及`vsftpd`{.command}。
:::
::: para
所有远程登录和 shell 程序 (`rlogin`{.command}、`rsh`{.command}、 以及
`telnet`{.command}) 应避免使用以支持 SSH。详情请参阅〈 [第 4.3.10 节
"保障
SSH"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_SSH){.xref}
〉有关 `sshd`{.command}。
:::
::: para
FTP 并不象远程 shell 那样天生对系统安全有威胁，但需要小心配置并监控 FTP
服务器以免出问题。有关保证 FTP 服务器安全的详情请参阅〈[第 4.3.8 节
"保证 FTP
安全"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_FTP){.xref}〉。
:::
::: para
应小心使用并在防火墙后使用的服务包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `auth`{.command}
    :::
-   ::: para
    `nfs-server`{.command}
    :::
-   ::: para
    `smb`{.command} 以及 `nbm`{.command} (Samba)
    :::
-   ::: para
    `yppasswdd`{.command}
    :::
-   ::: para
    `ypserv`{.command}
    :::
-   ::: para
    `ypxfrd`{.command}
    :::
:::
::: para
有关保证网络服务安全的更多信息，请参阅〈[第 4.4 节
"安全访问网络"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_Network_Access){.xref}〉。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_rpcbind}4.3.4. 保障 rpcbind {.title}
:::
::: para
`rpcbind`{.command} 服务是为 NIS 和 NFS 等 RPC
服务进行动态端口分配的守护进程。它的认证机制比较薄弱，并可以为其控制的服务分配大范围的端口。因此很难保证其安全。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
因为 NFSv4 不再需要 rpcbind ，所以保障 `rpcbind`{.command} 安全只影响
NFSv2 和 NFSv3 的执行。如果您要运行 NFSv2 或者 NFSv3
服务器，就需要`rpcbind`{.command}，且在以下章节会运用到 rpcbind 。
:::
:::
:::
::: para
如果运行 RPC 服务，请遵守以下基本规则。
:::
::: section
::: titlepage