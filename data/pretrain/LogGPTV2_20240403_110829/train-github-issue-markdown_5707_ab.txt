1.0.18 h36c2ea0_1 conda-forge libssh2 1.9.0 hab1572f_5 conda-forge libstdcxx-
ng 9.3.0 h2ae2ef3_17 conda-forge libtiff 4.2.0 hdc55705_0 conda-forge libuuid
2.32.1 h7f98852_1000 conda-forge libwebp-base 1.1.0 h36c2ea0_3 conda-forge
libxcb 1.13 h14c3975_1002 conda-forge libxkbcommon 0.10.0 he1b5a44_0 conda-
forge libxml2 2.9.10 hee79883_0 conda-forge libxslt 1.1.33 h31b3aaa_0 conda-
forge lz4-c 1.9.3 h9c3ff4c_0 conda-forge markupsafe 1.1.1 py37hb5d75c8_2
conda-forge matplotlib 2.2.2 pypi_0 pypi mccabe 0.6.1 py_1 conda-forge mistune
0.8.4 py37h4abf009_1002 conda-forge mono 5.14.0.177 he1b5a44_1001 conda-forge
msrest 0.6.19 pypi_0 pypi mu-editor 1.0.3 pypi_0 pypi mypy_extensions 0.4.3
py37h89c1867_2 conda-forge nbclient 0.5.1 py_0 conda-forge nbconvert 6.0.7
py37h89c1867_3 conda-forge nbformat 5.0.8 py_0 conda-forge ncurses 6.2
h58526e2_4 conda-forge nest-asyncio 1.4.3 pyhd8ed1ab_0 conda-forge notebook
6.1.6 py37h89c1867_0 conda-forge nspr 4.29 h9c3ff4c_1 conda-forge nss 3.59
h2c00c37_0 conda-forge nudatus 0.0.4 pypi_0 pypi numpy 1.19.4 pypi_0 pypi
oauthlib 3.1.0 pypi_0 pypi occt 7.4.0 h9121d39_3 conda-forge olefile 0.46
pyh9f0ad1d_1 conda-forge opencascade 7.4.0 h6bb024c_5 dlr-sc openssl 1.1.1i
h7f98852_0 conda-forge owslib 0.21.0 pyhd8ed1ab_0 conda-forge packaging 20.8
pyhd3deb0d_0 conda-forge pandoc 2.11.3.2 h7f98852_0 conda-forge pandocfilters
1.4.2 py_1 conda-forge parso 0.7.1 pyh9f0ad1d_0 conda-forge pathspec 0.8.1
pyhd3deb0d_0 conda-forge pcre 8.44 he1b5a44_0 conda-forge pexpect 4.8.0
pyh9f0ad1d_2 conda-forge pgzero 1.2 pypi_0 pypi pickleshare 0.7.5 py_1003
conda-forge pigpio 1.78 pypi_0 pypi pillow 8.1.0 py37he6b4880_0 conda-forge
pip 20.3.3 pyhd8ed1ab_0 conda-forge pluggy 0.13.1 py37he5f6b98_3 conda-forge
proj 7.2.0 h8b9fe22_0 conda-forge prometheus_client 0.9.0 pyhd3deb0d_0 conda-
forge prompt-toolkit 3.0.8 pyha770c72_0 conda-forge prompt_toolkit 3.0.8
hd8ed1ab_0 conda-forge pthread-stubs 0.4 h36c2ea0_1001 conda-forge ptyprocess
0.7.0 pyhd3deb0d_0 conda-forge punycodes 1.0.1 pypi_0 pypi pycodestyle 2.4.0
pypi_0 pypi pycparser 2.20 pyh9f0ad1d_2 conda-forge pydocstyle 5.1.1 py_0
conda-forge pyflakes 2.0.0 pypi_0 pypi pygame 1.9.6 pypi_0 pypi pygments 2.7.3
pyhd8ed1ab_0 conda-forge pylint 2.6.0 py37hc8dfbb8_1 conda-forge pyls 0.1.6
pypi_0 pypi pyopenssl 20.0.1 pyhd8ed1ab_0 conda-forge pyparsing 2.4.7
pyh9f0ad1d_0 conda-forge pyproj 3.0.0.post1 py37hf874b97_0 conda-forge pyqt5
5.14.1 pypi_0 pypi pyqt5-sip 12.8.1 pypi_0 pypi pyqtchart 5.14.0 pypi_0 pypi
pyqtwebengine 5.12.1 pypi_0 pypi pyrsistent 0.17.3 py37h4abf009_1 conda-forge
pyserial 3.4 pypi_0 pypi pyside2 5.13.2 py37hbee1fde_2 conda-forge pysocks
1.7.1 py37he5f6b98_2 conda-forge python 3.7.4 h265db76_1 python-dateutil 2.8.1
py_0 conda-forge python-jsonrpc-server 0.4.0 pyh9f0ad1d_0 conda-forge python-
language-server 0.36.2 pyhd8ed1ab_0 conda-forge python_abi 3.7 1_cp37m conda-
forge pythonnet 2.4.0 py37haf93ef1_1 conda-forge pythonocc-core 7.4.1
py37h2bc3f7f_0 dlr-sc pytz 2020.5 pyhd8ed1ab_0 conda-forge pyyaml 5.3.1
py37hb5d75c8_1 conda-forge pyzmq 20.0.0 py37h5a562af_1 conda-forge qscintilla
2.11.4 pypi_0 pypi qt 5.12.5 hd8c4c69_1 conda-forge qtconsole 4.3.1 pypi_0
pypi qtpy 1.9.0 py_0 conda-forge readline 7.0 hf8c457e_1001 conda-forge regex
2020.11.13 py37h5e8e339_0 conda-forge reportlab 3.5.59 py37h69800bb_0 conda-
forge requests 2.25.1 pyhd3deb0d_0 conda-forge requests-oauthlib 1.3.0 pypi_0
pypi rope 0.18.0 pyh9f0ad1d_0 conda-forge semver 2.13.0 pypi_0 pypi send2trash
1.5.0 py_0 conda-forge setuptools 49.6.0 py37he5f6b98_2 conda-forge six 1.15.0
pyh9f0ad1d_0 conda-forge snowballstemmer 2.0.0 py_0 conda-forge sqlalchemy
1.3.22 py37h5e8e339_1 conda-forge sqlite 3.33.0 h62c20be_0 sqlparse 0.4.1
pyh9f0ad1d_0 conda-forge tbb 2020.2 h4bd325d_2 conda-forge terminado 0.9.1
py37h89c1867_1 conda-forge testpath 0.4.4 py_0 conda-forge tinycss2 1.1.0
pypi_0 pypi tk 8.6.10 h21135ba_1 conda-forge toml 0.10.2 pyhd8ed1ab_0 conda-
forge tornado 6.1 py37h4abf009_0 conda-forge traitlets 5.0.5 py_0 conda-forge
typed-ast 1.4.2 py37h5e8e339_0 conda-forge typing_extensions 3.7.4.3 py_0
conda-forge ujson 4.0.1 py37h3340039_1 conda-forge urllib3 1.26.2 pyhd8ed1ab_0
conda-forge uvicorn 0.13.3 pypi_0 pypi vine 5.0.0 pyhd8ed1ab_1 conda-forge
wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge webencodings 0.5.1 py_1 conda-forge
wheel 0.36.2 pyhd3deb0d_0 conda-forge widgetsnbextension 3.5.1 py37h89c1867_4
conda-forge wrapt 1.11.2 py37h8f50634_1 conda-forge xorg-fixesproto 5.0
h14c3975_1002 conda-forge xorg-kbproto 1.0.7 h14c3975_1002 conda-forge xorg-
libice 1.0.10 h516909a_0 conda-forge xorg-libsm 1.2.3 h84519dc_1000 conda-
forge xorg-libx11 1.6.12 h516909a_0 conda-forge xorg-libxau 1.0.9 h14c3975_0
conda-forge xorg-libxdmcp 1.1.3 h516909a_0 conda-forge xorg-libxext 1.3.4
h516909a_0 conda-forge xorg-libxfixes 5.0.3 h516909a_1004 conda-forge xorg-
libxmu 1.1.3 h516909a_0 conda-forge xorg-libxrender 0.9.10 h516909a_1002
conda-forge xorg-libxt 1.1.5 h516909a_1003 conda-forge xorg-renderproto 0.11.1
h14c3975_1002 conda-forge xorg-xextproto 7.3.0 h14c3975_1002 conda-forge xorg-
xproto 7.0.31 h7f98852_1007 conda-forge xz 5.2.5 h516909a_1 conda-forge yaml
0.2.5 h516909a_0 conda-forge yapf 0.30.0 pyh9f0ad1d_0 conda-forge zeromq 4.3.3
h58526e2_3 conda-forge zipp 3.4.0 alias xclip="xclip -selection c" py_0 conda-
forge zlib 1.2.11 h516909a_1010 conda-forge zstd 1.4.8 ha95c52a_1 conda-forge
## Minimally Reproducible Test Case
I am working on a program that needs to use another dept.'s dotnet core dll's
and it works swimmingly when executed normally.  
For example, considering this code:
tasks.py:
    import os
    import sys
    sys.path.append("./dll_lib")
    import clr
    clr.AddReference("System.IO")
    import System.IO
    from celery import Celery
    app = Celery('Test', broker='amqp://guest:guest@localhost:5672//', backend="rpc://")
    @app.task
    def test(json_file):
        json_content = System.IO.File.ReadAllText(json_file)
        return 1
start.sh:
    #!/bin/bash
    CELERY_ALWAYS_EAGER=True
    CELERYD_MAX_TASKS_PER_CHILD=1
    CELERYD_CONCURRENCY=1
    CELERYD_PREFETCH_MULTIPLIER=1
    CELERY_RESULT_BACKEND="rpc://"
    CELERY_RESULT_PERSISTENT=False
    celery -A tasks worker --loglevel=INFO --max-tasks-per-child=1
When I test this task it runs fine as a standalone function.  
But this problem is nebulous, because I can issue a task with the path to a
small json (<1mb) and it succeeds:
    $ ipython -i
    Python 3.7.4 (default, Aug 13 2019, 20:35:49)
    Type 'copyright', 'credits' or 'license' for more information
    IPython 7.19.0 -- An enhanced Interactive Python. Type '?' for help.
    In [1]: import tasks
    In [2]: res = tasks.test.delay("/path/small.json")
    In [3]: res.ready()
    Out[3]: True
But when I do this with the path to a bigger json (~7mb), it stalls
indefinitely:
    In [4]: res_big = tasks.test.delay("/path/bigger.json")
    In [5]: res_big.ready()
    Out[5]: False
Does anybody have an idea what can be related to this issue ? It looks
connected to memory used.
NOTE:  
This problem is not IO related, as I have tested it by reading a json as a
string in the python way and using Newtonsoft.Json.dll to deserialize it. This
test behaves along the similiarly with the same files, works with the small
json, stalls on the bigger one.
# Expected Behavior
I expect a task to succeed independent of the size of the supplied json.
# Actual Behavior
Sizeable (<1 mB) json's succeed, but bigger (~ 7 mB) json stall; the task is
received, but never succeeds.