When using Google App Engine to fetch feed URLs, you may encounter 301 redirects. To get the final URL that returns the result, you can handle the redirects manually. Hereâ€™s how you can do it:

1. **Disable Automatic Redirects**: When making the HTTP request, set `follow_redirects=False` to prevent the client from automatically following redirects.

2. **Check for Redirects**: After fetching the URL, check the response status code. If it is a redirect (301 or 302), extract the `Location` header from the response, which contains the new URL.

3. **Fetch the New URL**: Use the new URL to make another fetch request. Repeat this process until you receive a non-redirect status code.

4. **Avoid Infinite Loops**: Implement a sanity check to limit the number of redirects (e.g., a maximum of 5 redirects) to avoid potential infinite redirect loops.

Here is a sample implementation in Python using the `requests` library, which can be adapted for Google App Engine's `urlfetch`:

```python
import requests

def get_final_url(url, max_redirects=5):
    for _ in range(max_redirects):
        response = requests.get(url, allow_redirects=False)
        if response.status_code in (301, 302):
            url = response.headers['Location']
        else:
            break
    return url

# Example usage
initial_url = "http://example.com/redirect"
final_url = get_final_url(initial_url)
print(f"Final URL: {final_url}")
```

For Google App Engine, you can use the `urlfetch` module similarly:

```python
from google.appengine.api import urlfetch

def get_final_url(url, max_redirects=5):
    for _ in range(max_redirects):
        response = urlfetch.fetch(url, follow_redirects=False)
        if response.status_code in (301, 302):
            url = response.headers['Location']
        else:
            break
    return url

# Example usage
initial_url = "http://example.com/redirect"
final_url = get_final_url(initial_url)
print(f"Final URL: {final_url}")
```

This approach ensures that you can retrieve the final URL after handling all redirects, and it includes a safety mechanism to prevent infinite loops.