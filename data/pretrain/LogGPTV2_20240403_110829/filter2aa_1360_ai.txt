blocking of specific scripts globally throughout the organization with a custom version of uBlock Origin.
• 
sudo apt install -y curl (Installs Curl to Linux)
• 
cd ~/Desktop (Switches to the Desktop path)
• 
curl -u osint9:bookl43wt -0 https://inteltechniques.com/ 
osintbook9/ff-template.zip (Downloads file)
• 
unzip ff-template.zip -d -/.mozilla/firefox/ (Extracts the file)
• 
cd ~/.mozilla/firefox/ff-template/ (Switches to the Firefox path)
• 
cp -R * ~/.mozilla/firefox/* .default-release (Copies data)
Windows & Mac: While Terminal commands are possible, and will be used within the Mac and Windows 
OSINT machine chapter, I find it easier to copy the profile based on the official tutorial presented within the 
previous page. You could also replicate these steps within Linux if you experienced any difficulty with the 
previous steps. Conduct the following.
Chrome (google.com/chrome)
\X'eb Browsers
39
Privacy: Beside the content settings button is a button labeled "Clear browsing data". This button will open a 
dialogue that allows you to clear any or all of the data stored during your sessions. You may erase information 
for a period of time ranging from the last hour to "the beginning of time". You may wish to use this function 
to clear all of your browsing data daily.
Passwords and forms: I recommend disabling these features by unchecking the boxes "Enable Autofill to fill 
out web forms in a single click" and "Offer to save your web passwords". If you have stored form-fill 
information or passwords in Chrome, I recommend removing any data before conducting investigations.
• 
Open Firefox and click the menu button (three horizontal lines), click "Help", and then select 
"Troubleshooting Information". The Troubleshooting Information tab will open.
• 
Under the "Application Basics section, click on Open (or Show) Folder (or Director}’). A window with 
your profile files will open. Close Firefox, but leave this window open.
• 
Paste the content of the new folder on your removable drive into this folder. Overwrite any files when 
prompted. Restart Firefox.
When you re-open Firefox, you should now see all the extensions installed and configured within the menu. All 
privacy and security settings should be applied and you are ready to begin your usage. If the extensions are 
missing, close Firefox and re-open. As a final reminder, these actions overwrite any existing bookmarks, 
extensions, settings, and other configurations. This tutorial is always preferred within a new instance of Firefox, 
such as your new Ubuntu VM.
Chrome is an excellent browser that is known for being very fast and responsive. Chrome is also very secure by 
nature, but compromises privacy since Google receives a lot of data about your internet usage. Both Firefox and 
Chrome "sandbox" each tab. Sandboxing restricts the content in that tab to that tab only, preventing it from 
"touching" other tabs in the browser, or the computer's hardware. This is a very important feature in preventing 
malware from being installed when you visit a malicious website.
While I always prefer Firefox as my browser for investigations and daily usage, Chrome is my browser used 
during live training events. This is due to stability when loading dozens of tabs, and your system should have a 
lot of RAM if you want to take advantage of Chrome's power. For investigative purposes, Chrome can use 
several of the add-ons previously mentioned for Firefox. I highly recommend uBlock Origin as discussed 
previously on any browser that you use, including Firefox, Chrome, Safari, and Opera. The only time that 1 use 
Chrome during an investigation is when I am forced because of a Chrome-specific utility. Before discussing any 
investigative resources, I suggest you harden your Chrome security. Enter the Settings menu and consider the 
following changes.
1 offer a final note about Chrome. I believe it is very invasive into your usage and investigations. If you are 
concerned about the privacy issues surrounding Google's capture of internet traffic occurring within Chrome, 
consider switching to the Brave browser. It is based on Chrome, but has eliminated most of the intrusive 
behavior of Chrome. Of all the privacy-related versions of Chrome, 1 believe Brave has the best execution. If 
you do not need Chrome, and can complete all of your investigations within Firefox, I believe you will possess 
more privacy.
Chrome Extensions: To install add-ons in Chrome, navigate to the settings menu. Click "Extensions" on the 
upper left side of the Chrome interface. You will be presented with all the add-ons that are currently installed in 
Chrome. I recommend uninstalling any add-ons that you did not personally install or research for 
trustworthiness. Furthermore, most extensions previously explained for Firefox can be installed in the same 
manner in Chrome.
Tor Browser (torproject.org)
I igure 3.18: A Tor IP address and location (top) and actual data (bottom).
I 209.58.129.99 [Hide this IP with VPN] 
0X1GS2& j San Jose, California (US) (Details]
209.58.129.99, 198.143.34.33
I 216.239.90.19 [Hide this IP with VPN]
-■-Tm— ----------~4
iPiSEuEffi ; Montreal. Quebec (CA) [Details]
| 216 239.90 19 198.143.60 25
For Windows and Mac, die Tor bundle is available for free from the site above and requires minimal default 
installation. Installation widiin Linux is discussed in the next chapter. Upon launching, die first task that Tor 
Wil complete is to create a connection to a Tor server. This connects you to a server, usually in another country, 
and routes all ofyour internet traffic through that server. After the connection is successful,' it will load a custom 
version ot the Firefox browser. Now, every website that you visit through this browser will assume you are 
connecting dirough this new IP address instead of vour own. This provides a layer of privacy to stay hidden 
from a suspect. 
' 
'
This may be overkill for most investigations. If you are only searching and monitoring common services such 
as Facebook Twitter, or YouTube, this service is not needed. If you are visiting personal websites and blogs of 
a tech savvy hacker, you should consider Tor. When using Tor, vou may notice a drastic decrease in the speed 
ot your internet This is normal and unavoidable. This often improves 'the longer you are connected. To stop 
te service, simply close the browser. This will disconnect the Tor network and stop all sendees. Figure 3.18 
spiays the II address assigned to me through the Tor Browser (top) and a browser not using Tor (bottom), 
any activity conducted through the Tor browser is not associated with my real internet connection and appears 
to be originating in Canada.
40 Chapter 3
Tor is an acronym for The Onion Router. Basically, it allows you to mask your IP address and appear to be 
browsing die internet from a false location. Normally, when you connect to the internet and browse to a website, 
diat website can identify the IP address that was assigned to you from your internet sendee provider. This can 
often identify the city and state that you are in and possibly the business organization where you are currently 
located. In some instances, it can identify the building you arc in if you are using public wireless internet access. 
The owner of die website can dien analyze this information which may jeopardize vour investigation. Tin's is 
one of the many reasons diat 1 recommend the uBlock Origin add-on for Firefox which was explained earlier. 
uBlock Ongin will block most of die analytic code within websites that monitors your information, but it will 
not stop everything. Occasionally, you may want to change your IP address to make vou appear to be someone 
else in a different country. This is where Tor excels.
Bookmarklets
XX’cb Browsers
41
javascript:(functionQ%7Bvar html %3D documenLdocumentElement.inncrHTML%3Bvar subhtml %3D
html.split("'userlD"%3A')%5Bl%5Do/o3Bvar output %3D
subhtml.splitf%2C'")%5B0%5D%3Balert(output)%7D)0
Several editions prior to this version, I presented numerous bookmarklets for use with Facebook. They slowly 
lost value as Facebook constandy changed their code. Today, many bookmarklets can add features to the various 
websites we visit. These short lines of code do not open any specific web pages. Instead, they execute commands 
within the website you are currently viewing. They are stored as bookmarks within any browser, but never 
navigate away from the current page. Let's conduct a demonstration and then explain the usage of each option. 
In Chapter Ten, I explain the importance of obtaining a Facebook user's ID number. Searching through the 
source code displays this identifier, but pushing a button is easier. The following code could be added as a 
bookmarklet within your browser to display a popup notice of the user's Facebook ID number.
Notes: Opens a blank page which can be used to type or paste notes about the current website. This data is 
stored within your local storage and is persistent. If you open a new website and click this option, the notes page 
will be blank. If you return to the previous page which contained notes, clicking this button retrieves those notes 
pertinent to that URL. This allows you to keep custom notes throughout your entire investigation about each 
site independendy. Rebuilding your VM or Firefox profile removes all note data.
After saving this code as a bookmark and loading "zuck’s" Facebook profile, I launched the bookmark and 
received a popup displaying "4". I now know his user ID is 4, which can be used for the methods explained 
later. I prefer to save all bookmarklets within the toolbar of my browser for easy access. The Firefox profile 
discussed previously already has them all configured for usage. Simply click the "Bookmarklets" toolbar shortcut 
and choose the most appropriate option for the page you are viewing. Below is a summary' of every' option.
It should be noted that I did not create all of these. The code presented here has been floating around several 
OSINT websites for many years. As an example, the "ModifiedDate" code was originally released in the Third 
Edition of this book, but numerous OSINT practitioners now claim credit for it on their own pages. While 1 
cannot determine the original source of each entry' here, I thank those who help make these possible.
FacebookID: XXfliile on any' Facebook profile, this option displays the Facebook User ID.
FacebookGroupID: While on any Facebook group page, this option displays the Facebook Group ID. 
FacebookExpand: Attempts to expand all comments on a profile. May be slow and could crash on large pages! 
FacebookScroll: Loads and scrolls a Facebook feed before capture of a page.
TwitterScroll: Loads and scrolls a Twitter feed before capture of a page.
InstagramScrolI: Loads and scrolls an Instagram feed before capture of a page.
PageScroll-Slow: Slowly scrolls through a static website for video capture.
PageScroll-Fast: Faster scroll through a static website for video capture.
PageScroll-Feed: Scrolls through a feed-style (social network) website for video capture.
ModifiedDate: Displays the date and time of modification to a static web page.
Cache-Google: Opens a Google Cache version of the current website.
Cache-Archive: Opens the Archive.org version of the current website.
Images: Opens a new tab with all images from the current website.
Links: Opens a new tab with all URL links from the current website.
WordFrequency: Displays all words on a page sorted by frequency’ to easily digest keywords.
Paywall: Opens a blocked news article within a new tab through Outline.com.
Right-Click: Enables right-click functionality' on sites which block it.
TextSelect: Enables copy-paste functionality on sites which block it.
BugMeNot: Checks BugMeNot for public credentials to any website (explained later).
Tools: Opens your offline search tools on your Linux Desktop (needs modified for Windows/Mac).
42 Chapter 4
Linux Applications
43
Consider this chapter the manual approach in order to understand ever}’ detail of our new virtual machine with 
custom tools. It is designed for those who want to know everything happening behind the scenes. Later, the 
automated installation will allow you to create machines with almost no effort.
Ch a pt e r  f o u r
Lin u x  a ppl ic a t io n s
We can replicate practically ever}’ Windows-only application mentioned in the previous editions while protecting 
our investigation within a secure VM. There will be a learning curve if you are not familiar with Linux, but the 
data obtained during your investigations will be superior to the content retrieved from Windows application 
equivalents. In a later chapter, I offer options to replicate all of our Linux tools within both Windows and Mac 
operating systems.
Once we have our systems ready, then we can dive into various online search techniques. /Ml scripts referenced 
throughout this entire chapter can be downloaded from my website at https://inteltechniques.com/osintbook9. 
When prompted, enter a username of "osint9" and password of "bookl43wt", without the quotes. The next 
chapter automates this entire process which creates a 100% functioning OSINT VM within a few 
minutes. The following page presents a summary of the custom applications which we will create together 
within your VM throughout the next two chapters, including the corresponding icons for each.
Previous editions of this book included a chapter focused on Windows-only software applications beneficial to 
OSINT analysis. I now place the emphasis on Linux for three reasons. First, many of those applications have 
become outdated, or they are no longer maintained, and do not function as originally intended. Second, I want 
to enforce better security within our investigations. As previously stated, I believe we should only conduct 
investigations within secure virtual machines which are free from any contamination of other cases. In almost 
ever}’ way, Linux is safer. Finally, there are simply many more OSINT-related applications natively available for 
Linux than Windows.
Hopefully, you now have a functioning Linux Ubuntu virtual machine and customized browsers. That alone 
provides a very secure environment for your online research. However, possessing customized software 
applications within your VM would greatly enhance your investigations. Ubuntu provides some basic 
applications in the default installation, but I want to take that to the next level. In this chapter, we are going to 
customize your Ubuntu VM with numerous OSINT applications which will automate many investigative tasks.
In Buscador, David and I provided all applications pre-configured for use. This included icons to launch 
programs and scripts to help execute specific queries. As previously stated, we should not rely on third parties 
to create and maintain these VM configurations (even my own public resources). The goal here is to teach you 
how to replicate that work and easily create your own custom VM. If conducting the following tutorials to your 
original VAI, you will only need to take these steps once. Each clone you create will maintain all your hard work.
Some of this chapter may seem complicated at first. I promise everything becomes easier as you practice. I will 
explain the entire manual process of downloading, installing, configuring, and executing each program. 
Furthermore, I will demonstrate how to create and download scripts in order to easily automate your queries 
without the necessity of entering the terminal commands and switches. This will be a crash course in Linux, but 
the lessons learned now will pay off in future usage.
OSINT Tools: Launch the custom OSINT Tools discussed later in this section through Firefox.
Flickr account
email and search through various online accounts to
44 Chapter 4
Q
>
(Si
E
$
□
e
§>
E
Video Utilities Tool: Play, convert, extract, or compress any video, then display all results. Extract 
audio from any media.
fInternet Archive Tool: Enter a URL and retrieve source code and screen captures of archives from 
Internet Archive and display all results as explained in Chapter 27.
Spiderfoot: Launch Spiderfoot through your custom Firefox build in order to conduct full queries, 
as explained in Chapter 27.
Metadata Tool: Analyze metadata stored within media files or submit your own files and remove 
all metadata for safe transmission.
Video Stream Tool: Easily play, save, convert, and archive live and pre-recorded video streams in 
real-time.
Video Download Tool: Download single videos 
comments, and display results.
the IP address of an 
zplained in Chapter 28.
HTTrack: Launch HTTrack’s web service and clone static websites without the need 
and execute through Terminal.
Username/Email Tool: Enter a username or 
discover profiles through various services.
or channels with captions, extract all YouTube
Instagram Tool: Provide an Instagram username and extract all images using Instalooter and 
Instaloader, or full content with Osintgram.
to navigate
fi
Breachcs/Lcaks Tool: Search through breach data, analyze a hash, or enter 
Elasticscarch server to retrieve all data stored within a specific index, as exj
Gallery Tool: Provide a URL of a photo gallery and download all images, such as a 
or Tumblr profile, and display all results, or launch RipMe.
Update Scripts: Update all software including operating system files, Pip programs, and all custom 
applications.
Domain Tool: Execute a search of any domain through Amass, Sublist3r, Photon, theHarvester, 
or Carbon 14 and display all results.
o
Reddit Tool: Enter a Reddit username and extract current and deleted posts, plus archive entire 
subreddits, as explained in Chapter 27.
Metagoofil: Enter a URL and receive any documents located on the domain, extracted metadata 
from the docs, plus a full report of all activity, as explained in Chapter 20.
Eyewitness: Enter a single URL or list of URLS and receive site data and a screen capture of each.
Recon-ng: Launch Recon-ng in order to conduct full queries, as explained in Chapter 27.
Application Installation
VLC Media Player
sudo snap install vic
Let's break down this command, as you will
FFmpeg
Linux Applications
45
This is another set of media tools, but these only work within Terminal. We will need them when we start adding 
utilities to manipulate and download videos. Enter the following into Terminal and press enter after each.
• sudo apt update
• sudo apt install -y ffmpeg
see similar instructions throughout this chapter.
install: This tells Ubuntu to install a specific software application. In this scenario, it instructed Ubuntu to 
install VLC. You may need to confirm installation when prompted by entering "y" for "yes".
After you have executed this command, you should see VLC installed within the "Applications" menu by clicking 
the nine dots icon in the Dock to the left. You can launch the application within this menu and it should be set 
as the default option for opening most downloaded media files.
By default, your Windows and Mac operating systems include media players which allow execution of audio and 
video files. Your default Ubuntu virtual machine may not have this luxury. However, this is easy to correct. VLC 
is an application which can play practically any media files you throw at it. You could find VLC within the 
Ubuntu Software application, but I prefer to manually install it. This also provides our first explanation of 
installation commands in Linux. Within Terminal, type the following command, pressing return after.
apt update: This command updates the Ubuntu lists for upgrades to packages which need upgrading, as well 
as new packages that have just come to the repositories. It basically fetches information about updates from the 
repositories mentioned previously.
sudo: This command executes any following text with elevated privileges. It is similar to running a program in 
Windows or Mac as the administrator. When using this command, you will be required to enter your password. 
Note that passwords entered within Terminal do not appear as you type them, but they are there. Simply press 
enter when finished typing. Any additional sudo commands in the same terminal session should not ask for the 
password again.
Ubuntu possesses a software "store" in which you can point and click through various Linux applications and 
install them with ease. However, I discourage users from this method. Your choices are minimal and there are 
likely better alternatives available. Instead, we will use the Terminal for all of our application installations. If you 
followed the previous tutorials, you may already have the Terminal application in your software Dock within 
your Ubuntu VM created earlier. If not, you can always find the Terminal application within the "Applications" 
area of Ubuntu by clicking the nine dots within the Dock on the left of your screen. Open the Terminal 
application and leave it open while we install some required software. While I encourage readers to replicate this 
chapter manually, typing all of the commands directly, I maintain a file with every step at 
https://intcltechniques.com/osintbook9/linux.txt. If anything should need to be changed, you will find 
updates there. Let's ease into things slowly.
snap: Snappy is a software deployment and package management system developed by Canonical for the Linux 
operating system. The packages, called snaps, are easy to install and update.
added "-
Video Download Tool
• sudo apt install -y python3-pip
• sudo -H pip install youtube_dl
• youtube-dl https://www.youtube.com/watch?v=lLWEXRAnQdO
46 Chapter 4
• 
cd -/Desktop
• 
youtube-dl https://www.youtube.com/watch?v=lLWEXRAnQdO
This may be my most-used utility within my custom Linux OSINT VM. The Python script YouTube-DL is the 
backbone which will help us download bulk videos from YouTube and other sources. This is a Python script, 