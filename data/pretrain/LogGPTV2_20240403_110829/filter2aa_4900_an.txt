但是会根据
.B blanks，空白
和新行符分解为词。
.TP
.B s/\fIold\fP/\fInew\fP/
将事件行中出现的第一个
.I old
替换为
.I new。
任何分隔符都可以用来代替 /，最后一个分隔符是可选的，如果它是事件行的最后一个字符。
.I old
和
.I new
中的分隔符可以用一个反斜杠来引用。如果 & 出现在
.IR new 
中，它将替换为
.IR old。
可以用单个反斜杠来引用 &。如果
.I old
为空，它将设置为最后替换的
.I old，
或者，如果前面没有发生过历史替换，就是
.B !?\fIstring\fR\fB[?]\fR
搜索中的最后一个
.I string。
.TP
.B &
重复上一次替换。
.TP
.B g
使得改变被整个事件行所接受。用于与 `\fB:s\fP' 或 `\fB:&\fP' 结合 
(例如，`\fB:gs/\fIold\fP/\fInew\fP/\fR')。
如果与 `\fB:s\fP' 结合使用，任何分隔符都可以用来代替 /，
最后一个分隔符是可选的，如果它是事件行的最后一个字符。
.PD
.SH "shell 内建命令(SHELL BUILTIN COMMANDS)"
.\" start of bash_builtins
.PP
除非另外说明，这一章介绍的内建命令如果接受
.B \-
引导的选项，那么它也接受
.B \-\-
作为参数，来指示选项的结束
.sp .5
.PD 0
.TP
\fB:\fP [\fIarguments\fP]
.PD
没有效果；这个命令除了扩展
.I arguments
并且作任何指定的重定向之外，不做任何事。
退出时返回0。
.TP
\fB .\| \fP \fIfilename\fP [\fIarguments\fP]
.PD 0
.TP
\fBsource\fP \fIfilename\fP [\fIarguments\fP]
.PD
读取并在当前 shell 环境中执行
.I filename
中的命令，返回
.IR filename
中最后一个命令的返回状态。如果
.I filename
中不包含斜杠 (slash)，系统将在
.SM
.B PATH
中查找包含
.IR filename 
的目录。在
.SM
.B PATH
中搜索的文件不必是可执行的。
如果 \fBbash\fP 不是运行于 \fIposix mode\fP，当
.SM
.BR PATH
中找不到文件时会在当前目录搜索。如果
.B shopt
内建命令的
.B sourcepath
选项被关闭，
.SM
.B PATH
将不会被搜索。如果有任何 \fIarguments\fP ，它们成为
\fIfilename\fP 的位置参数 (positional parameters)，否则
位置参数不发生变化。
返回状态是脚本中最后一个命令退出时的状态。
没有执行命令则返回0，没有找到或不能读取
.I filename
时返回false。
.TP
\fBalias\fP [\fB\-p\fP] [\fIname\fP[=\fIvalue\fP] ...]
\fBAlias\fP 不带参数或者带
.B \-p
参数运行时将在标准输出以这样的格式
\fBalias\fP \fIname\fP=\fIvalue\fP 给出别名列表。
如果有参数，将创建提供了 \fIvalue\fP 的 \fIname\fP 的别名。
\fIvalue\fP 中尾部的空格使得别名被扩展时，下一个词做别名替换。
对于参数列表中的每一个 \fIname\fP，如果 \fIvalue\fP 没有
给出，这个别名的名称和值会被打印出来。
\fBAlias\fP 返回 true 除非 \fIname\fP 没有定义为别名。
.TP
\fBbg\fP [\fIjobspec\fP]
使挂起的程序 \fIjobspec\fP 在后台继续执行，就好像它是用
.BR &
启动的一样。如果没有指定 \fIjobspec\fP，shell 意义上的
\fIcurrent job 当前作业\fP 将被使用。
.B bg
.I jobspec
返回0，除非当前禁止了作业控制，或者在允许作业控制，但
是没有找到 \fIjobspec\fP ，或者它不是在作业控制下启动的时候。
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] [\fB\-lpsvPSV\fP]
.PD 0
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] [\fB\-q\fP \fIfunction\fP] [\fB\-u\fP \fIfunction\fP] [\fB\-r\fP \fIkeyseq\fP]
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fB\-f\fP \fIfilename\fP
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fB\-x\fP \fIkeyseq\fP:\fIshell\-command\fP
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fIkeyseq\fP:\fIfunction\-name\fP
.TP
\fBbind\fP \fIreadline\-command\fP
.PD
显示当前
.B readline
键和功能的，将一个按键序列和一个
.B readline
功能或宏进行关联，或者设置一个
.B readline
变量。每一个在非选项的参数都是一个命令，好像它是在
.IR .inputrc
中出现的一样。但是每个关联或者命令必须作为单独的参数传递；
也就是这样 '"\eC\-x\eC\-r": re\-read\-init\-file'。
如果有参数，它们有如下的意义：
.RS
.PD 0
.TP
.B \-m \fIkeymap\fP
使用
.I keymap
作为随后的关联的keymap。可选的
.I keymap
名称是
\fIemacs, emacs\-standard, emacs\-meta, emacs\-ctlx, vi,
vi\-move, vi\-command\fP，还有
.IR vi\-insert 。
\fIvi\fP 和 \fIvi\-command\fP 等价; \fIemacs\fP 和 \fIemacs\-standard\fP 等价。
.TP
.B \-l
列出所有的 \fBreadline\fP 功能。
.TP
.B \-p
以程序可读的方式显示 \fBreadline\fP 功能名称和关联
.TP
.B \-P
列出当前 \fBreadline\fP 功能名称和关联。
.TP
.B \-v
以程序可读的方式显示 \fBreadline\fP 变量名称和值
.TP
.B \-V
列出当前 \fBreadline\fP 变量和值。
.TP
.B \-s
以程序可读的方式显示 \fBreadline\fP 键序列和对应的宏
.TP
.B \-S
显示 \fBreadline\fP 宏对应的键序列和他们输出的字符串
.TP
.B \-f \fIfilename\fP
从 \fIfilename\fP 中读取键序列
.TP
.B \-q \fIfunction\fP
查询那些键将执行\fIfunction\fP。
.TP
.B \-u \fIfunction\fP
取消所有关联到 \fIfunction\fP 的键。
.TP
.B \-r \fIkeyseq\fP
取消当前任何 \fIkeyseq\fP 的关联。
.TP
.B \-x \fIkeyseq\fP:\fIshell\-command\fP
使 \fIshell\-command\fP 在 \fIkeyseq\fP 按下时被执行。
.PD
.PP
返回值是0，除非给出了一个不能识别的选项或是产生了一个错误。
.RE
.TP
\fBbreak\fP [\fIn\fP]
从一个
.BR for ,
.BR while ,
.BR until ,
或者
.B select
循环退出。
如果指定了 \fIn\fP ，就跳出 \fIn\fP 层循环。
.I n
必须 \(>= 1。如果
.I n
比当前循环层数还要大，将跳出所有循环。
返回值是0，除非执行
.B break 
的时候 shell 不是在执行一个循环。
.TP
\fBbuiltin\fP \fIshell\-builtin\fP [\fIarguments\fP]
执行指定的 shell 内建命令，传递
.IR arguments
，返回命令的返回值。
这在定义了一个和 shell 内建命令同名的函数时很有用，
在那个函数中使用它来执行相应的功能。\fBcd\fP 命令常以这种方式重新定义。
返回状态是 false，如果指定的
.I shell\-builtin
并不是一个 shell 内建命令。
.TP
\fBcd\fP [\fB\-L|-P\fP] [\fIdir\fP]
改变当前路径到 \fIdir\fP。这个变量的默认值是
.SM
.B HOME
目录。环境变量
.SM
.B CDPATH
定义了包含
.IR dir 
的搜索路径。在
.SM
.B CDPATH
中可选的路径名以冒号(:) 分隔。
.SM
.B CDPATH
中的空路径名与当前路径相同，就是 ``\fB.\fP''.  如果
.I 目录名
以斜杠 (/,slash) 起始，那么
.SM
.B CDPATH
不会被使用。
.B \-P
选项是说使用物理路径结构而不是跟随符号链接，(参见
.B set
命令中的
.B \-P
选项);
.B \-L
选项强制跟随符号链接。另外，选项
.B \-
与
.SM
.BR $OLDPWD 
是相同的。
返回值是 true ，如果成功地改变了目录；否则是 false。
.TP
\fBcommand\fP [\fB\-pVv\fP] \fIcommand\fP [\fIarg\fP ...]
运行
.I command
，使用
.I args
作为参数，禁止通常的查找 shell 函数的过程。只有内建命令或者
.SM
.B PATH
中包含的命令可以执行。如果给出
.B \-p
参数，
.I command
的查找是以
.B PATH
的默认值进行的。这样可以保证找到所有的标准工具。如果给出
.B \-V
或者
.B \-v
选项，关于
.I command
的说明将被打印出来。
.B \-v
选项使得表述这个命令的词，或者要执行
.I command
需要执行的文件显示出来；
.B \-V
选项给出更详细的描述。如果给出
.B \-V
或者
.B \-v
选项，退出状态在找到了
.I command
的情况下0，没找到就是1。
如果没有提供选项，并且产生了错误或者
.I command
没有找到，退出状态就是127。否则，
.B command
内建命令的退出状态是
.IR command
的退出状态。
.TP
\fBcompgen\fP [\fIoption\fP] [\fIword\fP]
根据 \fIoption\fP 为 \fIword\fP 产生可能的补全。\fIoption\fP 是
内建命令
.B complete
接受的任何选项，除了 \fB\-p\fP 和 \fB\-r\fP，将匹配结果写到标准输出。
当使用 \fB\-F\fP 或 \fB\-C\fP 选项时，可编程补全功能所设置的多数
shell 变量如果存在，其值将不再有用。
.sp 1
产生的匹配与可编程补全代码根据补全规则加上相同的标志直接产生的结果相同。
如果指定了 \fIword\fP，只有匹配 \fIword\fP 的补全结果将被显示出来。
.sp 1
返回值为真，除非提供了非法的选项，或者没有产生匹配。
.TP
\fBcomplete\fP [\fB\-abcdefgjksuv\fP] [\fB\-o\fP \fIcomp-option\fP] [\fB\-A\fP \fIaction\fP] [\fB\-G\fP \fIglobpat\fP] [\fB\-W\fP \fIwordlist\fP] [\fB\-P\fP \fIprefix\fP] [\fB\-S\fP \fIsuffix\fP]
.br
[\fB\-X\fP \fIfilterpat\fP] [\fB\-F\fP \fIfunction\fP] [\fB\-C\fP \fIcommand\fP] \fIname\fP [\fIname ...\fP]
.PD 0
.TP
\fBcomplete\fP \fB\-pr\fP [\fIname\fP ...]
.PD
指定每个 \fIname\fP 的参数应当如何被补全。如果给出了 \fB\-p\fP 选项，
或者没有选项给出，现有的补全规则将被显示出来，以一种可以重用为输入
的格式显示。\fB\-r\fP 选项将一个针对每个 \fIname\fP 的补全规则删除。
或者，如果没有给出 \fIname\fP，将删除所有补全规则。
.sp 1
尝试词的补全时，应用这些补全规则的过程在上面
\fBProgrammable Completion\fP(可编程补全) 中详述。
.sp 1
其他选项，如果给出的话，具有下列意义。\fB\-G\fP, \fB\-W\fP, 
和 \fB\-X\fP 选项的参数 (如果需要的话，还包括 \fB\-P\fP 和 \fB\-S\fP 
选项) 应当被引用，避免在执行内建命令
.B complete
之前被扩展。
.RS
.PD 0
.TP 8
\fB\-o\fP \fIcomp-option\fP
\fIcomp-option\fP 控制着 compspec 除了简单地产生补全之外的多种行为。
\fIcomp-option\fP 可以是如下之一：
.RS
.TP 8
.B default
使用 readline 的默认文件名补全，如果 compspec 没有得到匹配。
.TP 8
.B dirnames
进行目录名补全，如果 compspec 没有得到匹配。
.TP 8
.B filenames
告诉 readline，compspec 产生了文件名，使它可以进行任何文件名专用的处理
(例如，给目录名加上斜杠或消除尾部空白)。主要用于 shell 函数。
.TP 8
.B nospace
告诉 readline 不要向补全的词在行的最后添加一个空格 (这是默认行为)。
.RE