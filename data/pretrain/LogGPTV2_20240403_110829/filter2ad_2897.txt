# StegoNet: Transforming Deep Neural Networks into Stegomalware

## Authors
- Tao Liu, Lawrence Technological University
- Zihao Liu, Florida International University
- Qi Liu, Lehigh University
- Wujie Wen, Lehigh University
- Wenyao Xu, University at Buffalo
- Ming Li, University of Arizona

## Conference
Annual Computer Security Applications Conference 2020, December 11, 2020

## Agenda
1. **Motivation**
   - Neural Networks and Emerging Security Concerns
2. **Threat Model**
   - Definition and Attack Routine
3. **Design Highlights**
   - Payload Injection in DNN Parameters
   - DNN Logits Trigger
4. **Security Analysis**
5. **Summary**

## Motivation
### The Success of Neural Networks
Neural networks have achieved significant success in various fields, including:
- **Computer Vision**
- **Natural Language Processing**
- **Knowledge Reasoning**
- **Robotics**

### Neural Network-Based Machine Learning Systems
A typical neural network-based machine learning system consists of:
- **Data Input**: Raw data fed into the model
- **Convolution Layers**: Extract features from the input
- **Pooling Layers**: Reduce dimensionality
- **Activation Functions**: Introduce non-linearity
- **Softmax Layer**: Output probabilities for classification
- **Computing Substrate**: Hardware such as CPU, GPU, FPGA, and ASIC

### Security Concerns in Neural Networks
Recent studies have highlighted several security concerns:
- **Adversarial Attacks**: Manipulating inputs to mislead the model
- **Privacy Leakage**: Exposing sensitive information
- **Neural Trojans**: Embedding malicious code within the model

### New Attack Vector: Plug-and-Play DNN Models
- **Machine Learning Model as a Service (MLMaaS)**: Users prefer pre-trained models from platforms like Caffe, TensorFlow, CNTK, Keras, and MXNet.
- **Complexity of DNN Models**: Deeper and larger models provide natural obfuscation, making it easier to hide malicious code.

## Threat Model
- **Untrusted DNN Service Provider**: Creates a malicious DNN model (StegoNet) disguised as a normal DNN service.
- **Non-ML Expert**: Consumes DNN services from third-party providers without understanding the end-to-end process.

## Stego-Net vs. Traditional Stegomalware
- **Stego-Malware**: Hides malicious code in images or other media.
- **Stego-Net**: Hides malicious code in DNN parameters, leveraging the complexity and scalability of deep neural networks.

## Attack Design Constraints
1. **Accuracy and Scalability**
   - Modifying DNN parameters can degrade accuracy.
   - Limited embedding space in compressed DNN models.
2. **Trigger Control and Input Variation**
   - Direct input and output triggers are not feasible due to variations in angle, brightness, noise, etc.
   - High false-positive rates on normal inputs.

## Payload Injection in DNN Parameters
- **LSB Doesn't Work on Small-Scaled DNNs**: Use index permutation and fix values during training.
- **Resilience Training**: Train the model to be resilient to payload injection.
- **Value Mapping and Sign Mapping**: Map payload bits to weight values and signs.

## DNN Logits Trigger
- **Triggering Event**: Use logits (output before softmax) to detect the trigger.
- **Rank Trigger**: Rank the logits to handle input variations.
- **Deployment Lifecycle**: Inactive, linkage trigger, and active states for malicious payloads.

## Attack Exploration
- **Types of Attacks**: Data destruction, downloader, DoS.
- **Physical-World Configuration**: Mal-DNN captures benign input and trigger events from the physical world.

## Attack Evaluation
### Evasiveness
- **Detection Rate**: Compare LSB, resilience training, value mapping, and sign mapping.
- **MetaDefender Report**: Evaluate detection rates using MetaDefender.

### Reliability
- **Injection Reliability**: Measure payload bit-flipping rate after fine-tuning.
- **Trigger Reliability**: Test against variations in angle, brightness, rotation, and noise.

## Summary
- **New Type of Malware**: Stego-Net uses DNN models as a novel payload injection channel.
- **Attack Surfaces**: Plug-and-play DNN models and model complexity.
- **Unique Considerations**: DNN model scalability, complexity, and cyber-physical scenarios.
- **DNN-Oriented Attack Approaches**: Resilience training, value-mapping, sign-mapping, and DNN logits rank-based triggers.
- **Defensive Measures**: Existing antimalware and steganalysis tools are less effective; mitigation techniques need to consider data, algorithms, software, and hardware.

## Q&A

## Mitigation Directions
- **Model Sanitization**: Clean the model parameters and storage.
- **Static and Dynamic Analysis**: Analyze the model and its execution environment.

This optimized version provides a clear and professional structure, ensuring that the content is easy to follow and understand.