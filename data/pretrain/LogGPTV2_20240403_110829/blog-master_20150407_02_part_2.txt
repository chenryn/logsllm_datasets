    4.9 | test2  # 计算位置  
    5 | test2  
    6 | test2  
    7 | test2  
```  
一共10行.  
percent_rank 返回 (rank - 1) / (total rows - 1), rank指当前rank值, rows指当前组的记录数  
cume_dist 返回(number of rows preceding or peer with current row) / (total rows), 截至当前记录等级一共有多少行除以本组的总行数.  
所以4.9对应的percent_rank 和 cume_dist 分别为 :   
```  
percent_rank = (rank - 1) / (total rows - 1) = (7-1)/(10-1) = 0.666666666666667   
cume_dist = (7)/10 = 0.7  
```  
例子2 :   
```  
postgres=# select info,rank(5) within group (order by id),dense_rank(5) within group (order by id),percent_rank(5) within group (order by id),cume_dist(5) within group (order by id) from test group by info;  
 info  | rank | dense_rank |   percent_rank    |     cume_dist       
-------+------+------------+-------------------+-------------------  
 test1 |    2 |          2 |                 1 |                 1  
 test2 |    7 |          4 | 0.666666666666667 |               0.8  
 test3 |    1 |          1 |                 0 | 0.333333333333333  
 test4 |    1 |          1 |                 0 |               0.5  
(4 rows)  
```  
插入计算值5后, 数据变成  
```  
    2 | test2  
    2 | test2  
    2 | test2  
    2 | test2  
    3 | test2  
    4 | test2  
    5 | test2  # 计算位置, 即参数值  
    5 | test2  
    6 | test2  
    7 | test2  
```  
依旧10行. 但是截至当前记录等级一共有多少行? 注意是8了.  
```  
percent_rank = (rank - 1) / (total rows - 1) = (7-1)/(10-1) = 0.666666666666667   
cume_dist = (8)/10 = 0.8  
```  
例子3 :   
```  
postgres=# select info,rank(5.1) within group (order by id),dense_rank(5.1) within group (order by id),percent_rank(5.1) within group (order by id),cume_dist(5.1) within group (order by id) from test group by info;  
 info  | rank | dense_rank |   percent_rank    |     cume_dist       
-------+------+------------+-------------------+-------------------  
 test1 |    2 |          2 |                 1 |                 1  
 test2 |    8 |          5 | 0.777777777777778 |               0.8  
 test3 |    1 |          1 |                 0 | 0.333333333333333  
 test4 |    1 |          1 |                 0 |               0.5  
(4 rows)  
```  
插入计算值5.1后, 数据变成 :   
```  
    2 | test2  
    2 | test2  
    2 | test2  
    2 | test2  
    3 | test2  
    4 | test2  
    5 | test2  
    5.1 | test2  # 计算位置, 即参数值  
    6 | test2  
    7 | test2  
```  
结果自己验证吧.  
例子4 :   
```  
postgres=# select info,rank(5) within group (order by id desc),dense_rank(5) within group (order by id desc),percent_rank(5) within group (order by id desc),cume_dist(5) within group (order by id desc) from test group by info;  
 info  | rank | dense_rank |   percent_rank    | cume_dist   
-------+------+------------+-------------------+-----------  
 test1 |    1 |          1 |                 0 |       0.5  
 test2 |    3 |          3 | 0.222222222222222 |       0.4  
 test3 |    3 |          3 |                 1 |         1  
 test4 |    2 |          2 |                 1 |         1  
(4 rows)  
```  
插入计算值5后, 数据变成 :   
```  
    7 | test2  
    6 | test2  
    5 | test2  # 注意, 这才是计算位置, 即插入位置.  
    5 | test2  
    4 | test2  
    3 | test2  
    2 | test2  
    2 | test2  
    2 | test2  
    2 | test2  
```  
结果自己验证吧.  
## 参考  
1\. [《PostgreSQL aggregate function 1 : General-Purpose Aggregate Functions》](../201503/20150302_01.md)  
2\. [《PostgreSQL aggregate function 2 : Aggregate Functions for Statistics》](../201503/20150303_03.md)  
3\. [《PostgreSQL aggregate function 3 : Aggregate Functions for Ordered-Set》](../201504/20150407_01.md)  
4\. http://www.postgresql.org/docs/devel/static/functions-window.html  
5\. http://www.postgresql.org/docs/devel/static/functions-aggregate.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")