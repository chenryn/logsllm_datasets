非破坏性版本简单地复制最初的向量，然后将它传给破坏性版本。
(defun nshuffle-vector (vector)
Agriculural and Medical Research（Oliver& Boyd,1938）一书的共同作者。根据Knuth的说法，他们首次公开发表
(nshuffle-vector (copy-seq vector)))
(defun shuffle-vector (vector)
了对该算法的描述。
vector)
一组工具函数
(let* ((length (min (file-length in) max-chars))
do (unless (= idx other)
(text (make-string length))
other = (random (1+ 
(rotatef (aref vector idx) (aref vector other))))
:classification classification
:type type
:file file
(list
:score score)})))
(classify
(start-of-file file *max-chars*))
(length vector)) to 1
www.TopSage.com
idx))
23.8
一组工具函数
265
---
## Page 283
以从为每种结果类型定义谓词函数开始。
对转换成单一符号。
keYS来告诉DESTRUCTURING-BIND忽略任何其他的键值对），然后使用嵌套的ECASE将不同的配
BIND从一个单独的结果列表中取出：type和:classification元素（使用&allow-other-
假阳性的、假阴性的、错过的有用消息或错过的垃圾邮件消息。你可以使用DESTRUCTURING-
性代码的第一步是编写一个函数，该函数可以返回一个符号来指明一个给定结果究竟是正确的、
这个plist含有该文件的名字、文件的实际类型、分类以及由classify所返回的评分。编写分析
返回了由test-from-corpus所返回的列表，其中每个元素是一个代表了文件分类结果的plist。
23.9
266
 现在编写一些代码来分析由test-classifier生成的结果。回顾一下，test-classifier
(defun false-positive-p (result)
有了这个函数，你就可以方便地以多种方式切分test-classifier的结果了。例如，你可
MISSED-HAM
SPAM> (result-type '(:FILE #p"foo" :type ham :classification unsure :score 0))
FALSE-POSITIVE
CORRECT
SPAM>
SPAM> (result-type '(:FILE #p"foo"
你可以在REPL中测试这个函数。
(defun result-type (result)
MISSED-SPAM
FALSE-NEGATIVE
SPAM>
((a4tatsod-astey: (atnsa1 ad-atnsar) [ba) 
(destructuring-bind (&key type classification &allow-other-keys) result
分析结果
(ecase type 
(result-type '(:FILE #p"foo" :type spam :classification spam :score 0))
(if ( (analyze-results *results*)
当给该函数传递一个由test-classifier生成的结果列表时，它将给出下面的输出:
(defun analyze-results (results)
:FILE #p"ham/3427"
(:FILE #p"ham/2746"
((:FILE #p"ham/5349"
SPAM> (remove-if-not #'false-positive-p *results*)
(defun correct-p (result)
(defun missed-spam-p (result)
(defun missed-ham-p (result)
(defun
（:FILE
(:FILE
(:FILE #p"ham/7785"
(eql (result-type result) 'correct))
(eql
(eql
((ae6au-aseg. (ansa ad-asat) a) 
{let*
(loop with total =
(dolist
{incf
{incf {
(result-type result) 'missed-spam))
1 (result-type result) 'missed-ham))
 false-negative-p (result)
（(keys'(total
#p"ham/10581"
#p"ham/1728"
(counts
for (label
(cdr (assoc (result-type item) counts))))
(cdr (assoc 'total counts)))
{item
false-negative missed-ham missed-spam))
results)
3761
label count 
:TYPE
:TYPE
:TYPE
:TYPE
:TYPE HAM :CLASSIFICATION SPAM :SCORE 0.9999924537959615d0))
:TYPE HAM
(cdr (assoc 
 correct false-positive
40
6
6
必
：100.00%
HAM
HAM
HAM
HAM
98.09%
1.06%
0.24%
0.11%
in counts
:CLASSIFICATION
:CLASSIFICATION SPAM :SCORE
:CLASSIFICATION SPAM
:CLASSIFICATION SPAM
www.TopSage.com
(* 100(/ count total})))))
'total counts))
~6,2f名~号"
SPAM
SPAM :SCORE
:SCORE
:SCORE
:SCORE
0.9542788587998488d0)
0.9833753501352983d0)
0.6286468956619795a0)
0.9999983107355541d0)
23.9
）分析结果
267
---
## Page 285
写一个解析二进制文件的通用库开始。
因为垃圾邮件发送者经常使用这些编码来扰乱它们的消息。
词解出不同类型的特征。你还可以解码包括Base64和QuotedPrintable在内的多种类型的消息编码，
地，你可以使分词器更聪明地处理电子邮件的内部结构，即可以为出现在消息体和消息头中的单
26章将谈及如何编写Web接口，第29章将为不同的应用构建Web接口。
滤器沟通有关错误分类的信息。只要你把它设置成一个服务器，你就可以提供一个Web接口。第
邮件客户端过滤器可以理解的信头，要么直接把它放在一边。当然你可能还需要一种方式来与过
邮件客户端从邮件服务器上获取邮件所使用的协议，这样一个代理将从你的实际POP3服务器中
何电子邮件客户端相集成的思路是，编写一点儿代码来使它成为一个POP3代理。这是多数电子
你需要找到一种方式来将它集成到你正常的电子邮件基础服务框架中。一种使它方便地与几乎任
23.10
为你显示这点：
268
但是我将把这些改进留给你。现在你已准备好继续前进来构建一个流式MP3服务器，先从编
或者你可能想要改进基本分类一
很明显，你可以用这些代码做更多的事。为了将它变成一个真正的垃圾邮件过滤应用程序
(defun sorted-interesting (features)
(defun show-summary (file text classification score)
(defun explain-classification (file)
(defun show-feature(feature)
(sort (remove-if #'untrained-p features) #<:key #'bayesian-spam-probability))
(let*((text(start-of-file file*max-chars*))
(with-slots (word ham-count spam-count) feature
(format t“Classified as ~a with score of ~,5f~%"classification score))
format
(format
接下来的工作
word ham-count spam-count (bayesian-spam-probability feature))))
(dolist (feature (sorted-interesting features))
(show-summary file
(show-featurefeature))))
第23章实践：垃圾邮件过滤器
t
（score (score features))
(features(extract-features text))
~2%~a~2%"text)
file)
text
www.TopSage.com
classification score)
一个可能的起点是令extract-features更加专业。特别
---