`deno install` is an excellent tool for installing scripts, but it appears to be limited to installing TypeScript (and JavaScript) files through their dependencies. For instance, `std/http/file_server.ts` is a simple file server that requires HTML templates to generate pages. However, the current implementation forces all HTML and CSS content to be embedded within the TypeScript file as strings, which is neither elegant nor efficient. This approach also does not work well with binary files such as images (e.g., `favicon.ico`).

For more context, you can refer to the following code snippet from the Deno standard library:
- [file_server.ts: L200-L288](https://github.com/denoland/deno/blob/master/std/http/file_server.ts#L200-L288)

The best solution I have found is to clone the entire repository, which includes the HTML and CSS files outside of the TypeScript file, and then manually use `deno install ./index.ts` to install the script locally. However, this method is overly complex and not very user-friendly.

I propose adding a feature to `deno install` that would allow users to install a script directly from a GitHub repository, similar to how `git clone` works. For example, a command like `deno install https://github.com/username/repository` could automatically clone the repository and install the specified script, effectively running the equivalent of `git clone ... && deno install -n repo ./repo/xxx.ts`.

I look forward to your thoughts on this suggestion. Thank you in advance for your consideration.

Best regards,
[Your Name]