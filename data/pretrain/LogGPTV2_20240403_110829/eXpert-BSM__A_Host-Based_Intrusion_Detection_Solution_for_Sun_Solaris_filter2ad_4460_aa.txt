title:eXpert-BSM: A Host-Based Intrusion Detection Solution for Sun Solaris
author:Ulf Lindqvist and
Phillip A. Porras
eXpert-BSM: A Host-based Intrusion Detection Solution
for Sun Solaris
Ulf Lindqvist and Phillip A. Porras
System Design Laboratory
SRI International
333 Ravenswood Avenue
Menlo Park, CA 94025-3493
(cid:1)ulf, porras(cid:2)@sdl.sri.com
Abstract
eXpert-BSM is a real time forward-reasoning expert sys-
tem that analyzes Sun Solaris audit trails. Based on many
years of intrusion detection research, eXpert-BSM’s knowl-
edge base detects a wide range of speciﬁc and general forms
of misuse, provides detailed reports and recommendations
to the system operator, and has a low false-alarm rate.
Host-based intrusion detection offers the ability to detect
misuse and subversion through the direct monitoring of pro-
cesses inside the host, providing an important complement
to network-based surveillance. Suites of eXpert-BSMs may
be deployed throughout a network, and their alarms man-
aged, correlated, and acted on by remote or local subscrib-
ing security services, thus helping to address issues of de-
centralized management. Inside the host, eXpert-BSM is
intended to operate as a true security daemon for host sys-
tems, consuming few CPU cycles and very little memory
and secondary storage. eXpert-BSM has been available
for download on the Internet since April 2000, and has been
successfully deployed in several production environments.
1. Introduction
When research on intrusion detection was initiated in the
early 1980s, the problem was often referred to as automated
audit-trail analysis. In theory, auditing is an important se-
The work presented in this paper was funded by the Defense Advanced
Research Projects Agency (DARPA), under contract number F30602-98-
C-0059. SRI International, EMERALD, and eXpert-BSM are trademarks
of SRI International. Sun, Sun Microsystems, Solaris, SunOS, Sun En-
terprise and SunSHIELD are trademarks or registered trademarks of Sun
Microsystems, Inc. in the United States and other countries. SRI Inter-
national is independent of Sun Microsystems, Inc. All other registered
trademarks, trademarks, trade names or service marks are the property of
their respective owners.
curity service that both establishes accountability for users
and aids in damage assessment once an abuse is discovered.
Unfortunately, in practice the volumes of data that tend to
be produced by audit services are such that any security vi-
olation recorded within the audit trail is often secure from
discovery as well. The increasing speed and complexity of
modern computing environments has increased the volumes
of audit data that can be produced.
The Solaris Basic Security Module (BSM) [21] is one
example of an auditing facility that can provide detailed
records about system events. However, for system opera-
tors lacking intelligent analysis tools, there are two domi-
nant strategies that emerge in using the audit facility:
1. Turn on auditing for all or most event types, and have a
careful scheme in place for copying the large amounts
of audit data to secondary storage for its potential use
later in forensic analysis.
2. Do not perform auditing at all.
Neither approach utilizes the full potential of auditing facil-
ities as an important contributor to a system’s operational
security.
The EMERALD (Event Monitoring Enabling Responses
to Anomalous Live Disturbances) environment is a dis-
tributed scalable tool suite for tracking malicious activity
through and across large networks [17]. EMERALD in-
troduces a highly distributed, building-block approach to
network surveillance, attack isolation, and automated re-
sponse. A central concept of EMERALD is its distributed,
lightweight monitors, diverse with respect both to the moni-
tored event streams and to analysis techniques. eXpert-BSM
represents one example of an EMERALD monitor that can
stand alone as an important host protection service, and can
also be easily conﬁgured to ﬁt into a distributed framework
of surveillance, correlation, and response.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:09:26 UTC from IEEE Xplore.  Restrictions apply. 
eXpert-BSM is a security service for isolating misuse and
other security-relevant warning indicators from the Sun So-
laris audit facility. Initial development of eXpert-BSM be-
gan in 1998 and has continued to present. This paper is
the ﬁrst publication describing the design and features of
eXpert-BSM and how it ﬁlls a vital function in security cov-
erage not provided by network intrusion detection services.
Section 2 discusses the complementary nature of host au-
dit trail analysis and network trafﬁc monitoring. Section 3
summarizes the eXpert-BSM attack coverage. Section 4
presents the eXpert-BSM capabilities and unique features
while Section 5 discusses deployment experiences and per-
formance characteristics. Section 6 discusses related work
in the area of host-based security analysis.
2. Audit data vs network trafﬁc
An intrusion detection system (IDS) analyzes an event
stream in an attempt to categorize the events as normal or
intrusive. The ﬁrst IDSs proposed and developed in the
early 1980s were host based, analyzing the audit trails of
mainframe computers in search of anomalies and signs of
malicious activity. When later applied to networked en-
vironments, the dominant architecture was centralized col-
lection and analysis of raw audit data from multiple hosts.
The ﬁrst network-based IDS, using data “sniffed” from a
broadcast Ethernet network, was NSM from UC Davis [8].
The network-based trend that followed has been so strong
in commercial and free IDSs that many people equate intru-
sion detection with network trafﬁc analysis.
In this paper, we somewhat narrowly use the term host-
based to refer to a monitor that analyzes audit data from
the operating system kernel. In referring to host-based in-
trusion detection, others have included any form of analysis
that is focused on the protection of a single host. For ex-
ample, some IDS developers have proposed placing a net-
work event collector and analyzer locally on every host, ob-
serving trafﬁc involving only that host. That would not ﬁt
into the deﬁnition of host-based analysis as used in this pa-
per. Accordingly, network-based analyses are deﬁned here
to involve the analysis of network trafﬁc data, wherever the
monitor is located.
Major functional separation between host versus net-
work-based analyses arises from the content of the data
streams being analyzed. Audit-based analyses provide an
exceptional degree of insight into the internal operations
of processes executing within the host. From the audit-
trail vantage point, one can examine all access control deci-
sions occurring between the kernel and user processes, pro-
ﬁle normality in process activity, and compare user actions
against their expected roles within the system.
Surveillance through network trafﬁc analysis allows a
system to view the network communications across multi-
ple hosts. In broadcast networks, a single sensor can pro-
vide analysis coverage over an entire local area network
(LAN). Both host- and network-based surveillance are im-
portant and complementary. Each has its place in the arsenal
of INFOSEC devices being made available to supplement
the need for computer and network security. However, each
approach has its respective weaknesses.
2.1. Network-based IDS limitations
A fundamental limitation to network analysis is that not
all forms of misuse will necessarily generate network traf-
ﬁc. Further, not all misuse activity that results in network
trafﬁc will provide sufﬁcient information to isolate the mis-
use. Examples of such information include the true full lo-
cal pathname of a ﬁle retrieved through HTTP, or the user
ID under which a particular service daemon executes. This
is also a problem with buffer overﬂows and other well-
known malicious attacks that are performed from the con-
sole or over an encrypted channel.
Application-layer encryption of network trafﬁc is be-
coming more common and user transparent thanks to tech-
nology such as SSL-enabled Web browsers and Secure
Shell (ssh). The same is true for lower-layer encryption
through virtual private networks, some of which are based
on the IPSEC standard. While this is a positive step for-
ward in communications integrity and the prevention of data
theft, it makes network-based intrusion detection more difﬁ-
cult as potentially malicious instructions are also encrypted.
Another problem with network intrusion detection in-
volves the evolution of common network topologies, specif-
ically, the growing popularity of non-broadcast networks.
Inserting a network sniffer in the path of all LAN traf-
ﬁc is becoming more challenging. For example, switching
technology allows improved network performance by effec-
tively turning a broadcast Ethernet network into a unicast
network, hampering snifﬁng opportunities. Also, if there
are multiple possible routes between two communicating
hosts, some packets could be routed around the sniffer loca-
tion.
When intercepting and analyzing the communication be-
tween two hosts, it is of paramount importance for correct
analysis that the trafﬁc is interpreted equally by the IDS and
the receiver. If not, the IDS could be tricked into interpret-
ing trafﬁc as benign while the receiver, making a different
interpretation, becomes the victim of an attack. With re-
spect to IP stacks, there are many subtle differences among
operating systems that could be used by an attacker to send
instructions that appear benign to the IDS, but have ma-
lign effects on the victim host [19]. The same holds for
application-level interpretation. For instance, Web servers
for the Windows platform tend to accept the backslash char-
acter as a valid path separator in addition to the forward
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:09:26 UTC from IEEE Xplore.  Restrictions apply. 
slash, while servers on Unix platforms do not.
Network trafﬁc analysis is also challenged with the need
to provide transaction and session reconstruction, requiring
great efﬁciency in managing state. In many cases, a sin-
gle packet is not sufﬁcient to correctly identify intrusive be-
havior. For advanced analysis, the IDS must reconstruct
transactions and sessions based on the observed data and
therefore keep potentially large amounts of state informa-
tion for arbitrarily long periods of time. Merely combining
the requests and replies across many parallel sessions into
transactions can be a complex task for the IDS.
Finally, there is the issue of scalability of a network IDS
to large trafﬁc volumes. For line speeds where relatively
simple routing decisions have to be made in ﬁrmware to be
sufﬁciently fast, the more complicated analysis required by
an IDS implemented in software has little chance to keep
up.
2.2. Host-based IDS limitations
Host-based intrusion detection can avoid most, if not all,
of the problems listed above. Thus, it is an important com-
plement to the threat coverage of network-based monitor-
ing. However, host-based monitors also have a set of gen-
eral problems associated with them.
As with network trafﬁc analysis, host-based analysis is
limited by the available content in the event stream. For
example, a host-based monitor can fail to observe network-
related activity. This illustrates the complementary nature
that host analysis shares with network trafﬁc analysis tools.
Unfortunately, the use of network-based vulnerability scan-
ners has become a prominent practice in security evalua-
tion procedures, and an evaluator pointing a network scan-
ner against a host equipped with a host-based IDS is often
disappointed when the IDS does not react to all elements of
the scan. Very severe host attacks readily detectable with
host-based analysis are similarly often not recognizable by
network IDSs.
Another potential issue with a host-based IDS is its vul-
nerability to attack once a system has been compromised.
When an attacker has taken over the omnipotent super-user
account (root, administrator), then, in the absence of auto-
mated response, the IDS is itself subject to attack. If the IDS
transmits alarm information over the network to another en-
tity, it may be able to report super-user subversion to others
before the attacker can stop the IDS.
If a denial-of-service attack brings down the host, the
IDS will go down with it. The IDS may be able to raise an
alarm about a resource-exhaustion attack in progress, while
there could be other attacks that crash the host with only
a minimal number of network packets, before the IDS can
send out an alarm. The additional load put on the host by
the IDS monitor could also be of concern.
3. eXpert-BSM knowledge base
Among the ﬁrst steps toward developing an effective
and maintainable misuse detection service is to select a
reasoning strategy and knowledge representation structure
that is well suited and efﬁcient for this problem domain.
In [10], we argue why forward-chaining rule-based sys-
tems are highly useful for computer and network intrusion
detection. The core of eXpert-BSM consists of an infer-
ence engine and knowledge base built with the Production-
Based Expert System Toolset (P-BEST), a highly optimized
forward-chaining rule-based system builder for real-time
event analysis.
In the ﬁeld of expert system analysis, forward-chaining
strategies dominate applications that provide prognosis,
monitoring, and system control. Generally, forward-reason-
ing systems excel in expressing logical inferences across
multiple events in search of speciﬁc event sequences or
activity that crosses predeﬁned thresholds of normalcy.
eXpert-BSM’s P-BEST models can comprehend intrusive
behavior that may involve complex/multiple event order-
ings with elaborate pre- or post-conditions. This allows for
a concise rule base, while still being able to recognize wide
variation in intrusive activity.
In contrast, a variety of signature-based intrusion detec-
tion techniques employ stateless reasoning to isolate single-
step malicious activity, such as rudimentary pattern match-
ing. For very high-volume event analysis, stateless pred-
icate reasoning can be quite effective for simple single-
packet exploit detection. However, limited expressibility in
misuse deﬁnitions can lead to inﬂated rule bases to cover
all variations of a known phenomena. Rudimentary pattern
matching also fails to cover multi-event scenarios.
From 1996 to present, P-BEST has been employed in the
development of nine independent intrusion-detection en-
gines under the EMERALD framework of distributed sen-
sors managed under a correlation hierarchy. P-BEST has
shown itself to be an effective real-time transaction pro-
cessing system, with a pre-compilation library that allows
its inference engines and knowledge bases to be easily inte-
grated into large program frameworks. Its language is small
and easily extendible, as calls to arbitrary C functions are
possible anywhere in the rule structure. Since its inception
on Unix, P-BEST has undergone many optimizations (Sec-
tion 5.3).
The P-BEST toolset consists of a rule translator and a
library of run-time routines. When using P-BEST, rules
and facts are written in the P-BEST production rule spec-
iﬁcation language. The misuse detection P-BEST compiler,
pbcc, is then used to translate the P-BEST knowledge spec-
iﬁcation into a callable expert system library. A full dis-
cussion of the P-BEST language deﬁnition with examples
is provided in [10].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:09:26 UTC from IEEE Xplore.  Restrictions apply. 
3.1. eXpert-BSM attack coverage
The eXpert-BSM knowledge base consists of 123 P-
BEST rules, which allow eXpert-BSM to recognize 46 gen-
eral forms of misuse or warning indicators of abuse. Initial
development of this rule base began in 1998 and has con-
tinued to present. Based on experimental evaluations (see
Section 5.2) and other input, eXpert-BSM’s knowledge base
has been reﬁned and extended into an effective suite of in-
trusion models for identifying, where possible, the broadest