routers individually, without coordination among them, a packet
that is sent to one deploying router can be successfully replayed
(once) to another deploying router. However, the effect of such
an attack is limited:
the malicious router can replay a packet at
most once to a router that performs replay suppression; additional
replays after the ﬁrst one will be suppressed.
6.2 Attacks on Bloom Filters
BF implementations are a common target for attackers [55]. We
consider two types of attacks that could be launched against our
protocol.
false-positive rate becomes very high. Our protocol is resilient
against the attack because we use a keyed PRF to compute the
bit locations in the ﬁlter. Since the key is not known to the ad-
versary and the output of the PRF is uniformly random, the ad-
versary cannot set speciﬁc bits in the ﬁlter.
2. Query-only Attack. In the query-only attack, the adversary at-
tempts to launch a DoS attack against the BF by querying items
that take an abnormally long time to check.
In our protocol,
we focus on cache efﬁciency, so that either the BFs ﬁt entirely
in the cache or that checking for an item requires at most one
cache miss.
6.3 Sequence-number Wrap-around
The use of per-interval seqNos makes wrap-arounds (i.e., restarting
from zero) infrequent,5 but wrap-arounds will eventually happen.
In the event of a wrap-around, previously invalidated packets can
be replayed because the seqNos become valid again. Furthermore,
an adversary can replay previously seen packets that have higher
seqNos than the one currently used by a source AS, so that the
router would fast-forward the seqNo window for the source AS. As
a result, the router would drop all legitimate packets that are sent
by the source AS.
This problem is inherently solved by the underlying source au-
thentication mechanism. In source-authentication schemes, source
ASes periodically update their keys, so if the source AS updates
the key before its seqNo wraps around, then the old packets will be
invalid due to an authentication failure.
7. DISCUSSION
Hardware Implementation. In our software-router implementa-
tion, we used blocked BFs because the cache is shared with other
processes.
In a hardware implementation, however, the optimization objec-
tive changes since a NIC can have a dedicated cache for the purpose
of replay suppression. Standard bloom ﬁlters are a better option,
because they are more space efﬁcient than blocked bloom ﬁlters
(for a given false-positive rate) and thus, can potentially ﬁt into a
dedicated cache. Table 3 summarizes the parameters of the opti-
mization problem for a hardware-based implementation; the aggre-
gate footprint of the application is less than 12 MB, with a false-
positive rate of 9.85 · 10−7.
Compliance to Sequence-number-update Interval. Recall that
the only parameter that requires global agreement is the interval T
at which ASes update their sequence numbers. We argue that ASes
have no incentive to deviate from T . If AS S updates SNS too fast, S
may experience packet dropping due to packet reordering: packets
with higher sequence numbers may arrive faster than packets with
lower sequence numbers; this risk increases as T becomes smaller.
1. Chosen-insertion Attack. In a chosen-insertion attack, the ad-
versary crafts packets that ﬁll up the bits in the BF so that the
5For a 4-byte seqNo that is incremented every 10 ms, it takes about
497 days to wrap-around.
Parameter
Value
T
r
σ
M
10 ms
14.88 Mpps
100 ms
11
Parameter Value
4 MB
11
3
61 ms
m
k
N
L
Table 3: Hardware-based Implementation
If S updates SNS too slowly, S may experience packet dropping due
to low seqNos: a router R may self-update its seqNo for S and the
seqNos in the packets may fall out of the seqNo window.
Failure Recovery. Intermediate routers maintain seqNos and pre-
viously forwarded packets for all ASes. In an event of a failure
(e.g., loss of power), a router may lose this information and thus,
is unable to identify replayed packets after reboot. This is only a
temporary situation: upon receiving a packet from a source AS, the
router synchronizes its seqNo for the source, allowing it to ﬁlter
any packets that fall out of the seqNo window, but not replayed
packets with valid seqNos; however, after at most M · (T + ∆) since
the seqNo update, the router has fully recovered from the failure
and can suppress all replayed packets.
A source AS (or a router) may fail as well. In case of a router
failure in the source AS, the router asks a neighboring router within
the same AS to determine the current seqNo as well as the time for
next seqNo update. In case of a catastrophic failure of the entire
AS, there are three choices. The source AS could use a sufﬁciently
high seqNo so that routers in other ASes can synchronize to the new
seqNo of the source AS. Or, the source AS can ask its neighboring
ASes (or their neighboring routers while re-establishing BGP ses-
sions) for the seqNo that it was using prior to failure. Alternately,
as a last resort, a transit AS can erase state for the source AS, if it
does not observe trafﬁc from the source AS for a sufﬁciently large
period of time; then, the transit AS uses the seqNo of the source
AS when it observes again trafﬁc from the source AS.
8. OTHER RELATED WORK
Section 3 describes the design space for end-to-end replay suppres-
sion. In this section, we describe some underspeciﬁed proposals
that mention in-network replay suppression. We highlight that all
related proposals do not satisfy the constraints for in-network de-
ployment (Section 3.2).
Passport [17] proposes a combination of rapid re-keying and
BFs. More speciﬁcally, a source domain and a transit domain use
their shared secret to seed a hash chain that is used in a decreasing
order. Then the hash value is used as a symmetric key to vali-
date MACs for a short interval, and a BF stores the packets that
were observed during the interval. To deal with packet reordering,
two BFs are used, each of them storing packets for an interval of
5 seconds. The authors estimate a throughput of 781 Kpps with an
SRAM requirement of 32 MB; we achieve 11.1 Mpps (over 1300%
increase) with an SRAM requirement of 16 MB. To support a fully-
saturated 10 GbE link with 64-byte packets, as in our evaluation,
Passport would need more than 300 MB of storage.6 Furthermore,
the BFs are vulnerable to chosen-insertion attacks, since a simple
hash function is used to compute the bit locations in the BFs. Thus,
an attacker can force a router to drop all trafﬁc.
Secure Network Attribution and Prioritization (SNAP) [56] rec-
ognizes the need for in-network replay detection to prevent re-
play of high-priority packets that will consume link capacity. Each
router inserts a time-based serial number in every signed outgoing
6We note that Passport neglects important implementation details
that affect performance (e.g., the hash function); thus, it is hard to
provide a fair comparison. Our comparison favors Passport, as we
neglect the effect of cache misses when we project the load of a
fully utilized link to their scheme.
packet and every other router must verify the serial number; thus,
routers have to keep per-router state. Furthermore, it is not speci-
ﬁed how the effects of packet reordering are mitigated.
Furthermore, in-network replay suppression has been studied in
a few other scenarios. Feng et al. devise a suppression mechanism
for wireless networks that relies on digital signatures and achieves
a throughput of 30 Kpps [57]. Replay attacks are also a notable
concern for Named Data Networking (NDN)—a novel communi-
cation architecture for the Internet [58]. Compromised routers can
capture and replay packets of content consumers at a later point
in time. Proposed mechanisms are based on digital signatures and
clock synchronization [59], but a concrete and practical mechanism
is not speciﬁed. Although previous work suggests directions to mit-
igate replay attacks in the network, we provide the only practical
mechanism that can sustain high throughput.
9. CONCLUSION
In this paper, we make the case for a seemingly counter-intuitive
argument: replay suppression is becoming a critical functionality
at the network layer. To demonstrate its importance, we present the
router-reﬂection attack, in which compromised routers target a re-
gion of the Internet by ﬂooding routing bottlenecks through packet
replays. The attack is tenacious and pervasive: it is feasible even
with source authentication, and there are hundreds or thousands of
routers that can be compromised to carry out the attack.
We propose an in-network replay suppression protocol that is
practical for today’s hardware capabilities; our software-router pro-
totype achieves line-rate performance for a fully saturated 10 Gbps
link and for all but minimum-sized (64-byte) packets. The deploy-
ment of replay suppression at the network layer comes with fur-
ther interesting implications: loops are inherently prevented, thus
routers do not need to process the Time-To-Live ﬁeld nor recom-
pute the checksum in packet headers. In addition, it ensures that
every bit in the network is attributable to its source.
10. ACKNOWLEDGMENTS
We would like to thank Pawel Szalachowski, Samuel Hitz, and the
anonymous reviewers for their insightful feedback and suggestions.
The research leading to these results has received funding from
the European Research Council under the European Union’s Sev-
enth Framework Programme (FP7/2007-2013)/ERC grant agree-
ment 617605; from the ICT R&D program of MSIP/IITP (No.
B0717-17-0040, Development of self-certifying ID based trustwor-
thy networking technology); and from NSF under Contract No.
NSF CNS-0953600. The views and conclusions contained here are
those of the authors and should not be interpreted as necessarily
representing the ofﬁcial policies of any other party. We also grate-
fully acknowledge support by ETH Zürich, the Zürich Information
Security Center (ZISC), and Intel for their equipment donation that
enabled the high-capacity experiments.
11. REFERENCES
[1] A. D. Birrell, “Secure Communication Using Remote Procedure
Calls,” ACM Transactions on Computer Systems, 1985.
[2] C. Neuman, T. Yu, S. Hartman, and K. Raeburn, “The Kerberos
Network Authentication Service (V5),” RFC 4120, 2005.
[3] P. Thermos, “Examining Two Well-Known Attacks on VoIP,”
http://goo.gl/b4IEW3, Apr. 2006.
[4] R. Ludwig and M. Meyer, “The Eifel Detection Algorithm for TCP,”
RFC 3522, 2003.
[5] E. Rescorla and N. Modadugu, “Datagram Transport Layer
Security,” RFC 4347, 2006.
[6] S. Kent, “IP Authentication Header,” RFC 4302, 2005.
[7] S. Kent, “IP Encapsulating Security Payload (ESP),” RFC 4303,
2005.
[8] S. Kent, “Extended Sequence Number (ESN) Addendum to IPsec
Domain of Interpretation (DOI) for Internet Security Association and
Key Management Protocol (ISAKMP),” RFC 4304, 2005.
[9] D. E. 3rd, “Cryptographic Algorithm Implementation Requirements
for Encapsulating Security Payload (ESP) and Authentication Header
(AH),” RFC 4305, IETF, Dec. 2005.
[10] J. H. Saltzer, D. P. Reed, and D. D. Clark, “End-to-End Arguments in
System Design,” ACM Transactions on Computer Systems, 1984.
[11] “Cisco Routers Compromised by Malicious Code Injection,”
http://goo.gl/oWBtF6, Sep. 2015.
[12] “Juniper ScreenOS Authenticatoin Backdoor,”
https://goo.gl/umV2gD, Dec. 2015.
[13] “Snowden: The NSA planted backdoors in Cisco products,”
http://goo.gl/xwdFW2, May 2015.
[14] R. M. Hinden, “Why Take Over the Hosts When You Can Take Over
the Network,” "http://bit.ly/2apRAxZ", Feb. 2014.
[15] “SDN Security Challenges in SDN Environments,”
http://bit.ly/2av8huG.
[16] D. G. Andersen, H. Balakrishnan, N. Feamster, T. Koponen,
D. Moon, and S. Shenker, “Accountable Internet Protocol (AIP),” in
Proc. of ACM SIGCOMM, 2008.
[17] X. Liu, X. Yang, D. Wetherall, and T. Anderson, “Efﬁcient and
Secure Source Authentication with Packet Passports,” in Proc. of
USENIX Workshop on Steps to Reducing Unwanted Trafﬁc on the
Internet (SRUTI), 2006.
[18] T. H.-J. Kim, C. Basescu, L. Jia, S. B. Lee, Y.-C. Hu, and A. Perrig,
“Lightweight Source Authentication and Path Validation,” in Proc. of
ACM Conference on SIGCOMM, 2014.
[19] J. Naous, M. Walﬁsh, A. Nicolosi, D. Mazières, M. Miller, and
A. Seehra, “Verifying and Enforcing Network Paths with ICING,” in
Proc. of the ACM Conference on Emerging Networking EXperiments
and Technologies (CoNEXT), 2011.
[20] C. Pappas, R. M. Reischuk, and A. Perrig, “FAIR: Forwarding
Accountability for Internet Reputability,” in Proc. of the IEEE
International Conference on Network Protocols (ICNP), 2015.
[21] C. Basescu, R. M. Reischuk, P. Szalachowski, A. Perrig, Y. Zhang,
H.-C. Hsiao, A. Kubota, and J. Urakawa, “SIBRA: Scalable Internet
Bandwidth Reservation Architecture,” in Proc. of the Symposium on
Network and Distributed System Security (NDSS), 2016.
[22] Y. Go, E. Jeong, J. Won, Y. Kim, D. F. Kune, and K. Park, “Gaining
Control of Cellular Trafﬁc Accounting by Spurious TCP
Retransmission,” in Proc. of the Annual Network and Distributed
System Security Symposium NDSS, 2014.
[23] M. S. Kang and V. D. Gligor, “Routing Bottlenecks in the Internet:
Causes, Exploits, and Countermeasures,” in Proc. of the ACM
Conference on Computer & Communications Security (CCS), 2014.
[24] M. S. Kang, S. B. Lee, and V. D. Gligor, “The Crossﬁre Attack,” in
Proc. of the IEEE Symposium on Security and Privacy (S&P), 2013.
[25] A. Studer and A. Perrig, “The Coremelt Attack,” in Proc. of the
European Symposium on Research in Computer Security (ESORICS),
2009.
[26] N. Hu, L. E. Li, Z. M. Mao, P. Steenkiste, and J. Wang, “Locating
Internet Bottlenecks: Algorithms, Measurements, and Implications,”
in Proc. of ACM SIGCOMM, 2004.
[27] CAIDA, “Observing Routing Asymmetry in Internet Trafﬁc,”
https://goo.gl/uE4V3B.
[28] Y. He, M. Faloutsos, S. Krishnamurthy, and B. Huffaker, “On
Routing Asymmetry in the Internet,” in Proc. of the IEEE Global
Communications Conference (GLOBECOM), 2005.
[29] “CAIDA: Looking Glass API,” http://goo.gl/AKQcd9.
[30] Cisco, “How Does Load Balancing Work?” http://goo.gl/SVbYM9.
[31] Juniper, “Conﬁguring Per-Packet Load Balancing,”
http://goo.gl/ZO4LiS.
[32] E. Katz-Bassett, H. V. Madhyastha, V. K. Adhikari, C. Scott,
J. Sherry, P. Van Wesep, T. Anderson, and A. Krishnamurthy,
“Reverse Traceroute,” in Proc. of the USENIX Conference on
Networked Systems Design and Implementation (NSDI), 2010.
[33] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson, “Measuring
ISP Topologies with Rocketfuel,” in Proc. of ACM SIGCOMM, 2004.
[34] “RIPE Atlas,” "http://atlas.ripe.net".
[35] B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger, T. Friedman,
M. Latapy, C. Magnien, and R. Teixeira, “Avoiding Traceroute
Anomalies with Paris Traceroute,” in Proc. of the ACM Conference
on Internet Measurement (IMC), 2006.
[36] K. Keys, Y. Hyun, M. Luckie, and K. Claffy, “Internet-scale IPv4
Alias Resolution with MIDAR,” IEEE/ACM Transactions on
Networking, 2013.
[37] K. Zetter, “NSA Laughs at PCs, Prefers Hacking Routers and
Switches,” http://bit.ly/2awxsN8, Apr. 2013.
[38] Cisco, “Cisco IOS Software Integrity Assurance,”
http://bit.ly/2ab76RE.
[39] T. Lee and B. Hau, “The New Route to Persistence: Compromised
Routers in the Wild,” http://bit.ly/1ObMm7u, Sep. 2015.
[40] P. Porras, “Towards a More Secure SDN Control Layer - SRI
International’s View,” http://bit.ly/2ax0ERr, Oct. 2013.
[41] G. Pickett, “Abusing Software Deﬁned Networks,”
http://ubm.io/1sT9QTD, Oct. 2014.
[42] S. Luan and V. D. Gligor, “On Replay Detection in Distributed
Systems,” in Proc. of the IEEE International Conference on
Distributed Computing Systems (ICDCS), 1990.
[43] X. Liu, A. Li, X. Yang, and D. Wetherall, “Passport: Secure and
Adoptable Source Authentication,” in Proc. of the USENIX
Conference on Networked Systems Design and Implementation
(NSDI), 2008.
[44] ARIN, “Resource Public Key Infrastructure.”
[45] H. Marouani and M. R. Dagenais, “Comparing High Resolution
Timestamps in Computer Clusters,” in Proc. of the IEEE Canadian
Conference on Electrical and Computer Engineering, 2005.
[46] C. H. Papadimitriou, “On the Complexity of Integer Programming,”
Journal of the ACM (JACM), 1981.
[47] F. Putze, P. Sanders, and J. Singler, “Cache-, Hash- and
Space-efﬁcient Bloom Filters,” Journal of Experimental Algorithmics
(JEA), 2009.
[48] R. Durairajan, S. K. Mani, J. Sommers, and P. Barford, “Time’s
Forgotten: Using NTP to Understand Internet Latency,” in Proc. of
the ACM Workshop on Hot Topics in Networks (HotNets), 2015.
[49] M. Bellare, J. Kilian, and P. Rogaway, “The Security of the Cipher
Block Chaining Message Authentication Code,” Journal of
Computer and System Science, 2001.
[50] “The CAIDA UCSD Anonymized Internet Traces 2015-050615,”
http://goo.gl/WmItAH.
[51] N. G. Dufﬁeld and M. Grossglauser, “Trajectory Sampling for Direct
Trafﬁc Observation,” IEEE/ACM Transactions on Networking, 2001.
[52] “Data Plane Development Kit,” "http://dpdk.org".
[53] S. Gueron, “Intel Advanced Encryption Standard (AES) New
Instruction Set,” https://goo.gl/of08Dg, March 2010.
[54] A. Morton, “IMIX Genome: Speciﬁcation of Variable Packet Sizes
for Additional Testing,” RFC 6985, 2013.
[55] T. Gerbet, A. Kumar, and C. Lauradoux, “The Power of Evil Choices
in Bloom Filters,” INRIA Grenoble, Research Report RR-8627,
2014.
[56] G. D. Troxel and L. P. Ma, “Secure Network Attribution and
Prioritization: A Coordinated Architecture for Critical
Infrastructure,” in Proc. of the IEEE Military Communications
Conference (MILCOM), 2013.
[57] Z. Feng, J. Ning, I. Broustis, K. Pelechrinis, S. V. Krishnamurthy,
and M. Faloutsos, “Coping with Packet Replay Attacks in Wireless
Networks,” in Proc. of the IEEE Conference on Sensor, Mesh, and Ad
Hoc Communications and Networks (SECON), 2011.
[58] V. Jacobson, D. K. Smetters, J. D. Thornton, M. F. Plass, N. H.
Briggs, and R. L. Braynard, “Networking Named Content,” in Proc.
of the ACM Conference on Emerging Networking Experiments and
Technologies (CoNEXT), 2009.
[59] A. Afanasyev, “Addressing operational challenges in named data
networking through ndns distributed database,” Ph.D. dissertation,
Citeseer, 2013.