  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
Because of changes in React 16, server-side rendering no longer behaves any
differently in production mode than in any other environment. Libraries such
as Next.js configure Webpack to compile client code in production mode. Many
users need to run multiple different environments with different
configurations. For example, a staging environment might need to run a
production build of the app but it's NODE_ENV might be 'staging'. If this is
the case, the server will always render long classnames while the client will
always expect short classnames.
In Next.js, this causes the initial render to break but every subsequent
render to work correctly. After tracking this bug throughout my entire stack,
I determined that it comes from material-ui's configuration approach.
Rather than requiring the user to set process.env.NODE_ENV to production,
allow the user to pass some kind of configuration variable that would trigger
`createGenerateClassName.js` to operate in "production mode".
Tech | Version  
---|---  
Material-UI | 1.0.0-beta.12  
React | 16.0  
browser | all  
etc | Next.js 4.0-beta.2