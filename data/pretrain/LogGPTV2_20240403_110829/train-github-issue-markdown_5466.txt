 **Migrated issue, originally created by Anonymous**
I noticed that only linux (using cxOracle) there's an object leak with a
specific kind of usage.
    from sqlalchemy import *
    import gc
    engine = create_engine('oracle://dsn=somedb&user=myuser&password=mypass')
    foo = Table('foo', engine,
        Column('id', Integer, Sequence('foo_seq'), primary_key=True),
        )
    try: foo.drop()
    except: pass
    try: foo.create()
    except: pass
    foo.insert().execute()
    class Foo(object): pass
    foos = mapper(Foo, foo)
    while 1:
        foos.select()
        gc.collect()
        objectstore.clear()
        gc.collect()
        print len(gc.get_objects())
The output of the programm is the ever increasing number of objects until it
crashes due to out of memory exception (if you don't ctrl+c before)
This may need confirmation for other databases and linux distributions (mine
is RedHat EL4)