### 优化后的文本

#### 图7：随时间和事件变化的吞吐量，vinit = {0, 1, 2, 3}

- 60秒: 副本4加入系统
- 120秒: 副本3崩溃
- 240秒: 副本3恢复
- 360秒: 副本4离开系统
- 480秒: 检查点 (ckpt)
- 600秒: 结束

时间（秒）

```
50
40
30
20
10
0
无检查点
500-检查点
1000-检查点
2000-检查点
 0
 1
 2
 3
 5
 4
 6
区块数量 (x 10^3)
 7
 8
 9
 10
```

图8：更新副本所需的时间

### 区块链持久性的实现

近年来，小规模许可区块链的普及（例如[1]–[4], [54]）及其作为分布式交易平台的应用[55], [56]，使得我们有必要更好地理解区块链的持久性。然而，据我们所知，这一主题在学术界和工业界尚未得到充分探讨。

Hyperledger Fabric[1] 是一个广为人知的区块链平台。该平台设计支持各种组件（如排序服务和成员服务）的插件式实现。Fabric 的关键创新在于在确定事务的总顺序之前执行这些事务。只有在确定了总顺序后，区块才会被对等节点验证并写入稳定存储。尽管 Fabric 的持久性保证没有明确文档记录，但从区块链写入过程中对等节点之间缺乏协调可以看出，该系统提供的保证最多类似于 SMARTCHAIN 的弱持久性。

Tendermint 是另一个著名的许可平台，它实现了 PBFT 协议的一个变种[3]，使其设计更接近于 SMARTCHAIN 而非 Fabric。不过，Tendermint 具有两个显著特点：
1. 使用 gossip 协议在节点间传播事务；
2. 采用类似 Spinning[9] 的领导者轮换机制。

从持久性角度来看，Tendermint 在操作执行前后都会写入区块，这使其效率低于 SMARTCHAIN（我们的实验结果也证实了这一点），并且在副本之间没有进一步的协调。因此，该系统仅支持其区块链的弱持久性。

#### 联盟重组

一些研究还解决了支持 SMR 中组重组的挑战[13], [15], [45]–[47]。ComChain[57]、混合共识[13] 和 Solida[15] 最接近我们的解决方案，因为它们支持完全自主的重组。与我们的方法类似，ComChain 允许根据应用程序特定的标准进行重组，但不处理分叉问题。混合共识使用比特币的 PoW 协议来确定委员会成员，并在当前委员会成员中使用传统的共识协议来排序事务。相比之下，我们的解决方案完全基于经典的 BFT 状态机协议。此外，Solida 设计用于同步系统模型，并使用适用于该模型的 PBFT 协议变体。而我们的解决方案仍能在最终同步模型中运行，这与文献中的大多数 SMR 协议一致。

Fabric 和 Tendermint 也支持联盟重组。Fabric 只允许通过受信任的网络管理员的帮助进行重组[58]。原则上，Tendermint 支持去中心化的重组，前提是应用程序定义了如何实现这一点[59]。然而，这些系统都没有处理多次重组可能导致的潜在分叉问题。

### 结论

本文讨论了状态机复制方法与许可区块链需求之间的一些不匹配之处，并提出了一些解决这些问题的技术。识别的问题包括区块链应用的低性能、缺乏强区块链持久性保证以及由于联盟重组导致的分叉可能性。我们提出了一组与共识无关的技术，这些技术可以在区块链层中实现，并集成到 SMR 框架中以缓解这些问题。为了验证我们的方法，我们在 SMARTCHAIN 上实现了这些技术，这是一个基于 BFT-SMART 的概念验证许可区块链。实验结果表明，SMARTCHAIN 将简单的数字货币应用的性能提高了 8 倍，与 BFT-SMART 相比，与 Tendermint 和 Hyperledger Fabric 分别相比则分别提高了 8 倍和 33 倍。

### 致谢

感谢 Michael Davidson、Vincent Gramoli、Dragos-Adrian Seredinschi、匿名评审者以及我们的指导老师 Heming Cui 对本文提出的宝贵意见。这项工作得到了 FCT 项目 IRCoC (PTDC/EEI-SCR/6970/2014)、ThreatAdapt (FCT-FNR/0002/2018) 和 LASIGE 研究单位 (UIDB/00408/2020 和 UIDP/00408/2020)、FAPDF/Brazil 通过 Edital 05/2018 以及瑞士国家科学基金会 (项目编号 175717) 的支持。

授权许可使用限于：清华大学。下载时间：2021年3月19日11:27:46 UTC。来自 IEEE Xplore。限制适用。

### 参考文献

[1] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Christidis, A. D. Caro, D. Enyeart, C. Ferris, G. Laventman, Y. Manevich, S. Muralidharan, C. Murthy, B. Nguyen, M. Sethi, G. Singh, K. Smith, A. Sorniotti, C. Stathakopoulou, M. Vukolic, S. W. Cocco, and J. Yellick, “Hyperledger fabric: A distributed operating system for permissioned blockchains,” in Proceedings of the 13th ACM SIGOPS European Conference on Computer Systems, Porto, Portugal, 2018.

[2] “Chain protocol whitepaper,” 2014. [Online]. Available: https://chain.com/docs/1.2/protocol/papers/whitepaper

[3] E. Buchman, “Tendermint: Byzantine fault tolerance in the age of blockchains,” Master’s thesis, University of Guelph, 2016.

[4] W. Martino, “Kadena: The first performance scalable, high private blockchain,” 2016. [Online]. Available: http://kadena.io/docs/Kadena-ConsensusWhitePaper-Aug2016.pdf

[5] M. Castro and B. Liskov, “Practical Byzantine fault tolerance,” in Proceedings of the USENIX Symposium on Operating Systems Design and Implementation, New Orleans, Louisiana, USA, 1999.

...

[更多参考文献]

---

希望这个优化后的版本更加清晰、连贯和专业。如果有任何进一步的需求或修改，请随时告诉我！