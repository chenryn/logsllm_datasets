#### 示例 7:删除组和用户
如果要删除一个组，你需要使用 groupdel ，如果需要删除用户 你需要使用 userdel (添加 -r 可以删除主目录和邮件池的内容)。
```
# groupdel [group_name]        # 删除组
# userdel -r [user_name]       # 删除用户，并删除主目录和邮件池
```
如果一些文件属于该组，删除组时它们不会也被删除。但是组拥有者的名字将会被设置为删除掉的组的GID。
### 列举，设置，并且修改标准 ugo/rwx 权限
著名的 [ls 命令](http://linux.cn/article-5349-1.html) 是管理员最好的助手. 当我们使用 -l 参数, 这个工具允许您以长格式（或详细格式)查看一个目录中的内容。
而且，该命令还可以用于单个文件中。无论哪种方式，在“ls”输出中的前10个字符表示每个文件的属性。
这10个字符序列的第一个字符用于表示文件类型：
* – (连字符): 一个标准文件
* d: 一个目录
* l: 一个符号链接
* c: 字符设备（将数据作为字节流，例如终端）
* b: 块设备（以块的方式处理数据，例如存储设备）
文件属性的接下来的九个字符，分为三个组，被称为文件模式，并注明读（r）、写（w）、和执行（x）权限授予文件的所有者、文件的所有组、和其它的用户（通常被称为“世界”）。
同文件上的读取权限允许文件被打开和读取一样，如果目录同时有执行权限时，就允许其目录内容被列出。此外，如果一个文件有执行权限，就允许它作为一个程序运行。
文件权限是通过chmod命令改变的，它的基本语法如下：
```
# chmod [new_mode] file
```
new\_mode 是一个八进制数或表达式，用于指定新的权限。随意试试各种权限看看是什么效果。或者您已经有了一个更好的方式来设置文件的权限，你也可以用你自己的方式自由地试试。
八进制数可以基于二进制等价计算，可以从所需的文件权限的文件的所有者、所有组、和世界组合成。每种权限都等于2的幂（R = 2^2，W = 2^1，x = 2^0），没有时即为0。例如：
![File Permissions](/data/attachment/album/201509/09/225830iptd353xpxx2cwxc.png)
*文件权限*
在八进制形式下设置文件的权限，如上图所示
```
# chmod 744 myfile
```
请用马上来对比一下我们以前的计算，在更改文件的权限后，我们的实际输出为：
![Long List Format](/data/attachment/album/201509/09/225832z5sp88b0886sbfff.png)
*长列表格式*
#### 示例 8: 寻找777权限的文件
出于安全考虑，你应该确保在正常情况下，尽可能避免777权限（任何人可读、可写、可执行的文件）。虽然我们会在以后的教程中教你如何更有效地找到您的系统的具有特定权限的全部文件，你现在仍可以组合使用ls 和 grep来获取这种信息。
在下面的例子，我们会寻找 /etc 目录下的777权限文件。注意，我们要使用[第二章：文件和目录管理](https://www.linux.cn/article-6155-1.html)中讲到的管道的知识：
```
# ls -l /etc | grep rwxrwxrwx
```
![Find All Files with 777 Permission](/data/attachment/album/201509/09/225834xxyytyzy3ytz3ytb.png)
*查找所有777权限的文件*
#### 示例 9: 为所有用户指定特定权限
shell脚本，以及一些二进制文件，所有用户都应该有权访问（不只是其相应的所有者和组），应该有相应的执行权限（我们会讨论特殊情况下的问题）：
```
# chmod a+x script.sh
```
**注意**: 我们可以使用表达式设置文件模式，表示用户权限的字母如“u”，组所有者权限的字母“g”，其余的为“o” ，同时具有所有权限为“a”。权限可以通过`+` 或 `-` 来授予和收回。
![Set Execute Permission on File](/data/attachment/album/201509/09/225835gk6pevk3o8k40uvz.png)
*为文件设置执行权限*
长目录列表还用两列显示了该文件的所有者和所有组。此功能可作为系统中文件的第一级访问控制方法：
![Check File Owner and Group](/data/attachment/album/201509/09/225837q3pggcvzn3v7pqca.png)
*检查文件的所有者和所有组*
改变文件的所有者，您应该使用chown命令。请注意，您可以在同时或分别更改文件的所有组：
```
# chown user:group file
```
你可以更改用户或组，或在同时更改两个属性，但是不要忘记冒号区分，如果你想要更新其它属性，让另外的部分为空：
```
# chown :group file              # 仅改变所有组
# chown user: file               # 仅改变所有者
```
#### 示例 10:从一个文件复制权限到另一个文件
如果你想“克隆”一个文件的所有权到另一个，你可以这样做，使用–reference参数，如下：
```
# chown --reference=ref_file file
```
ref\_file的所有信息会复制给 file
![Clone File Ownership](/data/attachment/album/201509/09/225838s8mvtfdwtnfmdx6v.png)
*复制文件属主信息*
### 设置 SETGID 协作目录
假如你需要授予在一个特定的目录中拥有访问所有的文件的权限给一个特定的用户组，你有可能需要使用给目录设置setgid的方法。当setgid设置后，该真实用户的有效GID会变成属主的GID。
因此，任何访问该文件的用户会被授予该文件的属组的权限。此外，当setgid设置在一个目录中，新创建的文件继承组该目录的组，而且新创建的子目录也将继承父目录的setgid权限。
```
# chmod g+s [filename]
```
要以八进制形式设置 setgid，需要在基本权限前缀以2。
```
# chmod 2755 [directory]
```
### 总结
扎实的用户和组管理知识，以及标准和特殊的 Linux权限管理，通过实践，可以帮你快速解决 RHEL 7 服务器的文件权限问题。
我向你保证，当你按照本文所概述的步骤和使用系统文档(在本系列的[第一章 回顾基础命令及系统文档](http://www.tecmint.com/rhcsa-exam-reviewing-essential-commands-system-documentation/)中讲到)， 你将掌握基本的系统管理的能力。
请随时使用下面的评论框让我们知道你是否有任何问题或意见。
---
via: 
作者：[Gabriel Cánepa](http://www.tecmint.com/author/gacanepa/) 译者：[xiqingongzi](https://github.com/xiqingongzi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出