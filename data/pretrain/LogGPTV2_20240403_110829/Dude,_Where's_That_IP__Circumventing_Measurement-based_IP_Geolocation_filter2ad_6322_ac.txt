adversary is more reasonable.
4.2.2 Attack detectability
We next consider how the distance the adversary tries
to move the target affects the observed error. Figure 6
shows error for the adversary depending on how far the
adversary attempts to move the target when using the
speed of light approximation. Figure 7 shows the same
data for an adversary with access to the best line func-
tion. We note that the error observed by the adversary
grows with the magnitude of the attempted move by the
adversary. Speciﬁcally, for each 1 km the adversary tries
to move the median error increases by 700 meters when
she does not have access to the best line function. With
access to the best line function, the median error per km
decreases by 43% to 400 km. Thus, the attack we pro-
pose works best when the distance between t and τ is
relatively small and the error observed by the attacker
grows linearly with the size of the move.
Given the relatively high errors observed by the adver-
sary, we next verify whether the adversary moves in her
chosen direction. Figure 8 shows the CDF of θ, the dif-
ference between the direction the adversary tried to move
and the direction the target was actually moved. While
lacking high accuracy when executing the delay-adding
attack, the adversary is able to move the target in the gen-
eral direction of her choosing. The difference in direction
is less than 45 degrees 74% of the time and less than 90
degrees 89% of the time. The attack where the adversary
has access to the best line function performs better with
a difference in direction of less than 45 degrees 91% of
the time.
We next look at whether a geolocation provider can de-
tect the delay-adding attack and thus determine that the
geolocation result has been tampered with.
When CBG geolocates a target, it determines a feasi-
ble region where the target can be located [12]. The size
of the feasible region can be interpreted as a measure of
conﬁdence in the geolocation result. A very large region
size indicates that there is a large area where the target
may be located, although the algorithm returns the cen-
troid. As we saw in Figure 5, the adversary, able only
to add delay, can only increase the radii of the arcs and
thus only increase the region size. As a result, the delay-
adding attack always increases the feasible region size
and reduces conﬁdence in the result of the geolocation al-
gorithm. We consider the region size computed by CBG
before and after our proposed attack to determine how
effective region size may be for detecting an attack.
Figure 9 shows the region size for CBG when the
delay-adding attack is executed in general, when the
attack only attempts to move the landmark less than
1,000 km, and where the adversary has access to the best
line function. We observe that the region size becomes
orders of magnitude larger when the delay-adding attack
is executed. The region size grows even larger when the
adversary uses the best line function. An adversary that
moves the target less than 1,000 km is able to execute
the attack without having much impact on the region size
distribution.
The region size grows in proportion to the amount of
delay added. This explains why the adversary creates
a larger region size when using the best line function,
which adds more delay than the speed of light approxi-
]
x
<
X
P
[
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
best line delay
SOL delay
 0
 20
 40
 60
 80
 100  120  140  160  180
absolute difference in direction (degrees)
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
]
x
<
X
P
[
 0
0
2x107
CBG
SOL delay (<=1000 KM move)
SOL delay
best line delay
6x107
4x107
8x107
localization region size (km2)
Figure 8: CDF of change in direction for the delay-adding
attack.
Figure 9: CDF of region size for CBG before and after the
delay-adding attack.
)
i
2
m
k
(
e
z
s
n
o
g
e
r
i
108
107
106
105
104
90-percentile
median
10-percentile
 0
 1000
 2000
 3000
 4000
 5000
 6000
distance of attempted move (km)
]
x
<
X
P
[
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
0
CBG
SOL delay (<=1000 KM move)
SOL delay
best line delay
200000
400000
600000
800000
1000000
localization region size (km2)
Figure 10: Region size depending on how far the adver-
sary attempts to move the target using the best line func-
tion.
Figure 11: CDF of region size for CBG before and after
delay-adding, limited to points less than 1,000,000 km2.
mation. Figure 10 illustrates this case. As the adversary
attempts to move the target further from its true location,
the amount of delay that must be added increases. This
in turn increases the region size returned by CBG. Thus,
while there may be methods for adding delay that im-
prove the adversary’s accuracy, they will only increase
the ability of the geolocation provider to detect the at-
tack.
Given the increased region sizes observed when the
delay-adding attack is executed, one defense would be to
use a region size threshold to exclude geolocation results
with insufﬁcient conﬁdence. Increased region sizes may
be caused by an adversary adding delays, as we have ob-
served or by ﬂuctuations in the stochastic component of
network delay. In either case, the geolocation algorithm
observes a region that is too large for practical purposes.
Suppose we discard all geolocation results with a region
size greater than 1,000,000 km2 (this is approximately
the size of Texas and California combined). Figure 11
shows the CDF of region size below this threshold. The
adversary using the speed-of-light approximation will be
undetected only 36% of the time. However, if the adver-
sary attempts to move less than 1,000 km she will remain
undetected 74% of the time. An adversary with access
to the best line for each of the landmarks is more eas-
ily detectable because of the larger region sizes that re-
sult from the larger injected delays. With a threshold of
1,000,000 km2, the adversary using the best line function
will have her results discarded 83% of the time. Thus,
using a threshold on the region size is effective for de-
tecting attacks on delay-based geolocation except when
the attacker tries to move the target only a short distance.
5 Topology-aware geolocation
Delay-based geolocation relies on correlating measured
delays with distances between landmarks. As we saw
previously, these correlations or mappings are applied
to landmark-to-target delays to create overlapping con-
ﬁdence regions; the overlap is the feasible region, and
the estimated location of the target is its centroid. When
inter-landmark delays and landmark-to-target delays are
not similarly correlated with physical distances (e.g., due
to circuitous end-to-end paths) the resulting delay-to-
distance relationships to the target can deviate signiﬁ-
cantly from the pre-computed correlations.
Topology-aware geolocation addresses this problem
by limiting the impact of circuitous end-to-end paths;
speciﬁcally, it localizes all intermediate routers in ad-
dition to the target node, which results in a better es-
timate of delays. Starting from the landmarks, the ge-
olocation algorithm iteratively estimates the location of
all intermediate routers on the path between the land-
mark and the target. This is done solely based on
single-hop link delays, which are usually signiﬁcantly
less circuitous than multi-hop end-to-end paths, enabling
topology-aware geolocation to be more resilient to cir-
cuitous network paths than delay-based geolocation.
topology-based
There are two previously proposed topology-aware
geolocation methods,
geolocation
(TBG) [14] and Octant [30]. These methods differ
in how they geolocate the intermediate routers. TBG
uses delays measured between intermediate routers
as inputs to a constrained optimization that solves
for the location of the intermediate routers and target
IP [14]. In contrast, Octant leverages a “geolocalization”
framework similar to CBG [12], where the location of
the intermediate routers and target are constrained to
speciﬁc regions based on their delays from landmarks
and other intermediate routers [30]. These delays are
mapped into distances using a convex hull rather than a
linear function, such as the best line in CBG to improve
the mapping between distance and delay.
Octant leverages several optimizations that improve its
performance over other geolocation algorithms. These
include: taking into account both positive and negative
constraints; accounting for ﬁxed delays along network
paths, and decreasing the weight of constraints based
on latency measurements. Wong et al. ﬁnd that their
scheme outperforms CBG, with median accuracies of 35-
40 km [30]. In addition, the feasible regions returned by
Octant are much smaller than those returned by CBG.
They also observe that their scheme is robust even given
a small number of landmarks with performance leveling
off after 15 landmarks.
When analyzing and evaluating attacks on topology-
aware geolocation, we consider a generic geolocation
framework. Intermediate routers are localized using con-
straints generated from latencies to adjacent routers. The
target is localized to a feasibility region generated based
on latencies from the last hop(s) before the target, and
the centroid of the region is returned.
5.1 Delay-based attacks on topology-aware
geolocation
Topology-aware geolocation systems localize all inter-
mediate routers in addition to the target node. We begin
by analyzing how a simple adversary, one without the
ability to fabricate routers, could attack the geolocation
system, and then move onto how a sophisticated adver-
sary could apply additional capabilities to improve the
attack. Since the simple adversary has no control over
the probes outside her own network, any change made
can only be reﬂected on the ﬁnal links of the path to-
wards the target.
Most networks are usually connected to the rest of the
Internet via a small number of gateway routers. Any path
connecting nodes outside the adversary’s network to the
target (which is inside the network) will go through one
of these routers. Here, we start with a simple case where
all routes towards the target converge on a single gate-
way router; we then consider the more general case of
multiple gateway routers.
CLAIM: 1 If the network paths from the landmarks to
the target converge to a single common gateway router,
increasing the end-to-end delays between the landmarks
and the target can be detected and mitigated by topology-
aware geolocation systems.
To verify this claim, we ﬁrst characterize the effect
of delay-based attacks on topology-aware geolocation.
Delay-based attacks selectively increase the delay of the
probes from landmarks. The probe from landmark Li
is delayed for an additional δi seconds. Given that all
network paths to the target converge to a single common
gateway router h, the end-to-end delay from each land-
mark, Li, to the target can be written as:
dit = dih + dht + δi
(2)
The observed latency from the gateway to the target is
dit − dih, which is the sum of the real last-hop latency
and the attack delay. However, since the delay-based at-
tack relies on selectively varying the attack delays, δi,
based on the location of Li, the observed last-hop latency
between the gateway and the target will be inconsistent
across measurements initiated from different landmarks.
The high-variance in the last-hop link delay can be
used to detect delay-based attacks in topology-aware ge-
olocation systems. The attack can be mitigated by taking
the minimum observed delay for each link. The resulting
observed link delay from h to the target is:
ˆdht = dht + min
Li∈L
δi
(3)
This signiﬁcantly reduces the scope of delay-based at-
tacks, requiring attack delays to be uniform across all
measurement vantage points when there is only a single
common gateway to the target.
In general, if there are multiple gateway routers on the
border of the adversary’s network, we can make the fol-
lowing weaker claim:
CLAIM: 2 Increasing the delay between each gate-
way and the target can only be as effective against
topology-based geolocation as increasing end-to-end de-
lays against delay-based geolocation with a reduced set
of landmarks.
An adversary could attempt to modify delays between
each gateway router, hj, and the target, t. This assumes
the adversary knows the approximate geolocation results
for all gateway routers 2. Where there is only a single
gateway router with no additional attack delay, topology-
based geolocation places the target within a circle cen-
tered at h with coordinates (λh, φh):
p(x − λh)2 + (y − φh)2 = dht
(4)
Subjecting the latency measurement to an additional de-