---
author: Dr. Maheswari R.
category: 软件开发
comments_data:
- date: '2022-07-31 12:41:11'
  message: 有类似于树莓派这样的硬件，再加一块便宜的触控大屏组成一个整体模块。即使公交站拆迁，也只需重新布线。如果我能开发出这样的产品并在全国范围内的公交站普及，那么一年赚取200万人民币应该是可以实现的！
  postip: 123.139.44.253
  username: 来自陕西西安的 Chrome 103.0|GNU/Linux 用户
- date: '2022-08-01 07:21:53'
  message: 多大了？
  postip: 36.45.246.135
  username: 来自陕西西安的 Chrome Mobile 101.0|Android 11 用户
count:
  commentnum: 2
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 2812
date: '2022-07-31 09:15:32'
editorchoice: false
excerpt: 本文将指导你如何设计一个基于 Web 的应用程序，利用 Node-RED 为地铁站提供自动化的智能停车系统。
fromurl: https://www.opensourceforu.com/2022/06/build-a-smart-parking-system-for-a-metro-station/
id: 14881
islctt: true
largepic: /data/attachment/album/202207/31/091533bzrq0a55qus8at3z.jpg
permalink: /article-14881-1.html
pic: /data/attachment/album/202207/31/091533bzrq0a55qus8at3z.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: 本文将指导你如何设计一个基于 Web 的应用程序，利用 Node-RED 为地铁站提供自动化的智能停车系统。
tags:
- Node-RED
thumb: false
title: 为地铁站构建一个智能停车系统
titlepic: true
translator: Maisie-x
updated: '2022-07-31 09:15:32'
---

## 摘要

本文旨在介绍如何设计并实施一个基于 Web 的应用程序，该程序使用 Node-RED 为地铁站提供自动化的智能停车系统。

![Smart car parking](/data/attachment/album/202207/31/091533bzrq0a55qus8at3z.jpg)

Web 应用程序是一种在 Web 服务器上运行并通过 Web 浏览器访问的软件。这种应用程序通常采用客户端-服务器架构（C/S），用户通过远程服务器获取服务。Web API（应用程序编程接口）是通过 HTTP 协议在整个互联网上可访问的资源，如图 1 所示。

![Figure 1: Web API](/data/attachment/album/202207/31/091533dglh35gg4g9g53gz.jpg)

本文将展示如何为地铁站设计一个基于 Web 的自动化智能停车系统，使用开源工具 Node-RED 实现。系统通过模板节点创建了一个交互式且美观的用户登录表单，此表单以 HTML 和 CSS 编码，用于收集车主信息以支持停车系统的自动化操作。请参见图 2 和图 3 中显示的登录和提交表单流程图。

使用的节点如下：
![table function](/data/attachment/album/202207/31/091533f6qlbo6zah6zplpc.jpg)

### 地铁智能停车节点流程设计

Node-RED 可以通过 `node-red` 命令启动。当您访问 `http://127.0.0.1:1880/` 时，可以看到已激活的 Node-RED 用户界面流程浏览器，这意味着 Node-RED 已成功设置并正常工作。

根据以下步骤创建登录表单及提交表单：

![Figure 2: Login form flow diagram](/data/attachment/album/202207/31/091534gwk1tjkczwqd1qoj.jpg)
![Figure 3: Submission form flow diagram](/data/attachment/album/202207/31/091534il6bnbk6ymobbkex.jpg)

#### 登录表单

1. 在节点画布中拖放 **HTTP 输入** (`http in`) 节点，这将为您的 Web 服务创建一个 HTTP 访问点。
2. 将 **HTTP 输入** 节点连接到 **函数** (`function`) 节点，后者允许您编写 JavaScript 函数来处理接收到的消息。
   ![Figure 4: Login form for smart parking for cars](/data/attachment/album/202207/31/091534pjejfgptatd5gugj.jpg)
3. 连接 **函数** 节点至 **模板** (`template`) 节点，后者基于给定模板生成 Web API。
4. 最后，将 **模板** 节点与 **HTTP 响应** (`http response`) 节点相连，后者负责响应来自 **HTTP 输入** 节点的请求。

#### 提交表单

1. 拖放另一个 **HTTP 输入** 节点，并将其连接到 **JSON** 节点，后者负责数据转换成 JSON 字符串进行通信。
2. 将 **HTTP 输入** 节点连接到 **调试** (`debug`) 节点，以便查看输出结果。
3. 将 **JSON** 节点放置并连接到 **函数** 节点，然后将后者连接到 **HTTP 响应** 节点。
   ![Figure 5: Submission form for smart parking for cars](/data/attachment/album/202207/31/091534rxsjt334i1m1igzm.jpg)

完成整个流程的设计后，请点击 Node-RED 窗口右上角的 **部署** (`Deploy`) 按钮。随后，您可以访问 `http://127.0.0.1:1880/ui/` 查看用户界面。输入链接并点击 **提交** (`Submit`) 后，页面将跳转至下一个界面，在那里您可以阅读所有相关信息。

### Node-RED 工作流程配置

现在我们将详细说明各个节点属性的配置方法。

#### 登录表单节点配置

- **HTTP 输入** 节点：
  - 方法：选择 "GET"
  - URL：设为 `/MetroStation`
  - 名称：设为 “智能停车系统”
  
  > 注意：URL 可以使用任何用户定义的本地变量。
  
  ![Figure 6: Http in node property configurations](/data/attachment/album/202207/31/091535h4sj69t5m5515pvy.jpg)

- **函数** 节点：输入代码 `msg.url = project` 并命名该节点为 “项目提交”。

  ![Figure 7: Function node property configurations](/data/attachment/album/202207/31/091535bya2f2d69brltrlw.jpg)

- **模板** 节点：在此处配置相应的 HTML 代码以创建登录表单，并命名为 “显示面板”。本例使用了 Mustache 模板格式，这是一种简单无逻辑的模板引擎。
  
  ![Figure 8: Template node property configurations](/data/attachment/album/202207/31/091535t3y3858j53838x88.jpg)

- **HTTP 响应** 节点：将其名称设为 “智能停车”。

  ![Figure 9: Http response node property configurations](/data/attachment/album/202207/31/091535cjav29vftyvyrywv.jpg)

#### 提交表单节点配置

- **HTTP 输入** 节点：
  - 方法：选择 "POST"
  - URL：设为 `/project`

  ![Figure 10: Http in node property configurations](/data/attachment/album/202207/31/091535rtzv6r4avxare6ep.jpg)

- **JSON** 节点：设置操作为 “JSON字符串与对象互转”。

  ![Figure 11: JSON node property configurations](/data/attachment/album/202207/31/091536zp0xxpdgficm0oco.jpg)

- **函数** 节点：参考图 12 配置相关属性。

  ![Figure 12: Function node property configurations](/data/attachment/album/202207/31/091536gvu919hmixm1mlhv.jpg)

- **HTTP 响应** 节点：将其名称设为 “已提交项目”。

  ![Figure 13: Http response node property configurations](/data/attachment/album/202207/31/091536jmqaa0gsjscsi4vz.jpg)

> 注意：添加带有注释的评论节点作为 “登录表单” 和 “提交表单”的补充说明。
  
  ![Figure 14: Debug node property configurations](/data/attachment/album/202207/31/091536gn5uh0zwvn2wxnw3.jpg)

### 用户界面控制面板

当用户点击 **提交** 按钮时，输入的数据将在用户界面及调试节点中显示出来。若点击 **重置** 按钮，则会清除已填写的信息，允许用户重新输入新的详情（见图15）。

![Figure 15: User login UI](/data/attachment/album/202207/31/091537lx2l9k6628kffopf.jpg)

此外，地铁站停车费率通过超链接提供，并在用户界面上显示收费表。因此，借助适当的超链接，汽车智能停车系统实现了对地铁站停车费用的自动化展示。最终，自动化系统的输出结果可以在 Node-RED 控制面板的用户界面及调试监视器中查看。

![Figure 16: Metro parking tariff](/data/attachment/album/202207/31/091537ket74ab3le3bddtb.jpg)

---
via: 
作者：[Dr. Maheswari R.](https://www.opensourceforu.com/author/dr-maheswari-r/) 选题：[lkxed](https://github.com/lkxed) 译者：[Maisie-x](https://github.com/Maisie-x) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出