On this csv file:
    DecisionM,IntelligentM,freq,total
    0, 5, 9, 20 
    0, 6, 21,33
    0, 7, 35,65
    0, 8, 35,83
    0, 9, 14,41
    0, 10, 10,26
    1, 5, 11,20
    1, 6, 12,33
    1, 7, 30,65
    1, 8, 48,83
    1, 9, 27, 41,,
    1, 10, 16, 26
`pandas.read_csv()` gives me
    ---------------------------------------------------------------------------
    CParserError                              Traceback (most recent call last)
     in ()
    ----> 1 pandas.read_csv("speeddating.csv")
    /usr/lib/python3.4/site-packages/pandas/io/parsers.py in parser_f(filepath_or_buffer, sep, dialect, compression, doublequote, escapechar, quotechar, quoting, skipinitialspace, lineterminator, header, index_col, names, prefix, skiprows, skipfooter, skip_footer, na_values, na_fvalues, true_values, false_values, delimiter, converters, dtype, usecols, engine, delim_whitespace, as_recarray, na_filter, compact_ints, use_unsigned, low_memory, buffer_lines, warn_bad_lines, error_bad_lines, keep_default_na, thousands, comment, decimal, parse_dates, keep_date_col, dayfirst, date_parser, memory_map, float_precision, nrows, iterator, chunksize, verbose, encoding, squeeze, mangle_dupe_cols, tupleize_cols, infer_datetime_format, skip_blank_lines)
        463                     skip_blank_lines=skip_blank_lines)
        464 
    --> 465         return _read(filepath_or_buffer, kwds)
        466 
        467     parser_f.__name__ = name
    /usr/lib/python3.4/site-packages/pandas/io/parsers.py in _read(filepath_or_buffer, kwds)
        249         return parser
        250 
    --> 251     return parser.read()
        252 
        253 _parser_defaults = {
    /usr/lib/python3.4/site-packages/pandas/io/parsers.py in read(self, nrows)
        708                 raise ValueError('skip_footer not supported for iteration')
        709 
    --> 710         ret = self._engine.read(nrows)
        711 
        712         if self.options.get('as_recarray'):
    /usr/lib/python3.4/site-packages/pandas/io/parsers.py in read(self, nrows)
       1157 
       1158         try:
    -> 1159             data = self._reader.read(nrows)
       1160         except StopIteration:
       1161             if nrows is None:
    /usr/lib/python3.4/site-packages/pandas/parser.cpython-34m.so in pandas.parser.TextReader.read (pandas/parser.c:7403)()
    /usr/lib/python3.4/site-packages/pandas/parser.cpython-34m.so in pandas.parser.TextReader._read_low_memory (pandas/parser.c:7643)()
    /usr/lib/python3.4/site-packages/pandas/parser.cpython-34m.so in pandas.parser.TextReader._read_rows (pandas/parser.c:8265)()
    /usr/lib/python3.4/site-packages/pandas/parser.cpython-34m.so in pandas.parser.TextReader._tokenize_rows (pandas/parser.c:8139)()
    /usr/lib/python3.4/site-packages/pandas/parser.cpython-34m.so in pandas.parser.raise_parser_error (pandas/parser.c:20776)()
    CParserError: Error tokenizing data. C error: Expected 4 fields in line 12, saw 6
This seems odd to me. There's nothing in those fields to worry about anyway,
they can just be dropped. Even if there was data there, if it doesn't have a
column to go with it should be dropped too. Lots of csv files are messy like
this; that's basically why they're used all the time.
I am on pandas '0.15.2' and Python3