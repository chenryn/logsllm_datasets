Noted that the rotation angles A are measured in real time
by the receiver’s IMU sensors. Thus, our algorithm does not
require the GPS receiver to rotate at a constant speed.
Given a set of estimated AoAs {aoasi}, we then compute
their standard deviation δAoA in line 8–9. Considering the
elements in the set are angles, we need to compute the circular
standard deviation [20]. For example, the difference between
1◦ and 359◦ should be 2◦ instead of 358◦. Here, we map
the elements in {aoasi} onto a unit circle and identify the
minimal sized circular curve that covers all the AoAs in the
set. Then we map each AoA to their corresponding position
in [0,2π). After that, we can compute the standard deviation
value, denoted as δAoA. If δAoA is below the threshold Tdev,
we determine the receiver is under spooﬁng attacks.
Since AoA-Dev is based on the standard deviation of AoAs,
it is less sensitive to the inaccuracy of AoA estimations. Also,
using standard deviation makes AoA-Dev less sensitive to
the sensor biases/noises that may affect the measured rotation
angles (i.e., azimuth A).
5.3 CN0-Corr Detection
The above method still needs to infer the AoAs of the received
GPS signals, which requires the GPS receiver to rotate at least
a full circle. The next method, called CN0-Corr, could poten-
tially reduce the required CN0 measurements. CN0-Corr is
based on the observation that CN0 measurements of spoofed
signals from different satellites are more synchronized in
time domain (see Figure 3b) compared to non-spooﬁng cases.
We can capture this pattern by running a cross-correlation
between the received signals as shown in Figure 4.
As shown in Algorithm 2, we compute the correlation
coefﬁcient of every pair of satellites’ CN0 time sequences.
3940    30th USENIX Security Symposium
USENIX Association
ALGORITHM 2: CN0-Corr Algorithm
Input: G,Tcorr
Output: Spoo f Flag
1: Initialization: R ← /0, timewindow = {1,2, ...,N}
2: Preprocessing: Obtain S = {s1,s2, ...,sM} ,Csi =(cid:2)c1si ,c2si , ...,cN si
(cid:3)
from GNSS measurements G
3: for i, j  Tcorr then
7:
8:
9: else
10:
11: end
12: return Spoo f Flag
Spoo f Flag = True
Spoo f Flag = False
(a) Nonspooﬁng
(b) Spooﬁng
Figure 4: Correlation coefﬁcients between normalized CN0-
Time sequences from different satellites in spooﬁng and non-
spooﬁng scenarios. Lines of different colors represent differ-
ent satellites. Note that 4b has the same number of lines as 4a
but the lines are overlapped with each other.
Then we map the pair-wised values into a matrix R, where
each element Ri, j indicates the similarity between signal si
and signal s j. To estimate the overall similarity, we add up all
the Ri, j except for the diagonal element Ri,i, and normalize the
summation by the number of satellite M to get the combined
correlation coefﬁcient r. If r is larger than the threshold Tcorr,
we regard the receiver is under spooﬁng attacks.
The amount of data required for CN0-Corr is small because
this method does not require users to rotate one or multiple
full circles to estimate the correlation. In addition, this method
does not need sensors to report rotation angle, and thus is less
susceptible to sensor noises.
6 Evaluation: Basic Spooﬁng Detection
6.1 Smartphone Prototype
We implemented the detection schemes in an Android app.
The app is used as a proof-of-concept for evaluation — it
is possible to implement the defenses in other ways (more
discussions are in Section 10). We implemented the data
collection and AoA analysis parts based on an open-source
GnssLogger framework [15]. The app has been tested over
multiple phone models, including Xiaomi MIX2 (Android
8.0, Snapdragon 835, supporting GPS L1 Band), Xiaomi MI8
(Android 8.1, Broadcom BCM47755 chip, supporting GPS
L1 and L5 bands), and Xiaomi Redmi Note 7 (Android 9.0,
Snapdragon 660, supporting GPS L1 Band).
The app collects both GNSS measurements from GPS sen-
sors and position sensor data from the accelerometer, gyro-
scope and magnetic sensors using the system APIs. We ﬁrst
ﬁlter out invalid GNSS measurements by verifying their track-
ing state (i.e., the signals must be locked, and TOW decoded).
Then we extract AoE and CN0 readings for each satellite.
The phone’s azimuth readings are derived from position sen-
sor data and are paired with CN0 readings according to the
timestamp.
6.2 Experiment Setup
In the ﬁeld experiment, a victim phone was placed at a ﬁxed
location to perform rotation. The defense app was running
on the phone to collect the GNSS measurements and azimuth
reading. The rotation speed of the victim phone was about
12 seconds per rotation cycle (on average). Recall that our
algorithms do not require the receiver to rotate at a constant
speed, and thus the rotation speed does not need to be perfectly
controlled. The rotation duration for each experiment was set
to at least 30 seconds (rotating about 2.5 cycles). Empirically,
this is more than sufﬁcient for AoA analysis to converge—we
rotated a bit longer than needed to gather extra data points to
experiment with different parameters. The distance between
the victim phone and the spoofer ranged from 1 to 15 meters,
and the elevation angle of the spoofer ranged from 10 to 30
degrees. By default, the spoofer set the victim’s spooﬁng
location to a nearby town, which was about 11 km away from
the true location.
Blocking Materials.
blocking materials, we consider two different types:
To evaluate the impact of different
• Human Body: The phone is held by a researcher in front
of the researcher’s chest. The human body is acting as
the blocking material.
• Metal: We use a 33cm× 36cm 176 layered aluminum
foil sheet and attach it to one side of the phone.
To evaluate the proposed methods, we ﬁrst implemented the
prototype of the defense methods as a smartphone app. Then
we used the app to perform real-world ﬁeld experiments with
the spoofer we built in Section 4.
The reason for testing metal-based shield is to set up the
groundwork for implementing the defense for other systems
beyond smartphones (e.g., automobiles and ships). The mate-
rial should have enough blockage effect on GPS signals, and
USENIX Association
30th USENIX Security Symposium    3941
-50-2502550Lag (second)-101Correlation coefficient-50-2502550Lag (second)-101Correlation coefficientshould not affect the magnetic ﬁeld if a compass is used to
obtain orientation data. Aluminum foil satisﬁes both require-
ments. To make the metal spin together with the phone, we
use a bookend as the support and place them together on a
plastic turntable. A picture for the metal blockage setup is
shown in Figure 20 in the Appendix.
In both cases, the back of the smartphone is attached to the
shield with the screen facing out.
Testing Environments.
ent scenarios, we have two testing environments:
To evaluate the methods in differ-
• Open Air (OA): An outdoor place with no building or
obstacle nearby. The GPS signals are strong which are
not blocked or reﬂected by surrounding buildings.
• Urban Canyon (UC): An outdoor place surrounded
by tall buildings, where the GPS signals are relatively
weaker than those in open air. The signals are easily
blocked or reﬂected by the wall.
Ethics and Legal Considerations.
Considering the po-
tential harms of GPS spooﬁng, outdoor experiments with real
spoofers are strictly prohibited by the authors’ institution as
well as the FCC (Federal Communications Commission) reg-
ulations. To ensure the experiment ethics and legality, we
have the following setups. First, only the non-spooﬁng ex-
periments were conducted outdoor in the true "open air" and
“urban canyon” environments. Second, for the spooﬁng exper-
iments where we run the actual spoofer, we created indoor
environments that have similar radio propagation features for
“open air” and “urban canyon”. More speciﬁcally, the spoof-
ing experiments for open air setting took place in an anechoic
chamber which is a room where RF absorbers are attached to
the wall. These absorbers can signiﬁcantly reduce the signal
reﬂections from the environment, which enable us to simulate
an open air environment far away from buildings [38, 51]. A
picture of the chamber room is shown in Figure 19 in the Ap-
pendix. All spooﬁng experiments in the urban canyon setting
were conducted in a large underground room with multiple
large metal panels to emulate the strong multipath effect on
GPS signals.
6.3 Evaluation Results
We conducted the experiments in four different settings: open
air with a human body as the shield (OA-H), urban canyon
with a human body as the shield (UC-H), open air with the
metal shield (OA-M), and urban canyon with the metal shield
(UC-M). In each setting, we collect data under 40 repeated
non-spooﬁng experiments and 40 repeated simple-spooﬁng
experiments. As stated above, the non-spooﬁng cases were
set up in outdoor environments, and the spooﬁng cases were
set up in lab-created indoor environments (for ethical and
legal reasons).
(a) Open Air with Human Block-
age
(b) Open Air with Metal Block-
age
(c) Urban Canyon with Human
Blockage
(d) Urban Canyon with Metal
Blockage
Figure 5: ROC curve for the detection of basic spooﬁng
attacks. The best performance points are marked out with a
diamond sign. The corresponding threshold values are marked
out in the ﬁgures.
Detection Accuracy.
The main experiment results are
presented in Figure 5. We plot the receiver operating charac-
teristic (ROC) curve where the x-axis shows the false positive
rate (FPR) and the y-axis shows the true positive rate (TPR).
Here, we treat the spooﬁng cases as the “positive” cases. The
ROC curve shows the trade-off between FPR and TPR under
different threshold values of the detection algorithms.
First, we observe that AoA-Dev and CN0-Corr can accu-
rately detect spooﬁng signals for all the four settings. Speciﬁ-
cally, CN0-Corr can achieve a 1.0 true positive rate and 0 false
positive rate in all settings. AoA-Dev can obtain the same
performance in the open air environment, in Urban canyon
environment, it can achieve a true positive rate of 0.90.
Second, we ﬁnd AoA-Diff does not perform well, espe-
cially in the Urban Canyon (UC) environment. The problem
is AoA-diff suffers from the multipath effect in Urban Canyon.
More speciﬁcally, AoA-Diff requires accurately estimating
the angle of arrival. In Urban Canyon, the GPS signals are
either blocked or reﬂected by buildings. The multipath effect
changes the legitimate GPS signals’ AoAs, which leads to a
higher false positive rate. On contrary, AoA-Dev and CN0-
Corr rely on statistical comparisons among different satellites,
which are more robust against the multipath effect.
Given the experiment results (and AoA-Diff’s requirement
for obtaining AoEs, see Section 5.1), we will no longer con-
3942    30th USENIX Security Symposium
USENIX Association
00.51False positive rate00.51True positive rateOA-H71.975.64.2AoA-DiffAoA-DevCN0-Corr00.51False positive rate00.20.40.60.81True positive rateOA-M85.354.84.3AoA-DiffAoA-DevCN0-Corr00.51False positive rate00.51True positive rateUC-H75.649.31.6AoA-DiffAoA-DevCN0-Corr00.51False positive rate00.51True positive rateUC-M71.563.61.8AoA-DiffAoA-DevCN0-Corr7 Adaptive Attack
So far, we show that our defense methods are effective on the
basic attack. Next, we investigate the adaptive attack given
the attacker is aware of the defense methods.
At the high level, the basic attack is detectable because
the spoofed GPS signals have the same AoA. This not only
allows us to detect the spooﬁng attack, but also potentially
reveals the direction of the spoofer (to localize the spoofer or
null the spooﬁng signal). To mitigate this artifact, the attacker
can actively modulate the spooﬁng signals to mimic those of
different satellites during the receiver rotation process, i.e.,
running an adaptive attack. Our threat model for the adaptive
attack is similar to before:
the attacker operates a single
spoofer and has no direct access or visibility to the internal
software/hardware of the GPS receiver.
Figure 8 gives an example of how the adaptive attack could
modulate the spooﬁng signals to mimic the legitimate ones.
The modulation requires knowing the GPS satellites’ AoEs,
the exact rotation speed, and the initial facing angle of the
target GPS receiver. Among these parameters, the satellites’
AoEs are easily available given they are public knowledge.
However, the attacker will need to guess the rotation speed
and the initial facing angle of GPS device. In practice, the
defender can arbitrarily set the rotation speed and the initial
facing angle. More importantly, the defender can even change
the rotation speed in real-time. Given the attacker has no
physical access to the GPS device, it is difﬁcult for the attacker
to know the precise speed of rotation and adapt the modulation
in real time when the rotation speed changes. Essentially, the
rotation speed can serve as a “secret key” that the attacker
needs to guess.
Given a satellite, the attacker needs to ﬁrst compute the
shape of the CN0 curve (i.e., the Sine curve) based on the
angle between the target GPS receiver and the satellite (AoE).
The attacker needs to know the initial facing angle of the re-
ceiver to set the starting phase of the curve. Then the attacker
sets the frequency of the curve based on the rotation speed.
In addition to the phases, the power amplitudes of different
satellites’ signals should be different. A satellite with a higher
elevation ϕel would have a lower amplitude variance (given
the GPS receiver spins horizontally). This is because the
shield will have a weaker blocking effect on their signals. Fi-
nally, the distance between the satellite and the receiver also
matters. A higher distance leads to a lower peak CN0 value.
With the above consideration, an attacker can mimic the
GPS signal for satellite si. We denote this spoofed signal’s
strength as Si(t) which needs to be changed with t during the
rotation process. More speciﬁcally:
Si(t) = [Ai · cos(ωi ·t + γi) + Di]Li(t),
(1)
where Li(t) is the basic spooﬁng signal strength. Symbols
ωi, γi, Ai and Di are the frequency, phase, amplitude, and the
mean signal strength that the adaptive spoofer uses to control
Figure 6: Spoofer detection accuracy (OA-H) within different
rotation duration. Same conﬁguration as that in Figure 5a.
Figure 7: ROC curve for moving spoofer detection (UC-M).
sider AoA-Diff as a viable defense method. For the rest of
the paper, we will focus on AoA-Dev and CN0-Corr.
Detection Speed.
Next, we compare the detection speed
of different algorithms. Given an experiment setting, we