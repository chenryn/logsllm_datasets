What ?
Formally describes operational metrics of a
web service/process
Why ?
To select the most suitable service to carry out
an activity in a process
How ?
Using QoS model for web services
[Cardoso and Sheth, 2002] 172
QoS 173
Benefits
QoS
Composition of processes according to QoS
objective and requirements.
Selection and execution of processes
based on QoS metrics.
Monitoring of processes to assure
compliance with initial QoS requirements.
Evaluation of alternative strategies when
QoS requirements are violated.
173
174
Semantic WP QoS
Research Issues
QoS
x
x
Specification. What dimensions need to be part
y
of the QoS model for processes? y
z
z
Computation. What methods and algorithms can
be used to compute, analyze, and predict QoS?
Monitoring. What king of QoS monitoring
tools need to be developed?
Control. What mechanisms need to be
developed to control processes, in response to
unsatisfactory QoS metrics?
174
175
Web Services
QoS Specification
QoS
Operational Metrics Specification
Operational metrics are described using a QoS
model represented with a suitable ontology.
The specification of Web services
Web Process QoS
operational metrics allows the analysis
and computation processes QoS.
Processes can be designed according
to QoS objectives and requirements.
This allows organizations to translate
their strategies into their processes Web Service Annotation
more efficiently.
175
176
QoS Management
End-to-End process analysis
QoS management is indispensable for organizations
striving to achieve a higher degree of
competitiveness.
Based on previous studies* and our experience with
business processes, we have constructed a QoS
model composed of the following dimensions:
Time
Cost
Reliability
Fidelity
176
*Stalk and Hout,1990;Rommel et al.,1995;Garvin, 1988
177
QoS Models
QoS
A QoS Model describes non-functional properties of a process
Which dimensions should be part of
a QoS model?
Time
Cost Security
Price
Fidelity
Duration
Reliability
Repudiation
Reliability
177
Availability
178
QoS Models and Semantics
QoS
Use Semantics
Security
Z#$%&/
Time
Cost
Cost Price
Fidelity
Price
Duration
Security Reliability Reliability
Repudiation
Time
Duration
Availability
Fidelity
Repudiation
178
Availability
179
QoS in METEOR-S
QoS
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
179
180
QoS
Creation of Estimates
QoS
To analyze a process QoS, it is necessary
to:
Create estimated for task QoS metrics and
Create estimated for transition probabilities
Once tasks and transitions have their estimates set,
algorithms and mechanisms, such as simulation, can be
applied to compute the overall QoS of a process.
180
181
QoS
Estimates for Web Services
QoS
WS runtime behavior description can be composed of
several classes. For example:
QoS Model
QoS Model
Distributional class
Basic class
Basic class Distributional class
Min value Avg value Max value Dist. Function
Time 0.291 0.674 0.895 Normal(0.674, 0.143)
Cost 0 0 0 0.0
Reliability - 100% - 1.0
Fidelity.a 0.63 0.81 0.92 Trapezoidal(0.7,1,1,4)
i
Task QoS for an automatic task (SP FASTA task)
mathematical methods simulation systems
181
182
Web process QoS computation
QoS
Design time| Runtime
Linear
Linear
programming
programming
Price
Security
Simulation
Simulation
Duration
Petri-nets analysis Time
Petri-nets analysis
Repudiation
Cost
Graph Reduction
Graph Reduction Reliability
Fidelity
Techniques
Techniques
Availability
Reliability
Critical Path
Critical Path
Algorithm
Algorithm 182
183
QoS Computation
QoS
Graph Reduction
Technique
QoS
p Send Report QoS
4
t
6
p p
1 3
xor xor xor xor
p p
2 5
t t t t t and and t
1 2 3 4 5 8
Prepare Prepare Sequencing Sequence Create Send
Sample Clones Processing Report Bill
t
7
Store
Report
QoS
QoS
QoS
QoS
QoS QoS
QoS QoS
QoS
QoS QoS
QoS QoS
QoS
183
184
QoS Computation
QoS
Graph Reduction
Technique
p
j
t t t
i j ij
(a) (b)
Reduction of a
Sequential System
T(t ) = T(t) + T(t)
ij i j
C(t )= C(t) + C(t)
ij i j
R(t ) = R(t) * R(t)
ij i j
F(t ).a = f(F(t ), F(t))
ij r i j
184
185
QoS Computation
QoS
Graph Reduction
Technique
t
1 p
p
1b
a1
p p p p
* a2 2b * 1n b
t t t t t t
a 2 b a 1n b
p
p
an
nb
t
n
(a) (b)
Reduction of a
Parallel System T(t ) = Max {T(t)}
1n I∈{1..n} i
∑
C(t ) = C(t)
1n i
1≤i≤.n
∏
R(t ) = R(t )
1n i
1≤i≤.n
F(t ).a = f(F(t ), F(t ), …, F(t ))
1n r 1 2 n
185
186
QoS Computation
QoS
Simulation
While mathematical methods can be effectively
used, another alternative is to utilize simulation
analysis1.
Simulation can play an important role in tuning the
QoS metrics of processes by exploring “what-if”
questions.
In our project, these capabilities involve a loosely-
coupled integration between the METEOR WfMS
and the JSIM simulation system2.
1Miller, Cardoso et al. 2002, 2Nair, Miller et al. 1996; Miller, Nair et al. 1997; Miller, Seila et al. 2000. 186
187
QoS Computation
QoS
SCET
Simulation
SCET (Service Composition and
Execution Tool) allows
to compose services statically by modeling the
process as a digraph in a graphical designer
stores the process description as WSFL based
specification
allows execution of the composed process using Perl
supports a simple execution monitoring feature
supports performance estimation using JSIM
simulation
187
Senthilanand Chandrasekaran, M.Sc. Thesis presented at the Department of Computer Science of the
University of Georgia.
188
QoS Computation
QoS
Simulation
Simulation provides feedback on processes, allowing the
composer to modify his process design by
Replacing services which do not satisfy the expected runtime
behavior with more suitable Web services.
Modifying the process structure (control flow) based on the
simulation runs.
Execution
SCET Process
Composition WSFL
JSIM
Simulation Model JSIM Simulation
Generator
Model
Feedback from
Simulation
188
Senthilanand Chandrasekaran, M.Sc. Thesis presented at the Department of Computer Science of the
University of Georgia.
Examples of Ontologies
190
Examples of Real Ontologies
MGED Ontology
The MGED Ontology
Provide standard terms for the annotation of microarray
experiments.
Terms will enable unambiguous descriptions of how the
experiment was performed.
212 classes, 101 properties.
The MGED Ontology is being developed within the microarray
community to provide consistent terminology for experiments.
This community effort has resulted in a list of multiple
resources for many species.
Approximately 50 other ontologies for different species
The concepts are structured in DAML+OIL and available in
other formats (rdfs)
190
191
The MGED Ontology is Structured in
DAML+OIL using OILed 3.4
191
Source: "The MGED Ontology is an Experimental Ontology,“ 5th Annual Bio- Ontologies meeting (Edmonton, Canada Aug. 2002)
192
MGED Ontology consists of classes,
properties, and individuals (instances)
192
Source: "OntologyEntry in MAGE," MGED 6 (Ai-x en- Provence, France Sept., 2003)
193
MGED Ontology: BiomaterialDescription:
BiosourceProperty: Age
193
Source: "The MGED Ontology is an Experimental Ontology,“ 5th Annual Bio- Ontologies meeting (Edmonton, Canada Aug. 2002)
194
Examples of Real Ontologies
OBO
OBO (Open Biological Ontologies)
Is an umbrella organization for structured shared
controlled vocabularies and ontologies for use
within the genomics and proteomics domains.
194
195
Examples of Real Ontologies
GO Ontology
Gene Ontology (GO)
Describes gene products in terms of their
Associated biological processes,
cellular components and
Molecular functions in a species-independent manner.
GO format - flat files, XML, MySQL
GO format - flat files, XML, MySQL
Component ontology Process ontology Function ontology
1379 terms 8151 terms 7278 terms
212 KB 4.82 MB 1.16 MB
195
196
function.ontology
is the same data element concept as my
is the same data element concept as my
?
?
How does the doctor's medical record system
How does the doctor's medical record system
knows that the data in
knows that the data in
is the same as their systems' element labeled
is the same as their systems' element labeled
?
? 201
202
UDEF
Ontologies Needed
Though semantically equal, the following are 4
different XML tag names
111-222-333
111-222-333
111-222-333
111-222-333
202
Ron Schuldt, Co-Chair, AIA Electronic Enterprise Working Group, XML Standards Relevant to the Aerospace Industry
203
UDEF
The Universal Data Element Framework (UDEF)
cross-industry metadata identification
designed to facilitate convergence and interoperability among e-
business and other standards.
provide a means of real-time identification for semantic
equivalency
seeks only be an attribute in the data element
203
Ron Schuldt, Co-Chair, AIA Electronic Enterprise Working Group, XML Standards Relevant to the Aerospace Industry
204
Ontology Domains
Aerospace and defense,
Automotive,
Consumer products,
Travel,
Telecommunications
Engineering and construction,
Banking
Health care
 +
+
…
204
205
Ontologies-based approaches
Shared Ontologies
Autonomous systems are required to commit to a shared ontology,
and compromises are difficult to maintain when new concepts are
added*.
Even though a shared ontology ensures total integration, constructing
such an ontology is costly, if not impractical.
Data Exchange
Shared Ontologies
*Rodríguez and Egenhofer 2002 205
Ontologies-based approaches 206
Non-Shared Ontologies
Since the Web is a distributed infrastructure with autonomous
systems, it is not reasonable to expect that all the systems will commit
to shared ontologies.
Instead, autonomous systems will use non-shared ontologies.
This will require the integration and mapping of ontologies.
Data Exchange
Integration/Mapping
Local Ontologies
Local Ontologies
206
OWL Language
208
OWL
OWL is a language for defining Web
Ontologies
The OWL language is a revision of the
DAML+OIL