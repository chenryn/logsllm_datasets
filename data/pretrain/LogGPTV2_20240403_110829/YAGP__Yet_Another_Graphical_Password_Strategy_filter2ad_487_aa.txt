title:YAGP: Yet Another Graphical Password Strategy
author:Haichang Gao and
Xuewu Guo and
Xiaoping Chen and
Liming Wang and
Xiyang Liu
2008 Annual Computer Security Applications Conference
2008 Annual Computer Security Applications Conference
YAGP: Yet Another Graphical Password Strategy 
Haichang Gao, Xuewu Guo, Xiaoping Chen, Liming Wang, and Xiyang Liu 
Software Engineering Institute, Xidian University 710071, China 
{hchgao,  xyliu}@xidian.edu.cn 
Abstract 
Alphanumeric  passwords  are  widely  used 
in 
computer and network authentication to protect users’ 
privacy.  However,  it  is  well  known  that  long,  text-
based  passwords  are  hard  for  people  to  remember, 
while shorter ones are susceptible to attack. Graphical 
password  is  a  promising  solution  to  this  problem. 
Draw-A-Secret  (DAS)  is  a  typical  implementation 
based on the user drawing on a grid canvas. Currently, 
too  many  constraints  result  in  reduction  in  user 
experience  and  prevent 
its  popularity.  A  novel 
graphical  password  strategy  Yet  Another  Graphical 
Password (YAGP) inspired by DAS is proposed in this 
paper.  The  proposal  has  the  advantages  of  free 
drawing  positions,  strong  shoulder  surfing  resistance 
and  large  password  space.  Experiments  illustrate  the 
effectiveness of YAGP.  
1. Introduction 
Conventionally,  alphanumeric  text  passwords  are 
used for user authentication. However, it is challenging 
for  users  to  remember  long  complicated  passwords, 
while  short  simple  passwords  are  too  weak  to  resist 
attackers  and  are  therefore  a  security  risk.  Such 
disadvantages  of  alphanumeric  password  seem  to  put 
users in dilemma. 
shown 
tasks, 
Psychologists  have 
recall 
that  with  both 
recognition  and 
images  are  more 
memorable  than  words  or  sentences  [1].  This  is 
encouraging 
terms  of  memory  for  graphical 
passwords  [3].  The  existing  graphical  password 
techniques can be divided into three general categories: 
recognizing  the  pass-images,  repeating  a  sequence  of 
actions  and  reproducing  a  drawing.  Draw-A-Secret 
(DAS)  is  a  representative  “reproducing  a  drawing” 
scheme  which  is  of  particular  interest  and  worthy  of 
extensive  study 
[2].  The  property  of  alphabet 
independence  liberates  users  from  remembering  any 
text  password  and  makes  the  scheme  accessible  to 
speakers of any language. 
in 
Background  Draw-A-Secret  (BDAS)  provides  a 
significant extension to the security and usability of the 
DAS  scheme  by  introducing  background  images  [4]. 
The  background  images  can  encourage  users  to  set 
strong  passwords  and  thus  enhance  memorability. 
Qualitative  Draw-A-Secret  (QDAS)  also  extends  the 
ideas pioneered within DAS [5]. The use of qualitative 
spatial  relations  relaxes  the  tight  constraints  on  the 
reconstruction  of  a  secret,  allowing  a  range  of 
deviations  from  the  original.  In  DAS  based  schemes, 
the user password is a free-form drawing produced on 
an  N×N  grid,  typically  a  5×5  grid.  There  are  many 
restrictions  on  drawing  such  as  keeping  every  stroke 
off the grid lines and ensuring redrawing in the exact 
position, which make it difficult for the user himself to 
recall the secret. 
A  novel  graphical  password  scheme,  Yet  Another 
Graphical Password (YAGP), is proposed in this paper. 
YAGP inherits the strongpoint of DAS and relaxes the 
restrictions  for  users.  First,  the  exact  stroke  positions 
are  no  longer  required,  encouraging  greater  user 
concentration on the image. Second, YAGP provides a 
trend-sensitive 
when 
authenticating 
It  also 
possesses  a  personality-related  capability  of  resisting 
shoulder  surfing  using 
individual  drawing  style. 
Finally, a larger password space is obtained using more 
precise grid granularity. 
mechanism 
reentered  passwords. 
judgment 
the  comparison  algorithm, 
The  remainder  of  the  paper  is  outlined  as  follows: 
Section 2 briefly reviews the current state of the art of 
graphical passwords, but mainly discusses DAS and its 
shortcomings.  Section  3  defines  the  password  format, 
describes 
introduces 
similarity  computation,  and  discusses  security  issues. 
In Section 4, some preliminary experiments and results 
are demonstrated. Finally, Section 5 concludes. 
2. Related Works 
Nowadays,  alphanumeric  passwords  are  mostly 
used  for  computer  and  network  authentication.  Most 
people  tend  to  choose  simple  text  passwords  [6]. 
However,  such  passwords  are  not  strong  enough  to 
the 
1063-9527/08 $25.00 © 2008 IEEE
1063-9527/08 $25.00 © 2008 IEEE
DOI 10.1109/ACSAC.2008.19
DOI 10.1109/ACSAC.2008.19
111
121
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:59:59 UTC from IEEE Xplore.  Restrictions apply. 
the  same 
have 
coordinates are not taken into account. 
internal 
representation 
if 
their 
In  addition,  DAS  imposes  strict  rules  on  the 
location  of  each  stroke  drawn  by  the  user,  posing  a 
major  challenge  for  most  users.  Users  cannot  locate 
strokes  too  close  to  a  grid-line  or  cross  a  corner,  as 
DAS does not accept such a secret. However, it is very 
difficult  for  users  to  avoid  violating  these  rules  as 
illustrated  in  Fig.3.  To  replicate  a  password,  the  user 
must  cross  the  same  cells,  in  the  same  order,  lift  the 
pen  in  the  same  place,  and  make  no  corner  crossings 
[4]. 
(3.a)                      (3.b)                      (3.c) 
Figure  3.  Examples  of  rule  violations  in  DAS. 
(a)  Lines  near  grid  line.    (b)  Endpoints  near 
grid line.  (c) Strokes near cell corner. 
Recently,  some  new  schemes  based  on  DAS  have 
emerged.  BDAS  uses  background  pictures  to  induce 
the  user  to  draw  a  more  complicated  secret  [4]. 
Meanwhile,  the  background  image  helps  the  user  to 
recall 
the  secret  more  efficiently  and  precisely. 
However,  the  experimental  results  reveal  that  the 
performance of BDAS has close relationship to users’ 
artistic  skills  [4].  To  take  best  advantage  of  BDAS 
users  should  have  training  first,  an  obstacle  to  the 
popularity  of  that  scheme.  QDAS  extends  DAS  by 
introducing  grid 
the 
precision of graphical password [5]. It allows users to 
set strong secrets that do not impose a strain on long-
term memory and are resistant to shoulder surfing. The 
use  of  qualitative  spatial  relations  relaxes  the  tight 
constraints  of  DAS,  but  it  still  does  not  solve  the 
problems completely. 
transformation 
to  enhance 
3. Design and Implementation of YAGP 
In  this  section,  a  novel  position-free  graphical 
password  (YAGP)  is  proposed.  YAGP  inherits  the 
advantages of other graphical password schemes, such 
as  DAS.  Moreover,  it  has  its  unique  characteristics 
including  permitting  redrawing  anywhere  on  the  grid 
canvas,  and  analyzing  user  drawing  style  to  resist 
shoulder surfing. 
indicates 
resist  attackers.  The  saying,  “a  picture  is  worth  a 
thousand  words”, 
that  pictures  usually 
contain much more information, and at the same time, 
psychological  research  has  shown  images  are  more 
memorable  than  words  or  sentences.  Therefore,  the 
study  of  graphical  passwords  is  increasing  and  draws 
much attention from many researchers. 
The existing graphical password techniques can be 
divided  into  three  general  categories:  pass-images 
recognition  (Deja  vu[7],  Passfaces[8],  Convex  hull[9] 
etc.), 
(V-GO[10], 
Passpoints[3] etc. ) and drawing reproduction (DAS[2], 
Syukri[11]). 
repetition 
sequence 
action 
(1.a)                      (1.b)                      (1.c) 
Figure 1. The generation of DAS password. (a) 
shows the user’s drawing on the grid canvas. 
(b) is the internal representation of the user’s 
secret.  (c)  depicts  the  storage  of  the  derived 
key. 
DAS  is  a  representative  “drawing  reproduction” 
scheme  in  which  the  password  is  a  simple  picture 
drawn  on  a  grid.  It  is  a  purely  graphical  password 
scheme based on recall, and requires the user to create 
a  free-form  image  on  a  drawing  grid.  The  drawing  is 
mapped to a sequence of coordinate pairs by listing the 
cells through which the drawing passes in the order in 
which  it  passes  through  them,  with  a  distinguishing 
coordinate pair inserted in the sequence for each “pen 
up” event, i.e., whenever the user lifts the stylus from 
the  drawing  surface.  Fig.1  shows  how  DAS  works. 
DAS  constitutes  a  much  larger  password  space  than 
text passwords [2]. 
Figure 2. Three example symbols. 
If we draw a secret within one cell of the grid, there 
would  be  no  difference  between 
internal 
representations of a complicated symbol, a checkmark 
and  a  dot.  As  illustrated  in  Fig.2,  the  three  symbols 
the 
112122
3.1. Password Format 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:59:59 UTC from IEEE Xplore.  Restrictions apply. 
In the grid-based interface, every stroke of an image 
consists  of  three  types  of  elements:  pen-down,  pen-
moving and pen-up. To denote a stroke effectively and 
efficiently, the concept of neighbor in DAS is extended 
and a coding rule is introduced. 
Figure 4. The neighbor grid.     
Let N(x,y) be the eight neighbor positions of a cell (x, 
y), it can be represented as follows: N(x,y)={(x-1, y-1), (x, 
y-1), (x+1, y-1), (x-1, y), (x+1, y), (x-1, y+1), (x, y+1), 
(x+1, y+1)} . As Fig.4 shows, the numbers 1, 2, 3, 4, 6, 
7, 8, 9 are used to represent position information of the 
current  cell  according  to  its  last  neighbor  cell  along 
with  pen  moving  as  a  matter  of  convenience.  This  is 
also  the  coding  rule  of  graphical  password  in  YAGP. 
So in this way, each pen-moving obtains a code. Pen-
up  and  pen-down  in  a  stroke  are  coded  by  ‘5’.  Thus, 
each stroke can be denoted by a coded string bounded 
at both ends by a ‘5’. 
Figure 5. The umbrella example. 
An  example  “umbrella”  drawing  is  depicted  in 
Fig.5,  which  consists  of  two  strokes.  The  code  is 
generated as  follows: the  first pen-down  makes a  ‘5’, 
and the moving of the stylus produces the consecutive 
coded  string  ‘77777766666666666611111’.  Finally, 
the  pen-up  is  also  marked  as  a  ‘5’.  Therefore,  the 
coded 
is 
‘5777777666666666666111115’.  The  second  stroke 
generates coded string in the same way. As a result, the 
coded 
drawing 
is 
‘57777776666666666661111155888888771125’. 
the  whole 
stroke 
string 
string 
first 
of 
for 
the 
3.2. Description of the Comparison Algorithm 
By  comparing  the  reentered  graphical  password 
with  the  predefined  one,  there  are  three  types  of 
matching. 
(1) Complete matching, i.e., the reentered graphical 
password  matches  the  predefined  completely.  That  is 
to say, both of the graphical passwords have the same 
number of strokes and each two corresponding  stroke 
codes are identical. In such a case, the authentication is 
completed successfully. 
(2)  Mismatching,  which  means 
the  reentered 
graphical password does not have the same number of 
strokes as the predefined one, or the Trend Quadrants 
sequences of the former and the latter are not the same, 
i.e.,  the  numbers  of  divided  substrings  are  different. 
Such cases can be treated as a mismatch. 
(3)  Partial  matching,  which  means  there  is  a 
the  reentered  graphical 
similarity  value  between 
password  and  the  original.  This  is  the  most  common 
case. Such a match can be considered successful if the 
value  is  higher  than  a  predefined  threshold  value. 
Otherwise, it becomes a mismatch. 
Three stages of comparison are required to compare 
the  reentered  graphical  password  with  the  predefined 
one. First, the stroke numbers of the original image and 
the  reentered  one  should  be  matched.  Second,  the 
Trend Quadrants sequences of the  stroke pairs should 
be the same. Finally, the similarity of the two images 
should  be  measured.  If  the  similarity  value  is  larger 
than a predefined threshold, the authentication can be 
considered  to  be  successful.  Otherwise,  it  will  be 
determined as a failure. 
Let  N  be  the  number  of  strokes  in  the  original 
graphical password, N’ be the number of strokes in the 
reentered  password,  and  S  be  the  similarity  of  two 
coded  strings.  Based  on 
the 
comparison algorithm is described as Fig.6. 
these  definitions, 
Figure 6. Algorithm 1. 
3.3. Similarity Computation 
The  similarity  computation  algorithm  is  discussed 
in  this  section,  and  also  the  Levenshtein  Distance, 
113123
Algorithm 1 
Step 1 Initialization, S=0; 
Step 2 Count N and N’; 
Step 3 For i=1 to N Do 
Step4; Otherwise, continue; 
End For; 
Compute S;  
Step 4 Return S. 
If N≠N’, goto Step 4; Otherwise, continue; 
Compare the trends of the ith stroke pair ; 
If  they  don’t  share  the  same  trend,  goto 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:59:59 UTC from IEEE Xplore.  Restrictions apply. 
be 
can 
Trend  Quadrants,  and  the  divisions  of  a  stroke  which 
assist the similarity computation are introduced. 
Using  the  umbrella  graphic  as  an  example,  Fig.5 
represents  the  original  graphical  password  image 
which  the  user  predefines,  and  Fig.7  represents  the 
reentered image to be authenticated. The corresponding 
coded 
as 
“5777777666666666666111  1155888888771125”  and 
“5777777666666666366111 
155888888877441225” 
respectively, using the representing strategy described 
above. 
depicted 
strings 
Intuitively,  the  two  graphics  look  alike  on  the 
whole,  but  there  are  some  minor  differences.  The 
current task is to determine the similarity between the 
two  coded  strings,  i.e.,  the  similarity  between  images 
in Fig.5 and Fig.7, so as to decide on the legality of the 
authentication  according  to  the  predefined  threshold 
value. 
Figure 7. The reentered umbrella. 
To  compute  the  similarity  and  obtain  a  more 
effective  comparison, 
regarding 
Levenshtein  distance  and  other  original  methods  are 
introduced first. 
some  concepts 
3.3.1.  Levenshtein  Distance.  There  are  a  number  of 
algorithms used to measure the similarity between two 
approximate  strings,  with  the  most  used  being  the 
Levenshtein  distance  [12].  It  is  also  adopted  in  our 
YAGP strategy. 
The  Levenshtein  distance  between  two  strings  is 
given by the minimum number of operations needed to 
transform one string into the other, where an operation 
can be an insertion, deletion, or substitution of a single 
character.  It  is  often  implemented  by  constructing  a 
distance matrix. For example, the Levenshtein distance 
between  "micky"  and  "monkey"  is  3,  since  the 
following  three  operations  change  one  into  the  other, 
and there is no method to do it with fewer operations: 
(1) micky → mocky (substitution of 'o' for 'i'); 
(2) mocky → monky (substitution of 'n' for 'c'); 
(3) monky → monkey (insert 'e' between 'k' and 'y'). 
,  where  m 
Let 
and n be the length of each string. Let D be an m+1 by 
n+1 matrix where 
 be the Levenshtein distance 
(cid:34)21
tt
jiD
),(
 and 
(cid:34)2
pp
1
2 =
1 =
mp
str
str
nt
ip
and 
tt (cid:34)21
pp (cid:34)2
1
 be 
between 
the Levenshtein distance between str1 and str2 which 
nmD
equals 
),
 locating in the lower right hand corner 
of the matrix. 
. Let 
str
,1
LD
str
)2
jt
(
(
Herein, 
0,
≤≤
j
n
=
jD
j
),0(
−
+
j
iD
(
1),1
−
−
j
iD
(
,1
)1
−
j
iD
,(
)1
⎧
⎪
⎨
⎪
⎩
iD
j
),(
=
min
+
pif
i
=
t
j
then
0
else
1
 (1) 
The  distance  matrix  constructed  for  the  above 
example  can  be  represented 
the 
Levenshtein distance is the bottom-right element ‘3’ of 
the matrix. 
in  Fig.8,  and 
Figure 8. Distance matrix. 
3.3.2.  Trend  Quadrants.  In  order  to  compare  the 
stroke trends between two drawings, a concept named 
Trend  Quadrant  is  proposed  here,  illustrated  in  Fig.9. 
Trend  Quadrant  I  denotes  an  up-right  trend.  In  the 
same  way,  Trend  Quadrant  II,  III  and  IV  denote  up-