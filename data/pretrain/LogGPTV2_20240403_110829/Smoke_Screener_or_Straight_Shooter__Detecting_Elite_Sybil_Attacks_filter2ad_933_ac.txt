to the same Sybil community. It is deﬁned that two users
belonging to the same community have a Sybil social link
if they have collusive reviews, which are similar reviews
posted by two users according to the same store. Based on
these virtual links, we further deﬁne a novel metric, pairwise
similarity metrics, which measure the similarity among the
users. Then, we adopt
the Louvain method [6] to extract
communities from the entire network. Finally, we perform
classiﬁcation to identify the Sybil community from the benign
community.
1) Constructing Sybil Social Links via Collusive Reviews:
To cluster and identify the Sybil community, the ﬁrst step is
to build the social links between the Sybil users, which are
coined as Sybil social links. In general, two users belonging to
the same community and having the collusive reviews posted
in the same store or restaurant are deﬁned to have a Sybil
social link. Speciﬁcally, a tuple abstraction of a user’s single
review is referred to as (U, T, S, L), where U, T , S, and L
represent user ID, review timestamp, store ID, and star-rating
of a review, respectively. For users u and v, we derive review
sets associated with u and v, respectively:
R(u) = {(U, T1, S1, L1), (U, T2, S2, L2),··· , (U, Tn, Sn, Ln)};
m)}.
R(v) = {(V, T
(cid:48)
For all pairwise users u and v, and for a given k,
(U, Tk, Sk, Lk) ∈ R(u), we deﬁne Pu(k) = 1 if there exists
l) ∈ R(v) such that the following three properties
l , S(cid:48)
(V, T (cid:48)
are true:
1) The two reviews are posted in the same store: Sk = S(cid:48)
l;
2),··· , (V, T
(cid:48)
(cid:48)
1), (V, T
l, L(cid:48)
(cid:48)
m, L
(cid:48)
2, S
(cid:48)
2, L
(cid:48)
1, S
(cid:48)
1, L
(cid:48)
m, S
Note: Sim(u, v) = Sim(v, u).
In summary, we model an Sybil community as an undirected
weighted graph G = (V,E), where each node u ∈ V is an user
account and each edge (u, v) ∈ E represents a Sybil social link
among users u and v if and only if Sim(u, v) > βThre.3 Then
users u and v are deﬁned as neighbors.
to detect communities on Sybil social
2) Community Clustering via the Louvain Method: We
then employ a community detection method, termed Louvain
method [6],
links.
The Louvain community detection method iteratively groups
closely-connected communities together to improve the par-
tition modularity. In each iteration, every node represents a
community, and well-connected neighbor nodes are combined
into the same community. The graph is reconstructed at the
end of each iteration by converting the resulting communities
to nodes and adding links that are weighted by the inter-
community connectivity. The entire process is repeated itera-
tively until it reaches the maximum modularity. Each iteration
has a computational cost linear to the number of edges in the
corresponding graph and typically the process just requires a
small number of iterations.
It is noted that community detection algorithms have been
proposed to directly detect Sybils [41]. They seek a partition
of a graph that has dense intra-community connectivity and
weak inter-community connectivity. For example, the Louvain
method searches for a partition with high modularity [6]. How-
ever, we ﬁnd that it is insufﬁcient to uncover massive Sybil
users within Louvain-detected communities. In the follow-
ing step, we apply supervised machine learning to Louvain-
detected communities.
3The threshold βThre is tuned to optimize the following community clas-
siﬁcation in terms of accuracy. Community classiﬁcation results obtained by
multiple supervised learning techniques are not overly-sensitive to the different
thresholds chosen.
6
Construct GraphSybil Community DetectionDataLouvain MethodClassiferSybil CommunityCampaign Window DetectionCampaign WindowElite Sybil User DetectionParticipationRateSybilnessScoreElite Sybil UserUndetected User3) Sybil Community Classiﬁcation: Next, we apply ma-
chine learning classiﬁers to discriminate Sybil communities
from benign ones. The reason behind this is that some com-
munities contain users who reside close-together or visit the
same venues. To accurately characterize these observations,
we apply eight features with respect to three types (tabulated
in Table II) to our binary classiﬁers. The output
is each
community labeled either benign or Sybil. We validate this
intermediate step in Section V-B.
TABLE II
TYPES OF FEATURES
Types of Features
Features
Community-based Features
Network Features
User-based Features
Score deviation, Average number of reviews,
Entropy of the number of reviews in each chain
stores, Entropy of districts of stores
Average similarity,
Global clustering coefﬁcient
Unique reviews ratio,
Maximum number of duplication
(a) Community-based features. There are four types of
Community-based features: score deviation, reviews per store,
entropy of chain stores, and entropy of districts of stores. Score
deviation and Average number of reviews are self-explanatory.
To achieve the Sybil tasks, score deviation of reviews posted
by Sybil users will become larger. Entropy of the number
of reviews in each chain stores is the expected value of
information contained in each of the chain stores by measuring
the number of reviews occurred. We use this feature because
some Sybil users post reviews only in chain stores. Entropy
of districts of stores is a location-based feature to characterize
mobility patterns of Sybil users that are driven by Sybil tasks.
We therefore use Entropy of districts of stores to show this
difference.
(b) Similarity-based network features. We redeﬁne the
network via Sybil social community construction since be-
nign and Sybil communities have remarkable differences with
respect
to the graph structure (see Figure 5(a) and Fig-
ure 5(b)). We use Average similarity and Global clustering
coefﬁcient to show the difference according to the redeﬁned
graph structures. Average similarity is the average similarity
between pairwise users in a community. Sybil users in a Sybil
community are assigned tasks for similar stores, but users in
a benign community randomly choose stores to post reviews.
Hence, similarity values between Sybil users are greater than
those between benign users. Global clustering coefﬁcient is
used to measure the degree in which nodes in a graph tend to
cluster together. Sybil users have the characteristics of team
working, so they are more likely to be clustered together.
(c) User-based features. Since community-based features may
lose information of users, we then abstract the user-based
features of each user and aggregate them as a feature of the
community. By analyzing Sybil communities, we observe that
some Sybil users will repeatedly post reviews in the same
store. We therefore deﬁne two features, Unique reviews ratio
and Maximum number of duplication, to reﬂect this user-
level behavior. Lastly, we do not use linguistic or contextual
(a) Graph structure of a benign
community (community 7914)
(b) Graph structure of a Sybil com-
munity 7924 (community 7924)
Fig. 5. Comparison of the graph structure between a benign community and
a Sybil community
features because these features are not so effective in the
URSN setting [30].
C. Campaign Window Detection
To detect
the time window of a Sybil campaign, one
potential approach is detecting sudden increases in rating,
ratio of singleton reviews, and the number of reviews by
leveraging a burst detection algorithm (e.g., Bayesian change
point detection algorithm [15]). However, on Dianping, Sybil
campaign detection results based on burst detection may not
be reliable in practice. For example, the sudden increases in
ratings or the number of reviews may be contributed by some
unexpected factors such as ofﬂine promotions. An observation
is that a store tends to entice its customers to write favorable
reviews as the return of a discount coupon in promotion
seasons.
Different from the previous research, our proposed solution
focuses on detecting the anomaly collaborative behaviors of
Sybil community. We interpret the algorithm of campaign
window detection in the following. The Algorithm 1 takes
as input a list Lreview that represents the number of reviews
posted each week and does the following:
1) Initializes the start and end points of the campaign
window (Line 1 through Line 2).
2) Iteratively ﬁnds and deletes sparse review intervals
within the campaign window (Line 3 through Line 14).
a) Finds the ﬁrst left and right sparse review intervals
within the campaign window. If none, the functions
will return the entire campaign window (Line 4
through Line 5).
b) If there is no sparse review interval on either side,
breaks the loop (Line 6 through Line 8).
c) Removes the sparse review interval. This can pre-
vent deleting major parts of the campaign window
(Line 9 through Line 13).
The output of Algorithm 1 is the start point and the end point
of each Sybil campaign accordingly.
As shown in Figure 6, it is observed that a campaign period
is comprised of multiple segment periods. We are interested
in those segment periods in which the Sybil users are active
and thus we need to ﬁlter out those periods when the Sybil
users are inactive. To achieve this, we introduce the concept
of Sparse Review Interval, which is used to indicate whether
7
ALGORITHM 1: Detecting Campaign Time Windows
Input: A list Lreview whose item Lreview [i] denotes the number of reviews posted in
the ith week.
Il,l(cid:48) ← ﬁnd(left, l); {Find the ﬁrst sparse interval Il,l(cid:48) from left.}
Ir(cid:48) ,r ← ﬁnd(right, r); {Find the ﬁrst sparse interval Ir(cid:48) ,r from right.}
if (l(cid:48) = r and r(cid:48) = l) then {There is no sparse interval.}
Output: The start point l and end point r of the campaign time window.
Initial:
1: l ← 0;
2: r ← length(Lreview ) − 1;
3: while (true) do
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
end if
14: end while
15: return l, r;
end if
if (|Il,l(cid:48)| ≤ |Ir(cid:48) ,r|) then {Choose the interval with fewer reviews.}
else
l ← l(cid:48) + 1;
r ← r(cid:48) − 1;
break;
Participation rate between users and communities. We
ﬁrst deﬁne participation rate between users and communities
to characterize the extent to which a user is related to a
community. Based on our observations, we assume that the
more campaigns a user participates in, the more likely the
user is an elite Sybil user. Given a community C, we deﬁne:
• NC(k): the accumulated number of reviews posted within
the kth time window of community C.
• N max
C : the maximum number of reviews posted within
all time windows of community C.
We then “normalize” the number of reviews in the kth time
window by PC(k) = NC (k)
, for a given C. PC(k) will help
N max
indicate the importance of a time window, since the larger the
number of reviews is within a time window, the more active
this campaign is in the community. Then for a given user u
in community C, we can calculate the “weighted sum” of the
number of reviews u posts by:
C
(cid:88)
Nu∈C =
PC (k) · Nu∈C (k),
(2)
Fig. 6. An example of campaign time window detection
or not the users are active in this time period. In particular, a
sparse review interval Ii,j (where i represents the start point
of the ith week and j represents the end point of the jth week)
is referred to as the period in which the number of weeks with
at least one review is less than the number of weeks without
any reviews. As shown in Figure 6, with a long time period,
the entire time interval can be seen as a sparse review interval.
In order to avoid removing intervals with massive reviews, our
strategy is scanning the time period from both left and right
to ﬁnd the ﬁrst sparse review intervals respectively, and then
removing the sparse review interval with fewer reviews. We
repeat this process until there is no sparse review interval and
the remaining period is the targeted campaign period.
D. Elite Sybil User Detection
Recall that elite Sybil users are those who often post reviews
not belonging to Sybil tasks like a benign user but occasionally
post fake reviews. The primary reason that the existing Sybil
detection approaches cannot effectively detect elite Sybil users
is that reviews not belonging to Sybil
tasks decrease the
similarity between elite Sybil users. Labeling all reviews of
an elite Sybil user as fake reviews may misjudge some real
reviews, which will take away the enjoyment of the service.
In order to detect elite Sybil users, we take as input the time
windows of Sybil campaigns and corresponding undetected
users. Then we deﬁne the participation rate and Sybilness that
is the perceived likelihood to output an elite Sybil user. Finally
we use Sybilness to quantify each review.
k
where Nu∈C(k) represents the number of reviews u posted
within the kth time window of C. We ﬁnally plug Nu∈C into
a standard sigmoid function to measure the participation rate
ρu∈C between u and C:
ρu∈C =
1
− Nu∈C−µC
σC
1 + exp
for any u ∈ C,
,
(3)
where µC and σC are the mean and the variance of Nu∈C for
all users u in C.
Sybilness. Sybilness score is a perceived likelihood indicating
if a user is an elite Sybil user. Since simultaneously partici-
pating in multiple communities leads to the large cardinality