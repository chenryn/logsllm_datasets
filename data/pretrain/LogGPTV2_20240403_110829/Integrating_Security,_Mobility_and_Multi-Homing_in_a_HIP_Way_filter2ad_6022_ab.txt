able through several topological paths; the node is simulta-
neously  present  at  several  topological  locations.  As  a
consequence,  it  also  has  several  network  layer  addresses,
each of which reﬂects one of the topological locations. In
the general case, the addresses are completely independent
of each other.
2.3. The security problems
There  are  a  number  of  security  problems  associated  with
mobility and multi-homing. These problems stem from the
need of assigning several IP addresses to a single host, and
from the desire of using these addresses in an interchange-
able  way. That  is,  in  an  ideal  mobility  and  multi-homing
solution  the  hosts  can  use  any  of  their  peer’s  addresses
without having to worry about the validity of the address.
Mobile hosts
Possible points of attachment
Singly-homed hosts
Possible points of attachment
Topologically
slowly changing
internetwork
Topologically
slowly changing
internetwork
A host in transit
A multihomed host
Figure 1: The mobility model
Figure 2: The multi-homing model
Peer node
Wrong
packet flow
New address
192.168.0.1
Target node
10.1.1.1
Normal
packet flow
False location update:
10.1.1.1 -> 192.168.0.1
Attacker
Figure 3: Address stealing attack. The peer
 believes that 10.1.1.1 is now at 192.168.0.1
Given  this,  there  are  two  basic  security  problems:  ad-
dress stealing and address ﬂooding. In an address stealing
attack  a  malicious  node  claims  to  “own”  an  address  that
some  other  node  is  currently  using,  with  the  intention  of
launching  a  masquerade,  man-in-the-middle  or  denial-of-
service attack against the owner of the given address. In an
address  ﬂooding  attack  a  malicious  node  (or  group  of
nodes) makes a large number of innocent peer nodes to be-
lieve that the attacker has become (better) available at a tar-
get  address,  causing  the  peer  nodes  to  ﬂood  the  target
address with unwanted trafﬁc.
Based  on  the  mobility  and  multi-homing  models,  it  is
easy to see how an attacker can launch the ﬁrst attack. It
simply informs the peer node(s) of the target node that the
target node has moved into a new address. Unless the re-
cipient of this location update is able to securely verify that
the sender of the update indeed was earlier at the target ad-
dress, all the future trafﬁc destined to the target address is
directed  elsewhere,  resulting  in  masquerade,  denial-of-
service, or man-in-the-middle situation, depending on the
other  actions  and  the  actual  location  of  the  attacker. This
attack is illustrated in Figure 3.
The second attack results from failing to check that the
sender  of  an  address  update  is  indeed  reachable  at  the
claimed  new  address.  If  a  recipient  of  an  address  update
blindly  starts  to  send  messages  to  the  new  address,  the
messages may be delivered to an innocent third party that
now receives excess trafﬁc. While one node sending bogus
packets  may  not  be  that  bad,  hundreds  or  thousands  of
nodes sending extra trafﬁc at the same time are likely to ﬁll
the  communication  link  causing  denial-of-service.  See
Figure 4.
While these security problems can be solved to an ex-
tend  with  reachability  checking  [27],  it  is  hard  to  com-
pletely solve the problems within the current architecture.
There is no way of checking that a node claiming to be a
given address is actually the node that is indeed located at
False location updates:
10.10.1.1 -> 192.168.0.1
Peer node
Peer node
Flooding
packet flows
Target address
192.168.0.1
10.10.1.1
Attacker
Figure 4: Flooding attack
the address, topology wise. That is, when Bob is communi-
cating  with  someone  that  Bob  thinks  is  at  an  address A,
Bob cannot be sure that someone is actually at A and not at
some topologically intermediate point between A and Bob,
or at a point close to A or Bob, thereby being able hear all
the messages that Bob sends to A. 
Since the IP addresses are used as the primary identiﬁ-
ers today, Bob cannot explicitly say that he wants to talk to
Alice, but he must simply send packets to the address that
he believes that Alice has. Thus, if Bob wants to talk to the
Alice,  supposedly  at  A,  and  ends  up  talking  to  Carol  at
some intermediate point, Carol can easily tell Bob that she
has moved to a new address D even if reachability checks
are used. 
Within the scope of the current architecture, the only re-
ally secure solution would be to provide a credential infra-
structure binding addresses to public keys, thereby creating
the possibility of binding nodes and addresses in a stronger
sense. However, providing such an infrastructure would be
extremely hard due to practical reasons.
3.
Related work
As we already mentioned, our work is mostly based on the
HIP drafts [1][7][8], with quite a lot of inﬂuence from Noel
Chiappa’s and Steven Bellovin’s writings [2][3], the IRTF 
NSRG  report  [4],  and  our  work  in  securing  Mobile  IPv6
[5][11][12][13]. The real background was laid out by Jer-
ome  Saltzer  in  his  seminal  works  [14][15],  but  he  was
clearly ahead of his time. 
In addition, there are a number of less related existing
and proposed approaches to address end-host mobility and
multi-homing. In this section we give a brief overview of
the other works that we know of, starting from well estab-
lished  approaches,  and  proceeding  to  more  adventurous
proposals.
SCTP. Stream  Control  Transport  Protocol  (SCTP)  is  an
IETF  proposed  standard  transport  protocol,  which  may
eventually replace TCP and perhaps also UDP. In it, each
communication  process  is  associated  with  several  IP  ad-
dresses.  While  the  SCTP  approach  is  sound  as  such,  the
proposed mobility extensions [16] are bound to be plagued
with the same security problems that Mobile IPv6 was re-
cently  hit  (see  below).  Since  SCTP  does  not  include  ex-
plicit end-point identiﬁers, solving the security issues in a
scalable way may be even harder than with Mobile IPv6. 
Mobile IPv6. In Mobile IP, a static address is assigned to
each node. Mobile IP does not currently address end-host
multi-homing,  but  there  are  informal  proposals  ﬂoating
around how a single mobile node could use multiple home
addresses and multiple care-of-addresses at the same time
[17].  Until  recently,  the  largest  unsolved  problem  in  Mo-
bile  IPv6  was  achieving  a  scalable  security  solution. The
currently proposed solution is based on the ideas of relying
on the routing infrastructure to check that a mobile node is
reachable both at its claimed home address and its claimed
current address (care-of-address) (Return Routability, RR).
This approach is not very secure, even though it is claimed
to be (almost) as secure as the current IPv4 internet. Thus,
there are discussions going on about better proposals, e.g.
hashing a public key and other information to the low order
bits of an IPv6 address (Cryptographically Generated Ad-
dresses, CGA) [9][13].
Multi-homed TCP. Multi-Homed  TCP  [18]  was  a  pro-
posal by Christian Huitema to extend the TCP protocol to
handle end-host multi-homing and mobility. The basic idea
was to replace the port numbers (TLIs) with a single 32 bit
Protocol  Control  Block  Identiﬁer,  which  becomes  inde-
pendent of the IP addresses used. On the security side, the
work did not really address the authentication or denial-of-
service problems; we believe that addressing them would
have led to an architecture more or less similar to the pre-
sented one.
LIN6. LIN6  [19]  is  an  approach  somewhat  similar  to  the
8+8 or GSE [20]. The basic idea is that each host has a 64
bit  globally  unique  identiﬁer,  called  LIN6  ID,  which  is
present in the IPv6 interface identiﬁer portion of all IP ad-
dresses  used  by  the  node. At  this  writing,  the  largest  un-
solved  problems  in  LIN6  are  related  to  the  scalability
aspects in the security side. The address update messages
are protected with IPsec AH, thereby requiring some kind
of global infrastructure in order to establish the required se-
curity associations.
Homeless Mobile IPv6. Homeless  Mobile  IPv6  [21]  was
an idea by Nikander et. al. of adding end-host multi-hom-
ing  to  Mobile  IPv6,  and  at  the  same  time  getting  rid  of
home  addresses  and  much  of  the  extension  header  over-
head. The basic idea was fairly similar to SCTP, but the im-
plementation  was  placed  on  the  network  layer  instead  of
the transport layer. The project did not properly address the
involved security problems; instead, the security considera-
tions lead to the deﬁnition of the address ownership prob-
lem [12][22].
TCP Migrate. Snoeren and Balakrishnan [23] propose an
extension  to  the  TCP  protocol  that  allows  the  TCP  end-
points to migrate from an address to another. Being struc-
turally fairly similar to Huitema’s Multi-Homed TCP, the
approach solves the security issue through using unauthen-
ticated  Elliptic  Curve  (EC)  Difﬁe-Hellman  to  generate  a
session  key,  separately  for  each  TCP  session.  However,
they  do  not  solve  the  double  jump  problem,  and  rely  on
Dynamic DNS for initial contact. 
4.
Architecture
This section deﬁnes our Host Identiﬁer based multi-hom-
ing, mobility, and security architecture. In Section 4.1, we
outline  the  overall  architecture  as  a  layered  structure.  In
Section 4.2  we  give  the  exact  deﬁnitions  for  the  required
terminology and components. As it turns out, just deﬁning
the terminology in a new way naturally leads to looking at
the mobility and multi-homing situation from a new point
of  view.  That,  in  turn,  leads  to  the  new  architecture,  and
provides the basic facilities for multi-homing and mobility
trivially, as discussed in Section 4.3. The end of this sec-
tion  discusses 
the  architecture
(Section 4.4)  as  well  as  the  resulting  API  (Section 4.5),
while in Section 5 we show how the new architecture also
solves the security problems currently hampering mobility
and multihoming.
the  ﬁne  points  of 
4.1. Layered structure
It is easiest to describe our new architecture by comparing
it to the existing one. Figure 5 describes the current archi-
tecture. In that, processes are bound to transport layer sock-
ets, and the sockets are identiﬁed by using IP addresses and
ports.  More  formally,  the  ports  may  be  called  Transport
Layer Identiﬁers (TLI). As a result, this structure binds the
processes to a speciﬁc topological location, thereby mak-
ing  process  migration,  end-host  mobility,  and  multi-hom-
ing hard.
The new structure is described in Figure 6. In the new 
architecture,  the  transport  layer  sockets  are  no  longer
named with IP addresses but with separate host identiﬁers.
The host identity layer translates the host identiﬁers into IP 
addresses. This is achieved by binding a Host Identiﬁer to
one or more IP addresses. This binding may be a tempo-
rally  dynamic  relationship,  resulting  in  mobility  support,
Process
sockets
Transport layer
 pairs
Bindings in the 
current architecture
Bindings in the 
new architecture
Process
Socket
Process
Socket
Internetworking layer
IP addresses
End-point
End-point
HI
translation
(ARP or ND)
Link (network) layer
Link layer addresses, e.g.
Ethernet MAC addresses
IP address
dynamic
binding
Location
Location
IP address
Figure 5: The current architecture
Figure 7: Bindings
and simultaneously a one-to-many relationship, providing
multi-homing support.
Bindings. Compared  to  the  current  architecture,  the  new 
architecture results in different bindings between the enti-
ties  and  identiﬁers.  This  is  illustrated  in  Figure 7.  In  the
current architecture, IP addresses are used to denote both
hosts (end-points) and topological locations. In the new ar-
chitecture,  these  functions  have  been  separated,  and  the
hosts  (end-points)  are  denoted  with  Host  Identiﬁers.  Fur-
thermore, the binding between a Host Identiﬁer and the IP 
address(es) is made dynamic. As we explain in Section 5,
due to the cryptographic nature of the Host Identiﬁers, it is
fairly easy to secure the signalling messages needed to up-
date this binding.
Process
sockets
Transport layer
 pairs
Packet structure. At the logical level, the new architecture
also requires changes to the packet structure. That is, each
packet  must  logically  include  the  Host  Identiﬁers  of  the
sender and recipient. However, whenever IPsec is used, the
IPsec Security Associations can be used as a short-cut for
Host  Identiﬁers,  resulting  in  packets  that  are  similar  to
those used today. This is illustrated in Figure 8, and further
discussed in Section 5.2
4.2. Components in detail
To make the architecture deﬁnition both deﬁnite and rooted
to  reality,  we  next  precisely  deﬁne  the  relevant  concepts
and  terminology.  The  relationships  between  the  concepts
are also described pictorially in Figure 9.
Interface. A  network  interface.  Usually  a  network  inter-
face  is  a  physical  piece  of  equipment  that  a  host  uses  to
connect  to  a  network.  For  example,  an  Ethernet  NIC  is
such a piece of equipment. However, an interface may also
be completely virtual. 
Each interface can be assigned one or more addresses.