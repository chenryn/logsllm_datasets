### Range of Values and Measurement Uncertainty

The range of values for which a measurement system is applicable, with a specified level of uncertainty, is defined under specific conditions. The importance of considering the measurement time for a complete characterization is intuitive: it is directly linked to the cost in terms of resource utilization, and the reciprocal of the measurement time provides an upper bound on the number of measurements that can be performed per unit of time.

### Minimizing System Intrusiveness

It is well established that any measurement system perturbs the measurand, leading to a modification of its value. Therefore, when designing a measurement system, it is desirable to minimize such perturbation, thereby reducing the system's intrusiveness.

### Comparing Measurement Intervals

Since measurement results are typically expressed as ranges of values, intervals measured by different instruments should be compared rather than single values. If these results are expressed with the same confidence level, they are considered compatible if their respective intervals overlap.

### Metrology and Dependability in Computing Systems

Adapting the metrological concepts discussed in the previous section to the field of computing systems is not straightforward. In this section, we classify computing systems and the types of measurements that are relevant for such systems, particularly in the context of dependability evaluation. Based on this classification, we highlight the most significant measurement properties that should characterize tools designed to operate on different kinds of systems.

#### Classification of Measurements in Computing Systems

Measurements on computing systems, especially those related to dependability, can be divided into two main categories:

1. **Measurements with Negligible Uncertainty:**
   - This class includes static quantities that depend on the static characteristics of the system, as well as countable dynamic quantities that depend on a particular execution.
   - Examples include:
     - Number of source code lines
     - Number of system calls
     - Packet size in packet-switched networks
     - Queue size of a network protocol
     - Number of packets sent over a point-to-point channel
     - Number of messages received by a network interface
     - Maximum memory size of an application
     - Maximum number of records in a database table
   - These measurements typically result in integer counts and have very low uncertainty.

2. **Measurements with Non-Negligible Uncertainty:**
   - This class generally refers to the dynamic behavior of the system and often involves the estimation of continuous quantities.
   - Examples include:
     - Delays experienced in end-to-end connections
     - Quality of clock synchronization
     - Mean Time To Failure (MTTF)
     - Mean Time Between Failures (MTBF)
     - Direct and indirect measurements based on distributed events
   - These measurements are more challenging and often involve significant uncertainty, particularly in time interval measurements.

#### Classification of Computing Systems

To better understand the metrological requirements, computing systems can be classified along the following dimensions:

1. **Real-Time:**
   - **Time-Free Systems:** No timing constraints or temporal requirements.
   - **Hard Real-Time Systems:** Well-defined and strict constraints on temporal behavior. The correctness of operations depends on both logical and temporal factors.

2. **Criticality:**
   - **Non-Critical Systems:** Failure does not result in significant damage.
   - **X-Critical Systems:** Failure can lead to dangerous events such as loss of life, property damage, or environmental damage. Examples include medical devices, aircraft flight control, weapons, and nuclear systems.

3. **Centralized vs. Distributed:**
   - **Centralized Systems:** Composed of a single node, possibly decomposed into non-autonomous and closely coupled parts.
   - **Distributed Systems:** A set of distinct nodes with minor and potentially unstable coupling, interconnected by a network, cooperating for common objectives.

### Importance of Metrological Properties

Depending on the category of the system, certain metrological properties are more or less important and may be more or less difficult and costly to apply and assess. The key properties for dependability evaluation include:

- **Uncertainty:** Essential for evaluating the quality of the measurement, especially in safety-critical and real-time systems.
- **Intrusiveness:** The impact of the measurement system on the performance of the computer system, expressed in terms of memory usage, CPU usage, and operating system relative time.
- **Resolution:** Critical in real-time systems, where it needs to be much lower than the imposed time deadlines.
- **Repeatability:** Important in critical systems, where the same behavior must be observed under the same execution trace.

### Summary Table

| Property | Centralized | Distributed |
|----------|-------------|-------------|
| **Uncertainty** | X (Important) | XX (Fundamental) |
| **Intrusiveness** | X (Important) | XX (Fundamental) |
| **Resolution** | X (Important) | X (Important) |
| **Repeatability** | X (Important) | XX (Fundamental) |

### Repeatability in Computer Systems

Repeatability is often challenging in computer systems due to the difficulty in maintaining the same environmental conditions, especially in distributed systems. For critical systems, achieving high repeatability is crucial for experimental validation, as it ensures consistent behavior under the same execution trace.

### Conclusion

This section has provided a detailed classification of computing systems and the types of measurements relevant for dependability evaluation. It has also highlighted the key metrological properties that should be considered when designing measurement tools for different kinds of systems. Understanding and applying these principles is essential for ensuring reliable and meaningful measurements in the field of dependable computing systems.