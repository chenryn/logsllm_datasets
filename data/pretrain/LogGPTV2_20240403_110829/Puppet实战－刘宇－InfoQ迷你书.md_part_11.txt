set X-Client-Verify %{SSL_CLIENT_VERIFY}e
On
set
X-Client-DN %{SSL_CLIENT_S_DN}e
/var/lib/puppet/ssl/crl.pem
/var/lib/puppet/ssl/certs/ca.pem
 /var/lib/puppet/ssl/certs/ca.pem
optional
 /var/lib/puppet/ssl/ca/ca_crl.pem
+StdEnvVars +ExportCertData
/var/lib/puppet/ssl/ca/ca_crt.pem
0.0.0.0:*
第15章Puppet 架构扩展与分布式·241
LISTEN
16955/httpd
---
## Page 70
242第四部分进阶篇
15.2.3 Nginx+Passenger 模式 
前的 App 为 puppetmasterd、PID 为 17098、进程数为 3、启动时间为1分3 秒。
大地扩展 Master 能够管理的节点的数量。
PUT 请求表示 Puppet Agent 提交了一个报告。
nginx/nginx_
为了进一步验证配置的正确性，我们需要查看 Master 的目志与 Apache 服务的日志。
通过 Passenger 相关的命令，可以查看服务器相应的状态信息，使用 status 可以看到当
目前的配置已经为 Puppet Master 添加了一个Apache 服务和 Passenger 前端，它们能极
Puppet 3.0以上版本不再支持 Mongrel模式，读者肯定会问为什么不采用并发处理能力
7）查看Passenger 状态，方法如下：
10.210.213.219 -
Puppet Agent 并没有任务提示表示 Puppet Master 服务已经从 WEBRick 切换到了 Apache,
/usr/share/puppet/rack/puppetmasterd:
Waiting on global queue: 0
$ sudopassenger-status 
10.210.213.219
10.210.213.219 - - [26/Jan/2013:23:35:02 +0800] "P0ST /production/catalog/agent.
$ tail /var/log/httpd/access_log 
active
max
在 Master 端查看 Apache 服务的日志:
count
spuooas to'e ut unz boteaes paustute (aaddna/uoo·utewop'zuabe//)
$ tail /var/log/message
在Master端查看相应的日志：
notice: Finished catalog run in 3.04 seconds
.…..….
$ sudo 
App root: /usr/share/puppet/rack/puppetmasterd
PID:17098
----- Application groups -----------
 puppet agent·
= 12
--- General information -----------
Sessions: 0
2006805
[26/Jan/2013:23:35:13 +0800] "pUT /production/report/agent.domain.com
--server puppet.domain.com --test -noop
Processed: 3
Uptime: 1m 3s
---
## Page 71
gems/1.8/gems/passenger-3.0.19/ext/nginx'
-3.0.19/ext/nginx'# 等待编译安装完成
的模块，同样也可以作为 Nginx 的模块。
更强、性能更优异的Nginx 取代 Apache 呢？答案是可以的，Passenger 既然可以作为 Apache
--with-cc-opt='-Wno-
修改 nginx.conf，添加 Passenger 模块配置，本例添加的内容如下:
4）配置Nginx。
$ sudo chown -R puppet:puppet /etc/puppet/rack/ 
3）创建 rack 目录并配置 Rack 应用，具体如下:
#add-modules 添加 Passenger 模块
$ ./configure --user=daemon --group=daemon
2）手工编译安装 Nginx，并加载Passenger 模块，具体如下:
$ sudo mkdir -p /etc/puppet/rack/public 
http
使用以上命令编译安装完成后会提示 Nginx 加载 Passenger 模块的用法如下:
S
Please specify a prefix directory [/opt/nginx]:
Please specify the directory:/usr/local/src/nginx-1.3.11 #输入 nginx 源代码目录
#在选择1的情况下，
$ sudo passenger-install-nginx-module
$
1）安装 Passenger 和 Nginx，方法如下:
下面以 Centos 5 为例讲解配置步骤。
命令会给出两个选项
运行 passenger-install-nginx-module 命令可以选择自动安装 Nginx 和 Passenger,
cp /usr/share/puppet/ext/rack/files/config.ru /etc/puppet/rack/ 
cd nginx-1.3.11
tar zxf nginx-1.3.1l.tar.gz
wget http://nginx.org/download/nginx-1.3.11.tar.gz
 sudo gem install rake rack passenger
cd /usr/local/src
passenger_ruby /usr/bin/ruby;
:61'0'e-rabuassed/swab/8'1/swab/Aqnx/v9qtt/xsn/ 4oox xabuassed
--prefix='/opt/nginx'
-error"
会自动下载 Nginx 并安装，选择 2的情况下会提示
-add-module=' /usr/lib64/ruby/gems/1.8/gems/passenger
。Passenger 文档也有对应的 Nginx 说明。
--prefix=/usr/local/nginx_passenger/ --with-
第15章Puppet架构扩展与分布式·243
(recommended)
#选择安装路径
---
## Page 72
244
活的最大数量。如果服务器性能足够好，又想控制 Puppet 占用系统内存在1GB 以内，可以
第四部分进阶篇
15.3
现在已经将 WEBRick 替换成了Web 服务器。然而，有时可能需要提供比单台服务器
到此为止，我们就实现了Nginx+Passenger 模式的架构。在使用 Passenger 时，不管前端
SSL 配置，需要修改至自己的环境。
 Passenger 配置，默认不需要修改。
以上代码中定义了：
server
添加 Puppet 对应的 Nginx 虚拟主机，puppet.domain.com.conf 内容如下：
ssl_session_timeout
ssl_session_cache
ssl_verify_depth
ssl_verify_client
ssl_prefer_server_ciphers
ssl_ciphers 
ssl_client_certificate
ssl_certificate_key
ssl_certificate
root
error_log
access_log
passenger_set_cgi_param
passenger_set_cgi_param
passenger_enabled
server_name
ssl_crl
listen
架构扩展之多台 Puppet Master
include vhosts/*.conf;
passenger_max_pool_size 15; 
passenger_ruby
passenger_root 
# Passenger needed for puppet 
/usr/bin/ruby;
 /usr/lib64/ruby/gems/1.8/gems/passenger-3.0.19;
5m;
shared:SSL:128m;
optional;
on;
SSLV2:-LOW:-EXPORT:RC4+RSA;
/var/lib/puppet/ssl/certs/ca.pem;
/var/lib/puppet/ssl/ca/ca_crl.pem;
/var/lib/puppet/ssl/certs/puppet.domain.com.pem;
/etc/puppet/rack/public;
/var/log/nginx/puppet_error.log;
/var/log/nginx/puppet_access.log;
HTTP_X_CLIENT_VERIFY $ssl_client_verify;
HTTP_X
on;
puppet puppet.domain.com;
8140 ssl;
1：
_CLIENT_DN $ssl_client_S_dn;
---
## Page 73
和 Catalog 请求。这种组合的架构流程如图 15-3 所示。
所示。
Catalog。这种组合的架构流程如图 15-2
同台服务器，利用 HTTP 负载均衡代理
介绍。
下面我们就各种组合的架构流程图进行
合方式。比较典型的组合方式有5种。
WEBRick。
的服务器可以直接使用 Web 服务替换
个 Puppet Master 都是单独配置。后端
户端的请求直接导向后端服务器。每
选择使用 HTTP 负载均衡技术将客
有多种方法和策略可供选择。我们
多的处理能力。
Puppet Master。
更多的处理能力，以解决单机单点故障。在这种情况下，除了纵向扩展外，还可以横向扩展
1）组合方式一：CA与Master在
集群的架构扩展有着多种变通与组
要提供一个前端的请求处理程序
组合方式二的缺点为不适合多机房跨运营商部署。
口用户与负载均衡器之间及负载均衡器与后端之间均为 HTTPS 请求。
此组合的工作原理和组合方式一类似，代理请求将 CA 和 Catalog 分别转发到不同
组合方式二的工作原理：
2）组合方式二：Master 与CA 位于独立的服务器，利用 HTTP 负载均衡器代理转发CA
解决CA 与负载均衡器单点故障。
口不适合多机房跨运营商部署。
负载均衡器存在单点故障，且扩展不方便。
组合方式一的缺点：
口此架构适用于单机房扩容，并且要求所有服务器主机名相同。
 manifests 代码通过 rsync 同步、GIT 或共享存储来实现。
口后端 Puppet Master 采用 Webserver 替代 WEBRick 以提升性能。
负载均衡通过代理Catalog 请求至多台机器，以达到负载均衡的目的。
客户端证书由负载均衡器上的CA 颁发，即通过代理转发CA 请求至本地。
组合方式一的工作原理：
后端。
。横向扩展是使用多台服务器提供 Puppet Master 服务以组成一个集群来获得更
图15-2Master 集群扩展组合方式一（Master 与 CA 混和）
puppet.domain.com
Active
 Puppet Master
一
Puppet Agents
第15章Puppet 架构扩展与分布式·245
puppet.domain.com
Puppet Master
Active
CA+Master
Webserver
http
https
requests
Proxy catalog
......
---
## Page 74
246第四部分进阶篇
这种组合的架构流程如图 15-5 所示。
Master，HTTP 负载均衡代理CAfunctions。这种组合的架构流程如图 15-4 所示。
4）组合方式四：CA和 Master位于独立服务器，并指定CA服务器和 Master 服务器。
3）组合方式三：Master与CA位于独立服务器，利用DNS 轮询或分区域解析至
组合方式三的缺点为配置较复杂。
Master 通过代理转发CA 请求至 CA服务器。
口通过 DNS 扩展达到多机房部署。
组合方式三的工作原理：
puppetcal.domain.com puppetca2.domain.com puppet1.domain.com
---
PuppetCA
图15-4Master 集群扩展组合方式三（Master 与 CA 独立，DNS 轮询)
puppetlb.domain.com
Active load balancer
puppet.domain.com
Active
图15-3
close CA
Proxy CA functions
1
Puppet Master
Master 集群扩展组合方式二（Master与CA 独立）
PuppetCA
一
PuppetLB
Agents
Puppet
Puppet Master
一上
Puppet Agents
CA+Master
DNS
Active
Puppet Master
PuppetMasters
client2.domain.com
client1.domain.com
Puppet Agents
一
一
Standby load balancer
PuppetLB
puppet2.domain.com
Puppet Master
Active
.....
一
一
一一
L
---
## Page 75
WEBRick 以详解Puppet 集群架构配置过程。
此笔者就不过多说明这种组合方式了
 puppetca.domain.com
puppetlb.domain.com
主机的 IP 地址信息及用途如表15-1所示。
下面将采取组合方式四并利用Nginx 进行负载均衡，采用Nginx+Passenger 模式替换
当集群内 Master 主机名不同时，增加一台 Master 服务器需要在CA 服务器上重新授权。
Master是CA 的域授权，在配置集群架构时，需要特别注意这一点，所有的 Master
特别说明：
5）组合方式五：共享一个证书。共享一个证书文件需要将证书文件分发至客户端，因
agent.domain.com
puppet.domain.com
组合方式四的缺点：暂时没有发现。
Master 集群可以在同一机房配置负载均衡器，也可以使用 DNS 解析 Puppet Master 域
口
CA服务器可以部署在多个机房。
客户端通过配置 ca_server 指定 CA 服务器，以达到独立 CA 服务器的目的。
组合方式四的工作原理：
都需要通过CA 获得授权。
集群内 Master 主机名可以相同也可以不同，建议一个集群内的 Master 主机名相同；
名到不同机房的多台服务器，通过 DNS 实现负载均衡。
器上重新授权。
在增加 Master 或故障时需要安装好软件，并配置相同的证书文件。不需要在CA 服务
主机名
 PuppetCA
图15-5Master 集群扩展组合方式四（Master 与CA 独立且要指定)
一
Active PuppetCA
 PuppetCA
10.210.215.254
10.210.213.219
10.210.213.217
10.210.215.251
1
IP地址
表 15-1主机的 IP 地址信息及用途
CA funtions
Puppet Agents
Puppet Master
 catalog requests
一
Puppet认证服务器，处理CA funtions
Puppet 服务端，处理 catalog requests
一
Puppet 客户端