privacy  to  gain  protection,  or  otherwise  sacrifice  protection  to 
preserve privacy. 
Website’s  initiative:  To  enable  protection,  an  opt-in  website 
configures  a  secure  cookie  with  a  far  future  expiration  date  in 
every valid HTTPS response as below: 
Set-Cookie: ForceHTTPS;Expires=Wed, 01-Jan-
2020 00:00:00 GMT;Secure 
Upon receiving this cookie, a ForceHTTPS-capable browser will 
enable the protection until the cookie expires or is cleared. 
  However, the ForceHTTPS protection is frequently neutralized 
if users are to use privacy modes (available now in every browser, 
e.g.  Incognito  Mode  of  Google  Chrome)  which  are  designed  to 
purge  cookies  and  browsing  histories  after  a  session.  The  same 
result  can  also  be  achieved  by  users  who  manually  clear  their 
cookies  and  browsing  histories.  As  a  result,  even  if  a  service 
provider takes the initiative to setup the protection, it is still easily 
neutralized on the client-side. On the other hand, the cookie must 
be  present  either  in  all  HTTPS  requests  or  responses.  After  our 
paper  is  submitted,  we  later  find  that  ForceHTTPS  is  further 
developed  and  evolved  as  Strict  Transport  Security  [12]  which 
still suffers from the same limitations. 
User’s  initiative: Users’ efforts are required to prepare domain-
specific  profiles  that  identify  HTTPS  URLs  using  regular 
expressions. The tool is to deny access to pages that are no longer 
served over valid HTTPS. However, it is intrinsically difficult for 
public  users  to  define  any  rules  to  sort  out  all  HTTPS  pages  of 
numerous websites that are not built by them, not to mention that 
websites are frequently changing. For a simple website that can be 
specified with a few rules of regular expressions, advanced users 
can  probably  afford  to  do-it-themselves.  But  in  case  a  website 
requires  a  more  sophisticated  profile  to  work  with,  users  will 
likely  give  up  preparing  the  profile  themselves  or  copy  profiles 
distributed  by  other  devoted  or  even  malicious  contributors. 
Currently  the  tool  lacks  a  way  to  prove  the  authenticity  and 
reliability of any rules with the website owners. 
7.2  Force-HTTPS in Google Chrome 
  It is the first browser ever released to allow only valid HTTPS 
connections [13]. As depicted in Figure 5, a user is required to add 
a  special  parameter  --force-https  to  enable  the  protection 
which is to accept only valid HTTPS connections. 
  Upon noticing the seriousness of the SSL operational flaw, the 
browser  vendor  finally  attempts  to  provide  mitigation.  The 
approach is however an overkill. For instance, the browser returns 
errors  when  we  visit  a  website  known  to  ship  invalid  certificate 
and open http://google.com in a new tab. Although the errors 
are expected, it certainly hurts the user’s experience if a user must 
copy-and-paste  the  blocked  URLs  to  an  unprotected  browser. 
Without  proper  segmentation  between  security  demands  of 
websites, we doubt if the sacrificial protection can attract usage. 
7.3  Extended Validation (EV) Certificates 
  EV provides users extra confidence that a website is “secure” by 
means  of  a  greenish  location  bar.  EV  certificates  are  usually 
priced  a lot  higher  than ordinary  digital  certificates  even  though 
they  are  technically  the  same.  EV  differs  only  in  the  sense  that 
extensive paper work is carried out by CAs to validate the legal 
Figure 5: Adding parameter --force-https in the property 
dialog to enable Chrome’s Force-HTTPS protection 
identity  and  presence  of  website  owners.  According  to  an 
independent usability study [14] (hosted in verisign.com), 77% 
of the participants would hesitate to shop when the greenish bar 
which  had  been  previously  shown  was  gone.  Although  some 
hesitated,  36%  of  the  participants  would  still  continue  shopping 
regardless. Nevertheless, it is regretful that we found these trained 
participants  were  in  fact  told  the  greenish  bar  might  be  missing 
instead of having them recognized by themselves. 
  First, the effectiveness of EV as an example of visual security 
depends  on  users  who  should  be  ruled  out  in  security-critical 
operations  [1].  Specifically,  some  researchers  try  to  exploit  the 
visual  indicator  by  picture-in-picture  attacks  [15].  Second,  EV 
suffers from initialization attacks if a user forgets or is unaware of 
the  existence  of  greenish  bar.  Lastly,  EV  is  not  an  automated 
mechanism  which  can  stop  users  from  compromising  SSL 
protection by bypassing security warnings. 
7.4  Locked Single-origin Policies (SOP) 
  Locked  SOP  [16]  fine-grains  the  SOP  with  two  proposals, 
weak-locked and strong-locked SOP. For legacy SOP, two objects 
can  communicate  only  if  they  are  served  in  the  same  origin 
(protocol,  host  and  port).  For  the  weak-locked  SOP,  it  further 
segments origin by treating content served with valid certificates 
as of different origin from content served with invalid ones. For 
the strong-locked SOP, it further segments origin by determining 
if  a  public  key  is  declared  to  be  trusted  through  a  periodically 
retrieved  policy  file /pk.txt.  Thus,  locked  SOP  is  designed  to 
specifically  mitigate  attacks  when  both  legitimate  and  malicious 
content are downloaded to a browser. 
  However,  Locked  SOP  cannot  mitigate  man-in-the-middle 
attacks  in  which  all  content  are  downloaded  from  malicious 
source. For instance, given that a user can still bypass certificate 
warnings as in attack 2, Locked SOP cannot help SSL protection 
from being compromised. Locked SOP protection will not even be 
triggered in attack 3 since no certificate is supplied to the victim’s 
browser.  In  addition,  SOP  implementation  is  known  to  be 
problematic [17]. 
7.5  DNS Security Extensions (DNSSEC) 
  DNSSEC  extends  the  current  DNS  by  digitally  signing  DNS 
responses to guarantee authenticity and integrity [18]. It has been 
proposed  for  more  than  a  decade.  But  owing  to  the  backward 
compatibility  problems  and  deployment  complexity  to  a  wide 
scale of servers and clients, the deployment is severely hindered. 
Only  until  recently,  people  re-consider  the  deployment  due  to  a 
recent panic brought by Kaminsky’s DNS attacks [19]. 
212  DNSSEC  authenticates  the  mapping  from  a  domain  to  IP.  It 
suffices to be a generic solution to significantly raise the bar for 
pharmers. However, even if a legitimate IP is resolved, one is still 
not  guaranteed  to  connect  to  a  legitimate  host.  For  instance, 
adversaries like attack 2 and 3 can still be mounted in a man-in-
the-middle setting without altering any DNS responses. It is thus 
doubted  if  introducing  DNSSEC  justifies  the  deployment  effort. 
We  are  thus  motivated  to  propose  SSLock  which  sustains  the 
existing PKI that is designed for insecure channels. 
8.  CONCLUSION 
  SSL  has  been  protecting  trillions  of  transactions  worldwide. 
Nevertheless, it is fragile because of the serious operational flaw. 
Supported  by  plenty  of  usability  studies,  the  flaw  must  be 
mitigated  as  soon  as  possible.  We  urge  application  vendors  to 
consider  implementing  SSLock  because  of  its  generic,  light-
weight,  opt-in,  zero-initialization,  privacy-preserving  and  idiot-
proof  nature.  The  proposal  is  further  justified  by  its  high 
compatibility  rate.  We  succeed  in  sustaining  the  SSL  protection 
by  ruling  out  users  from  security-critical  operations.  SSLock  is 
also  the  only  single  approach  that  is  able  to  protect  users  from 
severe dynamic pharming, deceptive captive portal and SSLStrip 
attacks.  Unless  SSLock  is  deployed,  it  is  speculated  that  more 
attacks  exploiting  the  operational  flaw  are  to  come  if  we  keep 
relying on users as the main defense towards legitimacy judgment. 
Acknowledgements 
We  thank  Scottie  K.S.  Tse,  T.Y.  Wong  and  Victor  K.  Wei  for 
their helpful suggestions and feedback. We also thank anonymous 
reviewers for valuable comments. 
9.  REFERENCES 
[1]  Lorrie Faith Cranor. A framework for reasoning about the 
human in the loop, in Proceedings of Usability, Psychology, 
and Security 2008 (UPSEC ’08), April 2008, San Francisco, 
CA, USA. 
[2]  Stephen Bell. Invalid banking cert spooks only one user in 
300. ComputerWorld New Zealand, 
http://computerworld.co.nz/news.nsf/NL/FCC8B6B48B24C
DF2CC2570020018FF73, May 2005 
[3]  Moxie Marlinspike, New Techniques for Defeating SSL/TLS. 
https://www.blackhat.com/presentations/bh-dc-
09/Marlinspike/BlackHat-DC-09-Marlinspike-Defeating-
SSL.pdf 
[4]  Johnathan Nightingale. MitM Me (SSL Error Bypass). 
https://addons.mozilla.org/en-US/firefox/addon/6843 
[5]  Jerry Qian. Remember Certificate Exception. 
https://addons.mozilla.org/en-US/firefox/addon/10246 
[6]  Andrew Lucking. Remember Mismatched Domains. 
https://addons.mozilla.org/en-US/firefox/addon/2131 
[7]  Joshua Sunshine, Serge Egelman, Hazim Almuhimedi, Neha 
Atri, Lorrie Faith Cranor, Crying Wolf: An Empirical Study 
of SSL Warning Effectiveness, in Usenix Security 
Symposium, August 10-14, 2009, Montréal, Canada. 
[8]  Stuart E. Schechter, Rachna Dhamija, Andy Ozment, Ian 
Fischer, The Emperor's New Security Indicators, in 
Proceedings of the 2007 IEEE Symposium on Security and 
Privacy, p.51-65, May 20-23, 2007 
[9]  Rachna Dhamija , J. D. Tygar , Marti Hearst, Why phishing 
works, in Proceedings of the SIGCHI conference on Human 
Factors in computing systems, April 22-27, 2006, Montréal, 
Canada  
[10] Yue Zhang, Serge Egelman, Lorrie Faith Cranor, and Jason 
Hong. Phinding phish: Evaluating anti-phishing tools, in 
Proceedings of the 14th Annual Network and Distributed 
System Security Symposium (NDSS 2007), February 2007 
[11] Collin Jackson and Adam Barth, ForceHTTPS: Protecting 
High-Security Web Sites from Network Attacks, in 
Proceedings of the 17th International World Wide Web 
Conference (WWW2008), April 21-25, 2008, Beijing, China.  
[12] Jeff Hodges, Collin Jackson, Adam Barth. Strict Transport 
Security. 
 http://bit.ly/438ir0, 18 December 2009 
[13] Google Chrome, Release Notes 2.0.156.1 ‎(Chromium 
Developer Documentation)‎. http://dev.chromium.org/getting-
involved/dev-channel/release-notes/releasenotes201561 
[14] Tec-Ed Inc., Extended Validation and VeriSign Brand. 
http://www.verisign.com/static/040655.pdf 
[15] Collin Jackson, Daniel R. Simon, Desney S. Tan, and Adam 
Barth. An Evaluation of Extended Validation and Picture-in-
Picture Phishing Attacks, in Proceedings of Usable Security 
(USEC '07), February 2007. 
[16] C. Karlof, J. Tygar, D. Wagner, U. Shankar. Dynamic 
pharming attacks and locked same-origin policies for web 
browsers, in Proceedings of the 14th ACM conference on 
computer and communications security (CCS), 2007, New 
York, USA. 
[17] S. Chen, D. Ross, and Y.-M. Wang. An analysis of browser 
domain-isolation bugs and a light-weight transparent defense 
mechanism, in Proceedings of the 14th ACM conference on 
Computer and communications security (CCS), 2007, New 
York, USA. 
[18] DNSSEC – The DNS Security Extensions. 
http://www.dnssec.net/ 
[19] Dan Kaminsky, Black Ops 2008: It’s The End Of The Cache 
As We Know It. http://www.blackhat.com/presentations/bh-
jp-08/bh-jp-08-Kaminsky/BlackHat-Japan-08-Kaminsky-
DNS08-BlackOps.pdf 
[20] Mozilla Foundation, Secure Connection Failed. 
http://support.mozilla.com/kb/Secure+connection+failed 
[21] Bugzilla@Mozilla – Bug 430790, Users can be tricked into 
thinking sites are encrypted with new visual cues added by 
bug 417844. 
https://bugzilla.mozilla.org/show_bug.cgi?id=430790, 25 
April 2008 
[22] GoDaddy.com, Inc., SSL Certificate Services. 
http://www.godaddy.com/gdshop/compare/gdcompare_ssl.as
p?isc=sslqgo002b 
[23] GeoTrust Inc., RapidSSL Competitive Replacement. 
https://products.geotrust.com/orders/rapidssl.do 
[24] S Chen, Z Mao, YM Wang, M Zhang, Pretty-Bad-Proxy. An 
Overlooked Adversary in Browsers’ HTTPS Deployments, 
in Proceedings of the 2009 IEEE Symposium on Security and 
Privacy, May 17-20, 2009 
[25] Alexander Sotirov, Marc Stevens, Jacob Appelbaum, Arjen 
Lenstra, David Molnar, Dag Arne Osvik, Benne de Weger, 
MD5 considered harmful today -- Creating a rogue CA 
certificate. http://www.phreedom.org/research/rogue-ca/ 
[26] Bugzilla@Mozilla - Bug 470897, Investigate incident with 
CA that allegedly issued bogus cert for www.mozilla.com. 
https://bugzilla.mozilla.org/show_bug.cgi?id=470897, 23 
December 2008.
213