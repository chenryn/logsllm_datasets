# Eliminating the Hypervisor Attack Surface for a More Secure Cloud

**Authors:**
- Jakub Szefer
- Eric Keller
- Ruby B. Lee
- Jennifer Rexford

**Affiliation:**
Princeton University, Princeton, NJ, USA

**Contact:**
{szefer, ekeller, rblee, jrex}@princeton.edu

## Abstract
Cloud computing is rapidly becoming the preferred platform for many web services. Virtualization, the key enabling technology, allows cloud providers to host services for numerous customers. However, virtualization software is large, complex, and has a significant attack surface, making it prone to bugs and vulnerabilities that malicious virtual machines (VMs) can exploit to attack or obstruct other VMs. This is a major concern for organizations considering a move to the cloud.

In contrast to previous work on hardening or minimizing the virtualization software, our NoHype system eliminates the hypervisor attack surface by allowing guest VMs to run natively on the underlying hardware while still supporting concurrent VM execution. NoHype incorporates four key ideas:
1. Pre-allocation of processor cores and memory resources.
2. Use of virtualized I/O devices.
3. Minor modifications to the guest OS to perform all system discovery during bootup.
4. Direct contact between the guest VM and the underlying hardware, avoiding indirection.

NoHype leverages the unique use model in cloud computing, where customers specify resource requirements in advance, and providers offer a suite of guest OS kernels. Our system supports multiple tenants and capabilities commonly found in hosted cloud infrastructures. Our prototype uses Xen 4.0 to prepare the environment for guest VMs and a slightly modified version of Linux 2.6 as the guest OS. Evaluation with SPEC and Apache benchmarks shows a roughly 1% performance gain when running applications on NoHype compared to Xen 4.0. Security analysis indicates that, while there are minor limitations with current commodity hardware, NoHype significantly enhances the security of cloud computing.

## 1. Introduction
Cloud computing is transforming the way people use computers and how networked services are run. Cloud infrastructure providers can dynamically provision resources to meet demand, leveraging economies of scale to offer cost-effective, on-demand infrastructure. Virtualization enables multiple customers to share the same physical server, but this multi-tenancy highlights the need for secure virtualization solutions.

The virtualization layer, particularly the hypervisor, is a prime target for attacks due to its central role. The complexity and large code base of virtualization software make it susceptible to bugs and vulnerabilities. A malicious VM can exploit these to attack other VMs, compromising their confidentiality, integrity, and availability.

Previous approaches to securing the virtualization layer, such as minimizing the hypervisor, introducing new processor architectures, or adding extra software for verification, have limitations. They either reduce functionality, cannot be deployed, or add overhead without fully addressing the security concerns.

Our NoHype system takes a novel approach by eliminating the hypervisor attack surface. We remove the need for VMs to constantly interact with the hypervisor during their lifetime, retaining the ability to run and manage VMs as in current cloud infrastructures, using today's commodity hardware, and preventing attacks from occurring.

We previously proposed the high-level idea of NoHype in a position paper [16]. In this paper, we present the complete design, implementation, and evaluation of a working NoHype system. Our contributions include:
- An architecture that eliminates the hypervisor attack surface by pre-allocating resources and using virtualized I/O devices.
- A design that can be implemented on today's commodity hardware.
- A prototype implementation and system evaluation, showing a 1% performance gain and improved security.

The remainder of the paper is organized as follows: Section 2 discusses background information on virtualization, Section 3 presents our threat model, Section 4 details the NoHype system architecture, Section 5 covers the prototype implementation, Section 6 provides a security analysis, Section 7 discusses related work, and Section 8 concludes with a discussion on future work, including live VM migration.

## 2. Virtualization Vulnerabilities
The hypervisor's role is to present a view to the guest VM that it is running directly on the hardware. This requires emulating the underlying hardware and arbitrating access, leading to a large and complex body of software. Frequent interactions between the guest VMs and the hypervisor create a security threat that a malicious VM can exploit to attack the hypervisor and other VMs.

### 2.1 Roles of Virtualization Software
Figure 1 illustrates the components of the virtualization layer, including the hypervisor, host OS, and emulator (e.g., QEMU). The host OS (Dom0 in Xen terminology) manages VMs and interacts with the hypervisor via hypercalls. The emulator emulates system devices, and together, these components require over a million lines of code.

#### Key Responsibilities of the Hypervisor
- **Processor Cores:** The hypervisor arbitrates access to processor cores, schedules VMs, and emulates processor functionalities.
- **Memory:** The hypervisor manages host physical memory, allocating guest physical memory to each VM.
- **I/O Devices:** The hypervisor manages and emulates I/O devices, creating virtual devices for guest VMs.
- **Interrupts and Timers:** The hypervisor emulates the interrupt subsystem and timers, ensuring proper configuration and management within the VMs.

These responsibilities highlight the complexity and the extensive interaction required, making the hypervisor a significant attack surface.

[Continue with the rest of the sections, following the same format and style for clarity and coherence.]