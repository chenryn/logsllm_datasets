all blacklist domains were known to the security community prior to they started requesting
for ads in the DSP trafﬁc. Moreover, 32.49% (4,329) of blacklisted publisher domains were
labeled more than 535 days before they were seen in the DSP datasets. The peaks of the
distribution reﬂects several blacklists update events. One event was a major update of
4,031 domains on 6/23/2013, which corresponds to the -535 days in Figure 4.6a. Another
update event on 12/4/2014 was reﬂected around -6 days in the plot. Eighty domains were
blacklisted on 1/15/2011, which makes up the small bump around -1500 days in the plot.
Figure 4.7 is a scatter plot of the ﬁrst date a domain is blacklisted (x-axis) and its
corresponding ﬁrst seen date in the DSP (y-axis). The size of the point represents the
61
0.00000.00050.00100.00150.0020−1500−1000−5000500Number of DaysDensity0.0000.0020.004−1500−1000−5000500Number of DaysDensityFigure 4.7: Scatter plot of ﬁrst date seen on PBL and ﬁrst date seen from DSP for all DSP
domains that were on PBL.
number of domains in these dates. The points in the bottom side of the plot are large be-
cause this is the ﬁrst date we had the DSP data. The vertical group of points represent
domains being updated in the blacklist in the same day. We highlighted a few days when
blacklisted domains from the DSP trafﬁc were ﬁrst labeled. The plot is more dense on
the right side since 2013-06-23. We increased the number of blacklists to crawl from 3
to 7 on that day, which resulted in more domain names in PBL dataset and more over-
lap with the DSP trafﬁc from that point on. On 2013-11-17, the blacklists updated many
domain names including websearch.*.info used by browser hijackers. On 2015-02-
04, there were a lot of “update” domains used by pop-up ads added to the blacklists, e.g.,
soft12.onlineupdatenow.com. On 2015-06-14, the blacklists updated a group of
algorithmically generated domains with sub domains freempr#.
Observation 3: Most (77.01%) blacklisted publisher domains remained on black-
lists after they were last seen in DSP trafﬁc.
We would like to see whether the publisher domains remained on the blacklists after
they were seen in the DSP. We plotted the density distribution for the number of days when
a domain was last seen on blacklists minus when it last appeared in the DSP (Figure 4.6b).
The distribution has shifted a lot towards the right part of the x-axis this time. Figure 4.6b
shows that the majority (77.01%) of blacklisted domains were still on blacklists after they
62
2014−12−082014−12−152014−12−222014−12−292015−01−052015−01−122015−01−192015−01−262015−02−022015−02−092015−02−162015−02−232015−03−022015−03−092015−03−162015−03−2320102011201220132013−06−232013−11−17201420152015−02−042015−06−142016PBL datesDPS datesNumber of Domainslllllllllll1102030405080130170200300900were seen in the DSP. A total of 14.06% (1,873) of them remained on blacklists more than
a year after they were last seen in the DSP datasets. The peak of Figure 4.6b reﬂects the
last date (1/15/2016) of our blacklist dataset. Overall 8,051 DSP domains belong to this
peak in the plot.
Observation 4: Blacklisted publisher domains tend to use more ad exchanges and
reach more hashed client IP addresses than those that have never been blacklisted.
Each day, we separate the publisher domains into two groups: those that were seen in
PBL (True) and not in PBL (False). For each group, we compute the average number of
distinct ad exchanges and the number of hashed client IPs that a publisher domain was seen
from, as well as the variance within the group. We visualize the results in Figure 4.8a to
Figure 4.8d.
Figure 4.8a shows the density distributions of the daily average number of ad exchanges
for the PBL group and non-PBL group across the entire DSP dataset. The PBL group were
seen from an average of 1.7 to 2 ad exchanges, more than the non-PBL group. We per-
form a two-sample Kolmogorov-Smirnov test (K-S test) where the null hypothesis is that
x=y, i.e., that the datasets are drawn from the same distribution. The K-S test demonstrates
we can reject this null hypothesis (p − value < 2.22 ∗ 10−16). Therefore, the two distri-
butions are signiﬁcantly different. We also plot the mean and variance of the average ad
exchange number for each group in Figure 4.8b. The ﬁgure shows that not only do non-
PBL domains use fewer ad exchanges in general, the difference of the measure between
non-PBL domains is small, as reﬂected by the variance. On the other hand, PBL domains
have relatively higher variance among themselves.
Similarly, we plot the density distribution for number of average hashed client IP ad-
dresses in a day for the PBL and non-PBL groups (Figure 4.8c), as well as the mean and
variance of the metric (Figure 4.8d). These ﬁgures show that PBL domains tend to be seen
from more hashed client IPs than non-PBL domains. Since the majority of the content on
the web is in the unpopular “long tail”, only a few hashed client IPs visit any non-PBL
63
(a) Pbl: # of Ad Exchanges Density (b) Pbl: Mean, Variance for # of Ad
Exchanges
(c) Pbl: # of hashed IPs Density
(d) Pbl: Mean, Var for # of hashed
IPs
(e) Md5: # of Ad Exchanges Den-
sity
(f) Md5: Mean, Variance for # of
Ad Exchanges
(g) Md5: # of hashed IPs Density (h) Md5: Mean, Var for # of hashed
IPs
(i) Components of 12/10/2014
Figure 4.8: Figure 4.8a to Figure 4.8d are PBL plots. Figure 4.8e to Figure 4.8h are Md5
plots. Figure 4.8i shows the CDF for number of publisher domains forming components of
12/10/2014.
64
0.02.55.07.510.01.51.71.9Mean # of Ad ExchangesDensityPBLFalseTruellllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.60.81.01.21.51.71.9Mean # of Ad ExchangesVariance in # of Ad ExchangesPBLlFalseTrue0.0000.0010.00202K4K6K8KMean # of Client IPsDensityPBLFalseTruellllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll1e+092e+093e+0902K4K6K8KMean # of Client IPsVariance in # of Client IPsPBLlFalseTrue0.02.55.07.510.01.41.51.61.71.8Mean # of Ad ExchangesDensityMd5FalseTruellllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.60.70.80.91.01.41.51.61.71.8Mean # of Ad ExchangesVariance in # of Ad ExchangesMd5lFalseTrue0.0000.0010.0020.0031K2K3KMean # of Client IPsDensityMd5FalseTruellllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll5.0e+081.0e+091.5e+092.0e+091K2K3KMean # of Client IPsVariance in # of Client IPsMd5lFalseTrue85%90%95%100%101,00057,068Number of Domains in ComponentCDF(a) Three scores on 12/10/2014
(b) Component sizes in ad cam-
paigns
(c) Ad campaign scores
Figure 4.9: Figure 4.8i to Figure 4.9c are three scores for components seen on 12/10/2014
(Figure 4.9a), number of components in ad campaigns (Figure 4.9b) and ad campaign
scores (Figure 4.9c).
domain in general, and the variance of number of clients is low (Figure 4.8d). In contrast,
PBL domains seen in the RTB process aim to make money, and thus spread to as many
hosts as possible.
Malware Trafﬁc
Domains queried by malware are another type of threat information commonly used by the
security community. We ﬁltered the malware domains using the same three methods as
in the PBL case. Within 4,905,224 unique domains from the DSP trafﬁc, 134,262(2.74%)
were queried by malware samples collected over ﬁve years. There are ten times more
publisher domains queried by malware than from those on blacklists. Similarly, we can
separate the publisher domains into two groups: malware domain group (Md5 True) and
non-malware domain group (Md5 False). We computed the average daily number of ad
exchanges and hashed client IP addresses for each day in the DSP trafﬁc.
Observation 5: Malware domains have different behavior than blacklisted do-
mains. That is, malware domains were observed to employ similar number of ad
exchanges to non-malware domains, however, with a higher number of hashed client
IP addresses.
65
85%90%95%100%0.000.250.500.751.00ScoreCDFScoreBothPBLNew45%50%75%100%0101,0002.2MNumber of ComponentsCDF97%98%99%100%0101006361Ad Campaign ScoreCDFFigure 4.8e to Figure 4.8h show the measurement results. We observe bimodal distribu-
tions of malware vs. non-malware domains in Figure 4.8e and Figure 4.8g. Figure 4.8e and
Figure 4.8f show that publisher domains queried by malware tend to use a similar number
of ad exchanges. In addition, the distributions between malware domains and non-malware
domains overlapped much more than when we compared PBL group with non-PBL group.
Therefore, the number of ad exchanges is not a distinguishing attribute for the MD5 group.
On the other hand, DSP domains queried by malware were still seen from a larger group
of hashed client IP addresses, compared to the rest of domains never queried by malware.
Malware domains that interact with ad ecosystem are relatively more popular than non-
malware domains.
Malware query non-malicious domains for various reasons, and only a few of the do-
mains are fraudulent publishers. Recall that when malware interacts with the ad ecosystem
from the client side (Figure 2.1), there may be syndicated publishers, or benign ad servers
contacted by the malware, in order to reach ad exchanges. Despite our ﬁltering efforts, it
is likely that there are still numerous benign domains in the malware domain set. Addi-
tionally, domains could remain on blacklists after they become inactive or parked, which
results in false positives when using blacklists. These ﬁndings all point to the need for
better ad-abuse ground truth datasets.
4.6
Infrastructure Tracking
In this section, we show that traditional DNS infrastructure features can be used to extend
the ground truth set, discover new ad abuse cases and track the threat evolution over time.
This can be used by any entity in the ad ecosystem with visibility of bidding requests to
track advertising campaign infrastructure—focusing on those that are likely to be malicious
in intent. While we acknowledge that the word “campaign” has an overloaded meaning,
we deﬁne it in the following way and only in the context of ad abuse: a campaign will be
deﬁned as the set of domain names that can be linked together over time based on their IP
66
infrastructure properties.
At a high level, we construct graphs of the relationship between the domain name of the
ad publisher and the infrastructure the domain name uses. By building and merging these
graphs over time, we can track the infrastructure and focus on those campaigns that may
be malicious, e.g., domains known to have been blacklisted, queried by malware, or have
never been seen before. We present case studies based on this process in Section 4.7.
4.6.1 Constructing Infrastructure Graphs
An infrastructure graph is an undirected graph G, deﬁned by its set of vertices V and edges
E. A disconnected graph is made up of multiple components or subgraphs with no adja-
cent edges between them. These components correspond to advertising campaigns that are
tracked over time. Vertices in infrastructure graphs are domain names or the RDATA the
domain names resolve to. RDATA can be an IPv4/IPv6 address (A/AAAA), a canonical
name (CNAME), or a nameserver (NS). Two vertices are adjacent if and only if exactly one
is a domain name, and the domain name resolved to the RDATA of one of the aforemen-
tioned query types (A/AAAA/CNAME/NS) during time t when the domain name appeared
as a publisher for a bid request.
A Demand Side Platform provider (DSP) can build infrastructure graphs by performing
the following steps. First, the DSP collects all publisher domain names Dp from the bid
requests seen on day t. Second, the DSP resolves all domain names d ∈ Dp, which results
in zero or more domain name and IP address tuples. More formally, resolving d will yield
[(d, rdata0),··· , (d, rdataN )] if d resolves to N different IPs, CNAMEs, or NSes on day
t. Each of these tuples corresponds to an edge in our graph G. Finally, after G is built for
day t, G is decomposed into its connected components C, where each component c ∈ C
is ranked and tracked over time as a speciﬁc ad campaign. While we experimented with
more sophisticated community discovery or spectral methods, the beneﬁts gained were
disproportional to the add-on complexity. Thus, we decided to select the simplest and most
67
Figure 4.10: Number of vertices, edges and density values for the graph every day.
straightforward way to mine the graph for campaigns.
Since the DSP bidding request trafﬁc did not include DNS resolution information, we
chose to correlate that with the DNS dataset obtained from a passive DNS database from
a North American ISP (Table 4.1). By combining the DNS resolution seen in the same
day in the ISP with the publisher domains from the bidding request trafﬁc, we were able
to construct daily infrastructure graphs. Next, we discuss how we analyze the produced
graphs.
Graph Analysis
We study the infrastructure graphs using some basic graph analysis metrics. Speciﬁcally,
we ﬁrst analyze overall graph properties including vertices, edges and density measures.
Then, we examine the connected components of the graphs every day and over time. These
analytics help us understand the infrastructure of the publisher domains, and give us in-
sights about how to rank components based on how suspicious they are and track them
over time.
First, we discuss three properties of daily infrastructure graphs. Figure 4.10 shows three
statistics for graphs generated every day: number of vertices (V ), number of edges (E), and
the density measure. We use the following formula to compute the graph density D:
D =
2E
V (V − 1)
(4.1)
On average, there are 472 thousand vertices, and 883 thousand edges every day. The
68
llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0500,0001,000,0002014−12−102015−01−102015−02−102015−03−10DateNumberlverticesedgesdensitycomponentsNumber of Vertices, Edges, and Desnsity Value for the Daily Graphgraphs are extremely sparse and the daily density is only 8.35 ∗ 10−6. In fact, the majority
of the edges only connect two vertices. There are 566,744 vertices on 12/10/2014, and
it dropped to 342,426 (by 39.58%) on 1/29/2015. Then the number of vertices slowly
increased to 727,501 on 3/24/2015. Since vertices include publisher domains and DNS
resolution data, the change in the number of vertices over time is largely consistent with
the observation of how the number of daily publisher domains changed (Figure 4.3). On
the other hand, the change in the number of edges per day is different. The number of daily
edges decreased since 2/17/2015, and dropped to the lowest number 542,945 on 2/21/2015,
before it jumped up to 1,203,202 on 3/5/2015. Through manual analysis, we concluded that
this was not caused by any single domain name. There were fewer resolved data per domain
in general in these days.
Second, we study properties of connected components in the infrastructure graphs. Fig-
ure 4.10 shows the number of connected components over time that were in the daily infras-
tructure graphs. On average, there are 127,513 connected components in a day. Figure 4.8i
demonstrates that the daily infrastructure graph is highly disconnected. The cumulative dis-
tribution for the size of the components in a day follows the Zipf’s law. For instance, CDF
in 12/10/2010 shows that 86% of connected components have only one publisher domain
in it. Fewer than 0.7% components have more than ten publisher domains.
4.6.2
Identifying Suspicious Components
The number of graph components based on the results from Section 4.6.1 can be hundreds
of thousands in a day (Figure 4.10), which is likely too many for manual analysis. However,
the measurement from Section 4.5 suggests we can prioritize components that are likely to
be interesting from a security perspective. We know publisher domain names differ in
behavior when they are known to appear on blacklists. Conversely the subset of malware
domains seen in DSP are very noisy, and thus it is not a good metric to use for prioritizing
components. We also hypothesize that never-before-seen domains deserve close scrutiny
69
as they may represent infrastructure changing to avoid detection. The question remains if
these are indicative of true malicious behavior. To ﬁnd out, we rank publisher components
by their domain names, speciﬁcally, if they are on blacklists, if the domains have never
been seen before and a combination of these two measures.
For each publisher component c ∈ C we compute two values βc and νc that correspond
to the proportion of domains in c that appear on blacklists, and are under brand new from
the perspective of the DSP, respectively. Intuitively, the ﬁrst one indicates an association
with known malicious activity, and the last suggests the potential threat may have just
begun. Speciﬁcally, the way we compute each value of a component is smoothed.
# of blacklisted publisher domains − 1
T otal # of publisher domains
# of brand new publisher domains − 1
T otal # of publisher domains
βc =
νc =
(4.2)
(4.3)
We offset the numerator count by one based on results of the infrastructure graph analysis
from Section 4.6.1. Since the majority of components have only one publisher domain
name in it, they are isolated singletons and do not provide any information to other unla-
beled domains from infrastructure point of view. We prefer not to prioritize these singletons
among all components even if they are already blacklisted or brand new. Equation 4.2 and
Equation 4.3 give singleton components both zero values. Moreover, we judge whether a
domain name is “brand new” using the effective second-level domains (e2ld) according to
public sufﬁx list [95]. An e2ld is the smallest registrable unit of a domain name and two
domains under an e2ld are likely operated by the same individual. Therefore, a new domain
under a new e2ld is more interesting to us.
After getting these two values βc and νc, we also compute the linear combination of
2(βc + νc). Finally, we reversely sort the components in a day based on
the ιc score. Within a day, ιc can range between 0 and 1. A component with higher ιc
these: ιc = 1
70
will be prioritized over a component with lower ιc for inspection. Figure 4.9a presents
cumulative distributions of the proportion of pbl-related, never-before-seen domains and a
linear combination of the two for a day per component. A total of 98% of the components
have zero PBL score because they do not have any blacklisted domains, and 14% of the
components have a score for having new domains. The ﬁnal component score combining
the two falls in between the two distributions.
4.6.3 Tracking Campaigns Over Time
Building infrastructure graphs for an individual day is useful, but tracking the ad campaigns
over time will yield more comprehensive coverage of ad campaigns, as well as advanced