创建测试表  
```  
create table user_info1  
(userid int,  
engname text,  
cnname text,  
occupation text,  
birthday date,  
signname text,  
email text,  
qq numeric,  
crt_time timestamp without time zone,  
mod_time timestamp without time zone  
);  
create table user_session1  
(userid int,  
logintime timestamp(0) without time zone,  
login_count bigint default 0,  
logouttime timestamp(0) without time zone,  
online_interval interval default interval '0'  
);  
alter table user_info1 add constraint pk_user_info primary key (userid);  
alter table user_session1 add constraint pk_user_session primary key (userid);  
```  
五、从主库复制到目标库1  
本次测试中我们把pgq, provider, consumer进程都放在主库, 当然这些都可以放在其他服务器上, 甚至不在主库和目标库的服务器上都行. 只要允许连接到数据库.  
主库服务器上配置如下  
配置放londiste配置文件的目录以及日志目录和pid文件目录.  
```  
mkdir -p /home/postgres/londiste3/log  
mkdir -p /home/postgres/londiste3/pid  
```  
创建provider进程的配置文件, 配置文件模板可参考 londiste3 --ini的输出  
注意db里面我配置了password, 如果你使用的是trust认证或者使用了.pgpass文件, 这里就不需要配密码了.  
```  
vi /home/postgres/londiste3/src_digoal_01.ini  
[londiste3]  
job_name = src_digoal_01  
db = host=172.16.3.176 port=1921 user=postgres dbname=digoal_01 password=postgres  
queue_name = replika  
logfile = /home/postgres/londiste3/log/src_digoal_01.log  
pidfile = /home/postgres/londiste3/pid/src_digoal_01.pid  
```  
配置好provider 后, 就可以创建根节点了.  
```  
postgres@db5-> londiste3 -v /home/postgres/londiste3/src_digoal_01.ini create-root src_digoal_01 "host=172.16.3.176 port=1921 user=postgres dbname=digoal_01 password=postgres"  
2012-05-30 21:32:36,847 9378 DEBUG Connect 'new_node' to 'host=172.16.3.176 port=1921 user=postgres dbname=digoal_01  [...]'  
2012-05-30 21:32:36,853 9378 INFO plpgsql is installed  
2012-05-30 21:32:36,853 9378 INFO Installing pgq  
2012-05-30 21:32:36,853 9378 INFO   Reading from /opt/skytools3.0.2/share/skytools3/pgq.sql  
2012-05-30 21:32:37,339 9378 INFO pgq.get_batch_cursor is installed  
2012-05-30 21:32:37,339 9378 INFO Installing pgq_ext  
2012-05-30 21:32:37,339 9378 INFO   Reading from /opt/skytools3.0.2/share/skytools3/pgq_ext.sql  
2012-05-30 21:32:37,568 9378 INFO Installing pgq_node  
2012-05-30 21:32:37,569 9378 INFO   Reading from /opt/skytools3.0.2/share/skytools3/pgq_node.sql  
2012-05-30 21:32:37,839 9378 INFO Installing londiste  
2012-05-30 21:32:37,839 9378 INFO   Reading from /opt/skytools3.0.2/share/skytools3/londiste.sql  
2012-05-30 21:32:38,117 9378 INFO londiste.global_add_table is installed  
2012-05-30 21:32:38,118 9378 DEBUG exec_query: select * from pgq_node.get_node_info('replika')  
2012-05-30 21:32:38,121 9378 INFO Initializing node  
2012-05-30 21:32:38,121 9378 DEBUG exec_cmd: select * from pgq_node.register_location('replika', 'src_digoal_01', 'host=172.16.3.176 port=1921 user=postgres dbname=digoal_01 password=postgres', false)  
2012-05-30 21:32:38,122 9378 INFO Location registered  
2012-05-30 21:32:38,122 9378 DEBUG exec_cmd: select * from pgq_node.create_node('replika', 'root', 'src_digoal_01', 'src_digoal_01', null, null, null)  
2012-05-30 21:32:38,377 9378 INFO Node "src_digoal_01" initialized for queue "replika" with type "root"  
2012-05-30 21:32:38,378 9378 INFO Done  
```  
根节点创建完, 连接到主库的digoal_01库下面, 会看到多了几个schema: londiste, pgq, pgq_ext, pgq_node 这些都是londiste3套件新增的schema, 用于完成复制所必须的.   
```  
postgres=# \c digoal_01 digoal_01  
You are now connected to database "digoal_01" as user "digoal_01".  
digoal_01=> \dn  
    List of schemas  
   Name    |   Owner     
-----------+-----------  
 digoal_01 | digoal_01  
 londiste  | postgres  
 pgq       | postgres  
 pgq_ext   | postgres  
 pgq_node  | postgres  
 public    | postgres  
(6 rows)  
```  
以下则是新增的这些schema下面的对象,   
```  
digoal_01=> select nspname,relkind,relname from pg_class,pg_namespace where relnamespace=pg_namespace.oid and relnamespace in (select oid from pg_namespace where nspname in ('londiste','pgq','pgq_ext','pgq_node','public','digoal_01')) order by relnamespace,relkind,relname;  
  nspname  | relkind |         relname           
-----------+---------+-------------------------  
 digoal_01 | i       | pk_user_info  
 digoal_01 | i       | pk_user_session  
 digoal_01 | r       | user_info  
 digoal_01 | r       | user_login_rec  
 digoal_01 | r       | user_logout_rec  
 digoal_01 | r       | user_session  
 pgq       | S       | batch_id_seq  
 pgq       | S       | consumer_co_id_seq  
 pgq       | S       | event_1_id_seq  
 pgq       | S       | event_1_tick_seq  
 pgq       | S       | queue_queue_id_seq  
 pgq       | S       | subscription_sub_id_seq  
 pgq       | i       | consumer_name_uq  
 pgq       | i       | consumer_pkey  
 pgq       | i       | event_1_0_txid_idx  
 pgq       | i       | event_1_1_txid_idx  
 pgq       | i       | event_1_2_txid_idx  
 pgq       | i       | queue_name_uq  
 pgq       | i       | queue_pkey  
 pgq       | i       | rq_pkey  
 pgq       | i       | rq_retry_idx  
 pgq       | i       | subscription_batch_idx  
 pgq       | i       | subscription_pkey  
 pgq       | i       | tick_pkey  
 pgq       | r       | consumer  
 pgq       | r       | event_1  
 pgq       | r       | event_1_0  
 pgq       | r       | event_1_1  
 pgq       | r       | event_1_2  
 pgq       | r       | event_template  
 pgq       | r       | queue  
 pgq       | r       | retry_queue  
 pgq       | r       | subscription  
 pgq       | r       | tick  
 pgq_ext   | i       | completed_batch_pkey  
 pgq_ext   | i       | completed_event_pkey  
 pgq_ext   | i       | completed_tick_pkey  
 pgq_ext   | i       | partial_batch_pkey  
 pgq_ext   | r       | completed_batch  
 pgq_ext   | r       | completed_event  
 pgq_ext   | r       | completed_tick  
 pgq_ext   | r       | partial_batch  
 pgq_node  | i       | local_state_pkey  
 pgq_node  | i       | node_info_pkey  
 pgq_node  | i       | node_location_pkey  
 pgq_node  | i       | subscriber_info_pkey  
 pgq_node  | r       | local_state  
 pgq_node  | r       | node_info  
 pgq_node  | r       | node_location  
 pgq_node  | r       | subscriber_info  
 londiste  | S       | seq_info_nr_seq  
 londiste  | S       | table_info_nr_seq  
 londiste  | i       | applied_execute_pkey  
 londiste  | i       | pending_fkeys_pkey  
 londiste  | i       | seq_info_pkey  
 londiste  | i       | table_info_pkey  
 londiste  | r       | applied_execute  
 londiste  | r       | pending_fkeys  
 londiste  | r       | seq_info  
 londiste  | r       | table_info  
```  
以下是新增的函数, 复制, batch, 触发器handle, 注册, 注销, 映射关系等.  
```  
digoal_01=> select nspname,lanname,proname from pg_proc,pg_namespace,pg_language where prolang=pg_language.oid and pronamespace=pg_namespace.oid and pronamespace in (select oid from pg_namespace where nspname in ('londiste','pgq','pgq_ext','pgq_node','public','digoal_01')) order by pronamespace,proname;  
  nspname  | lanname |          proname            
-----------+---------+---------------------------  
 digoal_01 | plpgsql | f_user_login  
 digoal_01 | plpgsql | f_user_logout  
 pgq       | plpgsql | _grant_perms_from  
 pgq       | plpgsql | batch_event_sql  
 pgq       | plpgsql | batch_event_tables  
 pgq       | plpgsql | batch_retry  
 pgq       | plpgsql | create_queue  
 pgq       | plpgsql | current_event_table  
 pgq       | plpgsql | drop_queue  
 pgq       | plpgsql | drop_queue  
 pgq       | plpgsql | event_retry  
 pgq       | plpgsql | event_retry  
 pgq       | plpgsql | event_retry_raw  
 pgq       | plpgsql | find_tick_helper  
 pgq       | plpgsql | finish_batch  
 pgq       | plpgsql | force_tick  
 pgq       | plpgsql | get_batch_cursor  
 pgq       | plpgsql | get_batch_cursor  
 pgq       | plpgsql | get_batch_events  
 pgq       | plpgsql | get_batch_info  
 pgq       | plpgsql | get_consumer_info  
 pgq       | plpgsql | get_consumer_info  
 pgq       | plpgsql | get_consumer_info  
 pgq       | plpgsql | get_queue_info  
 pgq       | plpgsql | get_queue_info  
 pgq       | plpgsql | grant_perms  
 pgq       | plpgsql | insert_event  
 pgq       | plpgsql | insert_event  
 pgq       | c       | insert_event_raw  
 pgq       | c       | logutriga  
 pgq       | plpgsql | maint_operations  
 pgq       | plpgsql | maint_retry_events  
 pgq       | plpgsql | maint_rotate_tables_step1  
 pgq       | plpgsql | maint_rotate_tables_step2  
 pgq       | plpgsql | maint_tables_to_vacuum  
 pgq       | plpgsql | next_batch  
 pgq       | plpgsql | next_batch_custom  
 pgq       | plpgsql | next_batch_info  
 pgq       | plpgsql | register_consumer  
 pgq       | plpgsql | register_consumer_at  
 pgq       | plpgsql | seq_getval  
 pgq       | plpgsql | seq_setval  
 pgq       | plpgsql | set_queue_config  
 pgq       | c       | sqltriga  
 pgq       | plpgsql | ticker  
 pgq       | plpgsql | ticker  
 pgq       | plpgsql | ticker  
 pgq       | plpgsql | tune_storage  
 pgq       | plpgsql | unregister_consumer  
 pgq       | plpgsql | upgrade_schema  
 pgq       | plpgsql | version  
 pgq_ext   | plpgsql | get_last_tick  
 pgq_ext   | plpgsql | get_last_tick  
 pgq_ext   | plpgsql | is_batch_done  
 pgq_ext   | plpgsql | is_batch_done  
 pgq_ext   | plpgsql | is_event_done  
 pgq_ext   | plpgsql | is_event_done  
 pgq_ext   | plpgsql | set_batch_done  
 pgq_ext   | plpgsql | set_batch_done  
 pgq_ext   | plpgsql | set_event_done  
 pgq_ext   | plpgsql | set_event_done  
 pgq_ext   | plpgsql | set_last_tick  
 pgq_ext   | plpgsql | set_last_tick  
 pgq_ext   | plpgsql | upgrade_schema  
 pgq_ext   | plpgsql | version  
 pgq_node  | plpgsql | change_consumer_provider  
 pgq_node  | plpgsql | create_node  
 pgq_node  | plpgsql | demote_root  
 pgq_node  | plpgsql | drop_node  
 pgq_node  | plpgsql | get_consumer_info  
 pgq_node  | plpgsql | get_consumer_state  
 pgq_node  | plpgsql | get_node_info  
 pgq_node  | plpgsql | get_queue_locations  
 pgq_node  | plpgsql | get_subscriber_info  
 pgq_node  | plpgsql | get_worker_state  
 pgq_node  | plpgsql | is_leaf_node  
 pgq_node  | plpgsql | is_root_node  
 pgq_node  | plpgsql | maint_watermark  
 pgq_node  | plpgsql | promote_branch  
 pgq_node  | plpgsql | register_consumer  
 pgq_node  | plpgsql | register_location  
 pgq_node  | plpgsql | register_subscriber  
 pgq_node  | plpgsql | set_consumer_completed  
 pgq_node  | plpgsql | set_consumer_error  
 pgq_node  | plpgsql | set_consumer_paused  
 pgq_node  | plpgsql | set_consumer_uptodate  
 pgq_node  | plpgsql | set_global_watermark  
 pgq_node  | plpgsql | set_node_attrs  
 pgq_node  | plpgsql | set_partition_watermark  
 pgq_node  | plpgsql | set_subscriber_watermark  
 pgq_node  | plpgsql | unregister_consumer  
 pgq_node  | plpgsql | unregister_location  
 pgq_node  | plpgsql | unregister_subscriber  
 pgq_node  | plpgsql | upgrade_schema  
 pgq_node  | plpgsql | version  
 londiste  | plpgsql | _coordinate_copy  
 londiste  | plpgsql | drop_table_fkey  
 londiste  | plpgsql | drop_table_triggers  
 londiste  | plpgsql | execute_finish  
 londiste  | plpgsql | execute_start  
 londiste  | plpgsql | find_column_types  