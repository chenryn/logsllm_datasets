required delay can be estimated within a factor of 2. This increases
the total time required to receive a response to every query, but also
ensures that the time is constant (so query failure is easy to detect).
If the query originator or a logical hop fails to receive a response
(within a timeout period) from the next logical hop (which can be
the result of failure at the logical hop or any physical hop along
the way), it picks the next best logical hop and repeats the attempt,
until it either succeeds (receives a response) or runs out of logical
hops to try. In the latter case, it would admit failure, and not re-
turn a response. While this is not a complete solution for churn, it
does provide a certain level of robustness against offline nodes and
packet loss. A more robust scheme is discussed in the next section.
5.2 Robust design
Robustness is somewhat tricky to achieve in the efficient design,
since a single offline physical hop along a source route renders the
entire source route unusable. In this section, we discuss a design
that trades increased robustness for decreased efficiency and larger
number of disclosed IP addresses. We employ what we call a “skip-
ping stones” approach:9 in addition to sending a message to a single
hop along a physical route, the message is sent to each neighbor of
that hop. Each of those nodes sends to each of the neighbors of
the next physical hop, and so on. This reduces the probability of
failure because only one node per “neighborhood” needs to be hon-
est and online in order for a message to get through. To that end,
all MCON nodes must know not only the IP addresses and crypto-
graphic keys of each neighbor, but also addresses and keys of each
neighbor’s neighbor. The MIA will reveal that information during
the bootstrap phase. Furthermore, the entire neighborhood needs a
shared key for use with route tokens. This key can either be given
out by the MIA or agreed-upon by neighborhood members using a
key agreement scheme such as in [28].
Although DHT routing does not change in the robust scheme,
we must alter our physical hop routing and discovery to accom-
modate neighborhood-wide routing decisions. When a neighbor-
hood receives a route discovery reply, a majority of neighbors must
come to a consensus regarding the contents of their routing token
(and thus the previous and next hops for the reply). They sign
9A stone skipped over water makes contact with the surface
repeatedly, creating ripples at each contact point.
the agreed-upon token using a threshold signature scheme [43],10
which requires m out of n nodes to partially sign a message before
a full signature can be derived. For a simple majority, m would
be ⌈ n+1
2 ⌉. Each node can then independently encrypt the signed
token with the shared neighborhood key, prepend it to the route re-
ply, and forward it. Note that majority agreement is required only
during route discovery and during shared key exchange with the
originator. Multiple route replies are handled the same way as in
the efficient scheme, but now they are far less likely to be malicious
since multiple nodes must agree on the route – a malicious major-
ity at one of the intermediate neighborhoods would be required to
produce a compromised route.
In order to send a message in the robust scheme, the originator
sends messages to each neighbor of the next physical hop along the
route. When a message arrives, each neighbor can independently
decrypt the enclosed routing token (using the neighborhood key)
and verify the signature to ensure it is correctly formed. Since only
the final destination can determine message validity by verifying
the enclosed MAC, intermediate nodes will not know if a message
is legitimate. If an intermediate node gets different messages with
identical IDs, it must forward one of each copy, potentially increas-
ing the number of messages proportionally to the number of adver-
saries encountered en route.
While offering superior robustness under heavy churn, this scheme
has higher overhead than our efficient scheme. We face a constant-
factor increase in the number of real-world identities every MCON
member knows, since every node must now keep track of the IP
addresses not only of its physical neighbors, but also of their neigh-
bors. However, since the number of identities each node knows is
still constant, this does not compromise membership-concealment.
We also lose plausible deniability: any one of a node’s neighbors
can perform packet counting [42] and timing attacks [16] to deter-
mine if a message is being forwarded or originated. However, we
can recover plausible deniability by using cover traffic.
5.3 Hybrid design
The hybrid scheme maintains most of the robustness properties
of the previous scheme while significantly reducing communica-
tion costs. We take a similar approach to Saia and Young [40] and
modify our robust scheme such that nodes discover the identities of
their neighbors’ neighbors only if h1(ID1) mod m = h2(ID2)
mod m for some small constant m, where ID1 and ID2 are the
DHT IDs of the two nodes. If the equality does not hold, nodes sim-
ply do not learn about each other. Since introductions are handled
by the MIA, this invariant is trivial to enforce. Intuitively, this de-
sign probabilistically guarantees that every node of the next neigh-
borhood receives at least one copy of each message. As we increase
the modulus m, fewer messages are sent and robustness decreases.
However, this reduction is acceptable when we consider that mes-
sage overhead (combining communication time, bandwidth, and
cryptographic overhead) is reduced by a factor of m.
6. THEORETICAL ANALYSIS
Our MCON designs do not share the flaws of existing schemes
such as Freenet [10], Tor bridges [14], Turtle [36], or Kaleidescope
[44]. The latter two, being based on social network, are suscep-
tible to targeted corruption and celebrity attacks since nodes are
not degree-constrained, and therefore some are “tasty targets” for
compromise.11 Freenet opennet is vulnerable to the same attacks,
10Threshold signatures allow some nodes to disagree or be offline
during route discovery.
11We note a celebrity could split split her contact lists into many
nodes with a small number of neighbors each, and remain a
logically tasty target while maintaining a low target profile at the
396and also to both passive and active harvesting. Bridges are vul-
nerable to confirmation and passive harvesting attacks. Moreover,
our designs provide unlinkability, and our efficient design provides
plausible deniability. Unlike Freenet and OneSwarm, our search
completes within a guaranteed time bound while making rare files
as easy to find as popular files.
6.1 Membership concealment intuition
To verify that our designs do not fall victim to identity disclo-
sure, we check that 1) only physical neighbors communicate di-
rectly over IP (preventing harvesting), 2) no adversary can query
arbitrary Internet hosts or otherwise elicit an IP-level response iden-
tifiable as an MCON message (preventing confirmation), and 3) no
adversary learns the identity of a node who does not directly con-
nect to corrupted or monitored nodes (preventing information leak-
age). In our system, (1) and (2) are handled by the strong binding
property – nodes will only respond to messages that are signed by
their physical neighbors, and neither initiate nor respond to IP-level
contact with any other nodes using the MCON network protocol.
(3) presents a greater challenge: a powerful network-monitoring
adversary may monitor not only individual nodes but entire net-
works, and use some encryption-oblivious fingerprinting technique
to identify MCON members [46]. The defense is protocol-level
obfuscation (steganography) such as used in [22], which, while not
explicitly implemented in our current system, is a natural extension.
While we impede graph de-anonymization attacks by perturbing
the maximal MCON node degree, making it independent of nodes’
social degree, our main defense is to prevent topology exploration
by both insider and outsider adversaries. The success of the latter
mechanism depends on the quality of traffic obfuscation. Remain-
ing attacks are discussed below.
2k , N
2k2 , N
Recall our (ℓ, γ)-adversary, who can monitor ℓ links and can cor-
rupt γ network members. Since he can only learn k additional
members from every member he corrupts or monitors, he is lim-
ited to learning at most kℓ + kγ correctly-functioning members
(k2ℓ + k2γ in the robust scheme). Without protocol obfuscation,
2k , f )-membership-concealing for
we say that our network is ( N
f (γ, ℓ, N ) = kγ + kℓ, since f (γ, ℓ, N ) = Θ(γ + ℓ), where N is
the total number of MCON participants. In the robust scheme, the
network is ( N
2k2 , f )-membership-concealing for f (γ, ℓ, N ) =
k2γ + k2ℓ. If we use protocol obfuscation then membership hid-
ing properties will depend on the details of the steganographic sys-
tem, but with perfect obfuscation our efficient network would be
k , f )-membership-concealing and our robust network would
(N, N
be (N, N
k2 , f )-membership-concealing for f (γ, ℓ, N ) = kℓ and
f (γ, ℓ, N ) = k2ℓ, respectively.
6.2 Churn
Churn, or the constant leaving and re-joining of nodes, causes
problems in peer-to-peer networks – nodes in such networks are not
expected to be long-lived, and if all of a peer’s contacts go offline,
the peer will be disconnected from the network and must re-join,
discovering new (online) network contacts in the process. Churn
is particularly problematic in MCONs because disconnected nodes
are not allowed to acquire new MCON contacts and any level of
churn reduces the efficiency of our routing scheme, by invalidating
some optimal routes. Node degrees in the MCONs must be large
enough to handle churn, and yet small enough to minimize identity
exposure. We use a very strong churn model in our analysis: we
network layer. This attack is unlikely at the social network layer,
since a celebrity must maintain her celebrity status to get contacts,
and any system that enforces a maximal node degree at
the
membership concealing layer will not create multiple pseudonyms
from a single social network-level identity.
Figure 3: Estimated probability of node disconnection. Churn is the
fraction of MCON members who are offline.
do not assume any relationship between the online status of a node
from one moment to the next, i.e. any node has the same probabil-
ity of being offline at any time, independent of its previous online
status. While we do not currently consider nodes who permanently
leave the MCON, we can add an MIA-mediated revocation system
– nodes who have been offline for a long time can have their keys
revoked. Neighbors of those nodes can then be allowed to acquire
more neighbors, since they will still not know more than k MCON
members – the revoked node no longer counts among the member
set. Neither do we consider social network churn because we do
not use social network edges as trust relationships. Therefore, the
loss of a social network edge need not affect the topology of the
MCON. As for new edges, we support issuing invitations as long
as all other conditions, such as node degree, continue to hold. The
MIA can discover such edges as they are created.
Connectedness. A node becomes disconnected when all of his
physical neighbors are offline. Assuming nodes come online and
go offline independently of each other, the probability of discon-
nection is ck, where c is the churn rate and k is the MCON node
degree limit. Roughly, this means that at k = 7, around 90% of
MCON nodes have to be offline for a node to be disconnected half
the time in our efficient scheme. The chance of disconnection in
the robust scheme is very small when churn is less than 90%. This
is shown in Figure 3. Analysis of Freenet data shows a churn rate in
the vicinity of 70%12, if we meaning that we can be almost certain
that nodes are always connected in our scheme. However, a prob-
lem can occur that causes nodes to permanently lose track of each
other: if node A goes offline, and B, A’s physical neighbor, goes
offline sometime later, and they both change IP addresses before
returning, they will have no way to communicate with each other
when re-joining. The solution is to have nodes periodically publish
their signed IP addresses to a known DHT location, combined with
a random value and encrypted with their physical neighbors’ keys.
This ensures that physical neighbors can always keep track of each
other while providing no information to unauthorized parties.
Reachability. Nodes cannot reach a network destination (even if
both nodes are technically connected) if there is no DHT route be-
tween them. This may happen if all required DHT hops are down
themselves, or if they are not reachable through source routes. In
our efficient scheme, the probability that all nodes along a given
source route are up and forwarding packets is (1− c)d, with offline
probability c and route length d, which is at worst the network di-
ameter. The robust scheme is more forgiving since it uses more re-
silient source routes – only one neighborhood node in every source
route needs to be forwarding packets. In this scheme, our failure
probability becomes (1− (1− c)k)d. Note that since k is constant,
we cannot guarantee resilient routing, but this is unlikely to be a
problem in practice – while we need O(log log N ) nodes per group
for provable resilience, we can set k to 11 and support a network of
12discounting nodes that we see only once throughout the experi-
ment
397100 billion nodes. In the next section we present simulation results
measuring reachability when re-routing is taken into account.
Denial of service attacks. An unfortunate sideeffect of plausible
deniability in the efficient scheme is the inability to prevent nodes
from flooding the network, since it is impossible to determine if a
node legitimately initiated such a flood or is forwarding the mes-
sage for another node. This leads to the problem of denial of service
(DoS) attacks through network floods. We can counter this using
data-oblivious throttling, where neighbors of a node sending pack-
ets faster than a certain threshold will refuse to forward some of
those packets, independent of their ultimate origin or destination.
This prevents undue usage of network bandwidth but degrades the
maximum possible performance of the network.
Even without plausible deniability, the robust (and hybrid) scheme
falls victim to DoS due to the amplification factor of messages – for
every message sent by a node, multiple message must be sent by
recipients. While nodes can refuse to forward duplicate messages,
adversarial intermediaries modifying messages will cause both the
original and the modified messages to be propagated. With enough
adversaries, the final destination could be overwhelmed with mes-
sages, all of which require decryption and verification.
7. SIMULATION RESULTS
We simulated MCON construction and routing using the Orkut
dataset from Mislove et al. [32]. The data contains 3,072,606
nodes,13 with an average node degree of 74. To test the robust rout-
ing scheme we generated a smaller synthetic social network using
a modified version of the algorithm in [29]. Our network contained