route that data takes from your Tor Browser client to the destination.
The circuit is built one hop at a time so that each relay only knows to
whom it\'s giving data and where it is sending that data. No individual
relay knows the entire path. For security, after 10 minutes, a new
circuit is created to keep anyone from attempting to figure out the path
through the nodes.[]{#c06.xhtml#Page_81 .pagebreak title="81"
role="doc-pagebreak"}
![[**[Figure 6.13](#c06.xhtml#R_c06-fig-0013){#c06.xhtml#c06-fig-0013
role="doc-backlink"}:**]{.figureLabel} Tor routing data for
anonymity](Images/c06f013.jpg){.center width="742" height="365"}
To use the Tor Browser client, download the install file from
`www.torproject.org`, run the setup program, choose your desired
language, choose a destination folder (I usually choose the Desktop),
and click Install.
Open your Tor folder and double‐click the Tor Browser client. You will
have an option to configure the tool to work with a proxy. Click the
Connect button to create the first encrypted relay and open the tool. If
you are used to a quick response, you may need to take a deep breath.
Because of the architecture of Tor, be prepared for slight delays. It\'s
the exchange you make for privacy. In [Figure
6.14](#c06.xhtml#c06-fig-0014){#c06.xhtml#R_c06-fig-0014}, you see the
default search engine that Tor uses is DuckDuckGo, layering even more
protection of your privacy.
![[**[Figure 6.14](#c06.xhtml#R_c06-fig-0014){#c06.xhtml#c06-fig-0014
role="doc-backlink"}:**]{.figureLabel} DuckDuckGo
browser](Images/c06f014.jpg){.center width="438" height="248"}
Now you have end‐to‐end protection for your wireless communications. You
know which networks around you are encrypted; what assets are on your
network; which users, devices, and data you\'re sharing on your virtual
private network; and that your browser cannot be traced.
:::
:::
[]{#c07.xhtml}
::: {#c07.xhtml#sbo-rt-content}
# []{#c07.xhtml#Page_83 .pagebreak title="83" role="doc-pagebreak"}[]{#c07.xhtml#c07}[CHAPTER 7]{.chapterNumber} [Wireshark]{.chapterTitle}
::: section
[]{#c07.xhtml#c07-sec-0001}
WHAT YOU WILL LEARN IN THIS CHAPTER:
-   [Wireshark]{#c07.xhtml#c07-li-0001}
-   [OSI Model]{#c07.xhtml#c07-li-0002}
-   [Capture]{#c07.xhtml#c07-li-0003}
-   [Filters and Colors]{#c07.xhtml#c07-li-0004}
-   [Inspection]{#c07.xhtml#c07-li-0005}
:::
::: section
[]{#c07.xhtml#c07-sec-0002}
## Wireshark {#c07.xhtml#head-2-50}
My first real experience using Wireshark was in a forensics class with
Sherri Davidoff, CEO of LMG Security. Sherri walked us through many
tools to investigate a case study where money had been stolen. Wireshark
was the tool we kept returning to time and time again to prove what had
been planned and executed, and eventually we were able to prove who the
threat actors were.
Wireshark is a tool that every network or security administrator should
know. It is an open‐source tool used for capturing network traffic and
analyzing packets at an extremely granular level. Sometimes Wireshark is
called a *network analyzer* or a *sniffer*. Packet capturing can tell
you about transmit time, source, destination, and protocol type. This
can be critical information for evaluating events that are happening or
troubleshooting devices across your network. It can also help a security
analyst determine whether network traffic is a malicious attack, what
type of attack, the IP addresses that were targeted, and where the
attack originated from. As a result, you will be able to create rules on
a firewall to block the IP addresses where the malicious traffic
originated.
[]{#c07.xhtml#Page_84 .pagebreak title="84"
role="doc-pagebreak"}Wireshark shows packet details captured from
different network media, breaking down the Open Systems Interconnection
(OSI) model into the data link, network, transport, and application
layers. At the bottom of the workspace, you have an option to open the
hexadecimal with corresponding ASCII values on the right.
Wireshark is a powerful tool and technically can be used for
eavesdropping. When you plan to use this in a business environment, you
will want to get written permission to use it and make sure your
organization has a clearly defined security privacy policy that
specifies the rights of individuals using the network. Stories abound of
network administrators capturing usernames, passwords, email addresses,
and other sensitive user data. Wireshark is legal to use, but it can
become illegal if you attempt to monitor a network that you do not have
explicit authorization to monitor.
Determining the resources that Wireshark needs depends on the size of
the `.pcap` file you are examining. If you have a busy network, then the
files will be large. Wireshark can run on Windows and Linux machines.
You will need a supported network card for capturing data, such as an
Ethernet card or a wireless adapter. To get the latest copy of
Wireshark, visit `www.wireshark.org`. The download page will have the
proper version for your computers architecture and version operating
system. A new version typically comes out every other month.
To install Wireshark, double‐check the name of the file you have
downloaded. If you have downloaded `Wireshark‐win64‐2.6.4.exe`, you will
be installing Wireshark 2.6.4 for Windows 64‐bit architecture. The
download will include WinPcap, which allows you to capture live network
traffic, not just examine saved packet captures (`.pcap` files).
Once you have installed the Wireshark executable, you will see the list
of the different network interfaces that are functioning on the device
as well as a graph to the right of current network activity on each
interface. It reminds me of an electrocardiogram (EKG) that measures
heart rhythms. As you see in [Figure
7.1](#c07.xhtml#c07-fig-0001){#c07.xhtml#R_c07-fig-0001}, if you have
peaks and valleys, then you have traffic on that interface. If the line
is flat, then that interface is not active.
![[**[Figure 7.1](#c07.xhtml#R_c07-fig-0001){#c07.xhtml#c07-fig-0001
role="doc-backlink"}:**]{.figureLabel} Choosing a network interface card
for capture](Images/c07f001.jpg){.center width="591" height="463"}
When you double‐click a network interface that is displaying activity,
the main window will open to display all the traffic on that network.
The major components of this page include the menu; the packet list,
details, and bytes panes; and the status bar at the bottom, which can
give you a great deal of detail regarding your capture.
The packet list pane is located in the top third of the window and by
default shares information from the headers of each packet captured.
Summary information includes source IP address, destination IP address,
protocol in use, []{#c07.xhtml#Page_85 .pagebreak title="85"
role="doc-pagebreak"}length of the packet, and information about the
packet. By clicking the individual packets, you control what is shown in
the bottom two panes. To drill down into each packet, select the packet
in the packet list pane to view more details in the middle window, which
feeds data into the bottom window.
In the packet details pane, you see individual packet size, both on the
wire and bytes captured. You also see the transmission medium, protocol,
source port, and destination port, and then depending on the type of
packet, you may see flags or queries. You can click the \> sign on the
left to reveal different levels of detail about each packet in
human‐readable language.
At the bottom is a packet bytes pane. This displays data in hexadecimal
code, which makes up the actual digital contents of the packet. It
highlights the field selected above in the packet details pane. When you
click any line in the middle pane, the hexadecimal code at bottom will
be highlighted, giving you an extremely granular view of the data such
as a URL that someone visited or contents of an email that was sent.
Under Preferences on the Edit menu, you can change the default layout of
Wireshark, choosing exactly what columns you want listed; the fonts,
colors, and position/direction of the panes; and what is displayed in
each column. Since I learned how to use Wireshark in the default
configuration, other than []{#c07.xhtml#Page_86 .pagebreak title="86"
role="doc-pagebreak"}making the font larger and the colors more
contrasting, I usually leave all of these preferences alone.
There are also quite a few keyboard navigation shortcuts. [Table
7.1](#c07.xhtml#c07-tbl-0001){#c07.xhtml#R_c07-tbl-0001} describes the
common ones.
```{=html}
```
```{=html}
```
[**[Table 7.1](#c07.xhtml#R_c07-tbl-0001){#c07.xhtml#c07-tbl-0001
role="doc-backlink"}:**]{.figureLabel} Keyboard shortcuts for Wireshark
```{=html}
```
  KEY COMBINATION   DESCRIPTION
  ----------------- ------------------------------------------------------------------
  Tab               Moves between packet panes
  Ctrl+F8           Moves to the next packet
  Ctrl+F7           Moves to the previous packet
  Ctrl+.            Moves to the next packet in the same conversation (TCP, UDP)
  Ctrl+,            Moves to the previous packet in the same conversation (TCP, UDP)
  Backspace         In packet details, jumps to the parent node
  Enter             In packet details, toggles the selected tree item
  Ctrl+L            Opens capture interfaces to start a new capture
  Ctrl+E            Begins a capture from Ethernet
```{=html}
```
:::
::: section
[]{#c07.xhtml#c07-sec-0003}
## OSI Model {#c07.xhtml#head-2-51}
The OSI model was created by the International Organization for
Standardization (ISO) to give architects, engineers, and manufacturers a
modular way to troubleshoot issues. Certain protocols work at certain
layers of OSI. As illustrated in [Figure
7.2](#c07.xhtml#c07-fig-0002){#c07.xhtml#R_c07-fig-0002}, the OSI moves
in both directions depending on whether someone is either sending or
receiving data.
![[**[Figure 7.2](#c07.xhtml#R_c07-fig-0002){#c07.xhtml#c07-fig-0002
role="doc-backlink"}:**]{.figureLabel} The OSI model sending and
receiving data](Images/c07f002.jpg){.center width="610" height="765"}
When data is sent across a network, the information is encapsulated as
it travels down the OSI layers. When the data is received, it travels up
the seven layers and is demultiplexed and delivered to the end user at
the upper layers. This process is often likened to using the post
office. You write a letter, fold it and put it in an envelope, address
it with a destination and receiving address, pay postage, and drop it
off at the post office. The post office delivers it to its destination
address and the intended person.
Complex problems can be more easily solved when you take this huge
process and break it into smaller pieces. Nontechnical end users will
turn on their system, log in, open a browser, type in a URL, and enter a
username and password to read and compose their email with no clue how
it works or what it looks like from a digital point of view. For any
type of analysis, it\'s important to understand what is happening at the
different layers of the OSI model. Wireshark will capture and filter
traffic on specific fields within supported protocols in
manageable‐sized `.pcap` files in real time.
[]{#c07.xhtml#Page_87 .pagebreak title="87" role="doc-pagebreak"}The
physical layer is where you start. This is where the transmission of
data using electrical signals, light, or radio occurs. Typically you can
think of this as being the hardware layer. Devices such as hubs, the
actual cables, and Ethernet work at this layer. When forming a
hypothesis for correcting issues in your network, the physical layer is
the equivalent of "Have you turned it on?" If there is no power, you
have no communication, so start troubleshooting the physical layer.
The data link layer (or layer 2) is responsible for the encoding and
decoding the electrical signals from the physical layer into bits and
bytes and into frames. The data link layer can be subdivided into two
sublayers: MAC and Logical Link Control (LLC). The MAC layer controls
how a computer on the network gains access to data, and the LLC layer
controls flow and error checking. Think of MAC as the MAC address that
is burned into the network interface card.
[]{#c07.xhtml#Page_88 .pagebreak title="88" role="doc-pagebreak"}The
network layer is where the switching and routing take place using IP
addresses. This is where the logical path gets plotted across the World
Wide Web, taking the data packet to its final destination.
The transport layer is responsible for end‐to‐end error recovery. TCP
and UDP work to get the data where it is supposed to go, but in very
different ways. Using the post office analogy again, TCP is like using
return receipt requested, and UDP is the marketing material that may or
may not get placed in your mailbox. TCP is connection‐oriented
architecture where you will see SYN, SYN‐ACK, and ACK. TCP\'s three‐way
handshaking technique is often referred to as "SYN, SYN‐ACK, ACK"
because there are three messages transmitted. SYN is synchronize, and
ACK is acknowledge*.* You send a packet, which is the SYN, and the
receiver acknowledges the receipt of said packet, which is the SYN‐ACK.
You acknowledge receivers' acknowledgment that they did indeed receive
that packet, which is the ACK. TCP is used to make sure systems get all
the pieces they need to reassemble a message. This is called a
*three‐way handshake*. UDP doesn\'t care in the least if you receive
their data. Think of a video or voice stream. Nothing gets resent if the
connection breaks, and nothing is ever acknowledged that it was
received. [Figure
7.3](#c07.xhtml#c07-fig-0003){#c07.xhtml#R_c07-fig-0003} shows the ACK
of packets and their number so they can be rebuilt properly by the
receiver.
![[**[Figure 7.3](#c07.xhtml#R_c07-fig-0003){#c07.xhtml#c07-fig-0003
role="doc-backlink"}:**]{.figureLabel} Wireshark acknowledgment
traffic](Images/c07f003.jpg){.center width="713" height="615"}
[]{#c07.xhtml#Page_89 .pagebreak title="89" role="doc-pagebreak"}The
session layer is layer 5 of the OSI model. It\'s responsible for making,
managing, and terminating connections. Layer 6 is the presentation
layer, which is in charge of what gets presented to your screen.
Encryption and decryption of data happen at layer 6 as well. Finally,
the seventh layer is the application layer, which supports the end users
and their processes. Quality of service (QoS) works at layer 7 as well
as application services such as email and HTTP. QoS is the ability of a
network to provide better service to certain network traffic. The
primary goal is to give priority to that traffic by dedicating bandwidth
to control latency.
Each layer of the OSI model ensures the delivery of data from one place
to another. If a layer fails, you end up with an error. With
Wireshark\'s help to diagnos the failing protocol, you can pinpoint
where the problem is occurring so you can fix the error.
:::
::: section
[]{#c07.xhtml#c07-sec-0004}
## Capture {#c07.xhtml#head-2-52}
One of my favorite ways to teach Wireshark to beginners is to have
students download and install Wireshark, bring up a terminal window, and
capture the traffic after they launch Nmap. As you learned in [Chapter
3](../Text/c03.xhtml), "Nmap: The Network Mapper," good guys as well as
bad guys use it. If you can recognize what Nmap traffic looks like and
you know that you\'re not the one running it, then odds are it is
someone attempting to map out your network.