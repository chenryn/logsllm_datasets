4.插入和附加文本
如你所料，跟任何其他编辑器一样，sed编辑器允许你向数据流中插人和附加文本。这两个
命令的区别有些模：
口插人（insert）命令（i）在指定行前面添加一个新行；
口附加（append）命令（a）在指定行后面添加一个新行。
这两条命令的格式很容易让人困惑：你不能在单个命令行上使用这两条命令。要插人或附加
的行必须作为单独的一行出现，格式如下。
ged '[addzasa/cormand1
nev 2.ne *
newline中的文本按你指定的位置出现在sed编辑器的输出中。记住，当使用插入命令时，
文本会出现在指定行之前。
$echo *testing* I sed *1\
> This is a test'
Thia ia a test
testing
---
## Page 615
600
附录Bsed和gawk快逸指南
当使用追加命令时，文本会出现在指定行之后。
$ echo *testing* I sed *a\
> This is a test'
testing
This is a test
这允许你在普通文本的末尾插人文本。
5.修改行
修改（change）命令允许你修改数据流中的整行文本。其格式跟插人和附加命令一样，你
必须将新行与sed命令的其余部分分开。
$sed *3e\
> This is a changed 1ine of text.* data6
反斜线字符用来表明脚本中的新数据行。
6.转换命令
转换（transform）命令（y）是唯一一个作用在单个字符上的sed编辑器命令。转换命令使
用如下格式。
address?y /inchars/out char8/
转换命令对inchars和outchars执行一对一的映射。inchazs中的第一个字符会转换为
outchars中的第一个字符，inchazs中的第二个字符会转换为outchars中的第二个字符，依此
类推，直到超过了指定字符的长度。如果inchars和outchars长度不同，sed编辑器会报错。
7.打印行
类似于替换命令中的p标记，p命令会在sed编辑器的输出中打印一行。打印（print）命令
最常见的用法是打印与指定文本模式匹配的文本行。
$ sed -n */nunber 3/p′ data6
This is line number 3.
打印命令允许你从输人流中过滤出特定的数据行。
8.写入到文件
w命令用来将文本行写人到文件中。w命令的格式为：
address?v fiIensme
filename可以用相对路径或绝对路径指定，但不管怎样，运行sed编辑器的人都必须有文件
的写权限。address可以是任意类型的寻址方法，比如单行行号、文本模式、行号区间或多个文
本模式。
这里有个例子，它只将数据流的前两行写人到文本文件。
$ sed *1,2v test* data6
输出文件test只含有输人流的前两行。
---
## Page 616
附录Bsed和gawk快速指南
109
9.从文件中读取
你已经了解了如何使用sed命令向数据流中插人和附加文本。读取（read）命令（r）允许
你插人单个文件中的数据。读取命令的格式为：
{address]z filenase
其中Filename参数使用相对路径或绝对路径的形式来指定含有数据的文件。读取命令不能
使用地址区间，只能使用单个行号或文本模式地址。sed编辑器会将文件中的文本插入指定地址
之后：
$ sed *3r data' data2
sed编辑器将data文件中的全部文本都插人了data2文件中第3行开始的地方。
B.2gawk程序
gawk程序是Unix上最初的awk程序的GNU版本。相较于sed编辑器使用的编辑器命令，awk
程序采用了编程语言的形式，将流编辑又推进了一步。作为一份gawk功能的快速参考，本节将介
绍gawk程序的基础知识。
B.2.1gawk命令格式
gawk程序的基本格式如下。
gavk options pzogram file
表B-2列出了gawk程序支持的选项。
表B-2gawk选项
选项
描
- fα
指定用于分隔行中数据字段的文件分隔符
-f file
指定要读取的程序文件名
- var=value
定义gawk程序中的一个变量及其默认值
-nf J
指定要处理的数据文件中的最大字段数
-BE N
指定数据文件中的最大记录数
- keyword
指定gawk的兼容模式或警告等级。用help选项来列出所有可用的关键字
可以使用命令行选项轻松地定制gawk程序的功能。
B.2.2使用gawk
可以直接从命令行或shell脚本中使用gawk。本节将会演示如何使用gawk程序以及如何编写
由gawk处理的脚本，
---
## Page 617
602
附录Bsed和gawk快逸指南
1.从命令行上读取程序脚本
gawk程序脚本是由一对花括号定义的。你必须将脚本命令放在两个花括号之间。由于gawk
命令行假定脚本是一个文本字符串，你还必须用单引号来将脚本圈起来。下面是一个在命令行上
指定的简单的gawk程序脚本。
$gauk *(print $1}*
这个脚本会显示输人流中每行的第一个数据字段。
2.在程序脚本中使用多条命令
如果只能执行一条命令的话，这门编程语言也没多大用处。gawk编程语言允许你将多条命令
组合成一个普通的程序。要在命令行上指定的程序脚本中使用多条命令，只需在每个命令之间放
一个分号就可以了。
[0$ uTxd ,ose=$1, yne6 1 soTa BT eueu Ax ooe $
8Aeq 8T oueu Ax
该脚本执行了两条命令：先用一个不同的值替换第四个数据字段，再显示流中的整个数据行。
3.从文件中读取程序
跟sed编辑器一样，gawk编辑器允许你将程序存储在文件中，然后在命令行上引用它们。
$ cat script2
(print ss *a userid la * $1 )
$ gavk -F: -f scx1pt2 /etc/passvd
gawk程序在输入数据流上执行了文件中指定的所有命令。
4.在处理数据前运行脚本
gawk程序还允许你指定程序脚本何时运行。默认情况下，gawk从输入中读取一行文本，然
后对这行文本中的数据执行程序脚本。有时，你可能需要在处理数据之前（比如创建报告的标题）
运行脚本。为了做到这点，可以使用BEGIN关键字。它会强制gawk先执行BEGIN关键字后面指定
的程序脚本，然后再读取数据。
$ gauk BEGIN (print *Thiα la a test report*)*
This la a teat report
可以在BEGIN块中放置任何类型的gawk命令，比如给变量赋默认值。
5.在处理数据后运行脚本
类似于BEGIN关键字，END关键字允许你指定一个程序脚本，在gawk读取数据后执行。
$ gawk BEGIN (print *Hello World!*) (print $0) END (print
Hello Morld!
*byelbye*)* data1
This is a test
This is another test.
This is a test
This is another test.
aqaq
---
## Page 618
附录Bsed和gawk快速指南
603
gawk程序会先执行BEGIN块中的代码，然后处理输入流中的数据，最后执行END块中的代码。
B.2.3gawk变量
gawk程序不只是一个编辑器，还是一个完整的编程环境。正因为如此，有大量的命令和特性
和gawk息息相关。本节将为你介绍使用gawk编程时需要知道的一些主要功能。
1.内建变量
gawk程序使用内建变量来引用程序数据中特定特性。本节将会为你介绍可用于gawk程序中
的内建变量及其用法。
gawk程序将数据定义成记录和数据字段。记录是一行数据（默认用换行符分隔）。而数据字
段则是行中独立的数据元素（默认用空白字符分隔，比如空格或制表符）。
gawk程序使用数据字段来引用每条记录中的数据元素。表B-3描述了这些变量。
表B-3gawk数据字段和记录变量
量
插
述
S0
整条记录
$1
记录中的第1个数据字段
$2
记录中的第2个数据字段
Sn
记录中的第x个数据字段
FIELIWIDTHS
一列由空格分隔的数字，定文了每个字段具体宽度
F8
输人字段分隔符
R8
输入记录分隔符
OFS
输出字段分隔符
OR8
输出字段分隔符
除了字段和记录分隔符变量，gawk还提供了其他一些内建变量，可以帮助你了解数据的相关
情况以及从shell环境中提取信息。表B-4介绍了gawk中其他的内建变量。
表B-4更多的gawk内建变量
变
量
述
ARGC
当前命令行参数个数
ARGIND
当前文件在ARGV中的素引
ARGV
包含命令行参数的数组
COHVFHT
数字的转换络式（参见pxintr语句)。默认值为.6g
EIVIRON
由当前she目环境变量及其值组成的关联数组
ERRNO
当读取或关闭输人文件发生错误时的系统错误号
FILENAME
用作gawk输入的数据文件的文件名
当前数据文件中的记录数
---
## Page 619
09
附录Bsed和gawk快逸指南
(续）
变量
描
IGNORECASE
设成非零时，忽略gawk命令中出现的字符申的字符大小写
NIF
数据文件中的字段总数
NR
已处理的输人记录数
OFYT
数字的输出格式，默认值为a.6g
RLEXCTH
由natch函数所匹配的子串的长度
R.8TART
由natch函数所匹配的子串的起始位置
可以在gawk程序脚本中的任何地方使用内建变量，包括BEGIN和END代码块中。
2.在脚本中给变量赋值
在gawk程序中给变量赋值类似于在shell脚本中给变量赋值，两者都使用赋值语句。
$gawk
> BEGIN{
> print teating
> testlng=*Thia la a test*
This le a teat
>} ′
给变量赋值后，就可以在gawk脚本中任何地方使用该变量了。
3.在命令行上给变量赋值
也可以用gawk命令行为gawk程序给变量赋值。这允许你在正常代码外设置值，即时修改值。
下面的例子使用命令行变量来显示文件中特定数据字段。
$ cat script1
( *.=Sa)NI088
(pxint $n)
$ gawk -f acxipt1 n=2 Gata1
$ gauk -f script1 n=3 datal
这个特性是在gawk脚本中处理shell脚本数据的一个好办法。
B.2.4gawk程序的特性
gawk程序有一些特性使它非常便于数据操作，允许你创建gawk脚本来解析包括日志文件在
内的几乎任何类型的文本文件。
1.正则表达式
可使用基础正则表达式（BRE）或扩展正则表达式（ERE）将程序脚本要处理的行过滤出来。
在使用正则表达式时，正则表达式必须出现在它所作用的程序代码的左花括号之前。
$ gawk *BEGIN(rs=*,*) /test/ (print $1)* data]
Thia la a teat
---
## Page 620
附录Bsed和gawk快速指南
605
2.匹配操作符
医配操作符（matchingoperator）允许你将正则表达式限定在数据行中的特定数据字段上。
匹配操作符是波浪线（～）。你可以指定匹配操作符、数据字段变量以及要匹配的正则表达式。
$1 - /^data/
这个表达式会过滤出第一个数据字段以文本data开头的记录。
3.数学表达式
除了正则表达式外，还可以在匹配模式中使用数学表达式。这个功能在匹配数据字段中的数
字值时非常有用。举个例子，如果你要显示所有属于root用户组（组ID为o）的系统用户，可以
使用如下脚本。
$gawk -F1*$4 == 0(grint $1)* /etc/passwd
这个脚本显示出第四个数据字段含有值0的所有行的第一个数据字段。
4.结构化命令
gawk程序支持本节讨论的如下结构化命令。
if-then-else语句：
if (conditionlstatementl; else statement2
while语句：
while (condition)
etatement6
do-whi1e语句:
do (
)while (condition)
statenents
for语句：
for (vaziable assignment/ condition; iteration process)
这为gawk脚本程序员提供了大量的编程手段。可以利用它们编写出能够媲美其他高级语言
程序功能的gawk程序。
---
## Page 621
精通Linux命令行与shell脚本编程，尽在本书中
本书是关于Linux命令行和shel命令的全面参考资料，涵盖详尽的动手教程和实际应用指南，并提供
相关参考信息和背景资料，带你从Linux命令行基础入手，直到写出自己的shell。
时隔四年后的这一版本，针对Linux的新特性和实践，进行了全面更新。
·使用简单的shell脚本工具实现任务自动化
创建shell脚本，全面理解shell的用途
管理文件系统与软件包
使用nano、KDE及GNOME等编辑器
学习结构化命令、文本处理及正则表达式
创建与电子邮件、数据库及Web相关的实用脚本
优化环境、微调脚本
亚马逊读者评论
本书讲解透彻、代码示例丰富，并详细说明了不同shell之间的差异。花点时间学会编写shel脚本，
你将从中长期收益。
如果你想从整体上了解Linux，并开始学写脚本。就从本书开始吧。
WILEY
Copies of this book sold without a Wiley sticker
jedo pue pozuouneun aue jono au uo
图灵社区：iTuring.cn
热线：（010)51095186转600
分类建议计算机/操作系统/Linux
ISBN 978-7-115-42967-4
人民邮电出版社网址：www.ptpress.com.cn
定价：109.00元
---