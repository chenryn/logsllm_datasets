```
# vim /var/named/example-fz 
```
chroot环境：
```
# vim /var/named/chroot/var/named/example-fz 
```
---
```
$TTL 1D
@       IN SOA  ns1.example.tst. sarmed.example.tst. (
                                        0       ; serial
                                        1D      ; refresh
                                        1H      ; retry
                                        1W      ; expire
                                        3H )    ; minimum
IN NS      ns1.example.tst.
IN A       172.16.1.3
mail        IN A        172.16.1.1
        IN MX 10    mail.example.tst.
www     IN A        172.16.1.2
ns1     IN A        172.16.1.3
ftp     IN CNAME    www.example.tst.
```
**说明**：在区域文件中，SOA是开始授权（Start Of Authority）的意思。它的值的第一段是授权名称服务器的完全限定域名。完全限定域名后面跟着的是电子邮件地址。由于不能在[PI:EMAIL](mailto:PI:EMAIL)这样的格式中使用‘@’符号（译注：@有特定意义，代表本域。），我们将电子邮件地址重写成sarmed.example.tst.这样的格式。
以下是典型的常用DNS记录类型：
* **NS**：域名服务器
* **A**: 地址记录，记录主机名到IP地址的映射（译注，此处原文有误。）
* **MX**: 邮件交换记录。这里我们只用了一个邮件交换记录，设置其优先级为10。如果有多个邮件交换记录，我们可以使用多个数值优先级，数字小的优先级最高。例如，MX 0比MX 1优先级更高。
* **CNAME**: 标准名。如果在一台单一服务器上托管了多个服务，也很可能将多个名称解析到某个单一服务器。CNAME指定了一台服务器可能有的其它名称，并且将它们指向具有实际A记录的名称。
#### 2. 反向区域
反向区域包含了IP地址到名称的映射。这里，我们为172.16.1.0网络创建反向区域。在正式的域中，公共IP区块的拥有者拥有的DNS服务器存储反向区域文件。（某些服务，如邮件服务，要求IP地址具备正确的反向解析才能正常工作。而IP的反向解析，通常是由IP的拥有者如接入商或IDC来负责解析。）
非chroot环境：
```
# vim /var/named/rz-172-16-1 
```
chroot环境：
```
# vim /var/named/chroot/var/named/rz-172-16-1 
```
---
```
$TTL 1D
@       IN SOA  ns1.example.tst. sarmed.example.tst. (
                                        0       ; serial
                                        1D      ; refresh
                                        1H      ; retry
                                        1W      ; expire
                                        3H )    ; minimum
IN NS      ns1.example.tst.
1       IN PTR  mail.example.tst.
2       IN PTR  www.example.tst.
3       IN PTR  ns1.example.tst.
```
**说明**:除了下面的参数外，反向区域文件中的大多数参数和转发区域文件中的相同。
* PTR: IP反向解析记录，指向一个反向限定域名。
### 结束工作
既然区域文件已经准备好，我们接下来调整它们的权限。
非chroot环境：
```
# chgrp named /var/named/* 
```
chroot环境：
```
# chgrp named /var/named/chroot/var/named/* 
```
现在，我们为DNS服务器设置IP地址。
```
# vim /etc/resolv.conf 
```
---
```
nameserver 172.16.1.3
```
最后，我们可以启动DNS服务，并确保将它添加到启动服务中。
```
# service named restart
# chkconfig named on 
```
DNS服务器起动后，建议关注一下日志文件/var/log/messages，这里头包含了后台运行的一些有用信息。如果没有发现错误，我们可以开始测试DNS服务器。
### 测试DNS
我们可以使用dig或者nslookup来测试DNS。首先，我们需要安装必要的软件包。
```
# yum install bind-utils 
```
#### 1. 使用dig测试转发区域
使用dig来测试时，必须时刻关注状态信息：“NOERROR”，任何其它值都表明存在问题。
```
# dig example.tst 
```
---
```
;; ->>HEADER>HEADER>HEADER
译者：[GOLinux](https://github.com/GOLinux) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出