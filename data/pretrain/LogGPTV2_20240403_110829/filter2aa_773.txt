### 针对域证书服务的攻击（2）- ESC2

#### 0x00 前言
在ESC1的分析过程中，我们遇到了一个问题：Certify工具自带两个DLL文件，这给使用带来了不便。最近，我在Twitter上发现了一个项目[dnMerge](https://github.com/CCob/dnMerge)，通过NuGet将其添加到项目中，并在Release模式下生成，即可将所有依赖项编译成一个独立的EXE文件。需要注意的是，这种方法仅适用于Release模式，Debug模式下无法使用。

此外，我因本地网络问题修改了域控制器的IP地址，导致域内机器尝试Ping域名时返回127.0.0.1。这是由于我没有按照正规流程修改IP地址所致，详细情况可以参考[这篇文章](https://www.huaweicloud.com/articles/a7f1f7d57357f9c62042707d09ae5f20.html)。随后，我按照正确的步骤进行了修正，问题得以解决。这一经历也提醒我们在域环境中进行任何更改时都需谨慎行事，因为即使是微小的改动也可能引发严重的问题。这也是为什么许多管理员倾向于保持默认设置的原因之一。

回到今天的主题ESC2。ESC2与ESC1非常相似，大部分前提条件相同，具体如下：
- 普通域用户拥有注册证书的权限。
- 管理员审批被关闭。
- 不要求签名认证。
- 低权限用户能够使用危险模板。

与ESC1不同的是，ESC2中的证书模板被设置为Any Purpose EKU或no EKU，而无需开启CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT的要求。

在这种情况下，我们可以做些什么呢？让我们先搭建测试环境。

#### 0x01 危害环境搭建
鉴于ESC2与ESC1之间的差异较小，我们可以直接复制ESC1的模板并重命名为ESC2，然后将应用程序策略设置为“任何目的”。接下来，将ESC1中的使用者名称恢复至默认值。

#### 0x02 利用测试
我们将继续沿用ESC1的测试步骤，在此不再赘述详细的截图过程（如需回顾，请参阅ESC1的相关内容）。测试结果如下：

尽管我们在使用certify获取证书时设置了altname并指定了一个域管理用户名，但由于已将使用者名称恢复至默认值，系统并未采纳altname的设定，而是采用了当前用户的win101709身份。因此，最终生成的证书无法用于以管理员身份登录域控制器，如下图所示：“用Active Directory 中信息生成”。

#### 0x03 总结
综上所述，ESC2的实际效果并不显著。根据作者的描述，当证书模板被设为Any Purpose时，意味着攻击者可以获取多种用途的证书，例如客户端认证、服务器认证和代码签名等。然而，作者并没有进一步说明如何利用这些证书实现提权。实际上，虽然我们能够获取到各种类型的证书，但用户的权限并未发生改变。

值得注意的是，ESC2文档曾在2021年6月22日进行了更新。我认为这可能是作者最初的理解有误，但为了保持分类的一致性，该条目仍被保留下来。作者后来补充道，这些证书可能在SAML、AD FS或IPSec等网络服务中具有潜在的应用价值。具体的利用场景还有待进一步探索。总之，ESC2赋予了当前用户请求各类证书的能力，但其实际应用还需自行发掘。

对于无EKU的情况，即应用程序策略为空时，攻击者可以签署一个从属CA证书。然而，由于默认情况下该从属证书不受信任（即不在NTAuthCertificates的cACertificate列表中），因此依然无法实现提权。由此可见，无论是Any Purpose还是no EKUs配置，其主要影响在于扩展了攻击者获取不同类型证书的能力，而非直接提升用户权限。

总体而言，ESC2的效果有限。不过，后续或许会提供更多关于从属CA证书的具体利用案例。最后需要强调的是，ESC2与ESC1的主要区别在于是否允许自定义使用者名称，这一配置是能否成功提权的关键因素。

---
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-08  
No. 1 / 4 - Welcome to www.red-team.cn  
No. 2 / 4 - Welcome to www.red-team.cn  
No. 3 / 4 - Welcome to www.red-team.cn  
No. 4 / 4 - Welcome to www.red-team.cn