直到后来代码开始不断积累，成为一项资本投资，成为文化自身的
一部分，这时就再也无法舍弃了。你必须将这个决策过程的部分内
容形成制度。
Jenny：你一直在谈论团队中的成员，团队整体又是什么情况呢？你
认为运作良好的团队最主要的特征是什么？
Grady：我来说两个我认为最主要的特征。这是我来到一个组中能
够直接感受到的。最重要的特征是他们很开心。在加入一个组时，
你能够看出来他们是否相互喜欢，是否喜欢他们的工作。对于运作
良好的团队，这是一个明显的度量指标。
65
---
## Page 67
第二个主要特征是他们对外界的反应很灵敏，但是与此同时，他们
完成的代码也能够满足业务的需要。我前面说过了，这是一个很难
达到的平衡点。你可以有一些小团队，他们完全不受约束地运作，
得到很多乐趣，但是除了花掉人们提供的资金外什么有用的东西也
做不出来，而另外一方面，你也可以有一个小组，他们能够理解业
务需求、能够交流并能够做好代码构建。他们为业务构建高质量的
代码。
所以，我觉得这两件事情是最重要的。至于其他的，我认为都是次
要的。复杂的判断标准还有很多，但是只有那两个标准才是最重要
的。
Andrew：这个要求很难满足。很多人可能都在那种有很多工作乐趣
的团队中待过，但是能够认为那些团队真正有效的人就没有那么多
了。
Jenny：这两种情况相互抵消。
Andrew：是的一—你是如何避免发生这种事情的？
Grady：魔法很难创造，是一种忽隐忽现的东西。XeroxPARC在它
鼎盛的时期，虽然在盈利方面做得不好，但它却是一个令人很着迷
的地方。我认为Apple公司是一个让并发人员感到很并心的地方，
而他们在市场上也非常成功。Google在早期的时候也是一个非常强
调乐趣的地方，他们挣的钱比上帝还多，他们的效率并不低一—但
是现在要做到这一点比以前更难了。IBM首先强调的是业务，然后
才是乐趣，但是你还是会发现很多乐趣，人们是一个整体，热爱自
已的工作。
我不知道应当怎么做。你问我产生这种自然行为的规则是什么。如
果我知道答案是什么，我都可以去掌管一个小国家了。
Andrew：规则是不存在的，但是可以做一些事情，把团队或文化向
正确的方向推进。
Grady：对。我来讲两个方面。
第一是确保他们参加一点社交活动。换句话说，你会发现一些小组
理头编写代码，这样当然很好，因为你需要一些熟练使用工具的
人。但是说到底，我们构建代码是为了满足某些业务需要，我们需
66
---
## Page 68
要确保团队不是孤立的，不能与外界完全隔绝。我认为社交活动很
重要，因为这种做法为他们正在做的工作提供了环境和依据。
第二是必须确保他们不会受到其他东西的影响，作为项目经理尤其
应当做到这一点。在某些公司中有很多令人讨厌的政治。如果一个
团队受到了政治组织中每关发生的阴谋的困扰，他们会担心得要
命。作为优秀的项目经理，必须成为开发人员和组织的政治中间的
一道屏障。
在某些情况下，正如我前面所说的，经理能够做得最好的事情是确
保任何人都不会成为他们的阻碍。它可以是简单的事情，比如在团
队成长过程中需要并的愚蠢的会议一—但与此同时，你也不能让他
们毫无约束。在走廊里用玩具手枪进行枪战游戏也是很有趣的，但
是你要确保那些人才是重中之重。
Jenny：项目经理如何确保团队中的人是重点所在？
Grady：我想到了3件事。第一，我发现最好的领导都非常善于表
达。他们能够编写非常好的代码，他们也能够和外面的人进行交谈
他们能够超越代码本身。
第二，他们非常在意人际关系。我发现最优秀的领导不仅仅是设备
发烧友，而且能够在构建软件时能够明白并尊重人们的感受。人们
有不顺利的时候一一他们的爱犬死了，孩子在学校遇到问题，各种
事情都会影响并发团队。优秀的领导能够理解这些人的问题。
第三，优秀的领导能够同时在多个抽象级别工作。向下能够处理代
码，向上能够与CEO交谈，虽然这种人确实罕见，但我发现他们是
最好的领导，因为他们可以提供那种坏境。
Andrew：听你讲这些东西非常有趣，很多时候，特别是我刚参加工
作那段时间，我参加过一个团队，我对自己说：“我和上司没有共
同语言。"我道切需要一名“翻译”，我认为自己之所以后来担任了经
理的工作，完全是为了摆脱那种倍感失望的境地而采取的措施。对
于那些因为其他人无法填补空缺而必须承担这种角色的人，你能够
说些什么？
Grady：对于这样的人，我总是给出这样的建议：请心态平和地承
担起那个角色，不要傲慢，因为你面对的往往是一些技术能力很强
的人，他们都有一定的自尊，傲慢与缺少尊重是让他们感到最恼火
67
---
## Page 69
的事情。所以，请心态平和地进入角色。同时还要勇敢，不怕失
败。
在那样的环境中需要培养的一项能力是向权力部门讲真话，虽然这
样做在拿自己的生计冒险，因此有些人难以迈出第一步，但是这个
职位确实需要如此。在这个位置上你能够和管理人员说上话：“这
个进度真是太荒唐了，地球上没有人能够做到。太不现实了。”你
必须尊重事实，否则，整个过程就会变成一个又一个的谎言。要对
权力部门说真话，这点非常重要。这是把你的团队与令人不习惯的
政治隔离开的另外一个方面。
但是这种做法也难以采用，因为有时候管理人员甚至不理解软件并
发的过程。对于他们，软件不过是组织中一项巨大的并销成本，他
们更愿意把软件外包出去。如果是那种情况，领导也必须平和地开
导高层管理人员，这是一个漫长的过程。就算失败，你也总是能再
找到另外一份工作：生命短暂，不必浪费在拙劣的组织中。
Andrew：很有意思一我和Jenny花了很多时间与不同公司的很多
人交谈，讨论项自为什么会失败。实际上，我们整理了一个题为
“项目为什么会失败"的讲座并到各地去做报告。我们总是发现，听
别人谈论失败时人们会感到非常不舒服。这真是太遗憾了，我认为
他们如果想从失败中学到东西，就需要学会讨论失败。你是否也注
意到了这一点？
Grady：我认为健康组织的标志之一是他们对失败不会过分渲染。
极度刻板、根本不想失败的组织一般来说也都是些最缺少创新的组
织，那些人非常害怕失败，总是采取最保守的行为方式，所以他们
也没有什么乐趣。另一方面，那种在失败方面较为自由的组织是生
产率更高的团队，我所说的在失败方面较为自由指的不是那种破坏
业务的方式，而是给失败以一定的自由度，这样人们就不会对每一
行代码都担惊受怕。因为，你写的每一行代码都可能有错误。你需
要得到机会，随着时间的推移对代码进行重构。
构建的软件从开始没有遗产到后来有了遗产，对于正在进行这种转
换的组织，有一个严重问题。我看到这样的场景出现过多次。你们
有一个小组——尤其是使用一些轻量级东西的小组，比如Rubyon
Rails——他们任何遗产都没有。可能有一个数据库，但是某人说
“去构建个X”，然后他们就构建X了，因为他们除此之外没有其他需
要处理的事情。也许有几个服务或API，但是它们基本上是运行在
68
---
## Page 70
全新的领域中。但问题是这些代码也并始累积了。今天所写的每一
行代码到了明天就成为遗产了。在某个时刻你会说：“天哪，我要
把这些代码全部扔掉，重新开始。"而到了另外一个时刻你就会
可能把这些东西都重写一遍。”然后到了某个时刻你会意识到自己
可以有一些选择。一个选择是丢弃代码并重新来，这种做法一般是
没有什么意义的，因为你想要的行为根本没有实现。另外一个选择
是对代码进行隔离，在上面加一些封装器，然后虽然你再也不会处
理它了，但你会说：“让我们把它放在那里吧，它工作得很不错
了，我们最终会处理它的。”而在另外一些情况，你则需要收获其
中有用的部分：“把它扔掉，但是尽可能收获最好的部分，重新编
写，但是不需要从头开始。”
我遇到的那些持久的组织一般都会不断地重构，不仅仅是程序级别
的重构，还包括架构级别的重构。但是会遇到一些困难，因为你们
的高层组织会说：“我们已经为这些代码付过钱了，为什么要重新
写呢？”回答是我们这样做是为了让它更简单一些，这将带给我们
创新的机会和某种程度的自由，如果不做重构，这些都是无法得到
的。但是让别人接受这个观点确实很难，这也是我刚才说过的并导
过程的一部分。”
Jenny：我怀疑是否人们看到“重构"这个词的时候就会马上想到敏捷
开发。你是这个意思吗？重构对于团队的生产率又意味着什么？
Grady：对我来说，重构仅仅是一个标签，是我长期以来看到的一
些最佳实践。不管你赋予这些最佳实践什么样的标签，我看到那些
跨越不同区域的、生产率超高的组织遵循的都是这种做法，分为三
个部分。有些组织倾向于增量、送代地产生可执行架构的发行版。
那三个部分是什么呢？
第一，把重点放在可执行代码上。将没有加工过的代码作为初始产
品推出，这是最重要的事情，显然是一个敏捷过程。第二，以增
量、送代的方式完成这些事情，意味着你们的节奏有一定规律，可
以引入重构，在某个时刻可以做得稍微差一点，并且有并行的路径
让你尝试一些东西。第三个因素，敏捷的成分少一点，更多是RUP
领域中的一个，是把重点放在架构上，把架构作为管控手段之一。
因为根据我的经验，当开始处理任何一种与智力相关或具备一定大
小的系统时，都会日积月累，形成一套设计决策，成为部落回忆的
一部分，就算是有办法把那些决策全部扔掉并重新并始，花费的代
69
---
## Page 71
价也非常高。所以我一般采用的管控做法是在系统随着时间的推移
而不断增长时，把那些架构决策保存下来，这样我最后得到的就不
会是一个完全随机产生的软件了，而是一个随着时间的推移而有意
形成的软件。
你可以把它叫做敏捷，叫其他什么都可以，这些就是我在生产率超
高的团队发现的实践方法。
11饮水机问题指的是公司的同事聚集在饮水机附近的时候可以讨
论一些有趣的新闻，以此增进彼此的关系。这种效应成为“饮水机
效应”。
[2].被动攻击（passive-aggressive）是一种以被动方式表现其强烈攻
击倾向的人格障碍。患者性格固执，内心充满愤怒和不满，但又不
直接将负面情绪表现出来，而是表面服从，暗地敷衍、拖延、不予
以合作，常私下抱怨，却文相当依赖权威。
[3].菲尔医生（Dr.Phil）是PhilMcGraw主持的电视系列节目，主持
人根据自已从事心理学医生工作的经历向观众提供生活策略方面的
建议。
第10章让“我”为失败负责吧
Jennifer Greene
我在简历的最后一行是这样写的：“JennyGreene是一名经验丰富的
项目经理、并发经理，有过很多成功项目和成功团队的经验。"确
实如此，我管理过很多团队，能够按照要求，在规定的时间和预算
内高质量地构造软件。我敢肯定很多人在简历中都可以这样写。但
是在我回顾过去大约15年中所做的工作时，我意识到很多成功的项
目并没有为我所在的公司取得市场优势。有些时候，这些项目甚至
没有解决它们应当解决的问题。我读过的几乎每一份资料都告诉
我，不仅仅是我一个人存在这种情况。很多项目比我做过的项目要
糟得多。一些已经公布的估计数据认为软件项目总体失败率高达
80% 
几年前，我和Andrew开始到各地参加交流活动和会议并做了一个题
为“项目为什么会失败"的讲座。人们会因为过程繁杂或难以实施而
拒绝采用某些实践方法（如代码评审和估算），我们的讲座的主要
目的是帮助人们理解这些实践活动与避免常见陷阱之间的关系。为
70