domain will not lead you astray in the cybersecurity domain.   
140
However, it may have the side effect of making people think they 
are dealing with a natural system, one in which they can't easily 
alter  the  infrastructure  (cells,  organisms)  and  can  only  react.  
Cybersecurity  resides  in  artificial,  engineered  systems  and  the 
threats against it are intentional and man-made.  Regarding it as a 
natural system may steer us away from engineered solutions that 
would be much more difficult to accomplish in natural systems. 
2.6  Cloud 
Although  “cloud”  computing  is  not  specifically  a  cybersecurity-
related metaphor, its widespread use requires a comment. Where 
did  we  get  the  idea  that  computing  is  somehow  similar  to  large 
volumes of water vapor flitting across the sky?  I don’t know for 
sure, but I suspect this metaphor gestated in the countless slides 
(including many I have shown myself) in which a large collection 
of  network 
links  and  nodes  representing  computers  and 
communication paths was drawn as a fuzzy cloud in order not to 
have to represent the full details and complexity of the network it 
was  to  represent.  Data  sent  from  one  system  to  another  would 
leave  its  source,  enter  the  network  “cloud,”  and  emerge  from 
some  other  part  of  the  cloud  to  be  delivered.    It  is  a  short  step 
from having the cloud represent a network to having it represent 
the attached computing resources as well. 
But  is  this  a  helpful  metaphor?  What  would  security  be  for  a 
cloud? To a meteorologist, a cloud may be a complex, structured 
object, but I doubt whether reasoning about meteorological clouds 
will yield much insight about computational ones.  
3.  BUILDINGS AND BUILDING CODES 
The metaphor I want to promote is that of software systems, and 
more broadly, computing systems, as buildings.  It’s hardly a new 
idea.  Computers  are  designed  objects,  artifacts,  and  people  have 
written  about  the  organization  of  both  the  physical  machine 
structure, the instruction set, and the organization of the software 
running on the machine in terms of “architecture” for a very long 
time, if not from the beginning. Returning to The Mythical Man-
Month,  one  of  Brooks’s  key  points  is  the  need  for  conceptual 
integrity in system design, and he explicitly draws parallels with 
the design of European cathedrals to illustrate his points [1, p. 42 
ff.]. 
Reasoning  about  building  construction  doesn’t  of  course  carry 
directly  over  to  software,  but  the  parallels  are  significant  and 
useful.  Physical  buildings  of  any  size  require  design  documents 
and  specifications.  They  must 
tolerate  natural  phenomena 
(gravity, wind and weather, earthquake, fire), they are subject to 
inspection during construction, and they are tested before they can 
be occupied. Software and computing systems (perhaps especially 
cyber  physical  systems)  are  specified,  designed,  implemented, 
inspected,  and  tested.  They  must  tolerate  the  perils  of  the 
environment in which they are intended to be used.  
But aren’t software and computing systems much more complex 
and much more dynamic than buildings? Yes. Nevertheless, if we 
are  to  have  confidence  that  a  software  system  meets  its 
requirements,  as  we  surely  want  to  have  in  systems  on  which 
critical  infrastructure  relies,  those  systems  must  have  a  structure 
and a mode of accommodating change that we can understand and 
reason about. 
Throughout the world, the primary mechanism that has arisen to 
assure  that  buildings  and  collections  of  structures  are  safe  and 
useful  to  their  occupants  and  communities  is  the  building  code. 
Building codes in general specify constraints of various sorts on 
how  a  building  may  be  constructed.  They  can  incorporate  all 
141
kinds  of  requirements  relating  to  design,  construction  materials, 
gas,  electrical,  and  plumbing  systems,  and  more.  They  are  not 
generally  drafted  by  governments  but  rather  by  professional 
societies  of  various  sorts,  motivated  by  a  variety  of  interests.  
They  are  periodically  updated  as  society,  technology  and  risk 
perceptions change. They gain the force of law only when they are 
adopted by municipalities, who may choose to adopt a model code 
directly or with modifications motivated by local interests. 
I  argue  that  the  notion  of  a  building  code,  and  particularly  a 
building  code  for  critical  infrastructure  software  security,  is  one 
that modern society needs to adopt in order to assure that future 
generations  will  have  a  cyberinfrastructure  that  can  meet  the 
demands society is imposing on it. Such a code can provide a way 
for  us  to  capture  what  we  have  learned  about  how  to  build  and 
how  to  inspect  software  to  support  critical  needs  in  the  face  of 
attack.  It  can  be  developed  incrementally  and  can  be  adopted 
where needs are most urgent. It can be tailored to domains where 
critical  functions  and  threats  differ.  It  can  be  updated  as  our 
understanding improves, as better methods are developed.  
Further, I want to persuade you to take an active role in helping to 
develop such a code. To help convince you of the importance of 
this  task,  I  first  provide  some  historical  context  about  buildings 
and building codes. 
3.1  Buildings and Foundations 
Everyone  knows  about  the  great  pyramids  of  Giza,  outside  of 
Cairo. There is a somewhat less famous pyramid about 30 miles 
south  of  Cairo  called  the  Bent  Pyramid,  built  by  Sneferu  about 
2600 BCE. The name comes from the fact that the lower part of 
the  pyramid  rises  at  an  angle  of  about  54  degrees,  but  the  top 
section rises at a shallower angle of about 43 degrees, giving the 
pyramid  a  “bent”  aspect.    The  reason  for  the  change  in  angle  is 
thought  to  be  that  another  nearby  pyramid  being  built  at  the 
steeper  angle  collapsed  while  this  one  was  under  construction, 
causing a change of plan. 
The pyramids, the Acropolis, the Roman Forum, and most of the 
great cathedrals of Europe were built before Galileo and Newton 
laid the foundations for modern physics.  Today we are building 
computing 
and 
connectedness,  but  we  are  mostly  building  them  without  the 
benefit  of  scientific  foundations  as  useful  and  strong  as  Galileo 
and Newton provided for mechanics.  Instead, we build systems, 
see if they (or similar ones under construction) fall down, revise, 
and repeat.  
About 800 years after Sneferu, Hammurabi’s famous code of laws 
included what we might consider the first building code:  
unprecedented 
complexity 
systems 
of 
§229  If  a  builder  build  a  house  for  someone,  and  does  not 
construct it properly, and the house which he built fall in and 
kill its owner, then that builder shall be put to death. [10] 
This would be in the category of a “performance code” today: it 
doesn’t tell you how to build the building, but if it doesn’t stand 
up, you are liable. 
At  this  writing,  we  are  somewhere  between  Sneferu  and 
Hammurabi  with  respect  to  building  codes  and  liability  for 
software and computing systems in general.  There are efforts in 
progress to try to develop more scientifically rigorous foundations 
for  software  and  security  engineering,  but  system  construction 
proceeds without them.  Software producers have so far avoided 
general liability for their products and systems, though the advent 
of cyber physical systems may bring change in this area. 
3.2  How Do Building Codes Arise? 
The  creation  of  building  codes  seems  to  be  stimulated  by 
disasters. Here are a few disasters of different kinds and how they 
affected  building  codes  that  I’ve  been  able  to  glean  from  the 
worldwide web.  
3.2.1  Fire: London, 1666 
The  great  fire  of  London,  documented  in  Pepys  diary,  burned 
from  September  2-5,  1666  and  destroyed  some  430  acres, 
approximately  80%  of  the  city,  including  13,000  houses,  89 
churches,  and  52  guild  halls  [11].  The  fire  led  to  the  London 
Rebuilding Act of 1666 and further legislation that aimed to limit 
new  construction  to  be  faced  with  brick  and  imposed  other 
measures  designed  to  reduce  the  likelihood  of  large  fires  [12]. 
These  acts  are  commonly  cited  as  the  earliest  laws  regulating 
construction in London, although it is also reported that thatched 
roofs were banned as early as 1212, again to reduce the danger of 
fire [13].  Reading the earlier act, it appears that enforcement was 
not strict. 
3.2.2  Earthquake: Santa Barbara, 1925 
A  month  after  the  disastrous  San  Francisco  earthquake  of  1906, 
scientists  and  engineers  banded  together  to  form  the  Structural 
Association  of  San  Francisco  and  concluded  that  well-braced 
wooden buildings secured strongly to their foundations could have 
withstood  that  quake.  Although  (perhaps  for  economic  reasons) 
the  city  fathers  did  not  add  specific  earthquake-resistance 
requirements  to  the  building  code,  ordinances  were  passed 
approving  the  use  of  reinforced  concrete  and  requiring  steel 
framing  in  any  new  brick  construction  In  June,  1925,  Santa 
Barbara  suffered  a  severe  earthquake  that  leveled  most  of  its 
downtown  and  led  to  the  first  earthquake  provisions  in  any 
California municipal building code. [14, 15, 16]. 
3.2.3  Hurricane: Okeechobee 1928 
Miami  was  hit  by  a  powerful  hurricane  in  1926,  and  another 
Category  4  hurricane  struck  further  north  in  1928,  in  the  Lake 
Okeechobee  area.  The  storm  caused  thousands  of  deaths  along 
with widespread and severe property damage. Buildings made of 
brick, stone, or concrete survived better than others and those with 
shutters  had  much  less  damage  to  windows.  These  observations 
led  to  stronger  building  codes  [17,18].    It  is  worth  noting, 
however, that in the aftermath of Hurricane Andrew in 1992, more 
than  a  half  century  later,  deficiencies  in  building  codes  and 
enforcement remained a major issue in South Florida [19].  
3.2.4  Construction errors: Kansas City, 1981 
The collapse of a suspended walkway in the atrium of the Hyatt 
Regency Hotel in Kansas City killed 114 people and injured more 
than  200  others  in  July  1981.    The  cause  was  ultimately 
determined to be a change from the original design in the way the 
walkways  were  suspended.  Instead  of  a  single  rod  bearing  two 
levels of walkways, the lower walkway was suspended from the 
upper  walkway.  This  change,  proposed  by  the  steel  company 
building  the  structure  and  approved  by  the  engineering  firm 
responsible  for  the  design,  led  directly  to  the  disaster.    The 
investigation concluded that the fundamental problem was lack of 
proper  communication  between  the  designer  and  the  steel 
company.    The  responsible  engineers  were  convicted  of  gross 
negligence and unprofessional conduct; they lost their engineering 
licenses and their memberships in the American Society of Civil 
Engineers.  The  engineering  firm  was  not  found  criminally 
negligent, but it lost its license to be an engineering firm [20,21].  
As  it  turned  out,  even  the  original  design  was  deficient  with 
respect to the local building code requirements.   
3.2.5  Malicious Attack: Oklahoma City Bombing  
The  bombing  of  the  Alfred  P.  Murrah  federal  building  in 
Oklahoma  City,  April,  1995,  is  reported  to  have  destroyed  or 
damaged  324  buildings  and  claimed  168  lives.    The  effect  on 
building construction was first to trigger the installation of Jersey 
walls (add-on security) to many existing Federal buildings and to 
add  new  requirements  for  Federal  buildings  that  they  have  deep 
setbacks from surrounding streets to reduce vulnerability to truck 
bombs.  Other  recommendations  for  design  of  new  Federal 
buildings  drew  on  features  also  used  for  earthquake  protection 
[21,22]. 
3.2.6  Discussion  
The preceding examples illustrate how disasters can stimulate the 
creation of building codes and other kinds of regulations that aim 
to assure the safety of public and private structures in the face of 
hazards.  However, as is well-documented in [16] with respect to 
California  earthquakes,  it  often  takes  repeated  disasters  and 
diligent work by safety advocates to stimulate public policy.  The 
history of hurricane damage in Florida illustrates the importance 
not only of having codes but of enforcing the codes that are on the 
books. For those interested in more details, Robert Ratay provides 
several  specific  and  relatively  recent  examples  of  structural 
failures  (including  one  bridge  construction  failure  on 
the 
Baltimore-Washington  Parkway  near 
the  National  Security 
Agency)  that  have  triggered  changes  in  codes,  standards,  and 
practices in structural engineering [23,24].  
3.3  Building Codes Today 
Several kinds of building codes are in use in the United States and 
around  the  world  today.    The  Uniform  Plumbing  Code,  which 
originated in Los Angeles in 1948, published its fourth edition in 