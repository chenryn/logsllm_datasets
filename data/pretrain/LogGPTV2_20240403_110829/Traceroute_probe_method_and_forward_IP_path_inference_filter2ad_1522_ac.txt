–
–
–
80
21576
(8.2%)
94.6%
156
44
0
5
225
7
293
–
11121*
9238*
394
93
ICMP-
Paris
23638
(9.0%)
98.8%
56
2
1
8
176
5
26
23364*
–
–
–
–
Table 7: Stop reason for methods that probed be-
yond an ICMP time exceeded message from the des-
tination for the cbg-uk vantage point. ICMP-Paris
is nearly 4 times as likely to obtain an expected type
of response with continued probing than UDP-Paris.
Reached, expected
Reached, other
Loop
GapLimit
Total messages
UDP-
Paris
225
53
367
1368
2013
TCP port
80
787
99
459
1132
2477
ICMP-
Paris
1103
83
568
1002
2756
route. Table 6 shows details of the replies that caused des-
tinations to be reached using the UDP-Paris, TCP port 80,
and ICMP-Paris methods from cbg-uk. The expected type
of reply from a destination of a UDP-Paris traceroute is an
ICMP port unreachable message; 96.0% of the replies classed
as reaching the destination were of this type for this method.
The expected type of reply packet for a TCP port 80 trace-
route is a TCP SYN/ACK or RST/ACK packet, depending
on if a service is listening on the destination port; 94.6% of
the replies classed as reaching the destination were of this
type for this method. The expected type of reply packet for
an ICMP-Paris traceroute is an ICMP echo reply packet;
98.8% of the replies classed as reaching the destination were
of this type for this method.
Table 6 excludes ICMP time exceeded replies with a source
address matching the destination probed. In this case when
such a reply was received by scamper it continued probing
until there was a reason to halt probing in order to deter-
mine if a destination might be reached with further probes.
Table 7 shows the result of probing further. The ICMP-
Paris method is much more likely to then obtain an ICMP
echo reply message (40.0%) than UDP-Paris is to obtain an
ICMP port unreachable message (11.2%) in this scenario.
Of the remaining ICMP destination unreachable messages
received, all had a source address matching the destination
address probed.
Since we use multiple methods to infer forward IP paths
to each destination, we can use the combined information
to implicate some replies as spoofed. For UDP traceroute
methods, an ICMP port unreachable message should be sent
by a destination host when the datagram cannot be deliv-
ered because the indicated port is not running an active
process [23]. The port unreachable message may be from an
address of a diﬀerent interface on the same host as the desti-
nation address of the triggering packet; in fact, this artifact
is used as a heuristic in alias resolution [24, 25]. However, if
the source address of a port unreachable message in one IP
path is also observed in a time exceeded message in one of
the other IP paths to that destination, and at least one other
time exceeded message follows from an address other than
the destination’s, then the port unreachable is inferred as
not sent by the destination, since the pair of time exceeded
messages in the second path indicate the destination has
still not been reached. Of the 12875 destinations considered
reached using the UDP-Paris method from cbg-uk based on
an ICMP port unreachable response, 27 are inferred to be
from an intermediate host rather than the destination itself.
Although arguably negligible, this result does demonstrate
that intermediate systems do send port unreachable mes-
sages on a destination’s behalf, which can lead to false alias
resolution and false inference of reachability – reachability
that was previously thought to be unambiguous [11].
Similarly, if one method reveals an IP path to E of A
B C D E, while a second method reveals a path of A B
E, it is likely that the reply allegedly from E in A B E is
spoofed, as this path suggests B and E are neighbours, while
the presence of D in the ﬁrst path rules out the possibility
that C is merely an alias of E. Since a router should always
prefer a directly connected path, we would not expect to
see C and D in the middle of two neighbours (B and E)
using any method – hence we conclude that B and E are not
really neighbours and in the second method some other host
is spooﬁng replies using E’s address.
Of the 21576 destinations that were classed as reached
using the TCP method from cbg-uk, we used this reason-
ing to infer 221 replies that were spoofed. Of these, 158
replies were SYN/ACK packets, 61 were RST/ACK pack-
ets, and two were time exceeded messages. The TCP packets
indicate the presence of an application-level gateway early
in the path; because these replies are spoofed at least two
hops prior to the destination, the TCP method will miss
potentially valuable IP links at the edge of the network. In
addition, because of our conservative requirement to visit
at least two additional hops from a common parent hop
before inferring a reply as spoofed, these values are likely
lower bounds of spooﬁng activity. The other methods were
inferred to spoof much less; with the UDP-Paris method
41 messages purporting to be from the destination were re-
ceived, while there were only 14 such messages with the
ICMP-Paris method.
3.1.3 Firewall placement
Related to the problem of reachability is the detection of
ﬁrewalls along the probed path. Figure 3 shows the addi-
tional hops discovered by cbg-uk when one probe method
reaches a destination but another does not, either because
 12000
 10000
 8000
 6000
 4000
 2000
y
c
n
e
u
q
e
r
f
e
v
i
t
a
l
u
m
u
c
 0
−9 −6 −3  0  3  6  9  12  15  18  21  24  27  30
additional hops past blocking system
icmp−paris reach, udp−paris not
tcp reach, udp−paris not
icmp−paris reach, tcp not
tcp reach, icmp−paris not
udp−paris reach, tcp not
udp−paris reach, icmp−paris not
Figure 3: Cumulative frequency of additional hops
past blocking system to reachable destination from
cbg-uk. Most ﬁrewalls were observed to discard
packets two hops from its destination.
an ICMP destination unreachable message was sent, or be-
cause no reply was received for ﬁve consecutive hops.
In
all cases in which one method reaches a destination but an-
other fails, the most common number of additional hops
discovered, including the destination, is two. However, this
distribution of additional hops is long tailed; in most cases
the number of additional hops discovered does not level out
until after seven.
3.1.4 Results of last-ditch probing
When ﬁve consecutive unresponsive hops were encoun-
tered, traceroute halted due to the gaplimit condition. In
this condition, we send up to two last-ditch probes with an
IP TTL of 255 in order to determine if there is anything
further in the path that may have responded if hop-by-hop
probing had continued. Table 8 shows the response rate to
the last-ditch probes and classiﬁes the types of responses
received for three probe methods at cbg-uk. Overall, the
last-ditch probes have a low response rate, although the last-
ditch response rate to the TCP method is 1.7 times that of
the UDP-Paris method.
3.1.5 Similarity of paths observed
This section considers similarity of paths collected by each
method for all vantage points. Pervasive deployment of load
balancing [15] implies expected variation in IP paths col-
lected to each destination. Figure 4 shows the uniqueness of
a subset of paths captured at each vantage point for which
the destination was reached and all intermediate hops in-
ferred for all three probe methods. The total number of
complete paths considered depends on the vantage point;
bcn-es had the fewest considered with 1732, while syd-au
had the most with 7814; in our data, the vantage point has
Table 8: Responses to last-ditch probes collected at
cbg-uk
Gaplimit
Replies to probe #1
Replies to probe #2
Total
Response rate
Time exceeded
Prohib ﬁlter
Prohib host
Unreach net
Unreach host
Unreach port
Echo reply
TCP Syn-ack
TCP Rst-ack
Other TCP
UDP-
Paris
203408
1241
320
1561
0.8%
TCP
port 80
194371
2152
373
2525
1.3%
ICMP-
Paris
189012
1795
380
2175
1.2%
331
135
6
32
719
338
–
–
–
–
329
166
2
35
794
12
–
370
807
10
359
226
0
33
790
2
765
–
–
–
more impact on the number of complete IP paths than the
probe method does. As roughly the same number of desti-
nations were reached from each vantage point, the variation
is mostly due to the prevalence of unresponsive hops unique
to each vantage point.
Figure 4 also suggests that the uniqueness of the paths
depends mostly on the vantage point and the forwarding
policies of its upstream paths. For example, the number
of traces where the same IP path was inferred by all three
methods ranges from 2.5% at nrt-jp to 48.3% at syd-au.
While there is signiﬁcant variance among vantage points,
one trend emerges. Of the IP paths that were not the same
for all three methods, the largest intersection is between the
ICMP-Paris and TCP methods for all vantage points except
nrt-jp.
If per-ﬂow load balancing were applied equally to
TCP, UDP, and ICMP packets, the distribution of dissimilar
paths would be equal across the three techniques.
Figure 5 shows the intersection of IP links per method
for each vantage point. Depending on the vantage point,
between 238k and 266k IP links were inferred, with 76%
to 78% of the IP links inferred by all three probe meth-
ods. Despite reaching the fewest destinations, UDP-Paris
allows inference of more links than any other method, while
ICMP-Paris allows inference of the most links that are not
inferred by the other methods. 97% of IP links are in-
ferred by combining ICMP-Paris and UDP-Paris. The fact
that TCP infers the fewest links reinforces the earlier result
where application level gateways are inferred to intercept
TCP connection requests at a greater rate, and tends to
suggest some routers may have diﬀerent forwarding policies
depending on the transport protocol. We explore this fur-
ther in Section 3.1.7.
Figure 6 shows the intersection of AS links inferred from
each vantage point. Depending on the vantage point, be-
tween 17461 and 18065 unique AS links were inferred using
the three methods, with 82% in common across the three
methods. While UDP-Paris inferred the greatest number
of IP links, it inferred the fewest AS links, suggesting that
most of the additional IP links inferred with UDP-Paris are
internal to the ASes inferred. The IP links UDP-Paris misses
UDP−Paris only
UDP−Paris n TCP
TCP only
TCP n ICMP−Paris
ICMP−Paris only
ICMP−Paris n UDP−Paris
by all methods
)
s
d
n
a
s
u
o
h
t
(
s
h
t
a
p
f
o
r
e
b
m
u
n
 20
 18
 16
 14
 12
 10
 8
 6
 4
 2
 0
)
s
d
n
a
s
u
o
h
t
(
s
k
n
i
l
P
I
f
o
r
e
b
m
u
n
 250
 200
 150
 100
 50
 0