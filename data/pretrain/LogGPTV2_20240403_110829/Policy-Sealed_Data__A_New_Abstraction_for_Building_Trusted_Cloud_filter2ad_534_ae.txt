1M
10M
100M
Latency (ms)
Sealing
Unsealing
120
120
121
134
264
1522
50
49
51
68
243
1765
Table 5: Performance overhead of sealing and unsealing
data, varying the size of the input data.
)
s
(
y
c
n
e
t
a
L
 10
 8
 6
 4
 2
 0
Symmetric encryption
CPABE
Xen base
Create
Save Restore Migrate
Figure 11: Latency of VM operations in Xen. Encrypting
the VM state accounts for the largest fraction of the overhead,
while the execution time of CPABE is relatively small. En-
cryption runs AES with 256-bit key size.
8.3 Cloud Compute Service
We now evaluate the performance overhead that the
changes to Xen incur on its VM management opera-
tions, namely create, save, restore and migrate. We
measured the time to complete each operation using an
example VM for 10 trials. The example VM ran a De-
bian Lenny distribution, with Linux-xen 2.6.26, used a
4GB disk image, and its memory footprint was 128MB.
Figure 11 shows the results of our experiments. The
performance impact is noticeable, especially for the
save, restore, and migrate operations, where the com-
pletion time roughly doubled. The overhead, however,
came from encrypting the VM’s entire memory foot-
print; using Excalibur to secure or recover the encryp-
tion key added a small delay. Unlike the other opera-
tions, create experienced a small overhead increase of
only 4%. This is because the system only decrypted
the kernel image, which occupied 4.6MB, instead of the
larger VM footprint as it did for the other operations.
As the results show, seal and unseal introduced no-
ticeable overhead to the VM operations due to the sym-
metric encryption of the VM image. However, given
that these operations occur infrequently, and consider-
ing the additional beneﬁts to data security, we argue that
these results reﬂect an acceptable trade-off between se-
curity and performance.
9 Related Work
Over the past several years, there has been considerable
work on trusted computing [38]. Most of this work tar-
gets single computers with the goal of enforcing appli-
cation runtime protection [16,20,26,30,31], virtualizing
trusted computing hardware [10], and devising remote
attestation solutions based on both software [18,48] and
hardware [13, 21, 42–44, 49]. Other work, focusing on
distributed environments, provides integrity protection
on shared testbeds [14] or distributed mandatory access
control [29]. More recently, trusted computing primi-
tives have been adapted to mobile scenarios to provide
increased assurances about the authenticity of data gen-
erated by sensor-equipped smartphones [27]. Our work
concentrates on the speciﬁc challenges of cloud comput-
ing environments, which fall outside the scope of these
prior efforts.
Excalibur shares some ideas with property-based at-
testation [42], whose goal is to make hash-based soft-
ware ﬁngerprints more meaningful to humans. Like Ex-
calibur, property-based attestation maps low-level ﬁn-
gerprints to high level attributes (properties) and relies
on a monitor (controller) to perform this mapping. How-
ever, this prior work offers an abstract model without
an associated system. Moreover, Excalibur extends this
work by proposing new trusted computing primitives.
Nexus [50], a new operation system for trustworthy
computing, introduces active attestation, which allows
attesting a program’s application-speciﬁc runtime prop-
erties and supports access control policies per applica-
tion. Both Nexus policies and policy-sealed data can
bind data based on attributes. However, the two systems
target complementary problems: Nexus policies focus
on nodes running Nexus and restrict the applications that
can access the data; Excalibur policies focus on multi-
node settings and restrict the cloud nodes that can access
the data, supporting multiple software platforms. Thus,
Nexus would be a good candidate to use as an attribute
in an Excalibur policy.
The work by Schiffman et al. [47] aims to improve
the transparency of IaaS cloud services by providing
customers with integrity proofs of their VMs and un-
derlying VMMs. Like Excalibur, a central compo-
nent, called cloud veriﬁer (CV), mediates attestations of
nodes and uses high-level properties (attributes) for rea-
soning about node conﬁgurations. However, the scope
of this work is narrower than ours: while the CV pro-
vides only integrity proofs, Excalibur builds on these
proofs to enforce policy-sealed data, which is a general,
data-centric abstraction for protecting customer data in
the cloud. In addition, the CV administrator is assumed
to be trustworthy, representing a weaker threat model;
in our view, this assumption does not address an im-
portant class of problems that occur in cloud services
today. Finally, their system does not address the short-
comings of sealed storage TPM primitives, which could
raise concerns of data management inﬂexibility and iso-
lation crippling if these primitives need to be used by
cloud services to secure persistent data.
Multiple software systems have been proposed to in-
crease the security of sensitive data. At the OS layer,
hypervisors and OSes can protect the conﬁdentiality and
integrity of data using isolation [24, 30, 39, 53] or in-
formation ﬂow control [52] techniques. At the middle-
ware layer, frameworks that build Web services to of-
fer their users strict control over their data hosted at the
provider site [22] enable controlled sharing of sensitive
data using differential privacy [41] or provide general-
purpose encapsulation mechanisms for data [28]. These
proposals are complementary to our work: despite their
potential to increase security and control over data in
the cloud, these proposals lack a scalable mechanism
for bootstrapping trust in the multi-node cloud environ-
ment. By combining these platforms with Excalibur,
cloud providers could build new trusted cloud services.
10 Conclusion
This paper presented Excalibur, a system that imple-
ments policy-sealed data. This new abstraction ad-
dresses the limitations of trusted computing when used
in the cloud and enables the design of trusted cloud ser-
vices. Excalibur leverages TPMs, a novel architecture
with a set of associated protocols, and CPABE to offer
developers two new primitives, seal and unseal, for con-
structing cloud services with stronger protection over
how data is managed. We demonstrated the simplicity
and ﬂexibility of policy-sealed data by using Excalibur
to build an elastic VM cloud computing service based
on Xen and Eucalyptus, which accesses customer’s data
only on customer-approved platform conﬁgurations.
Acknowledgements: We would like to thank Peter
Drushel, Pedro Fonseca, Aniket Kate, Jay Lorch, Massi-
miliano Marcon, Bryan Parno, Himanshu Raj, and Alec
Wolman for their valuable comments and conversations
that improved our work. We are also grateful to the
anonymous reviewers and Mihai Christodorescu, our
shepherd, for their feedback.
References
[1] Blippy Users Credit Card Numbers Exposed in Google
Search Results. http://mashable.com/2010/04/23/
blippy-credit-card-numbers.
[2] Cloudcamp: Five key concerns raised about cloud comput-
http://www.itnews.com.au/News/223980,
ing.
cloudcamp-five-key-concerns-raised-about-
cloud-computing.aspx.
[3] Federal Government’s Cloud Plans: A $20 Billion Shift.
http://www.cio.com/article/671013/Federal_
Government_s_Cloud_Plans_A_20_Billion_
Shift.
[4] T-mobile:
All your
sidekick data has been lost
for-
http://mashable.com/2009/10/10/
ever.
t-mobile-sidekick-data.
[5] Trusted GRUB.
http://trousers.sourceforge.
net/grub.html.
13
[6] Verizon to Put Medical Records in the Cloud.
http://
In ACSAC, 2006.
www.networkcomputing.com/cloud-computing/
229501444.
[7] Insecurity of Privileged Users: Global Survey of IT Practition-
ers. Technical report, Ponem Institute and HP, 2011. http:
//h30507.www3.hp.com/hpblogs/attachments/
hpblogs/666/62/1/HP%20Privileged%20User%
20Study%20FINAL%20December%202011.pdf.
[8] Advanced Crypto Software Collection. http://acsc.cs.
utexas.edu.
[9] P. Barham, B. Dragovic, K. Fraser, S. Hand, T. Harris, A. Ho,
R. Neugebauer, I. Pratt, and A. Warﬁeld. Xen and the art of
virtualization. In SOSP, 2003.
[10] S. Berger, R. C´aceres, K. A. Goldman, R. Perez, R. Sailer, and
L. van Doorn. vTPM: virtualizing the trusted platform module.
In USENIX Security Symposium, 2006.
[11] J. Bethencourt, A. Sahai, and B. Waters. Ciphertext-policy
attribute-based encryption. In Symposium on Security and Pri-
vacy, 2007.
[12] B. Blanchet. An Efﬁcient Cryptographic Protocol Veriﬁer Based
on Prolog Rules. In CSFW, 2001.
[13] E. Brickell, J. Camenisch, and L. Chen. Direct Anonymous At-
testation. In CCS, 2004.
[14] C. Cutler, M. Hibler, E. Eide, and R. Ricci. Trusted disk loading
in the Emulab network testbed. In WCSET, 2010.
[15] ENISA.
Cloud Computing
- SME Survey,
2009.
http://www.enisa.europa.eu/act/rm/files/
deliverables/cloud-computing-sme-survey/.
[16] T. Garﬁnkel, B. Pfaff, J. Chow, M. Rosenblum, and D. Boneh.
Terra: A Virtual Machine-Based Platform for Trusted Comput-
ing. In SOSP, 2003.
[17] T. C. Group. TPM Main Speciﬁcation Level 2 Version 1.2, Re-
vision 130, 2006.
[18] V. Haldar, D. Chandra, and M. Franz. Semantic Remote Attesta-
tion - A Virtual Machine directed approach to Trusted Comput-
ing. In VM, 2004.
[19] J. Hamilton. An Architecture for Modular Data Centers.
In
CIDR, 2007.
[20] H. H¨artig, M. Hohmuth, N. Feske, C. Helmuth, A. Lackorzynski,
F. Mehnert, and M. Peter. The Nizza secure-system architecture.
CollaborateCom, 2005.
[21] T. Jaeger, R. Sailer, and U. Shankar. PRIMA: policy-reduced
integrity measurement architecture. In SACMAT, 2006.
[30] J. M. McCune, Y. Li, N. Qu, Z. Zhou, A. Datta, V. D. Gligor, and
A. Perrig. TrustVisor: Efﬁcient TCB Reduction and Attestation.
In IEEE Symposium on Security and Privacy, 2010.
[31] J. M. McCune, B. Parno, A. Perrig, M. K. Reiter, and H. Isozaki.
Flicker: An Execution Infrastructure for TCB Minimization. In
EuroSys, 2008.
[32] Microsoft.
BitLocker Drive Encryption.
http:
//www.microsoft.com/whdc/system/platform/
hwsecurity/default.mspx.
[33] A. G. Miklas, S. Saroiu, A. Wolman, and A. D. Brown. Bunker:
a privacy-oriented platform for network tracing. In NSDI, 2009.
[34] D. G. Murray, G. Milos, and S. Hand. Improving Xen security
through disaggregation. In VEE, 2008.
for
[35] N. Santos.
cols, 2011.
excalibur/xcproverif.zip.
ProVerif
the Excalibur proto-
http://www.mpi-sws.org/˜nsantos/
scripts
[36] D. Nurmi, R. Wolski, C. Grzegorczyk, G. Obertelli, S. Soman,
L. Youseff, and D. Zagorodnov. Eucalyptus: A Technical Re-
port on an Elastic Utility Computing Architecture Linking Your
Programs to Useful Systems. Technical Report 2008-10, UCSB.
[37] OpenSSL. http://www.openssl.org.
[38] B. Parno, J. M. McCune, and A. Perrig. Bootstrapping trust
in commodity computers. In IEEE Symposium on Security and
Privacy, 2010.
[39] H. Raj, D. Robinson, T. B. Tariq, P. England, S. Saroiu, and
A. Wolman. Credo: Trusted Computing for Guest VMs with a
Commodity Hypervisor. Technical Report MSR-TR-2011-130,
Microsoft Research, 2011.
[40] T. Ristenpart, E. Tromer, H. Shacham, and S. Savage. Hey, You,
Get Off of My Cloud! Exploring Information Leakage in Third-
Party Compute Clouds. In CCS, 2009.
[41] I. Roy, S. T. Setty, A. Kilzer, V. Shmatikov, and E. Witchel. Aira-
vat: Security and privacy for mapreduce. In NSDI, 2010.
[42] A.-R. Sadeghi and C. St¨uble. Property-based attestation for com-
puting platforms: caring about properties, not mechanisms. In
NSPW, 2004.
[43] R. Sailer, T. Jaeger, X. Zhang, and L. van Doorn. Attestation-
based policy enforcement for remote access. In CCS, 2004.
[44] R. Sailer, X. Zhang, T. Jaeger, and L. van Doorn. Design and im-
plementation of a tcg-based integrity measurement architecture.
In USENIX Security Symposium, 2004.
[45] N. Santos, K. P. Gummadi, and R. Rodrigues. Towards trusted
[22] J. Kannan, P. Maniatis, and B.-G. Chun. Secure data preservers
cloud computing. In HotCloud, 2009.
for web services. In WebApps, 2011.
[23] M. Keeney. Insider Threat Study: Computer System Sabotage
in Critical Infrastructure Sectors. Technical report, U.S. Secret
Service and CMU, 2005. http://www.secretservice.
gov/ntac/its_report_050516.pdf.
[24] G. Klein, K. Elphinstone, G. Heiser, J. Andronick, D. Cock,
P. Derrin, D. Elkaduwe, K. Engelhardt, R. Kolanski, M. Norrish,
T. Sewell, H. Tuch, and S. Winwood. seL4: Formal veriﬁcation
of an OS kernel. In SOSP, 2009.
[25] E. Kowalski.
Insider Threat Study:
Illicit Cyber Ac-
tivity in the Information Technology and Telecommuni-
cations Sector.
report, U.S. Secret Service
and CMU, 2008. http://www.secretservice.gov/
ntac/final_it_sector_2008_0109.pdf.
Technical
[26] D. Lie, C. A. Thekkath, M. Mitchell, P. Lincoln, D. Boneh, J. C.
Mitchell, and M. Horowitz. Architectural support for copy and
tamper resistant software. In ASPLOS, 2000.
[27] H. Liu, S. Saroiu, A. Wolman, and H. Raj. Software abstractions
for trusted sensors. In MobiSys, 2012.
[28] P. Maniatis, D. Akhawe, K. Fall, E. Shi, S. McCamant, and
D. Song. Do You Know Where Your Data Are? Secure Data
Capsules for Deployable Data Protection. In HotOS, 2011.
[29] J. M. McCune, T. Jaeger, S. Berger, R. Caceres, and R. Sailer.
Shamon: A System for Distributed Mandatory Access Control.
14
[46] N. Santos, R. Rodrigues, K. Gummadi, and S. Saroiu. Excalibur:
Building Trustworthy Cloud Services. Technical Report MPI-
SWS-2011-004, MPI-SWS, 2011.
[47] J. Schiffman, T. Moyer, H. Vijayakumar, T. Jaeger, and P. Mc-
Daniel. Seeding clouds with trust anchors. In WCCS, 2010.
[48] A. Seshadri, A. Perrig, L. van Doorn, and P. Khosla. Swatt:
Software-based attestation for embedded devices. IEEE Sympo-
sium on Security and Privacy, 2004.
[49] E. Shi, A. Perrig, and L. V. Doorn. Bind: A ﬁne-grained attesta-
tion service for secure distributed systems. In IEEE Symposium
on Security and Privacy, 2005.
[50] E. G. Sirer, W. de Bruijn, P. Reynolds, A. Shieh, K. Walsh,
D. Williams, and F. B. Schneider. Logical Attestation: An Au-
thorization Architecture for Trustworthy Computing. In SOSP,
2011.
[51] TrouSerS. http://trousers.sourceforge.net.
[52] S. Vandebogart, P. Efstathopoulos, E. Kohler, M. Krohn, C. Frey,
D. Ziegler, F. Kaashoek, R. Morris, and D. Mazi`eres. Labels and
event processes in the asbestos operating system. ACM Trans.
Comput. Syst., 2007.
[53] F. Zhang, J. Chen, H. Chen, and B. Zang.
Cloudvisor:
Retroﬁtting protection of virtual machines in multi-tenant cloud
with nested virtualization. In SOSP, 2011.