F. Li et al.
5.3 Round-Trip Time
Two methods to measure the round-trip time between the smart phone and our
servers are used: (i) the average of 3 ICMP pings before each trial, and (ii) the
TCP connection setup time measured through the three-way handshake.
Figure 7 compares the cumulative distributions of RTTs measured by ICMP
pings to RTTs measured by TCP three-way handshakes for all trials. As Fig. 7
shows, the TCP handshake RTTs and the ping RTTs are generally in the same
range, with the bulk of both distribution between 40 to 80 ms. This suggests that
the TCP three-way handshake can be used to eﬀectively estimate window sizes
for congestion control [13]. The ping RTTs have a more ﬁne-grained variation in
time, possibly due to timers on the end systems. Some high RTTs over 100 ms in
the tail of the distributions can cause CCA timeouts and also make RTT-based
bandwidth estimation more diﬃcult [4]. For comparison, our results conﬁrm
metropolitan LTE measurements by Huang et al. [5] that observe median RTTs
of 70 ms, but also see RTTs over 400 ms.
1
0.75
0.5
0.25
0
0
20
40
60
RTT (ms)
80
TCP
Ping
100
120
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
50
40
30
20
10
0
BBR
CUBIC(k3.19)
CUBIC(k4.8)
[-5,0)
[0,5)
[5,10)
[10,15)
[15,20)
[20,25)
[25,30)
SINR (dB)
n
o
i
t
i
u
b
i
r
t
s
D
e
v
i
t
l
a
u
m
u
C
Fig. 7. TCP/Ping RTT distribution
Fig. 8. TCP Throughput vs. SINR
5.4 Throughput and SINR
SINR is the key performance metric for cellular networks [7], signiﬁcantly aﬀect-
ing modulation selection (see Sect. 4) and, potentially, TCP throughput.
Figure 8 compares the TCP throughputs (the y-axis) for diﬀerent SINRs
(the x-axis), clustered into 5 dB bins. The measured throughputs for each CCA
across all trials are shown with boxplots. From the ﬁgure, throughput correlates
strongly with SINR. BBR achieves slightly higher throughput than either CUBIC
CCA only at SINRs between 20–25 dB. For all other SINRs, the throughputs of
the three CCAs are comparable.
5.5 Throughput and Handovers
When transferring data during mobility, a UE may be handed over from one
LTE tower to another for two reasons: (i) the current serving eNodeB assumes
the UE is leaving its serving zone, or (ii) the UE discovers another eNodeB with
better radio conditions (i.e., stronger SINR).
TCP CUBIC versus BBR on the Highway
277
While 3GPP standards [1] state packets can be forwarded to the next serving
eNodeB during tower handover to avoid possible service interruptions, packets
may still be lost, especially important during rapid movement (e.g., highway
driving), and confusing bottleneck link capacity estimation algorithms (e.g., used
in BBR [4]).
Figure 9 shows distributions of the number of serving and detected cell towers
for all TCP downloads. Despite mobility at driving speeds, only 35% of the
TCP downloads have 1+ handovers, and less than 4% of the downloads have
2+ handovers. Although handovers can aﬀect TCP performance, the impact on
Web traﬃc (usually < 1 MB) or even streaming traﬃc (segment size ∼ 4 MB)
is likely insigniﬁcant due to the low probability of handovers during short ﬂows.
For comparison, our handover numbers are consistent with Xiao et al’s. [12]
report of average handovers every 25 s at top speeds (300 kph), and every 250 s
at our driving speeds (100 kph). We leave more detailed analysis of the impact
of handovers on TCP performance as future work.
i
n
o
i
t
u
b
i
r
t
s
D
e
v
i
t
a
u
m
u
C
l
1
0.75
0.5
0.25
0
0
2
4
6
8
10
12
14
16
Number of Cells
Detected
Serving
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
50
40
30
20
10
0
BBR
CUBIC(k3.19)
CUBIC(k4.8)
0
1
2+
Number of Handovers
Fig. 9. Cell sector distributions
Fig. 10. TCP Tput. with handovers
Figure 10 shows distributions of throughputs (y-axis) versus number of han-
dovers (x-axis), with each CCA distribution shown with a boxplot. From the
ﬁgure, when there is a handover, all three TCP CCAs have lower throughput
than with no handovers, and perform comparably with each other.
5.6 Self-Inﬂicted Delay
Traditionally, TCP increases data rates until it saturates the bottleneck queue.
While potentially maximizing throughput, this enqueued data increases the min-
imum RTT (see Fig. 7) – i.e., it is a “self-inﬂicted” delay. We calculate self-
inﬂicted delays as the average time between sending a data packet and receiving
the response ACK (excluding duplicate ACKs) minus the initial TCP handshake.
Figures 11(a) and (b) depict CDFs of the self-inﬂicted delays. For the full
20 MB download, the minimum self inﬂicted delays are similar for all distribu-
tions, but the bulk of the BBR distribution is much lower than either CUBIC.
For the 1 MB download, BBR has a slightly higher median delay (50 ms versus
25 ms), but CUBIC has a heavier tail (e.g., a much higher maximum), particu-
larly for k3.19.
278
F. Li et al.
(a)
(b)
Fig. 11. Self-inﬂicted delay distribution
5.7 Retransmission
Duplicate ACKs impact RTT measurements (which are not updated for dupli-
cate ACKs [9]) and retransmissions (which occur with 3 duplicate ACKs).
Figure 12 shows the distribution of duplicate ACKs (x-axis), calculated as the
number of duplicate ACKs over total ACKs, and Fig. 13 shows the distribution
of retransmission percentages (x-axis). BBR has signiﬁcantly fewer duplicate
ACKs than either version of CUBIC, which should further aid BBR’s RTT mea-
surements, and BBR has signiﬁcantly fewer retransmissions which should yield
improved radio eﬃciency.
i
n
o
i
t
u
b
i
r
t
s
D
e
v
i
t
a
u
m
u
C
l
1
0.75
0.5
0.25
0
0
BBR
CUBIC(k3.19)
CUBIC(k4.8)
5
10
15
20
25
30
Duplicate ACK (%)
i
n
o
i
t
u
b
i
r
t
s
D
e
v
i
t
a
u
m
u
C
l
1
0.75
0.5
0.25
0
0
BBR
CUBIC(k3.19)
CUBIC(k4.8)
1
2
3
4
5
TCP Retransmission (%)
Fig. 12. Duplicate ACK dist.
Fig. 13. TCP retransmission dist.
5.8 Summary
Figures 14(a) and (b) summarize the results of three CCAs under highway driv-
ing conditions. For both Figures, there is one point for each CCA, corresponding
to throughput (y-axis) and RTT (x-axis) averaged across all trials, with error
bars (vertical and horizontal) showing 95% conﬁdence intervals on the means.
For the full downloads, Fig. 14(a), BBR has higher average throughput than
either version of CUBIC, but the overlapping conﬁdence intervals mean the
measured diﬀerence is not statistically signiﬁcant. On the other hand, the lower
self-inﬂicted delay for BBR is about one-third that of CUBIC and is statistically
signiﬁcant. For the ﬁrst MB, Fig. 14(b), the story is reversed, with BBR having
higher throughputs than CUBIC, but also higher self-inﬂicted delays (about 50%
higher in both cases).
TCP CUBIC versus BBR on the Highway
279
(a)
(b)
Fig. 14. Throughput vs. self-inﬂicted delay
6 Conclusions
This paper presents the ﬁrst of its kind measurement study comparing TCP
CUBIC (x2) and BBR under highway driving condition over LTE. While driving
800 miles (1350 km), a mobile phone downloaded 700 + 20 MB ﬁles on a tier-1
U.S. wireless carrier’s network, recording physical, IP and transport layer data.
Performance metrics include throughput, round-trip time, and retransmissions,
correlated with LTE SINR and modulation. To the best of our knowledge, not
only is this the ﬁrst study analyzing BBR “in the wild”, but is also the ﬁrst
published analysis of LTE characteristics while driving using a U.S. wireless
network.
Analysis shows the driving conditions cover a range of Signal to Interference-
plus-Noise Ratios (SINRs), some of which yield throughputs near 40 Mbps, but
with relatively few tower handoﬀs despite the speeds. For 20 MB downloads,
CUBIC and BBR perform comparably for throughputs but BBR has signiﬁcantly
lower average self-inﬂicted delays and experiences signiﬁcantly fewer duplicate
ACKs. For 1 MB downloads, BBR has higher throughput but also higher self-
inﬂicted delays.
Since large buﬀers can lead to “buﬀerbloat” and degrade TCP performance,
algorithms that limit queue occupancy (measured by self-inﬂicted delays) can
be eﬀective for LTE networks. However, buﬀering allows ﬂows to take advantage
of small-scale variation in LTE capacity, suggesting tuning congestion control
algorithms to keep buﬀers appropriately ﬁlled. The data from this study should
be helpful for future models and simulations of LTE networks that further
develop protocols, particularly for mobile environments.
Acknowledgments. We would like thank our shepherd, Moritz Steiner, and the
anonymous PAM reviewers for their valuable feedback. We also thank our colleagues
Eduard Rubinstein, Vijay Nanjundan, James Flynn, and Atreya Praveen for their help-
ful discussions and assistance.
280
F. Li et al.
References
1. 3GPP TS 36.423 Evolved Universal Terrestrial Radio Access Network (E-UTRAN);
X2 Application Protocol (X2AP) (Release 12), September 2014
2. Atxutegi, E., Liberal, F., Grinnemo, K.J., Brunstrom, A., Arvidsson, A., Robert,
R.: TCP behaviour in LTE: impact of ﬂow start-up and mobility. In: Proceedings
of WMNC, July 2016
3. Cardwell, N., Cheng, Y., Gunn, C., Yeganeh, S., Jacobson, V.: BBR: congestion-
based congestion control. Commun. ACM 60(2), 58–66 (2017)
4. Cardwell, N., Cheng, Y., Gunn, C.S., Yeganeh, S.H., Jacobson, V.: BBR:
congestion-based congestion control. ACM Queue 14 (2016)
5. Huang, J., Qian, F., Guo, Y., Zhou, Y., Xu, Q., Mao, Z.M., Sen, S., Spatscheck,
O.: An in-depth study of LTE: eﬀect of network protocol and application behavior
on performance. ACM SIGCOMM Comput. Commun. Rev. 43(4), 363–374 (2013)
6. Johnson, C.: Long Term Evolution in Bullets, 2nd edn. CreateSpace Independent
Publishing Platform, Northampton (2010)
7. Merz, R., Wenger, D., Scanferla, D., Mauron, S.: Performance of LTE in a high-
velocity environment: a measurement study. In: Proceedings of the Workshop on
All Things Cellular, Chicago, IL, August 2014
8. Nguyen, B., Banerjee, A., Gopalakrishnan, V., Kasera, S., Lee, S., Shaikh, A., Van
der Merwe, J.: Towards understanding TCP performance on LTE/EPC mobile
networks. In: Proceedings of the 4th Workshop on All Things Cellular: Operations,
Applications, & Challenges, pp. 41–46, August 2014
9. Paxson, V., Allman, M., Chu, J., Sargent, M.: Computing TCP’s Retransmission
Timer. IETF Request for Comments (RFC) 6298 (2011)
10. Robert, R., Atxutegi, E., Arvidsson, A., Liberal, F., Brunstrom, A., Grinnemo,
K.J.: Behaviour of common TCP variants over LTE. In: Proceedings of IEEE
GLOBECOM, December 2016
11. Tazaki, H., Uarbani, F., Mancini, E., Lacage, M., Camara, D., Turletti, T.,
Dabbous, W.: Direct code execution: revisiting library OS architecture for repro-
ducible network experiments. In: Proceedings of ACM CoNext, Santa Barbara,
CA, December 2013
12. Xiao, Q., Xu, K., Wang, D., Li, L., Zhong, Y.: TCP performance over mobile net-
works in high-speed mobility scenarios. In: Proceedings of ICNP, Research Triangle
Park, NC, October 2014
13. Zaki, Y., P¨otsch, T., Chen, J., Subramanian, L., G¨org, C.: Adaptive congestion con-
trol for unpredictable cellular networks. In: Proceedings of the ACM SIGCOMM,
London, UK (2015)