158
K. Levanti, S. Lee, and H.S. Kim
5.1 Route Boosting Algorithm
We perform route boosting for the preﬁxes that have recently exhibited route
instability, i.e. have experienced an egress point change in the past two routing
table snapshots. For each of these preﬁxes, we perform the following steps.
Step 1 : We choose the most stable route among the routes that have been
chosen as best in the routing table history. The routing table history consists of
the past n snapshots of the network’s routing tables. The sampling frequency
of the routing state poses a trade-oﬀ between accurate stability estimates and
the overhead of monitoring the routing state. We refer to the most stable and
previously selected route as dominant route D. To measure the stability of a
route, we use the product of the route’s persistence and prevalence [20]. Persis-
tence represents the interval during which the route has been available before it
is withdrawn or before its AS-path length changes. Both route withdrawal and
AS-path length change can cause a best route change. Persistence is computed
as the average of the intervals. Prevalence represents the probability of observ-
ing the route. It is computed as k/n where k represents the total number of
snapshots that the route is present in the history.
Step 2 : We examine whether the dominant route D is chosen as best in the
most recent snapshot. If this is the case, the preﬁx has experienced a route change
to D and we proceed to the next step which boosts D. If D is not currently the
best route, we do not boost D and move on to process the next preﬁx. In this
way, we let the current best route become dominant since the route history does
not show a recurrent traﬃc shift and the route change could be a permanent
beneﬁcial route change.
Step 3 : We identify the most preferred route over the routes that have been
selected as best in the routing table history. We refer to this route as best
competitor C. If C diﬀers from D, we boost D such that D is preferred over C
(i.e., D > C ) by modifying the route attributes of D for the analyzed preﬁx.
This can be implemented at the inbound route ﬁlter applied to the eBGP session
where D is advertised. If C does not diﬀer from D, boosting is not necessary
because D is both the most stable and most preferred route among the recently
selected routes. The routing policy reconﬁguration follows the rules below:
D.LP
 C.ASP-length,
D.LP = C.LP and D.ASP-length = C.ASP-length,
if
else if
D.LP  S > C ). This boosting follows the STE
On Reducing the Impact of Interdomain Route Changes
159
approach but only for routes that have been stable and selected in the recent
history. The fail-over to S does not happen often or for long time periods because
D is the most stable previously selected route in the recent route history.
We re-evaluate the installed route boosters on a regular basis because the sta-
bility of routes can change. If the boosted route is withdrawn or another route
becomes more stable, we update the boosting. The re-evaluation process is per-
formed for each preﬁx by estimating D and C given the most recent unboosted
route history and by comparing them with the already installed boosters. The
frequency of the re-evaluation process poses a trade-oﬀ between up-to-date route
boosting and processing overhead. A short re-evaluation period imposes more
processing load as required for examining all previously installed boosters. But
it quickly adapts to changes in route stability. Since the stability of most routes
does not change as often as a week [16], a period of a few days is a good choice.
Another issue when running the route boosting for long periods is the ever
increasing number of boosted routes and policy reconﬁgurations. This number
would stabilize if there was a comparatively constant set of unstable preﬁxes.
However, this is the case for short-term stability [16]. For long-term stability,
there are legitimate reasons for any preﬁx to experience instability. We maintain
a maximum number of boosted routes by periodically removing boosters. We call
this the cleanup process. The cleanup policy maintaining boosters to important
and/or popular preﬁxes has the highest impact on the network’s operation.
Finally, it is worth considering possible risks and limitations of route boosting.
Firstly, boosting can cause additional traﬃc shifts in the rare case where both
the boosted dominant D and the boosted secondary S are withdrawn. Secondly,
boosting suggests conﬁguration changes in interdomain routing policies. To avoid
intradomain routing instability, we assume that the BGP-session topology and
the intradomain routing metrics of the network are chosen according to the suf-
ﬁcient iBGP correctness conditions shown in [21]. If the iBGP conﬁguration is
correct, the route boosting can safely introduce LP and MED changes. Then,
interdomain routing policy changes can interfere with routing policies in neigh-
boring networks, leading to route oscillations and forwarding loops [22][23]. We
avoid causing such routing instabilities by respecting the interdomain business
relationships, as discussed earlier.
5.2 Route Boosting Emulation
We evaluate the route boosting system by emulating its operation over the
longest consecutive period of our dataset (90 days). The emulator keeps track
of the number of traﬃc shifts caused by interdomain route changes in the case
where route boosting is used and in the case where it is not used. For the boosted
case, we compute best routes by modifying the route attributes that the route
boosting suggests and then by executing the BGP decision process with the mod-
iﬁed routes [24]. For the original case, we extract the best routes from the routing
tables. This process is repeated for each snapshot as the emulator sequentially
takes the snapshots as input. The route boosting implementation includes 4000
lines of Java code and ran on a machine with a 3.8 GHz CPU and 6GB memory.
160
K. Levanti, S. Lee, and H.S. Kim
In order to deal with the limited granularity of route changes that the daily
sampling of routing tables gives us, we only boost the dominant route when
its stability score is much higher that its competitor’s. In this way, we avoid
boosting routes which are inaccurately estimated as stable. We use a routing
history length of 10 days, a cleanup and re-evaluation period of 5 days, and a
maximum of 2000 boosted preﬁxes. We omit the parameter sensitivity analysis
due to space limitations. The running times of the boosting, cleanup, and re-
evaluation average at 8, 1 and 13 minutes, respectively. The code can be further
optimized for faster runtime if required. However, these runtimes are acceptable
because the system does not need to run online since the stability of routes does
not change as often [16].
In our dataset, we ﬁnd that 52% of the high-impact interdomain route changes
are recurring (i.e., the best route changes from route A to route B and back to
route A at least once in the routing table history). In Fig. 2(a), we show the
number of traﬃc shifts which are experienced by the network, avoided, and caused
by route boosting for each snapshot. We count one traﬃc shift per each preﬁx
whose egress point changes. The percentage of avoided traﬃc shifts over the total
number of traﬃc shifts averages at 21% and goes up to 50%. This percentage is
particularly low (i) after the days we miss routing table snapshots (e.g., 64th day)
and (ii) after we perform booster cleanup (e.g., 31st day). This highlights the
importance of the information given by the most recent snapshots in predicting
the recurrence of route changes and the eﬀectiveness of the installed boosters in
avoiding high-impact route changes. When we exclude the days immediately after
missing routing snapshots and after performing cleanup, the average percentage
of avoided traﬃc shifts goes up to 25%. Also, we observe that the additional
traﬃc shifts caused by the route boosting system are almost zero for most of the
days. This is expected as the withdrawal of both the dominant and the secondary
route is unlikely.
We measure the impact of route boosting by analyzing the popularity of
the boosted preﬁxes for this network. Since our dataset does not include traﬃc
volumes per preﬁx for the analyzed period, we cannot estimate the volumes of
traﬃc not shifted because of route boosting. However, our dataset includes a
summary report with the average volumes of outgoing traﬃc per destination
AS for this network. We map each preﬁx whose traﬃc is not shifted because
of route boosting to its origin AS through its AS-path. Fig. 2(b) illustrates the
signiﬁcance of the 1434 unique ASes originating the boosted preﬁxes. We observe
that some of these destination ASes are very popular: 30 ASes belong to the top
250 destination ASes for this network and more than 100GB of traﬃc is destined
to each one of these ASes per day. Thus, reducing the impact of route changes
towards these ASes has signiﬁcant impact on this network’s outgoing traﬃc.
Finally, we look into the diﬀerences in route attributes between the stable
routes and the more preferred competitor routes. For each avoided traﬃc shift,
we compare the route selected when using route boosting with the route selected
in the original case. Almost half of the routes chosen with route boosting are
on average 1.41 hops longer than the ones chosen in the original case. When
On Reducing the Impact of Interdomain Route Changes
161
Fig. 2. (a) Number of intradomain traﬃc shifts per preﬁx experienced by the network,
avoided and caused by route boosting. (b) Popularity of the destination ASes whose
traﬃc is prevented from shifting because of route boosting.
ignoring AS-path prepending, the boosted routes are 0.82 hops longer than the
unboosted routes. The diﬀerence in AS hops implies a diﬀerence in route latency
but AS-path length is not a reliable indicator of route latency [3]. In almost all
other cases, the boosted routes diﬀer in assigned MED value from the unboosted
routes. We note that although each network assigns MED values using diﬀerent
criteria, MED values are mostly used as tuning knobs for routes that are more
or less equally preferred since they have the same local-preference and AS-path
length [18]. To summarize, the boosted routes do not deviate signiﬁcantly from
the routes that would have been selected by the standard BGP decision process.
6 Conclusions
Networks experience a signiﬁcant number of interdomain route changes which
impact their data plane performance and disturb their traﬃc pattern stability. In
this paper, we investigate ways of reducing the impact of these changes on net-
works with suﬃcient path diversity. We look into STE, a modiﬁed BGP decision
process where routes that stick to the same egress point with the previously se-
lected route are preferred. Then, we investigate a system which suggests routing
policy reconﬁgurations that selectively tune the BGP decision process for un-
stable preﬁxes. The route boosting system exploits the knowledge gained from
the history of route changes in order to predict recurring traﬃc shifts. We ﬁnd
that for the analyzed network recurring traﬃc shifts account for approximately
half of the observed traﬃc shifts and route boosting reduces the impact of route
changes on average by 25%, and up to 50%.
162
K. Levanti, S. Lee, and H.S. Kim
References
1. Agarwal, S., Chuah, C., Bhattacharyya, S., Diot, C.: ”The impact of BGP dynamics
on intra-domain traﬃc. In: Proc. ACM SIGMETRICS (June 2004)
2. Cowie, J.: Practical Instability Scoring. NANOG 45 (January 2009)
3. Wang, F., Mao, Z.M., Wang, J., Gao, L., Bush, R.: A measurement study on the
impact of routing events on end-to-end Internet path performance. In: Proc. ACM
SIGCOMM (2006)
4. Pucha, H., Zhang, Y., Mao, Z.M., Hu, Y.C.: Understanding Network Delay Changes
Caused by Routing Events. In: Proc. ACM SIGMETRICS (June 2007)
5. Li, J., Guidero, M., Wu, Z., Purpus, E., Ehrenkranz, T.: BGP routing dynamics
revisited. SIGCOMM Comput. Commun. Rev. 37(2), 5–16 (2007)
6. Teixeira, R., Marzullo, K., Savage, S., Voelker, G.: In search of path diversity in
ISP networks. In: Proc. ACM IMC (October 2003)
7. Lee, S., Levanti, K., Kim, H.S.: Impact Analysis of BGP Sessions for Prioritization
of Maintenance Operations, CMU-Cylab-10-018 Technical Report
8. Feldmann, A., Maennel, O., Mao, Z.M., Berger, A., Maggs, B.: ”Locating Internet
routing instabilities. In: Proc. ACM SIGCOMM (2004)
9. Labovitz, C., Ahuja, A., Bose, A., Jahanian, F.: Delayed Internet routing conver-
gence. In: Proc. ACM SIGCOMM (2000)
10. Bremler-Barr, A., Afek, Y., Schwarz, S.: Improved BGP convergence via ghost
ﬂushing. In: Proc. IEEE INFOCOM (April 2003)
11. Sun, W., Mao, Z.M., Shin, K.G.: Diﬀerentiated BGP update processing for improved
routing convergence. In: Proc. IEEE ICNP, Santa Babara, CA (November 2006)
12. Bonaventure, O., Filsﬁls, C., Francois, P.: Achieving sub-50 milliseconds recovery
upon BGP peering link failures. IEEE/ACM ToN 15(5), 1123–1135 (2007)
13. Kushman, N., Kandula, S., Katabi, D., Maggs, B.M.: R-BGP: staying connected
in a connected world. In: Proc. USENIX NSDI, Cambridge, MA (2007)
14. Villamizar, C., Chandra, R., Govindan, R.: BGP Route Flap Damping, RFC-2439
(November 1998)
15. Mao, Z.M., Govindan, R., Varghese, G., Katz, R.: Route Flap Damping Exacer-
bates Internet Routing Convergence. In: Proc. ACM SIGCOMM (2002)
16. Rexford, J., Wang, J., Xiao, Z., Zhang, Y.: BGP routing stability of popular des-
tinations. In: Proc. ACM IMC (November 2002)
17. Godfrey, B., Caesar, M., Haken, I., Shenker, S., Stoica, I.: Stable Internet Route
Selection. NANOG 40 (June 2007)
18. Roisman, D.: Eﬀective BGP Load Balancing Using The Metric System. NANOG47
(October 2009)
19. Caesar, M., Rexford, J.: BGP routing policies in ISP networks. IEEE Net-
work 19(6), 5–11 (2005)
20. Paxson, V.: End-to-end routing behavior in the Internet. IEEE/ACM ToN 5(5),
601–615 (1997)
21. Griﬃn, T.G., Wilfong, G.: On the correctness of IBGP conﬁguration. In: Proc.
ACM SIGCOMM (August 2002)
22. Griﬃn, T.G., Shepherd, F.B., Wilfong, G.: Policy disputes in path-vector protocols.
In: Proc. IEEE ICNP, Toronto, Canada (October 1999)
23. Gao, L., Rexford, J.: Stable Internet routing without global coordination.
IEEE/ACM Transactions on Networking, 681–692 (December 2001)
24. Feamster, N., Winick, J., Rexford, J.: A model of BGP routing for network engi-
neering. In: Proc. ACM SIGMETRICS (June 2004)