 substitution command/sed, substitute command/
50192241
- 97 -
用于建立一个待编辑的索引条目列表，
并且只有在那些行上才可以进行替换。
然后出现一个空格，
然后是两个反斜杠-
第
五章
然后回调被保存
基本 sed 命令 
接着是另
一输出
---
## Page 98
一章展示了删除空行的命令：
重要的是：如果某行匹配这个地址，那么就删除整个行，而不只是删除行中匹
致读取新输入行，而编辑脚本则从头开始新的一轮（这一行为和next 命令的行
前面已经展示了删除命令（d）的示例。它采用一个地址，如果行匹配这个地址
释，而是作为一个元字符解释。为了进行有效的改变需要使用几个高级的命
这个程序有个小缺点。它应该在索引中的普通文字中查找元字符，并且在正则
出中提取特殊的条目，并把它们纳入要编辑的文件中。这样可以避免费力地处
当处理有许多条目的厚书时，
当index.edit脚本在文件上运行时，创建类似下面的一个清单：
删除命令还是一个可以改变脚本中的控制流的命令。这是因为一旦执行这个命
就
删除
探
令
表达式中保护它们。
理无数的条目。
正所有文档中的索引条目。
以通过编辑替换字符串来完成修改。
这个输出可以被捕获到一个文件中。
的部分（要删除行的一部分，可以使用替换命令并指定一个空的替换）。上
删除模式空间的内容。
讨。
，指所以我们暂且将改进脚本的工作搁置，直到下一章中再继续进行相关的
/~$/d 
/~\. XX
$ index.edit ch05
/~\.
1.
女
X
X
X
X
X
/i\
更改[address]c\
插入[line-address]i\
追加[line-address]a\
p/!+\/
/~\. nf/d
/~\. bp/d
/~\. sp/d
插入和更改
UNIX文件写道：“不允许在被删除的行上进一步操作”。R.I.P.
 text
text 
 text
下面的插入命令在匹配“”行的地方插入
QQ群：
，这些命令的语法在 sed 中不常用，因为它们必须在多
50192241
99
第五章
。追加命令将文本放置
基本 sed 命令
---
## Page 100
下面来看插入命令的示例。假设我们想为一个特殊文档包含的所有文件提供一
注5：
响 sed 的内部行计数器。
所提供的文本将被输出，
间，所提供的文本仍然会正确地输出。当默认的输出受到抑制时也是这样一
插入命令和追加命令不影响模式空间的内容。提供的文本将不匹配脚本中后续
更改命令之后的其他命令没有被提供。
更改命令清除模式空间，
输出文本一次时，这个示例会输出10次，如果在这个范围内有10行的话。
将对这个范围内的每行输出“”。
有相反的功能。例如，
删除整个邮件消息头并用行“”取代它。注意，当更改
出一次。例如，
被寻址的行。换句话说，它删除这个范围中的所有行，但是提供的文本只被输
改命令可以处理一个范围内的行。在这种情况下，
追加命令和插入命令只应用于单个行地址，而不是一个范围内的行。然而，更
而且，如果文本包含一个字面的反斜杠，要再添加一个反斜杠来转义它（注
命
命
令中的任何地址，
令作为一组命令之一被封闭在大括号中并作用于一个范围内的行时，它将具
s/^From //p 
/^From /,/~$/{
/^From /, /~$/c\
French Lick, IN 
导空白。如果它们在你的系统上消失，
和/usr/ucb/sed on Solaris。System V和 GNU sed 不会删除前
在输出上都不会出现。这是旧版本中的情况，例如 Sun0S 4.1.x
最初的 UNIX文件提到，在提供的文本中的任何前导制表符或空格
（第一个制表符或空格之前）放置反斜杠。反斜杠不输出。
当下面的脚本在包含邮件消息的文件上运行时：
那些命令也不影响该文本。不管什么更改改变了模式空
QQ群：
下面的脚本：
，即使模式空间不是那样的。而且，所提供的文本不影
它在模式空间中与删除命令有同样的效果。脚本中在
50192241
-100-
它用一个文本备份取代所有
解决方法是在行的开始处
第五章
。所以，当前面的示例
基本 sed 命令
---
## Page 101
情况。请看下面系列：
看一个示例，文件包含许多的显式troff 空格请求（具有不同数量的空格）的
置所提供的文本。当想要匹配行并且整个取代它时可以使用这个命令。我们来
更改命令用所提供的文本取代模式空间的内容。实际上，
后放置一个空行，
更改命令可以用来在当前行之前放置一个空行，
后旋转一个空行，
插入命令可以用来在当前行之前放置一个空行，
插入命令在.Ls 宏之前放置两行，而追加命令在.Le 宏之后放置两行。
化列表的宏之前添加几个 troff 请求，
行并且与追加命令放在同一行。
$是行寻址符号，
下一个示例展示了在同一个脚本中使用插入命令和追加命令。
对上例进行修改可以实现在文件的结尾处添加行的追加命令：
输出。后续命令不能成功地匹配“macros”
在 sed 执行这个命令之后，
面的脚本在文件的第一行之前插入两行新行：
个局部的宏文件。另外，我们想定义一个页眉字符串来将文档标识为草稿。
它
成为输出中的最后一行。注意，即使只输出一行，提供的文本也必须自成一
/^\. Le/a\
.in 5n\
/~\. Ls/i\
End of file 
$al
%
sp 
ds (
SO
1il
3
 1.5
macros\
CH First Draft
，用于匹配文件的最后一行。提供的文本在前行之后输出，所以
方法是让命令后面的行为空。
方法是让命令后面的行为空
QQ群：
模式空间不会更改。
50192241
- 101
，而且在关闭列表的宏之后也添加几个。
”或“First Draft”
空
或者附加命令用来在当前行之
或者附加命令用来在当前行之
其中的新文本在当前行的前面
第
五章
，它删除行并且在该位
其任务是在初始
基本 sed 命令
---
## Page 102
反，在vi 中必须找到一个组合键来产生它。使用CTRL-V引用该字符。例如，
在 sed中不能用于ASCll值匹配字符（也不能匹配八进制数值）（注7）。相
注 6:
重复复制。
ASCI丨代码。其功能类似于vi中的列表命令（：I）。可以使用该命令来检测输
列表命令（1）用于显示模式空间的内容，
这个命令允许我们忽略参数并取代它们，而不管它们是什么。
可以匹配一个ESC字符（[）
入中的“不可见”字符（注6）。
列表
独的参数，并进行正确的替换可能更容易。
如果你想要将所有的参数都换成“.5”，
因
1为列表命令产生立即的输出，所以我们抑制了默认的输出，否则将得到行的
s/~ [/Escape/
#列出列并用“Escape”替代“^|”
$ gsed -n -e
$ # test with GNU sed too 
Here is a string of special characters: ^A ^B 
$ cat test/spchar
{ra 
Here is a string 
\15\07
Here is
^M~G 
. sp .5
/~\. sp/c\
sp 
%
3
.3v
1.5v
一
本书后面将看到的那样）的人来说领会这些比较容易。
GNU sed 显示某些字符，例如，
s a string of special characters: \01 \02
而不是八进制。也许，对于熟悉C语言（或者 awk,正如我们在
"|"
QQ群：
of
test/spchar
F special characters: \01 \02
50192241
。请看下面的脚本：
-102
那么使用更改命令比尝试匹配所有单
回车符，
将非打印的字符显示为两个数字的
，使用的是ANSIC转义序
第五章
基本 sed 命令
---
## Page 103
中的格式信息（注8）。如果你想用文本编辑器访问这个格式化的页面，那么
它可以删除退格符前面的任意字符以及这个退格符。对于加下划线的情况，
s/. ~H//g 
注7:
给单词“file”加下划线添加了一些符号：
它使单词“NAME”成为粗体。对每个字符进行3次重叠输出。同样，
特殊效果，
UNIX格式化程序 nroff 产生行式打印机和 CRP 显示的输出。
从 nroff文件中去除不可打印的字符
在vi中通过键入CTRL-V 然后按 ESC 键，产生字符~［。
GNU sed 产生的是这些：
一个应用实例就是去除老一代 System V UNIX 系统中由 nroff 所产生的 man 页
下 CTRL-V和 CTRL-H 输入“^H”
多次出现的重复序列被去除，
运行以上脚本产生下列输出：
下面是一个一行的测试文件：
文
有
件。下面的行会删除用于加粗和加下划线的序列：
时去除这些打印的“特殊效果”是有必要的，
以通过输出下划线、退格键和要加下划线的字符来完成。下面的示例是为了
 3H 3H 3H 3WH AWH WH WAH H H NH NH NH N
The Great ^[ is a movie starring Steve McQueen.
~Hf_~Hi_^HI_~He 
The
The
The
The
Great \1b is a movie starring Steve McQueen.
 Great \33 is a movie starring Steve McQueen.
Great Escape is a movie starring Steve McQueen.
然而，
它输出后面跟有退格键字符，然后再输出同样的字符。用文本编辑
可以在 awk 中完成这些。
QQ群：
每个序列只保留一个字符。注意，在vi中通过按
50192241
比如你可以将输出作为一个源
第五章
为了达到粗体化的
基本 sed 命令
，加下划线
---
## Page 104
为了取消左边界和不想要的制表符，我们在上面的两个命令后添加两个命令：
注8:
表符意想不到地出现在文本中，这与 nroff 如何优化 CRT 屏幕上的显示有关。
如“NAME”）前面有一些前导空格而每行前面在一个制表符。而且，
数字9是字面值。这里还有形成左边界和缩进的前导空格。进一步检查，在标
再次强调，在vi中可以通过按下 CTRL-V并随后按下 ESC 键来输入 ESC 字符。
列可以被简单地删除：
除了去掉加粗的和加下划线的序列以外，
件中：
方面的问题类似）。一个带有格式的 man 面将以下面所示的样于保存到一个文
你会想要一个整洁的版本（在许多方面，这个问题与上一章中转换字处理文件
题
的
（例）
尚转义序列。在以上格式化的帮助面的顶端可以看到序列“~[9”
s/·/ /g
8/*[］/s
8//6]~/s
s/ . rH//g 
8//6]/e
elapsed time since activity occurred on the line, and the
who can list the user’ s name, terminal line, login time,
D^HD~ HD^ HDE^ HE^ HE^ HES^HS^HS^HSC^ HC~ HC~ HCR^ HR^ HR^ HRI^HI~HI~HIP^ HP 
who am I
who
[-u] [_~Hf_~
who[-a] [-b] [-d] [-H] [-1] [-p] [-q] [-r] [-s] [-t][-T]
S^ HS^ HS^HSY~ HY~ HY~ HYN^ HN~ HN~ HNO~ HO~ HO~ HOP~ HP^ HP~ HPS^ HS^HS^ HSI~ HI 
who - who is on the system?
 [9 N~ HN~ HN~ HNA~ HA^ HA~ HAM~ HM~ HM~ HME~ HE^ HE^ HE 
[9 who(1) who(1)
sedman－-对 nroff 格式化的帮助面进行反格式化
过去许多 SystemV UNIX厂商只提供预先格式化的帮助面。这就允许
am 
统厂商都提供了参考手册的源代码
troff 源使得很难修复文件错误。幸运的是，大多数现在的 UNIX系
Hi_~HI_~He]
QQ群：
50192241
而不是格式化它，
104
还有产生换页或各种其他的打印函数