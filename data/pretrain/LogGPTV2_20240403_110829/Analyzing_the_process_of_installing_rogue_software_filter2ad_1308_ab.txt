Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:13 UTC from IEEE Xplore.  Restrictions apply. 
9:53:58 mkdir   “ ”9:54:00 cd  “ ”9:54:03 ls wget 9:54:07 /sbin/ifconfig 9:54:31 wget9:55:09 ftp9:55:47 o 9:55:54 ftplynxwww.almerimur.com/capella/linux.tar.gz 9:56:08 wgetwww.geocities.com/capella99_2000/linux.tar.gz9:56:18 ftp 207.150.179.22 9:57:18 wget www.almerimur.com/capella/linux.tar.gz9:57:26 history -c -d offsetTo analyze the nature of the files we extracted, wesubmitted them to the VirusTotal web service [7]. 50%of the files could be identified using VirusTotal. Theremaining 50% were identified manually using theirsource code. Figure 2 provides the categories and thevolume of files downloaded by attackers during the datacollection period. Figure 2 indicates that the popularityof our honeypots grew over time. The gap in August2007 is due to the change in IP addresses. Figure 2 alsoshows that the main interest of attackers was to install“IRCBots” (most were Mech-based IRCBots [8]). Themotivation to deploy IRCBots is to make thecompromised computer part of a botnet. An army ofseveral thousand bots can be turned into profit byattackers who sell computer resources on the blackmarket [9]. Here is an example of IRCbot based attacksession:13:46:06 cd /var/tmp13:46:11 wget http://www.shaq.profesor.info/like/error.tar.gz13:46:16 tar xzvf error.tar.gz13:46:18 rm -rf error.tar.gz13:46:19 cd error13:46:21 chmod +x*13:46:22 ./x13:46:28 exitThe second most popular software installed was“Bouncers”, which are programs used to relay networkconnections, much like a proxy. Attackers often use thistype of software to hide their source IP address andhostname. Most of the bouncers we collected werebased on Psybnc [10]. Under “Attack Tools”, wegrouped various programs used by attackers tocompromise the computer. These tools included non-malicious software, such as rogue SSH servers, andmalicious programs, such as john-the-ripper [11], logcleaners, process hiders and network sniffers. In thiscategory, we included rogue web servers installed byattackers to setup phishing websites [12]. The“Rootkits” type included system exploits and roguebinaries used to gain root privileges on the compromisedcomputer. “Network Scanner” contained software toautomatically probe for listening SSH servers or toperform port scans. The “Flooder” type consisted ofnetwork applications built to launch denial-of-serviceattacks [13] against a given target. “Backdoor” includedprograms to stealthily and remotely control thecompromise computer. “Files” contained non-maliciousfiles, such as movie trailers, computer drivers or evenWindows update patches. Attackers who downloadedthese files were simply using the compromisedcomputer for storage. We even found an attacker whoattempted to turn the compromised computer into aCounterStrike game server.Figure 2: Number of files downloaded byattackers over time, sorted by typeThe final step in our analysis was to label eachsession with the type of file downloaded. We discoveredthat in 58 out of the 379 sessions, attackers downloadedmore than one type of file. This number increases to 158if we aggregate files per attack instead of session. Thisis because attackers often used auxiliary sessions todownload other files or performed other tasks inparallel. Main and auxiliary sessions were linked usingthe source IP and a time window of 24 hours.Table 3 indicates that for all categories of roguesoftware, approximately half of the attackers usedauxiliary sessions. These auxiliary sessions had, onaverage, fewer command lines compared to mainsessions and tended to be shorter, except for the“Flooder” and “File” types. We investigated the delaybetween the first command typed by attackers and thetime when they deployed their rogue software, in orderto get insight on the detection time required by asecurity tool before damage occurred. On average, formain sessions, it took between 2 minutes 14 seconds and30 minutes for attackers to deploy their rogue software.AprilMayJuneJulyAug.Sept.Oct.Nov.020406080100120140050100150200250FileBackdoorFlooderNet. Scan.RootkitAttack ToolBouncerIRCBotsSessionsNumber of sessionsNumber of rogue software978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
563
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:13 UTC from IEEE Xplore.  Restrictions apply. 
Table 2: Grouping of attacker's actions and statistics on the number of commands capturedGroupActionCommandsCommandsSessionsNumberPercentageNumberPercentageGet informationget information related tousersw, whoami, who, last,id, finger, lastlog1,4647.20%76865.64%get information related tothe systemuptime, uname, ifcon-fig, netstat, locate,php -v, hostname,whereis, nmap, cat/etc/8944.40%45438.80%get other type of informationps -a, ps -ax, his-tory, cat 8764.31%44538.03%Change configurationadd one or multiple usersand set passwordsadduser, useradd,passwd1160.57%484.10%gain root privilegessu, sudo850.42%403.42%change the passwordpasswd5692.80%43236.92%modify system filescp, mkdir, mv, rm1,0305.07%40034.19%change system configurationpath, userdel, ipt-ables, ln, export,chown, chmod, rhsnd6103.00%23620.00%Edit filesread system filesnano, pico, vi1390.68%131.11%read other filesnano, pico, vi 390.19%867.35%edit system filesnano, pico, vi 4302.11%635.38%Hide intrusiontamper with system files oruser variables to hide tracesof the intrusion unset , rm[-rf] , export=/dev/null,cat /dev/null >8594.22%31326.75%Restore deletedfilesrestore deleted files to hidetracestouch950.47%272.31%Kill processterminate the execution ofprocesseskill, cat.pid, ps3621.78%1099.32%Fetch rogue softwaredownload a file from a remote host and unpack itlwp-download, scp,curl, ftp, wget, un-zip, tar2,33911.50%48441.37%Deploy rogue softwarerun a rogue softwareperl, ./1,0655.24%45939.23%install a rogue software./configure, make,make install,./setup, gcc250.12%110.94%Tool commandUnix tool commandscd, ls, pwd, clear5,70028.03%89276.24%Other actionsuse SSHssh, "yes"470.23%231.97%launch a new consolesh, bash790.39%695.90%launch a new consolescreen680.33%302.56%failed attempt of gettingfiles using SCPwinscp unsuccessfulattempt6113.00%80.68%chat with other userswall560.28%60.51%Exitexit the sessionexit3401.67%29124.85%TotalIdentified commands17,89888.02%1171Unidentified commands2,43711.98%Total commands20,335100.00%978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
564
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:13 UTC from IEEE Xplore.  Restrictions apply. 
Table 3: Comparison between attack sequences based on the type of rogue software downloadedMain rogue software:IRCBotsBouncerAttack ToolRootkitNet. ScannerFlooderBackdoorFileNoneOther rogue software often associated:Bouncer (12)IRCBots (5)IRCBots (7)IRCBots (4)Rootkit (2)Rootkit (3)Rootkit (1)File (6) Rootkit (11)Att. Tool (6)File (4)File (4)Att. Tool (2)Att. Tool (2)Att. Tool (1)  Flooder (11)Rootkit (4)Bouncer (4)Net. Scan. (3)IRCBots (1)File (1)   Net. Scan. (9)Backdoor (2)Net. Scan. (4)Att. Tool (3)Flooder (1)     Rootkit (1)File (2)     Number of attackers:83292422171844182Attackers usingaux. sessions:5315119980189Type of session:mainaux.mainaux.mainaux.mainaux.mainaux.mainaux.mainaux.mainaux.mainaux.Number of ses-sions:14413640482945242422172117763262326Avg. session dur-ation (s):6852537613069802529365411,0941926801,700563742755543854Min. session dur-ation (s):403308806004514190155366000Max session dur-ation (s):11,4703,3393,6452,6112,7502,6644,1834,5824,5129982,81919,6721,2271,9762,2647,64776,629Avg. number oflines:2817311521230411836102116281841513Min. number oflines:2131151914231126111Max. number oflines:67670293889148591169526126985947399217237Avg. delay beforeexploit. (s):1,030204939371715941,8919872,105741,11921358960581432Percentages of attackers for each group of actions:Get info.87%94%90%100%96%91%91%89%94%100%89%88%100%100%100%80%87%Edit files17%11%31%33%33%9%18%11%29%17%25%25%18%27%Change conf.80%87%83%80%88%82%96%67%59%67%72%75%100%75%100%62%81%Fetch rogue soft-ware100%55%100%53%100%82%100%78%100%67%100%38%100%100%100%50%60%Deploy roguesoftware76%40%69%33%83%36%82%44%77%44%67%25%25%25%41%51%Kill process16%21%24%7%17%9%14%11%18%11%25%7%23%Hide intrusion30%34%45%40%38%46%36%11%29%11%28%38%25%25%26%30%Restore deletedfiles1%7%7%4%9%11%13%25%5%5%Other actions17%13%28%27%33%46%14%33%29%11%6%25%12%20%Tool commands98%72%97%87%100%82%100%67%94%67%94%75%100%100%100%72%84%This delay is on average shorter for auxiliarysessions, and can even reach 0 seconds for the“Backdoor” and “File” types, because auxiliarysessions were sometimes used only to deploy the roguesoftware previously downloaded in the main session.This explanation is confirmed if we consider thebreakdown of attacker actions per type of session andcategory of rogue software. We can see that all attackersused a main session to fetch rogue software, while usingauxiliary sessions to obtain information about thesystem or to change program settings. We can also seethat for all categories except for “Rootkit” and“Network Scanner”, attackers primarily used auxiliarysessions to hide their intrusion and restore deleted files. 3.3. Discussion about AttackersThe data we analyzed provided evidence thatattackers targeting weakly secured SSH servers tend tobe low skilled humans. The large number of typos inrecorded commands and the timing between commandsindicate that attacks are rarely from automated scripts,but from human beings who used interactive terminals.For scalability reasons, automated attacks arepredominantly on the Internet. However, our datasetshows that this rule does not apply for the specificservice we opened on our honeypots (SSH on porttcp/22). We believe that human attackers use automated978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
565
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:13 UTC from IEEE Xplore.  Restrictions apply. 
scripts to scan and find SSH servers to compromise.Once successfully logged onto the machine they proceedto manually install rogue software. Further evidence of the low skill level is found fromthe relatively low percentage of attackers who attemptedto hide their intrusions as well as the large volume ofattackers who were not able to complete their attacks.We found a number of attackers did not complete theirattacks because some system tools were missing on thehoneypot, or because the URL from which they tried todownload rogue software was invalid. These findingsconfirm the conclusions of [14] and [1].4. Related WorkIn [15], the authors performed an in-depth forensicanalysis of post-compromise attacker behavior. Theirprimary focus was on investigating the actions of moresophisticated attackers. The main difference betweentheir project and our experiment was that we focused ona larger set of less sophisticated attackers and gatheredaggregate statistics about their actions rather thaninvestigating individual incidents in detail.In [16], the author described the login attempts on asingle honeypot over a 22-day period. A modified SSHserver was used to collect password attempts, and mostof the article was dedicated to the analysis of theseattempts. During a period of seven days where Sebekwas also installed on the honeypot, the author recordedone successful login attempt, providing some insightinto attacker behavior.The project which is the most similar to our study is[14], in which the authors collected SSH intrusionsduring six months from a total of 35 attackers. Bycomparing IP addresses of attackers with the onescollected using a large distributed low interactionHoneynet, the authors determined that intruders andscanners were two distinct sets of attackers. They alsocame to the same conclusion that attackers targetingweakly secured SSH servers were low skilled. Our workdiffers with [14] due to our larger data collection (wecollected attacks from 305 distinct attackers), whichallowed a more precise quantification of actionsperformed by attackers and rogue software downloaded.5. ConclusionsWe found that a typical attack session consisted of: 1)checking the system configuration, 2) changing thesystem configuration, and 3) downloading, installingand running rogue software. In about 25% of the cases,attackers will try to hide their intrusion. We identified 250 rogue software files of varioustypes. The most popular were IRC bots, bouncers, attacktools, root kits, network scanners, flooders and backdoor programs. We also found that attackers oftenlaunched more than one attack session at a time. Wecompared the main session with the auxiliary ones. Wealso found that in 27% of the sessions, attackers diddownload some software which was never used. This isan indication that we might have not given attackersenough time before redeploying the honeypot.6. References[1] Daniel Ramsbrock, Robin Berthier, Michel Cukier,"Profiling Attacker Behavior Following SSH Compromises,"dsn, 37th Annual IEEE/IFIP International Conference onDependable Systems and Networks (DSN'07), pages 119—124, 2007[2] http://www.balabit.com/network-security/syslog-ng/, 2008[3] http://strace.sf.net, 2008[4] http://www.honeynet.org/tools/sebek/, 2008[5] http://www.tcpdump.org, 2008[6] http://chaosreader.sourceforge.net, 2008[7] http://www.virustotal.com, 2008[8] Mech IRCBot: http://www.energymech.net, 2008[9] Friess, N. and Aycock, J. “Black Market Botnets”,http://hdl.handle.net/1880/45380, 2007[10] PsyBNC: http://www.psybnc.at, 2008[11] John-the-ripper password cracker:http://www.openwall.com/john, 2008[12] R. Dhamija, JD. Tygar and M. Hearst, “Why phishingworks”, in Proceedings of the SIGCHI conference on HumanFactors in computing systems, ACM New York, NY, USA,pages 581—590, 2006[13] D. Moore, C. Shannon, D.J. Brown, G.M. Voelker and S.Savage, “Inferring Internet denial-of-service activity”, ACMTransactions on Computer Systems (TOCS), ACM New York,NY, USA, vol. 24, num. 2, pages 115—139, 2006[14] E. Alata, V. Nicomette, M. Kaâniche, M. Dacier and M.Herrb, “Lessons learned from the deployment of a high-interaction honeypot”, 6th European Dependable ComputingConference (EDCC'06), pages 39—46, Coimbra, Portugal,October 18-20, 2006[15] F. Raynal, Y. Berthier, P. Biondi, and D. Kaminsky,“Honeypot forensics”, In IEEE Information AssuranceWorkshop, 2004[16] C. Seifert, “Malicious SSH Login Attempts”,http://www.securityfocus.com/infocus/1876, August 2006