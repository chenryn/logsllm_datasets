User: How to use Shell scripts to write tasks for automatically backing up MySQL databases on a regular basis?
Assistant: The following is a shell script that automatically backs up the MySQL database on a regular basis: 1. Create a new file named backup.sh, and add executable permissions: chmod +x backup.sh 2. Add the following content to the file: ``` #!/bin/bash # Backup directory backup_dir=/data/backup/mysql # MySQL login information user=root # Change to your own MySQL user name password=123456 # Change to your own MySQL password # Database name to be backed up db_name= mydatabase # Change to the name of the database you want to back up # Backup file name backup_file=${backup_dir}/backup_${db_name}_$(date +%Y%m%d%H%M%S).sql # Create a backup directory mkdir -p ${backup_dir} # Backup MySQL database mysqldump -u${user} -p${password} ${db_name} > ${backup_file} # Delete backup files 7 days ago find ${backup_dir} -type f - name "backup_${db_name}_*" -mtime +7 -delete ``` 3. Modify user and password, replace them with your MySQL user name and password 4. Modify db_name to the name of the database you want to backup 5. Modify backup_dir to the location where you want to store the backup file 6. Add the script to the scheduled task. For example, if you want to run a backup task at 2 am every day, you can add a task to crontab: 0 2 * * * /path/to/backup.sh 7. Save and exit the editor. In this way, at 2 am every day, the scheduled The task will automatically run a shell script, backup your MySQL database, and automatically delete old backups if the backup file is older than 7 days.