$ free -k
total used free shared buffers cached
Mem: 997184 976928 20256 0 129592 171932
-/+ buffers/cache: 675404 321780
Swap: 4545576 4 4545572
你可能会觉得奇怪：“dmesg告诉你free为990MB，而free-k告诉你free为320MB。这丢失了超过600MB……”。
别担心“Mem:”这行中“used”较大的值以及“free”较小的值，放轻松，你需要查看的是下面的那个（在上面的
例子中它们是675404和321780）。
对于我的MacBook，有1GB=1048576k内存（显卡系统用掉一些），我看到的如下。
报告 大小
dmesg中total的大小 1016784k=1GB-31792k
dmesg中的free 990528k
shell下的total 997184k
shell下的free 20256k（但有效的为321780k）
Table9.17: 报告的内存大小
9.5.11 系统安全性和完整性检查
糟糕的系统维护可能会暴露你的系统，导致它被外部非法使用。
对于系统安全性和完整性的检查，你需要从下面这些方面开始。
• debsums软件包，参见debsums(1)和第 2.5.2 节。
• chkrootkit软件包，参见chkrootkit(1)。
• clamav软件包家族，参见clamscan(1)和freshclam(1)。
• DebiansecurityFAQ。
• SecuringDebianManual。
Debian参考手册 154/233
软件包 流行度 大小 说明
后台守护进程（daemon），将系统日志文件中的异常通过邮件发
logcheck V:6,I:8 110
送给管理员
debsums V:5,I:36 98 实用程序，使用MD5校验码对已安装软件包的文件进行校验
chkrootkit V:7,I:17 926 rootkit检测软件
clamav V:10,I:46 27703 Unix的反病毒实用程序——命令行界面
tiger V:1,I:2 7800 报告系统安全漏洞
tripwire V:1,I:2 12168 文件和目录完整性检测软件
john V:1,I:9 471 先进的密码破解工具
aide V:1,I:1 293 高级入侵环境检测——静态二进制
integrit V:0,I:0 2659 文件完整性验证程序
crack V:0,I:1 152 密码猜测程序
Table9.18: 用于系统安全性和完整性检查的工具
下面是一个简单的脚本，用来检测典型的所有人可写的错误文件权限。
# find / -perm 777 -a \! -type s -a \! -type l -a \! \( -type d -a -perm 1777 \)
小心
由于debsums软件包使用本地存储的MD5校验码，因此面对恶意攻击，也不能完全相信系统安全性检测
工具。
9.6 数据存储技巧
使用liveCD或debian-installerCD以救援模式启动你的系统，可以让你简单地重新配置你的启动设备的数据存储。
如果设备在GUI（图形用户界面）桌面系统下被自动挂载，在对它们进行操作前，你可能需要从命令行手工umount(8)
这些设备。
9.6.1 硬盘空间使用情况
硬盘空间的使用情况可以通过mount、coreutils和xdu软件包提供的程序来评估：
• mount(8)显示所有挂载的文件系统(=磁盘).
• df(1)报告文件系统使用的硬盘空间。
• du(1)报告目录树使用的硬盘空间。
提示
你可以将du(8)的输出传输给xdu(1x)，来使用它的图形交互式演示，例如“du -k . |xdu”、“sudo du -k -x
/ |xdu”等等。
9.6.2 硬盘分区配置
对于硬盘分区配置，尽管fdisk(8)被认为是标准的配置，但是parted(8)工具还是值得注意的。
Debian参考手册 155/233
老的PC使用经典的主引导记录（MasterBootRecord，MBR）方案，将硬盘分区数据保存在第一个扇区，即LBA扇区
0（512字节）。
一些带有统一可扩展固件接口（UnifiedExtensibleFirmwareInterface，UEFI）的近代PC，包括基于Intel的Mac，使用
全局唯一标识分区表（GUIDPartitionTable，GPT）方案，硬盘分区数据不保存在第一个扇区。
尽管fdisk(8)一直是硬盘分区的标准工具，但现在parted(8)替代了它。
软件包 流行度 大小 说明
util-linux V:881,I:999 5284 多种系统工具，包含fdisk(8)和cfdisk(8)
parted V:412,I:565 122 GNUParted，硬盘分区调整程序
gparted V:14,I:103 2175 基于libparted的GNOME分区编辑程序
gdisk V:329,I:507 885 用于GPT/MBR并存的硬盘的分区编辑程序
kpartx V:21,I:34 75 为分区建立设备映射的程序
Table9.19: 硬盘分区管理软件包
小心
尽管parted(8)声称也能用来创建和调整文件系统，但使用维护最好的专门工具来做这些事会更为安全，例
如mkfs(8)（mkfs.msdos(8)、mkfs.ext2(8)、mkfs.ext3(8)、mkfs.ext4(8)……）和resize2fs(8)。
注意
为了在 GPT 和 MBR 之间切换，你需要直接删除开头的几个块中的内容（参见第 9.8.6 节）并使用“parted
/dev/sdx mklabel gpt”或“parted /dev/sdx mklabel msdos”来设置它。请注意，这里使用的“msdos”
是用于MBR。
9.6.3 使用 UUID 访问分区
尽管重新配置你的分区或可移动存储介质的激活顺序可能会给分区产生不同的名字，但你可以使用同一个UUID来访
问它们。如果你有多个硬盘并且你的BIOS/UEFI没有给它们一致的设备名的话，使用UUID是不错的选择。
• mount(8)命令带有“-U”选项可以使用UUID来挂载一个块设备，而不必使用他的文件名称，例如“/dev/sda3”。
•“/etc/fstab”（参见fstab(5)）可以使用UUID。
• 引载加载程序（第 3.1.2 节）也可以使用UUID。
提示
你可以使用blkid(8)来查看一个特定块设备的UUID。
你也可以使用”lsblk -f”来检测UUID并查看其它信息。
9.6.4 LVM2
LVM2是一个用于Linux内核的逻辑卷管理器。使用LVM2的话，硬盘分区可以创建在逻辑卷上来替代物理硬盘。
LVM有下列需求。
• Linux内核中的设备映射支持（Debian内核默认支持）
• 用户自定义设备映射支持库（libdevmapper*软件包）
Debian参考手册 156/233
• 用户自定义LVM2工具（lvm2软件包）
请从下面的man手册开始了解LVM2。
• lvm(8)：LVM2机制的基础知识（列出了所有LVM2命令）
• lvm.conf(5)：LVM2的配置文件
• lvs(8)：报告逻辑卷的相关信息
• vgs(8)：报告卷组的相关信息
• pvs(8)：报告物理卷的相关信息
9.6.5 文件系统配置
对于ext4文件系统,e2fsprogs包提供下面的工具。
• mkfs.ext4(8)创建新的ext4文件系统
• fsck.ext4(8)检查和修复现有ext4文件系统
• tune2fs(8)配置ext4文件系统的超级块
• debugfs(8)交互式的调试ext4文件系统. (它有undel命令来恢复已经删除的文件.)
mkfs(8)和fsck(8)命令是由e2fsprogs包提供的，是各种文件系统相关程序的前端。(mkfs.fstype和fsck.fstype).
对于ext4文件系统,它们是mkfs.ext4(8)和fsck.ext4(8)(它们被符号链接到mke2fs(8)和e2fsck(8)).
Linux支持的每一个文件系统，有相似的命令。
软件包 流行度 大小 说明
e2fsprogs V:759,I:999 1501 ext2/ext3/ext4文件系统工具
btrfs-progs V:42,I:71 4851 Btrfs文件系统工具
reiserfsprogs V:10,I:25 473 Reiserfs文件系统工具
zfsutils-linux V:28,I:29 1619 OpenZFS文件系统工具
dosfstools V:188,I:535 315 FAT文件系统工具. (Microsoft: MS-DOS,Windows)
exfatprogs V:21,I:348 301 exFAT文件系统工具，由三星维护。
exfat-fuse V:6,I:136 73 FUSE读写exFAT文件系统（微软）驱动。
exfat-utils V:4,I:123 231 exFAT文件系统工具，由exfat-fuse的作者维护。
xfsprogs V:21,I:96 3493 XFS文件系统工具. (SGI:IRIX)
ntfs-3g V:165,I:509 1470 FUSE读写NTFS文件系统（微软：WindowsNT……）驱动。
jfsutils V:0,I:8 1577 JFS文件系统工具. (IBM:AIX,OS/2)
reiser4progs V:0,I:2 1367 Reiser4文件系统工具
hfsprogs V:0,I:5 394 HFS和HFSPlus文件系统工具. (Apple: MacOS)
zerofree V:5,I:130 25 把ext2/3/4文件系统上空闲块设置为零的程序
Table9.20: 文件系统管理包列表
提示
Ext4文件系统是Linux系统上默认的文件系统，强烈推荐使用这个文件系统，除非你有特殊的理由不使用。
Btrfs状态能够在Debianwikionbtrfs和kernel.orgwikionbtrfs发现。它被期望作为ext4文件系统之后的下一个
默认文件系统。
一些工具可以在没有Linux内核支持的情况下访问文件系统(参见第 9.8.2 节).
Debian参考手册 157/233
9.6.6 文件系统创建和完整性检查
mkfs(8)在Linux系统上创建文件系统。fsck(8)命令在Linux系统上提供文件系统完整性检查和修复功能。
在文件系统创建后，Debian现在默认不周期性的运行fsck。
小心
在已经挂载的文件系统上运行fsck，一般是不安全的.
提示
在”/etc/mke2fs.conf” 里设置”enable_periodic_fsck” 并使用”tune2fs -c0 /dev/partition_name”
设置最大挂载数为0，便可以在重启时，让root文件系统包括在内的所有文件系统上，安全的运行 fsck(8)命令.
参见mke2fs.conf(5)和tune2fs(8).
从启动脚本里面运行的fsck(8)命令结果，可以在”/var/log/fsck/”目录下查看。
9.6.7 通过挂载选项优化文件系统
“/etc/fstab”中包含了基础的静态文件系统配置。例如，
«file system» «mount point» «type» «options» «dump» «pass»
proc /proc proc defaults 0 0
UUID=709cbe4c-80c1-56db-8ab1-dbce3146d2f7 / ext4 errors=remount-ro 0 1
UUID=817bae6b-45d2-5aca-4d2a-1267ab46ac23 none swap sw 0 0
/dev/scd0 /media/cdrom0 udf,iso9660 user,noauto 0 0
提示
UUID（参见第 9.6.3 节）可以替代一般的块设备名称（例如“/dev/sda1”、“/dev/sda2”……）来识别一个
块设备。
从Linux2.6.30起，内核的默认行为是提供”relatime”选项。
参见fstab(5)和mount(8)。
9.6.8 通过超级块（superblock）优化文件系统
一个文件系统的特性可以使用tune2fs(8)命令通过超级块来优化。
• 执行“sudo tune2fs -l /dev/hda1”可以显示“/dev/hda1”上的文件系统超级块内容。
• 执行”sudo tune2fs -c 50 /dev/hda1”改变”/dev/hda1”文件系统的检查(在启动时执行fsck)频率为每50
次启动.
• 执行“sudo tune2fs -j /dev/hda1”会给文件系统添加日志功能，即“/dev/hda1”的文件系统从ext2转换
为ext3。（对未挂载的文件系统这么做。）
• 执行“sudo tune2fs -O extents,uninit_bg,dir_index /dev/hda1 && fsck -pf /dev/hda1”在
“/dev/hda1”上将它从ext3转换为ext4。（对未挂载的系统这么做。）
提示
尽管tune2fs(8)的名字是这样的，但它不仅能用于ext2文件系统，也能用于ext3和ext4文件系统。
Debian参考手册 158/233
9.6.9 硬盘优化
警告
在你折腾硬盘配置之前，请检查你的硬件并阅读hdparm(8)的man手册页，因为这可能会对数据完整性造
成相当大的危害。
你可以通过“hdparm -tT /dev/hda”来测试“/dev/hda”硬盘的访问速度。对于一些使用(E)IDE连接的硬盘，
你可以使用“hdparm -q -c3 -d1 -u1 -m16 /dev/hda”来启用“(E)IDE32位支持”、启用“using_dmaflag”、
设置“interrupt-unmaskflag”并设置“multiple16sectorI/O”（危险！），从而加速硬盘访问速度。
你可以通过“hdparm -W /dev/sda”来测试“/dev/sda”硬盘的写入缓存功能。你可以使用“hdparm -W 0
/dev/sda”关闭写入缓存功能。