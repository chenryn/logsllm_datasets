Valve
Valve
Valve
Button
Neutralizer
Source
Product
Heater
Source
Start
To
Mixer
Control Logic pH
Baseline
Emergency
Annunciator
Sequential
Parallel
Switch
Switch
Switch
Sensor
Synchronized
Synchronized
Signal
Sensor
Light
Light
Light
Light
Level
Level
Level
Light
Light
Acidity
Trafﬁc
Yellow
Yellow
Green
Green
Temp
High
Low
Mid
Red
Red
1
2
1
2
1
2
p
p p p
p
Table 7: Accuracy improvements on results from Table 4.
We safeguard a speciﬁcation against an emergency stop button
by slightly weakening each property of the form AG(ψ ⇒ φ) to al-
low it to fail on cases where ψ∧estop holds. For example, in the pH
neutralizer, the property AG(¬mixer ∧ ls
2 ⇒ AX mixer)
1 ∧ ls
∗
∗
was changed to AF(¬mixer ∧ ls
2 ⇒ AX mixer), and a
1 ∧ ls
∗
∗
fairness constraint FAIRNESS mixer was added to force the model
checker to ignore the path on which estop was inﬁnitely ON. For
properties of other forms, such as AG(¬ψ ⇒ φ), no such weak-
ening is necessary because it still holds when either ψ ∧ estop or
ψ ∧ ¬estop.
The results with both dependency analysis and safeguards are
shown in Table 7. The safeguard was applied to all properties in
the pH neutralization and trafﬁc signal systems, and all ﬁve test
cases were rerun. The addition of the safeguards did not negatively
affect accuracy in the baseline case, and the number of test cases
for which all devices are mapped regardless of plant features is in-
creased to 4 out of 5. Thus, if an adversary has reason to suspect
that an emergency stop system may be in place, the use of safe-
guards can be an effective workaround.
5. COUNTERMEASURES
We now explore several avenues to countermeasures to SABOT-
like mechanisms in control systems: improved perimeter security,
novel PLC security architectures, and control logic obfuscation.
Improved perimeter security. Perhaps the most straightforward
way to safeguard against malicious PLC payloads is to improve
perimeter defenses around PLCs. Unfortunately, the most effective
solution, disconnecting the PLC from any networked computer, is
neither common practice, nor in many cases economically feasible.
Due to economic constraints and for ease of maintenance, PLCs are
often connected to the corporate networks [44] or the Internet [41,
11]. However numerous standards exists for defense in depth secu-
rity in control systems across industries [14] such as in the power
sector [42, 32]. Compliance with standards, however, can lead to a
checklist approach to security that can ultimately give a false sense
of security impact [43, 34]. A ﬁnal defense-in-depth technique is
the use of SCADA honeynets [36] outside of the protected perime-
ter to detect adversaries before they access production SCADA de-
vices.
Novel PLC security architectures. PLCs as they exist today sup-
port virtually no security precautions short of basic passwords. There
are several basic architectural changes that can mitigate any PLC
payload mechanism. Mohan et al. [31] proposed the use of a safety
PLC to monitor plant behavior and detect deviations from deter-
ministic behavior. Similarly, a model based anomaly detection sys-
tem for SCADA networks was proposed in [8]. Lemay et al. [25]
used attestation protocols to verify the integrity the code running on
a smart electricity meter, including ﬁrmware updates. Attestations
have also been used to prevent peripheral ﬁrmware from attacking
a host computer [26]. A similar method could be applied to con-
trol systems in which PLCs must attest their entire stack, including
ﬁrmware and control logic, to a trusted third party before being al-
lowed to send control signals to devices. Thus, any maliciously
uploaded control logic would be discovered. Of course, any such
solution faces a long path to deployment in real world systems.
Control logic obfuscation. If the above two measures fail, obfus-
cation of the PLC’s control logic can offer a ﬁnal line of defense in
preventing SABOT’s analysis. This has the added advantage that no
modiﬁcation of the control system is required beyond obfuscating
the control logic itself. Much of the existing work on program ob-
fuscation is has attempted either to evade malware signature match-
ing [39] or to prevent code injection into address spaces [40]. Here,
the objectives are different; the goal in this case is to prevent either
decompilation or VTDM recovery by SABOT. Attempts at pre-
venting decompilation will likely fail, as control engineers expect
to be able to read code from a PLC and decompile it. (Most PLC
development environments can decompile control logic.) A more
promising route is to add noise in the form of unused variables that
are not mapped to any devices. This would, however, be a funda-
mental departure from current control engineering practices.
6. RELATED WORK
There are many tools preceding SABOT aimed at exploiting soft-
ware vulnerabilities in control systems. Automated exploit frame-
works like Metasploit [28] have been extended to attacks against
SCADA and control systems [23]. While such exploitation of con-
trol systems is however not new [5], the rate of release of new
SCADA and PLC exploits has been accelerating [35, 10]. Such
tools can be seen as fulﬁlling the ﬁrst step of control system pen-
etration, the subsequent step being automatic payload generation
against the victim PLC.
McLaughlin ﬁrst described the requirements for extending auto-
mated exploit frameworks to perform attacks against PLCs in [29].
The focus is, however, how to execute untargeted attacks against
an PLC system based on techniques such as the violation of safety
interlocks found in the control logic. The topic of executing a tar-
geted attack is only brieﬂy touched on, as it is mentioned that a
means will be necessary for an adversary to specify the payload
goal. However, no means is given for actually specifying the goal,
or for achieving it. SABOT is, to the best of our knowledge, the ﬁrst
evaluation of these techniques.
4487. CONCLUSION
In this paper, we have presented SABOT as a means to lower
the bar of sophistication needed to construct payloads for vulner-
able PLCs. If an adversary is familiar enough with their target to
specify a precise attack deﬁnition, then SABOT can map a supplied
behavioral speciﬁcation onto the code from the victim PLC, allow-
ing a malicious payload to be instantiated. We have demonstrated
that even when unexpected features or independent subsystems are
implemented in a PLC, SABOT can still ﬁnd a sufﬁcient mapping to
instantiate a payload for the system within a reasonable time frame.
PLC code obfuscation may prove an effective defense against such
attacks, though it is in conﬂict with current practices.
8. REFERENCES
[1] Shodan. http://www.shodanhq.net.
[2] ADVANTECH/BROADWIN WEBACCESS RPC
VULNERABILITY. ICS-CERT Advisory 11-094-02, April 2011.
[3] AMIN, S., LITRICO, X., SASTRY, S. S., AND BAYEN, A. M.
Stealthy Deception Attacks on Water SCADA Systems. In
Proceedings of the 13th ACM international conference on Hybrid
systems: computation and control (2010).
[4] BERESFORD, D. Exploiting Siemens Simatic S7 PLCs. In Black Hat
USA (2011).
[5] BYRES, E., AND LOWE, J. The Myths and Facts behind Cyber
Security Risks for Industrial Control Systems. In ISA Process
Control Conference (2003).
[6] CÁRDENAS, A. A., AMIN, S., AND SASTRY, S. Research
Challenges for the Security of Control Systems. In Proceedings of
the 3rd conference on Hot topics in security (2008).
[7] CAVADA, R., CIMATTI, A., JOCHIM, C. A., KEIGHREN, G.,
OLIVETTI, E., PISTORE, M., ROVERI, M., AND TCHALTSEV, A.
NuSMV 2.5 User Manual, 2010.
[8] CHEUNG, S., DUTERTRE, B., FONG, M., LINDQVIST, U.,
SKINNER, K., AND VALDES, A. Using Model-based Intrusion
Detection for SCADA Networks. In Proceedings of the SCADA
Security Scientiﬁc Symposium (2007).
[9] CIMATTI, A., CLARKE, E., GIUNCHIGLIA, F., AND ROVERI, M.
NuSMV: A New Symbolic Model Veriﬁer. In Computer Aided
Veriﬁcation. Springer Berlin / Heidelberg, 1999.
[10] CONSTANTIN, L. Researchers Expose Flaws in Popular Industrial
Control Systems. http://www.pcworld.com, January 2012.
[11] CONTROL TECHNOLOGY CORP. Blue Fusion: Model 5200
Controller. http:
//www.ctc-control.com/products/5200/5200.asp.
[12] ÉIREANN P. LEVERTT. Quantitatively Assessing and Visualising
Industrial System Attack Surfaces. Master’s thesis, University of
Cambridge, 2011.
[13] ERICKSON, K. T., AND HEDRICK, J. L. Plantwide Process Control.
Wiley Inter-Science, 1999.
[14] EVANS, R. P. Control Systems Cyber Security Standards Support
Activities, January 2009.
[15] FALCIONE, A., AND KROGH, B. Design Recovery for Relay Ladder
Logic. In First IEEE Conference on Control Applications (1992).
[16] FALLIERE, N., MURCHU, L. O., AND CHIEN, E. W32.Stuxnet
Dossier. http://www.symantec.com, 2010.
[17] FERREIRA, N. G., AND SILVA, P. S. M. Automatic Veriﬁcation of
Safety Rules for a Subway Control Software. In Proceedings of the
Brazilian Symposium on Formal Methods (SBMF) (2004).
[18] GRAD, S. Engineers who hacked into L.A. trafﬁc signal computer,
jamming streets, sentenced.
http://latimesblogs.latimes.com.
[19] HUTH, M., AND RYAN, M. Logic in Computer Science. Cambridge
University Press, 2004.
[20] IGURE, V. M., LAUGHTER, S. A., AND WILLIAMS, R. D. Security
Issues in SCADA Networks. Computers and Security (2006).
[21] INTERNATIONAL ELECTROTECHNICAL COMMISSION.
International Standard IEC 61131 Part 3: Programming Languages.
[22] KEYENCE AMERICA. Position control using a stepper motor.
http://www.keyence.com/downloads/plc_dwn.php.
[23] LANGILL, J. White Phosphorus Exploit Pack Ver 1.11 Released for
Immunity Canvas. http://scadahacker.blogspot.com,
2011.
[24] LEALL, N. Lessons from an Insider Attack on SCADA Systems.
http://blogs.cisco.com/security/lessons_from_
an_insider_attack_on_scada_systems, August 2009.
[25] LEMAY, M., AND GUNTER, C. A. Cumulative attestation kernels
for embedded systems. In Proceedings of the 14th European
Symposium on Research in Computer Security (ESORICS) (2009).
[26] LI, Y., MCCUNE, J. M., AND PERRIG, A. Viper: verifying the
integrity of peripherals’ ﬁrmware. In Proceedings of the 18th ACM
conference on Computer and communications security.
[27] LIU, Y., NING, P., AND REITER, M. K. False Data Injection
Attacks against State Estimation in Electric Power Grids. In
Proceedings of the 16th ACM Conference on Computer and
Communications Security (November 2009).
[28] MAYOR, D., MOOKHEY, K. K., CERVINI, J., AND ROSLAN, F.
Metasploit Tookit: for Penetration Testing, Exploit Devevlopment,
and Vulnerability Research. Syngress, 2007.
[29] MCLAUGHLIN, S. On Dynamic Malware Payloads Aimed at
Programmable Logic Controllers. In 6th USENIX Workshop on Hot
Topics in Security (2011).
[30] MCLAUGHLIN, S., AND MCDANIEL, P. SABOT:
Speciﬁcation-based Payload Generation for Programmable Logic
Controllers. Tech. Rep. NAS-TR-0162-2012, The Pennsylvania State
University, 2012.
[31] MOHAN, S., BAK, S., BETTI, E., YUN, H., SHA, L., AND
CACCAMO, M. S3A: Secure System Simplex Architecture for
Enhanced Security of Cyber-Physical Systems.
http://arxiv.org, 2012.
[32] NATIONAL ENERGY REGULATORY COMISSION. NERC CIP 002 1
- Critical Cyber Asset Identiﬁcation, 2006.
[33] NICOL, D. M. Hacking the Lights Out. Scientiﬁc American 305, 1
(July 2011), 70–75.
[34] PIÈTRE-CAMBACÉDÈS, L., TRISCHLER, M., AND ERICSSON,
G. N. Cybersecurity Myths on Power Control Systems: 21
Misconceptions and False Beliefs. IEEE Transactions on Power
Delivery (2011).
[35] POLLET, J. Electricity for free? the dirty underbelly of scada and
smart meters. In Proceedings of Black Hat USA 2010 (July 2010).
[36] POTHAMSETTY, V., AND FRANZ, M. The SCADA Honeynet
Project. http://scadahoneynet.sourceforge.net.
[37] ROBERTS, P. F. Zotob, PnP Worms Slam 13 DaimlerChrysler Plants.
http://www.eweek.com, August 2008.
[38] SANGER, D. E. Obama Order Sped Up Wave of Cyberattacks
Against Iran. New York Times (June 2012).
[39] SZOR, P. The Art of Computer Virus Research and Defense. Addison
Wesley, 2005.
[40] THE PAX TEAM. Address Space Layout Randomization of PaX.
pax.grsecurity.net.
[41] TRIANGLE RESEARCH INTERNATIONAL. Connecting Super PLCs
to the Internet.
http://www.tri-plc.com/internetconnect.htm.
[42] U.S. DEPARTMENT OF ENERGY OFFICE OF ELECTRICITY
DELIVERY AND ENERGY RELIABILITY. A Summary of Control
System Security Standards Activities in the Energy Sector, October
2005.
[43] WEISS, J. Are the NERC CIPS making the grid less reliable. Control
Global (2009).
[44] YARDLEY, T. SCADA: Issues, Vulnerabilities, and Future
Directions. ;login 34, 6 (December 2008), 14–20.
449