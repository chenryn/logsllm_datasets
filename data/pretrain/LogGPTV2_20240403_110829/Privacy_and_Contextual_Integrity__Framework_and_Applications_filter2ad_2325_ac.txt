### Tracking Requirements Using the Tableau

Requirements are tracked using a standard PLTL (Propositional Linear Temporal Logic) construction known as the tableau [29]. The tableau of a PLTL formula is constructed by syntactically separating the present and future requirements. Future requirements characterize the sequences of actions that complete a finite trace to a satisfying infinite trace.

**Definition 1: Weak Compliance with Privacy Policy**

Given a finite past history \(\sigma\), an action \(a\) weakly complies with a privacy policy \(\theta\) if \(\sigma \cdot a\) is a path in the tableau of \(\theta\) that starts at an initial \(\theta\)-atom. The future requirements of \(\sigma \cdot a\) are represented by the LTL (Linear Temporal Logic) formula \(\psi\) such that, for all traces \(\sigma_2\), \(\sigma_2 \models \psi\) if and only if \(\sigma \cdot a \cdot \sigma_2 \models \theta\).

Weak compliance ensures that each action taken by agents locally satisfies the privacy policy. However, a weakly compliant action may still result in unsatisfiable future requirements. Weak compliance can be determined (and future requirements computed) using efficient techniques from LTL runtime verification [35].

**Theorem 3:** Weak compliance and future requirements can be computed in polynomial time.

### Strong Compliance

In strong compliance, the information system ensures that agents can actually meet their future requirements while adhering to the policy. Note that previous privacy languages, such as EPAL, can determine only weak compliance because they lack a rich enough model of temporal conditions to determine the satisfiability of future requirements.

**Definition 2: Strong Compliance with Privacy Policy**

Given a finite past history \(\sigma\), an action \(a\) strongly complies with a privacy policy \(\theta\) if there exists a trace \(\sigma_2\) such that \(\sigma \cdot a \cdot \sigma_2 \models \theta\).

**Theorem 4:** Strong compliance can be decided in PSPACE.

The complexity of checking strong compliance is in PSPACE because it involves checking for satisfiability. However, since this algorithm is typically used at each point in a trace (e.g., in a hospital information system), it is natural to ask whether it is possible to reduce the complexity of checking whether each action is compliant by doing more work at the beginning of the execution. If weak compliance for a policy implies strong compliance, an information system need only require weak compliance (which can be computed efficiently) to achieve strong compliance.

**Theorem 5:** Given a privacy policy \(\theta\), it can be decided whether weak compliance for \(\theta\) implies strong compliance in exponential space.

The main idea behind the proof is to construct the automaton for \(\theta\) and check that there is a path from every reachable state to a strongly connected component.

### Expressing Privacy Legislation

In this section, we demonstrate the expressiveness of our formal model of contextual integrity by showing how to represent commonly discussed privacy legislation. Our framework is designed to express both organizational privacy policies and legislation, but we focus on legislation here for concreteness. We can capture most of the privacy notions embedded in the laws we examine, and these laws exercise most of the features of our model. This suggests that CI has roughly the correct level of expressiveness to represent generally accepted notions of privacy.

We consider three pieces of legislation: the Health Insurance Portability and Accountability Act (HIPAA), the Children’s Online Privacy Protection Act (COPPA), and the Gramm–Leach–Bliley Act (GLBA). The distinction between positive and negative norms surfaces in the different approaches taken by these laws. At a high level, HIPAA forbids disclosure of protected health information except in certain enumerated capacities, whereas COPPA and GLBA forbid certain enumerated information flows. Temporal conditions attached to negative norms are common in COPPA and GLBA. The mishandling of negative temporal conditions in other frameworks hampers their ability to capture these privacy laws correctly, whereas CI is able to capture both flavors of policy in a unified logical framework.

#### 5.1 The HIPAA Privacy Rule

The HIPAA Privacy Rule regulates the transmission of "protected health information" (PHI) by covered entities, such as hospitals, doctors, and insurance companies [31]. HIPAA largely forbids the disclosure of health information except to individuals or organizations acting in certain roles. Most of HIPAA's privacy provisions can be expressed directly as positive transmission norms. We present a few representative examples in Figure 2.

- **Norm (2):** Allows a covered entity to communicate PHI about an individual to that individual.
- **Norm (3):** Permits a covered entity to communicate PHI to a healthcare provider involved in the care of the patient.
- **Norm (4):** Prevents a covered entity from disclosing psychotherapy notes to the subject of the notes without prior approval from a psychiatrist.
- **Norm (5):** Allows a covered entity to disclose the general condition and location of an individual within a facility to anyone asking for the individual by name.
- **Norm (6):** Allows members of the clergy to obtain directory information, including the individual’s name, general condition, religious affiliation, and location within the facility.

De-identified Health Information: Most of the HIPAA privacy rule can be expressed using norms of transmission. Some provisions, however, fall outside our model. For example, HIPAA allows covered entities to disclose de-identified health information without regard to the other provisions of the rule. In our formalization of contextual integrity, every attribute is "identified" in virtue of being associated with an agent. An extended model with group attributes (attributes about a set of agents) could potentially capture de-identified attributes.

#### 5.2 Children’s Online Privacy Protection Act (COPPA)

COPPA protects the personal information children communicate to websites [22]. It differs from HIPAA in two ways: COPPA does not contain an enumeration of positive norms, instead containing two negative norms that restrict otherwise permissible flows of information. Additionally, temporal conditions play a central role in COPPA, requiring websites to respond in a certain way to messages from parents when collecting protected information from children.

- **Norm (7):** Requires website operators to obtain parental consent before collecting protected information from children.
- **Norm (8):** Requires website operators to furnish parents with a privacy notice describing their information practices and the specific information collected from the child.

#### 5.3 Gramm–Leach–Bliley Act (GLBA)

The Financial Modernization Act of 1999, commonly referred to as the Gramm–Leach–Bliley Act or GLBA, contains privacy provisions limiting how financial institutions handle non-public personal information (NPI) of their customers and consumers [23]. Broadly, GLBA requires financial institutions to inform their customers of their privacy practices and to allow customers to "opt-out" of certain kinds of information disclosures.

- **Norm (9):** Requires institutions to periodically send privacy notices to customers.
- **Norm (10):** Requires institutions to notify consumers of their privacy practices if they share the consumer’s NPI with non-affiliated companies.
- **Norm (11):** Allows consumers to opt out of the sharing of NPI with non-affiliated companies.
- **Norm (12):** Allows consumers to opt out of some kinds of information sharing between institutions and their affiliates.

Much of the complexity in GLBA revolves around the definition of which companies are affiliates and what constitutes non-public personal information. Our formalization sidesteps these issues by taking the role of affiliate and the attribute NPI to be defined exogenously.

### Comparison with Other Models

In this section, we compare CI with traditional Role-Based Access Control (RBAC), eXtensible Access Control Markup Language (XACML), Enterprise Privacy Authorization Language (EPAL), and the Platform for Privacy Preferences (P3P). CI generalizes these existing models in two key ways:

1. **Temporal Conditions:** CI includes an extensive language for defining temporal conditions, improving the rudimentary future "obligations" of XACML and EPAL.
2. **Handling Negative Norms:** CI correctly handles temporal conditions associated with negative norms (denying rules). Temporal conditions can be attached to denying rules in XACML and EPAL, but the resulting semantics are often unclear.

Our findings are summarized in Figure 5.

#### 6.1 Role-Based Access Control (RBAC)

Role-Based Access Control (e.g., [12]) is an access control model where permissions are assigned to roles, and users are assigned to roles. RBAC is widely used but lacks the expressiveness to handle complex temporal and conditional constraints, which are essential for many privacy policies.