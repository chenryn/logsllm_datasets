n
U
UFT
uuU
UuT
如上表所示，蕴含式在员工性别不是女性（或者无法确定性别）的时
候为真，可以说相比逻辑与约束更加宽松。
在UPDATE语句里进行条件分支
下面思考一下这样一种需求：以某数值型的列的当前值为判断对象，
将其更新成别的值。这里的问题是，此时UPDATE操作的条件会有多个分支。
例如，我们通过下面这样一张公司人事部的员工工资信息表Salaries来看
一下这种情况。
Selanies
saary
相田
300 000
神崎
270 000
木村
220 000
齐幕
290 000
假设现在需要根据以下条件对该表的数据进行更新。
1.对当前工资为30万日元以上的员工，降薪10%。
2.对当前工资为25万日元以上且不满28万日元的员工，加薪20%
按照这些要求更新完的数据应该如下表所示。
---
## Page 24
11CASE表达式—
11 
相田
270 000
降薪
神崎
324 000
加薪
木村
220 000
←不变
齐藤
290 000
←不变
乍一看，分别执行下面两个UPDATE操作好像就可以做到，但这样的
结果却是不正确的。
--条件1
UPDATE Salaries
SET salary = salary * o.9
r00 == 250000 AND salary = 300000
KHEN salary >= 250000 AND salary 等
便利的谓词组合，以及能嵌套子查询的IN和EXISTS谓词。因此，CASE
表达式具有非常强大的表达能力。
如下所示，这里有一张资格培训学校的课程一览表和一张管理每个月
所设课程的表。
---
## Page 27
14
第1章神奇的SOL
■课程一览
■开设的课程
CourseMaster
OpenCourses
urse_id
urse_name
会计入门
200706
财务知识
200706
薄记考试
200706
4
税务师
200707
4
200708
200708
4
我们要用这两张表来生成下面这样的交叉表，以便于一目了然地知道
每个月开设的课程。
course_name
6月
7月
8月
会计入门
中
财务知识
薄记考试
税务师
我们需要做的是，检查表OpenCourses 中的各月里有表CourseMaster
中的哪些课程。这个匹配条件可以用CASE表达式来写。
--表的匹配：使用IN谓词
SEL&cT course_name,
CASE MHEN course_id IN
ISBLECT course_id FROM OpenCourses
WHERE month = 200706} THEN O
BLSE #X* END AS *6 月",
CASE MHEN course_id IN
ISELECT course_id ROM OpenCourses
WHERE month = 200707) THEN +O
BLSg X* END AS *7 月",
CASE MHEN course_id IN
(SBLBCT course_id PROM OpenCourses
MHERE month = 200708} THEN O
BLSE *X ENDAS *8月*
PROM CourseMasterj
--表的匹配：使用 BXISTS 请词
SELBCT CH.couree_nme,
CASE MHEN EXISTS
(SBLBCT course_id FRoM OpenCourses OC
WHERE month = 200706
---
## Page 28
11CASE表达式—
15 
AND OC.course_id = CH.course_id) THEN O1
ELSB *×* END AS *6 月",
CASE XHEN EXISTS
(SBLECT course_id FROM OpenCourses OC
WHERE mcnth = 200707
AND OC.course_id - CM.course_id) THEN *O
ELSB *×′ END AS *7 月",
ISBLECT course_id FROM OpenCourses OC
WHERE mcnth = 200708
AND OC.course_id - CH.course_id) THEN *O
ELSB *×* ENDAS*8月 *
FROM CourseMaster CM;
这样的查询没有进行聚合，因此也不需要排序，月份增加的时候仅修
改SBLECT子句就可以了，扩展性比较好。
无论使用IN还是EXISTS，得到的结果是一样的，但从性能方面来说，
EXISTs 更好。通过EXISTS进行的子查询能够用到“month，course
id”这样的主键索引，因此尤其是当表OpenCourses里数据比较多的时候
更有优势。
在CASE表达式中使用聚合函数
接下来介绍一下稍微高级的用法。这个用法乍一看可能让人觉得像是
语法错误，实际上却并非如此。我们来看一道例题，假设这里有一张显示
了学生及其加入的社团的一览表。如表StudentClub所示，这张表的主键
是“学号、社团ID”，存储了学生和社团之间多对多的关系。
StudentClub
sd id[学号)cub_id [杜图ID]
dp_name (社国名)main_cub_Ig(主社国标志)
100
1
棒球
100
Y
2
管弦乐
N
200
2
管弦乐
N
200
3
羽毛球
200
X
足球
 N
300
足球
N
400
6o
游泳
N
500
围棋
N
---
## Page 29
●16
S享
有的学生同时加入了多个社团（如学号为100、200的学生），有的学
生只加入了某一个社团（如学号为300、400、500的学生）。对于加入了
多个社团的学生，我们通过将其“主社团标志”列设置为Y或者N来表
社团标志”列设置为N。
接下来，我们按照下面的条件查询这张表里的数据。
1.获取只加入了一个社团的学生的社团ID。
2.获取加入了多个社团的学生的主社团ID。
很容易想到的办法是，针对两个条件分别写SQL语句来查询。要想
知道学生“是否加入了多个社团”，我们需要用HAVING子句对聚合结果
进行判断。
■条件1的SQL