首部：
Accept-Language: en;q=0.5, fr;q=0.0, nl;q=1.0, tr;q=0.0
其中q值的范围从0.0～1.0（0.0是优先级最低的，而1.0是优先级最高的）。上面
列出的那个首部，说明该客户端最愿意接收荷兰语（缩写为nl）文档，但英语（缩
写为en）文档也行；无论如何，这个客户端都不愿意收到法语（缩写为fr）或土耳
其语（缩写为tr）的版本。注意，偏好的排列顺序并不重要，只有与偏好相关的q
值才是重要的。
服务器偶尔也会碰到找不到文档可以匹配客户端的任何偏好的情况。对于这种情况，
服务器可以修改文档，也就是对文档进行转码，以匹配客户端的偏好。我们将在本
章后面讨论这种机制。 398
17.3.3 随其他首部集而变化
服务器也可以根据其他客户端请求首部集来匹配响应，比如User-Agent首部。例
如，服务器知道老版本的浏览器不支持JavaScript语言，这样就可以向其发送不含
有JavaScript的页面版本。
在这种情况下，没有q值机制可供查找“最近似”的匹配。服务器或者去找完全匹
配，或者简单地有什么就给什么，这取决于服务器的实现。
由于缓存需要尽力提供所缓存文档中正确的“最佳”版本，HTTP协议定义了服务器
在响应中发送的Vary首部。这个首部告知缓存（还有客户端和所有下游的代理）服
务器根据哪些首部来决定发送响应的最佳版本。本章后面会更详细地讨论Vary首部。
17.3.4 Apache中的内容协商
这里概括了著名的Web服务器Apache是如何支持内容协商的。网站的内容提供者，
内容协商与转码 ｜ 417
比如说Joe，要负责为Joe的索引页面提供不同的版本。Joe还必须把这些索引页面
文件放在和站点相关的Apache服务器的适当目录下。用以下两种方式可以启用内
容协商。
• 在网站目录中，为网站中每个有变体的URI 创建一个type-map（类型映射）文件。
这个type-map文件列出了每个变体和其相关的内容协商首部集。
• 启用MultiViews指令，这样会使Apache自动为目录创建type-map文件。
1. 使用type-map文件
Apache服务器需要知道type-map文件的命名规则。可以在服务器的配置文件中设
置handler来说明type-map文件的后缀名。例如：
AddHandler type-map .var
这行就说明了后缀是.var的文件就是type-map文件。
399 这里给出一个type-map文件示例：
URI: joes-hardware.html
URI: joes-hardware.en.html
Content-type: text/html
Content-language: en
URI: joes-hardware.fr.de.html
Content-type: text/html;charset=iso-8859-2
Content-language: fr, de
根据这个type-map文件，Apache服务器就知道要发送joes-hardware.en.html给请求
英语版的客户端，发送joes-hardware.fr.de.html给请求法语版的客户端。Apache服
务器也支持质量值，具体信息请参阅它的文档。
2. 使用MultiView
为了使用MultiView，必须在网站目录下的access.conf文件中的适当小节（、
，或）使用OPTION指令来启用它。
如果启用了MultiView，而浏览器又请求了名为joes-hardware的资源，服务器就会
查找所有名字中含有joes-hardware的文件，并为它们创建type-map文件。服务器会
根据名字猜测其对应的内容协商首部集。例如，法语版的joes-hardware应当含有.fr。
17.3.5 服务器端扩展
另一种在服务器端实现内容协商的方法是使用服务器端扩展，比如微软的动态服务
418 ｜ 第17章
器页面（Microsoft's Active Server Pages，ASP)。参见第8章中关于服务器端扩展的
综述。
17.4 透明协商
透明协商机制试图从服务器上去除服务器驱动协商所需的负载，并用中间代理来代
表客户端以使与客户端的报文交换最小化。假定代理了解客户端的预期，这样就可
以代表客户端与服务器协商（在客户端请求内容的时候，代理已经收到了客户端的
预期）。为了支持透明内容协商，服务器必须有能力告知代理，服务器需要检查哪些
请求首部，以便对客户端的请求进行最佳匹配。HTTP/1.1规范中没有定义任何透明
协商机制，但定义了Vary首部。服务器在响应中发送了Vary首部，以告知中间节
点需要使用哪些请求首部进行内容协商。
代理缓存可以为通过单个URL访问的文档保存不同的副本。如果服务器把它们的决
策过程传给缓存，这些代理就能代表服务器与客户端进行协商。缓存同时也是进行
内容转码的好地方，因为部署在缓存里的通用转码器能对任意服务器，而不仅仅是
一台服务器传来的内容进行转码。图17-3中展示了缓存对内容进行转码的情况，本
章后面会更详细地探讨。 400
17.4.1 进行缓存与备用候选
对内容进行缓存的时候是假设内容以后还可以重用。然而，为了确保对客户端请求
回送的是正确的已缓存响应，缓存必须应用服务器在回送响应时所用到的大部分决
策逻辑。
前一节描述了客户端发送的Accept首部集，以及为了给每条请求选择最佳的响应，
服务器使用的与这些首部集匹配的相应实体首部集。缓存也必须使用相同的首部集
来决定回送哪个已缓存的响应。
图17-1展示了涉及缓存的正确及错误的操作序列。缓存把第一个请求转发给服务
器，并存储其响应。对于第二个请求，缓存根据URL查找到了匹配的文档。但是，
这份文档是法语版的，而请求者想要的是西班牙语版的。如果缓存只是把文档的法
语版本发给请求者的话，它就犯了错误。
因此，缓存也应该把第二条请求转发给服务器，并保存该URL的响应与“备用候
选”响应。缓存现在就保存了同一个URL的两份不同的文档，与服务器上一样。这 401
些不同的版本称为变体（variant）或备用候选（alternate）。内容协商可看成是为客
户端请求选择最合适变体的过程。
内容协商与转码 ｜ 419
GET / HTTP/1.1
Host: www.joes-hardware.com Hi! Welcome to
User-agent: spiffy multimedia browser Joe's Hardware
Accept-language: fr;q=1.0 Store.
Hola! Bienvenido
a Joe's Hardware
Store.
Bonjour
法语用户 Web服务器 Bonjour!
Bienvenue a Joe's
Hardware Store
缓存
GET / HTTP/1.1
Host: www.joes-hardware.com
User-agent: spiffy multimedia browser
Accept-language: es;q=1.0
Hola! Bienvenido
a Joe's Hardware
Bonjour Store.
西班牙语用户 Web服务器
Bienvenido
缓存
图17-1 缓存根据内容协商首部发送给客户端正确的响应
17.4.2 Vary首部
这里是浏览器和服务器发送的一些典型的请求及响应首部：
GET http://www.joes-hardware.com/ HTTP/1.0
Proxy-Connection: Keep-Alive
User-Agent: Mozilla/4.73 [en] (WinNT; U)
Host: www.joes-hardware.com
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/
png, */*
Accept-Encoding: gzip
Accept-Language: en, pdf
Accept-Charset: iso-8859-1, *, utf-8
HTTP/1.1 200 OK
Date: Sun, 10 Dec 2000 22:13:40 GMT
Server: Apache/1.3.12 OpenSSL/0.9.5a (Unix) FrontPage/4.0.4.3
Last-Modified: Fri, 05 May 2000 04:42:52 GMT
Etag: "1b7ddf-48-3912514c"
Accept-Ranges: Bytes
Content-Length: 72
Connection: close
Content-Type: text/html
420 ｜ 第17章
然而，如果服务器的决策不是依据Accept首部集，而是比如User-Agent首部的
话，情况会如何？这不像听起来这么极端。例如，服务器可能知道老版本的浏览器
不支持JavaScript语言，因此可能会回送不包含JavaScript的页面版本。如果服务
器是根据其他首部来决定发送哪个页面的话，缓存必须知道这些首部是什么，这样
才能在选择回送的页面时做出同样的逻辑判断。
HTTP的Vary响应首部中列出了所有客户端请求首部，服务器可用这些首部来选择
文档或产生定制的内容（在常规的内容协商首部集之外的内容）。例如，若所提供的
文档取决于User-Agent首部，Vary首部就必须包含User-Agent。
当新的请求到达时，缓存会根据内容协商首部集来寻找最佳匹配。但在把文档提供
给客户端之前，它必须检查服务器有没有在已缓存响应中发送Vary首部。如果有
Vary首部，那么新请求中那些首部的值必须与旧的已缓存请求里相应的首部相同。
因为服务器可能会根据客户端请求的首部来改变响应，为了实现透明协商，缓存必
须为每个已缓存变体保存客户端请求首部和相应的服务器响应首部，参见图17-2。 402
GET / HTTP/1.1 我需要给她发送一份法语
Host: www.joes-hardware.com 版的文档。她的浏览器很
User-agent: spiffy multimedia browser 时髦，所以我要发送这个
Accept-language: fr;q=1.0 页面的富媒体版本给她。
Bonjour
HTTP/1.1 200 OK
法语用户1 C Vo an rt ye :n t U- sl ea rn -g au ga eg ne t: fr Web服务器
Bonjour
缓存 [...media-rich content]
GET / HTTP/1.1 他要该文档的法语版，我的缓存里
Host: www.joes-hardware.com 有，但我不应该发给他这个版本。
User-agent: wimpy wireless device 服务器说我的这个版本是给高性能
Accept-language: fr;q=1.0 的浏览器用的，而这个用户用的却
是低性能的无线浏览器。我最好向
服务器要一份为无线浏览器定制的
法语版本。
Bonjour
HTTP/1.1 200 OK
Content-language: fr
法语用户2 Bonjour Vary: User-agent Web服务器
Bonjour
缓存 [...simple text content]
图17-2 如果服务器根据特定的请求首部集来选择变体，缓存必须在发送回缓存的响应之前，
检查常规的内容协商首部集和这些请求首部
内容协商与转码 ｜ 421
如果某服务器的Vary首部看起来像下面这样，大量不同的User-Agent和Cookie
值将会产生非常多的变体：
Vary: User-Agent, Cookie
缓存必须为每个变体保存其相应的文档版本。当缓存执行查找时，首先会对内容协
商首部集进行内容匹配，然后比较请求的变体与缓存的变体。如果无法匹配，缓存
就从原始服务器获取文档。
17.5 转码
我们已经讨论了一个机制，该机制可以让客户端和服务器从某个URL的一系列文档
403 中挑选出最适合客户端的文档。实现这些机制的前提是，存在一些满足客户端需求
的文档——不管是完全满足还是在一定程度上满足。
然而，如果服务器没有能满足客户端需求的文档会怎么样呢？服务器可以给出一个
错误响应。但理论上，服务器可以把现存的文档转换成某种客户端可用的文档。这
种选项称为转码。
表17-4列出了一些假设的转码。
表17-4 假设的转码
转换之前 转换之后
HTML文档 WML文档
高分辨率图像 低分辨率图像
彩色图像 黑白图像
有多个框架的复杂页面 没有很多框架或图像的简单文本页面
有Java小应用程序的HTML页面 没有Java小应用程序的HTML页面
有广告的页面 去除广告的页面
有3种类别的转码：格式转换、信息综合以及内容注入。
17.5.1 格式转换
格式转换是指将数据从一种格式转换成另一种格式，使之可以被客户端查看。通过
HTML到WML的转换，无线设备就可以访问通常供桌面客户端查看的文档了。通
过慢速连接访问Web页面的客户端并不需要接收高分辨率图像，如果通过格式转换
降低图像分辨率和颜色来减小图像文件大小的话，这类客户端就能更容易地查看图
像比较丰富的页面了。
422 ｜ 第17章
格式转换可以由表17-2中列出的内容协商首部集来驱动，但也能由User-Agent首
部来驱动。注意，内容转换或转码与内容编码或传输编码是不同的，后两者一般用
于更高效或安全地传输内容，而前两者则可使访问设备能够查看内容。
17.5.2 信息综合
从文档中提取关键的信息片段称为信息综合（information synthesis），这是一种有用
的转码操作。这种操作的例子包括根据小节标题生成文档的大纲，或者从页面中删
除广告和商标。 404
根据内容中的关键字对页面分类是更精细的技术，有助于总结文档的精髓。这种技
术常用于Web页面分类系统中，比如门户网站的Web页面目录。