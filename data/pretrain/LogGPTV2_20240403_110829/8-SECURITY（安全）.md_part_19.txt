浏览器访问Zabbix_server服务器的Web页面
\[root@zabbixserver \~\]# firefox http://192.168.2.5/index.php
//第一次访问，初始化PHP页面会检查计算机环境是否满足要求，如果不满足会给出修改建议
//默认会提示PHP的配置不满足环境要求，需要修改PHP配置文件
根据错误提示，修改PHP配置文件，满足Zabbix_server的Web环境要求
php-bcmath和php-mbstring都在lnmp_soft目录下有提供软件包。
\[root@zabbixserver \~\]# yum -y install php-gd php-xml
\[root@zabbixserver \~\]# yum install
php-bcmath-5.4.16-42.el7.x86_64.rpm
\[root@zabbixserver \~\]# yum install
php-mbstring-5.4.16-42.el7.x86_64.rpm
\[root@zabbixserver \~\]# vim /etc/php.ini
date.timezone = Asia/Shanghai //设置时区
max_execution_time = 300 //最大执行时间，秒
post_max_size = 32M //POST数据最大容量
max_input_time = 300 //服务器接收数据的时间限制
memory_limit = 128M //内存容量限制
\[root@zabbixserver \~\]# systemctl restart php-fpm
修改完PHP配置文件后，再次使用浏览器访问服务器，则会提示如图-1和图-2所示的提示信息。
图-1
图-2
注意：这里有一个PHP LDAP是warning状态是没有问题的！
在初始化数据库页面，填写数据库相关参数，如图-3所示。
图-3
在登陆页面，使用用户(admin)和密码(zabbix)登陆，登陆后设置语言环境为中文，如图-4和图-5所示。
图-4
图-5
步骤三：部署被监控主机Zabbix Agent
1）源码安装Zabbix agent软件
在2.100和2.200做相同操作（以zabbixclient_web1为例）。
\[root@zabbixclient_web1 \~\]# useradd -s /sbin/nologin zabbix
\[root@zabbixclient_web1 \~\]# yum -y install gcc pcre-devel
\[root@zabbixclient_web1 \~\]# tar -xf zabbix-3.4.4.tar.gz
\[root@zabbixclient_web1 \~\]# cd zabbix-3.4.4/
\[root@zabbixclient_web1 zabbix-3.4.4\]# ./configure \--enable-agent
\[root@zabbixclient_web1 zabbix-3.4.4\]# make && make install
2）修改agent配置文件，启动Agent
\[root@zabbixclient_web1 \~\]# vim /usr/local/etc/zabbix_agentd.conf
Server=127.0.0.1,192.168.2.5 //谁可以监控本机（被动监控模式）
ServerActive=127.0.0.1,192.168.2.5 //谁可以监控本机（主动监控模式）
Hostname=zabbixclient_web1 //被监控端自己的主机名
EnableRemoteCommands=1
//监控异常后，是否允许服务器远程过来执行命令，如重启某个服务
UnsafeUserParameters=1 //是否允许自定义key监控
\[root@zabbixclient_web1 \~\]# zabbix_agentd //启动agent服务
3）拷贝启动脚本（非必须操作，可选做），有启动脚本可以方便管理服务，启动与关闭服务。启动脚本位于zabbix源码目录下。
\[root@zabbixclient_web1 zabbix-3.4.4\]# cd misc/init.d/fedora/core
\[root@zabbixclient_web1 zabbix-3.4.4\]# cp zabbix_agentd /etc/init.d/
\[root@zabbixclient_web1 zabbix-3.4.4\]# /etc/init.d/zabbix_agentd start
\[root@zabbixclient_web1 zabbix-3.4.4\]# /etc/init.d/zabbix_agentd stop
\[root@zabbixclient_web1 zabbix-3.4.4\]# /etc/init.d/zabbix_agentd
status
\[root@zabbixclient_web1 zabbix-3.4.4\]# /etc/init.d/zabbix_agentd
restart
3 案例3：配置及使用Zabbix监控系统
3.1 问题
沿用练习一，使用Zabbix监控平台监控Linux服务器，实现以下目标：
监控CPU
监控内存
监控进程
监控网络流量
监控硬盘
3.2 方案
通过Zabbix监控平台，添加被监控zabbixclient_web1主机（192.168.2.100）并链接监控模板即可，Zabbix默认模板就可以监控CPU、内存、进程、网络、磁盘等项目。
3.3 步骤
实现此案例需要按照如下步骤进行。
步骤一：添加监控主机
主机是Zabbix监控的基础，Zabbix所有监控都是基于Host主机。
使用火狐浏览器登录http://192.168.2.5，通过Configuration（配置）\--\>Hosts（主机）\--\>Create
Host（创建主机）添加被监控Linux主机，如图-7所示。
图-7
添加被监控主机时，需要根据提示输入被监控Linux主机的主机名称（最好与电脑的主机名一致，但也允许不一致）、主机组、IP地址等参数，具体参考图-8所示。
图-8
步骤二：为被监控主机添加监控模板
Zabbix通过监控模板来对监控对象实施具体的监控功能，根据模板来定义需要监控哪些数据，对于Linux服务器的监控，Zabbix已经内置了相关的模板（Template
OS Linux），选择模板并链接到主机即可，如图-9所示。
图-9
步骤三：查看监控数据
查看监控数据，登录Zabbix Web控制台，点击Monitoring(监控中)---\> Latest
data(最新数据)，正过滤器中填写过滤条件，根据监控组和监控主机选择需要查看哪些监控数据，如图-10所示。
图-10
找到需要监控的数据后，可以点击后面的Graph查看监控图形，如图-11所示。
图-11
4 案例4：自定义Zabbix监控项目
4.1 问题
沿用练习二，使用Zabbix实现自定义监控，实现以下目标：监控Linux服务器系统账户的数量。
4.2 方案
需要使用Zabbix自定义key的方式实现自定义监控，参考如下操作步骤：
创建自定义key
创建监控项目
创建监控图形
将监控模板关联到主机
4.3 步骤
实现此案例需要按照如下步骤进行。
步骤一：被监控主机创建自定义key（在192.168.2.100操作）
1）创建自定义key
自定义key语法格式为：UserParameter=自定义key名称,命令。
自定义的key文件一般存储在/usr/local/etc/zabbix_agentd.conf.d/目录，这里还需要修改zabbix_agentd.conf文件，允许自定义监控key，来读取该目录下的所有文件
。
\[root@zabbixclient_web1 \~\]# vim /usr/local/etc/zabbix_agentd.conf
Include=/usr/local/etc/zabbix_agentd.conf.d/ //加载配置文件目录
\[root@zabbixclient_web1 \~\]# cd /usr/local/etc/zabbix_agentd.conf.d/
\[root@zabbixclient_web1 zabbix_agentd.conf.d\]# vim count.line.passwd
UserParameter=count.line.passwd,wc -l /etc/passwd \| awk \' {print \$1}
\'
////自定义key语法格式:
//UserParameter=自定义key名称,命令
2）测试自定义key是否正常工作
\[root@zabbixclient_web1 \~\]# killall zabbix_agentd
\[root@zabbixclient_web1 \~\]# zabbix_agentd //重启agent服务
\[root@zabbixclient_web1 \~\]# zabbix_get -s 127.0.0.1 -k
count.line.passwd
21
注意：如zabbix_get命令执行错误，提示Check access restrictions in Zabbix
agent configuration，则需要检查agent配置文件是否正确：
\[root@zabbixclient_web1 \~\]# vim /usr/local/etc/zabbix_agentd.conf
Server=127.0.0.1,192.168.2.5
ServerActive=127.0.0.1,192.168.2.5
步骤二：创建监控模板
模板、应用集与监控项目的关系图，参考图-12所示
![image011](media/image34.png){width="4.300694444444445in"
height="1.975in"}
图-12
1）添加监控模板
登录Zabbix
Web监控控制台，通过Configuration(配置)\--\>Template(模板)\--\>Create
template(创建模板)，填写模板名称，新建模板群组，如图-13所示。
![image012](media/image35.png){width="2.191666666666667in"
height="2.716666666666667in"}
图-13
创建模板后，默认模板中没有任何应用、项目、触发器、图形等，如图-14所示。
![image013](media/image36.png){width="4.617361111111111in"
height="0.6166666666666667in"}
图-14
2）创建应用
创建完成模板后，默认模板中没有任何应用、项目、触发器、图形等资源。这里需要点击模板后面的Application（应用集）链接打开创建应用的页面，如图-15所示。
![image014](media/image37.png){width="3.6666666666666665in"
height="0.35833333333333334in"}
图-15
点击Application（应用集）后，会刷新出图-16所示页面，在该页面中点击Create
application（创建应用集）按钮。
![image015](media/image38.png){width="1.0583333333333333in"
height="0.49166666666666664in"}
图-16
设置应用名称如图-17所示。
![image016](media/image39.png){width="3.558333333333333in"
height="1.275in"}
图-17
3）创建监控项目item（监控项）
与创建应用一样，在模板中还需要创建监控项目，如图-18所示，并在刷新出的新页面中选择Create
items（创建监控项）创建项目，如图-19所示。
![image017](media/image40.png){width="4.534027777777778in"
height="0.65in"}
图-18
![image018](media/image41.png){width="0.9416666666666667in"
height="0.5083333333333333in"}
图-19
接下来，还需要给项目设置名称及对应的自定义key，如图-20所示。
![image019](media/image42.png){width="4.617361111111111in"
height="1.4583333333333333in"}
图-20
4）创建图形
为了后期可以通过图形的方式展示监控数据，还需要在模板中创建图形，设置方法与前面的步骤一致，在监控模板后面点击Graph（图形）即可创建图形，设置监控图形基于什么监控数据，如图-21所示。
![image020](media/image43.png){width="3.7in"
height="1.4833333333333334in"}
图-21
5）将模板链接到被监控主机
将完整的监控模板制作完成后，就可以将模板链接到主机实现监控功能了。首先找到被监控主机Configuration（配置）\--\>Hosts（主机），如图-22所示。
![image021](media/image44.png){width="2.433333333333333in"
height="2.55in"}
图-22
点击需要的被监控主机链接，打开监控主机设置页面，在Template（模板）页面中选择需要链接到该主机的模板，在此选择刚刚创建的模板count_line.passwd添加即可，如图-23所示。
![image022](media/image45.png){width="3.875in"
height="2.2416666666666667in"}
图-23
6）查看监控数据图形
点击Monitoring（监控中）\--\>Craphs（图形），根据需要选择条件，查看监控图形，如图-24和图-25所示。
![image023](media/image46.png){width="2.9916666666666667in"
height="0.7083333333333334in"}
图-24
![image024](media/image47.png){width="4.617361111111111in"
height="2.3916666666666666in"}
图-25
# NSD SECURITY DAY05
## 查看Linux系统状态的常用命令
查看内存信息:free free\| awk '/Mem/{print \$4} 查看剩余内存容量'
查看交换分区信息:swapon -s
查看磁盘信息:df df \| awk \'/\\/\$/{print \$5}\' //查看根分区的利用率
查看磁盘状态信息:iostat
查看CPU信息:uptime //查看CPU负载（1，5，15分钟）
uptime \|awk \'{print \$NF}\' //仅查看CPU的15分钟平均负载
查看网卡信息
ifconfig eth0
ifconfig eth0 \|awk \'/inet /{print \$2}\' //查看IP地址信息
ifconfig eth0 \|awk \'/RX p/{print \$5}\' //网卡接受数据包流量
ifconfig eth0 \|awk \'/TX p/{print \$5}\' //网卡发送数据包流量
查看端口信息
ss -ntulp //查看本机监听的所有端口
查看网络连接信息
ss -antup //查看所有的网络连接信息
查看路由追踪: traceroute www.baidu.com
查看进程: ps
-A ：所有的进程均显示出来，与 -e 具有同样的效用；
-a ： 显示现行终端机下的所有进程，包括其他用户的进程；
-u ：以用户为主的进程状态 ；
x ：通常与 a 这个参数一起使用，可列出较完整信息。
查看系统运行时间:uptime
## awk基本操作方法
格式一: 前置命令 \| awk \[选项\] \'\[条件\]{指令}\' 文件
格式二：awk \[选项\] \'\[条件\]{指令}\' 文件
选项 -F 可指定分隔符,不指定，默认为空格（包括tab）
print：是最常用的编辑指令，若有多条编辑指令，可用分号分隔。
**awk 常用内置变量:**
\$0 文本当前行的全部内容 \$1 文本的第1列
\$2 文件的第2列 \$3 文件的第3列，依此类推
NR 文件当前行的行号 NF 文件当前行的列数（有几列）
# 1 监控概述
## 监控的目的
![LINUXNSD_V01SECURITYDAY05_005](media/image17.png){width="5.760416666666667in"
height="2.607638888888889in"}
## 监控的资源类别
公开数据:web ftp ssh 数据库等应用服务 tcp或udp 端口
私有数据:cpu 内存 磁盘 网卡 用户 进程等运行信息
## 常见自动化监控系统
![LINUXNSD_V01SECURITYDAY05_009](media/image18.png){width="5.760416666666667in"
height="2.8430555555555554in"}
当前互联网监控软件大约有300多中,
# 2 Zabbix基础
![LINUXNSD_V01SECURITYDAY05_013](media/image19.png){width="5.760416666666667in"
height="2.161111111111111in"}
## 1 安装LNMP环境
15 yum -y install gcc pcre-devel openssl-devel
18 tar -xf lnmp_soft.tar.gz #需要单独传
24 tar -xf nginx-1.12.2.tar.gz #需要单独传
26 cd nginx-1.12.2/
28 ./configure \--with-http_ssl_module
29 make && make install
30 ls /usr/local/nginx/
33 cd lnmp_soft/