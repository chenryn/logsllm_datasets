### Factors Increasing the Risk of Misbinding Attacks in Out-of-Band Authentication

One significant factor that elevates the risk of misbinding attacks against out-of-band authentication is the ease with which such attacks can be implemented. A compromised device needs only to forward authentication messages at the user-interface level, a process far simpler than relaying communication at the radio or logical link layer, or forwarding application-level messages. This simplicity makes misbinding an attractive option for less technically skilled attackers.

In our attack implementations against Bluetooth or EAP-NOOB, compromising device B involved simply installing a malicious app that emulates the pairing user interface under the attacker’s control.

### The Role of User and Insider Involvement

Misbinding attacks rely on the user attempting to pair or register a compromised device B. This necessitates the involvement of a (partially) corrupt insider. The user is misled into trusting the compromised device, leading to a bad decision. Some protocol designers might dismiss this as outside their threat model. However, two counterarguments arise: first, the honest device C also suffers because it is not the one that ends up being paired; second, the Internet of Things (IoT) will likely be rife with corrupt insiders, much like the traditional Internet. It is essential to protect users from their own mistakes whenever possible.

### Prior Relations and Misbinding

All misbinding scenarios require some prior relationship between the endpoints, leading to a failure in the correspondence between that prior relation and the newly established connection. In pairing and bootstrapping, there often is no common history, or the history is insignificant because the endpoints have no secure way to confirm they are reconnecting to the same peer. This may explain why the practical impact of misbinding on IoT devices remains somewhat elusive.

### Comparing Misbinding to Alternative Attacks

To understand the unique aspects of misbinding, consider an alternative attack where the attacker in device B accepts the connection from A, establishes another connection to C, and then forwards the application-layer messages between A and C. The key difference is that a misbinding attacker can remove themselves from the communication chain after the pairing, making the continuation of the attack independent of the compromised device B being online or within radio range. Furthermore, the user has physical control over the compromised device B but not C. If the user disables device B, the connection between A and C persists, unknown to the user.

### Historical Context and Current Consensus

Since the design of STS and IKE, security protocol designers have agreed that misbinding vulnerabilities are unacceptable in authenticated key-exchange protocols for computer networks and the Internet. In device pairing, however, there is no similar consensus, and the attack has been largely ignored, except by the trusted-computing community. While this paper does not aim to discourage the use of protocols like Bluetooth SSP, it highlights that misbinding attacks, though relatively marginal, should not be ignored due to their widespread applicability to device-pairing and IoT bootstrapping protocols. Protocol and system designers must understand the misbinding vulnerability, remain vigilant for unexpected consequences, and make balanced judgments about additional countermeasures.

### Practical Impact of Misbinding

The practical impact of misbinding attacks is challenging to grasp. Two example scenarios illustrate this:

1. **Banking Scenario**: A connects to bank C over a supposedly secure session to deposit an electronic coin. Due to a misbinding attack, bank C believes the coin was deposited by B.
2. **Military Scenario**: B and C are fighter jets, and A is their commander. B is compromised by the enemy. When A tells B to self-destruct, the command goes to C instead.

While the banking scenario may not have obvious equivalents in the world of physical devices, the military scenario can be adapted to an IoT context:
- **IoT Scenario**: B and C are IoT devices, and A is the user’s computer. B is infected by malware. The user wants to connect A to B and wipe B’s memory. Because B mounts a misbinding attack, the user wipes C instead.

### Conclusion

We studied identity-misbinding (or unknown-key-share) attacks in device pairing protocols where devices are identified by physical access rather than cryptographic credentials. We demonstrated that Bluetooth and similar protocols are vulnerable to these attacks, regardless of their cryptographic details. The same vulnerability exists in protocols for security-bootstrapping IoT devices. We confirmed the attacks through implementation and formal modeling, leading to the discovery of a new attack variant, double misbinding. We also discussed potential mitigation mechanisms, advocating for solutions based on asset tracking. While the vulnerability does not render existing device pairing protocols completely insecure, it is a threat that needs to be fully understood, and this paper is a step towards that goal.

### Acknowledgments

We would like to thank Eric Rescorla for his inspiring comments on EAP-NOOB and Kaisa Nyberg for insightful discussions on Bluetooth SSP. This work was supported by the Academy of Finland (grant number 296693).

### References

[References listed here, formatted and cited appropriately]