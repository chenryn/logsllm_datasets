One factor that increases the risk of misbinding attacks against
out-of-band authentication is that they are easy to implement. The
compromised device only needs to forward authentication messages
on the user-interface level. Compare this to relaying communication
at the radio or logical link layer, or to forwarding application mes-
sages. This makes misbinding an attractive attack for technically
less competent attackers. In our attack implementations against
Bluetooth or EAP-NOOB, the compromise of device B meant simply
installing a malicious app that emulated the pairing user interface
at the attacker’s command.
Misbinding depends on the user trying to pair with or register a
device B that is compromised. Thus, there must be a (partially) cor-
rupt insider involved. The user is misled because the user makes a
bad decision and trusts the corrupt device. Some protocol designers
might dismiss the problem at this point, thinking that it is outside
their threat model. One counterargument is that the corrupt device
is not the one that ends up being paired, and thus the honest device
C also suffers. Another is that the Internet of Things will be full
of corrupt insiders, just like the regular Internet. Also, we should
protect the users from their own mistakes whenever possible.
Note that all these scenarios require some prior relation between
the endpoints, and the misbinding attack leads to a failure of corre-
spondence between that prior relation and the newly established
connection. In pairing and bootstrapping, there often is no such
common history. Either one of the endpoints is a new, fresh device,
or the history is not significant because the endpoints have no se-
cure way of knowing that they have reconnected to the same peer.
This may be one reason why the practical impact of misbinding for
IoT devices remains somewhat elusive.
We also need to compare misbinding to alternative attacks. In
Figure 2(b), the attacker in device B can achieve almost the same
results by accepting the connection from A, establishing another
connection to C, and then forwarding the application-layer mes-
sages between A and C. The main difference between misbinding
and such relaying of communication is that the misbinding attacker
can remove itself from the communication chain after the pairing.
Thus, the continuation of the attack does not depend on the com-
promised device B being online or within radio range. Furthermore,
the user is in physical control of the compromised device B but
not of C. If the user disables device B, e.g. by disconnecting it from
the network or even by physically destroying it, device C and is
connection with A will nevertheless persists — unknown to the
user.
Since the design of STS and IKE, there has been consensus among
security protocol designers that misbinding vulnerabilities are not
acceptable in authenticated key-exchange protocols for computer
networks and for the Internet. In device pairing, there is no similar
consensus, and the attack has been mostly ignored with the excep-
tion of the trusted-computing community. We do not expect this
paper to stop people from using protocols like Bluetooth SSP. The
misbinding attacks and impact scenarios are relatively marginal
compared to the advantage of encrypting wireless communication
and having basic authentication in place, and the value of these
is not nullified by misbinding. The attacks should, however, not
be ignored because they are so widely applicable to device-pairing
and IoT bootstrapping protocols. Our message is that protocol and
system designers should understand the misbinding vulnerability
for physical devices, keep eyes open for unexpected consequences
in new situations, and make a balanced judgment about whether
additional countermeasures are needed.
The practical impact of misbinding attacks is somewhat difficult
to grasp. It has been demonstrated with the help of two example
scenarios, one presented by Diffie et al. in the original STS paper
and the other by Krawczyk in a lecture:
• A connects to bank C, over a supposedly secure session, to
deposit an electronic coin. Since B mounted a misbinding
attack, bank C thinks the coin was deposited by B.
• B and C are fighter jets, and A is their commander. B has
been compromised by the enemy. A tells B to self-destruct,
but because B mounted a misbinding attack, the command
goes to C.
The banking scenario does not seem to have obvious equivalents
in the world of physical devices. The fighter jets, on the other hand,
are devices, and we can construct a related IoT example:
• B and C are IoT devices, and A is the user’s computer. B has
been infected by malware. User wants to connect A to B and
wipe B’s memory. Because B mounts a misbinding attack,
the user wipes C instead.
7 CONCLUSION
We studied identity-misbinding (or unknown-key-share) attacks in
device pairing protocols where the devices are identified by physi-
cal access rather than cryptographic credentials. We showed that
Bluetooth and other similar device-pairing protocols are vulnerable
to this attack regardless of their cryptographic details. The same
vulnerability also exists in protocols for security-bootstrapping IoT
devices. We confirmed the attacks by implementing them. Formal
modelling allowed us to discuss the precise definition of misbinding,
which led to the discovery of a new attack variant, double misbind-
ing. We also discussed potential mitigation mechanisms, arguing in
favor of solutions based on asset tracking. While the vulnerability
to identity misbinding does not make the existing device pairing
protocols completely insecure, it is a threat that needs to be fully
Session 6A: IoT SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand463understood also in device pairing, and this paper is a step towards
that goal.
8 ACKNOWLEDGMENTS
We would like to thank Eric Rescorla for his inspiring comments
on EAP-NOOB and Kaisa Nyberg for insightful discussion on Blue-
tooth SSP. This work was supported by Academy of Finland (grant
number 296693).
REFERENCES
[1] ISO/IEC 11889-1:2015. 2015. Information technology – Trusted platform module
library – Part 1: Architecture. Standard. International Organization for Standard-
ization.
[2] Martin Abadi and Roger Needham. 1996. Prudent Engineering Practice for
Cryptographic Protocols. Transactions on Software Engineering 22, 1 (1996), 6–15.
[3] Bernard Aboba, Larry J. Blunk, John R. Vollbrecht, James Carlson, and Henrik
Levkowetz. 2004. Extensible Authentication Protocol (EAP). http://tools.ietf.org/
rfc/rfc3748.txt. RFC 3748.
ZigBee Alliance.
nical Report. Wi-Fi Alliance.
nical Report. Wi-Fi Alliance.
[4] Wi-Fi Alliance. 2016. Wi-Fi Peer-to-Peer (P2P) Technical Specification, v. 1.7. Tech-
[5] Wi-Fi Alliance. 2018. Device Provisioning Protocol Specification Version 1.0. Tech-
[6] ZigBee Alliance. 2012. ZigBee Specification. ZigBee Alliance Document 053474r20.
[7] Alessandro Armando, David Basin, Yohan Boichut, Yannick Chevalier, Luca
Compagna, Jorge Cuéllar, P. Hankes Drielsma, Pierre-Cyrille Héam, Olga
Kouchnarenko, Jacopo Mantovani, et al. 2005. The AVISPA Tool for the Auto-
mated Validation of Internet Security Protocols and Applications. In Proceedings
of the International conference on computer aided verification. Springer Berlin
Heidelberg, Berlin, Heidelberg, 281–285.
[8] Tuomas Aura and Mohit Sethi. 2019. Nimble out-of-band authentication for EAP
(EAP-NOOB). Internet-Draft draft-aura-eap-noob-05. Internet Engineering Task
Force.
[9] Simon Blake-Wilson and Alfred Menezes. 1999. Unknown Key-Share Attacks on
the Station-to-Station (STS) Protocol. In Proceedings of the International Workshop
on Public Key Cryptography. Springer-Verlag, Berlin, Heidelberg, 154–170.
[10] Bruno Blanchet. 2001. An Efficient Cryptographic Protocol Verifier Based on
Prolog Rules. In Proceedings of the 14th Computer Security Foundations Workshop.
IEEE, 82–96.
[11] Bruno Blanchet, Ben Smyth, Vincent Cheval, and Marc Sylvestre. 2018. ProVerif
2.00: Automatic Cryptographic Protocol Verifier, User Manual and Tutorial. INRIA.
[12] Marcelo Carlomagno Carlos. 2014. Towards a Multidisciplinary Framework for the
Design and Analysis of Security Ceremonies. Ph.D. Dissertation. Royal Holloway,
University of London.
[13] Marcelo Carlomagno Carlos, Jean Everson Martina, Geraint Price, and Ricardo Fe-
lipe Custódio. 2013. An Updated Threat Model for Security Ceremonies. In Pro-
ceedings of the 28th Annual ACM Symposium on Applied Computing. ACM, New
York, NY, USA, 1836–1843.
[14] Richard Chang and Vitaly Shmatikov. 2007. Formal Analysis of Authentication
in Bluetooth Device Pairing. In Proceedings of the Joint Workshop on Foundations
of Computer Security and Automated Reasoning for Security Protocol Analysis.
[15] Whitfield Diffie, Paul C. Van Oorschot, and Michael J. Wiener. 1992. Authenti-
cation and Authenticated Key Exchanges. Designs, Codes and cryptography 2, 2
(1992), 107–125.
[16] Digicert. 2019. Device Certificates. https://www.digicert.com/device-certificates/.
Accessed: 11.5.2019.
[17] David L. Dill. 1996. The Murphi Verification System. In Proceedings of the Inter-
national Conference on Computer Aided Verification. Springer-Verlag, London, UK,
UK, 390–393.
[18] Xuhua Ding and Gene Tsudik. 2018. Initializing trust in smart devices via presence
[19] Danny Dolev and Andrew Yao. 1983. On the Security of Public Key Protocols.
attestation. Computer Communications 131 (2018), 35–38.
Transactions on Information Theory 29, 2 (1983), 198–208.
[20] Carl M. Ellison. 2007. Ceremony Design and Analysis. IACR Cryptology ePrint
Archive (2007).
[21] Russell A. Fink, Alan T. Sherman, Alexander O. Mitchell, and David C. Challener.
2011. Catching the Cuckoo: Verifying TPM Proximity Using a Quote Timing Side-
channel. In Proceedings of the International Conference on Trust and Trustworthy
Computing. Springer-Verlag, Berlin, Heidelberg, 294–301.
[22] Samta Gajbhiye, Monisha Sharma, Sanjeev Karmkar, and Sanjay Sharma. 2016.
Design, Implementation and Security Analysis of Bluetooth Pairing Protocol in
NS2. In Proceedings of the International Conference on Advances in Computing,
Communications and Informatics (ICACCI). IEEE, 1711–1717.
[23] Kenneth Goldman, Ronald Perez, and Reiner Sailer. 2006. Linking Remote Attes-
tation to Secure Tunnel Endpoints. In Proceedings of the first workshop on Scalable
trusted computing. ACM, New York, NY, USA, 21–24.
[24] Keijo Haataja and Pekka Toivanen. 2010. Two Practical Man-in-the-middle
Attacks on Bluetooth Secure Simple Pairing and Countermeasures. Transactions
on Wireless Communications 9, 1 (2010), 384–392.
[25] Gerhard P. Hancke and Markus G. Kuhn. 2005. An RFID Distance Bounding
Protocol. In Security and Privacy for Emerging Areas in Communications Networks,
2005. SecureComm 2005. First International Conference on. IEEE Computer Society,
Washington, DC, USA, 67–73.
[26] Shaikh Shahriar Hassan, Soumik Das Bibon, Md Shohrab Hossain, and Mo-
hammed Atiquzzaman. 2018. Security Threats in Bluetooth Technology. Com-
puters & Security 74 (2018), 308–322.
[27] IEEE. 2009. IEEE Standard for Local and metropolitan area networks - Secure Device
Identity. Technical Report. IEEE. 1–77 pages. https://doi.org/10.1109/IEEESTD.
2009.5367679
[28] IEEE. 2016. IEEE Standard for Information technology–Telecommunications and
information exchange between systems Local and metropolitan area networks–
Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and
Physical Layer (PHY) Specifications. Technical Report. IEEE. 1–3534 pages.
[29] David Jia and Richard Hsu. 2013. Formal Modeling and Analysis of Bluetooth 4.0
Pairing Protocol.
[30] Ronald Kainda, Ivan Flechais, and A. W. Roscoe. 2009. Usability and Security
of Out-of-band Channels in Secure Device Pairing Protocols. In Proceedings of
the 5th Symposium on Usable Privacy and Security. ACM, New York, NY, USA,
11:1–11:12.
[31] Charlie Kaufman, Paul E. Hoffman, Yoav Nir, Pasi Eronen, and Tero Kivinen.
2014. Internet Key Exchange Protocol Version 2 (IKEv2). http://tools.ietf.org/rfc/
rfc7296.txt. RFC 7296.
[32] David W. Kravitz and Jason Cooper. 2017. Securing User Identity and Transactions
Symbiotically: IoT Meets Blockchain. In Proceedings of the Global Internet of Things
Summit (GIoTS). IEEE, 1–6.
[33] Hugo Krawczyk. 2003. SIGMA: The ‘SIGn-and-MAc’ Approach to Authenti-
cated Diffie-Hellman and Its Use in the IKE Protocols. In Annual International
Cryptology Conference. Springer Berlin Heidelberg, Berlin, Heidelberg, 400–425.
[34] Cynthia Kuo, Mark Luk, Rohit Negi, and Adrian Perrig. 2007. Message-in-a-bottle:
User-friendly and Secure Key Deployment for Sensor Nodes. In Proceedings of the
5th international conference on Embedded networked sensor systems. ACM, New
York, NY, USA, 233–246.
[35] Albert Levi, Erhan Çetintaş, Murat Aydos, Çetin Kaya Koç, and M. Ufuk Çağlayan.
2004. Relay Attacks on Bluetooth Authentication and Solutions. In International
Symposium on Computer and Information Sciences. Springer Berlin Heidelberg,
Berlin, Heidelberg, 278–288.
[36] Gavin Lowe. 1995. An Attack on the Needham-Schroeder Public-Key Authenti-
cation Protocol. Inform. Process. Lett. 56, 3 (1995), 131–133.
[37] Gavin Lowe. 1997. A Hierarchy of Authentication Specifications. In Proceedings
of the 10th Computer security foundations workshop. IEEE Computer Society,
Washington, DC, USA, 31–43.
[38] Muhammad Naveed, Xiaoyong Zhou, Soteris Demetriou, XiaoFeng Wang, and
Carl A. Gunter. 2014. Inside Job: Understanding and Mitigating the Threat of
External Device Mis-Binding on Android. In Proceedings of the Network and
Distributed System Security Symposium (NDSS).
[39] Martin Nuss, Alexander Puchta, and Michael Kunz. 2018. Towards Blockchain-
Based Identity and Access Management for Internet of Things in Enterprises. In
Proceedings of the International Conference on Trust and Privacy in Digital Business.
Springer International Publishing, Cham, 167–181.
[40] Bryan Parno, Jonathan M McCune, and Adrian Perrig. 2011. Bootstrapping Trust
in Modern Computers. Springer Science & Business Media.
[41] Kasper Bonne Rasmussen and Srdjan Capkun. 2010. Realization of RF Distance
Bounding. In Proceedings of the USENIX Security Symposium. USENIX Association,
Berkeley, CA, USA, 389–402.
[42] Nitesh Saxena, Jan-Erik Ekberg, Kari Kostiainen, and N. Asokan. 2006. Secure
Device Pairing based on a Visual Channel. In Proceedings of the Symposium on
Security and Privacy. IEEE.
Core Spec-
ification. Bluetooth SIG.
https://www.bluetooth.com/specifications/
bluetooth-core-specification.
Bluetooth Specification Version 5.0.
[43] Bluetooth SIG. 2016.
[44] Jani Suomalainen, Jukka Valkonen, and N. Asokan. 2007. Security Associations
in Personal Networks: A Comparative Analysis. In Proceedings of the European
Workshop on Security in Ad-hoc and Sensor Networks. Springer Berlin Heidelberg,
Berlin, Heidelberg, 43–57.
[45] Thomas Y.C. Woo and Simon S. Lam. 1993. A Semantic Model for Authentication
Protocols. In Proceedings of the IEEE Computer Society Symposium on Research in
Security and Privacy. IEEE Computer Society, Washington, DC, USA, 178–194.
[46] Zhangkai Zhang, Xuhua Ding, Gene Tsudik, Jinhua Cui, and Zhoujun Li. 2017.
Presence Attestation: The Missing Link in Dynamic Trust Bootstrapping. In
Proceedings of the ACM SIGSAC Conference on Computer and Communications
Security. ACM, New York, NY, USA, 89–102.
Session 6A: IoT SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand464