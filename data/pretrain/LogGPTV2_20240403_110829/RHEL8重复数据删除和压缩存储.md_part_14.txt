::: chapter
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#discarding-unused-blocks_deduplicating-and-compressing-storage}第 5 章 丢弃未使用块 {.title}
:::
您可以在支持它们的块设备中执行或调度丢弃操作。
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#block-discard-operations_discarding-unused-blocks}块忽略操作 {.title}
:::
块忽略操作丢弃了被挂载的文件系统不再使用的块。它们在以下方面很有用：
::: itemizedlist
-   固态驱动器（SSD）
-   精简置备存储
:::
### []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#_requirements}要求
基本文件系统的块设备必须支持物理的丢弃（discard）操作。
如果 `/sys/block/设备/queue/discard_max_bytes`{.literal}
文件中的值不为零，则支持物理丢弃操作。
:::
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#types-of-block-discard-operations_discarding-unused-blocks}块丢弃操作的类型 {.title}
:::
您可以使用不同方法运行 discard 操作：
::: variablelist
[批量丢弃]{.term}
:   由用户明确运行。它们丢弃所选文件系统中的所有未使用块。
[在线丢弃]{.term}
:   在挂载时指定。它们在没有用户干预的情况下实时运行。在线丢弃操作只丢弃从已使用到空闲的块。
[定期丢弃]{.term}
:   是 `systemd`{.literal} 服务定期运行的批处理操作。
:::
XFS 和 ext4 文件系统以及 VDO 支持所有类型。
### []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#_recommendations}建议
红帽建议您使用批处理或周期性丢弃。
仅在以下情况下使用在线丢弃：
::: itemizedlist
-   系统负载不允许使用批量丢弃，或者
-   为了保持性能，需要在线丢弃操作。
:::
:::
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#performing-batch-block-discard_discarding-unused-blocks}执行批块丢弃 {.title}
:::
这个过程执行批块丢弃操作，忽略挂载的文件系统中未使用的块。
::: itemizedlist
**先决条件**
-   挂载文件系统。
-   文件系统底层的块设备支持物理忽略操作。
:::
::: itemizedlist
**流程**
-   使用 `fstrim`{.literal} 工具：
    ::: itemizedlist
    -   要只在所选文件系统中执行丢弃，请使用：
        ``` screen
        # fstrim mount-point
        ```
    -   要在所有挂载的文件系统中执行丢弃，请使用：
        ``` screen
        # fstrim --all
        ```
    :::
:::
如果您在其中执行 `fstrim`{.literal} 命令：
::: itemizedlist
-   不支持丢弃操作的设备，或者
-   由多个设备组成的逻辑设备（LVM 或者
    MD），其中任意设备不支持丢弃操作：
:::
下面的信息将显示：
``` screen
# fstrim /mnt/non_discard
fstrim: /mnt/non_discard: the discard operation is not supported
```
::: itemizedlist
**其它资源**
-   `fstrim(8)man`{.literal} page
:::
:::
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#enabling-online-block-discard_discarding-unused-blocks}启用在线块丢弃 {.title}
:::
这个过程启用在线块丢弃操作，该操作可自动丢弃所有支持的文件系统中未使用的块。
::: itemizedlist
**流程**
-   在挂载时启用在线丢弃：
    ::: itemizedlist
    -   手动挂载文件系统时，添加 `-o discard`{.literal} 挂载选项：
        ``` screen
        # mount -o discard device mount-point
        ```
    -   永久挂载文件系统时，将 `discard`{.literal} 选项添加到
        `/etc/fstab`{.literal} 文件中的挂载条目。
    :::
:::
::: itemizedlist
**其它资源**
-   `mount(8)man`{.literal} page
-   The `fstab(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#enabling-online-block-discard-using-rhel-system-roles_discarding-unused-blocks}使用 RHEL 系统角色启用在线块丢弃 {.title}
:::
本节论述了如何使用 `存储`{.literal} 角色启用在线块丢弃。
::: itemizedlist
**先决条件**
-   已存在包含 `存储`{.literal} 角色的 Ansible playbook。
:::
如需有关如何应用此 playbook 的信息，请参阅
[应用角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-system-administration_configuring-basic-system-settings#applying-a-role_con_intro-to-rhel-system-roles){.link}。
::: section
::: titlepage
## []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#an-example-ansible-playbook-to-enable-online-block-discard_enabling-online-block-discard-using-rhel-system-roles}启用在线块丢弃的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用 `存储`{.literal}
角色来挂载启用了在线块丢弃的 XFS 文件系统。
::: example
[]{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#idm139671993470752}
**例 5.1. 一个 playbook，它在 /mnt/data/ 上启用在线块丢弃功能**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: xfs
        mount_point: /mnt/data
        mount_options: discard
  roles:
    - rhel-system-roles.storage
```
:::
:::
::: itemizedlist
**其它资源**
-   此 playbook 还执行持久挂载示例，如 [Ansible playbook
    永久挂载文件系统示例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/managing-local-storage-using-rhel-system-roles_managing-file-systems#an-example-ansible-playbook-to-persistently-mount-a-file-system_managing-local-storage-using-rhel-system-roles){.link}。
:::
::: itemizedlist
-   有关 `存储系统`{.literal} 角色中使用的参数的详情，请参阅
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
## []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   [管理文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#managing-local-storage-using-rhel-system-roles_managing-file-systems){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#discarding-unused-blocks_deduplicating-and-compressing-storage.html#enabling-periodic-block-discard_discarding-unused-blocks}启用定期块丢弃 {.title}
:::
这个过程启用 `systemd`{.literal}
计时器，它会定期丢弃所有支持的文件系统中未使用的块。
::: itemizedlist
**流程**
-   启用并启动 `systemd`{.literal} 计时器：
    ``` screen
    # systemctl enable --now fstrim.timer
    ```
:::
:::
:::
[]{#assembly_overview-of-persistent-naming-attributes_deduplicating-and-compressing-storage.html}
::: chapter
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_deduplicating-and-compressing-storage.html#assembly_overview-of-persistent-naming-attributes_deduplicating-and-compressing-storage}第 6 章 持久性命名属性概述 {.title}
:::
作为系统管理员，您需要引用使用持久性命名属性的存储卷来构建比多个系统引导更可靠存储设置。
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_deduplicating-and-compressing-storage.html#con_disadvantages-of-non-persistent-naming-attributes_assembly_overview-of-persistent-naming-attributes}非持久性命名属性的缺陷 {.title}
:::
Red Hat Enterprise Linux
提供识别存储设备的多种方法。在使用正确的选项时，务必要使用正确的选项来识别每个设备，以避免意外访问错误的设备，特别是在安装到或重新格式化驱动器时。
通常，Linux 中使用非持久性名称来指代存储设备，格式为
`/dev/sd（主号码`{.literal}
）（次编号）。当检测到每个设备时，会为每个设备分配主号码和副号码范围以及关联的
`sd`{.literal}
名称。这意味着，如果设备检测顺序发生变化，主号码和副号码范围与关联的
`sd`{.literal} 名称之间的关联可能会改变。
在以下情况下可能会在以下情况下更改排序：
::: itemizedlist
-   系统引导过程的并行化会根据每个系统引导的顺序检测到存储设备。
-   磁盘无法启动或响应 SCSI
    控制器。这会导致通常的设备探测不会检测到它。该磁盘不能被系统访问，随后的设备将具有其主号码和副号码范围，包括相关的
    `sd`{.literal} 名称已下移。例如，如果没有检测到通常称为
    `sdb`{.literal} 的磁盘，则通常称为 `sdc`{.literal} 的磁盘将显示为
    `sdb`{.literal}。
-   SCSI 控制器（主机总线适配器或
    HBA）无法初始化，从而导致没有检测到与该 HBA
    连接的所有磁盘。任何连接到随后探测的 HBA
    的磁盘都会被分配不同的主号码和副号码范围，以及不同的相关
    `sd`{.literal} 名称。
-   如果系统中存在不同类型的
    HBA，则驱动初始化顺序会改变。这会导致连接到那些 HBA
    的磁盘以不同顺序被检测到。当将 HBA 移动到系统的不同 PCI
    插槽时也会出现这种情况。
-   例如，在探测存储设备时，通过光纤通道、iSCSI 或 FCoE
    适配器连接到系统的磁盘可能无法访问，例如，存储阵列或干预交换机被关闭。如果存储阵列的在线需要比系统启动的时间更长，则系统在电源失败后重启时会出现这种情况。虽然某些光纤通道驱动程序支持一种机制来指定持久性
    SCSI 目标 ID 到 WWPN
    映射，但这不会导致主号码和副号码范围，以及相关的 `sd`{.literal}
    名称，它只提供一致的 SCSI 目标 ID 号。
:::
因此，不希望在引用设备时使用主号码和副号码 `范围或关联的 sd`{.literal}
名称，例如在 `/etc/fstab`{.literal}
文件中。可能挂载了错误的设备，并可能导致数据崩溃。
然而，偶尔仍需要引用 `sd`{.literal}
名称，即使使用了其它机制，比如当设备报告错误时。这是因为 Linux
内核在有关设备的内核消息中使用 `sd`{.literal} 名称（以及 SCSI
主机/通道/目标/LUN 标题）。
:::
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_deduplicating-and-compressing-storage.html#file-system-and-device-identifiers_assembly_overview-of-persistent-naming-attributes}文件系统和设备识别符 {.title}
:::
这部分解释了识别文件系统和块设备的持久性属性之间的区别。