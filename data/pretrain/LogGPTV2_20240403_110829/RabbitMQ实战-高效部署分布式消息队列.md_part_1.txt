# OCR Output
## Page 1
Broadview
MANNING
www.broadview.com.cn
RabbitMO
实战
高效部署分布式
消息队列
Alvaro Videla
[美]
著
Jason J.W. Williams
汪佳南
译
RabbitmQ in Action
Distributed Messaging for Everyone
kis Richardson
电子工业出版社
中国工信出版集团
力荐
http://
GOUSEOFELECTRICSIUSTRY
---
## Page 2
RabbitMQ实战
高效部署分布式消息队列
AlvaroVidela
[美]
著
JasonJ.W.Williams
汪佳南译
RabbitMQinAction
Distributed Messaging for Everyone
电子王业出版社
Publishing House of Electronics Industry
北京·BEIJING
---
## Page 3
内容简介
历史，然后从基本的消息通信原理讲起，带领读者一路探索RabbitMQ的消息通信世界。这当中不仅包含
了针对单台RabbitMQ服务器和RabbitMQ集群的讲解，还教导读者如何使用各种工具来进行监控。
本书内容浅显易懂，文笔风趣幽默。书中包含了丰富的、可以运行的示例程序源代码，读者可以自
行下载并运行，这种亲身实践有助于加深对相关主题的理解。对于初学者来说，这样的编排非常适用。
对于那些有一定RabbitMQ使用经验的读者来说，本书不仅可以巩固消息通信基本原理，同时也可加深对
RabbitMQ高级特性的理解，臂如如何编写RabbitMQ插件。相信处于RabbitMQ探索之旅不同阶段的读者
都能从本书获益。
OriginalEnglishLanguageeditionpublishedbyManningPublications,USA.Copyright 2012byManning
Publications. Simplified Chinese-language edition copyright @ 2015 by Publishing House of Electronics Industry.
All rights reserved.
本书简体中文版专有出版权由ManningPublications授予电子工业出版社。未经许可，不得以任何方
式复制或抄袭本书的任何部分。专有出版权受法律保护。
版权贸易合同登记号图字：01-2014-4907
图书在版编目（CIP）数据
RabbitMQ实战：高效部署分布式消息队列／（美）维德拉（Videla,A.），（美）威廉姆斯（Williams,J
J.W.）著；汪佳南译.一北京：电子工业出版社，2015.10
书名原文：RabbitMQ in Action:Distributed Messaging for Everyone
ISBN978-7-121-27164-9
I.①R.Ⅱ.①维..②威.·③汪.Ⅲ.①保密通信IV.①TN918.6
中国版本图书馆CIP数据核字（2015）第224246号
策划编辑：张春雨
责任编辑：李云静
印刷：北京天宇星印刷厂
装订：三河市皇庄路通装订厂
出版发行：电子工业出版社
北京市海淀区万寿路173信箱
邮编：100036
开本：787×9801/16
印张：20.75字数：395千字
版次：2015年10月第1版
印次：2015年10月第1次印刷
定价：75.00元
凡所购买电子工业出版社图书有缺损问题，请向购买书店调换。若书店售缺，请与本社发行部联
系，联系及邮购电话：（010）88254888。
质量投诉请发邮件至PI:EMAIL，盗版侵权举报请发邮件至PI:EMAIL
服务热线：（010）88258888。
---
## Page 4
译者序
笔者从事互联网行业已五年有余，经历过大大小小十几个项目，其中包括金融
领域方面的交易系统、医疗护理信息系统，再到后来的淘宝第三方软件供应商。这
些项目不仅为我带来了丰富的阅历，更让我认识到软件开发的根本就在于降低软件
复杂性。因此，我们需要采用可复用的软件设计模式，选取合适的软件构件来搭建
自己的系统。这当中就用到了消息队列。
各位读者可能对消息队列并不陌生。消息队列提供一个异步通信协议，消息的
发送者不用一直等待，直到消息被成功处理；而是立即返回。消息被暂存于队列当中，
对消息感兴趣的消费者会订阅消息并处理它们。那么，在什么样的场景下需要使用
消息队列呢？其中之一就是系统集成。这些系统可能是公司的遗留系统，抑或是第
三方维护的系统。集成的方法有很多，其中之一是让这些系统往数据库的某儿张表
写人数据，然后让新的系统定时地去轮询并取出数据进行处理。这已经具备了消息
队列通信的雏形：其中的数据库表就是消息队列，它定义了消息的标准结构，并暂
存待处理的消息。对于小型系统和简单的需求来讲，这样的解决方案没什么问题，
并且足够应付了。但是随着日后业务需求的扩张，接人的系统越来越多，对于消息
通信的需求也变得越来越复杂：
1.你需要将同一条消息发送给多个感兴趣的系统，同时文需要让系统只接受符
合特定模式的消息。
2.你开始觉得系统当中的同步处理方式严重影响了吞吐量，你想把用户订单处
---
## Page 5
IV
译者序
理、消息通知等都修改成异步处理的方式。
3.你开始关注系统的高可用性。同时你还想实时观测系统当中订单消息的处
理速率，以便及时应对峰值压力。
通过使用标准的消息队列系统就可以轻松处理以上问题。当然它们提供的功
能远不止这些。市面上有很多开放源码的消息队列系统，包括JBoss Messaging
JORAM、Apache ActiveMQ、Sun Open Message Queue、Apache Qpid、RabbitMQ,等等。
License开源协议。它支持多种编程语言，可以方便地和Spring集成。最重要的一点是，
使用消息队列并不是“条鸡用牛刀”的问题，而是一种未雨绸缪，随着系统不断
演进，你终将从消息队列中获益。
翻译一本书绝非易事。在此，我要感谢给予我帮助的赵震一和陈祥奎夫妇，你
们是我的挚友与伯乐。感谢电子工业出版社的编辑张春雨和李云静，是你们的细心
指导保证了本书的翻译质量。最后感谢我的女友，你是我的精神支柱，在你的陪伴
和支持下，我得以全心全意地完成工作。
由于时间仓促，文中难免有不足之处，希望读者海涵，也希望各位能和我一样
从中收获知识和快乐，谢谢大家。
汪佳南
2015年9月于杭州
---
## Page 6
致我的祖父Maximiliano Godoy，
是你为我指引了人生的道路。谢谢。
A.V.
致我的妈妈、爸爸和妹妹J'aime,
你们的爱、支持和信任
使我能得以攀越高峰··
致上帝，因为你的庇佑总能让我成功到达彼岸。
J.W.
---
## Page 7
序
欢迎阅读本书。如果你像我一样，你很有可能在想：“我是否应该从头开始阅
读呢？”唉，市面上的技术书籍琳琅满目，但并不是所有的图书都值得花费时间关注。
所以请让我邀你继续往下阅读，看看下面这份说明是否合你的胃口：
■你想要通过一种实用的方法来学习推技术、流数据，以及其他消息通信模式。
■你想要获得专家级别的RabbitMQ技能，包括在设计方面和生产环境运行方
面的最佳实践。
换句话说，本书不仅仅是一本RabbitMQ指南。它会为你讲解能覆盖多种使用
场景的基本设计模式。它展现了为何越来越多的应用开始使用这些模式，以及哪些
“可以做”、哪些“不能做”。
这些模式是怎样的呢？如果你曾经有想法将系统绘成一幅信息流或者网络图，
而非栈的形式，那么你可能正在使用，或者正准备使用消息通信。你可能一直在考
虑数据投递、非阻塞操作或者推送通知。或者，你想使用发布/订阅模式、异步处
理或是工作队列。所有这些模式构成了众所周知的消息通信（messaging）。
消息通信是一种至关重要的能力：它使得软件应用可以相互连接并得以扩展。
应用程序们既可以像一个巨大应用中的组件一样相互连接起来，也可以连接用户的
设备和数据。消息通信从本质上来说是异步的，因为它通过分隔了数据的发送和接
收来解耦应用。最奇妙的地方在于该连接模式可以在任何规模下以相同的方式工作。
规模是关键点。互联网无处不在，它作为应用程序投递的基础，使得规模在应
---
## Page 8
VIII
序
用程序设计中成为关键因素。我们已经无法停留在小规模的思考方式上。最近，术
都往大的方向发展了。
举例来说，移动连接设备的数量很快就将超过地球上人口的数量。当我编写本
书时，Facebook正准备IPO。CTOBret Taylor说道：“如果MarkZuckerberg在宿舍
编写Facebook的时候这些技术就已经成熟的话，那么现在的Facebook就已经是一
个移动应用了。”
花点时间想想。大多数应用曾经都是这样运作的：加载文档或者从数据库获取
数据，做一些处理，并将结果写人磁盘。将来的应用程序会更像Facebook：总是在线，
并且托管在云端，在任何地方都能访问。输入和处理是连续且自动的，并即时输出
用户想要的过滤信息流。
如果不采用一系列专门的设计模式的话，那么这些级别的自动化、可访问性和
伸缩性都无从谈起。在本书中你就能学到这些模式。作为现代消息通信技术发起者
之一，DerekCollison将消息通信描述为“移动的数据”，这一点令人印象深刻。很
难想象有什么应用是不需要移动数据的。因此，消息通信无处不在。
这本书可以让你立即上手。消息通信模式将以可运行代码的形式展现在你面前。
作者也会帮助你在自己的系统上运行起来。在JasonJ.W.Williams和AlvaroVidela
的帮助下，你就能零距离接触那些拥有多年运行大规模RabbitMQ系统经验的专家
了。本书是他们将经验分享给社区这一杰出工作的成果。
在对RabbitMQ有了一点感觉之后，不管你使用何种语言编写程序，都能很容
易地在广大RabbitMQ用户社区里寻求到帮助并找到更多示例。这使得RabbitMQ
成为能满足你消息通信需求的最佳选择。
希望你已经被我吊起了胃口，准备翻开下一页继续阅读。书中会有关于消息和
RabbitMQ的一切，作者将会为你揭开它们的神秘“面纱”。
AlexisRichardson
RabbitTechnologies公司创始人和前任CEO
VMware云应用平台高级总监
---
## Page 9
前言
编写本书就像是在探索RabbitMQ一样一—遇到需要解决的问题，但是却不知
道解决方案是什么。在2010年5月前，我们甚至都不认识对方。在过去的两年里，
我俩都活跃在RabbitMQ社区，但是我们并未真正相遇过。之后有一天在与Alexis
Richardson（时任Rabbit的CEO）的一次谈话中，我与Alvaro互相认识了对方，这
使得你现在手中所捧的这本书成为可能。我们之间的共同之处在于，我们都期望将
自己通过艰难困苦才掌握的所有RabbitMQ知识写下来。回到2010年，这些知识（并
且现今大部分时候仍然如此）散落在网络上那些一知半解的博客文章和简洁的技术
指引中。换句话说，我俩都想要编写本书。真心希望本书在我们着手使用RabbitMQ
的两年前就已经存在了。
我俩并非传统的消息通信背景出身，这使得我们很快成为朋友，并在很大程
度上形成了本书的基调；我们假定本书的读者是那些之前从未听说过队列或者绑定
（binding）的人。事实上，当我俩探索RabbitMQ时，我们甚至不知道消息通信是什
么，或者说我们不知道这就是自己所寻找问题的解决方案。我（Jason）的处境是公
司需要一种方法来获取从顾客那里收到的垃圾邮件报告，并在不同于消息主流的带
外数据（out-of-band）中对它们进行处理。而Alvaro的情况是，他们公司的社交网
络成员通信系统在200GB数据库负载下无法正常工作。就像很多其他诉诸消息通信
的那些人一样，我俩首先尝试的是使用数据库表来解决以队列为中心的问题。像确
保只有一个应用实例消费任意特定队列条目这样的问题，让我们在数据库驱动的方
案上的尝试备受折磨，逼迫我们寻找更好的方法。毕竟，我们认识到自己不会是软
---
## Page 10
X
前言
件历史上第一个碰到这类问题的人。
我们这两个问题的解决方案竟然惊人地相似：一位在Plaxo的朋友告诉我看看
“RabbitMQ之类的东西”是否能解决我的以队列为中心的问题，同时在中国的一位
Alvaro的Erlang同事则给了他相同的建议。相距半个地球，我俩以相同的方式发现
了RabbitMQ，为的是尝试解决儿乎同样的问题！事实上，你正阅读有关RabbitMQ
的书，很有可能是因为相似的挑战以相同的方式指引看你来发现RabbitMQ。这也
解释了为何RabbitMQ如此流行：当尝试扩大我们构建的软件规模时，它能轻而易
举地解决那些挥之不去的分布式数据的基本问题。
我们希望本书能够帮助你通过使用RabbitMQ来更快、更轻松地设计这些挑战
的解决方案，从而使你可以将更多的时间用于编写改变世界的软件，同时花费更少
的时间来了解如何加速消息通信代理。在这一路上，也许RabbitMQ会给你带来一
位了不起的合著者，你从没想过他会成为你终生的朋友。本书是我们热爱编写软件
的产物，同时也希望它能以你从未想象的方式来帮助你完成相同的事情。
AlvaroVidela
迪本多夫，瑞士
Jason J. W. Williams
爱达荷州博伊西市，美国
1大家都说合著者的关系相比婚姻来说拥有更高的“离婚率”。这倒是一个不错的比较，因为合著一
本书需要合著者不断地相互迁就和尊重，这样彼此才能生活在同一“屋檐”下。感谢上帝能让我撰
写本书，同时能交到这么一位志同道合的朋友。
---
## Page 11
致谢
这本书的存在了。首先，在我们开始编写本书的时候，我们想要感谢RabbitMQ的
CEOAlexisRichardson。如果没有他的引荐，Manning就不会给我们这个机会，我
们也就不会一起创作这本书了。同时，我们也要感谢他为本书作序。同样地，我们
也要向RabbitMQ团队表达最真挚的感谢，感谢他们一直以来的帮助，以及对我们
关于Rabbit细节之处提问的耐心解答。特别是，我们要感谢MatthewSackman和