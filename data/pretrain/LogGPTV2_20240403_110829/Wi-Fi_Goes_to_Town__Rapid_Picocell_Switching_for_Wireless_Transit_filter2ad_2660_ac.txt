spatial stream to the client. We leave the design and experimentation of a multiple
spatial stream roadside AP for future work.
Wi-Fi Goes to Town: Rapid Picocell Switching for Wireless Transit Networks
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
Linux wireless system of AP1
User space
hostapd
sta_info
generate
hostapd_sta_add_params
hostapa d_sta_add_p__ arams
pass to
TCP
client info
extract
Kernel space
nl80211
nl80211
mac80211
mac80211
Linux
Linux
wireless stack
wireless stack
80211 driver
80211 driver
802.3 driver
02.3 driver
AP2
hostapd
sta_info
Kernel
AP3
hostapd
sta_info
Kernel
AP4
.
.
.
.
)
s
/
s
t
i
b
M
(
t
u
p
h
g
u
o
r
h
T
15
10
5
0
TCP − WGTT
TCP − Enhanced 802.11r
UDP − WGTT
UDP − Enhanced 802.11r
0
5
20
25
35
10
15
Driving speed (mph)
Figure 12: WGTT client association. Each AP shares client
association state with the others over the Ethernet backhaul.
new hostapd_sta_add_params struct, passing it to the kernel level
mac80211 and the driver. We add code to extract the client informa-
tion within hostapd_sta_add_params struct of AP1, open a TCP
connection to all other APs in the network, and transmit the client
information sta_info to those APs. On the other end, the receiving
AP is listening for this TCP connection. When the TCP connection
is set up, the information in the received packet is transferred back
into a hostapd_sta_add_params struct and passed into mac80211
and the driver on the received AP. Figure 12 illustrates this process.
5 EVALUATION
In this section, we first conduct field studies to evaluate the end-
to-end performance of WGTT and compare it with a performance-
tuned version of the 802.11r fast roaming protocol [22]. We then
present micro-benchmark experiments to provide further insight
into which factors impact WGTT’s performance. After that, we
conduct three real-world case studies to show WGTT’s capability
of handling online video streaming, remote video conferencing, and
web browsing at driving speed.
5.1 Methodology
Three Lenovo L512 laptops with Atheros AR9590 wireless card
serve as clients in our experiments. The client transits through
eight deployed APs at different driving speed, ranging from 5 mph
to 35 mph. For each experiment, we log packet flows sent to and
from both the controller and the client using tcpdump for data
analysis.
Comparison scheme. We implement a performance-tuned ver-
sion of the IEEE 802.11r fast roaming protocol and deploy it on
our testbed for comparison. In most 802.11r implementations, the
client does not switch to another AP until it collects a number
of RSSI readings from the AP it currently associated with, but as
we showed above (§2) this fails in the vehicular picocell regime.
We therefore enhance a combination of the standard 802.11r and
802.11k [21] protocols and our best understanding of centralized
controller WLAN products in the straightforward way we expect
the industry to proceed:
(1) Each AP beacons every 100 ms, from which the client discovers
their presence and estimates RSSI.
(2) We set an RSSI threshold below which a client switches to another
AP with the highest RSSI value once the RSSI of the current AP is
Figure 13: TCP and UDP throughput when the client moves
at different speeds.
lower than this threshold, with a time hysteresis of one second.
(3) After the first client association, other APs learn the authen-
tication and association information of that client (as current
products based on a centralized controller implement, to the
best of our knowledge) thus can forward to other APs any au-
thentication or association frame from the client in the uplink
direction.
We term this scheme Enhanced 802.11r, using it as a performance
benchmark in the remainder of our evaluation.
5.2 End-to-end Performance
We first evaluate the end-to-end performance of WGTT delivering
bulk TCP and UDP data flows.
5.2.1
Single-client experiments. We examine WGTT’s through-
put at different client moving speeds, and test TCP and UDP through-
put of WGTT and the Enhanced 802.11r fast roaming protocol. As
shown in Figure 13, WGTT achieves a slightly higher throughput
than its counterpart in the static case. As the client moves, WGTT
achieves a constantly high throughput at both low (5 mph) and high
(35 mph) moving speeds, with an average throughput of 6.6 Mbits/s
for TCP and 8.7 Mbits/s for UDP. In contrast, Enhanced 802.11r achi-
eves only 2.7 Mbits/s and 3.3 Mbits/s throughput for TCP and UDP
at 5 mph driving speed. When the client at 35 mph, the TCP and
UDP throughput of Enhanced 802.11r further drops to 0.8 Mbits/s,
and 1.9 Mbits/s, respectively.
To better understand the sources of WGTT’s throughput gain
over Enhanced 802.11r, we plot the TCP throughput against time
and a timeseries showing which AP the client is associated with
during its movement in Figure 14. As shown, WGTT keeps switch-
ing from one AP to another at high frequency (around five times
per second), providing the client with the best link at each period of
time. Benefiting from fast link switching, WGTT’s throughput main-
tains at a relatively stable level (around 5 Mbits/s) throughout the
client’s transition over eight APs. In contrast, the TCP throughput
of Enhanced 802.11r increases as the client moves to the associated
AP, and then drops to zero at about 2.5 s in the experiment as the
client moves out of the AP’s radio range. This is because Enhanced
802.11r fails to switch promptly as the client moves near the edge
of the current AP’s coverage, where the current link deteriorates
328
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
Zhenyu Song, Longfei Shangguan, and Kyle Jamieson
t
u
p
h
g
u
o
r
h
T
)
s
/
s
t
i
b
M
(
e
t
a
r
t
i
B
)
s
/
s
t
i
b
M
(
.
q
e
S
P
A
15
10
5
0
150
75
0
8
1
0
WGTT (15 mph)
Enhanced 802.11r (15 mph)
TCP timeout
2
4
6
Time (s)
8
10
0
2
4
6
Time (s)
8 10
Figure 14: TCP throughput of WGTT and Enhanced 802.11r
during a single client’s 15 mph drive.
WGTT (15 mph) Enhanced 802.11r (15 mph)
F
D
C
1
0.8
0.6
0.4
0.2
0
0
TCP − WGTT
UDP − WGTT
TCP − Enhanced 802.11r
UDP − Enhanced 802.11r
50
100
Bit rate (Mbits/s)
150
200
Figure 16: CDF of the link bit rate of TCP and UDP transmis-
sion. The client moves at 15 mph.
UDP packets at the maximum rate to a vehicle moving at 15 mph
that transits across eight APs, and test the switching accuracy of
WGTT and Enhanced 802.11r. Table 2 shows the result. As shown,
WGTT achieves over 90% switching accuracy for both TCP and
UDP transmissions. In contrast, Enhanced 802.11r’s switching ac-
curacy is only 20.24% for TCP transmission, it then drops further
to 18.72% for UDP transmission. The reason behind this result is
that the optimal link changes from one AP to another rapidly in
the vehicular-picocell regime due to fast fading wireless channels,
while Enhanced 802.11r chooses to switch only when the current
link deteriorates significantly.
t
u
p
h
g
u
o
r
h
T
)
s
/
s
t
i
b
M
(
e
t
a
r
t
i
B
)
s
/
s
t
i
b
M
(
.
q
e
s
P
A
20
10
0
120
60
0
8
1
0
2
4
6
Time (s)
8 10
0
2
4
6
Time (s)
8 10
Table 2: Switching accuracy of WGTT and Enhanced 802.11r
for TCP and UDP flows from a single client moving at
15 mph.
Figure 15: UDP throughput of WGTT and Enhanced 802.11r
during a single client’s 15 mph drive.
significantly. TCP timeout occurs at around 5.86 s (the vertical line
in the figure), causing the TCP connection to break thereafter. We
observe a result with UDP transmission (Figure 15), where WGTT
switches between multiple client-AP links frequently to enjoy the
better link quality, thereby keeping a relatively stable transmission
rate throughout the client’s movement. Enhanced 802.11r switches
only three times during the entire transition period (10 s), achieving
a low and unstable throughput.
WGTT’s link bit rate. We next examine the link bit rate of WGTT
during the client’s movement. In this experiment, the client transits
through eight APs at a constant speed (15 mph) and sends TCP
and UDP packets to the AP during its movement. Figure 16 shows
the CDF of the link bit rate measurements. We find that WGTT
achieves a 90% quantile of around 70 Mbits/s, which is 30 Mbits/s
higher than Enhanced 802.11r.
Accuracy of the AP switching algorithm. We define switching
accuracy of a handover algorithm as the fraction of the time that
the algorithm chooses the optimal AP to deliver the packet, where
the optimal AP is the AP with maximum ESNR to the client at
any instant in time. In this experiment, we send both TCP and
TCP
UDP
WGTT (%)
90.12
91.38
Enhanced 802.11r (%)
20.24
18.72
Combined with the previous result, this result demonstrates that
contrary to many other wireless networking designs, better packet
switching decisions, instead of physical-layer bit rate adaptation,
are responsible for most of WGTT’s gain.
5.2.2 Multiple-client experiments. Here we test the ability of
WGTT to improve the performance of multiple clients moving on
the road simultaneously. We vary the number of clients from one to
three, measuring per-client TCP and UDP throughput of WGTT and
the Enhanced 802.11r fast roaming protocol. As shown in Figure 17,
WGTT achieves an average per-client 5.3 Mbits/s TCP throughput