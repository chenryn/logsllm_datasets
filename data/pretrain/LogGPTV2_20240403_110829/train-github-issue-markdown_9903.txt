##### System information (version)
  * OpenCV => ❔ 3.4.3 native sdk
  * Operating System / Platform => ❔ Mac OS
  * Compiler => ❔ native c++ android studio
##### Detailed description
undefined reference to
`cv::dnn::experimental_dnn_34_v7::Net::forward(cv::_OutputArray const&,
std::__ndk1::vector const&)'  
clang++: error: linker command failed with exit code 1 (use -v to see
invocation)  
ninja: build stopped: subcommand failed.
##### Steps to reproduce
     #include 
     #include 
     #include 
     #include 
     #include 
    using namespace std;
    using namespace cv;
    using namespace cv::dnn;
    extern "C" JNIEXPORT jstring JNICALL
    Java_com_example_mats86_myapplication_MainActivity_stringFromJNI(
        JNIEnv *env,
        jobject /* this */) {
    std::string hello = "Hello from C++";
    float confThreshold = 0.5;
    float nmsThreshold = 0.4;
    int newW = 320;
    int newH = 320;
    String model = "/storage/emulated/0/DCIM/ImageProcessing/tessdata/frozen_east_text_detection.pb";
    string imPath = "/storage/emulated/0/DCIM/ImageProcessing/test.jpg";
    Mat im = imread(imPath, IMREAD_COLOR);
    Mat orig;
    im.copyTo(im);
    int origH = im.rows;
    int origW = im.cols;
    int rW = (int) (origW / float(newW));
    int rH = (int) (origH / float(newH));
    resize(im, im, Size(newW, newH));
    int H = im.rows;
    int W = im.cols;
    vector outs;
    vector layerNames(2);
    layerNames[0] = "feature_fusion/Conv_7/Sigmoid";
    layerNames[1] = "feature_fusion/concat_3";
    Net net = readNet(model);
    // construct a blob from the image and then perform a forward pass of
    // the model to obtain the two output layer sets
    Mat frame, blob;
    blobFromImage(frame, blob, 1.0, Size(newW, newH), Scalar(123.68, 116.78, 103.94), true, false);
    net.setInput(blob);
    net.forward(outs, layerNames);  // undefined reference to `cv::dnn::experimental_dnn_34_v7
    return env->NewStringUTF(hello.c_str());
}