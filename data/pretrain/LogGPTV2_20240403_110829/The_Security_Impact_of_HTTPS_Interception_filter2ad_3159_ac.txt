### Correct Validation

**Figure 4: Security of Client-side Interception Software**
- We evaluate and fingerprint popular antivirus and client-side security products, finding that products from twelve vendors intercept connections. In all but two cases, these products degrade TLS connection security. *Mirrors browser ciphers.*

### Handshake Mismatches

**Figure 7: Handshake Mismatches**
- We break down the mismatches used to detect intercepted sessions. For more than 85% of intercepted connections, we detect an invalid handshake based on the use of unsupported extensions, ciphers, or curves. Some features were unavailable for Firefox and Cloudflare.

### Firefox Update Server

**HTTPS Connections for 4.0% of Firefox Clients**
- HTTPS connections for 4.0% of Firefox clients were intercepted, which is the lowest rate among the three perspectives. Interception is likely less common for Firefox users because the browser ships with its own certificate store, whereas Internet Explorer, Chrome, and Safari use the host operating systemâ€™s root store.
- Prior work [12] and our own testing (Figure 4) both find that some antivirus products (e.g., Avast) will intercept connections from these other browsers but neglect to proxy Firefox sessions. In corporate environments, administrators can separately install additional root authorities in Firefox [41], but the added step may dissuade organizations that proxy connections from deploying the browser.

### Sources of Interception

- The two most common interception fingerprints belong to the default configurations of Bouncy Castle on Android 4.x and 5.x, and account for 47% of intercepted clients (Figure 5). These fingerprints were concentrated in large ASes belonging to mobile wireless providers, including Verizon Wireless, AT&T, T-Mobile, and NTT Docomo (a Japanese mobile carrier).
- As seen in Figure 9, 35% of all Sprint and 25.5% of all Verizon Firefox connections (including non-intercepted) matched one of the two fingerprints. It is possible to intercept TLS connections on Android using the VPN and/or WiFi permissions. However, given the default values, it is unclear exactly which Android application is responsible for the interception.
- Bouncy Castle on Android 5.x provides reasonable ciphers equivalent to a modern browser; on Android 4.x, Bouncy Castle advertises export-grade cipher suites, making it vulnerable to interception by an on-path attacker. The third most common fingerprint accounts for 5.3% of Firefox traffic. We were not able to identify the product associated with the fingerprint but note that nearly half of its traffic occurred in India and its diurnal and weekend patterns are consistent with home antivirus or malware.

### Temporal Pattern

- The number of raw intercepted connections mirrors the diurnal pattern of all Firefox traffic. As seen in Figure 8, there are typically more connections on weekdays, and we observe the peak number of connections on weekday mornings. This intuitively aligns with the first computer access of the day triggering a connection to the Firefox update server.
- Oddly, though, the percentage of intercepted traffic is inversely proportional to total traffic, peaking near midnight and in the early morning. When we remove the two Android fingerprints, the remaining data shows a rate around 50% that begins in the morning and ends near midnight every day. It is unclear what behavior results in this temporal pattern.

### Popular E-commerce Sites

- The e-commerce dataset is composed of visits to a set of popular e-commerce websites and is not limited to a specific browser version. To account for this, we parsed the HTTP User-Agent header and identified mismatches between the announced browser and TLS handshake. We observed 257K unique User-Agent headers, and successfully parsed the header for 99.5% of connections.
- The browsers we fingerprinted account for 96.1% of connections; 2.5% belong to browsers we did not fingerprint, and 1.4% are from old browser versions.
- We find that 6.8% of connections were intercepted and another 0.9% were likely intercepted, but cannot be definitively classified. For the connections where we could detect a specific fingerprint, 58% belong to antivirus software and 35% to corporate proxies. Only 1.0% of intercepted traffic is attributed to malware (e.g., SuperFish), and the remaining 6% belong to miscellaneous categories.
- The three most prevalent known fingerprints belong to Avast Antivirus, Blue Coat, and AVG Antivirus, which account for 10.8%, 9.1%, and 7.6% of intercepted connections, respectively.

### Additional Detection Methods

- The e-commerce dataset also includes HTTP headers, which allow us to identify a subset of connections that were intercepted by network middleboxes but do not match any existing fingerprints. We find proxy-related headers in 14.0% of invalid handshakes, most prominently X-BlueCoat-Via, Via, X-Forwarded-For, and Client-IP.
- We additionally use these headers to detect interception. We detected 96.1% of interception based on a version mismatch or the presence of invalid extensions or ciphers. Another 2.2% of intercepted connections lacked expected extensions, 0.7% used invalid cipher or extension ordering, and 1.6% contained proxy-related HTTP headers (Figure 7).

### Countries with Highest Firefox Interception

**Figure 10: Countries with Highest Firefox Interception**
- We show the ten countries with the highest interception rates when connecting to the Mozilla update server. Countries with above-average interception rates generally have a large amount of traffic intercepted by a single, dominant mobile provider.

### Summary of Results

- Our three vantage points provide varying perspectives on the total amount of interception: 4.0% of Firefox update connections, 6.2% of the e-commerce connections, and 10.9% of Cloudflare sessions in the United States (Figure 2). In all cases, this is more than an order of magnitude higher than previously estimated [27], [46].