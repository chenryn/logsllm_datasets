name: \"{{item.username}}\"
password: \"{{item.password\|password_hash(\'sha512\')}}\"
group: \"{{item.group}}\"
with_items:
\-
username: \"nb\"
password: \"123\"
group: \"users\"
\-
username: \"wk\"
password: \"456\"
group: \"apache\"
\-
username: \"dd\"
password: \"789\"
group: \"daemon\"
\-
username: \"jj\"
password: \"123qqq\...A\"
group: \"wheel\"
\-
username: \"xx\"
password: \"a\"
group: \"root\"
## with_nested嵌套循环:
\[root@room9pc01 ansible\]# cat test.yml
\-\--
\- hosts: cache
remote_user: root
vars:
un: \[a, b, c\]
id: \[1, 2, 3\]
tasks:
\- shell: echo \"{{item}}\"
with_nested:
\- \"{{un}}\"
\- \"{{id}}\"
## tags
![LINUXNSD_V01ARCHITECTUREDAY02_056](media/image103.png){width="7.264583333333333in"
height="4.292361111111111in"}
## include and roles
![LINUXNSD_V01ARCHITECTUREDAY02_058](media/image104.png){width="7.264583333333333in"
height="4.084027777777778in"}
![LINUXNSD_V01ARCHITECTUREDAY02_059](media/image105.png){width="7.264583333333333in"
height="4.281944444444444in"}
![LINUXNSD_V01ARCHITECTUREDAY02_060](media/image106.png){width="7.264583333333333in"
height="4.281944444444444in"}
## debug调试
![LINUXNSD_V01ARCHITECTUREDAY02_062](media/image107.png){width="7.264583333333333in"
height="4.344444444444444in"}
![LINUXNSD_V01ARCHITECTUREDAY02_063](media/image108.png){width="7.264583333333333in"
height="4.927777777777778in"}
\[root@room9pc01 ansible\]# cat load.yml
\-\--
\- hosts: web
remote_user: root
tasks:
\- shell: uptime \|awk \'{printf(\"%.2f\",\$(NF-2))}\'
register: result
\- service:
name: httpd
state: stopped
when: result.stdout\|float \> 0.6
\- name: debug info
debug: var=result
1.  [练习1：playbook练习](http://tts.tmooc.cn/ttsPage/LINUX/NSDTN201801/ARCHITECTURE/DAY02/CASE/01/index.html#case1)
2.  [案例2：变量练习](http://tts.tmooc.cn/ttsPage/LINUX/NSDTN201801/ARCHITECTURE/DAY02/CASE/01/index.html#case2)
3.  [案例3：handlers练习](http://tts.tmooc.cn/ttsPage/LINUX/NSDTN201801/ARCHITECTURE/DAY02/CASE/01/index.html#case3)
4.  [案例4：编写playbook](http://tts.tmooc.cn/ttsPage/LINUX/NSDTN201801/ARCHITECTURE/DAY02/CASE/01/index.html#case4)
## 1 练习1：playbook练习
### 1.1 问题
> 本案例要求：
-   安装Apache并修改监听端口为8080
-   修改ServerName配置，执行apachectl -t命令不报错
-   设置默认主页hello world
-   启动服务并设开机自启
### 1.2 步骤
> 实现此案例需要按照如下步骤进行。
>
> **步骤一：playbook的ping脚本检测**
1.  **\[**root@ansible ansible**\]**\# vim ping**.**yml
2.  **\-\--**
3.  **-** hosts**:** all
4.  remote_user**:** root
5.  tasks**:**
6.  **-** ping**:**
7.  **\[**root@ansible ansible**\]**\# ansible**-**playbook ping**.**yml
    > //输出结果
8.  
9.  PLAY **\[**all**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
10. 
11. TASK **\[**Gathering Facts**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
12. ok**:** **\[**web1**\]**
13. ok**:** **\[**web2**\]**
14. ok**:** **\[**cache**\]**
15. ok**:** **\[**db1**\]**
16. ok**:** **\[**db2**\]**
17. 
18. TASK **\[**ping**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
19. ok**:** **\[**db1**\]**
20. ok**:** **\[**web2**\]**
21. ok**:** **\[**cache**\]**
22. ok**:** **\[**web1**\]**
23. ok**:** **\[**db2**\]**
24. 
25. PLAY RECAP
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
26. cache **:** ok**=2** changed**=0** unreachable**=0** failed**=0**
27. db1 **:** ok**=2** changed**=0** unreachable**=0** failed**=0**
28. db2 **:** ok**=2** changed**=0** unreachable**=0** failed**=0**
29. web1 **:** ok**=2** changed**=0** unreachable**=0** failed**=0**
30. web2 **:** ok**=2** changed**=0** unreachable**=0** failed**=0**
> 注意：如果检测的时候出错，会在当前的目录生成一个新的文件（以.retry结尾），可以去这个文件里面看是哪个主机的错
>
> **步骤二：用playbook安装Apache,修改端口，配置ServerName，修改主页，设置开机自启**
1.  **\[**root@ansible ansible**\]**\# vim http**.**yml
2.  
3.  **\-\--**
4.  **-** hosts**:** cache
5.  remote_user**:** root
6.  tasks**:**
7.  **-** name**:** install one specific version of Apache
8.  yum**:**
9.  name**:** httpd        //安装Apache
10. state**:** installed
11. **-** lineinfile**:**
12. path**:** /etc/httpd**/**conf**/**httpd**.**conf
13. regexp**:** \'\^Listen \'
14. line**:** \'Listen 8080\'        //修改端口为8080
15. **-** replace**:**
16. path**:** /etc/httpd**/**conf**/**httpd**.**conf
17. regexp**:** \'\^#(ServerName).\*\'        //配置ServerName
18. replace**:** \'**\\1** localhost\'
19. **-** service**:**
20. name**:** httpd
21. enabled**:** yes        //开机自启
22. state**:** restarted
23. **-** copy**:**
24. src**:** /root/index**.**html        //修改主页，可以自己写个页面
25. dest**:** /var/www**/**html**/**index**.**html
26. 
27. **\[**root@ansible ansible**\]**\# curl **192.168.1.56:8080**
28. hello world
29. **\[**root@ansible ansible**\]**\# ssh cache
30. Last login**:** Fri Sep **7** **09:32:05** **2018** from
    > **192.168.1.51**
31. **\[**root@cache **\~\]**\# apachectl **-**t
32. Syntax OK
## 2 案例2：变量练习
### 2.1 问题
> 本案例要求熟悉playbook进阶：
-   练习使用user模块添加用户
-   练习使用变量简化task，让play通用性更强
-   练习使用过滤器
### 2.2 步骤
> 实现此案例需要按照如下步骤进行。
>
> **步骤一：使用user模块添加用户，并修改密码**
1.  **\[**root@ansible ansible**\]**\# vim user**.**yml
2.  **\-\--**
3.  **-** hosts**:** cache
4.  remote_user**:** root
5.  vars**:**
6.  username**:** xiaoming
7.  tasks**:**
8.  **-** name**:** create user \"{{username}}\"
9.  user**:** group**=**wheel uid**=1000** name**={{**username**}}**
10. **-** shell**:** echo **123456** **\|** passwd **\--**stdin xiaoming
11. **-** shell**:** chage **-**d **0** **{{**username**}}**
12. **\[**root@ansible ansible**\]**\# ansible**-**playbook user**.**yml
    > //执行结果
13. 
14. PLAY **\[**cache**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
15. 
16. TASK **\[**Gathering Facts**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
17. ok**:** **\[**cache**\]**
18. 
19. TASK **\[**create user \" xiaoming \"**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
20. changed**:** **\[**cache**\]**
21. 
22. TASK **\[**command**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
23. changed**:** **\[**cache**\]**
24. 
25. TASK **\[**command**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
26. changed**:** **\[**cache**\]**
27. 
28. PLAY RECAP
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
29. cache **:** ok**=4** changed**=3** unreachable**=0** failed**=0**
> **步骤二：变量过滤器，创建一个用户，设置密码**
1.  **\[**root@ansible ansible**\]**\# vim user1**.**yml
2.  **\-\--**
3.  **-** hosts**:** cache
4.  remote_user**:** root
5.  tasks**:**
6.  **-** user**:**
7.  name**:** lisi
8.  group**:** root
9.  password**:** \"{{\'123456\' \| password_hash(\'sha512\')}}\"
10. **-** shell**:** chage **-**d **0** lisi
11. **\[**root@ansible ansible**\]**\# ansible**-**playbook
    > user1**.**yml
12. 
13. PLAY **\[**cache**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
14. 
15. TASK **\[**Gathering Facts**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
16. ok**:** **\[**cache**\]**
17. 
18. TASK **\[**user**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
19. changed**:** **\[**cache**\]**
20. 
21. TASK **\[**command**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
22. changed**:** **\[**cache**\]**
23. 
24. PLAY RECAP
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
25. cache **:** ok**=3** changed**=2** unreachable**=0** failed**=0**
> **步骤三：定义一个变量创建用户**
1.  **\[**root@ansible ansible**\]**\# vim user2**.**yml
2.  
3.  **\-\--**
4.  **-** hosts**:** cache
5.  remote_user**:** root
6.  vars**:**
7.  user**:** zhangs
8.  tasks**:**
9.  **-** user**:**
10. name**:** \"{{user}}\"
11. group**:** root
12. password**:** \"{{\'123456\' \| password_hash(\'sha512\')}}\"
13. **-** shell**:** chage **-**d **0** \"{{user}}\"
14. **\[**root@ansible ansible**\]**\# ansible**-**playbook
    > user2**.**yml
15. PLAY **\[**cache**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
16. 
17. TASK **\[**Gathering Facts**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
18. ok**:** **\[**cache**\]**
19. 
20. TASK **\[**user**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
21. changed**:** **\[**cache**\]**
22. 
23. TASK **\[**command**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
24. changed**:** **\[**cache**\]**
25. 
26. PLAY RECAP
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***
27. cache **:** ok**=3** changed**=2** unreachable**=0** failed**=0**
## 3 案例3：handlers练习
### 3.1 问题
> 本案例要求：
-   安装Apache软件
-   配置文件，重新载入配置文件让服务生效
-   使用handlers来实现
### 3.2 步骤
> 实现此案例需要按照如下步骤进行。
>
> **步骤一：error**
>
> playbook从上往下顺序执行，若报错，后面的命令不会在执行，若想解决有两种方法：
>
> 1）当返回值为假时，显示true： - shell: setenforce 0 \|\| true
1.  **\[**root@ansible ansible**\]**\# vim user5**.**yml
2.  **\-\--**
3.  **-** hosts**:** cache
4.  remote_user**:** root
5.  vars**:**
6.  user**:** bb
7.  tasks**:**
8.  **-** shell**:** setenforce **0** **\|\|** **true**
9.  **-** user**:**
10. name**:** \"{{user}}\"
11. group**:** root
12. password**:** \"{{\'123456\' \| password_hash(\'sha512\')}}\"
13. **-** shell**:** chage **-**d **0** \"{{user}}\"
14. 
15. **\[**root@ansible ansible**\]**\# ansible**-**playbook
    > user5**.**yml
16. 
17. PLAY **\[**cache**\]**
    > **\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\***