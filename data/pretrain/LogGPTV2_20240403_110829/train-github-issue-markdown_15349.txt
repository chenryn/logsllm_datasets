This appears to be valid:
    import os
    os.environ["XLA_FLAGS"] = '--xla_force_host_platform_device_count=8'
    import functools
    import jax
    import jax.numpy as jnp
    import numpy as np
    @functools.partial(jax.custom_vjp, nondiff_argnums=(1,))
    def custom_psum(x, axis_name):
      return x
    def fwd(x, axis_name):
      print('fwd_arg0', x)
      print('fwd_arg1', axis_name)
      return custom_psum(x, axis_name), None
    def bwd(axis_name, res, g):
      print('bwd_arg0', axis_name)
      print('bwd_arg1', res)
      print('bwd_arg2', g)
      del axis_name, res
      return (g,)
    custom_psum.defvjp(fwd, bwd)
    def loss_fn(x):
      return jnp.sum(custom_psum(x, 'i'))
    jax.pmap(jax.grad(loss_fn), 'i')(np.random.random((8, 2, 3)))
It appears that the non-diff arguments are brought to the front for `bwd`, but
not `fwd`.  
However, the document implies that they should be moved for both `fwd` and
`bwd`:  
https://jax.readthedocs.io/en/latest/notebooks/Custom_derivative_rules_for_Python_code.html#jax.custom_vjp-
with-nondiff_argnums