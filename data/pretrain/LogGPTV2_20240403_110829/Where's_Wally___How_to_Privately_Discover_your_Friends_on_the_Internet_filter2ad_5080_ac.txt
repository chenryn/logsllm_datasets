6 DISCUSSION AND CONCLUSION
Colluding nodes. There is a case, where the infrastructure PROUD
leverages may be hostile with an adversary compromising both
parts of our system (authoritative servers and DNS resolvers). Then,
these nodes may collude and link (a) record updates of authoritative
5
Figure 6: Querying latency from different geolocations when the
authoritative server is located in Europe. In most of the cases the
response time is less than 1 sec.
We repeat each operation 100 times and in Figure 2 we report the
average values. As we can see, the average latency of our service
reaches 0.7 sec for a new friendship operation and 0.59 sec for an
update friendship operation. On the other hand, in the vanilla case,
the same record operations cost 0.37 sec and 0.36 sec respectively.
This practically insignificant 0.3 sec latency imposed in each oper-
ation of our system is caused by the cryptographic computations.
A user, to allow their friends to continue following them uninter-
ruptedly when they move inside a network, has to update all of
their friendship records as soon as they change network address.
In our prototype, we use threads to perform such multiple update
operations in parallel and achieve the lowest possible latency. In
Figure 3, we present the time it takes for a user to update all of
their friendship records as a function of the number of followers
in the user’s followers-list. As we see, even for a large number of
followers (i.e., 500 followers), the update time for the entire list is
reasonably low, less than 3.5 sec on average.
Next, we quantify the amount of traffic the most heavy-load
operation of PROUD: the update operation, generates as a factor
of the number of followers. To do so, we trigger a new epoch
on the user’s device and we measure the bytes uploaded to the
authoritative server. As we can see in Figure 4, there is a linear
increase generating a traffic of up to 0.36 MBytes when a list of 200
followers gets updated. This volume overhead is reasonably low
even for cellular networks. In addtion, Figure 5 shows the average
bandwidth consumption as a function of the followers-list size.
We notice that even in the case of 500 followers the bandwidth
consumption needed for updating all friendship records is less than
0.32 KBps on average. Evidently, the total bandwidth consumed
during the update operation is not really an issue, even for users
with lots of followers using cellular network connections.
In Figure 6, we measure the response time of queries in PROUD
from different geographic locations, when the authoritative server is
located in Europe. We notice that even for the most remote location,
the Fiji islands, the response time was as low as 0.7 sec. According
to Ratatype [30], users can produce on average 41.4 words (207
keystrokes) per minute when chatting, and according to [18, 40] an
IM transmission contains approximately 29 characters on average.
This means that a user needs more than 2 sec to type even a short
message of 10 characters. This window is more than enough for
PROUD to retrieve the friend’s new network address.
TTL reduces the load of servers but in PROUD, it may also create
service hiccups: very low TTL values can cause relatively high
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8UKSpainUSA, FLRussiaIndiaUSA, CAMalaysiaSouth AfricaJapanChileThailandTaiwanBrazilParaguayAustraliaFijiResponse time (sec)Locationserver and (b) queries received by the resolver, thus inferring who
queries whose record. An adversary able to compromise such large
parts of the global DNS network is considered very powerful (one
may also say unrealistic). However, even in this case, the powerful
adversary will be able to correlate only individual user associations
and not the entire social graph of the querying user. In particular,
he will be able to reveal only the user’s associations with friends
using the specific compromised authoritative server.
Users behind NAT and IPv6. Most distributed applications
nowadays suffer when end-nodes are not in the same address realm.
This situation affects all users behind NAT. However, in the near
future, with the rise of IPv6, every device will have its own network
address without needing any such layer. Current metrics put IPv6
at a minimum of 20% global adoption [8], and local uses (within a
country) to over 50%. Additionally, IPv6 provides Privacy Exten-
sions [22], which enables devices to frequently change network
addresses within a day to preserve their privacy. It is apparent, that
with such a functionality in place, the necessity for efficient privacy-
preserving User Discovery becomes crucial. Of course, currently
there are several practices for NAT penetration including the use
of a trusted rendezvous point [11] or hole punching [7]. Given the
short remaining life of NAT, this issue is beyond the User Discovery
procedure and thus beyond the scope of this paper.
Conclusion: This paper proposes PROUD: a scalable privacy-
preserving user discovery service able to protect both (i) data (user’s
current IP address) and (ii) metadata (who queries for whom). In
PROUD, we decouple the user discovery from the application and
we build a standalone service, which leverages the existing network
DNS. This way, our approach is scalable and immediately applicable.
Furthermore, in PROUD, we allow the users delegate trust among
each other without relying on any centralized infrastructure that
has to be blindly trusted. We implemented a prototype by building
an IM on top of PROUD. Results of our evaluation show that even
for very large contact lists, it has minimal bandwidth requirements
and imposes practically negligible latency to the user experience.
Acknowledgments: The research leading to these results has
received funding from European Union’s Marie Sklodowska-Curie
grant agreement No 690972. The paper reflects only the authors’
view and the Agency and the Commission are not responsible for
any use that may be made of the information it contains.
REFERENCES
[1] M. Ali, R. Shea, J. Nelson, and M. J. Freedman. Blockstack: A new internet for
decentralized applications. Technical Report, 2017.
[2] S. Angel and S. Setty. Unobservable communication over fully untrusted in-
frastructure. In OSDI’16.
[3] BI Intelligence. Messaging apps are now bigger than social networks.
http://www.businessinsider.com/the-messaging-app-report-2015-11, 2016.
[4] N. Borisov, G. Danezis, and I. Goldberg. Dp5: A private presence service. In
PET’15.
[5] A. A. Chariton, E. Degkleri, P. Papadopoulos, P. Ilia, and E. P. Markatos. Dcsp:
Performant certificate revocation a dns-based approach. In EuroSec ’16.
[6] B. Chor, O. Goldreich, E. Kushilevitz, and M. Sudan. Private information re-
trieval. In FOCS’95, 1995.
[7] B. Ford, P. Srisuresh, and D. Kegel. Peer-to-peer communication across net-
work address translators. In ATC ’05.
[8] Google. Google ipv6 statistics. https://www.google.com/intl/en/ipv6/statistics.html.
[9] P. Hoffman and J. Schlyter.
The DNS-based authentication of
named entities (DANE) transport layer security (TLS) protocol: TLSA.
https://tools.ietf.org/html/rfc6698, 2012.
[10] C. Jernigan and B. F. Mistree. Gaydar: Facebook friendships expose sexual
orientation. First Monday, 14(10), 2009.
[11] T. Kato, N. Ishikawa, H. Sumino, J. Hjelm, Y. Yu, and S. Murakami. A platform
and applications for mobile peer-to-peer communications. In MobEA ’03, 2003.
internet.
The mission
decentralize
Kopstein.
[12] J.
the
to
http://www.newyorker.com/tech/elements/the-mission-to-decentralize-
the-internet, 2013.
[13] M. Krochmal and S. Cheshire. Dns-based service discovery. 2013.
[14] B. Laurie. Apres-a system for anonymous presence. Technical Report.
[15] S. Le Blond, C. Zhang, A. Legout, K. Ross, and W. Dabbous.
I know where
you are and what you are sharing: Exploiting p2p communications to invade
users’ privacy. In IMC ’11.
[16] Legion of
the Bouncy Castle Inc.
http://www.bouncycastle.org/.
Bouncy castle crypto apis.
[17] J. R. Levine. Dns based blacklists and whitelists. 2010.
[18] R. Ling and N. S. Baron. Text messaging and im linguistic comparison of
american college data. Journal of Language and Social Psychology, 2007.
[19] M. Marlinspike. Technology preview: Private contact discovery for signal.
https://signal.org/blog/private-contact-discovery/, 2017.
[20] P. Maymounkov and D. Mazières. Kademlia: A peer-to-peer information sys-
tem based on the xor metric. In IPTPS’01.
[21] A. Mislove, B. Viswanath, K. P. Gummadi, and P. Druschel. You are who you
know: Inferring user profiles in online social networks. In WSDM ’10, 2010.
[22] T. Narten, R. Draves, and S. Krishnan. Privacy extensions for stateless address
autoconfiguration in ipv6. 2007.
Facebook
[23] P. Olson.
closes
19
billion whatsapp
deal.
www.forbes.com/sites/parmyolson/2014/10/06/facebook-closes-19-billion-
whatsapp-deal.
[24] E. P. Papadopoulos, M. Diamantaris, P. Papadopoulos, T. Petsas, S. Ioannidis,
and E. P. Markatos. The long-standing privacy debate: Mobile websites vs
mobile apps. In WWW’17.
[25] P. Papadopoulos, N. Kourtellis, and E. P. Markatos. The cost of digital adver-
tisement: Comparing user and advertiser views. In WWW’18.
[26] P. Papadopoulos, N. Kourtellis, and E. P. Markatos. Exclusive: How the
(synced) cookie monster breached my encrypted vpn session. In Eurosec’18.
[27] P. Papadopoulos, N. Kourtellis, P. R. Rodriguez, and N. Laoutaris. If you are
not paying for it, you are the product: How much do advertisers pay to reach
you? In IMC ’17.
[28] P. Papadopoulos, A. Papadogiannakis, M. Polychronakis, A. Zarras, T. Holz,
and E. P. Markatos. K-subscription: Privacy-preserving microblogging brows-
ing through obfuscation. In ACSAC ’13.
but
Peterson.
data.
user
goes
switch/wp/2015/03/26/bankrupt-radioshack-wants-to-sell-off-user-data-
but-the-bigger-risk-is-if-a-facebook-or-google-goes-bust/, 2015.
off
google
https://www.washingtonpost.com/news/the-
radioshack wants
to
facebook
Bankrupt
bigger
bust.
risk
sell
the
or
is
if
a
[29] A.
[30] Ratatype.
Average
typing
speed
infographic.
http://www.ratatype.com/learn/average-typing-speed/.
[31] M. Richtel.
F.t.c. moves
to halt
sale of database at
toysmart.
http://www.nytimes.com/2000/07/11/business/ftc-moves-to-halt-sale-of-
database-at-toysmart.html, 2000.
[32] G. M. Robert-Jan Bartunek, Philip Blenkinsop. Eu fines facebook 110 million
euros over whatsapp deal. http://www.reuters.com/article/us-eu-facebook-
antitrust-idUSKCN18E0LA, 2017.
[33] S. Rowlands. Mobile messaging: War of the words. Whitepaper, 2014.
[34] D.
personal
bankrupt with
Solove.
Going
your
https://www.teachprivacy.com/going-bankrupt-with-your-personal-data/,
2015.
[35] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, and H. Balakrishnan. Chord:
In SIG-
A scalable peer-to-peer lookup service for internet applications.
COMM’01.
[36] J. Van Den Hooff, D. Lazar, M. Zaharia, and N. Zeldovich. Vuvuzela: Scalable
data.
private messaging resistant to traffic analysis. In SOSP’15.
[37] M. Wachs, M. Schanzenbach, and C. Grothoff. A censorship-resistant, privacy-
enhancing and fully decentralized name system. In CANS’14.
[38] B. Wellington. The dnsjava project. http://www.xbill.org/dnsjava/, 2002.
[39] J. I. Wong. Here’s how often apple, google, and others handed over data
when the us government asked for it.
https://qz.com/620423/heres-how-
often-apple-google-and-others-handed-over-data-when-the-us-government-
asked-for-it/, 2016.
[40] Z. Xiao, L. Guo, and J. Tracey. Understanding instant messaging traffic char-
acteristics. In ICDCS ’07.
6