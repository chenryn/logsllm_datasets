资产管理维度，通过手动导入/导入CSV
/日志提取/对接CMDB/对接其他第三方系统等方式获取资产信息，同时针对资产维度，查看对应资产的威胁告警、安全事件、漏洞信息以及资产变更记录等，对资产管理可实现界面化编辑、删除、更新、新增等功能，便于日常的安全资产管理。同时，也可以将资产库定时输出成CSV文件至后台，以进行其他事件的关联分析；
情报管理维度，可对多个不同的情报源进行界面化自定义管理，自定义情报解析字段，自定义关联维度等，并实现不同来源的情报信息统一展示。
具备安全分析流程化能力，可嵌入SOAR模块实现处置流程编排，配合自动化响应，提供界面化编排能力
具备图分析能力，大数据分析平台在日志分析的基础上，可定义日志中不同事件的某些字段为图节点，并根据节点之间产生的攻击行为、网络连接行为、登录行为以及操作行为等关系，为攻击链路的分析提供图分析能力，从而实现对威胁IOC的追踪溯源，构建威胁分析的关系图谱。
具备流式实时分析能力，大数据分析平台建设之CEP实时处理引擎，可对威胁事件实现实时分析处置以及时序上的关联分析（不同事件按照时间序列前后发生，则有异常。如某主机上某账户先发生多次暴力破解，再发生登录成功，则为可疑的暴力破解成功），与SPL搜索引擎成为分析双引擎，最终减少威胁检测时间，整体提升安全运营的效率。
# 技术**创新**与特色
1.  使用国产高性能高可用性的日志搜索引擎Beaver，每天可处理数百TB日志，搜索29亿条数据，14s内搜索完毕。2021年1月15日，通用的开源软件Elasticsearch和Kibana修改开源许可协议，新的开源协议将从右派的apache
    2.0许可转向极左的SSPL许可协议，基础软件、平台软件的核心研发需要实现真正的自主化与国产化。本项目采用的Beaver为国产开发的搜索引擎，拥有独立知识产权，同时在性能方面提升5-10倍，将硬件成本降低了50%，符合国家信创战略发展方向。基于历史长周期数据以及实时数据，针对企业内外部威胁进行检测、分析以及响应，并通过自动化能力，减少发现与响应威胁的时间，提高安全运营效率。
    beaver与ElasticSearch的对比：
+-----------------------+-----------------------+-----------------------+
| **Beaver VS ES**      | **ES**                | **Beaver**            |
+-----------------------+-----------------------+-----------------------+
| **实时性高**          | 1.准实时索引检索引擎  | 1.纯实时索引检索引擎  |
|                       |                       |                       |
|                       | 2.模                  | 2.内                  |
|                       | 拟实时需要定期Flush将 | 存原地检索不必耗费I/O |
|                       | 数据转化成磁盘结构（  |                       |
|                       | Refresh）,会消耗大量  |                       |
|                       | IO                    |                       |
+-----------------------+-----------------------+-----------------------+
| **并发写入效率高**    | 1.Se                  | 1\.                   |
|                       | gment只能由一个线程写 | Segment支持内部并发写 |
| 写                    |                       |                       |
| 入效率beaver比es提升  | 2.                    | 2.单Segment           |
|                       | 产生的Segment的数目极 | 更大，减少Segment数量 |
| 400%－500%            | 多，每个Segment的DOC  |                       |
|                       | 数目少，严重依赖Merge | 3\.                   |
|                       |                       | Merge的规模           |
|                       | 3\.                   | 小，正常情况下因Merge |
|                       | Mer                   | 产生的IO和CPU消耗很低 |
|                       | ge会占用大量的IO和CPU |                       |
|                       |                       |                       |
|                       | 4\.                   |                       |
|                       | Me                    |                       |
|                       | rge不及时会导致低性能 |                       |
+-----------------------+-----------------------+-----------------------+
| **搜索性能高**        | 1.实时系统            | 1\. Global            |
|                       | 中会导致频繁的Global  | Ordinal能长期使用     |
| 查询                  | Ordinal失效和重建     |                       |
| 性能beaver比es提升50% |                       | 2.可以根据时          |
|                       | 2.由于Segm            | 间戳和Query的范围排除 |
| 统                    | ent频繁变动导致Global | 大量不需要检索的Block |
| 计性能beaver比es提升  | Ordinal大量失效       |                       |
|                       |                       | 3                     |
| 100%－200%            | 3.每次检索都          | .某些情况下可以优化Qu |
|                       | 需要检索全部的Segment | ery，不进行时间戳过滤 |
|                       |                       |                       |
|                       | 4.按时间排序取Top     | 4.按时间戳排序取Top   |
|                       | N的算法不够高效       | N时排除掉大量的Block  |
+-----------------------+-----------------------+-----------------------+
| **有效的内存控制**    | 1.能同                | 1.选择性加载Meta      |
|                       | 时打开的索引数目有限  |                       |
| 能同时打开更多索引    |                       | 2.可以管理            |
|                       | 2.                    | 的Segment没有内存限制 |
|                       | 所有打开的Segment都需 |                       |
|                       | 要加载全部数据的Meta  | 3.M                   |
|                       |                       | eta耗费的内存可以控制 |
|                       | 3.M                   |                       |
|                       | eta往往耗费大量的内存 |                       |
+-----------------------+-----------------------+-----------------------+
| **更有效              | 1.长期保留索引时，需  | 1                     |
| 冷温热索引分级控制**  | 要把所有索引源数据打  | .对索引打开数量不敏感 |
|                       | 开，带来很大资源消耗  |                       |
|                       |                       | 2.引擎会              |
|                       | 2.需要上              | 自动根据ssd，sata，na |
|                       | 层干预索引打开和关闭  | s不同级别存储完成热， |
|                       |                       | 温，冷索引迁移和控制  |
|                       | 3.无法                |                       |
|                       | 自动进行索引分级控制  |                       |
+-----------------------+-----------------------+-----------------------+
| **采用性能更          | 1.采用Java开发        | 1.无GC风险            |
| 优，内存控制更好的C++ |                       |                       |
| 语言开发**            | 2.高性能依赖JIT编译器 | 2                     |
|                       |                       | .性能优化可以做到极致 |
|                       | 3.容易引起GC          |                       |
|                       |                       | 3.内存使用完全可控    |
+-----------------------+-----------------------+-----------------------+
| **节省硬件成本**      | *[同                  |                       |
|                       | 样入库和查询条件下，b |                       |
|                       | eaver比es要节省一半硬 |                       |
|                       | 件成本]{.underline}*  |                       |
+-----------------------+-----------------------+-----------------------+
2.  基于Flink和SPL建模语言的0Day识别能力和处置技术
Flink被视为近实时处理领域的最佳解决方案。该技术可以用极低延迟处理数据，能获得最低延迟的工作负载。如果处理速度直接影响用户体验，Flink与Trident配合则可以用微批代替纯粹的流处理。
![](media/image6.png){width="6.590277777777778in"
height="4.777777777777778in"}
通过国内厂家自主研发的SPL搜索处理语言和流式分析引擎，基于接入的日志和流量，通过关联、对比、统计等分析方式，配置安全分析策略，并对接开源和商业威胁情报，实现安全攻击模型及场景的构建，做到实时感知攻击行为，覆盖日常运维分析和安全分析工作需求，轻松实现运维与安全场景的异常检测，为企业数字化安全转型提供双重保障。在出现安全事件时，自动关联资产、漏洞、情报信息，可通过平台进一步从端点层、网络层、攻击链、溯源图谱分析安全事件，并可直接对告警事件配置工单任务和阻断动作。另外，将行内多个分析系统页面嵌入平台统一管理，作为网络攻防演习等日趋常态化重保防守工作中的核心安全管理平台，统一进行攻击监测、告警、可视化及自动化处置，有效提升我行信息安全防护能力
三、实现安全事件闭环管理及自动化响应。
通过任务管理功能，推动安全事件处置流程的闭环管理，将告警分发给相关负责人，形成多角色多用户协同响应。通过剧本编排，根据匹配条件选择对应的响应Playbook进行处置，实现自动封禁IP、发送短信、发送微信等动作，自动化联动行内互联网出口设备（防火墙/IPS/WAF等）实现对高危安全事件的自动化阻断防护。
# 项目评估
[]{#_Toc195411180 .anchor}7.1可行性
该项目采用已实验运行稳定可靠的软件平台、成熟的开发技术，能保证系统的高可靠性和稳定性，确保系统的正常运行，系统支持主流的标准或规范。具备可行性。
[]{#_Toc117325880 .anchor}7.2完整性
[]{#_Toc175321509 .anchor}7.3兼容性
对国产化服务具有兼容性，目前支持指令集如下：
  -------------------- ----------------------- --------------- ----------------------------
  指令集               架构                    芯片            所属公司
  cisc（复杂指令集）   x86                     海光            海光信息
                                               兆芯            上海兆芯集成电路有限公司
  RISC（精简指令集）   ARM（Acom RISC Machine  飞腾            天津飞腾信息技术有限公司
                       Acom精简指令集机器）                    
                                               鲲鹏            华为海思
                       MIPS                    龙芯            龙芯中科技术有限公司
                       Alpha                   申威            上海高性能集成电路中心研制
  -------------------- ----------------------- --------------- ----------------------------
同时本项目已实现兼容3款国产化服务器CPU，Agent兼容3款国产化CPU，5款国产操作系统，满足我行未来5年国产化升级需求
![](media/image7.png){width="6.594444444444444in" height="1.19375in"}
安全大数据分析平台具备良好的二次开发能力，具有较强的功能扩展能力和接口扩展能力，以适应未来5-10年各种业务的发展。并预留多系统对接扩展能力，为适应不同平台通讯报文标准的差异，提供如消息队列、HTTP、Web
service、XML等多样化通用通讯格式，满足多系统多标准系统对接工作。
#  结束语