## 1. 调试环境配置

本文分析的漏洞是长亭科技在某届GeekPwn上提交的一个路由器漏洞。该路由器运行的是嵌入式ARM Linux系统，并集成了Xware程序，所讨论的漏洞存在于Xware中。我们首先需要找到存在漏洞的固件版本，这些版本可以从官方论坛下载。

### 固件解包
使用`binwalk`工具对固件进行解包：
```bash
# dlive @ pwn in /tmp [14:25:56]
$ binwalk -Me XXXV100R001C01B032SP03_main.bin
```
输出结果如下：
```
Scan Time:     2018-03-13 14:26:08
Target File:   /tmp/XXXV100R001C01B032SP03_main.bin
MD5 Checksum:  f8fc51edfc499d98297da3cb9ed20f13
Signatures:    386
DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
67022         0x105CE         Squashfs filesystem, little endian, version 4.0, compression:xz, size: 10486308 bytes, 1100 inodes, blocksize: 1048576 bytes, created: 2016-02-16 02:09:03
10556878      0xA115CE        uImage header, header size: 64 bytes, header CRC: 0x6FE316DA, created: 2016-02-16 02:03:53, image size: 1458856 bytes, Data Address: 0x80408000, Entry Point: 0x80408000, data CRC: 0x97747C02, OS: Linux, CPU: ARM, image type: OS Kernel Image, compression type: lzma, image name: "Linux-3.6.30"
10556942      0xA1160E        LZMA compressed data, properties: 0x5D, dictionary size: 8388608 bytes, uncompressed size: 3839712 bytes
...
```

解包成功后，在`squashfs-root`目录下可以看到路由器的文件系统结构：
```bash
# dlive @ pwn in /tmp/_XXXV100R001C01B032SP03_main.bin.extracted/squashfs-root [14:27:34]
$ ls -la
total 64
drwxr-xr-x 16 dlive dlive 4096  2月 16  2016 .
drwxrwxr-x  4 dlive dlive 4096  3月 13 14:26 ..
drwxrwxrwx  2 dlive dlive 4096  2月 16  2016 bin
drwxr-xr-x  2 dlive dlive 4096 12月 23  2015 config
drwxrwxrwx  3 dlive dlive 4096  2月 16  2016 dev
drwxrwxrwx  8 dlive dlive 4096  2月 16  2016 etc
drwxr-xr-x  3 dlive dlive 4096  2月 16  2016 home
drwxr-x---  2 dlive dlive 4096  2月 16  2016 html
lrwxrwxrwx  1 dlive dlive   13  2月 16  2016 init -> ./bin/busybox
drwxrwxrwx  4 dlive dlive 4096  2月 16  2016 lib
lrwxrwxrwx  1 dlive dlive    3  2月 16  2016 lib64 -> lib
lrwxrwxrwx  1 dlive dlive   11  2月 16  2016 linuxrc -> bin/busybox
drwxrwxrwx  2 dlive dlive 4096 12月 23  2015 mnt
drwxrwxrwx  2 dlive dlive 4096 12月 23  2015 proc
drwxrwxrwx  2 dlive dlive 4096  2月 16  2016 sbin
drwxr-xr-x  2 dlive dlive 4096 12月 23  2015 sys
drwxr-xr-x  2 dlive dlive 4096 12月 23  2015 tmp
drwxrwxrwx  6 dlive dlive 4096  2月 16  2016 usr
drwxrwxrwx  3 dlive dlive 4096  2月 16  2016 var
```

### 二进制文件启动
根据长亭科技的文章描述，通过搜索特征字符串可以找到存在漏洞的二进制文件`/bin/etm`。尝试直接执行该二进制文件时会失败：
```bash
# dlive @ pwn in ~/Desktop/IoT/case-study/1-ARM-huwei_XXX/XXX/squashfs-root [14:30:21] C:125
$ sudo chroot ./ ./qemu-arm-static ./bin/etm
[sudo] password for dlive:
log.ini not exist!
logger_load_cfg log.ini fail:102301
etm_init_env fail:102301
```

通过分析相关脚本和配置文件，发现`/bin/etm`的启动参数如下：
```bash
./bin/etm --system_path=/etc --disk_cfg=/etc/thunder_mounts.cfg --etm_cfg=/etc/etm.ini --log_cfg=/etc/log.ini --pid_file=/etc/xunlei.pid --license=1411260001000003p000624lcubiwszdi3fs2og66q
```

### 调试环境
调试环境使用树莓派，安装了官方系统。将`gdbserver`的动态链接库拷贝到路由器文件系统中，然后使用`chroot`和`gdb/gdbserver`进行调试：
```bash
sudo chroot ./ ./gdbserver :1234 ./bin/etm --system_path=/etc --disk_cfg=/etc/thunder_mounts.cfg --etm_cfg=/etc/etm.ini --log_cfg=/etc/log.ini --pid_file=/etc/xunlei.pid --license=1411260001000003p000624lcubiwszdi3fs2og66q
```

也可以使用`qemu`启动`etm`并开启远程调试：
```bash
sudo chroot ./ ./qemu-arm-static -g 1234 ./bin/etm --system_path=/etc --disk_cfg=/etc/thunder_mounts.cfg --etm_cfg=/etc/etm.ini --log_cfg=/etc/log.ini --pid_file=/etc/xunlei.pid --license=1411260001000003p000624lcubiwszdi3fs2og66q
```

远程调试命令：
```bash
gdb bin/etm
(gdb-peda) target remote 127.0.0.1:1234
```

## 2. 漏洞分析

### 2.1 分析要点
在逆向分析路由器上的二进制Web Server时，应注意以下几点以提高效率：
1. 关注无需认证即可访问的功能，重点关注用户输入。
2. 对于TCP Server，关注`bind/listen/recv`的使用，重点关注用户输入。
3. 对于UDP Server，关注`bind/recvfrom`的使用，重点关注用户输入。
4. 对于已知协议的Server（如HTTP Server），关注协议关键词（如`GET/POST/Cookie`）。
5. 结合动态调试和静态分析，关注数据流和控制流。

### 2.2 逻辑分析
从`main`函数开始，程序进行了一系列初始化和配置工作，然后进入`etm_start`。在`etm_initialize`中调用了`lc_initialize`函数，初始化了HTTP路由。可以通过URL访问以下路径：`login`、`settings`、`logout`、`stophunter`、`speedlimit`等。

未登录状态下可访问的路径有：`login`、`settings`、`logout`、`stophunter`、`speedlimit`等。主逻辑中创建了线程处理HTTP请求，`sub_82b24`为HTTP请求处理函数。

### 2.3 snprintf导致信息泄露 (CVE-2016-5367)
信息泄露漏洞存在于`sub_A7704`函数中，该函数处理`login`请求时误用了`snprintf`的返回值。当返回值大于0x100时，返回给客户端的数据长度大于缓冲区长度，导致堆数据泄露，其中包括libc基址。

### 2.4 ini配置注入 (CVE-2016-5366)
同样在`login`功能中，程序获取HTTP请求中的Cookie值，并通过`set_huiyuan_info`和`set_huiyuan_check_info`将其设置到内存中的`etm_cfg`中。`setting_flush`函数将`etm_cfg`中的数据写入`etm.ini`文件。由于未对`\n`进行特殊处理，可能导致配置文件注入。

### 2.5 栈溢出 (CVE-2016-5365)
栈溢出漏洞存在于`license_start`函数中，该函数调用`parse_server_addr`解析`etm.ini`中的`server_addr`。代码中没有对字符串拷贝进行限制，导致栈溢出。目标缓冲区`dest`是`license_start`函数的局部变量。

### 3. exp开发

#### 3.1 badchars
在开发利用代码之前，查看程序的安全保护措施：
```bash
$ checksec etm
[*] '/mnt/hgfs/case-study/1-ARM-huwei_XXX/exploit/etm'
    Arch:     arm-32-little
    RELRO:    No RELRO
    Stack:    No canary found
```

以上是优化后的文本，更加清晰、连贯和专业。希望对你有所帮助！