# Outsourced Private Set Intersection Protocol (OPSI)

## 1. Introduction
In the context of private set intersection (PSI), we present an outsourced protocol that leverages homomorphic encryption to securely compute the intersection of two sets without revealing any additional information. The problem with existing methods, such as the SYY technique, is that they cannot evaluate formulas with a multiplicative depth greater than one. To address this, we introduce a new combination of homomorphic encryption systems that can handle the required operations.

## 2. Problem Statement
The formula for evaluating the intersection has a multiplicative depth of 2, which exceeds the capabilities of the SYY technique. We propose using Boneh, Goh, and Nissim (BGN) encryption, which allows for one multiplication of fan-in 2, complemented by unbounded addition. This enables us to evaluate the first logical-and operation, followed by the SYY technique for the second logical-and.

## 3. Boneh, Goh, Nissim (BGN) Encryption

### 3.1 Simplification of BGN Encryption
We simplify the BGN encryption system based on techniques from GM encryption, reducing the plaintext domain from \( \mathbb{Z}_q \) to \( \mathbb{Z}_2 \). This simplification offers several advantages:
- Decryption no longer requires solving the discrete logarithm problem.
- The plaintext domain does not need to be kept secret by the private key holder.
- Any party can perform operations, such as negation, in the group of the plaintext.

### 3.2 Cryptographic Pairings
Given a security parameter \( \kappa \), let \( G_1 \) and \( G_2 \) be two groups of order \( n = pq \) for large primes \( p \) and \( q \), where the bit-size of \( n \) is determined by \( \kappa \). Our scheme uses a computable, non-degenerate bilinear map \( \hat{e} : G_1 \times G_1 \to G_2 \). Examples of such maps include modified Weil or Tate pairings on supersingular elliptic curves. The bilinear pairing satisfies the following properties:
- **Bilinear**: For \( g, h \in G_1 \) and \( a, b \in \mathbb{Z}_n^* \), \( \hat{e}(g^a, h^b) = \hat{e}(g, h)^{ab} \).
- **Non-degenerate**: \( \hat{e}(g, g) \neq 1 \) and is a generator of \( G_2 \).

### 3.3 Algorithm
We encode a 0 as a quadratic residue in \( G_1 \) and a 1 as a pseudo-quadratic residue in \( G_1 \). Let \( E_1(x) \) denote the encryption of plaintext \( x \) in the first stage and \( D_1(c) \) the corresponding decryption. The first-stage encryption is homomorphic in the exclusive-or operation:
\[ D_1(E_1(x) \cdot E_1(y)) = x \oplus y \]

Using the properties of the bilinear map, we can perform one logical-and operation on two ciphertexts. The result will be either a quadratic residue or a quadratic non-residue in \( G_2 \). We then have a second-stage encryption scheme following the GM construction. Let \( E_2(x) \) denote the encryption of plaintext \( x \) in the second stage and \( D_2(c) \) the corresponding decryption:
\[ D_2(\hat{e}(E_1(x), E_1(y))) = x \land y \]
The second-stage encryption system is also homomorphic in the exclusive-or operation:
\[ D_2(E_2(x) \cdot E_2(y)) = x \oplus y \]

We can now use the SYY technique on the second-stage encryption for unbounded fan-in logical-and. Let \( E_l^2(x) \) denote the expanded ciphertext (using the same Expand algorithm as in Section 3.2):
\[ D_l^2(E_l^2(x) \times E_l^2(y)) = x \land y \]

### 3.4 Security
We adopt the IND-CPA security model for our construction. Our encryption algorithm does not involve any new primitives but is a simplification of BGN encryption to GM encryption. We make the following proposition:
**Proposition 1.** If the quadratic residuosity assumption holds, then our encryption scheme is IND-CPA secure.

## 4. Protocol
In the outsourced protocol, we introduce a third party, the service provider \( P \). Both the client and server send their encrypted inputs to the service provider, who does not learn anything about either inputs or output. Figure 4 shows the protocol.

### 4.1 Security Proof
The security of this protocol (in the semi-honest model) follows from the security of the encryption scheme. In case of outsourcing, we must simulate the view of the service providerâ€”an additional party in the ideal model. We consider the service provider as just another party in the protocol with no input or output, i.e., its view is empty in the ideal model. It does not interact with the trusted server.

**Theorem 3.** If the quadratic residuosity assumption holds, then protocol OPSI implements private set intersection in the semi-honest model.

**Proof.** The server receives no messages, and the client only receives the intersection, making simulators trivial. In the protocol execution, the service provider only receives encrypted messages, so a simulator only needs to simulate ciphertexts. These are all independent due to IND-CPA security of our encryption scheme.

## 5. Conclusions
We have investigated private set intersection protocols and presented a novel construction based on Bloom filters and homomorphic encryption. Our construction is secure against malicious adversaries in the standard model. Furthermore, we allow the client to certify its set with a trusted third party and hide the size of the client set from the server. Our construction is efficient, with optimal complexity and constants similar to protocols only secure in the random oracle model. We extend our construction to outsourcing the computation of the intersection to an oblivious service provider, making private set intersection amenable to secure cloud computing.

## 6. References
[References listed as in the original text]