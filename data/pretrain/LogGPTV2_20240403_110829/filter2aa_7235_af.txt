- [【技术分享】CTF中RSA的常见攻击方法](https://www.anquanke.com/post/id/84632)
- [RSA 私钥恢复和最优非对称加密填充](https://www.40huo.cn/blog/rsa-private-key-recovery-and-oaep.html)
- [CTF中常见的RSA相关问题总结[转]](https://willv.cn/2018/07/21/RSA-ATTACK/)
- [[原创]CTF中RSA的一些攻击思路](https://bbs.pediy.com/thread-254252.htm)
- [CTF中的RSA及攻击方法笔记](https://www.freebuf.com/articles/web/257835.html)
- [CTF密码学之RSA攻击算法](https://mp.weixin.qq.com/s/sBeUUx0SNWB5HPfVCpxu5g)
- [CTF中RSA套路](https://err0rzz.github.io/2017/11/14/CTF%E4%B8%ADRSA%E5%A5%97%E8%B7%AF/)
- [RSA算法基础详解](https://www.cnblogs.com/hykun/p/RSA.html)
- [RSA算法原理——（3）RSA加解密过程及公式论证](https://blog.csdn.net/u014044812/article/details/80866759)
- [深入浅出RSA在CTF中的攻击套路](https://xz.aliyun.com/t/6459)
**相关工具**
- [SageMath](https://mirrors.tuna.tsinghua.edu.cn/sagemath/linux/64bit/index.html)
    - [Sage Cell Server](https://sagecell.sagemath.org/) - 在线 Sagemath
- [factordb](http://www.factordb.com/) - 在线分解质因数, 通常用于分解 n 得到 p q
  - [ryosan-470/factordb-python](https://github.com/ryosan-470/factordb-python) - 命令行分解
    ```bash
    pip install factordb-python
    factordb 16
    ```
- [yafu](https://sourceforge.net/projects/yafu/) - 在 p，q 的取值差异过大，或者 p，q 的取值过于相近的时候，Format 方法与 Pollard rho 方法都可以很快将 n 分解成功。yafu 将其自动化实现了
    ```bash
    yafu "factor(82748279383502845283943271120712436408030814624973629060064917325126552245423)"
    # 如果数比较大，那就需要将数保存成一个txt，然后使用
    # 注意：
    # 1. n 为十进制
    # 2. txt文件结尾必须有一个换行符
    # 3. 该命令会删除这个txt，注意保存
    yafu-x64.exe "factor(@)" -batchfile 1.txt
    ```
- [在线Rsa 公私钥分解 Exponent、Modulus，Rsa公私钥指数、系数(模数)分解](http://tool.chacuo.net/cryptrsakeyparse) - 在线解析加密公钥|私钥格式
- RSAtool 2
- [Ganapati/RsaCtfTool](https://github.com/Ganapati/RsaCtfTool)
    ```bash
    # 提取公钥
    python3 RsaCtfTool.py --dumpkey --key pubkey.pem
    ```
- [ius/rsatool](https://github.com/ius/rsatool)
    ```bash
    git clone https://github.com/ius/rsatool.git
    cd rsatool
    python rsatool.py -f PEM -o private.pem -p 1234567 -q 7654321 # 生成私钥
    ```
- openssl
    ```bash
    # 使用openssl解析公钥
    openssl rsa -text -modulus -pubin -in public.pem
    # 使用openssl解析私钥
    openssl rsa -text -modulus -in private.pem
    # 解密
    openssl rsautl -decrypt -inkey private.pem -in flag.enc -out flag
    # 给出了私钥文件private.pem和flag.en,解密密文
    opensslrsautl -decrypt -in flag.enc(密文名称) -inkey private.pem
    # 使用openssl加密
    openssl rsautl -encrypt -in flag.txt -inkey public.pem -pubin -out cipher.txt
    ```
- [ablocelayes/rsa-wiener-attack](https://github.com/pablocelayes/rsa-wiener-attack)
- [3summer/CTF-RSA-tool](https://github.com/3summer/CTF-RSA-tool)
- [Integer factorization calculator](https://www.alpertron.com.ar/ECM.HTM)
**相关资源**
- [kur0mi/CTF-RSA](https://github.com/kur0mi/CTF-RSA)
- [Zui-Qing-Feng/RSA](https://github.com/Zui-Qing-Feng/RSA)
- [yifeng-lee/RSA-In-CTF](https://github.com/yifeng-lee/RSA-In-CTF)
- [findneo/RSA-ATTACK](https://github.com/findneo/RSA-ATTACK)
**Writeup**
- [RSA的dp泄露 —— 【WUST-CTF2020】leak](https://blog.csdn.net/qq_42939527/article/details/105202716)
- [CTF-RSA1（已知p、q、dp、dq、c）](https://blog.csdn.net/qq_32350719/article/details/102719279)
- [[BJDCTF2020]RSA ==＞低加密指数攻击](https://blog.csdn.net/LYJ20010728/article/details/110453049)
- [BUUCTF Crypto [BJDCTF2020]RSA wp](https://blog.csdn.net/weixin_44017838/article/details/104990164)
- [[BJDCTF2020]RSA](https://www.codeleading.com/article/68565028999/)
- [[BUUCTF]Dangerous RSA -＞低加密指数攻击](https://blog.csdn.net/weixin_45859850/article/details/109785669)
- [[BUUCTF]rsa2 低解密指数攻击](https://blog.csdn.net/weixin_45859850/article/details/109865307)
- [buu [BJDCTF 2nd]rsa0](https://blog.csdn.net/ao52426055/article/details/110366309)
- [CTF-BUUCTF-CRPTO-[BJDCTF 2nd]rsa1 1](https://blog.csdn.net/weixin_43880435/article/details/106386942)
- [buu [HDCTF2019]bbbbbbrsa](https://blog.csdn.net/ao52426055/article/details/110424785)
- [Buuctf RSA 题目总结](https://blog.csdn.net/Ahuuua/article/details/109190848)
- [BUUCTF RSA题目全解](https://www.codenong.com/cs105967809/)
- [[BJDCTF2020]easyrsa](https://blog.csdn.net/weixin_44110537/article/details/107214569)
- [BUUCTF RSA题目全解2](https://blog.csdn.net/MikeCoke/article/details/107206707)
- [RoarCTF2019 babyRSA](https://www.cnblogs.com/vict0r/p/13563073.html)
- [BUUCTF RSA题目全解3](https://blog.csdn.net/MikeCoke/article/details/107973068)
- [NPUCTF2020 EzRSA](https://www.cnblogs.com/vict0r/p/13723450.html)
- [BUUCTF RSA题目全解4](https://blog.csdn.net/MikeCoke/article/details/108540699)
- [RSA 中根据 (N, e, d) 求 (p, q)](https://blog.csdn.net/ayang1986/article/details/112714749)
- [掘安杯-Crypto:RSA脚本一把梭 (模不互素)](https://shawroot.hatenablog.com/entry/2019/12/03/%E6%8E%98%E5%AE%89%E6%9D%AF-Crypto%3ARSA%E8%84%9A%E6%9C%AC%E4%B8%80%E6%8A%8A%E6%A2%AD_%28%E6%A8%A1%E4%B8%8D%E4%BA%92%E7%B4%A0%29)
- [CTF RSA题解集](https://www.ruanx.net/rsa-solutions/)
- [CTFtime.org / picoCTF 2018 / Super Safe RSA 3 / Writeup](https://ctftime.org/writeup/11608)
- [BUUCTF-CRYPTO-强网杯2019 Copperstudy](https://www.codenong.com/cs109409929/)
- [2019强网杯 - 密码学-RSA-Coppersmith](https://blog.csdn.net/q851579181q/article/details/90645041)
- [N1CTF 2019 - Part3-BabyRSA](http://duksctf.github.io/2019/09/08/N1CTF2019-Part3-BabyRSA.html)
- [N1CTF 2019: BabyRSA](https://garygurlaskie.com/ctf/2019/09/07/n1ctf-babyrsa.html)
- [BUUCTF--[INSHack2017]rsa16m](https://www.cnblogs.com/Sentry-InkCity/p/15332492.html)
- [虎符ctf2020 crypto GM](http://39.106.50.81/index.php/archives/9/)
- [BUUCTF 强网杯2019 Copperstudy](https://blog.csdn.net/walker_feng/article/details/108889696)
- [BUUCTF 每日打卡 2021-8-3](https://blog.csdn.net/weixin_52446095/article/details/119355363)
- [[RoarCTF2019]babyRSA-阶乘取模（威尔逊定理）](https://blog.csdn.net/weixin_45859850/article/details/111462791)
**Tips**
- e 的一般为(如果题目里没给你) 65537(0x10001)
---
### 国密
国密即国家密码局认定的国产密码算法。主要有SM1，SM2，SM3，SM4。密钥长度和分组长度均为128位。
**相关工具**
- [tjfoc/gmsm: GM SM2/3/4 library based on Golang (基于Go语言的国密SM2/SM3/SM4算法库)](https://github.com/tjfoc/gmsm)
- [JuneAndGreen/sm-crypto: 国密算法js版](https://github.com/JuneAndGreen/sm-crypto)
- [PopezLotado/SM2Java: 国密SM2,SM3 Java实现](https://github.com/PopezLotado/SM2Java)
- [NEWPLAN/SMx: 国家商用加密算法 SMx(SM2,SM3,SM4)](https://github.com/NEWPLAN/SMx) - C 的实现
- [algorithmNation:国密算法 SM2加解密 SM2 SM3 SM4签名验签](https://gitee.com/xshuai/algorithmNation)
- [ZZMarquis/gmhelper:基于BC库:国密SM2/SM3/SM4算法简单封装;实现SM2 X509v3证书的签发;实现SM2 pfx证书的签发 ](https://github.com/ZZMarquis/gmhelper)
- [gotoworld/hsd-cipher-sm](https://github.com/gotoworld/hsd-cipher-sm) - JAVA 国产密码算法 SM2，SM3，SM4 实现
- [guanzhi/GmSSL](https://github.com/guanzhi/GmSSL) - 支持国密 SM2/SM3/SM4/SM9/ZUC/SSL 的 OpenSSL 分支
- [duanhongyi/gmssl](https://github.com/duanhongyi/gmssl) - a python crypto for sm2/sm3/sm4
- [snowlandltd/snowland-smx-python](https://gitee.com/snowlandltd/snowland-smx-python) - 国密算法SM2,SM3,SM4,ZUC
#### SM1
SM1 为对称加密.其加密强度与 AES 相当.该算法不公开,调用该算法时,需要通过加密芯片的接口进行调用.
---
#### SM2
SM2 为非对称加密,基于 ECC.该算法已公开.由于该算法基于ECC,故其签名速度与秘钥生成速度都快于 RSA.ECC 256位(SM2 采用的就是 ECC 256 位的一种)安全强度比 RSA 2048 位高,但运算速度快于 RSA.
---
#### SM3
SM3 消息摘要. 可以用 MD5 作为对比理解. 该算法已公开. 校验结果为 256 位.
**相关文章**
- [python SM3密码杂凑算法](https://blog.csdn.net/qq_37969092/article/details/113525749)
---
#### SM4
SM4 无线局域网标准的分组数据算法.对称加密,密钥长度和分组长度均为128位.
---
#### SM9
在商用密码体系中，SM9主要用于用户的身份认证。据新华网公开报道，SM9 的加密强度等同于3072位密钥的 RSA 加密算法.
SM9主要包括三部分：签名算法、密钥交换算法、加密算法，其中SM9签名算法收录于ISO/IEC 14888-3:2018《信息安全技术带附录的数字签名第3部分：基于离散对数的机制》。
---
## 古典密码
**相关文章**
- [Leet - 维基百科,自由的百科全书](https://zh.wikipedia.org/wiki/Leet)
- [纳瓦霍密码](https://baike.baidu.com/item/%E7%BA%B3%E7%93%A6%E9%9C%8D%E5%AF%86%E7%A0%81/9482868)
**语义分析**
- https://quipqiup.com/
---
### 换位加密
#### 栅栏密码
栅栏密码(Rail-fence Cipher)就是把要加密的明文分成N个一组,然后把每组的第1个字符组合,每组第2个字符组合...每组的第N(最后一个分组可能不足N个)个字符组合,最后把他们全部连接起来就是密文,这里以2栏栅栏加密为例.
- 明文: The quick brown fox jumps over the lazy dog
- 去空格: Thequickbrownfoxjumpsoverthelazydog
- 分组: Th eq ui ck br ow nf ox ju mp so ve rt he la zy do g
- 第一组: Teucbonojmsvrhlzdg
- 第二组: hqikrwfxupoeteayo
- 密文: Teucbonojmsvrhlzdghqikrwfxupoeteayo
**相关文章**
- [Practical Cryptography](http://www.practicalcryptography.com/ciphers/classical-era/rail-fence/)
**在线工具**
- http://www.hiencode.com/railfence.html - W型
- https://www.qqxiuzi.cn/bianma/zhalanmima.php
---
#### 曲路密码
曲路密码(Curve Cipher)是一种换位密码,需要事先双方约定密钥(也就是曲路路径).
> 明文: The quick brown fox jumps over the lazy dog
填入5行7列表(事先约定填充的行列数)
加密的回路线(事先约定填充的行列数)
> 密文: gesfc inpho dtmwu qoury zejre hbxva lookT
---
#### 列移位密码
`Columnar Transposition Cipher`
列移位密码(Columnar Transposition Cipher)是一种比较简单,易于实现的换位密码,通过一个简单的规则将明文打乱混合成密文.
> 以明文 The quick brown fox jumps over the lazy dog,密钥 how are u为例:
填入5行7列表(事先约定填充的行列数,如果明文不能填充完表格可以约定使用某个字母进行填充)
密钥: how are u