# 第四章 编写 sed 脚本

## 4.1 概述
在开始使用 `sed` 处理文本问题时，通常需要对输入文件进行一系列的编辑操作。这些操作可以包括删除空行、调整段落格式、替换特定字符串等。通过编写和测试 `sed` 脚本，我们可以自动化这些任务，从而节省大量手动工作的时间。

### 示例脚本
假设我们有一个文件 `horsefeathers`，我们需要对其进行以下编辑操作：
1. 删除空行。
2. 删除每行的前导空格。
3. 删除以加号（+）开头且包含打印机下划线的行。
4. 将连续的多个空格缩减为一个空格。
5. 用段落宏（.LP）替换所有空行。

我们将逐步编写并测试这个 `sed` 脚本。

## 4.2 编写和测试脚本

### 步骤1：删除空行
首先，我们需要删除文件中的所有空行。可以通过以下命令实现：
```sh
s/^$//
```
将这个命令添加到 `sedscr` 文件中，并使用以下命令进行测试：
```sh
$ sed -f sedscr horsefeathers
```

### 步骤2：删除每行的前导空格
接下来，我们需要删除每行的前导空格。可以使用以下命令：
```sh
s/^[ \t]*/
```
将这个命令添加到 `sedscr` 文件中，并再次测试：
```sh
$ sed -f sedscr horsefeathers
```

### 步骤3：删除以加号开头且包含打印机下划线的行
我们需要删除以加号（+）开头且包含打印机下划线的行。可以使用以下命令：
```sh
/^+.*_/d
```
将这个命令添加到 `sedscr` 文件中，并测试：
```sh
$ sed -f sedscr horsefeathers
```

### 步骤4：将连续的多个空格缩减为一个空格
接下来，我们需要将连续的多个空格缩减为一个空格。可以使用以下命令：
```sh
s/ \+/ /g
```
将这个命令添加到 `sedscr` 文件中，并测试：
```sh
$ sed -f sedscr horsefeathers
```

### 步骤5：用段落宏（.LP）替换所有空行
最后，我们需要用段落宏（.LP）替换所有空行。可以使用以下命令：
```sh
s/^$/\.LP/
```
将这个命令添加到 `sedscr` 文件中，并测试：
```sh
$ sed -f sedscr horsefeathers
```

## 4.3 完整脚本
下面是完整的 `sed` 脚本：
```sh
#!/bin/sh
sed -f - <<'EOF' horsefeathers
s/^$//
s/^[ \t]*
/^+.*_/d
s/ \+/ /g
s/^$/\.LP/
EOF
```

### 测试完整脚本
使用以下命令测试完整脚本：
```sh
$ ./script.sh
```

## 4.4 提取 Troff 宏定义
`sed` 还可以用于从 Troff 宏包中提取特定的宏定义。例如，从 `-mm` 包中提取 `BL` 宏定义。

### 示例脚本
创建一个名为 `getmac` 的 shell 脚本：
```sh
#!/bin/sh
# 提取指定的 Troff 宏定义
# 用法: getmac MACRO_NAME
sed -n "/^\.de$1/, /^\. .$/p" /usr/lib/macros/mmt
```

### 执行脚本
使用以下命令执行脚本：
```sh
$ getmac BL
```

### 解释
- `sed -n` 选项阻止 `sed` 打印整个文件。
- `/^\.de$1/` 和 `/^\. .$/` 是地址范围，匹配从 `.deMACRO_NAME` 开始到 `. .` 结束的行。
- `p` 命令打印匹配的行。

通过这种方式，我们可以轻松地从 Troff 宏包中提取所需的宏定义。

---

希望这些优化后的文本能帮助你更好地理解和编写 `sed` 脚本。如果有任何进一步的问题或需要更多示例，请告诉我！