# SHARPE 2002: Symbolic Hierarchical Automated Reliability and Performance Evaluator

**Author:** Kishor S. Trivedi  
**Affiliation:** Center for Advanced Computing and Communication, Department of Electrical and Computer Engineering, Duke University, Durham, NC 27708-0291, USA  
**Email:** [PI:EMAIL]

## Abstract
SHARPE is a well-known software package in the field of reliability and performance evaluation, widely used in both academic and industrial settings. It offers a comprehensive suite of modeling tools that enable users to select the most appropriate models for their specific system and analysis needs. The tool supports hierarchical modeling, allowing different types of models to be combined and validated at various levels of abstraction. Both steady-state and transient computations are available. This paper provides an overview of SHARPE's features, including recent enhancements, and concludes with a discussion on its utility as a versatile modeling tool.

## Introduction
SHARPE (Symbolic Hierarchical Automated Reliability and Performance Evaluator) is a powerful and flexible tool for reliability and performance analysis. It is designed to cater to a wide range of modeling needs, from simple to complex systems. Users can easily choose from a variety of model types, depending on the specific requirements of their system and the type of measures they need at each stage of the design process. The hierarchical nature of SHARPE allows for the integration of different models at various physical or abstract levels, enabling cross-validation of results. Both steady-state and transient analyses are supported.

Figure 1 illustrates the model types available in SHARPE, with "X" denoting the available measures.

| Model Type                | Dependability | Performance | Performability |
|---------------------------|---------------|-------------|----------------|
| Fault Tree (FT)           | X             | X           | X              |
| Multistate Fault Tree     | X             | X           | X              |
| Reliability Block Diagram (RBD) | X         | X           | X              |
| Reliability Graph (RG)    | X             | X           | X              |
| Markov Chain              | X             | X           | X              |
| Semi-Markov Chain         | X             | X           | X              |
| Markov Regenerative Process (MRGP) | X      | X           | X              |
| Generalized Stochastic Petri Net (GSPN) | X | X           | X              |
| Stochastic Reward Net     | X             | X           | X              |
| Product Form Queuing Network (PFQN) | X   | X           | X              |
| Multi-chain Product Form Queuing Network (MPFQN) | X | X | X |
| Task Graph                | X             | X           | X              |
| Phased-Mission Systems    | X             | X           | X              |

**Figure 1.** Model types available in SHARPE

## New Computational Features
Several important computational features have been recently added to SHARPE:

- **Mean Time to System Failure (MTTF) and Mean Time to System Repair (MTTR):** Available for Markov chains and RBDs.
- **Binary Decision Diagram (BDD) Algorithms:** Available for fault trees and reliability graphs.
- **Downtime Breakdown:** By states for Markov chains and by blocks for RBDs.
- **Steady-State Computation:** For MRGP models.
- **Cost of Downtimes:** Computed for Markov chains.
- **Fast MTTF Algorithm:** Based on [3], available for Markov chains.
- **Symbolic Computations:** Using Mathematica for some calculations.

## New Usability Features
SHARPE has also been enhanced with several usability features:

- **Graphical User Interface (GUI):** Written in Java.
- **Visualization:** Plots can be visualized through Excel.
- **Model Saving:** Models can be saved as JPEG or EPS files.
- **Model Comparison:** Multiple variations of a model can be plotted for comparison.
- **Downtime Breakdown Display:** As a pie chart, showing the percentage by components.

## Conclusion
SHARPE is a valuable tool for modelers due to its support for multiple model types and the flexibility it provides in combining and validating results. It enables users to construct and analyze dependability, performance, and performability models without making assumptions about the application domain. While the GUI is more domain-specific, SHARPE remains a versatile and powerful tool for a wide range of applications.

## References
[1] Robin A. Sahner et al. *Performance and Reliability Analysis of Computer Systems*. Kluwer Academic Press, 1996.

[2] Kishor S. Trivedi. *Probability & Statistics with Reliability, Queuing and Computer Science Applications*. Second edition. John Wiley & Sons, New York, 2001.

[3] P. Heidelberger, J. Muppala, and K.S. Trivedi. *Accelerating Mean Time to Failure Computations*. Performance Evaluation, Vol. 27 & 28, October 1996, pp. 627-645.

**Proceedings of the International Conference on Dependable Systems and Networks (DSN'02)**  
**0-7695-1597-5/02 $17.00 Â© 2002 IEEE**  
**Authorized licensed use limited to: Tsinghua University. Downloaded on March 19, 2021 at 04:26:26 UTC from IEEE Xplore. Restrictions apply.**