degree for the random graphs is 4.02 and for the powerlaw
graphs (generated using the Brite generator [22]) is 3.94.
The purpose of making the graphs with about the same av-
erage degree is to observe the eﬀect of topology. In all cases,
the generated graphs are connected. In the case of random
graph, there are 7 nodes with degree 1 (i.e., the private
keys of these nodes are distributed in a way equivalent to
Input: G = (V, E), 0 < α ≤ 1
T (# of allowed compromised nodes, T ≤ |V |)
Output: remainder graphs Gi = (Vi, Ei), 1 ≤ i ≤ T
S := ∅, C := ∅, G0 := G, V0 := V , E0 := E
For each v ∈ V {
W (v) := 0
K(v) := (cid:100)α · deg(v, G)(cid:101)
}
For i = 1 to T { /* only A1 and A3 are based on remainder graphs */
/* node vi is compromised */
In case of attack A1, vi ←R {u ∈ Vi−1 − C : deg(u, Gi−1) = maxv∈Vi−1−C{deg(v, Gi−1)}}
In case of attack A3, vi ←R {u ∈ Vi−1 − C : deg(u, Gi−1) = minv∈Vi−1−C{deg(v, Gi−1)}}
C := C ∪ {vi}
For each u ∈ Vi−1 such that (u, vi) ∈ Ei−1
W (u) := W (u) + 1
For each u ∈ C − S {
If W (u) ≥ K(u) {
S := S ∪ {u}
/* private key sku is compromised */
Vi := Vi−1 − {u}
Ei := Ei−1 − {(u, v) ∈ Ei−1}
/* node wrt. compromised key is eliminated */
}
}
}
Figure 2: Dynamics of remainder graphs and attacks
a (2, 2) secret sharing scheme), whereas in the case of pow-
erlaw graph, there are no nodes with degree 1. Regarding
the parameter α, we considered three values: 0.51, 0.7 and
0.9. Since attack-resilience AR(G, α, A) is derived from
S(G, α, A, T ), we only need to plot S(G, α, A, T ) with re-
spect to T , namely the relationship between the number of
compromised private keys and the number of compromised
nodes. When randomness is a factor (e.g., when there is
a need to select one of multiple nodes to compromise), the
plotting is based on the number of compromised private keys
averaged over 100 runs.
Figure 3 plots the simulated number of compromised keys
vs. the number of compromised nodes in the regular graph
case. We observe that there are essentially no diﬀerences
between the powers of the attacks in the case of α = 0.9.
This is because nodes are selected to compromise in essen-
tially a random fashion. Whereas in the case of α = 0.51
and α = 0.7, attack A1 is most powerful because compro-
mising the same number of nodes causes the compromise
of the largest number of private keys (i.e., attack A1 im-
poses the worst attack-resilience). From the perspective
of when an attack starts to compromise private keys, which
is particularly relevant when there is an upper bound on the
number of nodes that can be compromised, we observe the
following. On one hand, in order for the attacker to start
compromise private keys, the attacker has to compromise at
least 25 nodes or so in the case of α = 0.51, to compromise
at least 30 nodes or so in the case of α = 0.7, and to compro-
mise at least 40 nodes or so in the case of α = 0.9. On the
other hand, all the attacks require a comparable number of
nodes to be compromised before the attacker can compro-
mise private keys.
Figure 4 plots the simulated number of compromised keys
vs. the number of compromised nodes in the random graph
case. We observe that the order of nodes selected to com-
promise is a decisive factor in terms of the power of attacks.
Speciﬁcally, attacks that select nodes in a decreasing node
degree order to compromise (i.e., attacks A1 and A2) are
always more powerful than attacks that select nodes in a ran-
dom order to compromise (i.e., attack A5), which in turn are
always more powerful than attacks that select nodes in an
increasing order to compromise (i.e., attacks A3 and A4).
Moreover, we observe that attack A1 is often, but not al-
ways, more powerful than attack A2, and that attack A4
is sometimes more powerful than attack A3. Since we are
interested in identifying more powerful attacks, we note that
A1 is often, but not always, more powerful than its coun-
terpart attack A2. Still, this would justify the adoption of
the remainder graphs during the decision-making of attacks.
From the perspective of when an attack starts to compro-
mise private keys, which is particularly relevant when there
is an upper bound on the number of nodes that can be com-
promised, we observe the following. On one hand, attacks
A1 and A2 always start to compromise private keys after
compromising a smaller number of nodes than the other at-
tacks. For example, in the case of α = 0.51, A1 and A2
start to compromise private keys after compromising about
15 nodes, whereas the other attacks start to compromise pri-
vate keys after compromising about 20 nodes. On the other
hand, in order for the attacker to compromise private keys,
the attacker has to compromise at least 15 nodes or so in
the case of α = 0.51, to compromise at least 25 nodes or so
in the case of α = 0.7, and to compromise at least 35 nodes
or so in the case of α = 0.9. This is true in the case the
attacker launches the powerful attacks A1 and A2.
Figure 5 plots the simulated number of compromised keys
vs. number of compromised nodes in the powerlaw graph
case. We observe that the order of nodes selected to com-
329
(a) α = 0.51
(b) α = 0.7
(c) α = 0.9
Figure 3: # of compromised keys vs. # of compromised nodes: the regular graph topology case
(a) α = 0.51
(b) α = 0.7
(c) α = 0.9
Figure 4: # of compromised keys vs. # of compromised nodes: the random graph topology case
(a) α = 0.51
(b) α = 0.7
(c) α = 0.9
Figure 5: # of compromised keys vs. # of compromised nodes: the powerlaw graph topology case
330
 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5 0 20 40 60 80 100 120 0 10 20 30 40 50 60 70 80 90 100S (number of private keys compromised)T (number of nodes compromised)Attack 1Attack 2Attack 3Attack 4Attack 5promise is a crucial, but not decisive, factor in terms of the
power of attacks. Speciﬁcally, attacks that select nodes in a
decreasing degree order to compromise (i.e., attacks A1 and
A2) are often, but not always, more powerful than attacks
that select nodes in a random order to compromise (i.e.,
attack A5), which in turn are always more powerful than
attacks that select nodes in an increasing order to compro-
mise (i.e., attacks A3 and A4). Moreover, we observe that
attack A1 is always at least as powerful as attack A2, and
that attack A4 is occasionally more powerful than attack
A3. Since we are interested in identifying more powerful at-
tacks, we note that A1 is often, but not always, more power-
ful than its counterpart attack A2. Still, this would justify
the adoption of the remainder graphs during the decision-
making of attacks. From the perspective of when an attack
starts to compromise private keys, which is relevant when
there is an upper bound on the number of nodes that can be
compromised, we observe the following. On one hand, at-
tacks A1 and A2 always start to compromise private keys
after compromising a smaller number of nodes that the other
attacks. For example, in the case of α = 0.51, A1 and A2
start to compromise private keys after compromising about
10 nodes, whereas attack A5 requires about 20 nodes and
attacks A3 and A4 require about 70 nodes. On the other
hand, in order for the attacker to compromise private keys,
the attacker has to compromise at least 10 nodes or so in
the case of α = 0.51, to compromise at least 20 nodes or so
in the case of α = 0.7, and to compromise at least 45 nodes
or so in the case of α = 0.9. This is true in the case the
attacker launches the powerful attacks A1 and A2.
Summary. The above attack strategy A1 is often, but not
always, more powerful than the others.
In this strategy,
a crafty attacker, who knows the social network topology,
selects the largest degree nodes in the remainder graphs to
compromise. In the rest of the paper, we will only consider
this attack so as to accommodate the worst-case scenario.
We also stress that the strategies to compromise nodes in
a decreasing-degree and random order in the initial graph
G (but not in the remainder graphs), namely the above A2
and A5, respectively, are well studied in other settings [2,
1]. But these attacks are not the most powerful attack in
our setting, and thus are less interesting.
4.2 On the Impact of Network Topology
Having identiﬁed the relatively more powerful attack A1,
we now investigate the impact of social network topology on
the consequences of attack A1. Figure 6 plots the compar-
isons between social network topologies, from which we draw
the following observations. First, regular graph topology al-
most always exhibit a better attack-resilience than the
other topologies with about the same average node degree.
Moreover, random graph topology exhibits a better attack-
resilience than powerlaw graph topology in the case of
α = 0.51, and exhibits about the same attack-resilience
as powerlaw graph topology in the cases of α = 0.7 and of
α = 0.9. Second, from the perspective of the required num-
ber of compromised nodes before private keys start to get
compromised, regular graphs almost always require a larger
number of compromised nodes. For example, in the case of
α = 0.51, regular graph topology requires 20 compromised
nodes, whereas random graph and powerlaw graph require
about 10 compromised nodes.
In summary, if it is possible to “tune” social network topolo-
gies, it will enhance the attack-resilience of the resulting
system to ensure that the nodes have about the same degree
(i.e., regular graph being ideal, otherwise random graph be-
ing better than powerlaw graph).
4.3 On the Impact of Parameter α
While it is intuitive that a larger α leads to a better secu-
rity or attack-resilience, their gain in security does not
appear to be “linear” to the increase of α in any sense. Specif-
ically, Figure 7 compares the consequences of attack A1 in
the cases of three social network topologies with diﬀerent
α’s. While it is straightforward that α = 0.9 leads to the
relatively best attack-resilience and that α = 0.7 leads
to a better attack-resilience, the diﬀerentials in attack-
resilience between the case of α = 0.51 and the case of
α = 0.7 vary with respect to the social network topologies.
Speciﬁcally, there is essentially no diﬀerence between the
α = 0.51 and α = 0.7 in the case of regular graphs (because
(cid:100)0.51 × 4(cid:101) = (cid:100)0.7 × 4(cid:101)), but there is a somewhat signiﬁcant
diﬀerence in the case of random graphs, and there is a very
signiﬁcant diﬀerence in the case of powerlaw graphs.
From the perspective of the required number of compro-
mised nodes before private keys can get compromised, we
have the following observations. These are important be-
cause, if the number of nodes that will get compromised
can be upper bounded in advance, an appropriate α may be
selected so that the compromise of that many nodes may
only cause the compromise of very few private keys. On one
hand, a larger α imposes a larger number of compromised
nodes before private keys can get compromised. For exam-
ple, in the case of α = 0.9, the attacker has to compromise
at least about 40 nodes in order to compromise private keys
in the case of regular graph topology, or has to compromise
at least about 30 nodes in order to compromise private keys
in the case of random graph topology, or has to compromise
at least about 45 nodes in order to compromise private keys
in the case of powerlaw graph topology. On the other hand,
the “gain” by increasing α varies with respect to topology.
For example, let us consider increasing α = 0.51 to α = 0.9.
Then, the required number of compromised nodes is raised
from 20 to 40 in the case regular graph topology (cf. Figure
7(a)), whereas from 15 to 30 in the case of random graph
topology (cf. Figure 7(b)), and from 10 to 45 in the case of
powerlaw graphs (cf. Figure 7(c)).
5. UNDERSTANDING AVAILABILITY
The usefulness of exploiting social networks for threshold
signing perhaps largely depends on the availability of the
private signing keys. In order to characterize availability,
we need to diﬀerentiate the uptime and downtime of nodes
and the availability of private keys. Speciﬁcally, we say “a
node u is up” if u is providing resources to others, and “down”
otherwise (e.g., the computer is powered oﬀ or is computing
its own resource demanding tasks). We say “a private key