写入，Server不处理。
性能采集各个模块是使用的独立线程，所以可能存在部分指标无法上报，部分指标正常的情
况。一般来说，这种情况下需要查看Agent日志，检查是否有采集/上报失败的日志。如果
是服务器上所有指标都没上报，则需要检查Influxdb是否启动，或查看Agent到Influxdb的
网络是否正常。
性能数据的时间目前暂时使用的是各服务器上的本地时间，所以会存在因为系统时间不准确
造成性能数据异常的情况，后续会修正为使用Influxdb所在机器的时间进行统一。
有少部分性能指标（主要是单机视图首页上没有曲线图的CPU/硬盘/内存等数据）是没有存
Influxdb的，所以可能出现性能图无法查看但是页面上指标还有数据的情况。但是这部分数
据是依赖心跳上报的，所以服务器失联时这部分数据可能就是过期的老数据，会不准确。
9.7. 告警功能
选择顶部菜单->告警->告警查询项，进入告警查询页面。
9-336
日志学院
修改查询条件后，点击查询即可查询对应的告警。
告警规则修改功能
选择 顶部菜单 告警->告警规则查询 项，进入告警规则查询页面。
可以查看/修改/删除系统已有的告警规则。一般只需要调整告警通知人，和性能告警的告警
阈值即可。特定情况下也可以通过新增告警规则按钮添加规则。
告警通知人可以全局配置，也可以根据需要针对不同类型告警进行配置。不希望查看的告警
可以不配通知人。
目前只支持邮件方式进行通知。另外在招行定制使用的版本中支持使用Syslog进行通知。
告警插件管理功能
选择顶部菜单->告警->告警插件管理项，进入告警插件管理页面，可以查看/管理系统的告
警插件：
9-337
日志学院
目前告警插件主要是用来实现不同环境下的告警通知定制。一般只需要修改SMTP插件的配
置，指定使用的SMTP服务器等各项信息，用于告警邮件通知。其余插件都是个别用户的定
制插件，无需调整，忽略就可以。
日志监控告警功能
选择顶部菜单->告警->日志监控告警规则项，进入日志监控告警配置页面,可以查看/管理系
统里的日志关键字告警：
只要在这里点击新增日志监控告警规则按钮，就会弹出以下配置页面：
可以根据实际的需要，选择让Manager监控指定模块/路径的日志文件，在发现其中出现特
定关键字/匹配特定关键字时告警。
这个主要是在特定环境下实现一些特殊的监控需求。一般不需要配置。
9-338
日志学院
URL 监控告警功能
选择顶部菜单->告警->URL监控告警规则项，进入URL监控告警配置页面。
可以查看/管理系统里的URL监控告警规则。只要在这里点击新增URL监控告警规则按钮，
就会弹出以下配置页面：
9-339
日志学院
可以根据实际的需要，选择让Manager定期去连特定的URL，在发现URL持续不可连，或
者返回特定关键字时告警。
Manger也支持采集url返回时长，可以设置对应的阈值，在持续调用耗时过长时进行告警。
也可以通过页面查看历史时延，确定指定时刻是否存在异常。这个主要是在特定环境下实现
一些特殊的监控需求。一般不需要配置。
告警屏蔽功能
选择顶部菜单->告警->告警屏蔽项，进入告警屏蔽页面。
可以查看已经添加的告警屏蔽规则。也可以点击新增告警屏蔽来增加屏蔽规则。屏蔽生效的
时间范围内，符合条件的告警将不再产生，可以避免因为升级/故障恢复操作发送大量告警
邮件造成骚扰，也可以避免部分持续误报/产生的告警影响告警功能的正常使用。
9.8. MySQL 工具
Mysql 工具功能
支持登录Mysql服务器执行命令，简化维护操作。从工具->Mysql工具即可进入。
先可以手工调整Mysql的连接参数，然后输入对应的SQL语句，点击执行，下面会显示命
令的执行结果供用户进行检查。
9-340
日志学院
Mysql 备份工具功能
支持自动备份Mysql数据，简化维护操作。从工具->Mysql备份即可进入。
可以定义备份的周期/路径/备份个数/时间点等参数。注意这里有个比较特殊的逻辑是，默
认不会备份超过500M大小的表（表大小过大时，备份时间会很长，导致db锁定时间过长，
系统工作不正常，因此默认会跳过。可以手工修改这个策略来满足实际需求）
9.9. Kafka 工具功能
支持在页面上使用一些Kafka的工具对Kafka进行监控管理。从工具->kafka工具即可进入。
最上面是性能数据查看，这个支持查看Kafka的入库性能。
接下来是设置Kafka偏移量，这个主要是在堆积太多/offset丢失重复消费/想要重复消费部分
数据时，手工调整Kafka的消费偏移量。可以手工输入想要的值进行设置，也可以点击时钟
图标，查询历史上的偏移量来进行设置。另外修改时页面会检查对应的进程，如果Logriver
等会修改offset，导致这个设置无效的进程在运行时，会设置失败，并提示去停止对应的进
程。
9-341
日志学院
再是 Kafka检测工具，该工具会自动对Kafka进行读写检测，确定是否有异常。
最后是Kafka详情信息。可以查看Kafka的配置信息，确定Kafka是否有partition级的异常。
9.10. 故障排查
使用 Manager 定位系统故障
我们可以使用Manager工具进行简单的产品故障问题定位，如以下问题的定位：
1、模块出现故障：优先查看模块错误日志；
2、存储超限：可以在Manager主机监控处快速查看主机的磁盘使用率；
3、前台搜索不到日志：通过查看Kafka性能图表判断日志消费情况，如果消费正常，说明
Kafka之前的组件（Heka、Collector）是正常的，问题可能出现在搜索引擎或查询组件上；
4、前台日志搜索慢：仍可通过Kafka性能图表、Kafka工具查看日志消费速度，看日志是否
堆积，从而判断搜索慢是否是日志入库慢造成的。
通常情况下，需要结合日志易系统模块架构图来分析问题。
9-342
日志学院
当在具体场景中分析问题时，考虑问题的范围应更加全面，如：
1、模块出现问题
 优先查看模块错误日志定位故障；
 如果错误日志中没有准确指出故障原因，应先排除基础故障，如系统存储超限造成模块
不工作、防火墙策略造成的网络不畅、模块内存不足造成模块无法正常启动等基础问题；
 如果排除外基础故障问题仍为解决，应集合主机负载及系统架构进一步分析问题。
2、heka能收到日志，但前端无法搜索到日志，如何进行排查？
根据日志入库线路进行分析，Heka能接受到日志，说明问题出在后续环节。Collector出现
故障的情况较少，因此可按以下思路排查：
 排查kafka能否收到日志：/opt/rizhiyi/parcels/kafka/bin/kafka-console-consumer.sh
--bootstrap-serverlocalhost:9092--topictest|grep"message"
 使用bcli工具排查beaver索引是否有数据：如搜索引擎所在ip为192.168.1.66，则可
执行如下操作：
#/opt/rizhiyi/python/bin/pythonbcli.py
192.168.1.166:50061>search--index"ops-yotta-20191107-expired_3660d"--query
"ip:192.168.1.166"--timeval"-10mnow"
3、日志能够入库，但现在集群入库比平时慢很多，请提供排查思路和解决办法；
排查时遵循从宏观到微观的思路，先排查网络、主机问题，避免因简单原因造成的传输问题，
之后从系统日志传输流程分析，逐渐定位具体故障点。一般情况下，可能是某个模块出了问
题，这种情况往往与主机负载升高同时出现，可通过主机负载与日志易模块性能分型结合，
精确定位问题。
9-343
日志学院
 网络问题排查：可通过抓包、文件传输等方式观测网卡流量；
 负载问题排查：
 可以从机器负载入手，定位使负载升高的进程：使用uptime、top观测机器性能，
如果发现机器负载较高，需要使用free、iostat等工具定位具体是CPU负载高、内
存负载高，还是IO负载高，然后再定位到具体是哪个程序引起的负载增高；
 也可从进程入手，观测机器负载：根据产品运行架构，我们已经知道与入库相关的
几个主要组件。因为日志可以入库，heka、collector发生问题的可能性较小，需要
重点关注kafka、logriver、beaver_datanode这几个模块。
 日志易系统状况查看：
 首先观测是否所有模块都处于正常运行中，如果某个模块挂了，可以直接从该模块
进行排查。如果所有模块正常运行，可从Manager界面查看日志易系统日志的进
出情况，然后查看各个模块的日志处理情况；
 入库慢可能是后端模块出了问题，如Heka入库慢可能是Kafka、logriver、Beaver
等组件出了问题，如果Heka、Kafka处理速度都很慢，可能是logriver或Beaver
出了问题，查看这些模块性能图上的日志处理情况，基本可以将排查范围缩小到
1-2个模块。
 查看当前模块的错误日志，并关联相关模块的错误日志，进一步缩小故障范围。
4、日志接入：当使用“目录/文件”方式进行数据采集时，发现在预览时无法找到该文件，请
简要分析问题所在。
提供以下几种情况供分析：
 排查文件目录是否填写正确；
 文件名正则或通配符匹配是否正确；
 确保所监控文件可用；
 确保Agent运行的账户对此文件有可读权限。
5、接入日志后发现搜索不到相应日志可能的原因有哪些？需要检查哪些内容？
查询类的问题可能与查询线路的组件有关，可排查以下信息：
 权限是否正确：看日志的_type，_type格式是domain_appname，看这个用户是否有搜
索这个domain、这个appname的权限；
 是否配置了路由索引（SPL默认只搜索yotta索引，如果不是yotta索引，需要在spl语
句指定index=xxx。也可以参考SPL配置项query.default_index并将其配置为*）；
 时间范围是否正确：看日志的时间戳(timestamp)，转成可以理解的时间戳，看看SPL
的搜索时间是不是在这个范围内。如果时间戳错误，需要检查抽取规则配置。需要注意
的是：时间戳可能因为时区错误，多加了8小时，是明天的时间戳，搜索范围需要扩大
到明天；
 搜索时的appname和tag是否和接入时配置的相同。
也可能是日志入库出了问题：
 集群状态是否正常，搜索队列是否有阻塞，Splserver服务是否正常；
 Logriver是否开启了丢弃和oor配置；
 确认Kafka消费是否有堆积；
9-344
日志学院
 查看Heka确认采集是否正常(缓存，日志)。
6、日志解析：为什么新建字段提取规则时，验证规则可以解析，导入之后没有解析？如何
进行排查？
可能存在的原因及排查思路如下：
 日志中存在不可见字符：使用抽取规则验证界面下方的搜索验证，或者事件操作里的"
配置字段提取"；
 appname和tags没匹配上规则：检查日志的appname、tag和抽取规则配置的appname、
tag，匹配不上肯定不会解析；
 appname和tags匹配上了多个规则：匹配上了多个规则只用建立最早的一条。检查规
则列表，appname，tags是否匹配上了多条规则，可以使用
http://logriver:54400/dump/get_parser_cache?pretty=true&summary=true看到当前日志
被那条解析规则解析；
 正则解析超时：2.0之前版本查看logriver有没有超时日志,2.0之后版本看正则step数
Manager 自身故障定位
虽然Manager后台管理界面健康与否并不影响日志分析系统的正常运行，但作为监控管理
系统，如果Manager出现了问题，将会影响到对日志易集群的正常管理。
作为日志易系统实施工程师及维护人员，应了解对Manager系统有所了解，以便在出现问
题时更够及时维护。
可结合Manager后台相关路径定位故障：
 日志文件路径：/var/log/rizhiyi_manager_agent，/var/log/rizhiyi_manager_server
 各组件配置文件路径：/var/run/rizhiyi_manager_agent/process
 服务进程：/etc/init.d/rizhiyi_manager_server
Manager常见问题及解决方式如下：
1、Manager界面（8180）无法访问
 首先排除网略策略原因：登录服务器telnet查看该端口是否能够正常访问；
 其次需要登录到对应的服务器上查看rizhiyi_manager_server状态，再做下一步的判断：
/etc/init.d/rizhiyi_manager_serverstatus
 另外server端起不来还可能是3307库的问题，所以有时需要查看一下mysql的状态：
/etc/init.d/rizhiyi-manager-mysqlstatus
2、Agent失联
当ManagerServer无法连接ManagerAgent，或ManagerAgent无法与所管理的日志易模块
正常通信时，将无法使用Manager后端管理平台管理日志易模块。此时的排查思路如下：
9-345
日志学院
 首先要保证rizhiyi_manger_agent到server端的网络策略是通的；
 如果网络策略通的情况下仍然是失联状态，需要登录到agent所在机器执行，查看agent
进程状态：/etc/init.d/rizhiyi_manager_agentstatus
或者直接重启agent进程，如果启动不了，也会有相应的报错产生：
/etc/init.d/rizhiyi_manager_agentrestart
 Agent启动异常的常见错误：进程已死但pid仍存。此时需要去/var/run下删除
rizhiyi_manager_server.pid文件，再进行启动。
3、性能图表不显示
 性能图表是存在Influxdb中，所以可以重启Influxdb解决
 若未解决，需要查看Influxdb日志进行具体分析。
9.11. 模块配置优化
前面产品的学习中，我们已经需要修改一些配置来使我们的产品更加的易用。产品实施完毕
后，我们还有必要根据客户的日志量、集群规模及日志特点，在产品交付时进行一次系统地
检查。
这些检查包括以下方面：
1、日志易各模块配置检查：修改一些模块参数，使日志易系统给具维护性；
2、业务系统检查：检查Agent及Agent所在业务系统的资源使用状况，根据业务系统指标
验证业务运行状况；
3、日志分析系统资源检查项：检查日志易系统的硬件资源状况、网络带宽状况、时间同步、
Ulimit配置；
4、Beaver配置：Beaver_broker、Beaver_dataNode
5、Yottaserarch配置：检查集群设置、索引分片、模板配置、GC、内核设置等；
6、Java应用检查项：日志易很多模块使用Java语言，所以要统一检查Java的内存及GC
配置；
具体检查项，请参考《运维标准交付检查项》。
更多Manager信息请参考《日志易Manager使用手册》。
本章习题：
1、Manager自身发生了故障，会影响产品正常运行吗？为什么？
2、什么情况下，我们需要更改系统模块的配置参数？你能想到多少种场景，请一一列举。
思考：
1、Manager与租户管理都可以管理某些产品设置项，它们的不同点是什么？
9-346