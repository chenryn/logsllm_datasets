> Issue originally reported by @sheerun in babel/babel-preset-env#434
When using `useBuiltIns: 'usage'` and doing two passes with babel, it can
require polyfills multiple times, what makes babel not idempotent on second
run (in my opinion it should be).
    require("babel-polyfill/lib/core-js/modules/es6.promise");
    require("babel-polyfill/lib/core-js/modules/es6.symbol");
    require("babel-polyfill/lib/core-js/modules/web.dom.iterable");
    function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }
    require("babel-polyfill/lib/core-js/modules/es6.symbol");
    require("babel-polyfill/lib/core-js/modules/web.dom.iterable");
    require("babel-polyfill/lib/regenerator-runtime/runtime");
    require("babel-polyfill/lib/core-js/modules/es6.string.starts-with");