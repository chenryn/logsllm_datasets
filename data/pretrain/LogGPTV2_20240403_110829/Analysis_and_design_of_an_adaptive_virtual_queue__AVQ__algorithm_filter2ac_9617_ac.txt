Number of FTP connections at the link
0
0
50
100
150
Time in seconds
200
250
Figure 5: Experiment 2. Queue length at
the link for varying number of FTP connec-
tions for the diﬀerent AQM schemes
Figure 6: Experiment 3. Evolution of the
queue length at varying loads for PI
)
s
t
e
k
c
a
p
n
i
(
h
t
g
n
e
l
e
u
e
u
Q
50
45
40
35
30
25
20
15
10
5
0
0
Queue length vs time for AVQ with 140 FTP connections
Queue length vs time for REM with 140 FTP connections
REM
100
90
80
70
60
50
40
30
20
10
s
t
e
k
c
a
p
n
i
h
t
g
n
e
l
e
u
e
u
Q
50
100
150
Time (in seconds)
200
250
0
0
50
100
150
Time in seconds
200
250
Figure 7: Experiment 3. Evolution of the
queue sizes at varying loads for AVQ
Figure 8: Experiment 3. Evolution of the
queue sizes at varying loads for REM
Number of packets dropped vs number of short flows for different AQM schemes
Utilization for varying number of short flows for different AQM schemes
10000
9000
8000
7000
6000
5000
4000
3000
2000
1000
k
n
i
l
e
h
t
t
a
s
p
o
r
d
t
e
k
c
a
p
f
o
r
e
b
m
u
N
0
0
AVQ 
RED 
PI  
REM 
GKVQ
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
k
n
i
l
e
h
t
t
a
n
o
i
t
a
z
i
l
i
t
U
1
0.95
0.9
0.85
0.8
0.75
0.7
0
AVQ 
RED 
PI  
REM 
GKVQ
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
Figure 9: Experiment 4. Packet losses at
the link for various AQM schemes
Figure 10: Experiment 4. Utilization of the
link for various AQM schemes
Average queue length for varying number of short flows for different AQM schemes
Average queue length for varying number of short flows for different AQM schemes
s
t
e
k
c
a
p
n
i
h
t
g
n
e
l
e
u
e
u
q
e
g
a
r
e
v
A
100
90
80
70
60
50
40
30
20
10
0
0
AVQ 
RED 
PI  
REM 
GKVQ
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
s
t
e
k
c
a
p
n
i
h
t
g
n
e
l
e
u
e
u
q
e
g
a
r
e
v
A
100
90
80
70
60
50
40
30
20
10
0
0
AVQ (Gamma = 1.0) 
AVQ (Gamma = 0.98)
RED               
PI                
REM               
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
Figure 11: Experiment 4. Average queue
length at the link for various AQM schemes
Figure 12: Experiment 5. Average queue
lengths for various AQM schemes
Utilization for varying number of short flows for different AQM schemes
Total Goodput achieved for varying number of short flows for different AQM schemes
k
n
i
l
e
h
t
t
a
n
o
i
t
a
z
i
l
i
t
U
1.01
1
0.99
0.98
0.97
0.96
0.95
0.94
0.93
0.92
0.91
0
AVQ (Gamma = 1.0) 
AVQ (Gamma = 0.98)
RED               
PI                
REM               
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
d
e
v
e
h
c
a
i
t
u
p
d
o
o
G
l
a
t
o
T
1
0.98
0.96
0.94
0.92
0.9
0.88
0.86
0
AVQ (Gamma = 0.98)       
AVQ (Gamma = 1.0)        
RED on AVQ (Gamma = 0.98)
RED                      
PI                       
REM                      
5
10
15
20
25
30
35
40
45
50
Number of short flows arriving per second at the link
Figure 13: Experiment 5. Utilization for
various AQM schemes
Figure 14: Experiment 5. Total Goodput
for the various AQM schemes
The fairness measures of the AVQ algorithm are not shown
here due to space limitations.
Note: Instead of marking or dropping a packet in the
real queue when the virtual queue overﬂows, one can mark
or drop packets in the real queue by applying RED (or any
other AQM algorithm) in the virtual queue. Thus, if there
are desirable features in other AQM schemes, they can be
easily incorporated in the AVQ algorithm. When marking
is employed, our experience is that a simple mark-tail would
be suﬃcient as shown in Experiments 1 through 4. In the
case when the link drops the packets, many successive packet
drops from the same ﬂow could cause time-outs. To avoid
this, one could randomize the dropping by using a mech-
anism like RED in the virtual queue to prevent bursts of
packets of the same ﬂow to be dropped. Our experience
has been that, if RED is employed in the virtual queue, the
performance of the AQM scheme is not very sensitive to the
choice of the RED parameters.
4.
STABILITY ANALYSIS OF THE AVQ
SCHEME
In this section, we will prove the main result of the paper
which was stated in Theorem 1. The starting point of the
analysis is the linearized version of the TCP/AQM model
derived in (4) and (5). We summarize the main ideas behind
the proof:
• The stability of a linear delay-diﬀerential equation can
be analyzed using its characteristic equation. The
characteristic equation of the linear delay-diﬀerential
equation can be obtained by taking its Laplace Trans-
form. For the linearized system to be stable, its charac-
teristic equation should have all its roots in the left-half
plane (i.e., if σ is a root of the characteristic equation,
then Re[σ]  ˜C. Substitut-
ing for ∂p(γC, ˜C
and using the fact that
p(γC, ˜C
∂λ
β(dγC)2 , we ﬁnd that
, and ∂p(γC, ˜C
∂ ˜C
) = N 2
∗
∗
)
∗
)
Note that K12 > K11. Let Λ(s) denote the Laplace-Transform
of δλ(t) and let Ψ(s) denote the Laplace-transform of δ ˜C(t).
Taking the Laplace-transforms of (4) and (5), we get:
sΛ(s) = −K11Λ(s) − K12e
sΨ(s) = −αΛ(s).
−sdΛ(s) + K2e
−sdΨ(s) (9)
(10)
Substituting (10) in (9), we get the so-called characteristic
equation
(cid:5)
(cid:6)
s + K11 + e
−sd
K12 + α
K2
s
= 0.
(11)
Once again, the key idea in this approach is that roots are
continuous functions of the round-trip delay d. As a result,
if the system is stable with d = 0 for a ﬁxed value of α, then
the roots are strictly in the left-half plane. Therefore, we
can choose d small enough such that the roots still remain
in the left-half plane. This will help us to ﬁnd the maximum