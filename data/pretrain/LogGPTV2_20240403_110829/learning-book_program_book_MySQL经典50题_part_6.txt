from Score tl where tl.c_id='03'
28
order by t1.s_score desc) t3
1.21题目20
1.21.1题目需求
查询学生的总成绩，并进行排名
1.21.2 SQL实现
1、先查询每个学生的总成绩
select
s_1d
,sum(s_score)
from Score
group by s_1d
order by 2 desc;
http:/liyangbit.com
55
---
## Page 56
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select
>
s_id
>
，sum(s_score)
>
from Score
>
groupbys_id
>
orderb
by2desc;
S
id
sum(s_score)
01
266
03
一
246
02
210
07
183
05
163
04
120
06
99
rows
inset（0.00sec）
将上面的结果和学生信息表进行关联查询：
select
s.s_name
,s.s_id
,t.score
fron Student s
join(select
s_id
,sum(s_score) score
http://liyangbit.com
56
---
## Page 57
Chapter1.超经典MySQL练习50题
Python数据之道
10
from Score
 11
group by s_1d
12
order by 2 desc
13
)t
on s.s_id = t.s_id;
mysql> select
->s.s_name
>
,5.s_id
,t.score
from Student s
join(select
s_id
,sum(s_score)
score
from Score
group by s_id
orderby2desc
）t
->on s.s_id =t.s_id;
s_name
|s_idIscore
赵雷
01
266
孙风
θ3
246
钱电
θ2
210
郑竹
07
183
周梅
05
163
李云
04
120
吴兰
06
99
rows
in
set
（0.00sec)
不使用中间表查询
select
s.s_id
,s.s_nane
,sum(sc.s_score) score
from Student s
join Score sc
http://liyangbit.com
---
## Page 58
Chapter1.超经典MySQL练习50题
Python数据之道
on s.s_id = sc.s_id
10
group by s.s_id
sap e Aq japo
mysql> select
s.s_id
,s.s_name
,sum(sc.s_score)score
from Student s
join Score sc
ons.s_id=sc.s_id
groupbys.s_id
orderby3desc;
id
sname
score
01
赵雷
266
03
孙风
246
2
钱电
210
07
郑竹
183
05
周梅
163
4
李云
120
06
吴兰
99
rows
inset（0.01sec）
如果想给排名加上一个排序号，可以参考下面的文章：
(http:/renpeter.cn/2020/08/30/SQL%E8%BF%9B%E9%98%B6-3-%E6%8E%92%E5%BA%8F%E4%B8%8E%E7
renpeter.Cn/2020/08/30/SQL%E8%BF%9B%E9%98%B6-3-%E6%8E%92%E5%BA%8F%E4%B8%8E%E7%AA%97%l
加上排序号
select
t1.s_id ,t1.s_name, t1.score
, (select count (t2 score)
http://liyangbit.com
58
---
## Page 59
Chapter1.超经典MySQL练习50题
Python数据之道
from(select s.s_id, s.s_name, sum(sc.s_score) score
from Student s
join Score sc
on s.s_id = sc.s_id
10
group by s.s_id
   a
t2 和 t1 相同
12
where t2.score > tl.score) + 1 as rank
13
from(
select s.s_id ,s.s_name ,sum(sc.s_score) score
一
from Student s
16
join Score sc
17
on s.s_id = sc.s_id
18
group by s.s_id
19
order by 3 desc)t1
order by 3 desc;
t1
20
nysql> select
>t1.s_1d,t1.s_name.tl.score
>.(select
count(t2.score)
,7
from
select s.s_id,s.s_name,sum(sc.s_score) score
>
from Student s
join Score sc
on s.s_id = sc.s_fd
group by s.s_id
order by 3 desc)t2
t2和t1相同
.>fron(
where t2.score > t1.score)+ 1 as rank
>
>
fron Student 5
join 5core sc
p4s*2s = ps's uo
->
group by s.s_id
order by 3 desc)t1
..t1
5_1d | 5_nane | score I rank |
01
赵雷
03
孙风
246 1
1
21
02
钱电
2191
31
07
郑竹
183 1
1631
41
05
周梅
04
1201
51
06
吴兰
991
SMO
in set (0.0e sec)
http://liyangbit.com
59
---
## Page 60
Chapter1.超经典MySQL练习50题
Python数据之道
1.22题目21
1.22.1题目需求
查询不同老师所教不同课程平均分从高到低显示
1.22.2SQL实现
先找出每个老师教授了哪些课程：
select
c.c_name
fron Course c
, t.t_name
Left join Teacher t
on c.t_id = t.t_id;
mysql> select
>
c.c_name
>
,t.t_name
>
fromCoursec
>
leftjoinTeachert
>
on c.t_id =t.t_id；
c_name
tname
数学
张三
语文
李四
英语
王五
rows
in
set
（0.00sec）
将上面的结果和成绩表连接起来：
select
http://liyangbit.com
60
---
## Page 61
Chapter1.超经典MySQL练习50题
Python数据之道
c .c_name
,t.t_name
,round(avg(s.s_score) ,2) score
课程分组后再求均佰
fron Course c
主表：
通过两次连接
left join Teacher t
on c.t_id = t.t_id
left join Score s
on c.c_id = s.c_id
10
group by c.c_id
课程分组
11
order by 3 desc;
nysql> select
->c.c_name
->,t.t_name
>
,round(avg(s.s_score),2)
score
-课程分组后再求均值
-> from Course c
主表，
通过两次连接
->left join Teacher t
-> on c.t_id = t.t_id
->left join Score s
-> on c.c_id = s.c_id
-> group by c.c_id
-> order by 3 desc;
C_nane
Iscore|
数学
张三
174.501
英语
王五
73.501
语文
李四
166.501
=+
FOws
in set (0.0θ sec)
1.23题目22
1.23.1题目需求
查询所有课程的成绩第2名到第3名的学生信息及该课程成绩
1.23.2SQL实现
1.23.2.1自己的方法
1、课程表和成绩表连接起来，显示所有的课程和成绩信息
select
2
s.s_id
,s.c_id
,s.s_score
http://liyangbit.com
61
---
## Page 62
Chapter1.超经典MySQL练习50题
Python数据之道
fron Score s
,c.c_nane
join Course c
on s.c_id = c.c_id
mysql>
select
->s.s_id
>
,S.c_id
>
,s.s_score
>
,c.c_name
->fromScores
->joinCoursec
->ons.c_id=c.c_id;
s_id |c_id|s_score|c_name
θ1
θ1
801语文
θ1
θ2
901数学
θ1
96
一
英语
θ2
θ1
70
语文
θ2
θ2
60
一
数学
θ2
03
80
一
英语
θ3
θ1
80
语文
θ3
θ2
81
一
数学
θ3
03
85
一
英语
θ4
θ1
50
一
语文
θ4
02
40
一
数学
θ4
θ3
30
英语
θ5
θ1
76
语文
θ5
θ2
87
一
数学
06
θ1
43
一
语文
06
θ3
56
一
英语
θ7
θ2
89
一
数学
θ7
103
94
英语
18
rows
in set
(0.01
sec)
2、查出全部的语文成绩
select s.s_id, s.s_sco
2
fron Score s
C.c_na
http://liyangbit.com
62
---
## Page 63
Chapter1.超经典MySQL练习50题
Python数据之道
join Course c on s.c_id = c.c_id
where c.c_name =语文
order by s.s_score desc;
mysql> select s.s_id,s.s_score，c.c_name
-> from Score 5
->join Course con s.c_id =c.c_id
->wherec.c_name='语文'
->order by s.s_score desc;
s_id
s_scoreIc_name
01
80丨语文
03
80丨语文
05
761语文
θ2
70丨语文
04
50丨语文
06
43丨语文
rows in set （0.θθ sec)
3、我们找出语文的第2、3的学生
select s.s_id, s.s_score, c.c_nane
fron Score s
join Course c on s.c_id = c.c_id
where c.c_name =语文
order by s.s_score desc
Limit 1, 2;
http://liyangbit.com
63
---
## Page 64
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select s.s_id,s.s_score，c.c_name
->fromScore s
-> join Course c on s.c_id = c.c_id
->wherec.c_name='语文
->order bv s.s_score desc
->1imit1,2；
从第1行数据之后取2行
θ3
80
语文
05
761语文
rows
in set （0.θθ sec)
4、同时求出语文、数学、英语的分数，并且通过union拼接
un1on连接
(select s.s_id, s.s_score, c.c_name
from Score s
join Course c on s.c_id = c.c_id
where c.c_name ='语文'
order by s.s_score desc
Limit 1, 2)
5
10
uojun
11
12.
(select s.s_id, s.s_score, c.c_name
13
from Score s
14
join Course c on s.c_id = c.c_id
15
wherec.c_name =致学1
16
order by s.s_score desc
17
1fmit 1, 2)
18
19
unfon
20
((select s.s_id, s.s_score, c.c_name
21
from Score s
22
join Course c on s.c_id = c.c_id
23
where c.c_name =英语
24
order by s.s_score desc
2.5
Limit 1, 2))
http://liyangbit.com
64
---
## Page 65
Chapter1.超经典MySQL练习50题
Python数据之道
S
id
S
score
c_name
03
一
80
语文
05
一
76
语文
07
89
数学
05
87|
数学
07
941
英语
03
85
英语
rows
inset
（0.00
0sec）
5、将上面的结果学生信息表进行连接即可
好列是实现了
真的黑要好好优化下
 select
s.s_id
,s.s_nane
,t.c_name
,t.s_score
from Student s
10
jofn {-- union连接
11
12.
(select s.s_id, s.s_score, c.c_name
13
from Score s
14
join Course c on s.c_id = c.c_id
15
where c.c_name =
语文
16
order by s.s_score desc
17
1imit 1, 2)
18
61
unon
20
21
(select s.s_id, s.s_score, c.c_name
http://liyangbit.com
65
---
## Page 66
Chapter1.超经典MySQL练习50题
Python数据之道
2.2.
from Score s
23
join Course c on s.c_id = c.c_id
24
where c.c_name =数学
25
order by s.s_score desc
26
Limit 1, 2)
27
28
unfon
2.9
((select s.s_id, s.s_score, c.c_name
30
fron Score s
31