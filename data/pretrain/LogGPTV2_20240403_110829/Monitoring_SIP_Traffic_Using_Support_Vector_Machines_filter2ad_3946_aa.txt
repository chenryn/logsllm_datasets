title:Monitoring SIP Traffic Using Support Vector Machines
author:Mohamed Nassar and
Radu State and
Olivier Festor
Monitoring SIP Traﬃc Using Support Vector
Machines
Mohamed Nassar, Radu State, and Olivier Festor
Centre de Recherche INRIA Nancy - Grand Est
615, rue du jardin botanique, 54602
Villers-L`es-Nancy, France
Abstract. We propose a novel online monitoring approach to distin-
guish between attacks and normal activity in SIP-based Voice over IP
environments. We demonstrate the eﬃciency of the approach even when
only limited data sets are used in learning phase. The solution builds
on the monitoring of a set of 38 features in VoIP ﬂows and uses Sup-
port Vector Machines for classiﬁcation. We validate our proposal through
large oﬄine experiments performed over a mix of real world traces from
a large VoIP provider and attacks locally generated on our own testbed.
Results show high accuracy of detecting SPIT and ﬂooding attacks and
promising performance for an online deployment are measured.
1 Introduction
The voice over IP world is facing a large set of threats. SPAM on email systems
takes a new and very annoying form on IP telephony advertising. This threat is
known as SPIT (Spam over Internet Telephony). However, SPIT is not the only
threat vector. The numerous software ﬂaws in IP phones and servers aﬀect their
reliability and open the door to remotely attack previously unseen in the “stable”
world of telecommunication operators (PSTN), which was based on mutual trust
among few peers. Leveraging the IP to support voice communications exposes
this service (voice) to the known denial of service attacks that can be easily
implemented by service or network request ﬂooding on the Internet. Resource
exhaustion thus automatically ﬁnds its place against SIP proxies and back-to-
back user agents, which are essential to support this critical infrastructure. The
list of potential threats is huge and ranges from VoIP bots (that could spread
by malware and perform distributed attacks, perform SPIT or toll fraud), to
eavesdropping and Vishing (similar attack to the Phishing are using VoIP as the
transport vehicle) [1].
Securing VoIP infrastructures constitutes one of the major challenges for both
the operational and research communities because security by design was not
a key component in the early phases of both VoIP research and development.
VoIP-speciﬁc security solutions are currently required by the market because the
research and standardization eﬀorts are still trying hard to address the issues of
securing and monitoring VoIP infrastructures.
R. Lippmann, E. Kirda, and A. Trachtenberg (Eds.): RAID 2008, LNCS 5230, pp. 311–330, 2008.
c(cid:2) Springer-Verlag Berlin Heidelberg 2008
312
M. Nassar, R. State, and O. Festor
Our work ﬁts into these eﬀorts and addresses a new monitoring approach
for VoIP speciﬁc environments. Our monitoring scheme is based on Support
Vector Machines for eﬃcient classiﬁcation. We continuously monitor a set of 38
features in signaling time slices and use these features as the raw input to the
classiﬁcation engine. A threshold based alarm generator is placed on top of the
classiﬁcation engine. We show that the system is both eﬃcient and accurate and
study the impact of the various features on the eﬃciency.
We start the presentation with a short survey on VoIP security with focus on
ﬂooding attacks and SPIT. We then give a functional description of our moni-
toring solution together with the deﬁnition of the 38 features computed in our
system for classiﬁcation (section 3). In section 4, we provide a short mathemat-
ical background of the SVM learning machine model used in the monitoring
process. Oﬄine traces inspection is presented in section 5 where we also describe
the data set. Section 6 demonstrates the performances of our approach to de-
tect diﬀerent types of attacks. Related work is addressed in section 7. Section 8
concludes the paper and enumerates some future work.
2 The Threat Model
2.1 Flooding Attacks
Denial of service attacks can target the signaling plane elements (e.g. proxy,
gateway, etc.) with the objective to take them down and produce havoc in the
VoIP network. Such attacks are launched by either ﬂooding the signaling plane
with a large quantity of messages, malformed messages or executing exploits
against device speciﬁc vulnerabilities.
The authors of [2] categorize some of these attacks based on the request URI
and perform a comparative study of these ones against popular open source VoIP
equipment. We adopt the same categorization, i.e.:
– UDP ﬂooding: Since the vast majority of SIP systems use UDP as the trans-
port protocol, a large amount of random UDP packets are sent in an attempt
to congest the network bandwidth. Such attacks produce a high packet loss.
Legitimate call signaling has thus a reduced probability to reach the target
and to be processed.
– INVITE ﬂooding with a valid SIP URI: The attacker calls one user/phone
registered at a server/proxy. The proxy relays the calls to the phone. If the
proxy is stateful it will manage a state machine for every transaction. The
phone is quickly overloaded by the high rate of calls and is no more able to
terminate the calls. As a result, the server is allocating resources for a long
time and it will run out of memory.
– INVITE ﬂooding with a non existent SIP URI: If the attacker doesn’t know
a valid SIP URI registered on the target, it can send calls to an invalid
address. The proxy/server responds with an error response like “user not
found”. When the attack rate is higher than the server capabilities, the
resources are exhausted. This type of ﬂooding is less disturbing than the
Monitoring SIP Traﬃc Using Support Vector Machines
313
previous one but the target CPU is loaded with useless transactions and
legitimate requests may be rejected.
– INVITE ﬂooding with an invalid IP domain address: The attacker calls a
user with a rogue IP address of the destination domain. The target is led
to connect several times to an unreachable host/network while keeping the
state of the current SIP transaction. This attack is eﬃcient on some proxies
like OpenSER [2].
– INVITE ﬂooding with an invalid domain name: The attacker calls a user
with a false destination domain name. The target is trapped to send DNS
requests to resolve the domain name. The target may issue diﬀerent DNS
types (A, AAAA, SRV, NAPTR, ENUM) and repeat them multiple times.
In the same time, the target is managing the transactions waiting for a
valid DNS response to proceed. Memory is quickly exhausted. The eﬀect of
this attack on the performance of OpenSER is shown in Fig. 1. The impact
is evaluated in terms of duration, number of messages exchanged and ﬁnal
state of sessions or transactions. The behavior of the server can be divided in
two successive phases. In the ﬁrst phase, the ﬁrst few requests are correctly
handled (REJECTED) but the session duration is increasing and the proxy
is slowing down. The number of messages is increasing because of response
retransmissions (no ACK is sent by the attacker). In the second phase, the
proxy is no more able to handle the requests (still in CALLSET state) so the
proxy is taken down. The take down time is about 20 seconds for an attack
having just one INVITE/s rate.
– INVITE ﬂooding with an invalid SIP URI in another domain: The attacker
calls a user/phone located in another domain than the target’s one. The
target relays all requests to the server/proxy of the other domain. The latter
replies with an error response. In this way, multiple targets are hit at the
same time and cascading failures occur.
– INVITE ﬂooding with a valid SIP URI in another domain: The attacker calls
a user/phone registered in another domain. The target relays all requests
to the server/proxy of the other domain which sends them to the phone.
The phone gets quickly out of service and maintaining the state by the
intermediary servers will exhaust the resources from all the servers in the
forwarding chain.
– INVITE/REGISTER ﬂooding when authentication is enabled: The attacker
sends INVITE or REGISTER messages and then stops the handshaking
process. The proxy/registrar responds with a challenge and waits for the
request to be send again with the proper authentication credentials. This
process is costly for the proxy/registrar in term of computing (generating
challenges and nonces) and memory (dialogs/transaction state machines).
2.2 Social Threats and SPIT
Social threats are attacks ranging from the generation of unsolicited commu-
nications which are annoying and disturbing for the users to more dangerous
data stealing (Vishing) attacks. The threat is classiﬁed as social since the term
314
M. Nassar, R. State, and O. Festor
Fig. 1. OpenSER Response to an INVITE Flooding with Invalid Domain Name
“unsolicited” depends on user-speciﬁc preferences. This makes this kind of at-
tack diﬃcult to identify. An example of this is a threat commonly referred to
as SPam over Internet Telephony (SPIT). This threat is similar to spam in the
email systems but is delivered by means of voice calls. This leverages the cheap
cost of VoIP when compared with legacy phone systems. It’s currently estimated
that generating VoIP calls is three order of magnitude cheaper than generating
PSTN calls. Such SPIT calls can be telemarketing calls that sell products. A sub-
tle variant of SPIT is the so-called Vishing (VoIP phishing) attack, which aims
either to make the callees dial expensive numbers in order to get the promised
prize or to collect personal data redirecting the users towards an Interactive
Voice Responder (IVR) pretended to be trusted. Most of these attacks are going
to be generated by machines (bot-nets) programmed to do such a job. Unso-
licited communications (like SPIT or Vishing) are, from a signalling point of
view, technically correct transactions. It is not possible to determine from the
INVITE message (in the case of SIP) if a VoIP transaction is SPIT or not. From
a technical point of view, the challenge is actually higher since the content is not
available to help in the detection until the phone rings (disturbing the user) and
the callee answers the call. For this reason, techniques successfully used against
e-mail spam like text ﬁltering are hardly applicable in the VoIP sphere. Even if
a transaction is identiﬁed as unsolicited how to handle such a transaction highly
depends on the legal environment in the country of the caller.
3 Our Monitoring Solution
When facing the mentioned threats, monitoring of the signalling traﬃc can de-
tect anomalous situations and prevent them. The monitoring scheme can be
quite simple and ﬂexible to support diﬀerent techniques. Thus, our approach
follows these principles. As shown in Fig. 2, we track SIP messages in a queue
of predeﬁned size. Once the queue is full, this slice of messages is used to com-
pute a vector of statistics/features. The classiﬁer decides if a vector represents a
certain anomaly and issues an alarm event if necessary. This approach is based
on a learning phase in which couples (vector, class Id) have been used to feed
the engine for learning. This learning process can be made on the ﬂy during the
Monitoring SIP Traﬃc Using Support Vector Machines
315
operational phase of the monitoring system by allowing it to update the pre-
diction model over time. Finally, an event correlator or decider has to ﬁlter and
correlate the events. It generates an alarm for a group of events if they trigger
one of the rules/conditions. e.g. if the number of events of type i bypasses a
certain threshold in a period of time t.
The architecture is modular and enables experimenting with diﬀerent classi-
ﬁcation and artiﬁcial intelligence techniques ranging from statistics and infor-
mation theory to pattern classiﬁcation and machine learning. The pace of the
system tpace is the time it takes to make a decision about one slice without
accounting for the time needed by the event correlation stage. This time is com-
posed of two components: the analysis time of the processor and the machine
time of the classiﬁer. The design achieves real time pace if tpace is less than the
size of the slice S divided by the arrival rate of messages λ:
tpace = tanalysis + tmachine
tpace <
S
λ
We deﬁne in the following the important features that characterize a slice of
SIP traﬃc and motivate why we collect them. We divide these features in four
groups:
– General Statistics: are number of requests, number of responses, number
of requests carrying an SDP (Session Description Protocol) body, average
inter requests arrival time, average inter response arrival time and average
inter requests arrival time for requests having SDP bodies; these statistics
represent the general shape of the traﬃc and indicate the degree of conges-
tion. The fraction of requests carrying SDP bodies (normally INVITE, ACK
or UPDATE) is a good indicator because it will not exceed a certain thresh-
old. An excessive use of re-INVITE or UPDATE for media negotiation or
maybe QoS theft increases the number of SDP bodies exchanged and decre-
ments the average inter-arrival of them. Flooding attacks are associated with
peaks of all these statistics.
– Call-Id Based Statistics: are number of Call-Ids, average of the duration
between the ﬁrst and the last message having the same Call-Id, the average
number of messages having the same Call-Id, the number of diﬀerent senders
(the URI in the From header of a message carrying a new Call-Id) and the
number of diﬀerent receivers (the URI in the To header of a message carrying
a new Call-Id). Similar to the Erlang model used in the telecommunication
networks, where the arrival rate of calls and the average duration of a call
characterize the underling traﬃc, the arrival rate of Call-Ids (can be starting
a call or any kind of SIP dialog) and the interval time of messages having the
same Call-Ids, can be used to characterize the overlay SIP traﬃc. Neverthe-
less, we notice that non-INVITE dialogs have shorter durations and fewer
number of messages than INVITE dialogs. Thus their Call-Id statistics can
be taken as diﬀerent features.
316
M. Nassar, R. State, and O. Festor
Fig. 2. Real-time Online SIP Traﬃc Monitoring
– Distribution of Final State of Dialogs/Call-Ids: Since we are using a
limited number of messages in the traﬃc analysis unit, dialogs can be par-
titioned into two or several units/slices. The ﬁnal state of a dialog at the
analysis moment is considered and this one is not necessarily the ﬁnal state
when all the messages of the dialog can be taken into account. The following
states are deﬁned: NOTACALL: for all non-INVITE dialogs, CALLSET: for
all calls/INVITE dialogs that do not complete the initiation, CANCELED:
when the call is cancelled before it is established, REJECTED: for all redi-
rected or erroneous sessions, INCALL: when the call is established but not
realized yet, COMPLETED: for a successful and ended call and RESIDUE:
when the dialog does not start with a request. This latter is a residual of mes-
sages in a previous slice. In a normal situation where the size of the unit is
large enough, NOTACALL, COMPLETED and REJECTED (in busy or not
found situations) dominate this distribution. Major deviations may indicate
an erroneous situation.
– Distribution of SIP Requests: are INVITE, REGISTER, BYE, ACK,
OPTIONS, CANCEL, UPDATE, REFER, SUBSCRIBE, NOTIFY, MES-
SAGE, INFO, PRACK. Although the ﬁrst ﬁve types represent the main meth-
ods used in SIP, every other type may point out a speciﬁed application running
above. The number of REGISTER sent by a user within a time interval is indi-
rect proportional to the period of registration (expires parameter or Expires
header). Obviously, the total number of REGISTER messages is proportional
to the number of users of the domain and inversely proportional to the average
period of registration among all users. The existence of SUBSCRIBE and NO-
TIFY messages indicates SIP presence services. Instant messaging can also be
revealed by MESSAGE requests. REFER requests may reveal a SIP peer to
peer application or some call transfer running above. INFO requests are nor-
mally used to carry out of band DTMF tones within PSTN-VoIP calls. Finally,
PRACK requests may reveal VoIP to PSTN activity.
– Distribution of SIP Responses: are Informational, Success, Redirection,
Client Error, Server Error, Global Error. An unexpected high rate of error
responses is a good indication for error situations.
Among the diﬀerent scientiﬁc approaches in the area of classiﬁcation (Bayesian