--面向企业src的漏洞挖掘
从0到1，发现与拓展攻
击面
Speaker name：羽
Date：2019/04/19
01
子域名枚举、端口扫描、路径扫描、旁站c段查询
常规性资产收集
02
关注页面内容、关注目录、敏感关键字搜索
巧用搜索引擎
03
构造接口、构造文件、构造目录、框架搭配
发挥创造性思维
04
微信公众号、小程序
关注企业动态
05
gayhub搜索、漏洞回挖、假性社工
其他tips
06
从一个文件服务器静态资源泄露引发的血案
综合案例
content
常规性资产收集
基本的资产收集方式：子域名枚举、端口扫描、路径
扫描、旁站c段查询
子域名枚举
4
子域名爆破：sublist3r、subdomainsBurte、subfinder、layer子域名挖掘机
子域名枚举
5
在线子域名查询站点：云悉资产、FOFA、Virustotal、Dnsdumpster、Threatcrowd
路径扫描
6
目录爆破+路径扫描：msf中的brute_dirs、dir_listing、dir_scanner；dirsearch
旁站c段查询
7
在线旁站C段查询：www.webscan.cc、www.5kik.com、phpinfo.me
常规性资产收集
8
子域名爆破工具+
在线子域名查询，
获得子域名列表
子域名枚举
对站点旁站、c段进行
查询，对获取到的新资
产收录入子域名列表，
开启下一轮循环
旁站C段查询
使用nmap探测站点
开放端口，记录到域
名列表中
端口扫描
对站点所有开放的
web端口进行路径扫描，
获取具体资产
路径扫描
常见困境
9
10
11
巧用搜索引擎
在通过端口扫描、目录爆破、路径扫描之后，仍无法
发现目标站点有效资产的时候，借助搜索引擎往往会
有意外的收获
渗透测试必备三大搜索引擎
13
1
百度搜索：四星推荐
2
必应搜索：四星推荐
3
谷歌搜索：五星推荐
14
由于不同的搜索引擎对于同一站点收录的内容会不同，使用多个搜索引擎搜索
站点，常常能够有意外的收获。常用的搜索语法：site:www.example.com
关注页面内容
15
intext：www.example.com
关注目录:不同目录下隐藏着不同的系统
16
对于时间就是金钱的众测项目来说，
摸清站点结构是十分重要的，发现隐
藏的薄弱的系统不仅不容易重复，也
更容易获得漏洞赏金。
敏感关键字搜索
17
①parent directory site:www.example.com
②site:www.example.com asmx/xml
发挥创造性思维
假如搜索引擎也失去了色彩，这个世界还会好吗？还
会的！通过发挥创造性思维去构造接口、构造文件、
构造目录，同样可以闯出一片天地！当然了，加上框
架搭配，味道会更佳！
发挥创造性思维·接口构造
19
seat.xxx.com，开局一个登录口：
发挥创造性思维·接口构造
20
接口泄露：
发挥创造性思维·接口构造
21
接口请求方式及参数泄露：
发挥创造性思维·接口构造
22
构造成功：
发挥创造性思维·文件构造
23
www.xxx.com/about/job/cn/xxx.asp，开
局一个几乎静态的页面：
发挥创造性思维·文件构造
24
然后，发现www.xxx.com/about/job/cn/cn.rar，
马上整站源码唾手可得：
发挥创造性思维·目录构造
25
vat.xxx.com，开局404：
发挥创造性思维·目录构造
26
vat.xxx.com/vat/下原来
别有天地：
发挥创造性思维·框架搭配
27
www.example.com，开局直接报错：
发挥创造性思维·框架搭配
28
探测springboot下的actuator服务：
发挥创造性思维·框架搭配
29
探测swagger服务：
关注企业动态
微信公众号、小程序、app、应用程序
企业动态：关注app、应用程序、新系统、新上线功能
31
其他tips
gayhub搜索、漏洞回挖、假性社工
gayhub搜索
33
搜索厂商域名往往也有意外的收获
漏洞回挖：关注修复方式、新的功能模块
34
发现修复方式就是过滤了漏洞报
告里的那个payload，换个payload
照样能执行
假性社工：关注内部群、员工和客服
35
打入内部群，往往能获
取一手资料；当然，往
往客服、内部员工也能
提供很多有关于产品的
的信息
假性社工
36
进行社工时要注意分寸
和尺度，有的厂商严格
禁止社工，需要注意不
同厂商的要求
综合案例
从一个文件服务器静态资源泄露引发的血案
源起
38
测试的时候，碰到这么个文件
服务器，域名是ret**.xxx.com
深入
39
发现一个js文件中，有很多似乎很有用的东西
整理下收获的信息：
发现得到了一个可能过
期的token，一个
loginId、一个appKey、
一个**Key、
shopCode格式、内网
信息、测试环境域名及
生产环境域名
再深入
40
另一个js文件中，泄露了一个swagger控制台地址
继续整理下收获的信
息：发现得到了一个新
的域名，一个swagger
控制台地址
再深入
41
可直接访问控制台，但如果其中api不能成功访问的话
也没用，于是之前记录的信息派上用场了：
到此为止了吗
42
之前看了半天的js内容，某个关键字reta**反复出现。
突然想起，该src有个域名是reta**.xxx.com，会不会
有所关系呢？
再深入
43
对reta**.xxx.com进行端口扫描，目录爆破，路径
扫描，只找到一个入口：
转机
44
使用搜索引擎搜索下，发现该站存在一个应用程序
叫xxx示可下载，而且发现了一个新的域名：
再深入
45
打开了下载的xxx示，抓包，发现果然内有天地：
再深入
46
查看目录结构，发现一个目录结构是retaxx-ad，直
接构造出后台管理页面：retaxx-admin，直接目录遍
历获取源码+进入后台：
再深入
47
探测每一级目录，发现站点是springboot框架，探
测actuator服务：
再深入
48
继续探测swagger服务：
发现该路径存在actuator服
务以及swagger服务，继续
探测其他路径下的actuator服
务及swagger服务，最后发
现了其他几个路径下的
swagger服务。
再深入
49
提示我去下载app，意外收获了一堆该src旗下与该
app功能相关的app：
再深入
50
其中一个app所在的域名：apxx.xxx.com，恰好是
前面文件服务器泄露的生产环境域名，通过探测框
架及服务，发现同样存在swagger控制台未授权访问
漏洞
最后一次反问
51
生产域名有这个洞，测试域名会有吗？
发现该站的几个测试
域名：apxx-
xx.xxx.com、apxx-
xx1.xxx.com、apxx-
xx2.xx.com，同样的路
径下存在着相同的漏洞
最后一次思考
52
其中某个域名对应着某个系统，可绕过验证码爆破，
最后成功爆破出存在弱口令的账号，登入系统：
53
搜
索
引
擎
文件服务器
信息泄露
mexxx.xxx.com
域名swagger控
制台未授权访问
关键词关联域名
retxx.xxx.com-
搜寻
关键字
swagger控制
台未授权访问
后台未授权访
问
xxx应用程序
目录构造
框架搭配
App
搜
寻
登入另一个系
统
App资产
搜寻
5严重7高危7中危
Thanks.
特别感谢Lo7up和
Adam师傅提供的
一些思路.