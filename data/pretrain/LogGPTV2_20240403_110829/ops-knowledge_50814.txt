User: How to use Ansible for automated deployment? Please provide relevant configuration files and operation steps.
Assistant: Ansible is an automated deployment tool that can remotely configure and manage through SSH, and can automatically complete tasks such as configuration management, automated deployment, and system orchestration, simplifying the deployment and management of distributed applications. Here are the steps on how to automate deployment with Ansible. 1. Install Ansible ``` sudo apt update sudo apt install ansible ``` 2. Configure Ansible Edit the `/etc/ansible/hosts` file and add the IP address of the host to be managed. ``` sudo vi /etc/ansible/hosts [web] 192.168.1.10 192.168.1.11 [db] 192.168.1.12 ``` 3. Create Ansible playbook Create a `.yml` playbook file to define the tasks to be executed. ``` sudo mkdir /etc/ansible/playbooks sudo vi /etc/ansible/playbooks/web.yml --- - name: Configure Web Server hosts: web become: true tasks: - name: Update apt cache apt: update_cache= yes - name: Install Nginx apt: name=nginx state=present - name: Create index.html copy: content="<h1>Welcome to My Website</h1>" dest=/var/www/html/index.html mode=0644 ``` 4. Run Ansible playbook Use the ansible-playbook command to run the playbook file. ``` sudo ansible-playbook /etc/ansible/playbooks/web.yml ``` After executing the above command, Ansible will remotely connect to the host, perform corresponding tasks, and complete the deployment. In addition, some variables can be used in the playbook file to more conveniently manage hosts in different environments. For example: ``` sudo vi /etc/ansible/playbooks/config.yml --- - name: Configure System hosts: "{{ target }}" become: true vars: web_servers: - 192.168.1.10 - 192.168.1.11 db_servers : - 192.168.1.12 tasks: - name: Update apt cache apt: update_cache=yes - name: Install Nginx apt: name=nginx state=present when: inventory_hostname in web_servers - name: Install MySQL apt: name=mysql-server state= present when: inventory_hostname in db_servers ``` When running the ansible-playbook command, use the `-e` option to specify the variables to be deployed on the host. ``` sudo ansible-playbook /etc/ansible/playbooks/config.yml -e target=web ```