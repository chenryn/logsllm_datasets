### Table III: Summary of Measurement Observations for Expired Domains

Table III summarizes the measurement observations for domain names that have expired and also appeared in our public blacklist and malware datasets. From the set \( DZ \) (where "Z" stands for zombie), we observed 123,396 domains that existed in the union of \( DM \) (malware dataset) and \( DB \) (blacklist dataset) before appearing in \( DG \) (graveyard dataset). In other words, these domains were used for abusive behavior before they expired.

- **Malware Contacted**: 54,215 (43.9%) of these domains were contacted by malware.
- **Public Blacklists**: 73,564 (59.6%) of these domains appeared on public blacklists.
- **Overlap**: 4,748 (8.8%) of the domains contacted by malware also appeared on a public blacklist.

Given their historical association with malicious behavior, these domains represent instances of negative residual trust. Security practitioners can leverage this negative residual trust for good by using these domains for different reconnaissance techniques, such as sinkholing. However, it is important to note that negative residual trust can also be exploited for malicious purposes. For example, an Advanced Persistent Threat (APT) actor could use an expired spam-related domain to camouflage itself as a different type of threat, thereby stymying discovery or attack attribution.

Conversely, we observed 263,847 domains that expired before appearing in \( DM \cup DB \). Specifically:
- **Malware Contacted**: 238,279 (90.3%) domains were contacted by malware only after expiring.
- **Public Blacklists**: 27,758 (10.5%) domains appeared on public blacklists only after expiring.

These domains represent cases where positive residual trust is potentially being used for illicit activities. By registering expiring domains, bad actors can leverage the benefits of any positive reputation (such as brand and industry sector properties) previously held by the domain. This problem is exacerbated by the fact that benign domains often remain on whitelists after ownership changes due to the difficulty of discovering such events. Only 3,327 (1.4%) of the domains that expired before being contacted by malware ever appeared on a Public Blacklist (PBL).

### Categorization of Malware Types

To better understand the types of malware that might be abusing residual trust, we categorized the different types of malware observed in \( DZ \). Table V shows the top 10 malware types and families for a simple random sample of 10,000 domains that expired and were potentially used for abuse. Trojans are the most common type, followed by generic types such as "malware" and "heuristic." The families are similarly dominated by heuristically determined labels and a few family-specific labels. For example, VB.SMIS and Vobfus are generic labels for obfuscated malware written in Visual Basic. While there are instances where the MD5 is flagged as benign by antivirus engines, most are malicious. Additionally, 915 out of 1,559 registrars were used for registering privacy-protected domain names to mask the registrant's email address and name. Although there are legitimate reasons to use such services, they are commonly employed by malicious actors to evade WHOIS attribution.

### Top-Level Domain (TLD) Distribution

Table IV provides a breakdown of the top-level domains (TLDs) in \( DZ \). The distribution largely corresponds to the general popularity of each respective TLD, with the exception of .edu. We observed proportionally more .edu domains being used for malicious purposes after expiration, possibly due to the inherent trust users place in the educational TLD.

### Temporal Properties of Residual Trust Abuse

Next, we focus on the temporal properties of residual trust abuse. Figure 4 shows the distribution of deltas between the expiration date and the first indicator of potential abuse. On average, this delta was around a year for domains contacted by malware or appearing on blacklists. The extended length of this dormancy period suggests that it may take a considerable amount of time before the trustworthiness of the current domain owner can be ascertained. Therefore, not only must changes in ownership be detected, but such changes should be monitored until the new owner's trustworthiness can be determined.

For domains that expired before being used for abuse, the delta between the last indicator of abuse and the expiration event was roughly two years on average. The full distribution of these deltas, shown in Figure 4, reveals two peaks, approximately one year apart, for domains contacted by malware or appearing on public blacklists before expiring. These peaks represent a small number of domains and are an artifact of shared expiration events for domains in \( DM \cap DB \).

The long delay between the last observed malware communication and expiration could be due to several factors. For example, malware authors may choose not to allow a domain to expire until the number of malicious connections drops below a certain threshold, allowing the botmaster to continue monetizing the domain. Additionally, a malware author may prevent a domain from expiring to restrict security practitioners from taking over the domain.

### Growth of Residual Trust Abuse

Figure 3 shows that residual-trust abuse is becoming more common. The number of domains being contacted by malware after expiration grew from 6,138 between 2009 and 2012 to over 12,000 in just 2013. Similarly, the number of previously expired domains subsequently appearing on blacklists has grown from 784 between 2009 and 2012 to over 9,000 in 2014 alone. More than 100 of these domains were ranked in the top 10,000 by Alexa on the day they were added to the blacklist. The horizontal striations in the figure are an artifact of malware collection and blacklisting processes. The vertical gap for December 2015 is the result of missing data stemming from technical issues with our collection framework.

### Algorithm 1: Computing Component Scores

Algorithm 1 outlines the functions used to compute component scores for identifying ownership changes. These components include infrastructure changes, lookup volume, and SOA differences. The INFRA-SCORE function computes the Jaccard distance between hosts observed during two periods, while the VOL-SCORE function computes a t-test between two distributions of lookup volumes. The SOA-SCORE function measures changes in SOA records, specifically in the authoritative nameserver (MNAME) and the email address (RNAME) fields.

### Alembic Algorithm

The Alembic algorithm uses the component scores to generate rankings of likely domain ownership changes. Algorithm 2 presents a pseudo-code implementation of the Alembic algorithm. The algorithm first defines a window \( W \) and then computes the component scores for each date within the window. The change of ownership score is computed as the sum of each component score, resulting in a value between zero and three. These scores can be sorted to provide a ranking of dates and corresponding ranges most likely associated with changes in domain ownership.

### Efficacy of Alembic

Using the Alembic algorithm and our passive DNS dataset, we computed ownership scores for a sample of active domains in \( DZ \). A domain was defined as active if it was resolved at least \( W \) times (with \( W = 14 \)) over any 120-day period in our dataset. We calculated 764,681 ownership scores for 11,564 domain names and compared them against known ownership changes gathered from historically collected WHOIS data. Figure 6 shows the distance between the actual date of change and the closest observation date in our dataset. Approximately 80% of the confirmed changes fall within 13 days of an observation in our dataset.

This analysis demonstrates the effectiveness of the Alembic algorithm in detecting domain ownership changes, which can be leveraged to improve existing reputation and detection systems.