Table III summarizes the measurement observations behind
the domain names that expired and also appeared in our
public blacklist and malware datasets. From DZ , we observed
123,396 domains that existed in DM ∪DB before appearing in
DG. In short, these domains were used for abusive behavior
before they expired. From this subset, 54,215 (43.9%) were
contacted by malware and 73,564 (59.6%) appeared on public
2The Z in DZ stands for zombie. Similarly, the G in DG stands for
graveyard. These identiﬁers, as well as the paper’s title, are in reference to the
similarities between reanimated (i.e., re-registered) domains and the depictions
of zombies in popular media.
696696
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
blacklists. Additionally, 4,748 (8.8%) of the domains contacted
by malware also appeared on a public blacklist. Given their
historical association with malicious behavior, these domains
represent instances of negative residual trust.
Security practitioners can leverage domains with such trust
for good by using them for different reconnaissance techniques
like sinkholing. It
to note that negative
residual trust can be used for malicious purposes as well.
For example, an APT actor could use an expired spam-related
domain to camouﬂage itself as a different type of threat; this
would likely stymie discovery or attack attribution.
is also important
Conversely, we observed 263,847 domains that expired
before appearing in DM ∪ DB. More speciﬁcally, 238,279
(90.3%) domains were contacted by malware and 27,758
(10.5%) appeared on public blacklists only after expiring.
Therefore, these domains represent cases of positive residual
trust potentially being used for illicit activities. By registering
expiring domains, bad actors can leverage the beneﬁts of
any positive reputation (such as brand and industry sector
properties) previously held by a domain. Previously, we high-
lighted several concrete instances of this problem (Section III).
This problem is worsened by the fact that benign domains
often remain on whitelists after ownership changes due to the
difﬁculty of discovering such events. This is highlighted by the
fact that only 3,327 (1.4%) of the domains that expired before
being contacted by malware ever appeared on a PBL.
To better understand the types of malware that might be
abusing residual trust, we categorized some of the different
types of malware observed in DZ . Table V shows the top 10
malware types and families for the malware observed com-
municating with a simple random sample of 10,000 domains
that expired and then were potentially used for abuse. Trojans
are by far the most common type, with many generic types
such as “malware” and “heuristic” following. The families
are similarly dominated by heuristically determined labels
and a few family speciﬁc labels. For example, VB.SMIS and
Vobfus are generic labels for obfuscated malware written in
Visual Basic. While there are instances where the MD5 is
ﬂagged as benign by the AV engines, most are malicious. As
more evidence of maliciousness, 915 of the 1,559 registrars
were used for registering privacy protected domain names to
mask the registrant’s email address and name. While there are
legitimate reasons to use such a service, they are commonly
employed by malicious actors to evade WHOIS attribution.
Finally, we provide a breakdown of the top-level domains
(TLDs) in DZ in Table IV. The distribution largely corre-
sponds to the general popularity of each respective TLD.
The potential exception is edu. We observed proportionally
more edu domains being used for malicious purposes after
expiration—possibly due to the inherent trust users place in
the educational TLD.
C. Measuring Temporal Properties of Residual Trust Abuse
Next, we focus our analysis on the temporal properties of
residual trust. We start by referring the reader to Figure 4,
which shows the distribution of deltas between expiration and
ﬁrst indicator of potential abuse. On average, this delta was
around a year for domains contacted by malware or appeared
on blacklists. The extended length of this dormancy period
Expired to Malicious Malicious to Expired
Count
TLD
85,409
com
15,954
net
9,287
org
5,869
info
3,226
us
2,458
biz
989
ca
76
cn
56
co
45
edu
15
mobi
11
asia
1
de
9,648 info
5,575 org
2,671 biz
2,185 us
846 cn
646 mobi
175 asia
146 ca
Count TLD
214,019 com
27,621 net
80 edu
35 co
20 de
TABLE IV: TLD frequency for domains in DZ . This includes
all domains that were used for abuse and expired at some point.
In total, we observed 13 TLDs used by these domains.
suggests that
it may take a considerable amount of time
before the trustworthiness of the current domain owner can be
ascertained. Therefore, not only must changes in ownership be
detected but such changes should be monitored until the new
owner’s trustworthiness can be determined.
Diving deeper into the domains that expired before being
used for abuse, we ﬁnd that the delta between the last indicator
of abuse and the expiration event was roughly two years on
average. The full distribution of these deltas can be seen in
Figure 4 and shows two peaks, appearing approximately one
year apart, for domains contacted by malware or appearing
on public blacklists before expiring. The two peaks represent
a small number of domains and are an artifact of shared
expiration events for domains in DM ∩ DB.
The long delay between last observed malware commu-
nication and expiration could be due to several factors. For
example, in order to maximize the utility of malicious domains,
malware authors may choose not to allow a domain to expire
until the number of malicious connections to that domain
drops below some threshold (i.e., the domain could still being
monetized by the botmaster). Additionally, a malware author
may choose to prevent a domain from expiring in order to
restrict security practitioners from taking over the domain.
D. Measuring the Growth of Residual Trust Abuse
Figure 3 shows residual-trust abuse is becoming more
common. The number of domains being contacted by malware
after expiration grew from 6,138 between 2009 and 2012 to
over 12,000 in just 2013. Similarly, the number of previously
expired domains subsequently appearing on blacklists has
grown from 784 between 2009 and 2012 to over 9,000 in
2014 alone. Further, more than 100 of these domains were
ranked in the top 10,000 by Alexa on the day they were added
to the blacklist. The horizontal striations in the ﬁgure are
an artifact of malware collection and blacklisting processes.
Namely, the feed operator may add many domains (possibly
for the same threat) on the same day. Similarly, the vertical
gap for December 2015 is the result of missing data stemming
from technical issues with our collection framework.
697697
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
698698
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
699699
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 



Algorithm 1 Computing Component Scores



















function INFRA-SCORE(hi, hj )
return 1 - JACCARD-INDEX(hi, hj )
end function
function VOL-SCORE(vi, vj )
t val, p val ← TTEST(vi, vj)
return 1 − p val
end function
Fig. 5: Using different components to identify ownership
changes.
other unique attributes of the zone.3 Substantial changes in
both the email and primary name server are strong indicators
in ownership change for a given domain name. We therefore
performed historical queries for SOA records for all
the
domains in DZ .
B. Design of Alembic
We now describe how, using the aforementioned datasets,
we identify domain names most likely to have undergone a
change in ownership. We call our algorithm Alembic, after the
still used by alchemists. Alembic lets us distill historical pas-
sive DNS evidence into a ranking of dates, and corresponding
ranges, that are most likely to be associated with a change in
domain ownership.
First, we discuss how we combine temporal changes in in-
frastructure, lookup volume, and SOA records into component
scores. Then, we discuss how we generate the necessary inputs
to compute these scores and how they are used to generate
rankings of likely domain ownership changes.
1) Computing Component Scores: The Alembic algorithm
is based upon the hypothesis that changes in ownership are
highly likely to be accompanied by changes in network in-
frastructure, lookup volumes, and zone structure. While some
users registering expired domains might be able to create the
exact same zone content, host the nameservers at the same
IPs, and generate the same SOA records, it is presumed this
sort of subterfuge is both difﬁcult and rare. This heuristic
therefore comes down to the following conjecture: While one
can perhaps buy any desired domain, one cannot so easily
obtain its old IP address and use the same nameservers to
manage the re-registered domain.
In order to identify these potential changes, the algorithm
uses a temporal sliding window to measure changes in each
component as observed in passive DNS resolutions over time.
An overview of how the window and components ﬁt together
can be viewed in Figure 5. A summary of each individual
component follows below.
Infrastructure Changes. For given a temporal window, W ,
we compute the Jaccard distance between hosts observed dur-
ing the ﬁrst and second portion of the window; this measures
function SOA-SCORE(si, sj )
mi, ri ← si
mj, rj ← sj
M ← 1
R ← 1
return M + R
2
(1 − JACCARD(mi, mj))
(1 − JACCARD(ri, rj))
2
end function
the dissimilarity between hosts seen during each period of
time. In Algorithm 1, this measurement is computed by the
INFRA-SCORE function. The computed score will range from
zero to one where zero indicates the sets are exactly the same
and one indicates that the two sets are completely disjoint.
Lookup Volume. Similarly, the distribution of lookup volumes
for a given domain is split into two intervals for the current
temporal window, W . We compute a t-test between the two
distributions to measure if the null hypothesis (i.e., whether
there is no relationship between them) is supported. This
returns both a t-score and a p-value. The p-value ranges
between zero and one with a lower p-value suggesting that
the observed distributions are more likely to be consistent
with the null hypothesis. Thus, a lower p-value suggests that
the distributions are more likely to be different and a higher
p-value suggests that the distributions are more likely to be
similar. The VOL-SCORE function in Algorithm 1 shows that
the volume score is computed as one minus the p-value which
results in dissimilar distributions receiving a higher score.
SOA Differences. Like the previous two cases, we compute a
score based on observations about the difference between the
ﬁrst and second portion of the current temporal window, W . In
particular, we measure changes to SOA records observed dur-
ing these two intervals. Each SOA record contains two ﬁelds
of interest: an authoritative nameserver, MNAME, and an e-mail
address, RNAME, for the individual responsible for the zone.
We measure changes to each of these ﬁelds independently
in order to ﬁnely measure changes in SOA records. Thus,
we compute the Jaccard distance between the set of MNAMEs
observed in each portion of W , and separately, we compute
the Jaccard distance between the set of RNAMEs observed in
each portion of W . The SOA-SCORE function, in Algorithm 1,
shows how we compute the overall score for changes in SOA
records, and like the previous component scores, higher values
indicate there were more changes between the ﬁrst and second
portion of the temporal window.
3Those not familiar with DNS zones and DNS record types may wish to
consult [49].
2) Alembic Algorithm: The Alembic algorithm uses the
component scores to generate rankings of likely domain own-
700700
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 2 Alembic Algorithm
function ALEMBIC(d, h, v, s)
W ← window size
if |h| ≥ W then
2 records before date d in h
2 records after date d in h
hi ← W
hj ← W
scoreh ← INFRA-SCORE(hi, hj)
di ← minimum date for record in hi
dj ← maximum date for record in hj
vi ← lookup distribution between [di, d] in v
vj ← lookup distribution between (d, dj] in v
scorev ← VOL-SCORE(vi, vj)
si ← SOA records seen between [di, d] in s
sj ← SOA records seen between (d, dj] in s
scores ← SOA-SCORE(si, sj)
return scoreh + scorev + scores
else
return 0
end if
end function
ership changes. Algorithm 2 presents a pseudo-code imple-
mentation of the Alembic algorithm.
The ﬁrst step in the algorithm is to choose a window W .
This window deﬁnes the number of days worth of passive
DNS data, around some date d, required for the algorithm to
compute a change in ownership score. For example, if W =
14, then seven days worth of records before and after d are
necessary for the algorithm to run; if insufﬁcient records are
available, the algorithm simply returns zero. In Algorithm 2,
this process results in hi and hj , which are sets of hosts seen
2 days before and after d. These sets are used
in A records
as the input to INFRA-SCORE to compute the infrastructure
component score.
W
Since not all domains will have W contiguous days worth
W
of records around d, the algorithm tries to pick the
2 closest
days before and after d. This may result in date ranges of
varying size for each half of W . Therefore, we compute the
date range for a window, W , by ﬁnding the minimum date,
di, associated with the records in hi and the maximum date,
dj , associated with the records in hj .
We use the date ranges [di, d] and (d, dj] to compute the
lookup volume distributions for each portion of W around d.
If we do not have lookup volumes associated with a date in
one of these ranges, we assign it a lookup volume of zero; this
imbues information about how frequently the given domain is
resolved. The lookup volume distributions for each date range,
vi and vj , are given as inputs to the VOL-SCORE to compute
the lookup volume component score.
Next, the SOA records observed between the date ranges
[di, d] and (d, dj] are placed into two sets, si and sj , and
these sets are given as parameters to SOA-SCORE to compute
701701
s
e
g
n
a
h
C
f
o
n
o
i
t
c
a
r
F
1.00
0.75
0.50
0.25
0.00
0
40
Days Between Change and Closest Observation
80
120
Fig. 6: CDF showing the distance (in days) between an
ownership change and the closest observation in our passive
DNS dataset. For 75% of the ownership changes, there is an
observation in the passive DNS dataset that is less than 20
days away.
the SOA component score.
Finally, the change of ownership score is computed as the
sum of each component score, which results in a value that
ranges between zero and three. This score should be computed
for each date that a passive DNS resolution was seen for a
domain; these scores can then be sorted from highest to lowest
to provide a ranking of dates, and corresponding ranges, which
are most likely associated with changes in domain ownership.
The resulting list can be used to provide additional informa-
tion about domains based on their residual trust. For example,
whitelists can be pruned so that benign sites undergoing an
ownership change can be quickly remapped to another appro-
priate category (e.g, “unknown” or “untrusted”) depending on
the context. Knowledge of ownership changes can be leveraged
to improve existing reputation and detection systems.
C. Efﬁcacy of Alembic
Using the Alembic algorithm and our passive DNS dataset,
we compute the ownership scores for a sample of active
domains in DZ . In our analysis, we deﬁne a domain as active
if it was resolved at least W , with W = 14, times over any 120
day period in our dataset. This requirement ﬁlters domains for
which the lack of observations would yield unreliable results.
Similarly, we restrict our analysis to domains for which we
were able to acquire ground truth about ownership changes.
In total, we calculated 764,681 ownership scores for 11,564
domain names.
We compared the scores against known ownership changes
gathered from archives of historically collected WHOIS
data [16]: 17,838 changes in total. Figure 6 shows the distance
between actual date of change and the closest observation
date in our dataset. In short, 80% of the conﬁrmed changes
fall within 13 days of an observation in our dataset. This
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
Score
1.6
1.4
1.2
Rank
●
●
●
●
●
100
200
300
400
500
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●