凤凰号几乎肯定会结束“生命”。在高纬度的着陆点，该探测器在一
个完全黑暗的、被固态二氧化碳所覆盖的极寒冷的（-90C或者更
冷）冬天下存活的机会是非常非常渺茫的。
我是凤凰号探测器的成像软件的首席软件工程师。在本章中，我将
分享在设计凤凰号火星探测器的成像飞行软件的各种各样的数据处
理策略的过程中所做的一些思考。因为该软件负责处理在火星表面
的所有成像相关的任务，又具备“飞行软件"的使命，所以在喷气推
进实验室/美国航天局(JL/NASA)的术语中，该成像软件又称为"成像
飞行软件”
对于凤凰号火星着陆探测器，其面临的挑战是同时捕获并处理四个
感光元件(carge-coupleddevice,CCD)成像器的数据（类似于普通的
数码相机的功能），而且所有这些操作都是在探测器的主计算机预
分配的非常有限的内存中完成。不仅如此，图像可能还需要在传输
回地球之前使用一个或几个不同的压缩方法进行压缩。此外，一些
1360
---
## Page 1362
最终的数据产品（即图像）需要被细分为不同的分段，每个分段都
有自已序列化的数字数据头，这种方式可以满足高效存储在太空飞
行器的闪存中，并且当数据包从火星传到地球时，可以减少数据包
丢失等原因所造成的数据量的丢失。最终生成的嵌入式代码，在凤
凰号火星着陆探测器正常运转的生命周期内，获取并处理了超过
25000张的图像。
一些背景
在我们深入了解数据处理之前，最好简单地介绍一下“戏剧的主
角”：成像器（也称为照相机）和太空飞行器的计算机。
凤凰号火星着陆探测器的主计算机的CPU是一个RAD6000，其最大
时钟率为20MHz，另外它也能够以较低的时钟率来运行，以节省电
池能量。这其中没有什么尖端的技术，只是一台防辐射的、把内存
和闪存都混合在VME电路板的第一代PowerPC。CPU完成处理着陆
任务后，它的主要功能是和地球通信（用专业术语来说，就是“上
行和下行”，接下来将会详细介绍），监测太空飞行器的健康状
况，通过从地球上发送的各种命令来协调各种科学设备的运行活
动。它采用了WindRiver公司的VxWorks实时操作系统（ROS)，以及
太空飞行器承包商LockheedMartin公司提供的各种扩展软件。所有
的飞行软件都是用C语言实现的，代码编写遵循一组特定的规范。
“上行”和“下行”
从太空飞行任务的专业角度来看，术语“上行"和"下行"指的是在地
面和太空飞行器的控制器之间传送数据或命令。“上行"指的是传送
命令或者数据到太空飞行器。“下行”发生在太空飞行器向地面发送
回数据。
正如生活中的许多事情，指向飞行器顶部的天线并点击"PushTo
Tallk”（对话）按钮，从来就不是一件很简单的事情。“上行"的数据
或者命令必须首先通过审核，甚至是通过一些模拟来确保一切都准
确无误。然后，命令和数据将会传递给命令控制器，当存在“上行”
任务时，该控制器将会调度该任务（或者用太空术语来说，即“辐
射"(rdiated)）。最后，这些数据进入NASA的DeepSpace
Network(DSN)通信系统，并从太空中辐射出来。但这并非最后一
步，因为对于凤凰号探测器，它还必须通过绕火星轨道飞行的人造
卫星进行中转，因为凤凰号探测器本身无法直接和地球通信。当该
1361
---
## Page 1363
人造卫星运行到火星水平线时，凤凰号探测器将会监听新的“上行”
数据。
“下行"也一样错综复杂。同样地，需要人造卫星作为中继，从凤凰
号探测器接收数据，然后把这些数据传送回在地球上的NASA的其
中一个DSN接收天线。然后，将会对这些数据进行各种处理和中转
操作，直到把它们最终保存在JPL。如果是图像数据，JPL的Mission
图像处理实验室将会对这些图像重新组合，提供给Arizona大学的科
学运作中心的那些热切期待数据的科学研究团队。
凤凰号火星着陆探测器包含三个主要的照相机来完成表面科学成
像：立体表面成像器(SereoSurfaceImager,SSI，有两个CCD感光元
件）、机械臂成像器（RboticArmCamera,RAC，只有一个CCD感光
元件）、晶体管光学显微镜(MCAOpticalMicroscope,OM)成像器
（同样，有一个和RAC相同的CCD)。图3-2显示了立体表面成像器
SSI的飞行模型，图3-3显示了连接到机械臂的机械臂成像器RAC。
光学显微镜放置在晶体管装置的内部，它本身看起来像是着陆器甲
板表面上的一个黑盒子。
设计时所面临的挑战是设计一种方式，用以完成以下几个步骤的处
理：从每个照相机上下载图像数据；把数据保存在一个预分配的内
存空间；对数据进行处理，删除已知的像素点缺陷；修剪或者扩展
图像；根据命令行参数进行压缩；然后对图像进行切片和切块(sice-
and-dice)，把图像切分成各个数据包，把这些数据包传送给主机的
“下行"(dwnlink)管理任务，从而传输回地球。
在立体表面成像器SSI中，每1024x1024像素的CCD感光元件能够生
成2MB的数据，或者是100万个12位像素的数据。因为SSI是一台真
正的立体照相机，它的成像器通常叫做“眼晴”。而且，SSI看起来确
实有点像老式的机器人脑袋。机械臂成像器RAC和晶体管光学显微
镜成像器OM每个都包含一个512x256像素的CCD感光元件成像器，
每个成像器生成131072（或262144字节）个像素的数据（从现在开
始，对于这两台成像器，我都将称之为RAC/OM，因为从成像软件
角度出发，它们是完全一样的成像器）。实际上，CCD成像器的每
个像素只占用12位的空间；标准内存的一个“字"长是16位。如何处
理剩余的4个未使用的位，在设计阶段引发了一些有趣的讨论，这
些讨论我将在下章中讨论。SSI、RAC和OM生成的所有图像都是单
色的，没有彩色的图像。彩色图片是由在地球上使用过滤器或者特
殊的照明技术，获取到独立的图像进行合成而来的。
1362
---
## Page 1364
图3-2：立体表面成像器（图像来源：Arizona大学/NASA/JPL，见
彩图11）
必须指出的是，虽然成像软件控制OMCCD来获取图像，但该软件
和晶体管(MCA)设备、光学显微镜本身的电子机械控制并没有关
系。后二者的控制是由JPL的MECA团队实现的一个独立的实时任务
来负责处理的。
虽然以当前消费者的数字照相机的标准来看，凤凰号火星着陆探测
器的100万像素并不算高，但是其使用的CCD成像器是为科学成像
而专门定制的。照相机中的每个CCD感光元件设备都花费了数万美
元，而且生产制造的数量有限。这些设备可靠、健壮而且精确，而
1363
---
## Page 1365
且每台CCD都进行了全面地测试，而且为敏感度、噪音和缺陷等做
了像素级别(pxel-by-pixel)的特性定制。正是这种特殊级别的特性化
以及CCD生成的参考数据，把科学的CCD设备和消费者使用的普通
照相机区别开。精确的特性化使得研究人员对图像数据能够精确地
表现照相机所捕获的镜头充满自信。但是它也是影响CCD代价的主
要因素。
图3-3：机械臂照相机（RboticArmCamera，图像来源：Arizona大
学/MaxPlanck/NASA/JPL)
数据是否打包
对于任何高度受限的嵌入式系统，其软件需要同时满足操作需求和
执行环境的约束条件。正如人们可能预期的那样，这些约束条件往
往并非总是互补的，因此在设计实现过程中，需要做出一些权衡决
策。SSI和RAC/OM照相机都使用了12位的转换或像素数据，这带来
了我们的首次主要的权衡决策：数据打包。对于二进制数据的概
述，请参阅后面的“二进制数据”部分。
1364
---
## Page 1366
在任务的早期设计阶段，大家产生了对12位像素数据进行打包的想
法，还引发了一些有趣的争论。由于只有有限的内存可用于图像数
据存储，对12位像素的数据进行打包存储在16位的内存空间中，这
个想法还是很吸引人的。这里的“打包”，指的是对这些12位像素的
数据进行连续存储，在这些位中间不“浪费”任何空间一—实际上就
是忽略16位的内存边界限制。但是更高效的数据存储换来的代价是
处理时间变长（解包、移位和重新打包）。一个数字图像就是一个
数组（该图像需要作为一维数组处理还是二维数组处理，依赖于需
要在它上面完成哪些操作），因此，在图像上的任何操作需要利用
对数组的一个或多个算法循环来处理其图像数据。我们期望通过
RAD6000处理的数据量非常大，因此，即便是在20MHz的时钟频率
下，即计算每个CPU循环时间，该速度也将是慢得让人无法接受。
最后，我们决定“浪费”一些内存空间，把12位的像素存放在16位的
内存空间，使得处理简单，避免占用任何不必要的CPU资源。这个
决定也是由以下早期的想法所驱动，即通过就地执行所有的图像处
理和压缩操作，避免使用多个大的处理缓存或者结果数组。如果对
数据打包，将会使得就地执行这些操作变得异常困难，而且最终代
码也将会变得过于复杂，导致整个我们想要实现的就地处理的想法
都变得不可行。
二进制数据
数据即信息。在计算机系统中，它是通过数值来表示的，因为计算
机CPU所处理的就是数值。数据能够表示文本，在该文本中，每个
字符有一个唯一的数值，或者通过对每个像素或者图片元素进行编
码来表示图像，在一个图像中，由一个数值表示它的强度、颜色以
及这二者特征的组合。给定一个合适的数值编码方案，计算机可以
处理一个人可以想象到的任何类型的数据，包括音赖、电位、文
本、图像甚至是定义猫和狗区别的一组不同特征。但是不论数值表
示的是什么数据，对计算机而言，它们都仅仅是数字。我们提供规
则来说明该数字应该如何编码、处理、显示和解释。
数据有不同的大小值，该值取决于其表示的是什么。举个例子，一
扇窗户或者一个防盗报警系统的门锁只需要1位（或一个二进制
数）来表示其可能的两种状态：并或关，即0或1。为了表示一个英
语字母或者发音，需要100个左右的数字，每个数字通过8位的数据
来表示。现代计算机通过二进制形式工作，因此8位可以表示从0
255的任何一个数字（如110010002=2001o）。在很多计算机中，有
1365
---
## Page 1367
更合适的形式来表示二进制数值，如典型的八进制或者十六进制。
对于16位或32位的CPU，正如凤凰号火星着陆探测器所采用的，内
存可以通过16位的字长方式来高效访问。想要访问低于16位（如8
位）的字长方式，其效率实际上可能会很低，因此对于大于8位而
又小于16位的数据，通常都是以16位字长的内存方式来存储，有几
位没有使用。这正是凤凰号火星着陆探测器所处理数据的方式，因
为CCD成像器的电子设备每个像素生成的是12位的数据，而飞行器
的内存是通过16位或32位的存储方式组织的。
三个任务
对于凤凰号火星着陆探测器所采用的VxWorks实时操作系统环境，
实际上确实没有什么方面是和普通的计算机用户可能会想到的某个
项目相同。不在磁盘上加载任何东西（不存在磁盘），而且当系统
初次启动时，计算机所做的每件事都被加载到内存中。该实时操作
系统实际上只是一个大程序，包含很多几乎同时在运行的较小的子
程序。这些较小的子程序又称为任务或线程，基于以下因素来执
行：资源的可达性，如时间事件或者I/O（输入/输出）设备；这些
子程序在更大范围中被分配的优先级（优先级高的任务比优先级低
的任务能够获取更多的机会运行）。
一开始就显而易见，对于表面图像处理，至少需要完成两项任务，
每台照相机完成一项任务。SSI成像器和RAC/OM成像器有很大区
别，它们包含不同的命令集和操作特征。SSI使用所有新的控制器
硬件，并且结合了和那些用于MarsRovers（译注：火星巡游器）完
全一样的CCD成像器。RAC和OM成像器最初是由德国的MaxPlanck
研究所建立的，而且已经应用了一段时间（其中一个最初设计应用
于Huygens探测器，在Titan着陆）。RAC/OM控制器硬件实际上是命