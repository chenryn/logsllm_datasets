I am using torch1.5 + cuda10, call cuda-function with c++ code and use it in
python by pybind.  
1、paste my c++ code, name bind_cudevice.cc  
2、compile bind_cudevice.cc with my g++ compile code  
3、paste my python code named test.py  
4、Finally you will see core dump, this core only with cuda10+torch1.5
My Environment
  * PyTorch Version (e.g., 1.0):1.5
  * OS (e.g., Linux):Linux
  * How you installed PyTorch (`conda`, `pip`, source):source
  * Build command you used (if compiling from source):yes
  * Python version:3.6.8
  * CUDA/cuDNN version:Cuda10.0
  * GPU models and configuration:K40
  * Any other relevant information:
The c++ code as below:
    #include 
    #include 
    #include 
    #include 
    #include 
    #include 
    #include 
    #include 
    class CuDevice {
    public:
        static CuDevice& Instantiate() {
            CuDevice &ans = this_thread_device_;
            if (!ans.initialized_)
                ans.Initialize();
            return ans;
        }
    private:
        CuDevice(){};
    public:
        void Initialize() {
            initialized_ = true;
            cusolverDnCreate(&cusolverdn_handle_);
            cusolverDnSetStream(cusolverdn_handle_, cudaStreamPerThread);
          }
          ~CuDevice() {
            std::cout << "in ~CuDevice" << std::endl;
            if (cusolverdn_handle_) {
                std::cout << "in ~CuDevice and cusolverdn_handle_" << std::endl;
                cusolverDnDestroy(cusolverdn_handle_);
           }
        }
    private:
        bool initialized_;
        cublasHandle_t cublas_handle_;
        cusparseHandle_t cusparse_handle_;
        curandGenerator_t curand_handle_;
        cusolverDnHandle_t cusolverdn_handle_;
        static thread_local CuDevice this_thread_device_;
        //static CuDevice this_thread_device_;
    };
    thread_local CuDevice CuDevice::this_thread_device_ = CuDevice();
    int init_cudevice(){
        CuDevice::Instantiate();
        std::cout << "hello world" << std::endl;
        return 0;
    }
    PYBIND11_MODULE(example, m) {
        m.def("init_cudevide",
        &init_cudevice,
        "select gpu id");
    }