Debian参考手册 21/233
1.4.6 文本编辑器
在使用类Unix系统过程中，各种类似于Vim或Emacs的工具，你应该精通其中的一个。
我认为习惯于使用Vim命令是一个明智的选择，因为Linux/Unix系统里一般都附带了Vi编辑器。(实际上最初的vi
以及后来的nvi这类工具程序很常见。因为在Vim里提供了 F1帮助键，在同类工具中它的功能更强大，所以我选择
Vim而不是其它新出的一些工具。)
假设你不是用Emacs就是用XEmacs作为你的编辑器，其实还有更好的选择，尤其是在编程的时候。Emacs还有很多
其他的特点，包括新手导读，目录编辑器，邮件客户端等等。当编写脚本或程序的时候，它能自动识别当前工作模式
所对应的格式，让使用更加便利。一些人甚至坚持认为Linux系统里最需要配备的就是Emacs。花十分钟来学习Emacs
可以为后面的工作剩下更多时间。在此强烈推荐学习使用Emacs时候直接使用GNUEmacs参考手册。
在实践应用中所有这些程序都会有一个教程，输入”vim”和F1键就可以启动Vim。建议你最好阅读一下前面的35行。
移动光标到”|tutor|”并按Ctrl-]就可以看到在线培训教程。
注意
好的编辑器，像Vim和Emacs，可以处理UTF-8及其它不常用编码格式的文本。有个建议就是在GUI（图形用户
界面）环境下使用UTF-8编码，并安装要求的程序和字体。编辑器里可以选择独立于 GUI（图形用户界面）环境
的编码格式。关于多字节文本可以查阅参考文档。
1.4.7 设置默认文本编辑器
Debian有许多不同的编辑器。我们建议安装上面提到的vim软件包。
Debian通过命令“/usr/bin/editor”提供了对系统默认编辑器的统一访问，因此其它程序（例如reportbug(1)）
可以调用它。你可以通过下列命令改变它。
$ sudo update-alternatives --config editor
对于新手，我建议使用“/usr/bin/vim.basic”代替“/usr/bin/vim.tiny”，因为它支持格式高亮。
提示
许多程序使用环境变量“$EDITOR”或“$VISUAL”来决定使用那个编辑器（参见第 1.3.5 节和第 9.4.11 节）。出
于Debian系统的一致性考虑，它们被设置到“/usr/bin/editor”。（在历史上，“$EDITOR”是“ed”，“$VISUAL”
是“vi”。）
1.4.8 使用 vim
最近的vim(1)用完全的”nocompatible”选项启动自己，进入到普通模式。2
请使用”vimtutor”程序来学习vim，通过一个交互式的指导课程。
vim程序基于模式输入的按键来改变它的行为。在插入-模式和替代-模式下，输入的按键大部分进入了缓冲区。移动
光标大部分在普通-模式下完成。交互选择在可视-模式下完成。在普通-模式下输入”:”，改变它的模式进入到Ex-模
式。Ex-接受命令。
提示
Vim和Netrw 软件包可以一起使用。Netrw 同时支持在本地和网络读写文件，浏览目录。用”vim .”(一个点作为
参数)来尝试Netrw，在”:help netrw”读取它的文档。
vim的高级配置，参见第 9.2 节。
2即使旧的vim也能够启动完全的”nocompatible”模式，通过使用”-N”选项启动。
Debian参考手册 22/233
模式 按键 操作
普通 :help|only 显示帮助文件
普通 :e filename.ext 打开新的缓冲区来编辑filename.ext
普通 :w 把目前的缓冲区改写到原始文件
普通 :w filename.ext 写入当前缓冲区到filename.ext
普通 :q 退出vim
普通 :q! 强制退出vim
普通 :only 关闭所有其它分割打开的窗口
检查vim是否在完全的nocompatible
普通 :set nocompatible?
模式
普通 :set nocompatible 设置vim到完全的nocompatible模式
普通 i 进入插入模式
普通 R 进入替代模式
普通 v 进入可视模式
普通 V 进入可视行模式
普通 Ctrl-V 进入可视块模式
除了TERMINAL-JOB外 ESC-键 进入普通模式
普通 :term 进入TERMINAL-JOB模式
TERMINAL-NORMAL i 进入TERMINAL-JOB模式
TERMINAL-JOB Ctrl-WN(或者Ctrl-\Ctrl-N) 进入TERMINAL-NORMAL模式
在 TERMINAL-NORMAL模式里进入
TERMINAL-JOB Ctrl-W:
Ex-模式
Table1.16: 基本的Vim按键列表
1.4.9 记录 shell 活动
shell命令的输出有可能滚动出了屏幕，并可能导致你无法再查看到它。将shell活动记录到文件中再来回顾它是个不
错的主意。当你执行任何系统管理任务时，这种记录是必不可少的。
提示
新版本的Vim(version>=8.2)能够被用来清晰的记录shell活动，使用 TERMINAL-JOB-模式。参见第 1.4.8 节。
记录shell活动的基本方法是在 script(1)下运行shell。
尝试下列例子
$ script
Script started, file is typescript
在 script下使用任何shell命令。
按 Ctrl-D来退出 script。
$ vim typescript
参见第 9.1.1 节。
1.4.10 基本的 Unix 命令
让我们来学习基本的Unix命令。在这里，我指的是一般意义上的“UNIX”。任何UNIX克隆系统通常都会提供等价的
命令。Debian系统也不例外。如果有一些命令不像你想的那样起作用，请不要担心。如果shell中使用了别名，其对应
的命令输出会不同。这些例子并不意味着要以这个顺序来执行。
尝试使用非特权用户账号来使用下列的命令。
Debian参考手册 23/233
命令 说明
pwd 显示当前/工作目录的名称
whoami 显示当前的用户名
id 显示当前用户的身份（名称、uid、gid和相关组）
file foo 显示“foo”文件的文件类型
type -p commandname 显示命令的文件所处位置“commandname”
which commandname 同上
type commandname 显示“commandname”命令的相关信息
apropos key-word 查找与“key-word”有关的命令
man -k key-word 同上
whatis commandname 用一行解释“commandname”命令
man -a commandname 显示“commandname”命令的解释（Unix风格）
info commandname 显示“commandname”命令相当长的解释（GNU风格）
ls 显示目录内容（不包含以. 点号开头的文件和目录）
ls -a 显示目录内容（包含所有文件和目录）
ls -A 显示目录内容（包含几乎所有文件和目录，除了“..”和“.”）
ls -la 显示所有的目录内容，并包含详细的信息
ls -lai 显示所有的目录内容，并包含inode和详细的信息
ls -d 显示当前目录下的所有目录
tree 使用树状图显示目录内容
lsof foo 列出处于打开状态的文件”foo”
lsof -p pid 列出被某进程打开的文件: ”pid”
mkdir foo 在当前目录中建立新目录“foo”
rmdir foo 删除当前目录中的“foo”目录
cd foo 切换到当前目录下或变量“$CDPATH”中的“foo”目录
cd / 切换到根目录
cd 切换到当前用户的家目录
cd /foo 切换到绝对路径为“/foo”的目录
cd .. 切换到上一级目录
cd ~foo 切换到用户“foo”的家目录
cd - 切换到之前的目录
 foo 将“README.gz”解压后的内容输出到文件“foo”中
将“README.gz”解压后的内容添加到文件“foo”的末尾（如
zcat README.gz >> foo
果文件不存在，则会先建立该文件）
Table1.17: 基本的Unix命令列表
Debian参考手册 24/233
注意
Unix有一个惯例，以“.”开头的文件将被隐藏。它们一般为包含了配置信息和用户首选项的文件。
对于 cd命令，参见 builtins(7)。
基本的 Debian 系统的默认分页程序是 more(1)，它无法往回滚动。通过命令“apt-get install less” 安装
less软件包后，less(1)会成为默认的分页程序，它可以通过方向键往回滚动。
”[” 和”]” 在正则表达式”ps aux | grep -e ”[e]xim4*”” 命令中，可以避免 grep 在结果中排除它自己，正