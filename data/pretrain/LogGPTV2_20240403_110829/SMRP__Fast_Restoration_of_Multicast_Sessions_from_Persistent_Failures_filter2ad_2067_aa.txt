title:SMRP: Fast Restoration of Multicast Sessions from Persistent Failures
author:Jian Wu and
Kang G. Shin
SMRP: Fast Restoration of Multicast Sessions from Persistent Failures∗
Jian Wu Kang G. Shin
Real-Time Computing Laboratory
Department of Electrical Engineering and Computer Science
The University of Michigan
{wujz,kgshin}@eecs.umich.edu
Abstract
The growing reliance of networked applications on
timely and reliable data transfer requires the underly-
ing networking infrastructure to provide adequate services
even in the presence of “persistent” failures (e.g., broken
links/routers).
It is much more difﬁcult to meet this re-
quirement for multicast sessions than for unicast commu-
nications because any on-tree component failure may of-
ten cause simultaneous service disruptions to multiple re-
ceivers. This paper presents a new multicast routing pro-
tocol, called the Survivable Multicast Routing Protocol
(SMRP), which facilitates fast recovery of multicast ses-
sions in face of persistent failures via local detour paths.
Our evaluation results show that SMRP trades end-to-end
delay and resource usage for short, and hence fast, recovery
paths. For example, under a certain set of parameter values,
SMRP shortens the recovery path by 20% with only a 5% in-
crease of end-to-end delay and resource usage. Moreover,
several design enhancements have made SMRP efﬁcient, ro-
bust, ﬂexible and scalable.
1 Introduction
There has been a growing desire among service
to provide their customers new revenue-
providers
generating services with some form of Quality of Service
(QoS) guarantees. Unlike traditional datagram services in
which average performance is of prime interest, these ser-
vices impose more stringent QoS requirements in terms
of packet delivery delay, jitter, error rate, and so on.
It
is also essential for the providers to maintain an adequate
level of service even in the presence of “persistent” net-
work failures. A persistent network failure, such as dis-
∗The work reported in this paper was supported in part by the Ofﬁce of
Naval Research under Grant N00014-99-1-0465.
connection of a link or incapacitation of a node,1 can occur
for various reasons, causing service disruptions that usually
last for hours. Typical events that cause persistent failures
include accidental cable/ﬁber cuts, hardware malfunction,
power outage, software errors, natural disasters (e.g., ﬁre
or earthquake), and human errors (e.g., incorrect mainte-
nance/upgrade) [20]. Moreover, routing instability could
also cause serious damage [3, 4], disrupting the original net-
work service for an extended period of time.
Network failures could be much more destructive for
multicast communication than for the unicast case. In mul-
ticast, each data packet is delivered through a tree topology
to achieve efﬁcient resource usage. A link or node failure
usually results in simultaneous disconnection of multiple
members which use the faulty component to receive data
from the source node. A large portion of the original mul-
ticast tree might have to be reconstructed, thus imposing a
heavy burden on the network. Although new scheme [16]
has been proposed for fault-tolerant multicast, it requires a
complicated tree construction process and assume the avail-
ability of global topology information, rendering itself im-
practical for large networks, such as today’s Internet.
In a traditional multicast environment, once a link or
node failure occurs to a receiver’s path, a detour path around
the faulty component has to be found. Recent studies [25]
have shown that the failure recovery time for PIM-based
multicast sessions [5] is found to be dominated by the un-
derlying unicast protocol (e.g., OSPF [10]) recovery pro-
cess, i.e., the time required to reconstruct consistent unicast
routing tables in the affected networks. Our study, how-
ever, shows that faster service restoration could be achieved
by quickly identifying a local detour instead of waiting a
long time for routing re-stabilization. Since each node on
the multicast tree has the same piece of information from
the source, the portion of the original multicast tree, which
was unaffected by the failure, can be used for service recov-
ery. For instance, consider the multicast tree in Figure 1(a).
1This includes both the physical breakdown of the node and service
unavailability under heavy network congestion.
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:53:13 UTC from IEEE Xplore.  Restrictions apply. 
S
1
on-tree link
off-tree link
multicast member
A
1
C
2
2
1
B
1
D
S
1
on-tree link
off-tree link
multicast member
A
1
C
2
2
1
B
1
D
S
1
on-tree link
off-tree link
multicast member
A
1
C
2
2
1
B
1
D
(a) initial network
(b) traditional recovery
(c) recovery via local detouring
Figure 1. Multicast session recovery.
The number on each link indicates the delay between two
end nodes of the link and the original multicast tree is con-
structed under the assumption that the underlying routing
protocol uses the shortest-path-ﬁrst (SPF) algorithm. Sup-
pose the on-tree link LAD fails, node D is disconnected from
the multicast session and attempts to recover by locating a
new non-faulty path. Existing multicast routing protocols,
such as PIM and its variants [14], select the shortest path
from the multicast member to the source or the rendezvous
point (RP)2 in the network. As shown in Figure 1(b), a new
path D → B → S is constructed. An alternative choice for
recovery is to take path D → C → A → S. Despite of incur-
ring a larger end-to-end delay between the multicast mem-
ber and the source, path D → B → S has shorter recover path
(i.e., path D → C) and the recovery process is thus sped up.
The service restoration latency decreases when each
disrupted member utilizes its non-faulty on-tree neighbor
nodes.
In all of the multicast routing schemes known to
date, each link/node on the delivery tree is shared by as
many members as possible to minimize the tree cost. When
a commonly shared link/node fails, it is less likely for a
member to receive any assistance from its neighbors for re-
covery. In Figure 1(a), if link LSA became faulty, both mem-
bers C and D lose their connections and have to reroute their
paths to the source completely. Figure 2(a) illustrates a new
tree structure in which C and D’s paths are disjoint. Com-
pared to the previous tree, the new tree has the following
characteristics.
• Mitigated service disruption: since no link/node is
shared between two multicast members, at most one
member suffers the service disruption due to one net-
work component failure.
• Faster failure restoration: the possibility that both
members simultaneously lose their connections is re-
duced, and therefore, fast failure recovery becomes
more likely with assistance from neighboring mem-
bers. In Figure 2(b), when LSA fails, C can quickly re-
store its service by connecting to its non-faulty neigh-
2For ease of presentation, we ignore the RP case and assume the root of
the multicast tree is the actual multicast source in the rest of discussions.
S
1
2
1
on-tree link
off-tree link
multicast member
A
1
C
2
(a) initial network
B
1
D
on-tree link
off-tree link
multicast member
A
1
C
S
1
2
B
1
D
1
2
(b) recovery
Figure 2. Multicast recovery in a new tree.
bor node D.
• Increased tree cost and/or end-to-end delay: Be-
cause the degree of link/node sharing is decreased, the
total tree cost or end-to-end delay might be increased.
In this paper, we propose a new multicast tree construc-
tion algorithm called Survivable Multicast Routing Protocol
(SMRP), which incorporates into tree construction the need
for speeding up the service recovery from persistent net-
work failures. Speciﬁcally, SMRP builds a multicast tree
with less path sharing so as to increase the likelihood that
the disrupted members can restore their service with the as-
sistance from their on-tree neighbors. Inevitably, thus-built
trees cannot guarantee optimal paths with regard to the end-
to-end delay and tree cost, which have been traded away
for better fault-tolerance.
In one simulation case, SMRP
achieves an average of 20% shorter recovery paths at the
expense of a 5% increase in the average end-to-end delay
or tree cost. In particular, by introducing a conﬁgurable pa-
rameter Dthresh, SMRP can adaptively make a good trade-
off between the recovery latency and the transmission efﬁ-
ciency.
The rest of the paper is organized as follows. Section 2
summarizes the related work on fault-tolerant multicast. In
Section 3, we formulate the basic problem and propose the
new multicast routing protocol. The merits of the proposed
technique are evaluated via in-depth simulations and the re-
sults are analyzed in Section 4. Finally, Section 5 makes
concluding remarks.
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:53:13 UTC from IEEE Xplore.  Restrictions apply. 
2 Related Work
In general, fault-tolerance can be realized reactively or
proactively. Under the reactive approach, upon failure of
an active routing path, its replacement path is constructed
for service restoration. Searching for a replacement path
is usually time-consuming and hence causes a long service
disruption. In contrast, Han and Shin [22] proposed the con-
cept of a dependable real-time connection that consists of
primary and backup channels. If a primary channel is dis-
abled by a persistent failure, its backup channel is activated
to become the new primary. The recovery is fast because
there is no need to search a new path. In multicast, Medard
et al. [16] developed an algorithm to construct two multicast
trees such that any single failure leaves each member con-
nected to the source by at least one of the two trees. Such
redundant trees guarantee the continuity of multicast ses-
sions in face of a network failure. Its complexity, however,
makes it difﬁcult, if not impossible, to be applied to large
networks.
In order to achieve reliable, in-order delivery of multicast
packets, many reliable multicast protocols [6, 17, 21, 23]
have been proposed. One widely used technique is local re-
covery: designating one or more hosts other than the source
to relay or retransmit packets.
In recent years, so-called
gossip-based protocols became a popular solution to the re-
liable transmission problem. The common idea of this fam-
ily of probabilistic protocols [12, 15, 19] is to have each
node in a multicast group periodically “talk” to a random
set of other nodes in the group about its knowledge of the
state of the group. Missing packets can then be recovered
by the nodes in a peer-to-peer style. These types of mecha-
nisms assume the occurrence of infrequent, transient packet
losses and hence are inefﬁcient in handling persistent fail-
ures like cable cuts or node crashes, especially for applica-
tions that have stringent QoS requirements.
In this paper, we focus on how to restore multicast ser-
vices efﬁciently from persistent network failures, which has
not yet been well addressed in the literature. We adopted
the idea of local recovery to accelerate the recovery pro-
cess. Meanwhile, noticing that current cost-minimized mul-
ticast protocols make it difﬁcult to realize local recovery, we
devised a new multicast routing protocol which can adap-
tively adjust the multicast tree structure so as to make a
good tradeoff between transmission efﬁciency and service
recovery latency.
3 The Proposed Multicast Routing Protocol
In this section, we ﬁrst formulate the problem and state
our design goals. With the objective of decreasing the
length of recovery path, we develop a new multicast routing
algorithm and describe the details of the algorithm, includ-
ing the basic tree construction during the join and departure
of multicast members, the maintenance of data structures,
and the subsequent tree reshaping procedure for efﬁciency.
Finally, we will discuss the important aspects in the pro-
posed protocol and make several enhancements thereof.
3.1 Problem Formulation and Design Goals
There is an increasing need for communication service
with a guaranteed level of fault-tolerance in many multicast
QoS-sensitive applications, such as video conferencing, re-
mote monitoring and control of safety-critical assets, distant
learning, and medical services. These applications are char-
acterized by the stringent QoS requirement of delay, delay
jitter and bandwidth. They usually cannot tolerate a large
service restoration latency in the face of signiﬁcant packet
losses. Although a number of reliable multicast protocols
have been proposed to ensure reliable in-order packet deliv-
ery, they are mainly targeted at infrequent, transient packet
losses (e.g., bit errors caused by transmission signal noise)
and are unable to handle service disruptions due to persis-
tent link/node failures.
The main intent of this paper is to design a scheme which
enhances multicast applications with their required fault-
tolerance. Speciﬁcally, in our service recovery architecture,
the restoration path selected by each disconnected multi-
cast receiver has the following properties: (1) no faulty
link/node is involved; and (2) a non-faulty local neighbor’s
on-tree path is utilized to decrease the length of recovery
path. As shown in Figure 1, when D attempts to recover
from the failure of link LAD, two detour paths are avail-
able. Path D → B → S is shorter in terms of end-to-end
delay between S and D, and would have been chosen by
the underlying SPF-based routing protocols. However, path
D → C → A → S is preferred in the terms of the required
recovery effort because only link LCD needs to be brought
into the multicast tree. We deﬁne a new metric RDR which
represents the recovery distance (i.e., the length of restora-
tion path) for member R. Here the restoration path only
accounts for the new links that need to be brought into the
multicast tree. For example, if D chooses D → C → A → S
as its new path, the restoration path is D → C and hence
RDD = 2. Obviously, the restoration path with a small RDR
is preferred for fault-tolerance purposes.
The key factor in realizing local recovery via an on-tree
neighbor node is that the node is not affected by the cur-
rent network failure, i.e., its multicast path is disjoint from
the faulty path segment of the disconnected member. Un-
fortunately, this scheme is hindered by the current multi-
cast routing protocols, which are either based on SPF al-
gorithm or cost-minimizing algorithms.
In typical multi-
cast tree, neighbor multicast nodes tend to share a common
sub-path to receive packets from the source. If one of the
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:53:13 UTC from IEEE Xplore.  Restrictions apply. 
shared components fails, all of these members are likely to
be disconnected simultaneously, and it becomes impossible
to ﬁnd a “connected” neighbor for recovery. In this paper,
we propose a new multicast routing protocol called Surviv-
able Multicast Routing Protocol (SMRP), which constructs
the multicast tree to reduce the likelihood of simultaneously
disconnecting neighboring nodes in the tree.
In order to increase the chance in ﬁnding a neighbor
whose multicast path is disjoint from the faulty segment
taken by the disconnected member, it is natural to construct
the multicast tree with less link/node sharing among mem-
bers’ multicast paths. In SMRP, when each member joins
the multicast session, it always selects a path to the mul-
ticast source which is least shared by the other members
subject to some constraints. Speciﬁcally, we deﬁne a new
metric SHRS,R that measures the degree of link/node shar-
ing along the on-tree path between source S and node R and
is calculated by:
SHRS,R =
∑
all Li, j ⊂PT (S,R)
NLi, j ,
(1)
where PT (S,R) is the on-tree path between S and R3, and
NLi, j is the number of multicast members whose paths in-
clude link Li, j. The larger the value of NLi, j , the more multi-
cast members share the link Li, j. For instance, consider the
multicast tree in Figure 1(a). The value of SHRS,C is com-
puted as SHRS,C = NLS,A +NLA,C = 2 +1 = 3. SHRS,R is thus
deﬁned to account for link/node utilization by all multicast
members in the subtree rooted at R. When a new receiver
joins the multicast group, it selects a multicast path via the