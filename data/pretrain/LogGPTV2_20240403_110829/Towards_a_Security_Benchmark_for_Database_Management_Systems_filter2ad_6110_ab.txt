This data must not be understandable even if some-
one  is  able  to  access  the  database  using  a  valid 
username/password  (i.e.,  this  data  has  to  be  stored 
encrypted  in  the  database).  Typical  examples  are: 
usernames/passwords,  credit  card  numbers,  pa-
tients’ files in hospitals, and bank accounts. 
– Level  5:  critical  data  that  has  to  be  exceptionally 
protected  against  unauthorized  read  and  modifica-
tion. This data  must be stored encrypted in  the da-
tabase. In addition, all the accesses or modifications 
to  this  data  must  be  audited.  Some  examples  are: 
data on credit card transactions, governmental con-
fidential data, and files from intelligence agencies.
2.2. Database security classes 
Several  mechanisms  have been proposed in the da-
tabase  area  to  protect  data  against  intrusion  [5].  How-
ever,  different  DBMS  provide  different  mechanisms 
and,  in  most  cases,  the  effectiveness  of  those  mecha-
nisms  is  very  dependent  on  the  actual  configuration 
chosen by the database administrator.  
Based on the data criticality levels proposed before 
we  have  defined  a  set  of  security  classes  for  DBMS, 
ranging from Class 0 to Class 5. Systems in Class 0 do 
not  implement  any  security  mechanisms  and  systems 
in Class 5 implement the  mechanisms  needed to  man-
age data with the criticality requirements of level 5. In 
other  words,  systems  in  a  given  class  X  can  protect 
data at the criticality level X and below. 
Table  1  presents  the  proposed  database  security 
classes  and  the  correspondent  data  criticality  levels. 
The minimum set of security mechanisms required for 
a system to achieve each class is identified in the right 
most column. 
Table 1. Database security classes. 
Data Criti-
cality Level
Security Mechanisms 
Required 
DB Secu-
rity Class
Class 0 
Class 1 
None  None  
Level 1 
Class 2 
Level 2 
Class 3 
Level 3 
Class 4 
Level 4 
Class 5 
Level 5 
- User authentication (internal or external) 
- User authentication (internal or external) 
- User privileges (system & object privileges)
- User authentication 
- User privileges (system & object privileges)
- Encryption in the data communication 
- User authentication 
- User privileges (system & object privileges)
- Encryption in the data communication 
- Encryption in the data storage 
- User authentication 
- User privileges (system & object privileges)
- Encryption in the data communication 
- Encryption in the data storage 
- Auditing 
An  important  aspect  is  that  user  authentication  can 
be performed internally (by using usernames and pass-
words)  or  externally  (using  authentication  servers  like 
Kerberos or NTS). Nevertheless, for a system to achieve 
a  given  security  class  it  only  needs  to  provide  one  of 
these  types  of  authentication  (i.e.,  it  is  not  mandatory 
that the DBMS has the two types of authentication). 
2.3. Requirements for DB security mechanisms 
In  order  to  achieve  a  given  security  class,  it  is  not 
sufficient  that  the  system  provides  the  set  of  security 
mechanisms presented in the  right column of Table 1. 
In  fact,  those  security  mechanisms  must  also  fulfill  a 
set  of  requirements.  Note  that  these  requirements  are 
related to specific characteristics/functionalities and  to 
the  correct  configuration  of  the  mechanism.  Table  2 
presents the requirements for each security mechanism 
(references in the right most column will be used later 
on to refer to each requirement).  
As  mentioned  above,  to  achieve  a  given  class  a 
DBMS  must  provide  the  set  of  security  mechanisms 
shown  in  Table  1  and  those  mechanisms  must  fulfill 
the requirements presented in Table 2. To complement 
the security class categorization we propose the use of 
an additional metric that characterize how well a given 
system fulfills the security requirements (this metric is 
called SRF). A percentage representing the importance 
of each requirement has been defined (see third column 
in  Table 2).  Systems  are  scored  in  a  scale  of  0  to  100 
by  summing  the  percentages  of  the  requirements  ful-
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
Security  
Mechanisms 
Internal user 
authentication 
(username/ 
password) 
External user 
authentication 
User privileges 
Encryption in 
the data com-
munication 
Encryption in 
the data stor-
age 
Auditing 
Table 2. Security mechanisms requirements. 
Requirements 
Requirement 
Weight (%) 
Requirement
Reference 
The system must provide internal user authentication by using usernames and passwords 
The system must guarantee that, besides the DBA users  (i.e., sys and system in Oracle, root in 
MySQL, etc.), no other users can read/write to/from the table/file where the usernames and pass-
words are stored 
The  password  must  be  encrypted  during  the  communication  between  the  client  and  the  server 
during the authentication 
The passwords must be encrypted in the table/file where they are stored 
The system must be able to perform external user authentication (e.g., OS, Kerberos, NTS, etc.) 
The  password  must  be  encrypted  during  the  communication  between  the  client  and  the  server 
during the authentication process 
The password must be encrypted during the communication between the DBMS and the authen-
tication server
The passwords must be encrypted in the file where they are stored 
The  system  must  allow  the  DBA  to  grant  and  revoke  different  system  privileges  to  different 
users. The system privileges must include at least the following (the names of the privileges may 
differ  in  various  DBMS):  create  session,  alter  session,  create  user,  alter  user,  drop  user,  cre-
ate/drop  table,  select  data dictionary,  select  any  table,  insert any  table,  update  any  table, delete 
any table, and audit system 
The  system  must  allow  the  users  to  grant  and  revoke  to  other  users  different  object  privileges 
over the tables. These privileges must include at least: select, insert, update, and delete 
The system must allow the users to control if the privileges they grant can be forwarded to other 
users by the user that receive the privileges (control object privileges forwarding) 
The system must be configured in a way that no other users besides the DBA users (i.e., sys and 
system in Oracle, root in MySQL, etc.) have any administration privileges  
The system must be configured in a way that no other users besides the DBA users (i.e., sys and 
system in Oracle, root in MySQL, etc.) have any object privileges (select, insert, update, delete, 
and alter) over the data dictionary tables (i.e., the tables where the database metadata is stored) 
The system must provide methods to encrypt the data transferred over the network between the 
server and the clients and vice-versa 
The  overhead  in  the  performance  caused  by  the  encryption  of  the  data  in  the  network  must  be 
below 10% (this requirement is not mandatory)
The  database must provide methods to encrypt the data stored in specific columns of the tables 
The  overhead  in  the  performance  obtained  when  inserting  encrypted  data in  a  column  must be 
below 50% (this requirement is not mandatory)
The  overhead  in  the  performance  obtained  when  selecting  and  decrypting  data  from  a  column 
must be below 50% (this requirement is not mandatory)
The system must provide auditing features that allow the DBA to identify the users that access 
each table in the database 
10 
6
6
4 
10 
6
6
4 
6
6
4
4
4
8
4
4 
2
2
4
1.1 
1.2 
1.3 
1.4 
2.1 
2.2 
2.3 
2.4 
3.1 
3.2 
3.3 
3.4 
3.5 
4.1 
4.2 
5.1 
5.2 
5.3 
6.1 
filled. These percentages have been proposed based on 
the  overall  importance  of  each  security  mechanism  in 
preventing  security  attacks.  For  example,  authentica-
tion mechanisms are more important than encryption in 
the  data  storage  (i.e.,  to  prevent  security  attacks  au-
thentication  mechanisms  are  more  important  than  en-
cryption in the data storage). This way, the sum of the 
percentages  for  user  authentication  mechanisms  is 
greater  than  the  sum  of  the  percentages  for  privileges 
mechanisms, which in turn is greater than encryption in 
the data communication, and so on.  
The main goal of SRF is to allow a fine grain com-
parison of DBMSs in the same security class. Note that 
a DBMS belonging to a low security class may achieve 
a  high  SRF,  which  favors  it  when  compared  to  other 
DBMS  in  the  same  security  class.    For  example,  a 
DBMS  that  fulfils  the  requirements  related  to  the  en-
cryption  in  data  storage  but  does  not  provide  encryp-
tion  in  data  communication  would  be  classified  as  se-
curity  class  2.  Nevertheless,  the  SRF  metric  would 
include  the  requirements  related  to  encryption  in  data 
storage,  which  favors  the  DBMS  in  question  when 
compared to other DBMS in class 2 which do not pro-
vide encryption in data storage. 
As in some cases  security  mechanisms  have a high 
impact  in  the  system  performance,  it  is  important  to 
include  performance  aspects  in  the  evaluation.  How-
ever,  in  our  proposal  requirements  related  to  perform-
ance (i.e., requirements 4.2, 5.2, and 5.3), are not man-
datory,  as  they  express  performance  when  using 
security  mechanisms  and  not  security  features  per  se. 
In  other  words,  for  a  system  to  achieve  the  security 
class 3 it is not essential that  it fulfils  the requirement 
4.2.  Nevertheless,  the  requirement  weight  (4%  in  this 
case)  is  included  in  the  calculation of  the  SRF  metric. 
The same happens with the encryption in the data stor-
age (requirements 5.2 and 5.3). 
3.  Comparing  different  DBMS  concerning 
security features 
To  compare  different  DBMS  concerning  security 
features  we  have  to  perform  a  set  of  tests  in  order  to 
assess  the  security  class  and  the  SRF  metric  for  each 
system.  These  tests  must  provide  a  practical  way  to 
verify  which  of  the  requirements  presented  in  Table 2 
are  achieved.  To  perform  these  tests,  we  must  use  a 
generic and realistic database application scenario.  
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
3.1. Scenario to test DBMS security mechanisms 
To  define  a  scenario  to  test  security  mechanism  in 
DBMS, the following steps must be performed: 1) data 
model definition, 2) identification of the data criticality 
levels  for  each  table  in  the  data  model,  and  3)  defini-
tion of a set of users that will access the tables and the 
privileges for each user. 
The  data  model  must  include  tables  that  store  data 
from all the data criticality levels proposed in Subsec-
tion  2.1.  Figure  1  presents  the  data  model  proposed. 
This  data  model  has  been  adapted  from  the  standard 
TPC-W  benchmark  [12].  The  business  represented  by 
TPC-W  is  a  retail  book  store  over  the  internet,  where 
several  clients  access  the  web  site  to  browse,  search, 
and process orders. This data  model represents a typi-
cal application and is accepted as being representative 
of real scenarios. 
USER
U_ID
U_USERNAME
U_PASSWORD
C_ID
ORDER
O_ID
O_DATE
O_SUB_TOTAL
O_TAX
O_TOTAL
O_SHIP_TYPE
O_STATUS
O_C_ID
O_BILL_ADDR_ID
O_SHIP_ADD_ADDR_ID
COUNTRY
CO_ID
CO_NAME
CO_CONTINENT
ORDER_LINE
OL_ID
OL_QTY
OL_DISCOUNT
OL_COMMENT
OL_O_ID
OL_I_ID
CREDIT_CARD
CX_O_ID
CC_TYPE
CC_NUM
CC_NAME
CC_EXPIRY
CC_AUTH_ID
CC_XACT_AMT
CC_XACT_DATE
CX_CO_ID
ITEM
I_ID
I_TITLE
I_PUB_DATE
I_PUBLISHER
I_SUBJECT
I_DESC
I_RELATED
I_THUMBNAIL
I_IMAGE
I_SRP
I_COST
I_AVAIL
I_STOCK
I_ISBN
I_PAGE
I_BACKING
I_DIMENSION
I_A_ID
AUTHOR
A_ID
A_FNAME
A_LNAME
A_MNAME
A_DOB
A_BIO
A_CO_ID