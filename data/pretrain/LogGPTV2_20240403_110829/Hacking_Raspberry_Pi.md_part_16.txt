the home page to System, System Info and examining the IP address field.
3. Next, navigate to System, Settings, Services, Webserver and enable the option Allow
control of XBMC via HTTP. For instance, imagine my system has the IP address
10.1.10.1. Now I can open a web browser, type http://10.1.10.1 as the address, and
remotely connect to my Raspbmc server.
4. Upon a successful connection, you are presented with a simple, yet intuitive method for
managing the content on your Raspbmc device. The default web interface is shown in
Figure 12.9.
FIGURE 12.9 XBMC includes a simple web-based management tool (and remote control,
of course).
Note: Extensibility, Ho!
In the XBMC Webserver Property page, note that you can download additional
web interface skins that change the website’s look and feel. Click Default and then
click Get More... to do some shopping. Of course, your Raspbmc device must be
connected to the Internet for this procedure to work.
Task: Configuring a GPIO-based IR Receiver
The previous methods work just fine, but what if you want to control Raspbmc by using
your hardware remote that operates over infrared (IR)?
If you are thinking like a true (or budding) hardware engineer, you probably thought of
the following:
“I’ll bet I need to attach an IR sensor to my Pi’s GPIO pins to control my Raspbmc
box by using a hardware remote control.”
If you did think the preceding thought, then kudos to you! Actually, you have two
possibilities for IR-based remote communication:
Purchase an IR receiver and wire it directly to the GPIO pins on the Pi board.
Purchase a USB IR receiver, plug it into your powered USB hub, and load the appropriate
drivers.
Unfortunately, no truly straightforward documentation exists for either procedure as of
summer 2013. However, I can give you one way to use the GPIO method by using parts
from good ol’ trusty Adafruit.
In order to complete this task, you’ll need to purchase some items from Adafruit or
another parts supplier. The good news is that I’m sure you’ll find your efforts duly
rewarded—controlling your own custom media center via IR remote ROCKS!
Parts needed:
TSOP38238 IR receiver (http://is.gd/y9XzOC)
Female-to-female jumper wires (http://is.gd/anFo27)
Mini remote control (http://is.gd/dp0mPW)
1. As shown in Figure 12.10, connect three female-to-female jumper wires to (a) the three
leads of the IR receiver and (b) three GPIO pins. The receiver-to-GPIO lead mapping is
as follows:
IR receiver pin #1 to GPIO pin #18 (data)
IR receiver pin #2 to GPIO pin GND (ground)
IR receiver pin #3 to GPIO pin 3V3 (3.3V power)
FIGURE 12.10 Schematic showing you how the GPIO pins connect to the IR sensor by
means of female-to-female jumper wires.
2. The Linux Infrared Remote Control (LIRC) software component is what orchestrates
communication between your hardware IR remote and XBMC. Log into XBMC on your
Raspberry Pi and navigate to Programs, Raspbmc Settings, IR Remote.
While you are testing the hardware remote on its own, ensure that the setting Enable
GPIO TSOP IR Receiver is disabled. When you’re ready to test your hardware remote,
come back to this setting and enable it. Remember while you’re in the Settings area to make
a note of your Raspbmc’s IP address.
Note: TSOP, What’s That?
In electronics, TSOP stands for Thin, Small Outline Package and refers to the
physical form factor of the IC chip itself. Thus, TSOP is a general descriptive term
that applies to many types of IC components, not simply IR receivers.
3. The remainder of the configuration is done from the Linux command line. You can use
SSH to connect to your Raspbmc box in the same manner you can with traditional
Raspbian. (Remember that you learned how to use SSH in Chapter 7, “Networking
Raspberry Pi”). The default username is (surprise, surprise) pi, and the default password
is raspberry.
Rather than give you a couple pages of Linux terminal commands, I will simply refer you to the
“Using an IR Remote with a Raspberry Pi Media Center” tutorial at Adafruit (http://is.gd/97RvGt).
For instructions and/or advice on getting your own personal IR remote working with Raspbmc, I
suggest you turn to the trusty eLinux.org website at http://is.gd/yaJOSw. This site contains a
constantly updated list of peripheral devices that have been verified to work with the Raspberry Pi.
Transferring Content to Your Pi
You can upload media files (movies, TV shows, home videos, music, pictures...the list goes on) to
your Raspberry Pi using File Transfer Protocol (FTP). I recommend the freeware Filezilla to
Windows and Mac users because it is a stable, straightforward FTP client that looks and behaves the
same on either OS platform.
You already know the IP address of our Raspbmc box, so you can get right to work.
Task: Uploading Media Content to Raspberry Pi
1. Start Filezilla and fill in the details in the Quickconnect bar:
Host: 
Username: pi
Password: raspberry
Port: Leave this field empty because FTP assumes the use of Transmission Control
Protocol (TCP) port 21 by default.
2. Connecting as the pi user puts you in the /home/pi home directory by default. Right-click
in the Remote site window and click Create Directory to create the following folders for
your media:
Movies
TV
Music
Pictures
You can name your content folders anything you want, of course, but I suggest you avoid
spaces (see Figure 12.11).
FIGURE 12.11 FileZilla makes it simple to upload your media content to the Raspbmc
device.
3. To actually transfer a file, simply drag and drop the file(s) from the OS X Finder,
Windows Explorer, or from the Local Site pane in Filezilla over to the appropriate
destination in the FileZilla Remote site: pane.
Progress information concerning the uploads can be seen in the bottom pane of
FileZilla. Easy as pie!
Note: USB Is Allowed
If your Raspbmc SD card isn’t as large as necessary to store all your stuff, note that you
can use a USB thumb drive as a media source. Simply populate the USB stick with your
media, plug it into the powered USB hub that is connected to your Pi, and specify the USB
location when you configure media detection.
Scraping Your Media
As I mentioned earlier in this chapter, a media scraper is a program that can detect, analyze, and
report upon a media file that is present to XBMC. For instance, you can upload a season of The Big
Bang Theory and let the built-in media scrapers fill in metadata such as plot summary, cast, original
air date, and so forth.
The types of media that scrapers can detect are as follows:
Video games
Music
Movies
TV shows
Internet-based videos
Although the media scrapers available in XBMC are excellent, I advise you to name your media files
as descriptively as possible (and without spaces) to help them to more efficiently and accurately do
their work.
Take a look at Figure 12.12 to see an example of media file naming best practices.
FIGURE 12.12 In order to ensure that media scraping works correctly, individual show files
inside my s06 (season 6) folder should be named Big.Bang.Theory.s06e01, Big.Bang.Theory.s06e02,
and so on.
The XBMC Wiki has an outstanding article on video library management and file naming best
practices that needs to be on your required study list. You can find it at http://is.gd/RTkODz.
Now that you have your media uploaded and named appropriately, let’s configure media detection.
Task: Configuring XBMC Media Detection
In this procedure, you configure media detection for your /home/pi/tv folder.
1. In XBMC, navigate to Video, Files.
2. In the Videos screen, click Files, and then click Add Videos...
3. In the Add Video Source dialog, click Browse and select your target directory. On my
system, I want XBMC to detect my legally backed-up TV shows, so I supply the path
/home/pi/tv.
4. Optionally add a name for the new media source and then click OK.
5. In the Set Content dialog box, set the This Directory Contains option to your desired
media type. In this example, I chose TV shows.
6. In the Choose a Scraper list, select a default choice or click Get More to browse for an
alternate choice. You can see the interface in Figure 12.13.
FIGURE 12.13 After pointing Raspbmc to a content location, we instruct the application as
to what kind of data the location contains, and which scraper service we want to use.
Note: A Desktop Scraper for Anyone
Windows users can download the free Media Companion (http://is.gd/qemjHg) to
prepare media file metadata from your personal computer. Then when you transfer the
media to your XBMC, the files are prescraped!
When you click OK the selected scraper performs a full scan on your content source. If all goes well,
you can go back to the Home screen, click TV shows, and access your library to see all sorts of new
artwork and bling to accompany your detected media.
For instance, try right-clicking a television show media file and selecting Episode information from
the shortcut menu. The results of selecting information for one of my recorded shows is shown in
Figure 12.14.
FIGURE 12.14 The ability to provide rich metadata is one of the biggest strengths of XBMC
(beyond its ability to play the media, of course!)
Playing Your Content
Let’s finish this chapter with a brief tour of the player controls in XBMC. Using Figure 12.15 as your
guide, let me explain some of the controls on the XBMC player’s onscreen display (OSD):
FIGURE 12.15 You can use your remote control to access the XBMC onscreen display (OSD).
1: These playback controls should be self-explanatory to anybody who has operated a DVD
player remote.
2: This control enables you to manage subtitles. For more information on how to use subtitle
files with XBMC, see http://is.gd/PmFob0.
3: Here you can tweak video settings, including aspect ratio, black bar cropping, and
brightness/contrast.
4: Here you can customize audio settings, including delay, subtitles, and so on.
5: Here you can set, go to, and delete bookmarks. This is one of my favorite features!
Installing Add-Ons
XBMC/Raspbmc add-ons are small apps that extend the functionality of your media player software.
You’ll find an impressive variety of tools here, giving you the ability to interact with all sorts of cool
media, including, but not limited to, the following:
Apple iTunes podcasts
Break.com and CollegeHumor prank videos
Weather and webcams from all around the world
News headlines from all around the world
Streaming video from a variety of online sources
To install an add-on, navigate to the home page in Raspbmc and hover your mouse over Pictures,
Videos, TV Shows, or Music. One of the submenu options is Add-ons; click that.
In the resulting Add-ons window that appears, click Get More.... As shown in Figure 12.16, you’ll be
presented with an alphabetical assortment of add-on apps that are related to your selected media type.
FIGURE 12.16 Add-ons can greatly expand the functionality of your XBMC-based media player
system.
Once you’ve found an add-on that you like, double-click it in the list and then click Install.
To use your new add-on, return to the Add-ons window we saw earlier. Instead of being empty, you
should see your new app in the list; double-click it to get started!
Chapter 13. Raspberry Pi Retro Game Station
Let me be completely up-front with you: I am a total and unabashed video game nerd. More
specifically, I am a retro video game nerd. As much as I enjoy my Xbox, nothing gets my blood
pumping quite like firing up my favorite Atari, Coleco, and Mattel Electronics video games from the
late 1970s and early 1980s.
As you know from reading this book, the Raspberry Pi itself serves as a physical totem to 1980s
microcomputing nostalgia. Therefore, it seems completely natural for us to consider the question of
how we can convert the Pi into a retro video game station.
In this chapter I use RetroPie as the software basis for this project. I also show you how to configure
the Pi to support joystick controllers.
The RetroPie Project (http://is.gd/kFVq2I) initially started as a plan to turn the Raspberry Pi into a
universal retro gaming console that used Nintendo Entertainment System (NES) controllers for input.
Although RetroPie supports the emulation of several classic video game consoles, I focus on the Atari
2600 VCS and Nintendo Entertainment System (NES) emulation in this chapter. For the uninitiated,
the original console hardware is shown in Figure 13.1.
FIGURE 13.1 At left, the venerable Atari 2600 Video Computer System (VCS), introduced in
1977. At right, the Nintendo Entertainment System (NES), introduced in 1985.
A Word About Console Video Game Emulation
In general terms, emulation refers to a computer running one processor architecture to pretend that it
is actually a computer running another processor architecture. For instance, the Raspberry Pi port of
the RetroArch (http://is.gd/EEb4HQ) multi-system emulator enables the Raspberry Pi, with its ARM
processor platform, to play video games from a number of classic video game systems, including
Atari 2600
Game Boy Advance
Intellivision
MAME
NeoGeo
NES
SNES
Console video game emulation is really quite amazing when you understand that each and every retro
video game console had its own proprietary hardware.
The RetroPie Project (http://is.gd/kFVq2I) began as a way to answer the question, “Can we get the
Raspberry Pi to play Super Nintendo Entertainment System (SNES) games using the original
controllers?”
However, to me the coolest thing about RetroPie is its SD card image, which consists of the
following software layers:
Raspbian: This, of course, is the underlying operating system.
RetroArch: This is the console video game emulator. As it happens, the RetroPie image
contains a number of other emulators (see http://is.gd/qZrTcQ for a comprehensive list), but I
focus on RetroArch in this chapter.
Emulation Station (http://is.gd/a2OmUY): This is the graphical front end for the RetroPie
emulator suite; its big advantages are customizability and the ability to control all the menus
using only your gamepad (no keyboard or mouse required).
Let’s get right into the installation process, shall we?
Installing RetroPie
Here is the high-level overview of the RetroPie installation process:
Create the RetroPie SD card.
Boot the Pi and perform initial configuration.
Populate the ROMs directory. (I teach you more about ROMs later in this chapter, in the
section “Transferring ROMs to RetroPie.”)
Customize controls.
(Optionally) Add media scrapers and other add-ons.
With regard to your Raspberry Pi system requirements, there is nothing too surprising at play:
Raspberry Pi Model B or Model A (you’ll get more performance out of Model B, naturally).
SD card with at least a 4GB capacity. Some video game ROM files are pretty large, so either
invest in a large SD card or plan to store your ROMs on a USB stick plugged into your
powered USB hub.
HDMI connection.
Keyboard and mouse (for initial configuration; after that, you can control Emulation Station
using your joystick or gamepad).
Gamepad or joystick (more on this later in this chapter, in the section “Setting Up Your
Controls”).
Wired or wireless network connection (technically optional but a great convenience
nonetheless).
Task: Setting Up RetroPie
In this procedure, you’ll download, install, and configure RetroPie on your Raspbery
Pi.
1. On your host computer, visit the petRockBlog website and download the RetroPie
Project SD card image from http://is.gd/BSyKRP.
Be aware that the SD image is large; it weighs in at approximately 1.4GB. The file
comes down as a ZIP file, so you’ll need to extract the image file before you can flash it to
SD.
2. Use your favorite SD card flashing utility (you did read and study Chapter 4, “Installing
and Configuring an Operating System,” correct?) to flash the RetroPie image to your SD
card.
3. If you have a joystick or gamepad, now is the time to plug it into your Raspberry Pi.
4. Mount the newly flashed SD card into your powered-off Raspberry Pi and boot it up.
After seeing the RetroPie splash screen, you are taken automatically into Emulation
Station and its text-based wizard to help you configure your joystick or keyboard. I show
you what this screen looks like in Figure 13.2.
FIGURE 13.2 Emulation Station starts you off with some keyboard or joystick control
mapping.
Note: No Joystick?
If you don’t have a joystick, the Emulation Station controller setup wizard will say
“No joysticks detected!” In this case, press F4 to quit the controller setup wizard.
5. For each input action you need to perform when using a game, RetroPie asks you to press
a key on your keyboard or a button on your joystick (see Figure 13.2).
6. You see a “Basic config done!” message when you complete the wizard. You can then
press any button or keyboard key to jump into Emulation Station proper.
Don’t worry if you feel you made one or more mistakes during the initial controller setup wizard. For
instance, your joystick might not have had enough buttons to answer all the setup questions. I show
you how to clean up any residual control anomalies a bit later on in this chapter. Breathe easy!
Transferring ROMs to RetroPie
ROMs are the life blood of the retro gaming community. If you ever owned an NES or Atari 2600 or
any number of other 80s and 90s game consoles, you know that most of these games came packaged in
a small(ish) plastic cartridge.
A ROM image, also called a ROM file, is a bit-for-bit copy of the data from a Read Only Memory
(ROM, get it?) chip from these cartridges. According to copyright law, to legally download a ROM,
you must already possess the original game cartridge for any ROM file that you have in your
possession for play with an emulator. Fortunately, there’s good news if your mom threw out your old
video game collection when you left home: There are any number of outlets, both online and brick and
mortar, that deal in used and vintage game cartridges.
Note: How Do I Create a ROM?
Okay, let’s assume you took down that boxful of ancient Atari 2600 cartridges from a
dusty box in your garage attic. What now? How can you take those legally owned games
and convert them to ROM files that are playable in RetroPie?
I’m glad you asked! The general workflow is that you need to find a way to read the
ROM from your source cartridge (obviously, right?) and then copy that tiny amount of data
either to a blank cartridge or directly to your connected computer. This process always
involves dedicated hardware, and sometimes requires you to download schematics and
assemble PCBs yourself. Personally, I feel ethically safe by downloading the ROMs from a
known source like AtariAge.com so long as I also own the corresponding game cartridges.
For now, I assume that you have one or more game ROMs that you’d like to load on your RetroPie
device. How do you do that?