### 480
1.52  
/vax/1og/ConsoleKit  
/vax/1og/gdm  
5:  
6:  
8 0  
/vax/1og/pxelink  
7:  
4  
/vax/1og/samba/old  
/vax/1og/sssd  
B:  
9:  
4  
10:  
4  
/vax/1og/samba  
4  
/vax/1og/ppp  

### The Home Directory:
1: 34084 /home/ChzIat1ne/Documents/temp/reports/archive  
2: 14372 /home/Chziat1ne/Documents/temp/reports  
3: 4440 /home/Timothy/Project_254/01a_Data/revision.56  
/home/Timothy/Project_42/log/universe  
4: 4440  
5: 4440  
/home/ChzIat1ne/Documents/temp/reports/report.txt  
6: 3012 /home/Timothy/Project_254/01a_Data/data2039432  
/home/Timothy/Project_42/log  
7: ---  

## Page 557
542  
**第24章 编写简单的脚本实用工具**
8: 2968 /home/Timothy/Project_254/01d_Data/data2039432/answer  
/home/Timothy/Project_42/log/answer  
10: 2968 896Z /home/ChriatIne/Documents/temp/reports/answer  
完全没有问题！现在你可以让这个脚本在需要时自动运行了，可以用cron表来实现（参见第16章）。在周一一大早运行这个脚本是个不错的主意。这样你就可以在周一早上一边喝咖啡一边浏览磁盘使用情况周报了。

### 24.4 小结
本章充分利用了本书介绍的一些shell脚本编程知识来创建Linux实用工具。在负责Linux系统时，不管是大型多用户系统还是你自己的系统，都有很多的事情要考虑。与其手动运行命令，不如创建shell脚本来替你完成工作。
本章首先带你逐步了解如何使用shell脚本归档和备份Linux系统上的数据文件。`tar`命令是归档数据的常用命令。这部分演示了如何在shell脚本中用它来创建归档文件，以及如何在归档目录中管理归档文件。
接下来介绍了使用shell脚本删除用户账户的四个步骤。为脚本中重复的shell代码创建函数会让代码更易于阅读和修改。这个脚本由多个不同的结构化命令组成，例如`case`和`while`命令。这部分还介绍了用于cron表脚本和交互式脚本在结构上的差异。
本章最后演示了如何用`du`命令来确定磁盘空间使用情况。`sed`和`gawk`命令用于提取数据中的特定信息。将命令的输出传给`sed`和`gawk`来分析数据是shell脚本中的一个常见功能，所以最好知道该怎么做。
接下来还会讲到更多的高级shell脚本，涉及数据库、Web和电子邮件等。

## Page 558
### 第25章 创建与数据库、Web及电子邮件相关的脚本
#### 本章内容
- 编写数据库shell脚本
- 在脚本中使用互联网
- 在脚本中发送电子邮件

性，还得利用shell脚本之外的高级功能，例如访问数据库、从互联网上检索数据以及使用电子邮件发送报表。本章将为你展示如何在脚本中使用这三个Linux系统中的常见功能。

### 25.1 MySQL数据库
shell脚本的问题之一是持久性数据。你可以将所有信息都保存在shell脚本变量中，但脚本运行结束后，这些变量就不存在了。有时你会希望脚本能够将数据保存下来以备后用。
过去，使用shell脚本存储和提取数据需要创建一个文件，从其中读取数据、解析数据，然后将数据存回到该文件中。在文件中搜索数据意味着要读取文件中的每一条记录进行查找。现在由于数据库非常流行，将shell脚本和有专业水准的开源数据库对接起来非常容易。Linux中最流行的数据库之一是MySQL，LAMP（Linux, Apache, MySQL, PHP）架构逐渐流行起来。许多互联网Web服务器都采用LAMP来搭建在线商店、博客和其他Web应用。
本节将会介绍如何在Linux环境中使用MySQL数据库创建数据库对象以及如何在shell脚本中使用这些对象。

#### 25.1.1 使用MySQL
绝大多数Linux发行版在其软件仓库中都含有MySQL服务器和客户端软件包，这使得在Linux系统中安装完整的MySQL环境变得非常简单。图25-1展示了Ubuntu Linux发行版中的“Add Software”（添加软件）功能。

---

## Page 559
544
### 第25章 创建与数据库、Web及电子邮件相关的脚本
![FileEeil Fackage Settingi Help](image_url)
eloa(
mpol
Lmatear Radio (un)
1.4.2-12hd
D
L.1.49-1ub
5.0r5
10 fugpuadap abiepedegau) Jen
Sectiom
Get Sonee
enshet
Saca
origin
ntly mysqH
r-5.10, ani debermined by
Custen Filbers
LInstalthis packapeifin dott bout whichMy5Q
HeerthResaALs
the
esded by
138gackages Ssted, 1296 instale, 0brgkes,ot istalj/sgrade, Cto reeoe

图25-1 在Ubuntu Linux系统上安装MySQL服务器

搜索到mysql-server包之后，只需要选择出现的mysql-server条目就可以了，包管理器会下载并安装完整的MySQL（包括客户端）软件。没什么比这更容易的了！

通往MySQL数据库的门户是mysql命令行界面程序。本节将会介绍如何使用mysql客户端程序与数据库进行交互。

1. **连接到服务器**
默认情况下，如果你在命令行上输入`mysql`且不加任何参数，它会试图用Linux登录用户名连接运行在同一Linux系统上的MySQL服务器。
大多数情况下，这并不是你连接数据库的方式。通常还是创建一个应用程序专用的账户比较安全，不要用MySQL服务器上的标准用户账户。这样可以针对应用程序用户实施访问限制，即便应用程序出现了偏差，在必要时你也可以删除或重建。可以使用`-u`参数指定登录用户名。

```sh
$ mysql -u root -p
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 42
Server version: 5.5.38-log (Ubuntu)
Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
mysql>
```

`-p`参数告诉mysql程序提示输入登录用户密码。输入root用户账户的密码，这个密码要么是在安装过程中设置的，要么是使用`mysqladmin`工具获得的。一旦登录了服务器，你就可以输入命令。

2. **mysql命令**
mysql程序使用两种不同类型的命令：
- 特殊的mysql命令
- 标准SQL语句

mysql程序使用它自有的一组命令，方便你控制环境和提取关于MySQL服务器的信息。这些命令要么是全名（例如`status`），要么是简写形式（例如`\s`）。你可以从mysql命令提示符中直接使用命令的完整形式或简写形式。

```sh
mysql> \s
--------------
mysql  Ver 14.14 Distrib 5.5.38, for debian-linux-gnu (i686) using readline 6.3

Connection id:          43
Current database:       test
Current user:           root@localhost
SSL:                    Not in use
Using delimiter:        ;
Server version:         5.5.38-log (Ubuntu)
Protocol version:       10
Connection:             Localhost via UNIX socket
Server characterset:    latin1
Db     characterset:    latin1
Client characterset:    utf8
Conn.  characterset:    utf8
UNIX socket:            /var/run/mysqld/mysqld.sock
Uptime:                 2 min 24 sec

Threads: 1  Questions: 575  Slow queries: 0  Opens: 421  Flush tables: 1  Open tables: 41  Queries per second avg: 3.993
--------------

mysql>
```

mysql程序实现了MySQL服务器支持的所有标准SQL（Structured Query Language，结构化查询语言）命令。mysql程序实现的一条很棒的SQL命令是`SHOW`命令。你可以利用这条命令提取MySQL服务器的相关信息，比如创建的数据库和表。

```sh
mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
+--------------------+
2 rows in set (0.04 sec)

mysql> USE mysql;
Database changed
```

在这个例子中，我们用SQL命令`SHOW`来显示当前在MySQL服务器上配置过的数据库，然后用SQL命令`USE`来连接到单个数据库。mysql会话一次只能连接一个数据库。

你会注意到，在每个命令后面我们都加了一个分号。在mysql程序中，分号表明命令的结束。如果不用分号，它会提示输入更多数据。

```sh
mysql> SHOW
-> DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
+--------------------+
2 rows in set (0.00 sec)

mysql>
```

在处理长命令时，这个功能很有用。你可以在一行输入命令的一部分，按下回车键，然后在下一行继续输入。这样一条命令可以占任意多行，直到你用分号表明命令结束。

说明：本章中，我们用大写字母来表示SQL命令，这已经成了编写SQL命令的通用方式，但mysql程序支持用大写或小写字母来指定SQL命令。

---

## Page 560
### 25.1 MySQL数据库
547
3. **创建数据库**
MySQL服务器将数据组织成数据库。数据库通常保存着单个应用程序的数据，与用这个数据库服务器的其他应用互不相关。为每个shell脚本应用创建一个单独的数据库有助于消除混淆，避免数据混用。
创建一个新的数据库要用如下SQL语句：

```sql
CREATE DATABASE name;
```

非常简单。当然，你必须拥有在MySQL服务器上创建新数据库的权限。最简单的办法是作为root用户登录MySQL服务器。

```sh
$ mysql -u root -p
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 42
Server version: 5.5.38-log (Ubuntu)

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
mysql> CREATE DATABASE mytest;
Query OK, 1 row affected (0.02 sec)

mysql>
```

可以使用`SHOW`命令来查看新数据库是否创建成功。

```sh
mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| mytest             |
+--------------------+
3 rows in set (0.01 sec)

mysql>
```

好了，它已经成功创建了。现在你可以创建一个新的用户账户来访问新数据库了。

4. **创建用户账户**
到目前为止，你已经知道了如何用root管理员账户连接到MySQL服务器。这个账户可以完全控制所有的MySQL服务器对象（就像Linux的root账户可以完全控制Linux系统一样）。

在普通应用中使用MySQL的root账户是极其危险的。如果有安全漏洞或有人弄到了root用户的密码，整个数据库可能会受到威胁。因此，为每个应用程序创建一个专用的用户账户是最佳实践。