)
k
*
q
(
1
−
q
)
m k
−
*
N m
−
i
*
i
p
(1
−
p
)
N m i
− −
m N m
>
−
(3)
K
N
2
N
2
mi
n
+
j N m
,
−
∑
k
=
N
2
+ −
j m
P success
(
)
=
P success
(
)
=
N
/ 2
∑
j
1
=
N
/ 2
∑
j
1
=
8
Figure 10. Expected accuracy of the network as the 
percentage of faulty nodes increases 
Figure 11. Variation of k with different λ values 
For  the  system  to  be  100%  accurate,  CTI  of  correct 
nodes (CTIcorrect) should always be greater than CTI of faulty 
nodes (CTIfaulty). For a correct node to be corrupted, CTIfaulty 
should  be  infinitesimally  close  to  1,  so  that  CTIcorrect  -1  > 
CTIfaulty+1  (a node  is  transferred from  the good side  to  the 
bad side). We have the following expression: 
, 
k
λ
)2
2
−
λ
λ
−
(
N
−
+
e
e
k
k
+
+K
→ =
0
e
−
k N
(
λ
1)
−
−
2
e
−
k
λ
+
1
,  which  can be 
−
e
3 1 1
− > +
1
k
N
1)
(
−
−
λ
−
1
e
−
−
k
λ
e
2
=
less than zero to allow the addition of a bad node, which is 
impossible. When there are 3 good nodes left in the system, 
then  3  >  CTIfaulty,  where  CTIfaulty  =  3-ε,  ε>0.  After  kmax 
rounds from this state, let us assume that one more correct 
node  can  be  transferred  to  the  faulty  side.  Therefore  after 
kmax rounds the value of CTIfaulty should be = 1- ε before the 
transfer. 
us 
1
λ
→ .  Hence,  the  maximum  number  of 
3*e-kmaxλ 
Solving 
ln 3 as 
gives 
=1-ε 
ε
=
0
k
max
rounds needed to tolerate another faulty node is 
1
λ
ln 3
.  
6  Related Work 
As in any sensor networks problems, we require a great 
deal of related material to ensure that our model accounts for 
the  many  challenges  of  creating  a  functioning  wireless 
sensor network.  For instance, [18] gives an algorithm that 
guarantees reliable and fairly accurate output from different 
types of sensors when at most k out of n sensors are faulty. 
[17] gives a fault tolerant way of averaging sensor data, and 
the  author  also  gives  a  control  process  to  deal  with 
individual sensor failures. [19] deals with multi-sensor data 
fusion  and  assumes  that  the biggest  loss  in  sensor network 
efficiency is from sensor readings. They propose a method 
of  handling  sensor  failures  through  substitution  of  another 
on-board sensor. [20], [21], and [22] provide techniques of 
localization for finding node position, such as triangulation 
and  lateration.  Nodes  within  sensing  range  of  this  mobile 
node  must  be  able  to  determine  the  location  of  this  node. 
Location determination efforts with directional antennas can 
aid in finding the location of such a mobile node. In [13] it is 
shown that given signal strength and attenuation model one 
can  estimate  sensor  location.  Given  enough  fixed  anchor 
nodes  Bagchi  et  al.  present  a  technique  for  finding  an 
unknown node within some range of error [12].  
There appears to be a dearth of existing work related to our 
specific  topic  of  data  fault  tolerance  in  sensor  networks. 
Schaeffer  et  al.  discuss  decision  making  concerned  with 
propagating  an  alert  through  a  network  [7].  They  set  a 
threshold for event propagation, where if a node hears more 
than  n  nodes  announce  an  alert  then  that  node  sounds  the 
alert.  They  analyze  the  characteristics  of  this  network with 
false alarms and missed alarms, where the evaluation is on 
whether the event notification reaches some data sink. They 
address natural faults exclusively and do not consider cases 
with faulty nodes colluding. 
Wagner discusses aggregation of data in a sensor network 
with  malicious  intruders  in  [10].  The  author  presents  a 
mathematical framework for analyzing the vulnerabilities of 
common  aggregation  functions  and 
the 
mathematical basis for secure aggregation functions, such as 
average  with  trimming.  The  work  presented  here  can 
complement  this  by  providing  trimming  of  some  failing 
nodes  so  that  the  aggregation  can  work  on  the  remaining 
data set. However, the paper does not address the problem of 
in  network  aggregation,  which  is  covered  here  through  the 
then  presents 
  or         
solved with Matlab.  
Figure  11  shows  this  expression  for  several  different  λ 
values. Wherever a given line crosses the x-axis that is the 
value of k and the number of rounds after which a good node 
can be made into a faulty node. Expectedly as λ increases, 
the frequency of nodes failing that can be tolerated increases 
since the TI degrades more rapidly with failures. It is for this 
reason  we  chose  λ=0.25  for  our  simulations,  so  that  we 
could create a fair number of data points but without needing 
a very large number of events to show the beneficial effects 
of TIBFIT. 
 The  upper  limit  on  k  is  the  k  necessary  to  make  three 
good  nodes  tolerate  an  additional  failure.  We  stop  the 
analysis at two because once the system has two good nodes 
left then the sum of the faulty nodes’ trust indices must be 
9
analysis of failure prone CHs. It admits that the aggregation 
functions  break  down  with  more  than  half  the  network 
compromised.  Also, 
the  case  for 
aggregation  with  redundant  deployments  of  cheap,  crude 
sensor nodes.  
the  paper  presents 
Koo shows an upper bound on the tolerance of a broadcast 
decision process as approximately 1/π of the network being 
compromised  [1].  This  model  is  proven  theoretically  with 
arbitrarily powerful malicious nodes.  
7  Conclusions 
We present a protocol called TIBFIT that maintains state 
for  event  decisions  in  a  sensor  network.  This  protocol  can 
handle  both  binary  event  detection  and  event  location 
estimation  with  high  accuracy  in  the  face  of  natural  and 
malicious  node  failures  within  the  network.  The  protocol 
outperforms the standard voting scheme for event detection. 
We  also  define  two  types  of  intelligent  malicious  fault 
models that can disrupt a network, and find that using TIBFIT 
malicious  nodes  acting 
independently  are  successfully 
tolerated.  However,  the  accuracy  of  TIBFIT  in  a  system  of 
colluding  nodes  is  not  as  high  though  it  outperforms  the 
baseline voting scheme. 
 There  still  remains  much  work  to  be  done  with  this 
protocol.  We  would  like  to  further  explore  the  impact  of 
different system parameters on performance. We would also 
like  to  make  TIBFIT  more  robust  against  level  2  malicious 
nodes.  Another  step  would  be  to  explore  more  types  of 
intelligent models involving different levels of collusion and 
decision  sharing  amongst  malicious  nodes.  We  would  also 
like  to  develop  a  more  extensive  theoretical  model  to 
demonstrate correctness and predict system reliability under 
given  constraints.  Ultimately,  we  would  like  to  implement 
the  protocol  in  our  hardware  testbed  of  Berkeley  motes  to 
measure the resource consumption.  
8  References 
[1]  C-Y Koo. “Broadcast in Radio Networks Tolerating Byzantine 
Adversarial Behavior.” In PODC 2004.  
[2]  I.F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci. 
“A  Survey  on  Sensor  Networks.”  IEEE  Communications 
Magazine, pp. 102-114, Aug. 2002. 
[3]   W.  Heinzelman,  J.  Kulik,  and  H.  Balakrishnan.  “Adaptive 
Protocols  for  Information  Dissemination  in  Wireless  Sensor 
Networks.” ACM Mobicom 99. 
[4]   W.  Heinzelman,  A.P.  Chandrakasan,  and  H.  Balakrishnan. 
“An  Application-Specific  Protocol  Architecture  for  Wireless 
Microsensor  Networks.”  IEEE  Transactions  on  Wireless 
Communications, Oct 2002. 
[5]   J.  Lu,  T.  Suda.  “Coverage-aware  Self-scheduling  in  Sensor 
Networks.” IEEE Computer Communications Workshop, Oct 
2003. 
[6]   http://www.isi.edu/nsnam/ns. 
[7]  S. E. Schaeffer, J. C. Clemens, P. Hamilton. “Decision Make 
in a Distributed Sensor Network.” In Proceedings of the Santa 
Fe Institute Complex Systems Summer School, Santa Fe, NM, 
USA, 2004. Santa Fe Institute. To appear. 
[8]   G. J. Pottie and W. J. Kaiser. “Wireless Integrated Network 
Sensors.”  Communications  of  the  ACM,  vol.  43  no.  5,  May 
2000, pp. 51-58. 
[9]   E. Shih, S.-H. Cho, N. Ickes, R. Min, A. Sinha, A. Wang, A. 
Chandrakasan. “Physical layer driven protocol and algorithm 
design 
for  energy-efficient  wireless  sensor  networks.” 
MobiCOM, 2001. pp. 272-287. 
[10]  D. Wagner. “Sensor networks: Resilient aggregation in sensor 
networks.” ACM Workshop on Security of ad hoc and sensor 
networks, 2004. pp. 78-87. 
[11] Hoblos G., Staroswiecki M., Aitouche A. “Optimal Design of 
Fault Tolerant Sensor Networks” IIII Int’l Conf. Cont. Apps. 
Anchorage, AK, Sept 2000, pp. 467-72. 
[12] S. Cabuk, N. Malhotra, L. Lin, S. Bagchi, and N. Shroff, 
“Analysis and evaluation of topological and application 
characteristics of unreliable mobile wireless ad-hoc network,” 
In Proceedings of the 10th Pacific Rim Dependable 
Computing Conference, March, 2004 (PRDC 04), March 
2004. 
[13] J. Hightower, R. Tower, and G. Borriello, “SpotON: An 
indoor 3d location sensing technology based on RF signal 
strength,” Technical Report of the University of Washington, 
Computer Science Department, February 2000.  
[14] Sanjiv K. Bhatia, “Adaptive K-Means Clustering” In 
Proceedings of Florida Artificial Intelligence Research 
Symposium, 2004 
[15] Gunjan Khanna, Saurabh Bagchi, and Yu-Sung Wu, "Fault 
Tolerant Energy Aware Data Dissemination Protocol in 
Sensor Network," In Proceedings of the IEEE Dependable 
Systems and Networks Conference (DSN 2004), pp. 739-748, 
June 28-July 1, 2004, Florence, Italy. 
[16] "Design and Analysis of Hierarchical Key Management for 
Scalable and Energy Efficient Secure Communicationon 
Sensors," Issa Khalil, Ness Shroff, and Saurabh Bagchi. 
Submitted to AD HOC NETWORKS JOURNAL 
(ELSEVIER). Also available as CERIAS Tech Report TR-
2003-33. 
[17] Loren Schwiebert, Sandeep K.S. Gupta, “Research challenges 
in wireless networks of biomedical sensors” ACM Sigmobil 
7/01 Rome Italy. 
[18] K. Marzullo, “Tolerating failures of continuous valued 
sensors,” ACM Transactions on Computer Systems, vol. 8, no. 
4, pp. 284-304, November 1990. 
[19] F. Koushanfar, M. Potkonjak, A. Sangiovanni-Vincentell, 
“Fault tolerance techniques for ad-hoc sensor networks,” 
Proceedings of IEEE Sensors, vol. 2, pp. 1491-1496, June 
2002. 
[20] Jeffrey Hightower and Gaetano Borriello, “Location sensing 
techniques,” Technical Report of the University of 
Washington Computer Science Department, UW-CSE-01-07-
01, July 2001. 
[21] J. Hightower and G. Borriello, “Location systems for 
ubiquitous computing,” IEEE Computer, pages 57-66, August 
2001. 
[22] N. Bulusu, J. Heidemann, and D. Estrin, “GPS-less low cost 
outdoor localization for very small devices,” IEEE Personal 
Communications Magazine, pages 28-34, October 2000. 
10