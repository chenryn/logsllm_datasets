PII-Dodonew(161,510)
Total Non-identical(%)
—
—
5,997
3,957(65.98%)
—
Table 13: Basic information of the matched English datasets
90 (93.75%)
PII-Rootkit(69,330)
Total Non-identical(%)
2,510 (85.11%)
167 (79.04%)
PII-000webhost(2,950)
Total Non-identical(%)
—
96
Original
dataset
000webhost 2,949
Yahoo
214
To make our experiments as realistic as possible, our choices of
the training set(s) for a given test set (attacking scenario) adhere
to three rules: (1) they never come from the same service; (2)
they are of the same language and password policy; and (3) the
training set(s) shall be as large as possible. Rule 1 prevents our
experiments from the overﬁtting issue, while rules 2 and 3 ensure
the effectiveness of each algorithm. For fair comparison, we further
make sure that all the 9 algorithms work on the same test set, and
that for the same type of algorithms (e.g., TarGuess-I and [20]),
their training sets exploit the same personal information.
5.2 Evaluation results
The guess number allowed is the most scarce resource when per-
forming an online attack, while computational power and bandwith
are not essential. For instance, in every of these ten experiments,
the training phase can be completed on a common PC in less than
65.3s, while the generation of 1000 guesses for each user takes less
than 2.1s. Thus, we use the guess-number-graph to evaluate the
effectiveness of our four probabilistic algorithms with ﬁve leading
algorithms (i.e., PCFG [35], Markov [21], Trawling optimal [6],
Personal-PCFG [20] and Das et al.’s cross-site algorithm [12]).
Figs. 13(a)(cid:24)13(j) show that, under the same personal informa-
tion available to A and within 100 guesses: (1) TarGuess-I dras-
tically outperforms its foremost counterpart, Personal-PCFG [20],
by 11.17%(cid:24)509% (avg. 84%); (2) TarGuess-II drastically outper-
forms Das et al.’s algorithm [12] by 8.12%(cid:24)300% (avg. 111.06%)
when cracking non-identical password pairs; and (3) TarGuess-III
and IV can gain a success rate of 73.09% when attacking Chinese
normal users and of 31.61% when attacking English security-savvy
users. As the number of guesses increases, in most cases the
superiorities of TarGuess-I(cid:24)IV over their counterparts are further
enhanced. Here we focus on cracking efﬁciency of cross-cite algo-
rithms for non-identical PW pairs, because cracking non-identical
pairs is their primary goal. As mentioned in Sec. 3.1, many PII
attributes in English test sets (i.e., Rootkit and its matched lists) are
missing, otherwise our cracking results would have been higher.
In particular, TarGuess-IV, for the ﬁrst time, characterizes a
very powerful yet realistic attacker who can launch cross-site
guessing by exploiting a victim’s one sister password as well as
both type-1 and type-2 PII. As shown in Figs. 13(a)(cid:24)13(f), within
10 guesses, TarGuess-IV can gain success rates 45.49%(cid:24)85.33%
(avg. 65.70%) against accounts of normal users at various web
services; Within 102 guesses, the ﬁgures are 56.96%(cid:24)88.02%
the ﬁgures are 62.95%(cid:24)
(avg. 73.08%); Within 103 guesses,
89.87% (avg. 77.32%). To achieve such high success rates, the
state-of-the-art trawling algorithms [21, 30] need 1013 guesses per
user and take several days by using high performance computers.
We discover that password strength against both targeted guess-
ing and trawling guessing follows a Zipf distribution. The ﬁrst few
guesses are extremely effective, e.g., at 100 guesses, TarGuess-I
can gain a success rate of 20% against every Chinese service. Yet,
as the number of guesses increases, the success rate of each attempt
decreases rapidly. Interestingly, we ﬁnd that for each of the eight
real-world algorithms (i.e., excluding the trawling optimal one [6]),
the ratio fn of the number of successfully cracked accounts to the
number of guesses per account n can be well approximated by the
Zipf’s law [34]: fn = C (cid:3) ns, where generally s2[0.15, 0.30] and
C2[0.001, 0.01] are constants dependent on the test set. Such a
relationship is a straight line when plotted on a log-log style (see
Fig. 13(k) which depicts the scenario of 12306!Dodonew). The
three parallel layers in Fig. 13(k) just correspond to three kinds of
guessing algorithms: trawling, targeted using PII, targeted using a
sister PW. This diminishing principle has an important implication:
A would stop at some point as her gains do not outweigh her
costs, and there would be three such points corresponding to three
different attacking strategies, yet existing guidelines [16, 18] only
consider the trawling point.
When sister passwords are available, TarGuess-IV can reach a
success rate of 77% against normal users with 100 guesses; Even
when sister passwords are unavailable, TarGuess-I can still achieve
(a) 12306!dodonew
(b) 12306!CSDN
(c) Dodonew!CSDN
(d) dodonew!12306
(e) CSDN!12306
(f) CSDN!Dodonew
(g) Rootkit!000webhost
(h) Rootkit!Yahoo
(i) 000webhost!Rootkit
(j) Yahoo!Rootkit
(k) Diminish returns in all algorithms
(l) A further validation: 12306!Xiaomi
Figure 13: Experiment results for 11 targeted guessing scenarios. Sub-ﬁgures (a) to (f) represent attacks on normal users, while sub-ﬁgures (g) to (j)
represent attacks on security-savvy users. Our TarGuess-I(cid:24)IV are highly effective. Sub-ﬁgure (k) depicts the diminish returns in 12306!Dodonew.
about 20% success rates against normal users with just 100 guesses,
about which little is known? We conﬁrm this with a further ex-
25% with 103 guesses, and 50% with 106 guesses. This suggests
periment to crack Xiaomi cloud passwords, which are MD5 hashed
that the majority of normal users’ passwords are prone to a small
with salt, leaked from the world’s 3rd largest phone maker.
number of targeted online guesses (e.g., 100 as allowed by NIST
[8, 18]), invalidating the 2016 NIST claim that online guessing
“can be readily addressed by throttling the rate of login attempts
permitted” [18]. As normal users’ passwords are even not strong
enough to resist online guessing and still far away from the [106,
1014] “online-ofﬂine chasm” [16], efforts directed towards resist-
ing ofﬂine attacks (e.g., 1010 guesses or beyond [24, 28]) could
have been better placed. Sites shall primarily focus on defending
against online attacks and protecting the password hash ﬁle, while
users shall mainly avoid the three bad behaviors examined in Sec.
In all, targeted online guessing is
3 to survive online guessing.
a much more damaging threat to password security than trawling
guessing and than the community (see [8,18]) might have expected.
Our models will facilitate better evaluation of existing and future
password policies (e.g., [9,24,28]), and they will also be helpful for
forensic investigators to recover passwords in an ofﬂine manner.
5.3 A further validation
We attack Xiaomi as we crack Dodonew in Scenario #2 of Table
11. The test set contains 5,284 Xiaomi hashes obtained after match-
ing the 8M Xiaomi dataset with the 130K 12306 dataset using
email. As shown in Fig. 13(l), within 10(cid:24)103 guesses, TarGuess-
I outperforms Personal-PCFG [20] by 70:58%(cid:24)119%; TarGuess-
II outperforms Das et al.’s algorithm [12] by 73:66% (cid:24) 405%;
TarGuess-III and IV can gain success rates of 63.61%(cid:24)73.56%.
These results well accord with our above 10 experiments, especial-
ly the Chinese ones, suggesting the generality of our models.
6. CONCLUSION
We have presented the ﬁrst systematic evaluation of the extent to
which an online guessing attacker can gain advantages by exploit-
ing various types of user personal info including leaked passwords
and common PII. Our study is grounded on a framework that
consists of 7 sound probabilistic models, with each addressing one
typical attacking scenario. Particularly, TarGuess-I(cid:24)IV character-
ize the four most representative scenarios, and for the ﬁrst time, the
problem of how to model context-aware, semantic-enriched cross-
site password guessing attacks has been well addressed.
In the above experiments, our test sets are in plain-text. Would
our algorithms be still effective when cracking “real accounts”
Extensive experimental results show that TarGuess-I and II dras-
tically outperform their foremost counterparts, and TarGuess-III
and IV can gain success rates as high as 73% with just 100 guesses
against normal users and 32% against security-savvy users. Our
results suggest that the currently used security mechanisms would
be largely ineffective against the targeted online guessing threat,
and this threat has already become much more damaging than
expected. We believe that the new algorithms and knowledge of
effectiveness of targeted guessing models can shed light on both
existing password practice and future password research.
Acknowledgment
The authors are grateful to the anonymous reviewers for their con-
structive comments. We also give our special thanks to Dinei
Flor^encio, Cormac Herley, Hugo Krawczyk, Haining Wang, Yue
Li, Joseph Gardiner, Haibo Cheng and Qianchen Gu for their
insightful suggestions and invaluable help. Ping Wang is the cor-
responding author. This research was in part supported by the Na-
tional Natural Science Foundation of China (NSFC) under Grants
Nos. 61472016 and 61472083, and by the National Key Research
and Development Plan under Grant No. 2016YFB0800600.
7. REFERENCES
[1] Nearly 80 percent of Internet users suffer identity leaks, July
2015. http://bit.ly/2b9TEdn.
[2] All Data Breach Sources, May 2016.
https://breachalarm.com/all-sources.
[3] Turkey: personal data of 50 million citizens leaked online,
April 2016. http://bit.ly/1TPA4j4.
[4] Amid Widespread Data Breaches in China, Dec. 2011.
http://www.techinasia.com/alipay-hack/.
[5] D. V. Bailey, M. Dürmuth, and C. Paar. Statistics on
password re-use and adaptive strength for ﬁnancial accounts.
In Proc. SCN 2014, pages 218–235.
[6] J. Bonneau. The science of guessing: Analyzing an
anonymized corpus of 70 million passwords. In Proc. IEEE
S&P 2012, pages 538–552.
[7] J. Bonneau, C. Herley, P. van Oorschot, and F. Stajano.
Passwords and the evolution of imperfect authentication.
Commun. ACM, 58(7):78–87, 2015.
[8] W. Burr, D. Dodson, R. Perlner, and et al. NIST SP800-63-2:
Electronic authentication guideline. Technical report, NIST,
Reston, VA, Aug. 2013.
[9] X. Carnavalet and M. Mannan. A large-scale evaluation of
high-impact password strength meters. ACM Trans. Inform.
Syst. Secur., 18(1):1–32, 2015.
[10] A. Chaabane, G. Acs, M. A. Kaafar, et al. You are what you
like! information leakage through users’ interests. In Proc.
NDSS 2012, pages 1–15.
[11] C. Custer. China’s Internet users zoom to 668 million, Jan.
2016. http://www.apira.org/news.php?id=1736.
[12] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang.
The tangled web of password reuse. In Proc. NDSS 2014.
[13] M. Dell’Amico and M. Filippone. Monte carlo strength
evaluation: Fast and reliable password checking. In Proc.
ACM CCS 2015, pages 158–169.
[14] M. Dürmuth, D. Freeman, and B. Biggio. Who are you? A
statistical approach to measuring user authenticity. In Proc.
NDSS 2016, pages 1–15.
[15] S. Egelman, A. Sotirakopoulos, K. Beznosov, and C. Herley.
Does my password go up to eleven?: the impact of password
meters on password selection. In Proc. ACM CHI 2013,
pages 2379–2388.
[16] D. Florêncio, C. Herley, and P. van Oorschot. An
administrator’s guide to internet password research. In Proc.
USENIX LISA 2014, pages 44–61.
[17] Now it’s easy to see if leaked passwords work on other sites,
July 2016. http://bit.ly/29AJANh.
[18] P. A. Grassi and J. L. Fenton. NIST SP800-63B: Digital
authentication guideline. Technical report, NIST, Reston,
VA, 2016. https://pages.nist.gov/800-63-3/sp800-63b.html.
[19] S. Ji, S. Yang, X. Hu, W. Han, Z. Li, and R. Beyah. Zero-sum
password cracking game: A large-scale empirical study on
the crackability, correlation, and security of passwords. IEEE
Trans. Depend. Secur. Comput., 2015. Doi:
10.1109/TDSC.2015.2481884.
[20] Y. Li, H. Wang, and K. Sun. A study of personal information
in human-chosen passwords and its security implications. In
Proc. IEEE INFOCOM 2016, pages 1–9.
[21] J. Ma, W. Yang, M. Luo, and N. Li. A study of probabilistic
password models. In Proc. IEEE S&P 2014, pages 689–704.
[22] M. L. Mazurek, S. Komanduri, T. Vidas, L. F. Cranor, P. G.
Kelley, R. Shay, and B. Ur. Measuring password guessability
for an entire university. In Proc. CCS 2013, pages 173–186.
[23] E. McCallister, T. Grance, and K. Scarfone. NIST
SP800-122: Guide to protecting the conﬁdentiality of
personally identiﬁable information (PII). Technical report,
NIST, Reston, VA, April, 2010.
[24] W. Melicher, B. Ur, S. Segreti, S. Komanduri, L. Bauer,
N. Christin, and L. Cranor. Fast, lean and accurate: Modeling
password guessability using neural networks. In Proc.
USENIX SEC 2016, pages 1–17.
[25] A. Narayanan and V. Shmatikov. Fast dictionary attacks on
passwords using time-space tradeoff. In Proc. ACM CCS
2005, pages 364–372.
[26] J. Onaolapo, E. Mariconti, and G. Stringhini. What happens
after you are pwnd: Understanding the use of leaked account
credentials in the wild. In Proc. SIGCOMM IMC 2016.
[27] Four Years Later, Anthem Breached Again: Hackers Stole
Credentials, Feb. 2015. http://t.cn/RqWrMKC.
[28] R. Shay, S. Komanduri, A. Durity, and et al. Designing
password policies for strength and usability. ACM Trans. Inf.
Syst. Secur., 18(4):1–34, 2016.
[29] Senate Bill No. 1386: Personal information, Sep. 2002.
http://bit.ly/1WJIIpK.
[30] B. Ur, S. M. Segreti, L. Bauer, and et al. Measuring
real-world accuracies and biases in modeling password
guessability. In USENIX SEC 2015, pages 463–481.
[31] R. Veras, C. Collins, and J. Thorpe. On the semantic patterns
of passwords and their security impact. In Proc. NDSS 2014.
[32] D. Wang, D. He, H. Cheng, and P. Wang. fuzzyPSM: A new
password strength meter using fuzzy probabilistic
context-free grammars. In Proc. IEEE/IFIP DSN 2016, pages
595–606. http://bit.ly/2ahJ8CO.
[33] D. Wang and P. Wang. The emperor’s new password creation
policies. In Proc.ESORICS 2015, pages 456–477.
[34] D. Wang and P. Wang. On the implications of Zipf’s law in
passwords. In Proc. ESORICS 2016, pages 1–21.
[35] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek.
Password cracking using probabilistic context-free
grammars. In Proc. IEEE S&P 2009, pages 391–405.
[36] This could be the iCloud ﬂaw that led to celebrity photos
being leaked, Sep. 2014. http://bit.ly/Y5vnNc.
[37] Y. Zhang, F. Monrose, and M. Reiter. The security of modern
password expiration:an algorithmic framework and empirical
analysis. In Proc. ACM CCS 2010, pages 176–186.