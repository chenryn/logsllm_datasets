title:StrongChain: Transparent and Collaborative Proof-of-Work Consensus
author:Pawel Szalachowski and
Dani&quot;el Reijsbergen and
Ivan Homoliak and
Siwei Sun
StrongChain: Transparent and Collaborative 
Proof-of-Work Consensus
Pawel Szalachowski, Daniël Reijsbergen, and Ivan Homoliak, Singapore University of 
Technology and Design (SUTD); Siwei Sun, Institute of Information Engineering and DCS 
Center, Chinese Academy of Sciences
https://www.usenix.org/conference/usenixsecurity19/presentation/szalachowski
This paper is included in the Proceedings of the 28th USENIX Security Symposium.August 14–16, 2019 • Santa Clara, CA, USA978-1-939133-06-9Open access to the Proceedings of the 28th USENIX Security Symposium is sponsored by USENIX.StrongChain: Transparent and Collaborative Proof-of-Work Consensus
Pawel Szalachowski1
Dani¨el Reijsbergen1
Ivan Homoliak1
Siwei Sun2,∗
1Singapore University of Technology and Design (SUTD)
2Institute of Information Engineering and DCS Center, Chinese Academy of Sciences
Abstract
Bitcoin is the most successful cryptocurrency so far. This
is mainly due to its novel consensus algorithm, which is
based on proof-of-work combined with a cryptographically-
protected data structure and a rewarding scheme that incen-
tivizes nodes to participate. However, despite its unprece-
dented success Bitcoin suffers from many inefﬁciencies. For
instance, Bitcoin’s consensus mechanism has been proved to
be incentive-incompatible, its high reward variance causes
centralization, and its hardcoded deﬂation raises questions
about its long-term sustainability.
In this work, we revise the Bitcoin consensus mechanism
by proposing StrongChain, a scheme that introduces trans-
parency and incentivizes participants to collaborate rather
than to compete. The core design of our protocol is to
reﬂect and utilize the computing power aggregated on the
blockchain which is invisible and “wasted” in Bitcoin today.
Introducing relatively easy, although important changes to
Bitcoin’s design enables us to improve many crucial aspects
of Bitcoin-like cryptocurrencies making it more secure, ef-
ﬁcient, and proﬁtable for participants. We thoroughly an-
alyze our approach and we present an implementation of
StrongChain. The obtained results conﬁrm its efﬁciency, se-
curity, and deployability.
1 Introduction
One of the main novelties of Bitcoin [28] is Nakamoto con-
sensus. This mechanism enabled the development of a per-
missionless, anonymous, and Internet-scale consensus pro-
tocol, and combined with incentive mechanisms allowed
Bitcoin to emerge as the ﬁrst decentralized cryptocurrency.
Bitcoin is successful beyond all expectations, has inspired
many other projects, and has started new research directions.
Nakamoto consensus is based on proof-of-work (PoW) [8] in
order to mitigate Sybil attacks [6]. To prevent modiﬁcations,
∗This work was done while the author was at SUTD.
a cryptographically-protected append-only list [2] is intro-
duced. This list consists of transactions grouped into blocks
and is usually referred to as a blockchain. Every active pro-
tocol participant (called a miner) collects transactions sent
by users and tries to solve a computationally-hard puzzle in
order to be able to write to the blockchain (the process of
solving the puzzle is called mining). When a valid solution
is found, it is disseminated along with the transactions that
the miner wishes to append. Other miners verify this data
and, if valid, append it to their replicated blockchains. The
miner that has found a solution is awarded by a) the system,
via a rewarding scheme programmed into the protocol, and
b) fees paid by transaction senders. All monetary transfers
in Bitcoin are expressed in its native currency (called bitcoin,
abbreviated as BTC) whose supply is limited by the protocol.
Bitcoin has started an advent of decentralized cryptocur-
rency systems and as the ﬁrst proposed and deployed sys-
tem in this class is surprisingly robust. However, there
are multiple drawbacks of Bitcoin that undermine its secu-
rity promises and raise questions about its future. Bitcoin
has been proved to be incentive-incompatible [9, 11, 39, 47].
Namely, in some circumstances, the miners’ best strategy is
to not announce their found solutions immediately, but in-
stead withhold them for some time period. Another issue is
that the increasing popularity of the system tends towards its
centralization. Strong competition between miners resulted
in a high reward variance, thus to stabilize their revenue
miners started grouping their computing power by forming
mining pools. Over time, mining pools have come to domi-
nate the computing power of the system, and although they
are beneﬁcial for miners, large mining pools are risky for
the system as they have multiple ways of abusing the pro-
tocol [9, 11, 18, 39]. Recently, researchers rigorously ana-
lyzed one of the impacts of Bitcoin’s deﬂation [4, 27, 47].
Their results indicate that Bitcoin may be unsustainable in
the long term, mainly due to decreasing miners’ rewards that
will eventually stop completely. Besides that, unusually for
a transaction system, Bitcoin is designed to favor availability
over consistency. This choice was motivated by its open and
USENIX Association
28th USENIX Security Symposium    819
permissionless spirit, but in the case of inconsistencies (i.e.,
forks in the blockchain) the system can be slow to converge.
Motivated by these drawbacks, we propose StrongChain, a
simple yet powerful revision of the Bitcoin consensus mech-
anism. Our main intuition is to design a system such that the
mining process is more transparent and collaborative, i.e.,
miners get better knowledge about the mining power of the
system and they are incentivized to solve puzzles together
rather than compete. In order to achieve it, in the heart of the
StrongChain’s design we employ weak solutions, i.e., puzzle
solutions with a PoW that is signiﬁcant yet insufﬁcient for a
standard solution. We design our system, such that a) weak
solutions are part of the consensus protocol, b) their ﬁnd-
ers are rewarded independently, and c) miners have incen-
tives to announce own solutions and append solutions of oth-
ers immediately. We thoroughly analyze our approach and
show that with these changes, the mining process is becom-
ing more transparent, collaborative, secure, efﬁcient, and de-
centralized. Surprisingly, we also show how our approach
can improve the freshness properties offered by Bitcoin. We
present an implementation and evaluation of our scheme.
2 Background and Problem Deﬁnition
2.1 Nakamoto Consensus and Bitcoin
The Nakamoto consensus protocol allows decentralized and
distributed network comprised of mutually distrusting par-
ticipants to reach an agreement on the state of the global dis-
tributed ledger [28]. The distributed ledger can be regarded
as a linked list of blocks, referred to as the blockchain, which
serializes and conﬁrms “transactions”. To resolve any forks
of the blockchain the protocol speciﬁes to always accept the
longest chain as the current one. Bitcoin is a peer-to-peer
cryptocurrency that deploys Nakamoto consensus as its core
mechanism to avoid double-spending. Transactions spend-
ing bitcoins are announced to the Bitcoin network, where
miners validate, serialize all non-included transactions, and
try to create (mine) a block of transactions with a PoW em-
bedded into the block header. A valid block must fulﬁll the
condition that for a cryptographic hash function H, the hash
value of the block header is less than the target T .
Brute-forcing the nonce (together with some other change-
able data ﬁelds) is virtually the only way to produce the PoW,
which costs computational resources of the miners. To in-
centivize miners, the Bitcoin protocol allows the miner who
ﬁnds a block to insert a special transaction (see below) mint-
ing a speciﬁed amount of new bitcoins and collecting trans-
action fees offered by the included transactions, which are
transferred to an account chosen by the miner. Currently,
every block mints 12.5 new bitcoins. This amount is halved
every four years, upper-bounding the number of bitcoins that
will be created to a ﬁxed total of 21 million coins. It implies
that after around the year 2140, no new coins will be created,
and the transaction fees will be the only source of reward for
miners. Because of its design, Bitcoin is a deﬂationary cur-
rency.
The overall hash rate of the Bitcoin network and the dif-
ﬁculty of the PoW determine how long it takes to generate
a new block for the whole network (the block interval). To
stabilize the block interval at about 10 minutes for the con-
stantly changing total mining power, the Bitcoin network ad-
justs the target T every 2016 blocks (about two weeks, i.e., a
difﬁculty window) according to the following formula
Tnew = Told · Time of the last 2016 blocks
2016· 10 minutes
.
(1)
In simple terms, the difﬁculty increases if the network is ﬁnd-
ing blocks faster than every 10 minutes, and decrease oth-
erwise. With dynamic difﬁculty, Nakamoto’s longest chain
rule was considered as a bug,1 as it is trivial to produce long
chains that have low difﬁculty. The rule was replaced by the
strongest-PoW chain rule where competing chains are mea-
sured in terms of PoW they aggregated. As long as there is
one chain with the highest PoW, this chain is chosen as the
current one.
Bitcoin introduced and uses the unspent transaction out-
put model. The validity of a Bitcoin transaction is veriﬁed
by executing a script proving that the transaction sender is
authorized to redeem unspent coins. The only exception is
the ﬁrst transaction in the transaction list of a block, which
implements how the newly minted bitcoins and transaction
fees are distributed. It is called a coinbase transaction and
it contains the amount of bitcoins (the sum of newly minted
coins and the fees derived from all the transactions) and the
beneﬁciary (typically the creator of the block). Also, the
Bitcoin scripting language offers a mechanism (OP RETURN)
for recording data on the blockchain, which facilitates third-
party applications built-on Bitcoin.
Bitcoin proposes the simpliﬁed payment veriﬁcation
(SPV) protocol, that allows resource-limited clients to ver-
ify that a transaction is indeed included in a block provided
only with the block header and a short transaction’s inclusion
proof. The key advantage of the protocol is that SPV clients
can verify the existence of a transaction without download-
ing or storing the whole block. SPV clients are provided only
with block headers and on-demand request from the network
inclusion proofs of the transactions they are interested in.
In the original white paper, Nakamoto heuristically argues
that the consensus protocol remains secure as long as a ma-
jority (> 50%) of the participants’ computing power hon-
estly follow the rule speciﬁed by the protocol, which is com-
patible with their own economic incentives.
1https://goo.gl/thhusi
820    28th USENIX Security Symposium
USENIX Association
2.2 Bitcoin Mining Issues
Despite its popularity, Nakamoto consensus and Bitcoin suf-
fer from multiple issues. Bitcoin mining is not always
incentive-compatible. By deviating from the protocol and
strategically withholding found blocks, a miner in posses-
sion of a proportion α of the total computational power may
occupy more than α portion of the blocks on the blockchain,
and therefore gain disproportionally higher payoffs with re-
spect to her share [1, 11, 39]. More speciﬁcally, an attacker
tries to create a private chain by keeping found blocks secret
as long as the chain is in an advantageous position with one
or more blocks more than the public branch. She releases her
private chain only when the public chain has almost caught
up, hence invalidating the public branch and all the efforts
made by the honest miners. This kind of attack, called self-
ish mining, can be more efﬁcient when a well-connected self-
ish miner’s computational power exceeds a certain threshold
(around more than 30%). Thus, selﬁsh mining does not pay
off if the mining power is sufﬁciently decentralized.
Unfortunately,
the miners have an impulse to central-
ize their computing resources due to Bitcoin’s rewarding
scheme. In Bitcoin, rewarding is a zero-sum game and only
the lucky miner who manages to get her block accepted re-
ceives the reward, while others who indeed contributed com-
putational resources to produce the PoW are completely in-
visible and ignored. Increasing mining competition leads to
an extremely high variance of the payoffs of a miner with
a limited computational power. A solo miner may need to
wait months or years to receive any reward at all. As a
consequence, miners are motivated to group their resources
and form mining pools, that divide work among pool partici-
pants and share the rewards according to their contributions.
As of November 2018, only ﬁve largest pools account for
more than 65% of the mining power of the whole Bitcoin
network.2 Such mining pools not only undermine the de-
centralization property of the system but also raise various
in-pool or cross-pool security issues [5, 9, 22, 37].
Another seemingly harmless characteristic of Bitcoin is
its ﬁnite monetary supply. However, researchers in their re-
cent work [4, 27, 47] investigate the system dynamics when
incentives coming from transaction fees are non-negligible
compared with block rewards (in one extreme case the in-
centives come only from fees). They provide analysis and
evidence, indicating an undesired system degradation due
to the rational and self-interested participants. Firstly, such
a system incentivizes large miner coalitions, increasing the
system centralization even more. Secondly, it leads to a min-
ing gap where miners would avoid mining when the avail-
able fees are insufﬁcient. Even worse, rational miners tend
to mine on chains that do not include available transactions
(and their fees), rather than following the block selection rule
speciﬁed by the protocol, resulting in a backlog of transac-
tions. Finally, in the sole transaction fee regime, selﬁsh min-
ing attacks are efﬁcient for miners with arbitrarily low min-
ing power, regardless of their network connection qualities.
These results suggest that making the block reward perma-
nent and accepting the monetary inﬂation may be a wise de-
sign choice to ensure the stability of the cryptocurrency in
the long run.
Moreover, the chain selection rule (i.e., the strongest chain
is accepted), together with the network delay, occasionally
lead to forks, where two or more blocks pointing to the
same block are created around the same time, causing the
participants to have different views of the current system
state. Such conﬂicting views will eventually be resolved
since with a high probability one branch will ﬁnally beat
the others (then the blocks from the “losing” chain become
stale blocks). The process of fork resolution is quite slow,
as blocks have the same PoW weight and they arrive in 10-
minutes intervals (on average).
Finally, the freshness properties provided by Bitcoin are
questionable. By design, the Bitcoin blockchain preserves
the order of blocks and transactions, however, the accurate
estimation of time of these events is challenging [43], de-
spite the fact that each block has an associated timestamp.
A block’s timestamp is accepted if a) it is greater than the
median timestamp of the previous eleven blocks, and b) it is
less than the network time plus two hours.3 This gives sig-
niﬁcant room for manipulation — in theory, a timestamp can
differ in hours from the actual time since it is largely deter-
mined by a single block creator. In fact, as time cannot be
accurately determined from the timestamps, the capabilities
of the Bitcoin protocol as a timestamping service are limited,
which may lead to severe attacks by itself [3, 17].
2.3 Requirements
For the purpose of revising a consensus protocol of PoW
blockchains in a secure, well-incentivized, and seamless
way, we deﬁne the following respective requirements:
• Security – the scheme should improve the security of
Nakamoto consensus by mitigating known attack vec-
tors and preventing new ones. In essence, the scheme
should be incentive-compatible, such that miners bene-
ﬁt from following the consensus rules and have no gain
from violating them.
• Reward Variance – another objective is to minimize
the variance in rewards. This requirement is crucial
for decentralization since a high reward variance is the
main motivation of individual miners to join centralized
mining pools. Centralization is undesirable as large-
enough mining pools can attack the Bitcoin protocol.
• Chain Quality – the scheme should provide a high
chain quality, which usually is described using the two
following properties.
2https://btc.com/stats/pool?pool_mode=month
3https://en.bitcoin.it/wiki/Block_timestamp
USENIX Association
28th USENIX Security Symposium    821
– Mining Power Utilization – the ratio between
the mining power on the main chain and the min-
ing power of the entire blockchain network. This
property describes the performance of mining and
its ideal value is 1, which denotes that all mining
power of the system contributes to the “ofﬁcial” or
“canonical” chain. A high mining power utiliza-
tion implies a low stale block rate.
– Fairness – the protocol should be fair,
i.e., a
miner should earn rewards proportionally to the
resources invested by her in mining. We denote
a miner with α of the global mining power as an
α-strong miner.
• Efﬁciency and Practicality – the scheme should not in-
troduce any signiﬁcant computational, storage, or band-
width overheads. This is especially important since Bit-
coin works as a replicated state machine, therefore all
full nodes replicate data and the validation process. In