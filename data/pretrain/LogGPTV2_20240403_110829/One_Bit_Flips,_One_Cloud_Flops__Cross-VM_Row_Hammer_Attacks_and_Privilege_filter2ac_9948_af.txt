Certainly! Here is the optimized version of your text, aiming for clarity, coherence, and a professional tone:

---

**Prevalence of Paravirtualized Guests in Public Clouds**

Public cloud services heavily rely on paravirtualized (PV) guests. Additionally, PV machines are the primary virtualization substrate in free academic clouds like CloudLab. The widespread use of PV guests provides adversaries with opportunities to perform bit detection, enabling double-sided row hammer attacks in public clouds. With detected bit flips, malicious actors can manipulate page tables to enable arbitrary cross-VM memory accesses. Such hardware attacks are beyond the control of the hypervisor, leading to direct impairment of system integrity or more sophisticated exploits by attackers.

**Cloud Services and Instance Types**

- **Amazon EC2 [7]**
  - Instance types: t1, m1, m2, m3, c1, c3, hi1, hs1
- **Rackspace [28]**
  - General purpose, Standard
- **SoftLayer**
  - Single/Multi-tenant Virtual Server
- **CloudLab**
  - d810, d430, C220M4, c8220(x), r320, dl360, d820, C220M4

**OpenSSH Attack Process**

The adversary resumes the login process by entering a password to decrypt the private key. If the private key is incorrect, this step fails. As a fallback, password authentication is used, allowing the adversary to log in with any password, as the server does not actually check it.

The time to complete the OpenSSH attack depends on the number of physical pages scanned before finding the target. If the target physical page is the first examined, the average time to complete the attack is 0.322 seconds, including the time to manipulate page tables, conduct row hammer attacks, search for specific patterns, and inject code into the target.

**Table 3: Prevalence of Xen Paravirtualized VMs in Public Clouds**

**Discussion on Existing Countermeasures**

In this section, we discuss existing software and hardware countermeasures against the demonstrated cross-VM row hammer attacks.

**Row Hammer Resistance with Hardware-Assisted Virtualization**

Many of the attacks presented (e.g., bit detection, double-sided row hammering, and cross-VM memory accesses via page table manipulation) require the adversary to know the machine address of their virtual memory. One way to prevent physical address disclosure to guest VMs is to adopt hardware-assisted virtualization, such as Intel’s VT-x [31] and AMD’s AMD-V [2]. These technologies use Extended Page Tables (EPT) and Nested Page Tables (NPT) to accelerate processor access to two layers of page tables, one controlled by the guest VM and the other by the hypervisor. This prevents guest VMs from observing real physical addresses, which are no longer embedded in the PTEs. Hardware-assisted virtualization also prevents direct manipulation of page tables, making privilege escalation attacks infeasible.

The transition from Xen paravirtualization to hardware-assisted virtualization in public clouds began a few years ago but has been slow. One reason is that paravirtualization historically offered better performance in networking and storage [9]. However, recent advances in hardware-assisted virtualization technology have made some HVM-based cloud instances (especially PV on HVM) comparable, if not superior, in performance [7]. Despite this, given the current prevalence of paravirtualization in public clouds, it will likely take many years for this technology to phase out. Our study aims to motivate the community to accelerate this transition.

**Row Hammer Resistance with ECC-Enabled DRAMs**

As discussed in Section 2, the most common ECC mechanism is single error-correction, double error-detection. It can correct only one single-bit error within a 64-bit memory block and detect (but not correct) 2-bit errors, causing the machine to crash. ECC memory makes row hammer attacks much harder, as 1-bit and 2-bit errors are more common than multi-bit errors. However, ECC memory does not provide strong security guarantees against row hammer attacks [24]. An adversary can still trigger multiple (> 3) bit flips in the same 64-bit word, silently inducing and later exploiting errors, especially if they know the true physical address of an extremely vulnerable row.

We believe a combination of hardware and software-based defenses will offer better security against row hammer attacks. Hardware protection raises the bar for conducting such attacks, while software isolation prevents successful exploitation once a vulnerability is found.

**Conclusion**

In conclusion, we explored row hammer attacks in cross-VM settings and successfully demonstrated software attacks that exploit row hammer vulnerabilities to break memory isolation in virtualization. Many techniques presented are novel, such as our graph-based bit detection algorithm, which reliably determines row bits and XOR-schemes to determine bank bits within one or two minutes. This method enables the construction of double-sided attacks, significantly improving attack fidelity. The page table replacement attacks present a deterministic exploitation of row hammer vulnerabilities. The examples of private key exfiltration from an HTTPS web server and code injection to bypass password authentication on an OpenSSH server illustrate the power of these attacks. The key takeaways are: (1) Row hammer attacks can effectively induce bit flips in vulnerable memory chips, and (2) cross-VM exploitation of row hammer vulnerabilities enables a wide range of security attacks. While server-grade processors and memory chips are less vulnerable, security guarantees must be achieved through both hardware and software solutions.

**Acknowledgments**

This work was supported in part by grants CRII-1566444 and CCF-1253933 from the National Science Foundation. We thank Felix Schuster, the shepherd of our paper, and the anonymous reviewers for their constructive suggestions. We are grateful to CloudLab for providing access to their servers.

**References**

[1] AMD-V nested paging. http://developer.amd.com/wordpress/media/2012/10/NPT-WP-1%201-final-TM.pdf. Accessed: 2016-06.

[2] AMD64 architecture programmers manual, volume 2: System programming. http://developer.amd.com/wordpress/media/2012/10/24593_APM_v21.pdf. Accessed: 2016-06.

[3] BIOS and Kernel Developer’s Guide for AMD Athlon 64 and AMD Opteron Processors. http://support.amd.com/TechDocs/26094.pdf. Revision: 3.30, Issue Date: 2016-02.

[4] Exploiting the DRAM rowhammer bug to gain kernel privileges. http://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html. Accessed: 2016-01-23.

[5] How physical addresses map to rows and banks in DRAM. http://lackingrhoticity.blogspot.com/2015/05/how-physical-addresses-map-to-rows-and-banks.html. Accessed: 2016-01-30.

[6] Intel 64 and IA-32 architectures software developers manual, combined volumes:1,2A,2B,2C,3A,3B and 3C. http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html. Version 052, retrieved on Dec 25, 2015.

[7] Linux AMI virtualization types. http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/virtualization_types.html. Accessed: 2016-06.

[8] Product Documentation for Red Hat Enterprise Linux. https://access.redhat.com/documentation/en/red-hat-enterprise-linux/. Accessed: 2016-06.

[9] PV on HVM. http://wiki.xen.org/wiki/PV_on_HVM. Accessed: 2016-06.

[10] Research report on using JIT to trigger rowhammer. http://xlab.tencent.com/en/2015/06/09/Research-report-on-using-JIT-to-trigger-RowHammer. Accessed: 2016-01-30.

[11] X86 paravirtualised memory management. http://wiki.xenproject.org/wiki/X86_Paravirtualised_Memory_Management. Accessed: 2016-01-23.

[12] AICHINGER, B. P. DDR memory errors caused by row hammer. http://www.memcon.com/pdfs/proceedings2015/SAT104_FuturePlus.pdf.

[13] BAINS, K., HALBERT, J. B., MOZAK, C. P., SCHOENBORN, T. Z., AND GREENFIELD, Z. Row hammer refresh command. US9236110, Jan 03 2014.

[14] BAINS, K. S., AND HALBERT, J. B. Distributed row hammer tracking. US20140095780, Apr 03 2014.

[15] BAINS, K. S., HALBERT, J. B., SAH, S., AND GREENFIELD, Z. Method, apparatus and system for providing a memory refresh. US9030903, May 27 2014.

[16] BOSMAN, E., RAZAVI, K., BOS, H., AND GIUFFRIDA, C. Dedup est machina: Memory deduplication as an advanced exploitation vector. In 37nd IEEE Symposium on Security and Privacy (2016), IEEE Press.

[17] CHISNALL, D. The Definitive Guide to the Xen Hypervisor (Prentice Hall Open Source Software Development Series). Prentice Hall PTR, 2007.

[18] DONG, Y., LI, S., MALLICK, A., NAKAJIMA, J., TIAN, K., XU, X., YANG, F., AND YU, W. Extending Xen with Intel virtualization technology. Intel Technology Journal 10, 3 (2006), 193–203.

[19] GREENFIELD, Z., BAINS, K. S., SCHOENBORN, T. Z., MOZAK, C. P., AND HALBERT, J. B. Row hammer condition monitoring. US patent US8938573, Jan 30 2014.

[20] GRUSS, D., MAURICE, C., AND MANGARD, S. Rowhammer.js: A remote software-induced fault attack in JavaScript. In 13th Conference on Detection of Intrusions and Malware and Vulnerability Assessment (2016).

[21] JAHAGIRDAR, S., GEORGE, V., SODHI, I., AND WELLS, R. Power management of the third generation Intel Core micro architecture formerly codenamed Ivy Bridge. http://www.hotchips.org/wp-content/uploads/hc_archives/hc24/HC24-1-Microprocessor/HC24.28.117-HotChips_IvyBridge_Power_04.pdf, 2012.

[22] KIM, D.-H., NAIR, P., AND QURESHI, M. Architectural support for mitigating row hammering in DRAM memories. Computer Architecture Letters 14, 1 (Jan 2015), 9–12.

[23] KIM, Y., DALY, R., KIM, J., FALLIN, C., LEE, J. H., LEE, D., WILKERSON, C., LAI, K., AND MUTLU, O. Flipping bits in memory without accessing them: An experimental study of DRAM disturbance errors. In 41st Annual International Symposium on Computer Architecture (2014), IEEE Press.

[24] LANTEIGNE, M. How rowhammer could be used to exploit weaknesses in computer hardware. http://www.thirdio.com/rowhammer.pdf, 2016. Accessed: Jun. 2016.

[25] LIN, W.-F., REINHARDT, S., AND BURGER, D. Reducing DRAM latencies with an integrated memory hierarchy design. In 7th International Symposium on High-Performance Computer Architecture (2001).

[26] LIU, F., YAROM, Y., GE, Q., HEISER, G., AND LEE, R. B. Last-level cache side-channel attacks are practical. In 36th IEEE Symposium on Security and Privacy (2015), IEEE Press.

[27] MOSCIBRODA, T., AND MUTLU, O. Memory performance attacks: Denial of memory service in multi-core systems. In 16th USENIX Security Symposium (2007), USENIX Association.

[28] NOLLER, J. Welcome to performance cloud servers; have some benchmarks. https://developer.rackspace.com/blog/welcome-to-performance-cloud-servers-have-some-benchmarks, 2013. Accessed: Jun. 2016.

[29] PESSL, P., GRUSS, D., MAURICE, C., SCHWARZ, M., AND MANGARD, S. DRAMA: Exploiting DRAM addressing for cross-CPU attacks. In 25th USENIX Security Symposium (2016), USENIX Association.

[30] RISTENPART, T., TROMER, E., SHACHAM, H., AND SAVAGE, S. Hey, you, get off of my cloud: Exploring information leakage in third-party compute clouds. In 16th ACM conference on Computer and communications security (2009), ACM.

[31] UHLIG, R., NEIGER, G., RODGERS, D., SANTONI, A. L., MARTINS, F. C. M., ANDERSON, A. V., BENNETT, S. M., KAGI, A., LEUNG, F. H., AND SMITH, L. Intel virtualization technology. Computer 38, 5 (May 2005), 48–56.

[32] VARADARAJAN, V., ZHANG, Y., RISTENPART, T., AND SWIFT, M. A placement vulnerability study in multi-tenant public clouds. In 24th USENIX Security Symposium (2015), USENIX Association.

[33] WANG, D. T. Modern DRAM Memory Systems: Performance Analysis and Scheduling Algorithm. PhD thesis, College Park, MD, USA, 2005.

---

This version is structured to enhance readability and maintain a professional tone, ensuring that the content is clear and coherent.