net.daum.android.map
net.daum.android.daum
jp.united.app.cocoppa
jp.co.mcdonalds.android
de.hafas.android.db
com.zynga.wwf2.free
com.xinmei365.font
com.tokopedia.tkpd
com.toi.reader.activities
com.skimble.workouts
com.ScanLife
com.rhmsoft.fm.hd
com.quoord.tapatalkpro.activity
com.prestigio.ereader
com.nytimes.android
com.naver.linewebtoon
com.mt.mtxx.mtxx
com.makemytrip
com.mobilesrepublic.appy
com.lbe.parallel.intl
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Table 1: XAWI-susceptible apps. (✓indicates the feature is supported.)
JS HTML5 Custom Scheme Background
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Installation
1,000,000,000 ∼ 5,000,000,000 ✓
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
100,000,000 ∼ 500,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
50,000,000 ∼ 100,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
10,000,000 ∼ 50,000,000
✓
✓
✓
Session D2:  Vulnerable Mobile AppsCCS’17, October 30-November 3, 2017, Dallas, TX, USA843REFERENCES
[1] 2017. Supplement materials. https://sites.google.com/site/xawisite/. (May 2017).
[2] Yousra Aafer, Nan Zhang, Zhongwen Zhang, Xiao Zhang, Kai Chen, XiaoFeng
Wang, Xiaoyong Zhou, Wenliang Du, and Michael Grace. 2015. Hare hunting in
the wild android: A study on the threat of hanging attribute references. In Pro-
ceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications
Security. ACM, 1248–1259.
[3] Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bar-
tel, Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick McDaniel. 2014.
Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint
analysis for android apps. Acm Sigplan Notices 49, 6 (2014), 259–269.
[4] Antonio Bianchi, Jacopo Corbetta, Luca Invernizzi, Yanick Fratantonio, Christo-
pher Kruegel, and Giovanni Vigna. 2015. What the app is that? deception and
countermeasures in the android user interface. In 2015 IEEE Symposium on Secu-
rity and Privacy. IEEE, 931–948.
[5] Kai Chen, Tongxin Li, Bin Ma, Peng Wang, XiaoFeng Wang, and Peiyuan Zong.
2017. Filtering for Malice through the Data Ocean: Large-Scale PHA Install De-
tection at the Communication Service Provider Level. In International Symposium
on Research in Attacks, Intrusions, and Defenses.
[6] Kai Chen, Peng Wang, Yeonjoon Lee, XiaoFeng Wang, Nan Zhang, Heqing Huang,
Wei Zou, and Peng Liu. 2015. Finding Unknown Malice in 10 Seconds: Mass
Vetting for New Threats at the Google-Play Scale. In USENIX Security Symposium.
659–674.
[7] Qi Alfred Chen, Zhiyun Qian, and Z Morley Mao. 2014. Peeking into your app
without actually seeing it: UI state inference and novel android attacks. In 23rd
USENIX Security Symposium (USENIX Security 14). 1037–1052.
[8] Yangyi Chen, Tongxin Li, XiaoFeng Wang, Kai Chen, and Xinhui Han. 2015.
Perplexed messengers from the cloud: Automated security analysis of push-
messaging integrations. In Proceedings of the 22nd ACM SIGSAC Conference on
Computer and Communications Security. ACM, 1260–1272.
[9] Erika Chin, Adrienne Porter Felt, Kate Greenwood, and David Wagner. 2011.
Analyzing inter-application communication in Android. In Proceedings of the
9th international conference on Mobile systems, applications, and services. ACM,
239–252.
[10] Erika Chin and David Wagner. 2013. Bifocals: Analyzing webview vulnerabili-
ties in android applications. In International Workshop on Information Security
Applications. Springer, 138–159.
https://developer.
apple.com/library/content/documentation/General/Conceptual/AppSearch/
UniversalLinks.html. (May 2017).
[11] Apple Developer. 2017.
Support Universal Links.
[12] Android Developers. 2017. Activity Element. https://developer.android.com/
guide/topics/manifest/activity-element.html. (May 2017).
[13] Android Developers. 2017. Android Debug Bridge. https://developer.android.
com/studio/command-line/adb.html. (May 2017).
[14] Android Developers. 2017. Tasks and Back Stack. https://developer.android.com/
guide/components/tasks-and-back-stack.html. (May 2017).
[15] Android Developers.
2017.
UI/Application
Exerciser Monkey.
http://developer.android.com/tools/help/monkey.html. (May 2017).
[16] Facebook Developers. 2016. App Links. https://developers.facebook.com/docs/
applinks. (November 2016).
[17] Rachna Dhamija and J Doug Tygar. 2005. The battle against phishing: Dynamic
security skins. In Proceedings of the 2005 symposium on Usable privacy and security.
ACM, 77–88.
[18] Alon Even. 2016. How to Grow Your Mobile App Retention. http://www.apptamin.
com/blog/grow-app-rentention/. (2016).
[19] Adrienne Porter Felt and David Wagner. 2011. Phishing on mobile devices. na.
[20] Adrienne Porter Felt, Helen J Wang, Alexander Moshchuk, Steve Hanna, and
Erika Chin. 2011. Permission Re-Delegation: Attacks and Defenses.. In USENIX
Security Symposium, Vol. 6. 12–16.
[21] Earlence Fernandes, Qi Alfred Chen, Justin Paupore, Georg Essl, J Alex Halder-
man, Z Morley Mao, and Atul Prakash. 2016. Android UI Deception Revisited:
Attacks and Defenses. In Proceedings of the 20th International Conference on
Financial Cryptography and Data Security.
[22] iBotPeaches. 2017. Apktool. https://ibotpeaches.github.io/Apktool/. (May 2017).
[23] Yeonjoon Lee, Tongxin Li, Nan Zhang, Soteris Demetriou, Mingming Zha, Xi-
aoFeng Wang, Kai Chen, Xiaoyong Zhou, Xinhui Han, and Michael Grace. 2017.
Ghost Installer in the Shadow: Security Analysis of App Installation on An-
droid. In Dependable Systems and Networks (DSN), 2017 47th Annual IEEE/IFIP
International Conference on. IEEE.
[24] Tongxin Li, Xiaoyong Zhou, Luyi Xing, Yeonjoon Lee, Muhammad Naveed, Xi-
aoFeng Wang, and Xinhui Han. 2014. Mayhem in the push clouds: Understanding
and mitigating security hazards in mobile push-messaging services. In Proceedings
of the 2014 ACM SIGSAC Conference on Computer and Communications Security.
ACM, 978–989.
[25] Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, and Heng Yin. 2011. Attacks
on WebView in the Android system. In Proceedings of the 27th Annual Computer
Security Applications Conference. ACM, 343–352.
[26] Tongbo Luo, Xing Jin, Ajai Ananthanarayanan, and Wenliang Du. 2012. Touch-
jacking attacks on web in android, ios, and windows phone. In International
Symposium on Foundations and Practice of Security. Springer, 227–243.
Abusing Samsung KNOX to remotely in-
stall a malicious application:
story of a half patched vulnerability.
https://blog.quarkslab.com/abusing-samsung-knox-to-remotely-install-a-
malicious-application-story-of-a-half-patched-vulnerability.html. (November
2014).
[27] Andre Moulu. 2014.
[28] Patrick Mutchler, Adam Doupé, John Mitchell, Chris Kruegel, and Giovanni
Vigna. 2015. A Large-Scale Study of Mobile Web App Security. In Proceedings of
the Mobile Security Technologies Workshop (MoST).
[29] Marcus Niemietz and Jörg Schwenk. 2012. Ui redressing attacks on android
devices. Black Hat Abu Dhabi (2012).
[30] Chuangang Ren, Peng Liu, and Sencun Zhu. 2017. WindowGuard: Systematic
Protection of GUI Security in Android. In Proc. of the Annual Symposium on
Network and Distributed System Security (NDSS).
[31] Chuangang Ren, Yulong Zhang, Hui Xue, Tao Wei, and Peng Liu. 2015. Towards
discovering and understanding task hijacking in android. In 24th USENIX Security
Symposium (USENIX Security 15). 945–959.
[32] rovo89. 2017. Xposed Module Repository. http://repo.xposed.info. (May 2017).
[33] Hossain Shahriar, Tulin Klintic, Victor Clincy, et al. 2015. Mobile Phishing Attacks
[34] Thomas Sommer. 2014. User Retention: Yes, But Which One? http://www.applift.
and Mitigation Techniques. Journal of Information Security 6, 03 (2015), 206.
com/blog/user-retention.html. (February 2014).
[35] Tom Sutcliffe and Adrian Taylor. 2015. The Lifetime of Android API Vulner-
abilities: Case Study on the JavaScript-to-Java Interface. In Security Protocols
XXIII: 23rd International Workshop, Cambridge, UK, March 31-April 2, 2015, Revised
Selected Papers, Vol. 9379. Springer, 126.
[36] Symantec. 2016. Android ransomware variant uses clickjacking to become device
administrator. https://www.symantec.com/connect/blogs/android-ransomware-
variant-uses-clickjacking-become-device-administrator. (January 2016).
[37] Mitsui Bussan Takeshi Terada. 2014. Whitepaper – Attacking Android browsers
via intent scheme URLs. http://www.mbsd.jp/Whitepaper/IntentScheme.pdf.
(March 2014).
[38] Rui Wang, Luyi Xing, XiaoFeng Wang, and Shuo Chen. 2013. Unauthorized
origin crossing on mobile platforms: Threats and mitigation. In Proceedings of
the 2013 ACM SIGSAC conference on Computer & communications security. ACM,
635–646.
[39] Luyi Xing, Xiaolong Bai, Tongxin Li, XiaoFeng Wang, Kai Chen, Xiaojing Liao, Shi-
Min Hu, and Xinhui Han. 2015. Cracking App Isolation on Apple: Unauthorized
Cross-App Resource Access on MAC OS. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Security. ACM, 31–43.
Session D2:  Vulnerable Mobile AppsCCS’17, October 30-November 3, 2017, Dallas, TX, USA844