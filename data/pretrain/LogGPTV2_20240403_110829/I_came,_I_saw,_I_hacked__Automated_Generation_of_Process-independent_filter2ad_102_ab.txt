P
○
Sensors/sensing signal
Controllers/controller variables ●
○
Actuators actuating signals
●
Attacker defined specification
Exhaustive vulnerability study ○
○
Undirected attacks
Feasibility of stealthy attacks:
compromised component
Table 1: Summary of real-world and academic process-aware attacks. We denote the ICS sectors by W: Water, C: Chemical,
E: Energy, N: Nuclear sectors, and G: to represent generic attacks that are not specific to any sector. To denote compromised
components, we use P: PLCs, A: Actuators, S: Sensors, N: enterprise Network, CN: Control Network, and GPC: General Purpose
Computer. Cyan rows (rows: 4,5): pre-infection knowledge required by the attacker to launch the attack. Gray rows (rows:
7,8,9): the degree of plant visibility assumed in the attack for launch or evaluation. Red rows (rows: 10,11,12): the type of
attacks performed in the work. ● represents the completeness of the parameter used in the table.
[22]
[25]
A
A
W C
●
●
●
●
S, A P, S,
A
●
●
●
○
●
●
●
○
●
○
○
○
GPC N
○
○
○
●
○
○
○
○
○
○
●
○
[11]
R
G
●
●
GPC,
P
○
●
○
●
○
○
[28]
R
M
●
●
GPC,
N
○
○
○
○
○
○
[23]
A
E
●
●
CN,
P
○
●
○
○
○
●
[12]
R
N
●
●
GPC,
N, P
(cid:71)(cid:35)
●:S (cid:71)(cid:35):S (cid:71)(cid:35):S
GPC
○
●
○
○
●
○
(cid:71)(cid:35)
CN,
S
●
○
○
○
○
●
(cid:71)(cid:35):S (cid:71)(cid:35):S,
A
●:A ●:A ○
○
○
○
○
[8]
A
C
●
●
S
●
○
○
○
●
○
(cid:71)(cid:35)
○
○
S
●
○
●
○
●
○
○
P
○
●
○
○
○
●
○
●
P
(cid:71)(cid:35)
(cid:71)(cid:35)
○
●
○
○
●
○
●
○
○
○
known industrial protocols/ports is sufficient to identify potential
targets, followed by a connection to the PLC. Modern PLCs use FTP
for file transfer and very frequently allow anonymous access or use
default passwords. This can be used to download PLC binaries.
Supervisory Control And Data Acquisition (SCADA) which mon-
itors and controls all components has complete observability of the
plant (See Fig. 1) and infecting the computer hosting SCADA is
the best-case scenario for an adversary. However, we also consider
plants with decentralized systems hosting several HMIs; the at-
tacker in this scenario will have less visibility if only one computer
hosting one HMI is infected. The HMIs may monitor a subset of
devices in the plant rather than the entire plant. We thus explore the
possibility of developing and delivering attacks given such limited
visibility to the process. We emphasize that our constrained threat
model aims to investigate the requirements and possibilities for an
attacker to successfully launch an attack in this scenario.
Essentially we aim to launch process-aware attacks: These at-
tacks are advanced because they collect intelligence to build the
final attack vector but do not act to achieve quick financial gains
or cause volatile attacks. Instead, the payloads weigh the capabili-
ties, look for an opportune moment, and launch the attack while
ensuring stealthiness. These characteristics require complete recon-
naissance of the target. While public information about plants [23],
device fingerprinting [14], social engineering [4] and model simu-
lation [22] may be used to gain pre-infection knowledge, this leads
to crafting manually designed target-specific attack vectors. We, on
the other hand, aim to build attack tools that can automatically gain
knowledge about the plant and can design payloads accordingly.
As discussed in Section 1, it is difficult to build a generalizable
and stealthy payload that can guarantee successful infection across
all the different ICS sectors. Therefore, we call the attacks gener-
alizable if they leverage integral components that are present in
any ICS environment. An example of such components includes
HMIs, PLCs and general purpose computers. Furthermore, we de-
fine stealthiness of the payloads from the process point of view,
since random changes in process variables may trigger very simple
Figure 1: A typical ICS layout [43].
the entire process and/or assume extremely detailed knowledge of
the plant while crafting attack vectors. In contrast, for our threat
model, we make the following assumptions:
• The attacker has no prior knowledge of the ICS;
• The attacker can reach and execute a program on an HMI;
• The HMI connects to a PLC and its binary can be extracted.
The first assumption is the difference of our work to all related
work. In our threat model, the attacker has no knowledge about
the process and tries to extract as much as possible automatically.
The second assumption is based on real-world attacks where
the attackers used traditional techniques to control a Windows
machine. Through some entry vector, such as infected USBs, social
engineering, or (spear) phishing, etc., a piece of malware enters the
enterprise network and moves laterally, infecting other Windows
machines. The Ukraine power grid attack [28] reached the HMI
controlling the circuit breakers by stealing the VPN credentials of
the substation engineers through social engineering.
The third assumption is required for delivering a process-aware
attack using dynamically acquired knowledge. Without it, our at-
tack stays at the reconnaissance stage only. An HMI, however, is
designed to give commands and receive data from PLCs, so a net-
work path to PLCs certainly exists. A simple Nmap prioritizing
This is the accepted version of the article shared by the authors. The final published version will be available at AsiaCCS 2020 Proceedings.
Sector
Chemical
Commercial
Communications
Manufacturing
Dams
Defense
Emergency
Energy
Financial
Food
Government
Healthcare
IT
Nuclear
Transportation
Water
No.
179
8
1
2
4
0
0
162
0
5
0
0
0
8
8
144
Top 3 languages
English (105), Czech (7), Turkish (7)
English (7), French (1)
English (1)
English (2)
English (4)
-
-
English (126), Czech (7), Turkish (3)
-
English (5)
-
-
-
English (8)
English (5), Czech (2), Slovak (1)
English (123), Czech (9), Thai (3)
Table 2: Summary of our constructed dataset of HMI images.
HMI screenshots can provide that information in a condensed form.
Therefore, we mainly use HMI screenshots to learn more about
the ICS sector which will be further explained in subsection 4.1.
On the other hand, the code running on the infected PLC provides
information about the specific process. Thus, we choose PLC con-
trol binaries to perform ICS process fingerprinting, as explained
in subsection 4.2. We also performed process fingerprinting using
HMI screenshots and sector fingerprinting using PLC binaries and
observed limited accuracy (these results appear in the Appendix).
4.1 ICS Sector fingerprinting
Constructed dataset: We used google_images_download python
package to automatically download 1000 images for each of the 16
critical infrastructure sectors, as defined by the US Department of
Homeland Security [34] and presented in the first column of Table
2. We further augmented the dataset (with various search strings)
using Bing (≈2k), using Flickr (≈40) and searched for ICS screen-
shots in Shodan [30] (≈20). After careful pruning, we recovered 521
useful HMI images, as summarized in Table 2. Details of dataset con-
struction appear in the Appendix. We decided to focus on Chemical,
Energy, and Water sectors for two reasons: a) Most of the real-world
attacks target these three sectors (as discussed in Section 2), and b)
Since machine learning requires large datasets for robust models,
these are the only sectors that can provide meaningful results.
We faced two contradictory challenges in building a generalized
classification model. First, training over a small dataset always has
a higher chance of overfitting in deeper and larger networks which
meant that the classifier would suffer greatly in test accuracy. And
second, the images were very diverse (beyond rotation, shear, and
zoom modifications, as seen in Fig. 2) which required a deeper net-
work for learning the intricate features. The following subsections
describe our methodology followed to design the ML models.
4.1.1 Classification based on raw HMI screenshots. We use various
DNNs using Convolutional layers (Conv), ReLU activation layers
(ReLU), Max-pooling layers (MP) and Fully Connected (FC) layers
to classify the raw HMI screenshots. To finalize our architecture,
we empirically evaluated various designs based on high accuracy
Figure 2: A subset of our constructed dataset. Each row de-
picts images from the same sector: Chemical sector, Energy
sector, and Water sector respectively. The images depict the
sharp differences between images belonging to the same sec-
tor (along the row) and similarities between images belong-
ing to different sectors (along the column).
threshold-based alarms. Still, experimental results in Section 4.3
clearly present the bounds of the dynamically developed attacks.
In summary, the attack scenario is as follows: An attacker reaches
and can execute code on a general purpose computer hosting an
HMI. Next, the code takes a screenshot of the HMI and passes it