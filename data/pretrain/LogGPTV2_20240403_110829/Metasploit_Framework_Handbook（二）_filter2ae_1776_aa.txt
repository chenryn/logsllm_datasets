# Metasploit Framework Handbook（二）

## 译文声明
本文为翻译文章，仅供参考。具体内容和含义以原文为准。

## 前言
`Metasploit`是一款功能强大的渗透测试工具，在渗透测试过程中提供全方位的服务。然而，并非所有人都能充分认识到其强大之处或了解其全部功能。有些人可能仅将其视为一个简单的虚拟机拓扑结构，用于攻击Windows主机并获取权限。实际上，`Metasploit`能够执行多种任务，包括情报搜集、目标识别、服务枚举、漏洞探测、漏洞利用、权限提升、权限维持、社会工程以及内网渗透等。

由于网络上关于`Metasploit`框架的文章大多只涉及某一特定功能点或漏洞的使用，例如如何使用Metasploit进行内网代理渗透、打开对方电脑摄像头、监视对方主机、利用永恒之蓝漏洞攻击Windows主机等，这导致了知识碎片化，给初学者带来了困扰和误导。

因此，我决定编写一份全面的`Metasploit`框架使用手册：`Metasploit Framework Handbook`。本手册将分为四个部分：
- 第一部分：Metasploit Framework Handbook (一)
  - 内容：Metasploit解读+实战操作（发展、框架、安装、配置、指令解读、情报搜集、渗透测试）
- 第二部分：Metasploit Framework Handbook (二)
  - 内容：Meterpreter解读+实战操作（指令解读、内网渗透-后渗透-1）
- 第三部分：Metasploit Framework Handbook (三)
  - 内容：Meterpreter解读+实战操作（内网渗透-后渗透-2）
- 第四部分：Metasploit Framework Handbook (四)
  - 内容：MSFvenom解读+实战操作（指令解读、后门木马）

继`Metasploit Framework Handbook(一)`之后，本文将重点介绍手册的第二部分：Meterpreter解读+实战操作（指令解读、内网渗透-后渗透-1）。

## Meterpreter
`Metasploit`中的`Meterpreter`模块在后渗透阶段具有强大的攻击力。

### 技术优势
- **平台通用性**
  `Metasploit`提供了适用于各种主流操作系统和平台的`Meterpreter`版本，包括Windows、Linux和BSD系统，并支持x86和x64架构。此外，`Meterpreter`还提供了基于Java和PHP的实现，以便应用于不同的环境。
  
- **纯内存工作模式**
  在执行漏洞攻击时，`Meterpreter`会直接加载到目标系统进程的内存空间中，而不是先上传到磁盘再调用`Loadlibrary`来启动。这种纯内存工作模式具有隐蔽性，难以被杀毒软件检测到，并且不会访问目标主机的磁盘，几乎不留下入侵痕迹。尽管现代内存分析技术可以事后捕获到`Meterpreter`的踪迹，但这种方法难度大且成功率低。

- **灵活且加密的通信协议**
  `Meterpreter`提供了灵活且加密的客户端-服务器通信协议，能够对网络传输进行加密，并支持功能扩展。其网络通信协议采用TLV数据封装格式。

- **易于扩展**
  `Meterpreter`的功能远超一般的ShellCode。用户还可以通过添加扩展或插件来实现特殊或定制化的功能。

### 命令解读 - Windows

#### 核心命令
| Command                  | Description                               |
|--------------------------|-------------------------------------------|
| ?                        | 显示帮助手册                              |
| background               | 将当前会话置于后台                       |
| bg                       | `background`命令的别名                   |
| bgkill                   | 杀死后台运行的脚本                       |
| bglist                   | 列出后台运行的脚本                       |
| bgrun                    | 在后台运行一个脚本                       |
| channel                  | 显示或控制活动通道信息                   |
| close                    | 关闭通道                                  |
| disable_unicode_encoding | 禁用Unicode字符串编码                    |
| enable_unicode_encoding  | 启用Unicode字符串编码                    |
| exit                     | 关闭并退出`Meterpreter`会话              |
| get_timeouts             | 查看当前会话的超时信息                   |
| guid                     | 查看会话GUID                             |
| help                     | 显示帮助手册                              |
| info                     | 展示Post模块信息                         |
| irb                      | 打开交互式Ruby Shell                      |
| load                     | 加载一个或多个`Meterpreter`扩展          |
| machine_id               | 获取与会话关联的机器的MSF ID             |
| migrate                  | 进程迁移（将`Meterpreter`会话移植到指定进程中）|
| pivot                    | 管理Pivot监听器                          |
| pry                      | 在当前会话中打开Pry调试器                |
| quit                     | 关闭并退出`Meterpreter`会话              |
| read                     | 从通道读取数据                           |
| resource                 | 运行存储在文件中的命令                   |
| run                      | 执行一个`Meterpreter`脚本或Post模块     |
| secure                   | （重新）协商会话上的TLV数据包加密        |
| sessions                 | 快速切换到另一个会话（`sessions -i ID`） |
| set_timeouts             | 设置当前会话的超时信息                   |
| sleep                    | 强制`Meterpreter`进入静默状态，然后重新建立会话|
| transport                | 更改当前传输机制                         |
| use                      | `load`的别名（已弃用）                   |
| uuid                     | 获取当前会话的UUID信息                   |
| write                    | 向通道写入数据                           |

#### 文件系统命令
| Command  | Description                                    |
|----------|------------------------------------------------|
| cat      | 读取并显示会话系统中某个文件的内容            |
| cd       | 改变当前目录                                   |
| checksum | 检索文件的校验和                               |
| cp       | 文件复制                                       |
| dir      | 列出当前目录下的文件 (`ls` 的别名)            |
| download | 从当前目录下载某个文件                         |
| edit     | 编辑文件                                       |
| getlwd   | 打印本地当前工作目录                           |
| getwd    | 打印工作目录                                   |
| lcd      | 改变本地工作目录                               |
| lls      | 列出本地目录下的文件                           |
| lpwd     | 打印本地当前工作目录                           |
| ls       | 列出目录下的所有文件                           |
| mkdir    | 创建文件夹                                     |
| mv       | 移动文件                                       |
| pwd      | 打印当前工作目录                               |
| rm       | 删除某个特定文件                               |
| rmdir    | 删除某个目录                                   |
| search   | 搜索文件                                       |
| show_mount | 列出所有挂载点/逻辑驱动器                    |
| upload   | 上传文件或目录                                 |

#### 网络命令
| Command  | Description                            |
|----------|----------------------------------------|
| arp      | 显示ARP缓存                            |
| getproxy | 查看当前代理配置                       |
| ifconfig | 查看网络接口信息                       |
| ipconfig | 查看网络接口信息                       |
| netstat  | 查看网络连接情况                       |
| portfwd  | 端口转发                               |
| resolve  | 在目标上解析一组主机名                 |
| route    | 查看和修改路由表                       |

#### 系统命令
| Command  | Description                                      |
|----------|--------------------------------------------------|
| clearev  | 清除Windows应用程序日志、系统日志和安全日志       |
| drop_token | 放弃任何活动的模拟令牌                           |
| execute  | 执行一个命令                                     |
| getenv   | 获取一个或多个环境变量                           |
| getpid   | 获取当前会话进程ID(pid)                          |
| getprivs | 尝试启用当前进程的所有可用特权                   |
| getsid   | 获取服务器运行用户的SID                          |
| getuid   | 查看权限                                         |
| kill     | 杀死进程                                         |
| localtime | 获取目标系统的当前日期和时间                     |
| pgrep    | 通过名称查询相关进程                             |
| pkill    | 通过进程名关闭进程                               |
| ps       | 查询列出当前运行的进程信息                       |
| reboot   | 重启远程计算机                                   |
| reg      | 修改远程计算机注册表                             |
| rev2self | 在远程机器上调用RevertToSelf()                   |
| shell    | 进入目标系统的交互式Shell终端                    |
| shutdown | 关闭远程计算机                                   |
| steal_token | 尝试从目标进程窃取模拟令牌                       |
| suspend  | 暂停或恢复进程列表                               |
| sysinfo  | 获取远程计算机系统的详细信息                     |

#### 用户接口命令
| Command  | Description                                |
|----------|--------------------------------------------|
| enumdesktops | 查看所有可用的桌面                          |
| getdesktop  | 获取当前`Meterpreter`关联的桌面              |
| idletime   | 返回远程用户空闲的时间（秒）                 |
| keyboard_send | 发送按键                                   |
| keyevent   | 发送按键事件                                 |
| keyscan_dump | 导出键盘记录数据                             |
| keyscan_start | 开始键盘记录                                 |
| keyscan_stop  | 停止键盘记录                                 |
| mouse      | 发送鼠标事件                                 |
| screenshare | 查看远程用户桌面信息                         |
| screenshot | 捕获目标屏幕快照信息（截屏）                 |
| setdesktop | 设置`Meterpreter`关联的桌面                  |
| uictl      | 开启或禁止键盘/鼠标（`uictl disable/enable keyboard/mouse/all`）|

#### 网络摄像头命令
| Command  | Description                              |
|----------|------------------------------------------|
| record_mic | 录制默认麦克风音频X秒                     |
| webcam_chat | 开启视频聊天                             |
| webcam_list | 查看摄像头                               |
| webcam_snap | 通过摄像头拍照                           |
| webcam_stream | 通过摄像头开启视频                       |

#### 音频输出命令
| Command  | Description                              |
|----------|------------------------------------------|
| play     | 从目标系统播放音频                       |

#### 提权命令
| Command  | Description                              |
|----------|------------------------------------------|
| getsystem | 尝试提权                                 |

#### 密码捕获命令
| Command  | Description                              |
|----------|------------------------------------------|
| hashdump  | 查看SAM数据库信息                         |

#### 时间戳命令
| Command  | Description                              |
|----------|------------------------------------------|
| timestomp | 操纵文件MACE属性                         |

### 命令解读 - Linux

#### 核心命令
| Command  | Description                              |
|----------|------------------------------------------|
| ?        | 显示帮助手册                             |
| background | 将当前会话置于后台                       |
| bg       | `background`命令的别名                   |
| bgkill   | 杀死后台运行的脚本                       |
| bglist   | 列出后台运行的脚本                       |
| bgrun    | 在后台运行一个脚本                       |
| channel  | 显示或控制活动通道信息                   |
| close    | 关闭通道                                  |
| disable_unicode_encoding | 禁用Unicode字符串编码                    |
| enable_unicode_encoding  | 启用Unicode字符串编码                    |
| exit     | 关闭并退出`Meterpreter`会话              |
| get_timeouts | 查看当前会话的超时信息                   |
| guid     | 查看会话GUID                             |
| help     | 显示帮助手册                              |
| info     | 展示Post模块信息                         |
| irb      | 打开交互式Ruby Shell                      |
| load     | 加载一个或多个`Meterpreter`扩展          |
| machine_id | 获取与会话关联的机器的MSF ID             |
| migrate  | 进程迁移（将`Meterpreter`会话移植到指定进程中）|
| pivot    | 管理Pivot监听器                          |
| pry      | 在当前会话中打开Pry调试器                |
| quit     | 关闭并退出`Meterpreter`会话              |
| read     | 从通道读取数据                           |
| resource | 运行存储在文件中的命令                   |
| run      | 执行一个`Meterpreter`脚本或Post模块     |
| secure   | （重新）协商会话上的TLV数据包加密        |
| sessions | 快速切换到另一个会话（`sessions -i ID`） |
| set_timeouts | 设置当前会话的超时信息                   |
| sleep    | 强制`Meterpreter`进入静默状态，然后重新建立会话|
| transport | 更改当前传输机制                         |
| use      | `load`的别名（已弃用）                   |
| uuid     | 获取当前会话的UUID信息                   |
| write    | 向通道写入数据                           |

以上是对`Meterpreter`命令的基本解读。后续章节将继续深入探讨更多高级功能和实战操作。