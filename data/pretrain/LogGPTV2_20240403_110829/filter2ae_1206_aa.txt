#
# 一、组件概述
## 1.关键词
企业级全文检索服务器、基于Lucene
## 2.一些名词
### **(1) 数据**
结构化数据，与非结构化数据
结构化数据： 用表、字段表示的数据 数据库适合结构化数据的精确查询
半结构化数据： xml 、html
非结构化数据： 文本、文档、图片、音频、视频等
### **(2)**** Document**
被索引的对象，索引、搜索的基本单元，一个Document由多个字段Field构成
Field
字段名name
字段值value
字段类型type FieldType(这个fieldtype也有很多属性主要两个是name 以及 class
用来存放该类型值的类名)，Field中包含分析器(Analyzer)、过滤器(Filter)
### **(3) 索引**
对列值创建排序存储，数据结构={列值、行地址} ，Luncene或者说Solr的索引的创建过程其实就是分词、存储到反向索引中
输入的是苍老师，想要得到标题或内容中包含“苍老师”的新闻列表
### **(4) 搜索引擎**
区别于关系数据库搜索引擎专门解决 **大量结构化、半结构化数据、非结构化文本类数据的实时检索** 问题。 这种类型的搜索实时搜索数据库做不了。
### **(5) 搜索引擎工作原理**
1、从数据源加载数据，分词、建立反向索引
2、搜索时，对搜索输入进行分词，查找反向索引
3、计算相关性，排序，输出
### **(5) zookeeper**
zk是分布式系统中的一项协调服务。solr将zk用于三个关键操作：
1、集中化配置存储和分发
2、检测和提醒集群的状态改变
3、确定分片代表
### **(7) Lucene**
一套可对大量 **结构化、半结构化数据、非结构化文本类数据进行实时搜索**
的专门软件。最早应用于信息检索领域，经谷歌、百度等公司推出网页搜索而为大众广知。后又被各大电商网站采用来做网站的商品搜索。现广泛应用于各行业、互联网应用。
核心构成： **数据源(存储的数据)、分词器(英文比较容易，中文两个常用的
IKAnalyzer、mmseg4j主谓宾等)、反向索引（倒排索引）、相关性计算模型(例如 出现次数这个算简单的，复杂点的
可能就会加上权重，搜索引擎会提供一种或者多种)**
### **(8) Solr中的Core**
运行在Solr服务器中的具体唯一命名的、可管理、可配置的索引，一台Solr可以托管一个或多个索引。solr的内核是运行在solr服务器中具有唯一命名的、可管理和可配置的索引。一台solr服务器可以托管一个或多个内核。
**内核的典型用途是区分不同模式(具有不同字段、不同的处理方式)的文档** 。
内核就是索引，为什么需要多个？因为不同的文档拥有不同的模式（字段构成、索引、存储方式），商品数据和新闻数据就是两类完全不同的数据，这就需要两个内核来索引、存储它们。
每个内核都有一个 内核实例存放目录、内核索引数据存放目录、内核配置文件(solrconfig.xml)、内核模式文件(schema.xml)
### **(9) Solr中的schema**
包含整个架构以及字段和字段类型。用来告诉solr，被索引的文档由哪些Field组成。让solr知道集合/内核包含哪些字段、字段的数据类型、字段该索引存储。
conf/managed-schema 或者 schema.xml
### **(10) solrconfig.xml**
此文件包含与请求处理和响应格式相关的定义和特定于核心的配置，以及索引，配置，管理内存和进行提交。内核配置文件，这个是影响Solr本身参数最多的配置文件。索引数据的存放位置，更新，删除，查询的一些规则配置
### **(11) collection 集合**
一个集合由一个或多个核心(分片)组成，SolrCloud引入了集合的概念，集合将索引扩展成不同的分片然后分配到多台服务器，分布式索引的每个分片都被托管在一个solr的内核中(一个内核对应一个分片呗)。提起SolrCloud，更应该从分片的角度，不应该谈及内核。
### **(12) Solr.xml**
它是$ SOLR_HOME目录中包含Solr Cloud相关信息的文件。 要加载核心，Solr会引用此文件，这有助于识别它们。solr.xml
文件定义了适用于全部或多个内核的全局配置选项
### **(13) core.properties**
代表一个核心，为每个核心定义特定的属性，例如其名称、核心所属的集合、模式的位置以及其他参数
### **(14) Solr配置集 configset**
用于实现多个不同内核之间的配置共享
### **(15) requestHandler(solrconfig.xml)**
请求处理程序，定义了solr接收到请求后该做什么操作。
Solr中处理外部数据都是通过http请求，对外提供http服务，每类服务在solr中都有对应的request
handler接收处理数据，solr中有定义了很多内置的请求处理程序，但是我们也可以自己定义，在conf/solrconfig.xml中配置
在 conf/solrconfig.xml中，requestHandler的配置就像我们在web.xml中配置servlet-mapping（或spring
mvc 中配置controller 的requestMap）一样：配置该集合/内核下某个请求地址的处理类
示例``
### (16) Solr中的 文档、字段、字段分析、模式、分析器、标记器、过滤器
参阅中文文档
[https://www.w3cschool.cn/solr_doc/solr_doc-2yce2g4s.html](https://www.w3cschool.cn/solr_doc/solr_doc-2yce2g4s.html?fileGuid=It0Qkg2AiecFMx62)
[https://www.w3cschool.cn/solr_doc/solr_doc-5ocy2gay.html](https://www.w3cschool.cn/solr_doc/solr_doc-5ocy2gay.html?fileGuid=It0Qkg2AiecFMx62)
## 3.几个重要配置文件的详解
### 1.Solr.xml
在独立模式下，solr.xml必须驻留在solr_home(server/solr)。在SolrCloud模式下，将从ZooKeeper加载solr.xml（如果它存在），回退到solr_home。
solr.xml 文件定义了适用于全部或多个内核的全局配置选项。
**``标签是根元素**
  * adminHandler 属性，solr默认使用org.apache.solr.handler.admin.CoreAdminHandler
  * collectionsHandler 自定义CollectingHandler的实现
  * infoHandler 自定义infoHandler实现
  * coreLoader 指定分配给此内核的线程数
  * coreRootDirectory 指定$SOLR_HOME
  * sharedLib 所有内核共享公共库目录 此目录任何jar文件都将被添加到Solr插件的搜索路径中
  * shareSchema 此属性为true的情况下，共享IndexSchema对象
  * configSetBaseDir 指定configSets目录 默认为$SOLR_HOME/configsets
**`` 定义了与SolrCloud相关的参数**
  * distribUpdateConnTimeout 设置集群的connTimeout
  * distribUpdateSoTimeout 设置集群的socketTime'out
  * host 设置访问主机名称
  * hostContext url上下文路径
  * hostPort 端口
  * zkClientTimeout 连接到ZookKeeper服务器的超时时间
**``` ````**
  * class 属性 用于记录的class类，相应的jar必须存在
  * enable 是否启用日志功能
**``分片相关**
**`` 报告相关**
### 2.core.properties
简单的key=value，可以这么理解，一个core.properties 就代表一个core，允许即时创建，而不用重启Solr,配置文件包含以下属性：
  * name core的名称
  * config core的配置文件名称 默认为solrconfig.xml
  * schema 核心架构文件名称 默认为schema.xml
  * dataDir core的数据目录 可以是据对路径 也可以是相对于instanceDir的路径
  * configSet configset可用于配置内核
  * properties 这个core的文件名称 可以是绝对路径也可以是相对路径
  * loadOnstartup true Solr启动时，会加载这个核心
  * ulogDir 日志的路径
  * collection 是SolrCloud的一部分  
### 3.Schema.xml
略
### 4.Solrconfig.xml
这个文件可以说，在功能上包含了一个core处理的全部配置信息
    *  指定Luncene版本
    *  core的data目录  存放当前core的idnex索引文件和tlog事务日志文件
    *   索引存储工厂 配置了一些存储时的参数 线程等
    *  编解码方式
    *  配置索引属性，主要与Luncene创建索引的一些参数，文档字段最大长度、生成索引时INdexWriter可使用最大线程数、Luncene是否允许文件整合、buffer大小、指定Lucene使用哪个LockFactory等
    *  更新处理器 更新增加Document时的update对应什么处理动作在这里配置，在这里也可以自定义更新处理器
    * 以及查询的相关配置
    *   请求转发器  自定义增加在这里配置
    *  请求解析器  配置solr的请求解析行为
    *  请求处理器  solr通过requestHandler提供webservice功能，通过http请求对索引进行访问 可以自定义增加，在这里配置
## 4.概述
建立在Lucene-core之上，Luncene是一个全文检索的工具包，它不是一个完整的引擎，Solr将它打包成了一个完整的引擎服务，并对外开放基于http请求的服务以及各种API，还有一个后台管理界面。所以，它既然是基于Luncene的，所以他的核心功能逻辑就应该和Luncene一样，给它一个Docunment，Solr进行分词以及查找反向索引，然后排序输出。
**Solr
的基本前提很简单。您给它很多的信息，然后你可以问它的问题，找到你想要的信息。您在所有信息中提供的内容称为索引或更新。当你问一个问题时，它被称为查询。**
在一些大型门户网站、电子商务网站等都需要站内搜索功能，使用传统的数据库查询方式实现搜索无法满足一些高级的搜索需求，比如：搜索速度要快、搜索结果按相关度排序、搜索内容格式不固定等，这里就需要使用全文检索技术实现搜索功能。
Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。Lucene
是一个全文检索引擎工具包，它是一个 jar 包，不能独立运行，对外提供服务。Apache Solr 中存储的资源是以 Document
为对象进行存储的。NoSQL特性和丰富的文档处理（例如Word和PDF文件）。每个文档由一系列的 Field 构成，每个 Field
表示资源的一个属性。Solr 中的每个 Document 需要有能唯一标识其自身的属性，默认情况下这个属性的名字是 id，在 Schema
配置文件中使用：id进行描述。
Solr是一个独立的企业级搜索应用服务器，目前很多企业运用solr开源服务。原理大致是文档通过Http利用XML加到一个搜索集合中。
Solr可以独立运行，打包成一个war。运行在Jetty、Tomcat等这些Servlet容器中，Solr索引的实现方法很简单，用 POST
方法向Solr服务器 发送一个描述
Field 及其内容的XML文档，Solr根据xml文档添加、删除、更新索引。Solr搜索只需要发送HTTP GET 请求，然后对 Solr
返回Xml、Json等格式的查询结果进行解析，组织页面布局。Solr不提供构建UI的功能，Solr提供了一个管理界面，通过管理界面可以查询Solr的配置和运行情况。
中文文档：[https://www.w3cschool.cn/solr_doc/solr_doc-mz9a2frh.html](https://www.w3cschool.cn/solr_doc/solr_doc-mz9a2frh.html?fileGuid=It0Qkg2AiecFMx62)
## 3.使用范围及行业分布
  * 业界两个最流行的开源搜索引擎，Solr和ElasticSearch。Solr是Apache下的一个顶级开源项目。不少互联网巨头，如Netflix，eBay，Instagram和Amazon（CloudSearch）均使用Solr。
  * fofa搜索公网资产 一万 app="APACHE-Solr"
  * GitHub Star数量 3.8k  
## 4.重点产品特性
默认全局未授权，多部署于内网，内置zk服务
不可自动升级，需要手动升级修复漏洞
# 二、环境搭建、动态调试
Solr 所有版本下载地址 
## 1.sorl-4.2.0 环境搭建
### 1.1 环境搭建
下载solr-4.2.0.zip文件，解压，C:\Solr\solr-4.2.0\example\start.jar 启动
java -Xdebug -Xrunjdwp:transport=dt_socket,address=10010,server=y,suspend=y
-jar start.jar
### 1.2 动态调试
新建idea项目
讲solr目录下所有jar包导入 lib目录下 add as library
配置远程调试
断点成功停住