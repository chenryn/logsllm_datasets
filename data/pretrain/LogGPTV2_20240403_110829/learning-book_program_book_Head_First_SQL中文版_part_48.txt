需要让某些人只可以SELECT数据，但无权INSERT、
UPDATE或DELETE数据。
Greg有办法完全掌控数据库里的大小行动
吗？他真的能控制谁对哪一个表进行了哪些
操作吗？
欲知详情，请待下章分解。
当前位置
489
---
## Page 522
复习SQL
你的SQL工具包
章
第11章现在已经收进你的工具包了，
VIEWS
第11
而且你的工具包也快装满了。在这
视图。使用视图把查询结果当
一章里，我们看到了如何为数据创建视
成表。很适合简化复杂查询。
图，也看到了事务的执行方式。如果需
要本书工具的完整列表，请参考附录3。
UPDATABLE VIEWS
可更新表。有些视图能用于改
TRANSACTIONS
变它底层的实际表。这类视图
必须包含底层表的所有NOT
事务。一组必须同进退的查询。
NULL列。
如果这些查询无法不受干扰地
全都执行究毕，则不承认其中
NON-UPDATABLE VIEWS
的部分查询造成的改变。
无法对底层表执行INSERT或
STARTTRANSACTION
UPDATE提作的视图。
这条语句告诉RDBMS开始事
务。在COMMIT执行前收变都不
CHECK CONSTRAINTS
具永久性。除非出现COMMIT或
检查约束。可以只让特定值插入
ROLLBACK，否则都处于事务过
或更新至表里。
程中。ROLLBACK可把数据库带
STARTTRANSACTION前的状
态。
CHECK OPTION
创建可更新视图时，使用这个
关键字强迫所有插入与更新的
数据都电满足视图里的WHERE条
件
490
第11章
---
## Page 523
约束、视图与事务
磨笔上阵
解答
如果Frank用新的job_raises视图运行第470页上的查询，他该如何根
第470页上的习题
据姓氏字母排序？
在创建视图时，或在使用视图的SELECT语句里加上ORDERBY（ast_mame。
当前位置
491
---
## Page 524
磨笔上阵解答
磨笋
填入在事务之后的piggy_bank表的
piggy
_bank
内容。右表是它现在的样子：
id
coin
coin_year
第492页上的习题
1
Q
1950
2
P
1972
3
N
2005
4
Q
1999
START TRANSACTION;
P!
coin
coin_year
UPDATE piggy_bank set coin ='Q'where coin ='p
1
Q
1950
2
P
(972
AND coin _year  1950;
2
P
(972
回滚，不会改变。
3
N
2005
ROLLBACK;
4
Q
(999
START TRANSACTION;
id
coin
coin_year
UPDATE piggy _ bank set coin = 'D' where coin
=Q
1
Q
1950
2
1972
AND coin _year > 1980;
3
N
2005
COMMIT;
这一行受到影响。
4
D
6661
START TRANSACTION;
id
coin
coin_year
UPDATE piggy _bank set coin = 'p' where coin
Q
7950
=
2
P
1972
AND coin_year>1970;
3
2005
这一行受到影响。
4
Q
999
COMMIT;
492
第11章
---
## Page 525
12
安全性
保护你的资产
这一招叫做左外联
接。
帅哥，现矩一点。没有
允许，不准乱案。
为了创建数据库，大家已经花了许多时间与精力。如果数据库受到了什
么伤害，你一定会崩清吧！而且虽然让其他人访问你的数据有其必要性，但真的
会忍不住担心有人插入或更新数据时的操作不正确，甚至发生更糟的情况：删错
了数据。我们即将要学到如何把数据库和其中的对象变得更安全，以及如何全面
控制谁对数据进行什么操作。
进入新章节
493
---
## Page 526
数据录入灾难
用户的问题
小丑的行踪已经成为非常严重的事件，Dataville市议会必
须雇用一个专职小组来追踪小丑并新增数据至c1own_
"Ceorse"
：卧底
tracking表中。
小丑。
很不幸地，这个小组被伪装成正常人的小丑“George
（假名）渗透了他给数据库制造了一些问题，包括丢失数
INVEST
据、乱改数据以及因为故意拼错字而造成的重复记录。以
下列出部分小丑追踪表中的问题：
Snuggles、Snugles、Snuggels都在clown_info表中各有一条记录。一
看就知道这些记录都属于相同小丑，因为性别、外观及行为描述等都
相同（只有姓名拼写的差别）。info_location表会使用clown_info表中
Snuggles、Snugles、Snuggels的ID。
activities表的内容也拼得乱七八糟。Snuggles是juggeler，Snugles是jugler，
Snuggels则是jugular。
info_activities
activities
activity_id O
activity_id
activity
clown_info
id ol
name
gender
info_location
location
description
ider
location_id O
boss_id
location_id
location
when
494
第12章
---
## Page 527
安全性
避免小丑追踪数据库的错误
George在其他人注意到他做的“好事”前就辞职了，只留下其他人收拾残局。
从现在开始，凡是刚雇用的新员工都有SELECT的权力，可从数据库中选择数据
以便识别小丑。但新员工不可以INSERT或UPDATE数据。说实话，在完成背景
调查前，新员工只能选取数据，不能对数据库做其他事。
我们也需要小心一点，要求员工DELETE数据以清理George的破坏时，他们也可
能会一起删除了正常有用的数据。
现在是保护小丑追踪数据库的时候了，在其他像George一样的小丑完全销毁数
据库前，我们应该未雨绸缪。
磨笔上阵
保护小丑追踪数据库免遭破坏。在下面写出新雇员应该或不应
该做的事。尽可能注明相关的表名。
新雇员应该被允许的行为：
新雇员不该被允许的行为：
例：从activities中送取数据
例：对clown_info执行DROP TABLE
当前位置
495
---
## Page 528
磨笔上阵解答
磨笔上阵
解答
保护小丑追踪数据库免遭破坏。在下面写出新雇员应该或不应
该做的事。尽可能注明相关的表名。
新雇员应该被允许的行为：
新雇员不该被允许的行为：
例：从activities中选取数据
例：对clown_info执行DROP TABLE
SELECT摄作，可用于clown_info、
DRAP TABLE摄作，不可用于clown_inso、info_activities、
inbo_activities、activities、info_location、
activities.indo_location.location
location
NSERT提作，不可用于clown_info、ino_activities、activities、
info_location,location
UPOATE摄作，不可用于clown_info，info_activities、activities、
into_location,location
ALTER摄作，不可用clown_info、inbo_activities、activities、
info_location.location
DELETE摄作.不可用clown_indo、inso_activities，activities
inso_location,location
真是个好消息，我们可以阻止George与
他的小丑同伙破坏我们的数据了！
SQL充许我们控制雇员对小丑追踪数据库可做与不
可做的事项。但在这么做前，需要先给每个数据库
用户一个用户账号（useraccount）。
496
第12章
---
## Page 529
安全性
保护用户账号：root
到目前为止，我们的数据库只有一位用户，而且一直都没有密码。只要
有权使用数据库的终端或图形界面的人都能全权控制数据库。
默认情况下，第一位用户一一根用户（root）具有所有数据库操控能力。
这一点很重要，因为根用户必须可为其他用户创建账号。我们并不想
限制根用户的权限，但他的账号应该有密码。MySQL设定根用户密码
的方式很简单：
SETPASSWORD FOR'root'@'localhost'=PASSWORD('b4dclOwnZ');
个
根用户的名称就
“localhost”代表安装与运
是“r0ot”。
行SQL软件的机器。
这部分是我们为根用户
选择的密码。
其他RDBMS使用的方式则各有不同，例如Oracle采用：
alter user root identified by new-password;
如果使用图形界面操作数据库，或许有更为简单的对话框形式来改变
密码。如何设定密码并非重点，重点在于一定要设置密码。
请参考你使用的RDBMS的说明文档，了解保护根用户的必要信息。
没有套问题
/没有蠢问题
得更详细一点呢？
户端的呢？
装了SQLRDBMS的同一台计算机。1ocalhost是默认道计算机所在地，可通过IP地址或localhost以外的主机名
的参数值，可选择是否将其加入语法中。
称指定。举例来说，如果你的SQL软件安装在O'Reilly的
网络中的一台叫kumquats的机器上，则主机名称可能会
是PI:EMAIL。不过，它还不是货真
价实的SQL服务器、所以无法运作。
当前位置
497
---
## Page 530
创建新用户
添加新用户
SQL如何存储用户的信息？
对于这个问题，各位心中或许都有答案了。
当然是存储在表中！SQL也以数据库存储它本身的数据，包
括用户id、用户名称与密码以及各个用户对特定数据库的操
作权限。
为新员工Elsie增设的用
户名称。
SQL并未指定如何管
CREATE USER elsie
理用户。
IDENTIFIEDBY'cl3v3rp4s5w0rd';
注意！
不同的RDBMS创建用户
这是密码。
的方式也不一样。请参
考你的数据库软件的说明文档，找出
正确的创建用户的方式。
创建账号的同时，可以直接把
Elsie的操作范围限定在特定表
T
可以，但有时在新建账号时，我们并不
知道需要授予何种权限。
不过我们还是要明确决定用户可以访问的目标。
我们每次做一件事。先创建用户，然后再授予用
户需要的特殊权限。本章结束前再看这两件事如
何合二为一。知道如何单独授予权限的好处，就
是日后可另外因应数据库的改变而修改用户权限。
498
第12章
---
## Page 531
安全性
判断用户的确切需求
Elsie的账号已经创建完毕，但她目前没有任何权限。我们必须利
用GRANT语句把clown_info表的 SELECT操作权限授予Elsie。
新用户不能对数据库中的任何对象执行任何SQL命令，我们刚刚创建的新
用户没有任何权限。GRANT语句可以为用户授予操作数据库的特权。以下
是GRANT的作用：
woodland_cottage
数据库名称
talking
animals
LtYPe
blue bird
bodger
A
3
deer
N
squirrel
chores
Y
root
bashful
doc
dopey
Pauoup
time
1
woshing up
9.30pm
2
sewing
10:00 om
kitchen
5:00 pm
stoop
kitchen
making beds
7:35 om
bedr
grumpy
happy
sleepy
sneezy
仅允许部分用户修改特定表。
只有总管root才能为杂务表加人新的待办事项，也只有root才能
执行INSERT、UPDATE、DELETE 等任务。不过，hapPy是
表talking_animals的小总管，可用ALTER修改这张表的结构，
使用GRANT语句
也能执行其他操作。
可以控制用户对表
特定表的数据仅允许部分用户访问。
和列可执行的操作。
除了grumpy，每个人都可对talking_animals表做SELEcT操
作。反正grumpy一点也不喜欢动物。
就算在表中，也可能需要权限：部分用户可看到特定
列，但其他人不行。
除了dopey，每个人都能看到chores表的说明列（说明只会
让dopey越看越糊涂）。
当前位置
499
---
## Page 532
授予权限
简单的GRANT语句
目前，Elsie没有做任何事的权限，虽然她能用账号与密码登
录SQL软件，但也仅止于此。Elsie 需要选取clown_info表中
内容的权力，所以我们给予她权限（permission），由GRANT..
TO语句完成：
某个用户被授予SELECT
权限..
GRANTSELECTON
该项权限使用于
clown_info
一本处指定的表。
TO elsie;
获得权限的用户名称
是elsie。
Elsie 也需要对于其他小丑追踪表的SELECT权限，才能在她
的SELECT语句中使用联接与子查询。每次授予表的权限都需
另写一段GRANT语句：
GRANT SELECT ON activities TO elsie;
GRANTSELECTONlocationTOelsie;
GRANT SELECT ON info_activities TO elsie;
GRANTSELECTONinfo_locationTO elsie;
500
第12章
---
## Page 533
安全性
现在，Elsie的行为已经在我们的掌控下。接下来想想GRANT语句对于第499页上
的woodland_cottage数据库会有什么影响。
程序代码
程序代码有何作用？
1
GRANT INSERT ON magic_animals
TO doc;
2
GRANT DELETE ON chores
TO happy, sleepy;
3
GRANT DELETE ON chores
TO happy, sleepy
WITH GRANT OPTION;
提示：这是
GRANT SELECT(chore_name) ON
列名。
chores To dopey;
5.
GRANT SELECT,INSERT ON
talking_animals
TO sneezy:
6
GRANT ALL ON talking_animals
TO bashful;
现在试着写出符合要求的GRANT语句。
7.
授予DocSELECT表chores内容的权限。
授子SleepyDELETE表talking_animals
8
内容的权限，同时也允许Sleepy把DELETE
表talking_animals内容的权限GRANT其他