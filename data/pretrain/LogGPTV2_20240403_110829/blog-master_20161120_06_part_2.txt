sar [options] [  [  ]]
```
主要用其中的-n选项监控网络子系统相关的数据。
```
-n { keyword [,...] | ALL }
```
keyword为DEV可以报告网络的流量相关信息，EDEV可以报告错误包的相关信息。
```
$ sar -n DEV 1
Linux 3.2.0-23-generic (ubuntu)   05/30/2012  _x86_64_  (4 CPU)
04:20:34 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s
04:20:35 PM        lo      2.00      2.00      4.73      4.73      0.00      0.00      0.00
04:20:35 PM      eth0      9.00      3.00      5.33      0.25      0.00      0.00      0.00
04:20:35 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s
04:20:36 PM        lo      2.00      2.00      4.63      4.63      0.00      0.00      0.00
04:20:36 PM      eth0      9.00      3.00      5.55      0.22      0.00      0.00      0.00
$ sar -n EDEV 1
Linux 3.2.0-23-generic (ubuntu)   05/30/2012  _x86_64_  (4 CPU)
04:23:48 PM     IFACE   rxerr/s   txerr/s    coll/s  rxdrop/s  txdrop/s  txcarr/s  rxfram/s  rxfifo/s  txfifo/s
04:23:49 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
04:23:49 PM      eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
04:23:49 PM     IFACE   rxerr/s   txerr/s    coll/s  rxdrop/s  txdrop/s  txcarr/s  rxfram/s  rxfifo/s  txfifo/s
04:23:50 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
04:23:50 PM      eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
```
## 调优设置
主要对于网卡中断负载以及tcp协议栈进行调优。
### 最大句柄数
linux限制了每个进程能开的最大句柄数，默认不进行修改的话为1024。可以通过ulimit进行参看以及设置。
```
$ ulimit -a
core file size          (blocks, -c) unlimited
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 30006
max locked memory       (kbytes, -l) 64
max memory size         (kbytes, -m) unlimited
open files                      (-n) 1024
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 30006
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited  
$ ulimit -n
1024
$ ulimit -n 32768
```
可以通过参看/proc/$pid/limits查看当前进程的限制::
```
$ cat /proc/11020/limits
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            8388608              unlimited            bytes     
Max core file size        unlimited            unlimited            bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             30006                30006                processes 
Max open files            1024                 4096                 files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       30006                30006                signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us
```
### 软中断分布不均
对于网络程序，容易导致网络中断分布不均导致cpu某个核被压爆，通过mpstat可以进行监控。
对于内核版本为2.6.35的系统，默认已经安装RPS以及RFS补丁，可以参考如下文档进行设置。
http://code.google.com/p/kernel/wiki/NetScalingGuide
对于内核版本为2.6.35以下的系统，如果是多队列的网卡可以进行如下设置。
参看中断号
```
$ cat /proc/interrupts 
         CPU0       CPU1       CPU2       CPU3       
0:       1652          0          0          0   IO-APIC-edge      timer
1:     870400          0          0          0   IO-APIC-edge      i8042
8:          1          0          0          0   IO-APIC-edge      rtc0
9:        194          0          0          0   IO-APIC-fasteoi   acpi
12:    4429616          0          0          0   IO-APIC-edge      i8042
16:     134965          0          0          0   IO-APIC-fasteoi   ehci_hcd:usb1, mmc0
23:    1546310          0     292374          0   IO-APIC-fasteoi   ehci_hcd:usb2
40:     236364          0          0          0   PCI-MSI-edge      ahci
41:         17          0          0          0   PCI-MSI-edge      mei
42:        142          0          0          0   PCI-MSI-edge      snd_hda_intel
43:   19547644          0          0          0   PCI-MSI-edge      i915@pci:0000:00:02.0
44:    1638700          0          0          0   PCI-MSI-edge      eth0-0
45:    1779727          0          0          0   PCI-MSI-edge      eth0-1
46:     725208          0          0          0   PCI-MSI-edge      eth0-2
47:     894102          0          0      50434   PCI-MSI-edge      eth0-3
48:     493319     106065          0          0   PCI-MSI-edge      eth0-4
```
如上所示，可以看到网络接口eth0分配了44-48的5个中断号。
设置中断亲和,将队列绑定到不同的CPU上。
计算中断亲和可以参考 http://www.vpsee.com/2010/07/smp-irq-affinity/
```
$ echo 2 > /proc/irq/44/smp_affinity
$ echo 4 > /proc/irq/45/smp_affinity
...
```
设置完后通过mpstat监控是否分布均匀了。
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")