!
!
Attacks from Within: 
Windows Spreads Mirai to Enterprise IoT - Draft 
Steinthor Bjarnason 
Arbor Networks, ASERT 
PI:EMAIL  
Jason Jones 
Arbor Networks, ASERT 
PI:EMAIL
Abstract 
When the Mirai IoT Bot surfaced in September 
2016, it received a lot of publicity, not only because 
of the large-scale attacks it launched against highly 
visible targets, but also due to the large scale 
compromise of IoT devices.  This allowed the 
attackers to subsume 100,000’s of vulnerable, 
poorly secured IoT devices into DDoS bots, gaining 
access to resources that could launch powerful 
DDoS attacks.     
However, as the original Mirai bot code scanned 
public Internet addresses to find new devices to 
infect, in most cases it was unable to detect and 
compromise IoT devices provisioned behind 
firewalls or NAT devices.  As most firewalls stop 
these kind of scanning attacks, the (potential 
millions of) IoT devices behind firewalls were safe 
against detection and compromise.  Or so most 
people thought… 
1 Enter the Mirai Windows Seeder 
!
In early February of 2017, a multi-stage Windows 
Trojan containing code to scan for vulnerable IoT 
devices and inject them with the Mirai bot code was 
detected in the wild.   
This weaponization of a Windows Trojan to deliver 
IoT bot code reveals an evolution in the threat 
landscape that most organizations are completely 
unprepared to deal with: DDoS attacks from within. 
Windows machines infected by the Seeder will now 
actively scan for IoT devices whenever they 
establish a network connection.  For example, if a 
laptop gets compromised by the Windows Mirai 
Seeder on a public wireless network, it will start 
scanning for vulnerable IoT devices as soon as it 
makes a network connection. This includes 
connecting to internal corporate networks via VPN, 
connecting to Wireless networks, or by using a 
physical network connection. 
This is somewhat related to the old paradigm of 
attacking medieval castles.  The castle walls 
(analogy: modern firewalls) were usually very 
effective at keeping the enemy outside the walls 
and stopping common attacks.  However, they were 
useless if you could convince someone on the 
inside into becoming a traitor or by planting a spy 
inside the walls. 
If there were no defenses inside the castle, the 
traitor/spy could now open the castle gates (disable 
the firewall), attack critical resources from the 
inside or simply burn down the entire castle.  In 
medieval times, treachery was one of the most 
common cause of castle defenses being breached. 
Any IoT device which gets compromised (scanners, 
printers, vending machines, light bulbs) will now be 
under the control of the threat actor, allowing him 
to launch DDoS attacks from inside the Enterprise 
against external and internal targets. 
2 The Internals of a Traitor: The 
Mirai Windows Seeder 
!
The Windows Mirai Seeder appears to be a 
refurbished version of a Windows Trojan which 
was discovered in the wild in early 2016.  This 
Trojan was designed to attack CPE routers by brute 
forcing administrative passwords and then 
modifying DNS settings such that any devices on 
the inside would receive DNS replies from DNS 
servers under the attackers control. 
Both the new Seeder and the older Trojan use brute 
force login attacks against Microsoft SQL servers, 
My SQL server and RDP with the goal of gaining 
administrative privileges on the target computer.  It 
then proceeds to inject the malicious binary into the 
target computer, gaining full administrative control 
of the computer and launching the scanning 
process. 
Post compromise, the Seeder will connect to its 
hardcoded Command & Control server (C&C) and 
download various files.  This includes the Mirai bot 
code, scanning parameters, and information on the 
Mirai C&C servers.   
The scanning process of the Windows Mirai Seeder 
has been modified from the original Trojan 
scanning process such that it now uses the same 
!
!
scanning algorithm that the Mirai bot code uses.  
The Seeder will scan the IP ranges which were 
downloaded from the C&C and will attempt to 
detect vulnerable IoT devices on TCP ports 22 
(SSH), 23 (Telnet), 5555 and 7547 (TR-069 SOAP 
management).  If a vulnerable device is detected, it 
will try to brute force the Telnet and SSH 
usernames and passwords using a dictionary 
downloaded from the C&C.  If the brute force login 
is successful, the Seeder will proceed to upload the 
Mirai bot code to the device, turning it into a Mirai 
bot which will then act in the same way as 
traditional Mirai bots1. 
3 The Nefarious Traitor – Turning 
Innocent IoT Devices into Zombies 
!
Almost all networks, from the small SoHo to the 
largest Enterprise have a (large) number of IoT 
devices deployed on their internal networks.  This 
can be anything from the smart TV in your living 
room to intelligent network enabled thermostats in 
a large Enterprise.  These devices are, in most 
cases, protected by network firewalls making them 
unreachable by scans from malicious devices on the 
open Internet. 
The Mirai Windows Seeder is a game changer 
because compromised Windows computers can 
now scan for vulnerable IoT devices whenever they 
connect to the internal network via VPN, Wireless 
or physical connections. 
Unless proper care is taken to segment the internal 
network, this will make any device with an IP stack 
a potential target for compromise.  Currently the 
Mirai bot infects devices like Web cameras and 
DVR recorders but it can easily be modified to 
attack other devices like printers, scanners, HVAC 
controllers and numerous other devices.  Any 
device subsumed will start scanning for other 
vulnerable IoT devices and will proceed to infect 
those if detected. 
There have already been reports of infected soda 
vending machines and light bulbs being used to 
launch DDoS attacks, confirming that the attackers 
are constantly finding new vulnerable devices to 
infect. 
Coming back to the castle scenario, a single traitor 
can now rapidly subsume the innocent population 
of the castle into zombies, commanding them to 
attack the castle defenses or other internal or 
external assets. 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1!https://www.arbornetworks.com/blog/asert/mirai-
iot-botnet-description-ddos-attack-mitigation/. !
4 The DDoS Extortion Attack 
!
A clever attacker could use the multi-stage Trojan 
to get inside the network, subsuming vulnerable IoT 
devices and computers on the internal network into 
his botnet and then scan the internal network to 
identify vulnerable network devices and critical 
services. 
The attacker could then use this information to 
direct the bots on the inside to launch a devastating 
short-lived attack against the network itself and 
against critical services from the inside of the 
network, potentially disrupting the entire network.  
This would provide a proof-of-concept attack which 
proves to the victim that the attacker is now in 
control and continued availability of the service is 
based on the victim paying the attacker an extortion 
fee.    
If the network hasn’t been designed to withstand 
these kind of internal attacks, it will be a very time 
consuming and complex task to redesign and secure 
the network.  Basically, the entire network security 
posture would have to be redone from scratch, 
beginning by shutting down all communication on 
all links, including any Internet connections. 
If a network which hasn’t been designed to 
withstand these kinds of attacks comes under 
attack, it will be very complex and time consuming 
to resume normal operations.  Re-architecting the 
network is not something you want to do while 
under attack. 
5 The Impact of Infected IoT Devices 
on Your Network 
!
If a device infected by the Mirai Windows Seeder is 
active on an internal network, the following will be 
observed: 
• 
There will be high volumes of scanning 
activity on internal networks as the Seeder 
searches for vulnerable Windows and IoT 
devices. As more devices get infected, the 
scanning activity will increase, potentially 
causing serious issues and outages with 
network devices like firewalls, switches and 
other stateful devices.  These kinds of outages 
have repeatedly happened in the wild, both 
during the NIMDA, Code Red and Slammer 
outbreaks in 2001 and also recently during 
large scale Mirai infections at large European 
Internet Service Providers. 
• 
Infected devices will contact their C&C server 
and will be subsequently used to launch DDoS 
!
!
attacks.  These attacks will result in high 
volumes of DDoS attack traffic which can 
potentially fill Internet and WAN links, 
resulting in loss of network connectivity.  In 
addition, network based services like IP based 
voice services will be impacted, potentially 
resulting in IP phone service outages. 
• 
Stateful devices like Firewalls and load 
balancers will also be at risk as they use state 
tracking to control traffic flows.  These state 
tables will rapidly be exhausted due to the 
sheer traffic volume generated by the DDoS 
attacks, resulting in these devices no longer 
being able to pass network traffic.  Firewalls 
and load-balancers are also often deployed in 
series and in front of each other.  If one goes 
down, all network traffic will stop. 
• 
When a device gets compromised, it will be 
under full control of the threat actor.  It can 
now be used to perform reconnaissance on 
internal networks, launch DDoS attacks against 
internal targets, attack database servers and do 
whatever nefarious activity the threat actor is 
interested in performing. 
This has the potential to turn your network into a 
virtual battleground where your (previously 
innocent) IoT devices actively attack external and 
internal targets, consuming valuable network 
resources including outgoing network bandwidth 
and capacity.  Additionally, collateral damage in 
the form of network devices failing due to the sheer 
scanning and attack volume can occur. 
6 Why Most Network Architectures 
Fail at Stopping this kind of Threat 
!
Most network security architectures are designed 
for defending against external threats, it is very 
uncommon to see network security designs that 
treat both insiders and outsiders as potential threats. 
This allows a well-equipped spy to enter the 
network using multi-stage Trojans which, after 
infecting the victim’s computers, launch a second 
stage attack when the infected computers are 
connected to the often-unsecured internal network. 
7 Network Impact of Bot Scanning 
!
The Windows Trojan, has two main purposes.  It 
scans for vulnerable Windows computers to 
propagate a copy of itself and it will also scan for 
vulnerable IoT devices to convert into bots.  In 
addition, infected IoT devices will also launch their 
own scanning process to find additional IoT devices 
to attack. 
Potentially the attacker could instruct the Trojan to 
scan for specific services or subnets, mapping out 
the internal network to find critical services.  This 
kind of scanning hasn’t been seen in the wild yet, 
but several other Trojans already have this 
capability. 
All this scanning will result in: 
• 
Large volumes of ARP (IPv4) / Neighbor 
discovery (IPv6) requests 
• 
A flood of small scanning packets on network 
segments with infected devices. 
Whenever a Layer 2 network switch receives an 
ARP packet for a specific IP, it will broadcast it out 
on all ports associated with the same network 
segment (physical/VLAN) as the one which the 
packet was received on.  If there is a device with 
that IP address on the network segment, it will reply 
to the originating device, thereby providing it with 
its L2 MAC address.  If there are multiple devices 
all scanning at the same time, the network switch 
might get overloaded by the flood of ARP packets, 
prohibiting it from performing its normal duties.  
Basically, it stops forwarding packets and the users 
won’t be able to reach their services.  This 
happened late 2016 at a large Internet Services 
Provider during a large scale Mirai infection. 
In addition, this high scanning activity can also 
impact other devices on the same network segment, 
also resulting in high CPU loads and loss of 
functionality. 
8 Network Impact of Internally 
Launched DDoS Attacks 
!
When vulnerable IoT devices have been subsumed 
into the attacker’s botnet, they will connect to their 
Command and Control (C&C) server and await 
instructions.   
The botmaster can now instruct the bots to launch 
various types DDoS attacks.  For example, the 
Miari bot is capable of launching the following 
attacks: 
• 
UDP/ICMP/TCP packet flooding 
• 
Reflection attacks using UDP packets with 
spoofed source IP addresses 
• 
Application level attacks (HTTP/SIP attacks).  
• 
Pseudo random DNS label prefix attacks 
against DNS servers. 