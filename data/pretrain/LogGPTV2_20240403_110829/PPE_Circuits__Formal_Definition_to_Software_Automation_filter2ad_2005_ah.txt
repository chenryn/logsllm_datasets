GateType′(д) =
GateType(д)
NOT
A(д)
out
and B′ is the same as B.
A(д) =
if д ∈ Gates
if д = out′
B CORRECTNESS OF RULE 1
In this section, we prove the correctness of Rule 1 (Lemma 4.1). This
proof is adapted from the proof of Rule 1 in [45].
Proof. We observe that every PPE challenge for Π is also a
challenge for Π′, as they all share the same group structure, the
number of elements of m, and the group indicator vector α. Consider
any testing circuit C′ for Π′. We now argue by contradiction that
if C ∧ C′ is not a testing circuit for Π, then C′ cannot be a testing
circuit for Π′. Since C ∧ C′ is not a testing set for Π, then either:
• Case 1: There exists a YES challenge F for Π such that C ∧C′
is not satisfied, or
• Case 2: There exists a NO challenge F for Π such that C ∧ C′
is satisfied.
We now analyze each of these cases.
In Case 1, we know that C ∧ C′ is not satisfied by the challenge
F. We take this in two subcases. First, suppose that F satisfies PPE
C but not the circuit C′. This means that F is also a YES challenge
for Π′ (it can use the same settings for the variables), but for which
C′ is not satisfied. This contradicts the starting assumption that C′
was a testing circuit for Π′. Second, suppose that F does not satisfy
the PPE C. By definition of being a YES challenge, we know there
fi(u)
exists an assignment to the variables u such that Fi = д
for all i.
αi
fi(u)
PPE C tests that Fk is equal to д
, thus this equation being false
αi
contradicts the fact the F was a YES challenge.
In Case 2, since F is a NO challenge for Π where C∧C′ is satisfied,
then F is also a NO challenge for Π′ where C′ is satisfied. We argue
this as follows. By Definition 3.2 of a NO challenge for Π, there
exists an assignment to u = (u1, . . . , un) ∈ Zn
p such that for all i ∈
fk(u)
. To convert this to a NO challenge for Π′, we
Trusted, Fi = д
αk
fk(u)
also need to show that Fk = д
for this same assignment u. This
αk
follows from the fact that PPE C is satisfied by this challenge and
that C explicitly tests that Fk is computed this way, possibly with
j=1 aj · sT [j]. Now
since F is NO challenge for Π′, it remains to see how it performs
respect to an equivalent polynomial for fk ≡|sT |
Session 2B: Applied Cryptography CCS '20, November 9–13, 2020, Virtual Event, USA404fℓ(v)
for all ℓ ∈ [m]. We know that {д
αℓ
fℓ(v)
)}ℓ sat-
such that Fℓ = д
αℓ
isfies the circuit C for any variable assignment v. Therefore, the
challenge F also satisfies the circuit C. We also observe that F is a
YES challenge for Π′. This is because Π and Π′ have the same set of
polynomials { fj}j∈[m] and only differ in the Trusted set. As a result,
F satisfies the circuit (NOT IsIdentity) ∧ C ∧ C′, thus satisfying Z.
|
ℓ
j=1 bj ·sαk [j]) + f ′′
|
and other values as computed in Rule 3, where f ′′
know that fℓ = hℓ ·(|sαk
the ℓth polynomial in Π′′, due to (|sαk
therefore
Case 2 (F is an YES challenge for Π & satisfies IsIdentity):
In this case, we want to show that F is a YES challenge for Π′′. We
for some polynomial hℓ
was replaced as
j=1 bj ·sαk [j]) = 0 via the fact
that IsIdentity is satisfied. Consider any assignment of variables
fℓ(v)
and
v s.t. Fℓ = д
αℓ
j bj · sαk [j] evaluates to 0 for the variable assignment
f ′′
for each ℓ ∈ [m]. Therefore, F is an
v. This implies, Fℓ = д
ℓ
αℓ
YES instance for Π′′ and satisfies the circuit IsIdentity ∧ C′′, thus
satisfying Z.
, ∀ℓ ∈ [m]. We know that
j Uαk [j]bj = Iαk
(v)
ℓ
Case 3 (F is a NO challenge for Π & doesn’t satisfy IsIdentity): Since
we assume F does not satisfy the circuit IsIdentity in this case, we
focus only on whether F satisfies C ∧ C′. By definition, F is a NO
challenge for Π and therefore it cannot be a YES challenge for Π′,
as both Π and Π′ share the same set of polynomials. (Either it will
be a NO challenge or an invalid challenge; the latter in the case
where the single element difference in the Trusted set between
the two problems was an improperly formed element.) Observe
that if F satisfies C, then F is a NO instance for Π′. Consider any
fℓ(v)
for all ℓ ∈ Trusted.
assignment of variables v such that Fℓ = д
αℓ
fℓ(v)
fk(v)
18. Consequently, Fℓ = д
If F satisfies C, it means Fk = д
αℓ
αk
for each ℓ ∈ Trusted ∪ {k}, and Π′ is a NO instance. Therefore, F
does not simultaneously satisfy the circuits C ∧ C′ and IsIdentity,
and thereby does not satisfy Z.
|
ℓ
ℓ
j=1 Uαk [j]bj) = Iαk
, the polynomial (
for each ℓ ∈ [m], fℓ = hℓ ·(
(|sαk
Case 4 (F is a NO challenge for Π & satisfies IsIdentity):
In this case, we argue that F is a NO challenge for Π′′. We know that
j bj ·sαk [j])+ f ′′
, for some polynomial
is the ℓth polynomial in Π′′. Consider any assign-
hℓ, where f ′′
fℓ(v)
for all ℓ ∈ Trusted. As
ment of variables v such that Fℓ = д
αℓ
j bj · sαk [j]) evaluates
f ′′
to 0 for the variable assignment v. Therefore, Fℓ = д
for each
ℓ
αℓ
ℓ ∈ Trusted. Moreover, F cannot be an YES instance for Π′′. This is
because if there a variable assignment v such that Fℓ = д
for
fℓ(v)
each ℓ ∈ [m], that would mean Fℓ = д
for each ℓ ∈ [m] which
αℓ
contradicts our initial assumption that F is a NO instance for Π.
Therefore, F does not satisfy the circuits NOT IsIdentity and C′′,
and thereby does not satisfy Z.
18Note that this crucially relies on the fact that
j bj · sαk
[j]bj (cid:44) Iαk
[j] does not evaluate to 0 for the variable assignment v.
and therefore

j Uαk
f ′′
ℓ
ℓ
(v)
(v)
E CORRECTNESS OF RULE 4
In this section, we prove the correctness of Rule 4 (Lemma 4.4).
Proof. We first observe that every valid challenge for Π is also
a valid challenge for Π′ and Π′′, as they all share the same group
structure, the number of elements m, and the group indicator vector
α. Consider any testing circuits C′, C′′ for Π′, Π′′ respectively and
any PPE challenge F = (F1, F2,· · · Fm). We prove that if F is a YES
challenge for Π, it satisfies circuit Z := ((NOT IsIdentity) ∧ C′) ∨
(IsIdentity∧C′′), and if F is a NO challenge for Π, it does not satisfy
the circuit Z. We organize the proof into 4 cases.
ℓ
ℓ
(v)
for each ℓ ∈ [m], and F is an YES instance for Π′′ and satisfies
Case 1 (F is a YES challenge for Π & doesn’t satisfy IsIdentity): We
first observe that F is also a YES challenge for Π′, as Π and Π′ have
the same set of polynomials { fℓ}ℓ∈[m] and only differ in the Trusted
set. As a result, F satisfies the circuit (NOT IsIdentity) ∧ C′, and
thus satisfies Z.
Case 2 (F is a YES challenge for Π & satisfies IsIdentity):
In this case, we argue that F is an YES challenge for Π′′. Consider
, ∀ℓ ∈ [m]. We know
fℓ(v)
any assignment of variables v s.t. Fℓ = д
αℓ
for some polynomial βℓ, where f ′′
that fℓ = βℓ · h1 + f ′′
is ℓth
polynomial in Π′′. As F satisfies the circuit IsIdentity, h1 evaluates
fℓ(v)
to 0 on input variable assignment v. Consequently, Fℓ = д
αℓ
f ′′
ℓ
д
αℓ
the circuit IsIdentity ∧ C′′, and thus satisfies Z.
Case 3 (F is a NO challenge for Π & doesn’t satisfy IsIdentity): In this
case, F is not a YES instance for Π′ as Π and Π′ share the same
set of polynomials. Also, there exists an assignment of InTrusted
fℓ(v)
variables {vi}i∈InTrusted such that Fℓ = д
for all ℓ ∈ Trusted.
αℓ
As F does not satisfy the circuit IsIdentity, h1 does not evaluate to
0 on variable assignment {vi}i∈InTrusted, and therefore for every
possible value of Fk and h2, there exists a value of uj such that
h1·uj +h2
. Consequently, there exists a variable assignment v
Fk = д
αk
, ∀ℓ ∈ Trusted ∪ {k}, and therefore F is a NO
fℓ(v)
such that Fℓ = д
αℓ
challenge for Π′ and does not satisfy C′. Because it does not satisfy
C′ or IsIdentity, it cannot satisfy Z.
=
ℓ
ℓ
Case 4 (F is a NO challenge for Π & satisfies IsIdentity):
We know that for any ℓ ∈ [m], fℓ = βℓ·h1 + f ′′
for some polynomial
is the ℓth polynomial of Π′′. Let v be any variable
βℓ, where f ′′
fℓ(v)
for all ℓ ∈ Trusted. As F satisfies
assignment such that Fℓ = д
αℓ
the circuit IsIdentity, h1 evaluates to 0 on variable assignment v,
f ′′
, ∀ℓ ∈ Trusted. Furthermore, F cannot be an YES
and Fℓ = д
ℓ
αℓ
instance for Π′′. This is because if F is an YES for Π′′, there exists
f ′′
a variable assignment v such that Fℓ = д
for all
ℓ
αℓ
ℓ ∈ [m], which contradicts our assumption that F is a NO instance
for Π. Therefore, F is a NO challenge for Π′′ and does not satisfy
(NOT IsIdentity) or C′′, thus it cannot satisfy Z.
fℓ(v)
αℓ
= д
(v)
(v)
Session 2B: Applied Cryptography CCS '20, November 9–13, 2020, Virtual Event, USA405F QSEARCH: CORRECTNESS AND
EFFICIENCY
We prove the correctness of QSearch algorithm (Theorem 4.5).
Proof. We provide a sketch of how to prove this theorem by
induction on the number of untrusted polynomials and the total
number of monomials in all the polynomials of f. The critical cor-
rectness arguments required have already been covered for each
rule in Lemmas 4.1 to 4.4. When QSearch is invoked on Π with
either zero untrusted polynomials or zero total number of mono-
mials, it outputs the always accepting circuit Cacc which is a valid
testing circuit. Now suppose the QSearch algorithm outputs a valid
testing circuit or unknown on every problem Π′ which has at most
α number of untrusted polynomials and at most β total number of
monomials in f. Suppose QSearch outputs a circuit C (cid:44) unknown
on a problem Π with α + 1 untrusted polynomials and at most β
total number of monomials in f. It must have invoked one of the
4 rules. By Lemmas 4.1 to 4.4 and our induction hypothesis, C is a