For example, in Figure 4a, we see that for occupations
metrics: Mean Square Error (MSE), Mean Absolute Error
(0.1,0.1) all the predictions are clustered around the real
(MAE), as well as the mean Euclidean distance, because
value. As occupation increases, they get more disperse. Due
we wanted to understand the distance between the two-
to the optimization method used, we observe some values
dimensionalpredictions.Thesemetricswerecalculatedforthe
getting clamped creating a line in the diagonal. On Figure 4b,
whole set of predictions, by range for each layer occupation
representing the neural network results, we see there is a
as well as for each combination of occupations (Euclidean
particular pattern of dispersion for the extremes. On high
distance). MSE is particularly useful to compare our current
occupations,predictionsareshiftedalongoneoftheaxes.This
results with the results of the methods that inspired this
meansthattheneuralnetworkisabletoaccuratelypredictthe
work [6].
higher occupation value, but the second one will tend towards
central values. This is expected, since the highest occupied
IV. RESULTS
component dominates the overall response time experimented
Havinggeneratedpredictionsforatestsetof2,430samples by the client.
(30 samples for each of the 81 combinations of occupations),
Secondly, we show bubble charts, where the radius of each
we calculated their respective errors. Besides the global and
bubble is the mean Euclidean distance of the predictions from
per range error for each individual layer predictor, for which
the real value. Here it is visible that the queue model, in
we used MSE and MAE, we calculated the error as the
Figure 4c, shows stability along the range, except on the
Euclidean distance for the prediction pair. This latter metric
highest occupation values. Figure 4d, relative to the Neural
gives an absolute error value that more intuitively shows the
Network, presents a different pattern, having lower accuracy
quality of the prediction and better exposes issues such as the when the difference in occupations is highest ((0.1,0.9)) or
predictionregressingtothemeanofthetwooccupationvalues. as it get closer to (0.9,0.9).
We focus on the MAE and mean Euclidean distance since Results show that we can estimate the internal occupations
they have the same unit. Table I shows the MAE and MSE from the system’s response time with small error. When at
for each layer, as well as the respective standard deviations. leastoneofthecomponentsisverybusy,onlyoneofthehigh
The Mean Euclidean distances for the Tandem Queue Model occupations is correctly approximated. We do not regard this
Fitting and the Deep Neural Network are 0.09 ± 0.10 and asproblematic,becauseaverybusycomponentwilldominate
0.15 ± 0.12, respectively. Euclidean distances are further the response time anyway.
detailed in Figures 4c and 4d.
V. RELATEDWORK
The best method in our previous work [6], has a MSE of
0.05±0.04and0.05±0.03,forlayer1and2respectively.The Wedividepreviousrelatedworkintothreeparts:monitoring
new methods both show significant improvement over those tools and methods to gather server-side data, tracing frame-
same metrics, as shown on Table I. Moreover, both methods works, and modeling of computational machines. Traditional
show improvement over all ranges of occupation. Table II monitoring and tracing were studied as the standard alterna-
shows error metrics for each method and layer, grouped by tives to the approach we propose.
range. For example ρ = 0.1 shows the results for the pairs
(0.1,∗) and (∗,0.1), where the asterisk stands for all values. A. Monitoring tools
Asneithermodelcoulddistinguishtheorderoftheoccupation
Traditional monitoring tools, like Nagios [7] or Zabbix [8],
values — (0.1,0.5) is indistinguishable from (0.5,0.1) — the
use probes or agents to collect infrastructure and application
errorswerecalculatedaftersortingthelayervalues.Theresults
metrics, such as response time, load, and other sorts of num-
are much more consistent over the whole range, compared
bers and status. Application Performance Monitoring (APM)
to our previous work [6], where there was clear degradation,
solutions, like New Relic [9] or Dynatrace [10], go a little
especially on the model fitting approach.
bit deeper and can use specific agents to automatically extract
However,theerrorofeachindividuallayerdoesnotconvey informationabouttheinternalcomponentsofdistributedappli-
an important aspect of the prediction quality. We wish to cations, e.g., a database. Other approaches, take advantage of
preserve the relationship between the two occupation values, architectural patterns and extract data at the platform level,
TABLE I: Global results for both methods.
Layer1 Layer2
Method MAE MSE MAE MSE
QueueModel 0.05±0.07 0.01±0.03 0.05±0.08 0.01±0.03
NeuralNetwork 0.09±0.11 0.02±0.04 0.08±0.10 0.02±0.04
TABLE II: Error metrics for each method and layer, grouped by range.
Queuemodel Neuralnetwork
Layer1 Layer2 Layer1 Layer2
ρ MAE MSE MAE MSE MAE MSE MAE MSE
0.1 .05±.09 .01±.04 .05±.09 .01±.04 .12±.14 .04±.06 .11±.13 .03±.05
0.2 .05±.08 .01±.03 .06±.11 .02±.05 .1±.1 .02±.04 .11±.11 .02±.04
0.3 .06±.09 .01±.03 .06±.09 .01±.04 .1±.08 .02±.02 .08±.07 .01±.02
0.4 .06±.08 .01±.03 .07±.09 .01±.03 .09±.08 .02±.02 .08±.07 .01±.02
0.5 .06±.07 .01±.02 .06±.08 .01±.03 .09±.09 .02±.03 .08±.08 .01±.03
0.6 .06±.07 .01±.03 .05±.07 .01±.03 .09±.1 .02±.04 .09±.1 .02±.04
0.7 .05±.05 .01±.02 .05±.06 .01±.03 .1±.1 .02±.04 .09±.1 .02±.05
0.8 .04±.05 0±.03 .04±.05 0±.2 .1±.13 .03±.06 .08±.11 .02±.05
0.9 .04±.04 0±.01 .04±.03 0±0 .06±.13 .02±.06 .01±.02 0±0
such as Pina et al. [11]. Eventually, all this data ends up monitoringstandards.Wehaveworkedonperformancemodel-
in dashboards for the system administrators. Cloud providers ingandmonitoringbeforeaswell,e.g.,in[24]or[6].In[24],
are also an interesting case to cover here, as they have their we used a black-box technique to detect internal and external
ownmonitoringtools,likeAmazonCloudWatch[12]orAzure bottlenecks of the system, using only client-side data and
Monitor [13]. machine learning techniques. In [6] we also used a black-box
approach for multi-component servers, but we now improve
B. Tracing methodologies
those results.
Some of the previous tools can even support distributed
In the literature we can find plenty of approaches to model
tracing.Tracing,unlikestandardmonitoringsolutions,exposes
and analyze system performance. Bahl et al. [25] create an
causality relationships in the logs, allowing users to make
inference Graph model from network traffic to check service
inferences concerning critical paths and relations, e.g., among
degradation and failures. However, their work is strongly tied
microservices. Regarding tracing, there are two major fields-
to the enterprise network topology. Urgaonkar et al. [26],
of-work: black-box and non-black-box approaches. Concern-
propose an analytical model based on multi-tier queues for
ing black-box methodologies, Aguilera et al. [14] used a tool
multi-tier Internet services. Despite being related to our own
that tracks message-level traces of the system, to debug the
work, Urgaonkar et al. model a multi-tier server, while we
overalldistributedsystem(notperformingoverallperformance
aim to do black-box monitoring. Other works, like [27]–[29]
diagnosis). Tak et al. [15] use threads and network activities,
use networks or layered queues. However they do manual
as a middleware to detect request paths.
modeling at design time or modeling from expert knowledge
Relative to non-black-box, Sigelman et al. [16] created a
of the system, instead of trying to extract the model from an
tracing infrastructure for infrastructure and distributed appli-
existing system in a data driven fashion. Other approaches
cations.Sambasivanetal.[17]usetheapproachtogaininsight
try to model the service performance and response times.
at the application level, in particular workflow-based tracing,
This is the case of Cao et al. [30], who model classic web
concerning the tracing of individual requests.
servers as M/G/1/K ∗ PS queues. However, models like
Linkedin [18] has a distributed tracing system built upon
M/G/1, G/G/c, with no assumption of processing time, are
Apache Samza [19], to detect performance issues and root
not amenable to closed-form solutions and cannot be easily
cause analysis. The system uses the call paths aggregation of
composed.
every 15 minutes. Netflix [20] has also created several moni-
Heinrichetal.[31]exploremicroservice-basedsystemsand
toringtoolswithdistributedtracingaswellasfailureinjection
point out that the modeling approaches available do not fit
features, to improve resilience of the overall infrastructure.
modern microservice-based systems.
OpenTracing [21] gives developers tracing clients in multi-
ple languages and brings integration with the state-of-the-art
VI. CONCLUSION
tracingback-endtools.Googlerecentlypublishedacompeting
standard,OpenCensus[22],supportingapartiallyoverlapping Monitoring of highly distributed, dynamic, elastic systems
set of the same back-end tracing tools. is a herculean task for administrators, operators and even
for developers. New software releases, agents, tracing, and a
C. Performance modeling techniques
plethora of system monitoring tools and dashboards creates a
In [23], authors present a survey concerning microservice complex environment for administrators to ensure correctness
monitoring design and possible implementations, to promote and proper quality-of-service.
(a)Queuemodelpredictions (b)Neuralnetworkpredictions
(c)QueuemodelmeanEuclideandistance (d)NeuralnetworkmeanEuclideandistance
Fig. 4: Tandem queue and neural network regression models error visualizations. Axes represent the occupation of each
component.
Inthispaperweexploredthepossibilityofinferringsystem distinct methods: first, an optimized algorithm specifically
occupation from the client point-of-view — a scenario ideal designed to our scenario, and secondly, a neural network
for legacy systems or where it is too complex or infeasible to trained with the data collected from our experiment. Our
instrument a small subset of components. Once occupation results show that it is viable to infer the load of each layer
can be predicted, the system can react and leverage the collecting only the overall response time. Hence, these two
elasticity of the supporting cloud platform to maintain the methodologies – neural network and tandem queue model –
desiredthroughputandqualityofservice.Thismaybefeasible are able to improve current monitoring tools, and ensure a
even for more current state-of-the-art methodologies, such as more fine-grained knowledge about the system.
microservices, where a module may be responsible to create
new containers reacting to a lower quality-of-service. For future work, we intend to study and categorize real
world response time data, using that knowledge to extend
Our objective was to identify occupation for a two-layer this methodology for more generic topological inference. In
subsystem. More specifically, we wanted to compare two particular, we are interested in the number of components,
parallelism and occupation. [24] R. P. R. Filipe and F. Araujo, “Client-side black-box monitoring for
web sites,” in 2017 IEEE 16th International Symposium on Network
ACKNOWLEDGMENTS ComputingandApplications(NCA),Oct2017.
[25] P. Bahl, R. Chandra, A. Greenberg, S. Kandula, D. A. Maltz, and
This work was carried out under the project PTDC/EEI- M. Zhang, “Towards highly reliable enterprise network services via
inference of multi-level dependencies,” SIGCOMM Comput. Commun.
ESS/1189/2014 — Data Science for Non- Programmers, sup-
Rev.,vol.37,no.4,pp.13–24,Aug.2007.
portedbyCOMPETE2020,Portugal2020-POCI,UE-FEDER [26] B.Urgaonkar,G.Pacifici,P.Shenoy,M.Spreitzer,andA.Tantawi,“An
and FCT. analytical model for multi-tier internet services and its applications,”
SIGMETRICS Perform. Eval. Rev., vol. 33, no. 1, pp. 291–302, Jun.
2005.
REFERENCES
[27] H.Li,“AQueueTheoryBasedResponseTimeModelforWebServices
[1] R.Kalman,“Onthegeneraltheoryofcontrolsystems,”IRETransactions Chain,” 2010 International Conference on Computational Intelligence
onAutomaticControl,vol.4,no.3,pp.110–110,dec1959. andSoftwareEngineering,pp.1–4,2010.
[2] A.A.Shahin,“EnhancingElasticityofSaaSApplicationsusingQueuing [28] W.-p.Yang,L.-c.Wang,andH.-p.Wen,“Aqueueinganalyticalmodel
Theory,”IJACSA)InternationalJournalofAdvancedComputerScience for service mashup in mobile cloud computing,” 2013 IEEE Wireless
andApplications,vol.8,no.1,pp.279–285,2017.[Online].Available: CommunicationsandNetworkingConference(WCNC),pp.2096–2101,
www.ijacsa.thesai.org apr2013.
[3] A. Horva´th and M. Telek, “Phfit: A general phase-type fitting tool,” [29] J. Dilley, R. Friedrich, T. Jin, and J. Rolia, “Web server perfor-
in International Conference on Modelling Techniques and Tools for mance measurement and modeling techniques,” Performance Evalua-
ComputerPerformanceEvaluation. Springer,2002,pp.82–91. tion,vol.33,no.1,pp.5–26,jun1998.
[4] “Tensorflow,” https://www.tensorflow.org/guide/keras, retrieved Feb, [30] J. Cao, M. Andersson, C. Nyberg, and M. Kihl, “Web Server Perfor-
2019. mance Modeling using an M/G/1/K*PS Queue,” in 10th International
ConferenceonTelecommunications,ICT2003,vol.2,no.2,2003,pp.
[5] A. Ebert, P. Wu, K. Mengersen, and F. Ruggeri, “Computationally
Efficient Simulation of Queues: The R Package queuecomputer,” mar 1501–1506.
2017. [31] R. Heinrich, A. van Hoorn, H. Knoche, F. Li, L. E. Lwakatare,
[6] R. Filipe, J. Correia, F. Araujo, and J. Cardoso, “On black-box C. Pahl, S. Schulte, and J. Wettinger, “Performance Engineering for
monitoring techniques for multi-component services,” in 2018 IEEE Microservices,”inProceedingsofthe8thACM/SPEConInternational
17thInternationalSymposiumonNetworkComputingandApplications ConferenceonPerformanceEngineeringCompanion-ICPE’17Com-
(NCA),Nov2018,pp.1–5. panion. NewYork,NewYork,USA:ACMPress,2017,pp.223–226.
[7] W. Barth, Nagios: System and Network Monitoring, 2nd ed. San
Francisco,CA,USA:NoStarchPress,2008.
[8] “Zabbix.org,”https://zabbix.org/wiki/Main Page,retrievedFeb,2019.
[9] “NewRelic,” https://newrelic.com/press-release/20150506-2, retrieved
Feb,2019.
[10] “Dynatrace,” https://www.dynatrace.com/capabilities/
microservices-and-container-monitoring/,retrievedFeb,2019.
[11] F.Pina,J.Correia,R.Filipe,F.Araujo,andJ.Cardroom,“Nonintrusive
monitoring of microservice-based systems,” in 2018 IEEE 17th Inter-
national Symposium on Network Computing and Applications (NCA).
IEEE,2018,pp.1–8.
[12] “Amazon CloudWatch,” retrieved Feb, 2019. [Online]. Available:
https://aws.amazon.com/cloudwatch/
[13] “Azure Monitor,” retrieved Feb, 2019. [Online]. Available: https:
//azure.microsoft.com/en-us/services/monitor/
[14] M.K.Aguilera,J.C.Mogul,J.L.Wiener,P.Reynolds,andA.Muthi-
tacharoen, “Performance debugging for distributed systems of black
boxes,”ACMSIGOPSOperatingSystemsReview,vol.37,no.5,p.74,
2003.
[15] B. C. Tak, C. Tang, C. Zhang, S. Govindan, B. Urgaonkar, and R. N.
Chang,“vpath:Precisediscoveryofrequestprocessingpathsfromblack-
box observations of thread and network activities,” in Proceedings of
the 2009 Conference on USENIX Annual Technical Conference, ser.
USENIX’09. Berkeley, CA, USA: USENIX Association, 2009, pp.
19–19.
[16] B. H. Sigelman, L. Andr, M. Burrows, P. Stephenson, M. Plakal,
D. Beaver, S. Jaspan, and C. Shanbhag, “Dapper , a Large-Scale
DistributedSystemsTracingInfrastructure,”Tech.Rep.April,2010.
[17] “Principledworkflow-centrictracingofdistributedsystems,”inProceed-
ingsoftheSeventhACMSymposiumonCloudComputing. ACM,2016,
pp.401–414.
[18] “Linkedin - tracing,” https://engineering.linkedin.com/
distributed-service-call-graph/real-time-distributed-tracing-website-\
-performance-and-efficiency,retrievedFeb,2019.
[19] “Apache Samza,” retrieved Feb, 2019. [Online]. Available: http:
//samza.apache.org/
[20] “Netflix- tracing,” https://speakerdeck.com/adriancole/
distributed-tracing-and-zipkin-at-netflixoss-barcelona, retrieved Feb,
2019.
[21] “Opentracing,”http://opentracing.io/,retrievedFeb,2019.
[22] “Opencensus,”https://opencensus.io/,retrievedFeb,2019.
[23] S. Haselbo¨ck and R. Weinreich, “Decision guidance models for mi-
croservice monitoring,” in 2017 IEEE International Conference on
SoftwareArchitectureWorkshops(ICSAW),April2017,pp.54–61.