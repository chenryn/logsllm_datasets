User: Please write a Python script to search for all files containing a certain keyword in a certain folder, and output their file names, paths and matching lines to a text file.
Assistant: The following is an example of a Python script, which can search for all files containing a specific keyword in a specified folder, and output their file names, paths, and matching lines to a specified text file. ``` python import os # Set keyword and folder path keyword = "example" directory = "/path/to/folder" # Initialize counter and output file count = 0 output_file = open("output.txt", "w ") # recursively search all files in the folder for dirpath, dirnames, filenames in os.walk(directory): for filename in filenames: # ignore hidden files if not filename.startswith("."): filepath = os.path .join(dirpath, filename) # try to open and read the file try: with open(filepath, "r") as f: lines = f.readlines() except Exception as e: print("Error: ", e) continue # Search file content match_count = 0 for line in lines: if keyword in line: match_count += 1 # If there is a match in the file, output to the file if match_count > 0: output_file.write("Filename: {}\n" .format(filename)) output_file.write("Path: {}\n".format(filepath)) output_file.write("Matched Lines: {}\n\n".format(match_count)) count += 1 # Output completion information and number of matching files output_file.write("Search Completed. {} files matched '{}'.".format(count, keyword)) output_file.close() ``` To use this script, put "keyword " and "directory" variables are set to the keyword and folder path to search. The script will output to a new text file called "output.txt". The number of matching lines does not include duplicate matches.