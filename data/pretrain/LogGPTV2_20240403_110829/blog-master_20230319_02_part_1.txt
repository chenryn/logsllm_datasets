## PostgreSQL 大数据场景存储生态: apache arrow - by pg-strom               
### 作者                                                              
digoal                                                              
### 日期                                                              
2023-03-19                                                          
### 标签                                                              
PostgreSQL , PolarDB , duckdb , 存储 , parquet , arrow , gpu , cuda , 大数据 , pg-strom                                
----                                                              
## 背景     
Apache Arrow is a data format of structured data to save in columnar-form and to exchange other applications. Some applications for big-data processing support the format, and it is easy for self-developed applications to use Apache Arrow format since they provides libraries for major programming languages like C,C++ or Python.  
Apache Arrow format file internally contains Schema portion to define data structure, and one or more RecordBatch to save columnar-data based on the schema definition. For data types, it supports integers, strint (variable-length), date/time types and so on. Indivisual columnar data has its internal representation according to the data types.  
PostgreSQL pg-strom 是计算加速插件, 利用GPU的计算能力. 计算加速通常出现在大数据计算场景, 所以可以说pg-strom把单机版的PG扩展到了大数据场景, 但是光有计算加速还不够, 存储结构也要变化, 才能应对好大数据场景, 也就是接入大数据场景常用的存储生态. arrow就是适合大数据场景的存储引擎之一, 很多大数据计算产品都支持arrow(例如spark, pandas, drill, impala, hbase, kudu, cassandra, parquet等).   
pg-strom 贡献的pg2arrow插件可以将PG的数据转成arrow列存储文件. arrow_fdw则可以让PG通过外部表的接口读写arrow格式的列存储文件.   
通过arrow的支持, 使得PG融入到了大数据生态中.    
对比arrow和parquet:   
- https://arrow.apache.org/blog/2022/10/05/arrow-parquet-encoding-part-1/
- https://arrow.apache.org/blog/2022/10/08/arrow-parquet-encoding-part-2/
- https://arrow.apache.org/blog/2022/10/17/arrow-parquet-encoding-part-3/
## pg2arrow  
https://github.com/heterodb/pg2arrow  
```  
$ git clone https://github.com/heterodb/pg-strom.git  
$ cd pg-strom/arrow-tools  
$ make  
$ sudo make install  
$ pg2arrow --help  
Usage:  
  pg2arrow [OPTION] [database] [username]  
General options:  
  -d, --dbname=DBNAME   Database name to connect to  
  -c, --command=COMMAND SQL command to run  
  -t, --table=TABLENAME Equivalent to '-c SELECT * FROM TABLENAME'  
      (-c and -t are exclusive, either of them must be given)  
      --inner-join=SUB_COMMAND  
      --outer-join=SUB_COMMAND  
  -o, --output=FILENAME result file in Apache Arrow format  
      --append=FILENAME result Apache Arrow file to be appended  
      (--output and --append are exclusive. If neither of them  
       are given, it creates a temporary file.)  
  -S, --stat[=COLUMNS] embeds min/max statistics for each record batch  
                       COLUMNS is a comma-separated list of the target  
                       columns if partially enabled.  
Arrow format options:  
  -s, --segment-size=SIZE size of record batch for each  
Connection options:  
  -h, --host=HOSTNAME  database server host  
  -p, --port=PORT      database server port  
  -u, --user=USERNAME  database user name  
  -w, --no-password    never prompt for password  
  -W, --password       force password prompt  
Other options:  
      --dump=FILENAME  dump information of arrow file  
      --progress       shows progress of the job  
      --set=NAME:VALUE config option to set before SQL execution  
      --help           shows this message  
Report bugs to .  
```  
https://github.com/heterodb/pg-strom/wiki/803:-Data-exchange-with-SQL-databases-over-Apache-Arrow  
`pg2arrow` is a utility command to dump PostgreSQL contents as Apache Arrow files. Below is the simplest example to dump the table table0 in the database postgres to `/path/to/file0.arrow`.  
```  
$ pg2arrow -d postgres -c 'SELECT * FROM table0' -o /path/to/file0.arrow  
```  
You can supply more complicated query according to the `-c` option. This example tries to cast id to bigint, and fetch 8 charactors from the head of x.  
```  
$ pg2arrow -d postgres -c 'SELECT id::bigint,substring(x from 1 for 8) FROM table0' -o /dev/shm/file0.arrow  
```  
Not only creation of a new file, you can expand an existing Apache Arrow file using `--append` instead of `-o` option. In this case, the supplied query by `-c` option must be compatible to the schema definitions of the target file.  
```  
$ pg2arrow -d postgres -c 'SELECT * FROM table0' --append /path/to/file0.arrow  
```  
### demo
1、安装依赖  
```  
wget https://packages.ntop.org/apt-stable/bullseye/all/apt-ntop-stable.deb  
apt install ./apt-ntop-stable.deb  
apt update  
apt install -y pfring-drivers-zc-dkms pfring-dkms nprobe ntopng n2disk cento  
```  
2、安装pg2arrow  
```  
su - postgres  
git clone --depth 1 -b v3.5 https://github.com/heterodb/pg-strom  
cd pg-strom  
cd arrow-tools  
env CC=clang CXX=clang++  make  
su - root  
cd /home/postgres/pg-strom/arrow-tools/  
env CC=clang CXX=clang++  make install  
....  
mkdir -p /usr/local/bin && \  
install -m 0755 pcap2arrow /usr/local/bin  
mkdir -p /usr/local/bin && \  
install -m 0755 arrow2csv /usr/local/bin  
....  
```  
```  
postgres@haier-5000a:~/pg-strom/arrow-tools$ ll  
total 2.8M  
-rw-r--r--  1 postgres postgres 1.3K Mar 18 11:25 sql2arrow.h  
-rw-r--r--  1 postgres postgres  35K Mar 18 11:25 sql2arrow.c  
-rw-r--r--  1 postgres postgres  28K Mar 18 11:25 pgsql_client.c  
-rw-r--r--  1 postgres postgres  90K Mar 18 11:25 pcap2arrow.c  
-rw-r--r--  1 postgres postgres  28K Mar 18 11:25 mysql_client.c  
-rw-r--r--  1 postgres postgres 2.5K Mar 18 11:25 Makefile  
lrwxrwxrwx  1 postgres postgres   15 Mar 18 11:25 float2.h -> ../src/float2.h  
lrwxrwxrwx  1 postgres postgres   20 Mar 18 11:25 arrow_write.c -> ../src/arrow_write.c  
lrwxrwxrwx  1 postgres postgres   20 Mar 18 11:25 arrow_pgsql.c -> ../src/arrow_pgsql.c  
lrwxrwxrwx  1 postgres postgres   20 Mar 18 11:25 arrow_nodes.c -> ../src/arrow_nodes.c  
lrwxrwxrwx  1 postgres postgres   18 Mar 18 11:25 arrow_ipc.h -> ../src/arrow_ipc.h  
lrwxrwxrwx  1 postgres postgres   19 Mar 18 11:25 arrow_defs.h -> ../src/arrow_defs.h  
-rw-r--r--  1 postgres postgres  38K Mar 18 11:25 arrow2csv.c  
drwxr-xr-x 14 postgres postgres 4.0K Mar 18 23:29 ..  
-rw-r--r--  1 postgres postgres 431K Mar 19 14:21 pcap2arrow.o  
-rw-r--r--  1 postgres postgres 185K Mar 19 14:21 arrow_nodes.o  
-rw-r--r--  1 postgres postgres 201K Mar 19 14:21 arrow_write.o  
-rwxr-xr-x  1 postgres postgres 504K Mar 19 14:21 pcap2arrow  
-rw-r--r--  1 postgres postgres 168K Mar 19 14:21 arrow2csv.o  
-rwxr-xr-x  1 postgres postgres 220K Mar 19 14:21 arrow2csv  
-rw-r--r--  1 postgres postgres 103K Mar 19 14:21 __pgsql2arrow.o  
-rw-r--r--  1 postgres postgres 102K Mar 19 14:21 pgsql_client.o  
-rw-r--r--  1 postgres postgres 192K Mar 19 14:21 arrow_pgsql.o  
drwxr-xr-x  2 postgres postgres 4.0K Mar 19 14:21 .  
-rwxr-xr-x  1 postgres postgres 474K Mar 19 14:21 pg2arrow  
```  
3、使用帮助  
```  
postgres@haier-5000a:~/pg-strom/arrow-tools$ ./pg2arrow --help  
Usage:  
  pg2arrow [OPTION] [database] [username]  
General options:  