
X


























































Figure 8: Expressiveness: different language features
used by the original corpus of different programs. A
cross means that the feature was not used by the pro-
gram in its initial implementation. A checkmark means
the feature was used by the program. boolean variables,
multiple iterations over a string, and regular expressions
are native constructs in BEK. Multiple lookahead, arith-
metic, and functions are not native to BEK and must be
emulated during the translation. We also show the dis-
tinct boolean variables
used by the BEK implementation.
a model with BEK. Unfortunately, we found multiple
functions that require features, such as bounded looka-
head and transducer composition, which are not yet sup-
ported by the BEK language.
For example, we considered a function in the Safari
implementation of WebKit that performs Javascript de-
coding [7]. This function requires at a minimum the use
of functions to connect hexadecimal to ASCII, a looka-
head of 5 characters, function composition, and scan-
ning for occurrences of a target character. While as
noted above we believe these features could be added
to BEK without fundamentally changing the underlying
algorithms for symbolic transducers, the BEK language
does not yet support them.
4.2 Checking Algebraic Properties
Name
States
Idempotent?
Reversible?
We argued in Section 2 that idempotence and commuta-
tivity are key properties for sanitizers. In addition, the
property of reversibility, that from the output of a sani-
tizer we can unambiguously recover the input, is impor-
tant as an aid to debugging.
4.2.1 Order Independence
We now evaluate whether 17 sanitizers used in IE 8 are
order independent. Order independence means that the
sanitizers have the same effect no matter in what order
they are applied. If the order does matter, then the choice
of order can yield surprising results. As an example, in
rule-based ﬁrewalls, a set of rules that are not order in-
dependent may result in a rule never being applied, even
though the administrator of the ﬁrewall believes the rule
is in use.
Each IE 8 sanitizer deﬁnes a speciﬁc input set on
which it will transform strings, which we can compute
from the BEK model. We began by checking all 136 pairs
of IE 8 sanitizers to determine whether their input sets
were disjoint. Only one pair of sanitizers showed a non-
trivial intersection in their input sets. A non-trivial in-
tersection signals a potential order dependence, because
the two sanitizers will transform the same strings. For
this pair, we used BEK to check that the two sanitizers
output the same language, when restricted to inputs from
their intersection. BEK determined that the transforma-
tion of the two sanitizers on thesel inputs was exactly the
same — i.e., the two sanitizers were equivalent on the
intersection set. We conclude that the IE 8 sanitizers are
in fact order independent, up to errors in our extraction
of the sanitizers and our assumption that no server-side
modiﬁcation is present.
4.2.2 Idempotence and Reversibility
We now examine the idempotence of several BEK pro-
grams, including the IE 8 sanitizers. Figure 9 reports
the results. The number of states in the symbolic ﬁnite
transducer created from each BEK program. For each
transducer, we then report whether it is idempotent and
whether it is reversible. This shows the number of states
acts as a rough guide to the complexity of the sanitizer.
For example, we see that IE ﬁlter 9 out of 17 is quite
complicated, with 25 states.
4.2.3 Commutativity
We investigated commutativity of seven different imple-
mentations of HTMLEncode, a sanitizer commonly used
by web applications. Four implementations were gath-
ered from internal sources. Three were created for our
project speciﬁcally by hiring freelance programmers to
create implementations from popular outsourcing web
sites. We provided these programmers with a high
level speciﬁcation in English that emphasized protection
a2bb2a
escapeBrackets
escapeMetaAndLink
escapeString0
escapeString
escapeStringSimple
getFileExtension
IEFilter1
IEFilter2
IEFilter3
IEFilter4
IEFilter5
IEFilter6
IEFilter7
IEFilter8
IEFilter9
IEFilter10
IEFilter11
IEFilter12
IEFilter13
IEFilter14
IEFilter15
IEFilter16
IEFilter17
1
1
1
1
1
1
2
6
9
19
13
13
16
13
12
25
18
11
11
14
14
1
1
1

X
X




X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X

X





















Figure 9: For each BEK benchmark programs, we report
the number of states in the corresponding symbolic trans-
ducer. We then report whether the transducer is idempo-
tent, and whether the transducer is reversible.
HTMLEncode1
HTMLEncode2
HTMLEncode3
HTMLEncode4
Outsourced1
Outsourced2
Outsourced3
X
X
X


X

X
X
X


X

X
X
X


X




X







X


X
X
X


X







X
Figure 10: Commutativity matrix for seven different im-
plementations of HTMLEncode. The Outsourced imple-
mentations were written by freelancers from a high level
English speciﬁcation.
against cross-site scripting attacks. Figure 10 shows a
commutativity matrix for the HTMLEncode implementa-
tions. A X indicates the pair of sanitizers commute,
while a  indicates they do not. The matrix contains 12
check marks out of 42 total comparisons of distinct sani-
tizers, or 28.6%. Our implementation took less than one
minute to complete all 42 comparisons.
4.3 Differences Between Multiple Implementations
Multiple implementations of the “same” functionality are
commonly available from which to choose when writing
a web application. For example, newer versions of a li-
brary may update the behavior of a piece of code. Differ-
ent organizations may also write independent implemen-
tations of the same functionality, guided by performance
improvements or by different requirements. Given these
different implementations, the ﬁrst key question is “do
all these implementations compute the same function?”
Then, if there are differences, the second key question is
“how do these implementations differ?”
As described above, because BEK programs corre-
spond to single valued symbolic ﬁnite state transduc-
ers, computing the image of regular languages under the
HTMLEncode1
HTMLEncode2
HTMLEncode3
HTMLEncode4
Outsourced1
Outsourced2
Outsourced3
X
X
X
0
−
X
0
X
X
X
0
−
X
0
X
X
X
0
−
X
′
0
0
0
X
0
0
0
−
−
−
0
X
−
0
X
X
X
0
−
X
0
0
0
′
0
0
0
X
Figure 11: Equivalence matrix for our implementations
of HTMLEncode. A X indicates the implementations are
equivalent. For implementations that are not equivalent,
we show an example character that exhibits different be-
havior in the two implementations. The symbol 0 refers
to the null character.
Implementation
HTMLEncode1
HTMLEncode2
HTMLEncode3
HTMLEncode4
Outsourced1
Outsourced2
Outsourced3
HTML
context
Attribute
context
100%
100%
100%
100%
100%
100%
100%
93.5%
93.5%
93.5%
100%
93.5%
93.5%
93.5%
Figure 12: Percentage of XSS Cheat Sheet strings, in
both HTML tag context and tag attribute contexts, that
are ruled out by each implementation of HTMLEncode.
function deﬁned by a BEK program is decidable. By tak-
ing the image of Σ∗ under two different BEK programs,
we can determine whether they output the
same set of strings.
We checked equivalence of seven different implemen-
tations in C# (as explained above) of the HTMLEncode
sanitization function. We translated all seven implemen-
tations to BEK programs by hand. First, we discovered
that all seven implementations had only one state when
transformed to a symbolic ﬁnite transducer. We then
found that all seven are neither reversible nor idempotent.
For example, the ampersand character & is expanded to
&amp; by all seven implementations. This in turn con-
tains an ampersand that will be re-expanded on future
applications of the sanitizer, violating idempotence.
For each BEK program, we checked whether it was
equivalent to the other HTMLEncode implementations.
Figure 11 shows the results.
For cases where the
two implementations are not equivalent, BEK derived
a counterexample string that is treated differently by
the two implementations.
For example, we discov-