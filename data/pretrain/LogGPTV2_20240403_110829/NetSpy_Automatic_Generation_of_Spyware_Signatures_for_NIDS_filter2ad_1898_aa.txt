title:NetSpy: Automatic Generation of Spyware Signatures for NIDS
author:Hao Wang and
Somesh Jha and
Vinod Ganapathy
NetSpy: Automatic Generation of Spyware Signatures for NIDS ∗
Hao Wang, Somesh Jha and Vinod Ganapathy
Computer Sciences Department, University of Wisconsin-Madison
{hbwang, jha, vg}@cs.wisc.edu
Abstract
We present NetSpy, a tool to automatically generate
network-level signatures for spyware. NetSpy determines
whether an untrusted program is spyware by correlating
user input with network traﬃc generated by the untrusted
program. If classiﬁed as spyware, NetSpy also generates a
signature characterizing the malicious substrate of the spy-
ware’s network behavior. Such a signature can be used by
network intrusion detection systems to detect spyware in-
stallations in large networks.
In our experiments, NetSpy precisely identiﬁed each of
the 7 spyware programs that we considered and generated
network-level signatures for them. Of the 9 supposedly-
benign programs that we considered, NetSpy correctly char-
acterized 6 of them as benign. The remaining 3 programs
showed network behavior that was highly suggestive of spy-
ing activity.
1. Introduction
Spyware is a class of malware that steals private infor-
mation from users without their knowledge or permission.
Popular examples of spyware include keyloggers, programs
that monitor web-browsing activity, and Trojans that down-
load and install other malware. Most spyware typically
masquerade as programs that provide useful functionality,
such as browser plug-ins and extensions, and compromise
the privacy of unsuspecting individuals who install them
on their computers. Several recent studies show that the
threat of spyware is on the rise, with one study reporting
that as many as 80% of computers in the US are spyware-
infected [9, 19]. Because spyware surreptitiously snoops
and reports victim behavior to a malicious remote server,
victims often do not notice malicious activity on their ma-
chines and do not realize that the spyware program is com-
promising their privacy. This very characteristic makes it
challenging to detect spyware.
Prior techniques for spyware detection fall under two
∗Supported by grants ONR/N00014-01-1-0708, NSF/CCR-0133629,
DOE/DE-FG02-93ER25176 and NSF/CNS-0448476.
complementary categories: host-based and network-based.
Host-based detectors work much like virus scanners, i.e.,
they scan binary executables for the presence of patterns
contained in a database of known spyware patterns. Most
commercial tools use simple techniques—such as matching
MD5 signatures of executables—which fail to detect vari-
ants of spyware. To address this shortcoming, recent work
has extended the basic matching approach to a behavior-
based approach [17]. In contrast, network-based detectors
monitor network traﬃc for malicious activity suggesting
spying behavior. For example, Snort [6] can match outgoing
network traﬃc against signatures of known spyware. These
signatures are typically developed manually (e.g., Bleeding
Edge Snort [2]).
Both these techniques suﬀer from two important short-
comings. First, because they use signatures of spyware
behavior, either at the binary executable or at the net-
work level, they can only detect known instances of spy-
ware and are thus ineﬀective at detecting novel spyware
instances. Even behavior-based techniques (e.g. Kirda et
al. [17]) suﬀer from the shortcoming that they can only de-
tect previously-unseen variants of known spyware behavior.
Second, formulating signatures is currently ad hoc and man-
ual with little work on automating the process. For exam-
ple, Bleeding Edge Snort uses a manual approach to con-
struct spyware signatures for Snort [6]. While there have
been recent advances [10, 11] at identifying spyware pro-
grams based on suspicious network activity, to the best of
our knowledge there is no prior work on automatic genera-
tion of network-level signatures for spyware.
This paper focuses on characterizing the network-level
behavior of spyware. We present a novel approach to au-
tomatically generate network-level signatures for spyware.
Such signatures can be used with network intrusion detec-
tion systems (NIDS), such as Snort or Bro [3], to monitor
outgoing traﬃc, and detect spyware installations within a
network. We have developed NetSpy, a tool that generates
network-level signatures for spyware.
Key to our approach is the observation that spyware
monitors victim activity, such as keystrokes and web sites
visited, and reports this back to a home server. Thus, out-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:29:53 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006bound network traﬃc generated by a spyware program must
contain some footprint of the victim’s behavior that trig-
gered the network activity. NetSpy uses this observation to
achieve two goals: (i) determine whether an untrusted pro-
gram is potentially spyware, and (ii) if the program is spy-
ware, then generate a signature characterizing the malicious
substrate of its network behavior. The ﬁrst goal is achieved
by NetSpy’s diﬀerential analysis tool while the second goal
is achieved by its signature generation tool.
Diﬀerential analysis, described in Section 3, is a two-
step process. The ﬁrst step isolates network traﬃc gener-
ated by the untrusted program. The second step analyzes
this traﬃc for spying behavior, i.e., correlation between the
contents of network traﬃc and user-input. If such a corre-
lation exists, then NetSpy deems that the untrusted program
is spyware. This network traﬃc is then fed to the signa-
ture generator, described in Section 4, which generates a
network-level signature. The main goal of signature gener-
ation is to isolate the malicious substrate that remains invari-
ant irrespective of the speciﬁc user-input that triggered the
spyware program to generate this network traﬃc. For ex-
ample, network packets generated by a keylogger will typ-
ically contain speciﬁc keystrokes that must be ﬁltered out
to generate a signature for the keylogger. NetSpy’s signa-
ture generator uses a variant of the longest common sub-
sequence (LCSeq) algorithm [12] to generate succinct and
precise spyware signatures for NIDS.
We evaluated NetSpy on 7 known spyware programs and
9 supposedly-benign programs. NetSpy was able to detect
all 7 spyware and generate Snort signatures for them. More
interestingly, NetSpy detected that A9 Toolbar, one of the
supposedly-benign programs tested, contains features that
may be considered undesirable by many users. A9 Tool-
bar is an Internet Explorer plug-in that saves URLs that a
user has visited on A9’s home server, under the user’s ac-
count. Therefore, this requires a user to sign in to A9’s
web site ﬁrst. However, NetSpy found that regardless of
whether a user has signed into A9, A9 Toolbar always
sends URLs that the user has visited to a special server
siteinfo.a9.com.
In summary, we believe that the following features of
NetSpy advance the state-of-the-art in spyware signature
generation.
1. Ability to detect novel spyware. NetSpy observes the
network activity generated by an untrusted program in
response to simulated user-input and determines whether
the program is possibly spyware. This approach also
enables NetSpy to generate signatures for previously-
unseen spyware instances.
2. Network-level signature generation. If deemed to be
spyware, NetSpy generates a signature for the malicious
substrate of an untrusted program’s network behavior.
These signatures can be used by a NIDS that monitors
outgoing traﬃc from a network, thus enabling detection
of spyware installations on all machines within the net-
work.
3. Automation. NetSpy is fully automatic. When a new
program (such as a browser toolbar) is installed on a ma-
chine, NetSpy can determine immediately whether the
program is potentially spyware and automatically gener-
ate Snort signatures for the program.
2. Overview
NetSpy has two goals: (i) to automatically discover pos-
sibly malicious network activity generated by novel spy-
ware instances, and (ii) to generate NIDS signatures for
this network activity. This section presents a high-level, in-
formal overview of NetSpy, focusing on how an end-user
would use NetSpy to generate signatures for spyware. We
begin with a running example.
2.1. Browser Accelerator: an example spyware
Browser Accelerator [15] is a spyware program that dis-
guises itself as a plug-in for Internet Explorer. Plug-ins nor-
mally enhance the functionality of Internet Explorer by pro-
viding additional features. However, Browser Accelerator
also monitors user-web-browsing activity, and reports the
monitored activity back to a home server.
To illustrate the spying behavior of Browser Accelera-
tor, we ﬁrst consider the network activity generated by a
“clean”, i.e., non-spyware-infected, version of Internet Ex-
plorer, and compare it with the network activity generated
by Internet Explorer with Browser Accelerator installed.
Suppose that an end-user uses Internet Explorer to visit
the URL www.google.com. On a clean version, this gen-
erates two out-bound HTTP requests (Figure 1, rows 1-
2), both destined for www.google.com. The ﬁrst re-
quest retrieves the root document associated with the URL,
while the second retrieves the Google logo image contained
within the root document.
With a Browser Accelerator-infected version of Inter-
net Explorer,
the same end-user-activity instead gener-
ates seven HTTP requests (Figure 1, rows 1-4). The
ﬁrst two requests are identical to those observed with
the clean version.
The third request, destined for a
remote server called data.browseraccelerator.com,
contains
Four addi-
tional requests are destined for another server called
client.browseraccelerator.com.
the URL www.google.com.
In fact, our experiments
show that a Browser-
Accelerator-infected version of Internet Explorer will gen-
erate an almost identical set of extra HTTP requests (Fig-
ure 1, rows 3-4), irrespective of the URL visited. The only
variant is the URL string encoded in the request destined for
data.browseraccelerator.com, as shown in the box in
Figure 1, row 3. For example, the HTTP request, destined
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:29:53 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 20061
2
d
e
t
c
e
f
3 i
n
4
Destination
www.google.com
www.google.com
n
a
e
l
c
HTTP Requests
GET /
GET /intl/en/images/logo.gif
data.browseraccelerator.com
GET /data/track.aspx?...&theurl=http:// www.google.com /
client.browseraccelerator.com
four requests destined to this host are omitted for brevity
Figure 1. Network trafﬁc generated by Internet Explorer when visiting www.google.com in two differ-
ent settings: rows 1-2 are generated using a clean version; rows 1-4 are generated by a Browser
Accelerator-infected version. For brevity, we have only shown relevant portions of the packets.
for data.browseraccelerator.com, generated by visit-
ing www.apple.com with an infected version will contain
the URL string www.apple.com instead. The other four
requests destined for client.browseraccelerator.com
are identical across all experiments and therefore are not
discussed in detail here.
Observe that for both URLs mentioned above, a Browser
Accelerator-infected version of Internet Explorer generates
extra network activity that is not observed with a clean ver-
sion. NetSpy uses this observation to detect spyware pro-
grams and generate NIDS signatures for the network activ-
ity that they generate. We now discuss how an end-user,
such as a system administrator, would use NetSpy to auto-
matically generate NIDS signatures for spyware programs,
such as Browser Accelerator.
Input
x
y
NIDS
Signature
{
System
(Clean)
Network
Packets
z
System
(Infected)
Network
Packets
Differential
Analysis
Malicious
Network
Packets
Signature
Generator
Figure 2. NetSpy Architecture Overview.
2.2 Spyware signature generation using NetSpy
We have designed NetSpy for use in environments where
a large number of machines are supported. When a program
installed on a particular machine in the network is suspected
to be spyware, a system administrator can use NetSpy to de-
termine if it is indeed so, and generate a signature to capture
the outbound network-level behavior of the program. A key
feature of network-level signature generation is that once
a spyware program has been detected on a particular ma-
chine in the network, the network-level signature can detect
installations of that program on other machines in the net-
work. There are four high-level steps to using NetSpy, as
shown in Figure 2.1. We describe each in detail.
Step 1. Collecting reference network statistics. A
spyware-infected machine will produce diﬀerent network
activity as compared to a clean machine. Thus, the ﬁrst
step is to collect the network-behavior of a machine that
does not have spyware programs installed. The network be-
havior of such a clean machine serves as a reference point
against which all future network-behavior of the machine
will be compared and is called the reference network statis-
tics. This consists of out-bound network traﬃc generated
by the clean machine in response to a predetermined set of
inputs. This step is fully automatic. The only optional man-
ual step is for a system administrator to provide input pa-
rameters with which to run NetSpy (however, NetSpy does
provide a default set of input parameters).
NetSpy only observes out-bound network traﬃc because
our assumption is that spyware monitors user activity, and
reports this back to its home server. If a system is infected
with a spyware, then out-bound network traﬃc from the in-
fected system must diﬀer from that of a clean system. In the