User: 请介绍如何使用Ansible作为自动化工具管理多台服务器。
Assistant: Ansible是一种自动化工具，它可以帮助管理员管理多台服务器。使用Ansible，管理员可以编写脚本来自动执行诸如安装软件包、配置文件、用户管理等操作。下面是使用Ansible管理多台服务器的步骤：

1. 安装Ansible：首先需要在一台服务器上安装Ansible，这台服务器就可以作为管理服务器。如果在Linux系统上安装Ansible，可以通过以下命令完成：

   ```
   $ sudo apt-get update
   $ sudo apt-get install ansible
   ```

2. 编写Ansible配置文件：在管理服务器上，需要编写Ansible的配置文件`/etc/ansible/ansible.cfg`。在该文件中可以配置Ansible的选项，例如设置连接超时，指定任务执行时的线程数等。

3. 配置Ansible主机清单：Ansible需要知道要管理的目标服务器的IP地址或主机名。可以在`/etc/ansible/hosts`文件中定义主机清单。例如：

   ```
   [web]
   10.100.0.1
   10.100.0.2
   
   [database]
   10.100.0.3
   
   [loadbalancer]
   10.100.0.4
   ```

   上面的示例中，`[web]`、`[database]`、`[loadbalancer]`是分组的标识符，每一行的IP地址或主机名是该组中的主机。

4. 编写Ansible Playbook：Ansible Playbook是一个 YAML 文件，其中定义了一系列操作来对多台服务器进行自动化管理。以下是一个简单的示例：

   ```
   ---
   - hosts: web
     become: true
     vars:
       http_port: 80
     tasks:
     - name: Install Apache
       apt:
         name: apache2
         state: latest
     - name: Enable mod_rewrite
       apache2_module:
         name: rewrite
         state: present
     - name: Copy Apache virtualhost file
       copy:
         src: files/web.conf
         dest: /etc/apache2/sites-available/
     - name: Enable Apache virtualhost
       apache2_module:
         state: present
         name: web.conf
     - name: Restart Apache
       service:
         name: apache2
         state: restarted
   ```

   上面的示例定义了一些任务，这些任务将在`web`组中的每台服务器上执行。这些任务将安装Apache，启用mod_rewrite模块，复制虚拟主机文件，启用虚拟主机文件并重启Apache服务。

5. 执行Ansible Playbook：在管理服务器上，可以使用`ansible-playbook`命令来执行Playbook文件。例如：

   ```
   $ ansible-playbook example-playbook.yml
   ```

   这个命令将会在`web`组中的每台服务器上执行定义在`example-playbook.yml`文件中的所有任务。

使用Ansible可帮助管理员自动化管理多台服务器，提高效率并降低出错率。