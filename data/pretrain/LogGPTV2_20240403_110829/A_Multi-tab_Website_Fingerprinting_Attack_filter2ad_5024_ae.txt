### 5. Evaluation of Split Time Impact on TPR and FPR

| TPR (%) | 62.56 | 62.58 | 62.56 |
| --- | --- | --- | --- |
| FPR (%) | 12.0 | 10.86 | 9.88 |
| Our TPR (%) | 66.04 | 66.68 | 65.64 |
| Our FPR (%) | 0.2 | 0.1 | 0.1 |

We observe that if we use data with a split time shorter than the actual split time to train classifiers, the True Positive Rate (TPR) for page classification decreases due to the loss of useful training data. Figure 11 illustrates the TPR for different split times on the Tor_two dataset. For example, when the true delay is three seconds and only the first two seconds are used for training, the TPR decreases by approximately 5% because the information from the third second is lost. Similarly, if the split time is longer than the true delay, the TPR also decreases as the inappropriate split time includes features from the next page. However, the accuracy remains relatively stable even when more noise is included in the training data. Our WF attack dynamically identifies the optimal split time, ensuring that useful information is not wasted and noise is not mixed into the features. This allows us to effectively construct the attack in practice.

### 6.5 Evaluation with More Than Two Tabs

We used Selenium to collect datasets with more than two tabs. Initially, we load a random page and then request subsequent pages with random delays, generating datasets with three and four tabs, each containing 5000 samples. We used half of the datasets for training our page split classifier and the other half for testing. We found that the split accuracy with more than two pages is generally lower compared to two-tab pages, but we still achieve around 70% split accuracy. The split accuracy across different numbers of pages is similar, possibly because the probability of overlapping the first page decreases as the number of pages increases. Notably, existing attacks struggle to classify multi-web pages, making our attack effective even with more than two tabs.

### 7. Conclusion and Future Work

In this paper, we introduced two new algorithms to relax the Single Page Assumption, an unrealistic assumption that all WF attacks have relied on. For a client visiting two pages, where the time between the two pages is demarcated by a split point, we developed a classifier that works with minimal data and applied it to an initial chunk of packets before the split point.

First, we demonstrated that our new WF classifier achieves a higher TPR compared to previous best WF classifiers on an initial chunk of data. In a closed-world Tor scenario, we achieved a TPR of 77.08% on Tor with a six-second split time and 93.88% on SSH using only the first two seconds of the initial chunk, outperforming CUMUL by Panchenko et al. and k-FP by Hayes et al. We observed that our classifier's accuracy slightly decreased when using more than two seconds of data on SSH, possibly due to the limited number of instances. However, using just the first two seconds of the initial chunk, we achieved the highest TPR, suggesting that split finding is not necessary on SSH, and we should simply use two seconds of data for classification. Finding the correct split point is still essential for the Tor scenario.

Second, we described a new split finding algorithm to identify the correct split point for the Tor scenario. Our algorithm uses BalanceCascade to address the class size imbalance between false and true split classes. We employ an ensemble of forests of regression trees, each using XGBoost, a novel gradient tree boosting technique by Chen and Guestrin. Our algorithm outperformed the previous state-of-the-art, timekNN by Wang et al.

In summary, combining the split finding algorithm with our random forest classifier, we achieved an overall TPR of 64.94% on Tor and 92.58% on SSH. Our work is the first to show that it is possible to perform WF against a client who visits multiple pages simultaneously.

### Acknowledgments

We would like to thank our shepherd Alexandros Kapravelos and the anonymous reviewers for their insightful comments. This work was supported in part by the National Key R&D Program of China under Grant 2016YFB0800102, the National Natural Science Foundation of China under Grants 61572278, U1736209, 61602122, and 71731004, the Natural Science Foundation of Shanghai under Grant 16ZR1402200, and the Shanghai Pujiang Program under Grant 16PJ1400700. Qi Li is the corresponding author of this paper.

### References

[1] Pablo Bermejo, José A Gámez, and José M Puerta. 2014. Speeding up Incremental Wrapper Feature Subset Selection with Naive Bayes Classifier. Knowledge-Based Systems 55 (2014), 140–147.
[2] George Dean Bissias, Marc Liberatore, David Jensen, and Brian Neil Levine. 2005. Privacy vulnerabilities in encrypted HTTP streams. In International Workshop on Privacy Enhancing Technologies. Springer, 1–11.
...
[27] Tao Wang and Ian Goldberg. 2016. On Realistically Attacking Tor with Website Fingerprinting. Proceedings on Privacy Enhancing Technologies 2016, 4 (2016), 21–36.
[28] Charles V Wright, Scott E Coull, and Fabian Monrose. 2009. Traffic Morphing: An Efficient Defense Against Statistical Traffic Analysis.. In NDSS.

### A. Additional Features in the Feature Set

This section outlines additional features used in our attack. Combined with the features shown in Section 5, our attack outperforms CUMUL and k-FP.

- **Cumulative Size of Packets without MTU Size (CSOPWMS)**: Similar to CRFONF, this feature excludes packets larger than 1448 bytes from the network flow, with five sample points.
- **Quantity of Incoming Packets in the First 20 Packets**: Counts the number of incoming packets in the first 20 packets of the network flow.
- **URL Length**: The size of the first outgoing packet, which is a request to the server’s HTML document.
- **Statistics of Packet Quantity**: Total number of packets, number of incoming packets, and the fraction of incoming packets relative to total packets.
- **Statistics of Packet Size**: Total size of outgoing packets, total size of incoming packets, and the fraction of incoming packet size relative to total packet size.
- **Quantities and Sizes of Incoming and Outgoing Packets**: Quantities and sizes of incoming and outgoing packets, with outgoing packet sizes rounded to the nearest multiple of 100.
- **Document Length**: If the second outgoing packet is sent at time \( t \), we consider all incoming packets before \( t + RTT \) as the document length. The HTML document contains text and object links, which are more constant in size compared to changeable objects like images. This feature may not be applicable in Tor, as Tor can send multiple outgoing packets in a row at the start.
- **Transmission Speed of Packets**: Computes the speed of incoming and outgoing packets by dividing 1 by the inter-arrival time and sampling the list to 20 samples.
- **Vector Inner Product Using Packet Length**: Similar to FLLD, we compare the distance of two instances using the inner vector product of the bag of packet lengths.

### B. Feature Selection

The following tables illustrate the selected features from various datasets. As shown in Table 12, most FLLD features are included in the feature subset of SSH_normal. However, features related to packet transmission speed are less frequently included. Time-related features are more important, accounting for almost 10% of the total features. The Tor_normal dataset with a two-second split time uses only one CSOP feature and has the second smallest subset among all datasets. When the split time is three seconds, features related to outgoing packets play a key role, comprising about 20% of the total features. The HTTPOS split and Traffic morphing datasets use similar features to those in SSH_normal. The Decoy pages dataset has the largest subset among all datasets, and both BuFLO and Decoy pages datasets use many features related to time and FLLD.

**Table 12: Most Useful Features Selected from the SSH_normal Dataset**

| No. | Description of Features |
| --- | --- |
| 1 | RTT |
| 2 | Average packet number before every incoming packet |
| 3 | The 2-4th burst number packet |
| 4 | The 1-5th burst size packet |
| 5 | The 2-6th, 8-11th, 29th, 98-99th cumulative packet |
| 6 | The 5th cumulative without MTU packet |
| 7 | First quartile of outgoing transmission time |
| 8 | First quartile of incoming transmission time |
| 9 | First quartile of transmission time |
| 10 | The 1st in size speed packet |
| 11 | Incoming packet number ratio in the first 20 packets |
| 12 | Incoming size |
| 13 | Maximum inter-arrival time of incoming packets |
| 14 | Maximum inter-arrival time of total packets |
| 15 | Minimum inter-arrival time of incoming packets |
| 16 | The 1st number speed packet |
| 17 | The 3-5th out number speed packet |
| 18 | The 4th out size speed packet |
| 19 | Outgoing packet number |
| 20 | Outgoing packet number in the first 20 packets |
| 21 | Outgoing packet number ratio in the first 20 packets |
| 22 | Outgoing packet size ratio |
| 23 | Rounded document length |
| 24 | Rounded incoming size |
| 25 | Second quartile of transmission time |
| 26 | Total size |
| 27 | The 1-4th, 6th, 8th, 12th, 16-17th, 19-23th, 26th, 28-31st, 33-35th, 39-40th, 42nd, 44th, 46-50th website similarity by fast edit distance |
| 28 | 16th, 18th, 31st, 35th website similarity by Jaccard |

**Table 13: Most Useful Features Selected from the Tor_normal Dataset (Split Time: 2 Seconds)**

| No. | Description of Features |
| --- | --- |
| 1 | Average packet number before every incoming packet |
| 2 | Standard deviation of packet number before every incoming packet |
| 3 | Minimum inter-arrival time of outgoing packets |
| 4 | Second quartile of transmission time |
| 5 | Rounded incoming size |
| 6 | The 2nd out number speed packet |
| 7 | The 3rd, 6th, 10th in size speed packet |
| 8 | The 2-3rd out size speed packet |
| 9 | The 2nd cumulative packet |
| 10 | The 1st, 3rd burst size packet |
| 11 | The 1-3rd burst number packet |
| 12 | The 21st, 37th, 40th website similarity by vector |
| 13 | The 22nd, 24th, 31st, 46th website similarity by fast edit distance |

**Table 14: Most Useful Features Selected from the Tor_normal Dataset (Split Time: 3 Seconds)**

| No. | Description of Features |
| --- | --- |
| 1 | Average packet number before every incoming packet |
| 2 | Standard deviation of packet number before every incoming packet |
| 3 | Minimum inter-arrival time of outgoing packets |
| 4 | Second quartile of transmission time |
| 5 | Rounded incoming size |
| 6 | The 2nd out number speed packet |
| 7 | The 3rd, 6th, 10th in size speed packet |
| 8 | The 2-3rd out size speed packet |
| 9 | The 2nd cumulative packet |
| 10 | The 1st, 3rd burst size packet |
| 11 | The 1-3rd burst number packet |
| 12 | The 21st, 37th, 40th website similarity by vector |
| 13 | The 22nd, 24th, 31st, 46th website similarity by fast edit distance |