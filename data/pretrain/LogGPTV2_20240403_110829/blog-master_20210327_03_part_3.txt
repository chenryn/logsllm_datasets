error hint:  
                       QUERY PLAN                         
--------------------------------------------------------  
 Hash Join  
   Hash Cond: (t3.id = t1.id)  
   ->  Seq Scan on t3  
   ->  Hash  
         ->  Merge Join  
               Merge Cond: (t1.id = t4.id)  
               ->  Merge Join  
                     Merge Cond: (t1.id = t2.id)  
                     ->  Index Scan using t1_pkey on t1  
                     ->  Index Scan using t2_pkey on t2  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
(13 rows)  
/*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
IndexScan(t3)  
NestLoop(t1 t2 t3 t4)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+NoNestLoop(t4 t1 t3 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
NoNestLoop(t1 t2 t3 t4)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
         ->  Index Scan using t2_pkey on t2  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
(13 rows)  
/*+Leading( */  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
INFO:  pg_hint_plan: hint syntax error at or near ""  
DETAIL:  Closing parenthesis is necessary.  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading( )*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
INFO:  pg_hint_plan: hint syntax error at or near "Leading( )"  
DETAIL:  Leading hint requires at least two relations.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Leading()  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading( t3 )*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
INFO:  pg_hint_plan: hint syntax error at or near "Leading( t3 )"  
DETAIL:  Leading hint requires at least two relations.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Leading(t3)  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading( t3 t4 )*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(t3 t4)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Nested Loop  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
         ->  Index Scan using t2_pkey on t2  
               Index Cond: (id = t3.id)  
   ->  Index Scan using t1_pkey on t1  
         Index Cond: (id = t2.id)  
(12 rows)  
/*+Leading(t3 t4 t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(t3 t4 t1)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t3.id = t1.id)  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
         ->  Index Scan using t1_pkey on t1  
   ->  Index Scan using t2_pkey on t2  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading(t3 t4 t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(t3 t4 t1 t2)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t3.id = t1.id)  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
         ->  Index Scan using t1_pkey on t1  
   ->  Index Scan using t2_pkey on t2  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading(t3 t4 t1 t2 t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
INFO:  pg_hint_plan: hint syntax error at or near "Leading(t3 t4 t1 t2 t1)"  
DETAIL:  Relation name "t1" is duplicated.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Leading(t3 t4 t1 t2 t1)  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
/*+Leading(t3 t4 t4)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
INFO:  pg_hint_plan: hint syntax error at or near "Leading(t3 t4 t4)"  
DETAIL:  Relation name "t4" is duplicated.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Leading(t3 t4 t4)  
                    QUERY PLAN                      
--------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(12 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;  
                  QUERY PLAN                     
-----------------------------------------------  
 Nested Loop  
   ->  Values Scan on "*VALUES*"  
   ->  Index Scan using t1_pkey on t1  
         Index Cond: (id = "*VALUES*".column1)  
(4 rows)  
/*+HashJoin(t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
HashJoin(t1 t2)  
duplication hint:  
error hint:  
                  QUERY PLAN                     
-----------------------------------------------  
 Nested Loop  
   ->  Values Scan on "*VALUES*"  
   ->  Index Scan using t1_pkey on t1  
         Index Cond: (id = "*VALUES*".column1)  
(4 rows)  
/*+HashJoin(t1 *VALUES*)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(*VALUES* t1)  
not used hint:  
duplication hint:  
error hint:  
                QUERY PLAN                   
-------------------------------------------  
 Hash Join  
   Hash Cond: (t1.id = "*VALUES*".column1)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Values Scan on "*VALUES*"  
(5 rows)  
/*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
IndexScan(t1)  
HashJoin(*VALUES* t1)  
not used hint:  
IndexScan(*VALUES*)  
duplication hint:  
error hint:  
                QUERY PLAN                   
-------------------------------------------  
 Hash Join  
   Hash Cond: (t1.id = "*VALUES*".column1)  
   ->  Index Scan using t1_pkey on t1  
   ->  Hash  
         ->  Values Scan on "*VALUES*"  
(5 rows)  
-- single table scan hint test  
EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id   Result  
           InitPlan 1 (returns $0)  
             ->  Limit  
                   ->  Index Only Scan Backward using t1_pkey on t1 v_1  
                         Index Cond: ((id IS NOT NULL) AND (id   Result  
           InitPlan 3 (returns $2)  
             ->  Limit  