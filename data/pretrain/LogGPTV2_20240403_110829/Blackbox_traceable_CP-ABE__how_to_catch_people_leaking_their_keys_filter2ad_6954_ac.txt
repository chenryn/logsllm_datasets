(ki, Ski ), and the challenger responds with SKki,Ski
Guess. A outputs a guess b′ ∈ {0, 1} for b.
GameA
MH1 . In the Challenge phase the challenger sends CT ←
EncryptA(PP, Mb, A∗, 1) to A. A wins the game if b′ = b un-
der the restriction that A∗ cannot be satisﬁed by any of
the queried attribute sets Sk1 , . . . , Skq . The advantage of A
is deﬁned as MHA
public parameter PP to A.
and the challenger responds with SKki,Ski
MHK+1 ).
.
1 AdvA = | Pr[b′ = b] − 1
2|.
MHK+1 .
GameA
In the Challenge phase the challenger sends
CT ← EncryptA(PP, Mb, A∗,K + 1) to A. A wins the game
if b′ = b. The advantage of A is deﬁned as MHA
K+1AdvA =
| Pr[b′ = b] − 1
2|.
Definition 3. A K-user Augmented CP-ABE system is
message-hiding if for all polynomial-time adversaries A the
advantages MHA
K+1AdvA are negligible in λ.
1 AdvA and MHA
GameA
IH. In the third game, index-hiding game, for any
non-empty attribute set S∗ ⊆ U, we deﬁne the strictest
access policy as AS ∗ = Vx∈S ∗ x, and require that an
adversary cannot distinguish between an encryption using
(AS ∗, ¯k) and (AS ∗, ¯k + 1) without a private decryption key
where S¯k ⊇ S∗. The game takes as input a parame-
SK¯k,S¯k
ter ¯k ∈ {1, . . . ,K} which is given to both the challenger and
the adversary A. The game proceeds as follows:
Setup. The challenger runs SetupA(λ,U, K) and gives the
Key Query. For i = 1 to q, A adaptively submits (ki, Ski ),
public parameter PP to A.
and the challenger responds with SKki,Ski
.
479Challenge. A submits a message M and a non-empty
attribute set S∗. The challenger ﬂips a random coin
b ∈ {0, 1}, and sends CT ← EncryptA(PP, M, AS ∗, ¯k +
b) to A.
Guess. A outputs a guess b′ ∈ {0, 1} for b.
A wins the game if b′ = b under the restriction that
none of the queried pairs {(ki, Ski )}1≤i≤q can satisfy (ki =
¯k) ∧ (Ski satisﬁes AS ∗), i.e.
(ki = ¯k) ∧ (Ski ⊇ S∗). The
advantage of A is deﬁned as IHAAdvA[¯k] = | Pr[b′ = b] − 1
2|.
Definition 4. A K-user Augmented CP-ABE system is
index-hiding if for all polynomial-time adversaries A the ad-
vantages IHAAdvA[¯k] for ¯k = 1, . . . ,K are negligible in λ.
3.2 Reducing BT-CP-ABE to AugCP-ABE
We now show that an AugCP-ABE with message-hiding
and index-hiding implies a secure and traceable BT-CP-
ABE. Let ΣA = (SetupA, KeyGenA, EncryptA, DecryptA) be
an AugCP-ABE with message-hiding and index-hiding, de-
ﬁne Encrypt(PP, M, A) = EncryptA(PP, M, A, 1), then Σ =
(SetupA, KeyGenA, Encrypt, DecryptA) is a BT-CP-ABE de-
rived from ΣA, and the tracing algorithm is deﬁned as
TraceD(PP, SD, ǫ) → KT ⊆ {1, . . . ,K}: Given a key-like de-
cryption blackbox D associated with a non-empty attribute
set SD and probability ǫ > 0, the tracing algorithm works
as follows: 1
1. For k = 1 to K + 1, do the following:
(a) The algorithm repeats the following 8λ(K/ǫ)2 times:
i. Sample M from the message space at random.
ii. Let CT ← EncryptA(PP, M, ASD , k), where
iii. Query oracle D on input CT which contains
ASD , and compare the output of D with M .
(b) Let ˆpk be the fraction of times that D decrypted
ASD is the strictest access policy of SD.
the ciphertexts correctly.
2. Let KT be the set of all k ∈ {1, . . . ,K} for which ˆpk −
ˆpk+1 ≥ ǫ/(4K). Then output KT as the index set of
the private decryption keys of malicious users.
Remark: Note that the strictest access policy used in the
index-hiding game GameA
IH and the tracing algorithm Trace
does not impose any limitation to traceable CP-ABE. In-
stead, it is an eﬃcient way to ensure that the traced mali-
cious users are the reasonable suspects. As a key-like decryp-
tion blackbox D is advertised that it functions like a private
decryption key with attribute set SD, a ciphertext associ-
ated with the strictest access policy ASD will be decrypted
by D accordingly. Although it might look more appealing
to have the index-hiding property for any access policy, the
following Theorem 1 shows that the strictest access policy
is suﬃcient for ensuring the traceability against key-like de-
cryption blackbox for the derived BT-CP-ABE scheme.
Theorem 1. If ΣA is an AugCP-ABE with message-hiding
and index-hiding properties, then Σ is a secure and traceable
BT-CP-ABE.
1The tracing algorithm uses a technique based on that in
broadcast encryption by [5, 6, 9].
Proof. Note that Σ is a special case of ΣA where the
encryption algorithm always sets ¯k = 1. Hence, GameMH
for Σ is identical to GameA
MH1 for ΣA, which implies that
MHAdvA for Σ in GameMH is equal to MHA
1 AdvA for ΣA in
GameA
MH1 ), then Σ
is secure.
MH1 , i.e., if ΣA is message-hiding (in GameA
Now we show that if ΣA is message-hiding (in GameA
MHK+1 )
and index-hiding, Σ is traceable. In the proof sketch below,
which is based on that of [5, 6, 9], we show that if the key-
like decryption blackbox output by the adversary is a useful
one then the traced KT will satisfy (KT 6= ∅)∧ (KT ⊆ KD)∧
(∃kt ∈ KT s.t. Skt ⊇ SD) with overwhelming probability,
which implies that the adversary can win the game GameTR
only with negligible probability, i.e., TRAdvA is negligible.
Let D be the key-like decryption blackbox output by the
adversary, and SD be the attribute set describing D. Deﬁne
p¯k = Pr[D(EncryptA(PP, M, ASD , ¯k)) = M ],
For any k ∈ KT (i.e., ˆpk − ˆpk+1 ≥ ǫ
where the probability is taken over the random choice of
message M and the random coins of D. We have that p1 ≥ ǫ
and pK+1 is negligible. The former follows the fact that D is
a useful key-like decryption blackbox, and the later follows
that ΣA is message-hiding (in GameA
MHK+1 ). Then there must
exist some k ∈ {1, . . . ,K} such that pk − pk+1 ≥ ǫ/(2K).
By the Chernoﬀ bound it follows that with overwhelming
probability, ˆpk − ˆpk+1 ≥ ǫ/(4K). Hence, we have KT 6= ∅.
4K ), we know, by
Chernoﬀ, that with overwhelming probability pk − pk+1 ≥
ǫ/(8K). Clearly (k ∈ KD) ∧ (Sk ⊇ SD) since otherwise, D
can be directly used to win the index-hiding game for ΣA.
Hence, we have (KT ⊆ KD) ∧ (SD ⊆ Sk ∀k ∈ KT ).
4. AN EFFICIENT AUGMENTED CP-ABE
Now we construct an AugCP-ABE scheme that is as se-
cure and expressive as the CP-ABE scheme in [16]. To ob-
tain traceability in the derived BT-CP-ABE scheme we will
use the standard tracing techniques which were used by [5,
6, 9] in the setting of broadcast encryption. The challenge
is to apply the tracing techniques to the setting of CP-ABE
securely and eﬃciently.
4.1 Preliminaries
Before proposing a concrete construction for AugCP-ABE,
we ﬁrst review some preliminaries.
Linear Secret-Sharing Schemes. As of previous work,
we use linear secret-sharing schemes (LSSS) to realize mono-
tonic access structures which specify the access policies as-
sociated with ciphertexts. The formal deﬁnitions of access
structures and LSSS can be found in [24, 15, 16]. Informally,
an LSSS is a share-generating matrix A whose rows {Ai} are
labeled by attributes through a function ρ. When we con-
sider the column vector ~v = (s, r2, . . . , rn), where s ∈ Zp is
the secret to be shared and r2, . . . , rn ∈ Zp are randomly
chosen, A~v is the vector of l shares of the secret s, and the
share λi = (A~v)i, i.e. the inner product Ai · ~v, belongs to
attribute ρ(i). A user’s attribute set S satisﬁes the LSSS
access matrix if the rows labeled by the attributes in S have
the linear reconstruction property, which means that there
exist constants {ωi} such that, for any valid shares {λi} of a
secret s according to the LSSS matrix, we have Pi ωiλi = s.
Essentially, a user will be able to decrypt a ciphertext with
480access matrix A if and only if the rows of A labeled by the
user’s attributes include the vector (1, 0, . . . , 0) in their span.
Composite Order Bilinear Groups. Let G be a group
generator, which takes a security parameter λ and outputs
(p1, p2, p3, G, GT , e) where p1, p2, p3 are distinct primes, G
and GT are cyclic groups of order N = p1p2p3, and e :
G×G → GT a map such that: (1) (Bilinear) ∀g, h ∈ G, a, b ∈
ZN , e(ga, hb) = e(g, h)ab, (2) (Non-Degenerate) ∃g ∈ G such
that e(g, g) has order N in GT . Assume that group opera-
tions in G and GT as well as the bilinear map e are com-
putable in polynomial time with respect to λ. Let Gp1 , Gp2
and Gp3 be the subgroups of order p1, p2 and p3 in G, re-
spectively. These subgroups are “orthogonal” to each other
if hi ∈ Gpi and hj ∈ Gpj for
under the bilinear map e:
i 6= j, then e(hi, hj) = 1 (the identity element in GT ). More
details can be found in [15, 16].
Complexity Assumptions. The message-hiding property
of our AugCP-ABE scheme will rely on four assumptions
(the Assumption 1 in [16], the General Subgroup Decision
Assumption, the 3-Party Diﬃe-Hellman Assumption in a
Subgroup, and the Source Group q-Parallel BDHE Assump-
tion in a Subgroup), which are used in [16] to achieve full
security of their CP-ABE scheme while eliminating the one-
use restriction. The index-hiding property will rely on two
assumptions (3-Party Diﬃe-Hellman Assumption and Deci-
sional Linear Assumption) that are used in [6] to achieve
traceability in the setting of broadcast encryption. We refer
to [16, 6] for the details of these assumptions.
Notations. Suppose the number of users K in the sys-
tem equals m2 for some m 2. We arrange the users in
an m × m matrix and uniquely assign a tuple (i, j) where
1 ≤ i, j ≤ m, to each user. A user at position (i, j) of the
matrix has index k = (i − 1) ∗ m + j. For simplicity, we
directly use (i, j) as the index where (i, j) ≥ (¯i, ¯j) means
that ((i > ¯i) ∨ (i = ¯i ∧ j ≥ ¯j)). The use of pairwise notation
(i, j) is purely a notational convenience, as k = (i − 1) ∗
m + j deﬁnes a bijection between {(i, j)|1 ≤ i, j ≤ m} and
{1, . . . ,K}. For a positive integer, say m, by [m] we mean
the set {1, 2, . . . , m}. For a given vector ~v = (v1, . . . , vd), by
g~v we mean the vector (gv1 , . . . , gvd). Furthermore, for g~v =
(gv1 , . . . , gvd) and g ~w = (gw1 , . . . , gwd ), by g~v · g ~w we mean
the vector (gv1+w1 , . . . , gvd+wd ), i.e. g~v · g ~w = g~v+ ~w, and
by ed(g~v, g ~w) we mean Qd
k=1 e(gvk , gwk ), i.e. ed(g~v, g ~w) =
Qd
k=1 e(gvk , gwk ) = e(g, g)(~v· ~w) where (~v · ~w) is the inner
product of ~v and ~w. Given a bilinear group order N , one can
randomly choose rx, ry, rz ∈ ZN , and set ~χ1 = (rx, 0, rz),
~χ2 = (0, ry, rz), ~χ3 = ~χ1 × ~χ2 = (−ryrz,−rxrz, rxry). Let
span{~χ1, ~χ2} be the subspace spanned by ~χ1 and ~χ2, i.e.
span{~χ1, ~χ2} = {ν1 ~χ1 + ν2 ~χ2|ν1, ν2 ∈ ZN}. We can see that
~χ3 is orthogonal to the subspace span{~χ1, ~χ2} and Z3
N =
span{~χ1, ~χ2, ~χ3} = {ν1 ~χ1 + ν2 ~χ2 + ν3 ~χ3|ν1, ν2, ν3 ∈ ZN}.
For any ~v ∈ span{~χ1, ~χ2}, we have (~χ3 · ~v) = 0, and for
random ~v ∈ Z3
N , (~χ3 · ~v) 6= 0 occurs with overwhelming
probability.
4.2 Our Approach
Note that the Traitor Tracing schemes in broadcast en-
cryption [5, 6, 9] achieved fully collusion-resistant blackbox
traceability at the cost of sub-linear overhead, which is the
2If the number of users is not a square, we add some
“dummy” users to pad to the next square.
most eﬃcient level to date. It will be tempting to try in a
straightforward way to combine such a Traitor Tracing sys-
tem and a CP-ABE for obtaining a BT-CP-ABE. However,
the resulting system cannot achieve the desired security (i.e.
strong traceability). Consider the following (misguided) ap-
proach. Suppose that we created both a CP-ABE and a
Traitor Tracing system each for K users, where each user
has the same index in both systems. To encrypt a mes-
sage M , an algorithm splits the message randomly into two
pieces MP and MI such that MP · MI = M , then encrypts
MP under CP-ABE and MI under the Traitor Tracing sys-
tem. To decrypt, we need to decrypt under both systems.
However, such an approach can only provide weak traceabil-
ity3. In particular, if two users, Alice with attribute set SA
in CP-ABE and index kA in both systems, and Bob with
attribute set SB in CP-ABE and index kB in both systems,
collude to make a decryption blackbox D with attribute set
SD ⊆ SA, while SB ∩ SA = ∅. The blackbox uses Alice’s key
(the part corresponding to SA) to decrypt the ciphertext
from the CP-ABE system and Bob’s key (the part corre-
sponding to kB) to decrypt the ciphertext from the Traitor
Tracing system. The tracing algorithm would identify Bob
as a malicious user, but SB is uncorrelated to SD.
The idea behind the techniques of achieving strong trace-
ability is to set a user’s private decryption key such that it
must be simultaneously used in both CP-ABE and the Trac-
ing part in a BT-CP-ABE. Boneh and Waters [6] handled
a similar situation where they intertwined a broadcast en-
cryption scheme [4] and a Traitor Tracing scheme [5] to build
an Augmented Broadcast Encryption (AugBE) scheme. In-
spired by their approach, we tried to intertwin a CP-ABE
[16] and a Traitor Tracing system [9] to build an AugCP-
ABE scheme. The obstacle comes from the setting that in
CP-ABE the decryption privilege of a user is determined by
his attributes rather than by his index as in broadcast en-
cryption. In particular, in AugBE [6, 9], the indices of users
are simultaneously used to determine users’ decryption priv-
ilege (for broadcast encryption part) and to identify users
(for Tracing), and the construction and the proof of index-
hiding of AugBE [6, 9] are based on this fact. In contrast,
in BT-CP-ABE, the attributes are used to determine users’
decryption privilege (for CP-ABE part) while the indices are
used to identify users (for Tracing part), and to intertwine
the two essentially uncorrelated parts, we need new ideas
and techniques.
A straightforward combination will result in schemes that
are either not provable or ineﬃcient with ciphertext of size
following, based on the CP-ABE in [16] with our particular
designs and contructions, we propose a secure AugCP-ABE
O(√K · |A|) where |A| is the size of an access policy. In the
which is also eﬃcient with ciphertext of size O(√K + |A|).
4.3 AugCP-ABE Construction
SetupA(λ,U,K = m2) → (PP, MSK). Let G be a bilinear
group of order N = p1p2p3 (3 distinct primes, whose
size is determined by λ), Gpi the subgroup of order pi
in G (for i = 1, 2, 3), and g, f, h ∈ Gp1 , g3 ∈ Gp3 the
generators of corresponding subgroups. The algorithm
randomly chooses exponents
{αi, ri, zi ∈ ZN}i∈[m], {cj ∈ ZN}j∈[m], {ax ∈ ZN}x∈U .
3A similar approach was used in [14] to introduce weak
traceability to predicate encryption.
481The public parameter PP includes the description of