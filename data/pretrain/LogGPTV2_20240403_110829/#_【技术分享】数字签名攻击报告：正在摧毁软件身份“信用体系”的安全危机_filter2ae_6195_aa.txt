# 【技术分享】数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机

## 译文声明
本文是翻译文章，原文来源为安全客。译文仅供参考，具体内容及含义以原文为准。

---

## 背景
近期，360集团核心安全事业部发现全球范围内利用软件数字签名进行恶意攻击的活动日益频繁。这些攻击的目标包括软件开发商、个人用户以及重要的政府和企事业单位。攻击形式多样，主要包括盗用或冒用合法数字签名、以及对流行软件的大规模定向攻击等。在这些攻击中，黑客的主要目标是软件开发商，通过篡改企业发布的合法数字签名软件安装包植入恶意代码，导致用户从正规渠道下载并运行这些被污染的软件。此外，黑客还通过盗用或冒用企业数字签名批量制作“合法”的木马病毒，从而逃避杀毒软件的检测。这类攻击比传统的木马病毒更具威胁性，因为用户难以辨别其真伪，并且容易被检测机制不严格的安全软件放行，从而严重危害网络安全。

## 软件签名安全简介
“数字签名”是一种可以添加到文件中的电子安全标记，用于验证文件发布者的身份及其自签名后是否被篡改。如果文件缺乏有效的数字签名，则无法确保其来源的真实性和完整性。例如，在Windows系统中，用户账户控制（UAC）功能会在执行可能影响计算机运行的操作前要求用户确认权限。对于没有数字签名的程序，UAC会显示发布者未知，并提示用户该程序存在安全风险；而包含有效数字签名的程序则会标注已验证的发布者信息，允许用户放心运行。用户可以通过查看程序文件属性来识别和确认数字签名的有效性。

## 流行数字签名攻击形式分析
由于数字签名能够校验文件的身份和完整性，因此成为了正规软件的“身份证”。基于厂商与用户之间的信任关系，大多数安全厂商默认信任具有数字签名的程序。然而，黑客却利用这一信任关系进行攻击。他们通常会攻击合法软件的发布流程，利用各种漏洞或疏忽在签名软件包中植入恶意代码，甚至直接盗取和冒用合法软件开发商的数字签名，以此绕过安全产品的检查实施非法攻击。这种行为不仅破坏了厂商与用户间的信任关系，也损害了软件开发商的信誉，并对安全软件的查杀带来了挑战。目前，此类攻击主要分为以下三种形式：

### 软件供应链攻击
黑客在厂商的正规签名软件包中植入恶意代码。例如，NetSarang系列软件的关键网络通信组件nssock2.dll曾被植入恶意代码，随新版软件包一起发布。由于该软件广泛应用于程序员和网络运维人员，引发了大规模的定向攻击事件。

### 盗用签名攻击
黑客盗用厂商的数字签名直接签发木马病毒，或者利用已签名程序的安全漏洞发起攻击。如最近出现的恶性病毒“Kuzzle”，该病毒采用多种手段躲避安全软件查杀，盗用了某公司的数字签名签发病毒，并利用某安全厂商的已签发数字签名驱动加载执行代码。该病毒会感染用户的主引导记录（MBR）和卷引导记录（VBR），劫持浏览器首页牟利，并接受远程指令进行其他破坏活动。

### 冒用签名攻击
黑客冒用知名公司的身份资料，在境外申请知名公司的数字签名签发恶意程序。这种攻击方式使软件厂商无辜受害。例如，360集团核心安全白名单分析团队发现黑客通过伪造知名公司资料，在境外证书颁发机构申请相应公司数字证书，用于大量签发恶意私服和木马程序，多家知名公司受到影响。

## 数字签名攻击的影响
黑客针对软件数字签名进行的攻击不仅成功地对用户发动了攻击，还对厂商的信誉造成了损害。基于对软件厂商的信任，用户主动下载更新软件时中招，攻击得以广泛传播。同时，带有“身份证”的木马病毒因信任关系短时间内不易被安全软件查杀。根据抽样统计，Xshell后门的受害者数量庞大，每天数以万计。今年新增的冒用样本数量约400个，感染量约35万。受害者地域分布图显示沿海一带以浙江、辽宁和广东为主，内陆则以四川和湖南居多。

## 数字签名攻击典型案例技术分析
### XshellGhost 技术分析
近日，NetSarang旗下的Xmanager、Xshell、Xftp和Xlpd等服务器远程管理软件被发现含有高级后门。经过360集团追日团队调查分析，确认这些软件的关键模块被植入了高级后门，这是一起大规模的供应链攻击事件，命名为“XshellGhost”。

#### 远程控制步骤分析
XshellGhost的远程控制过程分为五个步骤：
1. Xshell等软件启动加载被感染组件nssock2.dll，解密并执行Shellcode1。
2. Shellcode1解密并执行Shellcode2，实现以下功能：
   - 创建注册表项，上报数据到每月对应的DGA域名。
   - 通过知名的域名解析器上传用户信息给攻击者。
   - 将接收的数据写入创建的注册表项。
   - 通过获取的key1和key2解密并执行Shellcode3。
3. Shellcode3创建日志文件并写入信息，启动系统进程Svchost.exe，修改其OEP处的代码，并注入Shellcode形式的Root模块执行。
4. Root模块初始化过程中，加载并初始化Plugins、Config、Install、Online和DNS等功能模块，调用函数Install->InstallByCfg获取配置信息，监控注册表并创建全局互斥体，调用Online->InitNet。
5. 函数Online->InitNet根据配置初始化网络相关资源，向指定服务地址发送信息，并等待云端动态下发代码进行下一步攻击。

#### 后门功能模块分析
此次攻击的所有模块调度加载均通过Shellcode形式实现，采用了模块化管理方法。后门主要分为基础管理模块（ROOT）、插件功能模块（Plugins）、C&C配置模块（Config）、代码安装模块（Install）和网络通信模块（Online）五个模块。

#### 网络通信模块分析
网络通信管理模块（Online）是本次攻击的关键模块。目前已发现DNS模块，其他几个网络模块（TCP、HTTP、UDP、HTTPS、SSL）虽然在代码中有所体现，但在Shellcode中尚未主动运行。各个网络模块的功能依赖于Online模块提供的函数接口列表。InitNet在读取网络代理配置后每隔一秒调用功能A，如果功能A返回20000，则函数彻底结束。功能A的逻辑如下：

```plaintext
- 每隔一秒调用功能A
- 如果功能A返回20000，则函数彻底结束
```

---

通过以上分析可以看出，数字签名攻击已成为当前网络安全的一大威胁。企业和用户需要提高警惕，加强防护措施，以应对这一不断演变的安全危机。