### Application Status and Balancing in IBM MQ Clusters

The following sections detail the monitoring and balancing of applications within a uniform cluster in IBM MQ, including how to interpret and use the `DIS APSTATUS` command. The text also provides guidance on using various tools for performance and resource usage monitoring.

#### Initial Application Status
```
COUNT(8) MOVCOUNT(8)
BALANCED(UNKNOWN)
TYPE (APPL)
```
This output indicates that there is an application named `MYAPP` in the uniform cluster, with eight instances, all of which are movable. The `BALANCED(UNKNOWN)` value is temporary, indicating that the queue manager has not yet attempted to rebalance the application if necessary.

#### After Rebalancing Attempt
After a short period, the output might change to:
```
COUNT(8) MOVCOUNT(8)
BALANCED(NO)
TYPE (APPL)
```
This shows that the application still has eight instances, but they are not balanced across the cluster. At this point, it is advisable to check the distribution of the application instances in the cluster.

To do this, run the `DIS APSTATUS` command again, which can be executed against any queue manager in the uniform cluster:
```
1 : DIS APSTATUS(*) type(QMGR)
```

#### Detailed Instance Distribution
The following output shows the detailed distribution of `MYAPP` instances across the queue managers:
```
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(6) MOVCOUNT(6)
BALSTATE(HIGH) LMSGDATE(2019-05-24)
LMSGTIME(13:11:10) QMNAME(UNID001)
QMID(UNID001_2019-05-24_13.09.35)

AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(1) MOVCOUNT(1)
BALSTATE(LOW) LMSGDATE(2019-05-24)
LMSGTIME(13:11:03) QMNAME(UNID002)
QMID(UNID002_2019-05-24_13.09.39)

AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(1) MOVCOUNT(1)
BALSTATE(LOW) LMSGDATE(2019-05-24)
LMSGTIME(13:11:07) QMNAME(UNID003)
QMID(UNID003_2019-05-24_13.09.43)
```
From this, you can see that `UNID001` has six instances, while `UNID002` and `UNID003` each have one. The `BALSTATE` field indicates the balance state at the last report, but note that the instance count may be more recent than the `BALSTATE` field.

#### Rebalanced State
If left to rebalance itself, the output might eventually show:
```
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(3) MOVCOUNT(3)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:14:22) QMNAME(UNID001)
QMID(UNID001_2019-05-24_13.09.35)

AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(3) MOVCOUNT(3)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:13:53) QMNAME(UNID002)
QMID(UNID002_2019-05-24_13.09.39)

AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(2) MOVCOUNT(2)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:13:47) QMNAME(UNID003)
QMID(UNID003_2019-05-24_13.09.43)
```
This indicates that the application instances are now balanced across the queue managers, with `BALSTATE(OK)` showing a steady state.

### Monitoring Individual Application Instances
You can monitor individual application instances by running the `DIS APSTATUS` command for each queue manager. For example, on `UNID001`:
```
1 : DIS APSTATUS(*) type(LOCAL)
```
Output:
```
AMQ8932I: Display application status details.
APPLNAME(MYAPP)
CONNTAG(MQCT02DFE75C02EA0A20UNID001_2019-05-24_13.09.35MYAPP)
CONNS(1) IMMREASN(NONE)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(YES)
...
```
The `MOVABLE(YES)` field indicates that the instance can be moved to another queue manager if needed.

### Tools for Monitoring IBM MQ
#### Using DISPLAY Commands
IBM MQ provides the MQSC facility to get snapshots of the system's performance and resource usage using `DISPLAY` commands. These commands provide information about the status of various components such as queues, channels, and queue managers.

#### Using CICS Adapter Statistics
Authorized CICS users can use the CICS adapter control panels to display CICS adapter statistics dynamically. These statistics provide a snapshot of CICS thread usage and situations when all threads are busy.

#### Using IBM MQ Trace
You can record performance statistics and accounting data using the IBM MQ trace facility. The data is sent to the System Management Facility (SMF) or the Generalized Trace Facility (GTF). You can start, alter, or stop the trace using the `START TRACE`, `ALTER TRACE`, and `STOP TRACE` commands.

#### Using IBM MQ Online Monitoring
You can collect monitoring data for queues and channels by setting the `MONQ`, `MONCHL`, and `MONACLS` attributes. Use the `DEFINE` and `ALTER` commands to set these attributes and the `DISPLAY` commands to view the monitoring information.

#### Using IBM MQ Events
IBM MQ instrumentation events provide information about errors, warnings, and other significant occurrences in a queue manager. These events can be monitored and managed through the operations and control panels or IBM MQ commands.

### Using System Management Facility (SMF)
SMF is a z/OS service aid used to collect information from various subsystems, including IBM MQ. To use SMF, specify the required parameters in the `SMFPRMxx` member of `SYS1.PARMLIB` or use the `SETSMF` z/OS operator command. You can also enable automatic trace data collection by setting the `SMFSTAT` and `SMFACCT` parameters in the `CSQ6SYSP` macro.

### Allocating Additional SMF Buffers
When starting a trace, ensure that adequate SMF buffers are allocated. This can be done by specifying the appropriate buffering parameters in your system configuration.

By following these guidelines and using the provided tools, you can effectively monitor and manage the performance and resource usage of your IBM MQ systems.