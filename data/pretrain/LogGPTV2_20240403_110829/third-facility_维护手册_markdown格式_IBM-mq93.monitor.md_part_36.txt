COUNT(8) MOVCOUNT(8)
BALANCED(UNKNOWN)
TYPE (APPL)
This shows that there is an application called MYAPP in the uniform cluster, and currently there are eight
instances, all eight of which are considered movable around the uniform cluster. The balanced value of
UNKNOWN is a temporary value, which indicates that the queue manager has not yet been though an
attempt to rebalance the application if necessary.
After a short time, you are more likely to see the following output:
1 : DIS APSTATUS(*) type(APPL)
314 Monitoring and Performance for IBM MQ
AMQ8932I: Display application status details.
APPLNAME(MYAPP) CLUSTER(UNIDEMO)
COUNT(8) MOVCOUNT(8)
BALANCED(NO)
TYPE (APPL)
This output shows that the application has eight instances, but that they are not balanced across the
uniform cluster. At this point, it is worth looking at the distribution of applications in the cluster.
To do this, run the DIS APSTATUS command again. Note that you can run this command against any
queue manager in the uniform cluster:
1 : DIS APSTATUS(*) type(QMGR)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(6) MOVCOUNT(6)
BALSTATE(HIGH) LMSGDATE(2019-05-24)
LMSGTIME(13:11:10) QMNAME(UNID001)
QMID(UNID001_2019-05-24_13.09.35)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(1) MOVCOUNT(1)
BALSTATE(LOW) LMSGDATE(2019-05-24)
LMSGTIME(13:11:03) QMNAME(UNID002)
QMID(UNID002_2019-05-24_13.09.39)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(1) MOVCOUNT(1)
BALSTATE(LOW) LMSGDATE(2019-05-24)
LMSGTIME(13:11:07) QMNAME(UNID003)
QMID(UNID003_2019-05-24_13.09.43)
TYPE (QMGR)
From this, you can see at this point in time that queue manager UNID001 has six instances, but queue
managers UNID0002 and UNID0003 only have one each. The BALSTATE output gives an indication of the
balance state the last time the queue manager reported it. However, be aware that the instance count
might be more recent than the BALSTATE field.
This output also gives a good indication that the uniform cluster is distributing information about this
application. The application is known to all queue manager instances in the uniform cluster, and the last
message date and time is very recent.
Also, the ACTIVE field indicates that all queue managers in the cluster are considered to be
communicating with one another; if ACTIVE is set to NO on any queue manager, it indicates that regular
communication with it has been interrupted.
If left to rebalance itself, the output would eventually end up something like:
1 : DIS APSTATUS(*) type(QMGR)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(3) MOVCOUNT(3)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:14:22) QMNAME(UNID001)
QMID(UNID001_2019-05-24_13.09.35)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(3) MOVCOUNT(3)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:13:53) QMNAME(UNID002)
QMID(UNID002_2019-05-24_13.09.39)
AMQ8932I: Display application status details.
APPLNAME(MYAPP) ACTIVE(YES)
COUNT(2) MOVCOUNT(2)
BALSTATE(OK) LMSGDATE(2019-05-24)
LMSGTIME(13:13:47) QMNAME(UNID003)
QMID(UNID003_2019-05-24_13.09.43)
TYPE (QMGR)
The BALSTATE of the queue managers is now OK indicating that a steady state has been achieved.
IBM MQ Monitoring and performance 315
Monitoring individual application instances
You can look at the individual application instances, but you do this for each queue manager. Looking at
the output on UNID001:
1 : DIS APSTATUS(*) type(LOCAL)
AMQ8932I: Display application status details.
APPLNAME(MYAPP)
CONNTAG(MQCT02DFE75C02EA0A20UNID001_2019-05-24_13.09.35MYAPP)
CONNS(1) IMMREASN(NONE)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(YES)
AMQ8932I: Display application status details.
APPLNAME(MYAPP)
CONNTAG(MQCT02DFE75C02E50A20UNID001_2019-05-24_13.09.35MYAPP)
CONNS(1) IMMREASN(NONE)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(YES)
AMQ8932I: Display application status details.
APPLNAME(MYAPP)
CONNTAG(MQCT02DFE75C02E60A20UNID001_2019-05-24_13.09.35MYAPP)
CONNS(1) IMMREASN(NONE)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(YES)
TYPE (LOCAL)
One MQSC command read.
The presence of MOVABLE(YES) indicates this instance can be moved if needed to another queue
manager in the cluster. In the following example, the application instance is not movable because it
its not connecting as a client:
3 : DISPLAY APSTATUS('ServerApp') TYPE(LOCAL)
AMQ8932I: Display application status details.
APPLNAME(ServerApp)
CONNTAG(MQCT02DFE75C01800B20UNID001_2019-05-24_13.09.35ServerApp)
CONNS(1) IMMREASN(NOTCLIENT)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(NO)
TYPE (LOCAL)
You can use the CONNTAG field to see the individual queue manager connections from that instance,
which can be useful if the application instance is IMMREASN(NOTRECONN). In the following example,
the client application is not movable, and investigating the connect options shows it does not have
MQCNO_RECONNECT in the CONNOPTS field.
1 : DISPLAY APSTATUS('ClientApp') TYPE(LOCAL)
AMQ8932I: Display application status details.
APPLNAME(ClientApp)
CONNTAG(MQCT02DFE75C01CB0B20UNID001_2019-05-24_13.09.35ClientApp)
CONNS(1) IMMREASN(NOTRECONN)
IMMCOUNT(0) IMMDATE( )
IMMTIME( ) MOVABLE(NO)
TYPE (LOCAL)
2 : DISPLAY CONN(*) TYPE(CONN) WHERE(CONNTAG eq
'MQCT02DFE75C01CB0B20UNID001_2019-05-24_13.09.35ClientApp') ALL
AMQ8276I: Display Connection details.
CONN(02DFE75C01CB0B20)
EXTCONN(414D5143554E49443030312020202020)
TYPE(CONN)
PID(14656) TID(20)
APPLDESC(IBM MQ Channel) APPLTAG(ClientApp)
APPLTYPE(USER) ASTATE(NONE)
CHANNEL(SYSTEM.DEF.SVRCONN) CLIENTID( )
CONNAME(127.0.0.1)
CONNOPTS(MQCNO_HANDLE_SHARE_BLOCK,MQCNO_SHARED_BINDING)
USERID(MyUserid) UOWLOG( )
UOWSTDA( ) UOWSTTI( )
UOWLOGDA( ) UOWLOGTI( )
URTYPE(QMGR)
EXTURID(XA_FORMATID[] XA_GTRID[] XA_BQUAL[])
QMURID(0.0) UOWSTATE(NONE)
316 Monitoring and Performance for IBM MQ
CONNTAG(MQCT02DFE75C01CB0B20UNID001_2019-05-24_13.09.35ClientApp)
TYPE (CONN)
Related concepts
Automatic application balancing
Monitoring performance and resource usage on z/OS
Use this topic to understand the facilities available to monitor the performance, and resource usage of
your IBM MQ for z/OS subsystems.
Related tasks
Configuring queue managers on z/OS
Administering IBM MQ for z/OS
Introduction to monitoring IBM MQ for z/OS
Use this topic as an overview of the monitoring facilities available for IBM MQ for z/OS. For example,
obtaining snapshots, using IBM MQ trace, online monitoring, and events.
This topic describes how to monitor the performance and resource usage of IBM MQ.
• It outlines some of the information that you can retrieve and briefly describes a general approach
to investigating performance problems. (You can find information about dealing with
performance problems in the Problem determination on z/OS .)
• It describes how you can collect statistics about the performance of IBM MQ by using SMF records.
• It describes how to gather accounting data to enable you to charge your customers for their use of your
IBM MQ systems.
• It describes how to use IBM MQ events (alerts) to monitor your systems.
Here are some of the tools you might use to monitor IBM MQ; they are described in the sections that
follow:
• Tools provided by IBM MQ:
– Using DISPLAY commands
– “Using CICS adapter statistics” on page 318
– “Using IBM MQ events” on page 320
• z/OS service aids:
– “Using System Management Facility” on page 321
• Other IBM licensed programs:
– Using the Resource Measurement Facility
– Using Tivoli Decision Support for z/OS
– Using the CICS monitoring facility
Information about interpreting the data gathered by the performance statistics trace is given
in“Interpreting IBM MQ for z/OS performance statistics” on page 324.
Information about interpreting the data gathered by the accounting trace is given in“Interpreting IBM MQ
for z/OS accounting data” on page 360.
Getting snapshots of IBM MQ using the DISPLAY commands
IBM MQ provides the MQSC facility which can give a snapshot of the performance, and resource usage
using the DISPLAY commands.
You can get an idea of the current state of IBM MQ by using the DISPLAY commands and, for the CICS
adapter, the CICS adapter panels.
IBM MQ Monitoring and performance 317
Using DISPLAY commands
You can use the IBM MQ MQSC DISPLAY or PCF Inquire commands to obtain information about the
current state of IBM MQ. They provide information about the status of the command server, process
definitions, queues, the queue manager, and its associated components. These commands are:
MQSC command PCF command
DISPLAY ARCHIVE Inquire Archive
DISPLAY AUTHINFO Inquire Authentication Information Object
DISPLAY CFSTATUS Inquire CF Structure Status
DISPLAY CFSTRUCT Inquire CF Structure
DISPLAY CHANNEL Inquire Channel
DISPLAY CHINIT Inquire Channel Initiator
DISPLAY CHSTATUS Inquire Channel Status
DISPLAY CMDSERV
DISPLAY CLUSQMGR Inquire Cluster Queue Manager
DISPLAY CONN Inquire Connection
DISPLAY GROUP Inquire Group
DISPLAY LOG Inquire Log
DISPLAY PROCESS Inquire Process
DISPLAY QMGR Inquire Queue Manager
DISPLAY QSTATUS Inquire Queue Status
DISPLAY QUEUE Inquire Queue
DISPLAY SECURITY Inquire Security
DISPLAY STGCLASS Inquire Storage Class
DISPLAY SYSTEM Inquire System
DISPLAY TRACE
DISPLAY USAGE Inquire Usage
For the detailed syntax of each command, see MQSC commands or PCF commands. All of the
functions of these commands (except DISPLAY CMDSERV and DISPLAY TRACE) are also available
through the operations and control panels.
These commands provide a snapshot of the system only at the moment the command was processed.
If you want to examine trends in the system, you must start an IBM MQ trace and analyze the results
over a period of time.
Using CICS adapter statistics
If you are an authorized CICS user, you can use the CICS adapter control panels to display CICS adapter
statistics dynamically.
These statistics provide a snapshot of information related to CICS thread usage and situations when all
threads are busy. The display connection panel can be refreshed by pressing the Enter key. For more
information, see "The CICS-IBM MQ Adapter" section in the CICS Transaction Server for z/OS 4.1 product
documentation at: CICS Transaction Server for z/OS 4.1, The CICS-IBM MQ adapter.
318 Monitoring and Performance for IBM MQ
Using IBM MQ trace
You can record performance statistics and accounting data for IBM MQ by using the IBM MQ trace facility.
Use this topic to understand how to control IBM MQ trace.
The data generated by IBM MQ is sent to:
• The System Management Facility (SMF), specifically as SMF record type 115, subtypes 1 and 2 for the
performance statistics trace
• The SMF, specifically as SMF record type 116, subtypes zero, 1, and 2 for the accounting trace.
If you prefer, the data generated by the IBM MQ accounting trace can also be sent to the generalized trace
facility (GTF).
Starting IBM MQ trace
You can start the IBM MQ trace facility at any time by issuing the IBM MQ START TRACE command.
Accounting data can be lost if the accounting trace is started or stopped while applications are running. To
collect accounting data successfully, the following conditions must apply:
• The accounting trace must be active when an application starts, and it must still be active when the
application finishes.
• If the accounting trace is stopped, any accounting data collection that was active stops.
You can also start collecting some trace information automatically if you specify YES on the SMFSTAT
(SMF STATISTICS) and SMFACCT (SMF ACCOUNTING) parameters of the CSQ6SYSP macro.
These parameters are described in Using CSQ6SYSP.
Before starting an IBM MQ trace, read “Using System Management Facility” on page 321.
Controlling IBM MQ trace
To control the IBM MQ trace data collection at start-up, specify values for the parameters in the
CSQ6SYSP macro when you customize IBM MQ. See Using CSQ6SYSP for details.
You can control IBM MQ tracing when the queue manager is running with these commands:
• START TRACE
• ALTER TRACE
• STOP TRACE
You can choose the destination to which trace data is sent. Possible destinations are:
SMF
System Management Facility
GTF
Generalized Trace Facility (accounting trace only)
SRV
Serviceability routine for diagnostic use by IBM service personnel
For daily monitoring, information is sent to SMF (the default destination). SMF data sets typically contain
information from other systems; this information is not available for reporting until the SMF data set is
dumped.
You can also send accounting trace information to the GTF. This information has an event identifier of 5EE.
The The MQI call and user parameter, and z/OS generalized trace facility (GTF) describes
how to deal with IBM MQ trace information sent to the GTF.
For information about IBM MQ commands, see MQSC commands.
IBM MQ Monitoring and performance 319
Effect of trace on IBM MQ performance
Using the IBM MQ trace facility can have a significant effect on IBM MQ and transaction performance. For
example, if you start a global trace for class 1 or for all classes, it is likely to increase processor usage
and transaction response times by approximately 50%. However, if you start a global trace for classes
2 - 4 alone, the increase in processor usage and transaction response times is likely to be less than 1%
additional processor cost to the cost of IBM MQ calls. The same applies for a statistics or accounting
trace.
Using IBM MQ online monitoring
You can collect monitoring data for queues and channels (including automatically defined cluster-server
channels) by setting the MONQ, MONCHL, and MONACLS attributes.
Table 33 on page 320 summarizes the commands to set these attributes at different levels and to display
the monitoring information.
Table 33. Setting and displaying attributes to control online monitoring
Display monitoring
information using
Attribute Applicable at this level Set using command command
MONQ Queue DEFINE QLOCAL DISPLAY QSTATUS
DEFINE QMODEL
ALTER QLOCAL
ALTER QMODEL
Queue manager ALTER QMGR
MONCHL Channel DEFINE CHANNEL DISPLAY CHSTATUS
ALTER CHANNEL
Queue manager ALTER QMGR
MONACLS Queue manager ALTER QMGR
For full details of these commands, see MQSC commands. For more information about online monitoring,
see “Monitoring your IBM MQ network” on page 5.
Using IBM MQ events
IBM MQ instrumentation events provide information about errors, warnings, and other significant
occurrences in a queue manager. You can monitor the operation of all your queue managers by
incorporating these events into your own system management application.
IBM MQ instrumentation events fall into the following categories:
Queue manager events
These events are related to the definitions of resources within queue managers. For example, an
application attempts to put a message to a queue that does not exist.
Performance events
These events are notifications that a threshold condition has been reached by a resource. For
example, a queue depth limit has been reached, or the queue was not serviced within a predefined
time limit.
Channel events
These events are reported by channels as a result of conditions detected during their operation. For
example, a channel instance is stopped.
320 Monitoring and Performance for IBM MQ
Configuration events
These events are notifications that an object has been created, changed, or deleted.
When an event occurs, the queue manager puts an event message on the appropriate event queue, if
defined. The event message contains information about the event that can be retrieved by a suitable IBM
MQ application.
IBM MQ events can be enabled using the IBM MQ commands or the operations and control panels.
See “Event types” on page 11 for information about the IBM MQ events that generate messages, and
for information about the format of these messages. See Event message reference for information about
enabling the events.
Using System Management Facility
You can use SMF to collect statistics and accounting information. To use SMF, certain parameters must be
set in z/OS and in IBM MQ.
System management facility (SMF) is a z/OS service aid used to collect information from various z/OS
subsystems. This information is dumped and reported periodically, for example, hourly. You can use SMF
with the IBM MQ trace facility to collect data from IBM MQ. In this way you can monitor trends, for
example, in system utilization and performance, and collect accounting information about each user ID
using IBM MQ.
To record performance statistics (record type 115) to SMF specify the following in the SMFPRMxx member
of SYS1.PARMLIB or with the SETSMF z/OS operator command.
SYS(TYPE(115))
To record accounting information (record type 116) to SMF specify the following in the SMFPRMxx
member of SYS1.PARMLIB or with the SETSMF z/OS operator command.
SYS(TYPE(116))
To use the z/OS command SETSMF, either PROMPT(ALL) or PROMPT(LIST) must be specified in the
SMFPRM xx member. See the z/OS MVS Initialization and Tuning Reference and z/OS MVS System
Commands for more information.
You can start collecting some trace information automatically if you specify YES on the SMFSTAT (SMF
STATISTICS) and SMFACCT (SMF ACCOUNTING) parameters of the CSQ6SYSP macro; this is described in
Using CSQ6SYSP.
Specifying YES on the SMFSTAT and SMFACCT parameters enables you to collect trace information as a
queue manager starts.
You can also start collection of the data when the queue manager is running with the START TRACE
command, specifying START TRACE(A) or START TRACE(S).
You can turn on or off the recording of accounting information at the queue or queue manager level using
the ACCTQ parameter of the DEFINE QLOCAL, DEFINE QMODEL, ALTER QLOCAL, ALTER QMODEL, or
ALTER QMGR commands. See MQSC commands for details of these commands.
You can control the collection of channel accounting data at the channel or queue manager level using the
STATCHL parameter of the DEFINE CHANNEL, ALTER CHANNEL or ALTER QMGR commands.
You can specify the interval at which IBM MQ collects statistics and accounting data in one of three ways:
• You can collect statistics data and accounting data at different intervals, using STATIME
(statistics data) and ACCTIME (accounting data) in your system parameters (described in Using
CSQ6SYSP ).
• You can collect statistics data and accounting data at the same interval by specifying a value for
STATIME in your system parameters (described in Using CSQ6SYSP).
IBM MQ Monitoring and performance 321
• You can collect statistics data and accounting data using the occurrence of accounting events by
specifying zero for STATIME.
SMF must be running before you can send data to it. For more information about SMF, see the z/OS MVS
System Management Facilities (SMF) manual.
For the statistics and accounting data to be reset, at least one MQI call must be issued during the
accounting interval.
Allocating additional SMF buffers
When you start a trace, you must ensure that you allocate adequate SMF buffers. Specify SMF buffering