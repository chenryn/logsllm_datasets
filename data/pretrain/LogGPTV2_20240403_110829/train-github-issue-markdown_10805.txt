 **Describe your question**  
When i use `session.merge`, i got a `(pymssql.IntegrityError) (2627,
b"Violation of PRIMARY KEY constraint 'PK__payment___357D4CF8B9E5C8E5'. Cannot
insert duplicate key in object 'dbo.test'`. The same in mysql
`sqlalchemy.exc.IntegrityError: (mysql.connector.errors.IntegrityError) 1062
(23000): Duplicate entry 'payCode_-298' for key 'PRIMARY'`  
**Example (if applicable)**
    from sqlalchemy import create_engine
    from sqlalchemy.ext.declarative import declarative_base, declared_attr
    from sqlalchemy.orm import sessionmaker, scoped_session
    from config import Config
    engine = create_engine(
        Config.SQLALCHEMY_DATABASE_URI,
        pool_size=Config.SQLALCHEMY_POOL_SIZE,
        max_overflow=Config.SQLALCHEMY_MAX_OVERFLOW,
        pool_recycle=Config.SQLALCHEMY_POOL_RECYCLE,
        # echo=True
    )
    db_session = scoped_session(
        sessionmaker(autocommit=False, autoflush=False, bind=engine)
    )
    class Base:
        @declared_attr
        def __tablename__(cls):
            return (
                "".join("_%s" % c if c.isupper() else c for c in cls.__name__)
                .strip("_")
                .lower()
            )
    Base = declarative_base(cls=Base)
    class PaymentMethod(Base):
        """test"""
        code = Column(String, primary_key=True, autoincrement=False, comment="primary_key")
        name = Column(String, comment="name")
        group_id = Column(String, comment="group_id")
        shop_id = Column(String, comment="shop_id")
        insert_time = Column(DateTime, comment="insert_time", default=datetime.now)
    data = [{'name': 'payCode_-298', 'value': 'pospalopenpay_yiling.clientscanpos'}, {'name': 'payCode_-299', 'value': 'pospalopenpay_yiling.clientscanpos'}, {"name":'payCode_-298', 'value': 'pospalopenpay_jlpay.clientscanpos'}, {'name': 'payCode_-299', 'value': 'pospalopenpay_jlpay.clients'}]
    for i in data:
        db_session.merge(PaymentMethod(code=i["name"], name=i['value'], shop_id='test_shop_id', group_id='test_group_id'))
    db_session.commit()
**Additional context**  
Add any other context or screenshots about the feature request here.  
The tables in the database are clean
**Have a nice day!**