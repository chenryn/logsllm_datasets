 **Bug**  
`jnp.flatnonzero` and `jnp.argwhere` mention `fill_value` option in
documentation, but calling with `fill_value` leads to 'unexpected keyword
argument' error.
In the below code, the last two lines will raise errors due to unexpected
argument `fill_value`
    import jax.numpy as jnp
    d = jnp.array([True,False,True])
    jnp.nonzero(d, size=20, fill_value=100)
    jnp.flatnonzero(d, size=20, fill_value=100)
    jnp.argwhere(d, size=20, fill_value=100)
**Why?**  
The implementation of `jnp.flatnonzero` and `jnp.argwhere` link back to
`jnp.nonzero` but the `fill_value` argument wasn't threaded through (just the
`size` argument).
The threading is there in `jnp.where` and other cases, just those two have
been missed as far as I've noticed.
**Fix**  
Pull request:  
#8926  
just threads the argument
Images
![image](https://user-
images.githubusercontent.com/44170519/145838724-958be84b-68b3-4d8d-980e-4dc8bc5bb0d3.png)
![image](https://user-
images.githubusercontent.com/44170519/145838907-673fb312-8b0b-4433-9be3-0d29cdf5cd82.png)