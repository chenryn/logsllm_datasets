  * I tried using the `@types/ramda` package and had problems.
  * I tried using the latest stable version of tsc. https://www.npmjs.com/package/typescript
  * I have a question that is inappropriate for StackOverflow. (Please ask any appropriate questions there).
Authors: @donnut @mdekrey @mrdziuban @sbking @afharo @teves-castro @1M0reBug
@hojberg @charlespwd @samsonkeung @angeloocana @raynerd @googol @moshensky
@ethanresnick @leighman @CaptJakk
Hi. I'm trying to use `R.pipe` with `R.filter`, but I couldn't get the typing
to work. But if I ignore the typings by adding `// @ts-ignore` the code works.
I'm not asking this on StackOverflow because I'm almost sure it's a bug on the
typings.
**This doesn't work (the typings, the code is great, as ignoring the error
part with //@ts-ignore makes it work**
    const searchRegexp = /\.dev\.test\.io/;
    const env = 'prod';
    const data = [
      'https://testing.dev.test.io',
      'https://testing2.local.dev.test.io',
      'https://testing3.dev.test.io',
    ];
    const values = pipe(
      map(v => v.trim()),
      /*
        Below line throws:
        Argument of type 'Filter' is not assignable to parameter of type '(x: string[]) => string[]'.
          Type '{}[]' is not assignable to type 'string[]'.
          Type '{}' is not assignable to type 'string'. (2345)
      */
      filter(v => !(contains('.local.', v) && env !== 'dev')),
      map(v => v.replace(searchRegexp, env === 'prod' ? '.test.com' : `.${env}.test.io`)),
    )(data.split(','));
**This works (both typings & code)**
    const searchRegexp = /\.dev\.test\.io/;
    const env = 'prod';
    const data = [
      'https://testing.dev.test.io',
      'https://testing2.local.dev.test.io',
      'https://testing3.dev.test.io',
    ];
    const values = pipe(
      map(v => v.trim()),
      // adding this extra anonymous function here, makes everything to work
      list => filter(v => !(contains('.local.', v) && env !== 'dev'), list),
      map(v => v.replace(searchRegexp, env === 'prod' ? '.test.com' : `.${env}.test.io`)),
    )(data.split(','));