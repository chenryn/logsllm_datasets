title:Harvesting High Value Foreign Currency Transactions from EMV Contactless
Credit Cards Without the PIN
author:Martin Emms and
Budi Arief and
Leo Freitas and
Joseph Hannon and
Aad P. A. van Moorsel
Emms M, Arief B, Freitas L, Hannon J, van Moorsel A.  
Harvesting High Value Foreign Currency Transactions from EMV Contactless 
Credit Cards Without the PIN.  
In: 21st ACM Conference on Computer and Communications Security (CCS). 
2014, Scottsdale, Arizona, USA: ACM. 
Copyright: 
© Owner/Author, 2014. This is the authors' version of the work. It is posted here for your personal use. 
Not for redistribution. The definitive Version of Record was published in Proceedings of the 2014 ACM 
SIGSAC Conference on Computer and Communications Security, 
http://dx.doi.org/10.1145/2660267.2660312. 
Date deposited:   
02/09/2014 
Newcastle University ePrints - eprint.ncl.ac.uk 
Harvesting High Value Foreign Currency Transactions 
from EMV Contactless Credit Cards without the PIN 
Martin Emms, Budi Arief, Leo Freitas, Joseph Hannon, Aad van Moorsel 
School of Computing Science, Newcastle University 
Newcastle upon Tyne NE1 7RU, United Kingdom 
{martin.emms, budi.arief, leo.freitas, joseph.hannon, aad.vanmoorsel}@ncl.ac.uk 
ABSTRACT 
In  this  paper  we  present  an  attack,  which  allows  fraudulent 
transactions to be collected from EMV contactless credit and debit 
cards  without  the  knowledge  of  the  cardholder.  The  attack 
exploits  a  previously  unreported  vulnerability  in  EMV  protocol, 
which  allows  EMV  contactless  cards  to  approve  unlimited  value 
transactions without the cardholder’s PIN when the transaction is 
carried out in a foreign currency. For example, we have found that 
Visa  credit  cards  will  approve  foreign  currency  transactions  for 
any amount up to €999,999.99 without the cardholder’s PIN, this 
side-steps  the  £20  contactless  transaction  limit  in  the  UK.  This 
paper outlines our analysis methodology that identified the flaw in 
the  EMV  protocol,  and  presents  a  scenario  in  which  fraudulent 
transaction  details  are  transmitted  over  the  Internet  to  a  “rogue 
merchant” who then uses the transaction data to take money from 
the  victim’s  account.  In  reality,  the  criminals  would  choose  a 
value between €100 and €200, which is low enough to be within 
the victim’s balance and not to raise suspicion, but high enough to 
make each attack  worthwhile.  The attack is novel in that it could 
be  operated  on  a  large  scale  with  multiple  attackers  collecting 
fraudulent transactions for a central rogue merchant which can be 
located  anywhere  in  the  world  where  EMV  payments  are 
accepted.   
Categories and Subject Descriptors 
K.4.4  [Computers  and  Society]:  Electronic  Commerce  – 
Cybercash, 
Security; 
C.3  [Special-Purpose  and  Application-Based  Systems]:  – 
Smartcards 
cash,  Payment 
Schemes, 
digital 
General Terms 
Security 
Keywords 
Contactless cards, EMV, fraudulent transaction, foreign currency 
transaction limits, rogue merchant. 
1.  INTRODUCTION 
Our research has identified a practical attack on EMV1 contactless 
credit  and  debit  cards,  which  allows  large-scale  “harvesting”  of 
fraudulent  payments  from  unsuspecting  cardholders.  The  attack 
exploits  six  functional  characteristics  of  EMV  contactless  credit 
and debit cards: 
  Many  Visa2  credit  cards  will  approve  unlimited  value 
transactions  in  a  foreign  currency;  this  allows  the  attack  to 
maximise the money extracted from each credit / debit card. 
The contactless interface allows  transactions to be extracted 
whilst the card is still in the cardholder’s wallet. 
The  cardholder’s  PIN  is  not  required  for  contactless 
transactions;  this  allows  the  fraudulent  transaction  to  be 
extracted  from the  card  without any  further interaction from 
the cardholder. 
  Visa  contactless  cards  will  approve  transactions  in  offline 
mode;  this  allows  the  attack  to  be  performed  without 
connecting to the card payment system, thereby avoiding any 
additional security checks by the bank. 
The  merchant  details  are  not 
the  data 
cryptographically  protected  by  the  card;  this  allows  the 
merchant  details  to  be  added  later,  making  the  attack  more 
flexible and scalable. 
included 
in 
  While 
the  EMV  protocol  requires  payment  cards 
to 
authenticate themselves to the Point of Sale (POS) terminals, 
currently  there  is  no  requirement  for  POS  terminals  to 
authenticate themselves. 
The main contribution of this paper is the identification of a newly 
discovered  vulnerability  of  the  EMV  protocol  centred  on  the 
card’s handling of foreign currencies.  This is made possible by a 
combination of the six functional characteristics described above.  
The introduction of EMV contactless cards has created a situation 
comparable  to  that  described  by  Reason  in  his  “Swiss  cheese” 
model  [10]  where  layers  of  protection  can  be  compromised  if 
holes on each layer line up to create an exploitable attack.  In this 
case,  the  six  characteristics  line  up  in  a  way  that  defeats  the 
safeguards  put  in  place  by  EMV.    Through  this  paper  we  also 
contribute 
this 
vulnerability. 
two  potential  solutions  which  will  block 
The  ability  to  capture  fraudulent  transactions  and  store  them  for 
later transmission to a rogue merchant makes this attack different 
from  previously  described  relay  attacks 
[3][6]  on  EMV 
contactless  cards.    The  relay  attack  depends  upon  very  close 
synchronisation between two attackers; the first attacker has to be 
in contact with the victim’s card whilst the second attacker makes 
a  purchase  at  a POS  terminal.    This  makes  relay  attacks  difficult 
to operate on a large scale. 
1  EMV  (Europay,  MasterCard,  and  Visa)  is  a  global  standard  to  support 
interoperable  card  payment  system  between  Visa,  MasterCard, 
American Express and JCB.  
2 The attack presented in this paper has only been observed on contactless 
Visa  cards.  However  our  testing  has  showed  that  the  underlying  flaw 
also exists in MasterCard, but additional security measures implemented 
by MasterCard have prevented the manifestation of this attack. 
1 
Similar  to  the  “Chip  & PIN  is  broken”  attack  [9],  our  attack  can 
potentially be operated on a large scale. “Chip & PIN is broken” 
allows  attackers  to  buy  goods  from  retailers,  whereas  the  attack 
described in this paper is different in that it targets the  money in 
the victim’s bank account. 
The very recent “Chip and Skim” attack [1] is similar to our attack 
in that it could be operated on a large scale and it extracts money 
from the victim’s account.  It would be interesting to explore the 
possibility  of  using  our  mobile  phone  contactless-transaction-
collecting app as the “skimming” platform for the Chip and Skim 
attack. 
The  rest  of  the  paper  is  organised  as  follows.  Section  2  presents 
our  methodology  for  finding  the  vulnerabilities,  including  the 
outline  of  the  process,  and  the  resulting  formal  abstract  model, 
from which we derive our attack. Section 3 provides an overview 
of  the  attack,  which  is  composed  of  two  stages:  collection  of 
fraudulent  transactions,  and  converting  these  transactions  into 
money.  Section  4  outlines  existing  safeguard  to  protect  EMV 
transactions,  while  Section  5  looks  into  the  EMV  functionality 
exploited  by  the  attack.  Section  6  outlines  the  experimental 
software  implementation  to  carry  out  the  attack,  including  an 
Android  app  and  a  rogue  merchant  server.  Section  7  presents 
some  results  from  executing  the  attack,  demonstrating  the 
feasibility of such attack.  In Section 8 we offer potential methods 
for preventing the attack and Section 9 concludes our paper. 
2.  METHODOLOGY 
Our work focuses on the analysis of the EMV payments protocol 
and  specifically  the  security  impact  of  the  introduction  of 
contactless and mobile payments functionality into the protocol. 
Analysis of the protocol is non-trivial due to the complexity of the 
EMV payment protocol specification.  EMV is a global payment 
system,  the  protocol  therefore  has  to  incorporate  competing  (and 
sometimes conflicting) requirements from each  of the credit card 
issuers  (MasterCard,  Visa,  Amex,  JCB,  Diners,  Discover, 
UnionPay)  and  from  the  financial  regulators  in  each  of  the 
countries in which EMV operates. In addition, the introduction of 
contactless  /  mobile  payments  has  significantly  increased  the 
complexity  of  the  EMV  specifications.    The  EMV  specification 
for  contact  (Chip  &  PIN)  credit  /  debit  cards  describes  a  single 
unified  payment  protocol  sequence  (kernel)  for  all  card  types.  
The  specification  for  contactless  /  mobile  payments  contains 
seven protocol sequences (kernels), one for each card issuer.  The 
complexity  and  page  count  has  expanded,  from  four  books 
comprising  765  pages  for  contact  transactions,  to  fourteen  books 
containing 2,392 pages for both contact and contactless. 
To  address  this  complexity,  we  have  developed  a  systematic 
approach which combines formal and informal techniques.  At the 
centre of our approach are  UML  sequence diagrams, an example 
of  which  can  be  seen  in  Figure  6,  which  we  use  as  the  informal 
but  precise  description  of  the  protocol  fragments.    Each  UML 
diagram  is  accompanied  by  a  table  listing  the  references  in  the 
EMV specification which were the  diagram's information source. 
Creating the UML diagrams takes input from three main sources: 
(i) the EMV specification documents, (ii) feedback  from insights 
gained  by  the  developers  coding  the  emulator,  and  (iii)  feedback 
from  insights  gained  by  the  designers  constructing  a  formal 
model.    Essential  to  our  process  is  the  systematic  line-by-line 
documentation  of  the  linkage  between  EMV  specification,  UML 
diagram, abstract formal model, emulator code and test cases. 
2 
The  formal  aspects  of  our  approach  are  inspired  by  the  Praxis 
methodology  [2],  tailored  to  our  needs.  It  focuses  on  the 
construction  and  proof  of  an  abstract  model  using  the  Z  notation 
[13].  This abstract model is used to investigate the consistency of 
the  requirements,  expose  descriptive  errors,  and  ultimately  be 
used  to  generate  test  cases  for  the  emulator  code.    Ultimately,  if 
our  abstract  formal  model  correctly  characterises  the  EMV 
requirements, then our test cases will be both minimal and wide-
reaching, given they come from the mathematical characterisation 
of the EMV requirements for NFC. 
2.1  The Process 
Figure  1  shows  our  analysis  process.  The  rounded  boxes  are 
activity nodes within the process e.g. [A1].  The square boxes are 
object nodes e.g. [O1.0]: these are the data sources that drive the 
activities.    Connecting  edges,  represented  as  black  solid-arrows, 
indicate  the  default  order  in  the  flow  of  activities.    The  red 
dashed-arrows  are  connecting  edges,  which  indicate  feedback, 
creating  an  iterative  process  of  refinement  of  the  UML  diagrams 
[O1.1], the abstract model [O2.1] and the emulator code [O4.1]. 
Figure 1. Protocol analysis process 
At  the  centre  of  our  approach  is  the  construction  [A1]  of  UML 
sequence  diagrams  [O1.1]  with  accompanying  reference  lists.  
Much  of  the  process  is  about  constructing  these  sequence 
diagrams  as  accurately  as  possible.    To  achieve  this,  we  use  a 
detailed analysis of the EMV requirements and a detailed working 
knowledge  of 
the  various  specifications 
contributing  to  a  single  transaction.  Moreover,  we  use  feedback 
from  the  formal  model  construction  [A2],  the  derivation  of  test 
cases [A3] and the coding [A4].   
the  structure  of 
The EMV specifications [O0.0] are the originating source of all of 
the  data  in  the  process.    Any  data  or  assumption  made  in  the 
EMV Specifications[O0.0]Develop Transaction Sequence Diagrams[A1]Develop Transaction Emulation Code[A4]Develop Abstract Model[A2]UML Transaction Sequence Diagrams with EMV References[O1.1]Abstract Model[O2.1]Develop Test Cases[A3]Test Cases[O3.1]Emulator Code[O4.1]Card Capabilities[O5.0]Run Test Cases[A5]Test Results / Findings[O5.1]List of Anomalies[O2.2]FeedbackFeedbackFeedbackFeedback(i.e. 
the  book/section/page  within 
emulator code or in the abstract model should be traceable back to 
its  origin 
the  EMV 
specifications).  The EMV specifications are structured so that the 
complete description for a single transaction protocol sequence is 
split  across  multiple  sections  and  multiple  books.    The  UML 
sequence  diagrams  [O1.1]  collate  these  multiple  sources  into  a 
single  easy  to  follow  description  of  the  transaction  sequence.  
These  transaction  sequence  diagrams  are  the  initial  stage  of  the 
iterative  process  that  we  used  to  create  the  concrete  software 
implementation of the emulator [O4.1].   
At  each  stage  of  the  process,  if  additional  information  is  found 
about the working of EMV it is fed back into the UML transaction 
sequence diagrams [O1.1].  The feedback is essential to refine our 
understanding of the EMV specifications and document it.  Each 
time the diagrams are updated, this drives the improvement of the 
emulator  code  [O4.1].    The  completed  emulator  code  is  used  in 
practical  experiments  [A5],  running  full  or  partial  transaction 
protocol sequences against real bank cards. 
2.2  UML Protocol Sequence Diagrams 
The  role  of  the  UML  protocol  sequence  diagrams  is  to  collate 
information  from  multiple  sources  in  the  EMV  specification, 
creating  a  single  description  of  the  payment  protocol  sequence 
(kernel). 
There are eight payment protocol sequences (kernels) in the EMV 
specification,  one  for  contact 
transactions  and  seven  for 
contactless transactions. There is a single UML  diagram for each 
of the eight  kernels.  Each diagram is  accompanied by a table of 
references  detailing  the  EMV  specification  sections  from  which 
the diagram  was derived.  Each  reference details the EMV book, 
section number, page number and a section of text describing the 
functionality. 
Table 1. Snippet of UML diagram references table 
Descriptive Text 
References 
7.1 Transaction Setup Data 
including PDOL list 
If the Visa application is 
successfully selected the card will 
return the data that the terminal 
requires to set up the transaction 
including the PDOL list. The 
Processing Data Objects List 
(PDOL) is a list of data fields the 
card requires to complete the 
transaction, the terminal returns the 
populated PDOL data in the Get 
Processing Options command.  
Typically the data fields requested 
by the card will include the 
transaction amount, currency, date, 
country and POS terminal 
capabilities (TTQ). 
EMV v2.2 Book C-3 
2.4.1 Initiate Application 
Processing, page 12 
EMV v4.3 Book 3 
10.1 Initiate Application 
Processing, page 91 
EMV v2.2 Book B 
3.5 Outcome Processing 
(3.5.1.5 Other), page 33 