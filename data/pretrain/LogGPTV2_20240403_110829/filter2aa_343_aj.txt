change this setting directly in the list of LDAP directory configurations.)
“Use custom port” specifies a port number other than the standard port for LDAP 
connections (389 without SSL or 636 with SSL).
LL2352.Book  Page 95  Friday, August 22, 2003  3:12 PM
96
Chapter 7    Managing Directory Access
Configuring LDAP Searches and Mappings
Using Directory Access, you can edit the mappings, search bases, and search scopes 
that specify how Mac OS X finds specific data items in an LDAP directory. You can edit 
these settings separately for each LDAP directory configuration listed in Directory 
Access. Each LDAP directory configuration specifies how Mac OS X accesses data in an 
LDAPv3 or LDAPv2 directory.
• You can edit the mapping of each Mac OS X record type to one or more LDAP object 
classes. 
• For each record type, you can also edit the mapping of Mac OS X data types, or 
attributes, to LDAP attributes. 
• You can edit the LDAP search base and search scope that determine where Mac OS X 
looks for a particular Mac OS X record type in an LDAP directory. 
Important:  When mapping Mac OS X user attributes to a read/write LDAP directory 
domain (an LDAP domain that is not read-only), the LDAP attribute mapped to 
RealName must not be the same as the first attribute in a list of LDAP attributes 
mapped to RecordName. For example, the cn attribute must not be the first attribute 
mapped to RecordName if cn is also mapped to RealName. If the LDAP attribute 
mapped to RealName is the same as the first attribute mapped to RecordName, 
problems will occur when you try to edit the full (long) name or the first short name in 
Workgroup Manager. 
For detailed specifications of Mac OS X record types and attributes, see Appendix A, 
“Mac OS X Directory Data.”
To edit the search bases and mappings for an LDAP server:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select LDAPv3 in the list of services, then click Configure.
4 If the list of server configurations is hidden, click Show Options.
5 Select a server configuration in the list, then click Edit.
6 Click Search & Mappings.
7 Select the mappings that you want to use as a starting point, if any.
Click the “Access this LDAPv3 server using” pop-up menu and choose a mapping 
template to use its mappings as a starting point, or choose Custom to begin with no 
predefined mappings.
Or click “Read from Server” to edit the mappings currently stored in the LDAP directory 
server whose configuration you are editing. 
LL2352.Book  Page 96  Friday, August 22, 2003  3:12 PM
Chapter 7    Managing Directory Access
97
8 Add record types and change their search bases as needed. 
To add record types, click the Add button below the Record Types and Attributes list. In 
the sheet that appears, select Record Types, select one or more record types from the 
list, and then click OK.
To change the search base of a record type, select it in the Record Types and Attributes 
List. Then click the “Search base” field and edit the search base.
To remove a record type, select it in the Record Types and Attributes List and click 
Delete.
To add a mapping for a record type, select the record type in the Record Types and 
Attributes List. Then click the Add button below “Map to __ items in list” and enter the 
name of an object class from the LDAP directory. To add another LDAP object class, you 
can press Return and enter the name of the object class. Specify whether to use all or 
any of the listed LDAP object classes by using the pop-up menu above the list.
To change a mapping for a record type, select the record type in the Record Types and 
Attributes List. Then double-click the LDAP object class that you want to change in the 
“Map to __ items in list” and edit it. Specify whether to use all or any of the listed LDAP 
object classes by using the pop-up menu above the list.
To remove a mapping for a record type, select the record type in the Record Types and 
Attributes List. Then click the LDAP object class that you want to remove from the “Map 
to __ items in list” and click the Delete button below “Map to __ items in list.”
9 Add attributes and change their mappings as needed.
To add attributes to a record type, select the record type in the Record Types and 
Attributes List. Then click the Add button below the Record Types and Attributes list. In 
the sheet that appears, select Attribute Types, select one or more attribute types, and 
then click OK.
To add a mapping for an attribute, select the attribute in the Record Types and 
Attributes List. Then click the Add button below “Map to __ items in list” and enter the 
name of an attribute from the LDAP directory. To add another LDAP attribute, you can 
press Return and enter the name of the attribute.
To change a mapping for an attribute, select the attribute in the Record Types and 
Attributes List. Then double-click the item that you want to change in the “Map to __ 
items in list” and edit the item name.
To remove a mapping for an attribute, select the attribute in the Record Types and 
Attributes List. Then click the item that you want to remove from the “Map to __ items 
in list” and click the Delete button below “Map to __ items in list.”
To change the order of attributes displayed in the list on the right, drag the attributes 
up or down in the list.
LL2352.Book  Page 97  Friday, August 22, 2003  3:12 PM
98
Chapter 7    Managing Directory Access
10 Click Write to Server if you want to store the mappings in the LDAP directory so that it 
can supply them automatically to its clients.
You must enter a search base to store the mappings, a distinguished name of an 
administrator (for example, cn=admin,dc=example,dc=com), and a password. If you are 
writing mappings to an Open Directory LDAP server, the correct search base is 
“cn=config, ” (where  is the server’s search base suffix, such as 
“dc=example,dc=com”).
The LDAP directory supplies its mappings to clients that are configured to use an 
automatic search policy. For instructions on configuring the client search policy, see 
“Setting Up the Authentication and Contacts Search Policies” on page 87.
The LDAP directory also supplies its mappings to clients that have been configured 
manually to get mappings from the server. For instructions on configuring client access 
to the server, see “Configuring Access to an LDAP Directory” on page 92 through 
“Changing the Connection Settings for an LDAP Directory” on page 95.
Mapping Config Record Attributes for LDAP Directories
If you want to store information for managed Mac OS X users in an LDAP directory, 
make sure you map the following attributes of the Config record type:  RealName and 
DataStamp. If you do not map these attributes, the following error message will be 
displayed when you use Workgroup Manager to change a user record that resides in 
the LDAP directory:
The attribute with name “dsRecTypeStandard:Config” is not mapped. 
You can ignore this message if you are not using Mac OS X client management, which 
depends on the Config record type’s RealName and DataStamp attributes for a cache. 
Editing RFC 2307 Mapping to Enable Creating Users
Before you can use Workgroup Manager to create users on a non-Apple LDAP directory 
server that uses RFC 2307 (UNIX) mappings, you must edit the mapping of the Users 
record type. You do this with the Directory Access application.
To enable creating user records in an LDAP directory with RFC 2307 mappings:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select LDAPv3 in the list of services, then click Configure.
4 If the list of server configurations is hidden, click Show Options.
5 Select the directory configuration with RFC 2307 mappings, then click Edit.
6 Click Search & Mappings.
7 Select Users in the list on the left.
By default, “Map to __ items in list” is set to Any and the list on the right includes 
posixAccount, inetOrgPerson, and shadowAccount. 
LL2352.Book  Page 98  Friday, August 22, 2003  3:12 PM
Chapter 7    Managing Directory Access
99
8 Change “Map to __ items in list” to All and change the list on the right to the exact set 
of LDAP object classes to which you want the Users record type mapped.
For example, you could delete shadowAccount from the list so that Users maps to only 
posixAccount and inetOrgPerson. Or you could map Users to account, posixAccount, 
and shadowAccount.
To change an item on the list, double-click it.
To add an item to the list, click Add.
To delete the selected item from the list, click Delete.
To change the order of listed items, drag items up or down in the list.
You can find out the object classes of existing user records in the LDAP directory by 
using the UNIX tool ldapsearch in a Terminal window. The following example would 
display the object classes for a user record whose cn attribute is “Leonardo da Vinci:”
ldapsearch -x -h ldapserver.example.com -b "dc=example, dc=com" 
'cn=Leonardo da Vinci' objectClass
The output displayed for this example command could be something similar to the 
following:
# Leonardo da Vinci, example.com
dn: cn=Leonardo da Vinci, dc=example, dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
Preparing a Read-Only LDAP Directory for Mac OS X
If you want a Mac OS X computer to get administrative data from a read-only LDAP 
directory, the data must exist in the read-only LDAP directory in the format required by 
Mac OS X. You may need to add, modify, or reorganize data in the read-only LDAP 
directory. Mac OS X cannot write data to a read-only LDAP directory, so you must make 
the necessary modifications by using tools on the server that hosts the read-only LDAP 
directory. 
To prepare a read-only LDAP directory for Mac OS X:
1 Go to the server that hosts the read-only LDAP directory and configure it to support 
LDAP-based authentication and password checking.
2 Modify the LDAP directory’s object classes and attributes as necessary to provide the 
data needed by Mac OS X.
For detailed specifications of the data required by Mac OS X directory services, see 
Appendix A, “Mac OS X Directory Data.”
LL2352.Book  Page 99  Friday, August 22, 2003  3:12 PM
100
Chapter 7    Managing Directory Access
Populating LDAP Directories With Data for Mac OS X
After configuring access to LDAP directory domains and setting up their data mapping, 
you can populate them with records and data for Mac OS X. For directory domains that 
allow remote administration (read/write access), you can use the Workgroup Manager 
application, which is included with Mac OS X Server, as follows:
• Identify share points and shared domains that you want to mount automatically in a 
user’s /Network directory (the Network globe in Finder windows). Use the Sharing 
module of Workgroup Manager. For instructions, see the file services administration 
guide. 
• Define user records and group records and configure their settings. Use the Accounts 
module of Workgroup Manager. For instructions, see the user management guide. 
• Define lists of computers that have the same preference settings and are available to 
the same users and groups. Use the Computers module of Workgroup Manager. For 
instructions, see the user management guide. 
In all cases, click the small globe icon above the list of users and choose from the pop-
up menu in Workgroup Manager to open the LDAP directory domain. If the LDAP 
directory is not listed in the pop-up menu, choose Other from this menu to select the 
LDAP directory.
Note:  To add records and data to a read-only LDAP directory, you must use tools on the 
server that hosts the LDAP directory.
Accessing an Active Directory Domain
You can configure a server with Mac OS X Server or a computer with Mac OS X to 
access an Active Directory domain on a Windows 2000 or Windows 2003 server. For 
task descriptions and instructions, see:
• “Learning About the Active Directory Plug-in” (next)
• “Configuring Access to an Active Directory Domain” on page 102
• “Enabling or Disabling Active Directory Credential Caching” on page 104
• “Mapping the UID to an Active Directory Attribute” on page 105
• “Changing the Active Directory Groups That Can Administer the Computer” on 
page 105
• “Editing User Accounts and Other Records in Active Directory” on page 106
Alternative methods for accessing an Active Directory domain are appropriate for some 
networks. The alternatives include the following:
• “Setting Up LDAP Access to Active Directory Domains” on page 106
LL2352.Book  Page 100  Friday, August 22, 2003  3:12 PM
Chapter 7    Managing Directory Access
101
Learning About the Active Directory Plug-in
You can configure Mac OS X to access basic user account information in an Active 
Directory domain of a Windows 2000 or Windows 2003 server. What makes this 
possible is an Active Directory plug-in for Directory Access. This Active Directory plug-in 
is listed on the Services pane of Directory Access.
You do not need to make any schema modifications to the Active Directory domain to 
get basic user account information. You may need to change the default Access Control 
List (ACL) of specific attributes so that computer accounts will have the ability to read 
the properties. The Active Directory plug-in generates all attributes required for 
Mac OS X authentication from standard attributes in Active Directory user accounts. 
The plug-in also supports Active Directory authentication policies, including password 
changes, expiration, and forced change.
The Active Directory plug-in dynamically generates a unique user ID and a primary 
group ID based on the user account’s Globally Unique ID (GUID) in the Active Directory 
domain. The generated user ID and primary group ID are always the same for each user 
account even if the account is used to log in to different Mac OS X computers. 
Alternatively, you can force the Active Directory plug-in to map the user ID to an Active 
Directory attribute that you specify.
When someone logs in to Mac OS X with an Active Directory user account, the Active 
Directory plug-in creates a home directory on the startup volume of the Mac OS X 
computer. The plug-in also tells Mac OS X to mount the user's Windows home directory 
(as specified in the Active Directory user account) to mount on the desktop as a share 
point. Using the Finder, the user can copy files between the Windows home directory 
in the Network globe and the Mac OS X home directory.
Each time a user logs in to Mac OS X with an Active Directory user name and password, 
the Active Directory plug-in can cache the authentication credentials on the Mac OS X 
computer. The user can log in again on the same computer when the computer is not 
connected to the network. You can enable or disable caching of credentials.
If the Active Directory schema has been extended to include Mac OS X record types 
(object classes) and attributes, the Active Directory plug-in automatically detects and 
accesses them. For example, the Active Directory schema could be modified using 
Windows administration tools to include Mac OS X Server managed client attributes. 
This schema modification would enable the Active Directory plug-in to support 
managed client settings made in the Preferences module of Workgroup Manager. 
Mac OS X clients assume full read access to attributes that are added to the directory. 
Therefore, it may be necessary to modify the ACL of those attributes to allow Computer 
accounts to read these added attributes.
LL2352.Book  Page 101  Friday, August 22, 2003  3:12 PM
102
Chapter 7    Managing Directory Access
The Active Directory plug-in automatically discovers all domains in an Active Directory 
forest. You can configure the plug-in to allow users from any domain in the forest to 
authenticate on a Mac OS X computer. The multi-domain authentication can also be 
disabled to allow only specific domains to be authenticated on the client.
The Active Directory plug-in fully supports Active Directory replication and failover. It 
discovers multiple domain controllers and determines the closest one. If a domain 
controller becomes unavailable, the plug-in automatically falls back to another nearby 
domain controller.
The Active Directory plug-in uses LDAP to access the Active Directory user accounts 
and Kerberos to authenticate them. The Active Directory plug-in does not use 
Microsoft’s proprietary Active Directory Services Interface (ADSI) to get directory or 
authentication services.
Configuring Access to an Active Directory Domain
Using the Active Directory plug-in listed in Directory Access, you can configure 
Mac OS X to access basic user account information in an Active Directory domain on a 
Windows server. The Active Directory plug-in generates all attributes required for 
Mac OS X authentication. No changes to the Active Directory schema are required. Yet 
the Active Directory plug-in detects and accesses standard Mac OS X record types and 
attributes, such as the attributes required for Mac OS X client management, if the 
Active Directory schema has been extended to include them.
Important:  An advanced option of the Active Directory plug-in allows you to map the 
Mac OS X unique user ID (UID) attribute to an appropriate attribute that has been 
added to the Active Directory schema. If you change the setting of this mapping 
option at a later date, users may lose access to previously created files.
To configure access to an Active Directory domain:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select Active Directory in the list of services, then click Configure.
4 Enter the DNS names of the servers that host the Active Directory forest and domain of 
which the computer you’re configuring will be a member.
The administrator of the Active Directory domain can tell you the names of the forest 
and domain. If you have a single forest with a single domain, enter the same name for 
forest and domain.
5 Enter the Computer ID, which is the name that the computer you’re configuring has 
been assigned in the Active Directory domain.
If you’re not sure what name to enter, ask the Active Directory domain administrator. 
LL2352.Book  Page 102  Friday, August 22, 2003  3:12 PM
Chapter 7    Managing Directory Access
103
6 Click Bind, authenticate as a user who has rights to set up a connection to the Active 
Directory domain, and click OK.
Name and Password:  You may be able to authenticate by entering the name and 
password of your Active Directory user account, or the Active Directory domain 
administrator may have to provide a name and password. 
OU:  Enter the organizational unit (OU) for the computer you’re configuring.
7 Optionally, set the advanced options.
If the advanced options are hidden, click Show Advanced Options.
“Cache last user logon for offline operation”:   Select this option to enable the use of 
offline credentials without modifying the Active Directory schema. This is considered 
the default setting for users logging in to the computer. An equivalent capability is 
provided by managed client settings in an Open Directory domain and most LDAP 
directory domains. If a user account has actual managed client settings, then this 
option is ignored.
“Authenticate in multiple domains”:   Select this option to allow users from any 
domain within the forest to authenticate on this computer. If this option is unchecked, 
a list of specific domains within the forest will be presented when you configure a 
custom Authentication search policy so that you can add domains individually to the 
search policy.
“Prefer this domain server”:   Select this option to specify the DNS name of the server 
whose Active Directory domain you want used by default. If the server becomes 
unavailable in the future, the Active Directory plug-in automatically falls back to 
another nearby server in the forest. If this option is unselected, the Active Directory 
plug-in automatically determines the closest Active Directory domain in the forest.
“Map UID to attribute”:  If the Active Directory schema has been extended to store a 
unique UID (unique user ID) for each user—usually because the Active Directory server 
has already been configured to support UNIX computers—you can specify the 
attribute that stores the UID. If this option is unselected, a UID is automatically 
generated based on Active Directory’s standard GUID attribute.
“Allow administration by”:  Select this option to specify a list of groups whose 
members are allowed to do administrative tasks on this computer (for example, install 
software). Use commas to separate group names in the list. For security, group names 
must be qualified by the domain name they are from (for example, ADS\Domain 
Admins,IL2\Domain Admins). This option is useful if you have desktop administrators 
who need administrative access but are not domain administrators. 
If you want the computer to access the Active Directory domain you just configured, 
you must make sure Active Directory is enabled in the Services pane. 
LL2352.Book  Page 103  Friday, August 22, 2003  3:12 PM
104
Chapter 7    Managing Directory Access
In addition, you must add the Active Directory domain to a custom search policy in the 
Authentication or Contacts pane of Directory Access. 
• If you selected “Authenticate in multiple domains” in step 7, adding the Active 
Directory forest to a custom Authentication search policy enables this computer to 
authenticate users from any domain in the forest. 
• If you deselected “Authenticate in multiple domains,” you can add domains 
individually to the search policy. 
For instructions, see “Enabling or Disabling Active Directory Service” on page 84 and 
“Defining Custom Search Policies” on page 89. 
Enabling or Disabling Active Directory Credential Caching
Using Directory Access, you can enable or disable the use of offline authentication 
credentials from an Active Directory domain accessed by the Active Directory plug-in. 
A user with Active Directory credentials cached on a Mac OS X computer can log in 
while the computer is disconnected from the network. This credential caching does not 
require modifying the Active Directory schema. If the Active Directory schema has 
been extended to include Mac OS X managed client attributes, their mobile account 
setting will be used instead of the Active Directory plug-in’s cached account setting.
To enable or disable caching of authentication credentials from an Active 
Directory domain:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select Active Directory in the list of services, then click Configure.
4 If the advanced options are hidden, click Show Advanced Options.
5 Click “Cache last user logon for offline operation.”
Specifying a Preferred Active Directory Server
Using Directory Access, you can specify the DNS name of the server whose Active 
Directory domain you want the Active Directory plug-in to access by default. If the 
server becomes unavailable in the future, the Active Directory plug-in automatically 
falls back to another nearby server in the forest. If this option is unselected, the Active 
Directory plug-in automatically determines the closest Active Directory domain in the 
forest.
LL2352.Book  Page 104  Friday, August 22, 2003  3:12 PM
Chapter 7    Managing Directory Access
105
To specify a server you prefer the Active Directory plug-in to access:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select Active Directory in the list of services, then click Configure.
4 If the advanced options are hidden, click Show Advanced Options.
5 Select “Prefer this domain server” and enter the DNS name of the Active Directory 
server.
Mapping the UID to an Active Directory Attribute
Using Directory Access, you can specify an Active Directory attribute that you want the 
Active Directory plug-in to map to the unique user ID (UID) attribute of Mac OS X. 
Usually the Active Directory schema must be extended to include an attribute that’s 
suitable for mapping to the UID.
If UID mapping is disabled, the Active Directory plug-in automatically generates a UID 
based on Active Directory’s standard GUID attribute. 
Important:  If you change the mapping of the UID at a later date, users may lose access 
to previously created files.
To map the UID to an attribute in an extended Active Directory schema:
1 In Directory Access, click Services.
2 If the lock icon is locked, click it and type the name and password of an administrator.
3 Select Active Directory in the list of services, then click Configure.
4 If the advanced options are hidden, click Show Advanced Options.
5 Select “Map UID to attribute” and enter the name of the Active Directory attribute you 
want mapped to the UID.
Changing the Active Directory Groups That Can Administer the 
Computer
Using Directory Access, you can grant administrator privileges to groups of user 
accounts accessed by the Active Directory plug-in. These Active Directory user 