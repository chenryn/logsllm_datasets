User: 编写一个Python脚本，从指定的URL下载文件，并将下载进度输出到屏幕上
Assistant: 以下是示例代码，可以从指定URL下载文件并显示下载进度：

```
import requests
import shutil
import os

url = "http://example.com/file.zip"
filename = "file.zip"
r = requests.get(url, stream=True)

if r.status_code == 200:
    total_size = int(r.headers.get('content-length'))
    downloaded_size = 0
    with open(filename, 'wb') as f:
        for chunk in r.iter_content(chunk_size=1024):
            if chunk:
                f.write(chunk)
                downloaded_size += len(chunk)
                done = int(50 * downloaded_size / total_size)
                print(f"\r[{'=' * done}{' ' * (50-done)}] {int(100*downloaded_size/total_size)}%", end="")
    print(f"\nFile {filename} downloaded successfully!")
else:
    print("Error downloading file!")
```

解释：

1. 首先导入所需的模块，requests用于发送HTTP请求，shutil和os用于文件相关操作。

2. 定义要下载的文件的URL和文件名。

3. 发送HTTP请求并将响应包装在一个可遍历的对象中（stream=True）。

4. 检查HTTP响应的状态码是否为200，如果不是，则表示文件下载失败，输出错误消息。

5. 如果状态码为200，则从响应头中获取文件大小，并创建一个空文件以用于保存下载的文件数据。

6. 遍历响应内容的每个分块（chunk），并将其写入空文件中。

7. 在每个分块被写入文件之后，更新下载进度并将其输出到屏幕上。下载进度显示为进度条。

8. 下载完成后，输出成功消息。