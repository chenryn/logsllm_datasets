##### ISSUE TYPE
  * Bug Report
##### COMPONENT NAME
authorized_key
##### ANSIBLE VERSION
    ansible 2.2.1.0
      config file = /Users/brian/Dropbox/Tech-Notes/Programming/Ansible/ansible.cfg
      configured module search path = Default w/o overrides
##### CONFIGURATION
    [defaults]
    inventory = inventory
    remote_user = ubuntu
    ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
    roles_path = roles
    retry_files_enabled = False
##### OS / ENVIRONMENT
macOS Sierra (10.12.3)
##### SUMMARY
Today I had to use one of my playbooks against a box that only has Python3. I
learned about the "ansible_python_interpreter=/usr/bin/python3" variable I had
to set, and my playbook worked through everything until I got to the
"authorized_key" where it failed. I tried the same playbook against an Ubuntu
box that still has Python2.7 and it worked fine. So it seems to be only the
Python3.
##### STEPS TO REPRODUCE
        - name: Add SSH keys for the administrators
          authorized_key:
            user: bhuddleston
            key: https://github.com/bhuddleston.keys
            state: present
##### EXPECTED RESULTS
TASK [Add SSH keys for the administrators]
*************************************  
changed: [targethost.domain.net]
##### ACTUAL RESULTS
The module gave an error and didn't add the SSH keys to the user.
    {
      "changed": false,
      "failed": true,
      "module_stderr": "Shared connection to collector.oitd.net closed.\r\n",
      "module_stdout": "Traceback (most recent call last):\r\n  File \"/tmp/ansible__ftramx6/ansible_module_authorized_key.py\", line 527, in \r\n    main()\r\n  File \"/tmp/ansible__ftramx6/ansible_module_authorized_key.py\", line 523, in main\r\n    results = enforce_state(module, module.params)\r\n  File \"/tmp/ansible__ftramx6/ansible_module_authorized_key.py\", line 433, in enforce_state\r\n    key = [s for s in key.splitlines() if s and not s.startswith('#')]\r\n  File \"/tmp/ansible__ftramx6/ansible_module_authorized_key.py\", line 433, in \r\n    key = [s for s in key.splitlines() if s and not s.startswith('#')]\r\nTypeError: startswith first arg must be bytes or a tuple of bytes, not str\r\n",
      "msg": "MODULE FAILURE"
    }