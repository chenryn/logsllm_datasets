Table 9  Accuracy of the causality search algorithm under different number of nodes and edges 表 9不同节点和边数量下因果关系搜索算法的准确度
| 节点数 | 节点数 | 边数 | 实际不存在的因果关系边数 | 未识别的因果关系边数 | 方向错误的因果关系边数 | Precision  | Recall |
|---|---|---|---|---|---|---|---||---|---|---|---|---|---|---|---|
| 10  |20  |20  |1  |0  |0  |0.95  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 10  |30  |30  |0  |0  |0  |1  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 15  |30  |30  |2  |5  |0  |0.92  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 15  |45  |45  |3  |8  |0  |0.93  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  || 20  |40  |40  |3  |10  |0  |0.91  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 20  |60  |60  |5  |9  |0  |0.91  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 30  |60  |60  |10  |12  |1  |0.81  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 30  |90  |90  |7  |11  |0  |0.92  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| 50  |100  |100  | 	9  |15  |2  |0.88  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  || 50  |150  |150  | 	10  |12  |1  |0.92  |1  1  0.83 0.82 0.75 0.85 0.78 0.88 0.83 0.91  |
| • |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  |针对服务韧性设计的因果关系边权重赋值方法是否能够优化对韧性风险的分析过程?  | |
	本文中比较了本文提出的因果关系边权重赋值方法和现有文献中使用的因果关系边权重赋值方法所得到 的因果关系链路的准确度,以验证本文提出的针对韧性风险的因果关系边权重赋值方法的有效性,被比较的权 重赋值方法有:(1) 	3σ检测:通过 3σ规则判断系统性能是否发生了异常,并将系统性能的时间序列数据转换成仅包含 0 和 	1 的性能异常序列.随后,以性能异常序列计算性能指标之间的皮尔森系统作为因果关系边的权重.该 	方法为 Microscope[64]中使用的方法. 
阈值关联:为了与 CauseInfer[65]中对离散系统性能指标的因果关系分析方法比较,在本案例研究中,将 (2) 
为每一类型的系统性能指标设立若干的阈值,并根据阈值将连续的性能指标序列转换成离散序列.随 后,同样使用皮尔森系数为因果关系边构建权重. 
(3) 	直接关联:按照 CloudRanger[63]中的方法,直接使用两个性能指标数据的皮尔森系数作为因果关系边 	的权重. 
各因果关系边权重赋值方法在不同类型的环境扰动下对最终输出的因果关系链的准确度的影响见表 10. 从表 10 中可以看出,本文提出的针对系统性能变化的因果关系边权重的赋值方法在分析韧性风险上相对于其1250 	Journal of Software软件学报 Vol.32, No.5, May 2021 
他权值赋予方法有更高的准确性.在 4 种引入的环境扰动中,由于容器网络相关的性能指标曲线与服务性能的 曲线有较高的相似性,识别网络阻塞的准确率相对于其他类型系统扰动更高.在表 10 的实验结果中,基于 3σ检 测的韧性风险影响链路的准确度低于参考文献[64]中故障根因分析的准确度.这是因为基于 3σ的异常检测方 法更适用于寻找时间序列数据中的明显的离群点,而在服务降级发生的过程中,系统性能会较长时间处于性能 较低的状态,无法被识别为异常. 
Table 10  Accuracy of causality edge weight assignment methods under different environment disruptions 表 10不同类型系统环境扰动下各因果关系边权重赋值方法的准确率| 赋值方法 | 本文提出的方法 | 3σ检测(MicroScope)  | 阈值(CauseInfer)  | 直接关联(CloudRanger) |
|---|---|---|---|---|
| 故障类型 |准确度 |准确度 |准确度 |准确度 |
| 故障类型 |precision1 	recall1 |precision1 	recall1 |precision1 	recall1 |precision1 	recall1 |
| CPUBurnout  MEM overload Disk I/O block Network Jam  | |39.98 	42.00  43.48 	44.34  43.58 	45.52  46.53 	48.11  |77.53 	81.82  84.56 	86.15  84.96 	89.49  91.67 	95.24  |67.87 	74.31  79.88 	83.22  79.91 	85.72  89.19 	84.52  |• 因果关系链路是否能够命中注入的系统环境扰动? 
本文中对目标系统的各个服务多次注入了各种类型的系统环境扰动(为了保证各服务和各扰动类型的实 验次数,引入的环境扰动不一定为韧性风险),并验证本文提出的分析方法输出的韧性风险影响链路的准确度. 表 11 为各个服务在不同环境扰动下的得到的影响链路分别在 k=1 和 k=2 情况下的 precision 和 recall 值.从表 11 中可以看出:通过本文提出的韧性风险分析方法对于识别案例研究中所注的各类型环境扰动均有较高的准 确度,且得到的韧性风险影响链路在大部分服务下能够保证 80%以上的准确率,仅对 Shipping 服务施加环境扰 动时链路的准确率相对于其他服务较低.这是由于 Shipping 服务仅会被 Order 服务创建完用户订单后被调用, 且不会调用其他服务.故 shipping 服务的响应时间及成功率不会影响到其他服务,较难产生明显的因果关系.Table11  Accuracy of the resilience risk analysis method under different services and disruptions 表 11各服务在不同类型环境扰动下韧性风险分析方法的准确率
 Front-end  Catalogue  User  Carts  Orders  Shipping  Payment 
CPUBurnout 
MEM Overload 
Disk I/O Block 
precision1 
precision2 
recall1 
recall2 100 
100 
100 
100  92.31 
100 
92.31 
100  100 
100 
100 
100  85.71 85.71 92.31 92.31  100 
100 
100 
100  50100 
100 