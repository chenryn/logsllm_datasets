title:Characterization of logical masking and error propagation in combinational
circuits and effects on system vulnerability
author:Nishant J. George and
John Lach
Characterization of Logical Masking and Error Propagation in
Combinational Circuits and Effects on System Vulnerability
Nishant George and John Lach
Charles L. Brown Department of Electrical and Computer Engineering
University of Virginia, Charlottesville VA
[niche, jlach]@virginia.edu
Abstract—Among the masking phenomena that render im-
munity to combinational logic circuits from soft errors, logical
masking is the hardest to model and characterize. This is
mainly attributed to the fact that the algorithmic complexity
of analyzing a combinational circuit for such masking is
quite high, even for modestly sized circuits. In this paper, we
present a hierarchical statistical approach to characterize the
vulnerability of combinational circuits given logical masking
and error propagation. By conducting detailed analyses and
fault simulations for circuits at lower levels, initial assumptions
of 100% vulnerability with single random output errors are re-
ﬁned. Fault simulations performed on the ISCAS85 benchmark
circuits and Kogge-Stone adders of various widths demonstrate
the varied nature of vulnerability for different circuits. The
analysis performed at the circuit level for a 32-bit Kogge-Stone
adder is applied to a microarchitecture simulation to examine
impact on system-level vulnerability.
Keywords-logical masking, soft error vulnerability, statistical
fault injection
I. INTRODUCTION
Combinational circuits have classically been considered
more immune to high-energy particle strike induced soft
errors than memory structures (SRAM, DRAM). While true
for several past generations of semiconductor devices, this
is no longer the case. As was predicted by Shivakumar et al.
[1], aggressive technology scaling progressively reduces this
immunity, effectively rendering combinational circuits as
vulnerable as memory arrays in devices built using modern
technologies. Combinational logic blocks are hence signif-
icant contributors to the unreliability of a semiconductor
chip, necessitating the development of methods to accurately
quantify their contribution to system-level soft error vulner-
ability.
When considering the total area of a general-purpose
microprocessor chip, a large fraction is taken up by SRAM-
based cache structures. Even though this makes combi-
national blocks relatively small targets for transient faults
and soft errors, this might not be the case for application
speciﬁc integrated circuits (ASICs), embedded processors or
safety-critical applications, where cache structures are small
or non-existent to ensure more deterministic operation. In
addition, combinational blocks may contain a larger per-
centage of bits required for architecturally correct execution
(ACE bits) than SRAM arrays. Therefore, the contribution
of system vulnerability arising from faults in combinational
blocks can be signiﬁcant for many applications, and this
forms an important component when characterizing total
chip-vulnerability.
Unlike in SRAM where all soft errors at least affect
system state (some of which may be unACE), soft errors
in combinational circuits may or may not propagate to a
storage element. This is due to a combination of three
masking effects, namely electrical, latching-window and log-
ical masking. While electrical and latching-window masking
are fairly well-understood and can easily be quantiﬁed,
logical masking is not. The former are explained by physical
effects such as attenuation in a logic chain and temporal
shielding respectively, whereas the latter is based on logical
sensitivity of the circuit outputs to affected internal nodes
for a given input. This makes modeling and characterizing
logical masking a hard problem because analyzing so many
input and fault combinations can be intractable, even for
moderately sized circuits (especially if the circuit is treated
as a ﬂat design). In addition, soft errors at single internal
nodes in a combinational circuit may propagate to multiple
outputs in particular patterns, further complicating vulnera-
bility assessment.
is,
In this paper, we present a hierarchical approach to solving
this problem. Without implementation details of underlying
combinational blocks, block level vulnerability to soft errors
must be assumed to be 100%. That
if there is an
error from a fault in a combinational block, it reaches the
output of that block and propagates to higher levels. This
is obviously a conservative estimate, as not all errors at a
low level matter at higher levels. The fraction of errors that
do matter is, after all, deﬁned as vulnerability. In addition,
this 100% vulnerability is typically assumed to arise from
errors manifesting as random, single bit errors, which could
also be inaccurate due to error propagation in combinational
logic.
With implementation details of underlying combinational
blocks, the accuracy of block vulnerability characterization
can be improved using statistical fault injection. To enable
this analysis, we developed a compiler capable of gener-
ating a fault injection simulator (FIsim) from the circuit
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:43:27 UTC from IEEE Xplore.  Restrictions apply. 
978-1-4244-9233-6/11/$26.00 ©2011 IEEE323netlist, and many execution iterations provide a statistically
signiﬁcant vulnerability metric for the circuit under test. The
results of such campaigns on a set of ISCAS85 benchmarks
reveal
the widely varying vulnerability of combinational
circuits to soft errors, further reinforcing the notion that
logical masking must be carefully characterized on a per
circuit basis. In addition, FIsim can be used to develop
fault-to-error models that describe how faults and errors at
a low level propagate through combinational logic to higher
levels in a design hierarchy. We demonstrate how this error
propagation model can be applied to a system-level model in
order to obtain an estimate for the contribution of a particular
combinational block to system-level vulnerability.
For fairly large circuits, such as a 32-bit Kogge-Stone
adder, the total number of possible error combinations at
its output can run into the billions. However, we show that
this is not the case, and the error patterns that this circuit
produces at its output for random sources of error within it
comprise a very small fraction of all the possible patterns.
This observation signiﬁcantly simpliﬁes the development of
a fault-to-error model for applications at a higher level (e.g.,
how faults would be injected at combinational block outputs
during a fault injection campaign to determine system-level
vulnerability).
Through the use of extensive statistical fault injection
at two levels in a design hierarchy, this paper makes the
following contributions.
• A methodology to estimate vulnerability of combi-
national blocks arising from logical masking and error
propagation. The FIsim compiler can easily be inte-
grated into design ﬂow to obtain early estimates of
vulnerability.
• Results assessing the vulnerability of a number of
combinational blocks, revealing the circuit-speciﬁc na-
ture of vulnerability characteristics. This assessment
includes the percentage of internal faults that result in
combinational block output errors and the patterns of
those errors.
• A methodology to use such combinational block vul-
nerability assessments to generate fault-to-error mod-
els that describe how faults at a low level propagate
to higher levels. This simpliﬁes the deﬁnition of a
fault/error space for injections at the system level to
better assess system vulnerability.
A summary of the remaining sections of the paper is as
follows. Section II provides a brief background in the general
area of transient faults and soft errors in logic circuits and the
general deﬁnition of vulnerability. Section III presents a brief
review of published literature related and relevant to that
presented in this paper. FIsim compiler, the tool developed
as part of this work, is elaborated in Section IV, as are the
vulnerability assessments provided by FIsim for a number
of combinational circuits. Section V deﬁnes a mathematical
model to characterize vulnerability in a hierarchical manner.
It also presents how results from FIsim are plugged into the
model. Application of the fault-to-error model developed in
Sections IV and V into a high-level system model to evaluate
the impact of a combinational block on the system-level
vulnerability is described in Section VI. Section VII provides
discussion, and presents conclusions and summarizes this
work.
II. BACKGROUND: TRANSIENT FAULTS IN LOGIC
Historically, transient faults in logic have been considered
to be less malicious than transient faults in SRAM arrays.
This is mainly because a transient fault causing a disturbance
in a chain of logic in a circuit can be considered benign if
its effects are not captured at an output sequential element.
A number of factors are known to attenuate the effect of
transient faults effectively to prevent errors from propagating
[2][3][1]. Even though these masking phenomena effectively
shielded logic from soft errors for many generations, many
are known to reduce with technology scaling, effectively
making logic circuits more vulnerable to soft errors. These
effects are described below.
A. Electrical Masking
Electrical masking is the property by which an electrical
pulse generated as a result of a particle strike within a
combinational logic circuit gets attenuated by subsequent
gates in the logic chain [2][3]. Shivakumar et al. [1] devel-
oped an electrical masking model using critical evaluation
of pulse behavior and provided a method to predict the
output characteristics of a pulse (e.g. amplitude) as it passes
through a gate based on calibration with SPICE simulations.
Their model serves to determine whether the magnitude of
the generated pulse is strong enough to propagate an error.
We do not focus further on this topic as it forms a self-
contained derating factor for the raw error rate and can easily
be incorporated into our model.
B. Latching-Window Masking
Of all the particle strikes that give rise to electrical pulses
strong enough and capable of producing errors, only those
that get captured at output latches are considered malicious.
To propagate an error, the glitch must appear around the time
that an input gets clocked into an output sequential element.
For most sequential elements, the time during which an
input needs to be steady in order for it to be captured into
the output at the latching edge of the clock corresponds
to setup time plus hold time. The fraction of this time
relative to the total clock period gives a useful measure
of temporal vulnerability to single event transients that the
output sequential element experiences.
If the combinational logic chain that feeds into an output
latch is longer, it would require a longer clock period and
consequently presents a shorter relative vulnerable window.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:43:27 UTC from IEEE Xplore.  Restrictions apply. 
324However, the immunity of logic circuits to transient faults
from latching window masking is progressively reducing
with technology scaling as pipeline stages shorten and
operating frequencies increase [1]. The total amount of time
that a circuit is vulnerable (irrespective of the clock period
and the length of the combinational logic chain that feeds it)
is largely a function of the design of the sequential element,
speciﬁcally its setup and hold times. We do not discuss this
further because it is not the primary focus of this work.
Nonetheless, it is an important component of vulnerability
characterization of logic circuits and its effects can be easily
factored into our framework.
C. Logical Masking
The third effect that renders immunity to combinational
logic circuits is logical masking. It refers to the situa-
tion where an erroneous value held by a circuit node is
logically irrelevant for certain input combinations of the
circuit [2][3][1]. For example, an incorrect logic value of
0 at one input of a two-input OR gate does not produce
an error at its output if the other input is at logic level
1. Characterization of logical masking is often left out of
vulnerability estimation methods because of the inherent
algorithmic complexity of evaluating even modestly sized
combinational circuits for their large number of input and
fault combinations (unlike the trivial complexity of electrical
and latching-window masking characterization).
D. Soft Error Vulnerability
We deﬁne vulnerability as the fraction of faults that leads
to errors at the output of a system. Soft error vulnerability
can be deﬁned and evaluated at different levels in the design
hierarchy. For example the vulnerability of a standard cell
(e.g. 2-input OR) may be referred to as cell vulnerability.
Similarly, at a higher level of the hierarchy, say at
the
microarchitecture level (e.g. adder block, pipeline stage), this
may be referred to as block vulnerability, and at the highest
level, architectural vulnerability. In all cases, the deﬁnition
of vulnerability remains the same, and it is the probability
that a fault occurring in that level manifests as an error at
its output. At the standard cell level, an error would be an
incorrect signal level of the gate that the cell represents.
Similarly, an error at
the output of a microarchitecture
structure arising from a fault in that structure can be on
one or more bits that comprise its output.
These deﬁnitions are emphasized here because of the
following reasons. Evaluating the enormous number of input
and fault combinations when attempting to estimate system-
level vulnerability of a structurally ﬂat design will be pro-
hibitively expensive. Credibly abstracting the propagation
of faults between different levels in a design hierarchy as
fault-to-error models is a tractable way of managing this
complexity and is the approach followed in this paper.
III. RELATED WORK: EVALUATION OF ERROR
PROPAGATION AND LOGICAL MASKING
Massengill et al. [4] ﬁrst described a VHDL-based simula-
tion approach to characterizing logical masking for a small
circuit and the effect of errors at one circuit node on the
high-level system. In this paper, we present a generalized
hierarchical methodology to quantify and model the propa-
gation of errors from a combinational circuit to its output and
how such errors are fed to higher levels to determine their
impact at the system level. The main approach to accomplish
this goal is hierarchical fault simulation and fault injection,
from the circuit-level to the system-level.
Automatic Test Pattern Generation (ATPG) is a similar
approach used to algorithmically determine input vectors
that exercise known inherent fault conditions in a circuit
with the main goal being to reduce time-on-tester. The goal
of the work presented in this paper, on the other hand, is
to ﬁnd the fraction of input cases to a circuit that make the
outputs sensitive to random internal faults (i.e. vulnerability).
Further, this work models the propagation of errors to higher
levels in the design hierarchy and estimates the resulting
impact.