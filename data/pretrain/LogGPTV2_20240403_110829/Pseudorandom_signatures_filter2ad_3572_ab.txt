4
or deterministic. Moreover, the PR property is guaranteed even if secret signing keys are exposed (FKE).
This compiler uses randomness extractors and its techniques have been previously developed by Fischlin [17]
to construct anonymous signatures. We thus prove formally that Fischlin’s anonymous signature admits a
general transformation, which is strong enough to convert any unforgeable signature scheme into a scheme
satisfying the strongest7 privacy property. This direct PR compiler, however, is slightly less eﬃcient than our
IND-to-PR compiler.
1.2 Related Work on Signature Privacy
Anonymity of signers assuming high-entropy messages was initially deﬁned by Yang et al. [28], who analyzed
anonymity of ‘text-book’ RSA, PSS, and Schnorr signatures, after applying some necessary modiﬁcations.
Their deﬁnition was simpliﬁed by Fischlin [17] (and relaxed to full key exposure), who showed how to obtain
anonymity using randomness extractors. Anonymity deﬁnitions for arbitrary messages, yet with speciﬁc
restrictions on the format of disclosed signatures, were formulated independently by Bellare and Duan [2],
Saraswat and Yun [24], and Zhang and Imai [29]. Using the ‘sign-then-commit’ approach, Bellare and Duan [2]
gave four constructions: Their ﬁrst scheme (also presented in [24]) uses commitments as black-box to produce
anonymous signatures in the standard model. The second scheme uses randomized hash functions and can
be applied to deterministic signature schemes. Their third solution relies on deterministic hash functions and
can be used with probabilistic signature schemes. The fourth scheme from [2], termed ‘splitting construction’
follows closely the design of Schnorr signatures in the discrete logarithm setting. Saraswat and Yun [24] proved
anonymity of the signature scheme by Boneh and Boyen [5]. Furthermore, both [2] and [24] formalize another
requirement (called unambiguity in [2] and unpretendability in [24]) that prevents the adversary from claiming
the ownership of an anonymous signature at a later stage. Note that this requirement is orthogonal to privacy
and can be handled separately. The anonymous scheme by Zhang and Imai [29] uses what they call ‘collision-
resistant exposure-free functions’ which are instantiated with randomized hash functions in the random
oracle model. Conﬁdentiality of signature schemes has been considered so far formally by Dent et al. [16]
for messages with high entropy, inspired by the deﬁnitional treatment of conﬁdentiality for deterministic
public-key encryption [3]. They deﬁned three ﬂavors (weak, mezzo, and strong) with increasing strength and
addressed both deterministic and probabilistic schemes (without full key exposure). Conﬁdentiality of several
schemes used in practice was analyzed as well, including those that use full-domain hash constructions (for
which [16] deﬁned conﬁdentiality of hash functions, following earlier ideas from [12]), those obtained from
Fiat-Shamir transformation, and those based on randomness extractors. Manifold solutions for obtaining
privacy were also proposed with more advanced signing techniques. For example, in group signatures [14],
users obtain membership certiﬁcates from the manager of a group and issue signatures that identify the
signer as a valid group member without revealing its actual identity. The latter can be recovered from the
signature only by the group manager. Ring signatures [23] allow the signer to form ‘ad-hoc’ groups and so
hide its own identity (in an unrevocable way) from a potential veriﬁer, who only learns that the signer belongs
to the formed group. As discussed in [17], ring signatures diﬀer substantially from anonymous signatures as,
in the former, anonymity is bound to a (presumably small) group, and in the latter it is guaranteed as long
as some information needed for the public veriﬁcation of signatures remains secret. Anonymity notions have
also been considered for other signature types, e.g. undeniable and conﬁrmer signatures by Galbraith and
Mao [18]; as discussed in [24], these notions diﬀer from anonymity in ordinary signature schemes.
2 Previous Privacy Notions
We recall the syntax of digital signatures in Deﬁnition 1 and the notion of existential unforgeability in
Deﬁnition 2. Note that all schemes used in this work are existentially unforgeable.
7 Fischlin [17] mentioned informally that his anonymous signature scheme oﬀers pseudorandomness, although this
notion was not yet deﬁned. Our hierarchy clariﬁes his intuition formally and further implies indistinguishability
and conﬁdentiality of his scheme (in presence of full key exposure).
5
Deﬁnition 1 (Digital Signature Scheme). A digital signature scheme S = (KGen, Sign, Ver) is given
by three algorithms: The key generation algorithm KGen, on input security parameter 1λ, generates a key
pair (sk, pk) ← KGen(1λ), the signing algorithm Sign, on input a secret key sk and a message m ∈ {0, 1}∗,
outputs a signature σ ← Sign(sk, m), and the (deterministic) veriﬁcation algorithm Ver, on input a public
key pk, a message m, and a candidate signature σ, outputs a bit d ← Ver(pk, m, σ). The scheme S is correct
if for all λ ∈ N, (sk, pk) ← KGen(1λ), m ∈ {0, 1}∗, and σ ← Sign(sk, m), we have Ver(pk, m, σ) = 1. The
scheme S is deterministic if every two invocations of Sign(sk,·) on the same input message m result in the
same signature σ.
Deﬁnition 2 (Existential Unforgeability). A signature scheme S is existentially unforgeable under
adaptive chosen-message attacks (EUF-CMA) if all PPT adversaries A have negligible probability to out-
put (m∗, σ∗) ← ASign(sk,·)(pk) (where (sk, pk) ← KGen(1λ) and Sign(sk,·) is a signature oracle) such that
Ver(pk, m∗, σ∗) = 1, provided that m∗ was not queried to Sign(sk,·) oracle.
We focus in the main part of this paper on privacy of probabilistic schemes in a setting with system-wide
known public keys. Please refer to Appendix A for a discussion of restrictions and impossibility results on
privacy for deterministic schemes.
2.1 Anonymous Signatures
Anonymity of signatures for high-entropy messages [17, 28] hides which signer (presuming the system-wide
knowledge of public keys) generated a given challenge signature σ. Deﬁnition 3 is essentially from [17], where
we also let the adversary A choose the challenge message m (similar to [2]). In case of full key exposure, A
receives secret keys, which obsoletes the signing oracle.
(cid:104)
(cid:12)(cid:12)(cid:12)Pr
(cid:105) − Pr
(cid:104)
(cid:105)(cid:12)(cid:12)(cid:12)
Deﬁnition 3 (Anonymous Signatures). A signature scheme S is anonymous (ANON), possibly with full
key exposure (ANON-FKE), if for all PPT adversaries A = (A1,A2) the advantage function
AdvANON[-FKE]
S,A
(λ) :=
ExpANON[-FKE],0
S,A
(λ) = 1
ExpANON[-FKE],1
S,A
(λ) = 1
(λ), b ∈ {0, 1}, are the anonymity experiments from Figure 2, and
is negligible in λ, where ExpANON[-FKE],b
where the following high entropy constraint holds: The function µ(λ) = maxM∈{0,1}∗ Pr[M = m : m ← A1]
is negligible in λ, assuming that A1 is provided with all admissible inputs and oracles as speciﬁed in the
respective anonymity experiment. The minimum entropy of A is then given by − log2 µ(λ).
S,A
ExpANON,b
(λ) :
S,A
(sk0, pk0) ← KGen(1λ)
(sk1, pk1) ← KGen(1λ)
m ← ASign(sk0,·),Sign(sk1,·)
σ ← Sign(skb, m)
d ← ASign(sk0,·),Sign(sk1,·)
output d
1
2
(pk0, pk1)
(pk0, pk1, σ)
ExpANON-FKE,b
(λ) :
S,A
(sk0, pk0) ← KGen(1λ)
(sk1, pk1) ← KGen(1λ)
m ← A1(sk0, pk0, sk1, pk1)
σ ← Sign(skb, m)
d ← A2(sk0, pk0, sk1, pk1, σ)
output d
Fig. 2. Anonymity Experiments (without and with Full Key Exposure)
6
2.2 Conﬁdential Signatures
Conﬁdentiality of digital signatures, formalized by Dent et al. in [16], hides information about the message m
that was signed. Deﬁnition 4 corresponds to strong conﬁdentiality from [16], the strongest among the three
notions (weak, mezzo, strong) proposed there.
Deﬁnition 4 (Conﬁdential Signatures). A signature scheme S is conﬁdential (CONF), possibly with full
key exposure (CONF-FKE), if for all PPT adversaries A = (A1,A2) the following advantage function
(cid:105)(cid:12)(cid:12)(cid:12)
(cid:104)
(cid:12)(cid:12)(cid:12)Pr
(cid:105) − Pr
(cid:104)
AdvCONF[-FKE]
S,A
(λ) :=
ExpCONF[-FKE],0
S,A
(λ) = 1
ExpCONF[-FKE],1
S,A
(λ) = 1
(λ), b ∈ {0, 1}, are the conﬁdentiality experiments from Figure 3, and
is negligible in λ, where ExpCONF[-FKE],b
where the following high entropy constraint holds: The function µ(λ) = maxM∈{0,1}∗ Pr[M ∈ m : (m, t) ←
A1] is negligible in λ, assuming A1 is provided with all admissible inputs and oracles as speciﬁed in the resp.
conﬁdentiality experiment. The minimum entropy of A is then given by − log2 µ(λ).
S,A
ExpCONF,b
1
1
(pk)
S,A (λ) :
(sk, pk) ← KGen(1λ)
(m0, t0) ← ASign(sk,·)
(m1, t1) ← ASign(sk,·)
if |m0| (cid:54)= |m1| then output 0
∗ ← Sign(sk, mb)
σ
(cid:48) ← ASign(sk,·)
(pk, σ
(cid:48)
if t
(pk)
∗
)
t
2
= t0 then output 1, else output 0
ExpCONF-FKE,b
(λ) :
S,A
(sk, pk) ← KGen(1λ)
(m0, t0) ← A1(sk, pk)
(m1, t1) ← A1(sk, pk)
if |m0| (cid:54)= |m1| then output 0
∗ ← Sign(sk, mb)
σ
(cid:48) ← A2(sk, pk, σ
∗
)
(cid:48)
if t
t
= t0 then output 1, else output 0
Fig. 3. Conﬁdentiality Experiments (without and with Full Key Exposure).8
Observe that, in the conﬁdentiality experiments from Figure 3, the ﬁrst-stage adversary A1 outputs a
vector m of messages, each of high entropy, and an additional token t. This token models the intuition that
conﬁdential signatures shouldn’t leak ‘any information’ about signed messages.9
2.3
Independence of ANON and CONF
Lemmas 1 and 2 separate the two notions ANON and CONF. Their independence follows then from the
fact that some unforgeable schemes are neither anonymous nor conﬁdential and that for other schemes both
notions hold simultaneously (cf. Section 4).
Lemma 1 (CONF[-FKE] (cid:54)⇒ ANON). Conﬁdential signature schemes (with full key exposure) are not nec-
essarily anonymous.
Proof. Let S be a conﬁdential signature scheme. We construct a conﬁdential but not anonymous signature
scheme S(cid:48) from S as follows.
(cid:48)
(1λ) :
Output (sk, pk) ← KGen(1λ).
KGen
8 Values m output by (stateless) A1 are vectors of messages in {0, 1}∗ and |m| denotes the number of elements
in m. Accordingly, by σ ← Sign(sk, m) we denote the process of signing the messages in m element-wise and
independently of each other, resulting in a vector σ of corresponding signatures.
9 We stick here to the conﬁdentiality deﬁnition introduced by Dent et al. in [16] using two separate calls of A1.
7
(sk, m) :
σ ← Sign(sk, m). Output σ(cid:48) := (σ, pk).
(pk, m, σ(cid:48)) : Parse σ(cid:48) as (σ, pk(cid:48)). Return 1 iﬀ(cid:0)Ver(pk, m, σ) = 1 ∧ pk = pk(cid:48)(cid:1).
(cid:48)
Sign
(cid:48)
Ver
As the public veriﬁcation key pk is extractable from a signature σ(cid:48), S(cid:48) is not anonymous. Yet, S(cid:48) remains
conﬁdential (as the CONF adversary knows pk anyway). Clearly, the construction preserves unforgeability.(cid:117)(cid:116)
Lemma 2 (ANON[-FKE] (cid:54)⇒ CONF). Anonymous signature schemes (with full key exposure) are not neces-
sarily conﬁdential.
Proof. Let S be an anonymous signature scheme and last : {0, 1}∗ → {0, 1} denote the function that outputs
the last bit of its argument. We construct an anonymous but not conﬁdential signature scheme S(cid:48) from S as
follows.
(cid:48)