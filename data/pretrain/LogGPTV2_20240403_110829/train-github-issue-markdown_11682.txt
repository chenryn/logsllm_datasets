Hello,
I am using seaborn 0.11.2 trying to plot some partial correlations using
`regplot`. I have a dataframe for all of my data (x,y, and covariates), and a
list of columne names (e.g. `covars=["Covar1","Covar2"..."CovarN"]`) that I
want to pass into the `y_partial` argument. If I type I only pass in one name
into the argument, the code runs. However, if I pass `y_partial = covars` to
try to regress out all the covariates, I get the following error:
    /om2/user/smeisler/anaconda3/envs/nipype/lib/python3.8/site-packages/seaborn/_decorators.py in inner_f(*args, **kwargs)
         44             )
         45         kwargs.update({k: arg for k, arg in zip(sig.parameters, args)})
    ---> 46         return f(**kwargs)
         47     return inner_f
         48 
    /om2/user/smeisler/anaconda3/envs/nipype/lib/python3.8/site-packages/seaborn/regression.py in regplot(x, y, data, x_estimator, x_bins, x_ci, scatter, fit_reg, ci, n_boot, units, seed, order, logistic, lowess, robust, logx, x_partial, y_partial, truncate, dropna, x_jitter, y_jitter, label, color, marker, scatter_kws, line_kws, ax)
        849 ):
        850 
    --> 851     plotter = _RegressionPlotter(x, y, data, x_estimator, x_bins, x_ci,
        852                                  scatter, fit_reg, ci, n_boot, units, seed,
        853                                  order, logistic, lowess, robust, logx,
    /om2/user/smeisler/anaconda3/envs/nipype/lib/python3.8/site-packages/seaborn/regression.py in __init__(self, x, y, data, x_estimator, x_bins, x_ci, scatter, fit_reg, ci, n_boot, units, seed, order, logistic, lowess, robust, logx, x_partial, y_partial, truncate, dropna, x_jitter, y_jitter, color, label)
        112         # Drop null observations
        113         if dropna:
    --> 114             self.dropna("x", "y", "units", "x_partial", "y_partial")
        115 
        116         # Regress nuisance variables out of the data
    /om2/user/smeisler/anaconda3/envs/nipype/lib/python3.8/site-packages/seaborn/regression.py in dropna(self, *vars)
         60         vals = [getattr(self, var) for var in vars]
         61         vals = [v for v in vals if v is not None]
    ---> 62         not_na = np.all(np.column_stack([pd.notnull(v) for v in vals]), axis=1)
         63         for var in vars:
         64             val = getattr(self, var)
     in column_stack(*args, **kwargs)
    /om2/user/smeisler/anaconda3/envs/nipype/lib/python3.8/site-packages/numpy/lib/shape_base.py in column_stack(tup)
        654             arr = array(arr, copy=False, subok=True, ndmin=2).T
        655         arrays.append(arr)
    --> 656     return _nx.concatenate(arrays, 1)
        657 
        658 
     in concatenate(*args, **kwargs)
    ValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 0, the array at index 0 has size 162 and the array at index 2 has size 4
Do you know how I could solve this problem?
Thank you,  
Steven