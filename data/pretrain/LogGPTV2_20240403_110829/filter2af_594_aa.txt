今天，我们将探讨一种即使在PHP配置文件中设置了`disable_functions`也能实现远程代码执行的方法。这种方法适用于大多数流行的类UNIX系统。

**漏洞概述**

该漏洞的标识为[CVE-2018-19518](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19518)，由@crlf贡献。接下来，我们将详细讨论此漏洞，并演示如何利用它。

### 测试环境

为了进行测试，我们需要搭建一个测试环境。这里使用的是Debian 9系统的Docker容器，并且关闭了一些安全选项以便于调试。
```bash
docker run --rm -ti --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --name=phpimap --hostname=phpimap -p80:80 debian /bin/bash
```
接着，安装必要的软件包：
```bash
apt update && apt install -y nano php php-imap
```
本文撰写时，从默认存储库安装了PHP版本7.0.30。此外，还需要SSH服务和`strace`工具用于系统调用跟踪。
```bash
apt install -y ssh
apt install -y strace
```

### 安全设置

为了模拟更真实的场景，我们对PHP环境增加一些安全措施。通过搜索“禁用PHP危险函数”，并参考相关资料，在配置文件中添加如下内容：
```bash
echo '; priority=99' > /etc/php/7.0/mods-available/disablefns.ini
echo 'disable_functions=exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source' >> /etc/php/7.0/mods-available/disablefns.ini
phpenmod disablefns
```
理论上讲，现在已禁止了大部分潜在的高风险功能。

### IMAP介绍

IMAP（Internet Message Access Protocol）是一种标准协议，允许电子邮件客户端通过TCP/IP连接访问邮件服务器上的邮件。与POP不同，IMAP设计的目标是允许多个客户端同时管理同一邮箱。通常情况下，IMAP监听端口143，而IMAPS则使用993端口。

对于我们的目的来说，最感兴趣的PHP函数是`imap_open()`，它用来打开IMAP流以连接到指定的邮箱。其语法如下：
```php
resource imap_open ( string $mailbox , string $username , string $password [, int $options = 0 [, int $n_retries = 0 [, array $params = NULL ]]] )
```
其中`$mailbox`参数格式为`{[host]}:[port][flags]}[mailbox_name]`，支持多种标志来控制连接行为。

### 关于rsh

rsh（remote shell）是早期的一种远程登录方式，在SSH出现之前被广泛使用。尽管现在已被SSH取代，但很多类UNIX系统仍然保留着rsh命令，通常是链接到SSH或作为一个独立的服务存在。

### 漏洞细节

查看`imap2007f`库源码可以发现，当尝试建立连接时，如果没有定义SSHPATH，则会尝试读取RSHPATH。这为攻击者提供了一个可能的入口点，因为可以通过修改RSHPATH指向任意可执行文件来绕过`disable_functions`限制。

具体来说，在`/imap-2007f/src/osdep/unix/tcp_unix.c`文件中的`tcp_aopen()`函数负责处理这种逻辑：
```c
#ifdef SSHPATH /* ssh path defined yet? */
if (!sshpath) sshpath = cpystr (SSHPATH);
#endif
#ifdef RSHPATH /* rsh path defined yet? */
if (!rshpath) rshpath = cpystr (RSHPATH);
#endif
```
而RSHPATH是在构建过程中通过Makefile设定的，默认指向`/usr/bin/rsh`。

以上就是关于如何利用特定条件下绕过PHP `disable_functions`限制并通过IMAP实现远程代码执行的基本原理及步骤。希望这对您有所帮助！