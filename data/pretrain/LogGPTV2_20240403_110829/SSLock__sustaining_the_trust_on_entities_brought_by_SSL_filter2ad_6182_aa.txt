title:SSLock: sustaining the trust on entities brought by SSL
author:Adonis P. H. Fung and
K. W. Cheung
SSLock: Sustaining the Trust on Entities  
Brought by SSL 
Adonis P.H. Fung, K.W. Cheung 
Department of Information Engineering 
The Chinese University of Hong Kong 
Shatin, N.T., Hong Kong 
{phfung,kwcheung}@ie.cuhk.edu.hk 
ABSTRACT 
  We  propose  a new,  simple  and effective  domain  segmentation 
approach to sustain SSL protection which is usually compromised 
when  users  are  expected  to  perform  legitimacy  judgment.  It  has 
been established that using security  warnings and indicators is a 
serious  operational  flaw  of  SSL.  As  a  security-critical  system, 
SSL should never rely on users’ judgment as the ultimate defense 
because adversaries that exploit users’ ignorance and illiteracy are 
sufficient  to break  the  most  secure  system.  The  proposal  simply 
requires  a  service  provider  to  opt-in  by  hosting  its  service  in  a 
special subdomain “secure”. The enhanced protection will then be 
automatically in force. In this paper, we consider three severe and 
characteristic attack models, namely dynamic pharming, deceptive 
captive portal and SSLStrip attacks, and we show that there is no 
single  defeating  solution  except  SSLock.  We  have  conducted 
deployability analysis which further justifies the proposal in terms 
of its high compatibility rate. SSLock is the only approach that is 
generic and light-weight for application vendors, opt-in and zero-
initialization  for  service  providers,  and  privacy-preserving  and 
idiot-proof for generic users. 
Categories and Subject Descriptors 
K.6.5 [Management of Computing and Information Systems]: 
Security and Protection—Unauthorized Access 
General Terms 
Security, Design, Human Factors 
Keywords 
SSL  Trust  Management,  man-in-the-middle  attacks,  domain 
naming convention 
1.  INTRODUCTION 
  Secure  Socket  Layer  (SSL)  is  designed  to  provide  end-to-end 
protection  against  privacy  leaks  and  man-in-the-middle  attacks. 
However  the  SSL  protection  can  easily  be  compromised  by  an 
operational flaw which we identify as relying on users as the main 
defense  to  perform  legitimacy  judgment.  For  instance,  users  are 
prompted  for  further  actions  when  they  visit  a  HTTPS  website 
coming  with  an  invalid  certificate.  Users  are  indeed expected  to 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies bear  this  notice  and the  full citation  on  the  first  page.  To  copy 
otherwise,  to  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
ASIACCS’10, April 13–16, 2010, Beijing, China. 
Copyright 2010 ACM 978-1-60558-936-7/10/04…$10.00. 
safeguard  themselves  by  understanding  and  carefully  examining 
all SSL warnings and indicators. Otherwise, users risk themselves 
from leaking privacy to suffering financial loss. It is tempting to 
blame  users  for  their  ignorance.  But  we  assert  that  SSL  as  a 
security-critical system should never rely on users themselves as 
the main defense because adversaries that exploit users’ ignorance 
and illiteracy are enough to break the most secure system [1]. 
  Currently, browsers and other SSL applications all fall short of a 
good  mechanism  to  educate  and  guide  users  to  make  proper 
legitimacy judgment. As depicted in Figure 1, certificate warnings 
are  deployed  in  various  SSL  applications  that  expect  users  to 
discern  certificate 
legitimacy.  But  users  are  unfortunately 
“trained” to bypass these overwhelming warnings. It was reported 
that  certificate  warnings  (triggered  due  to  an  expired  certificate) 
prevented  only  1  out  of  300  users  from  logging  into  an  online 
banking  service  [2].  In  recent  years,  many  research  groups 
attempted to address this operational flaw [11, 12, 13, 14, 16, 18]. 
Most  approaches 
introduce  even  more  security  clues  but 
fundamentally keep relying on users to distinguish fake websites 
from  legitimate  ones.  In  particular,  browser  vendors  respond  by 
shipping  “scarier”  certificate  warnings  that  are  more  difficult  to 
bypass. However, different usability studies revealed that there are 
still significant number of participants (>60% in [9], >50% in [8], 
>80%  in  [7])  bypassing  new  certificate  warnings  regardless  of 
what websites the participants are visiting. Firefox users can even 
undo  vendor’s  effort  by  installing  freely  available  extensions  to 
bypass certificate warnings without hassles [4, 5, 6]. On the other 
hand, it is demonstrated in an attack that users do not understand 
nor  recognize  SSL  protocol  and  indicator  appropriately.  By 
attacking popular websites with a free tool SSLStrip, an attacker 
captured  117  email  accounts,  16  credit  card  numbers,  7  PayPal 
logins and 300 other miscellaneous secure logins in 24 hours [2].  
1.1  The Proposal: SSLock 
  We aim at proposing a simple and generic mechanism for SSL 
applications to intelligently identify and deny, on behalf of users, 
connections  that  were  never  intended  to  be  unencrypted  or 
shipped with invalid certificates. Notice that the only piece of pre-
agreed information is indeed a domain but never a certificate that 
is  hopefully  transmitted  through  an  insecure  channel  without 
interference. Our approach thus lays the foundation on domains. 
Consider  an  established  convenience  that  automatically  binds    a 
specific pattern of domains with the file transfer protocol (FTP). 
For instance, given that ftp.adobe.com offers both HTTP and 
FTP  services,  all  browsers  except  Chrome  will  automatically 
navigate 
is  not 
explicitly  specified.  Similarly,  we  propose  SSLock  (pronounced 
as S-S-Lock) to leverage SSL protection for a specific subset of 
to  ftp://ftp.adobe.com  if  a  protocol 
204(b) 
(c) 
(a) 
fall into potential traps and the corresponding attack-specific 
mitigations. 
  A  proposal  SSLock  that  mitigates  the  operational  flaw.  We 
illustrate how the proposal is designed to be light-weight and 
generic for application vendors; opt-in and zero-initialization 
for  service  providers;  as  well  as  idiot-proof  and  privacy-
preserving for users. 
  A compatibility study on the domain naming convention. We 
reveal  statistics  on  how  existing  websites  are  affected  if 
SSLock is deployed. 
to  sustain 
  A study of several other proposals related to the attacks. We 
have compared SSLock with ForceHTTPS, Chrome’s Force-
HTTPS,  EV  Certificates,  Locked  SOP  and  DNSSEC.  We 
found  SSLock  to  be  an  excellent  choice  which  is  also 
compatible with these schemes. 
Figure  1:  The  current  SSL  deployment  prompts  users  for  actions  in  case  there  are  certificate  errors  including  (a)  certificate 
warning in IE 7 & 8, (b) certificate warning in Microsoft Outlook 2007, and (c) warning on mixed content in IE 8. 
domains  specified  in  Section  4.  For  instance,  if  an  invalid 
certificate  or  none  is  found  in  secure.gmail.com,  SSLock 
automatically denies the connection.  
  The proposal shifts the responsibility of legitimacy assurance to 
security-conscious service providers and eliminates the burden to 
educate users on anything new.  Service providers can opt-in the 
enhanced protection by hosting their services in SSLock-protected 
domains with valid certificates. Services that are reluctant to SSL 
protection or lack  of  valid  certificates  can  simply  stay  in  legacy 
mode  by  using  other  subdomains.  However,  it  is  obligatory  for 
services  like  banks  to  opt-in  to  help  browsers  make  legitimacy 
judgment on behalf of users. As a result, users are automatically 
safeguarded by fulfilling the minimal and essential requirement of 
verifying  domains.  Users  will  no  longer  be  presented  with  any 
bypassable certificate warnings nor invalid content but only valid 
content. The SSL operational flaw is thus resolved by ruling out 
users  from  security-critical  operations 
the  SSL 
protection  which  protects  users  from  the  most  severe  type  of 
attacks including mixed content, (dynamic) pharming and man-in-
the-middle  attacks  using  DNS  and  ICMP  redirection  as  well  as 
ARP spoofing. 
  Noticeably,  SSLock  is  designed  to  be  a  generic  approach 
facilitating  generalization  to  any  SSL  applications.  Apart  from 
browsers,  SSLock  also  leverages  the  SSL  protection  of  Secure 
SMTP/POP3/IMAP  and  FTPS  by  denying  any  connections  that 
are  never  supposed to  come  with  invalid or  without  certificates. 
For  simplicity,  we  illustrate  using  browser 1  as  the  main  SSL 
application and secure.gmail.com as the domain triggering the 
SSLock-protection throughout this paper. 
Contributions: Our main contributions include: 
  An  explanation  of 
Organization:  The  rest  of  the  paper  is  organized  as  follows. In 
Section 2,  we  give  some  background information  on  the  current 
SSL  deployment  and  reveal  the  seriousness  of  the  operational 
flaw.  In  Section  3,  we  consider  three  characteristic  attacks 
attempting to exploit the operational flaw. In Section 4, we detail 
a formal specification of the proposal. In Section 5, we evaluate 
the  corresponding  design  advantages,  compatibility  issues  and 
limitations.  In  Section  6,  we  enumerate  how  the  proposal 
mitigates  the  addressed  attacks.  Section  7  describes  other 
proposals  that  are  related  to  the  attacks.  In  the  last  section,  we 
conclude. 
2.  BACKGROUND 
  We first discuss how a user visits a legitimate domain and then 
enumerate  different  types  of  certificate  warnings  and  indicators 
implemented  in  various  browsers.  Finally,  we  cite  usability 
studies  showing  that  a  majority  of  users  fail  to  perform  proper 
legitimacy judgment. 
2.1  Domains and Protocols 
  A domain is a human readable identification name that the DNS 
resolves  to  IP  addresses  where  computers  can  be  located.  For 
1 In this paper, only IE 7 & 8, Firefox 3 & 3.5, Chrome 2, Safari 4 
and Opera 10 are considered. 
three  characteristic  attack  models 
exploiting the SSL operational flaw. We describe how victims 
205protocols, a browser primarily uses HTTP or HTTPS to negotiate 
with web servers where HTTPS is the cryptographic SSL version 
of HTTP. Users visit a domain and utilize a protocol by: 
  Typing:  Nowadays,  many  users  still  type  domains  by  their 
own instead of recalling them from bookmarks. A domain is 
actually  designed  to  replace  an  IP  and  thus  domains  are 
supposedly easier to remember. For a domain that is related to 
a  company  name,  users  can  typically  type  it  correctly.  To 
locate  the  same  domain  in  subsequent  accesses,  users  are 
further assisted by an auto-suggest feature of location bar with 
fewer keystrokes. This feature is available across all browsers. 
Note that it is uncommon that users will also type https://. 
from  bookmark  –  Domain  and  protocol  are 
bookmarked  as  parts  of  a  full  URL.  Users  can  later  recall  a 
bookmark by clicking the bookmarking  menu or by entering 
several  keystrokes  to  trigger  the  auto-suggest  feature.  Note 
that the protocol is fixed after it is initially bookmarked. 
  Recalling 
  Referrals by hyperlinks – Users are often referred from search 
engines,  emails  and  social  networking  websites  etc  by 
following hyperlinks. Unfortunately, since webpage designers 
have  full  control  on  determining  hyperlinks  on  their  own 
webpages,  adversaries  can  code  misleading  or  malicious 
domains and protocols in which phishing tricks usually begin. 
Currently,  browsers  protect  users  with  automatic  phishing 
filters [10] but users are expected to examine and decline fake 
domains before they are blacklisted. 
2.2  SSL Certificates and Security Warnings 
  SSL employs digital certificates where each of them specifies at 
least its holder’s information, public key, common name, validity 
period and its issuer’s certificate and signature. The current SSL 
deployment  accommodates  both valid  and  invalid  certificates.  A 
certificate  (or  equivalently  the  HTTPS  connection)  is  said  to  be 
valid or trusted if none of the following conditions are met [20]: 
  Self-signed or Unknown Issuer Certificates – It occurs if the 
certificate is self-signed or its issuer certificate is absent in the 
browser’s certificate store. 
  Domain Names Mismatch – It occurs if the certificate is used 
in a domain that does not match the common name specified 
on the certificate. 
  Expired certificates – It occurs if the date of access does not 
fall within the validity period specified on the certificate. 