strcpy(outbuf,"GET / HTTP/1.0\r\n");
strcat(outbuf,host_header);
strcat(outbuf,"Connection: close\r\n");
strcat(outbuf,"\r\n");
err = SSL_write(ssl, outbuf, strlen(outbuf));
shutdown (sd, 1); /* send EOF to server */
printf("(7) sent HTTP request over encrypted channel:\n\n%s\n",outbuf);
/**************************************************/
/* (8) read back HTTP response from the SSL stack */
/**************************************************/
err = SSL_read(ssl, inbuf, sizeof(inbuf) - 1);
inbuf[err] = '\0';
printf ("(8) got back %d bytes of HTTP response:\n\n%s\n",err,inbuf);
/************************************************/
/* (9) all done, so close connection & clean up */
/************************************************/
SSL_shutdown(ssl);
close (sd);
SSL_free (ssl);
SSL_CTX_free (ctx);
printf("(9) all done, cleaned up and closed connection\n\n");
}
这个例子是在Sun Solaris上面编译运行的，但它说明了SSL在很多OS平台上的工
作原理。由于OpenSSL提供了一些强有力的特性，包括所有加密、密钥以及证书管 331
~
理在内的整个程序都可以在一个几页左右的C程序中实现。 332
下面按部分分析下这个程序。
• 程序的顶端包含了一些用于支持TCP联网和SSL的支撑文件。
• 第1部分通过调用SSL_CTX_new创建了本地上下文，以记录握手参数及与SSL
连接有关的其他状态。
• 第2部分通过Unix的gethostbyname函数将（由一个命令行变元提供的）输
入主机名转换成了IP地址。其他平台可能会通过其他方式来提供这项功能。
安全HTTP ｜ 349
• 第3部分通过创建本地套接字、设置远端地址信息并连接到远端服务器，建立了
一条到服务器端口443的TCP连接。
• 一旦TCP连接建立起来，就用SSL_new和SSL_set_fd将SSL层附加到TCP
连接之上，并调用SSL_connect与服务器进行SSL握手。第4部分完成时，我
们就建立了一个已选好密码且交换过证书的可运行的SSL信道。
• 第5部分打印了选中的批量加密密码值。
• 第6部分打印了服务器回送的X.509证书中包含的部分信息，其中包括与证书持
有者和颁发证书的组织有关的信息。OpenSSL库没有对服务器证书中的信息作
任何特殊的处理。实际的SSL应用程序，比如Web浏览器会对证书进行一些完
整性检查，以确保证书是正确签发的，且是来自正确主机的。我们在14.7.6节讨
论了浏览器对服务器证书所做的处理。
• 此时，我们的SSL连接就已经可以用于安全数据的传输了。在第7部分中，用
SSL_write在SSL信道上发送了简单的HTTP请求GET / HTTP/1.0，然后关闭
了连接的输出端。
• 在第8部分中，用SSL_read从连接上读回响应，并将其打印到屏幕上。SSL层
负责所有的加密和解密工作，因此可以直接读写普通的HTTP命令。
• 最后，在第9部分进行了一些清理工作。
更多与OpenSSL库有关的信息请参见http://www.openssl.org。
14.8.3 执行OpenSSL客户端
下面显示了指向安全服务器时这个简单HTTP客户端的输出。在这个例子中，客户
333 端指向了摩根士丹利的在线证券主页。在线交易公司都在广泛使用HTTPS。
% https_client clients1.online.msdw.com
(1) SSL context initialized
(2) 'clients1.online.msdw.com' has IP address'63.151.15.11'
(3) TCP connection open to host 'clients1.online.msdw.com', port 443
(4) SSL endpoint created & handshake completed
(5) SSL connected with cipher: DES-CBC3-MD5
(6) server's certificate was received:
subject: /C=US/ST=Utah/L=Salt Lake City/O=Morgan Stanley/OU=Online/CN=
clients1.online.msdw.com
issuer: /C=US/O=RSA Data Security, Inc./OU=Secure Server Certification
Authority
(7) sent HTTP request over encrypted channel:
350 ｜ 第14章
GET / HTTP/1.0
Host: clients1.online.msdw.com:443
Connection: close
(8) got back 615 bytes of HTTP response:
HTTP/1.1 302 Found
Date: Sat, 09 Mar 2002 09:43:42 GMT
Server: Stronghold/3.0 Apache/1.3.14 RedHat/3013c (Unix) mod_ssl/2.7.1 OpenSSL/0.9.6
Location: https://clients.online.msdw.com/cgi-bin/ICenter/home
Connection: close
Content-Type: text/html; charset=iso-8859-1
302 Found
Found
The document has moved here.
Stronghold/3.0Apache/1.3.14 RedHat/3013c Server at clients1.online.msdw.com
Port 443
(9) all done, cleaned up and closed connection
只要完成了前面4个部分，客户端就有了一条打开的SSL连接。这样它就可以查询
连接的状态，选择参数，检查服务器证书了。
在这个例子中，客户端和服务器对DES-CBC3-MD5批量加密密码进行了沟通。你
还能看到服务器站点证书属于美国犹他州盐湖城的摩根士丹利组织。证书由RSA
数据安全组织授予，主机名为clients1.online.msdw.com，与请求相符。 334
只要建立起了SSL信道，并且客户端对站点的证书没有异议，就可以通过安全信
道来发送其HTTP请求了。在我们这个例子中，客户端发送了一条简单的“GET /
HTTP/1.0”HTTP请求，并收到了302 Redirect响应，请求用户去获取另一个URL。
14.9 通过代理以隧道形式传输安全流量
客户端通常会用Web代理服务器（参见第6章）代表它们来访问Web服务器。比
如，很多公司都会在公司网络和公共因特网的安全边界上放置一个代理（参见图
14-19）。代理是防火墙路由器唯一允许进行HTTP流量交换的设备，它可能会进行
病毒检测或其他的内容控制工作。
但只要客户端开始用服务器的公开密钥对发往服务器的数据进行加密，代理就再也
不能读取HTTP首部了！代理不能读取HTTP首部，就无法知道应该将请求转向何
处了（参见图14-20）。
安全HTTP ｜ 351
客户端 公共因特网
客户端 防火墙
代理
安全边界
图14-19 公司防火墙代理
client17.mycompany.com proxy.mycompany.com www.cajun-gifts.com
bdfwr73ytr6ouydoiw687eqidfjwvd76weti76fig287hdi9
8r82yr87pfdy72y87193836PDUyqe719eyty3gee98y8787
图14-20 代理无法转发加密请求
为了使HTTPS与代理配合工作，要进行几处修改以告知代理连接到何处。一种常
335 用的技术就是HTTPS SSL隧道协议。使用HTTPS隧道协议，客户端首先要告知代
理，它想要连接的安全主机和端口。这是在开始加密之前，以明文形式告知的，所
以代理可以理解这条信息。
HTTP通过新的名为CONNECT的扩展方法来发送明文形式的端点信息。CONNECT方
法会告诉代理，打开一条到所期望主机和端口号的连接。这项工作完成之后，直接
在客户端和服务器之间以隧道形式传输数据。CONNECT方法就是一条单行的文本命
令，它提供了由冒号分隔的安全原始服务器的主机名和端口号。host:port后面跟
着一个空格和HTTP版本字符串，再后面是CRLF。接下来是零个或多个HTTP请
求首部行，后面跟着一个空行。空行之后，如果建立连接的握手过程成功完成，就
可以开始传输SSL数据了。下面是一个例子：
CONNECT home.netscape.com:443 HTTP/1.0
User-agent: Mozilla/1.1N
在请求中的空行之后，客户端会等待来自代理的响应。代理会对请求进行评估，确
保它是有效的，而且用户有权请求这样一条连接。如果一切正常，代理会建立一条
352 ｜ 第14章
到目标服务器的连接。如果成功，就向客户端发送一条200 Connection Established响应。
HTTP/1.0 200 Connection established
Proxy-agent: Netscape-Proxy/1.1
更多有关安全隧道和安全代理的信息，请回顾8.5节。
14.10 更多信息
安全和密码问题是非常重要，也非常复杂的问题。如果想学习更多有关HTTP安全
性、数字加密技术、数字证书以及公开密钥基础设施方面的内容，可以从下面这几
个地方开始。
14.10.1 HTTP安全性
• Web security, Privacy & Commerce13（《Web安全与电子商务》）
Simson Garfinkel著，O’Reilly & Associates公司。这是Web安全以及SSL/TLS
和数字证书方面最好、最可读的入门型书籍之一。
• http://www.ietf.org/rfc/rfc2818.txt
RFC 2818，“HTTP Over TLS”（“TLS上的HTTP”），说明了如何在SSL的后继
协议——TLS协议之上实现安全HTTP。 336
• http://www.ietf.org/rfc/rfc2817.txt
RFC 2817，“Upgrading to TLS Within HTTP/1.1”（“在HTTP/1.1中升级到TLS”），
说明了如何使用HTTP/1.1中的升级机制在现存的TCP连接上启动TLS。这样非
安全和安全HTTP流量就可以共享相同的知名端口了（在这种情况下，使用的是
http:的80端口，而不是https:的443端口）。还可以使用虚拟主机技术。这样，使
用一台HTTP+TLS服务器就可以区分出发往同一个IP地址上不同主机名的流量了。
14.10.2 SSL与TLS
• http://www.ietf.org/rfc/rfc2246.txt
RFC 2246，“The TLS Protocol Version 1.0”（“TLS协议版本1.0”），对（SSL的
后继协议）TLS协议的版本1.0进行了规范。TLS提供了因特网上通信的私密性。
协议允许客户端/服务器应用程序以防止窃听、篡改以及伪造报文的方式进行通信。
• http://developer.netscape.com/docs/manuals/security/sslin/contents.htm
“Introduction to SSL”（“SSL简介”）介绍了SSL协议。SSL最初是由网景公司
注13： 本书中文版由中国电力出版社出版。（编者注）
安全HTTP ｜ 353
开发的，已广泛应用于万维网上客户端和服务器间的认证及加密通信。
• http://www.netscape.com/eng/ssl3/draft302.txt
“The SSL Protocol Version 3.0”（“SSL协议版本3.0”）是网景公司1996年的SSL规范。
• http://developer.netscape.com/tech/security/ssl/howitworks.html
“How SSL Works”（“SSL是如何工作的”）是网景公司对密钥加密技术的介绍。
• http://www.openssl.org
OpenSSL项目是一个合作开发项目，目的是开发一个强壮的、全功能的、商业
级开源工具集，以实现安全套接字层（SSL v2/v3）和传输层安全（TLS v1）协
议以及强大的通用密码库。这个项目由全世界范围内的志愿者社区管理，那些
志愿者通过因特网进行交流、制定计划、开发OpenSSL工具集并撰写相关文档。
OpenSSL基于Eric A. Young和Tim J. Hudson开发的优秀SSLeay库。OpenSSL
工具集有一个Apache风格的许可证，这基本上就意味着只要遵循一些基本的许
可条件，就可免费获得并将其用于商业或非商业目的。
14.10.3 公开密钥基础设施
• http://www.ietf.org/html.charters/pkix-charter.html
IETF PKIX 工作组组建于 1995 年，目的是开发一些因特网标准，支持基于
337 X.509的公开密钥基础设施。这是对此小组活动很好的总结。
• http://www.ietf.org/rfc/rfc2459.txt
RFC 2459，“Internet X.509 Public Key Infrastructure Certificate and CRL Profile”
（“因特网X.509公开密钥基础设施证书及CRL概述”），详细介绍了X.509 v3数字
证书。
14.10.4 数字密码
• Applied Cryptography14（《应用密码学》）
Bruce Schneier著，John Wiley & Sons公司出版。这是为实现者编写的经典密码
学书籍。
• The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography15
（《密码故事——人类智力的另类较量》）
Simon Singh著，Anchor Books公司出版。这是一本有趣的密码学入门书籍。它
338 不是为技术专家编写的，而是一本生动的密码学历史读物。
注14： 本书中文版由机械工业出版社出版。（编者注）
注15： 本书中文版由海南出版社出版。（编者注）
354 ｜ 第14章
第四部分
实体、编码和国际化
第四部分讲述的内容都与HTTP报文的实体主体和被实体主体作为货物承载的内容
有关。
• 第15章讲述了HTTP内容的格式和语法。
• 第16章探讨了允许世界各地的人们相互交换内容的各种Web标准，这些内容由 339
~
各种不同语言和不同字符集构成。 340
• 第17章讲解了各种用于协商可接受内容的机制。