instance) the more likely it is to lead to several bursts of updates as illustrated
in Fig. 2c. In such situation grouping updates based on primary paths unavail-
abilities will group all the bursts into a single pseudo-event. For these reasons,
whereas BGP dynamics analysis typically work on the stream of BGP updates,
our proposal is to work on the stream of pseudo-events instead.
3.3 Practical Primary Path Computation
In this section we study the feasibility of relying solely on routing table (i.e.,
RIB, for Routing Information Base) dumps to compute primary paths. Recall
that in Sect. 3.1 we computed the primary path repository with BGP updates in
an oﬄine fashion. However, to be of any practical interest, primary paths should
be easily computable at any time in a simple, eﬃcient and online manner. To
do this, we propose to use RIBs. As an alternate form of BGP data, we consider
RIBs to be easier to work with than updates because they provide snapshots
208
T. Green et al.
Table 1. IPv4 primary path bootstrap accuracy: percentage of primary paths matching
those of the 10-snapshots reference when using d ≤ 9 snapshots.
Snapshots 1
2
3
4
5
6
7
8
9
Accuracy 97.4% 97.9% 98.5% 98.8% 99.0% 99.1% 99.2% 99.4% 99.7%
Fig. 3. Cases of primary paths switches during the observation window.
of paths for all  pairs. Besides, to bootstrap the primary path
repository in Sect. 3.1 we already had to rely on a RIB dump.
First question arising is how many consecutive RIBs are required to capture
stability. Indeed, there is no guarantee that a single RIB contains the primary
paths. However, as primary paths are computed as the most used path over time,
they should be easily identiﬁable from the observation of multiple consecutive
dumps. The question is then how many consecutive RIB dumps are needed in
practice for an accurate selection. To answer this question, we operate as follows.
For the 10 days preceding our observation window (i.e., December 22nd to 31st
2016), we select one RIB dump per day during d consecutive days (∀d ∈ [1, 10]).
For a router r and a preﬁx p, we extract as its primary path the most present
path in the d consecutive dumps. We then compare, for all 
pairs, what fraction of primary paths obtained with diﬀerent number ∀d ∈ [1, 9]
of RIB dumps match those obtained with the d =10 full interval (used as ref-
erence). Results are shown in Table 1 for IPv4. It can be seen that computing
primary path with RIB dumps has over 97% chances of success even from a
single snapshot, and rapidly exceeds 99% accuracy by adding a few snapshots.
Additionally, the results also suggest primary paths to be stable with high prob-
ability on at least a weekly timescale. Now that we know that a few RIB dumps
give us the same primary paths than a large number of dumps, we aim to deter-
mine if RIB dumps are a suitable mean to compute primary paths. For this
purpose, we compare the primary paths obtained with RIBs with the ones pre-
viously computed from updates in Sect. 3.1. We obtain a matching of 76.48%.
The non-matching fraction could result from ineﬃciency of the method or from
Leveraging Inter-domain Stability for BGP Dynamics Analysis
209
primary paths switching during the time window. In fact, if such switches occur
at the beginning of the time window, then for a given  pair
(cid:3)
the primary path x1 computed with RIBs will diﬀer from the one (x
1) com-
puted with updates, as illustrated by case 2 in Fig. 3. To investigate whether
the non-matching fraction is due to primary path switches, we compute primary
paths using RIBs from April 1st to April 10th (i.e., the 10 days following the end
of the observation window). This time, we obtain a matching of 85.95% when
comparing primary paths from the RIBs in April with those computed with
updates. Once again the non-matching fraction could result from method ineﬃ-
ciency or from switches (this time, at the end of the time window, as illustrated
by case 1 in Fig. 3). Finally, it appears that 95.5% of primary paths computed
on updates are either matching those computed from the RIBs of December or
those of April. This conﬁrms that most of the non-matching fraction is due to
primary paths switches (i.e., structural pseudo-events) during the time window.
It also highlights the need to periodically update the primary paths repository.
We leave the study of the characterization of primary path turnover as part of
our future work. We will show in the next section that even without updating
the primary path repository periodically during the time window, we still get
valuable results. In this section we have shown that the paths most present in
a few RIB dumps are a good indicator of the primary paths used for the next
days. In fact, these paths highly overlap with primary paths obtained from the
stream of updates, meaning that RIBs are thus a viable approach to compute
primary paths in practice.
4 BGP Dynamics
In this section, we apply our methodology on two classic use cases of BGP
dynamics analysis: inter-domain tomography and anomaly detection.
4.1 First Use Case: Inter-domain Tomography
The Internet as a set of interacting ASes is a complex environment. Tomography
intends to infer the internal characteristics of a system from external observa-
tions. Pseudo-events are groups of updates based on primary paths unavailability
periods which exhibit two interesting properties: a duration and the sequence of
paths explored.
We analyze updates from January 1st 2017 to March 31st 2017 (W = 3
months) collected at the RIPE RIS LINX, in the order of arrival. Each update
is processed against the primary path repository built upon the last 10 days
of December’s RIBs. Upon detection of an update for a  pair
announcing the start at ts of a primary path x1 unavailability (i.e., the path
announced is not the primary path), a pseudo-event object is created. The sub-
sequent updates observed for the same  pair, which relate to
the ordered set x = (x2, . . . , xN ) of paths explored, are indexed into this object
210
T. Green et al.
Table 2. Volume gain in the pseudo-events domain
IPv4
IPv6
Updates
487,104,558 157,249,182
Pseudo-events
57,066,053
17,687,525
Structural pseudo-events 1,406,392
78,995
Transient pseudo-events
55,659,661
17,608,530
Reduction factor
8.5
8.9
and can be processed further, for example to characterize anomalies (e.g., out-
ages, hijack, etc. as explored in Sect. 4.2). If an update announcing x1 is observed
at time te > ts, then this pseudo-event is classiﬁed as transient, and its duration
is te − ts. If at the end of the time window W the pseudo-event has not recon-
verged to x1 then this pseudo-event is classiﬁed as structural, and its duration
is set to W − ts. Results are presented in Table 2. First of all, it can be noticed
that the systematic indexing of updates into pseudo-events result in a reduction
of the number of objects that will have to be further processed for analysis: i.e.,
rather than analyzing a stream of updates we analyze a stream of pseudo-events.
The reduction factor is almost one order of magnitude when transforming the
stream of updates into a stream of pseudo-events: more precisely, it is a sizable
factor of 8.5 (8.9) volume reduction for IPv4 (IPv6). There is therefore a prac-
tical volume gain when working with pseudo-events. Moreover, as it could be
expected, it appears that transient pseudo-events largely dominate structural
ones: less than 2.5% of pseudo-events are structural. We now further investigate
pseudo-event properties and the light they shed on BGP dynamics.
Pseudo-events duration. We ﬁrst turn our attention to temporal properties of
pseudo-events. Comparison of Fig. 4a and b conﬁrms our expectations: transient
pseudo-events (i.e., those which reconverge to the primary path after a path
exploration) have indeed small duration (Fig. 4a), while structural pseudo-events
(i.e., those which did not reconverge to the primary path) have long durations
(Fig. 4b). Particularly, about 50% of IPv4 (60% IPv6) transient pseudo-events
last less than a minute, whereas only about 11% of IPv4 (18% IPv6) structural
pseudo-events last less than a week.
Pseudo-events path exploration. The distribution of the path exploration
length card(x) is reported in Fig. 5a. It clearly appears that transient pseudo-
events explore relatively few paths, just 1 in 60% of cases and rarely more than 10
(3% of cases) before reconverging on the primary paths. In other words, transient
pseudo-events index 2 updates in 60% of cases and rarely more than 11 (3% of
cases). More interestingly, if we characterize a pseudo-event by its sequence of
paths explored then we can detect when a pseudo-event occurs multiple time,
as illustrated on Fig. 5b. If most transient pseudo-events occurred only once
Leveraging Inter-domain Stability for BGP Dynamics Analysis
211
30s 1m
1h
1d
7d 30d
30s 1m
1h
1d
7d 30d
F
D
C
C
 100
 80
 60
 40
 20
 0
IPv4
IPv6
12.9% longer than 1h
3% longer than 1h
F
D
C
C
 100
 80
 60
 40
 20
 0
IPv4
IPv6
11.5% less than 7d
18.5% less than 7d
 1
 10
 100  1000  10000 100000 1×106  1×107
 1
 10
 100  1000  10000 100000 1×106  1×107
Duration (sec)
Duration (sec)
(a) Transient pseudo-events.
(b) Structural pseudo-events.
Fig. 4. Complementary CDF of pseudo-events duration te − ts, in semi-log-x scale
(bottom x-axis reports duration in seconds, top x-axis uses more human-friendly units).
F
D
C
 100
 80
 60
 40
 20
 0
IPv4
IPv6
97% with at most ten paths
61% with only one path
F
D
C
 100
 80
 60
 40