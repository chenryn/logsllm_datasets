serve how the M5P is able to predict 
the 
time to crash, when it is near. Most importantly, 
never was trained using executions 
were injecting 
with several 
different 
15,30,45 and T =  60,90,120, 
stances), 
the execution. 
inner nodes and 36 leafs. These results 
ing adaptability 
so 6 executions, 
2752 in­
in 
was composed by 35 
where both resources 
We trained 
(constant) 
with great accuracy 
the model 
show the promis­
not seen 
but in all of them only one resource 
rates (N =  15,30,75, M = 
the model 
workload 
and 
errors simultaneously. 
The model generated 
to new situations 
of this approach 
at different 
(constant) 
executions 
injection 
involved 
of a good 
We decided 
extracted 
following 
increases 
concluded 
to re-train 
we obtained 
the conclusion 
the prediction 
and after some inspec­
in our first approach, 
from that, the real trend (the 
patterns. 
pattern 
that selection 
We 
to apply an expert fea­
in 
and extract 
between 0 to N). However, 
phase or 
with  release 
Our idea is that M5P can manage the 
ing set does not have any execution 
periodic 
periodic 
random injection 
poor results 
tion we noted that the model was paying too much attention 
attributed. 
to irrelevant 
ture/variable 
selection 
[22], where the authors 
subset of variables 
decided 
with the Java Heap evolution. 
by 17 inner nodes and 18 leafs. In Figure 4 we can ob­
serve clearly 
the Java Heap memory is being consumed and released 
every phase until exhaust the memory resource. 
shows the MAE and S-MAE, PRE-MAE and POST-MAE 
obtained 
We note that 
M5P can manage the periodic 
gression 
able selection. 
M5P has problems 
the experiment. 
is linear and how 
in 
Table 4 
which obtains 
However, 
by M5P and the Linear Regression. 
the model only with the variables 
we have to notice that, in this case, 
how the time until failure 
The new model was formed 
in the last 10 minutes of 
much worse results 
to be accurate 
unlike Linear Re­
accuracy. 
even after vari­
pattern, 
related 
4.4 Dynamic Software Aging due to Two 
Resources 
After evaluating 
our approach 
in front of aging due to a 
single resource, 
by two resources 
our next step was to consider 
aging caused 
The two resources 
in-
simultaneously. 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
514 
DSN 2010: Alonso et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:15 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks 
(DSN) 
during previous 
training. 
Naive Bayes, decision 
trees and support 
vector ma­
Finally, 
we want to remark another 
interesting 
point. Af­
before, 
presented 
we 
by M5P in every 
we observed 
We observed 
For example, 
the models generated 
all of the experiments 
the root cause of failure. 
the model could give clues to 
in the 
the tree built by M5P, where 
the system memory attribute 
ter conducted 
decided to inspect 
experiment. 
determine 
last experiment, 
the root node contains 
used system memory is over 1306 MB, the second variable 
inspected 
in the system. But if 
system memory is below 1306 MB, the most relevant 
vari­
able is Tomcat Memory and the only third is the number of 
Only with the first two levels of the tree we can 
threads. 
observe 
how memory usage and the threads 
variables, 
which gives administrators 
on the root cause of the failure 
interpreting 
ditional 
interest 
or developers 
a clue 
due to software aging. So, 
is the number of threads 
the models generated 
via ML models has an ad­
prediction. 
are important 
besides 
if the 
5. Related Work 
It proposes 
consumption 
The idea of modeling 
resource 
and fore­
from here is far from new. A lot 
with capac­
is presented 
In [23], an off-line 
analysis 
cast system performance 
of effort along this line has been concerned 
framework 
ity planning. 
and post-mortem 
to develop performance 
analy­
(SLO) viola­
sis of the causes of Service 
tions. 
Naive 
Bayesian 
works (BN), to determine 
lated to performance 
is used to build an analytic 
multi-tier 
offers successful 
provisioning, 
the use of TANs (Tree Augmented 
of Bayesian 
Net­
applications.  They 
show how Linear Regression 
In [24], Linear Regression 
even under variable 
model for capacity 
which resources 
Level Objective 
Networks), 
and resource 
a simplified 
for capacity 
are most corre­
behavior. 
planning 
planning 
version 
results 
of 
workloads. 
different 
due to a workload 
rithms: 
chines to evaluate 
deterministic 
test their approach 
resource 
involved 
their approach. 
their effectiveness 
to model and predict 
didn't 
the authors 
software 
aging. However, 
against 
in order to evaluate 
a dynamic and more than one 
of 
the effectiveness 
Some interesting 
works have addressed 
the important 
events specifically 
a frame­
predic­
failures 
different 
critical 
their effective­
time-series 
algorithms 
clusters. 
They 
methods and rule­
and critical 
In [28], the authors 
present 
events in large-scale 
framework that determines 
an anomaly, 
analysis 
to evaluate 
types of critical 
events and 
is that different 
to the element that we 
But, as we showed M5P could obtain good 
involved. 
[15] 
whether a 
task of predicting 
in computer 
systems. 
work to predict 
compare different 
based classification 
ness when predicting 
system metrics. 
Their conclusion 
tive methods are needed according 
want to predict. 
results, 
even with more than one resource 
presents 
an on-line 
system is suffering 
software change. The idea is to divide the sequence 
recorded 
gression 
any Linear Regressions 
clusion 
during that period. 
ours, because the underlying 
transient 
tem admits a static 
only and does not degrade or drift over time. On the other 
hand, we concentrate 
which a model valid now will not be valid soon, even under 
the same workload. 
change, or a 
of 
data into several 
using the Linear Re­
error. If for some period it is impossible 
at all, the con­
with 
is that, except on 
and between  software 
the sys­
changes, 
model, one that depends on the workload 
some type of anomaly 
is complementary 
with acceptable error 
on systems that can degrade, 
is that the system is suffering 
Their approach 
assumption 
anomalies 
a workload 
segments 
to obtain 
i.e., 
for 
6. Conclusions 
Other works such as [25, 26] present 
techniques 
We have proposed 
a ML approach 
to build automatically 
in any system. We 
of the resources 
use time-series 
in a sys­
resource 
exhaustion 
two different 
approaches: 
in time. In [26], authors 
from the system to predict 
reward model using the workload 
in [25], authors 
use a 
and re­
re­
to predict 
tem that suffers software aging. In these two works they 
present 
semi-Markov 
source usage data collected 
source exhaustion 
ARMA models from the system data to estimate 
the re­
source exhaustion 
However, 
ware aging, not a software 
time. Other important 
apply the model over the resource 
ware aging, but our approach 
allow ML to learn, by itself, 
sources) 
trend of the soft­
aging that could change with 
with our work is that they 
is more generic 
what is the resource 
(or re­
these works assume a general 
due to workload 
in the software 
difference 
involved 
involved 
received 
with the soft­
because we 
aging. 
Other interesting 
approach 
an evaluation 
thors present 
was presented 
in [27], the au­
of three well-known 
ML algo-
available 
over a sliding 
where the most important 
speed of every resource, 
and the complexity 
in feeding 
models from system metrics 
decided to use ML due to the complexity 
behavior 
based our approach 
rived variables 
sumption 
using averaging 
neous measurements. 
predict 
consume resources 
not be attributed 
of experiments 
plex software 
M5P obtains 
scenarios. 
ing scenarios 
suggested 
aging scenarios. 
acceptable 
accuracy 
never seen during training. 
until its exhaustion, 
We have evaluated 
a new potential 
to evaluate 
Moreover, 
approach 
by the system. 
and com­
the M5P in different 
Our experiments 
show how 
in a variety 
of dynamic 
M5P has showed its ability 
Finally, 
of adapt­
we have 
the 
to help to determine 
of the environments. 
We have 
our model with a set of de­
is the con­
variable 
which is smoothed 
out 
window of recent instanta­
our approach 
to 
the effect of software aging errors which gradually 
to excess load. We have conducted 
a set 
in a way that can­
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
515 
DSN 2010: Alonso et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:15 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks 
(DSN) 
aging, interpreting 
version 
of this paper, presenting 
in real time the time-to-crash 
the models gener­
root cause software 
ated by M5P. On the other hand, in [29], we present 
an 
extended 
for 
a framework 
predicting 
which suffer from software aging, using ML techniques. 
Our framework allows recovery 
server using a clean automatic 
of new and on-going 
of the potentially 
and avoiding 
of web applications 
crashing 
recovery 
losses 
[11] K.Vaidyanathan 
and K.Trivedi A Comprehensive 
Modelfor 
Software Rejuvenation. 
cure Computing, Vol, 2, No 2, April-2005 
IEEE Trans. On Dependable and Se­
[12] G.Candea, E.Kiciman, S.Zhang and A.Fox JAGR: An Au­
tonomous Self-Recovering 
Application 
Workshop on Active Middleware Services, 
Server. Proc. 5th Int 
Seattle, 
June 2003 
[13] K.Cassidy, 
K.Gross and A.Malekpour. Advanced Pattern 
Recognition
for Detection 
ena in Online Transaction 
Conf. on Dependable Systems and Networks, DSN-2002. 
of Complex Software Aging Phenom­
Proc. of the Int. 
Processing Servers. 
http://alonso.site.upc.eduiresearchlDSN-20IOresults.html 
user requests. 
issues and challenges 
Several 
information 
which has the responsibility 
are still open. We want 
to work on to know what is the best moment to apply the 
recovery 
action, 
the prediction 
action to maximize 
also we want to investigate 
techniques 
from the predictors. 
build a prediction 
reach a consensus 
Anther idea we want to evaluate 
is to 
models to 
board with a set of prediction 
to increase 
the server utilization. 
Artificial 
to combine human expertise 
the prediction 
further 
accuracy. 
In the future, 
we 
and take the most effectiveness 
to understand 
Intelligence 
with information 
Acknowledgment 
This research 
work has been supported 
by the Span­
of Education 
ish Ministry 
and Science (projects 
60625 and TIN2008-06582-C03-01), 
work of Excellence, 
(2009-SGR-980 
and 2009-SGR-1428). 
and by the Generalitat 
EO PASCAL2 Net­
TIN2007-
de Catalunya 
References 
[1] D. Oppenheimer, 
A. Ganapathi, 
Why do 
fail, and what can be done about it?.In 4th 
and D. A. Patterson. 
internet services 
USENIX Symposium on Internet Technologies 
(USITS'03),2003. 
and Systems 
cations. 
TR CMU-PDL-05-109, 
Carnegie Mellon Univ, 2005. 
[3] MemProfiler http://memprofiler.com! 
[4] Parasoft Insure++ http://www.parasoft.com 
[5] K. S. Trivedi, 
k. Vaidyanathan 
[14] J. Alonso, R. Gavalda, and J. Torres Predicting 
crashes: A case study in comparing prediction 
Procs. Fifth IntI. Conf. on Autonomic and Autonomous Sys­
tems (ICAS 2009), April 20-25, Valencia, 
Spain, 2009. 
web server 
algorithms. 
[15] L. Cherkasova, 
K. Ozonat, N. Mi, J. Symons, E. Smirni 
Change? or Workload Change? 
Anomaly? Application 
Towards Automated Detection 
Anomaly and Change. Procs. 38th Annual IEEEIlFIP Conf. on 
Dependable Systems 
June 24-27. 
and Networks, DSN'2008, 
of Application 
Performance 
[16] Y. Wang and I. H. Witten Inducing 
Model Treesfor Contin­
In Proc. of the 9th European Conf. on Machine 
uous Classes. 
Learning Poster Papers, 1997. 
[17] Weka 3.5.8 http://www.
[18] TPC-W Java Version http://www.ece.wisc.edurpharmJ. 
[19] MySQL Data Base server http://www.mysql.com!. 
[20] Apache Tomcat Server http://tomcat.apache.org/ 
[21]  Training and Test Datasets in WE KA  format 
cs.waikato.ac.nzlmllwekal. 
[22] G.A. Hoffmann, K.S. Trivedi, 
forecasting 
guide to resource 
Transactions 
and M. Malek A best practice 
IEEE 
for the Apache Webserver. 
[23] I. Cohen, M. Goldszmidt, T. Kelly, J. Symons, and J. S. 
on Reliability 
56, 4 (Dec 2007), 615-628. 
Chase Correlating 
building 
6th USENIX OSOI, San Francisco, 
block for automated diagnosis 
instrumentation 
CA, Dec. 2004. 
data to system states:  A 
and control. In  Proc. 
[24] Q. Zhang, L. Cherkasova, 
N. Mi, and E. Smirni A regression­
based analytic 
cations. 
Cluster Computing (2008), vol 11: 197-211. 
model for capacity 
planning 
of multi-tier 
appli­
Model for Estimation 
Software Systems. 
Reliability 
In Proc. 
Engineering, 
1999. 
of Resource Exhaustion 
in Operational 
of the 10th IntI. Symp. on Software 
[2] S. Peret and P. Narasimham. Causes of Failure in Web appli-
[25] K. Vaidyanathan 
and K.S. Trivedi A Measurement-Based 
Modeling and Analysis of Software aging and Rejuvenation. 
IEEE Annual Simulation 
Symposium, April 2000. 
Estimation 
Symp. Empirical Software Engineering, 
of Software 
Aging in a Web Server. 
2002. 
In Proc of IntI. 
and K. Goseva-Popstojanova. 
[26] L. Li, K. Vaidyanathan, 
and K. S. Trivedi An Approach for 
[6] T. Dohi, K. Goseva-Popstojanova 
and K. S. Trivedi. Analysis 
of Software Cost Models with Rejuvenation. 
sium on High Assurance Systems Engineering 
IEEE IntI. Sympo­
(HASE 2000). 
[7] M. Grottke, R. Matias Jr. and K.S. Trivedi The Fundamentals 
of Software aging In Proc. 1st Int. Workshop on Software Ag­
ing and Rejuvenation. 
Engineering, 
19th Int. Symp. on Software Reliability 
2008. 
[8] Apache http://httpd.apache.org/docs/ 
[9] A.Tai, S.Chau, L.Alkalaj 
and H.Hecht. On-board Preventive 
Analysis 
Maintenance: 
riod. Proc. 3rd Workshop on Object-Oriented 
pendable Systems, 1997. 
an Optimal Duty Pe­
Real-Time De­
of Effectiveness 
[27] A. Andrzejak and L.M. Silva Using Machine Learning for 
of Software Aging. In 
Modeling and Prediction 
Non-Intrusive 
Procs of IEEE Network Operations 
sium, 2008. NOMS 2008. 
and Management Sympo­
[28] R. K. Sahoo, A. J. Oliner, I. Rish, M. Gupta, J. E. Mor­
eira, S. Ma, R. Vilalta, 
Prediction 
Clusters. 
for Proactive 
In KDD, pages 426435, August 2003 
and A. Sivasubramaniam 
Critical Event 
Management in Large-scale  Computer 
[29] J. Alonso, J-LI. Berral, R. Gavalda and J. Torres Adaptive 
based on Machine Learning. TR 
http://alonso.site.upc.edul, 
2010. 
line software aging prediction 
UPC-DAC-RR-CAP-201O-4, 
on­
[10] E. Marshall Fatal Error: How Patriot Overlooked 
Scud. 
Science, p. 1347, Mar.1992 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
516 
DSN 2010: Alonso et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:15 UTC from IEEE Xplore.  Restrictions apply.