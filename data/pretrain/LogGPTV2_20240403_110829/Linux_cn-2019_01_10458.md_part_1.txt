---
author: Robert Mullins
category: 树莓派
comments_data: []
count:
  commentnum: 0
  favtimes: 2
  likes: 0
  sharetimes: 1
  viewnum: 7341
date: '2019-01-19 16:36:00'
editorchoice: false
excerpt: OK01 课程讲解了树莓派如何入门，以及在树莓派上如何启用靠近 RCA 和 USB 端口的 OK 或 ACT 的 LED 指示灯。这个指示灯最初是为了指示
  OK 状态的，但它在第二版的树莓派上被改名为 ACT。
fromurl: https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/ok01.html
id: 10458
islctt: true
largepic: /data/attachment/album/201901/19/163408xpyibrbyq5d4q5cf.jpg
permalink: /article-10458-1.html
pic: /data/attachment/album/201901/19/163408xpyibrbyq5d4q5cf.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 10429
- displayorder: 1
  raid: 10478
reviewer: wxy
selector: lujun9972
summary: OK01 课程讲解了树莓派如何入门，以及在树莓派上如何启用靠近 RCA 和 USB 端口的 OK 或 ACT 的 LED 指示灯。这个指示灯最初是为了指示
  OK 状态的，但它在第二版的树莓派上被改名为 ACT。
tags:
- 树莓派
thumb: false
title: 计算机实验室之树莓派：课程 1 OK01
titlepic: true
translator: qhwdw
updated: '2019-01-19 16:36:00'
---
![](/data/attachment/album/201901/19/163408xpyibrbyq5d4q5cf.jpg)
OK01 课程讲解了树莓派如何入门，以及在树莓派上如何启用靠近 RCA 和 USB 端口的 OK 或 ACT 的 LED 指示灯。这个指示灯最初是为了指示 OK 状态的，但它在第二版的树莓派上被改名为 ACT。
### 1、入门
我们假设你已经访问了[下载](https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/downloads.html)页面，并且已经获得了必需的 GNU 工具链。也下载了一个称为操作系统模板的文件。请下载这个文件并在一个新目录中解开它。
### 2、开始
现在，你已经展开了这个模板文件，在 `source` 目录中创建一个名为 `main.s` 的文件。这个文件包含了这个操作系统的代码。具体来看，这个文件夹的结构应该像下面这样：
```
build/
   (empty)
source/
   main.s
kernel.ld
LICENSE
Makefile
```
用文本编辑器打开 `main.s` 文件，这样我们就可以输入汇编代码了。树莓派使用了称为 ARMv6 的汇编代码变体，这就是我们即将要写的汇编代码类型。
> 
> 扩展名为 `.s` 的文件一般是汇编代码，需要记住的是，在这里它是 ARMv6 的汇编代码。
> 
> 
> 
首先，我们复制下面的这些命令。
```
.section .init
.globl _start
_start:
```
实际上，上面这些指令并没有在树莓派上做任何事情，它们是提供给汇编器的指令。汇编器是一个转换程序，它将我们能够理解的汇编代码转换成树莓派能够理解的机器代码。在汇编代码中，每个行都是一个新的命令。上面的第一行告诉汇编器    1  在哪里放我们的代码。我们提供的模板中将它放到一个名为 `.init` 的节中的原因是，它是输出的起始点。这很重要，因为我们希望确保我们能够控制哪个代码首先运行。如果不这样做，首先运行的代码将是按字母顺序排在前面的代码！`.section` 命令简单地告诉汇编器，哪个节中放置代码，从这个点开始，直到下一个 `.section` 或文件结束为止。
> 
> 在汇编代码中，你可以跳行、在命令前或后放置空格去提升可读性。
> 
> 
> 
接下来两行是停止一个警告消息，它们并不重要。   2 
### 3、第一行代码
现在，我们正式开始写代码。计算机执行汇编代码时，是简单地一行一行按顺序执行每个指令，除非明确告诉它不这样做。每个指令都是开始于一个新行。
复制下列指令。
```
ldr r0,=0x20200000
```
> 
> `ldr reg,=val` 将数字 `val` 加载到名为 `reg` 的寄存器中。
> 
> 
> 