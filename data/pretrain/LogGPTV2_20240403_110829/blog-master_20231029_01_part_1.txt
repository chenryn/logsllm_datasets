## macOS 通过“oversea region ECS和ssh隧道转发代理请求” OR “openVPN” 提升github等访问体验 - chrome Proxy SwitchyOmega , cli ... 可用    
### 作者        
digoal        
### 日期        
2023-10-29        
### 标签        
PostgreSQL , PolarDB , macOS , 软路由 , 代理 , 网关 , Proxy SwitchyOmega , 浏览器代理 , openVPN , cli , curl , http , https , socks         
----        
## 背景     
很多好的开源项目都在github上, 例如PolarDB开源数据库:   
https://github.com/digoal/blog/blob/master/README.md  
https://apsaradb.github.io/PolarDB-for-PostgreSQL/zh/  
https://github.com/polardb    
但是github的访问经常不稳定, 对于渴望学习的同学来说非常痛苦, 为了提升学习体验, 终极解决办法是弄个ECS来转发http请求提升访问体验.    
本文仅供热爱学习的爱好者参考, 请勿用于其他用途.    
- PS: 生我们养我们的是我们脚下的土地和我们的国家, 我们是命运共同体, 很多信息有立场才有判断的标准, 更重要的应该是我们的时间应该更多的花在能让这个命运共同体往更好的方向发展的事情上, 而不是花在看热闹、谈资、心理内耗等上面.  干就对了, 用战绩去证明你, 而不是打嘴炮. 放在全球化合作供需连的模式中, 你在全球化中的位置也是由你的比较优势决定, 所以努力吧少年.           
如果你不想使用本文提到的方法, 也可以研究一下这一篇的方法:     
- [《macOS Surge 做软路由/代理, SwitchyOmega浏览器代理, openWRT开源软路由》](../202310/20231028_01.md)    
## 准备  
1、macOS  
2、chrome 浏览器  
3、在aliyun选购1台新加坡(或其他oversea region)的ecs(1c, 0.5G 的突发型即可), 选择使用debian 11.7系统, 开启公网(选择固定带宽模式, 1Mib足够使用, 可以看youtube 1080p视频不卡.), 20GiB云盘, 关闭其他任何可能产生费用的功能. 最终价格约1700元(5年).      
- 记下公网IP, root密码.     
进入ecs控制台, 配置:    
- 安全组配置: 禁止icmp 和 3389端口, 只保留22端口入连接.     
为了进一步提高安全性, 还可以配置sshd_config把ssh监听端口号改成其他大端口号, 同时在aliyun控制台安全组配置中开放此端口.  (此处略)     
### 配置ecs   
1、添加普通用户 digoal   
```  
# 连接到ecs  
ssh root@公网IP  
# 添加用户  
useradd digoal  
# 创建新用户home目录  
mkdir /home/digoal  
# 修改home目录owner  
chown digoal:digoal /home/digoal  
# 设置新用户密码, 建议具有一定复杂度. 当然你也可以使用key登陆, 这里忽略.   
password digoal  
```  
路由跟踪, 检查网络跳数, 质量:  
```
# 本地执行
traceroute -v ECS公网IP
```
2、配置内核参数.  
可以参考如下:  
https://www.cnblogs.com/jmbt/p/16653630.html  
https://developer.aliyun.com/article/700149  
```  
# 连接到ecs  
ssh root@公网IP  
# 修改配置文件  
vi /etc/sysctl.d/99-sysctl.conf   
# add by digoal  
net.ipv4.ip_forward = 1  
net.ipv4.tcp_syncookies = 1  
fs.file-max = 65535  
net.ipv4.tcp_fin_timeout = 15  
net.ipv4.tcp_tw_reuse = 1  
net.ipv4.tcp_syn_retries = 1  
net.ipv4.tcp_synack_retries = 1  
net.ipv4.tcp_max_orphans = 3276800  
net.core.rmem_max = 16777216  
net.core.rmem_default = 8388608  
net.core.wmem_max = 16777216  
net.core.wmem_default = 8388608  
net.ipv4.tcp_wmem = 4096 131072 1048576  
net.ipv4.tcp_rmem = 4096 131072 1048576  
net.ipv4.tcp_window_scaling = 1  
net.ipv4.tcp_sack = 1  
net.core.netdev_max_backlog = 262144   
net.core.somaxconn = 262144   
net.ipv4.tcp_max_syn_backlog = 262144   
net.ipv4.tcp_timestamps = 0   
net.ipv4.ip_local_port_range = 2048 65000  
net.ipv4.icmp_echo_ignore_broadcasts = 1  
net.ipv4.icmp_ignore_bogus_error_responses = 1  
kernel.pid_max = 65536  
net.ipv4.tcp_keepalive_time=15
net.ipv4.tcp_keepalive_intvl=5
net.ipv4.tcp_keepalive_probes=3
# 使参数生效  
sysctl -p  
```  
3、配置sshd  
```  
# 连接到ecs  
ssh root@公网IP  
# 修改配置文件  
vi /etc/ssh/sshd_config  
GatewayPorts yes  
# 使配置生效  
systemctl restart sshd  
```  
4、关闭aliyundun (可选, 因为我这个ecs配置太低, 担心aliyundun影响性能, 而且我的使用场景没有安全诉求, 所以关掉aliyundun.)    
```  
# 连接到ecs  
ssh root@公网IP  
# 关闭aliyundun  
systemctl disable aliyun.service  
systemctl stop aliyun.service  
systemctl disable aegis  
systemctl stop aegis  
# 重启ecs  
reboot  
```  
## cli代理 及 google chrome代理配置  
假设通过本地1111端口进行代理转发.    
1、macOS, 使用ssh创建转发链路     
```  
ssh -CqtfnN -D 127.0.0.1:1111 -p 22 digoal@ecs公网IP   
# 或 设置cipher. 加密算法越弱, 对性能的损耗越小.    
ssh -CqtfnN -c PI:EMAIL -o "MACs PI:EMAIL" -D 127.0.0.1:1111 -p 22 digoal@ecs公网IP  
ssh -CqtfnN -c aes128-ctr -o "MACs PI:EMAIL" -D 127.0.0.1:1111 -p 22 digoal@ecs公网IP  
# 使用ssh命令查询当前系统支持哪些cipher? 
# ssh -Q cipher
3des-cbc
aes128-cbc
aes192-cbc
aes256-cbc
PI:EMAIL
aes128-ctr
aes192-ctr
aes256-ctr
PI:EMAIL
PI:EMAIL
PI:EMAIL
# 通过ChaCha20-Poly1305提升SCP传输速率: 
# https://blog.csdn.net/nanhai_happy/article/details/126655065
```  
macOS, 你也可以把以上过程写成脚本, 方便调用.    
```  
# 编辑脚本  
vi ~/proxy.sh   
#!/bin/bash  
user="digoal"  
host="ecs公网IP"  
port="22"  
pwd="digoal用户密码"  
/usr/bin/expect <<-EOF
spawn ssh -CqtfnN -c aes128-ctr -o "MACs PI:EMAIL" -o TCPKeepAlive=yes -o ServerAliveInterval=10 -o ServerAliveCountMax=300000 -D 127.0.0.1:1111 $user@$host -p $port
expect {
"yes/no" { send "yes\r"; exp_continue }
"password:" { send "$pwd\r" }
}
interact
expect eof
EOF
# 设置shell中使用代理的环境变量  
# 设置所有请求代理都走 127.0.0.1:1111    
export all_proxy=socks5://127.0.0.1:1111  
# 如果要取消all_proxy代理设置, 执行如下unset即可  
# unset all_proxy    
date  
# proxy.sh 脚本内容 完    
# 设置脚本权限  
chmod 500 ~/proxy.sh   
```  
macOS, 创建ecs的ssh登陆脚本, 方便调用以登陆ecs.    
```  
# 编辑脚本  
vi ~/ecs.sh  
#!/usr/bin/expect    
set user "root"    
set host "ecs公网IP"    
set port "22"    
set pwd "root用户密码"  
spawn ssh -C -o TCPKeepAlive=yes -o ServerAliveInterval=10 -o ServerAliveCountMax=300000 $user@$host -p $port
expect {
"yes/no" { send "yes\r"; exp_continue }
"password:" { send "$pwd\r" }
}
interact
# 设置脚本权限  
chmod 500 ~/ecs.sh    
```  
2、macOS, 创建ssh代理转发链路. 这个链路要保持时刻存在, 用于转发代理请求到oversea region ECS.  如果进程不存在了, 再次调用`proxy.sh`即可建立连接.        
```  
# 在shell中执行脚本:  
~/proxy.sh   
# 查看是否连上ecs ssh?      
ps -efw|grep ssh  
# 看到有一条这样的结果, 表示已连接ssh  
501 96986     1   0 12:16下午 ??         0:07.84  ssh -CqtfnN -c aes128-ctr -o MACs PI:EMAIL -D 127.0.0.1:1111 digoal@ecs公网IP -p 22  
```  
3、macOS, 在cli命令行测试socks5是否可正常代理? 以及测试转发速度.     
https://zhuanlan.zhihu.com/p/269878724  
https://www.cnblogs.com/LBSD/p/15675131.html  
macOS, 在命令行测试socks5是否可正常代理?   
```  
digoaldeMacBook-Pro:Downloads digoal$ export all_proxy=socks5://127.0.0.1:1111    
# 如果返回的是ecs公网IP, 表示代理正常.    
digoaldeMacBook-Pro:Downloads digoal$ curl cip.cc    
IP	: ecs公网IP  
地址	: 中国  中国  
数据二	: 中国 | 阿里云  
数据三	: 中国 | 阿里巴巴  
URL	: http://www.cip.cc/ecs公网IP  
```  
macOS, 开启cli代理的情况下, 进行速度测试:  我的Ecs带宽是1Mb, 1Mb/8=128kBytes/s.     
```  
export all_proxy=socks5://127.0.0.1:1111    
cd ~/Downloads  
# curl --limit-rate 128k -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -O -L https://github.com/duckdb/duckdb/releases/download/v0.9.1/duckdb_cli-osx-universal.zip   
curl -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -O -L https://github.com/duckdb/duckdb/releases/download/v0.9.1/duckdb_cli-osx-universal.zip   
DL% UL%  Dled  Uled  Xfers  Live Total     Current  Left    Speed    
100 --  14.3M     0     1     0   0:01:40  0:01:52 --:--:--  146k    
```  
speed达标.   
关闭cli的代理方法如下:     
```  
# 关闭cli的代理  
unset all_proxy  
# 再次使用curl测试, 你会发现返回的IP是你当前地区的IP:    
curl cip.cc  
digoaldeMacBook-Pro:Downloads digoal$ unset all_proxy  
digoaldeMacBook-Pro:Downloads digoal$ curl cip.cc  
# 返回如下:   
IP	: 183.159.23.85  
地址	: 中国  浙江  杭州  
运营商	: 电信  