user@host# set packet-capture file size 1024
5. Specify that all users have permission to read the file.
[edit forwarding-options]
user@host# set packet-capture file world-readable
Results
From configuration mode, confirm your configuration by entering the run show forwarding-options
command. If the output does not display the intended configuration, repeat the configuration
instructions in this example to correct it.
[edit]
user@host# run show forwarding-options
packet-capture {
file filename pcap-file files 100 size 1k world-readable;
maximum-capture-size 500;
}
If you are done configuring the device, enter commit from configuration mode.
1466
Verification
IN THIS SECTION
Verifying the Packet Capture Configuration | 1466
Verifying Captured Packets | 1466
Confirm that the configuration is working properly.
Verifying the Packet Capture Configuration
Purpose
Verify that the packet capture is configured on the device.
Action
From configuration mode, enter the run show forwarding-options command. Verify that the output shows
the intended file configuration for capturing packets.
Verifying Captured Packets
Purpose
Verify that the packet capture file is stored under the /var/tmp directory and the packets can be analyzed
offline.
Action
1. Disable packet capture.
Using FTP, transfer a packet capture file (for example, 126b.fe-0.0.1), to a server where you have
installed packet analyzer tools (for example, tools-server).
a. From configuration mode, connect to tools-server using FTP.
[edit]
user@host# run ftp tools-server
1467
Connected to tools-server.mydomain.net
220 tools-server.mydomain.net FTP server (Version 6.00LS) ready
Name (tools-server:user):remoteuser
331 Password required for remoteuser.
Password:
230 User remoteuser logged in.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp>
b. Navigate to the directory where packet capture files are stored on the device.
ftp> lcd /var/tmp
Local directory now /cf/var/tmp
c. Copy the packet capture file that you want to analyze to the server, for example 126b.fe-0.0.1.
ftp> put 126b.fe-0.0.1
local: 126b.fe-0.0.1 remote: 126b.fe-0.0.1
200 PORT command successful.
150 Opening BINARY mode data connection for '126b.fe-0.0.1'.
100% 1476 00:00 ETA
226 Transfer complete.
1476 bytes sent in 0.01 seconds (142.42 KB/s)
d. Return to configuration mode.
ftp> bye
221 Goodbye.
[edit]
user@host#
1468
2. Open the packet capture file on the server with tcpdump or any packet analyzer that supports
libpcap format and review the output.
root@server% tcpdump -r 126b.fe-0.0.1 -xevvvv
01:12:36.279769 Out 0:5:85:c4:e3:d1 > 0:5:85:c8:f6:d1, ethertype IPv4 (0x0800), length 98: (tos
0x0, ttl 64, id 33133, offset 0, flags [none], proto: ICMP (1), length: 84) 14.1.1.1 >
15.1.1.1: ICMP echo request seq 0, length 64
0005 85c8 f6d1 0005 85c4 e3d1 0800 4500
0054 816d 0000 4001 da38 0e01 0101 0f01
0101 0800 3c5a 981e 0000 8b5d 4543 51e6
0100 aaaa aaaa aaaa aaaa aaaa aaaa aaaa
aaaa aaaa 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000
01:12:36.279793 Out 0:5:85:c8:f6:d1 > 0:5:85:c4:e3:d1, ethertype IPv4 (0x0800), length 98: (tos
0x0, ttl 63, id 41227, offset 0, flags [none], proto: ICMP (1), length: 84) 15.1.1.1 >
14.1.1.1: ICMP echo reply seq 0, length 64
0005 85c4 e3d1 0005 85c8 f6d1 0800 4500
0054 a10b 0000 3f01 bb9a 0f01 0101 0e01
0101 0000 445a 981e 0000 8b5d 4543 51e6
0100 aaaa aaaa aaaa aaaa aaaa aaaa aaaa
aaaa aaaa 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000
root@server%
Example: Configure Packet Capture on an Interface
IN THIS SECTION
Requirements | 1469
Overview | 1469
Configuration | 1469
Verification | 1470
1469
This example shows how to configure packet capture on an interface to analyze traffic.
Requirements
Before you begin:
• Establish basic connectivity.
• Configure network interfaces. See Interfaces User Guide for Security Devices.
Overview
In this example, you create an interface called fe-0/0/1 and then configure the direction of the traffic for
which you are enabling packet capture on the logical interface as inbound and outbound.
NOTE: On traffic that bypasses the flow software module (protocol packets such as ARP, OSPF,
and PIM), packets generated by the Routing Engine are not captured unless you have configured
and applied a firewall filter on the interface in the output direction.
Configuration
IN THIS SECTION
Procedure | 1469
Procedure
CLI Quick Configuration
To quickly configure this example, copy the following commands, paste them into a text file, remove any
line breaks, change any details necessary to match your network configuration, copy and paste the
commands into the CLI at the [edit] hierarchy level, and then enter commit from configuration mode.
edit interfaces fe-0/0/1
set unit 0 family inet sampling input output
1470
Step-by-Step Procedure
The following example requires you to navigate various levels in the configuration hierarchy. For
instructions on how to do that, see Using the CLI Editor in Configuration Mode.
To configure packet capture on an interface:
1. Create an interface.
[edit]
user@host# edit interfaces fe-0/0/1
2. Configure the direction of the traffic.
[edit interfaces fe-0/0/1]
user@host# set unit 0 family inet sampling input output
3. If you are done configuring the device, commit the configuration.
[edit]
user@host# commit
Verification
IN THIS SECTION
Verifying the Packet Capture Configuration | 1470
Verifying the Packet Capture Configuration
Purpose
Confirm that the configuration is working properly.
Verify that packet capture is configured on the interface.
1471
Action
From configuration mode, enter the run show interfaces fe-0/0/1 command.
Example: Configure a Firewall Filter for Packet Capture
IN THIS SECTION
Requirements | 1471
Overview | 1471
Configuration | 1472
Verification | 1474
This example shows how to configure a firewall filter for packet capture and apply it to a logical
interface.
Requirements
Before you begin:
• Establish basic connectivity.
• Configure network interfaces. See Interfaces User Guide for Security Devices.
Overview
IN THIS SECTION
Topology | 1472
In this example, you set a firewall filter called dest-all and a term name called dest-term to capture
packets from a specific destination address, which is 192.168.1.1/32. You define the match condition to
accept the sampled packets. Finally, you apply the dest-all filter to all of the outgoing packets on
interface fe-0/0/1.
1472
NOTE: If you apply a firewall filter on the loopback interface, it affects all traffic to and from the
Routing Engine. If the firewall filter has a sample action, packets to and from the Routing Engine
are sampled. If packet capture is enabled, then packets to and from the Routing Engine are
captured in the files created for the input and output interfaces.
Topology
Configuration
IN THIS SECTION
Procedure | 1472
Procedure
CLI Quick Configuration
To quickly configure this example, copy the following commands, paste them into a text file, remove any
line breaks, change any details necessary to match your network configuration, copy and paste the
commands into the CLI at the [edit] hierarchy level, and then enter commit from configuration mode.
set firewall filter dest-all term dest-term from destination-address 192.168.1.1/32
set firewall filter dest-all term dest-term then sample accept
edit interfaces
set interfaces fe-0/0/1 unit 0 family inet filter output dest-all
Step-by-Step Procedure
The following example requires you to navigate various levels in the configuration hierarchy. For
instructions on how to do that, see Using the CLI Editor in Configuration Mode in the Junos OS CLI User
Guide .
To configure a firewall filter for packet capture and apply it to a logical interface:
1473
1. Specify the firewall filter and its destination address.
[edit]
user@host# edit firewall
user@host# set filter dest-all term dest-term from destination-address 192.168.1.1/32
2. Define the match condition and its action.
[edit firewall]
user@host# set filter dest-all term dest-term then sample accept
3. Apply the filter to all the outgoing packets.
[edit interfaces]
user@host# set interfaces fe-0/0/1 unit 0 family inet filter output dest-all
Results
From configuration mode, confirm your configuration by entering the run show firewall filter dest-all
command. If the output does not display the intended configuration, repeat the configuration
instructions in this example to correct it.
[edit]
user@host# run show firewall filter dest-all
term dest-term {
from {
destination-address 192.168.1.1/32;
}
then {
sample;
accept;
}
}
If you are done configuring the device, enter commit from configuration mode.
1474
Verification
IN THIS SECTION
Verifying the Firewall Filter for Packet Capture Configuration | 1474
Verifying the Firewall Filter for Packet Capture Configuration
Purpose
Confirm that the configuration is working properly.
Verify that the firewall filter for packet capture is configured.
Action
From configuration mode, enter the run show firewall filter dest-all command. Verify that the output
shows the intended configuration of the firewall filter for capturing packets sent to the destination
address.
Example: Configure Packet Capture for Datapath Debugging
IN THIS SECTION
Requirements | 1475
Overview | 1475
Configuration | 1475
Verification | 1478
This example shows how to configure packet capture to monitor traffic that passes through the device.
Packet capture then dumps the packets into a PCAP file format that can be later examined by the
tcpdump utility.
1475
Requirements
Before you begin, see "Debugging the Data Path (CLI Procedure)" on page 1440.
Overview
A filter is defined to filter traffic; then an action profile is applied to the filtered traffic. The action profile
specifies a variety of actions on the processing unit. One of the supported actions is packet dump, which
sends the packet to the Routing Engine and stores it in proprietary form to be read using the show
security datapath-debug capture command.
NOTE: Data path debugging is supported on SRX1400, SRX3400, SRX3600, SRX5400,
SRX5600, and SRX5800.
Configuration
IN THIS SECTION
Procedure | 1475
Procedure
CLI Quick Configuration
To quickly configure this example, copy the following commands, paste them into a text file, remove any
line breaks, change any details necessary to match your network configuration, copy and paste the
commands into the CLI at the [edit] hierarchy level, and then enter commit from configuration mode.
set security datapath-debug capture-file my-capture
set security datapath-debug capture-file format pcap
set security datapath-debug capture-file size 1m
set security datapath-debug capture-file files 5
set security datapath-debug maximum-capture-size 400
set security datapath-debug action-profile do-capture event np-ingress packet-dump
set security datapath-debug packet-filter my-filter action-profile do-capture
set security datapath-debug packet-filter my-filter source-prefix 1.2.3.4/32
1476
Step-by-Step Procedure
The following example requires you to navigate various levels in the configuration hierarchy. For
instructions on how to do that, see Using the CLI Editor in Configuration Modein the Junos OS CLI User
Guide.
To configure packet capture:
1. Edit the security datapath-debug option for the multiple processing units along the packet-
processing path:
[edit]
user@host# edit security datapath-debug
2. Enable the capture file, the file format, the file size, and the number of files. Size number limits the
size of the capture file. After the limit size is reached, if the file number is specified, then the capture
file will be rotated to filename x, where x is auto-incremented until it reaches the specified index and
then returns to zero. If no files index is specified, the packets will be discarded after the size limit is
reached. The default size is 512 kilobytes.
[edit security datapath-debug]
user@host# set capture-file my-capture format pcap size 1m files 5
[edit security datapath-debug]
user@host# set maximum-capture-size 400
3. Enable action profile and set the event. Set the action profile as do-capture and the event type as np-
ingress:
[edit security datapath-debug]
user@host# edit action-profile do-capture
[edit security datapath-debug action-profile do-capture]
user@host# edit event np-ingress
4. Enable packet dump for the action profile:
[edit security datapath-debug action-profile do-capture event np-ingress]
user@host# set packet-dump
1477
5. Enable packet filter, action, and filter options. The packet filter is set to my-filter, the action profile is
set to do-capture, and filter option is set to source-prefix 1.2.3.4/32.
[edit security datapath-debug]
user@host# set security datapath-debug packet-filter my-filter action-profile do-capture
[edit security datapath-debug]
user@host# set security datapath-debug packet-filter my-filter source-prefix 1.2.3.4/32
Results
From configuration mode, confirm your configuration by entering the show security datapath-debug
command. If the output does not display the intended configuration, repeat the configuration
instructions in this example to correct it.
security {
datapath-debug {
capture-file {
my-capture
format pcap
size 1m
files 5;
}
}
maximum-capture-size 100;
action-profile do-capture {
event np-ingress {
packet-dump
}
}
packet-filter my-filter {
source-prefix 1.2.3.4/32
action-profile do-capture
}
}
If you are done configuring the device, enter commit from configuration mode.
1478
Verification
IN THIS SECTION
Verifying Packet Capture | 1478
Verifying Data Path Debugging Capture | 1478
Verifying Data Path Debugging Counter | 1479
Confirm that the configuration is working properly.
Verifying Packet Capture
Purpose
Verify if the packet capture is working.
Action
From operational mode, enter the request security datapath-debug capture start command to start packet
capture and enter the request security datapath-debug capture stop command to stop packet capture.
To view the results, from CLI operational mode, access the local UNIX shell and navigate to the
directory /var/log/my-capture. The result can be read by using the tcpdump utility.
Verifying Data Path Debugging Capture
Purpose
Verify the details of data path debugging capture file.
Action
From operational mode, enter the show security datapath-debug capture command.
user@host>show security datapath-debug capture
1479
WARNING: When you are done troubleshooting, make sure to remove or deactivate all
the traceoptions configurations (not limited to flow traceoptions) and the complete
security datapath-debug configuration stanza. If any debugging configurations remain
active, they will continue to use the device's CPU and memory resources.
Verifying Data Path Debugging Counter
Purpose
Verify the details of the data path debugging counter.
Action
From operational mode, enter the show security datapath-debug counter command.
Disable Packet Capture
You must disable packet capture before opening the packet capture file for analysis or transferring the
file to an external device. Disabling packet capture ensures that the internal file buffer is flushed and all
the captured packets are written to the file.
To disable packet capture, enter from configuration mode:
[edit forwarding-options]
user@host# set packet-capture disable
If you are done configuring the device, enter commit from configuration mode.
Modify Encapsulation on Interfaces with Packet Capture Configured
Before modifying the encapsulation on a device interface that is configured for packet capture, you must
disable packet capture and rename the latest packet capture file. Otherwise, packet capture saves the
packets with different encapsulations in the same packet capture file. Packet files containing packets
with different encapsulations are not useful, because packet analyzer tools like tcpdump cannot analyze
such files.
1480
After modifying the encapsulation, you can safely reenable packet capture on the device.
To change the encapsulation on interfaces with packet capture configured:
1. Disable packet capture (see "Disabling Packet Capture" on page 1479).