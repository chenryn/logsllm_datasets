    中包含的工具来获取自动化安全合规的初始经验，以符合行业标准安全策略和自定义安全策略。如果您希望为您的团队提供培训或访问这些实验室练习，请联系您的红帽客户团队以了解更多详细信息。
-   [红帽安全演示：使用 RHEL
    安全技术保卫自己](https://github.com/RedHatDemos/SecurityDemos/blob/master/2020Labs/RHELSecurity/documentation/README.adoc){.link} -
    一个动手实验室，了解如何使用 Red Hat Enterprise Linux
    中提供给您的关键安全技术（包括 OpenSCAP）来在 RHEL
    系统的所有级别上实现安全性。如果您希望为您的团队提供培训或访问这些实验室练习，请联系您的红帽客户团队以了解更多详细信息。
-   [美国国家标准与技术研究院(NIST) SCAP
    页面](http://scap.nist.gov/){.link} - 此页面包含了大量与 SCAP
    相关的材料，包括 SCAP 出版物、规范和 SCAP 验证计划。
-   [国家漏洞数据库(NVD)](http://nvd.nist.gov/){.link} - 此页面代表了
    SCAP 内容和其他基于 SCAP 标准漏洞管理数据的最大存储库。
-   [红帽 OVAL
    内容存储库](http://www.redhat.com/security/data/oval/){.link} -
    这是一个包含 Red Hat Enterprise Linux 系统漏洞的 OVAL
    定义的存储库。这是推荐的漏洞内容来源。
-   [MITRE CVE](http://cve.mitre.org/){.link} - 这是一个由 MITRE
    公司提供的已知安全漏洞的数据库。对于 RHEL，建议您使用红帽提供的 OVAL
    CVE 内容。
-   [MITRE OVAL](http://oval.mitre.org/){.link} - 这是一个 MITRE
    公司提供的与 OVAL 相关的项目。除了与 OVAL
    相关的信息外，这些页面还包含 OVAL 语言和具有数千个 OVAL 定义 的 OVAL
    内容存储库，。请注意，要扫描 RHEL，建议使用红帽提供的 OVAL CVE
    内容。
-   [在红帽 Satellite
    中管理安全性合规](https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-security_compliance_management){.link} -
    这组指南除了其他主题外，还描述了如何使用 OpenSCAP
    来在多个系统上维护系统安全性。
:::
:::
:::
[]{#checking-integrity-with-aide_security-hardening.html}
::: chapter
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#checking-integrity-with-aide_security-hardening}第 10 章 使用 AIDE 检查完整性 {.title}
:::
高级入侵检测环境（`Advanced Intrusion Detection Environment，简称 AIDE`{.literal}）是一个实用工具，它可以创建系统上的文件数据库，然后利用该数据库来确保文件的完整性，并检测系统入侵。
::: section
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#installing-aide_checking-integrity-with-aide}安装 AIDE {.title}
:::
安装 `AIDE`{.literal} 并启动其数据库需要执行下列步骤。
::: itemizedlist
**先决条件**
-   `AppStream`{.literal}存储库已启用。
:::
::: orderedlist
**流程**
1.  安装 [*aide*]{.emphasis} 软件包：
    ``` screen
    # yum install aide
    ```
2.  生成初始数据库：
    ``` screen
    # aide --init
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在默认配置中，`aide --init`{.literal} 命令只检查
    `/etc/aide.conf`{.literal} 文件中定义的一组目录和文件。要在
    `AIDE`{.literal}
    数据库中包含其他目录或文件，并更改其监视的参数，请相应地编辑
    `/etc/aide.conf`{.literal}。
    :::
3.  要开始使用数据库，请从初始数据库文件名中删除 `.new`{.literal}
    子字符串：
    ``` screen
    # mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
    ```
4.  要修改 `AIDE`{.literal} 数据库的位置，请编辑
    `/etc/aide.conf`{.literal} 文件并修改 `DBDIR`{.literal}
    值。要获得额外的安全性，请将数据库、配置和
    `/usr/sbin/aide`{.literal} 二进制文件存储在安全的位置，如只读介质。
:::
:::
::: section
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#performing-integrity-checks-with-aide_checking-integrity-with-aide}使用 `AIDE`{.literal} 执行完整性检查 {.title}
:::
::: itemizedlist
**先决条件**
-   `AIDE`{.literal} 已正确安装，其数据库已初始化。请参阅 [安装
    AIDE](#checking-integrity-with-aide_security-hardening.html#installing-aide_checking-integrity-with-aide "安装 AIDE"){.link}
:::
::: orderedlist
**流程**
1.  启动手动检查：
    ``` screen
    # aide --check
    Start timestamp: 2018-07-11 12:41:20 +0200 (AIDE 0.16)
    AIDE found differences between database and filesystem!!
    ...
    [trimmed for clarity]
    ```
2.  至少，将系统配置为每周运行 `AIDE`{.literal}。最好地，每天运行
    `AIDE`{.literal}。例如，要使用 `cron`{.literal} 命令计划在每天早上
    [*04:05*]{.emphasis} 执行 `AIDE`{.literal}，请在
    `/etc/crontab`{.literal} 文件中添加以下行：
    ``` screen
     05 4 * * * root /usr/sbin/aide --check
    ```
:::
:::
::: section
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#updating-an-aide-database_checking-integrity-with-aide}更新 AIDE 数据库 {.title}
:::
在验证您的系统更改后，如软件包更新或配置文件调整，红帽建议更新您的基准
`AIDE`{.literal} 数据库。
::: itemizedlist
**先决条件**
-   `AIDE`{.literal} 已正确安装，其数据库已初始化。请参阅 [安装
    AIDE](#checking-integrity-with-aide_security-hardening.html#installing-aide_checking-integrity-with-aide "安装 AIDE"){.link}
:::
::: orderedlist
**流程**
1.  更新您的基准 [**AIDE**]{.strong} 数据库：
    ``` screen
    # aide --update
    ```
    `aide --update`{.literal} 命令创建
    `/var/lib/aide/aide.db.new.gz`{.literal} 数据库文件。
2.  若要开始使用更新的数据库进行完整性检查，请从文件名中删除
    `.new`{.literal} 子字符串。
:::
:::
::: section
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#file-integrity-tools-aide-and-ima_checking-integrity-with-aide}文件完整性工具：AIDE 和 IMA {.title}
:::
Red Hat Enterprise Linux
提供多个用于检查和维护系统上文件和目录完整性的工具。下表可帮助您决定哪个工具更适合您的场景。
::: table
[]{#checking-integrity-with-aide_security-hardening.html#idm140058198616192}
**表 10.1. AIDE 和 IMA 之间的比较**
::: table-contents
  问题     高级入侵检测环境(AIDE)                                                                      完整性测量架构 (IMA)
  -------- ------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------
  什么     AIDE 是一个在系统上创建文件和目录数据库的工具。此数据库用于检查文件完整性及检测入侵检测。   IMA 通过检查与之前存储的扩展属性相比的文件度量（哈希值）来检查文件是否被修改了。
  如何     AIDE 使用规则来比较文件和目录的完整性状态。                                                 IMA 使用文件哈希值来检测入侵。
  为什么   检测 - AIDE 通过验证规则来检测文件是否被修改。                                              检测和防止 - IMA 通过替换文件的扩展属性来检测和防止攻击。
  使用     当文件或目录被修改了，AIDE 会检测到威胁。                                                   当有人试图更改整个文件时，IMA 会检测到威胁。
  扩展     AIDE 检查本地系统上文件和目录的完整性。                                                     IMA 确保本地和远程系统的安全性。
:::
:::
:::
::: section
::: titlepage
# []{#checking-integrity-with-aide_security-hardening.html#related-information-checking-integrity-with-aide}其它资源 {.title}
:::
::: itemizedlist
-   `aide(1)`{.literal} 手册页
-   [内核完整性子系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/enhancing-security-with-the-kernel-integrity-subsystem_managing-monitoring-and-updating-the-kernel){.link}
:::
:::
:::
[]{#enhancing-security-with-the-kernel-integrity-subsystem_security-hardening.html}
::: chapter
::: titlepage
# []{#enhancing-security-with-the-kernel-integrity-subsystem_security-hardening.html#enhancing-security-with-the-kernel-integrity-subsystem_security-hardening}第 11 章 使用内核完整性子系统提高安全性 {.title}
:::
您可以使用内核完整性（kernel
integrity）子系统组件来提高系统保护。以下小节介绍了相关组件，并提供了有关其配置的指导。
::: section
::: titlepage
# []{#enhancing-security-with-the-kernel-integrity-subsystem_security-hardening.html#the-kernel-integrity-subsystem_enhancing-security-with-the-kernel-integrity-subsystem}内核完整性子系统 {.title}
:::
完整性子系统是内核的一部分，负责维护整个系统的数据完整性。此子系统有助于使特定系统的状态与构建时相同，从而防止用户对特定系统文件进行不必要的修改。
内核完整性子系统由两个主要组件组成：
::: variablelist
[完整性测量架构 (IMA)]{.term}
:   ::: itemizedlist
    -   在文件被执行或打开时，会测量文件的内容。用户可以通过应用自定义策略来更改此行为。
    -   将测量的值放置在内核的内存空间内，从而防止系统用户进行任何修改。
    -   允许本地和远程用户验证测量值。
    :::
[扩展验证模块 (EVM)]{.term}
:   ::: itemizedlist
    -   通过加密其对应的值，保护与系统安全性（如 IMA 测量和 SELinux
        属性）相关的文件的扩展属性（也称为 [*xattr*]{.emphasis}）。
    :::
:::
IMA 和 EVM 还包含大量额外功能扩展。例如：
::: variablelist
[IMA-Appraisal]{.term}
:   ::: itemizedlist
    -   根据以前存储在内核内存中的测量文件中的值提供当前文件内容的本地验证。此扩展禁止通过特定文件执行任何操作，以防当前和上一个测量结果不匹配。
    :::
[EVM 数字签名]{.term}
:   ::: itemizedlist
    -   允许通过存储在内核密钥环中的加密密钥使用数字签名。
    :::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
功能扩展相互补充，但您可以独立配置和使用它们。
:::
内核完整性子系统可以利用受信任的平台模块 (TPM) 来更加强化系统安全性。TPM
是受信任的计算组 (TCG) 中有关重要加密功能的规范。TPMS
通常作为专用硬件构建，附加到平台的主板，并通过为硬件芯片受保护且受篡改区域提供加密功能来防止基于软件的攻击。其中一些
TPM 特性包括：
::: itemizedlist
-   随机数生成器
-   用于加密密钥的生成器和安全存储
-   哈希生成器
-   远程测试
:::
::: itemizedlist
**其它资源**
-   [*[[完整性测量架构
    (IMA)](https://sourceforge.net/p/linux-ima/wiki/Home/){.link}]{.citetitle}*]{.emphasis}
-   [*[[可信计算组资源](https://trustedcomputinggroup.org/resource/tpm-library-specification/){.link}]{.citetitle}*]{.emphasis}
:::
:::
::: section
::: titlepage