a. GID — identity of this geometric object;
b. XMIN — the minimum x-coordinate of the geometric object bounding box;
c. YMIN — the minimum y-coordinate of the geometric object bounding box;
d. ZMIN — the maximum y-coordinate of the geometric object bounding box;
e. MMIN — the maximum y-coordinate of the geometric object bounding box;
f. XMAX — the maximum x-coordinate of the geometric object bounding box;
g. YMAX — the maximum y-coordinate of the geometric object bounding box;
h. ZMAX — the maximum y-coordinate of the geometric object bounding box;
i. MMAX — the maximum y-coordinate of the geometric object bounding box;
j. WKB_GEOMETRY — the Well-known Binary Representation of the geometric object;
k.  — other attributes can be carried in the Geometry table for specific feature schema.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
7.1.5.3.3 Exceptions, errors and error codes
Error handling shall use the standard SQL status returns for SQL/CLI.
7.1.6 Operators
No SQL spatial operators are defined as part of this standard.
7.2 Components — SQL with Geometry Types implementation of feature tables
7.2.1 Conventions
The components of this standard for feature table implementation in a SQL with Geometry Types environment
consist of the tables, SQL types and SQL functions discussed in 7.2 with routines as specified by SQL/MM.
7.2.2 SQL Geometry Types
7.2.2.1 Component overview
The SQL Geometry Types extend the set of available predefined data types to include Geometry Types.
7.2.2.2 Language constructs
A conforming implementation shall support a subset of the following set of SQL Geometry Types: {Geometry,
Point, Curve, LineString, Surface, Polygon, PolyhedralSurface
GeomCollection, MultiCurve, MultiLineString, MultiSurface,
MultiPolygon, and MultiPoint}. The permissible type subsets that an implementer may choose to
implement are described in SQL/MM.
Note: Class names in SQL/MM carry a "ST_" prefix. This is optional and implementations may chose to drop
this prefix as has been done in various places in this standard.
The new type listed above is PolyhedralSurface shall be subtyped from Surface, and implements
the required constructors, routines and interfaces of Surface and MultiSurface. To maintain a size
limit on class names, the class name in SQL for PolyhedralSurface will be PolyhedSurface.
7.2.3 Feature tables
7.2.3.1 Component overview
The columns in a feature table are defined by feature attributes; one or more of the feature attributes will be a
geometric attribute. The basic restriction in this standard for feature tables is that each geometric attribute is
modeled using a column whose type corresponds to a SQL Geometry Type. Features may have a feature
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xxix
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
attribute that is unique, serving as a PRIMARY KEY for the feature table. Feature-to-feature relations may be
defined as FOREIGN KEY references where appropriate.
7.2.3.2 Table constructs
The general format of a feature table in the SQL with Geometry Types implementation shall be as follows:
CREATE TABLE  (
 ,
… (other attributes for this feature table)
 ,
… (other geometry columns for this feature table)
PRIMARY KEY ,
CONSTRAINT SRS_1 CHECK (SRID()
in (
SELECT SRID from GEOMETRY_COLUMNS
where F_TABLE_CATALOG =  and
F_TABLE_SCHEMA =  and
F_TABLE_NAME =  and
F_GEOMETRY_COLUMN = 
)
… ( spatial reference constraints for other geometry columns
in this feature table)
)
The use of any SQL Geometry Type for any of the columns in the table identifies this table as a feature table.
Alternatively, applications may check the GEOMETRY_COLUMNS table, where all Geometry Columns and their
associated feature tables and geometry tables are listed.
7.2.3.3 Exceptions, errors and error codes
Error handling shall be accomplished by using the standard SQL status returns.
7.2.4 SQL routines for constructing a geometry object given its Well-known Text Representation
The routines ST_WKTToSQL used to construct geometric objects from their text representations are specified by
SQL/MM..
7.2.5 SQL routines for constructing a geometric object given its Well-known Binary Representation
The routines ST_WKBToSQL used to construct geometric objects from their Well-known Binary Representations
are specified in SQL/MM.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
7.2.6 SQL routines for obtaining Well-known Text Representation of a geometric object
The SQL routines ST_AsText for obtaining the Well-known Text Representation of a geometric object are
specified in SQL/MM.
7.2.7 SQL routines for obtaining Well-known Binary Representations of a geometric object
The SQL routines ST_AsBinary for obtaining the Well-known Binary Representation of a geometric object are
specified in SQL/MM.
7.2.8 SQL routines on type Geometry
7.2.8.1 Supported routines
The SQL/MM ST_Dimension, ST_GeometryType, ST_AsText, ST_AsBinary,
ST_SRID, ST_IsEmpty, ST_IsSimple, ST_Boundary, and ST_Envelope routines shall be
supported for all Geometry Types. Also included are SQL routines for obtaining the Well-known Binary and Text
Representation of a geometric object and creating values from them.
Consistent with the definitions of relations in Part 1, Clause 6.1.2.3, the SQL/MM ST_Equals,
ST_Disjoint, ST_Intersects, ST_Touches, ST_Crosses, ST_Within,
ST_Contains, ST_Overlaps and ST_Relate routines shall be supported to test named spatial
relationships between two geometric objects.
The SQL/MM ST_Distance routines shall be supported to calculate the distance between two geometric
objects.
Consistent with the set theoretic operations defined in ISO 19103, and ISO 19107, the SQL/MM
ST_Intersection, ST_Difference, ST_Union, ST_SymDifference, ST_Buffer,
and ST_ConvexHull routines shall be supported to implement set-theoretic and constructive operations on
geometric objects. These operations are defined for all types of Geometry.
7.2.8.2 Declarations from SQL/MM (informative)
CREATE TYPE ST_Geometry
AS (
ST_PrivateDimension SMALLINT DEFAULT -1,
ST_PrivateCoordinateDimension SMALLINT DEFAULT 2,
ST_PrivateIs3D SMALLINT DEFAULT 0,
ST_PrivateIsMeasured SMALLINT DEFAULT 0
)
NOT INSTANTIABLE
NOT FINAL
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xxxi
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
METHOD ST_Dimension()
RETURNS SMALLINT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_GeometryType()
RETURNS CHARACTER VARYING(ST_MaxTypeNameLength)
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_AsText()
RETURNS CHARACTER LARGE OBJECT(ST_MaxGeometryAsText)
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT
RETURNS NULL ON NULL INPUT,
METHOD ST_AsBinary()
RETURNS BINARY LARGE OBJECT(ST_MaxGeometryAsBinary)
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_SRID()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
METHOD ST_SRID (ansrid INTEGER)
RETURNS ST_Geometry
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
CALLED ON NULL INPUT,
METHOD ST_IsEmpty()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_IsSimple()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Boundary()
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Envelope()
RETURNS ST_Polygon
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_WKTToSQL (awkt CHARACTER LARGE OBJECT(ST_MaxGeometryAsText))
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xxxiii
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
METHOD ST_WKBToSQL(awkb BINARY LARGE OBJECT(ST_MaxGeometryAsBinary))
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Equals(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Disjoint(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Intersects (ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Touches(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
METHOD ST_Crosses(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Within (ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Contains(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Overlaps(ageometry ST_Geometry)
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Relate(ageometry ST_Geometry, amatrix CHARACTER(9))
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xxxv
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
METHOD ST_Distance(ageometry ST_Geometry)
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Distance(ageometry ST_Geometry,
aunit CHARACTER VARYING(ST_MaxUnitNameLength))
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Intersection(ageometry ST_Geometry)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Difference(ageometry ST_Geometry)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Union(ageometry ST_Geometry)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
METHOD ST_SymDifference (ageometry ST_Geometry)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Buffer (adistance DOUBLE PRECISION)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_Buffer ( adistance DOUBLE PRECISION,
aunit CHARACTER VARYING(ST_MaxUnitNameLength))
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_ConvexHull()
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT
7.2.9 SQL routines on type Point
7.2.9.1 Supported routines
The SQL/MM ST_X, ST_Y, ST_Z and ST_M routines and all routines supported by type Geometry
shall be supported for geometries of type Point.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xxxvii
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
7.2.9.2 Declarations from SQL/MM (informative)
CREATE TYPE ST_Point
UNDER ST_Geometry AS
(
ST_PrivateX DOUBLE PRECISION DEFAULT NULL,
ST_PrivateY DOUBLE PRECISION DEFAULT NULL,
ST_PrivateZ DOUBLE PRECISION DEFAULT NULL,
ST_PrivateM DOUBLE PRECISION DEFAULT NULL
)
INSTANTIABLE
NOT FINAL
METHOD ST_X()
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT,
METHOD ST_X (xcoord DOUBLE PRECISION)
RETURNS ST_Point
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
CALLED ON NULL INPUT,
METHOD ST_Y()
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL