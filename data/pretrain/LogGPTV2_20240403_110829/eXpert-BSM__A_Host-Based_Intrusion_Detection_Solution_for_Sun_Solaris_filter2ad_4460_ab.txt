### Forms of Activity Indicating Abusive or Intrusive Behavior on Unix Hosts

eXpert-BSM excels at detecting security violations on Unix hosts, whether the threat originates from an external agent or an insider with console access. Although comprehensive attack space coverage is not claimed, significant effort and experience have been invested in developing this knowledge base over several years. The intrusion models in eXpert-BSM are designed to recognize the most general forms of misuse by detecting state transitions that indicate underlying compromises and known malicious activities. These models are categorized into the following broad areas of host misuse:

#### Data Theft
This category involves attempts by non-administrative users to perform unauthorized read operations on files or devices, which are inconsistent with the system's security policy. It includes:
- Accessing files in nonpublic directories owned by other users.
- Violating eXpert-BSM’s surveillance policy (Section 3.2).
- Accessing root core file contents, a method to gain access to encrypted or cleartext password content.
- Opening network interface devices in promiscuous mode, indicating attempts to sniff network traffic.

#### System/User Data Manipulation
This category covers attempts by non-administrative users to modify system or user data, including:
- Altering, creating, overwriting, appending, removing, or changing the content or attributes of file system objects.
- Modifying system files containing security-relevant configuration parameters, typically located in /etc.
- Unauthorized modifications by anonymous FTP users outside predefined upload directories.
- Modifying user environment files (e.g., .cshrc, .login, .rhosts) or files in violation of eXpert-BSM’s surveillance policy.
- Altering system executable binaries and scripts stored in publicly shared binary directories.

#### Privilege Subversion
This category provides broad and effective coverage of illegal attempts to subvert root or other administrative authority, including:
- Illegally changing one’s operating authority.
- Subverting the function of a privileged (setuid) application.
- Causing a setuid process to execute an application not owned by the setuid program owner or the system.
- Detecting buffer overflow attacks, such as exec argument, environment variable, and data-segment overflows.
- Identifying known exploits, such as the Solaris 8 buffer overflow attack, without specific updates.

#### Account Probing and Guessing
This category identifies repeated attempts to enter the system via authentication services like rlogin or FTP, or attempts to gain root authority by non-administrative users or external clients.

#### Suspicious Network Activity
This category recognizes various attempts to probe or scan the host, or misuse the host’s FTP services to distribute content to other external sites. BSM audit trails provide detailed insight into the internal operations of network server processes, enabling the detection of successful connections to TCP-based services and potential misuse.

#### Asset Distress
This category identifies operational activity indicating current or impending failure or significant degradation of a system asset, such as:
- Filesystem or process table exhaustion.
- Core-dump events by root-owned services.
- Malicious service denials, including remote agents attempting to exhaust process tables via inetd services and local host processes performing self echo flooding attacks.

#### User-Specifiable Surveillance
This category allows eXpert-BSM operators to create site-specific policies for immediate alarm triggers, including:
- Recognizing operator-defined command arguments considered suspicious.
- Specifying network ports that should not be accessed by external clients.
- Monitoring user accesses to data and executable files based on a site surveillance policy.

#### Other Security-Relevant Events
This category provides reports on general security-relevant activity, including:
- Significant backward movement of the system clock, indicating potential manipulation of file or log states.
- Setuid enabling by non-administrative users.
- Suspicious symbolic link creation in publicly writable directories.
- Process execution by reserved accounts not intended to run applications.
- Attempts to alter the underlying audit configuration to flood or starve eXpert-BSM.

### 3.2. File Surveillance Policy Specification

eXpert-BSM provides a facility for specifying a surveillance policy over file reads, writes, and executions. This allows operators to establish rules for generating immediate notifications when users step outside their designated roles on the system.

#### Example Scenario
Consider a consultant granted access to parts of a file server that also contains company-sensitive data. The operator would set access controls to prevent the consultant’s access to these sensitive areas. However, over time, proper settings may be neglected, or new sensitive files may be created with default permissions. The surveillance policy helps detect whenever the consultant accesses or attempts to access files or directories in the sensitive areas.

#### Components of the Access Policy
1. **UserGroups**: Specifies groups of users referenced in the access policy. User names must be valid login names defined in the password file and can appear in multiple lists.
2. **FileGroups**: Specifies sets of files and directories that can be referenced together in the access policy. Files and directories should be fully qualified pathnames and can appear in multiple lists.
3. **Policy**: Defines illegal read, write, and execute accesses between users and files. For each user group, three possible relations can be specified: `nread`, `nwrite`, and `nexec`.

#### Example Policy
```plaintext
UserGroups {
  RegStaff (user1 user2)
  Management (admin)
  Accounting (acct)
}

FileGroups {
  Programs (/bin /usr/bin /usr/local/bin /usr/local/ftp/bin)
  Admtools (/etc/bin /etc/sbin /usr/sbin /sbin)
  CompanySecrets (/secret)
  Payroll (/accounting/DBMS/payroll.db)
}

Policy {
  RegStaff (
    nread[CompanySecrets Payroll]
    nwrite[CompanySecrets Programs Payroll Admtools]
    nexec[Admtools] )
  Management (
    nread[]
    nwrite[Programs Admtools]
    nexec[] )
  Accounting (
    nwrite[Programs Admtools]
    nread[CompanySecrets]
    nexec[Admtools] )
}
```

In this example, regular staff are not allowed to read company secrets or payroll data, write to certain file groups, or execute admin tools. Management staff have unrestricted read and execute access but cannot modify certain file groups. Accounting staff have restricted access to specific file groups and admin tools.

### 4. eXpert-BSM Architecture and Features

#### 4.1. Preprocessing the Solaris BSM Event Stream
eXpert-BSM runs on Solaris 2.6, 7, and 8, supporting both 32-bit and 64-bit operating modes. It uses the SunSHIELD Basic Security Module (BSM) for auditing. Before analyzing audit records, eXpert-BSM’s event preprocessing service, `ebsmgen`, transforms the content of each audit record into an internal message structure, adding synthetic fields for parent command and parent IP. This ensures consistent and reliable information across different audit event types and OS versions.

Each message is passed to the expert system’s event handling interface, where it is asserted as a fact according to a predefined ptype in P-BEST. Developing tools for BSM data analysis is challenging due to the lack of formal grammars and undocumented token types. Despite these challenges, eXpert-BSM provides robust and reliable detection capabilities.