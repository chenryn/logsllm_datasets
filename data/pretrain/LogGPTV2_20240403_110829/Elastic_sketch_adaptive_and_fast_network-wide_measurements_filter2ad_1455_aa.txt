title:Elastic sketch: adaptive and fast network-wide measurements
author:Tong Yang and
Jie Jiang and
Peng Liu and
Qun Huang and
Junzhi Gong and
Yang Zhou and
Rui Miao and
Xiaoming Li and
Steve Uhlig
Elastic Sketch: Adaptive and Fast Network-wide
Measurements
Tong Yang
Peking University
PI:EMAIL
Qun Huang
Institute Of Computing
Technology, CAS
PI:EMAIL
Jie Jiang
Peking University
PI:EMAIL
Junzhi Gong
Peking University
PI:EMAIL
Peng Liu
Peking University
PI:EMAIL
Yang Zhou
Peking University
PI:EMAIL
Rui Miao
Alibaba Group
PI:EMAIL
Xiaoming Li
Peking University
PI:EMAIL
Steve Uhlig
Queen Mary University of London
PI:EMAIL
ABSTRACT
When network is undergoing problems such as congestion,
scan attack, DDoS attack, etc., measurements are much more
important than usual. In this case, traffic characteristics in-
cluding available bandwidth, packet rate, and flow size dis-
tribution vary drastically, significantly degrading the perfor-
mance of measurements. To address this issue, we propose
the Elastic sketch. It is adaptive to currently traffic char-
acteristics. Besides, it is generic to measurement tasks and
platforms. We implement the Elastic sketch on six platforms:
P4, FPGA, GPU, CPU, multi-core CPU, and OVS, to process
six typical measurement tasks. Experimental results and the-
oretical analysis show that the Elastic sketch can adapt well
to traffic characteristics. Compared to the state-of-the-art,
the Elastic sketch achieves 44.6 ∼ 45.2 times faster speed
and 2.0 ∼ 273.7 smaller error rate.
CCS CONCEPTS
• Networks → Network monitoring; Network measure-
ment;
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are not
made or distributed for profit or commercial advantage and that copies bear
this notice and the full citation on the first page. Copyrights for components
of this work owned by others than ACM must be honored. Abstracting with
credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior specific permission and/or a fee. Request
permissions from permissions@acm.org.
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5567-4/18/08.
https://doi.org/10.1145/3230543.3230544
KEYWORDS
Sketches; Network measurements; Elastic; Compression;
Generic
ACM Reference Format:
Tong Yang, Jie Jiang, Peng Liu, Qun Huang, Junzhi Gong, Yang
Zhou, Rui Miao, Xiaoming Li, and Steve Uhlig. 2018. Elastic Sketch:
Adaptive and Fast Network-wide Measurements. In SIGCOMM ’18:
SIGCOMM 2018, August 20–25, 2018, Budapest, Hungary. ACM, New
York, NY, USA, 15 pages. https://doi.org/10.1145/3230543.3230544
1 INTRODUCTION
1.1 Background and Motivation
Network measurements provide indispensable information
for network operations, quality of service, capacity planning,
network accounting and billing, congestion control, anom-
aly detection in data centers and backbone networks [1–9].
Recently, sketch-based solutions1 [8, 10] have been widely ac-
cepted in network measurements [2, 3, 11, 12], thanks to their
higher accuracy compared to sampling methods [2, 4, 12]
and their speed.
Existing measurement solutions [4, 8, 10, 12–17] mainly
focus on a good trade-off among accuracy, speed and memory
usage. The state-of-the-art UnivMon [2] pays attention to
an additional aspect, generality, namely using one sketch to
process many tasks, and makes a good trade-off among these
four dimensions. Although existing work has made great
contributions, they do not focus on one fundamental need:
achieving accurate network measurements no matter how
traffic characteristics (including available bandwidth, flow
size distribution, and packet rate) vary. Measurements are
especially important when network is undergoing problems,
1In this paper, sketches refers to data streaming algorithms that can be used
for network measurements.
such as network congestion, scans and DDoS attacks. In such
cases, traffic characteristics vary drastically, significantly
degrading the measurement performance. Therefore, it is
desirable to achieve accurate network measurements when
traffic characteristics vary a lot.
The first traffic characteristic is the available bandwidth.
In data centers, administrators care more about the state
of the whole network than a single link or node, known
as network-wide measurements [2, 12, 18]. In data centers,
administrators can deploy many measurement nodes, which
periodically report sketches to a collector [2, 12, 18]. It re-
quires available bandwidth for measurements, which share
the same data plane as the user traffic. However, in data
centers, network congestion is common. It can happen fre-
quently within a single second [19] and be as large as more
than half of the network bandwidth [9]. In this case, on the
one hand, measurements are especially critical for conges-
tion control and troubleshooting. One cannot wait for the
available bandwidth to be sufficient to report the sketches,
because network problems should be handled immediately.
On the other hand, network measurements should not be a
burden for the network, as pointed out in [20–27]. A good
solution is to actively compress the sketch with little accu-
racy loss, thereby reducing bandwidth usage. Therefore, it
is desirable to compress the sketch. This has not been done
before in the literature. Besides passive compression during
congestion, network operators need to proactively control
the measurement tasks as well. For example, to keep service-
level agreements (SLA) during maintenance or failures [28],
operators tend to reduce measurements and leave the band-
width for critical user traffic.
The second characteristic is the packet arrival rate (packet
rate for short) [29, 30], which is naturally variable and could
vary drastically. For example, some routing protocols or
mechanisms are proposed to adjust the packet sending rate
to optimize network performance [31–33]. Also, when the
network is under attack (e.g., a network scan or a DDoS at-
tack), most packets tend to be small. In this case, the packet
rate is very high, even though the available bandwidth might
still be significant. The processing speed of existing sketches
on software platforms is fixed in terms of packet rate. There-
fore, it does not work well when the packet rate suddenly
becomes much higher, likely failing to record important in-
formation, such as the IP addresses of attackers. Therefore,
in this case, it is desirable to accelerate the processing speed
by actively discarding the unimportant information.
The third characteristic is flow size distribution. It is
known that most flows are small [34], referred to as mouse
flows, while a very few flows are large, referred to as elephant
flows [4, 22, 35–37]. An elegant solution is to accurately sepa-
rate elephant flows from mouse flows, and use different data
structures to store them. However, the flow size distribution
varies. One might think we can predict traffic and allocate
appropriate size of memory for sketches in advance. It may
be easy to predict the number of elephant flows in one hour,
but hard at timescales of seconds or milliseconds. Therefore,
it is desirable to design an elastic data structure which can
dynamically allocate appropriate memory size for elephant
flows.
In summary, this leads us to require our sketch to be elas-
tic: adaptive to bandwidth, packet rate, and flow size dis-
tribution. Besides them, there are three other requirements
in measurements: 1) generic, 2) fast, and 3) accurate. First,
each measurement node often has to perform several tasks.
If we build one data structure for each task, processing each
incoming packet requires updating all data structures, which
is time- and space-consuming. Therefore, one generic data
structure for all tasks is desirable. Second, to be fast, the
processing time of each packet should be small and constant.
Third, being accurate implies that the error rate should be
small enough when using a given amount of memory. Among
all existing solutions, no solution is elastic, and only two
well known solutions claim to be generic: UnivMon [2] and
FlowRadar [18]. However, our experimental results in Sec-
tion 7 show that UnivMon is practically not accurate, while
FlowRadar is not memory efficient.
1.2 Our Solution
In this paper, we propose a novel sketch, namely the Elastic
sketch. It is composed of two parts: a heavy part and a light
part. We propose a separation technique named Ostracism
to keep elephant flows in the heavy part, and mouse flows
in the light part.
To make it “elastic”, we do the following. 1) To be adaptive
to bandwidth, we propose algorithms to compress and merge
sketches. First, we can compress our sketch into an appro-
priate size to fit the current available bandwidth. Second, we
can use servers to merge sketches, and reduce the bandwidth
usage. 2) When the packet rate becomes high, we change
the processing method: each packet only accesses the heavy
part to record the information of elephant flows exclusively,
discarding the information of mouse flows. In this way, we
can achieve much faster processing speed at the cost of rea-
sonable accuracy drop. 3) As the number of elephant flows
varies and is unknown in advance, we propose an algorithm
to dynamically increase the memory size of the heavy part.
To make our solution “generic”, we do the following. 1)
To be generic in terms of measurement tasks, we keep all
necessary information for each packet, but discard the IDs
of mouse flows, which is based on our observation that the
IDs of mouse flows are memory consuming but practically
useless. 2) To be generic in terms of platforms, we propose
a software and a hardware version of the Elastic sketch, to
make our sketch easy to be implemented on both software
and hardware platforms. Further, we tailor a P4 version of
the Elastic sketch, given the popularity of this platform [38].
Owing to the separation and discarding of unnecessary
information, our sketch is accurate and fast: experimental
results show that our sketch achieves 44.6 ∼ 45.2 times
faster speed and 2.0 ∼ 273.7 smaller error rate than the
state-of-the-art: UnivMon [2].
1.3 Key Contributions
• We propose a novel sketch for network measurements,
namely the Elastic sketch. Different from previous work,
we mainly focus on the ability of the sketch to adapt to
bandwidth, packet rate and flow size distribution. The
Elastic sketch is also generic, fast and accurate. We propose
two key techniques, one to separate elephant flows from
mouse flows, and another for sketch compression.
• We implement our sketch on six platforms: P4, FPGA,
GPU, CPU, multi-core CPU, and OVS, to process six typical
measurement tasks.
• Experimental results show that our sketch works well on
all platforms, and significantly outperforms the state-of-
the-art for each of the six tasks.
2 BACKGROUND AND RELATED WORK
In this section, we first discuss the challenges of adaptive
measurements. Second, we show how to achieve generality.
Finally, we introduce the most well-known network mea-
surement systems from the literature.
2.1 Challenges of Adaptive Measurements
As mentioned above, when network does not work well,
the network measurement is especially important. In this
case, traffic characteristics vary drastically, posing great chal-
lenges for measurement.
First, it is challenging to send measurement data (e.g.,
sketch) in appropriate size according to the available band-
width. When the available bandwidth is small, sending a
large sketch will cause long latency and affect user traffics.
Furthermore, all existing solutions fix the memory size be-
fore starting measurement. The problem is how to make the
sketch size smaller than the available bandwidth, especially