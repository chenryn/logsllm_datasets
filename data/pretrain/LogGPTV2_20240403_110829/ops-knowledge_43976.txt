User: I'm shipping a Python app for deployment on Debian servers. Providing a requirements.txt file with a list of all needed Python packages is very convenient when installing the app, especially when accompanied with a Makefile to automatically install from it using pip.
But as you know some Python packages depend on Linux system packages (Debian in this case), and it would be great if I could provide a similar file with my project to install them all in one step, and define the Makefile rule to automate it.
Do dpkg or apt provide such functionality?
Assistant: You can certainly dump all the packages installed by dpkg, but that's probably not what you want to do - you'll end up getting thounsands of packages unrelated to your software, and possibly breaking the system, if it's a different debian version.
My advice is getting your software to a fresh debian machine and try to pip install everything from your requirements.txt. As python package installation fails (because of missing debian packages), make a text file with a newline separated list of the needed debian packages.
Then, just cat my-deb-dependencies | xargs apt-get install on every new system.
This takes some manual work - I don't think there's a reliable way of automating it.