User: How to install and configure Prometheus and Grafana to monitor containers and nodes in a Kubernetes cluster
Assistant: To install and configure Prometheus and Grafana to monitor containers and nodes in a Kubernetes cluster, you can follow the steps below: 1. Install Prometheus You can install Prometheus through Helm with the following command: ``` helm install stable/prometheus-operator --name prometheus- operator --namespace monitoring ``` After the installation is complete, you can view Prometheus services through the following command: ``` kubectl get services -n monitoring ``` 2. Install and configure Grafana You can also install Grafana through Helm, the command is as follows: ` `` helm install stable/grafana --name grafana --namespace monitoring \ --set service.type=NodePort \ --set adminPassword='PASSWORD' \ --set service.nodePort=30000 ``` After the installation is complete, you can Get the port of Grafana: ``` kubectl get services -n monitoring ``` 3. Install and configure Kube-state-metrics Kube-state-metrics is a service for providing Kubernetes cluster status statistics. It can be installed using the following command: ``` kubectl apply -f https://raw.githubusercontent.com/kubernetes/kube-state-metrics/master/examples/standard/rbac.yaml kubectl apply -f https://raw. githubusercontent.com/kubernetes/kube-state-metrics/master/examples/standard/kubernetes-metrics.yml ``` 4. Configure Prometheus to monitor Kubernetes objects Create configuration file prometheus.yaml: ``` global: scrape_interval: 15s evaluation_interval: 15s external_labels: cluster: 'test-cluster' rule_files: scrape_configs: - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca. crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https - job_name : 'kubernetes-nodes' scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/ proxy/metrics - job_name: 'kubernetes-service-endpoints' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes. io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex : (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\d+)?;(\d+) replacement: $1:$2 - source_labels: [ __meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name ``` Import the configuration file into Prometheus with the following command: ``` kubectl create configmap prometheus-cfg --from-file prometheus. yaml -n monitoring ``` 5. Configure the Grafana data source and dashboard Add the Prometheus data source in Grafana and import the Kubernetes cluster monitoring dashboard to complete the installation and configuration. The above steps can refer to https://www.cnblogs.com/studymore/p/10199931.html.