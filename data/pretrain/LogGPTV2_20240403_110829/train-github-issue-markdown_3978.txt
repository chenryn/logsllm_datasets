**Issue Type** (Please select one with "x")
- [x] Bug Report => Please search GitHub for a similar issue or PR before submitting.
- [ ] Feature Request
- [ ] Support Request => For support requests, please refer to: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question

**Current Behavior**
When an `async` pipe is used within a component, all of the component's `@Input` properties are triggered every time the async value is updated. This behavior is particularly problematic when `@Input` properties are bound to setters (e.g., `@Input() set foo(v) { ... }`). 

Upon closer inspection, it appears that the `async` pipe calls the `unwrapValue` function, which increments the `unwrapCounter`. This increment causes `checkBinding` to return `true` on its first invocation, leading to the execution of `updateProp`.

**Expected Behavior**
Only the `@Input` property directly bound to the `async` pipe should be updated. (This was the observed behavior in version 2.)

**Steps to Reproduce the Issue**
1. Visit the following Plunker: http://embed.plnkr.co/MDvG3iKe4klFCAayIYh5/
2. Observe the behavior of the `@Input` properties when the async value changes.

**Environment Details**
- **Operating System:** macOS Sierra 10.12.3
- **Angular Version:** 4.0.0-rc.3
- **Browser:** Firefox 47.0.1
- **Language:** TypeScript