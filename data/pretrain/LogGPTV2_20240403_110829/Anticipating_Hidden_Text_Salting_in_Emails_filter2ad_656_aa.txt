title:Anticipating Hidden Text Salting in Emails
author:Christina Lioma and
Marie-Francine Moens and
Juan-Carlos Gomez and
Jan De Beer and
Andr&apos;e Bergholz and
Gerhard Paass and
Patrick Horkan
1195
978-1-4673-0081-0/11/$26.00 ©2011 IEEE
The 2011 Military Communications Conference - Track 3 - Cyber Security and Network Operations
Dept. of Computer and
Information Sciences
Towson University
Towson, MD 21252
Dept. of Computer and
Information Sciences
Towson University
Towson, MD 21252
Email: PI:EMAIL
Email: PI:EMAIL
I. INTRODUCTION
Difan Zhang
Wei Yu
Rommie Hardy
Army Research Laboratory
2800 Powder Mill Road
Adelphi, MD 20783
Email: PI:EMAIL
is very likely to exploit a vulnerability before the defender
knows the vulnerability exists. As long as the vulnerabilities
exist in hosts and networks, the attacker can always ﬁnd
chances to break in. Second, the network data and alerts are
often uncertain, ambiguous, and even incorrect, and they often
come from places of different modalities. The detection system
needs to have the intelligence to identify the most informative
alerts to use so that a potential attack can be detected quickly to
minimize the damage. Third, enterprise networks are generally
mission-oriented and resource-limited. To accurately detect
attacks, a large amount of raw trafﬁc data consist of both
malicious trafﬁc and normal trafﬁc from individual entities
data and need to be collected, processed, and analyzed to
accurately detect malicious activities.
In this paper, we propose developing a distributed network
sensor based intrusion detection framework to detect
the
emerging stealthy attacks such as malware propagation in
enterprise networks. In our framework, we consider both the
distributed detection agents on hosts and control center. The
detection agents will monitor and aggregate network trafﬁc
and generates attack alerts. The control center intelligently
collect information from distributed detection agents, detect
the attacks and identify compromised hosts and attack origins.
Our developed framework can be applied to detect attacks
against the military scenarios, including the tactical mobile
hosts with limited bandwidth that links them back to the
strategic operation center.
We consider and develop several techniques, including the
deep packet inspection to efﬁciently process network trafﬁc,
detection algorithms (e.g., passive / active discovery mecha-
nisms to identify compromised hosts). To demonstrate the ef-
fectiveness of our proposed framework, we have implemented
a proof-of-concept system based on the proposed framework
and conducted real-world experiments. Our empirical data
shows that our detection framework and techniques can ac-
curately detect attacks, including malware propagation.
The remainder of the paper is organized as follows. In
Section II, we introduce the framework of our detection system
and the key techniques. In Section III, we present a proof-
of-concept implementation of our system. In Section IV, we
demonstrate the experimental results of our detection frame-
A Distributed Network-Sensor Based Intrusion
Detection Framework in Enterprise Networks
Abstract—In this paper, we propose a distributed network sen-
sor based intrusion detection framework to detect the emerging
stealthy attacks, including malware propagation in enterprise
networks. In this framework, we consider the distributed de-
tection agents on hosts, which monitor network trafﬁc and other
anomalies on the hosts, efﬁciently process and aggregate detection
data, and generates attack alerts. The control center collects
information from the distributed detection agents and detects the
attacks and compromised hosts. We develop techniques, including
a deep packet inspection to process network trafﬁc efﬁciently,
detection algorithms (e.g., passive/ active discovery mechanisms
to identify compromised hosts). To demonstrate the effectiveness
of our proposed framework, we have implemented a proof-of-
concept system and conducted real-world experiments. Our data
show the effectiveness of our approach to detect attacks, including
the malware propagation.
Index Terms—Distributed Intrusion Detection, Network Sen-
sors, and Enterprise Networks.
It
is commonly believed that mission critical networks
demand robust, diverse, and resilient protected communication
and computing environment, enabling network-centric opera-
tion with zero downtime. The security of the military networks
is vital to the success of mission and the emergent attacks pose
a clear and dangerous threat to the military networks. Modern
warfare has been transferring army to a lighter and more
mobile force, meeting the challenges of nonlinear warfare
against a wide range of potential enemies, from highly trained
and organized forces to regional threats ﬁghting urban wars,
as well as terrorists [1]. Cyber terrorists might penetrate the
enterprise networks, power grid, and transportation systems,
applying root-kits and back-doors (bot-nets) for later on-
demand attacks [2].
Sophisticated cyber attacks have become stealthy and
anonymous, posing the most challenging issue to military and
civilian enterprise networks, ISPs (Internet service providers),
and law enforcement agencies. Attackers may develop sophis-
ticated strategies to avoid detection and maximize the damage
to the target networks. Intelligent worm/ malware propagation
[3], botnet attacks [4] all belong to those stealthy attacks.
To defending against such attacks in mission critical net-
works, there are few challenges listed below. First, the attacker
1196
Internet
Attacker
Bot-master A
Bot-master B
DB
Ethernet
SPAN Link
Control Center
Core Layer Router
Distribution Layer L3 Switch
Active 
Agent
Passive 
Agent
Host 0
Host 1
Host 2
Host 3
Fig. 1. System Architecture
Host 4
vendors and consume lots of processing time. Because of the
performance and extensibility concerns, we have implemented
a new packet inspection module, which sniff the trafﬁc and
analyze data directly. Hence, the performance of our developed
packet inspection is better than the existing tools to handle the
packets. Because TCP/UDP headers and IP headers are at a
ﬁxed position in packets, we simply match the corresponding
bits in the packet headers and extract the source/destination
addresses and ports without using high-level API (application
programming interface) provided by OS. To eliminate the
overhead on packet inspection, only the ﬁrst several hundred
bytes in the packet will be analyzed because most packet
types can be identiﬁed by source/destination ports and the ﬁrst
several hundred bytes. By working on network driver directly,
the efﬁciency can be further improved and we leave this as
our future research.
2) Detection Mechanisms: We have adopted and imple-
mented an image based technique to efﬁciently process a
large volume of host-IDS data and accurately detect stealthy
attacks. In particular, the controller collects trafﬁc alerts from
DAs, plots the image for suspicious hosts based on the trafﬁc
associated with them and uses the image pattern algorithm
to detect attacks. Generally speaking,
the image-detection
algorithm has the following stages: (1) Feature extraction:
We use the packet headers of network trafﬁc reported by
detection agents at regular interval and analyze the aggregate
data at the detection center. This gives a broader view of
network. Using the trafﬁc data, the 2-D image as the feature
will be generated. (2) Anomaly detection. The anomaly can be
detected using line or edge detection algorithms. The motion
prediction algorithms can be used to predict the attack patterns.
We have implemented the software tool using Python along
with libpcap to capture raw packets. Our tool record the
trafﬁc going through the network interface card, and will
store the data in a highly optimized database. In order to
minimize the storage cost, only the source address, destination
address and packet length are stored. The tool will analyze the
trafﬁc header data and plot the image to aggregate trafﬁc data
periodically.
work and techniques. We present related work in Section V.
Finally, we conclude this paper in Section VI.
II. DETECTION FRAMEWORK
A. Overview
(DA): DA refers
1) Detection Agent
Figure 1 depicts the framework of our detection system,
which consists of the two key components described below.
to the threat-
monitoring software installed on hosts. It is responsible for
analyzing incoming and out-going trafﬁc and other suspicious
behavior on hosts and detecting malicious activities using the
techniques discussed in Section II-B. Note that it could also
be integrated with other host-based anti-malware software,
e.g., analyzing the anomaly of program executable via system
calls analysis [5]. Because transmitting a large amount of
raw network trafﬁc back to the control center will consume a
signiﬁcant amount of network bandwidth, we consider that DA
should have the capability to gather and aggregate detection
data. In order to do so, DA adopts the deep packet inspection
(DPI) mechanism to identify, analyze, and aggregate suspi-
cious trafﬁc and system logs efﬁciently. DA will aggregate the
detection information and send it to the control center. After
collecting information from multiple DAs, further analysis will
be carried out at the control center.
2) Control Center: The control center is responsible for
monitoring and controlling DAs, which are distributed across
the enterprise network. The control center receives the alert
messages from DAs and stores the information in its database.
Upon receiving data from DAs, the control center will analyze
them and identify the compromised hosts in the network using
the techniques described in Section II-B. If the compromised
hosts are identiﬁed, attack alerts will be provided to the
network administrator, who may take further actions to recover
the compromised hosts and ﬁx the vulnerability of system.
B. Key Techniques
To enable the distributed DAs and the control center to
effectively collaborate in enterprise network with limited
resource (e.g., battleﬁeld operation) and accurately detect
attacks, we consider the key techniques listed below.
1) Packet Inspection: The deep packet inspection (DPI) is
useful to analyze packets across the network. In our developed
framework, DPI module exists in both DA and control center.
In DA, DPI will analyze the packet header at network layer,
transport layer, and application layer. It is also capable of
decompressing the commonly seen compressed ﬁles. As the
trafﬁc on each host will not be high and the host is generally
powerful, the deep inspection can be conducted on hosts. On
the control center, the DPI will analyze the network layer,
transport layer, and application layer as well. Nevertheless,
the trafﬁc on the edge of enterprise network can be very high,
we may deploy a group of controllers to share the processing
load and preserve the desired detection performance.
To conduct packet inspection, there are several existing
packet sniffers, including tcpdump and snoop. In particular,
tcpdump tries to resolve the service names and hardware
1197
Fig. 2. DA Software
III. SYSTEM IMPLEMENTATION
We have implemented a prototypical system, which consists
of the detection agents and the control center, along with
a subset of proposed techniques discussed in Section II-B,
to demonstrate the effectiveness of our proposed detection
framework.
The control center should be located at
system, netcat can be used, although it incurs less extensi-
bility. The trafﬁc analyzer can ﬁlter the trafﬁc communicating
with a speciﬁc host quickly. The control center itself can be
treated as an independent detection system with intelligence.
the border of
enterprise networks. A dedicated network interface connected
to the border router and conﬁgured port mirror with Internet
backbone should be connected. With this conﬁguration, the
control center can sniff all inbound and outbound trafﬁc. In
our implementation, we used libpcap to capture raw packets
in promiscuous mode. Recall that because of performance
concern, only the IP address, port and ﬁrst few bytes in
payload are analyzed. To further improve the performance,
we plan to implement a kernel module to capture raw packets
in the future.
In enterprise networks, ﬁrewalls or routers with ACL (access
control list) function are widely used. By taking advantage
of ACLs, the communication with master or attacker may be
blocked to reduce the attack impact on the network. Because
most network devices support SNMP, we can implement
ﬁrewall controlling module with predeﬁned APIs in the con-
trol center and easily integrate our system with the existing
network management.
B. Discovery Mechanisms
To discover the compromised hosts and their master or
controller, we adopt the following two mechanisms: (i) passive
discovery and (ii) active discovery. The overall workﬂow is
described in Figure 3.
In many real-world cyber security practices, the network
administrator will be unaware of compromised hosts within the
managed network. Hence, the system begins with the passive
discovery. In this case, DA is required to be installed on most
hosts to analyze its inbound and outbound trafﬁc. When suspi-
cious trafﬁc is trapped, the control center will be notiﬁed and
it will sniff and analyze trafﬁc related to suspicious computer
and determine whether the suspicious computer is a master.
If it turns to be true, the trafﬁc analyzer will be launched to
determine whether there are other compromised hosts in the
network. The hosts on which the malicious/abnormal trafﬁc is
detected will be treated as the compromised hosts.
When the compromised hosts are identiﬁed, the network
administrator can turn the system to the active discovery
mode using utilities provided on the host. Before switching to
active discovery mode, all unrelated applications on identiﬁed
host must be turned off to avoid interference when those
applications access the Internet. Other actions are considered
as well. First, the compromised host should be isolated from
other hosts logically to avoid further malware propagation to
other hosts. This can be achieved by automatically adding
the compromised hosts into a separate virtual LAN in the
enterprise network. Second, because hosts have been compro-
mised, malware will try to connect to the master eventually,
sending information to it and receiving commands from it.
DA will trap the trafﬁc and report them to the control center.
When the master is identiﬁed, the control center will launch
A. Components
1) Detection Agent: In most enterprise networks, because
hosts are running MS Windows, DA software has been de-
signed especially for MS Windows platform. In particular,
DA is a pure Win-32 application, running on Windows XP
SP2 and later. In our implementation, DA transmits data to the
control center via TCP port 14190 and their communication is
encrypted. The following is one sample line of output sent by
DA to the control center, working by a default conﬁguration.
Infected 10.21.20.247 1302468144128
922710802 1.2.3.4 REQUEST=GET
/07/07822.exe HTTP/1.1, UA=Agent234497,
HOST=example.com
The above example shows the case, where a Trojan-
downloader tends to download malware program and the host
is replaced to example.com and IP addresses are replaced to
1.2.3.4. To improve the detection accuracy, DAs analyzes the
trafﬁc and aggregates it before sending to the control center.
Because DA software runs on potential compromised hosts, to
protect itself from being terminated or its detection data being
corrupted or abused, a MS driver running on Ring0 has been
implemented to protect the program. To prevent the transmitted
data from being eavesdropped or manipulated, the encryption