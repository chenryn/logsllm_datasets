independent  central  guardians  are  located  at  the  centre  of 
each communication channel, i.e., at the star coupler. The 
guardian of a channel controls all the (frame) traffic at the 
respective channel. To achieve this, the guardian needs to 
be provided with the TTP/C clock synchronization service 
and needs to have access to C-state data. 
A  dedicated  node  consisting  of  a  stand-alone  TTP/C 
protocol  controller  provides  these  services  (by  providing 
the  central  guardian  with  a  regular  TTP/C  protocol 
interface,  i.e.,  the  CNI).  This  controller  is  logically  a 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:59:21 UTC from IEEE Xplore.  Restrictions apply. 
regular TTP/C controller that does not send any frames and 
whose  existence  is  thus  transparent  to  other  nodes  in  the 
cluster.  Physically,  the  controller  is  located  at  the  star 
coupler and is part of the guardian itself. 
pattern 
communication 
This approach provides a low statistical dependency of 
node  and  guardian  faults.  Because  of  the  strict  “one-at-a-
time” 
TDMA-based 
communication  and  the  fact  that  a  guardian  protects 
receivers  from  faulty  senders,  it  suffices  to  have,  for  all 
nodes, a single common guardian per channel. The central 
guardian  is  –  at  a  particular  point  in  time  –  logically 
assigned  to  the  sender  of  the  respective  slot;  it  prohibits 
write access of a node outside its sending slots. 
of 
The  central  guardian  is  both  physically  and  logically 
part of the interconnection network channel it is located at. 
Being part of the interconnection network implies that 
• 
the guardian can transform failure modes only if and 
when  they  become  manifest  at  the  interconnection 
network interface of a node 
the guardian must not transform failure modes of the 
interconnection  network  itself  (in particular,  a  faulty 
guardian must not spontaneously create valid frames 
or arbitrarily delay frames) 
• 
The  fault  hypothesis  of  the  central  guardian  configur-
ation assumes that only a single component of the cluster is 
faulty at a time, i.e., either one of the TTP nodes or one of 
the central guardians. If a TTP node is faulty, central bus 
guardians  will  protect  the  correct  nodes.  If  one  of  the 
guardians  is  faulty,  there  will  still  be  a  correct  guardian 
enabling  communication  among  the  (correct)  nodes.  The 
detailed  fault  hypothesis  of  the  TTP/C  protocol  and  the 
respective requirements for a central guardian can be found 
in  [3].  A  more  general  introduction  to  the  concept  of  a 
central guardian in the TTA is provided in [4, 8]. 
5.1  Requirements to a Central Guardian 
tolerance  mechanisms 
The  central  guardian  needs  to  isolate  faults  of  TTP 
nodes  (when  appearing  at  their  interconnection  network 
interface)  and  to  transform  these  faults  if  they  are  not 
covered by the fault hypothesis of TTP/C. The result of the 
transformation  will  be  a  fault  that  can  be  handled  by  the 
fault 
detection 
mechanisms  of  the  TTP/C  protocol.  When  transforming 
faults, 
two 
abstractions of the interconnection network interface of the 
TTP/C communication controller: 
•  Physical line interface 
•  Semantic interface 
the  guardian  will  be  concerned  with 
error 
and 
frame 
that  any 
transmission 
At  the  physical  line  interface  the  guardian  needs  to 
ensure 
is  perceived 
consistently  at  all  correct  receivers.  By  acting  as  a  single 
centralized authority the guardian decides whether a frame 
is correct or not. The algorithms to be implemented within 
the  guardian  and  the  algorithms  present  within  TTP/C 
communication  controllers  must  ensure  that  any  frame 
transmission indicated to be correct by a correct guardian 
will be accepted by a correct receiver node. In particular, it 
must  be  guaranteed  that  any  signal  leaving  a  correct 
guardian is consistently interpreted by receiving nodes. 
At  the  semantic  interface  the  guardians  take  care  that 
the  transmission  of  a  frame  cannot  possibly  confuse 
receivers  and  cause  them  to  precede  along  different 
execution  paths  with  respect 
the  communication 
protocol. This problem arises when a faulty node sends an 
I-frame (initialization frame) containing an invalid C-state 
(local  view  of  global  state  of  the  cluster)  and  some  other 
node uses this C-state to integrate into a cluster (either in 
start-up or during node re-integration). 
to 
In  particular,  analysis  and  fault  injection  experiments 
have  identified  the  following  failure  modes  the  central 
guardian needs to transform: 
•  SOS  failures  in  the  line  encoding  of  frames  at  the 
physical layer (SOS in the value and the time domain) 
•  SOS  failures  with  respect  to  the  start  of  frame 
• 
transmission 
transmission of any data outside the assigned sending 
slot (both in synchronized cluster operation and during 
startup) 
•  masquerading of nodes during the startup phase of the 
protocol 
Additionally,  to  provide  fault  isolation  to  integrating 
nodes: 
• 
transmission of invalid (i.e., non-agreed) C-state data 
transmission 
Transformation  of  SOS  faults  ensures  that  correct 
receiver  nodes  will  perceive 
faults 
consistently.  Supervision  of  the  third  failure  mode  will 
guarantee  that  a  faulty  node  sending  outside  its  assigned 
sending  slots  cannot  prevent  a  correct  node  from 
transmitting. Finally, masquerading becomes impossible to 
a  node  if  the  guardian  checks  the  contents  of  frames 
carrying  C-state  data  (startup  frames  contain  C-state  data 
that identify the sender of the frame). 
5.2  Algorithms of the Central Guardian 
The  following  section  will  discuss  the  algorithms 
implemented in the central guardian that transform failure 
modes as discussed in the previous section. 
5.2.1 Active Reshaping
To avoid SOS failures caused by faulty encoded signals at 
the  physical  layer  the  central  guardian  performs  active 
signal  reshaping.  The  guardian  simply  decodes 
the 
incoming data stream (if the transmission meets the timing 
requirements discussed in the next section) received from 
the actual transmitter and encodes it again using the same 
line-encoding  rule.  The  resulting  signal  is  forwarded  to 
receiving  nodes.  If  the  guardian  finds  that  the  received 
signal does not comply with the encoding rules it will abort 
forwarding  the  frame,  thus,  providing  all  receiving  nodes 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:59:21 UTC from IEEE Xplore.  Restrictions apply. 
with a detectably faulty data stream (i.e., a frame that does 
not contain the expected number of bits).  
5.2.2 Transmission Window Supervision
  To avoid SOS failures with respect to the start of frame 
transmission the central guardian supervises the time when 
a transmission starts. Since the central guardian has access 
to the CNI of an attached TTP/C controller, it is provided 
with  the  synchronized  global  time  base  of  precision 
.
Further,  the  guardian  knows  the  scheduled  start  time  of 
transmissions. The guardian will let through a transmission 
only if it starts during a time window (the “start window”)
of  2 
  where  the  scheduled  start  time  (according  to  the 
global time source of the guardian) is in the centre of the 
start window. Since correct nodes are synchronized to the 
central  guardian  with  a  precision  of 
  this  algorithm  will 
never  block  a  correct  node.  Receiving  TTP/C  nodes  will 
accept  transmissions  arriving  in  a  start  window  of  4 
. 
Thus, a correct receiver node (which is synchronized to the 
guardian with precision  ) will accept any transmission that 
passes the guardian. Additionally, the algorithm allows (in 
conjunction with active reshaping) computation of the size 
of a transmission window that ensures that a transmission, 
once  started  during  the  start  window,  will  be  completed 
during  the  transmission  window  at  all  correct  nodes. 
Finally,  since  a  node  will  only  be  allowed  to  start 
transmission  in  slots  that  are  assigned  to  this  node,  the 
algorithm  also  prevents  faulty  nodes  from  sending  at 
arbitrary times outside their slots. 
5.2.3 Semantic Analysis
To prevent masquerading and to protect integrating nodes 
from  faulty  nodes  that  transmit  invalid  C-state  data,  the 
central guardian performs semantic analysis of the frames 
being forwarded. Semantic analysis checks – on a bit-by-
bit  basis  –  the  contents  of  I-frames  by  comparing  the 
received data to local data. During startup the local data is 
the  sender  ID  of  the  node  transmitting  a  coldstart  frame 
(the  central  guardian  knows  the  intended  ID  of  a  node 
connected  to  a  particular  port).  During  synchronized 
protocol operation the central guardian checks the received 
C-state  data  against  the  (expected)  C-state  data  contained 
in  the  CNI  of  the  attached  TTP/C  controller.  If  the 
guardian  finds  that  any  bit  does  not  match  the  expected 
value, 
the 
respective  frame.  Thus,  receiving  nodes  will  be  provided 
with a corrupt frame (i.e., a frame that carries less bits than 
expected). In particular, if an integrating node receives the 
aborted frame, it will not use it for integration but wait for 
a correct frame. 
immediately  abort  forwarding  of 
it  will 
The same regular nodes that were used in the bus topology 
experiments  are  used  for  fault  injection  experiments  with 
the  star  topology,  whereby  the  functionality  of  local  bus 
guardian  in  regular  nodes  is  disabled.  The  software  setup 
and  the  application  workload  remain  the  same  as  for  the 
fault injection setup with the TTA bus topology. Only the 
MEDLs  (static  configuration  files  for  each  node)  have  to 
be  converted  to  account  for  the  additional  transmission 
delay introduced by the active reshaping mechanism of the 
central guardian. Faults were injected into one node. As in 
the bus topology the objective of these experiments is the 
validation of the TTA against error propagation. Moreover, 
the failure isolation capabilities of the central guardian will 
be validated. 
6.1  TTA Star Validation with SWIFI 
A  TTA  with  the  star  topology  was  validated  using 
SWIFI  experiments.  The  same  set  of  experiments 
performed  in  the  bus  topology  is  repeated.  Additional 
SWIFI  experiments  are  executed 
targeting  hardware 
registers  of  TTP/C-C1  controller  and  especially  timer 
registers because the results of experiments affecting timer 
registers are not always fully deterministic. The monitoring 
and  fault  injection  setup  remains  the  same  as  for  the  bus 
topology. In this campaign of experiments target locations 
were TTP/C registers and the instruction memory, as SOS 
failures  (in  the  bus  system)  were  observed  during  the 
execution of experiments in these locations.  
Target unit 
Experiments 
Error propagations 
SOS 
TTP/C-C1 
HW Registers 
34000 
Instruction 
Memory 
507744
0 
0 
2 
0 
Table 3: SWIFI experiment results with star 
topology 
No  SOS  failure  was  observed  during  the  execution  of 
SWIFI  experiments  with  the  star  topology.  However,  in 
this  set  of  experiments  two  similar  cases  of  error 
propagation  were  observed  during  the  execution  of  the 
experiments  with 
instruction  memory 
(Table 3). Since the fault injection time, type, and location 
are  known,  we  were  able  to reproduce  the  experiment.  A 
detailed analysis by reviewing TTP/C code has shown that 
there  was  an  error  in  the  specification  of  the  TTP/C 
protocol acknowledgment algorithm.  
the  TTP/C-C1 
6 
TTA Star Topology Validation   
6.2  A Note on the Design of the TTP/C Protocol 
Acknowledgment Algorithm 
A TTA cluster based on the star topology was validated 
with the heavy-ion and SWIFI experiments. In analogy to 
the experimental setup with the bus topology, the hardware 
setup consists of 4 regular TTP nodes and two star nodes. 
Acknowledgment  of  the  receipt  of  a  frame  by  the 
successor of the sender is performed implicitly through the 
membership  service.  During  a  sending  slot  a  node  sends 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 06:59:21 UTC from IEEE Xplore.  Restrictions apply. 
two  frames,  one  on  each  replicated  channel.  Transmitted 
messages  are  protected  by  a  CRC  checksum  calculated 
over  the  user  data  to  be  sent  concatenated  with  local  C-
State  data  of  the  sender  node.  The  C-State  comprises  the 
local  view  of  global 
time,  MEDL  position  (slot), 
application  mode  and  the  membership  vector.  At  receiver 
nodes,  the  CRC  is  computed  over  the  received  message 
data  and  the  local  C-State  of  the  receiver  node  (including 
membership  vector). If  the CRC check  succeeds on either 
channel, the receiver considers the sender to be active. For 
the  following,  let  A  be  the  sender  node  and  B  be  the 
successor of A. 
When node A receives the frames of B it will calculate 
two CRC checksums for each frame: one checksum, say i,
assuming  that  B  has  A  contained  in  its  local  membership 
(thus indicating that B correctly received at least one of the 
frames sent by A); another checksum, say ii, assuming that 
B does not have A contained in its membership. If the first 
CRC check succeeds, then the previous transmission of  A 
is  acknowledged.  If  check ii  succeeds,  then  B  did  not 
receive any correct frame from A either because A suffered 
a  transmission  fault  or  B  suffered  a  reception  fault.  To 
clarify, A will wait for another node to either acknowledge 
the  transmission  of  A  (thus  indicating  that  B  suffered  a 
reception  fault)  or  to  confirm  the  view  of  B  (thus 
indicating that A in fact suffered a transmission fault). 
However,  if  node  B  becomes  faulty  and  sends  frames 
with different content in redundant channels, such that the 
frame  sent  in  one  channel  acknowledges  the  transmission 
of node A (membership of A is set – check i) and the frame 
sent  in  the  other  channel  does  not  acknowledge  node  A 
(membership of A is not set – check ii), node A terminates 
its  operation  by  raising  an  error  interrupt [10].  Two  such 
scenarios  were  observed  during  the  execution  of  SWIFI 
experiments with the instruction memory (Table 3). In the 
first  case  a  frame  sent  from  node  B  in  channel  0 
acknowledged node A, and the frame sent in channel 1 did 
not acknowledge node A. In the second scenario there was 
a reverse order, a frame in channel 0 did not acknowledged 
node A,  while the  frame in channel 1 acknowledged node 