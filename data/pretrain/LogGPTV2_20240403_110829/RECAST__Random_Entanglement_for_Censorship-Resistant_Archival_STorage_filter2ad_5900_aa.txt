title:RECAST: Random Entanglement for Censorship-Resistant Archival STorage
author:Roberta Barbi and
Dorian Burihabwa and
Pascal Felber and
Hugues Mercier and
Valerio Schiavoni
2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
RECAST: Random Entanglement for
Censorship-resistant Archival STorage
Roberta Barbi, Dorian Burihabwa, Pascal Felber, Hugues Mercier, Valerio Schiavoni
Computer Science Department
University of Neuchâtel
Neuchâtel, Switzerland
PI:EMAIL
Abstract—Users entrust an increasing amount of data to online
cloud systems for archival purposes. Existing storage systems
designed to preserve user data unaltered for decades do not,
however, provide strong security guarantees—at least at a reason-
able cost. This paper introduces RECAST, an anti-censorship data
archival system based on random data entanglement. Documents
are mixed together using an entanglement scheme that exploits
erasure codes for secure and tamper-proof long-term archival.
Data is intertwined in such a way that it becomes virtually
impossible to delete a speciﬁc document that has been stored
long enough in the system, without also erasing a substantial
fraction of the whole archive, which requires a very powerful
adversary and openly exposes the attack. We validate RECAST’s
entanglement approach via simulations and we present and
evaluate a full-ﬂedged prototype deployed in a local cluster. In
one of our settings, we show that RECAST, conﬁgured with the
same storage overhead as triple replication, can withstand 10%
of storage node failures without any data loss. Furthermore, we
estimate that the effort required from a powerful censor to delete
a speciﬁc target document is two orders of magnitude larger than
for triple replication.
Index Terms—storage, anti-censorship, erasure-coding, entan-
glement
I. INTRODUCTION
Users entrust an increasing number of documents to on-
line cloud systems for long-term archival purposes. When
archiving some content, users wish for their content to remain
available and readily accessible at any time. Hence, an archival
system must be highly durable. There are many threats to
durability, and the longer the lifetime of some content, the
worse it gets.
Broadly speaking, one can distinguish between passive
threats (e.g., hardware failures) and active threats (e.g., a
censor wishing to delete a speciﬁc document). A common
countermeasure to mitigate passive threats is redundancy:
extra information is stored in the system, with the goal of
tolerating node or disk failures. On the other hand, effectively
defending against active attacks still presents open challenges.
Various solutions have been proposed, none of which is fully
satisfactory. For example, security by obscurity [1, 2] encrypts
content before archival so that the attacker cannot distinguish
the data to censor, but this severely limits the operation that
can be performed on data and the way it can be accessed or
shared. Data entanglement [3, 4] attempts to weave together
popular and unpopular data so that an attacker is forced to do
collateral damage when censoring its target, but in a way that
is unﬁt for deployment in practical systems.
We introduce RECAST, an anti-censorship data archival sys-
tem based on a random data entanglement strategy proposed
in [5] that provides strong guarantees while being readily
applicable to real systems. RECAST’s design and entanglement
principles are based around the following intuition: by entan-
gling pieces of data with one another, we enable potentially
unpopular and rarely accessed content to beneﬁt from the
protection offered to other data in the system. Second, the
asymmetry of the construction makes the system easy to repair
and hard to corrupt. While the randomness component of
RECAST’s entanglement makes it NP-hard to compute the
minimal set of documents to be deleted to censor a target [5],
error-correcting codes allow to repair the system recursively
without increasing the storage overhead as long as the damage
done by the attacker is recoverable.
To assess the security of RECAST, we assume a powerful
adversary model where the censor has access to the meta-
data and thus knows how documents are processed, split,
and distributed over the storage nodes. To further protect
the system against a powerful attacker targeting metadata,
RECAST includes an emergency disaster recovery mechanism
that enables the system to rebuild metadata from the data itself.
We measure the protection by collateral damage units,
that is, the number of additional documents to be deleted
by a censor when targeting a speciﬁc document. In that
respect, we design RECAST so as to offer strong long-term
as well as fast short-term protection. We ﬁrst build upon
uniform data entanglement [5], which offers very strong long-
term protection but leaves recently archived documents poorly
protected. To address this limitation, we rely on normal data
entanglement and temporary replication that provide fast short-
term protection, but do not spread entanglement adequately
across the archive. To get the best of both worlds, we introduce
a hybrid approach, nu-entanglement, which exploits the strong
long-term protection of uniform entanglement and the fast
short-term protection of normal entanglement and temporary
replication.
The rest of the paper is organized as follows. We sum-
marize our design goals in Section II. Section III surveys
similarities and differences with state-of-the-art censorship-
resistant archival systems. In Section IV we brieﬂy describe
2158-3927/18/$31.00 ©2018 IEEE
DOI 10.1109/DSN.2018.00029
171
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:23:09 UTC from IEEE Xplore.  Restrictions apply. 
entanglement and the STEP-archival strategy [5]. In Section V
we propose a new practical technique to data entanglement,
called nu-entanglement, which offers fast short-term and
strong long-term protection for all
the documents in the
archive. We discuss the design and implementation details of
the RECAST prototype in Sections VI and VII and evaluate
both security and performance in Section VIII. We conclude
with a discussion of extensions and future work in Section IX.
II. DESIGN GOAL
In this work, we aim at designing a long-term censorship-
resistant system ensuring content integrity and durability. We
understand durability as the ability to eventually retrieve any
of the archived documents.
While high availability and conﬁdentiality of data are desir-
able features of any storage solution, durability is paramount
to long-term archival systems. Indeed, maintaining high avail-
ability may get expensive over time for documents that are
infrequently accessed. Moreover, maintaining data conﬁden-
tiality and managing the associated encryption keys over a
long period of time (e.g. decades) unnecessarily exposes the
system as a central point of failure. With time, encryption
algorithms are broken and keys once considered large enough
prove to be too short. Therefore conﬁdentiality is best left
deferred to the client’s discretion. In contrast, the ability to
retrieve documents for audit purposes or disaster recovery at
a conﬁgurable cost answers a more practical need, especially
in a context where independent providers operating as storage
backends may become unreliable over time or worse, may
attempt to censor, tamper or delete user content.
To address this problem, RECAST allows to store and
retrieve documents ensuring their durability by establishing
random document interdependency links, which enable recur-
sive reconstruction of data beyond the local capability of the
underlying erasure code. The tradeoff is that documents cannot
be updated nor deleted from the archive. A ﬁle update must
consist in a new ﬁle upload, and we do not offer ﬁle removal as
enabling this operation for a user would enable it for the censor
as well. This means that a system administrator compelled by
law to remove content [6] must work as hard as an attacker
who wishes to censor a ﬁle without causing collateral damage,
i.e., recode the entire system starting from the ﬁle to delete. For
completeness, we investigate the (huge) cost of this operation
in our evaluation (see Section VIII, document removal micro-
benchmark).
III. RELATED WORK
The problem of anti-censorship for digital data has been
ﬁrst explored in [7] and subsequently extensively studied in
e.g. [3, 8, 9, 1, 4, 2]. We can broadly distinguish between three
main approaches: (i) replication to protect against a censor
compromising a small number of servers [7], (ii) anonymity
of the user to hide his identity and/or of the content to hide its
location [1, 2], (iii) entanglement to prevent an attacker from
)
t
e
g
t
u
p
(
/
e
t
a
d
p
u
e
t
e
l
e
d
r
i
a
p
e
r
d
a
o
l
n
w
o
d
d
a
o
l
p
u
s
u
o
m
y
n
o
n
A
s
u
o
m
y
n
o
n
A
y
t
i
l
i
b
a
i
n
e
d
t
n
a
r
e
l
o
t
t
l
u
a
F
e
c
r
u
o
s
r
o
f
r
o
f
t
r
o
p
p
u
S
r
e
v
r
e
S
t
r
o
p
p
u
S
g
n
i
h
c
a
C
I
P
e
v
A
i
s
T
r
n
u
e
S
e
c
p
E
p
e
y
O
R
R
T
(iii)      
   
(i)      
   
(ii)      
   
(i)      [12]    
(i)      [14]    
(i)      
   
(ii)      [16]    
(i)      
   
•    
(iii) •
   
(iii)      [17]    
TABLE I
DAGSTER [3]
DEEPSTORE [10]
FREEHAVEN [2]
FREENET [8, 11]
OCEANSTORE [13]
POTSHARDS [15]
PUBLIUS [1]
SAFESTORE [9]
TANGLER [4]
RECAST
CENSORSHIP-RESISTANT SYSTEMS. ALL PROVIDE TAMPER-EVIDENCE
FEATURES. •=MISSING DETAILS.
deleting a single target document without causing collateral
damange [3, 4].
To prevent censorship a system must detect that data has
been compromised and be able to repair it if needed. While
tamper detection is a basic feature offered by all censorship-
resistant systems, data reconstruction has received much less
attention: it is either not supported by the system [3] or im-
plemented trivially by fetching a fresh replica of the corrupted
data [8, 1, 4], assuming one exists. On the contrary, RECAST
offers a powerful recursive data reconstruction method, ex-
plained in Section IV.
In the remainder of this section, we survey the systems
that directly offer storage-based anti-censorship properties,
synthetically presented in Table I.
DAGSTER [3]
is a censorship-resistant publishing sys-
tem. It uses an anonymous channel between data publish-
ers/consumers and the servers. For each b-bits block of the
original document, it stores the block encrypted and XORed
with c old blocks from the pool of archived blocks. Such
newly created block together with the c old blocks form a
codeword. The original block can be locally retrieved (from
the codeword) only if all blocks of the codeword are available.
Similar to RECAST, the size b of blocks and the number of en-
tangled blocks c can be conﬁgured but RECAST offers a much
wider choice for coding parameters, thus enabling greater fault
tolerance. Encryption guarantees server deniability only as the
encryption keys are stored in clear in the Dagster resource
locator.
Similarly, TANGLER [4] allows users to publish a set of
documents anonymously. It uses a naming convention and
a public/private key pair that ensure that only the owner
can update his own data. Each document block is entangled
with exactly 2 old blocks β1, β2 using (3,4)-Shamir secret
sharing [18]. The two parity blocks in output p1, p2 are then
stored in the system. The owner distributes p1 and p2 (as
well as the old blocks β1 and β2 used for entanglement), thus
replicating other documents. Any three of these blocks can be
172
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:23:09 UTC from IEEE Xplore.  Restrictions apply. 
used to reconstruct the original document. In contrast, RECAST
provides a more ﬂexible scheme where the number of blocks
required to retrieve a document depends on the conﬁguration
of the entanglement code in use.
FREENET [8, 11] is an anonymizing and censorship-resistant
distributed storage system. To guarantee ﬁle anonymity, nodes
know only their neighbors in the chain of queries, ignoring
their speciﬁc role (producer/consumer of the ﬁle). Freenet
lacks permanent storage guarantees: the least recently used
ﬁles are deleted from a node’s datastore when the arrival of
a new ﬁle causes the datastore to exceed the designated size,
which is conﬁgurable by the Freenet node operator. RECAST
on the other hand is designed to store documents indeﬁnitely,
making it prohibitively difﬁcult to delete a single document.
Freenet places multiple copies of the same document across
the nodes overlay, according to their popularity. A censor
must target all those copies to permanently delete a document.
RECAST makes it very hard for a censor to delete a single
document without affecting a large portion of the archive.
FREEHAVEN [2] is an anonymous publishing system en-
abling users to associate an expiration time to documents,