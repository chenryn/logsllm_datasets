bearer for all voice data helps to distinguish the different
packet streams, packets can still get lost or reordered on
the path between the attacker’s UE and the radio layer. For
example, the ﬁrst RTP packet sent by the adversary towards
the victim is not necessarily also the ﬁrst packet received at
the radio layer. We analyze the mapping between plaintexts
and ciphertexts in Section 4.
3.4.4 Complete Decryption
Each frame is associated with a count and encrypted with an
individual keystream that we extract during the keystream
computation. As the same count generates the same
keystream, the count synchronizes the keystreams with en-
crypted frames of the target call. XOR-ing the keystreams
with the corresponding encrypted frame decrypts the target
call. Figure 6 depicts the synchronization between those
two vectors and possible challenges. In particular, the call
duration and comfort noise challenge a complete decryption.
Call Duration. All three VoLTE codecs use a ﬁxed sampling
rate for sending packets to the calling partner; this applies to
the keystream and target call in uplink and downlink direction.
That said, there are no options to ﬁt more keystream data into
the adversary’s subsequent call, as both calls produce the
same packet rates. As we aim to decrypt the complete call,
the keystream call must be as long as the target call to provide
a sufﬁcient number of packets (Figure 6), as otherwise we
can only decrypt a part of the conversation.
Comfort Noise. Comfort noise is a mechanism of the VoLTE
codec that reduces the bit rate of the transmission. When-
ever voice inactivity is detected, the codec generates noise
following a speciﬁc seed that receives a periodical update. In
contrast to standard voice packets, comfort noise encoding
uses a fraction of bits and saves bandwidth in comparison
to “real silence”. For example, the AMR-WB codec encodes
comfort noise packets with 40 bit to 477 bit.
When the attacker sends or receives comfort noise, these
packets limit the amount of information that can be put into
the packet. This can be a problem if the corresponding target
packet is not a comfort-noise packet. One workaround is to
create a keystream call with similar voice activity, resembling
the standard and comfort noise pattern of the target call.
4 Experiments
As outlined in Section 3, a series of different network and pro-
tocol characteristics inﬂuences how packets are transmitted
and, eventually, the way of decrypting the recorded target call.
Despite the general concept for exploiting the attack vectors,
a better understanding of these inﬂuencing factors is crucial to
provide an attack concept that works on paper and under real-
world conditions. Therefore, we conduct several preliminary
experiments that provide insights into all relevant inﬂuencing
factors in a commercial network. Based on the results of these
preliminary experiments, we then conduct REVOLTE in a
real-world setup and demonstrate its feasibility.
4.1 Preliminary Experiments
Within our preliminary experiments, we ﬁrst analyze if and
how eNodeBs implement the key bearer identity assignment.
We then analyze the radio-layer conﬁguration, including the
use of robust header compression. In a third step, we take a
closer look at further inﬂuencing factors that affect the repre-
sentation of information in packets, including the codecs of
VoLTE, mapping mechanisms, and media encryption.
In our preliminary experiments, we do not focus on the
VoLTE implementation details of the different phones (i.e.,
basebands), as they are not critical for the success of the
attack. According to the speciﬁcation, the eNodeB is re-
sponsible for selecting input parameters that are used for the
encryption, e. g., bearer identity, or sending the phone to idle
mode. The phone must follow this setup, as otherwise the
inter-operability is not given and a phone call cannot be estab-
lished. Consequently, we ﬁrst focus on network and eNodeB
conﬁgurations.
4.1.1 Radio Layer Conﬁguration
Among other parameters, the selected bearer identity and the
radio-layer conﬁguration inﬂuence the data, which we need
to know to decode the transmitted information successfully.
Furthermore, it deﬁnes the use of Robust Header Compres-
sion (ROHC). To test this, we analyzed the radio-layer con-
ﬁgurations of three providers in Europe using commercial
Android phones with VoLTE support. In our experiments,
we conduct multiple phone calls, debug the connection with
SCAT [24, 45], and manually inspect the recorded traces.
Bearer ID Reuse. One central requirement for the RE-
VOLTE attack is the reuse of the same bearer identity within
one radio connection. We test eNodeBs on the key reuse and
ﬁnd two providers vulnerable (cf. Table 2), i. e., the eNodeBs
of providers P01 and P03 reuse the same bearer identity for
two subsequent calls, which makes them vulnerable to the
REVOLTE attack. However, the eNodeB of provider P02 in-
crements the bearer identity and renews the key when it comes
80    29th USENIX Security Symposium
USENIX Association
Call DurationKeystreamCiphertext Target Call1324132456Comfort NoiseTable 2: Radio Layer Conﬁguration of dedicated VoLTE
bearer (DRB3 for P01 and P03).
P01
yes
UM
5 bits
7 bits
1 & 2
Provider
Bearer ID Reuse
RLC Mode
RLC Seq Len (ul/dl)
PDCP Seq Len
ROHC Proﬁle
RRC Idle time (sec)
P02
no
UM
10 bits
12 bits
1 & 2
10
P03
yes
UM
10 bits
12 bits
1 & 2
10
10
Table 3: Offset (in packets) between sent and received data
for 8 subsequent calls and data in the dedicated bearer (DRB3
for P01 and P02)
From/To
P01
P02
P03
P01
0
0
16-23
P02 P03 DRB3 Data
0
RTP, RTCP
0
0
RTP
RTP
0
0
0
close to a bearer identity wrap around, which implements the
correct behavior.
Conﬁguration. The information we are looking for is part of
the RRC reconﬁguration message, which is sent for the estab-
lishment of the dedicated voice bearer. Our results show that
all tested providers use the unacknowledged RLC2 (cf. Ta-
ble 2). The RLC inﬂuences parameters of the keystream
generation, e. g., provider P01 uses smaller sequence num-
bers than providers P02 and P03, which affects the count
calculation of the encryption algorithm. Furthermore, all
three providers use an RRC inactivity timer of 10 sec, which
means that the keystream call must arrive within 10 sec after
the target call.
ROHC. Besides the RLC, we ﬁnd that all providers deploy
ROHC in proﬁles 1 (RTP/UDP/IP) and 2 (UDP/IP). This is a
setup in which only the payload of RTP and RTCP packets is
transmitted with a smaller ROHC header. Consequently, we
need to take this header compression into account when com-
puting the keystream. Due to the compression, the plaintext
differs from the original plaintext sent by the attacker. How-
ever, we can utilize the RTP payload (proﬁle 1) or the RTCP
packet (proﬁle 2) to reconstruct the keystream and not use the
entire plaintext, namely the IP/UDP/RTP(RTCP) packet.
4.1.2 Transmission Characteristics
One critical aspect of REVOLTE is the process of deriving the
correct keystream from the second call (i.e., the keystream call
performed by the adversary). The VoLTE codecs, the offset
between sent and received data, additional media encryption,
and the data send in DRB3 are factors that can prevent an adver-
sary from computing the correct keystream. In our real-world
experiments, we use phones equipped with SIM cards from
different providers and let them call each other for 8 times.
Within these different combinations of providers, we automat-
ically answer the incoming calls with delays in a range of 1 s
to 8 s to ﬁnd out possible offsets between the packets sent by
the attacker and packets received by the victim. For all calls,
we take a look at the codecs and possible transcoding, and
2RLC is a layer-two protocol above the MAC and below the PDCP layer;
it deﬁnes the transmission mode for upper-layer protocol data units (PDU)
(acknowledged (AM), unacknowledged (UM), transparent (TM)).
check the ordering of sent and received RTP/RTCP data. In
particular, we have manually inspected the traces recorded
with SCAT, which contain the SIP and RTP/RTCP streams.
Offset and Dedicated Bearer Data. Table 3 shows the offset
between the sent and received data for different provider con-
ﬁgurations. The only combination of providers that requires
further coordination by the adversary is for calls between
providers 3 and 1, where initial RTP packets are lost during
the transmission. For our increasing answering delay, we
measure offsets ranging from 16 to 23 packets without any
correlation to the increasing answering time. While an at-
tacker can statistically evaluate the packet offset, she can use
one of the other providers with a ﬁxed offset of 0 packets. Fur-
thermore, we ﬁnd that only the ﬁrst provider includes RTCP
data in the dedicated VoLTE bearer DRB3. All other providers
send the RTCP packets within DRB2. If the attacker computes
a keystream for provider 1, she needs to consider RTP and
RTCP packets. In the case of provider 2 and 3, she only needs
to consider RTP packets.
Codecs and Media Encryption. The characteristics of the
transmission codec inﬂuence the representation of informa-
tion in packets, and using different codecs also leads to vary-
ing transmission characteristics that the adversary needs to
take into account. We ﬁnd only one single codec (AMR-
WB) in our measurements where transcoding is not enabled.
Furthermore, an enabled media encryption adds a layer of se-
curity that can destroy all information required for REVOLTE,
which means the attack would not be feasible anymore. How-
ever, we found that none of the tested providers enables media
encryption in practice.
4.2 Real-World REVOLTE
Based on the insights of our preliminary experiments, we
verify the feasibility of REVOLTE in two real-world commer-
cial networks (P01 and P03). In the following, we document
the experimental setup and the steps taken to conduct the
end-to-end attack.
4.2.1 Experimental Setup
Our experimental setup consists of three UEs, a laptop run-
ning Xubuntu 18.04 controlling the downlink sniffer and the
attack orchestration, and an Ettus USRP B210 (cf. Table 4).
USENIX Association
29th USENIX Security Symposium    81
Table 4: Overview of phone conﬁguration
Phone
OnePlus 6T
Role
Calling
Partner
Attacker Xiaomi Pocophone F1
Victim
Sony Xperia X
OS v. Provider
9.0
9.0
8.0
P01
P03
P03
In a real-world scenario, the attacker controls only one UE
and the downlink sniffer. The victim possesses one UE, and
the calling partner controls the other UE. The adversary wants
to eavesdrop on the call between the victim and the calling
partner.
UEs. We use three Android phones with a rooted OS for
automation and analysis purposes, but without effect on the
attack. All phones are VoLTE capable with a Qualcomm base-
band, which allows us to use SCAT [35, 45] for reading in-
formation from the diagnostics interface. In particular, SCAT
enables us to capture the plaintext packets of the keystream
call. The UEs of the adversary and the victim equip SIM
cards of the same provider to prevent any RTP/RTCP offsets.
To emulate the audio activity of a phone call, we play voice
samples of the LibreSpeech Corpus [34] through the speakers
of the laptop, which are nearby the phones’ microphones.
Downlink Sniffer. We are mainly interested in the
RTP/RTCP plaintexts of the adversary’s keystream call,
which allows us to reconstruct the keystream used in the
target call; for debugging and evaluation purposes, we also
record the traces of the calling partner and victim. To this
end, we use a downlink sniffer that records the transmissions
of the target and the keystream call. Besides the USRP as
the hardware component, we use the commercial Airscope
software [3] that uses the software stack of srsLTE [21] and
performs real-time radio decoding for LTE downlink trafﬁc.
Airscope provides us with decoded MAC frames, and we use
the radio-layer conﬁguration of the preliminary experiments
for correct decoding up to the PDCP layer. For a timely ex-
ecution of the keystream call, we implement a live call and
hang-up detection that uses the radio-layer identity Radio
Network Temporary Identiﬁer (RNTI) to distinguish phone
calls in the monitored radio cell.
4.2.2 Experimental Procedure & Results
The procedure to conduct the REVOLTE attack is as follows:
1. Downlink Snifﬁng. We start Airscope to analyze the cell
of provider 3 and capture the downlink trafﬁc.
2. Conducting the Target Call. The orchestration script ini-
tiates a phone call towards the victim’s UE, and the laptop
begins playing the audio sample as soon as the call is an-
swered. This triggers the call detection mechanism, which
results in recording the downlink trafﬁc using Airscope. All
frames of this recording are saved for the later decryption and
ignored for now. After 10 s, the call ends.
3. Conducting the Keystream Call. The termination of the
target call again triggers the call detection script, which in-
structs the adversary’s UE to begin the keystream call. Again,
the victim’s UE answers the call and holds it for 10 s, and
we monitor the downlink trafﬁc. Furthermore, the adversary
saves the RTP/RTCP packets received in the UE.
4. Decrypting the Target Call. In the ﬁnal step of the attack,
we decrypt the target call following the approach depicted in
Figure 3. In the ﬁrst step, we compute the keystream blocks
for each packet of the keystream call. Therefore, we XOR the
payload of the RTP packets with frames recorded during the
keystream call. In the second step, we attempt to decrypt the
keystream call by XOR-ing the computed keystream blocks
with the recorded frames of the target call.
Result. We can decrypt 89 % of the binary representation
of the target call successfully. This includes the voice data
sent in the downlink direction, which directly resembles the
spoken words of the conversation. The main reason for in-
formation loss in the decryption is the fact that we do not
capture all radio ciphertext packets with the downlink sniffer.
In particular, we lose 3 % in the target call, and 8 % in the
keystream call. However, there is no information loss due to
a false mapping between the plaintext and ciphertext. There-
fore, we do not expect that the order of packets changes for
different RLC modes.
Along with the results of our preliminary experiments, the
successful real-world attack of REVOLTE in a commercial
network demonstrates the feasibility of the attack and empha-
sizes that given conﬁgurations do not prevent from the attack.
Consequently, we can fully break the conﬁdentiality aim of
LTE with REVOLTE.
5 LTE and 5G Defenses
To get a better understanding of the underlying problem and
the exploited ﬂaw of our attack, we ﬁrst discuss whether it
is a speciﬁcation or implementation ﬂaw. In particular, we