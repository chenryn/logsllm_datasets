the list of popular videos list obtained from the hulu website. Similarly, the caching 
scheme  is  simulated  by  providing  storage  on  the  proxy  which  holds  the  videos 
requested by viewers, if not already present in the storage. 
We  perform  our  simulation  of  the  caching  scheme  for  cases  where  the  storage 
space  is  unlimited  and  also  the  case  where  there  is  limited  storage  space.  For 
simplicity,  the  storage  space  size  is  defined  by  the  number  of  slots  where  each  slot 
can hold one hulu video. Based on our measurement on the size occupied by HD hulu 
video, it is approximated as each hulu video requires about 100MB of space, which 
corresponds to the size of each slot in our storage. 
In this study, we use hit ratio as the metric to evaluate the proposed prefetching and 
caching  schemes.  Hit  ratio  is  defined  as  a  fraction  of  the  number  of  requests  for  a 
video  that  can  be  served  from  the  prefetching/caching  storage  (called  hit  requests) 
over the total number video requests. 
hit ratio = hit requests/all requests  
A higher hit ratio means we can serve more requests from the prefetching/caching 
storage, resulting in a reduction of bandwidth usage.  
4.2   Performance of Caching without Storage Limit  
We  first  present  the  performance  of  the  caching  scheme  without  any  limit  on  the 
storage  required  to  cache  the  videos.  The  caching  scheme  is  simulated  as  follows: 
Each video requested by the user is downloaded to the local proxy placed on the edge 
of the campus network1. Video requests from clients are directed to the proxy. If the 
video is already cached at the proxy, it will be streamed from here; if not, the request 
is forwarded to the hosting server, and the video is streamed from the server through 
the proxy to the requesting client. Using this scheme a hit ratio of 77.69% is obtained. 
Although this scheme provides a very high hit ratio, the amount of storage required 
increases  significantly  as  the  number  of  video  requests  from  clients  increase.  To 
implement this scheme, 236GB storage would be required, which corresponds to the 
2,363 unique videos present in our trace. Also, the amount of bandwidth required to 
download  all  the  videos  into  the  local  storage  increases  with  the  number  of  unique 
videos. Though 236GB storage seems reasonable, when this approach is applied to a 
bigger access network or a week-long trace, the amount of storage required increases 
considerably.  Thus,  this  scheme  is  not  necessarily  feasible  for  implementation  on  a 
larger network. 
1 For all caching schemes mentioned in this paper we assume so called “write-through” caching 
[9]. In this case, a video that’s not already cached is streamed from the origin server through 
the proxy to the requesting client.  
On the Feasibility of Prefetching and Caching for Online TV Services 
77 
4.3   Performance of Caching With Storage Limit 
Next, we present the evaluation results for a caching scheme that is slightly modified 
from  the  one  presented  in  Section  4.2.  In  comparison  to  the  previous  approach, 
storage on the proxy is now limited. Let N represent the number of videos that can be 
cached in the storage. We evaluate this scheme by varying N from 100 to 2000 which 
corresponds to varying the storage limit from 10GB to 200GB. Figure 2(a) shows the 
resulting hit ratio of such a scheme. Once the storage limit is reached, LRU caching 
scheme is employed to remove the least accessed video. 
The figure shows that the hit ratio increases gradually for small storage spaces till 
N=1000 after which the increase in hit ratio is minimal as we increase the number of 
videos  that  are  cached  and  reaches  the  maximum  hit  ratio  of  77.69%  as  in  case  of 
caching without storage limit. As seen from Figure 2(a), a storage limit of 50GB will 
yield a hit ratio of 67%, while doubling the storage space yields a hit ratio of 73.86%. 
Though the improvement in hit ratio is minimal, the amount of bandwidth savings is 
increased as we increase the storage space.  
For example, the number of videos that need to be streamed2 from the origin server 
to obtain a hit ratio of 67% which corresponds to the storage size of 50GB is 3494, 
whereas this number decreases to 2767 (resulting in a hit ratio of  73.86%) when the 
storage size on the proxy increases to 100GB. Thus, increase in storage space yields 
higher hit ratio and bandwidth savings. Also, there exists a trade-off between the hit 
ratio desired and storage space provided. 
4.4   Performance of Prefetching Popular Videos List 
After  analyzing  the  limited  and  unlimited  caching  scheme,  we  now  evaluate  the 
performance  of  prefetching  the  popular  videos  list  obtained  as  explained  in  
Section  3.2.  Let  P  represent  the  number  of  popular  videos  prefetched.  We  evaluate 
this  scheme  by  varying  P  from  20  to  100  which  corresponds  to  varying  the 
prefetching  storage  from  2GB  to  10GB.  Figure  2(b)  shows  the  hit  ratio  of  such  a 
scheme.  
The figure depicts the variation of hit ratio with the increase in prefetching of most 
popular videos of the week from 20 to 100. It can be observed from the figure that the 
hit ratio increases gradually till P = 60, and then the increase in hit ratio is relatively 
minimal.  The  maximum  hit  ratio  of  44.2%  is  obtained  when  P=100  which 
corresponds  to  storage  space  of  10GB.  Though  the  LRU  caching  scheme  as 
mentioned in section 4.3 yields a hit ratio of 45.53% for the same storage space, the 
important  point  to  be  noted  in  this  evaluation  is  the  fact  that  the  number  of  videos 
downloaded to the prefetch cache is just 100 compared to 5767 videos in case of LRU 
cache.  Thus  the  amount  of  bandwidth  savings  is  very  high  in  prefetching  scheme 
compared to the caching scheme. 
2 The amount of videos downloaded is not proportional to the numbers mentioned in Table 1. 
Videos  are  downloaded  only  when  LRU  scheme  decides  to  remove  a  video  due  to  space 
constraint. 
78 
D.K. Krishnappa et al. 
(a)   Caching Scheme 
(b)   Prefetching Scheme 
Fig. 2. Hit Ratio with varying storage limits 
In addition, our simulation shows that 100% of the popular videos from P = 20 to  
P = 60 list were requested by the clients, whereas it is 95% for P = 80 and P = 100. 
This  shows  that  almost  all  videos  in  the  top-100  popular  videos  list  are  watched  at 
least  once  by  the  clients  in  a  three  day  period  of  our  trace.  Also  the  change  in  the 
popular videos list is minimal over a week period as we consider the popular videos 
of  a  week  in  our  analysis.  Thus,  it  is  feasible  and  advantageous  to  implement  the 
prefetching of popular videos scheme.  
4.5   Combining Caching and Prefetching 
In  the  previous  section,  we  have  shown  that  the  bandwidth  savings  that  can  be 
obtained with the prefetching scheme is high. On the other hand, the videos served by 
the top-100 videos prefetched at the proxy are only 44.2% of the total requests, which 
leaves  us  with  more  than  half  of  the  videos  in  the  trace  left  unattended  by  the 
prefetching  scheme.  Some  of  these  unattended  videos  from  the  prefetching  scheme 
can  be  taken  care  of  by  employing  a  caching  scheme.  Thus,  the  combinination  of  
prefetching  and  caching  schemes  called  prefetch-and-cache  scheme  serves  more 
videos and uses less bandwidth than individual schemes.  
The  simulation  of  the  combination  of  caching  and  prefetching  scheme  is  carried 
out as follows: (i) a storage is maintained on the proxy with a fixed part and a variable 
cache part. The fixed part of the storage holds the prefetched popular videos. (ii) all 
user requests are directed to the proxy. The video requested is searched for both in the 
prefetch  or  cache  part  of  the  storage  (iii)  if  the  video  requested  by  the  user  is  not 
present in the storage, then the request is sent to the hulu server hosting the video. The 
resulting stream from the hulu server is cached in the variable part of the storage. (iv) 
if the variable part of the storage is filled, videos are removed from the variable part 
of the storage using LRU scheme. 
Figure  3  shows  the  hit  ratio  resulting  from  the  prefetch-and-cache  scheme.  The 
combination of two schemes increases the hit ratio by 3-5% for the same amount of 
storage  as  in  the  caching-only  scheme.  For  example,  a  storage  limit  of  20GB  in 
caching-only  scheme  will  hold  about  200  videos  and  yields  a  hit  ratio  of  55.5%  as  
On the Feasibility of Prefetching and Caching for Online TV Services 
79 
seen in Figure 2(a). The same storage limitation in prefetch-and-cache  scheme  with 
100 videos prefetched and 100 videos cached would yield a hit ratio of 59%, which is 
a slight improvement over the caching only scheme. 
The combination is also an improvement over the prefetch-only scheme. As seen, 
the prefetch scheme offers a maximum hit ratio of 44.2% and the other videos cannot 
be  served  by  employing  prefetching  scheme.  By  combining  both  prefetching  and 
caching, all the requests by the clients can be served from the cache with increase in 
hit ratio compared to prefetching only or caching only scheme. Again it is a trade-off 
between  the  storage  available  and  the  hit  ratio  desired,  but  the  advantage  of  this 
combination scheme is that the storage required to obtain the desired hit ratio is less 
than the cache-only scheme.  
Fig. 3. Hit Ratio for combination of prefetching and caching 
The combination of prefetching and caching scheme also improves the bandwidth 
usage  as  compared  to  prefetching-only  and  caching-only  schemes.  Prefetching-only 
scheme provides a maximum hit ratio of 44.2% but bandwidth consumption is very 
less as only 100 videos are downloaded to the cache, whereas a caching-only scheme 
uses  more  bandwidth  by  downloading  5767  videos  to  provide  a  higher  hit  ratio  of 
45.5%  with  storage  space  of  10GB.  The  combination  scheme  with  100  prefetchied 
videos and 100 cached videos will yield a hit ratio of 59% and requires 4439 videos to 
be downloaded where as the caching scheme of 20GB storage which offers a hit ratio 
55.5% requires 4713 videos to be downloaded. The hit ratio and bandwidth savings 
increase  in  the  combination  scheme  with  increase  in  storage  space.  Thus, 
implementing a combined scheme of prefetching and caching works well for serving 
more requests from the local storage and reducing the amount of bandwidth usage in 
the backbone network. 
5   Conclusion 
In  this  paper,  we  present  a  measurement  study  of  hulu  traffic  in  a  large  university 
campus  network.  The  analysis  of  the  measurement  data  reveals  that  77.69%  of  the 
video  requests  for  hulu  content  are  multiple  requests  for  the  same  content.  This  is 
80 
D.K. Krishnappa et al. 
significantly higher than earlier findings on the analysis of YouTube traffic [9] where 
only 25% of the requested videos are requested more than once.  
We  analyze  three  different  schemes,  prefetching-only,  caching-only  and  a 
combination of prefetching and caching, respectively. The advantage of such proxy-
based distribution schemes is the fact that a viewer can access the video content faster 
and,  since  popular  videos  are  prone  to  be  requested  multiple  times,  the  amount  of 
streams  originating  from  the  hulu  server  is  reduced,  resulting  in  a  reduction  of 
backbone  bandwidth  consumption.  Results  from  our  trace-based  simulations  show 
that, in the case of hulu, prefetching popular videos to the proxy is more efficient in 
bandwidth  savings  than  simple  caching.  Prefetching  the  100  most  popular  videos 
yields  a  hit  ratio  of  44.2%  while  a  caching  scheme  that  requires  the  same  storage 
space  results  in  a  hit  ratio  of  45.5%  with  download  requirement  of  5767  videos.  A 
scheme that combines prefetching and caching enhances the hit ratio by an additional 
3 to 5% with less bandwidth consumption. 
To  the  best  of  our  knowledge,  this  is  the  first  measurement-based  study  of  hulu 
traffic  in  a  large  university  campus  network.  Hulu  is  different  than  most  other 
Internet-based services like YouTube and Netflix since it offers a variety of TV shows 
immediately  after  their  broadcast  on  the  traditional  TV  network.  Our  measurement 
and simulation results show that prefetching and a combined prefetching and caching 
approach are well suited for such a VoD service.  
In future work, we plan to execute a long term measurement study to evaluate the 
influence of the weekly popularity of videos by the release schedule of new content 
and if that information can be used to further optimize the prefetching mechanism. 
References 
1.  Hulu, http://www.hulu.com 
2.  Netflix, http://www.netflix.com 
3.  Wikipedia on Hulu, http://en.wikipedia.org/wiki/Hulu 
4.  Endance DAG Network Monitoring Interface, http://www.endance.com 
5.  Liu, W., Chou, C.T., Yang, Z., Du, X.: Popularity-wise Proxy Caching for Interactive Media 
Streaming. In: Proceedings of LCN Conference, Tampa, Florida (2004) 
6.  Sen,  S.,  Rexford,  J.,  Towsley,  D.:  Proxy  Prefix  Caching  for  Multimedia  Streams.  In: 
Proceedings of IEEE INFOCOM (1999) 
7.  Wu, K.-L., Yu, P.S., Wolf, J.L.: Segment-based Proxy Caching of Multimedia Streams. In: 
Proceedings of the 10th International Conference on World Wide Web, pp. 36–44. ACM, 
New York (2001) 
8.  Zink, M., Suh, K., Gu, Y., Kurose, J.: Watch Global, Cache Local: Youtube Network Traffic 
at  a  Campus  Network  –  Measurements  and  Implications.  In:  Proceedings  of  SPIE/ACM 
Conference on Multimedia Computing and Networking (MMCN), Santa Clara (2008) 
9.  Zink, M.: Scalable Video on Demand: Adaptive Internet-based Distribution. John Wiley and 
Sons, Ltd, Chichester (2005)