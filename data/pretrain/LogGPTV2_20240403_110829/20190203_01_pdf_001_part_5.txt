publications.
This setting is done with the ALTER TABLE command as shown by the following:
ALTER TABLE schema.table_name REPLICA IDENTITY FULL
For additional information see the ALTER TABLE SQL command in the PostgreSQL
Core Documentation located at:
https://www.postgresql.org/docs/current/static/sql-altertable.html
For example, for a publication table named edb.dept, use the following ALTER TABLE
command:
ALTER TABLE edb.dept REPLICA IDENTITY FULL;
The REPLICA IDENTITY setting can be displayed by the PSQL utility using the \d+
command:
edb=# \d+ edb.dept
Table "edb.dept"
Column | Type | Modifiers | Storage | Stats target | Description
--------+-----------------------+-----------+----------+--------------+-------------
deptno | numeric(2,0) | not null | main | |
dname | character varying(14) | | extended | |
loc | character varying(13) | | extended | |
Indexes:
"dept_pk" PRIMARY KEY, btree (deptno)
"dept_dname_uq" UNIQUE CONSTRAINT, btree (dname)
Referenced by:
TABLE "emp" CONSTRAINT "emp_ref_dept_fk" FOREIGN KEY (deptno) REFERENCES
dept(deptno)
TABLE "jobhist" CONSTRAINT "jobhist_ref_dept_fk" FOREIGN KEY (deptno) REFERENCES
dept(deptno) ON DELETE SET NULL
Replica Identity: FULL
The REPLICA IDENTITY FULL setting is required on tables in the following databases
of a log-based replication system:
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 41
EDB Postgres Replication Server User’s Guide
 In a single-master replication system, table filters are defined in the master
database. Thus, the publication tables in the master database requiring filter
definitions must be altered to a REPLICA IDENTITY FULL setting, but only if
the publication is not a snapshot-only publication. See Section 2.2.7 for
information on snapshot-only publications.
 In a multi-master replication system, table filters are defined in the master
definition node. Thus, publication tables in the master definition node requiring
filter definitions must be altered to a REPLICA IDENTITY FULL setting.
 In a multi-master replication system, non-MDN nodes should not have their
tables’ REPLICA IDENTITY option set to FULL unless transactions are expected
to be targeted on those non-MDN nodes, and the transactions are to be filtered
when they are replicated to the other master nodes.
The REPLICA IDENTITY FULL setting on a source table ensures that certain types of
transactions on the source table result in the proper updates to the target tables on which
filters have been enabled.
Note: In addition to table filtering requirements, the REPLICA IDENTITY FULL setting
may be required on publication tables for other reasons in xDB Replication Server. See
Section 6.6.1 for additional requirements.
Filtering Restrictions on Data Types
Table filters are not supported on binary data type columns. A binary data type is the
Postgres data type BYTEA. In addition, table filters are not supported on Advanced Server
columns with data types BINARY, VARBINARY, BLOB, LONG RAW, and RAW as these are
alias names for the BYTEA data type.
2.2.12.4 Roadmap for Further Instructions
The specific details on implementing table filtering depend upon whether you are using a
single-master replication system or a multi-master replication system. The following is a
roadmap to the relevant sections for each type of replication system.
For using table filters in a single-master replication system see the following sections:
 Section 5.2.3 for information on defining the initial set of table filters that are to
be available for selective enablement on subscriptions
 Section 5.3.3 for information on enabling available table filters on a newly created
subscription
 Section 7.6.4 for information on adding, removing, or modifying rules comprising
the set of available table filters
 Section 5.5.4 for information on changing which table filters have been enabled
on an existing subscription
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 42
EDB Postgres Replication Server User’s Guide
For using table filters in a multi-master replication system see the following sections:
 Section 6.2.3 for information on defining the initial set of table filters that are to
be available for selective enablement on master nodes
 Section 6.3 for information on enabling available table filters on a newly created
master node
 Section 7.6.4 for information on adding, removing, or modifying rules comprising
the set of available table filters
 Section 6.9 for information on changing which table filters have been enabled on
an existing master node
2.3 xDB Replication Server Components and Architecture
This section describes the components and architecture of xDB Replication Server.
Section 2.3.1 describes the executable programs, files, and databases that comprise xDB
Replication Server. Section 2.3.2 defines the logical components of a replication system
and how they correspond to the programs and databases. Section 2.3.3 illustrates some
examples of replication systems.
2.3.1 Physical Components
xDB Replication Server is not a single, executable program, but rather a set of programs
along with data stores containing configuration information and metadata that work
together to form a replication system.
The following diagram illustrates the components of xDB Replication Server and how
they are used to form a complete, basic, single-master replication system.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 43
EDB Postgres Replication Server User’s Guide
Figure 2-8 - xDB Replication Server - physical view (single-master replication system)
The following diagram illustrates the components of xDB Replication Server and how
they are used to form a complete, basic, multi-master replication system.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 44
EDB Postgres Replication Server User’s Guide
Figure 2-9 - xDB Replication Server - physical view (multi-master replication system)
The minimal configuration of xDB Replication Server for a basic replication system
consists of the following software components:
 Publication server. The program that configures the publication database and
master nodes for replication and performs replication.
 Subscription server. The program that configures the subscription database for
replication and initiates replication. The subscription server is used only in single-
master replication systems.
 xDB Replication Configuration file. Text file containing connection and
authentication information used by the publication server and subscription server
upon startup to connect to a publication database designated as the controller
database. Also used to authenticate registration of the publication server and
subscription server from the user interface when creating a replication system.
 xDB Startup Configuration file. Text file containing installation and
configuration information used for the Java Runtime Environment when the
publication server and subscription server are started.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 45
EDB Postgres Replication Server User’s Guide
The entire replication system is completed with the addition of the following
components:
 User interfaces for configuring and maintaining the replication system
 One or more publication databases for a single-master replication system
 One or more subscription databases for a single-master replication system
 One master definition node for a multi-master replication system
 One or more additional master nodes for a multi-master replication system
The user interface, publication server, subscription server, publication database,
subscription database, and master nodes can all run on the same host or on separate,
networked hosts.
Any number of user interfaces can be used at any time to access any number of
publication servers and subscription servers on the network as long as the network
locations, user names, and passwords of the publication and subscription servers are
known.
Any number of publication and subscription databases can participate in a single-master
replication system.
Any number of master nodes can participate in a multi-master replication system.
The following sections describe each component in more detail.
2.3.1.1 Publication Server
The publication server creates and manages the metadata for publications. When a
publication is created, the publication server creates database objects in the control
schema of the publication database to record metadata about the publication.
Whenever a master node is added to a multi-master replication system, the publication
server creates database objects in the control schema of the master node for recording
metadata. For non-MDN nodes, the publication server also calls EnterpriseDB’s
Migration Toolkit to create the publication table definitions if so chosen at master node
creation time.
Note: See Section 2.3.1.11 for information on the control schema.
The publication server is also responsible for performing a replication. For snapshot
replications, the publication server calls EnterpriseDB’s Migration Toolkit to perform the
snapshot.
For single-master synchronization replications, the publication server uses the Java
Database Connectivity (JDBC) interface to apply changes to the subscription table rows
based on changes that have been recorded in either one of two ways: a) If the publication
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 46
EDB Postgres Replication Server User’s Guide
database is running under Postgres version 9.4 or later and the logical decoding option
has been chosen when creating the publication, changes are obtained from the Postgres
WAL files using a logical replication slot, or b) In all other circumstances, changes are
recorded in metadata tables (called shadow tables) in the publication database by row-
based triggers that fire upon any insert, update, or deletion to the publication table rows.
For multi-master synchronization replications, the publication server performs the same
process as for single-master synchronizations, but does so for each master node pair
combination in the multi-master replication system.
The publication server may run on the same host as the other xDB Replication Server
components, or it may run on a separate, networked host.
2.3.1.2 Subscription Server
Note: The subscription server is required only for single-master replication systems. The
subscription server does not need to be running, nor even installed if only multi-master
replication systems are in use.
The subscription server creates and manages the metadata for subscriptions. When a
subscription is created, the subscription server creates database objects in the control
schema of the publication database to record metadata about the subscription.
When a subscription is created, the subscription server calls EnterpriseDB’s Migration
Toolkit to create the subscription table definitions in the subscription database. The rows
in the subscription tables are not populated until a replication occurs. Rows are populated
by actions of the publication server.
The subscription server is also responsible for initiating a replication as a result of manual
user action through the user interface, or a schedule created for the subscription. The
subscription server initiates a call to the publication server that manages the associated
publication. The publication server then performs the actual replication.
The subscription server may run on the same host as the other xDB Replication Server
components, or it may run on a separate, networked host.
When the subscription server is started, it uses the information in the xDB Replication
Configuration file found on its host to connect to the designated controller database.
2.3.1.3 xDB Replication Configuration File
The xDB Replication Configuration file contains the connection and authentication
information used by any publication server or subscription server running on the host
containing the file.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 47
EDB Postgres Replication Server User’s Guide
Specifically, the xDB Replication Configuration file is accessed in the following
circumstances:
 When a publication server or subscription server is started on the host.
 When a publication server or subscription server is registered during the process
of creating a replication system. Registration of a publication server or
subscription server is done using the xDB Replication Console or the xDB
Replication Server Command Line Interface.
The following table contains a brief description of the parameters in the xDB Replication
Configuration file.
Table 2-2 - xDB Replication Configuration File
Parameter Description
xDB administrator user name (the admin user name) for
admin_user registering a publication server or a subscription server on this
host containing the xDB Replication Configuration file
admin_password Encrypted password of the admin user
database Database name of the controller database
user Database user name of the controller database
password Encrypted password of the controller database user
Port number on which the database server of the controller
port
database listens for requests
IP address of the host running the database server of the
host
controller database
Database type of the controller database such as oracle,
type
enterprisedb, etc.
The xDB Replication Server product creates the content of this file as follows:
 The xDB Replication Configuration file and some of its initial content are created
when you install a publication server or subscription server on a host during the
xDB Replication Server installation process.
 Parameters admin_user and admin_password are determined during the xDB
Replication Server installation process. See Chapter 3 for how the content of these
parameters are determined.
 Parameters database, user, password, port, host, and type are set with the
connection and authentication information of the first publication database
definition you create with the xDB Replication Console or xDB Replication
Server CLI. This database is designated as the controller database. See Section
2.3.1.12 for information on the controller database. See Section 5.2.2 for creating
a publication database definition for a single-master replication system. See
Section 6.2.2 for creating the publication database definition for a multi-master
replication system.
The following is an example of the content of an xDB Replication Configuration file:
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 48
EDB Postgres Replication Server User’s Guide
#xDB Replication Server Configuration Properties
#Tue May 26 13:45:37 GMT-05:00 2015
port=1521
admin_password=ygJ9AxoJEX854elcVIJPTw\=\=
user=pubuser
admin_user=admin
type=oracle
password=ygJ9AxoJEX854elcVIJPTw\=\=
database=xe
host=192.168.2.23
Note: The passwords for the admin user name and the controller database user name are
encrypted. Should you change either of these passwords, you must modify the
corresponding password parameters in the xDB Replication Configuration file to contain
the encrypted form of the new password. See Section 10.4.2 for directions on how to
generate the encrypted form of a password.
See Section 3.5 for the file system location of the xDB Replication Configuration file.
2.3.1.4 xDB Startup Configuration File
The xDB Startup Configuration file contains installation and configuration information
primarily used by the Java Runtime Environment (JRE) when any publication server or
subscription server is started up on the host containing the file.
The content of the file is created by the xDB Replication Server installer when you install
xDB Replication Server.
The following is an example of the content of an xDB Startup Configuration file:
#!/bin/sh
JAVA_EXECUTABLE_PATH="/usr/bin/java"
JAVA_MINIMUM_VERSION=1.7
JAVA_BITNESS_REQUIRED=64
JAVA_HEAP_SIZE="-Xms256m -Xmx1536m"
PUBPORT=9051
SUBPORT=9052
The following table contains a brief description of the parameters in the xDB Startup
Configuration file.
Table 2-3 - xDB Startup Configuration File
Parameter Description
Directory path to the Java runtime program used to start and
JAVA_EXECUTABLE_PATH
run the publication and subscription servers
The earliest JRE version that can be used by the publication
JAVA_MINIMUM_VERSION
and subscription servers
The bitness of the Java virtual machine required by the
JAVA_BITNESS_REQUIRED
installed publication and subscription servers
JAVA_HEAP_SIZE In -Xmsnnnm nnn specifies the minimum Java heap size in
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 49
EDB Postgres Replication Server User’s Guide
Parameter Description
megabytes. In -Xmxnnnm nnn specifies the maximum Java
heap size in megabytes
Port number on which the publication server listens for
PUBPORT
requests
Port number on which the subscription server listens for
SUBPORT
requests
The JAVA_EXECUTABLE_PATH parameter specifies the location of the Java runtime
program as identified by the xDB Replication Server installer during the installation
process. The setting of this parameter may be subsequently changed to a different JRE
installation if so desired.
The JAVA_MINIMUM_VERSION parameter specifies the earliest version of the Java
Runtime Environment that can be used with xDB Replication Server. This setting must
not be changed.
The JAVA_BITNESS_REQUIRED parameter must not be altered. If the installed value is
modified, or if it does not match the bitness of the Java virtual machine as identified by
JAVA_EXECUTABLE_PATH, a number of errors may occur, which include failure of the
publication and subscription servers to start and registration failure of the xDB
Replication Server product.
See Section 5.1.1 for information on setting the JAVA_HEAP_SIZE parameter.
See Section 5.1.6.1 for information on the PUBPORT and SUBPORT parameters.
After making any modifications to the xDB Startup Configuration file, the publication
server and subscription server must be restarted.
See Section 3.5 for the file system location of the xDB Startup Configuration file.
2.3.1.5 xDB Replication Console
The xDB Replication Console is the graphical user interface program you can use to
create and control all aspects of a replication system.
Through a single xDB Replication Console, you can configure and operate a replication
system running on the same host on which the xDB Replication Console is installed, or
you can configure and operate replication systems where the xDB Replication Server
components are distributed on different hosts in a networked environment.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 50
EDB Postgres Replication Server User’s Guide
Figure 2-10 - xDB Replication Consoles accessing multiple hosts
In the preceding figure, there are two Postgres installations running on two networked
hosts, each with its own xDB Replication Server installation. Each host is running a
publication server and a subscription server.
The xDB Replication Console on each host can access and manage the replication