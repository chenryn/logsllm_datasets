261.69 Tx Sector
270.20
Pitch
RSSI
RSSI
SQI
Azimuth
RSSI
Azimuth
1
2
3
4
5
6
7
Last feature
Throughput
MCS
MCS
3.4 Applications
To further understand the throughput predictability using real applications,
which may not always be sending backlogged traﬃc, we collected throughput
traces for 2 applications: VR and video streaming. Both applications stream
video frames encoded with H.264 compression over TCP. For both traces, the
phone moved along all 3 dimensions at various speeds as described in Sect. 3.3.
In the case of VR, we pre-encoded a 60 FPS Viking Village scene at 8K and
we wrote a client app that requests frames from a local server. Assuming that
the VR application wants to make quality adaptation decisions on a per-frame
basis, it would require a throughput prediction every 16 ms at a frame rate of
60 FPS. We considered 8K VR, because 4K VR does not demand throughput
more than 300 Mbps, which can be supported even by legacy WiFi [24,30]. In
the case of streaming, we used a 4K, 50 FPS video from the Derf’s collection
under Xiph [2], encoded at a bitrate of 1.3 Gbps, and used the same app to
request video chunks of 2 s from the local server, in order to emulate ABR video
streaming applications, which generally download chunks of 2 s and would need
throughput predictions at that timescale.
524
S. Aggarwal et al.
The performance of the three models is shown in Table 4. For VR, in terms
of the ARE95 and the PARE10 metrics, the performance is similar to what was
shown in Sect. 3.3 at a 20 ms timescale, while the RMSE is ∼156–164 Mbps. We
conclude that 60 FPS VR applications can beneﬁt from throughput prediction
only if they use it conservatively and can tolerate a certain margin of error.
Table 4. Model performance for real applications
VR
BP8
RNN8 RNN20 BP8
ABR
RNN8 RNN20
RMSE 156.78
163.65
163.66
114.54
115.77
113.87
ARE95 29.08% 28.82% 27.92% 18.15% 17.72% 17.58%
PARE10 72.79% 70.52% 69.24% 86.93% 86.10% 87.03%
For ABR video streaming, as expected, the models perform better due to
the much coarser timescale. With ∼86–87% of the errors being within 10% of
the actual throughput and having a prediction error of ∼17–18% at the 95th
percentile, ABR video streaming applications can use these predictions with
much more conﬁdence to ensure a high user QoE.
3.5 Prediction Time (NN Inference Delay)
We wrote an Android application that uses the jpmml-evaluator [10] and tensor-
ﬂow [14] modules to make predictions for BP8 and RNN(s), respectively, and ran
it on the phone’s GPU to measure the inference delay and memory consumption
for each model. We ran each model 100 times and the averaged inference delay
and memory consumption results are shown in Table 5. We observe that BP8
runs in less than 0.5 ms and thus can be used by both VR and streaming appli-
cations. In contrast, the RNN models run in 2–4 ms and can only be used for
streaming applications. The memory consumption is negligible for all 3 models.
Table 5. Inference time and memory consumption of the 3 NN models
Model
Inference delay (ms) Memory consumption (MB)
BP8
RNN8
RNN20
0.41
1.94
4.02
3.71
0.20
0.29
4 Related Work
Throughput Prediction Over the Internet. Traditional ABR algorithms
were classiﬁed into two categories: rate-based [21,25,31] and buﬀer-based
Throughput Prediction on 60 GHz Mobile Devices
525
[19,39]. Recently, control-theoretic, data-driven approaches, using Model Pre-
dictive Control (MPC), e.g., [15,41,47], became the state-of-the-art approach to
ABR, as they combine the use of both throughput prediction and playback buﬀer
occupancy. More recent studies [29,46] have shown that DNN-based algorithms
outperform all previous approaches. Our work diﬀers from [29,46] in two key
ways. First, we focus on 60 GHz throughput prediction, thus making predictions
at the Gbps scale compared to the Mbps scale in those works. Second, while
those works make predictions at timescales of a few s, we also look at timescales
as low as a few ms, for low latency applications such as VR.
Throughput Prediction Over Wireless Networks. Past works focused
on throughput prediction for sub-6 GHz mobile networks at much coarser
timescales [17,27]. Lumos5G [32] is a recent work that explores using ML to
predict mmWave 5G throughput. However, since cellular networks have very
diﬀerent characteristics from WLANs, the ML models developed in [32] have
completely diﬀerent input features (e.g., geographic coordinates, cellular tower-
related features, handoﬀs, etc.) compared to our models and, similar to previous
works, target much longer timescales, from a few seconds up to a few days.
Recent works on mobile 360◦ video streaming [18,34] consider timescales of a
few seconds, similar to their Internet counterparts. Fireﬂy [26] is a recently pro-
posed approach for mobile VR that performs adaptation at the frame level (a
few ms). However, Fireﬂy modiﬁes the AP ﬁrmware to obtain accurate avail-
able bandwidth statistics. In contrast, we consider client-side adaptation and
our prediction models only use features readily available in the user space.
High-Bandwidth, Latency-Sensitive Applications Over 60 GHz. The
work in [44] was the ﬁrst to show that performance drops drastically when the
AP falls outside the client’s FoV. Based on this observation, the authors pro-
posed a binary predictor to predict whether the AP will fall inside the client’s
FoV in the next 500 ms. Our work showed that throughput variations are non-
negligible at ﬁne timescales, even for static clients. The work in [48] argues that
typical VR/Miracast motion is highly unpredictable and can lead to large and
sudden drops in signal quality. The work in [16] used the average throughput of
the previous 40 ms window to predict the average throughput of the next 30 ms
window and showed that it leads to prediction errors of up to 500 Mbps even in
static conditions. Based on this result, the authors concluded that throughput
cannot be predicted in 60 GHz WLANs. In contrast, our study shows that it is
feasible to use 60 GHz throughput prediction for quality adaptation, especially
for video streaming applications (the target application of [16]).
526
S. Aggarwal et al.
Viewport Prediction. Several recent works have looked at viewport prediction
for 360◦ video streaming, e.g., [18,34,37]. Those works are orthogonal to our
work, as we show from our feature selection study that the user’s angular position
with respect to the AP has little to no correlation with the resulting throughput
when the AP falls within the client’s FoV.
5 Conclusion and Future Directions
We presented the ﬁrst measurement study of the throughput predictability on
802.11ad-enabled mobile devices. Our study shows the throughput in general
can be predicted well in real time using carefully designed small neural net-
work models, and further has several implications to the predictor design. First,
our feature selection study shows that using scaled throughput history (keep-
ing the ratio of the history window and the prediction window constant) helps
prediction accuracy at the 10 ms timescale but hurts at the 2000 ms timescale.
This suggests that a new design that limits the length of history as the model
input can potentially achieve good accuracy for all timescales. Second, our fea-
ture selection study further shows that, for diﬀerent timescales, using diﬀerent
sets of features gives the best prediction accuracy. This suggests that a single
neural network for use in diﬀerent applications can potentially improve its pre-
diction accuracy by adapting the set of features according to application latency
requirements. Further, in this work we performed all our experiments in a single
environment. An interesting avenue for future work is to study the impact of
diﬀerent environments on throughput predictability.
Acknowledgements. We thank our shepherd, Prof. ¨Ozg¨u Alay, and the anonymous
reviewers for their valuable comments. This work was supported in part by the NSF
grant CNS-1553447.
References
1. GHz Throughput Prediction Dataset. https://github.com/NUWiNS/pam2021-
60ghz-throughput-prediction-data
2. Xiph.org Video Test Media [derf’s collection]. https://media.xiph.org/video/derf/
3. Adobe HTTP Dynamic Streaming. https://www.adobe.com/products/hds-
dynamic-streaming.html
4. Android Sensors Overview. https://developer.android.com/guide/topics/sensors/
sensors overview
5. ASUS Republic of Gamers (ROG) Phone. https://www.asus.com/us/Phone/ROG-
Phone/
6. ASUS Republic of Gamers (ROG) Phone II. https://www.asus.com/us/Phone/
ROG-Phone-II/
7. Cinetics Lynx 3 Axis Slider. https://cinetics.com/lynx-3-axis-slider/
8. Dragonframe Stop Motion Software. https://www.dragonframe.com
9. Google Cardboard. https://arvr.google.com/cardboard/
10. JPMML-Evaluator - Java Evaluator API for Predictive Model Markup Language
(PMML). https://github.com/jpmml/jpmml-evaluator
Throughput Prediction on 60 GHz Mobile Devices
527
streaming/
11. Microsoft Smooth Streaming. https://www.microsoft.com/silverlight/smooth-
12. Netgear Nighthawk R(cid:2) X10. https://www.netgear.com/landings/ad7200
13. nuttcp - Network Performance Measurement Tool. https://www.nuttcp.net
14. Tensorﬂow for android. https://www.tensorﬂow.org/lite/guide/android
15. Akhtar, Z., et al.: Oboe: auto-tuning video abr algorithms to network conditions.
In: Proceedings of ACM SIGCOMM (2018)
16. Baig, G., et al.: Jigsaw: robust live 4K video streaming. In: Proceedings of ACM
MobiCom (2019)
17. Bui, N., Michelinakis, F., Widmer, J.: A model for throughput prediction for mobile
users. In: Proceedings of IEEE EWC (2014)
18. He, J., Qureshi, M., Qiu, L., Li, J., Li, F., Han, L.: Rubiks: practical 360-degree
streaming for smartphones. In: Proceedings of ACM MobiSys (2018)
19. Huang, T.Y., Johari, R., McKeown, N., Trunnell, M., Watson, M.: A buﬀer-based
approach to rate adaptation: evidence from a large video streaming service. In:
Proceedings of ACM SIGCOMM (2014)
20. IEEE 802.11 Working Group: IEEE 802.11ad, Amendment 3: Enhancements for
Very High Throughput in the 60 GHz Band (2012)
21. Jiang, J., Sekar, V., Zhang, H.: Improving fairness, eﬃciency, and stability in http-
based adaptive video streaming with festive. In: Proceedings of ACM CoNEXT
(2012)
22. Kajita, S., Yamaguchi, H., Higashino, T., Urayama, H., Yamada, M., Takai, M.:
Throughput and delay estimator for 2.4GHz WiFi APs: a machine learning-based
approach. In: Proceedings of IFIP WMNC (2015)
23. Khan, M.O., Qiu, L.: Accurate WiFi packet delivery rate estimation and applica-
tions. In: Proceedings of IEEE INFOCOM (2016)
24. Lai, Z., Hu, Y.C., Cui, Y., Sun, L., Dai, N.: Furion: engineering high-quality immer-
sive virtual reality on today’s mobile devices. In: Proceedings of ACM MobiCom
(2017)
25. Li, Z., et al.: Probe and adapt: rate adaptation for http video streaming at scale.
IEEE J. Sel. Areas Commun. 32(4), 719–733 (2014)
26. Liu, X., Vlachou, C., Qian, F., Wang, C., Kim, K.H.: Fireﬂy: untethered multi-user
VR for commodity mobile devices. In: Proceedings of USENIX ATC (2020)
27. Liu, Y., Lee, J.Y.B.: An empirical study of throughput prediction in mobile data
networks. In: Proceedings of IEEE GLOBECOM (2015)
28. Mangiante, S., Klas, G., Navon, A., GuanHua, Z., Ran, J., Silva, M.D.: VR is on
videos in mobile networks. In: Proceedings of VR/AR
◦
the edge: how to deliver 360
Network (2017)
29. Mao, H., Netravali, R., Alizadeh, M.: Neural adaptive video streaming with pen-
sieve. In: Proceedings of ACM SIGCOMM (2017)
30. Meng, J., Paul, S., Hu, Y.C.: Coterie: exploiting frame similarity to enable high-
quality multiplayer VR on commodity mobile devices. In: Proceedings of ACM
ASPLOS (2020)
31. Mok, R.K.P., Luo, X., Chan, E.W.W., Chang, R.K.C.: QDASH: a QoE-aware dash
system. In: Proceedings of ACM MMSys (2012)
32. Narayanan, A., et al.: Lumos5G: mapping and predicting commercial mmwave 5g
throughput (2020)
33. Pantos, R.: Apple HTTP Live Streaming 2nd Edition. Internet-Draft draft-pantos-
hls-rfc8216bis-07, Internet Engineering Task Force (2020). https://datatracker.ietf.
org/doc/html/draft-pantos-hls-rfc8216bis-07
528
S. Aggarwal et al.
34. Qian, F., Han, B., Xiao, Q., Gopalakrishnan, V.: Flare: practical viewport-adaptive
360-degree video streaming for mobile devices. In: Proceedings of ACM MobiCom
(2018)
35. Saha, S.K., et al.: Fast and infuriating: performance and pitfalls of 60 GHz WLANs
based on consumer-grade hardware. In: Proceedings of IEEE SECON (2018)
36. Saha, S.K., Aggarwal, S., Pathak, R., Koutsonikolas, D., Widmer, J.: MuSher:
an agile multipath-TCP scheduler for dual-band 802.11ad/ac wireless LANs. In:
Proceedings of ACM MobiCom (2019)
37. Shi, S., Gupta, V., Jana, R.: Freedom: fast recovery enhanced VR delivery over
mobile networks. In: Proceedings of ACM MobiSys (2019)
38. Song, L., Striegel, A.: Leveraging frame aggregation for estimating WiFi available
bandwidth. In: Proceedings of IEEE SECON (2017)
39. Spiteri, K., Urgaonkar, R., Sitaraman, R.K.: BOLA: near-optimal bitrate adapta-
tion for online videos. In: Proceedings of IEEE INFOCOM (2016)
40. Stockhammer, T.: Dynamic adaptive streaming over HTTP: standards and design
principles. In: Proceedings of ACM MMSys (2011)
41. Sun, Y., et al.: CS2P: improving video bitrate selection and adaptation with data-
driven throughput prediction. In: Proceedings of ACM SIGCOMM (2016)
42. Sur, S., Pefkianakis, I., Zhang, X., Kim, K.H.: WiFi-assisted 60 GHz wireless net-
works. In: Proceedings of ACM MobiCom (2017)
43. Sur, S., Venkateswaran, V., Zhang, X., Ramanathan, P.: 60 GHz indoor networking
through ﬂexible beams: a link-level proﬁling. In: Proceedings of ACM SIGMET-
RICS (2015)
44. Wei, T., Zhang, X.: Pose information assisted 60 GHz networks: towards seamless
coverage and mobility support. In: Proceedings of ACM MobiCom (2017)
45. Xu, T., Han, B., Qian, F.: Analyzing viewport prediction under diﬀerent VR inter-
actions. In: Proceedings of ACM CoNEXT (2019)
46. Yan, F.Y., et al.: Learning in situ: a randomized experiment in video streaming.
In: Proceedings of USENIX NSDI (2020)
47. Yin, X., Jindal, A., Sekara, V., Sinopoli, B.: A control-theoretic approach for
dynamic adaptive video streaming over HTTP. In: Proceedings of ACM SIG-
COMM (2015)
48. Zhou, A., Wu, L., Xu, S., Ma, H., Wei, T., Zhang, X.: Following the shadow:
agile 3-D beam-steering for 60 GHz wireless networks. In: Proceedings of IEEE
INFOCOM (2018)