# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 9 章 使用 RHEL 系统角色请求证书 {.title}
:::
您可以使用证书发行和续订系统角色来发布和管理证书。
本章涵盖了以下主题：
::: itemizedlist
-   [证书系统角色](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles "证书问题和续订系统角色"){.link}
-   [使用证书系统角色请求新的自签名证书](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-self-signed-certificate-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书发行和续订系统角色请求新的自签名证书"){.link}
-   [使用证书系统角色从 IdM CA
    请求一个新证书](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-certificate-from-idm-ca-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书发行和续订系统角色从 IdM CA 请求一个新证书"){.link}
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles}证书问题和续订系统角色 {.title}
:::
通过使用证书发行情况和续订系统角色，您可以使用 Ansible Core
管理发布和续订 TLS 和 SSL 证书。
该角色使用 `certmonger`{.literal}
作为证书提供者，目前支持发布和续订自签名证书及使用 IdM
集成认证机构(CA)。
您可以将 Ansible playbook 中的以下变量与证书问题和续订系统角色一起使用：
::: variablelist
[`certificate_wait`{.literal}]{.term}
:   来指定任务是否应该等待签发证书。
[`certificate_requests`{.literal}]{.term}
:   来表示要发布的每个证书及其参数。
:::
::: itemizedlist
**其他资源**
-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   请参阅[开始使用 RHEL
    系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings){.link}。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-self-signed-certificate-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}使用证书发行和续订系统角色请求新的自签名证书 {.title}
:::
通过证书发行并续订系统角色，您可以使用 Ansible Core 发布自签名证书。
此过程使用 `certmonger`{.literal} 提供者，并通过 `getcert`{.literal}
命令请求证书。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，`certmonger`{.literal}
会在证书过期前自动尝试续订证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设为 `no`{.literal} 来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要运行 playbook 的系统上安装了 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings){.link}。
:::
::: orderedlist
**步骤**
1.  [*可选：*]{.emphasis}创建一个清单文件，如 `inventory.file`{.literal}
    ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   将 `hosts`{.literal} 设置为包含您要对其请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将 `name`{.literal} 参数设为所需证书的名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设为要在证书中包含的域，如
            `*.example.com`{.literal}。
        -   将 `ca`{.literal} 参数设为 `self-sign`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: "*.example.com"
                ca: self-sign
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   请参阅 `ansible-playbook(1)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-certificate-from-idm-ca-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}使用证书发行和续订系统角色从 IdM CA 请求一个新证书 {.title}
:::
通过证书发行且续订系统角色，您可以使用 `一个可用的核心来发布`{.literal}
证书，同时使用带有集成证书认证机构(CA)的 IdM 服务器。因此，当使用 IdM
作为 CA 时，您可以高效且一致地为多个系统管理证书信任链。
此过程使用 `certmonger`{.literal} 提供者，并通过 `getcert`{.literal}
命令请求证书。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，`certmonger`{.literal}
会在证书过期前自动尝试续订证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设为 `no`{.literal} 来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要运行 playbook 的系统上安装了 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings){.link}。
:::
::: orderedlist
**步骤**
1.  [*可选：*]{.emphasis}创建一个清单文件，如 `inventory.file`{.literal}
    ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   将 `hosts`{.literal} 设置为包含您要对其请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将 `name`{.literal} 参数设为所需证书的名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设要在证书中包含的域，如
            `www.example.com`{.literal}。
        -   将 `principal`{.literal} 参数设为指定 Kerberos 主体，如
            `HTTP/PI:EMAIL`{.literal}。
        -   将 `ca`{.literal} 参数设为 `ipa`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: www.example.com
                principal: HTTP/PI:EMAIL
                ca: ipa
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   请参阅 `ansible-playbook(1)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#specifying-commands-to-run-before-or-after-certificate-issuance-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}指定在使用证书发行和续订系统角色前或之后要运行的命令 {.title}
:::
使用证书系统发行情况和续订角色，您可以使用 Ansible Core
在签发或更新证书前和之后执行命令。
在以下示例中，管理员确保在为 `www.example.com`{.literal}
发布或更新自签名证书前停止 `httpd`{.literal} 服务，然后再重启该服务。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，`certmonger`{.literal}
会在证书过期前自动尝试续订证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设为 `no`{.literal} 来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要运行 playbook 的系统上安装了 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings){.link}。
:::
::: orderedlist
**步骤**
1.  [*可选：*]{.emphasis}创建一个清单文件，如 `inventory.file`{.literal}
    ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   将 `hosts`{.literal} 设置为包含您要对其请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将 `name`{.literal} 参数设为所需证书的名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设要在证书中包含的域，如
            `www.example.com`{.literal}。
        -   将 `ca`{.literal} 参数设为您要用来发布证书的 CA，如
            `self-sign`{.literal} 。
        -   将 `run_before`{.literal}
            参数设为在签发或续订证书之前要执行的命令，如
            `systemctl stop httpd.service`{.literal}。
        -   将 `run_after`{.literal}
            参数设为在签发或续订此证书后要执行的命令，如
            `systemctl start httpd.service`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: www.example.com
                ca: self-sign
                run_before: systemctl stop httpd.service
                run_after: systemctl start httpd.service
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。