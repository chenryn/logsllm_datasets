signon, a user always enters a name and password in the login window. Thereafter, the 
user does not have to enter a name and password for Apple file service, mail service, or 
other services that use Kerberos authentication. To take advantage of the single signon 
feature, users and services must be configured for Kerberos authentication and use the 
same Kerberos Key Distribution Center (KDC) server. 
User accounts that reside in an LDAP directory of Mac OS X Server version 10.3 and 
have a password type of Open Directory use the server’s built-in KDC. These user 
accounts are automatically configured for Kerberos and single signon. This server’s 
Kerberized services also use the server’s built-in KDC and are automatically configured 
for single signon. Other servers require some configuration to use the Mac OS X Server 
KDC. Servers with Mac OS X Server version 10.3 require only minimal configuration to 
use the built-in KDC of another server with Mac OS X Server version 10.3.
Shadow and Crypt Passwords
Shadow and crypt passwords do not depend on the Kerberos or Open Directory 
Password Server infrastructure for password validation. Both transmit a scrambled form 
of a user’s password, or hash, when sending the password over the network. Both also 
store a scrambled form of the password, but they differ in where the password is 
stored. 
A crypt password is stored as a hash in the user account, making the password fairly 
easy to capture from another computer on the network. This strategy, historically called 
basic authentication, is most compatible with software that needs to access user 
records directly. For example, Mac OS X version 10.1 and earlier expects to find a crypt 
password stored in the user account.
LL2352.Book  Page 39  Friday, August 22, 2003  3:12 PM
40
Chapter 3    User Authentication With Open Directory
A shadow password is stored as several hashes in a file on the same computer as the 
directory domain where the user account resides. Because the password is not stored 
in the user account, the password is not easy to capture over the network. Each user’s 
shadow password is stored in a different file, called a shadow password file, and these 
files are protected so they can be read only by the root user account. Only user 
accounts that are stored in a computer’s local directory can have a shadow password. 
User accounts that are stored in a shared directory can’t have a shadow password.
A shadow password’s primary hash function is SHA-1. In addition, NT and LAN Manager 
hashes are stored in the shadow password file for backwards compatibility with 
Windows SMB file and print services. The NT and LAN Manager hashes can be used for 
Windows personal file sharing from a Mac OS X computer and can also be used to 
authenticate Windows file and print services provided by Mac OS X Server.
Shadow passwords also provide cached authentication for mobile user accounts.
Shadow and crypt do not support all services. Some services require the authentication 
methods that Open Directory supports, such as APOP, CRAM-MD5, Digest-MD5, MS-
CHAPv2, and WebDAV-Digest. For secure transmission of passwords over a network, 
crypt supports the DHX authentication method. Shadow additionally supports NT and 
LAN Manager for network-secure authentication.
Crypt authentication only supports a maximum password length of eight bytes (eight 
ASCII characters). If a longer password is entered in a user account, only the first eight 
bytes are used for crypt password validation. 
The eight-character limit does not apply to a shadow password. With a shadow 
password, the first 128 characters are used for NT authentication, and the first 14 
characters are used for LAN Manager authentication.
Encrypting Shadow and Crypt Passwords in User Accounts
Shadow and crypt passwords are not stored in clear text; they are concealed and made 
illegible by encryption.
Shadow and crypt encrypt a password by feeding the clear text password along with a 
random number to a mathematical function, known as a one-way hash function. A 
one-way hash function always generates the same encrypted value from particular 
input, but cannot be used to recreate the original password from the encrypted output 
it generates. 
To validate a password using the encrypted value, Mac OS X applies the function to the 
password entered by the user and compares it with the value stored in the user 
account. If the values match, the password is considered valid.
LL2352.Book  Page 40  Friday, August 22, 2003  3:12 PM
Chapter 3    User Authentication With Open Directory
41
Different hash functions are used to encrypt shadow and crypt passwords. For crypt 
passwords, the standard UNIX crypt function is used. Shadow passwords are encrypted 
using several hash functions, including NT and LAN Manager. 
Cracking Readable Passwords 
Because crypt passwords are stored directly in user accounts, they are potentially 
subject to cracking. User accounts in a shared directory domain are openly accessible 
on the network. Anyone on the network who has Workgroup Manager or knows how 
to use command-line tools can read the contents of user accounts, including the 
passwords stored in them.
A malicious user, or cracker, could use Workgroup Manager or UNIX commands to copy 
user records to a file. The cracker can transport this file to a system and use various 
techniques to figure out which unencrypted passwords generate the encrypted 
passwords stored in the user records. After identifying a password, the cracker can log 
in unnoticed with a legitimate user name and password.
This form of attack is known as an offline attack, since it does not require successive 
login attempts to gain access to a system. 
A very effective way to thwart password cracking is to use good passwords. A 
password should contain letters, numbers, and symbols in combinations that won’t be 
easily guessed by unauthorized users. Passwords should not consist of actual words. 
Good passwords might include digits and symbols (such as # or $). Or they might 
consist of the first letter of all the words in a particular phrase. Use both uppercase and 
lowercase letters.
Note:  Shadow and Open Directory passwords are far less susceptible to offline attack 
because they are not stored in user records. Shadow passwords are stored in separate 
files that can be read only by someone who knows the password of the root user (also 
known as the System Administrator). Open Directory passwords are stored securely in 
the Kerberos KDC and in the Open Directory Password Server database. A user’s Open 
Directory password can’t be read by other users, not even by a user with administrator 
rights for Open Directory authentication. (This administrator can only change Open 
Directory passwords and password policies.)
LL2352.Book  Page 41  Friday, August 22, 2003  3:12 PM
42
Chapter 3    User Authentication With Open Directory
LDAP Bind Authentication
For user accounts that reside in an LDAP directory on a non-Apple server, Open 
Directory attempts to use simple LDAP bind authentication. Open Directory sends the 
LDAP directory server the name and password supplied by the authenticating user. If 
the LDAP server finds a matching user record and password, authentication succeeds. 
Simple LDAP bind authentication is inherently insecure because it transmits clear text 
passwords over the network. But you can secure simple LDAP bind authentication by 
setting up access to the LDAP directory via the Secure Sockets Layer (SSL) protocol. SSL 
makes access secure by encrypting all communications with the LDAP directory.
LL2352.Book  Page 42  Friday, August 22, 2003  3:12 PM
4
43
4 Open Directory Planning
Like the plumbing and wiring in a building, directory 
services for a network must be planned in advance, not 
on an ad hoc basis.
Keeping information in shared directory domains gives you more control over your 
network, allows more users access to the information, and makes maintaining the 
information easier for you. But the amount of control and convenience depends on the 
effort you put into planning your shared domains. The goal of directory domain 
planning is to design the simplest arrangement of shared domains that gives your 
Mac OS X users easy access to the network resources they need and minimizes the time 
you spend maintaining user records and other administrative data.
This chapter presents guidelines for planning Open Directory services and describes 
tools for managing them.
General Planning Guidelines
If you do not need to share user and resource information among multiple Mac OS X 
computers, there is very little directory domain planning necessary. Everything can be 
accessed from local directory domains. Just ensure that all individuals who need to use 
a particular Mac OS X computer are defined as users in the local directory domain on 
the computer.
Local
directory
domain
Local
directory
domain
Log in to
Mac OS X
Connect to Mac OS X 
Server for file service
LL2352.Book  Page 43  Friday, August 22, 2003  3:12 PM
44
Chapter 4    Open Directory Planning
If you want to share information among Mac OS X computers, you need to set up at 
least one shared directory domain. 
A single shared directory domain may be completely adequate if all your network 
computer users share the same resources, such as printers, share points for home 
directories, share points for applications, and share points for documents.
Larger, more complex organizations can benefit from additional shared directory 
domains.
Controlling Data Accessibility
If your network has several shared directory domains, you can make directory 
information visible only to subsets of a network’s computers. In the foregoing example 
arrangement, the administrator can tailor the users and resources visible to the 
community of Mac OS X computers by distributing directory information among four 
shared directory domains. 
Shared
directory
domain
Local
directory
domain
Local
directory
domain
Log in to
Mac OS X
Connect to Mac OS X 
Server for file service
School directory domain
Science directory domain
Math directory domain
English directory domain
1
2
3
Search Policy
LL2352.Book  Page 44  Friday, August 22, 2003  3:12 PM
Chapter 4    Open Directory Planning
45
If you want all computers to have access to certain administrative data, you store the 
data in a shared directory domain that is in all computers’ search policies. To make 
some data accessible only to a subset of computers, you store it in a shared directory 
domain that is only in the search policies of those computers.
Simplifying Changes to Data in Directories
If you need more than one shared directory domain, you should organize your search 
policies to minimize the number of places data has to change over time. You should 
also devise a plan that addresses how you want to manage such ongoing events as:
• New users joining and leaving your organization
• File servers being added, enhanced, or replaced
• Printers being moved among locations
You’ll want to try to make each directory domain applicable to all the computers that 
use it so you don’t have to change or add information in multiple domains. In the 
foregoing illustration of multilevel shared domains, adding a new student to a class’s 
shared domain enables the student to log in to any of the class’s computers. As 
instructors are hired or retire, the administrator can make adjustments to user 
information simply by editing the school’s shared domain.
If you have a widespread or complex hierarchy of directory domains in a network that 
is managed by several administrators, you need to devise strategies to minimize 
conflicts. For example, you can predefine ranges of user IDs (UIDs) to avoid inadvertent 
file access. (For more information, see the chapter on setting up accounts in the user 
management guide.)
Estimating Directory and Authentication Requirements
In addition to considering how you want to distribute directory data among multiple 
domains, you must also consider the capacity of each directory domain. A number of 
factors affect how large a directory domain can be. One factor is the performance of 
the database that stores the directory information. The LDAP directory domain of 
Mac OS X Server version 10.3 and later uses the Berkeley DB database, which will 
remain efficient with 100,000 records. Of course, a server hosting a directory domain of 
that size would need sufficient hard disk space to store all the records. 
The number of connections that a directory service can handle is harder to measure 
because directory service connections occur in the context of the connections of all the 
services that the server provides. With Mac OS X Server version 10.3, a server dedicated 
to Open Directory has a limit of 250 simultaneous client computer connections. 
LL2352.Book  Page 45  Friday, August 22, 2003  3:12 PM
46
Chapter 4    Open Directory Planning
The Open Directory server may actually be able to provide LDAP and authentication 
services to more client computers, because all the client computers will not need these 
services at once. Each client computer connects to the LDAP directory for up to two 
minutes, and connections to the Open Directory Password Server are even shorter 
lived. For example, an Open Directory server may be able to support 750 client 
computers because the odds are that only a fraction of the client computers that could 
make a connection with Open Directory will actually make connections at the same 
time. Determining what the fraction is—what percentage of the potential client 
computers will make connections at the same time—can be difficult. For example, 
client computers that each have a single user who spends all day working on graphics 
files will need Open Directory services relatively infrequently. In contrast, computers in 
a lab will have many users logging in throughout the day, each with a different set of 
managed client preference settings, and these computers will place a relatively high 
load on Open Directory services.
In general, you can correlate Open Directory usage with login and logout. These 
activities will generally dominate directory and authentication services in any system. 
The more frequently users log in and out, the fewer client computers an Open 
Directory server (or any directory and authentication server) can support. You need 
more Open Directory servers if users log in very frequently. You can get by with fewer 
Open Directory servers if work sessions are long duration and login is infrequent. 
Identifying Servers for Hosting Shared Domains
If you need more than one shared domain, you need to identify the servers on which 
shared domains should reside. Shared domains affect many users, so they should reside 
on Mac OS X Server computers that have the following characteristics:
• Restricted physical access
• Limited network access
• Equipped with high-availability technologies, such as uninterruptible power supplies
You should select computers that will not be replaced frequently and that have 
adequate capacity for growing directory domains. While you can move a shared 
domain after it has been set up, you may need to reconfigure the search policies of 
computers that bind to the shared domain so that their users can continue to log in.
LL2352.Book  Page 46  Friday, August 22, 2003  3:12 PM
Chapter 4    Open Directory Planning
47
Replicating Open Directory Services
Mac OS X Server supports replication of the LDAP directory service, the Open Directory 
Password Server, and the Kerberos KDC.
By replicating your directory and authentication services you can:
• Move directory information closer to a population of users in a geographically 
distributed network, improving performance of directory and authentication services 
to these users.
• Achieve redundancy, so that users see little disruption in service if a directory system 
fails or becomes unreachable. 
One server has a primary copy of the shared LDAP directory domain, Open Directory 
Password Server, and Kerberos Key Distribution Center (KDC). This server is called an 
Open Directory master. Each Open Directory replica is a separate server with a copy of 
the master’s LDAP directory, Open Directory Password Server, and Kerberos KDC. 
Access to the LDAP directory on a replica is read only. All changes to user records and 
other account information in the LDAP directory can be made only on the Open 
DIrectory master. 
The Open Directory master automatically updates its replicas with changes to the LDAP 
directory. The master can update the replicas every time a change occurs, or you can 
set up a schedule so that updates occur only at regular intervals. The fixed schedule 
option is best if replicas are connected to the master by a slow network link. 
Passwords and password policies can be changed on any replica. If a user’s password or 
password policy is changed on more than one replica, the most recent change prevails.
The updating of replicas relies on the clocks of the master and all replicas being in sync. 
If replicas and the master have a wildly different notion of time, updating could be 
somewhat arbitrary. The date, time, and time zone information needs to be correct on 
the master and replicas, and they all should use the same network time service to keep 
their clocks in sync.
Replication in a Multi-Building Campus
A network that spans multiple buildings may have slower network links between 
buildings than within each building. The network links between buildings may also be 
overloaded. These conditions can adversely affect the performance of computers that 
get Open Directory services from a server in another building. Accordingly, you may 
want to set up an Open Directory replica in each building. Depending on need, you 
may even want to set up an Open Directory replica on each floor of a multistory 
building. Each replica provides efficient directory and authentication services to client 
computers in its vicinity. The client computers do not have to make connections with 
an Open Directory server across the slow, crowded network link between buildings. 
LL2352.Book  Page 47  Friday, August 22, 2003  3:12 PM
48
Chapter 4    Open Directory Planning
Having more replicas does have a disadvantage. Replicas communicate with each other 
and with the master over the network. This network communication overhead 
increases as you add replicas. Adding too many replicas can actually add more network 
traffic between buildings in the form of replication updates than it removes in the form 
of Open Directory client communications. 
Therefore in deciding how many replicas to deploy, you must consider how heavily the 
client computers will use Open Directory services. If the client computers are relatively 
light users of Open Directory services on average and your buildings are connected by 
fairly fast network links (such as 100 Mbit/s Ethernet), you probably do not need a 
replica in each building. 
You can reduce the communication overhead between Open Directory replicas and the 
master by scheduling how often the Open Directory master updates the replicas. You 
might not need the replicas updated every time a change occurs in the master. 
Scheduling less frequent updates of replicas will improve performance of the network. 
Improving Performance and Redundancy
You can improve the performance of Open Directory services by adding more memory 
to the server and having it provide fewer services. This strategy applies to every other 
service of Mac OS X Server as well. The more you can dedicate an individual server to a 
particular task, the better its performance will be. 
Beyond that general strategy, you can also improve Open Directory server performance 
by directing the LDAP database to its own disk volume and the Open Directory logs to 
another disk volume. 
If your network will include replicas of an Open Directory master, you can improve 
performance of the network by scheduling less frequent updates of replicas. Updating 
less frequently means the replicas have less up-to-date directory data. You have to 
strike a balance between higher network performance and less accuracy in your 
replicas.
For greater redundancy of Open Directory services, you can set up additional servers as 
Open Directory replicas. Another strategy for increasing redundancy is to use servers 
with RAID sets for Open Directory services.
LL2352.Book  Page 48  Friday, August 22, 2003  3:12 PM
Chapter 4    Open Directory Planning
49
Open Directory Security
With Mac OS X Server version 10.3, a server that has a shared LDAP directory domain 
also provides Open Directory authentication. The authentication data stored by Open 
Directory is particularly sensitive. This authentication data includes the Open Directory 
Password Server database and the Kerberos database, which is extraordinarily sensitive. 
Therefore you need to make sure that an Open Directory master and all Open Directory 
replicas are secure:
• Physical security of a server that is an Open Directory master or replica is paramount. 
It should be behind a locked door. It should always be left logged out. 
• Secure the media you use to back up an Open Directory Password Server database 
and a Kerberos database. Having your Open Directory servers behind locked doors 
won’t protect a backup tape that you leave on your desk every night.
• If possible, do not use a server that is an Open Directory master or replica to provide 
any other services. If you can’t dedicate servers to be Open Directory master and 
replicas, at least minimize the number of other services they provide. One of the 
other services could have a security breach that allows someone inadvertent access 
to the Kerberos or Open Directory Password Server databases. Dedicating servers to 
providing Open Directory services is an optimal practice but not required.
• Avoid using a RAID volume that’s shared with other computers as the startup volume 
of a server that is an Open Directory master or replica. A security breach on one of 
the other computers could jeopardize the security of the Open Directory 
authentication information.
• Set up IP firewall service to block all ports except ports used for directory, 
authentication, and administration protocols. 
• Open Directory Password Server uses ports 106 and 3659. 
• The Kerberos KDC uses TCP/UDP port 88, and TCP/UDP port 749 is used for 
Kerberos administration.
• The shared LDAP directory uses TCP port 389 for an ordinary connection and TCP 
port 636 for an SSL connection. 
• Workgroup Manager uses TCP port 311 and 625.
• Server Admin uses TCP port 311. 
• SMB uses TCP/UDP ports 137, 138, 139, and 445.
• Equip the Open Directory master computer with an uninterruptible power supply.
In summary, the most secure and best practice is to dedicate each server that is an 
Open Directory master or replica to provide only Open Directory services. Set up a 
firewall on each of these servers to allow only directory access, authentication, and 
administration protocols:  LDAP, Password Server, Kerberos, Workgroup Manager, and 
Server Manager. Physically secure each Open Directory server and all backup media 
used with it.
LL2352.Book  Page 49  Friday, August 22, 2003  3:12 PM
50
Chapter 4    Open Directory Planning
Replication introduces a minimal increase in security risk. The replicated LDAP directory 
data has no access controls to restrict reading it, so anyone on the network can 
download the entire directory irrespective of replication. The password data is securely 
replicated using random keys negotiated during each replication session. The 
authentication portion of replication traffic—the Open Directory Password Server and 
the Kerberos KDC—is fully encrypted. For extra security, you could configure network 
connections between the Open Directory servers to use network switches rather than 
hubs. This configuration would isolate authentication replication traffic to trusted 
network segments. 
Tools for Managing Open Directory Services
The Server Admin, Directory Access, and Workgroup Manager applications provide a 
graphical interface for managing Open Directory services in Mac OS X Server. In 
addition, you can manage Open Directory services from the command line by using 
Terminal. If your network includes legacy NetInfo domains, you can manage them with 