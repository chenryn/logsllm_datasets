n(r), V n(r)] for the votes on proposer block pn bounds
the maximum number of votes the block can lose or gain from
uncast votes and votes reversed by the adversary. We also consider
a potential private proposer block, with an upper bound on the
maximum number of votes it can accumulate in the future. We can
fast confirm a set of proposal blocks whenever the upper confidence
bound of the private block is below the lower confidence bound of
the public proposal block with the largest lower confidence bound.
More formally: As defined earlier, P‚Ñì(r) = {p1, p2...} is the set
n (r) be the number of
of proposer blocks at level ‚Ñì at round r. Let V d
votes at depth d or greater for proposer block pn at round r. Define:
Œ¥d := max
(cid:19)
(cid:18) 1
,
, Œµ
1 ‚àí 2Œ≤
8 log m
4 ¬Øfvd
n(r) := max
V
d ‚â•0
(cid:16)
V n(r) := m ‚àí 
‚Ä≤ = 1 ‚àí r
2
maxe
‚àí (1‚àí2Œ≤)m
16 log m ,
(cid:17)
n (r) ‚àí 2Œ¥dm
V d
,
+
Vprivate(r) := 0, V private(r) := m ‚àí 
pn‚Ä≤ ‚ààP‚Ñì(r)\{pn }
n‚Ä≤(r),
V
n‚Ä≤(r).
V
pn‚Ä≤ ‚ààP‚Ñì(r)
Definition 4.5. Proposer set confirmation policy: If
max
n
Vn(r) > V private(r),
(14)
11
# VotesPrivate hidden blockùëù"ùëù#ùëù$ùëù%ùëù&ùëù‚Äô()*+,-	Œ†‚Ñì(ùëü): Confirmed proposer listV1(r)AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztR36/LMt2tOw5kDrxK3IDVUoOXbX4MwoVkMQlNOlOq7Tqq9nEjNKIdpZZApSAkdkyH0DRUkBuXl89On+NQoIY4SaUpoPFd/T+QkVmoSB6YzJnqklr2Z+J/Xz3R05eVMpJkGQReLooxjneBZDjhkEqjmE0MIlczciumISEK1SatiQnCXX14lnfOG6zTcu4ta87qIo4yO0QmqIxddoia6RS3URhQ9omf0it6sJ+vFerc+Fq0lq5g5Qn9gff4AwDWTpQ==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztR36/LMt2tOw5kDrxK3IDVUoOXbX4MwoVkMQlNOlOq7Tqq9nEjNKIdpZZApSAkdkyH0DRUkBuXl89On+NQoIY4SaUpoPFd/T+QkVmoSB6YzJnqklr2Z+J/Xz3R05eVMpJkGQReLooxjneBZDjhkEqjmE0MIlczciumISEK1SatiQnCXX14lnfOG6zTcu4ta87qIo4yO0QmqIxddoia6RS3URhQ9omf0it6sJ+vFerc+Fq0lq5g5Qn9gff4AwDWTpQ==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztR36/LMt2tOw5kDrxK3IDVUoOXbX4MwoVkMQlNOlOq7Tqq9nEjNKIdpZZApSAkdkyH0DRUkBuXl89On+NQoIY4SaUpoPFd/T+QkVmoSB6YzJnqklr2Z+J/Xz3R05eVMpJkGQReLooxjneBZDjhkEqjmE0MIlczciumISEK1SatiQnCXX14lnfOG6zTcu4ta87qIo4yO0QmqIxddoia6RS3URhQ9omf0it6sJ+vFerc+Fq0lq5g5Qn9gff4AwDWTpQ==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztR36/LMt2tOw5kDrxK3IDVUoOXbX4MwoVkMQlNOlOq7Tqq9nEjNKIdpZZApSAkdkyH0DRUkBuXl89On+NQoIY4SaUpoPFd/T+QkVmoSB6YzJnqklr2Z+J/Xz3R05eVMpJkGQReLooxjneBZDjhkEqjmE0MIlczciumISEK1SatiQnCXX14lnfOG6zTcu4ta87qIo4yO0QmqIxddoia6RS3URhQ9omf0it6sJ+vFerc+Fq0lq5g5Qn9gff4AwDWTpQ==BlocksVn(r)AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztQXdXnm2zWn4cyBV4lbkBoq0PLtr0GY0CwGoSknSvVdJ9VeTqRmlMO0MsgUpISOyRD6hgoSg/Ly+elTfGqUEEeJNCU0nqu/J3ISKzWJA9MZEz1Sy95M/M/rZzq68nIm0kyDoItFUcaxTvAsBxwyCVTziSGESmZuxXREJKHapFUxIbjLL6+SznnDdRru3UWteV3EUUbH6ATVkYsuURPdohZqI4oe0TN6RW/Wk/VivVsfi9aSVcwcoT+wPn8AHW+T4g==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztQXdXnm2zWn4cyBV4lbkBoq0PLtr0GY0CwGoSknSvVdJ9VeTqRmlMO0MsgUpISOyRD6hgoSg/Ly+elTfGqUEEeJNCU0nqu/J3ISKzWJA9MZEz1Sy95M/M/rZzq68nIm0kyDoItFUcaxTvAsBxwyCVTziSGESmZuxXREJKHapFUxIbjLL6+SznnDdRru3UWteV3EUUbH6ATVkYsuURPdohZqI4oe0TN6RW/Wk/VivVsfi9aSVcwcoT+wPn8AHW+T4g==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztQXdXnm2zWn4cyBV4lbkBoq0PLtr0GY0CwGoSknSvVdJ9VeTqRmlMO0MsgUpISOyRD6hgoSg/Ly+elTfGqUEEeJNCU0nqu/J3ISKzWJA9MZEz1Sy95M/M/rZzq68nIm0kyDoItFUcaxTvAsBxwyCVTziSGESmZuxXREJKHapFUxIbjLL6+SznnDdRru3UWteV3EUUbH6ATVkYsuURPdohZqI4oe0TN6RW/Wk/VivVsfi9aSVcwcoT+wPn8AHW+T4g==AAAB+nicbVBNS8NAEN3Ur1q/Uj16WSxCvZREBD0WvXisYD+gDWGzmbRLN5uwu1FK7E/x4kERr/4Sb/4bt20O2vpg4PHeDDPzgpQzpR3n2yqtrW9sbpW3Kzu7e/sHdvWwo5JMUmjThCeyFxAFnAloa6Y59FIJJA44dIPxzczvPoBULBH3epKCF5OhYBGjRBvJt6uDTIQgAyLzztQXdXnm2zWn4cyBV4lbkBoq0PLtr0GY0CwGoSknSvVdJ9VeTqRmlMO0MsgUpISOyRD6hgoSg/Ly+elTfGqUEEeJNCU0nqu/J3ISKzWJA9MZEz1Sy95M/M/rZzq68nIm0kyDoItFUcaxTvAsBxwyCVTziSGESmZuxXREJKHapFUxIbjLL6+SznnDdRru3UWteV3EUUbH6ATVkYsuURPdohZqI4oe0TN6RW/Wk/VivVsfi9aSVcwcoT+wPn8AHW+T4g==Vn(r)AAAB+nicbVDLSsNAFL2pr1pfqS7dDBahbkoigi6LblxWsA9oQ5hMJ+3QySTMTJQS+yluXCji1i9x5984abPQ1gMDh3Pu4d45QcKZ0o7zbZXW1jc2t8rblZ3dvf0Du3rYUXEqCW2TmMeyF2BFORO0rZnmtJdIiqOA024wucn97gOVisXiXk8T6kV4JFjICNZG8u3qIDZ2ns46M1/U5Zlv15yGMwdaJW5BalCg5dtfg2FM0ogKTThWqu86ifYyLDUjnM4qg1TRBJMJHtG+oQJHVHnZ/PQZOjXKEIWxNE9oNFd/JzIcKTWNAjMZYT1Wy14u/uf1Ux1eeRkTSaqpIItFYcqRjlHeAxoySYnmU0MwkczcisgYS0y0aatiSnCXv7xKOucN12m4dxe15nVRRxmO4QTq4MIlNOEWWtAGAo/wDK/wZj1ZL9a79bEYLVlF5gj+wPr8ATgDk/M=AAAB+nicbVDLSsNAFL2pr1pfqS7dDBahbkoigi6LblxWsA9oQ5hMJ+3QySTMTJQS+yluXCji1i9x5984abPQ1gMDh3Pu4d45QcKZ0o7zbZXW1jc2t8rblZ3dvf0Du3rYUXEqCW2TmMeyF2BFORO0rZnmtJdIiqOA024wucn97gOVisXiXk8T6kV4JFjICNZG8u3qIDZ2ns46M1/U5Zlv15yGMwdaJW5BalCg5dtfg2FM0ogKTThWqu86ifYyLDUjnM4qg1TRBJMJHtG+oQJHVHnZ/PQZOjXKEIWxNE9oNFd/JzIcKTWNAjMZYT1Wy14u/uf1Ux1eeRkTSaqpIItFYcqRjlHeAxoySYnmU0MwkczcisgYS0y0aatiSnCXv7xKOucN12m4dxe15nVRRxmO4QTq4MIlNOEWWtAGAo/wDK/wZj1ZL9a79bEYLVlF5gj+wPr8ATgDk/M=AAAB+nicbVDLSsNAFL2pr1pfqS7dDBahbkoigi6LblxWsA9oQ5hMJ+3QySTMTJQS+yluXCji1i9x5984abPQ1gMDh3Pu4d45QcKZ0o7zbZXW1jc2t8rblZ3dvf0Du3rYUXEqCW2TmMeyF2BFORO0rZnmtJdIiqOA024wucn97gOVisXiXk8T6kV4JFjICNZG8u3qIDZ2ns46M1/U5Zlv15yGMwdaJW5BalCg5dtfg2FM0ogKTThWqu86ifYyLDUjnM4qg1TRBJMJHtG+oQJHVHnZ/PQZOjXKEIWxNE9oNFd/JzIcKTWNAjMZYT1Wy14u/uf1Ux1eeRkTSaqpIItFYcqRjlHeAxoySYnmU0MwkczcisgYS0y0aatiSnCXv7xKOucN12m4dxe15nVRRxmO4QTq4MIlNOEWWtAGAo/wDK/wZj1ZL9a79bEYLVlF5gj+wPr8ATgDk/M=AAAB+nicbVDLSsNAFL2pr1pfqS7dDBahbkoigi6LblxWsA9oQ5hMJ+3QySTMTJQS+yluXCji1i9x5984abPQ1gMDh3Pu4d45QcKZ0o7zbZXW1jc2t8rblZ3dvf0Du3rYUXEqCW2TmMeyF2BFORO0rZnmtJdIiqOA024wucn97gOVisXiXk8T6kV4JFjICNZG8u3qIDZ2ns46M1/U5Zlv15yGMwdaJW5BalCg5dtfg2FM0ogKTThWqu86ifYyLDUjnM4qg1TRBJMJHtG+oQJHVHnZ/PQZOjXKEIWxNE9oNFd/JzIcKTWNAjMZYT1Wy14u/uf1Ux1eeRkTSaqpIItFYcqRjlHeAxoySYnmU0MwkczcisgYS0y0aatiSnCXv7xKOucN12m4dxe15nVRRxmO4QTq4MIlNOEWWtAGAo/wDK/wZj1ZL9a79bEYLVlF5gj+wPr8ATgDk/M=Vn(r)AAAB73icbVBNS8NAEJ3Ur1q/qh69LBahXkoigh6LXjxWsB/QhrLZbtqlm03cnQgl9E948aCIV/+ON/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38789hPXRsTqAScJ9yM6VCIUjKKVOllr2ldVfd4vV9yaOwdZJV5OKpCj0S9/9QYxSyOukElqTNdzE/QzqlEwyaelXmp4QtmYDnnXUkUjbvxsfu+UnFllQMJY21JI5urviYxGxkyiwHZGFEdm2ZuJ/3ndFMNrPxMqSZErtlgUppJgTGbPk4HQnKGcWEKZFvZWwkZUU4Y2opINwVt+eZW0LmqeW/PuLyv1mzyOIpzAKVTBgyuowx00oAkMJDzDK7w5j86L8+58LFoLTj5zDH/gfP4AltyPqA==AAAB73icbVBNS8NAEJ3Ur1q/qh69LBahXkoigh6LXjxWsB/QhrLZbtqlm03cnQgl9E948aCIV/+ON/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38789hPXRsTqAScJ9yM6VCIUjKKVOllr2ldVfd4vV9yaOwdZJV5OKpCj0S9/9QYxSyOukElqTNdzE/QzqlEwyaelXmp4QtmYDnnXUkUjbvxsfu+UnFllQMJY21JI5urviYxGxkyiwHZGFEdm2ZuJ/3ndFMNrPxMqSZErtlgUppJgTGbPk4HQnKGcWEKZFvZWwkZUU4Y2opINwVt+eZW0LmqeW/PuLyv1mzyOIpzAKVTBgyuowx00oAkMJDzDK7w5j86L8+58LFoLTj5zDH/gfP4AltyPqA==AAAB73icbVBNS8NAEJ3Ur1q/qh69LBahXkoigh6LXjxWsB/QhrLZbtqlm03cnQgl9E948aCIV/+ON/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38789hPXRsTqAScJ9yM6VCIUjKKVOllr2ldVfd4vV9yaOwdZJV5OKpCj0S9/9QYxSyOukElqTNdzE/QzqlEwyaelXmp4QtmYDnnXUkUjbvxsfu+UnFllQMJY21JI5urviYxGxkyiwHZGFEdm2ZuJ/3ndFMNrPxMqSZErtlgUppJgTGbPk4HQnKGcWEKZFvZWwkZUU4Y2opINwVt+eZW0LmqeW/PuLyv1mzyOIpzAKVTBgyuowx00oAkMJDzDK7w5j86L8+58LFoLTj5zDH/gfP4AltyPqA==AAAB73icbVBNS8NAEJ3Ur1q/qh69LBahXkoigh6LXjxWsB/QhrLZbtqlm03cnQgl9E948aCIV/+ON/+N2zYHbX0w8Hhvhpl5QSKFQdf9dgpr6xubW8Xt0s7u3v5B+fCoZeJUM95ksYx1J6CGS6F4EwVK3kk0p1EgeTsY38789hPXRsTqAScJ9yM6VCIUjKKVOllr2ldVfd4vV9yaOwdZJV5OKpCj0S9/9QYxSyOukElqTNdzE/QzqlEwyaelXmp4QtmYDnnXUkUjbvxsfu+UnFllQMJY21JI5urviYxGxkyiwHZGFEdm2ZuJ/3ndFMNrPxMqSZErtlgUppJgTGbPk4HQnKGcWEKZFvZWwkZUU4Y2opINwVt+eZW0LmqeW/PuLyv1mzyOIpzAKVTBgyuowx00oAkMJDzDK7w5j86L8+58LFoLTj5zDH/gfP4AltyPqA==Figure 10: Components of the latency: a) Confirmation la-
tency 1 is analyzed in Theorem 4.7, and b) Confirmation la-
tency 2 is analyzed in Theorem 4.6.
4.5.2 Fast confirmation of honest transactions
In the previous subsection we have shown that one can fast confirm
a set of proposer block sequences which is guaranteed to contain the
prefix of the final totally ordered leader sequence. As discussed in
Section 3, each of these proposer block sequence creates an ordered
ledger of transactions using the reference links to the transaction
blocks. In each of these ledgers, double-spends are removed to
sanitize the ledger. If a transaction appears in all of the sanitized
ledgers in the list, then it is guaranteed to be in the final total ordered
sanitized ledger, and the transaction can be fast confirmed. All
honest transactions without double-spends eventually have this list-
liveness property; when only a single honest proposer block appears
in a level and becomes the leader, it adds any honest transactions
that have not already appeared in at least one ledger in the list.
Due to the positive chain-quality of the leader sequence (Theorem
4.2), an isolated honest level eventually occurs. The latency of
confirming honest transactions is therefore bounded by the sum of
the latency of list confirmation in Theorem 4.6 plus the latency of
waiting for this event to occur (Fig. 10). The latter is given by:
Theorem 4.7 (List-liveness). Assume Œ≤ < 0.5. If an honest
transaction without double spends is mined in a transaction block in
‚àí m16 log m it will appear in all of the ledgers
round r, then w.p. 1 ‚àí r
corresponding to proposer block sequences after an expected latency
no more than
2
maxe
2592
(1 ‚àí 2Œ≤)3 ¬Øfv
log
50
(1 ‚àí 2Œ≤)
rounds.
Proof. Appendix F.
‚ñ°
Figure 10 shows the various components of the overall latency
we analyzed. We can see that the confirmation latency from the
time an honest transaction enters a blocks to the time it is confirmed
is bounded by the sum of the latencies in Theorem 4.6 and 4.7.
Repeating the analysis of Thm. 4.3, we get the following:
Theorem 4.8 (Latency). Theorems 4.6 and 4.7 guarantee that the
expected Œµ-latency for all honest transactions (Def. 8) is at most r(Œ≤)
rounds for Œ≤ < 0.5, where
(cid:26)
(cid:27)
,
50
r(Œ≤) := max
c1(Œ≤), c2(Œ≤) Bv
DC
log 1
Œµ
where
c1(Œ≤)
c2(Œ≤)
:=
:=
log
5400(1 ‚àí Œ≤)
(1 ‚àí 2Œ≤)3 log 1‚àíŒ≤
50
54000
(1 ‚àí 2Œ≤)3 log
Œ≤
(1 ‚àí 2Œ≤) ,
(1 ‚àí 2Œ≤)
(cid:26)
Therefore the honest transactions are confirmed in
max
c1(Œ≤)D, c2(Œ≤) Bv
C
log 1
Œµ
seconds.
(cid:27)
5 SIMULATIONS
Theorem 4.8 provides a theoretical upper bound on the expected
latency, which matches the physical limit of propagation time up
to constant factors. Characterizing the exact constants is an inter-
esting research direction, but outside the scope of this paper. On
the other hand, one can empirically estimate the average latency
values by simulating the Prism protocol and its confirmation rule.
The purpose of this section is to conduct such a simulation in the
honest setting as well as a variety of adversarial settings.
Setup. We simulate a network with m = 1, 000 voter chains, in
which D ‚âà ‚àÜ = 1 sec. We run our proposer tree and each voter
tree at a rate of ¬Øf = 1 block /10 sec. Our simulations measure
the latency for transaction confirmation under three scenarios: no
attack, a balancing attack, and a censorship attack. By design, our
confirmation rule is simultaneously robust against the common
private Nakamoto attack [16], where the adversary withholds a
proposer block as well as corresponding forked voter blocks in
order to reverse a confirmed proposal block. In this section, we
show figures for an adversary deploying ÀúŒ≤ = 0.25 fraction of total
hash power, where ÀúŒ≤ denotes the fraction of hash power being
actually used for the attack (whereas Œ≤ is the maximum tolerable
fraction of adversarial hash power, without losing consistency and
liveness). We set the confirmation reliability conservatively at Œµ =
e‚àí20. Experiments for additional parameter settings can be found
in Appendix J. We compare against the longest-chain protocol, for
the same block generation rate of 1 block per 10 seconds.
No Attack. We start by considering a setting where Prism‚Äôs
parameters are chosen to withstand an attacker of hash power
Œ≤, but the adversary is not actively conducting any attack. Since
the confirmation rule must still defend against Œ≤ adversarial hash
power, latency depends on Œ≤. Honest nodes vote on the earliest-
seen proposer block, with results shown in Figure 11(a). In Bitcoin,
a confirmed transaction has to be deeper in the chain for larger Œ≤;
in Prism, the voter blocks have to be deeper. We see that Prism‚Äôs
latency is significantly smaller than that of Nakamoto‚Äôs longest
chain protocol, and much closer to the physical limit. Note that
since there is no active adversary, double-spend transactions can
be resolved with the same latency as honest transactions.
Balancing Attack.
In a balancing attack, the goal of the ad-
versary is to prevent confirmation by casting all of its votes so
as to compete with the current proposer leader block. We begin
this attack with two competing proposer blocks at the same level
(say level 0), A and B. Consider an honest (non-double-spent) trans-
action that is referred by at least one of the two proposer blocks.
The adversary‚Äôs goal is to prevent the system from confirming this
transaction by balancing votes on the two proposer blocks. That
is, if block A currently has the majority of votes and the adversary
mines a voter block in the ith voter tree: (1) If voter tree i has not
yet voted on level 0, the adversary votes on the minority block, B.
(2) If voter tree i voted on level 0 for block B, the adversary appends
its block to the longest chain, thereby reinforcing the vote for the
losing proposer block. (3) If voter tree i voted on level 0 for block A,
12
Confirmation Latency 1Confirmation Latency 2Round ùëü: ùë°ùë•is part of a transaction blockProposer block referringùë°ùë•is mined at level ‚Ñì‚ÄôLeader block atlevel ‚Ñì‚Äôis confirmedAll leader block lists up to level ‚Ñì‚Äôare confirmedrounds(a)
(b)
(c)
Figure 11: (a) Confirmation latency of honest transactions with no attack. The x-axis denotes the maximum tolearble fraction
of adversarial hash power Œ≤. (b) Transaction latency in the presence of an adversarial balancing attack from ÀúŒ≤ = 0.25 active
hash power, for honest and double-spent transactions. (c) Confirmation latency under a censorship attack with ÀúŒ≤ = 0.25 hash
power. Honest and double-spent transactions have the same latency, both for Prism and for longest chain.
the adversary tries to fork the ith voter tree to vote for B instead. If
there is no vote for B in the voter tree, the adversary creates one. If
there is already a fork voting for B, the adversary appends to this
fork. The balancing attack is one of the most severe and natural
attacks on Prism. The results of this simulation are shown in Figure
11(b). Notice that the latency of honest transaction confirmation
increases by a factor of about 2x under a balancing attack, but does
not affect the longest-chain protocol. Despite this, Prism‚Äôs latency
is still far lower than that of the longest-chain protocol.
Next, we consider double-spent transactions. The latency for
double-spent transactions is the same as honest transactions in the
longest-chain protocol, so the blue curve does not change. However,
the double-spent transaction latency for Prism grows substantially,
approaching that of the longest-chain protocol. Indeed, as the ac-
tive ÀúŒ≤ fraction approaches 0.5, Prism‚Äôs latency on double-spent
transactions in the presence of attacks on the confirmation process
actually exceeds that of the longest-chain protocol, as discussed in
Section 4.1 and seen in Figures 20 and 21.
Censorship Attack Finally, we consider an attacker whose goal
is simply to slow down the confirmation of blocks by proposing
empty proposer and voter blocks. This has two effects: (1) it delays
the creation of a proposer block referencing the transaction block
containing the transaction, and (2) it delays the confirmation of
such a proposer block by delaying the creation of votes on the
proposer tree. The results of this attack are shown in Figure 11(c).
The censorship attack adds a delay of between 15-20 seconds to
Prism‚Äôs confirmation delay compared to the non-adversarial setting.
The effect is smaller for the longest-chain protocol, since the only
delay comes from delaying the insertion of a transaction into a
block. Under a censorship attack, double-spent transactions have
the same latency as honest ones.
ACKNOWLEDGEMENT
We thank the Distributed Technologies Research Foundation, the
Army Research Office under grant W911NF-18-1-0332-(73198-NS),
the National Science Foundation under grants 1705007 and 1651236
for supporting their research program on blockchain technologies.
We thank Applied Protocol Research Inc. for support and for pro-
viding a conducive environment that fostered this collaborative
research. We also thank Andrew Miller and Mohammad Alizadeh
for their comments on an earlier draft. We also thank Soubhik Deb
for helping us with the simulations.
13
REFERENCES
[1]
Ittai Abraham, Dahlia Malkhi, Kartik Nayak, Ling Ren, and Alexander Spiegelman.
Solida: A blockchain protocol based on reconfigurable byzantine consensus. arXiv
preprint arXiv:1612.02916, 2016.
[2] David Aldous and Jim Fill. Reversible markov chains and random walks on
graphs, 2002.
[3] Gavin Andresen. Weak block thoughts. bitcoin-dev. https://lists.linuxfoundation.
org/pipermail/bitcoin-dev/2015-September/011157.html.
[4] Vitalik Buterin. On slow and fast block times, 2015. https://blog.ethereum.org/
2015/09/14/on-slow-and-fast-block-times/.
[7]
[9]
[5] C. Decker and R. Wattenhofer. Information propagation in the bitcoin network.
In IEEE P2P 2013 Proceedings, pages 1‚Äì10, Sept 2013.