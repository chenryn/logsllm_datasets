User: How to write a script using Python to automate system management tasks such as backup, monitoring, configuration, etc.?
Assistant: Python can automate system management tasks. Commonly used modules include os, sys, subprocess, shutil, etc. The following describes how to use Python to write a script to automate backup, monitoring, and configuration operations. 1. Backup Use the shutil module to back up files and directories. You can write a function that takes two parameters: the source directory and the backup directory. The function realizes that all files and directories under the source directory are copied to the backup directory. The code is as follows: ``` import shutil def backup(src_dir, backup_dir): shutil.copytree(src_dir, backup_dir) ``` 2. Monitoring can call system commands using the subprocess module. You can write a function that accepts a command string as a parameter, executes the command and gets the output. The code is as follows: ``` import subprocess def exec_cmd(cmd_str): p = subprocess.Popen(cmd_str, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE) out, err = p.communicate() return out. decode('utf-8'), err.decode('utf-8') ``` You can use this function to monitor the load of the system, such as querying the CPU and memory usage. You can write a function to obtain system CPU and memory usage information. The code is as follows: ``` def get_load_info(): cmd_str = "top -n 1 | grep Cpu && free" out, err = exec_cmd(cmd_str) cpu_info = out.split('\n')[0] mem_info = out. split('\n')[1] return cpu_info, mem_info ``` 3. Configuration The os module can be used to read and write system configuration files. You can write a function that accepts a file path and a dictionary as parameters to write the key-value pairs in the dictionary to the file. The code is as follows: ``` import os def write_config_file(file_path, config_dict): with open(file_path, 'w') as f: for k, v in config_dict.items(): f.write("{}={}\ n".format(k, v)) ``` You can use this function to modify system configuration files, such as modifying network configuration files. You can write a function to write the IP address into the network configuration file. The code is as follows: ``` def set_network_ip(ip_addr): config_dict = {'IPADDR': ip_addr} write_config_file('/etc/sysconfig/network-scripts/ifcfg-eth0', config_dict) ``` By writing the above functions, you can achieve Backup, monitor and configure automated operations. You can write a script to call the above function to realize the timing execution of system management tasks. For example, use cron to execute scripts regularly, backup once a day, monitor once an hour, and modify the network IP address once a week. You can refer to the following code: ``` import time # backup backup('/home/user', '/mnt/backup') # monitor while True: cpu_info, mem_info = get_load_info() print('CPU info:', cpu_info) print('Mem info:', mem_info) time.sleep(3600) # Monitor once an hour # Configure set_network_ip('192.168.1.123') # Modify once a week ```