Header (Not protected)
PHY ID Detection
Data (Protected)
Jamming Attack
Preamble
Signal Field
Preamble
Signal 
Field
MAC 
Header
Frame Body
FCS Padding 
& Tail
L-STF
L-STF
L-LTF
L-LTF
L-SIG
VHT-
SIGA1
VHT-
SIGA2
VHT-
STF
VHT-
LTF
VHT-
SIGB
Service 
Field
Fingerprints Tracking
Jamming Attack
Fig. 1. IEEE 802.11ac WLAN frame structure and persistent jamming attack
368
I.-G. Lee et al.
a good indicator for identifying a speciﬁc node, but there is no PAID information
in legacy frames such as IEEE 802.11a/b/g/n. Therefore, we use both PAID and
ﬁngerprint detection for our persistent jamming in this paper. Through utilizing
the PAID information in the frame header, a persistent jammer is able to detect
the changed channel if it has captured the PAID information in previously at-
tacked channels. If there is no device that supports power saving using PAID, an
attacker can track and jam a speciﬁc target or a group of target devices through
analyzing the physical characteristics from the frame header information and
using the device ﬁngerprints.
3.2 ID Detection
Because WLAN devices use a contention-based channel access scheme, the
preamble and signal ﬁeld should be detected and decoded by all nodes in the net-
work in order to appropriately defer access to a channel. Based on the CSMA/CA
protocol, each device must listen to the channel in order to determine whether
it should decode the incoming packet. Although several MAC level power saving
schemes exist, they are not designed for the awake mode and they improve power
eﬃciency through increasing the sleep period. In many consumer electronics, it
is expected that an active mode device has fewer changes in the sleep mode
in order to maintain an awake state that supports QoS. Therefore, the IEEE
802.11ac/af/ah standard deﬁnes the physical layer header information in order
to determine whether or not to listen and decode an incoming data packet. The
physical layer header information for power saving is called PAID, and it is used
to identify the intended receiver so that non-intended receivers can avoid unnec-
essary signal processing for the remainder of the packet and to allow micro-sleeps
for physical layer power saving. In order that devices in the same or overlapped
basic service sets (BSSs) can avoid having the same PAID and to maximize
the power saving eﬃciency, the PAID is determined by the device’s PAID using
an oﬀset based on the AP’s BSSID with which the device is associated. The
additional oﬀset minimizes the probability of the same ID use among OBSSs.
Therefore, the PAID in the signal ﬁeld can be used to identify the destination
of the packet for any node in the wireless network. If the frame includes the
ID information, it is much easier to identify the target node than the device
ﬁngerprint detection because the false positive detection rate of the ID is as
low as the error rate of signal ﬁeld, which is modulated using the BPSK and
1/2 code rate, as described in Section 4.1. As an alternative approach, MAC
IDs such as address or SSID can be utilized. The PHY signal ﬁeld has its own
cyclic redundancy check (CRC) so that the receiver can use it reliably at the
beginning of the frame, while the data ﬁeld including MAC ID requires long
latency because CRC is attached at the end of the frame even if the MAC ID
is not encrypted. Furthermore, PHY header is always modulated by the most
robust modulation and coding scheme, but the MAC header can be modulated
by higher modulation and coding scheme, which is more susceptible to channel
noise and interference.
Run Away If You Can
369
3.3 Fingerprint Detection
Wireless ﬁngerprinting techniques have typically been investigated for device
localization [11, 12, 32]. Location ﬁngerprinting uses deterministic and proba-
bilistic methods for static estimation in order to determine the position using
the device’s physical characteristics such as the received signal strength indicator
(RSSI) and clock jitter. The wireless ﬁngerprinting techniques can be applied in
location-based services or to improve the system security level. However, mali-
cious uses of device ﬁngerprints have not been investigated, particularly regard-
ing jamming attacks. In this paper, we ﬁrst demonstrate that a wireless device
can be tracked and attacked persistently if an adversary can extract ﬁngerprints
from any frames in the wireless channel. The attacker can track the target de-
vice based on the device ﬁngerprints generated using a unique circuit design. An
electronic ﬁngerprint or radio channel ﬁngerprint enables the identiﬁcation of a
wireless device using its unique characteristics. An attacker is able to extract
and analyze the physical characteristics from the PHY header, such as timing
oﬀset, RSSI, signal-to-noise ratio (SNR), and error vector magnitude (EVM);
then, it can track and jam a target device using the ﬁngerprints. In this paper,
we describe how to extract the SNR and timing oﬀset from these ﬁngerprints in
order to demonstrate the feasibility of device tracking. Although any ﬁngerprints
can be used for persistent jamming, we demonstrate the feasibility of the attack
using the SNR adjusted by the EVM or timing oﬀset assisted by both preamble
and pilots due to high accuracy of estimation and reusability of the existing
circuits in WLAN devices. Furthermore, in order to improve the uniqueness, we
combine two diﬀerent physical ﬁngerprints, and evaluate them in Section 4.1. In
a highly dense network, if higher uniqueness of physical ﬁngerprints is required,
we can combine a set of physical ﬁngerprints.
SNR Estimation. As a signal quality indicator in a typical WLAN indoor
wireless channel, the SNR can be an important factor in link adaptation based
on the transmission signal quality and channel propagation loss in the received
signal. An attacker can also use the measured SNR with the captured frame to
determine whether a speciﬁc device uses the channel frequency in a typical indoor
channel. The long training ﬁeld is 8 µs in length and is composed of two identical
3.2 µs symbols. As a result of the symbol repetition, this long training ﬁeld can
be used to estimate the SNR [30]. The receiver extracts the two long training
samples before the fast Fourier transform (FFT) processing in order to estimate
the received signal quality including the transmitter/receiver impairments and
channel propagation loss. In order to calculate the noise power, the samples from
the ﬁrst long training symbol are subtracted from the samples of the second
symbol. Moreover, the two symbols are averaged in order to calculate the signal
power. With the noise and signal powers, the receiver can calculate the SNR for
the received frame.
The EVM is an error vector magnitude, which is a measurement to calculate
distance between the received sample points and the ideal locations. The EVM
can be calculated in the frequency domain using a more complicated calculation
after estimating the channel response and decoding the signal ﬁeld, while the
370
I.-G. Lee et al.
SNR can be calculated in the time domain using a simple calculation with two
long training symbols [2, 4, 18]. The SNR typically has a linear relationship with
the EVM [21]. In addition, the EVM allows the receiver to further analyze the
characteristics through observing noise patterns in the frequency and time do-
mains as a diﬀerent form of SNR representation. The EVM is more useful in
analyzing digitally modulated signals because the receiver can use the long data
payload or pilot subcarriers to measure the signal quality, even though it re-
quires more multipliers and adders to calculate the values of higher modulations.
The EVM is a good indicator for relating the analog impairment to the device
ﬁngerprints. Through calculating the average EVM for every symbol over the
subcarrier indexes of a signal ﬁeld or the pilot subcarriers during one packet,
the attacker can identify the device using the ﬁngerprints. Consequently, the
attacker can adjust the SNR calculated at the preamble using the pilots’ EVM
until the end of the frame.
Timing Oﬀset Estimation. The sampling timing oﬀset results from the oscil-
lator diﬀerence between the transmitter and receiver. In the frequency domain,
the phase rotation increases as time passes and the amount of phase rotation
increases as the frequency increases, which is the same as in the sampling phase
error. The IEEE 802.11 standard limits the timing oﬀset to less than +/-20 ppm
for WLAN devices. According to the Fourier transform properties, the time
shift of the time domain signal has a phase rotation in the frequency domain
representation of the signal, where the amount of phase rotation increases as
the frequency increases. Thus, the timing oﬀset estimator is derived using the
least square rule [20]. In the derivation, the amount of sampling phase error is
assumed to be small in order that the exponential term can be approximated
using the linear function of the phase error. The accuracy of the estimator can
be improved through using more subcarriers in multiple symbols.
Furthermore, because the carrier frequency and sampling frequency in wire-
less communications systems are driven by a common clock source, the frequency
oﬀset estimation result can be used to estimate the timing oﬀset in order to im-
prove the estimation accuracy [13]. The carrier frequency oﬀset (CFO) is the
carrier frequency diﬀerence between the transmitter and receiver. The phase ro-
tation between two samples in repetitive training symbols separated by a time
delay allows the receiver to calculate an accurate estimate of the carrier fre-
quency oﬀset. In WLAN systems, two preamble structures are supported, i.e.
short and long preambles. The short preamble consists of 10 repetitions of the
same symbol with a duration of 0.8 µs. The long preamble has two repeated
symbols with a symbol period of 3.2 µs. Because the symbols are repeated, the
phase rotation between two successive symbols can be estimated without know-
ing the channel response. The CFO is estimated twice using the short and long
preambles. The initial coarse CFO is estimated using the short training ﬁeld,
and then the residual ﬁne CFO is estimated using the long training ﬁeld. The
initial value in the timing oﬀset estimator can be appropriately assigned using
the CFO estimation, which is calculated using the preamble in advance. Then,
the timing oﬀset is adjusted using the phase oﬀsets of the pilot tones in the data.
WLAN prototype
control
802.11ac
digital 
baseband 
(Attacker)
ADC
DAC
RF
Control 
processor
Neighbor node
Vector signal 
generator
Access point
WLAN prototype
control
Run Away If You Can
371
WLAN prototype
4
3
2
1
RF
ADC
DAC
802.11ac
digital 
baseband 
(Victim 
station)
Spectrum 
analyzer
Vector 
signal 
analyzer
Monitoring S/W
Chip scope
Fig. 2. Experimental setup for the prototype system
4
Implementation and Evaluation of Our Proposed
Attack
In this section, we describe the experimental setup for the prototype and emula-
tion for our proposed attack. The prototype is used for realistic experiments in
the laboratory, and the emulation environment is used for multiple BSSs. Then,
we present the experimental results and discuss their implications.
4.1 Real World Experiment
Experimental Setup. As shown in Figure 2, the experimental setup consisted
of two WLAN prototypes, a commercial AP, a vector signal generator (VSG), a
vector signal analyzer (VSA), and a spectrum analyzer. The FPGA prototypes
satisfy the functionalities and performance requirements of the IEEE 802.11ac
standard. One prototype is an attacker that performs a programmed jamming
attack using a software controller, and the other prototype is a target node that
communicates with the commercial AP. The performances and functionalities
can be observed through monitoring software and a chip scope. The target node
and AP communicate on channel 44. If the packet error count is larger than
a predetermined threshold due to interference, they switch to channel 60. The
VSG functions as a neighbor node that sends IEEE 802.11ac compliant frames
in channel 52. A spectrum analyzer is used to monitor the full span spectrum in
the ISM bands, and the VSA is used to analyze the signal characteristics and its
eﬀect. The image in the right of Figure 2 also illustrates the developed WLAN
prototype, which consists of (1) MAX2829 RF IC, (2) analog device AD9780
digital-to-analog converter (DAC), Texas Instruments ADS4249 ADC, (3) four
Xilinx Virtex6 FPGAs, and (4) an ARM Cortex-A5 processor. The four FPGAs
are programmed for functionalities in the IEEE 802.11n/ac system, which has
been veriﬁed with commercial products to meet the Wi-Fi certiﬁcation require-
ments. The developed WLAN prototype can be utilized for a persistent jamming
attack, and if the hardware of the other WLAN products supports functionalities
for IEEE 802.11ac, such hardware can be used for the proposed attack. In order
to reduce development cost, an universal software radio peripheral (USRP) can
be used to develop the WLAN prototype as an alternative to the FPGAs.
This prototype was developed in order to verify the functionality and perfor-
mance of the digital baseband PHY/MAC system before taping for silicon. The
circuits targeted in the prototype were designed to support IEEE 802.11a/g/n/ac
with a single antenna and to support a high data rate of up to 433 Mbps in the
372
I.-G. Lee et al.
Jammer & VSG
Access point
Jammer 
VSG
(b)
Target device
(a)
Fig. 3. Experimental setup: (a) overall test conﬁguration and (b) jammer
2.4 GHz and 5 GHz ISM bands. The RF IC is connected to the digital baseband
through the ADC and DAC ICs operating at a 160 MHz sampling rate. The dig-
ital baseband controls the RF transceiver, which changes the system parameters
including the TX/RX mode, gain, channel frequency, and ﬁlter mode through
external pins or a serial-to-parallel interface (SPI).
Evaluation Results. All test results
were measured in a laboratory environ-
ment. The experimental setup consisted
of two FPGA boards: one was an attacker
and the other was a target node. Figure
3 illustrates the experimental setup for
the throughput measurement at the tar-
get node when the attacker used diﬀerent
jamming schemes: reactive and persistent
jamming. Figure 3(a) illustrates the con-
ﬁguration of the jammer, neighbor node,
target node, and access point, and Fig-
ure 3(b) illustrates the FPGA prototype