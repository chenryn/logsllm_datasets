Enclave Shaking
Force Data into the SQ: Enclave Shaking
• Abuse the EWB and ELDU instructions for page swapping
15
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
• Abuse the EWB and ELDU instructions for page swapping
• EWB instruction:
• Encrypts and stores an enclave page to RAM
15
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
• Abuse the EWB and ELDU instructions for page swapping
• EWB instruction:
• Encrypts and stores an enclave page to RAM
• ELDU instruction:
• Decrypts and loads an enclave page from RAM
15
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
EWB
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
E(P1)
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
E(P1)
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
P2
E(P1)
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
ELDU
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
D(P2)
P2
E(P1)
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Force Data into the SQ: Enclave Shaking
Core
RAM
Thread
Registers
Thread
Registers
Execution Engine
L1
MOB
L2
TLB
Superqueue
LLC
Memory Controller
EPC
P1
D(P2)
P2
E(P1)
16
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Cache Line Freezing
Keep Data in the SQ: Cache Line Freezing
We do not need hyperthreading, but we can use it!
17
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
We do not need hyperthreading, but we can use it!
• The SQ is shared between hyperthreads
17
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
We do not need hyperthreading, but we can use it!
• The SQ is shared between hyperthreads
• An hyperthread affects the SQ’s content
17
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
We do not need hyperthreading, but we can use it!
• The SQ is shared between hyperthreads
• An hyperthread affects the SQ’s content
• Theory: Zero blocks are not transfered over the SQ
17
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
We do not need hyperthreading, but we can use it!
• The SQ is shared between hyperthreads
• An hyperthread affects the SQ’s content
• Theory: Zero blocks are not transfered over the SQ
• But how?
17
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
xxxxxxxx
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
xxxxxxxx
xxxxxxxx
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
xxxxxxxx
xxxxxxxx
xxxxxxxx
SECRET
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
SECRET
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
SECRET
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
SECRET
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
SECRET
00000000000
*
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
00000000000
*
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Keep Data in the SQ: Cache Line Freezing
L1/L2 Caches
Superqueue
Memory
Thread 1
Access:
Thread 2
Access:
0xdeadbXXX
0x13370XXX
SECRET
SECRET
SECRET
00000000000
*
00000000000
18
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
ÆPIC Leak
Exploit ÆPIC Leak
A A A A A A A A
B B B B B B B B
X X X X X X X X
Superqueue
APIC
IRR
???
ISR
???
EOI
???
Victim (SGX)
L3 load/store
Attacker
request
X X X X X X X
(stale data)
IRR
response
Combine:
• Enclave Shaking
• Cache Line Freezing
19
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Exploit ÆPIC Leak
• We can leak 3/4 of even cache lines
0
4
8
12
0x00
0x10
0x20
0x30
Memory Addresses
20
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Exploit ÆPIC Leak
• We can leak 3/4 of even cache lines
• From any arbitrary SGX page
0
4
8
12
0x00
0x10
0x20
0x30
Memory Addresses
20
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Exploit ÆPIC Leak
• We can leak 3/4 of even cache lines
• From any arbitrary SGX page
• Without the enclave running!
0
4
8
12
0x00
0x10
0x20
0x30
Memory Addresses
20
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Leaking Data and Code Pages
1. Start the enclave
2. Stop when the data is loaded
3. Move the page out (EWB) and perform Cache Line Freezing
4. Leak via APIC MMIO
5. Move the page in (ELDU)
6. Goto 3 until enough confidence
21
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Leaking Register Content
1. Start the enclave
2. Stop at the target instruction
3. Move SSA page out (EWB) and perform Cache Line Freezing
4. Leak via APIC MMIO
5. Move SSA page in (ELDU)
6. Goto 3 until enough confidence
Class
Leakable Registers
General Purpose
rdi r8 r9 r10 r11 r12 r13 r14
SIMD
xmm0-1 xmm6-9
22
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Intel Mitigation
• Recommend to disable APIC MMIO
24
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Intel Mitigation
• Recommend to disable APIC MMIO
• Microcode update to flush SQ on SGX transitions
24
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Intel Mitigation
• Recommend to disable APIC MMIO
• Microcode update to flush SQ on SGX transitions
• Disable hyperthreading when using SGX
24
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Timeline
Dec 7, 2021
Dec 8, 2021
Dec 22, 2021
Jun 14, 2022
Aug 9, 2022
Aug 10, 2022
Discover
ÆPIC Leak
Disclose the
first PoC to
Intel
Intel
confirms the
issue:
embargo
until August
9th, 2022
Intel
publishes
their own
research on
MMIO
leakage
ÆPIC Leak
public
Release
BH USA
talk
25
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Conclusion
• ÆPIC Leak: the first architectural CPU vulnerability that leaks
data from cache hierarchy
• Does not require hyperthreading
• 10th, 11th and 12th gen Intel CPUs affected
aepicleak.com
26
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)
Virtualized Environments
• APIC is a sensitive component not exposed to VMs
• We found no hypervisor that maps the APIC directly to the
VM
• Virtualized environments are safe from ÆPIC Leak
27
Pietro Borrello (@borrello pietro)
Andreas Kogler (@0xhilbert)