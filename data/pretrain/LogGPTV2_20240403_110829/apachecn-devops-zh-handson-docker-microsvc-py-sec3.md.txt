# 第三部分：使用多种服务–通过 Kubernetes 操作系统
在最后一节中，我们介绍了如何开发和容器化单个微服务，这一节介绍了编排概念，使多个服务协同工作。在本节中，Kubernetes 作为 Docker 容器的编排者，将深入解释如何最大限度地利用它，以及如何为现实操作部署它。
本节的第一章介绍了 Kubernetes，并解释了该工具背后的基本概念，这些概念将在本节中使用。Kubernetes 有自己特定的命名法，最初可能会有点让人不知所措，所以当事情不清楚时，不要害怕回到这一章。它还介绍了如何安装和操作本地集群。
本节的第二章展示了如何在本地 Kubernetes 集群中安装开发的微服务，在具体操作中使用上一章中介绍的概念。它配置了一个运行和协作服务的完整集群，同时还演示了如何在这种环境中开发。
本节的第三章涉及一个现实操作:如何使用商业云服务(我们在本书中使用 AWS 服务)创建一个云集群，旨在为开放互联网中的外部客户提供服务。它还涵盖了如何使用私有 Docker 注册中心在适当的 HTTPS 端点下保护服务，以及一些高级主题，例如集群的自动扩展和确保容器平稳运行的实践。
本节的第四章介绍了 GitOps 的概念，这需要使用 Git 存储库来控制集群基础设施，将任何基础设施更改保持在源代码控制之下，并允许使用 Git 的公共元素(如 pull request)来控制和验证基础设施更改是正确的。
本节的第五章描述了单个服务内的软件生命周期以及添加新功能的工作方式，因为该功能是在现有的 Kubernetes 集群中实时运行之前定义的。本章展示了测试和验证新特性的实践，以便有信心和有效地将它们引入到实时系统中。
本节包括以下章节:
*   [第 5 章](05.html)、*使用 Kubernetes 协调微服务*
*   [第 6 章](06.html)*与 Kubernetes 的本地发展*
*   [第 7 章](07.html)、*配置和保护生产系统*
*   [第八章](08.html)，*使用 GitOps 原理*
*   [第 9 章](09.html)、*管理工作流程*