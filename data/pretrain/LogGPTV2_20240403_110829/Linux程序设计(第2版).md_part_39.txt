1)被main调用的getchoice函数是这一小节里的主要函数：getchoice的参数有greet-
方法介绍、choices一
一它指向主菜单或扩展菜单（这取决于用户是否挑选了一张CD唱盘）。从上
面的main函数里可以看出这一点。
int getchoice(char *greet, char *choices1]}
static int selected_row = 0:
int start_screenrow = HESSAGE_LINE, start_screencol = 10;
int. max_row = 0;
int key = 0:
int selected;
option s choices:
wh:le (*eption){
nax_row++;
option++;
/* protect against nenu getting shorter vhen CD deleted */
if （selected_row >= max_rov)
selected_row=0:
clear_all_screen():
mvprintw[atart_screenrow·2.start_screencol,greet);
keypad (stdacr, TRUE) ;
cbreak(1 :
noecho (1 ;
while （key•*g&key:= KEY_ENTeR &&key
key - 0;
1f(key --KEY_UP){
'\n'){
if'(selected_row
=+0}
else
selected_row
=max_rov-1;
加入jaVa编程群：524621833
---
## Page 205
第6章curses函数库
481
selected_rov--!
if(key == KEY_DOWN){
if(selected_row
selected_row ;
[[T-AOxxewls*
else
selected_row++;
draw menu(choices. selected rov. start screenrov,
selected = *choices[selected row] :
key * getch(),
start_screencol;,
keypad(stdsut. FALSE);
nocbreak() :
echo() :
if (key = 'q′1
selected = 'q′;
return (selected);
2)getchoice函数里还有两个局部函数，它们是clear_all_screen和draw_menu。请注意它们的
用法和用途。我们先来看看draw_menu函数：
void draw menu(char *options[1. int current highlight,
int start_row, int start_col)
int current_row =0;
char *txt_ptr:
char **option_ptr;
option_ptr = options;
while (*option_ptrl{
if (current_row e curtent_highligat.
mvaddchstart_rowcurzent_row,otart_col-3, Acs_sULlET);
mvaddch(start_row+current_rou,start_col+40, ACS_BULLET);
}else{
mvaddch(start_row + current_rov.
mvaddch(start_row + cutrent_rov,
start_col -3,
start col + 40,
txt_ptr = options{current_row]:
mvprintw(start_row + current_rov, start_col. "ss*, txt_ptr);
txt_ptr*+;
current_iow++;
option_ptr++:
mvprintw|start_row current_row▪3,start_col,
refresh(1 ;
3)clear_all_screen的作用是清解并重新显示软件标题。如果用户挑选了一张CD唱盘，就把
它的资料显示在屏幕上。下面是它的程序清单：
vo1d clear_all_screen()
clear() :
}{{o]pu）jt
mvprintw(2.20.*8s*,
.*CD Database Application*1:
mvprint?(ERROR_LiNE.0.*Current Cr:s.sn*,
current_cat, current_cd) ;
tef:esh(};
加入java编程群：524621833
---
## Page 206
188
Linux程序设计
下面是对CD唱盘数据库进行添加或更新处理的函数。被main调用是函数有三个，它们是
add_record、update_cd和remove_ed，它们会调用其他小节里的一些函数。我们先来看看
add_record，它里面也有几个局部函数。
动手试试：对数据库文件进行处理
1）首先，怎样把一张新CD唱盘的资料添加到数据库里去？
void add_record()
char catalog_number[MAX_STRING] :
char cd_title[MAx_STRING];
char cd_type[MAx_STRING]:
char cd_artist [MAx_STRING]:
char cd_entry[MAx_STRING]:
int screenrow = MESSAGE_LINE:
int screencol ± 10;
clear_all_screen():
mvprintw[screenrow. screencol.*Snter new CD details*}:
gcreenrow +a 2;
mvprintwscreenrow,screencol.*Catalog Number:*}:
get_string(catalog_nurber);
screenrow++:
nvprintw(screenrow, screencol.*
get_string(cd_title) ;
Cv Title: *1;
screenrow++;
get_string(cd_type):
nvprintw(screentow,
screencol.
:(。:ad 0)
screenrow**;
mvprintw(screenrow, screencol,
get_string(cd_artist);
Artist: *):
screenrow++;
mvprintw(PRoMPr_LINE-2, 5. *About to add this new entry:*):
sprintf (cd_entry. *s,es,$s,es*,
mvprintw(PROMPT_LINE.S.*s*.cd_entry):
catalog_number,cd_title,cd_type,cd_artist);
ROVe(PROMPT_LINZ. 0);
refresh():
if (get_confirm())(
insert_title(cd_entry);
strcpy(current_cd,cd_title):
strcpy(current_cat, catalog_mumber);
2)gct_string函数的作用是从屏幕的当前位置读人一个字符串。它还会把字符串末尾的换行
符去掉。下面是它的程序清单：
void get_string(char *string)
int len;
1on strlen(string);
wgetnstr(stdscr, string, MAX_sTRING):
if (len >0&kstring[len -1]s·\n′)
string（1en-1]=\0′:
加入jaVa编程群：524621833
---
## Page 207
第6章curses函数库
3）get_confirm函数的作用是读人并判断用户的确认输人。它读人用户的输人字符串，检查
它的第-个字母是否是“Y”或“y”。如果是其他字符，它就认为用户没有确认。下面是它的程
序清单：
int get_confirm()
int confirmed = 0;
chaz first_char;
zvprintw(Q_LINE, 5, *Are you sure? *);
clrtoeol () :
refresh():
cbreak(}:
first_char = getch(）:
if (first_char ==
（.，xsx !1
confirmed = 1;
nocbreak1} :
if {!confirmed1
nvprintw(Q_LINE,1,*
clrtoeol():
Cancelled*) ;
refresh() :
sleep (1) :
return confirmed;
4)insert_title函数的作用是在CD唱盘数据库里添加一个标题记录，具体做法是把新标题字
符串追加到标题文件的末尾。下面是它的程序清单：
void insert_title(char *cdtitle)
FILE *fp=fopenltitle_fale."a′};
if(1fp)(
mvprintw(ERROR_LINE, 0,*cannot open CD titles database"):
}else{
fprintf(fp.*s\n*,cdtitle）;
fclose(fp);
1
5)main调用的另外一个文件处理函数是update_cd。这个函数使用了一个带边框的卷屏子窗
口，还会用到一些常数。我们把这些常数定义为全局性的，因为后面的list_tracks函数还要用到
它们。这些常数如下所示：
#define BOxED_LINES
define BOxED_ROWS
11
define BOx_LINE_POS
60
tdefine BOX_ROW_POS
2
update_cd允许用户重新输人当前CD唱盘上的曲目。在删除从前的曲目资料后，它会提示用
户输人新资料。下面是它的程序清单：
void update_cd()
FILe *tracks_tp:
char track_nameIMAx_STRING]:
int len:
int screen_linea1;
int track = 1:
wINDow*box_window_ptr:
加入jaVa编程群：524621833
---
## Page 208
190
Linux程序设计
WINDOw *sub_indow_pt.r ;
mvprintw(PROMPT LINE. 0.*Re entering tracks for CD.*1:
clear_all_screen[) ;
1f 11get_confirm())
move [PROMPT_LINE, C) :
return;
c)t roeol(1;
lemove_tracks():
mprintw(MESSAGE_LINE, 0. *Snter a blank line to finish*);
11acks_fp = fopen(tracks_ffie, *a*1;
注意这段文字前后的程序清单是连着的。我们想用这个小停顿提醒大家注意我们是如
何往一个带边框的卷屏窗口里输入数据的。这里使用的技巧是：先创建一个子窗口，围
着它四周画一个边框：然后，在这个加上边柜的子窗口里再创建一个能够卷屏的子窗
口：最后的结果就是我们在运行程序时看到的样子了。
box_wandiow_ptr = subwin(stdscr, BOXED_LINES + 2. BOXED_ROWS - 2.
1f(1box_window_pt1
BOX_LINE_POS - 1BOX_ROW_POS - 11;
Dox (box_window_ptr, ACS_VLINE. ACS_HLINE1 ;
return:
sub window_ptr = subwin{stdscc. BOXED_LINES, sOxED_ROWS,
it(:sub_window_ptr)
BOX_LINB_POS. BOX_ROW_POS);
scrollok (sub_indow_ptr, TUE):
return;
werase (sub_window_ptr) :
touchwintstdscr):
do{
mvwprintw{sub_window_ptr, screen_line++, Box_Row_Pos + 2,
clrtoeol():
*Track $d: *. track);
wgetnstr(sub_waedow_ptr, track_name. MAX_ STRING1:
len sstrlen(track_name)1
it(1en >0&& tzack_name[1en - 11v:*n′)
if (*track_nane)
track,name[len - 1] = *0′;
fprintf (tracks_fp.*$s,&d, gs\n*,
current_cat.track, track_nane}:
if (screen_1ine > BoxEo_LINes - 1){
track++:
/*time to start scrollang */
scroli(sub_window_ptr):
screen_line--;
while (*track_name);
delwin(sub_window_pt r1 :
fclose(tracks_fp);
6)main调用的最后-个文件处理函数是remove_cd。下面是它的程序清单：
void retove_cd()