# []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#con_selinux-on-gfs2-gfs2-usage-considerations}GFS2 中的 SELinux {.title}
:::
在 GFS2 中使用 Security Enhanced
Linux(SELinux)会导致性能小。为了避免这种性能损失，您可能会选择在 GFS2
中不使用 SELinux，即使其所在的系统中的 SELinux 处于 enforcing 模式。挂载
GFS2 文件系统时，您可以使用 `context`{.literal} 选项（如
`mount`{.literal}(8)man page 所述）确定 SELinux
不会尝试读每个文件系统项中的 `seclabel`{.literal} 元素。SELinux
会假设文件系统中的所有内容都被 `context`{.literal} 挂载选项提供的
`seclabel`{.literal}
元素进行标记。这也将加快处理速度，因为它避免了可能包含
`seclabel`{.literal} 元素的扩展属性块的另一个磁盘。
例如：在采用 enforcing 模式的 SELinux 的系统中，如果文件系统将要包含
Apache 内容，您可以使用以下 `mount`{.literal} 命令挂载 GFS2
文件系统。这个标签将应用于整个文件系统，它会保留在内存中，不会被写入磁盘。
``` literallayout
# mount -t gfs2 -o context=system_u:object_r:httpd_sys_content_t:s0 /dev/mapper/xyz/mnt/gfs2
```
如果您不确定文件系统是否包含 Apache 内容，您可以使用标签
`public_content_rw_t`{.literal} 或
`public_content_t`{.literal}，或者定义一个新标签并为其定义策略。
请注意，在一个 Pacemaker 集群中，应该一直使用 Pacemaker 管理 GFS2
文件系统。您可在创建 GFS2 文件系统资源时指定挂载选项。
:::
::: section
::: titlepage
# []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#con_nfs-over-gfs2-gfs2-usage-considerations}使用 GFS2 设置 NFS {.title}
:::
由于 GFS2 锁定子系统及其集群性质增加了复杂性，因此通过 GFS2 设置 NFS
需要花费很多问题。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
如果导入了 GFS2 文件系统，则必须使用 `localflocks`{.literal}
选项挂载文件系统。因为使用 `localflocks`{.literal}
选项可防止您从多个位置安全地访问 GFS2
文件系统，因此无法同时从多个节点导出
GFS2。在使用此配置时，在同一时间只在一个节点上挂载 GFS2
文件系统是被支持的条件。这样做预期的效果是将每个服务器的 POSIX
锁定强制为本地：非集群，相互独立。这是因为 GFS2 试图在集群节点间从 NFS
部署 POSIX 锁定会有很多问题。对于在 NFS
客户端中运行的应用程序，如果两个客户端从不同的服务器挂载，本地化 POSIX
锁定意味着两个客户端可同时拥有相同的锁定，从而导致数据崩溃。如果所有客户端都从一个服务器中挂载
NFS，那么不同服务器单独赋予同一锁定的问题就不存在。如果您不确定是否使用
`localflocks`{.literal}
选项挂载文件系统，则不应使用这个选项。立即联系红帽支持，讨论适当的配置以避免数据丢失。我们不推荐通过
NFS 导出 GFS2，但在某些情况下并不支持。
对于所有其他（非 NFS）GFS2 应用程序，不要使用 `localflocks`{.literal}
挂载文件系统，因此 GFS2 将管理集群中的所有节点之间的 POSIX 锁定和
flocks。如果您指定了 `localflocks`{.literal} 且不使用
NFS，集群中的其它节点将不知道其他节点的 POSIX 锁定和
flock，因此它们在一个集群的环境中不安全
:::
除锁定注意事项外，您应该在通过 GFS2 文件系统配置 NFS 时考虑以下问题。
::: itemizedlist
-   红帽只支持使用带主动/被动锁定的 NFSv3
    进行红帽高可用性附加组件配置，并具有以下特征。此配置为文件系统提供高可用性(HA)，并减少系统停机，因为故障的节点在
    NFS 服务器故障到另一个节点时不需要执行 `fsck`{.literal} 命令。
    ::: itemizedlist
    -   后端文件系统是在 2 到 16 个节点集群中运行的 GFS2 文件系统。
    -   NFSv3 服务器的定义是一次从单一集群节点中导出整个 GFS2
        文件系统的服务。
    -   NFS
        服务器可以从一个集群节点故障切换到另外一个节点（主动/被动配置）。
    -   不允许访问 GFS2 文件系统, [*除非*]{.emphasis} 通过 NFS
        服务器。这包括本地 GFS2 文件系统访问以及通过 Samba 或者集群的
        Samba
        访问。通过挂载该文件系统的集群节点在本地访问文件系统可能会导致数据崩溃。
    -   在该系统中不支持 NFS 配额。
    :::
-   对于 GFS2 的 NFS 导出，需要 `fsid=`{.literal} NFS 选项。
-   如果您的集群出现问题（例如，群集变得不连续且隔离不成功），则集群逻辑卷和
    GFS2
    文件系统将变得冻结，且在集群被仲裁前可能无法访问。在确定一个简单的故障切换解决方案时，您应该考虑这一点，比如选择在这个过程中定义的最适合您的系统的解决方案。
:::
:::
::: section
::: titlepage
# []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#con_samba-over-gfs2-gfs2-usage-considerations}使用 GFS2 提供 Samba（SMB 或者 Windows）文件 {.title}
:::
您可以使用由 CTDB 提供的 GFS2 文件系统提供的 Samba（SMB 或者
Windows）文件，该文件允许主动/主动配置。
不支持从 Samba 以外同时访问 Samba 共享的数据。目前不支持 GFS2
集群租期，这可延迟 Samba 文件服务。有关 Samba 支持政策的更多信息，请参阅
[RHEL Resilient Storage 的支持政策 - ctdb
常规政策](https://access.redhat.com/articles/3278591){.link}和 [RHEL
Resilient Storage 的支持政策 - 通过红帽客户门户网站中的其他协议导出 gfs2
内容](https://access.redhat.com/articles/3252211){.link}。
:::
::: section
::: titlepage
# []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#con_vms-for-gfs2-gfs2-usage-considerations}为 GFS2 配置虚拟机 {.title}
:::
当在虚拟机中使用 GFS2
文件系统时，务必要正确配置每个节点中的虚拟机存储设置，以便强制关闭缓存。例如：在
`libvirt`{.literal} 域中包括 `cache`{.literal} 和 `io`{.literal}
的这些设置应该允许 GFS2 的行为如预期。
``` literallayout
```
另外，您可以在 device 元素中配置 `shareable`{.literal}
的属性。这表示在域间应该共享该设备（只要虚拟机监控程序支持和操作系统支持）。如果使用
`shareable`{.literal}，则 `cache='no'`{.literal} 应该为该设备使用。
:::
::: section
::: titlepage
# []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#con_gfs2-block-allocation-issues-gfs2-usage-considerations}块分配 {.title}
:::
尽管只写数据的应用程序通常无法无需了解如何或在哪里分配块，但了解块分配如何工作可帮助您优化性能。
::: section
::: titlepage
## []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#_leave_free_space_in_the_file_system}在文件系统中保留空闲空间 {.title}
:::
当 GFS2
文件系统接近满时，块分配程序在分配新块时会比较困难。因此，所有分配器给出的块往往会被限制在资源组的末尾，或者更有可能将大量文件碎片处理。该文件的碎片可能会导致性能问题。另外，当
GFS2 文件系统接近满时，GFS2
块分配程序会通过多个资源组花费较长时间搜索，同时添加了锁定竞争，且不一定在该文件系统中有足够剩余空间。这也可能导致性能问题。
由于这些原因，建议您不要运行一个超过 85%
的文件系统，但这个数字会根据工作负载的不同而有所不同。
:::
::: section
::: titlepage
## []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#_have_each_node_allocate_its_own_files_if_possible}在可能的情况下，每个节点分配自己的文件 {.title}
:::
当为 GFS2
文件系统开发应用程序时，建议您在可能的情况下为每个节点分配它自己的文件。由于分布式锁管理器(DLM)的工作方式，如果所有文件都被一个节点分配，则有更多锁定竞争，而其他节点则需要向这些文件添加块。
过去，术语\"锁
master\"过去用于表示当前锁定请求的协调者，这些请求源自于本地或来自集群中的远程节点。锁定请求协调器的术语稍具误导，因为它实际上是一个资源（在
DLM 术语中），与锁定请求是排队、拒绝或拒绝的关系。在 DLM
中使用术语的意义上，应该使用 \"first among equals\"，因为 DLM 是一个
peer-to-peer 系统。
在 Linux 内核 DLM
实现中，首先使用锁定的节点会成为锁定请求的协调器，此后它不会变化。这是
Linux 内核 DLM 的实现详情，而不是一般的 DLM
属性。将来的更新可能会允许协调特定锁定的锁定请求，以便在节点间移动。
协调锁定请求的位置对锁定请求的启动器是透明的，但对请求延迟的影响除外。当前实现的一个结果是，如果对初始工作负载造成不平衡的情况（例如，在其他人执行任何
I/O
命令前，通过整个文件系统进行一次节点扫描）可能会导致集群中其他节点的锁定延迟与执行文件系统初始扫描的节点进行比较。
与很多文件系统一样，GFS2
分配程序会尝试在同一文件中让块保持接近，以减少磁盘头的移动并提升性能。将块分配给文件的节点可能需要为新块使用和锁定同一资源组（除非该资源组中的所有块都被使用）。如果包含文件的资源组的锁定请求协调器分配其数据块（让首先打开该文件的节点更快）时，文件系统将更快运行。
:::
::: section
::: titlepage
## []{#assembly_gfs2-usage-considerations-configuring-gfs2-file-systems.html#_preallocate_if_possible}如果可能，预先分配 {.title}
:::
如果文件预先分配，可以完全避免块分配，且该文件系统可以更有效地运行。GFS2
包含 `fallocate(1)`{.literal} 系统调用，您可以使用它预先分配数据块。
:::
:::
:::
[]{#assembly_creating-mounting-gfs2-configuring-gfs2-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_creating-mounting-gfs2-configuring-gfs2-file-systems.html#assembly_creating-mounting-gfs2-configuring-gfs2-file-systems}第 3 章 管理 GFS2 文件系统 {.title}
:::
您可以使用各种命令和选项来创建、挂载、增加和管理 GFS2 文件系统。
::: section
::: titlepage
# []{#assembly_creating-mounting-gfs2-configuring-gfs2-file-systems.html#proc_creating-gfs2-creating-mounting-gfs2}GFS2 文件系统创建 {.title}
:::
您可以使用 `mkfs.gfs2`{.literal} 命令创建 GFS2
文件系统。文件系统是在活跃的 LVM 卷中创建的。
::: section
::: titlepage
## []{#assembly_creating-mounting-gfs2-configuring-gfs2-file-systems.html#_the_gfs2_mkfs_command}GFS2 mkfs 命令 {.title}
:::
运行 `mkfs.gfs2`{.literal} 命令需要以下信息来创建集群的 GFS2 文件系统：
::: itemizedlist
-   锁定协议/模块名称，即集群的 `lock_dlm`{.literal}