# INCD - Junior Cyber Challenge 2023
This is a short CTF by the Israeli National Cyber Directorate, as part of a recruitment campaign. 
## Junior researcher challenge
### login page
> Download the html file and find the flag
```html
        אתגר מערך הסייבר הלאומי
```
Use a [reverse hash service](https://md5hashing.net/hash/sha1/9408b6fc3524ec82d20ed65bb0a93178cb5565dd) to find the SHA1 input that produces `9408b6fc3524ec82d20ed65bb0a93178cb5565dd`.  
The flag is `hash_me`.
### pcap investigation
> Investigate the PCAP file in order to find the flag.
> 
> 1. The flag consists of two parts
> 2. flag structure - XXXX_XX_XXX
There's not much content in the attached PCAP according to the protocol breakdown:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/pcap_investigation]
└─$ tshark -qz io,phs -r pcap_challenge.pcap
===================================================================
Protocol Hierarchy Statistics
Filter:
null                                     frames:1563 bytes:346009
  ip                                     frames:1563 bytes:346009
    udp                                  frames:20 bytes:3764
      ssdp                               frames:20 bytes:3764
    icmp                                 frames:6 bytes:768
      nbns                               frames:6 bytes:768
    tcp                                  frames:1537 bytes:341477
      tls                                frames:714 bytes:299988
      http                               frames:6 bytes:5011
        data-text-lines                  frames:2 bytes:1290
        json                             frames:1 bytes:1005
      data                               frames:1 bytes:45
===================================================================
```
View the message in TCP stream 14:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/pcap_investigation]
└─$ tshark -r pcap_challenge.pcap -qz follow,tcp,ascii,14
===================================================================
Follow: tcp,ascii
Filter: tcp.stream eq 14
Node 0: 127.0.0.1:55776
Node 1: 127.0.0.1:8000
787
GET / HTTP/1.1
Host: 127.0.0.1
sec-ch-ua: "Chromium";v="111", "Not(A:Brand";v="8"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Windows"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.5563.65 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Date:MNDU42DDIY4XIWSWHA4GI3KWPFSVGQTOMIZDS22MINBDKYRTKVTWE3KWNRNEGQRQMJ4UE3LBK42WWSKHIVTWE3SWORMW2VTZJFEFE5SJI5HHMYSYIJZVUWCSNRE
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
info: 00110000 00110000 00110111
Connection: close
        601
HTTP/1.1 303 See Other
Date: Sun, 12 Mar 2023 16:45:16 GMT
Content-Type: text/html; charset=UTF-8
X-Content-Type-Options: nosniff
Content-Length: 321
Location: http://127.0.0.1/en-US/
Vary: Accept-Language
Connection: Close
X-Frame-Options: SAMEORIGIN
Server: Splunkd
303 See OtherSee OtherThe resource has moved temporarily here.
===================================================================
```
The value for the "Date" header seems weird. Decode as Base32 to `cGNhcF9tZV88dmVyeSBnb29kLCB5b3UgbmVlZCB0byBmaW5kIGEgbnVtYmVyIHRvIGNvbXBsZXRlJ`, then as base64 to `pcap_me_ Save the .enc file
We get two files: `file.enc` and `p.pem`. Decrypt with OpenSSL:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/save_the_file]
└─$ openssl rsautl -decrypt -inkey p.pem -in file.enc
you_got_the_rsa_flag
```
### Under Maintenance
> The flag format - Flag{This_is_Example}
A website was attached. Visit it:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/Under_Maintenance]
└─$ curl https://incd-challange-undermaintenance.chals.io/
  Bootstrap Website Example
  Under Maintenance
  There is nothing to see here
```
Check `robots.txt`:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/Under_Maintenance]
└─$ curl https://incd-challange-undermaintenance.chals.io/robots.txt
User-agent: *
Disallow: /kifjf/
```
Visit `/kifjf` (note that `/kifjf/` returns an error):
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/Under_Maintenance]
└─$ curl https://incd-challange-undermaintenance.chals.io//kifjf
Flag{Rob0t_F1@g}
```
The flag that was accepted was `Rob0t_F1@g`.
### Connecting people
> The SOC handed over to you a PCAP file find the password the attacker used to connect to the server
A PCAP was attached. Search it for "password":
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/Connecting_people]
└─$ tshark -nr challengePCAP.pcapng  -Y 'frame contains "password"'
91272 149.162397  13.107.4.50 → 192.168.188.135 TCP 1514 80 → 50124 [ACK] Seq=2153284 Ack=7000 Win=64240 Len=1460 [TCP segment of a reassembled PDU]
91449 149.164680  13.107.4.50 → 192.168.188.135 HTTP 1341 HTTP/1.1 200 OK  (application/x-chrome-extension)
160134 367.882945 192.168.188.134 → 192.168.188.135 HTTP 1304 HTTP/1.1 200 OK  (text/html)
166803 499.208124 192.168.188.135 → 192.168.188.134 HTTP 684 POST / HTTP/1.1  (application/x-www-form-urlencoded)
```
The last frame is a POST, let's see the content:
```console
┌──(user@kali)-[/media/sf_CTFs/INCD/Connecting_people]
└─$ tshark -nr challengePCAP.pcapng  -Y 'frame.number == 166803' -T fields -e text
Timestamps,POST / HTTP/1.1\r\n,\r\n,Form item: "username" = "Pitbull",Form item: "password" = "incorrect!"
```
The password is `incorrect!`, however that flag that was accepted was `incorrect`.
### Find Me 
> Find the hidden flag
An HTML file was attached.
```html