4.  ::: para
    然后使用 `zipl`{.command} 命令重建引导装载程序配置。可以使用
    `-V`{.option} 选项获得更详细的输出结果：
    :::
    ``` screen
    # zipl -V
    Using config file '/etc/zipl.conf'
    Target device information
      Device..........................: 5e:00
      Partition.......................: 5e:01
      Device name.....................: dasda
      DASD device number..............: 0201
      Type............................: disk partition
      Disk layout.....................: ECKD/compatible disk layout
      Geometry - heads................: 15
      Geometry - sectors..............: 12
      Geometry - cylinders............: 3308
      Geometry - start................: 24
      File system block size..........: 4096
      Physical block size.............: 4096
      Device size in physical blocks..: 595416
    Building bootmap in '/boot/'
    Building menu 'rh-automatic-menu'
    Adding #1: IPL section 'linux' (default)
      kernel image......: /boot/vmlinuz-2.6.32-19.el6.s390x
      kernel parmline...: 'root=/dev/mapper/vg_devel1-lv_root rd_DASD=0.0.0200,use_diag=0,readonly=0,erplog=0,failfast=0 rd_DASD=0.0.0207,use_diag=0,readonly=0,erplog=0,failfast=0 rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!0.0.0009'
      initial ramdisk...: /boot/initramfs-2.6.32-19.el6.s390x.img
      component address:
        kernel image....: 0x00010000-0x00a70fff
        parmline........: 0x00001000-0x00001fff
        initial ramdisk.: 0x02000000-0x022d2fff
        internal loader.: 0x0000a000-0x0000afff
    Preparing boot device: dasda (0201).
    Preparing boot menu
      Interactive prompt......: enabled
      Menu timeout............: 15 seconds
      Default configuration...: 'linux'
    Syncing disks...
    Done.
    ```
:::
::: para
完成此步骤后，会持久添加新的 DASD，并作为 root
文件系统的一部分使用。但该 root 文件系统仍需要扩展至这个新的
DASD。如果系统使用 LVM 逻辑卷作为 root
文件系统，则需要将这个卷（以及包含该卷的卷组）扩展至新
DASD。可以使用内置的 `pvcreate`{.command}、`vgextend`{.command} 和
`lvextend`{.command} 命令为 LVM 创建物理卷，同时分别扩展现有卷组及 root
逻辑卷。详情请查看 [第 25.1.5 节 "将现有 LVM
卷扩展到包含新存储设备"](#ap-s390info.html#ap-390info-Adding_DASDs-Persistently_Setting_Online-Expanding_LVM){.xref}。
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ap-s390info.html#ap-s390info-Adding_DASDs-Persistently_setting_online-Not_part_of_root_file_system}25.1.3. 不作为 Root 文件系统一部分的 DASD {.title}
:::
::: para
DASD 不是 root 文件系统的一部分，就是说要在 `/etc/dasd.conf`{.filename}
中永久配置 *data disks*。每行包含一个 DASD。每行都以 DASD 的设备总线 ID
开始，后接以空格或者 tab 字符间隔的选项。选项由 key-value 对组成，其中
key 和 value 值以等号分开。
:::
::: para
key 与 DASD 可能包含的所有有效 `sysfs`{.systemitem} 属性对应。value
可写为 key 的 `sysfs`{.systemitem} 属性。`/etc/dasd.conf`{.filename}
中的条目是活跃的，并在将 DASD 添加到系统中时使用 udev
配置。在引导时，会添加所有系统可见的 DASD 并触发
[**udev**]{.application}。
:::
::: para
`/etc/dasd.conf`{.filename} 内容示例：
:::
``` screen
0.0.0207
0.0.0200 use_diag=1 readonly=1
```
::: para
只有在系统重启后，或者使用系统的 I/O 配置动态添加新 DASD（即将 DASD
附加到 z/VM 中）后，修改的 `/etc/dasd.conf`{.filename}
才会生效。也可以为之前不活跃的 DASD 在 `/etc/dasd.conf`{.filename}
中触发激活新条目，方法是执行以下命令：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ap-s390info.html#idm139817201625728}
**过程 25.3. 将 DASD 永久附加为非 root 设备**
-   ::: para
    将 *`uevent`* 属性写入该设备触发激活：
    :::
    ``` screen
    echo add > /sys/bus/ccw/devices/device.bus,ID/uevent
    ```
    ::: para
    例如：
    :::
    ``` screen
    echo add > /sys/bus/ccw/devices/0.0.021a/uevent
    ```
:::
:::
::: section
::: titlepage
## [⁠]{#ap-s390info.html#ap-s390info-Adding_DASDs-Setting_online-Preparing}25.1.4. 使用低级格式化准本新 DASD {.title}
:::
::: para
下一步是让 DASD 上线并对其格式化（如有必要）。以下论述了所需步骤。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
这个过程将清除该磁盘中的所有现有数据。执行该步骤前请确定备份所有数据。
:::
:::
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ap-s390info.html#idm139817113991808}
**过程 25.4. 格式化 DASD**
1.  ::: para
    使用 `dasdfmt`{.command} 命令清除 DASD 中的所有现有数据。使用 DASD
    设备号替换 *DeviceNumber*。提示确认前（如以下示例所示），输入
    `yes`{.literal} 执行。
    :::
    ``` screen
    # dasdfmt -b 4096 -d cdl -p /dev/disk/by-path/ccw-0.0.DeviceNumber
    Drive Geometry: 10017 Cylinders * 15 Heads =  150255 Tracks
    I am going to format the device /dev/disk/by-path/ccw-0.0.0102 in the following way:
       Device number of device : 0x4b2e
       Labelling device        : yes
       Disk label              : VOL1
       Disk identifier         : 0X0102
       Extent start (trk no)   : 0
       Extent end (trk no)     : 150254
       Compatible Disk Layout  : yes
       Blocksize               : 4096
    --->> ATTENTION! 
## [⁠]{#ap-s390info.html#ap-390info-Adding_DASDs-Persistently_Setting_Online-Expanding_LVM}25.1.5. 将现有 LVM 卷扩展到包含新存储设备 {.title}
:::
::: para
如果系统使用
LVM，则需要扩展现有卷组以及一个或多个逻辑卷，以便其包含使用本章前面的内容所添加的新
DASD。否则，虽然可以将 DASD 添加到系统中，但却无法使用。
:::
::: para
下面的过程解释了如何使用新 DASD
的全部容量扩展现有逻辑卷。如果要在多个逻辑卷中使用新
DASD，则需要在这个分区中创建多个 LVM
物理卷，并在要扩展的每个逻辑卷（和卷组）中重复这个步骤。这个步骤假设已按照
[第 25.1.1 节 "在线动态设定
DASD"](#ap-s390info.html#ap-s390info-Adding_DASDs-Setting_online){.xref}
中的要求动态添加先 DASD，然后如 [第 25.1.2.1 节 "作为 Root
文件系统一部分的
DASD"](#ap-s390info.html#ap-s390info-Adding_DASDs-Persistently_setting_online-Part_of_root_file_system){.xref}
所述永久添加它，并准备用于 root 卷，同时如 [第 25.1.4 节
"使用低级格式化准本新
DASD"](#ap-s390info.html#ap-s390info-Adding_DASDs-Setting_online-Preparing){.xref}
所述将其格式化，并在其中生成单一分区。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ap-s390info.html#idm139817209271360}
**过程 25.5. 扩展现有逻辑卷以便使用新 DASD**
1.  ::: para
    使用 `pvcreate`{.command} 命令为 DASD 中的 LVM 创建新物理卷：
    :::
    ``` screen
    # pvcreate /dev/DeviceName
    ```
    ::: important
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    必须将设备名指定为[*分区*]{.emphasis} -
    例如：`/dev/dasdf1`{.filename}。请勿指定整个块设备。
    :::
    :::
    :::
2.  ::: para
    使用 `pvs`{.command} 命令列出现有物理卷，以便确定已创建该物理卷：
    :::
    ``` screen
    # pvs
    PV                 VG             Fmt  Attr PSize   PFree
     /dev/dasda2        vg_local       lvm2 a--    1,29g       0
     /dev/dasdd1        vg_local       lvm2 a--    2,29g       0
     /dev/dasdf1                       lvm2 a--    2,29g    2,29g
     /dev/mapper/mpathb vgextnotshared lvm2 a--  200,00g 1020,00m
    ```
    ::: para
    如上例所示，`/dev/dasdf1`{.filename}
    现包含整个物理卷，该物理卷不属于任何卷组。
    :::
3.  ::: para
    使用 `vgextend`{.command} 命令扩展现有卷组，该卷组中包含要使用新
    DASD 的卷：
    :::
    ``` screen
    # vgextend VolumeGroup PhysicalVolume
    ```
    ::: para
    使用要扩展的卷组名称替换 *VolumeGroup*，使用物理卷名称替换
    *PhysicalVolume*（例如：`/dev/dasdf1`{.filename}）。
    :::
4.  ::: para
    使用 `lvextend`{.command} 命令扩展要使用新 DASD 的逻辑卷：
    :::
    ``` screen
    # lvextend -L +Size /dev/mapper/VolumeGroup-LogicalVolume
    ```
    ::: para
    例如：
    :::
    ``` screen
    # lvextend -L +2G /dev/mapper/vg_local-lv_root
    Extending logical volume lv_root to 2,58 GiB
    Logical volume lv_root successfully resized
    ```
:::
::: para
完成这个过程后，会扩展现有逻辑卷，使其包含新的 DASD
以及之前为其分配的存储设备。还可以作为 `root`{.systemitem} 使用
`pvs`{.command}、`vgs`{.command}、和 `lvs`{.command}
命令在这个过程的任何一步中查看现有 LVM 物理卷、卷组以及逻辑卷。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ap-s390info.html#ap-s390info-Adding_FCP-Attached_LUNs}25.2. 添加使用 FCP 的逻辑单位（LUN） {.title}
:::
::: para
以下是如何添加 FCP LUN 的示例。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
如果在 z/VM 中运行，请确定将 FCP 适配器附加到 z/VM
虚拟机中。要在产品环境中形成多路径，则必须至少在两个不同的物理适配器中（CHPID）中有两个
FCP 设备。例如：
:::
``` screen
CP ATTACH FC00 TO *
CP ATTACH FCD0 TO *
```
:::
:::
::: section
::: titlepage
## [⁠]{#ap-s390info.html#ap-s390info-Adding_FCP-Attached_LUNs-Dynamically}25.2.1. 动态激活 FCP LUN {.title}
:::
::: para
按以下步骤操作激活 LUN：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para