icustomer 192.168.1.1
java r
2 /opt/logs/java.log java
192.168.1.1 /opt/logs/mysqld.lo
mysql
5 g mysql
日志属性命名示意图如下：
3.2.3 检索验证
当日志接入后，可以使用先前定义的appname、tag及系统默认指定的ip等字段检索日
志。我们可以通过检索日志的方式验证日志是否成功进入日志易系统。
如下给出若干检索示例，从使用角度来加深大家对appname、tag等日志术语的理解。日
志易检索非常灵活，实现检索的方法有很多种，示例中仅仅列举了 1-2 种方法，大家可
以举一反三。
检索 www 系统 nginx 所有日志，包括 access.log 和 error.log
appname:www tag:nginx*
OR
ip:192.168.1.10
OR
32
日志学院
(tag:nginx_access OR tag:nginx_error) AND NOT ip:192.168.1.11
检索 主机 192.168.1.12 上 php 日志
appname:www tag:php AND ip:192.168.1.12
OR
ip:192.168.1.12 AND source:"/opt/logs/php.log"
OR
source:"/opt/logs/php.log" AND NOT ip:192.168.1.13
检索所有 php 日志
source:"/opt/logs/php.log"
OR
tag:php
检索 www 系统 所有日志
appname:www
检索 www 系统 nginx access 日志和 icustomer 系统 nginx error 日志
(appname:www AND tag:nginx_access) OR (appname:icustomer AND tag:nginx_error)
检索日志文件名中 "/opt/logs/j" 开头的日志
source:\/opt\/logs\/j*
OR
tag:java AND ip:192.168.1.12
检索 mysql 的日志
tag:mysql
3.2.4 日志解析：logtype 命名
日志接入成功后，可通过日志易系统提供的“字段提取”的功能对日志进行处理，简单来
说，“字段提取”就是通过创建基于规则集的字段提取规则来对不同日志的内容进行结构
化处理。
一个规则有包含 4 部分：
1. 规则名称，即解析规则的名字，建议跟tag保持一致。
2. 日志类型，即 logtype，必须非中文，建议全部小写字母（[a-z]）、数字([0-9])组成，
单词间使用下划线（_）相连接。
3. 规则集合，如用于对日志提取的正则。规则项有前后之分。详细说明见第七章节“字段
解析”部分。
4. 应用目标，用于标识该规则作用于哪些 appname 和 tag。
33
日志学院
场景中共出现 nginx、php、java、mysql 四种应用模块的日志，假设两个业务系统中
nginx access、nginx error、php、java、mysql 的日志均为对应应用的标准日志，则同类日
志可使用相同的解析规则。
针对上述场景，我们将会创建 5 条规则用于数据结构化，详见下表：
规则名称 日志类型 应用目标
nginx_access nginx_access tag:nginx_access
nginx_error nginx_error tag:nginx_error
php php appname:www AND tag:php
java java appname: icustomer AND tag:java
mysql mysql tag:mysql
补充说明：实际环境中，不同业务系统中，很有可能出现相同应用的日志格式不同的情
况，不过不要担心，我们分别为他们创建不同的规则即可。
规则的创建，是在我们进行字段提取时进行的，创建解析规则可以参照后续的章节“字段
解析”。
3.2.5 日志属性命名要点
对于日志的属性标识，建议遵循如下的命名方式：
1. 建议全部小写字母（\[a-z\]）、数字\(\[0-9\]\)，单词间使用下划线（\_）相连接。
2. appname和tag定义要慎重，建议appname + tag 可以唯一定位一个日志，日志易很
多功能，如：字段提取、路由索引、日志分组等都和 appname、 tag 紧密相关。
3. 建议 appname 的命名涵盖业务和应用模块的信息，tag 的命名用于区分同一个应用模
块的不同日志。
本章习题：
1、某银行一期要接入思科防火墙日志到日志易系统中，同时要接入imperva的waf日志到
日志易系统，还要接入Oracle的alert、listener日志易系统中。此时该银行的appname与
tag该如何规划？
思考：
1、 假如日志没有appname，会造成什么不便？
2、 假如日志没有timestamp，会造成什么不便？
3、 现在你知道为什么一条日志要有这么多属性信息了吗？你能说出日志易中各日志属性
信息的必要性吗？
34
日志学院
四、产品基础用法
日志分析需要基于解析之后的日志进行检索，然后将检索到的信息进行分析。分析结构也
许处理成图表、报表进行展现汇报，也许基于错误进行进行告警。
而我们今天的日志易产品基础使用，也将围绕这几点展开。
4.1 快速上传日志样例
附件为您准备了一份Linux性能日志样例，该日志为json格式，名为“json.log”，该附件
也可点击链接https://www.rizhiyi.com/install/json.log下载使用。您可以根据图示进行数据
导入，然后使用日志易进行一些基本的搜索分析操作。
登录日志易系统（在浏览器地址栏输出日志易服务器所在IP即可，用户名为admin，默认
密码为PI:EMAIL），登录成功后点击主界面左侧菜单à选择设置à本地上传à输
入Tag与Appname（本地上传的一般为测试日志，所以这里tag填写自定义标签，
appname填写日志类型即可）à本地上传（选择文件路径）à上传。
35
日志学院
4.2 基本搜索功能示例
Json日志上传后会自动解析。此时点击顶部菜单“搜索”按钮，系统会自动检索10分钟
内上传的全部日志。
因为上传的日志样例的时间较早，我们搜索日志的时候会看到以下界面。
这是我们的日志没有上传成功？其实，只是样例日志的时间与搜索的时间范围不匹配而
已。这就涉及到时间范围搜索的概念了。
36
日志学院
4.2.1 时间范围搜索
由于系统默认自动检索10分钟内的全部日志，且系统自动解析出了该日志的时间戳。只
有搜索的时间范围包含了日志所在的时间点，才能查找到该日志。
我们可以使用记事本观察“json-log.json”日志的原始文件。可以发现，该样例日志的时
间范围大致在2019/08/27 15:14:00到2019/08/27 15:30:00之间。
为了搜索到全部日志，我们可以将时间范围略微调大。
在搜索框右侧的时间窗口处，选择“自定义时间范围”，选择时间范围为2019/08/27
14:00:00到2019/08/27 16:00:00，点击“搜索”。
37
日志学院
可以从搜索框下方的时间轴或日志的时间戳观察到日志的时间范围。
38
日志学院
4.2.2 根据 Tag 和 Appname 过滤日志
虽然选好了时间范围，但当系统上同时上传了多种类型的日志，默认使用 * 搜索时，得到
的其实是指定时间段内的全部日志。
此时，我们可以根据自定义的Tag或Appname来过滤刚刚上传的日志。在搜索框使用
appname:topinfo tag:test（冒号后跟自定义的名称）对刚刚上传的日志进行搜索过滤，这
样就可以得到我们刚刚上传的日志条目了。
用搜索框下方默认显示的事件数，与记事本中看到的日志的总条数进行对比，可以验证我
们上传日志是否完整进入到日志易系统中。
4.2.3 全文检索
当想要对含有某些关键字的日志进行过滤时，我们可以使用日志易的全文检索语法。
关键字搜索
日志易系统支持Lucene系的全文检索语法。在搜索框中直接输入关键字，默认会按全文
检索语法执行搜索。我们可以在上面已进行的搜索的基础上，继续执行全文检索语法。
全文检索语句会被解析成一系列的单词和操作符。这里说的单词，可以是一个真正的英文
单词，比如“disk”，也可以是一段由双引号包裹起来的短语，比如“"ext2 ext3"”。系
统会按照相同的次序，在分词后的索引中，搜索短语内的每个英文单词。
下图是搜索刚刚上传的日志中含有“disk”关键字的日志条目的结果。
39
日志学院
思考1：并不是日志中出现的所有字符都可以使用关键字搜索去进行搜索。比如我们想要
搜索带有“inode”的日志时，使用“inode*”能够搜索到我们想要的结果，使用
“inode”却显示“查询无结果”。这是为什么呢？
思考2：当我们想要搜索文件系统为“ext2”或“ext3”的日志时，使用“"ext2/ext3"”
或“"ext2 ext3"”都能搜索到我们想要的日志条目。这是为什么呢？
思考3：使用“"ext2/ex"”进行搜索，同样显示“查询无结果”，这是为什么呢？
这是因为日志是需要将不规则的文本拆分成各个词语进行存储的（即分词），日志搜索及分析是基于分词
进行的。当系统中有该类型日志的解析规则（根据appname和tag进行规则匹配）时，该类日志会按照
匹配到的解析规则进行分词，这也是通常所说的日志解析。
由于日志易内置了Json日志的解析规则，该Json日志进入到日志易系统（入库）后，日志按Json日志解
析规则被拆分成各个字段进行存储。
当我们对解析后的日志进行搜索时，搜索引擎会默认将关键词当成字段名称或字段值执行搜索，一个字段
名称相当于一个词组，就不能再对其进行拆分搜索了。
注：“ext2/ext3”之间有符号存在，所以被拆分成了3个部分——ext2、\、ext3。这里“ext3”已经是一
个整体，不能再拆分搜索了，所以使用“"ext2/ex"”是不能搜索到我们想要的结果的。
逻辑运算符
日志易日志检索语法支持使用逻辑运算符将多个关键词连接起来。日志易支持的逻辑运算
符有AND、OR、NOT、()。
逻辑运算符的使用遵循以下原则：
40
日志学院
1. 检索语法中，多个单词或短语之间，默认为AND的关系。我们上面使用的搜索语句
tag:tmp “ext2 ext3”中，tag:tmp与“ext2 ext3”之间便是AND的关系；
2. AND优先级高于OR；
3. 有需要时，可以显式的使用小括号()来指明分组优先级；
4. NOT用来过滤不想要的关键词。
使用AND搜索含有某关键字的日志（此处AND可省略）：
使用NOT过滤不含该关键字的日志：
常用搜索功能
除了最基础的单词检索以外，您还可以使用操作符组合更复杂的全文检索语法。
日志易支持的操作符及常用搜索功能大致如下：
41
日志学院
常用搜索功能：
全文检索 : cpu Mem
短语查询 : "ext2 ext3"
逻辑运算符 : AND, OR, NOT, ( )
指定检索字段：json.name:vdb
字段值完全匹配 : json.disk.path:"/boot"
通配符 : * , ?
正则或通配符 : json.name:vd*
字段数值范围 : json.io_stat.wkB_s:[10 TO 100] 或 json.io_stat.wkB_s:>=10 AND
json.io_stat.wkB_s: =10
同理，要查看磁盘IO不低于10KB/s，且不高于100KB/s，则可以写作：
json.io_stat.wkB_s:>=10 AND json.io_stat.wkB_s:<=100
看起来写的有些累赘，对上下限都有值的情况，可以简写作：json.io_stat.wkB_s:[10 TO
100]
42
日志学院
其中，中括号[ ]表示上下限值包含在内，大括号{ }表示上下限值不包含在内。
使用中括号和大括号时，也可以用星号*表示正负无穷。则第一个示例可以写成:
json.io_stat.wkB_s:[10 TO *]
更多全文搜索语法，可以查看产品文档《日志易搜索实例手册》第二章节“2.1全文检索语