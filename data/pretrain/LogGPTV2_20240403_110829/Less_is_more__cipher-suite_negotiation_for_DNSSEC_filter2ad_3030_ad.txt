list and speciﬁes the selected cipher in cipher ﬁeld, then re-
turns the request to the resolver, step 6. When cipher-suite
client receives a response, it checks that the selected cipher is
correct (according to the options supported by the resolver
and the zone), validates the signature over the ciphers ﬁeld,
and forwards the response to the resolver, step 7. If one of
the validation steps fails, the response is discarded.
Cipher-Suite Client. Cipher-suite client adds signaling
of cipher-suite negotiation along with a list of supported ci-
phers, to DNS requests, and validates that the DNS records
in the responses are signed with the correctly negotiated
cipher.
Handling DNS Requests. Cipher-suite client adds to EDNS0
record the ciphers ﬁeld with a list of ciphers that it supports
and sets the CO bit.
Handling DNS Responses. Upon arrival of a DNS re-
(cid:22)(cid:24)(cid:20)
sponse, cipher-suite client extracts from the EDNS0 record
the content of ciphers, and checks that the value in ci-
pher record contains an intersection between the ciphers
supported by the server and the client. If so, it proceeds to
validating the signature over the ciphers ﬁeld transmitted
in RRSIG record. For signature validation the cipher-suite
client uses the key signing key (KSK) of the target zone;
the KSK of the target zone can be obtained from the parent
zone or by alternative means, e.g., via email or public key
repository such as DLV, [RFC5074]. If the signature is valid,
the cipher suite negotiation is successful. The resolver can
then proceed to DNSSEC validation of the received DNS
records with the negotiated cipher.
Cipher-Suite Server. Cipher-suite server runs on the
name server side. It obtains a list of all the ciphers that the
zone supports, signed with the KSK of the zone; signing with
a KSK is essential to prevent downgrade attacks (details
within). This list of ciphers is placed into the ciphers ﬁeld
in EDNS0 record of the DNS responses sent to resolvers that
signal support of cipher-suite negotiation in their requests.
Handling DNS Requests. Upon receipt of a DNS request
with the CO bit set, cipher-suite server extracts the ciphers
list from ciphers record, signaled by the cipher-suite client.
It then selects a cipher based on the ciphers list signaled
by cipher-suite client and the list of ciphers supported by
the target zone, while also applying the respective priorities
(speciﬁed by the cipher-suite client and the zone). Once the
negotiated cipher is established, cipher-suite server identiﬁes
the zone ﬁle on the name server that corresponds to the
selected cipher, from which the DNS records are retrieved.
Handling DNS Responses. Cipher-suite server then adds
to the ciphers ﬁeld in EDNS0 record of the response from
the name server a signed list of ciphers supported by the
zone, and adds the selected cipher to the cipher ﬁeld.
The cipher-suite client uses the signed list of ciphers from
the name server to validate that the cipher-suite negotiation
was correct and that the ciphers list, that it sent in the
DNS request, was not altered by an attacker, e.g., to cause
a downgrade attack.
3.4 Resilience to Downgrade Attacks
Our cipher-suite negotiation is resilient to downgrade at-
tacks. In particular, any attempt by the attacker to cause
the communicating parties to use a weaker cipher version
than the optimal one supported by them both, will be de-
tected. In order to downgrade the defence to a weaker cipher
the attacker can tamper with one of the following exchanges:
Request to Target Zone. Attacker can tamper with the re-
quest of the resolver, and remove the strong ciphers from the
ciphers ﬁeld. The name server will not detect the attack
since the request is not signed, and will send the response
from the zone ﬁle that corresponds to the cipher selected
by the attacker. However, the DNS response contains a
signed list of ciphers supported by the zone, which allows
the resolver to calculate the cipher which should have been
selected by the name server. Since the outcome of the cipher
selection process is deterministic, computation of the opti-
mal cipher by the cipher-suite client, at the resolver, should
yield the same outcome as the computation performed by
the cipher-suite server, running on the name server.
Response from Target Zone. If the attacker tampers with
the response, sent by the name server, and removes ciphers
from the ciphers list of the name server, signature veriﬁ-
cation by cipher-suite client will fail, and tampering will be
detected.
Downgrade of Chain-of-Trust.
In order to authenticate
the public veriﬁcation (ZSK) keys of the target zone, DNSSEC
validating resolver establishes a chain-of-trust from the root
to the target zone. Attacker can tamper with the referral re-
sponse from the parent zone, by removing all the DS records
that correspond to strong ciphers supported by the target
(child) zone. However, notice that the signature of the par-
ent is over all the DS records, hashed public veriﬁcation
(ZSK) keys, of the child zone. Furthermore, the ZSK key is
subsequently used to sign the ciphers list, which allows the
resolver to authenticate the keys and to detect tampering
during computation of optimal cipher.
3.5 Implementation and Evaluation
In this section we describe the implementation of cipher-
suite client and cipher-suite server modules. We conﬁgured
an iptables ﬁrewall rule to capture all packets to/from port
53 (DNS requests/responses) and to pass them to our cipher-
suite client (on the resolver side) and cipher-suite server (on
name server side) user space C modules for processing. In
our implementation of the cipher-suite client and server we
used the libipq module to retrieve the packets from the
kernel queue for user space processing.
Cipher-suite client (resp. cipher-suite server) module can
be placed on the same physical host as the DNS resolver
(resp. DNS name server) or can be conﬁgured on a separate
host, with a suitable ﬁrewall rule to redirect the DNS traﬃc
via the cipher-suite client (resp. cipher-suite server).
Cipher-suite server can be conﬁgured to support online
and oﬄine DNSSEC signing. According to the original de-
sign, DNSSEC required oﬄine signing, i.e., the zone ﬁle is
signed on a separate host, and then it is distributed to all
name servers via a zone update. However, this setting was
not suitable for many domains, e.g., especially dynamic do-
mains, where the zone ﬁle is updated frequently. To accomo-
date for those scenarios an online signing was standardised,
[RFC4470, RFC4471]. Online signing is more ﬂexible and
is already integrated into a number of DNS proxies, both
proprietary and free, e.g., Secure64, PowerDNS, and an in-
creasing number of signed zones adopt an online signing pro-
cedure.
Our cipher-suite server can be integrated into an online
signing proxy, without requiring any changes to the DNS
software or to zone ﬁles. The conﬁguration only requires to
apply the processing of cipher-suite server to requests, prior
to passing them to the online signing proxy, and then on
responses from the proxy.
To be able to identify which cipher corresponds to the re-
sponse returned by the name server, the proxy should main-
tain state, between the arrival of the request, and until a
response is served by the name server. The state is com-
posed of query, TXID, source IP address, and the selected
cipher, from the list sent by the client.
In an oﬄine signing, the name server has to identify the
correct zone ﬁle that corresponds to the optimal negotiated
cipher.
Extended DNS Lookup Utility. To evaluate cipher-suite
negotiation, in addition to implementation in resolvers and
name servers, we also extended dig DNS lookup utility,
to support cipher-suite negotiation mechanism, and to set
the required cipher-suite negotiation options in EDNS0; see
(cid:22)(cid:24)(cid:21)
(cid:15)(cid:16)(cid:8)
(cid:15)(cid:16)(cid:8)
(cid:17)(cid:5)(cid:18)(cid:19)(cid:13)(cid:12)(cid:5)(cid:6)
(cid:17)(cid:5)(cid:18)(cid:19)(cid:13)(cid:12)(cid:5)(cid:6)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:2)(cid:10)(cid:5)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:2)(cid:10)(cid:5)
(cid:1)(cid:13)(cid:2)(cid:5)(cid:14)(cid:10)
(cid:1)(cid:13)(cid:2)(cid:5)(cid:14)(cid:10)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:2)(cid:10)(cid:5)(cid:11)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:2)(cid:10)(cid:5)(cid:11)
(cid:8)(cid:5)(cid:6)(cid:12)(cid:5)(cid:6)
(cid:8)(cid:5)(cid:6)(cid:12)(cid:5)(cid:6)
(cid:16)(cid:20)(cid:21)(cid:5)(cid:11)
(cid:16)(cid:20)(cid:21)(cid:5)(cid:11)
(cid:8)(cid:5)(cid:6)(cid:12)(cid:5)(cid:6)
(cid:8)(cid:5)(cid:6)(cid:12)(cid:5)(cid:6)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:3)(cid:8)(cid:9)(cid:3)
(cid:10)(cid:5)(cid:11)(cid:12)(cid:13)(cid:14)(cid:6)
(cid:7)(cid:8)(cid:3)(cid:15)(cid:16)(cid:17)(cid:18)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:6)(cid:1)(cid:2)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:10)(cid:11)(cid:12)(cid:10)(cid:13)(cid:14)(cid:15)(cid:12)(cid:16)(cid:13)(cid:14)(cid:10)(cid:17)(cid:12)(cid:16)(cid:13)(cid:9)
(cid:3)
(cid:4)
(cid:18)(cid:7)(cid:8)(cid:14)(cid:13)(cid:3)(cid:10)(cid:5)(cid:11)(cid:12)(cid:13)(cid:14)(cid:6)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:3)(cid:19)(cid:20)(cid:2)(cid:3)
(cid:9)(cid:8)(cid:14)(cid:21)(cid:19)(cid:14)(cid:2)(cid:3)(cid:7)(cid:8)(cid:3)(cid:20)(cid:19)(cid:22)(cid:13)(cid:3)(cid:6)(cid:13)(cid:14)(cid:23)(cid:13)(cid:14)
(cid:24)(cid:25)(cid:3)(cid:26)(cid:12)(cid:13)(cid:10)(cid:27)(cid:3)(cid:26)(cid:28)(cid:29)(cid:30)(cid:15)(cid:31)(cid:3)(cid:10)(cid:8)(cid:20)(cid:7)(cid:19)(cid:5)(cid:20)(cid:6)(cid:3)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:10)(cid:8)(cid:14)(cid:14)(cid:13)(cid:10)(cid:7)(cid:3)(cid:20)(cid:13)(cid:32)(cid:8)(cid:7)(cid:5)(cid:19)(cid:7)(cid:13)(cid:2)(cid:3)(cid:8)(cid:11)(cid:7)(cid:5)(cid:8)(cid:20)(cid:25)
(cid:33)(cid:25)(cid:3)(cid:34)(cid:19)(cid:4)(cid:5)(cid:2)(cid:19)(cid:7)(cid:13)(cid:3)(cid:6)(cid:5)(cid:32)(cid:20)(cid:19)(cid:7)(cid:35)(cid:14)(cid:13)(cid:3)(cid:31)(cid:31)(cid:18)(cid:28)(cid:36)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:8)(cid:23)(cid:13)(cid:14)(cid:3)(cid:26)(cid:28)(cid:29)(cid:30)(cid:15)(cid:31)(cid:18)(cid:25)
(cid:37)(cid:25)(cid:3)(cid:38)(cid:8)(cid:14)(cid:21)(cid:19)(cid:14)(cid:2)(cid:3)(cid:7)(cid:8)(cid:3)(cid:31)(cid:13)(cid:6)(cid:8)(cid:4)(cid:23)(cid:13)(cid:14)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:9)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:9)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:9)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:9)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:9)(cid:10)(cid:11)(cid:12)(cid:9)(cid:6)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:12)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:3)(cid:3)(cid:3)(cid:4)(cid:5)(cid:6)(cid:6)(cid:4)(cid:7)(cid:8)(cid:9)(cid:12)(cid:10)(cid:11)(cid:12)(cid:13)(cid:4)(cid:14)(cid:4)(cid:15)(cid:4)(cid:16)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:10)(cid:11)(cid:12)(cid:10)(cid:13)(cid:14)(cid:15)(cid:12)(cid:16)(cid:13)(cid:14)(cid:10)(cid:17)(cid:12)(cid:16)(cid:13)(cid:9)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:8)(cid:9)(cid:9)(cid:10)(cid:11)(cid:12)(cid:10)(cid:13) (cid:6)(cid:6)(cid:7)(cid:2)(cid:18)(cid:8)(cid:9)(cid:19)(cid:19)(cid:19)
(cid:7)
(cid:6)
Figure 4: Cipher-suite negotiation for DNSSEC.
(cid:1)
(cid:8)
(cid:5)
(cid:2)
screen capture in Figure 5.
Evaluation. We evaluated the communication overhead
for signed DNS responses with transport layer cipher suite
negotiation, and without. The evaluation compared the
amount of bytes transmitted, Figure 6.
For our evaluation we conﬁgured cipher-suite client and
cipher-suite server as modules on separate hosts, such that
cipher-suite client was set up on the resolver’s network and
cipher-suite server on name server’s network. We added ﬁre-
wall rules to redirect the DNS traﬃc via themodules.
We wrote a script that was stripping all the keys and sig-
natures from responses of the name servers and was adding
keys and signatures according to a cipher that we selected -
simulating the cipher-suite selection process. Due to short
keys and signatures size, we used EC cipher, and the keys
and signatures were computed with an EC secret signing key
that we generated for this experiment; the resolver was con-
ﬁgured with a corresponding trust anchor, i.e., public ver-
iﬁcation key, which enabled it to establish a chain of trust
and to successfully verify signatures on responses. The DNS
response with the new keys and signatures was then passed
to cipher-suite server, which added the signed ciphers list,
set the CO bit on, and speciﬁed the selected cipher (EC) in
cipher ﬁeld.
Cipher-suite client module captured the requests and re-
sponses from the resolver, added cipher-suite negotiation op-
tions to EDNS0, and then validated cipher-suite negotiation
in responses (using the trust anchor that we conﬁgured in
it especially for this experiment). We performed two series
of evaluations of requests’ latency over a list of Alexa top
sites and TLDs: (1) we wrote a python script that receives
in an input a list of TLDs and Alexa top domains, invokes
the dig utility on each domain, and measures the time be-
tween transmission of request and receipt of the response
as well as the number of bytes received in the response; we
used Bind-9.9.3 software to set up a recursive DNS resolver.
(2) Then, to measure the impact of cipher-suite negotiation,
we wrote a python script, which used the extended dig tool
with our cipher-suite negotiation options for sending DNS
dig A .www.foo.bar +dnssec +ciphers=RSASHA512(1), ECDSAP256SHA256(1), RSASHA1(2), RSAMD5(3)
; > DiG 9.7.3 > A www.foo.bar +dnssec +ciphers=RSASHA512(1), ECDSAP256SHA256(1), 
                                                                                                     RSASHA1(2), RSAMD5(3)
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 35927
;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 7, ADDITIONAL: 1
;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do co; udp: 4096
; CIPHER: RSASHA512
; RRSIG: RRSIG
T5ifp0XpaOcjMS96iCSfsAfwyzBohgEz9cTsAcRBuEbdn87b+PU5yRvkQPrm8yCNXIZqgTn+92tGuv/s
Idoq11/Y70MlU40Wn0TBpB4XHgFM+rTxYLFtkXTlTFgQDKl5nCH+0gXIYm2hpiYSYRqFofcXrxlB 
3LZUu7n qUgqUnA=
; CIPHERS: RSASHA512(1), RSAMD5(2)
CIPHERS 8 1 21600 20140120183409 20140113183409 26790 foo.bar. 
Figure 5: Execution of dig enabled with our cipher-