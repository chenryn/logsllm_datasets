Hello,
_Note: I posted this question in "discussions" but not sure it was the right
place I apologize for the duplicate_
Coming from Scala where the management of asynchronous/synchronous operations
is quite explicit, I am struggling to understand what's the impact of using
def instead of async def for path operation functions.
My main motivation by using an async framework is to be able to scale a lot on
a single machine, being able to support a high number of concurrent http
requests with a limited number of system threads.
Using a mature database access library like SQL Alchemy will require to use
non async functions a lot, as it does not support async yet (I know there are
options but I am not sure I want to use it). The doc claims that then the
function runs on a separate thread pool.
Does that mean:  
1/ a new thread will be created for each new http client request: in that case
I guess the async nature of fastapi just disappear...
2/ a new thread will be created just for a new sql connection/session while
keeping the requests handlers async on the main pool ? In that case what kind
of thread is it ? is it a fixed thread pool ? is the number of threads
configurable ? How will it be managed regarding the number of connections in
the connection pool (dead locks ...) ?
Thanks for your help !  
\--pascal