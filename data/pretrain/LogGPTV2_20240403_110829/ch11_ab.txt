是否有证据显示有足够的良好生产习惯，允许生产支持由其他人管理？是否有证据显示有足够的良好生产习惯，允许生产支持由其他人管理？
从表面上看，这些要求可能与我们过去使用的传统生产清单类似。但是，主要区别是，我们需要有效的监视到位，部署是可靠和确定性的，并且体系结构支持快速和频繁的部署。
如果在审核过程中发现任何缺陷，指定的运营工程师应帮助功能团队解决问题，甚至在必要时帮助重新设计服务，以便可以轻松地在生产中部署和管理服务。
此时，我们可能还希望了解此服务是否受任何法规遵从目标的约束，或者将来是否可能：
该服务是否产生大量收入？（例如，如果该账户占美国上市公司总收入的 5% 以上，则它是一个“重要账户”，符合 2002 年《萨班斯-奥克斯利法案》第 404 条【SOX】）。
该服务的用户流量高或故障/损害成本高（即运维问题是否存在造成可用性或声誉风险的风险）？
服务存储付款持卡人信息（如信用卡号）或个人身份信息（如社会保险号或患者护理记录）吗？是否有其他安全问题可能导致监管、合同义务、隐私或声誉风险？该服务是否有与之相关的任何其他法规或合同合规性要求，例如美国出口法规、PCI-DSS、HIPAA 等？
此信息有助于确保我们不仅有效管理与此服务相关的技术风险，而且管理任何潜在的安全和合规性风险。它还为生产控制环境的设计提供了重要的输入。参见图11-1和图 11-2中启动和移交准备审查的示例。
在谷歌的启动准备审查（来源：“SRE@谷歌：自2004年以来的数千个 DevOps”），YouTube 视频，45:57，由 USENIX 发布，2012年1月12日）
在谷歌的移交准备审查（来源："SRE@谷歌：自2004年以来的数千个DevOps"），YouTube视频，45：57，由USENIX发布，2012年1月12日）正如《云系统管理实践》（Addison-Wesley，2002 年）的合著者、Google 前网站可靠性工程师 Tom Limoncelli 在他的一次谈话中提到，“在最好的情况下，产品团队一直在使用 LRR 检查表作为指导原则，在开发服务的同时努力完成它，并在需要时与 SRR 联系以获得帮助。”此外， Limoncelli 在2016 年曾告诉我：
获得最快 HRR 生产批准的团队是最早与 SRE 合作的团队，从早期设计阶段一直到推出。伟大的事情是，它总是很容易得到一个 SRE 自愿来帮助你的项目。每个 SRE 都认为尽早向项目团队提供建议是有价值的，并且可能会自愿在几个小时或几天内做到这点。
SRE 早期帮助产品团队的做法是 Google 不断强化的重要文化规范。Limoncelli 解释说：“帮助产品团队是一项长期投资，在几个月后推出时将得到回报。”它是一种“良好公民”和“社区服务”，受到重视；在评估工程师进行 SRE 晋升时，通常会考虑这一点。模式 3：创建共享源代码存储库
    公司范围内的共享源代码存储库是用于在整个组织中集成本地发现的最强大的机制之一。工程师更新源代码存储库（例如共享库）中的任何内容时，都会快速自动地传播到使用该库的其他所有服务，并通过每个团队的部署管道进行集成。
Google 是使用组织范围共享源代码存储库的最大示例之一。到 2015 年，Google 拥有一个共享源代码存储库，拥有超过 10 亿个文件和 20 多亿行代码。此存储库由其 25000 名工程师中的每一个使用，涵盖每个 Google 组件，包括 Google 搜索、谷歌地图、Google 文档、Google+、Google 日历、Gmail 和 YouTube。Chrome 和 Android 项目位于单独的源代码存储库中，某些保密算法（如 PageRank）仅对某些团队可用。其中一个有价值的成果是，工程师可以利用组织内每个人的丰富专业知识。监督开发者基础设施小组的谷歌工程经理 Rachel Potvin 告诉Wired杂志的编辑：每个谷歌工程师都可以访问“丰富的馆藏”，因为“几乎所有的事情都已经做了”。
 此外，正如 Eran Messeri 所解释的，使用单个存储库的优点之一是，它允许用户轻松访问其最新形式的所有代码，而无需协调。
我们不仅将源代码库放入共享源代码存储库，还放入编码知识和学习的其他工件中，其中包括：
我们的库、基础结构和环境的配置标准（Chef 菜谱、Puppet 配方等）
部署工具
测试标准和工具，包括安全性
部署管道工具
监测和分析工具
教程和标准
通过此存储库对知识进行编码和共享是我们传播知识的最强大机制之一。 正如 Randy Shoup 在2014年告诉我的：防止 Google 故障的最强大机制是单一代码存储库。每当有人签入 repo 中时，它都会生成一个新的生成，该版本始终使用所有内容的最新版本。一切都是从源构建的，而不是在运行时动态链接的。始终存在当前正在使用的库的单一版本，这是在生成过程中静态链接的内容。
 Tom Limoncelli 在他的书中指出，为整个组织建立一个存储库的价值是如此强大，甚至很难解释。
你可以编写一个工具，并使其可用于所有项目。你有100%准确的知识，能追踪到依赖某个库的组件；因此，你可以重构它，并 100% 确定谁将受到影响，以及谁需要运行回归测试。我也许可以再举一百个例子。我无法用语言来表达这对谷歌的竞争优势有多大。
在 Google，每个库（例如，libc、OpenSSL 以及内部开发的库（如 Java 线程库）都有一个所有者，负责确保库不仅能编译，而且成功通过所有项目的测试，值得依靠，很像一个现实世界的图书管理员。该所有者还负责将每个项目从一个版本迁移到下一个版本。以在生产环境中运行 81 个不同版本的 Java Struts 框架库的组织的真实示例为例：所有这些版本（除了其中一个版本）都具有严重的安全漏洞，并维护所有这些版本，每个版本都有自己的怪癖和特质，会产生巨大的运维负担和压力。此外，所有这些差异都使升级版本变得危险且不安全，这反过来又会阻碍开发人员升级。循环还在继续。
单一源存储库解决了大部分问题，并且具有允许团队安全、自信地迁移到新版本的自动化测试。
如果我们不能在单个源树上构建所有内容，我们必须找到另一种方法来维护库及其依赖项的已知良好版本。例如，我们可能有一个组织范围的存储库，如 Nexus、Artifactory 或 Debian 或 RPM 存储库，然后我们必须在这些存储库和生产系统中存在已知漏洞的地方进行更新。    
结论
我希望这些模式能够展示出 SRE 和 DevOps 之间显而易见的桥梁——它们之间的共同点比大多数人想象的要大得多，而且肯定以类似的原则和目标为根据。进一步阅读和源材料
2015 年 DevOps 企业峰会 Mike Bland 的演讲：“痛苦结束了，如果你希望的话”，Slideshare.net，由 Gene Kim发布，2015 年 11 月 18 日。
GOTO Conference talk by Eran Messeri, “What Goes Wrong When Thousands of Engineers Share the Same Continuous Build?” Aarhus, Denmark, October 2, 2013.
Tom Limoncelli, “SRE@Google: Thousands Of DevOps Since 2004”, YouTube video of USENIX Association Talk, NYC, posted by USENIX, 45:57, posted January 12, 2012.Ben Treynor, “Keys to SRE” (presentation, Usenix SREcon14, Santa Clara, CA, May 30, 2014).
Cade Metz, “Google Is 2 Billion Lines of Code—and It’s All in One Place”, Wired, September 16, 2015.
Eran Messeri, “What Goes Wrong When Thousands of Engineers Share the Same Continuous Build?” (2013).
Tom Limoncelli, “Yes, you can really work from HEAD”, EverythingSysAdmin.com, March 15, 2014.Tom Limoncelli, “Python is better than Perl6”, EverythingSysAdmin.com, January 10, 2011.
“Which programming languages does Google use internally?,” Quora.com forum, accessed May 29, 2016; “When will Google permit languages other than Python, C++, Java and Go to be used for internal projects?”, Quora.com forum, accessed May 29, 2016.
Tom Limoncelli, Strata Chalup, and Christina Hogan, The Practice of Cloud System Administration (Addison-Wesley: 2002).编者介绍
Gene Kim 是多个屡获殊荣的 CTO、研究员和《凤凰计划》、《DevOps 手册》和《加速》（IT Revolution 出版）的合著者。他是 DevOps 企业峰会的组织者。