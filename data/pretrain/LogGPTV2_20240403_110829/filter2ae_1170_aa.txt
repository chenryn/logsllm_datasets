**译者：知道创宇404实验室翻译组  
原文链接：**
在本报告中，我们将讨论8月初的一个案例，在这个案例中，我们发现攻击者利用 BazarLoader 和 Cobalt Strike 并使用 Conti
勒索软件加密系统。
该案例中使用了常规的发现工具列表，如 AdFind、 Net、 Ping、 PowerView 和 Nltest。利用 Rclone 技术将公司数据转移给
Mega，利用 Process Hacker 技术转移 LSASS。攻击者在服务器上执行一个 Conti 批处理文件，然后服务器对大部分域加密。
## 摘要
八月份，我们发现了一起由BazarLoader 感染开始的入侵事件。传递来源可能是一场网络钓鱼运动，该运动向受害者分发有密码保护的 zip
文件和改装化文件。word文档中的宏提取并执行了恶意的.HTA文档，该文档下载并加载了内存中的BazarLoader DLL。
对信息安全界有一个认知是很明显的，即从BazarLoader开始的入侵常常以Conti勒索软件结束。本次事件也得出了这样的结论。在涉及Conti勒索软件的事件中有一些明显的相似之处。勒索软件操作者的工具和执行的总体目的在整个集群中趋于匹配。当我们看我们之前的[Conti
事件](https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks)，这一点变得显而易见。这可能是由于一家分支机构泄露的[Conti手册](https://therecord.media/disgruntled-ransomware-affiliate-leaks-the-conti-gangs-technical-manuals/)广泛传播。在本例中，我们看到了相同的事件模式，工具包括net、nltest、用于discovery的ShareFinder、用于C2的Cobalt
Strike 和WMIC远程进程创建，以便扩展其在网络中的访问。
尽管入侵总共持续了五天，但就在入侵的头两个小时，Cobalt
Strike和键盘操作者出现了。他们立即开始收集信息，使用网络命令了解情形。然后，他们继续通过执行PowerView模块`Invoke-ShareFinder`来查找打开的共享。
在收集和分析ShareFinder的结果后，他们似乎对组织的服务器和工作站布局有了很好的了解，因为他们开始执行命令从特定的高价值服务器收集信息。在此期间，当执行者未能更改特定参数时，我们发现了错误，这些参数说明执行者根据预定义的playbook进行操作。他们最终决定使用WMIC横向转向服务器以执行DLL。
一旦他们通过Cobalt Strike信标访问了远程服务器，他们就会重新运行Invoke ShareFinder，然后通过[MEGA cloud
storage service](https://mega.io/)使用Rclone应用程序从不同的服务器中过滤出有价值的数据.
第二天，攻击者使用RDP访问备份服务器，并在访问过程中通过`taskmanager GUI`查看备份设置和运行服务器上的进程。
第四天，攻击者再次使用Rclone和MEGA进行另一轮过滤。
第五天，他们迅速向最终目标迈进，那就是Conti勒索软件。在执行Conti之前，他们使用RDP安装和配置AnyDesk远程桌面应用程序。由于具有GUI访问权限，他们试图使用ProcessHacker投放LSASS进程。在这最后一步之后，他们通过批处理脚本将Conti勒索软件部署到所有加入域的系统中。
关于这个事件的一个有趣的事情是，我们没有发现攻击者与域控制器（DC）交互。但一般来说，大多数勒索软件事件都涉及到攻击者在DCs上执行代码。
## 时间线
由 [@Kostastsale](https://twitter.com/Kostastsale),
[@pigerlin](https://twitter.com/pigerlin), and
[@_pete_0](https://twitter.com/_pete_0) 完成分析和报告，由@TheDFIRReport 进行审查。
## MITRE ATT&CK
### 初始访问
感谢 [@James_inthe_box](https://twitter.com/James_inthe_box) 提供样本。
与以前记录的入侵一样，攻击者使用内嵌的Microsoft Word文档引诱用户启用宏来执行有效负载。用户会看到以下信息：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341321000-3lculj.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/f22784bc5813874c131d0c6f21acb3404084de7b57c0ae1f2afde6d8fe24c3a2)
查看文件时，我们可以看到标记为.doc文件的文件类型在查看文件属性时显示为XML。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341321000-4bmqns.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/48fd9c86e04ef1a61d214e6e64ef7c41e6bd9a14221fa1d46971fef9324d2af8)
更深入的检查显示Word 2003 XML格式和包含的宏。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341322000-5dtrxy.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/378c5988f8fc4afa0a81cabf543a41f1e299b701f952ad4077406bd2b7110731)
启用宏后，在下一阶段，将创建一个HTML应用程序（HTA）文件并将其放入用户文件夹：
对HTA文件的分析显示了编码HTML和JavaScript/VBScript代码的混合，更不用说文件开头的亵渎了。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341323000-6ocehw.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/b7eb0f03b4298506d506b3212d1bcc69972e2706249a5b9e535f6ea28d43a323)
随后执行HTA：
[
对HTA文件的分析显示了编码HTML和JavaScript/VBScript代码的混合。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341324000-8jblil.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/9c60564c3c931ab0997a0b1d1576ca09d0ddec29b331655cbcf13c77fb8a5f5a)
base64编码字符串可以解码为：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341324000-9emvzt.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/9f647bdcc95ed17b46e7e166bd80c79c85701cc53d2c98873bec3a897ce304f6)
代码将伪装成jpg的二进制文件（compareFor.jpg）从`millscruelg[.]com`下载到文件夹“c:\users\public”，并结合VBScript代码，利用REGSVR32执行此DLL。
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341325000-10yhsqf.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/beaa83c86c77ad8f3fe2ad4baa905b35933b1294af9f5631e80e60aafef312b3)
* * *
这将启动与`64.227.65[.]60:443`的连接，并调用`Svchost.exe`，然后查找`myexternalip[.]com`以检索网络的外部面向公众的IPv4地址。攻击者可以使用此信息验证目标网络和加强工具配置。通过RunDll32并使用Svchost进程加载了两个DLL。第一个是D574.dll：
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341325000-11yjajg.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/2de12905c5c982b4ae7876ef23c5594051efc03fb0bf0daaad84f480f773830c)
* * *
之后是 D8B3.dll:
![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341326000-12xbisz.png-w331s)
D8B3.dll注入Winlogon进程（高完整性）：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341326000-13nncem.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/157ab4613bc64d45aad39a06f7c9e1bbdac31afe3e1da5845f4e4dee593e2c11)
在D8B3.dll中，dll被编译。
这两个DLL都有无效证书，可以以任何失败/已吊销状态被检测到：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341326000-14mjwqb.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/44cd52c302739e02de041a7db50bc820f0d9b8bc8c948432f55a151e8935e618)
此外，每个DLL都没有与DLL相关的填充元数据：
![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341327000-15unyzk.png-w331s)
进程层次结构树图如下所示：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341327000-16dbxgv.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/927a09d2bb51e93a6abf163e97fbedc1cf09f76f333ec1a7e5a936345fffc8a5)
这与8月11日布拉德·邓肯对Bazarloader的[分析](https://isc.sans.edu/diary/rss/27738)非常相似。
### 持久性
我们发现在文件夹c:\users\\Videos下创建了AnyDesk应用程序，对于进程活动来说，这个位置是异常且可疑的。因为可移植可执行文件出现在非标准文件系统位置，这也方便了我们检测。
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341328000-17cndsk.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/7f72bf852b58de31e886393160e0dc14665c86c9863f90ac3b69bccc801d18cb)
* * *
[AnyDesk](https://anydesk.com/)是一个封闭源代码的远程桌面应用程序，可用于多种操作系统。它是免费供私人使用的。我们发现了AnyDesk应用程序向合法注册的IPv4范围发起的长连接。然而，在这些环节中，我们没有太有价值的发现。
### 凭证访问
ProcessHacker也被放在C:\的根目录中，可能用于访问LSASS进程。对于用户来说，他们并不常常使用ProcessHacker之类的实用程序，位于C:\root的应用程序在某些环境中也是可疑的。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341328000-18xsjcg.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/ae2d915c25b3741d2639c30c2c10417bf81fcadfdc2c417ba004a8ae6bc64b6e)
### 发现
通过使用RunDLL32和Winlogon进程，我们发现了许多典型的主机和网络发现命令，这些命令使用了net, nltest, tasklist and
time等技术。例子包括：
    tasklist /s 
    net group "domain admins" /dom
    net localgroup "administrator"
    nltest /domain_trusts /all_trusts
    net view /all /domain
    net view /all time
    ping
在运行其中一些命令时，出现了复制粘贴错误，表明操作者可能从运行手册上操作的，如8月份泄漏的Conti手册一样，在出现错误之后，可以通过 tasklist/s
IP 而不是实际的主机系统 IP 看到。
[
Cmd.exe进程使用不常见的父进程(如 RunDLL32.exe)调用了许多命令。
下面的例子使用 time 命令:
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341329000-20odwmy.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/b9c5ab4ca577c810f6fe15373ae4a2bcc3a79e790a788e0aaa44945ba1c5d6f1)
* * *
Red Canary为 rundll32提供了一个很好的检测指南; [本文](https://redcanary.com/threat-detection-report/techniques/RunDLL32/文档)涵盖了 rundll32的活动，例如命令减少、不寻常的繁殖活动等。
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341329000-21bacbs.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/4cf94e23abd22fa0ad6e718ca833baa0e0b530494c3309acc5d001bda83bdbaa)
* * *
发现命令调用：
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341330000-22lcapg.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/0279e95c4c33e2b33b3509e07e19811588d32c0488908f01d7c006cd0d963e03)
[AdFind](https://thedfirreport.com/2020/05/08/adfind-recon/)
通过二进制文件写入，但还没有发现执行的迹象。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341330000-23smlfd.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/e2869d1ae419f425ffa968640aab1a4db4e893e835136118f2a868727d5b2ee5)
文件共享枚举是使用PowerShell [Invoke-ShareFinder](https://github.com/darkoperator/Veil-PowerView/blob/master/PowerView/functions/Invoke-ShareFinder.ps1)
脚本（PowerView的一部分）实现的。
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341331000-24coioy.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/5e2b9072978174209ec9599d77e24814eb667a9a475a04d303a32627a73ad5b3)
输出文件是在`c:\ProgramData\found\u
shares.txt`创建的。在最近的其他[入侵](https://thedfirreport.com/2021/07/19/icedid-and-cobalt-strike-vs-antivirus/)中也观察到了该工具的使用。PowerShell由WinLogon进程调用，结果文件由Rundll32.exe创建。
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341331000-25lxtke.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/93ddd3e8229d05f00c11963ef5f11182f696d3d2907be284d0cbba1d30d62b5d)
* * *
在入侵的第二天，攻击者通过RDP和Cobalt Strike信标访问备份服务器，并打开其服务器上的备份控制台。
[
查看备份后，他们还通过GUI打开taskmanager（[由流程命令行中的/4指示](https://www.hexacorn.com/blog/2018/07/22/taskmgr-exe-slashing-numbers/))查看系统上正在运行的进程。
[
### 横向运动
攻击者在网络中的关键资产（此次入侵中的备份主机）上执行Cobalt Strike信标，使用以下命令 ：
* * *
[![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341332000-28fejsx.png-w331s)](https://thedfirreport.com/wp-content/uploads/2021/11/360da830c3f3842301f7b01e444953cbfc7c457d21206b1b712c8dda08094c72)
* * *
通过 WMI 调用 rundll32在目标主机上加载143.dll (Cobalt Strike 信标)实现远程进程执行:
![enter image description
here](https://images.seebug.org/content/images/2021/12/01/1638341333000-29abqre.png-w331s)