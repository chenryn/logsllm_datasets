### 优化后的文本

#### 探测器测量拥塞的假设
探测器测量拥塞的方法假设中间路由器的排队机制为先进先出（FIFO）。此外，我们可以保持多个OW Dmax（单向最大延迟）的估计值，在确定某个探测是否超过(1-α)× OW D阈值时取其均值。这样做可以有效地过滤掉在终端主机操作系统缓冲区或网络接口卡缓冲区中的数据包丢失，因为这些丢失不太可能与端到端网络拥塞和延迟相关。

#### 实验设置与参数选择
我们进行了一系列实验来评估丢失阈值参数的敏感性。通过使用不同的探测发送概率(p)，我们探索了α和τ的交叉组合。对于α，我们选择了0.025、0.05、0.10和0.20，这相当于队列的高水位分别为2.5毫秒、5毫秒、10毫秒和20毫秒。对于τ，我们选择了5毫秒、10毫秒、20毫秒、40毫秒和80毫秒。图9(a)显示了当τ固定为80毫秒，α分别取0.05、0.10和0.20（相当于5毫秒、10毫秒和20毫秒）时，在不同p值下的丢失频率结果。图9(b)则将α固定为0.10（10毫秒），同时让τ在20毫秒、40毫秒和80毫秒之间变化。如预期的那样，随着任一阈值的增加，估计的丢失频率也随之增加。丢失持续时间也表现出类似的趋势（未展示）。我们还发现，选择更高的探测率和更“宽松”的阈值之间存在权衡。对于τ来说，最佳值似乎出现在预计的探测间隔加上一到两个标准差左右。而最佳的α值则取决于探测率以及流量过程和多路复用的程度。

#### 不同流量场景下的实验结果
我们在三种不同的流量场景下进行了实验：恒定比特率(CBR)流量、随机损失时段的CBR流量以及Harpoon生成的类Web流量。对于所有流量场景，BADABING配置为每次探测发送3个大小为600字节的数据包，且每个探测中的三个数据包连续发送（间隔约30微秒）。对于每种探测率，我们将τ设置为预期的探测间隔加一个标准差。对于α，我们根据不同的探测率选择了不同的值：当探测率为0.1时，α为0.2；当探测率为0.3和0.5时，α为0.1；当探测率为0.7和0.9时，α为0.5。

#### 结果分析
我们的实验结果证实了§5.4中关于yi = 01的概率非常接近于yi = 10的概率这一假设。也就是说，实际测量中开始和结束丢失事件的可能性是相等的。因此，我们使用这两个yi值的平均值作为估计值。

表4展示了恒定比特率流量下均匀丢失时段的结果。除了p = 0.1的情况外，其他p值的丢失频率估计值都接近真实值。对于所有p值，估计的丢失持续时间都在真实值的25%范围内。

表5展示了具有随机丢失时段的恒定比特率流量的结果。总体结果与均匀丢失时段的情况相似。同样地，除了p = 0.1（即非常低影响的探测）外，丢失频率估计值接近真实值，且所有估计的丢失持续时间都在真实值的25%范围内。

表6展示了使用Harpoon生成的类Web流量的结果。由于Harpoon设计用于在相对较长的时间尺度上生成平均流量，实际丢失时段特征会有所变化。对于丢失频率，与恒定比特率流量场景一样，除了p = 0.1的情况外，估计值都非常接近。对于丢失持续时间，除了p = 0.3的情况外，所有估计值都在真实值的25%范围内。p = 0.3的估计值略超出这个范围。

从表4和表5可以看出，在不同p值范围内，BADABING估计的丢失频率呈现上升趋势。这种效应主要源于选择适当的α和τ参数的问题，类似于图9(a)和图9(b)中观察到的趋势。需要注意的是，这种趋势仅适用于行为良好的CBR流量源，在显著更为突发的Harpoon类Web流量中并不存在这种趋势（见表6）。对于丢失持续时间估计，没有这样的趋势。经验上，p的选择、α和τ的选择以及估计准确性之间存在复杂的关系。尽管我们在有限但现实的环境中考虑了多种流量条件，但我们尚未在更复杂的多跳场景和更广泛的交叉流量条件下探索这些关系。我们将在后续工作中建立更严格的BADABING参数选择标准。

最后，表7展示了旨在理解p值增加与N值增加之间的权衡关系的实验结果。我们选择了p = 0.1，并使用两种不同的τ值（40毫秒和80毫秒）。背景流量是简单的恒定比特率流量，具有均匀的丢失时段。结果显示，随着τ值的增加，频率和持续时间估计略有改善，但改进幅度不大。

#### 比较不同的丢包测量工具
最后一组实验比较了BADABING与ZING在恒定比特率流量和Harpoon类Web流量场景下的性能。我们将ZING的探测率设置为与BADABING在p = 0.3且数据包大小为600字节时的链路利用率相匹配，约为876 kb/s，占OC3瓶颈容量的0.5%。每个实验运行15分钟。表8总结了这些实验的结果，与§4中的结果相似。（该表包括表4和表6中的BADABING结果。）对于CBR流量，ZING测量的丢失频率接近真实值，但丢失持续时间不准确。对于类Web流量，ZING测量的丢失频率和丢失持续时间都不准确。

通过这些实验，我们验证了BADABING在不同流量场景下的有效性和鲁棒性，并为进一步研究提供了基础。