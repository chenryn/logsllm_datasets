size_t strspn(cs,ct)
返回字符串 cs 中包含 ct 中的字符的前缀的长度
size_t strcspn(cs,ct)
返回字符串 cs 中不包含 ct 中的字符的前缀的长度
char *strpbrk(cs,ct)
返回一个指针，它指向字符串 ct 中的任意字符第一
次出现在字符串 cs 中的位置;如果 cs 中没有与 ct
相同的字符，则返回 NULL
char *strstr(cs,ct)
返回一个指针，它指向字符串 ct 第一次出现在字符
串 cs 中的位置;如果 cs 中不包含字符串 ct，则返
回 NULL
size_t strlen(cs)
返回字符串 cs 的长度
char *strerror(n)
退回一个指针，它指向与错误编号 n 对应的错误信息
字符串(错误信息的具体内容与具体实现相关)
char *strtok(s,ct)
strtok 函数在 s 中搜索由 ct 中的字符界定的记号。
详细信息参见下面的讨论
对 strtok(s, ct)进行一系列调用，可以把字符串 s 分成许多记号，这些记号以 ct 中 的字符为分界符。第一次调用时，s 为非空。它搜索 s，找到不包含 ct 中字符的第一个记号， 将 s 中的下一个字符替换为'\0'，并返回指向记号的指针。随后，每次调用 strtok 函数时 (由 s 的值是否为 NULL 指示)，均返回下一个不包含 ct 中字符的记号。当 s 中没有这样的 记号时，返回 NULL。每次调用时字符串 ct 可以不同。
以 mem 开头的函数按照字符数组的方式操作对象，其主要目的是提供一个高效的函数接 口。在下表列出的函数中，s 和 t 的类型均为 void *，cs 和 ct 的类型均为 const void *， n 的类型为 size_t，c 的类型为 int(将被转换为 unsigned char 类型)。
void *memcpy(s,ct,n)
将字符串 ct 中的 n 个字符拷贝到 s 中，并返回 s
void *memmove(s,ct,n)
该函数的功能与 memcpy 相似，所不同的是，当对象重叠
时，该函数仍能正确执行
int memcmp(cs,ct,n)
将 cs 的前 n 个字符与 ct 进行比较，其返回值与 strcmp
的返回值相同
void *memchr(cs,c,n)
返回一个指针，它指向 c 在 cs 中第一次出现的位置。如果
cs 的前 n 个字符中找不到匹配，则返回 NULL
void *memset(s,c,n)
将 s 中的前 n 个字符替换为 c，并返回 s
B.4 数学函数:
头文件中声明了一些数学函数和宏。
宏 EDOM 和 ERANGE(在头文件中声明)是两个非 0 整型常量，用于指示函 数的定义域错误和值域错误;HUGE_VAL 是一个 double 类型的正数。当参数位于函数定义 的作用域之外时，就会出现定义域错误。在发生定义域错误时，全局变量 errno 的值将被设 置为 EDOM，函数的返回值与具体的实现相关。如果函数的结果不能用 double 类型表示，则 会发生值域错误。当结果上溢时，函数返回 HUGE_VAL，并带有正确的正负号，errpo 的值 将被设置为 ERANGE。当结果下溢时，函数返回 0，而 errno 是否设置为 ERANGE 要视具体
的实现而定。
在下表中，x 和 y 的类型为 double，n 的类型为 int，所有函数的返回值的类型均为 double。三角函数的角度用弧度表示。
sin(x)
x 的正弦值
cos(x)
x 的余弦值
tan(x)
x 的正切值
asin(x)
sin
•
1
 (x)，值域为[ π/ 2, π/ 2]，其中 xE[ • 1, 1]
acos(x)
cos
•
1
 (x)，值域为[0, π]，其中 xE[ • 1, 1]
atan(x)
tan
•
1
 (x)，值域为[ π/ 2, π/ 2]
atan2(y,x)
tan
•
1
 (y/x)，值域为[•π, π]
sinh(x)
x 的双曲正弦值
cosh(x)
x 的双曲余弦值
tanh(x)
x 的双曲正切值
exp(x)
军函数 e
x
log(x)
自然对数 ln(x)，其中 x>0
log10(x)
以 10 为底的对数 log
10
 (x)，其中 x>0
pow(x,y)
x
y
 。如果 x=0 且 y运0，或者 x
头文件中声明了一些执行数值转换、内存分配以及其它类似工作的函数。
double atof(const char *s)
atof 函数将 字符 串 s 转 换为 double 类 型。 该函 数等 价于 strtod ( s, (char**)NULL)。
int atoi(const char *s)
atoi 函数将字符串 s 转 换为 int 类型。 该函数等价 于 (int)strtol(s, (char**)NULL, 10)。
long atol(const char *s)
atol 函数将字符串 s 转换为 long 类型。该函数等价于 strtol(s, (char**)NULL, 10)。
double strtod(const char *s, char **endp)
strtod 函数将字符串 s 的前缀转换为 double 类型，并在转换时跳过 s 的前导空白符。 除了 endp 为 NULL，否则该函数将把指向 s 中未转换部分(s 的后缀部分)的指针保存在*endp 中。如果结果上溢，则函数返回带有适当符号 HUGE_VAL;如果结果下溢，则返回 0。在这两 种情况下，errno 都将被设置为 ERANGE。
long strtol(const char *s, char **endp, int base)
strtol 函数将字符串 s 的前缀转换为 long 类型，并在转换时跳过 s 的前导空白符。除 非 endp 为 NULL，否则该函数将把指向 s 中末转换部分(s 的后辍部分)的指针保存在*endp 中。如果 base 的取值在 236 之间，则假定输入是以该数为基底的;如果 base 的取值为 0， 则基底为八进制、十进制或十六进制。以 0 为前缀的是八进制，以 0x 或 0X 为前缀的是十六 进制。无论在哪种情况下。字母均表示 10base•1 之间的数字。如果 base 值是 16，则可 以加上前导 0x 或 0X。如果结果上溢，则函数根据结果的符号返回 LONG_MAX 或 LONG_MIN， 同时将 errno 的值设置为 ERANGE。
unsigned long strtoul(const char *s, char **endp, int base)
strtoul 函数的功能与 strtol 函数相同，但其结果为 unsigned long 类型，错误值 为 ULONG_MAX。
int rand(void)
rand 函数产生一个 0RAND_MAX 之间的伪随机整数。RAND_MAX 的取值至少为 32767。
void srand(unsigned int seed)
srand 函数将 seed 作为生成新的伪随机数序列的种子数。种子数 seed 的初值为 1。
void *calloc(size_t nobj, size_t size)
calloc 函数为由 nobj 个长度为 size 的对象组成的数组分配内存，并返回指向分配区 域的指针;若无法满足要求，则返回 NULL。该空间的初始长度为 0 字节。
void *malloc(size_t size)
malloc 函数为长度为 size 的对象分配内存，并返回指向分配区域的指针;若无法满足 要求，则返回 NULL。该函数不对分配的内存区域进行初始化。
void *realloc(void *p, size_t size)
realloc 函数将 p 指向的对象的长度修改为 size 个字节。如果新分配的内存比原内存 大，则原内存的内容保持不变，增加的空间不进行初始化。如果新分配的内存比原内存小， 则新分配内存单元不被初始化:realloc 函数返回指向新分配空间的指针;若无法满足要求， 则返回 NULL。在这种情况下，原指针 p 指向的单元内容保持不变。
void free(void *p)
free 函数释放 p 指向的内存空间。当 p 的值为 NULL 时，该函数不执行任何操作。P 必 须指向先前使用动态分配函数 malloe、realloc 或 calloc 分配的空间。
void abort(void)