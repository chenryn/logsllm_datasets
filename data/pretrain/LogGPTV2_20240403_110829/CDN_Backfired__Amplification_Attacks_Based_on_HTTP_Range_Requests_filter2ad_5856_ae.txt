### Evaluating RangeAmp Attacks

In our efforts to responsibly disclose the vulnerabilities and provide mitigation solutions, we have given related vendors approximately seven months to implement these measures before the publication of this paper. It is their responsibility to inform their customers about the vulnerabilities. Below, we summarize the responses from various CDN vendors:

- **Cloudflare**: Appreciated our work and discussed the vulnerabilities in detail. They acknowledged that the SBR attack relies on triggering cache misses, and suggested that customers could add a page rule to ignore query strings. However, this does not fundamentally solve the problem, as malicious and some normal customers may not follow this suggestion. Cloudflare will not implement our proposed mitigation solutions because they do not want to cache partial responses of certain resources. They maintain that their approach does not deviate from the specifications. Nonetheless, Cloudflare has improved its DDoS detection mechanism.

- **Huawei Cloud**: Evaluated the issue as a high-risk vulnerability and viewed it as a significant problem for the CDN industry. They actively contacted us to discuss defense strategies and have now fixed the related vulnerabilities.

- **CDN77**: Thanked us for our research and implemented a detection mechanism for overlapping ranges to defend against the OBR attack. Additionally, they are disabling the Range header to mitigate the SBR attack and are working on implementing slicing of range requests.

- **G-Core Labs**: Confirmed the existence of the vulnerabilities and contacted us to discuss mitigation options. To defend against the SBR attack, they enabled the "slice" option by default, which adopts the Laziness policy to handle the Range header.

- **Tencent Cloud**: Acknowledged that their implementation was vulnerable to the SBR attack and have now fixed it.

- **Akamai**: Acknowledged that the Azure case with Akamai is problematic. They stated that Azure configurations may override Akamai's origin configurations, and this issue should be addressed on the Azure side. Nevertheless, they committed to promptly investigating the problem.

- **CloudFront**: Admitted that their methods to optimize caching of range requests increase the bytes requested from the origin. They are investigating how to prevent multi-range requests from increasing traffic more than single-range requests. They also claimed to have safeguards to prevent excessive back-to-origin requests.

- **CDNsun**: Stated that they would mitigate the OBR attack by limiting the number of ranges or rejecting overlapping range requests. However, they did not have a proper technical solution for the SBR attack, despite our suggestions.

- **Fastly**: Expressed appreciation for our study and informed us that they are investigating to validate the attack scenarios, explore the effectiveness of existing mitigations, and develop new capabilities to manage the risk of this attack.

- **Azure**: Confirmed that the attack is feasible under certain circumstances. They insisted that if a customer configures options to ignore query strings, the attack can be mitigated. However, as discussed with Cloudflare, a malicious customer is unlikely to follow security best practices, and some normal customers may not either.

- **Alibaba Cloud**: Confirmed that their implementation is vulnerable to the SBR attack and are currently fixing it.

- **KeyCDN**: Thanked us for our report but claimed they were already aware of the issue.

### Response from the RFC Editor

We also contacted the editors of RFC7233 via email. Roy T. Fielding replied that it is the CDN's responsibility to manage its back-end behavior, regardless of the protocols used. He agreed that such attacks should be mentioned as a security consideration and suggested discussing this threat on the HTTP working group mailing list.

### Related Work

**HTTP Range Security**: To our knowledge, there is no academic literature discussing the security risks introduced by range requests in a CDN environment. The CVE platform lists about 20 vulnerabilities related to range requests, all of which involve improper implementations but are unrelated to CDNs. For example, CVE-2017-7529 [22] describes an integer overflow caused by Nginx's incorrect processing of the Range field, and CVE-2011-3192 [13] describes a DoS attack using multiple ranges to exhaust memory on the Apache server. Our RangeAmp attacks exploit asymmetrical traffic consumption in the front-end and back-end connections of a CDN, which is distinct from these vulnerabilities.

**CDN Security**: As a critical part of Internet infrastructure, CDN security has been well-researched. Attackers often aim to find the origin IP of a target website to bypass DDoS protection. Some methods based on information leaks can expose sensitive information about the origin server [6], [9]. In contrast, our RangeAmp attacks can directly nullify the DDoS protection provided by a vulnerable CDN and abuse the CDN to attack the origin server. Triukose et al. [5] proposed an attack to exhaust the origin server's bandwidth by rapidly dropping front-end connections. We found that most CDNs can mitigate this attack by breaking back-end connections when front-end connections are abnormally cut off. However, this defense is ineffective against RangeAmp attacks. Chen et al. [3] proposed forwarding-loop attacks, where an attacker can chain CDN nodes into a loop, reducing CDN availability. Our RangeAmp attacks present a novel method to perform amplification attacks against specific ingress nodes of CDNs. Studies have shown that the global distribution and massive nodes of a CDN can facilitate abuse by malicious customers [23]–[25]. CDN mappings between clients and surrogates can also be manipulated with crafted DNS records [26]. Compared to previous research, we propose a new class of amplification attacks and conduct a real-world security evaluation with 13 popular CDNs, providing a complement to existing CDN security research.

**Amplification Attacks**: Amplification attacks have been well-studied. Booth et al. [27] revealed that UDP servers can be recruited as reflectors, achieving an amplification factor of 556. Sieklik et al. [28] analyzed DNSSEC-based amplification attacks, leading to an amplification factor of 44. Anagnostopoulos et al. [29] studied the TFTP amplification attack with a factor of 60. Kührer et al. [30] provided an in-depth analysis of TCP reflection attacks across services like HTTP, MySQL, and POP3. Kührer et al. [31] also found that the NTP service can lead to an amplification factor of 4670. Krämer et al. [32] designed a honeypot to track and analyze these types of attacks. Compared to these studies, our RangeAmp attack can achieve a much larger amplification factor. More importantly, when a target website is hosted behind a CDN, the CDN can defend against all previously known amplification attacks. However, a RangeAmp attacker can nullify the DDoS protection provided by CDNs and cause severe damage to the CDN-hided website server. Our study reveals that the Range header can be exploited to perform a new class of amplification attacks against websites hosted on CDNs and the ingress nodes of CDNs, posing a severe threat to the Internet security ecosystem.

### Conclusion

We have presented the principles of the RangeAmp vulnerability and conducted a comprehensive study of its practicality. We found that all 13 tested CDNs are vulnerable. The unclear definition and security negligence in the specifications, combined with implementation flaws in CDNs, are the root causes. We believe that RangeAmp attacks pose severe threats to the serviceability of CDNs and the availability of websites. We hope our study provides insight into this vulnerability and helps potential victims fully understand it. In the short term, we suggest that CDNs and websites adopt one or more of the mitigation solutions discussed in our paper. In the long term, a more specific limit on range requests should be defined in future RFCs, especially for HTTP middle-boxes like CDNs.

### Acknowledgments

We express special thanks to our shepherd Marc Dacier and the anonymous reviewers for their insightful comments, which greatly improved our paper. We also thank the RFC7233 editor, Roy T. Fielding, and all related CDN vendors for their valuable feedback. Lastly, we gratefully acknowledge the help of our friend Wenchang Ma, who spent considerable time correcting our grammar mistakes.