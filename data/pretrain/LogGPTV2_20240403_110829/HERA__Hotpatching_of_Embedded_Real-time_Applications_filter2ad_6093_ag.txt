[5] D. Quarta, M. Pogliani, M. Polino, F. Maggi, A. M. Zanchettin, and
S. Zanero, “An experimental security analysis of an industrial robot
controller,” in IEEE Symposium on Security and Privacy (SP), IEEE,
2017. DOI: 10.1109/SP.2017.20.
E. Kovacs, “Cyberattack on german steel plant caused signiﬁcant
damage,” Security Week, vol. 18, 2014.
T. D. Maiziere, “Die Lage der IT-Sicherheit in Deutschland 2014,”
Bundesamt für Sicherheit in der Informationstechnik, 2014.
T. Gerace and H. Cavusoglu, “The critical elements of the patch
management process,” Communications of the ACM, 2009. DOI: 10.
1145/1536616.1536646.
[9] A. Nappa, R. Johnson, L. Bilge, J. Caballero, and T. Dumitras,
“The attack of the clones: A study of the impact of shared code on
vulnerability patching,” in IEEE Symposium on Security and Privacy
(SP), IEEE, 2015. DOI: 10.1109/SP.2015.48.
[8]
[10] M. Shahzad, M. Z. Shaﬁq, and A. X. Liu, “A large scale exploratory
analysis of software vulnerability life cycles,” in International Con-
ference on Software Engineering (ICSE), IEEE, 2012. DOI: 10.1109/
ICSE.2012.6227141.
[11] G. N. Ericsson, “Cyber security and power system communication–
essential parts of a smart grid infrastructure,” IEEE Transactions on
Power Delivery, 2010. DOI: 10.1109/TPWRD.2010.2046654.
15
[22]
[21]
[19]
[12] M. E. Segal and O. Frieder, “On-the-ﬂy program modiﬁcation: Systems
for a dynamic updating,” IEEE Software, 1993. DOI: 10 . 1109 / 52 .
199735.
[13] C. Giuffrida, C. Iorgulescu, G. Tamburrelli, and A. S. Tanenbaum, “Au-
tomating live update for generic server programs,” IEEE Transactions
on Software Engineering, 2017. DOI: 10.1109/TSE.2016.2584066.
[14] M. Payer and T. R. Gross, “Hot-patching a web server: A case study
of ASAP code repair,” in Annual Conference on Privacy, Security and
Trust (PST), IEEE, 2013. DOI: 10.1109/PST.2013.6596048.
[15] H. Chen, J. Yu, R. Chen, B. Zang, and P.-C. Yew, “POLUS: A pow-
erful live updating system,” in International Conference on Software
Engineering (ICSE), IEEE, 2007. DOI: 10.1109/ICSE.2007.65.
[16] A. Ramaswamy, S. Bratus, S. W. Smith, and M. E. Locasto, “Katana:
A hot patching framework for ELF executables,” in International
Conference on Availability, Reliability and Security (ARES), IEEE,
2010. DOI: 10.1109/ARES.2010.112.
[17] C. M. Hayden, E. K. Smith, M. Denchev, M. Hicks, and J. S. Foster,
“Kitsune: Efﬁcient, general-purpose dynamic software updating for
c,” in ACM SIGPLAN Conference on Object-Oriented Programming,
Systems, Languages, and Applications (OOPSLA), ACM, 2012. DOI:
10.1145/2384616.2384635.
[18] ARM, Arm Processors for the Widest Range of Devices–from Sensors
to Servers, 2020. [Online]. Available: https://www.arm.com/products/
silicon-ip-cpu (visited on 07/08/2020).
Eclipse Foundation, Iot developer survey 2019, 2019. [Online]. Avail-
able: https://outreach.eclipse.foundation/download-the-eclipse-iot-
developer-survey-results (visited on 07/06/2020).
[20] M. D. Schwartz, J. Mulder, J. Trent, and W. D. Atkins, “Control
system devices: Architectures and supply channels overview,” Sandia
Report SAND2010-5183, Sandia National Laboratories, Albuquerque,
New Mexico, 2010.
J. Goodacre and A. N. Sloss, “Parallelism and the ARM instruction set
architecture,” Computer, vol. 38, no. 7, 2005. DOI: 10.1109/MC.2005.
239.
S. Furber, “Computing without clocks: Micropipelining the arm pro-
cessor,” in Asynchronous Digital Circuit Design, Springer, 1995.
[23] ARM, “Cortex-M4 processor technical reference manual,” Revision:
r0p1, ARM 100166_0001_00_en, 2015. [Online]. Available: https : / /
static . docs . arm . com / 100166 / 0001 / arm _ cortexm4 _ processor _ trm _
100166_0001_00_en.pdf (visited on 12/16/2020).
J. Yiu, The Deﬁnitive Guide to ARM˝o Cortex˝o-M3 and Cortex˝o-M4
Processors. Elsevier Science, 2013, ISBN: 9780124079182.
Tensilica, Inc., “Xtensa instruction set architecture (isa) reference
manual,” RC-2010.1 Release, 2010.
Espressif Systems, “Esp8266ex datasheet,” Version 6.6, 2020.
[26]
[27] ——, “Esp32 series datasheet,” Version 3.4, 2020.
[28] ——, Espressif achieves the 100-million target for iot chip shipments,
2018. [Online]. Available: https : / / www . espressif . com / en / news /
Espressif _ Achieves _ the _ Hundredmillion _ Target _ for _ IoT _ Chip _
Shipments (visited on 11/02/2020).
[29] K. G. Shin and P. Ramanathan, “Real-time computing: A new discipline
of computer science and engineering,” in Proceedings of IEEE, Special
Issue on Real-Time Systems, IEEE, 1994.
[30] C. L. Liu and J. W. Layland, “Scheduling algorithms for multiprogram-
ming in a hard-real-time environment,” Journal of the ACM (JACM),
1973. DOI: 10.1145/321738.321743.
[31] O. Hahm, E. Baccelli, H. Petersen, and N. Tsiftes, “Operating systems
for low-end devices in the internet of things: A survey,” IEEE Internet
of Things Journal, 2016. DOI: 10.1109/JIOT.2015.2505901.
P. Hambarde, R. Varma, and S. Jha, “The survey of real time operating
system: Rtos,” in International Conference on Electronic Systems,
Signal Processing and Computing Technologies, IEEE, 2014. DOI: 10.
1109/ICESC.2014.15.
[33] AspenCore, 2019 embedded markets study, Mar. 2019. [Online]. Avail-
able: https : / / www. embedded . com / wp - content / uploads / 2019 / 11 /
EETimes_Embedded_2019_Embedded_Markets_Study.pdf (visited on
06/18/2020).
[34] C. Giuffrida and A. S. Tanenbaum, “A taxonomy of live updates,”
in Annual Conference of the Advanced School for Computing and
Imaging, 2010.
FreeRTOS, Over the air (ota) updates, 2020. [Online]. Available: https:
//www.freertos.org/ota/index.html (visited on 07/09/2020).
[36] K. Koscher, A. Czeskis, F. Roesner, S. N. Patel, T. Kohno, S. Check-
oway, D. McCoy, B. Kantor, D. Anderson, H. Shacham, and S. Savage,
“Experimental security analysis of a modern automobile,” in IEEE
[32]
[35]
[24]
[25]
[45]
Symposium on Security and Privacy (SP), IEEE, 2010. DOI: 10.1109/
SP.2010.34.
[39]
[37] K. Guk, G. Han, J. Lim, K. Jeong, T. Kang, E.-K. Lim, and J. Jung,
“Evolution of wearable devices with real-time disease monitoring for
personalized healthcare,” Nanomaterials, vol. 9, no. 6, p. 813, 2019.
[38] M. Rushanan, A. D. Rubin, D. F. Kune, and C. M. Swanson, “Sok:
Security and privacy in implantable medical devices and body area
networks,” in IEEE Symposium on Security and Privacy (SP), IEEE,
2014. DOI: 10.1109/SP.2014.40.
I. Mugarza, J. Parra, and E. Jacob, “Cetratus: A framework for
zero downtime secure software updates in safety-critical systems,”
in International Symposium on Industrial Embedded Systems (SIES),
IEEE, 2018. DOI: 10.1002/spe.2820.
[40] C. Zhang, W. Ahn, Y. Zhang, and B. R. Childers, “Live code update for
iot devices in energy harvesting environments,” in Non-Volatile Memory
Systems and Applications Symposium (NVMSA), IEEE, 2016. DOI: 10.
1109/NVMSA.2016.7547182.
[41] M. Wahler, S. Richter, and M. Oriol, “Dynamic software updates for
real-time systems,” in Workshop on Hot Topics in Software Upgrades
(HotSWUp), ACM, 2009. DOI: 10.1145/1656437.1656440.
[42] M. Wahler, S. Richter, S. Kumar, and M. Oriol, “Non-disruptive large-
scale component updates for real-time controllers,” in Workshops of the
IEEE International Conference on Data Engineering (ICDE), IEEE,
2011. DOI: 10.1109/ICDEW.2011.5767631.
[43] M. Wahler and M. Oriol, “Disruption-free software updates in automa-
tion systems,” in IEEE Emerging Technology and Factory Automation
(ETFA), IEEE, 2014. DOI: 10.1109/ETFA.2014.7005075.
[44] R. Zurawski, Embedded Systems Handbook. CRC press, 2005. DOI:
10.1201/9781420038163.
S. Holmbacka, W. Lund, S. Lafond, and J. Lilius, “Lightweight
framework for runtime updating of c-based software in embedded sys-
tems,” in Workshop on Hot Topics in Software Upgrades (HotSWUp),
USENIX Association, 2013.
[49]
[47]
[46] M. Payer, B. Bluntschli, and T. R. Gross, “Dynsec: On-the-ﬂy code
rewriting and repair,” in Workshop on Hot Topics in Software Upgrades
(HotSWUp), USENIX Association, 2013.
J. Kwon, J. Cho, and D. Park, “Function block-based robust ﬁrmware
update technique for additional ﬂash-area/energy-consumption over-
head reduction,” in International Symposium on Intelligent Signal
Processing and Communication Systems (ISPACS), IEEE, 2019. DOI:
10.1109/ISPACS48206.2019.8986373.
[48] Android Open Source Project, A/B (Seamless) System Updates, 2020.
[Online]. Available: https://www.arm.com/products/silicon-ip-cpu
(visited on 07/09/2020).
Espressif Systems, Over the air updates (ota), 2020. [Online]. Avail-
able: https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-
reference/system/ota.html (visited on 07/09/2020).
[50] H. Chen, R. Chen, F. Zhang, B. Zang, and P.-C. Yew, “Live updating
operating systems using virtualization,” in International Conference on
Virtual Execution Environments (VEE), ACM, 2006. DOI: 10 . 1145 /
1134760.1134767.
[51] G. Altekar, I. Bagrak, P. Burstein, and A. Schultz, “OPUS: online
patches and updates for security,” in USENIX Security Symposium,
USENIX Association, 2005.
STMicroelectronics, Stm32f446xc/e technical reference manual, 2019.
[Online]. Available: https://www.st.com/resource/en/data_brief/nucleo-
f446re.pdf (visited on 12/16/2020).
[53] C. Bormann, M. Ersue, and A. Keranen, “RFC 7228: Terminology for
constrained-node networks,” Internet Engineering Task Force (IETF),
vol. 7228, 2014. DOI: 10.17487/RFC7228.
FreeRTOS, GitHub - FreeRTOS, 2020. [Online]. Available: https : / /
github.com/FreeRTOS/FreeRTOS/tree/master (visited on 07/09/2020).
[55] Microsoft, SDL Process Guidance Version 5.2, 2012. [Online]. Avail-
able: https://www.microsoft.com/en-us/download/details.aspx?id=
29884 (visited on 07/21/2020).
[56] CVE-2018-16601. Available from MITRE, CVE-ID CVE-2018-16601.
2018. [Online]. Available: http://cve.mitre.org/cgi-bin/cvename.cgi?
name=CVE-2018-16601 (visited on 07/23/2020).
[57] O. Karliner, Freertos tcp/ip stack vulnerabilities
the details, 2018.
[Online]. Available: https://blog.zimperium.com/freertos-tcpip-stack-
vulnerabilities-details/ (visited on 07/23/2020).
L. Szekeres, M. Payer, T. Wei, and D. Song, “Sok: Eternal war in
memory,” in IEEE Symposium on Security and Privacy (SP), IEEE,
2013. DOI: 10.1109/SP.2013.13.
[52]
[54]
[58]
16
[59] D. Papp, Z. Ma, and L. Buttyán, “Embedded systems security: Threats,
vulnerabilities, and attack taxonomy,” in Annual Conference on Pri-
vacy, Security and Trust (PST), IEEE, 2015. DOI: 10.1109/PST.2015.
7232966.
JSOF-Tech, Ripple20 - 19 zero-day vulnerabilities ampliﬁed by the
supply chain, 2020. [Online]. Available: https://www.jsof-tech.com/
ripple20/ (visited on 07/14/2020).
[61] B. Wijnen, E. J. Hunt, G. C. Anzalone, and J. M. Pearce, “Open-source
[60]
[62]
[63]
syringe pump library,” PloS one, vol. 9, no. 9, 2014.
T. Abera, N. Asokan, L. Davi, J.-E. Ekberg, T. Nyman, A. Paverd,
A.-R. Sadeghi, and G. Tsudik, “C-FLAT: control-ﬂow attestation for
embedded systems software,” in ACM SIGSAC Conference on Com-
puter and Communications Security (CCS), ACM, 2016. DOI: 10.1145/
2976749.2978358.
Joy-IT, Heartbeat Sensor KY-039, 2018. [Online]. Available: http://
anleitung . joy - it . net / wp - content / uploads / 2018 / 11 / SEN - KY039 -
Manual.pdf (visited on 07/23/2020).
[70]
[69]
[68]
[64] D. Kushner, “The making of arduino,” IEEE Spectrum, vol. 26, 2011.
[65] A. Francillon and C. Castelluccia, “Code injection attacks on harvard-
architecture devices,” in ACM SIGSAC Conference on Computer and
Communications Security (CCS), ACM, 2008. DOI: 10.1145/1455770.
1455775.
[66] O. Aleph, “Smashing the stack for fun and proﬁt,” Phrack Magazine,
1996. [Online]. Available: http://www.shmoo.com/phrack/Phrack49/
p49-14.
[67] H. Shacham, “The geometry of innocent ﬂesh on the bone: Return-into-
libc without function calls (on the x86),” in ACM SIGSAC Conference
on Computer and Communications Security (CCS), 2007. DOI: 10 .
1145/1315245.1315313.
FreeRTOS, Labs 160919, 2016. [Online]. Available: https : / / www.
freertos.org/FreeRTOS-Labs/downloads/160919_FreeRTOS_Labs.zip
(visited on 07/23/2020).
T. Gu, C. Cao, C. Xu, X. Ma, L. Zhang, and J. Lu, “Javelus: A
low disruptive approach to dynamic software updates,” in Asia-Paciﬁc
Software Engineering Conference (APSEC), IEEE, 2012. DOI: 10.1109/
APSEC.2012.55.
F. Rommel, L. Glauer, C. Dietrich, and D. Lohmann, “Wait-free code
patching of multi-threaded processes,” in Workshop on Programming
Languages and Operating Systems, (SOSP), ACM, 2019. DOI: 10.1145/
3365137.3365404.
[71] K. Makris and R. A. Bazzi, “Immediate multi-threaded dynamic soft-
ware updates using stack reconstruction,” in USENIX Annual Technical
Conference, USENIX Association, 2009.
[72] C. Giuffrida, C. Iorgulescu, A. Kuijsten, and A. S. Tanenbaum, “Back
to the future: Fault-tolerant live update with time-traveling state trans-
fer,” in Large Installation System Administration Conference (LISA),
USENIX Association, 2013.
[73] H. Jeong, J. Baik, and K. Kang, “Functional level hot-patching platform
for executable and linkable format binaries,” in IEEE International
Conference on Systems, Man, and Cybernetics (SMC), IEEE, 2017.
DOI: 10.1109/SMC.2017.8122653.
[74] M. J. Park, D. K. Kim, W.-T. Kim, and S.-M. Park, “Dynamic software
updates in cyber-physical systems,” in International Conference on
Information and Communication Technology Convergence (ICTC),
IEEE, 2010. DOI: 10.1109/ICTC.2010.5674807.
[75] M. Felser, R. Kapitza, J. Kleinöder, and W. Schröder-Preikschat, “Dy-
namic software update of resource-constrained distributed embedded
systems,” in Embedded System Design: Topics, Techniques and Trends,
IFIP TC10, Springer, 2007. DOI: 10.1007/978-0-387-72258-0\_33.
I. Mugarza, A. Amurrio, E. Azketa, and E. Jacob, “Dynamic software
updates to enhance security and privacy in high availability energy
management applications in smart cities,” IEEE Access, 2019. DOI:
10.1109/ACCESS.2019.2905925.
[77] C. Salls, Y. Shoshitaishvili, N. Stephens, C. Kruegel, and G. Vigna,
“Piston: Uncooperative remote runtime patching,” in Annual Computer
Security Applications Conference (ACSAC), ACM, 2017. DOI: 10.1145/
3134600.3134611.
P. Chevochot and I. Puaut, “Scheduling fault-tolerant distributed hard
real-time tasks independently of the replication strategies,” in Interna-
tional Conference on Real-Time Computing Systems and Applications
(RTCSA), IEEE, 1999. DOI: 10.1109/RTCSA.1999.811280.
[79] R. Guerraoui and A. Schiper, “Software-based replication for fault
[76]
[78]
tolerance,” Computer, 1997. DOI: 10.1109/2.585156.