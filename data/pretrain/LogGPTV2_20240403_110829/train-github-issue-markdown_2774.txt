the Fourier transform have many properties.  
one is the following equation, regarding complex conjugation:  
$$ \widetilde{\overline{f(t)}} = \overline{\widetilde{f}(-\omega)} $$  
(where the overline indicates the complex conjugation and the tilde the
Fourier transform)  
and another one is this other equation, regarding time reversal:  
$$ F(x(-t)) = (F(x))(-\omega) $$  
(with the Fourier transform indicated by F)
let's start talking about the first equation.  
when checking this analytical property numerically, I find that it is verified
only for sequences with an odd number of samples, while with even numbers the
two terms (left and right) are shifted by one sample. this seems a bug. if you
do `numpy.roll(right, 1)` you obtain back the `left` term (within negligible
numerical errors).
the second properties is instead never correctly verified, since with both odd
and even numbers the two results appear to be shifted by one sample one with
respect to the other. this seems a bug to me.
I'm reporting those two bugs together, since I believe they are strictly
related.
with the following code you can reproduce those bugs.
    import numpy
    import matplotlib
    #matplotlib.use('Qt5Agg')
    from matplotlib import pyplot
    """
    check complex conjugation
    $\widetilde{\overline{f(t)}} = \overline{\widetilde{f}(-\omega)}$
    """
    length = 1024
    complex_data = numpy.random.normal(size=length) + 1j*numpy.random.normal(size=length)
    left = numpy.fft.fftshift(numpy.fft.fft(numpy.conjugate(complex_data)))
    right = numpy.conjugate(numpy.flip(numpy.fft.fftshift(numpy.fft.fft(complex_data))))
    print(numpy.isclose(left, right, atol=0.00001).all())
    pyplot.plot(abs(left), label='abs(left)')
    pyplot.plot(abs(right), label='abs(right)')
    pyplot.legend()
    pyplot.show()
    # with length=1023 everything is ok, but with length=1024 there is a shift of one sample. if you zoom the plot you can clearly see it. it can be resolved with numpy.roll(abs(right), 1)
    ##############################
    """
    check time reversal
    $F(x(-t)) = (F(x))(-\omega)$
    """
    left = numpy.fft.fftshift(numpy.fft.fft(numpy.flip(complex_data)))
    right = numpy.flip(numpy.fft.fftshift(numpy.fft.fft(complex_data)))
    print(numpy.isclose(left, right, atol=0.00001).all())
    pyplot.plot(abs(left), label='abs(left)')
    pyplot.plot(abs(right), label='abs(right)')
    pyplot.legend()
    pyplot.show()
    # both with length=1023 and length=1024 there is a shift of one sample. if you zoom the plot you can clearly see it. it can be resolved with numpy.roll(abs(right), 1)
Numpy/Python version information:
    import sys, numpy
    print(numpy.__version__)
    print(sys.version)
    >>> 1.15.3
    >>> 3.6.7 |Anaconda custom (64-bit)| (default, Oct 23 2018, 19:16:44) [GCC 7.3.0]