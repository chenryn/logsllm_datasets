jnxCustomMibRoot, jnxCustomSyslogNotifications
FROM JUNIPER-SMI
ifName
FROM IF-MIB
;
jnxExampleCustomSyslog MODULE-IDENTITY
LAST-UPDATED "201711270000Z"
ORGANIZATION "Juniper Networks, Inc."
CONTACT-INFO
"Juniper Technical Assistance Center
Juniper Networks, Inc.
1133 Innovation Way
Sunnyvale, CA 94089
E-mail: PI:EMAIL"
DESCRIPTION
"Example MIB objects for custom syslog"
503
REVISION "201711270000Z"
DESCRIPTION
"Initial draft"
::= { jnxCustomMibRoot 1 }
jnxExampleCustomSyslogMessage OBJECT-TYPE
SYNTAX OCTET STRING
MAX-ACCESS accessible-for-notify
STATUS current
DESCRIPTION
"The syslog message string."
::= { jnxExampleCustomSyslog 1 }
jnxExampleCustomSyslogInteger OBJECT-TYPE
SYNTAX Integer32
MAX-ACCESS accessible-for-notify
STATUS current
DESCRIPTION
"Example OID for adding custom Integer OID"
::= { jnxExampleCustomSyslog 2 }
jnxExampleSyslogTrap1 NOTIFICATION-TYPE
OBJECTS { jnxExampleCustomSyslogMessage }
STATUS current
DESCRIPTION
"This TRAP is reserved to be sent when event 1 occurs"
::= { jnxCustomSyslogNotifications 1 }
jnxExampleSyslogTrap2 NOTIFICATION-TYPE
OBJECTS { jnxExampleCustomSyslogInteger, jnxExampleCustomSyslogMessage }
STATUS current
DESCRIPTION
"This TRAP is reserved to be sent when event 2 occurs"
::= { jnxCustomSyslogNotifications 2 }
jnxExampleSyslogTrap3 NOTIFICATION-TYPE
OBJECTS { ifName, jnxExampleCustomSyslogMessage }
STATUS current
DESCRIPTION
"This TRAP is reserved to be sent when event 3 occurs"
::= { jnxCustomSyslogNotifications 3 }
504
END
JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB.yang
/*
* This YANG module has been generated by smidump 0.5.0:
*
* smidump -f yang JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB
*
* Do not edit. Edit the source file instead!
*/
module JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB {
namespace "urn:ietf:params:xml:ns:yang:smiv2:JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB";
prefix "juniper-example";
import IF-MIB {
prefix "if-mib";
}
import JUNIPER-SMI {
prefix "juniper-smi";
}
import ietf-yang-smiv2 {
prefix "smiv2";
}
organization
"Juniper Networks, Inc.";
contact
"Juniper Technical Assistance Center
Juniper Networks, Inc.
1133 Innovation Way
Sunnyvale, CA 94089
E-mail: PI:EMAIL";
description
"Example MIB objects for custom syslog";
505
revision 2017-11-27 {
description
"Initial draft";
}
container JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB {
config false;
}
notification jnxExampleSyslogTrap1 {
description
"This TRAP is reserved to be sent when event 1 occurs";
smiv2:oid "1.3.6.1.4.1.2636.4.30.1";
container object-1 {
leaf jnxExampleCustomSyslogMessage {
type binary;
description
"The syslog message string.";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.1";
}
}
}
notification jnxExampleSyslogTrap2 {
description
"This TRAP is reserved to be sent when event 2 occurs";
smiv2:oid "1.3.6.1.4.1.2636.4.30.2";
container object-1 {
leaf jnxExampleCustomSyslogInteger {
type int32;
description
"Example OID for adding custom Integer OID";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.2";
}
}
506
container object-2 {
leaf jnxExampleCustomSyslogMessage {
type binary;
description
"The syslog message string.";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.1";
}
}
}
notification jnxExampleSyslogTrap3 {
description
"This TRAP is reserved to be sent when event 3 occurs";
smiv2:oid "1.3.6.1.4.1.2636.4.30.3";
container object-1 {
leaf ifIndex {
type leafref {
path "/if-mib:IF-MIB/if-mib:ifTable/if-mib:ifEntry/if-mib:ifIndex";
}
}
leaf ifName {
type leafref {
path "/if-mib:IF-MIB/if-mib:ifTable/if-mib:ifEntry/if-mib:ifName";
}
}
}
container object-2 {
leaf jnxExampleCustomSyslogMessage {
type binary;
description
"The syslog message string.";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.1";
}
}
507
}
smiv2:alias "jnxExampleCustomSyslog" {
smiv2:oid "1.3.6.1.4.1.2636.3.86.1";
}
}
Limitations of Using Custom SNMP Traps
Be careful to write the event scripts in such a way that they won’t trigger traps for frequently occurring
syslogs. This practice avoids introducing more load on the device.
If you add an object whose access type is readonly or readwrite, that object will not be available for polling
in snmp polling operations such as snmpget or snmpwalk; it will be treated as access type notifyonly. This
is because this feature is for adding dynamic TRAP OID definitions to the device so that customer can
write scripts to send custom traps for each syslog. Access types readonly and readwrite are for snmp
polling, whereas notifyonly is for traps.
For custom MIBs, the definition of a custom table is not supported. If you want to send a trap that has a
table object as a varbind, use the already defined table in Junos MIBs rather than defining a custom
table in your custom MIB.
The YANG file needs to be loaded on all the chassis nodes and Routing Engines separately. The request
system yang add command does not automatically copy it to backup Routing Engine.
Example Custom Syslog Trap
This example custom syslog trap illustrates a use case in which the operator wants to receive traps when
either of the following occur:
• A user enters the configuration mode in the CLI (event defined as ui_dbase_login_event)
• A user does a commit (event defined as ui_commit)
Before the custom syslog trap feature was supported, the only way to do this was to use jnxSyslogTrap,
which has a fixed OID, for both events. With the custom syslog trap feature, you can now generate traps
that have custom defined OIDs.
To define a custom syslog trap:
508
1. Use the sample file provided and convert it to JUNIPER-EXAMPLE-CUSTOM-SYSLOIG-MIB.yang .
smidump -p mib-jnx-smi.txt mib-jnx-example-custom-syslog.txt -f yang -o JUNIPER-EXAMPLE-
CUSTOM-SYSLOG-MIB.yang
2. Copy the YANG file onto your device.
3. Load the SNMP YANG file.
root@host> request system yang add snmp package p1 module ~/JUNIPER-EXAMPLE-CUSTOM-SYSLOG-
MIB.yang
4. Copy the slax script to /var/db/scripts/event to spoof the trap .
For ui_dbase_login_event, you will configure the enteredConfigMode trap which has the username
varbind.
For ui_commit, you will configure the configCommitted trap which has the username command an
comment as three varbinds.
5. Configure the trap:
set event-options policy custom-trap events ui_dbase_login_event
set event-options policy custom-trap events ui_commit
set event-options policy custom-trap then event-script custom-trap.slax
set event-options event-script file custom-trap.slax
6. Enable snmpd traceoptions and trap target to verify the traps that are sent.
set snmp trap-group trap-group targets ip-address
set snmp traceoptions flag all
7. Verify trap is working.
Sample MIB file
-- *******************************************************************
-- Juniper enterprise specific custom syslog MIB.
--
-- Copyright (c) 2002-2004, 2006, Juniper Networks, Inc.
-- All rights reserved.
--
-- The contents of this document are subject to change without notice.
509
-- *******************************************************************
JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB DEFINITIONS ::= BEGIN
IMPORTS
MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE
FROM SNMPv2-SMI
jnxCustomMibRoot, jnxCustomSyslogNotifications
FROM JUNIPER-SMI
;
jnxExampleCustomSyslog MODULE-IDENTITY
LAST-UPDATED "201806220000Z"
ORGANIZATION "Juniper Networks, Inc."
CONTACT-INFO
"Juniper Technical Assistance Center
Juniper Networks, Inc.
1133 Innovation Way
Sunnyvale, CA 94089
E-mail: PI:EMAIL"
DESCRIPTION
"Example MIB objects for custom syslog"
REVISION "201806220000Z"
DESCRIPTION
"Initial draft"
::= { jnxCustomMibRoot 1 }
username OBJECT-TYPE
SYNTAX OCTET STRING
MAX-ACCESS accessible-for-notify
STATUS current
DESCRIPTION
"Username"
::= { jnxExampleCustomSyslog 1 }
command OBJECT-TYPE
SYNTAX OCTET STRING
MAX-ACCESS accessible-for-notify
STATUS current
DESCRIPTION
"Executed command"
::= { jnxExampleCustomSyslog 2 }
510
comment OBJECT-TYPE
SYNTAX OCTET STRING
MAX-ACCESS accessible-for-notify
STATUS current
DESCRIPTION
"Additional comment"
::= { jnxExampleCustomSyslog 3 }
enteredConfigMode NOTIFICATION-TYPE
OBJECTS { username }
STATUS current
DESCRIPTION
"This TRAP is sent when a user enteres config mode. "
::= { jnxCustomSyslogNotifications 1 }
configCommitted NOTIFICATION-TYPE
OBJECTS { username, command, comment }
STATUS current
DESCRIPTION
"This TRAP is sent when a user does config commit"
::= { jnxCustomSyslogNotifications 2 }
END
Sample YANG Converted File
/*
* This YANG module has been generated by smidump 0.5.0:
*
* smidump -f yang JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB
*
* Do not edit. Edit the source file instead!
*/
module JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB {
namespace "urn:ietf:params:xml:ns:yang:smiv2:JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB";
prefix "juniper-example";
import JUNIPER-SMI {
prefix "juniper-smi";
}
511
import ietf-yang-smiv2 {
prefix "smiv2";
}
organization
"Juniper Networks, Inc.";
contact
"Juniper Technical Assistance Center
Juniper Networks, Inc.
1133 Innovation Way
Sunnyvale, CA 94089
E-mail: PI:EMAIL";
description
"Example MIB objects for custom syslog";
revision 2018-06-22 {
description
"Initial draft";
}
container JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB {
config false;
}
notification enteredConfigMode {
description
"This TRAP is sent when a user enteres config mode. ";
smiv2:oid "1.3.6.1.4.1.2636.4.30.1";
container object-1 {
leaf username {
type binary;
description
"Username";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.1";
}
}
512
}
notification configCommitted {
description
"This TRAP is sent when a user does config commit";
smiv2:oid "1.3.6.1.4.1.2636.4.30.2";
container object-1 {
leaf username {
type binary;
description
"Username";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.1";
}
}
container object-2 {
leaf command {
type binary;
description
"Executed command";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.2";
}
}
container object-3 {
leaf comment {
type binary;
description
"Additional comment";
smiv2:max-access "accessible-for-notify";
smiv2:oid "1.3.6.1.4.1.2636.3.86.1.3";
}
}
}
smiv2:alias "jnxExampleCustomSyslog" {
smiv2:oid "1.3.6.1.4.1.2636.3.86.1";
513
}
}
slax Script cutom_trap.slax (in /var/db/scripts/event)
version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";
match / {
 {
expr jcs:syslog("external.warning",event-script-input/trigger-event/id);
var $id = event-script-input/trigger-event/id;