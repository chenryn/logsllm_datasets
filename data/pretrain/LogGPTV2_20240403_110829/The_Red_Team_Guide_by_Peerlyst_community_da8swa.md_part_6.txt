    the promise of an item or good that
    [hackers](https://www.peerlyst.com/tags/hackers) use to entice
    victims
-   **Impersonation:** is an act of pretending to be another person for
    the purpose of
    [entertainment](https://www.peerlyst.com/tags/entertainment) or
    fraud.
-   **Tailgating:** a common type of *tailgating attack*, a person
    impersonates a delivery
    [driver](https://www.peerlyst.com/tags/driver) and waits outside a
    building. When an employee gains security\'s approval and opens
    their door,
-   **Dumpster Diving**: is searching through the trash for obvious
    treasures like [access](https://www.peerlyst.com/tags/access) codes
    or [passwords](https://www.peerlyst.com/tags/passwords) written down
    on sticky notes.
-   **Phishing**: [Phishing
    scams](https://www.peerlyst.com/tags/phishing-scams) might be the
    most common types of social engineering attacks used today
-   **Shoulder surfing**: is the
    [practice](https://www.peerlyst.com/tags/practice) of
    [spying](https://www.peerlyst.com/tags/spying) on the user of a
    cash-dispensing machine or another electronic
    [device](https://www.peerlyst.com/tags/device) in order to obtain
    their personal identification number,
    [password](https://www.peerlyst.com/tags/password), etc.
## Phases of Social Engineering
To perform Social engineering you need to follow well-defined steps:
1.  [Information
    gathering](https://www.peerlyst.com/tags/information-gathering)
    about the target
2.  [Victim](https://www.peerlyst.com/tags/victim) Selection
3.  Engagement with the selected victim
4.  Collecting information from the victim
## Social Engineering with Kali Linux
By now, we acquired a fair understanding of Social engineering and
theoretically how to perform it. It is
[time](https://www.peerlyst.com/tags/time) to put what we learned into
the test and practice what we learn using many
[open](https://www.peerlyst.com/tags/open-source)
[source](https://www.peerlyst.com/tags/open-source)
[scripts](https://www.peerlyst.com/tags/scripts) and [Kali
Linux](https://www.peerlyst.com/tags/kali-linux) tools. As discussed
before information gathering is a required step in social engineering.
We already explored information gathering in many
[Peerlyst](https://www.peerlyst.com/tags/peerlyst) posts so, I think we
need to dive in directly into how to perform social engineering.
## Social-Engineering Toolkit
[Social engineering
Toolkit](https://www.peerlyst.com/tags/social-engineering-toolkit) is an
amazing open source [project](https://www.peerlyst.com/tags/project)
developed by **Trustedsec** to help
[penetration](https://www.peerlyst.com/tags/penetration) testers and
ethical hackers perform social engineering attacks. To check the project
official [GitHub
repository](https://www.peerlyst.com/tags/github-repository) you can
visit this link:
[[https://github.com/trustedsec/social-engineer-toolkit]{.underline}](https://github.com/trustedsec/social-engineer-toolkit)
In this article we are using Kali
[Linux](https://www.peerlyst.com/tags/linux) as a
[distribution](https://www.peerlyst.com/tags/distribution), so there is
no need to install while it is already installed in Kali Linux.
To run the [toolkit](https://www.peerlyst.com/tags/toolkit) just open
the terminal and run **setoolkit**
![](media/image39.png)To start using the social engineering toolkit you
can select one of the following options.
![](media/image40.png)![](media/image41.png)If we want to perform a
social engineering [attack](https://www.peerlyst.com/tags/attack) type 1
![](media/image42.png)You will find many Computer-based [Social
engineering
techniques](https://www.peerlyst.com/tags/social-engineering-techniques)
you can choose from. Let's suppose that we want to create a
[Facebook](https://www.peerlyst.com/tags/facebook) phishing website.
Select **Credential Harvester Attack Method**
and then **Site Cloner.** Enter all the required info and options (The
[URL](https://www.peerlyst.com/tags/url) to clone and so on)
## ![](media/image43.png)Summary
In this post, we explored the fundamentals of Social Engineering and
some of its techniques (Human and computer-based). Later we practice
what we learned using many useful scripts and Kali Linux tools.
## References and Further Readings:
-   [SEEF](https://www.peerlyst.com/tags/seef) definition of Social
    Engineering: \"The elicitation of information from
    [systems](https://www.peerlyst.com/tags/systems),
    [networks](https://www.peerlyst.com/tags/networks) or human beings
    through methods and tools\" :
    [[https://seef.reputelligence.com/]{.underline}](https://seef.reputelligence.com/)
-   Dr. Robert Cialdini's 6 [Principles of
    Persuasion](https://www.peerlyst.com/tags/principles-of-persuasion)
    (Over 60+ Examples
    Inside!):[[https://www.referralcandy.com/blog/persuasion-marketing-examples/]{.underline}](https://www.referralcandy.com/blog/persuasion-marketing-examples/)
-   5 Social Engineering Attacks to Watch Out For:
> [[https://www.tripwire.com/state-of-security/security-awareness/5-social-engineering-attac]{.underline}](https://www.tripwire.com/state-of-security/security-awareness/5-social-engineering-attacks-to-watch-out-for/)
> [[ks-to-watch-out-for/]{.underline}](https://www.tripwire.com/state-of-security/security-awareness/5-social-engineering-attacks-to-watch-out-for/)
>
> Chapter 7
>
> **Bypassing Windows User Account Control**
>
> Contributor: Ian Barwise
### ![](media/image44.jpeg)[TpmInitUACBypass](http://seclist.us/tpminituacbypass-a-tool-to-bypass-user-account-controluac-on-windows-8-1-x64-windows-10-x64.html) a Windows UAC Bypass Tool
> *"The greatest victory is that which requires no battle."*
-   #### Sun Tzu, The Art of War
Look at you go with your badass
[hacker](https://www.peerlyst.com/tags/hacker) self, just
hackity-hack-hackin' away. As the quote from Sun Tzu's Art of
[War](https://www.peerlyst.com/tags/war) suggests, however, if you can
defeat your opponent without a fight or little-to-no effort then that
indeed is a great accomplishment. As a hacker, you should pride yourself
in unconventional [thinking](https://www.peerlyst.com/tags/thinking) and
being to solve challenges such as achieving system
[access](https://www.peerlyst.com/tags/access)via the easiest and most
direct route. There are times for taking the long road, such as
when attempting to avoid
[intrusion](https://www.peerlyst.com/tags/intrusion) detection. Other
times, it is entirely about the speed of action and getting in and out
as quickly as possible. It comes down to knowing your target and
[operating](https://www.peerlyst.com/tags/operating) environment. At
this point in the [process](https://www.peerlyst.com/tags/process),
you've likely already conducted your
[Open](https://www.peerlyst.com/tags/open-source)
[Source](https://www.peerlyst.com/tags/open-source) Intelligence (OSINT)
[reconnaissance](https://www.peerlyst.com/tags/reconnaissance) of the
target; you've performed some
[enumeration](https://www.peerlyst.com/tags/enumeration) on the target;
and you've conducted external,
[host](https://www.peerlyst.com/tags/host), and internal reconnaissance
along with custom-tailored [social engineering
attacks](https://www.peerlyst.com/tags/social-engineering-attacks)
against your target. Throughout all of these steps,
hopefully somewhere along the way your hard work paid off, and you were
able to gain access to the target system(s). Perhaps you were only able
to [compromise](https://www.peerlyst.com/tags/compromise) the
[credentials](https://www.peerlyst.com/tags/credentials) of a basic user
account though, so what can you do to get around not having local admin
[rights](https://www.peerlyst.com/tags/rights) due to User Account
Control? Enter the niche realm of [UAC
bypass](https://www.peerlyst.com/tags/uac-bypass) [privilege
escalation](https://www.peerlyst.com/tags/privilege-escalation)
techniques.
***User Account Control*** is a
[Windows](https://www.peerlyst.com/tags/windows)
[OS](https://www.peerlyst.com/tags/os) security feature that enables a
normal user to perform limited
[administrator](https://www.peerlyst.com/tags/administrator) functions
if they've been granted the authority to do so and serves a secondary,
albeit equally important purpose, of preventing normal
[users](https://www.peerlyst.com/tags/users) from performing specific
actions that could pose a [security
risk](https://www.peerlyst.com/tags/security-risk) to the system by
requiring users to have administrator-level permissions to perform
specific functions. [Microsoft](https://www.peerlyst.com/tags/microsoft)
created [UAC](https://www.peerlyst.com/tags/uac) as an additional
[security control](https://www.peerlyst.com/tags/security-control)
feature designed to limit the propagation of
[malware](https://www.peerlyst.com/tags/malware) and keep users from
wreaking havoc in the system. Need to install a program, but Windows
won't allow you because you're not an administrator? Welcome to User
[Account Control](https://www.peerlyst.com/tags/account-control) (UAC).
Depending on whether
[administrators](https://www.peerlyst.com/tags/administrators) have
enabled UAC and how it is configured,
[applications](https://www.peerlyst.com/tags/applications) that require
an administrator [access
token](https://www.peerlyst.com/tags/access-token) must prompt the user
for consent by an Admin account.
> ![](media/image45.jpeg)Typical Windows UAC dialogue message, a.k.a.,
> "Hey there user, whatcha doin'?"
Of [course](https://www.peerlyst.com/tags/course), for security reasons
enabling UAC to detect
[application](https://www.peerlyst.com/tags/application) installations
and prompt for elevation to prevent regular user accounts from
installing [unauthorized
software](https://www.peerlyst.com/tags/unauthorized-software) on
clients is a [best
practice](https://www.peerlyst.com/tags/best-practice-1) within Windows
OS environments. A complete lesson on how UAC works is beyond the scope
of this chapter other than to provide the UAC
[architecture](https://www.peerlyst.com/tags/architecture)
[diagram](https://www.peerlyst.com/tags/diagram) (below) and to tell you
that UAC is an access token-based system where administrator accounts
([Security](https://www.lifewire.com/what-is-an-sid-number-2626005)
[Identifier or
SID-500](https://www.lifewire.com/what-is-an-sid-number-2626005) which
end in 500 denotes the admin account; 501 denotes the guest account,
etc.) have full-access tokens issued upon successful
[login](https://www.peerlyst.com/tags/login) and
[standard](https://www.peerlyst.com/tags/standard) users do not.
> ![](media/image46.jpeg)Credit:
> [Microsoft](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works)
Several unique Windows UAC bypasses have been published. Depending on
how UAC is enabled on the target system, you may still work. There's
also the possibility that some UAC bypasses have not been discovered yet
(like Easter eggs) and there are probably others that are being held
onto by attackers or organizations to be used at a later
[time](https://www.peerlyst.com/tags/time) strategically for
nation-state computer [network](https://www.peerlyst.com/tags/network)
[espionage](https://www.peerlyst.com/tags/espionage) (CNE), computer
[network attack](https://www.peerlyst.com/tags/network-attack) (CNA), or
[cybercrime](https://www.peerlyst.com/tags/cybercrime) exploits.
The following meager list of UAC bypasses is by no means meant to be an
exhaustive list, but rather just a few of them to whet your appetite.
Further research on this topic is in your best interest if you're going
to be a successful Red Teamer and you might encounter a Windows OS in
which UAC is not enabled to protect against these
[vulnerabilities](https://www.peerlyst.com/tags/vulnerabilities) or
where the primary user is a local admin account by default. Some UAC
bypasses are very simple to perform, others not so much. Tailor
expectations to your [skill](https://www.peerlyst.com/tags/skill) and
[knowledge](https://www.peerlyst.com/tags/knowledge) level. The bypasses
I've listed here are fairly easy. Achieving local admin in a Windows OS
environment has become quite trivial thanks to Microsoft continually
[writing](https://www.peerlyst.com/tags/writing)
[insecure](https://www.peerlyst.com/tags/insecure)
[code](https://www.peerlyst.com/tags/code) that is often left wide open
for [exploitation](https://www.peerlyst.com/tags/exploitation)
[of](https://www.peerlyst.com/tags/exploitation) common user
[functionality](https://www.peerlyst.com/tags/functionality) purposes.
For a [UAC bypass](https://www.peerlyst.com/tags/bypass) to be
successful the following components need to be met:
-   An intermediate-level
    [integrity](https://www.peerlyst.com/tags/integrity) process.
-   Login credentials acquired for a standard user account belonging to
    an administrators group on the system.
-   The [Windows
    executable](https://www.peerlyst.com/tags/windows-executable) must
    be signed by Microsoft [code
    signing](https://www.peerlyst.com/tags/code-signing) certificate.
-   Windows [executable](https://www.peerlyst.com/tags/executable) must
    be located in a [secure](https://www.peerlyst.com/tags/secure)
    directory.
-   Windows executable also must specify the auto-elevate property in
    their manifest.
## Windows UAC Bypasses
Bypassing UAC is similar to picking a
[lock](https://www.peerlyst.com/tags/lock) to achieve privilege
escalation.
> ![](media/image47.jpeg)
Credit: [Sparrows Lock Picks](https://www.sparrowslockpicks.com/)
1.  This particular Windows UAC bypass is courtesy of [Dhiraj
    Mishra](https://www.peerlyst.com/posts/windows-uac-bypass-dhiraj-mishra?trk=search_page_search_result)
    and is super easy to execute (it can be done in less than 30
    seconds).
    -   In the Windows Run prompt type: *netplwiz.exe*;
    -   Select the "*Advanced*" tab;
    -   Select the "*Advanced*" option on the Advanced [user
        management](https://www.peerlyst.com/tags/user-management)
        section;
    -   The Local Users and Groups (Local) box will open; Select "*Help
        Topics*;"
    -   Right-click and select "*View Source*;"
    -   Select "*File*," "*Open*;"
    -   Navigate to *"Computer\>\>Local Disk
        (C:)\>\>Windows\>\>System32;"*
    -   Change selection to *"All Files;"*
    -   Find and select *"Cmd.exe;"*
    -   ![](media/image48.jpeg)Right-click *"Cmd.exe"* and select *"Run
        as administrator."* Voila! Prestidigitation. An administrator
        [Cmd](https://www.peerlyst.com/tags/cmd) Prompt appears.
I verified that this particular UAC bypass still works on the latest
[Windows 10](https://www.peerlyst.com/tags/windows-10) build as the date
of this publication, but as some have noted it will not work depending
on how UAC is enabled on the system as long as "always notify" was not
set by the administrator.
## Fileless UAC bypass.
[German](https://www.peerlyst.com/tags/german) Masters student Christian
B. is credited with discovering the
*"[fodhelper.exe](https://www.bleepingcomputer.com/news/security/windows-10-uac-bypass-uses-apps-and-features-utility/)"*
UAC bypass. The *"fodhelper.exe"* program allows users to manage
optional [features](https://www.peerlyst.com/tags/features) within the
Windows Settings "Apps & Features" screen. The bypass, which is similar
to a previously published *"eventvwr.exe"* bypass, abuses the
[trust](https://www.peerlyst.com/tags/trust) relationship of
auto-elevation assigned to trusted
[binaries](https://www.peerlyst.com/tags/binaries) that Microsoft
assigns to trusted folders such as *C:\\Windows\\System32*. Since
*"fodhelper.exe"* is a trusted binary, Windows doesn't prompt for
administrator approval.
> *C:\\Windows\\System32\\fodhelper.exe*
>
> ![](media/image49.jpeg)Credits: [Bleeping
> Computer](https://www.bleepingcomputer.com/news/security/windows-10-uac-bypass-uses-apps-and-features-utility/)
The "fodhelper.exe" binary links to two unique
[registry](https://www.peerlyst.com/tags/registry) keys, one of which is
editable and can be weaponized to use in combination with malware
capable of running [scripts](https://www.peerlyst.com/tags/scripts) in
the background in elevated administrator access.
> ![](media/image50.jpeg)
Editable Registry [Key](https://www.peerlyst.com/tags/key) associated
with "fodhelper.exe" binary
This UAC bypass executes in
[memory](https://www.peerlyst.com/tags/memory), so there's no file
dropping or [DLL hijacking](https://www.peerlyst.com/tags/dll-hijacking)
involved. For this bypass to work correctly, however, the user account
must be part of the local administrator group. I demonstrate how a
standard user account can be elevated to the local administrator group
in chapter 10, "Network Domination & Persistence." However, most users
commonly use local admin-level accounts as their default account to
perform everyday tasks on their home PCs. Therefore, this UAC bypass
remains a credible vulnerability. For security administrators, setting
UAC to "Always notify" will protect against this bypass as well.
3.  It's also possible to [bypass UAC in Windows 7/8/10 & Server 2K8,
    2K12, 2K16](https://youtu.be/Fl6f9fM_iOE) by
    [hijacking](https://www.peerlyst.com/tags/hijacking) the COM object:
    {0A29FF9E-7F9C-4437--8B11-F424491E3931} Target apps: *eventvwr.exe*
    or *mmc.exe*.
    -   This bypass is a bit more advanced and requires advanced
        knowledge of the [Kali
        Linux](https://www.peerlyst.com/tags/kali-linux) OS and the
        [Metasploit](https://www.peerlyst.com/tags/metasploit)
        [Framework](https://www.peerlyst.com/tags/framework) (MSF) tool.
        Watch the [YouTube](https://www.peerlyst.com/tags/youtube)
        [video](https://www.peerlyst.com/tags/video) for
> step-by-step
> [instructions](https://www.peerlyst.com/tags/instructions) or read
> Enigma0x3's ([Matt Nelson](https://medium.com/u/1bb43103a9a9))
> "[CVE-2018--8414: A case](https://enigma0x3.net/) [study in
> responsible disclosure](https://enigma0x3.net/)."
It is also important to note that the [MITRE