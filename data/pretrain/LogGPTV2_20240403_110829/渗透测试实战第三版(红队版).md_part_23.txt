![](4-3.png){.calibre11}
一旦我们找到了一个密码，我们就可以使用 Ruler 来获取 Office
365的全局地址列表（GAL）中的所有用户，以查找更多的电子邮件地址及其所属的电子邮件组。
![](4-4.png){.calibre11}
我们继续将获取的这些电子邮件地址通过上面提及的那些密码破解工具来进行破解的尝试，从而获得更多的身份凭证------这就和滚雪球一样。不过，Ruler
的主要用途是，一旦你有了身份凭证，你就可以利用 Office/Outlook
的一些功能来在受害者的电子邮件帐户上创建规则和表单。这里有一篇来自
SensePost 安全团队的文章
[outlook-forms-shells](https://sensepost.com/blog/2017/outlook-forms-shells/){.pcalibre2
.calibre9 .pcalibre .pcalibre1
target="_blank"}，介绍了他们是怎样利用这些功能来执行包含 Empire payload
的宏文件的。
如果你决定不使用 Outlook
表单，或者该功能已经被禁用，我们的思路还可以回到对电子邮件的攻击。这可能会让你感到有点邪恶，因为你将使用这些普通用户的账号登录并阅读他们的所有电子邮件。当我们兴奋的阅读某个用户的电子邮件时，我们会想要和某个他似乎有点信任（但又不算好朋友）的人进行对话。既然已经有了信任的基础，我们就可以利用这个机会给他发送恶意软件。通常，我们会篡改一次会话，在里面夹带附件（如
Office 文件/可执行文件），然后重新发给他们，不过这次附件包含了我们的恶意
payload。在受信任的内网连接和电子邮件之中传递恶意软件，成功掩护了我们的身份，并使这次行动获得成功。
本书始终强调的一点是，整个攻击行动的目的是为了测试蓝队的威胁检测工具和应急响应流程的效率。我们行动的目标非常明确，就是观察他们是否能够有所警觉。又或者像法医解剖那样，仔细复盘行动中发生的一切。对于本节的实验设计，我的想法是验证公司是否能够确定有人正在窃取用户们的电子邮件。所以，我们要做的是使用
[Python 脚本](https://github.com/Narcolapser/python-o365){.pcalibre2
.calibre9 .pcalibre .pcalibre1
target="_blank"}来获取所有被破坏的电子邮件。在许多情况下，这可能是千兆字节的数据！
### 高级选修实验 {#4_the_drive_compromising_the_network.html#高级选修实验 .calibre15}
一个很好的练习是：攻击不同类型的的身份验证服务并对其进行密码尝试。尝试构建一个密码喷洒（Password
Spraying）工具，用于测试针对 XMPP 服务、常见第三方 SaaS
工具和其他常见协议的身份验证。最好是在多个 VPS 服务器中执行此操作，所有
VPS 服务器都由一个主服务器控制。
## 通过网络移动 {#4_the_drive_compromising_the_network.html#通过网络移动 .calibre12}
作为一名红队成员，我们希望尽可能安静地在网络中穿梭。我们希望使用"特征"来查找和利用有关网络、用户、服务等信息。通常，在红队活动中，我们不希望在内网环境中进行任何漏洞扫描相关的活动。有时我们甚至不希望对内部网络运行
nmap
扫描。这是因为许多公司已经非常擅长检测这些类型的扫描，特别是在运行漏洞扫描器这样动静很大的东西时。
在本节中，你将集中精力在不触发任何检测防护的情况下在 CSK
的网络进行横向漫游。我们假设你已经以某种方式进入内部网络并开始寻找你的第一组凭证，或者已经拥有了一个用户机器上的
shell。
### 建立环境------实验网络 {#4_the_drive_compromising_the_network.html#建立环境——实验网络 .calibre15}
这部分完全是自定义的，但由于微软的授权限制，这本书里没法给你已经制作好的的基于
Windows 的实验环境部署环境。所以至于怎么做，就得看你的动手能力了！
真正学会如何攻击目标环境的唯一方法是自己亲手构建一下目标环境。这能使你更清楚地了解你正在攻击什么，为什么攻击有时候有效，有时候无效，并了解某些特定工具或流程的局限性。那么你需要建立什么样的实验环境呢？基于客户端的环境，Windows
和 Linux（甚至
Mac）可能都需要一个。如果你正在攻击企业网络，你可能需要构建一个完整的
Active Directory
网络（域环境）。在下面的实验中，我们将学习如何为本书中的所有例子构建一个测试环境。
一个理想的 Windows 测试实验环境，你可以自己创建，大概是下面这样的:
-   域控制器-服务器：\[Windows 2016域控制器\]
-   Web服务器：\[IIS on Windows 2016\]
-   客户端机器：\[Windows 10\]x3和 \[Windows 7\]x2
-   全部运行着 VMWare 的工作站中，工作站的内存至少16GB，SSD 硬盘500GB
配置和创建域控制器:
-   微软关于构建2016版服务器的说明:
    -   [https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/](https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
        -   短地址：[http://bit.ly/2JN8E19](http://bit.ly/2JN8E19){.pcalibre2
            .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   安装和配置 Active Directory 之后，使用：dsac.exe 创建用户和组
    -   创建多个用户
    -   创建组并分配给用户（下面是分组）：
        -   Space
        -   Helpdesk
        -   Lab
设置客户端机器（Windows 7/10）加入域：
-   将所有机器都打好系统补丁
-   将机器连接到域
    -   [https://helpdeskgeek.com/how-to/windows-join-domain/](https://helpdeskgeek.com/how-to/windows-join-domain/){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   确保添加一个域用户，该用户能够作为本地管理员在每个系统上运行。这可以通过将该域用户添加到本地机器上的本地
    administrators 组来实现。
-   在每个主机上启用本地管理员并设置密码
将 GPO（组策略）设置为:
-   禁用防火墙 (
    [https://www.youtube.com/watch?v=vxXLJSbx1SI](https://www.youtube.com/watch?v=vxXLJSbx1SI){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"} )
-   禁用 AV( [http://bit.ly/2EL0uTd](http://bit.ly/2EL0uTd){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"} )
-   禁用系统自动更新
-   将 Helpdesk 用户组添加到本地管理员组
-   仅允许域管理员、本地管理员、Helpdesk 登录(
    [http://bit.ly/2qyJs5D](http://bit.ly/2qyJs5D){.pcalibre2 .calibre9
    .pcalibre .pcalibre1 target="_blank"} )
-   最后，将 GPO 设置同步到主域
将每个操作系统的所有用户设置为自动登录（这会使得攻击测试更加容易）。每次机器启动或重新启动时，它都会自动登录，这样我们就可以轻松地进行攻击并从内存中提取凭证：
-   [https://support.microsoft.com/en-us/help/324737/how-to-turn-on-automatic-logon-in-windows](https://support.microsoft.com/en-us/help/324737/how-to-turn-on-automatic-logon-in-windows){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
    -   短地址：[http://bit.ly/2EKatIk](http://bit.ly/2EKatIk){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
设置 IIS 服务器并配置 SPN：
-   [https://www.rootusers.com/how-to-install-iis-in-windows-server-2016/](https://www.rootusers.com/how-to-install-iis-in-windows-server-2016/){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
    -   短地址：[http://bit.ly/2JJQvRK](http://bit.ly/2JJQvRK){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   [https://support.microsoft.com/en-us/help/929650/how-to-use-spns-when-you-configure-web-applications-that-are-hosted-on](https://support.microsoft.com/en-us/help/929650/how-to-use-spns-when-you-configure-web-applications-that-are-hosted-on){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
    -   短地址：[http://bit.ly/2IXZygL](http://bit.ly/2IXZygL){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
## 在内网中没有凭据 {#4_the_drive_compromising_the_network.html#在内网中没有凭据 .calibre12}
假设你无法通过探测外部服务获得任何密码，因此决定潜入大楼内部。你等到午饭后，潜入
Cyber Space Kittens
的办公室，找到吸烟室。即使你不抽烟，但你也知道抽烟的人有结伙心理。你点上一支烟，但是可以不和他们说话，但当他们走进他们的大楼时，你就可以跟着他们一起进去，轻松极了！
既然你已经闯入了 CSK
的内部环境，你可不想在那里呆太久被抓住。你拿出你非常信任的 drop
box，找到一间空办公室，把它插上网络，检查你的手机，看看它是否正确传回了
beacon 到了你的家中，确认之后迅速逃回安全的地方。
当你汗流浃背地回到家时候，迅速地找到你的笔记本电脑，登陆你的 VPN
服务器，当你看到那个 beacon
还在连接家里的时候，你就可以松一口气了。现在你可以现在用 SSH 连接
beacon，可以慢慢地去拓展受感染主机的内部网络，在多个主机之间移动，并尝试拿到你所关心的数据。
### Responder {#4_the_drive_compromising_the_network.html#responder .calibre15}
就像在上一个活动中一样，我们使用
[Responder](https://github.com/lgandx/Responder){.pcalibre2 .calibre9
.pcalibre .pcalibre1 target="_blank"}
在网络上侦听并伪造请求以获得网络上的凭据。回顾一下上本书，当网络上的系统执行查找
DNS 主机名失败时，受害者系统就会使用 Link-Local Multicast Name
Resolution（简称 LLMNR）和 Net-BIOS Name Service（NBT-NS）进行回退 DNS
名称解析。当受害者的电脑无法进行 DNS
查找时，他就会开始询问网络上的任何人是否知道该主机名的解析方法。
一个简单而通用的例子：假设你电脑里有一个固定的共享硬盘驱动器目录，为：\\cyberspacekittenssecretdrive\\secrets。有一天，IT
部门从网络中删除了共享驱动器，它就不存在了。但由于名为
cyberspacekittenssecretdrive
的服务器仍然有一个挂载的驱动器，因此系统将不断询问网络是否有人知道此驱动器并回应它的
IP。虽然现在这种文件共享示例可能很少见，但是，由于以前连接的系统很可能不再存在于网络上，所以这个问题仍然会发生。我们已经从已挂载的驱动器、具有硬编码服务器的应用程序以及许多次的错误配置中看到了这一点。
我们可以使用像 Responder
这样的工具来利用那些寻找有主机名的系统，并使用我们的攻击服务器对其进行响应。更好的是，Responder
可以更进一步，充当 WPAD（Web Proxy Auto-Discovery Protocol，Web
代理自动发现协议）服务器，通过我们的攻击者服务器代理所有数据，但这是另一种攻击了。
-   cd /opt/Responder
-   ./Responder.py -I eth0 --wrf
现在，因为我们处于 Windows 的企业环境中，我们可以假设它很可能正在运行
Active Directory（活动目录）。因此，如果我们能够响应来自受害者主机的 DNS
查找请求，我们就可以使他们的系统连接到我们的 SMB
共享服务。由于它们正在连接到 \\cyberspacekittenssecretdrive
驱动器，因此我们将强制受害者使用他的 NTLMv2
凭证（或缓存的凭证）进行身份验证。我们捕获的这些凭证不是直接的 NTLM
哈希，而是 NTLM
请求/响应哈希（NTLMv2-SSP）。这些哈希表的唯一缺点是，破解它们的速度要比普通的
NTLM
哈希表要慢得多，但是相比于我们要进行的大型凭证爆破动作来说，这不是一个大麻烦。
![](4-5.png){.calibre11}
我们可以获取 NTLMv2哈希，将其传递给本地的 hashcat 程序破解此密码。在
hashcat 中，我们需要指定散列格式 "-m"（
[https://hashcat.net/wiki/doku.php?id=example_hashes](https://hashcat.net/wiki/doku.php?id=example_hashes){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"} ）为 Net-NTLMv2 。
-   hashcat -m 5600 hashes\\ntlmssp_hashes.txt passwordlists/\*
现在，假设我们并不是真的想破解哈希，或者我们不介意提醒用户有一些值得可疑的地方。我们所能做的是强制一个基本身份验证弹出窗口，而不是采用
`-F`{.calibre14 .pcalibre4 .pcalibre3}（ForceWpadAuth）和
`-b`{.calibre14 .pcalibre4 .pcalibre3}（basic auth）的要求使用
Net-NTLMv2凭据。
-   python ./Responder.py -I eth0 -wfFbv
![](4-6.png){.calibre11}
从上面的图像中可以看到，用户将被提示输入用户名和密码，大多数人只是按部就班的按提示输入。一旦他们提交了他们的用户名和密码，我们将能够捕获他们的密码明文!
![](4-7.png){.calibre11}
### 更好的 Responder（MultiRelay.py） {#4_the_drive_compromising_the_network.html#更好的-responder（multirelaypy） .calibre15}
使用 Responder 和破解 NTLMv2-SSP
哈希的问题是，破解这些哈希所需的时间可能很长。更糟糕的是，我们所处的环境中的管理员的密码可能是20多个的字符。那么，在这些情况下我们能做什么呢？如果所处环境不强制执行
SMB 签名（ 我们可以通过快速的 nmap 脚本扫描找到 -
[https://nmap.org/nsedoc/scripts/smb-security-mode.html](https://nmap.org/nsedoc/scripts/smb-security-mode.html){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"}