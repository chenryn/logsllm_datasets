in Waikato, MAWI-short, and in diﬀerent years in MAWI-long.
In MAWI-short, we ﬁnd that 70% of the payloads belong to the BitTorrent
UDP protocol. Additionally, a payload pattern covering 16% of the traﬃc, prob-
ably belonging to a custom application-layer protocol, DNS, OpenVPN, and
NTP, contributes to other payloads in MAWI-short port 0 traﬃc in our dataset.
In Waikato, BitTorrent-UDP and Skype are among the top payloads.
Fig. 2. Cumulative distribution of payload size in port 0 traﬃc. Note that the X-axis
is log-scaled.
554
A. Maghsoudlou et al.
In MAWI-short, MAWI-long, and CAIDA, Malformed packets contribute less
than 2% to port 0 packets, e.g., with wrong checksums, having UDP length of
higher than IP length, etc. However, in Waikato, we ﬁnd that 16.2% of the traﬃc
is malformed. This shows that port 0 traﬃc can also be caused by misconﬁgu-
ration, programming errors, or people sending malformed traﬃc on purpose.
Next, we analyze diﬀerent TCP ﬂags in packet-level datasets to better under-
stand possible causes of port 0 traﬃc. Attackers and scanners usually use speciﬁc
TCP control bits in their packets to achieve their goals. For instance, attackers
sending spoofed traﬃc set the SYN bit to try to initiate TCP connections with
their targets, which in backscatter traﬃc we see as SYN/ACK, RST, RST/ACK,
or ACK packets [43]. Therefore, we investigate TCP control ﬂags in the datasets.
We observe that most of the TCP ﬂags are only SYNs: More than 66% in MAWI-
short, and 92% in CAIDA, which might indicate that most of the TCP port 0
traﬃc in these two datasets is caused by scanning. We analyze TCP ﬂags in
MAWI-long dataset per year, as shown in Fig. 6. First, we check whether all
packets in a TCP stream are one-way or two-way. We ﬁnd that a large frac-
tion of the TCP streams are one-way. This also holds for all other packet-level
datasets. Then, we categorize two-way TCP streams as follows:
– Scan to closed port: Client sends SYN, receives RST or RST/ACK.
– Scan to open port: Client sends SYN, receives SYN/ACK, client then sends
RST or RST/ACK.
– No SYN: No SYN is ever sent. The stream begins with other ﬂags, mostly
SYN/ACKs followed by RSTs from the other side.
– Not scan: None of the above, i.e., client sends SYN but receives no RST.
We ﬁnd that a major fraction of two-way TCP streams are scans to closed ports
for most of the years. Among the streams in the Not scan category, we ﬁnd two
long streams of ACK/PSH followed by multiple ACKs in 2015 or ACK/PSH/FIN
]
%
[
s
t
e
k
c
a
P
60
40
20
0
AS11
AS12
AS2
AS13
AS14
AS15
AS16
AS17
Source AS
AS18
AS20
Destination AS
Fig. 3. Traﬃc between top 10 (source AS, destination AS) pairs involved in port 0
traﬃc in the MAWI-short dataset.
Zeroing in on Port 0 Traﬃc in the Wild
555
Fig. 4. Cumulative distribution of IP addresses in port 0 traﬃc. Note that the X-axis
is log-scaled.
in 2019, respectively. We believe that these streams are related to an ACK/PSH
ﬂood attack [22] considering the relatively high number of packets sent in these
streams. Next, we analyze speciﬁc years of the MAWI-long dataset with very
characteristic spikes more in-depth. In 2009, we see the largest number of total
packets of any year, with a TCP:UDP ratio of about 2:1. The majority of
UDP traﬃc is originating with source port UDP/8000 from many diﬀerent IP
addresses within a Chinese ISP AS which are mostly destined to UDP/0 towards
a single IP address belonging to a Japanese university inside WIDE. For TCP,
the majority of traﬃc is sourced from a single IP address within a Canadian ISP
and destined to many diﬀerent IP addresses. Almost all sources are TCP/0 and
the destinations are TCP/22 (SSH). As is shown in Fig. 6, these are very likely
scanning activities.
In 2012 we see the largest number of TCP streams as shown in Fig. 6. We
ﬁnd a factor of 54 times more TCP traﬃc this year than UDP traﬃc. Almost
80% of all TCP/0 traﬃc is from a single IP address within a hosting company,
the destination addresses and ports are evenly distributed. The TCP ﬂags of all
packets are set to RST/ACK. These indicators lead us to believe that this is
backscatter traﬃc from attack traﬃc using spoofed IP addresses [43].
Finally, we investigate the current year 2020, from January to July. During
this period we see 26 times as much TCP traﬃc compared to UDP. The majority
of TCP traﬃc originates from a single IP address at a hosting company, which
uses TCP/43573 as a source port. For the IP address in question we ﬁnd many
diﬀerent reports on abuse DB websites, which hint at scanning and vulnerability
probing.
To summarize, we ﬁnd that a large fraction of TCP streams in port 0 traf-
ﬁc is one-way. However, we still see some two-way streams related to scanning
556
A. Maghsoudlou et al.
Fig. 5. Payload distribution (bar plots)
and total packet count (red line) for
MAWI-long. (Color ﬁgure online)
Fig. 6. TCP stream categorization (bar
plots) and total streams (red line) for
MAWI-long. (Color ﬁgure online)
activities. Analyzing packet payloads throughout all our datasets, we observe
that BitTorrent UDP traﬃc is a constant contributor to port 0 traﬃc.
6 Active Measurements
As discussed in the previous sections, we observed a signiﬁcant number of
RST/ACKs and even some SYN/ACKs which indicate scanning activities. To
better understand how the network reacts to port 0 traﬃc, we stage an active
measurement campaign. We run two types of measurements: (1) Port scan mea-
surements allow us to analyze responsiveness of IP addresses to port 0 probes
and (2) traceroute measurements provide information on where port 0 packets
are being ﬁltered.
6.1 Responsive Addresses
We run four types of port scan measurements, for each possible combination of
IPv4/IPv6 and TCP/UDP. The IPv4 measurements are run on the complete
address space minus a blocklist, the IPv6 measurements use an IPv6 hitlist [20].
For the TCP measurements we send regular SYN packets, for UDP we send the
most prominent payload found in our passive packet traces.
For the four protocol combinations, we get vastly diﬀering results. With 2.3
M, the largest number of addresses responds to our IPv4 TCP port 0 probes.
Only 2222 unique addresses respond to IPv4 UDP probes and 120 respond to
IPv6 TCP probes. We ﬁnd not a single responsive address for IPv6 UDP probes.
When mapping responsive addresses to ASes [4,13], we ﬁnd that a small
number of ASes makes up the majority of responses. Figure 7 shows the AS
Zeroing in on Port 0 Traﬃc in the Wild
557
Table 2. Top 10 ASes of non-
reachable
target addresses when
comparing TCP/0 and TCP/80.
ASN AS Name
Count
1
2
3
4
5
6
7
8
9
6830 Liberty Global
6327 Shaw
812 Rogers
33915 Vodafone
11492 Cable One
30036 Mediacom
12389 Rostelecom
4134 Chinanet
3320 Deutsche Telekom
10
4766 Korea Telecom
4822
3257
2297
2152
1095
688
643
575
552
498
Fig. 7. Cumulative distribution of responsive
IP addresses per AS. Note that the X-axis is
log-scaled.
distribution of responses for the diﬀerent protocols. The top ten ASes make up
72%, 73%, and 79% of all responses for IPv4 TCP, IPv4 UDP, and IPv6 TCP,
respectively. When we look at the overlap of responding addresses in TCP and
UDP for IPv4, we ﬁnd that 61% of IPv4 UDP addresses are present in IPv4
TCP results. In IPv4 TCP, where we see the most responses by far, most of the
top 10 ASes belong to ISPs. This leads us to believe that faulty or misconﬁgured
ISP equipment is to blame for responses to port 0 probes.
Next, we analyze the initial TTL (iTTL) value [6,24,34], UDP reply payload,
and combine these with the responding AS. For IPv4 TCP we ﬁnd that the most
common iTTL values are 64 (57%), which is the default for Linux and macOS,
255 (36%), the default for many Unix devices, and 128 (7%) the default for
Windows. When combining these iTTL values with the responding AS we ﬁnd
no clear patterns. In contrast, for IPv4 UDP we ﬁnd a clear correlation between
iTTL, payload, and AS. The most common response payload (32%) is sent from
six diﬀerent ASes with an iTTL value of 32 or 64. The second most common
response payload (14%) is identical to our request payload, i.e., the probed hosts
simply mirror the payload that they receive. Packets with this payload originate
from a single AS (AS7922, Comcast) and all of them have an iTTL of 255. The
third most common payload (8%) is made up of 16 zero bytes and originates
from AS14745 (Internap Corporation) with an iTTL of 32.
These ﬁndings suggest that only a small number of networks contain miscon-
ﬁgured devices erroneously responding to port 0 probes.
6.2 Port 0 Traceroutes
To better understand how port 0 traﬃc is handled inside the network, we con-
duct traceroute-style measurements using Yarrp [45]. This allows us to see if
port 0 traﬃc is treated diﬀerently by routers compared to standard TCP/80
558
A. Maghsoudlou et al.
or TCP/443 traﬃc.1 In IPv4, we split the announced address space into 11 M
/24 preﬁxes and send a trace to a random address within each of these preﬁxes.
In IPv6, the equivalent would be sending traces to every /48 preﬁx. This is,
however, not feasible due to the vast address space. Therefore we decide to pick
one random address per announced IPv6 preﬁx, no matter the preﬁx length.
We ensure that random addresses for less speciﬁc preﬁxes do not fall into more
speciﬁc preﬁxes. In total, we send probes to about 88 k IPv6 preﬁxes.
When analyzing the reached target addresses depending on the used port
numbers, we ﬁnd that in IPv4 there is a signiﬁcant diﬀerence between port 0
and other ports. 91 k of IPv4 port 0 traces reach their target, whereas 118 k
traces on TCP/80 and TCP/443 reach their target IPv4 address, an increase of
almost 30%.
In IPv6, however, almost no targets are reached for either port number, as
the likelihood of a randomly generated address in a preﬁx actually being assigned
is quite low. Therefore, we perform additional analyses based on the reachability
of the target BGP-announced preﬁx.
The general picture in IPv4 does not change drastically when analyzing the
reachability of the target preﬁx: Port 0 probes reach fewer target preﬁxes com-
pared to port 80 and port 443 probes, although the diﬀerence is reduced to 14.2%
and 9.5%, respectively.
When we analyze the reached target preﬁxes for IPv6, however, we see a
slight diﬀerence of 3%.