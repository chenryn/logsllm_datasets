⑨查询攻击
用户尝试使用查询工具来访问不能正常地通过可信前端访问的数据。
⑩服务器访问
数据库运行的服务器必须防止未授权的逻辑访问同时也要防止未授权的物理访问以防止
逻辑控制被禁用。
⑾数据污染
由于输入数据错误或错误的处理导致的数据完整性破坏。
⑿数据拦截（中间人）
如果允许拨号或其它类型的远程访问，必须控制拦截会话或修改传输中的数据的威胁。
⒀检查时间／使用时间(TOC/TOU)（必考）
TOC/TOU 也可能发生在数据库中。一个例子是，一些类型的恶意代码或特权访问可以改变
数据，在用户的查询被许可时和数据展现给用户时。
⒁未授权访问
故意可无意地将信息发布给未授权用户。例如系统的错误消息或系统提示，提供了关于服
务功能特性等方面的信息。
要实现多种等级的数据库访问控制和安全防护，有很多方法：
①使用视图 Views
视图可以防止聚合攻击。在数据库中实现多级安全性的一种途径是使用数据库视图。视图
可以整理来自多个表的数据、聚合单独的记录或限制用户访问数据库属性和/或记录的有限子
集。在数据库中，视图被存储为 SQL 语旬，而不是被存储为数据表。这样可以减少所需的数据
库空间，并且允许视图违反应用于数据表的规格化规则。因为视图非常灵活，所以许多数据库
管理员将视图作为一种安全工具使用，就是允许用户只与受限的视图交互，而非与作为视图基
础的原始数据表交互。
②并发性 Concurrency
并发性使用“锁定”功能来允许己授权用户更改数据，同时拒绝其他用户访问查看或更改
数据元素。只有更改完成并“解锁”后，才允许其他用户访问。并发性或编辑控制是一种预防
性的安全机制，这种机制试图使数据库中存储的数据始终是正确的，或者至少使其完整性和可
用性受到保护。
③语义完整性 Semantic integrity
语义完整性是 DBMS 的一种常见安全特性，确保用户的动作不会违反任何结构上的规则。
此外，还检查所有存储的数据类型都是有效的，符合逻辑的，并且确认系统遵守任何和所有的
唯一性约束。
④时间戳 Time stamp
通过标记日期和时间来维护数据的完整性和可用性。
⑤细粒度控制 granularly
DBMS 的另一个常见安全特性是在数据库内能够细粒度控制对象。例如：内容相关的访问
控制（基于内容）Content-dependent，分析内容之间的关系来阻止用户访问与他无关的数据，
—231—
或者有利益冲突的数据。
⑥单元抑制 cell suppression
对单独的数据库字段或单元隐藏或强加更安全的约束。
⑦上下文相关的访问控制（基于上下文环境）Context-dependent
上下文相关的访问控制通过宏观评估来制定访问控制策略，它分析每个对象、数据包或字
段如何与总体的活动或通信相联系，在较大的上下文环境中就会表露出是有益的还是有害的。
⑧数据库分区 database partitioning
数据库分区技术可以防止聚合和推理漏洞。
⑨多实例 Polyinstantiation
在同一个关系数据库表中两行或更多行具有相同的主键，且为不同密级的用户提供不同的
数据查询结果，就是多实例。主要防范推理攻击。（这个点经常考到）
⑩噪声和干扰 false or misleading data
在 DBMS 中插入错误的或伪造的数据，从而重定向或阻挠窃密攻击。但一定要确保插入到
数据库中的噪声不影响业务运营。
⑾锁控制
锁用来控制读和写访问特定的关系系统中的数据行或面向对象系统中的对象。可以在表，
行，记录，或甚至字段上加锁，这些相关的要求也被称为 ACID 测试。
8.数据库接口
考各种接口语言的特点和安全问题。
①开放数据库互连(ODBC)
访问数据库的用户名和密码以明文存储。
微软的数据库连接 API，开放数据库互连(ODBC)是一种数据库特性，不必对互联互通的数
据库直接进行编程，允许应用程序与不同数据库类型通信。也就是应用程序和后端数据库驱动
程序之间的代理。ODBC 还有一种 API 接口的集合，即 ActiveX 数据对象(ADO, ActiveX Data
Objects)。
②JAVA 数据库连接（JDBC）
JDBC 是 Sun 公司开发的 API，用于 Java 程序连接数据库。它可以使 Java 程序直接或通过
ODBC 连接到数据库。要考虑清楚用户的鉴别和访问控制。
③可扩展标记语言（XML）
安全性最低。XML 本身是明文的。
XML 是一种标记语言，可用中性的格式来表示数据，独立于数据库和应用，以及底层的
DBMS。无线标记语言（WML）是一个基于 XML 语言的实例，它把用于蜂窝电话，寻呼机和个人
数字助理(PDA)之类的通信。
④对象链接和嵌入数据库（OLE DB）
替代 ODBC 的。对象链接和嵌入(OLE)是 Microsoft 的一个技术，允许一个对象，例如 Excel
电子表格，嵌入或链接到另一对象内部，例如 Word 文档。OLE 使用组件对象模型(COM)协议。
对于对象嵌入，一个提供数据或图像的应用(源)将被包含在另一个应用(目标)的文档中。目标
应用并不了解或有能力编辑它，只是简单地显示或打印。要想编辑或更新嵌入的对象，它必须
—232—
在创建它的应用中打开。这一般双击会自动打开编辑。
OLE DB 是一个底层接口，由 Microsoft 设计用来跨不同的 DBMS 链接数据。它是一个开放
的规范，它的设计基于 ODBC 的成功，提供了一个访问所有类型数据的开放标准，它在客户端
或服务器上可作为中间件运行，可跨越很多不同的应用。它使组织可以轻松地利用信息的优点，
这些数据不只存在于 DBMS 中，也包括当从其它类型的数据源访问数据时。(但仅限于 Windows
接口应用)。OLE DB 架构提供组件，例如直接数据访问接口，查询引擎，游标引擎，优化器，
业务规则和事务管理。
当开发数据库和决定数据如何跨应用链接，或者通过 ODBC 接口或者通过 OLE DB 接口，则
必须在开发阶段考虑安全。
⑤ActiveX 数据对象（ADO）
新的浏览器实现了沙盒和强 ActiveX 控制以帮助防范此漏洞。
ADO 是 Microsoft 针对所有类型数据的高层接口。它可以用来创建一个前端数据库客户端
或中间层业务对象，其使用一个应用，工具，或 Internet 浏览器。开发人员通过使用 ADO 可
以简化 OLE DB 的开发。对象可以是 Java，JavaScript，VB 和其它面向对象语言的构建组件。
通过使用公共和可重用的数据访问组件(组件对象模型(COM))，不同的应用可以访问所有数据
而不管数据的位置或数据格式。ADO 可以支持典型的客户/服务器应用，HTML 表格，电子表格
和电子邮件引擎信息。注意很多安全专家都担心 ActiveX 的使用，因为无法配置它访问底层系
统的限制。新的浏览器实现了沙箱和强 ActiveX 控件以帮助减轻此漏洞。
9.通过 Internet 访问数据库
互联网访问的通用方法是创建一个分层的架构，分层管理数据，最典型的是三层方法：
①表示层；②业务逻辑层；③数据层。在 B.5 章节 API 安全内容里也讲到了。
10.元数据
关于数据的信息，被称为元数据(关于数据的字面数据或关于数据的知识)。它提供了一个
系统的方法来描述资源和改进信息的提取。目标是帮助用户通过各种源及更好的精度搜索。它
包括与一个应用系统或一个信息、对象关联的数据，目标是描述，关联，法律要求，技术功能，
使用，和保存。它被认为是开发和使用数据仓库的关键组件。元数据有用是因为它提供了：
①数据之间的无法发现的关系；
②关联之前被认为没有关系的数据的能力；
③打开数据仓库内的重要或非常重要数据的钥匙；
唯一考点：元数据是数据中的数据。
11.联机分析处理/在线分析流程(OLAP)
OLAP 最大的安全问题是；并发和原子。
包含在数据仓库中的数据通常都是通过前端分析工具访问，例如联机分析处理（OLAP）、
数据挖掘，或数据库知识发现（KDD）方法。OLAP 技术使一个分析师能定制查询，并且基于查
询的结果，定义进一步的查询。分析师可以通过在数据间漫游来收集信息。收集到的信息展现
给管理层。因为数据分析师要解释数据的含义，他或她应具备关于组织的深入了解和组织需要
什么类型的知识以适当的获取信息，用于决策支持。
①联机事务处理 OLTP(On-Line Transaction Processing)
—233—
用于数据库集群 DB cluster，提供容错和高性能。可以监视问题并正确处理问题，确保
要么都正确，要么都不改。
例如，如果一个进程停止运作，那么 OLTP 内的监控机制能够检测到这个问题并试图重新
启动该进程。如果这个进程不能重新启动，那么对应的事务处理将会回滚，从而确保事务处理
的完整性或者数据不出现说误。任何检测到的错误或无效事务处理将会记录到事务处理日志
中。事务处理日志还收集成功事务处理的活动。在执行事务处理前后，数据都将写入日志，以
便建立一个事件记录。OLTP 的主要目标是确保事务处理的正确发生或根本不发生。通常，事
务处理表示一些不可分割的操作独立发生。如果其中一个操作失败，那么其余操作需要回滚，
以确保只向数据库输入准确的数据。
②数据挖掘 data mining
用于揭示隐藏关系。数据挖掘也称为数据库知识发现 KDD(Knowledge Discovery in
Database)。除了 OLAP，数据挖掘是另外一个过程(或工具)，其通过对数据执行查询来发现数
据仓库中的信息。数据挖掘是一个决策支持技术，基于一系列的分析技术，其借鉴于数学，统
计学，和遗传学。该技术独立地且与其它技术协作从数据仓库中发现信息。数据发掘用于揭示
隐藏的关系，模型，和数据仓库中的趋势，其是要进行数据挖掘的大量数据的知识库。
数据挖掘既可以发现潜在的入侵，方便审计；也可以用来推理攻击，发现有用的情报。
KDD 用于发现潜在模式或知识的最常用的 3 种方法：
①分类 Classification。根据共同的相似性对数据分组。
②可能性 Probability。标识数据之间的相互依赖关系，并将可能性应用于它们的关系。
③统计 Statistical。标识数据元素之间的关系，并使用规则发现。
10.数据字典(Data Dictionary)
数据字典是描述数据元素及其关系的基础库，存储了数据用法、关系、来源和格式等关键
信息，是数据元素定义、架构对象(schema object)和引用键(reference key)的集合，用来对
数据库的数据结构进行集中管理控制。数据库管理软件读取数据字典，确认架构对象存在，并
检查特定用户的进程访问权限。在数据字典中还定义了对每个用户的视图权限设置，如果要改
变数据库的架构，如增加表、字段、记录、视图什么的，必须先更新数据字典。
—234—
三、基于知识的软件系统 KBS
有 3 种类型的以知识为基础的人工智能系统，用来用入侵检测分析是很准确的。
1.专家系统 Expert Systems
专家系统是不可能模拟出人类的情绪的，只能干下象棋的事，一般用于某个专业领域，通
常被 IDS 用于自动检查安全日志。有两个主要的组件：知识库和推理机。
①知识库，包含专家系统己知的事实和规则 rules（就是对各种情况的判断 if/then）。
②推理机/推理引擎 inference engine，利用逻辑推理和模糊逻辑技术将输入的信息与知
识库进行对比分析，并基于过去的经验做出结论。
基于规则的编程(rule-based programming)是开发专家系统的通用方法。规则基于
if-then 逻辑单元，规定了一组用于在特定情况下执行的动作。这是用专家系统寻找模式的一
种方法，称为模式匹配(pattern matching) 。
模糊逻辑 Fuzzy Logic
通过使用模糊的界限，允许算法思考控制人类思维的“灰度梯度”。专家系统通过下列 4
个步骤或阶段来使用模糊逻辑：模糊化 fuzzifi cation、推理 inference、合成 composition
以及逆模糊化 defuzzifi cation。
2.人工神经网络 Artificial Neural Networks
人的大脑用模式 pattern 来存储信息，用神经元 neuron 来记忆和思考。在神经网络中，
计算单元链被用来模仿人脑的生物学推理过程，用计算单元来模仿神经元。即建立 1 个计算机
单元分析判断输出、互相关联、最终生成相关结果的计算决策长链。神经网络的优点包括线型、
输入-输出映射和自适应性。在用于语音识别、脸部识别、天气预报和意识与思考模型研究的
—235—
神经网络实现中，这些优点十分明显。具体的算法就搞不清楚了。
神经网络可以自学习，这种活动被称为 Delta 规则或学习规则。
3.决策支持系统 Decision Support Systems
决策支持系统(DSS)是一种知识型应用，它分析业务数据并且以更容易作出业务决策的形
式提供给用户，一般以图形方式提供信息，并有某个数据库的专家系统的支持。
A.1 开发方法论（例如：敏捷开发、瀑布模型）
在系统生命周期中使用的术语五花八门，不同书写的都不一样，这没关系，CISSP 考的是
你对基本原理的理解。
1.包括安全管理的标准的软件开发流程
在 officail guide 7 里是这么写的 7 个阶段：
①概念定义 Conceptual definition。发布包含项目目标和系统需求的声明。（立项报告）
②确定功能需求 Functional requirements determination。完成需求规格说明书。