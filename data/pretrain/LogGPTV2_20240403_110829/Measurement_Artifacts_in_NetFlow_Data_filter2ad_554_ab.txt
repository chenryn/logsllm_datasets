measurement scripts, which are placed close to the analyzed exporters.
The experiment results are shown in Fig. 1a–1c for the three expiration mech-
anisms, respectively. For each value of d (in seconds, on the x-axis) we give
the fraction of experiment runs (on the y-axis) for which the ﬂow exporter has
generated two ﬂow records. With regard to the active timeout (Fig. 1a), Ex-
porter 1–3 behave similarly: The number of experiments with two ﬂow records
increases linearly for d ∈ [0, 8]. Although this timespan of 8 seconds is in line
with Cisco’s documentation, the center of the timespan is incorrect: Instead of
being at d = 0, our experiments show that it is at d = 4. Exporter 4 behaves
similarly to the previous exporters, although the linear increase takes place for
d ∈ [−2, 6]. Exporter 5 shows unexpected behavior: Even for d = 16, only 20% of
the experiments result in two ﬂow records. Additional experiments have shown
that the expiration does not stabilize at all. Moreover, incorrect start times are
reported for ﬂow records expired by the active timeout (which conﬁrms the ﬁnd-
ings in [3]). Finally, only Exporter 6 works as expected and always generates two
ﬂow records for d ≥ 0.
The results obtained from the idle timeout experiments are shown in Fig. 1b.
Exporter 1–4 show identical behavior and the linear increase of the curve for d ∈
[0, 4] conﬁrms that the ﬂow record expiration works according to its speciﬁcation
[1]. Exporter 5 performs better compared to the active timeout experiments: For
d ≥ 11 always two ﬂow records are generated, which is in line with the ﬁndings
in [3]. Flow records from Exporter 6 are expired up to 15s after the idle timeout,
approximately linearly with d ∈ [0, 15]. We have observed that the behavior
of this exporter also depends on the absolute value of the inactive timeout. In
Fig. 1d, we show for diﬀerent inactive timeouts the value of d (on the y-axis)
3
http://www.cisco.com/en/US/products/hw/switches/ps708/
products tech note09186a00804916e0.shtml
6
R. Hofstede et al.
 1
 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
F
 0
-2
 1
 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
F
Exporter 1
Exporter 2
Exporter 3
Exporter 4
Exporter 5
Exporter 6
 0
 2
 4
 6
 8
 10
 12
 14
 16
d (s)
(a) Active timeout
Exporter 1
Exporter 2
Exporter 3
Exporter 4
Exporter 5
 6
d (s)
 8
 10
 12
 1
 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
F
 0
-2
)
s
(
d
l
o
h
s
e
r
h
T
%
0
5
 18
 15
 12
 9
 6
 3
 0
Exporter 1
Exporter 2
Exporter 3
Exporter 4
Exporter 5
Exporter 6
 0
 2
 4
 6
 8
 10
 12
 14
 16
d (s)
(b) Idle timeout
Exporter 1
Exporter 6
TIdle=30s
TIdle=60s
TIdle=150s
(d) Impact of idle timeout
 0
 0
 2
 4
(c) TCP ﬂags
Fig. 1. Results of the ﬂow record expiration experiments
where 50% of the experiments yield two ﬂow records, comparing the behavior
of Exporter 1 and Exporter 6. While these values are always close to 2s for
Exporter 1, they increase with the timeout for Exporter 6.
Fig. 1c shows the results for the expiration based on TCP ﬂags. The expi-
ration behavior of Exporter 3 diﬀers from the other Cisco devices, due to a
diﬀerent implementation of NetFlow (see Sect. 3). Overall, the number of cor-
rectly exported ﬂow records increases linearly with d. The deviation d for which
Exporter 5 wrongly exports only one ﬂow record, is small: Three seconds after
the FIN/RST ﬂag was sent, always two records are exported. Exporter 6 does
not expire ﬂow records based on TCP ﬂags by speciﬁcation.
The ﬂow record expiration behavior of Exporter 1-4 shows a clear linear slope
in Fig. 1a–1c, which suggests the presence of a cyclic process to expire and export
the (hardware) ﬂow tables. The fact that ﬂow records are not expired exactly
on the deﬁned timeouts may not be a problem if ﬂows are aggregated afterward.
This is especially the case for ﬂow records expired by the active timeout. How-
ever, when the idle timeout or TCP ﬂags are used to signal the end of a ﬂow,
this artifact may result in non-repairable data damage. For example, in [12] it
is shown that some applications (e.g., peer-to-peer clients) often reuse sockets
shortly after a TCP connection attempt failure. When timeouts and TCP ﬂags
are not observed strictly, packets from diﬀerent connections may be merged into
a single ﬂow record.
Measurement Artifacts in NetFlow Data
7
Exporter TCP Flows Without Flag Information Invalid Byte Counters
Table 2. Artifact analysis results
1 + 2 No ﬂags exported for hardware-switched ﬂows
Flags exported
No ﬂags exported for hardware-switched ﬂows
3
4
5 + 6
Invalid byte counters for
hardware-switched ﬂows
Flags exported
Byte counters OK
TCP Flows Without Flag Information – Our analysis results for this ar-
tifact are summarized in Table 2. The oldest assessed devices, Exporter 1, 2
and 4, do not export ﬂags for hardware-switched TCP ﬂows. Since the vast ma-
jority of ﬂows is hardware-switched, TCP ﬂags are rarely exported. We have
observed that approximately 99.6% of all TCP ﬂow records exported by Ex-
porter 1 and 2 have no ﬂag information set during a measurement period of one
week. However, ﬂags are respected for ﬂow record expiration, even in the case
of hardware-switched TCP ﬂows. In the case of Exporter 3, 5 and 6, TCP ﬂags
are exported.
The lack of TCP ﬂag information in ﬂow records can be problematic for several
types of data analysis. From a network operation perspective, TCP connection
summaries can help to identify connectivity or health problems of services and
devices. From a research perspective, many works rely on TCP connection state
information. For example, [5,6,8] use it for inferring statistics from sampled ﬂow
data and [10] for optimizing sampling strategies. None of these approaches works
on ﬂow data without TCP ﬂags.
Invalid Byte Counters – The results for this artifact are also summarized
in Table 2. None of the Cisco devices strips the padding bytes from Ethernet
frames of hardware-switched ﬂows. Exporter 5 and 6 strip these bytes properly.
The impact of this artifact depends on the fraction of Ethernet frames that
carry less than 46 bytes of payload. To understand the distribution of packet
sizes in current networks, we analyzed a packet trace from the University of
Twente (UT) campus (1 day in 2011), and a trace from the CAIDA ‘equinix-
sanjose’ backbone link4 (1 day in 2012). In both traces, around 20% of the frames
contains less than 46 bytes of payload, which would be reported incorrectly. The