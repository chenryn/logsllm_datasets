### 5. Initial Deployment

Censys is being released with support for the sixteen protocols listed in Table 2, and we are conducting scans from the University of Michigan.

**Scanning Schedule:**
Initially, all protocols were scheduled to run on a daily basis. However, due to a significant increase in complaints and exclusion requests, we reduced the scan speed and frequency. We now schedule scans based on protocol turnover. Specifically, HTTP, HTTPS, and CWMP are scanned daily; SSH, Modbus, FTP, DNS, NTP, UPnP, SMTP, and SSH biweekly; and IMAP, IMAPS, POP3, POP3S, HTTPS/SSLv3, and HTTPS/Heartbleed weekly. All scans are conducted over a 24-hour period. We will continue to fine-tune this schedule based on which protocols are most frequently searched and downloaded after the public release, and updated schedules will be posted on the web interface.

**Backend Infrastructure:**
During initial testing, when all protocols were scanned daily, we consistently completed all sixteen scans using a pool of 12 scan workers. ZDb handled up to 40 full-speed scans on a single host, which was an Intel-branded server with two Intel Xeon E5-2640 (6 cores at 2.50GHz) processors, 192 GB of DDR3 memory, and RAID 1+0 with four Intel 850 Pro 1 TB SSD drives. Our scan workers are Dell PowerEdge 1950s, equipped with a Quad-Core Intel Xeon X5460 at 3.16 GHz, 16 GB of memory, and a local 1 TB 7200 RPM SATA drive.

**Frontend Infrastructure:**
Our front-end is powered by several components. The web interface is implemented as a Python Pyramid project, served through Google App Engine. The search backend is powered by Elasticsearch and Apache Lucene, while historical data is stored in Google Datastore. Historical and advanced queries utilize Google BigQuery. With the exception of Elasticsearch, these services will autoscale based on load. During private testing, a single server (with the same specifications as the backend server) comfortably served Elasticsearch requests for a small number of internal users. However, the exact load after public launch is uncertain. Our initial public Elasticsearch deployment runs on Google Compute Engine, consisting of six backend data nodes (each with 52 GB of memory, 8 VCPUs, and 500 GB solid state storage) and two front-end nodes. Additional nodes can be added to the cluster as needed.

### 6. Applications

One of the primary motivations for developing Censys was to expose scan data to new sets of researchers who do not have access to scanning methodologies. In this section, we demonstrate how Censys can be used to answer frequently asked Internet measurement questions and questions from recent security studies.

#### 6.1 Industrial Control Systems

SCADA (Supervisory Control and Data Acquisition) systems provide a communication channel for computer systems to control industrial equipment such as motors, generators, and physical sensors. SCADA-enabled devices are extensively used in industrial and infrastructure-critical systems, ranging from factories and power plants to HVAC systems and water treatment facilities. Attacks on these systems are particularly dangerous because they can bridge the gap from virtual to physical, leading to devastating consequences. For example, the compromise of a blast furnace control system in 2014 resulted in "massive damage" to a German steel mill [39].

Modbus, one of the primary SCADA protocols, was originally designed for local communication over a serial connection but has since been extended to operate over networks and the Internet [32]. The protocol lacks authentication, making publicly accessible Modbus devices inherently risky. To demonstrate how Censys can be used to characterize these devices, we implemented annotations to identify different types of Modbus devices. With 42 annotations, we categorized 92% of Modbus devices that responded to a device identification request. These annotations include device classification, hardware manufacturer, software name, and version. We queried Censys for Modbus devices and their distribution across countries, as shown in Table 4. We also categorized the types of Modbus devices, as shown in Table 5.

| **Country** | **Percentage** | **Count** |
|-------------|----------------|-----------|
| United States | 24.7% | 1,448 |
| Spain | 7.58% | 1,220 |
| Italy | 6.39% | 1,149 |
| France | 6.02% | 884 |
| Turkey | 4.63% | 822 |
| Canada | 4.30% | 732 |
| Denmark | 3.83% | 682 |
| Taiwan | 3.57% | 615 |
| Europe | 3.22% | 567 |
| Sweden | 2.97% | 12,842 |

**Table 4: Top Countries with Modbus Devices** — We identified Modbus hosts in 117 countries, with the top 10 countries accounting for 67% of the total count. Nearly one-quarter of all Modbus hosts are located in the United States.

| **Device Type** | **Count** |
|-----------------|-----------|
| Modbus Ethernet Gateway | 1,440 |
| Programmable Logic Controller | 1,054 |
| Solar Panel Controller | 635 |
| Water Flow Controller | 388 |
| Power Monitor/Controller | 158 |
| Touchscreen System Controller | 79 |
| SCADA Processor/Controller | 99 |
| Environment/Temperature Sensor | 10 |
| Cinema Controller | 5 |
| Generic Modbus Device | 28,750 |

**Table 5: Modbus Devices** — We used Censys to categorize publicly available industrial control systems that support the Modbus protocol.

#### 6.2 Heartbleed, Poodle, and SSLv3

In 2014, the security community faced two catastrophic TLS vulnerabilities: Heartbleed [12] and Poodle [33]. Heartbleed was caused by an implementation error in OpenSSL, resulting in servers leaking private data, including cryptographic keys and login credentials. Poodle was caused by a fundamental flaw in the SSLv3 protocol, allowing attackers to man-in-the-middle connections. Both vulnerabilities received widespread research and media attention. The key question was, "What hosts are still vulnerable?" Internet-wide scanning was crucial for understanding the impact and facilitating notifications.

To determine which hosts with browser-trusted certificates remained vulnerable to Heartbleed, we queried Censys for `443.https.certificate.signature.valid:true` and aggregated the `443.https.heartbleed_vulnerable` field. Similarly, to determine the percentage of hosts supporting only SSLv3, we queried for HTTPS hosts and aggregated the `443.https.tls_version.name` field, which completed in 229 ms. The current state of Heartbleed and SSLv3 is provided in Table 6.

| **Vulnerability** | **IPv4** | **Alexa** |
|-------------------|----------|-----------|
| Heartbleed | 1.16% | 0.96% |
| SSLv3 Support | 46.0% | 55.8% |
| SSLv3 Only | 0.05% | 2.9% |
| IPv4 Trusted | 0.19% | 34.7% |
| SHA-1 Only | 0.07% | - |

**Table 6: Heartbleed and SSLv3** — Breakdowns for the Heartbleed vulnerability and SSLv3 support for HTTPS hosts in the IPv4 address space and the Alexa Top 1 Million.

Despite Heartbleed being disclosed over a year ago, over 1% of the Alexa Top 1M domains remain vulnerable. Additionally, 46% of HTTPS-enabled Alexa Top 1M sites still support SSLv3, down from 97% at the time of the POODLE disclosure four months ago [16]. All of the data used to make these measurements can be publicly queried on Censys’s web interface.

**Figure 4: SSLv3 Deprecation** — Censys tracks both the IPv4 and Alexa Top 1 Million websites. We track the deprecation of SSLv3 after the POODLE announcement using Censys. We find that support for SSLv3 has dropped from 96.9% to 46.0% between October 2014 and February 2015 for the Top 1 Million Websites.

**Figure 5: HTTPS Cipher Suites** — We show the breakdown of cipher suites chosen by all IPv4 hosts, hosts with browser-trusted certificates, and the Alexa top million domains using numbers returned by Censys’s web interface.

By querying Censys, we find that Internet-connected Modbus devices are pervasive despite the lack of security in the protocol. In situations where remote access is required, good security practice dictates that Modbus devices should be access-controlled through the use of a firewall or VPN [32]. Unfortunately, Censys identified many publicly accessible Modbus devices as network-enabled SCADA processors and gateways, capable of forwarding instructions to and controlling other networks of SCADA devices that might not be directly connected to the Internet. Censys located devices spread over 1,880 ASes and 111 countries, with the top countries accounting for 77% of the devices (Table 4).

We acknowledge that not all vulnerabilities can be immediately detected upon disclosure without some level of code modification. However, the data processing and application scanner framework in Censys allows researchers to quickly respond to vulnerabilities and easily develop custom scan modules if necessary. For example, in the case of Heartbleed, a minor modification to ZGrab to send a custom Heartbeat packet was all that was needed to stream Heartbleed scan data into Censys. Realistically, automated measurement in Censys can be started within a few hours of vulnerability disclosure. As the protocol coverage of Censys increases, the need for custom scan modules will further decrease. In the case of POODLE, FREAK, and Logjam, measurement of supported TLS versions and cipher suites would have been sufficient to detect vulnerability trends immediately at the time of disclosure.

#### 6.3 Institutional Attack Surface

Managing large, publicly accessible networks is a complex process. Censys can be used by organizations to measure their external-facing attack surface. Network-connected devices can be difficult to keep track of, and users may mistakenly open up devices and services intended to be private. Censys supports queries based on network blocks and ASes, which an organization can use to easily export all the data that Censys has gathered about their publicly-accessible services. This data can be used to identify mistakenly exposed or vulnerable devices, as well as to identify devices that may have been overlooked when patching software.

Unfortunately, these mistakenly exposed devices might not only present a security risk to the institution hosting them but also to the entire Internet. For example, misconfigured public NTP and DNS resolvers are a major cause of the new trend in amplification DDoS attacks [14, 27]. Amplification attacks can be globally prevented by eliminating publicly accessible open resolvers and NTP servers. Several initiatives, such as The Open Resolver Project [31] and The Open NTP Project [34], provide free scanning services for network administrators to identify misconfigured or publicly accessible devices that could be leveraged for amplification attacks. Censys removes the need for service-specific and vulnerability-specific scanning initiatives. Censys provides similar services and is both real-time and Internet-wide.

#### 6.4 Deprecating SHA-1

The Chrome Security team is leading an effort to deprecate HTTPS certificates signed using SHA-1, citing the decreasing cost of collision attacks [35]. Chrome now shows certificates signed with SHA-1 and expiring before 2016 as secure, displays a warning for those expiring between 2016 and 2017, and rejects SHA-1 signed certificates expiring in 2017 or later as insecure.

We used Censys to characterize the current prevalence of SHA-1 signed certificates for HTTPS hosts with browser-trusted certificates. Specifically, we queried Censys to find all browser-trusted certificates expiring in 2015, 2016, and 2017 or later (e.g., `443.https.certificate.signature.valid: true AND 443.https.certificate.validity.end:[2017 TO *]`), and used Censys’s aggregation feature to bucket results, as shown in Table 7.

| **Expires** | **Count** | **SHA-1 %** | **Total %** | **Chrome** |
|-------------|-----------|-------------|-------------|------------|
| 2015 | 6.86 M | 46.0% | 19.0% | Secure |
| 2016 | 2.84 M | 11.3% | 60.2% | Warning |
| 2017+ | 1.69 M | 6.0% | 25.0% | Insecure |

**Table 7: SHA-1 Prevalence** — Chrome is beginning to mark sites with SHA-1 signed certificates as insecure. We used Censys to measure the fraction of trusted sites with SHA-1 certificates and how they appear in Chrome.