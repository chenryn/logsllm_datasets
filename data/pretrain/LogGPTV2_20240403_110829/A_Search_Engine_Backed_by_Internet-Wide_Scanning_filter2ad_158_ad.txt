everyone to dynamically deﬁne new reports.
5.
INITIAL DEPLOYMENT
We are releasing Censys with the sixteen protocols listed
in Table 2, which we are scanning from the University of
Michigan.
Scanning. We originally scheduled all protocols to run on
a daily basis, but quickly reduced scan speed and frequency
due a non-negligible uptick in complaints and exclusion re-
quests. Instead, we have switched to scheduling scans based
on protocol turnover. We speciﬁcally scan HTTP, HTTPS,
and CWMP on a daily basis; SSH, Modbus, FTP, DNS,
NTP, UPnP, SMTP, and SSH biweekly; and IMAP, IMAPS,
POP3, POP3, POP3S, HTTPS/SSLv3, and HTTPS/Heart-
bleed weekly. All scans are performed over a 24 hour hour
period. We plan to further ﬁne tune this schedule based
on which protocols are frequently searched and downloaded
after public release, and will post updated schedules on the
web interface.
Backend. During initial testing, when we scanned ev-
ery protocol daily, we were able to consistently complete
all sixteen scans from a pool of 12 scan workers and ZDb
comfortably handled upwards of 40 full-speed scans on a sin-
gle host—an Intel branded server with with two Intel Xeon
E5-2640 (6 cores at 2.50GHz) processors, 192 GB of DDR3
memory, and RAID 1+0 with four Intel 850 Pro 1 TB SSD
drives. Our scan workers are Dell PowerEdge 1950s, with a
Quad-Core Intel Xeon X5460 at 3.16 Ghz, 16 GB of memory,
and a local 1 TB 7200 RPM SATA drive.
Frontend. Our front-end is powered by a number of
components. The web interface itself is implemented as a
Python Pyramid project, served through Google App Engine,
our search backend is powered by Elasticsearch and Apache
Lucene, historical data is stored in Google Datastore, and his-
torical and advanced queries utilize Google BigQuery. With
the exception of Elasticsearch, these services will autoscale
based on load. During private testing, we were comfortably
able to serve Elasticsearch requests for a small number of
internal users from a single server (2 x Intel Xeon E5-2640 (6
cores at 2.50GHz) processors, 192 GB of DDR3 memory, and
RAID 1+0 with four Intel 850 Pro 1 TB SSD drives). How-
ever, it remains unclear exactly what Censys’s load will look
like after we launch publicly. Our initial public Elasticsearch
deployment runs on Google Compute Engine and consists
of six backend data nodes, each with 52 GB of memory, 8
VCPUs, and 500 GB solid state storage, and two front-end
nodes. We can add additional nodes to the cluster as load
dictates.
6. APPLICATIONS
Exposing scan data to new sets of researchers, who do not
otherwise have access to scanning methodologies was one
of the primary motivations for developing Censys. In this
section, we show how Censys can be used to easily answer
frequently asked Internet measurement questions, as well as
questions from recent security studies.
6.1
Industrial Control Systems
SCADA (Supervisory control and data acquisition) sys-
tems provide a communication channel for computer systems
to control industrial equipment, such as motors, generators,
and physical sensors. SCADA-enabled devices are used ex-
tensively in industrial and infrastructure-critical systems,
ranging from factories and power plants to HVAC systems
and water treatment facilities. Attacks on these systems
are particularly dangerous, because SCADA devices bridge
the gap from virtual to physical and have devastating con-
sequences.
In one recent example, the compromise of a
blast furnace control system resulted “massive damage” to a
German steel mill in 2014 [39].
One of the primary SCADA protocols, Modbus, was origi-
nally designed for local communication over a serial connec-
tion, but has since been extended to operate over networks
and the Internet [32]. The protocol contains no authentica-
tion, and as a result, publicly accessible Modbus devices are
an inherent security risk. To show how Censys can be used
characterize these devices, we implemented annotations to
identify diﬀerent types of Modbus devices. With 42 annota-
tions, we categorized 92% of Modbus devices that responded
to a device identiﬁcation request. These annotations contain
device classiﬁcation, hardware manufacturer, software name,
and version. We queried Censys for modbus devices and
Country
United States
Spain
Italy
France
Turkey
Canada
Denmark
Taiwan
Europe
Sweden
Total
Modus Devices
24.7%
7.58%
6.39%
6.02%
4.63%
4.30%
3.83%
3.57%
3.22%
2.97%
67.23%
4723
1,448
1,220
1,149
884
822
732
682
615
567
12,842
Table 4: Top Countries with Modbus Devices — We
identiﬁed Modbus hosts in 117 countries, with the top 10
countries accounting for 67% of the total costs, and nearly
one-quarter of all Modbus hosts we identifed are located in
the United States.
Device Type
Modbus Ethernet Gateway
Programmable Logic Controller
Solar Panel Controller
Water Flow Controller
Power Monitor/Controller
Touchscreen System Controller
SCADA Processor/Controller
Environment/Temperature Sensor
Cinema Controller
Generic Modbus Device
Count
1,440
1,054
635
388
158
79
99
10
5
28,750
Table 5: Modbus Devices — We used Censys to categorize
publicly available industrial control systems that support the
Modbus protocol.
Vulnerability
Heartbleed
SSLv3 Support
SSLv3 Only
Alexa
IPv4
1.16% 0.96%
46.0% 55.8%
0.05%
2.9%
IPv4 Trusted
0.19%
34.7%
0.07%
Table 6: Heartbleed and SSLv3 — We show a break-
downs for the Heartbleed vulnerability and SSLv3 support
for HTTPS hosts in the IPv4 address space and the Alexa
Top 1 Million.
Expires
2015
2016
2017+
Count %SHA-1 % Total Chrome
6.86 M
Secure
46.0%
19.0% Warning
2.84 M
1.69 M
11.3% Insecure
60.2%
25.0%
14.8%
Table 7: SHA-1 Prevalence — Chrome is beginning to
mark sites with SHA-1 signed certiﬁcates as insecure. We
used Censys to measure the fraction of trusted sites with
SHA-1 certiﬁcates and how they appear in Chrome.
8
6.2 Heartbleed, Poodle, and SSLv3
The security community watched two catastrophic TLS
vulnerabilities unfold in 2014: Heartbleed [12] and Poo-
dle [33]. Heartbleed was caused by an implementation error
in OpenSSL that resulted in servers publicly leaking private
data, including cryptographic keys and login credentials. Poo-
dle was caused by fundamental ﬂaw in the SSLv3 protocol,
which allowed attackers to man-in-the-middle connections.
Both of these vulnerabilities garnered both widespread re-
search [15, 16, 19] and media attention. The fundamental
question of “What hosts are still vulnerable?” surrounded
the disclosures, and Internet-wide scanning was the key tool
used for both understanding the impact of the vulnerabilities
and facilitating Internet-wide notiﬁcations. Unfortunately,
data describing the susceptibility of the Internet stagnated
after initial publications. Despite this, the question of who
is vulnerable remains important.
To determine what hosts with browser trusted certiﬁcates
remained vulnerable to Heartbleed, we queried Censys for
443.https.certificate .signature.valid:true and aggre-
gated the 443.https.heartbleed_ vulnerable ﬁeld. Simi-
larly, to determine what percentage of hosts only supported
SSLv3 we queried for HTTPS hosts and aggregated the 443.
https.tls_version.name ﬁeld, which completed in 229 ms.
We provide breakdowns of the current state of Heartbleed
and SSLv3 in Table 6.
Despite Heartbleed being disclosed over a year ago, over
1% of the Alexa Top 1M domains remain vulnerable. Ad-
ditionally, 46% of HTTPS-enabled Alexa Top 1M sites still
support SSLv3, down from 97% at the disclosure of POO-
DLE four months ago [16]. All of the data used to make
these measurements about the current state of the Internet
can be publicly queried on Censys’s web interface.
Figure 4: SSLv3 Deprecation — Censys tracks both the
IPv4 and Alexa Top 1 Million websites. We track the depre-
cation of SSLv3 of both after the POODLE announcement
using Censys. We ﬁnd that the support for SSLv3 has
dropped from 96.9% to 46.0% between October 2014 and
February 2015 for the Top 1 Million Websites.
Figure 5: HTTPS Cipher Suites — We show the break-
down of cipher suites chosen by all IPv4 hosts, hosts with
browser trusted certiﬁcates, and the Alexa top million do-
mains using numbers returned by Censys’s web interface.
aggregated hosts based on type, which identiﬁed 32,622 hosts
and completed in 21 ms. We show the breakdown of device
types in Table 5.
By querying Censys, we ﬁnd that Internet-connected Mod-
bus devices are pervasive, despite the total lack of security in
the protocol. In situations where remote access is required,
good security practice dictates that Modbus devices should
be access-controlled through the use of a ﬁrewall or VPN [32].
Unfortunately, Censys identiﬁed many of the publicly acces-
sible Modbus devices as network-enabled SCADA processors
and gateways, capable of forwarding instructions to and
controlling other networks of SCADA devices which might
not be directly connected to the Internet. Censys located
devices spread over 1,880 ASes and 111 countries, with the
top countries accounting for 77% devices (Table 4).
9
We acknowledge that not all vulnerabilities can imme-
diately be detected upon disclosure without some level of
code modiﬁcation. However, the data processing and appli-
cation scanner framework in Censys allows researchers to
quickly respond to vulnerabilities and to easily develop a
custom scan module, if necessary. For example, in the case of
Heartbleed, a minor modiﬁcation to ZGrab to send a custom
Heartbeat packet was all that was needed in order to stream
Heartbleed scan data into Censys. Realistically, automated
measurement in Censys can be started within a few hours of
vulnerability disclosure. As the protocol coverage of Censys
increases, we except the need for custom scan modules will
further decrease. In the case of POODLE, FREAK, and
Logjam, measurement of supported TLS versions and cipher
suites would have been suﬃcient in detecting vulnerability
trends immediately at the time of disclosure.
6.3
Institutional Attack Surface
Managing large, publicly accessible networks is an in-
volved and complicated process. Censys can be used by
organizations to measure their external-facing attack surface.
Network-connected devices can be diﬃcult to keep track
of, and users may mistakenly open up devices and services
intended to be private. Censys supports queries based on
network blocks and ASes, which an organization can use
to easily export all of the data that Censys has gathered
about their publicly-accessible services. This data can be
used to identify mistakenly exposed or vulnerable devices,
as well as identify devices that may have been overlooked
when patching software.
 0 0.2 0.4 0.6 0.8 110/1811/0111/1511/2912/13Percentage of Sites that Support SSLv3 0 10 20 30 40 50 60 70 80rsa_with_rc4_128_sharsa_with_aes_256_cbc_shaecdhe_rsa_with_aes_128_gcm_sha256rsa_with_aes_128_cbc_shaecdhe_rsa_with_aes_256_cbc_sharsa_with_aes_128_gcm_sha256ecdhe_rsa_with_rc4_128_sharsa_with_3des_ede_cbc_shaPercentage of HostsAll Hosts IPv4Trusted Hosts IPv4Alexa Top 1 MillionUnfortunately, these mistakenly exposed devices might not
only present a security risk to the institution hosting them,
but also to the entire Internet. For example, misconﬁgured
public NTP and DNS resolvers are the major cause of the new
trend in ampliﬁcation DDoS attacks [14,27]. Ampliﬁcation
attacks can be globally prevented by eliminating publicly
accessible open resolvers and NTP servers. As a result,
several initiatives such as The Open Resolver Project [31] and
The Open NTP Project [34] provide free scanning services
on networks of up to 1,024 hosts for network administrators
to use to identify misconﬁgured or publicly accessible devices
that could be leveraged for ampliﬁcation attacks. Censys
removes the need for service-speciﬁc and vulnerability-speciﬁc
scanning initiatives. Censys provides similar services as both
of these initiatives, and is both real-time and Internet-wide.
6.4 Deprecating SHA-1
The Chrome Security team is spearheading an eﬀort to
deprecate HTTPS certiﬁcates signed using SHA-1, citing the
decreasing cost of collision attacks [35]. Chrome now shows
certiﬁcates signed with SHA-1 and expiring before 2016 as
secure, displays a warning for those expiring between 2016
and 2017, and rejects SHA-1 signed certiﬁcates expiring in
2017 or later as insecure.
We used Censys to characterize the current prevalence
of SHA-1 signed certiﬁcates for HTTPS hosts with browser
trusted certiﬁcates. Speciﬁcally, we queried Censys to ﬁnd all
browser-trusted certiﬁcates expiring in 2015, 2016, and 2017
or later (e.g. 443.https.certificate.signature.valid:
true AND 443.https.certificate.validity.end:[2017 TO
*]), and used Censys’s aggregation feature to bucket results