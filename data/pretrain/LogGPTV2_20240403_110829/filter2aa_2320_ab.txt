5
6
7
8
9
computer speech
Haptic
vibration patterns
ORDERED SET OF POSSIBLE CUES
Mapping to Interface
System
C0 C1 C2 C3 ...
... Cn
Generalizing: cues with order
The Wheel GUI
1 to 1 assignment of cues to slots
Mapping to Interface
System
C0 C1 C2 C3 ...
... Cn
Generalizing: cues with order
C8
C9
C0
C1
C2
C3
C4
C5
C6
C7
Start
Map every cue to a slot 
•randomly 
•preserving order
The Wheel GUI
Interaction
System
C9 C1 C6 C3
Letʼs make a password using the cues
System Randomize slice-cue 
assignment preserving order
User move the ﬁnger over the 
slices and search the right cue
User selects the cue 
clicking the center of the wheel
C8
C9
C0
C1
C2
C3
C4
C5
C6
C7
Interaction
System
C9 C1 C6 C3
Letʼs make a password using the cues
C8
C9
C0
C1
C2
C3
C4
C5
C6
C7
System Randomize slice-cue 
assignment preserving order
User move the ﬁnger over the 
slices and search the right cue
User selects the cue 
clicking the center of the wheel
Interaction
System
C9 C1 C6 C3
Letʼs make a password using the cues
C8
C9
C0
C1
C2
C3
C4
C5
C6
C7
System Randomize slice-cue 
assignment preserving order
User move the ﬁnger over the 
slices and search the right cue
User selects the cue 
clicking the center of the wheel
Interaction
System
C9 C1 C6 C3
Letʼs make a password using the cues
C8
C9
C0
C1
C2
C3
C4
C5
C6
C7
System Randomize slice-cue 
assignment preserving order
User move the ﬁnger over the 
slices and search the right cue
User selects the cue 
clicking the center of the wheel
Interaction
System
C9 C1 C6 C3
Letʼs make a password using the cues
System Randomize slice-cue 
assignment preserving order
User move the ﬁnger over the 
slices and search the right cue
User selects the cue 
clicking the center of the wheel
C3
C4
C5
C6
C7
C8
C9
C0
C1
C2
Start
Interaction map
System
Cue 
Assignment
Search
Navigation
Selection
Ordered Randomization
Authentication 
Denied
Authentication 
Granted
In practice: demo
System
Inserting the PIN 1 2 4 3
Evaluation: 2 studies
Evaluation
To gauge our interface we conducted 2 experiments
Pilot Study
Test cue recognition rate
Evaluate if cues are  
perceptually distinct 
(recognition time and error) 
User Study
Evaluation of interface to 
explore 2 trade-offs.
Audio VS Haptics
Large alphabet VS
Small alphabet
Pilot Study - Highlights
Evaluation
•Simple recognition task. Simplified system.
•Mean cue recognition time: 2.25s
•Mean error:14% (for the large haptic alphabet)
Mid-length 80ms element were the most challenging
User Study: analyze the trade-offs
Evaluation
We analyze 2 trade offs, maintaining a security level of 1/10000
(the security of a standard numerical 4 digit PIN). 
Audio
Haptics
4 digits PIN
0,1,2,3,4,5,6,7,8,9
6 digits PIN*
0,1,2,3,4
*The 6 digits PIN test is to compare Phone Lock against previous work
We are interested in authentication time and errors.
Audio VS Haptics
1
VS
Large alphabet
(short PIN)
Small alphabet
(long PIN)
2
Audio
Haptics
PIN 6
PIN 4
PIN 6
PIN 4
Results
Trade-offs (2-way ANOVA) 
Modality signiﬁcant (p Haptics.
Is because it is more familiar?
CHI 2010
•Better performing than previous similar systems
•Error rate: 7% study < 14% pilot
People understood how to navigate the interface
Contributions
Results
•Introducing the Invisible Password model using audio and 
tactile cues
•Introducing one possible interface and method for mobile 
phones (Phone Lock) to use with Haptic and Audio PINs 
•Preliminary user tests suggests that Invisible Password 
thought haptic and audio have a lot of potential
•They are good ﬁt for tangible user interfaces
•Simple cognitive task such as recognition is good
Spinlock: a Single-Cue Haptic and Audio PIN Input 
Technique for Authentication
The SpinLock
Bianchi, A., Oakley, I., Kwon, D. Spinlock: a Single-Cue Haptic and Audio PIN Input Technique for Authentication. 
To Appear in Proceedings of HAID 2011, LNCS, Springer, 2011.
The problem with haptic passwords
Motivations
Haptic Password using tactons is based on recognition: 
high cognitive load, memorability issues, high error rates and input time
The problem with haptic: example
Motivations
The problem with haptic: example
Motivations
VS
Can we create an interface with only 1 tactile cue 
instead of using many?
Can we build an interface with a different interaction methods that 
doesnʼt require recognition but only counting?
Interaction principle
Implementation
Using a similar interaction of a safe dial:
directions + numbers (e.g. 2 left, 3 right, 4 left...)
Implementation for a phone
Password are a sequence of direction-number of buzzes or beeps
Implemented for phone devices
Using haptics and audio output
Implementation
How it works: example
Implementation
User Study Planning
User study to compare performance of audio vs haptics, with 
different password sizes.
Evaluation
Hypothesis 1:
counting is faster than recognition
Hypothesis 2:
counting is less error prone than recognition
Hypothesis 3:
counting comports smaller cognitive load than recognition
The user study
2 modalities    x       2 PIN complexity
haptic/audio
numbers 1-5 / numbers 1-10
12 participants (7 male, 5 female with age between 22 and 30 years)
15 trials (ﬁrst 5 as training)= 480 complete correct PIN entries and 
1920 individual data input
PIN randomly generated
Evaluation
User Study Balancing
P I N c o m p l e x i t y w a s 
b a l a n c e d 
a m o n g 
participants
Modality was balanced 
within each PIN complexity 
block
Repeated measures experiment
PIN
Modality
User 1
Short
Haptic
User 2
Long
Haptic
User 3
Short
Haptic
User 4
Long
Audio
User 5
Short
Audio
User 6
Long
Audio
User 7
Short
Haptic
User 8
Long
Haptic
User 9
Short
Haptic
User 10
Long
Audio
User 11
Short
Audio
User 12
Long
Audio
Evaluation
User Study Setup
Quiet room
Procedure:
Demographic + Instruction + Free test + 4 studies + TLX
Mobile devices + connected to PC and Bluetooth for generating 
haptics
All data were tested using 
two-way repeated measures 
ANOVAs.
Evaluation
Results: time and errors
Results
Time: signiﬁcant effect on modality and PIN complexity (p<0.05) 
but no interaction 
Error: signiﬁcant effect only on modality (p<0.05)
Results
Time: signiﬁcant effect on modality and PIN complexity (p<0.05) 
but no interaction 
Error: signiﬁcant effect only on modality (p<0.05)
Results: time and errors
Time: signiﬁcant effect on modality and PIN complexity (p<0.05) 
but no interaction 
Error: signiﬁcant effect only on modality (p<0.05)
Results
Results: time and errors
The two-way ANOVA on the overall workload of the TLX showed a 
signiﬁcant effect of modality (p=0.002) but not PIN complexity 
Results
Results: cognitive load
Discussion
Haptic modality more challenging but preferred as it was 
more “private”.
HAPTIC
Signiﬁcant differences were observed in the mean PIN entry times, 
failed authentication rates and overall workload.  
One possible explanation for this is system latency.
PIN COMPLEXITY
PIN complexity, on the other hand, resulted in increased task 
completion times, but had no signiﬁcant effect on other metrics. 
Results
Discussion
82% of error trials involved a mistake in only one PIN item.
The majority of errors (78%) involved entering digits one higher or 
lower than the target item.
That participants were typically aware of such errors  (= resets)
Results
Comparison
Results
Spinlock
PhoneLock
Spinlock also performs well compared to previous systems
15.4 seconds and 6% 
18.7 seconds and 7% errors
Haptic Comparison
Results
Spinlock
PhoneLock
Haptic Spinlock system improves 30% over that reported in PhoneLock
Haptic Comparison
Results
Spinloc
PhoneLock
Conclusions
Results
ACCEPTED
ACCEPTED
ACCEPTED
User study to compare performance of audio vs haptics, with 
different password sizes.
Hypothesis 1:
counting is faster than recognition
Hypothesis 2:
counting is less error prone than recognition
Hypothesis 3:
counting comports smaller cognitive load than recognition
THE ENEMY WITHIN:
PROTECTED KEY COMMUNICATION
FOR UNTRUSTED TERMINALS
PART II
SOFTWARE MEDIATED INPUT
UNTRUSTED TERMINALS
The password can be kept secret by the user...
1m.50.1337
...and encryption can keep it secure within the network...
...but it still has to be entered “in the clear” at the terminal!
keystroke loggers are a major method of password 
observation & compromise.
‣OS-level loggers on pwned machines
‣Malicious logging hardware
BEING RECORDED
Many examples of malware install logging software...
...as do stalkers such as jealous husbands, 
employers, governments...
Some UI elements that may be logged:
‣Keystrokes
‣Mouse clicks
‣Screenshots
‣Mouse movements
PASSWORD MANAGEMENT
Computers & browsers now commonly contain 
“Keychain” password management software...
...but that’s no help on an untrusted public terminal...
...and sometimes you just have 
no choice but to use that 
internet café in Uzbekistan.
• Forced password changes
• Damage control
• Image-based access methods
• Changing security questions
• One-time-password via SMS
• Phone theft gives bonus account access
• One-time-PIN token
• Reduces value of stealing password
• Printed list of one-time password modiﬁers
SOME WEB PROTECTIONS
Few sites offer multiple options, and in many cases not even one!
• Can’t verify integrity of system
• Usually can’t install or run application software
• Can access pretty much any web content
PROBLEM SUMMARY
Ideal outcome:
Application software for increased resistance to 
credential loss & replay attack for any website
Public terminal constraints:
BUT
Goal: obfuscate data entry via simple, minimally tedious web mechanics
• Defense: “Scissor” password copy-paste
• Counterattack: Clipboard logging
• Defense: Character select-drag-drop
• Defense: Onscreen keyboards
• Counterattack: Mouse click screen region capture
• Defense: Chaff logs via tedious extraneous character entry
• Counterattack: Log mining in concert with screen & mouse 
logging and timestamping (theoretical)
COMMON NAÏVE APPROACHES
• Form grabbing malware hooks browser form submit pre-encryption
• e.g. Online banking theft trojans ZeuS, SpyEye
• Represents majority of password-stealing trojans
• However:
• Limited platform/browser support (currently Windows-only)
• There is no UI mechanism that can defend against this tactic anyway
• We are primarily interested in interface design
• Still worth defending against UI-device-level loggers
WHAT ABOUT FORM GRABBERS?
• Keep any sensitive text entirely out of key log
• Minimize data leakage via other UI logging mechanisms
• Novel interaction methods while trying to minimize tedium
• Support evolutionary ecosystem: force attackers to adapt
• Custom interface element production via JavaScript injection:
BASIC APPROACH
javascript:void((function() {var element=document.createElement('script'); 
element.setAttribute('type', 'text/javascript'); element.setAttribute('language', 
'JavaScript'); element.setAttribute('src', 'https://path/to/logresist.js'); 
document.getElementsByTagName("head")[0].appendChild(element);})())
• Key remapper (no mouse)
• User interface metaphor: hunt-and-peck 
keyboard
• Can be regenerated on per-keystroke 
basis if required
• Susceptible to screen capture, but only 
if triggered by keystroke
• Keylog output: encrypted stream equal 
in length to plaintext
• Time cost: visual search
ONE-TIME-PAD SCRAMBLER
• Animated key selector
• User interface metaphor: combo lock
• Uses mouse but no clicks
• Susceptible to screen capture, but only if 
triggered by keystroke and synchronized 
with mouse pointer location history
• Keylog output: string of identical 
characters, arbitrary length
• Time cost: visual search plus (variable) 
animation
ROTARY INJECTOR
• Auditory stimulus to key location
• User interface metaphor: audio 
phone lock
• Immune to screen capture
• Keylog output: string of identical 
characters, arbitrary length
• Time cost: ﬁxed animation
AUDIO KEYMAPPER
• Give users choice of obfuscation methods independent 
of support offered by web service
• Seed ecosystem of custom methods easy to implement 
and select
• Offer modalities not traditionally logged (e.g. audio)
• Force attackers to expend more effort
• Examples of methods from very large potential space
• User evaluation studies yet to be performed
SUMMARY
DESITUATING THE INTERACTION:
PROTECTED KEY TRANSMISSION
FOR PRIVATE DEVICE SOLUTIONS
PART III
HARDWARE MEDIATED INPUT
Using Light Patterns to Secretly Transmit a PIN
Luxpass
PRIVATE DEVICE MEDIATION
1. Different people want different password schemes
CHOICE
and a personal private device is where this is possible
PRIVATE DEVICE MEDIATION
2. We want to move away the interaction from the physical 
terminal and a private device can help us in this too!
We shift the problem from authentication to secure 
communication chanel
CURRENT PROBLEMS
3. Fast interaction, easy to use
1. Spontaneous interaction - No pairing needed
2. No wireless - Safe against Man In The Middle Attack
X
X O
X
X
Current problems with hardware mediated interaction
PROPOSED MODEL
1) Shift the interaction away from the terminal, on a private 
device
2) Avoid wireless to avoid a Man In The Middle (MITM) attack.
3) Secure authentication with no pairing requirements:
you cannot pair a phone to any terminal you will ever use. PKI is not 
always possible.
4) Authentication, not identiﬁcation: RFID can be stolen 
more easily than passwords. Also passwords are easier to replace.
5) Must be cheap to make, to install. Easy to use.
WANTED INTERACTION
PHYSICAL PROXIMITY
LUXPASS
LuxPass (under submission)
Encoding a password in light patterns
User
has a 
password
Inserts a
password on 
mobile phone
Computer + 
light scanner
get the signal
and translate it
Authentication
The password
is encoded in 
a light signal
(as with Morse)
Input
0001
0010
0011
0100
Light
INPUT ON PRIVATE INTERFACES
LUXPASS: TECHNICAL EVALUATION
- Error rate < 1%
- Plain text transmission time < 1 second
- MD5- 128 bit hashing encryption: 5.5 seconds
Work In Progress - LuxPass Color
LUXPASS COLOR
Work In Progress
MAGNOPASS
Solenoid
Patterns of on/off 
magnetic ﬁeld
Mag Sensor
Conclusions
•
Passwords & PINs are not going away
•
We still need to authenticate with public locations/terminals
•
Generally simple methods can improve their security in potential 
observation risk scenarios
•
Diversifying ecosystem of entry methods
•
Mediated obfuscation of entered data
•
Presented novel key entry systems for terminals & private devices
•
Presented software & hardware mediators for observation 
resistance
•
Attacks will always be developed – you don’t have to run faster than 
the bear, just faster than everyone else!