### Invisible Password Model: Using Audio and Haptic Cues

#### Introduction
- **Computer Speech**: Utilizes audio cues.
- **Haptics**: Utilizes vibration patterns.
- **Ordered Set of Possible Cues**: A sequence of cues (C0, C1, C2, ..., Cn).

#### The Wheel GUI
- **1-to-1 Assignment of Cues to Slots**:
  - **Mapping to Interface System**: C0, C1, C2, C3, ..., Cn.
  - **Generalizing with Order**: Cues are assigned in a specific order.

#### Interaction Flow
- **Start**: Map every cue to a slot either randomly or while preserving the order.
- **System Randomization**: The system randomizes the slice-cue assignment while maintaining the order.
- **User Interaction**:
  - Move the finger over the slices to search for the right cue.
  - Select the cue by clicking the center of the wheel.

#### Example Interaction
- **System**: C9, C1, C6, C3.
- **Let's Make a Password Using the Cues**:
  - **System**: Randomize slice-cue assignment preserving order.
  - **User**: Move the finger over the slices and search for the right cue.
  - **User**: Select the cue by clicking the center of the wheel.

#### Evaluation
- **Pilot Study**:
  - **Objective**: Test cue recognition rate and evaluate if cues are perceptually distinct.
  - **Highlights**:
    - Mean cue recognition time: 2.25 seconds.
    - Mean error: 14% (for the large haptic alphabet).
    - Mid-length 80ms elements were the most challenging.

- **User Study**:
  - **Objective**: Explore two trade-offs: Audio vs. Haptics and Large Alphabet vs. Small Alphabet.
  - **PIN Comparison**:
    - **Audio**: 4-digit PIN (0-9).
    - **Haptics**: 6-digit PIN (0-5).
  - **Results**:
    - **Time**: Significant effect on modality and PIN complexity (p < 0.05), but no interaction.
    - **Error**: Significant effect only on modality (p < 0.05).
    - **Cognitive Load**: Haptic modality more challenging but preferred for privacy.
    - **Discussion**: 82% of error trials involved a mistake in only one PIN item, with 78% of errors involving entering digits one higher or lower than the target item.

#### Spinlock: Single-Cue Haptic and Audio PIN Input Technique
- **Motivation**: Address high cognitive load, memorability issues, and high error rates in haptic passwords.
- **Interaction Principle**: Similar to a safe dial, using directions and numbers (e.g., 2 left, 3 right, 4 left).
- **Implementation**:
  - **Phone Devices**: Use haptics and audio output.
  - **Example**: Passwords are a sequence of direction-number of buzzes or beeps.
- **User Study**:
  - **Hypotheses**:
    - Counting is faster than recognition.
    - Counting is less error-prone than recognition.
    - Counting involves smaller cognitive load than recognition.
  - **Setup**: Quiet room, mobile devices connected to PC via Bluetooth.
  - **Results**:
    - **Time**: Significant effect on modality and PIN complexity (p < 0.05).
    - **Error**: Significant effect only on modality (p < 0.05).
    - **Cognitive Load**: Significant effect of modality (p = 0.002).

#### Conclusions
- **Contributions**:
  - Introduced the Invisible Password model using audio and tactile cues.
  - Developed a possible interface and method for mobile phones (Phone Lock) to use with Haptic and Audio PINs.
  - Preliminary user tests suggest that Invisible Password through haptic and audio has potential.
  - Simple cognitive tasks such as recognition are effective.
- **Comparison**:
  - Spinlock performs well compared to previous systems, with 15.4 seconds and 6% errors.
  - Haptic Spinlock improves 30% over PhoneLock.

### Protected Key Communication for Untrusted Terminals

#### Problem Summary
- **Keystroke Loggers**: Major method of password observation and compromise.
- **Untrusted Public Terminals**: Lack of security and privacy.
- **Password Management**: Keychain software not helpful on untrusted terminals.

#### Common NaÃ¯ve Approaches
- **Form Grabbing Malware**: Hooks browser form submit pre-encryption.
- **Defense Mechanisms**:
  - Scissor password copy-paste.
  - Character select-drag-drop.
  - Onscreen keyboards.
  - Chaff logs via extraneous character entry.

#### Basic Approach
- **JavaScript Injection**: Custom interface element production.
- **Key Remapper**: Hunt-and-peck keyboard metaphor.
- **Animated Key Selector**: Combo lock metaphor.
- **Auditory Stimulus**: Audio phone lock metaphor.

#### Summary
- **User Choice**: Independent of web service support.
- **Ecosystem**: Custom methods easy to implement and select.
- **Modalities**: Not traditionally logged (e.g., audio).
- **Force Attackers**: To expend more effort.

### Desituating the Interaction: Protected Key Transmission for Private Device Solutions

#### Current Problems
- **Spontaneous Interaction**: No pairing needed.
- **No Wireless**: Safe against Man In The Middle (MITM) attacks.

#### Proposed Model
- **Shift Interaction**: Away from the terminal to a private device.
- **Secure Authentication**: No pairing requirements.
- **Authentication, Not Identification**: RFID can be stolen more easily than passwords.

#### LuxPass: Encoding a Password in Light Patterns
- **User Interaction**:
  - User has a password.
  - Inserts the password on a mobile phone.
  - Computer + light scanner get the signal and translate it.
- **Technical Evaluation**:
  - Error rate < 1%.
  - Plain text transmission time < 1 second.
  - MD5-128 bit hashing encryption: 5.5 seconds.

#### Conclusions
- **Passwords & PINs**: Are not going away.
- **Public Terminal Authentication**: Needs improvement.
- **Simple Methods**: Can enhance security in observation risk scenarios.
- **Diversifying Ecosystem**: Entry methods and mediated obfuscation.
- **Novel Key Entry Systems**: For terminals and private devices.
- **Software & Hardware Mediators**: For observation resistance.
- **Security**: Continual adaptation to new threats.