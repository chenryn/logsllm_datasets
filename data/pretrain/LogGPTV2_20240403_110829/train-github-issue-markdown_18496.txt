From @alextricity25 on 2016-04-08T15:37:25Z
##### ISSUE TYPE
  * Feature Idea
##### COMPONENT NAME
os_router
##### ANSIBLE VERSION
    ansible 2.0.1.0
      config file = /root/setup-infra/ansible.cfg
      configured module search path = Default w/o overrides
##### CONFIGURATION
No changes made to ansible.cfg
##### OS / ENVIRONMENT
I'm running Ubuntu 14.04, but this module is not platform-specific I don't
think.
##### SUMMARY
os_router can't take in a port ID as an internal interface, only a subnet.
See:  
https://github.com/ansible/ansible-modules-
core/blob/devel/cloud/openstack/os_router.py#L321
The neutron CLI allows you to specify a port ID as an interface, and therefore
allow you to specify an arbitrary IP for that interface. It would be nice if
the Ansible os_router module would allow you to do that.
##### STEPS TO REPRODUCE
This added feature would allow you to do something like:
    - name: Create port for my_net
      os_port:
        state: present
        name: "my_net_port"
        network: "my_net"
        fixed_ips:
          - ip_address: "192.168.100.50"
      register: my_net_port_results
    - name: Create my router
      os_router:
        name: my_router
        state: present
        network: "ext-net"
        interfaces: 
          - port: "{{ my_net_port_results.id }}"
          - "some_other_priv_subnet"
This would allow the user to specify either a subnet or a port for a router
internal interface.
##### EXPECTED RESULTS
The router would have two interfaces with the example playbook shown above. It
would have the default gateway of "some_other_priv_subnet", and it would have
the ip assigned to "my_net_port".  
This would allow subnets to be attached to multiple routers, which currently
isn't do-able through the os_router module.
##### ACTUAL RESULTS
TBD
Copied from original issue: ansible/ansible-modules-core#3390