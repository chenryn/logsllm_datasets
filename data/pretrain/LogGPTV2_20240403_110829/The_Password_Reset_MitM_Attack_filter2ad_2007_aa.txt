title:The Password Reset MitM Attack
author:Nethanel Gelernter and
Senia Kalma and
Bar Magnezi and
Hen Porcilan
2017 IEEE Symposium on Security and Privacy
The Password Reset MitM Attack
Nethanel Gelernter
Cyberpion, Israel
College of Management Academic Studies, Israel
Senia Kalma, Bar Magnezi, Hen Porcilan
College of Management Academic Studies, Israel
Abstract—We present the password reset MitM (PRMitM)
attack and show how it can be used to take over user accounts.
The PRMitM attack exploits the similarity of the registration and
password reset processes to launch a man in the middle (MitM)
attack at the application level. The attacker initiates a password
reset process with a website and forwards every challenge to the
victim who either wishes to register in the attacking site or to
access a particular resource on it.
The attack has several variants, including exploitation of a
password reset process that relies on the victim’s mobile phone,
using either SMS or phone call. We evaluated the PRMitM
attacks on Google and Facebook users in several experiments,
and found that their password reset process is vulnerable to
the PRMitM attack. Other websites and some popular mobile
applications are vulnerable as well.
Although solutions seem trivial in some cases, our experiments
show that the straightforward solutions are not as effective as
expected. We designed and evaluated two secure password reset
processes and evaluated them on users of Google and Facebook.
Our results indicate a signiﬁcant improvement in the security.
Since millions of accounts are currently vulnerable to the
PRMitM attack, we also present a list of recommendations for
implementing and auditing the password reset process.
I. INTRODUCTION
A password is the primary and most popular mechanism for
account protection. Users of web-services all use passwords
to prevent unauthorized parties from accessing their accounts.
For decades, this key role of passwords in the security world
has attracted many hackers and security researchers.
The ﬁrst computers had no need for passwords, and physical
obstacles were the only security countermeasures. The need
for passwords appeared with the rise of shared environments.
Initially, passwords were saved in plain text. The ﬁrst cases of
password theft introduced the need for other solutions, such
as using encryption, hashing, and salt [1].
Despite the improvements in secure password storage tech-
niques, attackers still hack databases and get information about
users and their hashed passwords [2]. The attackers then try to
break the passwords ofﬂine using classical attacks like brute-
force or dictionary attacks.
Even the most secure password storage will not help a user
who chooses a weak password. Unfortunately, many users tend
to choose easy to remember but also easy to guess passwords
[3]. To prevent users from making this kind of mistake, many
websites force their users to use strong passwords, or at least
give them an indication about the strength of their password
[4]. Enforcing strong passwords by applying restrictions to the
user passwords and providing indications about the strength of
the password were shown to be effective [5]–[8]. In addition to
Some of the challenges the attacker may come up against
© 2017, Nethanel Gelernter. Under license to IEEE.
DOI 10.1109/SP.2017.9
251
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
the strong password requirement, web-services such as banks,
which allow sensitive operations, often force their clients to
change their passwords frequently.
Choosing a strong password and ensuring it is securely
stored are imperative to maintaining account security. How-
ever, these efforts are not worth much if the password reset
process is vulnerable to attacks.
The fact that many users tend to forget their passwords has
raised the need for password reset mechanisms. Paradoxically,
the security requirements for choosing strong unique pass-
words and periodically replacing them, only makes password
forgetting more common [9], [10]. Today, most of the websites
with a password-based login system allow users to reset a lost
password.
Password resetting is a challenging process. The website
needs to ensure that the user can prove her identity without
that password. Most websites rely on the email address of
the victim, e.g., by sending a reset password link to the email
address that was used to register the website account. However,
this becomes much more challenging for the very important
websites that provide the email services.
Websites that cannot reset passwords via email address,
and websites that support cases in which the user lost access
to a registered email account, offer alternative ways to reset
the password. These websites use security questions or other
communication channels such as mobile phone to authenticate
the user before she receives the option to reset her password.
This paper shows that existing password reset processes in
many popular websites are vulnerable to attacks by a weak
attacker. In particular, we characterize, research, and evalute a
new attack, which we call password reset man-in-the-middle
(PRMitM).
In a basic PRMitM attack, a user accessed the website of
an attacker to get a resource, e.g., free software. The attacker
requires the user to login for free in order to access the
resource. During the registration process, or via other cross-
site attacks, the attacker gets the email address of the victim.
Then, on the server side, the attacker accesses the email service
provider website and initiates a password reset process. The
attacker forwards every challenge that he gets from the email
service provider to the victim in the registration process. In
the other direction, every ”solution” that is typed by the victim
in the registration process is forwarded to the email service
provider. That way, the cross-site attacker is actually a man in
the middle of a password reset process.
Fig. 1: Basic PRMitM attack illustration. In this example, the email service provider challenges the attacker with a CATPCHA
and a security question.
when he tries to reset a user’s password are CAPTCHA
challenges [11], security questions, and code that is sent to
the mobile phone. Figure 1 illustrates a basic PRMitM attack.
Counterintuitively, websites that rely only on sending pass-
word reset message code to the user’s mobile phone are
sometimes more vulnerable to the attack. This is because
the attacker can launch the PRMitM attack on them even in
scenarios that are simpler than registration to a website.
We explore and analyze the different password reset SMS
messages sent by popular websites to their users as well as
password reset using phone calls.
We surveyed the password-reset mechanism of the most
popular websites and of other popular email service providers,
and analyzed how vulnerable they are. Our ﬁndings show that
popular websites are vulnerable to PRMitM attacks, some of
them very severely.
For example, we found that Google,
the most popular
website in the world, is extremely vulnerable to PRMitM
attacks that exploit Google password reset using a phone call.
We also evaluated the PRMitM attack using SMS messages on
Facebook, the world’s second most popular website. Beyond
Google and Facebook, we found vulnerabilities in Yahoo!,
LinkedIn, Yandex and other email services. We also discovered
additional problems that occur in other websites and analyzed
PRMitM vulnerabilities in mobile messaging applications like
Whatsapp and Snapchat.
Beyond the surprisingly high number of vulnerable popular
services, our ﬁndings include several problems, some of them
surprising, that have not considered before in the design of
secure password-reset process:
1) Informative password-reset messages do not prevent ex-
ploitation of users, mainly because many users ignore the
text and just copy the code.
2) Users might be vulnerable to the attack, depending on
their language settings. This is either due to difference
252
in the content of password-reset messages in different
languages or due to services that provide services in
several languages, but send password-reset messages in
another language.
3) The PRMitM attack can be used to take over accounts
of very popular websites (e.g., Facebook) given minimal
information about the user (e.g., phone number only).
This allows easy exploitation in additional scenarios (not
registration).
As existing designs of password-reset processes are vul-
nerable, we designed secure password reset processes using
SMS and phone calls. We then evaluated their effectiveness
on real Facebook and Google users with excellent results,
mainly compared to the poor results achieved by their current
mechanisms. We summarize our work with a list of recom-
mendations for testing and improving the security of password
reset processes in many websites.
A. Contributions
We make the following contributions:
1) Introduce the PRMitM attack, a new attack that exploits
bad design of password-reset process in websites and
applications.
2) Evaluate the PRMitM attack on Google and Facebook,
the two most popular websites in the world.
3) Review the password reset processes of many popular
websites and comparing the different approaches.
4) Explore further and identify similar vulnerabilities in
popular mobile applications.
5) Design secure password reset processes using SMS and
phone calls, and evaluate of them on Google and Face-
book users. This was necessary, as our experiments
indicated that in some cases, the straightforward solutions
are not effective enough (see Experiment 2).
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
6) List recommendations for the secure design of the pass-
word reset process. Following the number of popular
websites affected, this list is critical for quickly patching
the vulnerabilities.
Our work has already helped several popular services im-
prove the security of their password reset process. We believe
it will help many other websites protect their users.
B. Organization
We begin with a description of the adversary model in
Section II; this section also includes a survey that justiﬁes the
practicality of this model. In Section III, we describe the basic
PRMitM attack. In Sections IV and V, we present and evaluate
PRMitM attacks on password reset processes using SMS and
phone-calls, respectively. Section VI shows that the PRMitM
attack can also be launched on some mobile applications.
Section VII presents possible defenses and evaluates them,
and Section VIII discusses related work. The last two sections
summarize our ﬁndings in a list of recommendations that can
be used by websites to test and improve their password reset
processes.
C. Ethics
Our institutes have no ethics committee. Nevertheless, we
followed common sense and advice from experts to conduct
the research ethically.
We reported our ﬁndings to the vulnerable vendors. Vendors
that are severely vulnerable to the PRMitM attack, either ﬁxed
the vulnerability (Snapchat, Yahoo!) or informed us that they
plan to ﬁx the vulnerability (Google, LinkedIn and Yandex).
Other websites, which are less vulnerable (e.g., Facebook)
thanked us, and told us they will consider using our ﬁndings
in the future, but they do not plan to apply ﬁxes soon.
In the experiments we conducted, we avoided accessing
information we did not get from the participants in advance.
We also did not take over their accounts or change anything
in their accounts. Additionally, we did not keep any private
information beyond the ﬁnal results (e.g., attack has succeeded
or not).
D. Methodology Challenges and Limitations
This paper presents a set of attacks and evaluates them on
different settings. Although the attack exploits vulnerability in
the design of the password-reset process, the attack includes
interaction with users. Hence, extensively rely on user studies
and surveys. Totally, 536 participants took part in the surveys
and the experiments that were done in this research; each of
them participated only in once experiment or survey.
The need of many participants for both the surveys and
the experiments was a technical challenge for us. Moreover,
the nature of most of the experiments made this challenge
becomes even harder. As our experiments simulate versions of
the PRMitM attack, we preferred to rely on volunteers that will
feel free to leave the experiment at any step. If participants get
money, they might feel obligated to complete the experiment.
Like many other researches on related topics like phishing
and password security, e.g., [10], [12], [13], we decided to
253
rely on students from our institute. Although it is preferred to
conduct larger user studies also on other populations, like other
researchers, we believe that conducting all the experiments
and the surveys with students gives good and reliable results
that are relevant also for other populations. Other alternatives
like Amazon Mechanical Turk workers (which is not available
in our country) are not better, as there are many common
characteristics to the users there.
Except of the ages of the students that were used to make
sure that all the participants are adults, we did not collect
any private information about the participants, as we did not
think that this is necessary for the results. Of course, all the
participants are required to be web users; otherwise, they
cannot be used to evaluate the situations discussed in this
paper. Like in most of the departments in our institute, the
ages of the students in all the experiments ranged between 18
and 35, almost uniformly.
II. ADVERSARY MODEL
To launch a PRMitM attack, the attacker only needs to
control a website; no MitM or eavesdropping capabilities are
required. The attacker attacks visitors of his website and takes
over their accounts in other websites. This is similar to cross-
site attacks like cross-site scripting [14], cross-site request
forgery [15], and clickjacking [16]. We extend the discussion
on the differences from cross-site attacks and from phishing
in Section II-B.
In order to initiate the password reset process for a website
in the name of the victim, the attacker needs basic pieces of
information; these include items such as username, email, or
phone number. This information can be extracted from the
victim by the attacker during a registration process to the
attacking website (Section III) or before some operations like
ﬁle download, when the victim is required to identify herself
using her phone.
For some websites, the attacker may be able to use cross-
site attacks such as cross-site scripting [14], cross-site script
inclusion [17], or newer techniques [18], [19] to gather details
about the user. However, the use of these techniques implies
restrictions, e.g., the user must be logged into the attacked
website (see below for more details).
In addition to a visit to the attacker’s website, the attacking
page has to lure the victims into registering or inputting their
phone number to get a code. To do that, the attacker can apply
known and common methods. For example, the attacker can
create a website that offers (or claims to offer) free services,
e.g., streaming or ﬁles download. The website can require
basic authentication (prove you are not a bot) before accessing
some or all the services or to restrict them only for registered
users. Section II-A shows that this requirement is reasonable.
A. Personal Details in Unknown Websites
Our attack is based on the assumption that users will agree
to register or to have a one-time code sent to their phone
in order to enjoy services online. Although it will be good
for attacking website to provide valuable services to attract
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
potential victims, in practice, the attacking website can only
claim it is offering such services.
To test this assumption we conducted an anonymous survey
among students in our institute. In the short survey, we asked
participants whether they would agree to either register to a
website or prove they are human using their phone or both the
options, in order to use common online services such as ﬁle
downloads for free.
Among 138 participants, only 6 claimed they will never
register for unknown websites or give their phone number,
no matter what free services are offered. Of the participants,
60.9% said they would agree to use both the options. An
additional 27.5% would only agree to register, and the re-
maining 7.2% would only agree to identify themselves using
their phone.
These results strengthen our assumption and show that the
adversary model, in which victims register or authenticate
themselves using their phones, reﬂects a common situation
on the web.
Some of our colleagues were surprised by the willingness of
users to use their phone number. For ethical reasons, we could
not create a website with attractive content, and a fake website
would not do the job. Hence, we conducted a simulation with
the participation of another 99 students.
In this simulation, we described a website that stores ﬁles
and requires a valid phone number to download them. The
veriﬁcation is done via SMS code, and the user is only required
to insert his phone number.
We asked the participants whether they would agree to insert
their phone number to receive the ﬁles in which they are
interested. Of these, 39.4% said they would insert their phone
number immediately, and 14.1% said they would ﬁrst try to
obtain the ﬁles via friends or via online SMS services. An
additional 18.2% percent said they would insert their phone
number only if they really needed the ﬁles (rather than just
wanting them). In total, 71.7% of the participants would agree
to insert their phone number.
B. Comparison to Cross-Site Attacks and Phishing
Visiting a malicious page might expose the user to several
attacks. If the browser or one of its plugins has security bugs,
an attacker could exploit these bugs to take over the entire