:::
::: para
在 DOS 和 Windows 系统中，可以使用 Windows `fdisk`{.command}
工具创建新的带有 *undocumented* 标志的
MBR：`/mbr`{.command}。这[*只*]{.emphasis}重写 MBR 来引导主 DOS
分区。该命令类似：
:::
``` screen
fdisk /mbr
```
::: para
如果需要从硬盘驱动器中删除 Linux，并且已经尝试用默认的
DOS（Windows）`fdisk`{.command} 删除，则会遇到 [*Partitions exist but
they do not exist*]{.emphasis} 的问题。要删除非 DOS
分区的最好办法是使用一个可以标识 DOS 以外的分区的工具。
:::
::: para
首先，插入 Red Hat Enterprise Linux DVD 引导系统。出现 boot
提示符时请输入：**`linux rescue`**。这样会启动救援模式程序。
:::
::: para
提示输入键盘和语言要求。与在 Red Hat Enterprise Linux
安装过程中一样输入这些值。
:::
::: para
之后，页面中会显示信心，通知您该程序正在试图寻找要救援的 Red Hat
Enterprise Linux 安装。在该页面中选择 [**跳过**]{.guibutton}。
:::
::: para
选择 [**跳过**]{.guibutton}
之后，会出现一个命令提示符，可以在这里访问要删除的分区。
:::
::: para
首先，键入命令
`list-harddrives`{.command}。这条命令会列出系统中所有被安装程序标识的硬盘驱动器，以及它们的大小（以
MB 为单位）。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
请注意，只删除必要的 Red Hat Enterprise Linux
分区。删除其他分区可能会导致数据丢失或导致系统环境损坏。
:::
:::
:::
::: para
要删除分区，使用分区工具 `parted`{.command}。启动
`parted`{.command}，其中 */dev/hda* 是要删除分区所在的设备：
:::
``` screen
parted /dev/hda
```
::: para
使用 `print`{.command}
命令来查看当前的分区表，从而判定要删除的分区的号码：
:::
``` screen
print
```
::: para
`print`{.command}
命令还可以显示分区的类型（如：linux-swap、ext2、ext3、ext4
等等）。了解分区类型有助于决定是否应该删除该分区。
:::
::: para
使用 `rm`{.command} 命令删除分区。例如，要删除次要号码（minor number）为
3 的分区：
:::
``` screen
rm 3
```
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
只要按下 \[Enter\] 键，这些更改就会生效，因此在确定前请反复检查命令。
:::
:::
:::
::: para
删除分区后，请使用 `print`{.command} 命令，确认已将其已从分区表中删除。
:::
::: para
删除 Linux 分区并且做完了所有必要的更改后，请键入 `quit`{.command} 退出
`parted`{.command}。
:::
::: para
结束 `parted`{.command} 后，在引导提示符后键入 `exit`{.command}
结束救援模式，并重新引导系统，而不是继续安装。系统应该自动重启。如果没有重启，则可以用
[**Control**]{.keycap}+[**Alt**]{.keycap}+[**Delete**]{.keycap}
重启系统。
:::
:::
:::
[]{#ch-uninstall.html}
::: chapter
::: titlepage
# [⁠]{#ch-uninstall.html#ch-uninstall}第 40 章 从 IBM System z 中删除 Red Hat Enterprise Linux {.title}
:::
[]{#ch-uninstall.html#idm139817179407856
.indexterm}[]{#ch-uninstall.html#idm139817116806128 .indexterm}
::: para
如果要删除现有操作系统数据，首先，如果任何 Linux
磁盘包含敏感数据，请确定根据安全性策略销毁那些数据。要执行这个操作，可以考虑以下方式：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    使用全新安装覆盖该磁盘。
    :::
-   ::: para
    启动全新安装，并使用分区对话框（请参考 [第 23.13 节
    "磁盘分区设置"](#ch-guimode-s390.html#s1-diskpartsetup-s390){.xref}）格式化要安装
    Linux 的分区。如 [第 23.16 节
    "在磁盘中写入更改"](#ch-guimode-s390.html#Write_changes_to_disk-s390){.xref}
    所示，选择 [**将更改写入磁盘**]{.guilabel} 对话框后，退出安装程序。
    :::
-   ::: para
    使得在其他安装 Linux 的系统中可以看到 DASD 或者 SCSI
    磁盘，然后删除该数据。但这可能需要特殊权限。请咨询系统管理员。可以使用
    Linux 命令，比如 `dasdfmt`{.command}（只用于
    DASD）、`parted`{.command}、`mke2fs`{.command} 或者
    `dd`{.command}。有关这些命令的详情请参考相关 man page。
    :::
:::
::: section
::: titlepage
# [⁠]{#ch-uninstall.html#ch-uninstall-Different-OS}40.1. 在 z/VM 虚拟机或者 LPAR 中运行不同的操作系统 {.title}
:::
::: para
如果要使用不同于目前 z/VM 虚拟机，或者 LPRA 中所安装系统的 DASD 或者
SCSI 磁盘引导，请关闭安装的 Red Hat Enterprise
Linux，并使用所需磁盘，即安装了另一个 Linux
实例的磁盘引导。这样可保留安装的系统中的内容不被更改。
:::
:::
:::
[]{#pt-Technical_appendixes.html}
::: part
::: titlepage
# [⁠]{#pt-Technical_appendixes.html#pt-Technical_appendixes}部分 VI. 技术附录 {.title}
:::
::: partintro
::: para
本小节中的附录不包含如何安装 Red Hat Enterprise Linux
的步骤。反之，它们提供一些技术背景，您会发现它们对理解 Red Hat
Enterprise Linux 为您提供的用于安装过程不同阶段的选项很有帮助。
:::
:::
:::
[]{#ch-partitions-x86.html}
::: appendix
::: titlepage
# [⁠]{#ch-partitions-x86.html#ch-partitions-x86}附录 A. 磁盘分区简介 {.title}
:::
[]{#ch-partitions-x86.html#idm139817136983744
.indexterm}[]{#ch-partitions-x86.html#idm139817198505568 .indexterm}
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
本附录对于非 x86 体系不一定适用。然而，在这里提及的一般原理可能适用。
:::
:::
:::
::: para
本附录对于非 x86 构架不一定适用。然而，在这里提及的一般原理可能适用。
:::
::: para
如果您对磁盘分区很熟悉，则可以跳至 [第 A.1.5 节 "为 Red Hat Enterprise
Linux
提供空间"](#ch-partitions-x86.html#s2-partitions-make-room-x86){.xref}，在那里您可以了解为
Red Hat Enterprise Linux 安装而释放磁盘空间的步骤。本节也讨论 Linux
系统所使用的分区命名方案、与其他操作系统分享磁盘空间以及相关主题。
:::
::: section
::: titlepage
# [⁠]{#ch-partitions-x86.html#s1-partitions-concepts-x86}A.1. 硬盘基本概念 {.title}
:::
[]{#ch-partitions-x86.html#idm139817173697280 .indexterm}
::: para
硬盘执行一个非常简单的功能 --- 它们保存数据并使用命令搜索它们。
:::
::: para
讨论诸如磁盘分区等问题时，了解一点底层的硬件是很重要的。遗憾的是，我们往往容易拘泥于细节。因此，这个附录使用了磁盘的简化框图来帮助说明当磁盘被分区时的实际情况。[图 A.1
"未使用过的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unused-drive-x86){.xref}
显示了全新的，未被使用的磁盘情况。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-unused-drive-x86}
::: figure-contents
::: mediaobject
![未使用过的磁盘驱动器](images/partitions/unused-drive.png)
:::
:::
**图 A.1. 未使用过的磁盘驱动器**
:::
::: para
没有太多选择是吗？但如果是基本级别的磁盘驱动器，这就足够了。比如要在这个驱动器中保存数据。现在这种情况，它可能无法做到。首先我们要解决一些问题。
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#s2-partitions-filesystem-x86}A.1.1. 写入什么没关系，关键是如何写入。 {.title}
:::
[]{#ch-partitions-x86.html#idm139817211979920
.indexterm}[]{#ch-partitions-x86.html#idm139817180400768 .indexterm}
::: para
有经验的计算机用户可能会首先尝试这个操作。我们需要*格式化*驱动器。格式化（通常称之为\"创建*文件系统*\"）会在驱动器中写入信息，在未格式化驱动器的空白空间中创建顺序。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-formatted-drive-x86}
::: figure-contents
::: mediaobject
![有文件系统的磁盘驱动器](images/partitions/formatted-drive.png)
:::
:::
**图 A.2. 有文件系统的磁盘驱动器**
:::
::: para
如 [图 A.2
"有文件系统的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-formatted-drive-x86){.xref}
所指，文件系统所强加的顺序涉及了一些折衷方案：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    驱动器中的一小部分可用空间被用来存储与文件系统有关的数据，这可以被视作额外开销。
    :::
-   ::: para
    文件系统将剩余的空间分成小的一定大小的片段。在 Linux
    中，这些片段就是*块*。
    [⁠]{#ch-partitions-x86.html#idm139817184256016}[^\[15\]^](#ch-partitions-x86.html#ftn.idm139817184256016){.footnote}
    :::
:::
::: para
给出那个文件系统可让目录和文件成为可能，这些代价看起来是值得的。
:::
::: para
我们也要注意，这里没有单一、通用的文件系统。如 [图 A.3
"含有不同文件系统的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-other-formatted-d-x86){.xref}
所示，磁盘中可能有不同类型的文件系统。您也许已经猜到了，不同的文件系统都是趋向于不兼容的；也就是说，支持某一文件系统的操作系统可能不支持另外一种文件系统。最后这句话并非一个固定的规则。例如，
Red Hat Enterprise Linux
就支持很多文件系统（包括许多被其他操作系统使用的文件系统），这就使得在不同文件系统之间的数据交换变得容易了。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-other-formatted-d-x86}
::: figure-contents
::: mediaobject
![含有不同文件系统的磁盘驱动器](images/partitions/other-formatted-drive.png)
:::
:::
**图 A.3. 含有不同文件系统的磁盘驱动器**
:::
::: para
当然在磁盘中写入文件系统只是个开始。这个进程的目的是确实[*保存*]{.emphasis}并[*搜索*]{.emphasis}数据。让我们看一下写入一些文件的驱动器。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-used-formatted-dr-x86}
::: figure-contents
::: mediaobject
![已写入数据的磁盘驱动器](images/partitions/used-formatted-drive.png)
:::
:::
**图 A.4. 已写入数据的磁盘驱动器**
:::
::: para
如 [图 A.4
"已写入数据的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-used-formatted-dr-x86){.xref}
所示，某些之前的空数据块现在也存放着数据。然而，只看这个框图，我们不能确认这个磁盘中有多少个文件系统。这有可能是一个，也有可能是多个，因为所有的文件都使用至少一个数据块而有些文件则使用多块。另外一个值得注意的地方是，已经被使用的块不需要组成连续的空间；未使用的和已使用的块可以散布着排列。这被称作*碎片*。当尝试调整现存分区的大小时，碎片会对其产生影响。
:::
::: para
和大多数与计算机相关的技术一样，与磁盘驱动器刚发明时相比它已经改变了很多。特别是它们变得越来越大。不是物理大小变大，而是保存信息的容量增大。同时额外的容量让使用磁盘驱动器的方法发生了根本改变。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#s2-partitions-partitioning-x86}A.1.2. 分区：将一个驱动器变成多个 {.title}
:::
[]{#ch-partitions-x86.html#idm139817170693760
.indexterm}[]{#ch-partitions-x86.html#idm139817194524752 .indexterm}
::: para
磁盘驱动器可分成*分区*。每个分区可作为独立磁盘访问。这可通过添加*分区表*完成。
:::
::: para
将磁盘空间分配到独立磁盘分区有如下理由，例如：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    将操作系统数据与用户数据进行合理分隔。
    :::
-   ::: para
    可使用不同的文件系统