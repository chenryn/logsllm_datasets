derstand and check the correctness of this protocol. So we
do not repeat the protocol execution and the correctness
checking of the protocol, and only focus on its security in
what follows.
6.1 Security Analysis
A main diﬀerence between the second protocol in Fig-
ure 4 and this protocol is the additional two messages M 5
and M 6 between U and SS. We however notice that these
messages themselves do not leak more information on the
password π. We thus only concern with the case when CS is
controlled by an active adversary. From the security anal-
ysis for the earlier two protocols, we know that CS can be
successful in oﬀ-line dictionary attacks towards SS when it
knows a = log gA
1 (mod q) in the earlier two protocols. The
vulnerability actually results from the fact that U itself takes
full charge of computing A, which allows CS to replace A
or to impersonate U against SS. In this ﬁnal protocol, the
additional two messages M 5 and M 6 actually regulate ˜A
U
Input: π
SS
input: π1
CS
Input: π2
M 1: U , Req
−−−−−−−−→
M 4: B
←−−−−−−−−
M 5: A, ˆSu
−−−−−−−−→
M 6: ¯Su
←−−−−−−−−
M 7: Su
−−−−−−−−→
b1 ∈R Zq, B1 = gb1
1 gπ1
2
B = B1B2
a1 ∈R Zq, ¯Su = ˆSa1
u
˜A = Aa1 , S1 = g ˜Ab1
3
M 10: Ss
←−−−−−−−−
?
= h(SS2
Su
1 )
Ss = h( ˜Ab1 S2)
K = h(U, SS, ˜Ab1 S2)
M 2: U ,SS
−−−−−−−−→
M 3: B2
←−−−−−−−−−
b2 ∈R Zq, B2 = gb2
1 gπ2
2
M 8: ˜A, Su, S1
−−−−−−−−−−→
M 9: S2
←−−−−−−−−−−
Su
?
= h(S ˜Ab2
1
S2 = ˜Ab2
)
a, a0 ∈R Zq A = ga
1
ˆSu = (B/gπ
2 )a0 = ga0(b1+b2)
1
a−1
0 a
Su = ¯S
u
Su = h(g
1
Su
3 )
= gaa1(b1+b2)
h(Su)
?
= Ss
K = h(U, SS, Su)
Figure 5: Another Password Authentication and Key Exchange Protocol.
(which is equivalent to A in the earlier two protocols) to be
constructed by both U and SS. As a result, while CS, as an
active adversary, can manipulate the part due to U (i.e., a)
by replacement or impersonation, it cannot manipulate the
part due to SS (i.e., a1). That is, CS cannot compute the
discrete logarithm of ˜A to the base g1, and thus is not eﬀec-
tive in oﬀ-line dictionary attacks as analyzed in the earlier
two protocols.
A potential weakness of the protocol lies in that an ac-
tive outside adversary between U and SS can inﬂuence the
session key shared by U and SS. To see this, the adversary
could choose a random number β ∈R Zq and intercept M 5;
then compute A = Aβ (mod p), ˆSu = ˆSβ
u (mod p), and con-
tinue the protocol by sending the manipulated elements A
and ˆSu to SS as in the original protocol; other part of the
protocol remains intact. It is easy to check that the proto-
col still works, but U and SS ends up sharing a session key
K = h(U, SS, gaa1β(b1+b2)
), which is distinct from the one
perceived in the original protocol. We however notice that
attacks of this kind do not aﬀect the secrecy of the session
key and the user password, nor do they aﬀect the authenti-
cation functionality of the protocol. The adversary gains no
advantages from such attacks. We therefor do not consider
them as a serious issue.
1
7. DISCUSSIONS
In this section, we ﬁrst examine performance of our pro-
posed protocols. Let |p| and |h| denote the bit length of
p and the hash function h(.), respectively, we outline the
performance results in Figure 6. We have three aspects to
1 gπ2
evaluate. (1) Computation performance: as exponentiation
operations dominate each party’s overhead, we only count
the number of exponentiations as the computation perfor-
mance, and the digits following / denote the number of ex-
ponentiations that can be computed oﬀ-line. Note that by
leveraging on the techniques in [12], each of gb1
(mod p)
and gb2
(mod p) can be computed by a single exponen-
tiation. (2) Communication performance in terms of bits:
as |Q| is only 1 bits longer than |p|, we do not explicitly
distinguish between |p| and |Q| for ease of comparison. In
addition, we have neglected including the bandwidth of M 1
and M 2 in this aspect of calculation. (3) Communication
performance in terms of rounds: one round represents a one
way transmission of messages.
1 gπ1
2
2
Figure 6: Performance of the proposed protocols.

From the table, it shows that the proposed protocols are
in general quite eﬃcient in terms of both computation and
communication to all parties. Take U for example, it needs
to calculate 3, 4 and 5 exponentiations in the three proto-
cols, respectively, and 2 of them can be performed oﬀ-line
in all cases; the communication overhead for U is also quite
low in terms of both bits and rounds. As a result, our pro-
tocols can readily apply to wireless applications. It is also
worth noticing from the table that our proposed protocols
favor the generalized architecture for IDSs where one control
server supports multiple service servers, since the workload
in terms of both computation and communication upon the
control server is particularly low. Of course, with suﬃcient
funds the corporate authority of an IDS can always deploy
a powerful server.
Finally, it is interesting to note that in our protocols, a
password is splitted into two random shares; therefore, a
user can use the same password to register to diﬀerent ser-
vice servers, either they connect to distinct control servers or
to the same control server. This is a highly desirable feature
since it makes the system user friendly. A big inconvenience
in the traditional password systems is that a user has to
memorize diﬀerent passwords for diﬀerent applications.
8. CONCLUSIONS AND FUTURE WORK
Use of password is still a vital means of user authentica-
tion in healthcare information systems, especially as wire-
less healthcare applications are becoming increasingly preva-
lent. However, existing password systems have diﬃculties
when applied to IDSs, the current primary means of care
provision. To solve this problem, we presented a practi-
cal password authentication system based on a novel two-
server model, and generalized the model to an architecture
of a single control server supporting multiple service servers
by considering the organizational structure of IDSs. The
underlying user authentication and key exchange protocols
we proposed are password-only, neat, eﬃcient, and robust
against oﬀ-line dictionary attacks mounted by both servers.
While we examined the security of the proposed proto-
cols, a formal treatment of the system is necessary. One
of our future work is thus to formally deﬁne and validate
the security of the system. Another direction of the future
work consists of investigating other issues associated with
password authentication such as phishing attacks [13].
9. ACKNOWLEDGMENTS
We thank the anonymous referees for their helpful com-
ments and suggestion.
This work is funded by Oﬃce of Research, Singapore Man-
agement University.
10. REFERENCES
[1] C. Boyd. Digital Multisignatures, Cryptography and
Coding, pp 241-246, 1989.
[2] E. Bresson, O. Chevassut, D. Pointcheval. Security
Proofs for an Eﬃcient Password-Based Key Exchange,
ACM. Computer and Communication Security, pp.
241-250, 2003.
[3] D. Boneh. The Decision Diﬃe-Hellman Problem, 3rd
International Algorithmic Number Theory Symposium,
LNCS 1423, pp. 48-63, 1998.
[4] J. Brainard, A. Juels, B. Kaliski, M. Szydlo. A New
Two-Server Approach for Authentication with Short
Secret, Proc. USENIX Security, 2003.
[5] S. Bellovin, and M. Merritt. Encrypted Key Exchange:
Password- Based Protocols Secure Against Dictionary
Attacks, IEEE Symposium on Research in Security
and Privacy, pp. 72-84, 1992.
[6] S. Bellovin, and M. Merritt. Augmented Encrypted
Key Exchange: A Password-Based Protocol Secure
Against Dictionary Attacks and Password File
Compromise, ACM. Computer and Communication
Security, pp. 244-250, 1993.
[7] M. K. Boyarsky. Public-key Cryptography and
Password Protocols: The Multi-User Case, ACM
Conference on Computer and Communication
Security, pp. 63-72, 1999.
[8] L. Bouganim, P. Pucheral. Chip-Secured Data Access:
Conﬁdential Data on Untrusted Servers, Proc. Very
Large Data Bases (VLDB), pp. 131-142, 2002.
[9] M. Bellare, D. Pointcheval, and P. Rogaway.
Authenticated Key Exchange Secure Against
Dictionary Attacks, Advance in cryptology,
Eurocrypt’00, pp. 139-155, 2000.
[10] M. Bellare, P. Rogaway. Random Oracles are
Practical: A Paradigm for Designing Eﬃcient
Protocols, ACM. Computer and Communication
Security, pp. 62-73, 1993.
[11] Committee on Maintaining Privacy and Security in
Health Care Applications of the National Information
Infrastructure. For the Record: Protecting Electronic
Health Information, National Academy Press,
Washington, D.C., 1997.
[12] V. S. Dimitrov, G. A. Jullien, and W. C. Miller.
Complexity and fast algorithms for
multi-exponentiations, IEEE Transactions on
Computers, vol 49, no 2, pp. 141C147, 2000.
[13] R. Dhamija, J. D. Tygar. Phish and HIPs: Human
Interactive Proofs to Detect Phishing Attacks,
International Workshop on Human Interactive Proofs,
LNCS 3517, pp. 127-141, 2005.
[14] W. Ford, B. S. Kaliski Jr. Sever-assisted Generation of
a Strong Secret From a Password, IEEE. 9th
International Workshop on Enabling Technologies,
2000.
[15] L. Gong, M. Lomas, R. Needham, J. Saltzer.
Protecting Poorly Chosen Secrets from Guessing
Attacks, IEEE Journal on Seclected Areas in
Communications, 11(5), pp. 648-656, 1993.
[16] O. Goldreich. Secure Multi-party Computation,
Working Draft, Version 1.3, June 2001.
[17] R. Ganesan. Yaksha: Augmenting Kerberos with
Public Key Cryptography, Symposium on Network
and Distributed System Security (SNDSS’95), pp.
132-143, 1995.
[18] S. Halevi, H. Krawczyk. Public-key Cryptography and
Password Protocols, ACM. Transactions on
Information and System Security Computer
(TISSEC), 2(3), pp. 230-268, 1999
[19] D. P. Jablon. Password Authentication Using Multiple
Servers, RSA Security Conference, LNCS 2020, pp.
344-360, 2001.

[20] D. V. Klein. Foiling the Cracker - A Survey of, and
Improvements to, Password Security, 2nd USENIX
Security, pp. 5-14, 1990.
[21] J. Katz, P. D. Mackenzie, G. Taban, and V. D.
Gligor.Two Server Password-only Authentication Key
Exchange, Applied Cryptography and Network
Security, pp. 1-16, 2005.
[22] J. Katz, R. Ostrovsky, M. Yung. Eﬃcient
Password-Authenticated Key Exchange Using
Human-Memorable Passwords, Advances in
Cryptology, Eurocrypt’01, LNCS 2045, pp. 475-494,
2001.
[23] J. Katz, R. Ostrovsky, M. Yung. Forward Secrecy in
Password-Only Key Exchange Protocols, Proc.
Security in Communication Networks, 2002
[24] P. Mackenzie, T. Shrimpton, M. Jakobsson. Threshold
Password-Authenticated Key Exchange, Advances in
Cryptology, Crypto’02, LNCS 2442, pp. 385-400, 2002.
[25] M. D. Raimondo, R. Gennaro. Provably Secure
Threshold Password-Authenticated Key Exchange.
Advances in Cryptology, Eurocrypt’03, LNCS 2656,
pp. 507-523, 2003.
[26] Y. J. Yang, F. Bao, and R. H. Deng. A New
Architecture for Authentication and Key Exchange
Using Password for Federated Enterprises, 20th IFIP
International Information Security Conference,
SEC’05, 2005.
