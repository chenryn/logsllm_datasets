  and lag_pdate is not null  
) t  
where rn=1;  
select '-- 监控所有继承表的权限和父表是否一致,输出含有不一致的父表名称:' as monitor;  
select server_ip,server_port,dbname,name_inhparent  
  from mon_inherits  
  where acl_inhparent<>acl_inhrelid  
  group by server_ip,server_port,dbname,name_inhparent;  
EOF  
done  
```  
执行 :   
```  
ocz@db-172-16-3-150-> ./t.sh 127.0.0.1 9201 postgres  
------2013-01-04 17:14:16----Partition Table MON----IP:127.0.0.1 PORT:9201 DBNAME:digoal------  
CREATE FUNCTION  
CREATE FUNCTION  
CREATE VIEW  
          monitor             
----------------------------  
 -- 监控日期继承表气泡:  
(1 row)  
 dbname | inhparent  |     inhrelid      |   pdate    | lag_pdate  | gap | predict_gap   
--------+------------+-------------------+------------+------------+-----+-------------  
 digoal | digoal.tbl | digoal.tbl_201204 | 2012-04-01 | 2012-02-01 |  60 |          31  
(1 row)  
            monitor               
--------------------------------  
 -- 监控日期继承表过期(需满足大于未来10个表,且大于未来2年(731day)):  
(1 row)  
 dbname | inhparent | inhrelid | max_pdate | predict_gap | future_tables_cnt | rn   
--------+-----------+----------+-----------+-------------+-------------------+----  
(0 rows)  
     monitor        
------------------  
 -- 监控所以继承表的权限和父表是否一致,输出不一致的:  
(1 row)  
 dbname | inhparent  |     inhrelid      |              acl_inhparent              | acl_inhrelid   
--------+------------+-------------------+-----------------------------------------+--------------  
 digoal | digoal.tbl | digoal.tbl_201201 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201202 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201204 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201205 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201206 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201207 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201208 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201209 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201210 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201211 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201212 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201301 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201302 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201303 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201304 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201305 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201306 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201307 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201308 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201309 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201310 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201311 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201312 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201401 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201402 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201403 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201404 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201405 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201406 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201407 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201408 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201409 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201410 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201411 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201412 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201501 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201502 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201503 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201504 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201505 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201506 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | digoal.tbl | digoal.tbl_201507 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
(42 rows)  
------2013-01-04 17:14:16----Partition Table MON----IP:127.0.0.1 PORT:9201 DBNAME:skycac------  
CREATE FUNCTION  
CREATE FUNCTION  
CREATE VIEW  
          monitor             
----------------------------  
 -- 监控日期继承表气泡:  
(1 row)  
 dbname | inhparent | inhrelid | pdate | lag_pdate | gap | predict_gap   
--------+-----------+----------+-------+-----------+-----+-------------  
(0 rows)  
            monitor               
--------------------------------  
 -- 监控日期继承表过期(需满足大于未来10个表,且大于未来2年(731day)):  
(1 row)  
 dbname | inhparent | inhrelid | max_pdate | predict_gap | future_tables_cnt | rn   
--------+-----------+----------+-----------+-------------+-------------------+----  
(0 rows)  
     monitor        
------------------  
 -- 监控所以继承表的权限和父表是否一致,输出不一致的:  
(1 row)  
 dbname | inhparent | inhrelid | acl_inhparent | acl_inhrelid   
--------+-----------+----------+---------------+--------------  
(0 rows)  
```  
如果是远程监控可以编辑PGPASSFILE进行.  
## 其他  
1\. 当月表要变日表时, 不影响监控, 如下 :   
```  
digoal=> create table tbl_20150801(like tbl) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> create table tbl_20150802(like tbl) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> create table tbl_20150803(like tbl) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> select dbname,inhparent,inhrelid,pdate,lag_pdate,gap,predict_gap from v_mon_partition_tables  
digoal->   where   
digoal->   gap<>predict_gap   
digoal->   and pdate <> '22220101'::date   
digoal->   and lag_pdate is not null;  
 dbname | inhparent |  inhrelid  |   pdate    | lag_pdate  | gap | predict_gap   
--------+-----------+------------+------------+------------+-----+-------------  
 digoal | tbl       | tbl_201204 | 2012-04-01 | 2012-02-01 |  60 |          31  
(1 row)  
```  
当日表想变成月表时, 需要注意一定要补齐月末的表 :   
```  
digoal=> create table tbl_201509(like tbl) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> select dbname,inhparent,inhrelid,pdate,lag_pdate,gap,predict_gap from v_mon_partition_tables  
  where   
  gap<>predict_gap   
  and lag_pdate is not null;  
 dbname | inhparent |  inhrelid  |   pdate    | lag_pdate  | gap | predict_gap   
--------+-----------+------------+------------+------------+-----+-------------  
 digoal | tbl       | tbl_201204 | 2012-04-01 | 2012-02-01 |  60 |          31  
 digoal | tbl       | tbl_201509 | 2015-09-01 | 2015-08-03 |  29 |          31  
(2 rows)  
```  
补齐后, 监控恢复正常 :   
```  
create table tbl_20150804(like tbl) inherits(tbl);  
................  
create table tbl_20150831(like tbl) inherits(tbl);  
digoal=> select dbname,inhparent,inhrelid,pdate,lag_pdate,gap,predict_gap from v_mon_partition_tables  
digoal->   where   
digoal->   gap<>predict_gap   
digoal->   and lag_pdate is not null;  
 dbname | inhparent |  inhrelid  |   pdate    | lag_pdate  | gap | predict_gap   
--------+-----------+------------+------------+------------+-----+-------------  
 digoal | tbl       | tbl_201204 | 2012-04-01 | 2012-02-01 |  60 |          31  
(1 row)  
```  
2\. 非法表名监控, 一定要清理掉所有非法表名的分区表. 否则这个监控就有暗病.  
3\. 人为的每个月一次例行检查还是要的, 因为这个脚本不能适合所有场景.  
## 统一监控  
方法,   
1\. 将被监控的数据库中的继承表的信息统一收集到一个监控数据库中,   
2\. 在监控数据库中进行分析.  
监控库如下(存放所有收集到的生产数据库的继承表信息) :   
```  
HOST=172.16.3.150  
PORT=1921  
DBNAME=digoal  
ROLE=digoal  
SCHEMA=digoal  
```  
创建存储继承表信息的表, 如下.  
```  
create table mon_inherits (  
  server_ip inet,   
  server_port int,  
  dbname name,  
  inhrelid oid,  
  inhparent oid,  
  inhseqno int,  
  name_inhrelid text,  
  name_inhparent text,  
  acl_inhrelid text[],  
  acl_inhparent text[],  
  crt_time timestamp  
);  
```  
创建唯一约束 :   
```  
create unique index idx_mon_inherits_1 on mon_inherits(server_ip, server_port, dbname, inhrelid, inhseqno);  
```  
创建数组排序函数, 原因见本文末尾 :   
```  
create or replace function mon_array_sort(i_arr text[]) returns text[] as $$  
declare  
  result text[];  
begin  
  select array_agg(arr order by arr) into result from unnest(i_arr) t(arr);  
  return result;  
end;  
$$ language plpgsql;  
```  
创建白名单表(用于过滤不是按日期分表的继承表)  
```  
create table mon_inherits_white (name_inhrelid text primary key);  
```  
关于array的比较可以参考以下BLOG :   
http://blog.163.com/digoal@126/blog/static/16387704020130682522480/  
被监控的目标库用到的取ACL的函数 :   
创建获取acl的函数, 这个函数可以在统一收集信息的脚本中创建.  
```  
drop function mon_part_get_acl(oid);  
create or replace function mon_part_get_acl(i_oid oid) returns text[] as $$  
declare  
  result text[] := '{}'::text[];  
begin  
  select relacl::text[] into result from pg_class where oid=i_oid and relacl is not null;  
  if found then  
    return result;  
  else  
    return '{}'::text[];  
  end if;  
exception when others then  
  return '{}'::text[];  
end;  
$$ language plpgsql;  
```  
采集服务器, 能连到所有被监控的目标库 :   
收集信息的脚本 :   
```  
vi /home/postgres/script/coll_inherit_info.sh  
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export PATH=$PGHOME/bin:$PATH:.  
# 参数判断  
if [ $# -ne 3 ]; then  