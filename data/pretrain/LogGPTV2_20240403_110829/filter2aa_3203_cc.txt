Send NetBIOS broadcasts. 
Check the Lmhosts file in the SystemRoot\system32\drivers\etc folder. 
If successful, the host sends an IPv4-encapsulated Router Solicitation message to the ISATAP router. 
The ISATAP router responds with an IPv4-encapsulated Router Advertisement message containing 
subnet prefixes to use for autoconfiguration of ISATAP-based addresses and, optionally, advertising 
itself as a default router. 
To ensure that at least one of these attempts is successful, you can do one or more of the following as 
needed: 
If the ISATAP router is a computer running Windows, name the computer ISATAP and it will 
automatically register the appropriate records in DNS and WINS. 
Manually create an address (A) record for the name "ISATAP" in the appropriate domains in DNS. 
For example, for the example.com domain, create an A record for isatap.example.com with the 
IPv4 address of the ISATAP router. 
Manually create a static WINS record in WINS for the NetBIOS name "ISATAP         ". 
Add the following entry to the Hosts file of the computers that need to resolve the name ISATAP: 
IPv4_Address  ISATAP   
Add the following entry to the Lmhosts file of the computers that need to resolve the name ISATAP: 
IPv4_Address  ISATAP   
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 445 
Using the netsh interface isatap set router Command 
Although the automatic resolution of the ISATAP name is the recommended method for configuring the 
IPv4 address of the ISATAP router, you can manually configure the name or IPv4 address of the 
ISATAP router with the netsh interface isatap set router or netsh interface ipv6 isatap set router 
commands. The syntax of these commands are: 
netsh interface isatap set router AddressOrName 
netsh interface ipv6 isatap set router AddressOrName 
AddressOrName is the name or IPv4 address of the ISATAP router's intranet interface. For example, if 
the ISATAP router's IPv4 address is 192.168.39.1, the command is: 
netsh interface isatap set router 192.168.39.1 
Setting up an ISATAP Router 
A computer running Windows Vista, Windows XP, Windows Server 2008, or Windows Server 2003 can 
be configured as an ISATAP router. Assuming that the router is already configured to forward IPv6 
traffic on its LAN interfaces and has a default route that is configured to be published, the additional 
commands that need to be issued on the router are: 
netsh interface ipv6 isatap set router IPv4Address 
netsh interface ipv6 set interface ISATAPInterfaceNameOrIndex forwarding=enabled 
advertise=enabled 
netsh interface ipv6 add route SubnetPrefix/PrefixLength ISATAPInterfaceNameOrIndex 
publish=yes 
The first command sets the IPv4 address of the ISATAP router’s LAN interface on the IPv4 network. 
The second command enables forwarding and advertising on the ISATAP tunneling interface. 
The third command enables the advertisement of a specific subnet prefix (SubnetPrefix/PrefixLength) 
over the ISATAP tunneling interface. Use this command one or multiple times to advertise as many 
subnet prefixes as you need. All the subnet prefixes configured using this command are included in the 
Router Advertisement message sent back to the ISATAP host. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 446 
6to4 
6to4 is an address assignment and router-to-router automatic tunneling technology that provides 
unicast IPv6 connectivity between IPv6 sites and hosts across the IPv4 Internet. 6to4 uses the global 
address prefix 2002:WWXX:YYZZ::/48. WWXX:YYZZ is the colon-hexadecimal representation of a 
public IPv4 address (w.x.y.z) assigned to a site or host. The full 6to4 address is: 
2002:WWXX:YYZZ:SubnetID:InterfaceID 
6to4 is described in RFC 3056, which defines the following terms: 
6to4 host 
Any IPv6 host that is configured with at least one 6to4 address (a global address with the 2002::/16 
prefix). 6to4 hosts do not require any manual configuration and create 6to4 addresses using 
standard address autoconfiguration mechanisms.  
6to4 router 
An IPv6/IPv4 router that supports the use of a 6to4 tunnel interface and is typically used to forward 
6to4-addressed traffic between the 6to4 hosts within a site and either other 6to4 routers or the IPv6 
Internet through a 6to4 relay. 
6to4 relay 
An IPv6/IPv4 router that forwards 6to4-addressed traffic between 6to4 routers on the IPv4 Internet 
and hosts on the IPv6 Internet. 
Figure 15-6 shows 6to4 components. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 447 
Figure 15-6  6to4 components 
Within a site, local IPv6 routers advertise 2002:WWXX:YYZZ:Subnet_ID::/64 subnet prefixes so that 
hosts autoconfigure 6to4 addresses. IPv6 routers within the site deliver traffic between 6to4 hosts. 
Hosts on individual subnets are automatically configured with a 64-bit subnet route for direct delivery to 
neighbors and a default route with the next-hop address of the advertising router. IPv6 traffic that does 
not match any of the subnet prefixes used within the site is forwarded to a 6to4 router on the site 
border. The 6to4 router on the site border has a 2002::/16 route that is used to forward traffic to other 
6to4 sites and a default route (::/0) that is used to forward traffic to a 6to4 relay.  
In the example network shown in Figure 15-6, Host A and Host B can communicate with each other 
because of a default route using the next-hop address of the 6to4 router in Site 1. When Host A 
communicates with Host C in another site, Host A sends the traffic to the 6to4 router in Site 1 as IPv6 
packets. The 6to4 router in Site 1, using the 2002::/16 route in its routing table and the 6to4 tunnel 
interface, encapsulates the traffic with an IPv4 header and tunnels it to the 6to4 router in Site 2. The 
6to4 router in Site 2 receives the tunneled traffic, removes the IPv4 header and, using the subnet prefix 
route in its routing table, forwards the IPv6 packet to Host C. 
For example, Host A resides on subnet 1 within Site 1 that uses the public IPv4 address of 
157.60.91.123. Host C resides on subnet 2 within Site 2 that uses the public IPv4 address of 
131.107.210.49. Table 2 lists the addresses in the IPv4 and IPv6 headers when the 6to4 router in Site 1 
sends the IPv4-encapsulated IPv6 packet to the 6to4 router in Site 2. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 448 
Table 15-2    Example 6to4 addresses 
Field 
Value 
IPv6 Source Address 
2002:9D3C:5B7B:1::1 
IPv6 Destination Address 
2002:836B:D231:2::3 
IPv4 Source Address 
157.60.91.123 
IPv4 Destination Address 
131.107.210.49 
When you use 6to4 hosts, an IPv6 routing infrastructure within a site, a 6to4 router at the site boundary, 
and a 6to4 relay, the following types of communication are possible: 
A 6to4 host can communicate with other 6to4 hosts within the same site. 
This type of communication is available by using the IPv6 routing infrastructure within the site, 
which provides reachability to all hosts within the site. In Figure 15-6, this is the communication 
between Host A and Host B. 
A 6to4 host can communicate with 6to4 hosts in other sites across the IPv4 Internet. 
This type of communication occurs when a 6to4 host forwards IPv6 traffic that is destined to a 6to4 
host in another site to its local site 6to4 router. The local site 6to4 router tunnels the IPv6 traffic to 
the 6to4 router at the destination site on the IPv4 Internet. The 6to4 router at the destination site 
removes the IPv4 header and forwards the IPv6 packet to the appropriate 6to4 host by using the 
IPv6 routing infrastructure of the destination site. In Figure 15-6, this is the communication between 
Host A and Host C. 
A 6to4 host can communicate with hosts on the IPv6 Internet. 
This type of communication occurs when a 6to4 host forwards IPv6 traffic that is destined for an 
IPv6 Internet host to its local site 6to4 router. The local site 6to4 router tunnels the IPv6 traffic to a 
6to4 relay that is connected to both the IPv4 Internet and the IPv6 Internet. The 6to4 relay removes 
the IPv4 header and forwards the IPv6 packet to the appropriate IPv6 Internet host by using the 
IPv6 routing infrastructure of the IPv6 Internet. In Figure 15-6, this is the communication between 
Host A and Host D. 
All of these types of communication use IPv6 traffic without the requirement of obtaining either a direct 
connection to the IPv6 Internet or a global address prefix from an Internet service provider (ISP). 
6to4 Support in Windows 
The 6to4 component of the IPv6 protocol for Windows provides 6to4 tunneling support. If there is a 
public IPv4 address assigned to an interface on the host and a global prefix is not received in a router 
advertisement, the 6to4 component:  
Automatically configures 6to4 addresses on a 6to4 tunneling interface for all public IPv4 addresses 
that are assigned to interfaces on the computer. 
Automatically creates a 2002::/16 route that forwards all 6to4 traffic with a 6to4 tunneling interface. 
All traffic forwarded by this host to 6to4 destinations is encapsulated with an IPv4 header. 
Automatically performs a DNS query to obtain the IPv4 address of a 6to4 relay on the IPv4 Internet. 
By default, the 6to4 component queries for the name 6to4.ipv6.microsoft.com. You can use the 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 449 
netsh interface ipv6 6to4 set relay command to specify the DNS name to query. If the query is 
successful, a default route is added using a 6to4 tunneling interface and the next-hop address is set 
to the 6to4 address of the 6to4 relay. 
The results of the 6to4 component autoconfiguration vary depending on the configuration of the host. 
Figure 15-7 shows how 6to4 is configured for different types of hosts running Windows (except IPv6 
host D). 
Figure 15-7  6to4 for Windows hosts 
For a host that is assigned a private IPv4 address or receives a router advertisement for a global prefix, 
there are no 6to4 addresses assigned to the 6to4 tunneling interface. Addresses and routes are 
autoconfigured based on the received router advertisement. This configuration corresponds to Host A, 
Host B, and Host C in Figure 15-7. 
A host that is assigned a public IPv4 address and does not receive a router advertisement for a global 
prefix automatically configures a 6to4 address of the form 2002:WWXX:YYZZ::WWXX:YYZZ is on the 
6to4 tunneling interface. The host adds a 2002::/16 route using the 6to4 tunneling interface and, if the 
DNS query for the 6to4 relay is successful, adds a default route using the 6to4 address of the 6to4 relay 
as the next hop. This type of host is a 6to4 host and performs its own tunneling like a 6to4 router. This 
configuration corresponds to 6to4 host/router E in Figure 15-7, a host that is directly connected to the 
IPv4 Internet. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 450 
A computer running Windows can automatically configure itself as a 6to4 router by utilizing the 
configuration of the Internet Connection Sharing (ICS) feature. This configuration corresponds to 6to4 
router 1 in Figure 15-7. 
If ICS is enabled on an interface that is assigned a public IPv4 address, the 6to4 component 
automatically: 
Enables IPv6 forwarding on the 6to4 tunneling interface and the private interface.  
The private interface is connected to a single-subnet intranet and uses private IPv4 addresses from 
the 192.168.0.0/24 prefix. 
Sends Router Advertisement messages on the private interface. 
The router advertisements advertise the ICS computer as a default router and contain a 6to4 
subnet prefix that is based on the public IPv4 address assigned to the public interface. The Subnet 
ID in the 6to4 subnet prefix is set to the interface index of the interface on which the advertisements 
are sent. 
For example, for an ICS computer using the public IPv4 address of 131.107.23.89 and interface 5 as 
the interface index of the private interface, the advertised prefix would be 2002:836B:1759:5::/64. 
Private hosts receiving this router advertisement would create global addresses through normal 
address autoconfiguration and add a 2002:836B:1759:5::/64 route for the local subnet and a default 
route with a next-hop address of the link-local address of the ICS computer's private interface. Private 
hosts can communicate with each other on the same subnet using the 2002:836B:1759:5::/64 route. 
For all other destinations to other 6to4 sites or the IPv6 Internet, the 6to4 hosts forward the IPv6 
packets to the ICS computer using the default route. 
For traffic to other 6to4 sites, the ICS computer uses its 2002::/16 route and encapsulates the IPv6 
traffic with an IPv4 header and sends it across the IPv4 Internet to another 6to4 router. For all other 
IPv6 traffic, the ICS computer uses its default route and encapsulates the IPv6 traffic with an IPv4 
header and sends it across the IPv4 Internet to a 6to4 relay. 
To manually configure a computer running Windows as a 6to4 router, you must do the following: 
Ensure that the 6to4 router computer has a public address assigned to its Internet interface and has not 
received a Router Advertisement message from either an IPv6 router on an attached subnet or an 
ISATAP router. If this is the case, the 6to4 component automatically adds a 2002::/16 route to the 
routing table that uses the 6to4 tunneling interface and adds a default route that points to a 6to4 relay 
on the IPv4 Internet. 
Enable forwarding and advertising on the interfaces attached to your intranet. You can do this with the 
following command: 
netsh interface ipv6 set interface InterfaceNameOrIndex forwarding=enabled 
advertise=enabled 
Enable forwarding on the 6to4 tunneling interface. You can do this with the following command: 
netsh interface ipv6 set interface 6to4InterfaceNameOrIndex forwarding=enabled 
Add routes for 6to4 prefixes to the interfaces attached to your intranet and configure them to be 
published. You can do this with the following command: 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 451 
netsh interface ipv6 add route 2002:WWXX:YYZZ:SubnetID::/64 InterfaceNameOrIndex 
publish=yes 
WWXX:YYZZ is the colon-hexadecimal notation for w.x.y.z, the public IPv4 address that is 
assigned to the interface that is attached to the Internet. SubnetID identifies an individual subnet 
within the 6to4 site. 
For example, a computer running Windows Server 2003 has three LAN interfaces with the following 
configuration: 
Local Area Connection is attached to the IPv4 Internet and is assigned the public IPv4 address 
131.107.0.1. 
Local Area Connection 2 is an intranet interface that is using interface index 5. 
Local Area Connection 3 is an intranet interface that is using interface index 6. 
To configure this computer as a 6to4 router, run the following commands: 
netsh interface ipv6 set interface "Local Area Connection 2" forwarding=enabled 
advertise=enabled 
netsh interface ipv6 set interface "Local Area Connection 3" forwarding=enabled 
advertise=enabled 
netsh interface ipv6 set interface "6to4 Tunneling Pseudo-Interface" forwarding=enabled 
netsh interface ipv6 add route 2002:836b:1:5::/64 "Local Area Connection 2" publish=yes 
netsh interface ipv6 add route 2002:836b:1:6::/64 "Local Area Connection 3" publish=yes 
For this example, the subnet prefix 2002:836b:1:5::/64 is advertised over Local Area Connection 2 and 
the subnet prefix 2002:836b:1:6::/64 is advertised over Local Area Connection 3 (836b:1 is the 
hexadecimal colon notation for the public IPv4 address 131.107.0.1). By convention, the subnet ID is 
set to the interface index of the interface over which the prefix is advertised. You can specify any 
subnet ID you want (from 0 to 0xffff). 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 452 
Teredo 
Teredo, also known as IPv4 network address translator (NAT) traversal (NAT-T) for IPv6, provides 
address assignment and host-to-host automatic tunneling for unicast IPv6 connectivity across the IPv4 
Internet, even when IPv6/IPv4 hosts are located behind one or multiple IPv4 NATs. Teredo is defined in 
RFC 4380. To traverse IPv4 NATs, IPv6 packets are sent as IPv4-based User Datagram Protocol 
(UDP) messages. 
6to4 provides a similar function as Teredo. However, 6to4 router support is required in the edge device 
that is connected to the Internet. 6to4 router functionality is not widely supported by IPv4 NATs. Even if 
the edge NAT were 6to4-capable, 6to4 would still not work for configurations in which there are multiple 
NATs between a site and the Internet.  
Teredo resolves the issues of the lack of 6to4 functionality in modern-day NATs or multi-layered NAT 
configurations by tunneling IPv6 packets between the hosts within the sites. In contrast, 6to4 uses 
tunneling from the edge device. Tunneling from the hosts presents another issue for NATs: IPv4-
encapsulated IPv6 packets are sent with the Protocol field in the IPv4 header set to 41. Most NATs only 
translate TCP or UDP traffic and must either be manually configured to translate other protocols or 
have an installed NAT editor that handles the translation. Because Protocol 41 translation is not a 
common feature of NATs, IPv4-encapsulated IPv6 traffic will not flow through typical NATs. Therefore, 
the IPv6 packet is encapsulated as an IPv4 UDP message, containing both IPv4 and UDP headers. 
UDP messages can be translated by most NATs and can traverse multiple layers of NATs. 
Teredo is designed as a last resort transition technology for IPv6 connectivity. If native IPv6, 6to4, or 
ISATAP connectivity is present between communicating nodes, Teredo is not used. As more IPv4 
NATs are upgraded to support 6to4 and IPv6 connectivity becomes ubiquitous, Teredo will be used less 
and less, until eventually it is not used at all. 
Teredo in Windows Server 2003 Service Pack 1, Windows XP SP2, and Windows XP SP1 with the 
Advanced Networking Pack for Windows XP works only over cone and restricted NATs.  
A cone NAT stores a mapping between an internal (private) address and port number and an external 
(public) address and port number. After the NAT translation table entry is in place, incoming traffic from 
the Internet to the external address and port number is allowed from any source address and port 
number.  
A restricted NAT stores a mapping between an internal address and port number and an external 
address and port number, for either specific external addresses or specific external addresses and port 
numbers. An incoming packet from the Internet that does not match a NAT translation table entry for 
both the external destination address and port number and a specific source external address or port 
number is silently discarded.  
There is an additional type of NAT, known as a symmetric NAT, which maps the same internal address 