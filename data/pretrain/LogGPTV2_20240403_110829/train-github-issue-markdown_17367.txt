On Ubuntu 16.04, Python 3.6.2 and PyTorch 0.2.0, it's possible to force a
`free() on invalid pointer` segfault by first doing `import zmq` then `import
torch`.  
_(Originally, I had this problem when trying to import pytorch into a Jupyter
notebook, then proceeded to narrow the problem down to just importing zmq in a
plain python3 interpreter)._
For reproducability, I've created a gist containing a Dockerfile and script:  
https://gist.github.com/rh314/bef5152b655286a8138edd7666789807  
(I managed to reproduce the crash with the above scripts)
The crash typically looks as follows:
    *** Error in `python3': free(): invalid pointer: 0x00007f98524c1b80 ***
    ======= Backtrace: =========
    /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f986429c7e5]
    /lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f98642a537a]
    /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f98642a953c]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f985225b802]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_ImplC2Em+0x1e3)[0x7f985225d953]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale18_S_initialize_onceEv+0x15)[0x7f985225e8c5]
    /lib/x86_64-linux-gnu/libpthread.so.0(+0xea99)[0x7f98645fda99]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale13_S_initializeEv+0x21)[0x7f985225e911]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6localeC1Ev+0x13)[0x7f985225e953]
    /usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt8ios_base4InitC1Ev+0xb4)[0x7f98522301b4]
    /usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a5a14)[0x7f982ee0ba14]
    /usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a6aa3)[0x7f982ee0caa3]
    /usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x335026)[0x7f982ee9b026]