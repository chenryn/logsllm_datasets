title:Towards assessing the security of DBMS configurations
author:Afonso Ara&apos;ujo Neto and
Marco Vieira
Towards Assessing the Security of DBMS Configurations  
Afonso Araújo Neto, Marco Vieira 
CISUC, Department of Informatics Engineering  
University of Coimbra – Portugal  
{acaneto, mvieira}@dei.uc.pt 
Abstract 
to 
data 
have 
been 
protect 
Database  Management  Systems  (DBMS)  have  a 
long  tradition  in  high  security.  Several  mechanisms 
needed 
pro-
posed/consolidated  in  the  database  arena.  However, 
the  effectiveness  of  those  mechanisms  is  very  depend-
ent on the actual configuration chosen by the database 
administrator.  Tuning  a  large  database  is  quite  com-
plex and achieving high security is a very difficult task 
that  requires  a  lot  of  expertise  and  continuous  and 
proactive  work.  In  this  paper  we  analyze  the  security 
best  practices  behind  the  many  configuration  options 
available in several well-known DBMS. These security 
best  practices  are  then  generalized  in  order  to  be  ap-
plicable to practically any DBMS available today. Fi-
nally, we use these best practices to define a set of con-
figuration  tests,  which  have  been  successfully  used  to 
evaluate four real database installations based in four 
well-known and widely used DBMS.1 
1. Introduction 
Databases play a central role in the information in-
frastructure of most organizations and it is well known 
that security aspects must be an everyday concern of a 
database administrator (DBA). Database security arises 
from the need to protect against unauthorized attempts 
to access private data and loss or corruption of data due 
to malicious actions. Other concerns include protecting 
against  malicious  interferences  that  may  cause  undue 
delays in accessing data, or even denial of service. 
Typical  Database  Management  Systems  (DBMS) 
offer  several  mechanisms  to  protect  data  (e.g.,  user 
privileges,  data  encryption,  authentication,  auditing, 
etc.) [7, 8]. However, in most DBMS, the effectiveness 
of  those  mechanisms  is  largely  dependent  on  their  ac-
tual configuration.  
Tuning  a  large  database  for  high  security  is  a  very 
1This  work  was  supported  by  the  Programme  AlBan,  the  European  Union 
Programme  of  High  Level  Scholarships  for  Latin  America,  scholarship  no. 
E07D403033BR.  
complex  task  that  requires  a  lot  of  expertise  and  hard 
work. An additional difficulty is that database adminis-
trators,  although  having  a  very  clear  perception  of  the 
available  functionalities  and  corresponding  settings, 
seldom have feedback on how good a given configura-
tion is concerning security aspects. 
Several security evaluation methods have been pro-
posed in the past [4, 5, 6]; however, previous proposals 
to assess computer security are quite complex and most 
are not specific for database systems. For example, the 
Orange  Book  [6]  and  the  Common  Criteria  for  Infor-
mation Technology Security Evaluation [5] define a set 
of  generic  rules  that  allow  developers  to  specify  the 
security  attributes  of  their  products  and  evaluators  to 
verify  if  products  actually  meet  their  claims.  Another 
example is the red team strategy [10] which consists of 
a group of experts trying to hack its own computer sys-
tems  to  evaluate  security. Another work [13] proposes 
an approach to classify the security mechanisms in da-
tabase  systems.  In  this  approach  DBMS  are  classified 
using a set of security classes. 
The  set  of  security  configuration  benchmarks  cre-
ated by the Center for Internet Security (CIS) is a very 
interesting  initiative  (http://www.cisecurity.org/).  CIS 
is  a  non-profit  organization  formed  by  several  well-
known  academic,  commercial,  and  governmental  enti-
ties,  that  has  created  a  series  of  security  configuration 
documents  for  several  commercial  and  open  source 
DBMS, among other types of products such as operat-
ing  systems  and  web  servers,  namely:  MySQL, 
SQLServer  2000/2005,  and  Oracle  8i/9i/10g.  These 
documents  focus  on  the  practical  aspects  of  the  con-
figuration of these DBMS and state the concrete values 
each  configuration  option  should  have  in  order  to  en-
hance overall security of real installations. The general 
idea  is  that  these  documents  are  meant  to  be  used  by 
experienced  DBA  (that  may  not  be  security  experts) 
and  the  key  advantage  of  the  CIS  approach  is  that  the 
configuration settings are based on field experience. 
Although  the  CIS  documents  are  indeed  very  use-
ful, three key problems have to be noted: 
− The  goal  is  to  show  which  values  or  procedures 
should  be  used  when  configuring  the  system  and 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:10:06 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE90DSN 2008: Neto & Vieiranot to provide a way to assess the DBMS configu-
ration in terms of security. Although CIS refers to 
these  documents  as  benchmarks  they  are  not  ex-
plicitly  designed  for  DBMS  configuration  as-
sessment or comparison. 
− Each  document  targets  a  specific  DBMS  and  the 
configurations  and  concepts  cannot  be  general-
ized.  Additionally,  each  document  follows  a  dif-
ferent  approach  regarding  the  way  settings  are 
presented. For example, the grain of detail is dif-
ferent from one document to another and the way 
recommendations are written also differs. 
− Even thought there is a concise rationale in some 
cases,  the  general  security  concepts  behind  each 
choice are not clearly presented. That is a relevant 
problem as the DBA, the ultimate decision maker, 
learns  barely  anything  about  what  he  is  doing, 
which  in  the  end  prevents  him  from  coming  up 
with his own alternatives. That may also stop the 
DBA  from  understanding  the  gains  and  dangers 
associated  with  each  configuration  option,  keep-
ing him from being able to assess new configura-
tion alternatives when new software is available. 
This  paper  proposes  an  approach  to  assess  the 
effectiveness  of  DBMS  configurations  concerning 
security. First, based on the detailed analysis of the CIS 
security  configuration  benchmarks  for  DBMS  (from 
now  on  referred  as  the  CIS  documents),  we  identified 
the  generic  security  best  practices  behind  each 
particular  configuration  option,  listing  also  how  many 
recommendations  are  defined 
different 
for  each 
practice 
in  each  document.  These  security  best 
practices  are  stated  in  a  general  form,  which  allows 
portability  to  practically  any  DBMS  engine  available 
today.  We  then  take  the  set  of  general  practices  and 
define a number of generic tests, which can be used to 
assess the security of real database installations.  
The  structure  of  the  paper  is  as  follows.  Section  2 
presents  the  security  best  practices  proposed  and  the 
reasoning  behind  them.  Section  3  presents  the  set  of 
security  tests.  The  experimental  demonstration  of  the 
approach  is  presented  in  Section  4  and  Section  5  con-
cludes the paper.  
2. Practices for secure DBMS configurations 
The  proposed  security  best  practices,  presented  in 
Table  1  (details  on  this  table  will  be  provided  in  this 
and  the  following  sections),  are  based  on  the  detailed 
study  and  subsequent  generalization  of  the  configura-
tion settings stated in the CIS documents. For each rec-
ommended  setting,  we  identified  the  security  property 
being  targeted  and  analyzed  the  value  and  procedure 
recommended. This allowed us, for the majority of the 
cases,  to  determine  the  more  general  best  practice  be-
ing addressed by each recommended setting. Addition-
ally,  we  counted  the number of different configuration 
recommendations that could be classified as having the 
same best practice as basis. 
There  are  three  key  aspects  to  consider  about  this 
procedure. The first one is related to the cases where a 
given configuration setting can be associated with more 
than one general best practice. For example, in the CIS 
document about Oracle 8i, recommendation 1.32 states 
that  the  “tkprof”  utility,  used  to  access  trace  data, 
should  either  be  removed  from  the  system  (which  can 
be  associated  with  the  security  best  practice  #50)  or 
have  its  permissions  reviewed  in  order  to  be  available 
only to authorized people (related to security best prac-
tice  #23).  In  these  cases,  field  database  admin  experi-
ence  and  expert  judgment  were  used  to  determine  the 
prevalent  best  practice.  For  the  previous  example 
(“tkprof”), we have considered this recommendation to 
be related with best practice #50.  
The  second  aspect  is  related  to  the  configuration 
settings that are not clearly related to a general security 
best  practice  (e.g.,  Oracle  10g  recommendation  6.03 
related  to  the  Automated  Storage  Management  and 
SQL  Server  2000  recommendation  5.4  related  to  the 
SQL Profiler application). We were able to notice that 
these recommendations are typically related to database 
management  and  not  to  security  aspects, and therefore 
were not exactly suitable for this work. Also, in most of 
the  cases,  they  were  applicable  only  to  the  particular 
DBMS  in  question  and  could  hardly  be  generalized. 
That  is  the  reason  why  the  number  of  items  in  each 
column  does  not  match  the  exact  number  of  recom-
mendations presented in the CIS documents. 
Finally,  the  last  noticeable  aspect  about  the  defini-
tion  of  the  best  practices  is  that  some  of  them  can  be 
seen  as  special  cases  of  more  general  ones  also  pre-
sented. The problem here is to decide when a speciali-
zation of a particular best practice is relevant enough to 
spawn a new one. For example, best practices #48 and 
#49 may be seen as specializations of best practice #50. 
Past  experience  on  security  trade-offs  was  then  re-
quired  to  evaluate  and  decide  when  such  separation 
was  important.  For  the  previous  example,  it  is  well-
known  that  network  operations  and  access  to  the  file 
system  are  extended  functionalities  which,  although 
useful  to  some  extent,  are  potential  sources  of  attacks 
and  hence  should  be  explicitly  avoided.  At  the  same 
time,  a  more  general  practice  related  to  other  possible 
extensions  and  functionalities  (as  in  practice  #50)  is 
also  important.  In  fact,  although  in  some  cases  it  may 
not  be  possible  to  decide  for  sure  if  a  given  extension 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:10:06 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE91DSN 2008: Neto & Vieiracan or can not be used as an attack path, the possibility 
frequently exists. 
The  proposed  security  best  practices  can  be 
grouped according to specific characteristics. Based on 
a detailed analysis of the best practices we have identi-
fied  the  following  groups:  environment,  installation 
setup,  operational  procedures,  system  level  configura-
tion, and application level configuration and usage. 
Table  1  presents  the  security  best  practices  pro-
posed. This table is the result of a complex task of sys-
tematization  of  all  the  recommendations  found  in  the 
CIS documents analyzed. The first column is a number 
that  will  be  used  to  identify  each  best  practice.  The 
second  is  the  statement  of  the  security  best  practice. 
The last four columns show the number of recommen-
dations from each CIS document that is associated with 
each practice. The column M is for the MySQL Bench-
mark  document,  O8  is  for  the  Oracle  8i  Benchmark 
document,  O10  is  for  the  Oracle  9i  and  10g  Bench-
mark  document,  and  S  is  for  the  SQLServer  2000 
Benchmark document. 
Table 1. DBMS configuration security best practices 
Recommendations 
in CIS documents 
M  O8  O10 
S 
SECURITY CONCERNS 
# 
ENVIRONMENT 
1  Use a dedicated machine for the database 
2 
Avoid  windows machines which are domain server 
controllers 
3  Use Firewalls: on the machine and on the network border 
4 
Prevent physical access to the DBMS machine by unau-
thorized people 
1 
1 
1 
5  Remove from the network stack all unauthorized protocols  
6  Create a specific user to run the DBMS daemons 
1 
7  Restrict DBMS user access to everything he doesn't need  1 
8  Prevent direct login on the DBMS user account 
2 
INSTALLATION SETUP 
2 
9  Create a partition for log information 
1 
10  Only the DBMS user should read/write in the log partition 
11  Create a partition for DB data 
1 
12  Only the DBMS user should read/write in the data partition  1 
13  Separate the DBMS software from the OS files 
1 
  Remove/Avoid default elements: 
14  »»»Remove example databases 
15  »»»Change/remove user names/passwords 
16  »»»Change remote identification names (SID, etc...) 
17  »»»Change TCP/UDP Ports 
18  »»»Do not use default SSL certificates 
19  Separate production and development servers 
20  No developer should have access to the production server  
1 
1 
1 
21 
Use different network segments for production and devel-
opment servers  
  Verify all  the installed DBMS application files: 
22  »»»Check and set the owner of the files 
1 
23  »»»Set read/running permissions only to authorized users  4 
OPERATIONAL PROCEDURES 
28 
1 
1 
1 
1 
3 
3 
1 
2 
2 
1 
2 
1 
1 
1 
1 
3 
1 
1 
4 
1 
1 
1 
2 
4 
3 
1 
1 
5 
1 
1 
1 
3 
1 
1 
4 
3 
1 
1 
2 
4 
1 
1 
1 
5 
1 
2 
18 
3 
22 
14 
24  Keep the DBMS software updated 
25  Make regular backups 
26  Test the backups 
SYSTEM LEVEL CONFIGURATION 
27 
28 
Avoid random ports assignment for client connections 
(firewall configuration) 
Enforce remote communication encryption with strong 
algorithms 
3 
1 
1 
1 
1 
1 
1 
1 
1 
11 
1 
4 
3 
29  Use server side certificate if possible 
30 
Use IPs instead of host names to configure access per-
missions (prevents DNS spoofing) 
31  Enforce strong user level authentication 
32  Prevent idle connection hijacking 
33  Ensure no remote parameters are used in authentication  
34  Avoid host based authentication 
35  Enforce strong password policies 
36  Apply excessive failed logins lock 
37  Apply password lifetime control 
38  Deny regular password reuse (force periodic change) 
39  Use strong encryption in password storage 
40  Enforce comprehensive logging 
41  Verify that the log data cannot be lost (replication is used) 
42  Audit sensitive information 
43 
Verify that the audit data cannot be lost (replication is 
used) 
Ensure no “side-channel” information leak (don’t cre-
ate/restrict access): 
44  »»»From configuration files 
45  »»»From system variables 
46  »»»From core_dump/trace files 
47  »»»From backups of data and configuration files  
  Avoid interaction between the DBMS users and the OS: 
48  »»»Deny any read/write on file system from DBMS used 
»»»Deny any network operation (sending email, opening 
sockets, etc...) 
»»»Deny access to extended libraries and functionalities 
that are not needed  
49 
50 
51  »»»Deny access to any OS information and commands 
1 
2 
1 
1 
3 
1 
1 
2 
1 
2 
1 