show how to setup a root password
1. Login as kali/kali
2. Type #sudo su and enter Kali password
S_E_Oblako
3. At the root account type #passwd
4. Enter a password such as toor
S_E_Oblako
Logout Kali and log back in as root/toor
S_E_Oblako
1.7. USB Wi-Fi Adpator
Wi-Fi USB adaptor is a wireless card that will be used in Kali Linux
Wireless training to monitor and inject packets over the air. The build-
in wireless cards are unmanaged cards and cannot monitor the
available Wi-Fi access point on the air.
Most of the USB wireless cards that used to work smoothly with Kali
Linux until the introduction of Kali 2020 which have Linux kernel 5.4.
In Kali 2020.2 do the following to install new drivers for the cards:
- Check the card chipset using command
#airmon-ng
- If the chipset is Ralink then
#apt install firmware-ralink
S_E_Oblako
- If the chipset is Realtek then follow the procedure in Appendix 1
Some of the USB Wi-Fi cards that tested with Kali-Linux
2020.2
S_E_Oblako
Attaching Card to Kali Linux
To attach the card to Kali virtual machine, see the screenshot below.
- The card should be connected to host
- In Virtual Box highlight Kali machine, then click Setting /USB
- If the card does not appear, click the + to add the card
Starting Wireless Network Card
- Unplug the card
- Start Kali
- Plug the card again – if the card working green light should be flashing
in the USB Icon on kali
S_E_Oblako
- Type #iwconfig
Changing mac address
Commands:
#ifconfig wlan0 down
#macchanger --random wlan0
#ifconfig wlan0
S_E_Oblako
2
Wi-Fi Penetration Testing
In this chapter you will learn how to use special wireless card to
collect packets off the air and monitor Wi-Fi traffic plus cracking
WEP and WPA WI-FI encrypted networks also you will learn how
to make a fake access point and collects Packets that passing
through your access point. At the end of the chapter there is guide
on how to protect wireless Wi-Fi network from such attacks
S_E_Oblako
2. Wi-Fi Penetration Testing
Wi-Fi or wireless penetration testing is an important aspect of any security
audit project, organizations are facing serious threats from their insecure Wi-
Fi network. A compromised Wi-Fi puts the entire network at risks. In this
section we are going to run many exercises to see Wi-Fi traffic off the air, de-
authenticate legitimate users from Wi-Fi connection, setting up Fake Access
point and lure people to it, crack WEP and WPA
2.1. Putting card in monitor mode
Exercise 1: Putting wireless card in Monitor mode
1. Start Kali Linux VM
2. Check Kali version
# grep VERSION /etc/os-release
3. To see what Kernel version, type
#hostnamectl
Putting card in to monitor mode will allow it to capture any packets off the
air, even packets not directed to its mac address
S_E_Oblako
Card Mode - Managed: if the card mode is managed, it will only can see the
packets that targeted the card mac address or broadcast, to make the card to
see all packets in the air it has to be changed to monitor mode.
4. Changing the Card to Monitor Mode:
#iwconfig
#ifconfig wlan0 down
#airmon-ng start wlan0
2.2. Over the air wireless data packets capture
airodump-ng utility allows the card to capture all traffic in the air if the card
is set to monitor mode, it will show all Access Points that it can see
S_E_Oblako
Exercise 2: Over the air wireless data capture
1. #airodump-ng wlan0mon
2. If you do not see any output
b. Disconnect the card from the USB port.
c. Connect the card pack with Kali running.
d. Put the card in monitor mode.
e. Run airodump-ng again.
Output
S_E_Oblako
2.3. Sniffing specific AP
Exercise 3: Sniffing Specific Access Point
Commands:
Airodump-ng: utility
--channel: channel number that the AP working on
--based: mac address of the AP
--write: to send the captured output to file (test-upc)
Wlan0: wireless card name
S_E_Oblako
Finding the captured file:
In Kali type: #ls
S_E_Oblako
2.4. De-authentication attacks
De-authentication attack enables the attack to disconnect any device from the
target access point.
Exercise 4: De-authentication Attack
1. Make sure the card is working using command.
#iwconfig
2. If the card is not in monitor mode. Put it in monitor mode.
3. Check the packets over the air to decide which access point that will
attack using command
#airodump-ng wlan0
S_E_Oblako
4. Check how many devices connected to the target AP using
command airodump
#airodump-ng --channel x –bssid xx:xx:xx:xx:xx:xx card name
S_E_Oblako
5. Use command aireplay to start deauth attack
#aireplay-ng --deauth [number of packets ] -a [AP Mac] -c [ device Mac]
card name
S_E_Oblako
6. You should notice that the device disconnected from internet
7. To monitor access points that works on 5 Gigahertz band
#airodump-ng –band a wlan0
S_E_Oblako
2.5. WEP encrypted networks crack
WEP is an old Encryption but it is still in use in some networks, therefore I
will explain how to break it.
WEP algorithm called RC4 where each packet is encrypted by the access
point and then decrypted at the client side. WEP ensure that each packet is
encrypted by a unique key stream using random 24-bit initializing factor
(IV), This IV is contained in packets as plain text. In a busy network, if we
can collect more than two packets with the same IV, then aircrack tool (
aircrack-ng) can be used to determine the key stream and the WEP key using
statistical attacks.
Conclusion: the more IV we can collect, the more likely for us to crack the
WEP key
Exercise 5: WEP Encryption cracking procedure
Set the card in monitor mode
See AP nearby using command “ airodump-ng wlan0 ”
S_E_Oblako
Collect packets from the AP you want to attack using command
#airodump-ng -–channel [ch. Number] -–bssid [bssid name] -–write
[file name] [interface]
Use aircrack-ng tool to crack the key from the captured file as the
following example:
#aircrack-ng [filename]
Ex: #aircrack-ng out-01.cap
Notes
The higher the encryption key (24 bit, 32 bit , 64bit or 128bit )
the more time required to crack the key.
The busier the network (more packets generated and collected)
the shorter time needed to crack the network).
You can have both tools ( airodump-ng ) and ( aircrack-ng)
S_E_Oblako
working at the same time with aircrack-ng is taking the
airodump-ng output ) until aircrack find the key
`
S_E_Oblako
Output of aircrack-ng utility
To use the key just remove the dots from it (B48CE760CA)
If there are not enough users in the network or users is not
generating enough packets to collect and crack the key, we can
inject data to the router to generate more IV.
Normally router Ignore any packets coming from the user that are
not connected.
Before injecting packets to the router, we are going to do fake
authentication with the router.
Fake authentication will force the router to check incoming packets
from non-associated device.
Here are the steps of fake authentication:
Commands:
#aireplay-ng –fakeauth [number of packets] -a [target MAC] -h [your MAC]
[interface]
Ex. #aireplay-ng –fakeauth 100 -a E0:69:95:B8:BF:77 -h
00:C0:CA:6C:CA:12 Wlan0mon
Fake Authentication command:
#aireplay-ng –fakeauth 10000 -a 00:10:18:90:2D:EE -h
00:c0:ca:6c:ca:12 wlan0
After the command notice the AP AUTH parameter
The AUTH parameter is changed to open and our device shows as if it
connected to the network but in fact it is not connected, however the AP will
read what we will sent to it and that’s make it easy to inject packets
The way to inject packet is to capture ARP packet coming from the AP and
S_E_Oblako
send it back to the AP and in the same time taking the output file and send it
to aircrack-ng tool to find the key
S_E_Oblako
2.6.WPA Encrypted Network crack
WPA found after WEP to address all the weaknesses of WEP like
initialization vector that sent in plain text and the possibility of having similar
IV in more than one packet in a busy or injected network which will allow a
tool like aircrack-ng to do statistical attack and find the key from similar IVs
collected.
In WPA there is no IV and each packet is encrypted using a unique
temporary key which means that the collection of packet is irrelevant because
even if we collect one million packet there is no information in the packet
that can help us to crack the key.
WPA2 is the same as WPA, the only difference is that WPA2 uses different
algorithm to encrypt packets.
During the authentication process the supplicant (client) and authenticator
(access point) each attempt to prove that they independently know the pre-
shared-key (PSK) passphrase without disclosing the key directly. This is done
by each encrypting a message using the Pairwise-Master-Key (PMK) that
they have generated, transmitting each way, and then decrypting the message
they've each received. The four-way handshake is used to establish a new key
called the Pairwise-Transient-Key (PTK), which is comprised of the
following data:
Pairwise Master Key
Authenticator Nonce
Supplicant Nonce
Authenticator MAC Address
Supplicant MAC Address
The result is then processed through a Pseudo-Random-Function (PRF).
Another key that is used for decrypting multicast traffic, named the Group-
Temporal-Key, is also created during this handshake process.
Actual Handshake Process
Initially the access point transmits an A Nonce key to the client
within the first handshake packet.
The client then constructs its S Nonce, along with the Pairwise-
Transient-Key (PTK), and then submits the S Nonce and Message
Integrity Code (MIC) to the access point.
S_E_Oblako
Next the access point constructs the Group-Temporal-Key, a
sequence number that is used to detect replay attacks on the
client, and a Message Integrity Code (MIC).
Lastly the client then sends an acknowledgement (ACK) to the
access point.
At this point an attacker would have been able to intercept enough of the
handshake to perform a password cracking attack.
Construction of the PMK
Pairwise-Master-Keys are used during the creation of the Pairwise-Transient-
Keys and are never actually transmitted across the network. They are derived
from the Pre-Shared-Keys (Enterprise Wi-Fi uses a key created by EAP)
along with the other information such as SSID, SSID Length. The PMKs are
created using the Password-Based Key Derivation Function #2 (PBKDF2),
with the SHA1 hashing function used with HMAC as the message
authentication code:
PMK = PBKDF2(HMAC−SHA1, PSK, SSID, 4096, 256)
HMAC-SHA1 is the Pseudo Random Function used, whilst 4096 iterations of
this function are used to create the 256-bit PMK. The SSID is used as a salt
for the resulting key, and of course the PSK (passphrase in this instance) is
used as the basis for this entire process.
Construction of the PTK
The creation of the Pairwise-Transient-Keys is performed via a another PRF
(using an odd combination of SHA1, ending in a 512-bit string), which uses a
combination of the PMK, AP MAC Address, Client MAC Address, AP
Nonce, Client Nonce. The result is this 512 bit Pairwise-Transient-Key,
which is a concatenation of five separate keys and values, each with their
own purpose and use:
Key Confirmation Key (KCK) - Used during the creation of the
Message Integrity Code.
Key Encryption Key (KEK) - Used by the access point during data
encryption.
Temporal Key (TK) - Used for the encryption and decryption of
unicast packets.
MIC Authenticator Tx Key (MIC Tx) - Only used with TKIP
S_E_Oblako
configurations for unicast packets sent by access points.
MIC Authenticator Rx Key (MIC Rx) - Only used with TKIP
configurations for unicast packets sent by clients.
What is computed for cracking?
Once the second packet of the handshake has been captured an attacker has
enough information to attempt to compute the Pairwise-Transient-Key
(using an assumed PSK passphrase), which can then be used to extract the
Key-Confirmation-Key and compute the Message Integrity Code. It is this
MIC that is used during the comparison with the genuine MIC to determine
the validity of the assumed PSK.
This whole process is re-run for every dictionary entry (or brute force
attempt) during password cracking. The MIC is calculated using
HMAC_MD5, which takes its input from the KCK Key within the PTK.
Exercise 6: Cracking WPA using WPS feature
In most routers that uses WPA there is a feature called WPS, this feature
allow client to connect easily to router using 8-digit long PIN, the purpose of
this feature is to connect some devices like printers easily to the router. The
WPS feature must be enable from the router first and some routers have a
bottom called WPS need to be pressed to connect to the router automatically.
- Using brute force attack the WPS PIN can be guessed in 10 hours.
- A Kali Linux tool called Reaver can recover WPA key from WPS PIN.
- Use command:
#wash -i wlan0 (to find which AP with WPS lock set to know)
#reaver -b [mac address of AP] -c [channel number] -i [interface] (This
will start the brute force attack on the access point).
S_E_Oblako
Any access point shows WPS = 1 that mean WPS is enabled in that access
point.
Reaver support start and resume, if you cancel the attack after reaver
reaches 30% of brute force attack and then resume later for the same
AP it will resume from 30%
#reaver -–help (for more advanced options in reaver)
If you use -vv and -f with the reaver command, then the tool will
show more information about what pin it is trying to crack.
Reaver may take hours to crack the WPS PIN.
Exercise 7: Cracking WPA by capturing handshaking
S_E_Oblako
This method of cracking WPA depend on capturing the handshake between
AP and client machine that has legitimate access and start by checking the
AP and see if there is connected clients, then run de-authentication attack to
force the client to disconnect from the AP and reconnect again, while
capturing the packets of handshake between the AP and the client , the
handshake contain the AP access password encrypted, after capturing the
encrypted password we use aircrack tool to launch a word-list attack against
the handshake to determine the AP key.
To crack WPA network we need two things:
- Capture of the handshake
- A wordlist
Handshake capture procedure
S_E_Oblako
1. Put the card in to monitor mode
2. Start airodump-ng (wireless card must be in monitor mode)
#airodump-ng wlan0mon
S_E_Oblako
3. Capture packets from specific AP and send them to a file.
4. Force handshake using de-authentication attack
S_E_Oblako
5. Open new terminal window and type the following command to force
client to disconnect and connect back again to capture the handshake
while airodump still running and writing to file
#aireplay-ng –deauth 5 – a  - c  wlan0mon
Airodump will show the handshake as follow:
Stop the live capture and check the file using Wireshark to make
sure that the file captured contain at least 4 handshake packets.
Open file manager /home and check the captured file named hs
Start Wireshark from terminal #wireshark then open the hs-01.cap
S_E_Oblako
file
In wireshark search for “eapol” The handshake protocol
S_E_Oblako
After capturing the handshake, we need a tool to guess the password
using wordlist, if the tool could not guess the password, we cannot
open the handshake to know the wireless key
You can download ready-made word lists from the internet, from
the following resources:
ftp://ftp.openwall.com/pub/wordlists/
http://www.openwall.com/mirrors/
https://github.com/danielmiessler/SecLists
http://www.outpost9.com/files/WordLists.html
http://www.vulnerabilityassessment.co.uk/passwords.htm
http://packetstormsecurity.org/Crackers/wordlists/
http://www.ai.uga.edu/ftplib/natural-language/moby/
http://www.cotse.com/tools/wordlists1.htm
http://www.cotse.com/tools/wordlists2.htm
http://wordlist.sourceforge.net/
Or you can create your own wordlist using “crunch” tool that comes part of
Kali
#crunch [min] [max] [characters=lower|upper|symbos] -t [pattern] -o file
For the pattern if you know some characters of the password but not all you
can put them here, like the password start with A and end with U so you
can put A@@@@@@U
Now we are going to use the aircrack-ng tool to crack the key , it
does this by combining each password in the wordlist file with the
AP name ( ESSID) to compute Pairwise Master Key ( PMK) using
the pbkdf2 algorithm the PMK is compare to the handshake file.
S_E_Oblako
Summary steps for cracking WPA2:
Put the wireless card in monitor mode
Find the Access point that you need to crack and make sure that
there are clients connected to the AP
Use airodump-ng tool to capture the AP packets and save the
output to a file.
Make de- authentication attack on the AP to force client to re-
associate with the AP (use different terminal to keep the airodump-
ng running)
After de-authentication finish stop the airodump-ng.
Make sure that handshaking (eapol packets are captured using
wireshark to check the file).
Create word list using crunch or have already made word list.
Use aircrack-ng to crack the WPA password.
2.7. EAPOL protocol
Extensible Authentication Protocol, or EAP, is
an authentication framework frequently used in wireless
networks and point-to-point connections. It is defined in RFC 3748,
and is updated by RFC 5247.
EAP is an authentication framework for providing the transport and
usage of keying material and parameters generated by EAP