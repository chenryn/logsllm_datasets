07/04/2008
1
Speakers: 
Chema Alonso
José Parada
Informática64
Microsoft
MS MVP Windows Security
IT Pro Evangelist
PI:EMAIL
PI:EMAIL
Agenda
 Code Injections
 What are Blind Attacks?
 Blind SQL Injection Attacks
 Tools
 Time-Based Blind SQL Injection
 Tools
 Time-Based Blind SQL Injection using heavy queries
 Demos 
 Marathon Tool
07/04/2008
2
Code Injection
 Developer  don´t sanitize correctly the input parameters 
and use them in queries directly:
 Command Injection
 SQL Injection
 LDAP Injection
 Xpath Injection
Blind Attacks
 Attacker injects code but can´t access directly to the 
data.
 However this injection changes the behavior of the 
web application. 
 Then the attacker looks for differences between true 
code injections (1=1) and false code injections (1=2) in 
the response pages to extract data.
07/04/2008
3
Blind SQL Injection Attacks
 Attacker injects:
 “True where clauses”
 “False where clauses“
 Ex:
 Program.php?id=1 and 1=1
 Program.php?id=1 and 1=2
 Program returns not any visible data from database 
nor data in error messages either.
 The attacker can´t see any data extracted from the 
database. 
Blind SQL Injection Attacks
 Attacker analyzes the response pages looking for 
differences between “True-Answer Page” and “False-
Answer Page”:
 Different hashes
 Different html structure
 Different patterns (keywords)
 Different linear ASCII sums
 “Different behavior”
 By example: Response Time
07/04/2008
4
Example: “True-Answer Page”
Example: “False-Answer Page”
07/04/2008
5
Blind SQL Injection Attacks
 If any difference exist, then:
 Attacker can extract all information from database
 How? Using “booleanization”
 MySQL:
 Program.php?id=1 and 100>(ASCII(Substring(user(),1,1)))
 “True-Answer Page”  or “False-Answer Page”?
 MSSQL:
 Program.php?id=1 and 100>(Select top 1 
ASCII(Substring(name,1,1))) from sysusers)
 Oracle:
 Program.php?id=1 and 100>(Select ASCII(Substr(username,1,1))) 
from all_users where rownum0 and 300>(select top 1 ascii(substring(name,1,1)) 
from sysusers)
Demo 1: MS SQL Server
Query lasts 14 seconds -> True-Answer
07/04/2008
11
Demo 1: MS SQL Server
 Query lasts 1 second -> False-Answer
Demo 2: Oracle
Query Lasts 22 seconds –> True-Answer
07/04/2008
12
Demo 2: Oracle
Query Lasts 1 second –> False-Answer
Demo 3: Access 2000
Query Lasts 6 seconds –> True-Answer
07/04/2008
13
Demo 3: Access 2000
Query Lasts 1 second –> False-Answer
Demo 4: Access 2007
Query Lasts 39 seconds –> True-Answer
07/04/2008
14
Demo 4: Access 2007
Query Lasts 1 second –> False-Answer
Marathon Tool
 Automates Time-Based Blind SQL Injection Attacks 
using Heavy Queries in SQL Server and Oracle 
Databases.
 Schema Extraction
 Developed in .NET
07/04/2008
15
Demo 5: Marathon Tool
Conclusions
 Time-Based Blind SQL Injection using Heavy Queries 
works with any database.
 The delay generated with a heavy query depends on 
the environment of the database and the network 
connection.
 It is possible extract all the information stored in the 
database using this method.
 We already have a POC tool for extract all the database 
structure in MSSQL and Oracle engines.
07/04/2008
16
Questions?
 Speakers:
 Chema Alonso
 PI:EMAIL
 Microsoft MVP Windows Security
 Security Consultant
 Informática64
 José Parada
 PI:EMAIL
 Microsoft IT Pro Evangelist
 Microsoft 
 Authors:
 Chema Alonso (PI:EMAIL)
 Daniel Kachakil (PI:EMAIL) 
 Rodolfo Bordón (PI:EMAIL)
 Antonio Guzmán (PI:EMAIL)
 Marta Beltrán (PI:EMAIL)
32