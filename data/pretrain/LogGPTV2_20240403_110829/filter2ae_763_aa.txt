# 免拆芯片提取固件
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 免拆芯片提取固件
近期做项目，使用芯片夹对 MCU
固件进行了免拆提取。客户很感兴趣，会后负责人特意找到我，想我给他发点相关的资料学习一下。本以为网上很多，搜索了一下都不是很满意，大多讲的固件提取的方式，即没有基础知识介绍，也没有详细的操作步骤。既然没有就自己动手吧，于是便有今天的这篇文章。
为什么要免拆提取呢，直接用热风枪吹下来，用 Flash
编程器读取，它不香吗。免拆，一是懒，吹下来之后还要焊上去，对动手能力要求要高一些；二是，像我们在外面做项目，也不一定有热风枪、电烙铁什么的，出差不可能随声带上吧（下面放一张我出差携带的部分装备）。还有一点，有些情况客户是不允许拆芯片的。
另外还有一点，多数资料都是将如何从 Flash 中提取固件，很少讲怎么从 MCU 中提取固件。下面会介绍一些知识，然后分别演示如何从 Flash 和 MCU
免拆提取固件。
## 基础知识
###  芯片封装与针脚定义
使用芯片夹可以实现 SOP、QFP 封装等 **针脚外露** 的芯片免拆固件提取，而对 QFN、BGA 等封装方式则无能无力。
  * SOP8/16
  * SOP(Small Out-Line Package,小外形封装) 针脚从封装两侧引出呈海鸥翼状(L 字形)，一般用于针脚不太多的芯片上 。SOP8/16 封装的 Flash 在路由器、摄像头等 IOT 设备厂较为常见。针脚有8根或16根，且一个角上有小圆点（每个芯片都有一个小圆点，小圆点所在的位置是第一针脚,然后逆时针排布第二针脚,第三针脚等）,型号代码一般是24或25开头。SOP8/16 SPI Flash 一般的针脚定义如下。
引脚 | 定义  
---|---  
/CS | 片选  
DO | 数据输出  
/WP | 写保护  
GND | 电源地  
VCC | 电源正极  
/HOLD | 输入保持  
/RESET | 复位  
CLK | 时钟  
DI | 数据输入  
  * QFP
  * QFP(Plastic Quad Flat Package，方型扁平式封装技术）针脚从四个侧面引出呈海鸥翼(L)型。实现的芯片针脚之间距离很小，管脚很细，一般大规模或超大规模集成电路采用这种封装形式，其针脚数一般都在64以上。在小型IOT设备中可作为主控或协处理器。下图中的芯片就是采用 QFP 封装。
此类封装由于针脚数不固定，没有统一标准，一般由厂商自行定义，引脚定义详见芯片手册。
  * GBABGA(Ball Grid Array Package,球栅阵列封装) 封装的 I/O 端子以圆形或柱状焊点按阵列形式分布在封装下面，具有更小的体积，更好的散热性能和电性能。由于 I/O 端子在 **封装下方** ，提取固件则需要使用`BGA返修台`拆卸下来读取， **不能实现免拆提取** 。BGA 封装一般用于 CPU 和大容量存储。此类封装同 QFP 封装的芯片一样，引脚定义需看看相应的芯片手册。
###  芯片夹
一般使用的夹子有三种。第一种是`SOP8/16脚测夹`，常用于 SPI 闪存的固件提取；第二种是`芯片通用测试夹测试钩子`,常用于SOP QFP
封装芯片的固件提取或协议分析；第三种是`ECU 探针`，多用于汽车 ECU 固件提取。
  * SOP8/16脚测夹
`SOP8/16脚测夹`适用于 SOP8 以及 SOP16 封装的芯片。
  * 芯片通用测试夹测试钩子
`芯片通用测试夹测试钩子`此类钩子淘宝上有好几种在售。下图的这种，只适用于芯片针脚较少的芯片，如采用 SOP8
封装的芯片。勾式是单钩钩取，扁式是双钩夹取。这种的价格相对便宜一些。
下面这种夹子更细，能够用在有更多更细的针脚芯片上，如 QFP 封装的 MCU。这类夹子较上面的这种要贵一些。
这类夹子都比较小，当需要夹连续的针脚时有一定的困难，需要反复尝试。另外由于没有支撑，可能刚夹上就被弹开了，这种情况就可以用`ECU 探针`来连接。
  * ECU 探针
`ECU
探针`常用于汽车行业，是动力调教等玩车搞车一族的必备单品。当然其他的芯片也可以用它来进行固件提取。这类由于带有支架，使用是只需要把探针搭在对应的芯片针脚上。
## 从 Flash 中提取固件
免拆读取 Flash，一般读取 SOP8 封装的 SPI Flash较多，使用`SOP8/16脚测夹`较为方便。提取所需的软硬件如下。
  * 软件 
    * flashrom: [flashrom](https://flashrom.org/) 是一个开源的跨平台的烧录工具, 提供了不少的芯片支持和编程器支持. 用于识别、 读取、写入、 验证和擦除各种 Flash 芯片。
  * 硬件 
    * 测试夹：SOP8/16脚测夹，上文有详细介绍。
    * 编程器：CH341A 编程器/树莓派/CJMCU FT232H等(任选一)
这里我用树莓派做演示，之前用过 CH341A 编程器 提取的速度比较慢，建议使用树莓派或 FT232H 等调试器。
  1. 安装flashrom使用 apt 直接安装。 
        sudo apt-get intall flashrom
  2. 启用树莓派的 SPI使用树莓派的配置命令`rasp_config`，依次选择 “Interfacing Options” -> SPI -> YES 启动树莓派的 SPI 接口。
  3. 加载 SPI 模块要使用树莓派的 SPI 接口还需要加载 spi_bcm2835 与 spidev 模块。 
        pi[@raspberrypi](https://github.com/raspberrypi "@raspberrypi"):~ $ sudo modprobe spi_bcm2835
    pi[@raspberrypi](https://github.com/raspberrypi "@raspberrypi"):~ $ sudo modprobe spidev
  4. 接线首先找到板子上的 Flash，然后找到 Flash 的 datasheet 中对引脚的定义与树莓派的引脚定义，根据 flashrom 上给出的使用说明进行连接，如下图。
树莓派引脚 | SPI Flash 引脚  
---|---  
25 | GND  
24 | /CS  
23 | SCK  
21 | DO  
19 | DI  
17 | VCC 3.3V (+ /HOLD, /WP)  
一般情况下 SPI Flash 的 VCC、/HOLD、/WP 都需要连接树莓派的 3.3V 的 VCC 上。
按照上表进行接线，连接好的效果图如下。使用编程器、调试器等设备时接线也类似。
  1. 提取接好线后，使用 flashrom 提取固件。`-p` 选项指定使用的设备类型，这里使用了树莓派的 spi 接口，并设定读写速度；`-r` 选项指定读取后保存的路径；从文件中写回 flash 所用到的选项为 `-w`。如下成功提取固件并保存到了当前目录的 w25q_rasp.bin 文件中了。 
        pi[@raspberrypi](https://github.com/raspberrypi "@raspberrypi"):~ $ flashrom -p linux_spi:dev=/dev/spidev0.0,spispeed=1000 -r w25q_rasp.bin
    flashrom  on Linux 4.19.57-v7+ (armv7l)
    flashrom is free software, get the source code at https://flashrom.org