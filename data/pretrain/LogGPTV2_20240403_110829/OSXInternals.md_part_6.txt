Linux hosted on top of OSF's Mach implementation. The project led to a core system called osfmk.
The overall system was known as MkLinux. The first version of MkLinux was based on Linux 1.3. It
was released as MkLinux DR1 in early 1996. Subsequent releases moved to Linux 2.0 and beyond.
One of the releases was incorporated into Apple's Reference Release.
MkLinux used a single-server approach: The monolithic Linux kernel ran as a single Mach task. Mac
OS X uses a kernel base derived from osfmk and includes many MkLinux enhancements. However,
all kernel components in Mac OS X, including the BSD portions, reside in the same address space.
MachTen
Ten
The Mach product from Tenon Systems was introduced as an unobtrusive UNIX
solution for Mac OS: It ran as an application atop Apple's operating system. MachTen
was based on the Mach kernel with a BSD environment. It provided preemptive
multitasking for UNIX applications running within it, although the Mac OS execution
environment remained cooperative multitasking.
Although the marriage of Mach, BSD, and Macintosh in MachTen sounds similar to the
latter-day Mac OS X, there is a critical difference in design and philosophy. Mac OS X
was a continuation of NEXTSTEP technology in several ways. Apple provided legacy
compatibility and ease of transition at two primary levels: through APIs such as Carbon
and through the Classic virtualizer. In contrast, MachTen was a logical opposite: Mac OS
remained the first-class citizen, whereas UNIX ran in a virtual machine (UVM) that was
implemented within a standard Macintosh application. The UVM provided a preemptive
multitasking execution environment with a set of UNIX APIs (such as POSIX, including
the standard C library and POSIX threads), a BSD-style networking stack, file systems
such as UFS and FFS, RPC, NFS, and so on. MachTen also included an implementation
of the X Window System.
Although confined within a single application, MachTen consisted of various subsystems
similar to a full-fledged operating system. At the logically lowest level, an interface
layer talked to Mac OS. The Mach kernel resided above this layer, providing services
such as memory management, IPC, tasks, and threads. Other MachTen subsystems that
directly talked to the Mac OS interface layer included the window manager and the
networking stack's ARP layer.
1.3.5. Musical Names
Apple's operating system strategy after acquiring NeXT was two-pronged: It would keep improving
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 19 of 32
Mac OS for the consumer desktop market, and it would create a high-end operating system based on
NeXT technology. The new systemcalled Rhapsodywould mainly be targeted toward the server and
enterprise markets.
Besides chromatic aberrations such as Pink and Red, Apple had a string of musically inspired
codenames for its operating system projects. Copland and Gershwin were named after Aaron
Copland and George Gershwin, both American composers. Rhapsody in Blue is a famous work of
Gershwin.[18]
[18] George Gershwin's brother Ira actually came up with the title Rhapsody in Blue.
1.4. Strategies
The first release of an Apple operating system after Apple announced that it would purchase NeXT
was in late 1996 with version 7.6. This release represented the initial stage of Apple's new operating
system roadmap. It was the first system to be called "Mac OS." Apple's plan was to release full
stand-alone installations once a year, with updates in between. Many Power Macintosh and
PowerBook models that were not supported by Mac OS 7.6 were supported by the 7.6.1 incremental
update. The system originally slated to be version 7.7 would eventually become Mac OS 8.
Mac OS 7.6 required a compatible computer that was 32-bit clean, with at least a 68030 processor. It
offered performance enhancements in several areas such as virtual memory, memory management,
PowerPC Resource Manager routines, system startup, and the File Manager's caching scheme. It also
integrated key Apple technologies such as Cyberdog, OpenDoc, Open Transport, and QuickTime.
Two phenomena were sweeping the computer world at that time: the Internet and Microsoft
Windows 95. Apple emphasized compatibility of Mac OS 7.6 with Windows 95 and highlighted the
system's Internet prowess. Mac OS 7.6 included built-in support for TCP/IP, PPP, and Apple Remote
Access (ARA). Its integrated Cyberdog technology could be used to incorporate Internet features
into documents that used "Live Objects." For example, live web links and email addresses could
reside on the Desktop and could be activated from the Finder.
1.4.1. Mac OS 8 and 9
As we saw earlier, Copland and Pink were potential candidates for Mac OS 8 at one time or another.
Similarly, Gershwin was a candidate for Mac OS 9. Over the years, some important features that
were either created or improved for Copland were added to Mac OS 8 and 9, as was originally
intended. The following are examples of such features:
The Mac OS Extended file system (HFS Plus), which was introduced with Mac OS 8.1
A search engine that could search on local drives, network servers, and the Internet (released
as Sherlock)
The Copland API, which gradually evolved into Carbon
The Platinum-look user interface
Multiple users, with support for per-user preferences
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 20 of 32
Mac OS 8 had a multithreaded Finder that allowed several file-oriented operations simultaneously.
Other notable features included the following:
Contextual menus activated by a control-click
Spring-loaded folders[19]
[19] Spring-loaded folders are a feature of the Finder's user interface. If the user
pauses briefly while dragging an item onto a folder icon, a window springs open,
displaying the folder's contents. This allows the user to choose where to put the
item. Continuing to hold the item causes a subfolder to spring open, and so on.
Personal web hosting
Web browsers (Microsoft Internet Explorer and Netscape Navigator) bundled with the system
Macintosh Runtime for Java (MRJApple's implementation of the Java environment) as part of
the system
Enhancements to power management, USB, and FireWire
[20]
Mac OS 8.5 (Figure 17) was only for PowerPCs. The system's nanokernel was overhauled in Mac
OS 8.6 to integrate multitasking and multiprocessing. It included a preemption-safe memory
allocator. The multiprocessor (MP) API library could now run with virtual memory enabled,
although virtual memory was still optional.
[20] A term sometimes used to refer to a kernel that is even smaller than a microkernel.
Figure 17. Mac OS 8
[View full size image]
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 21 of 32
Nanokernel
System 7.1.2 was the first Apple operating system to run on the PowerPC, even though
much of the code was not PowerPC-native. A nanokernel was used to "drive" the
PowerPC. Executing in supervisor mode, the nanokernel acted as the hardware
abstraction layer. It exported low-level interfaces for interrupt management, exception
handling, memory management, and so on. Only the system software, and possibly
debuggers, could use the nanokernel interface.
When Mac OS 9 (Figure 18) was released in 1999, it was hailed by Apple as the "best Internet
[21]
operating system ever." It was the first Mac OS version that could be updated over the Internet. It
could also use the AppleTalk protocol over TCP/IP. Its useful security features included file
encryption and the Keychain mechanism for storing passwords securely.
[21] As stated by Steve Jobs during a special event introducing Mac OS 9 on October 5,
1999.
Figure 18. Mac OS 9
[View full size image]
An important component of Mac OS 9 was a mature installation of the Carbon APIs, which at the
time represented about 70% of the legacy Mac OS APIs. Carbon provided compatibility with Mac
OS 8.1 and later.
The last release of Mac OS 9 occurred in late 2001 as version 9.2.2. With the advent of Mac OS X,
this "old" Mac OS would eventually be referred to as Classic.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 22 of 32
1.4.2. Rhapsody
We saw that after acquiring NeXT, Apple based its next-generation operating system, Rhapsody
(Figure 19), on NeXT's OPENSTEP. Rhapsody was first demonstrated at the 1997 Worldwide
Developers Conference (WWDC). It consisted of the following primary components:
The kernel and related subsystems that were based on Mach and BSD
A Mac OScompatibility subsystem (the Blue Box)
An extended OpenStep API implementation (the Yellow Box)
A Java virtual machine
A Display PostScriptbased windowing system
A user interface that was similar to Mac OS but also had features from OPENSTEP
Figure 19. Rhapsody
[View full size image]
Apple had plans to port to Rhapsody most key Mac OS frameworks: QuickTime, QuickDraw 3D,
QuickDraw GX, ColorSync, and so on. Rhapsody was also to support numerous file systems such as
Apple Filing Protocol (AFP), FAT, HFS, HFS Plus, ISO9660, and UFS.
There were two developer releases of Rhapsody, dubbed DR1 and DR2. These were released for
both the PowerPC and x86 platforms.
1.4.2.1. Blue Box
Shortly after Rhapsody DR1 was released, Apple extended the PowerPC version with a Mac
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 23 of 32
OScompatibility environment called the Blue Box. Implemented by a Rhapsody application
(MacOS.app), the Blue Box was a virtual environment that appeared as a new Macintosh hardware
model. MacOS.app loaded a Macintosh ROM file from disk and created an environment within
which Mac OS ran mostly unchanged. Blue Box initially ran Mac OS 8.x, full-screen, with the
ability to switch between Rhapsody and Mac OS using the cmd-return key combination. It placed
certain restrictions on the applications that ran within it. For example, an application could neither
access the hardware directly nor use undocumented Mac OS APIs. The implementers' initial goal
was to achieve 90% to 115% of native Mac OS performance. Blue Box beta 1.0 used Open
Transportrather than BSD socketsfor networking. Support for newer versions of Mac OS, as well as
for running the Blue Box windowed, was added later. The Blue Box environment would be known
as the Classic environment in Mac OS X, provided by an application named Classic Startup.app.
[22]
[22] The application was called Classic.app in earlier versions of Mac OS X.
The Blue Box environment is a virtualization layernot an emulation layer. "Harmless" instructions
execute natively on the processor, whereas "harmful" instructionssuch as those that can affect the
hardwareare trapped and handled appropriately.
1.4.2.2. Yellow Box
Rhapsody's development platform was called the Yellow Box (Figure 110). Besides being hosted on
the Power Macintosh and x86 versions of Rhapsody, it was also available independently for
Microsoft Windows.
Figure 110. Yellow Box running on Microsoft Windows XP
[View full size image]
Yellow Box included most of OPENSTEP's integrated frameworks, which were implemented as
shared object libraries. These were augmented by a runtime and development environment. There
were three core object frameworks whose APIs were available in Objective-C and Java.
1. Foundation was a collection of base classes with APIs for allocating, deallocating, examining,
storing, notifying, and distributing objects.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 24 of 32
2. Application Kit was a set of APIs for creating user interfaces; managing and processing
events; and using services such as color and font management, printing, cut and paste, and text
manipulation.
3. Display PostScript was a set of APIs for drawing in PostScript, compositing images, and
performing other visual operations. It could be considered as a subset of Application Kit.
Yellow Box included NeXT's Project Builder integrated development environment and the Interface
Builder visual tool for creating graphical user interfaces. The Windows NT implementation of
Yellow Box provided a very similar environment through a combination of the following Apple-
provided Windows system services and applications:
 The Mach Emulation Daemon (the machd service)
 The Netname Server (the nmserver service)
 The Window Server (the WindowServer application)
 The Pasteboard Server (the pbs application)
Earlier implementations of the OpenStep API for platforms such as Solaris used a similar
architecture. Yellow Box evolved into the Mac OS X Cocoa APIs.
1.5. Toward Mac OS X
After Rhapsody's DR2 release, Apple would still alter its operating system strategy but would finally
be on its way toward achieving its goal of having a new system. During the 1998 Worldwide
Developers Conference, Adobe's Photoshop ran on what would be Mac OS X. However, the first
shipping release of Mac OS X would take another three years. Figure 111 shows an approximation
of the progression from Rhapsody toward Mac OS X.
Figure 111. An approximation of the Mac OS X timeline
[View full size image]
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 25 of 32
1.5.1. Mac OS X Server 1.x
As people were expecting a DR3 release of Rhapsody, Apple announced Mac OS X Server 1.0 in
March 1999. Essentially an improved version of Rhapsody, it was bundled with WebObjects, the
QuickTime streaming server, a collection of developer tools, the Apache web server, and facilities
for booting or administering over the network.
Apple also announced an initiative called Darwin: a fork of Rhapsody's developer release. Darwin
would become the open source core of Apple's systems.
Over the next three years, as updates would be released for the server product, development of the
desktop version would continue, with the server sharing many of the desktop improvements.
1.5.2. Mac OS X Developer Previews
There were four Developer Preview releases of Mac OS X, named DP1 through DP4. Substantial
improvements were made during these DP releases.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 26 of 32
1.5.2.1. DP1
An implementation of the Carbon API was added. Carbon represented an overhaul of the "classic"
Mac OS APIs, which were pruned, extended, or modified to run in the more modern Mac OS X
environment. Carbon was also meant to help Mac OS developers transition to Mac OS X. A Classic
application would require an installation of Mac OS 9 to run under Mac OS X, whereas Carbon
applications could be compiled to run as native applications under both Mac OS 9 and Mac OS X.
1.5.2.2. DP2
The Yellow Box evolved into Cocoa, originally alluding to the fact that besides Objective-C, the API
would be available in Java. A version of the Java Development Kit (JDK) was included, along with a
just-in-time (JIT) compiler. The Blue Box environment was provided via Classic.app (a newer
version of MacOS.app) that ran as a process called truBlueEnvironment. The Unix environment
was based on 4.4BSD. DP2 thus contained a multitude of APIs: BSD, Carbon, Classic, Cocoa, and
Java. There was widespread dissatisfaction with the existing user interface. The Aqua user interface
had not been introduced yet, although there were rumors that Apple was keeping the "real" user
secret.[23]
interface a
[23]
Apple had referred to the Mac OS X user interface as "Advanced Mac OS Look and
Feel."
Carbon is sometimes perceived as "the old" API. Although Carbon indeed contains modernized
versions of many old APIs, it also provides functionality that may not be available through other
APIs. Parts of Carbon are complementary to "new" APIs such as Cocoa. Nevertheless, Apple has
been adding more functionality to Cocoa so that dependencies on Carbon can be eventually
eliminated. For example, before Mac OS X 10.4, much of the QuickTime functionality was available
only through Carbon. In Mac OS X 10.4, Apple introduced the QTKit Cocoa framework, which
reduces or eliminates Carbon dependencies for QuickTime.
1.5.2.3. DP3
The Aqua user interface was first demonstrated during the San Francisco Macworld Expo in January
2000. Mac OS X DP3 included Aqua along with its distinctive elements: "water-like" elements,
pinstripes, pulsating default buttons, "traffic-light" window buttons, drop shadows, transparency,
animations, sheets, and so on. The DP3 Finder was Aqua-based as well. The Dock was introduced
with support for photorealistic icons that were dynamically scalable up to 128x128 pixels.
1.5.2.4. DP4
The Finder was renamed the Desktop in DP4. The System Preferences application
(Preferences.appthe precursor to System Preferences.app) made its first appearance in Mac OS
X, allowing the user to view and set a multitude of system preferences such as Classic, ColorSync,
Date & Time, Energy Saver, Internet, Keyboard, Login Items, Monitors, Mouse, Network,
Password, and others. Prior to DP4, the Finder and the Dock were implemented within the same
application. The Dock was an independent application (Dock.app) in DP4. It was divided into two
sections: the left side for applications and the right side for the trash can, files, folders, and
minimized windows. Other notable components of DP4 included an integrated development
environment and OpenGL.
The Dock's visual indication of a running application underwent several changes. In DP3, an
application's Dock icon had a bottom edge a few pixels high that was color-coded to indicate
whether the application was running. This was replaced by an ellipsis in DP4 and was followed by a
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 27 of 32
triangle in subsequent Mac OS X versions. DP4 also introduced the smoke cloud animation that
ensues after an item is dragged off the Dock.
1.5.3. Mac OS X Public Beta
Apple released a beta version of Mac OS X (Figure 112) at the Apple Expo in Paris on September
13, 2000. Essentially a publicly available preview release for evaluation and development purposes,
the Mac OS X Public Beta was sold for $29.95 at the Apple Store. It was available in English,
French, and German. The software's packaging contained a message from Apple to the beta testers:
"You are holding the future of the Macintosh in your hands." Apple also created a Mac OS X tab on
its web site that contained information on Mac OS X, including updates on third-party applications,
tips and tricks, and technical support.
Figure 112. Mac OS X Public Beta
[View full size image]
Although the beta release was missing important features and ostensibly lacked in stability and
performance, it demonstrated several important Apple technologies at work, particularly to those
who had not been following the DP releases. The beta's key features were the following:
The Darwin core with its xnu kernel that offered "true" memory protection, preemptive
multitasking, and symmetric multiprocessing
The PDF-based Quartz 2D drawing engine
OpenGL support
The Aqua interface and the Dock
Apple's new mail client, with support for IMAP and POP
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007