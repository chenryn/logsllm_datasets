    Web Technologies Overview
Key Web Components
Web technologies in Mac OS X Server consist of several key components, which 
provide a flexible and scalable server environment.
Apache Web Server
Apache is an open-source HTTP web server that administrators can configure with the 
Server Admin application. 
Apache has a modular design, and the set of modules enabled by default is adequate 
for most uses. Server Admin can control a few optional modules. Experienced Apache 
users can add or remove modules and modify the server code. For information about 
modules, see “Apache Modules” on page 61.
Apache version 1.3 is installed in Mac OS X Server. Apache version 2 is provided with 
the server software for evaluation purposes; it is located in /opt/apache2/.
WebDAV
Web-based Distributed Authoring and Versioning (WebDAV) is particularly useful for 
updating content on a website. Users who have WebDAV access to the server can open 
files, make changes or additions, and save those revisions.
You can also use the realms capability of WebDAV to control access to all or part of a 
website’s content.
CGI Support
The Common Gateway Interface (CGI) provides a means of interaction between the 
server and clients. For example, CGI scripts allow users to place an order for a product 
offered on a website or submit responses to information requests. 
You can write CGI scripts in any of several scripting languages, including Perl and 
Python. The folder /Library/WebServer/CGI-Executables is the default location for CGI 
scripts.
SSL Support
Web service includes support for Secure Sockets Layer (SSL), a protocol that encrypts 
information being transferred between the client and server. SSL works in conjunction 
with a digital certificate that provides a certified identity for the server by establishing a 
secure, encrypted exchange of information. 
Dynamic Content With Server-Side Includes (SSI)
Server-side includes provide a method for using the same content on multiple pages in 
a site. They also can tell the server to run a script or insert specific data into a page. This 
feature makes updating content much easier, because you only revise information in 
one place and the SSI command displays that revised information on many pages.
 LL2350.book  Page 8  Friday, August 22, 2003  2:32 PM
Chapter 1    Web Technologies Overview
9
Front-End Cache
The web server includes a high-performance cache that increases performance for 
websites that serve static pages. The static content stays in the cache once used, so the 
server can quickly retrieve this content when it is requested again.
Before You Begin
This section provides information you need to know before you set up your web server 
for the first time. You should read this section even if you are an experienced web 
administrator, as some features and behaviors may be different from what you expect.
Configuring Your Web Server
You can use Server Admin to set up and configure most features of your web server. If 
you are an experienced Apache administrator and need to work with features of the 
Apache web server that aren’t included in Server Admin, you can modify the 
appropriate configuration files. However, Apple does not provide technical support for 
modifying Apache configuration files. If you choose to modify a file, be sure to make a 
backup copy first. Then you can revert to the copy should you have problems.
For more information about Apache modules, see the Apache Software Foundation 
website at http://www.apache.org.
Providing Secure Transactions
If you want to provide secure transactions on your server, you should set up Secure 
Sockets Layer (SSL) protection. SSL lets you send encrypted, authenticated information 
across the Internet. If you want to allow credit card transactions through your website, 
for example, you can use SSL to protect the information that’s passed to and from
your site.
For instructions on how to set up secure transactions, see Chapter 5, “Secure Sockets 
Layer (SSL),” on page 45.
Setting Up Websites
Before you can host a website, you must:
• Register your domain name with a domain name authority
• Create a folder for your website on the server
• Create a default page in the folder for users to see when they connect
• Verify that DNS is properly configured if you want clients to access your website
by name 
When you are ready to publish, or enable, your site, you can do this using Server 
Admin. The Sites pane in the Settings window lets you add a new site and select a 
variety of settings for each site you host.
See Chapter 3, “Managing Websites,” on page 23 for more information.
 LL2350.book  Page 9  Friday, August 22, 2003  2:32 PM
10
Chapter 1    Web Technologies Overview
Hosting More Than One Website
You can host more than one website simultaneously on your web server. Depending 
on how you configure your sites, they may share the same domain name, IP address, or 
port. The unique combination of domain name, IP address, and port identifies each 
separate site. Your domain names must be registered with a domain name authority 
such as InterNIC. Otherwise, the website associated with the domain won’t be visible 
on the Internet. (There is a fee for each additional name you register.)
If you configure websites using multiple domain names and one IP address, older 
browsers that do not support HTTP 1.1 or later (that don’t include the “Host” request 
header), will not be able to access your sites. This is an issue only with software 
released prior to 1997 and does not affect modern browsers. If you think your users will 
be using very old browser software, you’ll need to configure your sites with one 
domain name per IP address.
Understanding WebDAV
If you use WebDAV to provide live authoring on your website, you should create realms 
and set access privileges for users. Each site you host can be divided into a number of 
realms, each with its own set of users and groups that have either browsing or 
authoring privileges.
Defining Realms
When you define a realm, which is typically a folder (or directory), the access privileges 
you set for the realm apply to all the contents of that directory. If a new realm is 
defined for one of the folders within the existing realm, only the new realm privileges 
apply to that folder and its contents. For information about creating realms and setting 
access privileges, see “Setting Access for WebDAV-Enabled Sites” on page 31.
Setting WebDAV Privileges
The Apache process running on the server needs to have access to the website’s files 
and folders. To provide this access, Mac OS X Server installs a user named “www” and a 
group named “www” in the server’s Users & Groups List. The Apache processes that 
serve webpages run as the www user and as members of the www group. You need to 
give the www group read access to files within websites so that the server can transfer 
the files to browsers when users connect to the sites. If you’re using WebDAV, the www 
user and www group both need write access to the files and folders in the websites. In 
addition, the www user and group need write access to the /var/run/davlocks directory.
Understanding WebDAV Security
WebDAV lets users update files in a website while the site is running. When WebDAV is 
enabled, the web server must have write access to the files and folders within the site 
users are updating. This has significant security implications when other sites are 
running on the server, because individuals responsible for one site may be able to 
modify other sites.
 LL2350.book  Page 10  Friday, August 22, 2003  2:32 PM
Chapter 1    Web Technologies Overview
11
You can avoid this problem by carefully setting access privileges for the site files using 
the Sharing module of the Workgroup Manager application. Mac OS X Server uses a 
predefined group www, which contains the Apache processes. You need to give the 
www group Read & Write access to files within the website. You also need to assign 
these files Read & Write access by the website administrator (Owner) and No Access to 
Everyone.
If you are concerned about website security, you may choose to leave WebDAV 
disabled and use Apple file service or FTP service to modify the contents of a website 
instead.
Understanding Multipurpose Internet Mail Extension
Multipurpose Internet Mail Extension (MIME) is an Internet standard for specifying what 
happens when a web browser requests a file with certain characteristics. You can 
choose the response you want the web server to make based on the file’s suffix. Your 
choices will depend partly on what modules you have installed on your web server. 
Each combination of a file suffix and its associated response is called a MIME type 
mapping.
MIME Suffixes
A suffix describes the type of data in a file. Here are some examples:
• txt for text files
• cgi for Common Gateway Interface files
• gif for GIF (graphics) files
• php for PHP:  Hypertext Preprocessor (embedded HTML scripts) used for
WebMail, and so on
• tiff for TIFF (graphics) files
Mac OS X Server includes a default set of MIME type suffixes. This set includes all the 
suffixes in the mime.types file distributed with Apache, with a few additions. If a suffix 
you need is not listed, or does not have the behavior you want, use Server Admin to 
add the suffix to the set or to change its behavior.
Note:  Do not add or change MIME suffixes by editing configuration files.
Web Server Responses (Content Handlers)
When a file is requested, the web server handles the file using the response specified 
for the file’s suffix. Responses, also known as content handlers, can be either an action 
or a MIME type. Possible responses include:
• Return file as MIME type (you enter the mapping you want to return)
• Send-as-is (send the file exactly as it exists)
• Cgi-script (run a CGI script you designate)
• Imap-file (generate an IMAP mail message)
• Mac-binary (download a compressed file in MacBinary format)
 LL2350.book  Page 11  Friday, August 22, 2003  2:32 PM
12
Chapter 1    Web Technologies Overview
MIME type mappings are divided into two subfields separated by a forward slash, such 
as text/plain. Mac OS X Server includes a list of default MIME type mappings. You can 
edit these and add others.
When you specify a MIME type as a response, the server identifies the type of data 
requested and sends the response you specify. For example, if the browser requests a 
file with the suffix “jpg,” and its associated MIME type mapping is image/jpeg, the 
server knows it needs to send an image file and that its format is JPEG. The server 
doesn’t have to do anything except serve the data requested.
Actions are handled differently. If you’ve mapped an action to a suffix, your server runs 
a program or script, and the result is served to the requesting browser. For example, if a 
browser requests a file with the suffix “cgi,” and its associated response is the action 
cgi-script, your server runs the script and returns the resulting data to the requesting 
browser. 
 LL2350.book  Page 12  Friday, August 22, 2003  2:32 PM
2
13
2 Managing Web Technologies
Use Server Admin to set up web technologies initially 
and to manage web settings and components.
If you are familiar with web servers and their content, you can use these summary 
steps to get your web server started. If you’d like more detailed instructions for these 
tasks, see the similar topics in “Using Server Admin to Manage Your Web Server” on 
page 15 and Chapter 3, “Managing Websites,” on page 23.
Setting Up Your Web Server for the First Time
Step 1:  Set up the Documents folder
When your server software is installed, a folder named Documents is set up 
automatically in the WebServer directory. Put any items you want to make available 
through a website in the Documents folder. You can create folders within the 
Documents folder to organize the information. The folder is located in the directory
/Library/WebServer/Documents.
In addition, each registered user has a Sites folder in the user’s own home directory. 
Any graphics or HTML pages stored in the user’s Sites folder will be served from the 
URL server.example.com/~username/.
Step 2:  Create a default page
Whenever users connect to your website, they see the default page. When you first 
install the software, the file index.html in the Documents folder is the default page. 
You’ll need to replace this file with the first page of your website and name it 
index.html. If you want to call the file something else, make sure you add that name to 
the list of default index files and move its name to the top of the list in the General 
pane of the site settings window of Server Admin. See “Setting the Default Page for a 
Website” on page 25 for instructions on specifying default index file names.
For more information about all website settings, see Chapter 3, “Managing Websites,” 
on page 23.
 LL2350.book  Page 13  Friday, August 22, 2003  2:32 PM
14
Chapter 2    Managing Web Technologies
Step 3:  Assign privileges for your website
The Apache processes that serve webpages must have read access to the files, and 
read/execute access to the folders. (In the case of folders, execute access means the 
ability to read the names of files and folders contained in that particular folder.) Those 
apache processes run as user www—a special user created specifically for Apache 
when Mac OS X Server is installed. The user www is a member of the group www. So 
for the Apache process to access the content of the website, the files and folders need 
to be readable by user www.
Consequently, you need to give the www group at least read-only access to files within 
your website so that it can transfer those files to browsers when users connect to the 
site. You can do this by:
• Making the files and folders readable by everyone regardless of their user or group 
ownership
• Making www the owner of files and folders and making sure that the files and folders 
are readable by the owner
• Making the group www the owner of the files and folders and making sure that the 
files and folders are readable by the group
For information about assigning privileges, see the file services administration guide.
Step 4:  Configure your web server
The default configuration works for most web servers that host a single website, but 
you can configure all the basic features of web service and websites using Server 
Admin. For more advanced configuration options, see Chapter 6, “Working With Open-
Source Applications,” on page 49.
To host user websites, you must configure at least one website. 
To configure a site:
1 Open Server Admin.
2 Click Web in the list for the server you want.
3 Click Settings in the button bar.
4 In the Sites pane, click the Enabled button for the site you want to turn on.
5 Double-click the site name and choose the configuration options you want for the site.
For information about these settings, see “Using Server Admin to Manage Your Web 
Server” on page 15 and Chapter 3, “Managing Websites,” on page 23.
 LL2350.book  Page 14  Friday, August 22, 2003  2:32 PM
Chapter 2    Managing Web Technologies
15
Step 5:  Start web service
1 Open Server Admin and click Web in the list below the server name. 
2 Click Start Service in the toolbar.
Important:  Always use Server Admin to start and stop the web server. You can start the 
web server from the command line, but Server Admin won’t show the change in status 
for several seconds. Server Admin is the preferred method to start and stop the web 
server and modify web server settings.
Step 6:  Connect to your website
To make sure the website is working properly, open your browser and try to connect to 
your website over the Internet. If your site isn’t working correctly, see Chapter 8, 
“Solving Problems,” on page 65. 
Using Server Admin to Manage Your Web Server
The Server Admin application lets you set and modify most options for your web 
server.
To access the web settings window:
1 In Server Admin, click Web in the list for the server you want.
2 Click Settings in the button bar.
Note:  Click one of the five buttons at the top to see the settings in that pane.
3 Make the changes you want in settings.
4 Click Save.
The server restarts when you save your changes.
Starting or Stopping Web Service
You start and stop web service from the Server Admin application.
To start or stop web service:
1 In Server Admin, click Web in the list for the server you want.
2 Click Start Service or Stop Service in the toolbar.
If you stop web service, users connected to any website hosted on your server are 
disconnected immediately.
Important:  Always use Server Admin to start and stop the web server. You can start the 
web server from the command line, but Server Admin won’t show the change in status 
for several seconds. Server Admin is the preferred method to start and stop the web 
server and modify web server settings.
 LL2350.book  Page 15  Friday, August 22, 2003  2:32 PM
16
Chapter 2    Managing Web Technologies
Starting Web Service Automatically
Web service is set to start automatically (if it was running at shutdown) when the 
server starts up. This will ensure that your websites are available if there’s been a power 
failure or the server shuts down for any reason.
When you start web service in the Server Admin toolbar, the service starts 
automatically each time the server restarts. If you turn off web service and then restart 
the server, you must turn web service on again.
Modifying MIME Mappings and Content Handlers
Multipurpose Internet Mail Extension (MIME) is an Internet standard for describing the 
contents of a file. The MIME Types pane lets you set up how your web server responds 
when a browser requests certain file types. For more information about MIME types 
and MIME type mappings, see “Understanding Multipurpose Internet Mail Extension” 
on page 11.
Content handlers are Java programs used to manage different MIME type-subtype 
combinations, such as text/plain and text/richtext.
The server includes the MIME type in its response to a browser to describe the 
information being sent. The browser can then use its list of MIME preferences to 
determine how to handle the information.
The server’s default MIME type is text/html, which specifies that a file contains HTML 
text.
The web server is set up to handle the most common MIME types and content 
handlers. You can add, edit, or delete MIME type and content handler mappings. In the 
Server Admin application, these files are displayed in two lists:   MIME Types and 
Content Handlers. You can edit items in each list and add or delete items in either list.
To add or modify a MIME type or content handler mapping:
1 In Server Admin, click Web in the list for the server you want.
2 Click Settings in the button bar.
3 In the MIME Types pane, click the Add button below the appropriate list to add a new 
mapping, or select a mapping and click the Delete or Edit button. (If you choose 
Delete, you’ve finished.)
 LL2350.book  Page 16  Friday, August 22, 2003  2:32 PM
Chapter 2    Managing Web Technologies
17