anomaly energy from temporal network data for each
data signal observed in the network.
3. Network-wide Data Fusion - Using knowledge of the
network topology structure and the estimated anomaly
energy for each link, our methodology classiﬁes anoma-
lous behavior at each router.
1We thank Fernando Silveira from Technicolor Research for
supplying us with this dataset.
2We thank Mark Crovella for supplying us with this dataset.
A visual description of the BasisDetect framework can be
seen in Figure 1.
5. BASIS DECOMPOSITION OF NET-
WORK DATA
To begin, we establish an anomaly detection methodology
on a single observed time-series signal (denoted y). To de-
tect anomalies on this signal, consider decomposing the sig-
nal into its anomalous and non-anomalous components. In
contrast to previous methods, like PCA [1], we will not con-
sider other concurrently observed signals as potentially non-
anomalous behavior. Instead, we will decompose this signal
by specifying characteristics that represent both anomalous
and non-anomalous behavior for that link with respect to an
established set of signal components. This avoids the draw-
back of PCA-related methods where anomalies pollute the
representations of non-anomalous behavior.
In order to perform this decomposition, we introduce the
idea of a signal dictionary, Φ, a matrix of signal components
that will represent our observed data. The signal dictio-
nary considered here will contain both anomalous and non-
anomalous signal components,
Φ =(cid:2) Φnon−anomaly Φanomaly (cid:3)
(1)
While these anomalous dictionary components will not be
known a priori, to begin we will assume they are known
(with later discussion in Section 5.1 describing methodolo-
gies to extract these signals). We state that the observed
traﬃc signal can be approximated by a linear combination
of dictionary components. Therefore, the observed traﬃc
signal can be stated as,
y ≈ Φx
= (cid:2) Φnon−anomaly Φanomaly (cid:3)(cid:20) xnon−anomaly
xanomaly
(2)
(cid:21)
Where the coeﬃcient xi ∈ x is the contribution of dictionary
element φi ∈ Φ to the observed signal y.
The amount of anomalous energy in the signal as a func-
tion of time is deﬁned as the anomaly feature vector,
yanomaly = Φanomalyxanomaly
(3)
It should be intuitive that if more coeﬃcient energy is
placed in the anomaly dictionary, then the more likely
an anomaly has occurred.
If there is little energy in the
anomaly domain, then the non-anomalous, standard oper-
ating environment signal components are accurately approx-
imating the signal, and therefore an anomaly is unlikely to
have occurred. To discover this level of anomalous energy for
each signal, it is necessary to resolve the unknown coeﬃcient
vector x.
Given a dictionary of signal components Φ and the ob-
served signal y, we must determine which components are
used to represent our observed ﬂow record, speciﬁed by the
coeﬃcients in the vector x (such that y ≈ Φx).
In addi-
tion to representing the signal, we wish to also restrict the
coeﬃcient vector x to be sparse. This sparsity constraint
will require as few dictionary elements as possible be used
to represent the observed signal.
454Figure 1: The BasisDetect Framework
The motivation for sparsity in the signal comes from two
directions. First, as noted in [6], anomalies are sparse in a
signal. Similar motivation comes from studies of the under-
lying causes of faults in networks [22, 23]. Motivation for
sparsity of the normal traﬃc comes from simple considera-
tion of Fourier analysis of traﬃc. Figure 2 shows a simple
example of the excellent degree of approximation to traﬃc
we can obtain using only a very small number of Fourier coef-
ﬁcients corresponding to daily periods. The ﬁgure shows the
important components of the power-spectrum of one week
of GEANT data, clearly highlighting the importance of the
daily cycles. The approximation curve in Figure 2-(right) is
generated using only the largest 30 terms from the Discrete
Cosine Transform (DCT, which contains around 10,080 co-
eﬃcients in total). The remaining coeﬃcients of the power-
spectrum (including those not shown in the ﬁgure) contain
little power, so modeling the few critical components will
enable us to obtain a reasonable initial model for the data.
While standard inverse problem techniques (linear least
squares, etc.) could be used to resolve the coeﬃcient vec-
tor, these standard techniques do not require the resulting
coeﬃcient vector to be sparse. This sparsity constraint is
considered in the theory of Basis Pursuit [16], which deﬁnes
the sparse optimization problem,
min kxk0
such that y = Φx
(4)
Where we try to ﬁnd the set of coeﬃcients x such that the
observed vector is reconstructed using the fewest number of
dictionary components possible (where kxk0 = # of non-
zero components in x).
Unfortunately, solving the optimization problem in Equa-
tion 4 is combinatorial and therefore computationally in-
tractable for signals of any practical size.
In [16] it was
shown that this optimization is equivalent to the ℓ1 relax-
ation,
min kxk1
such that y = Φx
(5)
(Where kxk1 =PN
i=1 |xi|.) As a result of this relaxation,
the problem can be restated as a simple linear optimization
problem.
While this may be the best approach when we are try-
ing to exactly reconstruct the observed signal, however, in
the case of our anomaly detection problem, we are not in-
terested in reconstructing every perturbation of the signal.
The problem becomes how to approximate the general char-
acteristics of the current system behavior. Considering the
case where we wish to approximate the observed signal us-
ing relatively few elements of a signal dictionary, Orthogonal
Matching Pursuit (OMP) [17] will oﬀer a simple greedy ap-
proximation of the dictionary coeﬃcients.
The Orthogonal Matching Pursuit algorithm starts with
component dictionary (Φ), and a null estimated dictionary
current approximation) is calculated. This residual can be
considered the signal that is orthogonal to the current esti-
an all-zeros signal approximation (by = [0, 0, ..., 0]), the signal
space (bΦ = []). At each iteration of the OMP algorithm
the residual signal (r = y −by, the observed data minus the
mated dictionary space, bΦ. The best dictionary component
(φ ∈ Φ and φ /∈ bΦ) is found. This component is then added
to the current estimated dictionary space, bΦ. Finally, the
rent dictionary space, by = bΦx (for some vector x). The
signal, φ, not currently in the estimated dictionary space
best signal approximation is found given the speciﬁed cur-
process is repeated until either a speciﬁed number of com-
ponents are found or the error of the signal approximation
is below some threshold. In addition to the non-exact ap-
proximation of the signal, due to the greedy approach, the
algorithm is signiﬁcantly faster than the standard Basis Pur-
suit algorithm and oﬀers considerable memory savings.
Using the orthogonal matching pursuit (OMP) algorithm
in conjunction with a signal dictionary derived from the Dis-
crete Cosine Transform (DCT), consider the decomposition
of a vector of packet counts in Figure 2-(Left). The perfor-
mance of describing the ﬂow signal with this reconstructed
signal is shown in Figure 3 for 24 hours of observed of packet
counts on the GEANT network. Note that by representing
only the gross characteristics of the signal, the anomalous
parts of the signal are becoming apparent in the residual
between the observed data and the approximated signal.
5.1 Anomalous Dictionary Construction from
Labeled Set
While the Orthogonal Matching Pursuit methodology will
ﬁnd the coeﬃcient vector x, it requires knowledge of the
4554
x 10
s
t
n
u
o
C
t
e
k
c
a
P
7
6
5
4
3
2
1
0
6
x 10
3.5
3
2.5
2
1.5
1
0.5
y
g
r
e
n
E
2000
4000
6000
8000
10000
Time Bin
0
0
5
10
15
20
25
Frequency (cycles per week)
4
x 10
s
t
n
u
o
C
t
e
k
c
a
P
7
6
5
4
3
2
1
0
2000
4000
6000
8000
10000
Time Bin
Figure 2: Fourier analysis of GEANT data (Left) - Observed one week of packet counts across a single link in
the GEANT network. (Center) - Important region of Fourier power spectrum found using a Discrete Cosine
Transformation (DCT). (Right) - Signal approximation using 30 largest DCT coeﬃcients.
Observed Signal
Expert Found Anomalies
Approximated Signal
4
x 10
6
5
4
3
2
1
s
t
n
u
o
C
t
e
k
c
a
P
0
0
500
1000
1500
Time Bin
Figure 3: Approximation of 24 hours of GEANT
data - Comparison of the observed signal with an
approximation using the 30 largest Discrete Cosine
Transform (DCT) coeﬃcients. Expert annotated
anomalies are marked with ’x’.
anomalous signal dictionary Φanomaly, which is not known
a priori. Through examining Figure 3, one can see that
while the rough approximation from the matching pursuit
algorithm is ﬁtting most of the signal, the anomalous por-
tions of the signal are not well represented by this simple
approximation.
If we knew for a subset of network data
where anomalies were temporally located and had simple
approximations of the signal based on expected signal be-
havior, we could extract examples of anomalous signal char-
acteristics. Using this intuition and a small training set
of labeled anomalies, we can estimated the anomaly dictio-
bΦanomaly (cid:3).
nary bΦanomaly and construct the complete signal dictionary
Φ =(cid:2) Φnon−anomaly
First, consider knowledge of the non-anomalous signal dic-
tionary (Φnon−anomaly). Given the Fourier decomposition
example from Figure 2, the most obvious non-anomalous
signal type to represent the network data would be a set of
sinusoids. This signal type can be created via a Discrete
Cosine Transformation (DCT). Second, consider local vari-
ation that may not be represented by the global sinusoidal
wave based representation of the Discrete Cosine Transform.
Due to the need to represent non-anomalous localized vari-
ation characteristics in the network data, we will also add
a discrete wavelet transform ﬁlter set to our non-anomalous
signal dictionary (with motivation discussed in Section 8.2
as to the exact type of wavelet decomposition considered).
Note that while the DCT/wavelet basis will be used as the
non-anomalous signal dictionary in this paper, the BasisDe-
tect framework is agnostic to the choice of non-anomalous
signals and can be designed to operate with any chosen ba-
sis. We leave discovery of the optimal set of non-anomalous
signal components as future work.
Given the constructed non-anomalous signal dictionary,
we ﬁnally look to determine the anomalous signal dictio-
nary Φanomaly. Consider a single time-series signal y with
known anomaly locations. In order to isolate anomalous sig-
using Orthogonal Matching Pursuit, the observed signal y,
and the non-anomalous signal dictionary Φnon−anomaly. By
nal characteristics, we ﬁrst obtain a signal approximation by
examining the residual signal r = by − y (the diﬀerence be-
tween the approximated signal and the observed signal), we
can see where the non-anomalous signal characteristics fail
at representing the observed network data. By windowing
the residual signal around areas of known anomalies, we can
extract anomalous signal characteristics from the training
set. A step-by-step description of this methodology can be
seen in Algorithm 1.
5.2 Anomaly Decomposition using Penalized
Basis Pursuit
In standard OMP all dictionary component signals are
weighted equally, therefore there is no preference towards
choosing one dictionary signal or another (with the excep-
tion of the contribution towards describing the original ob-
served signal). In our anomaly detection problem, speciﬁc
dictionary component signals may be more preferential than
others. Generally, we want to use an anomaly dictionary
signal component (and thereby classify that area of the ob-
served data as anomalous) only if that anomaly signal is the
sole dictionary component that can properly decompose that
area of the signal. Therefore, we want to penalize choosing
an anomaly dictionary element. This changes the OMP al-
gorithm to a modiﬁed Penalized Basis Pursuit approach by
choosing the next element in the signal dictionary φbi as,
456Algorithm 1 - Dictionary Construction Algorithm
Algorithm 2 - Penalized Basis Pursuit Algorithm
Given:
Given:
• Y = {y1, y2, ..., yN} - Training set of network time-
• y = observed N -length network data vector
series data
• I = {I1, I2, ..., IN } - Index of known anomalies in each
of the training set signals.
• Φ = (cid:2) Φnon−anomaly Φanomaly (cid:3) , the signal dictio-
nary matrix
• γ, penalty for representing the signal using an anoma-
• Φnon−anomaly, Non-anomalous signal dictionary
lous signal component.
• w, anomaly window size
• Ncoef , the speciﬁed number of coeﬃcients used to rep-
Main Body
• Set bΦanomaly = [], the estimated anomalous signal dic-
tionary
• For each network time-series signal, yi
Matching Pursuit [17] with respect to time-series
signal yi and signal dictionary Φnon−anomaly.
1. Obtain signal estimate byi by using Orthogonal
2. Find residual signal, ri = byi − yi.
3. For each anomaly in the current signal, j ∈ Ii
(a) Set
a new anomalous
vector
component
the
the known anomaly,
of
windowed
signal at
ri (j − w + 1)
...
to
the
residual
aj =
ri (j + w) (cid:3)
to anomalous
signal dictionary
(b) Add aj
(cid:2) ri (j − w)
bΦanomaly
• Return bΦanomaly
Return:
bi = arg max
i={1,2,...}
(|hφi, ri| − λi)
(6)
Where r = by − y the current residual signal with respect
to the current signal dictionary, and deﬁning the penalty
vector Λ = {λ1, λ2, ..., λX } (for a dictionary of X number of
signal components), such that
λi =(cid:26) γ if φi ∈ bΦanomaly
if φi /∈ bΦanomaly
0
(7)
For a large enough γ > 0, this prevents the algorithm from
over-representing the signal from the anomalous dictionary.
The full methodology is described in Algorithm 2.
Finally, using the Penalized Basis Pursuit methodology,
we obtain the anomaly feature vector for the observed signal
using the anomalous chosen dictionary signal components,
yanomaly = bΦanomalybxanomaly. While we expect that a ma-
jority of anomalies will be detected using the anomaly dic-
tionary representation, we also want to avoid the situation
where limited training set anomalies result in missing true
anomalies. To avoid missing anomalies, we also incorporate