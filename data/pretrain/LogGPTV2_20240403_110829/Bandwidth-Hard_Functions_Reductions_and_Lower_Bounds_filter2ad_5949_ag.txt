A.1
aATSample
Reminder of Lemma 5.6.
exists a constant C > 0 so that for m ≤ Cn
high probability:
Let i > n
2 and T = [i, i + (cid:96) − 1] be an interval of length (cid:96) = n
log n . Then there
log n , a graph generated by aATSample satisﬁes the following with
min
R,B(cid:48)⊆[i−1]:|R|≤m
(|B(cid:48)| cb + |ancestorsG−R−B(cid:48)(T )| cr) ≥
(cid:18)
(cid:18) n
(cid:19)
log n
(cid:19)
min
Ω
cb, Ω(n)cr
.
Proof of Lemma 5.6: Consider the metagraph Gk with n
depth robust. Let B be the set of nodes in G that have a blue pebble at some point, and let Bk be the set of
meta-nodes that contain some node in B. Then by depth-robustness, there exists a path of length at least
c1n/ log n − |Bk| in Gk.
Now, partition the second half of graph G into intervals of size (cid:96) = n/ log n: [i, i+(cid:96)−1]. Since parents([i, i+
(cid:96) − 1]) ∩ Mi (cid:54)= ∅, then pebbling the interval [i, i + (cid:96) − 1] requires pebbling at least c1n/ log n − m − |Bk|
and the middle log n/3 nodes of a meta-node must be pebbled
meta-nodes in Gk. Noting that m = O(cid:16) n
log n nodes and recall that Gk is (Ω(n/ log n), Ω(n/ log n))
(cid:17)
log n
for two meta-nodes that are connected in Gk, it follows that at least
be pebbled. Thus, the cost of pebbling [i, i + (cid:96) − 1] is at least min
Ω
3 = Ω(n) nodes must
2
nodes.
log n − |Bk|(cid:17) log n
(cid:16) c1n
(cid:16) n
(cid:17)
(cid:17)
cb, Ω(n)cr
log n
(cid:16)
A.2 DRSample
2 . Let
Reminder of Lemma 5.5.
T = [i, i + (cid:96) − 1] be an interval of length (cid:96) = O (nρ). Then a graph generated by DRSample satisﬁes the
following with high probability:
Suppose m = O (nρ) for some constant 0  n
min
R⊆[i−1]:|R|≤m
min
B(cid:48)⊆[i−1]
(|B(cid:48)| cb + |ancestorsG−R−B(cid:48)(T )| cr) ≥
(cid:16)
(cid:17)
min
Ω(nρ)cb, Ω(n1/2+ρ/2)cr
.
event far(j), which we deﬁne to be the event that |r(j)− r(k)| > b =(cid:112) n
Proof of Lemma 5.5: Let T = [i, i + (cid:96)] where (cid:96) = Ω(nρ) for some constant 1
2  (cid:96) + (j − i + 1)b]
≥ Pr [j − r(j) > (cid:96) + ((cid:96) + 1)b]
≥ Pr
j − r(j) >
(cid:114)
(cid:34)
(cid:35)
n(cid:96)
2
25
since j ≤ i + (cid:96) and b =(cid:112) n
16(cid:96) . Hence,
√
Pr [far(j)] ≥ log(j) − log
log(j)
− ρ
2
(cid:18) 1
≥ 1 −
n(cid:96)
(cid:19)(cid:18) log(n)
(cid:19)
log(n) − 1
2
− ρ
− o(1) = Ω(1).
2
≥ 1
2
Let X = (cid:80)i+(cid:96)
satisfy m  c(cid:96) for some constant c that depends on ρ. Picking (cid:96) to
4 , then with high probability, the number of ancestors of T in G − R − B(cid:48) is at most
(X − |R| − |B(cid:48)|)b ≥ (X − m − |B(cid:48)|)b
(cid:19)(cid:114) n
(cid:1)(cid:112) n
2 blue moves are required, or at least(cid:0) c(cid:96)
2 cb,(cid:0) c(cid:96)
the ancestors of T in G − R − B(cid:48). Hence, the cost is at least min(cid:0) c(cid:96)
(cid:17)
Thus to pebble T , either c(cid:96)
the cost is at least
(cid:18) c(cid:96)
(cid:16)
16(cid:96)
≥
4
4
4
.
min
Ω(nρ)cb, Ω(n1/2+ρ/2)cr
.
16(cid:96) red moves are required, to pebble
(cid:1). Since (cid:96) = Ω(nρ), then
(cid:1)(cid:112) n
16(cid:96) cr
We now give a stronger bound for DRSample when the cache has size O (nρ/ log n) for any 0  x and node i in meta-node y, there exists an edge from the last
third of meta-node x to node i with probability at least
1
6|y−x| log y .
Proof. Recall that for node i, DRSample creates an edge from i to parent node r(i) by ﬁrst sampling j from
[1,(cid:98)log i(cid:99)]. Then DRSample sets r(i) = i − k by randomly sampling k from (2j−1, 2j]. Thus, for nodes
i, j ∈ G with i > j, there exists an edge from node j to i with probability at least
2b|y−x| log i . Taking the
union bound over all b
3 nodes in the last third of meta-node x and observing that i  n
for some 0  0
so that for all m ≤ Cnρ/ log n, it follows that
(cid:107)
rbpeb
(G, m) ≥ min( ˜Ω(n)cb, ˜Ω(n2−ρ)cr)
with high probability.
Proof. Applying Lemma A.3 to each of the disjoint n
that (cid:96) = O (nρ), it follows from Theorem 5.2 that
(cid:96) intervals in the second half of graph G and observing
(cid:107)
rbpeb
(G, m) ≥ min( ˜Ω(n)cb, ˜Ω(n2−ρ)cr).
A.3 Argon2iA
We now consider the family of graphs generated by Argon2iA (Algorithm 4) [BDK15]. Notably, the same
underlying graph is also used in Balloon Hashing (Boneh et al.
[BCS16]) Let G be a graph generated by
Argon2i and Gb be the metagraph with n
b nodes, so that each meta-node in Gb represents b nodes in G.
Again, we connect two meta-nodes i  x and node i in meta-node y, there exists an edge from the last
third of meta-node x to node i with probability at least 1
6y .
Proof. Recall that for node i, Argon2i creates an edge from i to parent node i(cid:0)1 − k
(cid:1), where k ∈ [N ] is
picked uniformly at random. Thus, for nodes i, j ∈ G with i > j, there exists an edge from node j to i with
probability at least
N
(cid:21)
m
(cid:19)
(cid:18)
1
3
≤
x − 1 +
x − 1 +
(cid:19)
(cid:35)
(cid:18)
(cid:19)
1 − k
N
(cid:19)
(cid:18)
≤
(cid:18)
m ≤ ym
1
6
≥ k
N
1 − k
N
≥ y − x + 2
(cid:33)
(cid:32) y − x + 2
y
3
3
−
(cid:20)