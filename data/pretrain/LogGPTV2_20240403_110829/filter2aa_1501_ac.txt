  ships,	
  but	
  with	
  a	
  twist.	
  You	
  can	
  attach	
  PL/pgSQL	
code	
  to	
  be	
  executed	
  each	
  tic,	
  along	
  with	
  variables	
  to	
  track	
  values	
  during	
  the	
  script’s	
execution.	
When	
  your	
  script	
  is	
  executed	
  each	
  tic,	
  the	
  TIC.PL	
  script	
  logs	
  into	
  the	
  Schemaverse	
with	
  your	
  user	
  account	
  and	
  executes	
  the	
  contents	
  of	
  every	
  activated	
  fleet	
  script	
  you	
have.	
  Your	
  script	
  can	
  include	
  any	
  SQL	
  commands	
  you	
  can	
  think	
  of	
  and	
  act	
  upon	
  any	
ships	
  you	
  choose	
  –	
  not	
  just	
  the	
  ships	
  within	
  that	
  fleet.	
Using	
  scripts,	
  you	
  can	
  tell	
  your	
  ships	
  to	
  execute	
  the	
  Mine()	
  action	
  repeatedly	
  to	
  earn	
money,	
  Move()	
  commands	
  to	
  travel	
  to	
  other	
  planets,	
  as	
  well	
  as	
  Attack(),	
  Repair(),	
Convert_resource(),	
  and	
  any	
  other	
  SQL	
  you	
  can	
  think	
  of.	
Each	
  fleet	
  needs	
  three	
  things	
  in	
  order	
  to	
  be	
  active:	
  the	
  ENABLED	
  field	
  to	
  be	
  true	
  (or	
‘t’),	
  some	
  execution	
  time	
  purchased	
  (using	
  the	
  UPGRADE()	
  function),	
  and	
  some	
  valid	
PL/pgSQL	
  code	
  to	
  execute.	
  Here	
  are	
  examples	
  of	
  how	
  you	
  can	
  accomplish	
  this:	
INSERT	
  INTO	
  my_fleets	
  (name)	
  VALUES	
  (‘My	
  First	
  Script’);	
UPDATE	
  my_fleets	
  SET	
  script	
  =	
  ‘PERFORM	
  Mine(id,	
  1)	
  ON	
  my_ships;’	
  WHERE	
name	
  =	
  ‘My	
  First	
  Script’;	
SELECT	
  UPGRADE(id,	
  ‘FLEET_RUNTIME’,	
  1);	
UPDATE	
  my_fleets	
  SET	
  enabled	
  =	
  ‘t’	
  WHERE	
  name	
  =	
  ‘My	
  First	
  Script’;	
Keep	
  in	
  mind	
  that	
  upgrading	
  the	
  runtime	
  of	
  a	
  fleet	
  costs	
  10000000 per 1 new minute 
of time added. 	
Fleet	
  Programming	
  Tips	
• To	
  escape	
  quotes	
  when	
  updating	
  your	
  scripts,	
  use	
  two	
  single	
  quotes	
  in	
  your	
PL/pgSQL	
  (eg:	
  ‘’a	
  string’’)	
• Keep	
  your	
  scripts	
  organized	
  by	
  using	
  comments	
  within	
  them	
• Call	
  your	
  script	
  directly	
  to	
  test	
  it	
  for	
  runtime	
  errors.	
  All	
  Fleet	
  Scripts	
  can	
  be	
called	
  by	
  using	
  the	
  following	
  syntax:	
SELECT	
  FLEET_SCRIPT_#();	
Where	
  #	
  is	
  the	
  Fleet	
  ID	
  of	
  the	
  fleet	
  you	
  want	
  to	
  run.	
• Monitor	
  your	
  error	
  channel	
  to	
  see	
  if	
  fleets	
  are	
  running	
  each	
  tic	
  as	
  you	
  expect	
Page	
  12	
  of	
  42	
For	
  more	
  examples	
  of	
  scripts,	
  please	
  visit	
  the	
  wiki	
  at	
https://github.com/Abstrct/Schemaverse/wiki/Fleet-­‐Scripts	
Page	
  13	
  of	
  42	
Random	
  Details	
Planets	
Planets	
  can	
  run	
  out	
  of	
  fuel.	
  The	
  actual	
  amount	
  of	
  fuel	
  a	
  planet	
  has	
  remaining	
  is	
hidden	
  from	
  players	
  but	
  if	
  mining	
  keeps	
  failing,	
  you	
  should	
  take	
  that	
  as	
  a	
  hint.	
  Each	
tic	
  5000	
  planets	
  have	
  their	
  fuel	
  replenished.	
  If	
  a	
  planet	
  is	
  empty	
  during	
  the	
  current	
turn,	
  it	
  may	
  have	
  more	
  next	
  tic.	
If	
  you	
  conquer	
  a	
  planet,	
  you	
  can	
  name	
  it	
  with	
  an	
  UPDATE	
  statement	
  on	
  the	
  planets	
view.	
3	
  Really	
  Useful	
  Functions	
GET_PLAYER_ID(username);	
GET_PLAYER_NAME(player_id);	
Use	
  these	
  two	
  to	
  convert	
  back	
  and	
  forth	
  from	
  the	
  username	
  and	
  player	
  id.	
  This	
  is	
mostly	
  just	
  to	
  make	
  it	
  so	
  that	
  it	
  feels	
  like	
  you	
  are	
  actually	
  playing	
  against	
  other	
people,	
  rather	
  than	
  against	
  some	
  numbers.	
  Some	
  examples	
  of	
  its	
  use	
  include:	
SELECT	
  id,	
  get_player_id(username),	
  username,	
  get_player_username(id)	
  FROM	
my_player;	
SELECT	
  get_player_username(player_id)	
  FROM	
  ships_in_range;	
Finally,	
  you	
  will	
  need	
  to	
  take	
  note	
  of	
  the	
  function	
  called	
CONVERT_RESOURCE(StartResource,	
  Quantity).	
This	
  function	
  will	
  allow	
  you	
  to	
  sell	
  your	
  Reserve_Fuel	
  for	
  more	
  money	
  (or	
  the	
  other	
way	
  around)	
  to	
  help	
  build	
  up	
  your	
  forces.	
SELECT	
  convert_resource(‘FUEL’,500);	
SELECT	
  convert_resource(‘MONEY’,500);	
You	
  can	
  also	
  specify	
  the	
  starting	
  location	
  of	
  your	
  ships	
  during	
  an	
  insert	
  like	
  so:	
INSERT	
  INTO	
  my_ships(name,	
  location_x,	
  location_y)	
VALUES(“My	
  Strategically	
  Placed	
  Ship”,	
  100,	
  100);	
There	
  is	
  a	
  catch	
  though!	
  You	
  can	
  only	
  create	
  a	
  ship	
  where	
  one	
  of	
  the	
  following	
  is	
true	
• location_x	
  and	
  location_y	
  is	
  between	
  -­‐3000	
  and	
  3000	
• location_x	
  and	
  location_y	
  are	
  the	
  same	
  coordinates	
  as	
  a	
  planet	
  you	
  are	
  the	
current	
  conqueror	
  of	
Page	
  14	
  of	
  42	
Quick	
  Start	
  Steps	
These	
  are	
  the	
  first	
  five	
  queries	
  you	
  should	
  run	
  to	
  start	
  making	
  money	
  in	
  the	
  game.	
Step	
  1	
  -­	
  Create	
  a	
  ship	
  at	
  the	
  centre	
  of	
  the	
  universe	
  (where	
  planet	
  1	
  is)	
  INSERT	
  INTO	
  my_ships(name)	
  values	
  ('My	
  First	
  Ship');	
Step	
  2	
  -­	
  Upgrade	
  the	
  ships	
  mining	
  ability	
  SELECT	
  UPGRADE(id,	
  'PROSPECTING',	
  200)	
  from	
  my_ships;	
Step	
  3	
  -­	
  Create	
  a	
  fleet	
  that	
  will	
  run	
  while	
  you're	
  not	
  paying	
  attention	
  INSERT	
  INTO	
  my_fleets(name)	
  VALUES('My	
  First	
  Fleet');	
Step	
  4	
  -­	
  Update	
  the	
  fleet	
  to	
  do	
  something	
UPDATE	
  my_fleets	
SET	
script_declarations=	
  'miners	
  RECORD;	
  ',	
script='	
FOR	
  miners	
  IN	
  SELECT	
  id	
  FROM	
  my_ships	
LOOP	
-­-­Since	
  I	
  know	
  that	
  1	
  is	
  the	
  center	
  planet	
  I	
  am	
  just	
  hardcoding	
  that	
  in	
PERFORM	
  MINE(miners.id,	
  1);	
END	
  LOOP;	
',	
enabled='t'	
WHERE	
name	
  =	
  'My	
  First	
  Fleet'	
Step	
  5	
  -­	
  Buy	
  processing	
  time	
  for	
  the	
  fleet	
  to	
  use	
  every	
  tic.	
  This	
  will	
  buy	
  one	
minute	
  (it's	
  expensive!)	
  SELECT	
  UPGRADE(id,	
  'FLEET_RUNTIME',	
  1),	
  id,	
  name,	
  enabled	
FROM	
my_fleets;	
Whats	
  next?	
Convert	
  Fuel	
  -­‐	
  As	
  you	
  mine,	
  this	
  increases	
  the	
  value	
  in	
  your	
  my_player.fuel_reserve	
column.	
  You	
  can	
  use	
  this	
  fuel	
  to	
  fly	
  around	
  but	
  you	
  can	
  also	
  convert	
  fuel	
  to	
  money	
  to	
buy	
  all	
  sorts	
  of	
  great	
  things	
  like	
  new	
  ships,	
  upgrades	
  and	
  fleet	
  runtime.	
This	
  is	
  a	
  statement	
  that	
  would	
  convert	
  all	
  your	
  fuel	
  to	
  money:	
Page	
  15	
  of	
  42	
SELECT	
  convert_resource('FUEL',	
  fuel_reserve)	
  from	
  my_player;	
Buy	
  more	
  ships	
  (Step	
  1)	
  Upgrade	
  more	
  ships	
  (Step	
  2)	
  Change	
  on	
  your	
  fleet	
  script	
  so	
that	
  it	
  mines,	
  repairs,	
  attacks,	
  creates,	
  and	
  travels	
  (Step	
  4).	
Check	
  the	
  event	
  log	
  with:	
SELECT	
  READ_EVENT(id),	
  *	
  from	
  my_events;	
There	
  is	
  also	
  an	
  error	
  stream	
  the	
  Schemaverse	
  sends	
  out.	
  It	
  uses	
  the	
  Postgresql	
NOTIFY	
  command,	
  but	
  it	
  is	
  a	
  bit	
  involved	
  to	
  describe.	
  Check	
  out	
  the	
  "What	
  The	
  Hell	
Is	
  Going	
  On?"	
  section	
  for	
  more	
  details.	
Page	
  16	
  of	
  42	
Tables	
While	
  browsing	
  these	
  tables	
  you	
  will	
  notice	
  that	
  for	
  many	
  of	
  them,	
  a	
  player	
  does	
  not	
even	
  have	
  the	
  ability	
  to	
  SELECT	
  from.	
  This	
  is	
  because	
  this	
  information	
  is	
  hidden	
behind	
  views	
  to	
  control	
  what	
  a	
  player	
  can	
  see	
  about	
  others	
  in	
  the	
  game.	
You	
  may	
  still	
  find	
  this	
  information	
  interesting	
  though	
  because	
  if	
  you	
  plan	
  to	
  create	
an	
  item	
  or	
  trophy	
  you	
  can	
  access	
  any	
  and	
  all	
  information	
  you	
  see	
  below	
  within	
  the	
item/trophy	
  script.	
action	
Column	
Type	
Player	
  Permissions	
Extra	
  Details	
action	
character(20)	
Select,	
  Insert,	
  Update	
string	
text	
Select,	
  Insert,	
  Update	
If	
  you	
  have	
  added	
  an	
  item	
  into	
  the	
  item	
  table	
  then	
  you	
  have	
  the	
  ability	
  to	
insert/update	