---
author: K Young
category: 系统运维
comments_data:
- date: '2016-12-23 20:27:36'
  message: 最新评论
  postip: 114.111.167.69
  username: 来自北京的 Chrome 50.0|Windows 10 用户
count:
  commentnum: 1
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 14731
date: '2015-08-10 14:30:00'
editorchoice: false
excerpt: 如何获取你所需要的 NGINX 指标 如何获取需要的指标取决于你正在使用的 NGINX 版本以及你希望看到哪些指标。（参见 如何监控 NGINX（第一篇）
  来深入了解NGINX指标。）自由开源的 NGINX 和商业版的 NGINX Plus 都有可以报告指标度量的状态模块，NGINX 也可以在其日志中配置输出特定指标：
  指标可用性   指标NGINX (开源)NGINX PlusNGINX 日志    accepts（接受） / accepted（已接受） x x    handled（已处理）
  x x    dropped（已丢弃） x x    active（活跃） x x    requests （请求数）/ total（全部请求数） x x    4xx
  代码  x x
fromurl: https://www.datadoghq.com/blog/how-to-collect-nginx-metrics/
id: 5985
islctt: true
largepic: /data/attachment/album/201508/10/143028a5uwtvjnbag86zv5.png
permalink: /article-5985-1.html
pic: /data/attachment/album/201508/10/143028a5uwtvjnbag86zv5.png.thumb.jpg
related:
- displayorder: 0
  raid: 5970
- displayorder: 0
  raid: 6088
reviewer: ''
selector: ''
summary: 如何获取你所需要的 NGINX 指标 如何获取需要的指标取决于你正在使用的 NGINX 版本以及你希望看到哪些指标。（参见 如何监控 NGINX（第一篇）
  来深入了解NGINX指标。）自由开源的 NGINX 和商业版的 NGINX Plus 都有可以报告指标度量的状态模块，NGINX 也可以在其日志中配置输出特定指标：
  指标可用性   指标NGINX (开源)NGINX PlusNGINX 日志    accepts（接受） / accepted（已接受） x x    handled（已处理）
  x x    dropped（已丢弃） x x    active（活跃） x x    requests （请求数）/ total（全部请求数） x x    4xx
  代码  x x
tags:
- NGINX
thumb: false
title: 如何收集 NGINX 指标（第二篇）
titlepic: false
translator: strugglingyouth
updated: '2015-08-10 14:30:00'
---
![](/data/attachment/album/201508/10/143028a5uwtvjnbag86zv5.png)
### 如何获取你所需要的 NGINX 指标
如何获取需要的指标取决于你正在使用的 NGINX 版本以及你希望看到哪些指标。（参见 [如何监控 NGINX（第一篇）](https://www.datadoghq.com/blog/how-to-monitor-nginx/) 来深入了解NGINX指标。）自由开源的 NGINX 和商业版的 NGINX Plus 都有可以报告指标度量的状态模块，NGINX 也可以在其日志中配置输出特定指标：
**指标可用性**
| 指标 | [NGINX (开源)](https://www.datadoghq.com/blog/how-to-collect-nginx-metrics/#open-source) | [NGINX Plus](https://www.datadoghq.com/blog/how-to-collect-nginx-metrics/#plus) | [NGINX 日志](https://www.datadoghq.com/blog/how-to-collect-nginx-metrics/#logs) |
| --- | --- | --- | --- |
| accepts（接受） / accepted（已接受） | x | x |  |
| handled（已处理） | x | x |  |
| dropped（已丢弃） | x | x |  |
| active（活跃） | x | x |  |
| requests （请求数）/ total（全部请求数） | x | x |  |
| 4xx 代码 |  | x | x |
| 5xx 代码 |  | x | x |
| request time（请求处理时间） |  |  | x |
#### 指标收集：NGINX（开源版）
开源版的 NGINX 会在一个简单的状态页面上显示几个与服务器状态有关的基本指标，它们由你启用的 HTTP [stub status module](http://nginx.org/en/docs/http/ngx_http_stub_status_module.html) 所提供。要检查该模块是否已启用，运行以下命令：
```
nginx -V 2>&1 | grep -o with-http_stub_status_module 
```
如果你看到终端输出了 **http*stub*status\_module**，说明该状态模块已启用。
如果该命令没有输出，你需要启用该状态模块。你可以在[从源代码构建 NGINX](http://wiki.nginx.org/InstallOptions) 时使用 `--with-http_stub_status_module` 配置参数:
```
./configure \
… \
--with-http_stub_status_module
make
sudo make install
```
在验证该模块已经启用或你自己启用它后，你还需要修改 NGINX 配置文件，来给状态页面设置一个本地可访问的 URL（例如： /nginx\_status）：
```
server {
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
```
注：nginx 配置中的 server 块通常并不放在主配置文件中（例如：/etc/nginx/nginx.conf），而是放在主配置会加载的辅助配置文件中。要找到主配置文件，首先运行以下命令：
```
nginx -t 
```
打开列出的主配置文件，在以 http 块结尾的附近查找以 include 开头的行，如：
```
include /etc/nginx/conf.d/*.conf; 
```
在其中一个包含的配置文件中，你应该会找到主 **server** 块，你可以如上所示配置 NGINX 的指标输出。更改任何配置后，通过执行以下命令重新加载配置文件：
```
nginx -s reload 
```
现在，你可以浏览状态页看到你的指标：