下一轮开发循环
休斯顿，我们有麻烦了.
所有的辛勤付出却换来一无所获。你的代码或者说Mercury
Meals的代码有些代码不能正常运行。你的客户，你的客户的
老板真的要心烦意乱了…
准备练习
你刚完成大量的第三方代码的集成，有些代码不能正常运
作，而时间很紧，压力很大。
你将怎么做？
目前位置
371
---
## Page 408
谁都不能信
碰头会议
好了，伏计们，真见宽，我们完成了编码
但却不能正常运行。
Laura：我们假定Mercury Meals的代码能正常运行，
但它明显地不行，或者至少不是我们所期望的方式。
真是糟透了。
Bob：嗯，对我而言，那听起来是一个合理的假
设。换作“我们”，决不可能发布不能正常运行的代
码..
Mark；是的，但那是“我们”，谁知道Mercury
Meals的开发人员在搞什么？
Laura：我们只是接受这些代码，并假定它能正常运
行，也许我们应当首先对它进行测试
Bob：那么，你认为MercuryMeals的开发人员只是发
布了一些没有用的代码？
Laura：看起来确实如此。谁知道它是否正常运行过、
它或许是一个未完成的项目。
Mark：但现在变成了我们的代码与问题了
Bob：面且，现在想要从头开始的方式太迟了
Mark：.我们更本不了解MercuryMcals系统是如
何运行的…
Laura：更糟糕的是，我们怎样跟CFO说呢？真的是
火烧眉毛了.….
372
第10章
---
## Page 409
下一轮开发循环
相信自己
谈到别人所编写的代码时，其实就是一个信任问题，这里所学到的真正的
教训就是：当谈到软件代码时，别相信别人。除非你亲眼看到代码正常运
行，或者针对该代码你执行自己的测试程序，否则，别人所编写的代码都
将会是一颗不知何时要爆炸的炸弹一就在你最需要它的时候。
当你从第三方拿到代码时，你正依赖那些代码能运行正常。如果你没有尝
试去使用它，要是它在你需要它的时候不能运行，那么你他您不了别人，
除非你看到它正常运行，否则，最好还是要假定第三方代码根本就是不正
常运行的。
你的软件你的职责
你的职责就是让软件能运行，不管在软件中出
现错误的代码是不是你编写的，根本不重要，
软件错误就是软件错误，身为一个专业的软件
谁编写的代
开发人员，你要对你所交付的软件负全责。
码并不
重
要。如果这
第三方不是你。这听起来似乎有点像废话，但是，当你只因为进
些代码在你
行了良好的测试和开发流程时，你就假设别人也会这么做时，这
的软件系统
句话就特别重要。
切勿假设其他人会遵循你的流程
中，那么
对别人所开发的每一行代码持怀疑态度，除
非你测试过它，因为不是每个人都能像你那
它就是你的
样采用专业的软件开发方法。
贵任
目前位置
373
---
## Page 410
查找重用代码中的问题
MercuryMeals的类现在是你的代码…但它们比较杂乱。在下面的代码中，你把所发
现的代码问题圈出来井且做出注释，从代码的可阅读性到功能性都算。
// Follows the Singleton design pattern
public class MercuryMeals
public MercuryMeals meallythang;
private Order cO;
private String qk = "select
* from order-table where keywords 1ike 91;";
public MercuryMeals () {
public MercuryMeals getInstance ()
this,meallythang = new MercuryMeals () ;
return this.instance;
// roDo Really should document 
public Order createOrder {
return new Order() ;)
public MealOption getMealOption (String option)
throws MercuryMealsConnectionException (
if (MM.establish () isAnyOptionsForKey (option) )
(return MM.establish.getMealOption (option) . [0] )
return nul1;
374
第10章
---
## Page 411
下一轮开发循环
// Mercury Meals class continued...
public boolean submit0rder (Order cO)
tryf
MM mm = MM,estab1ish () ;
mm,su (this, cO) ;
catch (Exception e)
{// write out an error message } return false; )
public Order [] getOrdersThatMatchKeyword(String qk)
Order o = new Order[1;
try (
0 = MM,establish () ,find (qk, qk) ;
}catch(Exception e){
return nul1;
return o#
目前位置
375
---
## Page 412
发现重用代码中的问题
你的任务就是固出和注释你从Mercury Meals代码中发现的问题。
答案
/Follows the Singleton design pattern
拖出除了它试图实现单例
public class MercuryMeals
Singletom模贰外，送个类设
有实际的支格说明。
这个属（
性是公用
的：这不
public MercuryMealsmeallythang;
属性名称不具接述性
是面向时
private Order cO;
为付会含有Onen属性：即使凡行注释都码
象的我好
做法
private String qk
"select * from order-table where keywords 1ike $1;";
private MercuryMeals instance;
这应该是常数吧：4k其的是家
Public MercuryMeals ()
好的觉量的名称吗？
为付么声明付公事都没有做的构
通符：
public MercuryMeals getInstance ()
等等：这个类应该实现单例模式，但
看起来每次方法调用时都创建一个
(this.instance
= new MercuryMeals ();
新的Mercaty Meele实例
return this.instance;
看起来密时
00o/
的舟道人员
Really should document this at s
完成
return new Order ();}
送个方法在选说乎没有做任何有价值的事情。你可以
单地的建一个0ni对象，
元常Mecry Meal
代码的端期格式也懂怪的。
public MealOption getMealOption (String option)
运个连摇为
f (MM.establLsh () isAnyOptionsForKey(option) )
何只建益
[return M.establish().getMealOption(option) .[0]1;
return null;
送留空堡是不好的实践，比较好的思路是引发
导常，提供更多信息给调用程序。
上
376
第10章
---
## Page 413
下一轮开发循环
// Mercury Meals class continued...
此类的任何方法都没有文格说明。填写一些方法准各喜做
什金的基送，金证代码更具可读性。
public boolean submit0rder (Order c0)
不要哥怪，款件温有给出是否工作的任问提示（除开波
推起……)。这个方法“每”牌了的有的异常。这是典
型的类异常的反面例子。如果异常被触发，你又不貌在
MM mm = MM.establish () :
现场赴理，然后把它交给调用程序，这样，它们至少知
遥什么弄错了。
mm.su (this.cO) ;
catch_(Eweeptton-e)
// write out an error message)1
return false:
代础注释到处都是，使得阅读性
较差。
public Order[] getOrdersThatMatchKeyword (String qk)
Order o = new Order[1;
}11
明个h正在被使用：
0 = MM,establish() .find(qk, qk) ;
catch (Exception e){
return null;
再次陪异常：方法的调用程序绝不需需处理
return o1
MenctyMealr或其他异常，因为这个方法隐
了所有错误并只道留了空售。
不管你相信不相信，该大括号结束了该类，
但这样不清不楚的鸡期，全让你难以理解。
目前位置
377
---
## Page 414
忠心不二的好朋友
不按流程的你
现在，事情看起来希望渺茫，没有流程管理，你将
陷人困境·
款停不能正掌运行，代码机七八籍，
CFO慎疯坤了。我不物遥慎加何让事情
378
第10章
---
## Page 415
下一轮开发循环
遵循流程的你
这不是一个完美的世界。当你的代码一
一或者你所依赖的其他人的代
码
一不能正常运行时，客户对你纠辨不放，很容易让你感到恐慌，或
想到搭乘下一次航班飞到一个不能引涉的国家去。但在这个时候，一个
好的流程管理将是你最好的朋友。
一旦我们让第三方款停运行起来，
购题就解决了，我们可以做演示
3.·..
那么，让我们更新工
我们业要得到一个比较好的
作量完成状况，使事情图
时间估计，要修正这整代码
O
到正新。
营多长时网。
PDG
目前位置
379
---
## Page 416
化绊脚石为垫脚石
本章要点
当你准备下一轮开发循环时，要经常和你
你的软件中的每一段代码，不管是你自
的客户一起检查，以便确认你计划的工作
己编写的还是第三方的，诸如Mercury
正是他们想要完成的工作。
Meals，都必须至少通过一个使用情节来表
■在每一轮开发循环结束时，你和你团队的
示。
时间效率值都需要重新进行计算。
不要你对所重用的代码作任何假设。
■对新的一轮开发循环，让你的客户基于该
代码库有好的接口不能保证代码能正常运
开发循环所能允许的工作量，重新为使用
行。除非你亲眼看到它能正常运行，否则
情节进行优先级的排序。
什么代码你也不要相信。
不管你是在编写新的代码还是重用别人的
一次编写代码，多次阅读代码（被其他
代码，它们都是软件，遵循的流程保持不
人）。必须像你要呈现给其他人看你的工
变。
作片段一样，对待你编写的代码。它们必
须具有可阅读性、可靠性和易理解性。
没有愚囊的问题
处理不能正常
如果我们最后还是陷于这种糟糕的状
都是很紧选的，你不得不具备良好的
况的话，我们的流程还有什么用？
生严力，并且能越来越快地、成功地
运行的代码是
答：
交付大型的款件。因此，随着客户的
软件开发工作
这里的问题是，当你重用
要求更多，流程的节奏更快。
Mercury Meals的软件时，你与团队引
在这样情况下，节省时间的最好的方
中的一部分！
进了不月于你们的流程所开发出来的
法之一就是重用代码—往位这些代
代码，它们具有完全不同的结果
码不是你的团队成员编写的，图此，
在第1章，你
残缺的代码。
你趣精于软件开发，就会有超多“重
并不是每一个搞较件开发的人都是先
用代码”成为你正常程序的一部分。
将会看到你的
微测试、使用版本控制与持续集成，
当你开始重用代码时，总是会碰到一
以及错误进踪。有时候，你必须决定
些代码不能正需运行的艰难状况，而
流程是如何解
接受到人开发的款件，并且要好好地
且修正代码比从头开始编写代码还要
处理它
图难一些。但是不要救弃.第11章
决这些难题的
问：
都是美于如何处理这方面的事情，不
那么这种情况有多普遍？我
需要救弃你已有的流程。
就不能总是使用我自己的代码吗？
380
第10章
---
## Page 417
下一轮开发循环
软件开发填字游戏
让我们利用学过的内容提供应用，多点开动你的脑筋！祝你好运！
横排提示
竖排提示
2.If your sofware dont work, is your... to getit fxd.
1. Code .
.is one very useful technique to get you
6. If you ..
y ugpeay ue nof sxiom epoo po aoed e jeg 
anponpoud pue Appinb Budoewep
a world of pain.
8.The. decides what is in or out for iteration 2.
4.Trust.. when it comes to reusing sofware.
for the iteration.
sAep - uew mou eqenoleo nof sdju Aqoojan no LL
you can handle in iteration 2.
5. Never 
any code you haven’t written or run in some
12.. deals with the rel worfd when youre planing your