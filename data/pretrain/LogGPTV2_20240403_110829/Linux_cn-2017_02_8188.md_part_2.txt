在20世纪90年代，无论是业余爱好者还是职业程序员，都广泛采用Perl语言来创建动态网站和应用程序。Tim O'Reilly创造了“信息软件”（infoware）一词，用来描述网站及Perl如何成为不断演变的计算机行业的一部分。Yahoo!和Amazon带来的创新促使O'Reilly写道：“传统软件中包含的信息量相对较少，而信息软件则是在少量代码中承载大量信息。”Perl作为一种灵活且功能强大的工具，支持了从大型网站目录向早期用户生成内容（UGC）平台的转变。

### 题外话
尽管Perl是构建CGI脚本的理想选择，但编程语言与动态网页之间的关系变得日益紧密。从1990年圣诞节前第一个网站的出现到1993年McCool实现CGI的短暂时期内，表单、图片以及表格等Web元素逐渐浮现。虽然伯纳斯·李对这些早期发展产生了影响，但不同的人看到了Web的不同潜力，并将其推向各自的方向。这不仅引发了关于HTML与SGML的关系以及是否应该引入图像标签等著名辩论，也体现了在缺乏直接推动因素时变革进程之缓慢。后者很好地描绘了动态网站的发展轨迹。
  
从某种意义上说，“网关”的概念可以追溯到1991年至1992年间，当时伯纳斯·李与其他科学家及超文本爱好者开发的服务程序允许特定资源如CERN内部应用、Oracle数据库或广域信息查询系统（WAIS）之间相互连接。WAIS是Web的前身，在80年代末期由Brewster Kahle等人开发。这里，“网关”指的是专门设计用于连接其他Web服务、数据库或应用程序的定制Web服务器。任何动态功能都需要在不同端口上运行额外的守护进程。伯纳斯·李希望Web能够成为不同信息系统间的通用接口，并鼓励建立单一用途服务。他也赞扬Perl是一种强大且易于组合的语言。

然而，另一种对“网关”的理解认为它不一定需要是一个定制设备，可能只是一个低吞吐量的附加脚本。这种形式最早见于Jim Davis发布的“通往U Mich地理服务器的网关”，这是一个基于格式化用户查询从其他服务器拉取数据的原型Web API。伯纳斯·李对此回复称，仅用一台服务器提供此类信息可能更有意义，表达了他对于Web应以有序方式访问信息资源的期望。这类跨服务器获取数据的网关和脚本标志着Web的重大变化，尽管它们的数量不断增加，但似乎偏离了伯纳斯·李最初的愿景。

### 回到Perl HTTPD
Davis的地理服务器网关代表了标准化、低吞吐量并通过CGI实现的脚本化网关迈出的第一步。[Perl HTTPD](https://web.archive.org/web/19970720025822/http://www.cs.indiana.edu/perl-server/code.html)则是这一趋势中的重要事件之一，它是1993年初由印第安纳大学研究生Marc Van Heyningen使用纯Perl编写的Web服务器。根据Van Heyningen的设计原则，由于不需要编译过程，使得该服务器极易扩展，并具有“无需停机即可添加新特性”的特点。Perl HTTPD反映了单一目的服务器的观点，并暗示了渐进式、持续测试的软件开发方法可能最终成为Web开发的标准做法。Van Heyningen后来提到，他最初编写这个服务器的原因是没有简便的方法使用CERN服务器生成“虚拟文档”，因此他认为使用Perl可能是最简单的解决方案。在他早期创作的众多脚本中，包括了一个Sun操作系统手册的Web界面和一个Finger网关（一种早期用于共享计算机系统或用户信息的协议）。

尽管Van Heyningen主要将印第安纳大学的服务器用于连接现有信息资源，但他和他的同事们也看到了其作为个人发布平台的潜力。例如，在1993至1994年间围绕一起加拿大案件公布了一系列文件、照片和新闻报道，而全国媒体却保持沉默。Perl HTTPD虽未能延续至今，但它所体现的理念已经广泛传播开来。随着人们对该代码的兴趣增加，Van Heyningen开始收到请求并在线分享了代码，同时提醒潜在用户需要具备一定的Perl知识才能移植到其他操作系统。不久之后，奥斯汀的一位程序员Tony Sanders开发了一个名为[Plexus](https://web.archive.org/web/19990421192342/http://www.earth.com/server/doc/plexus.html)的轻量级版本，这款全功能产品同样具备易扩展性，并增加了诸如图片解码等功能。Plexus直接影响了Rob McCool为NCSA HTTPD服务器开发的“htbin”脚本，并间接促成了通用网关接口（CGI）的诞生。

除了这些历史遗产之外，感谢互联网档案馆的存在，我们今天仍能访问到Perl HTTPD的原始形式。你甚至可以从[这里下载tarball](https://web.archive.org/web/20011126190051/http://www.cs.indiana.edu/perl-server/httpd.pl.tar.Z)。

### 历史展望
技术变迁总是在对立过程中发生，现有技术为我们思考新技术提供了基础。过时的编程形式激发了当今人们做事的新方式。网络世界的许多创新实际上是对旧技术的延伸，不仅仅是Perl。

除了简单的时间线外，Web历史学家或许可以从Perl身上获得更多的启示。其中一个挑战在于材料的获取；另一个挑战则是从海量分散的数据中提炼出结构，整合来自邮件列表、归档网站、书籍和杂志的信息。此外，还需要认识到Web的历史不仅仅是新技术发布的日期，还包括个人记忆、情感和社会进程等内容，这构成了多条交织的历史线索。正如Perl社区所言，“殊途同归”。

---

**作者：** [Michael Stevenson](https://opensource.com/users/mstevenson) **译者：** [wcnnbdk1](https://github.com/wcnnbdk1) **校对：** [wxy](https://github.com/wxy)

本文由[LCTT](https://github.com/LCTT/TranslateProject)原创编译，[Linux中国](https://linux.cn/)荣誉推出。

（题图来源：[pinterest.com](https://www.pinterest.com/pin/146930006563199552/)）