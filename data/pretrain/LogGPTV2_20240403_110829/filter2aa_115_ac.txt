BTB
ind. branch
User
space
Kernel
space
BHI Capabilities
35
PRIV
TAG
TARGET
kernel
TAG_A
kern_func_a
user
TAG_B
user_func
kernel
TAG_C
kern_func_b
PRIV
TAG
TARGET
kernel
TAG_A
valid_target_a
user
TAG_B
user_func
kernel
TAG_C
valid_target_b
kernel
TAG_D
other_target_1
kernel
TAG_E
other_target_2
BTB
call f_a
syscall
ind. branch
call f_b
call ...
call f_y
User
space
Kernel
space
call f_z
BHI Capabilities
35
PRIV
TAG
TARGET
kernel
TAG_A
kern_func_a
user
TAG_B
user_func
kernel
TAG_C
kern_func_b
PRIV
TAG
TARGET
kernel
TAG_A
valid_target_a
user
TAG_B
user_func
kernel
TAG_C
valid_target_b
kernel
TAG_D
other_target_1
kernel
TAG_E
other_target_2
BTB
call f_a
syscall
ind. branch
call f_b
call ...
call f_y
User
space
Kernel
space
call f_z
BHI Capabilities
35
PRIV
TAG
TARGET
kernel
TAG_A
kern_func_a
user
TAG_B
user_func
kernel
TAG_C
kern_func_b
PRIV
TAG
TARGET
kernel
TAG_A
valid_target_a
user
TAG_B
user_func
kernel
TAG_C
valid_target_b
kernel
TAG_D
other_target_1
kernel
TAG_E
other_target_2
BTB
call f_a
syscall
ind. branch
call f_b
call ...
call f_y
User
space
Kernel
space
Attacker can mistrain to any
indirect branch target
call f_z
BHI Capabilities
35
PRIV
TAG
TARGET
kernel
TAG_A
kern_func_a
user
TAG_B
user_func
kernel
TAG_C
kern_func_b
PRIV
TAG
TARGET
kernel
TAG_A
valid_target_a
user
TAG_B
user_func
kernel
TAG_C
valid_target_b
kernel
TAG_D
other_target_1
kernel
TAG_E
other_target_2
BTB
call f_a
syscall
ind. branch
call f_b
call ...
call f_y
User
space
Kernel
space
Attacker can mistrain to any
indirect branch target
call f_z
Latest 67 
branches 
define context
BHI Capabilities
35
PRIV
TAG
TARGET
kernel
TAG_A
kern_func_a
user
TAG_B
user_func
kernel
TAG_C
kern_func_b
PRIV
TAG
TARGET
kernel
TAG_A
valid_target_a
user
TAG_B
user_func
kernel
TAG_C
valid_target_b
kernel
TAG_D
other_target_1
kernel
TAG_E
other_target_2
BTB
call f_a
syscall
ind. branch
call f_b
call ...
call f_y
User
space
Kernel
space
AEacker can mistrain to any
indirect branch target
call f_z
We need to 
control 8 
branches
Exploitation
36
Exploitation – The Plan
37
TAG
PRIV
TARGET
BTB
Exploitation – The Plan
37
TAG
PRIV
TARGET
BTB
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
Exploitation – The Plan
37
BTB
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
TAG
PRIV
TARGET
1337
kernel
leak_gadget
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2
BPU
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2
BPU
2B04
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
BPU
2B04
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
Exploitation – The Plan
37
f_39ca7e94 ()
└► ...
└► f_26a2be2()
└► syscall(getpid)
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
Exploitation – The Plan
37
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
f_d2550282 ()
└► ...
└► f_6c6d0c06()
└► syscall(getpid)
Exploitation – The Plan
37
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
BPU
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
f_d2550282 ()
└► ...
└► f_6c6d0c06()
└► syscall(getpid)
5F33
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
5F33
kernel
sys_getpid
Exploitation – The Plan
37
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
f_1554b7b2 ()
└► ...
└► f_c10573ce()
└► syscall(getpid)
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
5F33
kernel
sys_getpid
Exploitation – The Plan
37
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
BPU
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
f_1554b7b2 ()
└► ...
└► f_c10573ce()
└► syscall(getpid)
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
5F33
kernel
sys_getpid
1337
Exploitation – The Plan
37
sys_call_table[NR_getpid](regs)
└► ???
BTB
User space
Kernel space
1
Kernel space
trigger_leak_gadget()
User space
leak_gadget()
2
BPU
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
f_1554b7b2 ()
└► ...
└► f_c10573ce()
└► syscall(getpid)
TAG
PRIV
TARGET
1337
kernel
leak_gadget
2B04
kernel
sys_getpid
5F33
kernel
sys_getpid
1337
==
predict leak_gadget
Exploitation – Victim Branch
•
Syscall handler is a good victim:
○
We can easily trigger it with any syscall
38
Exploitation – Victim Branch
•
Syscall handler is a good victim:
○
We can easily trigger it with any syscall
○
RDI points to user-space saved 
registers
38
Exploitation – Leak Gadget
•
We need to find a leak gadget in the kernel code
•
Why don’t we JIT it with unprivileged eBPF ?
(Yep, there is a JIT engine in the Linux kernel)
39
Exploitation – Leak Gadget
•
We need to find a leak gadget in the kernel code
•
Why don’t we JIT it with unprivileged eBPF ?
(Yep, there is a JIT engine in the Linux kernel)
39
JIT
Exploitation – Transient Type Confusion
40
Architectural:
x = skb->sk->mark
fr_buf[(x&0xff)sk->mark
fr_buf[(x&0xff)sk->mark
fr_buf[(x&0xff)sk->mark
fr_buf[(x&0xff)<<12]
Speculative:
x = *pt_regs.r12
fr_buf[(x&0xff)<<12]
Transient Type Confusion 
bypasses Spectre mitigations
Exploitation – Covert Channel
•
eBPF is so kind to offer a nano-second precise timer!
Perfect for our FLUSH+RELOAD covert channel
41
LIVE DEMO
42
Vendor response &
Mitigations
43
Affected Processors
•
Intel
○
Branch History Injection (BHI) CVE-2022-0001
■
Every CPU since 10th generation included
•
Arm
○
Spectre-BHB CVE-2022-23960
■
Cortex-{R7,R8}
■
Cortex-{A57,A65,A72,A73,A75,A76,A77,A78,A710}
■
Neoverse-{E1,N1,V1,N2}
■
Cortex-{X1,X2}
44
Mitigations
•
Intel
○
Disable unprivileged eBPF and keep eIBRS enabled
○
Additional hardening options:
■
[SW]  Retpoline / Software BHB-clearing sequence
■
[HW] Future Processors may mitigate BHI in Hardware
•
Arm
○
[SW] BHB-clearing sequence / New clearbhb instruction / Trusted firmware workaround 3
○
[HW] CSV2.3 / Exception Clears Branch History Buffer
•
AMD
○
Not affected
45
Mitigations
•
Intel
○
Disable unprivileged eBPF and keep eIBRS enabled
○
Additional hardening options:
■
[SW]  Retpoline / Software BHB-clearing sequence
■
[HW] Future Processors may mitigate BHI in Hardware
•
Arm
○
[SW] BHB-clearing sequence / New clearbhb instruction / Trusted firmware workaround 3
○
[HW] CSV2.3 / Exception Clears Branch History Buffer
•
AMD
○
Not affected
45
,  kinda
Conclusion
•
Spectre’s attack surface is too wide to define
•
Disabling unprivileged eBPF is another stopgap defense
•
Speculative execution attacks are becoming harder and harder 👍
46
@b4rbito  @pit_frg
@nSinusR
@vu5ec
47
https://vusec.net/projects/bhi-spectre-bhb