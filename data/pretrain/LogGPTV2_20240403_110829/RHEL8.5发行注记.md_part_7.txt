    `-t --runtime`{.literal} 选项被重命名为
    `-D`{.literal}，以指定与套件其余部分匹配的运行持续时间。
-   实施一个新功能，以 `json`{.literal} 格式输出数据。
:::
([BZ#1954387](https://bugzilla.redhat.com/show_bug.cgi?id=1954387){.link})
[]{#New-features.html#BZ-1920237}
::: title
**Intel® QuickAssist Technology Library(QATlib)被 rebase 到版本 21.05**
:::
`qatlib`{.literal} 软件包已更新至版本
21.05，它提供多个程序错误修复和增强。主要变更包括：
::: itemizedlist
-   添加对几个加密算法的支持：
    ::: itemizedlist
    -   AES-CCM 192/256
    -   ChaCha20-Poly1305
    -   PKE 8K (RSA, DH, ModExp, ModInv)
    :::
-   修复不同节点上的设备枚举
-   Fixing `pci_vfio_set_command`{.literal} for 32 位构建
:::
有关 QATlib 安装的更多信息，请检查 [确保 Intel® QuickAssist 技术堆栈在
RHEL 8 上正常工作](https://access.redhat.com/articles/6376901){.link}。
(BZ#1920237)
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_file-systems-and-storage}文件系统和存储 {.title}
:::
[]{#New-features.html#BZ-1949743}
::: title
**现在，当指定了多个配额类型时，xfs `_quota 状态`{.literal}
命令会输出所有宽限期**
:::
`xfs_quota 状态`{.literal}
命令现在为命令行中指定的多个配额类型输出宽限期。在以前的版本中，即使指定了
`-g`{.literal}、-`p 或 -`{.literal} `u`{.literal}
中的多个，也只会显示一个。
(BZ#1949743)
[]{#New-features.html#BZ-1868087}
::: title
**`-h 选项`{.literal} 添加到 `rpc.gsd`{.literal} 守护进程和
`set-home`{.literal} 选项添加到 `/etc/nfs.conf`{.literal} 文件中**
:::
此补丁将 `-H`{.literal} 选项添加到 `rpc.gssd`{.literal} 和
`set-home`{.literal} 选项到
`/etc/nfs.conf`{.literal}，但不更改默认行为。
默认情况下，`rpc.gsd`{.literal} 将 `$HOME`{.literal} 设置为
`/`{.literal}，以避免当用户主目录位于具有 Kerberos 安全性的 NFS
共享上时可能会出现死锁。如果将 `-H`{.literal} 选项添加到 /
`rpc.gssd`{.literal} 或 `set-home=0`{.literal}，则添加到
`/etc/nfs.conf`{.literal},`rpc.gssd`{.literal} 没有将 `$HOME`{.literal}
设置为 `/`{.literal}。
这些选项允许您在
`$HOME/.k5identity 中使用 Kerberos k5identity`{.literal} 文件，并且假设
NFS 主目录不在具有 Kerberos 安全性的 NFS
共享上。这些选项仅用于特定环境，例如 k5identity
文件的需求。如需更多信息，请参阅 `k5identity`{.literal} man page。
(BZ#1868087)
[]{#New-features.html#BZ-1882475}
::: title
**`存储`{.literal} RHEL 系统角色现在支持 LVM VDO 卷**
:::
虚拟数据优化器(VDO)有助于优化存储卷的使用。在这个版本中，管理员可以使用
`存储系统`{.literal} 角色来管理逻辑卷(LVM)VDO 卷上的 `压缩`{.literal}
`和重复数据删除`{.literal}。
([BZ#1882475](https://bugzilla.redhat.com/show_bug.cgi?id=1882475){.link})
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_high-availability-and-clusters}高可用性和集群 {.title}
:::
[]{#New-features.html#BZ-1839637}
::: title
**现在完全支持 `pcs cluster setup`{.literal} 命令的本地模式版本**
:::
默认情况下, `pcs cluster setup`{.literal}
命令会自动将所有配置文件与集群节点同步。从 RHEL 8.3 开始，pcs
`cluster setup`{.literal} 命令作为技术预览提供了
`--corosync-conf`{.literal} 选项。现在，RHEL 8.5
完全支持这个功能。指定这个选项可将命令切换到 `本地`{.literal}
模式。在此模式中，`pc`{.literal} s 命令行界面会创建一个
`corosync.conf`{.literal}
文件，并将其仅保存到本地节点的指定文件中，而不与任何其他节点通信。这可让您在脚本中创建
`corosync.conf`{.literal} 文件，并使用脚本处理该文件。
([BZ#1839637)](https://bugzilla.redhat.com/show_bug.cgi?id=1839637){.link}
[]{#New-features.html#BZ-1443666}
::: title
**在集群节点子集上配置仅监视 SBD 的功能**
:::
在以前的版本中，要使用仅限 watchdog 的 SBD
配置，集群中的所有节点都必须使用 SBD。这会阻止在一个支持 SBD
的集群中使用
SBD，但其他节点（通常是远程节点）需要某种其他形式的隔离。用户现在可以使用新的
`fence_watchdog`{.literal} 代理配置仅监视 SBD
设置，该代理允许群集配置，其中只有某些节点使用监视的 SBD
进行隔离，而其他节点则使用其他隔离类型。个群集可能只有一个这样的设备，它必须命名为
`watchdog`{.literal}。
([BZ#1443666](https://bugzilla.redhat.com/show_bug.cgi?id=1443666){.link})
[]{#New-features.html#BZ-1872378}
::: title
**新的 `pcs`{.literal} 命令更新 SCSI 隔离设备，而不会重启所有其他资源**
:::
使用 `pcs stonith update 命令更新`{.literal} SCSI
隔离设备会导致重启在运行 stonith 资源的同一节点上运行的所有资源。新的
`pcs stonith update-scsi-devices`{.literal} 命令允许您更新 SCSI
设备，而不会导致其他群集资源的重启。
([BZ#1872378](https://bugzilla.redhat.com/show_bug.cgi?id=1872378){.link})
[]{#New-features.html#BZ-1909901}
::: title
**`pcs resource secure-disable`{.literal} 命令增加了减少的输出显示选项**
:::
`pcs resource secure-disable`{.literal} 和
`pcs resource disable --safe`{.literal}
命令在错误报告后显示冗长的模拟结果。现在，您可以为那些命令指定
`--brief`{.literal}
选项，以仅打印错误。错误报告现在始终包含受影响资源的资源 ID。
([BZ#1909901](https://bugzilla.redhat.com/show_bug.cgi?id=1909901){.link})
[]{#New-features.html#BZ-1885293}
::: title
**`pcs`{.literal} 现在接受 `Promoted`{.literal} 和
`Unpromoted`{.literal} 作为角色名称**
:::
`pcs`{.literal} 命令行界面现在接受 `Promoted`{.literal} 和
`Unpromoted`{.literal} 角色在 Pacemaker
配置中指定。这些角色名称的功能等同于 `Master`{.literal} 和
`Slave`{.literal} Pacemaker 角色。`Master`{.literal} 和
`Slave`{.literal} 会在配置中显示这些角色的名称，并帮助文本。
([BZ#1885293](https://bugzilla.redhat.com/show_bug.cgi?id=1885293){.link})
[]{#New-features.html#BZ-1290830}
::: title
**新的 pcs resource status display 命令**
:::
`pcs resource status`{.literal} 和 `pcs stonith status`{.literal}
命令现在支持以下选项：
::: itemizedlist
-   您可以使用
    `pcs resource status node= node_id命令显示在特定节点上配置的资源状态`{.literal}，以及
    `pcs stonith status node=node_id`{.literal}
    命令。您可以使用这些命令在集群和远程节点上显示资源的状态。
-   您可以使用 pcs resource status resource
    ` _id 和 pcs stonith status resource_`{.literal}
    id``{=html}``{=html}``{=html}
    命令显示单个资源的状态。
-   您可以使用 pcs
    `resource status tag _id 和 pcs stonith status tag_id`{.literal}
    ``{=html}``{=html}``{=html}
    命令显示带有指定标签的所有资源的状态。
:::
([BZ#1290830](https://bugzilla.redhat.com/show_bug.cgi?id=1290830){.link},
BZ#1285269)
[]{#New-features.html#BZ-1899214}
::: title
**新的 LVM 卷组标记来控制自动激活**
:::
LVM 卷组现在支持 `setautoactivation 标记，该标记`{.literal}
可控制您从卷组创建的逻辑卷在启动时是否自动激活。在创建将由群集中
Pacemaker 管理的卷组时，请使用卷组 `vg`{.literal}
`create --setautoactivation n 命令将此标记设置为 n`{.literal}，以防止可能的数据损坏。如果您在
Pacemaker 群集中使用了现有卷组，请使用
`vgchange --setautoactivation n`{.literal} 设置 标志。
([BZ#1899214](https://bugzilla.redhat.com/show_bug.cgi?id=1899214){.link})
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_dynamic-programming-languages-web-and-database-servers}动态编程语言、网页和数据库服务器 {.title}
:::
[]{#New-features.html#BZ-1953991}
::: title
**现在完全支持 `nodejs:16`{.literal} 模块流**
:::
`nodejs:16`{.literal} 模块流以前作为技术预览提供，在
[RHSA-2021:5171](https://access.redhat.com/errata/RHSA-2021:5171){.link}
公告中被完全支持。`nodejs:16`{.literal} 模块流现在提供
`Node.js 16.13.1`{.literal}，它是一个长期支持(LTS)版本。
从 RHEL 8.3 开始，Node `.js 16`{.literal} 包括在 RHEL 8.5 中，与
`Node.js 14`{.literal} 提供了大量新功能、程序错误和安全修复。
主要变更包括：
::: itemizedlist
-   `V8`{.literal} 引擎已升级到 9.4 版本。
-   `npm`{.literal} 软件包管理器已升级到 8.1.2 版本。
-   新的 `Timers Promises`{.literal} API
    提供了一组替代的计时器函数，可返回 `Promise`{.literal} 对象。
-   `Node.js`{.literal} 现在提供了一个新的实验性 `Web Streams`{.literal}
    API。
-   `Node.js`{.literal} 现在包含
    `Corepack`{.literal}，这是一个实验性工具，可让您使用给定项目中配置的软件包管理器，而无需手动安装它们。
-   `Node.js`{.literal} 现在提供了一个实验性的 ECMAScript
    模块(ESM)加载程序 API，它整合了 ESM 加载器 hook。
:::
要安装 `nodejs:16`{.literal} 模块流，请使用：
``` literallayout
# yum module install nodejs:16
```
如果要从 `nodejs:14`{.literal}
流升级，[请参阅切换到更新的流](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_managing_and_removing_user-space_components/index#switching-to-a-later-stream_managing-versions-of-appstream-content){.link}。
(BZ#1953991, BZ#2027610)
[]{#New-features.html#BZ-1938942}
::: title
**新模块流： `ruby:3.0`{.literal}**
:::
RHEL 8.5 在新的 `ruby:3.0`{.literal} 模块流中引入了
`Ruby 3.0.2`{.literal}。与 RHEL 8.3 提供的 `Ruby 2.7`{.literal}
相比，这个版本提供了很多性能改进、程序错误和安全修复以及新功能。
主要改进包括：
::: itemizedlist
-   并发和并行功能：
    ::: itemizedlist
    -   `Ractor`{.literal} 是提供线程安全并行执行的 Actor-model
        抽象，作为实验性功能提供。
    -   `光纤调度程序`{.literal}
        已作为实验性功能推出。`光纤调度程序截获`{.literal}
        阻止操作，这样便无需更改现有代码，即可实现轻量并发。
    :::
-   静态分析功能：
    ::: itemizedlist
    -   引入了 `RBS`{.literal} 语言，它描述了 `Ruby`{.literal}
        程序的结构。添加了 The `rbs`{.literal} gem 来解析
        `RBS`{.literal} 编写的类型定义。
    -   引进了 `TypeProf`{.literal} 实用程序，它是 `Ruby`{.literal}
        代码的类型分析工具。
    :::
-   与 `case/in 表达式的`{.literal} 模式匹配不再是实验性的。
-   重新设计了单行模式匹配（一种实验功能）。
-   find 模式已添加为实验性功能。
:::