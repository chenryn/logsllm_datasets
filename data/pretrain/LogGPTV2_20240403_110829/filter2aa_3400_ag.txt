### 携程越权检测与数据库审计实践

#### 1. 越权检测
##### 1.1 流量筛选
在越权检测过程中，携程仅关注与用户相关的信息。为此，公司收集了与订单和个人信息相关的关键词，用于筛选可能涉及越权的流量。

此外，第二个筛选条件是请求报文是否为静态页面。鉴于携程网站已实现前后端分离，所有强关联于用户的动态内容均通过JSON接口获取，因此越权检测主要针对这些JSON接口的请求进行。

##### 1.2 返回报文的筛选
替换Cookie后，根据返回报文中是否包含“没有权限”、“无权访问”或“失败”等关键字来判断是否存在越权行为。如果响应中出现上述任一关键字，则认为存在越权风险。

##### 1.3 登录会话维持
为了支持越权检测系统，携程构建了一个后端平台，专门用于管理和维护不同站点的登录信息（包括用户名、密码、URL及有效的Cookie）。该平台定期验证Cookie的有效性，方法是定时访问预设的检查URL，若返回页面中含有特定关键字，则证明登录状态有效。

#### 2. 数据库审计
携程从四个方面对SQL查询中的异常行为进行监控：
- **数据外泄**：监测大量数据泄露的情况；
- **SQL注入**：识别并阻止尝试或成功的SQL注入攻击；
- **DB账户鉴权**：确保数据库账号被正常使用；
- **DB直连**：防止非生产环境直接连接到数据库。

所有执行过的SQL语句会被记录在ClickHouse数据库中，然后通过定期分析这些日志来发现潜在的安全问题。具体来说，白名单和黑名单机制被用来过滤合法与非法的SQL查询。其中，白名单基于IP地址或主机名设置规则；而黑名单则通过匹配常见的SQL注入特征来工作，并结合SQL语句结构树提高检测精度。

#### 3. DevSecOps 实践总结
- **头部行业加速推进**：尽管面临文化差异和技术障碍，但随着《研发运营一体化（DevOps）能力成熟度模型》等标准的出台，金融、通信等行业正逐步深化其DevSecOps实践。
- **适应性调整**：企业应根据自身特点定制化地实施DevSecOps策略，而不是简单复制他人的成功案例。
- **全员参与安全建设**：强调每个人都应该参与到安全保障工作中去，形成一种积极主动的安全文化氛围。

以上就是关于携程如何在其业务流程中集成越权防护措施以及如何利用数据库审计技术增强信息安全防护能力的一些关键点介绍。