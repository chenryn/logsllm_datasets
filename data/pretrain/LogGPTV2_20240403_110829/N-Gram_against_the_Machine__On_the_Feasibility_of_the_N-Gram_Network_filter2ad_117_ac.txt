stance is further detected, even with the lowest threshold. Increasing either the
size of n-grams or the size of the Bloom ﬁlter cannot solve the issue of undetected
attacks. In the former case, the Bloom ﬁlter saturates even with fewer training
packets. In the latter case, even with a ﬁlter size of 20MB (10 times bigger than
the size suggested by the authors) which does not cause full saturation, no attack
366
D. Hadˇziosmanovi´c et al.
is detected with false positives rates lower than 4%. Other algorithms exhibit
similar detection problems, with at least one attack instance detected only with
false positive rates higher than 1%.
This result alone would imply a complete failure for this protocol. We believe
the reason why the algorithms poorly perform on SMB/CIFS is because of the
high variability of the analyzed payload. In fact, SMB/CIFS is mainly used to
transfer ﬁles between Windows computers. Such ﬁles are contained in the request
messages processed by the algorithms and can be of any type, from simple text
ﬁles to compressed binary archives or even encrypted data.
We acknowledge that all attack instances publicly available exploit vulnerabil-
ities of the Windows RPC service by leveraging SMB/CIFS, which can encapsu-
late RPC messages. Thus, we re-run the test on a ﬁltered data set. In particular,
we extract only SMB/CIFS messages that carry RPC data (∼1% of the origi-
nal SMB/CIFS traﬃc). By doing this, we are implicitly providing a semantical
hint to the algorithms. We expect this to improve both the detection and false
positive rates.
The results of this round of tests are summarized on Table 2. Anagram
achieves a 0.00% false positive rate while still being able to detect 3 attack
instances. Anagram also achieves the lowest false positive rate among the tested
algorithms when detecting all of the attack instances, a rate lower than the ad-
justed false positive of 1 alert per minute. McPAD generates the highest false
positive rate, and it is impossible to lower that no matter which combination of
parameters we choose. We believe that the main reason for this lies in the fact
that McPAD implements the approximate payload representation, that, in such
variable conditions, provides poor payload description.
There is no need to evaluate how a combined approach, i.e., using all the algo-
rithms simultaneously, would perform since Anagram is already outperforming
the other algorithms.
Finally, we process all false positives with SNORT to verify that none of them
is actually a true positive.
Analysis of detected and undetected attacks. By considering which attack in-
stance is detected the most, we observe that all the algorithms can detect an
attack instance exploiting the ms04-011 vulnerability. In particular, of the three
segments composing the attack payload, only one is always identiﬁed as anoma-
lous. Here we report a fragment of it:
0230
0240
0250
0260
0270
0280
0290
02a0
02b0
02c0
02d0
02e0
02f0
0300
...
05a0
59 35 1c 59 ec 60 c8 cb cf ca 66 4b c3 c0 32 7b Y5.Y.‘....fK..2{
77 aa 59 5a 71 76 67 66 66 de fc ed c9 eb f6 fa w.YZqvgff.......
d8 fd fd eb fc ea ea 99 da eb fc f8 ed fc c9 eb ................
f6 fa fc ea ea d8 99 dc e1 f0 ed cd f1 eb fc f8 ................
fd 99 d5 f6 f8 fd d5 f0 fb eb f8 eb e0 d8 99 ee ................
ea ab c6 aa ab 99 ce ca d8 ca f6 fa f2 fc ed d8 ................
99 fb f0 f7 fd 99 f5 f0 ea ed fc f7 99 f8 fa fa ................
fc e9 ed 99 fa f5 f6 ea fc ea f6 fa f2 fc ed 99 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ................
90 90 90 90 90 90 90 90
........
On the Feasibility of the N-Gram Network Analysis for Binary Protocols
367
Table 2. Test results on DSSM B and testing with ASSM B
FPR
DR
DR
(packet-based) (packet-based) (instance-based)
PAYL
POSEIDON
Anagram
McPAD
0.004%
0.007%
0.01%
0.05%
4.41%
11.05%
0.007%
0.007%
1.27%
2.28%
3.32%
5.39%
0.00%
0.00%
0.02%
2.34%
8.39%
19.02%
20.62%
22.31%
27.61%
97.39%
1.43%
3.35%
6.65%
23.92%
66.51%
85.02%
6.22%
10.04%
37.32%
50.23%
58.37%
66.98%
0.95%
22.48%
37.32%
55.50%
63.64%
60.38%
60.86%
61.35%
65.21%
90.00%
2/7
3/7
4/7
5/7
6/7
7/7
2/7
3/7
4/7
6/7
6/7
7/7
2/7
3/7
7/7
7/7
7/7
7/7
7/7
7/7
7/7
7/7
We verify that this particular segment is ﬂagged as anomalous by all the algo-
rithms because of the long sequence of the byte value 0x90, which corresponds to
the NOP instruction of the shellcode. Although there are individual bytes with
value 0x90 in the training set, we verify that there is never a sequence of three
bytes with this value. This explains why Anagram can identify as anomalous
a vast majority of the 3-grams in the aforementioned payload. Also PAYL and
POSEIDON will identify an anomalous byte frequency distribution, in which the
byte value 0x90 peaks above all the others. Similarly, the fact that the payload
consists of continuous 0x90 bytes implies that McPAD classiﬁers will be able to
recognize the peak in the frequency of these 2-grams.
We also observe that both PAYL and POSEIDON fail to detect one attack
instance exploiting the ms06-040 vulnerability, when the false positive rate is
below 2%. A fragment of the payload of such attack instance is reported below:
0170
0180
0190
01a0
01b0
01c0
01d0
01e0
01f0
0200
0210
52 df 47 2c 0c 86 de fe fe b9 f6 68 ae 23 4f a5 R.G,.......h.#O.
81 53 79 43 fc fc 31 58 af ad 6e 30 29 f7 50 8a .SyC..1X..n0).P.
4a e1 78 43 30 6a 55 75 58 72 6e 4f 42 48 4c 42 J.xC0jUuXrnOBHLB
36 34 33 4a 51 38 69 42 52 37 39 46 59 49 79 71 643JQ8iBR79FYIyq
7a 62 38 48 4e 47 68 48 7a 52 59 6e 38 76 55 78 zb8HNGhHzRYn8vUx
41 4d 57 61 57 66 68 30 48 4c 30 61 76 73 61 6b AMWaWfh0HL0avsak
7a 56 65 4d 32 42 76 64 64 43 64 41 45 75 75 53 zVeM2BvddCdAEuuS
4f 7a 41 4f 70 6b 30 37 4c 45 70 66 73 44 73 49 OzAOpk07LEpfsDsI
66 57 39 65 31 59 45 6e 43 38 52 62 76 57 65 50 fW9e1YEnC8RbvWeP
59 63 54 77 7a 63 32 4f 50 4f 52 6b 71 4c 33 4b YcTwzc2OPORkqL3K
65 7a 69 62 72 57 4e 6d 58 33 4b 56 70 50 6c 45 ezibrWNmX3KVpPlE
368
D. Hadˇziosmanovi´c et al.
This fragment contains a large majority of printable characters, thus one would
expect that, since RPC over SMB/CIFS messages are mostly binary, a detection
algorithm based on byte frequency distribution would be able to detect such pay-
load. However, RPC over SMB/CIFS is also used to feed remote print spoolers
with ﬁles to print. For example, in the ﬁltered data set used for training we can
identify the following fragment which is part of a PDF ﬁle sent to the spooler:
0200
0210
0220
0230
0240
0250
0260
0270
0280
0290
09 2f 40 6f 70 53 74 61 63 6b 4c 65 76 65 6c 20 ./@opStackLevel
40 6f 70 53 74 61 63 6b 4c 65 76 65 6c 20 31 20 @opStackLevel 1
61 64 64 20 64 65 66 0d 0a 09 09 63 6f 75 6e 74 add def....count
64 69 63 74 73 74 61 63 6b 20 31 20 73 75 62 0d dictstack 1 sub.
0a 09 09 40 64 69 63 74 53 74 61 63 6b 43 6f 75 ...@dictStackCou
6e 74 42 79 4c 65 76 65 6c 20 65 78 63 68 20 40 ntByLevel exch @
64 69 63 74 53 74 61 63 6b 4c 65 76 65 6c 20 65 dictStackLevel e
78 63 68 20 70 75 74 0d 0a 09 09 2f 40 64 69 63 xch put..../@dic
74 53 74 61 63 6b 4c 65 76 65 6c 20 40 64 69 63 tStackLevel @dic
74 53 74 61 63 6b 4c 65 76 65 6c 20 31 20 61 64 tStackLevel 1 ad
Similar to the previous fragment, this fragment also contains a vast majority
of printable characters. Due to the high variability of data, the threshold for
detecting such fragment had to be set in such a way that many normal samples
were classiﬁed as anomalous.
5.3 Tests with ICS Data Set
The results of this round of tests are summarized on Table 3. Anagram shows
outstanding results in this test, and this does not come unexpected. The messages
in this data set are rather short and the number of duplicates is also high (more
than 95%). This is a perfect combination for Anagram and its binary-based
approach. Anagram detects most of attack instances with a false positive rate
that is lower than the adjusted false positive rate of 10 alerts per day. When
detecting all of the attack instances, the false positive rate is still one order of
magnitude lower than the adjusted false positive rate of 1 alert per minute.
McPAD also performs well with respect to the false positive. This is expected
because the analysed Modbus traﬃc is expressed in messages of ﬁxed length
structure and with a limited range of values in used bytes. This results in McPAD
accurately modeling relationships in the message structure.
PAYL seems to have a better packet-rate detection rate than POSEIDON.
However, POSEIDON always performs better with respect to the instance-based
detection rate as well as lower false positive. When the two algorithms are tuned
to detect all of the attack instances, they both generate an overwhelming number
of false positives, triggering on almost every packet.
With respect to the false positives generated during the veriﬁcation phase, no
raised alert turned out to be a true positive when processed with Snort. This
is largely expected due to 1) the small number of available signatures for the
Modbus protocol, and 2) the fact that the industrial control network from which
we collected traﬃc from is highly isolated from other networks, with only a ﬁxed
number of hosts communicating. Thus, the chance of “noise” is substantially
low.
Similarly to the previous test, there is no reason to test how a combination
of algorithms would perform, because Anagram outperforms all the other algo-
rithms in terms of detection and false positive rates.
On the Feasibility of the N-Gram Network Analysis for Binary Protocols
369
Table 3. Test results on DSM odbus and testing with ASM odbus
FPR
DR
DR
(packet-based) (packet-based) (instance-based)
PAYL
POSEIDON
Anagram
McPAD
0.00%
0.00%