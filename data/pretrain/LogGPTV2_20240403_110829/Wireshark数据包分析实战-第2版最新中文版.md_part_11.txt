你应该可以看到一个小对话框，其中有一些简单的选项对应所要处理
图5-17TCP流图可以让我们更好地看到整个连接
1721616128
1606>801AC35
SevrAs
olai
7412595104
T/2K
TCP
TP:
TCR0C12
TP1
Comment
Closa
第5章Wireshark高级特性91
Aci
POU
便可以创建一个数
---
## Page 109
8
专家信息
18
Wireshark 24Expert Infos
协议的数据包中一些特定状态的警告。这些状态可以分为4类。
Wireshark数据包分析实战（第2版）
Group
ros:0(0）Waming2(3）Notes10（8）Chats3（0）Detat24
Sequence TCP
择Expert InfoComposite，便可以打开这个捕获文件的专家信息窗口（如图5-18
所示）。
 Sequence
5equence
国Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
对话：关于通信的基本信息。
Packet
Packet:
错误：数据包中的错误，或者解析器解析时的错误。
警告：不是正常通信中的异常数据包。
注意：正常通信中的异常数据包。
Help
现的总次数。
3280
1625
Summaty
DupicateACK(F2)
Duplicate ACK（#1)
Duplicate ACx (#4）
Duplicate ACK(#3）
Duplicate ACK(#）
Duplicat ACK(=7)
DuplicateACK（=6）
DuplicateACK(=S）
Retransmission(suspected)
DuplicateACK（a)
Close
X
专家
---
## Page 110
注意消息
对话消息
足如下条件的时候对数据包进行标记。
息消息，并且这些消息在解决捕获文件的问题时非常有用。这些信息可以在满
信息系统还没有在其他的协议中实现。目前，总共为TCP配置了14种专家信
警告信息
（将在第9章中介绍）。
最近收到一次数据的重复ACK。
重传输计时器超时的时候。
要求发送方停止传输数据。
ACK数据包时。
被跳过时。
上一段丢失
重复ACK当一台主机没有收到下一个期望序列号的数据包时，它会生成
零窗口探查在一个零窗口包被发送之后，用来监视TCP接收窗口的状态
TCP重传输
收到丢失数据包的ACK
窗口更新
乱序当数据包被乱序接收时，会利用序列号进行检测。
零窗口
保活
窗口已满用来通知传输主机其接收者的TCP接收窗口已满。
零窗口探查ACK用来响应零窗口探查数据包。
保活ACK
快速重传输
当一个连接的保活数据包出现时触发。
当接收方已经达到TCP接收窗口大小时，发出一个零窗口通知，
用来响应保活数据包。
由接收者发送，用来通知发送者TCP接收窗口的大小已被改变。
数据包丢失的结果。发生在收到重复的ACK，或者数据包的
指明数据包丢失。发生在当数据流中一个期望的序列号
一次重传会在收到一个重复ACK的20毫秒内进行。
发生在当一个数据包已经确认丢失但收到了其
喜9
Wireshark高级特性93
---
## Page 111
错误消息
络问题时了解到。
之后的几个章节中频繁地提到它们。
无错误消息
---
## Page 112
胸，那也请至少快速浏览一遍，以便复习每个协议数据包的结构。
末晚餐中没有牛角面包那样不完整，即使你对每个协议是如何工作的都了然于
一章中，我们将着重关注在OSI分层模型中从第1层到第4层的底层协议。
关部分，都会至少有一个捕获文件供你下载，并可以让你直接上手分析。在这
和IP，以及如HTTP、DHCP、DNS等最常用的应用层协议。在每个协议的相
这应该是这本书中最重要的几章。如果跳过了这些内容，你会感到如同周
通用底层网络协议
络流量在数据包级别是如何工作的。
首先了解正常的流量。在下面的几章中，你将会学到正常的网
安全威胁进行聚焦检查，都是为了发现异常的流量，而你必须
我们将介绍最常见的几种协议，包括最基础的TCP、UDP
无论是处理延迟问题，还是甄别存在错误的应用，抑或对
第
---
## Page 113
地址解析协议
96Wireshark数据包分析实战（第2版）
换机直接连接的设备之间进行通信。在大多数情况下，正常通信需要这两种地
注
址协同工作。
创建这个通信的应用已经得到了这个远程主机的IP地址（通过DNS服务，这
备可能是某种服务器，或者只是你想与之共享文件的另一个工作站。你所用来
层中传递的数据包所有需要的信息。这时它所需要的唯一信息就是第2层包含
将在第7章中介绍），也意味着系统已经拥有了用来构建它想要在第3层到第
目标主机MAC地址的数据链路层数据。
地址。当交换机收到了
容寻址寄存器（CAM）
网络上额外的通信来进行解析了。
我们假设这样一个场景：你需要和你网络中的一个设备进行通信，这个设
定义，它的解析过程只使用两种数据包：
图6-1所示。
之所以需要MAC地址，是因为网络中用于连接各个设备的交换机使用了
个IP地址的，可否请回复给我你的MAC地址？”
RAP
这个表列出了它在每一个端口的所有连接设备的MAC
你们谁有这
---
## Page 114
6.1.1
注
ARP头
我的MAC地址是XX:XX:XX:XX:XX:XX”
说：“你好，传输设备，我就是你所找的那个拥有IP地址为XX.XX.XX.XX的，
地丢弃这个数据包，而拥有这个IP地址的设备将发送一个ARP响应，就像是
么工作的。但是在看一些例子之前，我们先介绍一下ARP数据包头。
的缓存进行更新，并且开始传输数据。
以太网（类型1）。
协议类型：ARP请求正在使用的高层协议
硬件地址长度：正在使用的硬件地址的长度（八位组/字节）。
硬件类型：数据链路层使用的类型数据。在大多数情况下，这个类型都是
如图6-2所示，ARP头包含下列的几个域。
通过实际情况来看地址解析的这个过程，有助于你更好地理解它究竟是怎
在Windows主机中，你可以通过在命令行中键入arp-a来查看ARP表。
一旦这个解析过程完成了，传输设备就会对这个设备MAC和IP对应关系
自目
昌
MAC:12.12:f2:12.12:f2
IP:192.168.0.101
MAC:
图6-1ARP解析过程
ARP响应
ARP请求
0212:0212
第6章通用底层网络协议97
---
## Page 115
6.1.2
数据包1：ARP请求
字节）
将对这个过程中的每个数据包单独进行分析。
操作：ARP数据包的功能：1表示请求，2表示响应。
目标硬件地址：目标接收方的硬件地址（ARP请求中为0）。
发送方协议地址：发送者的高层协议地址。
发送方硬件地址：发送者的硬件地址。
目标协议地址：目标接受方的高层协议地址。
偏移位
144
112
48
0
160
128
96
208
192
176
硬件地址长度
图6-2ARP数据包结构
发送方硬件地址（第3个16位）
发送方硬件地址（第2个16位）
发送方硬件地址（第1个16位）
0~7
发送方协议地址（第2个16位）
发送方协议地址（第1个16位）
目标硬件地址（第1个16位）
地址解析协议
目标协议地址（第1个16位）
目标硬件地址（第3个16位）
目标硬件地址（第2个16位）
目标协议地址（第2个16位）
协议类型
硬件类型
操作
协议地址长度
8~15
---
## Page 116
6.1.3
1092.1
数据包2：ARP响应
Target
地址成为了这个以太网头中的目的地址。这个ARP响应和之前的ARP请求看
00:00:00:00:00:00
的目标MAC地址，还是未知的，所以这里的目的 MAC地址填写为
（00:16:ce:6e:8b：24）0，以及接收方的IP地址192.168.0.10。我们想要得到
ARP请求。这个ARP头列出了发送方的IP（192.168.0.114）和MAC地址
上去很像，除了以下几点
MAC
type-
数据包的操作码（opcode）现在是0x0002，用来表示这是一个响应而不是
在我们对最初请求的响应中（如图6-4所示），第一个数据包中的源MAC
在这个给定的结构中，我们可以确定这的确是一个在以太网上使用IP的
最重要的是，现在数据包中所有的信息都是可用的，也就是说我们现在有
了192.168.0.1主机的MAC地址（00:13:46:0b:22:ba）
MAC地址和IP地址。
地址信息进行了颠倒
请求。
salse
(Ox0001)
Protocol （requesr）
192
图6-3一个ARP请求数据包
一发送方的MAC地址和IP地址现在变成了目的
0.1147
0
Dsti ff:f:ff:ff::f:ft
第6章
通用底层网络协议99
---
## Page 117
6.1.4无偿的ARP
00040100130001419160100136022
Ethernet Il.
Type
ProtocoT
Kardware
100
sender
Sender MAC address:00:13:46:0b:22:ba (00:13:46:0b:22:ba）
Wireshark数据包分析实战（第2断）
IP
rep1y（0x0002）
地址映射更新缓存（如图6-5所示）。
addr
在多数情况下，
但无偿发送的ARP却是一个好东西。
在我的家乡，
IP（0x0800)
00:16:ce
MAC:
80:24
图6-4
图6-5无偿ARP工作过程
(00:16:ce:6e:8b:24)
一个ARP回复数据包
mno
---
## Page 118
10.003PPo51
Destination
cther
Target MAC address:00:00:00:00:00
Sender MAC address:00:03:47:b7:f2:f5(00:03:47:b7:f2:f5)
Protocol size:
Protocol
互联网协议
00
00:03:47:b7:f2:f5(00:03:47:b7:f2:f5)
这个文件只包含一个数据包（如图6-6所示），因为这就是无偿数据包的全部了
址的改变。打开arp_gratuitous.pcap这个捕获文件，你就会看到一个实际例子。
正如你所知道的，MAC地址被用来在第2层处理单一网络中的通信。与其类似，
发送。此外，你可能会注意到一些系统使用无偿ARP数据包对流入流量进行
备IP地址的改变会生成它，并且一些操作系统也会在启动时进行无偿ARP的
由于这个ARP数据包是未经请求的，却导致客户端更新ARP缓存，所以会称
收到之后，它会让这些主机使用新的IP和MAC地址关系更新它们的ARP表。
方的IP地址·和目标IP地址O是相同的。当这个数据包被网络中的其他主机接
负载均衡。
之为无偿
上的所有主机能够接收到它O。这个ARP头看上去和ARP请求很像，除了发送
000000000000000000000000000000000000
s1ze:
位于OSI模型中第3层的协议的主要目的就是使得网络间能够互联通信。
检查这个以太网头，你会看见这个数据包是以广播的形式发送，以便网络
True]
(0X0001)
24.6.125.19(24.6.125.19)
24.6.125.19(24.6.125.19)
uest/gratuitous ARP)
图6-6一个无偿ARP数据包
(00:03:
(00:00:00:00:00:00）
pst：ff:f:tfff：（f:ff（fff:ff:f)
第6章通用底层网络协议101
---
## Page 119
6.2.1
IP地址
还是互联网协议（IP）。
102
(IPv4)
的一个集合。
成千上万的路由器连接起来的。互联网本身就是由无数局域网和路由器所组成
示法。
人记住一串32位长的01字符确实比较困难，所以IP地址采用点分四组的表
Wireshark数据包分板实址
IP地址是一个32位的地址，
mask).
11000000101010000000000000000001
图6-7IPv4地址的点分四组表示法