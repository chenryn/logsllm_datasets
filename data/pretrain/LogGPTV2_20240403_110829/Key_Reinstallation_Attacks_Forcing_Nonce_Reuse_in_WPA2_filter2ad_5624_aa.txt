# Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2

**Authors:**
- Mathy Vanhoef, imec-DistriNet, KU Leuven
- Frank Piessens, imec-DistriNet, KU Leuven

## Abstract
We introduce the key reinstallation attack, which exploits design or implementation flaws in cryptographic protocols to reinstall an already-in-use key. This resets the keyâ€™s associated parameters, such as transmit nonces and receive replay counters. Our attack affects several types of cryptographic Wi-Fi handshakes.

All protected Wi-Fi networks use the 4-way handshake to generate a fresh session key. Despite being 14 years old and previously proven secure, we show that the 4-way handshake is vulnerable to a key reinstallation attack. In this attack, the adversary tricks a victim into reinstalling an already-in-use key by manipulating and replaying handshake messages. This resets parameters like the incremental transmit packet number (nonce) and receive packet number (replay counter) to their initial values.

Our key reinstallation attack also compromises the PeerKey, group key, and Fast BSS Transition (FT) handshakes. The impact varies depending on the handshake and data-confidentiality protocol in use. For AES-CCMP, an adversary can replay and decrypt (but not forge) packets, enabling TCP stream hijacking and malicious data injection. For WPA-TKIP and GCMP, the impact is catastrophic, allowing packet replay, decryption, and forgery. GCMP is especially vulnerable due to its use of the same authentication key in both communication directions.

We confirmed our findings in practice and found that every Wi-Fi device is vulnerable to some variant of our attacks. Notably, Android 6.0 is exceptionally affected, as it forces the client to use a predictable all-zero encryption key.

**Keywords:** security protocols, network security, attacks, key reinstallation, WPA2, nonce reuse, handshake, packet number, initialization vector

## 1 Introduction
All protected Wi-Fi networks use some version of Wi-Fi Protected Access (WPA/2). Even public hotspots now use authenticated encryption thanks to the Hotspot 2.0 program. These technologies rely on the 4-way handshake defined in the 802.11i amendment of 802.11. In this work, we present design flaws in the 4-way handshake and related handshakes, affecting both WPA- and WPA2-certified products.

The 4-way handshake provides mutual authentication and session key agreement. Combined with (AES)-CCMP, it forms the foundation of the 802.11i amendment. Since its introduction in 2003, the 4-way handshake has remained free from attacks, and both CCMP and the 4-way handshake have been formally proven secure. However, we show that the 4-way handshake is vulnerable to key reinstallation attacks. We also discovered similar weaknesses in the PeerKey, group key, and Fast BSS Transition (FT) handshakes.

The core idea behind our attacks is simple: when a client joins a network, it executes the 4-way handshake to negotiate a fresh session key. If message 3 of the handshake is retransmitted, the client may reinstall the same session key, resetting the nonce and replay counter. An attacker can force these resets by collecting and replaying retransmissions of message 3, leading to nonce reuse and attacks on the data-confidentiality protocol.

The impact of our attacks depends on the data-confidentiality protocol. For CCMP, arbitrary packets can be decrypted, enabling TCP connection hijacking. For TKIP and GCMP, an adversary can both decrypt and inject arbitrary packets. When the group key handshake is attacked, an adversary can replay broadcast and multicast frames.

Our attack is particularly devastating against wpa_supplicant versions 2.4 and 2.5, commonly used on Linux, where the client installs an all-zero encryption key. This vulnerability also affects Android 6.0 and Android Wear 2.0, making 31.2% of Android devices vulnerable.

Interestingly, our attacks do not violate the security properties proven in formal analysis of the 4-way and group key handshakes. The problem lies in the lack of modeling for key installation, meaning the same key can be installed multiple times, resetting nonces and replay counters.

**Main Contributions:**
- Introduction of key reinstallation attacks.
- Demonstration of vulnerabilities in the 4-way, PeerKey, group key, and fast BSS transition handshakes.
- Development of practical attack techniques.
- Evaluation of the practical impact of nonce reuse for all 802.11 data-confidentiality protocols.

The remainder of this paper is structured as follows. Section 2 introduces relevant aspects of the 802.11 standard. Sections 3, 4, and 5 illustrate our key reinstallation attacks against the 4-way, PeerKey, group key, and fast BSS transition handshakes. Section 6 assesses the impact, presents countermeasures, explains where proofs failed, and discusses lessons learned. Section 7 covers related work, and Section 8 concludes.

## 2 Background
### 2.1 The 802.11i Amendment
After the discovery that Wired Equivalent Privacy (WEP) was fundamentally broken, the IEEE introduced a more robust solution in the 802.11i amendment. This defines the 4-way handshake and two data-confidentiality and integrity protocols: (WPA-)TKIP and (AES-)CCMP. While 802.11i was under development, the Wi-Fi Alliance began certifying devices based on draft D3.0, leading to the creation of Wi-Fi Protected Access (WPA). Once 802.11i was ratified, the WPA2 certification was created. Both WPA and WPA2 are based on 802.11i, with WPA2 mandating support for CCMP and optionally allowing TKIP, while the reverse is true for WPA.

The 4-way handshake, group key handshake, and CCMP protocol have been formally analyzed and proven secure.

### 2.2 Authentication and Association
When a client connects to a Wi-Fi network, it first authenticates and associates with the Access Point (AP). During the association stage, Open System authentication is used, allowing any client to authenticate. Actual authentication occurs during the 4-way handshake. After authentication, the client sends an association request to the AP, specifying the desired pairwise and group cipher suites. The AP responds with an association response, indicating success or failure.

### 2.3 The 4-way Handshake
The 4-way handshake provides mutual authentication based on a shared secret called the Pairwise Master Key (PMK) and negotiates a fresh session key called the Pairwise Transient Key (PTK). The PMK is derived from a pre-shared password in personal networks and negotiated using 802.1x in enterprise networks. The PTK is derived from the PMK, Authenticator Nonce (ANonce), Supplicant Nonce (SNonce), and the MAC addresses of both the supplicant and authenticator. The PTK is split into a Key Confirmation Key (KCK), Key Encryption Key (KEK), and Temporal Key (TK). The KCK and KEK protect handshake messages, while the TK protects normal data frames.

Every message in the 4-way handshake is defined using EAPOL frames. The header identifies the message, the replay counter detects replays, and the nonce field transports random nonces. The Receive Sequence Counter (RSC) contains the starting packet number for the group key, and the Key Data field stores the group key, encrypted using the KEK. The authenticity of the frame is protected using the KCK with a Message Integrity Check (MIC).

Figure 2 illustrates the 4-way handshake. The authenticator initiates the handshake by sending message 1, containing the ANonce. The supplicant generates the SNonce and derives the PTK, then sends the SNonce in message 2. The authenticator also derives the PTK and sends the group key (GTK) in message 3. The supplicant replies with message 4, installing the PTK and GTK. The first two messages transport nonces, and the last two messages transport the group key and protect against downgrade attacks.

In an existing connection, the PTK can be refreshed by initiating a new 4-way handshake.