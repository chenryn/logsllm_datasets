title:Cashtags: Protecting the Input and Display of Sensitive Data
author:Michael Mitchell and
An-I Andy Wang and
Peter L. Reiher
Cashtags: Protecting the Input and Display 
of Sensitive Data
Michael Mitchell and An-I Andy Wang, Florida State University;  
Peter Reiher, University of California, Los Angeles
https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/mitchell
This paper is included in the Proceedings of the 
24th USENIX Security Symposium
August 12–14, 2015 • Washington, D.C.
ISBN  978-1-939133-11-3
Open access to the Proceedings of  the 24th USENIX Security Symposium is sponsored by USENIXCashtags:  Protecting the Input and Display of Sensitive Data
Michael Mitchell, An-I Andy Wang
Florida State University
Peter Reiher
University of California, Los Angeles
Abstract
Mobile  computing  is  the  new  norm.    As  people  feel 
increasingly  comfortable  computing  in public  places 
such as coffee shops and transportation hubs, the threat 
of  exposing  sensitive  information  increases.    While 
solutions  exist  to  guard the  communication  channels
used  by mobile  devices,  the  visual  channel  remains
largely open.    Shoulder  surfing  is  becoming  a  viable 
threat  in  a  world  where  users  are  often surrounded  by 
high-power  cameras, and sensitive  information  can  be 
extracted  from  images  using  only modest  computing 
power. 
In  response,  we present  Cashtags:  a  system  to  defend 
against  attacks on  mobile  devices  based  on  visual 
observations.  The system allows users to safely access 
pieces of sensitive information in public by intercepting 
and replacing sensitive data elements with non-sensitive 
data elements before they are displayed on the screen. In 
addition,  the  system  provides  a  means  of computing 
with  sensitive  data  in  a  non-observable  way, while 
maintaining  full  functionality  and  legacy  compatibility 
across applications.
1. Introduction
Shoulder surfing has become a concern in the context of
mobile  computing.  As  mobile  devices  become 
increasingly capable, people are able to access a much 
richer set of applications in public places such as coffee 
shops  and public  transportation hubs. 
Inadvertently, 
users risk exposing sensitive information to bystanders
through  the  screen  display.  Such information  exposure 
can  increase  the  risk  of  personal,  fiscal,  and  criminal 
identity theft.   Exposing trade or governmental secrets 
can lead to business losses, government espionage, and 
other forms of cyber terrorism [12, 13, 14].
This  problem 
the  ubiquity  of
surveillance and high-power cameras on mobile devices
such  as  smartphones  and  on  emerging  wearable 
computing  devices  such  as  Google  Glass
[57]. 
Additionally,  the  trend toward multicore  machines, 
GPUs,  and  cloud computing makes  computing  cycles
more  accessible  and  affordable  for  criminals  or  even 
seasoned hobbyists to extract  sensitive  information via 
off-the-shelf visual analysis tools [58].
is  exacerbated  by 
This  paper  presents  the  design,  implementation,  and 
evaluation  of  Cashtags,  a  system  that  defends  against 
shoulder  surfing  threats.    With  Cashtags,  sensitive 
information  will  be  masked  with user-defined  aliases, 
and  a  user  can  use  these  aliases  to  compute  in  public.  
Our system is  compatible with legacy features such as 
auto correct,  and  our  deployment  model  requires  no 
changes  to  applications  and  the  underlying  firmware,
with a performance overhead of less than 3%.
1.1 The shoulder-surfing threat 
The threat of exposing sensitive information on screen 
to  bystanders 
is  real.  In  a  recent  study of  IT 
professionals,  85%  of  those  surveyed  admitted  seeing
unauthorized  sensitive  on-screen  data,  and  82% 
admitted  that  their  own  sensitive  on-screen  data  could 
be viewed by unauthorized personnel at times [1]. These 
results are consistent with other surveys indicating that
76% of  the  respondents  were concerned  about  people 
observing  their  screens  [2],  while  80%  admitted that 
they  have  attempted  to  shoulder  surf  the  screen  of  a 
stranger [3].
The  shoulder-surfing  threat  is  worsening,  as  mobile
devices are replacing desktop computers.  More devices 
are  mobile  (over  73%  of  annual  technical  device 
purchases 
the  world’s mobile  worker 
population will reach 1.3 billion by 2015 [5]. More than 
80% of U.S. employees continues working after leaving
the office [6], and 67% regularly access sensitive data at 
unsafe locations [2]. Forty-four percent of organizations 
do  not  have  any  policy  addressing  these threats [1]. 
Advances in screen technology further increase the risk 
of exposure, with many new tablets claiming near 180-
degree screen viewing angles [8].
1.2 The dangers are everywhere
Observation-based attacks to obtain displayed sensitive 
information can come in many forms.  There are more 
than 3 billion camera-enabled phones in circulation [4].  
Some  of  these  devices  can capture images at  40 
megapixels  of  resolution  and  over  10  times  optical 
zoom [7]. High-resolution and often insecure “security” 
cameras are abundant in major metropolitan areas. For 
example, the average resident of London is captured on 
CCTV  over  300  times  per day  [9].  Finally,  sensitive 
data can be captured by simple human sight.
[4])  and 
USENIX Association  
24th USENIX Security Symposium  961
the 
feasibility  of
sequences the  user  may  make  on  the  screen,  physical 
buttons,  or keyboards.  We  also  assume  the  absence  of 
an active attack; the observer cannot directly influence 
the user in any way.
Although  sensitive  information  can  be  presented  in 
information  to 
many  forms,  we  focus  on  textual
demonstrate
framework.  
Protecting  sensitive  information  in  other  forms  (e.g., 
images and bitmaps) will be the subject of future work.
2.2 User model
Conceptually,  Cashtags  is  configured  with  a  user-
defined list of sensitive data items (Table 2), each with a 
respective  Cashtags  alias  or  a  cashtag  (e.g., $visa to
represent a 16-digit credit-card number).  Whenever the 
sensitive  term  would  be  displayed  on  the  screen,  the 
system  displays  the  predefined  alias  instead (Fig  2.1).  
our 
Type
Name
Email
Username
Password
Street Address
Phone number
Birthday
SSN
Credit Card
Account number
Actual
Alias
$name
John Smith
$email
PI:EMAIL
$user
Jsmith1
$pass
p@ssw0rd
$addr
123 Main St.
$phone
555-111-2222
$bday
1/1/85
$ssn
111-22-3333
4321 5678 9012 1234 $visa
$acct
123456789
Table 2: Sample mapping of sensitive data to cashtag 
aliases.
to  significant  personal  and  business 
Observation-based  attacks  can  be  complex.    Partial 
images  can  be  merged,  sharpened,  and  reconstructed, 
even  from  reflections.  Offline  and  cloud-based  optical 
character recognition (OCR) solutions have only a small 
percentage  of  recognition  errors,  even  on  inexpensive 
low-end devices [10].
Personal  information  exposure  can  also  enable other 
attacks, such as social engineering, phishing, and other 
personal identity theft threats.
1.3 The consequences can be severe
Observation-based  leaks  of  sensitive  information  have
led 
losses.
Recently, an S&P 500 company’s profit forecasts were 
leaked  as  a  result  of  visual  data  exposure [4].    In  a 
different  case,  government  documents  were  leaked 
when  a train  passenger  photographed sensitive  data 
from  a  senior  officer’s  computer screen [11].  Security 
cameras captured the private details of Bank of America 
clients  through  windows  [12].  Sensitive  information 
relating  to Prince William  was  captured and published 
because of a screen exposure to a bystander [13].  
The  risk  of  loss  from  shoulder  surfing  is  also  hurting 
business productivity.  Figures show that 57% of people 
have stopped working in a public place due to privacy 
concerns  and  70%  believe their  productivity  would 
increase if others could not see their screen [2].
1.4 Current solutions
Techniques are available to limit the visual exposure of 
sensitive  information.  However,  the  focus  of  these 
systems  has  been  limited  to  password  entries  [22,  23, 
24, 25, 33, 34, 35]. Once the user has been successfully 
authenticated,  all  of  the  accessed  sensitive  information 
is  displayed  in  full  view.    Clearly,  such  measures  are 
insufficient  for  general  computing  in  public  when  the 
need 
arises.  
Unfortunately,  many  techniques  used  to  prevent  visual 
password  leaks  cannot  be  readily  generalized  beyond
password protection, which motivates our work. 
information 
sensitive 
to 
access 
2. Cashtags
We  present  Cashtags, a  system  that  defends  against 
observation-based attacks.  The system allows a user to 
access  sensitive  information  in  public  without  the  fear 
of leaking sensitive information through the screen.  
2.1 Threat model
We  define  the  threat  model  as  passive,  observation-
based  attacks 
(e.g.,  captured  video  or  physical 
observation by a human).  We assume the attacker can 
observe both the screen of the user as well as any touch 
Fig.    2.1: On-screen  sensitive  data  (left)  and  data 
protected by masking with cashtag aliases (right).
962  24th USENIX Security Symposium 
USENIX Association
reward-card
application  without 
At the point at which the sensitive data would be used 
internally  by  the  device  or  app,  cashtags  will  be 
replaced  by  their  represented sensitive  data  items, 
allowing whatever login, communication, computation, 
transmission, or upload to proceed normally.
Cashtags  also  provides  secure  data  input.  A user  can 
type  in  a  cashtag  in  place  of  the  sensitive  term, 
permitting complex data-sensitive tasks, such as filling 
out  a
risk  of 
observation from a bystander.  In addition, cashtags are
easier to remember than the actual sensitive data term.  
For  example,  $visa can  be  used  as a  shortcut  for
entering a 16-digit credit card number.
Users  can  interact  with Cashtags  by  entering  data  in 
either alias or actual form. If the user enters the actual 
term,  it  will  be  converted  into  its  corresponding  alias 
once the full term is entered.  This has the potential to 
inadvertently  expose  partial  private  data,  an  attacker
could potentially see all but the last character input. In 
practice,  auto  completion  is  likely  to  expand  the 
sensitive information within the first few characters and 
display  it  in  the  alias  form.  Entering  data  into  the 
system  in  alias  form  ensures  that no  such  partial 
information exposure can occur during input and is the 
best option to maximize protection.
2.3  Compared to password managers
The  user  model  of Cashtags  is  similar  to  that  of a
password  manager.  To  add  an  entry  to  a  password 
manager, a user is required to key in the username and 
password  pair.  Typically,  subsequent  usage  of  the 
stored  password  involves  only  selecting  the  respective 
account  pre-populated  with 
the  stored  password.  
Therefore, an observer cannot see the keyed-in sequence
for passwords.  Similarly, Cashtags requires the user to 
pre-configure the system by first entering the sensitive 
term to  be  protected  and  the  corresponding  alias  to 
represent the term.  When a sensitive term is displayed, 
our  system  replaces  the  sensitive  term  with  its  alias 
without user intervention.  To enter a sensitive term, the 
user can enter the alias, and our system will translate it 
into  the  sensitive  term  prior to  being processed by  the 
underlying apps.  
While a password-manager-like  user  model  provides a
familiar interface, it also shares a similar threat vector of 
a centralized target and weakened protection in the case 
of 
the 
shortcomings of password managers is orthogonal to the 
focus of this research and threat model.  As research in 
bettering  password  managers  advances, we  can apply 
those techniques to enhance our system.
theft. However, 
overcoming 
physical 
sensitive  data:  Cashtags 
2.4 Design overview
Although  conceptually  simple,  Cashtags  addresses  a 
number of major design points.  
Intercepting 
intercepts 
sensitive data items as they are sent to the display.  For 
apps,  this  is  at  their  common  textual  rendering  library 
routines, and for users, this is at the routines that handle 
software keyboards and physical devices (e.g., USB and 
wireless input devices).  
User  interface:    Users  can  type  in  cashtags  instead  of 
sensitive data items to compute in public.  This interface 
allows  cashtags  to  be  compatible  with  existing  tools 
such  as  auto  completion,  spellcheckers,  and  cut  and 
paste.  Thus, users can enter the first few characters and 
auto-complete the full cashtag.
Accessing  sensitive  data:    User-entered cashtags  are 
converted  internally  to  the  sensitive  data  items  before 
the  apps  access  the  data. This  way,  Cashtags  will  not 
break applications due to unanticipated input formats.  
Variants  of  data  formats:  Cashtags  can  leverage 
existing 
items 
represented  in  different  formats  (e.g.,  John  Smith  vs. 
John Q. Smith).
Development and deployment models:  Cashtags uses a 
code-injection  framework. 
  This  approach  avoids 
modifying  individual  apps  and  the  firmware,  while 
altering 
to 
incorporate Cashtags at runtime.  
Cashtag  repository:  The  mapping  of  cashtags  to 
sensitive  data  items  is  stored  in  a  password-protected 
repository.
to  match  sensitive  data 
the  overall  system 
the  behavior  of 
libraries 
3. Cashtags Design
This section will detail each Cashtags design point.
3.1 Observation-resistant approaches
We  considered  screen-level-masking and  data-entry-
tagging system design spaces prior to using the current 
keyword-oriented design.  While all of these approaches 
can prevent sensitive information from being displayed, 
the main differences are the interception granularity and 
the portability of the underlying mechanisms.