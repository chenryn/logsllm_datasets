R
X
4
A
G
M
S
Y
5
B
H
N
T
Z
(a) NumPad-Add
(b) NumPad-Shift
(c) LetterPad-Shift
Figure 4: Demonstration of three implementation variants
is 6 = (9 + 7) mod 10 given password 934567 and the hidden
message ‘plus 7’.
3.3.2 NumPad-Shift
In NumPad-Shift, the alphabet of password consists of digits 0
to 9 only. The hidden transformation is performed by shifting the
location of the current password element by X-offset and Y -offset,
where the offset values are randomly taken from {−1, 0, 1} for X-
offset, and {−1, 0, 1, 2} for Y -offset. For a 3 × 4 keypad design
shown in Figure 4(b), the transformed response for ai is calculated
as pad[x(ai) + Δx mod 3][y(ai) + Δy mod 4], where Δx is
the X-offset, Δy is the Y -offset, and x(ai) is the X-index of ai,
and y(ai) is the Y -index of ai. For example, the correct response
for the ﬁrst round is 5 if the password is 934567 and the hidden
message is ‘move left by 1 step and move up by 1 step’.
Note that two extra keys ∗ and # are added to the keypad; oth-
erwise, the distribution of hidden transformations is not uniform
on the keypad layout. The proof for the necessity of these two
keys is given as follows. Assuming ∗ and # keys are removed,
the keypad now contains only 10 keys for digits 0 to 9. To pro-
vide a full transformation from a secret key to a random key, the
minimum value set is {−1, 0, 1} for X-offsets and {−1, 0, 1, 2}
for Y -offsets. There are twelve combinations between X-offsets
and Y -offsets, but only ten keys on the keypad. If the offset val-
ues are drawn from a uniform distribution, certain response keys
for a given password element would have a higher frequency com-
pared to others (it is similar as placing twelve balls in ten buckets
in a deterministic way). The exact distribution of response keys
is decided by the underlying password element, thus it discloses
valuable information about the password. From the other perspec-
tive, if response keys are drawn from a uniform distribution, the
offset values will not be uniformly distributed due to similar rea-
son. Therefore, it is necessary to add these two extra keys to the
NumPad-Shift keypad.
3.3.3 LetterPad-Shift
In LetterPad-Shift, the alphabet of password consists of letters a
to z and digits 0 to 9 (36 elements in total). The hidden transforma-
tion is the same as NumPad-Shift. The offset values are randomly
taken from {−2,−1, 0, 1, 2, 3} for both X-offset and Y -offset for
a 6 × 6 keypad design. The transformed response for ai is calcu-
lated as pad[x(ai)+Δx mod 6][y(ai)+Δy mod 6] in a similar
way as for NumPad-Shift. A background grid is added to ease the
calculation of shifting, as shown in Figure 4(c).
4. SECURITY ANALYSIS
4.1 External Eavesdropping Attacks
Common external eavesdropping attacks leading to password
leakage may exploit vision, haptics, or acoustics channel as ana-
lyzed in Section 2. For CoverPad, an adversary using these attacks
can observe at most a complete response key sequence pressed by
a user, while the hidden transformation is protected by our design.
From this key sequence, the adversary knows the i-th pressed key
is decided by the i-th element in the password. However, the ad-
versary cannot further infer what the i-th password element is, as
proved as follows.
Proof: Given a pressed key ei, and two password elements ax and
ay in a w-sized password alphabet, let P r(ei|ax) and P r(ei|ay)
be the probabilities for ei being pressed when the underlying pass-
word element are ax and ay, respectively. We have P r(ei|ax) =
P r(ei = ax + ri mod w) =P r (ri = ei − ax mod w) =
P r(ri = C mod w) = 1/w = P r(ei|ay) for any i, x, and y,
where C is a constant integer randomly drawn from a uniform dis-
tribution. Therefore, a sequence of pressed keys observed by an
adversary is equivalent to a random sequence, which is similar to a
ciphertext generated by a one-time pad.
2
In a partially protected environment where the hidden trans-
formation is protected by the hand-shielding gesture, our scheme
achieves no password leakage. As long as the hidden transforma-
tion is not disclosed together with the corresponding response, an
adversary cannot infer any information about the underlying pass-
word (except password length) even after an inﬁnite number of ob-
servations.
4.2 Side-channel Attacks
In reality, it is possible for an adversary to exploit subtle side-
channels to collect password information during password entry.
These attacks are not usually considered in common threat mod-
403.0
2.5
2.0
1.5
1.0
0.5
0
1
0
9
(a) Timing deviation for NumPad-Add
2
3
4
7
8
5
6
6.0
5.0
4.0
3.0
2.0
1.0
0
5
0
(b) Timing deviation for LetterPad-Shift
20
25
30
10
15
35
25%
20%
15%
10%
5%
0%
1.0
Response
time (sec)
0.5
(c) Timing Distribution for NumPad-Add
5.0
2.0
3.0
4.0
1.5
2.5
3.5
4.5
Figure 5: Timing deviations and distributions for entering each password element. The results of NumPad-Shift are similar to the
results of NumPad-Add shown in these ﬁgures.
els [19, 27, 38, 39, 5, 26, 33, 13, 15, 24, 8, 7]. A typical side-
channel attack is timing analysis [35], which analyzes the patterns
in the response time of entering individual password elements. The
preliminary results of our scheme against timing analysis are given
in Figure 5. For the timing deviation shown in Figure 5(a) and 5(b),
each bar with x-value i represents the average response time for en-
tering the transformed responses for a speciﬁc password element i.
For the timing distribution shown in Figure 5(c), each line in the
ﬁgure represents the distribution of the response time for entering
the transformed responses for a speciﬁc password element. These
results show the range and the distribution of the response time for
entering different password elements are almost overlapped. This
indicates that timing analysis is not a major concern for our scheme,
though it is difﬁcult to completely prevent such attacks due to in-
evitable human behavior patterns during password entry. Detailed
analysis on side channel attacks is out of the scope of this paper.
5. USABILITY EVALUATION
5.1 Methodology
The participants in our user study are recruited from undergrad-
uate students in our university. There are 61 participants in total,
30 male and 31 female, with age range between 20 and 25. These
participants come from ﬁve different departments, in which 42 of
them have a social science or business related background, and the
remaining have a computer science or information technology re-
lated background. Each participant is paid with 10 dollars as com-
pensation for their time. We establish a ranking system from which
a participant can see a performance score representing how well he
performs compared to other participants. This ranking system pro-
vides a moderate level of motivation for the participants to do their
best in tests. A numerical identiﬁer is assigned to each participant
in order to protect user privacy.
The user study is conducted in a quiet room. The experiments
use a within-objects design. Each participant is asked to use all
three variants as three test groups. These variants are implemented
on Apple iPad, which are referred to as schemes in this section. The
order of the schemes is randomized to avoid the learning effect that
affects the performance for a speciﬁc scheme. For each test group, a
user is required to memorize a randomly generated password in the
beginning. The password strength is set to be equivalent to 6-digit
PIN, where the password length is four for LetterPad-Shift, and
six for both NumPad-Shift and NumPad-Add. The same password
will be used for the same test group and a “show my password”
button is provided in case a participant forgot his password. The
participants learn how to use a scheme by an interactive step-by-
step tutorial. The participants are required to go through the whole
tutorial for the ﬁrst scheme appearing in the tests, and they may
skip the tutorial for the second and third schemes after learning the
basic scheme design. In the end of each tutorial, there is a short
pretest for the participant to exercise. If a participant fails to pass
the pretest, the researchers will provide help to him to ensure that
he understands how to use the scheme before the tests start.
In each test group, there are six tests simulating additional test
conditions that evaluate the inﬂuence of time pressure, distraction,
and mental workload. The details of these test conditions are de-
scribed in the next subsection. The order of these tests is also ran-
domized in order to avoid the learning effect.
All three test groups consist of 18 tests in total. To avoid the
participants from feeling exhausted and bored, each test is designed
to be short and can be ﬁnished within one or two minutes. The
participants are given a short break after each test group. At the end
of the user study, the participants are given a questionnaire using 5-
point Likert scale to collect their perception on the schemes. The
whole user study takes 35 ∼ 50 minutes to complete.
5.2 Simulating Various Test Conditions
In order to simulate various test conditions related to time pres-
sure, distraction, and mental workload, we introduce two extra ex-
perimental tools, timer and secondary task. A timer is used to create
time pressure by showing a participant how much time is left for the
current test condition. It is implemented as a progress bar whose
length increases every second with a countdown text ﬁeld show-
ing how many seconds are left. Secondary tasks are used to sim-
ulate unexpected distraction and persistent mental workload. We
use CRT (choice reaction time) tasks as secondary tasks, which is a
standard technology in experimental psychology [23, 12, 21]. CRT
tasks usually work as secondary tasks that occupy the central ex-
ecutive1 in human brain when evaluating the performance of a pri-
mary task in the presence of a secondary task. CRT tasks require
participants to give distinct responses for each possible stimulus. In
our implementation, the participants are asked to press the correct
button among N buttons, where the correct button should have the
same color as the stimulus. For example, if the stimulus shows a red
button, a participant should press the red button among N buttons
with different colors. We use N = 2 for tests in the distraction con-
dition as the major focus is to unexpectedly disrupt password entry
with a CRT task. We use N = 8 for tests in the mental workload
condition so as to create a considerable mental workload, which is
the same as in the classic Jensen Box setting [23].
Based on the above experimental tools, we simulate six test con-
ditions for each test group by combining the two modes and three
statuses. Two modes related to a timer are described as follows:
• Relaxed mode: A participant is asked to minimize the error
rate in a ﬁxed number of login attempts where time is not
1The central executive is a control system that mediates attention
and regulation of processes occurring in working memory [4].
41considered in performance score calculation. The number of
login attempts is 5 for no-extra-task status and 3 for distrac-
tion and mental workload statuses.
• Timed mode: A participant is asked to perform as many suc-
cessful logins as possible within 1 minute, where both time
and accuracy are considered in performance score calcula-
tion. The countdown of a timer creates time pressure.
Three statuses related to secondary tasks are described as fol-
lows:
login task only.
• No-extra-task status: A participant is asked to perform the
• Distraction status: A simple CRT task may appear with 1/3
probability each time when a participant presses a response
key. This task is used to create unexpected distractions dur-
ing password entry.
• Mental workload status: A relatively complex CRT task
appears every time when a participant presses a response key.
This task is used to create continuing mental workload during
password entry.
Among six conditions, we referred to the combination of relaxed
mode and no-extra-task status as the normal condition, which is
the common condition usually tested in prior work [19, 27, 38, 39,
5, 26, 33, 13, 15, 24, 8, 7]. The short names for the other ﬁve
conditions are given in Table 1.
Short name
normal
timed
distraction
distraction+timed
mental workload
mental workload+timed
Full speciﬁcation
relaxed mode + no-extra-task status
timed mode + no-extra-task status
relaxed mode + distraction status
timed mode + distraction status
relaxed mode + mental workload status
timed mode + mental workload status
Table 1: Short names for test conditions
The hypotheses related to these test conditions are described as
follows.
(H1) Compared to the normal condition, login time will be signiﬁ-
cantly shorter when time pressure is present.
(H2) Compared to the normal condition, login accuracy will be
signiﬁcantly lower when time pressure is present.
(H3) Compared to the normal condition, login time will be signiﬁ-
cantly longer when unexpected distraction is present.
(H4) Compared to the normal condition, login accuracy will be
signiﬁcantly lower when unexpected distraction is present.
(H5) Compared to the normal condition, login time will be signiﬁ-
cantly longer when persistent mental workload is present.
(H6) Compared to the normal condition, login accuracy will be
signiﬁcantly lower when persistent mental workload is present.
(H7) Compared to a condition in relaxed mode with secondary
tasks, login time will be signiﬁcantly shorter for its counterpart
in timed mode.
(H8) Compared to a condition in relaxed mode with secondary
tasks, login accuracy will be signiﬁcantly lower for its counterpart
in timed mode.
5.3 Learning Curve
Although our scheme design involves intuitive operations only, it
requires a different process for password entry compared to legacy
passwords. While we expect the participants can learn this process
with the tutorial and pretests, we observed that some participants
were impatient to read all instructions and keep pressing the next
button. These participants proceeded to the evaluation stage before
they fully understand our scheme design.
Average login time (sec)
20
15
10
5
0
NumPad-Add NumPad-Shift LetterPad-Shift
1.00
0.96
0.92
0.88
0.84
0.80
Login success rate
NumPad-Add NumPad-Shift LetterPad-Shift
Encountered as 1st group
Encountered as 2nd group
Encountered as 3rd group
Figure 6: Learning curve of our schemes
Figure 6 compares user performance under the normal condition
for different positions where a scheme appears in the study. These
results show the user performance in terms of login time and login
success rates is signiﬁcantly worse when the tested scheme is the
ﬁrst scheme which a participant encountered in the user study. But
the differences on user performance are not signiﬁcant if a scheme
is encountered as the second or third test group, as all our schemes
are similar due to the fact that they are based on the same con-
ceptual design. As shown in the learning curve in Figure 6, most
participants get familiar with our scheme design after the ﬁrst test
group. Therefore, we consider the ﬁrst test group as part of the
learning process, and use the performance data collected from the
second and third test groups only in the following analysis.
5.4 Experimental Results
We measure user performance with the following metrics: aver-
age login time, login success rates, round success rates, and average
edit distances. A round success rate is the average success rate for a
user to correctly input one password element by applying a hidden
transformation. An edit distance is the minimum number of inser-
tions, deletions, substitutions, and adjacent transpositions required
to transform an input string into the correct password string so that
an average edit distance is the average value of edit distances cal-
culated from all login attempts of a user under a test condition.
Among these metrics, login success rates, round success rates, and
average edit distances are used to evaluate login accuracy.
We use the following statistical tools to test the signiﬁcance of
our experimental results, where a signiﬁcance level of α = .05 is
used. For each comparison, we run an omnibus test across all test
conditions for each scheme. Since all our performance data are
quantitative, we use Kruskal-Wallis (KW) test for omnibus tests,
which is an analogue of ANOVA but does not require normality.
If the omnibus test indicates signiﬁcance, we further use Mann-
Whitney (MW) U test to perform pair-wise comparisons so as to
identify speciﬁc pairs with signiﬁcant differences. The detailed re-
sults of our statistical tests are given in Appendix A.
5.4.1 Performance under Normal Condition