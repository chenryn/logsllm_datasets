both the basic and redundant architectures.
4. TA availability modeling
The  availability  modeling  of  the  TA  will  be  carried
out according to the hierarchical description  of  the  system
in  four  steps  (see Figure  1),  starting  at  the  service  level
considering the two architectures of Figures 7 and 8.
4.1.  Service  level  availability
At  this  step,  we  are  concerned  with  the  evaluation  of
external and internal service availabilities.
Using 
is  assumed 
4.1.1. External services.  Each  external  system  is
modeled  as  a  black  box  that 
to  fail
independently of all the others.
Let us consider the following notations:
• AFi, AHj and ACk : Availabilities of a flight, hotel  and  car
reservation system, (i = 1, …, NF; j = 1, … NH; k = 1, …, NC).
• APS : Availability of the payment system.
• Anet: Availability of the TA connectivity to the Internet.
independence  assumption  and
considering that the service is provided as  long  as  at  least
one  reservation  system  for  each item  of  a  trip  (flight,
hotel  and  car reservation)  is  available,  the  availability  of
the external  services  can  be  derived  as  in  Table  3.  It  is
worth  mentioning  that  if  the  TA  connectivity  to  the
Internet is unavailable, none of these  services  is  provided.
Thus,  the  availability  of  the  TA  connectivity  to  the
Internet will  be  accounted  for  by  multiplying  the  user
perceived availability expression by Anet (cf. Section 4.3).
failure 
the 
A
1
(Flight) = 
(cid:60)
A
1
(Car) = 
(cid:60)
NF
(
1
(cid:60)(cid:46)
=i 1
NC
(
1
(cid:60)(cid:46)
=i 1
A
Fi
A
Ci
)
)
A
1
(Hotel) =
(cid:60)
NH
1
(
(cid:60)(cid:46)
=i 1
A
Hi
)
A(Payment service) = APS
Table 3. External service availability
4.1.2.  Internal  services.  These  concern 
application and database services.
the  web,
For  both  architectures  of  Figures  7  and  8, 
the
communication between servers is achieved by a local  area
network (LAN). The LAN is assumed to be a  single  point
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:19 UTC from IEEE Xplore.  Restrictions apply. 
of failure,  i.e., when  the  LAN  is  unavailable,  all  internal
services are unavailable.  As  a  consequence,  the  LAN
availability,  denoted  by ALAN,  is  a  multiplying  factor  in
all equations giving the  various  function  availabilities  (as
will be seen  in  Section  4.2). ALAN  can  be  evaluated  using
for example the models discussed in [16, 17].
As  the  primary  objective  of  this  paper  is  to  show  the
applicability of the proposed approach to the TA  example,
we  make  simplistic  assumptions  for  the  application  and
database services. More realistic assumptions are  made  for
the  web  service,  to  illustrate  the  kind  of  more  complex
calculations that can be performed.
Application  and  database  service availability:  Let  us
denote  by  A(CAS)  and  A(CDS)  the  availabilities  of  the
computer hosts associated  to  the  application  and  database
servers,  respectively.  The  disk  availability  is  denoted  by
A(Disk). To simplify  the  presentation  we  assume  that  the
computer  hosts  and  the  disks  fail  independently  of  each
other.  The  application  and  database  service  availability
(denoted as, A(AS) and A(DS)) are given in Table 4.
Basic architecture Redundant  architecture
A(AS) A(
)CAS
(
1(cid:60)
1
[
(
1
(cid:60)
1
2
(
AS
))CA
(cid:60)
]
[
(
1
(cid:60)
1
(
A
C
(cid:60)
))
2
]
2
A(
) (
C
A(DS) A
Table 4. Application and database service availability
)
Disk
DS
DS
(
A
Disk
(cid:60)
))
In  the  following,  we  focus  on  the  evaluation  of  the
the  basic  and
web  service  availability  considering 
redundant architectures, respectively.
take 
Web  service  availability:  We 
into  account:1)
hardware and software  failures  that affect the computer
host  and  lead  to  web  server failure,  and  2)  performance-
related failures that  occur when  the  incoming  requests  are
not serviced due to the limited capacity of the web servers
The  web  service  is  assumed  to  be  available  when
neither of the above types of failures occurs.
The impact of both types of failures on the  web  service
availability can be accounted for  by  adopting  a  composite
performance and availability evaluation approach  [18,  19].
The main idea consists  in  combining  the  results  obtained
from  two  models:  a  pure  performance model  and  a  pure
availability  model.  The  performance model  takes  into
account the  request  arrival  and  service  processes  and
evaluates performance related measures conditioned  on  the
state  of  the  system  as  determined  from  the  availability
model.  The  availability  model  is  used  to  evaluate  the
steady  state  probability  associated  to  the  system  states
that result from the occurrence of failures and recoveries.
This approach is based on the assumption  that  the  sys-
tem reaches  a  quasi  steady  state  with  respect  to  the per-
formance-related events, between successive occurrences  of
failure-recovery events. This assumption is valid when  the
failure/recovery rates are much lower  than  the  request  arri-
val/service rates, which is typically true in our context.
Basic architecture: It  is  composed  of  a  unique  computer
host,  CWS.  Let  us  denote  by  pK  the  probability  that  the
web server input buffer  (whose  size  is  K)  is  full  when  a
request  is  received.  The  evaluation  of pK  is  derived  from
the performance model  and  depends  on  the  assumptions
made  about  the  request  arrival  process  and  the  request
service process. Let us assume that the  request  arrivals  are
modeled by a Poisson process with rate (cid:95)  and  the  request
service times are exponentially  distributed  with  rate (cid:105).
Then the web server  behavior  governed  by  the  arrival  and
service processes can be modeled by an M/M/1/K queue.
The  probability  that  an  arriving  request  is  lost  due  to
buffer being full is given by (see e.g., [20]):
p =
K
K
(cid:108)
1
(cid:60)
(cid:108)
1 K 1 with
(cid:60)
(cid:108)
+
(cid:108) (cid:95)
=
(cid:105)
(1)
The  availability  model  is  composed  of  two  states:  up
and  down  states.  The  steady  state  probability  of  the  up
state  corresponds  to  the  system steady-state  availability
denoted A(CWS).
(Web service)
Thus, the availability of the web service is:
A
 (2)
This  definition  of  availability  allows  incorporation  of
inherent  dependence  between  performance  and
A
(
)
C
(
(cid:60)1 p
WS
)
=
K
the 
dependability in one equation.
Redundant Architecture: The  redundant  architecture  is
composed  of  NW  identical  web  servers.  We  assume  that
all  component  failures  are independent  and  that  the  web
service is provided as long as at least one of the  redundant
component systems is available.
The performance model  associated  to  this architecture
to evaluate pK(i), the probability that web requests  are lost
due to input buffer being full,  is  assumed  to  be  described
by  an M/M/i/K  queue,  where i  is  the  number  of  servers
available and K is the size of the buffer.
For a system state with  i  operational  servers, pK (i),  is
given by (see, e.g., [20]):
p (i)
K
=
K
(cid:108)
iK-i
i!
(cid:149)
(cid:179)
(cid:150)
i 1
(cid:60)
(cid:45)
=
j 0
j
(cid:108)
j!
+
K
(cid:45)
=
j i
j
(cid:108)
j-i
i!
i
(cid:151)
(cid:181)
(cid:152)
1
(cid:60)
i  2
(cid:42)
Note that pK (1) is given by equation 1.
(3)
With respect  to  the  availability  model,  the  aim  is  to
model  the  redundant  architecture  behavior  resulting from
the occurrence  of  failures/repairs,  in  order  to  evaluate  the
steady state probability  associated  to  system  states i  (i  is
the number of operational servers, as denoted above).
Two  assumptions  are made  with  regards  to 
the
coverage  of  web server failures:  1)  perfect  coverage,  and
2) imperfect coverage.
Perfect coverage:  In  the  Figure  9  model,  it  is  assumed
that each web server runs  on  a  dedicated  computer  host.
Web server failures occur with rate (cid:104).  The  model  assumes
shared  repair  facilities  with  repair  rate  µ.  When  a  server
fails,  it  is  automatically  disconnected  and  the  system  is
reconfigured (with probability 1) with the web servers  that
are still operational.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:19 UTC from IEEE Xplore.  Restrictions apply. 
Nw(cid:104)(cid:104)(cid:104)(cid:104)
(Nw- 1))))(cid:104)(cid:104)(cid:104)(cid:104)
(Nw- 2))))(cid:104)(cid:104)(cid:104)(cid:104)
2(cid:104)(cid:104)(cid:104)(cid:104)
(cid:104)(cid:104)(cid:104)(cid:104)
Nw
Nw - 1
Nw - 2
…….
1
0
µµµµ
µµµµ
µµµµ
µµµµ
µµµµ
Figure 9. Markov model (perfect coverage)
Let us denote by (cid:87)i the steady-state probability of  state
i, i  =  0,  1,  …,  NW.  In  state  i,  i(cid:38)0, i  web  servers  are
available to process the input requests. ((cid:87)0 corresponds to
the state where all web server are down).
(cid:87)
i
=
i
(cid:165)
µ
(cid:87)
(cid:180)
o
(cid:104)
(cid:166)
(cid:163)
(cid:178)
(cid:164)
1
i!
and
(cid:87)
0
(cid:149)
wN
(cid:179)
(cid:45)
=
(cid:179)
(cid:150)
i=0
(cid:163)
(cid:178)
(cid:164)
(cid:151)
i
(cid:165)
µ
(cid:181)
(cid:180)
(cid:104)
(cid:166)
(cid:181)
(cid:152)
1
i!
1
(cid:60)
(cid:165)
(cid:180)
(cid:166)
 (4)
 (5)
The availability of the web service is as follows:
A(Web service)
= (cid:60)
(cid:45)1 (cid:87)
p
i K
(i) + 
(cid:87)
o
N
w
(cid:163)
(cid:178)
(cid:164)
i=1
where pK (i) is given by equation (3).
The expression between the brackets corresponds  to  the
probability that a web request is not serviced  either  due  a)
to buffer being full or b) to web server unavailability.
Imperfect  coverage:  This  assumption  is  included  in  the
model presented  in  Figure  10,  where from each state i,
two transitions are considered:
1) After  a  covered  failure  (transition  with  rate ic(cid:104))  the
an
is  automatically 
system 
operational state with (i-1) web servers.
reconfigured
into 
2) Upon the occurrence of an uncovered  failure  (transition
with rate i(1-c)(cid:104)),  the  system  moves  to  a  down  state
yi,  where  a  manual  reconfiguration  is  required before
moving  to  operational  state  (i-1).  The  reconfiguration
times are exponentially distributed with mean 1/(cid:96).
Nw c(cid:104)
(Nw - 1)c(cid:104)
(Nw - 2)c(cid:104)
2c(cid:104)
Nw
µ
(cid:96)
Nw - 1
µ
Nw - 2
…….
µ
(cid:96)
1
µ
(cid:96)
(cid:104)
µ
0
Nw (1-c)(cid:104)
(Nw- 1)(1-c)(cid:104)
2(1-c)(cid:104)
yNw - 1
yNw - 2
y2
Figure 10. Markov model (imperfect coverage)
Solving  Figure  10  model  for  steady-state  probabilities
leads to:
=
(cid:87)
i
i
(cid:163)
(cid:165)
1 µ
(cid:87)
(cid:178)
(cid:180)
o
i!
(cid:104)
(cid:164)
(cid:166)
i=1,..., NW
=
(cid:87)
iy
=
(cid:87)  
0
(cid:60) (cid:163)
µ
(1 c)
(cid:178)
(
i-1)!
(cid:96)
(cid:164)
(cid:149)
Nw
(cid:179)