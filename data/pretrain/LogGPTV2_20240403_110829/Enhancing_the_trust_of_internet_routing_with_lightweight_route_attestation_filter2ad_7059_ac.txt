Case 1)
Case 2)
Case 3)
. It means that the preﬁx is owned by
. The
permission for TBGP speakers in
to announce
or withdraw preﬁx
is obtained by checking the
preﬁx keys in
. TBGP
speakers owning the private keys can successfully
sign the route update.
, i.e.,
. The ownership of preﬁx
is veriﬁed in
by verifying the signature of AS_PATH
.
if the update is a withdrawal. If
with the key of preﬁx
if the route update is an an-
nouncement, or verifying the signature of the preﬁx
receives
the announcement, it is only allowed to reannounce
the route and prolongs the AS path with its own
AS number, i.e.,
, or reannounce the aggregated route, i.e.,
(see
Deﬁnitions 1 and 2). Similarly, if
receives a
withdrawal, it is only allowed to announce the route
if
or withdraw
the preﬁx if
. The
BGP speakers in
can successfully obtain pri-
vate keys to sign the route update if and only if it
has one of the operations above.
trusts the route from its previous
AS
if and only if the route update is
veriﬁed, i.e.,
successfully veriﬁes route up-
date
,
which means that the route update is strictly at-
tested by
.
If
is only
allowed to reannounce the route and prolongs
i.e.,
the AS path with its own AS number,
, or re-
and is reannounced by
it
receives the announcement,
from
announce the aggregated route, i.e.,
. If
receives a
withdrawal, it is only allowed to announce the route
if
or withdraw
the preﬁx if
.
Thus,
has the permission to sign the route
update to announce it to its neighbors.
By combining the above three cases, TBGP only
needs to verify the signature of route update with the
key of last hop
to verify received route update
for preﬁx
.
According to Theorem 1 and Deﬁnitions 1 and 2, we
have the following theorem.
Theorem 2: Each TBGP speaker veriﬁes a received route
for preﬁx
by verifying
and reannounced exactly
update
that it is originally announced by
through the path
Theorem 2 states that TBGP achieves the following four se-
curity goals: AS number authentication, BGP speaker authenti-
cation, AS path authentication, and preﬁx origin authentication.
.
D. Extending TBGP for iBGP and Incremental Deployment
In general, each AS can have more than one BGP speaker, and
different BGP speakers connect each other by iBGP sessions to
announce their learned eBGP routes. It is obvious that the basic
Fig. 2. Building transitive trust between ASes/routers.
(i.e.,
) if the AS is the owner of
speaker. The signature is either based on the private key of
, or based on the pri-
(i.e.,
vate key of
) otherwise. As Fig. 2 shows,
after AS 3 and AS 4 successfully attest the route in OUT ﬁlters,
the trust relationship is extended to AS 5 if it adopts the route.
With these two attestation procedures in IN and OUT ﬁlters,
the validity of BGP announcements is guaranteed by enforcing
veriﬁcations and route attestations in the IN/OUT ﬁlters of BGP
speakers. That is, the identity of a BGP speaker is veriﬁed and
its route authenticity is guaranteed by the route attestation rules,
through which different speakers build a transitive trust relation-
ship. Speciﬁcally, when a BGP speaker in
receives a route
update of a preﬁx with the correct signature from a speaker in
itself), it attests
the route update by verifying the signature and puts this route
in Adj-RIB-IN for future route selection. Thus,
build trust between them for this preﬁx. Similarly, if the route for
this preﬁx is adopted and further propagated to
’s neighbors
(i.e., the route update is attested by
and
, the update is attested in the OUT ﬁlter of
speaker and then is signed by its private key. Thus, all ASes can
build trust with each other, and the trust relationship is transitive
by signing/verifying signatures and enforcing the rules in the IN
and OUT ﬁlters. For example, as shown in Fig. 2, the second
level of the trust relationship among ASes 1, 2 and 3 is built if
AS 1 attests the route in the OUT ﬁlter and ASes 2 and 3 success-
fully verify the route in their IN ﬁlter. Similarly, the third level
trust relationship is built among ASes 1, 2, 3, 4 and 5 if AS 3 and
4 attest the route in their OUT ﬁlters and AS 5 verify it in its IN
ﬁlter. Any forged routes cannot be successfully attested by the
attestation service. That is, an AS can trust routes from neighbor
ASes if and only if the routes are veriﬁed, which means that the
routes are strictly attested by neighbor ASes themselves. There-
fore, TBGP can effectively defend against forged BGP routes
no matter whether they are generated by conﬁguration errors or
malicious attacks. Each AS only needs to attest route updates
with the keys of the last hop and does not need to attest them
with the information of every hop. Thus, we can achieve the
following theorem.
Theorem 1:
In TBGP, to verify a received route update
, a speaker only needs
to verify the signature of the route update with the key of last
hop
for preﬁx
a) Proof: We prove the theorem based on the following
.
three cases.
LI et al.: ENHANCING TRUST OF INTERNET ROUTING WITH LIGHTWEIGHT ROUTE ATTESTATION
697
by the last hop of AS_PATH, TBGP will not sign these routes
then.
In TBGP, we can ﬁlter routes without fully trusted AS paths.
However, in practice, network operators are not willing to do so
for the network availability issue. Thus, we need to change local
preference value (which indicates the degree of preference for
learned routes [1]) of each route according to different trust level
of AS paths based on network operators’ conﬁguration. That is,
we can assign a high local preference value to fully trusted AS
paths and low local preference value to partial trusted AS paths
in the IN ﬁlters. Let us follow the example (shown in Fig. 3).
If AS 5 receives another route (AS 4, AS 2, AS 1) where ASes
4, 2, 1 are all trusted AS for preﬁx
, TBGP can detect that
(AS 4, AS 2, AS 1) is a fully trusted AS_PATH but (AS 3, AS
2, AS 1) is not. TBGP enables that BGP speakers in AS 5 set a
low preference value for routes without fully trusted AS paths,
e.g., setting the local preference value to 0, and then the fully
trusted route (AS 4, AS 2, AS 1) is preferred in Adj-RIBs-IN
in route selections. If an untrusted route is selected as the best
route in trusted ASes, the readvertisement route is still untrusted
though these ASes adopts TBGP. In this way, TBGP can be
incrementally deployed.
IV. PROTOTYPE IMPLEMENTATION
We implement a prototype of TBGP and demonstrate its prac-
tices. Our prototype solves the following two questions which
are important for real deployment on the Internet.
1) How to reduce the complexity of cryptographic operations
in TBGP? Is it possible to eliminate distribution and man-
agement of thousands of public keys in traditional secure
BGP proposals?
2) How to realize a tamper-resistant TBGP such that it can
guarantee the integrity execution of route attestation al-
gorithms and rules, and thus preserve the consistency of
routing control- and data-plane? In other words, can we
ensure that a TBGP router cannot pretend to be a trusted
one if the system is compromised, e.g., the route attesta-
tion service is disabled or routing control- and data-plane
are not consistent?
Our TBGP solution is built on two existing key techniques:
identity-based signature (IBS) and trusted computing (TC). In
this section, we present three primitive functions used in TBGP
based on these two techniques: i) secure storage of BGP keys; ii)
signing/verifying BGP announcements; and iii) BGP attestation
service.
A. Preliminaries
Identity-Based Signature Algorithm:
Identity-based cryp-
tography (IBC), which is an alternative to the traditional
certiﬁcate-based public key cryptography, uses user identity
information (e.g., e-mail address) as the public key [28]. The
private key in an IBC system is generated by a private key
generator (PKG) according to the user identity information.
IBC is ﬁrstly designed by Shamir and resolves the problem
of key storage and management in certiﬁcate-based crypto-
graphic algorithms. IBC includes identity-based encryption
(IBE) and identity-based signature (IBS) algorithms [28].
In our implementation of TBGP, we use IBS to verify and
Fig. 3. Route attestation example in the presence of iBGP and eBGP sessions.
route attestation rules we discussed above cannot directly apply
to the Internet because the AS_PATH of routes is not changed
in iBGP sessions. We solve the problem by adopting the rules
as follows.
1) If a route is announced to an iBGP neighbor, then the router
does not need to attest3 it in the OUT ﬁlters but simply
forward, because all attributes of the route are not changed.
2) If a route is announced from an iBGP neighbor and the
next hop address encoded in the announcement is loop-
back, then it means that the route is generated within its
own AS, and the router does not need to attest it in the IN
ﬁlters but simply accept it.
3) If a route is announced from an eBGP neighbor or it is
from an iBGP neighbor but the next hop address encoded
in the announcement is not loopback, then the router needs
to attest it in the IN ﬁlters.
4) If a route is announced to an eBGP neighbor, then the
router needs to attest it in the OUT ﬁlters.
Let us follow an example in Fig. 3 which is extended from that
in Fig. 1 and illustrates an example of route attestation with the
presence of iBGP and eBGP sessions and is an extension of the
example in Fig. 1. Assuming that AS 1 announces 12.34.8.0/24,
BGP speakers R1, R3, R4, R7, and R8 attest routes in their OUT
ﬁlters of their eBGP sessions according to the route attestation
rules, and R2, R5, R6, and R9 need to attest routes in their IN
ﬁlters and forward the received route updates in their iBGP ses-
sions if they are adopted as the best routes.
Since TBGP eliminates signature aggregate and routers
can accept/reject received announcements without signatures
signed by neighbors based on their conﬁgurations, we can
easily enable incremental deployability of TBGP. Basically,
we need to modify route attestation procedures in the IN and
OUT ﬁlters. In the IN ﬁlter, TBGP should use any AS number
in AS_PATH to verify the update if it is not ﬁrstly announced
and path is not fully trusted. For instance, as shown in Fig. 3,
we assume that AS 5 receives a route announced by AS 3, (AS
3, AS 2, AS 1) where AS 2 and AS 1 are trusted AS but AS
3 is not trusted for preﬁx
. That is, the route update is not
fully trusted, TBGP should indicate the last trusted AS number,
i.e., AS 2. Thus, TBGP will directly use the public key of AS
2 to attest if the update is partially trusted instead of using the
public key of AS 3. In the OUT ﬁlter, if adopted routes are not
fully trusted, i.e., routes are received without signatures signed
3Here, route attestation means checking if a route complies attestation rules
and then signing/verifying the route.
698
IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 7, NO. 2, APRIL 2012
validate announced preﬁx and AS_PATH, which potentially
provides an efﬁcient approach for attesting routing updates [8].
Speciﬁcally, an IBS system consists of four basic algorithms:
setup, algorithm generates a set of public system parameters
and private master secret; extract, algorithm extracts the pri-
vate key corresponding to a given public key, which takes
the system parameter, the master secret, and the public key (a
public ID) as inputs; sign, algorithm returns the signature of a
given message using the system parameters, a private key, and
the message as inputs; and verify, algorithm uses the system
parameters and an ID to check whether a signature is valid, i.e.,
the message is signed with the corresponding private key and
is not altered. With IBS, TBGP routers do not need to obtain
different public keys before route attestation in advance. Thus,
TBGP eliminates the centralized certiﬁcate distribution and
storage and reduces the complexity of security operations.
One of the beneﬁts of using IBS is to reduce the complexity of
public key distribution and management for individual routers.
However, we note that the focus of TBGP implementation is not
on the key and certiﬁcate management, but on transitive trust
relationship between routers for AS originators and AS_PATH
veriﬁcations. Similar to SPV [8], any other certiﬁcate distribu-
tion and management mechanisms can satisfy our requirement.
Trusted Computing: The Trusted Computing Group (TCG)
[29] has deﬁned a set of hardware and software speciﬁcations
for TC technologies. The root-of-trust of the TCG architecture
is the trusted platform module (TPM), a discrete chip which
performs certain cryptographic functions and provides secure
storage. TPM provides secure storage for high level applications
and services, which is leveraged by TBGP to protect IBS pri-
vate keys and guarantees that a signature can only be generated
when a BGP routine is correctly executed and route attestation
rules (c.f., Section III-B) are enforced without being disabled or
maliciously modiﬁed. Speciﬁcally, a router receives a private
key from a PKG and seals (encrypts) it with a key protected
by its TPM when it joins the Internet. When generating a sig-
nature, the TPM unseals (decrypts) this key only when certain
conﬁgurations of the system can be identiﬁed, which are rep-
resented by platform conﬁguration registers (PCRs) inside the
TPM. Through this mechanism, the private key is always pro-