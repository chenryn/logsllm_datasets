
IPC mechanisms

Proper SSL security
. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Microsoft Silverlight
What is Microsoft Silverlight?
Browser plugin with comparable functionality to Adobe Flash
Cross-browser, cross-platform
Utilizes XAML to render content in browser
Two supported versions
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Microsoft Silverlight
What is Microsoft Silverlight?
The Silverlight application UI is rendered using Extensible
Application Markup Language (XAML)
XAML was introduced as a part of the Windows
Presentation Foundation Framework (WPF) starting with
.NET Framework 3.0
Markup language which declares UI objects that are
mapped to partial class deﬁnitions
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Microsoft Silverlight
What is Microsoft Silverlight?
Hello World with XAML:
H e l l o
World !
XAML objects map to classes or structures and their
attributes map to events or properties
Silverlight plugin renders UI elements
Depending on the programming model employed, XAML
can interact with Javascript, managed code, or both
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Microsoft Silverlight
What is Microsoft Silverlight?
Silverlight 1.0
Javascript + XAML
No access to OS resources
Javascript is required for instantiation of the plugin and
programming logic
The plugin renders XAML content
1 MB install
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Microsoft Silverlight
What is Microsoft Silverlight?
Silverlight 2.0
Javascript + XAML + Managed code and CoreCLR
Based on .NET CLR with a security model which
sandboxes execution of managed code
Also supports interaction with JavaScript
4 MB install
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Programming Models
XAML and Javascript
Script-behind programming model
Plugin is instatiated with Javasript Silverlight API
XAML is parsed into object tree mapping UserControl
objects to Javascript object model
XAML event attributes are handled by Javascript
Javascript can create and load XAML dynamically
Special Downloader object is based on XMLHttpRequest
object
Downloads content asynchronyously, only supports GET,
packages of ﬁles can be downloaded as compressed folders
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Programming Models
XAML, Javascript and Managed Code
Managed code-behind programming model
Only supported by Silverlight 2.0
Plugin can be instantiated with either managed code or
Javascript Silverlight API
If the x:class attribute of the root XAML element exists
the XAML objects will be mapped to the Page class of the
speciﬁed namespace
This attribute is necessary for managed code-behind
interaction
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
The Silverlight plugin must be embedded as an object in the
HTML page:
Tag can either be coded manually
Or generated with Javascript helper functions
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
Helper functions provided by Silverlight.js, included in the
Silverlight SDK
Generated by string concatenation of parameters passed in
call to Silverlight.createObject()
f u n c t i o n
c r e a t e S i l v e r l i g h t (){
S i l v e r l i g h t . c r e a t e O b j e c t (
"Page.xaml" ,
//
Source
parentElement ,
// DOM r e f e r e n c e
to
h o s t i n g
DIV tag .
"myPlugin" ,
//
Unique
plug−i n
ID
v a l u e .
{
// Plug−i n
p r o p e r t i e s .
width : ’ 6 0 0 ’ ,
// Width
of
r e c t a n g u l a r
r e g i o n
of
p l u g i n
h e i g h t : ’ 2 0 0 ’ ,
//
Height
of
r e c t a n g u l a r
r e g i o n
of
p l u g i n
v e r s i o n : ’ 1 . 0 ’
// Plug−i n
v e r s i o n
to
use .
} ,
{ } ,
// No event s
d e f i n e d −− use
empty
l i s t .
"param1 , param2" ) ;
//
InitParams
p r o p e r t y
v a l u e .
}
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
Diﬀerent helper functions if hosted with Microsoft
Silverlight Streaming, on
http://silverlight.live.com
Generated by string concatenation of parameters passed in
application manifest, an XAML ﬁle packaged with
uploaded application
Can be invoked with a control which references Javascript
from Microsft domain. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
The only mandatory parameter is the source
OBJECT source = path to a zipped folder (.XAP ﬁle) on
the server hosting the Silverlight application
Silverlight.createObject() source = path to the XAML ﬁle
on the server hosting the Silverlight application
"Page.xaml" ,
//
Source
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Instantiation
However there are quite a few optional parameters:
enableHtmlAccess = boolean specifying whether the
Sliverlight plugin allows hosted content access to the
browser DOM
initParams = user deﬁned key/value pairs loaded upon
initialization, similar to ﬂashVars
As well as optional events:
onLoad = code initiated when the plugin is succesfully
instantiated; XAML has been parsed and an object tree
has been generated
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Deployment
When deployed with the OBJECT tag:
.XAP ﬁle contains the application dlls, the application
manifest and any localized reference dlls
.XAP ﬁle is cached in the browser upon download
.XAP is just a .ZIP (and can be deployed with that
extension as well)
So I can download the application code, unzip,
dissasemble with a tool like .NET Reﬂector [1]
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Instantiation and Deployment
Deployment
When deployed with the Silverlight.createObject() helper
function:
XAML ﬁle is compiled and an object tree generated
If the x:class attribute is deﬁned in the root element of the
XAML, managed code initializes the plugin
Managed code is streamed to the application on demand
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Silverlight 2.0
HTML Bridge
Managed code can reference DOM elements and Javascript if
the source path is on the same domain as the hosting page
If enableHtmlAccess = true managed code has full access
to DOM and Javascript through the
System.Windows.Browser namespace
HtmlDocument doc = HtmlPage . Document ;
doc . GetElementById ( "button" ) . AttachEvent ( "click" ,
new
EventHandler ( t h i s . CallGlobalJSMethod ) ) ;
p r i v a t e
void
CallGlobalJSMethod ( o b j e c t
o ,
EventArgs
e ) {
HtmlPage . Window . Invoke ( " globalJSMethod " ,
arg1 ) ;
}
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Silverlight 2.0
HTML Bridge
If enableHtmlAccess = false, managed code cannot obtain
references to the DOM or Javascript, except in the
following scenario:
The managed code exposes Scriptable entry points which
take ScriptObject types as input parameters
Javascript calls the Scriptable method and passes DOM
elements or Javascript references to manged code
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with DOM and Javascript
Crossdomain Access
Cross-domain communication with the DOM and Javascript is
governed by enableHtmlAccess parameter as well as the
application manifest
An attribute of the root element of the application
manifest AllowExternalCallersFromXDomain can be set to
the following enum values:
1
No Access: Default setting which prevents all cross domain
access
2
Full Access: Full cross domain access to DOM and
Javascript
3
ScriptableOnly: Only allow access through Scriptable entry
points
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with DOM and Javascript
Crossdomain Access
A second attribute AllowInboundCallsFromXDomain can
be set to:
true: Managed code is exposed to crossdomain Javascript
false: No crossdomain Javascript can access managed code
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web