6https://github.com/asonnino/coconut-chainspace
Fig. 3: The Coconut smart contract library.
the credentials (). The public attributes are simply a list of
clear text strings, while the private attributes are encrypted as
described in Section III-D. Each signing authority monitors
the blockchain at all times, looking for credential requests.
If the request appears on the blockchain (i.e., a transaction
is executed), it means that the callback has been correctly
executed (); each authority issues a partial credential on the
speciﬁed attributes by calling the Issue procedure (). In our
implementation, all partial credentials are in the blockchain;
however, these can also be provided to the user off-chain. Users
collect a threshold number of partial credentials, and aggregate
them to form a full credential (). Then, the users locally
randomize the credential. The last function of the Coconut
library contract is Verify that allows the blockchain—and
anyone else—to check the validity of a given credential ().
A limitation of this architecture is that it is not efﬁcient
for the authorities to continuously monitor the blockchain.
Section IV-C explains how to overcome this limitation by em-
bedding the authorities into the nodes running the blockchain.
B. Ethereum Smart Contract Library
To make Coconut more widely available, we also imple-
ment it in Ethereum—a popular permissionless smart contract
blockchain [53]. We release the Coconut Ethereum smart
contract as an open source library7. The library is written in
Solidity, a high-level JavaScript-like language that compiles
down to Ethereum Virtual Machine (EVM) assembly code.
Ethereum recently hardcoded a pre-compiled smart contract
in the EVM for performing pairing checks and elliptic curve
operations on the alt bn128 curve [14], [45], for efﬁcient
veriﬁcation of zkSNARKs. The execution of an Ethereum
smart contract has an associated ‘gas cost’, a fee that is paid
to miners for executing a transaction. Gas cost is calculated
based on the operations executed by the contract; i.e., the more
operations, the higher the gas cost. The pre-compiled contracts
have lower gas costs than equivalent native Ethereum smart