An important feature of DNSIBC is the idea of domain-
based trust. This is in contrast to standard IBC ap-
proaches requiring the establishment of a global trust
system [2, 1], which engenders a tremendous manage-
ment problem – who gets to manage such a system, even
if it is distributed, and how do they authenticate requests
for private keys – and results in a facility for global key
escrow and key compromise.
Our approach is based on a hierarchical distribution of
trust, similar to that used by traditional PKIs and hierar-
chical IBC schemes [14, 17].6 In contrast to traditional
PKIs, however, our approach links its hierarchical orga-
nization directly to that of the DNS, rather than having
organizations create PKI nodes as a function of their in-
ternal organizational structure. Using a domain-based
approach, whether for IBC or even a traditional PKI, has
the advantage that the things we are intending to authen-
ticate are email senders and network hosts, whose iden-
tities derive directly from domains as structured in the
DNS. This approach also dramatically simpliﬁes the task
faced by someone outside of a given domain who wishes
to communicate securely with someone inside that do-
main, by making it easy for them to ﬁnd out whether or
not there is a cryptographic trust system in place (e.g.
IBC system or PKI) in that domain, and to know where
to look for credentials in that trust system.
6See Section 1.1 for discussion of the shortcomings of current hi-
erarchical IBC schemes.
A domain-based approach also eases autoconﬁguration
and system setup, both for the system administrator, and
the end user. If basic credentials for securing email and
network trafﬁc are organized according to the domain,
a simple default implementation of a system to cre-
ate and manage such credentials can be provided along
with the other tools used to manage a domain, much as
DNSSEC tools now come along with the name server,
bind. Domains with more sophisticated security needs
and resources can replace these simple implementations
with something more complex, but they may be good
enough for many domains that currently ﬁnd themselves
unable to set up and manage a PKI from “scratch”. A
domain-based system which uses DNSSEC to root its
trust has the added advantage that it removes yet another
energy barrier to deployment. Although it is rolling out
slowly, there are very good practical reasons for full de-
ployment of DNSSEC. Trust infrastructures that inherit
from DNSSEC (e.g. by using your domain or zone’s
DNSSEC keys to sign and hence authenticate your do-
main IBC parameters) can take advantage of this mo-
mentum, and are therefore much easier to deploy in prac-
tice than setting up yet another trust hierarchy whose or-
ganization mirrors that of the DNS.
7.2 Use of Identity-Based Cryptography
We have argued strongly above for the practical advan-
tages of domain-based, standardized trust systems. Why,
then should we implement such a system with IBC,
rather than say, having each domain directly certify the
keys [9] or digital certiﬁcates [10] of end-entities with
DNSSEC, and distribute them through the DNS? Or per-
haps have an LDAP server running which maintains a
list To see the advantages of IBC in these situations, it is
illustrative to focus on the clients – IBC has its strongest
advantages there.
7.2.1 Versus Storing Certiﬁcates in DNS
Why use IBC, rather than distributing keys or certiﬁ-
cates via the DNS? Distribution of a domain root cer-
tiﬁcate via the DNS would give us a domain trust model
similar to DNSIBC, and would make it easy for clients
from different domains to ﬁnd the trust root for their
desired communication partner. We could even, in the
extreme, automate a domain’s certiﬁcation authority so
that clients (email users and network hosts) could au-
tomatically request certiﬁcates when they needed them.
Such a system is actually currently implemented in
Microsoft Windows 2000TMActive Directory-based do-
mains that run a Microsoft Certiﬁcation Authority [7].
USENIX Association
12th USENIX Security Symposium 
227
Machines belonging to the domain can be conﬁgured to
automatically request an IPsec certiﬁcate when they ﬁrst
join the domain, and that certiﬁcate is stored in Active
Directory, which also can be used to store and distribute
user email certiﬁcates. That particular approach is lim-
ited to a particular vendor’s client and server software,
and limits access to the stored certiﬁcates to members of
the domain, but it could obviously be generalized.
We suggest a number of reasons why IBC might be a
better approach. First of all, it minimizes the number of
interacting parties in the system, and in particular, the
number of parties that need to update the DNS zone in-
formation. Using IBC, domain parameters need to be
made available by the DNS, but no per-client informa-
tion needs to be there. In a certiﬁcate-based approach,
each client needs to place their certiﬁcate information
into the DNS. An IBC approach also dramatically re-
duces the bandwidth required to access peers’ credential
information. To communicate with any number of peers
in a given domain, I only need to obtain that domain’s
parameters once per revocation interval. I can then com-
municate securely with any email user in the domain, or
any domain host, for which I know an address. I can also
cache that information and make it available to a pop-
ulation of querying hosts using standard DNS caching
software.
Another advantage of this approach is that using it, I can
communicate securely with any host or email user whose
address I know – but only those whose addresses I know.
If every user in a domain has their email address directly
represented in the DNS in the form of their digital cer-
tiﬁcate, “ﬁshing expeditions” to ﬁnd user identities or
the distribution of hosts become much easier.
And ﬁnally, this approach preserves the appealing use
model of IBC. I can send encrypted email to a user that
has not yet bothered to get the private key necessary
to decrypt it, or even perhaps to install the software or
plug-in necessary to support IBC. Having received such
an encrypted email, that user is then considerably more
motivated to perform the necessary steps to decrypt it,
after which he will continue to seamlessly participate in
the system. Similarly, it becomes possible to support
both autoconﬁguration of IPsec hosts who can retrieve
their own keys as part of their setup process, and seam-
less IPsec termination by trusted proxies provided by the
domain for devices not capable of terminating IPsec on
their own.
7.2.2 Versus Dynamic Certiﬁcate Generation
Lastly, we might consider using instead a system with
dynamic or “lazy” certiﬁcate generation. An LDAP cer-
tiﬁcate server could be set up which, if a user or host
already has a certiﬁcate, returns it. If not, it generates
a key pair, makes the certiﬁcate available to the outside
world, and keeps the private key to be later transmitted
to the user or host.
Our IBE-based approach has several advantages over a
system such as this. First, in IBE, the process of generat-
ing a user’s private key is decoupled from the generation
of their public key (which is, of course, just their iden-
tity.) This allows us to introduce an “air gap” in between
the private key generator and the outside world: the pri-
vate key generator need only be accessible by users or
machines within the domain. In contrast, our hypothet-
ical LDAP certiﬁcate server, which is on the outside of
a domain’s ﬁrewall, must maintain connectivity with the
private key generator at all times, introducing a possible
path for an attacker to the private key repository.
Furthermore, this LDAP certiﬁcate server must either
validate requests or generate key pairs for every request
that is made. For instance, the LDAP server either main-
tains an up-to-date list of email addresses, which an at-
tacker could then quickly probe; or, it generates key
pairs for every requested email address, which opens up
vulnerability to denial-of-service by ﬂooding the server
with bogus requests.
In our IBE-based approach, no
such attacks are possible.
Lastly, a major strength of integrating identity-based en-
cryption parameters into the Domain Name Service is
the propagation and redundancy the DNS provides via
caching.
In our hypothetical LDAP system, a single
service must be contacted in order to send encrypted
email to a user in a domain. In our scheme, the identity-
based encryption parameters for that domain propagate
through the DNS and can be cached locally.
8 Conclusions
We have presented an approach to protecting email and
network trafﬁc using identity-based cryptography and
domain-based trust. We think that this system provides
a simple and easy way to establish widespread support
for secured communication, through its thorough sup-
port for autoconﬁguration, and identity-based cryptog-
228
12th USENIX Security Symposium 
USENIX Association
[13] Free S/WAN Project. Free S/WAN.
http://www.
freeswan.org.
[14] C. Gentry and A. Silverberg. Hierarchical ID-based
In Advances in Cryptology - Asiacrypt
cryptography.
2002. Springer-Verlag, 2002.
[15] D. Harkins and D. Carrel. The Internet Key Exchange
IETF - Network Working Group, The Internet
(IKE).
Society, November 1998. RFC 2409.
[16] F. Hess. Exponent group signature schemes and efﬁ-
cient identity based signature schemes based on pairings.
http://eprint.iacr.org/2002/012.
[17] J. Horwitz and B. Lynn. Toward hierarchical identity-
based encryption. In Proc. EUROCRYPT 02, pages 466–
481. Springer-Verlag, 2002. LNCS 2332.
[18] S. Kent and R. Atkinson. Security Architecture for the
Internet Protocol. IETF - Network Working Group, The
Internet Society, November 1998. RFC 2401.
[19] D. Massey and S. Rose. Limiting the Scope of the KEY
Resource Record. IETF - Network Working Group, The
Internet Society, December 2002. RFC 3445.
[20] D. Maughan, M. Schertler, M. Schneider, and J. Turner.
Internet Security Association and Key Management Pro-
tocol (ISAKMP). IETF - Network Working Group, The
Internet Society, November 1998. RFC 2408.
[21] P. Mockapetris. Domain Names – Concepts and Facili-
ties. IETF - Network Working Group, The Internet So-
ciety, November 1987. RFC 1034.
[22] P. Mockapetris. Domain Names – Implementation and
Speciﬁcation. IETF - Network Working Group, The In-
ternet Society, November 1987. RFC 1035.
[23] K. Paterson. ID-based signatures from pairings on ellip-
tic curves. http://eprint.iacr.org/2002/004.
[24] D. Piper. The Internet IP Security Domain of Interpreta-
tion for ISAKMP. IETF - Network Working Group, The
Internet Society, November 1998. RFC 2407.
[25] R. Sakai, K. Ohgishi, and M. Kasahara. Cryptosys-
tems based on pairing. In Proceedings of the Symposium
on Cryptography and Information Security (SCIS 2000),
Okinawa, Japan, January 2000.
[26] A. Shamir. Identity-based cryptosystems and signature
schemes.
In G. R. Blakley and D. C. Chaum, editors,
Proc. CRYPTO 84, pages 47–53. Springer, 1985. Lecture
Notes in Computer Science No. 196.
[27] N. Smart. An identity based authenticated key agreement
protocol based on the weil pairing. Electronics Letters,
38:630–632, 2002.
[28] Stanford Applied Cryptography Group.
IBE secure e-
mail. http://crypto.stanford.edu/ibe.
[29] B. Wellington. dnsjava: An implementation of DNS in
Java. http://www.xbill.org/dnsjava/.
raphy’s novel solution to the key distribution problem.
We have built an initial implementation of this system
in Linux as a proof of concept of its effectiveness and
usability.
Acknowledgments
The authors would like to thank the referees for their
many helpful comments.
References
[1] G. Appenzeller and B. Lynn. Minimal overhead IP se-
curity using identity-based encryption. Submitted for
publication, http://rooster.stanford.edu/~ben/
pubs/ipibe.pdf.
[2] D. Boneh and M. Franklin.
Identity-based encryption
from the Weil pairing. In Proc. CRYPTO 01, pages 213–
229. Springer-Verlag, 2001. LNCS 2139.
[3] J. Cha and J. Cheon. An identity-based signature from
http://eprint.iacr.
gap difﬁe-hellman groups.
org/2002/018.
[4] L. Chen, K. Harrison, N. P. Smart, and D. Soldera. Ap-
plications of multiple trust authorities in pairing based
cryptosystems.
In Proceedings of Infrastructure Secu-
InfraSec 2002, pages 260–275. Springer-Verlag,
rity:
2002. LNCS 2437.
[5] L. Chen and C. Kudla. Identity based authenticated key
agreement from pairings. http://eprint.iacr.org/
2002/184.
[6] C. Cocks. An identity based encryption scheme based on
quadratic residues. In Cryptography and Coding, pages
360–363. Springer-Verlag, 2001. LNCS 2260.
[7] J. de Clercq. PKI comes of age. Windows & .NET Mag-
azine, pages 47–53, May 2002.
[8] S. Dusse, P. Hoffman, B. Ramsdell, L. Lundblade, and
L. Repka. S/MIME Version 2 Message Speciﬁcation.
IETF - Network Working Group, The Internet Society,
March 1998. RFC 2311.
[9] D. Eastlake. Domain Name System Security Extensions.
IETF - Network Working Group, The Internet Society,
March 1999. RFC 2535.
[10] D. Eastlake and O. Gudmundsson. Storing Certiﬁcates
in the Domain Name System (DNS).
IETF - Network
Working Group, The Internet Society, March 1999. RFC
2538.
[11] U. Feige, A. Fiat, and A. Shamir. Zero knowledge proofs
of identity. Journal of Cryptology, 1(2):77–94, 1988.
[12] A. Fiat and A. Shamir. How to prove yourself: practi-
cal solutions to identiﬁcation and signature problems. In
A. M. Odlyzko, editor, Proc. CRYPTO 86, pages 186–
194. Springer, 1987. Lecture Notes in Computer Science
No. 263.
USENIX Association
12th USENIX Security Symposium 
229