{"created": "2020-01-30T14:24:34.977Z", "created_by_ref": "", "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* eventvwr.exe can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)", "external_references": [{"external_id": "T1548.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1548/002"}, {"description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.", "source_name": "Davidson Windows", "url": "http://www.pretentiousname.com/misc/win7_uac_whitelist2.html"}, {"description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.", "source_name": "TechNet How UAC Works", "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works"}, {"description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.", "source_name": "SANS UAC Bypass", "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass"}, {"description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.", "source_name": "MSDN COM Elevation", "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx"}, {"description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.", "source_name": "enigma0x3 Fileless UAC Bypass", "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/"}, {"description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.", "source_name": "enigma0x3 sdclt app paths", "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/"}, {"description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.", "source_name": "enigma0x3 sdclt bypass", "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/"}, {"description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.", "source_name": "TechNet Inside UAC", "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx"}, {"description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.", "source_name": "Fortinet Fareit", "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware"}, {"description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.", "source_name": "Github UACMe", "url": "https://github.com/hfiref0x/UACME"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-04-21T12:35:39.112Z", "name": "Bypass User Account Control", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Stefan Kanthak", "Casey Smith"], "x_mitre_data_sources": ["Process: Process Creation", "Command: Command Execution", "Windows Registry: Windows Registry Key Modification", "Process: Process Metadata"], "x_mitre_defense_bypassed": ["Windows User Account Control"], "x_mitre_deprecated": false, "x_mitre_detection": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The eventvwr.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The sdclt.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe and [HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["Administrator"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "User"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "2.1"}, {"created": "2017-05-31T21:31:12.675Z", "created_by_ref": "", "description": "Adversaries may take actions to hide the deployment of new, or modification of existing files to obfuscate their activities. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools. (Citation: WindowsIR Anti-Forensic Techniques)", "external_references": [{"external_id": "T1099", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1099"}, {"description": "Carvey, H. (2013, July 23). HowTo: Determine/Detect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.", "source_name": "WindowsIR Anti-Forensic Techniques", "url": "http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2020-02-18T16:56:57.039Z", "name": "Timestomp", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Romain Dumont, ESET"], "x_mitre_defense_bypassed": ["Host forensic analysis"], "x_mitre_detection": "Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator", "SYSTEM"], "x_mitre_platforms": ["Linux", "Windows", "macOS"], "x_mitre_version": "1.1"}
{"created": "2021-03-17T15:28:10.689Z", "created_by_ref": "", "description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), tracert, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.", "external_references": [{"external_id": "T1016.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1016/001"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "discovery"}], "modified": "2021-03-25T17:03:26.632Z", "name": "Internet Connection Discovery", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Process: Process Creation", "Command: Command Execution"], "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Windows", "Linux", "macOS"], "x_mitre_version": "1.0"}
{"created": "2020-01-30T14:34:44.992Z", "created_by_ref": "", "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The sudo command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a timestamp_timeout, which is the amount of time in minutes between instances of sudo before it will re-prompt for a password. This is because sudo has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at /var/db/sudo with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a tty_tickets variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, /etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like user1 ALL=(ALL) NOPASSWD: ALL.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, /var/db/sudo's timestamp can be monitored to see if it falls within the timestamp_timeout range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if tty_tickets is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled tty_tickets to potentially make scripting easier by issuing echo \\'Defaults !tty_tickets\\' >> /etc/sudoers.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued killall Terminal. As of macOS Sierra, the sudoers file has tty_tickets enabled by default.", "external_references": [{"external_id": "T1548.003", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1548/003"}, {"description": "Todd C. Miller. (2018). Sudo Man Page. Retrieved March 19, 2018.", "source_name": "sudo man page 2018", "url": "https://www.sudo.ws/"}, {"description": "Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.", "source_name": "OSX.Dok Malware", "url": "https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/"}, {"description": "Amit Serper. (2018, May 10). ProtonB What this Mac Malware Actually Does. Retrieved March 19, 2018.", "source_name": "cybereason osx proton", "url": "https://www.cybereason.com/blog/labs-proton-b-what-this-mac-malware-actually-does"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2022-03-14T16:28:19.781Z", "name": "Sudo and Sudo Caching", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Command: Command Execution", "Process: Process Metadata", "File: File Modification", "Process: Process Creation"], "x_mitre_detection": "On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the LOG_INPUT and LOG_OUTPUT directives in the /etc/sudoers file.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["root"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Linux", "macOS"], "x_mitre_version": "1.0"}
{"created": "2020-02-20T21:09:55.995Z", "created_by_ref": "", "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)", "external_references": [{"external_id": "T1560.003", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1560/003"}, {"description": "ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.", "source_name": "ESET Sednit Part 2", "url": "http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "collection"}], "modified": "2020-03-25T22:48:14.605Z", "name": "Archive via Custom Method", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["File: File Creation", "Script: Script Execution"], "x_mitre_detection": "Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2019-08-30T18:03:05.864Z", "created_by_ref": "", "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)", "external_references": [{"external_id": "T1578", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1578"}, {"description": "Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.", "source_name": "Mandiant M-Trends 2020", "url": "https://content.fireeye.com/m-trends/rpt-m-trends-2020"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2021-04-20T14:51:01.759Z", "name": "Modify Cloud Compute Infrastructure", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Instance: Instance Start", "Instance: Instance Stop", "Instance: Instance Modification", "Volume: Volume Metadata", "Snapshot: Snapshot Creation", "Instance: Instance Creation", "Snapshot: Snapshot Deletion", "Snapshot: Snapshot Metadata", "Instance: Instance Metadata", "Volume: Volume Modification", "Snapshot: Snapshot Modification", "Volume: Volume Creation", "Volume: Volume Deletion", "Instance: Instance Deletion"], "x_mitre_detection": "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["IaaS"], "x_mitre_version": "1.1"}
{"created": "2023-02-21T20:46:57.170Z", "created_by_ref": "", "description": "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversary\u2019s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) \n\nMalvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ", "external_references": [{"external_id": "T1583.008", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1583/008"}, {"description": "BBC. (2011, March 29). Spotify ads hit by malware attack. Retrieved February 21, 2023.", "source_name": "BBC-malvertising", "url": "https://www.bbc.com/news/technology-12891182"}, {"description": "FBI. (2022, December 21). Cyber Criminals Impersonating Brands Using Search Engine Advertisement Services to Defraud Users. Retrieved February 21, 2023.", "source_name": "FBI-search", "url": "https://www.ic3.gov/Media/Y2022/PSA221221"}, {"description": "Hegel, Tom. (2023, January 19). Breaking Down the SEO Poisoning Attack | How Attackers Are Hijacking Search Results. Retrieved February 21, 2023.", "source_name": "sentinelone-malvertising", "url": "https://www.sentinelone.com/blog/breaking-down-the-seo-poisoning-attack-how-attackers-are-hijacking-search-results/"}, {"description": "Miller, Sarah. (2023, February 2). A surge of malvertising across Google Ads is distributing dangerous malware. Retrieved February 21, 2023.", "source_name": "spamhaus-malvertising", "url": "https://www.spamhaus.com/resource-center/a-surge-of-malvertising-across-google-ads-is-distributing-dangerous-malware/"}, {"description": "Tal, Nati. (2022, December 28). \u201cMasquerAds\u201d \u2014 Google\u2019s Ad-Words Massively Abused by Threat Actors, Targeting Organizations, GPUs and Crypto Wallets. Retrieved February 21, 2023.", "source_name": "Masquerads-Guardio", "url": "https://labs.guard.io/masquerads-googles-ad-words-massively-abused-by-threat-actors-targeting-organizations-gpus-42ae73ee8a1e"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "resource-development"}], "modified": "2023-04-17T15:32:39.470Z", "name": "Malvertising", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Tom Hegel", "Goldstein Menachem", "Hiroki Nagahama, NEC Corporation", "Manikantan Srinivasan, NEC Corporation India", "Pooja Natarajan, NEC Corporation India", "Juan Carlos Campuzano - Mnemo-CERT"], "x_mitre_data_sources": ["Internet Scan: Response Content"], "x_mitre_deprecated": false, "x_mitre_detection": "", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}
{"created": "2017-05-31T21:30:55.471Z", "created_by_ref": "", "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)", "external_references": [{"external_id": "T1069", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1069"}, {"description": "Kubernetes. (n.d.). Authorization Overview. Retrieved June 24, 2021.", "source_name": "K8s Authorization Overview", "url": "https://kubernetes.io/docs/reference/access-authn-authz/authorization/"}, {"description": "Red Team Labs. (2018, April 24). Hidden Administrative Accounts: BloodHound to the Rescue. Retrieved October 28, 2020.", "source_name": "CrowdStrike BloodHound April 2018", "url": "https://www.crowdstrike.com/blog/hidden-administrative-accounts-bloodhound-to-the-rescue/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "discovery"}], "modified": "2023-04-15T17:26:53.365Z", "name": "Permission Groups Discovery", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Daniel Prizmant, Palo Alto Networks", "Yuval Avrahami, Palo Alto Networks", "Microsoft Threat Intelligence Center (MSTIC)"], "x_mitre_data_sources": ["Group: Group Enumeration", "Command: Command Execution", "Process: Process Creation", "Group: Group Metadata", "Application Log: Application Log Content"], "x_mitre_deprecated": false, "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Monitor container logs for commands and/or API calls related to listing permissions for pods and nodes, such as kubectl auth can-i.(Citation: K8s Authorization Overview)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Azure AD", "Office 365", "SaaS", "IaaS", "Linux", "macOS", "Google Workspace", "Containers"], "x_mitre_version": "2.5"}, {"created": "2017-05-31T21:31:25.454Z", "created_by_ref": "", "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ", "external_references": [{"external_id": "T1114", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1114"}, {"description": "McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019.", "source_name": "Microsoft Tim McMichael Exchange Mail Forwarding 2", "url": "https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "collection"}], "modified": "2023-04-12T20:46:04.871Z", "name": "Email Collection", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)"], "x_mitre_data_sources": ["File: File Access", "Logon Session: Logon Session Creation", "Application Log: Application Log Content", "Command: Command Execution", "Network Traffic: Network Connection Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Office 365", "Google Workspace", "macOS", "Linux"], "x_mitre_version": "2.4"}, {"created": "2020-02-11T18:42:07.281Z", "created_by_ref": "", "description": "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* reg save HKLM\\sam sam\n* reg save HKLM\\system system\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n", "external_references": [{"external_id": "T1003.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1003/002"}, {"description": "Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.", "source_name": "GitHub Creddump7", "url": "https://github.com/Neohapsis/creddump7"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2022-06-15T16:17:19.049Z", "name": "Security Account Manager", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Ed Williams, Trustwave, SpiderLabs"], "x_mitre_data_sources": ["File: File Access", "Command: Command Execution", "Windows Registry: Windows Registry Key Access"], "x_mitre_deprecated": false, "x_mitre_detection": "Hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2020-10-02T16:56:49.744Z", "created_by_ref": "", "description": "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).", "external_references": [{"external_id": "T1596.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1596/002"}, {"description": "NTT America. (n.d.). Whois Lookup. Retrieved October 20, 2020.", "source_name": "WHOIS", "url": "https://www.whois.net/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-04-15T03:50:44.113Z", "name": "WHOIS", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}
{"created": "2019-12-19T19:43:34.507Z", "created_by_ref": "", "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.", "external_references": [{"external_id": "T1542.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1542/001"}, {"description": "Wikipedia. (n.d.). BIOS. Retrieved January 5, 2016.", "source_name": "Wikipedia BIOS", "url": "https://en.wikipedia.org/wiki/BIOS"}, {"description": "Wikipedia. (2017, July 10). Unified Extensible Firmware Interface. Retrieved July 11, 2017.", "source_name": "Wikipedia UEFI", "url": "https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface"}, {"description": "UEFI Forum. (n.d.). About UEFI Forum. Retrieved January 5, 2016.", "source_name": "About UEFI", "url": "http://www.uefi.org/about"}, {"description": "Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.", "source_name": "MITRE Trustworthy Firmware Measurement", "url": "http://www.mitre.org/publications/project-stories/going-deep-into-the-bios-with-mitre-firmware-security-research"}, {"description": "Butterworth, J. (2013, July 30). Copernicus: Question Your Assumptions about BIOS Security. Retrieved December 11, 2015.", "source_name": "MITRE Copernicus", "url": "http://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/copernicus-question-your-assumptions-about"}, {"description": "Beek, C., Samani, R. (2017, March 8). CHIPSEC Support Against Vault 7 Disclosure Scanning. Retrieved March 13, 2017.", "source_name": "McAfee CHIPSEC Blog", "url": "https://securingtomorrow.mcafee.com/business/chipsec-support-vault-7-disclosure-scanning/"}, {"description": "Intel. (2017, March 18). CHIPSEC Platform Security Assessment Framework. Retrieved March 20, 2017.", "source_name": "Github CHIPSEC", "url": "https://github.com/chipsec/chipsec"}, {"description": "Intel Security. (2005, July 16). HackingTeam's UEFI Rootkit Details. Retrieved March 20, 2017.", "source_name": "Intel HackingTeam UEFI Rootkit", "url": "http://www.intelsecurity.com/advanced-threat-research/content/data/HT-UEFI-rootkit.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-03-30T21:01:49.493Z", "name": "System Firmware", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Jean-Ian Boutin, ESET", "McAfee", "Ryan Becwar"], "x_mitre_data_sources": ["Firmware: Firmware Modification"], "x_mitre_defense_bypassed": ["Host intrusion prevention systems", "Anti-virus", "File monitoring"], "x_mitre_detection": "System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "SYSTEM"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2020-10-02T16:51:50.306Z", "created_by_ref": "", "description": "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).", "external_references": [{"external_id": "T1594", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1594"}, {"description": "Bischoff, P. (2020, October 15). Broadvoice database of more than 350 million customer records exposed online. Retrieved October 20, 2020.", "source_name": "Comparitech Leak", "url": "https://www.comparitech.com/blog/vpn-privacy/350-million-customer-records-exposed-online/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-04-15T03:53:33.023Z", "name": "Search Victim-Owned Websites", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Application Log: Application Log Content"], "x_mitre_detection": "Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}
{"created": "2020-02-21T21:15:33.222Z", "created_by_ref": "", "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The Get-MsolRole PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command az ad user get-member-groups will list groups associated to a user account for Azure while the API endpoint GET https://cloudidentity.googleapis.com/v1/groups lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS GetBucketAcl API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.", "external_references": [{"external_id": "T1069.003", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1069/003"}, {"description": "Amazon Web Services. (n.d.). Retrieved May 28, 2021.", "source_name": "AWS Get Bucket ACL", "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html"}, {"description": "Dror Alon. (2022, December 8). Compromised Cloud Compute Credentials: Case Studies From the Wild. Retrieved March 9, 2023.", "source_name": "Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022", "url": "https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials/"}, {"description": "Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.", "source_name": "Black Hills Red Teaming MS AD Azure, 2018", "url": "https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/"}, {"description": "Google. (n.d.). Retrieved March 16, 2021.", "source_name": "Google Cloud Identity API Documentation", "url": "https://cloud.google.com/identity/docs/reference/rest"}, {"description": "Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.", "source_name": "Microsoft AZ CLI", "url": "https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest"}, {"description": "Microsoft. (n.d.). Get-MsolRole. Retrieved October 6, 2019.", "source_name": "Microsoft Msolrole", "url": "https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrole?view=azureadps-1.0"}, {"description": "Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.", "source_name": "GitHub Raindance", "url": "https://github.com/True-Demon/raindance"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "discovery"}], "modified": "2023-03-21T13:33:40.625Z", "name": "Cloud Groups", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Regina Elwell", "Isif Ibrahima, Mandiant"], "x_mitre_data_sources": ["Group: Group Enumeration", "Application Log: Application Log Content", "Process: Process Creation", "Command: Command Execution", "Group: Group Metadata"], "x_mitre_deprecated": false, "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Azure AD", "Office 365", "SaaS", "IaaS", "Google Workspace"], "x_mitre_version": "1.4"}, {"created": "2020-03-13T11:42:14.444Z", "created_by_ref": "", "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the FailureCommand key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe Performance key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the Performance key is not already present and if an adversary-controlled user has the Create Subkey permission, adversaries may create the Performance key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the Parameters key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll.(Citation: malware_hides_service)", "external_references": [{"external_id": "T1574.011", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1574/011"}, {"description": "@r0wdy_. (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.", "source_name": "Tweet Registry Perms Weakness", "url": "https://twitter.com/r0wdy_/status/936365549553991680"}, {"description": "Cl\u00e9ment Labro. (2020, November 12). Windows RpcEptMapper Service Insecure Registry Permissions EoP. Retrieved August 25, 2021.", "source_name": "insecure_reg_perms", "url": "https://itm4n.github.io/windows-registry-rpceptmapper-eop/"}, {"description": "Hull, D.. (2014, May 3). Kansa: Service related collectors and analysis. Retrieved October 10, 2019.", "source_name": "Kansa Service related collectors", "url": "https://trustedsignal.blogspot.com/2014/05/kansa-service-related-collectors-and.html"}, {"description": "Lawrence Abrams. (2004, September 10). How Malware hides and is installed as a Service. Retrieved August 30, 2021.", "source_name": "malware_hides_service", "url": "https://www.bleepingcomputer.com/tutorials/how-malware-hides-as-a-service/"}, {"description": "Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020.", "source_name": "Autoruns for Windows", "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns"}, {"description": "Microsoft. (2018, May 31). Registry Key Security and Access Rights. Retrieved March 16, 2017.", "source_name": "Registry Key Security", "url": "https://docs.microsoft.com/en-us/windows/win32/sysinfo/registry-key-security-and-access-rights?redirectedfrom=MSDN"}, {"description": "Microsoft. (2021, August 5). HKLM\\SYSTEM\\CurrentControlSet\\Services Registry Tree. Retrieved August 25, 2021.", "source_name": "microsoft_services_registry_tree", "url": "https://docs.microsoft.com/en-us/windows-hardware/drivers/install/hklm-system-currentcontrolset-services-registry-tree"}, {"description": "Trend Micro. (2012, October 9). TROJ_ZEGOST. Retrieved September 2, 2021.", "source_name": "troj_zegost", "url": "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_zegost"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-03-30T21:01:38.651Z", "name": "Services Registry Permissions Weakness", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Travis Smith, Tripwire", "Matthew Demaske, Adaptforward"], "x_mitre_data_sources": ["Command: Command Execution", "Service: Service Modification", "Windows Registry: Windows Registry Key Modification", "Process: Process Creation"], "x_mitre_defense_bypassed": ["Application Control"], "x_mitre_deprecated": false, "x_mitre_detection": "Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["SYSTEM"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "User"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.1"}
{"created": "2020-10-02T16:57:45.044Z", "created_by_ref": "", "description": "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).", "external_references": [{"external_id": "T1596.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1596/001"}, {"description": "Hacker Target. (n.d.). DNS Dumpster. Retrieved October 20, 2020.", "source_name": "DNS Dumpster", "url": "https://dnsdumpster.com/"}, {"description": "CIRCL Computer Incident Response Center. (n.d.). Passive DNS. Retrieved October 20, 2020.", "source_name": "Circl Passive DNS", "url": "https://www.circl.lu/services/passive-dns/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-04-15T03:49:13.409Z", "name": "DNS/Passive DNS", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}