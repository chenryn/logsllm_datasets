𝑠1. Moreover, if 𝑛 − 1 of the links between between 𝑠0 and 𝑠1 fail
simultaneously, the traffic is no more than 1 − 𝑛−1
𝑝 .
Next, consider PCF-TF, and assume that all possible tunnels
between 𝑠 and 𝑡 are used. There are 𝑝𝑛𝑚−1 possible tunnels. We
will show that PCF-TF can only guarantee traffic of 1/𝑛 units from
𝑠0 to 𝑠𝑚 under 𝑛 − 1 simultaneous link failures. To see this, observe
that the reservation across all tunnels between 𝑠 and 𝑡 is at most 1
(constrained by the capacity of all links between 𝑠0 and 𝑠1). Let 𝑟𝑖
denote the reservation on all tunnels that use the 𝑖𝑡ℎ link between
𝑖=1 𝑟𝑖 ≤ 1, and there must exist at least one link
𝑗 between 𝑠1 and 𝑠2 such that 𝑟 𝑗 ≤ 1/𝑛. Consider a failure scenario
where all links between 𝑠1 and 𝑠2 except 𝑗 fail. Under this scenario,
PCF-TF can guarantee at most 1/𝑛 units of traffic from 𝑠0 to 𝑠𝑚.
𝑠1 and 𝑠2. Then,𝑛
Note that 1 − 𝑛−1
> 0 whenever 𝑝 > 𝑛 > 1.
Consider the case where 𝑝 = 𝑛2. Then, as 𝑛 gets larger, the amount
of traffic carried in the optimal solution converges to 1, while PCF-
TF converges to 0. □
(𝑝−𝑛)(𝑛−1)
𝑝 − 1
As discussed in §2, these issues with FFC and PCF-TF stem from
the fact that reservations are made over entire tunnels, are tightly
𝑛 =
𝑝𝑛
Link capacity: 1 Link capacity: 1/p, p > n s0s1s2s3.  .  . sm. .  . p links. .  . n links. .  . n linksPCF: Provably Resilient Flexible Routing
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
coupled to a particular network path, and are pre-allocated inde-
pendent of any specific failure scenario. When a link in the tunnel
fails, the corresponding capacity is unavailable in other links along
the tunnel.
Logical sequences. PCF is motivated by the fact that more
flexible methods of responding to failures can potentially address
the limitations of FFC and PCF-TF highlighted by Proposition 3.
However, even with more flexible response, PCF must proactively
decide prior to any failure scenario how much traffic to admit so
the network does not experience congestion over a given set of
failure scenarios. Not all ways of making routing more flexible are
amenable to provable congestion-free guarantees.
Instead, PCF considers a more carefully crafted flexible network
response strategy, which we show is amenable to provable guaran-
tees. Specifically, PCF introduces the notion of a logical sequence
(LS). A LS 𝑞 from 𝑠 to 𝑡 consists of a series of routers 𝑠, 𝑣1, ..., 𝑣𝑚, 𝑡
that we refer to as logical hops. Consecutive logical hops in a LS
need not have a direct link between them, and in fact any pair of
routers in the network could be consecutive logical hops. Traffic
from 𝑠 to 𝑡 is required to traverse the logical hops 𝑣1, 𝑣2, . . . , 𝑣𝑚, 𝑡,
with significant flexibility in terms of how traffic is carried between
two consecutive logical hops. In particular, traffic may be carried
over physical tunnels (like FFC), or other LSs. We refer to each of
𝑠𝑣1, 𝑣1𝑣2, ..., 𝑣𝑚𝑡 as a logical segment of 𝑞. Each LS 𝑞 is associated
with a reservation 𝑏𝑞, which indicates that every segment of 𝑞 is
guaranteed to carry 𝑏𝑞 traffic under all failure scenarios that PCF
is designed for.
We next illustrate the potential benefits of LSs using Fig. 4. Con-
sider the LS 𝑞 which traverses the logical hops 𝑠0, 𝑠1, ..., 𝑠𝑚. Let each
link be a tunnel. Traffic between consecutive logical hops is carried
by the tunnels (links) connecting those hops. For example, traffic
between 𝑠1 and 𝑠2 is carried on the 𝑛 tunnels (links) connecting the
nodes. When any link fails, only the reservation in the relevant
segment of 𝑞 is impacted – e.g., if a link between 𝑠1 and 𝑠2 fails,
there is no impact on the reservation on the segment between 𝑠0
and 𝑠1. This is unlike FFC and PCF-TF where such a failure would
cause part of the capacity on other links to be unavailable. The
corollary to Proposition 3 below captures the resulting benefits.
Corollary 3.1. For the topology in Fig. 4, PCF’s performance with
a single LS and polynomially many tunnels can be arbitrarily better
than PCF-TF and FFC with exponentially many tunnels.
Proof. We have already shown that FFC and PCF-TF can be ar-
bitrarily worse than optimal. Consider PCF where LS 𝑞 correspond-
ing to 𝑠0, 𝑠1, ..., 𝑠𝑚 is used, with each link being a tunnel. There are
𝑝 + 𝑛(𝑚 − 1) tunnels in total. Under any scenario involving 𝑛 − 1
simultaneous link failures, the first segment (𝑠0𝑠1) has a capacity of
at least 1 − 𝑛−1
𝑝 available. All other segments have at least capacity
1 available on any 𝑛 − 1 failure scenario. Thus, 𝑞 can carry at least
1 − 𝑛−1
traffic, which meets the optimal throughput. □
We note that using the LS has at least two sources of flexibility
beyond classic tunneling. First, in classic tunneling, traffic on each
tunnel only carries traffic corresponding to the end points of the
tunnel. Second, when there is a failure, only the source node of
a tunnel may respond. In contrast, with a LS, each segment may
carry traffic corresponding to different sources and destinations
- for instance, in Fig. 4, the segment (and hence tunnel) between
𝑝
Figure 5: Illustrating conditional logical sequences
Optimal
1
FFC PCF-TF
0
2/3
PCF-LS
PCF-CLS
4/5
1
R3
0
Table 1: Throughput of different schemes for the topology
in Fig 5 under 2 simultaneous link failures.
𝑠1 and 𝑠2 may carry traffic between 𝑠0 and 𝑠𝑚. Further, if the link
between 𝑠1 and 𝑠2 fails, 𝑠1 may redistribute the traffic that arrives
at 𝑠1 onto the tunnels between 𝑠1 and 𝑠2.
Bandwidth allocation with LSs. We next show that bandwidth
allocation with LSs can be tractably formulated. For each pair with
source 𝑠 and destination 𝑑, let 𝐿(𝑠, 𝑡) denote the set of LSs from 𝑠
to 𝑡 (with 𝑇 (𝑠, 𝑡) denoting the set of tunnels as before). Note that
each source destination pair is associated with zero or more LSs,
and zero or more tunnels. Then, the model seeks to reserve 𝑏𝑞 on
each LS, and reserve 𝑎𝑙 on each tunnel 𝑙 as discussed below:
Θ(𝑧)
𝑎𝑙 (1 − 𝑦𝑙) + 
𝑏𝑞
𝑞∈𝐿(𝑠,𝑡)
(𝑃2) max
𝑧,𝑎,𝑏
s.t. 
≥ 
𝑙∈𝑇 (𝑠,𝑡)
𝑏𝑞′ + 𝑧𝑠𝑡𝑑𝑠𝑡 ∀𝑠, 𝑡 ∈ 𝑉 ,∀𝑦 ∈ 𝑌
(7)
𝑞′∈𝑄(𝑠,𝑡)
𝑏𝑞 ≥ 0 ∀𝑠, 𝑡 ∈ 𝑉 , 𝑞 ∈ 𝐿(𝑠, 𝑡)
Constraints (2), (3).
The most significant change relative to (4) pertains to the capacity
constraint (first constraint). The LHS of this constraint captures
that traffic from 𝑠 to 𝑡 could use both the reservations (𝑎𝑙) on the
physical tunnels between 𝑠 and 𝑡, and the reservations (𝑏𝑞) on the
LSs between 𝑠 and 𝑡. While the capacity on tunnel 𝑙 is only available
when all links on the tunnel are alive (𝑦𝑙 = 0), the reservation on the
LS 𝑞 is always available (though we relax this requirement in §3.4).
The RHS of this constraint corresponds to the total traffic that must
be carried from 𝑠 to 𝑡. With FFC, this corresponds entirely to the
bandwidth allocated to traffic that originates at 𝑠, and terminates
at 𝑡. However, in PCF, it is possible that 𝑠𝑡 is a segment of a LS
𝑞′ (between a source 𝑠′ and destination 𝑡′). Let 𝑄(𝑠, 𝑡) denote the
set of all such LSs. Then, the RHS also accounts for reservations
on all such 𝑞′ ∈ 𝑄(𝑠, 𝑡). We refer to (P2) as the PCF-LS model.
Note that the reservation on a LS is supported by the reservations
on physical tunnels and other LSs. The reservations on physical
tunnels themselves are supported by the capacity of underlying
physical links.
s1324Link capacity: 1 Link capacity: 1/2 567tSIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Chuan Jiang, Sanjay Rao, and Mohit Tawarmalani
3.4 Conditional Logical Sequences
As described in §3.3, each segment in a LS must guarantee the
reservation associated with the LS over the entire set of failures. We
next consider a generalization, that we call conditional LSs which
only guarantee the reservation over a subset of failure scenarios. A
conditional LS 𝑞 is associated with a condition ℎ𝑞, and a reservation
𝑏𝑞. The reservation 𝑏𝑞 must be guaranteed over each segment
of 𝑞 for all scenarios where the condition ℎ𝑞 is met. An example
condition is a given set of links being alive or dead.
Illustrating benefits of conditional LSs. We illustrate by con-
sidering Fig. 5. Table 1 shows the traffic guaranteed by different
schemes for traffic from source 𝑠 to destination 𝑡 under single and
two link failures. The table shows both FFC and PCF-TF (both
schemes use all 6 tunnels from 𝑠 to 𝑡) are sub-optimal (for the same
reasons as (§3.2, §3.3)).
Consider now that a LS (𝑠, 4, 𝑡) is added with logical segments
𝑠4 (with the tunnel 𝑠 − 4), and 4𝑡 (with multiple tunnels from 4 to 𝑡
including 4− 1− 5− 𝑡, 4− 2− 6− 𝑡, and 4− 3− 7− 𝑡). Further, the LS
is associated with a condition that the reservation is only needed
when the link 𝑠 − 4 is alive. Table 1 shows the optimal is achieved
with this conditional LS (PCF-CLS). Consider two link failure case.
When 𝑠−4 is dead, at most one of the tunnels 𝑠−1−5−𝑡, 𝑠−2−6−𝑡,
𝑠 − 3 − 7 − 𝑡 are dead and the remaining can carry 1 unit of flow.
When 𝑠 − 4 is alive, at most 2 of these tunnels are dead. Therefore,
they can cary 0.5 units of flow. Finally, LS (𝑠, 4, 𝑡) can carry 0.5 units
of flow since 𝑠4 is alive and at most 2 of the tunnels 4 − 1 − 5 − 𝑡 ,
4 − 2 − 6 − 𝑡 and 4 − 3 − 7 − 𝑡 are dead.
Note that when the same LS is added but without the attached
condition, the objective is not optimal. This is because, the logi-
cal segment 𝑠4 cannot guarantee any reservation over single link
failures when only the tunnel 𝑠 − 4 is used. It is possible to add
more tunnels between 𝑠 and 4 (e.g., 𝑠 − 1 − 4, 𝑠 − 2 − 4, 𝑠 − 3 − 4),
which allows the LS (𝑠, 4, 𝑡) to be more resilient to failures (PCF-LS).
However, this is at the cost of reservations on the tunnels from 𝑠
to 𝑡, and consequently the objective is increased but still does not
achieve the optimal.
Modeling conditional LSs. We next discuss how conditional
LSs are modeled. Under any given failure scenario, let ℎ𝑞 indicate
whether LS 𝑞 is active or not. Like before, let 𝑦𝑙 indicate whether
tunnel 𝑙 fails or not. Let (𝑦, ℎ) denote all 𝑦𝑙 and ℎ𝑞 variables, and let
𝑌 𝐻 denote all possible combinations of (𝑦, ℎ) under all scenarios
involving the simultaneous failure of 𝑓 links. To incorporate these
conditions, we replace constraint (7) in (P2) with the constraint
below, and refer to the resulting model as PCF-CLS.
𝑎𝑙 (1 − 𝑦𝑙) + 
𝑏𝑞ℎ𝑞
𝑞∈𝐿(𝑠,𝑡)

≥ 
𝑙∈𝑇 (𝑠,𝑡)
𝑞′∈𝑄(𝑠,𝑡)
𝑏𝑞′ℎ𝑞′ + 𝑧𝑠𝑡𝑑𝑠𝑡 ∀𝑠, 𝑡 ∈ 𝑉 ,∀(𝑦, ℎ) ∈ 𝑌 𝐻 .
In §5, we show that LSs activated under a simple condition (a single
link being dead) is sufficient to get good performance. To handle
this, we model 𝑌 𝐻 by adding constraints ℎ𝑞 = 𝑥𝑒𝑞 for each LS
𝑞 to (4), where 𝑒𝑞 is the link whose failure activates LS 𝑞. In the
Appendix, we model a more general condition, where all links in
a set 𝜂𝑞 are alive and all links in a set 𝜉𝑞 are dead, which helps
generalize PCF to richer failures (e.g., node failures) (§3.5).
3.5 PCF generalizations
In this section, we discuss generalizations of PCF, and its relation-
ship with R3 [37], another congestion-free mechanism.
Heuristics for selecting LSs. We present a heuristic for select-
ing LSs that works well empirically (§5). Our approach involves
considering a more general model based on flows and decomposing
the results of that model into LSs.
We begin by introducing logical flows, which are a generalization
of LSs in that traffic is no longer constrained to visiting a sequence
of hops. A logical flow 𝑤 from 𝑠 to 𝑡 is captured by the flow balance
constraints below:
𝑏𝑤 ≥ 0 ∀𝑠, 𝑡 ∈ 𝑉 ,∀𝑤 ∈ 𝑊 (𝑠, 𝑡)

𝑝𝑤(𝑖 𝑗) −
𝑗