**Tuomas Kiviaho** opened **SPR-6107** and provided the following comments:

To define a bean using a factory method from a class other than the bean class itself, the current implementation requires the use of a registered factory bean. However, this approach can feel cumbersome when implementing the factory method pattern. In the worst case, it may lead to duplication of bean counts if the factory bean's name must be generated dynamically.

The `MethodInvokingFactoryBean`, with the help of `MethodInvoker`, allows the use of a static class as a prefix for the factory method name, making it suitable as a registered factory bean. Incorporating this logic directly into `org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod` (and potentially other relevant places) could eliminate the need for a factory bean in these scenarios. Additionally, using `MethodInvoker` could be advantageous, as it already includes logic to handle illegal state scenarios that might arise with this addition.

* * *
**Affects Version:** 2.5.6