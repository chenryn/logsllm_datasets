B
d
e
v
r
e
s
b
O
1M
100k
10k
1k
1k
Accuracy of Active Probing Prediction
Active probing prediction (r=0.629)
10k
100k
Predicted Bandwidth (B/s)
1M
(c) Actively probed vs. actual bandwidth (r = 0.63)
Figure 1. The accuracy of various prediction
mechanisms for a sample of the trials. The
x = y line is included for reference.
its vulnerability to subversion as well as provide a better
experience for all classes of users.
As described in Section 2.3, there is a trade-off between
selecting routers for optimal performance and providing
maximum anonymity protection. Even if the bandwidth
measurements are accurate, using high-bandwidth nodes
more frequently increases a user’s exposure, and some users
will wish to pick uniformly from all routers. Others may be
willing to expose themselves even more than the current Tor
design in order for increased performance. We propose giv-
ing users control over this tradeoff by letting them select a
point on the anonymity–performance scale either globally
(i.e. in the Tor conﬁguration ﬁle), or depending on the task.
Providing such ﬂexibility not only helps existing Tor
users, but attracts new users to the network as well, improv-
ing anonymity for all by increasing the anonymity set [7].
However, care must be taken to avoid partitioning attacks.
If it is easy to identify what level of privacy a user is aiming
for, the anonymity set may be in fact reduced. For exam-
ple, if only privacy-sensitive users use poorly performing
routers, then attackers may wish to focus their efforts on
them. Our proposed selection function blends trafﬁc from
both privacy-sensitive and privacy-insensitive users by hav-
ing both sets select from a pool of routers, but weighting
their selection differently.
A family of functions fs : [0, 1] → [0, 1], with parameter
s, is deﬁned by
fs(x) =
1 − 2sx
1 − 2s .
Note that this family of functions is well-deﬁned for all s 6=
0. In that case, we deﬁne fs to be its point-wise limit as
s → 0; i.e. f0(x) = x. Several examples of this family
of functions for varying values of s are shown in Figure 2.
Note also that fs(0) = 0, fs(1) = 1, and fs is continuous
and monotone increasing for all values of s, so fs a valid
cumulative distribution function for any s.
To choose a router given a selection function fs, a list of
routers and their rankings must ﬁrst be obtained; while this
ranking can be based on any metric, we propose the oppor-
tunistically probed available bandwidth metric described in
Section 3.1. This list can be of all routers in the Tor net-
work, or only those matching certain criteria (fast, stable,
exit, etc.). If this list is indexed from 0 to n − 1, then the
router selected is that with the index ⌊n × fs(x)⌋, where
x is selected uniformly at random from [0, 1). Note that
this procedure is obtaining a value of a random variable
from the normalized exponential distribution with param-
eter λ = −s. This procedure is then repeated for any other
routers to be selected, with the usual caveat that duplicate
selections are not allowed.
There are several features to note about this algorithm.
First, the chance of a router being selected is based on the
ranking of its metric, rather than on the metric itself. This
 1
 0.8
y
t
i
l
i
b
a
b
o
r
P
 0.6
 0.4
 0.2
 0
 0
CDF of Router Selection Probabilities for Some Selection Levels
Selection Level 0
Selection Level 5
Selection Level 10
Selection Level 15
 0.2
 0.4
 0.6
 0.8
 1
Router Ranking Quantile
Figure 2. Cumulative Distributions of Routers
Selected by Ranking for some Selection Lev(cid:173)
els
means that an attacker cannot simply add a router with a
very large amount of available bandwidth to the network
and attract a large fraction of all circuits; instead, many
routers must be added, each with enough bandwidth to rank
highly. Second, fs is well deﬁned for all real s. This means
that, should a reason arise for preferring routers with low
bandwidth, a negative s can be used. Also, while there are,
in principle, no bounds on the strength of a preference for
high bandwidth (i.e. how large an s can be chosen), too high
a value can result in nearly always choosing the most-highly
ranked router. In this paper, values of s from 0 to 15 are ex-
amined; a value of s = 15 implies that the most highly
ranked router in a set of n = 1000 (a typical number of
routers available in the Tor network at any given time) will
be chosen 27% of the time5. A practical upper bound for s
is 10, which results in the most highly ranked router being
chosen only 6% of the time in the above scenario.
In practice, we observe an additional problem: due to
routers frequently joining and leaving the network, a router
often lacks any data on the bandwidth of a signiﬁcant frac-
tion of the total router population.
In order to bootstrap
data for these routers, we divide the population into those
those routers for which we have data (i.e. known routers)
and those routers for which we do not (i.e. new routers) as a
ﬁrst step in choosing a router. A population-weighted coin
toss is used to choose between these groups; if the popula-
tion of new routers is chosen, we choose a router uniformly
at random, and if the population of known routers is cho-
sen, we use the algorithm described above. This modiﬁed
algorithm is the one used for the evaluations in Section 4.
5It follows from the deﬁnition of fs that the most highly ranked of a set
of n routers will be chosen with a probability of log2(2s−1/n + 1)/s.
l
 0.25
s
a
i
r
T
 0.2
f
o
 0.15
n
o
 0.1
i
t
c
a
r
F
 0.05
 0
14
12
A
10
c
t
u
8
a
l 
S
e
l
e
6
c
ti
o
4
n
L
2
e
v
e
l
0
14
12
 0.22
 0.2
 0.18
 0.16
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
 0.02
 0
0
2
4
6
8
10
G u e s s e d   S e l e c t i o n   L e v e l
Uniform distribution mean prediction +/- standard deviation
Skewed distribution mean prediction +/- standard deviation
 14
 12
l
e
v
e
l
 10
n
o
i
t
c
e
e
s
l
d
e
s
s
e
u
G
 8
 6
 4
 2
 0
 0
 2
 4
 6
 8
 10
 12
 14
Actual selection level
Figure 3. Actual selection level and most
likely selection level according to a na¨ıve
Bayesian classiﬁer
Figure 4. Mean and standard deviation of
guessed level by actual selection level ac(cid:173)
cording to a na¨ıve Bayesian classiﬁer, for
both a uniform and skewed distribution of se(cid:173)
lection levels.
3.2.1 Evaluation of Router Selection Algorithm
One obvious concern that arises in the context of tuning the
router selection algorithm according to the privacy needs
of the user is that these needs might be leaked, allowing
an attacker to focus on those users who demand the most
privacy. In this section, we evaluate the ability of an attacker
to ﬁngerprint the selection level chosen by the user.
To perform this evaluation, a large number (n =
100 000) of paths are chosen according to the proposed
router selection algorithm, with equally probable selection
levels; these paths were then used to train a na¨ıve Bayesian
classiﬁer. This classiﬁer then attempted to determine the
most likely selection level6 of a single tunnel for another
data set (again, n = 100 000). The results of this classi-
ﬁcation are shown in Figure 3:
the extreme levels (i.e. 0
and 15) are most likely to be identiﬁed correctly, but even
in these cases, the probability of correct identiﬁcation is no
more than 0.21; the intermediate levels are correctly identi-
ﬁed much less frequently.
Figure 4 shows the mean guess that was guessed for each
selection level over the same data set, along with the stan-
dard deviation. For comparison, it also shows the same
statistics for a data set where the selection level for both
the training set and the test set were chosen from a skewed
distribution where level 0 (maximum anonymity) is chosen
20% of the time, level 15 (maximum performance) is cho-
sen 52% of the time, and all other levels are chosen 2% of
the time. Over all trials, the average absolute error in the
predicted selection level was 3.98 for the uniform distribu-
6This classiﬁcation is based on the intermediate router and the exit
router, since the entry guard is not affected by selection level.
tion and 4.74 for the skewed distribution.
Note also that this represents a best-case scenario for the
attacker, as all of the routers were selected from a single,
static snapshot of bandwidth data.
In actual practice, the
data used to choose routers will vary over time, making this
sort of classiﬁcation much more difﬁcult.
4. Whole-System Evaluation
In order to evaluate the degree to which the proposed
changes meet the dual goals of increasing user experience
and increasing resistance to subversion, we evaluated them
according to two categories of metrics: performance and
anonymity. We examine each of these categories below.
4.1. Performance
To evaluate the performance of the proposed modiﬁca-
tions to the Tor protocol, a large number of tests were per-
formed over the Tor network; each trial involved download-
ing a 1 MB ﬁle over HTTP using an exit router connected
via a high-bandwidth connection to the hosting server; the
web server, the exit router, and the client are kept ﬁxed,
while the intermediate routers are ranked according to the
algorithms described in Section 3.1 and then chosen ac-
cording to the algorithms described in Section 3.2. The
results shown for Tunable Tor are based on approximately
20 000 trials over the period from July 17, 2007 to Septem-
ber 26, 2007; those for vanilla Tor are based on approxi-
mately 40 000 trials over the period from January 22, 2007
 1
 0.8
 0.6
 0.4
 0.2
l
s
a
i
r
T
f
o
n
o
i
t
c
a
r
F
 0
 0
Vanilla Tor
Tunable Tor (0)
Tunable Tor (5)
Tunable Tor (10)
Tunable Tor (15)
 50
 100
 150
 200
 250
 300
 350
 400
 450
Transfer Time (s)
Percentile Transfer Times for a 1MB File
)
s
(
e
m
T
i
 180
 160
 140
 120
 100
 80
 60
 40
 20
 0
 0
High Anonymity
 2
 4
 6
 8
 10
Router Selection Algorithm
 12
High Performance
 14
90th Percentile (Known routers)
90th Percentile (All routers)
Vanilla Tor
Figure 5. Cumulative distribution of transfer
times for a 1 MB ﬁle for vanilla Tor and sev(cid:173)
eral selection levels. For Tunable Tor, note
that Selection Level 0 corresponds to maxi(cid:173)
mum anonymity, while Selection Level 15 cor(cid:173)
responds to maximum performance.
Figure 6. The 90th percentile of transfer times
by selection level for known routers and all
routers. The 90th percentile for vanilla Tor is
included for comparison.
to March 26, 2007. The router selection levels were chosen
uniformly at random from the integers between 0 and 15.
Figure 5 shows the CDFs of the ﬁle transfer times for
vanilla Tor and Tunable Tor at several selection levels. The
CDF captures many elements of user experience; since Tor
changes tunnels by default every 10 minutes, a user can ex-
pect to get the 95th percentile performance several times a
day. Note that, as expected, vanilla Tor outperforms Tun-