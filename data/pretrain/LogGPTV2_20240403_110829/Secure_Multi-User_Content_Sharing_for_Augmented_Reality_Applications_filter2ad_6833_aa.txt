title:Secure Multi-User Content Sharing for Augmented Reality Applications
author:Kimberly Ruth and
Tadayoshi Kohno and
Franziska Roesner
Secure Multi-User Content Sharing for 
Augmented Reality Applications
Kimberly Ruth, Tadayoshi Kohno, and Franziska Roesner, University of Washington
https://www.usenix.org/conference/usenixsecurity19/presentation/ruth
This paper is included in the Proceedings of the 28th USENIX Security Symposium.August 14–16, 2019 • Santa Clara, CA, USA978-1-939133-06-9Open access to the Proceedings of the 28th USENIX Security Symposium is sponsored by USENIX.Secure Multi-User Content Sharing for Augmented Reality Applications
Kimberly Ruth
PI:EMAIL
Tadayoshi Kohno
PI:EMAIL
Franziska Roesner
PI:EMAIL
Paul G. Allen School of Computer Science & Engineering, University of Washington
https://ar-sec.cs.washington.edu/
Abstract
Augmented reality (AR), which overlays virtual content on
top of the user’s perception of the real world, has now be-
gun to enter the consumer market. Besides smartphone plat-
forms, early-stage head-mounted displays such as the Mi-
crosoft HoloLens are under active development. Many com-
pelling uses of these technologies are multi-user: e.g., in-
person collaborative tools, multiplayer gaming, and telep-
resence. While prior work on AR security and privacy has
studied potential risks from AR applications, new risks will
also arise among multiple human users. In this work, we ex-
plore the challenges that arise in designing secure and private
content sharing for multi-user AR. We analyze representative
application case studies and systematize design goals for se-
curity and functionality that a multi-user AR platform should
support. We design an AR content sharing control module
that achieves these goals and build a prototype implementa-
tion (ShareAR) for the HoloLens. This work builds founda-
tions for secure and private multi-user AR interactions.
1 Introduction
Augmented reality (AR) technologies, which overlay dig-
itally generated content on a user’s view of the physical
world, are now becoming commercially available. AR
smartphone applications like Pokemon Go and Snapchat,
as well as smartphone-based AR platforms from Apple [5],
Facebook [6], and Google [4], are already available to bil-
lions of consumers. More sophisticated AR headsets are also
available in developer or beta editions from companies like
Magic Leap [37], Meta [41], and Microsoft [24]. The AR
market is growing rapidly, with a market value projected to
reach $90 billion by 2022 [15].
The power that AR technologies have to shape users’ per-
ceptions of reality — and integrate virtual objects with the
physical world — also brings security and privacy risks and
challenges. It is important to address these risks early, while
AR is still under active development, to achieve more robust
security and privacy than would be possible once systemic
issues have become entrenched in mainstream technologies.
The computer security and privacy community has already
taken steps towards identifying and mitigating potential risks
from malicious or buggy AR apps. These efforts — e.g., lim-
iting untrusted apps’ access to sensor data [28, 49, 54] or re-
stricting the virtual content apps can display [32, 34] — are
reminiscent of recent work on access control for untrusted
apps on other platforms, such as smartphones [16, 53]. De-
spite this valuable initial progress, we observe a critical gap
in prior work on security and privacy for AR: though past
efforts are valuable for protecting individual users from un-
trusted applications, prior work has not considered how to
address potentially undesirable interactions between multi-
ple human users of an AR app or ecosystem.
The need to consider security for multi-user AR. Despite
this gap in prior work, we observe that many compelling use
cases for AR will involve multiple users, each with their own
AR device, who may be physically co-located or collaborat-
ing remotely and who may be interacting with shared vir-
tual objects: for instance, in-person collaborative tools [63],
multi-player gaming [3], and telepresence [18]. As one con-
crete example already available to AR users, Ubiquity6 has
released a beta version of its smartphone platform in which
all users can view and interact with all AR content within the
app [67], as shown in Figure 1.
In these contexts, the potential security, privacy, and safety
risks for AR users come not only from the apps on their
own devices but also from other users. For example, one
user of a shared AR app might accidentally or intentionally
spam other users with annoying or even disturbing virtual
objects, or manipulate another person’s virtual object (e.g.,
artwork) without permission. Indeed, even though multi-user
AR technologies are not yet ubiquitous in the consumer mar-
ket, precursors of such issues have already begun to emerge
in the wild and in research settings today. In AR speciﬁcally,
for example, there have been reports of “vandalism” of AR
art in Snapchat [38], and a recent study found that pairs of
AR users often positioned virtual objects in each other’s per-
sonal space [35]. Similar ﬁndings have been made in virtual
reality (VR), where users have blocked each other’s vision
USENIX Association
28th USENIX Security Symposium    141
same virtual content [35]. For example, a user might want
to have control of their personal physical space, not allow-
ing another user to place too many virtual objects near them.
Fulﬁlling this request requires that either the second user is
restricted in augmenting his or her own view of the world, or
that the two users see different things. Diverging views of the
world can violate expectations, however: consider watching
or interacting with an AR object that only you can see while
another AR user unknowingly steps into the space between
you and your object.
AR’s integration with the physical world further compli-
cates many access control design decisions. Consider the
seemingly simple notion of Alice sharing an AR object with
Bob: for instance, giving him read access to a piece of vir-
tual artwork. When this object is shared, does Bob see the
artwork in the same place as Alice (e.g., on a particular wall),
or does Bob see his own instance of the object in a different
place? The answer may depend on the semantics of the app
and whether Alice and Bob are physically co-located, and
the answer interacts with many other design choices.
In our work, we thus explore a set of multi-user AR case
study apps that represent different points in the possible de-
sign space (co-located and remote users, opt-in versus opt-
out sharing) to surface functionality and security goals for an
AR sharing control module. We then present the design of
such a module, which we envision as an app-level library or
OS interface that can be leveraged by AR application devel-
opers. This module supports app developers in (1) allowing
users to share AR content with other (co-located or remote)
users, (2) allowing users to control both inbound and out-
bound AR content, while (3) addressing fundamental chal-
lenges raised by AR’s integration with the physical world.
One key challenge is to deﬁne and manage different
ways that AR content might be mapped into the physical
world — we do so by supporting both location-coupled ob-
jects (which all users see in the same physical place) and
location-decoupled objects (for which users see their own
copies in separate locations), and by managing the resulting
impact of these types of objects on sharing and access control
functionality. Another key challenge is to address potential
discontinuities in user expectations around private content in
a shared physical world — we do so by introducing “ghost”
objects that allow users to share with other AR users that
they are interacting with a virtual object without sharing sen-
sitive details about that object. Finally, a third key challenge
is to respect users’ possible sense of ownership of physical
space (e.g., personal space) — to that end, our design sup-
ports policies for how to handle AR objects that are within a
protected region (e.g., making objects closer to a user more
transparent to that user). Through our exploration, we ﬁnd
that no single sharing control model will work for all apps,
but that our proposed module can provide key features to
support app developers in creating multi-user AR apps that
meet users’ expectations.
Figure 1: Sample screenshots from Ubiquity6 multi-user applica-
tion (taken from [67]). Users can, for instance feed a virtual cat
(left) or tend a virtual garden (right).
with virtual objects [66] and invaded each other’s personal
space [1].
In earlier work on digital tabletop displays, re-
searchers observed conﬂicts between users closing or steal-
ing each others’ documents [44]. As a ﬁnal example, Ap-
ple’s AirDrop scheme for sharing ﬁles between physically
co-located Apple devices has been misused to send inappro-
priate content to strangers in public spaces [11].
Thus, we can and should expect conﬂicts and tensions to
arise between multiple AR users, which raises the critical
question: how should AR platform and app designers handle
these issues? Existing AR platforms provide limited or no
support to app developers on this front. For example, though
HoloLens supports running an app shared between multiple
device users, it surfaces only basic cross-device messaging
features, providing no framework for developers to reason
about or support complex multi-user interactions.
This work: Sharing control for multi-user AR. In this
work, we thus address the challenge of providing secure
and private content sharing capabilities for multi-user aug-
mented reality applications. Unlike prior AR security work
that focused on protecting users from untrusted apps, we
aim to limit undesirable interactions between mutually dis-
trusting human users — similar to how traditional ﬁle system
permissions attempt to separate mutually distrusting human
users from each other. By addressing this issue before multi-
user AR becomes widespread, we aim to inform the design of
future AR systems, thereby preventing such multi-user con-
cerns from manifesting broadly.
In our exploration of this space, however, we ﬁnd that con-
trolled sharing for AR content raises unique challenges not
present in traditional settings such as ﬁle systems or shared
online documents. The root cause of this complexity is AR’s
integration with the physical world. Because people share
the same physical world, they may have certain expecta-
tions about how AR content is shared. Indeed, prior work
has found that users often expect co-located users to see the
142    28th USENIX Security Symposium
USENIX Association
Contributions. In summary, our contributions include:
1. We are the ﬁrst to rigorously explore the design space
for secure and private AR content sharing between
users. Through an exploration of multi-user AR case
study apps, we identify (in Section 2) key design goals,
challenges, and features that app developers require to
support secure and private multi-user AR experiences.
2. Building on our design space exploration (Section 2),
we present the design (in Section 4) of a multi-user AR
sharing control module. Our design addresses key chal-
lenges and enables app developers to meet our design
goals: supporting users in controlling how they share
AR content with others and how AR content is shared
with them, while taking into account the ways in which
AR content might integrate with the physical world.
3. We provide a concrete prototype implementation
(ShareAR, in Section 5) and evaluation (in Section 6),
iteratively reﬁning our design and demonstrating its fea-
sibility in practice. Our source code will be made avail-
able at the project website.1
This work lays a foundation for future secure and private
multi-user AR apps. Mitigating undesirable interactions be-
tween users can facilitate user adoption of AR and help the
technology reach its full potential.
2 Problem Formulation and Design Goals
We begin by formulating, for the ﬁrst time, the problem
space and goals for secure and private multi-user AR con-
tent sharing. To do so systematically, we consider four case
study apps (Section 2.1) that we selected to explore unique
points in the multi-user AR design space and that we en-
visioned might exercise a broad range of functionality and
security needs. From these case studies, we then derive our
security and functionality goals (Sections 2.2 and 2.3).
In exploring possible apps, we observe that the key aspect
of AR that differentiates it from previous technologies is its
tight physical-world integration: virtual content appears to
the user to be situated in 3D space among physical objects
(e.g., the examples in Figure 1). Thus, one key axis is (1) co-
location: are the users sharing virtual content co-located or
not? A second key axis is (2) opt-in versus opt-out sharing:
is sharing a deliberate opt-in action between speciﬁc people
(as the HoloLens developer guidelines prioritize [43]) or are
virtual objects public by default, requiring a deliberate opt-
out (as the Meta developer guidelines advocate [40])? The
example case studies we highlight explore these dimensions.
2.1 Case Study Applications
Paintball: Co-located, opt-in.
In this app, users in the
same physical space can play a game of paintball with virtual
paint. All users can see the game objects (weapons, paint,
etc.). Users may also have a dashboard where they can see
1arsharing.cs.washington.edu or arsharingtoolkit.com
the game status. This type of AR multiplayer gaming is al-
ready emerging in smartphone apps [20].
Multi-Team Whiteboards: Not (necessarily) co-located,
opt-in. We envision a collaborative AR whiteboard app in
which a user, possibly in a co-located group, may choose to
share a whiteboard with other users who may be in the same
or different physical locations. Although each co-located
group of users sees the same whiteboard in the same loca-
tion, different groups may see the whiteboard instantiated in
different locations; furthermore, a user in a group may split
off an individual copy of the whiteboard in order to leave the
room and still collaborate from another remote space. The
contents of all users’ copies are synchronized in real-time.
Since different whiteboards may have different levels of sen-
sitivity, access control must be at least at whiteboard-level
granularity. Unlike in Paintball, where a shared game state
is core to app function, users of this app may encounter users
with whom they don’t want to share a sensitive whiteboard.
This case study, also, is grounded in existing work: a pend-
ing patent application by Apple [29] describes a GUI for AR
document editing, though it does not mention access control.
Community Art: Co-located, opt-out. We now consider
an example in which co-located users automatically see
each other’s objects by default. We consider a virtual art
app, where users can create and view sculptures, free-drawn
markup, and other artistic artifacts made by other, potentially
unknown AR users in the same physical (and virtual) space.
Variants of Community Art might be used to decorate for a
celebration so that guests or passersby will see the content, or
to place advertisements outside one’s shop. Though we con-
sider Community Art as an example of a public-by-default
app, some use cases may necessitate more ﬁne-grained ac-
cess control. For instance, artists may choose to keep their art
private while constructing it or allow the public to view but
not edit their sculptures. This case study is similar to Ubiq-
uity6’s smartphone app [67], in which all content is public.
Soccer Arena: Not co-located, opt-out. Finally, we con-
sider an app that lets the user watch a virtual replica — e.g.,
on the user’s living room table — of the soccer game that
it is currently broadcasting. By default, all users of this app
see all aspects of the playing ﬁeld, commentator annotations,
and ads. Some users may watch the game together in the
same physical space, while others may be in separate phys-
ical spaces. While using the app, a user may wish to block
a distracting ad or turn off annotations. The ability to form
AR reconstructions of soccer games from monocular video
footage, demonstrated in [51], shows that this app is within
reach of today’s technology. We ﬁnd that Soccer Arena does
not surface new security, privacy, or functionality require-
ments not covered by the other case studies. In particular,
it raises the same spam-related concerns as Community Art
does and the same non-colocation challenges as Multi-Team
Whiteboards does. However, we include it for completeness.
USENIX Association
28th USENIX Security Symposium    143
2.2 Functionality Goals
From the above case studies, we now derive a set of func-
tionality design goals for multi-user AR apps and platforms.
Any sharing control solution must coexist with these func-
tionality goals — while one could trivially meet the security
and privacy goals outlined in the next section by allowing no
shared content, supporting sharing functionality is critical to
the success of emerging multi-user apps.
• Support physically-situated sharing. For both Paint-
ball and Community Art, physically co-located users
will want to see the same virtual objects. The multi-
user AR platform must support a way of sharing virtual
state, and a mapping between virtual objects and the
physical world, among the collaborating users.
• Support physically-decoupled sharing. Multi-Team
Whiteboards requires that AR content be synchronized
for each person’s copy, regardless of the users’ relative
location — when they’re in the same room, or adjacent
rooms, or halfway across the world. Thus, the platform
must support sharing virtual content decoupled from the
physical world as well.
• Support real-time sharing. Users of Paintball will ex-
pect for their interactions with other players to occur
in real time. Real-time state changes are also desirable
for the other case studies. Thus, the platform must sup-
port low latency updates of shared state among multi-
ple users, and any sharing control solution should not
impose an undue performance burden. (Note that real-