# Checklist
- I have read the relevant section in the [contribution guide] on reporting bugs.
- I have checked the issues list for similar or identical bug reports.
- I have checked the pull requests list for existing proposed fixes.
- I have reviewed the commit log to determine if the bug was already fixed in the master branch.
- I have included all related issues and possible duplicate issues in this report (if there are none, check this box anyway).

## Mandatory Debugging Information
- I have included the output of `celery -A proj report` in the issue. If unable to do so, I have specified the affected Celery version.
- I have verified that the issue exists against the `master` branch of Celery.
- I have included the contents of `pip freeze` in the issue.
- I have listed all versions of external dependencies required to reproduce this bug.

## Optional Debugging Information
- I have attempted to reproduce the issue on more than one Python version and/or implementation.
- I have attempted to reproduce the issue on more than one message broker and/or result backend.
- I have attempted to reproduce the issue on more than one version of the message broker and/or result backend.
- I have attempted to reproduce the issue on more than one operating system.
- I have attempted to reproduce the issue on more than one workers pool.
- I have attempted to reproduce the issue with autoscaling, retries, ETA/Countdown, and rate limits disabled.
- I have attempted to reproduce the issue after downgrading and/or upgrading Celery and its dependencies.

## Related Issues and Possible Duplicates
### Related Issues
- #5330

### Possible Duplicates
- None

## Environment & Settings
- **Celery version**: 4.3.0
- **`celery report` Output**:
  ```
  software -> celery:4.3.0 (rhubarb) kombu:4.6.4 py:3.5.6
              billiard:3.6.1.0 py-amqp:2.5.1
  platform -> system:Linux arch:64bit, ELF
              kernel version:4.19.71-1-lts imp:CPython
  loader   -> celery.loaders.default.Loader
  settings -> transport:amqp results:disabled
  ```

## Steps to Reproduce
### Required Dependencies
- **Minimal Python Version**: 3.5.6
- **Minimal Celery Version**: 4.3.0
- **Minimal Kombu Version**: 4.6.4
- **Minimal Broker Version**: RabbitMQ 3.7.15
- **Minimal Result Backend Version**: MariaDB 10.4.7
- **Minimal OS and/or Kernel Version**: Linux 4.19.71-1-lts

### Python Packages
- **`pip freeze` Output**:
  ```
  amqp==2.5.1
  asn1crypto==0.24.0
  Babel==2.7.0
  bcrypt==3.1.7
  billiard==3.6.1.0
  celery==4.3.0
  certifi==2019.9.11
  cffi==1.12.3
  chardet==3.0.4
  cryptography==2.7
  django-celery-results==1.1.2
  flower==0.9.3
  idna==2.8
  importlib-metadata==0.22
  kombu==4.6.4
  more-itertools==7.2.0
  mysqlclient==1.4.4
  paramiko==2.6.0
  pycparser==2.19
  PyNaCl==1.3.0
  pytz==2019.2
  requests==2.22.0
  requests-toolbelt==0.9.1
  six==1.12.0
  SQLAlchemy==1.3.8
  tornado==5.1.1
  urllib3==1.25.3
  vine==1.3.0
  websockets==7.0
  zipp==0.6.0
  ```

### Other Dependencies
- N/A

### Minimally Reproducible Test Case
```python
@app.task
def add(x, y):
    return x + y

@app.task
def test():
    result_set = ResultSet([])
    add_tasks = add.starmap((i, i) for i in range(10))
    add_result = add_tasks.apply_async()
    result_set.add(add_result)
    return result_set.get(disable_sync_subtasks=False)
```

## Expected Behavior
The tasks should run successfully, with the possibility of a deadlock.

## Actual Behavior
```
Traceback (most recent call last):
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/app/trace.py", line 385, in trace_task
    R = retval = fun(*args, **kwargs)
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/app/trace.py", line 648, in __protected_call__
    return self.run(*args, **kwargs)
  File "/home/gsfish/work/netease/project/scan_detect/tasks.py", line 106, in test
    return result_set.get(disable_sync_subtasks=False)
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/result.py", line 697, in get
    on_interval=on_interval,
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/result.py", line 765, in join
    interval=interval, no_ack=no_ack, on_interval=on_interval,
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/result.py", line 205, in get
    assert_will_not_block()
  File "/home/gsfish/.pyenv/versions/scan_detect/lib/python3.5/site-packages/celery/result.py", line 41, in assert_will_not_block
    raise RuntimeError(E_WOULDBLOCK)
RuntimeError: Never call result.get() within a task!
See http://docs.celeryq.org/en/latest/userguide/tasks.html#task-synchronous-subtasks
```