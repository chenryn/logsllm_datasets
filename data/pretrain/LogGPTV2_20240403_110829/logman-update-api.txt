### logman update api

**Applies to:**
- Windows Server 2022
- Windows Server 2019
- Windows Server 2016
- Windows Server 2012 R2
- Windows Server 2012

**Description:**
Updates the properties of an existing API tracing data collector.

**Syntax:**
```sh
logman update api [options]
```

**Parameters:**

| Parameter | Description |
| --- | --- |
| `-s <computer>` | Performs the command on the specified remote computer. |
| `-config <file>` | Specifies the settings file containing command options. |
| `-n <name>` | Name of the target object. |
| `-f <format>` | Specifies the log format for the data collector. |
| `-u <user> <password>` | Specifies the user to run as. Entering `*` for the password will prompt for it. The password is not displayed when you type it. |
| `-m` | Changes the data collector to manual start or stop instead of a scheduled begin or end time. |
| `-rf <time>` | Runs the data collector for the specified period of time. |
| `-b <start_time>` | Begins collecting data at the specified time. |
| `-e <end_time>` | Ends data collection at the specified time. |
| `-si <interval>` | Specifies the sample interval for performance counter data collectors. |
| `-o <file>` | Specifies the output log file or the DSN and log set name in a SQL database. |
| `-r` | Repeats the data collector daily at the specified begin and end times. |
| `-a` | Appends to an existing log file. |
| `-ow` | Overwrites an existing log file. |
| `-v` | Attaches file versioning information to the end of the log file name. |
| `-rc <command>` | Runs the specified command each time the log is closed. |
| `-max <size>` | Sets the maximum log file size in MB or the maximum number of records for SQL logs. |
| `-cnf <time>` | Creates a new file when the specified time has elapsed. If no time is specified, creates a new file when the maximum size is exceeded. |
| `-y` | Answers yes to all questions without prompting. |
| `-mods <modules>` | Specifies the list of modules to log API calls from. |
| `-inapis <APIs>` | Specifies the list of API calls to include in logging. |
| `-exapis <APIs>` | Specifies the list of API calls to exclude from logging. |
| `-ano` | Logs only API names. |
| `-recursive` | Logs APIs recursively beyond the first layer. |
| `-exe <path>` | Specifies the full path to an executable for API Tracing. |
| `/?` | Displays context-sensitive help. |

**Remarks:**
- Use the `-u` parameter to specify the user and password for running the data collector. If you enter `*` for the password, you will be prompted to enter it.
- The `-rf` parameter allows you to specify the duration for which the data collector should run.
- The `-mods`, `-inapis`, and `-exapis` parameters are used to control which modules and API calls are logged.
- The `-ano` and `-recursive` parameters can be used to fine-tune the logging behavior.

**Examples:**

To update an existing API trace counter called `trace_notepad` for the executable file `c:\windows\notepad.exe`, by excluding the API call `TlsGetValue` produced by the module `kernel32.dll`, type:
```sh
logman update api trace_notepad -exe c:\windows\notepad.exe -exapis kernel32.dll!TlsGetValue
```

This command updates the `trace_notepad` data collector to exclude the `TlsGetValue` API call from the `kernel32.dll` module.