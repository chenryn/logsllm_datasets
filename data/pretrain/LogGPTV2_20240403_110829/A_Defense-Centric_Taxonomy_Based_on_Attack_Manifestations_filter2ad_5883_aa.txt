# A Defense-Centric Taxonomy Based on Attack Manifestations

**Authors:**
- Kevin S. Killourhy
- Roy A. Maxion
- Kymie M. C. Tan

**Affiliation:**
Dependable Systems Laboratory  
Computer Science Department  
Carnegie Mellon University  
Pittsburgh, Pennsylvania 15213, USA

**Abstract:**
Numerous classifications of attacks have been proposed, often in the form of taxonomies. These taxonomies are typically framed from the attacker's perspective, organizing attacks based on the attacker's goals, such as privilege escalation from user to root. While these attack-centric taxonomies serve a purpose, they do not necessarily provide the information needed by defenders to determine whether their detection systems can identify specific attacks. This paper introduces a new, defense-centric taxonomy that categorizes attacks based on how they manifest as anomalies in monitored sensor data. The taxonomy was developed using unique manifestations from 25 different attacks and validated through an intrusion-detection system. The predictive utility of this defense-centric taxonomy was compared to that of a well-known attack-centric taxonomy, demonstrating that it more effectively predicts a detector's ability to detect specific classes of attacks.

## 1. Introduction

Many existing taxonomies of computer attacks (e.g., [1, 3, 8, 9, 10, 11, 12, 14, 16, 30]) tend to be attack-centric, focusing on the attacker's perspective and goals. For example, the MIT Lincoln Laboratory taxonomy [16] groups attacks into categories like "user-to-root," which helps attackers select and iterate through methods to achieve their objectives. However, for defenders, a more useful taxonomy would classify attacks in a way that groups together those that can be defended against similarly. This paper presents a defense-centric taxonomy that classifies attacks based on their manifestations in sensor data, thereby aiding in the selection and deployment of effective detection mechanisms.

## 2. Objective and Approach

The objective of this work is to develop a defense-centric taxonomy that organizes attacks based on how they appear as anomalies in sensor data. The approach involves the following steps:

1. **Develop an Attacker-Defender Testbed:** Create a controlled environment for launching and monitoring attacks.
2. **Assemble Vulnerable System Programs:** Collect programs with known vulnerabilities and develop corresponding attacks.
3. **Run Attacks and Gather Data:** Execute the vulnerable programs under attack conditions and collect sensor data.
4. **Gather Normal Behavior Data:** Run the same programs in a normal state and collect sensor data.
5. **Extract Attack Manifestations:** Analyze the sensor data to identify how attacks manifest.
6. **Build the Taxonomy:** Construct a defense-centric taxonomy based on the extracted manifestations.
7. **Validate the Taxonomy:** Ensure the taxonomy adheres to classic taxonomic rules and validate it using an intrusion-detection system.
8. **Compare with Existing Taxonomies:** Evaluate the new taxonomy against a well-known attack-centric taxonomy.
9. **Determine Predictive Utility:** Assess whether the new taxonomy better predicts a detector's ability to identify specific attacks.

## 3. Related Work â€“ Attack Taxonomies

### Flaw Classification
- **Landwehr et al. [12]:** Developed a taxonomy of program security flaws (e.g., buffer overflows) to help system designers create more secure systems.
- **Bishop [3]:** Proposed a vulnerability taxonomy to highlight characteristics that could be exploited in attacks.
- **Aslam [2]:** Classified security faults into coding, operational, and environmental faults.
- **Krsul [10]:** Built on Aslam's work, grouping vulnerabilities based on programmers' assumptions.

### Signature Classification
- **Kumar [11]:** Created a taxonomy based on the complexity of attack signatures, ranging from simple events to sequences detected by regular expressions.

### Attack-Effect Classification
- **Lindqvist and Jonsson [14]:** Classified attacks based on their intended effects and techniques.
- **Ranum [20]:** Grouped attacks into eight categories, including social engineering and denial of service.
- **Howard and Longstaff [9]:** Integrated attack techniques, effects, and attacker types into their taxonomy.
- **Weber [30]:** Proposed a taxonomy based on required privileges, attack means, and intended effects.
- **Lippmann et al. [15, 16]:** Adapted Weber's taxonomy, focusing on the attack's effect.

These taxonomies, while valuable, are primarily attack-centric and may not fully address the needs of defenders.

## 4. Criteria for an Effective Taxonomy

To ensure the new taxonomy is effective, the following criteria were applied:

- **Mutual Exclusivity:** Categories do not overlap, preventing ambiguities.
- **Exhaustivity:** All objects or events are included in the taxonomy.
- **Replicability:** Repeated classification attempts yield consistent results.

## 5. Methodology

### 5.1 Construct Attacker-Defender Testbed

An attacker-defender testbed is a controlled environment for launching and monitoring attacks. It includes:
- **Attacker Machine:** Used to initiate attacks.
- **Victim (Target) Machine:** The target of the attacks.
- **Network:** Connects the attacker and victim machines.
- **Isolation:** The testbed is isolated from non-testbed machines and the Internet.

This setup allows for the systematic observation and analysis of attack behaviors and their manifestations in sensor data.

---

This revised version aims to improve clarity, coherence, and professionalism, making the text more accessible and engaging for the reader.