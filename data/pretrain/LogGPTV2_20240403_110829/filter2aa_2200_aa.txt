译者序
本书由 kuang110 和我共同翻译完成，其中笫 2、3、4、5、6 章为 kuang110 翻译，其它
的由本人翻译。由于是两人翻译的，而每个人的翻译风格可能会不同，所以，当你在书中看
到一个单词有两个完全不同的翻译时请不要惊讶，且由于本人翻译水平有限，不足之处在所
难免，但在翻译时我会尽量避免用一些晦涩难懂的长句。
本书的所讲的主要内容请看介绍部分，个人对本书的评价是适合有 C 语言基础而且有
对驱动开发有一定的了解的人阅读，因为本书是介绍 rootkit 而不是介绍驱动开发的，所以
对于什么是 DriverEntry，什么是卸载例程这些不会详细的讲解。本书适合于 rootkit 的入门，
讲的都是比较基础的东西，里面所讲的技术不会太高深，而且这些技术都是比较老比较落后
了的，但是要知道万丈高楼平地起，不打好基础又如何去学习高深的技术，所以对于要了解
什么是 rootkit、rootkit 是如何工作的、它们都的什么功能、如何编写一个 rootkit 以及 rootkit
的基本检测与防护技术等等，本书还是足够了的。
本书翻译版首发于看雪论坛，论坛上有每一章的 word 版，需要的到论坛上找找。
最后，祝大家有一个愉快的旅程。
demoscene
2011 年 1 月 8 日
关于作者
村 Ric Vieler 是一个软件工程师和经过认证的道德黑客，他喜欢编写技术手册（例如
Professional Rootkits）和科幻小说（例如 Spliced, Acknowledge, 和 A Stitch in Time），他沉迷
于对对计算机内部未公开和各种东西有一个透切的了解，在他职业生涯的高潮终于达到了：
专业的黑客攻击。在不玩黑、不读书、不写文章时，Ric 的空闲时间都陪着他的妻子 Lisa 和
他们的两个孩子，Samantha 和 Dylan。
参与人员
Executive Editor
Carol Long
Development Editor
Ed Connor
Technical Editor
John Heasman
Production Editor
William A. Barton
Copy Editor
Luann Rouff
Editorial Manager
Mary Beth Wakefield
Production Manager
Tim Tate
Vice President and Executive Group Publisher
Richard Swadley
Vice President and Executive Publisher
Joseph B. Wikert
Graphics and Production Specialists
Brooke Graczyk
Joyce Haughey
Alicia B. South
Quality Control Technicians
Christine Pingleton
Charles Spencer
Project Coordinator
Erin Smith
Media Development Specialists
Angie Denny
Kit Malone
Kate Jenkins
Steve Kudirka
Proofreading and Indexing
Christine Sabooni and Estalita Slivoskey
Anniversary Logo Design
Richard J. Pacifico
介绍
什么是专业的 Rootkit
Rootkit
Rootkit
Rootkit
Hacker Defender, HE4Hook, Vanquish, NT Rootkit, FU, AFX Rootkit，这是一些感染了全
世界几百万台计算机的 rootkit 的名字，这些 rootkit 有很多的共同点，它们都是由一个或者
最多是几个程序员编写出来的，它们都能够在未经授权的情况下去访问某些信息，它们都使
用了一些隐藏技术以防止被检测到，并且它们使用这些技术并不是为了自己的某些目的。
一个 rootkit 的目的是什么呢？程序员认为它们的目的有很多，一些是作为可以使一个
网站超负荷运行的“网络僵尸”客户端，一些是为了发送一些我们每天早上都会在我们的电
子邮件里看到的垃圾邮件，一些作为一个进入其它安全的网络的桥梁，其它的是为了收集我
们的个人信息来娱乐或者获取利益。这些目都影响着最终的 rootkit 产品是什么，我会更精
确地把它们称做是“临时软件”，这些软件会被它们的目的所限制，这些目的都是非法的，
不道德的，破坏性的，或者是没有意义的，在这些伪装下开发的软件通常不能称之为工具，
材料，和用来开发商用级软件的专业知识。
本书将跳过这种“临时 rootkit”看向专业 rootkit 的新兴领域。
网友们把“专业”定义为符合一个专业的技术或道德标准，这种情况下，这个专业指的
是软件工程，而技术和道德标准是由能够生产商业级产品的专业软件工程师来维护的，通常
这些工程师的技术要比那些以业余时间来编写非法的或者没有用的软件的程序员的技术要
高出许多。在 rootkit 的这种情况下，资金雄厚的专业团队可以利用大量的技术来生产出功
能全面又强大的软件，而软件的每个功能都是刚好能达到它的目的。
我们现在又回到目的这个问题上了，刚才已经看到，对于专业的 rootkit 来说，它的目
的就是防止信息泄漏、内容监控和过滤、版权侵犯防护或者类似的需要数百万美元资助的行
业，或许这些行业正在寻找一些解决方案，而其中的一些方案正好需要一些只能在专业的
rootkit 上才能找到的秘密功能。
这本书是写给哪些人看的
这看似是一个非常简单的问题，但是会阅读一本关于 rootkit 开发的书的不仅仅是 rootkit
开发者，还有一些软件开发者对编写没有坏影响的 rootkit 感兴趣，还有一些信息技术（IT）
专家会对这方面感兴趣，他们需要明白每一种对网络有不利影响的威胁，还有许多层次不同
的安全专家会对这方面感兴趣，他们需要明白 rootkit 有什么功能并且如何去使用它，而且
我们不要忘了，软件工程师同样需要懂得反 rootkit 技术。
如果你的职业和软件开发有关，或者是计算机安全方面的，又或者你想要学习一种很酷
的方式来提高你的系统安全性，那么这本书就适合你阅读。
这本书包含哪些内容
本书讲述并且实现了现代 rootkit 的所有主功能模块，并且提供了加载、卸载、测试和
控制我们编写的这些 rootkit 的辅助程序。另外，本书以一章的内容来讲述如何建立一个
rootkit 工具包为开头，并且用几章的内容来讲述 rootkit 的检测和防护为结尾，这样覆盖的
所有内容能够让读者全面的了解 rootkit 的功能、rootkti 所用的技术、开发和测试 rootkit 所
用的工具和用来阻 rootkit 散播的检测和防护方法。
本书的结构是怎样的
让我们来面对它这样一个事实：开发一个 rootkit 是一项非常困难的任务，而用来学习
和开发的代码结构性差、可靠性差使得 rootkti 的开发变得更困难，rootkit 行业现在处于从
单个的黑客过渡到专业的软件工程师的时期，而留下专业的 rootkit 开发者从头开始创建强
壮的、模块化的、商业级的软件。本书为专业的 rootkit 开发者讲述如何开始编写详细且可
靠代码。
在讲述了编译本书的例子代码所需要的工具后，用了九章的篇幅来讲述如何开发一个基
本的rootkit，并且逐渐地把其它功能添加到rootkit里。这种一步步地介绍功能模块化的rootkit
技术的方式使得这些代码很容易通过修改来达到指定的目的。
阅读本书需要什么知识基础
用来编译本书例子的工具是完全免费的，这些在笫一章里都有讲述，另外，还允许读者
使用附带的之前编译的可执行文件来跟着本书一直学下去，使用这些软件并没有什么特别的
要求。如果你会 C 语言对你了解这些代码非常的有帮助，但是代码已经有注释和文档了，
所以即使不懂 C 语言也可以了解这些代码，如果你熟悉 Windows 设备驱动同样是非常有帮
助的，但是不会也没有关系，本书会是一本非常好的入门书籍。
本书里虽然使用了 x86 汇编语言和 C#程序语言，但是你不必一定要懂得它们，一般，
本书在编写时会尽量降低对读者专业知识的要求，而且本书在 rootkit 实现的每一个阶段都
能够和读者进行交互式的体验。
显示规范
（译者 PS
PS
PS
PS：这里说的规范指的是原版书的，在翻译板书时本人并没有遵从此规范）
为了让读者能够从本书里最大地获取知识并且把它们记录下来，本书使用了一些规定。
贴士 当前所讨论内容的贴士、提示和旁白会像这样以斜体的形式出现。
如下的风格所示：
·当我们介绍新的术语和重要的词语时会把它们高亮 显示。
·显示文件名、URL 和文本里面的代码时，像这样：
persistence.properties。
在显示代码时会有两种方式：
我们会把新的重要的例子用灰色背景代码高亮显示。
对于不太重要或者之前已经显示过的代码并没有使用灰色高亮显示。
源代码
如果你要使用本书的例子代码，你可能会选择手动输入所有代码或者使用本书附带的代
码文件。本书中使用的所有源代码都可以从 www.wrox.com 上下载到，打开网页后只要简单
地定位到书的标题（可以使用搜索框或者使用标题列表）然后在本书的描述页面点击
“Download Code”链接就可以下载到本书的所有代码了。
贴士 因为许多书的标题都非常的相似，所以你可以通过 ISBN 来找到本书：
978-0-470-10154-4。
在下载完代码后，只需要使用你喜欢的压缩工具把它解压出来主即可以使用。你可以到
Wrox 代码下载主页 www.wrox.com/dynamic/books/download.aspx 来查看本书和其它的 Wrox
书的代码。
在解压 Professional Rootkits 压缩包前，最好禁用你机器上所有的反病毒软件，本书附
带的很多东西都会被认为是恶意的，所以，一些反病毒软件会阻止你把这些文件解压到你的
电脑上，因此你要把反病毒软件给禁用了或者在反病毒软件里把这个文件夹设置为排除。当
然，很快你就要编写一些从未公开的 rootkit，但在那之前，你还是要把你的反病毒软件给禁
用了。
如果没有工具来解压从 Wrox 上下载的 zip 文件，你建议你使用 ZipCentral，这是一个完
全 免 费 的 软 件 ， 它 没 有 广 告 ， 没 有 后 门 或 者 30 天 试 用 之 类 的 ， 只 要 从
http://hemsidor.torget.se/users/z/zcentral/down.html 下载 zcsetup.exe 然后双击它进行安装，在
安装完后，你可以通过拖放一个压缩包到程序或者图标上然后提取这个压缩包的内容到你所
选择的文件夹里。
解压出来的文件会以一章一章的分开来，其中包含了源代码、可执行文件和那章所讲到
的驱动，如果你想不通过编译这些代码来看本书，你可以使用每章所提供的适用于 Windows
2000,XP 和 2003 系统的二进制文件来学习，如果你想要编译提供的代码，就要先建立一个
rootkit 工具包，这会在笫一章里讲。
勘误
我们已经尽量保证在文章和代码里面不出现错误，然而，世上没有东西是完美的，如果
你在书里发现了错误，例如一个拼写错误或者一段错误的代码，我们会非常感谢您的反馈，
你的反馈很有可能会给其它的读者在这个问题上节省几个小时的时间，同时您也能帮助我们
提供高质量的信息。
可能通过登陆 www.wrox.com 然后在搜索框里搜索本书名字或者使用标题列表，然后在
本书的描述页点击书“Book Errara”链接来找到勘误页面。在此页面上你可以查看由 Wrox
编辑人员发表的关于本书的所有勘误信息，同时还可以查看包含了勘误链接的全部书籍列表
页面 www.wrox.com/misc-pages/booklist.shtml.。
如 果 你 没 在 勘 误 页 面 上 找 到 “ 你 的 ” 勘 误 信 息 ， 请 到
www.wrox.com/contact/techsupport.shtml 页面然后填写完上面的表单以把你发现的错误发送
给我们，我们会检查这个信息，如果是适当的，我们会把错误信息发到勘误页面上然后会在
本书的后续版本修正此错误。
p2p.wrox.com
p2p.wrox.com
p2p.wrox.com
p2p.wrox.com
要和作者进行进行讨论，请加入 P2P 论坛 p2p.wrox.com 。这是一个基于网页的论坛系
统，你可以在上面发表关于\Wrox 书籍和相关技术的帖子以和其它的读者和技术人员进行交
流。论坛还提供了一个邮件订阅功能，当你所所择的你感兴趣的主题有新的帖子时系统会给
你的邮件发送消息、Wrox 作者、编辑、其它行业专家和其它读者都会在这个论坛上。
有 http://p2p.wrox.com 上你会发现许多不同的讨论区可以帮助你，不仅是关于你所读的
这本书的问题，还有关于你自己所开发的程序问题，要加入这个论坛，请这样做：
1.打开 http://p2p.wrox.com 然后点击注册。
2.阅读使用条款然后点击同意。
3.填写必须的信息，如果你愿意的话还可以填写其它可选的信息，然后点击提交。
4.你会收到一封关于如果验证你的账号的电子邮件，然后完成注册过程。
贴士：不用注册 P2P 论坛就能阅读论坛上的帖子，但如果要发表自己的帖子主必须要
注册。
在注册完后，你可以发表新帖子和回复其它用户的帖子，你可以在任何时间阅读帖子，
如果你希望当一个特定的讨论区有新帖子能给你发送邮件，请在讨论区列表名称图标里点击
请阅。
要获得关于如何使用 Wrox P2P 的信息，请阅读论坛的 P2P FAQ，这里会回答很多关于
怎么使用论坛以及许多关于 P2P 和 Wrox 书籍的常见问题。要查看 FAQ，请在 P2P 网页上
点击 FAQ 链接。
笫一章 工具
概述
本章主要强调建立和保存开发 rootkit 所用的工具的重要性。在你进行开发之前建立一
个功能完整的 rootkit 工具包可以让你的研究、设计、开发、测试和打包你的 rootkit 顺利进
行下去。另外，保存好工具和一些实用程序、例子、脚本甚至是失败的经验可以让你在暂时
停止开发的地方继续进行下去，举个例子，在本书里讲述的 rootkit 原本是在几年前开发并
被我遗忘了的，但是当我和出版社的威利接触的时候我又想了起来。把代码、脚本、实用工
具和用来开发 rootkit 的工具的拷贝都存放到时一个方便的文件包里，这样能够把一个复杂
的项目变成一些令人愉快的经验。
本章包括如下内容：
一个 rootkit 工具包里必须包括哪些东西
一个 rootkit 工具包里应该包括哪些东西
如果验证你的 rootkit 工具包是否有用
如何生成一个 Rootkit
Rootkit
Rootkit
Rootkit
完全反汇编一个 rootkt 工具包要花费很多时间。幸好，开始时所需要的所有东西都可以
从 Microsoft 网站上下载（http://msdn2.microsoft.com/en-us/default.aspx）。最重要的 3 个工具
是 Microsoft 驱动开发包（DDK），一个编译器和 Windows 平台软件开发包（SDK）。幸好，
这些都可以免费从微软的网站上下载。
虽然 Visual C++编译器和软件开发包（SDK）可以直接下载，但是驱动开发包（DDK）
只能下载到一个 ISO 镜像（除非你订阅了微软 MSDN），在编写本书时，你可以从
www.microsoft.com/whdc/devtools/ddk/default.mspx 下载到这个镜像。这个镜像可以用你的
CD 刻录软件的“从一个磁盘镜像进行刻录”功能来转换成一张 CD，如果你没有 CD 刻录
工具并且没有（或者认识有的人）订阅 MSDN，那么你可以免费（需要一点点的运费）从
www.microsoft.com/whdc/devtools/ddk/orderddkcd.mspx 定购 Windows Server 2003 SP1 DDK
的 CD。
现
在
Visual
C++
2005
Express
已
经
可
以
免
费
下
载
了
，
http://msdn.microsoft.com/vstudio/express/visualc/download 。这个开发环境包括了开发基本
Windows 应用程序的所有东西，另外， Visual C++ 2005 Express 有一个 C 编译器可以让你
创建一个控制台程序，我们需要一个控制台程序来加载，卸载和测试本书中所开发的 rootkit.
将要创建的控制台程序属于 Native Win32 程序，所以你还需要下载和安装微软的
Windows
平
台
SDK
。
现
在
可
以
从
www.microsoft.com/downloads/details.aspx?FamilyId=&displaylang=en#filelist
下 载 此 SDK
（PSDK-x86.exe）。
综合上面所讲的，保要有驱动开发包，Visual C++编译器（或者任何兼容 C 的 Windows
编译器）和 SDK 就能够进行编译和执行本书中的例子，然而添加几个实用工具能够使得
rootkit 的开发变得更简单。其中笫一个是 DebugView，这个工具可以让你在执行 rootkit 时
查看调试的的状态信息，虽然这不是在开发 rootkit 时技术上所需的，但我无法想像在开发
rootkit 时没有它的时会是什么样子。另外，在 Sysinternals 上还提供了它的好伙伴 Diskmon、
Filemon 和 Regmon，这三个工具分别可以让你监视磁盘操作、文件系统操作和注册操作，
你的工具包同样需要这些工具。如果你下载了本书的代码，你会发现这些工具都在 “Chaper
1 Tools”里有。
如果你想深入研究 rootkit 背后的技术，你还需要一份 IDA 的拷贝，IDA 是一个逆向工
程工具，在笫 4 章会用它来分析 PGP 加密库。在编写本书的时候，IDA 无法从 DataRescue
里下载，你可以从 DataRescue 里购买 IDA
Pro，但是你需要在网上搜索来下载 IDA 的免费
版本，据我所知，最新的免费版本是 4.1，所以输入“ida +“4.1 ida pro”download datarescue”
应该可以找到最新版本的下载链接，另外，如果你下载了本书的源代码，你会在 “Chaper 1
Tools”找到 IDA_4-1 这个压缩包。
另一个深入研究 rootkit 开发的工具是 “Debugging Tools for Windows”，这个文件包里
包含了 4 个调试器，一个是内核级的调试器，在你的设备驱动无法像预期的那样运行并且调
试状态信息不足以用来找出问题所在时你就会用到它。这个文件包里还包含有最新的 DDK，
你 可 能 已 经 有 安 装 了 最 新 的 DDK 了 ， 如 果 没 有 的 话 ， 这 个 文 件 包 可 以 从
www.microsoft.com/whdc/devtools/debugging/installx86.mspx 下载，内核级调试并不在本书的
范围内，但是对于一个 rootkit 工具包来说，“Debugging Tools for Windows”还是一个比较有
价值的工具。
你会发现上面提到的内核调试器如果没有你所使用的系统的调试符号它几乎没什么用，
你可以从 www.microsoft.com/whdc/devtools/debugging/symbolpkg.mspx 这里获得这些符号，
在下载并且安装完符号后，你要给调试器指出这些符号的路径，点击开始--所有程序
--Debugging Tools For Windows--WinDbg，选择文件--符号文件路径，然后点击浏览选择符号
所在的路径，选择了符号目录后会使得内核调试器神奇地获取到可以修复 rootkit 或者研究
新的 rootkit 技术的大量信息。
还有一个在本书里用到的开发工具目前还没提到：在笫 11 章里用来创建 rootkit 控制面
板 的 Visual C# 编 译 器 ， 这 是 另 一 个 由 微 软 提 供 的 免 费 开 发 环 境 ， 可 以 从
http://msdn.microsoft.com/vstudio/express/visualcsharp 找到，Visual Studio C# 2005 开发环境
不会影响到 Visual Studio C++ 2005 开发环境，所以可以同时下载和安装它们， C#编译器
对 rootkit 工具包也是比较重要的。
一旦你有了 DDK,一个 Windows C/C++ 编译器， Windows 平台 SDK,Sysinternal 的
DebugView，Regmon，FileMon 和 Diskmon，DataRescue 的 IDA，Debugging Tools For Windows，
内核调试符号和 Visual Studio C# 2005 Express，你就足以应付基本的 rootkit 开发了，记得把
你所开发的 rootkit 收集起来对你以后的开发是非常重要的，所以在开始进行开发前最好花
费一点时间把你所收集的这些工具打包起来，图 1-1 显示了一个典型的 rootkit 工具包。
图 1-1
微软驱动开发包
DDK 安装向导和其它的 Windows 程序安装一样的简单，仅仅是双击 setup.exe 然后回答
几个问题。然而，你需要做一些事情来使得 rootkit 的开发变得更简单一点，笫一种推荐的
最简单最节省时间的安装方法是直接使用默认的安装选项，如果你必须要使用其它的目录，
那么记住路径越简单越好，最好不要有空格或者长目录名，对于旧版的 DKK 来说这显得特
别重要。笫二种推荐的方式是选择所有的选项，跳过一些例子或者一些文档以节省几兆字节
的磁盘空间并不会使你生活得愉快一点，当然，如果你已经安装了“Debugging Tools for
Windows”就可以跳过 2003 SP1 的 DDK 里带的调试器的安装，因为这两个是完全一样的。
一旦你安装了 DDK，你最好创建两个快捷方式来方便你进行开发，下面的快捷方式的
例子是 Windows XP DKK,build 2600 的，目标路径要根据你的 DDK 的版本做相应的改变，
笫一个快捷方式如下：
%windir%\SYSTEM32\CMD.EXE /k C:\WINDDK\2600\bin\setenv.bat C:\WINDDK\2600
chk 
如果是新版的 DDK，就像下面这样：
%windir%\SYSTEM32\CMD.EXE /k C:\NTDDK\bin\setenv.bat C:\NTDDK checked 
如果是 2003SP1 DDK:
%windir%\SYSTEM32\CMD.EXE
/k
C:\WINDDK\3790.1830\bin\setenv.bat
C:\WINDDK\3790.1830 checked 
然后打开 %windir%目录，会有一个 “Checked DKK”图标。
笫二个快捷方式如下：
%windir%\SYSTEM32\CMD.EXE /k C:\WINDDK\2600\bin\setenv.bat C:\WINDDK\2600
fre 
如果是新版的 DDK，就像下面这样：
%windir%\SYSTEM32\CMD.EXE /k C:\NTDDK\bin\setenv.bat C:\NTDDK free 
如果是 2003SP1 DDK:
%windir%\SYSTEM32\CMD.EXE
/k
C:\WINDDK\3790.1830\bin\setenv.bat
C:\WINDDK\3790.1830 free 
然后同样打开 %windir%目录，会有一个 “Free DDK”图标。
DDK 使用 Checked 和 Free 来区分驱动的最先调试版本和最终的发布版本，前面的两
个快捷方式就是建立这两种开发环境的，本书的工程都是使用 Checked DDK来进行开发的，
但如果你最终想要一个或者所有 rootkt 的发布版本你就要使用 Free DDK。
Microsoft
Microsoft
Microsoft
Microsoft Visual
Visual
Visual
Visual C++
C++
C++
C++ 2005
2005
2005
2005 Express
Express
Express
Express
和 DDK 的安装不同，Visual C++ 2005 Express 的安装可能需要花几分钟的时间，首先，