以完成二项中型任务，或者一项大型任务，或者十项小型任务。这种换算关
一必须大致正确把握的事情就是，粗略知道在基本相同的一段时间内，你可
你今天所做的不是制定开发日程表，而只是排出各种功能的优先顺序。你唯
下一步，就是把所有36项提出来的功能和它们的“费用”做成一张菜单，
再说一遍，这种方法确实有点乱七八糟，也不够准确，但是没有关系。
追
个
轻
以这个值排户
允
轻追
个
最
允
追
轻
然
允许对bug分叉
追
轻
个性化首页
个
踪资金到账时间
性化首页
经松安排软件开发进程
许对bug分叉
性化首
许对bug分叉
踪资金到账时间
经松安排软件开发进程
踪
松
踪
松
宗资金到账时间
公安排软件开发进程
功能
功
，我们把每个人在每项功能上花掉的钱加总起来：
金到账日
首
功
功
留给其他人为它投入足够资金。
能
件开发进程
序
“销售额”除以“费用”：
时间
，找出最受欢迎的功能：
$10
$
S
$
$10
S
费
费
费
用
用
费
用
出S9
消售额
肖售额
销售额
2503
---
## Page 305
不是每个产品都有机会得到这样的待遇。
你可以根据顾客的实际反馈经常重新调整各种开发任务的优先顺序，但是并
但是，你能够更经常性地停下来，更频繁地发布新版本。这样做的好处是，
第33讲)，你依然需要根据优先顺序清单，从上往下逐项开发软件的新功能。
到底选谁？能不能一次只选一个？"）
书
在部署每一个（不是凭直觉就会用的）功能之前，我们就为它写好规格说明
直到明年三月份为止。届时我们计划停止增加新功能,开始整合和测试阶段。
务优先顺序的共识。
务清单确实是非常好的优先顺序，真实地反映了我们这个开发团队对各种任
使在开发过程中，你也还可以改变不同任务的优先顺序。
地方很明显搞错了，你就把它们改正过来！没有什么东西是不能修改的。即
许应该都部署，或者都不部署。有时候，顺着这张优先级清单往下看，有些
能的大致判断进行排序。
① BDUF方法和敏捷方法是两种对立的软件开发模式。BDUF（Big Design Up Front）方法
优先顺序确定以后，我们就会基本按照这张清单从上往下进行开发，一
不过，最让我惊讶的是，对FogBugz 5.0版本来说，我们最后得到的任
现在你可以开始做一些调整，将那些相关的功能关联在一起，比如“安
Mike Conte教会了我使用这种方法。那是在Excel5的规划阶段，虽然会
即使你很幸运地拥有非凡的能力，能够比我们更频繁地发布软件（参见
（在软件开发的BDUF方法/敏捷方法?的选美大赛中，崂崂叨叨的计分员
完成了！这是一份你可能部署的所有功能的清单，根据大家对最重要功
整个优先顺序的决定过程花掉了三个小时。
面的沟通（认为比书面的文档更有效）、频繁交付新的软件版本。
求。与BDUF方法相比，敏捷方法更强调程序员团队与业务专家之间的紧密协作、面对
捷方法认为软件开发是一个逐步的过程，必须经常做出调整，应对外界快速变化的需
强调设计先行，要求在做出完备可靠的设计之后，再开始进行软件的具体实现。而敏
确定优先顺序
291
---
## Page 306
第九部分修订软件
间开发，但是事实证明，它们都是很蠢的功能，Excel没有它们反而更好。
们的优先顺序。好玩的地方在于，其中大概有50%的功能，我们后来没有时
议室里有几十个人，但是也只花了几个小时就决定了要开发哪些功能以及它
这种方法并不完美，不过我告诉你，它比去文具店买蓝色文件夹要好多
---
## Page 307
品
社=北京市：
人民邮电出版社
程序员部落酋长Joel谈软件
1on
=000006822459&d=A046AB64B663E43C6C0FE9 A5EF41FEA4
---
## Page 308
第九部分
第一部分
缅招嫩脲
第八
第五
第四
第三
封书
35五个为什
部分
3
部
纪忆
23让
18为
17火
部
12寸
部分
10给计算机系学生
8学校只教Java的危险性
部分
7认同法
3寻
2寻找优秀的程序员
19
5
3-
经
11
分
分
分
用
易
尔的编程语言
耶鲁大学的演讲
济利益驱动法
事化管理
找优秀的程序员之实战指南
生学
Fric Sir
错误的代码
星
软
州
构
土必争
修订软件
谱经
开办软件
式日程规
编程
管理大型
性
想的陷阱
设计的作
写给未来程序员的建议
发
bet
M
人的耳机
人员管理
发布日期
布软件
营软件公司
搭建社
生是不够的
以
问题的
建议
显而
划
oft
区
用
生的建议
the Business of Software的前言
：Gffice的文件格式如此复杂（以及一些对策)
易见
---