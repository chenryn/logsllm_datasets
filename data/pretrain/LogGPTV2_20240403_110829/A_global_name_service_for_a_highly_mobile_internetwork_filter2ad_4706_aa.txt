# A Global Name Service for a Highly Mobile Internetwork

## Authors
- Abhigyan Sharma
- Xiaozheng Tie
- Hardeep Uppal
- Arun Venkataramani
- David Westbrook
- Aditya Yadav

### Contact Information
{abhigyan, xztie, hardeep, arun, westy, ayadav}@cs.umass.edu

### Affiliation
School of Computer Science, University of Massachusetts Amherst

## Abstract
Mobile devices dominate the Internet today, yet the infrastructure, rooted in its tethered origins, provides poor support for mobility. To address this, we propose the design of a massively scalable global name service that can rapidly resolve identities to network locations under high mobility. Our primary contribution is the design, implementation, and evaluation of Auspice, a next-generation global name service. A key insight in Auspice is a demand-aware replica placement engine that intelligently replicates name records to provide low lookup latency, low update cost, and high availability. We have implemented a prototype of Auspice and compared it against several commercial managed DNS providers and state-of-the-art research alternatives, demonstrating that Auspice significantly outperforms both. We also show that Auspice can serve as a complete end-to-end mobility solution and enable novel context-based communication primitives that generalize name- or address-based communication in today’s Internet.

### Categories and Subject Descriptors
C.2.4 [Computer Systems Organization]: COMPUTER-COMMUNICATION NETWORKS—Distributed Systems

### Keywords
Mobility, distributed systems, network architecture

## 1. Introduction
Mobile devices are ubiquitous, with roughly one cellphone per human and the number of smartphones sold last year nearly equaling the number of wired hosts on the Internet. The total traffic generated by mobiles is also approaching that of wired devices. However, the current Internet continues to operate as if dominated by tethered hosts, largely ignoring frequent endpoint mobility.

### 1.1 Background
Today, an application developer cannot easily initiate communication with a smartphone, even when it has a public IP address, due to the lack of a global infrastructure for locating it. Applications such as smartphone notification systems, video playback, or cloud storage must develop application-level support to ensure a seamless experience for users, even as they change addresses multiple times a day or let connections break. This lack of intrinsic support for mobility forces developers to redundantly develop and maintain common-case functionality, hindering long-term growth and innovation.

Many researchers have criticized the Internet's poor support for mobility and multihoming. A common criticism is the conflation of identity and location, where an IP address represents both the identity of an interface and its network location. This is problematic for mobility (same identity, changing locations) and multihoming (single identity, multiple locations). While the Internet does separate identities (domain names) from network locations (IP addresses) through DNS, DNS was not designed to handle the high update rates required for mobile devices.

### 1.2 Motivation
Our position is that seamless support for mobility requires a logically centralized global name service that can rapidly translate identities to locations. Our primary contribution is the design, implementation, and evaluation of Auspice, a distributed system that addresses this challenge. Compared to the current ICANN/DNS-based approach, Auspice cleanly separates name resolution from adjudication and certification issues. It is also deployable as a managed DNS provider, with a key strength being a demand-aware replica placement engine that significantly reduces the time-to-connect to mobile destinations in a cost-effective manner.

## 2. Case for a Global Name Service
Given the extensive prior work on mobility and Internet architecture, it is natural to ask whether a global name resolution service is critical for handling mobility if we had the luxury of refactoring Internet naming and routing from a clean slate.

### 2.1 Internet Mobility Background
Despite the diversity of proposals for re-architecting Internet naming and routing, three broad approaches to handling mobility can be identified: indirection-based routing, global name-to-address resolution, and name-based routing.

#### 2.1.1 Indirection-Based Routing
Indirection-based routing schemes, such as Mobile IP, are simple because endpoints remain oblivious to the mobility of other endpoints. No name-to-address lookup is needed at connection initiation time, as a human-readable name maps to a home address that rarely changes. Mid-connection mobility is seamless, but the data plane pays the price, with every data packet routed via an indirection agent, potentially causing significant routing stretch. Additionally, widespread deployment of indirection agents is required, posing a barrier to immediate adoption.

#### 2.1.2 Global Name-to-Address Resolution
Global name-to-address resolution schemes rely on a distributed service to resolve names to addresses. The current Internet's DNS, as well as several designs addressing the identity-location conflation problem, need such a resolution infrastructure. These schemes require explicit support at endpoints to handle mid-connection mobility. There is a general consensus that end-to-end connection migration suffices for efficient migration when endpoints move one at a time, but an external resolution service is needed for concurrent mobility.

#### 2.1.3 Name-Based Routing
Name-based routing schemes aim to handle mobility by routing directly over names without a resolution step. However, these schemes face fundamental and practical challenges. First, routing update propagation delays must be on the order of milliseconds, which is challenging given that inter-domain routing can take several minutes to converge. Second, theoretical results suggest discouraging trade-offs between the size of forwarding tables and path stretch. Adding a hierarchical structure to names can alleviate some scalability limitations, but frequent mobility still poses a challenge, as routers would need to maintain special forwarding entries for "displaced names."

### 2.2 Limitations of DNS
DNS has specific design traits that make it poorly suited for mobile applications:

1. **TTL-Based Caching**: TTL-based caching is essential for DNS's scalability, but it is ineffective under high mobility, leading to increased load on name servers and higher client-perceived latencies.
2. **Static Placement**: Authoritative DNS servers are static, either close to a mobile endpoint's "home" location or a pre-packaged set of geo-distributed locations provided by a managed DNS provider. Dynamically moving object replicas in a demand-aware manner is nontrivial.
3. **Hierarchical Names**: The hierarchical structure of DNS names is key to leveraging federation, but it restricts the use of arbitrary or flat names, limiting the flexibility of application-specific semantics.

### 2.3 Approach
To address these issues, our approach relies on active and demand-aware replication:
1. **Active Replication**: Significantly reduces reliance on passive caching.
2. **Demand-Aware Replication**: Ensures that active replicas of a name record are accessible close to clients querying the name, reducing overall time-to-connect.
3. **Separation of Resolution and Certification**: Cleanly separates name resolution from adjudication and certification issues.

## 3. Auspice Design & Implementation
Auspice is designed to enable endpoint mobility as shown in Figure 1. An endpoint A initiates communication with another endpoint B by querying the GNS for B's current addresses and connecting to one of them, enabling pre-lookup mobility. If B moves after A's query but before a connection is established (connect-time mobility), A times out and reverts back to the GNS. After a connection is established, if either endpoint moves one at a time (individual mobility), it can re-synchronize the connection with a bilateral three-way handshake without relying on the GNS. For simultaneous mobility, both endpoints can re-synchronize their connection using the GNS.

## 4. Evaluation
We have implemented a prototype of Auspice and evaluated it using a combination of PlanetLab, emulation clusters, and Amazon EC2. Our contributions are as follows:
1. A case for a global name service as an indispensable part of any internetwork design with intrinsic support for high mobility.
2. Auspice, a scalable, geo-distributed, federated global name service that significantly reduces the time-to-connect under any given resource constraints despite high mobility and arbitrary endpoint identifiers.
3. A proof-of-concept demonstration of intrinsic support for all four types of endpoint mobility and novel context-aware delivery primitives that generalize name- or address-based communication over the current Internet as well as MobilityFirst.
4. Comparison against several best-of-breed managed DNS services, showing that Auspice's demand-aware approach significantly lowers time-to-connect and/or update cost even for today's domain names.

## 5. Conclusion
Auspice addresses the critical need for a global name service that supports high mobility in the Internet. By leveraging active and demand-aware replication, Auspice provides low lookup latency, low update cost, and high availability, making it a promising solution for the future of highly mobile internetworks.

---

This revised version aims to provide a more structured, clear, and professional presentation of the original text.