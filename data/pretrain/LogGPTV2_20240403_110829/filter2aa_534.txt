Linux 全盘加密 
看了橙子酱大佬的加密分区解密让我想起了我之前做过 Linux 的全盘加密。 
特此分享一下思路。。。。 
1. 首先安装系统选择 /（根）分区加密。 
就 3 个分区。一个 swap 一个 boot 一个根分区（加密，密码自定义） 
其余都正常安装，就拿 centos6.9 举例。 
2.进入系统，打开/usr/share/dracut/modules.d/90crypt/目录（看了说明文档找到的） 
修改 cryptroot-ask.sh 
把 108-112 行加上“#”注释，然后增加一行(如图) 
echo "password" | cryptsetup luksOpen -T1 "$device" "$luksname" 
其中的 password 是 luks 分区需要加密时候要输入的密码 
如果不做这个修改，每次启动的时候都要手动输入一次根分区的密码。通过修改这个脚本可
以让系统启动的时候自动输入你设置的 luks 密码。 
保存修改，运行 dracut --force 重新生成 initrd 镜像 
原本到这里 luks 全盘加密，开机自动输入密码已经 ok，但是 grub 还是有机会被人编辑从
而直接跳过 root 密码。 
如果不考虑 grub 到问题，全盘加密自动输入密码到此结束了。 
只能再次设置障碍。 
/dev/mapper/ 名字自己改一下 
比如说 dbaroot（自定义） 
对应的 Grub.conf 也一起修改。 
Grub.conf 最后的 rhgb quiet 不用删 
保存修改，运行 dracut --force 重新生成 initrd 镜像（这是第二次 dracut，其实第一次可以不用
gracut 的） 
这里可以修改 init 和 kennel 的名字 改成 md5 之类的 
到这里可以重启一下检查一下刚修改的是否 ok 
关键在于 grub 
所以重新安装 grub 
rpm 编译环境需要一摸一样的 grub.conf， 
我用的 grub-0.97-99.el6 
其他安装步骤都一样 唯一不同的在于 我把/boot/grub/grub.conf 这个配置文件给一起编译进
去了。 
修改一下源码，多一个参数 --enable-preset-menu=/boot/grub/grub.conf 
./configure --enable-preset-menu=/boot/grub/grub.conf 
(./configure --host=x86_64-redhat-linux-gnu --build=x86_64-redhat-linux-gnu --program-
prefix= 
--prefix=/usr 
--exec-prefix=/usr 
--bindir=/usr/bin 
--sbindir=/usr/sbin 
--
sysconfdir=/etc 
--datadir=/usr/share 
--includedir=/usr/include 
--libdir=/usr/lib64 
--
libexecdir=/usr/libexec --localstatedir=/var --sharedstatedir=/var/lib --mandir=/usr/share/man 
--infodir=/usr/share/info 
--sbindir=/sbin 
--disable-auto-linux-mem-opt 
--
datarootdir=/usr/share --enable-preset-menu=/boot/grub/grub.conf) 
生成的文件 
/root/rpmbuild/RPMS/x86_64/grub-0.97-99.el6.x86_64.rpm 
rpm -ivh ***.rpm 
grub-install /dev/sda 
最后把 boot/grub/grub.conf 删掉。。。。。 
重启系统。一切 ok。保护好你的 root 密码。。。