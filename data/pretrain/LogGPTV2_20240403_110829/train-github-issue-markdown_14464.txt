**Do you want to request a _feature_ or report a _bug_?**  
I would like to request a bug.
**What is the current behavior?**  
From what I know, it is possible to inject object in props. However, this
object seems to be html escaped when inserted into the DOM from my
observation.
Thus, if I try to add an onerror=alert('XSS') in a  tag through a props, this is gonna be escaped when
rendered. Then, I realized that inserting an id='test' is totally possible
with a props. So I thought only dangerous javascript injectable attributes are
escaped such as onerror, onload, ...
However, I realized that the href=javascript:alert('1') is not escaped when
inserted through a props. The javascript gets executed. Here, I thought it
might a bug.
**If the current behavior is a bug, please provide the steps to reproduce and
if possible a minimal demo of the problem. Your bug will get fixed much faster
if we can run your code and it doesn't have dependencies other than React.
Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or
CodeSandbox (https://codesandbox.io/s/new) example below:**
    class App extends Component {
      render() {
      const href = {href: "javascript:alert('1')"};
        return (
          Click here     
        ); 
    }
    ReactDOM.render(, document.getElementById('root'));
**What is the expected behavior?**
I would expect the href object to be escaped as a props, so being treated
exactly like onerror or other javascript attributes.
**Which versions of React, and which browser / OS are affected by this issue?
Did this work in previous versions of React?**  
React version: 16.6.0  
Browser: Chrome 70.0.3538.77