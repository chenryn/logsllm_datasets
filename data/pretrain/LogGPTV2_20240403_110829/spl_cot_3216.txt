User: 为了实现日志查询分析需求，编写了一段 SPL 语句，请你从专家角度，逐步思考分析需求，尽量详细的解释语句内容是如何实现需求的。

## 分析需求
上个月数据库主机CPU平均使用率趋势按每 1 天和主机名分组统计

## SPL 语句
starttime="-1M/M" endtime="now/M" appname:top_info_system_stats tag:top_info AND * |eval per=(100-json.cpu.idle_percent)/100 |bucket timestamp span=1d as ts |stats avg(per) as avg_per by ts,hostname

## 具体解释

Assistant: 根据所给的需求和SPL语句，我们可以逐步分析并解释如何实现这个需求。

### 分析需求

需求是要查询上个月数据库主机的CPU平均使用率趋势，并且需要按照每天和主机名进行分组统计。

### SPL 语句解析

1. **时间范围定义**


```scss
starttime="-1M/M" endtime="now/M"
```
这部分定义了查询的时间范围。`starttime="-1M/M"`表示从一个月前开始，`endtime="now/M"`表示到当前时间为止，并且`/M`表示按月进行时间对齐。
2. **过滤条件**


```scss
appname:top_info_system_stats tag:top_info
```
这部分定义了数据过滤条件。它过滤出`appname`为`top_info_system_stats`并且带有`tag`为`top_info`的数据。这可能是用来确保数据来源是特定于系统统计或特定标签的数据。
3. **字段处理**


```scss
eval per=(100-json.cpu.idle_percent)/100
```
这部分是一个字段计算操作。它将`json.cpu.idle_percent`（即CPU空闲百分比）转换为CPU使用百分比（通过减去空闲百分比并除以100）。这是为了得到一个在0到100之间的值，表示CPU使用率。
4. **时间分组**


```scss
bucket timestamp span=1d as ts
```
这部分将时间戳按照每天进行分组，并将分组后的时间戳命名为`ts`。这是为了实现按天分组统计的需求。
5. **统计操作**


```scss
stats avg(per) as avg_per by ts,hostname
```
这部分执行了统计操作。它计算了每个时间分组（`ts`）和每个主机名（`hostname`）对应的`per`（CPU使用率）的平均值，并将结果命名为`avg_per`。这样，我们就可以得到每天每个主机的CPU使用率平均值。

### 总结

整个SPL语句的工作流程是：首先定义时间范围和过滤条件，然后计算CPU使用率，接着按每天的时间范围和主机名进行分组，最后计算每个分组的CPU使用率的平均值。这样就实现了上个月数据库主机CPU平均使用率趋势按每1天和主机名分组统计的需求。