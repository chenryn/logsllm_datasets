---
author: 夜域诡士
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 11211
date: '2014-04-18 21:37:00'
editorchoice: false
excerpt: >
  作者：夜域诡士  
  通过编写自己的操作系统、开发内核模块、阅读内核源码和参加相关培训，可以有效提升对Linux内核的理解和技术水平。
fromurl: ''
id: 2878
islctt: false
largepic: /data/attachment/album/201404/18/214606t5dnnbdzi4u5ur4m.png
permalink: /article-2878-1.html
pic: /data/attachment/album/201404/18/214606t5dnnbdzi4u5ur4m.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: >
  作者：夜域诡士  
  通过编写自己的操作系统、开发内核模块、阅读内核源码和参加相关培训，可以有效提升对Linux内核的理解和技术水平。
tags:
- 内核
- 学习
thumb: false
title: 想要成为Linux内核高手的四种有效途径
titlepic: false
translator: ''
updated: '2014-04-18 21:37:00'
---

**作者：夜域诡士**

我曾经在一部电影中看到这样一句话：“如果你想要理解一个人的想法，就去做他所做的事情。”同样地，当我询问如何才能学好Linux内核时，大多数人的建议是购买一本教材并仔细研究。但我认为这还不够。我认为至少需要实践下面提到的方法之一，才能真正称得上是高手（你只需要掌握C语言和汇编语言即可）。

![](/data/attachment/album/201404/18/214606t5dnnbdzi4u5ur4m.png)

### 方法一：编写你自己的操作系统

有些人可能会觉得这个想法有些疯狂，似乎只有非常厉害的人才会去尝试。但实际上，不需要你的系统具备多么强大的功能。即使它只能显示一张图片，那也已经是一个了不起的成就了。尽管你自己编写的系统可能功能有限，但它足以证明你对Linux内核已经有了相当深入的理解。这种方法可能是最难的，但也是最快最有效的。

### 方法二：编写内核模块

与编写操作系统相比，编写内核模块显得更为实际。如果你已经在使用Linux，那么编写一个简单的内核模块其实并不难。例如，你可以写一个模块，在内核日志中打印出“hello”。这个过程只需要少量代码，基本上只需编写一个简单的进程和函数即可。如果你能够成功完成，那也是一个不小的成就。编写具有特定功能的内核模块则更具挑战性，你可以从下载Linux内核源码开始，逐步学习并参考一些现成的内核模块示例，如[https://github.com/jvns/kernel-module-fun](https://github.com/jvns/kernel-module-fun)。

### 方法三：阅读内核源码

这个方法听起来可能有些枯燥，但实际上是对个人能力的一种考验。庞大的源代码库不仅考验你的耐心，还考验你的勇气和能力。在阅读过程中，不妨做一些注释，并以博客的形式分享你的理解和心得，这对他人也是一种帮助。

### 方法四：参加Linux内核培训

这种方法需要一定的资金和时间投入，但回报也是显著的。你可以寻找相关的培训班进行系统学习。此外，还有一些项目可以帮助你更深入地参与内核开发，例如：

- **GNOME女性拓展实习项目**：这是一个针对女性开发者的实习项目，提供三个月的内核开发机会，并且还有5000美元的报酬。
- **Google Summer of Code (GSoC)**：每年举办的开源软件开发项目，鼓励大学生参与开源项目的开发。自2005年以来，已有来自全球超过100个国家的7,500名学生参与其中，产生了超过50万行代码。

转载请注明出处：Linux中国，夜域诡士