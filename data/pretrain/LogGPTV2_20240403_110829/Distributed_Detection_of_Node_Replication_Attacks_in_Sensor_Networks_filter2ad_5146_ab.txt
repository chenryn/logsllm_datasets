A distributed or local protocol could potentially revoke
replicated nodes in a more timely fashion. Finally, many
networks do not have the luxury of a powerful base sta-
tion, making a distributed solution a necessity.
√
In terms of security, this protocol achieves 100% de-
tection of all replicated nodes, assuming all messages
successfully reach the base station. As far as efﬁciency,
if we assume that the average path length2 to the base
station is O(
n) and each node has an average degree d
(for d (cid:3) n), then this protocol requires O(n
n) com-
munication for all of the reports from the nodes to reach
the base station. The storage required at each node is
O(d). At the base station, the protocol requires O(n· d),
though storage is presumably less of a concern for the
base station.
√
3.2 Local Detection
To avoid relying on a central base station, we could
instead rely on a node’s neighbors to perform replica-
tion detection. Using a voting mechanism, the neigh-
bors can reach a consensus on the legitimacy of a given
node. Unfortunately, while achieving detection in a dis-
tributed fashion, this method fails to detect distributed
node replication in disjoint neighborhoods within the
network. As long as the replicated nodes are at least
two hops away from each other, a purely local approach
cannot succeed.
4 Preliminary Approaches
One might imagine addressing the shortcomings of
previously proposed protocols by implementing dis-
tributed detection using a simple broadcast scheme, or
by using deterministic replication of location claims. To
the best of our knowledge, neither of these protocols
2This will hold true if the sensor network deployment approximates
any regular polygon.
Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE
have been discussed in the literature. Despite their draw-
backs, we discuss them to provide background and intu-
ition for our two primary protocols, Randomized Mul-
ticast and Line-Selected Multicast, presented in Sec-
tions 5 and 6 respectively. In all four protocols, we as-
sume that nodes know their own geographic positions.
Numerous researchers have proposed schemes for deter-
mining node location, using everything from highly ab-
stract graph embeddings [28], to connectivity informa-
tion [8], to powerful beacon nodes placed on the perime-
ter of the network [5]. Some of these proposals require
that some or all of the nodes have GPS receivers, but
many do not. For our purposes, any of these protocols
will sufﬁce. We also assume that the nodes in the net-
work remain relatively stationary, at least for the time
it takes to perform one round of replication detection.
If the network designers anticipate occasional mobility,
they can schedule regular detection rounds. As long as a
node successfully participates in a round, it can continue
to communicate until the next round, even if its position
changes in the interim. We discuss additional timing de-
tails in Section 8.2.
4.1 Node-To-Network Broadcasting
One approach to distributed detection utilizes a sim-
ple broadcast protocol. Essentially, each node in the net-
work uses an authenticated broadcast message to ﬂood
the network with its location information. Each node
stores the location information for its neighbors and if it
receives a conﬂicting claim, revokes the offending node.
This protocol achieves 100% detection of all dupli-
cate location claims under the assumption that the broad-
casts reach every node. This assumption may not hold
if the adversary can jam key areas or otherwise interfere
with communication paths through the network. Nodes
could employ redundant messages or authenticated ac-
knowledgment techniques to try to thwart such an attack.
In terms of efﬁciency, this protocol requires each node
to store location information about its d neighbors. One
node’s location broadcast requires O(n) messages, as-
suming the nodes employ a duplicate suppression algo-
rithm in which each node only broadcasts a given mes-
sage once. Thus, the total communication cost for the
protocol is O(n2). Given the simplicity of the scheme
and the level of security achieved, this cost may be justi-
ﬁable for small networks. However, for large networks,
the n2 factor is too costly, so we investigate schemes
with a lower cost.
4.2 Deterministic Multicast
To improve on the communication cost of the previ-
ous protocol, we describe a detection protocol that only
shares a node’s location claim with a limited subset of
deterministically chosen “witness” nodes. When a node
broadcasts its location claim, its neighbors forward that
claim to a subset of the nodes called witnesses. The wit-
nesses are chosen as a function of the node’s ID. If the
adversary replicates a node, the witnesses will receive
two different location claims for the same node ID. The
conﬂicting location claims become evidence to trigger
the revocation of the replicated node.
More formally, in this protocol, whenever node γ
hears a location claim lα from node α, it computes
F (α) = {ω1, ω2, . . . , ωg}, where F maps each node ID
in the set of possible node IDs, S, to a set of g node IDs:
F : S → {σ : σ ∈ 2S,|σ| = g}
(1)
The nodes with IDs in the set {ω1, ω2, . . . , ωg} consti-
tute the witnesses for node α. Node γ forwards lα to
each of these witnesses. If α claims to be at more than
one location, the witnesses will receive conﬂicting loca-
tion claims, which they can ﬂood through the network,
discrediting α.
n
√
√
In this protocol, each node in the network stores g lo-
cation claims on average. For communication, assuming
α’s neighbors do not collaborate, we will need each of
α’s neighbors to probabilistically decide which of the ωi
to inform. If each node selects g ln g
random destinations
d
from the set of possible ωi, then the coupon collector’s
problem [7] assures us that each of the ωi’s will receive
at least one of the location claims. Assuming an aver-
age network path length of O(
n) nodes, this results in
O( g ln g
) messages. Unfortunately, this cost does not
d
provide much security. Since F is a deterministic func-
tion, an adversary can also determine the ωis. Thus, they
become targets for subversion. If the adversary can cap-
ture or jam all g of the messages destined to the ωis, then
she can create as many replicas of α as she desires (lim-
ited only by the requirement that no two replicas share
a neighbor). Since the communication costs of this pro-
tocol grow as O(g ln g), we cannot afford a large value
for g, and yet a small value for g allows the adversary al-
most unlimited replication abilities after compromising
a ﬁxed number of nodes; in other words, if the adversary
controls the g witnesses for α, she can create unlimited
replicas of α and suppress the conﬂicting reports arriv-
ing at the witness nodes. These disadvantages make this
protocol unappealing.
5 Randomized Multicast
To improve the resiliency of the deterministic mul-
ticast protocol discussed in Section 4.2, we propose a
new protocol that randomizes the witnesses for a given
node’s location claim, so that the adversary cannot an-
ticipate their identities. When a node announces its lo-
cation, each of its neighbors sends a copy of the location
claim to a set of randomly selected witness nodes. If the
adversary replicates a node, then two sets of witnesses
Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE
√
will be selected. In a network of n nodes, if each loca-
n witnesses, then the birthday paradox
tion produces
predicts at least one collision with high probability, i.e.,
at least one witness will receive a pair of conﬂicting lo-
cation claims. The two conﬂicting locations claims form
sufﬁcient evidence to revoke the node, so the witness can
ﬂood the pair of locations claims through the network,
and each node can independently conﬁrm the revocation
decision.
5.1 Assumptions
As discussed in Section 4, our protocols assume that
each node knows its own location. We also assume that
the network utilizes an identity-based public key sys-
tem such that each node α is deployed with a private
−1
α , and any other node can calculate α’s public
key, K
key using α’s ID, i.e., Kα = f(α).
If necessary, we
could replace this system with a more traditional PKI
in which we assume the network authorities use a mas-
−1
ter public/private-key pair (KM, K
M ) to sign α’s pub-
lic key; however, transmitting this public-key certiﬁcate
will have a substantial communication overhead.
Traditionally, researchers have assumed that public
key systems exceed the memory and computational ca-
pacity of sensor nodes. However, public key cryptogra-
phy on new sensor hardware may not be as prohibitive
as traditionally assumed. In recent work, Malan et al.
demonstrate that they can successfully generate 163 bit
ECC keys on the MICA 2 in under 34 seconds [22]. Fur-
thermore, the latest generation of Telos sensors come
with 10KB of RAM and can achieve 5x the data rate of
the MICA 2, making public-key algorithms more prac-
tical. In Section 8.3.2, we discuss how we could instead
use symmetric-key cryptography to lower the computa-
tional overhead, at the expense of additional communi-
cation.
5.2 Protocol Description
At a high level, the protocol has each node broadcast
its location claim, along with a signature authenticating
the claim. Each of the node’s neighbors probabilisti-
cally forwards the claim to a randomly selected set of
witness nodes. If any witness receives two different lo-
cation claims for the same node ID, it can revoke the
replicated node. The birthday paradox ensures that we
detect replication with high probability using a relatively
limited number of witnesses.
More formally, each node α broadcasts a location
claim to its neighbors, β1, β2,
. . . , βd. The loca-
tion claim has the format (cid:6)IDα, lα,{H(IDα, lα)}
(cid:7),
where lα represents α’s location (e.g., geographic coor-
dinates (x, y)). Upon hearing this announcement, each
neighbor, βi, veriﬁes α’s signature and the plausibility
−1
α
K
of lα (for example, if each node knows its own posi-
tion and has some knowledge of the maximum prop-
agation radius of the communication layer, then it can
loosely bound α’s set of potential locations). Then, with
probability p, each neighbor selects g random locations
within the network and uses geographic routing (e.g.,
GPSR [19]) to forward α’s claim to the nodes closest to
the chosen locations (as in GHT [30]). Since we have
assumed the nodes are distributed randomly, this should
produce a random selection from the nodes in the net-
work. In Section 5.3, we show that the probability of
selecting the same node more than once is generally neg-
ligible. Collectively, the nodes chosen by the neighbors
constitute the witnesses for α.
Each witness that receives a location claim, ﬁrst ver-
iﬁes the signature. Then, it checks the ID against all of
the location claims it has received thus far. If it ever re-
ceives two different locations claims for the same node
ID, then it has detected a node replication attack, and
these two location claims serve as evidence to revoke the
node. It blacklists α from further communication by im-
mediately ﬂooding the network with the pair of conﬂict-
(cid:2)
α. Each node receiving this
ing location claims, lα and l
pair can independently verify the signatures and agree
with the revocation decision. Thus, the sensor network
both detects and defeats the node replication attack in a
fully distributed manner. Furthermore, the randomiza-
tion prevents the adversary from predicting which node
will detect the replication.
5.3 Security Analysis
Let malicious node α claim to be at L locations, l1,
l2,. . . , lL. We would like to determine the probability of
a collision using the randomized multicast protocol out-
lined above, since a collision at a witness corresponds
to detection of α’s replication. At each location li, p · d
nodes randomly select g witnesses. If the neighbors co-
ordinated perfectly, this would store α’s location claim
at exactly p · d · g locations. However, since we pre-
fer to have each neighbor act independently, there may
be some amount of overlap between the witnesses each
neighbor selects. To determine the impact of this over-
lap, we would like to determine the number of nodes,
Nreceive, that will receive the location claim assuming
the neighbors choose witnesses independently. If Pclaim
is the probability that a node hears at least one claim and
Pnone is the probability that a node hears no location
claims, then we have:
E[Nreceive] = n · Pclaim
Pclaim = 1 − Pnone
(2)
(3)
Since each neighbor is assumed to select g random,
unique witness locations, the probability (Pf ) that a
node fails to hear any of the g announcements from one
Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE
neighbor is:
Pf = 1 − g
n
(4)
Since each neighbor decides independently whether to
send out location claims, the number of nodes that ac-
tually send out location claims is distributed binomially,
with mean p · d and variance d · p(1 − p). For a network
with d = 20 and p = 1
10 , the variance will be less than
0.005, so we will approximate the number of neighbors
that send out locations claims as p · d. Since the neigh-
bors choose their destinations independently, we have:
(cid:2)p·d
(cid:1)
1 − g
n
Pnone =
(5)
(6)
Combining equations 2, 3 and 5, the number of witness
nodes that receive at least one location claim is:
E[Nreceive] = n ·
(cid:2)p·d(cid:2)
(cid:1)
1 −
(cid:1)
1 − g
n
The Binomial Theorem allows us to approximate
(1 − x)y as (1 − xy) for small x, so as long as g (cid:3) n,
we have Nreceive ≈ p·d·g, so overlapping witness loca-
tions should not impact the security of the protocol. As
an example, in a network with n = 10, 000, g = 100,
d = 20, and p = 0.1, perfect coordination would tell
200 nodes, while independent selection would tell 199.
Thus, for the remainder of the analysis, we will assume
that p · d · g nodes receive each location claim.
If the adversary inserts L replicas of α, we would
like to determine the probability that two conﬂicting lo-
cation reports collide at some witness node, since this
corresponds to the probability that a witness detects the
node replication. Note that even if there are more than
two replicas of α, we still only need two location claims
to collide in order to completely revoke all L of the
replicas, since one collision will prompt a network-wide
ﬂood of the duplicate claims (li and lj) and any other
node that has heard location claim lk for k (cid:9)= i, j will
also revoke α.
Following the standard derivation of the birthday
paradox [7], the probability Pnc1 that the p · d · g re-
cipients of claim l1 do not receive any of the p · d · g
copies of claim l2 is given by:
(cid:1)
1 − p · d · g
(cid:2)p·d·g
Pnc1 =
n
(7)
Similarly, the probability Pnc2 that the 2·p·d·g recipients
of claims l1 and l2 do not receive any of the p·d·g copies
(cid:1)
of claim l3 is given by:
1 − 2 · p · d · g
(cid:2)p·d·g
Pnc2 =
(8)
n
Thus, the probability Pnc of no collisions at all is given
by:
(cid:1)