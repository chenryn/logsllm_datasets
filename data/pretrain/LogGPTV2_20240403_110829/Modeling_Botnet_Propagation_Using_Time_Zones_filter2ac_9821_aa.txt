title:Modeling Botnet Propagation Using Time Zones
author:David Dagon and
Cliff Changchun Zou and
Wenke Lee
Modeling Botnet Propagation Using Time Zones
David Dagon1
Wenke Lee1
1College of Computing, Georgia Institute of Technology,
Cliff Zou2
801 Atlantic Dr., Atlanta, Georgia, USA 30332-0280
fdagon, PI:EMAIL
http://www.cc.gatech.edu/
2School of Computer Science, University of Central Florida,
4000 Central Florida Blvd. Orlando, FL 32816-2362
PI:EMAIL
Abstract
Time zones play an important and unexplored role in
malware epidemics. To understand how time and loca-
tion affect malware spread dynamics, we studied botnets,
or large coordinated collections of victim machines (zom-
bies) controlled by attackers. Over a six month period
we observed dozens of botnets representing millions of vic-
tims. We noted diurnal properties in botnet activity, which
we suspect occurs because victims turn their computers off
at night. Through binary analysis, we also con(cid:2)rmed that
some botnets demonstrated a bias in infecting regional pop-
ulations.
Clearly, computers that are of(cid:3)ine are not infectious, and
any regional bias in infections will affect the overall growth
of the botnet. We therefore created a diurnal propagation
model. The model uses diurnal shaping functions to capture
regional variations in online vulnerable populations.
The diurnal model also lets one compare propagation
rates for different botnets, and prioritize response. Because
of variations in release times and diurnal shaping functions
particular to an infection, botnets released later in time may
actually surpass other botnets that have an advanced start.
Since response times for malware outbreaks is now mea-
sured in hours, being able to predict short-term propagation
dynamics lets us allocate resources more intelligently. We
used empirical data from botnets to evaluate the analytical
model.
1 Introduction
Epidemiological models of malware propagation are
maturing. Earlier work used simple susceptible-infected
(SI) models to measure the total infected population over
time [ZGT02]. Follow-up work signi(cid:2)cantly expanded
this analysis to include patching behavior (resistance)
in susceptible-infected-recovered (SIR) models [KRD04].
Despite these many improvements, much of our under-
standing of computer worm epidemiology still relies on
models created by the public health community in the
1920s [DG99].
Continued improvements in worm models will come
from two areas: an improved understanding of the prob-
lem domain, and improved ability to respond, which makes
new factors relevant to a model.
Improvements belong-
ing to the (cid:2)rst category can be found in more recent anal-
ysis such as [SM04], which traced signi(cid:2)cant worm out-
breaks, and [ZTGC05,WPSC03,WSP04], which examined
a speci(cid:2)c type of routed worm, and [ZTG04], which ex-
amines speci(cid:2)c types of propagation (e.g., e-mail). Model
enhancements belonging to the second category are far
fewer. So far, quarantine-based analysis has been the pri-
mary response-oriented improvement to malware propaga-
tion models [ZGT03, PBS+04, MSVS03].
Our work belongs to this second category, and builds on
recent improvements in response technologies. Over the
previous years, efforts at creating Internet-wide monitor-
ing networks have yielded some results. Distributed sens-
ing projects [Ull05, YBJ04, Par04] can take some credit for
helping reduce the response time for worms to hours in-
stead of days. Anti-virus companies similarly respond to
outbreaks often within hours [Mar04].
This improved response makes time a more relevant fac-
tor for worm models. In Section 3 we note how time zones
play a critical role in malware propagation. Now that re-
sponse times take only hours [Mar04], and are often local-
ized, models of malware spreading dynamics must similarly
improve.
In addition to time, we also note that location plays a
critical role in malware spreading. Some malware tends
to focus on particular geographic regions, corresponding to
different market segments for vulnerable software (e.g., a
language edition of an operating system). We combine both
of these factors in models that consider the importance of
time zones (literally, time and zone location) in propaga-
tion.
Our research looks at propagation dynamics in botnets.
We studied dozens of botnets, comprised of millions of indi-
vidual victims over a six month period. Our study of botnets
reveals an intriguing diurnal pattern to botnet activity. Our
model explains this behavior, and has two principal bene-
(cid:2)ts: (a) the ability to predict future botnet propagation char-
acteristics, for those botnets using similar vulnerabilities,
and (b) the ability to priority rank malware based on time-
of-release and regional focus, so that resources are devoted
to faster spreading botnets.
Section 2 provides a background discussion of botnets,
and details our data collection efforts. In Section 3, we pro-
vide a model of botnet propagation. After noting related
work in Section 4, the conclusion in Section 5 suggests fur-
ther areas of study.
2 Background
Using automated scanners and tools, attackers have
carved out a large portion of the Internet as continuously
infected networks. The victims are bots or zombies in large
networks, or botnets, controlled by hackers. There are tens
(if not hundreds) of millions of such victims on the Inter-
net [Dag05]. Some estimates hold that over 170,000 new
victims are compromised each day [Cip05].
Indeed it is
hardly possible for home users to purchase a new com-
puter and successfully update before becoming attacked.
The (cid:147)vulnerability window(cid:148), or the time before a random
infection strikes a new computer, is often less than 20
minutes. As a result, others have observed that a (cid:147)bot-
net is comparable to compulsory military service for win-
dows boxes(cid:148) [The05a]. For a general discussion of botnets,
see [CJ05, SS03, The05a].
For purposes of modeling, we can think of botnets as het-
erogeneous collections of infections. They are composed
of the victims reaped from different viruses, worms and
trojans. Thus, botnets are correctly referred to as either
viruses, worms or trojans, depending on the context. The
original infections compel the victims to run bot programs,
which allow for remote administration.
Victims are usually spread over diverse parts of the
world, but can be concentrated in particular regions, de-
pending on how the underlying infections propagate. For
example, some attacks target a particular language edition
of an operating system, or use a regional language as part of
a social engineering ploy. Such factors tend to concentrate
the victim population in a particular location. (We speculate
that this may explain why most e-mail virus propagations
use simple English, to maximize its appeal.) These regional
variations in infected populations play an important role in
malware spread dynamics.
2.1 Data Collection
To control or (cid:147)rally(cid:148) their botnets, botmasters force their
victims to contact command-and-control (C&C) servers
(e.g., an IRC server, a webpage, or e-mail). Once connected
to the servers, the bots are given instructions, put to work,
or made to download additional programs. If such central-
ized servers are recovered, botmasters can merely update
DNS entries to point to a new central server. This practice
is known as (cid:147)herding(cid:148) a botnet to a new location. While
such centralized control may not be the favored topology for
much longer [Dag05, CJ05], we can manipulate this com-
mon feature of botnets to perform simple data collection.
To gather botnets for study, we identi(cid:2)ed botnets through
various traditional means (e.g., honeypots), and then manip-
ulated the DNS service for the C&C server, so that all traf(cid:2)c
was sent to our sinkhole for study. The sinkholes were used
to run tarpits [Har02,Lis01], honeypots [Spi03,Pro05], and
light-weight responders, e.g., [Pro03,Kre03]. For more dis-
cussion of network response options see [YBP05].
Our sinkhole redirection was accomplished by several
steps. First, using captured malware (e.g., from a honeypot,
spam (cid:2)lter, honeyd, and other commonly available sources),
we identify the command and control server used by the
botnet. This can be done by unpacking the binary (e.g., with
the help of tools such as IDA Pro, or PEiD [JQsx05] and a
hex editor) and scanning the binary for DNS resolution op-
erations, (e.g., gethostbyname(3)). This is also done
less precisely by observing the malware’s rallying behav-
ior in an emulator (e.g., a virtual honeypot). The latter is
less reliable because malware may selectively resolve one
of many encoded C&C domains, or behave differently in
the emulator [Hol05]. Hand-driven binary analysis, how-
ever, can usually reveal the malware’s rallying behavior.
Second, we then identify the DNS Start of Authority
(SOA) for the command and control box using well-known
techniques [RIP05]. We then contact the registrar for the
domain and the DNS authority, and instruct them to ei-
ther (cid:147)park(cid:148) the DNS (so that, for example, an RFC 1918
non-routable address is returned), or to supply an A-Rec
for a sinkhole, or a similar suitable Record Response (RR).
We followed a strict one-ip-per-botnet rule, to facilitate the
study of single botnets. For most bots, we also used layer-7
sinkholes (i.e., honeyd, or similar scripts) instead of layer-4
sinkholes (e.g., routing blackholes) to prevent random scans
from being confused with actual botnet participation.
Conceptually, one might think of this capturing tech-
nique as a form of DNS self-poisoning, except that alter-
ing the DNS entry for the bot domain is done legitimately,
in accordance with the DNS operator’s policies, and with
the permission and cooperation of all relevant authorities.
In our study, we worked with several DNS operators who
agreed to redirect bot victims to our sinkhole. The oper-
ators would enter CNAME records in their DNS servers to
point victims to our sinkhole.
Since all the botnets being studied used DNS to locate
their C&C server, redirection captured most of the bot-
net members. Through binary analysis, we con(cid:2)rmed that
the bots did not use hard-coded IP addresses. We also re-
stricted our study to non-public servers, so no legitimate
traf(cid:2)c polluted our data capture. Our sinkholes completed
3-way TCP handshakes with victims, so that random Inter-
net SYN scans did not skew our population counts. Fur-
ther, by setting a zero TCP window, our sinkhole prevented
most bots from disconnecting (e.g., through an application-
layer idle timeout), and then reconnecting after changing
dynamic addresses. This reduced the number of victims that
were double-counted due to DHCP churn.
These techniques yield what we believe is a fairly ac-
curate population count for an infection. Nonetheless, our
data probably did have casual, non-malicious connection at-
tempts, and certainly had some amount of DHCP churn.
Thus, while others models use trace (cid:2)les from large
(cid:147)internet telescope(cid:148) structures to infer which machines
scanning the internet share a common infection [Moo02b,
YBP05], we believe our simple data collection technique
yields accurate trace (cid:2)les for each infection. More impor-
tantly, this technique can potentially distinguish two botnets
that use the same infection, while scan-based sensors may
associate the traf(cid:2)c together based on port numbers. Sig-
ni(cid:2)cantly, we also learn which victims are associated with
which botnet, based on the domain they attempt to resolve.
Thus, although our data collection technique focuses on
botnets using centralized DNS (currently, the most common
rallying technique used by botnets), we do not have to cor-
relate scans from diverse sources to infer the structure of
the botnet. We were able to direct some 50 botnets to the
sinkhole over a six month period. Our sinkhole captured
botnets ranging from just a few hundred victims to tens of
thousands of victims. One botnet featured over 350,000 vic-
tims, a record [CJ05].
One might wonder whether this redirection technique
yields data about worms instead of botnets. After all, many
of the botnets are created by worms. The question is: How
is redirection different from traditional worm measurement
techniques? We believe redirection measures botnets (as
opposed to just worms) because the traf(cid:2)c yield is entirely
related to the command-and-control of a malicious network.
Worm measurement techniques, by contrast, tend to col-
lect scans by worms (i.e., propagation attempts), and do
not usually capture the coordinating messages between bots
and botmasters (i.e., DNS resolution of the command-and-
control domain). Since DNS redirection gives us the oppor-
tunity to witness only the command-and-control traf(cid:2)c, and
not the propagation attempts, our technique measures prop-
erties of botnets, regardless of how the underlying infection
spreads. Thus, the model we propose is for botnets, albeit
botnets created by worms.
The data collection technique is not the focus of the pa-
per, and deserves more careful separate study. We welcome
input from the research community on what other factors
(besides our use of command-and-control messages) permit
the measurement of botnets. Additionally, we acknowledge
that there are certain types of botnets that would evade such
measurement efforts. We merely use redirection to quickly
perform population counts on botnets. In section 3 we dis-
cuss particular botnets in detail used to derive our diurnal
propagation model.
3 Model of Botnet Growth
Our goal is to use our observations of previous botnets
to predict the behavior of future botnets. Botnets are so
widespread that we need a technique to comparatively rank
them, and help prioritize responses. Existing models let us
predict the total botnet population over lengthy periods of
time (e.g., over days). But since most viruses used to spread
infections are short lived, we need a model that can predict
short-term variations in population growth.
Further, existing models treat all vulnerable populations
as the same. Our observations of botnets, however, show
that they use a heterogenous mix of different infections ex-
ploiting different sets of vulnerabilities, often in distinct net-
works, with variable behavior across time zones. We there-
fore need a model that can express differences in susceptible
populations, and gauge how this affects propagation speed.
There are a variety of reasons why existing models have
not examined factors such as time zones. First, converting
a network address into a time zone (or geographic region)
is dif(cid:2)cult, as noted in [Mic05], and there are few available
resources, e.g., [Coo03]. Second, since the earlier models
were proposed, the state of the art for response and quaran-
tine has improved. Most antivirus companies can issue sig-
nature updates in under 12 hours (or less), so understanding
the short-term growth of a worm is more relevant.
For our model, we make another observation about bot-
net behavior. We were (cid:2)rst struck by the strongly diurnal
nature of the botnets trapped in the sinkhole. Figure 1(a)
shows a typical plot of SYN rates over time, broken down
by geographic regions, for a large 350K member botnet.
This pattern repeated itself for both email-spreading worms
and scanning worms observed in the sinkhole. A logical
explanation is that many users turn their computers off at
night, creating a sort of natural quarantine period, and vary-
ing the number of victims available in a geographical re-
gion.
Such signi(cid:2)cant changes in populations over time surely
affects propagation rates. To model the strongly diurnal be-
havior of botnets observed in Figure 1(a), we analyze bots
grouped into time zones. Consider a very simpli(cid:2)ed model
represented in Figure 1(b), where one host is shown in a col-
umn of time zones, T Z. In the (cid:2)rst hour, the infected host
in T Zi infects T Zi(cid:0)1 and T Zi+1; however, since T Zi(cid:0)1
is experiencing a low diurnal phase at Hour2 (e.g., night
time, represented by diagonalized shaded boxes), the mal-
ware does not spread further until several hours later (in-
dicated by a dashed line). By contrast, the infection sent
to T Zi+1 spreads immediately, only later entering a diurnal
phase.
This conceptual model exaggerates a key property of the
diurnal model: different propagation rates, depending on
time zone and time of day. Time Zones not only express rel-
ative time, but also geography. If there are variable numbers
of infected hosts in each region, then the (cid:147)natural quaran-
tine(cid:148) effect created by a rolling diurnal low phase can have
a signi(cid:2)cant impact on malware populations and growth.
Below, we describe a model to express the variable num-
ber of infected hosts, time zones, and regions of the Inter-
net that we observed in the empirical data. We then test
this model against other observed botnets. The model in
turn lets us estimate short-term population projections for
a given worm, based on its regional focus, and the time of
day. The model also tells us when bots spread fastest, and
allows us to compare the short-term (cid:147)virulence(cid:148) of two dif-
ferent bots. This in turn can be used to improve surveillance
and prioritize response.
3.1 Time Zone›Based Propagation Modeling
We model the computers in each time zone as a (cid:147)group(cid:148).
The computers in each time zone have the same diurnal dy-
namics, no matter whether they are infected or still vulner-
able.
In our model, the diurnal property of computers is
determined by computer user behavior, not by the infection
status of computers. If a user changes his diurnal behavior
because he discovers his computer is infected, then we as-
sume the computer will quickly be patched or removed by
the user.
The number of infected hosts in a region varies over
time. So we de(cid:2)ne (cid:11)(t) as the (cid:147)diurnal shaping function(cid:148),
or the fraction of computers (that have the vulnerability be-
ing exploited by the botnet under consideration) in a time
zone that is still on-line at time t. Therefore, (cid:11)(t) is a pe-
riodical function with the period of 24 hours. Usually, (cid:11)(t)
reaches its peak level at daytime and its lowest level at night
when many users go to sleep and shutdown their computers.
Not all the computers are shut off at night, of course. So in
modeling and experiments, we can derive (cid:11)(t) for a given
time zone based on monitored malicious traf(cid:2)c.
In the following, we (cid:2)rst derive the worm propagation
diurnal model for a single time-zone by assuming comput-