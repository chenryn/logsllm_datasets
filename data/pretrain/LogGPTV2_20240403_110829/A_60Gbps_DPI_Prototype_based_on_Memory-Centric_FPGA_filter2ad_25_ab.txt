(cid:54)(cid:55)(cid:55)(cid:17)(cid:17)(cid:17)(cid:54)(cid:55)(cid:55)(cid:36)(cid:38)(cid:16)(cid:39)(cid:41)(cid:36)(cid:3)(cid:38)(cid:82)(cid:80)(cid:83)(cid:76)(cid:79)(cid:76)(cid:81)(cid:74)(cid:3)(cid:68)(cid:81)(cid:71)(cid:3)(cid:50)(cid:83)(cid:87)(cid:76)(cid:80)(cid:76)(cid:93)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:59)(cid:3)(cid:21)(cid:23)(cid:44)(cid:81)(cid:83)(cid:88)(cid:87)(cid:3)(cid:39)(cid:68)(cid:87)(cid:68)(cid:54)(cid:87)(cid:85)(cid:72)(cid:68)(cid:80)(cid:53)(cid:88)(cid:79)(cid:72)(cid:86)(cid:41)(cid:51)(cid:42)(cid:36)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:53)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:68)(cid:71)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:85)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:48)(cid:68)(cid:76)(cid:81)(cid:3)(cid:38)(cid:82)(cid:81)(cid:87)(cid:85)(cid:82)(cid:79)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:40)(cid:81)(cid:74)(cid:76)(cid:81)(cid:72)(cid:17)(cid:17)(cid:17)(cid:51)(cid:38)(cid:44)(cid:72)(cid:39)(cid:39)(cid:53)(cid:22)(cid:3)(cid:54)(cid:39)(cid:53)(cid:36)(cid:48)(cid:21)(cid:16)(cid:83)(cid:82)(cid:85)(cid:87)(cid:3)(cid:53)(cid:36)(cid:48)(cid:59)(cid:3)(cid:23)(cid:27)(cid:54)(cid:55)(cid:55)(cid:16)(cid:19)(cid:20)(cid:48)(cid:40)(cid:48)(cid:40)(cid:54)(cid:55)(cid:55)(cid:16)(cid:19)(cid:21)(cid:48)(cid:40)(cid:48)(cid:40)(cid:54)(cid:55)(cid:55)(cid:16)(cid:21)(cid:23)(cid:48)(cid:40)(cid:48)(cid:40)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:40)(cid:81)(cid:74)(cid:76)(cid:81)(cid:72)(cid:86)(cid:54)(cid:55)(cid:55)(cid:36)(cid:38)(cid:16)(cid:39)(cid:41)(cid:36)(cid:3)(cid:38)(cid:82)(cid:80)(cid:83)(cid:76)(cid:79)(cid:76)(cid:81)(cid:74)(cid:3)(cid:68)(cid:81)(cid:71)(cid:3)(cid:50)(cid:83)(cid:87)(cid:76)(cid:80)(cid:76)(cid:93)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:21)(cid:16)(cid:83)(cid:82)(cid:85)(cid:87)(cid:3)(cid:53)(cid:36)(cid:48)(cid:258)(cid:258)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:53)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:53)(cid:88)(cid:79)(cid:72)(cid:86)(cid:44)(cid:81)(cid:83)(cid:88)(cid:87)(cid:3)(cid:39)(cid:68)(cid:87)(cid:68)(cid:3)(cid:54)(cid:87)(cid:85)(cid:72)(cid:68)(cid:80)(cid:51)(cid:38)(cid:44)(cid:72)(cid:68)(cid:71)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:85)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:54)(cid:55)(cid:55)(cid:16)(cid:21)(cid:23)(cid:258)(cid:54)(cid:55)(cid:55)(cid:16)(cid:19)(cid:21)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:40)(cid:81)(cid:74)(cid:76)(cid:81)(cid:72)(cid:3)(cid:91)(cid:23)(cid:27)(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:55)(cid:68)(cid:69)(cid:79)(cid:72)(cid:3)(cid:11)(cid:54)(cid:55)(cid:55)(cid:12)(cid:39)(cid:39)(cid:53)(cid:22)(cid:3)(cid:54)(cid:39)(cid:53)(cid:36)(cid:48)(cid:41)(cid:51)(cid:42)(cid:36)(cid:36)(cid:38)(cid:16)(cid:39)(cid:41)(cid:36)(cid:3)(cid:38)(cid:82)(cid:80)(cid:83)(cid:76)(cid:79)(cid:76)(cid:81)(cid:74)(cid:3)(cid:68)(cid:81)(cid:71)(cid:3)(cid:50)(cid:83)(cid:87)(cid:76)(cid:80)(cid:76)(cid:93)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:48)(cid:88)(cid:79)(cid:87)(cid:76)(cid:16)(cid:70)(cid:82)(cid:85)(cid:72)(cid:3)(cid:38)(cid:51)(cid:56)(cid:21)(cid:16)(cid:83)(cid:82)(cid:85)(cid:87)(cid:3)(cid:53)(cid:36)(cid:48)(cid:51)(cid:38)(cid:44)(cid:72)(cid:68)(cid:71)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:85)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:54)(cid:55)(cid:55)(cid:16)(cid:19)(cid:20)(cid:48)(cid:40)(cid:48)(cid:40)(cid:48)(cid:40)(cid:48)(cid:40)(cid:48)(cid:40)(cid:258)(cid:48)(cid:40)(cid:48)(cid:40)(cid:44)(cid:81)(cid:83)(cid:88)(cid:87)(cid:3)(cid:54)(cid:87)(cid:85)(cid:72)(cid:68)(cid:80)(cid:53)(cid:88)(cid:79)(cid:72)(cid:86)(cid:48)(cid:68)(cid:87)(cid:70)(cid:75)(cid:76)(cid:81)(cid:74)(cid:3)(cid:53)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)Figure 2: The hardware implementation
our prototype, storing the most frequent 256 states in
RAM is enough to cover most STT accesses.
Secondly, in order to fully utilize the high-speed par-
allel processing capability of FPGA, multiple match-
ing engines are implemented in our prototype. As each
matching engine requires an exclusive on-chip STT for
an instant search, it is necessary to deploy duplications
of the STT on chip to enable parallel processing of mul-
tiple matching engines. The number of 256-state STT
stored on chip, however, is limited by the on-chip mem-
ory which is ﬁxed size for a speciﬁc model of FPGA.
We develop a state renumbering mechanism to maxi-
mize the number of on-chip STT by reducing the mem-
ory cost of each STT to a half. Thus, 24 duplications
of the STT in total are deployed on chip. With dual-
port RAMs, each STT can be shared by two matching
engines while ensuring instant access. Thus, 48 parallel
matching engines in total can be implemented, which
greatly improves the overall throughput of the system.
Thirdly, the rules update speed is another important
metric for DPI systems, especially for NIDS. Due to
the limitations of transmission bandwidth and latency
between the multi-core processor and FPGA, the con-
ﬁguration process would be a potential bottleneck. We
observe that for a given state, there only exists several
unique next states for the 256 input symbols. Therefore,
we reduce the 256 repeated writings to several combined
writings, which saves about 90% rule update time.
Fig.2 provides a snapshot of the hardware implemen-
tation of our DPI prototype. It can support high ca-
pacity traﬃc ﬁltering, distribution, and especially deep
packet inspection, with up to 16*10G LAN/WAN/POS
input and 16*10G LAN output in standard SFP+ in-
terfaces. At the core of the board is an Altera Stratix
V GX FPGA, adjacent to a main control card with an
XLS208 multi-core processor in it.
3. DEMONSTRATION
The demonstration environment is set up as in Fig.3.
The main evaluation tool is an EXFO iPro Intelligent
Network Analysis Probe [2], which can provide a 10Gbps
output traﬃc. Connected with a 8-port optical split-
ter, we can generate an input rate of 80Gbps in maxi-
mum. Both the DPI prototype and iPro are connected
to a user terminal in LAN, by which conﬁgurations are
achieved via a Command Line Interface (CLI).
Figure 3: The demonstration environment
(a)
(b)
Figure 4: Packet transmission rate and corre-
sponding DPI performance
We extract string patterns from the public Snort [4]
and Emerging Threats [1] as the string dictionary. Ac-
cording to the buﬀer management mechanism of FPGA,
the overwhelming pending frames which surpass the sys-
tem processing capacity will be discarded by the FIFOs
at the entrances. Thus, we can use the frame loss to in-
dicate whether the system has reached the peak perfor-
mance. Based on RFC 2544 [3], extensive experiments
are conducted with random data streams of 7 diﬀerent
frame sizes respectively. Besides, a real data stream
captured from the Internet is applied to demonstrate
the DPI performance in a real network environment.
Fig.4 shows the packet transmission rates and corre-
sponding throughputs over various rule sets and traf-
ﬁcs. Although the throughput may degrade when the
dictionary size scales, the prototype still provides a rel-
atively high and resilient throughput for large dictio-
naries. Take the stream random-256 for example, it
reaches the peak performance of 64Gbps for the dictio-
nary size of 100, and achieves an average throughput of
59.5Gbps.
4. REFERENCES
[1] Emerging threats: Open source signatures. https:
//rules.emergingthreats.net/open/snort-2.9.0/.
[2] Portable ipro. http://www.exfo.com.
[3] Rfc 2544. http://www.ietf.org/rfc/rfc2544.txt.
[4] Snort v2.9. 2014. http://www.snort.org/.
[5] A. V. Aho and M. J. Corasick. Eﬃcient string
matching: an aid to bibliographic search.
Communications of the ACM, 18(6):333–340, 1975.
[6] Y.-H. E. Yang and V. K. Prasanna. Robust and
scalable string pattern matching for deep packet
inspection on multicore processors. Parallel and
Distributed Systems, IEEE Transactions on,
24(11):2283–2292, 2013.
628
(cid:48)(cid:68)(cid:76)(cid:81)(cid:3)(cid:38)(cid:82)(cid:81)(cid:87)(cid:85)(cid:82)(cid:79)(cid:3)(cid:38)(cid:68)(cid:85)(cid:71)(cid:54)(cid:87)(cid:85)(cid:68)(cid:87)(cid:76)(cid:91)(cid:3)(cid:57)(cid:3)(cid:41)(cid:51)(cid:42)(cid:36)(cid:23)(cid:3)(cid:91)(cid:3)(cid:21)(cid:42)(cid:69)(cid:39)(cid:39)(cid:53)(cid:22)(cid:3)(cid:54)(cid:39)(cid:53)(cid:36)(cid:48)(cid:86)(cid:20)(cid:25)(cid:3)(cid:91)(cid:3)(cid:54)(cid:41)(cid:51)(cid:14)(cid:39)(cid:51)(cid:44)(cid:83)(cid:85)(cid:82)(cid:87)(cid:82)(cid:87)(cid:92)(cid:83)(cid:72)(cid:85)(cid:82)(cid:88)(cid:87)(cid:72)(cid:85)(cid:82)(cid:83)(cid:87)(cid:76)(cid:70)(cid:68)(cid:79)(cid:3)(cid:86)(cid:83)(cid:79)(cid:76)(cid:87)(cid:87)(cid:72)(cid:85)(cid:76)(cid:51)(cid:85)(cid:82) 64 128 256 512 1024 1280 1518 real traffic1000200030004000010203040506070x 106  Packets per secondNumber of rules||200100 64 128 256 512 1024 1280 1518  real traffic100020003000400035404550556065 ||20010060GbpsThroughput (Gbps)Number of rules