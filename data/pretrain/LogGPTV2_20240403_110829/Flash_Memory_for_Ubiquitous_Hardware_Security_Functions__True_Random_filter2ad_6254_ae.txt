coefficient is 0.9022. The results show that fingerprints from 
the  same  page  are  robust  over  multiple  measurements,  and 
can  be  easily  distinguished  from  fingerprints  of  a  different 
chip or page.  
To be used in an authentication scheme, one could set a 
threshold  correlation  coefficient  t.  If,  when  comparing  two 
fingerprints, their correlation coefficient is above t, then the 
two fingerprints are considered to have come from the same 
page/chip. If their correlation coefficient is below t, then the 
fingerprints are assumed to be from different pages/chips.  
Figure 12. Histogram of correlation coefficients for pages compared to the 
same page on a different chip (total 66,240 comparisons). 
The  correlation  coefficients  are  also  very  low  when  a 
page  is  compared  not  only  to  the  same  page  on  different 
chips, but also to different pages on the same and different 
chips,  shown  in  Figure  13.  There  are  1,656,000  pairs  in 
comparison  –  ((24  pages  *  24  chips)  choose  2)  *  10 
measurements. This indicates that fingerprints from different 
parts  (pages)  of  a  chip  can  be  considered  as  two  different 
fingerprints and do not have much correlation. Therefore, the 
Figure 14. Histogram of correlation coefficients for all intra-chip 
comparisons (total 25,920 comparisons). 
In  such  a  scheme,  there  is  a  potential  concern  for  false 
positives and false negatives. A false negative is defined as 
comparing  fingerprints  that  are  actually  from  two  different 
pages/chips,  but  deciding  that  the  fingerprints  are  from  the 
same  page/chip.  A  false  positive  occurs  when  comparing 
fingerprints  from  the  same  page/chip,  yet  deciding  that  the 
fingerprints  came  from  two  different  pages/chips.  The 
threshold  t  can  be  selected  to  balance  false  negatives  and 
positives. A high value of t would minimize false negatives, 
but increase the chance of false positives, and vice versa. 
42
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:10 UTC from IEEE Xplore.  Restrictions apply. 
To  estimate  the  chance  of  false  positives  and  false 
negatives,  we  fit  normal  probability  mass  distribution 
functions  to  the  correlation  coefficient  distribution.  A  false 
positive would arise from a comparison of two fingerprints 
from the same page being below t. The normal distribution 
fitted to the intra-chip comparison data in Figure 14 has an 
average  ȝ  =  0.9722  and  a  std.  deviation  of  0.0095.  For  a 
threshold  of  t  =  0.5,  the  normal  distribution  function 
estimates the cumulative probability of a pair of fingerprints 
having a correlation coefficient below 0.5 as 2.62×10-539. At t 
= 0.7, the probability is estimated as 7.43×10-181. 
The  normal  distribution  function  fitted  to  the  inter-chip 
comparison  data  in  Figure  13  has  a  ȝ  =  0.0076  and  a  std. 
deviation  of  0.0083.  The  estimated  chance  of  a  pair  of 
fingerprints  from  different  chips  exceeding  t  =  0.5  is 
4.52×10-815.  At  t  =  0.3,  the  probability  is  estimated  as 
6.14×10-301. 
The tight inter-chip and intra-chip correlations along with 
low  probability  estimates  for  false  positives  or  negatives 
suggest that the size of fingerprints can possibly be reduced. 
Instead of using all 16,384 bits in a page, we can generate a 
fingerprint  for  a  1024-bit,  512-bit,  or  even  only  a  256-bit 
block. Experiments  show  that  the averages of  the  observed 
correlation  coefficients  remain  similar  to  those  when  using 
every bit in a page while the standard deviation increases by 
a  factor  of  2-3.  However,  the  worst-case  false  negative 
estimates remain low. When using 256 bit fingerprints with 
the  threshold  t  =  0.3,  the  estimate  is  7.91×10-7.  Under  the 
same  conditions,  using  1024  bit  fingerprints  gives  an 
estimated 3.20×10-22 chance of a false negative. 
3)  Temperature Variations and Aging 
To  see  how  robust  the  fingerprints  are  across  different 
temperatures.  We  extracted  fingerprints  from  chips  at  two 
other  ambient  temperatures,  60  °C  and  -5  °C.  We  tested  a 
subset of the chips tested at room temperature – 6 pages (3 
pages in 2 blocks) in 6 chips.  
Of interest is how fingerprints from the same page/chip, 
but  taken  at  different  temperatures,  compare.  Figure  15 
shows the results of the intra-chip comparison between each 
temperature  pair.  Correlations  remain  high  for  fingerprints 
from the same page/chip, indicating that fingerprints taken at 
different temperatures can still be identified as the same. The 
average correlation coefficient is lower than when compared 
without a temperature difference, but is still sufficiently high 
to have very low false positive rates. 
Figure 15. Average, minimum, and maximum correlation coefficients for 
intra-chip comparisons between different ambient temperatures. 
43
Comparing fingerprints from the same page at the same 
temperature  at  -5  °C  or  60  °C  still  yields  high  correlation 
coefficients,  as  expected.  Comparisons of  fingerprints  from 
different pages/chips at different temperatures give very low 
correlation coefficients. 
Figure 16. Average, minimum, and maximum correlation coefficients for 
comparisons between fresh and stressed Flash. 
Flash  chips  have  a  limited  lifetime,  wearing  out  over 
many program/erase (P/E) cycles. For a page’s fingerprint to 
be useful over time, fingerprints taken later in life should still 
give  high  correlation  with  younger  fingerprints.  Figure  16 
shows  the  results  of  comparing  fingerprints  for  the  same 
page/chip  taken  when  a  Flash  chip  is  new  to  fingerprints 
taken  after  a  different  number  of  P/E  cycles.  While  the 
average  correlation  coefficient  goes  down  noticeably,  we 
note that it appears to bend towards an asymptote as the chip 
wears out. Even after 500,000 P/E cycles, which is beyond 
the typical lifetime of Flash chips, the average coefficient is 
still  high  enough  to  distinguish  fingerprints  of  the  same 
page/chip  from  fingerprints  acquired  from  a  different 
page/chip. 
However,  we  found  that  an  extreme  wear-out  such  as 
500,000 P/E cycles can raise a non-negligible false positive 
concern  (10-4)  for  short  256  or  512-bit  fingerprints.  This 
result indicates that we need longer fingerprints if they need 
to be used over a long period of time without a re-calibration.  
4)  Security 
An  attacker  could  attempt  to  store  the  fingerprints  of  a 
Flash device and replay the fingerprint to convince a verifier 
that he has the Flash chip in question. If the attacker cannot 
predict  which  page(s)  or  parts  of  a  page  (for  shorter 
signatures) will be fingerprinted, he would need to store the 
fingerprints  for  every  page  to  ensure  success.  The  Flash 
chips in our experiments required about 800 partial program 
cycles per fingerprint. As the fingerprint comprises the order 
in which the bit was programmed, each bit’s ordering could 
be  stored  as  a  10-bit  number.  To  store  an  entire  chip’s 
fingerprints would require 10x the chip storage.  
Acquiring a single fingerprint is relatively fast. Our setup 
could record an entire page’s fingerprint in about 10 seconds. 
However, there are 131,072 pages on our (relatively small) 
test chip; characterizing one chip would take about 2 weeks. 
The characterization time depends on the speed of the Flash 
interface, and we plan to further investigate the limit on how 
fast fingerprints can be characterized.  
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:10 UTC from IEEE Xplore.  Restrictions apply. 
D.  Applicability to Multiple Flash Chips 
Most of the above experimental results are obtained from 
the  Micron  SLC  Flash  memory.  In  order  to  answer  the 
question of whether the proposed techniques are applicable 
to  Flash  memory  in  general,  we  have  repeated  both  RNG 
and fingerprinting tests on four types of Flash memory chips 
in 0, including an MLC chip. 
The  experiments  showed  that  RNG  and  fingerprinting 
both work on all four types of Flash chips, with comparable 
performance.  Detailed  results  are  not  included  as  they  do 
not add new information.  
While  we  found  that  the  proposed  algorithm  works 
without any change in most cases, there was one exception 
where  the  fingerprinting  algorithm  needed  to  be  slightly 
modified  in  order  to  compensate  for  systematic  variations 
for  certain  manufacturers.  For  example,  for  the  Hynix  and 
Numonyx chips, we found that bits from the even bytes of a 
page tend to be programmed quicker than bits from the odd 
bytes. Similarly, for the MLC chip, bits in a page divide into 
two  groups:  a  quickly  programmed  group  and  a  slowly 
programmed  group.  To  accommodate  such  systematic 
behaviors, the fingerprinting algorithm was changed to only 
compare  programming  ordering  of  bits  within  the  same 
group.  
VI.  APPLICATION SCENARIOS 
This  section  briefly  discusses  how  the  Flash  memory 
based  security 
functions,  namely  RNGs  and  device 
fingerprints,  can  be  used  to  improve  security  of  electronic 
devices.  We  first  discuss  where  the  techniques  can  be 
deployed and present a few use cases.  
A.  Applicability 
The proposed Flash-based security techniques work with 
commercial off-the-shelf Flash memory chips using standard 
interfaces. For example, our prototype design is based on the 
Open NAND Flash Interface (ONFI) [13], which is used by 
many  major  Flash  vendors  including  Intel,  Hynix,  Micron, 
and  SanDisk.  Other  Flash  vendors  such  as  Samsung  and 
Toshiba also use similar interfaces to their chips.  
The proposed techniques can be applied to any Flash or 
other floating-gate non-volatile memory, as long as one can 
control  read,  program  (write),  and  erase  operations  to 
specific  memory  locations  (pages  and  blocks),  issue  the 
RESET  command  and  disable  internal  ECC.  Embedded 
systems  typically  implement  a  Flash  memory  controller  in 
software,  exposing  the  low-level  Flash  chip  interface  to  a 
software  layer.  Our  prototype  USB  board  in  the  evaluation 
section  is  an  example  of  such  a  design.  While  we  did  not 
have a chance to study details, the manual for the TI OMAP 
processor  family  [14],  which  is  widely  used  in  mobile 
phones, indicates that its External Memory Interface (EMI) 
requires  software  to  control  each  phase  of  NAND  Flash 
accesses.  In  such  platforms  where  Flash  accesses  are 
controlled by  software, our  techniques  can be  implemented 
as relatively simple software changes.  
For  large  memory  components  such  as  SSDs,  the  low-
level interfaces to Flash memory chips may not be exposed 
to  a  system  software  layer.  For  example,  SSD  controllers 
often implement wear-leveling schemes that move data to a 
new  location  on  writes.  In  such  devices,  the  device  vendor 
needs  to  either  expose  the  Flash  interfaces  to  higher  level 
software or implement the security functions in firmware.   
B.  Random Number Generation 
The  Flash-based  random  number  generator  (RNG)  can 
either  replace  or  complement  software  pseudo  random 
number  generators in  any  applications that  need  sources  of 
randomness. For example, random numbers may be used as 
nonces  in  communication  protocols  to  prevent  replays  or 
used  to  generate  new  cryptographic  keys.  Effectively,  the 
Flash  memory  provides the  benefits  of  hardware  RNGs  for 
systems  without  requiring  custom  RNG  circuits.  For 
example,  with  the  proposed  technique,  low-cost  embedded 
systems  such  as  sensor  network  nodes  can  easily  generate 
random  numbers  from  Flash/EEPROM.  Similarly,  virtual 
machines  on  servers  can  obtain  true  random  numbers  even 
without hardware RNGs. 
C.  Device Authentication 
One  application  of  the  Flash  device  fingerprints  is  to 
identify  and/or  authenticate  hardware  devices  themselves 
similar to the way that we use biometrics to identify humans.  
As  an  example,  let  us  consider  distinguishing  genuine 
Flash memory chips from counterfeits through an untrusted 
supply  chain.  Recent  articles  report  multiple  incidents  of 
counterfeit Flash devices in practice, such as chips from low-
end manufacturers, defective chips, and ones harvested from 
thrown-away  electronics,  etc. [5] [15]  [16]. The counterfeit 
chips  cause  a  serious  concern  for  consumers  in  terms  of 
reliability  as  well  as  security;  counterfeits  may  contain 
malicious  functions.  Counterfeits  also  damage  the  brand 
name for a manufacturer. 
The  Flash  fingerprints  can  enable  authentication  of 
genuine chips without any additional hardware modifications 
to  today’s  Flash  chips.  In  a  simple  protocol,  a  Flash 
manufacturer  can  put  an  identifier  (ID)  to  a  genuine  chip 
(write to a location in Flash memory), generate a fingerprint 
from the chip, and store the fingerprint in a database along 
with the ID. To check the authenticity of a Flash chip from a 
supply  chain,  a  customer  can  regenerate  a  fingerprint  and 
query  the  manufacturer’s  database  to  see  if  it  matches  the 
saved fingerprint.  
In  order  to  pass  the  check,  a  counterfeit  chip  needs  to 
produce the same fingerprint as a genuine one. Interestingly, 
unlike simple identifiers and keys stored in memory, device 
fingerprints  based  on  random  manufacturing  variations 
cannot  be  controlled  even  when  a  desired  fingerprint  is 
known.  For  example,  even  legitimate  Flash  manufacturers 
cannot  precisely  control  individual  transistor  threshold 
voltages, which we use to generate fingerprints. To produce 
specific  fingerprints,  one  will  need  to create a  custom  chip 
that stores the fingerprints and emulates Flash responses. 
The  authentication  scheme  can  be  strengthened  against 
emulation  attacks  by  exploiting  a  large  number  of  bits  in 
44
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:10 UTC from IEEE Xplore.  Restrictions apply. 
Flash memory.  Figure 17 illustrates a modified protocol that 
utilizes a large number of fingerprints that can be generated 
from  each  Flash  chip.  Here,  we  consider  a  Flash  chip  as  a 
function where a different set of bits that are used to generate 
a fingerprint is a challenge, and the resulting fingerprint is a 
response.  A  device  manufacturer,  when  in  possession  of  a 
genuine  IC,  applies  randomly  chosen  challenges  to  obtain 
responses.  Then,  these  challenge-response  pairs  (CRP)  are 
stored in a database for future authentication operations. To 
check  the  authenticity  of  an  IC  later,  a  CRP  that  has  been 
previously recorded but has never been used for a check is 
selected from the database, and a re-generated response from 
a device can be checked. 
Authentic
Device A
Flash
Untrusted 
Supply Chain / 
Environments
???
Flash
Is this the
authentic
Device A?
Challenge
Response
Record
Challenge
Response
1001010    010101
1011000    101101
0111001    000110
Database for Device A