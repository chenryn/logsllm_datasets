rogue) from issuing trusted certiﬁcates for any domain on the
Internet. Another related proposal, the Certiﬁcation Authority
Authorization (CAA) [54] DNS records, can specify that a
website’s certiﬁcates must be issued under a speciﬁc CA.
However, these approaches fundamentally rely on DNSSEC
to prevent forgery and modiﬁcation of the DNS records. Until
DNSSEC is more widely deployed on the Internet, websites
must consider alternative defenses.
G. Discussion
In this last section, we analyze the robustness of the possible
defenses with regards to four common types of SSL man-in-
the-middle attackers:
1) Script kiddie. A script kiddie is a relatively unskilled
individual who simply downloads attack toolkits that
have been created by others. These attackers generally
only attempt to perform attacks with less sophisticated
methods (with self-signed forged certiﬁcates) and on a
smaller scale, such as a local public WiFi hotspot. All of
the defenses are immune to script kiddies. Even HSTS
can block these attacks, because any invalid certiﬁcates
will hard-fail in supporting browsers.
2) Corporate-level surveillance. Most SSL man-in-the-
middle attacks are attributed to corporate-level surveil-
lance. In such scenarios, the corporate IT technicians
may access the client’s machine to establish trust with
their self-signed root certiﬁcates. SSL interception is
typically done without any authorization from the le-
gitimate websites. HSTS, by design, does not reject
browser-accepted certiﬁcates. HPKP also does not reject
certiﬁcates signed by locally trusted CAs, as mentioned
in Section V-B. Other defenses including audit logs and
notary-based approaches can detect these attacks.
3) Professional attacker. Next, we consider the profes-
sional attackers, which we deﬁne as an entity that has
managed to obtained a forged certiﬁcate from a trusted
CA. This classiﬁcation may include a state-sponsored
attacker who may compel trusted CAs to issue forged
certiﬁcates, or a sophisticated hacker who has success-
fully compromised a trusted CA directly. Server-side
defenses including CT, AKI, SK, TACK, and HPKP are
designed to block this type of mis-issued certiﬁcates,
although at varying deployment costs (e.g. HPKP is
the most lightweight in terms of server modiﬁcations).
Notary-based defenses may spot local inconsistencies if
the attacker mounted the attacks discriminately.
4) Malware. As discussed in Section IV-C, malware nowa-
days may also perform SSL interception. None of the
possible defenses are designed to prevent malware at-
tackers, which may have access to the victim client’s
machine, and simply tamper with the client’s root CA
store.
In all, websites may consider reaping the security beneﬁts
of deploying HSTS and HPKP defenses in conjunction, since
they are most readily supported in at least one of the major
browsers today. Unfortunately,
these two defenses do not
prevent all types of attacks such as corporate-level surveil-
lance, as discussed. Several defense proposals (and prototypes)
are more robust against most attacks (with the exception of
malware, which is out-of-scope), but are not yet available for
websites to use. Websites may want to stay agile and deploy
multiple approaches for defense in depth. In the meantime, we
recommend that websites or mobile applications can adopt our
detection method (as publicized in this paper), and possibly
collaborate to detect SSL interceptions in the wild.
VI. CONCLUSION
In this paper, we introduced a new method for detecting
SSL man-in-the-middle attacks against a website’s users. We
demonstrated the feasibility of detecting man-in-the-middle
attacks by implementing this mechanism on millions of SSL
connections at a top global website, Facebook. We presented
the ﬁrst analysis of forged SSL certiﬁcates in the wild. We
revealed direct evidences that 0.2% of real-world connections
were substituted with unauthorized forged certiﬁcates. While
most of the SSL interceptions were due to antivirus software
and corporate surveillance devices, we also observed a few
amateur attack attempts, and even traces of pervasive malware
in the wild that intercepted SSL connections. Our data suggest
that browsers could possibly detect many of the forged certiﬁ-
cates based on size characteristics, such as checking whether
the certiﬁcate chain depth is larger than one. We strongly
encourage popular websites, as well as mobile applications, to
deploy similar mechanisms to start detecting SSL interception.
Lastly, we assessed possible mitigations for SSL man-in-the-
middle attacks, and recommend websites to deploy multiple
available defenses, in conjunction, for better protection.
95
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:57 UTC from IEEE Xplore.  Restrictions apply. 
ACKNOWLEDGMENT
This work was done during Huang’s internship at Facebook.
We thank Adam Langley, Scott Renfro, Zack Weinberg, and
the anonymous reviewers for providing feedback on drafts
of the paper. Special thanks to Mark Hammell and Joren
McReynolds for their code reviews.
REFERENCES
[1] A. O. Freier, P. Karlton, and P. C. Kocher, “The Secure Sockets Layer
(SSL) Protocol Version 3.0,” RFC 6101 (Historic), Internet Engineering
Task Force, Aug. 2011.
[2] T. Dierks and E. Rescorla, “The Transport Layer Security (TLS) Protocol
Version 1.2,” RFC 5246 (Proposed Standard), Internet Engineering Task
Force, Aug. 2008.
[3] D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, and W. Polk,
“Internet X.509 Public Key Infrastructure Certiﬁcate and Certiﬁcate
Revocation List (CRL) Proﬁle,” RFC 5280 (Proposed Standard), Internet
Engineering Task Force, May 2008.
[4] Electronic Frontier Foundation, “The EFF SSL Observatory,” https://
www.eff.org/observatory.
[5] VASCO, “DigiNotar reports security incident,” http://www.vasco.com/
company/about vasco/press room/news archive/2011/news diginotar
reports security incident.aspx, Aug. 2011.
[6] Comodo, “Comodo Report of Incident - Comodo detected and thwarted
an intrusion on 26-MAR-2011,” http://www.comodo.com/Comodo-
Fraud-Incident-2011-03-23.html, Mar. 2011.
announcements,”
http://turktrust.com.tr/en/
[7] TURKTRUST,
“Public
kamuoyu-aciklamasi-en.html, Jan. 2013.
[8] H. Adkins, “An update on attempted man-in-the-middle attacks,”
http://googleonlinesecurity.blogspot.com/2011/08/update-on-attempted-
man-in-middle.html.
[9] C. Soghoian and S. Stamm, “Certiﬁed lies: detecting and defeating
government interception attacks against SSL,” in Proceedings of the 15th
International Conference on Financial Cryptography and Data Security,
2011.
[10] S. E. Schechter, R. Dhamija, A. Ozment, and I. Fischer, “The emperor’s
new security indicators,” in Proceedings of the IEEE Symposium on
Security and Privacy, 2007.
[11] J. Sunshine, S. Egelman, H. Almuhimedi, N. Atri, and L. F. Cranor,
“Crying wolf: an empirical study of SSL warning effectiveness,” in
Proceedings of the 18th USENIX Security Symposium, 2009.
[12] D. Akhawe and A. P. Felt, “Alice in warningland: A large-scale ﬁeld
study of browser security warning effectiveness,” in Proceedings of the
22nd USENIX Security Symposium, 2013.
[13] A. P. Felt, H. Almuhimedi, S. Consolvo, and R. W. Reeder, “Experi-
menting at scale with Google Chrome’s SSL warning,” in Proceedings
of the ACM Conference on Human Factors in Computing Systems, 2014.
[14] P. Eckersley, “A Syrian man-in-the-middle attack against Facebook,”
https://www.eff.org/deeplinks/2011/05/syrian-man-middle-against-
facebook, May 2011.
[15] R. Holz, L. Braun, N. Kammenhuber, and G. Carle, “The SSL land-
scape: a thorough analysis of the x.509 PKI using active and passive
measurements,” in Proceedings of the ACM SIGCOMM Conference on
Internet Measurement, 2011.
[16] D. Akhawe, B. Amann, M. Vallentin, and R. Sommer, “Here’s my
cert, so trust me, maybe? Understanding TLS errors on the web,” in
Proceedings of the International Conference on World Wide Web, 2013.
[17] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman, “Analysis
of the HTTPS certiﬁcate ecosystem,” in Proceedings of the 13th ACM
SIGCOMM Conference on Internet Measurement, 2013.
[18] E. Butler, “Firesheep,” http://codebutler.com/ﬁresheep.
[19] S. Chen, Z. Mao, Y.-M. Wang, and M. Zhang, “Pretty-Bad-Proxy: An
overlooked adversary in browsers’ HTTPS deployments,” in Proceedings
of the IEEE Symposium on Security and Privacy, 2009.
[20] M. Georgiev, S.
Iyengar, S. Jana, R. Anubhai, D. Boneh, and
V. Shmatikov, “The most dangerous code in the world: validating
SSL certiﬁcates in non-browser software,” in Proceedings of the ACM
Conference on Computer and Communications Security, 2012.
[21] S. Fahl, M. Harbach, T. Muders, L. Baumg¨artner, B. Freisleben, and
M. Smith, “Why eve and mallory love Android: an analysis of Android
SSL (in)security,” in Proceedings of the ACM Conference on Computer
and Communications Security, 2012.
[22] S. Fahl, M. Harbach, H. Perl, M. Koetter, and M. Smith, “Rethinking
SSL development in an appiﬁed world,” in Proceedings of the ACM
Conference on Computer and Communications Security, 2013.
[23] M. Marlinspike,
“sslsniff,”
http://www.thoughtcrime.org/software/
sslsniff.
[24] C. Reis, S. D. Gribble, T. Kohno, and N. C. Weaver, “Detecting in-ﬂight
page changes with web tripwires,” in Proceedings of the 5th USENIX
Symposium on Networked Systems Design and Implementation, 2008.
the
effect of edge opacity on IP-based client identiﬁcation,” in Proceedings
of
the 4th USENIX Symposium on Networked Systems Design and
Implementation, 2007.
[25] M. Casado and M. J. Freedman, “Peering through the shroud:
[26] C. Jackson, A. Barth, A. Bortz, W. Shao, and D. Boneh, “Protecting
browsers from DNS rebinding attacks,” in Proceedings of the ACM
Conference on Computer and Communications Security, 2007.
[27] L.-S. Huang, E. Y. Chen, A. Barth, E. Rescorla, and C. Jackson, “Talking
to yourself for fun and proﬁt,” in Proceedings of the Web 2.0 Security
and Privacy, 2011.
[28] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson, “Netalyzr: Illu-
minating the edge network,” in Proceedings of the ACM SIGCOMM
Conference on Internet Measurement, 2010.
[29] S. Stamm, B. Sterne, and G. Markham, “Reining in the web with content
security policy,” in Proceedings of the 19th International Conference on
World Wide Web, 2010.
[30] P. Uhley, “Setting up a socket policy ﬁle server,” http://www.adobe.com/
devnet/ﬂashplayer/articles/socket policy ﬁles.html, Apr. 2008.
[31] StatOwl.com, “Flash player version market share and usage statistics,”
http://www.statowl.com/ﬂash.php.
[32] R. A. Sandvik, “Security vulnerability found in Cyberoam DPI
https://blog.torproject.org/blog/security-
devices
vulnerability-found-cyberoam-dpi-devices-cve-2012-3372, Jul. 2012.
(CVE-2012-3372),”
[33] Y. N. Pettersen, “Suspected malware performs man-in-the-middle
attack on secure connections,” http://my.opera.com/securitygroup/blog/
2012/05/16/suspected-malware-performs-man-in-the-middle-attack-on-
secure-connections, May 2012.
[34] J. Hodges, C. Jackson, and A. Barth, “HTTP Strict Transport Security
(HSTS),” RFC 6797 (Proposed Standard), Internet Engineering Task
Force, Nov. 2012.
[35] C. Jackson and A. Barth, “ForceHTTPS: protecting high-security web
sites from network attacks,” in Proceedings of the 17th International
Conference on World Wide Web, 2008.
[36] M. Marlinspike, “New techniques for defeating SSL/TLS,” in Black Hat
DC, 2009.
[37] C. Evans and C. Palmer, “Public Key Pinning Extension for HTTP,”
IETF, Internet-Draft draft-ietf-websec-key-pinning-03, Oct. 2012.
[38] A. Langley, “Public key pinning,” http://www.imperialviolet.org/2011/
05/04/pinning.html.
[39] C. Paya, “Certiﬁcate pinning in Internet Explorer with EMET,”
http://randomoracle.wordpress.com/2013/04/25/certiﬁcate-pinning-in-
internet-explorer-with-emet/.
[40] M. Marlinspike and E. T. Perrin, “Trust Assertions for Certiﬁcate Keys,”
IETF, Internet-Draft draft-perrin-tls-tack-02, Jan. 2013.
[41] I. Dacosta, M. Ahamad, and P. Traynor, “Trust no one else: Detecting
MITM attacks against SSL/TLS without third-parties,” in Proceedings
of the European Symposium on Research in Computer Security, 2012.
[42] “Certiﬁcate Patrol - a psyced Firefox/Mozilla add-on,” http://patrol.
psyced.org.
[43] M. Dietz, A. Czeskis, D. Balfanz, and D. Wallach, “Origin-bound
certiﬁcates: A fresh approach to strong client authentication for the web,”
in Proceedings of the 21st USENIX Security Symposium, 2012.
[44] D. Wendlandt, D. Andersen, and A. Perrig, “Perspectives: Improving
SSH-style host authentication with multi-path probing,” in Proceedings
of the USENIX Annual Technical Conference, 2008.
[45] M. Marlinspike, “SSL and the future of authenticity,” in Black Hat USA,
2011.
[46] K. Engert, “DetecTor,” http://detector.io/DetecTor.html.
[47] M. Alicherry and A. D. Keromytis, “Doublecheck: Multi-path ver-
iﬁcation against man-in-the-middle attacks,” in IEEE Symposium on
Computers and Communications, 2009.
[48] R. Holz, T. Riedmaier, N. Kammenhuber, and G. Carle, “X. 509
forensics: Detecting and localising the SSL/TLS men-in-the-middle,”
in Proceedings of the European Symposium on Research in Computer
Security, 2012.
96
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:57 UTC from IEEE Xplore.  Restrictions apply. 
https://git.eff.org/?p=sovereign-keys.git;a=blob;f=sovereign-key-
design.txt;hb=master.
[50] B. Laurie, A. Langley, and E. Kasper, “Certiﬁcate Transparency,” IETF,
[49] P. Eckersley, “Sovereign key cryptography for
internet domains,”
Internet-Draft draft-laurie-pki-sunlight-02, Oct. 2012.
[51] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor,
“Accountable Key Infrastructure (AKI): A proposal for a public-key
validation infrastructure,” in Proceedings of the International Conference
on World Wide Web, 2013.
[52] R. Sleevi, “[cabfpub] Upcoming changes to Google Chrome’s certiﬁ-
cate handling,” https://cabforum.org/pipermail/public/2013-September/
002233.html, 2013.
[53] P. Hoffman and J. Schlyter, “The DNS-Based Authentication of Named
Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA,” RFC
6698 (Proposed Standard), Internet Engineering Task Force, Aug. 2012.
[54] P. Hallam-Baker and R. Stradling, “DNS Certiﬁcation Authority Au-
thorization (CAA) Resource Record,” RFC 6844 (Proposed Standard),
Internet Engineering Task Force, Jan. 2013.
97
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:57 UTC from IEEE Xplore.  Restrictions apply.