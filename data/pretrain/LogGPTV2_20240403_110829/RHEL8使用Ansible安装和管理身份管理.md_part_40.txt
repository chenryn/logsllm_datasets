    `k 选项指定`{.literal} 您要将检索到的密钥附加到的 keytab
    文件。如果文件不存在，则会创建此文件。
:::
如果命令不产生错误，您以 [**user01**]{.strong} 身份成功检索了
[**HTTP/client.idm.example.com 的**]{.strong} keytab。
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-a-kerberos-principal-alias-of-a-service-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 确保存在服务的 Kerberos 主体别名 {.title}
:::
在某些情况下，IdM 管理员可启用 IdM 用户、主机或服务使用 Kerberos
主体别名进行身份验证。这些情况包括：
::: itemizedlist
-   用户名已更改，但该用户应该能够使用先前和新用户名登录系统。
-   即使 IdM Kerberos
    域与电子邮件域不同，用户也需要使用电子邮件地址登录。
:::
本节论述了如何为 [**client.idm.example.com 上运行的
[**HTTP/mycompany.idm.example.com**]{.strong} 创建
HTTP/mycompany.example.com**]{.strong} 主体别名。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [您已在主机上设置了 HTTP
    服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index?lb_target=production#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs){.link}。
-   您已 [将 HTTP 服务注册到
    IdM。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
-   设置 HTTP 的主机是一个 IdM 客户端。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml
    ```
4.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml`{.literal}
    Ansible playbook 文件进行编辑。
5.  通过更改以下内容来调整文件：
    ::: itemizedlist
    -   由 `ipaadmin_password`{.literal} 变量指定的 IdM 管理员密码。
    -   通过 `name`{.literal}
        变量指定的服务名称。这是服务的规范主体名称。在当前示例中，它是
        [**HTTP/client.idm.example.com**]{.strong}。
    -   由主体变量指定的 Kerberos `主体`{.literal} 别名。这是您要添加到
        `name`{.literal} 变量定义的服务的别名。在当前示例中，它是
        [**host/mycompany.idm.example.com**]{.strong}。
    -   由 `tasks`{.literal} 部分中 `name`{.literal}
        变量指定的任务名称。
        在适应当前示例后，复制的文件类似如下：
    :::
    ``` literallayout
    ---
    - name: Service member principal present
      hosts: ipaserver
      become: true
      tasks:
      - name: Service HTTP/client.idm.example.com member principals host/mycompany.idm.exmaple.com present
        ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
          principal:
            - host/mycompany.idm.example.com
          action: member
    ```
6.  保存该文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml
    ```
:::
如果运行 playbook 会导致 0 个无法访问和 0 个失败的任务，您已成功为 [
**[**HTTP/client.idm.example.com 服务创建了
host/mycompany**]{.strong}.idm.example.com**]{.strong} Kerberos 主体。
::: itemizedlist
**其它资源**
-   如需有关 Kerberos 主体别名并在不使用 Ansible
    [的情况下管理这些别名的更多信息，请参阅为用户、主机和服务管理
    Kerberos
    主体别名。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/linux_domain_identity_authentication_and_policy_guide/managing-kerberos-aliases){.link}
:::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 确保 IdM 中缺少 HTTP 服务 {.title}
:::
本节论述了如何从 IdM 取消滚动服务。更具体地说，它描述了如何使用 Ansible
playbook 来确保 IdM 中缺少名为
[**HTTP/client.idm.example.com**]{.strong} 的 HTTP 服务器。
::: itemizedlist
**先决条件**
-   您有 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml
    ```
4.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml`{.literal}
    Ansible playbook 文件进行编辑。
5.  通过更改以下内容来调整文件：
    ::: itemizedlist
    -   由 `ipaadmin_password`{.literal} 变量定义的 IdM 管理员密码。
    -   HTTP 服务的 Kerberos 主体，由 `ipaservice`{.literal} 任务
        `的名称`{.literal} 变量定义。
        在适应当前示例后，复制的文件类似如下：
    :::
    ``` literallayout
    ---
    - name: Playbook to manage IPA service.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure service is absent
      - ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
          state: absent
    ```
6.  保存并退出文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 管理员身份登录 IdM Web UI。
2.  导航到 `Identity`{.literal} → `Services`{.literal}。
:::
如果您无法在 [**Services**]{.strong} 列表中看到
[**HTTP/PI:EMAIL**]{.strong}
服务，则已成功确保了在 IdM 中缺少
HTTP/PI:EMAIL 服务。
::: itemizedlist
**其它资源**
-   您可以查看 Ansible playbook 示例，以确保 IdM 中是否存在服务，包括在
    `/usr/share/doc/ansible -freeipa/ 目录中可用的README-`{.literal}
    service.md``{=html} Markdown 文件中可能的变量列表。
-   您可以查看 Ansible playbook 示例，以确保
    `/usr/share/doc/ansible-freeipa/playbooks/config`{.literal} 目录中的
    IdM 中存在和不存在服务。
:::
:::
:::
[]{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm}第 24 章 使用 Ansible playbook 在 IdM 中管理全局 DNS 配置 {.title}
:::
使用 Red Hat Ansible Engine `dnsconfig`{.literal} 模块，您可以配置
Identity Management(IdM)DNS 的全局配置。全局 DNS
配置中定义的设置应用到所有 IdM DNS 服务器。但是，全局配置优先于特定 IdM
DNS 区的配置。
`dnsconfig`{.literal} 模块支持以下变量：
::: itemizedlist
-   全局转发器，特别是 IP 地址和用于通信的端口。
-   全局转发策略：只有、first 或 none。有关这些 DNS
    转发策略类型的详情，请查看 [IdM 中的 DNS
    转发策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}。
-   同步正向查找和反向查找区域。
:::
::: itemizedlist
**先决条件**
-   DNS 服务安装在 IdM 服务器上。有关如何使用集成 DNS 安装 IdM
    服务器的详情，请查看以下链接之一：
    ::: itemizedlist
    -   [安装 IdM 服务器：使用集成的 DNS，集成的 CA 作为 root
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-integrated-dns_installing-identity-management){.link}
    -   [安装 IdM 服务器：使用集成的 DNS，使用外部 CA 作为 root
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-external-ca_installing-identity-management){.link}
    -   [安装 IdM 服务器：使用集成的 DNS,没有
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-without-a-ca_installing-identity-management){.link}
    :::
:::
 \
本章包括以下部分：
::: itemizedlist
-   [IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf
    中的全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器"){.link}
-   [使用 Ansible 在 IdM 中存在 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 在 IdM 中存在 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中没有 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 确保 IdM 中没有 DNS 全局转发器"){.link}
-   [IdM 中 DNS
    转发策略的介绍](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}
-   [使用 Ansible playbook 确保 IdM DNS 全局配置中设置了 forward first
    策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-that-the-forward-first-policy-is-set-in-idm-dns-global-configuration_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 全局配置中设置了 forward first 策略"){.link}
-   [使用 Ansible playbook 确保 IdM DNS
    中禁用了全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-that-global-forwarders-are-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 中禁用了全局转发器"){.link}
-   [使用 Ansible playbook 确保 IdM DNS
    中禁用了正向和反向查找区域的同步](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-that-synchronization-of-forward-and-reverse-lookup-zones-is-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 中禁用了正向和反向查找区域的同步"){.link}
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks}IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器 {.title}
:::
使用集成 DNS 安装 Identity Management(IdM)将
`/etc/resolv.conf`{.literal} 文件配置为指向 `127.0.0.1`{.literal}
localhost 地址：
``` literallayout
# Generated by NetworkManager
search idm.example.com
nameserver 127.0.0.1
```
在某些情况下，如使用 `动态主机配置`{.literal}
协议(DHCP)的网络，`NetworkManager`{.literal} 服务可能会恢复对
`/etc/resolv.conf`{.literal} 文件的更改。为了使 DNS 配置持久，IdM DNS
安装过程还通过以下方式配置 `NetworkManager`{.literal} 服务：
::: orderedlist
1.  DNS 安装脚本会创建一个
    `/etc/NetworkManager/conf.d/zzz-ipa.conf`{.literal}
    `NetworkManager`{.literal} 配置文件来控制搜索顺序和 DNS 服务器列表：
    ``` literallayout
    # auto-generated by IPA installer
    [main]
    dns=default
    [global-dns]
    searches=$DOMAIN
    [global-dns-domain-*]
    servers=127.0.0.1
    ```
2.  `NetworkManager`{.literal} 服务已重新加载，该服务始终使用
    `/etc/ NetworkManager/conf.d/ 目录中最后一个文件中的设置创建 /etc/resolv`{.literal}.conf``{=html}
    文件。这时为 `zzz-ipa.conf`{.literal} 文件。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}