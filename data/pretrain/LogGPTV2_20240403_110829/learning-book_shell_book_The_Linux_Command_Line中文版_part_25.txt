Creating journal (1024 blocks) : done
Writing superblocks and filesystem accounting information: done
This filesysten vi11 be autonatically checked every 34 mounts or
180 days, whichever cones first. Use tune2fs -c or -i to override.
[ne@linuxbox -]$
当ext3被选为文件系统类型时，这个程序会显示许多信息。若把这个设备重新格式化为它
最初的FAT32文件系统，指定“vfat"作为文件系统类型：
[ne@linuxbox -]$ sudo nkfs -t vfat /dev/sdb1
任何时候添加额外的存储设备到系统中时，都可以使用这个分区和格式化的过程。虽然我
们只以一个小小的闪存驱动器为例，同样的操作可以被应用到内部硬盘和其它可移动的存储设
备上像USB硬盘驱动器。
194
---
## Page 196
16.7测试和修复文件系统
在之前讨论文件/etc/fstab时，我们会在每行的末尾看到一些神秘的数字。每次系统启动时，
在挂载系统之前，都会按照惯例检查文件系统的完整性。这个任务由fsck程序（是"file system
check”的简写）完成。每个fstab项中的最后一个数字指定了设备的检查顺序。在上面的实例
中，我们看到首先检查根文件系统，然后是home和boot文件系统。若最后一个数字是零则
相应设备不会被检查
除了检查文件系统的完整性之外，fsck还能修复受损的文件系统，其成功度依赖于损坏的数
量。在类Unix的文件系统中，文件恢复的部分被放置于lost+found目录里面，位于每个文件
系统的根目录下面。
检查我们的闪存驱动器（首先应该卸载），我们能执行下面的操作：
[nedlinuxbox -]$ sudo fsck /dev/sdb1
fsck 1.40.8 (13Mar-2008)
2fsck 1.40.8 (13-Har-2008)
/dev/sdb1: clean, 11/3904 files, 1661/15608 blocks
以我的经验，文件系统损坏情况相当罕见，除非硬件存在问题，如磁盘驱动器故障。在大多
数系统中，系统启动阶段若探测到文件系统已经损坏了，则会导致系统停止下来，在系统继续
执行之前，会指导你运行fsck程序。
什么是fsck？
在Unix文化中，“fsck”这个单词往往会被用来指代另一个和它仅有一个字母差
经常会脱口而出。
16.8格式化软盘
对于那些还在使用配备了软盘驱动器的计算机的用户，我们也能管理这些设备。准备一张
可用的空白软盘要分两个步骤。首先，对这张软盘执行低级格式化，然后创建一个文件系统。
为了完成格式化，我们使用fdformat程序，同时指定软盘设备名称（通常为/dev/fdo）：
195
---
## Page 197
[ne@linuxbox -]$ sudo fdformat /dev/fd0
Double-sided, 80 tracks, 18 sec/track. Total capacity 1440 kB.
Formatting -.. done
Verifying --- done
接下来，通过mkfs命令，给这个软盘创建一个FAT文件系统：
0Px/aop/ sopsw 4- sgxu opns $[- xoqxnurteou]
注意我们使用这个“msdos”文件系统类型来得到旧（小的）风格的文件分配表。当一个软
磁盘被准备好之后，则可能像其它设备一样挂载它。
16.9直接把数据移入/出设备
如果我们看一下磁盘驱动器，例如，我们看到它由大量的数据“块”组成，而操作系统却把这
些数据块看作目录和文件。然而，如果把磁盘驱动器简单地看成一个数据块大集合，我们就能
执行有用的任务，如克隆设备。
语法（由于历史原因），经常它被这样使用：
dd if=input_file of=output_file [bs=block_size [count=blocks]]
比方说我们有两个相同容量的USB闪存驱动器，并且要精确地把第一个驱动器（中的内容）
复制给第二个。如果连接两个设备到计算机上，它们各自被分配到设备/dev/sdb和/dev/sdc
上，这样我们就能通过下面的命令把第一个驱动器中的所有数据复制到第二个驱动器中。
dd if=/dev/sdb of=/dev/sdc
或者，如果只有第一个驱动器被连接到计算机上，我们可以把它的内容复制到一个普通文件
中供以后恢复或复制数据：
196
---
## Page 198
dd if=/dev/sdb of=flash_drive.ing
除磁盘”因为用户经常会误输入if或of的规范。在按下回车键之前，要再三检查输入与输出
规范！
16.10创建CD-ROM映像
写入一个可记录的CD-ROM（一个CD-R或者是CD-RW）由两步组成；首先，构建一个iso
映像文件，这就是一个CD-ROM的文件系统映像，第二步，把这个映像文件写入到CD-ROM
媒介中。
16.10.1创建一个CD-ROM的映像拷贝
如果想要制作一张现有CD-ROM的iso映像，我们可以使用dd命令来读取CD-ROW中的所
有数据块，并把它们复制到本地文件中。比如说我们有一张UbuntuCD，用它来制作一个iso
文件，以后我们可以用它来制作更多的拷贝。插入这张CD之后，确定它的设备名称（假定是
dev/cdrom），然后像这样来制作iso文件：
dd if=/dev/cdrom of=ubuntu.iso
这项技术也适用于DVD光盘，但是不能用于音频CD，因为它们不使用文件系统来存储数
据。对于音频CD，看一下cdrdao命令。
16.10.2从文件集合中创建一个映像
创建一个包含目录内容的iso映像文件，我们使用genisoimage程序。为此，我们首先创建一
个目录，这个目录中包含了要包括到此映像中的所有文件，然后执行这个genisoimage命令来
创建映像文件。例如，如果我们已经创建一个叫做~/cd-rom-iles的目录，然后用文件填充此
目录，再通过下面的命令来创建一个叫做cd-rom.iso映像文件：
197
---
## Page 199
“-R”选项添加元数据为RockRidge扩展，这允许使用长文件名和POSIX风格的文件权
限。同样地，这个“-J”选项使Joliet扩展生效，这样Windows中就支持长文件名了。
一个有着其它名字的程序。
如果你看一下关于创建和烧写光介质如CD-ROMs和DVD的在线文档，你会
经常碰到两个程序叫做mkisofs和cdrecord。这些程序是流行软件包“cdrtools”的
一部分，“cdrtools”由JorgSchilling编写成。在2006 年春天，Schilling先生更改
了部分cdrtools软件包的协议，Linux社区许多人的看法是，这创建了一个与GNU
GPL不相兼容的协议。结果，就fork了这个cdrtools项目，目前新项目里面包含
了cdrecord 和mkisofs 的替代程序，分别是wodim和genisoimage
16.11写入CD-ROM镜像
有了一个映像文件之后，我们可以把它烧写到光盘中。下面讨论的大多数命令对可记录的
CD-ROW和DVD媒介都适用。
16.11.1直接挂载一个ISO镜像
有一个诀窍，我们可以用它来挂载iso映像文件，虽然此文件仍然在我们的硬盘中，但我们当作
它已经在光盘中了。添加“-oloop”选项来挂载（同时带有必需的“-tiso9660”文件系统类型），
挂载这个映像文件就好像它是一台设备，把它连接到文件系统树上：
midir /mnt/iso_image
a3eut~ost/zuu/ ost o3eut doot 0- 0996ost 4-qumou
上面的示例中，我们创建了一个挂载点叫做/mnt/iso_image，然后把此映像文件image.iso
挂载到挂载点上。映像文件被挂载之后，可以把它当作，就好像它是一张真正的CD-ROM或
者DVD。当不再需要此映像文件后，记得卸载它。
198
---
## Page 200
16.11.2清除一张可重写入的CD-ROM
可重写入的CD-RW媒介在被重使用之前需要擦除或清空。为此，我们可以用wodim命令，指
定设备名称和清空的类型。此wodim程序提供了几种清空类型。最小（且最快）的是“fast”类
型：
vodin dev=/dev/cdrv blank=fast
16.11.3写入镜像
写入一个映像文件，我们再次使用wodim命令，指定光盘设备名称和映像文件名：
wodin dev=/dev/cdrv inage .iso
除了设备名称和映像文件之外，wodim命令还支持非常多的选项。常见的两个选项是，“-v
可详细输出，和“一dao”以disk-at-once模式写入光盘。如果你正在准备一张光盘为的是商业
复制，那么应该使用这种模式。wodim命令的默认模式是track-at-once，这对于录制音乐很有
用。
16.12拓展阅读
我们刚才谈到了很多方法，可以使用命令行管理存储介质。看看我们所讲过命令的手册页。一
些命令支持大量的选项和操作。此外，寻找一些如何添加硬盘驱动器到Linux系统（有许多）
的在线教程，这些教程也要适用于光介质存储设备。
16.13友情提示
通常验证一下我们已经下载的iso映像文件的完整性很有用处。在大多数情况下，iso映像文
件的贡献者也会提供一个checksum文件。一个checksum是一个神奇的数学运算的计算结果
这个数学计算会产生一个能表示目标文件内容的数字。如果目标文件的内容即使更改一个二进
制位，checksum的结果将会非常不一样。生成checksum数字的最常见方法是使用md5sum程
序。当你使用md5sum程序的时候，它会产生一个独一无二的十六进制数字：
199
---
## Page 201
nd5sun inage.iso
34e354760f9bb7fbf85c96f6a3f94ece
image.1sc
当你下载完映像文件之后，你应该对映像文件执行md5sum命令，然后把运行结果与发行
商提供的md5sum数值作比较。
除了检查下载文件的完整性之外，我们也可以使用md5sum程序验证新写入的光学存储介
质。为此，首先我们计算映像文件的checksum数值，然后计算此光学存储介质的checksum数
值。这种验证光学介质的技巧是限定只对光学存储介质中包含映像文件的部分计算checksum
数值。通过确定映像文件所包含的2048个字节块的数目（光学存储介质总是以2048个字节块
的方式写入）并从存储介质中读取那么多的字节块，我们就可以完成操作。某些类型的存储介
质，并不需要这样做。一个以disk-at-once模式写入的CD-R，可以用下面的方式检验：
d5sun /dev/cdrom
34e354760f9bb7fbf85c96f6a3f94ece
oxpoaap
许多存储介质类型，如DVD需要精确地计算字节块的数目。在下面的例子中，我们检验了
映像文件dvd-image.iso以及DVD光驱中磁盘/dev/dvd文件的完整性。你能弄明白这是怎么
回事吗？
nd5sun dvd-inage.iso; dd if=/d
/Aop
dvd bs=2048 count=$
PP%-es）$））
inage.iso) / 2048 )) 1 md5sun
200
---
## Page 202
17
网络系统
当谈及到网络系统层面，几乎任何东西都能由Linux来实现。Linux被用来创建各式各样的网
络系统和装置，包括防火墙，路由器，名称服务器，网络连接式存储设备等等。
被用来配置和操作网络系统的命令数目，就如网络系统一样巨大。我们仅仅会关注一些最
经常使用到的命令。我们要研究的命令包括那些被用来监测网络和传输文件的命令。另外，我
们还会探讨用来远端登录的ssh程序。这章会介绍：
·ping-发送ICMPECHO_REQUEST数据包到网络主机
·traceroute-打印到一台网络主机的路由数据包
·netstat-打印网络连接，路由表，接口统计数据，伪装连接，和多路广播成员
·ftp-因特网文件传输程序
·wget-非交互式网络下载器
·ssh-OpenSSH SSH客户端（远程登录程序）
我们假定你已经知道了一点网络系统背景知识。在这个因特网时代，每个计算机用户需要
理解基本的网络系统概念。为了能够充分利用这一章节的内容，我们应该熟悉以下术语：
·IP(网络协议)地址
·主机和城名
·URI（统一资源标识符）
请查看下面的“拓展阅读”部分，有几篇关于这些术语的有用文章。
注意：一些将要讲到的命令可能（取决于系统发行版）需要从系统发行版的仓库中安装额外
的软件包，并且一些命令可能需要超级用户权限才能执行。
201
---
## Page 203
17.1
检查和监测网络
即使你不是一名系统管理员，检查一个网络的性能和运作情况也是经常有帮助的。
17.1.1 ping
最基本的网络命令是ping°这个ping命令发送一个特殊的网络数据包，叫做ICMP
ECHO_REQUEST，到一台指定的主机。大多数接收这个包的网络设备将会回复它，来
允许网络连接验证。
注意：大多数网络设备（包括Linux主机）都可以被配置为忽略这些数据包。通常，这样
做是出于网络安全原因，部分地遮蔽一台主机免受一个潜在攻击者地侵袭。配置防火墙来阻塞
IMCP流量也很普遍。
例如，看看我们能否连接到网站linuxcommand.org（我们最喜欢的网站之一），我们可以这
样使用ping命令：
[ne@linuxbox -]$ ping linuxconmand.org
一旦启动，ping命令会持续在特定的时间间隔内（默认是一秒）发送数据包，直到它被中断：
[ne@linuxbox -]$ ping linuxconmand.org
64 bytes from vhost .sourceforge.net (66.35.250.210) : icmp^_seq=1
tt1=43 time=107 ms
64 bytes fron vhost.sourceforge.net (66.35.250.210) : icnp^_seq=2
tt1=43 time=108 ms
64 bytes from vhost.sourceforge.net (66.35.250.210) : icap^_seq=3
tt1=43 tize=106 ms
64 bytes from vhost .sourceforge.net (66.35.250.210) : icnp^_seq=4
tt1=43 time=106 ms
64 bytes fron vhost .sourceforge.net (66.35.250.210) : icap^_seq=5
tt1=43 time=105 m5
202
---
## Page 204
按下组合键Ctrl-c，中断这个命令之后，ping打印出运行统计信息。一个正常工作的网络
路由，网关）都处于正常的工作状态。
17.1.2 traceroute
这个traceroute程序（一些系统使用相似的tracepath程序来代替）会显示从本地到指定主机
要经过的所有“跳数”的网络流量列表。例如，看一下到达slashdot.org需要经过的路由，我
们将这样做：
[neQlinuxbox -]s traceroute slasbdot.org
命令输出看起来像这样：
traceroute to slashdot.org (216.34.181.45), 30 hops max, 40 byte
packets
1 ipcop.1ocaldomain (192.168.1.1) 1.066 ms 1.366 ns 1.720 ms
2 * * *
3 ge-4-13-ur01.rockvi11e.nd.bad.comcast.net (68.87.130.9) 14.622
ms 14.885 ms 15.169 ms
4 po=30-ur02.rockvi1le.ad.bad.concast.net (68.87.129.154) 17.634
ms 17.626 ms 17.899 ms
5 po-60-ur03.rockvi11e.ad.bad.concast .net (68.87.129.158) 15.992
ms 15.983 ±s 16.256 5
6 po-30-ar01.hovardcounty-nd.bad.concast .net (68.87.136.5) 22.835
于那些提供标识信息的路由器，我们能看到它们的主机名，IP地址和性能数据，这些数据包括
三次从本地到此路由器的往返时间样本。对于那些没有提供标识信息的路由器（由于路由器配
置，网络拥塞，防火墙等方面的原因），我们会看到几个星号，正如行中所示。
17.1.3 netstat
203
---
## Page 205
[neglinuxbox -]$ netstat -ie
eth0
Linkt encap :Ethernet HWaddr 00: 1d: 09:9b:99:67
inet addr : 192.168 .1.2 Bcast :192.168 .1. 255 Mask: 255 . 255.255 .0
inet6 addr: fe80: :21d:9ff:fe9b:9967/64 Scope:Linlt
UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
RX packets:238488 errors:0 dropped: 0 overruns:0 frane:0
TX packets:403217 errors:0 dropped: 0 overruns:0 carrier:0
bytes:261035246 (248.9 MB) Memory:fdfc0000-fdfe0000
1o
Link encap:Local Loopback
inet addr:127.0.0.1 Mask:255.0.0.0
在上述实例中，我们看到我们的测试系统有两个网络接口。第一个，叫做eth0，是以太网接
口，和第二个，叫做lo，是内部回环网络接口，它是一个虚拟接口，系统用它来“自言自语”。
当执行日常网络诊断时，要查看的重要信息是每个网络接口第四行开头出现的单词“UP”
说明这个网络接口已经生效，还要查看第二行中inetaddr字段出现的有效IP地址。对于使用
DHCP（动态主机配置协议）的系统，在这个字段中的一个有效IP地址则证明了DHCP工作
正常。
使用这个“-r”选项会显示内核的网络路由表。这展示了系统是如何配置网络之间发送数据
包的。
Kernel IP routing table
Destination