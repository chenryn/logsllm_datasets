---
author: Matt Asay
category: 观点
comments_data:
- date: '2014-10-17 15:33:02'
  message: 跟一个德国的生物化学家聊天时，他精通编程并且自己开发了一个开源软件。他激动地告诉我，几个MPI的人发现了他的项目，并帮助修改了代码。他说：“感觉就像他们从高处下来，赐福于我们！”我好奇地看着他的光头...
  postip: 66.249.79.110
  username: 微博评论
- date: '2014-10-17 15:33:02'
  message: '@我的印象笔记'
  postip: 66.249.79.110
  username: 微博评论
count:
  commentnum: 2
  favtimes: 1
  likes: 0
  sharetimes: 4
  viewnum: 7201
date: '2014-10-17 14:59:00'
editorchoice: false
excerpt: 逐步指导如何启动一个成功的开源项目。你已经权衡了开源代码的优劣，并决定将你的软件开源，但你不知道如何成功运营一个开源项目。虽然创建GitHub账户并开始项目相对简单，但真正困难的是吸引足够的关注和贡献者。以下原则将帮助你构建和发布受人关注的开源代码。
fromurl: http://readwrite.com/2014/08/20/open-source-project-how-to
id: 4030
islctt: true
largepic: /data/attachment/album/201410/17/110104o6ooeo0mfiem98sm.jpg
permalink: /article-4030-1.html
pic: /data/attachment/album/201410/17/110104o6ooeo0mfiem98sm.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 逐步指导如何启动一个成功的开源项目。你已经权衡了开源代码的优劣，并决定将你的软件开源，但你不知道如何成功运营一个开源项目。虽然创建GitHub账户并开始项目相对简单，但真正困难的是吸引足够的关注和贡献者。以下原则将帮助你构建和发布受人关注的开源代码。
tags:
- 开源
- 项目
thumb: false
title: 如何开始一个开源项目
titlepic: false
translator: Vic___
updated: '2014-10-17 14:59:00'
---

### 逐步指导

**问题陈述**：你已经权衡了[开源代码的优劣势](http://readwrite.com/2014/07/07/open-source-software-pros-cons)，并决定将你的软件开源，但你不确定如何成功运营一个开源项目。尽管创建GitHub账户并开始项目相对简单，但真正的挑战在于吸引足够的关注和贡献者。

![](/data/attachment/album/201410/17/110104o6ooeo0mfiem98sm.jpg)

以下原则将帮助你构建和发布受人关注的开源代码。

### 基本原则

选择开源可能有多种原因。也许你希望吸引社区来帮助编写代码，或者你认识到开源可以作为小团队内部编写代码的倍增器。无论原因如何，为了使开源项目成功，需要进行周密的规划以满足未来用户的需求。正如我在2005年所写，如果你“需要大量的人做贡献（如修复bug、扩展功能等）”，那么你需要“撰写详尽的文档，使用易于接受的编程语言，以及模块化的架构”。

此外，你也需要开发人们关心的软件。每天思考你依赖的技术，如操作系统、Web应用框架、数据库等。避免过于特定或小众的技术，以便吸引更多外部贡献者的兴趣。广泛适用的技术更容易找到贡献者和用户。

总的来说，任何成功的开源项目都具备以下特点：

1. **时机恰当**（解决实际市场需求）
2. **强大的团队**（包括开发者和非开发者）
3. **易于参与的结构**（详见下文）
4. **模块化编码**，使新贡献者更容易找到需要修复的部分，而无需理解整个代码库
5. **广泛应用**（或至少在某个领域内流行）
6. **高质量的初始代码**
7. **自由许可证**（我个人偏好Apache许可证，因为它对开发者采用的障碍最低，但许多成功的项目如Linux和MySQL也使用GPL许可证）

上述几点是邀请参与者加入项目的难点，因为它们不仅涉及代码，还涉及人。

### 开源不仅仅是许可证

今年，我读到的一篇最好的文章来自Vitorio Miliano（[@vitor_io](https://twitter.com/vitor_io)），他是德克萨斯州奥斯汀的一位用户体验交互设计师。Miliano指出，那些不直接参与项目的人被称为“外行”，无论他们的技术水平如何，他们只需要懂一点代码即可。

因此，他认为你的工作是让这些人的参与变得简单。他提出了一些项目领导者应考虑的事项，以有效地吸引技术或非技术人员加入开源项目：

1. 一种方法来了解项目的价值
2. 一种方法来了解他们可以为项目提供的价值
3. 一种方法来了解他们可以从贡献中获得的价值
4. 一种方法来了解贡献流程，从头到尾
5. 贡献机制适用于现有的工作流

通常，项目领导者倾向于集中于第五步，而不提供前四步的理解路径。如果潜在贡献者不了解“为什么”，那么“如何”共享就变得无关紧要。

Miliano强调，建立一个通俗易懂的项目简介非常重要，这有助于展示项目的可访问性和包容性。他还指出，文档和其他介绍内容也应该通俗易懂。

关于第二点，无论是程序员还是非程序员，都需要能够明白你需要什么，以便他们能认识到自己的贡献方向。有时，一个聪明的人可能会贡献出优秀的代码，但如果项目成员无法理解，那么这种贡献就没有意义。

### 你真的想领导一个开源项目吗？

许多开源项目的领导者提倡包容性，但实际上并不包容。如果你不想让人们做出贡献，那就不要假装开源。

这是一个常见的问题。例如，HackerNews最近报道了一位开发者的经历：

> 小项目可以得到很多，基本上不需要很多人合作来完成。我看到了他们的进步，但我没有看到我自己的进步。如果我帮助了他们，显然，如果我花费有限的时间与那些计算机科学的硕士管理人员合作，而不是参与编码，这不是我想要的。所以我忽略了他们。

这是一种保持理智的好方法，但这种态度并不预示着项目会被广泛分享。

如果你确实不太关心非程序员的设计、文档或其他贡献，那么请首先了解这些方面。再次强调，如果这是实情，你的项目就不应该成为一个开源项目。

当然，排除感并不总是可靠的。正如ActiveState的副总裁Bernard Golden所说，“一些开发人员可能会对现有的‘小集团’开发团体感到恐惧，尽管这不一定正确。”

现在，了解开发人员为什么要贡献并邀请他们参与，意味着更多的开源项目投资，更长久的生存。

图片由[Shutterstock](http://www.shutterstock.com/)提供

---

via: 
作者：[Matt Asay](http://readwrite.com/author/matt-asay)  
译者：[Vic___/VicYu](http://www.vicyu.net)  
校对：[wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出