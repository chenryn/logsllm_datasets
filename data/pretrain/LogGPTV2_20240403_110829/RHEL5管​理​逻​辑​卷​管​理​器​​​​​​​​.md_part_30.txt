::: para
如​​​​​​​果​​​​​​​您​​​​​​​丢​​​​​​​失​​​​​​​了​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​，您​​​​​​​可​​​​​​​以​​​​​​​用​​​​​​​ `vgchange`{.command} 命​​​​​​​令​​​​​​​的​​​​​​​
`--partial`{.option} 选​​​​​​​项​​​​​​​激​​​​​​​活​​​​​​​卷​​​​​​​组​​​​​​​中​​​​​​​剩​​​​​​​下​​​​​​​的​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​。​​​​​​​您​​​​​​​可​​​​​​​以​​​​​​​使​​​​​​​用​​​​​​​
`vgreduce`{.option} 命​​​​​​​令​​​​​​​的​​​​​​​ `--removemissing`{.option}
选​​​​​​​项​​​​​​​删​​​​​​​除​​​​​​​所​​​​​​​有​​​​​​​使​​​​​​​用​​​​​​​卷​​​​​​​组​​​​​​​中​​​​​​​那​​​​​​​些​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​的​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​。​​​​​​​
:::
::: para
建​​​​​​​议​​​​​​​您​​​​​​​运​​​​​​​行​​​​​​​ `vgreduce`{.command} 命​​​​​​​令​​​​​​​，使​​​​​​​用​​​​​​​ `--test`{.option}
选​​​​​​​项​​​​​​​来​​​​​​​确​​​​​​​定​​​​​​​您​​​​​​​要​​​​​​​破​​​​​​​坏​​​​​​​的​​​​​​​数​​​​​​​据​​​​​​​。​​​​​​​
:::
::: para
和​​​​​​​大​​​​​​​多​​​​​​​数​​​​​​​ LVM 操​​​​​​​作​​​​​​​一​​​​​​​样​​​​​​​，`vgreduce`{.command}
命​​​​​​​令​​​​​​​在​​​​​​​某​​​​​​​种​​​​​​​意​​​​​​​义​​​​​​​上​​​​​​​是​​​​​​​可​​​​​​​逆​​​​​​​的​​​​​​​，即​​​​​​​您​​​​​​​立​​​​​​​即​​​​​​​使​​​​​​​用​​​​​​​ `vgcfgrestore`{.command}
命​​​​​​​令​​​​​​​将​​​​​​​卷​​​​​​​组​​​​​​​的​​​​​​​元​​​​​​​数​​​​​​​据​​​​​​​恢​​​​​​​复​​​​​​​到​​​​​​​之​​​​​​​前​​​​​​​的​​​​​​​状​​​​​​​态​​​​​​​。​​​​​​​例​​​​​​​如​​​​​​​：如​​​​​​​果​​​​​​​您​​​​​​​使​​​​​​​用​​​​​​​
`vgreduce`{.command} 命​​​​​​​令​​​​​​​的​​​​​​​ `--removemissing`{.option} 参​​​​​​​数​​​​​​​，而​​​​​​​不​​​​​​​带​​​​​​​
`--test`{.option}
参​​​​​​​数​​​​​​​，您​​​​​​​会​​​​​​​找​​​​​​​到​​​​​​​您​​​​​​​要​​​​​​​保​​​​​​​留​​​​​​​的​​​​​​​已​​​​​​​删​​​​​​​除​​​​​​​的​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​，您​​​​​​​仍​​​​​​​可​​​​​​​用​​​​​​​替​​​​​​​换​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​，并​​​​​​​使​​​​​​​用​​​​​​​另​​​​​​​一​​​​​​​个​​​​​​​
`vgcfgrestore`{.command} 命​​​​​​​令​​​​​​​来​​​​​​​将​​​​​​​卷​​​​​​​组​​​​​​​返​​​​​​​回​​​​​​​到​​​​​​​之​​​​​​​前​​​​​​​的​​​​​​​状​​​​​​​态​​​​​​​。​​​​​​​
:::
:::
::: section
::: titlepage
# [⁠]{#troubleshooting.html#nofreeext}6.7. 逻​​​​​​​辑​​​​​​​卷​​​​​​​没​​​​​​​有​​​​​​​足​​​​​​​够​​​​​​​的​​​​​​​可​​​​​​​用​​​​​​​扩​​​​​​​展​​​​​​​ {.title}
:::
[]{#troubleshooting.html#idm139761021645616 .indexterm}
::: para
You may get the error message \"Insufficient free extents\" when
creating a logical volume when you think you have enough extents based
on the output of the `vgdisplay`{.command} or `vgs`{.command} commands.
This is because these commands round figures to 2 decimal places to
provide human-readable output. To specify exact size, use free physical
extent count instead of some multiple of bytes to determine the size of
the logical volume.
:::
::: para
在​​​​​​​默​​​​​​​认​​​​​​​情​​​​​​​况​​​​​​​下​​​​​​​，`vgdisplay`{.command} 命​​​​​​​令​​​​​​​的​​​​​​​输​​​​​​​出​​​​​​​结​​​​​​​果​​​​​​​提​​​​​​​示​​​​​​​可​​​​​​​用​​​​​​​物​​​​​​​理​​​​​​​扩​​​​​​​展​​​​​​​的​​​​​​​行​​​​​​​。​​​​​​​
:::
``` screen
# vgdisplay
  --- Volume group ---
  ...
  Free  PE / Size       8780 / 34.30 GB
```
::: para
另​​​​​​​外​​​​​​​，您​​​​​​​可​​​​​​​以​​​​​​​使​​​​​​​用​​​​​​​ `vgs`{.command} 的​​​​​​​ `vg_free_count`{.literal} 和​​​​​​​
`vg_extent_count`{.literal} 选​​​​​​​项​​​​​​​显​​​​​​​示​​​​​​​可​​​​​​​用​​​​​​​扩​​​​​​​展​​​​​​​和​​​​​​​扩​​​​​​​展​​​​​​​的​​​​​​​总​​​​​​​数​​​​​​​。​​​​​​​
:::
``` screen
[root@tng3-1 ~]# vgs -o +vg_free_count,vg_extent_count
  VG     #PV #LV #SN Attr   VSize  VFree  Free #Ext
  testvg   2   0   0 wz--n- 34.30G 34.30G 8780 8780
```
::: para
您​​​​​​​有​​​​​​​ 8780 个​​​​​​​可​​​​​​​用​​​​​​​物​​​​​​​理​​​​​​​扩​​​​​​​展​​​​​​​，您​​​​​​​可​​​​​​​以​​​​​​​运​​​​​​​行​​​​​​​以​​​​​​​下​​​​​​​命​​​​​​​令​​​​​​​，使​​​​​​​用​​​​​​​小​​​​​​​写​​​​​​​ l
选​​​​​​​项​​​​​​​使​​​​​​​用​​​​​​​扩​​​​​​​展​​​​​​​而​​​​​​​不​​​​​​​是​​​​​​​字​​​​​​​节​​​​​​​作​​​​​​​为​​​​​​​单​​​​​​​位​​​​​​​：
:::
``` screen
# lvcreate -l8780 -n testlv testvg
```
::: para
这​​​​​​​样​​​​​​​就​​​​​​​会​​​​​​​使​​​​​​​用​​​​​​​卷​​​​​​​组​​​​​​​中​​​​​​​的​​​​​​​所​​​​​​​有​​​​​​​可​​​​​​​用​​​​​​​扩​​​​​​​展​​​​​​​。​​​​​​​
:::
``` screen
# vgs -o +vg_free_count,vg_extent_count
  VG     #PV #LV #SN Attr   VSize  VFree Free #Ext
  testvg   2   1   0 wz--n- 34.30G    0     0 8780
```
::: para
Alternately, you can extend the logical volume to use a percentage of
the remaining free space in the volume group by using the `-l`{.option}
argument of the `lvcreate`{.command} command. For information, see
[第 4.4.1.1 节
"创​​​​​​​建​​​​​​​线​​​​​​​性​​​​​​​卷​​​​​​​"](#LVM_CLI.html#create_linear_volumes){.xref}.
:::
:::
:::
[]{#LVM_GUI.html}
::: chapter
::: titlepage
# [⁠]{#LVM_GUI.html#LVM_GUI}第 7 章 用​​​​​​​ LVM GUI 进​​​​​​​行​​​​​​​ LVM 管​​​​​​​理​​​​​​​ {.title}
:::
::: para
除​​​​​​​了​​​​​​​命​​​​​​​令​​​​​​​行​​​​​​​界​​​​​​​面​​​​​​​（CLI），LVM 还​​​​​​​提​​​​​​​供​​​​​​​用​​​​​​​来​​​​​​​配​​​​​​​置​​​​​​​ LVM
逻​​​​​​​辑​​​​​​​卷​​​​​​​的​​​​​​​图​​​​​​​形​​​​​​​用​​​​​​​户​​​​​​​界​​​​​​​面​​​​​​​（GUI）。​​​​​​​您​​​​​​​可​​​​​​​以​​​​​​​通​​​​​​​过​​​​​​​输​​​​​​​入​​​​​​​
`system-config-lvm`{.command} 启​​​​​​​用​​​​​​​此​​​​​​​工​​​​​​​具​​​​​​​。​​​​​​​[*红​​​​​​​帽​​​​​​​企​​​​​​​业​​​​​​​版​​​​​​​ Linux
部​​​​​​​署​​​​​​​指​​​​​​​南​​​​​​​*]{.emphasis}中​​​​​​​关​​​​​​​于​​​​​​​配​​​​​​​置​​​​​​​的​​​​​​​ LVM
的​​​​​​​章​​​​​​​节​​​​​​​提​​​​​​​供​​​​​​​了​​​​​​​使​​​​​​​用​​​​​​​此​​​​​​​工​​​​​​​具​​​​​​​进​​​​​​​行​​​​​​​配​​​​​​​置​​​​​​​的​​​​​​​具​​​​​​​体​​​​​​​步​​​​​​​骤​​​​​​​。​​​​​​​
:::
::: para
另​​​​​​​外​​​​​​​，LVM GUI 还​​​​​​​可​​​​​​​作​​​​​​​为​​​​​​​ Conga 管​​​​​​​理​​​​​​​界​​​​​​​面​​​​​​​的​​​​​​​一​​​​​​​部​​​​​​​分​​​​​​​。​​​​​​​有​​​​​​​关​​​​​​​使​​​​​​​用​​​​​​​带​​​​​​​ Conga 的​​​​​​​ LVM
GUI 的​​​​​​​信​​​​​​​息​​​​​​​请​​​​​​​参​​​​​​​考​​​​​​​ Conga 的​​​​​​​在​​​​​​​线​​​​​​​帮​​​​​​​助​​​​​​​。​​​​​​​
:::
:::
[]{#device_mapper.html}
::: appendix
::: titlepage
# [⁠]{#device_mapper.html#device_mapper}附录 A. 设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​（Device Mapper） {.title}
:::
::: para
设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​是​​​​​​​一​​​​​​​个​​​​​​​为​​​​​​​卷​​​​​​​管​​​​​​​理​​​​​​​提​​​​​​​供​​​​​​​通​​​​​​​用​​​​​​​构​​​​​​​架​​​​​​​的​​​​​​​内​​​​​​​核​​​​​​​驱​​​​​​​动​​​​​​​程​​​​​​​序​​​​​​​。​​​​​​​它​​​​​​​提​​​​​​​供​​​​​​​可​​​​​​​用​​​​​​​来​​​​​​​创​​​​​​​建​​​​​​​用​​​​​​​作​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​设​​​​​​​备​​​​​​​的​​​​​​​映​​​​​​​射​​​​​​​设​​​​​​​备​​​​​​​的​​​​​​​通​​​​​​​用​​​​​​​方​​​​​​​法​​​​​​​。​​​​​​​它​​​​​​​不​​​​​​​一​​​​​​​定​​​​​​​要​​​​​​​特​​​​​​​别​​​​​​​了​​​​​​​解​​​​​​​卷​​​​​​​组​​​​​​​或​​​​​​​者​​​​​​​元​​​​​​​数​​​​​​​据​​​​​​​格​​​​​​​式​​​​​​​。​​​​​​​
:::
::: para
设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​为​​​​​​​一​​​​​​​组​​​​​​​高​​​​​​​级​​​​​​​技​​​​​​​术​​​​​​​提​​​​​​​供​​​​​​​了​​​​​​​基​​​​​​​础​​​​​​​。​​​​​​​除​​​​​​​ LVM 之​​​​​​​外​​​​​​​，设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​多​​​​​​​路​​​​​​​径​​​​​​​和​​​​​​​
`dmraid`{.command}
命​​​​​​​令​​​​​​​也​​​​​​​使​​​​​​​用​​​​​​​设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​。​​​​​​​设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​的​​​​​​​应​​​​​​​用​​​​​​​程​​​​​​​序​​​​​​​界​​​​​​​面​​​​​​​是​​​​​​​`ioctl`{.command}
系​​​​​​​统​​​​​​​调​​​​​​​用​​​​​​​。​​​​​​​用​​​​​​​户​​​​​​​界​​​​​​​面​​​​​​​是​​​​​​​ `dmsetup`{.command} 命​​​​​​​令​​​​​​​。​​​​​​​
:::
::: para
LVM logical volumes are activated using the Device Mapper. Each logical
volume is translated into a mapped device. Each segment translates into
a line in the mapping table that describes the device. The Device Mapper
supports a variety of mapping targets, including linear mapping, striped
mapping, and error mapping. So, for example, two disks may be
concatenated into one logical volume with a pair of linear mappings, one
for each disk. When LVM2 creates a volume, it creates an underlying
device-mapper device that can be queried with the `dmsetup`{.command}
command. For information about the format of devices in a mapping table,
see [第 A.1 节 "设​​​​​​​备​​​​​​​列​​​​​​​表​​​​​​​映​​​​​​​射​​​​​​​"](#device_mapper.html#dm-mappings){.xref}.
For information about using the `dmsetup`{.command} command to query a
device, see [第 A.2 节 "dmsetup
命​​​​​​​令​​​​​​​"](#device_mapper.html#dmsetup){.xref}.
:::
::: section
::: titlepage
# [⁠]{#device_mapper.html#dm-mappings}A.1. 设​​​​​​​备​​​​​​​列​​​​​​​表​​​​​​​映​​​​​​​射​​​​​​​ {.title}
:::
::: para
映​​​​​​​射​​​​​​​的​​​​​​​设​​​​​​​备​​​​​​​是​​​​​​​由​​​​​​​一​​​​​​​个​​​​​​​列​​​​​​​表​​​​​​​定​​​​​​​义​​​​​​​的​​​​​​​，该​​​​​​​列​​​​​​​表​​​​​​​指​​​​​​​定​​​​​​​如​​​​​​​何​​​​​​​使​​​​​​​用​​​​​​​支​​​​​​​持​​​​​​​的​​​​​​​设​​​​​​​备​​​​​​​列​​​​​​​表​​​​​​​映​​​​​​​射​​​​​​​将​​​​​​​设​​​​​​​备​​​​​​​的​​​​​​​每​​​​​​​个​​​​​​​逻​​​​​​​辑​​​​​​​分​​​​​​​段​​​​​​​行​​​​​​​进​​​​​​​行​​​​​​​匹​​​​​​​配​​​​​​​。​​​​​​​映​​​​​​​射​​​​​​​设​​​​​​​备​​​​​​​的​​​​​​​列​​​​​​​表​​​​​​​由​​​​​​​以​​​​​​​下​​​​​​​格​​​​​​​式​​​​​​​行​​​​​​​组​​​​​​​成​​​​​​​：
:::
``` screen
start length mapping [mapping_parameters...]
```
::: para
在​​​​​​​设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​列​​​​​​​表​​​​​​​的​​​​​​​第​​​​​​​一​​​​​​​行​​​​​​​中​​​​​​​，*`start`* 参​​​​​​​数​​​​​​​必​​​​​​​须​​​​​​​等​​​​​​​于​​​​​​​ 0。​​​​​​​某​​​​​​​行​​​​​​​中​​​​​​​的​​​​​​​ *`start`* +
*`length`* 参​​​​​​​数​​​​​​​必​​​​​​​须​​​​​​​与​​​​​​​下​​​​​​​一​​​​​​​行​​​​​​​的​​​​​​​ *`start`*
相​​​​​​​等​​​​​​​。​​​​​​​在​​​​​​​映​​​​​​​射​​​​​​​列​​​​​​​表​​​​​​​中​​​​​​​指​​​​​​​定​​​​​​​哪​​​​​​​个​​​​​​​映​​​​​​​射​​​​​​​参​​​​​​​数​​​​​​​取​​​​​​​决​​​​​​​于​​​​​​​在​​​​​​​该​​​​​​​行​​​​​​​中​​​​​​​指​​​​​​​定​​​​​​​的​​​​​​​ *`mapping`*
类​​​​​​​型​​​​​​​。​​​​​​​
:::
::: para
设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​中​​​​​​​的​​​​​​​大​​​​​​​小​​​​​​​总​​​​​​​是​​​​​​​以​​​​​​​扇​​​​​​​区​​​​​​​（512 字​​​​​​​节​​​​​​​）为​​​​​​​单​​​​​​​位​​​​​​​指​​​​​​​定​​​​​​​。​​​​​​​
:::
::: para
当​​​​​​​将​​​​​​​某​​​​​​​个​​​​​​​设​​​​​​​备​​​​​​​指​​​​​​​定​​​​​​​为​​​​​​​设​​​​​​​备​​​​​​​映​​​​​​​射​​​​​​​器​​​​​​​中​​​​​​​的​​​​​​​映​​​​​​​射​​​​​​​参​​​​​​​数​​​​​​​，它​​​​​​​就​​​​​​​被​​​​​​​该​​​​​​​文​​​​​​​件​​​​​​​系​​​​​​​统​​​​​​​（比​​​​​​​如​​​​​​​
`/dev/hda`{.literal}）中​​​​​​​的​​​​​​​设​​​​​​​备​​​​​​​名​​​​​​​称​​​​​​​或​​​​​​​者​​​​​​​主​​​​​​​号​​​​​​​码​​​​​​​和​​​​​​​副​​​​​​​号​​​​​​​码​​​​​​​以​​​​​​​
*`major`*:*`minor`* 的​​​​​​​格​​​​​​​式​​​​​​​进​​​​​​​行​​​​​​​参​​​​​​​考​​​​​​​。​​​​​​​首​​​​​​​选​​​​​​​ major:minor
格​​​​​​​式​​​​​​​因​​​​​​​为​​​​​​​这​​​​​​​样​​​​​​​可​​​​​​​避​​​​​​​免​​​​​​​查​​​​​​​找​​​​​​​路​​​​​​​径​​​​​​​名​​​​​​​称​​​​​​​。​​​​​​​
:::
::: para
以​​​​​​​下​​​​​​​显​​​​​​​示​​​​​​​了​​​​​​​某​​​​​​​设​​​​​​​备​​​​​​​的​​​​​​​映​​​​​​​像​​​​​​​列​​​​​​​表​​​​​​​示​​​​​​​例​​​​​​​。​​​​​​​在​​​​​​​这​​​​​​​个​​​​​​​列​​​​​​​表​​​​​​​中​​​​​​​有​​​​​​​四​​​​​​​个​​​​​​​线​​​​​​​性​​​​​​​对​​​​​​​象​​​​​​​：
:::
``` screen
0 35258368 linear 8:48 65920
35258368 35258368 linear 8:32 65920
70516736 17694720 linear 8:16 17694976
88211456 17694720 linear 8:16 256
```
::: para