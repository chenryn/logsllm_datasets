accomplished in an automated way and with a higher degree
"http:.../StudentManagement.wsdl20"
of success. xmlns="http://www.w3.org/2004/03/wsdl"
xmlns:tns="http.../StudentManagement.wsdl20"
xmlns:sm=“http:.../StudentMng.owl#"
xmlns:mep=http:.../TR/wsdl20-patterns>
WSDL-S [19, 20] establishes mapping between WSDL 
descriptions and ontological concepts. The idea of establishing
mappings between service, task, or activity descriptions and
ontological concepts was first presented in [21]. Fig. 3 
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 11 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
Fig. 4 Organization of OWL-S into modules
...
 1. Service Profile
The service profile tells "what the service does". The profile
The WSDL-S specification indicates that the Web service
can be used to advertise a service by describing its
supplies two operations: ‘RegisterStudent’ and
capabilities. This structure includes a description of what is
‘StudentInformation’. The first operation has an input named
accomplished by a service, limitations on service applicability
‘student’, semantically described by the ontological concept
and quality of service. The Service Profile describes what the
“sm:StudentInfo”, and an output named ‘ID’, semantically
service does by specifying the input and output types,
described by the concept “sm:StudentID”. The operation
preconditions and effects (IOPE).
‘RegisterStudent’ is semantically annotated with the
ontological concept “sm:RegisterStudent”. The second • The inputs the service expects.
operation, ‘StudentInformation’, uses similar ontological • The output information returned.
concepts to annotate the input, output, and action. The • The preconditions that have to be satisfied in order
ontological concepts are expressed in the ontology to use the service.
http://dme.uma.pt/jcardoso/StudentMng.owl#, which is • The expected effects resulting from running the
specified using OWL [4]. service.
To create, represent, and manipulate WSDL-S documents, Web Services are viewed as functions that produce a
WSDL4J (http://sourceforge.net/projects/wsdl4j/) can be used. transformation in their inputs generating outputs. A profile
WSDL4J provides JAVA API’s for WSDL parsing and description includes three types of information:
generation. WSDL4J supports extensibility elements 1. A human readable description of the service and its
providing an easy mechanism to add new extensions. This provider
allows WSDL to represent a specific technology under 2. A specification of the functionalities that are provided
various elements defined by WSDL. by the service
3. Attributes which provide additional information and
B. Pure Semantic Web services: OWL-S
requirements
OWL-S (formerly DAML-S) is emerging as a Web service
The following example, Congo.com provided by
description language that semantically describes the Web
www.daml.org, which is available for download at
using OWL ontologies. OWL-S consists of three parts
http://daml.semanticweb.org/services/owl-s/1.0/, describes the
expressed with OWL ontologies: the service profile, the
inputs, outputs, preconditions and effects of the Congo book
service model, and the service grounding. The profile is used
selling service.
to describe “what a service does”, with advertisement and
discovery as its objective. The service model describes “how a ...
service works”, to enable invocation, enactment, composition, 
message formats and protocols. These three parts and their
relationships are illustrated in Fig. 4. 
...
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 12 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
"http://www.daml.org/services...  rdf:ID="FullCongoBuyBookName">
... 
A profile also allows the definition of service characteristics 
such as the category (refers to an ontology of services that ...
may be on offer), the degree of quality (this property provides
qualifications about the service), the quality guarantees The previous example describes a process named
(guarantees that the service promises to deliver) the “FullCongoBuy” composed of a sequence of two sub
geographic radius (refers to the geographic scope of the processes: “locateBook” and “CongoBuyBook”. The first sub
service), etc. process is an atomic process, while the second one is a
composite process. The description of these processes is not
2. Process Model shown in this example. The “FullCongoBuy” has several
A process model decomposes into an ordered collection of inputs, but only one is shown, the “FullCongoBuyBookName”
processes. A process consists of other processes, in which which is of type string.
case it is said to be a composite process and it is organized on
the basis of some control flow structure. A process model 3. Service Grounding
allows various types of control flow structure including split, Grounding of a service specifies the details about transport
sequence, and non-deterministic choice. The control protocols, message formats, serialization, addressing, and
constructs made available are the following other service-specific details such as port numbers used in
• Sequence: a list of processes to be carried out in a contacting the service. It answers to the question “How does a
specific order. client access a service?” A grounding is the mapping of
• Split: a bag of process components to be executed ServiceProfile and ServiceModel abstract specifications to the
concurrently. ServiceGrounding specification, a concrete level of
• Unordered: a bag of process components that can be specification. The main function of an OWL-S grounding is to
executed in any order. map inputs and outputs of an atomic process to concrete
• Split+Join: consists of concurrent execution of process messages which can be transmitted over various media. OWL-
components with barrier synchronization. S uses Web Service Description Language (WSDL) as a
• Choice: allows a choice between alternative and specification for messages exchanged between services and
execute one processes.
• If-then-else: class has properties ifCondition, then, and Several message specifications could have been used, but
since there is extensive work on the WSDL and it has a strong
else, which implement the statement.
industry backing, WSDL has been selected. OWL-S atomic
• Repeat-until and repeat-while: Iterates execution of a
processes are mapped to WSDDL operations. The inputs and
bag of processes until/while a condition holds
outputs of OWL-S atomic processes are mapped to WSDL
If a process is not decomposable any further, it is said to be
messages. The following segment describes the grounding of
an atomic process and corresponds to operations that can be
OWL-S.
performed directly. Processes have inputs used to execute the
The tag wsdlDocument identifies the URI of the WSDL
process correctly. For a process to be executed, its
document that give the grounding.
preconditions need to be evaluated to true. The results of a
process are described as a set of outputs. Additionally, a set of
effects that represent changes that result from the execution of http://example.com/congo/congobuy.wsdl
the process are also asserted. 
The tag wsdlOperation identifies the URI of the WSDL
...
 ...
rdf:parseType="Collection">  congobuy.wsdl#CongoBuyPortType"/>
rdf:about="#CongoBuyBook" /> ...
  rdf:value="http://example.com/congo/
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 13 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
congobuy.wsdl#BuyBook"/> WSML is based on different logical formalisms, namely
Description Logics, First-Order Logic, and Logic
...
 Programming. WSML is divided into five subsets: WSML-
Core, WSML-DL, WSML-Light, WSML-Rule and WSML-
The tag wsdlInput identifies the URI of the WSDL Full. The various WSML subsets provide different levels of
message definition that carries the input of an atomic process, expressiveness (in the same way that OWL provides different
and a list of mapping pairs, for the correspondence between levels of expressiveness with OWL-Light, OWL-DL, and
OWL-S input properties and WSDL message parts. The tag OWL-Full).
wsdlOutput is very similar to the tag wsdlInput but applies Web Service Execution Environment (WSMX). It is an
to outputs. execution environment that enables discovery, selection,
mediation, invocation and interoperation of semantic Web
...
services and provides a reference implementation of WSMO.
 mediation, selection, and invocation and has been designed
including all required supporting components enabling an
services.
... Ontologies represent a key element in WSMO since they
 provide the terminology used by WSMO elements and give a
 enhance interoperation by giving formal semantics to the
 information exchanged by Web services and facilitating the
...
interoperation between humans and Web services. WSMO
ontologies include concepts, relations, instances, and axioms,
and information describing non-functional properties. The
C. Another Semantic Approach: WSMO
following example illustrates how ontologies are defined
Web Services Modeling Ontology (WSMO) provides using WSMO [23]:
ontological specifications for the main elements of semantic
Web services. WSMO has been developed by the Digital namespace
Enterprise Research Institute (DERI), a European research {_"http://example.org/tripReservationOntology#
",
organization that targets the integration of the semantic Web
dc _"http://purl.org/dc/elements/1.1#",
with Web services. WSMO approach is based on the Web loc _"http://example.org/locationOntology#",
Services Modeling Framework (WSMF) [22], a framework po _"http://example.org/purchaseOntology#",
foaf _"http://xmlns.com/foaf/0.1/",
that provides the appropriate conceptual model for developing
wsml _"http://www.wsmo.org/wsml/wsml-
and describing Web services and their composition based on
syntax#",
the maximal de-coupling and scalable mediation service prs _"http://example.org/owlPersonMediator#"
principles. The main objective of WSMO is to solve the }
ontology
application integration problem for Web services, Enterprise
_"http://example.org/tripReservationOntology"
Application Integration (EAI), and Service-Oriented nonFunctionalProperties
Architectures (SOA), by providing a conceptual framework dc#title hasValue "Trip Reservation
and a formal language for semantically describing all relevant Ontology"
dc#creator hasValue
aspects of Web services. These technologies will facilitate the
_"http://example.org/foaf#deri"
automation of discovering, interoperating, composing, and dc#format hasValue "text/x-wsml"
invoking Web services over the Web. WSMO defines the endNonFunctionalProperties
importsOntology{
modeling concepts for describing semantic Web services and
_"http://example.org/locationOntology",
includes the following four concepts: Web services, Goals, _"http://example.org/purchaseOntology"}
Ontologies and Mediators. WSMO and OWL-S aim at similar usesMediator
_"http://example.org/owlPersonMediator"
goals, i.e. providing a support for semantic Web services.
Despite the similarity of the ultimate goal, the two approaches
concept trip
are very different. The two main components of WSMO origin impliesType loc#location
initiative are: destination impliesType loc#location
departure ofType _date
Web Service Modeling Language (WSML). It provides a
arrival ofType _date
language to formally describe the elements defined in WSMO.
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 14 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
concept tripFromAustria subConceptOf trip of Web services is accomplished. Interfaces describe