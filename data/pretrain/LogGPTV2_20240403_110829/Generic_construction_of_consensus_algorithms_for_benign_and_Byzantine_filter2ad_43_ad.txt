is because 
2(n -TD + b). Therefore, 
correct 
condition 
by lines 1-3. 
(i.e., 
of line 4 holds. 
receiving 
processes 
Property 
a message 
is ensured 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
348 
DSN 2010: ROtti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
4.1.2 FLV(fI';,) for class 2 
a multiset. 
2 (FLAG =  ¢i and TD > 
3, where { # ... # 
The FLV function 
3b + f) is shown in Algorithm 
denotes 
can be the case for instantiations 
ing the locked 
rithm 
is needed: 
for class 
} at line I 
Note that when TD  n+;b+ f which 
2 and 3, detect­
as done by Algo­
an additional 
value only based on votes, 
2, does not work. Therefore, 
of classes 
timestamps. 
mechanism 
2 
I {( vote' 
Algorithm 3 FLV (fI';,) for class 
1: possibleVotesp 
ts, -, -) E it;; : 
+- {# (vote, 
=  vote' 
V ts > ts'} I 
, ts' , -, -)  E it;; : vote 
+- {(vote
V otesp 
, -, -, 
E possibleVotes,,: 
,-,-,-) 
=  1 then 
(v, - ,  -, -) E correctVotes" 
> n -Tf) + b#} 
-) E possible 
Votes" 
=  vote'}1 
2: correct 
I{(vote'
3: if IcorrectVotespl 
4:  return v s.t. 
5: else if I it;; I > n - T f) + 2b then 
6:  return? 
7: else 
8:  return null 
: 
> b} 
vote 
This means that fI';, contains 
at least 
processes 
(this 
(VI, ¢iI, -, -) from honest 
line 5 ensures 
this. Here is why. Assume that the condi­
tion of line 5 holds. 
more than 
n -T D + 2b messages. 
With (*), the set fI';, contains 
b + 1 messages 
2 for the case n = 5, b =  1, f = 0, 
is illustrated 
in Figure 
TD = 4). With (**) and the fact that fI';, contains 
n -TD + b messages 
from honest 
2), 
the b + 1 messages 
(VI, ¢iI, -, -) satisfy 
of 
the condition 
line 1. By line 2, (VI, ¢iI, -, -) is in correct 
More­
Votesp. 
over, as discussed 
Therefore, 
return 
the condition 
? when VI is locked. 
more than 
(see Figure 
only VI can be in correctVotesp. 
of line 3 holds: 
Algorithm 
processes 
3 cannot 
above, 
by lines 
is ensured 
Property 
5, 6. This 
FLV-liveness 
when TD > 3b + f, we have n  - b  - f 
from all cor­
that the con­
FLV -validity 
is because 
n -TD + 2b. Therefore, 
rect processes 
dition 
by lines 
1-4. 
a message 
1fI';, I  n - b -f) ensures 
of line 5 holds. 
receiving 
Property 
(i.e., 
> 
is ensured 
to phase ¢iI + 1. For simplicity, 
Lines 1 and 2 are for F LV-agreement. 
We now ex­
example. 
processes 
Let VI be locked 
only on the following 
only one value can be validated 
round r - 1. Therefore, 
have votep =  VI and tsp =  ¢iI, i.e., 
pro­
case: some honest 
VI in round r - 1 that belongs 
to phase 
TD messages 
(VI, ¢iI) 
1, p has received 
at least T D - b 
at 
have votep = V2 #-VI (*). 
pro­
by honest 
processes 
with 
that for every 
plain their role with a simple 
in round r that belongs 
let us reason 
cess p has decided 
¢iI. By Algorithm 
in the decision 
honest 
processes 
most n - TD honest 
Because 
cesses 
votep = V2 #-VI have tsp n -TD+2b 
Figure 2. Illustration 
b = 1, f = 0, TD = 4) 
for FLV for class 2 (n = 5, 
For FLV -agreement 
to hold, Algorithm 
when VI is locked. 
3 must also pre­
The condition 
of 
vents? to be returned 
4.1.3 FLV(fI';,) for class 3 
for class 
3 (FLAG = ¢i and TD > 2b + 
4. Observe 
3, TD can be  3b + f. Therefore, 
the 
value only based on votes and timestamps, 
as done 
3, does not work. Therefore, 
The FLV function 
f) is shown in Algorithm 
of class 
locked 
by Algorithm 
mechanism 
the history log. 
is needed: 
detecting 
an additional 
that for instantiations 
Algorithm 4 FLV(fI';,) for class 
1: possible 
+- { (vote, 
V otesp 
ts', -, -) E it; : vote 
I{(vote', 
ts, -, -) E it; : 
3 
2: correctVotesp 
+- {v: (v,ts,-,-) 
-) E it; : (vote, 
, ts' , history', 
I {( vote' 
ts) E history'
} I > b} 
E possibleVotesp 
=  vote' 
V 
V ts > ts'}1 
>  n -Tf) + b} 
=  lthen 
3: if IcorrectVotespl 
4:  return v s.t. (v, -, -, -) E correctVotesp 
5: else if !correct 
I >  1 then 
V otesp 
6:  return? 
7: else if I { (vote, 
ts, -, -) E it; : ts =  o} I >  n -To + b then 
8 :  ifthere is a value v such that it;; contains a majority of messages (v, -,-) 
9:  return v 
10:  else 
11:  return ? 
12: else 
13:  return null 
1* only for unanimity *1 
3, lines 
Consider 
that value VI is locked 
to Algorithm 
Their role can be explained 
Similarly 
agreement. 
ample. 
longs to phase ¢il + 1. For simplicity, 
some honest 
longs to phase ¢il' Consider 
as for Algorithm 
votep = VI and tsp = ¢il (*), i.e., 
processes 
honest 
1 and 2 are for FLV­
with a simple 
ex­
in round r that be­
let us first assume 
VI in round r - 1  that be­
3. For the same reason 
processes 
at most n -TD honest 
have votep = V2 #-VI. Furthermore, 
for every 
p has decided 
Figure 
3, at least TD - b honest 
p, we have votep = VI or tsp  cPi) in its history in the sending step of 
round r. It follows that onl y messages (Vi, -, -, -) can be 
when a value Vi is 
in correctVotesp 
any value V  -I-Vi or V = ? to 
locked, 
with cPi > 0, 
be returned 
condition 
can be in 
can only 
1, no honest process 
at lines 4 and 6. By (*) together 
of line 7 never holds in our example. 
at line 2. Therefore, 
lines I and 2 prevent 
correct 
processes 
Figure 3. Illustration 
b = 1, f = 0, TD = 3) 
for FLV for class 3 (n = 4, 
the role 
To understand 
votep =  Vi. With the same arguments 
of lines 8-11, we have to con­
example. Let all honest processes have ini­
as above, it 
from Vi or null can be re­
sider another 
tially 
follows that no value different 
of line 7 
the condition 
turned at lines 4 and 6. However, 
more than n - TD 
might hold. In this case, f1';, contains 
messages (Vi, 0, -, -) from honest processes, 
and at most 
b messages (V2 -I-Vi,O,-,-) from Byzantine 
processes. 
Because TD  n  - b  -f, we have n - TD  b, and Vi 
is  returned 
agreement 
at line 9. In other words, line 9 ensures FLV­
when unanimit
y is considered. 
Let us now discuss 
FLV-liveness. For this property 
to 
hold, we need a stronger 
variant 
of Selector-
y: II 
validit
cP) I > 0, then 
If I Selector(p, 
• Selector
ISelector(p, 
-strong Validity: 
cP)1 > 3b + 2f· 
This requirements 
4.2 Instantiations 
of Selector(p, 
cP) 
A trivial 
instantiation 
of the Selector 
function 
consists 
set of processes II. This 
y, Selector-
in always returning 
the  whole 
trivially satisfies Selector-validit
and Selector-liveness. To our knowledge, 
is used in all 
other possible 
tine fault model: it consists 
b + 1 processes 
every phase. 
algorithms 
instantiation 
for Byzantine faults. However, 
can be considered in the Byzan­
in returning 
the same set S of 
in 
at every process, with S being different 
an­
this instantiation 
In the benign fault model, it is sufficient that the 
Selector 
strongValidity 
a single 
One such instantiation 
of the 
function always returns 
of processes. 
tion is the  well 
in [5]. Another 
in [ II ]. 
known rotating coordinator 
example 
is the leader election 
process rather than a set 
func­
Selector 
function 
used 
function 
used 
can be explained 
as follows. Let f1';, 
the n  - b  - f  correct  pro­
5 Instantiation 
examples 
holds, 
of messa
processes, 
and let ts" be the highest 
There are two cases to consider: (1) correct  pro­
(-,0, -, -), (2) at least one correct  pro­
contains the messages from  all 
cesses. 
cesses sent  only 
cess sent (-,ts > 0,-,-). Note that TD > 2b+fensures 
n - b - f > n -TD + b (*). In case ( I ), by (*) the condi­
and null cannot be returned at 
tion of line 7 
line 13. 
In case (2), let v denote the subset 
ges  in f1';, that 
are from correct 
times­
tamp in v. By Lemma 2 and Algorithm 
I, there is a unique 
value v" such that (v", ts", -, -) E v. Together with (*), 
this ensures that the 
contains (v"' ts", -, -). The Selector-
lows us to get a stronger 
that if process h set voteh to V and tSh to cP at lines 23-
24, then at least b + 1 correct 
have sent (v, -) at 
v" 
line 19. As a result, 
in the validation round 3 ts" -1 received 
b + 1 correct 
processes have selected v" in round 3 ts" -2, and these 
have (v", ts,,) is their history. This implies that 
processes 
II This stronger 
process that validates 
v" from at least 
at least b + 1 correct 
V otesp is not empty, and 
al­
of Lemma 1: it ensures 
set possible 
Therefore, 
any correct 
processes. 
processes 
variant 
3.2, since the proof 
strongValidity 
variant 
Algorithm 
was not introduced 
1 does not require 
in Section 
is hidden in the F LV -Iiveness 
the stronger 
variant. 
In the 
1, the stronger 
variant 
of the generic 
proof of Algorithm 
property. 
obtained 
from Algorithm 
we show several 
In this section 
sus algorithms 
cause the instantiated 
model, some details of the 
sion rules, leader election, message  acceptance 
etc.) are hidden. 
expressed in the round 
algorithms 
well-known consen­
1. Note that 
algorithms are 
(retransmis­
original 
be­
policies, 
5.1 Class 1 - OneThirdRule and FaB Paxos 
OneThirdRule [6] The OneThirdRule 
assumes benign faults 
parametrization: T D =  i2nt 1 l ,12 
with the following 
FLAG =  *, Selector(p, 
always II and Algo­
rithm 2 with TD =  i2niil as a FLV instantiation. It can 
cP) returning 
algorithm, 
which 
from Algorithm 
only, is obtained 
that the instantiation 
leads to a (small) 
improve­
1 
be noticed 
ment of the original 
be found 
in [19]. 
OneThirdRule  algorithm. 
Details can 
12 TD is chosen such that the same number of messages 