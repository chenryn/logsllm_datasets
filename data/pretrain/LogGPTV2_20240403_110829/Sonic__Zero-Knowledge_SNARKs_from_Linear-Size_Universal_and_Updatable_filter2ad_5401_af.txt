negligible in a sufficiently large field. Second observe that given
c′(X) = s(u, X), a PPT algebraic adversary can open C only at a
(not randomly chosen) value yj to s(u, yj). Finally observe that
the probability that s′
j(X) = s(u, yj) at a randomly chosen u but
that s′
j(X) (cid:44) s(X , yj) is negligible in a sufficiently large field. Thus
soundness follows from the evaluation binding of the polynomial
commitment.
□
9 IMPLEMENTATION
In order to compare the concrete performance of our construction
to other protocols we provide an open-source implementation in
Rust [1] of Sonic implemented with helpers. We chose to implement
only this variant of Sonic because it has better practical efficiency.
The numbers in Table 4 were obtained on CPU i7 2600K with 32 GB
of RAM, running at 3.4 GHz.
In terms of our parameters, we make use of the BLS12-381 elliptic
curve construction, which is designed so that its group order is
a prime p such that Fp is equipped with large 2n roots of unity
Common input: info = bp, srs, {zj , yj}m
hscP1(info) (cid:55)→ ({Sj , sj ,Wj}m
for 1 ≤ j ≤ m:
j=1):
j=1, s(X , Y)
$←− Fp
Sj ← Commit(bp, srs, d, s(X , yj))
(sj ,Wj) ← Open(Sj , zj , s(X , yj))
j=1) (cid:55)→ u:
send {Sj , sj ,Wj}m
j=1
hscV1(info, {Sj , sj ,Wj}m
send u
hscP2(u) (cid:55)→ {ˆsj , ˆWj , Qj}m
j=1:
C ← Commit(bp, srs, d, s(u, X))
for 1 ≤ j ≤ m:
(ˆsj , ˆWj) ← Open(Sj , u, s(X , yj))
(ˆsj , Qj) ← Open(C, yj , s(u, X))
$←− Fp
send {ˆsj , ˆWj , Qj}m
j =1
hscV2({ˆsj , ˆWj , Qj}m
j=1) (cid:55)→ v:
send v
hscP2(v) (cid:55)→ Qv:
(s(u, v), Qv) ← Open(C, v, s(u, X))
send Qv
hscV(Qv) (cid:55)→ 0/1:
sv ← s(u, v)
for 1 ≤ j ≤ m:
check pcV(bp, srs, Sj , d, zj ,(sj ,Wj))
check pcV(bp, srs, Sj , d, u,(ˆsj , ˆWj))
check pcV(bp, srs, C, d, yj ,(ˆsj , Qj))
check pcV(bp, srs, C, d, v,(sv , Qv))
return 1 if all checks pass, else return 0
Figure 7: The helper protocol for computing aggregated signatures
of correct computation.
for performing fast polynomial multiplications with radix-2 fast-
Fourier transforms. BLS12-381 targets the 128-bit security level. Kim
and Babalescu [51] describe an optimization to the Number Field
Sieve algorithm, analyzed further by Babalescu and Duquesne [3],
which may reduce security to 117 bits, but the attack requires a
(currently unknown) efficient algorithm for scanning a large space
of polynomials.
Proof verification is dominated by a set of pairing equation
checks and an evaluation of s(X , Y) in the scalar field. Most of
the pairings within (and amongst many) proof verifications involve
fixed elements in G2, so the verifier can combine all of them into a
single equation with a probabilistic check. In the context of batch
verification each individual proof thus requires arithmetic only in
13
Input size (bits) Gates
Size
Proof (bytes)
SRS (MB)
Timing
SRS (s)
Prove (s) Helper (s) Helped Verifier (ms)
Pedersen hash preimage (input size)
256
256
203
1562
0.47
3.74
Unpadded SHA256 preimage
39,516
78,263
117,010
91.05
182.09
273.14
256
256
256
48
384
512
1024
1536
2.24
17.62
422.39
831.87
1301.43
0.15
0.84
14.63
28.93
38.86
0.09
0.46
8.41
14.23
21.54
0.69
0.72
0.68
0.68
0.68
Table 4: Sonic’s efficiency in proving knowledge of x such that H(x) = y for different sizes of x. Numbers are given to two significant digits.
The first rows are for the Pedersen hash function and the final rows are for SHA256. “Helper” and “Helped Verifier” are the marginal cost
of aggregating and verifying an additional proof assuming that the helper has been run. These are calculated by batch-verifying 100 proofs,
subtracting the cost to verify one, and dividing by 99.
G1. Only a small, fixed number of pairing operations are performed
at the end.
As mentioned in Section 8, the evaluation of s(X , Y) can be done
once for a batch of proofs given some post-processing by an un-
trusted helper. We consider the performance of batch verification
with this post-processing.
In each individual proof we must compute k(y) depending on
our instance. We keep this polynomial sparse by having coefficients
only in our instance variables, and keeping all other coefficients
zero. If constants are needed in the circuit, they are expressed with
coefficients of an instance variable that is fixed to one.
We provide an adaptor which translates circuits written in the
form of quadratic “rank-1 constraint systems” (R1CS) [11], a widely
deployed NP language currently undergoing standardisation, into
the system of constraints natural to our proving system. This adds
some constant amount of overhead during proving and verifying
steps, but eases implementation and comparison with existing con-
structions.
The numbers obtained are relevant only to batched proofs, so
we wrote an idealized verifier of the Groth 2016 scheme [45], where
a batch of proofs are verified together. In this idealized version
we assume the G2 elements do not need to be deserialised and
that there is only one public input. We found the marginal cost of
verification was around 0.6ms, compared to Sonic’s 0.7ms. We thus
claim that Sonic has verification time which is competitive with
the state-of-the-art for zk-SNARKs, but unlike prior zk-SNARKs
has a universal and updatable SRS.
In Table 4 we mimicked Bulletproofs [26, Table 3] in measuring
the results of our Sonic implementation. Our implementation is not
constant time, however, which may affect this comparison (or in-
deed the comparison of prover performance to any implementation
with constant-time algorithms). We measured the efficiency of the
prover, the verifier, and the helped verifier in proving knowledge of
x such that H(x) = y. Proof sizes are always 256 bytes and verifier
computation is always around 0.7ms. In Bulletproofs, in contrast,
the proof size for the unpadded 512-bit SHA256 preimage is 1376
bytes and verification time is 41.52 ms, although as we mention
this comparison is not exact give in particular that their system
was throttled to 2 GHz and that there are optimised implementa-
tions for fixed circuits.2 The runtime of our prover goes up in a
roughly linear fashion, as expected. The cost of the helped verifier,
in contrast, remains the same for all circuit sizes.
10 CONCLUSIONS
Zero-knowledge protocols have gained significant traction in recent
years in the application domain of cryptocurrencies, which has led
to the development of new protocols with significant performance
gains. At the same time, the requirements of this application have
given rise to protocols with new features, such as an untrusted
setup and a reference string that allows one to prove more than
a single relation. In this paper, we present Sonic, which captures
a valuable set of tradeoffs between these key functional require-
ments of untrusted setup and universality. At the same time, as we
demonstrate via a prototype implementation, Sonic has proof sizes
and verification time that are competitive with the state-of-the-art.
ACKNOWLEDGMENTS
We thank Daira Hopwood and Ariel Gabizon for helpful discussions.
Mary Maller and Sarah Meiklejohn are supported by EPSRC Grant
EP/N028104/1.
REFERENCES
[1] Sonic reference implementation. https://github.com/zknuckles/sonic.
[2] S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubramaniam. Ligero: Lightweight
sublinear arguments without a trusted setup. In Proceedings of ACM CCS, 2017.
[3] R. Barbulescu and S. Duquesne. Updating key size estimations for pairings.
Cryptology ePrint Archive, Report 2017/334, 2017. https://eprint.iacr.org/2017/
334.
[4] C. Baum, J. Bootle, A. Cerulli, R. del Pino, J. Groth, and V. Lyubashevsky. Sub-
linear lattice-based zero-knowledge arguments for arithmetic circuits. In Ad-
vances in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology
Conference, Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part II,
pages 669–699, 2018.
[5] S. Bayer and J. Groth. Efficient zero-knowledge argument for correctness of
a shuffle. In Advances in Cryptology - EUROCRYPT 2012 - 31st Annual Interna-
tional Conference on the Theory and Applications of Cryptographic Techniques,
Cambridge, UK, April 15-19, 2012. Proceedings, pages 263–280, 2012.
[6] M. Belenkiy, J. Camenisch, M. Chase, M. Kohlweiss, A. Lysyanskaya, and
H. Shacham. Randomizable proofs and delegatable anonymous credentials.
2https://github.com/dalek-cryptography/zkp
14
In Advances in Cryptology - CRYPTO 2009, 29th Annual International Cryptol-
ogy Conference, Santa Barbara, CA, USA, August 16-20, 2009. Proceedings, pages
108–125, 2009.
[7] M. Bellare, G. Fuchsbauer, and A. Scafuro. NIZKs with an untrusted CRS: security
[8] M. Bellare and P. Rogaway. The security of triple encryption and a framework
in the face of parameter subversion. In ASIACRYPT, pages 777–804, 2016.
for code-based game-playing proofs. In EUROCRYPT, pages 409–426, 2006.
[9] E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev. Scalable, transparent, and
post-quantum secure computational integrity. Cryptology ePrint Archive, Report
2018/046, 2018. https://eprint.iacr.org/2018/046.
[10] E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and M. Virza.
Zerocash: Decentralized anonymous payments from Bitcoin. In Proceedings of
the IEEE Symposium on Security & Privacy, 2014.
[11] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza. Snarks for C:
verifying program executions succinctly and in zero knowledge. In Advances in
Cryptology - CRYPTO 2013 - 33rd Annual Cryptology Conference, Santa Barbara,
CA, USA, August 18-22, 2013. Proceedings, Part II, pages 90–108, 2013.
[12] E. Ben-Sasson, A. Chiesa, M. Green, E. Tromer, and M. Virza. Secure sampling
of public parameters for succinct zero knowledge proofs. In Proceedings of the
IEEE Symposium on Security & Privacy, 2015.
[13] E. Ben-Sasson, A. Chiesa, M. Riabzev, N. Spooner, M. Virza, and N. P. Ward.
Aurora: Transparent succinct arguments for R1CS.
IACR Cryptology ePrint
Archive, 2018:828, 2018.
[14] E. Ben-Sasson, A. Chiesa, and N. Spooner. Interactive oracle proofs. In Theory of
Cryptography - 14th International Conference, TCC 2016-B, Beijing, China, October
31 - November 3, 2016, Proceedings, Part II, pages 31–60, 2016.
[15] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza. Scalable zero knowledge via
cycles of elliptic curves. In CRYPTO, 2014.
[16] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza. Succinct non-interactive zero
knowledge for a von neumann architecture. In Proceedings of the 23rd USENIX
Security Symposium, San Diego, CA, USA, August 20-22, 2014., pages 781–796,
2014.
[17] D. Bernhard, G. Fuchsbauer, and E. Ghadafi. Efficient signatures of knowledge
and DAA in the standard model. In Applied Cryptography and Network Security -
11th International Conference, ACNS 2013, Banff, AB, Canada, June 25-28, 2013.
Proceedings, pages 518–533, 2013.
[18] N. Bitansky, A. Chiesa, Y. Ishai, R. Ostrovsky, and O. Paneth. Succinct non-
interactive arguments via linear interactive proofs. In Theory of Cryptography
- 10th Theory of Cryptography Conference, TCC 2013, Tokyo, Japan, March 3-6,
2013. Proceedings, pages 315–333, 2013.
In
Advances in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology
Conference, Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part I, pages
757–788, 2018.
[20] D. Boneh and X. Boyen. Short signatures without random oracles and the SDH
[19] D. Boneh, J. Bonneau, B. Bünz, and B. Fisch. Verifiable delay functions.
assumption in bilinear groups. J. Cryptology, 21(2):149–177, 2008.
[21] D. Boneh, Ö. Dagdelen, M. Fischlin, A. Lehmann, C. Schaffner, and M. Zhandry.
Random oracles in a quantum world. In Advances in Cryptology - ASIACRYPT
2011 - 17th International Conference on the Theory and Application of Cryptology
and Information Security, Seoul, South Korea, December 4-8, 2011. Proceedings,
pages 41–69, 2011.
J. Bootle, A. Cerulli, P. Chaidos, J. Groth, and C. Petit. Efficient zero-knowledge
arguments for arithmetic circuits in the discrete log setting. In EUROCRYPT,
2016.
J. Bootle, A. Cerulli, E. Ghadafi, J. Groth, M. Hajiabadi, and S. Jakobsen. Linear-
time zero-knowledge proofs for arithmetic circuit satisfiability. In Proceedings of
Asiacrypt 2017, 2017.
J. Bootle, A. Cerulli, J. Groth, S. K. Jakobsen, and M. Maller. Nearly linear-time
zero-knowledge proofs for correct program execution. IACR Cryptology ePrint
Archive, 2018:380, 2018.
[25] S. Bowe, A. Gabizon, and I. Miers. Scalable multi-party computation for zk-
SNARK parameters in the random beacon model. Cryptology ePrint Archive,
Report 2017/1050, 2017. https://eprint.iacr.org/2017/1050.
[26] B. Bünz, J. Bootle, D. Boneh, A. Poelstra, and G. Maxwell. Bulletproofs: Short
proofs for confidential transactions and more. In Proceedings of the IEEE Sympo-
sium on Security & Privacy, 2018.
J. Camenisch, M. Dubovitskaya, K. Haralambiev, and M. Kohlweiss. Composable
and modular anonymous credentials: Definitions and practical constructions. In
Advances in Cryptology - ASIACRYPT 2015 - 21st International Conference on the
Theory and Application of Cryptology and Information Security, Auckland, New
Zealand, November 29 - December 3, 2015, Proceedings, Part II, pages 262–288,
2015.
J. Camenisch and T. Groß. Efficient attributes for anonymous credentials. In Pro-
ceedings of the 2008 ACM Conference on Computer and Communications Security,
CCS 2008, Alexandria, Virginia, USA, October 27-31, 2008, pages 345–356, 2008.
[29] P. Chaidos, V. Cortier, G. Fuchsbauer, and D. Galindo. Beleniosrf: A non-
In Proceedings of the 2016
interactive receipt-free electronic voting scheme.
[22]
[23]
[28]
[24]
[27]
15
ACM SIGSAC Conference on Computer and Communications Security, Vienna,
Austria, October 24-28, 2016, pages 1614–1625, 2016.
[30] M. Chase, D. Derler, S. Goldfeder, C. Orlandi, S. Ramacher, C. Rechberger, D. Sla-
manig, and G. Zaverucha. Post-quantum zero-knowledge and signatures from
symmetric-key primitives. In Proceedings of the 2017 ACM SIGSAC Conference on
Computer and Communications Security, CCS 2017, Dallas, TX, USA, October 30 -
November 03, 2017, pages 1825–1842, 2017.
[31] M. Chase, M. Kohlweiss, A. Lysyanskaya, and S. Meiklejohn. Succinct malleable
nizks and an application to compact shuffles. In Theory of Cryptography - 10th
Theory of Cryptography Conference, TCC 2013, Tokyo, Japan, March 3-6, 2013.
Proceedings, pages 100–119, 2013.
[32] M. Chase, M. Kohlweiss, A. Lysyanskaya, and S. Meiklejohn. Malleable signatures: