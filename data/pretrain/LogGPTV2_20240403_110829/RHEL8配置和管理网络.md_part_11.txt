        服务器： [![vlan IPv6 settings nm connection
        editor](images/vlan-IPv6-settings-nm-connection-editor.png)]{.inlinemediaobject}
    :::
6.  点击 [Save]{.guibutton} 保存 VLAN 连接。
7.  关闭 `nm-connection-editor`{.literal}。
:::
::: orderedlist
**验证步骤**
1.  验证设置：
    ``` literallayout
    # ip -d addr show vlan10
    4: vlan10@enp1s0:  mtu 1500 qdisc noqueue state UP group default qlen 1000
        link/ether 52:54:00:d5:e0:fb brd ff:ff:ff:ff:ff:ff promiscuity 0
        vlan protocol 802.1Q id 10  numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535
        inet 192.0.2.1/24 brd 192.0.2.255 scope global noprefixroute vlan10
           valid_lft forever preferred_lft forever
        inet6 2001:db8:1::1/32 scope global noprefixroute
           valid_lft forever preferred_lft forever
        inet6 fe80::8dd7:9030:6f8e:89e6/64 scope link noprefixroute
           valid_lft forever preferred_lft forever
    ```
:::
::: itemizedlist
**其它资源**
-   如需有关测试连接的更多信息，请参阅[测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 41 章 测试基本网络设置"){.link}。
-   如果连接没有默认网关，请参阅[配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#proc_configuring-vlan-tagging-using-nmstatectl_configuring-vlan-tagging}使用 nmstatectl 配置 VLAN 标记 {.title}
:::
本节论述了如何使用 `nmstatectl`{.literal} 工具配置使用以太网连接 ID 10
的 VLAN。作为父设备，VLAN 连接包含 IP、默认网关和 DNS 配置。
根据您的环境，相应地调整 YAML 文件。例如，若要在 VLAN
中使用团队、网桥或绑定设备，请调整您在 VLAN 中使用的端口的
`base-iface`{.literal} 属性和 `type`{.literal} 属性。
::: itemizedlist
**先决条件**
-   要将以太网设备用作 VLAN
    中的端口，必须在服务器中安装物理或者虚拟以太网设备。
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  创建包含以下内容的 YAML 文件，如 `~/create-vlan.yml`{.literal} ：
    ``` literallayout
    ---
    interfaces:
    - name: vlan10
      type: vlan
      state: up
      ipv4:
        enabled: true
        address:
        - ip: 192.0.2.1
          prefix-length: 24
        dhcp: false
      ipv6:
        enabled: true
        address:
        - ip: 2001:db8:1::1
          prefix-length: 64
        autoconf: false
        dhcp: false
      vlan:
        base-iface: enp1s0
        id: 10
    - name: enp1s0
      type: ethernet
      state: up
    routes:
      config:
      - destination: 0.0.0.0/0
        next-hop-address: 192.0.2.254
        next-hop-interface: vlan10
      - destination: ::/0
        next-hop-address: 2001:db8:1::fffe
        next-hop-interface: vlan10
    dns-resolver:
      config:
        search:
        - example.com
        server:
        - 192.0.2.200
        - 2001:db8:1::ffbb
    ```
2.  将设置应用到系统：
    ``` literallayout
    # nmstatectl set ~/create-vlan.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    vlan10      vlan      connected  vlan10
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show vlan10
    connection.id:              vlan10
    connection.uuid:            1722970f-788e-4f81-bd7d-a86bf21c9df5
    connection.stable-id:       --
    connection.type:            vlan
    connection.interface-name:  vlan10
    ...
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `nmstatectl`{.literal} 的详情，请查看 `nmstatectl(8)`{.literal}
    man page。
-   如需了解更多配置示例，请参阅
    `/usr/share/doc/nmstate/examples/`{.literal} 目录。
:::
:::
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#proc_configuring-vlan-tagging-using-system-roles_configuring-vlan-tagging}使用系统角色配置 VLAN 标记 {.title}
:::
您可以使用 `networking`{.literal} RHEL 系统角色配置 VLAN
标记。这个步骤描述了如何添加以太网连接以及使用此以太网连接
`10`{.literal} 的 ID 的 VLAN。作为父设备，VLAN 连接包含 IP、默认网关和
DNS 配置。
根据您的环境，相应地调整 play。例如：
::: itemizedlist
-   要将 VLAN 用作其他连接的端口，如绑定，省略 `ip`{.literal}
    属性，并在父配置中设置 IP 配置。
-   要使用 VLAN 中的 team、bridge 或 bond 设备，请调整您在 VLAN
    中使用的端口的 `interface_name`{.literal} 和 `type`{.literal} 属性。
:::
::: itemizedlist
**先决条件**
-   在控制节点上安装 `ansible`{.literal} 和
    `rhel-system-roles`{.literal} 软件包。
-   如果您运行 playbook 时使用了与 `root`{.literal} 不同的远程用户,
    则此用户在受管节点上需要具有适当的 `sudo`{.literal} 权限。
:::
::: orderedlist
**流程**
1.  如果 playbook 要针对其执行的主机还没有在清单中，请将此主机的 IP
    或名称添加到 `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/vlan-ethernet.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure a VLAN that uses an Ethernet connection
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: linux-system-roles.network
        vars:
          network_connections:
            # Add an Ethernet profile for the underlying device of the VLAN
            - name: enp1s0
              type: ethernet
    	  interface_name: enp1s0
    	  autoconnect: yes
              state: up
    	  ip:
    	    dhcp4: no
    	    auto6: no
            # Define the VLAN profile
            - name: vlan10
              type: vlan
              ip:
                address:
                  - "192.0.2.1/24"
                  - "2001:db8:1::1/64"
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              vlan_id: 10
    	  parent: enp1s0
              state: up
    ```
    VLAN 配置集中的 `parent`{.literal} 属性将 VLAN 配置为在
    `enp1s0`{.literal} 设备之上运行。
3.  运行 playbook：
    ::: itemizedlist
    -   以 `root`{.literal} 用户身份连接到受管主机，输入：
        ``` literallayout
        # ansible-playbook -u root ~/vlan-ethernet.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/vlan-ethernet.yml
        ```
        `--ask-become-pass`{.literal} 选项确定
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，请以当前登录到控制节点的用户 `ansible-playbook`{.literal}
    连接到受管主机。
:::
::: itemizedlist
**其它资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    file
-   `ansible-playbook(1)`{.literal} man page
:::
:::
:::
[]{#configuring-a-network-bridge_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge_configuring-and-managing-networking}第 11 章 配置网络桥接 {.title}
:::
网络桥接是一个链路层设备，它可根据 MAC
地址列表转发网络间的流量。网桥通过侦听网络流量并了解连接到每个网络的主机来构建
MAC 地址表。例如，您可以使用 Red Hat Enterprise Linux
主机上的软件桥接模拟硬件桥接或虚拟化环境中，将虚拟机(VM)集成到与主机相同的网络中。
桥接需要在桥接应该连接的每个网络中有一个网络设备。当您配置桥接时，桥接名为
`controller`{.literal}，其使用的设备为 `ports`{.literal}。
您可以在不同类型的设备中创建桥接，例如：
::: itemizedlist
-   物理和虚拟以太网设备
-   网络绑定
-   网络团队（team）
-   VLAN 设备
:::
由于 IEEE 802.11 标准指定在 Wi-Fi 中使用 3
个地址帧以便有效地使用随机时间，您无法通过 Ad-Hoc 或者 Infrastructure
模式中的 Wi-Fi 网络配置网桥。
::: section
::: titlepage
# []{#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nmcli-commands_configuring-a-network-bridge}使用 nmcli 命令配置网络桥接 {.title}
:::
本小节论述了如何使用 `nmcli`{.literal} 程序配置网络桥接。
::: itemizedlist
**先决条件**
-   在服务器中安装两个或者两个以上物理或者虚拟网络设备。
-   要将以太网设备用作网桥的端口，必须在服务器中安装物理或者虚拟以太网设备。
-   要使用 team、bond 或 VLAN
    设备作为网桥的端口，您可以在创建桥接时创建这些设备，或者预先创建它们，如下所述：
    ::: itemizedlist
    -   [使用 nmcli
        命令配置网络团队](#configuring-network-teaming_configuring-and-managing-networking.html#configuring-a-network-team-using-nmcli-commands_configuring-network-teaming "使用 nmcli 命令配置网络团队"){.link}
    -   [使用 nmcli
        命令配置网络桥接](#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nmcli-commands_configuring-a-network-bridge "使用 nmcli 命令配置网络桥接"){.link}
    -   [使用 nmcli 命令配置 VLAN
        标记](#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nmcli-commands_configuring-vlan-tagging "使用 nmcli 命令配置 VLAN 标记"){.link}
    :::
:::
::: orderedlist
**流程**
1.  创建网桥接口：
    ``` literallayout
    # nmcli connection add type bridge con-name bridge0 ifname bridge0
    ```
    这个命令会创建一个名为 `bridge0`{.literal} 的桥接，输入：
2.  显示网络接口，并记录您要添加到网桥中的接口名称：
    ``` literallayout
    # nmcli device status
    DEVICE  TYPE      STATE         CONNECTION
    enp7s0  ethernet  disconnected  --
    enp8s0  ethernet  disconnected  --
    bond0   bond      connected     bond0
    bond1   bond      connected     bond1
    ...
    ```
    在本例中：
    ::: itemizedlist
    -   `enp7s0`{.literal} 和 `enp8s0`{.literal}
        没有配置。要将这些设备用作端口，请在下一步中添加连接配置集。
    -   `bond0`{.literal} 和 `bond1`{.literal}
        已有连接配置集。要将这些设备用作端口，请在下一步中修改其配置集。
    :::
3.  将接口分配给网桥。
    ::: orderedlist
    1.  如果没有配置您要分配给网桥的接口，为其创建新的连接配置集：
        ``` literallayout
        # nmcli connection add type ethernet slave-type bridge con-name bridge0-port1 ifname enp7s0 master bridge0
        # nmcli connection add type ethernet slave-type bridge con-name bridge0-port2 ifname enp8s0 master bridge0
        ```
        这些命令为 `enp7s0`{.literal} 和
        `enp8s0`{.literal}创建配置集，并将其添加到 `bridge0`{.literal}
        连接中。
    2.  要为网桥分配现有连接配置集，将这些连接的 `master`{.literal}
        参数设置为 `bridge0`{.literal}: