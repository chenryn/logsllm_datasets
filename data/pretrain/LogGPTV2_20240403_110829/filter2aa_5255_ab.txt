# 特殊宏处理页面底部：完成当前的盒子/侧边栏（如果处于盒子/侧边栏模式），然后调用标准页面底部宏。
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\" 如果这是盒子的第一页，绘制三边框；否则绘制两边但不绘制顶部。
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..

# DS - 开始显示
.de DS
.RS
.nf
.sp
..

# DE - 结束显示
.de DE
.fi
.RE
.sp
..

# SO - 标准选项列表开始
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..

# SE - 标准选项列表结束
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..

# OP - 单个选项的完整描述开始
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..

# CS - 代码摘录开始
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..

# CE - 代码摘录结束
.de CE
.fi
.RE
..

.de UL
\\$1\l'|0\(ul'\\$2
..

.TH package 3tcl 7.5 Tcl "Tcl Built-In Commands"
.BS
'\" 注意：不要修改下面的 .SH NAME 行！
.SH NAME
package \- 装载包和版本控制的设施
.SH "SYNOPSIS 概述"
.nf
\fBpackage forget ?\fIpackage package ...\fR?
\fBpackage ifneeded \fIpackage version\fR ?\fIscript\fR?
\fBpackage names\fR
\fBpackage present \fR?\fB\-exact\fR? \fIpackage \fR?\fIversion\fR?
\fBpackage provide \fIpackage \fR?\fIversion\fR?
\fBpackage require \fR?\fB\-exact\fR? \fIpackage \fR?\fIversion\fR?
\fBpackage unknown \fR?\fIcommand\fR?
\fBpackage vcompare \fIversion1 version2\fR
\fBpackage versions \fIpackage\fR
\fBpackage vsatisfies \fIversion1 version2\fR
.fi
.BE
.SH "DESCRIPTION 描述"
.PP
该命令维护一个简单的数据库，记录当前解释器使用的可用包及其加载方式。它支持每个包的多个版本，并根据应用需求加载正确的版本。此外，该命令还检测并报告版本冲突。通常，在普通Tcl脚本中只使用 \fBpackage require\fR 和 \fBpackage provide\fR 命令；其他命令主要用于系统脚本来维护包数据库。
.PP
\fBpackage\fR 命令的行为由其第一个参数决定。允许以下形式：
.TP
\fBpackage forget ?\fIpackage package ...\fR?
从当前解释器中删除关于每个指定包的所有信息，包括 \fBpackage ifneeded\fR 和 \fBpackage provide\fR 提供的信息。
.TP
\fBpackage ifneeded \fIpackage version\fR ?\fIscript\fR?
此命令通常出现在系统配置脚本中，用于设置包数据库。如果需要特定包的特定版本，它指示如何通过执行 \fIscript\fR 将该包添加到解释器中。脚本保存在数据库中，由后续的 \fBpackage require\fR 命令使用；通常，\fIscript\fR 会设置包中的命令自动加载（或直接调用 \fBload\fR 和/或 \fBsource\fR），然后调用 \fBpackage provide\fR 来指示包已存在。数据库中可以有单个包的多个版本信息。如果数据库已经包含 \fIpackage\fR 和 \fIversion\fR 的信息，则新 \fIscript\fR 替换现有脚本。如果省略了 \fIscript\fR 参数，返回包 \fIpackage\fR 的版本 \fIversion\fR 的当前脚本，如果没有对该 \fIpackage\fR 和 \fIversion\fR 调用 \fBpackage ifneeded\fR 命令则返回空字符串。
.TP
\fBpackage names\fR
返回当前解释器中所有包的名称，这些包提供了一个版本（通过 \fBpackage provide\fR）或有一个可用的 \fBpackage ifneeded\fR 脚本。列表中的元素顺序是任意的。
.TP
\fBpackage present \fR?\fB\-exact\fR? \fIpackage \fR?\fIversion\fR?
除了在包未加载时不尝试加载它之外，这个命令等同于 \fBpackage require\fR。
.TP
\fBpackage provide \fIpackage \fR?\fIversion\fR?
调用此命令以指示包 \fIpackage\fR 的版本 \fIversion\fR 现在已在当前解释器中存在。它通常作为 \fBifneeded\fR 脚本的一部分被调用一次，并在包最终加载时再次被包自身调用。如果先前的 \fBpackage provide\fR 命令已经提供了 \fIpackage\fR 的不同版本，则生成错误。如果省略了 \fIversion\fR 参数，则命令返回当前提供的包的版本号，如果在当前解释器中没有调用 \fBpackage provide\fR 命令则返回空字符串。
.TP
\fBpackage require \fR?\fB\-exact\fR? \fIpackage \fR?\fIversion\fR?
此命令通常被希望使用特定包的特定版本的Tcl脚本调用。参数指示所需包及其版本，确保将合适的版本加载到解释器中。如果命令成功执行，它返回加载的包的版本号；否则生成错误。如果同时指定了 \fB-exact\fR 开关和 \fIversion\fR 选项，则只接受给定版本。如果省略了 \fB-exact\fR 但指定了 \fIversion\fR，则主版本号与 \fIversion\fR 相同但晚于 \fIversion\fR 的版本也可以接受。如果省略了 \fB-exact\fR 和 \fIversion\fR 二者，则任何版本都可接受。如果已经提供了 \fIpackage\fR 的版本（通过调用 \fBpackage provide\fR 命令），则其版本号必须满足 \fB-exact\fR 和 \fIversion\fR 给出的条件并且命令立即返回。否则，命令查找以前的 \fBpackage ifneeded\fR 命令提供的信息数据库，看是否可以获得可接受的版本。如果有，则调用最可接受版本号的脚本；它必须做所有加载该包所需的工作，包括为该包调用 \fBpackage provide\fR。如果 \fBpackage ifneeded\fR 数据库不包含可接受的版本且为该解释器指定了 \fBpackage unknown\fR 命令，则调用该命令；当它完成后，Tcl 再次检查是否现在提供了该包或是否有为其提供的 \fBpackage ifneeded\fR 脚本。如果所有这些步骤都不能提供可接受的版本，则命令返回错误。
.TP
\fBpackage unknown \fR?\fIcommand\fR?
此命令提供一个“最后手段”命令，在 \fBpackage require\fR 期间，如果 \fBpackage ifneeded\fR 数据库中没有合适的包版本，则可以调用该命令。如果提供了 \fIcommand\fR 参数，它包含要调用的命令的第一部分，在 \fBpackage require\fR 命令期间，Tcl 会添加两个附加参数来指定所需的包名和版本。例如，如果 \fIcommand\fR 是 \fBfoo bar\fR 并且后来调用了命令 \fBpackage require test 2.4\fR，则 Tcl 将执行命令 \fBfoo bar test 2.4\fR 来加载该包。如果未给 \fBpackage require\fR 命令提供版本号，则传递给调用命令的版本参数为空字符串。如果调用 \fBpackage unknown\fR 命令但不带 \fIcommand\fR 参数，则返回当前的 \fBpackage unknown\fR 脚本，如果没有则返回空字符串。如果指定 \fIcommand\fR 为空字符串，则删除当前的 \fBpackage unknown\fR 脚本（如果存在）。
.TP
\fBpackage vcompare \fIversion1 version2\fR
比较由 \fIversion1\fR 和 \fIversion2\fR 给出的两个版本。如果 \fIversion1\fR 比 \fIversion2\fR 早则返回 -1，如果相同则返回 0，如果 \fIversion1\fR 比 \fIversion2\fR 晚则返回 1。
.TP
\fBpackage versions \fIpackage\fR
返回 \fIpackage\fR 的所有版本号，这些版本号通过 \fBpackage ifneeded\fR 命令提供了信息。
.TP
\fBpackage vsatisfies \fIversion1 version2\fR
如果为 \fIversion2\fR 编写的脚本无需更改即可为 \fIversion1\fR 工作，则返回 1（例如，\fIversion1\fR 大于等于 \fIversion2\fR 并且具有相同的主版本号），否则返回 0。
.SH "VERSION NUMBERS 版本号"
.PP
版本号由一个或多个用点号分隔的十进制数组成，例如 2 或 1.162 或 3.1.13.1。第一个数字称为主版本号。较大的数字对应较晚的版本，最左边的数字权重更大。例如，版本 2.1 比 1.3 晚，而版本 3.4.6 比 3.3.5 晚。遗漏的字段等同于零：版本 1.3 与版本 1.3.0 和 1.3.0.0 相同，因此比 1.3.1 和 1.3.0.2 早。假设较晚的版本向上兼容具有相同主版本号的早期版本。例如，为包的版本 2.3 编写的Tcl脚本应在版本 2.3.2、2.4 和 2.5.1 下无需更改即可工作。主版本号的变更表示不兼容的变更：如果代码是使用包的版本 2.1 编写的，则不能保证在版本 1.7.3 或版本 3.1 下无需更改即可工作。
.SH "PACKAGE INDICES 包索引"
.PP
推荐在Tcl中使用包的方式是在脚本中调用 \fBpackage require\fR 和 \fBpackage provide\fR 命令，并使用过程 \fBpkg_mkIndex\fR 来创建包索引文件。一旦这样做，将自动加载包以响应 \fBpackage require\fR 命令。详情请参见 \fBpkg_mkIndex\fR 的文档。
.SH "SEE ALSO 参见"
msgcat(n), packagens(n), pkgMkIndex(n)
.SH "KEYWORDS 关键字"
package, version
.SH "[中文版维护人]"
.B 寒蝉退士
.SH "[中文版最新更新]"
.B 2001/08/31
.SH "《中国 Linux 论坛 man 手册页翻译计划》:"
.BI http://cmpp.linuxforum.net