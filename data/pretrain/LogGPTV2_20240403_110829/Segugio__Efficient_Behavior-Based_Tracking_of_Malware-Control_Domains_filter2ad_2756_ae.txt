threshold so that Notos could detect the blacklisted domains
(i.e., produce the true positives), Notos classiﬁed as malicious
13,432 of the whitelisted domains that were “visible” in the
ISP1 trafﬁc on day ttest (see Figure 12a). Among these, 1,826
domain names (or 13.6% of the FPs) were related to adult
content, and probably hosted in what we could consider as
“dirty” networks. For other 234 domain names (1.7% of the
FPs), we have evidence that they were queried at least once
by malware samples executed in a sandboxed environment. We
know that malware samples often query also popular benign
domains. However, a domain queried by malware may be
considered as “suspicious”, and that is probably why Notos
assigns them a low reputation, though it does not necessarily
mean that these domains are malware-related. Another 2,011
domain names (or 15% of the FPs) resolved to IP addresses
that were contacted directly by malware samples in the past.
Overall 7,341 domains (54.7% of FPs) resolved into a /24
network which hosted IPs contacted by at least one malware
sample in the past. Finally, we are left with 2,020 domains (or
15% of the FPs) for which no evidence is available to infer
412412
why Notos classiﬁed them as malicious.
To summarize, this means that potentially the actual num-
ber of “reputation-based” false positives could be less than
15% of the 13,432 domains that Notos classiﬁed as malicious,
which correspond to 2.94% of all whitelisted test domains.
In other words, even considering these ﬁltered results, Notos
would still generate 2.94% FPs. Therefore, overall our exper-
iments show that, on the task of discovering new malware-
control domains, Segugio clearly outperforms Notos.
TABLE IV: Break-down of Notos’s FPs
All Notos’s FPs
Explicit evidence
Suspicious content
Domains queried by malware
Domains with IPs previously contacted by malware
Implicit evidence
Domain names in /24 networks used by malware
No evidence
Potential reputation FPs
13,432
1,826 (13.6%)
234 (1.7%)
2,011 (15%)
7,341 (54.7%)
2,020 (15%)
VI. LIMITATIONS AND DISCUSSION
Segugio requires preliminary ground truth to label a set of
“seed” known malware and benign nodes. Fortunately, some
level of ground truth is often openly available, like in the case
of public C&C blacklists and popular domain whitelists, or can
be obtained for a fee from current security providers (in the
case of commercial blacklists). In Section IV-E we show that
even using only ground truth collected from public sources,
Segugio can still detect new malware-control domains. Notice
also that while the ground truth may contain some level of
noise, it is possible to apply some ﬁltering steps to reduce its
impact (see discussion in Section III, for example).
Because Segugio focuses on detecting “malware-only” do-
mains, an attacker may attempt to evade Segugio by somehow
operating a malware-control channel under a legitimate and
popular domain name. For example, the malware owner may
build a C&C channel within some social network proﬁle or by
posting apparently legitimate blog comments on a popular blog
site. While this is possible, popular sites are often patrolled
for security ﬂaws, which exposes the C&C channel
to a
potentially more prompt takedown. This is one of the reasons
why attackers often prefer to point their C&C domains to
servers within “bullet proof” hosting providers.
A possible limitation of Segugio is that a malware-control
domain that is never queried by any of the previously known
malware-infected machines is more difﬁcult to detect. How-
ever,
in Section IV-C we showed that by combining the
machine behavior features (deﬁned in Section II-A3) to the
domain activity and IP abuse features, Segugio is still able to
detect many such new domains.
Another possible challenge is represented by networks that
have a high DHCP churn, if source IP addresses are used
as the machine identiﬁers. High DHCP churn may cause
some inﬂation in the number of machines that query a given
(potentially malware-related) domain. However, we should
consider that Segugio can independently be deployed by each
ISP. Therefore, for deployments similar to ours, the ISP’s
network administrators may be able to correlate the DHCP
logs with the DNS trafﬁc, to obtain unique machine identiﬁers
that can be used for building the machine-domain graphs.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:49:35 UTC from IEEE Xplore.  Restrictions apply. 
Segugio’s detection reports are generated after a given
observation time window (one day, in our experiments). There-
fore, malware operators may try to change their malware C&C
domains more frequently than the observation window, so that
if the discovered domains are deployed into a blacklist, they
may be of less help for enumerating the infected machines in
a network. However, it is worth noting that Segugio can detect
both malware-control domains and the infected machines that
query them at the same time. Therefore, infections can still be
enumerated, thus allowing network administrators to track and
remediate the compromised machines.
Some ISP networks may host clients that run security tools
that attempt to continuously “probe” a large list of malware-
related domains, for example to actively keep track of their ac-
tivities (e.g., whether they are locally blacklisted, what is their
list of resolved IPs, their name server names, etc.). Such clients
may introduce noise into our bipartite machine-domain graph,
potentially degrading Segugio’s accuracy and performance.
During our experiments, we used a set of heuristics to verify
that our ﬁltered graphs (obtained after pruning, as explained in
Section II) did not seem to contain such “anomalous” clients.
VII. RELATED WORK
In Section I we have discussed the main differences with
recent previous work on detecting malicious domains, such
as [3]–[6]. In this section, we discuss the differences between
Segugio and other related works.
Botnet/Malware detection: Pleiades [11] is a recently pro-
posed system that aims to detect machines infected with
malware that makes use of domain generation algorithms
(DGAs). While Pleiades monitors the DNS trafﬁc between
the network users and their local DNS resolver, as we do, it
focuses on monitoring non-existent (NX) domains, which are
a side-effect of DGA-based malware. Our work is different,
because we do not focus on DGA-based malware. In fact,
Segugio only monitors “active” domain names, and aims to
detect malware-control domains in general, rather than being
limited to detecting only DGA-generated domains.
Studies
such as
[12]–[16]
focus on detecting bot-
compromised machines. For example, BotSniffer [13] and Bot-
Miner [14] look for similar network behavior across network
hosts. The intuitions is that compromised hosts belonging to
the same botnet share common C&C communication patterns.
These systems typically require to monitor all network trafﬁc
(possibly at different granularities) and are therefore unlikely
to scale well to very large ISP networks. Our work is different,
because we focus on a more lightweight approach to detecting
malware-control domains by monitoring DNS trafﬁc in large
ISP networks.
A large body of work has focused on detecting malware
ﬁles. One work related to ours is Polonium [17], which aims
to detect malware ﬁles using graphical models. Our work
is different from Polonium in many respects. We focus on
detecting new malware-control domains, rather than malware
ﬁles. In addition, Polonium employs a very expensive loopy
belief propagation algorithm on a graph with no annotations.
Furthermore, through pilot experiments using GraphLab [8]
we found that the inference approach used in Polonium would
413413
result in a signiﬁcantly lower accuracy for Segugio with a huge
negative impact on performance.
Malware C&C modeling and tracking. Wurzinger et al. [18]
propose to ﬁrst detect malicious network activities (e.g., scan-
ning, spamming, etc.) generated by malware executed in a con-
trolled environment (see [19]), and then to analyze the network
trafﬁc “backwards” to ﬁnd what communication could have
carried the command that initiated the malicious activities.
Jackstraws [20], executes malware in an instrumented sandbox
to generate “behavior graphs” for system calls related to
network communications. These system-level behavior graphs
are then compared to C&C graph templates to ﬁnd new C&C
communications. Our work is different, because we don’t
rely on performing detailed malware dynamic analysis in a
controlled environment. Rather, we focus on detecting new
malware-control domains via passive DNS trafﬁc analysis in
live ISP networks.
In [21], Sato et al. performed a preliminary study of
unknown domains that frequently co-occur with DNS queries
to known C&C domains. While the co-occurrence used in [21]
has some resemblance to Segugio’s machine behavior features,
our work is different from [21]. For example the system
presented in [21] suffers from a large number of false positives,
even at a fairly low true positive rate. Furthermore, unlike
Segugio, [21] is not able to detect new C&C domains that
have low or no co-occurrence with known malicious domains.
Importantly, [21] has been evaluated only at a very small scale.
In contracts, we performed a thorough evaluation of Segugio
in many different settings, including cross-validation, cross-
day and cross-network tests, feature analysis, performance
evaluation, and direct comparison with Notos [3]. All our
experiments were conducted at large scale, via a deployment
in multiple real-world ISP networks hosting millions of users.
Signature-based C&C detection. Researchers have recently
proposed a number of studies that focus on a signature-based
approach to detect malware C&C communications, and the re-
lated malware C&C domains. For example, Perdisci et al. [22]
proposed a system for clustering malware that request similar
sets of URLs, and to extract token-subsequences signatures
that may be used to detect infected hosts. ExecScent [23] is a
new signature-based C&C detection system that builds control
protocol templates (CPT) of known C&C communications,
which are later used to detect new C&C domains. Another
recent signature generation system, called FIRMA [24], can be
used to detect C&C communications and the related malware-
control domains.
These signature-based approaches typically require access
to all TCP trafﬁc crossing a network, to enable the detection
of C&C communications. Instead, our system is based on a
much more lightweight monitoring of DNS trafﬁc only.
Other related work. Karagiannis et al. consider who is
talking to whom to discover communities among hosts for ﬂow
classiﬁcation purposes [25]. In a related study [26], Xu et al.
use a bipartite graph of machine-to-machine communications.
They use spectral clustering to identify groups of hosts with
similar network behaviors. Coskun et al. [27] use a graph-
based approach to discover peer nodes in peer-to-peer botnets.
While we also leverage bipartite graphs, our work is very
different from [25]–[27] in both the goals and approach.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:49:35 UTC from IEEE Xplore.  Restrictions apply. 
Felegyhazi et al. [28] take a proactive blacklisting approach
to detect likely new malicious domains by leveraging domain
registration information. Our work is different in that Segugio
mainly focuses on detecting new malware-control domains
based on who is querying what. While we use information
such as domain activity, Segugio does not rely on domain
registration records.
VIII. CONCLUSION
In this paper, we presented Segugio, a novel defense system
that is able of efﬁciently discover new malware-control domain
names by passively monitoring the DNS trafﬁc of large ISP
networks.
We deployed Segugio in two large ISP networks, and we
showed that Segugio can achieve a true positive rate above
94% at less than 0.1% false positives. In addition, we showed
that Segugio can detect control domains related to previously
unseen malware families, and that it outperforms Notos [3], a
recently proposed domain reputation systems.
ACKNOWLEDGMENTS
This material is based in part upon work supported by the
National Science Foundation, under grant No. CNS-1149051,
and the Department of Homeland Security, under contract No.
N66001-12-C-0133. Any opinions, ﬁndings, and conclusions
or recommendations expressed in this material are those of the
authors and do not necessarily reﬂect the views of the National
Science Foundation or the Department of Homeland Security.
REFERENCES
[1] Symantec, “India sees 280 percent increase in bot infections,” 2013,
http://www.symantec.com/en/in/about/news/release/article.jsp?prid=
20130428 01.
[2] ——, “2013 internet security threat report, volume 18.”
[3] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and N. Feamster,
“Building a dynamic reputation system for dns,” in Proceedings of the
19th USENIX conference on Security, ser. USENIX Security’10, 2010.
[4] L. Bilge, E. Kirda, C. Kruegel, and M. Balduzzi, “Exposure: Finding
malicious domains using passive dns analysis,” in NDSS. The Internet
Society, 2011.
[5] M. Antonakakis, R. Perdisci, W. Lee, N. Vasiloglou, II, and D. Dagon,
“Detecting malware domains at the upper dns hierarchy,” in Proceedings
of the 20th USENIX conference on Security, ser. SEC’11, 2011.
[6] P. Manadhata, S. Yadav, P. Rao, and W. Horne, “Detecting malicious
domains via graph inference,” in Computer Security - ESORICS 2014,
ser. Lecture Notes in Computer Science, M. Kutylowski and J. Vaidya,
Eds.
Springer International Publishing, 2014, vol. 8712, pp. 1–18.
[Online]. Available: http://dx.doi.org/10.1007/978-3-319-11203-9 1
[7] D. Koller and N. Friedman, Probabilistic graphical models: principles
and techniques. The MIT Press, 2009.
[8] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson, C. Guestrin, and J. M.
Hellerstein, “Graphlab: A new parallel framework for machine learn-
ing,” in Conference on Uncertainty in Artiﬁcial Intelligence (UAI),
Catalina Island, California, July 2010.
[9] L. Breiman, “Random forests,” Machine learning, vol. 45, no. 1, pp.
5–32, 2001.
[10] R.-E. Fan, K.-W. Chang, C.-J. Hsieh, X.-R. Wang, and C.-J. Lin,
“Liblinear: A library for large linear classiﬁcation,” The Journal of
Machine Learning Research, vol. 9, pp. 1871–1874, 2008.
[11] M. Antonakakis, R. Perdisci, Y. Nadji, N. Vasiloglou, S. Abu-Nimeh,
W. Lee, and D. Dagon, “From throw-away trafﬁc to bots: detecting
the rise of dga-based malware,” in Proceedings of the 21st USENIX
conference on Security symposium, ser. Security’12. Berkeley, CA,
USA: USENIX Association, 2012, pp. 24–24. [Online]. Available:
http://dl.acm.org/citation.cfm?id=2362793.2362817
[12] G. Gu, P. Porras, V. Yegneswaran, M. Fong,
and W. Lee,
“Bothunter: detecting malware infection through ids-driven dialog
correlation,” in Proceedings of 16th USENIX Security Symposium
on USENIX Security Symposium, ser. SS’07. Berkeley, CA, USA:
USENIX Association, 2007, pp. 12:1–12:16.
[Online]. Available:
http://dl.acm.org/citation.cfm?id=1362903.1362915
[13] G. Gu, J. Zhang, and W. Lee, “BotSniffer: Detecting botnet command
and control channels in network trafﬁc,” in Proceedings of the 15th An-
nual Network and Distributed System Security Symposium (NDSS’08),
February 2008.
[14] G. Gu, R. Perdisci, J. Zhang, and W. Lee, “Botminer: clustering
analysis of network trafﬁc for protocol- and structure-independent
botnet detection,” in Proceedings of the 17th conference on Security
symposium, ser. SS’08. Berkeley, CA, USA: USENIX Association,
2008, pp. 139–154. [Online]. Available: http://dl.acm.org/citation.cfm?
id=1496711.1496721
[15] T.-F. Yen and M. K. Reiter, “Are your hosts trading or plotting? telling
p2p ﬁle-sharing and bots apart,” in Proceedings of the 2010 IEEE
30th International Conference on Distributed Computing Systems, ser.
ICDCS ’10, 2010.
J. Zhang, R. Perdisci, W. Lee, U. Sarfraz, and X. Luo, “Detecting
stealthy p2p botnets using statistical trafﬁc ﬁngerprints,” in Proceedings
of the 2011 IEEE/IFIP 41st International Conference on Dependable
Systems&Networks, ser. DSN ’11, 2011.
[16]
[17] D. Chau, C. Nachenberg, J. Willhelm, A. Wright, and C. Faloutsos,
“Polonium: Tera-scale graph mining and inference for malware detec-
tion,” Proccedings of SIAM International Conference on Data Mining
(SDM), pp. 131–142, 2011.
[18] P. Wurzinger, L. Bilge, T. Holz, J. Goebel, C. Kruegel, and E. Kirda,
“Automatically generating models for botnet detection,” in Proceedings
of the 14th European conference on Research in computer security, ser.
ESORICS’09, 2009.
[19] M. Egele, T. Scholte, E. Kirda, and C. Kruegel, “A survey on
automated dynamic malware-analysis techniques and tools,” ACM
Comput. Surv., vol. 44, no. 2, pp. 6:1–6:42, Mar. 2008. [Online].
Available: http://doi.acm.org/10.1145/2089125.2089126
[20] G. Jacob, R. Hund, C. Kruegel, and T. Holz, “Jackstraws: picking
command and control connections from bot trafﬁc,” in Proceedings of
the 20th USENIX conference on Security, Berkeley, CA, USA, 2011.
[21] K. Sato, K. Ishibashi, T. Toyono, and N. Miyake, “Extending black
domain name list by using co-occurrence relation between dns queries,”
in LEET, 2010.
[22] R. Perdisci, W. Lee, and N. Feamster, “Behavioral clustering of
http-based malware and signature generation using malicious network
traces,” in Proceedings of the 7th USENIX conference on Networked
systems design and implementation, ser. NSDI’10, 2010.
[23] T. Nelms, R. Perdisci, and M. Ahamad, “Execscent: mining for new c&c
domains in live networks with adaptive control protocol templates,” in
Proceedings of the 22nd USENIX conference on Security. USENIX
Association, 2013, pp. 589–604.
[24] M. Z. Raﬁque and J. Caballero, “FIRMA: Malware Clustering and
Network Signature Generation with Mixed Network Behaviors,” in
Proceedings of
the 16th International Symposium on Research in
Attacks, Intrusions and Defenses, St. Lucia, October 2013.
[25] T. Karagiannis, K. Papagiannaki, and M. Faloutsos, “Blinc: Multilevel
trafﬁc classiﬁcation in the dark,” in Proceedings of
the 2005
Conference on Applications, Technologies, Architectures, and Protocols
for Computer Communications, ser. SIGCOMM ’05. New York,
NY, USA: ACM, 2005, pp. 229–240.
[Online]. Available: http:
//doi.acm.org/10.1145/1080091.1080119
[26] K. Xu, F. Wang, and L. Gu, “Network-aware behavior clustering of
internet end hosts,” in in Proceedings of IEEE INFOCOM, 2011.
[27] B. Coskun, S. Dietrich, and N. Memon, “Friends of an enemy: identi-
fying local members of peer-to-peer botnets using mutual contacts,”
in Proceedings of the 26th Annual Computer Security Applications
Conference. ACM, 2010, pp. 131–140.
[28] M. Felegyhazi, C. Kreibich, and V. Paxson, “On the potential of
proactive domain blacklisting,” in In Proceedings of the Third USENIX
Workshop on Large-scale Exploits and Emergent Threats (LEET), 2010.
414414
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:49:35 UTC from IEEE Xplore.  Restrictions apply.