nal from frame to frame. In fact, with the aid of temper-
ature recording equipment we have been able to correlate
aberrations in the ﬁlter output to variations in the ambient
temperature of the lab. Furthermore, due to the non-ideal
properties of the Ethernet cabling—parasitic resistance, ca-
pacitance, and inductance—even the act of measuring the
signal on a different portion of the Ethernet cabling, or using
a different cable altogether, may affect the measured signal.
This affect, however, gives rise to the interesting possibility
of detecting passive taps on the line, which often change the
effective material parameters of the medium.
To take into account the inherent variability of every de-
vice’s output, as well as external factors such as temperature
and system load variations, a signal proﬁle must be created
by using a collection of signals taken over a period of time.
The ﬁlter created by the original signal is applied to this col-
lection of signals and the response to each recorded (Figure
3). We have found that only 25 sequentially sampled signals
are necessary to adequately determine the unique signaling
behavior of a device.
Figure 3. Filter output for 25 frames of an Eth-
ernet device.
By examining the ﬁlter response for a device over a num-
ber of hours, we have determined that a device’s synchro-
nization signal is under continuous change. In many cases,
we have discovered that slight variations in the amplitude of
the signals are the cause of this variation. A subtle change
in signal shape, over a period of hours, also changes the
ﬁlter response. By using the average of several synchro-
nization signals for the reference signal we have been able
to decrease the variation of the ﬁlter response; however, this
often leads to a corresponding increase in the FAR.
In order to account for these changes in signal character-
istics over time, we have introduced a tolerance, δ, for the
maximum amount of deviation in ﬁlter response acceptable
before a signal is labeled as too different from the original.
In order to take into account past behavior, we require that
the next n-frames resemble the previous n-frames, ±δ. In
this way a device may be adaptively tracked as its signal
changes over time. Mathematically, this is stated by deﬁn-
ing two thresholds for the maximum amount of positive,
th+, and negative, th−, deviation in ﬁlter output allowed
over the previous n-frames:
th+(µi ··· µi+n−1) = max(µi−1 ··· µi−n)(1 + δ)
th−(µi ··· µi+n−1) = min(µi−1 ··· µi−n)(1 − δ)
(7)
where µi represents the ﬁlter output of the ith frame. We
have found that setting n equal to the number of samples
used to learn the behavior of a device proves adequate for
tracking the signal over time.
During our experiments the ﬁlter output for the ﬁrst 25
frames of a device were used as training data, whereby an
appropriate value for δ would be determined by stipulating
that zero false-rejects would occur for the next 25 ﬁlter out-
puts. A minimum value of .001 for δ was imposed, and in-
cremented by .001 until the aforementioned condition was
met. After observing a device’s behavior over time the value
of δ can be adjusted to better ﬁt the unique behavior of the
card. We have also found that large, spurious, deviations
do occur for all Ethernet devices, so a perfect acceptance
rate cannot be obtained—unless one is willing to allow a
certain number of signiﬁcant deviations every n-frames, or
set δ unreasonably high. As with any system with statistical
variation, a balance must be found for δ that results in an
acceptable number of false-accepts and false-rejects.
3.5. Variations on the matched ﬁlter method
To further improve the efﬁcacy of our method, we have
devised several variations on the procedure outlined above
to improve our ability to discriminate between highly sim-
ilar devices. Each of these techniques works to amplify
slight differences in signal characteristics that are too sub-
tle to be distinguished by the original method. The impe-
tus of this work was based upon the observation that as
the matched ﬁlter operation is a sum of products, large-
scale similarities between signals can often overshadow the
small-scale differences useful for signal proﬁling.
3.5.1. An ensemble of ﬁlters. For a given device, mul-
tiple matched ﬁlters may be created by selecting a refer-
ence signal for each portion of the preamble identiﬁed in
Section 3.2. Matching ﬁlters to the transient, steady-state,
and source MAC address sections of the frame gives a full
characterization of the broad traits of a signal. An ensem-
ble of ﬁlters is utilized, instead of a single large ﬁlter, so
that strong similarities in certain regions of the signal can-
not overshadow smaller differences in others.
Selecting multiple reference signals for each section of
the signal may also highlight slight differences; e.g., each
transition, or pair of transitions, of the synchronization sig-
nal could be matched to different ﬁlters. In such a way the
granularity of ﬁltering could be arbitrarily increased to take
into account the smallest of differences.
3.5.2. Bandpass ﬁltering. By analyzing the spectrum of
signals from a multitude of similar devices, we have found
that distinguishable differences exist in the frequencies be-
yond the fundamental frequency of the synchronization sig-
nal; however, as the fundamental frequency dominates other
frequency components, in terms of relative power, these dif-
ferences are often obscured. Applying a bandpass ﬁlter to
the reference signal and signal samples minimizes the inﬂu-
ence of the fundamental frequency on the ﬁlter response by
removing that portion of the signal altogether.
Through experimentation, by use of several bandpass ﬁl-
ters with increments of 1MHz in bandwidth, we have de-
termined that, for some devices, the 13-17MHz frequency
range exhibits the greatest variation. As the power levels of
frequency components beyond 17MHz approach that of the
noise level, we have found frequencies higher than 17MHz
ill-suited for discriminatory purposes.
3.5.3. Normalization. Normalizing both the reference sig-
nal and signal samples, according to the Euclidean norm,
desensitizes the matched ﬁlter to similarities in shape, and
increases its sensitivity to variations in amplitude. This
proves advantageous for discriminating between signals
where the differences exist primarily in their relative ampli-
tudes. However, if the amplitudes of two signals are closely
matched, while their shapes are not, this form of normal-
ization will decrease our ability to distinguish between the
two.
3.5.4. Trimming. The concept of time-domain trimming
was developed in order to minimize the affect of the sig-
nal amplitude on ﬁlter response. By eliminating amplitude
dominance, variations in the shape of the signal are made
apparent. Analogous to the frequency domain trimming
used in bandpass ﬁltering, time-domain trimming removes
the portions of a signal that tend to overshadow all others
by zeroing the signal amplitude for values greater than a
predetermined upper bound. By adding a lower bound, and
varying the height of each boundary accordingly, a window
is created that allows for any portion of the signal to be scru-
tinized by its shape alone.
For example, by only setting an upper bound, the zero-
crossings—where the signal crosses the horizontal axis—of
a signal may be examined in order to ensure that the width
of a signal matches that of the ﬁlter. We have found that
time-domain trimming is most effective when only the sig-
nal samples are trimmed.
4. Experimental results
The equipment and methods used to acquire the Ether-
net signals for analysis are given. Methods for calculating
the FAR and FRR are discussed. Finally, the results of the
matched ﬁlter approach to signal proﬁling are given.
4.1. Experimental setup
Our current testbed consists of two PCs running GNU
Linux; one to act as the Test PC (TPC), which houses the
Ethernet card we wish to ﬁngerprint, while the other, the
Data Acquisition PC (DAQPC), makes use of a Tektronix
3052 digital sampling oscilloscope, interfaced via an IEEE
488 card and Labview-6, connected to a passively tapped
internal Ethernet card, to capture Ethernet frames sent to it
over a crossover cable by the TPC.
In order to generate trafﬁc for the DAQPC to capture, the
TPC is instructed to ping the DAQPC. During a typical data
acquisition period the TPC will ping the DAQPC 10,000
times. To ensure that only trafﬁc from the TPC is captured,
only the receiving pins of the DAQPC’s Ethernet card have
been connected to the oscilloscope. In this way we are able
to allow the DAQPC to respond to the TPC’s pings, and
ensure that the data acquisition process hasn’t caused any
packet loss.
Upon detection of an Ethernet frame the oscilloscope be-
gins to sample the signal at a rate of 1Gigasamples/s. The
signal is sampled 10,000 times, for a total of 10 micro-
seconds, with 8-bits of resolution. The data collected during
sampling is sent to the DAQPC via the IEEE 448 interface,
where a custom Labview routine monitoring the interface
accepts the data and stores the values in a vector we call a
record, which is subsequently written to the disc. Each cap-
tured frame is stored in its own record; all of the records col-
lected for a device during a session encompass its dataset.
4.2. Filter application
Having acquired several thousand signal samples from
each device over a number of hours, we then create a ﬁl-
ter for each of the devices using the procedure outlined in
Section 3.3. The reference signal for each device has a pe-
riod of 4,176 sample points, and is selected from the ﬁrst
valid record of a device’s dataset. Following this, the ref-
erence signal is convolved with each record of its dataset
using an FFT-based convolution algorithm. Convolving the
reference signal with each record of its dataset performs the
matched ﬁlter operation for all possible time-shifts; conse-
quently, an output is created that is equal in length to that of
the length of the record. This operation is necessary to de-
termine the time of optimal alignment, t0, between the ﬁlter
and the record, which results in the maximum ﬁlter output,
as per (6).
Thus, the ﬁlter output at the point of maximum align-
ment corresponds to the maximum of the convolution op-
eration. Letting i(t) represent the reference signal for the
ith device, and ηj
i (t) the jth record of its dataset, the ﬁlter
output, µj
i (t0), is then:
i (t0) = max(i(t) ? ηj
µj
i (t)) for j = 1··· n
(8)
where n is the number of records in the device’s dataset
(Figure 4). This procedure is followed for each device in
order to determine the ﬁlter response of each record in its
dataset.
Having determined the ﬁlter output for each record of its
own dataset, we then apply the ﬁlter to each record of the
other device’s datasets in order to determine the alikeness
of their respective signals (Figure 5). Letting γj
i,k(t0) rep-
resent the ﬁlter output using the ith device’s ﬁlter applied to
the kth device’s dataset:
γj
i,k(t0) = max(i(t) ? ηj
k(t)) for j = 1··· n
(9)
As can be seen from Figure 5, the respective ﬁlter out-
puts of Device i and Device k do not overlap. Following the
explanation set forth in Section 3.4., we are therefore able
to discriminate between Device i and Device k.
4.3. Acceptance testing
Following the procedure set forth in Section 3.4., a value
for δ can be determined that is expected to provide an ac-
ceptable FRR (less than .009 in our experiments). Using the
response of the ﬁlter for the ith device to the 26th through
50th records of its own dataset, µ26···50
(t0), as training data
in conjunction with (7), thresholds can be established for
the next 25 ﬁlter outputs. If the ﬁlter response for one of
the next 25 records lies outside of the bounds set by these
thresholds then its corresponding record is marked as re-
jected, and is not used in determining the thresholds for the
next 25 outputs. This procedure is followed for the remain-
der of the ﬁlter responses in the device’s dataset. The FRR
is then calculated using:
i
F RR = nr
n − 25
(10)
Figure 4. Filter output for 10,000 records of an Ethernet device.
Figure 5. Filter output for 10,000 records of two different Ethernet devices using the same ﬁlter.
where nr is the number of rejected records and n is the num-
ber of total records.
4.4. Intrusion testing
Whereas it is possible to determine the FRR by sequen-
tially applying (7) to each of the next 25 ﬁlter outputs, the
FAR may not be determined in such a sequential manner,
as it cannot be known where to begin comparing the output
of the ith device’s ﬁlter applied to the kth device’s dataset.
Simply comparing the distributions of the ﬁlter output for
the two cases would also produce an inaccurate FAR, as
the ﬁlter output for each device is changing in time, and
it would not be unreasonable to assume that at a particular
point in time one device will have the same ﬁlter response
as another device at a different point in time (Figure 6).
Thus, to calculate an accurate FAR, we assume that the
ﬁlter response for each record of the kth device’s dataset us-
i,k(t0).
ing the ith device’s ﬁlter, γ1···n
i,k (t0), where n is the number
of records in a dataset, is equally likely. Based upon this
assumption, random numbers between one and n are gener-
ated to serve as an index used in deciding the starting value
of j, for the ﬁlter response γj
Using the ﬁrst value of the index for j, the next 24 ﬁl-
ter responses, γj···j+24
(t0), are compared to the threshold
values calculated for µ1···25
(t0) to check whether or not a
i
record from γj···j+24
(t0) would be accepted as a record
from µ1···25
(t0). This procedure is followed for each 25
record segment of µ26···n
(t0), where every 25 records a new
value of j is chosen by taking the next value in the index.
The total number of index values generated should then be
n divided by 25. The FAR is then calculated using:
i
i,k
i,k
i
F AR = na
n
(11)
where na is the number of accepted records and n is the
Figure 6. Filter output for 10,000 records of two different Ethernet devices using the same ﬁlter,
where at different times the ﬁlter output is the same.
number of total records.
This procedure is repeated 1,000 times, with new index
values chosen for each iteration. The FAR for each iteration
are then averaged to produce the total FAR. Repeated test-
ing using this method has provided consistent values for the
FAR.
4.5. Results
The results of the matched ﬁlter methodology for signal
proﬁling are shown for 16 devices, consisting of a combina-
tion of three different models, via a confusion matrix (Table
1), which indicates the FRR and the FAR. The FRR may
be deduced by subtracting the diagonal elements from one,
while the FAR is simply the off-diagonal elements. Per-
fect detection/rejection would result in a matrix where the
diagonal is one and off-diagonal elements are zero. The
FRR and FAR are reported for 10,000 records per dataset.
The naming convention mXcY is utilized to denote card Y
of model X.
As can be seen from the table, the FRR is sufﬁciently
low (less than 1%), for different model cards we have near
perfect detection, while some cards of the same model are
difﬁcult to differentiate. By experimenting with different
minimum and incremental values used in determining δ, we
have found that minimum and incremental values of .001 al-
low for too much variation in ﬁlter output. In fact, a slightly
lower value of δ for each card will result in a negligibly
higher false-reject rate; completely eliminate nearly all col-
lisions which occur with frequency less than 20%; decrease
collisions which occur with frequency less than 80% by up
to 30%; but have no affect on collisions which occur with
frequency greater than 80%. In addition, by utilizing the
techniques discussed in Section 3.5., we have been able to
substantially reduce or eliminate most collisions. In partic-
ular, bandpass ﬁltering proved particularly effective in dif-
ferentiating m6c3 from m5c3/7. Through the use of both
bandpass ﬁlters and an ensemble of ﬁlters, we were also
able to eliminate almost all of the intra-model collisions of
m5cY and m6cY, respectively. Time-domain trimming and
an ensemble of ﬁlters were also employed to dramatically
reduce the number of collisions in m4cY, although perfect
discrimination was not possible.
5. Future work
Several important issues regarding the variability of a de-
vice’s analog signal require additional consideration. For
example, under what conditions does the signal vary, how
does device aging affect signaling characteristics, and how
can a signal from a system that has lost and re-established a
connection with the network be tracked? These questions,
amongst others, provide a rich backdrop for future research.
An immediate area of consideration is extending this
work to include different networking systems. Initial work
has already begun on attempting to proﬁle 100Mb Ether-
net signals. Preliminary results indicate that the aforemen-
tioned techniques will be adequate for discriminating be-
tween different model devices; however, a deeper investi-
gation into the signaling characteristics of 100Mb Ethernet
devices may be required in order to provide accurate re-
sults for devices of the same model. Work will also con-
tinue in the 10Mb realm, as we try to create signal proﬁles
for as many devices as possible. Other work includes ana-
lyzing wireless signals from 802.11b, sensor networks, and
RFID systems. Currently, we are attempting to optimize
Table 1. Confusion matrix of 16 devices with 10,000 records per dataset
Expected Card
m4c1
m4c2
m4c3
m5c1
m5c2
m5c3
m5c4
m5c5
m5c6
m5c7
m5c8
m5c9
m5c10
m6c1
m6c2
m6c3
c1
.9961
0
0
0
0
0
0
0
0
0
0
0
0
0