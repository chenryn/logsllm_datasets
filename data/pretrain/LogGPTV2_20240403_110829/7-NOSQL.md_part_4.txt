\[root@nginx html\]# vim lkredis.php
\connect(\'192.168.4.51\',6351);
\$redis -\>auth(\"123456\");
\$redis-\>set(\"redistest\",\"666666\");
echo \$redis-\>get(\"redistest\");
?\>
\[root@nginx html\]# php lkredis.php //命令行测试
666666
火狐浏览器测试，如图-1所示：
图-1
在51上面查看，有数据存入
\[root@redis1 lnmp\]# redis-cli -h 192.168.4.51 -p 6351 -a 123456
192.168.4.51:6351\> ping
PONG
192.168.4.51:6351\> keys \*
1\) \"redistest\"
192.168.4.51:6351\> get redistest
\"666666\"
192.168.4.51:6351\>
# NOSQL02\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
# 一 redis集群
## 准备环境-拓扑结构
客户端:192.168.4.50
sql51 RedisA 192.168.4.51 6351 同时兼任:管理主机
sql52 RedisB 192.168.4.52 6352
sql53 RedisC 192.168.4.53 6353
sql54 RedisD 192.168.4.54 6354
sql55 RedisE 192.168.4.55 6355
sql56 RedisF 192.168.4.56 6356
/etc/init.d/redis_6379 #redis启动脚本
/etc/redis/6379.conf #redis配置文件
192.168.4.51:6351\>flashall #清空所有数据
192.168.4.51:6351\>save #保存
# 二 创建redis集群
## 2.1修改redis配置文件
**(以51为例,52-55同样)**
\[root@sql51 \~\]# /etc/init.d/redis_6379 stop
\[root@sql51 \~\]# ls /var/lib/redis/6379/
Dump.rdb #redis数据文件,要删掉,不删掉无法创建集群
\[root@sql51 \~\]# rm -rf /var/lib/redis/6379/\*
\[root@sql51 \~\]# vim /etc/redis/6379.conf
70 bind 192.168.4.51 #不用回环地址
93 port 6351 #修改端口
137 daemonize yes #守护进程方式运行
501 #requirepass 123456 #501 注释掉密码
815 cluster-enabled yes #815 行开启集群
823 cluster-config-file nodes-6351.conf #指定集群信息文件
829 cluster-node-timeout 5000 #829当前主机与其他主机通讯超时时间5s
**修改redis脚本文件**
\[root@sql51 \~\]# vim /etc/init.d/redis_6379
43 \$CLIEXEC -h 192.168.4.51 -p 6351 shutdown
\[root@sql51 \~\]# /etc/init.d/redis_6379 start #检测启动正常
Starting Redis server\...
\[root@sql51 \~\]# netstat -nultp \| grep redis
tcp 0 0 192.168.4.51:6351 0.0.0.0:\* LISTEN 5249/redis-server 1
tcp 0 0 192.168.4.51:16351 0.0.0.0:\* LISTEN 5249/redis-server 1
\[root@sql51 \~\]# ls /var/lib/redis/6379/
dump.rdb nodes-6351.conf
\[root@sql52 \~\]# /etc/init.d/redis_6379 stop #检测关闭正常
Stopping \...
Waiting for Redis to shutdown \...
Redis stopped
\[root@sql52 \~\]# /etc/init.d/redis_6379 start
Starting Redis server\...
\[root@sql52 \~\]# vim /etc/init.d/redis_6379
\[root@sql52 \~\]# redis-cli -h 192.168.4.52 -p 6352 #登录正常
192.168.4.52:6352\> keys \* #无任何数据
(empty list or set)
192.168.4.52:6352\>
## 2.2检测集群
192.168.4.51:6351\> cluster info #查看集群状态
cluster_state:fail #集群状态失败
cluster_slots_assigned:0
cluster_slots_ok:0
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:1
cluster_size:0
cluster_current_epoch:0
cluster_my_epoch:0
cluster_stats_messages_sent:0
cluster_stats_messages_received:0
192.168.4.51:6351\> cluster nodes #查看集群节点
412a79829c7d0eed812b24959ca123b58990d60e :6351@16351 myself,master - 0 0
0 connected
## 2.3部署管理主机
sql51 RedisA 192.168.4.51 6351 同时兼任:管理主机
传安装包:
\[root@room9pc01 \~\]# scp -r \'/root/桌面/redis-cluster\'
192.168.4.51:/root
root@sql51 \~\]# cd redis-cluster/
\[root@sql51 redis-cluster\]# ls
redis-3.2.1.gem ruby-devel-2.0.0.648-30.el7.x86_64.rpm
\[root@sql51 redis-cluster\]# yum -y install ruby rubygems
> #脚本文件是ruby语言编写的,所以要安装解释器
\[root@sql51 redis-cluster\]# yum -y install
ruby-devel-2.0.0.648-30.el7.x86_64.rpm
\[root@sql51 redis-cluster\]# gem install redis-3.2.1.gem
创建命令工具
\[root@sql51 \~\]# cd redis-4.0.8
\[root@sql51 redis-4.0.8\]# ls
00-RELEASENOTES CONTRIBUTING deps Makefile README.md runtest
runtest-sentinel src utils
BUGS COPYING INSTALL MANIFESTO redis.conf runtest-cluster sentinel.conf
tests
\[root@sql51 redis-4.0.8\]# cd src/
\[root@sql51 src\]# echo \$PATH
/root/perl5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
\[root@sql51 src\]# mkdir /root/bin
\[root@sql51 src\]# cp re
redisassert.h redis-check-aof redis-check-rdb.c redis-cli.o
redis-trib.rb replication.c
redis-benchmark redis-check-aof.c redis-check-rdb.o redismodule.h
release.c replication.o
redis-benchmark.c redis-check-aof.o redis-cli redis-sentinel release.h
redis-benchmark.o redis-check-rdb redis-cli.c redis-server release.o
\[root@sql51 src\]# cp redis-trib.rb /root/bin/
\[root@sql51 src\]# chmod +x /root/bin/redis-trib.rb
\[root@sql51 src\]# redis-trib.rb help
Usage: redis-trib \ \ \
create host1:port1 \... hostN:portN
\--replicas \
check host:port
\.... \...\....
集群必须至少要有三台主库,
\--replicate 1 定义每个主库有1个从库,3台主库,3台从库,总共6台
\--replicate 2 定义每个主库有2个从库,3台主库,6台从库,总共9台 以此类推
\[root@sql51 src\]# redis-trib.rb create \--replicas 1 \\
\> 192.168.4.51:6351 \\
\> 192.168.4.52:6352 \\
\> 192.168.4.53:6353 \\
\> 192.168.4.54:6354 \\
\> 192.168.4.55:6355 \\
\> 192.168.4.56:6356
\>\>\> Creating cluster
\>\>\> Performing hash slots allocation on 6 nodes\...
Using 3 masters:
192.168.4.51:6351 #主库
192.168.4.52:6352 #主库
192.168.4.53:6353 #主库
Adding replica 192.168.4.55:6355 to 192.168.4.51:6351 #51的从库55
Adding replica 192.168.4.56:6356 to 192.168.4.52:6352 #52的从库56
Adding replica 192.168.4.54:6354 to 192.168.4.53:6353 #53的从库54
M: 412a79829c7d0eed812b24959ca123b58990d60e 192.168.4.51:6351
slots:0-5460 (5461 slots) master
M: d63724ee3c6990a98d41b432ee913796245f4999 192.168.4.52:6352
slots:5461-10922 (5462 slots) master
M: c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8 192.168.4.53:6353
slots:10923-16383 (5461 slots) master
S: 6e4b41e1b1e86faa68fe179aa1ab6ff7c0a6385e 192.168.4.54:6354
replicates c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8
S: 1dc26eb0d3c281ee74a50dc9d8544bc3557f4411 192.168.4.55:6355
replicates 412a79829c7d0eed812b24959ca123b58990d60e
S: 705304b8c3a9187d29430f6d6df6bfaf32138168 192.168.4.56:6356
replicates d63724ee3c6990a98d41b432ee913796245f4999
Can I set the above configuration? (type \'yes\' to accept): yes
#输入yes
\>\>\> Nodes configuration updated
\>\>\> Assign a different config epoch to each node
\>\>\> Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join\...
\>\>\> Performing Cluster Check (using node 192.168.4.51:6351)
M: 412a79829c7d0eed812b24959ca123b58990d60e 192.168.4.51:6351
slots:0-5460 (5461 slots) master
1 additional replica(s)
S: 705304b8c3a9187d29430f6d6df6bfaf32138168 192.168.4.56:6356
slots: (0 slots) slave
replicates d63724ee3c6990a98d41b432ee913796245f4999
S: 6e4b41e1b1e86faa68fe179aa1ab6ff7c0a6385e 192.168.4.54:6354
slots: (0 slots) slave
replicates c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8
S: 1dc26eb0d3c281ee74a50dc9d8544bc3557f4411 192.168.4.55:6355
slots: (0 slots) slave
replicates 412a79829c7d0eed812b24959ca123b58990d60e
M: c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8 192.168.4.53:6353
slots:10923-16383 (5461 slots) master
1 additional replica(s)
M: d63724ee3c6990a98d41b432ee913796245f4999 192.168.4.52:6352
slots:5461-10922 (5462 slots) master
1 additional replica(s)
\[OK\] All nodes agree about slots configuration.
\>\>\> Check for open slots\...
\>\>\> Check slots coverage\...
\[OK\] All 16384 slots covered.
## 2.4查看集群状态
192.168.4.51:6351\> cluster info
cluster_state:ok #状态ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:6
cluster_my_epoch:1
cluster_stats_messages_ping_sent:615
cluster_stats_messages_pong_sent:546
cluster_stats_messages_sent:1161
cluster_stats_messages_ping_received:541
cluster_stats_messages_pong_received:615
cluster_stats_messages_meet_received:5
cluster_stats_messages_received:1161
192.168.4.51:6351\> cluster nodes
412a79829c7d0eed812b24959ca123b58990d60e 192.168.4.51:6351@16351
myself,master - 0 1551343453000 1 connected 0-5460
705304b8c3a9187d29430f6d6df6bfaf32138168 192.168.4.56:6356@16356 slave
d63724ee3c6990a98d41b432ee913796245f4999 0 1551343453000 6 connected
6e4b41e1b1e86faa68fe179aa1ab6ff7c0a6385e 192.168.4.54:6354@16354 slave
c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8 0 1551343453000 4 connected
1dc26eb0d3c281ee74a50dc9d8544bc3557f4411 192.168.4.55:6355@16355 slave
412a79829c7d0eed812b24959ca123b58990d60e 0 1551343454502 5 connected
c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8 192.168.4.53:6353@16353
master - 0 1551343452596 3 connected 10923-16383
d63724ee3c6990a98d41b432ee913796245f4999 192.168.4.52:6352@16352
master - 0 1551343453999 2 connected 5461-10922.
\[root@sql51 \~\]# redis-trib.rb info 192.168.4.51:6351
192.168.4.51:6351 (412a7982\...) -\> 2 keys \| 5461 slots \| 1 slaves.
192.168.4.53:6353 (c269f171\...) -\> 1 keys \| 5461 slots \| 1 slaves.
192.168.4.52:6352 (d63724ee\...) -\> 2 keys \| 5462 slots \| 1 slaves.
\[OK\] 5 keys in 3 masters.
0.00 keys per slot on average.
## 2.5排错
\[root@sql52 \~\]# cat /var/lib/redis/6379/nodes-6352.conf
#集群信息此文件
如果报错信息提示:原数据库里面有数据和已存在集群中,如下操作
\[root@sql52 \~\]# ls /var/lib/redis/6379/ #删此处的文件
dump.rdb nodes-6352.conf
\[root@sql52 \~\]# cat /var/lib/redis/6379/nodes-6352.conf
再删此处的文件
\[root@sql58 \~\]# netstat -unltp \| grep redis
tcp 0 0 192.168.4.58:6358 0.0.0.0:\* LISTEN 7903/redis-server 1
tcp 0 0 192.168.4.58:16358 0.0.0.0:\* LISTEN 7903/redis-server 1
\[root@sql58 \~\]# ps aux \|grep redis
root 7903 0.1 0.9 147308 9656 ? Ssl 19:19 0:04
/usr/local/bin/redis-server 192.168.4.58:6358 \[cluster\]
root 8418 0.0 0.0 112676 980 pts/0 S+ 20:14 0:00 grep \--color=auto
redis
\[root@sql58 \~\]# kill -9 7903
\[root@sql58 \~\]# /etc/init.d/redis_6379 start
/var/run/redis_6379.pid exists, process is already running or crashed
#错误
\[root@sql58 \~\]# ls /var/run/redis_6379.pid
/var/run/redis_6379.pid
\[root@sql58 \~\]# rm /var/run/redis_6379.pid
rm：是否删除普通文件 \"/var/run/redis_6379.pid\"？y
\[root@sql58 \~\]# /etc/init.d/redis_6379 start
Starting Redis server\...
## 2.6管理机上检测集群
\[root@sql51 src\]# redis-trib.rb check 192.168.4.51:6351
\>\>\> Performing Cluster Check (using node 192.168.4.51:6351)
M: 412a79829c7d0eed812b24959ca123b58990d60e 192.168.4.51:6351
slots:0-5460 (5461 slots) master #主库哈希槽的个数和范围
1 additional replica(s)
S: 705304b8c3a9187d29430f6d6df6bfaf32138168 192.168.4.56:6356
slots: (0 slots) slave
replicates d63724ee3c6990a98d41b432ee913796245f4999
S: 6e4b41e1b1e86faa68fe179aa1ab6ff7c0a6385e 192.168.4.54:6354
slots: (0 slots) slave
replicates c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8
S: 1dc26eb0d3c281ee74a50dc9d8544bc3557f4411 192.168.4.55:6355
slots: (0 slots) slave
replicates 412a79829c7d0eed812b24959ca123b58990d60e
M: c269f171a53cfbdf3aa5f4f2387731ca7af2f8d8 192.168.4.53:6353
slots:10923-16383 (5461 slots) master
1 additional replica(s)
M: d63724ee3c6990a98d41b432ee913796245f4999 192.168.4.52:6352
slots:5461-10922 (5462 slots) master
1 additional replica(s)
\[OK\] All nodes agree about slots configuration.
\>\>\> Check for open slots\...
\>\>\> Check slots coverage\...
\[OK\] All 16384 slots covered.
有三个主库,三个从库
\[root@sql51 src\]# redis-trib.rb info 192.168.4.51:6351
192.168.4.51:6351 (412a7982\...) -\> 0 keys \| 5461 slots \| 1 slaves.
192.168.4.53:6353 (c269f171\...) -\> 0 keys \| 5461 slots \| 1 slaves.
192.168.4.52:6352 (d63724ee\...) -\> 0 keys \| 5462 slots \| 1 slaves.
\[OK\] 0 keys in 3 masters.
0.00 keys per slot on average.
## 2.7登录集群 - c 
\[root@sql51 src\]# redis-cli -c -h 192.168.4.51 -p 6351
192.168.4.51:6351\> keys \*
(empty list or set)
192.168.4.51:6351\> set name bob