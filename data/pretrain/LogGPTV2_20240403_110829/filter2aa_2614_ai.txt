Shkedy在Twitter上分享的31个案例和多个
场景，以图文加附件的形式，讲述API安全问题的发生根源和原理以
及表现形式。这里，将其包含的主要内容做简单的归纳，如表4-1所
示。
表4-1 API安全小贴士的主要内容
这份文档工具很好的总结了当前API安全测试时重点关注的安全漏
洞类型，同时也对API安全测试时的漏洞挖掘思路提供了多方面的参考
建议，非常适合有应用安全渗透测试基础的人快速上手，去了解API
安全测试的内容。另一方面，对API安全了解甚少的人，也可以通过此
工具，快速地完成API概览，通过工具学习，初步积累API基础知识，
为进一步学习API安全打下基础。因此，在API安全工具中，此文档型
工具作为首选工具向读者做了介绍。
4.2.2 Burp Suite工具
Burp Suite是一个集成型的Web应用程序安全软件，其拥有多种测试
套件，通过多个套件或插件的组合使用，能让API安全人员在测试过程
中如虎添翼。
1.基本信息
工具名称：Burp Suite。
工具网址：https://portswigger.net/burp。
工具简介：Burp Suite是由英国的PortSwigger公司提供的基于Java运
行环境的商业渗透测试套件，可分为社区版、专业版和企业版三种，其
官方网站的介绍如图4-1所示。
●图4-1 Burp Suite版本信息
企业版主要面向企业用户，提供CI持续集成功能；专业版面向大多
数渗透测试人员，提供专业的渗透测试套件，以支持渗透工作的开展；
而社区版是专业版的子集，功能较少。故给读者介绍的工具以专业版为
基础。Burp Suite的主要功能特点如下。
■ 
自动化漏洞扫描，覆盖1300多种常见漏洞，比如XSS、SQL注
入、XXE、文件路径遍历等。Burp Suite自身携带的爬虫套件能自动爬
取URL并进行漏洞扫描。
■ 手工安全测试套件，Burp Suite套件中包含多种安全测试套件，
比如用于流量代理的Proxy套件、用于流量重放的Repeater套件、用于攻
击的Intruder套件、用于编码解码的Decoder套件等。这些套件方便安全
人员在测试时，根据测试场景的不同选择不同的工具，采用手工+自动
结合的方式，控制执行过程，达到事半功倍的效果。
■ 丰富的第三方插件，Burp Suite的拓展套件（Extender）提供第三
方插件入口，在其应用商店中具有众多的插件（当然也包含API安全相
关的插件），用户可以通过访问其应用商店网址
https://portswigger.net/bappstore，选择自己使用的插件来安装。
2.基本原理
Burp Suite的工作原理是以代理的方式，将流量导入套件，通过对
流量的拦截、修改、分析、重放、阻断等操作，来验证应用程序的安
全性。其简要流程如图4-2所示。
在使用Burp 
Suite的情况下，客户端与服务器端将无法直接通信，
流量通过Burp Suite被截获。当读者使用Scanner套件来扫描或使用Proxy
套件代理后进行其他操作，在安全验证过程中，都需要根据不同的验证
场景，调用其他套件的功能，共同完成测试流程。比如验证重放机制时
调用Repeater套件，尝试暴力破解时调用Intruder套件以及过程中对数据
的篡改和分析等操作所使用的其他套件。最终流量归集到服务器端来执
行，通过服务器端响应情况判断问题是否存在。
●图4-2 Burp Suite工作原理
3.Burp Suite在API安全中的用法
Burp 
Suite作为渗透测试工具，在安全方面有着广泛的使用。尤其
在其应用商店中，有一些与API安全相关的插件，常用的有OpenAPI解
析器（OpenAPI Parser）、Postman集成插件（Postman Integration）、
WSDL插件（Wsdler）、令牌提取器（Token Extractor）、GraphQL自查
器（InQL）、越权检测插件（Autorize）等。
■ 
OpenAPI解析器：主要功能是利用OpenAPI规范，自动解析定
义文件，转换为Burp 
Suite通用的接口调用形式。比如将
http://editor.swagger.io/中的swagger.yaml文件导出，如图4-3所示。
●图4-3 Swagger API配置信息导出
将图4-3生成的swagger.yaml文件导入OpenAPI解析器，其解析结果
如图4-4所示。
●图4-4 OpenAPI解析器展示界面
■ Postman集成插件：提供Postman与Burp Suite的集成功能，可将
Burp Suite的流量信息导出生成Postman可识别文件，也可直接导入，
在Postman中进行测试。例如，在HTTP历史记录中，选中需要导入的
Postman记录，生成Postman可以识别的流量集合文件，如图4-5所示。
●图4-5 Postman集成插件展示界面
■ 
WSDL插件：主要通过解析WSDL规范文档，自动生成用于
WebServices的SOAP请求用例，便于安全人员进行测试验证。如果读
者配置了此插件，当访问WSDL时，可以从HTTP历史记录中提取流量
到WSDL插件中，如图4-6所示。
●图4-6 WSDL插件展示界面
■ 令牌提取器：它是管理Token的插件，在API安全测试过程中，经
常会遇到需要携带令牌的场景，这时安全人员即可使用它从响应报文中
提取Token用于之后的请求。
■ InQL插件：主要用于GraphQL API的自省查询，比如搜索已知的
GraphQL URL路径、GraphQL开发控制台、每个GraphQL请求/响应等。
■ 越权检测插件：主要是配置高权限和低权限用户，插件自动以低
权限用户请求的形式，验证越权漏洞的存在。如果存在越权漏洞，此
次请求会被标注为红色；如果没有越权漏洞，则此次请求被标注为绿
色；对于无法判断的，则标注为黄色。此插件在当前越权漏洞测试耗时
的环境下，能帮助安全人员快速地检测越权漏洞。其插件界面如图4-7
所示。
●图4-7 越权检测插件展示界面
当然，除了这里列举的插件外，Burp 
Suite应用商店中还有很多其
他的插件也非常实用，比如用于用来做Protobuf协议安全测试的
BlackBox、自动重放的Auto Repeater、VMware提供的burp-rest-api插件
等，读者可以在Extender套件中访问应用商店，根据自己的喜好选择安
装。其应用商店的插件如图4-8所示。
●图4-8 Burp Suite应用商店展示界面
4.2.3 Postman工具
Postman是一款商业化软件，在API的研发管理中被广泛使用于API
设计、API构建、API测试等工作环节。当然，它也同样适用于API安全
测试和管理。
1.基本信息
工具名称：Postman。
工具网址：https://www.postman.com。
工具简介：Postman是由Postman公司开发的界面友好的API开发协
作软件，不同的使用者通过简单的配置即可开展工作，并且其具备的自
动化集成、批量操作、脚本定制等功能，使得其在API软件市场占有很
大的比重。其官网功能介绍如图4-9所示。
●图4-9 Postman官网功能介绍
其功能特点主要如下。
■ 
多平台的客户端支持，读者可以从其官网下载macOS、
Windows（32位/64位）、Linux（32位/64位）不同平台的客户端软件，
通过简单的安装即可使用。目前，Postman提供免费版和企业版两种版
本，大多数情况下，免费版即可满足读者的日常使用。
■ 方便的自动化集成，Postman支持命令行调用和API调用的方式，
与CI/CD管道工具进行集成。比如在CI中安装Newman工具，即可以调
用本地或服务器端的API集合。
■ 
丰富的管理功能，Postman提供个人空间管理、团队协作API管
理、SAAS服务与SSO集成管理等，加上其完善的在线文档，为用户的
使用提供了极大的帮助。
■ 友好的脚本定制，Postman支持多种形式的脚本定制功能，比如
pre-request脚本、多语言编码，这些功能为不同场景下的API测试提供了
批量操作、自动化操作的入口。如图4-10所示为不同编程语言的代码截
图。
●图4-10 Postman脚本功能展示
2.基本原理
在理解Postman的工作原理之前，先来了解一些基本的概念，这样
便于更好的理解Postman安全测试的过程。
■ Collections（集合）：集合是Postman采用分组的方式，将一组相
似的API请求归类，但每一个API请求可以设置相应的header、body、
URL参数、授权方式及配置。
■ Runner（运行器）：Runner是Postman特有的模块，当读者使用
Runner时，其实是执行集合中的每一个API请求。Runner充当管理者的
角色，对所有的API请求进行调度、编排，达到流程化的目的。
■ Variables（变量）：Postman中的变量和软件开发中变量类似，
它也有不同的作用域，比如全局变量、集合变量、环境变量、本地变量
等，这些变量的值，读者可以采用程序编码的方式，通过读取URL参
数、HTTP请求、本地文件等操作进行赋值。
■ 
Environments（环境）：Postman中的环境是指API请求的上下
文，通常以键值对的方式存储数据。
■ Pre-Request Script（预请求脚本）：预请求脚本主要用于设置
API请求中的数据、变量，比如通过预请求脚本可以获取Environments
中的数据，设置各种Variables变量值。
■ Test Script（测试脚本）：测试脚本在从服务器收到Response后
才开始执行，其主要用来设置变量值、判断响应是否符合预期。比如检
查Response的body中是否包含payload返回的字符串、HTTP状态码，
HTTP Header是否包含关键字等。
理解了上面的几个概念之后，就更容易理解Postman适用于安全测
试的基本原理了。其原理如图4-11所示。
●图4-11 Postman的工作原理
当Postman以Runner方式运行后，首先从预定义的集合中获取API列
表，按照Runner编排的顺序（如果没有编排，则默认顺序）分别发起
API请求。在请求发起前，加载预请求脚本。预请求脚本中，通过编码
的方式，获取全局变量、集合变量、环境变量、本地变量等变量值进行
赋值，再发送请求到服务器端。
服务器端接受请求，反馈应答响应。Postman接收到响应报文后，
调用测试脚本，验证响应的准确性，并给出结果判断，最终形成报告。
3.Postman在API安全中的用法
Postman主要以功能测试为主，安全人员之所以使用它进行安全测
试，是因为它支持REST API、SOAP API、GraphQL等多种API协议，并
集成了API KEY、HTTP Basic、Digest、OAuth多种认证形式，使用它
来做安全测试可以帮忙安全人员解决很多其他工具软件无法解决的问
题。但因为Postman的主要功能不是做安全测试，所以需要在理解