我们的日志监控环境开始成形，但是我们需要将 Docker 容器日志放入应用中，以使它值得做这项工作。我们已经设置了 Splunk 转发器，将日志从我们的系统发送到`/var/log`目录。到目前为止，我们已经了解到，我们可以简单地装载容器的日志文件，并使用 Splunk 转发器向 Splunk 索引器发送日志。这是实现这一点的一种方法，但是 Docker 为向 Splunk 发送日志提供了一个更简单的选项。
Docker 提供了一个特定于 Splunk 的日志驱动程序，它将通过我们的网络将我们的容器日志发送到我们的 Splunk 安装上的 HTTP 事件收集器。我们需要打开一个新的端口来公开事件收集器，因为 Splunk 使用端口`8088`在这个方法中收集数据。到目前为止，我们已经在 Splunk 安装中公开了端口`8000`和`9997`。在继续本章的其余部分之前，让我们看看所有可用的端口以及它们在 Splunk 上的功能:
*   `8000`:你一直在使用这个端口进行 web 应用，这是浏览器中用来访问 Splunk 的专用默认 web 端口。
*   `9997`:该端口是 Splunk 转发器向索引器转发数据时使用的默认端口。我们在本章的前一节中公开了这个端口，以确保我们能够从运行的系统中收集日志。
*   `8089` : Splunk 自带一个 API，默认情况下作为搜索头的一部分运行。端口`8089`是应用编程接口管理器与运行在您的实例上的应用编程接口连接的地方。
*   `8088`:端口`8088`需要暴露，以便将信息转发到系统上设置的事件收集器。在接下来的练习中，我们将使用这个端口开始向 HTTP 事件收集器发送 Docker 容器日志。
*   `8080`: If we had a larger Splunk installation with dedicated indexers, port `8080` is used for indexers to communicate among themselves and allow replication among these indexers.
    注意
    Splunk 的网络界面默认运行在端口`8000`上，但是如果您在同一个端口上托管应用，这可能会与我们的全景徒步应用冲突。如果这确实会导致任何问题，请随意将 Splunk 容器上的端口暴露给不同的东西，例如端口`8080`，因为您仍然可以访问网络界面，并且这不会导致我们使用该端口的服务出现任何问题。
一旦在 Splunk 上设置了一个`HTTP Event Collector`，将日志转发到 Splunk 只需向我们的`docker run`命令添加正确的选项。下面的示例命令使用`--log-driver=splunk`向正在运行的容器发出使用 Splunk 日志驱动程序的信号。
然后，它需要包括更多的`--log-opt`选项，以确保日志被正确转发。第一个是`splunk-url`，这是你的系统目前所在的网址。由于我们没有设置域名系统，我们可以简单地使用我们用来托管 Splunk 实例的 IP 地址，以及`8088`的端口。第二个是`splunk-token`。这是 Splunk 在您创建 HTTP 事件收集器时分配的令牌:
```
docker run --log-driver=splunk \
--log-opt splunk-url=:8088 \
--log-opt splunk-token= \
```
可以选择将 Splunk 日志驱动程序详细信息添加到您的 Docker 配置文件中。在这里，您需要在`/etc/docker`配置文件的`daemon.json`文件中添加以下详细信息。只有当您将 Splunk 作为一个单独的应用而不是系统上的 Docker 实例时，这才会起作用。由于我们已经将 Splunk 实例设置为 Docker 容器，该选项将不起作用。这是因为 Docker 守护程序需要重新启动并连接到配置中列出的`splunk-url`。当然，如果没有 Docker 守护程序的运行，`splunk-url`将永远无法使用:
```
{
  "log-driver": "splunk",
  "log-opts": {
    "splunk-token": "",
    "splunk-url": "::8088"
  }
}
```
在下面的练习中，我们将扩展我们的 Splunk 安装，以打开特定于我们的`HTTP Event Collector`的端口，我们也将创建这些端口。然后，我们将开始将日志从我们的容器发送到 Splunk，为我们开始查看它们做好准备。
## 练习 14.02:创建 HTTP 事件收集器并开始收集 Docker 日志
在本练习中，您将为 Splunk 安装创建一个`HTTP Event Collector`，并使用 Docker `log`驱动程序将日志转发到事件收集器。您将使用`random-logger` Docker 映像(由`chentex`存储库提供，可在 Docker Hub 上使用)在您的系统中生成一些日志，并进一步演示 Splunk 的使用:
1.  再次启动 Splunk 映像，这次端口`8088`暴露给我们所有的 Docker 容器，将它们的日志推送到它上面:
    ```
    docker run --rm -d -p 8000:8000 -p 9997:9997 -p 8088:8088 \
     -e 'SPLUNK_START_ARGS=--accept-license' \
     -e 'SPLUNK_PASSWORD=changeme' \
     -v ${PWD}/testsplunk:/opt/splunk/etc/ \
     --name splunk splunk/splunk:latest
    ```
2.  等待 Splunk 再次启动，并使用管理员帐户重新登录到网络界面。
3.  进入`Settings`菜单，选择`Data Inputs`新建`HTTP Event Collector`。从选项列表中选择`HTTP Event Collector`。
4.  Click on the `Global Settings` button on the `HTTP Event Collector` page. You will be presented with a page similar to the following. On this page, click on the `Enabled` button, next to `All Tokens`, and make sure `Enable SLL` is not selected as you will not be using SSL in this exercise. This will make things a little easier for you. When you're happy with the details on the screen, click the `Save` button to save your configurations:
    ![Figure 14.11: Enabling HTTP Event Collector on your system ](img/B15021_14_11.jpg)
    图 14.11:在系统上启用 HTTP 事件收集器
5.  When you return to the `HTTP Event Collector` page, click the `New Token` button at the top-right of the screen. You'll be presented with a screen similar to the following. This is where you'll set up your new Event Collector so that you can collect your Docker container logs:
    ![Figure 14.12: Naming your HTTP Event Collector on Splunk ](img/B15021_14_12.jpg)
    图 14.12:在 Splunk 上命名您的 HTTP 事件收集器
    在前面的屏幕中，您可以设置新事件收集器的名称。输入名称`Docker Logs`，对于其余条目，将它们留空以接受默认值。点击屏幕顶部的`Next`按钮。
6.  Accept the default values for the `Input Settings` and `Review` pages until you see a page similar to the following, in which a new `HTTP Event Collector` has been created with a token available. The token is displayed as `5c051cdb-b1c6-482f-973f-2a8de0d92ed8`. Yours will be different as Splunk provides a unique token to allow for the secure transfer of data from sources that are trusted by the user. Use this token to allow your Docker containers to start logging data in your Splunk installation:
    ![Figure 14.13: Completed HTTP Event Collector on Splunk ](img/B15021_14_13.jpg)
    图 14.13:Splunk 上已完成的 HTTP 事件收集器
7.  Use the `hello-world` Docker image to make sure you can send data to Splunk. In this instance, add four extra command-line options as part of your `docker run` command. Specify `--log-driver` as `splunk`. Provide the log options as the `splunk-url` of our system, including port `8088`, `splunk-token`, which you created in the previous step, and, finally, state `splunk-=insecureipverify` as `true`. This final option will limit the work required in setting up your Splunk installation so that you won't need to organize the SSL certificates that will be used with our Splunk server:
    ```
    docker run --log-driver=splunk \
    --log-opt splunk-url=http://127.0.0.1:8088 \
    --log-opt splunk-token=5c051cdb-b1c6-482f-973f-2a8de0d92ed8 \
    --log-opt splunk-insecureskipverify=true \
    hello-world
    ```
    这些命令应该返回类似于以下内容的输出:
    ```
    Hello from Docker!
    This message shows that your installation appears to be 
    working correctly.
    …
    ```
8.  Return to the Splunk web interface and click the `Start Searching` button. If you have already moved on from the previous screen, go to the Splunk search page at `http://0.0.0.0:8000/en-US/app/search/search`. In the search query box, enter `source="http:Docker Logs"`, as shown in the following screenshot. If everything has worked well, you should also see data entries being provided by the `hello-world` image:
    ![Figure 14.14: Starting to collect docker logs with Splunk ](img/B15021_14_14.jpg)
    图 14.14:开始用 Splunk 收集 Docker 日志
9.  上一步已经显示，Splunk 安装现在能够收集 Docker 日志数据，但是您需要创建一个新卷来存储索引数据，这样就不会在每次停止 Splunk 运行时将其销毁。回到你的终端，杀死正在运行的`splunk`容器:
    ```
    docker kill splunk
    ```
10.  在您创建原始`testsplunk`目录的同一个目录中，创建一个新目录，以便我们可以挂载我们的 Splunk 索引数据。在这种情况下，将其命名为`testsplunkindex` :
    ```
    mkdir testsplunkindex
    ```
11.  从您的工作目录中，再次启动 Splunk 映像。安装您刚刚创建的新目录，以便存储您的索引数据:
    ```
    docker run --rm -d -p 8000:8000 -p 9997:9997 -p 8088:8088 \
     -e 'SPLUNK_START_ARGS=--accept-license' \
     -e 'SPLUNK_PASSWORD=changeme' \
     -v ${PWD}/testsplunk:/opt/splunk/etc/ \
     -v ${PWD}/testsplunkindex:/opt/splunk/var/ \
     --name splunk splunk/splunk:latest
    ```
12.  Use the `random-logger` Docker image to generate some logs in your system. In the following command, there's an added `tag` log option. This will mean that each log event that's generated and sent to Splunk will also include this tag as metadata, which can help you search for data when you are searching in Splunk. By using the `{{.Name}}` and `{{.FullID}}` options, these details will be automatically added, just like the container name and ID number will be added as your tag when the container is created:
    ```
    docker run --rm -d --log-driver=splunk \
    --log-opt splunk-url=http://127.0.0.1:8088 \
    --log-opt splunk-token=5c051cdb-b1c6-482f-973f-2a8de0d92ed8 \
    --log-opt splunk-insecureskipverify=true \
    --log-opt tag="{{.Name}}/{{.FullID}}" \
    --name log-generator chentex/random-logger:latest
    ```
    注意
    如果您的 Splunk 实例没有正确运行，或者您没有正确配置某些东西，`log-generator`容器将无法连接或运行。您将看到类似以下内容的错误:
    `docker: Error response from daemon: failed to initialize logging driver:`
13.  Once this is running, move back to the Splunk search page on the web interface and in this instance, include the tag you created in the previous step. The following query will ensure that only new data that has been provided by the `log-generator` image will display in our Splunk output:
    ```
    source="http:docker logs" AND "log-generator/"
    ```
    您的 Splunk 搜索结果应该类似于以下内容。在这里，你可以看到`log-generator`映像生成的日志。您可以看到它在随机时间记录日志，并且每个条目现在都标记有容器的名称和实例标识:
    ![Figure 14.15: Splunk search result ](img/B15021_14_15.jpg)
图 14.15: Splunk 搜索结果
我们的 Splunk 安装进展顺利，因为我们现在已经能够将应用配置为包含一个`HTTP Event Collector`，并且已经开始从`log-generator` Docker 映像收集日志。即使我们停止了 Splunk 实例，它们仍然应该可供我们搜索和提取有用的信息。