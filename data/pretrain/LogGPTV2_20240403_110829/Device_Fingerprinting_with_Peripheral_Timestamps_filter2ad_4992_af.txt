be established, for example by estimating the activity of other
USB devices through DOM event timings.
Fig. 8. Embedding distances pre/post Spectre mitigations applied.
API [65], [66]. As a result, mitigating browser side-channel
attacks has proven elusive, and preventing time-based ﬁnger-
printing is likely to face some of the same challenges.
The dual clock model speciﬁes two independent clocks
and assumes that the reference clock runs much faster than
the subject clock, i.e., f R (cid:29) f S . Breaking this assumption
would prevent the measurement of instantaneous phase, which
may be achieved by either increasing f S or lowering f R
in order to satisfy f R  0.05, indicating the null hypothesis (that
the distributions are identical) cannot be rejected. The Firefox
device ﬁngerprint distances actually decrease, which can per-
haps be attributed to Firefox v60 increasing timer resolution
to 1ms which was previously 2ms in Firefox v59 [70].
An alternative mitigation is to inject noise into CS which
would alter the event timings before they reach the browser.
This approach requires temporarily buffering user input some-
where along the event processing pipeline. The buffering
duration should be random such that the true time of the
subject clock tick cannot be measured from within the browser.
Currently only privacy-centric Linux distributions Whonix and
Tails support
this capability natively through a systemd
service named kloak, which works by grabbing the keyboard
device and rewriting events to the uinput module [71].
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:57:54 UTC from IEEE Xplore.  Restrictions apply. 
1030
ChromeFirefox0.00.51.01.5Embedding distancepre-Spectrepost-SpectreREFERENCES
[1] P. Laperdrix, N. Bielova, B. Baudry, and G. Avoine, “Browser ﬁnger-
printing,” ACM Transactions on the Web, vol. 14, no. 2, 2020.
[2] K. Mowery and H. Shacham, “Pixel perfect: Fingerprinting canvas in
html5,” in Proc. Workshop on Web 2.0 Security and Privacy (W2SP).
IEEE, 2012.
[3] H. Bojinov, Y. Michalevsky, G. Nakibly, and D. Boneh, “Mobile device
identiﬁcation via sensor ﬁngerprinting,” 2014.
[4] G. Baldini and G. Steri, “A survey of techniques for the identiﬁcation
of mobile phones using the physical ﬁngerprints of the built-in com-
ponents,” IEEE Communications Surveys & Tutorials, vol. 19, no. 3,
2017.
[5] J. Zhang, A. R. Beresford, and I. Sheret, “SensorID: Sensor calibration
ﬁngerprinting for smartphones,” in Proc. 2019 IEEE Symposium on
Security & Privacy (SP).
IEEE, 2019.
[6] U. Iqbal, S. Englehardt, and Z. Shaﬁq, “Fingerprinting the ﬁngerprinters:
Learning to detect browser ﬁngerprinting behaviors,” in Proc. 2021 IEEE
Symposium on Security & Privacy (SP).
IEEE, 2021.
[7] T. Kohno, A. Broido, and K. Claffy, “Remote physical device ﬁnger-
printing,” IEEE Transactions on Dependable and Secure Computing,
vol. 2, no. 2, 2005.
[8] S. J. Murdoch, “Hot or not: Revealing hidden services by their clock
skew,” in Proc. 2006 ACM conference on Computer and communications
security (CCS). ACM, 2006.
[9] I. Sanchez-Rola, I. Santos, and D. Balzarotti, “Clock around the clock,”
in Proc. 2018 ACM Conference on Computer and Communications
Security (CCS). ACM, 2018.
[10] R. Wimmer, A. Schmid, and F. Bockes, “On the latency of USB-
connected input devices,” in Proc. 2019 ACM Conference on Human
Factors in Computing Systems (CHI). ACM, 2019.
[11] S. Jana and S. Kasera, “On fast and accurate detection of unauthorized
wireless access points using clock skews,” IEEE Transactions on Mobile
Computing, vol. 9, no. 3, 2010.
[12] D.
Luu,
“Keyboard
2021,
https://danluu.com/keyboard-latency/.
latency,”
Blog,
http://web.archive.org/web/20210204012121/
Luu’s
Dan
dive:
[13] J. G. Ganssle, “A guide to debouncing,” The Ganssle Group, Tech. Rep.,
2004.
[14] “Deep
Forum,
https://forums.oneplus.com/threads/deep-dive-120-hz-ﬂuid-display-
the-best-youll-lay-eyes-on-in-2020.1167710/.
device
display,” OnePlus, OnePlus
http://web.archive.org/web/20210115102609/
[15] “Universal
deﬁnition
2020,
(usb)
class
ﬂuid
120
bus
hz
human
version
https://www.usb.org/sites/default/ﬁles/documents/hid1_11.pdf.
1.11,” USB Implementers Forum, Tech. Rep.,
ﬁrmware
devices
(hid),
for
speciﬁcation
2001,
serial
interface
[16] “Universal serial bus speciﬁcation revision 2.0,” USB Implementers
Forum, Tech. Rep., 2000, https://www.usb.org/document-library/usb-20-
speciﬁcation.
[17] Personal
System/2 Hardware
Reference,
https://archive.org/details/bitsavers_ibmpcps284erface
Technical
Interface
1990,
TechnicalReferenceCommonInterfaces_39004874.
[18] A. Chapweske,
Documentation,
http://www.computer-engineering.org/ps2mouse/.
ps/2 mouse
interface,” Linux Kernel
http://web.archive.org/web/20080823085651/
“The
2003,
reducing
[19] “NO_HZ:
Organization,
scheduling-clock
Linux
Kernel
ticks,”
Linux
nel
Documentation,
https://www.kernel.org/doc/Documentation/timers/NO_HZ.txt.
WindowsÂ R(cid:13) Internals, Book 1. Microsoft Press, 2017.
[20] J. Hanrahan, M. E. Russinovich, D. Solomon, A. Ionescu, and B. Catlin,
Ker-
2018,
[21] “Timers, timer resolution, and development of efﬁcient code,” Microsoft,
Tech. Rep., 2010-06-16, http://web.archive.org/web/20170221051458/
http://download.microsoft.com:80/download/3/0/2/3027D574-C433-
412A-A8B6-5E0A75D5B 237/Timer-Resolution.docx.
[22] “HTML living standard,” WHATWG, Accessed 17 February 2021, 2021,
https://html.spec.whatwg.org/.
[23] “The rendering critical path,” The Chromium Projects, Accessed 20
March 2021, 2014, https://www.chromium.org/developers/the-rendering-
critical-path.
[24] P. Laperdrix, W. Rudametkin, and B. Baudry, “Beauty and the beast:
Diverting modern web browsers to build unique browser ﬁngerprints,”
in Proc. 2016 IEEE Symposium on Security & Privacy (SP).
IEEE,
2016.
[25] F. Alaca and P. C. van Oorschot, “Device ﬁngerprinting for augmenting
web authentication,” in Proc. 2016 Annual Conference on Computer
Security Applications (ACSAC). ACM, 2016.
[26] K. Keys, “Internet-scale IP alias resolution techniques,” ACM SIG-
COMM Computer Communication Review, vol. 40, no. 1, 2010.
[27] D. Mills, “Network time protocol (version 3) speciﬁcation, implemen-
tation and analysis,” Tech. Rep., 1992.
[28] Y. Cao, S. Li, and E. Wijmans, “(Cross-)Browser ﬁngerprinting via OS
and hardware level features,” in Proc. 2017 Network and Distributed
System Security Symposium (NDSS).
Internet Society, 2017.
[29] A. Das, N. Borisov, and E. Chou, “Every move you make: Exploring
practical issues in smartphone motion sensor ﬁngerprinting and coun-
termeasures.” Sciendo, 2018.
[30] I. S. MacKenzie and C. Ware, “Lag as a determinant of human
performance in interactive systems,” in Proc. 1993 ACM Conference
on Human Factors in Computing Systems (CHI). ACM, 1993.
[31] A. Ng, J. Lepinski, D. Wigdor, S. Sanders, and P. Dietz, “Designing for
low-latency direct-touch input,” in Proc. 2013 Annual ACM Symposium
on User Interface Software and Technology (UIST). ACM, 2012.
[32] R. R. Plant, N. Hammond, and T. Whitehouse, “How choice of mouse
may affect response timing in psychological studies,” Behavior Research
Methods, Instruments, & Computers, vol. 35, no. 2, 2003.
[33] K. S. Killourhy and R. A. Maxion, “Comparing anomaly-detection algo-
rithms for keystroke dynamics,” in Proc. 2009 IEEE/IFIP International
Conference on Dependable Systems & Networks (DSN).
IEEE, 2009.
[34] A. A. E. Ahmed and I. Traore, “A new biometric technology based
on mouse dynamics,” IEEE Transactions on Dependable and Secure
Computing, vol. 4, no. 3, 2007.
[35] M. Frank, R. Biedert, E. Ma, I. Martinovic, and D. Song, “Touchalytics:
On the applicability of touchscreen input as a behavioral biometric for
continuous authentication,” IEEE Transactions on Information Forensics
and Security, vol. 8, no. 1, 2013.
[36] L. A. Leiva, I. Arapakis, and C. Iordanou, “My mouse, my rules:
Privacy issues of behavioral user proﬁling via mouse tracking,” in
Proc. 2021 ACM SIGIR Conference on Human Information Interaction
and Retrieval (CHIIR), 2021.
[37] A. Acien, A. Morales, R. Vera-Rodriguez, J. Fierrez, and J. V. Monaco,
“TypeNet: Scaling up keystroke biometrics,” in Proc. 2020 IEEE Inter-
national Joint Conference on Biometrics (IJCB).
IEEE, 2020.
[38] K. S. Killourhy, “The role of environmental factors in keystroke dy-
namics,” in Proc. IEEE/IFIP International Conference on Dependable
Systems and Networks (DSN) Supplemental Volume (Student Forum),
2009.
[39] R. Maxion and V. Commuri, “This is your behavioral keystroke biomet-
ric on rubbish data,” Carnegie Mellon University, Tech. Rep., 2020.
[40] V. Paxson, “On calibrating measurements of packet transit times,” in
Proc. 1998 Joint International Conference on Measurement and Mod-
eling of Computer Systems (SIGMETRICS/PERFORMANCE). ACM
Press, 1998.
[41] B. Sadler and S. Casey, “On periodic pulse interval analysis with outliers
and missing observations,” IEEE Transactions on Signal Processing,
vol. 46, no. 11, 1998.
[42] S. V. Radhakrishnan, A. S. Uluagac, and R. Beyah, “GTID: A technique
for physical device and device type ﬁngerprinting,” IEEE Transactions
on Dependable and Secure Computing, vol. 12, no. 5, 2015.
[43] M. S. Bartlett, “The spectral analysis of point processes,” Journal of
the Royal Statistical Society: Series B (Methodological), vol. 25, no. 2,
1963.
[44] “Date.now(),”
Mozilla,
2021,
US/docs/Web/JavaScript/Reference/Global_Objects/Date/now.
2021,
Accessed
March
https://developer.mozilla.org/en-
20
[45] P. Kocher, J. Horn, A. Fogh, D. Genkin, D. Gruss, W. Haas, M. Ham-
burg, M. Lipp, S. Mangard, T. Prescher, M. Schwarz, and Y. Yarom,
“Spectre attacks: Exploiting speculative execution,” in Proc. 2019 IEEE
Symposium on Security & Privacy (SP).
IEEE, 2019.
[46] T. Yamaguchi, M. Soma, D. Halter, R. Raina, J. Nissen, and M. Ishida,
“A method for measuring the cycle-to-cycle period jitter of high-
frequency clock signals,” in Proc. 19th IEEE VLSI Test Symposium
(VTS).
IEEE.
[47] A. Hajimiri, S. Limotyrakis, and T. Lee, “Jitter and phase noise in ring
oscillators,” IEEE Journal of Solid-State Circuits, vol. 34, no. 6, 1999.
[48] D. Tsafrir, Y. Etsion, D. G. Feitelson, and S. Kirkpatrick, “System noise,
OS clock ticks, and ﬁne-grained parallel applications,” in Proc. 2005
annual international conference on Supercomputing (ICS). ACM, 2005.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:57:54 UTC from IEEE Xplore.  Restrictions apply. 
1031
[49] F. M. Proctor and W. P. Shackleford, “Real-time operating system timing
jitter and its impact on motor control,” in Proc. SPIE Conference on
Sensors and Control for Intelligent Manufacturing. SPIE, 2001.
[50] P. De, R. Kothari, and V. Mann, “Identifying sources of operating system
jitter through ﬁne-grained kernel instrumentation,” in Proc. 2007 IEEE
International Conference on Cluster Computing.
IEEE, 2007.
[51] V. Dhakal, A. M. Feit, P. O. Kristensson, and A. Oulasvirta, “Obser-
vations on typing from 136 million keystrokes,” in Proc. 2018 ACM
Conference on Human Factors in Computing Systems (CHI). ACM,
2018.
[52] K. Palin, A. M. Feit, S. Kim, P. O. Kristensson, and A. Oulasvirta, “How
do people type on mobile devices?” in Proc. 2019 ACM International
Conference on Human-Computer Interaction with Mobile Devices and
Services (MobileCHI). ACM, 2019.
[53] B. C. Ross, “Mutual information between discrete and continuous data
sets,” PLoS ONE, vol. 9, no. 2, 2014.
[54] F. Schroff, D. Kalenichenko, and J. Philbin, “FaceNet: A uniﬁed embed-
ding for face recognition and clustering,” in Proc. 2015 IEEE Conference
on Computer Vision and Pattern Recognition (CVPR).
IEEE, 2015.
[55] M. Gdeisat and F. Lilley, “One-dimensional phase unwrapping problem,”
Higher Colleges of Technology, Tech. Rep., 2011.
[56] K. Simonyan and A. Zisserman, “Very deep convolutional networks for
large-scale image recognition,” in Proc. 2015 International Conference
on Learning Representations, (ICLR), 2015.
[57] K. Q. Weinberger, J. Blitzer, and L. K. Saul, “Distance metric learning
for large margin nearest neighbor classiﬁcation,” in Proc. 2005 Confer-
ence on Neural Information Processing Systems (NeurIPS), 2005.
[58] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma,
Z. Huang, A. Karpathy, A. Khosla, M. Bernstein, A. C. Berg, and L. Fei-
Fei, “ImageNet large scale visual recognition challenge,” International
Journal of Computer Vision, vol. 115, no. 3, 2015.
[59] P. Grother, M. Ngan, and K. Hanaoka, “Face recognition vendor test
(FRVT) part 2,” Tech. Rep., 2019.
[60] N. Mantel, “The detection of disease clustering and a generalized
regression approach,” Cancer research, vol. 27, no. 2 Part 1, 1967.
[61] R. Clarke, “Human identiﬁcation in information systems,” Information
Technology & People, vol. 7, no. 4, 1994.
[62] A. Vastel, P. Laperdrix, W. Rudametkin, and R. Rouvoy, “FP-STALKER:
Tracking browser ﬁngerprint evolutions,” in Proc. 2018 IEEE Sympo-
sium on Security & Privacy (SP).
IEEE, 2018.
[63] M. Schwarz, F. Lackner, and D. Gruss, “JavaScript
template at-
tacks: Automatically inferring host information for targeted exploits,”
in Proc. 2019 Network and Distributed System Security Symposium
(NDSS).
Internet Society, 2019.
[64] D. Kohlbrenner and H. Shacham, “On the effectiveness of mitigations
against ﬂoating-point timing channels,” in Proc. 2017 USENIX Security
Symposium (USENIX Security). USENIX, 2017.
[65] M. Schwarz, C. Maurice, D. Gruss, and S. Mangard, “Fantastic timers
and where to ﬁnd them: High-resolution microarchitectural attacks in
JavaScript,” in Financial Cryptography and Data Security.
Springer,
2017.
[66] T. Rokicki, C. Maurice, and P. Laperdrix, “Sok: In search of lost time: A
review of javascript timers in browsers,” in Proc. 2021 IEEE European
Symposium on Security & Privacy (EuroS&P).
IEEE, 2021.
[68] “Mitigating
[67] “Provide js with reduced time precision,” Tor Project, Accessed 20
March 2021, 2011, https://gitlab.torproject.org/legacy/trac/-/issues/1517.
Chromium
2018,
Projects,
https://sites.google.com/a/chromium.org/dev/Home/chromium-
security/ssca.
[69] “Mitigations