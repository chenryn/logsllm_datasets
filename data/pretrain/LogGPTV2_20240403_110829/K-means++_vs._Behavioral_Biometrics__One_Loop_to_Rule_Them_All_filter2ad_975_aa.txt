title:K-means++ vs. Behavioral Biometrics: One Loop to Rule Them All
author:Parimarjan Negi and
Prafull Sharma and
Vivek Jain and
Bahman Bahmani
K-means++ vs. Behavioral Biometrics: One Loop to
Rule Them All
Parimarjan Negi ∗, Prafull Sharma †, Vivek Sanjay Jain ‡ and Bahman Bahmani §
Email: ∗PI:EMAIL, †PI:EMAIL, ‡PI:EMAIL, §PI:EMAIL
Stanford University
Abstract—Behavioral biometrics, a ﬁeld that studies patterns
in an individual’s unique behavior, has been researched actively
as a means of authentication for decades. Recently, it has even
been adopted in many real world scenarios. In this paper, we
study keystroke dynamics, the most researched of such behavioral
biometrics, from the perspective of an adversary. We designed two
adversarial agents with a standard accuracy convenience trade-
off: Targeted K-means++, which is an expensive, but extremely
effective adversarial agent, and Indiscriminate K-means++, which
is slightly less powerful, but adds no overhead cost to the
attacker. With Targeted K-means++ we could compromise the
security of 40-70% of users within ten tries. In contrast, with
Indiscriminate K-means++,
the security of 30-50% of users
was compromised. Therefore, we conclude that while keystroke
dynamics has potential,
it is not ready for security critical
applications yet. Future keystroke dynamics research should use
such adversaries to benchmark the performance of the detection
algorithms, and design better algorithms to foil these. Finally, we
show that the K-means++ adversarial agent generalizes well to
even other types of behavioral biometrics data by applying it on
a dataset of touchscreen swipes.
I.
INTRODUCTION
Behavioral biometrics is the study of an individual’s unique
behavioral patterns, such as hand-writing, typing, or mouse
movements. It has been researched as a source of recognition,
and authentication, for a long time. For instance, handwriting
recognition began to be scientiﬁcally studied in the early twen-
tieth century [31], and keying patterns of telegraph operators
during World War II were used to identify them [36]. In its
modern incarnation, researchers have studied such techniques
in the context of keystrokes, mouse movements, smartphone
swipes, gait analysis and so on. Combined with an increased
access to behavioral
information using sensors on mobile
phones and other electronic devices, behavioral biometrics has
also seen a surge in real-world adoption.
Many banks already use typing information as an additional
layer of security [30], startups provide APIs for password
hardening [9], or even password-less logins [23], and Google
Research supported in part by Stanford Cyber Initiative and The Hewlett
Foundation
Network  and  Distributed  Systems  Security  (NDSS)  Symposium  2018 
18-21  February  2018,  San  Diego,  CA,  USA
ISBN  1-891562-49-5
http://dx.doi.org/10.14722/ndss.2018.23303
www.ndss-symposium.org
is developing methods to authenticate users on mobile devices
without passwords [20]. These behavioral biometrics such as
keystroke dynamics and touchscreen swipes are used as a
secondary authentication method along with primary authenti-
cation methods, such as password correctness.
The need for such secondary authentication methods have
become apparent with increasing awareness that human chosen
passwords are far from safe, [8], [10], [13], [16], [22]. It is
common practice to use additional layers of security, using
methods such as two factor authentication [17], but such
explicit methods are usually disruptive to the user. Behavioral
biometrics has the promise of being a second layer of au-
thentication that can be seamlessly integrated into the current
authentication systems - for instance, in keystroke dynamics,
the additional security layer would be based on the key-press
timings as the user enters his password. The authentication
system can then do an additional check in the background
without affecting the user experience.
Since keystroke dynamics is the most studied of the
behavioral biometric approaches, we focus on designing our
adversarial algorithms in that context. Moreover, we show that
such an adversarial agent can also be applied to a different
dataset involving touchscreen swipes.
We focus on a scenario where the attacker has access
to the user’s password, but needs to overcome a keystroke
dynamics based authentication layer. This can happen when
the authentication information of a website is leaked, and the
attacker gains access to the passwords for that website [8],
[10], [13], [22]. Then, the attacker would want to test whether
the same username and password is used on a sensitive (e.g.,
banking) website, but the bank may be utilizing keystroke
dynamics in its authentication system. Since, the information
for the keystroke dynamics models will probably be stored by
a different company, whose API the bank uses, such a data
breach is unlikely to compromise this information. The naive
approach for the adversary would be to manually type in the
password, or use an automated tool to send the key-presses.
Keystroke dynamics systems have been shown to be extremely
robust to such adversarial attempts.
Such a system can be bypassed if the attacker can access
the user’s typing data. This is possible using social engineering
techniques like luring the victim to a web-page, but it is another
attack model with different trade-offs, e.g., it reduces the attack
coverage considerably, as many users would avoid falling for
it.
In our attack model, the attacker has no other information
about the user besides the username and password. Thus, the
objective of the attacker is to bypass the authentication system
in as few tries as possible. In practice, the attacker could spread
his attempts over several weeks in order to bypass the website’s
restrictions, e.g., a limited number of login tries.
keystroke dynamics classiﬁers were developed there. In par-
ticular, we utilized the classiﬁers developed by the winner of
the competition, Vinnie Monaco [24], [25], along with some
of his key algorithmic techniques.
In this domain, past research has focused on a mode of
attack in which the attacker collects a large number of samples
of other users typing the same password, and utilize this data
to generate adversarial samples. In this scenario, we improved
upon the best known methods to generate samples by designing
an adversary, Targeted K-means++, which searches through
the space of potential samples much more efﬁciently. This
represents a serious vulnerability if such systems are used
to protect sensitive accounts. But it does justify the use of
behavioral biometrics as it requires the adversary to spend
additional resources in collecting samples from other people.
Therefore, next we designed a novel adversary, Indiscriminate
K-means++, that generates the adversarial samples from pre-
computed data from the general population. This diminishes
the value of behavioral biometrics as it does not impose any
additional costs on the attacker.
Along the way, we also collected a large dataset using
Amazon Mechanical Turk to test various hypotheses 1. We
found that our adversarial agents could bypass state of the art
classiﬁers within a few tries for a majority of the users.
The paper is structured as follows. In section two, we
provide an overview of the past behavioral biometrics research
and adversarial models that inspired ours. In section three,
we describe the datasets, and our adversaries along with the
intuition behind the attacks and analysis of their algorithms. In
section four, we present our experimental setup, which includes
a description of the protocols used, and the experimental
results. We conclude the paper in section ﬁve with a discussion
about our contributions and the future work that could beneﬁt
the ﬁeld of behavioral biometrics.
II. RELATED WORK
A. Behavioral Biometrics
Behavioral biometrics rely on patterns in user interactions
with input devices. Traditionally, these included keyboards,
[11], [15], [19], and mouse [2], [18], [38]. Now, modern
smartphones also provide an array of sensor information,
which can be used similarly to construct user proﬁles based on
touchscreen swipes [4], [14], gait analysis [12], [27], and other
metrics. These signals are collected from the legitimate user
and then analyzed at authentication time to verify the identity
of the user attempting to log in.
One of the landmark papers comparing many of the state
of the art algorithms in keystroke dynamics is [19]. In this
paper, the author published the results of different classiﬁcation
algorithms, along with the benchmark DSN dataset. Since
many subsequent papers in the ﬁeld have experimented based
on these results, we train many of the same classiﬁers, and
present our results on the benchmark DSN dataset as well.
The current state of the art for the classiﬁers is represented
by the Keystrokes Biometrices Ongoing Competition (KBOC)
[26]. Many new techniques to improve the performance of
1https://github.com/parimarjan/adversarial keystrokes/tree/master/datasets
In comparison to keystroke dynamics, touchscreen swipes
have not been studied much as a source of authentication.
Antal et al. [4] recently published a comprehensive analysis of
many classiﬁers, along with a standard dataset that had features
extracted from swipes on an Android platform. In this paper,
we closely follow the experimental setup and classiﬁers used
in [4] in order to train the classiﬁers based on touchscreen
swipes.
B. Adversarial Machine Learning
The ﬁeld of adversarial machine learning studies attacks
against machine learning algorithms. Machine learning meth-
ods have been designed by assuming various properties about
the underlying data (e.g., linear separability), but an adversarial
player may not necessarily abide by such assumptions, and
can actively attempt to foil the model. Adversarial algorithms
against machine learning based systems can be categorized
into a taxonomy based on three aspects:
1)
2)
3)
Inﬂuence: Causative vs. Exploratory: This deter-
mines if the attack is performed at
training time
(Causative) or test time (Exploratory).
Security violation: Integrity vs. Availability: This
determines whether the attack is aimed to allow
an attacker to bypass the system (Integrity) or to
block a legitimate user from accessing the system
(Availability).
Speciﬁcity: Targeted vs. Indiscriminate: This deter-
mines whether the attack is aimed at a particular data
point such as a particular user (Targeted), or is aimed
broadly at a population (Indiscriminate).
For further details on this taxonomy, please refer to the
overview paper by Barreno et al. [6]. The adversarial agents
we designed were inspired by the broader context of this
framework.
C. Adversarial biometrics
Even though there has been signiﬁcant amount of research
on behavioral biometrics, in particular keystroke dynamics,
very little research has focused on generating adversarial
samples to bypass such systems. A few papers [33], [37] have
studied adversarial attacks on keystroke dynamics assuming
they had access to varying amounts of the target user’s typing
data. As mentioned in the introduction, this is a different
attack scenario than the one studied in this paper. Also, in
the most common attack scenarios, such as when passwords
are leaked, it is unreasonable to expect the attacker to have
any information about the target user besides the username
and password.
Stefan et al. [35] and Serwadda et al. [1], [34] both studied
similar attack scenarios to this paper. Both these papers gener-
ated their adversarial samples using impostor data from other
users typing the same password as the target user. This is the
same scenario as the Targeted K-means++ adversary designed
in this paper. Stefan et al. used an adversary which attempted
2
to model the key-press timings as a Gaussian distribution. They
concluded that the classiﬁers were robust to such adversarial
samples. But it is difﬁcult to draw any conclusions from this
because they used very little data (around 20 users, and 35
samples per user for each password). They also provided a
systems level interface to record keystroke times of typing
patterns, and a way to inject adversarial timings into this
system. In contrast, we assume an attack scenario based on an
online model. This leads to differences in the data collection
phase. We also don’t focus on the process of injecting the
attacks into the web browser as this is a straightforward task
using automation tools.
Serwadda et al. [1] used a large dataset, which is not pub-
licly available, to study the same scenario. They designed an
adversarial agent called MasterKey. It generated the adversarial
samples by starting from the mean of impostor samples, and
perturbing values to explore the rest of the sample space of
possible key-press timing values. They found that just with a
single guess, an attacker is able to compromise the security of
approximately 5−30% of users. However, even after hundreds
of guesses, their solution could not break into a majority of
the users. In order to compare our algorithm to MasterKey,
we implemented a version of this attack as well. In the DSN
dataset, it actually performed even better than in the original
study. In Serwadda et al. [34],
they further expanded on
their work in [1]. In particular, they did extensive statistical
analysis of individual keystroke features. There conclusion
that the features follow independent probability distributions is
utilized by us when designing the Indiscriminate K-means++
adversary.
III. DATASETS AND METHODOLOGY
In this section, we present our adversarial attacks, and
provide the intuition behind their effectiveness. These details
require an understanding of the datasets, and features, involved,
so we start by presenting those in detail. Our extensive
experiments, presented later in this paper, empirically verify
the effectiveness of our attacks.
1) Datasets: We performed experiments with two existing
datasets, one on keystroke dynamics and one on touchscreen
swipes. We also collected a larger dataset of keystroke dy-
namics using Amazon Mechanical Turk. These datasets are
described below.
DSN Dataset: For the ﬁrst set of experiments we used the
dataset by Killourhy and Maxion [19], which consists of 51
users, each typing the same imposed password, “.tieRoanl”,
400 times each. DSN is a widely established dataset and
numerous papers have explored algorithms on it, thus making
it easy to compare different approaches and verify our own
results.
MTurk Dataset: We collected data of nearly 600 users typing
ﬁve common passwords (presented in Table I) 100 times
each. These passwords were chosen from a list of most
common passwords. Thus they are representative of the typical
passwords in the wild. A few of the motivating reasons behind
collecting this dataset were:
•
The DSN dataset used an uncommon and difﬁcult to
type password, “.tie5Roanl”. It is possible that the
3