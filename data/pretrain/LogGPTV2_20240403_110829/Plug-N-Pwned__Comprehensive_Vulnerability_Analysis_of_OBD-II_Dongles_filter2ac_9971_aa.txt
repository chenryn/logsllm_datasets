# Plug-N-Pwned: Comprehensive Vulnerability Analysis of OBD-II Dongles as a New Over-the-Air Attack Surface in Automotive IoT

**Authors:**
- Haohuang Wen, Ohio State University
- Qi Alfred Chen, University of California, Irvine
- Zhiqiang Lin, Ohio State University

**Publication:**
- [Proceedings of the 29th USENIX Security Symposium](https://www.usenix.org/conference/usenixsecurity20/presentation/wen)
- August 12–14, 2020
- ISBN: 978-1-939133-17-5
- Open access sponsored by USENIX

## Abstract

With the growing trend of the Internet of Things (IoT), a large number of wireless OBD-II dongles have been developed. These dongles can be easily plugged into vehicles to enable remote functions such as sophisticated vehicle control and status monitoring. However, since these dongles are directly connected to in-vehicle networks, they may open a new over-the-air attack surface for vehicles. In this paper, we conduct the first comprehensive security analysis on all wireless OBD-II dongles available on Amazon in the US in February 2019, totaling 77 devices. To systematically perform the analysis, we design and implement an automated tool, DONGLESCOPE, which dynamically tests these dongles from all possible attack stages on a real automobile. Using DONGLESCOPE, we identified five different types of vulnerabilities, with four being newly discovered. Our results reveal that each of the 77 dongles exposes at least two types of these vulnerabilities, indicating a widespread vulnerability exposure among wireless OBD-II dongles on the market today. To demonstrate the severity, we construct four classes of concrete attacks with various practical implications, such as privacy leakage, property theft, and even safety threats. We also discuss the root causes and feasible countermeasures, and have made corresponding responsible disclosures.

## 1. Introduction

On-Board Diagnostics (OBD) is a standard widely adopted for automobiles to self-diagnose and report their internal working status, such as voltage, fuel level, and speed. As the latest and most popular OBD standard, OBD-II is universally deployed in gasoline vehicles in the US after 1996 for mandated emission inspection. With the growing trend of the Internet of Things (IoT), a large number of wireless OBD-II dongles have been developed, enabling vehicle owners to conveniently perform remote vehicle functions from companion mobile apps, ranging from simple status monitoring and diagnosis to sophisticated vehicle control, such as disabling remote unlocking or seat-belt warnings.

While wireless OBD-II dongles provide rich functions and great convenience, their usage exposes a wireless entry to the internal vehicle systems from the external world, which inevitably brings security concerns. On one hand, OBD-II dongles are connected to the in-vehicle Control Area Network (CAN) buses to fetch diagnostic data through the OBD-II port. On the other hand, they interact with external companion apps via wireless networks to transfer data and commands. If not properly designed with security principles and practices, these dongles may enable a series of new over-the-air vehicle attack vectors, compromising not only user property and privacy but also the safety of drivers, passengers, and pedestrians. For example, in 2017, it was found that vulnerabilities on a Bosch Drivelog Connector OBD-II dongle enabled a nearby attacker to remotely shut down the engine while the vehicle was still in motion. This dongle was soon removed from the market. As of today, there are still many OBD-II dongles available on the market, which are popular among drivers, repair technicians, and auto insurance companies. However, whether these dongles are vulnerable to remote or nearby attacks remains unknown to the public.

To fill this knowledge gap, in this paper, we conduct the first comprehensive security analysis on all wireless OBD-II dongles available on Amazon in the US in February 2019, totaling 77 devices. To systematically perform the analysis, we first define the attack surface based on the stages of how a remote or nearby attack could use the CAN bus through wireless OBD-II dongles: broadcast, connection, and communication. Next, we design and implement an automated tool, DONGLESCOPE, capable of dynamically testing potential vulnerabilities at all these stages with a dongle under test plugged into the OBD-II port on a real automobile, assisted by companion mobile app analysis to reverse-engineer the intended messages to these dongles, which are used to design test messages in the communication stage.

Through intensive experiments on these 77 dongles, we identified five different types of vulnerabilities across the three attack stages, with four being newly discovered. Among the 77 dongles, we find that each of them exposes at least two types of these vulnerabilities across the three stages, indicating a widespread vulnerability exposure among wireless OBD-II dongles on the market today. Specifically, we find that around 85% of these dongles have neither connection-layer nor application-layer authentication, essentially providing a nearby attacker with arbitrary access to the CAN bus once they are discovered in the broadcast stage. We further discover that 29 (37.66%) dongles are vulnerable to such malicious access even when the vehicle owner’s mobile device is connected to them. In the communication stage, we find that 52 (67.53%) dongles fail to filter out CAN bus messages with functions unsupported in the dongles, meaning that attackers can send safety-critical vehicle control commands, e.g., gear shifting, even when the attacked dongle is originally designed only for diagnostic purposes. Even worse, a few dongles are vulnerable to over-the-air dongle firmware subverting or extraction. Last but not least, the aforementioned vulnerability can be fingerprinted using broadcast information for nearly half (42.86%) of the dongles, allowing nearby attackers to conveniently pinpoint which dongles to attack and how to attack them over the air.

To demonstrate the severity of these vulnerabilities, we further construct four classes of concrete attacks building upon these vulnerabilities and validate them on our testing automobile. These attacks can lead to a wide range of practical implications, including privacy leakage, property theft, and even safety threats to drivers, passengers, and pedestrians. Among the 77 dongles we collected, 84% of them are vulnerable to at least one of these four attack classes, and nearly 60% are vulnerable to at least three.

The analysis results in this paper evidently point out a general and systematic lack of security protection in wireless OBD-II dongles today, which is known for IoT devices in home settings but for the first time comprehensively revealed and quantified for those in the vehicle setting. Since the vehicle setting is safety-critical, one would expect that its IoT devices have more scrutinized security practices. However, based on our results, this is very unfortunately not the case today. To proactively address this, we leverage the insights in our analysis to discuss the root causes and feasible countermeasures, and meanwhile, we have already made responsible disclosures to the corresponding dongle manufacturers. As IoT devices are increasingly used in safety-critical domains such as automobiles, we expect that our domain-specific findings and their security/safety implications can send a strong and timely message to start developing and deploying principled security designs in these critical application domains for the IoT.

### Contributions

In short, we make the following contributions in this paper:

- **Comprehensive Vulnerability Analysis:** We conduct the first comprehensive security analysis on all wireless OBD-II dongles available on Amazon in the US in February 2019. Targeting the threat model of over-the-air vehicle attacks, we systematically identify the attack surface as attack vectors across three necessary attack stages: broadcast, connection, and communication. We design and implement an automated tool, DONGLESCOPE, capable of dynamically detecting potential vulnerabilities at these three stages with a real automobile.
  
- **Vulnerability Discovery and Quantification:** With DONGLESCOPE, we systematically analyzed the 77 dongles we collected and identified five types of vulnerabilities across the three attack stages, with four being newly discovered. Our results show that each of the 77 dongles has at least two vulnerabilities exposed across the three stages, indicating a widespread vulnerability exposure among wireless OBD-II dongles on the market today.
  
- **Attack Case-Study Construction:** To demonstrate the severity of the identified vulnerabilities, we further construct four classes of concrete attacks building upon these vulnerabilities and validate them on a testing automobile. These attacks can lead to a wide range of practical implications, including privacy leakage, property theft, and even safety threats to drivers, passengers, and pedestrians. We also discuss the root causes and feasible countermeasures and have made responsible disclosures to the corresponding dongle manufacturers.

### Roadmap

The rest of this paper is organized as follows:
- §2 introduces the necessary background related to the Control Area Network (CAN) and OBD-II dongles.
- §3 describes the attack model.
- §4 presents the detailed design and implementation of DONGLESCOPE.
- §5 presents the vulnerability analysis results.
- §6 provides the attack case studies.
- §7 discusses the root causes and feasible countermeasures.
- §8 reviews related works.
- §9 concludes the paper.

## 2. Background

### 2.1 Control Area Network (CAN)

Automobiles are no longer isolated mechanical devices but sophisticated computer systems with a large number of Electronic Control Units (ECUs) responsible for different capabilities such as steering, braking, and accelerating. These ECUs form a complex network with a massive number of messages transferring back and forth at any time. To ensure that such a complex system works properly, an in-vehicle network is necessary to coordinate the transfer of messages between these ECU components.

The Control Area Network (CAN) bus is the most ubiquitous message-based protocol deployed in modern vehicles today. In this network, ECUs are mutually connected with a bus system, constantly broadcasting and listening to CAN bus messages. The structure of a CAN bus message is shown in Figure 1. The identifier and the data field in a CAN bus message determine the function of the message. The identifier consists of 11 or 29 bits, indicating the sender ECU of the message (e.g., 0x191 represents the transmission system ECU). The data field contains up to 8 bytes, storing the state parameters of the sender ECU (e.g., the third byte of data represents the engine speed).

### 2.2 OBD-II Dongles and Companion Apps

**OBD-II Dongles:**
OBD-II is a high-level communication protocol (a "language") on top of the CAN bus, offering diagnostic capability for vehicle owners, repair technicians, and auto insurance companies, such as monitoring the speed and fuel of an automobile. Since 1996, it has been mandated on each gasoline automobile by the US government. Nowadays, most vehicles have a diagnostic port installed under the steering wheel, which connects to the CAN bus and delivers CAN bus messages. As a message-based protocol, special OBD-II messages are defined to convey diagnostic information, known as the OBD-II Parameter IDs (PIDs). Unlike highly customized CAN bus messages defined by specific vehicle manufacturers, these OBD-II PIDs are standardized. Moreover, as a kind of CAN bus message, PID has a similar structure as shown in Figure 1. Each PID for query uses 0x7DF as the identifier, and the data field contains a service number and a PID number. In addition to these universal PIDs, manufacturers may also define private PIDs. Based on the OBD-II standard, a large number of OBD-II dongles have been developed for car diagnosis, such as monitoring the speed, fuel, and engine status. After being plugged into the OBD-II port, these dongles can constantly send CAN bus messages to query diagnostic data from the CAN bus.

Among all available OBD-II dongles on the market today, wireless dongles are the most dominant type, as they provide great convenience while offering a decent price to users. When in use, they serve as endpoints for nearby mobile devices to connect and communicate via wireless networks such as Wi-Fi, Bluetooth Classic, and BLE. As a result, there are also companion mobile apps for these dongles. In this paper, our vulnerability analysis focuses on wireless dongles, as they allow wireless access to the OBD-II port and thus are more realistic targets for attackers. Figure 2 shows the 77 wireless dongles we purchased in this research.

**Companion Mobile Apps:**
Since wireless OBD-II dongles do not have user interfaces such as screens and keyboards, they rely on external devices to make them usable and user-friendly. Consequently, their manufacturers or third-party developers have developed corresponding companion mobile apps. With such a companion app, it is easy and convenient to monitor the status of an automobile. First, a user plugs the dongle into the OBD-II port located under the steering wheel and starts the engine. Second, she opens the companion mobile app and establishes a connection via the wireless network hosted by the dongle. Afterwards, the user can monitor the vehicle status from the app UI, and the app automatically interacts with the dongle, which queries the vehicle status data from the CAN bus and delivers vehicle control commands if there are any to the CAN bus.

## 3. Attack Model and Attack Surface

### 3.1 Attack Model

In this paper, the attacker's goal is to exploit the new vehicle attack surface exposed by emerging wireless OBD-II dongles and achieve wireless attacks onto the CAN bus of a victim vehicle. As introduced in §2, wireless OBD-II dongles operate as wireless endpoints for surrounding devices to connect and communicate. Therefore, the attacker must be within the range of the wireless network to establish a connection with the target dongle, which is usually up to 100 meters. However, with an amplifier, an attacker can detect wireless signals at a remote distance (e.g., up to 1,000 meters using the BLE Antenna as demonstrated in BleScope), enabling her to discover and approach the victim to perform attacks.

The general threat model is presented in Figure 3. Before the attack, the first but very important step is to identify a nearby OBD-II dongle in the air. Afterwards, the attacker tries to initiate a connection with it through the wireless network. If the connection is successfully established, she then attempts to attack the vehicle by injecting malicious messages to the CAN bus through the OBD-II dongle, e.g., reading sensitive data or causing unsafe vehicle driving behaviors. The attack is successful if the messages are successfully delivered by the dongle to the CAN bus and the corresponding attack consequences are triggered. There is no specific constraint on when to conduct the attack. For example, an attacker may compromise vehicles that are still driving on the road with the driver and other passengers on board. Moreover, since an OBD-II dongle can still receive power supply from the OBD-II port even when the vehicle is off, the attacker can even target vehicles parked in a parking lot, where she has a chance to sneak into the vehicle and steal belongings. Some CAN bus messages with more direct safety consequences, e.g., stopping the engine, will be disabled when the vehicle is moving at a high speed. Thus, if these messages are required for achieving a certain attack goal, the attacker may need to wait until the vehicle is stationary.

### 3.2 Attack Surface

The attack surface of OBD-II dongles can be divided into three stages: broadcast, connection, and communication.

- **Broadcast Stage:** In this stage, the OBD-II dongle broadcasts its presence to indicate its willingness to connect. Nearby devices can discover and recognize it and try to establish a connection. As a nearby attacker, she can collect this broadcast information and identify a victim dongle and establish a connection based on the information.
- **Connection Stage:** In this stage, the attacker's task is to successfully establish a network connection with the dongle to send commands related to CAN bus message delivery. When establishing the connection, the attacker may be required to provide sufficient credentials, such as a password or PIN code. If no credentials are needed, the attacker can arbitrarily connect to the dongle.
- **Communication Stage:** After the connection is established, the attacker can send unauthorized CAN bus messages to communicate with the dongle and perform attacks. Prior to that, she may need to bypass the authentication step in the communication protocol between the app and the dongle. After that, the attacker sends the desired CAN bus messages to the dongle, requesting it to relay the messages to the CAN bus to trigger corresponding consequences. In this paper, we call the CAN bus messages that perform the designed functions of a dongle "predefined messages" and the others "undefined messages." The former is allowed by design and should be directly relayed to the CAN bus. However, the designed dongle functions can be quite limited, e.g., only diagnostic functions. Therefore, for certain attack goals, e.g., those that are safety-related, it is of interest to inject undefined messages (e.g., those that interfere with vehicle control). However, since these messages are not allowed by design, whether the attack can succeed depends on the message filtering process at the dongle side.

## 4. Analysis Methodology

Having identified the attack surface of OBD-II dongles, we design and implement an automated tool, named DONGLESCOPE, to measure a few objectives that can lead to vulnerabilities in wireless OBD-II dongles across broadcast, connection, and communication stages. In this section, we first introduce the design overview and the measurement objectives for each stage in §4.1. We then detail the design and implementation of our tool in §4.2.

### 4.1 Overview

Figure 4 presents the workflow of DONGLESCOPE. At a high level, it dynamically tests an OBD-II dongle on a real automobile and also takes the corresponding companion mobile app for static analysis. The analysis is broken down into four main components associated with the three attack stages. For the source code of DONGLESCOPE, see [GitHub repository](https://github.com/OSUSecLab/DongleScope).

### 4.2 Design and Implementation

#### 4.2.1 Broadcast Stage Analysis

In the broadcast stage, DONGLESCOPE captures the broadcast information from the OBD-II dongle. This information includes the device name, MAC address, and other identifying details. The tool analyzes this information to determine if the dongle can be uniquely identified and targeted by an attacker.

#### 44.2.2 Connection Stage Analysis

In the connection stage, DONGLESCOPE attempts to establish a connection with the OBD-II dongle. It checks if the dongle requires any credentials for connection and if it allows arbitrary connections without authentication. The tool also evaluates the strength of the authentication mechanism, if present.

#### 4.2.3 Communication Stage Analysis

In the communication stage, DONGLESCOPE sends predefined and undefined CAN bus messages to the OBD-II dongle. It evaluates whether the dongle filters out undefined messages and if it allows the relaying of potentially harmful messages to the CAN bus. The tool also checks if the dongle firmware can be subverted or extracted over the air.

## 5. Vulnerability Analysis Results

Through intensive experiments on the 77 OBD-II dongles, we identified five different types of vulnerabilities across the three attack stages, with four being newly discovered. Among the 77 dongles, we find that each of them exposes at least two types of these vulnerabilities across the three stages, indicating a widespread vulnerability exposure among wireless OBD-II dongles on the market today. Specifically, we find that around 85% of these dongles have neither connection-layer nor application-layer authentication, essentially providing a nearby attacker with arbitrary access to the CAN bus once they are discovered in the broadcast stage. We further discover that 29 (37.66%) dongles are vulnerable to such malicious access even when the vehicle owner’s mobile device is connected to them. In the communication stage, we find that 52 (67.53%) dongles fail to filter out CAN bus messages with functions unsupported in the dongles, meaning that attackers can send safety-critical vehicle control commands, e.g., gear shifting, even when the attacked dongle is originally designed only for diagnostic purposes. Even worse, a few dongles are vulnerable to over-the-air dongle firmware subverting or extraction. Last but not least, the aforementioned vulnerability can be fingerprinted using broadcast information for nearly half (42.86%) of the dongles, allowing nearby attackers to conveniently pinpoint which dongles to attack and how to attack them over the air.

## 6. Attack Case Studies

To demonstrate the severity of the identified vulnerabilities, we constructed four classes of concrete attacks and validated them on our testing automobile. These attacks can lead to a wide range of practical implications, including privacy leakage, property theft, and even safety threats to drivers, passengers, and pedestrians. Among the 77 dongles we collected, 84% of them are vulnerable to at least one of these four attack classes, and nearly 60% are vulnerable to at least three.

### 6.1 Privacy Leakage

We demonstrated that an attacker can read sensitive data from the CAN bus, such as vehicle identification numbers (VINs), GPS coordinates, and personal information stored in the vehicle's infotainment system. This data can be used for identity theft, tracking, and other malicious purposes.

### 6.2 Property Theft

We showed that an attacker can unlock the vehicle doors and disable the alarm system, allowing physical access to the vehicle. This can lead to the theft of personal belongings and the vehicle itself.

### 6.3 Safety Threats

We demonstrated that an attacker can send safety-critical vehicle control commands, such as gear shifting, brake activation, and engine shutdown. These actions can cause the vehicle to lose control, leading to accidents and injuries.

### 6.4 Firmware Subversion

We showed that an attacker can subvert the firmware of the OBD-II dongle, allowing persistent control over the device and the ability to execute arbitrary commands. This can lead to long-term compromises and further attacks.

## 7. Discussion

### 7.1 Root Causes

The widespread vulnerability exposure among wireless OBD-II dongles can be attributed to several root causes, including:

- **Lack of Security by Design:** Many OBD-II dongles are designed with a focus on functionality and convenience, often neglecting security best practices.
- **Weak Authentication Mechanisms:** Most dongles lack robust authentication mechanisms, making it easy for attackers to establish connections and send unauthorized commands.
- **Insufficient Message Filtering:** Many dongles do not filter out undefined CAN bus messages, allowing attackers to send harmful commands.
- **Firmware Vulnerabilities:** Some dongles have vulnerabilities in their firmware, allowing attackers to subvert or extract the firmware over the air.

### 7.2 Feasible Countermeasures

To address these vulnerabilities, we propose the following countermeasures:

- **Implement Strong Authentication:** OBD-II dongles should require strong, multi-factor authentication for all connections, including passwords, PIN codes, and biometric verification.
- **Enhance Message Filtering:** Dongles should implement robust message filtering to block undefined and potentially harmful CAN bus messages.
- **Secure Firmware Updates:** Manufacturers should implement secure firmware update mechanisms to prevent over-the-air subversion and extraction.
- **Regular Security Audits:** Regular security audits and penetration testing should be conducted to identify and mitigate vulnerabilities in OBD-II dongles.

## 8. Related Works

Several studies have focused on the security of OBD-II dongles and automotive IoT devices. However, our work is the first to conduct a comprehensive security analysis of all wireless OBD-II dongles available on Amazon in the US, covering all three attack stages and identifying both known and newly discovered vulnerabilities. Our work also provides a detailed methodology and tool (DONGLESCOPE) for analyzing the security of OBD-II dongles, which can be used by researchers and manufacturers to improve the security of these devices.

## 9. Conclusion

In this paper, we conducted the first comprehensive security analysis of all wireless OBD-II dongles available on Amazon in the US in February 2019. We identified five different types of vulnerabilities, with four being newly discovered. Our results reveal a widespread vulnerability exposure among wireless OBD-II dongles on the market today. We constructed four classes of concrete attacks to demonstrate the severity of these vulnerabilities and discussed the root causes and feasible countermeasures. We have also made responsible disclosures to the corresponding dongle manufacturers. As IoT devices are increasingly used in safety-critical domains such as automobiles, our domain-specific findings and their security/safety implications can send a strong and timely message to start developing and deploying principled security designs in these critical application domains for the IoT.