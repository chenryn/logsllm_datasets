# 优化后的文本

## 直接路径验证结果

- **往返时间 (RTT, ms)**
  - 100
  - 200
  - 300
  - 400
  - 500
- **丢包率 (%)**
  - 0
  - 2
  - 4
  - 6
  - 8
  - 10

### 图 5. 直接路径验证结果
- **(a) 延迟比较**
- **(b) 丢包率比较**
- **(c) 丢包率差异**

## PlanetLab 验证结果

- **直接 RTT (ms)**
  - 100
  - 200
  - 300
- **丢包率 (%)**
  - 0
  - 2
  - 4
  - 6
  - 8
  - 10

### 图 6. PlanetLab 验证结果
- **(a) 延迟比较**
- **(b) 丢包率比较**
- **(c) 丢包率差异**

在超过 80% 的路径上，两种方法的绝对丢包率差异在 1% 以内。iPlane 在本次实验中对所有路径返回的丢包率为零，这与 Queen 和实际测量值相差甚远。

## 4.2 PlanetLab 验证

在这组实验中，我们使用 PlanetLab (PL) 进行验证（如图 4(b) 所示）。类似于 4.1 节，我们再次并行运行两种类型的探测，并保持相同的模式。不同之处在于：在直接探测中，我们在一个 PL 节点上运行 UDP 探测客户端，在另一个 PL 节点上运行 UDP 回显服务器，以获取实际丢包率。我们找到两个附近的 DNS 服务器（例如，距离不超过 5ms），每个 PL 节点对应一个，并估计它们之间的丢包率。我们将两种方法估计的丢包率进行比较，以查看它们是否一致。在这个验证集中，通过 Queen 估计丢包率的路径与直接探测估计的路径略有不同——前者是两个名称服务器之间的路径，后者是两个 PL 节点之间的路径。

我们选择了 5 个具有递归本地 DNS 服务器的 PL 节点作为源节点。每个源节点从不同大陆选择约 70 个目标 PL 节点。我们获得了约 260 条路径的结果，其中 200 条路径在 UDP 探测或 Queen 中显示丢包。图 6 描述了这些结果。同样，两种延迟和丢包率匹配得很好。特别是，两种方法之间的绝对丢包率差异在超过 85% 的路径上在 1% 以内。同时，iPlane 对所有路径返回的丢包率为零，这与 Queen 和实际测量值相差甚远。

先前的研究 [15] 表明，小的 40 字节探测包比大的 1000 字节探测包经历的丢包率更低。由于 Queen 生成的查询包最多为 280 字节（受 DNS 主机名最大长度 255 字节的限制），这引起了 Queen 可能低估真实丢包率的担忧。为了研究这个问题，我们并行重新运行了不同的探测大小（80B、160B 和 240B）的相同验证。我们观察到，包大小实际上对丢包率影响很小。此外，我们将直接 UDP 探测的包大小（80B、240B 和 1200B，接近 MTU）进行了比较，发现包大小对丢包率的影响也非常小（细节因篇幅限制省略）。

## 实验

在验证我们的方法具有较高的准确性后，我们对全球范围内的大面积地理区域进行了丢包率测量。

### 5.1 测量设置

我们从公开的递归 DNS 服务器列表中为每个国家选择一个服务器，并测量每对服务器之间的丢包率。最终数据集覆盖了 6 个大洲和 147 个国家，共有 10,731 条路径。完整的测量涉及大量的路径。在每条路径上，Queen 发送查询探测包，其平均间隔时间为 500 毫秒，持续 15 分钟，使其相关计数过程呈泊松分布。为了加快测量过程，我们开发了一个分布式执行平台，将完整任务拆分成许多较小的任务，分散到 PL 节点上并并行执行。该平台帮助快速完成测量（例如，使用 300 个 PL 节点和 10,000 条路径，每个节点只需运行 33 个任务，整个任务需要稍多于 8 小时才能完成）。

### 5.2 结果总结

我们将采样的服务器按大洲分组，并分析各大洲内/跨大洲的丢包率。图 7(a) 显示了各大洲内的丢包率统计数据，图 7(b) 显示了跨大洲的丢包率统计数据。一些结果是直观的——北美和欧洲无论是在大洲内部还是跨大洲都具有较低的丢包率。这显然是由于这两个地区的良好网络基础设施和连接性。此外，北美和欧洲在大洲内部的丢包率总是低于跨大洲的丢包率。尽管不太直观，但我们还观察到，对于其他大洲，跨大洲到北美或欧洲的丢包率实际上低于大洲内部的丢包率。我们认为，这反映了北美和欧洲目前是互联网的主要枢纽。

## 6 相关工作

对互联网丢包率的研究可以追溯到十多年前。这项研究旨在了解互联网本身及其对应用程序性能的影响 [13,14]。不断有努力提高丢包率估计的准确性 [12]。工具 [15] 开发了利用丢包率来排查路径故障的方法。所有这些工作都依赖于发送主动的 UDP/ICMP 探测包，因此需要控制路径的一端或两端。

iPlane [1] 是唯一能够不需访问任何一端即可估计丢包率的其他工具。它通过以下方式构建注释的互联网地图：(i) 从大量各种有利位置（如 PlanetLab 节点和 traceroute 服务器）发送探测包；(ii) 根据响应源地址或返回的 TTL 将接口聚类到 PoP。通过收集所有探测包并处理测量数据，它表征了测量拓扑中所有互连链路的丢包率。然后，它可以通过组合路径上每个段链路的丢包率间接预测一对终端主机之间的丢包率。然而，iPlane 的覆盖范围有限，如果路径的任一端不在数据库中，则无法提供丢包率。因此，它并没有真正提供任意两台终端主机之间的丢包率，因为它仍然需要一端的贡献。此外，它不能按需进行测量。

## 7 结论

本文介绍了 Queen，一种无需控制任何一端即可估计任意互联网终端主机之间丢包率的工具。我们用两个不同的数据集验证了 Queen，结果显示我们的方法具有相当高的准确性。我们使用 Queen 进行了一次全网实验，提供了有价值的结果和真实的互联网特征。

## 参考文献

1. Madhyastha, H.V., Isdal, T., Piatek, M., Dixon, C.: iPlane: An Information Plane for Distributed Services. In: USENIX OSDI (2006)
2. Gummadi, K.P., Saroiu, S., Gribble, S.D.: King: Estimating Latency between Arbitrary Internet End Hosts. In: ACM SIGCOMM IMW (2002)
3. EdgePlatform, Akamai Inc., http://www.akamai.com/html/technology/index.html
4. Andersen, D.G., Balakrishnan, H., Kaashoek, M.F., Morris, R.: Resilient Overlay Networks. In: ACM SOSP (2001)
5. Yang, H.-Y., Lee, K.-H., Ko, S.-J.: Communication quality of voice over TCP used for firewall traversal. In: ICME (2008)
6. Huang, C., Wang, A., Li, J., Ross, K.W.: Understanding Hybrid CDN-P2P: Why Limelight Needs Its Own RedSwoosh. In: NOSSDAV (2008)
7. Ng, T.S.E., Zhang, H.: Predicting Internet Network Distance with Coordinates-Based Approaches. In: IEEE INFOCOM (2002)
8. Keynote Global Test and Measurement Network, Keynote Inc., http://www.keynote.com/company/keynote_network/methodology.html
9. Dabek, R., Cox, R., Kaashoek, M.R., Morris, R.: Vivaldi: A Decentralized Network Coordinate System. In: ACM SIGCOMM (2004)
10. Ledlie, J., Gardner, P., Seltzer, M.: Network Coordinates in the Wild. In: USENIX NSDI (2007)
11. White, B., et al.: An Integrated Experimental Environment for Distributed Systems and Networks. In: USENIX OSDI (2002)
12. Sommers, J., Barford, P., Duffield, N., Ron, A.: Improving Accuracy in End-to-end Packet Loss Measurement. In: ACM SIGCOMM (2005)
13. Paxson, V.: End-to-end Routing Behavior in the Internet. In: ACM SIGCOMM (1997)
14. Bolot, J.C.: End-to-end Packet Delay and Loss Behavior in the Internet. In: ACM SIGCOMM (1993)
15. Mahajan, R., Spring, N., Wetherall, D., Anderson, T.: User-level Internet Path Diagnosis. In: ACM SOSP (2003)