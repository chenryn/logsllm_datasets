Coordinated and Efficient Huge Page Management
with Ingens
Youngjin Kwon, Hangchen Yu, and Simon Peter, The University of Texas at Austin;
Christopher J. Rossbach, The University of Texas at Austin and VMware; Emmett Witchel,
The University of Texas at Austin
https://www.usenix.org/conference/osdi16/technical-sessions/presentation/kwon
This paper is included in the Proceedings of the
12th USENIX Symposium on Operating Systems Design
and Implementation (OSDI ’16).
November 2–4, 2016 • Savannah, GA, USA
ISBN 978-1-931971-33-1
Open access to the Proceedings of the
12th USENIX Symposium on Operating Systems
Design and Implementation
is sponsored by USENIX.
Coordinated and Efficient Huge Page Management with Ingens
YoungjinKwon, HangchenYu, SimonPeter, ChristopherJ.Rossbach1, EmmettWitchel
TheUniversityofTexasatAustin
1TheUniversityofTexasatAustinandVMwareResearchGroup
Abstract multi-dimensionalpagetablesamplifyworst-casetrans-
lationcostsby6×[59]. Hardwaremanufacturershave
ModerncomputingishungryforRAM,withtoday’senor-
addressedincreasingDRAMcapacitywithbettersupport
mouscapacitieseagerlyconsumedbydiverseworkloads.
forlargerpagesizes,orhugepages,whichreduceaddress
Hardwareaddresstranslationoverheadshavegrownwith
translationoverheadsbyreducingthefrequencyofTLB
memorycapacity,motivatinghardwaremanufacturersto
misses. However,thesuccessofthesemechanismsiscrit-
provide TLBs with thousands of entries for large page
icallydependentontheabilityoftheoperatingsystems
sizes(calledhugepages). Operatingsystemsandhypervi-
andhypervisorstomanagehugepages.
sorssupporthugepageswithahodge-podgeofbest-effort
Whilehugepageshavebeencommonlysupportedin
algorithmsandspotfixesthatmadesenseforarchitectures
hardwaresincethe90s[75,76],untilrecently,processors
withlimitedhugepagesupport,butthetimehascomefor
havehadaverysmallnumberofTLBentriesreserved
amorefundamentalredesign.
forhugepages,limitingtheirusability. Newerarchitec-
Ingensisaframeworkforhugepagesupportthatre-
turessupportthousandsofhugepageentriesindual-level
lies on a handful of basic primitives to provide trans-
TLBs(e.g.,1,536inIntel’sSkylake[1]),whichisamajor
parent huge page support in a principled, coordinated
change: theonusofbetterhugepagesupporthasshifted
way. Bymanagingcontiguityasafirst-classresourceand
fromthehardwaretothesystemsoftware. Thereisnow
bytrackingutilizationandaccessfrequencyofmemory
both an urgent need and an opportunity to modernize
pages, Ingens is able to eliminate a number of fairness
memorymanagement.
andperformancepathologiesthatplaguecurrentsystems.
Experimentswithourprototypedemonstratefairnessim- Operatingsystemmemorymanagementhasgenerally
provements,performanceimprovements(upto18%),tail- respondedtohugepagehardwarewithbest-effortalgo-
latencyreduction(upto41%),andreductionofmemory rithmsandspotfixes,choosingtokeeptheirmanagement
bloatfrom69%tolessthan1%forimportantapplications algorithmsfocusedonthe4KBpage(whichwecallabase
likeWebservices(e.g.,theCloudstonebenchmark)and page). Forexample,LinuxandKVM(Linux’sin-kernel
theRediskey-valuestore. hypervisor)adequatelysupportmanylarge-memorywork-
loads(i.e.,oneswithsimple,staticmemoryallocationbe-
1 Introduction
havior),butavarietyofcommonworkloadsareexposed
Modern computing platforms can support terabytes of tounacceptableperformanceoverheads,wastedmemory
RAMandworkloadsabletotakeadvantageofsuchlarge capacity,andunfairperformancevariabilitywhenusing
memories are now commonplace [51]. However, in- huge pages. These problems are common and severe
creased capacity represents a significant challenge for enoughthatadministratorsgenerallydisablehugepages
addresstranslation. Allmodernprocessorsusepageta- (e.g.,MongoDB,Couchbase,Redis,SAP,Splunk,etc.)
bles for address translation and TLBs to cache virtual- despite their obvious average-case performance advan-
to-physical mappings. Because TLB capacities cannot tages [24, 9, 11, 30, 26, 32, 34, 37]. Other operating
scaleatthesamerateasDRAM,TLBmissesandaddress systemshavesimilarorevenmoresevereproblemssup-
translationcanincurcripplingperformancepenaltiesfor portinghugepages(see§2.2and§3.4).
largememoryworkloads[44,53]whentheseworkloads Ingens1isamemorymanagerfortheoperatingsystem
usetraditionalpagesizes(i.e.,4KB).Hardware-supported andhypervisorthatreplacesthebest-effortmechanisms
addressvirtualization(e.g.,AMD’snestedpagetables)in-
creasesaverage-caseaddresstranslationoverheadbecause 1IngensisLatinforhuge.
USENIX Association 12th USENIX Symposium on Operating Systems Design and Implementation 705
andspot-fixesofthepastwithacoordinated,unifiedap- recentlyusedpagetableentriescachedinthehardware
proach to huge pages; one that is better targeted to the translationlookasidebuffer(TLB).Increasingthepage
increased TLB capacity in modern processors. Ingens sizeincreasesTLBreach(theamountofdatacoveredby
doesnotinterferewithworkloadsthatperformwellwith translationscachedintheTLB),butlargerpagesrequire
currenthugepagesupport: theprototypeadds0.7%over- larger regions of contiguous physical memory. Large
headonaverage(Table4).Ingensaddressesthefollowing pagescansufferfrominternalfragmentation(unusedpor-
problemsendemictocurrenthugepagesupport,andwe tionswithintheunitofallocation)andcanalsoincrease
quantifytheimpactoftheseproblemsonrealworkloads external fragmentation (reducing the remaining supply
usingourprototype. ofcontiguousphysicalmemory). Usinglargerpagesre-
• Latency. Huge pages expose applications to high quiresmoreactivememorymanagementfromthesystem
latencyvariationandincreasedtaillatency(§3.1). Ingens softwaretoincreaseavailablecontiguityandavoidfrag-
improvestheCloudstonebenchmark [77]by18%and mentation.
reduces90thpercentiletail-latencyby41%.
Seminalworkinhugepagemanagementrecognized
• Bloat. Huge pages can make a process or virtual theimportanceofexplicitlymanagingmemorycontiguity
machine(VM)occupyalargeamountofphysicalmemory intheOS[68]andformedthebasisforhugepagesupport
while much of that memory remains unusable due to inFreeBSD.InnovationsofIngensrelativetoprevious
internal fragmentation (§3.2). For Redis, Linux bloats work are considered in detail in Section 3.4; here we
memoryuseby69%,whileIngensbloatsbyjust0.8%. survey recent hardware trends that make the need for
• Unfairness. Simple, greedy allocation of huge systemsupportofhugepagesmoreurgent.
pagesisunfair,causinglargeandpersistentperformance
variationacrossidenticalprocessesorVMs(§3.5).Ingens
DRAM Growth. Larger DRAM sizes have led to
makeshugepageallocationfair(e.g.,Figure5).
deeper page tables, increasing the number of memory
• High-performancememorysavings. Servicesthat
referencesneededtolookupavirtualpagenumber. x86
reducememoryconsumption,suchaskernelsame-page
usesa4-levelpagetablewithaworstcaseoffourpage
merging(KSM),canpreventaVMfromusinghugepages
tablememoryreferencestoperformasingleaddresstrans-
(§3.6). Ononeworkload(Figure11),Linuxsaves9.2%
lation.
of memory but slows down the programs by 6.8–19%.
Ingenssaves71.3%ofthememorythatLinux/KVMcan
Hardwarememoryvirtualization. Extendedpageta-
savewithonlya1.5–2.6%slowdown.
bles (Intel) or nested page tables (AMD) require addi-
Ingensisamemorymanagementredesignthatbrings
tionalindirectionforeachstageofmemoryaddresstrans-
performance,memorysavingsandfairnesstomemory-
lation, making the process of resolving a virtual page
intensive applications with dynamic memory behavior.
numberevenmorecomplex. Withextendedpagetables,
Itisbasedontwoprinciples: (1)memorycontiguityis
boththeguestOSandhosthypervisorperformvirtualto
anexplicitresourcetobeallocatedacrossprocessesand
physicaltranslationstosatisfyasinglerequest. During
(2)goodinformationaboutspatialandtemporalaccess
translation,guestphysicaladdressesaretreatedashost
patternsisessentialtomanagingcontiguity;itallowsthe
virtualaddresses,whichusehardwarepage-tablewalkers
OS to tell/predict when contiguity is/will be profitably
toperformtheentiretranslation. Eachlayeroflookupin
used. ThemeasuredperformanceoftheIngensprototype
theguestcanrequireamulti-leveltranslationinthehost,
onrealisticworkloadsvalidatestheapproach.
amplifyingthemaximumcostto24lookups[59,40],and
2 Background increasingaveragelatencies[67].
Currenttrendsinmemorymanagementhardwarearemak-
Increased TLB reach. Recently, Intel has moved to
ingitcriticalthatsystemsoftwaresupporthugepagesef-
a two-level TLB design, and in the past few years has
ficientlyandflexibly. Thissectionconsidersthosetrends
providedasignificantnumberofsecond-levelTLBentries
alongwiththechallengeshugepagesupportcreatesfor
for huge pages, going from zero for Sandy Bridge and
theOSandhypervisor. Weprovideanoverviewofhuge
IvyBridgeto1,024forHaswell[2](2013)and1,536for
pagesupportinmodernoperatingsystemsandconclude
Skylake[1](2015).
withexperimentsthatshowtheperformancebenefitsfor
thestate-of-the-artinhugepagemanagement. Betterhardwaresupportformultiplepagesizescreates
anopportunityfortheOSandthehypervisor,butitputs
2.1 Virtualmemoryhardwaretrends
stress on the current memory management algorithms.
Virtualmemorydecouplestheaddressspaceusedbypro- Inadditiontomanagingthecomplexityofdifferentpage
grams from that exported by physical memory (RAM). granularities,systemsoftwaremustgenerateandmaintain
Apagetablemapsvirtualtophysicalpagenumber,with significantmemorycontiguitytouselargerpagesizes.
706 12th USENIX Symposium on Operating Systems Design and Implementation USENIX Association
Name Suite/Application Description Issue OSHyp
429.mcf SPECCPU2006[33] Single-threadedscientificcomputation
Pagefaultlatency(§3.1) O
Canneal PARSEC3.0[28] Parallelscientificcomputation
Bloat(§3.2) O
SVM[64] Liblinear[22] Machinelearning,Supportvectormachine
Fragmentation(§3.3) O O
Tunkrank[8] PowerGraph[55] Largescalein-memorygraphanalytics
Unfairallocation(§3.5) O O
Nutch[19] Hadoop[4] WebsearchindexingusingMapReduce
MovieRecmd[25] Spark/MLlib[5] Machinelearning,Movierecommendation Memorysharing(§3.6) O
Olio Cloudstone[8] Social-eventWebservice(ngnix/php/mysql)
Redis Redis[29] In-memoryKey-valuestore
Table 2: Summary of issues
MongoDB MongoDB[23] In-memoryNoSQLdatabase
inLinuxastheguestOSand
KVMasthehosthypervisor.
Table1: Summaryofmemoryintensiveworkloads.
2.2 Operatingsystemsupportforhugepages multi-programmedworkloadsandworkloadswithmore
complexmemorybehaviorarecommoninenterpriseand
Earlyoperatingsystemsupportforhugepagesprovideda
cloud computing, so Ingens focuses on OS support for
separateinterfaceforexplicithugepageallocationfroma
these more challenging cases. While transparent huge
dedicatedhugepagepoolconfiguredbythesystemadmin-
pagesupportisfarmoredeveloper-friendlythanexplicit
istrator. WindowsandOSXcontinuetohavethislevelof
allocation,itcreatesmemorymanagementchallengesin
support. InWindows,applicationsmustuseanexplicit
theoperatingsystemthatIngensaddresses.
memoryallocationAPIforhugepageallocation[21]and
Linux running on Intel processors currently has the
Windows recommends that applications allocate huge
best transparent huge page support among commodity
pagesallatoncewhentheybegin. OSXapplicationsalso
OSes so we base our prototype on it and most of our
mustsetanexplicitflaginthememoryallocationAPIto
discussionfocusesonLinux. WequantifyLinux’sperfor-
usehugepages[15].
manceadvantagesinSection3.4. ThedesignofIngens
InitialhugepagesupportinLinuxusedasimilarsep-
focuseson4KB(base)and2MB(huge)pagesbecause
arateinterfaceforhugepageallocationthatadeveloper
thesearemostusefultoapplicationswithdynamicmem-
mustinvokeexplicitly(calledhugetlbfs). Developers