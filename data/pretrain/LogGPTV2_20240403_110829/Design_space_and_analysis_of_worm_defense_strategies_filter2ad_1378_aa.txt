title:Design space and analysis of worm defense strategies
author:David Brumley and
Li-Hao Liu and
Pongsin Poosankam and
Dawn Xiaodong Song
Design Space and Analysis of Worm Defense Strategies
David Brumley
Li-Hao Liu Pongsin Poosankam Dawn Song
Carnegie Mellon University
5000 Forbes Avenue
Pittsburgh, Pennsylvania
{dbrumley,lhliu,ppoosank,dawnsong}@cmu.edu
ABSTRACT
We give the ﬁrst systematic investigation of the design space
of worm defense system strategies. We accomplish this by
providing a taxonomy of defense strategies by abstracting
away implementation-dependent and approach-speciﬁc de-
tails and concentrating on the fundamental properties of
each defense category. Our taxonomy and analysis reveals
the key parameters for each strategy that determine its ef-
fectiveness. We provide a theoretical foundation for under-
standing how these parameters interact, as well as simulation-
based analysis of how these strategies compare as worm
defense systems. Finally, we oﬀer recommendations based
upon our taxonomy and analysis on which worm defense
strategies are most likely to succeed. In particular, we show
that a hybrid approach combining Proactive Protection and
Reactive Antibody Defense is the most promising approach
and can be eﬀective even against the fastest worms such as
hitlist worms. Thus, we are the ﬁrst to demonstrate with
theoretic and empirical models which defense strategies will
work against the fastest worms such as hitlist worms.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; D.4.6 [Operating Systems]: Se-
curity and Protection—Invasive software; I.6.6 [Simulation
and Modeling]: Simulation Output Analysis
General Terms
Security, Measurement
Keywords
worms, worm propagation, worm taxonomy, defense strat-
egy analysis, proactive protection, blacklisting, antibody, lo-
cal containment
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’06 , March 21-24, 2006, Taipei, Taiwan
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.

1.
INTRODUCTION
Internet worms can cause millions of dollars of damage by
infecting hundreds of thousands of hosts in a short period of
time [27, 18]. As a result, considerable research eﬀort has
been spent developing worm defense systems [13, 14, 19, 21,
22, 24, 25]. While most previous work focuses on a sin-
gle isolated point in the design space of worm defenses, the
sheer complexity and size of the design space of worm de-
fense requires a more systematic and global-view approach.
Ultimately the vulnerability exploited by the worm should
be permanently ﬁxed, but until then what should a defense
system do? For example, should a defense system focus on
creating patches (a member of our Reactive Antibody cate-
gory) in response to a worm outbreak, or is it better to try
and blacklist the known infected computers? What are the
trade-oﬀs of these two approaches? A global-view approach
assists us in understanding the fundamentals of worm de-
fense, identifying new directions and points in the design
space, and developing more eﬀective defense strategies.
Despite the importance, little research has been done in
systematically analyzing the full design space of worm de-
fense systems. A few studies have analyzed a limited num-
ber of points in the design space. For example, Moore et
al. [16] address content ﬁltering and blacklisting, Porras et
al. [22] describe connection rate limiting, and Liljenstam and
Nicol investigate “counter-worm” techniques for distributing
patches and content ﬁlters [15]. However, a general and sys-
tematic framework that explores the entire worm defense
landscape has been missing, and as a result there is no com-
prehensive analysis on how diﬀerent strategies compare.
In this paper, we provide the ﬁrst systematic study of the
complete worm defense design space. We provide the ﬁrst
taxonomy of worm defense system strategies. Our taxon-
omy provides an abstract framework and categorizes worm
defense strategies based upon fundamental implementation-
independent and approach-generic factors. This abstract
framework enables us to pinpoint the key factors of each
defense category that determines its eﬀectiveness.
We conduct theoretical modeling and analysis as well as
simulation evaluations of the eﬀectiveness of each defense
category against various worms, including random scanning
and hit-list worms. Our analysis reveals the fundamental
strengths and weaknesses of each defense category which
provide important insight in designing new systems.
Our analysis yields fresh observations that provide new
view points to previous beliefs. For example, previous work
investigated the limitations of diversity in hosts as a protec-
tion measure [23]. Our taxonomy and analysis gives insight
into how diversity – an example of our Proactive Protection
category – is an important and practical worm defense strat-
egy in many circumstances. In particular, Proactive Protec-
tion is extremely important in defending against super-fast
worms such as hit-list scanning worms [27] (Section 5 & 6.2).
As another example, rate limiting – an example of our
Local Containment category – is an often proposed worm
defense solution [28]. From our analysis, we are able to
show that any Local Containment strategy is fundamentally
limited in any realistic scenario where it is only partially de-
ployed. For example, if 1/2 of the internet deployed such
a strategy, current worms are slowed down by only a factor
of 2. Other strategies are likely more practical since they
achieve a larger slowdown with a smaller fraction of deploy-
ment (Section 5).
Note that in this paper we focus on worm defense mech-
anisms that reduce the number or the speed at which hosts
are infected. Other mechanisms that assist in recovery or
cleanup after-the-fact are orthogonal to our goal, and could
be used in conjunction with any defense mechanism to re-
duce the total cost of a worm infection.
1.1 Contributions
In this paper, we make the following contributions:
• We provide the ﬁrst taxonomy of worm defense strate-
gies. This taxonomy allows us to systematically ana-
lyze the design space of worm defense, and is useful
for abstracting away approach-speciﬁc details and in-
vestigating the fundamental strengths and weaknesses
of the diﬀerent strategies. Our taxonomy shows each
strategy has unique key factors that determine its ef-
fectiveness besides the standard false positive and false
negative analysis.
• We propose a list of evaluation criteria to guide our
analysis and evaluation of each defense category. We
then conduct theoretical analysis of the eﬀectiveness
of each defense strategy in our taxonomy. To conﬁrm
our theoretical analysis, we conduct simulation evalu-
ations for each strategy category with two real worms
(Slammer and CodeRed) as well as theoretical hit-list
worms which are among the fastest worms [27]. Our
simulation evaluation conﬁrms our theoretical analy-
sis. Our analysis provides the ﬁrst comparison between
overall worm defense strategies.
• We use our results to craft recommendations for which
strategies show the most promise.
• As part of our analysis of the fundamental limits of
the defense strategies, we design and investigate a new
class of worms, called brute-force worms, that speciﬁ-
cally target the weakness of Proactive Protection strate-
gies. We design defense systems capable of defending
against brute-force worms (Section 6.1).
1.2 Taxonomy Insights
The main contribution of our paper is a taxonomy and
evaluation of the design space for worm defense system strate-
gies. This taxonomy yields important new insights as well
as conﬁrms previously held beliefs within a rigorous frame-
work, including:
that may be scans from an infected machine. This ap-
proach is an instance of our Local Containment cate-
gory, which we show is not as eﬀective as other strate-
gies when only partially deployed. For example,
if
90% of the internet adopted such a defense, a worm
is slowed down by only about a factor of 10. Thus,
Local Containment schemes will not be very eﬀective
against new fast worms until adopted by everyone on
the internet.
• Previous work has called into question the security
beneﬁt of address space randomization [23].
In par-
ticular, such techniques do not provide total protec-
tion. We show that such probabilistic protection tech-
niques are a key component in defending against ultra-
fast worms such as hitlist worms. The key observation
is such techniques signiﬁcantly slow down even hitlist
worms, giving time to create and distribute a perma-
nent ﬁx.
• We show that a combination of Proactive Protection
and Reactive Antibody Defense is the most eﬀective
defense and shows promise even against the fastest
worms such as hit-list worms. Previous work such as
by Newsome and Song [21] had previously proposed
this approach but provided no reason why this par-
ticular combination was best. Our work provides a
theoretic model that conﬁrms the eﬀectiveness of this
approach.
• Blacklisting or ﬁltering an infected and scanning host
is popular in practice. However, as a defense sys-
tem this approach only works if infected hosts can
be quickly identiﬁed and added to the blacklist. Our
model suggests that the reaction time to update the
blacklist with newly infected hosts must be small if
the defense is to be eﬀective. Therefore, this approach
only seems to work if a blacklist can be globally and
automatically maintained, i.e., the current manual ap-
proach will likely not work for ultra-fast worms.
1.3 Organization
We begin by considering the entire worm defense design
space, which we divide into a taxonomy of related strate-
gies (Section 2). We then provide a theoretical framework
for each defense strategy in the taxonomy for both when
employed alone and in combination (Section 3 & 4).
Next, to conﬁrm our theoretical analysis, we perform sim-
ulation evaluation for the eﬀectiveness of each category for
real-world worms, CodeRed and Slammer, (Section 5), as
well as faster worms such as hit-list worms (Section 6). We
also develop a new smart worm against Proactive Protection
defenses. We analyze the eﬀectiveness of this worm, along
with potential defenses (Section 6.1).
Finally, we use the result of our theoretic and simulation
modeling to provide recommendations for new worm defense
systems (Section 8). The recommendations show that a hy-
brid approach combining Proactive Protection and Reactive
Antibody Defense is the best approach to stop tomorrow’s
smart worms.
2. DEFENSE STRATEGIES
• One previously proposed defense is to throttle outgo-
ing connections that are suspicious such as connections
In this section, we ﬁrst propose a taxonomy of worm de-
fense strategies. We then propose the evaluation criteria

for worm defense strategies. The following sections make
use of the taxonomy and evaluation criteria to analyze and
compare the diﬀerent strategy categories.
2.1 Defense Strategy Taxonomy
To systematically analyze the design space of worm de-
fense strategies, we ﬁrst observe that in order to defend
against worm attacks, we can take two fundamentally dif-
ferent approaches: either protect vulnerable machines from
incoming worm attacks, or contain a local infection from
sending outgoing attacks to spread the worm (which we call
Local Containment). Note that most proposed systems fall
into the former category which we further divide into proac-
tive defense which is not dependent on any speciﬁc worm
(which we call Proactive Protection) and reactive defense
which needs speciﬁc information about the worm outbreak
to be eﬀective. We then further divide the reactive defense
into two subcategories based on whether the defense uses
the information about the content of the traﬃc (which we
call Reactive Antibody Defense) or the sender of the traf-
ﬁc (which we call Reactive Address Blacklisting) (Figure 1).
We describe the four categories below:
Defense Strategies 
Protection
Local Containment 
Proactive Protection 
Reactive Protection 
Reactive Antibody Defense
Reactive Address Blacklisting 
Figure 1: Worm Defense Strategy Taxonomy
2.1.1 Strategy 1: Reactive Antibody Defense
In immunology, an antibody is a protein generated in re-
action to and acts against a speciﬁc antigen. Similarly, a
Reactive Antibody Defense strategy automatically gener-
ates an inoculation in response to a worm that when ap-
plied will protect hosts from infection. An example of such
an antibody-based strategy is to automatically generate and
deploy content-based signatures [13, 14, 16, 19, 21, 25, 15]
to ﬁlter out worm traﬃc. System patching is also a type of
antibody [24]1.
Besides the standard false positive rate and false nega-
tive rate, a key factor determining the eﬀectiveness of this
strategy is the time it takes to create and disseminate the an-
tibody, which we call the reaction time, denoted as δa. For
example, Liljenstam and Nicol investigate using “counter-
worms” to propagate patches and ﬁlters [15]. δa in their
analysis is based on the “counter-worm” propagation rate.
Intuitively, the longer it takes to create and disseminate the
antibody, the more hosts a worm can infect.
1Similarly, port ﬁltering could be a type of antibody defense,
though most implementations suﬀer from poor accuracy due
to the rough ﬁltering granularity aﬀorded by this method.
2.1.2 Strategy 2: Reactive Address Blacklisting
Instead of generating a worm-speciﬁc antibody as a de-
fense, another approach is to identify the infected machines
and ﬁlter out packets from them to protect vulnerable hosts
from their attacks. We call the list of host addresses that
are infected and who therefore should be blocked [16] the ad-
dress blacklist, and this defense strategy Reactive Address
Blacklisting. 2
Reactive Address Blacklisting diﬀers from the Reactive
Antibody Defense approach in that Reactive Address Black-
listing blocks worm infection attempts by recognizing that
they are from infected (blacklisted) hosts, where Reactive
Antibody Defense blocks worm infection attempts by recog-
nizing that they are malicious packets irrespective of where
they come from. While Reactive Antibody Defense is eﬀec-
tive against a worm attack irrespective of where it comes
from, Reactive Address Blacklisting can only be used to
block out attacks from the hosts on the address blacklist
(and will not be eﬀective against attacks where address spoof-
ing is possible such as UDP worm attacks). Thus, unlike
Reactive Antibody Defense which only needs to create the
antibody eﬀective against the worm, the Reactive Address
Blacklisting approach needs to identify each infected host
as soon as it becomes infected and adds it to the address
blacklist.
Similarly to the Reactive Antibody Defense approach, the
eﬀectiveness of Reactive Address Blacklisting is determined
by the time for creating and installing the appropriate black-
lists, which we call the reaction time, δb. Note δa in Reactive
Antibody Defense is the reaction time to create and dissem-
inate an antibody once the worm has started, while δb here
is the reaction time to put a host on the (global) blacklist
after it becomes infected.
2.1.3 Strategy 3: Proactive Protection
Instead of generating antibodies or blacklists reacting to
a speciﬁc worm or infection attempt, another defense ap-
proach is to proactively harden the system to make it dif-
ﬁcult for a worm to exploit vulnerabilities and successfully
infect the host on any single attempt. We call this cate-
gory of defense Proactive Protection. There are many dif-
ferent methods for proactively hardening a system, includ-
ing sandboxing, privilege separation, system call monitor-
ing, anomaly detection, etc. For a speciﬁc worm attack,
a proactive protection mechanism may be completely eﬀec-
tive in which case it will protect the vulnerable hosts from
the attack (although some protection mechanisms work not
by preventing a successful exploit of the vulnerability, but
rather by preventing the exploit to do damage to or control
the host); or the proactive protection may be only partially
eﬀective in which case it can only protect the host sometimes
or in some cases. One speciﬁc example of the latter case is
diversity-based approach, which delays infection of a vulner-
able host by increasing the entropy of each individual host
such that an internet worm on average needs multiple trials
to compromise the host. For example, most exploits in worm
attacks require knowledge of speciﬁc run-time internal states
of the vulnerable host. Various address-space randomization
techniques have been proposed to randomize run-time mem-
ory layout [1, 4, 5, 7, 9, 10, 30], preventing a worm from
2We abstract away implementation details by assuming the
blacklist is a single global list that is universally updatable.

knowing the correct address a priori for a successful exploit.
Address space randomization is already available and widely
used within the Linux community. Other techniques such as
pointer encryption [8], instruction set randomization [2, 3,
12, 26], password protection schemes, etc., also fall into this
category as they make the system harder to attack by in-
creasing the entropy of information needed for the attack to
be successful. Note that the analysis in this paper only ap-
plies to the case of probabilistic Proactive Protection such
as the diversity-based Proactive Protection.
The amount of entropy directly aﬀects the probability p,
called the protection probability , of a single worm exploit at-
tempt succeeding in infecting a vulnerable host. Worms at-
tacking hosts implementing Proactive Protection must make
about 1/p exploit attempts to infect a host. The protection
probability is thus the key factor determining the eﬀective-
ness of the Proactive Protection approach.
Note that one salient advantage of Proactive Protection is
that it is a proactive defense always in place unlike a reactive
measure. The defense is not based on any speciﬁcs of the
vulnerability and does not need any triggered reaction to
deploy to the vulnerable hosts. However, the defense only
increases the work factor for a worm to successfully infect,
and is not full-proof protection. Hence, eventually a long-
term ﬁx must be applied for permanent protection.
2.1.4 Strategy 4: Local Containment
A Local Containment strategy focuses on containing a lo-
cally infected machine from sending attack traﬃc to other
potentially vulnerable hosts, e.g., ﬁlter based upon outgo-
ing connections instead of the previous three approaches
which focused on incoming connections. Local Containment
strategies thus exemplify a “good neighbor” policy, where
more good neighbors result in fewer worm attacks.
Scan rate throttling schemes such [28, 29] are the primary
example of Local Containment. The throttle rate reduces
the contact rate of current infections, thus slowing down
the overall worm propagation speed.
The throttling rate is an important factor for containing
the worm propagation speed, however, a more important
factor is the deployment rate. As we will show in the next
section, the eﬀectiveness of Local Containment is propor-
tional to the fraction of hosts deploying the defense, and
consequently requires a very high deployment ratio in order
to contain a worm outbreak. Even when deployed on 90% of
the hosts and networks, i.e., 90% of the hosts and networks
are good neighbors, it will not aﬀect attacks coming from
the other 10% of hosts and networks, and thus can only slow
down the worm propagation by a factor of 10.
2.2 Evaluation Criteria
A worm defense strategy can be evaluated in two dimen-
sions: how well it contains a worm outbreak vs. how many
hosts participant in the defense. Let N = Np + Nnp be
the total number of vulnerable hosts, where Np of the vul-
nerable hosts participate in the defense system (which we
call participating hosts) and Nnp do not (which we call non-
participating hosts). Let I(t) = Ip(t) + Inp(t) be the total
number of infected hosts at time t, where Ip(t) is the num-
ber of participating hosts infected and Inp(t) the number of
non-participating hosts infected.
2.2.1 Incremental Deployment
It is unrealistic to assume any scheme will be immedi-
ately and fully deployed overnight. The deployment ratio
α = Np
N is the number of vulnerable hosts participating in
the protection strategy over the total number of vulnerable
hosts. All other things being equal, strategies with lower α
values are preferable since they require fewer participants to
be eﬀective.
2.2.2 Infection Factor
This factor measures the fraction of vulnerable hosts being
infected at time t, which measures how well a worm defense
system protects hosts from infection, with lower values in-
dicates fewer hosts infected.
Worm defense strategy eﬀectiveness can therefore be mea-
sured in two ways:
• Overall Infection Factor: The ratio of the number
of hosts that are infected at a given time to the total
number of vulnerable hosts, e.g., I(t)
N . When no hosts
are infected the infection factor is 0%, while when all
hosts are infected the infection factor is 100%. This is
the most common measure of eﬀectiveness.
• Participation Infection Factor and Non-participation
Infection Factor: In a partial deployment scenario
where only some hosts deploy the defense, the hosts
and networks that deploy the defense (which we call
participating hosts) may have a diﬀerent likelihood of
becoming infected than those that do not deploy the
defense (which we call non-participating hosts). This
diﬀerence, in fact, can be an important incentive to
convince more hosts and networks to deploy the de-
fense. To measure this diﬀerence, we propose two new
eﬀectiveness measures: the participation infection fac-
tor (PIF) as the ratio of the number of participating-
hosts infected to the total number of participating
hosts, e.g., Ip(t)
; and the non-participation infection
Np
factor (NPIF) as the ratio of non-participating hosts
infected to the total number of non-participating hosts,
e.g., Inp(t)
Nnp
.
If a defense approach incurs no diﬀerence in the like-
lihood of being infected between a participating host
or a non-participating host, then the participation fac-
tor and the non-participation factor will be the same,
which gives little incentive for hosts and networks to
deploy the defense approach. For example, as our
analysis in the next section shows, Local Containment
gives no diﬀerence between the participation infection
factor and the non-participation infection factor. On
the other hand, a defense system with positive deploy-
ment incentive should give a much lower participation
infection factor than the non-participation infection
factor, as the case for Reactive Antibody Defense, Re-
active Address Blacklisting, and Proactive Protection.
3. THEORETICAL ANALYSIS OF WORM
DEFENSE STRATEGIES
In this section, we analyze the eﬀectiveness of the diﬀerent
worm defense strategies in our taxonomy. We ﬁrst review
worm modeling background, and then give our theoretical
analysis of the eﬀectiveness of the diﬀerent worm defense
strategies. Our notation is summarized in Table 1.

Deployment ratio
Vulnerable host contact rate
Throttle rate
Reaction time (Antibody)
Reaction time (Blacklist)
Protection probability
Timestamp
# of initial infected hosts = I(0)
# of all vulnerable hosts
# of participating vulnerable hosts
α
β
β1
δa
δb
p
t
C
N
Np
Nnp # of non-participating vulnerable hosts
I(t) # of hosts infected at time t
Ip(t) # of participating hosts infected at time t
Inp(t) # of non-participating hosts infected at time t
dI(t)
Rate of new infections
dt
d2 I(t)
dt2
Acceleration of new infections
|→          Worm Speeding Up
←||→          Worm Slowing Down ←|
)
)
t
(
I
(
s
e
n
h
c
a
M
d
e
i
t
c
e
f
n
I
0
← tb
 Time
←tb
)
t
d
/
)
t
(
I
d
i
(
s
e
n
h
c
a
M
d
e
|→          Worm Speeding Up
←||→          Worm Slowing Down ←|
t
c
e
f
n
I
w
e
N
f
o
e
t
a
R
0
 Time
(a) Number of
over time I(t)
infections
(b) Rate of new infections
over time dI(t)
dt
Figure 2: (a) shows infections as a function of time.
(b) shows the rate of new infections. As shown,
tb divides the lifetime of a worm into two phases:
acceleration and deceleration.
Table 1: Notation and Parameters Used in Our
Analysis
evolution of the number of infected hosts I(t) with an aver-
age contact rate β and protection probability p as below:
3.1 Worm Modeling Background
Worm propagation can be well described with the classic
Susceptible-Infected epidemic model [11]. The overall rate
of new infections is given in this model by:
is:
dI(t)
dt
=
pβI(t)(N − I(t))
N
(4)
The solution to Equation 4 with C initially infected hosts
I(t) =
N
1 + e−pβt(N −C)
C
(5)
dI(t)
dt
=
βI(t)(N − I(t))
N
(1)
Equation 1 states the rate of new infections is equal to the
product of the number of infected hosts, the average contact
rate of each infected host (β), and the fraction of uninfected
hosts.
We solve equation 1 for the number of hosts infected at
time t (I(t)) with C initially infected hosts as:
I(t) =
N
1 + e−βt(N −C)
C
(2)
This shows that the worm contact rate β is the important
factor for determining its propagation speed.
We can also ﬁnd the acceleration of a worm, given by:
d2I(t)
dt2 =
β2Cetβ(C − N )(C + Cetβ − N )N
(C(etβ − 1) + N )3
(3)
When a typical worm is ﬁrst released, it will ﬁrst undergo
an acceleration phase because vulnerable hosts are easy to
ﬁnd. At some point the worm will slow down either because
there are few uninfected vulnerable hosts left or the defense
scheme makes them harder to infect. We call the point at
which a worm begins to slow down the breaking point tb. As