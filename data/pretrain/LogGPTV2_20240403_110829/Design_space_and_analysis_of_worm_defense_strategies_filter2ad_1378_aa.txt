# Design Space and Analysis of Worm Defense Strategies

**Authors:**
- David Brumley
- Li-Hao Liu
- Pongsin Poosankam
- Dawn Xiaodong Song

**Affiliation:**
Carnegie Mellon University
5000 Forbes Avenue
Pittsburgh, Pennsylvania
{dbrumley, lhliu, ppoosank, dawnsong}@cmu.edu

## Abstract
We present the first systematic investigation of the design space for worm defense system strategies. By abstracting away implementation-specific and approach-dependent details, we provide a taxonomy of defense strategies, focusing on their fundamental properties. This taxonomy and analysis reveal the key parameters that determine the effectiveness of each strategy. We offer a theoretical foundation for understanding how these parameters interact and provide simulation-based analyses to compare the effectiveness of different strategies as worm defense systems. Based on our findings, we recommend which worm defense strategies are most likely to succeed. Specifically, we demonstrate that a hybrid approach combining Proactive Protection and Reactive Antibody Defense is highly promising, even against the fastest worms such as hitlist worms. Our work is the first to use both theoretical and empirical models to show which defense strategies are effective against the fastest worms.

## Categories and Subject Descriptors
- C.2.0 [Computer-Communication Networks]: General—Security and protection
- D.4.6 [Operating Systems]: Security and Protection—Invasive software
- I.6.6 [Simulation and Modeling]: Simulation Output Analysis

## General Terms
- Security, Measurement

## Keywords
- worms, worm propagation, worm taxonomy, defense strategy analysis, proactive protection, blacklisting, antibody, local containment

**Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.**

**ASIACCS'06, March 21-24, 2006, Taipei, Taiwan**
**Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.**

## 1. Introduction
Internet worms can cause significant financial damage by infecting large numbers of hosts in a short period [27, 18]. Consequently, considerable research effort has been dedicated to developing worm defense systems [13, 14, 19, 21, 22, 24, 25]. While previous work often focuses on isolated points in the design space of worm defenses, the complexity and size of this design space require a more systematic and comprehensive approach. 

Ultimately, the vulnerability exploited by the worm should be permanently fixed, but until then, what should a defense system do? For example, should a defense system focus on creating patches (a member of our Reactive Antibody category) in response to a worm outbreak, or is it better to blacklist known infected computers? What are the trade-offs of these two approaches? A global-view approach helps us understand the fundamentals of worm defense, identify new directions, and develop more effective strategies.

Despite its importance, little research has systematically analyzed the full design space of worm defense systems. Some studies have addressed specific points, such as content filtering and blacklisting [16], connection rate limiting [22], and "counter-worm" techniques for distributing patches and content filters [15]. However, a general and systematic framework exploring the entire worm defense landscape has been missing, resulting in no comprehensive analysis of how different strategies compare.

In this paper, we provide the first systematic study of the complete worm defense design space. We introduce a taxonomy of worm defense system strategies, abstracting away implementation-specific and approach-generic factors to pinpoint the key factors of each defense category that determine its effectiveness. We conduct theoretical modeling and simulations to evaluate the effectiveness of each defense category against various worms, including random scanning and hit-list worms. Our analysis reveals the fundamental strengths and weaknesses of each defense category, providing important insights for designing new systems.

Our analysis yields fresh observations that challenge previous beliefs. For example, diversity, an example of our Proactive Protection category, is shown to be an important and practical worm defense strategy in many circumstances, especially against super-fast worms like hit-list scanning worms [27] (Sections 5 & 6.2). Additionally, rate limiting, an example of our Local Containment category, is often proposed as a worm defense solution [28]. Our analysis shows that any Local Containment strategy is fundamentally limited in realistic scenarios where it is only partially deployed. For instance, if half of the internet deployed such a strategy, current worms would only be slowed down by a factor of 2. Other strategies are likely more practical since they achieve a larger slowdown with a smaller fraction of deployment (Section 5).

In this paper, we focus on worm defense mechanisms that reduce the number or speed at which hosts are infected. Other mechanisms that assist in recovery or cleanup after-the-fact are orthogonal to our goal and could be used in conjunction with any defense mechanism to reduce the total cost of a worm infection.

### 1.1 Contributions
In this paper, we make the following contributions:
- **Taxonomy of Worm Defense Strategies:** We provide the first taxonomy of worm defense strategies, allowing for a systematic analysis of the design space. This taxonomy abstracts away approach-specific details and investigates the fundamental strengths and weaknesses of different strategies.
- **Evaluation Criteria and Theoretical Analysis:** We propose a list of evaluation criteria to guide our analysis and evaluation of each defense category. We conduct theoretical analysis of the effectiveness of each defense strategy and confirm our findings through simulation evaluations with real-world worms (Slammer and CodeRed) and theoretical hit-list worms.
- **Recommendations:** We use our results to craft recommendations for the most promising defense strategies.
- **New Class of Worms:** As part of our analysis, we design and investigate a new class of worms, called brute-force worms, that target the weaknesses of Proactive Protection strategies. We also design defense systems capable of defending against these brute-force worms (Section 6.1).

### 1.2 Taxonomy Insights
The main contribution of our paper is a taxonomy and evaluation of the design space for worm defense system strategies. This taxonomy provides important new insights and confirms previously held beliefs within a rigorous framework, including:
- **Local Containment Limitations:** Rate limiting, an instance of our Local Containment category, is not as effective as other strategies when only partially deployed. For example, if 90% of the internet adopted such a defense, a worm would be slowed down by only about a factor of 10. Thus, Local Containment schemes will not be very effective against new fast worms until adopted by everyone on the internet.
- **Address Space Randomization:** Previous work has questioned the security benefit of address space randomization [23]. We show that such probabilistic protection techniques are a key component in defending against ultra-fast worms like hitlist worms. These techniques significantly slow down even hitlist worms, giving time to create and distribute a permanent fix.
- **Hybrid Approach:** We show that a combination of Proactive Protection and Reactive Antibody Defense is the most effective defense and shows promise even against the fastest worms like hit-list worms. Previous work, such as by Newsome and Song [21], had proposed this approach but provided no reason why this particular combination was best. Our work provides a theoretical model that confirms the effectiveness of this approach.
- **Blacklisting Effectiveness:** Blacklisting or filtering an infected and scanning host is popular in practice. However, as a defense system, this approach only works if infected hosts can be quickly identified and added to the blacklist. Our model suggests that the reaction time to update the blacklist with newly infected hosts must be small for the defense to be effective. Therefore, this approach only seems to work if a blacklist can be globally and automatically maintained, i.e., the current manual approach will likely not work for ultra-fast worms.

### 1.3 Organization
We begin by considering the entire worm defense design space, dividing it into a taxonomy of related strategies (Section 2). We then provide a theoretical framework for each defense strategy in the taxonomy, both when employed alone and in combination (Sections 3 & 4).

Next, to confirm our theoretical analysis, we perform simulation evaluations for the effectiveness of each category using real-world worms, CodeRed and Slammer (Section 5), as well as faster worms like hit-list worms (Section 6). We also develop a new smart worm against Proactive Protection defenses, analyze its effectiveness, and propose potential defenses (Section 6.1).

Finally, we use the results of our theoretical and simulation modeling to provide recommendations for new worm defense systems (Section 8). Our recommendations show that a hybrid approach combining Proactive Protection and Reactive Antibody Defense is the best approach to stop tomorrow’s smart worms.

## 2. Defense Strategies
In this section, we first propose a taxonomy of worm defense strategies. We then propose the evaluation criteria for these strategies. The following sections use the taxonomy and evaluation criteria to analyze and compare the different strategy categories.

### 2.1 Defense Strategy Taxonomy
To systematically analyze the design space of worm defense strategies, we observe that to defend against worm attacks, we can take two fundamentally different approaches: either protect vulnerable machines from incoming worm attacks, or contain a local infection from sending outgoing attacks to spread the worm (which we call Local Containment). Most proposed systems fall into the former category, which we further divide into proactive defense, which is not dependent on any specific worm (Proactive Protection), and reactive defense, which needs specific information about the worm outbreak to be effective. We then further divide the reactive defense into two subcategories based on whether the defense uses information about the content of the traffic (Reactive Antibody Defense) or the sender of the traffic (Reactive Address Blacklisting) (Figure 1).

#### 2.1.1 Strategy 1: Reactive Antibody Defense
In immunology, an antibody is a protein generated in reaction to and acts against a specific antigen. Similarly, a Reactive Antibody Defense strategy automatically generates an inoculation in response to a worm that, when applied, will protect hosts from infection. An example of such an antibody-based strategy is to automatically generate and deploy content-based signatures [13, 14, 16, 19, 21, 25, 15] to filter out worm traffic. System patching is also a type of antibody [24].

Besides the standard false positive rate and false negative rate, a key factor determining the effectiveness of this strategy is the time it takes to create and disseminate the antibody, which we call the reaction time, denoted as δa. For example, Liljenstam and Nicol investigate using “counter-worms” to propagate patches and filters [15]. In their analysis, δa is based on the “counter-worm” propagation rate. Intuitively, the longer it takes to create and disseminate the antibody, the more hosts a worm can infect.

#### 2.1.2 Strategy 2: Reactive Address Blacklisting
Instead of generating a worm-specific antibody as a defense, another approach is to identify the infected machines and filter out packets from them to protect vulnerable hosts from their attacks. We call the list of host addresses that are infected and who therefore should be blocked [16] the address blacklist, and this defense strategy Reactive Address Blacklisting.

Reactive Address Blacklisting differs from the Reactive Antibody Defense approach in that it blocks worm infection attempts by recognizing that they are from infected (blacklisted) hosts, whereas Reactive Antibody Defense blocks worm infection attempts by recognizing that they are malicious packets, irrespective of their origin. While Reactive Antibody Defense is effective against a worm attack regardless of its source, Reactive Address Blacklisting can only block attacks from the hosts on the address blacklist and is ineffective against attacks where address spoofing is possible, such as UDP worm attacks. Thus, unlike Reactive Antibody Defense, which only needs to create an antibody effective against the worm, the Reactive Address Blacklisting approach needs to identify each infected host as soon as it becomes infected and add it to the address blacklist.

Similarly to the Reactive Antibody Defense approach, the effectiveness of Reactive Address Blacklisting is determined by the time for creating and installing the appropriate blacklists, which we call the reaction time, δb. Note that δa in Reactive Antibody Defense is the reaction time to create and disseminate an antibody once the worm has started, while δb here is the reaction time to put a host on the (global) blacklist after it becomes infected.

#### 2.1.3 Strategy 3: Proactive Protection
Instead of generating antibodies or blacklists in reaction to a specific worm or infection attempt, another defense approach is to proactively harden the system to make it difficult for a worm to exploit vulnerabilities and successfully infect the host on any single attempt. We call this category of defense Proactive Protection. There are many different methods for proactively hardening a system, including sandboxing, privilege separation, system call monitoring, anomaly detection, etc. For a specific worm attack, a proactive protection mechanism may be completely effective, protecting vulnerable hosts from the attack, or it may be only partially effective, protecting the host sometimes or in some cases. One specific example of the latter case is a diversity-based approach, which delays infection of a vulnerable host by increasing the entropy of each individual host, making it harder for an internet worm to compromise the host. For example, most exploits in worm attacks require knowledge of specific run-time internal states of the vulnerable host. Various address-space randomization techniques have been proposed to randomize run-time memory layout [1, 4, 5, 7, 9, 10, 30], preventing a worm from knowing the correct address a priori for a successful exploit. Address space randomization is already available and widely used within the Linux community. Other techniques such as pointer encryption [8], instruction set randomization [2, 3, 12, 26], password protection schemes, etc., also fall into this category as they make the system harder to attack by increasing the entropy of information needed for the attack to be successful. Note that the analysis in this paper only applies to the case of probabilistic Proactive Protection, such as the diversity-based Proactive Protection.

The amount of entropy directly affects the probability p, called the protection probability, of a single worm exploit attempt succeeding in infecting a vulnerable host. Worms attacking hosts implementing Proactive Protection must make about 1/p exploit attempts to infect a host. The protection probability is thus the key factor determining the effectiveness of the Proactive Protection approach.

Note that one salient advantage of Proactive Protection is that it is a proactive defense always in place, unlike a reactive measure. The defense is not based on any specifics of the vulnerability and does not need any triggered reaction to deploy to the vulnerable hosts. However, the defense only increases the work factor for a worm to successfully infect and is not full-proof protection. Hence, eventually, a long-term fix must be applied for permanent protection.

#### 2.1.4 Strategy 4: Local Containment
A Local Containment strategy focuses on containing a locally infected machine from sending attack traffic to other potentially vulnerable hosts, e.g., filtering based upon outgoing connections instead of the previous three approaches, which focused on incoming connections. Local Containment strategies exemplify a “good neighbor” policy, where more good neighbors result in fewer worm attacks.

Scan rate throttling schemes such as [28, 29] are the primary example of Local Containment. The throttle rate reduces the contact rate of current infections, thus slowing down the overall worm propagation speed.

The throttling rate is an important factor for containing the worm propagation speed, but a more important factor is the deployment rate. As we will show in the next section, the effectiveness of Local Containment is proportional to the fraction of hosts deploying the defense and consequently requires a very high deployment ratio to contain a worm outbreak. Even when deployed on 90% of the hosts and networks, i.e., 90% of the hosts and networks are good neighbors, it will not affect attacks coming from the other 10% of hosts and networks, and thus can only slow down the worm propagation by a factor of 10.

### 2.2 Evaluation Criteria
A worm defense strategy can be evaluated in two dimensions: how well it contains a worm outbreak versus how many hosts participate in the defense. Let N = Np + Nnp be the total number of vulnerable hosts, where Np of the vulnerable hosts participate in the defense system (which we call participating hosts) and Nnp do not (which we call non-participating hosts). Let I(t) = Ip(t) + Inp(t) be the total number of infected hosts at time t, where Ip(t) is the number of participating hosts infected and Inp(t) the number of non-participating hosts infected.

#### 2.2.1 Incremental Deployment
It is unrealistic to assume any scheme will be immediately and fully deployed overnight. The deployment ratio α = Np/N is the number of vulnerable hosts participating in the protection strategy over the total number of vulnerable hosts. All other things being equal, strategies with lower α values are preferable since they require fewer participants to be effective.

#### 2.2.2 Infection Factor
This factor measures the fraction of vulnerable hosts being infected at time t, which measures how well a worm defense system protects hosts from infection, with lower values indicating fewer hosts infected.

Worm defense strategy effectiveness can therefore be measured in two ways:
- **Overall Infection Factor:** The ratio of the number of hosts that are infected at a given time to the total number of vulnerable hosts, e.g., I(t)/N. When no hosts are infected, the infection factor is 0%, while when all hosts are infected, the infection factor is 100%. This is the most common measure of effectiveness.
- **Participation Infection Factor and Non-participation Infection Factor:** In a partial deployment scenario where only some hosts deploy the defense, the hosts and networks that deploy the defense (participating hosts) may have a different likelihood of becoming infected than those that do not deploy the defense (non-participating hosts). This difference can be an important incentive to convince more hosts and networks to deploy the defense. To measure this difference, we propose two new effectiveness measures: the participation infection factor (PIF) as the ratio of the number of participating-hosts infected to the total number of participating hosts, e.g., Ip(t)/Np; and the non-participation infection factor (NPIF) as the ratio of non-participating hosts infected to the total number of non-participating hosts, e.g., Inp(t)/Nnp.

If a defense approach incurs no difference in the likelihood of being infected between a participating host or a non-participating host, then the participation factor and the non-participation factor will be the same, which gives little incentive for hosts and networks to deploy the defense approach. For example, as our analysis in the next section shows, Local Containment gives no difference between the participation infection factor and the non-participation infection factor. On the other hand, a defense system with positive deployment incentive should give a much lower participation infection factor than the non-participation infection factor, as is the case for Reactive Antibody Defense, Reactive Address Blacklisting, and Proactive Protection.

## 3. Theoretical Analysis of Worm Defense Strategies
In this section, we analyze the effectiveness of the different worm defense strategies in our taxonomy. We first review worm modeling background and then provide our theoretical analysis of the effectiveness of the different worm defense strategies. Our notation is summarized in Table 1.

### 3.1 Worm Modeling Background
Worm propagation can be well described with the classic Susceptible-Infected epidemic model [11]. The overall rate of new infections is given in this model by:

\[
\frac{dI(t)}{dt} = \frac{\beta I(t)(N - I(t))}{N}
\]

Equation 1 states that the rate of new infections is equal to the product of the number of infected hosts, the average contact rate of each infected host (β), and the fraction of uninfected hosts.

We solve Equation 1 for the number of hosts infected at time t (I(t)) with C initially infected hosts as:

\[
I(t) = \frac{N}{1 + e^{-\beta t (N - C)} / C}
\]

This shows that the worm contact rate β is the important factor for determining its propagation speed.

We can also find the acceleration of a worm, given by:

\[
\frac{d^2 I(t)}{dt^2} = \frac{\beta^2 C e^{\beta t (C - N)} (C + C e^{\beta t} - N) N}{(C (e^{\beta t} - 1) + N)^3}
\]

When a typical worm is first released, it will undergo an acceleration phase because vulnerable hosts are easy to find. At some point, the worm will slow down either because there are few uninfected vulnerable hosts left or the defense scheme makes them harder to infect. We call the point at which a worm begins to slow down the breaking point tb. As shown in Figure 2, tb divides the lifetime of a worm into two phases: acceleration and deceleration.

### 3.2 Theoretical Analysis of Defense Strategies
Using the above model, we analyze the effectiveness of the different worm defense strategies in our taxonomy. We consider the impact of each strategy on the rate of new infections and the overall infection factor.

#### 3.2.1 Reactive Antibody Defense
For Reactive Antibody Defense, the key factor is the reaction time δa. The effectiveness of this strategy can be modeled by reducing the effective contact rate β to β(1 - δa). The reduced contact rate slows down the worm propagation, and the overall infection factor is given by:

\[
I(t) = \frac{N}{1 + e^{-\beta (1 - \delta_a) t (N - C)} / C}
\]

#### 3.2.2 Reactive Address Blacklisting
For Reactive Address Blacklisting, the key factor is the reaction time δb. The effectiveness of this strategy can be modeled by reducing the effective contact rate β to β(1 - δb). The reduced contact rate slows down the worm propagation, and the overall infection factor is given by:

\[
I(t) = \frac{N}{1 + e^{-\beta (1 - \delta_b) t (N - C)} / C}
\]

#### 3.2.3 Proactive Protection
For Proactive Protection, the key factor is the protection probability p. The effectiveness of this strategy can be modeled by reducing the effective contact rate β to βp. The reduced contact rate slows down the worm propagation, and the overall infection factor is given by:

\[
I(t) = \frac{N}{1 + e^{-\beta p t (N - C)} / C}
\]

#### 3.2.4 Local Containment
For Local Containment, the key factor is the deployment ratio α. The effectiveness of this strategy can be modeled by reducing the effective contact rate β to β(1 - α). The reduced contact rate slows down the worm propagation, and the overall infection factor is given by:

\[
I(t) = \frac{N}{1 + e^{-\beta (1 - \alpha) t (N - C)} / C}
\]

### 3.3 Simulation Evaluations
To confirm our theoretical analysis, we perform simulation evaluations for the effectiveness of each category using real-world worms, CodeRed and Slammer, as well as faster worms like hit-list worms. We also develop a new smart worm against Proactive Protection defenses, analyze its effectiveness, and propose potential defenses.

### 3.4 Results and Discussion
Our simulation evaluations confirm our theoretical analysis. The results show that a combination of Proactive Protection and Reactive Antibody Defense is the most effective defense strategy, even against the fastest worms like hit-list worms. Local Containment, while effective, is limited in its impact unless a very high deployment ratio is achieved. Reactive Address Blacklisting and Reactive Antibody Defense are more effective in reducing the overall infection factor, especially when combined with Proactive Protection.

## 4. Conclusion
In this paper, we provide the first systematic study of the complete worm defense design space. We introduce a taxonomy of worm defense system strategies, abstracting away implementation-specific and approach-generic factors to pinpoint the key factors of each defense category that determine its effectiveness. We conduct theoretical modeling and simulations to evaluate the effectiveness of each defense category against various worms, including real-world and theoretical ones. Our analysis reveals the fundamental strengths and weaknesses of each defense category, providing important insights for designing new systems.

Our analysis yields fresh observations that challenge previous beliefs and confirms the effectiveness of a hybrid approach combining Proactive Protection and Reactive Antibody Defense. We also provide recommendations for the most promising defense strategies and design a new class of worms, brute-force worms, to test the limits of Proactive Protection. Our work is the first to use both theoretical and empirical models to show which defense strategies are effective against the fastest worms.

## References
[1] - [30] (References are listed in the original text and should be included as is.)

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.