Say that we want to deliver packets p1, p2, and p3 to Client 1,
Client 2, and Client 3 respectively. Each client needs to receive the
two undesired packets aligned along the same vector and the desired
packet along a different vector, as shown in Fig. 6. To achieve this
behavior, each AP transmits one of the three packets. Now the roles
are ﬂipped: the APs are the transmitters and the clients the receivers.
Hence, each AP multiplies the transmitted packet by a vector ~vi that
is carefully chosen to ensure the desired alignment. Speciﬁcally, we
need to ensure:
H d
21~v2 = H d
H d
12~v1 = H d
H d
13~v1 = H d
31~v3
32~v3
23~v2,
(5)
(6)
(7)
where H d
i j is the channel from the ith AP to the jth client, i.e., the
downlink channels. The three equations above align the packets at
each client to ensure that the two undesired packets are along the
same vector. These are three linear equations over three unknown
vector and can be solved using standard methods (similar to how we
solved Eqs. §3 and §4). Hence, each client can decode its desired
packet by orthogonal projection.
4 The solution to the alignment is ~v4 = eig(H−1
11 H31~v4 and ~v3 = H−1
eigen vector of H, and ~v2 = H−1
32 H22H−1
21 H31~v4.
21 H31), where eig(H) is an
16211vH d r
1
21vH d r
2
31vH d r
3
22 vH d r
2
32 vH d r
3
12 vH d r
1
33 vH d r
3
13 vH d r
1
23 vH d r
2
Clients
APs
r
11vp
r
2 vp
2
r
33vp
Figure 6: Three Packets on the Downlink. The APs deliver one packet
to each client. To enable the client to decode its packet, all the undesired
packets at the client must be aligned.
1p
2p
3p
4p
4p
3p
2p
1p
1p
3p
2p
4p
Clients
AP
Figure 7: Four Packets on Downlink. At the ﬁrst client, packets p3 and
p4 are aligned along one dimension, allowing p1 and p2 to lie in a two
dimensional space and hence be decoded. Similarly, at the second client,
packets p1 and p2 are aligned, allowing p3 and p4 to be decoded.
5 Beyond Two Antennas
The previous section focuses on 2-antenna systems, but for the gen-
eral case of M antennas per-node, what is the maximum number of
concurrent packets that can be delivered? Further, how many APs are
needed to support such a system?
Naively, it might seem that the number of concurrent packets is
constrained only by the number of APs. Speciﬁcally, it might seem
that one can align the received packets at every AP, allowing each of
them to decode at least one packet, and hence one can keep increasing
the number of concurrent packets by increasing the number of APs.
This is however misleading because aligning a signal at one receiver
limits the ability of the transmitter to freely align it at a second
receiver. In particular, every alignment imposes new constraints on
the encoding vectors at the transmitter. For a feasible solution, the
constraints should stay fewer than the free variables in an encoding
vector. Since the encoding vector has as many variables as there are
antennas on the node, the number of constraints cannot exceed the
number of antennas. Thus, using more APs is beneﬁcial but only up
to a point, after which one needs to increase the number of antennas.
Below, we demonstrate that in IAC, the number of concurrent packets
can be almost twice the number of antennas, and that this gain is
achieved with a relatively small number of APs.
(a) Downlink. In [15], we prove the following:
Lemma 5.1 In a system with M antennas per node, the maximum
number of concurrent packets IAC can deliver on the downlink is
max{2M − 2, ⌊ 3
2 M⌋}. For M > 2, IAC achieves this with M − 1 APs.
For M = 3, the above lemma tells us that we can achieve 4 concurrent
packets on the downlink. Fig. 7 shows the downlink case. We have
two APs and two clients. Each AP transmits two packets, one for
each client. Since the clients have three antennas, the signal is in a
1p
2p
3p
4p
p
5p
6p
1p
5p
3p
6p
6p
4p
2p
3p
2p
2
3p
4p
2p
4p
1p
5p
1p
6p
Clients
AP
5p
Figure 8: Six Packets on Uplink. At AP1, all the packets other than p1
are aligned on a two dimensional plane, allowing p1 to be decoded. At
AP2, p2, p4 and p6 are aligned along, allowing p3 and p5 to be decoded.
At AP3, we cancel p1, p3 and p5 leaving p2, p4 and p6 to lie along three
different dimensions and be decoded.
three dimensional space. Thus, if we align two packets along one
dimension, the other two packets are free of interference and can be
decoded, resulting in 4 concurrent packets.
The above procedure can be generalized to any number of antennas.
Speciﬁcally, if we have M − 1 APs and two clients, a procedure that
makes each AP transmit a packet to each client can deliver a total of
2M − 2 concurrent packets across the two clients. For a large M, this
almost doubles the throughput of current MIMO LANs.
(b) Uplink. In [15], we prove the following:
Lemma 5.2 For a M-antenna system, three or more APs, and at least
two clients, IAC can deliver 2M concurrent packets on the uplink.
For M = 3, the above lemma tells us that we can achieve 6 concur-
rent packets on the uplink. Fig. 8 shows three clients transmitting to
three APs. At the ﬁrst AP, ﬁve out of six packets are aligned in the
same plane. This leaves one packet free of interference and hence
can be decoded. From the perspective of the second AP, one packet
is already decoded and hence can be eliminated from the received
signal. Out of the ﬁve packets left, the second AP needs to have three
packets aligned along one dimension and two free packets, allowing
it to decode two packets. Finally, from the perspective of the last AP,
three packets are already decoded and hence their interference can be
eliminated. This leaves the last AP with three unknown packets in a
three dimensional system and hence it can decode all of them.
Again, this procedure can be applied independent of the number of
antennas. Speciﬁcally, one needs to align 2M packets such that the
ﬁrst AP can decode one packet, the second AP decodes M − 1 packets
and the last AP decodes M packets.
6 Practical Issues
The practicality of IAC relies on being able to implement interfer-
ence alignment and interference cancellation. IAC uses only the
subtraction step of interference cancellation. Interference cancella-
tion typically involves two steps: ﬁrst it decodes one of the concurrent
packets in the presence of interference and second it subtracts the
decoded packet from the rest to remove its contribution to interfer-
ence, allowing the decoding of more packets. IAC replaces the ﬁrst
step with interference alignment to orthogonalize interference and
eliminate its impact as it decodes one of the concurrent packets. It
uses interference cancellation only to subtract the decoded packet.
The subtraction step of interference cancellation is widely studied
and has been shown to work in practical implementations [4, 14, 18].
163Furthermore, the subtraction step does not require any synchroniza-
tion between transmitters,5 works with OFDM systems and various
modulation schemes, and can accommodate single tap and multi-tap
frequency selective channels [19, 10].
In contrast, prior to this paper, interference alignment has been a
purely theoretical idea with no practical implementation. Thus, in
this section, we focus on the practicality of performing alignment.
(a) Frequency offset: In practice, a transmitter-receiver pair always
exhibits a small frequency offset, ∆ f . The frequency offset causes
the phase of the received signal to increase linearly with time, i.e.,
the received vector rotates with time. Since the frequency offset is
typically different for different sender-receiver pairs, signals from
different transmitters that are aligned at the same receiver will rotate at
different rates. Thus, it might seem that signals that are aligned at the
beginning of a packet will lose alignment with time and be completely
misaligned by the end of the packet. This reasoning however is
incorrect because interference alignment happens in the antenna-
spatial domain and not the I-Q domain.6 Differences in frequency
offset cause relative differences in how the signals rotate in the I-Q
domain but only scale the direction of the vectors in the spatial domain
by a complex number, leaving the alignment unaffected. Speciﬁcally,
suppose the encoding vectors, ~v1 and ~v2, are picked to satisfy the
equation H11~v1 = H21~v2. As a result of the two frequency offsets,
∆ f1 and ∆ f2, the channel, Hi1(t), changes as a function of time as
Hi1e j2π∆ fit . Thus, these time varying channels satisfy the equation:
H11(t)e− j2π∆ f1t ~v1 = H21(t)e− j2π∆ f2t ~v2
H11(t)~v1 = e j2π(∆ f1−∆ f2)t H21(t)~v2
The complex function e j2π(∆ f1−∆ f2)t scales the vector, H21(t)~v2, leav-
ing its orientation unaffected. Since alignment only requires that the
two vectors have the same orientation, the signals remain aligned
through the end of the packets despite different frequency offsets.
Realizing that signal alignment is unaffected by rotation in the I-Q do-
main is an important lesson that we learned from the implementation.
(b) Different Modulations: Interference alignment works indepen-
dent of what constitutes the signal, i.e., independent of the modulation
scheme (BPSK, QAM, or OFDM). It might seem that the modulation
scheme, say QAM, changes the signal orientation and hence breaks
the alignment. Again this argument is incorrect because modulation
changes the signal’s orientation in the I-Q domain, but interference
alignment happens in the antenna spatial domain.
(c) Symbol Synchronization: One lesson that we learned from the
implementation is that for relatively ﬂat channels, you do not need
to have symbol level synchronization. Speciﬁcally, if the channel
between each transmit-receive antenna pair can be represented by a
single complex number, hi j, whose magnitude refers to the attenuation
and phase refers to the delay along the path, interference alignment
can then be implemented accurately without transmitter synchroniza-
tion. This arises from two facts: 1) we perform interference alignment
at the signal level and not symbol level, i.e., we align signal samples
regardless of what symbol they represent, 2) the alignment occurs in
the spatial antenna domain, not the I-Q domain, and hence though
unsynchronized transmitters may not be aligned in the I-Q domain,
this does not affect their alignment in the spatial antenna domain.7
5Once the receiver knows the bits and estimates the channel function from the pream-
ble, it can reconstruct the corresponding continuous signal, sample it at the desired points,
and subtract it from its received version.
6The I-Q domain is the 2-dimensional space that refers to the transmitted complex
number.
7It should be noted that interference alignment is different from multi-user MIMO
(which typically requires synchronization) in that not all signals need be decodable at a
receiver. Speciﬁcally aligned interferers need not be decodable.
Note that modeling the channel between a pair of antennas as a sin-
gle complex number is accurate for narrowband or ﬂat channels, but
becomes less so as the width of the channel increases. We conjecture
that even if the channel is not quite ﬂat, one can still do the alignment
separately in each OFDM subcarrier without trying to synchronize
the transmitters. In this case, there is some interference between the
OFDM subcarriers, but given that nearby subcarriers typically have
similar frequency response, for moderate width channels the resulting
imperfection in the alignment stays acceptable. We cannot check
this conjecture on USRP1 since their channel is fairly narrow and is
accurately modeled with a single complex number.
7 Medium Access Control
Since IAC allows multiple clients and APs to transmit simultaneously,
it changes the requirements of the MAC. The challenge in designing
a MAC protocol for IAC arises not only from the need to enable
multiple nodes to concurrently access the medium, but also from our
desire to maintain minimal complexity at the clients. Speciﬁcally, a
client should be oblivious to the number of APs in the system, and
other clients who transmit concurrently. Finally, since trafﬁc is bursty,
we need to dynamically change the combination of concurrent clients
to match instantaneous trafﬁc demands, while respecting fairness.
The basic principle underlying our solution is to move complexity
to APs, which arbitrate the medium among clients, and also provide
each client with its encoding and decoding vectors. Our solution has
two components: 1) a MAC protocol that allows multiple nodes to
access the medium concurrently, and 2) a concurrency algorithm that
decides which clients upload/download concurrently.
7.1 Accessing the Medium
Our design extends the 802.11 Point of Coordination Function (PCF)
mode to allow it to support multiple concurrent senders. PCF is part of
the standard [12]. It allows the AP to arbitrate the medium by polling
the clients, and is originally designed to enable 802.11 networks to
deal with time sensitive information.
(a) Contention-Free and Contention Periods. In IAC, one of the
APs is designated as the leader. The leader AP acts as a coordina-
tor. It polls the clients and grants access to those who have data
to transmit [12]. Similar to PCF, we divide time into: Contention
Free Period (CFP) and Contention Period (CP), as shown in Fig. 9.
A contention-free period starts with the leader AP broadcasting a
beacon that announces the duration of the current CFP. During a CFP,
the leader AP coordinates access to the medium enabling the nodes to
transmit using IAC. This is followed by a contention period, during
which any node can contend for the channel using standard 802.11n.
The objective of this design is to use the contention period to allow
new clients to associate with the APs, or to transmit after a long period
of silence, using point-to-point MIMO. In contrast, the contention-
free period (CFP) is used to pack transmissions as much as possible,
increasing throughput. The duration of the contention period (CP) is
constant, while the duration of CFP varies depending on congestion.
During CFP, the APs serve one packet (on uplink and downlink) to
each client that has pending trafﬁc. Hence, when congestion is low
and queues are empty, the CFP naturally shrinks, and clients spend
more time in CP. When congestion is high, many clients have pending
trafﬁc and hence the CFP expands, which is desirable as this mode
uses IAC to pack transmissions and increase efﬁciency.
(b) Acquiring Medium During CFP. Next, we explain how con-
current transmitters acquire the medium during a CFP. Clearly, this
164Contention-free period
Data+Poll 
Data+Poll 
Uplink
Data+Poll        
Data+Poll        
. . . . 
Data+Poll        