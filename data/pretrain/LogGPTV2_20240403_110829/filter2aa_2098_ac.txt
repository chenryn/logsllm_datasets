False 
(10) 
False 
False 
False 
Currency symbol based on the 
regional settings of the server 
(culture format). 
1,,2,,,3,, 
True 
True 
True 
(123) 
False 
False 
True  
(1) 
Digit grouping symbol based on 
the regional settings of the server 
(culture format). Can be created 
by HPP too. 
-10.0 
True 
True 
True  
(-10) 
True  
(-10.0) 
True 
True  
(-10) 
Negative symbol based on the 
regional settings of the server. It 
could be a positive sign. 
NCC Group | Page 14 
© Copyright 2019 NCC Group 
String 
A 
B 
C 
D 
E 
F 
Comment 
(10) 
True 
True 
False  
(-10) 
False 
False 
False 
Negative symbol based on the 
regional settings of the server. 
10- 
True 
True 
False  
(-10) 
False 
False 
True  
(10) 
Negative symbol based on the 
regional settings of the server. It 
could be a positive sign. 
1e2 
True 
True 
True  
(100) 
True  
(1e2) 
True 
True  
(100) 
String length can be less than the 
number’s length 
%20%091 
True 
True 
True  
(1) 
True  
(1) 
True 
True  
(1) 
Space characters (09-0D and 20) 
Space characters (09-0D and 20) 
%20=Space 
%09=Tab 
1%20%00%00 
True 
True 
True  
(1) 
True  
(1) 
False 
True  
(1) 
Space characters (09-0D and 20) 
followed by Null Character(s) 
&hff 
True 
True 
False  
(255) 
False 
False 
False 
&h and &o can be used in 
VBScript to represent a number in 
Hex or Octal. 
Infinity 
False 
True 
True  
(Infinity) 
True  
(Infinity) 
False 
False 
Infinity: a reserved Word for C# 
and Java 
NaN 
False 
True 
True  
(NaN) 
True  
(NaN) 
False 
False 
NaN (not a number): a reserved 
Word for C# and Java  
0x0A 
False 
False 
False 
False 
True 
False 
Hex format 
An Array 
False 
False 
False 
False 
False 
True  
(1) 
Providing an input as an array. 
e.g.: 
p.php?in[]=val 
%0B%09%20-
0001,,,,2.8e00
02%09%20%0
C%00%00 
True 
True 
True  
(-1280) 
False 
False 
True  
(-1) 
An example using the above 
notations 
%0B$%09%2
0(0001,,,,2.8e
0002%09%20)
%0C%00%00 
False 
True 
False  
(-1280) 
False 
False 
False 
An example using the above 
notations 
Note 1: “Integer.parseInt” in Java cannot convert any of the numbers in the above table. 
Note 2: “Convert.ToInt32("0X0A", 16)” in C# .Net returns “10”. This function cannot convert 
other numbers in the above table though. 
Note 3: PHP 5.4 supports a binary prefix (“0b”) that can be used to create a number as well.  
NCC Group | Page 15 
© Copyright 2019 NCC Group 
2.6 Card Number-Related Issues 
Payment card numbers are some of the most attractive data for attackers. In addition to being used 
for online shopping, they can be sold on black markets even without the card verification code or value 
(three-digit or four-digit number printed on the front or back of a payment card). 
Nowadays many e-commerce websites are compliant with the Payment Card Industry Data Security 
Standard (PCI DSS) [8], making them more secure and in order to attract more suppliers and 
customers and to reduce the risk of card data breaches. As a result, they must not permanently store 
the card verification code used to verify card-not-present transactions. In addition, they must encrypt 
the card numbers in their storage.  
The following examples discuss two different security issues to which PCI-compliant web applications 
can still be vulnerable. 
2.6.1 Showing a Saved Card Number during the Payment Process 
E-commerce websites may reveal users’ saved bank card numbers during the checkout process. Most 
of the time, this occurs due to a bad implementation, and the card number is not required to be 
displayed. Sometimes, however, the card number should be decrypted on the payment page; for 
instance if it is to be sent to a 3D-Secure authentication website. 
This can be problematic, as an attacker who has hijacked a user’s session or credentials or is exploiting 
a cross-site scripting (XSS) issue can obtain the card numbers.  
The risk can be mitigated if card numbers are only partially displayed (e.g. the last for digits) when 
necessary, the pages which contain the card numbers are password protected, and the 3D-Secure 
authentication process or similar mechanisms cannot be activated directly by accessing those pages 
when they are not required. 
NCC Group also often finds unsaved card numbers in HTTP responses after using a card number in 
a payment process and before logging out of the website. This behaviour can also be dangerous, 
especially when the website is vulnerable to XSS or session-hijacking attacks. 
It should be noted that the CVV (CV2) numbers (the card verification code) must not be seen in any of 
the responses from the server at any time. 
2.6.2 Card Number Enumeration via Registering Duplicate Cards 
Some websites do not allow their customers to save the same card number in multiple accounts. One 
of the reasons is to detect duplicate accounts or to stop abusing first-time buyers’ offers. 
This functionality, when it is badly implemented, can be abused to brute-force other user card numbers 
which are registered on the website. 
2.7 Dynamic Prices, Prices with Tolerance, or Referral Schemes 
CWE: 840 
Sometimes prices and discounts can be dynamic because of currency exchange rates, number of sold 
items, referral schemes, and delays in submitting a price in dynamic trading systems. 
Therefore, the application specification should be reviewed to see if it supports dynamic prices. Most 
of the time, an additional input parameter helps the application to recognise the use of dynamic prices. 
For instance, the system may start using dynamic prices when the application does not use the default 
currency or when a customer uses a mobile device or resides in a certain country which can have a 
slower Internet speed. It may also consider using submitted prices when a referral header or a referral 
parameter is available. In order to find these systems, a number close to the original price (price ± 
0.01) should be submitted while changing the other parameters. 
Other parameters that affect the final price may also be dynamic or have a margin of threshold. For 
example, it is quite normal to see this behaviour in the “odds” parameter of a live betting application. 
NCC Group | Page 16 
© Copyright 2019 NCC Group 
The application policy should be reviewed whenever dynamic prices are found, to ensure that the 
changed prices are within the allowed margin. In addition, a secure cryptographic method should be 
used when the prices are generated by a trusted party or even by the website itself, in order to identify 
any manipulation by untrusted parties. 
2.8 Discount Codes, Vouchers, Offers, Reward Points, and Gift Cards 
Users can earn reward points in many e-commerce applications when the points can be used to 
purchase items, they should be treated and tested exactly like the user’s balance. Therefore, negative 
number issues, rounding issues, concurrency issues, and so on should all be tested.  
2.8.1 Enumeration and Guessing 
Discount codes and vouchers which can be used to reduce the final price should be tested to ensure 
they are not predictable and cannot be easily enumerated. 
Similarly, gift or loyalty card numbers should be unpredictable and very difficult to enumerate, 
otherwise an attacker can create a duplicate card to use a victim’s balance. When these cards carry a 
spendable balance, they should be treated similarly to bank card numbers and should be protected by 
PIN codes or passwords. 
2.8.2 Vouchers and Offers Stacking 
E-commerce applications typically prevent the use of multiple vouchers or offers in a single transaction. 
However, logical flaws sometimes happen when for example a buy-1-get-1-free offer is combined with 
3-for-2 or 3-for-1 which can result in a 3-for-1 or 3-for-0.5. 
2.8.3 Earning More Points or Cash Return than the Price when Buying an Item 
Point collection when using points to purchase an item should not be possible as it can lead to logical 
flaws. An example can be a promotional offer that buying with points would result in collecting the 
same amount of points. This can also happen in systems that can accept cash when the promotional 
returned cash or collected points can be used to buy the same item.  
Another interesting example is the purchase of prepaid cash cards that can be used like real money. 
These cards may be purchased for less than their actual value when there is an offer on all gift cards. 
This can even be more problematic when gift cards can be used to purchase more gift cards to create 
constant profit until they are out of stock. 
2.8.4 Using Expired, Invalid, or Other Users’ Codes 
The application behaviour after applying any discount method should be reviewed to see if there are 
any interesting parameters that can be manipulated or replayed to use a discount code for different 
products, after a certain date when it is expired, or multiple times when it should expire after the first 
use (concurrency issues can also be tested here). 
Vouchers and offers should be tried to ensure they cannot be used to buy illegitimate items for instance 
using new product discount codes to extend old services. Another example of a verification issue is 
when vendor A promotional codes can be used on vendor B’s website, even if a user does not have 
an account with vendor A. 
2.8.5 State and Basket Manipulation 
Applications need to be tested to ensure that the discount values are calculated at the last stage of 
purchase when the user changes the initial order in any way (adding/removing items or changing the 
quantities). 
This issue can be exploited when removing items from a bundle does not reduce the discount on the 
rest of selected items. In this case, additional items are added to basket to satisfy a promotion, and 
the discount is still honoured upon their removal. 
NCC Group | Page 17 
© Copyright 2019 NCC Group 
Another variant is when discounted and non-discounted items can be added to a basket to receive an 
additional discount on the whole basket. For instance, this might be exploited similar to voucher or 
promotion stacking when another voucher code can be applied to the whole basket, as a non-
discounted item exists. In some cases, the originally non-discounted item can be removed from the 
basket afterwards without losing the discount on an already discounted item. 