Figure 14: Conﬁdence level vs. fraction of ﬂows.
– We search for connections to the same remote
endpoint e.g.
in the
known set. This method was inspired by the work
in [10].
the same {IP,port} pair,
– We perform reverse dns lookups for each re-
mote IP searching for ADSL machines. Most of
the providers use simple syntax consisting of IP
address and some keywords to identify the hosts
of their users. The list of keywords we used is
provided in Table 7. It is inspired by [19]6, and
based on the hypothesis that communication be-
tween two ADSL hosts is likely to be due to a p2p
application.
The above procedure is formalized in Algorithm 1. Results
for the p2p predictions are presented in Figure 15. Overall,
we obtained that at least half of the bytes and ﬂows classiﬁed
with high conﬁdence predictions are further reinforced by
the results of Algorithm 1. The reason why a fraction of
p2p ﬂows were not classiﬁed by ODT lies in the method
used to detect these applications. In most cases, DPI tools
need to monitor the beginning of the ﬂows.
7.3.2 Web predictions
For the ﬂows classiﬁed as Web, we perform connections
attempts to each endpoint, using wget, searching active Web
servers. The hit ratios was very low, below 3%. However
traces are more than one year old, so we can not verify
how many servers were really active during the time of the
capture.
Using reverse dns queries, we veriﬁed that most of the end-
points involved in the ﬂows predicted as WEB ﬂows were res-
idential hosts. In such a case, the existence of transient Web
servers can be due to malicious activities like Fast Flux net-
works [6], which are botnets where compromised machines
are used as proxies to hide a Web server. There is also an in-
creasing trend of using HTTP protocol to control bots which
6We also implemented a simple google querying tool pro-
posed in [19]. This method relies on parsing the google an-
swers for the {IP, port} pairs of the ﬂows seeking for appli-
cation indication. However the number of hits obtained was
too low.
0.40.50.60.70.80.9100.20.40.60.81Condifence level CDF  MS−IR−IIR−IIIT−IConfidence 0.95132(a) Flows
(b) Bytes
Figure 15: Results of the validation algorithm 1 for the P2P applications.
Algorithm 1: Endpoints proﬁling.
foreach f=ﬂow in P2P do
if f.prediction.conﬁdence ≥ 0.95 then
if f.remote.endpoint in known set then
Known.insert(f)
else
if f.local.port==legacy OR
f.remote.port==legacy then
Port.insert(f)
else
if f.remote.endpoint in adsl set then
ADSL.insert(f)
else
Reject.insert(f)
end
end
end
else
Reject.insert(f)
end
end
Port
Class
80, 8080, 443
WEB
P2P-EDONKEY
4662, 4672
P2P-BITTORRENT 6881-6889
P2P-GNUTELLA
6346
Table 6: Legacy ports used.
Keyword
wanadoo
proxad
dsl/DSL/ADSL Other providers
Provider
Orange
Free
Table 7: Keywords used to detect DSL hosts.
is supposed to make the detection more diﬃcult [11]. Such
behavior could explain results of our classiﬁer and the fact
that the ﬂows were unknown to ODT. We leave for future
work study of this hypothesis.
7.3.3 Throughput distributions comparison
A last technique we used to challenge the predictions made
by the statistical classiﬁer is to plot distributions of through-
put for ﬂows in a given class in the known and unknown sets.
We present the resulting cdfs in Figure 16. We observe from
this ﬁgure that EDONKEY and BITTORRENT predictions
seem reasonable as the throughputs for both sets are similar.
In addition, those throughputs are clearly smaller than the
throughputs of the ﬂows in the known WEB class, which
is in line with the fact that residential end hosts are less
provisioned than Web servers in general. On the contrary,
the unknown WEB class signiﬁcantly diﬀers from the known
one, which is in line with the observation made on the pre-
vious section that the remote server was a residential host,
and gives further weight to the hypothesis that malicious
activities are at play.
Figure 16: Throughput distributions for KNOWN
and predicted sets. Trace MSI.
7.4 The Unknown Class - Discussion
We have shown that a supervised model of traﬃc classi-
ﬁcation can be useful to mine the unknown traﬃc. High
conﬁdence predictions were further validated by a number
of heuristics based on a variety of endpoint informations and
port numbers. We presented the usage of statistical classiﬁer
as a complementary method for tools like ODT. Prediction
module can be included in the tool and used as a additional
source of information in the labor intense process of updat-
ing signatures for new versions of emerging applications.
MS−IR−IIR−IIIT−I00.20.40.60.81KNOWN SETKNOWN SETPORTPORTADSLADSLADSLADSLKNOWN SETKNOWN SETPORTPORTMS−IR−IIR−IIIT−I00.20.40.60.81  ADSLADSLKNOWN SETKNOWN SETKNOWN SETPORTPORTPORTADSLKNOWN SETPORTADSL0.0001110,00000.20.40.60.81Throughput down [Kbit/s] CDF  EDONKEYWEBB.TORRENT1338. CONCLUSION AND FUTURE WORK
In this paper, we adopted the perspective of an ADSL
provider, and critically evaluated the potential beneﬁts com-
ing from a production deployment of statistical tools for ap-
plication identiﬁcation.
Our conclusions are manifold. On the positive side, sta-
tistical classiﬁcation turns out to be useful to mine the traf-
ﬁc left unidentiﬁed by DPI tools. Statistical classiﬁcation
also oﬀers high performance when applied on the same site
where the classiﬁer was trained. We have further demon-
strated that statistical classiﬁcation allows to discriminate
between applications, even if they rely on the same protocol,
e.g. Web mail and Web ﬁle transfers.
On the negative side, we have demonstrated that statis-
tical classiﬁcation tools might suﬀer from data overﬁtting,
which prevents a simple strategy such as: train on the largest
PoP (where ground truth is available) and deploy on all
other sites. To the best of our knowledge, this has never
been observed before. This problem is complex as it per-
sisted over the whole range of features sets and machine
learning algorithms we considered. An important by prod-
uct of this study is to highlight the need to test new classi-
ﬁers not simply on traces collected on a given site, but also
on traces collected on diﬀerent sites. The latter needs to
be done on “homogeneous” traces in terms of type of traﬃc
and capture time. Indeed, previous attempts to address the
cross-site issue either considered overly heterogeneous traces
[12] or traces collected in academic environments [13] with
long periods of time (one year) between subsequent traces.
As future work, we would like to devise a strategy to se-
lect features that would be immune when used in cross-site
studies. A possible solution could be to use per application
features instead of a shared set for all applications.
9. ACKNOWLEDGMENTS
Thanks are due to our colleagues: Patrick Brown, Ernst
Biersack, Daniele Croce, Louis Plissonneau and Pawe l
Szczepaniec for their feedback on an early version of this
paper. We would also like to thank our shepherd Kav´e Sala-
matian as well as the anonymous reviewers for their valuable
suggestions.
10. REFERENCES
[1] M. Meo D. Rossi A. Finamore, M. Mellia. Kiss:
Stochastic packet inspection. In COST 2009 :
Springer : Lecture Notes in Computer Science, Vol
5537, 2009., May 2009.
[2] L. Bernaille, R. Teixeira, Early recognition of
encrypted applications. In Passive and Active
Measurement conference (PAM 07), Louvain, Belgium,
2007.
[3] L. Bernaille, R. Teixeira, and K. Salamatian. Early
application identiﬁcation. In Proceedings of the 2006
ACM CoNEXT conference, Lisbon, Portugal.
[4] D. Bonﬁglio, M. Mellia, M. Meo, D. Rossi, and P.
Tofanelli. Revealing skype traﬃc: when randomness
plays with you. SIGCOMM Comput. Commun. Rev.,
37(4):37–48, 2007.
[5] J. Erman, M. Arlitt, and A. Mahanti. Traﬃc
classiﬁcation using clustering algorithms. In MineNet
’06: Proceedings of the 2006 SIGCOMM workshop on
Mining network data, Pisa, Italy, 2006.
[6] Fast Flux.
http://www.darkreading.com/security/perimeter/
showarticle.jhtml?articleid=208804630.
[7] S. Malomsoky G. Szabo, D. Orincsay and I. Szabo. On
the validation of traﬃc classiﬁcation algorithms. In
Passive and Active Measurement conference (PAM
08), Cleveland, Ohio, USA, 2008.
[8] J.R.Quinlan. C4.5: Programs for Machine Learning.
Morgan Kaufmann, 1992.
[9] T. Karagiannis, A. Broido, M. Faloutsos, and
Kc claﬀy. Transport layer identiﬁcation of p2p traﬃc.
In IMC ’04: Proceedings of the 4th ACM SIGCOMM
conference on Internet measurement, Portland,
Oregon, USA, 2004.
[10] T. Karagiannis, K. Papagiannaki, and M. Faloutsos.
Blinc: multilevel traﬃc classiﬁcation in the dark.
SIGCOMM Comput. Commun. Rev., 35(4), 2005.
[11] A. Karasaridis, B. Rexroad, and D. Hoeﬂin.
Wide-scale botnet detection and characterization. In
HotBots’07: Proceedings of the ﬁrst conference on
First Workshop on Hot Topics in Understanding
Botnets, Berkeley, CA, USA, 2007.
[12] H. Kim, KC Claﬀy, M. Fomenkov, D. Barman, M.
Faloutsos, and KiYoung Lee. Internet traﬃc
classiﬁcation demystiﬁed: myths, caveats, and the best
practices. In Proceedings of the 2008 ACM CoNEXT
Conference, Barcelona, Spain, 2008.
[13] W. Li, M. Canini, A. W. Moore, and R. Bolla.
Eﬃcient application identiﬁcation and the temporal
and spatial stability of classiﬁcation schema.
Computer Networks, 53(6):790 – 809, 2009.
[14] A. W. Moore and D. Zuev. Internet traﬃc
classiﬁcation using bayesian analysis techniques. In
Proceedings of the 2005 ACM SIGMETRICS
international conference on Measurement and
modeling of computer systems, Banﬀ, Alberta,
Canada, 2005.
[15] T.T.T. Nguyen and G. Armitage. Training on multiple
sub-ﬂows to optimise the use of machine learning
classiﬁers in real-world ip networks. In Proceedings of
the 31st IEEE Conference on Local Computer
Networks Tampa, Florida, USA, 2006.
[16] M. Pietrzyk, G. Urvoy-Keller, and J.-L. Costeux.
Revealing the unknown adsl traﬃc using statistical
methods. In COST-TMA 2009 : Springer : Lecture
Notes in Computer Science, Vol 5537, 2009., Aachen,
Germany, 2009.
[17] Honeypot project. http://www.leurrecom.org.
[18] S. Sen, O. Spatscheck, and D. Wang. Accurate,
scalable in-network identiﬁcation of p2p traﬃc using
application signatures. In WWW ’04: Proceedings of
the 13th international conference on World Wide Web,
New York, NY, USA, 2004.
[19] I. Trestian, S. Ranjan, A. Kuzmanovi, and A. Nucci.
Unconstrained endpoint proﬁling (googling the
internet). SIGCOMM Comput. Commun. Rev., 38(4),
2008.
[20] Tstat. http://tstat.tlc.polito.it/.
[21] G. Armitage T.T.T. Nguyen. A survey of techniques
for internet traﬃc classiﬁcation using machine
learning. Communications Surveys and Tutorials,
IEEE, 10(4):56–76, 2008.
134[22] N. Williams, S. Zander, and G. Armitage. A
preliminary performance comparison of ﬁve machine
learning algorithms for practical ip traﬃc ﬂow
classiﬁcation. SIGCOMM Comput. Commun. Rev.,
36(5):5–16, 2006.
[23] H. Xie, Y. R. Yang, A. Krishnamurthy, Y. G. Liu, and
A. Silberschatz. P4P: provider portal for applications.
SIGCOMM Comput. Commun. Rev., 38(4), 2008.
[24] Youtube. http://youtube.com/.
[25] eMule. http://www.emule-project.net/.
[26] Dailymotion. http://dailymotion.com/.
[27] WEKA data mining.
http://www.cs.waikato.ac.nz/ml/weka/.
135