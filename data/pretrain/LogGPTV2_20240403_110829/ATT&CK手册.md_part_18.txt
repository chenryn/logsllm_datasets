还可以直接借助的Metasploit 模块去检查无人值守安装留下的信息。以及IIS web
服务器的web.config 文件
> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\web.config
> C:\\inetpub\\wwwroot\\web.config
其他的还有CMD 命令搜索包含单词password 的文件，以及C
盘下可能存储凭证的文件
> findstr /si password \*.txt findstr /si password \*.xml findstr /si
> password \*.ini
>
> C:\\\> dir /b /s unattend.xml C:\\\> dir /b /s web.config C:\\\> dir
> /b /s sysprep.inf C:\\\> dir /b /s sysprep.xml C:\\\> dir /b /s
> \*pass\*
>
> C:\\\> dir /b /s vnc.ini
注册表中
> reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t
> REG_SZ /s
>
> reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows
> NT\\Currentversion\\Winlogon\" reg query
> \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"
PowerSploit 的模块检查
> Get-UnattendedInstallFile Get-Webconfig
>
> Get-ApplicationHost Get-SiteListPassword
>
> Get-CachedGPPPassword Get-RegistryAutoLogon
详情，请阅读文末的参考资料：存储凭证
参考资料
存储凭证：https://pentestlab.blog/2017/04/19/stored-credentials/
####### Windows 内核漏洞利用
利用漏洞在系统中提权。 cmd 枚举所有已安装的修补程序
> wmic qfe get Caption,Description,HotFixID,InstalledOn
发现与权限提升相关的任何缺失补丁
> wmic qfe get Caption,Description,HotFixID,InstalledOn \| findstr
> /C:\"KB3136041\" /C:\" KB4018483\"
利用Metasploit 识别缺失的补丁
> post/windows/gather/enum_patches
Windows Exploit Suggester 工具识别缺失的补丁 下载地址：
https://github.com/GDSSecurity/Windows-Exploit-Suggester
powershell 脚本识别缺失的补丁 下载地址：https://github.com/rasta-
mouse/Sherlock
得到漏洞编号可以去各平台搜索一下exp：比如github，ExploitDB，metasploit
官网等
详情，请阅读文末的参考资料：Windows 内核漏洞利用
-   CMD 命令发现是否有阻碍利用的补丁存在
-   Metasploit 模块识别缺失的补丁
-   power shell 的检测脚本
-   如果某个补丁不存在，查查最后面的表参考资料 Windows 内核漏洞利用：
https://pentestlab.blog/2017/04/24/windows-kernel-exploits/
用户名密码或Hash 获取： 1.WCE: 2.mimikatz: 3.get-pass 下载地址：
下载地址：链接: https://pan.baidu.com/s/1QB4XpFGxjS-\_edgJnWWL9A 提取码:
nfdm 解压密码：t00ls.net win2008 测试成功。
![](media/image209.jpeg){width="5.555540244969379in"
height="5.763333333333334in"}
windows 提 权 辅 助 工 具 Windows-Exploit-
Suggester:https://github.com/GDSSecurity/Windows-Exploit-Suggester
python 脚本，支持python2.7，需要安装xldr 模块。 1.先更新漏洞库 python2
windows-exploit-suggester.py \--update
> ![](media/image210.jpeg){width="5.833333333333333in" height="1.0in"}2.
生成目标系统的系统信息文件： systeminfo \> 1.txt
> ![](media/image211.jpeg){width="5.772647637795275in"
> height="2.658332239720035in"}3.
查看系统漏洞： python2 windows-exploit-suggester.py \--database 2019-
10-08-mssb.xls \--systeminfo 1.txt
![](media/image212.jpeg){width="5.799818460192476in"
height="2.667915573053368in"}
根据结果显示存在的漏洞寻找对于漏洞的提权方法。
IIS6 提权 IIS6 提权工具是一款windows
本地溢出工具，主要作用就是可以将低权限用户提升为系统权限，常见于webshell
提权，补丁号为KB970483 低权限用户：
![](media/image213.jpeg){width="5.828279746281715in"
height="2.2830205599300086in"}
发现我们现在是network 权限，调用iis6.exe
![](media/image214.jpeg){width="5.829714566929134in"
height="3.524478346456693in"}
发现变成system 权限了，现在可以继续执行添加用户命令
![](media/image215.jpeg){width="5.4811089238845145in"
height="3.5130205599300086in"}
然后添加到管理组
![](media/image216.jpeg){width="5.827479221347332in"
height="3.6296872265966753in"}
ms11080
ms11080 提权是一款windows
本地溢出工具，主要作用就是可以将低权限用户提升为系统权限，常见于webshell
提权 低权限：
![](media/image213.jpeg){width="5.828279746281715in"
height="2.2830205599300086in"}
发现我们现在是network 权限，调用 11080.exe 并执行
![](media/image217.jpeg){width="5.828345363079615in" height="3.40875in"}
PR 提权 PR 提权工具是一款windows
本地益出工具，主要作用就是可以将低权限用户提升为系统权限，常见于webshell
提权，补丁号为KB952004。 低权限：
发现我们现在是network 权限，调用pr.exe
![](media/image218.jpeg){width="5.828507217847769in"
height="3.1457283464566927in"}
巴西烤肉提权 巴西烤肉提权工具是一款windows
本地溢出工具，主要作用就是可以将低权限用户提升为系统权限，常见于webshell
提权，漏洞补丁号为KB956572 低权限：
![](media/image213.jpeg){width="5.828279746281715in"
height="2.2830205599300086in"}
发现我们现在是network 权限，调用churrasco.exe
![](media/image219.jpeg){width="5.828087270341207in" height="4.16625in"}
####### DLL 注入
在另一个进程的内存空间中以注入DLL
的形式运行任意代码，得到的权限取决于另一个进程自身的上下文权限（你有多少权限，我就有多少权限）
1.需要将DLL 放入磁盘 2."CreateRemoteThread"调用"LoadLibrary"
3.反射加载器函数将尝试使用适当的CPU
寄存器找到目标进程的进程环境块（PEB），并从中尝试查找kernel32dll
和任何其他所需库的内存中的地址。 4.发现所需API
函数的内存地址，例如LoadLibraryA，GetProcAddress 和VirtualAlloc。
5.上面的函数将用于将DLL 正确加载到内存中并调用其执行DLL
的入口点DllMain。
> 创建*DLL*
通过Metasploit 的msfvenom 创建DLL，生成包含特定的有效载荷的DLL。
设置metasploit 监听器，以便在恶意DLL 注入进程后反向链接回来
> 远程*DLL*注入器
您 需 要 下 载 这 个 工 具 ：Remote DLL Injector 地 址 ：
https://securityxploded.com/remote-dll-injector.php 图形化界面：
https://securityxploded.com/remotedll.php
该工具使用了使用CreateRemoteThread 技术支持DLL
注入，而CreateRemoteThread 又是 windows API
中的一个函数的命名，它可以在另一个进程中，创建一个线程。
如果您对此函数感兴趣的话，可以阅读文末参考资料： CreateRemoteThread 函数
-   注意，这是一段很小的C++代码，您只需要关注英文单词的意思即可读懂。
-   同理：LoadLibrary 也是函数，可以直接在windows
    开发人员中心中搜索即可。代码只有一句话，可以加载.dll 文件或.exe 文件
该工具能够将DLL 注入启用了ASLR 保护机制的进程：关于ASLR
可以阅读参考资料内存随机化保护(ASLR)简介
如果成功注入DLL，它将返回具有进程权限的meterpreter 会话
metasploit 也具有用于执行DLL 注入的特定模块，PowerSploit
也具有用于执行DLL 注入的模块。 以上所有详情，请阅读文末的参考资料：DLL
注入
-   关于PowerSploit 它是powershell 的渗透框架，和nishang
    一样，详情请阅读文末的参考资料：Powershell & Powersploit 入门
参考资料 DLL 注入：https://pentestlab.blog/2017/04/04/dll-injection/
CreateRemoteThread 函 数 ：https://docs.microsoft.com/en-
us/windows/win32/api/processthreadsapi/nf-processthreadsapi-
createremotethread 内存随机化保护(ASLR)简
介:https://introspelliam.github.io/2017/07/14/0day/%E5%86%85%E5%AD
%98%E9%9A%8F%E6%9C%BA%E5%8C%96%E4%BF%9D%E6%8A%A4
-ASLR-%E7%AE%80%E4%BB%8B/ Powershell & Powersploit 入 门 ：
https://[www.secpulse.com/archives/55893.html](http://www.secpulse.com/archives/55893.html)
####### 弱服务权限
由于各种文件夹，服务的权限配置不当造成的安全问题，叫弱服务权限
在windows 中，经常会出现使用system
权限运行的服务，而且这些服务还没有被进行安全的设置。
这些服务主要是使用了第三方的软件带来的。
总之是系统上存在的服务和文件夹的权限没有设置好。
借助meterpreter 得到shell 以后，可以使用微软提供的工具AccessChk v6.12
来检 查 一 下 账 户 具 备 的 权 限 AccessChk v6.12 下 载 地 址 ：
https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk
通过工具发现用户可以修改的所有服务，其中有一条是apache
服务器的ServiceAllAccess，从单词来看就具备所有访问权的意思。
感兴趣的可以阅读文 末的参考资料：服务安全和访问权限
既然是ServiceAllAccess，那么文末可以完全的控制此服务，可以修改此服务的
属性。 通过命令sc qc Apache，获取服务的配置信息。配置中的BINARYPATHNAME
参数可以执行系统上的任何命令。 将这里的值，修改成添加
用户到本地管理员组的命令，从而通过此方法提升权限。
修改以后在下次服务重启时生效。由于更改了它的配置，重启以后apache
服务肯定是失败的，它被改成我们自己的添加用户的命令了。
添加用户命令将执行成功。
metasploit 也有模块可以很容易的利用弱服务权限，PowerSploit 也同理 详情，
请阅读文末的参考资料：弱服务权限
参考资料 弱服务权限：https://pentestlab.blog/2017/03/30/weak-service-
permissions/ 服 务 安 全 和 访 问 权 限 ：https://docs.microsoft.com/en-
us/windows/win32/services/service-security-and-access-rights
####### DLL 劫持
应用程序和服务启动时，先找DLL，如果这些DLL
不存在或设置不安全就可以把正宗的DLL 换成恶意的DLL 文件。
几个关键点
-   应用程序加载DLL 时的各种目录
-   检查系统具有system 权限的所有进程是否缺少DLL
-   注意软件安装的路径，以及安装编程语言环境时的Path 变量
-   使用Metasploit 生成payload，根据上下文重命名，放入Process Monitor
    发现的缺少DLL 的路径中
-   PowerSploit 也可以完成以上部分
就是看程序在哪里加载DLL，把这些位置的DLL
换成恶意的详情，请阅读文末的参考资料：DLL 劫持
参考资料 DLL 劫持：https://pentestlab.blog/2017/03/27/dll-hijacking/
####### 权限提升技术代号 Hot potato，热土豆
各种工具使用热土豆漏洞，请阅读文末参考资料：热土豆 代号potato
原理，请阅读文末参考资料：Hot Potato - Windows 权限提升
几个关键信息：
-   NTLM 中继，NBNS 欺骗
-   本地NBNS 欺骗：查hosts，查DNS，最后查NBNS。伪造NBNS
    的回复请求，欺骗他过来进行身份认证
-   UDP 端口耗尽技术来强制系统上的所有DNS 查找失败，最终进行NBNS 查询
-   假WPAD 代理服务器
-   HTTP - \> SMB NTLM 中继参考资料
热土豆：https://pentestlab.blog/2017/04/13/hot-potato/ Hot Potato -
Windows 权限提升：https://foxglovesecurity.com/2016/01/16/hot-potato/
10. **Juicy Potato ([T1134 -
    访问令牌操作](https://attack.mitre.org/techniques/T1134/))**
https://ohpe.it/juicy-potato/
https://ci.appveyor.com/project/ohpe/juicy- potato/build/artifacts
![](media/image220.jpeg){width="5.822859798775153in"
height="3.4171872265966754in"}
####### 权限提升知识上下文获取之过程分享
理想很丰满，现实很骨感。 token
是什么，我不是科班出身行不行？我没有基础怎么办？去哪里学习？