Encryption mode
Block size
AES-CTR + integrity + freshness
XE or XEX
XE or XEX
XEX
?
XTS
AES XTS or QARMA†
128-bit
128-bit
128-bit
128-bit
?
128-bit
128-bit†
the unencrypted VMCB vulnerability. Hetzelt et al. showed
that the attacker could control the VM’s execution and perform
ROP attacks [17]. Werner et al. showed that
the attacker
can infer VM’s instructions, ﬁngerprint applications, and steal
secret data [34]. From SEV-ES, registers are encrypted and
stored in VMSA. For SEV-ES, an additional integrity check is
performed on every VMRUN. For SEV-SNP, the RMP table
restricts software’s write access towards the VMSA area.
Manipulate Nested Page Table (SEV-ES). By changing
the mapping between the guest physical address and the
system physical address in the nested page table, the attacker
can disturb the VM’s execution and turn the VM’s benign
activities into malicious activities. In the SEVered attack [30],
Morbitzer et al. showed that programs with a network interface
(e.g., web server) could be used to decrypt the VM’s memory.
Speciﬁcally, the attacker sends some ﬁle query requests to
the webserver inside a SEV-enabled VM and then remaps
the guest physical address belonging to those data ﬁles to
some host physical addresses of private data. The private data
will then be sent back to the attacker. The latest SEV-SNP
mitigates this vulnerability by prohibiting the hypervisor from
unauthorized NPT remapping.
Note that the hypervisor-controlled nested page table also
results in a page-level controlled channel. The page fault
controlled channel is widely used in numerous attacks against
AMD SEV ( [24], [26], [34], [35], etc.), and is used to infer
the VM’s activities and step its execution. SEV-SNP also
suffers from this controlled channel. According to SEV-SNP’s
whitepaper [4], the page-level controlled channel is not in the
scope of SEV-SNP’s designed features.
Modify encrypted memory (SEV-ES). Before SEV-SNP, the
hypervisor had write access to the VM’s memory, which led
to some delicate attacks ( [10], [14], [35], etc.) that broke the
integrity of SEV-enabled VMs by carefully overwriting their
encrypted memory. Wilke et al. [35] improved the analysis of
the encryption modes on Zen 1 Embedded CPUs, discovering
the updated XEX encryption mode and extending the reverse
engineering of the tweak function. Using the tweak values in
combination with a known plaintext-ciphertext dictionary, they
built malicious code gadgets by copying ciphertext blocks in
memory. Based on that, they bootstraped an encryption oracle.
From Zen 2 onwards these attacks are no longer possible due
to an improved tweak function.
Tamper with the I/O bounce buffer (SEV-ES). Because of
the encrypted memory, DMA is not directly supported in SEV.
A shared bounce buffer (SWIOTLB) is then introduced for I/O
trafﬁc. For incoming I/O trafﬁc, the guest VM copies the data
from the bounce buffer to its private memory. For outgoing
I/O trafﬁc, the guest VM copies the data from the private
memory to the bounce buffer. The memory copy activities give
the attacker a chance to construct encryption and decryption
oracles. Li et al. [25] showed that the attacker could overwrite
I/O trafﬁc to encrypt/decrypt the VM’s memory stealthily.
SEV-SNP or processors with XEX mode memory encryption
can mitigate this attack.
ASID-based momentary execution (SEV-ES). In SEV, in-
cluding SEV-ES and SEV-SNP, the Address Space Identify
(ASID) is managed by the untrusted hypervisor. While ASIDs
play some rather important roles in SEV-enabled VMs, in-
cluding cache tagging, TLB tagging, and identifying the VM
encryption keys,
the hypervisor has the ability to modify
a VM’s ASID during the VM’s lifecycle. SEV relies on a
“Security-by-Crash” principle that an improper ASID always
causes a meaningless VM crash, assuming good behavior of
the hypervisor. Li et al. [24] exploited this improper principle
and introduced the CROSSLINE attacks. The authors showed
that the attacker could extract the victim VM’s encrypted
memory blocks by setting an adversary-controlled attacker VM
and changing the attacker VM’s ASID to the victim VM’s
ASID. Because of the lack of ASID checks, the hardware
always tried to execute the VM directly, which enabled mo-
mentary execution and a time window for leaking secrets. Even
though SEV-SNP still gives the hypervisor the permission of
ASID management, the additional ownership check mitigates
the CROSSLINE attacks by restricting read access from the
attacker VM to the victim VM.
ASID-tagged TLB (SEV-ES). Li et al. studied the hypervisor
controlled TLB ﬂush problem in SEV and SEV-ES [27]
and presented TLB poisoning attacks. A TLB control ﬁeld
inside the VMCB controls the TLB ﬂush during VMRUN.
The authors exploited the fact that the hypervisor can skip
TLB ﬂushes by intentionally clearing the TLB control ﬁeld.
By doing so, the attacker could breach the TLB isolation
between vCPUs from the same VM. The authors showed that
an SSH connection controlled by the attacker could reuse
other SSH connections’ TLB entries and bypassed the login
authentication. SEV-SNP adds a hardware-controlled TLB
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:55:46 UTC from IEEE Xplore.  Restrictions apply. 
13349
ﬂush mechanism to mitigate this vulnerability.
Permutation agnostic attestation (SEV-ES). Wilke et al. [36]
exploited that the attestation mechanism of SEV and SEV-ES
was not able to detect permutations of the attested data in
memory on a 16-byte granularity. They further showed how an
attacker can use the ability to reorder code blocks to construct
malicious code gadgets allowing to encrypt/decrypt arbitrary
data. This attack is mitigated with SEV-SNP.
Voltage glitching attack (SEV-SNP). Buhren et al. studied a
fault injection attack against AMD-SP, named voltage glitch-
ing attack [11]. Different from other works in this section,
voltage glitching attack needs additional equipment (including
a µController and a ﬂash programmer) and real-physical
access to SEV’s machine. By inducing errors in AMD-SP’s
bootloader and implanting a malicious SEV ﬁrmware, voltage
glitching attack are shown to be able to extract secrets used
in SEV’s remote attestation.
IX. CONCLUSION
In this paper, we have performed a comprehensive study
on the ciphertext side channels. Our work extends ciphertext
side-channel attack to exploit the ciphertext leakage from all
memory pages,
including those for kernel data structures,
stacks and heaps. We have also proposed a set of software
countermeasures,
including patches to the OS kernel and
cryptographic libraries, as a workaround to the identiﬁed
ciphertext leakage.
As a general design lesson, deterministic encryption modes
like XEX must be combined with both read and write pro-
tection to prevent software-based attacks. To also prevent
physical memory attacks, freshness and integrity protection
are required.
REFERENCES
[1] N. J. Al Fardan and K. G. Paterson. Lucky thirteen: Breaking the TLS
and DTLS record protocols. In 2013 IEEE Symposium on Security and
Privacy, pages 526–540. IEEE, 2013.
[2] AMD. Open-Source Register Reference For AMD Family 17h Proces-
sors Models 00h-2Fh. Manual, July 2018. Rev 3.03.
[3] AMD. AMD64 architecture programmer’s manual volume 2: System
programming. Manual, 2019.
[4] AMD. AMD SEV-SNP: Strengthening VM isolation with integrity
protection and more. White paper, 2020.
[5] AMD.
AMDSEV/SEV-ES branch.
https://github.com/AMDESE/
AMDSEV/tree/sev-es, 2020.
[6] AMD. AMD Secure Encryption Virtualization (SEV) Information
https://www.amd.com/en/
Disclosure (Bulletin ID: AMD-SB-1013).
corporate/product-security/bulletin/amd-sb-1013, 2021.
[7] ARM. Arm CCA Security Model, August 2021. Rev 1.0, Document
Number DEN0096.
[8] ARM. Arm Conﬁdential Compute Architecture software stack. https:
//developer.arm.com/documentation/den0127/latest, 2021.
[9] D. J. Bernstein, N. Duif, T. Lange, P. Schwabe, and B. Yang. High-
speed high-security signatures.
In B. Preneel and T. Takagi, editors,
Cryptographic Hardware and Embedded Systems - CHES 2011 - 13th
International Workshop, Nara, Japan, September 28 - October 1, 2011.
Proceedings, volume 6917 of Lecture Notes in Computer Science, pages
124–142. Springer, 2011.
[10] R. Buhren, S. Gueron, J. Nordholz, J. Seifert, and J. Vetter. Fault
attacks on encrypted general purpose compute platforms.
In G. Ahn,
A. Pretschner, and G. Ghinita, editors, Proceedings of the Seventh ACM
Conference on Data and Application Security and Privacy, CODASPY
2017, Scottsdale, AZ, USA, March 22-24, 2017, pages 197–204. ACM,
2017.
[11] R. Buhren, H. N. Jacob, T. Krachenfels, and J. Seifert. One glitch to
rule them all: Fault injection attacks against amd’s secure encrypted
virtualization. In Y. Kim, J. Kim, G. Vigna, and E. Shi, editors, CCS
’21: 2021 ACM SIGSAC Conference on Computer and Communications
Security, Virtual Event, Republic of Korea, November 15 - 19, 2021,
pages 2875–2889. ACM, 2021.
[12] J. V. Bulck, F. Piessens, and R. Strackx. Sgx-step: A practical attack
In Proceedings of
framework for precise enclave execution control.
the 2nd Workshop on System Software for Trusted Execution, Sys-
TEX@SOSP 2017, Shanghai, China, October 28, 2017, pages 4:1–4:6.
ACM, 2017.
[13] V. Costan and S. Devadas. Intel SGX explained. IACR Cryptol. ePrint
Arch., page 86, 2016.
[14] Z.-H. Du, Z. Ying, Z. Ma, Y. Mai, P. Wang, J. Liu, and J. Fang. Secure
encrypted virtualization is unsecure. arXiv preprint arXiv:1712.05090,
2017.
[15] Google.
Introducing google cloud conﬁdential computing with conﬁ-
dential VMs. https://cloud.google.com/blog/products/identity-security/
introducing-google-cloud-conﬁdential-computing-with-conﬁdential-vms,
2020.
[16] S. Gueron. A memory encryption engine suitable for general purpose
processors. IACR Cryptol. ePrint Arch., page 204, 2016.
[17] F. Hetzelt and R. Buhren.
Security analysis of encrypted virtual
machines. In Proceedings of the 13th ACM SIGPLAN/SIGOPS Interna-
tional Conference on Virtual Execution Environments, VEE 2017, Xi’an,
China, April 8-9, 2017, pages 129–142. ACM, 2017.
[18] Intel.
10th Generation
Intel Core
Processor
Families.
https://www.intel.com/content/dam/www/public/us/en/documents/
datasheets/10th-gen-core-families-datasheet-vol-1-datasheet.pdf,
2020.
July
[19] Intel. Intel Trust Domain Extensions. Whitepaper, 2020.
[20] Intel.
Product brief, 3rd gen intel xeon scaleable processor for
iot. https://www.intel.com/content/www/us/en/products/docs/processors/
embedded/3rd-gen-xeon-scalable-iot-product-brief.html, 2021.
[21] D. Kaplan. Protecting VM register state with SEV-ES. White paper,
2017.
paper, 2016.
[22] D. Kaplan, J. Powell, and T. Woller. AMD memory encryption. White
[23] D. Lee, D. Jung, I. T. Fang, C. Tsai, and R. A. Popa. An off-chip
attack on hardware enclaves via the memory bus.
In S. Capkun and
F. Roesner, editors, 29th USENIX Security Symposium, USENIX Security
2020, August 12-14, 2020, pages 487–504. USENIX Association, 2020.
[24] M. Li, Y. Zhang, and Z. Lin. CROSSLINE: Breaking “Security-by-
In Proceedings of
Crash” based Memory Isolation in AMD SEV.
the 2021 ACM SIGSAC Conference on Computer and Communications
Security, pages 2937–2950, 2021.
[25] M. Li, Y. Zhang, Z. Lin, and Y. Solihin. Exploiting unprotected I/O
operations in amd’s secure encrypted virtualization. In N. Heninger and
P. Traynor, editors, 28th USENIX Security Symposium, USENIX Security
2019, Santa Clara, CA, USA, August 14-16, 2019, pages 1257–1272.
USENIX Association, 2019.
[26] M. Li, Y. Zhang, H. Wang, K. Li, and Y. Cheng. CIPHERLEAKS:
breaking constant-time cryptography on AMD SEV via the ciphertext
In M. Bailey and R. Greenstadt, editors, 30th USENIX
side channel.
Security Symposium, USENIX Security 2021, August 11-13, 2021, pages
717–732. USENIX Association, 2021.
[27] M. Li, Y. Zhang, H. Wang, K. Li, and Y. Cheng. TLB Poisoning Attacks
on AMD Secure Encrypted Virtualization. In Annual Computer Security
Applications Conference, 2021.
[28] Microsoft.
Azure and AMD announce landmark in conﬁden-
tial computing evolution.
https://azure.microsoft.com/en-us/blog/
azure-and-amd-enable-lift-and-shift-\\conﬁdential-computing/, 2021.
[29] M. Morbitzer, M. Huber, and J. Horsch. Extracting secrets from en-
crypted virtual machines. In G. Ahn, B. M. Thuraisingham, M. Kantar-
cioglu, and R. Krishnan, editors, Proceedings of the Ninth ACM Confer-
ence on Data and Application Security and Privacy, CODASPY 2019,
Richardson, TX, USA, March 25-27, 2019, pages 221–230. ACM, 2019.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:55:46 UTC from IEEE Xplore.  Restrictions apply. 
14350
[30] M. Morbitzer, M. Huber, J. Horsch, and S. Wessel. Severed: Subverting
amd’s virtual machine encryption. In A. Stavrou and K. Rieck, editors,
Proceedings of
the 11th European Workshop on Systems Security,
EuroSec@EuroSys 2018, Porto, Portugal, April 23, 2018, pages 1:1–
1:6. ACM, 2018.
[31] P. Pessl, D. Gruss, C. Maurice, M. Schwarz, and S. Mangard. DRAMA:
exploiting DRAM addressing for cross-cpu attacks.
In T. Holz and
S. Savage, editors, 25th USENIX Security Symposium, USENIX Security
16, Austin, TX, USA, August 10-12, 2016, pages 565–581. USENIX
Association, 2016.
[32] P. Simmons. Security through amnesia: a software-based solution to
the cold boot attack on disk encryption.
In R. H. Zakon, J. P. Mc-
Dermott, and M. E. Locasto, editors, Twenty-Seventh Annual Computer
Security Applications Conference, ACSAC 2011, Orlando, FL, USA, 5-9
December 2011, pages 73–82. ACM, 2011.
[33] S. Swami and K. Mohanram. COVERT: counter overﬂow reduction
for efﬁcient encryption of non-volatlle memories.
In D. Atienza and
G. D. Natale, editors, Design, Automation & Test in Europe Conference
& Exhibition, DATE 2017, Lausanne, Switzerland, March 27-31, 2017,
pages 906–909. IEEE, 2017.
[34] J. Werner, J. Mason, M. Antonakakis, M. Polychronakis, and F. Mon-
rose. The severest of them all: Inference attacks against secure virtual
enclaves.
In S. D. Galbraith, G. Russello, W. Susilo, D. Gollmann,
E. Kirda, and Z. Liang, editors, Proceedings of the 2019 ACM Asia
Conference on Computer and Communications Security, AsiaCCS 2019,
Auckland, New Zealand, July 09-12, 2019, pages 73–85. ACM, 2019.
[35] L. Wilke, J. Wichelmann, M. Morbitzer, and T. Eisenbarth. Sevurity: No
security without integrity : Breaking integrity-free memory encryption
with minimal assumptions. In 2020 IEEE Symposium on Security and
Privacy, SP 2020, San Francisco, CA, USA, May 18-21, 2020, pages
1483–1496. IEEE, 2020.
[36] L. Wilke, J. Wichelmann, F. Sieck, and T. Eisenbarth. undeserved trust:
In IEEE Security
Exploiting permutation-agnostic remote attestation.
and Privacy Workshops, SP Workshops 2021, San Francisco, CA, USA,
May 27, 2021, pages 456–466. IEEE, 2021.
[37] M. H. Yun and L. Zhong. Ginseng: Keeping secrets in registers when you
distrust the operating system. In 26th Annual Network and Distributed
System Security Symposium, NDSS 2019, San Diego, California, USA,
February 24-27, 2019. The Internet Society, 2019.
[38] Y. Zhang, A. Juels, M. K. Reiter, and T. Ristenpart. Cross-VM side
In Proceedings of the
channels and their use to extract private keys.
2012 ACM conference on Computer and communications security, pages
305–316, 2012.
[39] Y. Zhang, A. Juels, M. K. Reiter, and T. Ristenpart. Cross-tenant side-
channel attacks in paas clouds. In Proceedings of the 2014 ACM SIGSAC
Conference on Computer and Communications Security, pages 990–
1003, 2014.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:55:46 UTC from IEEE Xplore.  Restrictions apply. 
15351