这个目录本身是一个“虚拟文件系统（virtual filesystem）”喔！他放置的数据都是在内存当中， 例如系统核心、行程信息
/proc （process）、周边设备的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！
比较重要的文件例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, /proc/net/* 等等。
这个目录其实跟/proc非常类似，也是一个虚拟的文件系统，主要也是记录核心与系统硬件信息较相关的信息。 包括目前已
/sys
载入的核心模块与核心侦测到的硬件设备信息等等。这个目录同样不占硬盘容量喔！
早期 Linux 在设计的时候，若发生问题时，救援模式通常仅挂载根目录而已，因此有五个重要的目录被要求一定要与根目录放置在一
起， 那就是 /etc, /bin, /dev, /lib, /sbin 这五个重要目录。现在许多的 Linux distributions 由于已经将许多非必要的文件移出 /usr 之外了， 所以
/usr 也是越来越精简，同时因为 /usr 被建议为“即使挂载成为只读，系统还是可以正常运行”的模样，所以救援模式也能同时挂载 /usr 喔！ 例如
我们的这个 CentOS 7.x 版本在救援模式的情况下就是这样。因此那个五大目录的限制已经被打破了呦！例如 CentOS 7.x 就已经将 /sbin, /bin,
/lib 通通移动到 /usr 下面了哩！
好了，谈完了根目录，接下来我们就来谈谈/usr以及/var啰！先看/usr里面有些什么东西：
/usr 的的意意义义与与内内容容：：
依据FHS的基本定义，/usr里面放置的数据属于可分享的与不可变动的（shareable, static）， 如果你知道如何通过网络进行分区的挂载
（例如在服务器篇会谈到的NFS服务器），那么/usr确实可以分享给区域网络内的其他主机来使用喔！
很多读者都会误会/usr为user的缩写，其实usr是Unix Software Resource的缩写， 也就是“Unix操作系统软件资源”所放置的目录，而不是
使用者的数据啦！这点要注意。 FHS建议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行创建该软件
自己独立的目录。
因为是所有系统默认的软件（distribution发布者提供的软件）都会放置到/usr下面，因此这个目录有点类似Windows 系统
的“C:\Windows\ （当中的一部份） + C:\Program files\”这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。一般来
说，/usr的次目录建议有下面这些：
目录 应放置文件内容
第一部份：FHS 要求必须要存在的目录
所有一般用户能够使用的指令都放在这里！目前新的 CentOS 7 已经将全部的使用者指令放置于此，而使用链接文件的方
/usr/bin/
式将 /bin 链接至此！ 也就是说， /usr/bin 与 /bin 是一模一样了！另外，FHS 要求在此目录下不应该有子目录！
/usr/lib/ 基本上，与 /lib 功能相同，所以 /lib 就是链接到此目录中的！
系统管理员在本机自行安装自己下载的软件（非distribution默认提供者），建议安装到此目录， 这样会比较便于管理。举
例来说，你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装
/usr/local/
于/usr/local/目录下，可与原先的旧版软件有分别啦！ 你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include,
lib...的次目录喔！
非系统正常运行所需要的系统指令。最常见的就是某些网络服务器软件的服务指令（daemon）啰！不过基本功能与 /sbin
/usr/sbin/
也差不多， 因此目前 /sbin 就是链接到此目录中的。
主要放置只读架构的数据文件，当然也包括共享文件。在这个目录下放置的数据几乎是不分硬件架构均可读取的数据，
因为几乎都是文字文件嘛！在此目录下常见的还有这些次目录：
/usr/share/ /usr/share/man：线上说明文档
/usr/share/doc：软件杂项的文件说明
/usr/share/zoneinfo：与时区有关的时区文件
第二部份：FHS 建议可以存在的目录
/usr/games/ 与游戏比较相关的数据放置处
c/c++等程序语言的文件开始（header）与包含档（include）放置处，当我们以tarball方式 （*.tar.gz 的方式安装软件）安
/usr/include/
装某些数据时，会使用到里头的许多包含档喔！
某些不被一般使用者惯用的可执行文件或脚本（script）等等，都会放置在此目录中。例如大部分的 X 窗口下面的操作指
/usr/libexec/
令， 很多都是放在此目录下的。
/usr/lib/ 与 /lib/功能相同，因此目前 /lib 就是链接到此目录中
/usr/src/ 一般源代码建议放置到这里，src有source的意思。至于核心源代码则建议放置到/usr/src/linux/目录下。
/var 的的意意义义与与内内容容：：
如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运行后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对常态性
变动的文件，包括高速缓存（cache）、登录文件（log file）以及某些软件运行所产生的文件， 包括程序文件（lock file, run file），或者例如
MySQL数据库的文件等等。常见的次目录有：
目录 应放置文件内容
第一部份：FHS 要求必须要存在的目录
/var/cache/ 应用程序本身运行过程中会产生的一些暂存盘；
程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来
/var/lib/
说，MySQL的数据库放置到/var/lib/mysql/而rpm的数据库则放到/var/lib/rpm去！
某些设备或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该设备时， 就可能产生一些错误的状
况，因此就得要将该设备上锁（lock），以确保该设备只会给单一软件所使用。 举例来说，烧录机正在烧录一块光盘，你想
/var/lock/ 一下，会不会有两个人同时在使用一个烧录机烧片？ 如果两个人同时烧录，那片子写入的是谁的数据？所以当第一个人在
烧录时该烧录机就会被上锁， 第二个人就得要该设备被解除锁定（就是前一个人用完了）才能够继续使用啰。目前此目录
也已经挪到 /run/lock 中！
重要到不行！这是登录文件放置的目录！里面比较重要的文件如/var/log/messages, /var/log/wtmp（记录登陆者的信息）
/var/log/
等。
/var/mail/ 放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中！ 通常这两个目录是互为链接文件啦！
某些程序或者是服务启动后，会将他们的PID放置在这个目录下喔！至于PID的意义我们会在后续章节提到的。 与 /run 相
/var/run/
同，这个目录链接到 /run 去了！
这个目录通常放置一些伫列数据，所谓的“伫列”就是排队等待其他程序使用的数据啦！ 这些数据被使用后通常都会被删除。
举例来说，系统收到新信会放置到/var/spool/mail/中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不
/var/spool/
出去会被放到/var/spool/mqueue/中， 等到被送出后就被删除。如果是工作调度数据（crontab），就会被放置
到/var/spool/cron/目录中！
建议在你读完整个基础篇之后，可以挑战FHS官方英文文件（参考本章参考数据），相信会让你对于Linux操作系统的目录有更深入的了
解喔！
针针对对FHS，，各各家家distributions的的异异同同，，与与 CentOS7 的的变变化化
由于FHS仅是定义出最上层（/）及次层（/usr, /var）的目录内容应该要放置的文件或目录数据， 因此，在其他次目录层级内，就可以随
开发者自行来配置了。举例来说，CentOS的网络设置数据放在 /etc/sysconfig/network-scripts/ 目录下，但是SuSE则是将网络放置在
/etc/sysconfig/network/ 目录下，目录名称可是不同的呢！不过只要记住大致的FHS标准，差异性其实有限啦！
此外，CentOS 7 在目录的编排上与过去的版本不同喔！本节稍早之前已经有介绍过，这里做个汇整。 比较大的差异在于将许多原本应
该要在根目录 （/） 里面的目录，将他内部数据全部挪到 /usr 里面去，然后进行链接设置！包括下面这些：
/bin --> /usr/bin
/sbin --> /usr/sbin
/lib --> /usr/lib
/lib64 --> /usr/lib64
/var/lock --> /run/lock
/var/run --> /run
另外，在Linux下面，所有的文件与目录都是由根目录开始的！那是所有目录与文件的源头～ 然后再一个一个的分支下来，有点像是树
枝状啊～因此，我们也称这种目录配置方式为：“目录树（directory tree）” 这个目录树有什么特性呢？他主要的特性有：
目录树的启始点为根目录 （/, root）；
每一个目录不止能使用本地端的 partition 的文件系统，也可以使用网络上的 filesystem 。举例来说， 可以利用 Network File System
（NFS） 服务器挂载某特定目录等。
每一个文件在此目录树中的文件名（包含完整路径）都是独一无二的。
好，谈完了FHS的标准之后，实际来看看CentOS在根目录下面会有什么样子的数据吧！我们可以下达以下的指令来查询：
[dmtsai@study ~]$ ls -l /
lrwxrwxrwx. 1 root root 7 May 4 17:51 bin -> usr/bin
dr-xr-xr-x. 4 root root 4096 May 4 17:59 boot
drwxr-xr-x. 20 root root 3260 Jun 2 19:27 dev
drwxr-xr-x. 131 root root 8192 Jun 2 23:51 etc
drwxr-xr-x. 3 root root 19 May 4 17:56 home
lrwxrwxrwx. 1 root root 7 May 4 17:51 lib -> usr/lib
lrwxrwxrwx. 1 root root 9 May 4 17:51 lib64 -> usr/lib64
drwxr-xr-x. 2 root root 6 Jun 10 2014 media
drwxr-xr-x. 2 root root 6 Jun 10 2014 mnt
drwxr-xr-x. 3 root root 15 May 4 17:54 opt
dr-xr-xr-x. 154 root root 0 Jun 2 11:27 proc
dr-xr-x---. 5 root root 4096 Jun 3 00:04 root
drwxr-xr-x. 33 root root 960 Jun 2 19:27 run
lrwxrwxrwx. 1 root root 8 May 4 17:51 sbin -> usr/sbin
drwxr-xr-x. 2 root root 6 Jun 10 2014 srv
dr-xr-xr-x. 13 root root 0 Jun 2 19:27 sys
drwxrwxrwt. 12 root root 4096 Jun 3 19:48 tmp
drwxr-xr-x. 13 root root 4096 May 4 17:51 usr
drwxr-xr-x. 22 root root 4096 Jun 2 19:27 var
上述目录相关的介绍都在上一个小节，要记得回去查看看。如果我们将整个目录树以图示的方法来显示，并且将较为重要的文件数据列
出来的话，那么目录树架构有点像这样：
图5.3.1、目录树架构示意图
鸟哥只有就各目录进行简单的解释，看看就好，详细的解释请回到刚刚说明的表格中去查阅喔！ 看完了FHS标准之后，现在回到第二章
里面去看看安装前Linux规划的分区情况， 对于当初为何需要分区为这样的情况，有点想法了吗？^_^。根据FHS的定义，你最好能够将/var独
立出来， 这样对于系统的数据还有一些安全性的保护呢！因为至少/var死掉时，你的根目录还会活着嘛！ 还能够进入救援模式啊！
除了需要特别注意的FHS目录配置外，在文件名部分我们也要特别注意喔！因为根据文件名写法的不同，也可将所谓的路径（path）定
义为绝对路径（absolute）与相对路径（relative）。 这两种文件名/路径的写法依据是这样的：
绝对路径：由根目录（/）开始写起的文件名或目录名称， 例如 /home/dmtsai/.bashrc；
相对路径：相对于目前路径的文件名写法。 例如 ./home/dmtsai 或 ../../home/dmtsai/ 等等。反正开头不是 / 就属于相对路径的写法
而你必须要了解，相对路径是以“你当前所在路径的相对位置”来表示的。举例来说，你目前在 /home 这个目录下， 如果想要进入