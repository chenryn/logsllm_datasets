### 7.4 Serialization

When processing complex data formats such as email headers and bodies, the security of parsers and generators is critical. The following notes are intended to provide assurance that parsing does not compromise the security of the DC (Decryption Context) mechanism.

1. **Character Set Restrictions**:
   - **Header Field Names**: Serialization of header field names in R must be done using a limited character set that excludes the separators ":", "\r", and "\n". This is already specified in [37] (section 2.2, Header Fields).
   - **Header Field Values**: We assume that all header field values do not include any ":", as specified in [37] (sections 2.2, 3.6.8, etc.). Additionally, we assume that field values are given in "unfolded form" as specified in [37], meaning they do not include any "\r" or "\n".

These restrictions on character sets are crucial to ensure that serialization (by joining header field names with ":" and DC string components with "\r\n") and deserialization (by splitting at ":" and "\r\n" respectively) are inverse operations and thus safe.

2. **Serialization Rules**:
   - Our serialization rules are inspired by DKIM [9] and designed to be easily processed in legacy email applications.
   - Other serialization formats are possible, provided they are well-defined (to ensure P and DC strings can be reliably generated by both the sender and recipient) and safe (to prevent collisions when generating the serialization of two different objects).

### 8. False Positive Evaluation

When using encryption contexts with S/MIME or OpenPGP, false positives can occur if an email source code M is changed during transit into M′, resulting in DC(M, P) ≠ DC(M′, P). False positives due to benign changes to email headers and body by service providers are undesirable, as they can negatively impact the acceptance of the decryption context mitigation.

To evaluate these false positives and their impact on interoperability between email clients and service providers, we followed a two-step approach:

1. **Evaluation of Email Service Providers**:
   - We evaluated how eleven popular email service providers change email headers and bodies in transit relevant to an example DC policy. We tested outbound, inbound, and internal email traffic on a multipart/encrypted email based on PGP/MIME [12] and manually evaluated all changes with respect to the DC policy from Figure 3.
   - As shown in Table 4, most changes by the tested providers to emails in transit are unproblematic, with the exception of Outlook.com.

2. **Decryption Testing**:
   - We sent an email similar to Figure 3, which was encrypted using our modified implementation of Enigmail, over the same gateways and tried to decrypt it afterwards. Only one false positive was recorded, caused by well-known non-standard behavior of Outlook.com.

### Table 4: Evaluation of Modifications by Email Service Providers

| Provider        | Inbound  | Outbound | Internal |
|-----------------|----------|----------|----------|
| AOL Mail        | No changes | No changes | No changes |
| FastMail        | No changes | No changes | No changes |
| Gmail           | No changes | No changes | No changes |
| GMX Mail        | No changes | No changes | No changes |
| Hushmail        | Addition of \r\n at the end of the body | No changes | No changes |
| iCloud          | Modification of letter case in some header fields | No changes | No changes |
| Mail.ru         | No changes | No changes | No changes |
| Outlook.com     | Rewrite of date as Greenwich Mean Time, removal of user-agent, removal of text before first MIME part | Rewrites/Merges from and to headers, inserts new MIME part, modifies existing ones | Rewrites/Merges from and to headers, inserts new MIME part, modifies existing ones |
| Runbox          | No changes | No changes | No changes |
| Yahoo! Mail     | No changes | No changes | No changes |
| Zoho Mail       | No changes | No changes | No changes |

### 8.1 Modifications Not Changing DC

- **Added Headers**: Many new headers are added by email providers, but none of the tested providers added headers included in the DC policy (from, reply-to, to, and subject).
- **Deleted Headers**: Outlook.com deleted the user-agent header on outbound and internal email, but this does not lead to false positives as it is not part of our DC policy.
- **Reordered Headers**: Outlook.com reordered some header fields, but did not reorder multiple instances of the same header field, so this reordering does not lead to false positives.
- **Modified Headers**: iCloud changed the letter case of some header fields and folded long header lines, which do not affect the DC string due to DKIM canonicalization. They also removed double-quote characters of the boundary parameter in the content-type header, but this modification did not affect the DC string either.
- **Body Modifications**: Hushmail adds an empty line at the end of the body, and Outlook.com strips an explanatory message before the first MIME part. These changes do not lead to false positives.

### 8.2 Modifications Changing DC

- **Outlook.com**: Modifies email addresses in several header fields (including from and to) to always include a display name, merges multiple instances of these header fields, and changes the content-type from multipart/encrypted to multipart/mixed, prepending an additional (otherwise empty) MIME part text/plain. This behavior is well-known and requires custom work-arounds in email clients supporting OpenPGP.
- **Thunderbird**: Recognizes such emails and offers to “repair” them by reverting the changes done by Outlook and overwriting the corrupt email on the IMAP server, restoring the original context of the email for functional reasons.

### 8.3 Additional Findings

- **Bounce Emails**: During testing, we received bounce emails due to intermittent delivery failures. Bounce emails contain a copy of the original mail as message/rfc822 MIME part. In the case of the OpenPGP extension Memory-Hole, protected headers were decrypted and applied to the bounce mail, changing the subject to that of the original email. This faulty behavior would have been prevented by applying a decryption context policy that includes m=mimepath.
- **Outlook.com Filters**: Outlook.com filters out non-standard header fields (such as Autocrypt or Decryption-Context) from outbound and internal email, unless prefixed with X-. To overcome this, the Decryption-context header could initially be provided as X-Decryption-Context until it is widely adopted and whitelisted.
- **Gmail Behavior**: Gmail replaces the value of From with the sender’s account data from the SMTP login, which can potentially interfere with DC policies that include from if the email client of the user is misconfigured.

### 9. Related Work

- **OpenPGP and S/MIME**: Research on chosen-ciphertext attacks and exfiltration attacks in email security has been ongoing since 2000. Various attacks, including surreptitious forwarding, downgrade, fault, and adaptive chosen-ciphertext attacks, have been described. EFAIL attacks in 2018 highlighted the malleability of CBC and CFB modes of operation, which allow attackers to insert exfiltration channels directly into ciphertexts.
- **Message-Level Security**: Standards like XML, PDF, and JSON have also become targets of chosen-ciphertext attacks. Jager and Somorovsky's attack on XML Encryption in 2011 and Müller et al.'s exfiltration attacks on PDF files in 2019 are notable examples.
- **Protection of SMTP Context**: The need to protect the SMTP context of emails has been recognized, with efforts such as RFC 7508 for S/MIME and the Autocrypt community's draft RFC on protected headers. However, these solutions still leave room for attacks where the plaintext of the email is processed in a possibly malicious SMTP context.

### 10. Conclusions and Future Work

Contrary to common belief and the security advice given in S/MIME 4.0, exfiltration attacks are not solely an HTML problem. These vulnerabilities are inherent to the complex email ecosystem. To address this, we propose enabling decryption only in a clearly specified decryption context. Our prototype version shows that the false positive rate is very low.

In this paper, we covered the SMTP and MIME contexts of an email. However, more structured data formats below the MIME level, such as CMS or OpenPGP, may also allow for exfiltration attacks. For each layer of encryption, a novel decryption context should be derived. Decryption contexts may also be applicable to other applications, such as document encryption, protecting against backwards compatibility attacks, and novel cryptographic constructions.

### Acknowledgements

Marcus Brinkmann was supported by the German Federal Ministry of Economics and Technology (BMWi) project “Industrie 4.0 Recht-Testbed” (13I40V002C). Jens Müller was supported by the research training group “Human Centered System Security”, sponsored by the state of North Rhine-Westfalia. This work was also supported by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy - EXC 2092 CASA - 390781972. We thank Phil Zimmermann for his comments, and the anonymous referees and our shepherd Tobias Fiebig for improving the final version of the paper.