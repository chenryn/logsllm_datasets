**Barry Lagerweij** opened **SPR-323** and commented
EJB's that depend on other beans cannot use Dependency Injection. Instead,
they must use code like
ProductDAO dao = super.getBeanFactory().getBean("ProductDAO");
It would be a huge improvement if EJB's could have something like:
ProductDAO getProductDAO () { return this.productDAO; }  
void setProductDAO ( ProductDAO dao) { this.productDAO = dao; }
For this to work, it would be nice if Spring would support a marker interface
(like BeanNameAware), so that Spring could determine a EJB's name, and inject
dependant objects.
Spring already provides an AbstractStatelessSessionBean base-class. This class
needs to be improved.
For example:
AbstractStatelessSessionBean  
{  
void ejbCreate()  
{  
if (this instanceof BeanNameAware)  
{  
String name = ((BeanNameAware)this).getName();  
XXXUtils.injectDependencies(getBeanFactory(),name,this);  
}  
}  
}
* * *
**Affects:** 1.1 final
**Issue Links:**
  * #6115 Allow declarative dependency injection for EJB components ( _ **"is duplicated by"**_ )
3 votes, 2 watchers