 **TypeScript Version:**
1.8.9
**Code**
    interface I {
        m: string | {a: string};
    }
    var x: I;
    var y: string;
    if (typeof x.m === 'string') {
        y = x.m;
    } else {
        y = x.m.a;
    }
**Expected behavior:**  
no compile errors
**Actual behavior:**  
test.ts(7,5): error TS2322: Type 'string | { a: string; }' is not assignable
to type 'string'.  
Type '{ a: string; }' is not assignable to type 'string'.  
test.ts(9,13): error TS2339: Property 'a' does not exist on type 'string | {
a: string; }'.
Pulling x.m out into a separate variable causes the type guard to work as
expected.