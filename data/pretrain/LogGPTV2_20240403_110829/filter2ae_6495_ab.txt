在比特币的协议中，当A准备向B进行交易一张“支票”。那么B将生成一份新的同等金额的“支票”，而A中的支票进行销毁处理。而这个过程会被矿工进行记账处理，并发布给所有节点。
而Zcash为了增强匿名性，它拥有两种地址：z-地址与t-地址。其中t地址是公开地址（如同比特币中地址）而z地址是秘密地址。此时如果A要转账支票给B，要经过如下的过程：
  * 1 ，A用自己的私钥对支票进行签名，并得到一串新的字符串r。此时我们用Z1代表A的支票。  
  * 2 ，而与比特币一样，B也需要新建一张支票（Z2），而Z2与Z1的代号并不相同。  
  * 3，当交易产生时，我们需要销毁原A的支票。但是与比特币不同的是，我们不是直接销毁Z1，而是引入了 **“作废文件列表”** 的概念。从下图可以看出，原先的A持有的支票仍旧存在，并没有消失，只是这张支票已经被记入“作废列表”。在确定资产所有权时要同时读取两个列表的信息，能确定Bob拥有资产所有权的判断方法是：作废列表中不存在B所持“支票”的代号。  
`简单来说，发票列表里的值是不会被删除的。当发票不能使用后直接记录在作废列表里即可。`
而在具体的交易过程中，我们可以进行如下操作：
> 首先我们定义每个用户的私钥为PK1、PK2....PKn。
>
> 之后我们定义n个支票Note1=(PK1 , r1)、Note2=(PK2 , r2)........Noten=(PKn , rn)
>
> 为了达到匿名的效果，我们使用哈希函数对其压缩，使其不可逆。H1=HASH(Note1)、
> H2=HASH(Note2).......Hn=HASH(Noten)
>
> 之后引入废弃集合的概念：
发票列表 | 废弃列表  
---|---  
H1=HASH(Note1) | HASH(Z1)  
H2=HASH(Note2) |  
H3=HASH(Note3)  
`上面的列表中代表我共产生了n个支票，Z1为支票标识，废弃列表中的Z1表示我第一张发票是作废无用的`
当用户2要给用户4转移一张支票时，用户2会选择随机数r4并生成新的支票`Note4 = (PK4 ,
r4)`并将其密码传递给用户4。之后用户2将`HASH(Z2)`与`HASH(Note4)`发送给系统中所有的节点。并得到如下表格：
发票列表 | 废弃列表  
---|---  
H1=HASH(Note1) | HASH(Z1)  
H2=HASH(Note2) | HASH(Z2)  
H3=HASH(Note3) |  
H4=HASH(Note4)  
这些过程均由矿工进行记账。因为资产只能有一份，所有矿工手里还有一个作废列表。Alice要同时广播自己的“发票代号”，录入作废列表中。发票代号也是加密的。所以矿工们能看到的信息其实是这样的。其中Alice的支票是原先存在的，Alice的支票代号r1和Bob的支票是在交易过程中被Alice广播的。  
矿工们能获取的信息相当有限，但是这并不影响对矿工对交易有效性的判断。
判断的逻辑相当简单：矿工拿到A给的支票代号Z1，去作废列表中检索，假如作废列表中已经存在Z1，则证明Z1所对应的的支票早已失效；若作废列表中并不存在Z1，则证明Z1对应的支票仍旧有效，此时矿工把Z1录入作废列表中，把新生成的支票录入支票列表中。所以记账的过程就是对原有支票登记失效，并存入现有支票票的过程。
在这个过程中，我们不难发现，每笔交易矿工能接收到的东西只有一个发票代号，和一张新的发票，而且这两样东西都是被加密的。所以矿工并不知道转账双方是谁，也不知道转账金额是多少。
#### 3 Zcash零知识证明具体算法
由于算法篇幅过长，我后续文章会将算法的具体数学公式推导列出。这里放上参考文档。[SNARKs英文文档](https://z.cash/blog/snark-explain)  
[零知识证明与zkSNARK](https://www.jianshu.com/p/b6a14c472cc1?from=timeline)
### 五、最强门罗币
根据我们上述内容所看，匿名性不是那么容易就达到的。那有没有真正可以做到匿名的数字货币呢？下面让我们看一看门罗币的介绍。
门罗币的匿名性主要是由其环形签名技术实现的。在十七世纪的时候，法国群臣向国王进谏时，为了不让国王追查到是由谁带头签名上书的，于是他们发明出了一种环形签名的方式，所有人的姓名按环形排列，自然的隐藏了签名顺序，从而做到无法追查源头。
对于匿名性来说，我们要做到以下两点才算合格：`1，接收方不可追踪、2，发送方不可追踪`。而对于门罗币来说，以下三点是满足他匿名性的关键。
  * 环签名 - 发送方，不可追踪
  * 混淆地址 - 接收方，不可链接
  * 环机密 - 交易金额的隐匿
#### 1 环签名
大家联名上书提意见的时候，怎样让外界难以猜测发起人是谁？上书人的名字可以写成一个环形，环中各个名字的地位看上去彼此相等，因此难以猜测发起人是谁。假设，Alice
发送 5XMR(XMR 即门罗币) 给
Bob，设定混淆交易数量为5。网络在转账时会自动生成5笔5XMR的转账交易，除了Alice发送给Bob的这笔，另外的4笔都是用来瞒骗外界观测者的“诱骗交易”，这样达到隐匿发送方的目的。
#### 2 地址混淆
混淆地址是为了打破输入输出地址之间的关联，以此隐匿转账的来去关系。每当发送者要发起一笔转账的时候，这笔资金不会直接打到接收方的地址，而是打到一个系统临时生成的地址。
Alice向Bob转账时，发送者Alice用接受者Bob的公钥私钥加上一些随机数，生成一个独一无二的、一次性的地址，系统给这个临时地址添加5XMR。观测者，包括Alice、Bob自己都能看到这个临时地址，但都不知道地址里的钱属于谁。那么Bob怎么知道有人给自己转账，怎么收到这笔钱呢？Bob的钱包会用私钥进行搜索功能，查看区块链上的临时地址是否有属于自己的钱。当Bob的私钥（仅有接收方Bob自己的私钥能够）识别出自己有权认领的临时地址，就能使用这笔钱。
#### 3 环机密
Alice怎么告诉区块链网络转账金额是5XMR呢？在 RingCT 的交易中, Alice
不会直接公开给网络5XMR，而是提供一个数字rct,作为交易金额输出。rct= 随机数 + 5（真正的交易金额）。
随机数是用来为真实金额遮盖的，由钱包自动产生。网络可使用这个rct值去验证交易输入是否等于交易输出的金额，以确认没有额外的 门罗币被伪造产生。
然而，对于一个外部的观察者而言，无从得知实际交易金额。
可以参考文章[门罗币基础技术介绍](https://blog.csdn.net/u013107902/article/details/62053013)
### 六、总结
区块链是现在时代的热门话题，而对于我们信息安全的研究人员来说，如何使用密码学领域的知识来加强区块链的安全是我们需要研究的。本次文章我从比特币开始到门罗币，一步一步由弱到强分析了区块链不同应用的匿名性。文章中涉及到许多源码、英文文档的解读所以部分长篇幅的内容暂时没办法呈现，后续我会持续进行深度挖掘来为读者们呈现更精彩的区块链安全知识。
### 七、参考链接
`文章是在笔者大量阅读以及自身思考后进行的总结，文中也参考了部分文章的知识，特此感谢！！`
  * 1 
  * 2 
  * 3 
  * 4 
  * 5 
    有兴趣的话大家可以给我评论，技术无界限，欢迎多多讨论！
**本稿为原创稿件，转载请标明出处。谢谢。**