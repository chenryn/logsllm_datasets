We developed an automatic method to select
in the pro-
posed RTC scheme. The method of parameter setting combines
a 10-fold cross validation and binary search described in detail
in Section IV. Two common metrics were used to measure the
trafﬁc classiﬁcation performance, accuracy, and F-measure.
Three sets of experiments were performed to compare the
trafﬁc classiﬁcation performance of the ﬁve methods/schemes.
2) Impact of Labeled Training Data: Fig. 5 shows the overall
accuracy of the ﬁve methods with various labeled training sizes.
During experiments, the major classes of BT, DNS, and SMTP
were set to unknown. The small classes work as noise to chal-
lenge the trafﬁc classiﬁcation methods. Therefore, the modiﬁed
dataset includes seven known major classes and three unknown
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
ZHANG et al.: ROBUST NETWORK TRAFFIC CLASSIFICATION
9
Fig. 5. Overall accuracy. (a) Flow. (b) Byte.
Fig. 6.
Impact of labeled training data.
Fig. 7. F-measure of each application class.
major classes. The ﬂows from the unknown classes compose
zero-day trafﬁc.
The size of supervised training data changes from 4000 to
20 000. The results show the proposed RTC scheme is signif-
icantly superior to the other four methods. The second best is
the semi-supervised method. The accuracy difference between
RTC and semi-supervised can reach 15%.
The accuracy of the other three methods—random forest,
BoF-random forest, and one-class SVM—is poor. The cause of
the low accuracy exhibited by BoF-random forest and random
forest is the inaccurately classiﬁcation of zero-day trafﬁc into
known classes. One-class SVM cannot produce a discrimina-
tive boundary in a multiclass space without a large amount
of labeled training data. In addition, its unknown detection
capability is limited without zero-day information.
An interesting observation was the accuracy of Erman’s semi-
supervised method slightly decreasing as the size of the labeled
training data increased. To investigate the causes, we report the
TPR and false negative rate (FNR) of zero-day sample detec-
tion, as shown in Fig. 6. TPR is the rate of the sum of cor-
rectly detected zero-day trafﬁc compared to the sum of all actual
zero-day trafﬁc. FNR is the rate of the sum of zero-day trafﬁc
inaccurately detected as “known” compared to the sum of all
actual zero-day trafﬁc. The results of our RTC scheme are also
shown for comparison.
We notice the number of clusters produced by
-means
in semi-supervised is ﬁxed to 2000. The results show that
for Erman’s method, as the labeled training ﬂows increase
in size, the true positive rate declines and the false negative
rate quickly rises. This will signiﬁcantly affect its unknown
detection capability. Consequently, the overall accuracy of the
semi-supervised method is limited and becomes worse. Our
RTC scheme can successfully solve this problem by automat-
ically optimizing
for different sizes of supervised training
data. The ﬁgure shows the TPR and FNR of the RTC scheme
has only slight changes.
In addition, we tested the classiﬁcation speed of the ﬁve com-
peting methods. The results (ﬂows/second) were
for
RTC,
for BoF-random
forest,
for semi-su-
pervised. In our experiments, the RTC scheme displays the com-
parable classiﬁcation speed of existing methods.
for random forest, and
for one-class SVM,
3) Performance of Trafﬁc Classes: Fig. 7 reports the ﬂow
F-measures from ﬁve competing trafﬁc classiﬁcation methods.
In general, the results indicate the proposed RTC scheme sig-
niﬁcantly outperforms other methods when zero-day applica-
tions are present. Other methods do not work as well due to poor
performance in predeﬁned known classes or failure to identify
zero-day trafﬁc.
Let us further investigate the F-measures in each class.
In class FTP, the F-measure of our scheme was higher than
the second best method, BoF-random forest, by about 0.13.
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
10
IEEE/ACM TRANSACTIONS ON NETWORKING
Fig. 8. Classiﬁcation result with varying zero-day applications. (a) Flow. (b) Byte.
Random forest was slightly better than the semi-supervised
method, however both were worse than our scheme by about
0.27. In class HTTP, the improvement of our scheme was about
0.18; with semi-supervised, the second best method, is about
0.18. There were no signiﬁcant differences among methods
of random forest, BoF-random forest, and semi-supervised.
In class IMAP, the F-measure of our scheme achieved 0.9,
which is higher by about 0.12 than the second best method,
one-class SVM. In class POP3, the F-measure of our scheme
was about 0.97. The F-measure of the second best method,
semi-supervised, was about 0.87, which is much higher than
the other three methods. In class RAZOR, the ranking list was
our scheme, one-class SVM, semi-supervised, BoF-based, and
random forest. In class SSH, all methods displayed excellent
performance. In class SSL, the F-measure of our scheme was
higher than the second best method, semi-supervised, by over
0.15. The performance of one-class SVM was similar to that of
BoF-random forest and random forest. The three methods were
less than the semi-supervised method by about 0.14. Finally,
our scheme was superior to the methods semi-supervised and
one-class SVM in terms of zero-day trafﬁc identiﬁcation. The
difference of F-measures between our scheme and the second
best method, semi-supervised, was 0.08. One-class SVM had
very low zero-day trafﬁc identiﬁcation performance due to its
poor classiﬁcation boundary for zero-day applications.
We observed the superiority of the proposed RTC scheme was
due to its excellent functionality of unknown discovery. As de-
scribed in Section III-A, a new two-step unknown discovery was
applied for robust trafﬁc classiﬁcation. The ﬁrst step borrows
the idea of the semi-supervised method to roughly detect some
zero-day samples. The experimental results show the true posi-
tive rate of zero-day trafﬁc detection in the ﬁrst step was 72%,
and the false positive rate was 6%. The second step constructs
a random forest classiﬁer by using the outcome of the ﬁrst step,
which can further improve the effectiveness of zero-day sample
extraction. In the experiment, the true positive rate was raised
to 94%, and the false positive rate was reduced to 3%. Thus,
zero-day samples can be combined with prelabeled training data
to train a super classiﬁer that has the capability of identifying
zero-day trafﬁc.
4) Impact of Zero-Day Applications: Fig. 8 displays the
impact of zero-day application classes to trafﬁc classiﬁcation
performance. In this ﬁgure, we amplify the pool of zero-day
trafﬁc by adding one to ﬁve major classes. One can see the accu-
racy of RTC and semi-supervised was stable when the number
of zero-day application classes increased. Meanwhile,
the
accuracy of one-class SVM, random forest, and BoF-random
forest decreased dramatically.
These results further conﬁrm the robustness of the proposed
RTC scheme. In detail, RTC outperformed semi-supervised in
terms of accuracy and reliability.
The accuracy of RTC is always signiﬁcantly higher than
semi-supervised, with a difference of proximately 12%. With
a different number of zero-day applications, semi-supervised’s
accuracy changed by 3%, while for RTC, it was only 1% .
Compared to the supervised methods, random forest and
BoF-random forest, RTC exhibited the excellent capability
of dealing with zero-day trafﬁc. However, the accuracy of
supervised methods was strictly limited by the amount of trafﬁc
generated by known applications, which they can correctly clas-
sify. For example, the accuracy of BoF-random forest declined
from 80% to 50% when the number of zero-day application
classes increased from 1 to 5. The accuracy of one-class SVM
was higher than random forest and BoF-random forest because
it
identiﬁed a small portion of zero-day trafﬁc. However,
one-class SVM has very limited zero-day trafﬁc identiﬁcation
ability that cannot be improved by increasing the supervised
training size. The reason is one-class SVM does not explore
zero-day information in the classiﬁcation procedure.
5) Performance of System Update: A set of experiments
were carried out to evaluate the function of the system update.
We tested the classiﬁcation performance of our scheme, with
and without a system update. In the experiments, the labeled
and unlabeled training data consisted of 4000 and 30 000 ﬂows,
respectively. During the system update, the identiﬁed zero-day
trafﬁc was categorized into 100 clusters. We randomly selected
three ﬂows from each cluster and manually inspected them for
new class construction. It was assumed the three unknown major
classes could be recognized at this stage since their trafﬁc was
statistically signiﬁcant. A two-level classiﬁcation strategy was
applied to perform trafﬁc classiﬁcation. An F-measure was used
to evaluate the classiﬁcation results.
Fig. 9 reports the F-measures of our scheme before and
the
the performance of
In this ﬁgure,
the update.
after
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
ZHANG et al.: ROBUST NETWORK TRAFFIC CLASSIFICATION
11
Fig. 10 shows classiﬁcation results on the ISP and WIDE-09
datasets. The ﬂow and byte accuracy of trafﬁc classiﬁcation on
the ISP are reported in Fig. 10(a). One can see RTC always dis-
plays the highest ﬂow and byte accuracy among all competing
methods. For ﬂow accuracy, RTC is better than the second best
method, semi-supervised, by about 10%. In addition, semi-su-
pervised and one-class SVM signiﬁcantly outperformed random
forest and BoF-random forest. The differences are from 30% up
to 50%. The byte accuracy of RTC was about 15% higher than
the other four methods with a similar byte accuracy. It should be
noted the byte accuracy was independent to the ﬂow accuracy
due to the presence of elephant and mice ﬂows. The results on
WIDE-09, as shown in Fig. 10(b), are similar to those on ISP.
Regarding ﬂow accuracy, RTC, semi-supervised, and one-class
SVM, which have the potential to deal with zero-day appli-
cations, are much better than random forest and BoF-random
forest. However, there are big differences among the byte ac-
curacy of the ﬁve competing methods. RTC outperformed other
methods by up to 25%.
VI. DISCUSSION
A. Sub-Bag of Flows
Here, we present a further study on ﬂow correlation in the
context of trafﬁc classiﬁcation. As mentioned previously, (10)
suggests the ﬂow prediction error can be reduced by a factor of
in
by using a simple BoF-based model. For estimating
the experiments,
can be calculated by
(11)
is the number of testing ﬂows, and
where
is the
number of BoFs constructed by the testing ﬂows. Unfortunately,
in (10) depends on the key assumption that errors due to
individual ﬂows in any BoF are independent.
A novel factor of our study was to accurately estimate the re-
duction in the overall error when the ﬂow errors were highly de-
pendent in practice. We observed a number of sub-bags consti-
tute a BoF. A sub-bag consists of ﬂows sharing 4-tuples: source
IP, destination IP, destination port, and transport protocol. One
can see ﬂows in a sub-bag are likely generated by the same user
in a short period of time. The ﬂows in a sub-bag have high de-
pendency, while the ﬂows in different sub-bags have low depen-
dency. We propose
in (10) be replaced with the number of
sub-bags in a BoF to alleviate the problem of error dependency.
Equation (10) can be rewritten as
(12)
In practice,
can be calculated by
is the average number of sub-bags in a BoF. This
(13)
and
are the number of sub-bags and the
where
number of BoFs in the testing set. One can see
in (12)
is estimated under the weak assumption that errors due to
individual sub-bags are independent.
Fig. 9. Performance of system update.
semi-supervised method was used as the baseline. The re-
sults show the proposed RTC scheme with system update
can achieve ﬁne-grained classiﬁcation of zero-day trafﬁc. For
example, zero-day trafﬁc can be identiﬁed with a F-measure of
0.91 before an update. After an update, the zero-day trafﬁc can
be perfectly classiﬁed into three new classes. The F-measures
of new classes, new_1(BT), new_2(DNS), and new_3(SMTP),
can achieve about 0.94, 0.96, 0.96, respectively. In the known
classes, the performance of our scheme did not change after the
system update because of the two-level classiﬁcation strategy.
We can draw an initial conclusion that the system update can
achieve ﬁne-grained classiﬁcation of zero-day trafﬁc without
affecting the performance of known classes.
In the experiments, there were about 60 000 ﬂows identiﬁed
as zero-day trafﬁc. According to the experimental setting, the
rate of manual inspection was
. This
rate was very low, thus making it possible for the practical use
of the module for a system update. For example, in attack detec-
tion, ﬁne-grained identiﬁcation of zero-day trafﬁc is well worth
it and only uses minimal human effort.
C. Evaluation With DPI Unrecognized Trafﬁc
We have used only DPI recognized ﬂows to study the im-
pact of different “unknown” settings on trafﬁc classiﬁcation. In
this section, we report additional experiments and the results on
individual datasets by considering DPI unrecognized trafﬁc as
zero-day trafﬁc.
The experiments were carried out on ISP and WIDE-09
trafﬁc traces. The ISP experiment dataset contained over
650 000 ﬂows, with approximately 296 000 as zero-day trafﬁc
(i.e., unrecognized by DPI). We identiﬁed the known classes
BT, DNS, EDONKEY, FTP, HTTP, IMAP, MSN, POP3, SMB,
SMTP, SSH, SSL, and XMPP. The zero-day trafﬁc constituted
55% of ﬂows and 12% of bytes. In experiments on the ISP
dataset, 4000 labeled ﬂows and 30 000 unlabeled ﬂows were
randomly sampled for training. The WIDE-09 experiment
dataset contained over 439 000 ﬂows, in which about 158 000
were zero-day trafﬁc. The known classes in WIDE-09 were BT,
DNS, FTP, HTTP, POP3, SMTP, and SSL. The zero-day trafﬁc
constituted 36% of ﬂows and 25% of bytes. In experiments on
the WIDE-09 dataset, 2500 labeled ﬂows and 20 000 unlabeled
ﬂows were randomly sampled for training.
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
12
IEEE/ACM TRANSACTIONS ON NETWORKING
Fig. 10. Classiﬁcation result with DPI unrecognized unknown trafﬁc. (a) ISP. (b) WIDE-09.
the RTC scheme with and without considering sub-bags. The
results show the classiﬁcation performance has no signiﬁcant
decrease.
The RTC scheme can be used for real-time classiﬁcation. We
can directly incorporate the ideas of packet milestones [35] and
subﬂows [13] into the RTC scheme. For example, a packet mile-
stone is reached when the count of the total number of packets
a ﬂow sends or receives reaches a speciﬁc value. What we need
to do is extract the statistical features on each packet milestone
and train the corresponding RTC classiﬁer. Moreover, we can
further speed up trafﬁc classiﬁcation by considering sub-bags
in the RTC scheme.
B. Classiﬁer Retraining
Our work shares a basic assumption with most pattern clas-
siﬁcation algorithms in that class distribution will not change
in the training and testing stages. However, in real-world net-
works, class distribution may change over a long period of time.
For example, one of the
known applications changes, and a
cluster appears in a different position to the space. According
to the RTC scheme, a new cluster will be identiﬁed however
this is related to an old application. Therefore, a new
is not
added to the training set, i.e., the new characteristic of the ap-
plication is not tracked. To address this issue, one possibility is
to retrain the trafﬁc classiﬁer by incorporating new samples of
old applications.
Erman et al. [35] suggested two measures for measuring reli-