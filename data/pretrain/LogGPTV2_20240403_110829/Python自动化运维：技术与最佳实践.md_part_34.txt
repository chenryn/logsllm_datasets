#图表起始时间
www.linuxidc.com
景颜色
#定义坐标轴字体
#定义Y轴单位字体
#定义图例字体
#定义标题字体
第15章构建分布式质量监控平台267
颜色
-w 500-h 207\
#定义数据源及合并统计
#类型为AVERAGE
#图表标题
，平台rrdtool
---
## Page 296
268第三部分案例篇
width="597"/>
<img
#下面为渲染后的HTML标签
生成的图表 png 文件在前端页面中进行引用:
COMMENT:"\n"
COMMENT:"
HRULE：S（Alarm}#ff0000:"（告警值）"\
GPRINT:NAMELOOKUP_TIME:MIN:”最小\:%0.21f%Ss"
GPRINT:NAMELOOKUP_TIME：MAX:"最大\:0.21f%Ss"
GPRINT:NAMELOOKUP_TIME:AVERAGE:"平均\：%0.21f%Ss"
LINE1:NAMELOOKUP_TIME#eeeeOO:域名解析\
COMMENT:"\n"
GPRINT：TOTAL_TIME:MIN:"最小\：%O.21f%Ss"
GPRINT：TOTALTIME:MAX:"最大\:%O.21f%Ss”
GPRINT:TOTAL_TIME:AVERAGE:"平均\：%0.21fSs
GPRINT:TOTAL_TIME:LAST:"当前\:O.21f 8Ss"
#指显示当前值；
#GPRINT定义图表下方的文字说明，参数TOTAL_TIME定义数据来源变量；LAST定义合并（统计）类型，
AREA:TOTAL_TIME#0011ff：总共时间
COMMENT:"\n"\
其他部分为输出的文字及数值格式
src="/site_media/rrdtool/www.baidu.com/15_time.png?,Math.random();"
n"
Linux公社www.linuxidc.com
#输出告警红线值
#用“线条”的形式来绘制“域名解析”数据
---
## Page 297
串，并使用Psyco模块对Python运行程序进行加速。任何人都可以根据自身的业务特点对
模块即可完成一个现网变更任务。另外在用户体验方面，模拟Linux终端效果，接收返回
令传输、操作日志记录、个性化配置等；效率方面，管理员只需选择操作目标对象及操作
实现日常运维远程操作、文件分发、在线升级等功能；安全方面，采用加密（RC4算法）指
（XMLResource）方式动态定制，服务器端则与OMServer共享一套主控服务器端。OManager
模块扩展功能，管理员可以在OManager平台添加集群任务模块，其中客户端模块采用XRC
16.1平台功能介绍
Ubuntu等发行版。下面对平台进行全面介绍。
Windows 2000或Windows 2003、Windows 7等；支持Linux 2.6或以上内核，如Redhat
在Linux桌面环境，源码无须做任何改动即可直接兼容，平台支持的系统有Windows XP、
OManager是基于Python的wxpython GUI（图形用户界面）开发，具备跨平台的能力，比如
本、类型）等，由于在公司内部局域网使用且使用人群比较固定，这些条件基本都可以满足。
调用操作系统API等特点。当然，它也有局限性，比如要求相对统一的硬件、操作系统（版
交互性更强、存取模式更加安全、网络通信量低、响应速度更快、利于处理大量数据、可
构（桌面版本）的，OMServer是B/S结构（Web版本）的。C/S结构相对于B/S结构，具有
与OMServer一样，OManager同样实现了一个集中式的Linux集群管理基础平台，支持
OManager与OMServer平台实现了相同的功能，最大的区别是OManager是基于C/S 结
Linux公社www.linuxidc.com
构建桌面版C/S自动化运维平台
第16章
Chayte16
---
## Page 298
16.2
图16-1和图16-2。
OManager平台进行扩展，现已支持XML与现有资产平台进行对接。平台登录、管理界面见
270第三部分案例篇
OManager平台采用了两层设计模式。
系统构架设计
Linux公社 www.linuxidc.com
作者：刘天斯
管理员登录
欢迎家口
作员：root
登
私钥：
用户名：
录
图16-2平台主界面
图16-1平台登录页面
OManager服务器管理平台2014
---
## Page 299
总共有3张表，表信息说明如下。
16.3.1
16.3
返回的执行结果做加密／解密处理，最后返回给客户端，整个任务模块分发执行流程结束。
块，结合 Saltstack、Ansible或Func 向目标业务服务器集群发送执行任务，执行完毕后，对
将接收的数据通过“RC4+b64decode+密钥key”进行解密，解析成OManager调用的任务模
端软件包，作为rpyc客户端向rpyc服务器发送加密指令串，指令串通过“RC4+b64encode+
能力。系统架构图见图16-3。
方式，保证平台整体安全性；
主控服务器端直连通信，rpyc分布式计算框架负责传输与计算，传输采用加密（RC4算法）
OManager平台采用了开源数据库MySQL 以存储数据，
第二层为集群主控端服务层，支持 Saltstack、Ansible、Func 等平台，且具备多机服务的
user_logs：操作日志表。
upgrade：系统升级表;
从图16-3中可以看出系统两个层次的结构，首先管理员在办公电脑安装OManager客户
第一层为客户端交互层，采用了wxpython+xrc+rpyc+MySQL等技术，实现了客户端与
口users：用户表；
数据库结构设计
数据库分析
Linux公社 www.linuxidc.com
第一层
rpyc传输
rpyc传输
图16-3系统架构图
第16章构建桌面版C/S自动化运维平台271
主控端（备）
151
模块集合
，数据库名为OManager，数据库
件白
第二层
110
业务服务器集群
---
## Page 300
数据库模型见图16-4。
外键，与users 表中的“admin”字段进行关联，upgrade表存储OManager 的版本号，系统
表存储了管理员的账号信息；user_logs 表存储了管理员的操作日志，表中字段“user”配置
志等基础表，平台中服务器分类及清单来源于企业资产库生成的XML 文件。数据库中users
16.3.3
16.3.2
272
privileges
Privatekey
考虑到平台的通用性，OManager的数据库结构设计得非常简单，只涉及账号及操作日
passwd
admin
Datatime
event
user
3）users用户表。
id
字段名
字段名
2）user_logs 操作日志表。
1）upgrade 系统升级表。
version
段名
数据库模型
数据字典
第三部分案例篇
PRIMARY
privleges CHAR(62)
ndexes
passwd CHAR(32)
admin CHAR（20)
口
Linux公社
users
timestamp
char(255)
char(10)
数据类型
int(5)
char(32)
char(20)
数据类型
char(62)
char(32)
数据类型
char(5)
CURRENT_TIMESTAMP
图16-4系统数据库模型
www.linuxidc.com
默认值
默认值
默认值
versionCHAR(5)
允许非空
允许非空
NO
NO
NO
NO
允许非空
NO
NO
USER_NID
Datatime
PRIMARY
event CHAR(255)
user CHAR（10)
(S)INIP!
user_logs
Indexs
自动递增
自动递增
自动递增
是
权限角色
私钥md5
管理员密码
管理员账号
操作日期
操作事件
管理员账号
日志ID
最新版本号
备注
备注
备注
---
## Page 301
demo代码，可以帮助开发人员做到边学边用，下面介绍平台所需模块及功能说明。
好的口碑，尤其容易上手，可以做到快速开发、快速实现。wxPython官网提供了非常丰富的
python、psyco、pywin32等，这些开源组件无论是在开发效率还是运行速度方面都赢得了很
16.4.2
如表16-1所示。
解，
16.4.1
16.4
OManager
主控端
，下面对平台的运行环境、安装部署、开发环境优化等进行详细说明，环境设备角色表
OManager 由 wxPython2.8、rpyc-3.2.3、psyco-1.6 等开源组件构建。为了便于读者理
平台重点文件及目录说明见图16-5。
wxPython2.8-win32-unicode-2.8.12.1-py27.exe:Python GUI 图形库。
wxPython2.8-win32-docs-demos-2.8.12.1.exe:wxPython Demo（可选项）。
rpyc-3.2.3.win32.exe：分布式计算框架。
pywin32-218.win32-py2.7.exe：Windows系统API访问库。
psyco-1.6.win32-py25.exe：Python 程序提速模块。
MySQL-python-1.2.4b4.win32-py2.7.exe：Python访问MySQL的API模块。
角色
系统环境部署
系统环境搭建
系统环境说明
Linux公社 www.linuxidc.com
DELL-PC
SN2013-08-020
主机名
tmp
5sum.exe
mbe
图16-5系统目录结构及说明
192.168.1.101
192.168.1.20
表16-1
平台临时目录，存放升级包描述XML文件
平台帐号密钥存放目录
平台数据目录，存放配置文件、服务器信息XML文件等
平台入口可执行文件
D5计算工具
系统环境说明表
第16章构建桌面版C/S自动化运维平台
wxPython、rpyc客户端
Saltstack|Ansible|Func主控端、rpyc服务器端
环境说明
273
---
## Page 302
将密钥文件以人为单位进行发放。验证的实现方法源码如下：
配，建议由超级管理员提前开设好所有用户的账号信息，包括用户名、密码及密钥。再统一
图16-6和图16-7。
员账号对应的Privatekey字段，以 root用户的密钥numbers/root.pem为例，使用方法见
的md5sum.exe工具计算出该文件的md5，将生成的md5字符串更新到users（用户表）管理
一种为密钥文件校验方式，实现的原理是在密钥文件中输入任意随机字符串，通过平台自带
16.5.1用户登录模块
16.5
274第三部分案例篇
·OManager平台的登录采用了双重安全校验机制：一种为传统的用户名与密码匹配，
def md5(fileName, excludeLine="",includeLine=""):
#参数includeLine为额外包含的行
#计算文件md5值，参数fileName为实体文件路径；参数excludeLine为排除的文本行；
下面是计算密钥文件md5的实现方法，
管理员登录时首先获得选择密钥文件的md5，再与数据库中的Privatekey字段进行匹
系统功能模块设计
try:
m=hash1ib.md5()
def Check(self,name,password,Privatekey):
adin 管理员帐号passwd 管理员密码
return result
and Privatekey='%s'"%(name,md5pass,Privatekey)
result=myrow.fetchallq(sql)
sql="select admin,privileges from users where admin='%s'and
myrow=DBclass()
md5pass=m.hexdigest()
m=md5.new(password)
importmd5
Linux公社www.linuxidc.com
图16-7数据库存储的密钥文件md5数据
#使用hashlib模块生成一个md5hash对象
#返回结果集
图16-6查看密钥文件md5
#创建数据库连接对象（自定义类）
#使用md5模块计算密码的md5串
，主要用到了hashlib模块：
Privatekey 私钥MDS
em
privileges 权限角色
#密码、密钥进行校验
#参照MySQL中的用户名、
另
---
## Page 303
门槛，具体是通过ConfigParser模块操作 ini文件实现，效果见图16-8。
外部环境发生变化时无须做代码变更，简单更新配置即可，提高了平台的易用性，降低使用
16.5.2
OManager平台将常用的参数配置化，包括连接数据库、
md5(self.Privatekey.GetValue())
调用计算文件密钥md5方法：
欢迎套口系统配置
系统配置功能
return m.hexdigest()
fd.close()
m.update(includeLine)
while eachLine:
eachLine
except IoError:
数据库名：
数据库密码
数据库用户
数据库IP：
数握库参数
升级URL：
传输加密密钥：
可操作服务器数：
连接主控端超时（s）：
主控服务器端口：
主控服务器IP：
系统高度：
系统宽度
系统参数
eachLine =fd.readline()
m.update(eachLine)
if excludeLine and eachLine.startswith(excludeLine):
return
print
fd =open（fileName,"rb")
Linux公社 www.linuxidc.com
continue
fd.readline()
"Unable to open the file in readmode:",filename
OManager
123456#abc
servmanageruser
192.168.1.10
http://update.dom
ctmj#&lamp;8hrgow_^sjsejt@9fzsmh_o)-=(byt5jmg=e3#foy
10
11511
192.168.1.20
1024
#遍历密钥文件
图16-8
#返回十六进制结果
更新配置
#对额外包含的行做更新和加密处理
#用update方法对行字符串进行md5加密且不断做更新处理
#self.Privatekey.GetValue（）为用户选择的密钥文件路径
系统配置功能
#打开密钥文件