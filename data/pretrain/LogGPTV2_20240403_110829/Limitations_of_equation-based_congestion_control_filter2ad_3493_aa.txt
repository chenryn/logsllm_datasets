title:Limitations of equation-based congestion control
author:Injong Rhee and
Lisong Xu
852
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 15, NO. 4, AUGUST 2007
Limitations of Equation-Based Congestion Control
Injong Rhee and Lisong Xu
Abstract—We study limitations of an equation-based congestion
control protocol, called TCP-Friendly Rate Control (TFRC).
It examines how the three main factors that determine TFRC
throughput, namely, the TCP-friendly equation, loss event rate
estimation, and delay estimation, can inﬂuence the long-term
throughput imbalance between TFRC and TCP. Especially, we
show that different sending rates of competing ﬂows cause these
ﬂows to experience different loss event rates. There are several
fundamental reasons why TFRC and TCP ﬂows have different av-
erage sending rates, from the ﬁrst place. Earlier work shows that
the convexity of the TCP-friendly equation used in TFRC causes
the sending rate difference. We report two additional reasons in
is a loss event period
this paper: 1) the convexity of 1
and 2) different retransmission timeout period (RTO) estimations
of TCP and TFRC. These factors can be the reasons for TCP and
TFRC to experience initially different sending rates. But we ﬁnd
that the loss event rate difference due to the differing sending
rates greatly ampliﬁes the initial throughput difference; in some
extreme cases, TFRC uses around 20 times more, or sometimes 10
times less, bandwidth than TCP. Despite these factors inﬂuencing
the throughput difference, we also ﬁnd that simple heuristics can
greatly mitigate the problem.
where
Index Terms—Congestion control, equation-based rate control.
I. INTRODUCTION
EQUATION-BASED rate control is being adopted as an
Internet standard for congestion control for multimedia
streaming and multicast (see [17] and [25]). TCP-Friendly Rate
Control (TFRC) [10] is one example of that. However, there are
several pieces of anecdotal evidence suggesting signiﬁcant dis-
crepancy between the throughput1 achieved by TFRC and that
by TCP [3], [9], [22], [27]. A prevailing thought is that the
throughput discrepancy does not pose much threat to the In-
ternet. While that notion is debatable, this paper focuses on the
reasons why such discrepancy occurs.
Earlier work [24] provides the ﬁrst set of theoretical reasons
on why TFRC sometimes may not give the same throughput as
TCP, more precisely, why TFRC throughput can be less than
is the TCP-friendly
the target throughput
is the average loss
equation [18] used by TFRC, and
is the av-
(
event rate expressed in loss event intervals
erage loss event interval). The target throughput
is
where
Manuscript received December 7, 2004; revised May 23, 2005, April 5, 2006,
and June 21, 2006; approved by IEEE/ACM TRANSACTIONS ON NETWORKING
Editor M. Zukerman. This work was supported in part by the National Science
Foundation under Grants NSF-ANI 0074012 and NSF CAREER ANI-9875651.
Part of the results was presented at ACM SIGCOMM’05.
I. Rhee is with the Department of Computer Science, North Carolina State
University, Raleigh, NC 27695-7534 USA (e-mail: PI:EMAIL).
L. Xu is with the Department of Computer Science and Engineering, Univer-
sity of Nebraska-Lincoln, Lincoln, NE 68588-0115 USA (e-mail: xu@cse.unl.
edu).
Digital Object Identiﬁer 10.1109/TNET.2007.893883
1In this paper, throughput means the long-term average sending rates.
an estimate of the throughput of competing TCP ﬂows, and ac-
cording to [24], sets an upper bound to TFRC throughput in most
operating conditions. The authors call this behavior the conser-
vativeness of TFRC and show it is mainly due to the convexity
. They offer conservativeness as alternative to TCP
of
friendliness and deﬁne “when TFRC can be TCP-friendly in the
long run and in some case, excessively so” [24].
In general, there are three main factors that determine the
throughput of TFRC: the TCP-friendly equation, loss event
rates, and network delays (including RTO estimation). In this
paper, we examine how some of these factors inﬂuence the
difference in the throughput of TCP and TFRC. The main
contributions of our work are as follows. 1) We analytically
and empirically show that when competing TCP and TFRC
ﬂows on the same bottleneck have different sending rates, their
observed loss event rates can be signiﬁcantly different; lower
sending rate ﬂows, irrespective of whether the ﬂows are of TCP
or TFRC, can have higher loss event rates. 2) We empirically
show that the different loss event rates caused by these differing
sending rates can greatly amplify the initial throughput differ-
ence. These results may seem not surprising if we can assume
, that veriﬁes
a perfect source of bits, with an output rate of
a given loss-throughput formula
.
with equality
,
But unfortunately, there are reasons to believe that
that is, even if both TCP and TFRC sources are assumed to
see the same loss event rate, the equality does not hold. If
, then our work negates the implicit assumption made
by the authors of TFRC that TFRC ﬂows competing in the same
end-to-end path as TCP ﬂows will “see” the same
as TCP.
There are several factors for the initial sending rate difference
of TFRC and TCP ﬂows that triggers the loss event rate differ-
ence. The work by Vojnovic´ and Boudec [24] offers one. This
paper provides two additional reasons.
because
is a convex function of
, RTT
s),
a weighted moving average of
. Note that
is a tighter bound to TFRC throughput where
First, our analysis based on the convexity theory shows that
is
, but
. Under
s, and
a low loss rate condition (e.g.,
is a lower bound to TFRC throughput
RTO
(i.e., TFRC throughput lies between
and
).
Under a high loss rate condition,
is a tighter upper
. In most operating
bound to TFRC throughput than
conditions,
tracks TFRC throughput much more
. Intuitively, this result indicates that as
closely than
TFRC uses instantaneous values of
to make instantaneous
rate adjustments, its long-term throughput tends to follow a
. Interestingly
function of
enough, the difference between
is
positively proportional to
is
the variance in estimated loss event interval samples. This latter
ﬁnding implies that increase in the variance and also in the loss
instead of a function of
and
where
1063-6692/$25.00 © 2007 IEEE
RHEE AND XU: LIMITATIONS OF EQUATION-BASED CONGESTION CONTROL
853
event rate can drive TFRC throughput further away from the
target rate, which is conjectured in [24]. Our contribution for
the latter part is to prove it by analysis.
Synthesizing these ﬁndings, we conclude that even if the gap
and
, can be re-
between the two bounds,
duced by reducing the variance, since
is a tighter
upper bound to TFRC throughput under high loss rates, it does
and TFRC throughput.
not affect the gap between
Also we can only reduce the variance in measurement, but not
the intrinsic variance present in samples caused by the dynamic
nature of Internet trafﬁc. Thus, under high loss rates, the sending
rate of TFRC can always be lower than the target TCP rate.
Second, TCP and TFRC employ different RTO estimation
schemes. TFRC RFC [10] recommends that RTO be set to four
times a moving average of RTT. A standard-conformant TCP
[20], on the other hand, sets its RTO to a moving average of
RTT plus four times the variance of RTT samples, and the RTO
should be at least 1 s. Although many commercial TCP imple-
mentations adopt a different minimum RTO value, no matter
how the minimum value is set, there are cases where TFRC and
TCP may end up having different RTO values depending on the
network delays; under short network delays, TFRC tends to set
its RTO to a smaller value than TCP, and under long network de-
lays, vice versa. The different RTO values cause TCP and TFRC
to have different sending rates.
These factors can provide the initial sending rate gap between
TCP and TFRC which may be a trigger for TFRC to have a dif-
ferent loss event rate than TCP. Several studies [3], [19], [24]
also show that a slowly responsive ﬂow such as TFRC and CBR
(e.g., ping, acknowledgments) may get a higher loss event rate
than TCP (because of its slower response to transient conges-
tion) but not vice versa. Our analysis provides reasons for both
of the cases. Our work further shows that the loss event rate
difference has a feedback effect as it further widens the initial
throughput difference. In some extreme cases, we observe that
TFRC can use over twenty times more bandwidth than TCP and
sometimes, ten times less bandwidth than TCP.
A heuristic (or policy) can be applied to artiﬁcially correct
some ill-behavior of TFRC, or to give some “calculated” advan-
tage to TFRC over TCP since TFRC serves a different class of
applications than TCP. We view the RTO estimation technique
recommended by TFRC RFC as such a policy. However, our
work indicates that any policy decision that changes the sending
rate of TFRC to deviate from that of TCP must be done with a
great care because the sending rate difference can be greatly am-
pliﬁed by the loss event rate difference (caused by the sending
rate difference). In fact, the RTO policy issue provides an excel-
lent showcase to apply our work. We demonstrate that a simple
policy change designed using the insights we developed from
our study can ﬁx much of the throughput imbalance we observed
in practice.
Based on these ﬁndings, we close the loop by designing and
evaluating several heuristics to mitigate the throughput differ-
ence. Surprisingly a very simple heuristic that manipulates the
RTO values of TFRC to be always larger than TCP’s by some
constant factor works the best in which the throughput differ-
ence can be kept within 20% on average under all the operating
conditions where we have tested.
The remainder of this paper is organized around the above-
mentioned analytical results and their experimental veriﬁcation.
Section II describes the deﬁnitions and assumptions we make
for analysis. Section III describes the network setup for the sim-
ulation study in the paper. Section IV discusses the loss event
rate difference. Section V discusses the effect of the convexity
of
. Section VI discusses the effect of RTO difference, and
Section VII presents the heuristics.
II. DEFINITIONS AND ASSUMPTIONS
TFRC uses the following simpliﬁed TCP-friendly equation
as described in RFC 3448 [10]. Equation (1) is equivalent to the
if
original one [18, Eq. (30)], if
(or
):
(1)
As deﬁned in [18],
is the probability that a packet is lost in
a RTT round, given that no previous packet in the same round is
is the
lost, is independent of packet loss in earlier rounds.
round-trip delay, and
is 2 if delayed acknowledgment is used and 1 otherwise.
packet size.
is the retransmission timeout period.
is the
(A1) We assume that all packets in the same end-to-end
network path are subject to the same loss probability , and
is stationary ergodic.
Note that TFRC uses the loss event rate instead of the packet
loss rate to calculate its sending rate. As described in [10], a loss
event is deﬁned to be one or more lost or ECN-marked packets
within one RTT, and the loss event rate is the number of loss
events as a fraction of the total number of transmitted packets.
This is because (1) models the throughput of TCP/NewReno
where all the packets lost in the same congestion window are
treated as a single loss event and cause only one window re-
duction. As described in [11] and [15], this behavior of TCP/
NewReno is due to the intuition that all the packets lost within
the same window are likely caused by the same instance of con-
gestion and a window reduction by the losses does not take ef-
fect until the packets in the reduced window arrive to the con-
gested link—which is one RTT period after the ﬁrst loss in the
window. Penalizing TCP ﬂows more than once for the same in-
stance of congestion as done in the original TCP/Reno [1] has
been shown to lower the utilization of network capacity [15].
TCP/NewReno remedies this behavior of TCP/Reno.
to be the
th loss event. Let
Following the notations in [24], we denote
th
loss event interval, which is the number of packets sent between
the th loss event and the
denote the
weighted average of loss event intervals, which can be obtained
,
as follows:
,
and the values of
and linearly decrease with for the other values of .
to have the same values for
. TFRC RFC suggests
The TFRC throughput within interval
is then given by
. In this paper, we consider only the basic rate control
of TFRC where TFRC sets its transmission rate to the rate pro-
at which the th
duced by the formula (i.e.,
loss event is detected by the source. For the precise deﬁnition of
the basic control, see [24]. Vojnovic´ and Boudec [24] show for
the basic control of TFRC that the long-run throughput
) at time
854
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 15, NO. 4, AUGUST 2007
can be approximated as below if the covariance COV
(for convenience, we drop the Palm probability notation):
(2)
[28]. That is,
There is empirical evidence that COV
the successive loss events are occurring almost independently.
to be the average loss event rates
experienced by TFRC and TCP respectively. Below we discuss
how we measure these values.
We deﬁne
and
, but
Equation (1) is developed based on
cannot be
measured directly. To estimate , Padhye et al. [18] count the
number of TCP loss indications (triple duplicate acknowledg-
ment, and timeouts) over a long-term period, and divide the
result by the total number of TCP packets transmitted over that
is used in the place of
period. This value is
in (1) to show that the measured TCP throughput closely
. In [18],
follows the TCP equation.
nor
. Instead a TFRC ﬂow use
TFRC uses (1), but unfortunately, TFRC can compute neither