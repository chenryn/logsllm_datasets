are nearly optimal.
users watch the entire video without departing early and
without interactivity (that is, re-positioning in the content);
(ii) preserving early departures but still ignoring interactiv-
ity; and (iii) preserving the original trace with both early
departures and user interactivity.
We ﬁrst consider case (i), that is, all users watch the entire
video. To this end, we modify the trace data so that each
arriving user stays in the system for the length of the video,
and disregard all skipping request records that do not start
from the beginning of the video. We consider the two most
popular videos in April 2006. Figure 9 shows the server
resources on a day-by-day basis for the month of April. The
resources used by the pure client-server deployment is shown
as the no P2P curve. Because the server rate is proportional
to the number of users watching the video, the no-P2P curve
also reﬂects the user demand for the video over time.
The request patterns on these two videos are strikingly
diﬀerent. The most popular video, which we call the gold
stream, was released on April 5 and quickly attracted a large
number of requests. However, the demand for this video de-
clined very quickly, with only occasional views 5 days after
it was released. The second most popular video, the silver
stream, was popular throughout the entire month. We ob-
serve that the demand for this video went through a daily
peak and valley cycle.
Interestingly, the demand also has
a 7-day cycle as well, where the valley matches nicely with
weekend times.
We use these traces to drive the simulation and study the
performance of the proposed policies. Because our model in
Section 3 indicated that the greedy policy performs better
than the water-leveling policy, and is generally close to the
lower bound, we focus here on the greedy policy for the peer-
assisted deployments. In Figure 9, we plot the server rate
with peer assistance for two cases: at the current quality
level and at 3× the current quality level. The 3× video rate
pushes the system from the surplus mode into the deﬁcit
mode.
no P2P
P2P (3x quality)
P2P (current quality)
 1.5
 1.25
1.0
 0.75
 0.5
 0.25
)
s
p
b
G
t
(
e
a
r
r
e
v
r
e
s
no P2P
P2P (3x quality)
P2P (current quality)
 100
 80
 60
 40
 20
)
s
p
b
M
t
(
e
a
r
r
e
v
r
e
s
In the subsequent section, we will use the results of this
model to guide the trace simulation study.
 0
5th
6th
7th
8th
9th
 0
1st
5th
10th
15th
20th
25th
30th
date (Apr. 2006)
(a) Gold stream
date (Apr. 2006)
(b) Silver stream
4. REAL-WORLD CASE STUDY
The previous section presented a theoretical model that
exposed many of the fundamental issues of peer-assisted
VoD. In this section, we use the MSN Video trace data de-
scribed in Section 2 to gain critical complementary insights.
Although the traces were generated from a client-server de-
ployment, we use them here to drive simulations of peer-
assisted VoD.
4.1 Trace Analysis for the Two Most Popular
Videos
We are particularly interested in the impact of early de-
partures and peer interactivity (skipping video segments) on
the performance of peer-assisted VoD and prefetching poli-
cies. We consider three cases in our trace analysis: (i) all
Figure 9: Dynamics of required server resources (all
users watch entire video)
We make the following observations: First,
if a peer-
assisted distribution system had been used instead of the
client-server system, the server rate would have been dra-
matically reduced. In fact, Figure 9 shows a potential 1000-
fold server rate reduction! Second, for the P2P deployment
at the current quality level, typically no server resources are
needed. The occasional traﬃc at the server occurs when the
demand for the video enters valleys, which correspond to
small numbers of concurrent users in the system. This con-
forms with our analysis. When the number of concurrent
users is small, there is greater (normalized) variance in the
upload capacity, so that peer-assisted VoD is more likely to
run into a temporary deﬁcit states that require server par-
ticipation. Third, for these two videos, MSN Video is clearly
operating in the surplus mode due to the relatively low bi-
trates of the videos. When a peer-assisted VoD solution is
deployed, we can easily oﬀer much higher streaming quality
(e.g. tripling the bitrate) and still trim the server rate sig-
niﬁcantly. Finally, peer-assistance can be beneﬁcial for both
ﬂash crowd (gold stream) and long-lasting (silver stream)
videos.
gold stream
silver stream
serv. (Mbps)
client-server
cur. qual.
3x qual.
N.P.
.23
12.5
greedy
41.1
.18
11.9
bound
N.P.
.17
11.9
.26
14.5
greedy
66.8
0
14.2
bound
0
14.1
Table 3: 95 percentile rule for client-server and peer-
assistance (N.P. no-prefetching).
Table 3 presents the performance of peer-assisted VoD
in the context of the 95 percentile rule. Results are given
for the current quality scaling (surplus mode) and the 3×
bit-rate scaling (deﬁcit mode). We observe dramatic im-
provements going from client-server to peer-assistance with
no-prefetching, and then further improvements going from
no-prefetching to the greedy prefetching policy in the deﬁcit
mode. The performance of the greedy policy is also very
close to the bound. Note that the server bandwidths of the
gold stream are actually less than those of the silver stream,
because there was little demand 5 days after the release of
the gold stream.
4.2 Impact of Early Departures
In this subsection, we again use the April traces but now
preserve early departures when they occur. Hence, the du-
ration of each session now varies, as opposed to all sessions
having the same video length as in the previous subsection.
So as not to introduce too many factors at once, we still
disregard user interactivity in this subsection.
We also focus on the balanced mode in this subsection. By
scaling the video bitrate, we can easily drive the system from
the surplus mode, through the balanced mode, to the deﬁcit
mode. Using the silver stream as an example, Table 4 shows
server rates, averaged over the entire month of April, for
both the no-prefetching and the greedy prefetching policies.
From this table we observe that – even with early departures
– peer-assistance can provide a dramatic improvement in
performance. We also observe that prefetching continues to
provide improvements over non-prefetching, particularly in
the balanced mode (scaling 1.8 to 2.6).
Bitrate scaling
Client-server
No-prefetching
Greedy
Lower bound
1.0
36.0
.26
0
0
1.4
50.4
.40
.01
0
1.8
64.8
.60
.18
0
2.2
79.2
1.01
.54
.22
2.6
93.7
2.55
2.09
1.81
3.0
108.1
7.60
7.19
7.13
Table 4: Server rates (in Mbps) under diﬀerent sys-
tem modes with early departures
4.3
Impact of User Interactivity
As described in Section 2, user interactivity is not un-
common in Internet VoD, particularly for long videos. For
example, we saw that for videos over 30 minutes in length,
roughly 40% of sessions contained some interactivity. This
subsection, we assess the impact of interactivity on peer-
assisted VoD.
When there is user interactivity, a user might have holes
in its buﬀer; thus a user may not be capable of sharing
all content up to its current playback point. It is possible
to keep track of all buﬀer segments at all users, and simu-
late the system based on the exact buﬀer status; but such
simulation would be computationally demanding and may
even become prohibitive, given the size of our data set. In-
stead, we choose to examine two extreme approaches, which
intuitively should serve as good bounds for the actual per-
formance. The ﬁrst approach, which we refer to as the con-
servative approach, sets the user upload bandwidth to zero
after interactivity. As such, since a modiﬁed user no longer
serves content after interactivity, the holes in its buﬀer will
not matter at all. The second approach, which we refer to
as the optimistic approach, simply assumes there is no hole
in the user’s buﬀer even after interactivity and therefore the
user can upload any content being requested. Clearly, the
actual performance will lie between these two bounds.
Using the traﬃc on April 18 as an example, we plot the
total available user upload bandwidth corresponding to both
approaches in Figure 10. (Note that two out of the three
curves here are the same as those in Figure 4.) As the
4.0
3.0
2.0
1.0
)
s
p
b
G
(
h
t
i
d
w
d
n
a
b
(a) server load
(b) avail. upload (consv.)
(c) avail. upload (opt.)
(c)
(b)
(a)
 0
 0
 4
 8
 12
time (h)
 16
 20
 24
Figure 10: User demand and upload resources
(April 18)
total available bandwidth gap between the two approaches
is not signiﬁcant, intuitively, the loss of upload bandwidth
due to interactivity is not signiﬁcant. Thus, the results of
the previous subsection (accounting for early departures) are
also respresentative for interactivity.
4.4 All Things Considered
Having explored the impact of early departures and user
interactivity, we now investigate the total server bandwidth
cost for the month of April 2006. During this month, MSN
made available more than 12,000 videos. The multiplexing
eﬀect across the 12,000+ videos is of interest, as one video’s
peak might happen to be another video’s valley. Here we
use the 95 percentile criterion to meaure the server band-
width cost. We once again examine three deployment sce-
narios: client server; using P2P without increasing quality:
and using P2P with 3 times quality. For each of the P2P
deployments, we use the greedy prefetching policy.
)
%
(
F
D
C
 100
 80
 60
 40
 20
 0
 0
(d)
(c)
(b)
(a)
(e)
(a) no P2P
(b) P2P consv. (3x quality)
(c) P2P opt. (3x quality)
(d) P2P consv. (current quality)
(e) 95th percentile cut
 0.25
 0.5
 0.75
1.0
 1.25
 1.5
 1.75
server rate (Gbps)
Figure 11: CDF of 5-minute average bandwidths for
the month of April using all videos
Figure 11 shows the cumulative distribution of the ﬁve-
minute average bandwidths for the month of April using all
12,000+ videos. The results from both the conservative and
optimistic approaches are presented. We omit the curve for
the optimistic peer-assisted approach at the current quality
level, as it aligns very closely with the curve of the conserva-
tive approach. The savings using the 95 percentile rule are
summarized in Table 5.
consv. approach
opt. approach
serv. rate
saving (%)
serv. rate
saving (%)
Client-server (Gbps)
cur. qual. (Mbps)
3x qual. (Mbps)
1.23
37
770
97.0
37.6
33
636
97.3