 The challenger chooses a subversion algorithm (cid:101)As,τ uniformly at random from
the SA class Acext.
(This is equivalent to sampling the algorithm from the
distribution Ucext, and implicitly corresponds to picking an initial random seed
s0 ∈ {0, 1}κ for the PRG.)
 For j ∈ [q] do:
– Make a query to the signature oracle, receiving a pair (mj, σj) such that
σj ←(cid:101)As,τ (sk , mj) for mj ← M;
– Extract the randomness from the j-th signature(cid:101)rj ← CExt(vk , mj, σj).
– Set sk(cid:48)[(j − 1)d + 1, jd] :=(cid:101)rj ⊕ vj.
– Run (sj, vj) = G(sj−1);
 Return sk(cid:48).
Notice that B speciﬁes a single subversion algorithm, asks exactly q := (cid:96)/d oracle queries,
and runs in time roughly equal to q times the sum of the running time of algorithm CExt plus
the time to evaluate a single iteration of the function G. The claim below concludes the proof.
Claim 2.1. The following holds for the adversary B deﬁned above: P [B wins G] ≥ 1 − q · νext.
Proof. We note that adversary B fails to extract the biased randomness bits (cid:101)rj ∈ {0, 1}d for
(ii) Let G be the game described in Deﬁnition 8, where the challenger picks (cid:101)A ←$ Acext
each σj with negligible probability, more precisely with probability at most νext. By the union
bound, we have that the probability of B failing to recover all (cid:96) bits of the signing key sk is at
most q · νext, and thus B’s advantage is lower bounded by ε ≥ 1 − q · νext.
uniformly at random. Consider the game G0, an identical copy of game G when b = 0, and
consider the game G1, an identical copy of game G when b = 1. We need to show that G0 and
G1 are computationally indistinguishable.
(cid:101)As,τ now uses, at each run, a random v ←$ Ud, where Ud is the uniform distribution over d-bit
Deﬁne the hybrid game H that is identical to G0, except that the subversion algorithm
strings. The two claims below conclude the proof.
Claim 2.2. For all distinguishers D running in time tprg and asking qprg oracle queries, we
have that |P [D(G0) = 1] − P [D(H) = 1]| ≤ εprg.
Proof. Let D be an algorithm that distinguishes G0 and H with probability at least εprg, running
in time t and asking q oracle queries. We build a distinguisher Dprg that, by using distinguisher
D, breaks the PRG security of the function G. A description of Dprg follows.
Distinguisher Dprg(v1, . . . , vqprg):
 Initialize τ := 0.
 For each query (sk i ∈ SK, mi ∈ M) asked by D:
– If τ ≥ (cid:96), then τ := 0;
– Let ri := vi ⊕ sk i[τ + 1, τ + d];
– Compute a fresh signature σ = Sign(sk i, mi; ri);
– Update τ ← τ + d;
– Return σ to D.
 Output whatever D outputs.
22
For the analysis, note that Dprg needs q = (cid:96)/d ≤ qprg samples, and runs in time tprg roughly
equal to q times the running time of algorithm Sign. Moreover, the simulation done by Dprg is
perfect, in the sense that the view of D when run as a sub-routine by Dprg is either identical to
that of G0 (in case the values vi are computed using the PRG), or to that of game H (in case
the values vi are uniformly random). Hence, Dprg retains the same advantage of D, concluding
the proof.
Claim 2.3. H ≡ G1.
Proof. The only diﬀerence between H and G1 is that, upon input a query sk j ∈ SK from
the distinguisher, both games sample mj ← M and return σj = Sign(sk j, mj; rj) where the
randomness rj is either sampled uniformly at random from {0, 1}d (in G1) or computed as
vj ⊕ sk j[(j − 1)d + 1, jd] for a random vj ∈ {0, 1}d. Hence, the two games retain the same
distribution.
On removing the state. While the above attack works even against signature schemes using
a very little amount of randomness, in fact as small as a single bit, it has the drawback that
it requires to keep and update a state within each invocation. As observed by [BJK15], this
might lead to detection in some settings, e.g., because of a state reset due to reboot or cloning
to create a virtual machine.
We leave it as an open problem to design a stateless (secretly) undetectable attack that
recovers the signing key for signature schemes with arbitrary min-entropy, and that works for
arbitrary message samplers.
5 Security of Unique Signatures
In this section we prove that signature schemes with unique signatures are subversion-resilient
against SAs that meet a basic undetectability requirement, which we call the veriﬁability con-
dition.
5.1 The Veriﬁability Condition
We say that A meets the veriﬁability condition relative to SS if for all (cid:101)A ∈ A, and for all
m ∈ M, the signatures produced using the subverted signing algorithm (cid:101)A upon input an
honestly generated signing key sk , (almost) always verify under the corresponding veriﬁcation
key vk (for any value of the algorithm’s internal state).
Deﬁnition 13 (Veriﬁability). Let A be some class of SAs for a signature scheme SS. We say
that A satisﬁes νv-veriﬁability if for all κ ∈ N, for all (vk , sk ) output by KGen(1κ), for all states
τ ∈ {0, 1}∗, for all algorithms (cid:101)Aτ ∈ A, and all m ∈ M,
(cid:105) ≥ 1 − νv,
Vrfy(vk , (m,(cid:101)Aτ (sk , m))) = 1
where the probability is taken over the randomness of algorithm (cid:101)Aτ .
P(cid:104)
23
are incomparable. To see this, consider the class of SAs Amsg = {(cid:101)A ¯m} ¯m∈M that behaves
Public undetectability vs. veriﬁability. One might think that veriﬁability is a special
case of public undetectability. However, this is not true and, in fact, Deﬁnition 13 and 8
identically to the original signing algorithm, except that upon input ¯m ∈ M it outputs an
invalid signature.17 Clearly, whenever the message space is large enough, Amsg satisﬁes public
undetectability w.r.t. the uniform distribution over Amsg, as a user has only a negligible chance
of hitting the value ¯m; yet, Amsg does not meet the veriﬁability condition as the latter is a
property that holds for all messages.
On the other hand, let SS be any UF-CMA signature scheme with large randomness space
(say, R = {0, 1}κ). Consider the stateful class of SAs Adet that is identical to the original
signing algorithm, except that it behaves deterministically on repeated inputs. Clearly, Adet
meets the veriﬁability condition relative to SS; yet, Adet does not satisfy public undetectability
(for any distribution over Adet), as a user can simply query the same message twice in order to
guess the value of the hidden bit b with overwhelming probability.
Relaxed veriﬁability. The assumption that the veriﬁability condition should hold for all
values m ∈ M is quite a strong one. A natural relaxation is to require that the probability in
Deﬁnition 13 is taken also over the choice of the message.
Deﬁnition 14 (Relaxed veriﬁability). Let A be some class of SAs for a signature scheme SS.
We say that A satisﬁes relaxed νv-veriﬁability if for all κ ∈ N, for all (vk , sk ) output by KGen(1κ),
for all states τ ∈ {0, 1}∗, and for all algorithms (cid:101)Aτ ∈ A,
P(cid:104)
Vrfy(vk , (m,(cid:101)Aτ (sk , m))) = 1 : m ←$ M(cid:105) ≥ 1 − νv,
where the probability is taken over the (uniform) choice of the message and over the randomness
of algorithm (cid:101)Aτ .
This is because relaxed veriﬁability still has to hold for all algorithms (cid:101)A ∈ A, while public
Unfortunately, public undetectability does not imply even relaxed veriﬁability in general.
undetectability only holds w.r.t. some (eﬃciently samplable) distribution over A. (See also the
discussion after Deﬁnition 8.)
5.2 Chosen-Message Attacks
The theorem below shows that unique signature schemes (cf. Deﬁnition 3) achieve indistin-
guishability (and thus EUF-CMA) against the class of all SAs that meet the veriﬁability con-
dition (cf. Deﬁnition 13).
Theorem 3. Let SS = (KGen, Sign, Vrfy) be a signature scheme with perfect correctness and
uniqueness, and denote by Aνv
ver the class of all algorithms that satisfy νv-veriﬁability relative to
SS. Then SS is (t, n, q, ε)-indistinguishable against continuous Aνv
ver-SAs, for all t, n, q ∈ N and
for all ε ≤ qn · νv.
Proof. Let G be the game described in Deﬁnition 6. Consider the game G0, an identical copy
of game G when b = 0, and consider the game G1, an identical copy of game G when b = 1.
The objective here is to show that G0 ≈ G1.
17A similar class of attacks—under the name of input-triggered subversion—has been considered in [DFP15]
for the case of symmetric encryption.
24
such that j ≤ k as in game G0 (i.e., by running (cid:101)Aj(sk , mi,j)),18 while all queries (j, mi,j) such
For an index k ∈ [0, n], consider the hybrid game Hk that answers each query (j, mi,j)
that j > k are answered as in G1 (i.e., by running Sign(sk , mi,j)). We note that H0 ≡ G1
and Hn ≡ G0. Abusing notation, let us write Hk for the distribution of the random variable
corresponding to B’s view in game Hk.
Fix a particular k ∈ [0, n], and for an index l ∈ [0, q] consider the hybrid game Hk,l that is
identical to Hk except that queries (k, mi,k) with i ≤ l are treated as in game G0, while queries
(k, mi,k) with i > l are treated as in G1. Observe that Hk,0 ≡ Hk−1, and Hk,q ≡ Hk.
Claim 3.1. Fix some k ∈ [0, n]. For each l ∈ [0, q], we have SD (Hk,l−1, Hk,l) ≤ νv.
Proof. Notice that the only diﬀerence between Hk,l−1 and Hk,l is how the two games an-
swer the query (k, ml,k): Game Hk,l−1 returns(cid:101)σl,k ←$(cid:101)Ak(sk , ml,k), whereas game Hk,l returns
σl,k ←$ Sign(sk , ml,k). Now let El,k be the event that σl,k (cid:54)=(cid:101)σl,k; observe that w.l.o.g. we may
((cid:101)σ1,k, . . . ,(cid:101)σq,k), so that the event El,k is well deﬁned on both Hk,l−1 and Hk,l. We can write
assume that each experiment Hk,l computes both sequences of signatures (σ1,k, . . . , σq,k) and
SD (Hk,l−1, Hk,l) ≤ SD (Hk,l−1|¬El,k; Hk,l|¬El,k) + P [El,k]
(2)
≤ νv.
(3)
Eq. (2) follows by Lemma 1, since PHk,l−1[El,k] = PHk,l[El,k] = P [El,k]. Eq. (3) follows by the
fact that Hk,l−1 and Hk,l are identically distributed conditioned on El,k not happening, and
moreover P [El,k] ≤ νv. The latter can also be seen as follows. By the correctness condition of
ver we have that
of the implicit state information τk ∈ {0, 1}∗). Finally, by the uniqueness property of SS we
SS we have that σl,k is valid for ml,k under vk . By the assumption that(cid:101)Ak ∈ Aνv
(cid:101)σl,k is also valid for ml,k under vk except with probability at most νv (for every possible value
have that σl,k and(cid:101)σl,k must be equal. It follows that P [El,k] ≤ νv, as desired.
The statement now follows by the above claim and by the triangle inequality, as
SD (G0, G1) ≤ n(cid:88)
SD (Hk−1, Hk) ≤ n(cid:88)
q(cid:88)
SD (Hk,l−1, Hk,l) ≤ qn · νv.
k=1
k=1
l=1
Amsg = {(cid:101)A ¯m} ¯m∈M that behaves identically to the original signing algorithm, except that upon
Unfortunately, unique signatures do not satisfy EUF-CMA against the class of all SAs that
satisfy relaxed veriﬁability (cf. Deﬁnition 14). In fact, it is not hard to show that no signature
scheme with large enough message space (no matter if randomized or deterministic) can achieve
EUF-CMA against such class of SAs. This can be seen by looking again at the class of SAs
input ¯m ∈ M it outputs the secret key. Clearly, Amsg satisﬁes relaxed veriﬁability, as a randomly
chosen message will be diﬀerent from ¯m with high probability; yet, Amsg allows to break EUF-
18Recall that each subversion can be stateful, and thus algorithm(cid:101)Aj additionally takes as input state informa-
CMA for an adversary knowing ¯m.
tion τj ∈ {0, 1}∗ that gets updated at each invocation. To simplify the notation we omit to write the dependency
on τj explicitly.
25
5.3 Random-Message Attacks
We show that if we restrict to the case of random-message attacks (RMA), i.e. the adversary
can only see signatures of randomly chosen messages, unique signatures achieve unforgeability
against the class of SAs that meets relaxed veriﬁability (cf. Deﬁnition 14).
Deﬁnition 15 (EUF-RMA against SAs). Let SS = (KGen, Sign, Vrfy) be a signature scheme,
and A be some class of SAs for SS. We say that SS is (t, n, q, ε)-EUF-RMA w.r.t. continuous
A-SAs if for all adversaries B running in time t, we have P [B wins] ≤ ε(κ) in the game of Deﬁ-
at random from the message space M.
nition 7, with the adaptation that the messages in the sets Q, (cid:101)Q1, . . . , (cid:101)Qn are drawn uniformly
While the above deﬁnition might seem a weak guarantee, it is still useful for applications. In
particular, in Section 5.4, we show how to use any signature scheme that is EUF-RMA against
a given class of SAs, to construct an identiﬁcation scheme that is subversion-resilient against
the same class of SAs.
Theorem 4. Let SS = (KGen, Sign, Vrfy) be a (t, (q +1)·n, ε)-EUF-RMA signature scheme with
perfect correctness and uniqueness, and denote by Aνv
r ver the class of all algorithms that satisfy
relaxed νv-veriﬁability relative to SS. Then, SS is (t(cid:48), n, q, ε(cid:48))-EUF-RMA against continuous
Aνv
r ver-SAs, for t(cid:48) ≈ t, for all n, q ∈ N, and for ε(cid:48) ≤ ε + qn · νv.
Proof. Let G be the game of Deﬁnition 15. Consider the modiﬁed game H that is identical to
G except that queries to the subverted signing algorithms are answered as described below:
 For all i ∈ [q], j ∈ [n], sample mi,j ←$ M and return σi,j ← Sign(sk , mi,j).
Claim 4.1. |P [B wins in G] − P [B wins in H]| ≤ qn · νv.
Proof. For an index k ∈ [0, n], consider the hybrid game Hk that answers each query to the j-th
subversion oracle, such that j ≤ k, as in game G, while all queries with j > k are answered as in
H. We note that H0 ≡ H and Hn ≡ G. Abusing notation, let us write Hk for the distribution
of the random variable corresponding to B’s view in game Hk.
We will show that SD (Hk−1, Hk) ≤ q · νv for all k. Fix a particular k ∈ [0, n], and for an
index l ∈ [0, q] consider the hybrid game Hk,l that is identical to Hk except that it answers
queries (k, i) with i ≤ l as in game G, while all queries (k, i) with i > l are treated as in H.
Observe that Hk,0 ≡ Hk−1, and Hk,q ≡ Hk.
We now argue that for each l ∈ [q], one has that SD(Hk,l−1, Hk,l) ≤ νv. Notice that the
only diﬀerence between Hk,l−1 and Hk,l is how the two games answer the query (k, l): Game
Hk,l−1 returns σl,k ←$ Sign(sk , ml,k), whereas game Hk,l returns (cid:101)σl,k ←$(cid:101)Ak(sk , ml,k) (where
ml,k ←$ M).19 Now let El,k be the event that σl,k (cid:54)= (cid:101)σl,k; observe that w.l.o.g. we may as-
((cid:101)σ1,k, . . . ,(cid:101)σq,k), so that the event El,k is well deﬁned on both Hk,l−1 and Hk,l. We can write