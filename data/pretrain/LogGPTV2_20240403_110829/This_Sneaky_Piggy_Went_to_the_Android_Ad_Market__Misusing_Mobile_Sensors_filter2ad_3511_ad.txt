checked for in-app ads that are displayed on the screen, and for
network flows that originate from ad domains. To identify whether
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1072Table 4: Non-browser apps with in-app ads that listen to devicemotion and deviceorientation events. Intra Vuln denotes that
the app either displays ads in sensitive Views ((cid:71)) or uses Google’s interstitial ad placements ((cid:72)). If both occur they are marked
with ((cid:32)). Inter Vuln denotes apps with the SYSTEM_ALERT_WINDOW permission.
Package Name
Motion
Events
Orientation
Events
Intra
Vuln
Inter
Vuln
Ad Placement
Sensor
Leaks
⇓ DLs
10M+
10M+
5M+
10K+
5M+
1M+
5M+
500K+
500K+
100M+
10M+
10M+
5M+
500K+
10M+
5M+
1M+
10M+
5M+
1M+
1M+
1M+
1M+
1M+
1M+
500K+
500K+
100K+
com.bigduckgames.flowbridges
com.resultadosfutbol.mobile
com.genius.android
com.kdrapps.paokfcnet
com.genius.android
com.studioeleven.windfinder
com.bingoringtones.birds
com.appscores.football
com.promiflash.androidapp
com.melodis.midomiMusicIdentifier.freemium
com.livescore
com.ilmeteo.android.ilmeteo
com.genius.android
com.famousbirthdays
com.resultadosfutbol.mobile
com.genius.android
com.studioeleven.windfinder
com.ilmeteo.android.ilmeteo
com.genius.android
com.studioeleven.windfinder
hurriyet.mobil.android
com.mynet.android.mynetapp
com.finallevel.radiobox
netroken.android.persistfree
com.phototoolappzone.gallery2019
com.famousbirthdays
com.kupujemprodajem.android
de.heise.android.heiseonlineapp
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✗
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
USA
✗
✗
✗
✗
Russia
✗
✓
India
✗
✗
✗
(cid:72)
(cid:72)
(cid:71)
(cid:72)
(cid:71)
✗
(cid:72)
(cid:72)
✗
United Kingdom
✗
✗
✗
✓
✗
✗
✗
Germany
✓
✗
✗
Greece
✗
✗
✗
✗
✓
✗
✗
✗
✗
✗
✗
(cid:72)
(cid:71)
✗
(cid:72)
(cid:71)
✗
(cid:72)
(cid:71)
✗
✗
✗
✗
✗
✗
✗
✗
(cid:32)
✗
✗
✓
✗
✓
✗
✗
✗
✗
✗
✗
✗
✓
✗
✗
✓
✗
✗
✓
✗
✗
✗
✗
✓
✗
✗
✗
✗
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
tps20228.doubleverify
tps20512.doubleverify
pubads.g.doubleclick.net
pubads.g.doubleclick.net
tps20512.doubleverify.com
-
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
tps20516.doubleverify
tps20516.doubleverify
tps20519.doubleverify
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
tps20518.doubleverify
tps20518.doubleverify
tps20514.doubleverify
tps20515.doubleverify
pubads.g.doubleclick.net
pubads.g.doubleclick.net
googleads.g.doubleclick.net
-
tps20515.doubleverify
tps20515.doubleverify
pubads.g.doubleclick.net
pubads.g.doubleclick.net
googleads.g.doubleclick.net
pubads.g.doubleclick.net
embed.dugout.com
googleads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
pubads.g.doubleclick.net
googleads.g.doubleclick.net
tps20519.doubleverify
tps20512.doubleverify
tps20237.doubleverify
tps20520.doubleverify
tps20515.doubleverify
tps20515.doubleverify
tps20516.doubleverify
tps20236.doubleverify
tps20514.doubleverify
tps20520.doubleverify
-
-
-
-
browser apps enforce any access control for what an in-app ad (and
its WebView) can access, we injected JavaScript code that accesses
motion sensors only in network flows originating from ad domains.
In Table 5 we list the results of this experiment. We found that
none of these browsers enforce any access control for in-app ads
that access motion sensors, and all of them allow in-app ads to
capture sensor data. Even though most of the browsers we tested
did not display ads while visiting Facebook’s log in page, we found
that in-app ads displayed in the Home tab (or in any other tab) of the
browser continue to access sensors even if the user switches tabs.
As such, all browsers indirectly allow in-app ads to access sensors
while a sensitive View is displayed, even if there is no ad in the
current tab. According to Google’s general policies [7] for web ads,
it is forbidden to place ads in login pages. While this is a security
practice that should be followed by all ads, we find that this is not
the case with mobile apps, as Puffin displayed an in-app advertising
banner on Facebook’s login page. In summary, we found that (i)
all browsers allow access to motion sensors by in-app ads, (ii) all
browsers allow in-app ads to capture sensor data while a sensitive
View is displayed, (iii) two browsers use Google’s interstitial ad
placements and (iv) four browsers hold the SYSTEM_ALERT_WINDOW
permission. As such, all tested browsers are vulnerable to either
the intra or the inter-app data exfiltration scenario, or both.
7 INPUT INFERENCE
Many prior studies have demonstrated the feasibility of input infer-
ence attacks using sensor data. While our main focus is exploring
the feasibility of using the ad ecosystem as a sensor-based-attack
delivery system and the underlying flaws in Android, we also ex-
plore the actual input inference phase of our attack. To that end, we
build an input inference classifier based on Axolotl [83]. Since Ax-
olotl’s learn_location classifier is intended for use with iPhone
devices, we modified it to work with a Google Pixel 4 device by
changing different settings (e.g., display resolution, ppi density, etc.).
Furthermore, as our goal is to predict the label of each keystroke
(i.e., which key was pressed) we have developed a component for
mapping the predicted coordinates into key labels.
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1073Table 5: Browsers marked by Google Play with in-app ads that listen to devicemotion and deviceorientation events. CAM,
MIC and GPS application permissions allow in-app ads to access additional sensors.
Browser Package Names
Motion
Events
Orientation
Events
Intra
Vuln
Inter
Vuln
CAM MIC
GPS
In-app ads displayed
on FB’s login page
✗
✓
✓
✗
✗
✗
✓
✓
✓
✗
✓
✗
✓
✓
✗
✗
✓
✓
(cid:71)
(cid:71)
(cid:32)
(cid:32)
(cid:71)
(cid:71)
Table 6: Inference accuracy of the classification models.
✓
✓
✓
✓
✓
✓
✗
✗
✓
✗
✗