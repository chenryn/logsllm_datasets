# Stepwise Construction and Refinement of Dependability Models

**Authors:** Cláudia Betous-Almeida and Karama Kanoun  
**Affiliation:** LAAS-CNRS, 7 Avenue du Colonel Roche, 31077 Toulouse Cedex 4, France  
**Email:** [falmeida@example.com](mailto:falmeida@example.com)

## Abstract
This paper introduces a stepwise approach for dependability modeling using Generalized Stochastic Petri Nets (GSPNs). The initial model, referred to as the functional-level model, can be constructed from system functional specifications. This model is subsequently enhanced by the structural model once the system architecture is known, even at a high level. The structural model can be refined in three aspects: component decomposition, state and event fine-tuning, and distribution adjustment to account for increasing event rates. We define specific rules to facilitate these transformations systematically. This approach allows for the consideration of various dependencies at the appropriate levels of abstraction, including functional, structural, and non-exponential distribution-induced dependencies. A portion of this approach is applied to an instrumentation and control (I&C) system in power plants.

## 1. Introduction
Dependability evaluation is crucial in the definition, design, and development of critical systems. Modeling can begin with system functional specifications, from which a high-level model can be derived to analyze dependencies between functions. As more information about the system's implementation is incorporated, the accuracy of the dependability measures improves.

Our work aims to support stakeholders in selecting and refining I&C systems proposed by different contractors in response to a Call for Tenders. To achieve this, we have developed a stepwise modeling approach that can be easily used to select and thoroughly model an appropriate system. This approach is general and can be applied to any system to progressively model its dependability, making it useful for any system developer.

The process of defining and implementing an I&C system can be seen as a multi-phase process, starting with the issuance of a Call for Tenders. This call specifies the functional and non-functional (e.g., dependability) requirements and invites contractors to propose systems meeting these requirements. After a preliminary analysis, a few candidate systems are pre-selected. These candidates are then compared, and the most suitable one is selected. Finally, the chosen system is refined and thoroughly analyzed for qualification. This process is illustrated in Figure 1, and although specific to a particular company, the phases are similar to those of many critical systems.

Dependability modeling and evaluation provide essential support for the selection, refinement, thorough analysis, and qualification preparation. Our modeling approach follows the same steps as the development process, consisting of three main steps (Figures 1 and 2):
1. Construction of a functional-level model based on system specifications.
2. Transformation of the functional-level model into a high-level dependability model, using knowledge of the system structure. A model is generated for each pre-selected candidate system.
3. For the retained system, refinement of the high-level model into a detailed dependability model.

Modeling is based on GSPNs due to their modularity and refinement capabilities. The GSPN model is processed to obtain dependability measures (availability, reliability, safety, etc.) using an evaluation tool like SURF-2.

The key advantage of our approach is the provision of coherent techniques for step-by-step dependability model construction. It allows for the progressive incorporation of new information into the existing model, following well-defined rules. Model refinement can address component decomposition, event fine-tuning, and distribution adjustment. The same set of rules is used for generating the high-level model from the functional-level model and for component refinement. We have adapted the method of stages to simulate increasing failure rates while considering dependencies between interacting components without altering their initial models.

This approach has been applied to three different I&C systems to help select the most appropriate one. In this paper, we illustrate our approach using a small part of one of these systems. This paper builds upon our previous work, which focused only on the functional-level model construction and did not address structural model refinement.

The remainder of the paper is organized as follows:
- Section 2 describes the functional-level model.
- Section 3 presents the high-level dependability model.
- Section 4 deals with the structural model's refinement.
- Section 5 provides a small example of applying the proposed approach to an I&C system.
- Section 6 concludes the paper.

## 2. Functional-level Model
The first step in our method is to derive the system’s functional-level model, which is independent of the system's structure. This model can be built by the stakeholder even before the Call for Tenders. It consists of places representing possible states of functions. For each function, there are at least two places: one for the nominal state (F) and one for the failure state (F).

### 2.1 Single Function
For a single function, the minimal number of places is two (Figure 3): one for the nominal state (F) and one for the failure state (F). Events manage changes between these states. The model containing these events and places is called the link model (ML).

### 2.2 Multiple Functions
Systems typically perform multiple functions, and dependencies between these functions must be considered. We distinguish two types of dependency: total and partial. Figure 4 illustrates these dependencies between two functions, F1 and F2, where F3 is independent of both.

- **Total Dependency (F2 ⊆ F1):** If F1 fails, F2 also fails.
- **Partial Dependency (F2 - F1):** F1's failure does not cause F2's failure but may put F2 in a degraded state (F2d).

## 3. High-level Dependability Model
The high-level dependability model includes the function's states and the link model, which gathers the states and events related to the system's structural behavior. This behavior is modeled by the structural model and connected to the function's states through an interface model. The link model consists of the structural model and the interface model.

### 3.1 Examples of Interface Models
For simplicity, we first consider a single function and then multiple functions.

#### 3.1.1 Single Function
- **Series Case:** Suppose function F is carried out by a software component S and a hardware component H. The states of F and F depend on the states of S and H (Figure 5).
- **Series-Parallel Case:** Consider function F implemented by two redundant software components S1 and S2 running on the same hardware component H (Figure 6).

#### 3.1.2 Multiple Functions
- **No Common Components:** If functions F1 and F2 do not share components, their interface models are built separately.
- **Common Components:** If functions F1 and F2 share components, such as the same hardware component H, this creates structural dependencies (Figure 7).

### 3.2 Interfacing Rules
The interface model MI connects the system's components with their functions using a set of transitions. This model is a key element in our approach. Specific examples of interface models are provided in Figures 5 to 7. The general organization of the interface model is discussed in this section.

## 4. Structural Model Refinement
The structural model represents the behavior of hardware and software components, taking into account fault-tolerance mechanisms, maintenance policies, and dependencies due to interactions between components. This section focuses on the refinement of the structural model.

## 5. Example Application
We apply our approach to a small part of an I&C system to demonstrate the stepwise construction and refinement of the dependability model.

## 6. Conclusion
In conclusion, our stepwise approach for dependability modeling using GSPNs provides a systematic and flexible method for constructing and refining models. This approach supports the selection and refinement of I&C systems, ensuring that all relevant dependencies are considered at the appropriate levels of abstraction.

---

**Note:** Figures 1, 2, 3, 4, 5, 6, and 7 should be included in the final document to provide visual references for the described models and processes.