---
title: Docker 逃逸漏洞汇总
---

# Docker 逃逸漏洞汇总

Docker 的主要安全风险集中在容器逃逸方面。本文将总结一些已知的 Docker 逃逸漏洞，并将持续更新相关的漏洞复现文章。

## 1. Docker 自身漏洞

以下是 Docker 自身的一些重要逃逸漏洞：

- **CVE-2017-1002101**: 容器内的恶意用户可以通过特定操作获取主机上的敏感信息。
- **CVE-2018-1002100**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2018-15664**: 符号链接替换漏洞，允许攻击者通过符号链接进行路径遍历攻击。
- **CVE-2019-14271**: 加载不受信任的动态链接库，可能导致执行任意代码。
- **CVE-2019-1002101**: 容器内的恶意用户可以通过特定操作获取主机上的敏感信息。
- **CVE-2019-11246**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2019-11249**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2019-11251**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2019-16884**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2019-5736**: runc 逃逸漏洞，允许容器内的恶意用户以 root 权限在宿主机上执行命令。
- **CVE-2020-15257**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2020-27151**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **Kata-escape-2020**: Kata Containers 逃逸漏洞。
- **CVE-2021-25741**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2021-30465**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2022-0492**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。

## 2. 内核漏洞

以下是一些与 Docker 相关的内核逃逸漏洞：

- **CVE-2016-5195 (DirtyCow)**: 利用内核中的 race condition 漏洞，允许普通用户提升权限至 root。
- **CVE-2017-1000112**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2020-14386**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2021-22555**: 恶意容器可以利用此漏洞覆盖主机上的任意文件。
- **CVE-2022-0847 (DirtyPipe)**: 利用内核中的写入权限漏洞，允许普通用户修改只读文件。

## 3. 不安全的配置

以下是一些常见的不安全配置，可能导致 Docker 逃逸：

- **privileged-container**: 允许容器以特权模式运行，具有与宿主机相同的权限。
- **mount-docker-sock**: 将 Docker 套接字挂载到容器中，允许容器内的进程管理其他容器。
- **mount-host-etc**: 将宿主机的 `/etc` 目录挂载到容器中，可能暴露敏感配置文件。
- **mount-host-procfs**: 将宿主机的 `/proc` 文件系统挂载到容器中，可能暴露宿主机的进程信息。
- **mount-var-log**: 将宿主机的 `/var/log` 目录挂载到容器中，可能暴露日志文件。
- **cap_dac_read_search-container**: 授予容器 DAC 读取和搜索能力，可能允许访问受限文件。
- **cap_sys_admin-container**: 授予容器系统管理员权限，可能导致容器逃逸。

通过了解这些漏洞和不安全配置，可以帮助您更好地保护您的 Docker 环境免受攻击。