Android开发者网站http:/software.intel.com/en-us/android/则是面向应用开发者的。目前市场上已
经有一些基于英特尔平台的智能手机，这些手机中包括一个英特尔专有的二进制翻译器，称为
libhoudini。libhoudini能让ARM处理器构建的应用直接运行在基于英特尔平台的设备上。
MIPS科技公司为它的MIPS架构和微处理器核心设计提供授权。2009年，MIPS科技公司将
谷歌的Android操作系统移植到MIPS处理器架构上。从那时起，有几个设备制造商已经启动
了运行在MIPS处理器上的Android设备项目，特别是针对机顶盒、媒体播放器和平板电脑。
MIPS科技提供了Android移植的源代码以及其他些开发资源，详见hrp://www.imgtec.com/mips/
developers/mips-android.asp。
2.系统芯片制造商
系统芯片（System-on-Chip，SoC）指的是包含CPU核心、图形处理单元（GPU）、随机存
取内存（RAM）、输人输出（IO）逻辑单元等的单个芯片，它有时还会包含更多的处理器，例
如，在智能手机上使用的系统芯片很多都包含基带处理器。目前，移动通信行业的大多数系统芯
片都含有一个以上的CPU核心。将组件都集中在单一芯片上有助于降低制造成本和功耗，造就
更小更高效的设备。
如前所述，基于ARM架构的设备统治了Android设备大家庭。在ARM设备中，主要使用4
个主要的系统芯片家族：德州仪器的OMAP、英伟达的图睿（Tegra）、三星的猎户座（Exynos）
以及高通的晓龙（Snapdragon）。这些系统芯片制造商从ARM公司获得CPU核心设计的授权，
你可以从ARM的官方网站上获得其授权厂商的完整列表：http://www.arm.com/products/processors
licensees.php。除了高通，其他系统芯片制造商都直接使用了ARM的设计面没有作修改。然面高
通却付出了额外的努力来优化，以降低功耗、提升性能和改善散热。
---
## Page 25
1.2了解Android的利益相关者9
每个系统芯片都融人了不同的部件，因面需要Linux内核不同的支持。其结果是，需要在
4
Git库中单独跟踪每个系统芯片的开发版本。每棵代码树中都拥有系统芯片特有的代码，包括驱
动程序和配置。有几次，这种分离状态导致安全漏洞被引人某个系统芯片特有的内核源码库中。
这种状况正是造成Android生态圈复杂性的关键因素之一，这一点我们将在1.3节中详细讨论。
3.设备制造商
设备制造商，包括原始设计提供商（ODM）和原始设备制造商（OEM）.他们设计和制造供
消费者使用的产品。他们决定将哪些硬件和软件集成到最后的设备中，并需要照顾到所有必要的
整合。他们选择要组合在一起的硬件组件、设备外形尺寸、屏幕尺寸、设备材质、电池、摄像头、
传感器和无线电（Radio）等。通常设备制造商会与系统芯片制造商合作完成整个产品系列。大
多数选择的依据是开发具有市场差异性的新设备、针对特定客户群或建立品牌忠诚度。
在开发新产品时，设备制造商必须采用能够在新硬件上良好运行的Android平台。这个任务
包括添加新的内核设备驱动程序、专有程序和用户空间程序库。此外，OEM经常对Android进
行定制修改，特别是在Android框架层。为了遵守Android内核的GPLv2许可证，OEM被迫开
放内核源代码。然面，Android框架层是Apache2.0授权许可，它允许修改仅以二进制的形式发
布面不需发布源代码。这也是绝大多数厂商试图通过创新来让自己的产品区别于其他产品的地
方，例如，HTC和三星对用户界面（UI）的修改版本Sense和Touchwiz主要在Android框架层
实现。这些修改是一些争议的焦点，因为它们导致了Android生态圈中一些复杂的安全相关问题。
例如，定制引入了新的安全问题，你可以在1.3节中阅读到更多关于这些复杂性的讨论。
1.2.3移动通信运营商
除了提供移动语音和数据服务外，移动通信运营商还和设备制造商达成紧密的合作，为他们
的客户提供附带补贴的手机。面从运营商渠道得到的手机通常带有运营商定制的软件版本。这些
版本往往在开机画面中有运营商的Logo，预配置了APN（接人点名称）网络设置，修改了默认
的浏览器主页和浏览器书签，并预装了大量应用。绝大多数时候，这些修改会被嵌入系统分区，
因面难以移除。
除了对设备固件进行定制外，移动通信运营商也有自己的质量保证（QA）测试流程。据报
道，这些QA流程非常漫长，从而造成软件更新缓慢。我们常常看到，OEM已经修补了它自己
间。直到更新被分发到运营商设备时，这些合约机用户才可能得到更新。运营商定制的设备在上
市一段时间（通常是12~18个月）后就会停产。一些设备可能停产得更快，极少数情况下甚至在
上市之后立即停产。在停产之后，仍然使用这款设备的用户就不会再得到任何更新，无论手机是
否存在安全问题。
1.2.4开发者
作为一个开放源码的操作系统，Android是一个可以让开发者自由发挥的理想平台。谷歌的
---
## Page 26
10第1章级观Android生态圈
工程师并不是唯一为Android平台贡献代码的人。有很多个人开发者和实体以他们自己的名义为
AOSP贡献代码。向AOSP贡献的任何代码（无论是来自谷歌还是来自第三方）都必须使用相同
的代码风格，并通过谷歌的源代码审查系统Gemit。在代码审查过程中，谷歌公司的某位员工会
决定是否来纳这些修改。
在Android生态圈中，并非所有的开发者都为操作系统本身构建组件，人数最多的一类开发
者是应用开发者。他们使用Android平台提供的软件开发工具包（SDK）、框架层与API来构建
应用，使最终用户能够实现自已的目标，无论这些目标是满足生产力、娱乐或其他需求。
最终，开发者是受应用的流行度、声望和资金收益驱动的，Android生态圈中的应用商店为
开发者提供了收人分成的激励。例如，广告网络会为在应用中嵌入的广告付费。为了最大化自身
收益，应用开发者在维护声望与信誉的同时尽量让自己的应用变得流行：有了一个良好的口碑，
又可以反过来让应用日益流行。
定制ROM
与制造商对Android平台引人修改的方法相同，世界各地的爱好者社区也开发了一些定制固
件（通常被称为ROM）项目。其中最流行的Android定制固件项目是CyanogenMod，其2013年12
月的活跃装机量达到了950万。它基于Android的官方发布版本开发，并引人了一些原生和第三方
代码。这些社区修改的Android版本通常包括性能优化、界面增强、功能改进和一些配置选项，而
这些通常不会在随设备发布的官方固件中找到。遗懿的是，这些ROM往往缺少广泛深人的测试与
质量保证。此外，与OEM的情况类似，在定制ROM中的修改也可能会引人额外的安全性问题。
从历史上看，设备制造商和移动通信运营商对第三方的ROM开发往往不予支持。为了防止
用户使用定制ROM，他们设置了一些技术障碍，比如锁定引导加载程序（boot loader）或NAND
加锁。然面，定制ROM已经变得更受欢迎，因为它们能够为那些不再获得官方更新的老旧设备
提供持续支持。正因为如此，制造商和运营商已经软化了对待非官方固件的态度，随着时间的推
移，一些厂商已经开始出厂引导加载程序未加锁或者可解锁的设备，与Nexus设备类似。
1.2.5用户
如果没有庞大的用户群支持，Android就不会发展出如今繁荣的社区。虽然每个用户都有其
独特的需求和欲望，但是他们还是可以分成三类：一般消费者、高级用户和安全研究人员。
1.消费者
由于Android是最畅销的智能手机平台，终端用户可以从大量设备中挑选。消费者希望有一
个多功能设备，能够拥有个人数字助理（PDA）功能、拍照、GPS导航、上网、音乐播放、电子
书阅读等功能，以及一个完整的游戏平台。消费者通常会想提高效率，保持条理性，与生活中的
人进行联系，在外出时玩游戏，以及从互联网上获取信息。在所有的这些需求之上，他们期望能
有一个合理水平的安全性和隐私保护。
Android的开放性和灵活性对于消费者也是显面易见的。官方渠道可供选择的应用如此之多，
官方渠道以外来源的应用也不计其数，这都直接归功于开放的开发者社区。此外，消费者还可以
---
## Page 27
1.3理解生态围的复杂性11
安装第三方的启动器、主屏幕窗口小部件、新的输人法，甚至是全系统的定制ROM。这样的灵
活性和开放性常常是消费者决定从同类智能手机操作系统中选择Android的决定因素。
2.高级用户
第二类用户是一种特殊类型的消费者，本书将之称为高级用户。高级用户希望能用到设备现
有功能之外的功能，比如，希望能够在设备上启用Wi-Fi热点共享（Wi-Fitethering）的用户就属
于这一类。这些用户比较熟悉他们设备的高级设置，并知晓设备的限制。他们更容易接受对
Android 操作系统进行非官方修改造成的风险，包括运行可公开下载的漏洞利用（exploit）代码
来获取设备的root访问权限。
3.安全研究人员
你可以将安全研究人员看作高级用户的一个子集，但他们有着额外的要求与不同的目标。这
些用户可能受名声、财富、知识、开放性、保护系统或以上某几种的组合所驱动。无论动机如何、
安全研究人员的目标都是发现Android系统中的未知安全漏润。获得设备的完全控制权会使这类
研究变得容易得多，因此当设备不提供特权访问时，研究人员通常会首先寻求获得特权访问的方
法。即便有了完全访问权限，这类工作仍然是具有挑战性的。
实现安全研究人员的目标需要深厚的技术知识。要想成为一名成功的安全研究人员，需要对
编程语言、操作系统内部和安全概念有深刻的理解。大多数安全研究人员能够使用多种编程语言
开发、阅读与编写代码。在某些意义上，这也让安全研究人员成为了开发社区或员。对他们面言，
花时间深入研究安全概念，理解操作系统内部原理，以及获取技术前沿信息都是非常普遍的事情。
基础知识，也为已入门的研究人员提供深人的知识。
1.3理解生态圈的复杂性
OHA（开放手机联盟）几乎囊括了所有主要的Android厂商，但其中一些群体却有着不同甚
至相互竞争的目标。这导致制造商之间会产生各种各样的合作关系，然后带来了一些大规模的跨
组织官主义。比如说，三星的内存制造部门是世界上最大的NAND闪存制造商，大约占有40%
（）
存。另一个争议是，虽然谷歌没有直接从Android设备的销售中获利，但微软和苹果却已经成功
起诉Android手机制造商，并向他们收取专利使用费。不过，这仍不是困扰Android生态圈的复
杂性的全部。
除了法律纠纷和一些难以相处的合作关系，Android生态圈还面临着其他几个非常严重的问
题。在硬件和软件中同时存在的碎片化造成了一些复杂性，而其中只有部分问题被谷歌的兼容性
标准解决了。对于所有的生态圈利益相关者来说，更新Android操作系统仍然是一个重大的挑战。
对开源代码的强烈依赖又让软件更新问题进一步复杂化，也让已知漏润的暴露度变得更高。安全
研究社区中的成员面临着安全性和开放性之间的选择困境，而这种困境会进一步影响到其他的利
益相关者，导致了精糕的漏洞披露事件记录。以下各节将详细讨论这些问题领域。
---
## Page 28
12
第1章纵观Android生态图
1.3.1碎片化问题
大量Android设备设计上的差异导致了Android生态圈的碎片化问题严重。Android的开放性
使得它非常适合制造商基于该平台设计和制造自已的设备。结果是，设备池（即设备1.1节中的
“设备家族”）是由许多不同的制造商所制造的不同设备所组成的，每个设备又由各式各样的软硬
件组成，其中包括OEM和移动通信运营商的修改。甚至对于同一款设备面言，在不同运营商或
用户那里，Android的版本都是不同的。由于所有这些差异，消费者、开发者和安全研究人员始
终要面对并解决碎片化问题。
尽管碎片化问题对消费者的影响相对较小，但是它已经对Android的品牌造成了轻微的损害。
习惯使用三星的消费者如果改用HTC的设备，经常会遇到令人不快的体验。由于三星和HTC都
高度定制了他们设备上的用户体验，从而使得用户不得不花一些时间重新熟悉他们的新设备。这
种情况同样也出现在长期使用Nexus设备的用户换上OEM品牌设备时。随着时间的推移，消费
者可能会对这个问题感到厌倦，进而会决定改用体验更加统一的平台。不过，尽管如此，碎片化
问题的影响还是相对较小的。
比起消费者，应用开发者受碎片化问题的困扰就显得更大了。问题主要源于开发者试图支持
设备池中大部分设备（包括运行在设备上的各种软件）。对所有设备进行测试，不仅成本高昂面
且耗时。虽然模拟器有所帮助，但这并不能真实再现用户在实际使用中遇到的问题。开发者必须
处理的问题包括：不同的硬件配置、API级别、屏幕尺寸以及外设可用性等。三星的Android设
备共有超过15种屏幕尺寸，从2.6英寸到10.1英寸不等。此外，HDMI（高保真多媒体接口）软
件狗和谷歌电视设备都没有触摸屏，因此需要有专门的输人方案和用户界面（UI）设计。处理所
有这些碎片化问题并不是简单的事情，所幸谷歌为开发者提供了一些辅助工具。
通过尽力隐藏辟片化问题，开发者得以开发出在某种程度上能够良好地应用于不同设备的应
用。为了应对不同的屏幕尺寸，Android的UI框架允许应用查询设备的屏幕尺寸，如果应用设计
得当，Android还可以自动调整应用的界面元素和UI布局，使之适应这款设备。Google Play商
店也允许应用开发者在应用中声明配置要求，以便处理不同硬件配置的问题。比如，当某一应用
需要触摸屏，而当前设备又没有触摸屏时，那么在GooglePlay商店中查看这个应用时，页面上
就会显示该应用不支持这款设备，并提示不能安装。Android应用支持库也会透明地处理一些API
级别的差异。然而，尽管拥有如此多的可用资源，兼容性问题依然存在。面这些极端问题都留给
了开发者，往往会让开发者深受折磨。同样，这也会招致开发者的部弃，从面削鸦Android生态圈。
对于安全性而言，碎片化问题既有正面又有负面的影响，这主要取决于你是从攻击者还是防
守者的角度来看待这个问题。尽管攻击者可能会轻易地在一款设备上找到可利用的安全漏洞，但
是这些问题在另一家制造商的设备上可能并不存在。这使得攻击者很难找到能够影响生态圈中大
部分设备的安全缺陷。即便有人发现了这样一种安全缺陷，设备之间的差异也让漏洞利用
（exploit）代码开发变得极为复杂。在很多情况下，开发（对于所有设备上的所有Android版本都
适用的）通用漏洞利用代码是不可能的。对安全研究人员来说，一次复杂的安全审核可能不仅需
要对所有设备进行审查，还需要分析这些设备的每一个软件版本。显然这是一个难以完成的任务。
---
## Page 29
1.3理解生态圈的复杂性13
如果专注于某一款设备，虽然更容易实施攻击，但不足以影响到整个生态圈。在一个设备上存在
的攻击面，可能在另一设备上就根本不存在。另外，有些组件更加难以进行安全审核，比如某些
设备上存在的特有闭源软件。由于存在这些挑战，碎片化问题让安全审核师的工作更加困难，同
时也有助于防止大规模安全事故的发生。
1.3.2兼容性
设备制造商面临的一个复杂性问题就是兼容性。作为Android的创始者，谷歌负责保护
Android品牌。其中包括防止碎片化，并确保消费者的设备符合谷歌的愿景。为确保设备制造商
遵守由谷歌设置的软硬件兼容性要求，谷歌公司发布了兼容性文档和测试套件。任何制造商要想
在Android品牌下制造设备，就必须遵循这些指导原则。
1.兼容性定义文档
Android的兼客性定义文格（CDD）详见htp:/source.android.com/compatibilityf，其中列举了
Android“兼容”设备的软硬件要求。对于其中的有些硬件，所有的Android设备都必须采用。例
如，Android4.2的CDD指定，所有的设备实现中都必须包括至少一种音频输出形式，以及一种
或多种数据传输速率在200kbit/s或更高的网络连接、面具体采用哪些外设则由设备制造商来决
定。如果某些外设被包括在内，CDD还指明了一些额外的要求。例如，如果设备制造商决定添
加一个后置摄像头，那么这个摄像头的分辨率不得低于200万像素。设备必须满足CDD的要求
才能戴上Android这顶“相子”，并要在出厂前预装上谷歌的应用和服务。
2.兼容性测试套件
Android兼容性测试套件（CTS）是一款自动化测试工具，该工具从台式机到连接的移动设
备执行单元测试。CTS测试将集成到一种持续的构建系统中，工程师将用这种构建系统来构建为