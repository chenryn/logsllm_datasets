### Describe the bug
I want to extract enums from model schema to separate definition, and the
solution is:
    from enum import Enum
    from pydantic import BaseModel
    from devtools import debug
    class HelloType(str, Enum):
        World = 'World',
        Friend = 'Friend',
    class HelloEnum(BaseModel):
        __root__: HelloType
    class Foo(BaseModel):
        bar: HelloEnum
    debug(HelloEnum.schema())
    debug(Foo.schema())
Output:
    ./main.py 
        HelloEnum.schema(): {
            'title': 'HelloEnum',
            'enum': [
                'World',
                'Friend',
            ],
            'type': 'string',
        } (dict) len=3
    ./main.py 
        Foo.schema(): {
            'title': 'Foo',
            'type': 'object',
            'properties': {
                'bar': {
                    '$ref': '#/definitions/HelloEnum',
                },
            },
            'required': ['bar'],
            'definitions': {
                'HelloEnum': {
                    'title': 'HelloEnum',
                    'enum': [
                        'World',
                        'Friend',
                    ],
                    'type': 'string',
                },
            },
        } (dict) len=5
But I can't use `HelloEnum` in Query parameters:
    @app.get('/')
    async def root(hello_type: HelloEnum = Query(...)):
        return {'message': f'Hello {hello_type}'}
And I get the error:
    File "./main.py", line 28, in 
        async def root(hello_type: HelloEnum = Query(...)):
      File "/python3.8/site-packages/fastapi/routing.py", line 514, in decorator
        self.add_api_route(
      File "/python3.8/site-packages/fastapi/routing.py", line 453, in add_api_route
        route = route_class(
      File "/python3.8/site-packages/fastapi/routing.py", line 370, in __init__
        self.dependant = get_dependant(path=self.path_format, call=self.endpoint)
      File "/python3.8/site-packages/fastapi/dependencies/utils.py", line 308, in get_dependant
        assert isinstance(
    AssertionError: Param: hello_type can only be a request body, using Body(...)
### To Reproduce
  1. Create a file with:
    from enum import Enum
    from fastapi import FastAPI, Query
    from pydantic import BaseModel
    app = FastAPI()
    class HelloType(str, Enum):
        World = 'World',
        Friend = 'Friend',
    class HelloEnum(BaseModel):
        __root__: HelloType
    @app.get('/')
    async def root(hello_type: HelloEnum = Query(...)):
        return {'message': f'Hello {hello_type}'}
  3. Run app.
  4. It trows an exception `AssertionError: Param: hello_type can only be a request body, using Body(...)`.
  5. But I expected it to run successfully.
### Expected behavior
Run app successfully, and in openapi schema enum extracted in the separate
definition.
### Environment
  * macOS 10.15.4
  * FastAPI 0.54.2
  * Python 3.8.2