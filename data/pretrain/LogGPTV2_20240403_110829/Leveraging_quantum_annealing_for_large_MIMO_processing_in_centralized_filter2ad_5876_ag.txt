(cid:13)(cid:13)(cid:13)(cid:13)2
(cid:13)(cid:13)(cid:13)(cid:13)y1 − h11v1 − h12v2
(cid:21)(cid:13)(cid:13)(cid:13)(cid:13)2
(cid:13)(cid:13)(cid:13)(cid:13)2
(cid:13)(cid:13)(cid:13)(cid:13)(yI ,1 − hI ,11v1 − hI ,12v2) + j(yQ,1 − hQ,11v1 − hQ,12v2)
y2 − h21v1 − h22v2
(yI ,2 − hI ,21v1 − hI ,22v2) + j(yQ,2 − hQ,21v1 − hQ,22v2)
= {(yI ,1 − hI ,11v1 − hI ,12v2)}2 + {(yQ,1 − hQ,11v1 − hQ,12v2)}2
+{(yI ,2 − hI ,21v1 − hI ,22v2)}2 + {(yQ,2 − hQ,21v1 − hQ,22v2)}2
The norm expansion in Eq. 1 can be expressed as
(cid:13)(cid:13)(cid:13)(cid:13)(cid:20)y1
∥y − Hv∥2 =
In the case of BPSK, symbol vi ∈ {−1, 1} is represented by a
QUBO variable qi. One possible transform is 2qi − 1 where qi = 0
corresponds to vi = −1 and qi = 1 to vi = 1. This leads to v =
[v1, v2]⊺ = [T(q1), T(q2)]⊺, where T(q1) = 2q1 − 1 and T(q2) =
2q2 − 1. Using these relationships, we can express the above norm
as
h12
h22
h21
v2
−
y2
=
=
.
(cid:20)h11
(cid:21)
(cid:13)(cid:13)(cid:13)(cid:13)(cid:20)y1
y2
(cid:21)(cid:20)T(q1)
(cid:21)(cid:13)(cid:13)(cid:13)(cid:13)2
−
h21
h12
h22
T(q2)
∥y − Hv∥2 =
= {(yI ,1 − hI ,11(2q1 − 1) − hI ,12(2q2 − 1))}2
+{(yQ,1 − hQ,11(2q1 − 1) − hQ,12(2q2 − 1))}2
+{(yI ,2 − hI ,21(2q1 − 1) − hI ,22(2q2 − 1))}2
+{(yQ,2 − hQ,21(2q1 − 1) − hQ,22(2q2 − 1))}2
.
Then we obtain the objective function of ML problem with QUBO
= qi, minimization of this objective function
variables. Using q
becomes the QUBO form (Eq. 3):
2
i
ˆq1, ˆq2 = arg min
q1,q2
Q11q1 + Q22q2 + Q12q1q2, where
Q11 = −4hI ,11yI ,1 − 4hI ,21yI ,2 − 4hQ,11yQ,1 − 4hQ,21yQ,2
−4hI ,11hI ,12 − 4hI ,21hI ,22 − 4hQ,11hQ,12 − 4hQ,21hQ,22,
Q22 = −4hI ,12yI ,1 − 4hI ,22yI ,2 − 4hQ,12yQ,1 − 4hQ,22yQ,2
−4hI ,12hI ,12 − 4hI ,22hI ,22 − 4hQ,12hQ,12 − 4hQ,22hQ,22,
Q12 = 8hI ,11hI ,12 + 8hI ,21hI ,22 + 8hQ,11hQ,12 + 8hQ,21hQ,22 .
Leveraging Quantum Annealing for Large MIMO Processing in
Centralized Radio Access Networks
B EMBEDDED ISING
Embedding maps the Ising problem to an equivalent one that has
the same ground state, but also satisfies Chimera graph constraints.
The QuAMax compiled objective function is:
sicsi(c +1)
i =1
⌈N/4⌉
− N
⌈N/4⌉+1
|JF |(cid:16)⌈ N4 ⌉ + 1(cid:17)(cid:170)(cid:174)(cid:174)(cid:172)

N
c =1
c =1
fi
gij
|JF |
+
i, j=1
(ci,cj)∈δi j
sic
sici sjcj
N
i =1
(cid:169)(cid:173)(cid:173)(cid:171)
+
(10)
(11)
(12)
where the original logical variables si are now associated to a chain
i of c = 1 . . . (⌈N/4⌉ + 1) qubits, indexed with new spins sic. |JF |
penalizes the condition that sic (cid:44) sic′, i.e., enforces that all qubits
in the chain assume the same value (±1). This enforcement is more
likely to happen for large values of |JF |, however the maximum
negative energy value is set to −1 by hardware design. In (11)
and (12), |JF | effectively renormalizes all terms in the objective
function by the factor |JF |−1. The linear term value fi is additionally
divided by the number of qubits in a chain (⌈N/4⌉ + 1). The term in
(12) shows that the duplication of variables ensures the existence
of a pair of qubits in the chains such that a physical coupler in
the Chimera graph exists (δij is the set of pairs of qubits that are
connected by a physical bond once the chains i and j are specified).
C 16-QAM ISING MODEL PARAMETERS
Following are the Ising parameters fi for 16-QAM:
case i = 4n − 2 :
case i = 4n − 3 :
−4(cid:16)
−2(cid:16)
−4(cid:16)
−2(cid:16)
HI(:,⌈i/4⌉) · yI(cid:17) − 4(cid:16)
HQ(:,⌈i/4⌉) · yQ(cid:17)
HI(:,⌈i/4⌉) · yI(cid:17) − 2(cid:16)
HQ(:,⌈i/4⌉) · yQ(cid:17)
+ 4(cid:16)
HI(:,⌈i/4⌉) · yQ(cid:17)
HQ(:,⌈i/4⌉) · yI(cid:17)
HI(:,⌈i/4⌉) · yQ(cid:17)
+ 2(cid:16)
HQ(:,⌈i/4⌉) · yI(cid:17)
case i = 4n − 1 :
case i = 4n :
(13)
,
,
,
.
fi(H, y) =
Since real and imaginary terms of each symbol are independent,
the coupler strength between s4n−3, s4n−2 and s4n−1, s4n is 0. For
other si and sj, the Ising coupler strength дij for 16-QAM is:
SIGCOMM ’19, August 19–23, 2019, Beijing, China
,
,
,
,
дi j(H) =
8(cid:16)
4(cid:16)
−8(cid:16)
−4(cid:16)
4(cid:16)
2(cid:16)
−4(cid:16)
−2(cid:16)
8(cid:16)
4(cid:16)
8(cid:16)
4(cid:16)
4(cid:16)
2(cid:16)
4(cid:16)
2(cid:16)
case j = 4n′ :
(cid:17)
case i = 4n − 3 :
case j = 4n′ − 3 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
(cid:17)
case j = 4n′ − 2 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
case j = 4n′ − 1 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
(cid:17)
case i = 4n − 2 :
case j = 4n′ − 3 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
(cid:17)
case j = 4n′ − 2 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
case j = 4n′ − 1 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
case j = 4n′ :
case i = 4n − 1 :
case j = 4n′ − 3 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
case j = 4n′ − 2 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
case j = 4n′ − 1 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
case j = 4n′ :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
case i = 4n :
case j = 4n′ − 3 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
case j = 4n′ − 2 :
HI(:,⌈i/4⌉) · HQ(:,⌈j/4⌉)
case j = 4n′ − 1 :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
case j = 4n′ :
HI(:,⌈i/4⌉) · HI(:,⌈j/4⌉)
+ 8(cid:16)
+ 4(cid:16)
(cid:17)
+ 8(cid:16)
(cid:17)
+ 4(cid:16)
+ 4(cid:16)
+ 2(cid:16)
+ 4(cid:16)
(cid:17)
(cid:17)
+ 2(cid:16)
(cid:17) − 8(cid:16)
(cid:17) − 4(cid:16)
(cid:17)
+ 8(cid:16)
(cid:17)
+ 4(cid:16)
(cid:17) − 4(cid:16)
(cid:17) − 4(cid:16)
(cid:17)
+ 4(cid:16)
+ 2(cid:16)
(cid:17)
(cid:17)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
(cid:17)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
(cid:17)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
(cid:17)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
(cid:17)
(cid:17)
(cid:17)
(cid:17)
(cid:17)
(cid:17)
(cid:17)
(cid:17)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HI(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
HQ(:,⌈j/4⌉) · HQ(:,⌈i/4⌉)
,
,
(cid:17)
(cid:17)
,
,
(cid:17)
(cid:17)
,
,
,
,
,
,
,
.
(14)