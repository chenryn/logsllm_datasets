    ``` literallayout
    # podman image trust set -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release registry.access.redhat.com
    ```
2.  Optional.要验证信任策略配置，请显示
    `/etc/containers/policy.json`{.literal} 文件：
    ``` literallayout
    ...
    "transports": {
      "docker": {
          "registry.access.redhat.com": [
           {
             "type": "signedBy",
             "keyType": "GPGKeys",
             "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
           }
         ]
    },
    ...
    ```
3.  更新 registry.redhat.io 的现有信任范围：
    ``` literallayout
    # podman image trust set -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release registry.redhat.io
    ```
4.  Optional.要验证信任策略配置，请显示
    `/etc/containers/policy.json`{.literal} 文件：
    ``` literallayout
    ...
    "transports": {
     "docker": {
          "registry.access.redhat.com": [
          {
            "type": "signedBy",
            "keyType": "GPGKeys",
            "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
          }
        ],
         "registry.redhat.io": [
         {
            "type": "signedBy",
            "keyType": "GPGKeys",
            "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
         }
       ]
    },
    ...
    ```
:::
::: itemizedlist
**其他资源**
-   `podman-image-trust`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_removing-images_assembly_working-with-container-images}删除镜像 {.title}
:::
使用 `podman rmi`{.literal} 命令来移除本地存储的容器镜像。您可以通过其
ID 或名称来删除镜像。
::: orderedlist
**流程**
1.  列出本地系统上的所有镜像：
    ``` literallayout
    $ podman images
    REPOSITORY                           TAG     IMAGE ID      CREATED      SIZE
    registry.redhat.io/rhel8/rsyslog     latest  4b32d14201de  7 weeks ago  228 MB
    registry.redhat.io/ubi8/ubi          latest  3269c37eae33  7 weeks ago  208 MB
    localhost/myubi                      X.Y     3269c37eae33  7 weeks ago  208 MB
    ```
2.  列出所有容器：
    ``` literallayout
    $ podman ps -a
    CONTAINER ID  IMAGE                                    COMMAND          CREATED        STATUS            PORTS   NAMES
    7ccd6001166e  registry.redhat.io/rhel8/rsyslog:latest  /bin/rsyslog.sh  6 seconds ago  Up 5 seconds ago          mysyslog
    ```
    要删除 `registry.redhat.io/rhel8/rsyslog`{.literal} 镜像，您必须使用
    `podman stop`{.literal} 命令停止运行此镜像的所有容器。您可以通过其
    ID 或名称来停止容器。
3.  停止 `mysyslog`{.literal} 容器：
    ``` literallayout
    $ podman stop mysyslog
    7ccd6001166e9720c47fbeb077e0afd0bb635e74a1b0ede3fd34d09eaf5a52e9
    ```
4.  删除 `registry.redhat.io/rhel8/rsyslog`{.literal} 镜像：
    ``` literallayout
    $ podman rmi registry.redhat.io/rhel8/rsyslog
    ```
    ::: itemizedlist
    -   要删除多个镜像：
        ``` literallayout
        $ podman rmi registry.redhat.io/rhel8/rsyslog registry.redhat.io/ubi8/ubi
        ```
    -   要从您的系统中删除所有镜像：
        ``` screen
        $ podman rmi -a
        ```
    -   要删除与其有多个名称（标记）关联的镜像，请添加 `-f`{.literal}
        选项来删除它们：
        ``` literallayout
        $ podman rmi -f 1de7d7b3f531
        1de7d7b3f531...
        ```
    :::
:::
:::
:::
[]{#assembly_working-with-containers_building-running-and-managing-containers.html}
::: chapter
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#assembly_working-with-containers_building-running-and-managing-containers}第 4 章 操作容器 {.title}
:::
容器代表从解压缩的容器镜像中的文件创建的一个正在运行中或已停止的进程。您可以使用
Podman 工具来操作容器。
::: section
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#con_podman-run-command_assembly_working-with-containers}podman run 命令 {.title}
:::
`podman run`{.literal}
命令在基于容器镜像的新容器中运行一个进程。如果容器镜像尚未加载，则在从该镜像启动容器前，`podman run`{.literal}
会以与
`podman pull image`{.literal}相同的方式从存储库中拉取镜像和所有镜像的依赖项。容器进程具有自己的文件系统、自己的网络，以及它自己的隔离进程树。
`podman run`{.literal} 命令的格式如下：
``` screen
podman run [options] image [command [arg ...]]
```
基本选项为：
::: itemizedlist
-   `--detach(-d)`{.literal} ：在后台运行容器，并打印新容器 ID。
-   `--attach(-a)`{.literal}:在前台模式运行容器。
-   `--name(-n)`{.literal} ：为容器分配一个名称。如果没有使用
    `--name`{.literal}
    为容器分配名称，则它会生成一个随机字符串名称。这适用于后台和前台容器。
-   `--rm`{.literal}:在容器退出时自动移除容器。请注意，当容器无法成功创建或启动时，不能删除容器。
-   `--tty(-t)`{.literal} ：将伪终端分配给容器的标准输入信息。
-   `--interactive(-i)`{.literal} ：对于交互式进程，请使用
    `-i`{.literal} 和 `-t`{.literal}
    为容器进程分配终端。`-i -t`{.literal} 通常写为 `-it`{.literal}。
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#proc_running-commands-in-a-container-from-the-host_assembly_working-with-containers}在主机的容器中运行命令 {.title}
:::
此流程演示了如何使用 `podman run`{.literal}
命令显示容器的操作系统的类型。
::: itemizedlist
**先决条件**
-   Podman 工具已安装。
    ``` literallayout
    #  dnf module install -y container-tools
    ```
:::
::: orderedlist
**流程**
1.  使用 `cat /etc/os-release`{.literal} 命令，显示基于
    `registry.access.redhat.com/ubi8/ubi`{.literal}
    容器镜像的容器的操作系统的类型：
    ``` literallayout
    $ podman run --rm registry.access.redhat.com/ubi8/ubi cat /etc/os-release
    NAME="Red Hat Enterprise Linux"
    VERSION="8.2 (Ootpa)"
    ID="rhel"
    ID_LIKE="fedora"
    VERSION_ID="8.2"
    PLATFORM_ID="platform:el8"
    PRETTY_NAME="Red Hat Enterprise Linux 8.2 (Ootpa)"
    ANSI_COLOR="0;31"
    CPE_NAME="cpe:/o:redhat:enterprise_linux:8.2:GA"
    HOME_URL="https://www.redhat.com/"
    BUG_REPORT_URL="https://bugzilla.redhat.com/"
    REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 8"
    REDHAT_BUGZILLA_PRODUCT_VERSION=8.2
    REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux"
    REDHAT_SUPPORT_PRODUCT_VERSION="8.2"
    ```
2.  可选：列出所有容器。
    ``` literallayout
    $ podman ps
    CONTAINER ID  IMAGE   COMMAND  CREATED  STATUS  PORTS   NAMES
    ```
    由于 `--rm`{.literal} 选项，您应该看不到任何容器。容器已被删除。
:::
::: itemizedlist
**其他资源**
-   `man podman-run`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#proc_running-commands-inside-the-container_assembly_working-with-containers}在容器内运行命令 {.title}
:::
此流程演示了如何使用 `podman run`{.literal} 命令以交互方式运行容器。
::: itemizedlist
**先决条件**
-   Podman 工具已安装。
    ``` literallayout
    #  dnf module install -y container-tools
    ```
:::
::: orderedlist
**流程**
1.  运行基于 `registry.redhat.io/ubi8/ubi`{.literal} 镜像的名为
    `myubi`{.literal} 的容器：
    ``` literallayout
    $ podman run --name=myubi -it registry.access.redhat.com/ubi8/ubi /bin/bash
    [root@6ccffd0f6421 /]#
    ```
    ::: itemizedlist
    -   `-i`{.literal} 选项创建一个交互式会话。如果不使用 `-t`{.literal}
        选项，shell 将保持打开状态，但您无法对 shell 输入任何东西。
    -   `-t`{.literal} 选项打开一个终端会话。如果不使用 `-i`{.literal}
        选项，shell 会打开，然后退出。
    :::
2.  安装 `procps-ng`{.literal} 软件包，其包含一组系统工具（如
    `ps`{.literal}、`top`{.literal} 和 `uptime`{.literal} ，等等）：
    ``` literallayout
    [root@6ccffd0f6421 /]# dnf install procps-ng
    ```
3.  使用 `ps -ef`{.literal} 命令列出当前的进程：
    ``` literallayout
    # ps -ef
    UID          PID    PPID  C STIME TTY          TIME CMD
    root           1       0  0 12:55 pts/0    00:00:00 /bin/bash
    root          31       1  0 13:07 pts/0    00:00:00 ps -ef
    ```
4.  输入 `exit`{.literal} 退出容器并返回到主机：
    ``` screen
    # exit
    ```
5.  可选：列出所有容器：
    ``` literallayout
    $ podman ps
    CONTAINER ID  IMAGE                               COMMAND    CREATED         STATUS                     PORTS   NAMES
    1984555a2c27  registry.redhat.io/ubi8/ubi:latest  /bin/bash  21 minutes ago  Exited (0) 21 minutes ago          myubi
    ```
    您可以看到容器处于 Exited 状态。
:::
::: itemizedlist
**其他资源**
-   `man podman-run`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#proc_listing-containers_assembly_working-with-containers}列出容器 {.title}
:::
使用 `podman ps`{.literal} 命令列出系统上正在运行的容器。
::: itemizedlist
**先决条件**
-   Podman 工具已安装。
    ``` literallayout
    #  dnf module install -y container-tools
    ```
:::
::: orderedlist
**流程**
1.  运行基于 `registry.redhat.io/rhel8/rsyslog`{.literal} 镜像的容器：
    ``` literallayout
    $ podman run -d registry.redhat.io/rhel8/rsyslog
    ```
2.  列出所有容器：
    ::: itemizedlist
    -   要列出所有正在运行的容器：
        ``` literallayout
        $ podman ps
        CONTAINER ID IMAGE              COMMAND         CREATED       STATUS            PORTS NAMES
        74b1da000a11 rhel8/rsyslog /bin/rsyslog.sh 2 minutes ago Up About a minute       musing_brown
        ```
    -   要列出所有运行或停止的容器：
        ``` literallayout
        $ podman ps -a
        CONTAINER ID IMAGE         COMMAND    CREATED    STATUS                PORTS NAMES     IS INFRA
        d65aecc325a4 ubi8/ubi      /bin/bash  3 secs ago Exited (0) 5 secs ago peaceful_hopper false
        74b1da000a11 rhel8/rsyslog rsyslog.sh 2 mins ago Up About a minute     musing_brown    false
        ```
    :::
:::
如果有容器没有运行，但没有被删除（`--rm`{.literal}
选项），则容器存在并且可以重新启动。
::: itemizedlist
**其他资源**
-   `man podman-ps`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-containers_building-running-and-managing-containers.html#proc_starting-containers_assembly_working-with-containers}启动容器 {.title}
:::
如果您运行容器，然后停止它，且未将其删除，则容器会存储在本地系统上，准备再次运行。您可以使用