be constructe
rofiles. Figurin
cience, and a 
12. TCP timing
y due to many 
ockets for per
an be used as a
ces gaining 
s focusing on 
erve to lessen
aple of the ol
if not more s
luxury of sim
ment, this desig
mance check. 
n, rate limitin
herwise, can b
the rate of att
than compens
meters as show
cuted. The nu
efore first re
er, through se
ed. Many pro
ng out the rig
lot of trial and
g controls 
DDoS attack
rformance rea
a factor differ
overwhelming
the HTTP lay
n the need for
ld time. The m
o, then their o
mply using th
gn approach h
ng mechanism
be defeated via
tack traffics to
sated with the 
wn in Figure 
umber of con
quest, conne
etting them to
otection system
ght set of para
d errors. 
k tools were w
ason, resultin
rentiating atta
g dominance 
yer. Smarter a
r super high-
modern day a
old-school cou
he standard O
has an added 
ms, be they tim
a careful asse
o stay just belo
use of large b
12 so that 
nnections, 
ction idle 
o different 
ms can be 
ameters is, 
written in a 
ng in non-
ck traffics 
over the 
attacks and 
-efficiency 
application 
unterparts. 
OS TCP/IP 
benefit of 
me-based, 
essment of 
ow it. The 
botnets. 
4.5 
HT
“Kill ‘em
to offer v
with shor
In orde
attributes
“Kill ‘
targeted a
construct
comma a
5 
Pe
Tests wer
1. A
2. N
as well as
3. C
4. A
We are
market, w
deployed
5.1 
Te
Tests we
attack wo
under tes
TTP Traffic 
m All” also pro
various attack
rt requests inte
er to avoid be
s as User-Agen
‘em All” allow
attacks. For in
ted with a cust
s delimiter>”.
erformance T
re conducted a
Arbor Peakflo
NSFocus Ant
s cloud servic
Cloudflare, an
Akamai. 
e convinced t
with the forme
d in most every
esting Metho
ere conducted
orkstation was
t. For cloud s
Model 
ovides tunabl
k vector. For e
erval would yi
Figure 1
ing fingerprin
nt strings and 
w allows for t
nstance, CVE
tom header se
. 
Testing 
against produc
ow SP Threat 
i-DDoS Syste
es: 
nd 
that Arbor TM
er most preva
y publicly liste
dology 
d against prod
s connected to
ervice testing
e HTTP traffi
example, large
ield a GET flo
3. HTTP timing
nted, we have 
packet sizes.
the constructi
-2011-3192 A
etting of “Ran
cts: 
Management 
em (ADS) ver
MS and NSFo
alent among F
ed company in
ducts and clo
o a web site t
g a web site w
fic parameters 
e number of r
ood DDoS atta
g controls 
implemented 
on of certain 
Apache Range
ge: bytes=<lo
System (TMS
sion 4.5.88.2.
cus ADS repr
Fortune 500 en
n mainland Ch
ud services. 
through the D
was placed und
as shown in 
requests per c
ack. 
randomizatio
web server or
e Header expl
ong list of num
S) version 5.7
026 
resent a major
nterprises and
hina. 
For product t
DDoS mitigati
der the protect
Figure 13 
connection 
on for such 
r web app 
loit can be 
mbers with 
, and 
rity of the 
d the latter 
testing an 
ion device 
tion of the 
service under test, and then subjected to attacks from a workstation directing attacks 
towards it through the internet. 
In order to simulate normal short-term browsing conditions, in all tests a single 
TCP connection was used to carry a multitude of HTTP requests and responses. 
Under this vigorous arrangement not a single attack identification mechanism can be 
triggered lest the entire connection gets blocked. 
During testing, attack traffic was sent to the backend at which point received traffic 
was compared against the original generated traffic. Bypass was considered 
successful if all attack traffic passed through intact. 
5.2 
Testing Results 
Attacks with bypass capability were applied against individual detection techniques as 
implemented on the aforementioned products and services. During the attack, 
effectiveness of the attacks was evaluated and observations were recorded as shown 
in Table 1 below. A “” means the bypass was successful with no mitigation activity 
observed. 
Detection 
Techniques 
Arbor Peakflow 
SP TMS 
NSFocus 
ADS 
Cloudflare 
Akamai 
Rate Measurement / 
Baseline 
Enforcement 
(Zombie Removal, 
Baseline Enforcement, 
Traffic Shaping, 
Rate Limiting)
N/A
N/A
Protocol Sanity & 
Behavior Checking 
(HTTP 
Countermeasures)
N/A
N/A
Proactive 
Housekeeping 
(TCP Connection Reset) 
N/A
N/A
Big Data Analysis 
(GeoIP Policing)
— 
(Not implemented 
in ADS)
N/A
N/A
Malicious Source 
Intelligence 
(Black White List, 
IP Address Filter List, 
Global Exception List, 
GeoIP Filter List) 
— 
(Not implemented 
in ADS)
N/A
N/A
Protocol Pattern 
Matching 
(URL/DNS Filter List, 
Payload Regex)
N/A
N/A
Source Host 
Verification 
TCP SYN 
Authentication 
N/A
N/A 
HTTP Redirect 
Authentication 
N/A 
HTTP Cookie 
Authentication 
N/A 
JavaScript 
Authentication 
— 
 (Not implemented) 
in TMS)
N/A 
CAPTCHA 
Authentication 
— 
(Not implemented 
in TMS)
N/A 
Table 1. Mitigation bypass testing results. 
With reference to Arbor Network’s A Guide for Peakflow® SP TMS Deployment1, 
against TMSwe were able to defeat all documented or otherwise active detection 
techniques relevant to HTTP DDoS attacks, passing through the TMS unscathed. 
Attacks against NSFocus ADS2 were met with remarkable success despite the 
presence of heavy-handed defenses including CAPTCHA Authentication — we were 
able to achieve a remarkable 50% success rate solving ADS’s CAPTCHA 
implementation with our OCR algorithms. Due to the shotgun approach to attack, and 
that getting whitelisted is a big win for the attacker, a 50% success rate for solving 
CAPTCHA is much more impressive than it may appear at first glance. 
Cloudflare essentially employs JavaScript that implements all JavaScript, Cookie 
and Redirect Authentications in one. We were successful in defeating them all and 
pushing attack traffic to the backend. Even though Cloudflare does support 
CAPTCHA Authentication, we observed that its use is not particularly prevalent in 
the wild, and for the purpose of our PoC since we have already demonstrated a 
workable solution against CAPTCHA for ADS, we have opted not to repeat this for 
Cloudflare. 
Akamai has implemented source host verification techniques in its security 
solutions for a few months now, with which according to marketing brochure [7] 
visitors will be redirected to a JavaScript confirmation page when traffic is identified 
as potentially malicious. However, despite our best effort sending big traffic to our 
testing site bearing random HTTP query strings (in order to thwart caching) we have 
been unable to trigger that feature. Whereas we cannot rule out the remote possibility 
that our test traffic was way below detection threshold, a much more plausible reason 
might be that our traffic was indistinguishable from that generated by a real browser. 
1
 http://www.arbornetworks.com/component/docman/doc_download/301-threat-management-
system-a-technical-overview?Itemid=442 
2
http://www.nsfocus.com/jp/uploadfile/Product/ADS/White%20Paper/NSFOCUS%20ADS%
20White% 20Paper.pdf 
6 
Discussions and Next Generation Mitigation 
In this era of blended attacks, detection methods designed to pick out bad traffics are 
rendered fundamentally ineffective. The reason why today to a certain extent they still 
work is mainly due to implementation immaturity (e.g. the lack of ready-to-use 
JavaScript engine with a workable DOM). Obviously these hurdles can be easily 
overcome given a little more time and development resources, as our research 
demonstrated. 
A notable exception is the use of CAPTCHA. Despite the fact that we have also 
demonstrated defeating certain CAPTCHA implementations in use on security 
products, and that there have been promising results from fellow researches [8] as 
well, admittedly CAPTCHA still represent the pinnacle of source host verification 
technique. However, CAPTCHA is necessarily a heavy-handed approach that 
materially diminishes the usability and accessibility of protected web sites. 
Specifically, automated queries and Web 2.0 mashing are made impossible. This 
shortcoming significantly reduces the scope of its application. It is therefore not 
surprising that CAPTCHA is often default off in security service offerings. 
6.1 
Next Generation Mitigation 
Seeing as that the underlying issue with a majority of DDoS attacks these days is their 
amplification property, which tips the cost-effectiveness balance to the attackers’ 
favor, we are convinced that a control mechanism based on asymmetric client puzzle 
is the solution, as it presents a general approach that attacks directly this imbalance 
property, making it a lot more expensive to execute DDoS attacks. Prior researches 
include the seminal Princeton-RSA paper [9] and [10]. 
7 
Acknowledgement 
This research was made possible only with data and testing resources graciously 
sponsored by Nexusguard Limited3 for the advancement of the art. 
References 
[1]  M. Prince, "The DDoS that Knocked Spamhaus Offline (And How We Mitigated 
it)," 20 March 2013. [Online]. Available: http://blog.cloudflare.com/the-
ddos-that-knocked-spamhaus-offline-and-ho.
[2]  T. T. N. Miu, A. K. T. Hui, W. L. Lee, D. X. P. Luo, A. K. L. Chung and J. W. 
S. Wong, "Universal DDoS Mitigation Bypass," in Black Hat USA, Las 
Vegas, 2013.  
3 http://www.nexusguard.com/ 
[3]  C. Weinschenk, "Attacks Go Low and Slow," IT Business Edge, 3 August 2007. 
[Online]. 
Available: 
http://www.itbusinessedge.com/cm/community/features/interviews/blog
/attacks-go-low-and-slow/?cs=22594. 
[4]  R. Hansen, "Slowloris HTTP DoS," 7 June 2009. [Online]. Available: 
http://ckers.org/slowloris/. 
[5]  Carnegie Mellon University, "CERT® Advisory CA-1998-01 Smurf IP Denial-
of-Service 
Attacks," 
5 
January 
1988. 
[Online]. 
Available: 
http://www.cert.org/advisories/CA-1998-01.html. 
[6]  J. Breeden II, "Hackers' New Super Weapon Adds Firepower to DDOS," GCN, 
24 
October 
2012. 
[Online]. 
Available: 
http://gcn.com/articles/2012/10/24/hackers-new-super-weapon-adds-
firepower-to-ddos.aspx.
[7]  Akamai, "Akamai Raises the Bar for Web Security with Enhancements to Kona 
Site 
Defender," 
25 
February 
2013. 
[Online]. 
Available: 
http://www.akamai.com/html/about/press/releases/2013/press_022513.h
tml. 
[8]  DC949, "Stiltwalker: Nucaptcha, Paypal, SecurImage, Slashdot, Davids Summer 
Communication," 
26 
July 
2012. 
[Online]. 
Available: 
http://www.dc949.org/projects/stiltwalker/. 
[9]  B. Waters, A. Juels, J. A. Halderman and W. F. Edward, "New Client Puzzle 
Outsourcing Techniques for DoS Resistance," in ACM Conference on 
Computer and Communications Security (CCS), 2004, 2004. 
[10] D. Stebila, L. Kuppusamy, J. Rangasamy and C. Boyd, "Stronger Difficulty 
Notions for Client Puzzles and Denial-of-Service-Resistent Protocols," 
in RSA Conference, 2011.  
[11] T. Miu, A. Lai, A. Chung and K. Wong, "DDoS Black and White "Kungfu" 
Revealed," in DEF CON 20, Las Vegas, 2012.  
[12] R. Kenig, "How Much Can a DDoS Attack Cost Your Business?," 14 May 2013. 
[Online]. 
Available: 
http://blog.radware.com/security/2013/05/how-
much-can-a-ddos-attack-cost-your-business/.