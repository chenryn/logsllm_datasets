n
the
DI
pubD
w
with
X.h
html,
a
the
adDI
page
site
for
recei
dicator www.S.com receives a request for the resource
dicator
resource
.www
aesv
.S.com
γ.gif?ref=www.S.com%3fad%3dhIDadi%26pub%3dhIDpubi
ibpuDIh
.S.com%3ffad%3d
ad%3d
.gif?ref=www
w
γ
(the value of the ref querystring variable in this resource
tof
the
(the
resource
alue
v
ref
querystr
e
referrer
the
or
,
request
is
X.html
request is the referrer, or page that triggered X.html
encoded
so
to
URL).
utb
load,
to load, but encoded so it can appear in the URL).
aesv
h
recei
he
ess
ence,
In
.gif,
In essence, he receives a request for an image γ.gif,
γ
con-
vid
one
ded
is
pro
and
and is provided one querystring-style parameter con-
IDs
the
of
I
taining
.
publisher
taining the IDs of the advertisement and publisher.
ysevconnv
This
data
string
This string conveys the full desired coupon data
C = (γ, IDpub, IDad).
.)adDI,ub
puDI,γ(=C
t
request
the
iadDIh
b%3d
%26pub%3d
t
ing
in
ariable
this
v
page
tr
igge
ered
that
in
appear
n
can
it
the
i
image
an
request
para
ameter
d
and
co
oupon
for
querystring-style
ertisement
the
full
desired
adv
the
is
vJa
where
approach
aScript
is
cookie,
created
Remark:
Remark:
di
isabled
In
n
aby
cases
In cases where JavaScript is disabled by a
att
ev
possible.
ernati
an
client,
estor
alte
An
client, an alternative approach is possible. An attestor
ray
of
cache
arr
an
utb
no
create
can
cache
ot
can create not one cache cookie, but an array of cache
one
in
ndependently
v
alues
on
cookies
cookies on independently created values γ(0)
)(0
1 , . . . , γ(0)
)(0γ,...,1
1γ
k
k
. To encode an k-bit publisher value
-bit
kan
and γ(1)
and
blisher
alue
.
pub
encode
v
1 , . . . , γ(1)
)(1γ,
)(1γ
,...,1
IDpub = b1 k . . . k bk, the publisher releases cache
,kbk...k
cache
publisher
the
rel
leases
1b=pubDI
cookies corresponding to γ(b1)
. Of course,
course,
esponding
corre
to
)1(γto
corre
cookies
cookies
course,
.
esponding
, . . . , γ(bk)
)kb(
)k(γ,...,
)1b(
1
1
1
1
what
more
cumbersome
is
s
this
e
of
use
this method is somewhat more cumbersome than use of
s
strings,
as
it
requires
document-ref
to
ferrer
syndicator
document-referrer strings, as it requires the syndicator to
cookies
co
distinct
cache
s
recei
single
and
orrelate
receive and correlate k distinct cache cookies for a single
transaction.
transaction.
Of
Of
than
method
some
the
for
oTTo
k
k
ev
k
a
Fr
4.4 Freshness
4.4
hness
esh
ﬁcient
is
insuffﬁcient
Authentication alone is insufﬁcient to guarantee valid
Authenticatio
alidv
on
alone
imperati
toev
coupon
It
also
ist
use.
coupon
conﬁrm
coupon use. It is also imperative to conﬁrm that a coupon
it
is
that
a
client
is
is
client
a
that
not
that
is
is
more
more
not
,
that
is,
it
is fresh, that is, that a client is not replaying it more
esh
frresh
esh
frresh
ordinary
by
use.
ju
than
rapidly
ustiﬁed
rapidly than justiﬁed by ordinary use.
syndicator
freshness,
a
r
ensure
c
coupon
oTTo
main-
may
To ensure coupon freshness, a syndicator may main-
}
)r(R,...,)(1R{=T
tain a data structure T = {R(1), . . . , R(r)} recording
st
data
tructure
a
recording
tain
timof
(asme
recei
edvi
coupons
-
deter
coupons received within a recent period of time (as deter-
guar
rantee
th
ahat
replay
replay
ying
ying
within
period
recent
to
a
USENIX Association
16th USENIX Security Symposium
21
mined by syndicator policy). A record R(i) can include
an authentication value γ(i), publisher identity ID(i)
, ad
pub
identiﬁer ID(i)
ad
, and a time of coupon receipt t(i).
When a new coupon C = (γ, IDpub, IDad) is re-
ceived at time t, the syndicator can check whether there
exists a C (i) = (γ, IDpub, IDad) ∈ T with time-
stamp t(i). If t − t(i) < τreplay, for some system pa-
rameter τreplay determined by syndicator policy, then
the syndicator might reject C as a replay. Similarly,
the syndicator can set replay windows for cross-domain
and cross-advertisement clicks. For example, if C (i) =
, i.e., it appears
(γ, ID(i)
that a given user has clicked on a different ad on the same
site as that represented by C, the syndicator might imple-
ment a different check t− t(i) < τcrossclick to determine
that a coupon is stale and should be rejected. Since a
second click on a given site is more likely representative
of true user intent than a “doubleclick,” we would expect
τcrossclick < τreplay.
ad ), where IDad 6= ID(i)
pub, ID(i)
ad
Of course, many different ﬁltering policies are pos-
sible, as are many different data structures and mainte-
nance strategies for T .
5 Prototype Implementation
We implemented a prototype of our premium-click
scheme. Four websites at separate IP addresses provide a
simulated advertiser, publisher, attestor, and syndicator.
The web sites are served by Apache 2.0.58, and server-
side scripted with PHP 5.1.6. The database for click, ad,
and coupon data is MySQL 5.0.26.
Advertiser. The prototype advertiser consists of two
fabricated product pages designed as destinations for a
user that clicks on a web ad. The only other duties of
an Advertiser in the premium clicks system are to submit
the ads to the syndicator, and then pay for billed clicks.
Publisher. The prototype publisher is a simple site that
embeds ads, served by the syndicator, in iframes. Many
widespread advertisement schemes (including Google’s
AdSense) use this technique; others simply write directly
to a publisher’s page, submitting their advertisements to
the same origin as the publisher, thus making the scheme
vulnerable to more click-fraud techniques [4].