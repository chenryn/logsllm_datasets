title:Efficient designated confirmer signature from bilinear pairings
author:Fangguo Zhang and
Xiaofeng Chen and
Baodian Wei
Limited Veriﬁer Signature from Bilinear Pairings
Xiaofeng Chen1, Fangguo Zhang2, and Kwangjo Kim1
1 International Research center for Information Security (IRIS)
Information and Communications University(ICU),
103-6 Munji-dong, Yusong-ku, Taejon, 305-714 KOREA
{crazymount,kkj}@icu.ac.kr
2 Department of Electronics and Communication Engineering,
Institute of Information Security Technology,
Sun Yat-Sen University,
Guangzhou 510275, P.R.China
PI:EMAIL
Abstract. Motivated by the conﬂict between authenticity and privacy
in the digital signature, the notion of limited veriﬁer signature was in-
troduced [1]. The signature can be veriﬁed by a limited veriﬁer, who will
try to preserve the privacy of the signer if the signer follows some spec-
iﬁed rules. Also, the limited veriﬁer can provide a proof to convince a
judge that the signer has indeed generated the signature if he violated
the predetermined rule. However, the judge cannot transfer this proof to
convince any other party. Also, the limited veriﬁer signature should be
converted into an ordinary one for public veriﬁcation if required.
In this paper, we ﬁrst present the precise deﬁnition and clear security
notions for (convertible) limited veriﬁer signature, and then propose two
eﬃcient (convertible) limited veriﬁer signature schemes from bilinear
pairings. Our schemes were proved to achieve the desired security
notions under the random oracle model.
Keywords: Undeniable signature, Designated veriﬁer signature, Lim-
ited veriﬁer signature, Bilinear pairings.
1 Introduction
Undeniable signature, introduced by Chaum and van Antwerpen [10], is a kind
of digital signature which cannot be veriﬁed without interacting with the signer.
It is useful in a case where the validity of a signature must not be veriﬁed
universally. For example, a software vendor might embed his signature into his
products and only allow the paying customers to verify the authentication of the
products. If the vendor signed a message (product), he must provide some proofs
to convince the customer of the fact. Also, these proofs must be non-transferable,
i.e., once a veriﬁer (customer) is convinced that the vendor signed (or did not
sign) the message, he cannot transfer these proofs to convince any third party.
After the initial work of Chaum and van Antwerpen, several undeniable signature
schemes were proposed [9,17,15,22]. Also, Boyar et al. [5] introduced the notion
of convertible undeniable signature.
M. Jakobsson, M. Yung, J. Zhou (Eds.): ACNS 2004, LNCS 3089, pp. 135–148, 2004.
c(cid:1) Springer-Verlag Berlin Heidelberg 2004
136
X. Chen, F. Zhang, and K. Kim
In some cases, it will be a disadvantage that the signature can be veriﬁed only
with the cooperation of the signer. If the signer should be unavailable, or should
refuse to cooperate, then the recipient cannot make use of the signature. This
facilitates the concept of “designated conﬁrmer signature” [8]. The designated
conﬁrmer can conﬁrm the signature even without the cooperation of the signer
when a dispute occurs.
In some applications, it is important for the signer to decide not only when
but also by whom his signatures can be veriﬁed due to the blackmailing [13,
20] and maﬁa [12] attacks. For example, the voting center presents a proof to
convince a certain voter that his vote was counted while without letting him
to convince others (e.g., a coercer) of his vote, which is important to design a
receipt-free electronic voting scheme preventing vote buying and coercion. This
is the motivation of the concept of “designated veriﬁer signature” [21]. The
designated veriﬁer will trust the signer indeed signed a message with a proof of
the signer. However, he cannot present the proof to convince any third party
because he is fully capable of generating the same proof by himself.
Recently, motivated by privacy issues associated with dissemination of signed
digital certiﬁcate, Steinfeld et al. [26] introduced the conception of “universal
designated veriﬁer signature”, which can be viewed as an extended notion of
designated veriﬁer signature. Universal designated veriﬁer signature allows any
holder of the signature (not necessarily the signer) to designate the signature
to any desired designated veriﬁer. The veriﬁer can be convinced that the signer
indeed generated the signature, but cannot transfer the proof to convince any
third party. For example, a user Alice is issued a signed certiﬁcate by the CA.
When Alice wishes to send her certiﬁcate to a veriﬁer Bob, she uses Bob’s public
key to transfer the CA’s signature into a universal designated veriﬁer signature
to Bob. Bob can veriﬁer the signature with CA’s public key but is unable to
use this designated signature to convince any third party that the certiﬁcate is
issued by the CA, even if Bob is willing to reveal his secret key to the third
party.
In some applications, it is also important for the recipient to decide when
and whom the signer’s signature should be veriﬁed. For example, a credit com-
pany will try his best to preserve the client’s privacy in order to get his trust,
provided that the client obeys the rules of the company. So, it is suﬃcient for
the company only to be convinced the validity of the client’s signature for his
dishonorable message such as a bill. Furthermore, the company will preserve the
client’s privacy if he pays the bill in a certain time. However, if the client violated
the rules, the company can provide a proof to convince a Judge of the client’s
treachery while the Judge cannot transfer the proof to convince any other third
party.
It is obvious that undeniable signature and designated veriﬁer signature are
unsuitable for these situations. In the undeniable signatures, the signature can
be veriﬁed only the cooperation of the signer. In the designated veriﬁer signature,
the designated veriﬁer can never transfer the signature or the proof to convince
any third party even he would like to reveal his secret key. This is because the
Limited Veriﬁer Signature from Bilinear Pairings
137
designated veriﬁer is fully capable to generate a “signature” himself which is
indistinguishable from the real signature of the signer.
Araki et al. [1] introduced the concept of “limited veriﬁer signature” to solve
these problems. The limited veriﬁer signature can only be veriﬁed by a limited
veriﬁer, who will try to preserve the signer’s privacy (especially some dishonor-
able message) unless the signer violated some rules. When a later dispute occurs,
the limited veriﬁer can convince a third party, usually a Judge, that the signer
indeed generated a signature. We argue that the goal of the limited veriﬁer is
not to make the signature to be veriﬁed publicly, but force the signer to obey
the rules. In some cases, the signer may not intentionally violate the rules and
the limited veriﬁer should give the signer some chances to correct his fault.
Therefore, the Judge should not transfer this proof to convince any other party.
In some situations, the signer’s privacy is closely related to the recipient’s
privacy. For example, a spy, Carol, has a certiﬁcate with a signature of the
President, which can be veriﬁed by Carol herself. Also, Carol can provide a proof
to prove her real identity to a third party in case of an emergency. However, the
signature and the proof cannot be transferred by the third party to convince any
other party in order to ensure Carol’s safety. Therefore, limited veriﬁer signature
can be used in any cases that the signer’s signature should be protected by the
recipient.
Some oﬃcial documents, which is treated as limited veriﬁer signature, should
be veriﬁed by everyone after a period of time if necessary. This is the motivation
of “convertible limited veriﬁer signatures”, also introduced by Araki et al. [1].
Convertible limited veriﬁer signatures enable the limited veriﬁer to convert the
signature into an ordinary one for public veriﬁcation.1
In the convertible limited veriﬁer signature [1], the conversion of the sig-
nature requires the cooperation of the original signer, who must release some
information. This might not be workable if the original signer is unwilling or in-
convenient to cooperate. Furthermore, Zhang and Kim [28] proposed a universal
forgery attack on this scheme. Wu et al. [24] proposed a convertible authenti-
cated encryption scheme, which overcomes some disadvantages of Araki et al.’s
scheme. However, if the recipient publishes the message and signature together,
anyone can be convinced that the signer generated the signature. It does not
satisfy the non-transferability. There seems no secure convertible limited veriﬁer
signature scheme to the best of our knowledge.
In this paper, we ﬁrst present the precise deﬁnition and clear security no-
tions for (convertible) limited veriﬁer signature. Based on the power of diﬀerent
adversaries, we then propose two eﬃcient (convertible) limited veriﬁer signature
schemes from bilinear pairings. Moreover, the conversion of the proposed limited
veriﬁer signature schemes does not need the cooperation of the original signer.
The rest of the paper is organized as follows: Some preliminary works are
given in Section 2. In Section 3, the precise deﬁnition and notions of security for
1 Convertible limited veriﬁer signature is diﬀerent from the notion of converted unde-
niable signature, where only the signer can release some information to convert his
originally undeniable signature into an ordinary one.
138
X. Chen, F. Zhang, and K. Kim
limited veriﬁer signature are presented. Our eﬃcient limited veriﬁer signature
schemes from bilinear pairings are given in Section 4. In Section 5, the security
and eﬃciency analysis of our schemes are given. Finally, conclusions will be made
in Section 6.
2 Preliminary Works
In this section, we will brieﬂy describe the basic deﬁnition and properties of
bilinear pairings and gap Diﬃe-Hellman group.
2.1 Bilinear Pairings
Let G1 be a cyclic additive group generated by P , whose order is a prime q, and
G2 be a cyclic multiplicative group of the same order q. Let a and b be elements
∗
of Z
q . We assume that the discrete logarithm problems (DLP) in both G1 and
G2 are hard. A bilinear pairing is a map e : G1 × G1 → G2 with the following
properties:
1. Bilinear: e(aP, bQ) = e(P, Q)ab.
2. Non-degenerate: There exists P and Q ∈ G1 such that e(P, Q) (cid:3)= 1.
3. Computable: There is an eﬃcient algorithm to compute e(P, Q) for all P, Q ∈
G1.
2.2 Gap Diﬃe-Hellman Group
Let G1 be a cyclic additive group generated by P , whose order is a prime q.
Assume that the inversion and multiplication in G1 can be computed eﬃciently.
We introduce the following problems in G1.
∗
q , such that Q = nP whenever such an integer exists.
1. Discrete Logarithm Problem (DLP): Given two elements P and Q, to ﬁnd
2. Computation Diﬃe-Hellman Problem (CDHP): Given P, aP, bP for a, b ∈
3. Decision Diﬃe-Hellman Problem (DDHP): Given P, aP, bP, cP for a, b, c ∈
4. Bilinear Diﬃe-Hellman Problem (BDHP): Given P, aP, bP, cP for a, b, c ∈
an integer n ∈ Z
∗
q , to compute abP.
Z
q , to decide whether c ≡ ab mod q.
∗
Z
q , to compute W = e(P, P )abc ∈ G2.
∗
Z
We call G1 a gap Diﬃe-Hellman group if DDHP can be solved in polyno-
mial time but there is no polynomial time algorithm to solve CDHP with non-
negligible probability. Such group can be found in supersingular elliptic curve
or hyperelliptic curve over ﬁnite ﬁeld, and the bilinear pairings can be derived
from the Weil or Tate pairings. For more details, see [3,7,14,19].
Limited Veriﬁer Signature from Bilinear Pairings
139
3 Limited Veriﬁer Signature (LVS) Scheme
3.1 Precise Deﬁnition
The limited veriﬁer signature scheme involves a signer, a limited veriﬁer (the
designated recipient of the signature) and a certain third party (the Judge). It
consists of six algorithms and a speciﬁc protocol.
– System Parameters Generation: on input a security parameter k, out-
puts the common system parameters SP .
– Key Generation: on input the common system parameters SP , outputs a
secret/public key pair (sk, pk) for each user.
– Limited Veriﬁer Signing: on input the key pair (sks, pks) of the signer,
message m and the public key pkv of the limited veriﬁer, outputs a limited
veriﬁer signature σ.
– Limited Veriﬁer Veriﬁcation: on input the key pair (skv, pkv) of the lim-
ited veriﬁer, the public key pks of the signer, and a limited veriﬁer signature
σ, outputs a veriﬁcation decision b ∈ {0, 1}. If b = 1, the veriﬁer accepts the
signature.
– Conﬁrmation Protocol: a protocol between the limited veriﬁer and a third
party such as a Judge. The limited veriﬁer provides a proof to convince the
third party that a signature is indeed generated by a certain signer while
the third party cannot transfer this proof to convince any other party even
he can always eavesdrop the information between the signer and the limited
veriﬁer.
– Convertible Limited Veriﬁer Signing: on input the secret key skv of
the limited veriﬁer, the public key pks of the signer, the message m and a
limited veriﬁer signature σ, outputs a convertible limited veriﬁer signature
(cid:3).
σ
– Public Veriﬁcation: on input the public key pkv of the limited veriﬁer, the
public key pks of the signer, the message m and a convertible limited veriﬁer
(cid:3), outputs a veriﬁcation decision b ∈ {0, 1}. If b = 1, anyone
signature σ
(cid:3) for the
can be convinced that the signer indeed generated the signature σ
message m.