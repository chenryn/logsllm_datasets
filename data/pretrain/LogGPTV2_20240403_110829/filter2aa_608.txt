URI相关
0x00 前⾔
最近看了⼀些关于url的⼩技巧，感觉⾃⼰对url的相关基础其实搞不太清楚，所以⼲脆从头仔细再学⼀遍。
主要参考⼀些链接
https://datatracker.ietf.org/doc/html/rfc3986#section-1.1
https://docs.oracle.com/javase/8/docs/api/java/net/URI.html
https://blog.csdn.net/anguowei/article/details/118381316
0x01 什么是uri、url、urn
uri(uniform resource identifier)，统⼀资源标识符，⽤于标识⽹络上任意资源。
url（uniform resource locator），统⼀资源定位符，通常表示资源的位置、获取⽅式等。
urn（uniform resource name），统⼀资源名称，表示⽹络上唯⼀存在的资源名称，即使资源不存在了，⼈们也可以继续使⽤名称讨论他。
其三者的关系如下图：
很显然，urn和url只是uri的两个⼦集，uri也还会包含其他的⼀些分类，不过那些分类很⼩众基本⽤不到。也就是说⼤部分时候我们看到的就
是url和urn，⽽最最常⻅的⽐如⽹址等就是url，⽽我们在磁⼒链接中则会看到urn的身影。
再通俗点说，urn就像⼀个资源的名字，⽐如⼀部蜘蛛侠电影，我们在现实社会中会叫这部电影《蜘蛛侠》，当我们说这个名字的时候别⼈也
会知道说的是这部电影。⽽在⽹络世界中，针对某个唯⼀的资源⽐如蜘蛛侠电影的名字⽤⼀串urn来唯⼀标识。这样⽆论在哪个⽹站，当我们
提到这个urn的时候，该⽹站通过解析就能知道我们说的是蜘蛛侠电影。
那么url是什么呢？⽐如我们去A站和B站分别搜索蜘蛛侠电影，他们会各⾃返回各⾃⽹站上的蜘蛛侠电影播放链接，⽽这两个链接肯定是不相
同的，因为他们分别指向A站和B站⾃⼰服务器上的某个蜘蛛侠电影的资源副本，并且告诉⽤户如何去访问（⽤什么参数，在那个⽬录下
等）。很显然，url就是指代具体资源的位置、访问⽅法等，同⼀个urn可能对应⽹络上N个url，因为《蜘蛛侠》电影的副本资源在各⼤⽹站上
都有。
0x02 格式
前⾯说了主要的uri分为urn和url两⼤类，给出⼀些例⼦
      ftp://ftp.is.co.za/rfc/rfc1808.txt
      http://www.ietf.org/rfc/rfc2396.txt
      ldap://[2001:db8::7]/c=GB?objectClass?one
      mailto:PI:EMAIL
      news:comp.infosystems.www.servers.unix
      tel:+1-816-555-1212
      telnet://192.0.2.16:80/
      urn:oasis:names:specification:docbook:dtd:xml:4.1.2
其具体格式如下
上图是rfc中的解释，不过他的图显示有问题，所以可以看下⾯这个
         foo://example.com:8042/over/there?name=ferret#nose
         \_/   \______________/\_________/ \_________/ \__/
          |           |            |            |        |
       scheme     authority       path        query   fragment
          |   _____________________|__
         / \ /                        \
         urn:example:animal:ferret:nose
相信很多同学多少有点基础，所以上⾯有些就不再说了，看⼀下authority：
authority   = [ userinfo "@" ] host [ ":" port ]
authority由//标识开始，并在下⼀个/或者#或者？或者末尾时结束。
总之只要知道//开始的是authority的标识，当然authority可以为空，这样我们就可以很好理解file:///etc/passwd这种形式了，也就是说
authority为空然后后⾯跟上path因此会有三个/。
这⾥最后再提⼀个概念：SchemeSpecificPart
[scheme:]scheme-specific-part[#fragment]
0x03 不透明和分级uri
uri也可以分为不透明的和分级的uri两⼤类。
如果⼀个uri的scheme-spcific-part不以/开头，则称他为不透明的，通常这种uri的scheme-spcific-part部分不会再做进⼀步的解析（可能对
应的scheme⾃⼰有专属的解析器来解析，但⾄少不会按照通常那样来解析各个部分）。例⼦如下：
mailto:PI:EMAIL 
news:comp.lang.java 
urn:isbn:096139210x
分级URI就是我们经常⻅的那种，scheme后⾯以/开头或者是没有scheme的相对uri都属于分级uri，会按照前⾯说的格式来尝试解释各个部
分。例⼦如下:
http://java.sun.com/j2se/1.3/
docs/guide/collections/designfaq.html#28
../../../demo/jfc/SwingSet2/src/SwingSet2.java
file:///~/calendar
0x04 java实例
写⼏个简单的java实例处理scheme的效果，我这⾥是java1.8
⽐较有意思的是，这⾥获取port的时候必须要显示的写80，不然会获取port为-1，也就是说这个类在处理的时候还是正则匹配的样⼦，不会
做更多的处理。
看看file协议：
0x05 normalize和resolve
在uri的处理⾥有两个操作要提⼀下，⼀个是normalize另⼀个是resolve。
normalize
将路径中的.和..给处理掉，如果路径为a/b/../c则会被处理成a/c
resolve
将两个路径链接在⼀起，⽐如a/b和c/d链接后变成a/b/c/d
0x06 可能有⽤的点
scheme的构成：
scheme = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )
这⾥可以看到scheme可以带有.
那么假设只校验格式不校验是否有对应的protocol handler，那么链接也可能写成
www.baidu.com://www.guahao.com/a/b/c
相对url：
在存在baseurl的上下⽂⾥，可以⽤相对url来表示url，类似于使⽤相对路径
https://datatracker.ietf.org/doc/html/rfc3986#section-5.4.1
这后⾯还有⼀些异常的例⼦处理建议可以看看，蛮有意思的
0x07 结语
暂时先记⼀下这些，rfc⾥还有很多其他概念和细节，有空再看看。⽽且java在处理的时候，好像也没有完全按照rfc的标准来处理。