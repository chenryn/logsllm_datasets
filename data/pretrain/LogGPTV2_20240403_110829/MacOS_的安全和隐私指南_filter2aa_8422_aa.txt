# MacOS 的安全和隐私指南
> * 原文地址：[macOS Security and Privacy Guide](https://github.com/drduh/macOS-Security-and-Privacy-Guide)
> * 原文作者：[drduh](https://github.com/drduh)
> * 译文出自：[掘金翻译计划](https://github.com/xitu/gold-miner)
> * 译者：[Nicolas(Yifei) Li](https://github.com/yifili09), [MAYDAY1993](https://github.com/MAYDAY1993), [DeadLion](https://github.com/DeadLion)
> * 校对者：[lovelyCiTY](https://github.com/lovelyCiTY), [sqrthree](https://github.com/sqrthree)
> * 这个 [链接](https://github.com/xitu/macOS-Security-and-Privacy-Guide/compare/master...drduh:master) 用来查看本翻译与英文版是否有差别（如果你没有看到 README.md 发生变化，那就意味着这份翻译文档是最新的）。
这里汇集了一些想法，它们是有关如何保护运行了 macOS 10.12 "Sierra" 操作系统（以前是 **OS X**）的现代化苹果 Mac 电脑，也包含了一些提高个人网络隐私的小贴士。
这份指南的目标读者是那些希望采用企业级安全标准的"高级用户"，但是也适用于那些想在 Mac 上提高个人隐私和安全性的初级用户们。
一个系统的安全与否完全取决于管理员的能力。没有一个单独的技术、软件，或者任何一个科技能保证计算机完全安全；现代的计算机和操作系统都是非常复杂的，并且需要大量的增量修改才能获得在安全性和隐私性上真正意义的提高。
**免责声明**：若按照以下操作后对您的 Mac 电脑造成损伤，**望您自行负责**。
如果你发现了本文中的错误或者有待改进的内容，请提交 `pull request` 或者 [创建一个 `issue`](https://github.com/drduh/OS-X-Security-and-Privacy-Guide/issues).
- [基础知识](#基础知识)
- [固件](#固件)
- [准备和安装 macOS](#准备和安装-macos)
    - [虚拟机](#虚拟机)
- [首次启动](#首次启动)
- [管理员和普通用户账号](#管理员和普通用户账号)
- [对整个磁盘进行数据加密](#对整个磁盘进行数据加密)
- [防火墙](#防火墙)
    - [应用程序层的防火墙](#应用程序层的防火墙)
    - [第三方防火墙](#第三方防火墙)
    - [内核级的数据包过滤](#内核级的数据包过滤)
- [系统服务](#系统服务)
- [Spotlight 建议](#spotlight-建议)
- [Homebrew](#homebrew)
- [DNS](#dns)
    - [Hosts 文件](#hosts-文件)
    - [Dnsmasq](#dnsmasq)
      - [检测 DNSSEC 验证](#检测-dnssec-验证)
    - [DNSCrypt](#dnscrypt)
- [Captive portal](#captive-portal)
- [证书授权](#证书授权)
- [OpenSSL](#openssl)
- [Curl](#curl)
- [Web](#web)
    - [代理](#代理)
    - [浏览器](#浏览器)
    - [插件](#插件)
- [PGP/GPG](#pgpgpg)
- [OTR](#otr)
- [Tor](#tor)
- [VPN](#vpn)
- [病毒和恶意软件](#病毒和恶意软件)
- [系统完整性保护](#系统完整性保护)
- [Gatekeeper 和 XProtect](#gatekeeper-和-xprotect)
- [密码](#密码)
- [备份](#备份)
- [Wi-Fi](#wi-fi)
- [SSH](#ssh)
- [物理访问](#物理访问)
- [系统监控](#系统监控)
    - [OpenBSM 监测](#openbsm-监测)
    - [DTrace](#dtrace)
    - [运行](#运行)
    - [网络](#网络)
- [二进制白名单](#二进制白名单)
- [其它](#其它)
- [相关软件](#相关软件)
- [其它资源](#其它资源)
## 基础知识
安全标准的最佳实践适用于以下几点:
* 创建一个威胁模型
    *  考虑下什么是你需要保护的，避免谁的侵害？你的对手会是一个 [TLA](https://theintercept.com/document/2015/03/10/strawhorse-attacking-macos-ios-software-development-kit/) 机构么？（如果是的，你需要考虑替换使用 [OpenBSD](http://www.openbsd.org)），或者是一个在网络上好管闲事的偷听者，还是一起针对你精心策划的 [apt](https://en.wikipedia.org/wiki/Advanced_persistent_threat) 网络攻击？
    * 研究并识别出[那些威胁](https://www.usenix.org/system/files/1401_08-12_mickens.pdf)，想一想如何减少被攻击的面。
* 保持系统更新
    * 请为你的系统和软件持续更新补丁！更新补丁！更新补丁！（重要的事情说三遍）。
    * 可以使用 `App Store` 应用程序来完成对 `macOS` 系统的更新，或者使用命令行工具 `softwareupdate`，这两个都不需要注册苹果账号。
    * 请为那些你经常使用的程序，订阅公告邮件列表（例如，[Apple 安全公告](https://lists.apple.com/mailman/listinfo/security-announce)）。
* 对敏感数据进行加密
    * 除了对整个磁盘加密之外，创建一个或者多个加密的容器，用它们来保存一些你的密码、秘钥、那些个人文件和余下的其他数据。
    * 这有助于减少数据泄露造成的危害。
* 经常备份数据
    * 定期创建[数据备份](https://www.amazon.com/o/ASIN/0596102461/backupcentral)，并且做好遇到危机时候的数据恢复工作。
    * 在拷贝数据备份到外部存储介质或者 “云” 系统中之前，始终对它们进行加密。
    * 定期对备份进行测试，验证它们是可以工作的。例如，访问某一部分文件或者对比哈希校验值。
* 注意钓鱼网站
    * 最后，具有高安全意识的管理员能大大降低系统的安全风险。
    * 在安装新软件的时候，请加倍小心。始终选择[自由的软件](https://www.gnu.org/philosophy/free-sw.en.html)和开源的软件（[当然了，macOS 不是开源的](https://superuser.com/questions/19492/is-mac-os-x-open-source))
## 固件
为固件设定一个密码，它能阻止除了你的启动盘之外的任何其它设备启动你的 Mac 电脑。它也能设定成每次启动时为必选项。
[当你的计算机被盗或者丢失的时候，这个功能是非常有用的](https://www.ftc.gov/news-events/blogs/techftc/2015/08/virtues-strong-enduser-device-controls)，该功能可以防止直接内存访问从而可以读取您的 FileVault 密码并注入诸如 [pcileech](https://github.com/ufrisk/pcileech) 之类的内核模块这种攻击方式，因为唯一能重置固件密码的方式是通过 `Apple Store`，或者使用一个 [SPI 程序](https://reverse.put.as/2016/06/25/apple-efi-firmware-passwords-and-the-scbo-myth/)，例如 [Bus Pirate](http://ho.ax/posts/2012/06/unbricking-a-macbook/) 或者其它刷新电路的程序。
1. 开始时，按下 `Command` 和 `R` 键来启动[恢复模式 / Recovery Mode](https://support.apple.com/en-au/HT201314)。
2. 当出现了恢复模式的界面，从 `Utilities / 工具` 菜单中选择 **Firmware Password Utility / 固件密码实用工具**。
3. 在固件工具窗口中，选择 **Turn On Firmware Password / 打开固件密码**。
4. 输入一个新的密码，之后在 **Verify / 验证** 处再次输入一样的密码。
5. 选择 **Set Password / 设定密码**。
6. 选择 **Quit Firmware Utility / 退出固件工具** 关闭固件密码实用工具。
7. 选择 Apple 菜单，并且选择重新启动或者关闭计算机。
这个固件密码会在下一次启动后激活。为了验证这个密码，在启动过程中按住 `Option` 键 - 按照提示输入密码。
当启动进操作系统以后。固件密码也能通过 `firmwarepasswd` 工具管理。例如，从另一个模式启动的时候可以这样：
`$ sudo firmwarepasswd -setpasswd -setmode command`
输入一个密码然后重启。
**在没有 Apple 技术支持下，使用 [Dediprog SF600](http://www.dediprog.com/pd/spi-flash-solution/sf600) 来输出并且烧录一个 2013 款的 MacBook SPI 闪存芯片，或者移除一个固件密码**
可参考 [HT204455](https://support.apple.com/en-au/HT204455), [LongSoft/UEFITool](https://github.com/LongSoft/UEFITool) 或者 [chipsec/chipsec](https://github.com/chipsec/chipsec) 了解更多信息。
## 准备和安装 macOS
有很多种方式来安装一个全新的 macOS 副本。
最简单的方式是在启动过程中按住 `Command` 和 `R` 键进入 [Recovery Mode / 恢复模式](https://support.apple.com/en-us/HT201314)。系统镜像文件能够直接从 `Apple` 官网上下载并且使用。然而，这样的方式会以明文形式直接在网络上暴露出你的机器识别码和其它的识别信息。
**在 macOS 恢复过程中，捕获到未加密的 HTTP 会话包**
另一种方式是，从 [App Store](https://itunes.apple.com/us/app/macos-sierra/id1127487414) 或者其他地方下载 **macOS Sierra** 安装程序，之后创建一个自定义可安装的系统镜像。
这个 macOS Sierra 安装应用程序是经过[代码签名的](https://developer.apple.com/library/mac/documentation/Security/Conceptual/CodeSigningGuide/Procedures/Procedures.html#//apple_ref/doc/uid/TP40005929-CH4-SW6)，它可以使用 `code sign` 命令来验证并确保你接收到的是一个正版文件的拷贝。
```
$ codesign -dvv /Applications/Install\ macOS\ Sierra.app
Executable=/Applications/Install macOS Sierra.app/Contents/MacOS/InstallAssistant
Identifier=com.apple.InstallAssistant.Sierra
Format=app bundle with Mach-O thin (x86_64)
CodeDirectory v=20200 size=297 flags=0x200(kill) hashes=5+5 location=embedded
Signature size=4167
Authority=Apple Mac OS Application Signing
Authority=Apple Worldwide Developer Relations Certification Authority
Authority=Apple Root CA
Info.plist entries=30
TeamIdentifier=K36BKF7T3D
Sealed Resources version=2 rules=7 files=137
Internal requirements count=1 size=124
```
macOS 安装程序也可以由 `createinstallmedia` 工具制作，它在 `Install macOS Sierra.app/Contents/Resources/` 文件路径中。请参考[为 macOS 制作一个启动安装程序](https://support.apple.com/en-us/HT201372)，或者直接运行这个命令（不需要输入任何参数），看看它是如何工作的。
**注意** Apple 的安装程序[并不能跨版本工作](https://github.com/drduh/OS-X-Security-and-Privacy-Guide/issues/120)。如果你想要创造一个 10.12 的镜像，例如，以下指令也必须要在 10.12 的机器上运行!
为了创建一个 **macOS USB 启动安装程序**，需要挂载一个 USB 驱动器，清空它的内容、进行重新分区，之后使用 `createinstallmedia` 工具:
```
$ diskutil list
[Find disk matching correct size, usually "disk2"]
$ diskutil unmountDisk /dev/disk2
$ diskutil partitionDisk /dev/disk2 1 JHFS+ Installer 100%
$ cd /Applications/Install\ macOS\ Sierra.app
$ sudo ./Contents/Resources/createinstallmedia --volume /Volumes/Installer --applicationpath /Applications/Install\ macOS\ Sierra.app --nointeraction