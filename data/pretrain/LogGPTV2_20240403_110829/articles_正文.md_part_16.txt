2\. 玫瑰图
玫瑰图，又称极区图、鸡冠花图，是南丁格尔护士在推动医事改良的过程中，为了表达医院季节性死亡率而发明的。其与饼状图的区别在于，饼状图采用扇形角度来表达大小，而玫瑰图采用扇形面积来表达大小，更有利于突出视觉差距。
玫瑰图示例如图9-12所示。
![](media/image25.png){width="5.511811023622047in"
height="3.5708661417322833in"}
图9-12 玫瑰图示例
3\. 条形图
条形图示例如图9-13所示。
![](media/image21.tiff){width="5.763888888888889in"
height="2.8631944444444444in"}
图9-13 条形图示例
条形图适用于数据分组较多、名称较长的场合。
可以在条形图中设置标签来展示更多的信息，如图9-14所示。
![](media/image22.tiff){width="5.385in" height="3.3466666666666667in"}
图9-14 在条形图中设置标签
4\. 旭日图
当用户在饼状图中对多个数据分组进行展示时，饼状图会自动把各分组字段值拼接成一个长字符串，导致在仪表盘钻取时无法正确获取原始字段值，也不方便判断各个分组字段值的大小关系。在这种情况下，可以改用旭日图来进行展示。
旭日图示例如图9-15所示。
### 9.3.3 关系类图表
关系类图表包括和弦图、桑基图、力图等，一般有以下3个参数。
（1）来源：取第一个分组字段。
（2）目标：取第二个分组字段。
（3）权重：取第一个统计数值。
![](media/image23.tiff){width="4.391666666666667in"
height="4.466666666666667in"}
图9-15 旭日图示例
1\. 和弦图
假设3个参数如下：
 来源：apache.clientip。
 目标：apache.request_path。
 权重：count()。
在和弦图中，每个来源与不同目标之间用同种颜色的关系线连接，以便观察不同来源之间的区别。
根据上述参数画出的和弦图示例如图9-16所示。
![](media/image24.tiff){width="4.870833333333334in"
height="3.7111111111111112in"}
图9-16 和弦图示例
2\. 桑基图
桑基图可用于展示数据流向，如展示企业的业务数据流向。
以下面的日志为例，该日志显示了不同线程（以sid为标记）的数据在不同模块中的变化。数据流向为从a模块到b模块再到c模块，或者直接从a模块到c模块。
{\"timestamp\":\"2017-04-12 16:27:14.000\", \"sid\":1, \"module\":\"a\"}
{\"timestamp\":\"2017-04-12 16:27:14.000\", \"sid\":2, \"module\":\"a\"}
{\"timestamp\":\"2017-04-12 16:27:14.002\", \"sid\":1, \"module\":\"b\"}
{\"timestamp\":\"2017-04-12 16:27:14.003\", \"sid\":1, \"module\":\"c\"}
{\"timestamp\":\"2017-04-12 16:27:14.003\", \"sid\":2, \"module\":\"c\"}
{\"timestamp\":\"2017-04-12 16:27:14.004\", \"sid\":3, \"module\":\"a\"}
{\"timestamp\":\"2017-04-12 16:27:14.005\", \"sid\":3, \"module\":\"b\"}
在对上述日志进行结构化处理（字段提取）之后，可以使用SPL语句进行查询，得到所需要的数据。
appname:trans
\| transaction json.aid, json.bid, json.cid, json.did, json.eid,
json.fid with states a, b, c, d, e, f in json.module results by flow
\| stats count() by fromstate, tostate
日志处理结果如图9-17所示。
![page106image26999840](media/image26.png){width="5.763888888888889in"
height="1.507638888888889in"}
图9-17 日志处理结果
将上述结果转化为桑基图，如图9-18所示。
![page106image27000048](media/image27.png){width="5.763888888888889in"
height="3.2368055555555557in"}
图9-18 将日志处理结果转化为桑基图
3\. 力图
力图用于展示众多对象的关联情况。力图示例如图9-19所示。
![](media/image28.png){width="5.511811023622047in"
height="3.2913385826771653in"}
图9-19 力图示例
在图9-19中可以清晰地看到，来自183.60.191.56的访问请求和其他来源的访问请求截然不同，需要重点关注。
### 9.3.4 复合类图表
复合类图表主要包括区间图、多*Y*轴图等。
1\. 区间图
区间图可用于展示时序指标的拟合和置信区间。区间图需要配置以下5个参数。
（1）*X*轴。
（2）实际值。
（3）预测值。
（4）区间上限。
（5）区间下限。
例如：
\* \| bucket timestamp span=25s as ts \| stats count(\'appname\') as
\'count\' by ts \| esma count timefield=ts
执行上述SPL语句可得到如图9-20所示的结果。
![](media/image29.png){width="5.75625in" height="2.9368055555555554in"}
图9-20 SPL语句执行结果
参数配置如下：
 *X*轴：ts。
 实际值：count。
 预测值：\_predict_count。
 区间上限：upper95。
 区间下限：lower95。
根据上述结果和配置绘制的区间图如图9-21所示。
2\. 多*Y*轴图
多*Y*轴图需要配置如下参数：
（1）*X*轴。
（2）*Y*轴（可设置多个）。
（3）每个*Y*轴对应的图表类型（曲线图、面积图、散点图、柱状图）。
（4）分组。
![](media/image30.png){width="5.747916666666667in"
height="2.7534722222222223in"}
图9-21 区间图示例
多*Y*轴图示例如图9-22所示。
![](media/image31.png){width="5.760416666666667in"
height="2.823611111111111in"}
图9-22 多*Y*轴图示例
### 9.3.5 地图类图表
常见的地图类图表有区划地图、热力地图、攻击地图、统计地图等。在日志易平台中，区划地图和热力地图提供自动配置功能，攻击地图和统计地图须用户手动配置。
1\. 区划地图
区划地图支持图内点击钻取，但要求 SPL
统计表格中包含各层级的结果。例如，实现完整的从世界到省份的钻取逻辑的统计语句如下：
logtype:apache \| stats count() by apache.geo.country,
apache.geo.province, apache.geo.city
然后设置对应的省市级下钻字段即可。
此外，区划地图还要配置如下3个参数：
（1）数值：自动配置时会取第一个统计数值。
（2）切分：自动配置时会取第一个分组字段。
（3）区域：可以选择世界、国家、省份、城市等。
2\. 热力地图
热力地图需要配置如下2个参数：
（1）数值：取第一个统计数值。
（2）切分：取第一个分组字段。
热力地图在普通区划地图的基础上，采用热力分布形式来展示数据分布情况。
3\. 攻击地图
攻击地图需要配置如下8个参数：
（1）来源字段值。
（2）来源经度。
（3）来源纬度。