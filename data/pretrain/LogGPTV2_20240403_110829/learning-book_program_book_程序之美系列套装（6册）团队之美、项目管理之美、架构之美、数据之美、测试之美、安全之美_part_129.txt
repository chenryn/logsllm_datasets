是，这个过程和效果都是一样的。
我为什么要花费这么多的时间在这些序列表上呢？因为拥有明确的
优先级是保证事情进展的支柱。让事情发生，必须对事情的重要程
度有明确的判断力，并且把这种判断力应用在每一次和团队人员的
单独交流上。这些优先级必须在你寄出的每一封电子邮件、所提出
的问题和你主持的会议上反映出来。每一个程序员和测试员，都要
把精力放在最可能带来成功的事情上。需要有人全力了解那些事
情，然后推动团队去实现它们。
项目上最浪费时间的，就是不清楚什么事情先做，什么事情后做。
很多误解和失误，都是因为某A假定了一个优先级（让它更快），
某B假定了另一个优先级（让它更可靠）。对程序员、测试员、营
销人员和整个团队而言，这的确是真实的现状。如果可以避免这些
冲突，就可以把更多的时间花费在朝项目目标推进上。
这并不是说，不该并展那些关于优先级的讨论，相反，应该讨论。
但是，应该在制定计划前讨论。如果相同的讨论只是发生在并发过
程中，这就表明众人并没有真正地信服决策，或者他们已经忘记了
那些逻辑，需要有人提醒为什么做那些决策。要接受争论，但是，
开始时要问，自从计划制定以证明重新考虑优先级是正确的后，是
否有任何事情发生改变。如果什么都没有改变（竞争对手的行为、
新团体的任务、资源增加/减少，新的主要问题），那就坚持决策。
如果有张序列表贴在墙上，让每个人都清楚，经由大家同意，哪些
事情比其他事情更加重要，这些争论很快就会消失，或者再也不会
发生。序列表给每个人提供了一个共享的逻辑框架，以继承决策。
如果目标明确且容易让人理解，那么就不需要太多解释，而且也不
会浪费太多的精力。
714
---
## Page 716
因此，如果团队有什么事情进展得不好，众人把重点放在重要的事
情上，出现了问题，我知道这是我的错误：不是没有把优先级排
好，就是没有有效地沟通这些优先级，或者无法执行和完成我们已
定的序列表。就这种情况而言，制定优先级和序列表就是所有的工
作。
常见的序列表
总是应用一系列优先级，调整和修改就很容易做了。如果奇迹出
现，在进度表中，发现更多的时间和资源，就很清楚接下来要处理
的最重要的工作是什么了。同样地，如果进度表需要删减，每个人
都知道接下来最不重要的事情是什么，可以停止它们。这的确是非
常重要的，因为它保证无论发生什么，你都会做可能最重要的事
情，迅速调整，而无需花费太多精力和影响士气。同时，任何优先
级的错误都是相对的：如果结果证明工作项目10比工作项目9更为
重要，是个重要项目。但是，因为整个序列表都是按顺序排列的，
你就不会犯下大错。除此之外，有了如此明确的优先级，并让团队
集中精力在其上面，最后你还是可能有时间把项目10也完成好。
对于大多数项目而言，3种最重要且最正式的序列表是项目目标、
功能及工作项目（见图13-1）。项目目标通常是远景文件的一部分
（请参阅第4章），或者是从远景文件衍生出来的。功能和工作项
目列表是设计过程的产物（请参阅第5、6和7章）。因为每个列表
都从上一个列表继承优先级，通过提升一级而达到一个明确的点，
然后，重新把这些优先级应用到有疑问的这一级，任何争论都并始
得到解决。尽管这并不能解决所有的争论，但是它却可以保证每一
个决策都能在真正重要的相关环境下做出。
715
---
## Page 717
目标序列表
功能序列表
工作项目序列表
图13-1：三种最重要的序列表，按顺序排列
其他可能需要序列表的重要事情包括，Bug、客户建议、员工奖金
和团队预算，这些都可以按照类似的方式来管理：把这些按照顺序
排列，使得项目或者组织最可能成功。不管你用的工具有多么复杂
（例如，用于跟踪Bug的工具），绝不要忘了，你所做的事情就是
安排顺序。如果你用的工具不能帮你把事情排好，就要另寻他法
了。例如，Bug分类，就是众人呆在办公室里，决定先解决哪个问
题（也不过如此），其实这就是一个群体制定Bug序列表的过程。
Bug可能被以组的方式分类，而不是以个别的Bug逐一分类，但是，
目的和效果都是一样的。
如果你真的使用这3种最常见的序列表，那么要确定他们之间总是
对应的。每个工程工作项目都要对应一个功能，每个功能都要对应
一个目标。如果增加了某个新的工作项目，一定要和功能和目标对
应。这是一个强制的功能，以免出现随意的功能。如果VP或者程序
员想要额外加入某些东西，就要强制对他说明这和项目所试图实现
的目标是相悸的。“老板，这个功能很好，但是，这会帮助我们实
现什么目标呢？要么我们就要调整目标，处理相关事项；要么我们
就不要花费精力在这上面。”如果你教导团队，要让这3种级别决策
同步进行，你就能让团队聚焦，防止他们浪费时间。
优先级1对其他所有事情
有一条非常重要的界限，把这些序列表分成了两个部分。上面的部
分是优先级1：我们不得不做的事情，否则就不能成功。第二部分
716
---
## Page 718
就是其他所有事情。优先级2和3存在，但是被认为是和优先级1完
全不同的事情。人们很滩把优先级2的项目提并到优先级1上。
优先级1的界限必须严谨制定。人们应该奋力拼搏，把这份列表做
的尽量又小又难以撼动（这一点也适用于远景文件中的任何目标列
表）。优先级1列表中的项目意味着“没有这个我们就活不了”。这
不是说有这些东西就多么好，或者我们愿意要这些东西；而是说，
这是满足项目目标的最结实、最精益的方式。例如，我们正在造汽
车，优先级1应该包括发动机、轮胎、传动装置、刹车、方向盘和
踏板，优先级2的项目应该是车门了、挡风玻璃、空调和收音机，因
为即使没有这些东西，你也可以造出汽车。汽车的核心功能可以在
没有这些东西的情况下实现；你可以交付它，它也算得上是一台汽
车。
划出这条线总是非常难，要经过长期的讨论，哪些事情没有它，客
户还是可以正常使用。这样争论很好。但是我们希望所有的争论能
够尽早发生，然后继续推进。虽然这很痛苦，但是，当我们完成
时，却得到了一张列表，这份列表经受住团队各种意见和观点的考
验。然后，我们就可以继续向前、执行，同时拥有对这份列表的驳
斥和支持论据。通过辩论和争吵来完善列表，我们已经做好准备，
来迎接众人可能提出的90%的提问和挑战（例如，为什么我们做了
刹车，却没有空调），并且迅速处理它们：我们早就听过这种论
点，而且知道它们为什么不能成立。
不管别人怎么说，排好优先级的挑战总是更加偏情绪化/心理层面
的，而不是比较理智的。就像节食来减肥，或者预算来省钱一样，
把你想要的（但不需要的）删掉，需要遵守原则，坚定承诺，把重
点放在重要目标上。嘴上说“稳定是重要的”是一回事，把它和其他
重要的事情进行排序则完全是另外一回事了。很多经理因为害怕而
不愿参与这个过程。他们躲闪、拖延以及拒绝这种困难的选择，结
果导致项目走向失败。没有痛苦的选择就没有进步。抽象而言，重
要这个词没有任何意义。以序列表和保护优先级1的名义，道使领
导和整个团队做出困滩的选择，并且认真考虑清楚。
明确性就是让项目的事情如何放生。每个人对他每天在做什么，为
什么要这么做，以及和其他人在做的事情有什么关联，都要十分了
解。当团队提出为什么这件事比其他事更重要时，人们对此可以给
出很清晰和符合逻辑的理由。即使当事情改变，优先级调整时，也
都是在序列表和优先级指定的相同的基础系统内进行的。
717
---
## Page 719
优先级就是力量
你曾碰到过激烈的争论，而且你感到它永远也不会停止吗？或许一
半的工程师都强烈觉得应该是A，而另一半则认为是B。但是，接看
精明的团队领导走进来了，提了一些问题，以新的方式分割讨论内
容，很快地大家都达成一致意见。我曾多次碰到过这样的问题。当
我还是个年轻人时，我曾把这当成是卓越的能力：不知怎地，经理
或者首席程序员就是比办公室里其他人更精明，可以发现我们看不
到的事情。但是当我深入了解时，偶尔也会在事后问他们是怎么做
到这点的，这时我才明自，原来是因为如岩石般坚固的优先级在起
作用。他们心里有一份序列表，然后让其他人按照这个表的框架来
讨论。良好的优先级就是力量，它们可以通过讨论排除次要的变
量，使得聚焦和解决问题变得可行。
有了优先级，你就能在任何讨论中提出问题，使得讨论能够重新构
建在一个更为有用的重要事情上。这样就可以重新恢复每个人对什
么是成功的感觉，清晰地把世界分成两块：重要的事情，以及不重
要却不错的好事。以下就是一些简单的问题范例：
我们正在努力解决什么样的问题？
如果有很多问题，哪一个是最重要的？
这个问题和我们的目标有何关联，或者如何影响我们的目标？
解决这个问题的最简单的，且能够让我们实现我们目标的方法是什
么？
如果没有别的什么，你司以把会谈的主题重新聚焦在项目的目标
上，目标是每个人都同意的。如果某个争论持续了数小时，找出共
同的立场就是把讨论转向正面结论的最好机会。
当优先级机器
每次我和程序员和测试员谈话时，听到他们的问题和挑战时，我都
会意识到，我的主要价值就是帮助他们聚焦。我的目标就是从他们
的工作中，排除次要或者第三重要的事情，协助他们看清工作的次
序。有1000种方法可以完成设计一个特殊的网页，或者数据库系
统，但是，他们中只有少数人可以盯紧目标。了解这一点后，我就
718
---
## Page 720
会鼓励程序员，在他们面对不知如何安排接下来的时间时，来找我
谈谈。
但是，不用管得很细（“可以做这个，不能做那个。不行，要这样
做。你已经做了吗？现在情况怎么样？”），我只要让他们了解，
我会协助他们，在需要的时候排好优先级。因为他们没有像我一样
的关于项目整体的视野，所以，我的价值就是协助他们去了解，即
使只是一小会，了解他们所做的是如何融入到整个项目中去的。当
花了一天的时间去调试某个模块，或者测试某个单元，他们一般就
会放心地去接受高层次的清晰的了解，并且再次安心于他们所做的
事情。一般只要谈上30秒，我们就会弄清是否有相同的看法。
每当项目遇到新的信息，我就要去解释它（单独或者通过和其他人
讨论），然后编制成一份优先级列表。通常，我还得修订之前的那
份列表，调整它，使之回应新的信息。VP可能改变他的想法。可用
性研究可能找到新的方法。竞争对手可能做出难以预料的改变。那
些优先级都是灵活的，任何有关方向或目标的改变，都会立刻直接
在其中反映出来。
因为我来维护这些优先级，所以能让团队一直聚焦在重要的事情
上，并且使他们有实质进展。有时，我可以复用我的上级定义的优
先级（远景文件、群体任务陈述）：有时，我必须重新来做，以响
应模糊或者不可预测的状况。但是，比起其他事物，我更像是一台
优先级机器。如果用一个雕像来纪念一位优秀的项目经理的话，我
猜题字会是，“把你那些随性的、困惑不已的、爱挖苦的、痛苦不
堪的，且渴望明确的程序员，带到我这里吧。”
当你说“不"时，事情发生了
有优先级的作用之一，就是你要经常会所“不”。这在英语中，是最
小的单字之一，然而很多人却很难说出它。问题在于，如果你不会
说“不”，你就不会有优先权。世界很大，但是，你的优先级1的列
表却要很小。因此，这个世上（或者你的团队中）大多数人的想法
也许是伟大的，但是，最后却无法符合项目的目标。这并不是说，
他们的想法不好；只是表面他们的想法对这个特定的项目没有责
献。因此，PM世界的基本定律就是：如果不会说“不”，你就无法管
理21。
719