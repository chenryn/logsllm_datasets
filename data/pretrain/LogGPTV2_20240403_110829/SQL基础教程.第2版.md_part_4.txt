注A
据的操作集合起来以对象为单位进行管理，因此得名。面向对象数据库就
主要的面向对象语言包括Java和
C++等。 是用来保存这些对象的数据库。
KEYWORD
●XML数据库（XMLDB） ●XML数据库（XML Database，XMLDB）
最近几年，XMLB作为在网络上进行交互的数据的形式逐渐普及起来。
注B
eXtensible Markup Language XML数据库可以对XML形式的大量数据进行高速处理。
的缩写，一种使用HTML那样的
标签来表现数据结构的语言。以
铃木这样的形 ●键值存储系统（Key-Value Store，KVS）
式来保存数据。
这是一种单纯用来保存查询所使用的主键（Key）和值（Value）的组
KEYWORD
合的数据库。具有编程语言知识的读者可以把它想象成关联数组或者散列
●键值存储系统（KVS）
（hash）。近年来，随着键值存储系统被应用到Google等需要对大量数据
进行超高速查询的Web服务当中，它正逐渐为人们所关注。
本书将向大家介绍使用SQL语言的数据库管理系统，也就是关系数
据库管理系统（RDBMS）的操作方法。接下来还会深入讲解RDBMS。
如无特殊说明，本书所提到的数据库以及DBMS都是指RDBMS。
另外，有的RDBMS也可以像XML数据库那样操作XML形式的数据，
或者具有面向对象数据库的功能。本书并不会介绍用于这些扩展功能的
SQL，如果要了解这些内容，请参考RDBMS附带的SQL手册或者针对
不同的RDBMS介绍SQL的图书。
● 20 第1章 数据库和SQL
第1章 数据库和SQL
1-2
数据库的结构
● RDBMS通常使用客户端/服务器这样的系统结构。
学习重点
● 通过从客户端向服务器端发送SQL语句来实现数据库的读写操作。
● 关系数据库采用被称为数据库表的二维表来管理数据。
● 数据库表由表示数据项目的列（字段）和表示一条数据的行（记录）所组
成，以记录为单位进行数据读写。
● 本书将行和列交汇的方格称为单元格，每个单元格只能输入一个数据。
RDBMS的常见系统结构
KEYWORD 使用RDBMS时，最常见的系统结构就是客户端/服务器类型（C/S
●客户端/服务器类型（C/S
类型）这种结构（图1-3）。
类型）
图1-3 使用RDBMS时的系统结构
SQL语句
服务器
客户端
RDBMS
●希望得到这样的数据
（使用数据库的程序） ●这条数据想要这样改写 （读取数据库的程序）
请求的
数据
数据库
把数据保存到
硬盘等设备上
KEYWORD 服务器指的是用来接收其他程序发出的请求，并对该请求进行相应处
●服务器
理的程序（软件），或者是安装了此类程序的设备（计算机）。在计算机上
持续执行处理，并等待接收下一条请求。RDBMS也是一种服务器，它能
1-2 数据库的结构 21 ●
KEYWORD 够从保存在硬盘上的数据库中读取数据并返回，还可以把数据变更为指定
●数据库
内容。
●客户端
●SQL语句 与之相对，向服务器发出请求的程序（软件），或者是安装了该程序
的设备（计算机）称为客户端。访问由RDBMS管理的数据库，进行数据
读写的程序称为RDBMS客户端。RDBMS客户端将想要获取什么样的数
据，或者想对哪些数据进行何种变更等信息通过SQL语句发送给
RDBMS服务器。RDBMS根据该语句的内容返回所请求的数据，或者对
存储在数据库中的数据进行更新。
客户端就如同委托方，而服务器就像是受托方。由于两者关系类似受
托方执行委托方发出的指令，故而得名。
这样就可以使用SQL语句来实现关系数据库的读写操作了。本书为
了给大家讲解SQL，使用了可以显示如何将SQL语句发送到RDBMS，
以及接收返回信息（数据）的客户端。具体内容请参考第0章。
另外，RDBMS既可以和其客户端安装在同一台计算机上，也可以分
别安装在不同的计算机上。这样一来，不仅可以通过网络使二者相互关联，
还可以实现多个客户端访问同一个RDBMS（图1-4）。
图1-4 通过网络可以实现多个客户端访问同一个数据库
1号客户端
服务器
2号客户端 RDBMS
网络
3号客户端
数据库
客户端没有必要使用同样的程序，只要能将SQL发送给RDBMS，就
可以操作数据库了。并且，多个客户端还可以同时对同一个数据库进行读
写操作。
另外，RDBMS除了需要同时接收多个客户端的请求之外，还需要操
● 22 第1章 数据库和SQL
作存有大量数据的数据库，因此通常都会安装在比客户端性能更优越的计
算机上。操作数据量特别巨大的数据库时，还可以将多台计算机组合使用。
虽然RDBMS的系统结构多种多样，但是从客户端发来的SQL语句
基本上都是一样的。
表的结构
让我们再具体了解一下RDBMS的结构。上一节我们讲到了关系数据
库通过类似Excel工作表那样的、由行和列组成的二维表来管理数据。用
KEYWORD 来管理数据的二维表在关系数据库中简称为表。
●表
表存储在由RDBMS管理的数据库中，如图1-5所示。一个数据库中
可以存储多个表。
图1-5 数据库和表的关系
客户端 SQL语句 服务器
RDBMS
想要得到这样的数据 （从数据库中取出
客户端请求的数据
（使用取出的数据）
并予以返回）
将取出的数据发送到客户端
表
数据库
关系数据库通过表来管理数据，
数据库中可以同时存储多个表
根据SQL语句的内容返回的数据同样必须是二维表的形式 ， 这也是关
系数据库的特征之一。返回结果如果不是二维表的SQL语句则无法执行。
另外，图1-5中只有一个数据库，我们还可以创建多个数据库分别用
于不同用途。
图1-6所示为1-3节之后的学习中实际用到的商品表的内容。
1-2 数据库的结构 23 ●
图1-6 表的示例（商品表）
商品编号 商品名称 商品种类 销售单价 进货单价 登记日期 列名
（数据的项
0001 T恤衫 衣服 1000 500 2009-09-20 目名称）
0002 打孔器 办公用品 500 320 2009-09-11
0003 运动T恤 衣服 4000 2800
行
0004 菜刀 厨房用具 3000 2800 2009-09-20 （记录）
0005 高压锅 厨房用具 6800 5000 2009-01-15
0006 叉子 厨房用具 500 2009-09-20
0007 擦菜板 厨房用具 880 790 2008-04-28
0008 圆珠笔 办公用品 100 2009-11-11
列（字段） 单元格
KEYWORD 表的列（垂直方向）称为字段，它代表了保存在表中的数据项目。在
●列
表1-2的商品表中，从商品编号到登记日期一共有6列。对于列的约束比
●字段
●行 Excel更加严格，定义为数字的列只能输入数字，定义为日期的列只能输
●记录
入日期（将在1-4节详细介绍）。
与之相对，表的行（水平方向）称为记录，它相当于一条数据。商品
表中总共有8行数据。 关系数据库必须以行为单位进行数据读写 ，请大
家牢记。
法则1-1
关系数据库以行为单位读写数据。
KEYWORD
●单元格
单元格是本书特有的表述方式。 本书将图1-6所示的行和列交汇的方格称为单元格。 一个单元格中只
实际上关系数据库对于行和列交
能输入一个数据 。像图1-7那样，在一个单元格中输入2个或2个以上的
汇的方格并没有专门的称谓。但
就像图1-6那样，这个方格通过
数据是不允许的，请大家牢记。
类似Excel单元格的方式管理数
据，因此把它称为单元格似乎也
很恰当。 图1-7 一个单元格中只能输入一个数据
商品编号 商品名称 商品种类 销售单价 进货单价 登记日期
T恤衫
0001 衣服 1000 500 2009-09-20
牛仔裤
如本表所示，一个单元格中
无法输入2个数据
● 24 第1章 数据库和SQL
法则1-2
一个单元格中只能输入一个数据。
专 栏
RDBMS的用户管理
为了防止重要数据被窃读或篡改，RDBMS只允许注册用户接触数据库。这里
的用户并不是指Windows等操作系统的注册用户，而是只能用于RDBMS的用
户。RDBMS允许注册多个用户。
注册用户的时候除了设定用户名（账号），还需要设定密码。虽然密码并不是
必需的，但为了防止重要信息的泄露，还是希望大家能够设定密码。
1-3 SQL概要 25 ●
第1章 数据库和SQL
1-3
SQL概要
● SQL是为操作数据库而开发的语言。
学习要点
● 虽然SQL也有标准，但实际上根据RDBMS的不同SQL也不尽相同。
● SQL通过一条语句来描述想要进行的操作，发送给RDBMS。
● 原则上SQL语句都会使用分号结尾。
● SQL根据操作目的可以分为DDL、DML和DCL。
标准SQL
KEYWORD 如前所述，本书所要学习的SQL是用来操作关系数据库的语言。它原
●SQL
本是为了提高数据库查询效率而开发的语言，但是现在不仅可以进行数据
查询，就连数据的插入和删除等操作也基本上都可以通过SQL来完成了。
国际标准化组织（ISO）为SQL制定了相应的标准，以此为基准的
KEYWORD SQL称为标准SQL（相关信息请参考专栏——标准SQL和特定的SQL）。
●标准SQL
以前，完全基于标准SQL的RDBMS很少，通常需要根据不同的RDBMS
来编写特定的SQL语句。这样一来，就会造成能够在Oracle中使用的
SQL语句却无法在SQL Server中使用，反之亦然。近来，对标准SQL的
支持取得了一些进展，因此希望准备学习SQL的读者们能够从现在开始
就牢记标准SQL的书写方式。
原则上，本书介绍的都是标准SQLA的书写方式，但是根据RDBMS
注A
本书将介绍以[SQL：2003]为基准 的不同也会存在一些特殊的SQL语句。如果遇到这种情况，将会通过其
的标准SQL的书写方式。
他途径对其进行说明。
法则1-3
学会标准SQL就可以在各种RDBMS中书写SQL语句了。
● 26 第1章 数据库和SQL
SQL语句及其种类
KEYWORD SQL用关键字、表名、列名等组合而成的一条语句（SQL语句）来
●关键字
描述操作的内容。关键字是指那些含义或使用方法已事先定义好的英语单
词，存在包含“对表进行查询”或者“参考这个表”等各种意义的关键字。
根据对RDBMS赋予的指令种类的不同，SQL语句可以分为以下三类。
●DDL
KEYWORD DDL（Data Definition Language，数据定义语言） 用来创建或者删除存储
●DDL（数据定义语言）
数据用的数据库以及数据库中的表等对象。DDL包含以下几种指令。
CREATE： 创建数据库和表等对象
DROP： 删除数据库和表等对象
ALTER： 修改数据库和表等对象的结构
●DML
KEYWORD DML（Data Manipulation Language，数据操纵语言） 用来查询或者变更
●DML（数据操纵语言）
表中的记录。DML包含以下几种指令。
SELECT：查询表中的数据
INSERT：向表中插入新数据
UPDATE：更新表中的数据
DELETE：删除表中的数据
●DCL
KEYWORD DCL（Data Control Language，数据控制语言） 用来确认或者取消对数据
●DCL（数据控制语言）
库中的数据进行的变更。除此之外，还可以对RDBMS的用户是否有权限
操作数据库中的对象（数据库表等）进行设定。DCL包含以下几种指令。
COMMIT： 确认对数据库中的数据进行的变更
ROLLBACK： 取消对数据库中的数据进行的变更
GRANT： 赋予用户操作权限
REVOKE： 取消用户的操作权限
实际使用的SQL语句当中有90%属于DML，本书同样会以DML为
中心进行讲解。
1-3 SQL概要 27 ●
法则1-4
SQL根据功能不同可以分为三类，其中使用最多的是DML。
SQL的基本书写规则
书写SQL语句时必须要遵守一些规则。这些规则都非常简单，接下
来就让我们逐一认识一下吧。
■SQL语句要以分号（;）结尾
一条SQL语句可以描述一个数据库操作。在RDBMS当中，SQL语
句也是逐条执行的。
众所周知，我们在句子的句尾加注标点表示结束，中文句子以句号（。）
KEYWORD 结尾，英文以点号（.）结尾，而SQL语句则使用分号（;）结尾。
●分号（;）
法则1-5
SQL语句以分号（;）结尾。
■SQL语句不区分大小写
SQL 不区分关键字的大小写 。 例如，不管写成SELECT还是select，
解释都是一样的。表名和列名也是如此。
虽然可以根据个人喜好选择大写还是小写（或大小写混杂），但为了
理解起来更加容易，本书使用以下规则来书写SQL语句。
● 关键字大写
● 表名的首字母大写
● 其余（列名等）小写
法则1-6
关键字不区分大小写。
但是插入到表中的数据是区分大小写的。例如，在操作过程中，数据