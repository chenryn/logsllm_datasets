# Messages
# Timers
## HSRP
* 3s Hello, 10s dead
# Trivia
## ARP
* Dest of 255.255.255.255
* Same place as IP header for source and dest IP
## HSRP
* Preemption disabled by default
* 255 groups per int
* 0000.0C07.ACXX (XX is hex of group)
* Clear text and MD5 auth
## VRRP
* 0000.5E00.01XX
* IOS Object Tracking rather than internal
* Preempts by default
* Master rather than active
* Group IP an interface on one of the routers
## GLBP
* AVG assigns each router unique MAC
* 4 virtual MACs max
* 0008.B40X.xxyy, X.xx (10 bit GLBP number), YY per router
* 1024 groups per int
## IPv6 FHRP
### HSRP
* v2 required
* RAs advertised available devices to hosts
* RSs ask for RAs
* RAs periodically m'cast
* Periodic RAs for int link local stop after final RA sent, while at least one virtual IPv6 link local addr conf'd
* MAC of 0005.73a0.0000
* UDP port 2029
### VRRP
* FF02:0:0:0:0:0:0:12
* IP Proto 112
* v3 allows ms timers
## NTP
* NTP client mode on most routers/switches
* NTP defines messages used and algs to adjust
* Symmetric active - ntp peer (syncs with another host)
## SNMP
* Get - one variable request
* GetNext - Next singlemib leaf variable in tree
* GetBulk - Multiple MIB variables in one request
* Response to any Gets and Sets
* Set
* Trap - unsolicited
* Inform - between managers
### Security
* v3 added auth and encryption
* SHA and MD5 for message digest of each message
* AES and DES encryption
## Syslog
* Cisco's dont log to NVRAM by default
 * `logging buffered`
* UDP 514 by default
* `logging host`
* `logging trap` then 0-7 for severity levels
## WCCP
* Routers use caching engines
* Hosts unaware of proxying
* Can cluster engines
* Pool uses WCCP messages
* 32 with one router in v1
* Lowest IP as lead engine
* Lead content engine distributes traffic
* only 1 router in v1
* v2 multiple routers
### V2 over V1
* TCP and UDP outside of 80
* Segment caches
* M'cast support
* Multiple routers (32 per cluster)
* MD5 security
* Default in IOS
## IP SLA
* Can measure delay, jitter, packet loss, sequencing, path, connectivity, download type and MOS
### Probes
* active, synthetic traffic
* visibility of processing time on device vs transit or on wire
* Near ms precision
* SNMP traps based on threshold/trigger condition
* Histortical data storage
* Set a target with ip sla responder, adds in/out timestamps in payload, measuring cpu time
* ICMP Path echo - traceroute first, then measures responde from each hop, path jitter similar
* UDP Jitter - per direction jitter
* Time sync required
* Shadow router - dedicate source of IP SLA measurement
## RITE
* Exports packets to VLAN or LAN
* Only for traffic rx'd on multiple WAN/LAN Ints simultaneously, used for IDS
* Copies packets to MAC of IDS
## RMON
* Thresholds based on SNMP objects
* Events track, set rising and falling thresholds
* For trap, SNMP community of server
## BFD
* Requires CEF
* Async mode - contrl packets sent between two systems (i.e. must be set on both sides)
* Enabled at int level, applied to routing protocols
* Interval negotiation
* QoS of CoS 6 by default
* ip route static bfd INT NH-TO-MONITOR
 * says to monitor a next hop over an interface, for use with static routes
* Echo mode
 * Enabled by default
 * works with async
 * Echoes by forwarding, sent back on same path
 * "without assymetry"
 * `no bfd echo`
 * `no ip redirects` required
 * Used to forward in hardware quickly
* BFD Template - can apply to PW classes etc
### Multihop
* Uses template (keyword multihop)
* Uses BFD map
* Associated mode - static route auto linked to bfd static if next hop matches destination
* Unassociated - not added to any routes automatically
### Dampening
* Done in tempalte, takes down until network stablisies
* Can auth with key chains
### Slow timers
* For control packet,s can bring down timers, for checking liveliness when echo mode enabled
## Netflow
**v5**
* Packet format fixed
* Flows calced in int ingress
* Outbound based on inbound of other ints
 * Needs to be on all ints
* Ingress int (snmp index), source ip, dest ip, ip proto, source + dest port, IP ToS
**v7**
* Exclusive to Netflow feature card
**v8**
* Route Based aggregation
**v9**
* Dynamic format
* egress flows
* Uses templates
* Supports m'cast, IPSec, MPLS
* Sampled netflow support
* Can send BGP next hop info (peer or origin AS as well as next hop)
* IP TTL field from IP Header
* ID field
* Packet elngth
* ICMP type and code
* Source + Dest Mac
* VLAN Id on Tx and Rx frames
### Top Talkers
* Sorted by either total num of packets or total bytes
* Does not require a collector, placed in a special cache
### Aggregation cache
* Agg of Netflow export records
 * reduces bw
 * reduces number of collection workstations
* Many different schemes (grouped flows)
* Can configure each agg cache with individual cache size, cache ager timeout parameter, export dest IP addr and UDP port
* Default cache size 4096 bytes
* Five available are AS Agg Cache, Dest Prefix, Prefix, Protocol port, Source prefix
* Type Of Service Router
 * Agg feature introduced, all of which include ToS byte as one of fields
 * All of the above, mentioned but with Type of Service
## IOS Menus
* Each item is single user command
* Standard 24 line by 80 col size
* No more than 17 items
* 10 or more items - single spaced (use menu single-spaced to set this)
* Numbers, letters, strings (strings require menu line-mode
* Requires menu-exit command
## EEM
* Create applet
* Syslog event detector
* Variables
* Point to TCL script
* Runs EEM policy when specified event occurs
 * System - cisco policy
 * User - User defined, eg event manager policy FILENAME
* Can detect cli events, coutners, track objects, int counters, OIR, resource events, app events, SNMP, syslog, timer, watchdog
* Core event publishes to EEM server, event subscriber
* EEM Policy director receives from EEM applet and EEM script
## NTP
* SNTP - client only, cannot provide time
* v4 has DNS support for ipv6
* v4 allows mc'ast for v6 NTP sync
* No sync to servers not already sync'd
* NTP Leap - only allowed within month before leap is to happen
## Performance Monitor
* monitors packet flows in network
* similar to netflow and flexible netflow
* Requires cef
* Components
 * Interface - service policy
 * Policy - type performance monitor
 * Class map - matching criteria
 * Flow monitor - type performance monitor
 * Flow record - type performance monitor
 * Flow exporter
* Configure flow record, specify fields, exporter sends to dest
* Then flow monitor, class map, policy map with 1 or more classes, then apply to int
## Enhanced Object Tracking
* Tracking using boolean (track NUMBER list BOOLEAN)
* Threshold weights
* Can track ip route reachability or metric threshold, resolution, timer
## KRON
* Scheduler
* Clock must be set
* Use of conditional means executions tops if error occurs
## Autoinstall over LAN
* Staging router - Must have IP helper on for DNS and TFTP
* Default router - One that Autoinstall requests go to
* Config files - Host specific ("hostname-config.cfg"), default ("router-config"), network ("network-config")
 * Order - network-config, cisconet.cfg, router-config, router.cfg, ciscortr.cfg
* DHCP Server sends siaddr for TFTP in Autoinstall requests
 * Name of file
 * IP of TFTP server
 * Hostname of TFTP server
 * IP of DNS servers
 * IP of staging router
* RARP 
 * RARP requests link local MAC to RARP server
 * Needs to be DC'd to RARP server for Auto install
## Debug Sanity
* Every buffer used, sanity checked when allcoated and when freed
## Buffer Tuning
* show buffers
* buffer middle permanent value
* buffer middle min-free percent
* buffer middle max-free percent
* Reserves buffers on certain platforms
## DHCP On Demand Pool
* ODAP Server
 * Grants addresses as subnets
 * can config size of subnets w prefix length
 * When 1 runs out, another dynamically created
 * Binding tracks use
  * Associated with ODAP manager
  * Binding destroyed when not in used and rreturned to pool
* ODAP manager
 * Allcoates DHCP addesses from DHCP ODAP server out to ODAP client
 * Requests new from server
* Client - Normal client
* DHCP ODAP can work with VPn to assign some sbnets to different VRFs
## DHCP Server Radius Proxy
* Address allocation with radius auth of leases
* Supports DHCP option 60 and 121
* Passes client info to radius
* Response with all required attributes
* Server translates them to options
* Binding synced after Radius auths client
* Can assign from local pool and auth pool for different clients
* Enhancement allows classmane and other optional info (session-timeout, session duration etc)
## DHCP Info Option 82
* relay goes in as giaddr, saying choice of pool
* Option 82 refines, slects sub range of pool
* DHCP snooping use zero for giaddr
* Can be used to define classes
## DHCP Authorized Arp
* Disables dynamic arp learning on int
* Limitation in supporting accurate 1 minute billing
* Static config overrides auth arp
## Cisco Authorative NS
* Listens on port 53
* Answers suing perm/cached entries
* No zone transfers
* Will forward on if not zone authority and ip domain lookup enabled
## ICMP Router Discovery Protocol (IRDP)
* Allows hosts to locate routers as a gw to reach IP based devices on other networks
* IRDP device as router, rotuer discovery apckets gen, as host rx'd
## Other bits
* Small-serevrs - small servers for diag usage, echo back from telnet sessions
 * service tcp-small-servers
 * service udp-small-servers
* Chargen - gens stream of ascii (telnet X.X.X.X chargen)
* Discard - throws away (telnet X.X.X.X discard)
* Daytime - returns sysdate and tim (telnet X.X.X.X daytime)
* UDP all but day time
* Finger - shows whos logged into router, tcp 79
 * service finger
 * no ip finger
## IP Event Dampening
* Suppresses effect of interface flapping
* Removes int from network until it stops flapping
* Exponential delay mechanism
* Suppress Treshold - accumulated penalty that triggers router to dampen int
* Half life period - how fast pentalty can decay (by half each period), 1-30, default 5s
* Reuse threshold - 1-20000, default 1000
* Max Suppress Time - 1-20000s, default 20s (i.e. 4x default half life)
* Connected and static routes not in routing table for dampening ints
## Conditional Debugs
* Debugs on packets in or out, on a specified int
* Can also be all that meet a condition
* Works on debug aaa {aaa | autheorization | authentication}, debug dialer, debug isdn, debug modem, debug ppp
# Processes
## WCCP
1. Client sends HTTP get
2. Router redirects to engine
3. Content engine sees if cachced, if so HTTP response back, if not, to original server
4. Original server replies (if it went there)
## IP SLA
1. Config SLA type
2. Config threshold conditions
3. Config responder
4. Schedule/start
5. Review results
# Config
## DHCP Server
```
int eth1 
 ip address 10.1.1.1 255.255.255.0
 ip helper address 10.1.2.202
ip dhcp excluded-address 10.1.1.0 10.1.1.20
ip dhcp pool subnet1
 network 10.1.1.0 255.255.255.0
 dns-server 10.1.2.203
 default-router 10.1.1.1
 lease 0 0 20
```
## NTP
**Server**
```
int Fa0/0
 ntp broadcast
ntp authentication-key 1 MD5 12948902348 7
ntp authenticate
ntp trusted-key 1
ntp master 7
```
* If 127.127.7.1 seen in show ntp asso, this router lock source
**Static client**
```
ntp server 10.1.1.1