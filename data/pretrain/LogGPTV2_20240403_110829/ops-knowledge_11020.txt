User: How to automate backup of PostgreSQL database using bash script?
Assistant: 1. Create a backup script First, create a bash script to backup the PostgreSQL database. The following is an example: ``` #!/bin/bash # Backup related parameters DB_USER="postgres" # Database user name DB_NAME="mydatabase" # Database name to be backed up BACKUP_DIR="/var/backups/postgresql" # Backup Directory DATE=$(date +%Y-%m-%d_%H-%M-%S) # Current date # Generate backup file name BACKUP_FILE="${DB_NAME}_${DATE}.sql.gz" # Execute backup pg_dump -U "$DB_USER" "$DB_NAME" | gzip > "${BACKUP_DIR}/${BACKUP_FILE}" # Delete old backup files, only keep backups of the last 7 days find "$BACKUP_DIR" -type f -mtime +7 -exec rm {} \; ``` The above script will use the pg_dump command to back up the PostgreSQL database and compress the backup file into gzip format. The backup file will be saved to the specified backup directory with the current date as the file name. And it will automatically delete old backup files, and only keep the backups of the last 7 days. 2. Add scheduled tasks In order to automate the backup, we need to add the above backup script to the scheduled tasks. In Linux systems, you can use the crontab command to add scheduled tasks. Open a terminal and execute the following command: ``` crontab -e ``` Add the following line to the bottom of the file to perform a backup every day at 3 am: ``` 0 3 * * * /path/to/backup_script.sh ``` Take care to change "/path/to/backup_script.sh" to the path of your actual backup script. Save and exit the file. Now, the backup script will be automatically executed every day at 3 am. You can modify the crontab entries to change the backup schedule as needed. 3. Test the backup Finally, you can manually test that the backup script is working correctly. Open a terminal, change to the directory where the backup script is located, and run the following command: ``` ./backup_script.sh ``` If everything worked, the backup should have been created and saved in the specified backup directory. You can check the backup file size and timestamp to confirm that the backup was successful.