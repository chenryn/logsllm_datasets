Include a build_clause to specify when the view should be populated. Specify
BUILD IMMEDIATE, or BUILD DEFERRED:
 BUILD IMMEDIATE instructs the server to populate the view immediately.
This is the default behavior.
 BUILD DEFERRED instructs the server to populate the view at a later time
(during a REFRESH operation).
create_mv_refresh
Include the create_mv_refresh clause to specify when the contents of a
materialized view should be updated. The clause contains the REFRESH keyword
followed by COMPLETE and/or ON DEMAND, where:
 COMPLETE instructs the server to discard the current content and reload
the materialized view by executing the view's defining query when the
materialized view is refreshed.
 ON DEMAND instructs the server to refresh the materialized view on
demand by calling the DBMS_MVIEW package or by calling the Postgres
REFRESH MATERIALIZED VIEW statement. This is the default behavior.
Notes
Materialized views are read only - the server will not allow an INSERT, UPDATE, or
DELETE on a view.
Access to tables referenced in the view is determined by permissions of the view owner;
the user of a view must have permissions to call all functions used by the view.
For more information about the Postgres REFRESH MATERIALIZED VIEW command,
please see the PostgreSQL Core Documentation available at:
https://www.postgresql.org/docs/11/static/sql-refreshmaterializedview.html
Examples
The following statement creates a materialized view named dept_30:
CREATE MATERIALIZED VIEW dept_30 BUILD IMMEDIATE AS SELECT * FROM emp WHERE
deptno = 30;
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 90
Database Compatibility for Oracle® Developers
Reference Guide
The view contains information retrieved from the emp table about any employee that
works in department 30.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 91
Database Compatibility for Oracle® Developers
Reference Guide
2.3.23 CREATE PACKAGE
Name
CREATE PACKAGE -- define a new package specification
Synopsis
CREATE [ OR REPLACE ] PACKAGE name
[ AUTHID { DEFINER | CURRENT_USER } ]
{ IS | AS }
[ declaration; ] [, ...]
[ { PROCEDURE proc_name
[ (argname [ IN | IN OUT | OUT ] argtype [ DEFAULT value ]
[, ...]) ];
[ PRAGMA RESTRICT_REFERENCES(name,
{ RNDS | RNPS | TRUST | WNDS | WNPS } [, ... ] ); ]
|
FUNCTION func_name
[ (argname [ IN | IN OUT | OUT ] argtype [ DEFAULT value ]
[, ...]) ]
RETURN rettype [ DETERMINISTIC ];
[ PRAGMA RESTRICT_REFERENCES(name,
{ RNDS | RNPS | TRUST | WNDS | WNPS } [, ... ] ); ]
}
] [, ...]
END [ name ]
Description
CREATE PACKAGE defines a new package specification. CREATE OR REPLACE
PACKAGE will either create a new package specification, or replace an existing
specification.
If a schema name is included, then the package is created in the specified schema.
Otherwise it is created in the current schema. The name of the new package must not
match any existing package in the same schema unless the intent is to update the
definition of an existing package, in which case use CREATE OR REPLACE PACKAGE.
The user that creates the procedure becomes the owner of the package.
Parameters
name
The name (optionally schema-qualified) of the package to create.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 92
Database Compatibility for Oracle® Developers
Reference Guide
DEFINER | CURRENT_USER
Specifies whether the privileges of the package owner (DEFINER) or the
privileges of the current user executing a program in the package
(CURRENT_USER) are to be used to determine whether or not access is allowed to
database objects referenced in the package. DEFINER is the default.
declaration
A public variable, type, cursor, or REF CURSOR declaration.
proc_name
The name of a public procedure.
argname
The name of an argument.
IN | IN OUT | OUT
The argument mode.
argtype
The data type(s) of the program‟s arguments.
DEFAULT value
Default value of an input argument.
func_name
The name of a public function.
rettype
The return data type.
DETERMINISTIC
DETERMINISTIC is a synonym for IMMUTABLE. A DETERMINISTIC
procedure cannot modify the database and always reaches the same result when
given the same argument values; it does not do database lookups or otherwise use
information not directly present in its argument list. If you include this clause,
any call of the procedure with all-constant arguments can be immediately
replaced with the procedure value.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 93
Database Compatibility for Oracle® Developers
Reference Guide
RNDS | RNPS | TRUST | WNDS | WNPS
The keywords are accepted for compatibility and ignored.
Examples
The package specification, empinfo, contains three public components - a public
variable, a public procedure, and a public function.
CREATE OR REPLACE PACKAGE empinfo
IS
emp_name VARCHAR2(10);
PROCEDURE get_name (
p_empno NUMBER
);
FUNCTION display_counter
RETURN INTEGER;
END;
See Also
DROP PACKAGE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 94
Database Compatibility for Oracle® Developers
Reference Guide
2.3.24 CREATE PACKAGE BODY
Name
CREATE BODY PACKAGE -- define a new package body
Synopsis
CREATE [ OR REPLACE ] PACKAGE BODY name
{ IS | AS }
[ declaration; ] [, ...]
[ { PROCEDURE proc_name
[ (argname [ IN | IN OUT | OUT ] argtype [ DEFAULT value ]
[, ...]) ]
[ STRICT ]
[ LEAKPROOF ]
[ PARALLEL { UNSAFE | RESTRICTED | SAFE } ]
[ COST execution_cost ]
[ ROWS result_rows ]
[ SET config_param { TO value | = value | FROM CURRENT } ]
{ IS | AS }
program_body
END [ proc_name ];
|
FUNCTION func_name
[ (argname [ IN | IN OUT | OUT ] argtype [ DEFAULT value ]
[, ...]) ]
RETURN rettype [ DETERMINISTIC ]
[ STRICT ]
[ LEAKPROOF ]
[ PARALLEL { UNSAFE | RESTRICTED | SAFE } ]
[ COST execution_cost ]
[ ROWS result_rows ]
[ SET config_param { TO value | = value | FROM CURRENT } ]
{ IS | AS }
program_body
END [ func_name ];
}
] [, ...]
[ BEGIN
statement; [, ...] ]
END [ name ]
Description
CREATE PACKAGE BODY defines a new package body. CREATE OR REPLACE
PACKAGE BODY will either create a new package body, or replace an existing body.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 95
Database Compatibility for Oracle® Developers
Reference Guide
If a schema name is included, then the package body is created in the specified schema.
Otherwise it is created in the current schema. The name of the new package body must
match an existing package specification in the same schema. The new package body
name must not match any existing package body in the same schema unless the intent is
to update the definition of an existing package body, in which case use CREATE OR
REPLACE PACKAGE BODY.
Parameters
name
The name (optionally schema-qualified) of the package body to create.
declaration
A private variable, type, cursor, or REF CURSOR declaration.
proc_name
The name of a public or private procedure. If proc_name exists in the package
specification with an identical signature, then it is public, otherwise it is private.
argname
The name of an argument.
IN | IN OUT | OUT
The argument mode.
argtype
The data type(s) of the program‟s arguments.
DEFAULT value
Default value of an input argument.
STRICT
The STRICT keyword specifies that the function will not be executed if called
with a NULL argument; instead the function will return NULL.
LEAKPROOF
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 96
Database Compatibility for Oracle® Developers
Reference Guide
The LEAKPROOF keyword specifies that the function will not reveal any
information about arguments, other than through a return value.
PARALLEL { UNSAFE | RESTRICTED | SAFE }
The PARALLEL clause enables the use of parallel sequential scans (parallel mode).
A parallel sequential scan uses multiple workers to scan a relation in parallel
during a query in contrast to a serial sequential scan.
When set to UNSAFE, the procedure or function cannot be executed in parallel
mode. The presence of such a procedure or function forces a serial execution plan.
This is the default setting if the PARALLEL clause is omitted.
When set to RESTRICTED, the procedure or function can be executed in parallel
mode, but the execution is restricted to the parallel group leader. If the
qualification for any particular relation has anything that is parallel restricted, that
relation won't be chosen for parallelism.
When set to SAFE, the procedure or function can be executed in parallel mode
with no restriction.
execution_cost
execution_cost specifies a positive number giving the estimated execution
cost for the function, in units of cpu_operator_cost. If the function returns a
set, this is the cost per returned row. The default is 0.0025.
result_rows
result_rows is the estimated number of rows that the query planner should
expect the function to return. The default is 1000.
SET
Use the SET clause to specify a parameter value for the duration of the function:
config_param specifies the parameter name.
value specifies the parameter value.
FROM CURRENT guarantees that the parameter value is restored when the
function ends.
program_body
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 97
Database Compatibility for Oracle® Developers
Reference Guide
The pragma, declarations, and SPL statements that comprise the body of the
function or procedure.
The pragma may be PRAGMA AUTONOMOUS_TRANSACTION to set the function or
procedure as an autonomous transaction.
The declarations may include variable, type, REF CURSOR, or subprogram
declarations. If subprogram declarations are included, they must be declared after
all other variable, type, and REF CURSOR declarations.
func_name
The name of a public or private function. If func_name exists in the package
specification with an identical signature, then it is public, otherwise it is private.
rettype
The return data type.
DETERMINISTIC
Include DETERMINISTIC to specify that the function will always return the same
result when given the same argument values. A DETERMINISTIC function must
not modify the database.
Note: The DETERMINISTIC keyword is equivalent to the PostgreSQL
IMMUTABLE option.
Note: If DETERMINISTIC is specified for a public function in the package body,
it must also be specified for the function declaration in the package specification.
For private functions, there is no function declaration in the package specification.
statement
An SPL program statement. Statements in the package initialization section are
executed once per session the first time the package is referenced.
Please Note: The STRICT, LEAKPROOF, PARALLEL, COST, ROWS and SET keywords
provide extended functionality for Advanced Server and are not supported by Oracle.
Examples
The following is the package body for the empinfo package.
CREATE OR REPLACE PACKAGE BODY empinfo
IS
v_counter INTEGER;
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 98
Database Compatibility for Oracle® Developers
Reference Guide
PROCEDURE get_name (
p_empno NUMBER
)
IS
BEGIN
SELECT ename INTO emp_name FROM emp WHERE empno = p_empno;
v_counter := v_counter + 1;
END;
FUNCTION display_counter
RETURN INTEGER
IS
BEGIN
RETURN v_counter;
END;
BEGIN
v_counter := 0;
DBMS_OUTPUT.PUT_LINE('Initialized counter');
END;
The following two anonymous blocks execute the procedure and function in the
empinfo package and display the public variable.
BEGIN
empinfo.get_name(7369);
DBMS_OUTPUT.PUT_LINE('Employee Name : ' || empinfo.emp_name);
DBMS_OUTPUT.PUT_LINE('Number of queries: ' || empinfo.display_counter);
END;
Initialized counter
Employee Name : SMITH
Number of queries: 1
BEGIN
empinfo.get_name(7900);
DBMS_OUTPUT.PUT_LINE('Employee Name : ' || empinfo.emp_name);
DBMS_OUTPUT.PUT_LINE('Number of queries: ' || empinfo.display_counter);
END;
Employee Name : JAMES
Number of queries: 2
See Also
CREATE PACKAGE, DROP PACKAGE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 99
Database Compatibility for Oracle® Developers
Reference Guide
2.3.25 CREATE PROCEDURE
Name
CREATE PROCEDURE -- define a new stored procedure
Synopsis
CREATE [OR REPLACE] PROCEDURE name [ (parameters) ]
[
IMMUTABLE
| STABLE
| VOLATILE
| DETERMINISTIC
| [ NOT ] LEAKPROOF
| CALLED ON NULL INPUT
| RETURNS NULL ON NULL INPUT
| STRICT
| [ EXTERNAL ] SECURITY INVOKER
| [ EXTERNAL ] SECURITY DEFINER
| AUTHID DEFINER
| AUTHID CURRENT_USER
| PARALLEL { UNSAFE | RESTRICTED | SAFE }
| COST execution_cost
| ROWS result_rows
| SET configuration_parameter
{ TO value | = value | FROM CURRENT }
...]
{ IS | AS }
[ PRAGMA AUTONOMOUS_TRANSACTION; ]
[ declarations ]
BEGIN
statements
END [ name ];
Description
CREATE PROCEDURE defines a new stored procedure. CREATE OR REPLACE
PROCEDURE will either create a new procedure, or replace an existing definition.
If a schema name is included, then the procedure is created in the specified schema.
Otherwise it is created in the current schema. The name of the new procedure must not
match any existing procedure with the same input argument types in the same schema.
However, procedures of different input argument types may share a name (this is called
overloading). (Overloading of procedures is an Advanced Server feature - overloading of
stored, standalone procedures is not compatible with Oracle databases.)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 100
Database Compatibility for Oracle® Developers
Reference Guide
To update the definition of an existing procedure, use CREATE OR REPLACE
PROCEDURE. It is not possible to change the name or argument types of a procedure this
way (if you tried, you would actually be creating a new, distinct procedure). When using
OUT parameters, you cannot change the types of any OUT parameters except by dropping
the procedure.
Parameters
name
name is the identifier of the procedure.
parameters
parameters is a list of formal parameters.
declarations
declarations are variable, cursor, type, or subprogram declarations. If
subprogram declarations are included, they must be declared after all other
variable, cursor, and type declarations.
statements
statements are SPL program statements (the BEGIN - END block may contain
an EXCEPTION section).
IMMUTABLE
STABLE
VOLATILE
These attributes inform the query optimizer about the behavior of the procedure;
you can specify only one choice. VOLATILE is the default behavior.
IMMUTABLE indicates that the procedure cannot modify the database and always
reaches the same result when given the same argument values; it does not do
database lookups or otherwise use information not directly present in its argument
list. If you include this clause, any call of the procedure with all-constant
arguments can be immediately replaced with the procedure value.
STABLE indicates that the procedure cannot modify the database, and that within a
single table scan, it will consistently return the same result for the same argument
values, but that its result could change across SQL statements. This is the
appropriate selection for procedures that depend on database lookups, parameter
variables (such as the current time zone), etc.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 101
Database Compatibility for Oracle® Developers
Reference Guide
VOLATILE indicates that the procedure value can change even within a single
table scan, so no optimizations can be made. Please note that any function that
has side-effects must be classified volatile, even if its result is quite predictable, to
prevent calls from being optimized away.
DETERMINISTIC
DETERMINISTIC is a synonym for IMMUTABLE. A DETERMINISTIC
procedure cannot modify the database and always reaches the same result when