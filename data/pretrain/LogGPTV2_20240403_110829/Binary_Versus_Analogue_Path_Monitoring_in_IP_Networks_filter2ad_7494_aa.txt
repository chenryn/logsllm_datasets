title:Binary Versus Analogue Path Monitoring in IP Networks
author:Hung Xuan Nguyen and
Patrick Thiran
Binary Versus Analogue Path Monitoring in
IP Networks
Hung X. Nguyen and Patrick Thiran
School of Computer and Communication Sciences, EPFL,
CH-1015 Lausanne, Switzerland
{hung.nguyen, patrick.thiran}@epfl.ch
Abstract. Monitoring systems that can detect path outages and peri-
ods of degraded performance are important for many distributed appli-
cations. Trivial pair-wise probing systems do not scale well and cannot be
employed in large networks. To build scalable path monitoring systems,
two diﬀerent approaches have been proposed in the literature. The ﬁrst
approach [1], which we call the continuous or analogue model, takes real
measurement values and infers the performance metrics of unmeasured
paths using traditional (+,×) algebra. The second approach [2], which
we call the Boolean model, takes binary values from measurements (e.g.,
whether the delay/loss of an end-to-end path is above a given threshold)
and infers the performance quality of unmeasured paths using Boolean
algebra. Both approaches exploit the fact that end-to-end paths share
network links and hence that the measurements of some paths can be
used to infer the performance on others. In this work, we are only in-
terested in detecting whether the performance of a path is below an ac-
ceptable level or not. We show that when the number of beacons (nodes
that can send probes and collect monitoring information) is small, the
Boolean model requires fewer direct measurements; whereas for a large
number of beacons the continuous model requires fewer direct measure-
ments. When the number of beacons is signiﬁcantly large, however, there
is no diﬀerence in terms of the number of paths that we need to measure
directly in both models. We verify the results by simulations on inferred
network topologies and on real measurement data.
1
Introduction
Network dynamics may signiﬁcantly aﬀect the performance of distributed appli-
cations such as distributed system management, replicated services, and applica-
tion layer multicast [3]. Robust and eﬃcient distributed systems therefore need
to adapt their behavior to environment changes. Loss rate monitoring systems
that can detect path outages and periods of degraded performance can both fa-
cilitate distributed system management (such as virtual private network (VPN)
or a content distribution network), and help build adaptive overlay applications,
e.g., streaming media [4].
Monitoring systems that target small networks [5] usually employ pair-wise
probing where each node probes the paths from itself to all other nodes. For
C. Dovrolis (Ed.): PAM 2005, LNCS 3431, pp. 97–107, 2005.
c(cid:1) Springer-Verlag Berlin Heidelberg 2005
98
H.X. Nguyen and P. Thiran
a network monitoring system with nB beacons, the number of possible end-
to-end measurements is O(n2
B). Therefore, active end-to-end measurement in
such settings does not scale well and as a result cannot be deployed for complete
network-wide measurement. Furthermore, this approach generates highly redun-
dant measurements where many links in the network are repeatedly measured. It
is therefore important to have a scalable overlay monitoring system that does not
generate redundant information. Existing scalable network estimation systems
determine network characteristics by measuring end-to-end paths periodically.
To monitor a path, a node at one end of the path periodically sends probe packets
to the node at the other end. From the delay characteristics and delivery status
of these probe/acknowledgement packet pairs, the sending node can infer the
quality of the path. This method is similar to network tomography approaches
that infer the internal network characteristics based on end-to-end observations.
Network tomography has been extensively studied in the literature( [6] provides
a detailed survey). However, to the best of our knowledge, none of the existing
tomography works deal with minimizing the number of probes that need to be
sent in a tomography system.
Chen et al. [1] have shown that it is possible to reconstruct complete end-to-
end path properties exactly from the measurements of only a subset of paths.
The results in [1] are based on a linear algebraic analysis of routing matrices of
the monitoring systems where a routing matrix is the binary matrix that speciﬁes
the links that occur in a given path. Since a maximal set of independent paths
can be used to recover any other path in the network, it is enough to monitor
only this set. The number of independent paths in a monitoring system, which is
the rank of the routing matrix, tends to be much smaller than the total number
of paths. A similar approach is given in [7] where only bounded estimations for
network paths can be achieved. Chua et al. [8] show that a signiﬁcantly smaller
number of direct path measurements than that are required by the monitoring
systems of [1] can be used to approximate some network wide properties.
Padmanabhan et al. [9] studied the end-to-end packet loss rate experienced
by clients of the Web server at microsoft.com. They report that the correlation
between end-to-end loss rate and hop count is weak, which suggests that end-
to-end paths are dominated by a few lossy links. Furthermore, the end-to-end
loss rate is stable for several minutes. A notable feature of the model consid-
ered in [9] is that its parameters (the loss rates on the logical links) are not
statistically identiﬁable from the data (the server-to-clients loss rate), meaning
that there exist diﬀerent sets of parameters that give rise to the same statistical
distribution of data. Although the model is not statistically identiﬁable, some
methods proposed in [9] are quite successful in identifying the lossiest links, both
in simulated and real networks. The underlying reasons behind the success of
the methods in [9] are the nature of link performance in the studied networks
[10]. In such networks, suppose that we can classify links as “good” or “bad”
with performance measures suﬃciently far apart, then the performance experi-
enced along a network path will be bad only if one of its constituent links is
bad. Duﬃeld et al. [10] calls this kind of link performance a separable perfor-
Binary Versus Analogue Path Monitoring in IP Networks
99
mance and identiﬁes many separable performance metrics of network links such
as connectivity, high-low loss model, and delay spike model.
A special case of separable performance, where links are either up or down,
has been widely studied in the literature [2, 11, 12]. In our previous work [2],
we showed that analogously to the work of Chen et al. [1], it is suﬃcient to
monitor only a subset of end-to-end paths to infer the connectivity of all end-to-
end paths in the network. The diﬀerence between [1] and our model is that our
model relies on Boolean (max,×) algebra instead of traditional (+,×) algebra
(which we also refer to as the “continuous model”). The end-to-end paths that
need to be monitored are those that form the basis of the row space of the
routing matrix in this Boolean algebra.
In this work, we compare the eﬃciency of the continuous and Boolean path
monitoring systems for separable performance metrics. Since we are only inter-
ested in the classiﬁcation of links as “good” or “bad”, depending on whether
the metric of interest has exceeded or not a given threshold, the continuous and
Boolean models bring the same information. To obtain this same information,
however, they will need diﬀerent sets of end-to-end measurements. Thus we want
to determine the system that uses fewer direct path measurements. Speciﬁcally,
we are interested in comparing the dimension of the basis of the vector space in
Boolean algebra for the Boolean model with the dimension of the basis of the
same vector space in traditional (+, ×) algebra for the continuous model. Our
main contributions are as follows.
– First, we show that the Boolean model in [2] can be used for other separable
performance metrics.
– Second, by simulations on Rocketfuel topologies [13], we show that for a
separable performance when the number of beacons is small, it is better to
use the Boolean model. On the contrary, when the number of beacons is
large, it is better to use the continuous model. However, when the number
of beacons is signiﬁcantly large, both models result in the same number of
paths that need to be measured directly. We also provide some intuitive
explanations for the simulation results.
– Finally, we verify our results on the data set gathered by the NLANR’s AMP
infrastructure [14].
The remainder of this paper is organized as follows. We introduces the net-
work models and the basic algorithms in Section 2. We presents the numerical
comparison of the two models on Rocketfuel ISP topologies in Section 3. Eval-
uations of the performance of the models on the NLANR’s AMP active mea-
surement infrastructure are given in Section 4. Finally, we conclude the paper
in Section 5.
2 Network Model and Basic Algorithms
The network is modelled as an undirected graph G(V,E), where the graph nodes,
V, denote the network components and the edges, E, represent the communica-
H.X. Nguyen and P. Thiran
100
tion links connecting them. The number of nodes and edges is denoted by n = |V|
and e = |E|, respectively. Suppose there are nB beacons that belong to a single
or confederated overlay monitoring system. They cooperate to share an overlay
monitoring service, and are instrumented by a central authority. The set of all
beacons is denoted by VB. Furthermore, we use Ps,t to denote the path traversed
by an IP packet from a source node s to a destination node t. Let P be the set
of all paths between the beacons on the network and let np = |P|.
For a known topology G = (V,E) and a set of paths P, we can compute the
routing matrix D of dimension np × e as follows. The entry Dij = 1 if the path
Ps,t ≡ Pi, with i = (s, t), contains the link ej and Dij = 0 otherwise. A row of D
therefore corresponds to a path, whereas a column corresponds to a link. Note
here that if a column contains only zero entries, the link corresponding to that
column does not have any eﬀect on the performance of the paths in P. We drop
these columns from the routing matrix to obtain a matrix of dimensions np × nl,
where nl ≤ e is the number of links that are covered by at least one path in P.
Our performance model is as follows. During some measurement period, each
beacon sends a set of packets to each destination (chosen among other beacons).
When traversing link ej, each packet is subject to a performance degradation
(e.g. loss or delay) according to a distribution speciﬁed by a parameter φej . If the
path Pi comprises links e1, ..., em, the performance degradation along the path
follows a composite distribution described by the parameters φi = {φe1, ..., φem}.
2.1 Continuous (+, ×) Algebraic Model
In the continuous model [1], the performance parameters φ take values in R. Let
y ∈ R
np be a vector that represents a metric measured on all paths Pi ∈ P. y is
linearly related to the value x ∈ R
nl of that same metric over the links ej ∈ E.
For example, letting φi denote the packet loss probability on path Pi and φej ,
the corresponding probability on link ej, and assuming independence among loss-
events on links, the relation between the path-wise and link-wise loss probability
becomes
y = Dx =
xjDij
,
(1)
⎡
⎣ nl(cid:3)
j=1
⎤
⎦
1≤i≤np
where yi = log(1 − φi) and xj = log(1 − φej ).
There are np = O(n2
B) equations in (1). However, in general the matrix D is
rank deﬁcient, i.e., k = rank(D)  k, of D can be represented as a linear combination of
the ﬁrst k independent row vectors, we can write that di =
αjdj for some
αj , 1 ≤ j ≤ k. The metric yi of the path Pi can be obtained from y1, ..., yk as:
yi =
αjyj. Therefore, only k independent equations of the np equations
in (1) are needed to compute all elements of y, and as a result we only need
to measure k paths, which form a basis of R(D), to obtain the loss rate on all
paths [1].
(cid:6)k
j=1
(cid:6)k
j=1
Binary Versus Analogue Path Monitoring in IP Networks
101
Boolean (max, ×) Algebraic Model
2.2
In the Boolean model [2], the values of the performance parameters φ are parti-
tioned into two subsets that we call “good” and “bad”. We call the link ej bad
if and only if its parameter φej is bad and we call the path Pi = {e1, ..., em}
bad if and only if φi is bad. The partitions are called separable when a path is
bad if and only if at least one of its constituent links is bad. For example, in
the loss model LM1 of [9], good links have loss rates φej uniformly distributed
between 0% and 1%; bad links have loss rates uniformly distributed between 5%
and 10%. Taking the threshold between good and bad path transmission rates
as 0.95, this model is separable if each path does not contain more than 5 links.
In a separable model, a path is bad if and only if at least one of its constituent
links is bad. If we use the variable yi to represent whether the path Pi is good
(yi = 0) or bad (yi = 1) and the variable xj is used to represent whether the
network link ej is good (xj = 0) or bad (xj = 1), we then have:
yi =
xj · Dij for all i,
(2)
nl(cid:7)
j=1
(cid:7)
i∈I
where “∨” denotes the binary max operation, and “·” denotes the usual mul-
tiplication operation.
Let us now introduce some concepts of Boolean vector spaces that are useful
for the analysis of the Boolean model. Let D = {di}1≤i≤h be a set of binary
vectors of equal length, and let I = {1, ..., h} be the index set of D. A vector
span S can be deﬁned on D as follows.
Deﬁnition 1. [Vector span] The vector span of D is
S =  = {
αi · di | αi ∈ {0, 1}, di ∈ D}
Vectors in D are called the generator vectors of S.
It was shown in [2] that each vector span  has a unique basis B, which
is the smallest set of vectors in D such that all other vectors in  can
be written as a linear combination of vectors in B. Let b = |B|, b is called the
dimension of . Without loss of generality, we assume that the ﬁrst b rows
of D form a basis of the row span  of D. Because every row vector di ,
i > b, of D can be represented by a linear combination of the ﬁrst b independent
αj · dj for some αj. The value yi of
row vectors, we can write that di =
αj · yj. Therefore, only
the path Pi can be obtained from y1, ..., yb as: yi =
b independent equations of the np equations in (2) are needed to compute all
elements of y, and hence we only need to measure b paths, which form a basis
of , to determine whether any path in the overlay system is good or bad.
2.3 A Brief Comparison of the Two Models
If we are only interested in the classiﬁcation of end-to-end paths as “good” or
“bad”, the continuous and Boolean models bring the same information. However,
as we will show in this section, the two models use diﬀerent algebraic structures,
(cid:8)b
(cid:8)b
j=1
j=1
102
H.X. Nguyen and P. Thiran
and as a result, they usually need diﬀerent sets of end-to-end measurements to
obtain this same information.
General properties relating network topologies with the dependency between
measurement paths in the continuous and Boolean models are kept for future
work. In this section, we are interested in the conditions under which a set
of linearly dependent/independent vectors in the continuous model is depen-
dent/independent in the Boolean model and vice versa. The observations in
this section are useful to explain the results of our simulation and experimen-
tal studies in Sections 3 and 4. We ﬁrst show that a linearly dependent set of
vectors in (+,×) algebra is not necessarily linearly dependent in Boolean al-
gebra and vice versa. This assertion can be veriﬁed in the following examples.
The set of four vectors: d1 = {1, 1, 1, 1}, d2 = {0, 0, 1, 1}, d3 = {1, 1, 1, 0} and
d4 = {0, 1, 0, 1} is linearly dependent in Boolean algebra as d1 = d2 ∨ d3 ∨ d4,
but is linearly independent in (+,×) algebra; whereas the set of four vectors:
d1 = {1, 0, 0, 1}, d2 = {0, 0, 1, 1}, d3 = {1, 1, 0, 0} and d4 = {0, 1, 1, 0} is linearly
dependent in (+,×) algebra as d1 = d2 + d3 − d4 but not in Boolean algebra.
It is not diﬃcult to verify that for the Boolean model, the necessary and also
suﬃcient condition for a set of vectors to be dependent is that one vector has en-
tries of 1s at all the positions where other vectors have entries of 1s. Clearly, this
statement does not apply for the continuous model as shown in the ﬁrst example.
3 Numerical Evaluations
We conducted a series of numerical studies in order to obtain a preliminary
comparison of the eﬃciency of the continuous and Boolean models in monitoring
end-to-end network properties. We perform our investigations on three backbone
ISP topologies with sizes ranging from small (Exodus: 80 nodes and 147 links)
to medium (Telstra: 115 nodes and 153 links), and large (Tiscali: 164 nodes and
328 links). For the sake of simplicity, we assume that all the ISPs use shortest
path routing to route traﬃc. In this section, we summarize our ﬁndings and
provide explanations for the results in the context of the Rocketfuel topologies.
Recall that n is the number of nodes in the network. In our experiments,
the number of beacons |VB| is varied from n/50 to n/2. We select the beacon
candidates randomly by picking a random permutation of the set of nodes in the
network. After building the routing matrix as in Section 2, we ﬁrst calculate the
rank of the routing matrix D to obtain the number of end-to-end measurements
for the continuous model, and then use the PS algorithm in [2] to ﬁnd the
number of end-to-end measurements for the Boolean model. For each topology,
we plot the percentage of independent paths returned by the PS algorithm (for
the Boolean model) and the rank of the matrix D (for the continuous model)
for diﬀerent numbers of beacons.
Fig. 1 shows the results for the Exodus topology. We observe that for a small
number of beacons |VB| (less than 5%) the Boolean model requires fewer direct
measurements, whereas for a larger number of beacons |VB| (between 10%-40%)
the continuous model requires fewer direct measurements. However, when the
Binary Versus Analogue Path Monitoring in IP Networks
103
100
90
80
70
60
50
40
30
20
10
d
e
r
u
s
a
e
m
y
l
t
c
e
r
i
d
e
b
o
t
d
e
e
n
t
a
h
t
s
h
t
a
p
f
o
e
g
a
t
n
e
c
r
e
P
0
0
5
Percentage of paths that need to be 
measured in the continuous model 
Percentage of paths that need to be 
measured in the Boolean model 
15
10
40
Percentage of nodes that are used as beacons ¦V
¦/n
B
20
25
30
35
45
50
Fig. 1. Percentage of paths that need to be measured directly for complete determina-
tion of the quality of all paths in the Exodus topology with 80 nodes and 147 links