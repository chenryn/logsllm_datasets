XP要用CPU的时候，不用虚拟一个CPU给他用，而是直接向我申请使用CPU，然后把CPU开到非根虚拟化操作模式，之后直接扔给Windows
XP使用就可以了，反正这个时候那个自爆按钮已经不管用了，扔给他随便玩去吧！
[5.3 本章小结]{.kai}
本章中，咱们的笨兔子可算是认识了Windows系统里的不少软件。谁让这些软件只有Windows的版本呢。懒蜗牛非得用这些软件，那就只能是模拟运行了。
要么模拟Windows的系统环境来运行软件，这就是Wine的工作；要么就是干脆模拟出一台计算机，里面装Windows，这就是VirtualBox的工作。不过，模拟终归是模拟，偶尔应急还行，真正顺手的还是咱系统里的原生软件。不知道懒蜗牛同学还将体验到哪些有意思的原生软件，诸位，敬请期待下一章吧。
[]{#part0010.html}
第6章 命令行的使用
虽然我们Linux的图形界面已经比较先进了，绝大多数操作都完全可以用图形界面来完成，但是就像吃过麦当劳肯德基不等于吃过西餐一样，连终端都没进去过，你也好意思说你会用Linux？因此懒蜗牛同学决定开始学习Linux的命令行了。
[6.1 这就是命令行]{.kai}
学习Linux命令行，离不开一大堆的命令。不过在这之前，首先要对命令行有些了解。下面就来说说命令行。
6.1.1 初识终端
命令行并不神秘，打开"应用程序"\|"附件"\|"终端"，你看到的就是，如图6.1所示
![alt](images/00246.jpeg){.calibre3}
图6.1 Gnome终端
![alt](images/00011.jpeg){.tpzz}**提示：**[也可使用快捷键Ctrl+Alt+t来打开终端。]{.kai1}
这种图形界面下的命令行窗口，叫做伪终端。在这个窗口里，你可以近距离地跟我交流。我们操作系统是很希望用户能够和我们使用命令来交流的，像朋友般倾诉，感受彼此的心声，而且还低碳环保，节省能源（省CPU和内存啊）。
![alt](images/00011.jpeg){.tpzz}**提示：**[如果只是想要通过命令运行一下某个软件，例如gconf-edit，可以按下Alt+F2组合键并输入命令来执行。]{.kai1}
【两种老板】
用户对于我们操作系统来说就相当于老板。使用图形界面的用户和使用字符界面的用户是两种完全不同的老板。
前者高高在上，拒人千里之外，就会比划，有事都不直说。比如他指着电灯开关的按钮冲你"嗯"一下，那就是让你过去把电灯打开；他用手一指桌面上的文件，冲你"嗯"一声，那是想让你选中这个文件；他要是指着文件冲你"嗯，嗯"两声，你就得明白他是让你打开文件（这里你还得注意，他"嗯"的那两声之间的间隔长短，要把握好分寸。要是间隔很短，那叫"双嗯"。要是间隔长，那叫"嗯"两下，对应的操作是不一样的）。他要是用手冲着桌面上的一堆东西指一圈，然后嘴里拉长声的"嗯～"一下，那就是让你把这些东西全都选中。给这种老板打工，需要很大忍耐力啊。
要是遇到第2种老板就要好得多，这种老板，平易近人，没有架子，有事会跟你平等地交流："小笨啊，你列个表，看看我这目录下都有什么东西啊。""小兔啊，3分钟后下班啦，到时候记得关机啊。""小笨啊，咱挺寂寞的，放个片子看看吧。就放那个wall-E.avi吧。"遇到这样的老板，工作起来，才是心旷神怡。
用命令行的用户，就相当于这第2种老板，跟他们交流，舒服。
【各种终端】
图6.1所示的那个终端，是Gnome环境中默认的伪终端软件，叫做"Gnome终端"。所谓伪终端，是相对于那个脱离图形界面的、黑漆漆的、按Alt+Ctrl+F1组合键出来的那个终端来说的。伪终端的工作是在桌面上申请一个窗口，然后在里面模拟显示出一个黑漆漆的界面。
除了Gnome终端之外，还有很多其他的伪终端。像konsole，这是KDE环境下的默认终端，如图6.2所示；xterm，是xWindow默认的终端，样子很简陋，什么也没有，如图6.3所示；还有urxvt，这是一个简洁快速的终端，如图6.4所示。
![alt](images/00247.jpeg){.calibre3}
图6.2 konsole界面
![alt](images/00248.jpeg){.calibre3}
图6.3 xterm界面
![alt](images/00249.jpeg){.calibre3}
图6.4 urxvt界面
除此之外还有很多的伪终端软件，你可以多装几个伪终端软件来对比一下，看哪个好用。不过区别不太大，无外乎都是一些黑漆漆、白惨惨、绿幽幽的窗口，在里面可以输入命令而已。
【真假终端】
有人可能要问了："你老说伪终端，那没图形界面，像DOS那样的命令行才是真终端咯？"其实也不是，那个我们管它叫做虚拟终端。那合着又虚又伪的，都不是真的。真的终端长什么样？
终端最初是一种输入/输出硬件设备，有键盘显示器和联接主机的接口电缆，是过去大中小型计算机上的概念。咱们用的PC（也就是微型机）是没有终端这一概念的。当然我们Linux也可以通过串口外接字符终端，不过这年头有串口的PC也不多了。
虚拟终端就是把一台全功能计算机（比如咱们的PC）通过软件模拟成另外一台计算机的终端设备，因此叫做虚拟终端。
有的人可能会有顾虑：伪终端，是不是里面执行的命令不是真正的Linux命令啊？这些不一样的虚拟终端对命令的执行结果都一样么？不一样？错！一样？还是错！它们根本就不会执行命令，它们只是个界面而已，都是浮云。真正处理命令的不是它们，是Shell。
终端只是负责提供一个输入命令的交互界面而已，在里面运行的命令并不归终端软件去解析，而是找到专门的命令行的程序，这种程序一般称为Shell。
6.1.2 Shell的基本概念
那么Shell又是个什么东西呢？
【Shell的作用】
Shell是啥？是海鲜馆的扇贝？是汽车用的润滑油？都不是，他是一个外壳。什么叫外壳呢？咱们慢慢说。
我们Linux是个内核，这个内核是可以做很多事情的，整个电脑的硬件都归我管。显卡、声卡、内存、硬盘都归我控制；硬盘上的各种程序也归我调度。那么，我应该用这些硬件软件去干点什么事情呢？我不知道，因为没有人给我下命令。下命令的就是人类用户，比如我的懒蜗牛同学。
可是人类用户要做什么操作，靠他拿嘴说，我肯定是听不懂的。因此就需要一个能够把人类用户的操作意图转述给我的软件，这个软件就是Shell。他就像罩在我这个操作系统和人类用户之间的一个外壳一样，在我和人类之间相互转达信息。
![alt](images/00011.jpeg){.tpzz}**提示：**[Shell广义上可以指操作系统和用户接口的界面，图形界面也是一种Shell。因为图形界面的本质也是实现"把人类用户的操作意图转述给内核"。]{.kai1}
【Shell的种类】
Shell有很多种，有bash、csh、ksh等，各有特点。
![alt](images/00002.jpeg){.tpzz} bash------这是最常见的Shell了，全名为Bourne
Again
Shell。基本上多数发行版都用他作为默认的Shell程序。他的各项功能都比较完善，是个全能型选手。
![alt](images/00002.jpeg){.tpzz} csh------也就是C
Shell，之所以叫这个名字，是因为他的语法是按照C语言的风格设计的。人机交互的感受相对好些，但是语法相对复杂，并且执行效率不高。
![alt](images/00011.jpeg){.tpzz}**提示：**[Linux下的csh并不是原先UNIX系统中的C
Shell，而是一个C Shell在Linux下的免费的重实现版本，tc Shell。]{.kai1}
![alt](images/00002.jpeg){.tpzz} ksh------全名Korn
Shell，这也是个很厉害的Shell，功能强大。不过Bash比他出生得晚，因此借鉴了他的大部分优点，于是ksh的使用也就越来越少了。
【Shell的实质】
有的同学说了：说了这幺半天，这个Shell到底是个啥软件啊，我怎么感觉不到他的存在呢？我从来没有运行过他呀。他跟终端有啥关系呢？
Shell，其实就是一个二进制的程序，跟狐狸、gedit他们一样。只不过，Shell的任务不是上网，也不是编辑文件，而是和用户交流。
比如我们Ubuntu系统中，默认的Shell是bash，也就是/bin/bash这个二进制文件。你没有亲自调用过他，是因为每次用户打开终端的时候，终端程序会自动调用用户的Shell。
那么终端怎么知道用户的Shell程序是什么呢？这很简单，在/etc/passwd文件里有记载。比如我们的lanwoniu用户打开了虚拟终端，G终端就找到passwd文件里对应当前用户的一行，类似下面这样：
![alt](images/00250.jpeg){.calibre3}
这一行的最后一段就说明了这个用户的默认Shell是/bin/bash。于是G终端就去叫醒bash，bash起床，通过G终端来跟懒蜗牛用文字交流。那么bash最先说的一句话大概就是"你好"，当然不会这么不专业，这句话用bash的专业语言说出来就是下面这样：
![alt](images/00251.jpeg){.calibre3}
这一行是什么意思呢？
![alt](images/00002.jpeg){.tpzz} "@"之前的，是当前用户的用户名。
![alt](images/00002.jpeg){.tpzz} "@"后面，":"前面是计算机名，这两个都好理解。
![alt](images/00002.jpeg){.tpzz} ":"后面、"\$"前面是当前所在目录，就是当前输入命令的人所在的位置。"～"代表用户的家目录，也就是"/home/\"这个位置。
![alt](images/00002.jpeg){.tpzz} "\$"则是命令提示符，在"\$"后面就可以输入命令了。
![alt](images/00011.jpeg){.tpzz}**提示：**[普通用户的提示符是\$，如果用root登录终端，则提示符是#。但Ubuntu系统默认禁用root用户，所以一般看不到#提示符。]{.kai1}
6.1.3 bash的工作（简单的Shell命令介绍）
正说着，懒蜗牛已经开始敲命令玩了。什么ls、free、top、fdisk等常用命令，挨个试验。于是工作间里也开始忙碌了起来。你可能以为bash会在懒蜗牛的指挥下跑来跑去，执行各种操作。其实完全不是那么回事，bash只是作为一个命令的传达者而已，真正干活的是那些命令们，也就是ls、free这些家伙。