Crawling
r |
|V C
|V C
r |/|V C |
Sensor
|V S |
Overlap
|V S ∩ V C |
r |
|V S ∩ V C
8244
846
92,531
50.684
46,512
88,804
8306
1877
2757
3057
9723
36.9% 912,090
40.0%
95,809
26.7% 438,511
27.2% 227,328
17.1% 294,871
25.3% 443,039
13.0% 193,495
19,583
1928
241,052
147,554
147,780
254,946
55,989
(87.6%)
(91.2%)
(69.7%)
(79.2%)
(54.4%)
(72.8%)
(87.5%)
12.5%
35.1%
65.0%
27.7%
n/a
n/a
n/a
n/a
n/a
n/a
n/a
n/a
7508
833
87,251
35,654
44,062
85,646
7234
n/a
n/a
n/a
n/a
(91.1%)
(98.5%)
(94.3%)
(91.9%)
(94.7%)
(96.4%)
(87.1%)
Sensor Gain Factor
|V S |/|V C |
r |
|V S |/|V C
110.6
113.3
4.7
4.5
6.3
5.0
23.3
n/a
n/a
n/a
n/a
40.8
45.3
1.3
1.2
1.9
1.3
3.0
n/a
n/a
n/a
n/a
Table III: Comparison of P2P node enumeration techniques, measured in numbers of IP addresses found in 24 hours.
In the case of ZeroAccess v2, veriﬁcation of NATed bots
by sensors is possible. Our results show that 98% of the
ZeroAccess v2 peers contacting the sensor also responds to
peer list requests. This type of peer veriﬁcation is generally
impossible for crawlers, as they cannot reach peers in Vn.
Unveriﬁed IP addresses are a problem when reporting
potential infections to CERTs and affected institutions for
incident response. For this reason, we provide high quality
feeds of veriﬁed IP addresses based on our enumeration
efforts to the security community. We also take great care
of identifying other researchers participating in the analyzed
P2P botnets. For example, we identiﬁed two parties who
crawled the Zeus botnet and we excluded their randomly
generated peer IDs from our counts.
We summarize that, although helpful in certain situa-
tions, crawling can generally only provide a limited view
on the overall botnet population. As a result, previously
published botnet population estimates based on crawling
may be skewed. Having said that, we acknowledge that
crawling does have its purpose, as it is not always feasible to
apply sensor injection to a botnet. Another methodological
difference is that crawlers actively enumerate peers, while
sensors are reactive in that they wait to be contacted by
peers. Thus, for an ideal enumeration, one may need to
combine crawling and sensor injection.
C. Convergence Analysis
Another challenge when estimating the size of a botnet
is discussed by Kanich et al. [13]. Infected machines may
have dynamic IP addresses that change regularly. If an IP
address switch happens during the peer enumeration period,
a peer may be counted multiple times, unless the botnet uses
unique IDs (cf. Table II). Therefore, we counted both IP
addresses and peer IDs in our experiments, where possible.
Figure 3 compares these two values for the Zeus botnet. The
upper two lines show the peers that contacted the sensor, the
middle two lines show all crawled nodes (V C ), and the lower
two lines depict the number of reachable nodes that were
found during crawling (V C
r ). Each set of two lines shows
the number of IP addresses (upper line) and peer IDs (lower
sensor: IPs
sensor: IDs
crawl: all IPs
crawl: all IDs
crawl: active IPs
crawl: active IDs
s
P
I
/
s
D
I
f
o
r
e
b
m
u
n
180k
160k
140k
120k
100k
80k
60k
40k
20k
0
 0
 2
 4
 6
 8
 10
 12
 14
 16
 18
 20
 22
 24
hours since enumeration start at 00:00 GMT
Figure 3: Comparison of enumeration methods for Zeus.
line). For both enumeration methods, the lines showing IP
addresses and IDs deviate over time due to IP address churn.
While the number of IDs collected at the sensor converges
towards 140.000 near the end of the time period, there is
no obvious convergence in the other lines. An analysis of a
long-term enumeration run showed that the IP address churn
is signiﬁcant for Zeus. On average, 19% of the bot IDs were
observed on multiple IP addresses during a 24 hour period.
We measured that 3/5 of these IDs appeared on a single
/8 network (possibly IP address churn due to ISP-enforced
redialing), whereas 2/5 of the IDs were observed in multiple
networks (possibly laptops moving among networks). Thus,
the IP address count is a less accurate metric for the true
number of infected hosts than the ID count.
Figure 3 also shows how the crawling and the sensor
node counts develop over time. The steep increase of the
sensor count at the beginning is caused by the fact that all
Zeus peers contact their neighbors every 30 minutes. After
this period, only peers that just learned about the sensor’s
presence and peers that just entered the botnet still contact
the sensor for the ﬁrst time, and the curve ﬂattens. The slight
variations in the lines for both methods are caused by the
105
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:53:41 UTC from IEEE Xplore.  Restrictions apply. 
10k
5k
0
1k
0.5k
0
10k
5k
0
100k
50k
0
2k
1k
0
10k
5k
0
s
P
I
d
e
l
w
a
r
c
f
o
r
e
b
m
u
n
Sality v3
Sality v4
ZeroAccess v1
ZeroAccess v2
Kelihos v3
Zeus
90k
80k
70k
60k
50k
40k
30k
20k
10k
0
-10k
-20k
-30k
09/29
 new peer IDs / day 
dead peer IDs / day 
uniq peer IDs / hour
10/06
10/13
10/20
10/27
11/03
11/10
0
2
4
6
8
10
12
14
16
18
20
22
24
time (hours)
Figure 4: IP address count convergence during a 24h crawl.
1m
500k
0
100k
50k
0
500k
250k
0
200k
100k
r
o
s
n
e
s
t
a
s
P
I
d
e
v
r
e
s
b
o
f
o
r
e
b
m
u
n
0
0
Sality v3
Sality v4
ZeroAccess v2
Zeus
2
4
6
8
10
12
14
16
18
20
22
24
time (hours)
Figure 5: IP address count convergence at a sensor over 24h.