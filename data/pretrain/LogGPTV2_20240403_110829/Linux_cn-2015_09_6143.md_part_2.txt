```
$ sudo vi /etc/apache2/sites-available/cachet.conf
```
```
    ServerName cachethost
    ServerAlias cachethost
    DocumentRoot "/var/www/cachet/public"
        Require all granted
        Options Indexes FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from all
```
启用新虚拟主机和 mod\_rewrite：
```
$ sudo a2ensite cachet.conf
$ sudo a2enmod rewrite
$ sudo service apache2 restart
```
#### Fedora， CentOS 或 RHEL
在基于 Red Hat 系统上，创建一个虚拟主机文件，如下：
```
$ sudo vi /etc/httpd/conf.d/cachet.conf
```
```
    ServerName cachethost
    ServerAlias cachethost
    DocumentRoot "/var/www/cachet/public"
        Require all granted
        Options Indexes FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from all
```
现在重载 Apache 配置：
```
$ sudo systemctl reload httpd.service
```
### 第五步：配置 /etc/hosts 来测试 Cachet
这时候，初始的 Cachet 状态页面应该启动运行了，现在测试一下。
由于 Cachet 被配置为Apache HTTP 服务的虚拟主机，我们需要调整你的客户机的 /etc/hosts 来访问他。你将从这个客户端电脑访问 Cachet 页面。（LCTT 译注：如果你给了这个页面一个正式的主机地址，则不需要这一步。）
打开 /etc/hosts，加入如下行：
```
$ sudo vi /etc/hosts
```
```
    cachethost
```
上面名为“cachethost”必须匹配 Cachet 的 Apache 虚拟主机文件的 ServerName。
### 测试 Cachet 状态页面
现在你准备好访问 Cachet 状态页面。在你浏览器地址栏输入 http://cachethost。你将被转到如下的 Cachet 状态页的初始化设置页面。
![](/data/attachment/album/201509/03/184549jye2h7u7j60v1zj2.jpg)
选择 cache/session 驱动。这里 cache 和 session 驱动两个都选“File”。
下一步，输入关于状态页面的基本信息（例如，站点名称、域名、时区和语言），以及管理员认证账户。
![](/data/attachment/album/201509/03/184615br82urofx1oz1uxd.jpg)
![](/data/attachment/album/201509/03/184635x9f1gkkld9ffy6vv.jpg)
![](/data/attachment/album/201509/03/184703h2t4jbf849tqj9eq.jpg)
你的状态页初始化就要完成了。
![](/data/attachment/album/201509/03/184726ime2x0epam2q6fe0.jpg)
继续创建组件（你的系统单元）、事件或者任意你要做的维护计划。
例如，增加一个组件：
![](/data/attachment/album/201509/03/184756k9d18l4a3l9dhe8d.jpg)
增加一个维护计划：
公共 Cachet 状态页就像这样：
![](/data/attachment/album/201509/03/184819ce2yyh92zki2xqi9.jpg)
集成了 SMTP，你可以在状态更新时发送邮件给订阅者。并且你可以使用 CSS 和 markdown 格式来完全自定义布局和状态页面。
### 结论
Cachet 是一个相当易于使用，自托管的状态页面软件。Cachet 一个高级特性是支持全 JSON API。使用它的 RESTful API，Cachet 可以轻松连接单独的监控后端（例如，[Nagios](http://xmodulo.com/monitor-common-services-nagios.html)），然后回馈给 Cachet 事件报告并自动更新状态。比起手工管理一个状态页它更快和有效率。
最后一句，我喜欢提及一个事。用 Cachet 设置一个漂亮的状态页面是很简单的，但要将这个软件用好并不像安装它那么容易。你需要完全保障所有 IT 团队习惯准确及时的更新状态页，从而建立公共信息的准确性。同时，你需要教用户去查看状态页面。最后，如果没有很好的填充数据，部署状态页面就没有意义，并且/或者没有一个人查看它。记住这个，尤其是当你考虑在你的工作环境中部署 Cachet 时。
### 故障排查
补充，万一你安装 Cachet 时遇到问题，这有一些有用的故障排查的技巧。
1. Cachet 页面没有加载任何东西，并且你看到如下报错。
```
production.ERROR: exception 'RuntimeException' with message 'No supported encrypter found. The cipher and / or key length are invalid.' in /var/www/cachet/bootstrap/cache/compiled.php:6695
```
**解决方案**：确保你创建了一个应用密钥，以及明确配置缓存如下所述。
```
$ cd /path/to/cachet
$ sudo php artisan key:generate
$ sudo php artisan config:cache
```
2. 调用 composer 命令时有如下报错。
```
- danielstjules/stringy 1.10.0 requires ext-mbstring * -the requested PHP extension mbstring is missing from your system.
- laravel/framework v5.1.8 requires ext-mbstring * -the requested PHP extension mbstring is missing from your system.
- league/commonmark 0.10.0 requires ext-mbstring * -the requested PHP extension mbstring is missing from your system.
```
**解决方案**：确保在你的系统上安装了必要的 PHP 扩展 mbstring ，并且兼容你的 PHP 版本。在基于 Red Hat 的系统上，由于我们从 REMI-56 库安装PHP，所以要从同一个库安装扩展。
```
$ sudo yum --enablerepo=remi-php56 install php-mbstring
```
3. 你访问 Cachet 状态页面时得到一个白屏。HTTP 日志显示如下错误。
```
PHP Fatal error:  Uncaught exception 'UnexpectedValueException' with message 'The stream or file "/var/www/cachet/storage/logs/laravel-2015-08-21.log" could not be opened: failed to open stream: Permission denied' in /var/www/cachet/bootstrap/cache/compiled.php:12851
```
**解决方案**：尝试如下命令。
```
$ cd /var/www/cachet
$ sudo php artisan cache:clear
$ sudo chmod -R 777 storage
$ sudo composer dump-autoload
```
如果上面的方法不起作用，试试禁止 SELinux：
```
$ sudo setenforce 0 
```
---
via: 
作者：[Dan Nanni](http://xmodulo.com/author/nanni) 译者：[wyangsun](https://github.com/wyangsun) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出