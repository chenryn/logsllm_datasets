在其中创建文件“ openssl-graylog.cnf ”并填写下面的内容; 定制它以满足您的需求：
`[req]  
`
`distinguished_name = req_distinguished_name  
`
`x509_extensions = v3_req  
`
`prompt = no`
`＃有关证书颁发者的详细信息  
`
`[req_distinguished_name]  
`
`C = US  
`
`ST = NY  
`
`L = NY  
`
`O = Graylog  
`
`OU = Graylog  
`
`CN = logger.graylog.com`
`[v3_req]  
`
`keyUsage = keyEncipherment，dataEncipherment  
`
`extendedKeyUsage = serverAuth  
`
`subjectAltName = [@alt_names](https://github.com/alt_names "@alt_names")`
`＃证书应包含的IP地址和DNS名称＃IP 地址和DNS的`  
`IP地址### DNS名称的`  
`###，“###”是连续的数。  
[alt_names]  
IP.1 = 127.0.0.1  
DNS.1 = logger.graylog.com`
`注： 请确保将配置文件中的'IP.1 = 127.0.0.1'值更改为Graylog服务器的IP地址。`
创建一个PKCS＃5私钥（PKCS5-plain.pem）和X.509证书（graylog。CRT）：
`sudo openssl req -x509 -days 365 -nodes -newkey rsa：2048 -config openssl-graylog.cnf -keyout pkcs5-plain.pem -out graylog.crt`
将您的PKCS＃5私钥到未加密的 PKCS＃8私钥（graylog。键）：
`sudo openssl pkcs8 -in pkcs5-plain.pem -topk8 -nocrypt -out graylog.key`
当使用HTTPS的Graylog REST API，X.509证书（graylog，CRT在这种情况下）
必须信任由JVM信任存储，否则通信将失败。由于我们不想与官方信任存储库混淆，因此我们将制作一份与我们的Graylog证书一起使用的副本。
`sudo cp -a / usr / lib / jvm / java-8-openjdk-amd64 / jre / lib / security /
cacerts / etc / graylog / server / ssl /  
sudo keytool -importcert -keystore / etc / graylog / server / ssl / cacerts
-storepass changeit -alias graylog-self-signed -file
/etc/graylog/server/ssl/graylog.crt`
证书现在应该可以使用了。编辑Graylog的配置文件（/etc/graylog/server/server.conf）并找到并更改下面的设置：
`#REST API设置  
`
`rest_enable_tls = true  
`
`rest_tls_cert_file = /etc/graylog/server/ssl/graylog.crt  
`
`rest_tls_key_file = /etc/graylog/server/ssl/graylog.key`
`#Web界面设置`
```  
web_enable_tls = true  
`
`web_tls_cert_file = / etc / graylog / server /ssl/graylog.crt  
`
`web_tls_key_file = /etc/graylog/server/ssl/graylog.key`
注：对于运行Graylog进程的系统用户，证书和密钥文件需要可读（644权限对两个文件均可正常工作）。
我们完成了！只需重新启动Graylog，并且您应该能够通过`https：// [IP_ADDRESS]登录到您的管理控制台：9000 /`
`sudo service graylog-server restart`
如果您有任何登录问题，请参阅Graylog2的HTTPS安装[文档](http://docs.graylog.org/en/2.4/pages/configuration/https.html)和Graylog的日志文件（/var/log/graylog-server/server.log）以进行故障排除。
自动化：
如果您完整安装一遍，会发现安装Graylog可能有点麻烦，所以我编写了一个[脚本](https://github.com/V1V1/Graylog-Setup)来自动执行上述所有安装步骤。
保护Graylog：
您应该了解将来自攻击基础架构的所有日志集中在一个地方的风险。您聚合的日志越多，日志服务器携带的风险就越高; 一个妥协可能会暴露你的整个操作。
下表显示了Graylog的默认侦听端口：
一些简单的防火墙规则可以保护您的Graylog安装，特别是如果您使用VPN服务器来控制对攻击基础架构的管理端口的访问时，可以发挥很大的作用。
以下是一些iptables规则示例，您可以将其应用于您的Graylog服务器以限制其攻击面。
`＃默认策略`
```  
-P INPUT DROP`
```  
-P FORWARD DROP  
`
`-P OUTPUT ACCEPT`
`＃允许建立连接  
`
`-A INPUT -m状态--state RELATED，ESTABLISHED -j ACCEPT`
`＃允许来自本地环回接口的流量`
```  
-A INPUT -i lo - j ACCEPT`
`＃仅允许来自特定IP地址的SSH连接，例如VPN`
```  
-A INPUT -s [ VPN_IP_ADDRESS ] / 32 -p tcp -m tcp --dport 22 -j ACCEPT`
`＃仅允许从特定IP地址连接到Graylog管理，例如VPN`
```  
-A INPUT -s [ VPN_IP_ADDRESS ] / 32 -p tcp -m tcp --dport 9000 -j ACCEPT`
`＃仅允许来自攻击基础架构资产的Rsyslog通信（1行每个资产）`
`````  
-A INPUT -s [ ASSET_IP_ADDRESS ] / 32 -p tcp -m tcp --dport 5140 -j ACCEPT`
```  
-A INPUT -s [ ASSET_IP_ADDRESS] / 32 -p tcp -m tcp --dport 5140 -j ACCEPT`
```  
-A INPUT -s [ ASSET_IP_ADDRESS ] / 32 -p tcp -m tcp --dport 5140 -j ACCEPT`
```  
-A INPUT -s [ ASSET_IP_ADDRESS ] / 32 - p tcp -m tcp --dport 5140 -j ACCEPT`
注意：上述规则集的最后一部分将在下一篇文章中详细介绍。
**结论：**
我们的日志记录服务器已启动并正在运行，下一篇文章将介绍如何从各种基础架构资产中设置日志的汇总。
## 参考文献