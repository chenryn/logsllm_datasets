### Introduction
Connect to the video adapter.

### Meet CHUCKWAGON
- **DDC to I2C Converter**: CHUCKWAGON is a DDC to I2C converter.
- **Breadboard Friendly**: Designed for easy prototyping on a breadboard.
- **Logic Level Converters for I2C**: Includes logic level converters for I2C communication.
- **Power Supply**: Supplies 5V from the target (not available on all VGA connectors).
- **Power Indicator**: Features a power indicator for easy status monitoring.

**Presented by:**
- Josh Datko and Teddy Reed
- DEF CON 22
- DIY Hardware Implant over I2C
- August 10, 2014

### CHUCKWAGON Schematic
[Insert schematic image here]

### CHUCKWAGON Board
[Insert board image here]

### I2C Hack Not That New...
This type of I2C hack has been seen before, as featured on Hackaday.

### Add the CHUCKWAGON
[Insert relevant image or diagram here]

### Connect to GSM Module
- **Connection Details**:
  - Connect to the GSM Shield from the BeagleBone Black (BBB) using UART4, which is broken out by ATmega’s program jumpers.
  - Use software-serial pins D7 and D8 on the GSM shield.
  - Verify the datasheet for correct connections.
  - Logic level converters are required for this setup.

### Completed Hardware with Battery
[Insert image of completed hardware with battery here]

### Measuring Current
- **Tool**: Dave Jones’ µCurrent Gold
- **Usage**: Trusted by hardware implant designers for accurate current measurements.

### Completed Hardware without Battery
[Insert image of completed hardware without battery here]

### Software Flow
[Insert software flow diagram here]

### Usage
1. **Get Malware on Target**: Deploy malware on the target system.
2. **Attach CHUCKWAGON**: Use CHUCKWAGON for exfiltration or control.
   - If the software on the target can communicate with the implant:
     - The target can exfiltrate data to the implant, which can then send it via GSM.
     - The target can store data on the implant.
     - The implant can provide code for the target to execute.
     - Control the implant over GSM to control the target.

**Significance**:
- I2C via the video adapter is an always-on, bi-directional bus present in every laptop, PC, or server.

### Accessorize!
- **Prepared for Anything or NSA Hacking Toolkit?**
  - [Insert relevant image or diagram here]

### How to Improve the CHUCKWAGON
- **CHUCKWAGON Rev. B**:
  - Consolidate into one board: ImplantCape
  - HDMI footprint instead of VGA
  - Can be done from AVR (less power), but BBB provides more options and is more fun.
  - Combine with SALSAFLOCK for an implant plus RF retroreflector.

### Using Crypto for Evil!
- **History of Cryptography and Malware**:
  - Examples include PC Cybord (1989), Macintosh SE/30 cryptovirus PoC (1996), Gpcode.AG/AK (2006), CryptoLocker (2013), and others.
  - Techniques such as packers, obfuscators, and VM-based JIT have been used to reverse anti-analysis.
  - Recent examples include TPM “cloaking” malware (2011), Uroburos (2014), and TPM-enabled super-targeted malware (2014).

### The CryptoCape
- **Features**:
  - I2C friendly
  - Protected RSA private key storage
  - Windows 8 friendly
  - Optional, as most systems already have an onboard TPM

### Cloaking Malware with the Trusted Platform Module
- **Summary**: Use TPM-protected keys and Intel TXT PAL to protect malicious code execution from observation, analysis, and tampering.
- **Intel TXT and Remote Attestation**: These are complex but generating a public key on a TPM and using it to encrypt additional payloads is straightforward.
- **Benefits**: Protect against network interception and restrict analysis to the target machine upon discovery.

### TPM-enabled Super-Targeted Malware
- **Windows 8**: Automatically enables and initializes a TPM, managing the owner password.
- **Access to TPM**: Abstracted through Microsoft CSP.
- **Process Creation and Memory Management**:
  - `CreateProcess`
  - `ZwUnmapViewOfSection`
  - `VirtualAllocEx`
  - `WriteProcessMemory`
  - Python pefile to inject encrypted PE sections into a decryption stub.

### tpm-malcrypt
- **GitHub Repository**: [tpm-malcrypt](https://github.com/theopolis/tpm-malcrypt)
- **Tools**:
  - `tpm-keyextract`: Create and exfiltrate a storage public key.
  - `malcrypter`: Encrypt and inject into a decryption stub.
  - `malcrypt`: Decryption stub for process creation and injection.

### Malicious Exfiltration via Audio
- **Backstory**: #badBIOS was thought to use audio for out-of-band exfiltration or C&C, dismissed as infeasible by BIOS development experts.
- **Data of Audio Protocols**: Well-defined and resilient, using QPSK10 (10 baud) and QPSK05 (5 baud) for forward error correction.
- **Pivoting**: Possible to pivot through colluding machines, creating a mesh of audio-capable relays such as idle headphones.

### Demos, Learning, and Fabulous Prizes
- **Join Us**: For CryptoCape and WAGONBED demos in the HHV.
- **Challenge**: Solve the puzzle at [theopolis.github.io/tpm-malcrypt/challenge.html](http://theopolis.github.io/tpm-malcrypt/challenge.html).
- **Prizes**: The first 5 correct submissions win a DIY hardware implant kit (no hardware hacking experience required).

**Thank You!**

### Upcoming Book
- **Preorder Code**: BBSAeB at packtpub.com.
- **Topics Covered**:
  - Setting up a Tor bridge and building a custom front panel.
  - Two-factor authentication with a Fingerprint scanner and the CryptoCape.
  - Using the TPM to protect GPG keys.
  - Running an IRC gateway with BitlBee, ZNC, and OTR for protected chat.

### POC Code
- **CHUCKWAGON Sketch and Scripts**: [GitHub Repository](https://github.com/NSAPlayset/CHUCKWAGON)

### i2cdetect on BBB
- [Insert relevant image or output here]

### i2cdetect on Target
- [Insert relevant image or output here]

### chuckwagon util on BBB
- [Insert relevant image or output here]

### chuckwagon util on Target
- [Insert relevant image or output here]

### BBB Starting the GSM Module
- [Insert relevant image or output here]

### BBB Waiting on Text Message
- [Insert relevant image or output here]

### Receiving the Message on the Target
- [Insert relevant image or output here]

### Executing the Text Message
- [Insert relevant image or output here]

**Presented by:**
- Josh Datko and Teddy Reed
- DEF CON 22
- DIY Hardware Implant over I2C
- August 10, 2014

---

This optimized version aims to provide a clear, coherent, and professional presentation of the information.