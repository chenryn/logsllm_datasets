Bothpartitioningandjoinconditionscanbecomplexcombina- 1
createtheintervals(−∞,0)and(10,∞). Iftheparticularcondi-
tionsofANDandORsubexpressions,aswellasinvolveanyoper-
tiondoesnotinvolveR.a,thentheintervalcreatedis(−∞,∞),as
atorin{=,=,,≥}. Ourimplementationhandlesallthese
anyvalueforR.aispossible.
cases by restricting PITs to unidimensional indexes and handling
Ourapproachcanalsosupportnonequijoins,forexampleR.a<
complexexpressionsappropriatelyinthematchingalgorithm.
S.a. The PIT was adjusted in order to efficiently find all inter-
4.2 MatchingAlgorithm vals in the PIT that are to the left or to the right of the provided
interval. Suppose A = (A1,A2) is an interval in the PIT and
Figure5providesallthestepsforthematchingalgorithm. The
B = (B1,B2)istheprobinginterval. TheintervalAismarked
inputconsistsofthetwotablestobejoinedandthejoincondition.
asanoverlappingintervalif∃α∈A,β∈Bsuchthatα<β. Note
WewilldescribethealgorithmusingqueryQ inourrunningex-
1 thatthischeckisequivalenttofindingallintervalsinthePITthat
amplefromSection1. ThejoinconditionforS  T inQ isa
1 overlapwiththeinterval(−∞,B2).
simpleequalityexpression:S.a=T.a.Later,wewilldiscusshow
Finally, wesupportcomplexjoinexpressionsinvolvinglogical
the algorithm handles more complex conditions involving logical
ANDsandORs. Supposethejoinconditionis(R.a = S.aAND
ANDandORoperators,aswellasnonequijoinconditions. Since
R.b = S.b). Inthiscase,twoPITswillbebuilt;oneforR.aand
thematchingphaseisexecutedonlyiftheApplicabilityTestpasses
oneforR.b.AfterprobingthetwoPITs,wewillgettwosetsofjoin
(seeSection3),theattributesS.aandT.amustappearintheparti-
pairs.Wethenadjustthepairsbasedonwhetherthejoinconditions
tioningconditionsforthepartitionsofSandT respectively.
areANDedorORedtogether. Intheexampleabove,supposethat
The table with the smallest number of (unpruned) partitions is
R canjoinwithS basedonR.a,andthatR canjoinwithboth
identifiedasthebuildrelationandtheotherastheproberelation. 1 1 1
S and S based on R.b. Since the two binary join expressions
Inourexample,T (with3partitions)willbethebuildrelationand 1 2
are ANDed together, we induce that R can join only with S .
S(with4partitions)willbetheprobeone.Sincepartitionpruning 1 1
However,ifthejoinconditionwere(R.a = S.aORR.b = S.b),
is performed before any joins are considered, only the unpruned
thenwewouldinducethatR canjoinwithbothS andS .
child tables are used for building and probing the PIT. Then, the 1 1 2
matchingalgorithmworksasfollows: 4.4 ComplexityAnalysis
• Buildphase:ForeachchildtableT ofT,generatetheinterval Suppose N and M are the number of partitions for the build
i
forT ’spartitioningcondition(explainedinSection4.3).Build andproberelationsrespectively. Alsosupposeeachpartitioncon-
i
aPITthatindexesallintervalsfromthechildtablesofT. ditionistranslatedintoasmall, fixednumberofintervals(which
• Probephase: ForeachchildtableS ofS,generatetheinter- isusuallythecase). Infact,asimplerangepartitioningcondition
j
valintforS ’spartitioningcondition.ProbethePITonT.ato will generate exactly one interval. Then, building a PIT requires
j
findintervalsoverlappingwithint.OnlyT’schildtablescorre- O(N ×logN) time. Probing a PIT with a single interval takes
Algorithmforclusteringtheoutputofthematchingphase
Input:Partitionjoinpairs(outputofmatchingphase)
Output:Clusteredjoinpairs(whichwillbeinputtopathcreationphase)
Buildabipartitejoingraphfromtheinputpartitionjoinpairswhere:
Childtablesarethevertices,and
Partitionjoinpairsaretheedges;
UseBreadth-First-Searchtoidentifyconnectedcomponentsinthegraph;
Outputaclusteredjoinpairforeachconnectedcomponent;
Figure7:Clusteringalgorithm
joinpairs. Eachchildtableisavertexinthisbipartitegraph,and
Figure6:ClusteringalgorithmappliedtoexamplequeryQ
1 eachjoinpairformsanedgebetweenthecorrespondingvertices.
O(min(N,k×logN))time,wherekisthenumberofmatching Figure6showsthejoinpartitiongraphforourexample. Breadth-
intervals. Hence,theoveralltimetoidentifyallpossiblechildjoin First-Searchisusedtoidentifyalltheconnectedcomponentsinthe
pairsisO(M ×min(N,k×logN)). joinpartitiongraph. Eachconnectedcomponentwillgivea(pos-
The space overhead introduced by a PIT is θ(N) since it is a siblyclustered)joinpair. FollowingourexampleinFigure6,S 12
binarytree.However,aPITcanbereusedmultipletimesduringthe willbeclusteredwithS 13,S 22withS 23,andT 1withT 2,forming
optimizationprocess. Considerthejoincondition(R.a=S.aAND theoutputoftheclusteringphaseconsistingofthetwo(clustered)
S.a=T.a)fortablesR,S,andT inQ 1.APITbuiltforS.acanbe joinpairs({S 12,S 13},{T 1,T 2})and({S 22,S 23},{T 3}).
(re)usedforperformingthematchingalgorithmwhenconsidering 6. PATHCREATIONANDSELECTION
thejoinsRS,S T,(RS)T,and(S T)R.
Wewillnowconsiderhowtocreateandcostjoinpathsforall
5. CLUSTERINGPHASE the (clustered) child joins output by the clustering phase, as well
Thenumberofjoinpairsoutputbythematchingphasecanbe astheunionofthebestchild-joinpaths. Joinpathcreationhasto
large, e.g., when each child table of R joins with multiple child be coupled tightly with the physical join operators supported by
tables of S. In such settings, it becomes important to reduce the thedatabasesystem. AsdiscussedinSection1.2,wewillleverage
numberofjoinpairsthatneedtobeconsideredduringjoinpathcre- thefunctionalityofabottom-upqueryoptimizer[19]tocreatejoin
ationtoavoidbothoptimizationandexecutioninefficiencies. Join pathsforthedatabasesystem.Themainchallengeishowtoextend
pathcreationintroducesoptimization-timeoverheadsforenumer- the enumeration and path retention aspects of a bottom-up query
atingjoinoperators,accessingcatalogs,andcalculatingcardinality optimizerinordertofindtheoptimalplaninthenewextendedplan
estimates. Duringexecution,ifmultiplechild-joinpathsreference spaceefficiently.
thesamechildtableR ,thenR willbeaccessedmultipletimes;a Definition2. Optimal plan in the extended plan space: In ad-
i i
situationwewanttoavoid. ditiontothedefaultplanspaceconsideredbythebottom-upopti-
The approach we use to reduce the number of join pairs is to mizerforann-way(n≥2)joinofparenttables,theextendedplan
clustertogethermultiplechildtablesofthesameparenttable.Fig- spaceincludestheplanscontaininganypossiblejoinorderandjoin
ure 6 considers S  T for query Q from Section 1. The six pathforjoinsofthechildtablessuchthateachchildtable(parti-
1
partition-wise join pairs output by the matching phase are shown tion)isaccessedatmostonce. Theoptimalplanistheplanwith
ontheleft. Noticethatthejoinpairs(S ,T )and(S ,T )indi- leastestimatedcostintheextendedplanspace. 
22 3 23 3
catethatbothS 22andS 23canjoinwithT 3topotentiallygenerate We will discuss three different approaches on how to extend the
outputrecords. IfS 22 isclusteredwithS 23,thenthesingle(clus- bottom-upoptimizertofindtheoptimalplanintheextendedplan
tered)join(S 22∪S 23)T 3willbeconsideredinthepathcreation space.QueryQ 1fromSection1isusedasanexamplethroughout.
phaseinsteadofthetwojoinsS 22  T 3 andS 23  T 3. Further- NotethatQ 1joinsthethreeparenttablesR,S,andT. ForQ 1,
more, becauseoftheclustering, thechildtableT 3 willhaveonly abottom-upoptimizerwillconsiderthethree2-wayjoinsRS,
oneaccesspath(say,atableorindexscan)inQ 1’splan. R  T, S  T, and the single 3-way join R  S  T. For
Definition1. Clustering metric: For an R  S join, two (un- eachjoinconsidered,theoptimizerwillfindandretainthebestjoin
pruned)childtablesS andS ofS willbeclusteredtogetheriff pathforeachinterestingorderandthebest“unordered”path. Sort
j k
thereexistsa(unpruned)childtableR ofRsuchthatthematching ordersonR.a,S.a,andT.aarethecandidateinterestingordersfor
i
phaseoutputsthejoinpairs(R i,S j)and(R i,S k).  Q 1. Whentheoptimizerisconsideringann-wayjoin,itonlyuses
thebestjoinpathsretainedforsmallerjoins.
IfS andS areclusteredtogetherwhennosuchR exists, then
j k i
theunionofS andS willleadtounneededjoinswithchildtables 6.1 ExtendedEnumeration
j k
ofR; hurtingplanperformanceduringexecution. Inourrunning Thefirstapproachistoextendtheexistingpathcreationprocess
exampleinFigure6,supposeweclusterS 22 withS 13. Then,S 22 thatoccursduringtheenumerationofeachpossiblejoin. Theex-
willhavetobeconsideredunnecessarilyinjoinswithT 1andT 2. tendedenumerationincludesthepathrepresentingtheunionofthe
On the other hand, failing to cluster S j and S k together when bestchild-joinpathsforthejoin. Forinstance,aspartoftheenu-
the matching phase outputs the join pairs (R i,S j) and (R i,S k) merationprocessforqueryQ 1,theoptimizerwillcreateandcost
wouldresultinconsideringjoinpathsseparatelyforR i S j and joinpathsforS T. Theconventionaljoinpathsincludejoining
R i  S k. The result is higher optimization overhead as well as the union of S’s partitions with the union of T’s partitions using
access of R i in at least two separate paths during execution. In allapplicablejoinoperators(likehashjoinormergejoin),leading
ourexample,ifweconsiderseparatejoinpathsforS 22  T 3 and toplanslikeQ 1P 1 inFigure3. Atthispoint,extendedenumera-
S 23 T 3,thenpartitionT 3willbeaccessedtwice. tionwillalsocreatejoinpathsfor(S 12∪S 13)  (T 1∪T 2)and
Clustering algorithm: Figure 7 shows the clustering algorithm (S ∪S )  T , findthecorrespondingbestpaths, andcreate
22 23 3
thattakesasinputthejoinpairsoutputbythematchingphase.The theunionofthebestchild-joinpaths. WewillusethenotationP
u
algorithm first constructs the join partition graph from the input inthissectiontodenotetheunionofthebestchild-joinpaths.
Asusual,thebottom-upoptimizerwillretainthebestjoinpath
foreachinterestingorder(ainthiscase)aswellasthebest(pos-
sibly unordered) overall path. If P is the best for one of these
u
categories,thenitwillberetained. Thepathsretainedwillbethe
only paths considered later when the enumeration process moves
ontolargerjoins. Forexample,whencreatingjoinpathsfor(S 
T)  R,onlythejoinpathsretainedforS  T willbeused(in
additiontotheaccesspathsretainedforR).
Property1. Adding extended enumeration to a bottom-up opti-
mizer will not always find the optimal plan in the extended plan
space. 
WewillproveProperty1usingourrunningexample.Supposeplan
P forS  T isnotretainedbecauseitisnotabestpathforany
u
order. Without P for S  T, when the optimizer goes on to
u
consider(S  T)  R,itwillnotbeabletoconsiderany3-way
childjoin.Thus,planssimilartoQ P fromFigure3willneverbe
1 2
considered;therebylosingtheopportunitytofindtheoptimalplan
intheextendedplanspace.
6.2 TreatingPartitionsasaPhysicalProperty Figure 8: Logical relations (with child relations) enumerated
forqueryQ byourpartition-awarebottom-upoptimizer
Thenextapproachconsiderspartitioningasaphysicalproperty 1
oftablesandtheoutputofpartition-wisejoins.Theparalleledition S  T, R  S  T)only. Anapparentsolutionwouldbefor
ofDB2followsthisapproach.Theconceptofinterestingpartitions theoptimizertocreateunionplansforallpossiblecombinationsof
(similartointerestingorders)canbeusedtoincorporatepartition- child-join paths with interesting orders. However, the number of
ing as a physical property in the bottom-up optimizer. Interest- such plans is exponential in the number of child joins per parent
ingpartitionsarepartitionsonattributesreferencedinequalityjoin join,renderingthisapproachimpractical.
conditionsandongroupingattributes[18]. Inourexamplequery
6.3 TreatingPartitionsasaLogicalProperty
Q ,partitionsonattributesR.a,S.a,andT.aareinteresting.
1
Pathswithinterestingpartitionscanmakelaterjoinsandgroup- Ourapproacheliminatestheaforementionedproblemsbytreat-
ing operations less expensive when these operations can take ad- ing partitioning as a property of the logical relations (tables or
vantage of the partitioning. For example, partitioning on S.a for joins)thatareenumeratedduringthebottom-upoptimizationpro-
S  T could lead to the creation of three-way child joins for cess. Alogicalrelationreferstotheoutputproducedbyeitherac-
RS T.Hence,theoptimizerwillretainthebestpathforeach cessingatableorjoiningmultipletablestogether.Forexample,the
interestingpartition,inadditiontoeachinterestingorder. Overall, logical relation (join) RST represents the output produced when
ifthereareninterestingordersandminterestingpartitions,then joiningthetablesR,S,andT,irrespectiveofthejoinorderorthe
theoptimizercanretainupton×mpaths,oneforeachcombina- joinoperatorsusedinthephysicalexecutionplan. Figure8shows
tionofinterestingordersandinterestingpartitions. alllogicalrelationscreatedduringtheenumerationprocessforour
examplequeryQ .
Property2. Treatingpartitioningasaphysicalpropertyinabottom- 1
AsillustratedinFigure8, eachlogicalrelationmaintainsalist
upoptimizerwillnotalwaysfindtheoptimalplanintheextended
planspace.  oflogicalchildrelations. Alogicalchildtableiscreatedforeach
unprunedpartitionduringpartitionpruning,whereaslogicalchild
Once again we will prove the above property using the example
joinsarecreatedbasedontheoutputoftheclusteringphase. For
query Q . When the optimizer enumerates paths for S  T, it
1 ourexamplequeryQ ,thechild-joinpairs({S ,S },{T ,T })
will consider P (the union of the best child-join paths). Unlike 1 12 13 1 2
u and({S ,S },{T })outputbytheclusteringphaseareusedto
whathappenedinextendedenumeration,P willnowberetained 22 23 3
u createtherespectivelogicalchildjoinsS S T T andS S T .
sinceP hasaninterestingpartitiononS.a. Supposethefirstand 12 13 1 2 22 23 3
u Thelogicalchildrelationsalsomaintainthepartitioningconditions,
secondchildjoinsofP havetherespectivejoinpaths(S ∪S )
u 12 13 whicharepropagatedupwhenthechildjoinsarecreated.
HJ (T ∪T ) and (S ∪S ) HJ T . (HJ and MJ denote hash
1 2 22 23 3 Foreachlogicaln-wayjoinrelationJ =J J ,thelogi-