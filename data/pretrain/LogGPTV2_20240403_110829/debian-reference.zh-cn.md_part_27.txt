相关软件包）。
• 它们有自己的GUI和命令行程序来作为用户界面。
• 它们有自己的后台守护进程（daemon）作为它们的系统后端。
• 它们使你可以简单地将系统连接到网络。
• 它们使你可以简单地管理有线和无线网络的配置。
• 它们允许你配置网络而不依赖传统的ifupdown软件包。
注意
不要在服务器上使用这些自动网络配置工具。它们主要针对于笔记本电脑上的移动桌面用户。
这些现代的网络配置工具需要进行适当的配置，以避免与传统 ifupdown 软件包发生冲突，它的配置文件位于
“/etc/network/interfaces”。
5.2.1 图形界面的网络配置工具
Debian系统NM的官方文档位于“/usr/share/doc/network-manager/README.Debian”。
本质上，如下操作即可完成桌面的网络配置。
1. 通过下列命令使桌面用户foo归属“netdev”组（另外，例如GNOME和KDE这样的现代桌面环境会通过
D-bus自动完成该操作）。
$ sudo usermod -a -G foo netdev
Debian参考手册 99/233
2. 使“/etc/network/interfaces”的配置保持下面那样简洁。
auto lo
iface lo inet loopback
3. 通过下列命令重新启动NM。
$ sudo systemctl restart network-manager
4. 通过图形界面配置网络。
注意
只有不列在“/etc/network/interfaces”中的接口会被NM管理，以避免与ifupdown的冲突。
提示
如 果 你 想 扩 展 NM 的 网 络 配 置 功 能， 请 寻 找 适 当 的 插 件 模 块 和 补 充 软
件 包， 例 如 network-manager-openconnect、network-manager-openvpn-gnome、
network-manager-pptp-gnome、mobile-broadband-provider-info、gnome-bluetooth 等 等。
5.3 没有图像界面的现代网络配置
使用systemd的系统中，可以在/etc/systemd/network/里配置网络。参见systemd-resolved(8)、resolved.conf(5)
和systemd-networkd(8)。
这个允许在没有图像界面的情况下配置现代网络。
DHCP客户端的配置可以通过创建”/etc/systemd/network/dhcp.network”文件来进行设置。例如：
[Match]
Name=en*
[Network]
DHCP=yes
一个静态网络配置能够通过创建”/etc/systemd/network/static.network”来设置.比如：
[Match]
Name=en*
[Network]
Address=192.168.0.15/24
Gateway=192.168.0.1
5.4 The modern network configuration for cloud
Themodernnetworkconfigurationforcloudmayusecloud-initandnetplan.iopackages(see第 3.7.4 节).
Thenetplan.iopackagesupportssystemd-networkdandNetworkManagerasitsnetworkconfigurationbackends,
andenablesthedeclarativenetworkconfigurationusingYAMLdata. WhenyouchangeYAML:
• Run”netplan generate”commandtogenerateallthenecessarybackendconfigurationfromYAML.
Debian参考手册 100/233
• Run”netplan apply”commandtoapplythegeneratedconfigurationtothebackends.
See”Netplandocumentation”,netplan(5),netplan-generate(8),andnetplan-apply(8).
Seealso”Cloud-initdocumentation”(especiallyaround”Configurationsources”and”NetplanPassthrough”)forhowcloud-init
canintegratenetplan.ioconfigurationwithalternativedatasources.
5.4.1 The modern network configuration for cloud with DHCP
ADHCPclientconfigurationcanbesetupbycreatingadatasourcefile”/etc/netplan/50-dhcp.yaml”:
network:
version: 2
ethernets:
all-en:
match:
name: ”en*”
dhcp4: true
dhcp6: true
5.4.2 The modern network configuration for cloud with static IP
Astaticnetworkconfigurationcanbesetupbycreatingadatasourcefile”/etc/netplan/50-static.yaml”:
network:
version: 2
ethernets:
eth0:
addresses:
- 192.168.0.15/24
routes:
- to: default
via: 192.168.0.1
5.4.3 The modern network configuration for cloud with Network Manger
ThenetworkclientconfigurationusingNetworkMangerinfrastructurecanbesetupbycreatingadatasourcefile”/etc/netplan/00-network-manager.yaml”:
network:
version: 2
renderer: NetworkManager
5.5 底层网络配置
在Linux上的底层网络配置，使用iproute2程序(ip(8),…).
5.5.1 Iproute2 命令
Iproute2命令集提供完整的底层网络配置能力。有个从旧的net-tools命令集到新的iproute2命令集的转换表。
Seeip(8)andLinuxAdvancedRouting&TrafficControl.
Debian参考手册 101/233
旧的net-tools 新的iproute2 操作
ifconfig(8) ip addr 一个设备上的协议（IP或IPv6）地址
route(8) ip route 路由表条目
arp(8) ip neigh ARP或NDISC缓存条目
ipmaddr ip maddr 多播地址
iptunnel ip tunnel IP隧道
nameif(8) ifrename(8) 基于MAC地址的网络接口名
mii-tool(8) ethtool(8) 以太网设备设置
Table5.3: 从旧的net-tools命令集到新的iproute2命令集转换表
命令 说明
ip addr show 显示活动的网络接口连接和地址状态
route -n 用数字地址显示全部路由表
ip route show 用数字地址显示全部路由表
arp 显示当前ARP缓存表的内容
ip neigh 显示当前ARP缓存表的内容
plog 显示ppp后台守护进程（daemon）日志
ping yahoo.com 检查到”yahoo.com”的因特网连接
whois yahoo.com 在域名数据库里面检查谁注册了”yahoo.com”
traceroute yahoo.com 跟踪到”yahoo.com”的因特网连接
tracepath yahoo.com 跟踪到”yahoo.com”的因特网连接
mtr yahoo.com 跟踪到”yahoo.com”的因特网连接（重复的）
dig [@dns-server.com] 查询由”dns-server.com”提供服务的”example.com”域名的
example.com [{a|mx|any}] DNS记录：”a”,”mx”或”any”记录
iptables -L -n 查看包过滤
netstat -a 找出所有打开的端口
netstat -l --inet 找出监听端口
netstat -ln --tcp 找出TCP监听端口（数字的）
dlint example.com 查询”example.com”的DNSzone信息
Table5.4: 底层网络命令列表
Debian参考手册 102/233
5.5.2 安全的底层网络操作
你可以按下面的方式安全的使用底层网络命令，这些命令不会改变网络配置。
提示
部分底层网络配置工具放在”/usr/sbin/”目录。你可以像”/usr/sbin/ifconfig”这样使用完整命令路径，或
把”/usr/sbin”加到”~/.bashrc”文件列出的”$PATH”环境变量里。
5.6 网络优化
通用的网络优化超出了本文的范围。我提及消费等级连接相关的主题。
软件包 流行度 大小 说明
iftop V:7,I:102 93 显示一个网络接口上的带宽使用信息
iperf V:3,I:44 360 互联网协议带宽测量工具
ifstat V:0,I:7 59 接口统计监控
bmon V:1,I:17 144 便携式带宽监视器和网速估计工具
ethstatus V:0,I:3 40 快速测量网络设备吞吐的脚本
bing V:0,I:0 80 实验性的随机带宽测试器
bwm-ng V:1,I:14 95 小巧简单的控制台带宽监测器
ethstats V:0,I:0 23 基于控制台的以太网统计监视器
ipfm V:0,I:0 82 带宽分析工具
Table5.5: 网络优化工具列表
5.6.1 找出最佳 MTU
网络管理器通常会自动设置最佳最大传输单元(MTU)。
在一些场景中，在用ping(8)加上”-M do”选项发送各种大小的ICMP报文数据包进行实验后，你希望可以手动设置
MTU。MTU是最大可完成没有IP分片的数据包大小加上28字节（IPv4）或48字节（IPv6）。下面的列子，发现IPv4
连接的MTU是1460，IPv6连接的MTU是1500。
$ ping -4 -c 1 -s $((1500-28)) -M do www.debian.org
PING (149.20.4.15) 1472(1500) bytes of data.
ping: local error: message too long, mtu=1460
--- ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms
$ ping -4 -c 1 -s $((1460-28)) -M do www.debian.org
PING (130.89.148.77) 1432(1460) bytes of data.
1440 bytes from klecker-misc.debian.org (130.89.148.77): icmp_seq=1 ttl=50 time=325 ms
--- ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 325.318/325.318/325.318/0.000 ms
$ ping -6 -c 1 -s $((1500-48)) -M do www.debian.org
PING www.debian.org(mirror-csail.debian.org (2603:400a:ffff:bb8::801f:3e)) 1452 data bytes
1460 bytes from mirror-csail.debian.org (2603:400a:ffff:bb8::801f:3e): icmp_seq=1 ttl=47 ←-
time=191 ms
--- www.debian.org ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 191.332/191.332/191.332/0.000 ms
Debian参考手册 103/233
这个过程是路径MTU(PMTU)发现(RFC1191)，tracepath(8)命令能够自动完成这个。
网络环境 MTU 基本原理
拨号连接(IP:PPP) 576 标准的
以太网连接(IP:DHCP或固定) 1500 默认标准值
Table5.6: 最佳MTU值的基本指引方法
除了这些基本的指引方法外，你还应当知道下面的信息。
• 使用任何隧道方式(VPN等.)的最佳MTU需要进一步减去它们上面的头部。
• MTU值不应当超过通过实验验证的PMTU值。
• 当遇到其它限制的时候，较大的MTU值通常比较好。
最大分片大小(MSS)是另外一种衡量包大小的方法。MSS和MTU的关系如下.
• 对于IPv4，MSS=MTU-40
• 对于IPv6，MSS=MTU-60
注意
基于iptables(8)(参见第 5.7 节)的优化，能够通过MSS来压缩包大小，路由器会用到MMS。参见iptables(8)
中的”TCPMSS”.