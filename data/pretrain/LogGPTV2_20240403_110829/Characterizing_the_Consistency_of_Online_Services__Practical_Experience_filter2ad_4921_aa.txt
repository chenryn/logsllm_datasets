title:Characterizing the Consistency of Online Services (Practical Experience
Report)
author:Filipe Freitas and
João Leitão and
Nuno M. Preguiça and
Rodrigo Rodrigues
Filipe Bastos de Freitas
Master of Science
Characterizing and Enforcing Consistency of
Online Services
Thesis submitted in partial fulﬁllment
of the requirements for the degree of
Doctor of Philosophy in
Computer Science
Adviser: Rodrigo Seromenho Miragaia Rodrigues,
Full Professor, Lisbon University
Co-adviser: João Carlos Antunes Leitão,
Assistant Professor, Nova University of Lisbon
Examination Committee
José Augusto Legatheaux Martins
Chair:
Rapporteurs: Etienne Rivière
João Nuno de Oliveira e Silva
Members: Rodrigo Seromenho Miragaia Rodrigues
José Augusto Legatheaux Martins
José Orlando Pereira
João Manuel dos Santos Lourenço
March, 2019
Characterizing and Enforcing Consistency of Online Services
Copyright © Filipe Bastos de Freitas, Faculty of Sciences and Technology, NOVA
University Lisbon.
The Faculty of Sciences and Technology and the NOVA University Lisbon have
the right, perpetual and without geographical boundaries, to ﬁle and publish
this dissertation through printed copies reproduced on paper or on digital form,
or by any other means known or that may be invented, and to disseminate
through scientiﬁc repositories and admit its copying and distribution for non-
commercial, educational or research purposes, as long as credit is given to the
author and editor.
This document was created using the (pdf)LATEX processor, based on the “novathesis” template[1], developed at the Dep. Informática of FCT-NOVA
[2].
[1] https://github.com/joaomlourenco/novathesis [2] http://www.di.fct.unl.pt
To Sara, João, and Jaime
Acknowledgements
I would like to thank Professor Rodrigo Rodrigues and Professor João Leitão
for their support and guidance on this thesis.
To Professor Nuno Preguiça who was always available to discuss this work,
and to Professor João Lourenço and Professor José Orlando Pereira for the com-
ments and suggestion they made to improve the quality of this thesis.
Finally, to my wife Leonor, thanks for the patience you had during this work
and sorry for the time that I could not be with you and our children, Sara, João
and Jaime.
vii
Abstract
While several proposals for the speciﬁcation and implementation of various
consistency models exist, little is known about what is the consistency currently
oﬀered by online services with millions of users. Such knowledge is important,
not only because it allows for setting the right expectations and justifying the
behavior observed by users, but also because it can be used for improving the
process of developing applications that use APIs oﬀered by such services and
for creating tools that facilitate this process. To ﬁll this gap, in the ﬁrst part
of this thesis, we present a measurement study of the consistency of the APIs
exported by four widely used Internet services, the Facebook Feed, Facebook
Groups, Blogger, and Google+. To conduct this study, our work develops a
simple, yet generic methodology comprising a small number of tests, which
probe these services from a user perspective, and try to uncover consistency
anomalies, and reports on the analysis of the data obtained from running these
tests for a period of several weeks. Our measurement study shows that some of
these services do exhibit consistency anomalies, including some behaviors that
may appear counter-intuitive for users, such as the lack of session guarantees
for write monotonicity. The results show that developers have to deal with
consistency anomalies, to provide consistency guarantees they need.
To address the challenge of enforcing consistency guarantees on top of ex-
isting systems, in the second part of this thesis, we show that it is possible to
deploy a middleware between the application and the service, which enables a
ﬁne-grained control over the session guarantees that comprise the consistency
ix
semantics provided by these APIs, without having to gain access to the imple-
mentation of the underlying services. Our solution intercepts all interactions
of the client with the online service and uses four diﬀerent algorithms to en-
force each of the session guarantees and also their combination. We evaluated
our middleware using the Facebook public API and the Redis data store, and
our results show that we are able to provide ﬁne-grained control of the consis-
tency semantics, while incurring in a small local storage and modest latency
overhead.
Keywords: Consistency, Distributed Computing, Middleware
x
Resumo
Existem várias propostas para implementação e especiﬁcação de modelos
de consistência. No entanto, pouco se sabe sobre a consistência oferecida pelos
serviços online disponibilizados a milhões de utilizadores. Este conhecimento é
importante, não só porque nos permite ter as expectativas corretas sobre o fun-
cionamento do serviço e o comportamento observado pelos utilizadores, mas
também porque pode ser usado para melhorar o desenvolvimento de aplicações
que usam as APIs fornecidas pelos serviços e ajudar na criação de ferramentas
que facilitem este processo. De modo a preencher esta lacuna, na primeira parte
desta tese, é apresentado um estudo sobre a consistência fornecida por quatro
serviços bastante utilizados na Internet: o Facebook Feed, Facebook Groups,
Blogger e Google+. Para conduzir este estudo, foi desenvolvido um método sim-
ples e genérico que usa um número pequeno de testes para avaliar violações de
garantias de consistências destes serviços segundo a perspetiva do utilizador.
O objetivo dos testes é detetar anomalias com base na análise de dados obtidos
pela execução de testes durante várias semanas. O estudo mostrou que alguns
serviços exibem várias anomalias, nomeadamente comportamentos que podem
parecer contraintuitivos aos utilizadores, como a falta de garantias de sessão
para escritas monotónicas. Os resultados mostram que os programadores têm
de lidar com os vários tipos de anomalias de modo a fornecer as garantias de
consistência que necessitam.
Para enfrentar o desaﬁo de garantir consistência aos serviços já existentes,
na segunda parte desta tese, mostramos que é possível usar uma camada in-
termédia entre a aplicação e o serviço, que permite controlo sobre as garantias
xi
de sessão, sem ser necessário ter acesso à implementação do serviço. A solução
adotada intercepta todas as interações do cliente com o serviço online e usa
quatro algoritmos para garantir cada uma das garantias de sessão, bem como a
sua combinação. Na avaliação que foi feita usou-se a API publica do Facebook
e uma instalação distribuída do serviço de dados Redis. Os resultados mos-
tram que a solução proposta permite garantir controlo sobre as garantias de
consistência, com um custo pequeno de armazenamento e um custo modesto
em termos de latência.
Palavras-chave: Consistência, Computação Distribuída, Middleware
xii
Contents
List of Figures
1 Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.1 Contributions
1.2 Publications
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.3 Document Organization . . . . . . . . . . . . . . . . . . . . . .
2 Background and Related Work
2.1 Online Services . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Consistency . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . .
2.3 Replication and Consistency Anomalies
2.3.1 Single-Master Replication . . . . . . . . . . . . . . . . .
2.3.2 Multi-Master Replication . . . . . . . . . . . . . . . . . .
2.4 Consistency Studies . . . . . . . . . . . . . . . . . . . . . . . . .
2.5 Middleware solutions for enforcing consistency . . . . . . . . .
3 Measurement Study
3.1 Operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 Deﬁning consistency anomalies . . . . . . . . . . . . . . . . . .
3.2.1 Session guarantees . . . . . . . . . . . . . . . . . . . . . .
3.2.2 Divergence . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.3 Quantitative metrics
. . . . . . . . . . . . . . . . . . . .
3.3 Measurement methodology . . . . . . . . . . . . . . . . . . . . .
3.3.1 Time synchronization . . . . . . . . . . . . . . . . . . . .
3.3.2 Tests . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.4 Results
xiii
xvii
1
5
5
5
7
7
9
11
11
15
18
20
25
25
26
26
27
28
29
30
30
34
CONTENTS
3.4.1 Overall results . . . . . . . . . . . . . . . . . . . . . . . .
3.4.2 Session guarantees . . . . . . . . . . . . . . . . . . . . . .
3.4.3 Divergence . . . . . . . . . . . . . . . . . . . . . . . . . .
3.4.4 Quantitative metrics
. . . . . . . . . . . . . . . . . . . .
3.5 Comparison to Related Work . . . . . . . . . . . . . . . . . . . .
3.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4 Fine-Grained Consistency for Online Services
4.1 Target systems . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2 System overview . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2.1 Architecture . . . . . . . . . . . . . . . . . . . . . . . . .
4.2.2 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.3 Algorithms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
4.3.1 Read Your Writes
4.3.2 Monotonic Reads
. . . . . . . . . . . . . . . . . . . . . .
4.3.3 Monotonic Writes . . . . . . . . . . . . . . . . . . . . . .
4.3.4 Writes Follow Reads . . . . . . . . . . . . . . . . . . . . .
4.3.5 Combining Multiple Session Guarantees . . . . . . . . .
4.3.6 Corner Cases . . . . . . . . . . . . . . . . . . . . . . . . .
4.3.7 Progress . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.4 Middleware Design . . . . . . . . . . . . . . . . . . . . . . . . .
4.5 Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
4.5.1 Facebook Results
4.5.2 Redis Results . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
4.6.1 Read Your Writes
4.6.2 Monotonic Reads
. . . . . . . . . . . . . . . . . . . . . .
4.6.3 Monotonic Writes . . . . . . . . . . . . . . . . . . . . . .
4.6.4 Writes Follow Reads . . . . . . . . . . . . . . . . . . . . .
4.6.5 Combining Multiple Session Guarantees . . . . . . . . .
4.7 Comparison with Related Work . . . . . . . . . . . . . . . . . .
4.8 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.6 Arguments of Correctness
xiv
37
38
41
44
47
48
51
51
55
55
56
57
58
61
62
64
66
68
71
73
74
74
78
82
82
85
86
87
88
93
94
CONTENTS
5 Conclusions
5.1 Future work . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Bibliography
97
99
101
xv
List of Figures
2.1 Service layers
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Single-Master Replication . . . . . . . . . . . . . . . . . . . . . . .
2.3 Single-Master Replication, example with one client
. . . . . . . .
2.4 Single-Master Replication, example with two client
. . . . . . . .
2.5 Multi-Master Replication
. . . . . . . . . . . . . . . . . . . . . . .
2.6 Multi-Master Replication, example with one client
. . . . . . . . .
2.7 Multi-Master Replication, example with two clients
. . . . . . . .
3.1 Measurement study method overview . . . . . . . . . . . . . . . .
3.2 Timeline for Test 1 with three agents. . . . . . . . . . . . . . . . . .
3.3 Timeline for Test 2 with three agents. . . . . . . . . . . . . . . . . .
3.4 Content divergence where computed window is zero . . . . . . . .
3.5 Agents geographical distribution . . . . . . . . . . . . . . . . . . .
3.6 Percentage of tests with observations of diﬀerent anomalies . . . .
. . . . . . . .
3.7 Distribution of Read Your Writes anomalies per test.
3.8 Distribution of Monotonic Writes anomalies per test. . . . . . . . .