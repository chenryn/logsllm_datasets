title:Attribute based data sharing with attribute revocation
author:Shucheng Yu and
Cong Wang and
Kui Ren and
Wenjing Lou
Attribute Based Data Sharing with Attribute Revocation
Worcester Polytechnic Institute
Illinois Institute of Technology
Illinois Institute of Technology
Shucheng Yu
Department of ECE
Worcester, MA 01609
PI:EMAIL
Kui Ren
Department of ECE
Chicago, Illinois 60616
PI:EMAIL
Cong Wang
Department of ECE
Chicago, Illinois 60616
PI:EMAIL
Wenjing Lou
Department of ECE
Worcester Polytechnic Institute
Worcester, MA 01609
PI:EMAIL
ABSTRACT
Ciphertext-Policy Attribute Based Encryption (CP-ABE) is
a promising cryptographic primitive for ﬁne-grained access
control of shared data. In CP-ABE, each user is associated
with a set of attributes and data are encrypted with ac-
cess structures on attributes. A user is able to decrypt a
ciphertext if and only if his attributes satisfy the ciphertext
access structure. Beside this basic property, practical appli-
cations usually have other requirements. In this paper we
focus on an important issue of attribute revocation which
is cumbersome for CP-ABE schemes. In particular, we re-
solve this challenging issue by considering more practical
scenarios in which semi-trustable on-line proxy servers are
available. As compared to existing schemes, our proposed
solution enables the authority to revoke user attributes with
minimal eﬀort. We achieve this by uniquely integrating the
technique of proxy re-encryption with CP-ABE, and enable
the authority to delegate most of laborious tasks to proxy
servers. Formal analysis shows that our proposed scheme
is provably secure against chosen ciphertext attacks. In ad-
dition, we show that our technique can also be applicable
to the Key-Policy Attribute Based Encryption (KP-ABE)
counterpart.
Categories and Subject Descriptors
E.4 [Data]: Coding and Information Theory
General Terms
Security, Theory
Keywords
Attribute Based Encryption, Proxy Re-encryption, Revoca-
tion
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’10 April 13–16, 2010, Beijing, China.
Copyright 2010 ACM 978-1-60558-936-7 ...$10.00.
1.
INTRODUCTION
Today’s computing technologies have attracted more and
more people to store their private data on third-party servers
either for ease of sharing or for cost saving. When people
enjoy the advantages these new technologies and services
bring about, their concerns about data security also arise.
Naturally, people would like to make their private data only
accessible to authorized users. In many cases, it is also de-
sirable to provide diﬀerentiated access services such that
data access policies are deﬁned over user attributes/roles.
We can easily foresee that these security concerns and re-
quirements would become more urgent in the coming era
of cloud computing wherein individuals, organizations, and
businesses may outsource their various types of data, includ-
ing the highly sensitive data, into the cloud. Traditional ac-
cess control strategies, such as the reference monitor method
[1], will not be as eﬀective under this new setting because
the service providers and the data owners now very possi-
bly belong to diﬀerent trusted domains, and the third-party
storage servers themselves may not be fully trustworthy. To
address this problem, in this paper we explore a feasible
solution based on novel cryptographic methods.
Ciphertext-policy attribute based encryption (CP-ABE)
[2] is a public-key cryptography primitive that was proposed
to resolve the exact issue of ﬁne-grained access control on
shared data in one-to-many communications. In CP-ABE,
each user is assigned a set of attributes which are embedded
into the user’s secret key. A public key component is deﬁned
for each user attribute. When encrypting the message, the
encryptor chooses an access structure on attributes, and en-
crypts the message under the access structure via encrypting
with the corresponding public key components. Users are
able to decrypt a ciphertext if and only if their attributes
satisfy the ciphertext access structure. The public key and
ciphertext sizes in CP-ABE are just linear to the number of
attributes and the complexity of the access structure, which
is independent to the number of users. Moreover, CP-ABE
is resistant to collusion attacks from unauthorized users. All
these nice properties make CP-ABE extremely suitable for
ﬁne-grained data access control on untrusted storage.
As promising as it is, there also exist several issues when
directly applying state-of-the-art CP-ABE schemes to prac-
tical applications. These issues can be summarized in two
folds: ﬁrstly, existing CP-ABE schemes are not able to si-
multaneously achieve provable security, expressiveness of ac-
cess structure, and eﬃcient construction; secondly, user man-
agement, user revocation in particular, is extremely hard
to realize in an eﬃcient way. When current researches are
mainly focusing on solving the former, the later has drawn
In fact, user revocation is a challenge is-
less attention.
sue in many one-to-many communication systems.
In at-
tribute based systems, this issue is even more diﬃcult since
each attribute is conceivably shared by multiple users. Re-
vocation of any single user would aﬀect others who share
his attributes. Moreover, user revocation in attribute based
systems may be ﬂexible and occur in diﬀerent granularities.
That is, it may require to revoke either the entire user ac-
cess privilege, or just partial access right of the user, i.e.,
a subset of his/her attributes. Existing CP-ABE schemes
[18, 2] suggest associating expiration time attributes to user
secret keys. However, this type of solutions always have a
trade-oﬀ between granularity of user revocation and the load
placed on the system authority, and require interaction be-
tween users and the authority. In addition, the expiration
method is not able to eﬃciently revoke user attributes on
the ﬂy. In [4], Boldyreva et al. proposed an eﬃcient revo-
cation scheme for IBE, which is also applicable to KP-ABE
[12, 6] and fuzzy IBE [19]. However, it is not clear whether
the proposed scheme is applicable to CP-ABE.
Towards building a full ﬂedged CP-ABE system, this pa-
per focuses on the important yet diﬃcult problem of user re-
vocation. Instead of addressing the issue in general settings,
we particularly focus on practical application scenarios such
as data sharing, as shown by Fig.1, in which semi-trustable
proxy servers are always available for providing various types
of content services. Similar to previous work [11], we can as-
sume these servers to be curious-but-honest. That is, they
will honestly execute the tasks assigned by legitimate parties
in the system. However, they would like to learn informa-
tion of encrypted contents as much as possible. Based on
this assumption, our solution uniquely integrates the proxy
re-encryption technique with CP-ABE, and enables the au-
thority to delegate most laborious tasks of user revocation to
proxy servers without leaking any conﬁdential information
to them. On each revocation event, the authority just gener-
ates several proxy re-encryption keys and transmits them to
proxy servers. Proxy servers will update secret keys for all
users but the one to be revoked. Unlike solutions suggested
by existing CP-ABE schemes, our construction places min-
imal load on the authority upon each revocation event, and
the authority is able to freely revoke any attribute of users at
any time. The only requirement is that proxy servers should
stay online and perform honestly. The former can easily be
satisﬁed in many systems since servers provide various kinds
of services and should stay online anyway. The later can be
guaranteed by exploiting secure computing techniques such
as auditing, which is out of the scope of this paper.
1.1 Challenges and Our Contributions
The main challenge of our construction is to formulate a
reasonable security model and provide formal security proofs
when combining CP-ABE with proxy re-encryption. Our
contribution can be summarized as follows.
Firstly, we provide the deﬁnition for attribute revocation
in CP-ABE with honest-but-curious severs, and formulate
the security model to reﬂect possible attacks.
Secondly, the proposed scheme enables the authority to
M
a
n
a
Authority
g
e
m
e
n
t
E n c r y p t e d   c o n t e n t
Content 
Provider
Semi-trustable 
Servers
Access
User
Figure 1: An example application scenario of data
sharing.
revoke any attribute of users at any time while placing a
minimal load on him.
Thirdly, the proposed scheme is provably secure under the
Decisional Bilinear Diﬃe-Hellman (DBDH) assumption.
Last but not least, our method is applicable to the KP-
ABE counterpart in which the authority is able to revoke
any partial access privilege of users.
To the best of our knowledge, this paper is among the ﬁrst
formally addressing the issue of user/attribute revocation in
ABE although it focuses on a practical setting.
1.2 Related Work
Sahai and Waters [19] ﬁrst introduced attribute based en-
cryption (ABE) for encrypted access control.
In an ABE
system, both the user secret key and the ciphertext are as-
sociated with a set of attributes. Only if at least a threshold
number of attributes overlap between the ciphertext and his
secret key, can the user decrypt the ciphertext. Goyal et al.
[12] ﬁrst introduced the concept of CP-ABE based on [19].
The idea of a CP-ABE scheme is as follows: the user secret
key is associated with a set of attributes and each cipher-
text is embedded with an access structure. A user is able
to decrypt a ciphertext if and only if his attributes satisfy
the access structure of the ciphertext.The access structure
is generalized as any boolean formula over threshold gates
on positive attributes and negative attributes. Bethencourt
[2] proposed the ﬁrst CP-ABE construction under
et al.
the generic group model. Cheung et al.
[9] proposed the
ﬁrst provably secure CP-ABE under a standard assumption
(the DBDH assumption) while only permitting AND gates
in the access structure. Goyal et al. recently proposed a
bounded CP-ABE scheme with expressive access structure
and provable security under the standard model. However,
complexity of the construction is extremely high and can
just serve as a theoretical feasibility. Further improvements
on CP-ABE can be found in [16, 13, 15, 17] etc.
The issue of attribute revocation, a.k.a. key revocation,
in CP-ABE was ﬁrst addressed in [18] as a rough idea. This
paper suggests extending each user attribute with an expi-
ration date. This idea, as the authors pointed out, requires
the users to periodically go to the authority for key reissuing
and thus is ineﬃcient. [2] enhances this solution by associ-
ating the user secret key with a single expiration date. As
is compared to [18], this solution places a lower load on the
authority as users need to update their keys less frequently.
However, this method is not able to realize user attribute
change in a timely fashion. These solutions can just dis-
able a user secret key at a designated time, but are not able
to revoke a user attribute/key on the ad hoc basis. In [4],
Boldyreva et al. proposed an eﬃcient revocation scheme for
IBE, and the proposed scheme is also applicable to KP-ABE
and fuzzy IBE. However, its applicability to CP-ABE is not
clear.
In 1998, Blaze et al.
[3] proposed a cryptographic prim-
itive in which a semi-trustable proxy is able to convert a
ciphertext encrypted under Alice’s public key into another
ciphertext that can be opened by Bob’s private key without
seeing the underlying plaintext. This cryptographic primi-
tive is called Proxy Re-Encryption (PRE). A PRE scheme
allows the proxy, given the proxy re-encryption key rka↔b,
to translate ciphertexts under public key pka into cipher-
texts under public key pkb and vise versa. We refer to [3]
for more details on proxy re-encryption schemes. Enhance-
ments to proxy re-encryption scheme can be found in [10]
etc.
The rest of this paper is organized as follows. Section
2 presents formal deﬁnitions and models of our proposed
scheme. Section 3 reviews some technique preliminaries per-
taining to our construction. In section 4, we describe our
construction in detail together with its security proof. Sec-
tion 5 gives a CCA secure construction.
In section 6, we
discuss applicability of our method to KP-ABE and some
application considerations. We conclude this paper in Sec-
tion 7.
2. DEFINITIONS AND MODELS
In this section, we ﬁrst give an overview of our solution
to the issue of attribute revocation. Then, we present our
deﬁnition of the proposed scheme and its security model.
2.1 Scheme Overview
Our scheme is proposed to resolve the issue of attribute
revocation for applications such as data sharing as shown
in Fig.1. For example, in a campus data system, each stu-
dent is associated with an attribute set such as (depart-
ment, courses, club memberships, ...). When a student drops
a class or quits from a club, the system needs to remove
the corresponding attribute from the student’s attribute set.
Recall that in CP-ABE [2], the system (the authority) de-
ﬁnes a master key component for each attribute in the sys-
tem. With these master key components, the system deﬁnes
the public key and user secret key components each of which
corresponds to one of the user’s attributes. Based on this
observation, we propose to resolve the attribute revocation
issue as follows:
Whenever an attribute revocation event occurs, the au-
thority redeﬁnes the master key components for involved
attributes. Corresponding public key components are then
updated accordingly. From then on, data will be encrypted
with the new public key. Apparently, user secret keys should
be updated accordingly for data access. For this purpose,
the authority generates proxy re-key’s for updated master
key components. With these proxy re-key’s, the proxy servers
are able to securely update user secret keys to the latest ver-
sion for all but the user for revocation1. This removes the
involved attributes from that user’s attribute set since their
1A user secret key is updated when the user accesses proxy
servers. Aggregate update for successive events is possible
when a user has not accessed the system for a long time.
corresponding secret key components no longer comply with
the new master key. The proxy re-key’s also allow the proxy
servers to re-encrypt existing ciphertexts stored on them2 to
the latest version without disclosing any plaintext informa-
tion as we will discuss later. As compared to previous work,
this solution places minimal load on the authority since most
of the laborious tasks are delegated to proxy servers.
2.2 Algorithm Deﬁnition
Our proposed scheme is composed of 7 algorithms: Setup,
Enc, KeyGen, ReKeyGen, ReEnc, ReKey, and Dec. Setup,
KeyGen, and ReKeyGen are performed by the authority
while ReEnc and ReKey are executed by proxy servers.
Enc and Dec are called by encryptors and decryptors re-
spectively. Note that, in our scheme we deﬁne a system
wide version information ver indicating the evolution of the
system master key as follows: initially it is set to 1; when-
ever an attribute revocation event occurs and the system
master key is redeﬁned, it increases by 1. The system pub-
lic key, ciphertexts, user secret keys, and proxy re-key’s are
all tagged with the version information indicating which ver-
sion of system master key they comply with.
Setup(1λ) It takes as input the security parameter 1λ and
outputs the system master key M K and public parameters
P K. ver is initialized as 1.
Enc(M, AS, P K) It takes as input a message M , an access
structure AS, and current public parameters P K, and out-
puts a ciphertext CT .
KeyGen(M K, S) It takes as input current system master
key M K and a set of attributes S that describes the key.
It outputs a user secret key SK in the form of (ver, S, D,
¯D = {Di, Fi}i∈S).
ReKeyGen(γ, M K) It takes as input an attribute set γ that
includes attributes for update, and current master key M K.
It outputs the new master key M K ′, the new public key P K ′
(computation of P K ′ can be delegated to proxy servers),
and a set of proxy re-key’s rk for all the attributes in the
attribute universe U . ver is increased by 1. Note that, for
attributes in set U −γ, their proxy re-key’s are set as 1 in rk.
ReEnc(CT, rk, β) It takes as input a ciphertext CT , the set
of proxy re-key’s rk having the same version with CT , a
set of attributes β which includes all the attributes in CT ’s
access structure with proxy re-key not being 1 in rk.
It
outputs a re-encrypted ciphertext CT ′ with the same access
structure as CT .
ReKey( ¯D, rk, θ) It takes as input the component ¯D of a user
secret key SK, the set of proxy re-key’s rk having the same
version with SK, and a set of attributes θ which includes all
the attributes in SK with proxy re-key not being 1 in rk. It
outputs updated user secret key components ¯D′.