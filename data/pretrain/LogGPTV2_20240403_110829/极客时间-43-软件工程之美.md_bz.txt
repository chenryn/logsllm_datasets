#### 为什么 Facebook 可以做到没有专职测试呢？首先 Facebook的工程师水平确实是高于业界平均水平的，有能力同时做好开发和部分测试工作；其次，Facebook 的产品周期相对宽松，可以有时间完成自动化测试代码；Facebook在功能发布之前，先发布新功能到内部环境，几千内部员工先测试，部分充当了测试人员角色；Facebook的发布和监控也比较完善，有问题能通过监控及时发现，并且可以随时快速回滚或者发布补丁；最后就是用户对这类社交产品的 Bug相对容忍度比较高，想想看如果是波音飞机上的软件能这么做吗？至于 Google 和 Amazon 这些公司，他们也是类似的情况：-   大量优秀的工程师，可以同时兼任开发和测试；-   有大量的自动化测试代码覆盖；-   强大的发布和监控系统；-   时间进度比较宽松；-   用户对 Bug 容忍度较高。-   对于不能满足上面条件的公司，有专职的测试是更有利于软件项目开发和质量保障的。
#### 大厂不设专职测试的启示虽然对于大部分公司来说，要做到完全没有专职测试还不现实，但这些大厂不设专职测试的实践还是有值得借鉴和思考的地方。首先，用自动化测试代替重复性的手工测试是必然趋势。随着自动化测试技术的成熟，写自动化测试代码的成本逐步降低，而自动化测试，可以极大提高测试效率，尤其是像回归测试这种需要频繁进行的。其次，测试设计是软件测试人员的核心竞争力。无论是自动化测试还是手工测试，测试用例是核心。无效的测试用例，用任何方法去测试，都不会达到良好的测试目的，只有测试用例设计好了，真正做到有效高覆盖，测试才是高质量的。最后，开发人员和测试人员的更多融合是一种双赢。比如说测试人员可以给开发人员提供测试用例作为测试参考，开发人员可以写更多自动化测试代码，这些方式都能有效保障产品质量。
## 总结今天我带你一起分析了什么样的公司需要专职测试。同时也学习了软件测试的一些基本知识，简单来说软件测试的工作，就是发现Bug，报告 Bug，跟踪 Bug。要能及时发现Bug，需要针对需求进行分析和测试设计，把需求具象成一个个用户操作步骤的测试用例。通过一些科学的测试方法，像等价类划分、边界值分析、探索性测试，能有效提升测试的覆盖率。公司是否需要专职测试，还是取决于公司的具体情况，例如是否有大量优秀的工程师可以同时兼任开发和测试，有大量的自动化测试代码覆盖，有强大的发布和监控系统，时间进度宽松，用户对Bug 容忍度较高。
## 课后思考你们公司有专职测试吗？你觉得是否应该保留专职测试？为什么？欢迎在留言区与我分享讨论。感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。![](Images/da183fec69b316d65c37d6f003a9f298.png){savepage-src="https://static001.geekbang.org/resource/image/31/af/315c3c753591fbaf480f39cdc9e0f3af.jpg"}
# 33 \| 测试工具：为什么不应该通过QQ/微信/邮件报Bug？你好，我是宝玉。十多年前，当我还是个野路子程序员时，我在外面接私活做项目，客户在使用过程中遇到了Bug，直接就截个图，或者是用 Word 文档整理在一起，从 QQ 或者邮件上把 Bug信息发送给我，我收到后再修复更新上线。而现在正规的软件项目已经不会再用这种原始的方式来报 Bug了，而是会借助测试工具来帮助报告和跟踪Bug，即使你偶尔能看到有项目还在采用原始方式报Bug，你肯定也会觉得这样做不专业。但不知道你有没有仔细想过这个问题，为什么现在不通过 QQ/ 微信 / 邮件报Bug，又有哪些测试工具可以帮助你更好地发现、报告和跟踪软件中的 Bug呢？今天我们会展开讨论这个问题。
## Bug 跟踪工具我想你对与 Bug这个词一定不陌生，它是我们软件中的缺陷或错误。这个词的诞生也很有意思。> 1947 年 9 月 9> 日，一只小飞蛾钻进了哈佛大学的一台计算机电路里，导致系统无法工作，操作员把飞蛾贴在计算机日志上，写下了"首个发现> Bug 的实际案例"。![](Images/bec397d930c7c19e697135c9ffb074d1.png){savepage-src="https://static001.geekbang.org/resource/image/79/3c/796010fd083207b660547887bbc5893c.png"}\（图片来源：WikiPedia《[Softwarebug](http://en.wikipedia.org/wiki/Software_bug)》）虽然 Bug 的历史已经有 60 多年了，然而 Bug跟踪工具却没有出现太久。软件项目中最早也是通过邮件、即时通讯等原始方式报告Bug，直到 1992 年才有第一个专业的 Bug跟踪软件[GNATS](http://www.gnu.org/software/gnats/)。``{=html}在这之后才逐步有了像 Bugzilla、Jira、MantisBT 等专业的 Bug跟踪工具。而现在，Bug 跟踪工具已经成为软件项目中必不可少的工具之一。那么，Bug 跟踪工具是怎么逐步替代 QQ、邮件等方式来处理 Bug 的呢？