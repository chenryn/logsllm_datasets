根据官方文档，“setuptools是一个对Python distutils的增强集合（Python2.3.5适于大多
Setuptools和Python Egg
个增强distutils的库。Eggs涉及最终对Python包和模块的捆绑，非常像一个.rpm或.deb
尤其是依赖于其他包的包。
。easy_install是一个模块，因此经常被认为是命令行
www.TopSage.com
r
包管理丨259
---
## Page 274
ez_setup.py
% Total % Received % Xferd Average Speed Time Time Time Current
>ez_setup.py
例9-1：自举easy_install
第二个需要注意的问题，即这是一类脚本，这类脚本会在你定义包时在使用“进人点”
以使用它来安装和管理Python代码。我们通过显示easy_install脚本的内容向你展示
这里首先需要注意的是当你安装setuptools时，将安装名为easy_instail的脚本，这样你可
easy_install的内容：
这一约定非常方便，旧版本仍可以保留下来继续使用。以下是刚刚安装的/usr/local/bin/
本时，未指明版本号的版本会被默认使用，同时这也表示最新安装的版本是默认版本。
号，以表示使用的Python版本，也可以不指定版本号。当用户没有明确地指出脚本的版
这是Python自身的约定，而且这一约定已经使用一段时间了：安装时，可以指明版本
Finished processing dependencies for setuptools
Searching for setuptools
100941910094190060600:00:150:00:15--:--:--83353
260
Installing
etuptools
Is
#!/System/Library/Frameworks/Python.framework/Versions/2.5/Resources/Python.app/
$ Is -1 /usr/local/bin/easy_instal1*
sys.exit(
from pkg_resources import load_entry_point
Contents/MacoS/Python
-rwxI-xI-x1root
-rwxr-xr-x 1root
第9章
0.6c8 is already the active version in easy-install.pth
'setuptools==0.6c8'
Spent
wheel
wheel
372 Mar
364 Mar
www.TopSage.com
PDG
---
## Page 275
选项就可以满足他们的所有需要。（顺便说一下，给easy_install指定一个参数，一个
对于大多数临时使用easy_install的用户，只传递一个命令行参数，而不需要任何其他
easy_install的高级特征
3
简要总结：
在我们开始介绍easy_install工具的高级用途前，这里有一个easy_install基本用法的
Python到你自己的一个目录中，例如你的home目录。
考本章中介绍使用virtualenv和setuptools的部分。另一种可选操作是，可以编译并安装
site-packages和Python安装的脚本目录进行写入操作的权限。如果对此有疑问，可以参
是python可以执行文件放置的目录。
为了安装IPython，在这个示例中专门使用shell，可以发出这样的命令：
样的脚本心存担忧。我们会在本章的后面部分进行介绍。现在，有了easy_install，
（entrypoint）的时候自动创建。不要对这个脚本的内容或是进入点、或是如何创建这
sudo easy_install ipython
easy_install.
如果有Python的多个版本运行在你的系统上，明确地指定python的版本来运行
使用你希望的Python版本运行ez_setup.py来安装包；
programming/.
其有专门介绍。你可以阅读他的编程博客：http：//dirtsimple.org/
setuptools等。在《Dreaming in Code》（Three Rivers出版）中对
PhillipJ.Eby已经负责多项Python增强建议，还负责WSGI标准，
名人简介：EASYINSTALL
Phillip J.Eby
www.TopSage.com
包管理丨261
---
## Page 276
装源码发布，而无须明确地告诉它怎样做。这是一个技巧，但是必需在根一级目录中包
我们将用gzip压缩的tar包的URL传递给easy_install。easy_install能够判断出应该安
现在，我们从URL自动安装了一个源码发布版本：
从URL安装源发布
不仅找到egg的链接，也找到了egg正确的版本。
装Python2.4 egg，因为它是最好的匹配。很明显，这一点非常有用，因为easy_install
在这种情况下，可以在http://code.google.com/plliten/获得Python2.4egg和Python2.5
页面，并根据名称和版本号来安装或升级包。
它可以按你可以想到的任何方式完成包的安装。以下是一个示例，显示了如何搜索web
正如我们之前看到的，easy_install可以自动搜索包的中心仓库，并且自动进行安装。
在Web页面上搜索包
幸运的是，easy_install还有一些非常灵活的技巧，可以对高级事务进行全面的分类处
262
杂问题，不是仅从Python Package Index下载eggs就能处理的，需要具有更强大的功能。
包名，可以简单地下载并安装包，就像之前在IPython示例中演示的一样）。对于一些复
理。
Processing SQLAlchemy-0.4.3.tar.gz
Downloading http://superb-west.dl.sourceforge.net/sourceforge
Downloading http://liten.googlecode.com/files/liten-0.1.3-py2.4.egg
$ easy_install -f http://code.google.com/p/liten/ liten
py2.4.egg
/sqlalchemy/SQLAlchemy-0.4.3.tar.gz
5
[snip]
Best match:
第9章
/sqlalchemy/SQLAlchemy-0.4.3.tar.gz
www.TopSage.com
PDG
---
## Page 277
现在，我们为你显示了使用easy_install来安装一些已经安装过的东西时会出现的情
以下是一个示例，演示了如何在安装文件系统或加载了NFS的存储器上安装egg:
在本地或网络文件系统中安装egg
会失败。
括setup-Py文件才能起作用。例如，如果有人将它的包通过递归深埋在多层空目录中，这
在你安装了一些版本的包之后，你可以通过明确地声明需要下载并安装的版本，来将一
并升级CherryPy包。首先，安装CherryPy2.2.1版本：
另外一种使用easy_install的方式是通过它来升级包。在接下来的一些示例中，将安装
升级包
个新的版本，那么它可以自动升级。
一个客户端可以运行这样一个守护进程来检测是否需要升级到eggs的中心库。如果有一
机。本书中还有一些脚本，可能帮助创建一个执行轮流检测的守护进程（polling）。每
发布包，尤其是通过一系列你希望它们能够根据正在运行的代码版本保持彼此同步的主
可以在加载了NFS的目录或是一个本地分区中安装egg。这可以非常有效地在*nix环境中
些包升级到新的版本：
况：
Using /Users/jmjones/python/cherrypy/lib/python2.5/site-packages/CherryPy-2.2.1-py2.5.egg
Cherrypy 2.2.1 is already the active version in easy-install.pth
Processing CherryPy-2.2.1-py2.5.egg
Processing dependencies for cherrypy==2.2.1
Downloading http://download.cherrypy.org/cherrypy/2.2.1/CherryPy-2.2.1.tar.gz
Best match: CherryPy 2.2.1
Reading http://pypi.python.org/simple/cherrypy/
www.TopSage.com
包管理丨263
---
## Page 278
264
经存在，所以实际上系统什么也不会做。
现在，CherryPy的版本是3.2.0b3。如果我们指定升级到高于3.0.0的版本，因为该版本已
CherryPy会升级到当前最新的版本：
如果CherryPy包的一些版本已经存在，则不会执行任何动作。在接下来的示例中，
使用“--update”标志，但没有指定版本，将会把包升级到最新的版本。值得注意的
可以省略的：
包进行了安装，并且希望升级到该包的最新版本，可以使用“--upgrade”标志。
值得注意的是，
$ easy_install --upgrade cherrypy>3.0.0
Finished processing dependencies for cherrypy
Downloading http://download.cherrypy.org/cherrypy/3.1.0beta3/CherryPy-3.1.obeta3.zip
Best match: CherryPy 3.1.obeta3
Reading http://pypi.python.org/simple/cherrypy/
Best match: CherryPy 3.0.0
$ easy_install --upgrade cherrypy==3.0.0
Finished processing dependencies for cherrypy==2.3.0
Processing dependencies for cherrypy==2.3.0
Downloading http://download.cherrypy.org/cherrypy/2,3.0/CherryPy-2.3.0.zip
Best match: CherryPy 2.3.0
Reading http://pypi.python.org/simple/cherrypy/
···
+ **
 easy_install cherrypyz=2.3.0 Searching for
第9章
，在这个示例中没有使用“--upgrade”标志。如果你已经将一些版本的
www.TopSage.com
Y
DG
---
## Page 279
版本号。在URL字符串之后，给定的参数是我们寻找的包名。在URL字符串和独立的包
望使用某个单独的模块时，在PYTHONPATH中进行设置。在这个示例中，我们打包项目
个之前被解包的单独的Python文件，使用这个方法是最好的选择。其他可选方法是，希
当你希望一个单独的.py文件成为一个egg时，这是非常有用的。如果你有时需要使用一
志）：
修改独立的.py文件到egg
如果你需要返回到一个旧版本或是需要返回到一个更新的当前版本，也是可以使用的。
他版本是“活动版本”
这个示例假设你有版本为0.1.3的liten和--些其他的liten版本，并且已经安装。假设其
仅下载源码包，如果你需要对包进行安装，需要再次运行easy_install。
示例可能无法安装），这是一个查看源码发布所包含内容的好方法。easy_install可以
方便的。由于使用easy_install进行包安装不是总能完成所有的安装（例如文档或代码
因为允许easy_install使用一个源码发布，并且将其放到指定的目录中，所以这是非常
修改包的活动版本
指定的目录并进行检测：
你可以使用下面的示例来查找一个源码发布版或是检查包的URL，然后将其提取到一个
提取源码发布到指定的目录
可以仅输入下面的内容（少输入一些需要键入的字母，这对于懒人是个不错的技巧）：
在当前工作目录下安装一个已解包的源码发布
easy_install liten=0.1.3
 easy_install
。以下示例演示了如何再次激活0.1.3版本：
www.TopSage.com
包管理丨265
---
## Page 280
在我们可以称之为~/.pydistutils.cfg的配置文件中，定义了一个特定的搜索包的URL，仅
部网站地址和一个自定义的安装包的目录。以下是一个简单的easy_install配置文件的
那么你可以在配置文件中放些什么呢？两个最常用的设置项是，默认的用于包下载的内
~/.pydistutils.cfg，以及在distutils包目录中的distutils.cfg。
easy_install的客户端声明配置。
配置文件指定默认的选项。对于系统管理员，这是一个非常有用的功能，因为它允许
对于高级用户，easy_install还有另一个技巧。你可以通过使用具有.ini语法格式的
使用配置文件
简单的.htaccess文件，然后告诉easy_install做一个认证升级。
266
你或许正开发一个秘密的项目，不希望你的同事知道其中的细节。一种方法是创建一个
可以为URL使用以下的语法来指定用户名和密码：
在允许从一个需要认证的web网站下载文件之前，
认证一个密码保护的站点
乎完全相同。包的类型名称的选择完全取决于你自己。
除了这里创建了一个名为foofoo的名称，而不是vitualenv，除此以外这与之前的示例几
进行同步的限制。例如：
同的名称来完成包安装。将两者保持同步是有好处的，你不会感到需要将包名与模块名
名参数之前使用一致的名称是有好处的，因为我们告诉easy_install使用刚刚创建的相
内容：
#where to install packages. Note, this directory has to be on the PYTHONPATH
#Restrict searches to these domains
#where to look for packages
easy_install -f "http://svn.colorstudy.com/virtualenv/
install_dir =/src/lib/python
allow_hosts=*.example.com
[easy_install]
第9章
www.TopSage.com
foofoo
，或许需要安装egg。在这种情况下，你
PDG
---
## Page 281
创建egg
有介绍的。或许你希望做的一些事情已经包括在easy_install的特征当中，这将是非常不
最后，通过简单地执行“easy_install--help”，你会发现更多的选项，许多是我们没
distutils-sig，可以报告bug并获得easy_install的相关帮助。
来升级文档是一个好主意。该地址也有一个称为distutils-sig的邮件列表（sig表示特殊兴
正在持续开发的工具，所以经常检测http:/lpeak.telecommunity.com/DevCenter/EasyInstall
高级用户的需要而对该工具的高级关键特征进行重点强调。因为easy_install仍是一个
这里讲述的内容并不能取代广泛使用的easy_install官方文档，我们只是为了满足一些
easyinstall的高级特征总结
python包目录中。
允许来自example.com（及其子域）的包搜索请求，并且最终将包放入到一个自定义的
创建Python egg的过程极为简单，真正涉及的内容仅有四步：
码复用节省了编写代码的时间，也使其在多台主机上更容易安装。
供自己使用的小型通用任务库，可以将其捆绑为一个egg。如果这样做，你不仅通过代
些模式或常规任务是需要频繁使用的，egg可以帮你省去一大堆麻烦。如果你创建一个
要做的事情是写一个一次性的脚本，那么egg对你不会有太多帮助。但是如果你发现一
为什么一名系统管理员会对创建eggs感兴趣，我们确实不能给出任何原因。如果你所需
是一个来自setuptools网站的对egg的定义：
之前谈论过，
错的。
趣组），讨论所有与Python发布相关的事宜。登录http://mail.python.org/mailman/listinfol
1.
.安装setuptools;
创建希望在egg中出现的文件;
创建setup-py文件；
运行时系统自动发现。
以简单地下载并直接添加到sys.path中，或是放到sys.path的目录中，然后通过egg
包）、可以直接载入，且包括项目元数据（包括脚本及项目依赖的相关信息）。可
Python egg是EasyInstall首选的二进制发布格式，因为它跨平台（对于纯粹的
运行。
一个egg是一些Python模块的集合，但是还没有给出一个更好的定义。这里
www.TopSage.com
包管理丨267
P
PDG
---
## Page 282
268
现在，我们可以创建egg:
接下来创建setup-Py文件，该文件或许是最简单的：
在这个示例中，仅包含一个空的名为hello-egg·py的Python模块。
我们已经将stuptools安装完毕，接下来我们继续创建希望在egg中出现的文件:
drwxr-xr-x 6 ngift wheel 204 Mar 10 06:53 Helloworld.egg-info
total 8
egg' to it
creating
copying HelloWorld.egg-info/top_level.txt -> build/bdist.macosx-10.5-i386/egg/EGG-
writing HelloWorld.egg-info/PKG-INFO
creating HelloWorld.egg-info
$ python setup.py bdist_egg
from setuptools import setup, find_packages
python setup.py bdist_egg
11
EGG-INFO
copying
copying
creating
H
H
setup(
$
$
reading
eating
reating
eating
arning: install_lib: 'build/lib' does not exist -- no Python modules to install