p
b
M
(
t
u
p
h
g
u
o
r
h
h
T
T
a
a
1
1
.
2
0
8
i
s
n
B
d
e
t
s
a
W
f
o
r
e
b
m
u
N
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
h
T
T
a
a
1
1
.
2
0
8
Figure 10: No Single Threshold Works Across Locations: This
ﬁgure plots the ideal threshold that ensures safe narrowband oper-
ation while maximizing bins usable by wideband. 802.11a nodes
at locations 7-10 are not affected by wideband, and hence the ideal
threshold for these locations is inﬁnity.
1
2
3
4
5
6
7
8
9 10
1
2
3
4
5
6
7
8
9 10
Location
Location
(a) Median Threshold
(b) Minimum Threshold
Figure 11: No Threshold is Safe and Efﬁcient in All Locations
7.2 Power Threshold Sensing
In §5.1, we discussed the intractability of a threshold based algorithm.
Here, we present results validating that claim, ﬁrst showing the dif-
ﬁculty of picking a threshold, and, second, showing that a single
threshold cannot simultaneously be safe for narrowband, and efﬁcient
for wideband.
7.2.1 Difﬁculty in Using Thresholds
Method. This experiment uses one pair of SWIFT nodes at location
tx and rx in Fig. 8, and one pair of 802.11a nodes which is moved
among locations 1-10. At each location, we measure two quantities:
(a) Correct Bin Choice: We disable adaptive sensing on SWIFT and
manually try all possible usable bin settings until we ﬁnd the maximal
set of usable bins that does not affect 802.11a throughput.
(b) Ideal Threshold: This is deﬁned for each location as the highest
threshold that results in a bin choice which does not affect 802.11a in
that location. This is the threshold that is most efﬁcient for wideband,
while still being safe for narrowband. We record the time average
of the power SWIFT sees in each bin when 802.11a transmits, and
calculate the ideal threshold as the minimum power across all bins
that must be left unused to ensure safe 802.11a operation.
Results. Fig. 10 shows the difﬁculty in choosing a single threshold
across locations:
the ideal threshold varies by as much as 4.3×
in our testbed; furthermore, the thresholds do not correlate with
distance, because of the reﬂection and shadowing typical in an indoor
environment.
7.2.2 No Single Threshold is Both Safe and Efﬁcient
In this section, we illustrate how a particular choice of threshold
forces a compromise between safe narrowband operation and efﬁcient
wideband performance across locations.
Method. We use the same placement of wideband nodes as in §7.2.1.
We consider two thresholds based on our experiments in §7.2.1 above,
setting the threshold to either the median, or the minimum of those in
Fig. 10. We then determine the set of bins that would be marked as
usable for each threshold setting and location. We disable adaptive
sensing in SWIFT, and at each location, manually set it to use the set
of bins resulting from the chosen threshold, and measure the 802.11a
throughput.
i
l
s
n
B
e
b
a
s
u
n
U
f
o
r
e
b
m
u
N
25
20
15
10
5
0
21
21
21
17
15
13
SWIFT
Correct
0
0
0
0
1
2
3
4
5
6
7
8
9
10
Figure 12: Adaptive Sensing is Robust: At each location, SWIFT
ﬁnds the correct unusable bins, i.e. those that interfere with 802.11a.
Location
Results. Fig. 11 compares the number of wasted bins, i.e., bins that
the threshold unnecessarily marks as unusable by wideband, at each
location, against the corresponding 802.11a throughput, for both the
median and minimum thresholds from Fig. 10. The median threshold
leads to a dramatic reduction in 802.11a throughput in locations 2, 3,
and 6, while simultaneously producing over 10 wasted wideband bins
in each of locations 8, 9, and 10. Bins are wasted in these locations
because the 802.11a nodes, being too far, are no longer affected by
wideband transmissions, but this threshold still causes many bins to
be marked as unusable. Note that a threshold-based design can be
both unsafe and inefﬁcient in the same location. In particular, with
the median threshold it is unsafe in locations 2 and 6, but also wastes
a few bins in those same locations. This is because a blip in power in
any bin outside of those occupied by the narrowband device causes
that bin to be wasted.
A lower choice of threshold would increase the likelihood of safe
narrowband operation at the cost of increased inefﬁciency. For ex-
ample, using the minimum threshold among all measured locations
ensures safe 802.11a operation in all of these locations, but almost
doubles the bandwidth wastage. In our example, in addition to wast-
ing bins in locations 7, 8, 9, and 10 where 802.11a is out of range,
it also wastes bins in location 1. This wastage is because 802.11a
transmissions leak signiﬁcant power into bins adjacent to those it uses.
Additionally, this minimum threshold may be unsafe for locations
outside the measured set, or for a different 802.11a transmitter.
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
1
1
.
2
0
8
i
l
s
n
B
e
b
a
s
u
n
U
 30
 25
 20
 15
 10
 5
 0
 30
 25
 20
 15
 10
 5
 0
-5
3) 802.11a
    reacts
1) 802.11a
    starts
 0
 2
 4
 6
 8
 10
 12
4) SWIFT retreats to
    previous choice
2) SWIFT backs off
    to conservative
    bin choice
 0
 2
 4
 6
 8
 10
 12
Time (secs)
Figure 13: Responsiveness of Adaptive Sensing: The top graph
shows that 802.11a throughput is not hindered for longer than 0.5
seconds by SWIFT. The bottom graph shows that, when 802.11a ﬁrst
appears, SWIFT backs off to a conservative bin choice within 120
ms, but quickly converges to a maximal set of safe bins.
7.3 Adaptive Sensing
In this section we show how the adaptive sensing algorithm allows
SWIFT to use a maximal set of bins with almost no impact on 802.11a,
and hence is both safe and efﬁcient.
Method. The setup is similar to the previous experiment, except that
the SWIFT nodes now have adaptive sensing turned on. We run one
experiment at each location, by ﬁrst starting the SWIFT node, and
then starting the 802.11a transmission 5 seconds later. We record the
UsableBins setting on which SWIFT settles, and compare it with
the correct bin setting for each location as determined in §7.2.1.
Results. Fig. 12 shows that SWIFT ﬁnds the exact set of unusable
bins, i.e., bins that interfere with 802.11a, at all locations. Note
further that SWIFT detects when 802.11a goes out of range, as in
locations 7-10, and can reclaim all occupied bins.
Fig. 13 shows the typical dynamics of adaptive sensing, using
results from an experiment with 802.11a at location 3. SWIFT con-
servatively backs away from bins used by 802.11a within 120 ms of
802.11a commencing transmission. Additionally, within 4 seconds, it
ﬁnds the ideal bin selection and then sticks with this selection. Over
60% of this time is a result of the communication overhead from our
prototype PCI driver, and can be mostly eliminated with an optimized
implementation.
Speciﬁcally, the bottom graph shows the SWIFT bin selections
over time. SWIFT starts out using all bins, (1) until it ﬁrst detects the
802.11a transmissions. (2) At this point, SWIFT immediately backs
off using a conservative threshold, and avoids bins -2 through 28.
As it gathers more data, and determines that 802.11a is unaffected,
SWIFT decreases its set of unused bins gradually, till it begins avoid-
ing only bins 4 through 22. (3) At this point, we see from the top
graph that the throughput of 802.11a is affected for the ﬁrst time. (4)
SWIFT immediately relaxes its bin selection to avoid bins 3 through
y
t
i
l
i
b
a
b
o
r
P
s
s
e
c
c
u
S
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 10
 20
 30
 40
 50
 60
Number of disagreeing bins
Figure 14: Robustness to disagreement: The ﬁgure shows the
probability of a transmission succeeding as a function of the number
of disagreeing bins. It shows that SWIFT is robust to as much as 40%
disagreement between the set of transmitter and receiver bins.
23, and this returns the throughput of 802.11a to normal. As a result,
SWIFT stabilizes at a state that avoids bins 3 through 23, which is
the tightest bin selection that does not affect 802.11a.
7.4 Dealing with Bin Disagreement
We evaluate the impact of disagreement between communicating
pairs on SWIFT’s band consensus protocol.
Method. We place the wideband transmitter and receiver within a
few feet of each other so that they can communicate with each other
with very low probability of channel bit errors. We do this to ensure
that almost all bit errors are likely to be introduced purely due to
disagreements. We initialize the transmitter and receiver to agree to
use the entire wide band, consisting of 100 bins.
We then conﬁgure the adaptive sensing module to update the trans-
mitter with a new set of usable bins with a sequence of K consecutive
bins marked as narrowband-occupied, to simulate the appearance of
a narrowband transmitter with a band of size K . Since the transmitter
cannot use these bins whereas the receiver continues to expect data in
them, the size of the disagreement between the nodes is K . We send
a random coded sequence from transmitter to receiver using this dis-
agreeing set of bins, check whether it is received correctly, and repeat
this operation with a large number of random coded sequences for
increasing values of K . We declare a transmission to have succeeded
if it is decoded correctly, and compute the probability of a successful
transmission for a disagreement of size K .
Results. Fig. 14 shows that SWIFT’s band consensus works robustly
for a large range of disagreements. When K is small, the consensus
scheme sees a very small number of errors which can be easily
corrected. As K grows, the receiver sees a burst of errors in the
disagreeing bins, but the number of errors in any single code word
is limited because transmitted data bits are interleaved across the
frequency bins. This allows successful transmissions even when the
fraction of disagreement is as large as 37% (37 of the 100 total bins).
Such a large amount of disagreement is extremely unlikely, and hence
SWIFT’s low overhead handshake mechanism can almost always
achieve band consensus. It is only when the extent of disagreement
becomes large (56 bins in our case) that SWIFT nodes will need to
reestablish connectivity using a sync packet.
7.5
Intermittent Narrowband TCP Web Downloads
This experiment evaluates SWIFT’s ability to adapt correctly to inter-
mittent and bursty trafﬁc patterns.
Method. We model a typical home scenario, using an 802.11a node
that accesses the Internet by connecting to a Linksys wireless router.
We ﬁrst start the SWIFT node, and at time t = 15 seconds, the
802.11a node begins periodic web downloads. For this experiment,
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
a
1
1
.
2
0
8
)
s