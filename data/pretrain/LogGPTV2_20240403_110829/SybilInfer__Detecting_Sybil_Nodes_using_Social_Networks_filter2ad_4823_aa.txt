title:SybilInfer: Detecting Sybil Nodes using Social Networks
author:George Danezis and
Prateek Mittal
SybilInfer: Detecting Sybil Nodes using Social Networks
George Danezis
Microsoft Research,
Cambridge, UK.
University of Illinois at Urbana-Champaign,
Prateek Mittal
Illinois, USA.
PI:EMAIL
PI:EMAIL
Abstract
SybilInfer is an algorithm for labelling nodes in a so-
cial network as honest users or Sybils controlled by an
adversary. At the heart of SybilInfer lies a probabilis-
tic model of honest social networks, and an inference
engine that returns potential regions of dishonest nodes.
The Bayesian inference approach to Sybil detection comes
with the advantage label has an assigned probability, indi-
cating its degree of certainty. We prove through analytical
results as well as experiments on simulated and real-world
network topologies that, given standard constraints on the
adversary, SybilInfer is secure, in that it successfully dis-
tinguishes between honest and dishonest nodes and is not
susceptible to manipulation by the adversary. Further-
more, our results show that SybilInfer outperforms state
of the art algorithms, both in being more widely applica-
ble, as well as providing vastly more accurate results.
1
Introduction
The Peer-to-peer paradigm allows cooperating users to
enjoy a service with little or no need for any centralised
infrastructure. While communication [24] and storage [4]
systems employing this design philosophy have been pro-
posed, the lack of any centralised control over identities
opens such systems to Sybil attacks [8]: a few malicious
nodes can simulate the presence of a very large number
of nodes, to take over or disrupt key functions of the
distributed or peer-to-peer system. Any attempt to build
fault-tolerance mechanisms is doomed since adversaries
can control arbitrary fractions of the system nodes. This
Sybil attack is further made practical through the use of
the existing large number of compromised networked ma-
chines (often called zombies) being part of bot-nets.
Similar problems plague Web 2.0 applications that
rely on collaborative tagging, ﬁltering and editing, like
Wikipedia [31], or del.icio.us [28]. A single user
can register under different pseudonyms, and bypass any
elections of velocity check mechanism that attempts to
guarantee the quality of the data through the plurality of
contributors. On-line forums, starting with USENET [19],
to contemporary blogs or virtual worlds like Second
Life [22] always have to deal with the issue of disruption
in the discussion threads, with persistent abusers coming
back under different names. All these are forms of Sybil
attacks at the high-level application layers.
There are two schools of Sybil defence mechanisms,
the centralised and decentralised ones. Centralised de-
fences assume the existence of an authority that is capable
of doing admission control for the network [3]. Its role is
to rate limit the introduction of ‘fake’ identities, to ensure
that the fraction of corrupt nodes remains under a certain
threshold. The practicalities of running such an authority
are very system-speciﬁc and in general it would have to
act as a Public Key Certiﬁcation Authority as well as a
guardian of the moral standing of the nodes introduced –
a very difﬁcult problem in practice. Such centralised so-
lutions are also at odds with the decentralisation guiding
principle of peer-to-peer systems.
Decentralised approaches recognise the difﬁculty in
having a single authority vouching for nodes, and dis-
tribute this task across all nodes of the system. The ﬁrst
such proposal is Advogato [14], which aimed to reduce
abuse in on-line services, followed by a proposal to use
introduction graphs of Distributed Hash Tables [6] to limit
the potential for routing disruption in those systems. The
state of the art SybilGuard [27] and SybiLimit [26] pro-
pose the use of social networks to mitigate Sybil attacks.
As we will see, SybilGuard suffers from high false neg-
atives, while SybilLimit makes unrealistic assumptions
about the knowledge of number of honest nodes in the net-
work. In both cases the systems Sybil detection strategies
are based on heuristics that are not optimal.
Our key contribution is to propose SybilInfer, a method
for detecting Sybil nodes in a social network, that makes
use of all information available to the defenders. The for-
mal model underlying our approach casts the problem of
detecting Sybil nodes in the context of Bayesian Infer-
ence: given a set of stated relationships between nodes,
the task is to label nodes as honest or dishonest. Based on
some simple and generic assumptions, like the fact that
social networks are fast mixing [18], we sample cuts in
the social graph according to the probability they divide
it into honest and dishonest regions. These samples not
only allow us to label nodes as honest or Sybil attackers,
but also to associate with each label output by our algo-
rithm a degree of certainty.
The proposed techniques can be applied in a wide vari-
ety of settings where high reliability peer-to-peer systems,
or Sybil-resistant collaborative mechanisms, are required
even under attack:
• Secure routing in Distributed Hash Tables motivated
early research into this ﬁeld, and our proposal can
be used instead of a centralised authority to limit the
fraction of dishonest nodes, that could disrupt rout-
ing [3].
• In public anonymous communication networks, such
as Tor [7], our techniques can be used to eliminate the
potential for a single entity introducing a large num-
ber of nodes, and de-anonymize users’ circuits. This
was so far a key open problem for securely scaling
such systems.
• Leader Election [2] and Byzantine agreement [12]
mechanisms that were rendered useless by the Sybil
attack can again be of use, after Sybil nodes have
been detected and eliminated from the social graph.
• Finally, detecting Sybil accounts is a key step in pre-
venting false email accounts used for spam, or pre-
venting trolling and abuse of on-line communities
and web-forums. Our techniques can be applied in
all those settings, to ﬁght spam and abuse [14].
SybilInfer applies to settings where a peer-to-peer or dis-
tributed system is somehow based on or aware of social
connections between users. Properties of natural social
graphs are used to classify nodes are honest or Sybils.
While this approach might not be applicable to very tradi-
tional peer-to-peer systems [24], it is more an more com-
mon for designers to make distributed systems aware of
the social environment of their users. Third party social
network services [29, 30], can also be used to extract so-
cial information to protect systems against sybil attacks
using SybilInfer. Section 5 details deployment strategies
for SybilInfer and how it is applicable to current systems.
We show analytically that SybilInfer is, from a theo-
retical perspective, very powerful: under ideal circum-
stances an adversary gains no advantage by introducing
into the social network any additional Sybil nodes that are
not ‘naturally’ connected to the rest of the social structure.
Even linking all dishonest nodes with each other (with-
out adding any Sybils) changes the characteristics of their
social sub-graph, and can under some circumstances be
detected. We demonstrate the practical efﬁcacy of our ap-
proach using both synthetic scale-free topologies as well
as real-world LiveJournal data. We show very signiﬁcant
security improvements over both SybilGuard and Sybil-
Limit, the current state of the art Sybil defence mecha-
nisms. We also propose extensions that enable our solu-
tion to be implemented in decentralised settings.
This paper is organised in the following fashion: in sec-
tion 2 we present an overview of our approach that can
be used as a road-map to the technical sections. In sec-
tion 3 we present our security assumptions, threat model,
the probabilistic model and sampler underpinning Sybil-
Infer; a security evaluation follows in section 4, providing
analytical as well as experimental arguments supporting
the security of the method proposed along with a compar-
ison with SybilInfer. Section 5 discusses the settings in
which SybilInfer can be fruitfully used, followed by some
conclusions in section 6.
2 Overview
The SybilInfer algorithm takes as an input a social
graph G and a single known good node that is part of this
graph. The following conceptual steps are then applied to
return the probability each node is honest or controlled by
a Sybil attacker:
• A set of traces T are generated and stored by per-
forming special random walks over the social graph
G. These are the only information retained about the
graph for the rest of the SybilInfer algorithm, and
their generation is detailed in section 3.1.
• A probabilistic model is then deﬁned that describes
the likelihood a trace T was generated by a speciﬁc
honest set of nodes within G, called X. This model
is based on our assumptions that social networks are
fast mixing, while the transitions to dishonest regions
are slow. Given the probabilistic model, the traces T
and the set of honest nodes we are able to calculate
Pr[T|X is honest]. The calculation of this quantity
is the subject of section 3.1 and section 3.2.
• Once the probabilistic model is deﬁned, we use
Bayes theorem to calculate for any set of nodes X
and the generated trace T , the probability that X con-
sists of honest nodes. Mathematically this quality is
deﬁned as Pr[X is honest|T ]. The use of Bayes the-
orem is described in section 3.1.
• Since it is not possible to simply enumerate all sub-
sets of nodes X of the graph G, we instead sample
from the distribution of honest node sets X, to only
get a few X0, . . . , XN ∼ Pr[X is honest|T ]. Using
those representative sample sets of honest nodes, we
can calculate the probability any node in the system
is honest or dishonest. Sampling and the approxi-
mation of the sought marginal probabilities are the
subject of section 3.3.
The key conceptual difﬁculty of our approach is the
deﬁnition of the probabilistic model over the traces T , and
graph. Several authors have shown that real-life so-
cial networks are indeed fast mixing [16, 18].
3. A node knows the complete social network topology
(G) : social network topologies are relatively static,
and it is feasible to obtain a global snapshot of the
network. Friendship relationships are already public
data for popular social networks like Facebook [29]
and Orkut [30]. This assumption can be relaxed to
using sub-graphs, making SybilInfer applicable to
decentralised settings.
Assumptions (1) and (2) are identical to those made by
the SybilGuard and SybilInfer systems. Previously, the
authors of SybilGuard [27] observed that when the adver-
sary creates too many Sybil nodes, then the graph G has a
small cut: a set of edges that together have small station-
ary probability and whose removal disconnects the graph
into two large sub-graphs.
This intuition can be pushed much further to build su-
perior Sybil defences.
It has been shown [20] that the
presence of a small cut in a graph results in slow mix-
ing which means that fast mixing implies the absence of
small cuts. Applied to social graphs this observation un-
derpins the key intuition behind our Sybil defence mech-
anism: the mixing between honest nodes in the social net-
works is fast, while the mixing between honest nodes and
dishonest nodes is slow. Thus, computing the set of honest
nodes in the graph is related to computing the bottleneck
cut of the graph.
One way of formalising the notion of a bottleneck cut,
is in terms of graph conductance (Φ) [11], deﬁned as:
Φ =
min
X⊂V :π(X)<1/2
ΦX ,
where ΦX is deﬁned as:
ΦX =
Σx∈XΣy /∈X π(x)Pxy
π(X)
,
and π(·) is the stationary distribution of the graph. Intu-
itively for any subset of vertices X ⊂ V its conductance
ΦX represents the probability of going from X to the rest
of the graph, normalised by the probability weight of be-
ing on X. When the value is minimal the bottleneck cut
in the graph is detected.
Note that performing a brute force search for this bot-
tleneck cut is computationally infeasible (it is actually NP-
Hard, given its relationship to the sparse-cut problem).
Furthermore, ﬁnding the exact smallest cut is not as im-
portant as being able to judge how likely any cut is, to be
dividing nodes into an honest and dishonest region. This
probability is related to the deviation of the size of any
cut from what we would expect in a natural, fast mixing,
social network.
Figure 1. Illustration of Honest nodes, Sybil
nodes and attack edges between them.
its inversion using Bayes theorem to deﬁne a probability
distribution over all possible honest sets of nodes X. This
distribution describes the likelihood that a speciﬁc set of
nodes is honest. The key technical challenge is making
use of this distribution to extract the sought probability
each node is honest or dishonest, that we achieve via sam-
pling. Section 3, describes in some detail how these issues
are tackled by SybilInfer.
3 Model & Algorithm
Let us denote the social network topology as a graph G
comprising vertices V , representing people and edges E,
representing trust relationships between people. We con-
sider the friendship relationship to be an undirected edge
in the graph G. Such an edge indicates that two nodes trust
each other to not be part of a Sybil attack. Furthermore,
we denote the friendship relationship between an attacker
node and an honest node as an attack edge and the hon-
est node connected to an attacker node as a naive node or
misguided node. Different types of nodes are illustrated in
ﬁgure 1. These relationships must be understood by users
as having security implications, to restrict the promiscu-
ous behaviour often observed in current social networks,
where users often ﬂag strangers as their friends [23].
We build our Sybil defence around the following as-
sumptions:
1. At least one honest node in the network is known. In
practise, each node trying to detect Sybil nodes can
use itself as the apriori honest node. This assump-
tion is necessary to break symmetry: otherwise an
attacker could simply mirror the honest social struc-
ture, and any detector would not be able to distin-
guish which of the two regions is the honest one.
2. Social networks are fast mixing:
this means that a
random walk on the social graph converges quickly
to a node following the stationary distribution of the
Honest NodesSybil NodesAttack Edges3.1 Inferring honest sets
In this paper, we propose a framework based on
Bayesian inference to detect approximate cuts between
honest and Sybil node regions in a social graph and use
those to infer the labels of each node. A key strength of
our approach is that it, not only associates labels to each
node, but also ﬁnds the correct probability of error that
could be used by peer-to-peer or distributed applications
to select nodes.
The ﬁrst step of SybilInfer is the generation of a set of
random walks on the social graph G. These walks are gen-
erated by performing a number s of random walks, start-
ing from each node in the graph (i.e. a total of s · |V |
walks.) A special probability transition matrix is used,
deﬁned as follows:
(cid:40)min( 1
di
, 1