technology is exploited which is the most promising NVM
technology for on-chip memories [21].
In [9], the reliability of STT-RAM against high-energy
particle strike and thermal ﬂuctuation have been evaluated. It
Fig. 1. The interaction of the proposed architecture in a system
has been reported that unlike SRAM cells, STT-RAM cells
are completely immune against particle strikes. Furthermore,
considering the results, the probability of errors caused by
thermal ﬂuctuation would be less than 10-15 for a year,
which is signiﬁcantly less than the probability of SRAM
radiation-induced transient errors. These results conﬁrm that
STT-RAM cells would be considerably more reliable than
SRAM cells against radiation-induced transient errors as well
as thermal ﬂuctuations.
Due to signiﬁcantly higher robustness of STT-RAM cells
against soft errors as compared to SRAM cells, FTSPM
proposes to partition SPM area to a STT-RAM section and
a SRAM section; and to map the program blocks to the
SPM hybrid space such that the reliability is enhanced while
providing an efﬁcient trade-off between performance, energy
consumption, and STT-RAM endurance. To provide a trade
off between reliability, performance, and energy consumption,
SRAM section is also partitioned to a parity protected
part and a Single Error Corrected-Double Error Detected
(SEC-DED) protected part. The proposed approach is based
on the following key observations:
∙
∙
∙
∙
Vulnerabilities of various program blocks to soft errors
are not the same. In other words, the probability of a
faulty block to produce an erroneous output is different
for various program blocks.
Fully STT-RAM-based SPM structure satisﬁes the re-
liability requirement; however it endures performance
and energy consumption overheads of write operations
in addition to limited STT-RAM endurance.
Overhead of protecting fully SRAM-based SPM
against soft errors is signiﬁcantly higher than partially
SRAM-based SPM.
Software controlled SPM allows to manage available
SPM space according to the required level of reliabil-
ity.
According to these observations, a hybrid SPM structure is
proposed to improve the reliability of SPM while taking advan-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:05 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 1 Mapping Determiner Algorithm (MDA)
Input: Data and Code Blocks of Program
Output: Proper Position of each Block across the hybrid SPM
1: while any block exist do
2:
if (current block == code block) and (current block
size ≤ instruction SPM size) then
3:
4:
5:
6:
map the current block to instruction SPM
end if
if (current block == data block) and (current block
size ≤ STT-RAM size in data SPM) then
map the current block to STT-RAM part of data
SPM
end if
7:
8: end while
9: while any block exist in STT-RAM part of data SPM do
current block susceptibility ← number of block’s
10:
reference * it’s life time
constructing a descending order susceptibility list of
blocks in STT-RAM section of data SPM
12: end while
{Checking the performance overhead of current mapping
scenario}
13: while performance overhead of current mapping scenario
11:
> performance threshold do
14:
15:
16:
omit the least susceptible block from STT-RAM of
data SPM
update susceptibility list
calculate performance overhead of current mapping
scenario
17: end while
{Checking the power overhead of current mapping sce-
nario}
18: while power overhead of current mapping scenario >
power threshold do
19:
20:
21:
22: end while
omit the least susceptible block from STT-RAM of
data SPM
update susceptibility list
calculate power overhead of current mapping scenario
{Checking the endurance of current mapping scenario}
23: while any block exist in STT-RAM part of data SPM do
if number of write in current block > write cycles
24:
threshold then
omit current block from STT-RAM part of data
SPM
25:
end if
26:
27: end while
{Determining the position of evicted blocks from STT-
RAM part of data SPM}
28: 𝑎𝑣𝑔𝑠𝑢𝑠 ← 𝑐𝑎𝑙𝑐𝑢𝑙𝑎𝑡𝑒 ”avg. susceptibility over evicted
blocks”
29: while any block exist in STT-RAM part of data SPM do
if (current block susceptibility ≥ 𝑎𝑣𝑔𝑠𝑢𝑠) and ( cur-
30:
rent block size ≤ ECC size in data SPM) then
31:
32:
33:
Map the current block to ECC part of data SPM
end if
if (current block susceptibility ≤ 𝑎𝑣𝑔𝑠𝑢𝑠) and (current
block size ≤ Parity size in data SPM) then
Map the current block to Parity part of data SPM
34:
end if
35:
36: end while
tages of both SRAM and STT-RAM technologies to overcome
their limitations. Fig. 1 shows the suggested structure for SPM.
The main challenge for the proposed hybrid structure is
to distribute program blocks between the STT-RAM section
and the SRAM section such that the system requirements are
satisﬁed. As mentioned, STT-RAM cells are immune against
soft errors and their static power is signiﬁcantly lower than that
of SRAM cells; however, they suffer from limited endurance,
high latency, and high dynamic power of write operation.
On the other hand,
the limitations of STT-RAMs are not
experienced in SRAM cells but they have their own drawbacks.
Firstly, in nano-scale technologies (45nm and beyond), the
static power is becoming the dominant factor of the total
power consumption [22]. This limits the use of SRAM cells
for on-chip memories in nano-scale technologies. In addition,
it is a well-known fact that SRAM cells are highly vulnerable
to radiation-induced errors especially in [23] where particle
strikes may cause MBUs. ECCs can be used to protect SRAM
cells against soft errors; however, the area and power con-
sumption of ECCs signiﬁcantly increases when designed for
detection and correction of multiple bit ﬂips.
According to the above discussions, the proposed SPM
structure consists of three regions with different characteristics
in term of reliability, performance, power, and endurance. The
proposed mapping algorithm is also responsible to generate
a reliable SPM allocation without noticeably affecting other
parameters. From the reliability point of view, all of the
program blocks are better to be mapped to the STT-RAM
region; from the performance and dynamic energy points of
view, all the program blocks are better to be mapped to the
parity-protected SRAM region and ﬁnally, it is not efﬁcient
to map write intensive blocks to the STT-RAM region for
endurance point of view. The proposed mapping algorithm
considers these extreme points and tries to allocate the more
reliable SPM regions to more vulnerable program blocks
without violating performance, energy, and endurance budget.
The mapping algorithm consists of two phases; an off-
line phase and an on-line phase. The off-line phase which
is named Mapping Determiner Algorithm (MDA) is respon-
sible for determining each program block to be mapped to
which SPM region. Algorithm 1 represents this phase of the
algorithm. The inputs of this off-line phase are the proﬁling
information of the application. The second phase is responsible
for on-line transferring of blocks between SPM and the off-
chip memory.
Prior to applying Algorithm 1, a pre-characterization of
program blocks is accomplished based on the proﬁling infor-
mation to distinguish which blocks should be mapped to SPM.
Afterward, Algorithm 1 speciﬁes the SPM region that should
be allocated to each block in the following six steps:
1)
All data blocks and instruction blocks are mapped
to the STT-RAM region of D-SPM and I-SPM,
respectively. We have proposed to use fully STT-
RAM I-SPM instead of hybrid structure because the
write operation overhead and STT-RAM endurance
is not a concern for read-only instruction blocks.
Instruction mapping is accomplished in this step and
the algorithm continues in the next ﬁve steps to
deallocate a subset of data blocks from the STT-
RAM region and allocate the SEC-DED protected
and the parity protected SRAM region to them. This
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:05 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I.
RESULTS OF PROFILING CASE STUDY PROGRAM
Block Name
Number of
Reads
Number of
Writes
Main
Mul
Add
Array1
Array2
Array3
Array4
Stack
3,327,700
25,973,000
906,200
2,181,630
1,113,200
2,178,000
1,113,200
234,009
0
0
0
1,114,894
484
1,113,684
484
177,052
Average
Number of
Reads in each
Reference
Average
Number of
Writes in each
Reference
2,620
40,710
1,433
10,800
5,538
10,835
5,538
1
0
0
0
5,519
2
5,540
2
1
Number of
Stack Calls
397,561
6,400
7,100
0
0
0
0
0
Maximum Stack
Size Needed
(Byte)
348
72
72
0
0
0
0
0
Life-Time
(Cycles)
2,086,576
4,221,439
193,356
4,217,662
4,215,929
4,207,400
4,205,142
19,813
2)
3)
4)
5)
6)
is performed in order to satisfy performance, energy
consumption, and endurance budgets.
Data blocks mapped to STT-RAM region are sorted
according to their vulnerability to soft errors. Vulner-
ability of a block is calculated as the multiplication
of the number of block reference and its life-time.
The performance overhead of the current SPM al-
location scenario is calculated. If the performance
overhead exceeds its predeﬁned threshold (a custom