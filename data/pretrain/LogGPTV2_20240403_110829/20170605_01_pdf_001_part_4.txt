configurations to random configurations is 1-to-10. During each
Inthenextstep,OtterTuneusesGaussianProcess(GP)regres-
iteration of gradient descent, the optimizer takes a “step” in the
sion[42]torecommendconfigurationsthatitbelieveswillimprove
direction of the local optimum until it converges or has reached
thetargetmetric.GPregressionisastate-of-the-arttechniquewith
thelimitonthemaximumnumberofstepsitcantake. OtterTune
powerapproximatelyequaltothatofdeepnetworks. Therearea
selectsfromthesetofoptimizedconfigurationstheonethatmax-
number of attractive features of GPs that make it an appropriate
imizesthepotentialimprovementtorunnext. Thissearchprocess
choice for modeling the configuration space and making recom-
isquick;inourexperimentsOtterTune’stuningmanagertakes10–
mendations. ForemostisthatGPsprovideatheoreticallyjustified
20sectocompleteitsgradientdescentsearchperobservationpe-
waytotradeoffexploration(i.e.,acquiringnewknowledge)andex-
riod.Longersearchesdidnotyieldbetterresults.
ploitation(i.e.,makingdecisionsbasedonexistingknowledge)[32,
Similartotheotherregression-basedmodelsthatweuseinOtter-
45].AnotherreasonisthatGPs,bydefault,provideconfidencein-
Tune(seeSects.5.1and6.1),weemploypreprocessingtoensure
tervals.Althoughmethodslikebootstrappingcanbeusedtoobtain
that features are continuous and of approximately the same scale
confidenceintervalsfordeepnetworksandothermodelsthatdonot
1015
andrange. Weencodecategoricalfeatureswithdummyvariables odsproducedstatisticallysignificantdifferencesinourevaluation,
andstandardizealldatabeforepassingitasinputtotheGPmodel. butapplicationswithgreatervariationsintheirworkloadpatterns
Once OtterTune selects the next configuration, it returns this mayneedlongerperiods.FortheOLAPworkloads,OtterTuneuses
along with the expected improvement from running this configu- avariable-lengthobservationperiodthatisthetotalexecutiontime
rationtotheclient. TheDBAcanusetheexpectedimprovement ofthetargetworkloadforthatperiod. Theworkload’stotalexecu-
calculationtodecidewhethertheyaresatisfiedwiththebestcon- tiontimeisthetargetmetricfortheOLAPexperiments.
figurationthatOtterTunehasgeneratedthusfar.
7.2 TrainingDataCollection
7. EXPERIMENTALEVALUATION AsdiscussedinSect.3,OtterTunerequiresacorpusofprevious
tuningsessionsthatexploredifferentknobconfigurationstowork
WenowpresentanevaluationofOtterTune’sabilitytoautomat-
properly. Otherwise, everytuningsessionwouldbethefirsttime
icallyoptimizetheconfigurationofaDBMS.Weimplementedall
thatithasseenanyapplicationanditwouldnotbeabletoleverage
ofOtterTune’salgorithmsusingGoogleTensorFlowandPython’s
the knowledge it gains from previous sessions. This means that
scikit-learn.
we have to bootstrap OtterTune’s repository with initial data for
WeusethreedifferentDBMSsinourevaluation:MySQL(v5.6),
trainingitsMLmodels.Ratherthanrunningeveryworkloadinthe
Postgres (v9.3), and Actian Vector (v4.2). MySQL and Postgres
OLTP-Benchsuite,weusedpermutationsofYCSBandTPC-H.
were installed using the OS’s package manager. Vector was in-
Wecreated15variationsofYCSBwithdifferentworkloadmix-
stalledfrompackagesprovidedonitswebsite. Wedidnotmodify
tures. ForTPC-H,wedividedthequeriesintofourgroupsthatare
any knobs in their default configurations other than to enable in-
eachemblematicoftheoverallworkload[12]. Allofthetraining
comingconnectionsfromaremoteIPaddress.
datawascollectedusingtheDBMSs’defaultisolationlevel.
We conducted all of our deployment experiments on Amazon
We also needed to evaluate different knob configurations. For
EC2.Eachexperimentconsistsoftwoinstances.Thefirstinstance
eachworkload,weperformedaparametersweepacrosstheknobs
isOtterTune’scontrollerthatweintegratedwiththeOLTP-Bench
usingrandomvalues. Insomecases,wehadtomanuallyoverride
framework.Theseclientsaredeployedonm4.largeinstanceswith
thevalidrangesoftheseknobsbecausetheDBMSwouldrefuseto
4vCPUsand16GBRAM.Thesecondinstanceisusedforthetar-
startifanyoftheknobsettingsexceededthephysicalcapacityof
getDBMSdeployment. Weusedm3.xlargeinstanceswith4vC-
anyofthemachine’sresources(e.g.,ifthesizeofthebufferpool
PUsand15GBRAM.WedeployedOtterTune’stuningmanager
wassettobelargerthantheamountofRAM).Thiswouldnotbea
andrepositoryonalocalserverwith20coresand128GBRAM.
probleminarealdeploymentscenariobecauseiftheDBMSdoes
WefirstdescribeOLTP-Bench’sworkloadsthatweusedinour
notstartthenOtterTuneisnotabletocollectthedata.
data collection and evaluation. We then discuss our data collec-
We executed a total of over 30k trials per DBMS using these
tiontopopulateOtterTune’srepository.Theremainingpartsofthis
different workload and knob configurations. Each of these trials
sectionaretheexperimentsthatshowcaseOtterTune’scapabilities.
istreatedlikeanobservationperiodinOtterTune,thusthesystem
7.1 Workloads collectsboththeexternalmetrics(i.e.,throughput,latency)andin-
ternalmetrics(e.g.,pagesread/written)fromtheDBMS.
Fortheseexperiments,weuseworkloadsfromtheOLTP-Bench
For each experiment, we reset OtterTune’s repository back to
testbedthatdifferincomplexityandsystemdemands[3,23]:
its initial setting after loading our training data. This is to avoid
YCSB:TheYahoo!CloudServingBenchmark(YCSB)[18]is taintingourmeasurementswithadditionalknowledgegainedfrom
modeled after data management applications with simple work- tuningthepreviousexperiments. FortheOLAPexperiments, we
loads and high scalability requirements. It is comprised of six alsoensurethatOtterTune’sMLmodelsarenottrainedwithdata
OLTPtransactiontypesthataccessrandomtuplesbasedonaZip- fromthesameTPC-Hworkloadmixtureasthetargetworkload.
fiandistribution. Thedatabasecontainsasingletablewith10at-
tributes.Weuseadatabasewith18mtuples(∼18GB). 7.3 NumberofKnobs
TPC-C:Thisisthecurrentindustrystandardforevaluatingthe WebeginwithananalysisofOtterTune’sperformancewhenop-
performanceofOLTPsystems[51]. Itconsistsoffivetransactions timizing different numbers of knobs during each observation pe-
withninetablesthatsimulateanorderprocessingapplication. We riod. The goal of this experiment is to show that OtterTune can
useadatabaseof200warehouses(∼18GB)ineachexperiment. properlyidentifytheoptimalnumberofknobsfortuningeachDBMS.
AlthoughusingmoreknobsmayallowOtterTunetofindabetter
Wikipedia:ThisOLTPbenchmarkisderivedfromthesoftware
configuration, it also increases the computational overhead, data
thatrunsthepopularon-lineencyclopedia. Thedatabasecontains
requirements,andmemoryfootprintofitsalgorithms.
11tablesandeightdifferenttransactiontypes. Thesetransactions
WeusetheTPC-CbenchmarkfortheOLTPDBMSs(MySQL
correspondtothemostcommonoperationsinWikipediaforarticle
andPostgres)andTPC-HfortheOLAPDBMS(Vector).Weeval-
and“watchlist”management. WeconfiguredOLTP-Benchtoload
uate two types of knob count settings. The first is a fixed count
adatabaseof100karticlesthatis∼20GBintotalsize. Thus,the
where OtterTune considers the same set of knobs throughout the
combination of a complex database schema with large secondary
entiretuningsession.Thesecondisourincrementalapproachfrom
indexesmakesthisbenchmarkusefulforstress-testingaDBMS.
Sect.5.3whereOtterTuneincreasesthenumbertheknobsittunes
TPC-H:Thisisadecisionsupportsystemworkloadthatsimu-
graduallyovertime.Forthissetting,thetuningmanagerstartswith
lates an OLAP environmentwhere there is little prior knowledge
fourknobsandthenincreasesthecountbytwoevery60min.With
ofthequeries[52]. Itcontainseighttablesin3NFschemaand22
eachknobcountsetting,weselectthetop-kknobsrankedbytheir
queries with varying complexity. We use a scale factor of 10 in
impactasdescribedinSect.5. Weuse15hourtuningsessionsto
eachexperiment(∼10GB).
determinewhetherthefixedsettingcaneverachievethesameper-
For the OLTP workloads, we configure OtterTune to use five- formanceastheincrementalapproach; wenotethatthisislonger
minute observation periods and assign the target metric to be the thanweexpectthataDBAwouldnormallyrunOtterTune.
99%-tilelatency. Wedidnotfindthatshorterorlongerfixedperi-
1016
4knobs 8knobs 16knobs Maxknobs Incremental
310 280 4400
)sm(elit-%ht99 )sm(elit-%ht99 )sm(emitnurlatoT
300 260 4350
290 240 4300
280 220 4250
0 2 0 0 4 0 0 6 0 0 8 0 0 1 0 0 0 0 2 0 0 4 0 0 6 0 0 8 0 0 1 0 0 0 0 2 0 0 4 0 0 6 0 0 8 0 0 1 0 0 0
Tuningtime(minutes) Tuningtime(minutes) Tuningtime(minutes)
(a)MySQL(TPC-C) (b)Postgres(TPC-C) (c)Vector(TPC-H)
Figure5:NumberofKnobs–TheperformanceoftheDBMSsforTPC-CandTPC-Hduringthetuningsessionusingdifferentconfigurationsgeneratedby
OtterTunethatonlyconfigureacertainnumberofknobs.
MySQL: The results in Fig. 5a show that the incremental ap- The optimal number of knobs for a tuning session varies per
proachenablesOtterTunetofindagoodconfigurationforMySQL DBMS and workload, thus it is impossible to provide a univer-
in approximately 45 min. Unlike Postgres and Vector, the incre- sal knob setting. These results show that increasing the number
mentalapproachprovidesanoticeableboostintuningperformance of knobs that OtterTune considers over time is the best approach
for MySQL in contrast to the fixed knob settings. The next best because it strikes the right balance between complexity and per-
knob count setting for MySQL is the fixed four knobs. These formance. Usingthisapproach,OtterTuneisabletotuneDBMSs
fourknobsincludetheDBMS’sbufferpoolandlogfilesizes,(see likeMySQLandPostgresthathavefewimpactfulknobs, aswell
Fig.1a),aswellasthemethodusedtoflushdatatostorage. The asDBMSslikeVectorthatrequiremoreknobstobetunedinorder
largerknobcountsettingsincludetheabilitytocontroladditional toachievegoodperformance.
threadpoliciesandthenumberofpagesprefetchedintothebuffer
7.4 TuningEvaluation
pool. Butbasedonourexperimentswefindthatthesehavemin-
imal impact on performance for a static TPC-C workload. Thus, Wenowdemonstratehowlearningfromprevioustuningsessions
includingtheselessimpactfulknobsincreasestheamountofnoise improvesOtterTune’sabilitytofindagoodDBMSknobconfigu-
inthemodel,makingithardertofindtheknobsthatmatter. ration. To accomplish this, we compare OtterTune with another
tuning tool, called iTuned [24], that also uses Gaussian Process
Postgres: TheresultsinFig.5bshowthattheincrementalap-
modelstosearchforanoptimalDBMSconfiguration.
proachandthefixedfourknobsettingprovideOtterTunewiththe
UnlikeOtterTune,iTuneddoesnottrainitsGPmodelsusingdata
best increase in the DBMS’s performance. Similar to MySQL,
collectedfromprevioustuningsessions. Itinsteadusesastochas-
Postgreshasasmallnumberofknobsthathavealargeimpacton
ticsamplingtechnique(LatinHypercubeSampling)togeneratean
theperformance. Forexample, theknobthatcontrolsthe sizeof
initialsetof10DBMSconfigurationsthatareexecutedatthestart
thebufferpoolandtheknobthatinfluenceswhichqueryplansare
ofthetuningsession.iTunedusesthedatafromtheseinitialexperi-
selected by the optimizer are both in the four knob setting. The
mentstotrainGPmodelsthatthensearchforthebestconfiguration
largerfixedknobsettingsperformworsethanthefourknobsetting
insamewayasdescribedinSect.6.2.
becausetheadditionalknobsthattheycontainhavelittleimpacton
Forthiscomparison,weuseboththeTPC-CandWikipediabench-
thesystem’sperformance.Thus,alsotuningtheseirrelevantknobs
marksfortheOLTPDBMSs(MySQLandPostgres)andtwovari-
justmakestheoptimizationproblemmoredifficult.Theincremen-
ants of the TPC-H workload for the OLAP DBMS (Vector). Ot-
talmethod, however, provestobearobusttechniqueforDBMSs
terTunetrainsitsGPmodelsusingthedatafromthemostsimilar
thathaverelativelyfewimpactfulknobsfortheTPC-Cworkload