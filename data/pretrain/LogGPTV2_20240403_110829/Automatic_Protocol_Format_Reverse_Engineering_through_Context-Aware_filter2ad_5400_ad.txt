AutomaticProtocolFormatReverseEngineeringthroughContext-AwareMonitoredExecution∗ZhiqiangLin†,XuxianJiang‡,DongyanXu†,XiangyuZhang††DepartmentofComputerScience‡DepartmentofInformationandSoftwareEngineeringPurdueUniversityGeorgeMasonUniversity{zlin,dxu,xyzhang}@cs.purdue.eduxjiang@ise.gmu.eduAbstractProtocolreverseengineeringhasoftenbeenamanualprocessthatisconsideredtime-consuming,tediousanderror-prone.Toaddressthislimitation,anumberofsolu-tionshaverecentlybeenproposedtoallowforautomaticprotocolreverseengineering.Unfortunately,theyareei-therlimitedinextractingprotocolﬁeldsduetolackofpro-gramsemanticsinnetworktracesorprimitiveinonlyre-vealingtheﬂatstructureofprotocolformat.Inthispaper,wepresentasystemcalledAutoFormatthataimsatnotonlyextractingprotocolﬁeldswithhighaccuracy,butalsore-vealingtheinherently“non-ﬂat”,hierarchicalstructuresofprotocolmessages.AutoFormatisbasedonthekeyinsightthatdifferentprotocolﬁeldsinthesamemessagearetypi-callyhandledindifferentexecutioncontexts(e.g.,therun-timecallstack).Assuch,bymonitoringtheprogramexe-cution,wecancollecttheexecutioncontextinformationforeverymessagebyte(annotatedwithitsoffsetintheentiremessage)andclusterthemtoderivetheprotocolformat.Wehaveevaluatedoursystemwithmorethan30protocolmes-sagesfromsevenprotocols,includingtwotext-basedproto-cols(HTTPandSIP),threebinary-basedprotocols(DHCP,RIP,andOSPF),onehybridprotocol(CIFS/SMB),aswellasoneunknownprotocolusedbyareal-worldmalware.OurresultsshowthatAutoFormatcannotonlyidentifyindi-vidualmessageﬁeldsautomaticallyandwithhighaccuracy(anaverage93.4%matchratiocomparedwithWireshark),butalsounveilthestructureoftheprotocolformatbyre-vealingpossiblerelations(e.g.,sequential,parallel,andhi-erarchical)amongthemessageﬁelds.∗PartofthisresearchhasbeensupportedbytheNationalScienceFoun-dationundergrantsCNS-0716376andCNS-0716444.ThebulkofthisworkwasperformedwhentheﬁrstauthorwasvisitingGeorgeMasonUni-versityinSummer2007.1IntroductionTheknowledgeaboutnetworkprotocolspeciﬁcationisvaluabletomanysecurityapplications:Network-basedin-trusiondetectionsystems(e.g.,Snort[4]andBro[24])orvulnerability-speciﬁcﬁlters(e.g.,Shield[28])requireknowledgeaboutprotocolstoperformdeeppacketin-spection;Networkmanagementsoftwaredependsonsuchknowledgetocorrectlyrecognizeandclassifymonitorednetworktrafﬁc;Fuzztesting(e.g.,PacketVaccine[29]andShieldGen[14])cantakeadvantageofsuchknowledgetoimprovethefuzzingprocessbygenerating“malicious”in-putsmoreefﬁciently.Inpractice,however,itismostlyamanualanderror-proneprocesstoderiveprotocolspeciﬁcations.Foranopenprotocol(e.g.,HTTP),thespeciﬁcationcanbeacquiredfrompublicdocumentationsuchasRFCs.Foraclosedpro-tocol(e.g.,SMBorSkype),thespeciﬁcationhastobere-verseengineeredmanuallyandcomplexitiesarise:(1)Asingleprotocolmessageusuallycontainsalargenumberofﬁelds(e.g.,theSambaNTLMSSPAUTHmessagecon-tainsabout50ﬁelds);(2)Anindividualﬁeldmaynotbestaticandmayhavevaryingsize;and(3)Moreimportantly,theremayexistcomplexrelationships(e.g.,sequential,par-allel,andhierarchical)ordependenciesamongtheﬁelds.Assuch,protocolreverseengineeringiswidelyknownasachallengingtaskandexistingmanualapproachestendtobetedious,time-consuming,anderror-prone.Asanexam-ple,afternumeroustrialsanderrors,ittook12yearsfortheopen-sourceSambaprojecttoreverseengineertheMi-crosoftSMBprotocol[1].Toaddressthischallenge,newsolutions,includingPro-tocolInformatics(PI)[3],Discoverer[12],andPolyglot[9],haverecentlybeenproposedtoautomatetheprocessofre-verseengineeringnetworkprotocols.ThePIprojectadoptssequencealignment–atechniquewidelyusedinbioinfor-maticstoﬁndcertainpatternsinlargesequencesofstrings–toinferprotocolformatfromnetworktraces.Discoverertakesastepfurtherbyapplyingrecursiveclusteringtech-niquestogroupmessageswithsimilarformatssuchthat,withthehelpofatype-basedsequencealignmentalgorithm,itcanproducemoreconciseresultsintherevealedprotocolformat.However,aspointedoutin[9],thelackofprotocolsemanticsinnetworktracesfundamentallylimitstheaccu-racyoftheextractedprotocolformat.Moreover,anynet-worktrace-basedapproachbecomesineffectivewhennet-worktrafﬁcisencrypted.Fromanotherperspective,Polyglotrecognizesthefactthatthewayaprotocolisimplementedforhandlingin-comingprotocolmessagesrevealsawealthofinformationaboutprotocolformat.Therefore,theprotocolimplementa-tioncanbenaturallyanalyzedtouncoverprotocolformat.Speciﬁcally,Polyglotproposesadynamicbinaryanalysisapproachthatexploitsthesemanticsofpayload-processinginstructionstoidentifydetailedmessageﬁelds.Althoughinstruction-levelsemanticinformationisindeedusefulinextractingmessageﬁelds,itisstilllimitedinonlyreveal-ingthe“ﬂat”structureofprotocolformat.Toreverseen-gineernetworkprotocolsmoreaccuratelyandthoroughly,inadditiontotheextractionofdetailedprotocolﬁelds,itisequallyimportanttoexposeinherentlyhierarchicalstruc-turesof“non-ﬂat”protocolmessagesandrevealcross-ﬁeldrelations.Wenotethattheaboveprotocolinformationisnatu-rallyspeciﬁedinprotocolspeciﬁcations.Forexample,theBackus-NaurForm(BNF),whichhasbeenwidelyusedtoexpressnetworkprotocolsyntax,isdesignedtobeex-pressiveenoughindescribingthehierarchicalstructureofaprotocolmessageandcross-ﬁeldrelationswithinthemes-sage.Meanwhile,anumberofexistingtechniquescanben-eﬁtfromthericherknowledgeaboutprotocolformat.Forexample,fuzztestingcangreatlyreducethefuzzingspacewiththeknowledgeofpossiblecross-ﬁeldrelations;Dis-covererandPIcanleveragetheknowledgetoachievebetteralignmentamongcollectedtraces.Inthispaper,wepresentAutoFormat,anewhost-basedapproachthataimsatuncoveringnotonlydetailedprotocolﬁeldsinaprotocolmessage,butalsotheinherenthierarchi-calstructureaswellascross-ﬁeldrelations.AutoFormatisbasedonthekeyobservationthatdifferentprotocolﬁeldsinthesamemessagearetypicallyhandledindifferentex-ecutioncontextssuchastherun-timecallstackandloca-tionoftheinstructionbeingexecuted.Inotherwords,adja-centmessagebytesbelongingtothesameprotocolﬁeldareusuallyhandledinthesameexecutioncontext.Therefore,bymonitoringprogramexecution,wecancollectexecutioncontextinformationforeverymessagebyteannotatedwithitsoffsetintheentiremessage,andthenclusterthemtodis-coverprotocolﬁelds.Further,basedonthesamecontextinformation,wecanuncoverthestructuralhierarchyofthemessageformataswellaspossiblecross-ﬁeldrelationsinthemessage.Wehaveimplementedaproof-of-conceptprototypeandevaluateditwithmorethan30protocolmessagesfromsevenprotocols,includingtwotext-basedprotocols(HTTPandSIP),threebinary-basedprotocols(DHCP,RIP,andOSPF),onehybridprotocol(CIFS/SMB),andoneunknownprotocolusedbyareal-worldmalware.Theexperimen-talresultsareencouraging:Forthesixknownprotocols,AutoFormatisabletoidentifyprotocolﬁeldsautomaticallywithhighaccuracy(anaverage93.4%matchratiocom-paredwiththemessageﬁeldsderivedbyWireshark[5]).Furthermore,itunveilsthehierarchicalstructureoftheen-tiremessageaswellascross-ﬁeldrelations.Fortheun-knownmalwareprotocol,AutoFormatresultsmatchwellwithourmanualstaticanalysisresults.AutoFormatdoesnotrequireaccessingprotocolsourcecodeandisthereforeapplicabletoanalyzingproprietaryorunknownprotocols.Therestofthepaperisorganizedasfollows.Section2describestheproblemscopeanddeﬁnestheterminologiesusedinthepaper.ThesystemdesignandkeytechniquesfortheextractionofprotocolformatwillbepresentedinSec-tion3.InSection4,weshowtheevaluationresults.TherelatedworkwillbediscussedinSection5.WeexaminelimitationsofAutoFormatandsuggestpossibleimprove-mentinSection6.Section7concludesthispaper.2ProblemScopeandTerminologiesInthissection,weﬁrstdiscussthegeneralgoalsofnet-workprotocolreverseengineeringandoutlineourspeciﬁcproblemscope.Wethendeﬁnetheterminologiesthatwillbeusedthroughoutthepaper.2.1ProblemScopeInnetworkprotocolreverseengineering,thereexisttwomainchallengingtasks:(1)Theﬁrsttaskfocusesoneachindividualprotocolmessageandaimsatidentifyingtheboundary(orsize)ofeverysingleprotocolﬁeldaswellastheentirestructurebuiltontheﬁelds;(2)Thesecondtaskinvolvesmultipleprotocolmessagesandthegoalistobuildtheentireprotocolstatemachine,whichincludesvar-iousprotocol-speciﬁcstatesandtheirtransitions.Sincetheﬁrsttasklaysthefoundationforprotocolreverseengineer-inganditsaccuracyandcompletenessaffectsthesecondtask,weinthispaperfocusontheﬁrsttaskandleavethesecondoneasfuturework.Toarticulatethechallengesthatarisefromtheﬁrsttask,weuseareal-worldexample.Figure1showsthestandardBNFstructureoftheHTTPRequestmessagedocumentedinRFC2616(“HypertextTransferProtocol–HTTP/1.1”).Particularly,anHTTPRequestmessagecontainsmultipleRequest=Request-Line*((general-header|request-header|entity-header)CRLF)CRLF[message-body]Request-Line=MethodSPRequest-URISPHTTP-VersionCRLFFigure1.TheBNFstructureoftheHTTPRe-questmessagedocumentedinRFC2616.high-levelﬁelds:Request-Line,general-header,request-header,entity-header,CRLF,andop-tionallymessage-body.Noticethat(1)Aﬁeldcancon-tainmultiplesub-ﬁelds.Forexample,theRequest-Lineﬁeldcontainsthemethod(Method)tobeappliedtotherequestedresource,theidentiﬁer(Request-URI)oftherequestedresource,andtheprotocolversion(HTTP-Version)inuse,aswellasseveralsepara-torssuchasSPandCRLF.(2)The“*”(iterative)and“|”(alternative)symbolsinFigure1reﬂecttheintrinsicparallelrelationshipamongcertainhigh-levelﬁelds,e.g.,general-header,request-header,andentity-header.Assuch,asolutiontoprotocolreverseengineeringshouldnotonlyidentifytheboundaryofeachﬁeldintheprotocolmessage,butalsostructuretheidenti-ﬁedﬁeldssothattheoverallmessageskeletonandtherela-tionsamongmessageﬁeldscanbeuncovered.2.2TerminologiesConsideringtherecursivenatureofdeﬁningaprotocolﬁeld,thispaperusesthetermﬁnest-grainedﬁeldtorep-resentthesmallestsubsequencethatcannotbefurtherdi-videdintosmallersub-ﬁelds.Foreaseofrepresentation,weuseΦ(x)torepresentaﬁeldxinaprotocolformat(Φ(x)canbethoughtofasthenameofﬁeldx),anditsvalueisasetwhichcontainsalltheoffsetsintheproto-colmessagebelongingtoΦ(x)(hence,thesizeofﬁeldxcansimplybedenotedas|Φ(x)|).Usingthesameexample,weuseΦ(Request-Line)andΦ(Method)torepresenttwodifferentﬁeldseventhoughΦ(Method)isasub-ﬁeldofΦ(Request-Line).Inthefollowing,wedeﬁnethreeimportanttypesofrelationbetweenprotocolﬁeldsandthedeterminationoftheserelationsisamainfocusofthispa-per.Hierarchical:Thehierarchicalrelationreﬂectsthefactthataﬁeldcanbefurtherdividedintomultiplesub-ﬁelds.Asmentionedearlier,Φ(Request-Line)inFigure1containsanumberofsub-ﬁeldsinclud-ingΦ(Method),Φ(SP),Φ(Request-URI),Φ(SP),Φ(HTTP-Version),andΦ(CRLF).Forsimplicity,wecalltheﬁeldwithanumberofsub-ﬁeldsahierarchicalﬁeld.Φ(Request-Line)isahierarchicalﬁeld.Sequential:Thesequentialrelationcapturestheorder-ingbetweentwoadjacentﬁeldsinaprotocolmessage.Forexample,inthehierarchicalﬁeldΦ(Request-Line),Φ(Method)isalwaysfollowedbyΦ(SP)whichisinturnfollowedbyΦ(Request-URI).Wecallsuchadjacentﬁeldssequentialﬁelds.Parallel:Theparallelrelationreﬂectsthefactthatthepositionsoftwoormoreﬁeldsareexchangeableintheprotocolspeciﬁcation.Asanexample,Figure1showsthatinanHTTPRequestmessage,theposi-tionsofthefollowingthreeﬁelds,Φ(general-header),Φ(request-header)andΦ(entity-header)canbeexchangedwithoutaffectingthemessage’ssemantics.Inthispaper,wecallsuchposition-exchangeableﬁeldsparal-lelﬁelds.3SystemDesignTheintuitionbehindourapproachissimplebuteffec-tive:Abinaryimplementingtheprotocolisprogrammedtorecognizetheprotocolformatofreceivedmessages.Assuch,thespeciﬁcwayofhandlinganincomingmessagecanbeexaminedtouncoveritsformat.Asanexample,Figure2showsthecodesnippetfromareal-worldwebserver(i.e.theNullHTTPdserver)thatprocessestheheaderﬁeldsofanHTTPRequestmessage.BasedontheBNFformatshowninFigure1,theﬁrstlineoftherequestpayload(receivedinthecontextofthesgets()function–line129)containstheΦ(Request-Line)ﬁeld,whichisdividedintomultiplesub-ﬁeldsΦ(Method),Φ(Request-URI),andΦ(HTTP-Version)(line137).Inotherwords,theﬁeldsΦ(Method),Φ(Request-URI),andΦ(HTTP-Version)aresequentialﬁeldsandtheircombinationformsahierarchicalﬁeld.Similarly,thenextfewlines(lines147-162)handlevariousotherheaderﬁeldsandthewayofhandlingthemleadstotheexposureofseveralparallelﬁelds–Φ(Cookie)(lines154-155),Φ(Host)(lines156-157),Φ(If-Modified-Since)(lines158-159),andΦ(User-Agent)(lines160-161).AutoFormatisinterestedinhowﬁeld-speciﬁcexecu-tioncontextinformationcanbecollectedandanalyzedtoextractprotocolformat.Figure3showsanarchitecturaloverviewofAutoFormat,whichhastwomaincomponents:acontext-awareexecutionmonitorandaprotocolﬁeldiden-tiﬁer.Givenabinarythatimplementstheprotocoltobean-alyzed,AutoFormatworksasfollows:(1)Onreceivinganincomingprotocolmessage,itﬁrstmarksthereceiveddataandkeepstrackoftheirpropagationatthebytegranularity;(2)Onceamessagebyteisread,theexecutionmonitorlogsthatparticularbyte,itsoffsetintheentiremessage,andtherun-timeexecutioncontextatthatmoment,whichincludesthecallstackandthelocationoftheinstructionbeingex-119intread_header(intsid){.../*readalinewithnomorethansize(line)-1bytes;thereturncharacter’\n’signalstheendoftheline.*/129sgets(line,sizeof(line)-1,conn[sid].socket);.../*breakdownthefirstlineoftheHTTPRequestmessage,i.e.,thef(Request-Line)field,intodifferentmessagefields.*/137if(sscanf(line,"%[ˆ]%[ˆ]%[ˆ]",conn[sid].dat->in_RequestMethod,conn[sid].dat->in_RequestURI,conn[sid].dat->in_Protocol)!=3)138printerror(sid,400,"BadRequest","Can’tParseRequest.");...147while(strlen(line)>0){/*readthenextline,whichiseitherageneral-header,request-header,orentity-header.*/148sgets(line,sizeof(line)-1,conn[sid].socket);.../*breakdownthelineintomorespecificsubfields,e.g.,f(Cookie),f(Host),f(If-Modified-Since),andf(User-Agent).*/154if(strncasecmp(line,"Cookie:",8)==0)155strncpy(conn[sid].dat->in_Cookie,(char*)&line+8,sizeof(conn[sid].dat->in_Cookie)-1);156if(strncasecmp(line,"Host:",6)==0)157strncpy(conn[sid].dat->in_Host,(char*)&line+6,sizeof(conn[sid].dat->in_Host)-1);158if(strncasecmp(line,"If-Modified-Since:",19)==0)159strncpy(conn[sid].dat->in_IfModifiedSince,(char*)&line+19,sizeof(conn[sid].dat->in_IfModifiedSince)-1);160if(strncasecmp(line,"User-Agent:",12)==0)161strncpy(conn[sid].dat->in_UserAgent,(char*)&line+12,sizeof(conn[sid].dat->in_UserAgent)-1);162}...187}Figure2.Codesnippetinareal-worldwebserverparsingtheincomingHTTPRequestmessage       Figure3.AutoFormat:Anarchitecturaloverviewecuted;(3)Withthecollectedcontextinformation,theoff-lineprotocolﬁeldidentiﬁerisinvokedtoidentifyprotocolﬁeldsandextractthestructurallayoutofthemessage.3.1Context-AwareExecutionMonitorBymonitoringprogramexecution,wecaninterceptthenetwork-relatedsystemcalls(e.g.,syssocket),markthemessagesreceived,andannotateeverymessagebytewithitsoffsetintheentiremessage.Moreover,throughoutthemessageprocessinglife-time,weinstrumentthedatamove-mentinstructions(e.g.,mov)aswellasarithmetic/logicin-structions(e.g.,add,mul,and)topropagatetheannota-tion.Morespeciﬁcally,foradatamovementinstruction,wecheckwhetherthesourceoperandismarked.Ifyes,wewillannotatethedestinationoperand,whichcanbearegisteroramemorylocation,withthesourceoperand’sannotation,i.e.itsoffsetintheoriginalmessage.Ifthesourceoperandisnotmarked,wewillsimplyunmarkthedestinationoperand.Iftwomarkedoperandsappearinthesameinstruction,wewilluniontheirannotations(e.g.,fortheaddoperation,theresultistheunionoftheoperandsiftheyarebothmarked).Notethatthemarkingandpropa-gationoperationsarebasedonthetaintanalysistechnique,whichhasbeenwidelyadopted.Wereferinterestedreaderstorelatedliteraturesuchas[8,10,11,15,23,26,27,31].AutoFormatisinterestedintwotypesofexecutioncon-textinformation:therun-timecallstackandtheaddressoftheinstructionthataccessesamarkedmemorylocation.Bymonitoringprogramexecution,wecaneasilyrecordthein-structionlocationwhenitisreferencingamarkedmemorylocation.However,toacquiretherun-timecallstackin-formation,weneedtotraversethestackframes:Foreachfunctionstackframe,wecanobtainthereturnaddressin-sidetheframeand,ifthesymbolinformationisavailable,wecanfurtherderivethefunctionnamefromthereturnaddress.Notethatsuchtechniqueworksexceptwhentheprogramiscompiledwithoutthestackframepointersup-port,whichpreventsusfromtraversingthestack.However,wecanovercomethisproblembyinstrumentingthefunc-tioncallandreturninstructionsandmaintainingashadowstackframeinsidetheexecutionmonitor.Theshadowstackframecontainsthereturnaddressesforallthefunctionscalledsofar.Fromthisshadowstackframe,weareabletoderivetherun-timecallstack....0040   cd 46 47 45 54 20 2f 6e  65 77 73 2e 68 74 6d 6c  .FGET /news.html0050   20 48 54 54 50 2f 31 2e  30 0d 0a 55 73 65 72 2d   HTTP/1.0..User-0060   41 67 65 6e 74 3a 20 57  67 65 74 2f 31 2e 31 30  Agent: Wget/1.100070   2e 32 20 28 52 65 64 20  48 61 74 20 6d 6f 64 69  .2 (Red Hat modi0080   66 69 65 64 29 0d 0a 41  63 63 65 70 74 3a 20 2a  fied)..Accept: *0090   2f 2a 0d 0a 48 6f 73 74  3a 20 31 32 39 2e 31 37  /*..Host: 129.1700a0   34 2e 38 38 2e 37 31 0d  0a 43 6f 6e 6e 65 63 74  4.88.71..Connect00b0   69 6f 6e 3a 20 4b 65 65  70 2d 41 6c 69 76 65 0d  ion: Keep-Alive.00c0   0a 0d 0a                                          ...(a)ArawHTTPRequestmessagecapturedbyTCPDUMP(b)TheprotocolformatidentiﬁedbyWiresharkFigure4.ArawHTTPRequestmessageandtheprotocolformatidentiﬁedbyWiresharkAlgorithm1ProtocolFieldTreeGeneration1:Input:thelogarraylog(withtotalNrecords).Fortheithrecordlog[i],ithasmembers:(1)log[i].o–thebyteoffset,(2)log[i].s–thecall-stack,and(3)log[i].l–theinstructionlocation;2:Output:ftree–theprotocolﬁeldtree.3:FieldTreeCreation(log){4:ftree←ROOT;/*CreatetheROOTnode,whichcontainsalltheoffsetsofinputdata*/5:ROOT←{0,1,2,...m−1};6:Getlog[0].o,log[0].s;/*Processthe1strecord*/7:p←{log[0].o};8:for(i←1;i,whereoistheoffsetoftheref-erencedmemoryintheentiremessage,cisitscontent,sistherun-timecallstackwhenthememoryreferenceoccurs,andlisthelocationofthememoryreferenceinstruction.Whenprocessingthelogﬁle,wecansimplyconsiderthelogﬁleasanarray,log,withNelementsandeachelement,saylog[i],hasfourmembers:log[i].o,log[i].c,log[i].s,andlog[i].l.Becauseofthelocalitypropertyofprogramexecu-tion,certainoffsetmaybeintensivelyreferencedandtheremayexistseveralcontinuouslogrecordsthatareidentical.Inthatcase,wewillﬁrstpre-processthelogﬁletodiscardallbutoneofthesuccessiveidenticallogrecords.Somepre-processedlogrecordsareshowninAppendixI.Ournextstepistobuildaprotocolﬁeldtreeftreeandusetheprotocolﬁeldtreetostoretheidentiﬁedﬁeldsandexpresspossiblehierarchicalrelationsamongthem.Morespeciﬁcally,eachnodeofftreerepresentseitheraﬁnest-grainedﬁeldorahierarchicalﬁeld.Eachﬁeldisassociatedwithanoffsetintervaldenotedbythestartingpositionandthesizeoftheﬁeld.Anodeisachildtoaparentifandonlyiftheformer’soffsetintervalisasubsetofthelatter’soffsetinterval.OurprotocolﬁeldtreegenerationalgorithmisshowninAlgorithm1.Essentially,Algorithm1scanstheentirelogﬁleandcheckswhethertwosuccessiverecords(log[i]andlog[i−1])arerelatedtotwoconsecutiveoffsets(line12:log[i].o==(log[i−1].o)+1)oftheinputdataandhavethesameex-ROOTGET /news.html HTTP/1.0\r\nUser−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept: */*\r\nHost: 129.174.88.71\r\nConnection: Keep−Alive\r\n\r\nGET /news.html HTTP/1.0\r\nGET /news.html HTTP/1.0\r\nGET    /news.html ///...news.htmlnews.htmlnews.html... HTTP/1.0HHTTP/1.0TTP/1.0User−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept: */*\r\nHost: 129.174.88.71\r\nConnection: Keep−Alive\r\nUser−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept:......\nUser...UserUU...WWWW.........AAA...ccet(a)Step1:BuildingaprotocolﬁeldtreefromtherawexecutiontracesROOTGET /news.html HTTP/1.0\r\nUser−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept: */*\r\nHost: 129.174.88.71\r\nConnection: Keep−Alive\r\n\r\nGET /news.html HTTP/1.0\r\nGET /news.html /news.html User−Agent: Wet/1.10.2 (Red Hat modified)\r\nAccept: */*\r\nHost: 129.174.88.71\r\nConnection: Keep−Alive\r\n\r\nUser−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept: */*\r\nHost: 129.174.88.71\r\nConnection: Keep−Alive\r\nUser−Agent: Wget/1.10.2 (Red Hat modified)\r\nAccept: */*\r\n*Host: 129.174.88.71 \r\nConnection: Keep−Alive\r\n(b)Step2:Reﬁningtheprotocolﬁeldtreewiththeidentiﬁedﬁnest-grainedﬁeldsandhierarchicalﬁeldsGET /news.html HTTP/1.0\r\nAccept:Host:User−Agent: Wget/1.9+cvs−stable (Red Hat modified)\r\n */*\r\n 129.174.88.71\r\nConnection: Keep−Alive\r\n\r\n(c)Step3:PresentingtheprotocolformatwiththediscoveredparallelandsequentialﬁeldsFigure5.StepsofAutoFormatwhenreverseengineeringtheHTTPRequestmessageformatecutioncontext(line12:log[i].s==log[i−1].s)1.Ifso,wemergethecorrespondingoffsetintervalsintoone(line1Wenotethat,whenanalyzingtextprotocols,weuselog[i].sasex-ecutioncontext.However,whenanalyzingbinaryprotocols,wereplacelog[i].swithlog[i].l–thecurrentinstructionlocation–asexecutioncon-text.13:p←UNION(p,q)).Ifnot,anewprotocolﬁeldnodewillbecreated(line14).Tolinkthenewnodetothetree,anexistingnodewillbechosenasthenewnode’sparentnode(lines15-18).Thischosennode–butnotitschild(ifany)–shouldcontainthenewnode’soffset(s).Ifwecannotﬁndsuchanode,wewillinsertthenewnodeasachildoftheROOTnodewhichcontainsalloffsets(line6).Fortheparentofthenewnode,someofitschildrenmaybemoveddowntobecomethenewnode’schildren(lines16-17).Thereasonforthemoveistomaintainthehierarchicalpropertyoftheprotocolﬁeldtree.TheresultofrunningAlgorithm1onthecollectedlogforthewgetrequestmessageisshowninFigure5(a).Ideally,wewouldliketohaveeachleafnodeasaﬁnest-grainedﬁeld.However,Figure5(a)showsthatnotalltheleafnodesareﬁnest-grainedﬁelds.Furthermore,theproto-colﬁeldtreebuiltbyAlgorithm1raisesthefollowingthreeissues:(1)Someleafnodesmightbeofoverlyﬁnegran-ularity.Thereasonisthattheimplementationcodetypi-callycontainsfunctionsthatdonotalwaysreferencealltheﬁeldoffsets–examplesarestrcmp,strcasecmp,andstrlen.IntheHTTPRequestexample,the“culprit”func-tionisaprgetlinecore,which,intheApache-2.0.59implementation,reverselyreadsaninputlineandnaturallyintroducesafewoverly-ﬁne-grainedﬁelds.ThesefactorsthusleadtosomestrangenodesinthetreesuchasH,U,W,A,‘\r’and‘\n’;(2)Certainﬁeldsmaybereferencedmulti-pletimesatdifferenttimeinstances(e.g.,‘\’,news.html,H,U)andthustheyareredundant;(3)Thereexistsomeﬁeldsthatmaynotbereferencedatall.Oneexampleisthespaceinthe“\”ﬁeld.Foreachoftheaboveissues,weproposeacorrespondingheuristictoreﬁnetheprotocolﬁeldtree.•Tokenization:Text-basedprotocolsusuallyhavede-limiterstoseparateprotocolﬁeldsandthecharactersineachﬁeldcanusuallyformatoken.Assuch,ifthecontentintwoneighboringchildnodescanformonetoken,wewillmergethesetwochildnodesintoone.However,thisheuristicmaynotbeapplicabletobinaryprotocols.•Redundantnodedeletion:Aninternalnodeintheﬁeldtreeisredundantifandonlyifithasonlyonechild(e.g.,theleftchildofROOTandtheparentnodeswithonlyoneleafnodechildinFigure5(a)).Suchredundancycanberemovedbymergingtheinternalnodewithitschild.Thisreﬁnementcontinuesuntilnofurthereliminationcanbeconducted.•Newnodeinsertion:Iftheoffsetsofallchildrendonotexactlymatchtheoffsetsoftheirparent,wewillinsertanewchildnodewiththemissingoffsets(theto-kenizationheuristicmayapply).Thereexistsanotherpossibilityofnodeinsertion,whichoccurswheniden-tifyingparallelﬁelds.WedeferitsdescriptiontoSec-tion3.2.2.Basedontheabovethreeheuristics,wecanreﬁnetheprotocolﬁeldtreeandtheresultisshowninFigure5(b).Itisencouragingtonoticethatalltheidentiﬁedﬁnest-grainedﬁeldsarenowleafnodesofthetree.Thus,asimpletreetraversalalgorithmontheleafnodescanimmediatelyre-vealtheﬂatstructureoftheprotocolmessage.Tounveilthe“non-ﬂat”natureofthesameprotocolmessage,weneedtoidentifythehierarchicalﬁelds.Infact,manyexistingpro-tocolanalyzersincludingWiresharkhaveprovidedthisfea-turetofacilitatetheunderstandingoftheprotocol.Conve-niently,thewaywebuildtheprotocolﬁeldtreereadilypro-videssuchinformation.Wecansimplyperformabreadth-ﬁrsttraversalontheprotocolﬁeldtree:Anynon-leafnoderepresentsahierarchicalﬁeld.3.2.2IdentifyingParallelandSequentialFieldsParallelﬁeldsarethosewhosepositionsareexchangeableinthemessagestructure.TheidentiﬁcationofparallelﬁeldsisparticularlyusefulforprotocolfuzztestingandforﬁeldalignmentinPI[3].Parallelﬁeldsaretypicallyprocessedinaloop(anexampleisshowninFigure2),thustheseﬁeldssharecertainexecutionhistory.Todiscovertheparallelre-lationsamongtheidentiﬁedﬁelds,AutoFormatutilizestheexecutioncontexthistory,deﬁnedasasequenceofexecu-tioncontextsforaparticularoffset.DetailsaredescribedinAlgorithm2.Algorithm2ParallelFieldIdentiﬁcation1:/*log:thelogﬁlewithNrecords;ftree:theprotocolﬁeldtree*/2:ParallelFieldIdentiﬁcation(ftree,log){3:Breadth-ﬁrsttraverseftree{4:foreachnodevtraversed{5:foreachofv’schildchild[i]{/*accumulatethehistoryforthelowestoffsetofchild[i]*/;6:Letlobethelowestoffsetofchild[i];7:for(k←0;k\r\nTo: "laptop"\r\nFrom: "laptop";tag=693efe4a\r\nCall−ID: YTY0ODYwYjg0ZmNhYTEyYmE3YmI4NWZhYWFhYjc1Zjc.\r\nCSeq: 1 REGISTER\r\nExpires: 3600\r\nAllow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO\r\nUser−Agent: X−Lite release 1011s stamp 41150\r\nContent−Length: 0\r\n(a)AutoFormatresultshowingdepth-twotraversalofthereﬁnedprotocolﬁeldtree(|F|=109,|H|=19,and|P|=12)(b)Wiresharkresult(|F|=20,|H|=9,|P|=11)Figure6.ComparisonofAutoFormatandWiresharkresultsfortheSIPRegistermessageROOTREGISTER sip:129.174.88.71 SIP/2.0 \r\nVia: SIP/2.0/UDP 129.174.89.195:19050;branch=z9hG4bK−d87543−1d0cbc7f68650279−1−−d87543−;rport\r\nMax−Forwards: 70\r\nContact: \r\nTo: "laptop"\r\nFrom: "laptop";tag=693efe4a\r\nCall−ID: YTY0ODYwYjg0ZmNhYTEyYmE3YmI4NWZhYWFhYjc1Zjc.\r\nCSeq: 1 REGISTER\r\nExpires: 3600\r\nAllow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO\r\nUser−Agent: X−Lite release 1011s stamp 41150\r\nContent−Length: 0\r\n\r\nREGISTER sip:129.174.88.71 SIP/2.0 \r\nVia: SIP/2.0/UDP 129.174.89.195:19050;branch=z9hG4bK−d87543−1d0cbc7f68650279−1−−d87543−;rport\r\nMax−Forwards: 70\r\nContact: \r\nTo: "laptop"\r\nFrom: "laptop";tag=693efe4a\r\nCall−ID: YTY0ODYwYjg0ZmNhYTEyYmE3YmI4NWZhYWFhYjc1Zjc.\r\nCSeq: 1 REGISTER\r\nExpires: 3600\r\nAllow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO\r\nUser−Agent: X−Lite release 1011s stamp 41150\r\nContent−Length: 0\r\n\r\nsip:129.174.88.71Via: SIP/2.0/UDP 129.174.89.195:19050;branch=z9hG4bK−d87543−1d0cbc7f68650279−1−−d87543−;rport\r\n129.174.89.195:19050;129.174.89.195:19050;branch=z9hG4bK−d87543−1d0cbc7f68650279−1−−d87543−;branch=z9hG4bK−d87543−1d0cbc7f68650279−1−−d87543−;Max−Forwards: 70\r\nContact: \r\PI:EMAIL:19050;rinstance=7297a8945e5bc399>To: "laptop"\r\nFrom: "laptop";tag=693efe4a\r\n"laptop";"laptop"tag=693efe4atag=Call−ID: YTY0ODYwYjg0ZmNhYTEyYmE3YmI4NWZhYWFhYjc1Zjc.\r\nCSeq: 1 REGISTER\r\nExpires: 3600\r\nAllow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO\r\nUser−Agent: X−Lite release 1011s stamp 41150\r\nContent−Length: 0\r\nFigure7.ThereﬁnedprotocolﬁeldtreefortheSIPREGISTERmessagegeneratedbyAutoFormatWiresharkAutoFormatWiresharkAutoFormatFieldNameSizeSizeMatch?FieldNameSizeSizeMatch?Messagetype11√Value22√Hardwaretype11√Option11√Hardwareaddresslength11√Length11√Hops11√Value44√TransactionID4Option11√Secondselapsed26Coarse-grainedLength11√Bootpﬂags22√Value44√ClientIPaddress44√Option11√Your(client)IPaddress4Length11√NextserverIPaddress48Coarse-grainedValue1414√RelayagentIPaddress44√Option11√6√Length1Clienthardwareaddress610Overly-ﬁne-grainedValue1920Coarse-grainedServerhostname64Option11√Bootﬁlename128192Coarse-grainedLength1Magiccookie44√Hardwaretype18Coarse-grainedOption11√ClientMACaddress6Length11√EndOption11√Value11√Padding242242√Option11√Length11√Table3.DetailedcomparisonbetweenWiresharkandAutoFormatontheﬁnest-grainedﬁeldsidenti-ﬁedfortheDHCPBOOTPRequestmessage(|FWireshark|=39,|FAutoFormat|=34).DHCPBOOTPRequest:Inthisexperiment,wemonitortheexecutionofthedhcpddaemonandstudytheBOOTPrequestmessage.Table2showsthatAutoFormatreports|F|=34,|H|=9,and|P|=7whileWiresharkreports|F|=39,|H|=8,and|P|=7.NotethatAut-oFormatandWiresharkhaveidentiﬁedalmostidenticalhi-erarchicalﬁeldsandparallelﬁelds.Buttheydifferintheextractionoftheﬁnest-grainedﬁelds.Morespeciﬁcally,amongthe39ﬁnest-grainedﬁeldsbyWireshark,only28ofthemarediscoveredbyAutoFormat.Tounderstandthereason,weperformadetailedcomparisonbetweentheseﬁnest-grainedﬁeldsandtheresultsareshowninTable3.Thetableshowstheexistenceofcoarse-grainedﬁeldsaswellasanoverly-ﬁne-grainedﬁeldintheAutoFor-matresults.Toﬁndouttherootcause,wemapthemessagepayloadtothecorrespondingapplicationhan-dlingcodeandﬁndoutthattherearetwomainreasonsbehindthecoarse-grainedﬁelds:(1)Certainﬁeldsofthepayloadaresimplyzeroedplace-holdersandtheservercodedoesnotneedtohandlethem.Forexam-ple,theﬁeldsΦ(Your(Client)IPAddress),Φ(NextServerIPAddress),Φ(Serverhostname),andΦ(Bootfilename)areplace-holderswithinthisparticularrequestmessage.Asaresult,theyareusuallyzeroedout.(2)Theappli-cationcodeisprogrammedtoignorecertainﬁeldsinthemessagepayload.Forexample,whenhandlingtheBOOTPrequestmessage,thedaemonanalyzedsimplyignorestheﬁeldssuchasΦ(TransactionID)andΦ(Secondselapsed).Notethatthesecondreasonisimplementation-speciﬁcandthecoarse-grainedﬁeldsidentiﬁedcouldbeusefulforavarietyofapplications,suchasprotocolcompliancechecking[7],applicationﬁngerprinting[8],andfuzztesting[29].Theexistenceoftheoverly-ﬁne-grainedﬁeld(|Fo|=1),interestingly,exposesthewronginterpretationoftheBOOTPRequestmessageinthecurrentWiresharkimple-mentation.Notethattheapplicationsourcecodedoesde-claretheﬁeldasa16-byteﬁeldandourinputdataissixnone-zerobytesfollowedby10zerobytes.WhenWire-sharkhandlesthisﬁeld,itonlyinterpretstheﬁrstsixbytesanddeclaresaΦ(Clienthardwareaddress)ﬁeldwithonlysixbytes.AccordingtoRFC2131forDHCP,theΦ(Clienthardwareaddress)ﬁeldisindeed16byteslong.SMBNegotiateRequest:Inthisexperiment,wecol-lect30SMBmessagesinausersessionwhenaWindows-basedclientsuccessfullyopensadirectoryinaremoteLinuxserver.FortheSMBNegotiateRequestmessage,AutoFormatreports|F|=24,|H|=9,and|P|=6whileWiresharkreports|F|=26,|H|=9,and|P|=6.Forcomparison,weshowthedetailedﬁeldsinTable4.Theonlydifferenceisonecoarse-grainedﬁeld:thethreeﬁnest-grainedﬁeldsidentiﬁedbyWire-shark–Φ(ProcessIDHigh),Φ(Signature)andΦ(Reserved)–areconsolidatedintooneﬁeldbyAuto-Format.Similartothepreviousexperiment,themainreasonisthattheserverprogramsimplyignorestheseﬁelds.RIPandOSPFmessages:WeexperimentwithRIPandOSPFprotocolsbymonitoringtheexecutionoftheZe-braroutingsoftware.Morespeciﬁcally,weanalyzetwoRIPmessagesandfourOSPFmessages.AsshowninTa-ble2,wehaveidenticalresultsfortheRIPv2ResponseWiresharkAutoFormatWiresharkAutoFormatFieldNameSizeSizeMatch?FieldNameSizeSizeMatch?ServerComponent44√ByteCount22√SMBCommand11√BufferFormat11√NTStatus44√Name2323√Flags11√BufferFormat11√Flags222√Name1010√ProcessIDHigh2BufferFormat11√Signature812Coarse-grainedName2828√Reserved2BufferFormat11√TreeID22√Name1010√ProcessID22√BufferFormat11√UserID22√Name1010√MultiplexID22√BufferFormat11√WordCount11√Name1111√Table4.DetailedcomparisonbetweenWiresharkandAutoFormatontheﬁnest-grainedﬁeldsidenti-ﬁedfortheSambaNegotiateRequestmessage(|FWireshark|=26,|FAutoFormat|=24).messageandtheOSPFHellomessage.FortheRIPv2Requestmessage,wehaveonecoarse-grainedﬁeld,whichcorrespondstothreesub-ﬁeldsinWireshark.Sim-ilarly,wehaveonecoarse-grainedﬁeldfortheOSPFLSRequest.Fortheothertwomessagetypes,theAutoFor-matresultscontaintwocoarse-grainedﬁelds.Thereasonfortheseunmatchedcoarse-grainedﬁeldsisthesameastheDHCPcase:Thecorrespondingmessagebytesarenotfur-therprocessedbythesoftwareimplementation.NotethatwhenweexperimentwiththeRIPprotocol,wedeliberatelycompileitwithoutthestack-framepointersupportandwestripallthesymbolsinthegeneratedbinary.AutoFormatstillworksthankstoitsexecutioncontextcapturetechnique(Section3.1).SlapperWormMessages:WenowpresentoursecondsetofexperimentsshowingthatAutoFormatfullyuncoversthemessageformatofanunknownprotocolusedbytheSlapperworm.IthasbeenreportedthattheSlapperwormcanself-organizeinfectedhostsintoaP2Pattacknetwork[16].However,tothebestofourknowledge,theexactprotocolformatusedbytheSlapperwormhasnotbeenfullyinves-tigatedorreported.Inthisexperiment,weuseAutoFor-mattoreverseengineerthemessageformatoftheunknownprotocol.Speciﬁcally,welaunchtheSlapperworminsideavirtualwormplaygroundenvironment[16]andaspecialmasterprogram[6]capableofissuingcommandstotheat-tacknetworkisdeployed,connectingtoonlyoneinfectedhost.Meanwhile,itisinterestingthatineachSlapperwormpropagationsession,itwillreplicateitselfwithacopyofitssourcecode.Assuch,wecanstaticallyanalyzethesourcecodeandmanuallyidentifyallthemessageﬁelds,whichwillbeusedtoverifytheAutoFormatresults.AutoFormathasidentiﬁed11messagetypesandthere-sultsarepresentedinTable5.ItisencouragingthatAuto-Formatresultsmatchourstaticanalysisresultswell.Inthefollowing,wedetailourresultsfortwospeciﬁcmessagetypes.Thesetwotypesofmessagesaresentbythemas-terprogramwhenissuingthefollowingcommands:(1)TheLISTcommandisusedtolistallmembersintheP2Pattacknetwork;(2)TheDNSFloodcommandisusedtolaunchaDNSﬂoodingattack.Thedetailedformatofthesetwomessagetypes,derivedbystaticanalysisandbyAutoFor-mat,areshowninFigure8.OurstaticanalysisshowsthatfortheLISTcommand,themessagehastwohigh-levelﬁeldsthataredeﬁnedwithtwodatastructures:structllheaderandstructheader.structll-headerhasthreememberﬁelds:chartype,unsignedlongchecksum,andunsignedlongid.Itisinterestingtopointoutthatthecompilerautomaticallypadstheﬁrstcharmem-berto4bytes,whichisidentiﬁedbyAutoFormatastwoﬁnest-grainedﬁelds(oneatoffset0andanotheratoffsets1-3).Thesamereasonholdsfortheﬁrstmember–chartag–inthestructheaderdatastructure.Theonlyremainingdifferenceisthecoarse-grainedﬁeldatoffsets20-27.Bycheckingitssourcecode,weﬁndoutthattheSlapperwormsimplyignoresthisﬁeld.FortheDNSFloodmessage,therearetwodifferencesinthestaticanalysisandAutoFormatresults:AutoFormatidentiﬁestwoadditionalﬁnest-grainedﬁelds(oneatoffset1-3andanotheratoffsets13-15)andmissesonehierarchi-calﬁeld(atoffsets12-25).Asexplainedearlier,thetwoﬁnest-grainedﬁeldsareintroducedbythecompiler.Themissinghierarchicalﬁeldisrelatedtothestructheaderdatastructurewhichisembeddedasamemberwithinahigher-levelstructdfrecdatastructure.Notethatthehigher-levelhierarchicalﬁeld(offset12-31)iscorrectlyuncoveredbyAutoFormat.Themainreasonformissingthenestedstructheaderﬁeldisthatthewormbinaryusesthesameexecutioncontexttohandleallmembersinthedfrecdatastructure.StaticAnalysisAutoFormatAnalysisofFProtocolRequestMsgType|F||H||P||F|Re(F)|H|Re(H)|P|Re(P)|Fo||Fc|LISTcommand72085/722/20-01INFOcommand930107/922/30-01SHCommand820108/822/20-00UnknownUDPFlood1130129/1122/30-01protocolTCPFlood1030118/1022/30-01usedbyDNSFlood930119/922/30-00SlapperEmailScan83086/822/30-01wormsGetMyIP*83075/822/30-01IncomingClient*72054/722/20-01Route*10301310/1022/30-00InfoPacket*18301916/1822/30-01Table5.ComparisonbetweenstaticanalysisandAutoFormatresultsfortheunknownprotocolusedbySlapperworm:Therowsmarkedby“*”representthosemessagesexchangedbetweenworm-infectedhosts;whileotherunmarkedrowsrepresentthemessagesexchangedbetweenaworm-infectedhostandthespecialmasterprogram.(NoteP⊂FSH).llheader(cid:0)header(cid:0)char tag(cid:0)t(cid:0)char type(cid:0)0(cid:0)1(cid:0)4(cid:0)8(cid:0)12(cid:0)13(cid:0)16(cid:0)20(cid:0)24(cid:0)unsigned long checksum(cid:0)unsigned long id(cid:0)int id(cid:0)unsigned long len(cid:0)unsigned long seq(cid:0)fixed(cid:0)fixed(cid:0)fixed(cid:0)t(cid:0)fixed(cid:0)0(cid:0)1(cid:0)4(cid:0)8(cid:0)12(cid:0)13(cid:0)16(cid:0)20(cid:0)24(cid:0)unused(cid:0)fixed(cid:0)fixed(cid:0)unused(cid:0)fixed(cid:0)unused(cid:0)Static Analysis(cid:0)AutoFormat Result(cid:0)(|F|=7,|H|=2, |P|=0)(cid:0)(|F|=8,|H|=2,|P|=0)(cid:0) (cid:0) (cid:0) (cid:0) (cid:0)(a)MessageformatcomparisonfortheLISTcommandllheader(cid:0)header(cid:0)char tag(cid:0)t(cid:0)char type(cid:0)0(cid:0)1(cid:0)4(cid:0)8(cid:0)12(cid:0)13(cid:0)16(cid:0)20(cid:0)24(cid:0)unsigned long checksum(cid:0)unsigned long id(cid:0)int id(cid:0)unsigned long len(cid:0)unsigned long seq(cid:0)fixed(cid:0)fixed(cid:0)fixed(cid:0)t(cid:0)fixed(cid:0)0(cid:0)1(cid:0)4(cid:0)8(cid:0)12(cid:0)13(cid:0)16(cid:0)20(cid:0)24(cid:0)unused(cid:0)fixed(cid:0)fixed(cid:0)unused(cid:0)fixed(cid:0)fixed(cid:0)Static Analysis(cid:0)AutoFormat Result(cid:0)unsigned long target(cid:0)unsigned long secs(cid:0)fixed(cid:0)fixed(cid:0)df_rec(cid:0)fixed(cid:0)26(cid:0)28(cid:0)26(cid:0)28(cid:0)(|F|=9,|H|=3, |P|=0)(cid:0)(|F|=11,|H|=2,|P|=0)(cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0)(b)MessageformatcomparisonfortheDNSFloodcommandFigure8.ComparisonofSlapperwormmessageformatsderivedbystaticanalysisandbyAutoFormat5RelatedWorkInthissection,wedescriberelatedworkandcompareitwithAutoFormat.NotethatAutoFormatreliesonthegenerictechniqueofdynamictaintanalysis.Sincethetech-niqueitselfhasbeenwidelyinvestigatedandthereexistsalargebodyofrecentworkintaintanalysis,weomitdetaileddiscussioninthissection.Interestedreadersarereferredto[10,11,15,23,26,27,31].Sharingthesamegoalofautomatingprotocolreverseen-gineering,theProtocolInformatics(PI)project[3],Discov-erer[12],Polyglot[9],and[30]byWondraceketal.arecloselyrelatedtoourwork.Particularly,fromanetworkperspective,bothPIandDiscovereraimatextractingpro-tocolformatfromcollectednetworktraces.Theyhavetheadvantageofconvenienttracecollection.Butthelackofprogramsemanticsinnetworktracessigniﬁcantlylimitstheaccuracyofextractedprotocolformats.Moreover,theybe-comeineffectiveinthefaceofencryptednetworktrafﬁc.Fromahostperspective,bothPolyglot[9]andtheso-lutionin[30]sharethekeyinsightthatthewayaprotocolisimplementedtorecognizeandhandleprotocolmessagesprovidesawealthofinformationabouttheprotocolfor-mat.AutoFormatdiffersfromtheminitswayofextractingprotocolformat.Byrecognizingandleveragingtheﬁeld-speciﬁcexecutioncontext,AutoFormatcollectsandana-lyzesrun-timeexecutioncontextinformationtoinferpro-tocolformat.Nonetheless,itispossibletointegratealltheabovehost-basedsolutionstoachievebetteraccuracyandcompletenessinprotocolreverseengineering.Thereexistotherrelatedtechniquesdesignedforotherpurposesbuthavingtheability,atleasttosomeextent,ofextractingcertainprotocolformat.Forexample,applica-tiondialogreplaysystemssuchasRolePlayer[13],Script-Gen[17,18],andReplayer[22]sharetheneedofidenti-fyingandupdatingcertaininputﬁeldsthatareembeddedinacapturedprotocolsession.Particularly,byleveragingbyte-wisesequencealignmentfromnetworktraces,Role-PlayerandScriptGenheuristicallyidentifyandadjustsomespeciﬁcﬁelds;Replayerinsteadleverageshost-basedbinaryanalysistoenableautomaticprotocolreplay.Thesesystemsaimatdiscoveringonlypartialprotocolformattoservethepurposeofreplayingtheprotocoldialog,whereasAutoFor-mataimsatextractingtheentireprotocolmessageformatandrevealingpossiblecross-ﬁeldrelations.ProtocolidentiﬁcationproposedbyMaetal.[20]alsohastheabilityofinferringpartialprotocolformat(e.g.,theformatoftheﬁrst64bytesofaprotocolsessiondata).How-ever,theirapproachispurelybasedonnetworktracesthussharingthesamelimitationsastheothernetworktrace-basedapproaches[3,12].ProtocolanalyzerssuchasWire-shark[5]havethecapabilityofproperlyformatingaproto-colmessage,buttheyrequirepriorknowledgeaboutthoseprotocolsandthusareoflessusewhenanalyzingunknownprotocols.6LimitationsandFutureWorkTheﬁrstlimitationofAutoFormatisthedynamictracedependency.SinceAutoFormatreliesonexecutiontraces,theprotocolformatitderivesdependsonthediversityofinputrecordedintheexecutiontrace.Inotherwords,ifacertainmessageformatneveroccursinthetrace,itisim-possibleforAutoFormattoinferthatformat.Secondly,ourcurrentprototypeonlyanalyzesprotocolformatatthebytegranularityandisthusunabletodiscoverprotocolﬁeldsatthebitlevel.However,thislimitationcanberemovedbyre-implementingexistingmemorymarkingandpropagationtechniqueatthebit-level.Ourcurrentpro-totypeisnotﬂexibleenoughindistinguishingbetweentextandbinaryprotocols.However,thetokenizationprocessproposedinDiscoverercanpotentiallybeadoptedforauto-maticrecognition.Thirdly,AutoFormatanalyzeseachmessageinisolationanddoesnotcorrelatemultiplemessagesinthesamepro-tocolsession.ExtendingAutoFormattofurtherreconstructtheentireprotocolstatemachineispartofourfuturework.Finally,AutoFormatcannotyethandleobfuscatedbina-ries.However,sincesuchbinariesstillneedtointerpretandhandleincomingmessages,itisinevitablethatcertaindataandcontroldependenciesstillexistintheobfuscatedcode.Suchdependenciesmaybeleveragedtoovercomethedifﬁ-cultiescausedbytheobfuscationtechniques.7ConclusionWehavepresentedAutoFormat,asystemforautomaticprotocolformatextraction.AutoFormatisbasedontheinsightthataprotocolimplementationisprogrammedtorecognizetheprotocolformatandusuallycreatesproto-colﬁeld-speciﬁcexecutioncontexts.Byinstrumentingandmonitoringprogramexecution,wecanobtaintheexecu-tioncontextinformationanduseitasclusteringcriteriatoidentifyprotocolﬁeldsandtheirrelations.Wehaveimple-mentedaprototypeofAutoFormatandevaluateditwithavarietyofprotocolmessagesfromsevenreal-world(knownorunknown)protocols.OurexperimentalresultsshowthatAutoFormatachieveshighaccuracyinprotocolﬁeldidenti-ﬁcationandmessageformatreconstruction.References[1]HowSambaWasWritten.http://samba.org/ftp/tridge/misc/frenchcafe.txt.[2]QEMU:anopensourceprocessoremulator.http://www.qemu.org/.[3]TheProtocolInformaticsProject.http://www.baselineresearch.net/PI/.[4]TheSNORTnetworkintrusiondetectionsystem.http://www.snort.org.[5]Wireshark:TheWorld’sMostPopularNetworkProtocolAnalyzer.http://www.wireshark.org/.[6]PUD:Peer-To-PeerUDPDistributedDenialofService.http://www.packetstormsecurity.org/distributed/pud.tgz,2002.[7]N.Borisov,D.Brumley,H.J.Wang,J.Dunagan,P.Joshi,andC.Guo.Agenericapplication-levelprotocolanalyzeranditslanguage.InProceedingsofthe14thAnnualNetworkandDistributedSystemSecuritySymposium(NDSS’07),SanDiego,CA,February2007.[8]D.Brumley,J.Caballero,Z.Liang,J.Newsome,andD.Song.Towardsautomaticdiscoveryofdeviationsinbi-naryimplementationswithapplicationstoerrordetectionandﬁngerprintgeneration.InInProceedingsofthe16thUSENIXSecuritySymposium(Security’07),Boston,MA,August2007.[9]J.CaballeroandD.Song.Polyglot:Automaticextractionofprotocolformatusingdynamicbinaryanalysis.InPro-ceedingsofthe14thACMConferenceonComputerandandCommunicationsSecurity(CCS’07),2007.[10]J.Chow,B.Pfaff,K.Christopher,andM.Rosenblum.Understandingdatalifetimeviawhole-systemsimulation.2004.[11]J.R.Crandall,S.F.Wu,andF.T.Chong.Minos:Architec-turalsupportforprotectingcontroldata.ACMTrans.Archit.CodeOptim.,3(4):359–389,2006.[12]W.Cui,J.Kannan,andH.J.Wang.Discoverer:Automaticprotocolreverseengineeringfromnetworktraces.InPro-ceedingsofthe16thUSENIXSecuritySymposium(Secu-rity’07),Boston,MA,August2007.[13]W.Cui,V.Paxson,N.Weaver,andR.H.Katz.Protocol-independentadaptivereplayofapplicationdialog.InPro-ceedingsofthe13thAnnualNetworkandDistributedSystemSecuritySymposium(NDSS’06),SanDiego,CA,February2006.[14]W.Cui,M.Peinado,H.J.Wang,andM.Locasto.Shield-gen:Automaticdatapatchgenerationforunknownvulner-abilitieswithinformedprobing.InInProceedingsof2007IEEESymposiumonSecurityandPrivacy,Oakland,CA,May2007.[15]M.Egele,C.Kruegel,E.Kirda,H.Yin,,andD.Song.Dynamicspywareanalysis.InProceedingsofthe2007USENIXAnnualTechnicalConference(Usenix’07),June2007.[16]X.Jiang,D.Xu,H.J.Wang,andE.H.Spafford.VirtualPlaygroundsforWormBehaviorInvestigation.Proceedingsofthe8thInternationalSymposiumonRecentAdvancesinIntrusionDetection,Sept.2005.[17]C.Leita,M.Dacier,andF.Massicotte.Automatichan-dlingofprotocoldependenciesandreactionto0-dayattackswithscriptgenbasedhoneypots.In9thInternationalSympo-siumonRecentAdvancesinIntrusionDetection(RAID’06),pages185–205,2006.[18]C.Leita,K.Mermoud,andM.Dacier.Scriptgen:anauto-matedscriptgenerationtoolforhoneyd.InProceedingsofthe21stAnnualComputerSecurityApplicationsConference(ACSAC’05),pages203–214,Washington,DC,USA,2005.[19]C.-K.Luk,R.Cohn,R.Muth,H.Patil,A.Klauser,G.Lowney,S.Wallace,V.J.Reddi,andK.Hazelwood.Pin:buildingcustomizedprogramanalysistoolswithdynamicinstrumentation.InProceedingsofACMSIGPLANConfer-enceonProgrammingLanguageDesignandImplementa-tion(PLDI’05),pages190–200,2007.[20]J.Ma,K.Levchenko,C.Kreibich,S.Savage,andG.M.Voelker.Unexpectedmeansofprotocolinference.InPro-ceedingsofthe6thACMSIGCOMMonInternetmeasure-ment(IMC’06),pages313–326,NewYork,NY,USA,2006.ACMPress.[21]N.NethercoteandJ.Seward.Valgrained:aframeworkforheavyweightdynamicbinaryinstrumentation.InProceed-ingsofACMSIGPLANConferenceonProgrammingLan-guageDesignandImplementation(PLDI’07),SanDiego,California,USA,2007.ACMPress.[22]J.Newsome,D.Brumley,J.Franklin,andD.Song.Re-player:Automaticprotocolreplaybybinaryanalysis.InProceedingsofthe13thACMConferenceonComputerandandCommunicationsSecurity(CCS’06),2006.[23]J.NewsomeandD.Song.Dynamictaintanalysisforau-tomaticdetection,analysis,andsignaturegenerationofex-ploitsoncommoditysoftware.InProceedingsofthe14thAnnualNetworkandDistributedSystemSecuritySympo-sium(NDSS’05),SanDiego,CA,February2005.[24]V.Paxson.Bro:ASystemforDetectingNetworkIntrudersinReal-Time.ComputerNetworks,31(23-24):2345-2463,1999.[25]F.PerriotandP.Szor.AnAnal-ysisoftheSlapperWormExploit.http://securityresponse.symantec.com/avcenter/reference/analysis.slapper.worm.pdf.[26]G.E.Suh,J.W.Lee,D.Zhang,andS.Devadas.Secureprogramexecutionviadynamicinformationﬂowtracking.InProceedingsofInternationalConferenceonArchitecturalSupportforProgrammingLanguagesandOperatingSys-tems(ASPLOS’04),Boston,Massachusetts,2004.[27]P.Vogt,F.Nentwich,N.Jovanovic,E.Kirda,C.Kruegel,andG.Vigna.Crosssitescriptingpreventionwithdynamicdatataintingandstaticanalysis.InProceedingsofthe14thAnnualNetworkandDistributedSystemSecuritySympo-sium(NDSS’07),SanDiego,CA,February2007.[28]H.J.Wang,C.Guo,D.R.Simon,andA.Zugenmaier.Shield:vulnerability-drivennetworkﬁltersforpreventingknownvulnerabilityexploits.InProceedingsofACMSIG-COMM’04,pages193–204,2004.[29]X.Wang,Z.Li,J.Xu,M.K.Reiter,C.Kil,andJ.Y.Choi.Packetvaccine:Black-boxexploitdetectionandsignaturegeneration.InProceedingsofthe13thACMConferenceonComputerandCommunicationSecurity(CCS’06),pages37–46,NewYork,NY,USA,2006.ACMPress.[30]G.Wondracek,P.M.Comparetti,C.Kruegel,andE.Kirda.AutomaticNetworkProtocolAnalysis.Proceedingsofthe15thAnnualNetworkandDistributedSystemSecuritySym-posium(NDSS’08),Feb.2008.[31]H.Yin,D.Song,E.Manuel,C.Kruegel,andE.Kirda.Panorama:Capturingsystem-wideinformationﬂowformalwaredetectionandanalysis.InProceedingsofthe14thACMConferencesonComputerandCommunicationSecu-rity(CCS’07),October2007.AppendixIFigure9showsanexcerptofthepre-processedlogﬁlegeneratedbyAutoFormat.OffsetContentStackLocation0’G’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr1’E’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr2’T’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr3’’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr4’/’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr5’n’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr6’e’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr7’w’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x4BA56A2->0xF5A8->ap_read_request->ap_rgetline_core->ap_get_brigade->0x2D2CE->ap_get_brigade->0x2D667->apr_brigade_split_line->memchr...24’\n’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x26187->0xF5A8->ap_read_request->ap_rgetline_core23’\r’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x26322->0xF5A8->ap_read_request->ap_rgetline_core22’0’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x261B3->0xF5A8->ap_read_request->ap_rgetline_core0’G’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x1F7F3->0xF5A8->ap_read_request->ap_getword_white1’E’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x1F7F3->0xF5A8->ap_read_request->ap_getword_white2’T’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x1F7F3->0xF5A8->ap_read_request->ap_getword_white3’’main->ap_mpm_run->0x15C57->0x15B38->0x15941->ap_process_connection->ap_run_process_connection0x1F7F3->0xF5A8->ap_read_request->ap_getword_white...Figure9.SamplelogentriescollectedandcleansedbyAutoFormatwhenmonitoringtheApachewebserverprocessinganincomingHTTPRequestmessage