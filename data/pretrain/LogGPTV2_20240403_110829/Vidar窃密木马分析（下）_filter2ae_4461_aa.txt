# Vidar窃密木马分析（下）
|
##### 译文声明
本文是翻译文章，文章原作者 fumik0，文章来源：fumik0.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
接着上文，继续对Vidar窃密木马进行介绍。
## 硬件
通过注册表项的值来获取硬件名称：
    HKEY_LOCAL_MACHINE  HARDWARE  DESCRIPTION  SYSTEM  CentralProcessor  ProcessorNameString
## 网络
网络部分的实现很简单，通过将从 **ip-api.com/line/** 获取的数据进行转换，然后放入相应的日志中即可。
## 进程
当Vidar运行后，将结合多个函数，来对正在运行的进程进行快照。
当然，实现的步骤不难理解：
  * 先调用[CreateToolhelp32Snapshot](https://docs.microsoft.com/en-us/windows/desktop/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot)来获取所有已执行进程的完整快照，再使用[Process32First](https://docs.microsoft.com/en-us/windows/desktop/api/tlhelp32/nf-tlhelp32-process32first)在循环中读取每个进程。  
然后检查该进程是父进程还是子进程，并获取 **PROCESSENTRY32** 对象的以下2个值：
  * th32ProcessID: PID
  * szExeFile: The name of the PE  
## 软件
通过注册表项的值来获取系统已安装的软件：
    HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionUninstall
它将对系统软件的以下2个值进行检索：
  * DisplayName
  * DisplayVersion  
## 结果
如果你想看最终执行结果，可以参考下面在[沙箱中运行](https://app.any.run/tasks/b439a1fd-fb62-4451-b9d4-d4a4597e3dfd)后生成的 information.txt（此处为Vidar 4.2版本）
    Vidar Version: 4.2
    Date: Thu Dec 13 14:39:05 2018
    MachineID: 90059c37-1320-41a4-b58d-2b75a9850d2f
    GUID: {e29ac6c0-7037-11de-816d-806e6f6e6963}
    Path: C:UsersadminAppDataLocalTemptoto.exe 
    Work Dir: C:ProgramDataLDGQ3MM434V3HGAR2ZUK
    Windows: Windows 7 Professional [x86]
    Computer Name: USER-PC
    User Name: admin
    Display Resolution: 1280x720
    Display Language: en-US
    Keyboard Languages: English (United States)
    Local Time: 13/12/2018 14:39:5
    TimeZone: UTC-0
    [Hardware]
    Processor: Intel(R) Core(TM) i5-6400 CPU @ 2.70GHz
    CPU Count: 4
    RAM: 3583 MB
    VideoCard: Standard VGA Graphics Adapter
    [Network]
    IP: 185.230.125.140
    Country: Switzerland (CH)
    City: Zurich (Zurich)
    ZIP: 8010
    Coordinates: 47.3769,8.54169
    ISP: M247 Ltd (M247 Ltd)
    [Processes]
    - System [4]
    ---------- smss.exe [264]
    - csrss.exe [344]
    [Software]
    Adobe Flash Player 26 ActiveX [26.0.0.131]
    Adobe Flash Player 26 NPAPI [26.0.0.131]
    Adobe Flash Player 26 PPAPI [26.0.0.131]
## Loader模块
这个模块在代码实现上比较简单，但完成功能绰绰有余。
  * 1.为即将下载的payload生成随机名称
  * 2.下载payload
  * 3.执行payload  
当从C2下载完二进制文件时，将使用具有特定参数的[CreateFileA](https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-createfilea)函数：
  * **edi：** 从C2下载的数据
  * **80h：** 文件没有设置其他属性（此属性仅在单独使用时才有效）
  * **2：** 若文件名已存在，此选项将强制覆盖
  * **edi：**???
  * **1*：** 在接下里的操作中，访问设备或文件，需要读权限。除此之外，进程无法访问需要读权限的文件或设备
  * **40000000h：** 写入权限（GENERIC_WRITE）
  * **ebp + lpFileName：** 生成的文件名
完成后，只需要将内容写入文件(WriteFile)，然后关闭相应句柄 (CloseHandle)即可。  
到目前为止，文件已经被下载并保存在硬盘中，只需要用ShellExecuteA进行启动。所以不要犹豫，就在此时对API函数下断点来捕捉payload，不然错过最佳时机。
## Killing 模块
当窃密软件完成所有任务和清理工作后，会进行自我清除。首先它会调用[GetCurrentProcessId](https://docs.microsoft.com/en-us/windows/desktop/api/processthreadsapi/nf-processthreadsapi-getcurrentprocessid)来查询自己的[PID](https://en.wikipedia.org/wiki/Process_identifier)。
然后进入“func_GetProcessIdName”，尝试用[OpenProcess](https://docs.microsoft.com/en-us/windows/desktop/api/processthreadsapi/nf-processthreadsapi-openprocess)打开自己的进程句柄，如果失败，将继续检索。这里最重要的环节是调用[GetModuleBaseNameA](https://docs.microsoft.com/en-us/windows/desktop/api/psapi/nf-psapi-getmodulebasenamea)，它可以通过之前获取的PID来检索出其对应进程的进程名。
在.rdata中将一些字符串进行硬编码，以备将来调用。
当精心构造的请求完成后，Vidar 将使用[ShellExecuteA](https://docs.microsoft.com/en-us/windows/desktop/api/shellapi/nf-shellapi-shellexecutea)调用shell命令行并执行指定的任务。这使它拥有清除payload和失陷主机交互痕迹的能力。
回顾一下执行的命令：
    C:WindowsSystem32cmd.exe” /c taskkill /im vidar.exe /f & erase C:UsersPouetAppDataLocalTempvidar.exe & exit
对应解释说明：
    Offset File + db ‘/c taskkill /im’ + [GetModuleBaseNameA] + db ‘ /f & erase’  + [GetModuleFileNameExA + GetModuleBaseNameA]+  + db ‘ & exit’
## 信息存档
###  生成文件夹
文件夹命名格式为：  
COUNTRY + “_” + Machine GUID + “.zip”  
例如：  
NG_d6836847-acf3-4cee-945d-10c9982b53d1.zip
###  最终的POST请求
在生成POST请求的过程中，最终生成的POST请求将进行修改，添加额外的标识以便C2服务器进行识别处理。
不同的name字符串将保存在不同的数据库中，所以在HTTP请求中将出现不同的Content-Disposition。
此外，我在这里发现了一个它使用的小技巧，就是在POST请求的响应中包含loader的配置信息。
  * 如果没有包含信息，则响应”OK”
  * 如果包含了信息，则将特定的url存储在其中。  
这与config及network information模块采用了相同的技术。
沙盒示例：
  * POST请求  
  * 对于POST请求的响应  
## 服务端
因为很容易就可以找到与这款窃密软件的相关信息，所以不需要费力去寻找在哪里才能买到它。为了吸引更多的用户，网上有许多教学视频，让我们通过视频教程来对它深入了解（所以截图均出自视频）。需要说明的是，以下界面为11月时的操作界面，现在可能发生了变化。
###  登录
####  Dashboard
主面板具有很好的用户友好性。用户可以快速浏览自己账户内的各项基本信息。
  * builder版本
  * 何时可以生成payload
  * 受害者数
  * 账号到期时间  
###  日志
对于日志部分，需要提一下的是系统允许用户为日志添加相应的注释。