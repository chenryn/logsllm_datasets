1
Advanced Hardware Hacking 
Techniques
Joe Grand (Kingpin) 
PI:EMAIL
DEFCON 12
Friday, July 30
2
© 2004 Grand Idea Studio, Inc.
Agenda
 The "What" and "Why" of Hardware Hacking
 Enclosure & Mechanical Attacks
 Electrical Attacks
 Final Thoughts and Conclusions
3
© 2004 Grand Idea Studio, Inc.
What is Hardware Hacking (to me)?
 Doing something with a piece of hardware that 
has never been done before 
– Personalization and customization (e.g., "hot rodding
for geeks")
– Adding functionality
– Capacity or performance increase
– Defeating protection and security mechanisms (not for 
profit)
 Creating something extraordinary
 Harming nobody in the process
2
4
© 2004 Grand Idea Studio, Inc.
Why Hardware Hacking?
 Curiosity
– To see how things work
 Improvement and Innovation
– Make products better/cooler
– Some products are sold to you intentionally limited or 
"crippled"
 Consumer Protection
– I don't trust glossy marketing brochures...do you?
5
© 2004 Grand Idea Studio, Inc.
Hardware Security Myths
 Many security-related products rely on 
misconceptions to remain "secure"
 Hardware hacking is hard
 Consumers lack the competency or courage to 
void their warranty
 Therefore, hardware is "safe"
6
© 2004 Grand Idea Studio, Inc.
Gaining Access to a Product
 Purchase
– Buy the product from a retail outlet (with cash)
 Evaluation
– Rent or borrow the product
 Active
– Product is in active operation, not owned by attacker
 Remote Access
– No physical access to product, attacks launched 
remotely
3
7
© 2004 Grand Idea Studio, Inc.
Attack Vectors
 Interception (or Eavesdropping)
– Gain access to protected information without 
opening the product
 Interruption (or Fault Generation)
– Preventing the product from functioning normally
 Modification
– Tampering with the product, typically invasive
 Fabrication
– Creating counterfeit assets of a product
8
© 2004 Grand Idea Studio, Inc.
Enclosure & Mechanical Attacks
 Opening Housings
 External Interfaces
 Anti-Tamper Mechanisms
 Conformal Coating and Epoxy Encapsulation 
Removal
9
© 2004 Grand Idea Studio, Inc.
Opening Housings
 Goal is to get access to internal circuitry
 Usually as easy as loosening some screws or 
prying open the device
4
10
© 2004 Grand Idea Studio, Inc.
Opening Housings 2
 If glue is used to seal housing, use heat gun to 
soften glue and pry open with a knife
– Some designers use glue with a high-melting point -
enclosure will melt/deform before the glue does
 Some devices are sonically-welded to create a 
one-piece outer shell
– If done properly, will require destruction of device in 
order to open it
11
© 2004 Grand Idea Studio, Inc.
Opening Housings 3
 Security bits and one-way screws
– Used to prevent housings from being easily opened
– Ex.: Bathroom stalls, 3.8mm and 4.5mm security bit for 
Nintendo and Sega game cartridges/systems
– To identify a particular bit type, visit 
www.lara.com/reviews/screwtypes.htm
– Bits available at electronics stores, swapmeets, online
12
© 2004 Grand Idea Studio, Inc.
External Interfaces
 Usually a product's lifeline to the outside world
– Manufacturing tests, field programming/upgrading, 
peripheral connections
– Ex.: JTAG, RS232, USB, Firewire, Ethernet
 Wireless interfaces also at risk (though not 
discussed here)
– Ex.: 802.11b, Bluetooth
 Any interface that connects to a third-party may 
contain information that is useful for an attack
– Could possibly obtain data, secrets, etc.
5
13
© 2004 Grand Idea Studio, Inc.
External Interfaces 2
 Look for obfuscated interfaces
– Ex.: Proprietary or out-of-the-ordinary connector types, 
hidden access doors or holes
 Many times, test points just hidden by a sticker
14
© 2004 Grand Idea Studio, Inc.
External Interfaces 3
 Use multimeter or oscilloscope to probe and 
determine functionality
– Logic state of pins can help with an educated guess
– Ex.: Pull pins high or low, observe results, repeat
 Monitor communications using H/W or S/W-based 
protocol analyzer
– USB: SnoopyPro
– RS232 and parallel port: PortMon
 Send intentionally malformed/bad packets to 
cause a fault
– If firmware doesn't handle this right, device could 
trigger unintended operation useful for an attack
15
© 2004 Grand Idea Studio, Inc.
External Interfaces: Backdoors
 Architecture-specific debug and test interfaces 
(usually undocumented)
 Diagnostic serial ports
– Provides information about system, could also be used 
for administration
– Ex.: Intel NetStructure crypto accelerator administrator 
access [1]
 Developer's backdoors
– Commonly seen on networking equipment, telephone 
switches
– Ex.: Palm OS debug mode [2]
– Ex.: Sega Dreamcast CD-ROM boot
6
16
© 2004 Grand Idea Studio, Inc.
External Interfaces: JTAG
 JTAG (IEEE 1149.1) interface is often the 
Achilles' heel
 Industry-standard interface for testing and 
debugging
– Ex.: System-level testing, boundary-scanning, and low-
level testing of dies and components
 Can provide a direct interface to hardware
– Has become a common attack vector
– Ex.: Flash memory reprogramming on Pocket PC 
devices (www.xda-developers.com/jtag)
17
© 2004 Grand Idea Studio, Inc.
External Interfaces: JTAG 2
 Five connections (4 required, 1 optional):
← TDO = Data Out (from target device)  
→ TDI = Data In (to target device)
→ TMS = Test Mode Select   
→ TCK = Test Clock  
→ /TRST = Test Reset (optional)
 H/W interface to PC can be built with a few 
dollars of off-the-shelf components
– Ex.: www.lart.tudelft.nl/projects/jtag, 
http://jtag-arm9.sourceforge.net/circuit.txt, or 
ftp://www.keith-koep.com/pub/arm-tools/jtag/ 
jtag05_sch.pdf
18
© 2004 Grand Idea Studio, Inc.
External Interfaces: JTAG 3
 JTAG Tools (http://openwince.sourceforge.net/jtag) 
serves as the S/W interface on the PC
 Removing JTAG functionality from a device is 
difficult
– Designers usually obfuscate traces, cut traces, or blow 
fuses, all of which can be repaired by an attacker 
7
19
© 2004 Grand Idea Studio, Inc.
Anti-Tamper Mechanisms
 Primary facet of physical security for embedded 
systems 
 Attempts to prevent unauthorized physical or 
electronic tampering against the product
 Most effectively used in layers
 Possibly bypassed with knowledge of method
– Purchase one or two devices to serve as "sacrificial 
lambs"
20
© 2004 Grand Idea Studio, Inc.
Anti-Tamper Mechanisms 2
 Tamper Resistance
– Specialized materials used to make tampering difficult
– Ex.: One-way screws, epoxy encapsulation, sealed 
housings
 Tamper Evidence
– Ensure that there is visible evidence left behind by 
tampering
– Only successful if a process is in place to check for 
deformity
– Ex.: Passive detectors (seals, tapes, glues), special 
enclosure finishes (brittle packages, crazed aluminum, 
bleeding paint)
21
© 2004 Grand Idea Studio, Inc.
Anti-Tamper Mechanisms 3
 Tamper Detection
– Enable the hardware device to be aware of tampering
– Switches: Detect the opening of a device, breach of 
security boundary, or movement of a component
– Sensors: Detect an operational or environmental 
change
– Circuitry: Detect a puncture, break, or attempted 
modification of the security envelope
8
22
© 2004 Grand Idea Studio, Inc.
Anti-Tamper Mechanisms 4
 Tamper Response
– Countermeasures taken upon the detection of 
tampering
– Ex.: Zeroize critical memory, shutdown/disable/destroy 
device, enable logging features
 Physical Security Devices for Computer 
Subsystems [3] provides comprehensive attacks 
and countermeasures
– Ex.: Probing, machining, electrical attacks, physical 
barriers, tamper evident solutions, sensors, response 
technologies
23
© 2004 Grand Idea Studio, Inc.
Conformal Coating and Epoxy 
Encapsulation Removal
 Encapsulation used to protect circuitry from 
moisture, dust, mold, corrosion, or arcing
 Epoxy or urethane coatings leave a hard, difficult 
to remove film
24
© 2004 Grand Idea Studio, Inc.
Conformal Coating and Epoxy 
Encapsulation Removal 2
 The good news: The coatings are not specifically 
designed for security
– Can usually be bypassed with special chemicals like 
MG Chemicals' 8310 Conformal Coating Stripper 
(www.mgchemicals.com)
 Brute force approach: Dremel tool and wooden 
skewer as a drill bit
– Doesn't damage the components underneath coating
– Might remove the soldermask, but not a big deal...
9
25
© 2004 Grand Idea Studio, Inc.
Conformal Coating and Epoxy 
Encapsulation Removal 3
 When all else fails, use X-ray to determine 
location of components or connections
26
© 2004 Grand Idea Studio, Inc.
Electrical Attacks
 Surface Mount Devices
 Probing Boards
 Memory and Programmable Logic
 Chip Delidding and Die Analysis
 Emissions and Side-Channel Attacks
 Clock and Timing
27
© 2004 Grand Idea Studio, Inc.
Surface Mount Devices
 Harder to work with than through-hole devices
– Ex.: Fine-pitched packages, tiny discrete components
– Don't get discouraged
 Human hands have more resolution than the 
naked eye can resolve
– A microscope can go a long way to solder components
 Circuit Cellar, July 2004: Build your own 
computer-controlled, temperature-adjusting SMT 
oven
10
28
© 2004 Grand Idea Studio, Inc.
Surface Mount Devices 2
 Easy to desolder using ChipQuik SMD Removal 
Kit (www.chipquik.com)
29
© 2004 Grand Idea Studio, Inc.
Probing Boards
 Look for test points and exposed traces/bus lines
 Surface mount leads and points are usually too 
small to manually probe
 Many ways to access:
– Solder probe wire onto board using microscope
– Use an SMD micrograbber ($5-$50)
– Use a probe adapter (> $100) from 
www.emulation.com, www.ironwoodelectronics.com, or 
www.advintcorp.com
– Build your own probe
30
© 2004 Grand Idea Studio, Inc.
Probing Boards 2
 Ex.: Tap board used to intercept data transfer 
over Xbox's HyperTransport bus [4]
11
31
© 2004 Grand Idea Studio, Inc.
Memory and Programmable Logic
 Most memory is notoriously insecure
– Not designed with security in mind
– Serial EEPROMs can be read in-circuit, usually SPI or 
I2C bus (serial clock and data) [5]
 Difficult to securely and totally erase data from 
RAM and non-volatile memory [6]
– Remnants may exist and be retrievable from devices 
long after power is removed
– Could be useful to obtain program code, temporary 
data, crypto keys, etc.
32
© 2004 Grand Idea Studio, Inc.
Memory and Programmable Logic 2
 SRAM-based FPGAs most vulnerable to attack
– Must load configuration from external memory
– Bit stream can be monitored to retrieve entire 
configuration
 To determine PLD functionality, try an I/O scan 
attack