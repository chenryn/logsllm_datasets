# Advanced Hardware Hacking Techniques
**Presenter:** Joe Grand (Kingpin)  
**Email:** [PI:EMAIL]  
**Event:** DEFCON 12  
**Date:** Friday, July 30

---

## Agenda
1. **Introduction to Hardware Hacking**
   - The "What" and "Why" of Hardware Hacking
2. **Enclosure & Mechanical Attacks**
3. **Electrical Attacks**
4. **Final Thoughts and Conclusions**

---

### Introduction to Hardware Hacking

#### What is Hardware Hacking?
Hardware hacking involves:
- Performing novel actions with a piece of hardware.
- Personalization and customization (e.g., "hot rodding for geeks").
- Adding new functionality.
- Enhancing capacity or performance.
- Defeating protection and security mechanisms (not for profit).
- Creating something extraordinary.
- Ensuring no harm to anyone in the process.

#### Why Hardware Hacking?
- **Curiosity:** To understand how things work.
- **Improvement and Innovation:** To make products better or cooler.
- **Consumer Protection:** To verify claims made in marketing materials.

#### Hardware Security Myths
- Many security-related products rely on misconceptions to remain "secure."
- The belief that hardware hacking is difficult.
- The assumption that consumers lack the skills or courage to void their warranty.
- Therefore, hardware is often considered "safe."

---

### Gaining Access to a Product

- **Purchase:** Buy the product from a retail outlet (preferably with cash).
- **Evaluation:** Rent or borrow the product.
- **Active:** Access the product while it is in active operation, not owned by the attacker.
- **Remote Access:** Launch attacks without physical access to the product.

---

### Attack Vectors

- **Interception (or Eavesdropping):** Gain access to protected information without opening the product.
- **Interruption (or Fault Generation):** Prevent the product from functioning normally.
- **Modification:** Tamper with the product, typically in an invasive manner.
- **Fabrication:** Create counterfeit assets of a product.

---

### Enclosure & Mechanical Attacks

- **Opening Housings:**
  - Goal: Access internal circuitry.
  - Methods: Loosening screws, prying open the device, using heat guns to soften glue, and dealing with sonically-welded enclosures.
  - Security bits and one-way screws: Used to prevent easy opening. Tools and resources are available online.

- **External Interfaces:**
  - Lifelines to the outside world, including manufacturing tests, field programming, and peripheral connections.
  - Examples: JTAG, RS232, USB, Firewire, Ethernet.
  - Wireless interfaces (e.g., 802.11b, Bluetooth) are also at risk.
  - Obfuscated interfaces: Proprietary or unusual connector types, hidden access doors, and test points.
  - Probing and monitoring: Use multimeters, oscilloscopes, and protocol analyzers to determine functionality and monitor communications.
  - Backdoors: Undocumented debug and test interfaces, diagnostic serial ports, and developer backdoors.

- **JTAG Interface:**
  - Often the Achilles' heel of a product.
  - Industry-standard for testing and debugging.
  - Provides a direct interface to hardware.
  - Common attack vector: Flash memory reprogramming.
  - Connections: TDO, TDI, TMS, TCK, and /TRST (optional).
  - Tools and resources: JTAG Tools, off-the-shelf components, and various online resources.

- **Anti-Tamper Mechanisms:**
  - Primary facet of physical security for embedded systems.
  - Layers of protection: Tamper resistance, tamper evidence, tamper detection, and tamper response.
  - Examples: One-way screws, epoxy encapsulation, sealed housings, passive detectors, and special enclosure finishes.
  - Comprehensive attacks and countermeasures: Probing, machining, electrical attacks, physical barriers, and sensors.

- **Conformal Coating and Epoxy Encapsulation Removal:**
  - Used to protect circuitry from moisture, dust, mold, corrosion, or arcing.
  - Methods: Special chemicals, brute force tools, and X-ray imaging.

---

### Electrical Attacks

- **Surface Mount Devices:**
  - Challenges: Fine-pitched packages, tiny discrete components.
  - Tools: Microscopes, SMT ovens, and desoldering kits.

- **Probing Boards:**
  - Look for test points and exposed traces/bus lines.
  - Methods: Soldering probe wires, using SMD micrograbbers, probe adapters, and custom probes.
  - Example: Intercepting data transfer over Xbox's HyperTransport bus.

- **Memory and Programmable Logic:**
  - Insecurity: Most memory is not designed with security in mind.
  - Vulnerabilities: Serial EEPROMs, SRAM-based FPGAs, and remnants of data in RAM and non-volatile memory.
  - Attacks: I/O scan attacks to determine PLD functionality.

---

### Final Thoughts and Conclusions

- **Summary:**
  - Hardware hacking is a multifaceted discipline involving both mechanical and electrical techniques.
  - Understanding and addressing security myths is crucial.
  - Ethical considerations and consumer protection are key motivations.
  - Continuous learning and innovation are essential for staying ahead in this field.

---

Â© 2004 Grand Idea Studio, Inc.