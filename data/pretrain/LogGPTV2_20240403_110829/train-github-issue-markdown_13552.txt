want to perform some operations when input parameters are being changed. Lets
say I have a DatePicker component that has a type input variable, and I want
to perform some actions with another date variable when type is being changed.
How to do that?
    export class DatePicker {
        @Input()
        date: Date;
        @Output()
        dateChange = new EventEmitter();
        @Input()
        set type(type: string) {
            if (type === "today") {
                this.date = new Date();
                this.dateChange(this.date); // because of this change change detector will throw error
            }
        }
    }
p.s. I asked this question on SO a week ago, and didn't get answer
Its a common case task - to perform operations when input values are being
changed - any kind of operations, no matter if you change other variables -
change detector or something else should not complain. Also, since I opened
this issue I want to mention that current component's lifecycle in angular
seems doubtful:
Inputs are coming before view and content init, and even ngOnInit, and if you
are using setters on inputs to perform something that is depend of view
components you can't do it on component initialization, but can do on next
time inputs are changed. This creates a lot of monkey patches in the code,
like this:
    export class DatePicker implements AfterViewInit {
        isViewInited = false;
        @Input()
        set data(data: string) {
            if (this.isViewInited)
               this.doSomethingViewRelated(data);
        }
       ngAfterViewInit() {
           this.isViewInited = true;
           this.doSomethingViewRelated(this.data);
       }
    }