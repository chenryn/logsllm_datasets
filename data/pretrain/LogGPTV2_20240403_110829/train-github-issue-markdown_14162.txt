 **Dave Syer** opened **SPR-9367** and commented
It is very difficult (impossible) to handle a 401 response in the RestTemplate
with default settings (Documentation?). In fact it is possible, but you have
to supply an error handler **and** a request factory. The error handler was
obvious, but the problem is that the default request factory uses java.net
which can throw HttpRetryException when you try to look at the status code of
the response (despite it being obviously available). The solution is to use
HttpComponentsClientHttpRequestFactory. E.g.
    template.setRequestFactory(new HttpComponentsClientHttpRequestFactory());
    template.setErrorHandler(new DefaultResponseErrorHandler() {
    	public boolean hasError(ClientHttpResponse response) throws IOException {
    		HttpStatus statusCode = response.getStatusCode();
    		return statusCode.series() == HttpStatus.Series.SERVER_ERROR;
    	}
    });
With these settings then a 401 JSON response will be extracted and converted
nicely if you just use `template.exchange()` expecting a JSON response in the
200 case. This is not exactly clear from the user guide, and
HttpComponentsClientHttpRequestFactory isn't even mentioned - the deprecated
CommonsClientHttpRequestFactory is (I'm looking at
http://static.springsource.org/spring/docs/current/spring-framework-
reference/htmlsingle/spring-framework-reference.html).
* * *
**Affects:** 3.1.1
**Issue Links:**
  * #21321 RestTemplate - providing custom ResponseErrorHandler does not prevent an error with http 401 responses ( _ **"is duplicated by"**_ )
**Referenced from:** commits `24ffa5a`