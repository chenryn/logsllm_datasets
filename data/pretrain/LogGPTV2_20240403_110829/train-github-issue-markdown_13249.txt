# Bug report
As per discussion on #15143
> I'm building a react component library, so I declare react and react-dom as
> externals. I'm using webpack to build our library as a module, with
> experiments.outputModule = true, output.environment.module = true, and
> output.library.type = 'module'.
**What is the current behavior?**
When I import my component into a create-react-app project, I get this crash:
    Uncaught TypeError: __webpack_require__.r is not a function
        at Object../node_modules/webpack-external-repro-case/es/index.js (warning.js:62)
        at __webpack_require__ (bootstrap:856)
        at fn (bootstrap:150)
        at Module. (index.module.css?438e:82)
When I switch optimization.minimize to true, my component can be imported
successfully.
On the previous issue, there was some discussion of external type (`module` vs
`commonjs-module`). I've confirmed this occurs with both externalTypes.
**If the current behavior is a bug, please provide the steps to reproduce.**  
Reproduction repo (using the `minification-bug` branch):
https://github.com/MustafaHaddara/webpack-external-repro-
case/tree/minification-bug
(I used yalc to link but `npm | yarn link` probably works too)
Turn minification on and the component is imported successfully.
**What is the expected behavior?**  
non-minified code should behave the same as minified code.
**Other relevant information:**  
webpack version: 5.65.0 to build the component library, client is using
`webpack@4.44.2` via `react-scripts@4.0.3`  
Node.js version: 14  
Operating System:  
Additional tools: