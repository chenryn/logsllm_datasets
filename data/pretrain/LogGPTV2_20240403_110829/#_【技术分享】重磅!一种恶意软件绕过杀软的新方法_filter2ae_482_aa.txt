# 【技术分享】重磅!一种恶意软件绕过杀软的新方法
|
##### 译文声明
本文是翻译文章，文章来源：checkpoint.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[blueSky](http://bobao.360.cn/member/contribute?uid=1233662000)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言**
随着越来越多的网络攻击、数据库漏洞、间谍软件以及敲诈软件频繁的出现在新闻头条上，每家商业公司也开始在其企业网中部署安全产品。一般地，他们往往会投入人力物力来制定适合自己公司的信息安全策略以及寻找最佳的解决方案来对付这些网络攻击行为。
最近，我们发现一种新的令人震惊的绕过杀软的方法，该方法允许任何已知的恶意软件绕过最常见的安全解决方案，例如下一代防病毒软件，安全检测工具以及反勒索改软件等。这种技术被称为
**Bashware** ，该技术在实现上利用了Windows 10系统上一个新的、称为 **Subsystem for Linux(WSL)**
的功能，此新功能可以使Windows操作系统用户使用流行的 **bash**
终端，而且该功能还可以使Windows用户在本机操作系统上运行Linux操作系统的可执行文件。该功能能够允许Linux和Windows系统中的进程在同一时间运行，由于现有的安全解决方案还不能够监视在Windows操作系统上运行的Linux可执行文件的进程，因此该技术可能为那些希望运行恶意代码的网络犯罪分子提供了便利，他们可以利用WSL来绕过尚未集成正确检测机制的安全产品。
观看攻击演示：[https](https://youtu.be/fwEQFMbHIV8):[//youtu.be/fwEQFMbHIV8](https://youtu.be/fwEQFMbHIV8)
Bashware是一个非常令人震惊的技术，任何恶意软件利用WSL机制都可以很容易的绕过安全产品。我们在大多数知名的防病毒和安全产品上测试了这种技术，并使用该技术成功地绕过了上述所有的安全产品，由此可见Bashware对全球目前运行的4亿台Windows
10 PC
的影响还是很大的。在发现该技术之后，我们立马更新了我们的SandBlast威胁防护解决方案，以保护我们的客户免受Bashware的攻击。因此安全同行们也应立即采取行动并修改其安全解决方案，以防止这种网络攻击的新方法。
Bashware技术在实现上利用了Windows Subsystem for Linux（WSL）的底层机制，该功能是Windows
10系统中的一个新功能，允许本机Linux ELF二进制文件在Windows上运行。在正式介绍Bashware的细节之前，我们首先回顾一下WSL的内部原理。
**  
**
**WSL概述**
Windows Subsystem for Linux（简称WSL，如图1所示）是一个为在Windows 10上能够原生运行Linux二进制可执行文件（
**ELF格式** ）的兼容层，该兼容层包含了用户模式和内核模式，可用于运行Linux二进制可执行文件，而无需启动任何的虚拟机。
Microsoft打算实现一种在隔离环境中以低开销运行应用程序的方法来在单个进程的用户模式地址空间内运行目标应用程序和操作系统。为了达到这个目的，Microsoft在Windows
10系统中引入了 **Pico**
进程，该进程是允许在Windows操作系统上运行ELF二进制文件的容器，这些新引进的进程在结构上往往是比较小的，缺少Windows
NT进程（PEB，TEB，NTDLL等）中常见的结构块。通过将未修改的Linux二进制文件放在Pico进程中，WSL可以将Linux系统中的调用引导到Windows内核，lxss.sys和lxcore.sys驱动程序将Linux系统调用转换为NT
APIs并模拟Linux内核。
WSL概念最初是在[Astoria项目](https://en.wikipedia.org/wiki/Project_Astoria)和[Drawbridge项目中才](https://www.microsoft.com/en-us/research/project/drawbridge/)开始出现，目的是想在Windows系统上运行原生的Android应用程序。在WSL的初始版本中发现多个问题后，Microsoft决定以beta模式提供此项目，并在其[GitHub](https://github.com/Microsoft/BashOnWindows)页面上添加技术支持板块，以收集社区中发现的实时问题。在修复了社区提出的大多数问题并达到一个稳定的版本之后，微软正式在2017年7月28日发布了WSL。虽然WSL已经成为一个稳定的功能，其许多问题现在也得到了解决，但似乎行业仍然没有适应这种允许Linux和Windows系统中的进程在同一时间运行的这个奇怪想法。并且这在一定程度上为那些希望运行恶意代码的网络犯罪分子提供了便利，他们可以利用WSL功能来绕过尚未集成正确检测机制的安全产品。有关WSL组件的详细信息请参见“附录A”。
**  
**
**Bashware**
Bashware是一种通用和跨平台技术，该技术在实现上利用了WSL，使得恶意软件能够以隐藏的方式运行，从而绕过当前大多数安全产品的检测。该技术的关键在于Pico进程结构的设计，虽然Pico进程与常见的Windows进程特征不同，甚至该进程没有任何特征可以将其标识为一个常见的NT进程，但是Pico进程却具有与常见NT进程相同的功能，并且不会造成任何的威胁。下面我们将从4个步骤来介绍Bashware是如何加载恶意软件payloads的，如下图所示：
**步骤1：加载WSL组件**
为了利用WSL，Bashware必须首先验证WSL功能是否已经启用，该操作是通过检查Pico驱动程序的状态来实现的（检查lxcore.sys和lxss.sys是否存在于Windows驱动程序的路径中）。在功能被禁用的情况下，Bashware将使用DISM程序来加载驱动程序。这种方法是最简单的，也不会引起任何安全软件的怀疑。在加载WSL组件之后，Bashware将会进入下一步操作。
**步骤2：启用开发者模式**
只有启用了开发者模式才可以使用WSL组件功能，进入开发者模式需要设置以下这些注册表项：
HKLMSOFTWAREMicrosoftWindowsCurrentVersionAppModelUnlockAllowAllTrustedApps
HKLMSOFTWAREMicrosoftWindowsCurrentVersionAppModelUnlockAllowDevelopmentWithoutDevLicense
虽然这些值由TrustedInstaller设置，但也可以由任何拥有管理员权限的用户（或应用程序）完成设置。由于机器系统或任何高级安全检查没有验证这些是否被修改，因此Bashware可以通过打开并使用这些注册表项，以执行恶意软件的payloads，一旦Bashware的操作完成，注册表项将会被关闭，使得这个操作对用户而言实际上是不可见的。
**步骤3：安装Linux**