（2）高吞吐率，单机支持每秒100K条以上消息的传输。
（3）支持Server间的消息分区，及分布式消费，同时保证每个Partition内的消息顺序传输。
（4）同时支持离线数据处理和实时数据处理。
（5）Scale out：支持在线水平扩展。
## 安全
日志在采集传输过程需经过加密处理，接受端对结果解密还原原始日志，采用校验机制对于被恶意篡改的日志从新发送。确保日志在接受过程中的安全。采用多备份方式，通过集群管理工具保证数据的一致性。
系统开发、建设及维护的全过程中，在代码安全、数据保密、系统安全防护措施上采取较严格的措施，进行缜密的权限、身份、帐号与信息加密管理，接受其他安全系统如统一身份认证系统的管理，以保证系统和数据的安全。
（1）用户程序安全
-    明确区分系统中不同用户权限；
-    系统中同一用户不同地点登录的处理；
-    用户的权限的改变不会造成功能混乱；
-    用户登陆密码不可见、不可复制；
-    拒绝通过绝对途径登陆系统；
-   
    用户推出系统后需删除了所有鉴权标记，不可以使用后退键而不通过输入口令进入系统。
（2）系统网络安全
-    保证防护措施是正确装配，有关系统的补丁已打好；
-    防止系统非授权攻击，保证系统坚固性；
-    采用成熟的网络漏洞检查工具检查系统相关漏洞；
-    采用各种木马检查工具检查系统木马情况；
-    采用各种防外挂工具检查系统各组程序的客外挂漏洞。
（3）数据安全
-    系统数据的完整性
-    系统数据可管理性
-    系统数据的独立性
-    系统数据可备份和恢复能力。
## 易用性
不需要用户掌握复杂的搜索语法，使用简单的搜索框查询，及通过用户图形界面和友好的用户交互来完成强大的搜索、分析功能，系统易用性满足如下规范：
（1）软件的智能和记忆功能
-    用户登录界面最好有用户名和ID的记忆，焦点直接定位到密码输入框
-    单据录入界面最好有保存和载入默认值的功能
-    单据搜索界面可以保存用户自定义的各种搜索条件组合
-    用户调整过的GRID的列宽，窗口的位置可以自动记忆
-    系统可以根据用户的使用频度对相关功能进行自动的优先级排序
-   
    系统能够记忆不同用户的使用偏好，使用系统的固有模式和常用的自定义设置
（2）减少不必要的重复交互
-   
    减少不必要的各种操作，能够点一次鼠标或敲一次键盘完成的绝不作出两次或多次。
-    提示信息要适度，太多不好，太少也不好。
-    数据项完整性校验问题要注意光标焦点自动定位到错误处
-   
    完整业务功能不要让用户在多个窗口切换多次才能够完成。尽量减少这种切换。
-    为了方便用户切换窗口，相关的表单最好都作为非模式的形式。
-    相同的信息不要让用户在系统中多处或多次录入，保证入口的唯一性
-   
    系统要尽可能根据用户已经录入信息自动获取其它附属信息，而不需要用户重复的选择或录入。
（3）导航和界面跳转
-    表单新弹出对话框，对话框再弹出对话框的这种层次要控制在3层以内。
-   
    所有的非模式活动窗口最好有类似桌面任务栏一样的停靠方式，方便切换窗口
-    系统可以支持用户自己定义常用功能和菜单
-    对于常用功能应该提供便捷的快捷键和工具栏按钮
-    对于系统中提供的各种业务和表单功能能够让用户便捷挑转到帮助信息上
-    对表单和界面联动和交互的时候要注意相关界面数据的自动刷新
-    一个窗口中最多不要出现超过三个的GRID控件
-    需要根据业务查看需求和数据的展现需求来选择合适的界面控件
（4）系统性能和健壮性方面的
-    系统中相关的耗时操作都必须转变鼠标为等待状态
-    系统耗时操作超过30秒的最好能够提供给用户相关的进度条功能
-    系统耗时功能超过2分钟的最好能够设计为异步多线程的方式进行处理
-    系统应用有友好的完整性和约束校验的提示信息，方便用户修改录入数据
-   
    在系统出现异常情况下应该有友好的统一的提示信息，同时后台应该记录详细的异常日志
（5）界面友好性和易用性方面的
-   
    表单应该能够根据屏幕分辩率自动适应。在界面上让用户一次能够看到足够多的信息
-    表单应该支持Tab键功能，顺序为从左到右，从上到下。
-    常用的表单应该同时支持键盘操作和鼠标操作。
-   
    界面上控件的布局应该间距适当，标签和控件对齐，有适当的录入提示信息。
-    界面的配色应该尽量简单，尽量少使用各种刺眼的颜色
-   
    用户看到表单后应该就基本清楚相关功能，表单要尽量自我解释，不要设计过多的隐含在界面里面
（6）功能数据的录入和检索
-    根据业务需要选择适合的数据录入控件
-    数据录入控件应该有完备的数据完整性和一致性校验功能
-    系统应该提供用户暂时保存录入数据的功能
-   
    能够自动获取数据不要让用户再去录入，能够选择录入数据不要让用户手工录入
-    数据检索条件应该适中，不应太多也不应太少。检索支持组合条件检索。
-    为了满足不同需求检索可以提供简单检索和高级检索多种方式。
-   
    应该在第一时间提供给用户检索数据，因此检索功能存在性能问题时候要考虑分页。
-    在检索功能较耗时的时候应该提供给用户相关的进度条显示进度
-    表格最好能够提供行显示和列显示等多种显示模式，方面用户查看数据
## 可维护性
1、
日志采集agent运行监控，可对异常连接失败的agent进行自动检测，agent功能升级不client无需重新安装。
2、
日志数据处理自调度机制：根据当前日志数据、积压日志数量启用响应的调度机制，合理分配云资源。以达到最佳状态。
3、
系统运行状态检测：定时自动日志中心各服务器设备的运行状态，各功能模块服务的运行状态。
4、 集群管理功能通过应用界面操作即可完成，无需登录每台主机进行操作。
5、 实现可维护性需遵循的原则
（1）在需求分析阶段：明确维护范围及责任,审查系统要求；研究运行/维护的支持；明确性能要求及变更；明确扩充或收缩；检验关键资源的可扩充性。
（2）在设计阶段：考虑系统的扩展、压缩和变更及设计通用性等。
（3）在编程阶段：查找源程序错误，度量源程序可理解性等。
（4）在测试阶段：维护人员参与集成测试，统计分析错误等。
6、
对大数据安全分析系统所有组建进行性能和运行状态监控，包括大数据安全分析集群、数据采集集群、数据源采集状态。对系统存储和计算资源进行监控，通过设置阈值预警系统性能瓶颈，为扩容提供预警和依据。
## 权限
管理系统中角色、用户权限设定，系统功能的模块化有利于系统权限的划分，实现对其查询和操作日志数据范围的控制。
(1) 角色创建与角色管理：
基础角色信息包括：系统高级管理员和系统普通管理员。系统可自定义角色信息，将主要的工作模块和操作权限赋予角色。
\(2\) 用户访问系统模块分权管理
系统可设置用户基于系统模块访问控制，不同级别的用户分别只能操作自己权限内的模块界面。
\(3\) 用户访问系统数据分权管理
系统可设置基于数据访问控制，不同角色的人员分别只能管理自己权限下的数据。