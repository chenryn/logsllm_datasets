Java对\p(...)和\P(...)的支持
.369
Unicode行终结符，
.370
使用java.util.regex....
... 371
The Patterm.compile() Factory..
..372
Pattern的matcher方法..
.373
Matcher对象
... 373
应用正则表达式，
.375
查询匹配结果，
... 376
简单查找-替换
.378
高级查找-替换
380
原地查找-替换
382
Matcher的检索范围.
.384
方法链..
... 389
构建扫描程序.
.389
Matcher的其他方法
392
Patterm的其他方法...
.394
Pattern的split方法，单个参数
... 395
Patterm的split方法，两个参数
.396
拓展示例..
.. 397
为ImageTag添加宽度和高度属性
397
对于每个Matcher，使用多个Pattern校验HTML.
..399
解析CSV文档..
.. 401
Java版本差异.
. 401
1.4.2和1.5.0之间的差异
.. 402
1.5.0和1.6之间的差异，
.403
---
## Page 25
XX
目录
第9章：.NET.
405
NET的正则流派.
.406
对于流派的补充.
.409
使用.NET正则表达式
.. 413
正则表达式快速入门.
...413
包概览
.415
核心对象概览.
.416
核心对象详解..
.418
创建Regex对象.
.419
使用Regex对象，
.421
使用Match对象...
..427
使用Group对象，
.430
静态“便捷”函数
431
正则表达式缓存.
...432
支持函数..
.432
.NET高级话题，
.. 434
正则表达式装配件
.434
匹配嵌套结构...
.436
Capture对象.
.437
第10章：PHP.
439
PHP的正则流派
441
Preg函数接口...
.443
“Pattern”参数
..44
Preg函数罗列..
.. 449
preg_match..
.449
preg_match_all..
...453
preg_replace..
.458
preg_replace_callback.
463
preg_split.
.465
preg_.grep....
..469
preg_quote.
.470
---
## Page 26
目录
xxi
“缺失”的preg函数，
471
preg_regex_to_patterm.
.472
对未知的Pattem参数进行语法检查，
..474
对未知正则表达式进行语法检查
.475
递归的正则表达式，
.475
匹配嵌套括号内的文本
.475
不能回溯到递归调用之内
...477
匹配一组嵌套的括号
.478
效率.
..478
模式修饰符S：“研究”
..478
扩展示例..
.480
用PHP解析CSV...
.480
检查taggeddata的嵌套正确性
..481
索引
485
---
## Page 27
1
第章
正则表达式入门
Introduction to Regular Expressions
想象一下这幅图景：你需要检索某台Web服务器上的页面中的重复单词（例如“thisthis”），
进行大规模文本编辑时，这是一项常见的任务。程序必须满足下面的要求：
能检查多个文件，挑出包含重复单词的行，高亮标记每个重复单词（使用标准ANSI
的转义字符序列（escape sequence)），同时必须显示这行文字来自哪个文件。
能跨行查找，即使两个单词一个在某行末尾而另一个在下一行的开头，也算重复单词。
能进行不区分大小写的查找，例如Thethe…'，重复单词之间可以出现任意数量的
空白字符（空格符、制表符、换行符之类）（译注1）。
能查找用HTMLtag分隔的重复单词。HTMLtag用于标记互联网页上的文本，例如，
粗体单词是这样表示的：·itIsveryveryimportant.
这些问题并不容易解决，但又不能不解决。我在写作本书的手稿时，曾用一个工具来检查
已经写好的部分，我惊奇地发现，其中竞有那么多的重复单词。能够解决这种问题的编程
语言有许多，但是用支持正则表达式的语言来处理会相当简单。
正则表达式（RegularExpression）是强大、便捷、高效的文本处理工具。正则表达式本身，
加上如同一门袖珍编程语言的通用模式表示法（generalpattemnotation），赋予使用者描述
和分析文本的能力。配合上特定工具提供的额外支持，正则表达式能够添加、删除、分离、
叠加、插入和修整各种类型的文本和数据。
符”与“空格符”。
---
## Page 28
2
第1章：正则表达式入门
正则表达式的使用难度只相当于文本编辑器的搜索命令，但功能却与完整的文本处理语言
一样强大。本书将向读者展示正则表达式提高生产率的诸多办法。它会教导读者如何学会
用正则表达式来思考（thinkregularexpressions），以使于掌握它们，充分利用它们的强大功
能。
如果使用当今流行的程序设计语言，解决重复单词问题的完整程序可能仅仅只需要几行代
码。使用一个正则表达式的搜索和替换命令，读者就可以查找文档中的重复单词，并把它
们标记为高亮。加上另一个，你可以删除所有不包含董复单词的行（只留下需要在结果中
出现的行）。最后，利用第三个正则表达式，你可以确保结果中的所有行都以它所在文件的
名字开头。在下一章里，我们会看到用Perl和Java编写的程序。
宿主语言（例如Perl、Java以及VB.NET）提供了外围的处理支持，但是真正的能力来自正
则表达式。为了驾驭这种语言，满足自已的需求，读者必须知道如何构建正则表达式，才
能识别符合要求的文本，同时忽略不需要的文本。然后，就可以把表达式和语言支持的构
建方式结合起来，真正处理这些文本（加入合适的高亮标记代码，删除文本，修改文本，
等等）。
解决实际问题
Soling Real Problens
掌握正则表达式，可能带来超乎你之前想象的文本处理能力。每-天，我都依靠正则表达
式解决各种大大小小的问题（通常的情况是，问题本身并不复杂，但没有正则表达式就成
了大问题）。
值一提”是指这类问题并不能成为谈资，可是不解决它们，你就没法继续干活。
举个简单的例子，我需要检查许多文件（事实上，本书的手稿存放在70个文件中），确保
每一一行中‘SetSize’出现的次数与‘ResetSize’的一样多。为了应付复杂的情况，我还
需要考虑大小写的情况（举例来说，‘setSIzE’也算做‘SetSize）。人工检查32000行
文字显然不现实。
---
## Page 29
解决实际问题
3
即便使用文本编辑器的“单词查找”功能，也不够方便，尤其是对所有文件进行同样的操
作，何况还需要考虑所有可能的大小写情况。
正则表达式就是解决这个问题的灵丹妙药。只需要一个简单的命令，我就能够检查所有的
文件，获得我需要知道的结果。时间是：写命令大概15秒，检索所有的数据实际只花了2
秒。这真是棒极了（如果您想知道这是怎么做到的，不妨现在就翻到第36页）
再举一个例子，我曾帮助一个朋友处理远端机器上的某些E-mail，他希望我把他邮箱文件
中的消息作为列表发送给他。我可以把整个文件导入文本编辑器，手工删除所有信息，只
留下邮件头中的几行，作为内容的列表。尽管文件不是很大，连接速度也不算慢，这样的
任务还是很耗费时间而且很乏味。而且，窥见他的邮件正文，也令我尴尬。
）
egrep）显示每封邮件的From：和Subject：字段。为了告诉egrep我需要提取哪些行，我使
用了正则表达式'~（FromiSbuject）：l
朋友得到这个列表之后，让我找一封特殊的（5000行！）邮件。使用文本编辑器或者邮件
系统来提取一封邮件无疑非常耗时。相反，我借助另一个工具（叫做sed)，同样使用正则
表达式来描述文件中我需要的内容。这样，我能迅速而方便地提取和发送需要的邮件。
使用正则表达式节省下来的时间或许并不能让人“激动”，但总比把时间消耗在文本编辑器
中要好。如果我不知道有正则表达式这种玩意儿，根本就不会想到还有别的解决办法。所
以，这个故事告诉我们，正则表达式和相关的工具能够让我们以可能未曾想过的方式来解
决问题。
一旦掌握了正则表达式，你就会知道到它简直是工具中的无价之宝，你也难以想象之前那
些没有正则表达式的日子是怎么度过的(注1)。
全面掌握正则表达式是很有用的。本书提供了掌握这种技能所需要的信息，我同时也希望，
这本书也提供了促使你学习的动机。
注1：用过TiVo（译注：TiVo是一种数字录像机，具有许多神奇的功能，例如根据用户的偏好
自动录制节目，自动跳过电视台的广告，等等）的人都体验过这种感觉。
---
## Page 30
4
第1章：正则表达式入门
作为编程语言的正则表达式
Regular ExpressionsasaLanguage
如果没有正则表达式相关经验，读者可能无法理解上个例子中正则表达式（From|Subject）：
的意义，但是这个表达式并没有什么神奇之处。其实魔术本身也不神奇，只是缺乏训练的