# 利用 Jolokia Agent 攻击 Java EE 服务器
##### 翻译声明
本文为翻译文章，原文作者为 RicterZ@云鼎实验室，原文链接请参见文末。译文仅供参考，具体内容和含义以原文为准。
**作者：RicterZ@云鼎实验室**

## 0x00 关于 Jolokia
Jolokia 是一种通过 HTTP 的 JMX 连接器，它提供了一种类似 RESTful 的接口，支持使用 JSON 格式的数据来访问和修改 JMX 属性、执行 JMX 操作、搜索 MBean 以及列出 MBean 的元数据等。

Jolokia 提供了多种类型的代理（Agents），包括 WAR Agent、OSGi Agent、JVM Agent 或者 Mule Agent。其中，WAR Agent 兼容以下 Web 服务器：
- JBoss: 4.2.3, 5.1.0, 6.1.0, 7.0.2, 7.1.1, 8.0.0
- Oracle WebLogic: 9.2.3.0, 10.0.2.0, 10.3.6.0
- Glassfish: 2.1.1, 3.0.1, 3.1.2, 4.0.0
- IBM Websphere: 6.1.0.33, 7.0.0.11, 8.0.0.1, 8.5
- Apache Tomcat: 5.5.35, 6.0.37, 7.0.52, 8.0.3
- Jetty: 5.1.15, 6.1.26, 7.6.9, 8.1.9, 9.1.2
- Resin: 3.1.9
- Jonas: 4.10.7, 5.1.1, 5.2.1
- Apache Geronimo: 2.1.6, 2.2.1, 3.0.0
- Spring dm Server: 2.0.0.RELEASE
- Eclipse Virgo: 2.1.0

利用 Jolokia 可以方便地对 MBean 进行操作。例如，可以通过 GET 请求或 POST JSON 数据的方式来进行交互。Jolokia 支持的操作包括 READ、WRITE、SEARCH、EXEC 和 LIST 等。更多详细信息，请参考官方文档：[https://jolokia.org/reference/html/index.html](https://jolokia.org/reference/html/index.html)。

## 0x01 Jolokia 安全问题
### 1\. JNDI 注入
Jolokia 提供了一个称为“代理模式”(Proxy Mode)的功能，用于解决无法直接在目标平台上部署 Jolokia Agent 的问题。其架构允许通过向 Jolokia 发送 POST 请求来触发操作。熟悉 Java 安全的读者可能会意识到这里存在 JNDI 注入的风险。实际上，在 WAR Agent 中确实存在这样一个漏洞，该漏洞出现在 `agent\jsr160\src\main\java\org\jolokia\jsr160\Jsr160RequestDispatcher.java` 文件中。当 Web 容器将请求传递给 `Jsr16iRequestDispatcher` 处理时，如果攻击者发送包含恶意 JMXRMI 地址的 JSON 数据，则可以触发 JNDI 注入，并在目标机器上执行命令。

### 2\. 信息泄露
Jolokia 默认注册了一个名为 `com.sun.management:type=HotSpotDiagnostic` 的 MBean，该 MBean 包含一个名为 `dumpHeap` 的方法，可用于将内存转储到指定目录。在某些低版本的 Java (如 1.8.0_11) 中，导出文件名可以任意设置而非仅限于 `.hprof` 后缀。下载并分析这些文件可能揭示敏感信息，例如管理员账号密码等。

## 0x02 配置有 Jolokia 的 Tomcat
### 1\. DoS 攻击
一旦成功安装了 Jolokia，可通过访问 `/jolokia/list` 查看所有可用的 MBeans。在特定配置下（如 Tomcat + Jolokia），存在一些潜在危险的操作，比如关闭服务，从而导致拒绝服务攻击。

### 2\. 创建管理员账户
通过调用 `User:database=UserDatabase,type=UserDatabase` 下的方法，如 `createRole` 和 `createUser`，攻击者能够创建新的用户角色和账号。之后即可使用新创建的凭证登录系统。

## 0x03 配置有 Jolokia 的 JBoss
### 1\. DoS 攻击
同样地，也可以通过 Jolokia 对 JBoss 实施 DoS 攻击，只需关闭相关服务即可。

### 2\. 部署 WAR 文件
JBoss 中最广为人知的安全风险之一是通过 JMX 控制台部署 WAR 文件。具体来说，`jboss.system:service=MainDeployer` 提供了这一功能。由于此方法具有重载特性，因此需要明确指定签名（signature）。成功部署后，攻击者便可通过访问相应的 URL 来获得 webshell 访问权限。

## 0x04 其他情况
尽管 Weblogic 暴露了许多 MBeans，但其中部分方法受到限制；而 Jetty 则几乎没有暴露任何 MBeans。至于 ActiveMQ，虽然也存在一些 MBeans，但从初步调查来看似乎没有明显的安全威胁。如果有发现新的问题，欢迎交流讨论。

## 0x05 参考资料
最后，需要注意的是，Jolokia 能够暴露出更多的攻击面，通过对这些攻击点加以利用可以获得更高的权限。本文仅探讨了部分 Java EE 服务器所展示出来的 MBeans 功能。鉴于 Jolokia 支持多种不同类型的 Agents，实际暴露出来的风险远不止于此。此外，本研究主要集中在业务层面，未深入源代码级别。可能存在某些 MBean 执行 JNDI 查找、远程文件下载保存或反序列化等情况，利用 Jolokia 可进一步利用这些问题实现远程代码执行（RCE）。针对具体情况需进行具体分析。如有任何错误之处，敬请指正 😊