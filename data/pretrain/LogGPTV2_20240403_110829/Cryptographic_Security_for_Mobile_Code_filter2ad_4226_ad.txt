pend on other winning bids that he observed in the previous 
rounds. If the bidders can express their strategies as a com- 
putable  function, then  one may  construct a circuit to com- 
pute  the auction  function, i.e., the  outcome of  the  auction, 
with  the  strategies  as the private  inputs  of  all  participants. 
This would require  an auction agent that visits each bidder 
only once. 
However, in  the  likely  case that the bidders are unable 
to express their strategies mathematically, each round of the 
auction could also be performed securely by an auction ap- 
plet  that visits each bidder once and returns  to the auction- 
eer. There it outputs the winning bids or the end of the auc- 
tion  if  the bids did not exceed the minimum increment.  If 
the scheme for secure mobile computing is used, then there 
is no single entity  that sees all bids  (like the auctioneer, its 
computer system, or its operators). 
Generalized auctions are common in electricity markets, 
equities trading, bandwidth  auctions, and transportation  ex- 
changes, and bidders often have preferences over combina- 
tion of items. 
Discussion.  The communication pattern is the same as in 
the basic scheme: there is one message from 0 to H I ,  one 
from each HJ-l to HJ and one from H E  to 0, plus one com- 
munication  flow  between  each  host  and  the  trusted  party. 
Robustness can be added  as before by using non-malleable 
public-key  encryption  schemes  and  non-interactive  zero- 
knowledge proofs.  However, the result will be much more 
practical because zero-knowledge proofs are not needed for 
the potentially  large encrypted circuit in  our trust model- 
only  for the relatively few steps pertaining  to the oblivious 
transfers.  Moreover, the encrypted circuit construction  can 
be implemented by a block cipher instead of public-key op- 
erations. 
4  Applications 
We discuss two applications of mobile agents that greatly 
benefit  from  privacy  support for in  mobile code:  compari- 
son shopping and a complex auction scheme. 
4.1  Comparison Shopping 
A mobile agent visits several  vendor sites and compares 
offers-not 
just based on price, but also on other attributes. 
The originator wants  to  maintain  the  privacy  of  his  pref- 
erences, but  a  vendor has  an  interest  to  learn  the  buyer’s 
strategy as well as information  about other vendor’s offers. 
For complex offers  where the  price  is determined individ- 
ually  for each  customer based  on  its  needs, such  as in  the 
insurance  market, the  vendor wants  to  keep  its  method of 
calculating  the price  secret.  All these requirements can  be 
fulfilled by  the secure mobile computing scheme. 
An  electronic  negotiation  between  a buyer  and  a single 
vendor can take place  using  the  scheme for secure mobile 
code that  visits  a  single host.  Typically,  the  vendor acts 
as  the  originator and  downloads an  applet  to  the  buyer’s 
browser (as is already quite common on the Internet).  The 
applet is executed  with  the help of the trusted computation 
service by the buyer and the offer is displayed  to the buyer. 
The  vendor  may  obtain  some  information  as  well,  but  it 
would have to spell out clearly in a “privacy statement” ac- 
companying the  applet  which  information  it obtains, such 
that it can be verified by an independent entity. 
A shopping agents that goes out and collects offers from 
several  vendors  can  be  realized  as  well,  but  this  requires 
prior agreement on  the data format of the  offers.  It seems 
therefore restricted to highly structured areas where privacy 
is important. 
9 
4.3  Implementation  Note 
card.  The server  provides computing power  to  the  client, 
but should not learn anything about the secrets of the client. 
Although  encrypted  circuits  can  be  constructed  for  an 
arbitrary  function  and  any  mobile code application  in  the- 
ory, a practical implementation will only represent privacy- 
critical parts in this way and execute the remaining parts in 
the form of conventional  programs.  Thus, the  circuits are 
rather  small  and  processing  them  is  realistic  with  current 
technology.  It seems feasible to include them as an add-on 
to an existing mobile code platform, such as Aglets ( h t t p  : 
/ /aglets . org). 
The  comparison  shopping  agent,  for  example,  could 
compute most bookkeeping functions in  unencrypted  form 
and hide only its preferences and the best offer so far.  The 
same holds for the auction applications. If the encrypted cir- 
cuit construction  is  realized  using AES with  128-bit keys, 
an  encryption  of  a binary  gate may be stored  in  96 bytes, 
including 64 bits for redundancy.  An encrypted circuit that 
outputs the maximum of two n-bit numbers using special- 
ized comparison gates can be represented by far less than n, 
kilobytes and requires about lOOn block cipher operations. 
5  Discussion 
Our scheme for secure mobile agent computing provides 
an  attractive alternative  to  using  trusted  hardware.  Let  us 
compare the trust assumptioni in these two approaches. The 
proposed  scheme relies on the assumption that T  does not 
actively collude with any of the participants against another 
one.  When  using trusted  hardware,  which  is  also  generic, 
all  parties  have  to  trust  the  hardware manufacturer  in  the 
same way. 
There is however a small difference because the trusted 
hardware can  observe all  computations  and  may  possibly 
leak  some  information  about  this  (covert  channels  could 
easily  be  realized  and might go to  a  large government or- 
ganization). The on-line secure computation service in our 
approach  does  not  learn  anything  about  the  computation, 
except that it takes place and has a certain  size; there is no 
information that can be leaked. 
Otherwise, the differences between the server-based ap- 
proach and trusted hardware are clearly the speed advantage 
of  secure hardware compared to the encrypted circuit con- 
struction on the one hand, and the high cost and low flexibil- 
ity of trusted hardware on the other hand. Secure hardware 
is also more flexible for local agent computations involving 
user interaction. 
Note that  server-aided computations  are quite  common 
for other cryptographic applications and have been  studied 
extensively [2,4, 171; these are protocols in which a power- 
ful server performs some computation on behalf of a client 
device with limited processing capabilities such as a smart 
References 
111  Martin  Abadi  and  Joan  Feigenbaum.  Secure circuit 
evaluation:  A  protocol  based  on  hiding  information 
from an oracle. Journal  of  Cryptologj, 2:l-12,  1990. 
[2]  Martin  Abadi, Joan Feigenbaum, and Joe Kilian.  On 
In  Proc.  19th 
hiding  information  from  an  oracle. 
Annual  ACM  Sjwposium  on  Theory  of  Coniputing 
(STOC), pages  195-203,  1987. 
[3]  Donald Bcaver. Secure multiparty  protocols and zero- 
knowledge proof systems tolerating  a faulty minority. 
Journal of  Cryprolog), 4(2):75-122,  199 1. 
[4]  Philippe  BCguin  and  Jean-Jacques  Quisquater.  Fast 
server-aided  RSA signatures secure against active at- 
tacks. In Don Coppersmith, editor, Advances in Cq'p- 
tology: CRYPT0 '95, volume 963 of Lecture Notes in 
Computer Science. Springer, 1995. 
[SI  Mihir Bellare and Phillip Rogaway.  Random oracles 
are practical:  A paradigm for designing efficient pro- 
tocols.  In  Proc.  1st ACM  Conference otz  Computer 
and Comniuniccitions Security,  1993. 
[6]  Gilles  Brassard,  Claude  CrCpeau,  and  Jean-Marc 
Robert.  Information-theoretic reductions among dis- 
closure problems.  In Proc. 27th IEEE Symposiutn on 
Foutidutions of  Computer Science (FOCS), 1986. 
[7]  Christian Cachin, Jan Camenisch, Joe Kilian, and Joy 
Muller. One-round secure computation and secure au- 
tonomous mobile agents.  In  Ugo Montanari, JosC P. 
Rolim,  and  Emo Welzl,  editors,  Proc.  27th  Interna- 
tional Colloquiuni on Auromutu, Lungiiages arid  Pro- 
gramming  (ICALP), volume  1853 of  Lecture  Notes 
in  Computer Science,  pages 5 12-523.  Springer, July 
2000. 
[8]  Ran  Canetti.  Security  and  composition  of  multi- 
party cryptographic protocols. Journal of  Cryptology, 
13(1):143-202,2000. 
[9]  Danny Dolev, Cynthia Dwork, and Moni Naor.  Non- 
malleable cryptography. SIAM Journal on Conzpuring, 
30(2):391-437,2000. 
[lo]  Shimon Even, Oded  Goldreich,  and  A.  Lempel.  A 
randomized protocol for signing contracts.  Comnzuni- 
cations of  the ACM, 28:637-647,  1985. 
10 
[ 111  Amos  Fiat  and  Adi  Shamir.  How  to  prove  your- 
self:  Practical solutions to identification and signature 
problems.  In Andrew M. Odlyzko, editor, Advances 
in  Cryptology:  CRYPTO  '86, volume 263 of  Lecture 
Notes in Computer Science, pages  186-194.  Springer, 
1987. 
[ 121  Matthew K. Franklin. Complexity and Security of  Dis- 
tributed Protocols.  PhD thesis, Columbia University, 
1993. 
[ 131  Alfonso Fuggetta, Gian Pietro Picco, and Giovanni Vi- 
gna. Understanding code mobility. IEEE Transactions 
on Software Engineering, 24(5):342-361,  May  1998. 
I [ 141  Oded  Goldreich. 
Secure  multi-party  computation. 
Manuscript, 1998. (Version  1.1). 
[ 151 Oded Goldreich, Shafi Goldwasser, and Silvio Micali. 
How  to  construct  random  functions.  Journal  of  the 
ACM, 33(4):792-807,  October 1986. 
[16]  Oded  Goldreich, Silvio  Micali, and  Avi  Wigderson. 
How to play  any mental game or a completeness the- 
In  Proc. 
orem  for  protocols  with  honest  majority. 
19th Annual ACM  Symposium on Theory of  Comput- 
ing (STOC), pages 2 18-229,  1987. 
[ 171  Chae Hoon Lim and Pi1 Joong Lee.  Security and per- 
formance of server-aided RSA computation protocols. 
In Don Coppersmith, editor, Advances in Cryptology: 
CRYPTO  '95, volume 963 of Lecture  Notes in Cotn- 
puter Science. Springer, 1995. 
[ 181  Silvio Micali and Phillip Rogaway.  Secure computa- 
tion.  In Joan  Feigenbaum, editor, Advances in Cryp- 
tology: CRYPTO  '91, volume 576 of Lecture Notes in 
Computer Science, pages 392-404. Springer, 1992. 
[I91 Moni Naor, Benny  Pinkas,  and Reuben Sumner.  Pri- 
vacy  preserving  auctions  and  mechanism design.  In 
Proc.  1st ACM  Conference on Electronic  Commerce, 
1999. 
[20]  Moni  Naor  and  Omer  Reingold.  Number-theoretic 
constructions of efficient pseudo-random functions. In 
Proc. 38th IEEE Symposium on Foundations of  Com- 
puter Science (FOCS), 1997. 
[21]  Phillip  Rogaway.  The Round  Complexio of  Secure 
Protocols.  PhD thesis, Laboratory for Computer Sci- 
ence, MIT, April  199 1. 
[22]  Tomas Sander and Christian  E Tschudin.  Protecting 
mobile agents  against  malicious hosts.  In  G. Vigna, 
editor,  Mobile  Agents and Security,  volume  1419 of 
Lecture Notes in Computer Science, 1998. 
[23]  Tomas Sander, Adam  Young,  and Moti Yung.  Non- 
interactive CryptoComputing for N C ' .  In Proc. 40th 
IEEE  Symposium  on  Foundutions  of  Computer  Sci- 
ence (FOCS), 1999. 
[24]  Tuomas Sandholm and Qianbo Huai.  Nomad:  Mo- 
bile agent system for an internet-based auction house. 
IEEE Internet  Computing, 4( 2) : 80-8 6,2000. 
[25]  Uwe  G. Wilhelm, Sebastian Staamann, and  Levente 
ButtyBn. Introduciiig trusted third parties to the mobile 
agent paradigm. In Jan Vitek and Christian  D. Jensen, 
editors, Secure  Internet  Programming, volume  1603 
of  Lecture  Notes  in  Computer Science,  pages  469- 
489. Springer, 1999. 
[26]  Andrew C. Yao.  How  to generate and  exchange se- 
crets. In Proc. 27th IEEE Symposium on Foundations 
of Conipiiter Science (FOCS), pages  162-167,  1986. 
[27]  Bennet Yee.  A  sanctuary  for mobile agents.  In  Jan 
Vitek and Christian D. Jensen, editors, Secure Internet 
Programming, volume  1603 of Lecture Notes in Com- 
puter Science, pages 26 1-273.  Springer, 1999. 
11