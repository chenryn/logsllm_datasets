title:POSTER: T-IP: A Self-Trustworthy and Secure Internet Protocol
with Full Compliance to TCP/IP
author:Xiaofeng Wang and
Huan Zhou and
Jinshu Su and
Bofeng Zhang and
Fan Yang
Poster: T-IP: A Self-Trustworthy and Secure
Internet Protocol with Full Compliance to TCP/IP
Xiaofeng Wang†, Huan Zhou†, Jinshu Su†, Bofeng Zhang†, Fan Yang‡
†National University of Defense Technology, Changsha, Hunan, China
‡University of Chicago, Chicago, IL, USA
ABSTRACT
In this demo, we propose the self-trustworthy and secure In-
ternet protocol (T-IP) for authenticated and encrypted net-
work layer communications. T-IP has the following advan-
tages: 1) Self-Trustworthy IP address. 2) Low connection
latency and transmission overhead. 3) Reserving to be s-
tateless (an important merit of IP). 4) Compatible with the
existing TCP/IP architecture. We have implemented the
protocol and deployed it in our campus network. Compared
with IPsec, the evaluation shows that T-IP has a much lower
transmission overhead and connection latency.
Categories and Subject Descriptors
C.2.0 [Computer Communication Networks]: Security
and protection; C.2.2 [Computer Communication Net-
works]: Network Protocols
General Terms
Design, Security
Keywords
T-IP, Identity-based cryptography, Key calculation
1.
INTRODUCTION
IP (Internet Protocol) is well designed as a lightweight
and stateless protocol without the notion of session. But it
has some serious shortcomings from the perspective of se-
curity [1]. Currently, IPsec is the de facto standard of the
network layer secure protocol. However, 1. It has high con-
nection latency and transmission overhead, since it uses the
third-party credential based authentication and application
layer key negotiation [4]. 2.
It changes the stateless IP
with complicated security session states. While making the
protocol more complex, it may also cause packets dropping
when they arrive at the wrong states, that needs new secu-
rity session to be negotiated. 3.
It cannot guarantee the
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distribut-
ed for proﬁt or commercial advantage, and that copies bear this notice and the full
citation on the ﬁrst page. Copyrights for third-party components of this work must
be honored. For all other uses, contact the owner/author(s). Copyright is held by the
author/owner(s).
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
ACM 978-1-4503-2957-6/14/11.
http://dx.doi.org/10.1145/2660267.2662371.
accountability of IP address, since it does not authenticate
the addresses. In 2008, David [1] proposed the Accountable
Internet Protocol (AIP), which uses the self-certifying IP ad-
dress and does not need the credential based authentication.
However, AIP needs a speciﬁc ﬂat address structure, which
is not compatible to the existing TCP/IP architecture and
may degrade the routing performance. In addition, AIP did
not talk about the secure data transmission.
We propose the self-trustworthy and secure Internet pro-
tocol (T-IP) with full compliance to TCP/IP. T-IP has the
following main contributions: i) We design the self-trustworthy
T-IP mechanism, which can use the current IP address as
its corresponding public key directly. Hence, T-IP provides
the address accountability, since the attacker cannot get the
private key for the spoofed address. ii) Since T-IP does not
need credential based authentication or application layer key
negotiation, it has negligible connection latency and trans-
fer overhead.
iii) T-IP can derive the symmetrical session
key directly from the self-trustworthy address. Therefore, it
can reserve to be stateless without needing to maintain the
complicated security negotiation states. iv) The overall T-IP
design is compatible with the existing network architecture,
hence it is ﬂexibly deployable. The evaluation shows that T-
IP has a much lower transmission overhead and connection
latency than IPsec.
2. T-IP DESIGN
As shown in Figure 1, the T-IP communication system
mainly includes two parts: T-IP management and T-IP pro-
tocol communication. The T-IP management is responsible
for the T-IP address and private key management. While
the T-IP protocol communication carries out a light-weight
and secure network layer communication.
2.1 T-IP Management
(a) T-IP Management
(b) T-IP Protocol Commu-
nication
Figure 1: Overview of T-IP
1520In T-IP communication, the IP address can serve as it-
s public key directly, hence it is trustable. However, the
communicating host needs to have the IBE (Identity Based
Encryption) private key for its IP address (we call it T-IP
private key for short). As shown in Figure 1(a), for each ad-
ministration domain, we assume there is a trust administra-
tor named the IP-Private Key Generator (IP-PKG), which
is responsible for the T-IP private key management. When
a host joins the system, the IP-PKG authenticates the host
and generates the T-IP private key for it. The T-IP Man-
agement includes two steps: IP-PKG initialization and T-IP
private key management.
IP-PKG initialization: As the trust administrator for
a domain, the IP-PKG needs to initialize itself ﬁrst and pub-
lish its public parameters. It selects G, GT , P , e, where G
is an additive group formed by points on a certain elliptic
curve, GT is a multiplicative group, P is a generator element
of G, and e : G × G → GT is an admissible bilinear map of
G. Here, ∀P, P (cid:48), Q, Q(cid:48) ∈ G and ∀a, b ∈ Z∗
e(aP, bQ) = e(P, Q)ab = e(P, aQ)b = e(bP, Q)a
Then, the IP-PKG constructs H1 : {0, 1}∗ → G and H :
{0, 1}∗ → {0, 1}l, where l ∈ Z + is a constant value and H is
a hash function for key derivation. Finally, it chooses s ∈ Z∗
q
randomly as its secret master key, computes its public key
Ppub = sP , and publishes  as
the public parameters for the system.
q , we have
T-IP Private key management: After being initial-
ized, the IP-PKG needs to generate the T-IP private keys
for all the participants in its domain, and be responsible for
the private key update and revocation. Assume Alice re-
quests to join the system, she authenticates herself and her
IP address IPA to the IP-PKG.
Then the IP-PKG generates the T-IP private key for IPA
by using the IBE technology. It ﬁrst maps the IP address
string of IPA to a point of the elliptic curve, H1(IPA). Then
the private key of IPA is SA = sH1(IPA). Finally, the IP-
PKG needs to distribute SA to Alice in a secure way [3].
For a ﬁne-grained life time control for the T-IP private
keys, will be discussed in future work.
2.2 T-IP Protocol Communication
Compared with IPsec, we design T-IP to be a lightweight
secure network protocol without needing the credential based
authentication or key negotiation. Based on the T-IP self-
trustworthy address, the two T-IP communicating partici-
pants can calculate the symmetric session key skey by using
its own T-IP private key and the opponent’s IP address (T-
IP public key) directly. The IBE technology can guarantee
that the session key can only be generated by the sender
and receiver who have the T-IP private key for the packet’s
source and destination address respectively. Therefore, T-
IP can achieve an authenticated and secure data transmis-
sion directly without costing the time on credential based
authentication or key negotiation. Next we give a simple
introduction to the T-IP protocol format and procedure.
T-IP protocol format: T-IP is between the network
layer and the transport layer. As shown in Figure 2, the pro-
tocol format contains two parts: T-IP head and T-IP tail.
In T-IP header, the ﬁeld ”Next Header” deﬁnes what pro-
tocol is in the following transport layer. When it indicates
TCP or UDP, the session is in T-IP transport mode. When
it indicates IP, the session is in T-IP tunnel mode. The
ﬁeld ”Algorithm” deﬁnes the symmetric cryptography algo-
Figure 2: T-IP protocol format
rithm used to encrypt the packet. The next bit, identiﬁed
as ”#”, is used to decide whether to calculate the ”Message
Authentication Code”. The ﬁeld ”Sequence Number” is used
to resist the replay attack. In T-IP tail, the ﬁelds ”Padding”
and ”Padding Length” are needed by the data encryption or
decryption.
T-IP protocol procedure: T-IP has two transmission
modes: transport mode and tunnel mode. They have diﬀer-
ent packet construction mechanisms but the same protocol
procedure. Next, we focus on the T-IP protocol procedure.
Assuming Alice (with address IPA) is going to communi-
cate with Bob (with address IPB). They have got their
T-IP private keys SA = sH1(IPA), SB = sH1(IPB) respec-
tively from the IP-PKG. The detailed procedure of the T-IP
protocol is shown in Figure 1(b).
1. Alice uses her T-IP private key and Bob’s IP address
to calculate the shared secret value KAB = e(SA, H1(IPB)).
Then she concatenates the shared secret value with a speciﬁc
string to generate the symmetric cipher key skey and MAC
(Message Authentication Code) key hkey as follows:
skey = H(KAB||”EncryptionKey”)
hkey = H(KAB||”AuthencationKey”)
2. Alice uses the cipher key skey to encrypt the packet
M1 and gets the encrypted packet C1 = Eskey[M1]. Mean-
while, she uses the MAC key hkey to authenticate the pack-
et, M AC1 = Hhkey[M1]. M AC1 is inserted into the packet
ﬁeld ”MAC” for the packet integrity check. Then Alice con-
structs the packet in the protocol format according to the
transmission mode and sends it to Bob.
3. After receiving the packet from Alice, Bob uses his T-
IP private key and Alice’s IP address to calculate the shared
secret value KBA = e(H1(IPA), SB). Then he can get skey
and hkey as step 1.
4. Bob decrypts the packet with the key skey and authen-
ticates its source address. If the source address is spoofed
(Alice is personated), the format of the decrypted packet
would be in chaos. This is because the attacker personating
Alice can’t get the T-IP private key of Alice’s IP address,
and he cannot calculate the right skey and hkey with Bob.
Therefore, the packets with spoofed address cannot pass the
authentication test.
5.
If the received packet passes the authentication suc-
cessfully, Bob can trust he is communicating with IPA in
a trustworthy and secure way. Then he can send his en-
crypted packet C2 = Eskey[M2] and authentication code
M AC2 = Hhkey[M2] to Alice according to the transmission
mode.
6. After receiving the packet from Bob, Alice decrypts the
packet and authenticates the source address as Bob in step
4.
15217. Finally, after the two participants have authenticated
each other by verifying the addresses, they can establish a
trustworthy and secure session.
We can prove that both Alice and Bob are able to calculate
the same shared value. Because
KAB = e(SA, H1(IPB)) = e(sH1(IPA), H1(IPB))
= e(H1(IPA), H1(IPB))s
= e(H1(IPA), sH1(IPB)) = e(H1(IPA), SB) = KBA
IMPLEMENTATION & EVALUATION
3.
3.1 Technical Framework
Figure 3 shows the technical framework of the protocol
implementation. It includes the following main modules.
T-IP private key management module: It is respon-
sible for authenticating the host and the local IP address
to the IP-PKG. After the authentication, this module can
get the T-IP private key for the local IP address from the
IP-PKG and securely stores the private key for the T-IKC
module to use.
T-IP Internet key Calculation (T-IKC) module: It
is to calculate the shared secret value between two commu-
nicating hosts, and to generate the symmetric cipher key
skey and MAC key hkey for communicating sessions.
Conﬁguration module:
It provides the interface for
users to dynamically conﬁgure the T-IP security policies,
such as which IP addresses to use T-IP communication,
which transfer mode and encryption algorithm to use, etc.
Cryptographic module: It is the conﬁgured symmetric
cryptographic algorithm to encrypt or decrypt the packets
according to the security policy.
Considering the IBE technology, the basic mathematical
functions used in above modules can be implemented by
using the PBC (Pairing-Based Crypto) library which is de-
veloped by stanford university.
Figure 3: Technical framework of T-IP
3.2 Evaluation
We evaluate and compare the performance of T-IP and
IPsec which uses ESP (Encapsulate Security Payload) for
secure data transmission. As shown in Figure 4, when a
secure session needs to transmit 10 KB application data,
the overhead of T-IP is 42% lower than that of IPsec(ESP).
From the perspective of connection latency, T-IP is average-
ly 86% faster than IPsec(ESP). Meanwhile, the connection
latency of T-IP has a much slower increase speed than IPsec
with the rising packet loss rate. In particular, it achieves the
relatively lowest latency at the packet loss rate of 15% in our
evaluation, which is 91% faster than IPsec(ESP) under this
condition. The result shows that T-IP is lightweight, as it
is stateless and needs no certiﬁcate.
(a) Transmission Overhead
(b) Connection Latency
Figure 4: Evaluation of T-IP
4. FUTURE WORK
Given the space limitation, the demo only gives an intro-
duction to the main part of T-IP design and implementa-
tion. Next, we brieﬂy point out some key problems and the
corresponding future work.
1)T-IP private key generation & distribution. The
IP-PKG must be trustable to generate the T-IP private keys
and distribute them to the authenticated hosts in a secure
way. This can be achieved by using the SA-IBE [3] tech-
nology to enhance the accountability of the IP-PKG and
securely distribute the T-IP private key.
2)T-IP private key revocation. The T-IP private key
should be generated with the lifetime control. Therefore, the
T-IP private key can be generated by applying IBE technol-
ogy to a string combining the IP address and a period of
time [2].
3)T-IP session key security. The T-IP session key can
be enhanced by adding security property of forward secrecy.
We have proposed an identity based key agreement proto-
col [5] that can be used to generate diﬀerent session keys for
each session.
4)Cross-domain communication. When there are sev-
eral domain IP-PKGs in the environment, the T-IKC mod-
ule has to calculate the symmetric session key across do-
mains. We have proposed E2IBK algorithm to ﬁt this envi-
ronment [5].
5. ACKNOWLEDGMENTS
The work is partially supported by the NSFC under Grant
No.61103194 and Grant No.61303264.
6. REFERENCES
[1] D. G. Andersen and et al. Accountable internet
protocol (aip). In Proc. ACM SIGCOMM, Aug 2008.
[2] A. Boldyreva, V. Goyal, and V. Kumar. Identity-based
encryption with eﬃcient revocation. In Proc. 15th ACM
conference on CCS, pages 417–426. ACM, 2008.
[3] D. Cao, X.-F. Wang, and et al. Sa-ibe: A secure and
accountable identity-based encryption scheme. Journal
of Electronics and Information Technology, 2011.
[4] D. K. Smetters and G. Durfee. Domain-based
administration of identity-based cryptosystems for
secure email and ipsec. In Proc. 12th USS, 2003.
[5] H. Zhou and et al. E2ibk: An extensible and eﬃcient
identity based key agreement protocol in a multiple pkg
environment [submitted].
https://sites.google.com/site/xfwangnudt/papers.
1522