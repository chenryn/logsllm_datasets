### Introduction
The following text presents an analysis of a system designed to generate fingerprints based on the structural analysis of protocol messages, specifically for SIP (Session Initiation Protocol). The system automates the generation of fingerprints using both formal grammars and collected traffic traces. This document summarizes the results, discusses related work, and provides conclusions.

### Results
- **Computation Time:**
  - 5 hours (using 10 computers)
  - 56 hours (using 1 computer)
  - 40 minutes (partial computation)

- **Feature Discovery:**
  - 172 features were discovered across different types of messages.
  - These features represent items' order, different lengths, and values of fields, where no prior protocol knowledge except its syntax grammar was used.
  - The distance between different features in two different devices ranges from 26 to 95 features, with lower values often corresponding to different versions of the same device.
  - Typically, up to 46 features are identified in one message.

- **Accuracy Results:**
  - Table 4 summarizes the sensitivity, specificity, and accuracy obtained using the test data set.
  - **Sensitivity:** 0.866
  - **Specificity:** 0.999
  - **Accuracy:** 0.993

  | Classification      | True Positive | False Positive | False Negative | True Negative | Positive Predictive Value | Negative Predictive Value |
  |--------------------|---------------|----------------|----------------|---------------|---------------------------|---------------------------|
  | Values             | 18881         | 20             | 2909           | 435780        | 0.998                     | 0.993                     |

- **False Negatives Analysis:**
  - 2/5 of false negatives belong to one implementation (representing 50% of its messages).
  - 2/5 belong to three more device classes (representing 18% of their messages).
  - The final 1/5 belongs to eight classes (representing 10% of their messages).
  - Seven classes do not have false negatives.
  - This issue may be due to the irregular quantity of messages in each device class or the presence of non-valuable information in some messages (e.g., intermediary messages).

- **Table 5: False Negative Classification Details**
  - This table shows the 38 types of messages collected in the test, along with their false negative classification details.

- **Manual Modifications:**
  - A set of messages was manually modified by changing the User-Agent, Server-Agent, and references to device names.
  - Deleting a few such fields did not influence the system's decision, but as more modifications were made, the system became less precise.

### Related Work
- **Fingerprinting:**
  - Fingerprinting has become a popular topic, starting with the work of Comer and Lin [8] and is now essential in security assessment tasks.
  - NMAP [9] uses active probing techniques, while P0F [10] uses passive techniques for OS fingerprinting.
  - Other tools like AMAP, XProbe, and Queso implement similar schemes.

- **SIP Fingerprinting:**
  - Active and passive fingerprinting techniques for SIP were first described in [11, 12].
  - The lack of an automated approach for building fingerprints and constructing the classification process is a common baseline.
  - Recent work by J. Caballero et al. [6] describes an automated approach for generating active fingerprints.

- **Other Approaches:**
  - Research efforts have focused on reverse engineering proprietary protocols [14, 15] and applying bioinformatics techniques to protocol analysis [16].
  - Sequence alignment techniques [17, 18, 19, 20] and monitoring endpoint execution [21, 22] have also been used.
  - Probabilistic techniques for identifying properties of encrypted traffic [23, 24] have been reported.
  - M. Chang and C. K. Poon [25] developed a method for collecting training SPAM detectors, focusing on lexical analysis.
  - Flow-based identification [26] and grammar/probabilistic approaches [27, 28] have also been proposed.

### Conclusions
- **Key Contributions:**
  - Our approach automates the generation of fingerprints by using formal grammars and collected traffic traces.
  - It detects important and relevant complex tree-like structures and leverages them for building fingerprints.
  - The applicability lies in intrusion detection and security assessment, where precise device/service/stack identification is essential.
  - We implemented a SIP-specific fingerprinting system and evaluated its performance, obtaining very encouraging results.
  - Future work will focus on improving the method and applying it to other protocols and services.

- **References:**
  - [1-28] (List of references provided in the original text)

This optimized text provides a clear, coherent, and professional summary of the research, results, and related work.