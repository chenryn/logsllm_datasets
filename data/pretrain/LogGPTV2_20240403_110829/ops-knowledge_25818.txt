User: On a new Linux server, how to configure Nginx as a web server to support the HTTPS protocol?
Assistant: The following are the steps to configure Nginx as a web server on a Linux server to support the HTTPS protocol: 1. Confirm that Nginx has been installed on the server. If it is not installed, you can use the following command to install it: ``` sudo apt-get update sudo apt-get install nginx ``` 2. Generate SSL certificate and key After installing Nginx, you need to use openssl command to generate SSL certificate and key. Enter the following command and follow the prompts to enter relevant information: ``` sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx .crt ``` 3. Configure Nginx Before configuring, back up the default Nginx configuration file: ``` sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup ``` Edit Nginx configuration File: ``` sudo nano /etc/nginx/nginx.conf ``` Add the following to the http section: ``` server { listen 443 default_server ssl; listen [::]:443 default_server ssl; server_name example.com ; // Change to your domain name ssl_certificate /etc/nginx/ssl/nginx.crt; ssl_certificate_key /etc/nginx/ssl/nginx.key; location / { root /var/www/html; // website root directory index index .html; } } ``` Please modify the configuration file according to your actual needs. Save and exit when done. 4. Restart the Nginx service ``` sudo service nginx restart ``` Now, your Nginx server already supports the HTTPS protocol. Enter https://example.com (replace with your domain name) in the browser to access the website.