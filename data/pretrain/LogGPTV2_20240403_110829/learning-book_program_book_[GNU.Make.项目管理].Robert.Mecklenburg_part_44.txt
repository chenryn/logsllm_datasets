---
## Page 284
274
附录二
#plus-通过一行数字来进行两个整数的加法运算
plus=$（word $2,
$（wordlist $1,$(length）,
$（wordlist3,S（length),S（number_line))))
#gt--通过一行数字来判断s1是否大于S2
gt =s（filter s1,
$（wordlist 3,S（length),
$（wordlist$2,$(length),$（number_line))))
all:
@echo $（call plus,4,7)
@echo s（if s（cal1 gt,4,7).is,is not）
@echo S（if s（cal1 gt,7,4),is,is not)
@echo $（if $（cal1 gt,7,7),is,is not）
当我们运行此makefile时将会产生如下的结果：
$make
11
is not
is
is not
我们可以做进一步的延伸，像是通过索引一个颠倒的数字列表来纳入减法功能，就像倒
着数一样。例如，计算7减4，首先创建范围0到6的数字列表子集，将它颠倒过来，然
后取出第4个元素：
number_1ine:=0123456789..
lthrough6
:=0123456
reverse_it:=6543210
fourth_item :=3
让我们以make的语法来表示这个算法：
#backwards-
一个颠倒的数字行
backwards:=$（ca11generate,9876543210)
#reverse—将一串单词颠倒过来
reverse
=$（strip
$（foreach f,
$（wordlist 1，$（length)，$（backwards））,
$（word sf.s1）))
minus-
一计算S1减S2
minus
=$（word $2,
S(call reverse,
S（wordlist1,S1,S（number_line))))
minus:
$（callminus,7,4)
至于乘法和除法则留给读者自己练习。
---
## Page 285
索引引
前言
本索引让读者方便查找特定词汇在本书里的页码，以快速找到所需的内容。传统上，中
文书没有编制索引的惯例，因为中文不像英文那样有一套公认而且大家都知道的排序规
则（字母顺序）。然而，这是一本工具书，为了方使读者查阅，索引是不可或缺的。为
了兼顾“查阅”与“中文化”，我们决定沿袭英文版的编排格式，也就是依照英文字母
顺序排列所有条目，所以，我们保留所有原文，如此读者才能快速找到想找的条目，而
中文是以辅助说明的方式出现的。
然而，使用英文字母顺序编排意味着读者必须先知道英文词汇原文才能顺利找到其所在
的页码。例如，假设读者想知道本书哪几页提到了“域名服务”，那么，你必须先知道
其原文是“DomainNameService”，或是知道其缩写是“DNS”，然后才能推断此条
目应该是编在“D”小节。如果读者觉得这样不方便，我们为此感到抱歉，因为我们还
没有找到一套大家都公认的中文排序规则，如果我们像编字典那样使用首字笔划顺序来
排列，除了不方便查找之外，还必须面临一词多译的问题。例如，有人习惯将“serial
哪一种译词，要第一次就顺利找到“serialport”的页码，唯一的办法是碰运气。如果
运气不好，你必须同时知道serialport的每一种可能译法才有机会找到。
格式说明
275
---
## Page 286
276
索引
的编排格式。如果你想知道本书哪几页提到“performancetuning（性能调整）”，则必
须先翻到“P”小节，然后你会看到：
performancetuning（性能调整）
basicstep（基本步骤），97
capacityplanning（容量规划），107-111
Extermal（外部的），102
Intemal（内部的），103
如你所见，我们以缩排格式来表示各项信息。通常，从最左侧逐层往右读，可以得到
一个符合文法的完整句子或词汇：不过，并非每次都能这样，有时候你得到的只是特
定概念的关键词而已，例如“performancetuning、基本步骤”。所以，这段索引l是这
样解读的：第97页提到了“性能调整的基本步骤”，在103页提到了“内部的性能调
整”。
最后，在不妨碍查阅的前提下，对于第二层与第三层的条目，我们会予以中文化。
意见，请用E-mail告诉我们，好让我们知道如何改进。
符号
？=运算符
[]（brackets）wildcard（中括号通配符）、21
附带条件的变量赋值运算符，55
{}（curlybraces）invariables（用于变量的花
环境变量，63
括号），52
%（percent）characterpatternrules（模式规则
（）（parentheses）invariables（用于变量的圆括
中的百分比宇符）、33
号），52
+（plus）commandmodifier（加号命令修饰
+=（append）operator（附加运算符），56
符）、105
*（asterisk）wildcard（星号通配符）、21
？（questionmark）wildcard（问号通配符），21
$%自动变量，26
@sign（@符号）
$+自动变量，26
commandprefix，echoand（命令前级与输
$<自动变量、26
出），104
$？自动变量、26
效能与...、，200
$@自动变量，26
~（tilde）wildcard（~通配符）、21
S自动变量，26
$*自动变量，26
A
-（dash）commandprefix（破折号命令前级），
add-manifest函数，jars，188
105
inpatterms（模式中的符号），21
addprefix函数，86
：=运算符，54
addsuffix函数，85
欢迎提出改进索引方面的建议。请发邮件至PI:EMAIL。
---
## Page 287
索引
277
all工作目标，24
bookmakefile（本书的makefile），208-217
ALL_TREES变量、167
m4宏与..222
--always-make选项，261
输出的产生，225
Ant (Java),172
源文件的确认，228
buildfile（编译文件），172
对XML进行预处理，222
mkdir程序、174
bottleneck（瓶颈），198
portability（可移植性）、174
dependencies and（依存关系与....），
task（任务），173
199
appendoperator（+=）（附加运算符），56
build files,XML
（编译文件，XML格式），
arcommand，archive library（ar命令，程序
172
库）.45
build targets,recursive make and（递归式make
archivelibrary（程序库）、45
与建立工作目标）、124
archive members,automatic variables and（白
build-classpath函数，185
动变量与程序库成员），25
builds（编译结果）
arguments,patterms as built-in functions（内置
automation（自动），140
函数以模式为参数），76
Linux内核的makefile，230
arithmetic,performing with make（以make进
testing（测试），140
行算术运算），272
built-infunction（内置函数）、75-91
arrays,files array and command-line limits（数
文件名与...，83
组，files数组与命令行长度限制），
流程控制与.….86
115
以模式为参数，76
assert函数，87
宇符串函数，76
automake工具，151
语法，75
automaticvariable（自动变量），25，64
built-inrule（内置规则），33
程序库成员，25
隐含规则，36
空工作目标与..，25
变量，38
必要条件，25
（另见rule）
工作目标与....，25
VPATH与....，29
C
vpath与.....，29
-C目录选项，261
B
call函数，74
callingfunctions，wildcards and（通配符与调用
basename函数，84
函数），21
bash shell benchmarking and（基准测试与bash
canned sequences（见macros）
shell).195
case-sensitivityinvariables（变量名称中的大
benchmarking（基准测试），194
小写有别），52
bash shell,195
chainingrule（链接规则），33
Cygwin与...，196
intermediatefileand（中间文件与.）、
subst函数调用与......，197
38
variableassignmentspeed（变量赋值的速
character classes，wildcards and（通配将与字
度），197
集）、21
binarytree（二进制文件树）
charactersinvariables（变量名称中允许使用
ALL_TREES变量，167
的字符），52
文件系统布局与，138
check工作目标，24
多个，166
circularreferences，library（德环引用，程序
搜索，168
库）.50
独立的，137
circularity，library（环引用，程序库），50
源文件树的分离，153-161
CLASSPATH变量，Javamakefile，183
clean工作目标，24
---
## Page 288
278
索引
code（makefile的代码）
prefix（前缀）
debugging（调度）
@.104
defensivecoding（具保护功能的代
-（破折号）.105
码）、250
+（加号）、105
writing for（为…..编写），248
shell,sequence（shell序列），102
duplicating，recursive make and（递式
statuscode（状态码），105
make与重复），126
targets，overriding（工作目标，覆盖掉），
commandscript（命令脚本）、18
256
errormessage（错误信息）、255
variableexpansion（变量扩展），60