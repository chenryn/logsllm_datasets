Project [3]. In Table I, we list the hardware resources used
by PL-PUF authentication circuits; Logic Block resources
include: Slice, Look Up Table (LUT), Flip Flop (FF), and
Block RAM (BRAM).
1) Cost of PUF: To evaluate the cost, the size of PL-PUF
authentication circuits is compared to the TPM implementation
on FPGA [14], [15]. Eisenbarth et al. [15] assume 3,000
Logic Elements (each element consists of a single 4-input
LUT connected to a single-bit ﬂip-ﬂop) and 75k RAM. Eguro
and Venkatesan [14] assume 27,237 LUTs, 27,076 FFs, and
49 BRAMs. These circuit sizes of TPM implementations are
signiﬁcantly larger than the current implementation of PL-
PUF authentication; see Table I. Furthermore,
the current
implementation of RS encoding/decoding uses the MATLAB
Communication Toolbox and HDL Coder, which are not
optimized. We can reduce these parts with custom code. We
estimate the price of PL-PUF based on the size of the circuit
is less than 1 US dollar because the price of TPM is estimated
to be 1 US dollar [31] (from 2006). Furthermore, PL-PUF will
be integrated into the circuits in a USB IC and does not require
additional tamper-proof mechanism as a TPM chip; i.e., the
cost will be even lower. Thus, price-wise, PL-PUF should not
be an issue for most USB devices. Especially, DeviceVeil is
assumed to be used in enterprise environments, which can
absorb the extra cost for security gain.
2) Setup and Authentication: PL-PUF authentication cir-
cuits are set up by a tool we call PUF-Acquisition, which
works as a database enrollment tool on Windows. The database
is used by PUF authentication in the hypervisor. The setup tool
and hypervisor use USB-UART interface to communicate with
the PUF. The procedures of the Setup Tool (Enrollment) and
DeviceVeil authentication (hypervisor’s veriﬁer) are explained
below. Note that we assume that suitable challenge data is
selected to generate a robust key.
Setup Tool (Enrollment):
Figure 3 outlines the PL-PUF
Input to
RS232C
over USB
(cid:51)(cid:47)(cid:16)(cid:51)(cid:56)(cid:41)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:38)(cid:76)(cid:85)(cid:70)(cid:88)(cid:76)(cid:87)(cid:86)
(cid:8904) (cid:56)(cid:83)(cid:83)(cid:72)(cid:85)(cid:3)(cid:20)(cid:21)(cid:27)(cid:69)(cid:76)(cid:87)(cid:86) (cid:82)(cid:73)(cid:3)(cid:51)(cid:56)(cid:41)(cid:3)(cid:53)(cid:72)(cid:86)(cid:83)(cid:82)(cid:81)(cid:86)(cid:72)(cid:3)
(cid:37)(cid:72)(cid:70)(cid:82)(cid:80)(cid:72)(cid:86)(cid:3)(cid:68)(cid:3)(cid:78)(cid:72)(cid:92)(cid:17)
(cid:8905) (cid:55)(cid:75)(cid:72) (cid:78)(cid:72)(cid:92) (cid:76)(cid:86) (cid:72)(cid:81)(cid:70)(cid:82)(cid:71)(cid:72)(cid:71)(cid:3)(cid:69)(cid:92)(cid:3)
(cid:53)(cid:72)(cid:72)(cid:71)(cid:16)(cid:54)(cid:82)(cid:79)(cid:82)(cid:80)(cid:82)(cid:81)(cid:3)(cid:70)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:74)(cid:17)
Output from
RS232C
over USB
(cid:51)(cid:47)(cid:16)(cid:51)(cid:56)(cid:41)
128
128
response
(cid:53)(cid:54)
(cid:38)(cid:82)(cid:71)(cid:76)(cid:81)(cid:74)
128
128
challenge
(cid:8903) (cid:54)(cid:72)(cid:81)(cid:71)(cid:3)(cid:70)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)(cid:15)(cid:3)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)(cid:15) (cid:68)(cid:81)(cid:71)
(cid:72)(cid:81)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:76)(cid:74)(cid:81)(cid:68)(cid:79)(cid:3)(cid:90)(cid:76)(cid:87)(cid:75)(cid:3)
(cid:53)(cid:54)(cid:21)(cid:22)(cid:21)(cid:38)(cid:3)(cid:82)(cid:89)(cid:72)(cid:85)(cid:3)(cid:56)(cid:54)(cid:37)(cid:17)
(cid:54)(cid:72)(cid:87)(cid:88)(cid:83)(cid:3)(cid:55)(cid:82)(cid:82)(cid:79)
(cid:38)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)
(cid:58)(cid:76)(cid:81)(cid:71)(cid:82)(cid:90)(cid:86)
enc/dec
plaintext
(cid:8908) (cid:54)(cid:68)(cid:89)(cid:72)(cid:3)(cid:75)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)(cid:3)
(cid:68)(cid:81)(cid:71)(cid:3)(cid:70)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87)(cid:3)(cid:87)(cid:82)(cid:3)
(cid:39)(cid:37)(cid:17)
helper
(cid:54)(cid:72)(cid:87)(cid:88)(cid:83)(cid:3)(cid:55)(cid:82)(cid:82)(cid:79)
(cid:38)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)
(cid:43)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)
(cid:38)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)
(cid:58)(cid:76)(cid:81)(cid:71)(cid:82)(cid:90)(cid:86)
128
128
(cid:53)(cid:54)
(cid:39)(cid:72)(cid:70)(cid:82)(cid:71)(cid:76)(cid:81)(cid:74)
(cid:8906) (cid:47)(cid:82)(cid:90)(cid:72)(cid:85) (cid:20)(cid:21)(cid:27) (cid:69)(cid:76)(cid:87)(cid:86)(cid:3)
(cid:82)(cid:73)(cid:3)(cid:51)(cid:56)(cid:41)(cid:3)(cid:85)(cid:72)(cid:86)(cid:83)(cid:82)(cid:81)(cid:86)(cid:72)(cid:3)(cid:68)(cid:85)(cid:72)(cid:3)
(cid:72)(cid:91)(cid:70)(cid:79)(cid:88)(cid:86)(cid:76)(cid:89)(cid:72)(cid:16)(cid:50)(cid:53)(cid:72)(cid:71) (cid:69)(cid:92)(cid:3)
(cid:85)(cid:72)(cid:71)(cid:88)(cid:81)(cid:71)(cid:68)(cid:81)(cid:87) (cid:86)(cid:92)(cid:80)(cid:69)(cid:82)(cid:79)(cid:86)(cid:3)
(cid:82)(cid:73)(cid:3)(cid:53)(cid:54)(cid:3)(cid:70)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:74)(cid:17) (cid:55)(cid:75)(cid:72)(cid:3)
(cid:89)(cid:68)(cid:79)(cid:88)(cid:72)(cid:3)(cid:69)(cid:72)(cid:70)(cid:82)(cid:80)(cid:72)(cid:86)(cid:3)
(cid:43)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)(cid:17)
(cid:1708) 1
key
(cid:36)(cid:40)(cid:54)
(cid:40)(cid:49)(cid:38)(cid:23907)(cid:39)(cid:40)(cid:38)
ciphertext
(cid:8907) (cid:51)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)(cid:3)(cid:76)(cid:86)(cid:3)(cid:72)(cid:81)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:72)(cid:71)(cid:3)(cid:69)(cid:92)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3)(cid:78)(cid:72)(cid:92)(cid:17)
Fig. 3. Setup Tool (Enrollment) and PL-PUF authentication circuits. Light
gray circuits are not used by enrollment.
(cid:51)(cid:47)(cid:16)(cid:51)(cid:56)(cid:41)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:38)(cid:76)(cid:85)(cid:70)(cid:88)(cid:76)(cid:87)(cid:86)
(cid:8910) (cid:21)(cid:24)(cid:25)(cid:3)(cid:69)(cid:76)(cid:87)(cid:86)(cid:3)(cid:82)(cid:73)(cid:3)(cid:51)(cid:56)(cid:41)(cid:3)(cid:85)(cid:72)(cid:86)(cid:83)(cid:82)(cid:81)(cid:86)(cid:72)(cid:17)
(cid:51)(cid:47)(cid:16)(cid:51)(cid:56)(cid:41)
128
128
response
(cid:53)(cid:54)
(cid:38)(cid:82)(cid:71)(cid:76)(cid:81)(cid:74)
128
128
(cid:8911) (cid:47)(cid:82)(cid:90)(cid:72)(cid:85) (cid:20)(cid:21)(cid:27) (cid:69)(cid:76)(cid:87)(cid:86)(cid:3)(cid:68)(cid:85)(cid:72)(cid:3)
(cid:72)(cid:91)(cid:70)(cid:79)(cid:88)(cid:86)(cid:76)(cid:89)(cid:72)(cid:16)(cid:50)(cid:53)(cid:72)(cid:71) (cid:69)(cid:92)(cid:3)(cid:75)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)(cid:15)(cid:3)
(cid:68)(cid:81)(cid:71)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3)(cid:89)(cid:68)(cid:79)(cid:88)(cid:72)(cid:3)(cid:69)(cid:72)(cid:70)(cid:82)(cid:80)(cid:72)(cid:86)(cid:3)
(cid:85)(cid:72)(cid:71)(cid:88)(cid:81)(cid:71)(cid:68)(cid:81)(cid:87) (cid:86)(cid:92)(cid:80)(cid:69)(cid:82)(cid:79)(cid:86)(cid:3)(cid:82)(cid:73)(cid:3)(cid:53)(cid:54)(cid:3)
(cid:70)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:74)(cid:17)
128
128
(cid:53)(cid:54)
(cid:39)(cid:72)(cid:70)(cid:82)(cid:71)(cid:76)(cid:81)(cid:74)
(cid:8912) (cid:53)(cid:54)(cid:3)(cid:71)(cid:72)(cid:70)(cid:82)(cid:71)(cid:76)(cid:81)(cid:74)(cid:3)
(cid:72)(cid:91)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87)(cid:86)(cid:3)(cid:87)(cid:75)(cid:72) (cid:78)(cid:72)(cid:92)(cid:17)
(cid:1708) 1
key
(cid:36)(cid:40)(cid:54)
(cid:40)(cid:49)(cid:38)(cid:23907)(cid:39)(cid:40)(cid:38)
(cid:8913) (cid:38)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87) (cid:76)(cid:86) (cid:71)(cid:72)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:72)(cid:71)(cid:3)(cid:69)(cid:92)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3)(cid:78)(cid:72)(cid:92)(cid:17)
Input to
RS232C
over USB
challenge
(cid:42)(cid:88)(cid:72)(cid:86)(cid:87) (cid:50)(cid:54)
(cid:43)(cid:92)(cid:83)(cid:72)(cid:85)(cid:89)(cid:76)(cid:86)(cid:82)(cid:85)
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:57)(cid:72)(cid:76)(cid:79)
(cid:38)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)
(cid:43)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)
(cid:38)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)
helper
enc/dec
ciphertext
(cid:8909) (cid:54)(cid:72)(cid:81)(cid:71)(cid:3)(cid:70)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)(cid:15)(cid:3)
(cid:75)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)(cid:15)(cid:3)(cid:70)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87)(cid:15) (cid:68)(cid:81)(cid:71)
(cid:72)(cid:81)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:76)(cid:74)(cid:81)(cid:68)(cid:79)(cid:3)(cid:90)(cid:76)(cid:87)(cid:75)(cid:3)
(cid:53)(cid:54)(cid:21)(cid:22)(cid:21)(cid:38)(cid:3)(cid:82)(cid:89)(cid:72)(cid:85)(cid:3)(cid:56)(cid:54)(cid:37)(cid:17)
Output from
RS232C
over USB
(cid:42)(cid:88)(cid:72)(cid:86)(cid:87) (cid:50)(cid:54)
(cid:43)(cid:92)(cid:83)(cid:72)(cid:85)(cid:89)(cid:76)(cid:86)(cid:82)(cid:85)
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:57)(cid:72)(cid:76)(cid:79)
(cid:38)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)
(cid:43)(cid:72)(cid:79)(cid:83)(cid:72)(cid:85)
(cid:38)(cid:76)(cid:83)(cid:75)(cid:72)(cid:85)(cid:87)(cid:72)(cid:91)(cid:87)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)
Verify
plaintext
(cid:8914) (cid:87)(cid:75)(cid:72)(cid:3)(cid:82)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87) (cid:76)(cid:86)
(cid:70)(cid:82)(cid:80)(cid:83)(cid:68)(cid:85)(cid:72)(cid:71) (cid:69)(cid:92) (cid:87)(cid:75)(cid:72)(cid:3)
(cid:83)(cid:79)(cid:68)(cid:76)(cid:81)(cid:87)(cid:72)(cid:91)(cid:87)(cid:3)(cid:76)(cid:81)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3)(cid:39)(cid:37)(cid:17)
Fig. 4. DeviceVeil authentication (veriﬁcation of the hypervisor) and PL-PUF
authentication circuits. Light gray circuits are not used in authentication.
database generation procedure using the setup tool. It runs on
Windows and communicates with the PL-PUF authentication
circuits using RS232C protocol over FTDI-USB serial. As
prerequisite data, the setup tool has challenge data for PL-PUF
and plaintext for encryption/decryption by the key created by
the PL-PUF. The steps are as follows.
1) The setup tool sends a challenge (256 bits), plaintext, and
encryption signal to the PL-PUF authentication circuits
with RS232C protocol over USB.
2) The challenge goes to PL-PUF and becomes a 256-bit
response. The upper half (128 bits) of the response is
used as the encryption key.
3) The key is encoded by Reed-Solomon error correction
code, and 128 redundant bits are generated (16 symbols).
4) The redundant RS symbols are masked (XORed) with
the lower half (128 bits) of the PUF response so that the
redundant symbols do not leak any secret. The masked
value is used as helper data, which is outputted to the
setup tool.
5) Inputted plaintext is encrypted by the encryption key. The
ciphertext is outputted to the setup tool.
6) The setup tool saves the helper and ciphertext values to
the DB for PUF authentication.
DeviceVeil Authentication (Veriﬁcation of the Hypervisor):
Figure 4 outlines the PL-PUF authentication procedure. The
DeviceVeil hypervisor sends a challenge, helper, and ciphertext
308
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:52:47 UTC from IEEE Xplore.  Restrictions apply. 
TABLE II
THE INPUT DATA STRUCTURE FOR DEVICEVEIL’S DB, USED FOR USB
DEVICE DETECTION AND PUF AUTHENTICATION. CATEGORIES OF
VERIFICATION, FLAGS, AND OPTIONS ARE SHOWN.
Category
Flag (1 byte)
Options when the ﬂag is on.
Vendor ID
Product ID
Class ID
Sub-Class ID
Serial Number
PUF Info
1=on,0=off
1=on,0=off
1=on,0=off
1=on,0=off
1=on,0=off
1=on,0=off
Vendor ID 2 bytes
Product ID 2 bytes
Class ID 2 bytes
Sub-Class ID 2 bytes
Serial Number (Unicode) 18 bytes
Challenge 32 bytes
Challenge #2 16 bytes
Helper 16 bytes
Ciphertext 16 bytes
Plaintext 16 bytes
to the Zuiho board, and veriﬁes the received plaintext. The
steps are as follows.
7) DeviceVeil sends challenge, helper, and ciphertext to the
PL-PUF authentication circuits in the USB device.
8) The challenge goes to PL-PUF and becomes a 256-bit
response.
9) The helper data is XORed with the lower 128 bits of
the PUF response, resulting in the unmasked redundant
symbols (with several errors) of the RS code.
10) The upper 128 bits of the response and redundant symbols
go through RS decoding and generate the encryption key.
11) The ciphertext is decrypted by the encryption key.
12) The output plaintext
in
the DB for PUF authentication. When the comparison
succeeds, DeviceVeil exposes the actual USB device to
the OS; when failed, the USB device remains hidden.
is compared to the plaintext
3) Creating DB for USB Device Detection and PUF
Authentication: We summarize the input data structure used
by our pre-OS USB device detection and PUF Authentication
in Table II. Device meta-data is stored in the DB during setup
(Enrollment), encrypted by a TPM-stored key accessible only
by the hypervisor (see Figure 1). We use the stored device
information (e.g., vendor ID, product ID, class ID, and seal
number, provided by the Get descriptor() function) in the
DB for pre-OS device detection. We get the PUF challenge-
response pairs from the Setup Tool (Enrollment) described in
Section VI-A and store them in the DB for PUF authentication.
B. Device Detection by Hypervisor
DeviceVeil is based on the para-pass-through architecture
of BitVisor and does not prevent hardware interrupts to the
OS when a USB device is inserted, but DeviceVeil responds
with a dummy USB device during USB-PUF authentication.
1) Communication Structure: We add a USB device detec-
tion process to BitVisor’s libUSB compatible interface and
use libFTDI as the FTDI driver. When a USB device is
detected, DeviceVeil plays the role of a USB host, and the
PUF authentication process communicates with the PL-PUF
circuits with the RS232C protocol on USB-FTDI.
309
(cid:39)(cid:437)(cid:286)(cid:400)(cid:410) (cid:75)(cid:94)
(cid:24)(cid:286)(cid:448)(cid:349)(cid:272)(cid:286)(cid:115)(cid:286)(cid:349)(cid:367) (cid:346)(cid:455)(cid:393)(cid:286)(cid:396)(cid:448)(cid:349)(cid:400)(cid:381)(cid:396)
(cid:104)(cid:94)(cid:17)(cid:882)(cid:87)(cid:104)(cid:38)(cid:3)(cid:24)(cid:286)(cid:448)(cid:349)(cid:272)(cid:286)
(cid:4)(cid:410)(cid:410)(cid:258)(cid:272)(cid:346)