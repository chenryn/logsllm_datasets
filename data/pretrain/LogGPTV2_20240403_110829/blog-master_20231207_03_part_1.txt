## PostgreSQL 17 preview - postgres_fdw 支持semi-join pushdown (exists (...))  
### 作者                  
digoal                  
### 日期                  
2023-12-07             
### 标签                  
PostgreSQL , PolarDB , DuckDB , semi-join , postgres_fdw , pushdown       
----                  
## 背景       
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=824dbea3e41efa3b35094163c834988dea7eb139  
```  
Add support for deparsing semi-joins to contrib/postgres_fdw  
author	Alexander Korotkov 	  
Tue, 5 Dec 2023 20:53:12 +0000 (22:53 +0200)  
committer	Alexander Korotkov 	  
Tue, 5 Dec 2023 20:53:12 +0000 (22:53 +0200)  
commit	824dbea3e41efa3b35094163c834988dea7eb139  
tree	f810eb49e750dee3b601385328faa0f4369291f6	tree  
parent	278eb13c48236c261ed4bab1cb4696321e346eb7	commit | diff  
Add support for deparsing semi-joins to contrib/postgres_fdw  
SEMI-JOIN is deparsed as the EXISTS subquery. It references outer and inner  
relations, so it should be evaluated as the condition in the upper-level WHERE  
clause. The signatures of deparseFromExprForRel() and deparseRangeTblRef() are  
revised so that they can add conditions to the upper level.  
PgFdwRelationInfo now has a hidden_subquery_rels field, referencing the relids  
used in the inner parts of semi-join.  They can't be referred to from upper  
relations and should be used internally for equivalence member searches.  
The planner can create semi-join, which refers to inner rel vars in its target  
list. However, we deparse semi-join as an exists() subquery. So we skip the  
case when the target list references to inner rel of semi-join.  
Author: Alexander Pyhalov  
Reviewed-by: Ashutosh Bapat, Ian Lawrence Barwick, Yuuki Fujii, Tomas Vondra  
Discussion: https://postgr.es/m/PI:EMAIL  
```  
例子:  
```  
+-- ===================================================================  
+-- test SEMI-JOIN pushdown  
+-- ===================================================================  
+EXPLAIN (verbose, costs off)  
+SELECT ft2.*, ft4.* FROM ft2 INNER JOIN ft4 ON ft2.c2 = ft4.c1  
+  WHERE ft2.c1 > 900  
+  AND EXISTS (SELECT 1 FROM ft5 WHERE ft4.c1 = ft5.c1)  
+  ORDER BY ft2.c1;  
+                                                                                                                                                QUERY PLAN                                                                                                                                                   
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
+ Foreign Scan  
+   Output: ft2.c1, ft2.c2, ft2.c3, ft2.c4, ft2.c5, ft2.c6, ft2.c7, ft2.c8, ft4.c1, ft4.c2, ft4.c3  
+   Relations: ((public.ft2) INNER JOIN (public.ft4)) SEMI JOIN (public.ft5)  
+   Remote SQL: SELECT r1."C 1", r1.c2, r1.c3, r1.c4, r1.c5, r1.c6, r1.c7, r1.c8, r2.c1, r2.c2, r2.c3 FROM ("S 1"."T 1" r1 INNER JOIN "S 1"."T 3" r2 ON (((r1.c2 = r2.c1)) AND ((r1."C 1" > 900)))) WHERE EXISTS (SELECT NULL FROM "S 1"."T 4" r4 WHERE ((r1.c2 = r4.c1))) ORDER BY r1."C 1" ASC NULLS LAST  
+(4 rows)  
+  
+SELECT ft2.*, ft4.* FROM ft2 INNER JOIN ft4 ON ft2.c2 = ft4.c1  
+  WHERE ft2.c1 > 900  
+  AND EXISTS (SELECT 1 FROM ft5 WHERE ft4.c1 = ft5.c1)  
+  ORDER BY ft2.c1;  
+ c1  | c2 |  c3   |              c4              |            c5            | c6 |     c7     | c8  | c1 | c2 |   c3     
+-----+----+-------+------------------------------+--------------------------+----+------------+-----+----+----+--------  
+ 906 |  6 | 00906 | Wed Jan 07 00:00:00 1970 PST | Wed Jan 07 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 916 |  6 | 00916 | Sat Jan 17 00:00:00 1970 PST | Sat Jan 17 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 926 |  6 | 00926 | Tue Jan 27 00:00:00 1970 PST | Tue Jan 27 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 936 |  6 | 00936 | Fri Feb 06 00:00:00 1970 PST | Fri Feb 06 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 946 |  6 | 00946 | Mon Feb 16 00:00:00 1970 PST | Mon Feb 16 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 956 |  6 | 00956 | Thu Feb 26 00:00:00 1970 PST | Thu Feb 26 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 966 |  6 | 00966 | Sun Mar 08 00:00:00 1970 PST | Sun Mar 08 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 976 |  6 | 00976 | Wed Mar 18 00:00:00 1970 PST | Wed Mar 18 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 986 |  6 | 00986 | Sat Mar 28 00:00:00 1970 PST | Sat Mar 28 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 996 |  6 | 00996 | Tue Apr 07 00:00:00 1970 PST | Tue Apr 07 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+(10 rows)  
+  
+-- The same query, different join order  
+EXPLAIN (verbose, costs off)  
+SELECT ft2.*, ft4.* FROM ft2 INNER JOIN  
+  (SELECT * FROM ft4 WHERE  
+  EXISTS (SELECT 1 FROM ft5 WHERE ft4.c1 = ft5.c1)) ft4  
+  ON ft2.c2 = ft4.c1  
+  WHERE ft2.c1 > 900  
+  ORDER BY ft2.c1;  
+                                                                                                                                                QUERY PLAN                                                                                                                                                   
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
+ Foreign Scan  
+   Output: ft2.c1, ft2.c2, ft2.c3, ft2.c4, ft2.c5, ft2.c6, ft2.c7, ft2.c8, ft4.c1, ft4.c2, ft4.c3  
+   Relations: ((public.ft2) INNER JOIN (public.ft4)) SEMI JOIN (public.ft5)  
+   Remote SQL: SELECT r1."C 1", r1.c2, r1.c3, r1.c4, r1.c5, r1.c6, r1.c7, r1.c8, r4.c1, r4.c2, r4.c3 FROM ("S 1"."T 1" r1 INNER JOIN "S 1"."T 3" r4 ON (((r1.c2 = r4.c1)) AND ((r1."C 1" > 900)))) WHERE EXISTS (SELECT NULL FROM "S 1"."T 4" r5 WHERE ((r4.c1 = r5.c1))) ORDER BY r1."C 1" ASC NULLS LAST  
+(4 rows)  
+  
+SELECT ft2.*, ft4.* FROM ft2 INNER JOIN  
+  (SELECT * FROM ft4 WHERE  
+  EXISTS (SELECT 1 FROM ft5 WHERE ft4.c1 = ft5.c1)) ft4  
+  ON ft2.c2 = ft4.c1  
+  WHERE ft2.c1 > 900  
+  ORDER BY ft2.c1;  
+ c1  | c2 |  c3   |              c4              |            c5            | c6 |     c7     | c8  | c1 | c2 |   c3     
+-----+----+-------+------------------------------+--------------------------+----+------------+-----+----+----+--------  
+ 906 |  6 | 00906 | Wed Jan 07 00:00:00 1970 PST | Wed Jan 07 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 916 |  6 | 00916 | Sat Jan 17 00:00:00 1970 PST | Sat Jan 17 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 926 |  6 | 00926 | Tue Jan 27 00:00:00 1970 PST | Tue Jan 27 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 936 |  6 | 00936 | Fri Feb 06 00:00:00 1970 PST | Fri Feb 06 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 946 |  6 | 00946 | Mon Feb 16 00:00:00 1970 PST | Mon Feb 16 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 956 |  6 | 00956 | Thu Feb 26 00:00:00 1970 PST | Thu Feb 26 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 966 |  6 | 00966 | Sun Mar 08 00:00:00 1970 PST | Sun Mar 08 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 976 |  6 | 00976 | Wed Mar 18 00:00:00 1970 PST | Wed Mar 18 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 986 |  6 | 00986 | Sat Mar 28 00:00:00 1970 PST | Sat Mar 28 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+ 996 |  6 | 00996 | Tue Apr 07 00:00:00 1970 PST | Tue Apr 07 00:00:00 1970 | 6  | 6          | foo |  6 |  7 | AAA006  
+(10 rows)  