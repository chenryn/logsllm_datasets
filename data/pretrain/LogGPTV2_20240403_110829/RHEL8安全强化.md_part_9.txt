### 重要 {.title}
`NO-SHA1`{.literal} 策略模块只在签名中禁用 SHA-1
哈希函数，而在其它地方不禁用。特别是，`NO-SHA1`{.literal}
模块仍然允许使用带有基于哈希消息验证代码(HMAC)的 SHA-1 。这是因为 HMAC
安全属性不依赖于相应哈希函数的抗冲突性，因此最近针对 SHA-1 的攻击对 HMAC
使用 SHA-1 的影响显著降低。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
RHEL 8.3 提供了禁用 SHA-1 的模块。RHEL 8.2
提供了对系统范围加密策略的自定义。
:::
::: orderedlist
**流程**
1.  将您的策略调整应用到 `DEFAULT`{.literal} 系统范围加密策略级别：
    ``` screen
    # update-crypto-policies --set DEFAULT:NO-SHA1
    ```
2.  要使您的加密设置对已经运行的服务和应用程序有效，请重启系统：
    ``` screen
    # reboot
    ```
:::
::: itemizedlist
**其它资源**
-   `update-crypto-policies(8)`{.literal} 手册页中的
    `自定义策略`{.literal} 部分。
-   `crypto-policies(7)`{.literal} 手册页中的
    `加密策略定义格式`{.literal} 部分。
-   红帽博客文章 [如何在 RHEL 8.2
    中自定义加密策略](https://www.redhat.com/en/blog/how-customize-crypto-policies-rhel-82){.link}。
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#creating-and-setting-a-custom-system-wide-cryptographic-policy_using-the-system-wide-cryptographic-policies}创建并设置自定义系统范围的加密策略 {.title}
:::
以下步骤演示了通过完整的策略文件来自定义系统范围的加密策略。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
RHEL 8.2 提供了对系统范围加密策略的自定义。
:::
::: orderedlist
**流程**
1.  为自定义创建一个策略文件：
    ``` screen
    # cd /etc/crypto-policies/policies/
    # touch MYPOLICY.pol
    ```
    或者，从复制四个预定义策略级别中的一个开始：
    ``` screen
    # cp /usr/share/crypto-policies/policies/DEFAULT.pol /etc/crypto-policies/policies/MYPOLICY.pol
    ```
2.  在您选择的文本编辑器中编辑带有自定义加密策略的文件以满足您的要求，例如：
    ``` screen
    # vi /etc/crypto-policies/policies/MYPOLICY.pol
    ```
3.  将系统范围的加密策略切换到自定义级别：
    ``` screen
    # update-crypto-policies --set MYPOLICY
    ```
4.  要使您的加密设置对已经运行的服务和应用程序有效，请重启系统：
    ``` screen
    # reboot
    ```
:::
::: itemizedlist
**其它资源**
-   `update-crypto-policies(8)`{.literal} 手册页中的
    `自定义策略`{.literal} 部分和 `crypto-policies(7)`{.literal}
    手册页中的 `加密策略定义格式`{.literal} 部分
-   红帽博客文章 [在 RHEL 8.2
    中如何自定义加密策略](https://www.redhat.com/en/blog/how-customize-crypto-policies-rhel-82){.link}
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#related-information-using-the-system-wide-cryptographic-policies}其它资源 {.title}
:::
::: itemizedlist
-   知识库文章 [RHEL 8
    中的系统范围的加密策略](https://access.redhat.com/articles/3666211){.link}
    和 [RHEL 8
    中的强加密默认值和弱加密算法的弃用](https://access.redhat.com/articles/3642912){.link}
:::
:::
:::
[]{#setting-a-custom-cryptographic-policy-across-systems_security-hardening.html}
::: chapter
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_security-hardening.html#setting-a-custom-cryptographic-policy-across-systems_security-hardening}第 6 章 设置跨系统的自定义加密策略 {.title}
:::
作为管理员，您可以在 RHEL 上使用加密策略系统角色通过 Red Hat Ansible
Automation Platform 来快速、一致地配置跨多个不同系统的自定义加密策略。
::: section
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_security-hardening.html#crypto-policies-system-role-variables_setting-a-custom-cryptographic-policy-across-systems}加密策略系统角色变量和事实 {.title}
:::
在加密策略系统角色 playbook
中，您可以根据您的偏好和限制为加密策略配置文件定义参数。
如果没有配置任何变量，系统角色不会配置系统，只会报告事实。
::: variablelist
**加密策略系统角色选择的变量**
[`crypto_policies_policy`{.literal}]{.term}
:   确定系统角色应用到受管节点的加密策略。有关不同加密策略的详情，请参阅
    [系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
[`crypto_policies_reload`{.literal}]{.term}
:   如果设置为 `yes`{.literal}，则目前受影响的服务
    `ipsec`{.literal}、`bind`{.literal} 和 `sshd`{.literal}
    服务，在应用加密策略后重新加载。默认值为 `yes`{.literal}。
[`crypto_policies_reboot_ok`{.literal}]{.term}
:   如果设置为
    `yes`{.literal}，在系统角色更改了加密策略后需要重新启动，它会将
    `crypto_policies_reboot_required`{.literal} 设置为
    `yes`{.literal}。默认值为 `no`{.literal}。
:::
::: variablelist
**加密策略系统角色设置的事实**
[`crypto_policies_active`{.literal}]{.term}
:   列出当前选择的策略。
[`crypto_policies_available_policies`{.literal}]{.term}
:   列出系统上所有可用的策略。
[`crypto_policies_available_subpolicies`{.literal}]{.term}
:   列出系统上所有可用的子策略。
:::
::: itemizedlist
**其它资源**
-   [创建并设置自定义系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#creating-and-setting-a-custom-system-wide-cryptographic-policy_using-the-system-wide-cryptographic-policies){.link}。
:::
:::
::: section
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_security-hardening.html#proc_setting-a-custom-cryptographic-policy-using-the-crypto-policies-system-role_setting-a-custom-cryptographic-policy-across-systems}使用加密策略系统角色设置自定义加密策略 {.title}
:::
您可以使用加密策略系统角色从单个控制节点配置大量的受管节点。
::: itemizedlist
**先决条件**
-   对一个或多个 [*受管节点*]{.emphasis}
    的访问和权限，受管节点是您要使用加密策略系统角色配置的系统。
-   [*对控制节点的访问和权限*]{.emphasis}，这是 Red Hat Ansible Engine
    配置其他系统的系统。
    在控制节点上：
    ::: itemizedlist
    -   已安装 Red Hat Ansible Engine
    -   已安装 `rhel-system-roles`{.literal} 软件包
    -   列出受管节点的清单文件。
    :::
:::
::: orderedlist
**流程**
1.  使用以下内容创建新 `playbook.yml`{.literal} 文件：
    ``` screen
    ---
    - hosts: all
      tasks:
      - name: Configure crypto policies
        include_role:
          name: rhel-system-roles.crypto_policies
        vars:
          - crypto_policies_policy: FUTURE
          - crypto_policies_reboot_ok: true
    ```
    您可以将 [*FUTURE*]{.emphasis}
    值替换为您喜欢的加密策略，例如：`DEFAULT`{.literal}、
    `LEGACY`{.literal} 和 `FIPS:OSPP`{.literal}。
    `crypto_policies_reboot_ok: true`{.literal}
    变量会导致系统在系统角色更改了加密策略后重启。
    如需了解更多详细信息，请参阅
    [加密策略系统角色变量和事实](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/index#crypto-policies-system-role-variables_using-the-system-wide-cryptographic-policies){.link}。
2.  可选：验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file playbook.yml
    ```
:::
::: orderedlist
**验证**
1.  在控制节点上，创建另一个 playbook，例如,名为
    `verify_playbook.yml`{.literal}:
    ``` screen
    - hosts: all
      tasks:
     - name: Verify active crypto policy
       include_role:
         name: rhel-system-roles.crypto_policies
     - debug:
         var: crypto_policies_active
    ```
    此 playbook 不更改系统上的任何配置，只报告受管节点上的活动策略。
2.  运行同一个清单文件上的 playbook:
    ``` screen
    # ansible-playbook -i inventory_file verify_playbook.yml
    TASK [debug] **************************
    ok: [host] => {
        "crypto_policies_active": "FUTURE"
    }
    ```
    `"crypto_policies_active":`{.literal} 变量显示受管节点上的活动策略。
:::
:::
::: section
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_security-hardening.html#_additional_resources_2}其它资源 {.title}
:::
::: itemizedlist
-   `/usr/share/ansible/roles/rhel-system-roles.crypto_policies/README.md`{.literal}
    文件。
-   `ansible-playbook(1)`{.literal} 手册页。
-   [安装 RHEL
    系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/administration_and_configuration_tasks_using_system_roles_in_rhel/index#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel){.link}
    . .
-   [应用系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-system-administration_configuring-basic-system-settings#applying-a-role_getting-started-with-rhel-system-roles){.link}
    。
:::
:::
:::
[]{#configuring-applications-to-use-cryptographic-hardware-through-pkcs-11_security-hardening.html}
::: chapter
::: titlepage