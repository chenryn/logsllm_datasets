29.97 % 4.11
rrel
0.33
0.33
0.34
0.34
0.36
0.38
0.53
tM BP
2.12
4.93
9.84
20.01
44.6
126.57
875.97
Case 2
rs
vd
0.03 % 12.89
0.11 % 12.87
0.13 % 12.87
0.38 % 12.79
1.12 % 12.61
5.46 % 10.51
15.64 % 7.64
rrel
0.33
0.33
0.33
0.33
0.34
0.35
0.41
tM BP
2.02
4.49
8.65
17.24
35.49
78.01
555.49
Case 3
rs
vd
0.03 % 12.89
0.05 % 12.88
0.05 % 12.88
0.07 % 12.88
0.08% 12.87
0.12 % 12.85
0.43 % 12.65
rrel
0.33
0.33
0.33
0.33
0.33
0.33
0.33
tM BP
2.02
4.46
8.64
17.14
35.38
78.40
550.25
Case 4
rs
vd
0.2 % 12.90
0.17 % 12.87
0.06 % 12.87
0.07 % 12.88
0.1 % 12.86
0.13 % 12.66
0.4 % 12.68
rrel
0.33
0.33
0.33
0.33
0.33
0.33
0.33
Table 8: Impact of the block size on the median block propagation time (tM BP ) in seconds, the stale block rate rs, vd and rrel, given the
current Bitcoin block generation interval and an adversary with α = 0.3 and k = 6.
cient network propagation mechanism helps to increase the security
of the blockchain. Interestingly, given the block propagation mecha-
nism of Case 4, the resilience (in terms of double-spending value)
does not signiﬁcantly change in Table 8 when increasing the block
size from 0.1 MB to 8 MB (vd changes from 12.9 to 12.68 block
rewards respectively). Similarly, the relative revenue from selﬁsh
mining stays at rrel = 0.33, when all miners use the relay network.
Currently, a number of proposals suggest to chunk blocks and
download these chunks in parallel (e.g., Blocktorrent [35]). In a
separate experiment that we conducted, we implemented a block
propagation mechanisms that divides blocks into chunks of a few
kilobytes that can be queried from multiple peers. Our results show
that such a protocol does not improve the median block propagation
time compared to the send headers and relay network protocol, when
dealing with modest block sizes (i.e., smaller than 8 MB). This is due
to the fact that a chunked block propagates slower than the 10th and
25th percentile of nodes owing to: (i) the communication overhead
caused by the chunks, and (ii) because a node only forwards block
chunks if the respective block has been validated.
4.2.4 Throughput
We now evaluate the throughput achieved by various blockchain
instantiations. To this end, we vary the block size (from 0.1M B to
8 MB) and the block interval (from 0.5 seconds to 25 minutes) to
capture a larger number of blockchain instances with our simulator.
Here, we assume that the network relies on an efﬁcient propagation
mechanism (send headers with unsolicited block push and relay
network for all miners). For each simulated blockchain instance,
we compute the resulting throughput in transactions per second
(tps), measure the stale block rate and infer vd and rrel in order to
assess the blockchain’s security with our MDP model (cf. Section 3).
tps
33.4
40
50
66.7
66.7
66.7
vd
12.75
12.38
12.45
12.06
12.65
12.71
rrel
0.33
0.34
0.34
0.34
0.33
0.33
Block size Block interval
0.25MB
0.10MB
0.25MB
0.25MB
0.50MB
1.00MB
30 seconds
10 seconds
20 seconds
15 seconds
30 seconds
1 minute
Table 9: Throughput in transactions per second (tps) vs. security
measured in vd and rrel for an adversary with 30% mining power,
k = 6 and given 16 mining pools.
We also assume an average transaction size of 250 bytes, k = 6
conﬁrmations against double-spending and an adversary with 0.3
mining power and γ = 0.5.
In Table 9, we selectively list candidate blockchain instances
which could achieve a transactional throughput beyond 60 tps and
achieve similar security provisions to the existing Bitcoin system.
Clearly, our results indicate that different parameter conﬁgurations
can yield the same throughput—though with different security pro-
visions (due to a different stale block rate). In particular, we observe
that low consensus intervals offer less security compared to a higher
consensus interval given the same overall throughput, since the
network requires more round trips in order to commit the same
information to the blockchain. Our results show that there is con-
siderable room to enhance the scalability of existing PoW without
signiﬁcantly compromising security.
145. RELATED WORK
A number of contributions analyze double-spending attacks in Bit-
coin [16,31]) but they do not consider optimal adversarial strategies.
Eyal and Sirer [15] show that a selﬁsh miner can increase its
relative mining revenue by not directly publishing his blocks. Simi-
larly, Courtois and Bahack [8] study subversive mining strategies.
Our work shares similarities with Sapirshtein et al. [32]. Here, the
authors devise optimal adversarial strategies for selﬁsh mining in
Bitcoin. Unlike [32], our work however captures optimal adversar-
ial selﬁsh mining strategies for PoW-powered blockchain and takes
into account network delays and eclipse attacks. We additionally
capture optimal double-spending strategies—where we also take
into account the mining costs of the adversary, the number of re-
quired block conﬁrmations, and the double-spending value in order
to properly account for costs of the attack.
Croman et al. [9] discuss the scalability limitations of Bitcoin, but
do not quantify the security implications of smaller block intervals
or bigger blocks on the security of the system. Several works [9, 17]
analyse the security of Bitcoin’s protocol but only consider the
synchronous network model. Our analysis and ﬁndings do not rely
on any assumption on synchrony in the network and capture realistic
network delays witnessed in existing deployments.
GHOST [33] is an alternative to the longest chain rule for estab-
lishing consensus in PoW based blockchains and aims to alleviate
the negative impacts of stale blocks. Many PoW alternatives have
been proposed. In Proof of Stake (PoS) [30], the voting power of
peers is based on the amount of “stake” they own in the respective
blockchain system. Proof of Burn (PoB) is a proposal to replace
PoW by burning transaction outputs, such that they can no longer
be spent. Existing PoB-based blockchains however rely on PoW
in order to create blocks and therefore ultimately rely on PoW for
coin creation. Proof of Capacity (PoC), aims to use the available
hard-disk space in order to replace PoW. Bitcoin-NG [14] performs
leader election of PoW—allowing the leader to sign micro-blocks
until a new leader is elected. The literature features a number of
additional proposals [21, 25, 26, 37] that rely on classical Byzantine
fault tolerant consensus protocols in the hope to increase the con-
sensus efﬁciency and achieve high transactional throughput. Recent
studies propose to combine the use of PoW with BFT protocols to
realize highly-performant open consensus protocols (Byzcoin [25]).
6. CONCLUDING REMARKS
In this work, we introduced a novel quantitative framework to
objectively compare PoW blockchains given real world network
impacts and blockchain parameters. Our framework enables us to
evaluate the impact of network-layer parameters on the security of
PoW-based blockchain. By doing so, we show how to objectively
compare the security provisions of different PoW blockchain in-
stances. Namely, our framework allows us to push the boundaries
of PoW powered blockchains in terms of throughput in transactions
per second, while observing the impact on the security provisions
of the blockchain in terms of optimal selﬁsh mining and double
spending strategies.
For instance, we ﬁnd that Ethereum needs at least 37 block con-
ﬁrmations in order to match Bitcoin’s security with 6 block conﬁr-
mations, given an adversary with 30% of the total mining power.
Our results indirectly suggest that Bitcoin’s blockchain offers more
security than Ethereum’s blockchain which rewards miners with
uncle rewards and performs uniform tie breaking for blockchain
fork resolutions. Our results additionally indicate that existing
PoW blockchains can achieve a throughput of 60 transactions per
second—without signiﬁcantly affecting the blockchain’s security.
To the best of our knowledge, this is the ﬁrst contribution that quan-
titatively evaluates the impact of the stale block rate on optimal
double-spending and selﬁsh mining resistance of a PoW blockchain
(cf. Figure 7 and Figure 3). By doing so, our results quantitatively
capture the security of transactions based on their values, and on the
block conﬁrmations—effectively quantifying the level of security
achieved by the famous required six block conﬁrmations in Bitcoin.
Our insights do not only allow merchants to take into account
the security provisions when accepting transactions and to assess
their respective risk of double-spending, but also help miners in
quantifying a PoW blockchain’s resilience against selﬁsh mining.
7. REFERENCES
[1] Bitcoin block size limit controversy, 2016. Available from:
https://en.bitcoin.it/wiki/Block_size_limit_controversy.
[2] Frederik Armknecht, Jens-Matthias Bohli, Ghassan O
Karame, Zongren Liu, and Christian A Reuter. Outsourced
proofs of retrievability. In Proceedings of the 2014 ACM
SIGSAC Conference on Computer and Communications
Security, pages 831–843. ACM, 2014.
[3] Bitnodes. Bitnodes ip crawler. Available from:
https://github.com/ayeowch/bitnodes.
[4] V. Buterin. A next-generation smart contract and
decentralized application platform, 2014.
[5] Miguel Castro, Barbara Liskov, et al. Practical byzantine fault
tolerance. In OSDI, volume 99, pages 173–186, 1999.
[6] Coinmarketcap. Coinmarketcap. Available from:
https://coinmarketcap.com/.
[7] Matt Corallo. Bitcoin relay network. Available from:
http://bitcoinrelaynetwork.org/.
[8] Nicolas T. Courtois and Lear Bahack. On subversive miner
strategies and block withholding attack in bitcoin digital
currency. CoRR, abs/1402.1718, 2014.
[9] Kyle Croman, Christian Decker, Ittay Eyal, Adem Efe Gencer,
Ari Juels, Ahmed Kosba, Andrew Miller, Prateek Saxena,
Elaine Shi, and Emin Gün. On scaling decentralized
blockchains. In Proc. 3rd Workshop on Bitcoin and
Blockchain Research, 2016.
[10] C. Decker and R. Wattenhofer. Information Propagation in the
Bitcoin Network. In 13-th IEEE International Conference on
Peer-to-Peer Computing, 2013.
[11] Ethereum. Ethereum tie breaking. Available from:
https://github.com/ethereum/go-ethereum/commit/
bcf565730b1816304947021080981245d084a930.
[12] Ethereum. ethernodes. Available from:
https://www.ethernodes.org/network/1.
[13] Ethereum. ethstats. Available from: https://ethstats.net/.
[14] Ittay Eyal, Adem Efe Gencer, Emin Gun Sirer, and Robbert
van Renesse. Bitcoin-ng: A scalable blockchain protocol.
arXiv preprint arXiv:1510.02037, 2015.
[15] Ittay Eyal and Emin Gün Sirer. Majority is not enough:
Bitcoin mining is vulnerable. In Financial Cryptography and
Data Security, pages 436–454. Springer, 2014.
[16] The Finney Attack, 2013. Available from: https:
//en.bitcoin.it/wiki/Weaknesses#The_.22Finney.22_attack.
[17] Juan Garay, Aggelos Kiayias, and Nikos Leonardos. The
bitcoin backbone protocol: Analysis and applications. In
Annual International Conference on the Theory and
Applications of Cryptographic Techniques, pages 281–310.
Springer, 2015.
[18] Arthur Gervais, Hubert Ritzdorf, Ghassan O Karame, and
15Srdjan Capkun. Tampering with the delivery of blocks and
transactions in bitcoin. In Proceedings of the 22nd ACM
SIGSAC Conference on Computer and Communications
Security, pages 692–705. ACM, 2015.
[19] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg. Eclipse
attacks on bitcoin’s peer-to-peer network. 2015.
[20] Ronald A Howard. Dynamic Probabilistic Systems, Volume I:
Markov Models, volume 1. Courier Corporation, 2012.
[21] IBM. Ibm openblockchain. Available from:
http://www.ibm.com/blockchain/.
[22] Intel. Proof of elapsed time (poet). Available from:
http://intelledger.github.io/.
[23] Ghassan O. Karame, Elli Androulaki, and Srdjan Capkun.
Double-spending fast payments in bitcoin. In Proceedings of
the 2012 ACM conference on Computer and communications
security, CCS ’12, New York, NY, USA, 2012. ACM.
[24] John G Kemeny, J Laurie Snell, and Gerald L Thompson.
Finite mathematics. DC Murdoch, Linear Algebra for
Undergraduates, 1974.
[25] Eleftherios Kokoris Kogias, Philipp Jovanovic, Nicolas Gailly,
Ismail Khofﬁ, Linus Gasser, and Bryan Ford. Enhancing
bitcoin security and performance with strong consistency via
collective signing. In 25th USENIX Security Symposium
(USENIX Security 16), pages 279–296, Austin, TX, August
2016. USENIX Association.
[26] D. Mazieres. The stellar consensus protocol: A federated
model for internet-level consensus. Available from: https:
//www.stellar.org/papers/stellar-consensus-protocol.pdf.
[27] Andrew Miller, James Litton, Andrew Pachulski, Neal Gupta,
Dave Levin, Neil Spring, and Bobby Bhattacharjee.
Discovering bitcoin’s public topology and inﬂuential nodes.
[28] S. Nakamoto. Bitcoin: A p2p electronic cash system, 2009.
[29] Kartik Nayak, Srijan Kumar, Andrew Miller, and Elaine Shi.
Stubborn mining: Generalizing selﬁsh mining and combining
with an eclipse attack. Technical report, IACR Cryptology
ePrint Archive 2015, 2015.
[30] QuantumMechanic. Proof of stake. Available from:
https://bitcointalk.org/index.php?topic=27787.0.
[31] Meni Rosenfeld. Analysis of hashrate-based double spending.
arXiv preprint arXiv:1402.2009, 2014.
[32] Ayelet Sapirshtein, Yonatan Sompolinsky, and Aviv Zohar.
Optimal selﬁsh mining strategies in bitcoin. Proceedings of
the 2016 Conference on Financial Crypto (FC), 2016.
[33] Yonatan Sompolinsky and Aviv Zohar. Secure high-rate
transaction processing in bitcoin. In Financial Cryptography
and Data Security, pages 507–527. Springer, 2015.
[34] testmy.net. testmy.net. Available from:
http://testmy.net/country.
[35] Jonathan Toomim. blocktorrent. Available from:
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/
2015-September/011176.html.
[36] Verizon. Verizon latency. Available from:
http://www.verizonenterprise.com/about/network/latency/.
[37] Marko Vukolic. The quest for scalable blockchain fabric:
Proof-of-work vs. bft replication. In Proceedings of the IFIP
WG 11.4 Workshop iNetSec 2015. 2015.
16