title:Anonymizing Social Graphs via Uncertainty Semantics
author:Hiep H. Nguyen and
Abdessamad Imine and
Micha&quot;el Rusinowitch
Anonymizing Social Graphs via Uncertainty
Semantics
Hiep H. Nguyen, Abdessamad Imine, and Micha¨el Rusinowitch
LORIA/INRIA Nancy-Grand Est, France
Email: {huu-hiep.nguyen,michael.rusinowitch}@inria.fr, PI:EMAIL
4
1
0
2
g
u
A
6
]
I
S
.
s
c
[
1
v
9
0
2
1
.
8
0
4
1
:
v
i
X
r
a
Abstract—Rather than anonymizing social graphs by gener-
alizing them to super nodes/edges or adding/removing nodes
and edges to satisfy given privacy parameters, recent methods
exploit the semantics of uncertain graphs to achieve privacy
protection of participating entities and their relationship. These
techniques anonymize a deterministic graph by converting it
into an uncertain form. In this paper, we propose a generalized
obfuscation model based on uncertain adjacency matrices that
keep expected node degrees equal to those in the unanonymized
graph. We analyze two recently proposed schemes and show their
ﬁtting into the model. We also point out disadvantages in each
method and present several elegant techniques to ﬁll the gap
between them. Finally, to support fair comparisons, we develop
a new tradeoff quantifying framework by leveraging the concept
of incorrectness in location privacy research. Experiments on
large social graphs demonstrate the effectiveness of our schemes.
I. INTRODUCTION
Graphs represent a rich class of data observed in daily life
where entities are described by vertices and their connections
are characterized by edges. With the emergence of increasingly
complex networks [11], the research community requires large
and reliable graph data to conduct in-depth studies. However,
this requirement usually conﬂicts with privacy rights of data
contributing entities. Naive approaches like removing user ids
from a social graph are not effective, leaving users open
to privacy risks, especially re-identiﬁcation attacks [1] [7].
Therefore, many graph anonymization schemes have been
proposed [24], [9], [25], [4], [20], [18].
the
Given an unlabeled undirected graph,
existing
anonymization methods fall into four main categories. The
ﬁrst category includes random addition, deletion and switching
of edges to prevent the re-identiﬁcation of nodes or edges.
The methods in the second category provide k-anonymity
[17] by deterministic edge additions or deletions, assuming
attacker’s background knowledge regarding certain properties
of its target nodes. The methods in the third category assign
edge probabilities to add uncertainty to the true graph. The
edges probabilities may be computed explicitly as in [2] or
implicitly via random walks [10]. Finally, the fourth class of
techniques, generalization, cluster nodes into super nodes of
size at least k. Note that the last two classes of schemes induce
possible world models, i.e., we can retrieve sample graphs that
are consistent with the anonymized output graph.
The third category is the most recent class of methods
which leverage the semantics of edge probability to inject
uncertainty to a given deterministic graph, converting it into an
uncertain one. Most of schemes in this category are scalable,
i.e. runnable on million-scale graphs or more. As an example,
Boldi et al. [2] introduced the concept of (k,ǫ)-obfuscation
(denoted as (k, ǫ)-obf), where k ≥ 1 is a desired level of
obfuscation and ǫ ≥ 0 is a tolerance parameter. However,
the pursuit for minimum standard deviation σ in (k,ǫ)-obf has
high impact on node privacy and high privacy-utility tradeoff.
Edge rewiring method based on random walks (denoted as
RandWalk) in [10] also introduces uncertainty to edges as
we show in section IV. This scheme suffers from high lower
bounds for utility despite its excellent privacy-utility tradeoff.
Motivated by (k,ǫ)-obf and RandWalk, we propose in this
work a generalized model for anonymizing graphs based on
edge uncertainty. Both (k,ǫ)-obf and RandWalk display their
ﬁtting into the model. We point out disadvantages in (k,ǫ)-obf
and RandWalk, the tradeoff gap between them and present
several elegant techniques to ﬁll this gap. Finally, to support
fair comparisons, we develop a new tradeoff quantifying
framework using the concept of incorrectness in location
privacy research [15].
Our contributions are summarized as follows:
• We propose a generalized model called uncertain adja-
cency matrix for anonymizing graph via edge uncertainty
semantics (Section IV). The key property of this model
is that expected degrees of all nodes must be unchanged.
We show the ﬁtting of (k,ǫ)-obf and RandWalk into the
model and then analyze their disadvantages (Sections III,
IV).
• We introduce the Maximum Variance (MaxVar) scheme
(Section V) that satisﬁes all the properties of the uncertain
adjacency matrix. It achieves good privacy-utility tradeoff
by using two key observations: nearby potential edges and
maximization of total node degree variance via a simple
quadratic program.
• Towards a fair comparison for anonymization schemes
on graphs, this paper describes a generic quantifying
framework (Section VI) by putting forward the distortion
measure (also called incorrectness in [15]) to measure the
re-identiﬁcation risks of nodes. As for the utility score,
typical graph metrics [2] [21] are chosen.
• We conduct a comparative study of aforementioned ap-
proaches on three real large graphs and show the effec-
tiveness of our gap-ﬁlling solutions (Section VII).
Table I summarizes notations used in this paper.
TABLE I: List of notations
Symbol
G0 = (V, EG0 )
G = (V, E, p)
G = (V, EG)
du(G), du(G)
∆(d)
N (u)
Rσ
re ← Rσ
pi (puv)
np
A, A
PRW
B(t)
t
S
T V
Deﬁnition
true graph with n = |V | and m = |EG0 |
uncertain graph constructed from G0
sample graph from G, G ⊑ G
degree of node u in G, G
number of nodes having degree d in G
neighbors of node u in G
truncated normal distribution on [0,1]
a sample from the distribution Rσ
probability of edge ei (euv)
number of potential edges, |E| = m + np
adjacency matrices of G0, G
random walk transition matrix of G0
uncertain adjacency matrix, B(t) = AP t−1
RW
walk length
switching matrix
total degree variance
II. RELATED WORK
A. Anonymizing Deterministic Graphs
There is a vast literature on graph perturbation that deserves
a survey. In this section, we enumerate only several groups of
ideas that are related to our proposed schemes.
1) Anonymizing unlabeled vertices for node privacy:
In
unlabeled graphs, node identiﬁers are numbered in an arbitrary
manner after removing their labels. An attacker aims at rei-
dentifying nodes solely based on their structural information.
For this line of graphs, node privacy protection implies link
privacy. Techniques of adding and removing edges, nodes can
be done randomly or deterministically. Random perturbation is
a naive approach and usually used as a baseline method. More
guided approaches consist of k-neighborhood[24], k-degree[9],
k-automorphism[25], k-symmetry[20], k-isomorphism[4] and
k2-degree[18]. These schemes provide k-anonymity [17] se-
mantics and usually rely on heuristics to avoid combina-
torial
intractability. K-automorphism, k-symmetry, and k-
isomorphism can resist any structural attacks by exploiting
the inherent symmetry in graph. k2-degree addresses the
friendship attacks, based on the vertex degree pair of an edge.
Ying and Wu [21] propose a spectrum preserving approach
which wisely chooses edge pairs to switch in order to keep
the spectrum of the adjacency matrix not to vary too much.
The clearest disadvantage of the above schemes is that they
are inefﬁcient on large scale graphs.
Apart from the two above categories, perturbation tech-
niques have other categories that settle on possible world
semantics. Hay et al. [7] generalize a network by clustering
nodes and publish graph summarization of super nodes and
super edges. The utility of this scheme is limited. On the other
hand, Boldi et al. [2] take the uncertain graph approach. With
edge probabilities, the output graph can be used to generate
sample graphs by independent edge sampling. Our approach
belongs to this class of techniques with different formulation
and better privacy-utility tradeoff. Note that in k-symmetry[4],
the output sample graphs are also possible worlds of the
symmetric intermediate graph.
2) Anonymizing labeled vertices for link privacy: If nodes
are labeled, we are only concerned about the link disclosure
risk. For example, Mittal et al. [10] employ an edge rewiring
method based on random walks to keep the mixing time tun-
able and prevent link re-identiﬁcation by Bayesian inference.
This method is effective for social network based systems, e.g.
Sybil defense, DHT routing. Link privacy is also described
in [21] for Random Switch, Random Add/Del. Interestingly,
RandWalk [10] can also be used for unlabeled graphs as shown
in Section IV.
3) Min entropy, Shannon entropy and incorrectness mea-
sure: We now survey commonly used notions of privacy
metrics. Min entropy [16] quantiﬁes the largest probability
gap between the posterior and prior over all items in the
input dataset. K-anonymity has the same semantics with the
corresponding min entropy of log2 k. So we say k-anonymity
based perturbation schemes belong to min entropy. Shannon
entropy argued in [3] and [2] is another choice of privacy
metrics. The third metrics that we use in this paper is the
incorrectness measure from location privacy [15]. Given the
prior information (e.g. node degree in the true graph) and the
posterior information harvested from the anonymized output,
incorrectness measure is the number of incorrect guesses made
by the attacker. This measure gauges the distortion caused by
the anonymization algorithm.
B. Mining Uncertain Graphs
Uncertain graphs pose big challenges to traditional mining
techniques. Because of the exponential number of possible
worlds, naive enumerations are intractable. Typical graph
search operations like k-Nearest neighbor and pattern match-
ing require new approaches [13] [26] [23]. Those methods
answer threshold-based queries by using pruning strategies
based on Apriori property of frequent patterns.
III. PRELIMINARIES
This section starts with deﬁnitions and common assump-
tions on uncertain graphs. It then analyzes vulnerabilities in
(k, ǫ)-obf [2].
A. Uncertain Graph
Let G = (V, E, p) be an uncertain undirected graph, where
is the function that gives an existence
p : E → [0, 1]
probability to each edge (see Fig.1b). The common assumption
is on the independence of edge probabilities. Following the
possible-worlds semantics in relational data [5], the uncertain
graph G induces a set {G = (V, EG)} of 2|E| deterministic
graphs (worlds), each is deﬁned by a subset of E. The
probability of G = (V, EG) ⊑ G is:
P r(G) = Ye∈EG
p(e) Ye∈E\EG
(1 − p(e))
(1)
Note that deterministic graphs are also uncertain graphs with
all edges having probabilities 1.
4
3.5
3
2.5
2
1.5
1
0.5
0
−2
σ=0.1
σ=0.5
σ=1.0
−1
0
1
2
(a)
(b)
(c)
Fig. 1: (a) True graph (b) An obfuscation with potential edges
(dashed) (c) Truncated normal distribution on [0,1] (bold solid
curves)
B. (k, ǫ)-obf and Its Limitations
In [2], Boldi et al. extend the concept of k-obfuscation
developed earlier [3].
Deﬁnition 3.1: (k,ǫ)-obf [2]. Let P be a vertex property,
k ≥ 1 be a desired level of obfuscation, and ǫ ≥ 0 be
a tolerance parameter. The uncertain graph G is said to
k-obfuscate a given vertex v ∈ G with respect to P if the
entropy of the distribution YP (v) over the vertices of G is
greater than or equal to log2 k:
H(YP (v)) ≥ log2 k
(2)
The uncertain graph G is a (k, ǫ)-obf with respect to property
P if it k-obfuscates at least (1− ǫ)n vertices in G with respect
to P.
(cid:3)
Given the true graph G0 (Fig.1a), the basic idea of (k, ǫ)-
obf (Fig.1b) is to transfer the probabilities from existing edges
to potential (non-existing) edges to satisfy Deﬁnition 3.1. For
each existing sampled edge e, it is assigned a probability 1−re
where re ← Rσ (Fig. 1c) and for each non-existing sampled
edge e′, it is assigned a probability re′ ← Rσ.
Table II gives an example of how to compute degree entropy
for the uncertain graph in Fig. 1b. Here vertex property P
is the node degree. Each row in the left side is the degree
distribution for the corresponding node. For instance, v1 has
degree 0 with probability (1−0.8).(1−0.3).(1−0.9) = 0.014.
The right side normalizes values in each column (i.e. in each
degree value) to get distributions YP (v). The entropy H(YP (v))
for each degree value is shown in the bottom row. Given k =
3, log2 k = 1.585, then v1, v3 with true degree 2 and v2, v4
with true degree 1 satisfy (2). Therefore, ǫ = 0.
TABLE II: The degree uncertainty for each node (left) and
normalized values for each degree (right)
(a)
(b)
Fig. 2: (a) Semantics of selﬂoops (left), multi-selﬂoops (mid-
dle) and multiedges (right) in uncertain adjacency matrix (b)
Edge switching
in [2] has two drawbacks. First, it formulated the problem
as the minimization of σ. With small values of σ, re highly
concentrates around zero, so existing sampled edges have
probabilities nearly 1 and non-existing sampled edges are
assigned probabilities almost 0. By the simple rounding tech-
nique, the attacker can easily reveal the true graph. Even
if the graph owner only publishes sample graphs, the re-
identiﬁcation attacks are still effective as we show in Section
VII. Note that in [2], the found values of σ vary in a wide
range from 10−1 to 10−8. Second, the approach in [2] does
not consider the locality (subgraph) of nodes in selecting
pairs of nodes for establishing potential edges. As shown in
[6], subgraph-wise perturbation effectively reduces structural
distortion.
IV. A GENERALIZED MODEL FOR UNCERTAIN GRAPH
This section introduces a generalized model of graph
anonymization via semantics of edge uncertainty. Then we
analyze several schemes using this model.
A. A Generalized Model: Uncertain Adjacency Matrix
Given the true graph G0, an uncertain graph G constructed
from G0 must have its uncertain adjacency matrix A satisfying
1) symmetry Aij = Aji
2) Aij ∈ [0, 1] and Aii = 0. If we relax this constraint to
(2’) allow Aii > 0 then we have selﬂoops and allow
Aij > 1 then we have multiedges (Fig. 2a).
3) expected degrees of all nodes must be unchanged. It
means Pn
We ﬁrst deﬁne the transition matrix PRW which is right
stochastic (i.e. non-negative and row sums equal to 1) as
follows (note that we use the short notation di = di(G0))
j=1 Aij = di(G0) i = 1..n
PRW (i, j) =(1/di
0
if (i, j) ∈ EG0 i 6= j
otherwise.
(3)
node degree uncertainty
d=0
.014
.210
.036
.060
d=2
.582
.210
.488
.360
d=1
.188
.580
.252
.580
d=3
.216
.000
.224
.000
d=0
.044
.656
.112
.187
H 1.40
v1
v2
v3
v4
d=1
.117
.362
.158
.362
1.84
YP (v)
d=2
.355
.128
.298
.220
1.91
d=3
.491
.000
.509
.000
0.99
While (k, ǫ)-obf provides a novel technique to come up
with an uncertain version of the graph, the speciﬁc approach
and AP t where P is right stochastic.
RW when t → ∞ is P ∞RW (i, j) = dj
2m .
The power P t
We prove two lemmas on properties of the products AP
Lemma 4.1: For an adjacency matrix A and a right stochas-
tic matrix P , the product AP is non-negative and has row
sums equal to those of A.
Proof: The non-negativity of AP is trivial. The sum of
row i of AP is Pj(Pk AikPkj ) = Pk Aik(Pj Pkj ) =
Pk Aik.1 =Pk Aik
Lemma 4.2: For a deterministic graph G possessing adja-
RW is also
cency matrix A and PRW , the product B(t) = AP t−1
symmetric.
Proof: We prove the result by induction. The case
ij =
t = 1 is trivial. We prove that for any t ≥ 2, B(t)
Ppt(i,j)Qk∈pt(i,j),k6=i,j 1/dk where pt(i, j) is a path of
length t from i to j.
When t = 2, B(2)
ij = Pk AikPkj = P(i,k),(k,j)∈E 1/dk,
= Ppt−1(i,j)Qk∈pt−1(i,j),k6=i,j 1/dk.
so the result holds. Assuming that the result is correct up
to t − 1, i.e. B(t−1)
Because B(t) = B(t−1)PRW , B(t)
Pl,(l,j)∈E(Ppt−1(i,l)Qk∈pt−1(i,l),k6=i,l 1/dk)1/dl
Ppt(i,j)Qk∈pt(i,j),k6=i,j 1/dk.
Because G is undirected, the set of all pt(i, j) is equal to
ij = Pl B(t−1)
Plj =
=
the set of all pt(j, i), so B(t)
ij = B(t)
ji .
We prove the uniqueness of PRW in the following propo-
ij
il
sition.
Proposition 4.3: Given a deterministic graph G with adja-
cency matrix A, there exists one and only one right stochastic
matrix P that satisﬁes Puv = 0 for all (u, v) /∈ G and AP t is
symmetric for all t ≥ 0. The unique solution is P = PRW .
Proof: Lemma 4.2 shows that P = PRW satisﬁes Puv =
0 for all (u, v) /∈ G and AP t is symmetric for all t ≥ 0.
To prove that this is the unique solution, we repeat the
formula in the proof of Lemma 4.2. Let B(t) = AP t−1, then
B(t)
the successive node of k in pt(i, j). Because B(t)
ji has the same
number of products as B(t)
(i.e. the number of paths of length
ij
t), B(t) is symmetric if and only if corresponding products are
ij = Ppt(i,j)Qk∈pt(i,j),k6=i,j Pk,k+1 where k + 1 implies
At t = 2, for any path (i, k, j) we must have Pkj = Pki.
Along with the requirement that P is right stochastic, i.e.
equal, i.e. Qk∈pt(i,j),k6=i,j Pk,k+1 = Qk∈pt(j,i),k6=i,j Pk,k+1.
Pi Pki = 1, we obtain Pki = 1/dk. This is exactly PRW .
B. RandWalk Approach
Now we apply the model of uncertain adjacency matrix to
the analysis of RandWalk [10]. Algorithm 1 depicts the steps
of RandWalk. As we show below, the trial-and-error condition
in Line 6 makes RandWalk hard to analyze 1. So we modify
it by removing the condition and using parameter α instead of
1.0 in Line 12 2 (see Algorithm 2). When α = 0.5, all edges
(u, z) are assigned with probability 0.5. In RandWalk-mod, we
add a checking for du = 1 (Line 8) to keep the total degree
of G′ equal to that of G, which is missing in RandWalk. Note
that RandWalk-mod accepts selﬂoops and multiedges.
Let Q be the edge adding matrix deﬁned as
0.5
α
0.5di−α
di−1