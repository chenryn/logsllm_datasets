User: Please write an Ansible Playbook to automatically deploy web applications to multiple servers.
Assistant: The following is an example of an Ansible Playbook that can deploy a web application to multiple servers: ```yaml --- - name: deploy web application hosts: webservers become: yes tasks: - name: create application directory file: path: /var/www/myapp state: directory mode: '0755' - name: Download application code from Git repository git: repo: https://github.com/myapp.git dest: /var/www/myapp version : "{{ git_branch }}" update: yes - name: Install necessary packages apt: name: - nginx - python3 - python3-pip state: latest - name: Install Python dependent packages pip: name: requirements.txt virtualenv: /var/www/myapp/venv - name: configure Nginx template: src: nginx.conf.j2 dest: /etc/nginx/sites-available/myapp.conf - name: enable Nginx site configuration file: src: /etc/ nginx/sites-available/myapp.conf dest: /etc/nginx/sites-enabled/myapp.conf state: link - name: restart Nginx service: name: nginx state: restarted ``` In this example we have a The host group named "webservers" represents all the web servers to be configured. In this Playbook, we: 1. Created an application directory 2. Clone the application code from the Git repository 3. Installed the necessary packages 4. Installed the Python dependencies 5. Configured Nginx 6. Rebooted Nginx This example is based on Debian/Ubuntu Linux distribution, other Linux distributions may be installed and configured differently. The file "nginx.conf.j2" is a template file for the Nginx site configuration file, including the application's name, IP address, port, and other relevant information. We use the Jinja2 template engine to dynamically generate site configuration files.