-   事件概览：时间轴展示24小时内上传的日志情况。
-   TOP值概览：选择字段将显示该字段中出现频率较高的前20个值。
-   告警：告警及触发状况。
-   已存搜索：已存搜索将被显示在仪表板上
用户可单独定制自己仪表盘，每个仪表盘是由选定的可视化组件组合而成
**(3)统计视图**
每次搜索，日志分析软件都会为用户生成简单直观的时间序列趋势图，这是搜索时间范围内所有索引日志事件的直方图，你可以利用直方图比较随着时间推移的日志属性。如果用户需要更多统计及可视化功能，请使用统计视图，用户可以得到更多图表和统计结果。并且可将图表保存到自定义仪表盘上随时查看。
请注意，只有在搜索后才能对搜索结果进行统计及可视化展现。
**事件计数统计**
事件计数可以绘制几个事件随着时间推进的计数和数值统计进行比对。
**时间分段统计**
选择"时间分段统计"，
选取字段，依次设定时间分段。需要提醒的是时间分段范围必须包含在用户搜索的时间范围中，并且各个时间分段不能有重叠交叉。系统将会按时间统计该事件的计数，同时进行环比统计.
**数值分段统计**
选择"数值分段统计"是统计数值字段在各数值段的分布情况。选择字段后自行填写数值分段范围。用户可以点击"添加数值分段"产生新的分组。最后点击"生成图形"会生成柱状图。
**时间直方图**
选择时间直方图，只需要设定"时间间隔"，再选择合适的时间单位，完成后点击"生成图形"，即可看到相应的直方图.
**数值直方图**
跟时间直方图类似，只需要选定字段，设定"数值间隔"，点击生成图表即可看到关于该数值字段的。需要提醒的是数值间隔设定值过小会造成生成的图表不可用。因为统计数值在数量上差距巨大
**字段值分类统计**
点击选择"字段值分类统计"用户将会看到对于某一字段的具体分类统计。选择字段后用户可以选择不同的展现方式。页面会显示搜索结果中该字段的所有值的比例，并生成相应的统计表格，显示出现次数最多的前几个字段值名称及统计次数。
**字段数值统计**
字段数值统计是对字段的数值属性进行统计分析的功能，统计方式目前支持"总计/平均值/最大值/最小值/"四种选项。
**累计百分比统计**
"累计百分比统计"是对数值字段的数值大小分布进行的统计功能，系统默认的百分比分段设置为1%，5%，25%，50%，75%，95%，99%，用户也可以调整或增加新的分段
反向查询
用户也可以在累积百分比反向查询中选择某个数值型字段后，输入查询数值，点击查询，即可获得查询结果。
**多级统计**
多级统计可以满足用户针对某一字段的多重统计需求。多级统计最多支持三级。每次统计结果出现后都可以选择进行下一步统计或展现统计图。展现统计图是对当前生成数据表的可视化展现.
**地理统计**
地理分布统计功能为用户展示日志中的ip地址分布情况。日志分析软件默认根据颜色深浅标识ip地址在世界地图的分布情况。
## 告警监控
**告警类型**
目前日志分析软件提供事件数告警、字段统计告警、连续统计告警和基线对比告警四种告警模式。
**(1)事件数告警**
用户可以创建基于搜索结果的告警触发条件，在一个给定的时间范围内触发告警的阈值数。例如，用户可以设置告警条件为5分钟内搜索结果计数超过10次（基于时间戳）：
**(2)字段统计告警**
字段统计告警为用户提供针对字段内容的告警设置，在触发条件中用户需要填写字段名，统计方式可以在下拉框中选择，cardinality（独立计数）、sum
（求和）、avg（平均值）、max（最大值）、min（最小值）。
例如，告警触发条件为：clientip在5分钟之内某个ip的计数值超过10，则设定如下：
**(3)连续统计告警**
连续告警为用户提供连续触发告警功能，即当某个告警条件在某个时间内连续触发次数达到阀值，才触发告警。
例如，告警触发条件为：apache.status在1小时之内超过404的次数超过50，则触发告警，则设定如下：
**(4)基线对比告警**
基线告警是将阈值设定为一个统计的基线值（随时间变动），用户需要选择基线生成的时间范围，同时，基线对比告警给用户提供了更灵活的触发范围设定方式------用户可以在下拉框中选择大于、小于、在区间内、在区间外。
例如，resp_len如果与上周的统计平均值相比，小于基线值50%或者超过基线值150%即触发告警，设定的告警条件如下：
**(5)通知方式**
用户可以配置收到告警通知的邮箱地址，需要提醒的是用户只能在该账户下已注册的电子信箱中进行选择。
![https://www.rizhiyi.com/img/rzy/doc/howtouse/alert-9.jpg](media/image7.jpeg){width="8.135416666666666in"
height="0.53125in"}
**（6）检测频率**
设置运行搜索的周期，我们将把搜索结果和用户设置的告警条件进行匹配。例如：用户设置检测频率为5分钟，后台将每5分钟执行一次，如果执行结果符合告警条件设置的阈值，我们将推送一次告警邮件。
## 日志解析
**（1）自动解析日志格式**
日志分析软件自动解析Apache，Nginx，JSON等类型的日志，用户可以通过分类检索、字段过滤对日志进行统计分析，用户会发现我们添加了一个名为\"logtype\"的字段来标识日志类型。对于不能被自动识别的日志，我们会对其全文索引，但是这将无法让用户充分使用日志分析软件的字段搜索功能。在本节中我们将介绍日志分析软件支持的日志类型，以及日志无法自动解析时如何处理。
可识别的日志格式
这里主要向用户介绍日志分析软件支持的日志格式，对于常见日志通常有详尽的官方文档说明供用户进一步参考。
另外，我们会持续添加更多的可识别日志格式，如果用户的日志暂时不能被正确识别并解析，希望用户通知我们，并提供一些日志样本。
我们目前支持以下日志格式：
[**Apache**](https://www.rizhiyi.com/docs/howtouse/resolve.html#Apache)
> 对于Apache或者Nginx日志，用户可以按需要配置服务器的日志格式，。
>
> 我们支持的apache日志格式如下：
%h %l %u %t \\\"%r\\\" %\>s %b
%h %l %u %t \\\"%r\\\" %\>s %b \\\"%{Referer}i\\\"
\\\"%{User-agent}i\\\"
%h %l %u %t \\\"%r\\\" %\>s %b \\\"%{Referer}i\\\"
\\\"%{User-agent}i\\\" \\\"%{X-Forwarded-For}i\\\"
其中各项配置的含义如下：
%b or %B - Size
%h RemoteIPOrHost
%l - RemoteLogname
%r - Request
%\>s - HttpStatusCode
%t - eventTime
%{Referer}i - Referer
%{User-agent}i - UserAgent
%{X-Forwarded-For}i -- XforwardedFor
另外，我们还可以自动识别Apache的error日志，通常情况下其日志格式如下:
\[Fri Jul 05 21:28:24 2013\] \[error\] child process 1245 still did not
exit, sending a SIGKILL
我们会为用户解析出如下字段:
timestamp, loglevel, message 等
[**Nginx**](https://www.rizhiyi.com/docs/howtouse/resolve.html#Nginx)
Nginx日志的日志格式与Apache基本相同我们支持的配置如下:
log_format main \'\$remote_addr - \$remote_user \[\$time_local\]
\"\$request\" \'
\'\$status \$body_bytes_sent\';
log_format combind \'\$remote_addr - \$remote_user \[\$time_local\]
\"\$request\" \'
\'\$status \$body_bytes_sent \"\$http_referer\" \'
\'\"\$http_user_agent\"\';
log_format default \'\$remote_addr - \$remote_user \[\$time_local\]
\"\$request\" \'
\'\$status \$body_bytes_sent \"\$http_referer\" \'
\'\"\$http_user_agent\" \"\$http_x\_forwarded_for\"\';
access_log /var/log/nginx/access.log main;
[**Log4j**](https://www.rizhiyi.com/docs/howtouse/resolve.html#Log4j)
> Log4j是java程序常用的日志库，具体的配置含义请参考Log4J配置文档，目前我们支持的日志格式的配置有：
>
> %d{ISO8601} %p %t %c.%M - %m%n
>
> 我们会解析出timestamp, log level, thread, class, method,
> message等字段。对于Java的Stack traceback等跨多行的日志，目前暂不支持。
[**JSON**](https://www.rizhiyi.com/docs/howtouse/resolve.html#JSON)
> 日志分析软件也支持JSON这种格式化数据，这里要求用户的日志整体是JSON格式，如果用户日志中仅一部分，我们暂不支持。
>
> 请首先使用JSON格式验证工具来检测用户的日志是否有效。
>
> 使用JSON日志格式，需要用户注意以下事项：
>
> 1 时间戳
>
> 我们需要准确地识别日志的时间戳，因此在产生日志时，需要配置日志使其满足如下条件：
-   必须在JSON的最顶级包含"timestamp"字段
-   时间戳格式只支持ISO8601的格式（例如 2014-09-11t01:13:24.012z）
> 例如：
>
> {\"timestamp\":\"2014-09-11t01:13:24.012z\",\"family\":{\"father\":\"LiLei\",\"mother\":\"HanMeimei\"}}
>
> 2 格式
>
> JSON的字段类型不能改变。例如，在一条日志中的一个字段为整数类型，在下一条日志中不能被赋予新的类型。下面给出的例子中对象为"company"：
>
> {\"company\": {\"boss\": \"Mr.Chen\", \"employer\": \"Mr.Li\" } }
>
> 重新输入一条"company"的日志，则这个字段不会被索引：
>
> { \"company\": 100 }
>
> JSON 字段名称
>
> 通常情况下，我们按照用户发送的JSON字段来建立索引，但是当字段名种包含空格或圆点(.)时，这些特殊字符将被下划线(\_)
> 替换，这是因为我们的搜索语法中不支持字段名称中包含这些符号。
>
> 例如：
>
> { \"a\": 1, \"b c\": 2, \"d.e\": 3, \"d\": { \"e\" : 4 } }
>
> 将被重写为：
>
> { \"a\": 1,\"b_c\": 2,\"d_e\": 3,\"d\": {\"e\" : 4 } }
>
> 这样可以明确区分json.d.e和json.d_e。
[**Linux**](https://www.rizhiyi.com/docs/howtouse/resolve.html#Linux)
> 如果用户需要分析一些Linux系统日志，需要先配置用户的上传模板。我们会将其包装成标准的syslog日志,并解析出如下字段：
>
> timestamp，appname, hostname，priority, facility, severity, message
[**Mysql**](https://www.rizhiyi.com/docs/howtouse/resolve.html#Mysql)
mysql日志记录了mysql本身的运行情况，例如
> 2014-05-14 23:24:47 15752 \[Note\] Server hostname (bind-address):
> \'\*\'; port: 3306
我们会为用户解析出如下字段
> timestamp，loglevel，pid，message
**（2）配置日志解析规则**
日志分析软件内置了常用的日志解析规则，能够识别、解析常见的日志格式。对于日志分析软件预置规则不支持的日志格式，用户可以在产品页面的"设置"标签下的"日志格式"标签里配置日志格式解析规则，抽取自定义字段。
日志的解析
日志解析的主要作用是抽取用户认为重要的字段，这就需要用户熟悉解析规则的配置。例如这样一条日志：
192.168.1.103 - - \[01/Aug/2014:12:07:39 +0800\] \"GET / HTTP/1.1\\\"
200 3228 \"-\" \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
要抽取出如下字段：
1 \"ua\" : \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
1.1 \"os\" : \"Windows XP\"
1.2 \"os_v\" : \"Windows XP\"
1.3 \"browser\" : \"IE\"
1.4 \"browser_v\" : \"IE 8.0\"
1.5 \"device\" : \"Other\"
2 \"clientip\" : \"192.168.1.103\"
3 \"status\" : 200
4 \"resp_len\" : 3228
5 \"method\" : \"GET\"
6 \"version\": \"1.1\"
需要用户在数据接入系统前即配置好解析规则，方便用户后续根据日志字段来做相关的处理。
-   配置规则
日志的格式是多样化的，为了解析这些多样的日志，通常需要多种方法来处理。日志分析软件提供自定义日志格式配置功能，用户每次配置一项功能后解析成功即可点击"继续"，再配置下一项功能，当用户确定所有配置成功后点击"提交配置"。
**正则解析**
**简介**
正则是处理文本解析的有力工具。需要用户了解一些基本的正则表达式知识：
\\, ?, +, \*, \[\], (?:) （?:\）
例如有这样一条日志：
2014-05-14 23:24:47 15752 \[Note\] InnoDB: 128 rollback segment(s) are
active
我们希望提取出以下字段：timestamp，pid，loglevel和message，可以配置如下的表达式：
(?\\\S+ \\S+) (?\\\S+) \\\[(?\\\S+\\\]
(?\.\*)