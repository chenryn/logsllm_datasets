User: Given an IP address and a subnet mask, write Python code that counts the number of available IP addresses for that subnet.
Assistant: Here is a Python function to count the number of available IP addresses in a subnet: ```python def count_available_ips(ip, subnet_mask): #Convert the IP address and subnet mask into a 32-bit binary string ip_binary = '' .join([bin(int(x))[2:].zfill(8) for x in ip.split('.')]) subnet_mask_binary = ''.join([bin(int(x))[2 :].zfill(8) for x in subnet_mask.split('.')]) # Calculate the length of the subnet prefix prefix_length = len([bit for bit in subnet_mask_binary if bit == '1']) # Calculate the subnet prefix available_ips = 2**(32 - prefix_length) - 2 return available_ips ``` The input of this function is the IP address and subnet mask (both strings), and the output is the number of available IP addresses (integer) . The usage is as follows: ```python >>> count_available_ips('192.168.0.1', '255.255.255.0') 254 ```