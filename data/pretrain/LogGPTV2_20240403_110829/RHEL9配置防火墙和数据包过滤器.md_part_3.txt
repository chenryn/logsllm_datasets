    $ firewall-cmd --new-service-from-file=service-name.xml --permanent
    ```
    您可以使用 `--name=service-name`{.literal} 选项来更改服务名称。
3.  更改服务设置后，服务的更新副本放在
    `/etc/firewalld/services/`{.literal} 中。
    作为 `root`{.literal} 用户，您可以输入以下命令来手动复制服务：
    ``` screen
    # cp /usr/lib/firewalld/services/service-name.xml /etc/firewalld/services/service-name.xml
    ```
:::
`firewalld`{.literal} 首先从 `/usr/lib/firewalld/services`{.literal}
加载文件。如果文件放在 `/etc/firewalld/services`{.literal}
中，并且有效，则这些文件将覆盖 `/usr/lib/firewalld/services`{.literal}
中的匹配文件。一旦删除了 `/etc/firewalld/services`{.literal}
中的匹配文件，或者要求 `firewalld`{.literal} 加载服务的默认值，就会使用
`/usr/lib/firewalld/services`{.literal}
中的覆盖文件。这只适用于永久性环境。要在运行时环境中获取这些回退，则需要重新载入。
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#proc_opening-ports-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 打开端口 {.title}
:::
要允许流量通过防火墙到达某个端口，您可以在 GUI 中打开端口。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  启动 [**[firewall-config]{.application}**]{.strong}
    工具并选择要更改的网络区。
2.  选择 `Ports`{.literal} 选项卡，然后点击右侧的 [Add]{.guibutton}
    按钮。此时会打开 `端口和协议`{.literal} 窗口。
3.  输入要允许的端口号或者端口范围。
4.  从列表中选择 `tcp`{.literal} 或 `udp`{.literal}。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#proc_controlling-traffic-with-protocols-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 控制协议的流量 {.title}
:::
如果想使用某种协议允许流量通过防火墙，您可以使用 GUI。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  启动 [**[firewall-config]{.application}**]{.strong}
    工具并选择要更改的网络区。
2.  选择 `Protocols`{.literal} 选项卡，然后点击右侧的 `Add`{.literal}
    按钮。此时会打开 `协议`{.literal} 窗口。
3.  从列表中选择协议，或者选择 `Other Protocol`{.literal}
    复选框，并在字段中输入协议。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#proc_opening-source-ports-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 打开源端口 {.title}
:::
要允许来自某个端口的流量通过防火墙，您可以使用 GUI。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  启动 firewall-config 工具并选择要更改的网络区。
2.  选择 `Source Port`{.literal} 选项卡，然后点击右侧的 `Add`{.literal}
    按钮。`源端口`{.literal} 窗口将打开。
3.  输入要允许的端口号或者端口范围。从列表中选择 `tcp`{.literal} 或
    `udp`{.literal}。
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_firewall-packet-filters.html#controlling-ports-using-cli_using-and-configuring-firewalld}使用 CLI 控制端口 {.title}
:::
端口是可让操作系统接收和区分网络流量并将其转发到系统服务的逻辑设备。它们通常由侦听端口的守护进程来表示，它会等待到达这个端口的任何流量。
通常，系统服务侦听为它们保留的标准端口。例如，`httpd`{.literal}
守护进程监听 80
端口。但默认情况下，系统管理员会将守护进程配置为在不同端口上侦听以便增强安全性或出于其他原因。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#opening-a-port_controlling-ports-using-cli}打开端口 {.title}
:::
通过打开端口，系统可从外部访问，这代表了安全风险。通常，让端口保持关闭，且只在某些服务需要时才打开。
::: title
**流程**
:::
要获得当前区的打开端口列表：
::: orderedlist
1.  列出所有允许的端口：
    ``` literallayout
    # firewall-cmd --list-ports
    ```
2.  在允许的端口中添加一个端口，以便为入站流量打开这个端口：
    ``` literallayout
    # firewall-cmd --add-port=port-number/port-type
    ```
    端口类型为 `tcp`{.literal}、`udp`{.literal}、`sctp`{.literal} 或
    `dccp`{.literal}。这个类型必须与网络通信的类型匹配。
3.  使新设置具有持久性：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
    端口类型为 `tcp`{.literal}、`udp`{.literal}、`sctp`{.literal} 或
    `dccp`{.literal}。这个类型必须与网络通信的类型匹配。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#closing-a-port_controlling-ports-using-cli}关闭端口 {.title}
:::
当打开的端口不再需要时，在 `firewalld`{.literal}
中关闭此端口。强烈建议您尽快关闭所有不必要的端口，因为端口处于打开状态会存在安全隐患。
::: title
**流程**
:::
要关闭某个端口，请将其从允许的端口列表中删除：
::: orderedlist
1.  列出所有允许的端口：
    ``` literallayout
    # firewall-cmd --list-ports
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    这个命令只为您提供已打开作为端口的端口列表。您将无法看到作为服务打开的任何打开端口。因此，您应该考虑使用
    `--list-all`{.literal} 选项，而不是 `--list-ports`{.literal}。
    :::
2.  从允许的端口中删除端口，以便对传入的流量关闭：
    ``` literallayout
    # firewall-cmd --remove-port=port-number/port-type
    ```
3.  使新设置具有持久性：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_firewall-packet-filters.html#configuring-ports-using-system-roles_using-and-configuring-firewalld}使用系统角色配置端口 {.title}
:::
您可以使用 Red Hat Enterprise Linux(RHEL) `firewalld`{.literal}
系统角色为传入的流量打开或关闭本地防火墙中的端口，并在重新引导后保持新配置。这个示例描述了如何配置
default 区以允许 `HTTPS`{.literal} 服务的传入流量。
在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   访问一个或多个 [*受管节点*]{.emphasis} （这是您要使用
    `firewalld`{.literal} 系统角色配置的系统）。
-   对 [*控制节点*]{.emphasis} 的访问和权限，这是 Red Hat Ansible Core
    配置其他系统的系统。
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**流程**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/adding-and-removing-ports.yml`{.literal}
    playbook：
    ``` literallayout
    ---
    - name: Allow incoming HTTPS traffic to the local host
      hosts: node.example.com
      become: true
      tasks:
        - include_role:
            name: linux-system-roles.firewall
          vars:
            firewall:
              - port: 443/tcp
                service: http
                state: enabled
                runtime: true
                permanent: true
    ```
    `permanent: true`{.literal} 选项可使新设置在重新引导后仍然有效。
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/adding-and-removing-ports.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/adding-and-removing-ports.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: orderedlist
**验证**
1.  连接到受管节点：
    ``` literallayout
    $ ssh PI:EMAIL
    ```
2.  验证与 `HTTPS`{.literal} 服务关联的 `443/tcp`{.literal}
    端口是否打开：
    ``` literallayout
    $ sudo firewall-cmd --list-ports
    443/tcp
    ```
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_firewall-packet-filters.html#working-with-firewalld-zones_using-and-configuring-firewalld}使用 firewalld 区 {.title}
:::
zones
代表一种更透明管理传入流量的概念。这些区域连接到联网接口或者分配一系列源地址。您可以独立为每个区管理防火墙规则，这样就可以定义复杂的防火墙设置并将其应用到流量。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#listing-zones_working-with-firewalld-zones}列出区域 {.title}
:::
这个步骤描述了如何使用命令行列出区。
::: orderedlist
**流程**
1.  查看系统中有哪些可用区：
    ``` literallayout
    # firewall-cmd --get-zones
    ```
    `firewall-cmd --get-zones`{.literal}
    命令显示系统上所有可用的区，但不显示特定区的任何详情。
2.  查看所有区的详细信息：
    ``` literallayout
    # firewall-cmd --list-all-zones
    ```
3.  查看特定区的详细信息：