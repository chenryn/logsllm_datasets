# A Merged Inline Measurement Method for Capacity and Available Bandwidth

**Authors:**
- Cao Le Thanh Man
- Go Hasegawa
- Masayuki Murata

**Affiliation:**
Graduate School of Information Science and Technology, Osaka University
{mlt-cao, hasegawa, murata}@ist.osaka-u.ac.jp

## Abstract
We have introduced a new TCP version, ImTCP (Inline Measurement TCP), in [1]. The ImTCP sender adjusts the transmission intervals of data packets and uses the arrival intervals of ACK packets to estimate available bandwidth. This inline measurement method is preferred because it provides accurate results without injecting additional probe traffic into the network. In this research, we integrate a new capacity measurement function with the existing available bandwidth measurement method, enabling simultaneous measurement of both capacity and available bandwidth in ImTCP. The capacity measurement algorithm is based on the packet pair technique but also incorporates estimated available bandwidth values for data filtering or calculation, resulting in more accurate measurements compared to traditional packet-pair-based methods.

## Extended Abstract
The capacity of an end-to-end network path is the maximum possible throughput that the network can provide, typically when there is no other traffic along the path. The available bandwidth, on the other hand, is the unused bandwidth of the network path, which is the maximum throughput that newly injected traffic can achieve without affecting existing traffic. Both capacity and available bandwidth are crucial for adaptive network control. Additionally, they are often required simultaneously. While network transport protocols optimize link utilization based on capacity, congestion avoidance relies on available bandwidth information. For routing or server selection in service overlay networks, both capacity and available bandwidth information offer better decision-making than either value alone. For instance, when available bandwidth fluctuates frequently and the transmission time is long, capacity information may be more suitable. Conversely, if available bandwidth remains steady during transmission, it should be used for selection. Furthermore, Internet Service Providers' billing policies should consider both capacity and available bandwidth of the access links provided to customers.

Several passive and active measurement approaches exist for capacity and available bandwidth. Active methods are preferred for their accuracy and speed, but they typically involve sending extra traffic onto the network, which is a common disadvantage. We propose an active measurement method that does not add probe traffic to the network. Our method integrates the new measurement mechanism into an active TCP connection (inline measurement). Passive inline measurement was first introduced in TCP Westwood [2], where the sender checks ACK packet arrival intervals to infer available bandwidth. We introduce ImTCP, a Reno-based TCP that deploys active inline measurement. The ImTCP sender not only observes ACK packet arrival intervals but also actively adjusts the transmission interval of data packets, similar to how active measurement tools use probe packets. When corresponding ACK packets return, the sender uses their arrival intervals to calculate measurement values. The measurement algorithm in ImTCP combines available bandwidth and capacity measurement algorithms. The available bandwidth measurement algorithm utilizes Self Loading Periodic Streams (SLoPS) proposed in [3], adapted for inline measurement. The detailed description of the available bandwidth algorithm is provided in [4]. The measured available bandwidth values are then used to enhance the packet pair technique, providing better capacity estimation than traditional methods.

To implement ImTCP, we insert a measurement program into the sender program of TCP Reno. The measurement program is located at the bottom of the TCP layer. When a new data packet is generated at the TCP layer and is ready for transmission, it is stored in an intermediate FIFO buffer. The measurement program determines the time to send the packets in the buffer. It waits until the number of packets in the intermediate buffer is sufficient to form a packet stream for available bandwidth measurement and a packet pair for capacity measurement, within each RTT. After sending the required measurement packets, the program immediately passes all data packets to the IP layer while waiting for the corresponding ACK packets. The measurement program does not require any special changes in the TCP receiver program, except that an ACK packet must be sent back for each received packet. Therefore, delayed ACKs must be disabled at the TCP receiver; otherwise, ImTCP will not perform measurement correctly.

The principle of the packet-pair-based measurement technique for capacity is that if the packet pairs are transmitted back-to-back at the bottleneck link and the time interval until they reach the receiver remains unchanged, the capacity of the bottleneck link \( C \) (which is also the capacity of the network path) is calculated as:
\[ C = \frac{P}{\text{Gap}} \]
where \( P \) is the packet size and Gap is the arrival time dispersion of the two packets at the receiver. The packet pairs are referred to as the C-indicator. Their time dispersion indicates the exact capacity value. If the packet pair is cut by packets from other traffic, its dispersion cannot be used to calculate capacity via the above equation.

Current packet-pair-based measurement techniques have various mechanisms for determining C-indicators from packet pair measurement results. Some tools assume a high frequency of appearance of the C-indicator and search for it using a frequency histogram (Pathrate [5]) or a weighting function (Nettimer [6]). CapProbe [7] repeatedly sends packet pairs until it discovers a C-indicator based on the transmission delay of the packets. However, when the available bandwidth is small, the C-indicator does not appear frequently, leading to potential inaccuracies in current tools.

Let \( \delta \) be the time space of the packet pair when it arrives at the bottleneck link. Assuming that the links before the bottleneck link do not significantly affect the time space, \( \delta \) is the approximate time interval in which the sender sends the packets. During the time \( \delta \), the average amount of cross traffic arriving at the bottleneck link, denoted as \( L \), is:
\[ L = \delta \cdot (C - A) \]
where \( A \) is the available bandwidth at the time the packet pair is sent. When \( A \) is small, \( L \) is large, meaning the probability of a packet pair passing the bottleneck link without being cut by other traffic is low. Thus, the available bandwidth of the path is a critical factor in measuring capacity.

Based on this observation, we develop a new capacity measurement algorithm that leverages the available bandwidth awareness of ImTCP. From the above equation, we can estimate the dispersion of the packet pair when leaving the bottleneck link as:
\[ \text{Gap} = \frac{P + \delta \cdot (C - A)}{C} \]
Thus, the capacity can be calculated as:
\[ C = \frac{P - \delta \cdot A}{\text{Gap} - \delta} \]

There is a problem with current capacity measurement tools when every packet pair that passes the bottleneck link is cut by other packets due to heavy load or constant aggressive cross traffic. In such cases, CapProbe will take a very long time to find C-indicators, and Pathrate and Nettimer will deliver incorrect estimations. Our new equation offers several advantages:
- It allows calculating capacity even without C-indicators, assuming the available bandwidth value is known.
- The measurement does not require \( \delta \) to be the smallest value the sender can create. Any two TCP data packets sent in an appropriately small interval can be used, allowing for more data collection.
- The statistical confidence of the measurement results can be discussed based on the variance of the calculated data.

We present a simulation of packet pair measurement to illustrate our new method. We simulate packet pair measurements over 50 seconds on a network path with an available bandwidth of 15 Mbps. The background traffic consists of an UDP packet flow with a packet size of 500 KB. The correct capacity of the path is 80 Mbps. Figure 1 shows the measurement results calculated using the traditional method (Equation 1) and our proposed method (Equation 3). The results indicate that our proposed method provides more accurate capacity estimates, as the calculated data concentrate around the correct value of 80 Mbps.

## References
1. Cao Man, Go Hasegawa, and Masayuki Murata, "Available bandwidth measurement via TCP connection," in Proceedings of the 2nd Workshop on End-to-End Monitoring Techniques and Services E2EMON, Oct. 2004.
2. M. Gerla, B. Ng, M. Sanadidi, M. Valla, R. Wang, "TCP Westwood with adaptive bandwidth estimation to improve efficiency/friendliness tradeoffs," To appear in Computer Communication Journal.
3. M. Jain and C. Dovrolis, "End-to-end available bandwidth: Measurement methodology, dynamics, and relation with TCP throughput," in Proceedings of ACM SIGCOMM 2002, Aug. 2002.
4. Cao Man, Go Hasegawa, and Masayuki Murata, "A new available bandwidth measurement technique for service overlay networks," in Proceedings of 6th IFIP/IEEE International Conference on Management of Multimedia Networks and Services Conference, MMNS2003, pp. 436–448, Sept. 2003.
5. C. Dovrolis and D. Moore, "What do packet dispersion techniques measure?," in Proceedings of IEEE INFOCOM 2001, pp. 22–26, Apr. 2001.
6. K. Lai and M. Baker, "Nettimer: A tool for measuring bottleneck link bandwidth," in Proceedings of the USENIX Symposium on Internet Technologies and Systems, Mar. 2001.
7. R. Kapoor, L. Chen, L. Lao, M. Gerla, and M. Sanadidi, "Capprobe: a simple and accurate capacity estimation technique," in Proceedings of the 2004 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, 2004.