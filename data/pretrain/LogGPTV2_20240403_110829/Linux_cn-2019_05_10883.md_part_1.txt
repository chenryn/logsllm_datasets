---
author: Seth Kenlon
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6974
date: '2019-05-21 19:16:23'
editorchoice: false
excerpt: 在本系列的第五部分，学习如何增加一个坏蛋与你的好人战斗。
fromurl: https://opensource.com/article/18/5/pygame-enemy
id: 10883
islctt: true
largepic: /data/attachment/album/201905/21/191627huku0uo0ngny39kd.png
permalink: /article-10883-1.html
pic: /data/attachment/album/201905/21/191627huku0uo0ngny39kd.png.thumb.jpg
related:
- displayorder: 0
  raid: 10874
- displayorder: 0
  raid: 10902
reviewer: wxy
selector: lujun9972
summary: 在本系列的第五部分，学习如何增加一个坏蛋与你的好人战斗。
tags:
- Pygame
thumb: false
title: 如何向你的 Python 游戏中添加一个敌人
titlepic: true
translator: cycoe
updated: '2019-05-21 19:16:23'
---
> 
> 在本系列的第五部分，学习如何增加一个坏蛋与你的好人战斗。
> 
> 
> 
![](/data/attachment/album/201905/21/191627huku0uo0ngny39kd.png)
在本系列的前几篇文章中（参见 [第一部分](/article-9071-1.html)、[第二部分](/article-10850-1.html)、[第三部分](/article-10858-1.html) 以及 [第四部分](/article-10874-1.html))，你已经学习了如何使用 Pygame 和 Python 在一个空白的视频游戏世界中生成一个可玩的角色。但没有恶棍，英雄又将如何？
如果你没有敌人，那将会是一个非常无聊的游戏。所以在此篇文章中，你将为你的游戏添加一个敌人并构建一个用于创建关卡的框架。
在对玩家妖精实现全部功能之前，就来实现一个敌人似乎就很奇怪。但你已经学到了很多东西，创造恶棍与与创造玩家妖精非常相似。所以放轻松，使用你已经掌握的知识，看看能挑起怎样一些麻烦。
针对本次训练，你能够从 [Open Game Art](https://opengameart.org) 下载一些预创建的素材。此处是我使用的一些素材：
* 印加花砖（LCTT 译注：游戏中使用的花砖贴图）
* 一些侵略者
* 妖精、角色、物体以及特效
### 创造敌方妖精
是的，不管你意识到与否，你其实已经知道如何去实现敌人。这个过程与创造一个玩家妖精非常相似：
1. 创建一个类用于敌人生成
2. 创建 `update` 方法使得敌人能够检测碰撞
3. 创建 `move` 方法使得敌人能够四处游荡
从类入手。从概念上看，它与你的 `Player` 类大体相同。你设置一张或者一组图片，然后设置妖精的初始位置。
在继续下一步之前，确保你有一张你的敌人的图像，即使只是一张临时图像。将图像放在你的游戏项目的 `images` 目录（你放置你的玩家图像的相同目录）。
如果所有的活物都拥有动画，那么游戏看起来会好得多。为敌方妖精设置动画与为玩家妖精设置动画具有相同的方式。但现在，为了保持简单，我们使用一个没有动画的妖精。
在你代码 `objects` 节的顶部，使用以下代码创建一个叫做 `Enemy` 的类：
```
class Enemy(pygame.sprite.Sprite):
    '''
    生成一个敌人
    '''
    def __init__(self,x,y,img):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join('images',img))
        self.image.convert_alpha()
        self.image.set_colorkey(ALPHA)
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
```
如果你想让你的敌人动起来，使用让你的玩家拥有动画的 [相同方式](/article-10874-1.html)。
### 生成一个敌人
你能够通过告诉类，妖精应使用哪张图像，应出现在世界上的什么地方，来生成不只一个敌人。这意味着，你能够使用相同的敌人类，在游戏世界的任意地方生成任意数量的敌方妖精。你需要做的仅仅是调用这个类，并告诉它应使用哪张图像，以及你期望生成点的 X 和 Y 坐标。
再次，这从原则上与生成一个玩家精灵相似。在你脚本的 `setup` 节添加如下代码：
```
enemy   = Enemy(20,200,'yeti.png')  # 生成敌人
enemy_list = pygame.sprite.Group()  # 创建敌人组
enemy_list.add(enemy)               # 将敌人加入敌人组
```
在示例代码中，X 坐标为 20，Y 坐标为 200。你可能需要根据你的敌方妖精的大小，来调整这些数字，但尽量生成在一个范围内，使得你的玩家妖精能够碰到它。`Yeti.png` 是用于敌人的图像。
接下来，将敌人组的所有敌人绘制在屏幕上。现在，你只有一个敌人，如果你想要更多你可以稍后添加。一但你将一个敌人加入敌人组，它就会在主循环中被绘制在屏幕上。中间这一行是你需要添加的新行：
```
    player_list.draw(world)
    enemy_list.draw(world)  # 刷新敌人
    pygame.display.flip()
```
启动你的游戏，你的敌人会出现在游戏世界中你选择的 X 和 Y 坐标处。
### 关卡一
你的游戏仍处在襁褓期，但你可能想要为它添加另一个关卡。为你的程序做好未来规划非常重要，因为随着你学会更多的编程技巧，你的程序也会随之成长。即使你现在仍没有一个完整的关卡，你也应该按照假设会有很多关卡来编程。
思考一下“关卡”是什么。你如何知道你是在游戏中的一个特定关卡中呢？
你可以把关卡想成一系列项目的集合。就像你刚刚创建的这个平台中，一个关卡，包含了平台、敌人放置、战利品等的一个特定排列。你可以创建一个类，用来在你的玩家附近创建关卡。最终，当你创建了一个以上的关卡，你就可以在你的玩家达到特定目标时，使用这个类生成下一个关卡。
将你写的用于生成敌人及其群组的代码，移动到一个每次生成新关卡时都会被调用的新函数中。你需要做一些修改，使得每次你创建新关卡时，你都能够创建一些敌人。
```
class Level():
    def bad(lvl,eloc):
        if lvl == 1: