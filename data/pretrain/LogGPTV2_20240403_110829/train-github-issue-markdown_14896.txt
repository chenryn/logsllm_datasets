`String.prototype.localeCompare()` on MDN
I noticed that some results differ significantly from Chrome in test cases
when using this method. I'm not sure if/how this is standardized or where the
responsibility lies, but I wanted to surface this because it seems like a bug.
Here's an example you can copy+paste to run in a browser console or Deno REPL:
    (() => {
      const pairs = [
        ['a', 'á'],
        ['á', 'a'],
        ['a', 'b'],
        ['b', 'a'],
        ['á', 'b'],
        ['b', 'á'],
      ];
      const compare = (a, b) => a.localeCompare(b, 'en-US', {sensitivity: 'base'});
      const results = pairs
        .map(pair => [...pair, compare(...pair)].join(' '))
        .join('\n');
      console.log(results);
    })();
a | b | Chrome | Deno  
---|---|---|---  
a | á | 0 | -128  
á | a | 0 | 128  
a | b | -1 | -1  
b | a | 1 | 1  
á | b | -1 | 127  
b | á | 1 | -127  
Chrome `83.0.4103.97`  
Deno `1.1.0`
Specifically, note the description for using the value "base" for the
"sensitivity" option:
> Only strings that differ in base letters compare as unequal. Examples: `a ≠
> b`, `a = á`, `a = A`
In the example above for `a` and `á`, Chrome returns `0` (equal), but Deno
does not.