I am using PythonQt to execute a Python script, as I need to call C++ methods from the Python code. My current setup includes Winpdb version 1.4.6 on a CentOS 6.5 machine.

To enable debugging in my Python script, I have added `rpdb2.start_embedded_debugger('test')` within the script and called the `PythonQt.EvalFile()` function. The script then waits for the debugger to connect. I open the Winpdb UI from the terminal and attach it to the debugger, which allows me to perform actions like "Next" and "Step Into," and all local variables are correctly visible.

However, when I attempt to detach the debugger, it does not successfully detach. The status shows "DETACHING," but no further action occurs, and I cannot even close Winpdb. The only way to exit is to kill the Winpdb process. If I run the same script directly from the terminal (using `python <script_name>`), the detachment works as expected.

Upon reviewing the logs, I noticed that if I run the script from the terminal, the debug channel is encrypted. However, when running through PythonQt, the debug channel is not encrypted. I am unsure if this difference has any connection to the detachment issue.

Further investigation into the `rpdb2.py` code revealed that Winpdb hangs at the line `self.getSession().getProxy().request_go(fdetach)` within the `request_go(self, fdetach=False):` method. Additionally, port 51000 remains in an established state.

I would appreciate any advice or suggestions to resolve this issue.

---

**Update:**
I have resolved the issue by updating to the latest version of PythonQt.