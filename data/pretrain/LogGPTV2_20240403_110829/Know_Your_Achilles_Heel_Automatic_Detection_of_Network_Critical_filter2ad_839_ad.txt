Although computing the activity correlation for every pair
of services has a quadratic complexity in terms of the num-
ber of services, this kind of analysis is necessary only when
any possible pairing of services can be a valid one. Fortu-
nately, in reality, the computer networks are structured hier-
archically and mission implementation often times remains
local in these clusters. Therefore, these clusters of services
Table 4: The importance scores of the hosts.
The host IPs are replaced with their services to
anonymize the data.
Host’s services
NFS, NetBIOS, SMTP, IMAP
NFS1
main web
DNS, DHCP
NFS2
NetBIOS
Hadoop
cfengine
LDAP1
print server
Final score Rank
3.760
3.250
1.741
1.431
1.386
1.328
1.326
0.971
0.930
0.913
1
2
3
4
5
6
7
8
9
10
can be analyzed separately and independently, which makes
our analysis linear in terms of the number of clusters, while
quadratic to the number of services inside each cluster.
Another potential issue is that maximal clique listing for a
dense graph can take exponential time in terms of the num-
ber of nodes of the graph. To reduce the complexity of the
clique detection, we ﬁrst delete all the non-frequent edges
from all activity correlation graphs. An edge that is not fre-
quent itself cannot be part of any frequent clique. Listing all
maximal cliques of a sparse graph (i.e. with low degeneracy)
is linear in number of its nodes [14]. In Section 3.3, we also
showed that the probability of a random pair of services be-
ing recognized as a correlated pair (i.e. an edge in the graph)
can be reduced to an arbitrarily small value by increasing
the data points or by increasing the correlation threshold to
the corresponding value. Therefore, maximal-clique listing
complexity is not an intrinsic problem with our solution and
can be avoided by parameter tuning.
6.2 Generality
We can divide our work into three layers of abstraction:
1- The underlying hypothesis: A mission is built of several
services working together to achieve the same goal. This
property leads to synchronized activity among services in
the same mission. Missions can be detected by any statis-
tical tool that detects synchronized activities, and they are
recognizable as cliques in the synchronized-activity relation
graph.
2- Synchronized-activity detection: Using the number of
connections/packets/bytes as activity indicator and using
Pearson correlation as synchronized-activity measure.
3- The thresholds and constants chosen to maximize the sys-
tem accuracy: service-extraction threshold, mission thresh-
old, etc.
The more abstract the design is the more general it be-
comes. We expect the underlying hypothesis to be true for
new datasets from other networks, because it is an intrinsic
property of the missions, which does not depend on the size
of the network, types of services, and data gathering devices.
In contrast, the thresholds and constants of the system have
been selected to improve the accuracy of Paris using a spe-
ciﬁc dataset, and can be tuned for other datasets to achieve
better results.
7. RELATED WORK
48
Table 2: Network operations, together with the number of involved missions.
Operation name
Number of Missions
email operation
web operation
data center conﬁguration operation
roaming proﬁle operation
malware analysis operation
print operation
web backup operation
cloud operation
Web, SMTP, DNS, and IMAP server
Web, DNS, LDAP, and Hadoop server
cfengine, LDAP server, and ﬁle server
SNMP and print server
Web and LDAP server
3
63
14
32
2
1
1
1
Components
NFS, LDAP, and DNS server
Analysis, Web and MySQL server
cloud services
Situation awareness has been well studied in diﬀerent re-
search areas [12, 13, 27, 35, 4, 16, 32, 40, 23, 37, 17]. In
particular, Salerno et al. discuss a situation awareness model
for military applications and demonstrate its applicability to
global monitoring and cyber awareness scenarios [23]. Tadda
et al. reﬁned the proposed models to apply them to cyber
situation awareness [16]. In [37], Salerno reviews a number
of metrics being used in information fusion frameworks and
evaluates their applicability to the assessment of situations.
Holsopple et al. propose TANDI [21], a threat assessment
mechanism for network data and information . Based on
TANDI, Holsopple et al. also propose a situation and im-
pact awareness system, FuSIA, which aims to enhance net-
work situation awareness by providing plausible estimates
of the future actions of the ongoing attacks [22]. FuSIA
uses threat projection algorithms to derive plausibility scores,
which analyze the capability and opportunity of ongoing at-
tacks. Then, FuSIA combines the plausibility scores in or-
der to provide a ﬁnal fused estimate of the future situation.
FuSIA is not fully automated, as it is not able to detect mis-
sions. In fact, a security analyst needs to manually provide
FuSIA with mission information; this is in contrast to the
automatic identiﬁcation of mission information by Paris.
Goodall et al. introduced Camus [18], which automatically
maps cyber assets to missions and users by combining diﬀer-
ent data mining, inference, and fusion approaches. Camus,
however, is based on the strong assumption that the asset
and mission information is available in diﬀerent formats and
in diﬀerent locations of the network. This requires frequent
involvement of the network administrator, in order to ensure
the availability and freshness of the data. Gomez et al. take
a similar approach by automating the assignment of intel-
ligence, surveillance, and reconnaissance assets to speciﬁc
military applications [17]. Lewis et al. propose an alterna-
tive mission reference model in order to map the cyber assets
to the missions using a mathematical constraint satisfaction
approach [29].
Grimaila et al. study situation awareness by focusing on
the information assets, instead of the cyber assets, and pro-
pose a cyber-damage assessment framework [19]. This, how-
ever, requires manual deﬁnition and prioritization of the op-
erational processes and the information assets. Holsopple
et al. survey the past eﬀorts in situation assessment ranging
from visualization to algorithmic threat projection, and they
describe the need to associate situation assessment processes
and models with some requirements needed to enhance the
situation awareness [20]. The paper argues the need for ef-
fective automated processes that estimate and project the
situation, taking into account the domain-speciﬁc concerns
from the analysis. The paper also suggests the use of inter-
active visualization of the situation, threat, and impact for
diﬀerent application models.
Other research has targeted the classiﬁcation of network
applications based on NetFlow information [36, 28, 38, 8].
In particular, in order to classify and proﬁle network appli-
cations, Lampinen et al. [28] propose a network application
clustering algorithm that uses NetFlow information from the
monitoring devices.
It should be mentioned that there is a relevant body of
research trying to classify network applications based on
header and payload full information of individual packets [26,
5]. Paris, however, only needs lower-level NetFlow data to
perform its analysis, requiring much lower resources for its
operation, e.g., lower CPU, storage, and bandwidth.
Some previous work [31, 24, 10, 3, 9, 34, 2, 15, 7, 30,
42] tried to address the problem of situation awareness by
detecting hidden dependencies among network services.
8. CONCLUSIONS
In this paper, we developed a new method for providing
automatic situation awareness for computer networks. We
designed Paris which automatically identiﬁes network ser-
vices, ﬁnds their dependencies, and ranks them based on
their importance towards network missions. This enables
network administrators to make speculations about the fu-
ture status of the network and to prioritize defensive and
corrective actions. We implemented Paris and validated its
performance by deploying it on a large real-world network.
9. ACKNOWLEDGMENTS
This work was supported by National Science Foundation
(NSF) under grant CNS-1408632, and Army Research Oﬃce
(ARO) under grant W911NF-09-1-0553.
10. REFERENCES
[1] NetFlow protocol. http://www.manageengine.com/
products/netﬂow/help/cisco-netﬂow/netﬂow-ios-versions.
html.
[2] P. Bahl, P. Barham, R. Black, R. Ch, M. Goldszmidt,
R. Isaacs, S. K, L. Li, J. Maccormick, D. A. Maltz,
R. Mortier, M. Wawrzoniak, and M. Zhang. Discovering
dependencies for network management. In In Proc. V
HotNets Workshop, 2006.
[3] P. Bahl, R. Chandra, A. Greenberg, S. Kandula, D. A.
Maltz, and M. Zhang. Towards highly reliable enterprise
network services via inference of multi-level dependencies.
SIGCOMM Comput. Commun. Rev., 37, 2007.
[4] P. Barford, M. Dacier, T. G. Dietterich, M. Fredrikson,
J. Giﬃn, S. Jajodia, S. Jha, J. Li, P. Liu, P. Ning, X. Ou,
D. Song, L. Strater, V. Swarup, G. Tadda, C. Wang, and
J. Yen. Cyber SA: Situational Awareness for Cyber
Defense. In S. Jajodia, P. Liu, V. Swarup, and C. Wang,
49
editors, Cyber Situational Awareness, Advances in
Information Security. Springer US, 2010.
[5] L. Bernaille, R. Teixeira, and K. Salamatian. Early
[23] J.J. Salerno, M.L. Hinman, and D.M. Boulware. A
situation awareness model applied to multiple domains. In
Proceedings of SPIE, 2005.
application identiﬁcation. In Proceedings of the 2006 ACM
CoNEXT conference, CoNEXT ’06, pages 6:1–6:12, New
York, NY, USA, 2006. ACM.
[24] S. Kandula, R. Chandra, and D. Katabi. What’s going on?:
learning communication rules in edge networks. SIGCOMM
Comput. Commun. Rev., 2008.
[6] J. C. Bezdek. Pattern Recognition with Fuzzy Objective
[25] T. Kanungo, D. Mount, N. Netanyahu, C. Piatko,
Function Algorithms. Plenum Press, New York, 1981.
[7] A. Brown, G. Kar, G. Kar, and A. Keller. An Active
Approach to Characterizing Dynamic Dependencies for
Problem Determination in a Distributed Environment. In
In Seventh IFIP/IEEE International Symposium on
Integrated Network Management, 2001.
[8] U. Chaudhary, I. Papapanagiotou, and M. Devetsikiotis.
Flow classiﬁcation using clustering and association rule
mining. In Computer Aided Modeling, Analysis and Design
of Communication Links and Networks (CAMAD), 2010
15th IEEE International Workshop on, 2010.
[9] M. Y. Chen, A. Accardi, E. K ¨A´sc ¨A´sman, J. Lloyd,
D. Patterson, A. Fox, and E. Brewer. Path-Based Failure
and Evolution Management. In In Proceedings of
(NSDIˆa ˘A ´Z04), 2004.
[10] X. Chen, M. Zhang, Z. M. Mao, and P. Bahl. Automating
network application dependency discovery: experiences,
limitations, and new solutions. USENIX Association, 2008.
[11] T. Coladarci, C. Cobb, E. Minium, and R. Clarke.
Fundamentals of Statistical Reasoning in Education.
Wiley/Jossey-Bass Education. John Wiley & Sons, 2010.
[12] M. R. Endsley. Design and Evaluation for Situation
Awareness Enhancement. In Proceedings of the Human
Factors Society 32nd Annual Meeting, volume 1 of
Aerospace Systems: Situation Awareness in Aircraft
Systems, 1988.
[13] M. R. Endsley. Towards a Theory of Situation Awareness in
Dynamic Systems. Human Factors, 37, 1995.
[14] D. Eppstein, M. L¨oﬄer, and D. Strash. Listing all maximal
cliques in sparse graphs in near-optimal time. In ISAAC
(1), pages 403–414, 2010.
[15] R. Fonseca, G. Porter, R. H. Katz, S. Shenker, and
I. Stoica. X-trace: A pervasive network tracing framework.
In In NSDI, 2007.
[16] G. Tadda, J.J. Salerno, D. Boulware, M. Hinman. and S.
Gorton. Realizing situation awareness within a cyber
environment. In Multisensor, Multisource Information
Fusion: Architectures, Algorithms, and Applications 2006,
volume 6242. SPIE, 2006.
[17] M. Gomez, A. D. Preece, M. P. Johnson, G. de Mel, W. W.
Vasconcelos, C. Gibson, A. Bar-Noy, K. Borowiecki,
T. F. L. Porta, D. Pizzocaro, H. Rowaihy, G. Pearson, and
T. Pham. An ontology-centric approach to sensor-mission
assignment. 2008.
[18] J. R. Goodall, A. D’Amico, and J. K. Kopylec. Camus:
Automatically mapping Cyber Assets to Missions and
Users. MILCOM 2009 - 2009 IEEE Military
Communications Conference, 2009.
R. Silverman, and A. Wu. An eﬃcient-means clustering
algorithm: Analysis and implementation. IEEE
Transactions on Pattern Analysis and Machine
Intelligence, 2002.
[26] T. Karagiannis, K. Papagiannaki, and M. Faloutsos. Blinc:
multilevel traﬃc classiﬁcation in the dark. SIGCOMM
Comput. Commun. Rev., 35:229–240, August 2005.
[27] G. Klein and B. Crandall. Recognition-Primed Decision
Strategies. ARI research note 96-36, 1996.
[28] T. Lampinen, H. Koivisto, and T. Honkanen. Proﬁling
network applications with fuzzy c-means clustering and
self-organizing map. In FSKD’02, 2002.
[29] L. Lewis, G. Jakobson, and J. Buford. Enabling cyber
situation awareness, impact assessment, and situation
projection. In Military Communications Conference, 2008.
MILCOM 2008. IEEE, 2008.
[30] J.-G. Lou, Q. Fu, Y. Wang, and J. Li. Mining dependency
in distributed systems through unstructured logs analysis.
SIGOPS Oper. Syst. Rev., 44:91–96, March 2010.
[31] A. Natarajan, P. Ning, Y. Liu, S. Jajodia, and S. E.
Hutchinson. NSDMiner: Automated Discovery of Network
Service Dependencies. In In proceedings of IEEE
International Conference on Computer Communications
(INFOCOM ’12).
[32] P. Porras, M. Fong, and A. Valdes. A
Mission-Impact-Based Approach to INFOSEC Alarm
Correlation. In Proceedings of the International Symposium
on the Recent Advances in Intrusion Detection, 2002.
[33] L. Page. PageRank: Bringing order to the web. Stanford
Digital Libraries Working Paper 1997-0072, Stanford
University, 1997.
[34] L. Popa, B. gon Chun, J. Chandrashekar, N. Taft, and
I. Stoica. Macroscope: End-Point Approach to Networked
Application Dependency Discovery, 2009.
[35] J. Rasmussen. Skills, Rules, and Knowledge; Signals, Signs
and Symbols, and Other Distinctions in Humans
Performance Models. IEEE Transactions on Systems, Man
and Cybernetics, 13, 1983.
[36] D. Rossi and S. Valenti. Fine-grained traﬃc classiﬁcation
with netﬂow data. In Proceedings of the 6th International
Wireless Communications and Mobile Computing
Conference, IWCMC ’10, New York, NY, USA, 2010. ACM.
[37] J. Salerno. Measuring Situation Assessment Performance
through the Activities of Interest Score. In Information
Fusion, 2008 11th International Conference on, 2008.
[38] S. Song and Z. Chen. Adaptive Network Flow Clustering.
2007 IEEE International Conference on Networking,
Sensing and Control, 2007.
[19] M. Grimaila, R. Mills, and L. Fortson. Improving the
[39] Symantec. Internet security threat report. Technical report,
Cyber Incident Mission Impact Assessment Processes. In
4th Annual Workshop on Cyber Security and Information
Intelligence Research, 2008.
[20] J. Holsopple, M. Sudit, M. Nusinov, D. Liu, H. Du, and
S. Yang. Enhancing situation awareness via automated
situation assessment. IEEE Communications Magazine, 48,
2010.
[21] J. Holsopple, J. Yang, , and M. Sudit. TANDI: Threat
assessment of network data and information. In SPIE,
Defense and Security Symposium, 2006.
April 2012.
[40] V. Mehta, C. Bartzis, H. Zhu, E. Clarke, and J. Wing.
Ranking attack graphs. In Recent Advances in Intrusion
Detection, 2006.
[41] J. Yuan and S. Ding. An alerts correlation technology for
large-scale network intrusion detection. In Z. Gong, X. Luo,
J. Chen, J. Lei, and F. Wang, editors, Web Information
Systems and Mining, volume 6987 of Lecture Notes in
Computer Science, pages 352–359. Springer Berlin
Heidelberg, 2011.
[22] J. Holsopple and S. Yang. FuSIA: Future situation and
[42] A. Zand, G. Vigna, R. A. Kemmerer, and C. Kruegel.
impact awareness. In Information Fusion, 2008 11th
International Conference on. IEEE, 2008.
Rippler: Delay injection for service dependency detection.
In 2014 IEEE Conference on Computer Communications,
INFOCOM 2014, Toronto, Canada, April 27 - May 2,
2014, pages 2157–2165, 2014.
50