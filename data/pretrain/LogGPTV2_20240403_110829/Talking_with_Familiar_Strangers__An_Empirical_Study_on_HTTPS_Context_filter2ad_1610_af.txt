inconsistencies are proved disastrous in an adversarial context [44].
However, due to the misconfigurations by developers, implemen-
tations vary among different entities. The inconsistencies exist
between two web servers, between middleboxes (e.g., proxies, fire-
walls, CDN nodes) and back-end servers, or even between different
user agents [52]. In fact, ambiguities among entities can appear in
any security policies enforced by HTTP headers, including HSTS
and CORS [25, 42]. Mendoza et al. explored the impact of subtle
inconsistencies of HTTP security headers for websites on different
platforms (e.g., desktop, mobile), which expose users to attack [52].
Notably, Chen et al. demonstrated the implications of incon-
sistent implementations while processing Host, a critical HTTP
header indicating the origin while enforcing security policies [26].
The defects of interpreting Host may break the isolation of different
origins, especially in HTTPS environments [31]. Under the premise
of origin confusion, we find the well-known inconsistencies of se-
curity policies may influence the secure context and will lead to
more attack scenarios with the help of shared certificates.
8 CONCLUSION
Though the specially designed policies can mitigate well-known
attacks like SSL stripping, it is still vulnerable in the origin con-
fusion scenarios with shared TLS certificates. We systematically
evaluate the implications of SCC attacks. We show the adversaries
can hijack the secure traffic between clients and well-configured
servers, by using the misconfigured response headers from other
servers. The attacks apply to established secure connections, which
are unnoticeable for users and applications because the accessed
website’s certificate is valid for the flawed server. We find several
attack scenarios like payment hijacking, download hijacking from
major sites, like Microsoft, Alibaba, and JD.com. Meanwhile, we
propose a systematical methodology to discover the exploitable
web servers in the wild. Through a measurement study, we find
25.2% subdomains of Alexa Top 500 websites are affected by these
issues. From the implementations, we find diversity among the web-
sites on dealing with security policies, especially HTTP headers.
Besides, the widely shared TLS certificates should take primary
responsibility. As such, we expect the community and the develop-
ers should raise more attention to the security status of certificate
management and policy implementation.
ACKNOWLEDGMENTS
We sincerely thank all anonymous reviewers for their valuable
reviews and comments to improve the paper. We also thank Junlin
Wei, Minglei Guo and Xiarun Chen for their help on the paper.
This work is supported in part by the National Natural Science
Foundation of China (Grant No. U1836213 and U1636204), the BN-
Rist Network and Software Security Research Program (Grant No.
BNR2019TD01004), Beijing Nova Program of Science and Tech-
nology (Grant No. Z191100001119131), and the Joint Funds of the
National Natural Science Foundation of China (Grant No.U1836113).
2011-3389.
reload.
[2] [n.d.]. Danami: Port/IP Redirection. https://docs.danami.com/juggernaut/user-
guide/port-ip-redirection. Accessed: Nov 3, 2019.
[3] [n.d.]. Google Chrome engineers want to block some HTTP file down-
loads. https://www.zdnet.com/article/google-chrome-engineers-want-to-block-
some-http-file-downloads/. April 10, 2019.
[4] [n.d.]. Google: HSTS Preload List. https://opensource.google.com/projects/hstsp
[5] [n.d.]. Google Transparency Report: HTTPS encryption on the web. https:
//transparencyreport.google.com/https/overview.
[6] [n.d.]. HTTPS usage statistics on top 1M websites. https://statoperator.com/res
earch/https-usage-statistics-on-top-websites/. Accessed: Dec 14, 2019.
[7] [n.d.]. Man-in-the-Middle TLS Protocol Downgrade Attack. https://www.praeto
rian.com/blog/man-in-the-middle-tls-ssl-protocol-downgrade-attack. Accessed:
Auguset 23, 2019.
[8] [n.d.]. MDN Web Docs: Mixed content. https://developer.mozilla.org/en-US/doc
[9] [n.d.]. MDN Web Docs: Redirections in HTTP. https://developer.mozilla.org/en-
s/Web/Security/Mixed_content.
US/docs/Web/HTTP/Redirections.
REFERENCES
[1] [n.d.]. CVE-2011-3389: BEAST Attack. https://nvd.nist.gov/vuln/detail/CVE-
[10] [n.d.]. No More Mixed Messages About HTTPS. https://blog.chromium.org/
2019/10/no-more-mixed-messages-about-https.html. October 3, 2019.
[11] [n.d.]. OWASP Secure Headers Project. https://www.owasp.org/index.php/OW
ASP_Secure_Headers_Project. Accessed: Dec 2, 2019.
[12] [n.d.]. Preventing Mixed Content. https://developers.google.com/web/fundamen
tals/security/prevent-mixed-content/what-is-mixed-content.
[13] [n.d.]. SSLStrip2. https://github.com/LeonardoNve/sslstrip2.
[14] [n.d.]. TLS Redirection (and Virtual Host Confusion). https://github.com/GrrrD
og/TLS-Redirection#intro.
[15] [n.d.]. Trying to take the dum-dum out of Security. https://web.archive.org/
web/20150921195009/http://sign0f4.blogspot.com/2014/10/mitmf-v07-released-
sslstrip-integration.html.
[16] [n.d.]. Usage statistics of HTTP Strict Transport Security for websites. https:
//w3techs.com/technologies/details/ce-hsts/all/all. Accessed: Dec 13, 2019.
[17] 2016. Mixed Content (W3C Candidate Recommendation). https://www.w3.org/
TR/2016/CR-mixed-content-20160802/.
[18] 2019. Mixed Content (W3C Editor’s draft). https://w3c.github.io/webappsec-
mixed-content/.
[19] Nadhem J Al Fardan and Kenneth G Paterson. 2013. Lucky thirteen: Breaking the
TLS and DTLS record protocols. In 2013 IEEE Symposium on Security and Privacy.
IEEE, 526–540.
[20] Eman Salem Alashwali and Kasper Rasmussen. 2018. What’s in a downgrade? A
taxonomy of downgrade attacks in the TLS protocol and application protocols
using TLS. In International Conference on Security and Privacy in Communication
Systems. Springer, 468–487.
[21] Stefano Calzavara, Alvise Rabitti, Alessio Ragazzo, and Michele Bugliesi. 2019.
Testing for integrity flaws in web sessions. In European Symposium on Research
in Computer Security. Springer, 606–624.
[22] Stefano Calzavara, Alvise Rabitti, Alessio Ragazzo, and Michele Bugliesi. 2019.
Testing for Integrity Flaws in Web Sessions.
[23] Fuqing Chen, Haixin Duan, Xiaofeng Zheng, Jian Jiang, and Jianjun Chen. 2018.
Path Leaks of HTTPS Side-Channel by Cookie Injection. In International Work-
shop on Constructive Side-Channel Analysis and Secure Design. Springer, 189–203.
[24] Jianjun Chen. [n.d.]. Host of Troubles Vulnerabilities. https://hostoftroubles.com/.
[25] Jianjun Chen, Jian Jiang, Haixin Duan, Tao Wan, Shuo Chen, Vern Paxson, and
Min Yang. 2018. We Still Don’t Have Secure Cross-Domain Requests: an Empirical
Study of{CORS}. In 27th{USENIX} Security Symposium ({USENIX} Security
18). 1079–1093.
[26] Jianjun Chen, Jian Jiang, Haixin Duan, Nicholas Weaver, Tao Wan, and Vern
Paxson. 2016. Host of troubles: Multiple host ambiguities in http implemen-
tations. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 1516–1527.
[27] Shuo Chen, Ziqing Mao, Yi-Min Wang, and Ming Zhang. 2009. Pretty-bad-proxy:
An overlooked adversary in browsers’ https deployments. In 2009 30th IEEE
Symposium on Security and Privacy. IEEE, 347–359.
[28] Taejoong Chung, David Choffnes, and Alan Mislove. 2016. Tunneling for trans-
parency: A large-scale analysis of end-to-end violations in the internet. In Pro-
ceedings of the 2016 Internet Measurement Conference. ACM, 199–213.
[29] David Cooper, Stefan Santesson, S Farrell, Sharon Boeyen, Rusell Housley, and
W Polk. 2008. RFC 5280: Internet X. 509 public key infrastructure certificate and
certificate revocation list (CRL) profile. IETF, May (2008).
[30] X de Carné de Carnavalet and Mohammad Mannan. 2016. Killed by proxy:
Analyzing client-end TLS interception software. In Network and Distributed
System Security Symposium.
[31] Antoine Delignat-Lavaud and Karthikeyan Bhargavan. 2015. Network-based
origin confusion attacks against HTTPS virtual hosting. In Proceedings of the
(2004).
24th International Conference on World Wide Web. International World Wide Web
Conferences Steering Committee, 227–237.
[32] Zakir Durumeric, Zane Ma, Drew Springall, Richard Barnes, Nick Sullivan, Elie
Bursztein, Michael Bailey, J Alex Halderman, and Vern Paxson. 2017. The Security
Impact of HTTPS Interception.. In NDSS.
roxy.
[33] Leonardo Nve Egea. [n.d.]. dns2proxy. https://github.com/LeonardoNve/dns2p
Security Symposium ({USENIX} Security 17). 1323–1338.
[34] Leonardo Nve Egea. 2015. sslstrip+. https://github.com/LeonardoNve/sslstrip2.
[35] Adrienne Porter Felt, Richard Barnes, April King, Chris Palmer, Chris Bentzel,
and Parisa Tabriz. 2017. Measuring HTTPS Adoption on the Web. In 26th USENIX
[36] Steve Gibson. Dec 11, 2005. ARP Cache Poisoning: How one bad machine
on your Ethernet Local Area Network (LAN) can ruin your whole day. https:
//www.grc.com/nat/arp.htm.
[37] Jeff Hodges, Collin Jackson, and Adam Barth. 2012. RFC 6797: Http strict transport
security (hsts). URL: http://tools.ietf. org/html/draft-ietf-websec-strict-transport-
sec-04 (2012).
[38] Ralph Holz, Lothar Braun, Nils Kammenhuber, and Georg Carle. 2011. The
SSL landscape: a thorough analysis of the x. 509 PKI using active and passive
measurements. In Proceedings of the 2011 ACM SIGCOMM conference on Internet
measurement conference. ACM, 427–444.
[39] Ralph Holz, Yaron Sheffer, and Peter Saint-Andre. 2015. RFC 7457: Summarizing
Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS).
(2015).
[40] P Johnston and R Moore. [n.d.]. Multiple browser cookie injection vulnerabilities
[41] David Keeler. 2012. Preloading HSTS. Mozilla Security Blog (2012).
[42] Michael Kranch and Joseph Bonneau. 2015. Upgrading HTTPS in Mid-Air: An
Empirical Study of Strict Transport Security and Key Pinning. NDSS.
[43] Deepak Kumar, Kelly Shen, Benton Case, Deepali Garg, Galina Alperovich, Dmitry
Kuznetsov, Rajarshi Gupta, and Zakir Durumeric. 2019. All things considered: an
analysis of IoT devices on home networks. In 28th{USENIX} Security Symposium
({USENIX} Security 19). 1169–1185.
[44] Arturs Lavrenovs and F Jesús Rubio Melón. 2018. Http security headers analysis
of top one million websites. In 2018 10th International Conference on Cyber Conflict
(CyCon). IEEE, 345–370.
[45] Olivier Levillain. 2016. A study of the TLS ecosystem. Ph.D. Dissertation. Institut
National des Télécommunications.
[46] Xurong Li, Chunming Wu, Shouling Ji, Qinchen Gu, and Raheem Beyah. 2017.
HSTS Measurement and an Enhanced Stripping Attack Against HTTPS. In Inter-
national Conference on Security and Privacy in Communication Systems. Springer,
489–509.
[47] Jinjin Liang, Jian Jiang, Haixin Duan, Kang Li, Tao Wan, and Jianping Wu. 2014.
When HTTPS meets CDN: A case of authentication in delegated service. In 2014
IEEE Symposium on Security and Privacy. IEEE, 67–82.
[48] Meng Luo, Pierre Laperdrix, Nima Honarmand, and Nick Nikiforakis. 2019. Time
Does Not Heal All Wounds: A Longitudinal Analysis of Security-Mechanism
Support in Mobile Browsers.. In NDSS.
Accessed: Nov 4, 2019.
[49] Moxie Marlinspike. 2002. SSLSniff Attack. https://moxie.org/software/sslsniff/.
[50] Moxie Marlinspike. 2009. More tricks for defeating SSL in practice. Black Hat
[51] Moxie Marlinspike. 2009. SSLStrip Attack. https://moxie.org/software/sslstrip/.
USA (2009).
Accessed: Nov 4, 2019.
[52] Abner Mendoza, Phakpoom Chinprutthiwong, and Guofei Gu. 2018. Uncovering
http header inconsistencies and the impact on desktop/mobile websites. In Pro-
ceedings of the 2018 World Wide Web Conference. International World Wide Web
Conferences Steering Committee, 247–256.
[53] Marlingspike Moixe. 2009. New tricks for defeating ssl in practice. In BlackHat
Conference, USA.
[54] Ivan Petrov, Denis Peskov, Gregory Coard, Taejoong Chung, David Choffnes,
Dave Levin, Bruce M Maggs, Alan Mislove, and Christo Wilson. [n.d.]. Measuring
the Rapid Growth of HSTS and HPKP Deployments. ([n. d.]).
[55] Abbas Razaghpanah, Arian Akhavan Niaki, Narseo Vallina-Rodriguez, Srikanth
Sundaresan, Johanna Amann, and Phillipa Gill. 2017. Studying TLS usage in
Android apps. In Proceedings of the 13th International Conference on emerging
Networking EXperiments and Technologies. ACM, 350–362.
[56] Eric Rescorla. 2000. RFC 2818: Http over tls. (2000).
[57] Ivan Ristic. 2013. Bulletproof SSL and TLS: Understanding and Deploying SSL/TLS
and PKI to Secure Servers and Web Applications. Feisty Duck.
[58] Peter Saint-Andre and Jeff Hodges. 2011. RFC 6125: Representation and Verifica-
tion of Domain-Based Application Service Identity within Internet Public Key
Infrastructure Using X. 509 (PKIX) Certificates in the Context of Transport Layer
Security (TLS). Internet Engineering Task Force (IETF), RFC (2011).
[59] Jose Selvi. [n.d.]. Bypassing HTTP strict transport security. ([n. d.]).
[60] Suphannee Sivakorn, Angelos D Keromytis, and Jason Polakis. 2016. That’s
the Way the Cookie Crumbles: Evaluating HTTPS Enforcing Mechanisms. In
Table 4: The Response Headers of the Same HTTPS Requests
Sent from Different Regions (for Case 4)
Request URL
Dst IP
Src IPs
Location
111.25.158.225
Jilin, China
45.32.47.58
Tokyo, Japan
144.202.112.190
Los Angeles, US
https://www.weibo.com/
180.149.134.141
Response Headers
HTTP/1.1 200 OK
Server: WeiBo/LB
Transfer-Encoding: chunked
pramga: no-cache
Content-Encoding: gzip
LB_HEADER: venus244
...
HTTP/1.1 302 Moved Temporarily
server: nginx
status: 302
pramga: no-cache
location: http://weibo.com/jp
x-via-cdn: f=Akamai, s=23.207.172.156,
c=45.32.47.58
...
HTTP/1.1 302 Moved Temporarily
pramga: no-cache
server: nginx
status: 302
location: http://weibo.com/us
x-via-cdn: f=Akamai, s=23.208.64.165,
c=144.202.112.190
...
Proceedings of the 2016 ACM on Workshop on Privacy in the Electronic Society.
ACM, 71–81.
[61] Suphannee Sivakorn, Iasonas Polakis, and Angelos D Keromytis. 2016. The
cracked cookie jar: HTTP cookie hijacking and the exposure of private informa-
tion. In 2016 IEEE Symposium on Security and Privacy (SP). IEEE, 724–742.
[62] Christopher Soghoian and Sid Stamm. 2011. Certified lies: Detecting and defeat-
ing government interception attacks against SSL (short paper). In International
Conference on Financial Cryptography and Data Security. Springer, 250–259.
[63] speedguide. [n.d.]. Port 8443 Details. howpub=https://www.speedguide.net/port.
php?port=8443.
[64] Joe Stewart. 2003. DNS cache poisoning–the next generation.
[65] Paul Vixie. 1995. DNS and BIND Security Issues.. In Usenix Security Symposium.
[66] Xiaofeng Zheng, Jian Jiang, Jinjin Liang, Haixin Duan, Shuo Chen, Tao Wan, and
Nicholas Weaver. 2015. Cookies lack integrity: Real-world implications. In 24th
{USENIX} Security Symposium ({USENIX} Security 15). 707–721.
APPENDIX
A THE RESPONSE HEADERS OF THE
SWITCHING CLIENT IP CASE
In Section 5.3.2, we show a Case 4 of downgrading HTTPS traffic
by switching the client IP address. Here, in Table 4, we present
the response headers we receive at the locations, including Jilin
(China), Tokyo (Japan), and Los Angeles (US). From the Location
headers, we see that WeiBo serves for users in Japan via the path
of /jp, and users in the US via /us.