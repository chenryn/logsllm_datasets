10.0(±0.0)
100.30(±0.28)
10, 10
100, 100
1,000, 1,000
5,000, 5,000
10, 10
100, 100
Table 3: Measuring |Bi ∩ Bj| and Ph(.) in Experiments 1,2, and 3, using ﬁlters of the same SPV client with respect to N and Pt. Here,
mi ≤ mj. Each data point is averaged over 10 independent runs; we also present the 95% conﬁdence intervals.
Experiment 3 (Same client, different seed)
0.5
0.5
0.5
0.5
0.1
0.1
10.0(±0.0)
110.90(±1.40)
1499.70(±22.7)
5755(±15.05)
1015.60(±2.37)
5032.40(±3.15)
10, 10
100, 100
1,000, 1,000
5,000, 5,000
1,000, 1,000
5,000, 5,000
0.9997
0.1164
0.0785
0.0003
0.9969
0.0464
0.7448
0.0052
0.0077
0.0308
0.0395
0.1376
0.9017
0.6668
0.8688
0.9846
0.9936
0.9953
0.9985
0.0390
0.0064
1
0
0
0
0
0
1 1
0.0009
1
1
0
0
1
0.9970
0.8138
0.225
1
1
1
1
1
1
1
0
0
0
0
insert new Bitcoin addresses and update their outsourced Bloom
ﬁlters. Here, we assume that our adversary captures all 50 Bloom
ﬁlters and applies our analysis described in Section 5.1 to learn
additional information about the user addresses. In this experiment,
we compute I1 = B1 ∩ B5 for each SPV client; we then report the
average intersection size for all 10 wallets in Table 3.
Our results in Table 3 show that Bloom ﬁlters pertaining to the
same SPV client, and which share the same initial seed, are likely to
exhibit the same false positives (in addition to the elements inserted
in the Bloom ﬁlter). Indeed, our results show that |I1|—measured
experimentally—matches Equation 9, irrespective of the target Pt;
moreover, in this case, Ph(.) obtained using b = 2 Bloom ﬁlters
(cf. Equation 13) is similar to Ph(.) when b = 1 one Bloom ﬁlter.
In our second experiment (Experiment 2), we extend our evalu-
ation to account for the case where Bloom ﬁlters originating from
the same user have different sizes. Here, we also create 10 different
user wallets, each generating ﬁve different Bloom ﬁlters B1,B2,. . . ,
B5 using the same random seed, but each having a different num-
ber of elements (respectively N = {70, 120, 170, 220, 270}) and
different sizes (M ranges between 3224 and 9680 bits). Analo-
gously to Experiment 1, we compute I2 = B1 ∩ B5 for each SPV
client; we then report the average intersection size for all 10 wallets
in Table 3. Additionally, we compute the intersection set I3 shared
by B1 from the ﬁrst wallet, with a randomly chosen Bloom ﬁlter
from the remaining 9 wallets. In Table 5, we report the average in-
tersection set size over the 9 wallets. Our results in Tables 3 and 5
conﬁrm our aforementioned analysis. Indeed, |I2| matches the val-
ues derived using Equation 12 when the Bloom ﬁlters pertain to the
same user. Otherwise, |I3| matches Equation 6.
Our results also show that Ph(.) obtained using b = 2 Bloom
ﬁlters (cf. Equation 12) is considerably larger when compared to
the case where the adversary has access to only one Bloom ﬁlter
(cf. Equation 5).
In our third experiment (Experiment 3), we investigate the case
where Bloom ﬁlters pertaining to the same user are initialized with
different random seeds. As mentioned earlier, this, e.g., corre-
sponds to the case when the user restarts the SPV client. In this
experiment, we create 10 different user wallets, each generating
16 different Bloom ﬁlters constructed using different initial seeds
as follows: 4 ﬁlters B1,B2,B3,B4 with N = 10, N = 100,
N = 1, 000, and N = 10, 000, respectively. For each wallet,
and all ﬁlters of the same size, we compute I4 = B1 ∩ B4 and we
report the average |I4| for each ﬁlter sizes in Table 3. Additionally,
for each ﬁlter size, we also compute the intersection set I5 using
B1 from the ﬁrst wallet, with a randomly chosen Bloom ﬁlter from
all other 9 wallets. In Table 5, we report the average intersection
set size over the 9 wallets. Similar to Experiment 2, our results in
Table 3 show that, irrespective of the ﬁlter size, and of the target
false positive rate, Ph(.) signiﬁcantly decreases when the adversary
acquires b = 2 Bloom ﬁlters pertaining to the same SPV client.
Finally, in our ﬁnal experiment (Experiment 4), we investigate
the impact of having b > 2 Bloom ﬁlters pertaining to the same
SPV client. For that purpose, we use 5 Bloom ﬁlters B1,B2,. . . ,B5
generated using different seeds with N = {3070, 3120, 3170, 3220
, 3270}. We then compute Kj = B1∩···∩B(j+1),∀j ∈ [1, b−1],
and the corresponding Ph(.) using Equation 15. Our ﬁndings are
depicted in Table 4; our results validate our aforementioned analy-
sis and show that the larger the number b of acquired Bloom ﬁlters
of the same SPV client, the larger is Ph(.), and the smaller is the
privacy of the user’s addresses.
Summary.
• In Experiments 1,2, and 3, notice that |I3| ≈ |I5| (cid:28) min(m1,m2)
.
2
This means that given any two Bloom ﬁlters B1 and B2, if
|B1∩ B2| (cid:28) min(m1,m2)
(estimated using Equation 1), then
an adversary can easily tell whether any two Bloom ﬁlters
pertain to the same SPV client.
2
• If the two Bloom ﬁlters acquired by the adversary belong to
the same SPV client, the adversary can identify whether the
SPV client has restarted while generating his Bloom ﬁlters;
here, notice that min(m1,m2)
≤ |I4| (cid:28) |I2| (cid:28) |I1|.
2
• Ph(.) corresponding to b = 2 ﬁlters is considerably larger
when compared to the case where the adversary has access to
one Bloom ﬁlter. This means that an adversary which can ac-
quire more than one Bloom ﬁlter pertaining to an SPV client
can learn considerable information about the addresses of the
node—irrespective of the size of the Bloom ﬁlter and Pt. In
this case, our results show that Ph(N ) approaches 1, which
signals full leakage of the addresses of the SPV client. Ph(.)
increases to 1 as the number b of Bloom ﬁlters of the same
SPV client captured by the adversary increases.
6. OUR PROPOSED SOLUTION
Given our ﬁndings, we propose in what follows a solution that
enhances the privacy of SPV clients which rely on Bloom ﬁlters.
Before presenting our solution, we brieﬂy summarize our observa-
tions from Sections 4 and 5.
b
1
2
3
4
5
Ph(1)
(Pt = 0.05%)
(Analy.)
0.1713
0.9978
(Emp.)
0.1715
0.9977
Ph(1)
(Pt = 0.1%)
(Analy.)
0.0926
0.9911
(Emp.)
0.0916
0.9908
1
1
1
1
1
1
1
1
1
1
1
1
Ph(N/2)
(Pt = 0.05%)
Ph(N/2)
(Pt = 0.1%)
Ph(N )
(Pt = 0.05%)
Ph(N )
(Pt = 0.1%)
(Analy.)
(Emp.)
(Analy.)
(Emp.)
(Analy.)
(Emp.)
(Analy.)
(Emp.)
0.0091
0
1
1
1
0.0079
0
1
1
1
0
0
1
1
1
0
0
1
1
1
0
0
1
1
1
0
0
1
1
1
0
0
1
1
1
0
0
1
1
1
Table 4: Experiment 4: Ph(.) w.r.t. the number b of Bloom ﬁlters which pertain to same SPV client. Here, we assume that each ﬁlter is
generated using a different seed.
Ni
Pt
(%)
E[|Bi ∩ Bj|]
(Analytical)
Experiment 2 (Different client, different seed, different size)
-
-
-
0.05
0.1
0.5
-
-
-
Experiment 3 (Different client, different seed, same size)
|Bi ∩ Bj|
(Empirical)
0.0(±0)
1.22(±0.60)
31.60(±6.34)
0.0(±0.0)
0.0(±0.0)
0.0(±0.0)
0.0(±0.0)
0.0(±0.0)
13.89(±1.64)
5.0(±0.97)
21.11(±2.35)
512.89(±23.21)
11.89(±1.73)
40.11(±3.40)
789.78(±18.92)
10
10
10
100
100
100
1,000
1,000
1,000
5,000
5,000
5,000
0.05
0.1
0.5
0.05
0.1
0.5
0.05