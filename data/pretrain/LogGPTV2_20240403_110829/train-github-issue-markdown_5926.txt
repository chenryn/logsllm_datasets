When using the latest release of Next.js and a simple "Hello World" index page with no dependencies, the application fails to run on Heroku, generating the following error:

```
Error: Cannot find module '/tmp/build_xxx/node_modules/babel-runtime/helpers/inherits'
    at Function.Module._resolveFilename (module.js:455:15)
    at Function.Module._load (module.js:403:25)
    at Module.require (module.js:483:17)
    at require (internal/module.js:20:19)
    at Object. (/app/.next/dist/pages/index.js:7:18)
    at Module._compile (module.js:556:32)
    at Object.Module._extensions..js (module.js:565:10)
    at Module.load (module.js:473:32)
    at tryModuleLoad (module.js:432:12)
    at Function.Module._load (module.js:424:3)
code: 'MODULE_NOT_FOUND'
```

### Possible Causes and Solutions

1. **Missing Dependencies**:
   - The error indicates that the `babel-runtime` package is missing. Even though your project has no explicit dependencies, some internal Next.js processes may still require this package.
   - To resolve this, you can add `babel-runtime` as a dependency in your `package.json` file:
     ```json
     "dependencies": {
       "babel-runtime": "^6.26.0"
     }
     ```

2. **Heroku Build Cache**:
   - Sometimes, Heroku's build cache can cause issues. Clearing the cache might help:
     ```sh
     heroku plugins:install heroku-repo
     heroku repo:purge_cache -a your-app-name
     ```

3. **Node Version**:
   - Ensure that the Node.js version specified in your `engines` field in `package.json` is compatible with the latest Next.js release:
     ```json
     "engines": {
       "node": ">=14.0.0"
     }
     ```

4. **Next.js Configuration**:
   - Verify that your `next.config.js` (if present) does not have any misconfigurations that could be causing the issue.

After making these changes, try redeploying your application to Heroku. If the problem persists, consider checking the Heroku logs for more detailed information.