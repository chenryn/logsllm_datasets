User: I want to Dockerize a project.
I have my project files in a git repo. The project is written in python, and requires a virtual environment to be activated and a pip installation of requirements after the git clone from the repo. The container is going to be a development container, so I would need a basic set of software. Of course I also need to modify the project files, push and pull to git as I prefer.
Solution A
This solution build everything on runtime, and nothing is kept if the container is restarted. It would require the machine to install all the requirements, clone the project every time the container is started.   

Use the Dockerfile for installing python, virtualenv, etc.  
Use the Dockerfile for cloning the project from git, installing pip requirements.  
Use docker compose for setting up the environment, memory limits, cpu shares, etc.  

Solution B
This solution clones the project from git once manually, then the project files are kept in a volume, and you can freely modify them, regardless of container state.  

Use the Dockerfile for installing python, virtualenv, etc.  
Use docker compose for setting up the environment, memory limits, cpu shares, etc.  
Create a volume that is mounted on the container  
Clone the project files into the volume, set up everything once.

Solution C
There might be a much better solution that I have not thought of, if there is, be sure to tell.
Assistant: The best solution is B except you will not use a volume in production.
Docker-compose will also allow you to easily mount your code as a volume but you only need this for dev. 
In production you will COPY your files into the container.