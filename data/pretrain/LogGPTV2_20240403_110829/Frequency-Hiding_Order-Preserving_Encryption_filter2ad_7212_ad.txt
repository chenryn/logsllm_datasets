performed 20 test runs and report the average storage size.
The extent of the 90% conﬁdence interval is always below
0.1% of the measured size. In none of our experimental runs
we had to rebalance the tree. We show the computed com-
pression ratio in Figure 4.
We see that search tree compression performs up to a
compression ratio of roughly 2 around the center number of
distinct plaintexts (N ∼ √n). We conclude that for suit-
able plaintext domains our compression technique performs
well, but for others diﬀerent techniques may be needed.
We therefore also evaluate imperfect frequency-hiding order-
preserving encryption as in Section 6.
We use a plaintext domain of N = 2, since our over-
all compression performed worst with this parameter. We
encrypt n = 106 plaintexts with probability P r[x = 1] ∈
{0.5, 0.6, 0.7, 0.8, 0.9}, i.e. we also consider skewed distribu-
tions. We ﬁx the parameter r = 1.025, i.e. the deviation
from the expected number of repetitions is bound to 2.5%,
and let the parameter p range over {0, 0.025%, 0.05%, 0.075%,
0.1%}. We perform 20 test runs and report the average num-
Figure 4: Compression ratio of dictionary com-
pressed value over the number of distinct plaintexts
N for diﬀerent number of plaintexts n
Figure 5: Number of distinct ciphertexts over the
parameter p for diﬀerent plaintext distributions (r =
1.025)
Figure 3: Pearson correlation coeﬃcient over the
number of diﬀerent plaintexts in the domain
compute the correlation coeﬃcient r.t’ We also compute the
90% conﬁdence interval.
We compare our frequency-hiding order-preserving encryp-
tion scheme to the deterministic order-preserving encryption
scheme of Kerschbaum and Schr¨opfer [23]. Their scheme is
IND-OCPA secure and they have shown that their correla-
tion is often lower than the one of the schemes by [9, 30].
We use the same parameters for n and N , but consider two
diﬀerent options for the ciphertext length. In one case we
keep the expansion factor λ = 5 ﬁxed to the same value,
i.e. the ciphertext length is 5 log2 N − 10 bits. In the other
case we keep the ciphertext length ﬁxed at 60 bits.
The result is depicted in Figure 3 with the conﬁdence in-
tervals as error bars. We see that the conﬁdence intervals
for the diﬀerent data series clearly overlap. Hence we can-
not conclude that randomized order-preserving encryption
improves defense against this cryptanalytic attack. Yet, we
can conclude that randomized order-preserving encryption
is no weaker under this attack.
7.4 Client Storage Space
As mentioned client storage space is a limiting resource for
frequency-hiding order-preserving encryption. We encrypt
experimental data sets and measure the storage consump-
tion of our client data structures.
First, we encrypt a database table with all people in Ger-
many. The German population is roughly n = 8 × 107. We
encrypt the ﬁelds “ﬁrst name”, “last name”, “birthdate” and
“gender”. We estimate the distribution of those ﬁelds using
public information4. We performed 20 test runs and report
the average storage size. The extent of the 90% conﬁdence
is always below 0.05% of the measured value. In none of the
experimental runs we had to rebalance the tree. Our results
are summarized in Table 2.
Overall we achieve a compression ratio of almost 15. This
may suﬃce for small to medium databases with most clients.
We also see that compression performs better for larger ﬁeld
sizes like in ﬁrst and last name. Dictionary compression
performs better for these ﬁelds than for small ﬁelds.
In
fact, for small ﬁeld sizes – as in the gender attribute – our
compression techniques may even increase the storage space.
4http://de.wikipedia.org/wiki/Familienname
www.beliebte-vornamen.de/lexikon
http://
Field
N Field Size Plaintext Size Compressed Size Compression Ratio
First Name
Last Name
Birthdate
Gender
Total
10000
1000000
40000
2
(byte)
49
50
4
1
104
(Mbyte)
3738.4
3814.7
305.2
76.3
7934.6
(Mbyte)
106.1
104.8
90.4
232.4
533.8
35.2
36.4
3.4
0.3
14.9
Table 2: Compression Eﬀect on Table of People in Germany
ber e of distinct plaintexts. Note that without preﬁltering
in our previous experiments the average number of distinct
plaintexts is n. Hence, we achieve an additional compression
of n/e. The extent of the 90% conﬁdence interval is always
below 9.5% of the measured number. We show the number
of distinct ciphertexts in Figure 5.
We see that the number of distinct ciphertexts approx-
imately grows linear with the parameter p. We also see
that the plaintext distribution, i.e. the probability of x = 1,
has minor inﬂuence on the number of distinct ciphertexts.
Furthermore, compression is very eﬀective. We achieve a
compression ratio of over 17000 for p = 0 and still over 900
for p = 0.1%.
We also evaluate the impact of the parameter r. We keep
n = 106 and P r[x = 1] ∈ {0.5, 0.6, 0.7, 0.8, 0.9}. We ﬁx
the parameter p = 0.05%, i.e. the probability of choosing a
new ciphertext without equalizing the distribution is 0.05%
and hence we expect at least 500 distinct ciphertexts. We
also perform 20 test runs and report the average number
e of distinct plaintexts. The extent of the 90% conﬁdence
interval is always below 16.6% of the measured number. We
show the number of distinct ciphertexts in Figure 6.
We see that the number of distinct ciphertexts is slightly
above 500 due to the variance in the input distribution. Yet,
the number approaches 500 as the parameter r increases,
since more variance is tolerated. Again, our compression
is very eﬀective. We achieve a compression ratio roughly
between 1700 (r = 1.025) and 1900 (r = 1.1).
We can conclude that for plaintexts which are not amenable
to our standard compression techniques or very large databases
with resource-constrained clients we can use imperfect frequency-
hiding order-preserving encryption. We remark that imper-
fect frequency-hiding encryption does not achieve our secu-
Figure 6: Number of distinct ciphertexts over the
parameter r for diﬀerent plaintext distributions (p =
0.05)
rity notion of indistinguishability under frequency-analyzing
ordered chosen plaintext attack.
8. CONCLUSIONS
We present a new, strictly more secure order-preserving
encryption scheme. We show that the size of the set of
indistinguishable sequences and hence security is likely to
increase with increasing data sets. We compress the data on
the client by a ratio of almost 15, but can achieve much
higher ratios (of up to several thousands) with some re-
peated ciphertexts and leaking some frequency information.
This allows the user a choice between security and storage
cost.
In summary we provide a new option for encryption data
in the cloud. This option can be favorable when higher
security than deterministic order-preserving encryption is
desired, but client storage cost (and search time) should still
remain low.
Acknowledgements
This work has received funding from the European Union’s
Seventh Framework Programme and Horizon 2020 Research
and Innovation Programme under grant agreements No. 609611,
No. 644579 and No. 644412 of the PRACTICE, ESCUDO-
CLOUD and TREDISEC projects.
9. REFERENCES
[1] http://www.ciphercloud.com/.
[2] http://www.vaultive.com/.
[3] Abadi, D., Madden, S., and Ferreira, M.
Integrating compression and execution in
column-oriented database systems. In Proceedings of
the ACM International Conference on Management of
Data (2006), SIGMOD.
[4] Agrawal, D., El Abbadi, A., Emek¸ci, F., and
Metwally, A. Database management as a service:
challenges and opportunities. In Proceedings of the
25th International Conference on Data Engineering
(2009), ICDE.
[5] Agrawal, R., Kiernan, J., Srikant, R., and Xu,
Y. Order preserving encryption for numeric data. In
Proceedings of the ACM International Conference on
Management of Data (2004), SIGMOD.
[6] Agrawal, S., Agrawal, S., Badrinarayanan, S.,
Kumarasubramanian, A., Prabhakaran, M., and
Sahai, A. Function private functional encryption and
property preserving encryption: new deﬁnitions and
positive results. Tech. Rep. 744, IACR Cryptology
ePrint Archive, 2013.
[7] Andersson, A., and Carlsson, S. Construction of a
tree from its traversals in optimal time and space.
Information Processing Letters 34, 1 (1990).
[8] Binnig, C., Hildenbrand, S., and F¨arber, F.
Dictionary-based order-preserving string compression
for main memory column stores. In Proceedings of the
ACM International Conference on Management of
Data (2009), SIGMOD.
[9] Boldyreva, A., Chenette, N., Lee, Y., and
O’Neill, A. Order-preserving symmetric encryption.
In Proceedings of the 28th International Conference on
Advances in Cryptology (2009), EUROCRYPT.
[10] Boldyreva, A., Chenette, N., and O’Neill, A.
Order-preserving encryption revisited: improved
security analysis and alternative solutions. In
Proceedings of the 31st International Conference on
Advances in Cryptology (2011), CRYPTO.
[11] Boneh, D., Lewi, K., Raykova, M., Sahai, A.,
Zhandry, M., and Zimmerman, J. Semantically
secure order-revealing encryption: multi-input
functional encryption without obfuscation. In
Proceedings of the 34th International Conference on
Advances in Cryptology (2015), EUROCRYPT.
[12] Boneh, D., and Waters, B. Conjunctive, subset,
and range queries on encrypted data. In Proceedings of
the 4th Theory of Cryptography Conference (2007),
TCC.
[13] Gentry, C. Fully homomorphic encryption using
ideal lattices. In Proceedings of the Symposium on
Theory of Computing (2009), STOC.
[14] Goldwasser, S., Kalai, Y. T., Popa, R. A.,
Vaikuntanathan, V., and Zeldovich, N. Reusable
garbled circuits and succinct functional encryption. In
Proceedings of the Symposium on Theory of
Computing (2013), STOC.
[15] Hacig¨um¨us, H., Iyer, B. R., Li, C., and
Mehrotra, S. Executing sql over encrypted data in
the database-service-provider model. In Proceedings of
the ACM International Conference on Management of
Data (2002), SIGMOD.
[16] Hacig¨um¨us, H., Mehrotra, S., and Iyer, B. R.
Providing database as a service. In Proceedings of the
18th International Conference on Data Engineering
(2002), ICDE.
[17] Hildenbrand, S., Kossmann, D., Sanamrad, T.,
Binnig, C., F¨arber, F., and W¨ohler, J. Query
processing on encrypted data in the cloud. Tech. Rep.
735, Department of Computer Science, ETH Zurich,
2011.
[18] Islam, M., Kuzu, M., and Kantarcioglu, M.
Access pattern disclosure on searchable encryption:
ramiﬁcation, attack and mitigation. In Proceedings of
the 19th Network and Distributed System Security
Symposium (2012), NDSS.
[19] Kadhem, H., Amagasa, T., and Kitagawa, H.
Mv-opes: multivalued-order preserving encryption
scheme: a novel scheme for encrypting integer value to
many diﬀerent values. IEICE Transactions on
Information and Systems E93.D (2010), 2520–2533.
[20] Kadhem, H., Amagasa, T., and Kitagawa, H. A
secure and eﬃcient order preserving encryption
scheme for relational databases. In Proceedings of the
International Conference on Knowledge Management
and Information Sharing (2010), KMIS.
[21] Katz, J., Sahai, A., and Waters, B. Predicate
encryption supporting disjunctions, polynomial
equations, and inner products. In Advances in
Cryptology (2008), EUROCRYPT.
[22] Kerschbaum, F., H¨arterich, M., Kohler, M.,
Hang, I., Schaad, A., Schr¨opfer, A., and
Tighzert, W. An encrypted in-memory column-store:
the onion selection problem. In Proceedings of the 9th
International Conference on Information Systems
Security (2013), ICISS.
[23] Kerschbaum, F., and Schr¨opfer, A. Optimal
average-complexity ideal-security order-preserving
encryption. In Proceedings of the 21st ACM
Conference on Computer and Communications
Security (2014), CCS.
[24] Lee, S., Park, T.-J., Lee, D., Nam, T., and Kim,
S. Chaotic order preserving encryption for eﬃcient
and secure queries on databases. IEICE Transactions
on Information and Systems E92.D (2009), 2207–2217.
[25] Liu, D., and Wang, S. Programmable
order-preserving secure index for encrypted database
query. In Proceedings of the 5th International
Conference on Cloud Computing (2012), CLOUD.
[26] Liu, D., and Wang, S. Nonlinear order preserving
index for encrypted database query in service cloud
environments. Concurrency and Computation:
Practice and Experience 25, 13 (2013), 1967–1984.
[27] Lu, Y. Privacy-preserving logarithmic-time search on
encrypted data in cloud. In Proceedings of the 19th
Network and Distributed System Security Symposium
(2012), NDSS.
[28] ¨Ozsoyoglu, G., Singer, D. A., and Chung, S. S.
Anti-tamper databases: querying encrypted databases.
In Proceedings of the 17th Conference on Data and
Application Security (2003), DBSEC.
[29] Pandey, O., and Rouselakis, Y. Property
preserving symmetric encryption. In Proceedings of the
31th International Conference on Advances in
Cryptology (2012), EUROCRYPT.
[30] Popa, R. A., Li, F. H., and Zeldovich, N. An
ideal-security protocol for order-preserving encoding.
In 34th IEEE Symposium on Security and Privacy
(2013), S&P.
[31] Popa, R. A., Redfield, C. M. S., Zeldovich, N.,
and Balakrishnan, H. Cryptdb: protecting
conﬁdentiality with encrypted query processing. In
Proceedings of the 23rd ACM Symposium on Operating
Systems Principles (2011), SOSP.
[32] Shi, E., Bethencourt, J., Chan, H. T.-H., Song,
D. X., and Perrig, A. Multi-dimensional range
query over encrypted data. In Proceedings of the 2007
Symposium on Security and Privacy (2007), S&P.
[33] Song, D. X., Wagner, D., and Perrig, A.
Practical techniques for searches on encrypted data. In
Proceedings of the 21st IEEE Symposium on Security
and Privacy (2000), S&P.
[34] Teranishi, I., Yung, M., and Malkin, T.
Order-preserving encryption secure beyond
one-wayness. In Proceedings of the 20th International
Conference on Advances in Cryptology.
[35] Wozniak, S., Rossberg, M., Grau, S., Alshawish,
A., and Schaefer, G. Beyond the ideal object:
towards disclosure-resilient order-preserving
encryption schemes. In Proceedings of the ACM
Workshop on Cloud Computing Security Workshop
(2013), CCSW.
[36] Xiao, L., Bastani, O., and Yen, I.-L. Security
analysis for order preserving encryption schemes.
Tech. Rep. UTDCS-01-12, Department of Computer
Science, University of Texas Dallas, 2012.
[37] Xiao, L., and Yen, I.-L. A note for the ideal
order-preserving encryption object and generalized
order-preserving encryption. Tech. Rep. 350, IACR
Cryptology ePrint Archive, 2012.
[38] Xiao, L., Yen, I.-L., and Huynh, D. T. Extending
order preserving encryption for multi-user systems.
Tech. Rep. 192, IACR Cryptology ePrint Archive,
2012.
[39] Zukowski, M., Heman, S., Nes, N., and Boncz, P.
Super-scalar ram-cpu cache compression. In
Proceedings of the 22nd International Conference on
Data Engineering (2006), ICDE.