### Experimental Results and Analysis

#### Search Tree Compression
We conducted 20 test runs to evaluate the performance of search tree compression, reporting the average storage size. The 90% confidence interval for the measured sizes was always below 0.1%. In none of our experimental runs did we need to rebalance the tree. The computed compression ratios are presented in Figure 4.

**Figure 4: Compression ratio of dictionary-compressed values over the number of distinct plaintexts \( N \) for different numbers of plaintexts \( n \)**

Our results indicate that the search tree compression achieves a compression ratio of approximately 2 around the central number of distinct plaintexts (\( N \sim \sqrt{n} \)). We conclude that our compression technique performs well for suitable plaintext domains but may require alternative methods for other domains. 

To further evaluate our approach, we also assessed imperfect frequency-hiding order-preserving encryption, as detailed in Section 6.

#### Imperfect Frequency-Hiding Order-Preserving Encryption
We used a plaintext domain of \( N = 2 \), as this parameter yielded the worst overall compression in our previous tests. We encrypted \( n = 10^6 \) plaintexts with probabilities \( P(x = 1) \in \{0.5, 0.6, 0.7, 0.8, 0.9\} \), including skewed distributions. The deviation from the expected number of repetitions was bounded by 2.5% (i.e., \( r = 1.025 \)), and the parameter \( p \) ranged over \{0, 0.025%, 0.05%, 0.075%, 0.1%\}. We performed 20 test runs and reported the average number of distinct ciphertexts. The 90% confidence interval was always below 0.05% of the measured value.

**Figure 5: Number of distinct ciphertexts over the parameter \( p \) for different plaintext distributions (r = 1.025)**

The results show that the number of distinct ciphertexts grows linearly with the parameter \( p \). The plaintext distribution, i.e., the probability of \( x = 1 \), has a minor influence on the number of distinct ciphertexts. Our compression was highly effective, achieving a compression ratio of over 17,000 for \( p = 0 \) and still over 900 for \( p = 0.1\% \).

We also evaluated the impact of the parameter \( r \) while keeping \( n = 10^6 \) and \( P(x = 1) \in \{0.5, 0.6, 0.7, 0.8, 0.9\} \). We fixed \( p = 0.05\% \), expecting at least 500 distinct ciphertexts. The 90% confidence interval was always below 16.6% of the measured number.

**Figure 6: Number of distinct ciphertexts over the parameter \( r \) for different plaintext distributions (p = 0.05%)**

The number of distinct ciphertexts was slightly above 500 due to variance in the input distribution. As \( r \) increased, the number approached 500, indicating more tolerance for variance. Our compression remained highly effective, achieving a compression ratio between approximately 1,700 (for \( r = 1.025 \)) and 1,900 (for \( r = 1.1 \)).

#### Client Storage Space
Client storage space is a critical resource for frequency-hiding order-preserving encryption. We encrypted a database table containing all people in Germany, with a population of approximately \( n = 8 \times 10^7 \). The fields "first name," "last name," "birthdate," and "gender" were encrypted. We estimated the distribution of these fields using public data. We performed 20 test runs and reported the average storage size. The 90% confidence interval was always below 0.05% of the measured value. No tree rebalancing was required in any of the experimental runs.

**Table 2: Compression Effect on Table of People in Germany**

| Field        | N     | Field Size (byte) | Plaintext Size (Mbyte) | Compressed Size (Mbyte) | Compression Ratio |
|--------------|-------|-------------------|------------------------|-------------------------|-------------------|
| First Name   | 10,000 | 49                | 3,738.4                | 106.1                   | 35.2              |
| Last Name    | 1,000,000 | 50               | 3,814.7                | 104.8                   | 36.4              |
| Birthdate    | 40,000 | 4                 | 305.2                  | 90.4                    | 3.4               |
| Gender       | 2     | 1                 | 76.3                   | 232.4                   | 0.3               |
| Total        | -     | 104               | 7,934.6                | 533.8                   | 14.9              |

Overall, we achieved a compression ratio of almost 15, which is sufficient for small to medium-sized databases. Compression was more effective for larger fields like first and last names, where dictionary compression outperformed small fields. For very small fields, such as the gender attribute, our compression techniques might even increase storage space.

#### Conclusion
For plaintexts that are not amenable to standard compression techniques or for very large databases with resource-constrained clients, imperfect frequency-hiding order-preserving encryption can be a viable option. However, it does not achieve the security notion of indistinguishability under frequency-analyzing ordered chosen plaintext attack.

### Acknowledgements
This work was funded by the European Union's Seventh Framework Programme and Horizon 2020 Research and Innovation Programme under grant agreements No. 609611, No. 644579, and No. 644412 of the PRACTICE, ESCUDO-CLOUD, and TREDISEC projects.

### References
[1] http://www.ciphercloud.com/
[2] http://www.vaultive.com/
[3] Abadi, D., Madden, S., and Ferreira, M. Integrating compression and execution in column-oriented database systems. In Proceedings of the ACM International Conference on Management of Data (2006), SIGMOD.
[4] Agrawal, D., El Abbadi, A., Emekçi, F., and Metwally, A. Database management as a service: challenges and opportunities. In Proceedings of the 25th International Conference on Data Engineering (2009), ICDE.
[5] Agrawal, R., Kiernan, J., Srikant, R., and Xu, Y. Order preserving encryption for numeric data. In Proceedings of the ACM International Conference on Management of Data (2004), SIGMOD.
[6] Agrawal, S., Agrawal, S., Badrinarayanan, S., Kumarasubramanian, A., Prabhakaran, M., and Sahai, A. Function private functional encryption and property preserving encryption: new definitions and positive results. Tech. Rep. 744, IACR Cryptology ePrint Archive, 2013.
[7] Andersson, A., and Carlsson, S. Construction of a tree from its traversals in optimal time and space. Information Processing Letters 34, 1 (1990).
[8] Binnig, C., Hildenbrand, S., and Färber, F. Dictionary-based order-preserving string compression for main memory column stores. In Proceedings of the ACM International Conference on Management of Data (2009), SIGMOD.
[9] Boldyreva, A., Chenette, N., Lee, Y., and O’Neill, A. Order-preserving symmetric encryption. In Proceedings of the 28th International Conference on Advances in Cryptology (2009), EUROCRYPT.
[10] Boldyreva, A., Chenette, N., and O’Neill, A. Order-preserving encryption revisited: improved security analysis and alternative solutions. In Proceedings of the 31st International Conference on Advances in Cryptology (2011), CRYPTO.
[11] Boneh, D., Lewi, K., Raykova, M., Sahai, A., Zhandry, M., and Zimmerman, J. Semantically secure order-revealing encryption: multi-input functional encryption without obfuscation. In Proceedings of the 34th International Conference on Advances in Cryptology (2015), EUROCRYPT.
[12] Boneh, D., and Waters, B. Conjunctive, subset, and range queries on encrypted data. In Proceedings of the 4th Theory of Cryptography Conference (2007), TCC.
[13] Gentry, C. Fully homomorphic encryption using ideal lattices. In Proceedings of the Symposium on Theory of Computing (2009), STOC.
[14] Goldwasser, S., Kalai, Y. T., Popa, R. A., Vaikuntanathan, V., and Zeldovich, N. Reusable garbled circuits and succinct functional encryption. In Proceedings of the Symposium on Theory of Computing (2013), STOC.
[15] Hacigümüş, H., Iyer, B. R., Li, C., and Mehrotra, S. Executing SQL over encrypted data in the database-service-provider model. In Proceedings of the ACM International Conference on Management of Data (2002), SIGMOD.
[16] Hacigümüş, H., Mehrotra, S., and Iyer, B. R. Providing database as a service. In Proceedings of the 18th International Conference on Data Engineering (2002), ICDE.
[17] Hildenbrand, S., Kossmann, D., Sanamrad, T., Binnig, C., Färber, F., and Wöhler, J. Query processing on encrypted data in the cloud. Tech. Rep. 735, Department of Computer Science, ETH Zurich, 2011.
[18] Islam, M., Kuzu, M., and Kantarcioglu, M. Access pattern disclosure on searchable encryption: ramifications, attack, and mitigation. In Proceedings of the 19th Network and Distributed System Security Symposium (2012), NDSS.
[19] Kadhem, H., Amagasa, T., and Kitagawa, H. MV-OPES: multivalued-order preserving encryption scheme: a novel scheme for encrypting integer values to many different values. IEICE Transactions on Information and Systems E93.D (2010), 2520–2533.
[20] Kadhem, H., Amagasa, T., and Kitagawa, H. A secure and efficient order-preserving encryption scheme for relational databases. In Proceedings of the International Conference on Knowledge Management and Information Sharing (2010), KMIS.
[21] Katz, J., Sahai, A., and Waters, B. Predicate encryption supporting disjunctions, polynomial equations, and inner products. In Advances in Cryptology (2008), EUROCRYPT.
[22] Kerschbaum, F., Härterich, M., Kohler, M., Hang, I., Schaad, A., Schröpfer, A., and Tighzert, W. An encrypted in-memory column-store: the onion selection problem. In Proceedings of the 9th International Conference on Information Systems Security (2013), ICISS.
[23] Kerschbaum, F., and Schröpfer, A. Optimal average-complexity ideal-security order-preserving encryption. In Proceedings of the 21st ACM Conference on Computer and Communications Security (2014), CCS.
[24] Lee, S., Park, T.-J., Lee, D., Nam, T., and Kim, S. Chaotic order-preserving encryption for efficient and secure queries on databases. IEICE Transactions on Information and Systems E92.D (2009), 2207–2217.
[25] Liu, D., and Wang, S. Programmable order-preserving secure index for encrypted database query. In Proceedings of the 5th International Conference on Cloud Computing (2012), CLOUD.
[26] Liu, D., and Wang, S. Nonlinear order-preserving index for encrypted database query in service cloud environments. Concurrency and Computation: Practice and Experience 25, 13 (2013), 1967–1984.
[27] Lu, Y. Privacy-preserving logarithmic-time search on encrypted data in the cloud. In Proceedings of the 19th Network and Distributed System Security Symposium (2012), NDSS.
[28] Özsoyoglu, G., Singer, D. A., and Chung, S. S. Anti-tamper databases: querying encrypted databases. In Proceedings of the 17th Conference on Data and Application Security (2003), DBSEC.
[29] Pandey, O., and Rouselakis, Y. Property-preserving symmetric encryption. In Proceedings of the 31st International Conference on Advances in Cryptology (2012), EUROCRYPT.
[30] Popa, R. A., Li, F. H., and Zeldovich, N. An ideal-security protocol for order-preserving encoding. In 34th IEEE Symposium on Security and Privacy (2013), S&P.
[31] Popa, R. A., Redfield, C. M. S., Zeldovich, N., and Balakrishnan, H. CryptDB: protecting confidentiality with encrypted query processing. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles (2011), SOSP.
[32] Shi, E., Bethencourt, J., Chan, H. T.-H., Song, D. X., and Perrig, A. Multi-dimensional range query over encrypted data. In Proceedings of the 2007 Symposium on Security and Privacy (2007), S&P.
[33] Song, D. X., Wagner, D., and Perrig, A. Practical techniques for searches on encrypted data. In Proceedings of the 21st IEEE Symposium on Security and Privacy (2000), S&P.
[34] Teranishi, I., Yung, M., and Malkin, T. Order-preserving encryption secure beyond one-wayness. In Proceedings of the 20th International Conference on Advances in Cryptology.
[35] Wozniak, S., Rossberg, M., Grau, S., Alshawish, A., and Schaefer, G. Beyond the ideal object: towards disclosure-resilient order-preserving encryption schemes. In Proceedings of the ACM Workshop on Cloud Computing Security Workshop (2013), CCSW.
[36] Xiao, L., Bastani, O., and Yen, I.-L. Security analysis for order-preserving encryption schemes. Tech. Rep. UTDCS-01-12, Department of Computer Science, University of Texas Dallas, 2012.
[37] Xiao, L., and Yen, I.-L. A note for the ideal order-preserving encryption object and generalized order-preserving encryption. Tech. Rep. 350, IACR Cryptology ePrint Archive, 2012.
[38] Xiao, L., Yen, I.-L., and Huynh, D. T. Extending order-preserving encryption for multi-user systems. Tech. Rep. 192, IACR Cryptology ePrint Archive, 2012.
[39] Zukowski, M., Heman, S., Nes, N., and Boncz, P. Super-scalar RAM-CPU cache compression. In Proceedings of the 22nd International Conference on Data Engineering (2006), ICDE.