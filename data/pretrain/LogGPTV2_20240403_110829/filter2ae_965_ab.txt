快速测试表明, 此函数确实会反射客户端的User-Agent header。正如你可以看到的，输出的又双叒是过滤后的HTML编码:
> craft.request.getUserAgent ()
为了将返回值传递给另一个方法, 我们现在需要使用[Twig的
set调用](https://twig.symfony.com/doc/2.x/tags/set.html) , 并将结果存储在一个新变量中:
> 在Twig中使用变量
这使我们能够以更灵活的方式存储和反射函数。由于我们需要在User-Agent字符串中存储两个参数值, 所以我们需要使用第二种方法作为跳板,
或者我们可以使用Twig的过滤器来执行一些字符串操作。  
在这种情况下,
我使用[slice()](https://twig.symfony.com/doc/2.x/filters/slice.html)把User-Agent
header和多个值合并到一起。
## 拼图完整了
到目前为止, 我们已经在一定范围内了解了一些关于 CMS 和模板引擎的内容。根据我们的知识,
我们现在可以通过调用方法在传递任意变量值时尝试访问目标上的敏感信息。语法应该类似于以下内容:
    {% set dummy = craft.request.getUserAgent()|slice(0,8)%}
    {% set dummy2 = craft.request.getUserAgent()|slice(9,2)%}
    {{craft.config.get(dummy,dummy2)}}
    User-Agent: password db
让我们尝试一下, 从目标的配置文件中提取数据库密码:
> 提取 DB 密码
在目前的情况下, 我们能做的就多了。例如, 我们可以遍历所有 CMS 用户, 记下他们的电子邮件地址, 告诉他们他们的网站需要安全修复:
    {% forauthor incraft.users %}
    {{author.email}}
    {% endfor %}
以下是一些我认为有意思的例子:
> 提取战利品
## 结论
事实证明, 这个问题是由一个叫做 SEOmatic 的 CMS 插件引起的,
你可以在[这里](https://straightupcraft.com/craft-plugins/seomatic)了解更多的信息，还有[这里](https://github.com/nystudio107/craft-seomatic)
据开发人员所说，攻击只适用于在Craft CMS 中没有对应条目的url。原因是 canonicalUrl 字段的默认设置是Twig代码:
    {{craft.app.request.pathInfo | striptags}}
SEOmatic 的工作方式是, 只有与其他情况都不匹配后, 才使用全局设置。大多数页面都会匹配某种其他类型的条目、类别或产品, 在这些情况下,
canonicalUrl 不会被设置为可以包含攻击行为的Twig代码, 因此攻击不会奏效。  
因此, 需要满足以下两个条件才能成为攻击URL。首先，有使用Twig模板 (所以它不会抛出 404), 然后也没有一个条目, 类别, 或产品与之关联。  
我很高兴地确认, 开发人员在问题得到报告后就解决了问题。你可以在这里找到修复后的版本:
这里是修复这个问题的提交: 
## 影响评估:
既然我们生活在一个美丽的信息时代， 现在是时候确定有少公开在互联网上的Craft CMS 实例可能受到此漏洞的影响。让我们从
[Shodan.io](https://www.shodan.io/) 获得并提取一些数据(注: 有些人问我怎么一开始就找到他们的网站，就是靠这个)
> 从Shodan收集数据
为了能够进一步处理信息， 我将把它分成多个文件，按端口号分组:
> 按端口号对数据进行分组
不便的是，我们只能通过Shodan API
查询字符串。就是在Shodan收集的海量信息的数据块里面搜索某个字符串。因此，我需要筛选条目。符合的条目是通过链接头部表明目标是脆弱的，可被此方法攻击的。
> 清洗数据
最后我们从269条中筛选出了244条。到了最后一步: 让我们爬一下剩下来的目标，看看结果是什么:
> 易受攻击的主机
总之，我确定了65个可能会更糟的脆弱站点。然后，
我简单地dump了大概300个管理帐户的电子邮件地址，让他们知道这个问题。很多人很快回复了我，确认了漏洞并已经正确地更新了版本。由于开发者也[在Twitter上声明了问题](https://twitter.com/nystudio107/status/1021847835418009605)，
大多数人应该很快就会升级到修复后版本。
## 最后亿句话:
利用现有的扫描和开发工具总是很容易的。但是，一旦你撞到墙上了。多投入一些时间分析问题，磨刀不误砍柴工。确保识别和处理全面的信息，以便更好地了解你的目标。花费的时间最终会赚回来的。至少你也会学到一些新的东西。
时间表：
  * 2018-07-19: 发现漏洞
  * 2018-07-23: 通知供应商
  * 2018-07-24: 版本3.1.4 发布， 问题已解决
  * 2018-07-29: 分配编号CVE-2018-14716 
  * 2018-07-30: 公开披露
  * 2018-07-31: 将 PoC 添加到Exploit-DB中