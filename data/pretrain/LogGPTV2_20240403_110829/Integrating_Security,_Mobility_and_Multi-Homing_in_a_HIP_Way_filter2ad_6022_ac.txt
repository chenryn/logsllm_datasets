The address(es) depend on the location(s) of the interface.
Even  though  the  actual  assignment  mechanism  is  irrele-
Host identity layer
Host identifiers
Logical new packet structure
translation
IP
HbH RH HIP DO ESP Upper layer
Internetworking layer
IP addresses
Packet structure in practise when ESP is used
translation
(ARP or ND)
IP
HbH RH
DO
ESP Upper layer
Link (network) layer
Link layer addresses, e.g.
Ethernet MAC addresses
HbH = Hop-by-Hop Header
RH = Routing Header
DO = Destination Option Header
Figure 6: The proposed new architecture
Figure 8: The packet structures
vant, it is important to understand that the assignment is ei-
ther  determined  or  at  least  heavily  inﬂuenced  by  its
topological point-of-attachment, i.e. location.
End-point. The logical end-point of communication, i.e. a
participant  in  an  end-to-end  communication.  [2][15][25].
In  most  cases  end-points  are  identical  to  hosts,  and  it  is
usually safe to think about hosts when reading the architec-
ture description. That is, typically a physical node hosts a
single end-point. 
Process. A  communicating  process.  Usually  an  end-point
hosts a number of processes. Sometimes an end-point hosts
only one process, but even then the end-point and the proc-
ess should be conceptually separated. Within an end-point,
the processes are distinguished with Transport Level Iden-
tiﬁers (TLI), e.g. TCP and UDP ports.
Location. A  topological  point-of-attachment  at  the  net-
work. An end-point is said to be reachable at a certain loca-
tion if packets sent to that location are delivered to the end-
point.  In  [2]  and  [14]  these  are  called  (Network) Attach-
ment Points.
Each location is assigned an address by the network. We
consider  these  addresses  static,  or  at  least  very  slowly
changing.  In  the  case  a  single  network  provides  several
global addresses for each host attached to the network (site
multi-homing), we consider that particular network to rep-
resent  several  topological  locations,  one  location  per  ad-
dress.
Address. A name of a location. In addition to acting as lo-
cation  names,  addresses  also  function  as  (partial)  routing
selectors. That  is,  the  routers  within  the  internetwork  use
the address (and possibly other data) in making the deci-
sion where a packet is passed next.
Host ID
1
1
names>
Process
*
1
are hosted by>
End-point
1
has>
*
Interface
0..1
is at>
Address
1
names>
1
*
Location
2
*
Path
Figure 9: The conceptual model, in UML
Topological path. A path, through the internetwork, from 
one  location  to  another  location.  We  only  consider  those
paths  separate  that  can  be  distinguished  on  a  level  above
the routing infrastructure. That is, parallel links and redun-
dant  routes  appearing  within  the  routing  function  are  not
considered  separate  topological  paths. A  topological  path
can be named with an address pair.
Multi-homed end-point. An  end-point  that  is  simultane-
ously reachable at more than one location. Usually this is a
result of the end-point having multiple interfaces, each sep-
arately connected to different locations in the network. In
the case of site multihoming, however, the whole site ap-
pears at two (or more) topologically distinct locations. In
this latter case, the end-point may have just one interface,
but  that  interface  is  considered  to  be  simultaneously  at
more than one location, and therefore assigned more than
one address.
Mobile end-point. An end-point that is serially reachable
at more than one location. Usually this is a result of an end-
point changing the location of (one of) its interface(s). In a
sense,  mobility  is  the  dual  of  multi-homing  in  the  same
sense serialism is the dual of parallelism.
Host Identiﬁer. A public key of a key pair, used to identify
an end-point. We use the term Host Identiﬁer (HI) instead
of the more accurate term end-point identiﬁer, mainly be-
cause we rely quite heavily on the HLP/HIP proposal and
want to be consistent with its terminology.
Each physical node is assumed to generate one or more
public key pairs. The public key of such a pair is used to
identify an end-point hosted on that node. For the purposes
of this paper, it is safe to think that each host is uniquely
identiﬁed with a single key pair, and therefore is identical
to a single end-point. However, there are reasons (such as
anonymity, see [26]) to allow a host to represent itself as a
set of end-points, and to allow the end-points to move be-
tween hosts; see [1].
4.3. Mobility and multihoming
It should be obvious by now that basic mobility and multi-
homing becomes trivial in the new architecture. That is, to
support mobility all that is needed is to make sure that the
binding between (an interface belonging to) a Host ID and
IP address(es) is dynamic. Respectively, to support multi-
homing  all  that  is  required  is  to  make  the  binding  into  a
one-to-many relationship. In practice, dynamism and mul-
tiplicity are achieved with signalling, see Section 5.2.
To  be  more  speciﬁc,  in  the  presented  architecture  the
Host  Identiﬁers  are  used  to  identify  the  communication
end-points, and they have no permanent relationship with
locations or IP addresses. IP addresses, on the other hand,
are used to identify only the topological locations, not end-
points.  Thus,  as  a  result,  the  actual  addresses  used  in  a
packet don’t matter so much as they do in the current archi-
tecture, since the end-points are not identiﬁed with them.
All that is required is that the end-points are able to deter-
mine the addresses currently used by their active peers.
Furthermore, if the packets are integrity protected with
e.g. ESP or AH, the recipient is always able to verify that a
received  packet  was  sent  by  the  alleged  peer  no  matter
what  the  source  and  destination  addresses  are.  Thus,  by
binding IPsec Security Associations to Host Identiﬁers in-
stead of IP addresses, the destination address becomes pure
routing  information,  and  the  source  address  becomes  al-
most  obsolete  [24].  Only  during  connection  setup,  when
the hosts haven’t authenticated each other, does the source
address pay substantial role. Once the peer hosts have se-
cure  bindings  between  the  HIs  and  addresses,  the  source
address is not needed any more by the hosts, and its only
function becomes to carry information about the topologi-
cal path the packet has taken [24].
Packet forwarding agents. In  the  architecture,  basic  mo-
bility support requires that the moving end-point sends sig-
nalling  messages  (location  updates)  to  its  peers.  These
inform the peer about the changes in the addresses that it
can use to reach the host. Thus, in the basic case explicit
packet forwarding is not needed, since the hosts are able to
send  packets  directly  to  each  other.  However,  this  leaves
two problems unaddressed. Firstly, there must be a mecha-
nism that allows an end-point to be contacted independent
of its current location. Secondly, if two end-points move at
the  same  time,  it  is  possible  that  the  signalling  messages
cross each other and never reach their intended destination.
This is usually called the double-jump problem [18]. Intro-
ducing  packet  forwarding  agents  allows  us  to  solve  these
two problems. Thus, we deﬁne a packet forwarding agent
as a network node that forwards all packets sent to a given
IP address (virtual address) to another IP address (real ad-
dress). 
We  now  generalize  the  concept  of  packet  forwarding
agents and, at the same time, fold them into our architec-
ture. As discussed before, a multi-homed host is considered
to be present at several locations at the same time. In func-
tional  terms,  that  means  that  the  host  is  able  to  receive
packets sent to several different IP addresses. On the other
hand, if we have a packet forwarding agent, the end-host is
also able to receive packets sent to the forwarded address.
Thus, in a sense the packet forwarding agent can be con-
sidered  to  represent  a  virtual  interface  of  the  end-point,
and that the end-point is virtually present at the location of
the forwarding agent.
Thus, we deﬁne that the location of an end-point is the
topological point through which the end-point is able to re-
ceive packets. It may be the location of a physical interface
Virtual interfaces
Physical interfaces
Forwarding paths
Figure 10: The virtual interface model
of  the  end-point,  or  it  may  be  the  location  served  by  a
packet forwarding agent. In the latter case, the packet for-
warding agent is considered to act as a virtual interface for
the end-point. The situation is illustrated in Figure 10.
4.4. Architectural elements
Now we are ready to deﬁne the functional components of
our  architecture.  The  basic  components  are  the  internet-
work, the communicating end-points, and the (temporary)
packet forwarding agents. Additionally, we need two exter-
nal  services  and  four  protocols.  Firstly,  there  must  be  a
service  and  corresponding  protocols  that  allow  an  end-
point to learn the current set of addresses that another end-
point  has,  i.e.,  an  address  discovery  service.  Secondly,  a
protocol is needed to allow end-points to inform their peers
about  changes  in  the  addresses  and  status  of  their  inter-
faces. Finally, a protocol is needed for creating new packet
forwarding agents, and to signal changes to them. The ar-
chitecture is described pictorially in Figure 11.
Internetwork. The  internetwork  is  based  on  stateless  IP 
level  routers  just  as  today.  No  changes  are  needed  in  the
network itself. All the currently used IP routers will con-
tinue to function without any changes. This allows the new 
Forwarding control protocol
End-point
Forwarding agent
o l
c
g   p r o t o
a lli n
n
d   si g
n
Internetwork
d -t o - e
n
E
Address discovery protocol
Peer end-point
Address
update
protocol
Address
directory
Figure 11: The elements of the architecture
architecture  to  be  taken  into  use  gradually,  as  the  hosts
adopt the new functionality.
End-points. The communicating end-points are hosted in
network nodes.The end-points are able to communicate in
two ways. Firstly, they may send plain IP packets just as to-
day. In this case, the IP addresses are used to name the tar-
get and origin locations, and the end-point is supposed to
stay  at  the  same  location  long  enough  to  receive  replies.
This form is suitable for fast low cost transactions, such as
DNS  queries.  Secondly,  the  end-points  may  run  the  Host
Layer  Protocol  (HLP),  thereby  authenticating  the  Host
Identiﬁers of each other as explained in Section 5.2. This
allows the end-points to communicate with added security,
mobility, and reliability. 
Packet forwarding agents. The  packet  forwarding  agents
are hosted within the internetwork; for example, in a typi-
cal case an access router would be willing to provide such
an  function  (see  Section 5.3). They  allow,  in  a  controlled
way,  end-points  to  receive  packets  that  are  sent  to  an  ad-
dress (virtual address) that the end-point does not currently
control but that the forwarding agent does. 
Address discovery. An  initial  contact  between  two  end-
points requires that the initiating end-point learns at least
one IP address of the other end-point. This discovery func-
tion is supposed to be implemented by a directory service,
such as the DNS. The details of such a service are beyond
the scope of this paper.
End-to-end signalling. The updates in the end-point inter-
face status must be signalled to the peer end-points. This is
accomplished using the HIP Readdress Packets (REA) [7].
The REA packets are protected in the Host Identity Secu-
rity Context; see Section 5.2 for details.
Forwarding control. The  protocol  to  signal  packet  for-
warding is a function not deﬁned in the HIP speciﬁcations,
and therefore we discuss the situation in Section 5.3. 
Node
End-point
ProcessProcess
End-point
Process
Transport layer
Host Identity layer
Address selection policy
Network layer
Physical
interface
Multihomed
interface
Virtual
interface
IP address
IP address
IP address
Forwarding
agent
IP address
Figure 12: The structure of an end-point
of  IP  addresses.  Finally,  the  communicating  processes
function as today. The only difference is that instead of IP 
addresses  they  use  Host  Identiﬁers. This  is  achieved  in  a
completely backward compatible way, where all well writ-
ten  (IPv6)  applications  will  continue  to  function  without