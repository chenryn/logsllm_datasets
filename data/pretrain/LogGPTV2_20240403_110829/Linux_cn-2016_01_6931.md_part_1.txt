---
author: Danny Morabito
category: 技术
comments_data:
- date: '2016-01-25 20:37:00'
  message: 这也能叫操作系统？你待么逗我？？？顶多顶多算得上Linux下的一款应用罢了……
  postip: 182.148.111.89
  username: fanbt [Firefox 43.0|Fedora]
- date: '2016-01-25 21:36:34'
  message: 这和现在直接在Linux上运行nodejs有什么区别？
  postip: 175.43.121.13
  username: 来自福建泉州的 Sina Weibo 5.7|iOS 9.2 用户
- date: '2016-01-26 14:50:20'
  message: 这个教程写得好，如果高校教材或编程的书都写成这样，天朝编程人才怎么的也能比现在多十个以的数量级，比起我朝上国，世界顶级大牛还是阿三哥籍的多啊
  postip: 60.223.221.28
  username: 来自山西晋中的 Chrome 39.0|Windows XP 用户
- date: '2016-01-26 22:27:51'
  message: 这和直接运行node.js或是python没什么区别。
  postip: 36.62.184.114
  username: 哲学传播者 [Chrome 47.0|GNU/Linux]
- date: '2016-02-02 10:19:33'
  message: 如果说这个是大财，那么Firefox OS还不飞天上去了
  postip: 121.52.226.236
  username: 来自浙江杭州的 Firefox 44.0|Ubuntu 用户
- date: '2016-02-02 10:48:26'
  message: ffmpeg（libav）的作者不是已经把linux内核移植到js平台了吗？那才算真正的基于Javascript的系统吧。
  postip: 211.143.202.74
  username: 来自福建莆田的 Firefox 44.0|GNU/Linux 用户
- date: '2016-02-03 08:51:59'
  message: 居然有 4 个赞，那个其实把模拟器或虚拟机的代码转译为 Javascript，最近那个在浏览器运行 Windows 95 的原理也是这样。
  postip: 118.122.120.235
  username: 来自四川成都的 Chrome 48.0|GNU/Linux 用户
- date: '2016-02-03 15:39:59'
  message: 仔细一看，确实是我注意看，抱歉。项目名称是jslinux，但全名是Javascript PC Emulator，即仍是虚拟机。
  postip: 112.47.6.49
  username: 来自福建的 Firefox 44.0|GNU/Linux 用户
count:
  commentnum: 8
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 16565
date: '2016-01-25 17:40:00'
editorchoice: false
excerpt: 我想大多数人听说过 Node.js，但是你听说过 NodeOS 吗？没错，NodeOS，一个用 Node.js 写的操作系统。好吧，实话说，NodeOS
  用 Linux 内核来处理各种底层任务，比如硬件通讯什么的，但是除此之外，使用的都是 Node.js。NodeOS 的开发始于两年前，创建者的目的很简单，他只是好奇，“是否有可能仅使用
  Node.js 创建一个操作系统呢？”
fromurl: http://www.toptal.com/nodejs/nodeos-the-javascript-based-operating-system
id: 6931
islctt: true
largepic: /data/attachment/album/201601/25/174057ew38q31r82y9yk2c.jpg
permalink: /article-6931-1.html
pic: /data/attachment/album/201601/25/174057ew38q31r82y9yk2c.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我想大多数人听说过 Node.js，但是你听说过 NodeOS 吗？没错，NodeOS，一个用 Node.js 写的操作系统。好吧，实话说，NodeOS
  用 Linux 内核来处理各种底层任务，比如硬件通讯什么的，但是除此之外，使用的都是 Node.js。NodeOS 的开发始于两年前，创建者的目的很简单，他只是好奇，“是否有可能仅使用
  Node.js 创建一个操作系统呢？”
tags:
- Node.js
- NodeOS
- JavaScript
thumb: false
title: 基于 JavaScript 的操作系统你听说过吗？
titlepic: false
translator: wxy
updated: '2016-01-25 17:40:00'
---
我想大多数人听说过 Node.js，但是你听说过 NodeOS 吗？没错，NodeOS，一个用 Node.js 写的操作系统。好吧，实话说，NodeOS 用 Linux 内核来处理各种底层任务，比如硬件通讯什么的，但是除此之外，使用的都是 Node.js。NodeOS 的开发始于两年前，创建者的目的很简单，他只是好奇，“是否有可能仅使用 Node.js 创建一个操作系统呢？” 
![](/data/attachment/album/201601/25/174057ew38q31r82y9yk2c.jpg)
*是否有可能仅使用 Node.js 创建一个操作系统呢？*
### 这个主意怎么样？
我们已经看到了 Node.js 在这几年已经取得如此迅猛的发展，那么我们为何不让它更酷一些呢？比如用它做个操作系统。
### 用户自主的独立文件系统
NodeOS 引入了一个有趣的特性：所有的用户都有一个独立的文件系统，他们在一个简单的文件系统中完成各种工作。因为他们的“主目录”事实上就是他们自己的文件系统的根（root），所以他们可以不需要任何超级权限就可以将软件包安装到系统中，也不需要配置什么，因为软件包默认就安装在他们自己的主目录里面。此外，这样也提供了良好的安全性，如果黑客攻入到了某个账户，那么只能访问到该用户所在的部分，最终的结果就是黑客并不能由此影响到整个系统。
### Node.js 和 NPM
你可以想想，如果一个操作系统使用 Node.js，那就意味着所有在 NPM 中可用的包同时也都是 NodeOS 的软件包。在写作本文时，已经有了超过 21 万的软件包，而且每分每秒都在不断增长。如果几年以后，NodeOS 有了一百万应用，那也没什么好奇怪的。
### 基于 Linux 内核
这看起来并不算什么，Linux 是大多数服务器所采用的操作系统。因为 NodeOS 是基于 Linux 内核的，所以你只需要很少的修改就可以使用那些给其它的 Linux 发行版开发的应用了。
### 不好的消息
我非常希望 NodeOS 是一个已经完成的作品，但是，它现在还不是。它仍然缺少一些服务器操作系统所必需的关键功能。比如，缺失完整的 BASH 工具集，包括 ps、tail、nano 和 grep 等都没有。更糟糕的是，你也不能把它当成桌面操作系统使用，因为它没有 GUI。当然，你可以实现一些缺失的功能，只需要使用一点点 JavaScript，但是默认情况下，这些功能现在都还没有，真糟糕。
### 好吧，那我可以试试 NodeOS 吗？
#### 使用 Docker 来体验
最容易、最快捷的体验 NodeOS 的方法如下：
1. 一台运行 Mac OSX 或 Linux 计算机，也许 Windows 也可以，但是我没试过。
2. Docker。
当你安装好 Docker 之后，运行一个 NodeOS 实例是很容易的。你只需要执行如下命令就可以了， Docker 会为你完成这魔法般的一切：
```
sudo docker run -t -i nodeos/nodeos
```
![](/data/attachment/album/201601/25/174059uahhh3r00z034uh0.jpg)
*最容易、最快捷的体验 NodeOS 的方法是通过 Docker。*
当你运行了上述命令，Docker 会自动从仓库下载 NodeOS 的镜像，并将其安装到一个虚拟环境中。安装好之后，会打开一个连接到 NodeOS 的 SSH 会话。
#### 不用 docker 呢？
有些情况下你也许不能使用 Docker 来体验，或者是你想体验一下最新版本的 NodeOS 。在写作本文时，NodeOS 的镜像已经是两个月前生成的了，而开发版本则是六天前更新的。所以，如果你希望使用最新版本，你应该从源代码开始。这也不算很难，但是要花费一些时间。你需要：
1. 一台运行 Linux 的计算机。你可以在 OS X 上编译它，但是跨平台编译需要花费很多时间，对于 Windows 也如此。
2. Linux 编译构建相关的工具（make、g++、gcc、autoconf）。
3. Qemu。
4. 时间，真的需要很多。
如果万事俱备，你就可以从源代码开始编译了：
1. 下载项目源代码：`bash git clone PI:EMAIL:NodeOS/NodeOS.git`。
2. 使用下列命令编译： `cd NodeOS` 并 `npm install`。
3. 我逐字引用了其官方文档的话：“拿上爆米花去看场电影吧，不开玩笑，真的。”，是的，它需要很多时间，做些有意思的事情去吧。
4. 执行 `bash npm start` 来在 Qemu 中运行 NodeOS。
#### 可以工作了吗？
当安装完成后，我们可以通过在 NodeOS 的 shell 中执行 `ls`命令来看看它是否工作了。输出类似如下：
```
[ 'etc', 'lib', 'lib64', 'root', 'bin', 'sys', 'usr', 'share', 'proc' ]
```
如果显示如上，说明一些基本的命令可以工作了。但是如果我们想要知道网卡地址呢？在 Linux 下，这个命令是 `ifconfig` ，让我们试试：
```
command not found: ifconfig
```
看起来没有 `ifconfig` 命令。这是因为 NodeOS 默认没有 `ifconfig`命令。现在怎么办？很简单，NodeOS 有一个集成的包管理器（类似 `apt` 或 `yum`） ，叫做 `npkg`，它是基于 Node 的 NPM 的，很容易使用。可以通过如下命令很方便的安装 `ifconfig` ：
```
npkg install bin-ifconfig
```
如果一切正常， `ifconfig` 命令现在就可以在 shell 中使用了。我们再次试着执行一下，输出类似如下：（我替换了其中的 MAC 地址）：
```
eth0: flags=8863 mtu 1500
  ether 01:23:45:67:89:ab 
  inet6 f0cd::ef01:0203:0405:181%en1 prefixlen 64 scopeid 0x5 
  inet 192.168.0.21 netmask 0xffffff00 broadcast 192.168.0.21
  nd6 options=1
  media: autoselect
  status: active