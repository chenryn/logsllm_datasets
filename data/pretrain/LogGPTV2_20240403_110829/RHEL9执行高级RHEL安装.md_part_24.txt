    选项一同使用；其本身无效。
-   `--escrowcert=URL_of_X.509_certificate`{.literal} -
    将这个设备的数据加密密钥保存在 `/root`{.literal}
    中的一个文件中，使用来自 [*URL_of_X.509_certificate*]{.emphasis}
    指定的 URL 的 X.509 证书加密。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义。
-   `--backuppassphrase`{.literal} -
    向这个设备添加随机生成的密码短语。将该密语存储在 `/root`{.literal}
    中的文件中，使用通过 `--escrowcert`{.literal} 指定的 X.509
    证书进行加密。只有在指定了 `--escrowcert`{.literal}
    时这个选项才有意义。
-   `--pbkdf=PBKDF`{.literal} - 为 LUKS keylot 设置
    PBKDF（Password-Based Key Derivation Function）算法。另请参阅 man
    page [*cryptsetup(8)*]{.emphasis}。只有在指定了
    `--encrypted`{.literal} 时这个选项才有意义。
-   `--PBKDF-memory=PBKDF_MEMORY`{.literal} - 设置 PBKDF
    的内存成本。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis}。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义。
-   `--PBKDF-time=PBKDF_TIME`{.literal} - 设置 PBKDF
    密码处理所花费的毫秒数。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis} 中的
    `--iter-time`{.literal}。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义，并且与 `--pbkdf-iterations`{.literal} 相互排斥。
-   `--PBKDF-iterations=PBKDF_ITERATIONS`{.literal} -
    设定直接迭代数量并避免 PBKDF 基准测试。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis} 中的
    `--pbkdf-force-iterations`{.literal}。只有在指定了
    `--encrypted`{.literal} 时这个选项才有意义，并且与
    `--pbkdf-time`{.literal} 相互排斥。
:::
::: title
**示例**
:::
下面的例子展示，假定系统里有三个 SCSI 磁，如何为 `/`{.literal} 创建 RAID
1 分区，为 `/home`{.literal} 创建 RAID
5。它还创建三个交换分区，每个驱动器都有一个。
``` screen
part raid.01 --size=6000 --ondisk=sda
part raid.02 --size=6000 --ondisk=sdb
part raid.03 --size=6000 --ondisk=sdc
part swap --size=512 --ondisk=sda
part swap --size=512 --ondisk=sdb
part swap --size=512 --ondisk=sdc
part raid.11 --size=1 --grow --ondisk=sda
part raid.12 --size=1 --grow --ondisk=sdb
part raid.13 --size=1 --grow --ondisk=sdc
raid / --level=1 --device=rhel8-root --label=rhel8-root raid.01 raid.02 raid.03
raid /home --level=5 --device=rhel8-home --label=rhel8-home raid.11 raid.12 raid.13
```
::: itemizedlist
**备注**
-   如果您丢失了 LUKS
    密码短语，那么就完全无法访问所有加密的分区及其数据。丢失的密码短语是无法找回的。但是，您可以使用
    `--escrowcert`{.literal} 保存加密密码短语，并使用
    `--backuppassphrase`{.literal} 选项创建加密密码短语备份。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#reqpart_kickstart-commands-for-handling-storage}reqpart {.title}
:::
`reqpart`{.literal} Kickstart
命令是可选的。它自动创建您的硬件平台所需的分区。这为带有 UEFI
固件的系统包括一个 `/boot/efi`{.literal} 分区，带有 BIOS 固件和 GPT
的系统包括 `biosboot`{.literal} 分区，为 IBM Power 系统包括
`PRePBoot`{.literal} 分区。
::: title
**Syntax**
:::
``` screen
reqpart [--add-boot]
```
::: itemizedlist
**选项**
-   `--add-boot`{.literal} -
    除基础命令创建的特定于平台的分区之外，还创建一个单独的
    `/boot`{.literal} 分区。
:::
::: itemizedlist
**备注**
-   这个命令不能与 `autopart`{.literal} 命令一同使用，因为
    `autopart`{.literal} 会做所有 `reqpart`{.literal}
    命令要做的工作，另外，还创建其他分区或者逻辑卷，比如 `/`{.literal}
    和 `swap`{.literal}。与 `autopart`{.literal}
    不同，这个命令只创建特定于平台的分区，并将驱动器的其余部分留空，允许您创建自定义布局。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#snapshot_kickstart-commands-for-handling-storage}snapshot {.title}
:::
`snapshot`{.literal} Kickstart 命令是可选的。在安装过程中使用 LVM
精简卷快照来创建 LVM 精简卷快照。这可让您在安装前或安装后备份逻辑卷。
要创建多个快照，请多次添加 `snaphost`{.literal} Kickstart 命令。
::: title
**Syntax**
:::
``` screen
snapshot vg_name/lv_name --name=snapshot_name --when=pre-install|post-install
```
::: itemizedlist
**选项**
-   `vg_name/lv_name`{.literal} -
    设置卷组和逻辑卷的名称，以便从中创建快照。
-   `--name=snapshot_name`{.literal} -
    设置快照的名称。这个名称在卷组中必须是唯一的。
-   `--when=pre-install|post-install`{.literal} -
    如果在安装开始前或安装完成后创建快照，则设置。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#volgroup_kickstart-commands-for-handling-storage}volgroup {.title}
:::
`volgroup`{.literal} Kickstart
命令是可选的。它创建一个逻辑卷管理（LVM）组。
::: title
**Syntax**
:::
``` screen
volgroup name [OPTIONS] [partition*]
```
::: itemizedlist
**必填选项**
-   [*name*]{.emphasis} - 新卷组的名称。
:::
::: itemizedlist
**选项**
-   [*partition*]{.emphasis} - 用作卷组存储支持的物理卷分区。
-   `--noformat`{.literal} - 使用现有卷组而不对其进行格式化。
-   `--useexisting`{.literal} -
    使用现有卷组并重新格式化它。如果使用这个选项，不要指定[*分区*]{.emphasis}。例如：
    ``` screen
    volgroup rhel00 --useexisting --noformat
    ```
-   `--pesize=`{.literal} - 以 KiB
    为单位设置卷组物理扩展的大小。默认值为 4096（4 MiB），最小值为
    1024（1 MiB）。
-   `--reserved-space=`{.literal} - 指定在 MiB
    的卷组中保留未使用的空间量。只适用于新创建的卷组。
-   `--reserved-percent=`{.literal} -
    指定卷组空间占未使用空间的百分比。只适用于新创建的卷组。
:::
::: itemizedlist
**备注**
-   首先创建分区，然后创建逻辑卷组，然后创建逻辑卷。例如：
    ``` screen
    part pv.01 --size 10000
    volgroup my_volgrp pv.01
    logvol / --vgname=my_volgrp --size=2000 --name=root
    ```
-   使用 Kickstart 安装 Red Hat Enterprise Linux
    时，请勿在逻辑卷和卷组名称中使用短划线 (`-`{.literal})
    字符。如果使用这个字符，安装会完成，但 `/dev/mapper/`{.literal}
    目录会列出这些卷和卷组的每个横线都会加倍。例如，名为
    `volgrp-01`{.literal} 的卷组，其包含名为 `logvol-01`{.literal}
    的逻辑卷将被列为 `/dev/mapper/volgrp--01-logvol--01`{.literal}。
    这个限制只适用于新创建的逻辑卷和卷组名称。如果您使用
    `--noformat`{.literal}
    选项重复使用现有的名称，则不会更改它们的名称。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#zerombr_kickstart-commands-for-handling-storage}zerombr {.title}
:::
`zerombr`{.literal} Kickstart 命令是可选的。`zerombr`{.literal}
会初始化磁盘上找到的所有无效分区表，并销毁具有无效分区表的磁盘的所有内容。当在带有未格式化的
Direct Access Storage Device(DASD)磁盘的 64 位 IBM Z
系统中执行安装时，需要这个命令，否则未格式化的磁盘不会被格式化并在安装过程中使用。
::: title
**Syntax**
:::
``` screen
zerombr
```
::: itemizedlist
**备注**
-   在 64 位 IBM Z 上，如果指定了
    `zerombr`{.literal}，安装程序可以看到的直接访问存储设备 (DASD)
    都会使用 dasdfmt
    自动低级格式化。这个命令还可防止用户在互动安装过程中进行选择。
-   如果没有指定
    `zerombr`{.literal}，且安装程序至少可以看到一个未格式化的
    DASD，非互动的 Kickstart 安装将无法成功退出。
-   如果没有指定
    `zerombr`{.literal}，且安装程序至少可以看到一个未格式化的
    DASD，如果用户同意格式化所有可见和未格式化的
    DASD，则会退出交互式安装。要绕过这个过程，请只激活那些您要在安装过程中使用的
    DASD。您总是可在安装完成后添加更多的 DASD。
-   这个命令没有选项。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#zfcp_kickstart-commands-for-handling-storage}zfcp {.title}
:::
`zfcp`{.literal} Kickstart 命令是可选的。它定义了光纤通道设备。
这个选项只适用于 64 位 IBM Z。必须指定以下所有选项。
::: title
**Syntax**
:::
``` screen
zfcp --devnum=devnum --wwpn=wwpn --fcplun=lun
```
::: itemizedlist
**选项**
-   `--devnum=`{.literal} - 设备号（zFCP 适配器设备总线 ID）。
-   `--WWPN=`{.literal} - 设备的全球端口名称 (WWPN)。形式为 16
    位数字，前面带有 `0x`{.literal}。
-   `--fcplun=`{.literal} - 该设备的逻辑单元号 (LUN)。形式为 16
    位数字，前面带有 `0x`{.literal}。
:::
::: title
**示例**
:::
``` screen
zfcp --devnum=0.0.4000 --wwpn=0x5005076300C213e9 --fcplun=0x5022000000000000
```
:::
:::
::: section
::: titlepage
# []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#kickstart-commands-for-addons-supplied-with-the-rhel-installation-program_kickstart-commands-and-options-reference}RHEL 安装程序提供的附加组件的 Kickstart 命令 {.title}
:::
这部分中的 Kickstart 命令与 Red Hat Enterprise Linux
安装程序默认提供的附加组件相关：Kdump 和 OpenSCAP。
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#addon-com_redhat_kdump_kickstart-commands-for-addons-supplied-with-the-rhel-installation-program}%addon com_redhat_kdump {.title}
:::
`%addon com_redhat_kdump`{.literal} Kickstart 命令是可选的。这个命令配置
kdump 内核崩溃转储机制。
::: title
**Syntax**
:::
``` screen
%addon com_redhat_kdump [OPTIONS]
%end
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这个命令的语法比较特殊，因为它是一个附加组件,不是内置的 Kickstart 命令。
:::