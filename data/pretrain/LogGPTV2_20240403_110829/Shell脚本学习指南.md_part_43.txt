方括号将任意数字或字符串表达式括起来作为素引。如果你先前未看过这样的数组，可
能会觉得难以理解，下面的awk代码以办公室名录程序来解释，让你更容易了解其功用：
ST0-ss.[qog]auoqdaa
to-ss.=[uo]auoqd
以任意值为索引的数组，称之为关联数组，因为它们的名称与值是相关联的，就像人类
所做的一样。重要的是，awk将其应用于数组中，允许查找（find）、插人（insert）以
及删除（remove）等操作，在一定的时间内完成，与存储多少项目无关。
www.TopSage.com
---
## Page 259
awk的惊人表现
awk里的数组无须声明也无须配置：数组的存储空间在引用新元素时会自动增长，数组COIm
存储空间是稀疏的（sparse）：只有那些确实被引用到的元素才会配置。即你可以在
x[1]=3.14159后面接x[10000000]=*tenmi11ion*，而不必填满元素2到
9999999，绝大多数的程序语言在使用数组时，要求所有元素是相同类型，不过awk数
组并无此限制。
当元素不再需要时，其存储空间可回收再利用。deletearray[index]会从数组中别
除元素，而近期的awk实现则允许以deletearray删除所有的元素。我们将在稍后
9.9.6节中说明另一种删除数组元素的方式。
一个变量不能同时用作标量变量和数组变量。当你应用delete语句删除数组的元素
（element）的时候，不会删除它的名称。因此，像这样的代码：
x[1] - 123
delete x
68L = x
会引发awk发出提示，告诉你不可以给数组名称赋值。
有时，需要使用多个索引找出表格数据中的唯一值，例如邮局使用的门牌号码、街名及
邮政编码，以识别邮件递送位置。成对的列/栏可以识别二维网格内的位置，例如象棋
盘。参考书目通常会记录作者、书名、编辑、出版社和出版年份，以识别一本特定书籍。
鞋店店员需要知道制造商、型号、颜色及大小，才能从仓库中为顾客找到他想要的鞋子。
awk通过将“以逗点分隔的索引列表”看作一个字符申；而使用多个索引模拟数组。然
而，由于逗点本身也可能出现在索引I值内，因此awk使用存储在内建变量SUBSEP里的
无法打印字符串取代索引分隔字符（逗点）。POSIX宜称它的值是由实现期定义；一般
来说，其默认值为"\034“（ASCII字段分隔控制字符，FS），但你如果需要在索引值里
使用该字符串，则你可以更改它。因此，当你写maildrop[53，“OakLane"，“T4Q
7XV"]，awk会将索引I列表转换为字符串表达式·53*SUBSEP“OakLane”SUBSEP
T4Q7XV"，且使用它的字符事值作为索引。这样的结构是可以被推翻的，不过我们不
建议你这样做，下面这些语句都显示相同的项目：
print mai1drop[53, *Oak Lane*, *T4Q 7xv*]
print mai1drop[*53\0340ak Lane^034T4Q 7xv*]
很明显，如果你稍后改变了SUBSEP的值，将会使得已经存储数据的索引失效，所以，
SUBSEP其实应该在每个程序里只设置一次，在BEGIN操作里。
一且适当地重新调整思路，利用关联数组，可以解决许多数据处理的问题。针对像awk
这样的简单程序语言来说，它们已经展现了自己是一个优秀的设计选择。
www.TopSage.com
---
## Page 260
248
第9章
9.3.6命令行参数
awk对于命令行的自动化处理，意味着awk程序几乎不需要关心它们自己，这点与C、
C++、Java以及Shell的处理全然不同，使用后面这些程序的设计师，习惯于明白确切地
处理命令行参数，
awk通过内建变量ARGC（参数计数）与ARGV（参数向量，或参数值），让命令行参数
可用。下面简短的程序说明其用法：
S cat showarge.awk
BBGIN {
print *ARGC =*, ARGC
for (k = 0; k  outfile*)
system（）函数将在稍后9.7.8节中说明。
9.4记录与字段
在awk程序化模式中，通过输入文件隐含循环的每一次选代，会处理单一记录（record），
通常是一行文本。记录可进一步再分割为更小的字符串，叫做字段（field）。
9.4.1记录分隔字符
尽管记录通常是被换行字符所分隔的数行文本，但awk允许更具通用性地通过记录分隔
字符内建变量RS。
在传统的与POSIX的awk里，RS必须是单一字面字符，例如换行符号（默认值），或是
空字符串。后者会被特殊处理：记录是由一个或多个空行所分隔的段落，且位于文件起
始或结尾处的空行会被忽略。字段则再由换行字符，或FS里所设置的任何字符加以分
隔。
gawk与mawk提供了一个重要的扩展功能：Rs可以是正则表达式，也就是提供比单一字
符还长的长度。因此，RS='+匹配于字面上的一个加号、然而RS=“：+匹配于
一个或多个冒号。这提供了更强大的记录规格，我们在9.6节中，将此应用到部分范例。
使用正则表达式记录分隔字符时，匹配分隔字符的文本不再是由RS值来决定。gawk以
内建变量RT中的语言扩展来提供此功能，mawk则不支持。
如果没有RS的正则表达式扩展，当它们遇到要匹配跨行的情况时，要将正则表达式模
拟成记录分隔字符是很难的，因为绝大多数的UNIX文本处理工具是一次处理一行，有
时，你可以使用tr将换行符号转换为其他未用到的字符，让流串成极长的一行。然而，
这时常会遇到其他工具程序里缓冲区大小限制的冲突。gawk、mawk和emacs是少数几
个没有面向行的数据润览限制的程序。
9.4.2字段分隔字符
字段被此是被匹配字段分隔字符正则表达式（可在变量FS里取得）的当前字符串值分
隔。
www.TopSage.com
---
## Page 263
awk的惊人表现
251
FS的默认值为单一空格（space），它接受特殊的解释方式：一个或多个空白字符（空格
与制表字符）以及行的开头与结尾的空白，都将被忽路。因此，当输人行为：
alpha beta ganma
alphabetagama
这两行对于使用FS默认值的awk程序来说是一样的：具有值"alpha'、“beta”与
“gamma”的三个字段。当数据是由人为输入时，这个功能特别方便。
当使用单一空格分隔字段的少有情况时、只要设置FS=“[1”以正好匹配一个空格
即可。在这样的设置下，前置与结尾的空白不会再被忽略。而下面这两个例子也会报告
不同的字段数（输人记录的开头与最结尾各有两个空格）：
（ d）..&-xe 1.x xp .o S
3:un deux trois
0qxd}.[1.a-x1.xxmp .o S
7:un deux trois
第二个例子看到了七个字段：""、"、“un”、“deux"、“trois"、"以及""，
FS只有在它超过一个字符时，才会被视为正则表达式。FS=”.指的是以.作为字
段分隔字符：而不是正则表达式所指的任何单一字符。
现代的awk实现也允许FS为一个空字符串，每一字符均为一个分开的字段。但是旧式
的实现，则解读成每条记录只有一个字段。POSIX宜称，这种行为仅在未标明空字段分
隔字符时有效，
9.4.3字段
字段可以特殊名称S1、S2、S3、、SNF供awk程序使用。字段引用无须是固定的，有
必要的话，它们还可以转换（通过截断）为整数值：假定k为3，则值Sk、S（1+2）、
$（27/9）、$3.14159、$*3.14159*，以及$3，都引1用到第三个字段。
特殊字段名称$0引用到当前记录，初始值是从输入流中读取，且记录分隔字符不是记
录的一部分，引用到0到NF范围以上的字段编号是不会有错：它们会返回空字符串，且
不会建立新字段，除非你指定值给它们。如引用到分数或非数字，则字段编号是在实现
期定义的。引用负值字段编号则会发生极严重的错误，在我们测试过的所有实现下都是
这样。POSIX宜称引用到任何非负数以外的字段编号都是未指定的。
字段就如同一般变量，也可娱值，例如S1=“alef·是合法的，但会有一个较大的副
www.TopSage.com
---
## Page 264
252
第9章
作用：如果连续引用完整的记录，则它从字段的当前值中重新组合在一起，但是由输出
字段分隔符的内建变量OFS给定字符串的分隔，默认为单一空格。
9.5
模式与操作
模式与操作构成awk程序的核心。awx的非传统数据驱动程序模式，使得它更吸引用户
使用，也成就了许多awk程序的简洁形式。
9.5.1模式
模式由字符串与/或数值表达式构建而成：一且它们计算出当前输人记录的值为非零
（真），则实行结合性的操作，如果模式是正则表达式，则意指此表达式会被拿来与整个
输人记录进行匹配，就好像你已经写S0-/regexp/而非只是/regexp/。下面例子
老选定模式时，常用到的几种形式：
NP == 0
选定空记录
NF > 3
选定拥有三个字段以上的记录
NR / , //
选定HTL文件里的主体
/ [aeiouy] [aeiouy]/, /[~aeiouy][*aeiouy] /
选定起始于两个元音，结尾为两个
辅音的记录
在BEGIN操作里，PILENAME、FNR、NP与NR初始都未定义：引I用到它们时，会返回
如果程序里仅包括BEGIN模式的操作，则awk会在完成最后一个操作之后退出，而不
需读取任何文件。
进人第一个END操作时，FILENAME是最后一个要处理的输人文件。而FNR、NP和NR
则会保留它们从最后一条输入记录而来的值。在END操作里的S0值是不可靠的：gawk
与mawk会保留它，但nawk不会，而POSIX则是静默。
www.TopSage.com
---
## Page 265
awk的惊人表现
V253
9.5.2操作
lopsage.com
到目前为止，我们已提及了在选定记录时要用到的大部分awk语言元素。而操作段落则
是可选地接在一个模式之后，也就是操作所在之处：它标明了如何处理该记录。
awk提供许多语句类型，可允许使用任意程序的构建。不过，我们要到后面的9.7节才
会详细说明这部分，在这里，除了指定语句之外，我们只考虑简单的print语句。
以最简单的形式来说，纯print意指在标准输出上，打印当前的输入记录（So），接着
是输出记录分隔字符ORS的值，默认为单一换行字符。因此，下面这些程序所做的全是
相同的操作：
NR > 0 (print }
1