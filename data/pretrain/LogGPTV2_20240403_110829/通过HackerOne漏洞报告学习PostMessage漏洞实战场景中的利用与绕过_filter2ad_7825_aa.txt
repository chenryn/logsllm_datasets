# 通过HackerOne漏洞报告学习PostMessage漏洞实战场景中的利用与绕过
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 前言
这是一篇关于`postMessage`漏洞分析的文章，主要通过hackerone平台披露的Bug
Bounty报告，学习和分析`postMessage`漏洞如何在真实的场景中得到利用的。
## 0x01 什么是PostMessage
根据Mozilla开发文档描述：
> The window.postMessage() method safely enables cross-origin communication
> between Window objects; e.g., between a page and a pop-up that it spawned,
> or between a page and an iframe embedded within it.
也就是说，`window.postMessage()`方法可以安全地实现`Window对象`之间的跨域通信。例如，一个页面和它所产生的弹出窗口之间，或者一个页面和嵌入其中的`iframe`之间进行。
这里，我们看一个例子：
假设我们有一个主网站`1.html`与另一个网站`2.html`进行通信。在第二个网站中，有一个后退按钮，当第一个网站的导航改变时，这个按钮就会改变。例如，在网站1中，我们导航到
`changed.html`，那么网站2中的后退按钮就会指向
`changed.html`。为此，使用`postMessage`方法将网站1的值发送到网站2。
`1.html`中的代码如下:
        Website 1
网站1中有两个按钮：
  * 1 . 第一个是通过`openChild()`函数打开一个包含`2.html`的弹出窗口。
  * 2 . 第二个是通过`sendMessage()`函数发送消息。要做到这一点，需要设置一个消息，定义`msg`变量，然后调用`postMessage(msg,'*')`。
`2.html`中的代码如下:
        Website 2
            Recipient of postMessage
                    Go back
网站2中有一个链接和一个按钮:
  * 1 . 链接处理重定向，`href`字段根据`window.addEventListener("message", (event)`接收到的数据而变化。接收到消息后，从`event.data`中读取事件中的数据并将url并传递给`href`。
  * 2 . 按钮调用函数`closeMe()`关闭窗口。
## 0x02 一个基础漏洞的简例
###  XSS漏洞的实现
`PostMessages`如果执行不当，可能导致信息泄露或跨站脚本漏洞（XSS）。  
在这种情况下，`2.html`在没有验证源的情况下就准备接收一个消息，因此我们可以将网页`3.html`作为`iframe`加载`2.html`，并调用`postMessage()`函数来操作`href`值。
        XSS PoC
在这里例子中，恶意的`msg`变量包含数据`{url:
"javascript:prompt(1)"};`，该数据将被发送到`2.html`。`2.html`处理后，将` 如果不希望收到来自其他网站的消息，不要为任何消息添加事件监听器的。这可以完全避免此类安全问题。
>
>
> 如果希望从其他站点接收消息，需要对源和可能的源验证发送方的身份，因为任何窗口都可以向任何其他窗口发送消息，并且不能保证未知的发送者不会发送恶意消息。但是，在验证了身份之后仍然应该验证接收到的消息的语法，否则，也可能出现跨站点脚本攻击。
>
>
> 当使用postMessage向其他窗口发送数据时，一定要指定一个准确的目标，而不是*。恶意网站可以在不知情的情况下改变窗口的位置，安全的设置可以拦截使用postMessage发送的数据。
根据文档的方案，应当将`1.html`中的:
    child.postMessage(msg,'*')
修改为:
    child.postMessage(msg,'2.html')
将`2.html`中的:
    window.addEventListener("message", (event)=>{    
    ...