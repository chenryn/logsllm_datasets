title:How Do Tor Users Interact With Onion Services?
author:Philipp Winter and
Anne Edmundson and
Laura M. Roberts and
Agnieszka Dutkowska-Zuk and
Marshini Chetty and
Nick Feamster
How Do Tor Users Interact With Onion Services?
Philipp Winter, Anne Edmundson, and Laura M. Roberts, Princeton University; 
Agnieszka Dutkowska-Żuk, Independent;  
Marshini Chetty and Nick Feamster, Princeton University
https://www.usenix.org/conference/usenixsecurity18/presentation/winter
This paper is included in the Proceedings of the 
27th USENIX Security Symposium.
August 15–17, 2018 • Baltimore, MD, USA
ISBN 978-1-939133-04-5
Open access to the Proceedings of the 27th USENIX Security Symposium is sponsored by USENIX.How Do Tor Users Interact With Onion Services?
Philipp Winter
Princeton University
Agnieszka Dutkowska- ˙Zuk
Independent
Anne Edmundson
Princeton University
Marshini Chetty
Princeton University
Laura M. Roberts
Princeton University
Nick Feamster
Princeton University
Abstract
Onion services are anonymous network services that are
exposed over the Tor network. In contrast to conventional
Internet services, onion services are private, generally not
indexed by search engines, and use self-certifying domain
names that are long and difﬁcult for humans to read. In
this paper, we study how people perceive, understand, and
use onion services based on data from 17 semi-structured
interviews and an online survey of 517 users. We ﬁnd that
users have an incomplete mental model of onion services,
use these services for anonymity and have varying trust in
onion services in general. Users also have difﬁculty dis-
covering and tracking onion sites and authenticating them.
Finally, users want technical improvements to onion ser-
vices and better information on how to use them. Our
ﬁndings suggest various improvements for the security
and usability of Tor onion services, including ways to au-
tomatically detect phishing of onion services, more clear
security indicators, and ways to manage onion domain
names that are difﬁcult to remember.
1
Introduction
The Tor Project’s onion services provide a popular way
of running an anonymous network service. In contrast
to anonymity for clients (e.g., obfuscating a client IP ad-
dress using a virtual private network), Tor onion services
provide anonymity for servers, allowing a web server to
obfuscate its network location (speciﬁcally, its IP address).
An operator of a web service may need to anonymize the
location of a web service to escape harassment, speak out
against power, or voice dissenting opinions.
Onion services were originally developed in 2004 and
have recently seen growing numbers of both servers and
users. As of June 2018, The Tor Project’s statistics count
more than 100,000 onion services each day, collectively
serving trafﬁc at a rate of nearly 1 Gbps. In addition to
web sites, onion services include metadata-free instant
messaging [4] and ﬁle sharing [15]. The Tor Project
currently does not have data on the number of onion
service users, but Facebook reported in 2016 that more
than one million users logged into its onion service in one
month [20].
Onion services differ from conventional web services
in four ways; First, they can only be accessed over the Tor
network. Second, onion domains are hashes over their
public key, which make them difﬁcult to remember. Third,
the network path between client and the onion service is
typically longer, increasing latency and thus reducing the
performance of the service. Finally, onion services are
private by default, meaning that users must discover these
sites organically, rather than with a search engine.
In this paper, we study how users cope with these id-
iosyncrasies, by exploring the following questions:
• What are users’ mental models of onion services?
• How do users use and manage onion services?
• What are the challenges of using onion services?
Because onion services depend on the Tor Browser and
the underlying Tor network to exchange trafﬁc, some of
our study also explored users’ mental models of Tor itself,
but this topic is not the focus of our paper.
To answer these questions, we employed a mixed-
methods approach. First, we conducted exploratory inter-
views with Tor and onion service users to guide the de-
sign of an online survey. We then conducted a large-scale
online survey that included questions on Tor Browser,
onion service usage and operation, onion site phishing,
and users’ general expectations of privacy. Next, we con-
ducted follow-up interviews to further explore the topics
and themes that we discovered in the exploratory inter-
views and survey. We complemented this qualitative data
with an analysis of “leaked” DNS lookups to onion do-
mains, as seen from a DNS root server; this data gave
us insights into actual usage patterns and allowed us to
corroborate some of the ﬁndings from the interviews and
surveys.
USENIX Association
27th USENIX Security Symposium    411
We ﬁnd that many Tor users misunderstand technical
aspects of onion services, such as the nature of the do-
main format, rendering these users more vulnerable to
phishing attacks. Second, we ﬁnd that users have many is-
sues using and managing onion services, including having
trouble discovering and tracking new onion domains. Our
data also suggests that users may visit onion domains that
are slight variations of popular onion domains, suggesting
that typos or phishing attacks may occur on onion do-
mains. Third, users want improvements to onion services
such as improved performance and easier ways to keep
track of and verify onion domains as authentic. Many
of the shortcomings that we discover could be addressed
with straightforward and immediate improvements to the
Tor Browser, including improved security indicators and
mechanisms to automatically detect domains that may be
typos or phishing attacks.
Tor is currently testing the next generation of onion
services, which will address various security issues and
upgrade to faster, future-proof cryptography. The ﬁndings
from our work can inform the design of privacy and secu-
rity enhancements to onion services and Tor Browser at a
critical time as these improvements are being deployed.
This paper makes the following contributions:
• We provide new, large-scale empirical evidence from
Tor users that sheds light on how these users perceive,
use, and manage onion services. Our work conﬁrms
and extends previous ﬁndings on Tor Browser users’
mental models [9].
• We provide empirical evidence that characterizes
onion domain name lookups based on a dataset from
the .onion requests from DNS B root, both extend-
ing previous work on onion domain usage [18, 33]
and corroborating our ﬁndings about usability and
security problems that we identiﬁed in the survey
and interview data.
• Based on our ﬁndings, we identify usability obsta-
cles to the adoption of onion services and suggest
possible design enhancements, including publishing
mechanism for onion services and a Tor Browser ex-
tension that allows its users to securely and privately
bookmark onion domains.
All code, data, and auxiliary resources are available at
https://nymity.ch/onion-services/.
The rest of this paper is structured as follows. Section 2
provides background on onion services, and Section 3
presents related work. Section 4 presents the methods
for our interviews, online survey, and DNS data analy-
sis. Section 5 presents results, Section 6 discusses the
implications of these ﬁndings, and Section 7 concludes.
Tor Circuit
Tor Browser
Guard
Middle
Onion Service
Guard
Rendezvous
Middle
Tor Circuit
Middle
Figure 1: A path to an onion service typically has six Tor
relays. Both the client and the onion service create a Tor circuit
(comprising two and three relays, respectively) to a rendezvous.
2 Background: What Are Onion Services?
Originally called “hidden services”, onion services were
renamed in 2015 to reﬂect the fact that they provide more
than just the “hiding” of a service [11]—more importantly,
they provide end-to-end security and self-certifying do-
main names. Beyond The Tor Project’s nomenclature, the
“web” of onion services is occasionally referred to as the
“Dark Web”. In this paper, we use only the term onion
services.
Onion services are TCP-based network services that are
accessible only over the Tor network and provide mutual
anonymity: the Tor client is anonymous to the server,
and the server is anonymous to the client. Clients access
onion services via onion domains that are meaningful
only inside the Tor network. A path between a client and
onion service has six Tor relays by default, as shown in
Figure 1; the client builds a circuit to a “rendezvous” Tor
relay, and the onion service builds a circuit to that same
relay. Neither party learns the other’s IP address.
To create an onion domain, a Tor daemon generates an
RSA key pair, computes the SHA-1 hash over the RSA
public key, truncates it to 80 bits, and encodes the result
in a 16-character base32 string (e.g., expyuzz4wqqyqhjn).
Because an onion domain is derived directly from its
public key, onion domains are self-certifying: if a client
knows a domain, it automatically knows the correspond-
ing public key. Unfortunately, this property makes the
onion domain difﬁcult to read, write, or remember.
As of February 2018, The Tor Project is deploying the
next generation of onion services, whose domains have
56 characters [16, § 6] that include a base32 encoding
of the onion service’s public key, a checksum, and a ver-
sion number. New onion services will also use elliptic
curve cryptography, allowing the entire public key to be
embedded in the domain, as opposed to only the hash of
the public key. These changes will naturally improve the
security of onion services but have important implications
for usability, particularly as unreadable onion domain
names get longer.
One way to make onion domains more readable
is to repeatedly generate RSA keys until the result-
412    27th USENIX Security Symposium
USENIX Association
(a) Conventional domain.
(b) Onion service.
Figure 2: Tor Browser 7.0.10’s user interface on Windows
10 when accessing the Tor Project website via a conventional
domain and the corresponding onion service. The onion service
lacks a padlock; Tor developers are addressing this issue [1].
ing domain contains some desired string (e.g., “face-
These so-called vanity onion domains in-
book”).
clude Facebook (facebookcorewwwi.onion), ProPublica
(propub3r6espa33w.onion), and the New York Times
(nytimes3xbfgragh.onion). Vanity onion domains still
typically have strings of characters that are not meaning-
ful words, but they may be easier to memorize. These
domains are relatively expensive to create: given base32’s
alphabet size of 32 characters, a vanity preﬁx of length
n takes an average of 0.5· 32n key creations, Given a set
of domains that contain a vanity preﬁx, one can search
this set for a domain that is the easiest to remember, for
example by using a Markov model to ﬁlter domains that
resemble English words. The popular scallion tool [30]
parallelizes the search for vanity domains.
Even if the onion domain is more readable, the user still
needs to have a way of discovering the onion service in the
ﬁrst place. In contrast to conventional network services,
onion services are designed to be difﬁcult to discover. The
operator of an onion service must manually advertise the
domain, for example by manually adding it to onion site
search engines such as Ahmia [22]. The lack of a go-to
service such as a “Google for onion services” prompted
the community to devise various ways to disseminate
onion services through a variety of search engines and
curated lists.
Tor Browser aims to make user access to onion domains
seamless. Figure 2a shows the interface when accessing
The Tor Project’s web site; Figure 2b shows a connection
to the corresponding onion site. Additionally, because the
unreadability of onion domains can make clients more
susceptible to phishing attacks, website operators who
want to provide their website as an onion service and do
not care about their own anonymity can get an extended
validation (EV) digital certiﬁcate for their .onion domain
so that clients can be assured that they are connecting to
the correct site. For example, Facebook’s onion service
has a certiﬁcate associated with it, and this added layer of
security is reﬂected in the Tor Browser.
3 Related Work
Usage and mental models of Tor Browser. Forte et al.
studied the privacy practices of contributors to open col-
laboration projects such as the Tor Project and Wikipedia
to learn about how privacy concerns affect their contri-
bution practices [9]. The study, based on 23 interviews,
found that contributors worry about an array of threats,
including surveillance, violence, harassment, and loss
of opportunity. This study was not focused on hidden
services at all. Additionally, Gallagher et al. conducted
semi-structured interviews to understand both why people
use Tor Browser and how they understand the technol-
ogy [10]. The study found that experts tend to have a
network-centric view of the Tor network and use it fre-
quently, whereas non-experts have a goal-oriented view
and see Tor Browser as a black-box service. Our work cor-
roborates these ﬁndings but is focused on onion services,
rather than generally on Tor Browser.
Usability of Tor Browser installation. Tor Browser has
seen many usability improvements since its creation in
2003 [31], from a Tor “button” to Tor Browser Bundle
(now called the Tor Browser). Ten years ago, Clark et
al. used cognitive walkthroughs to study how users in-
stall, conﬁgure, and run Tor Browser [5]. The work re-
vealed hurdles such as jargon-laden documentation, con-
fusing menus, and insufﬁcient visual feedback. Norcie et
al. identiﬁed “stop-points” in the installation and use of
the Tor Browser Bundle [21]; these stop-points require
user action but instead cause confusion. the study rec-
ommended various changes to the installation process
and evaluated them in a follow-up study. Lee et al. [14]
studied the usability of Tor Launcher, the graphical con-
ﬁguration tool that allows users to conﬁgure Tor Browser,
and found that 79% of users’ connection attempts in a
simulated censored environment failed, but that various
design improvements could reduce these difﬁculties.
Usability of onion domain names. Previous work aimed
to improve the usability of onion domain names. Sai and
Fink proposed a mnemonic system that maps 80-bit onion
domains to sentences [26]. Their work is inspired by
mnemonicode, which maps binary data to words [36].
Victors et al. designed the Onion Name System [35],
which allows users to reference an onion service by a
readable, globally unique identiﬁer. Kadianakis et al.
designed an API that allows Tor clients to conﬁgure name
systems (e.g., GNS [28] or OnioNS [35]) on a per-domain
basis [12].
Onion domain usage patterns. If a conventional DNS
resolver attempts to resolve an .onion domain (as might
happen when a user enters such a domain name into a nor-
mal browser), the resulting DNS lookup for the domain
will “leak”to the DNS root servers. Previous studies have
USENIX Association
27th USENIX Security Symposium    413
taken advantage of this leaked information to characterize
the popularity of various onion domains [18, 33]. We
build on previous work, applying similar analysis with a
focus on whether the lookups suggest usability problems
with onion services or the presence of phishing attacks.
4 Method
We used a mixed-methods approach involving interview
and survey data, as well as analysis of DNS query data.
This section details our interviews (Section 4.1), large-
scale online survey (Section 4.2), and the DNS dataset
that we use for our analysis (Section 4.3).1
Interviews
4.1
To help us understand users’ mental models of onion ser-
vices, onion service usage, and the challenges and beneﬁts
of onion services, we conducted qualitative interviews,
which allowed us to design the survey.