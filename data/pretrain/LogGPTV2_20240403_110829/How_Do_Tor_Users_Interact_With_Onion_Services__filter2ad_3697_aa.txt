# How Do Tor Users Interact With Onion Services?

**Authors:**
- Philipp Winter, Anne Edmundson, and Laura M. Roberts, Princeton University
- Agnieszka Dutkowska-Żuk, Independent
- Marshini Chetty and Nick Feamster, Princeton University

**Publication:**
- Proceedings of the 27th USENIX Security Symposium
- August 15–17, 2018, Baltimore, MD, USA
- ISBN 978-1-939133-04-5
- Open access sponsored by USENIX
- [Paper Link](https://www.usenix.org/conference/usenixsecurity18/presentation/winter)

## Abstract
Onion services are anonymous network services accessible over the Tor network. Unlike conventional Internet services, onion services are private, not indexed by search engines, and use self-certifying domain names that are long and difficult to read. This paper examines how people perceive, understand, and use onion services based on data from 17 semi-structured interviews and an online survey of 517 users. Our findings indicate that users have an incomplete mental model of onion services, primarily use them for anonymity, and exhibit varying levels of trust. Users also face challenges in discovering, tracking, and authenticating onion sites. They desire technical improvements and better information on using these services. Our results suggest several enhancements for the security and usability of Tor onion services, including automatic detection of phishing, clearer security indicators, and better management of hard-to-remember onion domain names.

## 1. Introduction
The Tor Project's onion services offer a popular method for running anonymous network services. Unlike client-side anonymity (e.g., obfuscating a client IP address with a virtual private network), onion services provide server-side anonymity, allowing a web server to hide its network location (specifically, its IP address). This is useful for operators who need to anonymize their web service to avoid harassment, speak out against power, or express dissenting opinions.

Onion services, introduced in 2004, have seen a significant increase in both servers and users. As of June 2018, The Tor Project's statistics show more than 100,000 onion services daily, collectively serving traffic at nearly 1 Gbps. In addition to websites, onion services include metadata-free instant messaging and file sharing. While Facebook reported over one million users logging into its onion service in 2016, The Tor Project does not track the number of onion service users.

Onion services differ from conventional web services in four key ways:
1. **Accessibility:** They can only be accessed over the Tor network.
2. **Domain Names:** Onion domains are hashes of their public keys, making them difficult to remember.
3. **Latency:** The network path between the client and the onion service is longer, increasing latency and reducing performance.
4. **Privacy:** Onion services are private by default, requiring organic discovery rather than search engine indexing.

In this paper, we explore how users cope with these characteristics by addressing the following questions:
- What are users' mental models of onion services?
- How do users use and manage onion services?
- What are the challenges of using onion services?

Our study uses a mixed-methods approach, combining exploratory interviews, a large-scale online survey, and analysis of DNS query data to provide comprehensive insights.

## 2. Background: What Are Onion Services?
Originally called "hidden services," onion services were renamed in 2015 to reflect their broader capabilities, including end-to-end security and self-certifying domain names. These services are TCP-based and accessible only over the Tor network, providing mutual anonymity: the client is anonymous to the server, and vice versa. Clients access onion services via onion domains, which are meaningful only within the Tor network. A typical path between a client and an onion service involves six Tor relays, as shown in Figure 1.

To create an onion domain, a Tor daemon generates an RSA key pair, computes the SHA-1 hash of the public key, truncates it to 80 bits, and encodes the result in a 16-character base32 string. Because the domain is derived directly from the public key, it is self-certifying, but this makes it difficult to read, write, or remember.

As of February 2018, The Tor Project is deploying the next generation of onion services, featuring 56-character domains that include the full public key, a checksum, and a version number. These changes improve security but pose new usability challenges, particularly with longer, unreadable domain names.

One way to make onion domains more readable is to generate RSA keys until the resulting domain contains a desired string, creating so-called "vanity" domains. Examples include Facebook, ProPublica, and the New York Times. However, even with vanity domains, users still need to discover the onion service, typically through manual advertising or specialized search engines.

Tor Browser aims to simplify access to onion domains, but the unreadability of these domains can make clients more susceptible to phishing attacks. To mitigate this, website operators can obtain extended validation (EV) digital certificates for their .onion domains, ensuring clients connect to the correct site.

## 3. Related Work
### Usage and Mental Models of Tor Browser
Forte et al. studied privacy practices of contributors to open collaboration projects like the Tor Project and Wikipedia, finding that contributors worry about surveillance, violence, harassment, and loss of opportunity [9]. Gallagher et al. conducted semi-structured interviews to understand why people use Tor Browser and how they understand the technology, finding that experts have a network-centric view, while non-experts see it as a black-box service [10]. Our work corroborates these findings but focuses specifically on onion services.

### Usability of Tor Browser Installation
Tor Browser has seen many usability improvements since its creation in 2003, including a Tor "button" and the Tor Browser Bundle. Clark et al. used cognitive walkthroughs to study user installation and configuration, revealing hurdles such as jargon-laden documentation and confusing menus [5]. Norcie et al. identified "stop-points" in the installation process, recommending various changes [21]. Lee et al. studied the usability of Tor Launcher, finding that 79% of connection attempts in a simulated censored environment failed, but design improvements could reduce these difficulties [14].

### Usability of Onion Domain Names
Previous work aimed to improve the usability of onion domain names. Sai and Fink proposed a mnemonic system mapping 80-bit onion domains to sentences [26]. Victors et al. designed the Onion Name System, allowing globally unique, readable identifiers [35]. Kadianakis et al. designed an API for configuring name systems on a per-domain basis [12].

### Onion Domain Usage Patterns
Studies have analyzed leaked DNS lookups to characterize the popularity of various onion domains [18, 33]. We build on this work, focusing on whether lookups suggest usability problems or phishing attacks.

## 4. Method
We used a mixed-methods approach involving interviews, surveys, and DNS query data analysis. This section details our methods:

### 4.1 Interviews
To understand users' mental models, usage, and the challenges and benefits of onion services, we conducted qualitative interviews, which informed the design of our survey.