### 1. 用户和系统服务信息

以下是系统中部分用户和服务的信息：

- **Avahi mDNS/DNS-SD**
  - UID: 70
  - GID: 70
  - 主目录: /var/run/avahi-daemon
  - 登录 Shell: /sbin/nologin

- **Rpcbind Daemon**
  - UID: 32
  - GID: 32
  - 主目录: /var/lib/rpcbind
  - 登录 Shell: /sbin/nologin

- **RPC Service User**
  - UID: 29
  - GID: 29
  - 主目录: /var/lib/nfs
  - 登录 Shell: /sbin/nologin

- **radvd**
  - UID: 75
  - GID: 75
  - 主目录: /
  - 登录 Shell: /sbin/nologin

- **ntp**
  - UID: 38
  - GID: 38
  - 主目录: /etc/ntp
  - 登录 Shell: /sbin/nologin

- **gdm**
  - UID: 42
  - GID: 42
  - 主目录: /var/lib/gdm
  - 登录 Shell: /sbin/nologin

- **postfix**
  - UID: 89
  - GID: 89
  - 主目录: /var/spool/postfix
  - 登录 Shell: /sbin/nologin

- **sshd**
  - UID: 74
  - GID: 74
  - 描述: Privilege-separated SSH
  - 主目录: /var/empty/sshd
  - 登录 Shell: /sbin/nologin

- **tcpdump**
  - UID: 72
  - GID: 72
  - 主目录: /
  - 登录 Shell: /sbin/nologin

- **mysql**
  - UID: 27
  - GID: 27
  - 描述: MySQL Server
  - 主目录: /var/lib/mysql
  - 登录 Shell: /bin/false

### 2. 操作表记录

#### 2.1 问题
练习表记录的操作，包括：
- 表记录的插入
- 表记录的更新
- 表记录的查询
- 表记录的删除

#### 2.2 步骤

##### 步骤一：创建 `stu_info` 表，并确保 `stu_info` 表记录为空

1. 连接到 MySQL 数据库：
   ```sh
   [root@dbsvr1 ~]# mysql -uroot -p
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 19
   Server version: 5.7.17 MySQL Community Server (GPL)
   Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   ```

2. 切换到 `userdb` 数据库并创建 `stu_info` 表：
   ```sql
   mysql> use userdb;
   Reading table information for completion of table and column names
   You can turn off this feature to get a quicker startup with -A
   Database changed
   mysql> CREATE TABLE stu_info(
   -> name varchar(12) NOT NULL,
   -> gender enum('boy', 'girl') DEFAULT 'boy',
   -> age int(3) NOT NULL
   -> );
   Query OK, 0 rows affected (0.23 sec)
   ```

3. 删除 `stu_info` 表的所有记录（如果存在）：
   ```sql
   mysql> DELETE FROM stu_info;
   Query OK, 0 rows affected (0.00 sec)
   ```

4. 确认删除结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   Empty set (0.00 sec)
   ```

##### 步骤二：练习表记录的操作

1. **插入记录时，指定记录的每一个字段的值**：
   ```sql
   mysql> INSERT INTO stu_info VALUES
   -> ('Jim', 'girl', 24),
   -> ('Tom', 'boy', 21),
   -> ('Lily', 'girl', 20);
   Query OK, 3 rows affected (0.15 sec)
   Records: 3 Duplicates: 0 Warnings: 0
   ```

   确认插入结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +------+--------+------+
   | name | gender | age  |
   +------+--------+------+
   | Jim  | girl   | 24   |
   | Tom  | boy    | 21   |
   | Lily | girl   | 20   |
   +------+--------+------+
   3 rows in set (0.00 sec)
   ```

2. **插入记录时，只指定记录的部分字段的值**：
   ```sql
   mysql> INSERT INTO stu_info(name, age)
   -> VALUES('Jerry', 27);
   Query OK, 1 row affected (0.04 sec)

   mysql> INSERT INTO stu_info(name, age)
   -> VALUES('Mike', 21);
   Query OK, 1 row affected (0.05 sec)
   ```

   确认插入结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +--------+--------+------+
   | name   | gender | age  |
   +--------+--------+------+
   | Jim    | girl   | 24   |
   | Tom    | boy    | 21   |
   | Lily   | girl   | 20   |
   | Jerry  | boy    | 27   |
   | Mike   | boy    | 21   |
   +--------+--------+------+
   5 rows in set (0.00 sec)
   ```

3. **更新表记录时，若未限制条件，则适用于所有记录**：
   ```sql
   mysql> UPDATE stu_info SET age = 10;
   Query OK, 5 rows affected (0.04 sec)
   Rows matched: 5 Changed: 5 Warnings: 0
   ```

   确认更新结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +--------+--------+------+
   | name   | gender | age  |
   +--------+--------+------+
   | Jim    | girl   | 10   |
   | Tom    | boy    | 10   |
   | Lily   | girl   | 10   |
   | Jerry  | boy    | 10   |
   | Mike   | boy    | 10   |
   +--------+--------+------+
   5 rows in set (0.00 sec)
   ```

4. **更新表记录时，可以限制条件，只对符合条件的记录有效**：
   ```sql
   mysql> UPDATE stu_info SET age = 20 WHERE gender = 'boy';
   Query OK, 3 rows affected (0.04 sec)
   Rows matched: 3 Changed: 3 Warnings: 0
   ```

   确认更新结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +--------+--------+------+
   | name   | gender | age  |
   +--------+--------+------+
   | Jim    | girl   | 10   |
   | Tom    | boy    | 20   |
   | Lily   | girl   | 10   |
   | Jerry  | boy    | 20   |
   | Mike   | boy    | 20   |
   +--------+--------+------+
   5 rows in set (0.00 sec)
   ```

5. **删除表记录时，可以限制条件，只删除符合条件的记录**：
   ```sql
   mysql> DELETE FROM stu_info WHERE age < 18;
   Query OK, 0 rows affected (0.00 sec)
   ```

   确认删除结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +--------+--------+------+
   | name   | gender | age  |
   +--------+--------+------+
   | Tom    | boy    | 20   |
   | Jerry  | boy    | 20   |
   | Mike   | boy    | 20   |
   +--------+--------+------+
   3 rows in set (0.00 sec)
   ```

6. **删除表记录时，如果未限制条件，则会删除所有的表记录**：
   ```sql
   mysql> DELETE FROM stu_info;
   Query OK, 3 rows affected (0.00 sec)
   ```

   确认删除结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   Empty set (0.00 sec)
   ```

### 3. 查询及匹配条件

#### 3.1 问题
练习常见的 SQL 查询及条件设置。

#### 3.2 步骤

##### 步骤一：根据任务要求建立员工档案表 `stu_info`

1. 连接到 MySQL 数据库：
   ```sh
   [root@dbsvr1 ~]# mysql -u root -p
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 5
   Server version: 5.6.15 MySQL Community Server (GPL)
   Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   ```

2. 切换到 `userdb` 数据库并创建 `stu_info` 表：
   ```sql
   mysql> USE userdb;
   Reading table information for completion of table and column names
   You can turn off this feature to get a quicker startup with -A
   Database changed
   mysql> CREATE TABLE stu_info(
   -> name varchar(12) NOT NULL,
   -> gender enum('boy', 'girl') DEFAULT 'boy',
   -> age int(3) NOT NULL
   -> );
   Query OK, 0 rows affected (0.03 sec)
   ```

3. 确认表结构：
   ```sql
   mysql> DESC stu_info;
   +---------+------------------+------+-----+---------+-------+
   | Field   | Type             | Null | Key | Default | Extra |
   +---------+------------------+------+-----+---------+-------+
   | name    | varchar(12)      | NO   |     | NULL    |       |
   | gender  | enum('boy','girl') | YES  |     | boy     |       |
   | age     | int(3)           | NO   |     | NULL    |       |
   +---------+------------------+------+-----+---------+-------+
   3 rows in set (0.01 sec)
   ```

4. 向 `stu_info` 表插入几条测试记录：
   ```sql
   mysql> INSERT INTO stu_info VALUES
   -> ('Jim', 'girl', 24),
   -> ('Tom', 'boy', 21),
   -> ('Lily', 'girl', 20),
   -> ('Jerry', 'boy', 27),
   -> ('Mike', 'boy', 21);
   Query OK, 5 rows affected (0.06 sec)
   Records: 5 Duplicates: 0 Warnings: 0
   ```

   确认插入结果：
   ```sql
   mysql> SELECT * FROM stu_info;
   +--------+--------+------+
   | name   | gender | age  |
   +--------+--------+------+
   | Jim    | girl   | 24   |
   | Tom    | boy    | 21   |
   | Lily   | girl   | 20   |
   | Jerry  | boy    | 27   |
   | Mike   | boy    | 21   |
   +--------+--------+------+
   5 rows in set (0.00 sec)
   ```

##### 步骤二：练习常见 SQL 查询及条件设置

1. **常用的表记录统计函数**：
   - 查询 `stu_info` 表一共有多少条记录：
     ```sql
     mysql> SELECT COUNT(*) FROM stu_info;
     +----------+
     | COUNT(*) |
     +----------+
     |        5 |
     +----------+
     1 row in set (0.00 sec)
     ```

   - 计算 `stu_info` 表中各学员的平均年龄、最大年龄、最小年龄：
     ```sql
     mysql> SELECT AVG(age), MAX(age), MIN(age) FROM stu_info;
     +-----------+-----------+-----------+
     | AVG(age)  | MAX(age)  | MIN(age)  |
     +-----------+-----------+-----------+
     | 22.6000   | 27        | 20        |
     +-----------+-----------+-----------+
     1 row in set (0.00 sec)
     ```

   - 计算 `stu_info` 表中男学员的个数：
     ```sql
     mysql> SELECT COUNT(gender) FROM stu_info WHERE gender = 'boy';
     +---------------+
     | COUNT(gender) |
     +---------------+
     |             3 |
     +---------------+
     1 row in set (0.00 sec)
     ```

2. **字段值的数值比较**：
   - 列出 `stu_info` 表中年龄为 21 岁的学员记录：
     ```sql
     mysql> SELECT * FROM stu_info WHERE age = 21;
     +--------+--------+------+
     | name   | gender | age  |
     +--------+--------+------+
     | Tom    | boy    | 21   |
     | Mike   | boy    | 21   |
     +--------+--------+------+
     2 rows in set (0.00 sec)
     ```

通过以上步骤，您可以熟练掌握 MySQL 中的基本表操作和查询。