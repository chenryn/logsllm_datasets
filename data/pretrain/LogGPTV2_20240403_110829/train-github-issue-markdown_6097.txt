### Issue Description

In Julia versions 0.6 and master, I can only produce one deprecation warning per Julia session. This behavior is different from version 0.5.2, where both deprecation warnings are correctly displayed.

### Reproduction Steps

#### In Julia 0.6-rc2 and master:
```julia
julia> f2(x) = 2; f4(x) = 4;
julia> @deprecate f1(x) f2(x);
julia> @deprecate f3(x) f4(x);
julia> f1(1)
WARNING: f1(x) is deprecated, use f2(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] f1(::Int64) at ./deprecated.jl:51
 [3] eval(::Module, ::Any) at ./boot.jl:235
 [4] eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:66
 [5] macro expansion at ./REPL.jl:97 [inlined]
 [6] (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:73
while loading no file, in expression starting on line 0
2

julia> f3(1) # Why does this not warn?
4
```

#### In Julia 0.5.2:
```julia
julia> f2(x) = 2; f4(x) = 4;
julia> @deprecate f1(x) f2(x);
julia> @deprecate f3(x) f4(x);
julia> f1(1)
WARNING: f1(x) is deprecated, use f2(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in f1(::Int64) at ./deprecated.jl:50
 in eval(::Module, ::Any) at ./boot.jl:234
 in eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:64
 in macro expansion at ./REPL.jl:95 [inlined]
 in (::Base.REPL.##3#4{Base.REPL.REPLBackend})() at ./event.jl:68
while loading no file, in expression starting on line 0
2

julia> f3(1)
WARNING: f3(x) is deprecated, use f4(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in f3(::Int64) at ./deprecated.jl:50
 in eval(::Module, ::Any) at ./boot.jl:234
 in eval_user_input(::Any, ::Base.REPL.REPLBackend) at ./REPL.jl:64
 in macro expansion at ./REPL.jl:95 [inlined]
 in (::Base.REPL.##3#4{Base.REPL.REPLBackend})() at ./event.jl:68
while loading no file, in expression starting on line 0
4
```

### Summary

- **Julia 0.6 and master**: Only the first deprecation warning is shown. Subsequent calls to deprecated functions do not trigger a warning.
- **Julia 0.5.2**: Both deprecation warnings are correctly displayed.

This issue appears to be a significant bug, especially during a period of new releases and efforts to fix deprecation warnings.