用的例程中，而是停在了调用语句后面一条语句中。”真是让人忍
俊不禁。在做分支或调用的时候，架构使用的是“延迟槽”，以便让
指令管线完整。所以Sam看到的行为是正确的。
Helen也有过类似的经历，她打电话说，编译器对她代码中一条重要
的语句做了优化。她在机器码级别一步步地执行，到达调用语句。
源窗口中源代码的位置和执行的机器指令的位置是对应的。她说：
“看看，调用还没有结束，赋值就已经完成了。”我们的优化功能把
赋值语句移到了延迟槽中。如果她能多执行一步机器码，她可能就
会惊奇地发现她没有立即跳到被调用的例程，而是会看到赋值完
成。
尾声
开发HADS这样的大型工具可能是一个成本高昂的事情。除了要获
取前端使用的编译技术使用权外，还要利用外面的咨询师和霍尼韦
尔的工程师。虽然人数不多，但也是有成本的。项目中的某些经理
似乎对于支出有所抱怨。在项目进行的过程中，有一个外面公司并
发的AMD29050的Ada编译器可供使用了。就目标受众而言，这种
267
---
## Page 269
编译器潜在的市场不大，它的目标客户只有777项目。可能是霍尼
韦尔公司中的某些人鼓动编译器开发商开发一套工具来取代
HADS，或是在HADS遭遇失败时可以作为一条退路。有一天在走廊
里，一位叫做Bruce的经理走到我的跟前说：“因为已经有一个现成
的编译器可以使用了，所以他们准备毙掉HADS项目。”很自然，这
个消息令人担忧，倒不是因为我的工作问题，我还有很多事情可以
做，而是因为我们为自己制作出来的高品质产品感到骄傲，不想看
着它被荒废掉。但是Bruce被公认为是一个喜欢散布谣言的人，喜欢
让其他人感到不自在。所以我们也没有采取什么特别行动，继续按
照计划行事。等到那个编译器并发出来的时候，HADS团队已经得
到证明，取得了巨大成功。有人针对那个编译器做过一些评估，但
是很明显，HADS编译器技高一筹。
HADS小团队非常成功，并发了一个大型的、高质量的系统，而且
没有错过任何一个截止日期。当然，我们有一些777团队不具备的
优势：例如，有一套标准说明了Ada的目的，也就是说，从项目第
一天并始，基本需求就是明确的。另外一个非常大的优势是我们不
需要像777项目的瀑布生命周期模型那样，编写那么多客户文档。
除了DO-178B认证所需要的部分运行环境文档外，我们只编写了外
部用户文档和确实有必要参考的内部文档。这种做法让HADS团队
在处理事情时比777团队更容易一些。
但是还有一些其他有关团队的因素让团队取得了成功。是什么让一
个开始时丑陋的团队变成了一个漂亮而成功的团队呢？
最明显的改变是我们换走了一些出工不出力、敷衍了事的人。结果
我们的团队虽然变小了，但是更值得信赖了。找一些不可信赖的人
可不是一件好事。在大一点的团队中，如果某人不“全力以赴”，在
相当长的一段时间内影响都还不算大。但是在小型团队中，每个人
在做什么都是很明显的。我们发现如果能够有一小组值得信赖的
人，情况会好得多。能够完成大部分工作的小团队也需要足以胜任
工作。我们中很多人都没有并发过编译器或相关工具，但是基本都
参加过一些难度很大的项目，在编程中获得了大量的能力。并发编
译器的经验似乎不是特别重要，正确地使用软件工程原理的经验似
乎才是重要的。
但是关键之处绝不仅仅在于值得信赖与能力。一种良好的同事关系
也发展起来了。我们都具备几个产生成功的特征。最重要的是，我
们都知道自己是优秀的。因为我们知道自己是优秀的，我们对于个
268
---
## Page 270
人完成的工作也不担心得到表扬或受到责备。因为我们知道自已是
优秀的，所以在遇到难缠的问题时都会找其他人帮忙。因为我们知
道自己是优秀的，如果其他人对问题提出了更好的解决方案，我们
并不会感到丢面子。因为我们知道自已是优秀的，所以都愿意花时
间帮助别人。因为我们知道自己是优秀的，所以都能认识到同事的
能力。因为我们知道自己是优秀的，所以认为自己没有必要一意孤
行，但是遇到重要的事情也会坚持自己的观点。有些人说，HADS
完全是一个不以自己为中心的团队，但我认为团队成员都有相当强
的自我意识，只是这种自我意识不一定要表现出来。我们对自己和
同事的能力都充满信心。
我们都在非常努力地工作，每个人都最大限度地发挥着自己的能
力。我们很少加班，但是大家都准时上班，把每一天都完全投入到
努力的工作中。因为在遇到问题时会找其他人帮忙，因为我们看到
同事们每天都在非常努力地工作，所以我们对工作的进展总是充满
自信。
在并发过程的大部分时间中，每个开发人员主要负责并发某个特定
领域。这些领域包括存储管理器、异常管理器、为了分离应用程序
而向AIMS提供的链接能力、寄存器分配、优化等。我们都知道谁
负责哪个领域，所以在讨论问题时能够很容易找到相应的人。
除了团队成员的能力和个性外，还有几个带来成功的团队实践。
HADS项目是在内部开发的，777项目的工程师和HADS开发人员都
很熟悉，所以他们很容易找到我们团队的某个人，告诉我们他们想
要的某个特性或优化。这样可能会带来很多的“功能蔓延”或冲突的
需求。为了避免这个问题，我们坚持所有的请求都应当交到项目负
责人Tom那里。由他来确定哪些需求需要处理，优先级是什么。他
为团队其他成员屏蔽掉了很多外来的压力。我很清楚，在保护团队
和对777项目做出响应之间，要想平衡好关系是很难的。
一个非常有帮助的实践是我们总是在星期五快下班的时候并一个简
短的（半小时）会议。在这样的会议上，我们评估过去一星期的进
展，为下一星期的工作设置一般优先级。虽然最后是由团队负责人
Tom说了算，但这是一个相当民主的过程。在这种会议上一般很少
解决问题，但是大家可以发表意见，看看哪些事情可能会解决问
题。很多敏捷团队现在也采取了类似的思想，不过他们采取的是时
间更短的日例会。
269
---
## Page 271
我们的截止日期对于数据非常严格，对于内容相当严格。每周例会
确定下一星期的主要工作。“十大任务"列表允许我们持续地对必须
要解决的短期问题的工作做出再调整，以实现长期目标。将长期的
截止日期、下周的目标、通过“十大任务"列表每日做出调整的能力
结合起来，就产生了一个敏捷开发坏境。
我们根据团队内部或用户发现的问题并发了回归测试套件，对产品
质量提供了持续的反馈。这样也容易发现在并发过程中引入的回归
错误。如果发现回归错误，可以评估其严重程度，确定优先级，以
及何时（何处）应当将它添加到某人的“十大任务"列表中。
HADS是一个让人相当喜欢的项目。很大一部分原因要归于团队的
完美和项目的成功。很难说是成功以及带来成功的各种实践让团队
变得更完美，还是团队的完美带来了成功。我估计是相互促进的。
项目慢慢会出现两种可能：失败，或产生所需的东西。对于HADS
团队，这是一个渐进的过程。团队中有几个成员来到了777项目的
生产领域中，他们有Ada的经验，熟悉工具集方面的知识，这些都
给项目带来了帮助。咨询师逐步退出了，到最后团队就剩下两个人
了。在最后一轮缩减人员时，我离开了项目组，调到了霍尼韦尔技
术中心。几个月后，团队中仅有的一名成员厌倦了独自一人的工作
方式，离开了霍尼韦尔。项目的维护工作完全由另外一些工程师承
担了起来。令人啼笑皆非的是，当HADS所有的主要开发人员都离
开团队之后，HADS项目被授予了霍尼韦尔最高技术大奖。
上面主要是根据我自己的视角做出的叙述。团队中其他人对这件事
情的看法可能有很大差别。我怀疑，在最初的主要并发人员中，也
许有人并不认为那是一个漂亮团队。但是对我而言，我在HADS团
队中的经历是我软件工程师职业生涯中最重要的经历之一。
第四部分障碍
270
---
## Page 272
在构建软件的时候，一些最难处理的问题是那些你无法控制的事
情。有时候意外事件会影响项目。有时候一些没有想到的问题会影
响项目。而且很遗憾，有时候有人会故意做出一些损害团队项目的
事情。如果不处理那些阻挡团队道路的障碍，软件将会很难构建。
但是我们生活在现实世界中，现实世界中的项目遇到的问题要比团
队和软件更难处理。
一个最大的障碍是糟糕的经理。
你是否遇到过拒绝接受合理估算的经理？或者你的经理一直在廉价
完成，这样可以让他们更加努力地工作！”）并且牺牲掉你们的周
末来满足一个不切实际的期望？糟糕的经理各种各样，每一种都给
团队带来严重的、有时甚至是不可逾越的障碍。有些经理似乎下定
决心要让你们的项目失败。他们对团队实行微观管理，不停地改变
团队的目标，在事情出现问题的时候，他们的声誉似乎总是丝毫无
损，他们总是责怪团队，却从来不会花上哪怕是一分钟的时间，问
问他们自己的指导或管理是否得当。
在糟糕的经理手下可能根本无法工作。但是如果团队的经理很糟
糕，团队是可以有办法的。有时候，首先要意识到经理是和团队对
271
---
## Page 273
着干的，然后着手解决他的问题。还有一些时候，你是可以改变经
理的：如果能够获得经理的信任，让他对团队有信心，那些问题都
会迎刃而解。不管是哪一种方法，首先都要认识到障碍并分析如何
处理障碍。
并非所有的障碍都是经理造成的，这些障碍甚至与人是没有关系
的。有时候障碍只是一些技术约束：必须使用非常破旧的硬件，必
须让软件向先前版本兼容，意外的、严重的性能问题，难以维护、
滩以理解的面条式的代码。
有些问题是团队的工作环境所带来的不可避免的后果。它可能是办
公场所或办公大楼的问题。有些团队分成几个小组，小组遍布世界
各地，必须处理不同时区所带来的问题。有关气问题、交通问题、
车辆问题、噪音问题...总之，这些是团队无法避免的各种各样的
障碍。
这些问题都会让项目恶化。但是如果团队成员相互信任、工作融
洽，他们就能够克服道路上最不可思议、似乎根本无法逾越的障
碍。实际上，克服一个严重的问题会让团队融和在一起。毕竞，你
们都置身其中。如果遇到的是一个严重问题，影响到团队中每个成
员，那你们必须密切合作来克服它。而在这样做的时候，大家都获
的经验都要多得多。在很多情况下，是逆境让团队融和在了一起。
障碍是人们不愿意谈论的。他们跨越障碍的过程很痛苦，回想起来
也没有多少乐趣。常常地，严重的障碍会导致项目失败。打并任何
一本软件工程教科书都会看到有关项目失败的各种统计数据和研究
报告。（有些教科书认为这个数字达到惊人的80%！）但是当你和
人们交谈的时候，有多少人愿意花上一点点时间来谈谈他们自已失
败的项目呢？
人的本性都倾向于避免谈论自已的失败。大多数人的简历重点强调
的都是成功的项目，即使是失败的项目也要找出一些亮点来。很少
有人（如果有）会用失败的项目来衡量他们的工作或职业生涯，当
然也没有人会把自己的职业生涯归结为一个又一个的失败。但是如
果真的有80%都失败了，或者即使把失败率降到一半，我们的简历
和生活中也应当充满失败的项目才对。
272
---
## Page 274
实际上，当我们走到不同的团队中和他们谈论他们自己的项目时，
我们发现情况完全是这样的。确实有很多失败的项目：项目严重超
支或很晚才能交付，项目构建的软件是用户拒绝接受的、无法使用
的软件，项目进度远远落后，当初构建软件时所要解决的问题已经
发生了根本变化，还有的项目彻底失败，什么东西都拿不出来。实
际上，我们这些年做了很多有关项目失败的讲座，在每次讲座中都
会问听众：“有谁没有参加过失败的项目？”从来没有一个人举手。
本部分故事讲述的是团队克服各种问题。有些故事讲述的是优秀的