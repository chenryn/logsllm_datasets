### 文本优化

**标题：高效异步分布式密钥生成协议**

**摘要：**
本文提出了一种高效的异步分布式密钥生成（ADKG）协议，适用于基于离散对数的密码系统。我们的协议在随机预言模型中假设决策性复合剩余性（DCR）问题的难度，并且不需要可信设置。我们还设计了一个具有二次通信成本的高阈值加法同态秘密共享（ACSS）方案。实验结果表明，我们的ADKG协议在地理分布的Amazon EC2实例上可以支持多达128个节点，并且在32个节点的情况下，单线程实现大约需要3秒，每个节点发送0.7兆字节的数据。

**关键词：** 异步分布式密钥生成、加法同态秘密共享、随机预言模型、决策性复合剩余性

---

**一、引言**

本文重点关注基于离散对数的密码系统的异步分布式密钥生成（ADKG），如ElGamal加密和BLS签名。我们的定义受到Gennaro等人[31]提出的DKG定义的启发。一个分布式密钥生成协议通过秘密共享一个均匀随机值z ∈ Zq，并公开y = hz来实现，其中h是群G中的随机生成元。在n个节点的情况下，协议结束后，每个节点输出(n, ℓ)-门限Shamir份额[54]，其中ℓ个份额足以使用z。

**二、系统模型与概述**

**A. 符号与系统模型**

- κ表示安全参数。
- |S|表示集合S的大小。
- Zq表示阶为q的有限域。
- [a]表示有序集{1, 2, ..., a}。
- [a, b]表示有序集{a, a + 1, ..., b}。

**威胁模型与网络假设：**
- 网络中有n个节点，每对节点通过双向认证通道连接。
- 存在一个恶意对手A，可以最多破坏t个节点，其中n ≥ 3t + 1。
- 网络是异步的，即A可以任意延迟任何消息，但最终必须传递所有诚实节点之间的消息。

**B. ADKG定义**

- **正确性：**
  - (C1) 所有诚实节点提供的ℓ个份额定义相同的唯一秘密键z。
  - (C2) 所有诚实节点输出相同的公钥y = hz，其中z是由(C1)保证的唯一秘密。
  - (C3) 秘密键z在计算上与Zq中的均匀随机元素不可区分。
  - (C4) 所有诚实节点一致并输出所有节点的门限公钥。节点j的门限公钥为yj = hzj。

- **保密性：** 计算受限的对手无法从公钥y = hz以外的信息中获取关于秘密z的任何信息。

**三、协议概述**

现有DKG协议的典型结构是：每个节点运行并发的可验证秘密共享（VSS）实例，以随机选择的秘密与其他节点共享。一旦t + 1个节点完成秘密共享，节点本地聚合其份额以计算最终秘密键z。

**四、我们的协议**

我们的新方法如下：
1. 每个节点i通过可靠广播（RBC）提议一组节点Ti，这些节点被认为是正确执行了秘密共享。
2. 运行n个并发的异步拜占庭二进制协议（ABA）实例。第i个ABA实例使用Ti生成共享随机性。
3. 第i个ABA实例的输出决定是否将Ti包含在最终密钥中。
4. 所有ABA实例终止后，使用Neji等人的方法[47]计算最终公钥hz。

**五、评估**

我们在GitHub上实现了ADKG协议，并支持curve25519和bls12-381椭圆曲线。对于32个节点，单线程实现大约需要3秒，每个节点发送0.7兆字节的数据。当重建阈值为n-t时，对于32个节点，我们的ADKG分别在curve25519和bls12-381椭圆曲线上需要38秒和41秒，每个节点发送约4.2兆字节的数据。

**六、结论**

本文提出了一个高效的异步分布式密钥生成协议，并展示了其实现和性能评估。未来的工作将进一步优化协议的性能和安全性。

---

希望以上优化后的文本更加清晰、连贯和专业。如果有进一步的需求或修改，请告诉我！