transactional APIs, 690
tunneling, 666–667
volumes, 655
NTFS recovery support
analysis pass, 700
bad clusters, 703–706
check-disk and fast repair, 707–710
design, 694–695
LFS (log file service), 695–697
log record types, 697–699
metadata logging, 695
recovery, 699–700
redo pass, 701
self-healing, 706–707
undo pass, 701–703
NTFS reservations and Storage Reserves, 685–688
Ntoskrnl and Winload, 818
NVMe (Non-volatile Memory disk), 565
O
!object command, 137–138, 151, 223
Object Create Info, 132
object handles, 146, 158
object IDs, NTFS on-disk structure, 681
Object Manager
executive objects, 127–130
overview, 125–127
resource accounting, 159
symbolic links, 166–170
Object type index, 132
object-less waiting (thread alerts), 183–184
objects. See also base named objects; private objects; reserve objects
directories, 160–165
filtering, 170
flags, 134–135
handles and process handle table, 143–152
headers and bodies, 131–136
methods, 140–143
names, 159–160
reserves, 152–153
retention, 155–158
security, 153–155
services, 136
signalling, 181–183
structure, 131
temporary and permanent, 155
types, 126, 136–140
\ObjectTypes directory, 161
ODBC (Open Database Connectivity), WMI (Windows Management
Instrumentation), 488
Okay to close method, 141
on-disk implementation, NTFS on-disk structure, 691–693
open files, searching for, 151–152
open handles, viewing, 144–145
Open method, 141
Openfiles/query command, 126
oplocks and FSDs, 611–612, 616
Optimize Drives tool, 644–645
OS/2 operating system, 130
out-of-order execution, 10–11
P
packaged applications. See also apps
activation, 259–264
BI (Background Broker Infrastructure), 256–258
bundles, 265
Centennial, 246–249
Dependency Mini Repository, 255
Host Activity Manager, 249–251
overview, 243–245
registration, 265–266
scheme of lifecycle, 250
setup and startup, 258
State Repository, 251–254
UWP, 245–246
page table, ReFS (Resilient File System), 745–746
PAN (Privileged Access Neven), 57
Parse method, 141
Partition object, 130
partitions
caching and file systems, 565
defined, 565
Pc Reset, 845
PCIDs (Process-Context Identifiers), 20
PEB (process environment block), 104
per-file cache data structures, 579–582
perfmon command, 505, 519
per-user volume quotas, NTFS, 638–639
PFN database, physical memory removed from, 286
PIC (Programmable Interrupt Controller), 35–38
!pic command, 37
pinning and mapping interfaces, caching with, 584
pinning the bucket, ReFS (Resilient File System), 743
PIT (Programmable Interrupt Timer), 66–67
PM (persistent memory), 736
Pointer count field, 132
pop thunk, 117
POSIX deletion, NTFS, 641–643
PowerRequest object, 129
private objects, looking at, 163–164. See also objects
Proactive Scan maintenance task, 708–709
!process command, 190
Process Explorer, 58, 89–91, 144–145, 147, 153–154, 165 169
Process Monitor, 591–594, 627–628, 725–728
Process object, 128, 137
processor execution model, 2–9
processor selection, 73–75
processor traps, 33
Profile object, 130
PSM (Process State Manager), 244
!pte extension of debugger, 735
PTEs (Page table entries), 16, 20
push thunk, 117
pushlocks, 200–202
Q
!qlocks command, 176
Query name method, 141
Query object service, 136
Query security object service, 136
queued spinlocks, 175–176
quota tracking, NTFS on-disk structure, 681–682
R
RAID 6 and LRC parity, 773
RAM (Random Access Memory), 9–11
RawInputManager object, 130
RDCL (Rogue Data Cache load), 14
Read (R) access, 615
read-ahead and write-behind
cache manager disk I/O accounting, 600–601
disabling lazy writing, 595
dynamic memory, 599–600
enhancements, 588–589
flushing mapped files, 595–596
forcing cache to write through disk, 595
intelligent read-ahead, 587–588
low-priority lazy writes, 598–599
overview, 586–587
system threads, 597–598
write throttling, 596–597
write-back caching and lazy writing, 589–594
reader/writer spinlocks, 176–177
ReadyBoost driver service settings, 810
ReadyBoot, 835–836
Reconciler, 419–420
recoverability, NTFS, 629
recoverable file system support, 570
recovery, NTFS recovery support, 699–700. See also WinRE (Windows
Recovery Environment)
redo pass, NTFS recovery support, 701
ReFS (Resilient File System)
allocators, 743–745
architecture’s scheme, 749
B+ tree physical layout, 742–743
compression and ghosting, 769–770
container compaction, 766–769
data integrity scanner, 760
on-disk structure, 751–752
file integrity streams, 760
files and directories, 750
file’s block cloning and spare VDL, 754–757
leak detections, 761–762
Minstore architecture, 740–742
Minstore I/O, 746–748
object IDs, 752–753
overview, 608, 739–740, 748–751
page table, 745–746
pinning the bucket, 743
recovery support, 759–761
security and change journal, 753–754
SMR (shingled magnetic recording) volumes, 762–766
snapshot support through HyperV, 756–757
tiered volumes, 764–766
write-through, 757–758
zap and salvage operations, 760
ReFS files, cloning, 755
!reg openkeys command, 417
regedit.exe command, 468, 484, 542
registered file systems, 613–614
registry. See also hives
application hives, 402–403
cell data types, 411–412
cell maps, 413–414
CLFS (common logging file system), 403–404
data types, 393–394
differencing hives, 424–425
filtering, 422
hive structure, 411–413
hives, 406–408
HKEY_CLASSES_ROOT, 397–398
HKEY_CURRENT_CONFIG, 400
HKEY_CURRENT_USER subkeys, 395
HKEY_LOCAL_MACHINE, 398–400
HKEY_PERFORMANCE_DATA, 401
HKEY_PERFORMANCE_TEXT, 401
HKEY_USERS, 396
HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot key, 848
incremental logging, 419–421
key control blocks, 417–418
logical structure, 394–401
modifying, 392–393
monitoring activity, 404
namespace and operation, 415–418
namespace redirection, 423
optimizations, 425–426
Process Monitor, 405–406
profile loading and unloading, 397
Reconciler, 419–420
remote BCD editing, 398–399
reorganization, 414–415
root keys, 394–395
ServiceGroupOrder key, 452
stable storage, 418–421
startup and process, 408–414
symbolic links, 410
TxR (Transactional Registry), 403–404
usage, 392–393
User Profiles, 396
viewing and changing, 391–392
virtualization, 422–425
RegistryTransaction object, 129
reparse points, 626, 684–685
reserve objects, 152–153. See also objects
resident and nonresident attributes, 667–670
resource manager information, querying, 692–693
Resource Monitor, 145
Restricted User Mode, 93
Retpoline and Import optimization, 23–26
RH (Read-Handle) access, 615
RISC (Reduced Instruction Set Computing), 113
root directory (\), 692
\RPC Control directory, 161
RSA (Rivest-Shamir-Adleman) public key algorithm, 711
RTC (Real Time Clock), 66–67
run once initialization, 207–208
Runas command, 397
runtime drivers, 24
RW (Read-Write) access, 615
RWH (Read-Write-Handle) access, 615
S
safe mode, 847–850
SCM (Service Control Manager)
network drive letters, 450
overview, 446–449
and Windows services, 426–428
SCM Storage driver model, 722
SCP (service control program), 426–427
SDB (shim database), 559–560
SDF (Secure Driver Framework), 376
searching for open files, 151–152
SEB (System Events Broker), 226, 238
second-chance notification, 88
Section object, 128
sectors
caching and file systems, 565
and clusters on disk, 566
defined, 565
secure boot, 781–784
Secure Kernel. See also kernel
APs (application processors) startup, 362–363
control over hypercalls, 349
hot patching, 368–371
HVCI (Hypervisor Enforced Code Integrity), 358
memory allocation, 367–368
memory manager, 363–368
NAR data structure, 365
overview, 345
page identity/secure PFN database, 366–367
secure intercepts, 348–349
secure IRQLs, 347–348
secure threads and scheduling, 356–358
Syscall selector number, 354
trustlet for normal call, 354
UEFI runtime virtualization, 358–360
virtual interrupts, 345–348
VSM startup, 360–363
VSM system calls, 349–355
Secure Launch, 816–818
security consolidation, NTFS on-disk structure, 682–683
Security descriptor field, 132
\Security directory, 161
Security method, 141
security reference monitor, 153
segmentation, 2–6
self-healing, NTFS recovery support, 706–707
Semaphore object, 128
service control programs, 450–451
service database, organization of, 447
service descriptor tables, 100–104
ServiceGroupOrder registry key, 452
services logging, enabling, 448–449
session namespace, 167–169
Session object, 130
\Sessions directory, 161
Set security object service, 136
/setbootorder command-line parameter, 788
Set-PhysicalDisk command, 774
SGRA (System Guard Runtime attestation), 386–390
SGX, 16
shadow page tables, 18–20
shim database, 559–560
shutdown process, 837–840
SID (security identifier), 162
side-channel attacks
L1TF (Foreshadow), 16
MDS (Microarchitectural Data Sampling), 17
Meltdown, 14
Spectre, 14–16
SSB (speculative store bypass), 16
Side-channel mitigations in Windows
hardware indirect branch controls, 21–23
KVA Shadow, 18–21
Retpoline and import optimization, 23–26
STIPB pairing, 26–30
Signal an object and wait for another service, 136
Sihost process, 834
\Silo directory, 161
SKINIT and Secure Launch, 816, 818
SkTool, 28–29
SLAT (Second Level Address Translation) table, 17
SMAP (Supervisor Mode Access Protection), 57, 93
SMB protocol, 614–615
SMP (symmetric multiprocessing), 171
SMR (shingled magnetic recording) volumes, 762–763
SMR disks tiers, 765–766
Smss user-mode process, 830–835
SMT system, 292
software interrupts. See also DPC (dispatch or deferred procedure call)
interrupts
APCs (asynchronous procedure calls), 61–66
DPC (dispatch or deferred procedure call), 54–61
overview, 54
software IRQLs (interrupt request levels), 38–50. See also IRQL (interrupt
request levels)
Spaces. See Storage Spaces
sparse data, compressing, 671–672
sparse files
and data compression, 670–671
NTFS on-disk structure, 675
Spectre attack, 14–16
SpecuCheck tool, 28–29
SpeculationControl PowerShell script, 28
spinlocks, 172–177
Spot Verifier service, NTFS recovery support, 708
spurious traps, 31
SQLite databases, 252
SRW (Slim Read Writer) Locks, 178, 195, 205–207
SSB (speculative store bypass), 16
SSBD (Speculative Store Bypass Disable), 22
SSD (solid-state disk), 565, 644–645
SSD volume, retrimming, 646
Startup Recovery tool, 846
Startup Repair, 845
State Repository, 251–252
state repository, witnessing, 253–254
STIBP (Single Thread Indirect Branch Predictors), 22, 25–30
Storage Reserves and NTFS reservations, 685–688
Storage Spaces
internal architecture, 771–772
overview, 770–771
services, 772–775
store buffers, 17
stream-based caching, 569
structured exception handling, 85
Svchost service splitting, 467–468