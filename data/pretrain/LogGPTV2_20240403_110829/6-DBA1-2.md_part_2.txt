-p123qqq\...AAA #密码无特殊字符，不需要单引号
## 2 数据库基本管理
### 慨念
#### ＭySQL连接工具：
-   命令行
-   图形软件
-   Web页面
#### 数据存储流程
![LINUXNSD_V01DBA1DAY01_026](media/image5.png){width="5.760416666666667in"
height="2.654861111111111in"}
2.1 问题
本案例要求熟悉MySQL的连接及数据库表的增删改查等基本管理操作，主要完成以下几个方便的操作：
使用mysql命令连接数据库
练习查看/删除/创建库的相关操作
练习查看/删除/创建表的相关操作，表数据参考如表-1所示内容
表－1 测试用表数据
2.2 步骤
实现此案例需要按照如下步骤进行。
### 步骤一：使用mysql命令连接数据库
#### 连接数据库基本用法
连接MySQL服务器时，最基本的用法是通过 -u
选项指定用户名、-p指定密码。密码可以写在命令行（如果不写，则出现交互，要求用户输入），当然基于安全考虑一般不推荐这么做：
\[root@dbsvr1 \~\]# mysql -uroot -p123456 //紧挨着选项，不要空格
mysql: \[Warning\] Using a password on the command line interface can be
insecure.
Welcome to the MySQL monitor. Commands end with ; or \\g.
Your MySQL connection id is 16
Server version: 5.7.17 MySQL Community Server (GPL)
Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights
reserved.
Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
mysql\> exit //退出已登录的mysql\> 环境
Bye
**或者例如:**
\[root@dbsvr1 \~\]# mysql -u root -p #-u与root空格隔开
Enter password:
\[root@client-50 \~\]# mysql -u root -p123456
**错误登录:**
\[root@client-50 \~\]# mysql -u root -p 123456 #错误做法,123456
Enter password:
ERROR 1049 (42000): Unknown database \'123456\' #无123456的数据库
#### 指定远程主机连接
默认情况下，msyql命令会连接本机的MySQL服务。但在需要的时候，可以通过 -h
选项指定远程主机；
\[root@dbsvr1 \~\]# mysql -h 127.0.0.1 --u root --p
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \\g.
Your MySQL connection id is 17
Server version: 5.7.17 MySQL Community Server (GPL)
Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights
reserved.
Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
mysql\> exit //退出已登录的mysql环境
Bye
#### 登录时指定库名
\[root@sql51 \~\]# mysql -uroot -p123456 #未指定库名
mysql\> select database();    ＃
+\-\-\-\-\-\-\-\-\-\-\--+
\| database() \|
+\-\-\-\-\-\-\-\-\-\-\--+
\| NULL \|   #当前库名
+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
\[root@sql51 \~\]# mysql -uroot -p123456 mysql #指定mysql库名
mysql\> select database();
+\-\-\-\-\-\-\-\-\-\-\--+
\| database() \|
+\-\-\-\-\-\-\-\-\-\-\--+
\| mysql \|    #当前库名
+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
### 步骤二：练习查看/删除/创建库的相关操作
以root用户登入"mysql\> "环境后，可以执行各种MySQL指令、SQL指令。
#### 操作指令类型：
MySQL指令：环境切换，看状态，退出等控制
SQL指令：数据库定义／查询／操纵／授权等语句
#### 基本的用法事项如下：
-   操作指令不区分大小写（库名/表名、密码、变量值等除外）。
-   每条SQL指令以 ; 结束或分隔。少数不需要;结束的命令：exit，use
-   不支持 Tab 键自动补齐。
-   \\c 或Ctrl+c 可废弃当前编写错的操作指令。
-   \\h帮助信息
![LINUXNSD_V01DBA1DAY01_029](media/image6.png){width="5.760416666666667in"
height="2.285416666666667in"}
#### 库管理命令
![](media/image7.png){width="5.763888888888889in"
height="2.8256944444444443in"}
新建一个库，在／var/lib/mysql目录中会多一个对应的文件夹，库删除，文件夹相应删除
#### 数据库命名规则
![](media/image8.png){width="5.405555555555556in"
height="1.613888888888889in"}
#### 在登录状态执行linux系统命令
在命令前面加＂system＂
mysql\> system ls /var/lib/mysql
auto.cnf ib_buffer_pool mysql public_key.pem
ca-key.pem ibdata1 mysql.sock server-cert.pem
ca.pem ib_logfile0 mysql.sock.lock server-key.pem
client-cert.pem ib_logfile1 performance_schema sys
client-key.pem ibtmp1 private_key.pem
#### 1）show databases;查看已有的库
mysql\> show databases; //查看现有的库
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Database \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| information_schema \| //信息概要库
\| mysql \| //授权库
\| performance_schema \| //性能结构库
\| sys \| //系统元数据库
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
4 rows in set (0.15 sec)
#### 2）use切换/使用指定的库
mysql\> use sys; //切换到sys库
Database changed
mysql\> select database(); //确认当前所在的库
+\-\-\-\-\-\-\-\-\-\-\--+
\| DATABASE() \|
+\-\-\-\-\-\-\-\-\-\-\--+
\| sys \|
+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
切换到mysql库：
mysql\> use mysql; //切换到mysql库
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql\> select database(); //确认当前所在的库
+\-\-\-\-\-\-\-\-\-\-\--+
\| DATABASE() \|
+\-\-\-\-\-\-\-\-\-\-\--+
\| mysql \|
+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
5 rows in set (0.00 sec)
#### 3）create新建名为newdb的库，确认结果：
mysql\> create database newdb; //新建名为newdb的库
Query OK, 1 row affected (0.00 sec)
mysql\> show databases;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Database \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| information_schema \|
\| mydb \| //新建的mydb库
\| mysql \|
\| newdb \| //新建的newdb库
\| performance_schema \|
\| sys \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
6 rows in set (0.00 sec)
#### 4）drop删除指定的库
mysql\> drop database newdb; //删除名为newdb的库
Query OK, 0 rows affected (0.01 sec)
mysql\> show databases; //确认删除结果，已无newdb库
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Database \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| information_schema \|
\| mydb \|
\| mysql \|
\| performance_schema \|
\| sys \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
5 rows in set (0.00 sec)
#### ５）select查看当前所在库
mysql\> select database();
### 步骤三：练习查看/删除/创建表/修改表的相关操作
#### 1）show tables查看指定的库里有哪些表
查看mysql库里有哪些表：
mysql\> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql\> show tables;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Tables_in_mysql \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| columns_priv \|
\| db \|
\| engine_cost \|
\| event \|
\| func \|
\| general_log \|
\| gtid_executed \|
\| help_category \|
\| help_keyword \|
\| help_relation \|
\| help_topic \|
\| innodb_index_stats \|
\| innodb_table_stats \|
\| ndb_binlog_index \|
\| plugin \|
\| proc \|
\| procs_priv \|
\| proxies_priv \|
\| server_cost \|
\| servers \|
\| slave_master_info \|
\| slave_relay_log_info \|
\| slave_worker_info \|
\| slow_log \|
\| tables_priv \|
\| time_zone \|
\| time_zone_leap_second \|
\| time_zone_name \|
\| time_zone_transition \|
\| time_zone_transition_type \|
\| user \| //存放数据库用户的表
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
31 rows in set (0.00 sec)
#### 2）desc查看指定表的字段结构
当前库为mysql，查看columns_priv表的结构，以列表形式展现：
**mysql\> desc columns_priv\\G**
//查看表结构，以列表形式展现，末尾不用分号
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Host
Type: char(60)
Null: NO
Key: PRI
Default:
Extra:
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 2. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Db
Type: char(64)
Null: NO
Key: PRI
Default:
Extra:
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 3. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: User
Type: char(32)
Null: NO
Key: PRI
Default:
Extra:
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 4. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Table_name
Type: char(64)
Null: NO
Key: PRI
Default:
Extra:
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 5. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Column_name
Type: char(64)