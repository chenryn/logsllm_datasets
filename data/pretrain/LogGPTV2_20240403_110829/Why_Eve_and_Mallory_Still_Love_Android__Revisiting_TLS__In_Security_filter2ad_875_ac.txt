little impact in 4,804 apps that target Android versions
found 89,686 apps
insecure
secure
-, false
true
-, system user
-, false
true
always
>10 daysa = Android 9
Global
Domain Speciﬁc
Total
 element in  elements.
Adoption. Overall, we found 663 apps that implement cer-
tiﬁcate pinning using NSC. We found 1,121 distinct pins for
2,781 distinct domains of which 998 are valid domains. Pin-
ning was most common in the ﬁnance category (6%). This is
in line with the most frequently pinned domains we found in
Table 9, most of which belong to banking or mobile money
apps.
Pinned Certiﬁcates. Our certiﬁcate analysis shows that 483
leaf certiﬁcates, 542 (intermediate) CA certiﬁcates and 289
root CA certiﬁcates were pinned. Table 7 in the appendix
gives an overview of the most popular CA certiﬁcates. The
majority of pinned CA certiﬁcates affected pre-installed sys-
tem CAs. We extract the  child tags and compare them
with the certiﬁcates from domains we fetch certiﬁcate chains
Figure 3: Distribution across the features we analyzed, and
app categories, and download counts.
grade; this affected 24,653 distinct domains. We ﬁnd valid
HTTPS connections for 8,935 applications and argue that
downgrading safe defaults was unnecessary. Table 8 in the
appendix gives an overview of the most frequent domains for
which we found downgrades.
Interestingly, the top domain values 127.0.0.1 and localhost
seem to have no security impact. However, they might result
from copy & paste from Facebook’s cache proxy library that
is used in many apps [20] or from debugging conﬁgurations
developers use for testing.
USENIX Association
30th USENIX Security Symposium    4353
NSC Settings in APPs Total [4.1]Cleartext Traffic [4.1.1]Pinning Certificates [4.1.2]Custom CA Configurations [4.1.3]User Installed Certificates [4.1.4]Debug Overrides [4.1.5]Invalid Domains [4.1.6]Art & DesignAuto & VehiclesBeautyBooks & ReferenceBusinessComicsCommunicationsDatingEducationEntertainmentEventsFamilyFinanceFood & DrinkGameHealth & FitnessHouse & HomeLibraries & DemoLifestyleMaps & NavigationMedicalMusic & AudioNews & MagazinesParentingPersonalizationPhotographyProductivityShoppingSocialSportsToolsTravel & LocalVideo Players & EditorsWeather49810282268912611349900332591001632882229192596002720893101714578800162579800443695009836770193044970010608816311103595012615970013616911131027881161513890319337971112417861151326870089159100415215880072216912059719100002200898005207902117738860162849930313102108900428179510134110660074618950181319970015105App Categories0255075100NSC Settings in APPs Total [4.1]Cleartext Traffic [4.1.1]Pinning Certificates [4.1.2]Custom CA Configurations [4.1.3]User Installed Certificates [4.1.4]Debug Overrides [4.1.5]Invalid Domains [4.1.6]0+1+5+10+50+100+500+1,000+5,000+10,000+50,000+100,000+500,000+1,000,000+5,000,000+10,000,000+50,000,000+100,000,000+500,000,000+7970177269611573495115734941157349311582590116112689008132789111013289110151119921116911193001391139310138115930115111189400131312694101317132901192123994017241479330152311383000330Download CountsValues:% of Apps with NSC Setting[4.1]: % of Apps TotalLegend:for. To detect root CA pinning, we also match against pins gen-
erated from default Android system trust [4]. For 778 pinned
domains we collected the complete certiﬁcate chain for the
speciﬁed domains and analyzed it. We could not download all
certiﬁcate chains due to connection problems or malformed
domain names.
Backup Pins. The ofﬁcial Android documentation recom-
mends the use of backup pins [19]. We found 566 apps that
set a backup pin. In 47 cases, the pins were non-functional,
e.g., empty strings were pinned. We discuss these cases in
detail in section 4.1.6. For semantically correct pinning conﬁg-
urations, we ﬁnd possible misconceptions regarding backup
pins. First of all, the Android (Studio) LINT feature suggests
to register two pins instead of one, but does not check for pin
correctness or if both pins are equal [22]. We detect identical
or non-functional backup pins by manual inspection and ﬁnd
cases containing sequences like ’AAAAAA...’, ’BBBBBB...’ as
preﬁx, or instances where only a single character is changed.
While this is enough to address the LINT feature’s warning, it
does not enhance the security of the application. We also ﬁnd
that at least 12 applications used the empty pin hash produced
by hashing an empty string encoded as Base64. This likely
happens due to wrong usage of tools or lack of knowledge.
Pinning Expiration. The Android documentation suggests
to set a pinning expiration date with the optional expiration
parameter. After this date, pinning is no longer enforced, i.e.,
setting an expiration date may decrease security, but prevents
an app from breaking when a certiﬁcate is replaced with a
newer version [19]. Expiration values in the near future are
critical from a security perspective as pinning would only be
enforced for a short period. We read the respective element
and found 130 apps that set a pinning expiration parameter.
The mean expiration value was 947 days. Most apps had an
expiration value set that had no negative impact on pinning
security.
4.1.3 Custom CA Conﬁgurations
In both  and  elements we
check for  elements which indicate modi-
ﬁcations to the list of trusted root CAs to limit or add CAs.
We found custom CA conﬁgurations in 38,628 apps 5
(37,562 globally, 1,781 for domains).
759 apps distrusted all pre-installed CAs and added their
own set of custom CA certiﬁcates (30 globally, 744 for do-
mains). Furthermore, 123 apps restrict the list of pre-installed
system CAs (14 globally, 112 for domains).
We further found 836 apps that added supplementary certiﬁ-
cates (784 globally, 58 for domains). Table 12 in the appendix
gives an overview of all added certiﬁcates and provides a
5We only discuss custom CA conﬁguration in production code here. Cus-
tom CA conﬁgurations for debugging purposes are addressed in Section 4.1.5
summary of the most frequent custom CA certiﬁcates that
apps used for production.
4.1.4 User-Installed Certiﬁcates
Based on the nested  element, we check if
the value of the src property is set to user which enables
trust for user-installed CA certiﬁcates. Compared to Android
7 default settings, enabling user-installed CA certiﬁcates is a
security downgrade (cf. Section 2.1).
Out of 1,098,479 apps targeting Android 7 or higher, we
found 8,606 apps that re-enable trust for user-installed certiﬁ-
cates (8.67%) (8,001 globally, 707 for domains).
User-installed certiﬁcates are more common in popular
apps. We found this issue more frequently in apps in the
categories Art & Design (28%), Books & Reference (16%),
Comics (27%) and Personalization (22%) (cf. Figure 3).
Since user-installed certiﬁcates increase the attack sur-
face for MitMAs, developers are encouraged to use debug-
overrides instead (cf. Section 4.1.5).
4.1.5 Debug Overrides
In this section, we present how app developers conﬁgured
debugging settings.
Correct Use of Debug Overrides. 
can be used to debug secure network connections, e.g., us-
ing self-signed certiﬁcates or MitMA tools. The use of
 is a recommended security best prac-
tice, as these cannot be used in production code and apps
with enabled debug ﬂags cannot be published in Google Play.
Overall, we found 10,085 apps with .
Debug overrides were most popular among travel & local
(46%) and event apps (30%), and generally among apps with
higher download counts of 10,000,000 or more ((21-33%).
We analyze their  child elements for spe-
ciﬁc conﬁgurations of trusted roots. These can include user-
installed certiﬁcates or bundled custom certiﬁcates which
might be needed for MitMA proxies and other debugging
purposes [10]. We found 318 apps that register custom certiﬁ-
cates in  (cf. Table 11 in the appendix).
We detected 170 certiﬁcates of MitMA tools. 9,904 apps allow
user-installed certiﬁcates in .
Mis-Use of Debug Overrides. Unfortunately, we also found
several conﬁgurations outside the  envi-
ronment that we could unambiguously attribute to debugging
purposes. 41 apps in our set use custom CA conﬁgurations
to use MitMA certiﬁcates for debugging TLS connections.
This was identiﬁed by observing the CA certiﬁcates’ subject
CN, in which popular MitMA proxy tools include the term
proxy. For example, the Charles Proxy [9] MitMA proxy
tool was the most popular in our dataset and included the sub-
string "Charles Proxy Custom Root Certiﬁcate". Contrary to
4354    30th USENIX Security Symposium
USENIX Association
 conﬁgurations, these are used in produc-
tion code and can therefore pose a security threat. Therefore,
the Android documentation discourages their use [4]. While
this list is not exhaustive, it shows that developers mis-use
NSC settings for debugging purposes although NSC provides
distinct debugging options.
4.1.6 Malformed NSC Files
In this section, we investigate faulty NSC ﬁles. We distinguish
faulty conﬁgurations from conﬁgurations with syntax errors
as they are simply ignored by Android and therefore do not
negatively contribute to an app’s security. Instead, we focus
on conﬁgurations with ambiguous security settings resulting
in confusing security implications.
Conﬁgurations with Flawed Domain Parameters. In
1,310 apps, we found  conﬁgurations that contained
an URL instead of a hostname, e.g., http://example.com/
or http://example.com/index.php instead of example.com. In
these cases, no error message is shown and the app compiles
successfully. However, during app execution, such conﬁgura-
tions are ignored and the  setting becomes
ineffective. We further identiﬁed 42 similar cases, where de-
velopers gave string resources (e.g., @string/host) instead
of a hostnames. In 210 conﬁgurations, we found wildcard
domain speciﬁcations (e.g. *.example.com). These are also
non-functional and therefore make the conﬁgurations ineffec-
tive.