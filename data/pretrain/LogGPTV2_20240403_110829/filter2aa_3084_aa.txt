# Hybrid Rule-Based Botnet Detection Approach Using Machine Learning for Analyzing DNS Traffic

**Authors:**
- Saif Al-mashhadi¹,²
- Mohammed Anbar¹
- Iznan Hasbullah¹
- Taief Alaa Alamiedy¹,³

**Affiliations:**
1. National Advanced IPv6 Centre, Universiti Sains Malaysia, Penang, Malaysia
2. Electrical Engineering, University of Baghdad, Baghdad, Iraq
3. ECE Department, Faculty of Engineering, University of Kufa, Kufa, Najaf, Iraq

## Abstract
Botnets can simultaneously control millions of Internet-connected devices to launch damaging cyber-attacks, posing significant threats to the Internet. In a botnet, botmasters communicate with the command and control (C&C) server using various communication protocols, one of which is the Domain Name System (DNS) service. Botmasters utilize Domain Generation Algorithms (DGA) and fast-flux techniques to avoid static blacklists and reverse engineering while maintaining flexibility. However, these techniques generate anomalous DNS traffic throughout the botnet lifecycle, which can be an indicator of DNS-based botnets in the network.

Despite several proposed approaches for detecting botnets based on DNS traffic analysis, the problem remains challenging due to the lack of significant features and rules that contribute to detection. This paper examines the abnormality of DNS traffic during the botnet lifecycle to extract significant enriched features. These features are further analyzed using two machine learning algorithms, and the union of their outputs proposes a novel hybrid rule-based detection model. Two benchmark datasets are used to evaluate the performance of the proposed approach in terms of detection accuracy and false-positive rate. The experimental results show that the proposed approach achieves 99.96% accuracy and a 1.6% false-positive rate, outperforming other state-of-the-art DNS-based botnet detection methods.

**Keywords:** Botnet detection, DNS analysis, Rule-based technique, Machine learning, Network security

## Introduction
The Internet has become a core element of daily life, especially during the global COVID-19 pandemic. It facilitates online presence, e-learning, social media, e-banking, work from home, online shopping, Internet of Things (IoT), and cloud computing (Stevanovic et al., 2012; Nozomi Networks Labs, 2020; Lallie et al., 2020). Unfortunately, Internet resources are continuously under threat by malicious actors, whether individuals or organized entities. Botnets are now one of the most preferred tools for sophisticated cyber-attacks, making them a critical threat to Internet users' security and privacy (Nozomi Networks Labs, 2020).

### Motives and Services of Botnets
The primary motives for building and operating botnets include financial gain through offering botnets for hire for attacks and crypto mining, as well as political motives such as hacktivism or nation-state activities. The services provided by botnets range from crypto-mining campaigns and intelligence gathering to large-scale, anonymized cyber-attacks (Almutairi et al., 2020). A botnet consists of a network of malware-infected computing devices (Abu Rajab et al., 2006). Malware transforms compromised devices into robots (bots) controlled remotely by the attacker, known as the botmaster, without the end-users' knowledge (Asadi et al., 2020). Botmasters hide their location and avoid detection by law enforcement by controlling and initiating botnet attacks via C&C servers using various communication techniques (Almutairi et al., 2020).

### Botnet Communication Architecture
Figure 1 illustrates the botnet communication architecture. Botnets can initiate and coordinate attacks, such as Distributed Denial of Service (DDoS), sending spam emails, ransomware, phishing, and stealing sensitive data (Gu et al., 2013; Alomari et al., 2016; Karim et al., 2014). Despite different approaches to mitigate botnet attacks, the number of botnet attacks has been growing steadily since their first appearance in 1993 (Silva et al., 2013). The 10-year trend of the size of botnet-based DDoS attacks (Morales, 2018) shows a marked increase from 24 Gbps in 2007 to 1.7 Tbps in 2018. Similarly, the Symantec Internet Security Threat Report (Symantec, 2018) reported a 62% increase in botnet activities in 2018 compared to the previous year.

### Types of Botnet Communication Architectures
There are three types of botnet communication architectures based on their topology: centralized (client-server), decentralized (peer-to-peer), and hybrid (Silva et al., 2013; Negash & Che, 2015). Centralized bots connect to the C&C using IRC, HTTP, or DNS protocols to receive instructions and update their status (Silva et al., 2013; Negash & Che, 2015). Table 1 provides a detailed comparison between the three botnet communication architectures.

### DNS and Botnet Communication
DNS is essential for resolving queries to map domain names hierarchically to their corresponding IP addresses, similar to a phone book. Figure 3 illustrates the DNS resolution process. Since DNS is a critical Internet service, it cannot be disabled or blocked without incapacitating the network. Some botmasters rely on the DNS protocol for botnet communication (Mockapetris, 1987). They use dynamic DNS strategies like fast-flux and domain-ﬂux to avoid detection. Fast-flux regularly assigns several IP addresses to the same domain name, often used for legitimate purposes like load balancing (Yadav & Reddy, 2012). Domain-ﬂux generates pseudo-random domains using the Domain Generation Algorithm (DGA), making it unpredictable and resilient (Zago, Gil Pérez & Martínez Pérez, 2019).

### Combining Techniques for Evasion
Combining fast-flux and DGA techniques allows constant modification of the C&C’s IP address and domain name to avoid detection (Zhou et al., 2013). Examples of botnets using DGA include Necurs and Conﬁcker. A Conﬁcker bot generates up to 50,000 new unique domain names daily but only uses 500 for communication. The Necurs bot systematically generates 2,048 new domains through an algorithm (Antonakakis & Perdisci, 2012).

### Abnormal DNS Traffic Patterns
Evasive techniques generate abnormal traffic patterns throughout the botnet lifecycle phases, which can be used for detection. The botnet lifecycle can be broken down into four phases:
1. **Initial Infection and Propagation Phase:** Bot malware infects Internet-facing devices, such as cell phones, personal computers, smart devices, and even CCTVs. The attacker uses social engineering, spam, and phishing to exploit vulnerabilities and install control software.
2. **Connection and Rallying Phase:** Bots find and connect to the C&C server and other bots. Communication occurs via the C&C server or a proxy server. The likelihood of exposure is highest in this phase, but DNS lookup queries are still widely used due to their flexibility (Manasrah et al., 2009).
3. **Malicious and Attack Phase:** The botmaster instructs the bots to perform nefarious activities, such as distributing malware, sending spam, or launching DDoS attacks (Da Luz, 2014).
4. **Maintenance and Upgrading Phase:** Bots remain idle, waiting for new commands from the botmaster. The botmaster continuously upgrades the bots to avoid detection and maintain control.

### Conclusion
This paper presents a novel hybrid rule-based botnet detection approach using machine learning for analyzing DNS traffic. The approach extracts significant enriched features from abnormal DNS traffic and uses two machine learning algorithms to propose a robust detection model. The experimental results demonstrate high accuracy and a low false-positive rate, outperforming existing methods.

---

**How to cite this article:**
Al-mashhadi S, Anbar M, Hasbullah I, Alamiedy TA. 2021. Hybrid rule-based botnet detection approach using machine learning for analyzing DNS traffic. PeerJ Comput. Sci. 7:e640 DOI 10.7717/peerj-cs.640

**Submitted:** 11 January 2021  
**Accepted:** 22 June 2021  
**Published:** 13 August 2021

**Corresponding authors:**
- Saif Al-mashhadi, PI:EMAIL
- Mohammed Anbar, PI:EMAIL

**Academic editor:**
Muhammad Tariq

**Additional Information and Declarations:**
Page 28

**DOI:** 10.7717/peerj-cs.640

**Copyright:**
2021 Al-mashhadi et al.  
Distributed under Creative Commons CC-BY 4.0