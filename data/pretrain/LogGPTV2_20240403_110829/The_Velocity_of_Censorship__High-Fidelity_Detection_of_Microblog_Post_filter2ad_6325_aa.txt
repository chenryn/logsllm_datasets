title:The Velocity of Censorship: High-Fidelity Detection of Microblog Post
Deletions
author:Tao Zhu and
David Phipps and
Adam Pridgen and
Jedidiah R. Crandall and
Dan S. Wallach
The Velocity of Censorship: High-Fidelity Detection 
of Microblog Post Deletions
Tao Zhu, Independent Researcher; David Phipps, Bowdoin College;  
Adam Pridgen, Rice University; Jedidiah R. Crandall, University of New Mexico;  
Dan S. Wallach, Rice University
Open access to the Proceedings of the 22nd USENIX Security Symposium is sponsored by USENIXThis paper is included in the Proceedings of the 22nd USENIX Security Symposium.August 14–16, 2013 • Washington, D.C., USAISBN 978-1-931971-03-4The Velocity of Censorship: High-Fidelity Detection of Microblog Post
Deletions
Tao Zhu
PI:EMAIL
Independent Researcher
David Phipps
Computer Science
Bowdoin College
Adam Pridgen
Computer Science
Rice University
Jedidiah R. Crandall
Computer Science
University of New Mexico
Dan S. Wallach
Computer Science
Rice University
Abstract
Weibo and other popular Chinese microblogging sites are
well known for exercising internal censorship, to comply
with Chinese government requirements. This research
seeks to quantify the mechanisms of this censorship:
how fast and how comprehensively posts are deleted.
Our analysis considered 2.38 million posts gathered over
roughly two months in 2012, with our attention focused
on repeatedly visiting “sensitive” users. This gives us a
view of censorship events within minutes of their occur-
rence, albeit at a cost of our data no longer representing a
random sample of the general Weibo population. We also
have a larger 470 million post sampling from Weibo’s
public timeline, taken over a longer time period, that is
more representative of a random sample.
We found that deletions happen most heavily in the
ﬁrst hour after a post has been submitted. Focusing
on original posts, not reposts/retweets, we observed that
nearly 30% of the total deletion events occur within 5–
30 minutes. Nearly 90% of the deletions happen within
the ﬁrst 24 hours. Leveraging our data, we also consid-
ered a variety of hypotheses about the mechanisms used
by Weibo for censorship, such as the extent to which
Weibo’s censors use retrospective keyword-based cen-
sorship, and how repost/retweet popularity interacts with
censorship. We also used natural language processing
techniques to analyze which topics were more likely to
be censored.
1
Introduction
Virtually all measurements of Internet censorship are bi-
ased in some way, simply because it is not feasible to
test every keyword or check every post at small incre-
ments of time. In this paper, we describe our method for
tracking censorship on Weibo, a popular microblogging
platform in China, and the results of our measurements.
Our system focuses on a core set of users who are in-
terconnected through their social graph and tend to post
about sensitive topics. This biases us towards the content
posted by these particular users, but enables us to mea-
sure with high ﬁdelity the speed of the censorship and
discern interesting patterns in censor behaviors.
Sina Weibo (weibo.com, referred to in this paper sim-
ply as “Weibo”) has the most active user community of
any microblog site in China [39]. Weibo provides ser-
vices which are similar to Twitter, with @usernames,
#hashtags, reposting, and URL shortening. In February
2012, Weibo had over 300 million users, and about 100
million messages sent daily [3]. Like Twitter in other
countries, Weibo plays an important role in the discourse
surrounding current events in China. Both professional
reporters and amateurs can provide immediate, ﬁrst-hand
accounts and opinions of events as they unfold. Also like
Twitter, Weibo limits posts to 140 characters, but 140
characters in Chinese can convey signiﬁcantly more in-
formation than in English. Weibo also allows embedded
photos and videos, as well as comment threads attached
to posts.
China employs both backbone-level ﬁltering of IP
packets [5, 6, 11, 23, 37, 43] and higher level ﬁltering
implemented in the software of, for example, blog plat-
forms [15, 20, 28], chat programs [13, 29] and search en-
gines [30, 41]. Work speciﬁc to Weibo [2, 9] is discussed
in more detail in Section 2. To our knowledge ours is the
ﬁrst work to focus on how quickly microblog posts are
removed—on a scale of minutes after they are posted.
This ﬁdelity in measurement allows us to not only accu-
rately measure the speed of the censorship, but also to
compare censorship speeds with respect to topics, censor
methods, censor work schedules, and other illuminating
patterns.
What our results illustrate is that Weibo employs
“defense-in-depth” in their strategy for ﬁltering content.
Internet censorship represents a conﬂict between the cen-
sors, who seek to ﬁlter content according to some policy,
and the users who are subject to that censorship. Censor-
USENIX Association  
22nd USENIX Security Symposium  227
ship can serve to squelch conversations directly as well as
to chill future discussion with the threat of state surveil-
lance. Our goal in this paper is to catalog the wide variety
of mechanisms that Weibo’s censors employ.
This research has several major contributions:
• We describe the implementation of a method that
can detect a censorship event within 1–2 minutes of
its occurrence. A large amount of Weibo posts are
collected constantly via two APIs [26]. There are
more than 470 million posts from the public time-
line and 2.38 million posts from the user timeline in
our database.
• To further understand how the Weibo system can
react so quickly in terms of deleting posts with sen-
sitive content, we propose four hypotheses and at-
tempt to support each with our data. We also de-
scribe several experiments that shed light on cen-
sorship practices on Weibo. The overall picture we
illuminate in this paper is that Weibo employs a
distributed, defense-in-depth strategy for removing
sensitive content.
• Using natural language processing techniques that
overcome the usage of neologisms, named entities,
and informal language which typiﬁes Chinese social
media, we perform a topical analysis of the deleted
posts and compare the deletion speeds for different
topics. We ﬁnd that the topics where mass removal
happens the fastest are those that are hot topics in
Weibo as a whole (e.g., the Beijing rainstorms or a
sex scandal). We also ﬁnd that our sensitive user
group has overarching themes throughout all topics
that suggest discussion of state power (e.g., Beijing,
government, China, and the police).
The rest of this paper is structured as follows. Sec-
tion 2 gives some basic background information about
microblogging and Internet censorship in China. Then
Section 3 describes the methods we used for our mea-
surement and analysis, followed by Section 4 that de-
scribes the timing of censorship events. Section 5 intro-
duces the natural language processing we applied to the
data and presents results from topical analysis. Finally,
we conclude with a discussion of various Weibo ﬁltering
mechanisms in Section 6.
2 Background
Starting from 2010, when microblogs debuted in China,
not only have there been many top news stories where
the reporting was driven by social media, but social me-
dia has also been part of the story itself for a number
of prominent events [21, 38], including the protests of
Wukan [33], the Deng Yujiao incident [32], the Yao
Jiaxin murder case [35], and the Shifang protest [36].
There have also been events where social media has
forced the government to address issues directly, such as
the Beijing rainstorms in July 2012.
Chinese social media analysis is challenging [27].
One of many concerns that can hinder this work is the
general difﬁculty of mechanically processing Chinese
text. Western speakers (and algorithms) expect words
to be separated by whitespace or punctuation. In writ-
ten Chinese, however, there are no such word bound-
ary delimiters. The word segmentation problem in Chi-
nese is exacerbated by the existence of unknown words
such as named entities (e.g., people, companies, movies)
or neologisms (substituting characters that appear sim-
ilar to others, or otherwise coining new euphemisms
or slang expressions, to defeat keyword-based censor-
ship) [12]. Furthermore, since social media is heavily
centered around current events, it may well contain new
named entities that will not appear in any static lexi-
con [8].
Despite these concerns, Weibo censorship has been
the subject of previous research. Bamman et al. [2]
performed a statistical analysis of deleted posts, show-
ing that the presence of some sensitive terms indicated a
higher probability of the deletion of a post. Their work
also showed some geographic patterns in post deletion,
with posts from the provinces of Tibet and Qinghai ex-
hibiting a higher deletion rate than other provinces. Wei-
boScope [9] also collects deleted posts from Weibo, but
their strategy is to follow all users with a high number of
followers. This is in contrast to our strategy which is to
follow a core set of users who have a high rate of post
deletions, some of which have many followers and some
of which have few. The deletion events in these works
are measured with a resolution of hours or days. Our
system is able to detect deletion events at the resolution
of minutes.
3 Methodology
To have a better understanding of what the Weibo system
is targeting for censorship deletions, and how fast they do
so, we have developed a system which collects removed
posts on targeted users in almost real time.
Identifying the sensitive user group
3.1
In Weibo each IP address and Application Programming
Interface (API) has a rate limit for access to the service.
This forced us to make a number of engineering com-
promises, notably focusing our attention where we felt
we could ﬁnd those posts most likely to be subject to
censorship. We decided to focus on users who we have
228  22nd USENIX Security Symposium 
USENIX Association
seen being censored in the past, under the assumption
that they will be more likely to be censored in the future.
We call this group of users the sensitive group.
We started with 25 sensitive users that we discov-
leveraging a list from China Digital
ered manually,
Times [4] of sensitive keywords which are not allowed
to be searched on Weibo’s server. To ﬁnd our initial
sample, we searched using out-dated keywords that were
later un-banned. For example, 党产共 (Reverse of 共产
党, which means “Communist Party”) was found to be
banned on 4 April 2011, but found to not be banned on
20 October 2011, which means the we were able to ob-
tain some posts containing 党产共 when we searched for
this keyword after 20 October 2011. From the search re-
sults, we picked 25 users who stood out for posting about
sensitive topics.
Next, we needed to broaden our search to a larger
group of users. We assumed that anybody who has been
reposted more than ﬁve times by our sensitive users must
be sensitive as well. We followed them for a period of
time and manually measured how often their posts were
deleted. Any user with more than 5 deleted posts was
added to our pool of sensitive users.
After 15 days of this process, our sensitive group in-
cluded 3,567 users, and within this group we observed
more than 4,500 post deletions daily, including about
1,500 “permission denied” deletions. (See Section 3.3
for discussion on different types of deletion events.)
Roughly 12% of the total posts from our sensitive users
were eventually deleted. Further, we have enough of
these posts to be able to run topical analysis algorithms,
letting us extract the main subjects that Weibo’s censors
seemed concerned with on any given day.
We contrast these statistics with WeiboScope [9], de-
veloped at the University of Hong Kong in order to track
trends on Weibo concurrently with our own study. The
core difference between our work and WeiboScope is
that they track a large sample: around 300 thousand users
who each have more than 1000 followers. Despite this,
they report observing no more than 100 “permission de-
nied” deletions per day. WeiboScope’s results, therefore,
are perhaps more representative of the overall impact of
Weibo’s censorship as a fraction of total Weibo trafﬁc,
while our work has more resolving power to consider the
speed and techniques employed by Weibo’s censors.
Because we do not have access to WeiboScope’s data,
we are limited in our ability to make direct comparisons
of our datasets. They did brieﬂy support data down-
loads, and we extracted their “2,500 last permission de-
nied data” on 20 July 2012. This service has since been
closed. Our system went live following user timelines
on the same date, giving us a single day from which we
might compare our data. For 20 July 2012, WeiboScope
observed 54 permission-denied posts, while our system
observed 1,056.
(Our own system does not yet support public, real-
time downloads of our data, which among other issues
could make it easier for Weibo to shut it down. An appro-
priate means of disseminating real-time results or regular
summaries is future work for our group.)
While our methodology cannot be considered to yield
a representative sample of Weibo users overall, we be-
lieve it is representative of how users who discuss sensi-
tive topics will experience Weibo’s censorship. We also
believe our methodology enables us to measure the top-
ics that Weibo is censoring on any given day.
3.2 Crawling
Once we settled on our list of users to follow, we wanted
to follow them with sufﬁcient ﬁdelity to see posts as they
were made and measure how long they last prior to being
deleted. Our target sampling resolution was one minute.
We use two APIs provided by Weibo, allowing us to
query individual user timelines as well as the public time-
line1. Starting in July 2012, we queried each of our 3,500
users, once per minute, for which Weibo returns the most
recent 50 posts. Deleted posts outside of this 50-post
window are not detected by our system, meaning that we
may be underestimating the number of older posts that
get deleted.
We also queried the public timeline roughly once ev-
ery four seconds, for which Weibo returns 200 recent
posts. Half of these posts appear to be 1–5 minutes older
than real-time, and the other half are hours older.
Weibo does not support anonymous queries to its
servers, requiring us to create fake accounts on the ser-
vice. Weibo further enforces rate limits both on these
users’ queries as well as on source IP addresses, regard-
less of what user account is being used for the query. To
overcome these concerns, we used roughly 300 concur-
rent Tor circuits [24], driven from our research comput-
ing cluster. Our resulting data was stored and processed
on a four-node cluster using Hadoop and HBase [1].
If and when Weibo might make a concerted effort to
block us, it is easy to imagine a ongoing game where
they invent new detection strategies and we invent new
workarounds. So far, this has not been an issue.
3.3 Detecting deletions
An absent post may have been censored, or it may have
been deleted for any of a variety of other reasons. User
1The user timeline returns both original posts and retweeted posts
by that user, while the public timeline only returns original posts. Also,
the public timeline appears to be only a sampling of the total public
trafﬁc.
USENIX Association  
22nd USENIX Security Symposium  229
accounts can also be closed, possibly for censorship pur-
poses. Users cannot delete their own account, only the
system can delete accounts. We conducted a variety of
short empirical tests to see if we could distinguish the
different cases. We concluded that we can detect two
kinds of deletions.
If a user deletes his or her own post, a query for that
post’s unique identiﬁer will return a “post does not ex-
ist” error. We have observed this same error code re-
turned from censorship events and we refer to these, in
the remainder of the paper as general deletion. However,
there is another error code, “permission denied,” which
seems to indicate that the relevant database record still
exists but has been ﬂagged by some censorship event.
We refer to these as permission-denied deletions or sys-
tem deletions. In either case, the post is no longer visible
to Weibo users.
The ratio of system deletions to general deletions in
our user timeline data set is roughly 1:2. In this paper, we
generally focus on posts that have been system deleted,
because there appears to be no way for a user to induce
this state. It can only be the result of a censorship event
(i.e., there are no censorship false positives in our system
deletion dataset). Because we followed a core set of users
who post on sensitive subjects, we did not ﬁnd it neces-
sary to account for spam in our user timeline dataset.
Our crawler, which repeatedly fetches each sensitive
user’s personal timeline, is searching for posts that ap-
pear and then are subsequently deleted. If a post is in
our database but is not returned from Weibo, then we
issue a secondary query for that post’s unique ID to de-
termine what error message is returned. Ultimately, with
the speed of our crawler, we can detect a censorship event
within 1–2 minutes of its occurrence.
For each returned post from Weibo, there is a ﬁeld
which records the creation time of the post. The life-
time of a post is the time difference between the time our
system detected the post being deleted and the creation
time. Therefore a post’s lifetime recorded by our system
is never shorter than its real lifetime, and never longer
than its real lifetime by more than two minutes.
4 Timing of censorship
For easier explanation we ﬁrst give some deﬁnitions. A
post can be a repost of another post, and can have embed-
ded images. Also other users can repost reposts. If post
A is a repost of post B, we call post A a child post and
post B a parent post. If post A is not a repost of another
post, we call post A a regular post.
Using our user tracking method, from 20 July 2012 to
8 September 2012, we have collected 2.38 million user
timeline posts, with a 12.8% total deletion rate (4.5% for
system deletions and 8.3% for general deletions). Note
that this deletion rate is speciﬁc to our users and not rep-
resentative of Weibo as a whole. With a brief analysis,
we found that 82% of the total deletions are child posts,
and 75% of the total deletions have pictures either in
themselves or in their parent post.
(a) Sys. del. posts
(b) Sys. del. posts in first 2h
● ●
●
●●●
y
c
n
e
u
q
e
r
F
y
c
n
e
u
q
e
r
F
0
0
5
0
5
5
1
0
5
0
2
0
1
5
2
1
●
●●●
●
●●
●●
●●●
●●●●●●
●●●
●
●
●
●
●●●●
●
●●
●
●
●
●
●
●
●●
●
●
●●●●●
●●
●●●●
●●
●
●
●
●
●
●
●●
●
●
●
●
●●
●●
●
●●●
●
●●●●
●●●
●●●
●●
●
●
●●●●
●●
●●
●
●●●●
●
●
●
●
●●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●●
●
●
●●●●●
●
●
●●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●●
●
●
●●
●
●●
●
●
●
●●
●
●
●●
●
●
●
●
●
●
●
●
●●●
●
●
●●
●
●
●
●
●
●
●●
●
●
●
●
●