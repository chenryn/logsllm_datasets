title:Towards efficient traffic-analysis resistant anonymity networks
author:Stevens Le Blond and
David R. Choffnes and
Wenxuan Zhou and
Peter Druschel and
Hitesh Ballani and
Paul Francis
Towards Eﬃcient Traﬃc-analysis Resistant Anonymity Networks
Stevens Le Blond1
Peter Druschel1
1MPI-SWS
David Choffnes2
Hitesh Ballani4
Wenxuan Zhou3
Paul Francis1
2Univ. of Washington/
Northeastern Univ.
3UIUC
4Microsoft Research
http://aqua.mpi-sws.org
ABSTRACT
Existing IP anonymity systems tend to sacriﬁce one of low
latency, high bandwidth, or resistance to traﬃc-analysis.
High-latency mix-nets like Mixminion batch messages to re-
sist traﬃc-analysis at the expense of low latency. Onion
routing schemes like Tor deliver low latency and high band-
width, but are not designed to withstand traﬃc analysis.
Designs based on DC-nets or broadcast channels resist traf-
ﬁc analysis and provide low latency, but are limited to low
bandwidth communication.
In this paper, we present the design, implementation, and
evaluation of Aqua, a high-bandwidth anonymity system
that resists traﬃc analysis. We focus on providing strong
anonymity for BitTorrent, and evaluate the performance of
Aqua using traces from hundreds of thousands of actual Bit-
Torrent users. We show that Aqua achieves latency low
enough for eﬃcient bulk TCP ﬂows, bandwidth suﬃcient to
carry BitTorrent traﬃc with reasonable eﬃciency, and resis-
tance to traﬃc analysis within anonymity sets of hundreds
of clients. We conclude that Aqua represents an interesting
new point in the space of anonymity network designs.
Categories and Subject Descriptors
C.2.1 [Computer Systems Organization]: Computer-
communication networks—Network Architecture and Design
Keywords
Anonymity networks, P2P ﬁle sharing, Strong anonymity
1.
INTRODUCTION
Internet users concerned about their privacy, including
whistleblowers and dissident citizens of totalitarian states,
depend on reliable means to access Internet services anony-
mously. As demonstrated by a recent subpoena requiring
Twitter to provide connection details of suspected Wikileaks
supporters [25], governments can readily discover the net-
work identities of web users. Simple proxy VPN services
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
SIGCOMM’13, August 12–16, 2013, Hong Kong, China.
Copyright 2013 ACM 978-1-4503-2056-6/13/08 ...$15.00.
also can be legally compelled to log and reveal client IP ad-
dresses, as demonstrated by a UK-based VPN that recently
complied with a US subpoena to trace one of its users [1].
Network anonymization services like Tor provide a higher
degree of protection, because individual proxies cannot learn
both the destination and client IP address of an anonymized
ﬂow [11]. However, Tor is not designed to withstand traﬃc
analysis [9, 20, 23, 29, 32, 33], which means an attacker who
can observe the traﬃc at multiple proxies involved in a Tor
circuit (e.g., the ingress and egress proxy) can determine the
source and destination of the circuit.
In practice, govern-
ments can request that ISPs duplicate targeted customers’
traﬃc on-the-ﬂy and forward it through a secure channel [2].
The existence of surveillance facilities like the NSA Spy Cen-
ter in Utah suggests that government agencies may already
be collecting such information at a massive scale [3].
Traﬃc analysis works by matching the time series of en-
crypted packets within a circuit at diﬀerent proxies. To
defeat traﬃc analysis, proxies have to obscure the temporal
pattern of individual packet ﬂows (we refer to this process as
traﬃc obfuscation). Obfuscation can be achieved by batch-
ing packets from diﬀerent ﬂows or by adding artiﬁcial delay
or artiﬁcial traﬃc called chaﬀ. Obfuscation necessarily ex-
acts a cost in terms of the delay, throughput, or bandwidth
requirements of anonymized ﬂows.
Roughly a decade ago, a number of researchers proposed
designs for low-latency, traﬃc-analysis resistant anonymity
networks [4, 8, 12, 17, 18, 26, 28]. The performance of these
systems, however, was rather discouraging. Perhaps as a
result there has been a dearth of research in recent years
on low-latency traﬃc-analysis resistant anonymity networks.
While there is likely no silver bullet design, we feel that
this problem is important enough that researchers should
continue to work for solutions that exhibit an acceptable
beneﬁt-cost ratio under some set of realistic conditions.
Towards this end, this paper describes the design, imple-
mentation, and evaluation of Anonymous Quanta (Aqua for
short), a low-latency anonymity network that resists traﬃc
analysis, can tolerate a bounded number of compromised
nodes, and scales well with the number of users. Aqua
demonstrates substantial performance gains over previous
designs for a workload based on thousands of actual Bit-
Torrent users. For instance, we show that Aqua achieves
k-anonymity within a set of k = 100 BitTorrent users with
a median cost of 15% additional bandwidth utilization and
20% longer download time.
There are three key insights behind Aqua’s design. First,
Aqua uses a diﬀerent anonymization and traﬃc obfuscation
strategy in the core (i.e., on links connecting Aqua proxies)
than it does at the edges (i.e., on links connecting clients
to an Aqua proxy). This separation allows Aqua to take ad-
vantage of the diﬀerent traﬃc conditions in core and edge to
minimize overhead for a given degree of anonymity. Second,
in the core, Aqua relies on encrypted, chaﬀed ﬂows to achieve
a payload-independent, uniform traﬃc rate. It routes client
payload ﬂows via multiple overlay paths to take advantage of
available capacity and minimize chaﬀ bandwidth overhead.
Third, at the edges, Aqua forms sets of clients with similar
payload traﬃc patterns, and varies the rate of encrypted,
chaﬀed traﬃc on client links in the same set uniformly to
achieve k-anonymity. Thus, Aqua can take advantage of ex-
isting spatial and temporal correlation among client payload
ﬂows to achieve large anonymity sets at low overhead.
Aqua’s initial target application is peer-to-peer ﬁle shar-
ing. BitTorrent is an important application, because it has
a large user base and many of its users desire anonymity. A
recent study showed that 17% of P2P ﬁle-sharing users were
already employing anonymizing services and 51% wished to
do so in the future [19]. For lack of an alternative, users to-
day resort to Tor, which is not designed to withstand traﬃc
analysis. Moreover, BitTorrent carries much traﬃc, which
presents both a challenge for existing anonymity designs and
an opportunity for Aqua: The higher the temporal and spa-
tial correlation among payload ﬂows, the lower the inherent
overhead required to obfuscate the source and destination of
an individual ﬂow.
This paper makes the following contributions:
• The design of a traﬃc-analysis resistant anonymity
network with high bandwidth eﬃciency and latency
low enough for bulk TCP ﬂows.
• A trace-driven evaluation of Aqua on a workload of
hundreds of thousands of actual BitTorrent users.
• A comparison of Aqua’s performance with several al-
ternative designs: constant rate chaﬃng, broadcast
channels, and P2P overlays.
Our experimental evaluation shows that using multiple
paths in the core helps to disperse traﬃc peaks, which
in turn reduces the rate of chaﬀ traﬃc and the result-
ing overhead signiﬁcantly. Also, enforcing uniform variable
rate among endpoints with correlated traﬃc can provide k-
anonymity with low overhead.
The rest of this paper is organized as follow. Background
and related work is discussed in Section 2. We describe the
Aqua design and its security properties in Section 3. An ex-
perimental evaluation of the Aqua design, and some prelimi-
nary results with a prototype implementation are presented
in Section 4. Finally, we conclude in Section 5.
2. BACKGROUND AND RELATED WORK
Fundamental techniques. The ultimate source or desti-
nation of an IP packet can be concealed using a relay node,
such as a VPN service. However, this simple approach de-
pends on the integrity of the relay node, which knows the
source and destination of any packet passing through it. The
approach can be generalized to an anonymity network, where
packets are forwarded via several relays, such that no sin-
gle relay knows both source and destination of a packet (or
depending on the design, neither source nor destination).
Chaum introduced mix-nets to provide anonymous com-
munication and defeat traﬃc analysis [5].
In addition to
relaying messages, a mix hides the correspondence between
input and output messages through hop-by-hop encryption
and batching. Encryption provides bit-wise unlinkability;
that is, it unlinks the bit patterns of messages arriving at
the mix and the messages departing from the mix. Batching
prevents an attacker from tracing messages based on their
arrival and departure times. To defend against compromised
mixes, each message can be sent through a sequence of mixes
so anonymity is maintained as long as at least one mix in
the sequence is honest.
Dining cryptographers (D-C) nets [6, 16] and veriﬁable
shuﬄes [13, 22, 31] are cryptographic techniques that of-
fer strong resistance to traﬃc analysis without requiring
batching. However, computation and communication costs
have generally limited designs based on these ideas to small
anonymity sets and low bandwidth eﬃciency.
At a high level, anonymity networks can be divided into
peer-to-peer networks consisting only of clients and infras-
tructure based networks with dedicated relays separate from
the clients. P2P networks [12, 24] are inherently robust to
network edge analysis, because an attacker cannot distin-
guish whether a node is the source, destination or relay of
traﬃc. On the other hand, peers tend to be less reliable, less
powerful and more heterogeneous, which makes it harder to
provide predictable performance. Lastly, P2P network ex-
pose clients to additional legal risks, because they relay traf-
ﬁc for other clients. Infrastructure based networks [11] tend
to have more powerful and reliable relay nodes, with known
locations and jurisdictions. However, they face network-
edge attacks, which require weaker adversarial models (i.e.,
trusted entry/exit relays) or additional defenses.
High-latency anonymity networks. Designs providing
both bit-wise unlinkability and batching are generally re-
ferred to as high-latency anonymity networks. These designs
are implemented by systems like Babel [15], Mixmaster [21],
and Mixminion [10] and carry delay-tolerant communica-
tions such as e-mails. Mix-nets typically perform public key
encryption for each message they process and typically delay
messages for hours for the purpose of batching.
Modest-latency anonymity networks. Many applica-
tions require both anonymity and modest latency. By re-
fraining from batching, anonymity designs can typically re-
duce round trip time to seconds or hundreds of millisec-
onds, making them appropriate for ﬂow-based communica-
tion. But, by doing so, they generally have to give up one
of bandwidth eﬃciency (e.g., P 5 [26], Dissent [30]), or resis-
tance to traﬃc analysis (e.g., Tor).
Onion routing (Tor). The most popular low-latency
anonymity design, Tor, is circuit-based. To establish a cir-
cuit, a client selects a number of proxies at random and then
establishes a session key with each proxy in such a way that
each proxy knows only its predecessor and successor in the
circuit. Once a circuit is established, the client can encrypt
a packet using the session key of the proxies from last to ﬁrst
and send the encrypted packet to the ﬁrst proxy of the cir-
cuit. In turn, each proxy decrypts the packet and forwards
it to its successor in the circuit until the unencrypted packet
leaves the last proxy of the circuit. Tor is not designed to
resist traﬃc analysis attacks.
Dissent [30] is an infrastructure based anonymity service
with a very strong adversarial model, where a single honest
Architecture
Traﬃc analysis
resistance
Latency
Bandwidth
eﬃciency
Anonymity set
Aqua Tor Tarzan Dissent P 5 Mixminion
c/s
c/s P2P
P2P
c/s
c/s
high none high very high high very high
low
high
low
low
low
low
high high medium low
low
high
size
medium large medium small
small
large
However, Aqua splits payload traﬃc along multiple paths,
enabling it to better utilize available bandwidth within ex-
isting anonymity sets. Finally, Aqua takes advantage of sim-
ilarity in concurrent payload traﬃc to achieve anonymity
with high bandwidth eﬃciency. Together, these techniques
enable Aqua to achieve better bandwidth eﬃciency than
Tarzan and, to the best of our knowledge, all existing traﬃc
analysis resistant anonymity networks. Table 1 summarizes
our comparison.
Table 1: Comparison of anonymity networks
3. DESIGN
proxy is suﬃcient to ensure anonymity, even in the presence
of an attacker who can observe all traﬃc. The system re-
lies on DC-nets and veriﬁable shuﬄes, and cleverly exploits
its infrastructure based architecture to scale to hundreds of
clients with modest delay and bandwidth suﬃcient for web
browsing. However, the system’s capacity and scalability are
subject to DC-net scaling limits with respect to the number
of proxies, and overhead per payload bit for cryptographic
processing.
P 5 [26] is a scalable peer-to-peer anonymity network ro-
bust to passive traﬃc analysis. The participating peers form
a hierarchy of broadcast channels, such that each peer joins
a small number (2 or 3) of diﬀerent channels. The peers in a
given channel exchange hop-by-hop encrypted packets at a
ﬁxed rate, mixing payload traﬃc with chaﬀ to achieve a ﬁxed
target rate. To send a packet to a peer r, the sender encrypts
the packet with r’s public key, and forwards the message to
one of the receiver’s channels, in which it is broadcast. By
choosing channels with diﬀerent numbers of members, peers
can trade receiver anonymity for communication eﬃciency.
Tarzan [12] is a low-latency peer-to-peer anonymity net-
work. Tarzan relies on layered encryption to achieve bit-wise
unlinkability despite malicious peers. Tarzan uses chaﬀ traf-
ﬁc to obscure traﬃc patterns and ensures that the traﬃc of
the nodes within a given anonymity set is indistinguishable.
The original design of the Java Anonymous Proxy
(JAP) [4]
infrastructure based anonymity network had
clients exchange constant traﬃc with the ﬁrst mix of a cas-
cade, in order to defeat end-to-end traﬃc analysis. However,
this countermeasure was abandoned in the JAP deployment
because its bandwidth overhead was considered too high.
Similarly, the Freedom Network was initially deployed with
some countermeasures against traﬃc analysis but they were
latter removed due to their high bandwidth overhead [27].
Summary. Compared to existing techniques, Aqua occu-
pies a diﬀerent point in the design space, seeking to meet