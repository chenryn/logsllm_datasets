When all of the points are in one hemisphere some of the Voronoi points are
incorrect.
To be more precise, certain of the points are on the wrong side of the sphere.
An example is to create a tetrahedron with the following generator points:
generators (polar)  
[[-25.56198973 10.81015471]  
[-54.40661695 26.73672285]  
[-55.29180524 -6.7928405 ]  
[-45.12839961 9.12243389]]  
generators (rectangular)  
[[ 0.88610999 -0.42383021 0.18755541]  
[ 0.51980039 -0.72622668 0.4498915 ]  
[ 0.56540011 -0.81629197 -0.11827989]  
[ 0.69659682 -0.69972598 0.15854467]]
![p](https://user-
images.githubusercontent.com/2798381/47086102-7b2f5300-d1cd-11e8-9394-405ca519bca6.png)
The first three Voronoi points and associated Delaunay triangles come out
fine:  
Voronoi vertex number 1 , coordinates: [ 0.73647759 -0.54764287 0.39709955]  
Delaunay vertices  
[[ 0.69659682 -0.69972598 0.15854467]  
[ 0.88610999 -0.42383021 0.18755541]  
[ 0.51980039 -0.72622668 0.4498915 ]]  
Voronoi vertex number 2 , coordinates: [ 0.42155897 -0.88977832 0.17487877]  
Delaunay vertices  
[[ 0.69659682 -0.69972598 0.15854467]  
[ 0.56540011 -0.81629197 -0.11827989]  
[ 0.51980039 -0.72622668 0.4498915 ]]  
Voronoi vertex number 3 , coordinates: [ 0.82153008 -0.54761634 -0.15875979]  
Delaunay vertices  
[[ 0.69659682 -0.69972598 0.15854467]  
[ 0.56540011 -0.81629197 -0.11827989]  
[ 0.88610999 -0.42383021 0.18755541]]
![v1](https://user-
images.githubusercontent.com/2798381/47086240-ce090a80-d1cd-11e8-83be-95237aff6c81.png)  
![v2](https://user-
images.githubusercontent.com/2798381/47086249-d2352800-d1cd-11e8-8215-32c9c047f499.png)  
![v3](https://user-
images.githubusercontent.com/2798381/47086267-de20ea00-d1cd-11e8-945c-1280f73d67a4.png)
The fourth point is not correct - it should be on the opposite side of the
sphere:  
Voronoi vertex number 0 , coordinates: [ 0.69593711 -0.69851441 0.16658079]  
Delaunay vertices  
[[ 0.56540011 -0.81629197 -0.11827989]  
[ 0.88610999 -0.42383021 0.18755541]  
[ 0.51980039 -0.72622668 0.4498915 ]]
![v0](https://user-
images.githubusercontent.com/2798381/47086358-17f1f080-d1ce-11e8-862c-1902bb002aca.png)
I have a good understanding of the algorithm and what the problem is but I
don't know how to fix it using qhull.