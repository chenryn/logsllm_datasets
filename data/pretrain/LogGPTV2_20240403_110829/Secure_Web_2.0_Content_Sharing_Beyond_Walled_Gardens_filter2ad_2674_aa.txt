title:Secure Web 2.0 Content Sharing Beyond Walled Gardens
author:San-Tsai Sun and
Kirstie Hawkey and
Konstantin Beznosov
2009 Annual Computer Security Applications Conference
Secure Web 2.0 Content Sharing Beyond Walled Gardens
San-Tsai Sun, Kirstie Hawkey, and Konstantin Beznosov
University of British Columbia
Vancouver, Canada
{santsais,hawkey,beznosov}@ece.ubc.ca
Abstract—Web 2.0 users need usable mechanisms for sharing
their content with each other in a controlled manner across
boundaries of content-hosting or application-service providers
(CSPs). In this paper, we describe the architecture, design,
and implementation of a proposed system for Web 2.0 content
sharing across CSPs. With our approach, users use their
existing email account to login to CSPs, and content owners use
their email-based contact-lists to specify access policies. Users
are assumed to be equipped only with a Web browser and CSPs
do not need to change their existing access-control mechanisms.
In addition, policy statements are URI-addressable, and the
same access policies can be reused and enforced across CSPs.
Keywords-Web 2.0 content sharing; access control;
I. INTRODUCTION
With Web 2.0, the user is both a consumer and provider
of Web content [1]. However, today’s Web is site centric.
For each service provider, a Web user has to maintain a
separate copy of identity, social relationships, and access-
control polices. In this paper, we use the term “walled
garden” to refer to such an administrative domain deﬁned
by a service provider. Because each walled garden controls
its own set of users and employs a different access-control
mechanism to protect personal content, it is difﬁcult to share
personal content beyond walled gardens. For the purpose
of illustrating our discussion, we will use the following
scenario of Web content sharing as a running example:
Scenario 1: Alice is a Girl Scout in the Colonial Coast
Adventures (CCA) club. She took pictures at a scout training
event, and would like to use her favorite photo web site
MyPhoto.com to share those photos online. In CCA, the
policy is that pictures of training events can only be seen
by CCA troop members and their parents. Alice would like
to implement this policy and limit access to her photos
accordingly. Jenny is another CCA member and Mary is her
mother. In order for Mary to access Alice’s photos for this
event, Mary has to prove that she is the parent of Jenny and
that Jenny is a CCA member. However, neither Jenny nor
Mary are registered members of MyPhoto.com, and Alice
does not know Jenny and Mary.
Personal content sharing is currently available in limited
forms, with two main content sharing mechanisms offered
by CSPs. The ﬁrst one is to make user content public. Obvi-
ously, this is inadequate for controlled sharing. The second
one is the walled garden approach. With this approach, the
user who “owns” content can grant permissions directly
to other users (or user groups) within the same CSP. The
walled-garden approach is easy to implement and use. Its
main limitation is that not all the desired content users (e.g.,
Girl Scouts and their parents) are necessarily registered with
the corresponding CSP; and thus, users outside of that CSP
cannot be granted selective access. Even within the same
walled garden, the resource requester and owner might not
be known to each other (e.g., Alice does not know some
other Girl Scouts and their parents who use MyPhoto.com),
increasing the challenge of controlled sharing for both the
owners and consumers of content.
To share personal content with unknown users, one pos-
sible solution is to adopt a distributed authorization system
the notion of trust and delegation, which
that support
provides a ﬂexible way for a user to delegate authority to
another user who is in a better position for deﬁning attributes
of other users. For example, Alice might trust the CCA troop
to deﬁne its Scout members, even those members who are
unknown to Alice. A user might want to use one attribute to
make an inference about another attribute (e.g., Alice deﬁnes
all Girl Scouts of CCA as her friends). In addition, a user
might also want to delegate to unknown users based on their
asserted attributes. For example, Alice trusts CCA to deﬁne
its member Scouts; she then delegates the authority over the
“parent” attribute to those scout members.
There are many existing distributed authorization systems
(e.g., KeyNote [2], SPKI/SDSI [3], RT [4]), each with a
different level of delegation support. However, because Web
2.0 access policies for personal content are authored by users
without special technical skills, and are enforced by mu-
tually untrusted walled gardens, there are many challenges
remaining to address. The ﬁrst challenge is usability. The
expressive power of a policy language must be balanced with
usability. An average Web user must be able to comprehend
the language to ensure that an access policy matches the
owner’s sharing intention. To be usable, the user-experiences
provided by the sharing mechanism must leverage the Web
skills and experiences that a Web user already has. Inter-
operability is the another challenge. Credentials and access
policies that are authored in one policy provider must be
employable to protect personal content residing on multiple
CSPs. In addition, the solution should work under current
walled-garden restrictions without requiring CSPs to change
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.45
409
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:09 UTC from IEEE Xplore.  Restrictions apply. 
their existing access-control mechanisms.
In addition to usability and inter-operability, granularity
of control and accountability should be considered as well.
Content created by Web users is diverse and sometimes
complex, a content owner should be able to specify access-
in a ﬁne-grained terms. For example, a content
control
owner might want
to protect a photo in an album, an
event in a calendar, or even a paragraph within a blog.
For accountability, a content owner should be able to know
which data is being accessed, by who and when, and be able
to revoke an authorization at anytime if necessary.
To address the aforementioned challenges, our work is
based on the following design goals:
• Users are not required to set up a separate account
and password on each service provider to view shared
content.
• The user is assumed to be equipped only with a web
browser. The sharing mechanism should be built upon
the existing Internet infrastructure and open standards.
It should not require any special software (e.g., browser
plug-in, local proxy) being installed on end-user com-
puters, or require public key/secret key, X.509, or
SPKI/SDSI certiﬁcates managed by a user to perform
cryptographic operations.
• The sharing solution should provide an additional chan-
nel for content sharing. CSPs are not required to change
their existing access-control mechanisms.
• The conﬁdentiality of credentials and access policies
should be protected. Thus, credential statements should
not be seen or exposed to unauthorized entities during
an authorization process.
To achieve our design goals, we ﬁrst reviewed existing
literature to understand user content sharing practices. The
most important ﬁndings that related to our work is that
email is the most commonly used sharing mechanism [5],
[6], [7], and users tend to treat socially deﬁned classes (e.g.,
friends, co-workers, family) the same when sharing [5], [6].
In addition, we studied current sharing solutions provided
by CSPs that enable users to share their content beyond
walled gardens. Most CSPs (e.g., Google, Flickr, Facebook)
support sharing through a secret-link, which is a hard-to-
guess URL that uniquely identiﬁes a shared resource (e.g.,
http://picasaweb.google.com/Alice?sl=Gv1sRgCOzuv).
When a resource owner shares personal content using a
secret-link, the corresponding CSP creates a special URL
for that resource. Anyone who knows the secret-link can
access the content. To share speciﬁc personal content,
a resource owner (sometimes with the aid of the CSP)
sends the secret link via email to selected users. Message
recipients view the shared content by clicking on the link.
Secret-links are easy to use for both owners and users,
and are easy to implement by CSPs. Secret-links provide
a certain degree of control over sharing since only those
410
who obtain (or guess) the link can access the content.
However, the use of secret-links are not secure as they
can be forwarded to unauthorized users. Another limitation
is that a content owner has to know the recipient’s email
explicitly, which might be impractical
in some sharing
scenarios (e.g., Alice doesn’t know Jenny and Mary).
In this paper, we propose an new approach for secure
Web 2.0 content sharing beyond walled gardens. Based
on the aforementioned ﬁndings,
the main ideas behind
our approach are: (1) reuse existing email accounts for
global
identiﬁcation, (2) extend email-based contact-lists
with the notion of trust and delegation for access control,
and (3) leverage the existing secret-link mechanism for
content sharing. Our approach has two main components:
OpenIDemail and OpenPolicy providers. An OpenIDemail
provider is an existing email provider that is augmented
with an OpenID [8] identity service and an email-to-OpenID
mapping service. OpenIDemail providers enable Web users
to use their email to login CSPs while remain using OpenID
identiﬁer for identiﬁcation. An OpenPolicy provider is a
policy hosting provider that offers services for internet users
to organize their credentials and polices, and for CSPs to
make authorization decisions.
To evaluate our approach, we implemented a prototype
on Facebook to allow Facebook users to share their photo
albums with non-Facebook users. With our approach, the
user experiences for content sharing are similar to the
existing secret-link sharing mechanism. Content owners use
their contact-lists hosted on OpenPolicy providers to specify
delegation-enabled access policies. Using existing email ac-
counts, content requesters do not need to setup an account on
Facebook and do not require any special software installed
to view shared content; Facebook does not need to change
its access-control mechanism.
The rest of the paper is organized as follows. The next
section discusses background and related work. Section III
presents the detailed design of our proposed solution, and
Section IV discusses the evaluation methodology and results.
Section V summarizes the paper and outlines future work.
II. BACKGROUND AND RELATED WORK
In order to develop requirements for a mechanism to share
Web content beyond walled gardens, we reviewed existing
literature to understand user content sharing practices and
identify the breakdowns users encounter when sharing. As
we aimed to design a solution that can be operated across
administrative boundaries, we also studied existing solutions
in federated identity management and distributed authoriza-
tion systems. In this section, we summarize the lessons we
learned from existing research and discuss related work.
A. User Content Sharing Practices
To explore preferences for general information sharing,
Olson et al. [9] investigated what content is shared and with
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:09 UTC from IEEE Xplore.  Restrictions apply. 
whom. They ﬁnd that participants abstract the details of
sharing into high-level classes of recipients and information
which are treated similarly. Voida et al. [5] studied the
sharing practices of ten employees at a medium-size research
organization to identify the types of content they share and
with whom, the mechanisms they use to share, and how
much control over the information they grant to the sharing
recipients. They identiﬁed 34 different types of ﬁles that are
shared among colleagues, friends, and families. One of the
most important ﬁndings related to our work is that email is
the most common mechanism for sharing (45%), followed
by network folders (16%) and posting content to a web
site (11%). The study also identiﬁed the breakdowns that
users have experienced in their ﬁle sharing activities. The
main classes of breakdowns are (1) difﬁculties in selecting
a sharing mechanism with desired features that are available
to all sharing participants, (2) forgetting what ﬁles had
been shared and with whom, and (3) problems in knowing
when new content was made available. Similarly, Whalen [6]
conducted studies to investigate the ﬁle sharing practice in
both work and personal context of about 200 employees at
a US research institution. Most of her results conﬁrm the
ﬁndings made by Voida et al. In addition, she identiﬁes the
factors that inﬂuence the choice of sharing method used.
She also found that a lack of activity information (e.g., who
and when) on the shared ﬁles could be problematic for both
security and collaboration.
Miller et al. [7] conducted an empirical study of the photo
sharing practices in Flickr.com. They found that privacy-
concerned users primarily use e-mail, supplemented with
web galleries, to control the privacy level of different photos.
The perception of using email for sharing by those users
is that an e-mail message is intentional, requires no setup,
and is targeted at a speciﬁc list of recipients. Miller et al.
suggest that a sharing solution should look and feel much
like e-mail, but with a more robust underlying framework
geared to photo sharing.
B. Federated Identity Management
One of the limitations of the walled-garden approach for
sharing is the challenge of having separate user identiﬁers
with different CSPs. Users end up maintaining multiple
identities and corresponding passwords at multiple sites,
which leads to weaker passwords and/or password re-use
across accounts [10].
Federated identity management enables user attributes in
one CSP to be provided to other CSPs in a federation. So-
lutions such as coalition-based access control (CBAC) [11],
Shibboleth [12] (based on SAML [13]), and OpenID [8] are
examples of federated identity systems. However, with the
exception of OpenID, current federated identity solutions
require pre-established agreements and trust relationships
between IdPs and CSPs in a federation, essentially forming
a larger walled garden by aggregating existing ones.
OpenID is an open protocol for web-based single-sign-
on. OpenID is user-centric in the sense that users are free to
choose their own OpenID identity providers. OpenID uses a
URI as an end-user’s identiﬁer; this acts as a universal user
account and is valid across all CSPs. The main advantage of
using a URI as an identiﬁer is that it can associate personal