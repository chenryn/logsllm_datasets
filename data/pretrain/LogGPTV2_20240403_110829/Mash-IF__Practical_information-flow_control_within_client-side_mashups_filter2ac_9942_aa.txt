# Title: Mash-IF: Practical Information-Flow Control within Client-Side Mashups

## Authors:
Zhou Li, Kehuan Zhang, and XiaoFeng Wang  
Indiana University, Bloomington  
{lizho, kehzhang, xw7}@indiana.edu

## Abstract
Mashups, a key feature of Web 2.0 technology, integrate data from multiple sources into a single, user-friendly interface. However, this integration introduces security risks, particularly in the context of cross-domain communications. While existing solutions focus on controlling data access, they often neglect the post-access use of data. In this paper, we introduce Mash-IF, a novel technique for information-flow control within client-side mashups. Our approach allows secure cross-domain communication but prevents unauthorized disclosure of sensitive information without explicit user permission. Mash-IF operates within the browser, does not require modifications to existing mashups, and works independently of third-party collaborations. We also present a method for automatically generating declassification rules by statically analyzing script call sequences. These rules can be efficiently enforced through monitoring, ensuring that sensitive data is protected.

**Keywords:** Web, Browser, Mashup, Security, Information-Flow Control, Protection

## 1. Introduction
The rapid advancement of Web 2.0 technologies has led to the proliferation of web services such as Flickr, YouTube, Facebook, and Wikipedia. Among these, client-side mashups, which aggregate data and components from various sources into a single tool running in a web browser, have gained significant popularity. Examples include real estate data integrators, financial news aggregators, and social media tools. Major web service providers like Google and Microsoft support mashup development by providing APIs.

However, client-side mashups face significant security challenges, especially with cross-domain communication. The Same Origin Policy (SOP) in browsers restricts such interactions, but this can lead to security vulnerabilities. To address this, both academia and industry have proposed solutions like SMash, MashupOS, and OMash. These approaches provide new abstractions and policies for managing cross-domain channels, but they often only control access to content, not its subsequent use.

In this paper, we present Mash-IF, a new technique for practical information-flow control within mashups. Unlike previous approaches, Mash-IF not only controls access but also regulates the use of data after it has been accessed. This is crucial for protecting sensitive information, such as financial data, from being exfiltrated to untrusted parties. Our approach is designed to work within the browser, does not require changes to existing mashups, and does not need cooperation from content providers or integrators.

## 2. The Model
Classic information-flow models, such as BLP, treat subjects and objects as black boxes and apply strict rules like "no read up" and "no write down." However, these rules can be overly restrictive for web applications. In our research, we propose a new model that allows finer-grained control over information flows within mashups. Our model includes three sensitivity levels: low (non-sensitive), high (sensitive), and very high (highly sensitive). These levels correspond to trust relationships defined by MashupOS [39].

Our approach involves labeling objects, subjects, and flows with sensitivity tags. For example, a cookie might be labeled as highly sensitive, while public content would be labeled as non-sensitive. When a script reads or writes to an object, our system generates declassification rules based on static analysis of the script's call sequences. These rules are then enforced through monitoring, ensuring that sensitive data is not disclosed without user consent.

## Contributions
- **New Information-Flow Model:** A model that permits cross-domain communication while preventing unauthorized data disclosure.
- **Automatic Rule Generation:** Techniques for automatically generating declassification rules by analyzing script call sequences.
- **Efficient Enforcement:** An implementation as a Firefox add-on, demonstrating the effectiveness of our approach through evaluation with real-world mashups.

## Implementation and Evaluation
We implemented Mash-IF as a Firefox add-on and evaluated its performance using 10 real-world mashups. Our experimental results show that Mash-IF effectively enforces information-flow control without compromising the functionality of the mashups. The add-on operates at the add-on level, allowing it to interpose on DOM operations and function calls, thereby mediating information flows.

## Conclusion
Mash-IF represents a significant step towards practical information-flow control within client-side mashups. By focusing on both access and use of data, our approach provides a more comprehensive security solution. Future work will involve extending Mash-IF to handle more complex scenarios and integrating it with other security mechanisms.

---

This optimized version aims to improve clarity, coherence, and professionalism, making the text more accessible and engaging for the reader.