2\. FileUtil.UnZipb函数将上一步的 /data/data/com.web.sdfile/app_dex/.do 文件解压至文件夹
/data/data/com.web.sdfile/.rtt,
这个文件夹是一个包含六个ELF可执行文件的隐藏文件夹，如下图所示，它包含四个root利用代码： r1-r4
图49 root利用文件
1\. 程序会删除解密的文件/data/data/com.web.sdfile/app_dex/.do 与文件夹
/data/data/com.web.sdfile/app_dex .
2\. 然后会在文件夹/data/data/com.web.sdfile/files/ 下创建一个文件，名为：psneuter.js。 它的内容如下：
图50 psneuter.js的内容
executeRootAct函数调用了hanleOriMiddle函数。下边是用来通过SHELL命令来执行root的四段代码。
图51 通过SHELL来root
在调查完这些可执行文件后，我发现r3是一个dashi root 工具来的MTK root 机制, 而r4的利用代码是由开源工程[android-rooting-tool](https://github.com/android-rooting-tools/android_run_root_shell)的一个[CVE-2013-6282](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6282)利用代码来的。而r2是一个用来root Samsung Exynos的
[CVE-2012-6422](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-6422)
函数hanleOriMiddle通过命令行来执行root脚本和其他的一些命令。 所有执行的shell命令如下：
图52 root命令时执行的所有shell
在成功获得root权限后， psneuter.js脚本 会以超级用户权限来执行。这个脚本的作用是用来在/system/priv-app/
目录下安全root权限的应用。
接下来，我们会探讨这两个APK应用。 为了防止被用户发现，这两个应用在安装之后并没有图标。
另外，名为rsh的脚本也会通过shell命令来执行。
图53 rsh 脚本通过命令执行。
不同的是，rsh 基于Build.MANUFACTURER属性。 它如下所示：
图54 rsh脚本（1）
图54-1 rsh脚本(2)
**BSetting.apk是怎样工作滴**
如图50所示， abc.apk被放在了 /system/priv-app/ 文件夹下且重命名为 BSetting.apk, 同时通过pm安装 。
BSetting.apk作为一个远程控制服务器的客户端, 它从远程服务器收取并执行任务。
这个APP在后台运行并且没有运行图标， 下边图示为它的信息：
图55 BSetting.apk的信息
这个APP将它自己伪装为一个Android同步服务，它的反编译如下图：
图56 BSetting.apk的反编译信息
图57 BSetting.apk的AndroidManifest.xml文件
广播接收类的com.sfy.oyr.R 是整个APP的主要逻辑。
图58 类R
程度首先解密其资产文件夹下的jif.png文件，它是一个dex文件。然后程序使用Java反射来加载类和调用其中的一些方法。
我们反编译了解密后的dex文件，如下所示:
图59 反编译的class.dex
在ADService类中的launchTancTask函数的用来从远程服务器接收并执行任务。
图60 从远程服务器获得任务
获取任务的流量抓包如下图。其远程服务器有两个域名，其中一个域名是grs[.]gowdsy[.]com,
另外一个备用的域名是grs[.]rogsob[.]com.
http的返回值是格式为xml，包含了任务类型，推送色情广告的URL，下载APK的URL，需要安装apk的类型等等。
图61 从远程服务器获取任务的流量
根据不同的任务类型，程度使用不同的方式来执行任务。 关键的代码片段如下:
图62 依据任务类型来执行任务
远程控制服务器可以执行多种恶意行为，包括但不限于以下几种：
**  
**
**卸载应用**
它使用android系统的 "pm uninstall" 来卸载应用。
图63 使用pm unistall 来卸载应用
**  
**
**色情推广**
下边是一些色情推广的截图
图64 app推送到设备的色情广告
**在屏幕上创建快捷方式**
快捷方式包括色情广告，热点APP， 热点视频等。下边是程序的代码代码与创建的快捷方式的截图
图65 在屏幕上创建快捷方式的代码段
图66 屏幕的快捷方式
**  
**
**应用和广告推送**
除了获得设备的ROOT权限，这个root类的恶意软件的作者还推送APP与广告以获得收入。它的APP与广告的推送相当积极而且相当恼人。
下面是它推送的一些广告的截图:
图67 广告与app推送
**正常的app安装与静默安装**
恶意程序根据不同的任务类型来选择不同app安装方式。下边是一个在安装时有着用户界面的正常的app安装的代码段。
图68 正常安装
这个APP使用android系统的工具 "pm install -r" 来静默安装非系统的软件,同时它APK文件拖进/system/priv-app/
文件夹来安装 系统应用。
图69 静默安装非系统应用
在/data/app/ 文件夹下，我们发现了一些(包含但不限于)已经安装 的应用：
图70 已经被恶意软件安装的应用
图71 安装系统应用的命令
在 /system/priv-app/,我们发现了一些apk文件（包含但不限于）也已经被安装了
图72 安装在/system/priv-app/下的恶意软件
**  
**
**推送通知**
恶意软件会推送通知来诱导用户点击来在浏览器中打开URL
下面是推送通知的代码段:
图73 推送通知的代码段
图74 恶意软件推送的通知
**  
**
**下载文件**
我们发现有很多文件和文件夹下载在 /sdcard/ 里，
包括apk文件，jar文件，图片，日志等。这些文件是由安装的app生成的，且其中可能会有一些来执行恶意的行为。
图75 下载在 /sdcard/ 中的文件和文件夹
**解决办法**
恶意软件被Fortinet Antivirus检测并标记为 Android/Rootnik.PAC!tr.
与远程C2服务器的通信流量可以由 Fortinet IPS 检测并标记为 Android.Rootnik.Malware.C2.
**总结**
从上面的分析可以看出，rootnik恶意软件很强大，并且使用非常先进的反调试和反HOOK技术来防止逆向，以及对文件和字符串进行不同类型的加密.
除此之外，它还使用multidex机制来动态加载和安装作为恶意软件的主要逻辑的辅助dex文件。它使用一些开源的Android root
利用工具和来自dashi root工具的MTK root方案，以便在在Android设备上获得root权限。
在成功取得设备的root权限后，rootnik恶意软件可能会执行各种恶意软件，包括应用和广告推送，推送色情内容，在主屏幕上创建快捷方式，静默安装应用程序以及推送通知等。
**附录**
**Rootnik Malware Sample**
**Package Name: com.web.sdfile**
SHA256: E5E22B357893BC15A50DC35B702DD5FCDFEAFC6FFEC7DAA0D313C724D72EC854
Additional APK files dropped into system partition by Rootnik malware
**Package Name: com.br.srd**
SHA256: E2BDCFE5796CD377D41F3DA3838865AB062EA7AF9E1E4424B1E34EB084ABEC4A
**Package Name: com.oyws.pdu**
SHA256: CEE6584CD2E01FAB5F075F94AF2A0CE024ED5E4F2D52E3DC39F7655C736A7232
**C &C Server**
gt[.]rogsob[.]com
grs[.]gowdsy[.]com
qj[.]hoyebs[.]com
qj[.]hoyow[.]com
gt[.]yepodjr[.]com