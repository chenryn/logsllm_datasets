• X-Accelerated-By: PHPA/1.3.3r1
• Server: Apache/1.3.19 (Unix)
• X-Bender: Care to contribute to the Anti-
Mugging-You Fund?
Copyright 2002-2003 - David Rhoades
slide 33
Tools – Mirror/Crawl Web Sites
• Freeware 
– UNIX/Windows: HTTrack 
(open source and free) 
http://www.httrack.com/
• Can override robots.txt restrictions
• Not supported by ads; not spy ware
• Mozilla extension (Spiderzilla) available
– UNIX: wget 
freshmeat.net/projects/wget/
• Commercial
– Windows: BlackWidow 
www.softbytelabs.com
– HTTP, HTTPS, and FTP
Copyright 2002-2003 - David Rhoades
slide 34
Attack Agenda Roadmap – Authentication 
• Some points of attack
Authentication
– Session Tracking
– Unexpected Input
– Application Logic
• The Problem
• Tools
 Points of Attack
• Resources
Copyright 2002-2003 - David Rhoades
slide 35
DEMO – Attacking Authentication
• wwwhack
– http://packetstormsecurity.org/Cr
ackers/wwwhack.zip
– NOTE: Shareware?  Porn ads?
• Demo Site
– http://www.vaporware.usa/cgi-
bin/calendar.pl?calendar=vaporex
ternal&template=login.html
• NOTE: key phrases (Pick something 
that is unique to the FAILED 
attempt)
Copyright 2002-2003 - David Rhoades
slide 36
Authentication Attack –
Attacking Locked Accounts (PIN Harvest)
• Q: Locking accounts will 
prevent brute force 
attacks….right?
• A: Not always.
• There is username harvesting…
– Bad login reveals valid user names
• But what about password/PIN 
harvesting?
– Locked account + error message = 
correct PIN revealed
Copyright 2002-2003 - David Rhoades
slide 37
Authentication Attack –
PIN Harvest Real World Example
• Example:
– When trying the 
wrong PIN for a 
locked account, 
the web 
application 
returned:
– Leider ist diese 
PIN falsch.  
[Unfortunately 
this pin is 
wrong.]
– When trying the 
correct PIN for 
a locked 
account, the 
web application 
returned:
– Leider ist Ihre 
PIN nicht mehr 
gültig.  
[Unfortunately 
your pin is no 
longer valid.]
Real example found 
in major consumer 
banking application 
in Europe a few 
years ago.
Copyright 2002-2003 - David Rhoades
slide 38
Authentication Attack –
Bypass Authentication
• If you cannot beat the 
authentication perhaps you can 
bypass it.
• Viewing public calendar without 
login we see:
– http://vaporware/cgi-
bin/calendar.pl?calendar=vaporexternal
• Demo: See Mar 2002 for 
calendar=secret
Copyright 2002-2003 - David Rhoades
slide 39
Attack Agenda – Session Tracking
• Some points of attack
– Authentication
Session Tracking
– Unexpected Input
– Application Logic
• The Problem
• Tools
 Points of Attack
• Resources
Copyright 2002-2003 - David Rhoades
slide 40
Session Tracking Intro
• Session 
Tracking
– Session ID is 
unique identifier
– Embedded into 
traffic via URL or 
Cookie
Set-cookie: 
CGISessionID=134
4107640;path=/
• Forms of attack: 
– Predict, Brute 
Force, or Pinch 
(i.e steal)
Copyright 2002-2003 - David Rhoades
slide 41
Session Cloning via Prediction
• Steps for Prediction Attack
– Determine how & when session 
ID is assigned
• E.g. before login via cookie
– Collect several session IDs
• Rapid fire: one after another
– Analyze for pattern or 
predictability
• Based on time stamp? Source IP?  
MD5 checksum of both?
Session ID 
Attacks:
-Predict
-Brute Force 
-Pinch
Copyright 2002-2003 - David Rhoades
slide 42
(Tool) iDefense Intro: 
Cookie Collecting Made Easy
• iDefense Web 
Application 
Session Auditor 
– Win32 GUI 
– for the coding 
impaired ☺
• URL 
www.idefense.com/
idtools/Session_Auditor.
zip
• Version 1.0
–
Cookie brute-force does 
NOT work
–
It tries to send Set-Cookie, 
rather than Cookie:
Copyright 2002-2003 - David Rhoades
slide 43
DEMO – Session Tracking: 
Collect & Analyze Session ID 
• Tool – iDefense
– WebMaven – Buggy Bank
• SessionID assigned before login via 
cookie
– VaporWare Calendar
• similar data for recent audit of online 
reservation system
• looks random but…
• Worse example: credit union 
software
Sample Data
Session ID 
Attacks:
-Predict
-Brute Force
-Pinch
Copyright 2002-2003 - David Rhoades
slide 44
Session Cloning via Brute Force
• Sometimes the session ID is 
from a small range of 
choices
• Attack: Request all/most 
possible combinations
Session ID 
Attacks:
-Predict
-Brute Force
-Pinch
Copyright 2002-2003 - David Rhoades
slide 45
DEMO – Brute Force Session ID
• Tool – iDefense Web 
Application Session Auditor
– ideal if session ID is inside the 
URL
– cookie brute force feature is 
broke in v1.0
• Site WebMaven-BuggyBank
– session ID embedded in cookie 
before login
Session ID 
Attacks:
-Predict
-Brute Force
-Pinch
Copyright 2002-2003 - David Rhoades
slide 46
Command Line Kung Foo – cURL Intro
--silent = hide curl status junk
--include = show HTTP headers
--cookie = add your own cookies
--data = add POST data
Target URL
$ curl --silent --include --cookie 
'SessionID=1059750438' --data 
'from=1234567890123750&to=1234567
890123751&amount=100000000&transa
ction=transfer2'
http://webmaven.usa/cgi-
bin/wm.cgi?transaction=transfer
Copyright 2002-2003 - David Rhoades
slide 47
DEMO – Brute Force Session ID 
from Command Line
• $ curl --silent --cookie 'SessionID=1059777280'
http://www.webmaven.usa/cgi-
bin/wm.cgi?transaction=summary | grep -o -P 
'Account Summary for .*?\<‘
• $ perl -e 'for ($x=875;$x<=975;$x++) {print 
"Session ID 1059835$x"; system ("curl --silent -
-cookie 'SessionID=1059835\$x' 
http://www.webmaven.usa/cgi-
bin/wm.cgi?transaction=summary");}' | grep -o 
-P 'Account Summary for .*?\<|Session ID 
.*?\<' | grep -B 1 Account
Copyright 2002-2003 - David Rhoades
slide 48
Session Cloning via Pinching
• Steps for Cookie Pinch 
Attack
– Session ID is very robust –
difficult or impossible to predict
– Therefore, try stealing valid 
session IDs via Cross Site 
Scripting (XSS)
Session ID 
Attacks:
-Predict
-Brute Force
-Pinch
Copyright 2002-2003 - David Rhoades
slide 49
DEMO – Session Cloning via XSS Cookie 
Pinch (Looky, looky, I got your cookie!)
• Define XSS
– User input and/or web app output not filtered; 
might contain client-side code; browser is 
attacked
• Simple demo
– http://localhost/cgi-bin/testcgi?
• See Vaporware app
• If Session ID is in cookie then it can 
be sent to remote site
– 
Session ID 
Attacks:
-Predict
-Brute Force
-Pinch
Copyright 2002-2003 - David Rhoades
slide 50
Attack Agenda – Unexpected Input
• Some points of attack
– Authentication
– Session Tracking
Unexpected Input
SQL Injection
Buffer Overflow
Command Injection
etc…
– Application Logic
• The Problem
• Tools
 Points of Attack
• Resources
Copyright 2002-2003 - David Rhoades
slide 51
Unfiltered User Input
• Lots of names 
for this 
concept
– SQL Injection
– Buffer Overflow
• Unexpected 
input might 
cause error
– Special 
characters
– Too big
– Alternate choice
Copyright 2002-2003 - David Rhoades
slide 52
DEMO – Unfiltered User Input / 
Web Server Output
• Error message too detailed
– SQL / ODBC Errors 
• How: account number during login
• Result: Access to entire DB
– Aux. Program Errors
• How: Semicolon (%3B) in the “Account” 
cookie 
• Result: run commands
• XSS
– Seen earlier
– Result: Attack, eavesdrop, and clone 
user’s session ID (cookie-based)
Copyright 2002-2003 - David Rhoades
slide 53
Command Injection Attack
• Found in online banking app 
(very large bank)
• Cookie held encrypted 
account number
– Cookie used to speed-up login 
process
– Account=pCqzl3mSxE8gD3aQfHe
KHOmBJCyGca7M6mtaLPn6zINsS
c3l%2FF5FdGUl0Kg%3D%3DvV3i
Copyright 2002-2003 - David Rhoades
slide 54
Command Injection –
The Encrypted Account Cookie
• Browser
• First time
– User enters full 16 
digit account 
number
– “Account” cookie is 
stored for future 
visits
• Return Visits
– “Account” cookie 
sent
• Useful where 
many accounts 
were used
• Server
– Encrypts account 
# with PGP
– Embeds encrypted 
account # into 
cookie
– Account cookie 
sent to browser
– Account cookie 
decrypted
– HTML for login 
screen shows last 
four digits in drop 
down menu
Copyright 2002-2003 - David Rhoades
slide 55
DEMO – Command Injection:
Revealing Error Message
• Manipulating the cookie value 
(e.g. inserting semi-colon) 
revealed this error:
– PGP v2.6 error
• How was our cookie data 
getting fed to PGP?
– Maybe
# pgp $COOKIE_DATA
– So, then our data is passed across a 
command line? :-)
– What if $COOKIE_DATA = junk ; 
netstat
Copyright 2002-2003 - David Rhoades
slide 56
Command Injection Results
Copyright 2002-2003 - David Rhoades
slide 57
Attack Agenda – Application Logic
• Some points of attack
– Authentication
– Session Tracking
– Unexpected Input
Application Logic
• Application performs steps in the 
wrong order, or some other flaw in 
the underlying logic or design
• The Problem
• Tools
 Points of Attack
• Resources
Copyright 2002-2003 - David Rhoades
slide 58
Buggy Bank Demo: 
Viewing Other Account Balances
• View the balance of other 
accounts
– Discovered a few years ago in credit 
union software
– Web app did step C first
• Attempt transfer of funds 
between accounts
– Change the FROM account to someone 
else’s
– Small amount…transfer is prevented 
– But, make amount very large…Result: 
account balance error
Proper Sequence:
A Authorized to 
take money from?
B Authorized to put 
money in?
C Enough balance?
Copyright 2002-2003 - David Rhoades
slide 59
DEMO – Attack Application Logic: 
Collecting Balances
• Tool: Custom Perl script
– Brutus and others might work 
too.
• User can change FROM 
account to someone else’s 
account when transferring 
funds
• Can also collect valid 
account numbers too.
Conclusion
Closing Thoughts & Resources
Copyright 2002-2003 - David Rhoades
slide 61
Conclusion – Limitation of Tools
• Brain & clues not included
– You have to know what you’re looking 
for (e.g. view account balances)
• No one tool does it all…(yet?)
• Some tools don’t support SSL
– Try stunnel to wrap in SSL
– URL http://www.stunnel.org/
• For thorough testing you will 
need to code/script your own 
tools.
• The Problem
• Tools
• Points of Attack
 Resources
Copyright 2002-2003 - David Rhoades
slide 62
Resources – Beyond Point & Click Tools
• Elza – scripting language for 
interacting with web sites and apps
– Poor man’s Perl…in fact, Elza is a Perl script
– Easier than learning Perl (?)
– http://www.stoev.org/elza/
• cURL - command line tool for 
HTTP(S)
– http://curl.haxx.se/
• Perl with libwww-perl (LWP)
– http://www.perl.com/
• Regular Expressions (regex)– take 
the red pill
– But if you do, there’s no going back…
– www.oreilly.com/catalog/regex/
I know 
Kung Foo
Copyright 2002-2003 - David Rhoades
slide 63
Resource – (aka Buggy Bank) 
WebMaven: Web App Audit Trainer
• “Give a man an audit and he will 
be secure for a day. Teach a 
man to audit and he will be 
secure for the rest of his life."
- David Rhoades
• Fake web app that emulates 
vulnerabilities.
• Run it on your own web server
– safe & legal way to practice audit 
techniques & learn
– benchmark audit tools
• http://webmaven.MavenSecurity.com
Copyright 2002-2003 - David Rhoades
slide 64
Resources –
Web App Security Resources
• OWASP – Open Source Web 
App Security Project 
– www.owasp.org
– Lots of projects, papers, etc.
• WebApp Sec mailing list
– http://www.securityfocus.com/arc
hive/107
Copyright 2002-2003 - David Rhoades
slide 65
Questions? Fill out Evals! Download slides!
• Fill out the course eval
• These slides (and others) are 
online at www.MavenSecurity.com
(under Resources section)
• Contact me at 
– David Rhoades
– PI:EMAIL
– www.MavenSecurity.com
• Thank you 
www.MavenSecurity.com
Auditing web apps since 1996