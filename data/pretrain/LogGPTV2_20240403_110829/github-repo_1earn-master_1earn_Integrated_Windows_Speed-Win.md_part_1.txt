# Speed-Win
---
## 大纲
* **[基础使用](#基础使用)**
	* [环境变量](#环境变量)
	* [符号](#符号)
	* [会话](#会话)
	* [文件和目录](#文件和目录)
		* [查看](#查看)
		* [创建](#创建)
		* [删除](#删除)
		* [查询](#查询)
		* [修改](#修改)
		* [链接](#链接)
* **[网络管理](#网络管理)**
    * [IPC$](#ipc$)
    * [查看网络信息](#查看网络信息)
    * [网络排错工具](#网络排错工具)
    * [RDP](#rdp)
    * [防火墙](#防火墙)
* **[系统管理](#系统管理)**
    * [系统信息](#系统信息)
		* [日志](#日志)
	* [系统设置](#系统设置)
		* [时间](#时间)
        * [注册表](#注册表)
        * [计划任务](#计划任务)
        * [组策略](#组策略)
    * [账号管控](#账号管控)
	* [进程管理](#进程管理)
	* [设备管理](#设备管理)
		* [硬盘-数据](#硬盘-数据)
    * [安全设置](#安全设置)
* **[域](#域)**
---
## 基础使用
```bash
echo "Hello World"          输出 Hello World 到终端屏幕
cls                         清除屏幕
chcp 65001                  修改字符编码,修复乱码
Add-AppxPackage xxx.Msixbundle   安装 msixbundle 文件
```
**shutdown**
```bash
shutdown    关闭、重启、注销、休眠计算机
    shutdown -s -t 60       60秒后关机
    shutdown -s -t 3600     1小时后关机
    tsshutdn                60秒后关机
    shutdown -s -f          强制关机
    shutdown -s -t          时间
    shutdown -a             取消 关机命令
```
**运行脚本**
```bash
cscript     执行 vbs 脚本
    cscript /Nologo test.vbs    执行 test.vbs 脚本
call ff.bat                     调用执行 ff.bat 脚本（ff.bat 脚本执行完原脚本才会往下执行）
start  运行某程序或命令
    start /max notepad.exe          最大化的方式启动记事本
    start /min calc.exe             最小化的方式启动计算器
    start /min "" d:\Proxifier.exe  最小化的方式启动 Proxifier 代理工具
    start  tasklist                 启动一个 cmd 实例窗口，并运行 tasklist
    start explorer f:\              调用资源管理器打开f盘
    strat iexplore "www.qq.com"     启动 ie 并打开 www.qq.com 网址
    start ff.bat                    启动开始执行 ff.bat（启动 ff.bat 脚本后，原脚本继续执行，不会等 ff.bat 脚本执行完）
```
### 环境变量
```bash
set         显示当前用户所有的环境变量
    set path            查看 path 的环境变量值（准确的说是查看以 path 开头的环境变量）
    set path=           清空 path 变量
    set path=d:\execute
    将 path 变量设置为 d:\execute（注：修改的 path 只会影响当前回话，也不会存储到系统配置中去；当前 cmd 窗口关闭，新设置的 path 也就不存在了）
    set path=%path%;d:\execute
    在 path 变量中添加 d:\execute（注：修改的 path 只会影响当前回话，也不会存储到系统配置中去；当前 cmd 窗口关闭，新设置的 path 也就不存在了）
path        显示当前 path 变量的值
    path ;              清除所有搜索路径设置并指示 cmd.exe 只在当前目录中搜索
    path d:\xxx;%PATH%  将 d:\xxx 路径添加到 path 中
```
---
### 符号
**&**
```bash
顺序执行多条命令，而不管命令是否执行成功
cd /d d:\src&work.exe /o c:\result.txt
先将当前工作目录切换到d:\src下，然后执行work.exe /o c:\result.txt命令
```
**&&**
```bash
顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令
find "ok" c:\test.txt && echo 成功
如果找到了"ok"字样，就显示"成功"，找不到就不显示
```
**||**
```bash
顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令
find "ok" c:\test.txt || echo 不成功
如果找不到"ok"字样，就显示"不成功"，找到了就不显示
```
**|**
```bash
管道命令
dir *.* /s/a | find /c ".exe"
先执行 dir 命令，然后对输出结果（stdout）执行 find 命令（输出当前文件夹及所有子文件夹里的 .exe 文件的个数）
dir *.* /s/a 2>&1 | find /c ".exe"
先执行 dir 命令，然后对输出结果（stdout）和错误信息（stderr）执行 find 命令（输出当前文件夹及所有子文件夹里的.exe文件的个数）
```
**>**
```bash
将当前命令输出以覆盖的方式重定向
tasklist > p1.txt
将 tasklist 的输出结果（stdout）以覆盖的方式重定向到 p1.txt 文件中（注：tasklist 的输出结果就不会打印到屏幕上了）
tasklist 1> p1.txt
等同于：tasklist > p1.txt
dir bin 2> p1.txt
输出结果（stdout）打印在屏幕上，错误信息（stderr）以覆盖的方式重定向到 p1.txt 中（注：bin 目录不存在时，会输出错误信息）
dir bin > p1.txt 2>&1
将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以覆盖的方式重定向到 p1.txt 中（注：bin 目录不存在时，会输出错误信息）
dir bin 2> p1.txt 1>&2
将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以覆盖的方式重定向到 p1.txt 中（注：bin 目录不存在时，会输出错误信息） 注：与上条命令结果一致
tasklist >nul
屏幕上不打印 tasklist 的输出结果（stdout），错误信息（stderr）仍会打印
dir bin 2>nul
屏幕上不打印命令的错误信息（stderr），输出结果（stdout）仍会打印（注：bin 目录不存在时，会输出错误信息）
dir bin >nul 2>&1
将命令的错误信息（stderr）重定向到输出结果（stdout），然后不打印输出结果（stdout）[屏幕上错误信息（stderr）和输出结果（stdout）都不打印]（注：bin 目录不存在时，会输出错误信息）
dir bin 2>nul 1>&2
将命令的输出结果（stdout）重定向到错误信息（stderr），然后不打印错误信息（stderr）[屏幕上错误信息（stderr）和输出结果（stdout）都不打印]（注：bin 目录不存在时，会输出错误信息）
```
**>>**
```bash
将当前命令输出以追加的方式重定向
tasklist >> p2.txt
将 tasklist 的输出结果（stdout）以追加的方式重定向到 p2.txt 文件中（注：tasklist 的输出结果就不会打印到屏幕上了）
tasklist 1>> p2.txt
等同于：tasklist >> p2.txt
dir bin 2>> p2.txt
输出结果（stdout）打印在屏幕上，错误信息（stderr）以追加的方式重定向到 p2.txt 中（注：bin 目录不存在时，会输出错误信息）
dir bin >> p2.txt 2>&1
将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以追加的方式重定向到 p2.txt 中（注：bin 目录不存在时，会输出错误信息）
dir bin 2>> p2.txt 1>&2
将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以追加的方式重定向到 p2.txt 中（注：bin 目录不存在时，会输出错误信息） 注：与上条命令结果一致
```
**                               踢掉
```
**会话设置**
```bash
title 正在做命令行测试        修改当前 cmd 窗口的标题栏文字为正在做命令行测试
prompt orz:                 将命令提示符修改为 orz:
exit    退出当前 cmd 窗口实例
    exit 0                  退出当前 cmd 窗口实例，并将过程退出代码设置为 0（0 表示成功，非 0 表示失败）
    exit /B 1               退出当前 bat 脚本，并将 ERRORLEVEL 系统变量设置为 1
pause   暂停批处理程序，并显示出：请按任意键继续....
color   设置当前 cmd 窗口背景色和前景色（前景色即为字体的颜色）
    color                   恢复到缺省设置
    color 02                将背景色设为黑色，将字体设为绿色
chcp    查看命令行环境字符编码（为一个全局设置）
    936 -- GBK(一般情况下为默认编码)
    437 -- 美国英语
    65001 -- utf-8
    1200 -- utf-16
    1201 -- utf-16(Big-Endian)
    12000 -- utf-32
    12001 -- utf-32(Big-Endian)
```