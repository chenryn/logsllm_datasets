title:Trading structure for randomness in wireless opportunistic routing
author:Szymon Chachulski and
Michael Jennings and
Sachin Katti and
Dina Katabi
Trading Structure for Randomness in Wireless
Opportunistic Routing
Szymon Chachulski Michael Jennings Sachin Katti Dina Katabi
MIT CSAIL
{szym,mvj,skatti,dk}@mit.edu
ABSTRACT
Opportunistic routing is a recent
technique that achieves high
throughput in the face of lossy wireless links. The current oppor-
tunistic routing protocol, ExOR, ties the MAC with routing, impos-
ing a strict schedule on routers’ access to the medium. Although
the scheduler delivers opportunistic gains, it misses some of the in-
herent features of the 802.11 MAC. For example, it prevents spatial
reuse and thus may underutilize the wireless medium. It also elimi-
nates the layering abstraction, making the protocol less amenable to
extensions to alternate trafﬁc types such as multicast.
This paper presents MORE, a MAC-independent opportunistic
routing protocol. MORE randomly mixes packets before forwarding
them. This randomness ensures that routers that hear the same trans-
mission do not forward the same packets. Thus, MORE needs no
special scheduler to coordinate routers and can run directly on top of
802.11. Experimental results from a 20-node wireless testbed show
that MORE’s median unicast throughput is 22% higher than ExOR,
and the gains rise to 45% over ExOR when there is a chance of spa-
tial reuse. For multicast, MORE’s gains increase with the number of
destinations, and are 35-200% greater than ExOR.
Categories and Subject Descriptors
C.2.2 [Computer-Communication Networks]: Network Protocols
General Terms
Algorithms, Design, Performance
Keywords
Network Coding, Wireless Networks
1.
INTRODUCTION
Wireless mesh networks are used increasingly for providing
cheap Internet access everywhere [4, 1, 34]. City-wide WiFi net-
works, however, need to deal with poor link quality caused by urban
structures and the many interferers including local WLANs. For ex-
ample, half of the operational links in Roofnet [1] have a loss prob-
ability higher than 30%. Opportunistic routing has recently emerged
as a mechanism for obtaining high throughput even when links are
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’07, August 27–31, 2007, Kyoto, Japan.
Copyright 2007 ACM 978-1-59593-713-1/07/0008 ...$5.00.
lossy [7]. Traditional routing chooses the nexthop before transmit-
ting a packet; but, when link quality is poor, the probability the cho-
sen nexthop receives the packet is low. In contrast, opportunistic
routing allows any node that overhears the transmission and is closer
to the destination to participate in forwarding the packet. Biswas and
Morris have demonstrated that this more relaxed choice of nexthop
signiﬁcantly increases the throughput, and have proposed the ExOR
protocol as a means to achieve these gains [7].
Opportunistic routing, however, introduces a difﬁcult challenge.
Multiple nodes may hear a packet broadcast and unnecessarily for-
ward the same packet. ExOR deals with this issue by tying the MAC
to the routing, imposing a strict scheduler on routers’ access to the
medium. The scheduler goes in rounds. Forwarders transmit in or-
der, and only one forwarder is allowed to transmit at any given time.
The others listen to learn which packets were overheard by each
node. Although the medium access scheduler delivers opportunistic
throughput gains, it does so at the cost of losing some of the desir-
able features of the current 802.11 MAC. In particular, the scheduler
prevents the forwarders from exploiting spatial reuse, even when
multiple packets can be simultaneously received by their corre-
sponding receivers. Additionally, this highly structured approach to
medium access makes the protocol hard to extend to alternate trafﬁc
types, particularly multicast, which is becoming increasing common
with content distribution applications [9] and video broadcast [33,
12].
In contrast to ExOR’s highly structured scheduler, this paper ad-
dresses the above challenge with randomness. We introduce MORE,
MAC-independent Opportunistic Routing & Encoding. MORE ran-
domly mixes packets before forwarding them. This ensures that
routers that hear the same transmission do not forward the same
packet. Indeed, the probability that such randomly coded packets
are the same is proven to be exponentially low [15]. As a result,
MORE does not need a special scheduler; it runs directly on top of
802.11.
We evaluate MORE in a 20-node indoor wireless testbed. Our
implementation is in Linux and uses the Click toolkit [25] and the
Roofnet software package [1]. Our results reveal the following ﬁnd-
ings.
• In our testbed, MORE’s median unicast throughput is 22% higher
than ExOR. For 4-hop ﬂows where the last hop can exploit spa-
tial reuse, MORE’s throughput is 45% higher than ExOR’s. For
multicast trafﬁc, MORE’s gains increase with the number of des-
tinations, and is 35-200% higher than ExOR’s.
• In comparison with traditional routing, the median gain in the
throughput of a MORE ﬂow is 95%, and the maximum through-
put gain exceeds 10x.
• Finally, coding is not a deployment hurdle for mesh wireless net-
works. Our implementation can sustain a throughput of 44 Mb/s
on low-end machines with Celeron 800MHz CPU and 128KiB of
cache.
Figure 1: Unicast Example. The source sends 2 packets. The destination
overhears p1, while R receives both. R needs to forward just one packet but,
without node-coordination, it may forward p1, which is already known to
the destination. With network coding, however, R does not need to know
which packet the destination misses. R just sends the sum of the 2 packets
p1 + p2. This coded packet allows the destination to retrieve the packet it
misses independently of its identity. Once the destination receives the whole
transfer (p1 and p2), it acks the transfer causing R to stop transmitting.
The contribution of this work is twofold.
• MORE delivers opportunistic routing gains while maintaining
clean architectural abstraction between the routing and MAC lay-
ers. This allows it to exploit the spatial reuse available with 802.11
and be easily extensible to multicast trafﬁc.
• MORE also presents a low-complexity distributed algorithm for
intra-ﬂow network coding for wireless unicast, whereas prior
work requires solving a convex optimization with constraints that
grow exponentially with the number of nodes reached by a broad-
cast [27, 28]. Further, MORE presents the ﬁrst implementation of
wireless intra-ﬂow network coding, demonstrating the practical
beneﬁts of mixing packets within a single ﬂow.1
2. MOTIVATING EXAMPLES
MORE’s design builds on the theory of network coding [2, 26,
15]. In this section, we use two toy examples to explain the intuition
underlying our approach and illustrate the synergy between oppor-
tunistic routing and network coding.
The Unicast Case: Consider the scenario in Fig. 1. Traditional rout-
ing predetermines the path before transmission. It sends trafﬁc along
the path “src→R→dest”, which has the highest delivery probability.
However, wireless is a broadcast medium. When a node transmits,
there is always a chance that a node closer than the chosen nexthop
to the destination overhears the packet. For example, assume the
source sends 2 packets, p1 and p2. The nexthop, R, receives both,
and the destination happens to overhear p1. It would be a waste to
have node R forward p1 again to the destination. This observation
has been noted in [7] and used to develop ExOR, an opportunistic
routing protocol for mesh wireless networks.
ExOR, however, requires node coordination, which is more difﬁ-
cult in larger networks. Consider again the example in the previous
paragraph. R should forward only packet p2 because the ﬁrst packet
has already been received by the destination; but, without consulting
with the destination, R has no way of knowing which packet to trans-
mit. The problem becomes harder in larger networks, where many
nodes hear a transmitted packet. Opportunistic routing allows these
nodes to participate in forwarding the heard packets. Without co-
ordination, however, multiple nodes may unnecessarily forward the
same packets, creating spurious transmissions. To deal with this is-
sue, ExOR imposes a special scheduler on top of 802.11. The sched-
uler goes in rounds and reserves the medium for a single forwarder
at any one time. The rest of the nodes listen to learn the packets
overheard by each node. Due to this strict schedule, nodes farther
1In contrast, COPE [23] is the ﬁrst implementation that demon-
strates practical beneﬁts for inter-ﬂow wireless network coding.
Figure 2: Multicast Example. Instead of retransmitting all four packets,
the source can transmit two linear combinations, e.g., p1 + p2 + p3 + p4 and
p1 + 2p2 + 3p3 + 4p4. These two coded packets allow all three destinations
to retrieve the four original packets, saving the source 2 transmissions.
away from the destination (which could potentially have transmit-
ted at the same time as nodes close to the destination due to spatial
reuse), cannot, since they have to wait for the nodes close to the
destination to ﬁnish transmitting. Hence the scheduler has the side
effect of preventing a ﬂow from exploiting spatial reuse.
Network coding offers an elegant solution to the above problem.
In our example, the destination has overheard one of the transmitted
packets, p1, but node R is unaware of this fortunate reception. With
network coding, node R naturally forwards linear combinations of
the received packets. For example, R can send the sum p1 + p2.
The destination retrieves the packet p2 it misses by subtracting from
the sum and acks the whole transfer. Thus, R need not know which
packet the destination has overheard.
Indeed, the above works if R sends any random linear combina-
tion of the two packets instead of the sum. Thus, one can general-
ize the above approach. The source broadcasts its packets. Routers
create random linear combinations of the packets they hear (i.e.,
c1p1 + . . . + cnpn, where ci is a random coefﬁcient). The destina-
tion sends an ack along the reverse path once it receives the whole
transfer. This approach does not require node coordination and pre-
serves spatial reuse.
The Multicast Case: Our second example illustrates the synergy
between network coding and multicast. In Fig. 2, the source multi-
casts 4 packets to three destinations. Wireless receptions at different
nodes are known to be highly independent [32, 30]. Assume that
each destination receives the packets indicated in the ﬁgure–i.e., the
ﬁrst destination receives p1 and p2, the second destination receives
p2 and p3, and the last destination receives p3 and p4. Note that each
of the four packets is lost by some destination.
Without coding, the sender has to retransmit the union of all
lost packets, i.e., the sender needs to retransmit all four packets.
In contrast, with network coding, it is sufﬁcient to transmit 2 ran-
(cid:2)
1 =
domly coded packets. For example, the sender may send p
(cid:2)
p1 + p2 + p3 + p4 and p
2 = p1 + 2p2 + 3p3 + 4p4. Despite the fact
that they lost different packets, all three destinations can retrieve the
four original packets using these two coded packets. For example,
(cid:2)
(cid:2)
2 and p1, p2, retrieves
1, p
the ﬁrst destination, which has received p
all four original packets by inverting the matrix of coefﬁcients, and
multiplying it with the packets it received, as follows:
1
CCA .
1
CCA =
0
BB@
0
BB@
p1
p2
p3
p4
1 1 1 1
1 2 3 4
1 0 0 0
0 1 0 0
−1
1
CCA
0
BB@
(cid:2)
p
(cid:2)
1
p
2
p1
p2
Thus, in this simple example, network coding has reduced the
needed retransmissions from 4 packets to 2, improving the overall
throughput.
The Challenges: To build a practical protocol that delivers the
above beneﬁts, we need to address a few challenges.
(a) How Many Packets Should Each Node Send? In traditional best
path routing, a node keeps sending a packet until the nexthop re-
ceives it or until it gives up. With opportunistic routing however,
there is no particular nexthop; all nodes closer to the destination
than the current transmitter can participate in forwarding the packet.
How many transmissions are sufﬁcient to ensure that at least one
node closer to the destination has received the packet?
(b) When Should a Node Stop and Purge? With network coding,
routers send linear combinations of the packets. Once the destina-
tion has heard enough such coded packets, it decodes and retrieves
the ﬁle. We need to stop the sender as soon as the destination has
received the transfer and purge the related data from the forwarders.
(c) How Can a Node Code Efﬁciently? Network coding optimizes
for better utilization of the wireless medium, but coding requires the
routers to multiply and add the data bytes in the packets. We need ef-
ﬁcient coding and decoding strategies to prevent routers’ CPU from
becoming a bottleneck.
3. RELATED WORK
We begin with a brief survey of prior work on opportunistic rout-
ing and a summary of network coding.
3.1 Opportunistic Routing & Wireless Diversity
Opportunistic routing has been introduced by Biswas and Mor-
ris, whose paper explains the potential throughput increase and pro-
poses the ExOR protocol as a means to achieve it [7]. Opportunistic
routing belongs to a general class of wireless algorithms that ex-
ploit multi-user diversity. These techniques use receptions at mul-
tiple nodes to increase wireless throughput. They either optimize
the choice of forwarder from those nodes that received a transmis-
sion [7], or combine the bits received at different nodes to correct
for wireless errors [30], or allow all nodes that overheard a transmis-
sion to simultaneously forward the signal acting as a multi-antenna
system [16]. Our work builds on this foundation but adopts a fun-
damentally different approach; it combines random network coding
with opportunistic routing to address its current limitations. The re-
sulting protocol is practical, allows spatial reuse, and supports both
unicast and multicast trafﬁc.
3.2 Network Coding
Work on network coding started with a pioneering paper by
Ahlswede et al. that established the value of coding in the routers
and provided theoretical bounds on the capacity of such net-
works [2]. The combination of [26, 24, 18] shows that, for multicast
trafﬁc, linear codes achieve the maximum capacity bounds, and cod-
ing and decoding can be done in polynomial time. Additionally, Ho
et al. show that the above is true even when the routers pick random
coefﬁcients [15]. Researchers have extended the above results to a
variety of areas including content distribution [14], secrecy [8, 17],
and distributed storage [19].
Of particular relevance is prior work on wireless network cod-
ing [27, 22, 23]. This work can be divided into three classes. The
ﬁrst is theoretical; it extends some of the known information the-
ory bounds from wired to wireless networks [27, 17]. The second
is simulation-based; it designs and evaluates network coding proto-
cols using simulations [31, 35]. The third is implementation-based;
it uses implementation and testbed experiments to demonstrate
achievable throughput gains for sensors and mesh networks [23, 21].
This paper belongs to the third category. It builds on prior work,
but differs from it in two ways. First, it introduces a practical low-
complexity algorithm for intra-ﬂow wireless network coding. Sec-
Term
Native Packet
Coded Packet
Code Vector of
a Coded Packet
Innovative
Packet
Closer to desti-
nation
Deﬁnition
Uncoded packet
Random linear combination of native or coded pack-
ets
The vector of co-efﬁcients that describes how to
derive the coded packet from the native packets.
(cid:2)
For a coded packet p
cjipi, where the pi’s
j =
are the native packets, the code vector is (cid:2)cj =
(cj1, cj2, . . . , cjK ).
A packet is innovative to a node if it is linearly inde-
pendent from its previously received packets.
Node X is closer than node Y to the destination, if
the best path from X to the destination has a lower
ETX metric than that from Y.
P
Table 1: Deﬁnitions used in the paper.
ond, it presents experimental results that compare ExOR to a net-
work coding approach to opportunistic routing and demonstrate the
practical beneﬁts of having the routers mix packets from the same
wireless ﬂow.
4. MORE IN A NUTSHELL
MORE is a routing protocol for stationary wireless meshes, such
as Roofnet [1] and community wireless networks [34, 3]. Nodes in
these networks are PCs with ample CPU and memory.
MORE sits below the IP layer and above the 802.11 MAC. It
provides reliable ﬁle transfer. It is particularly suitable for deliv-
ering ﬁles of medium to large size (i.e., 8 or more packets). For
shorter ﬁles or control packets, we use standard best path routing
(e.g., Srcr [6]), with which MORE benignly co-exists.
Table 1 deﬁnes the terms used in the rest of the paper.
4.1 Source
The source breaks up the ﬁle into batches of K packets, where K
may vary from one batch to another. These K uncoded packets are
called native packets. When the 802.11 MAC is ready to send, the
source creates a random linear combination of the K native pack-
ets in the current batch and broadcasts the coded packet. In MORE,
(cid:2)
j =
i cjipi,
data packets are always coded. A coded packet is p