Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:05 UTC from IEEE Xplore.  Restrictions apply. 
  probability of system failure is considered acceptable.  5.4.5. Tolerance to packet loss. If a single packet is lost or corrupted due to an error during transmission, the receiver simply ignores that packet. Ignored pack-ets do not disrupt authentication because receivers au-thenticate each packet individually based on data is fully contained within that packet. 6. Analysis In this section we discuss characteristics of our ap-proach and experimental results of simulated attacks. Per our attack model, an attacker may insert or modify packets in valid time slots for a particular message type. Computing the MAC over the pair-wise synchro-nized time or TDMA round number ensures freshness of messages. At best, an attacker may only insert a packet with a randomly generated MAC once per valid time slot. To be conservative in our analysis, the at-tacker performs masquerade attempts against a single isolated receiver, so an attacker only needs to guess one truncated MAC per packet.  We have experimentally confirmed the probability of successful forgery attacks against our approach us-ing a software simulation written in C. In our simula-tion, an attacker node continually sends packets con-taining a known message value and randomly gener-ated MAC values to the receiver. The receiver node verifies the packet using HMAC-SHA-256 and retains a history buffer of the n most recent authentication results. Once the receiver counts a sufficient number of valid MACs in its history buffer, the simulator records an attack event and the number of attempted forgeries before the successful attack occurred.  We simulated attacks on state-changing and reactive control messages for both authentication of consecu-tive packets and authentication of a fraction of packets in a history buffer. Attacks on state-changing messages were considered to be successful once the attacker forced a state change, and further packet forgeries were applied to the next state change after clearing the his-tory buffer. For reactive control messages, successful attack events were recorded as long as the most recent packets contained a sufficient number of valid MACs, regardless of authentication history.   We measured the number of successful attack events over a period of time long enough to record at least one hundred successful attack events per data point. We computed the successful attack rate as aver-age successful attack events per message round and compared this rate to the probability of successful at-tack defined in equations (1) and (2) in Section 5.4.3. From our results we confirmed that equations (1) and (2) can be used as upper bounds on the probability of successful attacks on our approach. These equations predict the required number of packets and authentica-tion bits per packet to achieve a desired failure rate and tolerance to invalid MACs for the system. 6.1. Authenticating consecutive packets Figure 2 shows the simulated successful attack rate on both state-changing and reactive control message types, using a fixed history buffer size of four packets containing one to six authentication bits per packet. As more bandwidth is devoted to authentication, the suc-cessful attack rate decreases exponentially.  Authentication bits per packet123456Average attack events per message round10-810-710-610-510-410-310-210-1100Reactive Control; Simulation and Equ. 2State-changing Figure 2. Simulated successful attack rates for four consecutive messages.  The successful attack rates in Figure 2 should be no greater than the probability of successful attack defined by equation (2). As expected, the successful attack rate for reactive control messages matches equation (2) since simulated attacks were counted regardless of previous authentication history. (Equation (2) is indis-tinguishable from the simulated reactive control suc-cessful attack rate if plotted on Figure 2.)   The successful attack rate for state-changing mes-sages is less than the rate for reactive control messages because successful attacks are likely to come in bursts of consecutive reactive control messages containing few authentication bits. A forgery attempt on the packet after an initial attack event has a better probabil-ity of prolonging the attack in comparison to forging a full set of n packets to initiate a successful attack. The simulated successful attack rate for state-changing messages is approximately a factor of (1-2-b) less than the rate for reactive control messages, because we as-sume the history buffer is flushed after a state change.   With more bits per packet, the likelihood of suc-cessful attacks occurring on successive reactive control messages decreases, as indicated by the converging rates in Figure 2. Thus, we can use equation (2) as a conservative upper bound on the successful attack rate for both reactive control and state-changing messages.  Typical requirements for acceptable failure rates in systems containing wired embedded networks might be defined at 10-3/hr, 10-6/hr, or 10-9/hr of undetected mes- 978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
172
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:05 UTC from IEEE Xplore.  Restrictions apply. 
  Authentication bits per packet246810121416History buffer size (packets)05101520253010-3/hr10-6/hr10-9/hr Figure 3. Minimum authentication bits per packet and history buffer size required to authenticate to failure rates at 1000 packets per second. sage errors depending on the severity of the failure. An induced failure from a masquerade attack should occur no more often than the required rate of failure. Figure 3 shows the minimum number of messages in the history buffer for a given number of authentication bits per message to achieve an expected successful attack rate of 10-3/hr, 10-6/hr, or 10-9/hr. The number of packets and bits were obtained using the three successful attack rates as expected values for one forgery attempt per millisecond over the course of an hour, each succeed-ing with probability given by equation (2). 6.2. Authenticating nonconsecutive packets If we permit interspersed invalid MACs in the authen-tication history buffer, we gain tolerance to some non-malicious faults and malicious attempts to disrupt au-thentication of state-changing messages. But increasing this tolerance also increases the probability of an in-duced failure. Attacks may succeed against some con-trol systems if the attacker forges some fraction of the most recent reactive control messages. As this fraction decreases, the probability of induced failure increases.   Figure 4 shows the simulated successful attack rate on state-changing and reactive control message types requiring two successful forgeries out of four packets, each containing one through six authentication bits. As the number of bits per packet for authentication in-creases, the probability of a successful attack decreases exponentially.  The successful attack rate on reactive control mes-sages in Figure 4 matches equation (1) because attack events were counted regardless of previous authentica-tion history. (Equation (1) is indistinguishable from the Figures 4 and 5.) The successful attack rate for reactive control messages is greater than that for state-changing messages because successful attacks on reactive con-trol messages can persist as long as the most recent n  Authentication bits per packet123456Average attack events per message round10-810-710-610-510-410-310-210-1100Reactive Control;Simulation and Equ. 1State-changing Figure 4. Simulated successful attack rate for two out of four messages. packets contain k valid MACs. The difference between lines in Figure 4 is greater than the difference between lines in Figure 2 because there are multiple combina-tions of successful forgeries in the most recent packets which can cause successful attacks to persist. We do not attempt to provide an equation due to the complex-ity of the combinations. Rather, we use equation (1) as conservative upper bound for both message types.  Valid packets (out of eight)2468Average attack events per message round10-510-410-310-210-1100Reactive Control;Simulation and Equ. 1State-changing Figure 5. Simulated successful attack rates for a history buffer of eight packets with two authentica-tion bits each.  Figure 5 illustrates how the difference between simulated successful attack rates for reactive control and state-changing messages changes as the number of required successful forgeries is varied for a buffer of eight packets each containing two authentication bits. With a lower fraction of required valid packets, there are more possible combinations which can cause a suc-cessful attack to persist for reactive control message types, causing a greater successful attack rate.  Figure 6 illustrates tradeoffs between history buffer size and authentication bits per packet needed for ex-pected successful attack rates of 10-3/hr, 10-6/hr, or    10-9/hr, requiring all but two valid MACs. The number of packets and bits were obtained using  the  three  suc- 978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
173
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:05 UTC from IEEE Xplore.  Restrictions apply. 
  Authentication bits per packet246810121416History buffer size (packets)05101520253010-3/hr10-6/hr10-9/hr Figure 6. Minimum authentication bits per message and history buffer size required to authenticate to failure rates at 1000 messages per second given two invalid packets in the buffer. cessful attack rates as expected values for one forgery attempt per millisecond over the course of an hour, each succeeding with probability of equation (1). For example, with four authentication bits per message, if all packets in a history buffer must be valid, the history buffer must include at least the last ten packets to au-thenticate to 10-6/hr (Figure 3). If all but two packets must be forged in the history buffer, then the history buffer must include the past thirteen packets (Figure 6). 6.3. Limitations The rate of successful attacks via brute force guessing will be higher than an approach which authenticates an entire frame of packets all at once with one MAC (as-suming number of total authentication bits is equal). Consider the case where n consecutive packets each containing b authentication bits are required to authen-ticate a state change. In our approach, the attacker has a probability of 2-nb of successfully attack per attempt, where each attempt requires a single new packet. Next, consider the case where the same frame of n packets (causing the exact same effect) is authenticated all at once using a single MAC containing nb bits. The at-tacker has a probability of success of 2-nb per attempt, however each attempt now requires sending all n pack-ets every time. Thus, on a per-packet basis, attack events are expected to occur n times more frequently when using our approach compared to a single frame.   This limitation can be addressed in several ways. First, the system designer can add logic in a receiver to detect a large number of invalid packets as an intrusion attempt. During a brute force guessing attack, the re-ceiver will get many invalid packets before a success-ful attack is likely. Second, this factor can be reduced by using a smaller buffer size. Finally, our approach can be slightly modified so the receiver waits for a full set of n packets to arrive before committing to an ac-tion. The receiver authenticates all n packets at once, then clears its history buffer. If the receiver gets too many invalid packets within one history buffer, it sim-ply waits until n packets have been received before clearing the history buffer and listening for a new set of packets. This takes advantage of the loss tolerance of our approach with a worst case latency increase of n messages rounds. This technique extends to allowing invalid MACs by having the receiver reset its history buffer only after receiving all n packets regardless of whether enough of them contained valid MACs.  Additionally, in our simplified model of reactive control systems an attack may continue with relatively high probability once it has successfully started as dis-cussed in Section 6.1. To prevent this, each packet must incorporate enough bits to keep the probability of individual message forgery at an acceptable level. As this implicit history buffer becomes longer with fewer authentication bits per packet, the probability of pro-longed attack increases. This can be mitigated by using more bits per packet.  Our approach has additional limitations. Each mes-sage requires the computation of one MAC per re-ceiver. Hardware support for cryptographic computa-tions is desirable and might be incorporated directly as part of hardware support for the communications pro-tocol. This suggests a research opportunity for fast, inexpensive MAC functions producing small outputs.  A scalability limit is that the number of authentica-tion bits per packet grows linearly with the number of receivers. This might be mitigated by omitting MACs for receivers that don’t need to use the value of a par-ticular message.   Our method assumes time-triggered applications. It relies on the periodic broadcasts of current values of state variables, and the limitation of one packet per TDMA slot. Other approaches are needed for event-triggered networks to provide strong authentication for each event. Our system provides advantage to the de-gree that messages are transmitting over-sampled data.   Lastly, our approach does not tolerate complete DoS attacks. Allowing intermittent invalid packets within a history buffer is a useful technique for tolerat-ing stealthy attacks or non-malicious faults. But if an attacker floods a network with invalid packets, a re-ceiver must assume that the network has suffered a permanent failure and take appropriate action. 7. Conclusions In this paper we build upon an approach to authenticate time-triggered communications by validating truncated MACs across multiple packets. Our approach enables per-message authentication of reactive control mes-sages and delayed authentication of state changes at a slight increase in the probability of induced failures 978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
174
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:05 UTC from IEEE Xplore.  Restrictions apply. 
  (when compared to using a single strong MAC). We tolerate occasional packets with invalid MACs inter-spersed with valid MACs, consider cases where forg-ing nonconsecutive reactive control messages leads to successful attacks, and provide a conservative upper bound on the probability of successful attack. This approach enables a tradeoff among per-packet authen-tication cost, application level latency, tolerance to invalid MACs and probability of induced failures to provide flexibility for system designers. 8. Acknowledgements This research was funded in part by General Motors through the GM-Carnegie Mellon Vehicular Informa-tion Technology Collaborative Research Lab. 9. References [1] FlexRay Consortium. FlexRay Communications System Protocol Speciﬁcation, Version 2.1, Rev. A, Dec. 2005. [2] Freescale Semiconductor. S12XD Product Summary Page. Accessed Dec. 2008 at http://www.freescale.com/. [3] R. Bosch GmbH, CAN Speciﬁcation, Ver. 2, Sep. 1991. [4] M. Brown, D. Cheung, D. Hankerson, J. L. Hernandez, M. Kirkup, and A. Menezes. PGP in constrained wireless devices. In SSYM’00: Proc. of the 9th Conf. on USENIX Security Symposium, pp. 19–34, 2000. [5] R. Canetti, J. Garay, G. Itkis, D. Micciancio, M. Naor, and B. Pinkas. Multicast security: a taxonomy and some eﬃcient constructions. In INFOCOM ’99: Proc. 18th An-nual Joint Conf. of the IEEE Computer and Communica-tions Societies, vol. 2, pp. 708–716. IEEE, 1999. [6] M. Chavez, C. Rosete, and F. Henriquez. Achieving Conﬁdentiality Security Service for CAN. In CONIELE-COMP ’05: Proc. of the 15th Int’l Conf. on Electronics, Communications and Computers, pp. 166–170, 2005. [7] W. Diﬃe and M. Hellman. New directions in cryptogra-phy. IEEE Transactions on Information Theory, vol. 22, pp. 644-654, 1976. [8] S. Even, O. Goldreich, and S. Micali. On-line/oﬀ-line digital signatures. In CRYPTO ’89: Proc. on Advances in Cryptology, pp. 263–275. Springer-Verlag, 1989. [9] S. Ganeriwal, S. Čapkun, C.-C. Han, and M. B. Srivastava. Secure time synchronization service for sensor networks. In WiSe ’05: Proc. of the 4th ACM Workshop on Wireless Security, pp. 97–106. ACM, 2005. [10] R. Gennaro and P. Rohatgi. How to Sign Digital Streams. In CRYPTO ’97: Proc. of the 17th Annual Int’l Cryptology Conf. on Advances in Cryptology, pp. 180–197. Springer-Verlag, 1997. [11] T. Hoppe and J. Dittman. Sniﬀing/Replay Attacks on CAN Buses: A simulated attack on the electric window lift classified using an adapted CERT taxonomy. In 2nd Workshop on Embedded Systems Security (WESS), 2007. [12] L. Hu and D. Evans. Secure Aggregation for Wireless Networks. In Proc. of the 2003 Symp. on Applications and the Internet Workshops, pp. 384–394. IEEE, 2003. [13] C. Karlof, N. Sastry, and D. Wagner. TinySec: a link layer security architecture for wireless sensor networks. In SenSys ’04: Proc. of the 2nd Int’l Conf. on Embedded Networked Sensor Systems, pp. 162–175. ACM, 2004. [14] P. Koopman, J. Morris, and P. Narasimhan. Challenges in Deeply Networked System Survivability. NATO Ad-vanced Research Workshop on Security and Embedded Systems, pp. 57–64, 2005. [15] H. Kopetz. Real-Time Systems: Design Principles for Distributed Embedded Applications. Kluwer Academic Publishers, Norwell, MA, USA, 1997. [16] H. Kopetz and G. Grunsteidl. TTP - A time-triggered protocol for fault-tolerant real-time systems. In Proc. of the 23rd Int’l Symposium on Fault-Tolerant Computing, pp. 524–533, 1993. [17] A. Lang, J. Dittman, S. Kiltz, and T. Hoppe. Future Perspectives: The car and its IP address - A potential safety and security risk assessment. In Proc. of the 26th Int’l Conf. on Computer Safety, Reliability and Security (SAFECOMP), pp. 40-53. Springer-Verlag, 2007. [18] S. Miner and J. Staddon. Graph-Based Authentication of Digital Streams. In SP ’01: Proc. of the 2001 IEEE Symp. on Security and Privacy, pp. 232–246. [19] J. Morris and P. Koopman. Critical Message Integrity Over A Shared Network. 5th IFAC Int’l Conf. on Fieldbus Systems and their Applications, pp. 145-151, 2003. [20] D. Nilsson and U. Larson. Simulated Attacks on CAN Buses: Vehicle Virus. 5th IASTED Asian Conf. on Com-munication Systems and Networks, 2008. [21] J. M. Park, E. K. P. Chong, and H. J. Siegel. Eﬃcient Multicast Packet Authentication Using Signature Amorti-zation. In SP ’02: Proc. of the 2002 IEEE Symposium on Security and Privacy, pp. 227–240. IEEE, 2002. [22] A. Perrig. The BiBa one-time signature and broadcast authentication protocol. In CCS ’01: 8th ACM Conf. on Computer and Comm. Security, pp. 28–37, 2001. [23] A. Perrig, R. Canetti, J. Tygar, and D. Song. The TESLA Broadcast Authentication Protocol. RSA Cryp-toBytes, vol. 5, pp. 2-13, 2002. [24] A. Perrig, R. Szewczyk, J. D. Tygar, V. Wen, and D. E. Culler. SPINS: security protocols for sensor networks. Wireless Networks, vol. 8(no. 5):pp. 521–534, 2002. [25] A. Perrig, J. D. Tygar, D. Song, and R. Canetti. Eﬃcient Authentication and Signing of Multicast Streams over Lossy Channels. In SP ’00: Proc. of the 2000 IEEE Sym-posium on Security and Privacy, pp. 56–73, 2000. [26] M. Raya, A. Aziz, & J. Hubaux. Eﬃcient secure ag-gregation in VANETs. In VANET ’06: 3rd Int’l Workshop on Vehicular Ad Hoc Networks, pp. 67–75. ACM, 2006. [27] Schneier. Applied Cryptography (2nd ed.): Protocols, Algorithms, and Source Code in C. John Wiley & Sons, Inc., New York, NY, USA, 1995. [28] C. Szilagyi and P. Koopman. A ﬂexible approach to embedded network multicast authentication. In 2nd Work-shop on Embedded Systems Security (WESS), 2008. [29] M. Wolf, A. Weimerskirch, and C. Paar. Security in Automotive Bus Systems. Workshop on Embedded Secu-rity in Cars, 2004. [30] C. K. Wong and S. S. Lam. Digital Signatures for Flows and Multicasts. In ICNP ’98: Proc. of the 6th Int’l Conf. on Network Protocols, pp. 198–209. IEEE, 1998.