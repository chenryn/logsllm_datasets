例如：当条件1成立时，同时执行命令1、命令2、命令3。不用if测试表达式的
格式如下：
[条件1]5&（
命令1
命令2
命令3
[[条件1]]
命令1
命今2
命令3
te8t条件166
命令1
命今2
命令3
提示：本书的大部分普通实例都是以口为例进行讲解的，读者可以自行练习test及
[山]的用法。
上面的判断相当于下面if语句的效果。
if[条件1]
then
命令1
命今2
命令3
fi
范例6-15：当条件不成立时，执行大括号里的多条命令，这里要使用逻辑操作
符“”。
---
## Page 120
2跟老男孩学Linux运雄：Shell 编程实战
[rooteoldboy seripts]cat 6_15.sh
[-f/etc]11（
/dev/
nu11 2>&1
/sbin/sysct1 -w fs.nfs.nlm_udpport=$LOcKD_UDPPoRT >/
dev/nu11 2>&1
6.4整数二元比较操作符
6.4.1整数二元比较操作符介绍
在书写测试表达式时，可以使用表6-4中的整数二元比较操作符。
表6-4整数二元比较操作符使用参考
在口以及test中使用的比较符号在（0）和[]中使用的比较符号
说明
一或
相等，全拼为 equal
ne
不相等，全拼为not equal
-gt
>
大于，全拼为greater than
-ge
>
大于等于，全拼为greater equal
-
”非标准符号的比较。
[rooteoldboy ~]#[2 >1 ]&&echo 111echo 0
[root@oldboy -]#[ 26 ]]6&echo 1 11echo 0
066 ]]&&echo 1 11echo 0
0、、、$a2 1]&echo 1 11 echo 0=$a2))&s echo 1 11 echo 0
#$num2))
<==比较符号两边无需空格（多空格也可）使用常规数学的比校符号即可。
范例6-27：系统脚本中使用整数比较的案例。
[rootθoldboy ~]#grep -w*\-eq*/etc/init.d/nfs <==过滤出相等（-eg)的例子。
[SRETVAL -eq 0 ] && RETVAL=Srva1
<==使用[1，且两边都要有一个空格。
[ SRETVAL -eq 0 ]ss RETVAL=Srva1
的写法。
[SRETVAL -eq 0 1&& RETVAL=$rval
[SRETVAL -eq 0 ]&s RETVAL=$rva1
su/pu//-.-da[oqpx]
<==过渊出大于（-gt）的例子。
0- 1
上述例子就是最好的学习规范，可效仿。
6.5逻辑操作符
6.5.1逻辑操作符介绍
在书写测试表达式时，可以使用表6-5中的逻辑操作符实现复杂的条件测试。
表6-5逻辑操作符
在[]和test中使用的操作符在[1】和（0）中使用的操作符
说明
-a
&&
and.与，两端都为真，则结果为真