digoal@iZ28tqoemgtZ-> cd /data04/digoal/arc_log1922  
digoal@iZ28tqoemgtZ-> ll  
total 16K  
lrwxrwxrwx 1 digoal digoal 71 Aug 29 17:18 00000002000000470000000C -> /data05/digoal/pgstdbak/20160829/171420/arclog/00000002000000470000000C  
lrwxrwxrwx 1 digoal digoal 71 Aug 29 17:18 00000002000000470000000D -> /data05/digoal/pgstdbak/20160829/171420/arclog/00000002000000470000000D  
lrwxrwxrwx 1 digoal digoal 87 Aug 29 17:18 00000002000000470000000D.00000028.backup -> /data05/digoal/pgstdbak/20160829/171420/arclog/00000002000000470000000D.00000028.backup  
-rw------- 1 digoal digoal 42 Aug 29 17:18 00000002.history  
```
6\. 启动恢复目标数据库  
```
digoal@iZ28tqoemgtZ-> pg_ctl start -D /data04/digoal/pg_restore_root  
server starting  
digoal@iZ28tqoemgtZ-> LOG:  00000: redirecting log output to logging collector process  
HINT:  Future log output will appear in directory "pg_log".  
LOCATION:  SysLogger_Start, syslogger.c:622  
digoal@iZ28tqoemgtZ-> psql -h 127.0.0.1 -p 1922  
psql (9.5.3)  
Type "help" for help.  
postgres=# select pg_is_in_recovery();  
 pg_is_in_recovery   
-------------------  
 f  
(1 row)  
postgres=# \l+  
                                                                   List of databases  
        Name        |  Owner   | Encoding | Collate | Ctype |   Access privileges   |  Size   | Tablespace |                Description                   
--------------------+----------+----------+---------+-------+-----------------------+---------+------------+--------------------------------------------  
 contrib_regression | postgres | UTF8     | C       | C     |                       | 7137 kB | pg_default |   
 db1                | postgres | UTF8     | C       | C     |                       | 111 MB  | tbs1       |   
 postgres           | postgres | UTF8     | C       | C     |                       | 797 MB  | pg_default | default administrative connection database  
 template0          | postgres | UTF8     | C       | C     | =c/postgres          +| 7137 kB | pg_default | unmodifiable empty database  
                    |          |          |         |       | postgres=CTc/postgres |         |            |   
 template1          | postgres | UTF8     | C       | C     | =c/postgres          +| 7137 kB | pg_default | default template for new databases  
                    |          |          |         |       | postgres=CTc/postgres |         |            |   
(5 rows)  
```
## 注意事项  
1\. 小心覆盖原有的部分  
2\. 建议先将原有的目录重命名，或者在其他机器恢复，  
3\. 软链接的处理，会恢复到目标，并且重新建立软链接，所以目录结构必须与备份时保持一致。    
4\. 用户可以指定$PGDATA，恢复到新的目标目录，但是arch_log, 表空间, pg_xlog目录无法指定新的位置，所以原地还原时，必须注意这些目录可能被覆盖，先重命名是比较好的手段。   
## pg_rman 可以优化的地方  
1\. 检查哪些要恢复的块与目标块的CRC是否一致，如果一致，不需要拷贝，减少WRITE。    
## pg_rman 软件限制  
### pg_rman的使用限制
pg_rman has the following restrictions.   
1\. Requires to read database cluster directory and write backup catalog directory.   
For example, you need to mount the disk where backup catalog is placed with NFS from database server.   
实际上不是必须的，如果没有指定原来的$PGDATA，则使用备份集的元数据。    
2\. Block sizes of pg_rman and server should be matched. BLCKSZ and XLOG_BLCKSZ also should be matched.    
编译pg_rman时，最好使用启动数据集的集群软件的pg_config。  确保块大小一致。    
因为需要做块的校验。  读取LSN等，都与块大小有关。    
3\. If there are some unreadable files/directories in database cluster directory, WAL directory or archived WAL directory, the backup or restore would be failed.  
4\. When taking an incremental backup, pg_rman check the timeline ID of the target database whether it is the same with the one of the full backup in backup list.   
But, pg_rman does not check whether the data itself is same with the full backup in backup list.   
So, you can take an incremental backup over the full backup against the database which has the same timeline ID but has different data.  
### 从standby备份时的软件限制  
Getting backup from standby-site, pg_rman has the follow restrictions too.  
1\. The environment of replication should be built right, or the backup will not finish.  
2\. You can’t get backups on master and standby at the same time.  
因为pg_rman使用的是exclusive bakcup，（pg_start_backup），所以同一时间，只能跑一次pg_start_backup。    
pg_basebackup则使用的是shared backup，可以跑多个。    
3\. You can’t get backups on multi standbys at the same time too.  
道理同上  
4\. Basically, the backup from standby-site is used for restoring on MASTER.   
pg_rman doesn’t treat the backup as restoring on standby automatically.  
5\. If you want to restore the backup on STANDBY, you have to manage archive logs with your self.  
因为备库不归档，所以从standby备份时，需要解决归档备份的问题。    
我在前面的文档中已经提及，包括解决思路。    
### 如果使用快照备份，有哪些软件限制  
When using storage snapshot, pg_rman has the following restrictions too.  
1\. If your snapshot does not have any file update time, incremental backup is same with full backup.  
2\. Because pg_rman judges performing full backup or incremental backup by update time for files.   
If files don’t have update time because of storage snapshot specification, pg_rman performs full backup every time.  
3\. You can’t backup for one side works storage with split mirror snapshot.  
4\. Before you execute pg_rman, you should perform storage “RESYNC”.  
5\. After pg_rman performs backup with split mirror snapshot, storeage will be “SPLITTED”(works on one side).  
    pg_rman perform SPLIT command for getting snapshot, but doesn’t perform RESYNC command.  
6\. You cant’t get snapshot from different vendor storages in a time.  
7\. You cant’t use some vendor storages which have different commands for getting snapshot.  
8\. The script and commands for getting storage snapshot should be executable.  
9\. It’s expected to have authority of root for getting snapshot or mounting volumes.   
    So a user, performs pg_rman, is granted to execute any commands in the script.  
10\. If you use LVM(Logical Volume Manager), it’s needed root authority for mount, umount, lvcreate, lvremove, lvscan commands.   
     You should granted to these commands with sudo command to non-password executable.  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")