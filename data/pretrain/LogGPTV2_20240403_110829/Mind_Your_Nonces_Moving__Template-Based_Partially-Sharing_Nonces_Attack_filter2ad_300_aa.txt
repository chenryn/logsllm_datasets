title:Mind Your Nonces Moving: Template-Based Partially-Sharing Nonces Attack
on SM2 Digital Signature Algorithm
author:Jiazhe Chen and
Mingjie Liu and
Hexin Li and
Hongsong Shi
Template-Based Partially-Sharing Nonces Attack on SM2
Mind Your Nonces Moving:
Digital Signature Algorithm
Jiazhe Chen
China Information Technology
Security Evaluation Center
Beijing 100085, China
PI:EMAIL
Mingjie Liu
Telemetry
Beijing Research Institute of
Beijing 100194, China
PI:EMAIL
Hexin Li
China Information Technology
Security Evaluation Center
Beijing 100085, China
PI:EMAIL
Hongsong Shi
China Information Technology
Security Evaluation Center
Beijing 100085, China
ABSTRACT
This paper gives a partially-sharing nonces attack on SM2
Digital Signature Algorithm (SM2DSA). Templates, which
are built in the scenario of no secrets known, are used to
detect the collisions on the Most Signiﬁcant Byte of the
Nonces (MSBN). Targeting a real world smartcard with 8-
bit precharged bus, the power consumption of data moving
procedure after the random number generation is focused,
on which the template building and matching phases are
based. With the templates, we obtain a number of pairs
of nonces whose ﬁrst bytes are collided, then a lattice at-
tack on SM2DSA is proposed to recover the private key.
Experiments show that our attack works smoothly; our at-
tack is the ﬁrst implemented lattice attack on SM2DSA in
a smartcard, which can also be extended to the other ECC
algorithms like ECDSA.
Keywords
SM2, Template attack, PCA, Lattice attack
1.
INTRODUCTION
SM2 [20], an elliptic curve based cryptosystem, is a Chi-
nese standard for commercial use. A digital signature algo-
rithm, a key exchange protocol and a public key encryption
algorithm are given in [20], which form the SM2 cryptosys-
tem. The SM2 digital signature algorithm1 (SM2DSA for
short), is similar to ECDSA [18].
The nonce k in ECDSA/SM2DSA (DSA) is an ephemer-
al key whose recovery is equivalent to the discovery of the
1See [22] for an English translation.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’15, April 14–17, 2015, Singapore, Singapore.
Copyright c(cid:13) 2015 ACM 978-1-4503-3245-3/15/04 ...$15.00.
http://dx.doi.org/10.1145/2714576.2714587.
private key. If a small fraction of the information about the
nonces is known, then it is also enough for the lattice at-
tacks to break the signature algorithm (like [10, 15, 19, 14]).
We call these attacks partially-known nonces attacks. The
other lattice attacks do not directly use the partial values of
the nonces, but break (EC)DSA with some signatures that
share a part of the nonces (like [8]). The latter attacks are
called partially-sharing nonces attacks in this paper.
Side channel attacks [12] are of great value to evaluate
the security of a cipher running in a cryptographic device;
among them, template attack [5] is one of the most eﬀective
attacks. The lattice attacks mentioned are sound and prac-
tical if the information of the nonces can be obtained from
side channels. This paper gives a partially-sharing nonces
attack on SM2DSA resulted from the information leakage in
the generation procedure of the nonces, utilizing templates.
Unlike most of the previous attacks, this paper will not fo-
cus on reducing the number of known (sharing) bits, but try
to study the attack from a practical issue (like [17]) and aim
to solve the problems that will be practically encountered.
Our contributions. This paper utilizes side channel infor-
mation of the non-cryptographic operation whose security
might not attract much attention of the designers.
Since the lattice-based attacks require that the incorrect
guessed signatures should be very limited, the success rate
is crucial. Our ﬁrst contribution is proposing a method to
reliably detect the information of MSBN from the moving
of the nonces, which is given in Sect. 3.
The second contribution of this paper is giving the ﬁrst
partially-sharing nonces attack on SM2DSA (see Sect. 4),
which is also the ﬁrst lattice attack on SM2DSA in a real
smartcard.
2. PRELIMINARIES
This section introduces the SM2DSA, template attack,
PCA and some basics on lattice.
2.1 SM2 Digital Signature Algorithm
SM2 is an elliptic curve based cryptosystem that deﬁned
over ﬁnite ﬁelds. Similar to ECDSA, SM2DSA can be de-
ﬁned over prime ﬁelds Fp (p > 3) or binary ﬁelds F2m . An
609elliptic curve over prime ﬁelds2 is the set of points (x, y)
satisfying an equation of the following form:
y2 = x3 + ax + b mod p,
where a, b ∈ Fp satisfy 4a3 + 27b2 (cid:54)= 0 mod p. To form
a group, an extra inﬁnity point O is included in this set.
Consequently, the elliptic curve E(Fp) is deﬁned as
E(Fp) = {P = (x, y)|y2 = x3+ax+b mod p. x, y ∈ Fp}∪{O}.
For m ∈ Fp, we refer to [2] the scalar multiplication (point
multiplication) mP of a point P .
Using the notations in [14], SM2DSA (prime ﬁelds) is giv-
en as follows:
Key Generation: Choose an elliptic curve E : y2 = x3 +
ax + b over Fp where p is a prime. Select a G ∈ E(Fp) =
(xG, yG) to be a ﬁxed point of order n, where n is a prime.
That is nG = O. For a user A, the private key is dA ∈ Fp.
Signature Generation:
1. Compute w = h(M ), here M = ZA (cid:107) m, m is the
message, ZA is the hash value about the user, h is the hash
algorithm SM3.
2. Randomly choose an integer k ∈ [1, n − 1]. k is called a
nonce.
3. Calculate (x1, y1) = kG.
4. Compute r = w + x1 mod n. If r = 0 or r + k = n, go
to step 2.
5. Compute s = ((1 + dA)−1(k − rdA)) mod n. If s = 0, go
to step 2.
6. Return (r, s) as the signature.
See [14] for the signature veriﬁcation procedure.
2.2 Template Attack and PCA
i , x2
2,··· , xj
Template attack [5] is one of the most powerful side chan-
nel attacks; the attacker uses the information of an interval
(consists of λ points) of the power traces that are value-
correlated. With the assumption that the noise distribution
to be Gaussian, the attacker builds a multivariate normal
distribution N ((cid:126)µ, Σ) from the ε proﬁled traces for each val-
ue, the estimators (ˆ(cid:126)µ, ˆΣ) is a template. Denote each trace
i ) (i = 1, 2,··· , ε), and Xj to be the
i ,··· , xλ
by (cid:126)ti = (x1
ε)T (j = 1, 2,··· , λ). Then
random variable of (xj
1, xj
(cid:126)µ = (E(X 1), E(X 2),··· , E(X λ)) is the mean vector, and
Σ = cov(X i, X j) (1 ≤ i, j ≤ λ) is the covariance matrix. In
the ﬁrst phase of template attack, which is named template
building phase, the attacker proﬁles the traces and classiﬁes
them according to diﬀerent processing values, then builds
one template for each value. In the second phase, the tem-
plate matching phase, the attacker uses the maximum like-
lihood principle to determine the value of the target secret.
I.e., the value of the template that maximizes the probability
−1((cid:126)t−ˆ(cid:126)µ))
P ((cid:126)t, N (ˆ(cid:126)µ, ˆΣ)) = ((2π)λ det( ˆΣ))
((cid:126)t−ˆ(cid:126)µ)T ˆΣ
2 exp(− 1
− 1
2
will be chosen to be the one matched with the secret im-
plied in (cid:126)t. Normally, one will calculate the logarithm of this
probability to avoid numerical problems3.
PCA [9] is a linear transformation that transforms the
original points to the points that are orthogonal to each
2This paper only considers the recommended parameters in
[20] which is over Fp (log2 p = 256).
3To avoid the numerical problem when calculating
log(det(Σ)), one can refer to [6].
other and the variances are sorted. During the PCA trans-
formation, ε traces are ﬁrst normalized, i.e., (cid:126)ti ← (cid:126)ti − ˆ(cid:126)µ
(i = 1, 2,··· , ε). Then the covariance matrix of the normal-
ized traces ˆΣ(cid:48) is calculated, and an eigendecomposition is
applied:
(cid:48)
ˆΣ
= U × Λ × UT .
2 ≤ xi < 1
i=1 xi(cid:126)bi : − 1
matrix B = ((cid:126)b1, . . . ,(cid:126)bm) is {(cid:80)m
Finally, the normalized traces are multiplied to the columns
of the orthogonal matrix U that correspond to the several
largest eigenvalues in Λ to get the PCA-transformed traces.
2.3 Basics about Lattice
A lattice is a discrete subgroup of Rm whose elements are
integer linear combinations of n (n ≤ m) linearly indepen-
dent vectors. The fundamental parallelepiped P1/2(B) of a
2}. The
volume Vol(L) of a lattice L is the m-dimensional volume
of P1/2(B) for any basis B of L. Shortest Vector Problem
(SVP) and Closest Vector Problem (CVP) are two classical
hard problems in computer science. In practice, lattice re-
duction algorithms like LLL [13] and BKZ [21] are used to
solve SVP with dimension not too large.
Hidden Number Problem (HNP). For integer s and
v ≥ 1, (cid:98)s(cid:99)v denotes the remainder of s on division by v. For
any real number z, let the symbol |·|n be |z|n = minb∈Z |z −
bn|. APP(cid:96),n(v) denotes any rational number r satisfying
2(cid:96) . The HNP [3, 4] asks to recover α ∈ Zq,
|v − r|n ≤ n
given many approximations ui = APP(cid:96),n(αti) where each ti
is known and chosen uniformly at random in [1, n − 1], for
1 ≤ i ≤ d.
This HNP problem can be reduced to a BDD problem
which is a special case of CVP. When we obtain d such
ti, ui, the reduction to BDD can be done as follows. One
constructs the (d + 1)-dimensional lattice spanned by the
(1)
1,(cid:126)b(cid:48)
d + 1 n
2,··· , (cid:126)b(cid:48)
2(cid:96) . Hence, ﬁnding (cid:126)h discloses α.
The target vector is (cid:126)u = (u1, u2, . . . , ud, 0). There exists a
lattice vector (cid:126)h = (αt1 + nh1, . . . , αtd + nhd, α
(cid:107) (cid:126)h − (cid:126)u (cid:107)≤ √
2(cid:96) ), such that
In practice, embedding technique [11] is widely used to re-
duce CVP to SVP. Given a lattice L with basis B = [(cid:126)b1,(cid:126)b2,
··· ,(cid:126)bm], and a target vector (cid:126)u ∈ span(B), the embed-
ding method is to construct a new lattice L(cid:48) with basis
m+1] = [((cid:126)b1, 0), ((cid:126)b2, 0),··· , ((cid:126)bm, 0), ((cid:126)u, β)],
B(cid:48) = [(cid:126)b(cid:48)
where β is a parameter to be determined. If the distance
between the target vector and the lattice is small enough,
ﬁnding the shortest vector in this embedding lattice implies
solving the CVP instance. In fact, we expect that the vec-
tor ((cid:126)h − (cid:126)u,−β) to be the shortest vector in the embedding
lattice, where (cid:126)h is the lattice vector closest to (cid:126)u.
Gaussian Heuristic. Let L be a random d-dimensional lat-
tice of Zn. Then with overwhelming probability, all the min-
1
2 . Thus,
ima of L are asymptotically close to
(cid:113) d
2πe Vol(L)
following row matrix:
n
0
...
0
t1
0
n
. . .
···
···
···
. . .
. . .
0
···
0
...
0
n
td
0
...
...
0