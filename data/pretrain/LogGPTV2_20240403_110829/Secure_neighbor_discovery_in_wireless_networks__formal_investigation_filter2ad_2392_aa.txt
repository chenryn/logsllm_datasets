title:Secure neighbor discovery in wireless networks: formal investigation
of possibility
author:Marcin Poturalski and
Panos Papadimitratos and
Jean-Pierre Hubaux
LCA-REPORT-2007-004
Secure Neighbor Discovery in Wireless Networks:
Formal Investigation of Possibility
Marcin Poturalski, Panos Papadimitratos, Jean-Pierre Hubaux
Laboratory for Computer Communications and Applications
{marcin.poturalski, panos.papadimitratos, jean-pierre.hubaux}@epﬂ.ch
EPFL, Switzerland
ABSTRACT
Wireless communication enables a broad spectrum of appli-
cations, ranging from commodity to tactical systems. Neigh-
bor discovery (ND), that is, determining which devices are
within direct radio communication, is a building block of
network protocols and applications, and its vulnerability can
severely compromise their functionalities. A number of pro-
posals to secure ND have been published, but none have
analyzed the problem formally. In this paper, we contribute
such an analysis: We build a formal model capturing salient
characteristics of wireless systems, most notably obstacles
and interference, and we provide a speciﬁcation of a basic
variant of the ND problem. Then, we derive an impossibility
result for a general class of protocols we term “time-based
protocols,” to which many of the schemes in the literature
belong. We also identify the conditions under which the im-
possibility result is lifted. Moreover, we explore a second
class of protocols we term “time- and location-based proto-
cols,” and prove they can secure ND.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection
General Terms
Security
Keywords
wireless networks security, secure neighbor discovery, relay
attack
INTRODUCTION
1.
Wireless networking is a key enabler for mobile communica-
tion systems, that range from cellular infrastructure-based
data networks and wireless local area networks (WLANs)
to disaster-relief, tactical, and sensor networks, and short-
range wire replacement and radio frequency identiﬁcation
(RFID) technologies. In all such systems, any two wireless
devices communicate directly when in range, without the as-
sistance of other devices. The ability to determine if direct,
one-hop, communication takes place is fundamental. For ex-
ample, a WLAN access point (AP) assigns a new IP address
to a mobile station only when it is within the AP’s coverage
area. Or, a mobile node does not initiate a route discovery
across a mobile ad hoc network (MANET) if a sought des-
tination is already in its neighbor table. Or, an RFID tag
will be read only if the signal transmitted by the tag can be
received directly by the reader. These examples illustrate
that, depending on whether another system entity, denoted
as node in the rest of the paper, is a neighbor or not, actions
are taken (e.g., by the AP or the router) or implications are
derived (e.g., the RFID tag and reader are physically close).
In other words, discovering a neighbor, or knowing that a
node is a neighbor, is a common building block and enabler
of diverse system functionality.
Nonetheless, if an attack against neighbor discovery (ND)
can be perpetrated, such functionality can be abused. For
example, letting legitimate nodes erroneously believe that
they are neighbors allows the adversary to fully control com-
munication across these artiﬁcial links. The threat lies in
that the attacker can deny or derange communication at
any point; this can happen exactly at the moment a mes-
sage critical for the system operation is transmitted.
In
multi-hop networks, a “well-chosen” artiﬁcial link is likely
to attract a considerable number of routes, with devastating
eﬀects: denial of communication across all these routes and
signiﬁcant disturbance in the ﬂow of data. In a diﬀerent sce-
nario, misleading an RFID tag reader that the tag (and its
owner) is physically close to the RFID reader, while this is
not so, can enable the adversary to gain unauthorized access
to the premises of the tag owner.
Such attacks against ND are easy to mount, because the
common solution is to have nodes broadcast their identity,
so that reception at node A of such a beacon from node B
suﬃces for A to add B to its neighbor table. This can be
abused by an adversary that forges beacons and misleads
a correct, protocol-abiding, node into believing that it has
ﬁctitious neighbors. Entity authentication may appear as
a solution. Authentication does not imply, however, the
1
node is a neighbor. It only establishes which node created a
message but not which sent it across the wireless medium.
To illustrate this, consider A and B unable to communicate
directly, and C within range of both A and B. Node C re-
ceives and repeats B’s beacon, for example, digitally signed
and time-stamped, with no modiﬁcation. Then, A receives
the beacon and discovers B as a neighbor, even though this
is not so. Precisely because A cannot distinguish whether
the message (beacon) was sent directly by B or it was relayed
by another node.
A number of schemes were designed to thwart such relay
attacks, often termed wormholes, and essentially safeguard
ND. Distance bounding [2] is the basic approach: the dis-
tance of two nodes is estimated by measuring the signal
time of ﬂight from and to those nodes. If the estimate is be-
low a threshold corresponding to the nodes’ communication
range, the node is accepted as a neighbor. This may provide
the desired level of security for some applications; e.g., if an
RFID reader can conclude that a tag is within a range of
10cm, it is safe to have the building door opened. In other
words, what this approach provides is discovery of physical
neighborhood. However, for two nodes to be communication
neighbors (which we term simply as “neighbors” in the rest
of the paper), proximity is not suﬃcient [19]. Obstacles or
interference can prevent nearby nodes from communicating
directly. This allows the attacker to abuse a ND mechanism
oblivious to such obstructions and to mislead two near-by
nodes into believing they are neighbors while they are not.
This aspect of ND has been largely overlooked by schemes
proposed to date.
In this paper, we address this problem, by answering a more
fundamental question: To what extent is secure neighbor
discovery possible? We focus on the most generally applica-
ble variant of ND, which only requires two nodes to establish
a neighbor relation; relying on additional nodes to assist the
ND process can be impractical, especially in low-density net-
works. We prove that for a large class of protocols, which
includes many of the proposals in the literature, it is impos-
sible to achieve secure ND. On the positive side, we propose
a protocol from a diﬀerent class and prove that it can in fact
provide secure neighbor discovery.
To reach this result, we contribute the ﬁrst formal investi-
gation of secure ND. We provide a model of wireless ad hoc
networks rich enough to capture the problem at hand, and
a speciﬁcation of what we term the two-party ND. Then,
we analyze the above-mentioned two general classes of pro-
tocols. We denote the ﬁrst one time-based protocols (T-
protocols), for which nodes exchange messages and are able
to measure time with perfect accuracy. For this class, we
show the following impossibility result: No T-protocol can
solve the (secure) ND problem if adversarial nodes are able
to relay messages with a delay below a certain threshold
(Section 3). On the contrary, if the minimum relaying de-
lay is above that same threshold, we show it is possible
to achieve secure ND (Section 4). Then, in Section 5, we
consider the second class of protocols we term time- and
location-based protocols (TL-protocols): nodes are, in addi-
tion to T-protocol capabilities, aware of their location. We
show that TL-protocols can secure ND even if adversarial
nodes can relay messages with almost no delay.
Existing solutions, discussed in Section 7, were not formally
analyzed. A fraction of those schemes are indeed aﬀected
by our impossibility result. For the rest, our discussion in
Section 7 points out other weakness and reﬂects concepts
introduced here. Furthermore, in Section 6, we discuss in
detail the implications of our results, model assumptions, as
well as practical considerations on protocol design, before
we conclude with future work.
2. SYSTEM MODEL
We are interested in modeling a wireless network:
its ba-
sic entities, nodes, are processes running on computational
platforms equipped with transceivers communicating over a
wireless channel. We assume that nodes have synchronized
clocks and are static (not mobile). Nodes either follow the
implemented system functionality, in which case we denote
them as correct, or they are under the control of an adver-
sary, in which case we denote them as adversarial nodes.
We model communication at the physical layer, rather than
at higher layers (data link, network, or application), in order
to capture the inherent characteristics of neighbor discovery
in wireless networks. For simplicity, correct nodes are as-
sumed to use a single wireless channel and omnidirectional
antennas, but we do not require them to have equal trans-
mission power and receiver sensitivity. On the other hand,
adversarial nodes have enhanced capabilities: use directional
antennas and are able to communicate not only across the
wireless channel used by correct nodes, but also across a ded-
icated adversary channel imperceptible to correct nodes.
Our system model comprises: (i) a setting S, which de-
scribes the type (correct or adversarial) of nodes, their loca-
tion and how the wireless channel state changes over time;
(ii) a protocol model P, which determines the behavior of
correct nodes; (iii) an adversary model A, which determines
the capabilities of adversarial nodes.
We make the assumption that if we look at the system at any
point in time, one or more phenomena occur. We are inter-
ested in phenomena relevant to the wireless communication
and the system at hand and, consequently, to our analy-
sis. We denote these phenomena, associated with nodes, as
events (Deﬁnition 2). Then, we model the system evolution
over time using the notion of trace, i.e., a set of events (Deﬁ-
nition 3). More precisely, we use feasible traces, that satisfy
constraints speciﬁed by S (proper correspondence between
wireless sending and receiving of messages), P (correct nodes
follows the protocol), and A (adversarial nodes behave ac-
cording to their capabilities).
The speciﬁcation of secure neighbor discovery is provided
exclusively with respect to feasible traces. It consists of two
properties requiring that (i) if a node concludes that some
other correct node is a neighbor, then it is indeed a neigh-
bor (in every feasible trace), and (ii) if two correct nodes
are neighbors, it should be possible for them to conclude
they are neighbors (in some setting and feasible trace). We
call this two-party neighbor discovery, with only two nodes
participating in an ND protocol run. We discuss later an
alternative multi-party ND, which relies on the participa-
tion of additional correct nodes to conclude successfully on
whether two nodes are neighbors or not.
2
2.1 System Parameters
We list the parameters of our system model. They are used
by the protocols, and are known to the protocol designer
and to the adversary, both of whom have limited control
over their values.
• V, the set of unique node identiﬁers, which for simplic-
ity we will consider equivalent with the nodes them-
selves,
• v ∈ R>0, the signal propagation speed across the wire-
less channel,
• vadv (cid:62) v, the information propagation speed over the
adversary channel,
• M, the set of messages,
• |.| : M → R>0, the message duration function.
Parameter v deﬁnes how fast messages propagate across the
wireless channel, and once a communication technology is
selected, this cannot be controlled by the system designer.
Parameter vadv is under the control of the adversary: he
can choose the technology and thus how fast information
can propagate between adversarial nodes across the adver-
sary channel. The message space is system-speciﬁc and un-
der the control of the system designer, whereas the message
duration function, which determines the transmission delay
(not including the propagation delay),also depends on the
technology used and the achievable transmission rates, e.g.,
in bits per second.
2.2 Settings
A setting describes the type and location of nodes, and how
the state of the wireless channel changes over time.
Definition 1. A setting S is a tuple (cid:104)V, loc, type, link(cid:105),
where:
• V ⊂ V is a ﬁnite set of nodes. An ordered pair (A, B) ∈
V 2 is called a link.
• loc : V → R2 is called a location function1. As we
assume nodes are not mobile, this function does not
depend on time. We deﬁne dist : V × V → R(cid:62)0 as
dist(A, B) = d2(loc(A), loc(B)), where d2 is the Eu-
clidean distance in R2. We require the loc function
to be injective, so that no two nodes share the same
location. Thus, dist(A, B) > 0 for A (cid:54)= B.
• type : V → {correct, adversarial} is the type func-
tion; it deﬁnes which nodes are correct and which are
adversarial. This function does not depend on time,
as we assume that the adversary does not corrupt new
nodes during the system execution. We denote Vcor =
type−1({correct}) and Vadv = type−1({adversarial}).
1All the results of this paper can be immediately transcribed
to R3. The R2 space is used only for presentation simplicity.
• link : V 2 × R(cid:62)0 → {up, down} is the link state func-
tion. Accordingly to this function we say that at a
given time t (cid:62) 0, a link (A, B) ∈ V 2 is up (denoted
t :: A→ B) or down (denoted t :: A(cid:57)B). We use ab-
breviations t :: A↔B =def t :: A→B ∧ t :: B→A and
t :: A(cid:61)B =def t :: A(cid:57)B ∧ t :: B(cid:57)A. We extend the
“t :: A→B” notation from single time points to sets as
follows: T :: A→B =def ∀t ∈ T,