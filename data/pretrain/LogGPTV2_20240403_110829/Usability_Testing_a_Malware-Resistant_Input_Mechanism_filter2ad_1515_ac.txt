To evaluate the usability of the Bumpy variants during
the Benign phase, we measured the login success rate and
duration, averaged over each user in each of the ﬁve groups.
Login success rate. We begin by discussing the login suc-
cess rate. Let success Be(u) = |LSu
Be(u)|/|LBe(u)|, where
LSu
Be(u) and LBe(u) denote the successful logins and all at-
tempted logins, respectively, by user u in phase Benign.
Then,
¯x[success Be]d = avg
u∈U d
success Be(u)
s[success Be]d = stddev
u∈U d
success Be(u)
are the sample mean and standard deviation of login success
rates for design-d users (denoted U d) during the Benign
phase. These measures are presented in Figure 3(a).
The sample mean approximates the corresponding pop-
ulation mean µ[success Be]d, and we use Analysis of Vari-
ance (ANOVA) to determine for which d, e ∈ {Original,
Graphical, NoTM, Challenge, Control}, d 6= e, we can in-
validate the null hypothesis µ[success Be]d = µ[success Be]e
at a signiﬁcance level of α = .05.3 ANOVA revealed no
signiﬁcant differences in the login success rates for the dif-
ferent designs, i.e., the extra steps required of users in our
designs did not make it more difﬁcult for users to log in
successfully.
Login time. We now turn to measuring login duration for
each of the Bumpy variants, i.e., the time required by users
of each design to log into the course web page. For a login
attempt ℓ, let dur(ℓ) denote the time that transpired between
the ﬁrst action indicating that the user is commencing an
attempt to log in — i.e., either the password ﬁeld gaining
focus, or the TM window being opened in one of the designs
having a TM, whichever comes ﬁrst — and the user clicking
the “log in” button or pressing enter. Then,
duration Be(u) = avg
ℓ∈LSu
Be(u)
dur(ℓ)
is the average time required by u to log in successfully in
phase Benign. That said, when computing this average, we
excluded any login in which there was a 15-second period
of inactivity at any point between commencing (opening the
TM window or focusing into the password ﬁeld) and click-
ing the “log in” button (or pressing enter), considering such
a login instance to be an outlier. This removed 5 out of 1650
logins in phase Benign, across all four Bumpy designs and
Control. As with success rate,
¯x[duration Be]d = avg
u∈U d
duration Be(u)
s[duration Be]d = stddev
u∈U d
duration Be(u)
denote the sample mean and standard deviation of the aver-
age successful login duration for users in U d. These values
are shown in Figure 3(b) for the different designs. The for-
mer approximates the population mean µ[duration Be]d, and
3We used Tukey’s method of multiple comparisons [8] to test hypothe-
ses involving Bumpy designs (Original, Graphical, NoTM, Challenge),
and Dunnett’s test [8] to test hypotheses involving Control.
d
Original
Graphical
NoTM
Challenge
Control
.95 ± .07
.93 ± .09
.94 ± .07
.89 ± .14
.88 ± .12
d
Original
Graphical
NoTM
Challenge
Control
9.23 ± 2.04
8.59 ± 3.01
6.27 ± 1.89
11.51 ± 3.17
4.35 ± 1.90
(a) ¯x[success Be]d ± s[success Be]d
(b) ¯x[duration Be]d ± s[duration Be]d
in seconds
Figure 3. Benign logins
e
Gr No Ch
.89
.05
.01
.00
.01
.06
Co
.00
.00
.09
.00
d
Or
Gr
No
Ch
(c) Hypothesis
tests with
hypothesis
µ[duration Be]d = µ[duration Be]e. Cells
contain p-values; bold entries are results with
signiﬁcance α = .05.
null
we again use ANOVA to determine whether we can invali-
date the null hypothesis µ[duration Be]d = µ[duration Be]e
(for d, e ∈ {Original, Graphical, NoTM, Challenge,
Control}, d 6= e) at a signiﬁcance level of α = .05. The
results are shown in Figure 3(c).
Not surprisingly, Control yielded signiﬁcantly faster lo-
gin times than the designs that utilized a TM (Original,
Graphical, Challenge) — opening and inspecting the TM re-
quires extra steps that take time. Moreover, Challenge was
signiﬁcantly slower than Original, Graphical, and NoTM,
presumably owing to the additional diligence required to
transcribe the challenge value from the TM into the pass-
word ﬁeld. The only other signiﬁcant result is that NoTM
was faster than Original. Like Control, NoTM does not
involve the use of a TM, and we believe that this is the
most likely explanation for this result. An extra burden
placed on users of NoTM is that of remembering their SAS,
though according to the exit questionnaire only 2 out of the
14 participants who responded (out of 17 total assigned to
NoTM) reported difﬁculty with this task. This seems to be
reﬂected in the duration results since NoTM is competitive
with Control in this respect.
Based on the sample means in Figure 3(b), it appears
that the difference between the fastest (Control) and slow-
est (Challenge) methods is roughly 7 seconds in a successful
login attempt. One might justify this additional delay on the
basis of the greater security that Challenge offers, though
other designs such as NoTM are much more competitive
with Control in terms of login duration and have the pos-
sibility of offering the same protections as Challenge. As
such, we now turn to measuring the actual protection that
these designs offer, in an effort to further clarify the merits
of each design.
5.2 Resilience in Attack Scenarios
The Attack phase of our study subjected users to simu-
lated attacks, as might be carried out by malware that had
infected the computer on which the user employed Bumpy
or one of its variants; see §4.3 for a description of these sim-
ulated attacks. In this section we use the logins conducted
during phase Attack to infer which of the designs Original,
Graphical, NoTM and Challenge were most successful in
enabling the user to protect her password. Speciﬁcally, for
a ∈ {Feigned-Fail (FF), Wrong-Dest (WD), SAS-Present
(SP), Passive (Pa)}, let La
At(u) denote the logins by user u
in phase Attack subject to attack a. Let LAc
At (u) ∪
LWD
At (u) denote all Attack logins by u subject to
an Active (Ac) attack, and let LAny
At (u)
denote all Attack logins by u. Then, for any a ∈ {FF, WD,
SP, Ac, Pa, Any}, let
At (u) = LAc
At (u) ∪ LSP
At (u) = LFF
At (u) ∪ LPa
avgLeaked a
At(u) = avg
ℓ∈La
At(u)
maxLeaked a
At(u) = max
ℓ∈La
At(u)
leaked(ℓ)
pwdLen(ℓ)
leaked(ℓ)
pwdLen(ℓ)
(1)
(2)
where pwdLen(ℓ) denotes the password length of user u at
the time of login attempt ℓ (users were allowed to change
their passwords during the experiment), and leaked(ℓ) de-
notes the number of password characters that the user
leaked to the (simulated) malware in login ℓ. Speciﬁcally,
password characters were counted as leaked if they were
typed while protection was not enabled, or if they occur
in the password before other characters so leaked.
(This
conservative estimate assumed leakage up to and includ-
ing any typed password characters.) So, avgLeaked a
At(u)
is the fraction of her password that user u leaked, on aver-
age, in logins of attack type a in phase Attack. Similarly,
maxLeaked a
At(u) is the cumulative fraction of her password
that user u leaked across all logins of attack type a in phase
Attack. As such, avgLeaked a
At(u) indicates the fraction of
u’s password that an attacker might expect to obtain in a sin-
gle login subjected to attack type a, and maxLeaked a
At(u) is
the fraction of u’s password that an attacker might expect to
gather over an extended period of observing the user type
her password in logins of attack type a.
The results for the various designs d ∈ {Original,
Graphical, NoTM, Challenge} are shown in Figure 4.
Speciﬁcally, Figure 4(a) lists:
¯x[avgLeaked a
At]d = avg
u∈U d
avgLeaked a
At(u)
s[avgLeaked a
At]d = stddev
u∈U d
avgLeaked a
At(u)
and Figure 4(b) lists:
¯x[maxLeaked a
At]d = avg
u∈U d
maxLeaked a
At(u)
s[maxLeaked a
At]d = stddev
u∈U d
maxLeaked a
At(u)
µ[avgLeaked a
the null hypotheses µ[avgLeaked a
At]e
For designs d, e ∈ {Original, Graphical, NoTM,
Challenge}, d 6= e, and for attack type a, we can use
At]d
this data to test
=
=
µ[maxLeaked a
and
µ[maxLeaked a
that
correspond to the sample means ¯x[avgLeaked a
At]d and
¯x[maxLeaked a
At]d, respectively. Upon conducting these
tests, the hypotheses that were rejected at signiﬁcance level
α = .05 are
At]e
At]d denote the population means
µ[maxLeaked a
µ[avgLeaked a
At]d
where
At]d
and
µ[avgLeaked SP
µ[maxLeaked SP
µ[avgLeaked SP
µ[maxLeaked SP
At ]No = µ[avgLeaked SP
At ]No = µ[maxLeaked SP
At ]No = µ[avgLeaked SP
At ]No = µ[maxLeaked SP
At ]Or
At ]Or
At ]Ch
At ]Ch
(3)
(4)
(5)
(6)
At () and maxLeaked SP
That is, NoTM performed signiﬁcantly worse than Original
and Challenge in defending against SAS-Present attacks,
in both the avgLeaked SP
At () measures.
We believe this can be explained by the fact that Original
and Challenge provide feedback that the user expects to
see prior to entering her password, namely the information
displayed on the TM. Indeed it is necessary for the user
to receive this feedback to continue the login process in
the Challenge case. We believe that this feedback explains
why Original and Challenge outperform NoTM in this at-
tack, and why Challenge offers the lowest sample mean
¯x[maxLeaked SP
At ]d = .13 (i.e., provides the best protection
for the user’s password) among all designs d.
An additional noteworthy observation from Figure 4 is
that the Bumpy variants we tested do improve users’ abil-
ities to protect their passwords. Today’s web password lo-
gins do not protect at all against even Passive attacks in our
threat model (i.e., malware on the client’s machine); i.e., if
included in the tables in Figure 4, today’s logins would be
listed as 1.0 ± 0.0 in the Passive column. In contrast, all of
our designs performed convincingly better against Passive
attacks in the average case (Figure 4(a)), and Graphical
and Challenge performed well against Passive attacks even
when considering the case in which an attacker monitors the
user over an extended period of time (represented by Fig-
ure 4(b)). While the low password leakage under Passive
attacks shows that the compliance rate for secure atten-
tion sequences was high, we wanted to know if the users
were comfortable with this model for wider usage. When
asked if they would be happy to use this system for other
websites, 62% of the 58 (non-Control group) exit question-
naire respondents agreed, 14% were neutral, and 24% dis-
agreed. While in the Attack phase users leaked more of
their passwords during Active attacks than during Passive
attacks, §5.3 presents evidence that training via warnings in
the Attack-and-Warn phase was effective in reducing this
leakage in most cases.
As part of the exit questionnaire, users were asked
whether they successfully noticed and avoided an attack on
their password during this phase. In order to test the null
hypothesis that the user responses and true performance
are not correlated, we compared the binary response vari-
able with actual behavior (a value of 1 indicating that they
avoided at least one attack). We observed a Pearson correla-
tion coefﬁcient [21] of ρ = .24 (p-value = .07). While this
p-value does not allow us to reject the null hypothesis with
α = .05, the positive ρ suggests that users who responded
“yes” tended to avoid at least one attack during this phase.
5.3 Effects of Training for Attack Scenarios
The last phase of our study is Attack-and-Warn (recall
§4.3). Users were both attacked as in Attack and then
warned after completion of the login attempt if they leaked
any password characters and, if so, informed why the char-
acters were leaked. This provided a form of training. Our
last tests focus on whether this training was effective at im-
proving users’ abilities to protect their passwords.
Let La
the
AW(u) denote
logins by user u in
Attack-and-Warn categorized as attack type a ∈ {Passive,
Feigned-Fail, Wrong-Dest, SAS-Present}. We additionally
deﬁne two subsets of the logins La
AW(u), namely those
logins that occurred before the ﬁrst warning (if any) was
presented to u for attack type a, denoted B a
AW(u), and
those logins that occurred after the ﬁrst warning (if any)
for a was presented to u, denoted Aa
AW(u). The login
attempt that caused the ﬁrst warning for attack a to be
presented to u, if any, is deﬁned to be in B a
AW(u). Note
that if u was presented with no warnings for attack a
AW(u) and
for the entirety of Attack-and-Warn,
Aa
AW(u) are both empty. We can now go on to deﬁne these
sets for the Active and Any attacks in the natural way.
Speciﬁcally, LAc
AW(u);
B Ac
and
AAc
Simi-
larly, LAny
AW (u) =
B Pa
AW(u).
AW (u) ∪ B SP
AW(u).
AW(u); B Any
AW(u) ∪ AAc
AW(u) = B FF
AW(u) = AFF
AW(u) ∪ B WD
AW(u) ∪ AWD
AW(u) ∪ LAc
AW (u) = APa
AW(u); and AAny
AW (u) = LPa