title:Utilizing Public Blockchains for the Sybil-Resistant Bootstrapping
of Distributed Anonymity Services
author:Roman Matzutt and
Jan Pennekamp and
Erik Buchholz and
Klaus Wehrle
Utilizing Public Blockchains for the Sybil-Resistant
Bootstrapping of Distributed Anonymity Services
Roman Matzutt, Jan Pennekamp, Erik Buchholz, Klaus Wehrle
{matzutt,pennekamp,buchholz,wehrle}@comsys.rwth-aachen.de
Communication and Distributed Systems, RWTH Aachen University, Germany
0
2
0
2
r
p
A
1
2
]
R
C
.
s
c
[
2
v
6
8
3
6
0
.
4
0
0
2
:
v
i
X
r
a
ABSTRACT
Distributed anonymity services, such as onion routing networks
or cryptocurrency tumblers, promise privacy protection without
trusted third parties. While the security of these services is often
well-researched, security implications of their required bootstrap-
ping processes are usually neglected: Users either jointly conduct
the anonymization themselves, or they need to rely on a set of non-
colluding privacy peers. However, the typically small number of pri-
vacy peers enable single adversaries to mimic distributed services.
We thus present AnonBoot, a Sybil-resistant medium to securely
bootstrap distributed anonymity services via public blockchains.
AnonBoot enforces that peers periodically create a small proof of
work to refresh their eligibility for providing secure anonymity
services. A pseudo-random, locally replicable bootstrapping pro-
cess using on-chain entropy then prevents biasing the election of
eligible peers. Our evaluation using Bitcoin as AnonBoot’s under-
lying blockchain shows its feasibility to maintain a trustworthy
repository of 1000 peers with only a small storage footprint while
supporting arbitrarily large user bases on top of most blockchains.
CCS CONCEPTS
• Security and privacy → Pseudonymity, anonymity and un-
traceability; • Networks → Peer-to-peer protocols.
KEYWORDS
anonymization; bootstrapping; public blockchain; Sybil attack; an-
onymity network; cryptocurrency tumbler; Bitcoin; Tor
ACM Reference Format:
Roman Matzutt, Jan Pennekamp, Erik Buchholz, Klaus Wehrle. 2020. Uti-
lizing Public Blockchains for the Sybil-Resistant Bootstrapping of Dis-
tributed Anonymity Services. In Proceedings of the 15th ACM Asia Con-
ference on Computer and Communications Security (ASIA CCS ’20), Octo-
ber 5–9, 2020, Taipei, Taiwan. ACM, New York, NY, USA, 12 pages. https:
//doi.org/10.1145/3320269.3384729
1 INTRODUCTION
Preserving user privacy on the Internet has become a complex
task due to increasingly pervasive measures for online surveillance:
While re-establishing their anonymity traditionally was only crucial
for a set of especially privacy-aware users, the Snowden revelations
have shown that every online user’s privacy is at stake [23]. This
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
© 2020 Association for Computing Machinery.
This is the author’s version of the work. It is posted here for your personal use. Not
for redistribution. The definitive Version of Record was published in Proceedings of the
15th ACM Asia Conference on Computer and Communications Security (ASIA CCS ’20),
October 5–9, 2020, Taipei, Taiwan, https://doi.org/10.1145/3320269.3384729.
Figure 1: High-level design overview of AnonBoot, our
medium for securely bootstrapping anonymity services.
shift further fueled distributed anonymity services, such as mes-
sage shuffling networks [13], anonymous communication networks
based on onion routing [16], or cryptocurrency tumblers [31, 54, 55].
While various works have investigated secure building blocks for an-
onymity services, those works typically overlook the bootstrapping
of such services. Often, related work simply assumes non-colluding
peers, e.g., because of their operators’ presumed real-world reputa-
tion. However, this perceived reputation does not always warrant
trust, as evidenced, e.g., by numerous alleged scams regarding cryp-
tocurrencies [2, 49, 55] and the need for manually reporting [45] or
actively probing [12, 50] bad peers in the Tor network. Hence, the
question remains: How to securely bootstrap distributed anonymity
services without having to rely on operator reputation?
In this paper, we propose to outsource privacy-enhancing tasks
to small networks of peers selected randomly in a secure, unbiased,
and transparent fashion from a Sybil-resistant peer repository. We
introduce AnonBoot as a medium for indexing and bootstrapping
these anonymity services on top of a public host blockchain, which
provides accepted means to maintain an immutable and transparent
event log. As we illustrate in Figure 1, peers join by periodically pub-
lishing advertisements containing a small proof of work (PoW) to
the host blockchain. Peer operators thus need to periodically invest
hardware resources into refreshing their membership within a lim-
ited time frame, and all participants can locally derive AnonBoot’s
state by monitoring the host blockchain. Hence, AnonBoot creates
a Sybil-resistant index of privacy peers from which users can then
request bootstrapping new anonymity services. Users can choose
privacy peers or established anonymity services from this index to
cater to their individual privacy requirements. We exemplarily build
AnonBoot on top of Bitcoin to showcase its low requirements as
well as the small storage footprint it has on its host blockchain, and
to show that our system does not require sophisticated blockchain
features, such as smart contracts, to operate.
CryptocurrencyTumblerShuffling NetworkOnion Routing CircuitAdvertiseas a Peer(Section 4.2)BootstrapServices(Section 4.3)UtilizeServices(Section 5)Privacy Peers(Section 4.1)PeerRepository(Section 4.1)AnonymityServices(Section 2)HostBlockchain(Section 4.1)(a) Anonymity Network
(b) Shuffling Network
(c) Cryptocurrency Tumbler
Figure 2: Well-known distributed anonymity services encompass (a) anonymity networks, such as Tor, for anonymous Internet
communication, (b) message-shuffling networks, and (c) cryptocurrency tumblers to increase users’ financial privacy.
Contributions.
• By analyzing existing anonymity services (Section 2), we identify
a lack of secure bootstrapping for such services (Section 3).
• Through AnonBoot1, we show that public blockchains are a
suitable basis to create such a secure bootstrapping process (Sec-
tion 4) for heterogeneous established use cases (Section 5).
• We show that PoW and peer election can prevent adversaries
from gaining advantages over honest peer operators (Section 6).
• AnonBoot scales to repositories of, e.g., 1000 privacy peers and
large user bases with only low storage impact on its host block-
chain and low, tunable costs for its participants (Section 7).
2 AVAILABLE ANONYMITY SERVICES
We identify three categories of distributed anonymity services for
outsourcing privacy management: Internet anonymity networks,
message shuffling networks, and cryptocurrency tumblers.
2.1 Anonymity Networks
Anonymity networks, such as Tor [16], enable low-latency and
anonymous Internet communication through onion routing, i.e.,
tunneling users’ traffic through a user-selected circuit under a lay-
ered encryption, as we exemplify in Figure 2a. The user creates
her circuits locally at random, but she also considers performance
metrics, such as available bandwidth at individual nodes [15], as
well as node-specific policies, e.g., exit nodes only performing re-
quests to certain ports on the user’s behalf [16]. Tor provides the
information required to build circuits through a directory that is
maintained by exceptionally trusted directory servers [16]. These,
currently ten [44], directory servers are vetted by the Tor project
maintainers, and users must trust that those directory servers do
not collude [36]. To further increase the reliability of this direc-
tory, relays are actively being probed [12, 50], and users can report
misbehavior to the Tor project [45]. Thus, misbehaving nodes are
flagged in the directory to enable users to avoid such relays [45].
Takeaway. Tor relies on an index of available nodes and their
properties but requires trusted authorities to maintain this index.
2.2 Message Shuffling Networks
Long before the recent proliferation of anonymity networks, David
Chaum introduced networks for oblivious message shuffling [13],
to which we refer to as shuffling networks, as a means to realize
anonymous mail systems that provide sender anonymity, e.g., to
1Python-based implementation available at: https://github.com/COMSYS/anonboot
protect whistleblowers from retribution. Figure 2b showcases the
basic user interaction with such a shuffling network. Similarly to
anonymity networks, users relay their messages through a cascade
of known shufflers, again after encrypting them in layers. However,
multiple users shuffle their messages through the same cascade
of nodes to achieve a vastly reduced overhead. These shufflers
hence, one after another, receive the batch of encrypted messages
of which they can lift only the outermost encryption layer. After
decrypting the message batch, each shuffler obliviously shuffles
the batch’s messages and forwards the result to the subsequent
shuffler. Therefore, shufflers are unable to correlate other shufflers’
input and output batches. As long as one shuffler remains honest,
no passive adversary can deanonymize the users from now on.
However, shuffling networks are often prone to active attacks,
such as denial of service (DoS) or replacing encrypted messages [14].
Furthermore, adversaries can easily operate full shuffling networks
at low costs since those networks are fixed and small in size.
Takeaway. Users need to trust that non-colluding operators run
the shuffling network faithfully, which is especially challenging due
to the current lack of a widely accepted index of shuffling networks.
2.3 Cryptocurrency Tumblers
Multiple analyses of public blockchains, especially Bitcoin [32, 35,
38], debunked the initial hope that cryptocurrencies provide suffi-
cient user privacy by not building up long-lived identities [34]. To
counteract curious blockchain observers, cryptocurrency tumblers,
or cryptotumblers, break the linkability of privacy-aware users and
their funds. Cryptotumblers pool the funds of multiple users and
then pay out random coins of the same value to each user such that
the new coin owners are unknown to blockchain observers.
Cryptotumblers evolved over time, yielding different generations
and flavors to appropriately address users’ security and privacy con-
cerns. First, users of centralized cryptotumblers require strong trust
in the service operator to not steal their funds or disclose the shuf-
fling history at a later point to deanonymize users. Series of alleged
scams [2, 49, 55], however, underpin the need for further technical
protection, e.g., holding the cryptotumbler accountable [11].
The first generation of distributed cryptotumblers let privacy-
aware users jointly simulate a centralized tumbler by creating one
large transaction with unlinkable inputs and outputs [30, 39]. As the
mixing is only performed if all users agree on the transaction’s cor-
rectness, this approach is much more secure than involving a trusted
third party. However, single users can stall the mixing, which the
other users must be able to detect to re-run the mixing without the
Onion-Routing RelaysDirectoryServiceUserInternetindividual,private shuffleCascadeofShufflingPeersUsersAnonymizedUsersCascadeofTumblingPeersUsers withFundsAnonymizedFundsFundEscrowRandomRefundsmisbehaving user [39]. Another branch of cryptotumblers aims for
providing a distributed mixing service [31, 54, 55], i.e., mix users’
funds on their behalves without the risks involved with centraliza-
tion. While MÃűbius [31] achieves this via an Ethereum smart con-
tract, CoinParty [54, 55] implements a blockchain-external service
via a shuffling network and secure multiparty computation (SMC),
and thus can also be used for mixing cryptocurrencies without sup-
port for smart contracts, e.g., Bitcoin. In Figure 2c, we illustrate the
operation of such a CoinParty-like distributed cryptotumbler. Using
threshold signatures among the mixing peers prevents single adver-
saries from stealing funds, and secret-shared checksums are used
to hold misbehaving mixing peers accountable during CoinParty’s
shuffling phase [55], e.g., if attempting to perform attacks known
from shuffling networks (cf. Section 2.2). However, this additional
protection can only tolerate adversaries controlling a share fS <1/3
of the service’s privacy peers due to the application of SMC [4].
Takeaway. Although distributed cryptotumblers can increase the
user’s privacy, they either rely on smart contracts or are prone to
Sybil attacks, i.e., single adversaries mimicking a distributed service.
To the best of our knowledge, providing a technical medium to
securely bootstrap cryptotumblers is still an open problem [39].
3 SCENARIO AND DESIGN GOALS
Based on existing anonymity services and the lack of proper boot-
strapping processes, we now specify our scenario and design goals.
3.1 A Generalization of Anonymity Services
As we discussed in Section 2, technical means for securely boot-
strapping distributed anonymity services are currently lacking. For
a holistic solution resolving this lack of means to establish trust, we
derive our scenario from the diverse landscape of existing services.
We assume a group of privacy-aware users who seek to utilize an
anonymity service that increases their privacy on their behalf. To
provide sufficient security and privacy guarantees, the users require
that multiple independent operators of privacy peers jointly offer
distributed anonymity services. Due to only limited scalability of
network sizes of existing anonymity services, we assume that only
a few privacy peers (e.g., < 100) provide services to much larger
user groups. Service provision is thus prone to Sybil attacks.
To account for local user decisions, such as creating Tor circuits
(cf. Section 2.1) or a minimum number of independent peers jointly
providing a service, the user needs means to securely discover avail-
able peers and already established anonymity services. Furthermore,
she has to establish trust in the faithful setup of those services even
if she does now know the peer operators. Finally, the service dis-
covery must allow for pooling users’ anonymization efforts, as is
required for shuffling networks or cryptotumblers. Additionally,
we need to incentivize maintaining an honest majority of privacy
peers. However, we assume that a share of privacy peers will still
act maliciously and aim to, e.g., deanonymize users, stall the service,
or inflict other damages such as theft through cryptotumblers.
In conclusion, users need to be ensured that they only utilize
distributed anonymity services that act faithfully, i.e., the majority
of the respective peers are honest. However, especially the setup
and discovery of such services currently constitute weak points
that adversaries could exploit to infiltrate anonymity services.