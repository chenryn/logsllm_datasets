which is the starting point of this attack. In these steps, the initial
tuples of known (ed,d ) mappings are prepared so as to bootstrap the
subsequent steps (i.e., from Step 5 to Step 8) in Figure 1. The (ed,d )
pairs found in Step 2 serve as an input (i.e., C) to the subroutine
Occurrence(C,M,M′, A′′,B) in Step 3, which aims to find more
(ed,d ) mappings. The (ed,d ) pairs found in Step 2 are derived
from (V Bj ,V Aj′ ) pairs where V Bj is unique among its peers and
V Bj = V Aj′. The more such (V Bj ,V Aj′ ) pairs exist, the more (q,w )
mappings and (ed,d ) mappings can be recovered. On the other hand,
if no such (V Bj ,V Aj′ ) pair exists, LEAP would fail to find any (q,w )
or (ed,d ) mappings. Hence, the number of such (V Bj ,V Aj′ ) pairs
found in Step 2 determines the effectiveness of LEAP. This means
an effective countermeasure against LEAP would be to reduce or
even eliminate the existence of such (V Bj ,V Aj′ ) pairs. One possible
solution is to add keywords from W to existing documents that
each query token is attached to more encrypted documents than it
should be (i.e., it turns some entries of B from 0 to 1). These extra
dummy encrypted documents can be filtered out by the user after
data decryption. This method is similar to the padding solution
in [5]. If the dummy documents are added to the point that there
exists no unique V Bj, then LEAP would fail. This is because there
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2317is no initial (ed,d ) mappings to bootstrap the subsequent steps of
LEAP.
However, one can use a modified attack similar to the generalized
count attack described in [5] to partially alleviate the above padding
countermeasure. Specifically, we can adopt the modifications as
introduced in [5]: (1) for the n × n ed-occurrence matrix M and the
n′ × n′ d-occurrence matrix M′, we modify Line 9 of Algorithm 1
by letting M[j,k] not equal to M′[j′,k′] but within a window as
large as the maximum number of false co-occurrences; (2) We can
make an initial guess for the (V Bj ,V Aj′ ) pair in Step 2 to start
Algorithm 1. If later the algorithm detects an inconsistency, we can
guess another (V Bj ,V Aj′ ) pair. As a result, there is no guarantee
that we can achieve keyword recovery and document recovery
accurately. In other words, the recovered results may result in false
positives.
7 RELATED WORK
The first practical searchable encryption scheme was introduced by
Song, Wagner and Perrig [40]. Subsequently, many variants were
proposed to improve on performances, security and functionali-
ties [1, 4, 6–12, 15, 16, 22–25, 29, 30, 32, 33, 37, 41]. Most, if not
all, SE schemes are designed based on the assumption that certain
leakage of information (e.g. L1 leakage, L2 leakage) is acceptable as
a trade-off for high efficiency as required for practical usage. An
overview of searchable encryption schemes is given in [3].
Various leakage-based attacks have been discovered recently
that successfully compromise some of the existing SE schemes
[2, 5, 21, 35, 39]. Islam et al. [21] demonstrated how access pattern
can be used to recover the underlying keywords and documents in
SE assuming that an attacker knows either all plaintext documents
or keyword distribution. Cash et al. [5] categorised SE leakages into
different levels, and improved Islam et al.’s attack by presenting
a more effective leakage-based attack that could work with less
knowledge about the user’s documents. An active attack that in-
duces a user to insert chosen documents was also introduced in [5].
Pouliot and Wright [39] later proposed new inference attacks on
EDESE schemes that demonstrate the consequence of the informa-
tion leakage of EDESE schemes. Zhang et al. [44] later presented a
file-injection attack, in which an attacker selectively injects certain
documents so as to recover underlying keywords and documents.
Our work is closely related to and improves on the inference attacks
proposed by Pouliot and Wright [39] in the sense that our attack
is the first attack (as far as we know) achieving accurate keyword
recovery and document recovery with only partial knowledge of a
user’s documents and L2 leakage. The passive attack proposed in
[35] is also closely related to ours, however, it does not work under
the setting we consider in this paper. Recently, Blackstone et al.
[2] revisited the attacks in [5, 21] and proposed new leakage-abuse
attacks. They assumed that the attacker knows the universe of key-
words from which the queries are drawn. This is different from our
assumption in this paper where we do not require the knowledge
of keyword universe.
Kellaris et al. [26] stated that access pattern leakage is unavoid-
able and introduced an attack on keyword recovery based on range
queries. Following from Kellaris et al.’s attacks, there have also
been recent works focusing on reconstruction attacks on range
queries [17–19, 28, 31, 34] and k-NN queries [27, 28]. Lacharité et
al. [31] proposed new attacks with the assumption that the database
is dense, while subsequent attacks proposed by Grubbs et al. [17]
make no such assumption. However, these attacks assume that the
queries are either uniformly distributed (as in the Kellaris et al.’s
attacks), or that the query and approximation of the data distribu-
tions are known. Gui et al. [19] proposed attacks based on Kellaris et
al.’s work, but require fewer queries and do not assume uniformly
distributed queries. Nevertheless, there are other assumptions such
as queries for all possible volume must be observed at least once.
Independently, Kornaropoulos et al. [27] proposed reconstruction
attacks for k-nearest neighbor (k-NN) queries, which are widely
used in spatial data databases. The proposed attacks also assume
uniformly distributed queries. More recently, Kornaropoulous et
al. [28] propose attacks that work against both k-NN queries and
range queries, and is agnostic to query distribution. The attacks
leverage on both the search and access pattern leakages, as opposed
to previous attacks that leverage on access pattern leakage only.
Poddar et al. [36] proposed a new reconstruction attack that uti-
lizes common characteristics in practical applications, that is, file
injection and automatic query replay, in conjuction with volume
leakage. This means the attack assumes an adversary is able to
inject files and replay a query. The attack was tested on Gmail.
Recently, Falzon et al. [14] explored the threat in two dimensions
databases that support range queries and presented a full database
reconstruction attack.
8 CONCLUSIONS
In this work, we proposed a new leakage-abuse attack on EDESE
schemes termed LEAP. Through LEAP we demonstrated that the
underlying keywords of query tokens can be recovered accurately,
even with partial knowledge of the document set. Rigorous experi-
ments illustrate that LEAP achieves high correct keyword recovery
rate and correct document recovery rate, as compared to the PW-U
attack and the PW-P attack. Our findings show that even if a small
portion of a document set is known to an attacker, the information
leakage (e. g., L2 leakage) of EDESE schemes can be very damaging.
ACKNOWLEDGMENTS
We thank anonymous reviewers for helpful comments. Research
supported in part by AXA Research Fund, the National Natural
Science Foundation of China (Grant Nos. 62032005, 61972094), the
Science Foundation of Fujian Provincial Science and Technology
Agency (2020J02016), and the young talent promotion project of
Fujian Science and Technology Association. Jian Weng was sup-
ported by Major Program of Guangdong Basic and Applied Re-
search Project (Grant No. 2019B030302008), National Key Research
and Development Plan of China (Grant No. 2020YFB1005600), Na-
tional Natural Science Foundation of China (Grant Nos. 61825203,
U1736203 and 61732021), and Guangdong Provincial Science and
Technology Project (Grant No. 2017B010111005). Yingjiu Li was
supported in part by the Ripple University Blockchain Research
Initiative.
REFERENCES
[1] Gilad Asharov, Moni Naor, Gil Segev, and Ido Shahaf. 2016. Searchable Symmetric
Encryption: Optimal Locality in Linear Space via Two-Dimensional Balanced
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2318Allocations. IACR Cryptology ePrint Archive (and STOC 2016) 2016/251 (2016),
1–34.
[2] Laura Blackstone, Seny Kamara, and Tarik Moataz. 2020. Revisiting Leakage
Abuse Attacks. In 27th Annual Network and Distributed System Security Sympo-
sium, NDSS 2020. The Internet Society.
[3] Christoph Bösch, Pieter Hartel, Willem Jonker, and Andreas Peter. 2014. A Survey
of Provably Secure Searchable Encryption. ACM Comput. Surv. 47, 2, Article 18
(2014), 51 pages.
[4] Raphaël Bost, Brice Minaud, and Olga Ohrimenko. 2017. Forward and Backward
Private Searchable Encryption from Constrained Cryptographic Primitives. In
Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications
Security, CCS 2017, Bhavani M. Thuraisingham, David Evans, Tal Malkin, and
Dongyan Xu (Eds.). ACM, 1465–1482.
[5] David Cash, Paul Grubbs, Jason Perry, and Thomas Ristenpart. 2015. Leakage-
Abuse Attacks Against Searchable Encryption. In ACM CCS 2015, Indrajit Ray,
Ninghui Li, and Christopher Kruegel (Eds.). ACM, 668–679.
[6] David Cash, Joseph Jaeger, Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk,
Marcel-Catalin Rosu, and Michael Steiner. 2014. Dynamic Searchable Encryption
in Very Large Databases: Data Structures and Implementation. In NDSS 2014,
Vol. 2014. Internet Society.
[7] David Cash, Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk, Marcel-Catalin
Rosu, and Michael Steiner. 2013. Highly-Scalable Searchable Symmetric Encryp-
tion with Support for Boolean Queries. In CRYPTO 2013 (LNCS, Vol. 8042), Ran
Canetti and Juan A. Garay (Eds.). Springer, 353–373.
[8] David Cash and Stefano Tessaro. 2014. The Locality of Searchable Symmetric En-
cryption. In EUROCRYPT 2014 (LNCS, Vol. 8441), Phong Q. Nguyen and Elisabeth
Oswald (Eds.). Springer, 351–368.
[9] Javad Ghareh Chamani, Dimitrios Papadopoulos, Charalampos Papamanthou,
and Rasool Jalili. 2018. New Constructions for Forward and Backward Private
Symmetric Searchable Encryption. In Proceedings of the 2018 ACM SIGSAC Confer-
ence on Computer and Communications Security, CCS 2018, David Lie, Mohammad
Mannan, Michael Backes, and XiaoFeng Wang (Eds.). ACM, 1038–1055.
[10] Yan-Cheng Chang and Michael Mitzenmacher. 2005. Privacy Preserving Key-
word Searches on Remote Encrypted Data. In ACNS 2005 (LNCS, Vol. 3531), John
Ioannidis, Angelos D. Keromytis, and Moti Yung (Eds.). Springer, 442–455.
[11] Melissa Chase and Seny Kamara. 2010. Structured Encryption and Controlled
Disclosure. In ASIACRYPT 2010 (LNCS, Vol. 6477), Masayuki Abe (Ed.). Springer,
577–594.
[12] Reza Curtmola, Juan A. Garay, Seny Kamara, and Rafail Ostrovsky. 2006. Search-
able Symmetric Encryption: Improved Definitions and Efficient Constructions. In
ACM CCS 2006, Ari Juels, Rebecca N. Wright, and Sabrina De Capitani di Vimercati
(Eds.). ACM, 79–88.
[13] Enron email dataset. 2019. https://www.cs.cmu.edu/~./enron/. Accessed: 2019-
[14] Francesca Falzon, Evangelia Anna Markatou, Akshima, David Cash, Adam
Rivkin, Jesse Stern, and Roberto Tamassia. 2020. Full Database Reconstruc-
tion in Two Dimensions. In CCS ’20: 2020 ACM SIGSAC Conference on Computer
and Communications Security, Virtual Event, USA, November 9-13, 2020. 443–460.
https://doi.org/10.1145/3372297.3417275
[15] Ben A. Fisch, Binh Vo, Fernando Krell, Abishek Kumarasubramanian, Vladimir
Kolesnikov, Tal Malkin, and Steven M. Bellovin. 2015. Malicious-Client Security
in Blind Seer: A Scalable Private DBMS. In IEEE S & P 2015. IEEE Computer
Society, 395–410.
IACR Cryptology ePrint Archive, Report
[16] Eu-Jin Goh. 2003. Secure Indexes.
11-23.
2003/216. http://eprint.iacr.org/2003/216/.
[17] Paul Grubbs, Marie-Sarah Lacharité, Brice Minaud, and Kenneth G. Paterson.
2018. Pump up the Volume: Practical Database Reconstruction from Volume
Leakage on Range Queries. In Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security, CCS 2018, David Lie, Mohammad
Mannan, Michael Backes, and XiaoFeng Wang (Eds.). ACM, 315–331.
[18] Paul Grubbs, Marie-Sarah Lacharité, Brice Minaud, and Kenneth G. Paterson. 2019.
Learning to Reconstruct: Statistical Learning Theory and Encrypted Database
Attacks. In 2019 IEEE Symposium on Security and Privacy, S&P 2019. IEEE, 1067–
1083.
[19] Zichen Gui, Oliver Johnson, and Bogdan Warinschi. 2019. Encrypted Databases:
New Volume Attacks against Range Queries. In Proceedings of the 2019 ACM
SIGSAC Conference on Computer and Communications Security, CCS 2019, London,
UK, November 11-15, 2019, Lorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang,
and Jonathan Katz (Eds.). ACM, 361–378. https://doi.org/10.1145/3319535.3363210
[20] Warren He, Devdatta Akhawe, Sumeet Jain, Elaine Shi, and Dawn Xiaodong Song.
2014. ShadowCrypt: Encrypted Web Applications for Everyone. In Proceedings
of the 2014 ACM SIGSAC Conference on Computer and Communications Security,
Scottsdale, AZ, USA, November 3-7, 2014. 1028–1039.
[21] Mohammad Saiful Islam, Mehmet Kuzu, and Murat Kantarcioglu. 2012. Access
Pattern Disclosure on Searchable Encryption: Ramification, Attack and Mitigation.
In NDSS 2012. The Internet Society.
[22] Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk, Marcel-Catalin Rosu, and
Michael Steiner. 2013. Outsourced symmetric private information retrieval. In
ACM CCS’13, Ahmad-Reza Sadeghi, Virgil D. Gligor, and Moti Yung (Eds.). ACM,
875–888.
[23] Seny Kamara and Tarik Moataz. 2019. Computationally Volume-Hiding Struc-
tured Encryption. In Advances in Cryptology - EUROCRYPT 2019 - 38th Annual
International Conference on the Theory and Applications of Cryptographic Tech-
niques, Proceedings, Part II (Lecture Notes in Computer Science, Vol. 11477), Yuval
Ishai and Vincent Rijmen (Eds.). Springer, 183–213.
[24] Seny Kamara, Tarik Moataz, and Olga Ohrimenko. 2018. Structured Encryption
and Leakage Suppression. In Advances in Cryptology - CRYPTO 2018 - 38th Annual
International Cryptology Conference, Proceedings, Part I (Lecture Notes in Computer
Science, Vol. 10991), Hovav Shacham and Alexandra Boldyreva (Eds.). Springer,
339–370.
[25] Seny Kamara, Charalampos Papamanthou, and Tom Roeder. 2012. Dynamic
searchable symmetric encryption. In ACM CCS’12, Ting Yu, George Danezis, and
Virgil D. Gligor (Eds.). ACM, 965–976.
[26] Georgios Kellaris, George Kollios, Kobbi Nissim, and Adam O’Neill. 2016. Generic
Attacks on Secure Outsourced Databases. In ACM CCS 2016, Edgar R. Weippl,
Stefan Katzenbeisser, Christopher Kruegel, Andrew C. Myers, and Shai Halevi
(Eds.). ACM, 1329–1340.
[27] Evgenios M. Kornaropoulos, Charalampos Papamanthou, and Roberto Tamassia.
2019. Data Recovery on Encrypted Databases with k-Nearest Neighbor Query
Leakage. In 2019 IEEE Symposium on Security and Privacy, SP 2019, San Francisco,
CA, USA, May 19-23, 2019. IEEE, 1033–1050. https://doi.org/10.1109/SP.2019.00015
[28] Evgenios M. Kornaropoulos, Charalampos Papamanthou, and Roberto Tamassia.
2020. The State of the Uniform: Attacks on Encrypted Databases Beyond the
Uniform Query Distribution. In 2020 IEEE Symposium on Security and Privacy,
SP 2020, San Francisco, CA, USA, May 18-21, 2020. IEEE, 1223–1240.
https:
//doi.org/10.1109/SP40000.2020.00029
[29] Kaoru Kurosawa. 2014. Garbled Searchable Symmetric Encryption. In FC 2014
(LNCS, Vol. 8437), Nicolas Christin and Reihaneh Safavi-Naini (Eds.). Springer,
234–251.
[30] Kaoru Kurosawa and Yasuhiro Ohtaki. 2012. UC-Secure Searchable Symmetric
Encryption. In FC’12 (LNCS, Vol. 7397), Angelos D. Keromytis (Ed.). Springer,
285–298.
[31] Marie-Sarah Lacharité, Brice Minaud, and Kenneth G. Paterson. 2018. Improved
Reconstruction Attacks on Encrypted Data Using Range Query Leakage. In 2018
IEEE Symposium on Security and Privacy, S&P 2018, Proceedings. IEEE Computer
Society, 297–314.
[32] Shangqi Lai, Sikhar Patranabis, Amin Sakzad, Joseph K. Liu, Debdeep Mukhopad-
hyay, Ron Steinfeld, Shifeng Sun, Dongxi Liu, and Cong Zuo. 2018. Result Pattern
Hiding Searchable Encryption for Conjunctive Queries. In Proceedings of the 2018
ACM SIGSAC Conference on Computer and Communications Security, CCS 2018,
David Lie, Mohammad Mannan, Michael Backes, and XiaoFeng Wang (Eds.).
ACM, 745–762.
[33] Muhammad Naveed, Manoj Prabhakaran, and Carl A. Gunter. 2014. Dynamic
Searchable Encryption via Blind Storage. In IEEE S&P 2014. IEEE Computer
Society, 639–654.
[34] Jianting Ning, Geong Sen Poh, Xinyi Huang, Robert Deng, Shuwei Cao, and
Ee-Chien Chang. 2020. Update recovery attacks on encrypted database within
two updates using range queries leakage. IEEE Transactions on Dependable and
Secure Computing, DOI: 10.1109/TDSC.2020.3015997 (2020).
[35] Jianting Ning, Jia Xu, Kaitai Liang, Fan Zhang, and Ee-Chien Chang. 2019. Passive
Attacks Against Searchable Encryption. IEEE Transactions Trans. Information
Forensics and Security 14, 3 (2019), 789–802.
[36] Rishabh Poddar, Stephanie Wang, Jianan Lu, and Raluca Ada Popa. 2020. Practical
Volume-Based Attacks on Encrypted Databases. In IEEE European Symposium
on Security and Privacy, EuroS&P 2020, Genoa, Italy, September 7-11, 2020. IEEE,
354–369. https://doi.org/10.1109/EuroSP48549.2020.00030
[37] Raluca A. Popa, Catherine M. S. Redfield, Nickolai Zeldovich, and Hari Balakrish-
nan. 2011. CryptDB: protecting confidentiality with encrypted query processing.
In SOSP 2011, Ted Wobber and Peter Druschel (Eds.). ACM, 85–100.
211–218. https://doi.org/10.1108/00330330610681286
[38] Martin F. Porter. 2006. An algorithm for suffix stripping. Program 40, 3 (2006),
[39] David Pouliot and Charles V. Wright. 2016. The Shadow Nemesis: Inference At-
tacks on Efficiently Deployable, Efficiently Searchable Encryption. In Proceedings
of the 2016 ACM SIGSAC Conference on Computer and Communications Security,
Vienna, Austria, October 24-28, 2016. 1341–1352. https://doi.org/10.1145/2976749.
2978401
[40] Dawn Xiaodong Song, David Wagner, and Adrian Perrig. 2000. Practical Tech-
niques for Searches on Encrypted Data. In IEEE S&P ’00. IEEE Computer Society,
44.
[41] Emil Stefanov, Charalampos Papamanthou, and Elaine Shi. 2014. Practical Dy-
namic Searchable Encryption with Small Leakage. In NDSS 2014. The Internet
Society. http://www.internetsociety.org/events/ndss-symposium-2014
[42] Shinji Umeyama. 1988. An Eigendecomposition Approach to Weighted Graph
Matching Problems. IEEE Trans. Pattern Anal. Mach. Intell. 10, 5 (1988), 695–703.
https://doi.org/10.1109/34.6778
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2319[43] Mikhail Zaslavskiy, Francis R. Bach, and Jean-Philippe Vert. 2009. A Path Follow-
ing Algorithm for the Graph Matching Problem. IEEE Trans. Pattern Anal. Mach.
Intell. 31, 12 (2009), 2227–2242. https://doi.org/10.1109/TPAMI.2008.245
[44] Yupeng Zhang, Jonathan Katz, and Charalampos Papamanthou. 2016. All Your
Queries Are Belong to Us: The Power of File-Injection Attacks on Searchable
Encryption. In 25th USENIX Security Symposium, USENIX Security 16, Austin,
TX, USA, August 10-12, 2016. 707–720.
https://www.usenix.org/conference/
usenixsecurity16/technical-sessions/presentation/zhang
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2320