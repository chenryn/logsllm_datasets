T(t )
T(t ) = i
li
1- p
i
C(t )
C(t ) = i
li
1- p
i
(1- p )*R(t )
R(t ) = i i
li
1- p R(t )
i i
F(t ).a = f(p , F(t))
li r i i
214
Mathematical Modeling
Reduction of a Loop System
t
j
p
j
+ +p + + p
t o1 l1
i t
ij … … … …
p p
on ln
(a) (b)
T(t )+ T(t ) − (1- p )T(t )
i j j j
T(t ) =
ij
(1- p )
j
C(t )+ C(t ) − (1- p )C(t )
C(t ) = i j j j
ij
(1-p )
j
(1- p )*R(t )
R(t ) = j i
ij
1- p R(t )R(t )
j i j
F(t ).a = f(F(t), p, F(t))
ij r i j j
215
Mathematical Modeling
Reduction of a Fault-Tolerant System
t
1 p
p 1b
a1
K
p p p p
* a2 2b + a1n 1nb
t t t t t t
a 2 b a 1n b
p
p
an
nb
t
n
(a) (b)
T(t ) = Min({T(t ),...,T(t )})
1n 1 n
k
∑
C(t ) = C(t)
1n I
1≤i≤.n
1 1 n
R(t ) = ∑ …∑ f (∑i − k)*((1−i )+(2i −1)R(t ))*...*((1−i )+(2i −1)R(t ))
1n j 1 1 1 n n n
i =0 i =0 j=1
1 n
F(t ).a = f(p , F(t ), p , F(t ), …, p , F(t ), k)
1n r a1 1 a2 2 an n
216
Mathematical Modeling
Reduction of a Network System
n
s
t
j
t
i
(a) (b)
X(t ) = X(t ), X ∈ {T, C, R, F}
j i
217
Mathematical Modeling
The SWR Algorithm
The stochastic workflow reduction (SWR) method
consists of applying the previous set of reduction
rules to a process until only one atomic* task exists.
Each time a reduction rule is applied, the process
structure changes.
After several iterations only one task will remain.
When this state is reached, the remaining task
contains the QoS metrics corresponding to the
process under analysis.
218
*Kochut, Sheth et al. 1999
SWR Algorithm
Process w
N1
Sub-process w A B N2 C D
1
Sub- process w N3 E F N4
2
qos(x ,..,x )
1 n
Sub- process w G H I J k L Sub- process w
3 4
219
SWR Algorithm
Process w
N1
Sub-process w A B N2 C D
1
Sub-process w N3 E F N4
2
k L Sub-process w
4
220
SWR Algorithm
Process w
N1
Sub-process w A B N2 C D
1
Sub-process w N3 E F N4
2
221
SWR Algorithm
Process w
N1
Sub-process w A B N2 C D
1
222
SWR Algorithm
Process w
N1
223
Simulation Modeling
Introduction
While mathematical methods can be effectively
used, another alternative is to utilize simulation
analysis1.
Simulation can play an important role in tuning the
QoS metrics of processes by exploring “what-if”
questions.
In our project, these capabilities involve a loosely-
coupled integration between the METEOR WfMS
and the JSIM simulation system2.
1Miller, Cardoso et al. 2002, 2Nair, Miller et al. 1996; Miller, Nair et al. 1997; Miller, Seila et al. 2000. 224
Web Process Simulation
Tools
Simulation provides feedback on processes, allowing the
composer to modify his process design by
Replacing services which do not satisfy the expected runtime
behavior with more suitable Web services.
Modifying the process structure (control flow) based on the
simulation runs.
Execution
SCET Process
Composition WSFL
JSIM
Simulation Model JSIM Simulation
Generator
Model
Feedback from
Simulation
225
Senthilanand Chandrasekaran, M.Sc. Thesis presented at the Department of Computer Science of the
University of Georgia.
Web Process Simulation
SCET Tool
SCET (Service Composition and
Execution Tool) allows
to compose services statically by modeling the
process as a digraph in a graphical designer
stores the process description as WSFL based
specification
allows execution of the composed process using Perl
supports a simple execution monitoring feature
supports performance estimation using JSIM
simulation
226
Senthilanand Chandrasekaran, M.Sc. Thesis presented at the Department of Computer Science of the
University of Georgia.
Web Process Simulation
SCET Tool
227
SenthilanandChandrasekaran, M.Sc. Thesis presented at the Department of Computer Science of the University of Georgia.
QoS
Metrics of Interest
Workflow Response Time (T(w))
The workflow response time is the total amount of time
The workflow response time is the total amount of time
that a workflow instance spends within a workflow process
that a workflow instance spends within a workflow process
before it finishes.
before it finishes.
Workflow Delay Time (DT(w))
The workflow delay time, sometimes called “waiting
time,” is the total amount of time that a workflow
instance spends in a workflow, while not being
processed by a task.
228
QoS
Metrics of Interest
Minimum Workflow Response Time (min T(w))
The minimum workflow response time, sometimes called the
“service time” of a workflow, is the time required for a workflow
instance to be processed, not accounting for any task delay time.
Workflow Response Time Efficiency (E(w))
is the ratio of the minimum workflow response time and the
workflow response time.
It is instructive to compare these two measures, since instance
efficiency measurement provides an indication of the time an
instance is delayed during its execution and also indicates the
degree a workflow process can be improved by reducing its
response time.
229
QoS
Metrics of Interest
Workflow Cost (C(w))
Workflow reliability
corresponds to the likelihood
Workflow Reliability (R(w))
that a workflow will perform
for its users on demand.
Workflow cost analysis measures
the cost incurred during the
execution of a workflow.
Workflow Fidelity (F. (w))
attribute
Workflow fidelity is a function of
effective design; it refers to the intrinsic
properties or characteristics of a good
produced or a service rendered.
230
QoS Implementation
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
232
QoS Implementation
The QoS model developed was implemented
for the METEOR workflow management
system.
It was necessary to make changes to four
services:
Enactment,
✓
Manager,
✓ 
Builder, and
✓ 
Repository.
233
QoS Implementation
Architecture
Simulation System
✓
Task QOS Estimator
✓
QoS Model
uses
BB
Cost
Application
✓ AA NN11 EE NN22 FF Fidelity Dimensions
uses
Time System
BBuuiillddeerr Instance Level CC DD Reliability Dimensions
BBB
Control Flow Create and Manage
Data flow workflow instances
AAA NNN111 EEE NNN222 FFF Workflow schema ✓
QoS metrics DBLog
CCC DDD Monitor QoS
Schema Level Load
uses WWoorrkkffllooww
WfMS Enactment Workflow TTaasskkss
RReeppoossiittoorryy Manager Monitor
components Service Instance TTrraannssiittiioonnss uses
✓ ✓ ✓ QoS Data QQooSS IInnssttaanncceess
Workflow Level
CORBA server, communications,
OS, Hardware, etc.
Infrastructure Level
234
QoS Implementation
Monitor - DBLog
A DBlog has been developed to store the status and
QoS events generated in a relational database.
When a process is installed and executed, task QoS
estimates, runtime QoS metrics, and transition
frequencies are stored in the database.
The stored information will be later utilized to create
a QoS profile for the tasks and to enable the
computation of the workflow QoS.
235
QoS Implementation
Monitor - DBLog
236
QoS Implementation
Builder
The workflow builder tool is used to graphically
design and specify a workflow.
To support workflow QoS management the designer
must be able to set estimates for transition
probabilities and QoS estimates for tasks.
The workflow model and the task model have been
extended to support the specification of QoS
metrics.
237
QoS Implementation
Setting Task QoS
238
Builder
The initial QoS specifications may not be valid over
time. To overcome this difficulty we re-compute task
QoS values for the basic class, based on previous
executions.
The user sets the QoS functions used to
automatically re-compute QoS metrics for
workflows, instances, tasks, and transitions.
At any time, including design time and runtime, it is
possible to calculate QoS estimate.
Workflow QoS estimates are calculated using the
SWR algorithm.
239
QoS Implementation
QoS Analysis
240
Experiments
Results
Time Analysis Cost Analysis
650.0 $2,500
)sruoh(
550.0
$2,000
tsoC
450.0
$1,500
emiT
350.0
250.0 $1,000
1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10
Instance # Instance #
Fidelity Analysis Reliability Analysis
0.65 100.0%
0.60 99.8% ytilibaileR
ytilediF
0.55 99.6%
0.50 99.4%
0.45 99.2%
1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10
Instance # Instance #
241
QoS
Questions?
242
References
Berners-Lee, T. (2001). Keynote presentation on web services and the future of the web. Software Development Expo
2001 Visionary Keynote, http://www.technetcast.com/tnc_play_stream.html?stream_id=616.
Bussler, C. (1998). Workflow Instance Scheduling with Project Management Tools. 9th Workshop on Database and
Expert Systems Applications DEXA'98, Vienna, Austria, IEEE Computer Society Press. pp. 753-758.
Cardoso, J., J. Miller, A. Sheth and J. Arnold (2002). "Modeling Quality of Service for Workflows and Web Service
Processes." the Very Large Data Bases Journal submitted in May 2002.
Eder, J., E. Panagos, H. Pozewaunig and M. Rabinovich (1999). Time Management in Workflow Systems. BIS'99 3rd
International Conference on Business Information Systems, Poznan, Poland, Springer Verlag. pp. 265-280.
Fabio Casati, Ming-Chien Shan and D. Georgakopoulos (2001). "E-Services - Guest editorial." The VLDB Journal
10(1): 1.
Frlund, S. and J. Koistinen (1998). "Quality-of-Service Specification in Distributed Object Systems." Distributed
Systems Engineering Journal 5(4).
Goel, A. L. (1985). "Software reliability models: assumptions, limitations, and applicability." IEEE Transactions on
Software Engineering 11(12): 1411-1423.
Ireson, W. G., C. F. C. Jr. and R. Y. Moss (1996). Handbook of reliability engineering and management. New York,
McGraw Hill.
Kamath, M., G. Alonso, R. Guenthor and C. Mohan (1996). Providing High Availability in Very Large Workflow
Management Systems. Proceedings of the 5th International Conference on Extending Database Technology,
Avignon. pp. 427-442.
Kochut, K. J., A. P. Sheth and J. A. Miller (1999). "ORBWork: A CORBA-Based Fully Distributed, Scalable and
Dynamic Workflow Enactment Service for METEOR," Large Scale Distributed Information Systems Lab,
Department of Computer Science, University of Georgia, Athens, GA.
Marjanovic, O. and M. Orlowska (1999). "On modeling and verification of temporal constraints in production workflows."
Knowledge and Information Systems 1(2): 157-192.
243
References
McCready, S. (1992). There is more than one kind of workflow software. Computerworld. November 2: 86-90.
Miller, J. A., J. S. Cardoso and G. Silver (2002). Using Simulation to Facilitate Effective Workflow Adaptation.
Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego, California. pp. 177-181.
Miller, J. A., R. Nair, Z. Zhang and H. Zhao (1997). JSIM: A Java-Based Simulation and Animation Environment.
Proceedings of the 30th Annual Simulation Symposium, Atlanta, GA. pp. 786-793.
Miller, J. A., D. Palaniswami, A. P. Sheth, K. J. Kochut and H. Singh (1998). "WebWork: METEOR2's Web-based
Workflow Management System." Journal of Intelligence Information Management Systems: Integrating Artificial
Intelligence and Database Technologies (JIIS) 10(2): 185-215.
Miller, J. A., A. F. Seila and X. Xiang (2000). "The JSIM Web-Based Simulation Environment." Future Generation
Computer Systems: Special Issue on Web-Based Modeling and Simulation 17(2): 119-133.
Nelson, E. C. (1973). "A Statistical Basis for Software Reliability," TRW Software Series March.
Saavendra, R. H. and A. J. Smith (1996). "Analysis of Benchmark Characteristics and Benchmark Performance
Prediction." ACM Transactions on Computer Systems 14(4): 344-384.
Sadiq, S., O. Marjanovic and M. E. Orlowska (2000). "Managing Change and Time in Dynamic Workflow Processes."
The International Journal of Cooperative Information Systems 9(1, 2): 93-116.
Wheater, S. M. and S. K. Shrivastava (2000). "Reliability Mechanisms in the OPENflow Distributed Workflow System,"
Department of Computing Science, University of Newcastle upon Tyne Technical Report 31, Esprit LTR Project
No. 24962 - C3DS First year Report, pp. 269-288.
Zinky, J., D. Bakken and R. Schantz (1997). "Architectural Support for Quality of Service for CORBA Objects." Theory
and Practice of Object Systems 3(1): 1-20.
More at: Workflow and Semantic Web Processes: http://lsdis.cs.uga.edu/proj/meteor/SWP.htm
244
Conclusions
Jorge Cardoso1, Christoph Bussler2, Amit Sheth1, 4 , Dieter Fensel3,
1LSDIS Lab, Computer Science, University of Georgia
2Oracle Corporation
3 Universität Innsbruck
4 Semagix, Inc
Conclusions
Putting Everything Together
Semantic
Discovery
Semantic
Design
Process QoS
QoS Metrics
Analysis
Enactment
Process
Process
Adaptation
Adaptation
246
Web Service
Discovery and Integration
A multidimensional approach to Web service
discovery is more suitable for current requirements.
Syntactic, operational, and semantic dimensions
needs to be considered.
The discovery has also to account for the posteriori
integration of the services found.
An Ontology-based approaches have proved to be
an important solution to the discovery and
integration of Web services.
247
Web Service
Discovery and Integration
In the area of process composition, our research
has resulted in the following advances:
Development of a methodology for semantic process
composition.
Development of an algorithm to compute the syntactic,
operational, and semantic similarity of Web services and to assist
designers in resolving interoperability issues among Web
services.
Development of a prototype incorporating the above concepts.
248
Web Service
QoS
Our efforts on workflow QoS management have
resulted in the following advances:
Development of a comprehensive and predictive QoS model for
Web processes and workflows.
Development of a QoS mathematical model.
Development of an algorithm (the SWR algorithm) to
automatically compute and estimate Web processes and
workflow QoS.
Implementation of the above elements in the METEOR workflow
system.
249
Web Service
QoS
The composition of Web-services cannot be
undertaken while ignoring the importance of QoS
measurements.
The use of a QoS model allows for the description of
process components from a QoS perspective.
Based on the QoS of tasks the QoS of processes
can be automatically computed.
Mathematical models and simulation models are
suitable to compute QoS metrics.
250
Semantic Web Service
Research Topics
Environment Scalable, openness, autonomy,
heterogeneity, evolving
Representation Self-description, conversation,
contracts, commitments, QoS
Programming Compose & customize, workflow,
negotiation
Interaction (system) Trust, security, compliance
Architecture P2P, privacy,
Utilities Discovery, binding, trust-service
Amicalola Workshop Report 251
Semantic Web Service
Research Topics
Data => services, similar yet more challenging:
Modeling 
Organizing collections
Discovery and comparison (reputation)
Distribution and replication
Access and fuse (composition)
Fulfillment
Contracts, coordination/negotiation versus transactions
Roll back, Roll forward, Exception handling, recovery
Quality: more general than correctness or precision
Compliance
Dynamic, flexible security and trust; privacy
252
Web Service WG, Amicalola Workshop
Web Resource
for this tutorial
(incl. latest version)
http://lsdis.cs.uga.edu/lib/presentations/
SWSP-tutorial-resource.htm
Contact: Amit Sheth