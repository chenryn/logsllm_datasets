User: 请解答这个和日志有关的问题Nginx error when serving 2 projects with the same IP and port First of all, I apologize if any words are not understood correctly, since my English is not very good.

I am trying to serve two projects, which I have housed in the same machine, in different locations. I want to call these two projects using a single ip and port, but different directories:


Test.example.com/advanceerp 
Test.example.com/phpmyadmin


The setup should be very easy. I get nginx show me the project1 without problems, but when trying to serve the project2 indicates a 404 error. If I check the log, I see that when it tries to serve this project, it is looking at the root of the project called advance ... I have configured two Virtual host on my sites-enabled as follows:

server {

    listen 80;
    listen [::]:80;

    root /var/www/;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm index.nginx-debian.html;

    server_name test.example.com;

    location /advanceerp {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.1-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}

server {

    listen 80;
    listen [::]:80;

    root /usr/share/phpmyadmin;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm index.nginx-debian.html;

    server_name test.example.com;

    location /phpmyadmin {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri =404;
    }

    location ~ \.php$ {

        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}


I have a short time using nginx, so I understand that it must be a beginner error, please do not keep me in mind;) What would be the easiest way to do this? A cordial greeting and thanks in advance.



Yes, I just simplified the configuration of sites-enabled. Leaving a single file and inside the configuring several locations that point to different projects ... This also does not work for me, it indicates a 404 error.

Server {

    Listen 80;
    Listen [::]: 80 ipv6only = on;

    Index.php index.html index.htm index.nginx-debian.html;

    Root / var / www / html;
    Server_name test.fasttracknet.es;

    Location / {
        Try_files $ uri = 404;
    }

    Location / advanceerp {
        root /var/www;
        Try_files $ uri $ uri / = 404;
    }

    Location /phpmyadmin {
        root /usr/share/phpmyadmin;
        Try_files $ uri $ uri / = 404;
    }

    Location ~ \ .php $ {
        Include snippets / fastcgi-php.conf;
        Fastcgi_pass unix: /run/php/php7.0-fpm.sock;
    }

    Location ~ /\.ht {
        Deny all;
    }
}

Assistant: Your configuration for test.example.com works so that http://test.example.com/phpmyadmin points to /usr/share/phpmyadmin/phpmyadmin.

It works this way because you have specified root as /usr/share/phpmyadmin and location as /phpmyadmin. nginx appends the value of location to value of root to determine the location of the file.

In your case, I would use the following configuration for test.example.com:

server {
    listen 80;
    listen [::]:80;

    root /path/to/empty/dir;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm index.nginx-debian.html;

    server_name test.example.com;

    location /phpmyadmin {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        alias /usr/share/phpmyadmin;
        try_files $uri =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}


Here we use the alias directive to specify the exact filesystem path for the location /phpmyadmin.

The /path/to/empty/dir is the directory you want to show when http://test.example.com is accessed.