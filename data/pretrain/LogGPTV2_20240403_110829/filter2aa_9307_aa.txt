# At 0x439
CONST = [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, ]
def fn4(round_no, state, key): # Self reversible
    for i in range(16):
        state[i] ^= key[i] ^ CONST[i + round_no * 16]
def fn3(state): # Self reversible
    for i in range(0, 16, 4):
        x0 = state[0 + i]
        x1 = state[1 + i]
        x2 = state[2 + i]
        x3 = state[3 + i]
        state[0 + i] =      x1 ^ x2 ^ x3
        state[1 + i] = x0 ^      x2 ^ x3
        state[2 + i] = x0 ^ x1 ^      x3
        state[3 + i] = x0 ^ x1 ^ x2
def fn2(state):
    new = [0] * 16
    for i, j in enumerate([0, 0xa, 5, 0xf, 0xe, 4, 0xb, 1, 9, 3, 0xc, 6, 7, 0xd, 2, 8]):
        new[i] = state[j]
    for i in range(16):
        state[i] = new[i]
def un2(state):
    new = [0] * 16
    for j, i in enumerate([0, 0xa, 5, 0xf, 0xe, 4, 0xb, 1, 9, 3, 0xc, 6, 7, 0xd, 2, 8]):
        new[i] = state[j]
    for i in range(16):
        state[i] = new[i]
import subprocess
def fun(round, v24):
    p = subprocess.Popen(["simavr/simavr/run_avr",
        "/home/adam/VirtualBoxVMs/SharedFolder/MatrixLED.ino.elf",
        "-m", "atmega32u4"], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
    p.stdin.write("%d %d\n" % (v24, round))
    p.wait()
    for line in p.stdout.readlines():