.b #include 
.pp
.bi "noreturn void _exit(int " status );
.pp
.b #include 
.pp
.bi "noreturn void _exit(int " status );
.fi
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br _exit ():
.nf
    _isoc99_source || _posix_c_source >= 200112l
.fi
.sh description
.br _exit ()
terminates the calling process "immediately".
any open file descriptors belonging to the process are closed.
any children of the process are inherited by
.br init (1)
(or by the nearest "subreaper" process as defined through the use of the
.br prctl (2)
.b pr_set_child_subreaper
operation).
the process's parent is sent a
.b sigchld
signal.
.pp
the value
.i "status & 0xff"
is returned to the parent process as the process's exit status, and
can be collected by the parent using one of the
.br wait (2)
family of calls.
.pp
the function
.br _exit ()
is equivalent to
.br _exit ().
.sh return value
these functions do not return.
.sh conforming to
posix.1-2001, posix.1-2008, svr4, 4.3bsd.
the function
.br _exit ()
was introduced by c99.
.sh notes
for a discussion on the effects of an exit, the transmission of
exit status, zombie processes, signals sent, and so on, see
.br exit (3).
.pp
the function
.br _exit ()
is like
.br exit (3),
but does not call any
functions registered with
.br atexit (3)
or
.br on_exit (3).
open
.br stdio (3)
streams are not flushed.
on the other hand,
.br _exit ()
does close open file descriptors, and this may cause an unknown delay,
waiting for pending output to finish.
if the delay is undesired,
it may be useful to call functions like
.br tcflush (3)
before calling
.br _exit ().
whether any pending i/o is canceled, and which pending i/o may be
canceled upon
.br _exit (),
is implementation-dependent.
.ss c library/kernel differences
in glibc up to version 2.3, the
.br _exit ()
wrapper function invoked the kernel system call of the same name.
since glibc 2.3, the wrapper function invokes
.br exit_group (2),
in order to terminate all of the threads in a process.
.pp
the raw
.br _exit ()
system call terminates only the calling thread, and actions such as
reparenting child processes or sending
.b sigchld
to the parent process are performed only if this is
the last thread in the thread group.
.\" _exit() is used by pthread_exit() to terminate the calling thread
.sh see also
.br execve (2),
.br exit_group (2),
.br fork (2),
.br kill (2),
.br wait (2),
.br wait4 (2),
.br waitpid (2),
.br atexit (3),
.br exit (3),
.br on_exit (3),
.br termios (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/div.3
.so man3/rpc.3
.\" copyright (c) 1995, thomas k. dyas 
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" created  1995-08-09 thomas k. dyas 
.\" modified 1997-01-31 by eric s. raymond 
.\" modified 2001-03-22 by aeb
.\" modified 2003-08-04 by aeb
.\"
.th ustat 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
ustat \- get filesystem statistics
.sh synopsis
.nf
.b #include 
.br "#include " "    /* libc[45] */"
.br "#include " "     /* glibc2 */"
.pp
.bi "int ustat(dev_t " dev ", struct ustat *" ubuf );
.fi
.sh description
.br ustat ()
returns information about a mounted filesystem.
.i dev
is a device number identifying a device containing
a mounted filesystem.
.i ubuf
is a pointer to a
.i ustat
structure that contains the following
members:
.pp
.in +4n
.ex
daddr_t f_tfree;      /* total free blocks */
ino_t   f_tinode;     /* number of free inodes */
char    f_fname[6];   /* filsys name */
char    f_fpack[6];   /* filsys pack name */
.ee
.in
.pp
the last two fields,
.i f_fname
and
.ir f_fpack ,
are not implemented and will
always be filled with null bytes (\(aq\e0\(aq).
.sh return value
on success, zero is returned and the
.i ustat
structure pointed to by
.i ubuf
will be filled in.
on error, \-1 is returned, and
.i errno
is set to indicate the error.
.sh errors
.tp
.b efault
.i ubuf
points outside of your accessible address space.
.tp
.b einval
.i dev
does not refer to a device containing a mounted filesystem.
.tp
.b enosys
the mounted filesystem referenced by
.i dev
does not support this operation, or any version of linux before
1.3.16.
.sh versions
since version 2.28, glibc no longer provides a wrapper for this system call.
.sh conforming to
svr4.
.\" svr4 documents additional error conditions enolink, ecomm, and eintr
.\" but has no enosys condition.
.sh notes
.br ustat ()
is deprecated and has been provided only for compatibility.
all new programs should use
.br statfs (2)
instead.
.ss hp-ux notes
the hp-ux version of the
.i ustat
structure has an additional field,
.ir f_blksize ,
that is unknown elsewhere.
hp-ux warns:
for some filesystems, the number of free inodes does not change.
such filesystems will return \-1 in the field
.ir f_tinode .
.\" some software tries to use this in order to test whether the
.\" underlying filesystem is nfs.
for some filesystems, inodes are dynamically allocated.
such filesystems will return the current number of free inodes.
.sh see also
.br stat (2),
.br statfs (2)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright 2009   lefteris dimitroulakis (PI:EMAIL)
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.th iso_8859-5 7 2020-08-13 "linux" "linux programmer's manual"
.sh name
iso_8859-5 \- iso 8859-5 character set encoded in octal, decimal,
and hexadecimal
.sh description
the iso 8859 standard includes several 8-bit extensions to the ascii
character set (also known as iso 646-irv).
iso 8859-5 encodes the
cyrillic characters used in many east european languages.
.ss iso 8859 alphabets
the full set of iso 8859 alphabets includes:
.ts
l l.
iso 8859-1	west european languages (latin-1)
iso 8859-2	central and east european languages (latin-2)
iso 8859-3	southeast european and miscellaneous languages (latin-3)
iso 8859-4	scandinavian/baltic languages (latin-4)
iso 8859-5	latin/cyrillic
iso 8859-6	latin/arabic
iso 8859-7	latin/greek
iso 8859-8	latin/hebrew
iso 8859-9	latin-1 modification for turkish (latin-5)
iso 8859-10	lappish/nordic/eskimo languages (latin-6)
iso 8859-11	latin/thai
iso 8859-13	baltic rim languages (latin-7)
iso 8859-14	celtic (latin-8)
iso 8859-15	west european languages (latin-9)
iso 8859-16	romanian (latin-10)
.te
.ss iso 8859-5 characters
the following table displays the characters in iso 8859-5 that
are printable and unlisted in the
.br ascii (7)
manual page.
.ts
l l l c lp-1.
oct	dec	hex	char	description
_
240	160	a0	 	no-break space
241	161	a1	ё	cyrillic capital letter io
242	162	a2	ђ	cyrillic capital letter dje
243	163	a3	ѓ	cyrillic capital letter gje
244	164	a4	є	cyrillic capital letter ukrainian ie
245	165	a5	ѕ	cyrillic capital letter dze
246	166	a6	і	t{
cyrillic capital letter
.br
byelorussian-ukrainian i
t}
247	167	a7	ї	cyrillic capital letter yi
250	168	a8	ј	cyrillic capital letter je
251	169	a9	љ	cyrillic capital letter lje
252	170	aa	њ	cyrillic capital letter nje
253	171	ab	ћ	cyrillic capital letter tshe
254	172	ac	ќ	cyrillic capital letter kje
255	173	ad	­	soft hyphen
256	174	ae	ў	cyrillic capital letter short u
257	175	af	џ	cyrillic capital letter dzhe
260	176	b0	а	cyrillic capital letter a
261	177	b1	б	cyrillic capital letter be
262	178	b2	в	cyrillic capital letter ve
263	179	b3	г	cyrillic capital letter ghe
264	180	b4	д	cyrillic capital letter de
265	181	b5	е	cyrillic capital letter ie
266	182	b6	ж	cyrillic capital letter zhe
267	183	b7	з	cyrillic capital letter ze
270	184	b8	и	cyrillic capital letter i
271	185	b9	й	cyrillic capital letter short i
272	186	ba	к	cyrillic capital letter ka
273	187	bb	л	cyrillic capital letter el
274	188	bc	м	cyrillic capital letter em
275	189	bd	н	cyrillic capital letter en
276	190	be	о	cyrillic capital letter o
277	191	bf	п	cyrillic capital letter pe
300	192	c0	р	cyrillic capital letter er
301	193	c1	с	cyrillic capital letter es
302	194	c2	т	cyrillic capital letter te
303	195	c3	у	cyrillic capital letter u
304	196	c4	ф	cyrillic capital letter ef
305	197	c5	х	cyrillic capital letter ha
306	198	c6	ц	cyrillic capital letter tse
307	199	c7	ч	cyrillic capital letter che
310	200	c8	ш	cyrillic capital letter sha
311	201	c9	щ	cyrillic capital letter shcha
312	202	ca	ъ	cyrillic capital letter hard sign
313	203	cb	ы	cyrillic capital letter yeru
314	204	cc	ь	cyrillic capital letter soft sign
315	205	cd	э	cyrillic capital letter e
316	206	ce	ю	cyrillic capital letter yu
317	207	cf	я	cyrillic capital letter ya
320	208	d0	а	cyrillic small letter a
321	209	d1	б	cyrillic small letter be
322	210	d2	в	cyrillic small letter ve
323	211	d3	г	cyrillic small letter ghe
324	212	d4	д	cyrillic small letter de
325	213	d5	е	cyrillic small letter ie
326	214	d6	ж	cyrillic small letter zhe
327	215	d7	з	cyrillic small letter ze
330	216	d8	и	cyrillic small letter i
331	217	d9	й	cyrillic small letter short i
332	218	da	к	cyrillic small letter ka
333	219	db	л	cyrillic small letter el
334	220	dc	м	cyrillic small letter em
335	221	dd	н	cyrillic small letter en
336	222	de	о	cyrillic small letter o
337	223	df	п	cyrillic small letter pe
340	224	e0	р	cyrillic small letter er
341	225	e1	с	cyrillic small letter es
342	226	e2	т	cyrillic small letter te
343	227	e3	у	cyrillic small letter u
344	228	e4	ф	cyrillic small letter ef
345	229	e5	х	cyrillic small letter ha
346	230	e6	ц	cyrillic small letter tse
347	231	e7	ч	cyrillic small letter che
350	232	e8	ш	cyrillic small letter sha
351	233	e9	щ	cyrillic small letter shcha
352	234	ea	ъ	cyrillic small letter hard sign
353	235	eb	ы	cyrillic small letter yeru
354	236	ec	ь	cyrillic small letter soft sign
355	237	ed	э	cyrillic small letter e
356	238	ee	ю	cyrillic small letter yu
357	239	ef	я	cyrillic small letter ya
360	240	f0	№	numero sign
361	241	f1	ё	cyrillic small letter io
362	242	f2	ђ	cyrillic small letter dje
363	243	f3	ѓ	cyrillic small letter gje
364	244	f4	є	cyrillic small letter ukrainian ie
365	245	f5	ѕ	cyrillic small letter dze
366	246	f6	і	cyrillic small letter byelorussian-ukrainian i
367	247	f7	ї	cyrillic small letter yi
370	248	f8	ј	cyrillic small letter je
371	249	f9	љ	cyrillic small letter lje
372	250	fa	њ	cyrillic small letter nje
373	251	fb	ј	cyrillic small letter tshe
374	252	fc	ќ	cyrillic small letter kje
375	253	fd	§	section sign
376	254	fe	ў	cyrillic small letter short u
377	255	ff	џ	cyrillic small letter dzhe
.te
.sh see also
.br ascii (7),
.br charsets (7),
.br cp1251 (7),
.br koi8\-r (7),
.br koi8\-u (7),
.br utf\-8 (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/atan.3
.\" copyright (c) 1993 michael haardt (PI:EMAIL),
.\"     fri apr  2 11:32:09 met dst 1993
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.\" modified sun jul 25 11:06:34 1993 by rik faith (PI:EMAIL)
.\" corrected mon oct 21 17:47:19 edt 1996 by eric s. raymond (PI:EMAIL)
.th nologin 5 2017-09-15 "linux" "linux programmer's manual"
.sh name
nologin \- prevent unprivileged users from logging into the system
.sh description
if the file \fi/etc/nologin\fp exists and is readable,
.br login (1)
will allow access only to root.
other users will
be shown the contents of this file and their logins will be refused.
this provides a simple way of temporarily disabling all unprivileged logins.
.sh files
.i /etc/nologin
.sh see also
.br login (1),
.br shutdown (8)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/erfc.3
\" copyright (c) 2013, heinrich schuchardt 
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of
.\" a permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume.
.\" no responsibility for errors or omissions, or for damages resulting.
.\" from the use of the information contained herein.  the author(s) may.
.\" not have taken the same level of care in the production of this.
.\" manual, which is licensed free of charge, as they might when working.
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.th fanotify_init 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
fanotify_init \- create and initialize fanotify group
.sh synopsis
.nf
.br "#include " "            /* definition of " o_* " constants */"
.b #include 
.pp
.bi "int fanotify_init(unsigned int " flags ", unsigned int " event_f_flags );
.fi
.sh description
for an overview of the fanotify api, see
.br fanotify (7).
.pp
.br fanotify_init ()
initializes a new fanotify group and returns a file descriptor for the event
queue associated with the group.
.pp
the file descriptor is used in calls to
.br fanotify_mark (2)
to specify the files, directories, mounts, or filesystems for which fanotify
events shall be created.
these events are received by reading from the file descriptor.
some events are only informative, indicating that a file has been accessed.
other events can be used to determine whether
another application is permitted to access a file or directory.
permission to access filesystem objects is granted by writing to the file
descriptor.
.pp
multiple programs may be using the fanotify interface at the same time to
monitor the same files.
.pp
in the current implementation, the number of fanotify groups per user is
limited to 128.
this limit cannot be overridden.
.pp
calling
.br fanotify_init ()
requires the
.b cap_sys_admin
capability.
this constraint might be relaxed in future versions of the api.
therefore, certain additional capability checks have been implemented as
indicated below.
.pp
the