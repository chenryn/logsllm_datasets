人工渗
透测试
Git/SVN
CodeCC代码
检查
服务端/web前端
/移动端Build
测试环境
定时/手动/
事件/远程
docker 
hub
开发人员
DevSecOps 实践成熟度 2
                                        51
下图是建设后的流程，由于之前的研发和测试人员已经接触过 SAST 工具，并且企业内部也进行过安全编码培
训，相关人员对代码安全和应用安全已经有了相当程度的理解和认知。因此建设的实施就比较高效，建设后的
成果也比较全面。该机构将 IAST、DAST、OSS 开源安全测试、应用包检测、容器镜像检测等安全能力以插件
的形式集成在了客户原有的 DevOps 流程管理平台之上。并且通过 API，将安全测试结果向原有的漏洞跟踪管
理平台进行汇总管理。开发安全体系里面覆盖了静态和动态、自有和外源、编译前和编译后等各种不同管理面
向，漏洞的检出率有了跨越式的提高。在执行效率上，因为统一管理和交叉分析的原因，虽然增加了检测时
间，但减少了人工排查的时间，因此总流转时间上并没有比原来单纯使用 SAST 的时候消耗更多，是较为成功
的 DevSecOps 建设案例。
DevSecOps流水线
白盒
扫描
开发人员
漏洞管理平台
容器镜像
扫描
OSS开源
组件
应用包
检测
自动化
渗透测试
Git/SVN
CodeCC代码
检查
服务端/web前端
/移动端Build
测试环境
定时/手动/
事件/远程
docker 
hub
                                        52
1.3.3 互联网行业 DevSecOps 落地现状
面临的风险与挑战：互联网信息的风险和安全问题，主要来自互联网黑客频繁侵袭、系统漏洞、病毒木马攻击、
用户信息泄露、用户安全意识薄弱、不良虚假信息的传播等方面。具体有以下 7 种风险：
·DDoS 攻击
·互联网业务支撑系统自身安全漏洞
·病毒木马
·信息泄露
·网络钓鱼
·移动威胁
·内控风险
以在线网站为例，对于一个活跃度高的网站来说，日活跃量会达到千万级别，产品形态也会覆盖 Web APP、
Android APP、 iOS APP、SDK、IoT 等，每周都会有数以万计的应用发布次数，在以上安全威胁背景下，如何
保证每一次发布代码的安全性成为了 DevSecOps 实践中最大的挑战。
在软件行业，一个版本的发布从涉及到开发、测试、发布动辄数月，每个版本的发布都可以按照 SDL 流程完
整地做一次安全评估，包括需求评审、威胁建模、安全开发、安全扫描。而在 CI ／ CD 模型下，每天都有几千
次的发布，持续集成、持续部署，如何避免持续引入漏洞，仅仅靠人力是无法解决的。
另一个很重要的问题是如何培养安全意识——避免两次踩进同一个坑。日常工作中会遇到这样的问题：昨天刚
找开发修了一个 SQL 注入，今天又写了另一处有注入的接口；昨天刚补了一处撞库接口，今天又来了一个验
证码绕过。安全人员沦为救火队长，疲于奔命。其实本质还是需要提高业务团队的整体安全意识，避免安全变
成被动的修补角色。
第三个问题是安全项目的推动难，对于安全工程师来说最差的体验是，“在甲方提工单和在乙方贴发票”。为
什么推动这么困难，原因在于对业务团队来说这似乎是增加了额外的工作量，仅仅是修复一个漏洞就需要开发、
测试甚至产品一起沟通拉齐，确定修复方案、排期，更不要说大规模的推动底层的框架、中间件的升级，一轮
一轮的推动更是难上加难。而解决这些需要与公司框架、与 CI ／ CD 流程更紧密的结合，提供温和嵌入流程的
默认安全方案。
DevSecOps 实践成熟度 2
                                        53
该机构于 2020 年的安全建设结束后，安全培训、SAST、DAST、组件检测等安全工作已经融合进了 DevOps
的体系中，安全工作的自动化程度较高，该机构的 DevSecOps 体系已经初见成效。
在 2019 年从人工安全评估向自动化安全评估转化的基础上，2020 年该机构更是深化完善去人工化的安全体系。
其 2020 年建设内容中，自动化安全工具、自主安全培训、安全 SDK、数据分析展示是最重要的四个方面，以
求解决之前存在的逻辑漏洞多、研发安全意识薄弱、工具成熟度等问题。
互联网行业落地实践：某大型互联网企业的主要业务依赖于自研的在线应用程序，因此该机构非常重视应用的
安全保障工作。近年来，该机构每年都在应用安全的保障工作上进行相当多资源的投入。并通过企业相关部门
的统一规划，分步骤、分阶段地进行系统的安全体系建设。如图所示：
                                        54
2020 年该机构的安全建设结束后，安全培训、SAST、DAST、组件检测等安全工作已经融合进了 DevOps 的体
系中，安全工作的自动化程度较高，该机构的 DevSecOps 体系已经初见成效。
                                        55
1.4 非安全工具的 DevSecOps 融合现状
1.4.1 DevOps 管理平台                                
在 2020 年，我们看到了 DevOps 管理平台向 DevSecOps 管理平台转化上的长足进步。在过去几年间，国内
不同的 DevOps 管理平台已在开发和运维流程的管理能力上逐渐地完善，并趋于同质化。2020 年，安全管理
成为领先的 DevOps 平台厂商着手解决的问题，如腾讯蓝鲸、Coding、阿里云效、博云、平安神兵等 DevOps
管理平台都完成了向 DevSecOps 的初步探索。常规的做法是，第三方 DevSecOps 安全工具以插件或独立模块
的方式集成在 DevOps 管理平台中，DevOps 管理平台在自身的流水线中调用这些安全工具，并将安全结果与
质量红线进行关联，作为版本质量的参考依据。
目前 DevSecOps 探索尚处于起步阶段，无论是安全能力的丰富程度，还是安全与整体流程的融合程度都有待
进一步地完善，但今年 DevOps 管理平台对 DevSecOps 探索的显著进步，使我们非常期待其在 2021 年的表现。
本章节旨在叙述与 DevSecOps 流程结合较为紧密的非安全类工具的实践现状。在 DevOps 流程中的工具非常
繁杂，且许多工具都与安全风险管控过程相关，鉴于篇幅有限，本节仅选取比较有代表性的三类工具进行阐述。
DevSecOps 实践融合度 3
DevOps 平台的安全流水线
                                        56
Gitlab CI、Bamboo、Travis CI 等工具由于用户的基数有限，DevSecOps 安全产品还较少对其流水线进行支持，
相信随着 DevSecOps 的发展，以上工具也会更多地被纳入安全产品支持的范围中来。
Jenkin 中自动化安全任务的执行结果
1.4.2 持续集成工具
当前，持续集成（CI）工具对 DevSecOps 而言，是自动化和敏捷化的核心支撑工具。因此持续集成工具对安
全自动化的支持成熟度在很大程度上决定了 DevSecOps 实践成熟度。今年，Jenkins 依旧是用户最认可的 CI
工具，达到了 53% 的市占率，因此对 Jenkins 的支持已经成为了 DevSecOps 安全产品的基础能力。假如一款
安全产品没有与 Jenkins 流水线进行集成编排的能力，我们很难说这是一款真正的 DevSecOps 安全产品。
DevSecOps 实践融合度 3
                                        57
1.4.3 需求和项目管理平台
需求和项目管理平台作为软件项目开发不可或缺的支撑工具，从单纯对需求与缺陷的管理，发展到与安全流程
的结合，这似乎是个必然的趋势。这种对安全的管理方式更多地偏向流程保障，而欠缺敏捷性，因此严格来说，
这更像是 S-SDLC，而不是 DevSecOps。出于以下两点原因，这里还是把需求和项目管理平台纳入进来叙述。一、
越来越多用户希望将 DevSecOps 安全支撑工具的输出结果同步到需求和项目管理平台上，以方便在项目的维
度上进行整体管控。二、需求和项目管理平台的自动化能力正在不断成长，以求更加适应敏捷模式。
根据云计算开源产业联盟今年发布的《中国 DevOps 现状调查报告》，在需求和项目管理平台方面，Jira 以
44% 的使用率依旧占据统治地位，因此 Jira 平台是本年度观察的重点。我们看到头部的安全工具已经能够与
Jira 平台融合，帮助用户使用 Jira 的项目管理流程，完成安全的流程化管理。
DevSecOps 实践融合度 2
除Jira之外，禅道、Ones Project、Redmine、Trello等工具在需求与项目管理平台领域中也有一定的市场占有率。
但出于用户需求、平台开放性以及安全厂商支撑意愿等因素，这些平台在安全能力的结合方面尚在起步阶段，
成熟的案例比较有限。
在 JIRA 中引入安全漏洞管理
                                        58
2
DevSecOps年度热点
                                        59
2.1 2020 年度热点技术
2.1.1 交互式应用程序安全测试（IAST）
IAST 交互式应用安全测试是 2012 年 Gartner 公司提出的一种新的应用程序安全测试方案，通过代理、VPN 或
者在服务端部署 Agent 程序，收集、监控 Web 应用程序运行时函数执行、数据传输，并与扫描器端进行实时交互，
高效、准确地识别安全缺陷及漏洞，同时可准确确定漏洞所在的代码文件、行数、函数及参数。某种程度上，
IAST 是综合 DAST 和 SAST 技术优势的一种运行时灰盒安全测试技术。DAST 动态应用程序安全测试技术是在
测试或运行阶段分析应用程序的动态运行状态。它模拟黑客行为对应用程序进行动态攻击，分析应用程序的反
应，从而确定该 Web 应用是否易受攻击。SAST 静态应用程序安全测试技术通常在编码阶段分析应用程序的源
代码或二进制文件的语法、结构、过程、接口等来发现程序代码存在的安全漏洞。
IAST 交互式应用安全测试技术作为最近几年比较火热的应用安全测试新技术，曾被 Gartner 咨询公司列为网络
安全领域的 Top 10 技术之一。IAST 拥有极高的漏洞检出率和极低的漏洞误报率，同时可以定位到 API 接口和
代码片段。 
技术原理：IAST 灰盒安全测试技术的引入主要为了解决政企用户不同开发测试场景下的精准应用安全测试问
题。一套完善的 IAST 解决方案需要同时支持以下几种主流模式：运行时插桩模式、流量代理 /VPN 模式、流量
镜像模式等，其中最具代表性的两种模式为运行时插桩模式和流量代理模式。 
插桩模式：插桩模式是在保证目标程序原有逻辑完整的情况下，在特定的位置插入探针，在应用程序运行时，
通过探针获取请求、代码数据流、代码控制流等，基于请求、代码、数据流、控制流综合分析判断漏洞。
流量代理模式：在 PC 端浏览器或者移动 APP 设置代理，通过代理拿到功能测试的流量，利用功能测试流量模
拟多种漏洞检测方式对被测服务器进行安全测试。
运行时插桩技术原理 ：运行时插桩模式需要在被测试应用程序中部署插桩 Agent，使用时需要外部扫描器去触
发这个 Agent。一个组件产生恶意攻击流量，另一个组件在被测应用程序中监测应用程序的反应，由此来进行
漏洞定位和降低误报。
                                        60
流量代理技术原理：运行时插桩技术需要在服务器中部署 Agent，不同的语言不同的容器需要适配不同的 
Agent，这对某些用户或用户的某些场景来说是难以接受的。而流量代理技术不需要在服务器中部署 Agent，
只需测试或使用人员简单配置代理即可，且能检测业务逻辑漏洞。该技术局限的地方在于安全测试会产生一定
的脏数据，漏洞的详情无法定位到代码片段。当甲方的某些业务场景无法部署插桩 Agent 时，流量代理和流量
镜像技术是一个很好的补充。
·被测试服务器中安装 IAST 插桩 Agent； 
·DAST Scanner 发起扫描测试； 
·IAST 插桩 Agent 追踪被测试应用程序在扫描期间的反应后，进行附加测试，将有关信息发送给管理服务器，
管理服务器展示安全测试结果。
·功能测试人员在浏览器或者 APP 中设置代理，将 IAST 检测平台地址填入； 
·功能测试人员开始功能测试，测试流量经过 IAST 检测平台，IAST 检测平台将流量复制一份，并且改造成安全
测试的流量； 
·IAST 检测平台利用改造后的流量对被测业务发起安全测试，根据返回的数据包判断漏洞信息。
                                        61
2.2 2020 年十大热点新闻事件
GitLab 发布 2020 年 DevSecOps 年度调查报告 
2020 年 5 月，GitLab 发布了其第四次 DevSecOps 年度调查报告，来自全球 21 个国家 / 地区的 3,650 名受访
者接受调查。报告揭示了随着越来越多的团队采用 DevOps，整个软件开发团队的角色已经发生了变化。由于
DevOps 采用和实施新工具的比率不断提高，导致开发人员，安全和运营团队的工作职能，工具选择和组织结
构图发生了巨大变化。对于开发人员，运营和安全团队来说，这是一个瞬息万变的世界，对于角色和职责以及
改善 DevOps 实践并加快发布周期的技术而言，如果操作正确，DevOps 可以大大提高企业的利润，但要实现
真正的 DevSecOps 仍然有许多障碍需要克服。
Gartner 发布《2020 年度 Gartner 应用安全测试关键能力》
2020 年 4 月，Gartner 发布《2020 年度 Gartner 应用安全测试关键能力》报告，该报告从 5 个常见使用场景
方面对供应商产品进行评分：DevOps/DevSecOps、企业、云原生应用、面向公众的 Web 应用程序、移动和
客户端，通过该报告，能够了解其中评估的关键能力如何映射到企业的需求以及各供应商在每个方面的得分情
况。报告指出：“Gartner 观察到 AST 市场演变的主要驱动力是对企业 DevOps 计划需求的支持。客户需要提
供商能提供高保证、高价值结果的产品同时，该产品又不必放慢开发工作。客户期望产品能够在开发过程中更
早适应，测试通常由开发人员而不是安全专家来驱动。”
                                        62
FreeBuf 咨询发布《2020 DevSecOps 企业实践白皮书》
2020 年 7 月，FreeBuf 咨询邀请《研发运营一体化（DevOps）能力成熟度模型》部分编者及国内 DevSecOps
实践先行者携程、腾讯及某国内知名金融机构等分别从 DevSecOps 工具链及企业落地实践等方面深入探索研
究，共同输出一份 DevSecOps 企业实践白皮书，为企业 CSO 提供安全建设的有效参考。
云计算开源产业联盟发布《研发运营安全白皮书 2020 年》
2020 年 7 月，云计算开源产业联盟发布《研发运营安全白皮书 2020 年》，该白皮书由中国信息通信研究院牵
头，华为、腾讯、阿里云、浪潮云、京东云、金山云、奇安信等公司联合编制。该白皮书旨在用系统化、流程
化方法梳理软件应用服务研发运营全生命周期安全及发展趋势，帮助从业者提升对软件应用服务研发运营安全
的理解。
                                        63
信通院牵头制定《研发运营一体化（DevOps）能力成熟度模型》