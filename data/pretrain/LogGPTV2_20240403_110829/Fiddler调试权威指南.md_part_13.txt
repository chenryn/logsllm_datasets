Username:
FTP Proxy
SOCKS Proxy
Password
(S1) Axo Sueans
口
Gopher Proxy
Exclude simple hostnames
Bypass proxy settings for these Hosts&Domains:
Jocal,169.254/16
Use Passive FTP Mode PASV
图4-11
配置完Mac代理后，Fiddler会捕捉Safari和其他应用的数据流。当你不再使用Fiddler
时，应该返回到OSXSystemPreferences选项，取消代理设置。
---
## Page 81
4.4配置客户端
4.4.6从其他计算机捕捉数据流
只要应用支持代理服务器，就可以通过Fiddler捕提运行在其他计算机上的这个应用的所
有数据流。实际上，这就是代理服务器的工作方式。为了捕捉这种数据流，首先需要配置
Fiddler，然后配置其他计算机。
要配置Fiddler，点击选项Tools>Fiddler Options>Connections，选中Allowremote
computerstoconnect。修改完成后，重新启动Fiddler，配置即会生效。还需要重新配置防火墙，
允许与Fiddler进程建立网络连接并发送数据。
还需要验证客户端机器能够成功访问Fiddler，不会被防火墙拦截：[打开浏览器，访问
http://FiddlerMachinelP：8888时也不会出现问题]。如果你看到的是一个内容为“FiddlerEcho
Service”的Web页面，说明客户端和Fiddler之间可以通信。
确定网络正常之后，下一步是在另一台计算机上配置代理，使用“从其他应用捕捉数据
流”一节中所描述的方法来配置。其中一个区别是地址，不能再用127.0.0.1：8888作为代理的
地址，应该使用IPOfTheFiddlerPC：8888。举个例子，另一台计算机的InternetExplorer>Tools
>Intermet Options>Connections>LANSettings 的屏幕显示可能如图4-12所示。
Automatic conffguration
automaticall detect setings
JUse aitomaticonffguration goript
Proxy server
eypaes proxy sever for local addresses
图 4-12
温馨提示：
示Web浏览器数据流”）的方式就无法正常工作，因为无法获取到远程数据流的进
程名称。
81
---
## Page 82
第4章配置Fiddler和客户端
·如果你打算解析和Fiddler运行在不同计算机上的数据流，可以查看“HTTPS配置”
邢一章，其中介绍了配置步骤。
·当你关闭Fiddler，停止调试时，需要清除另一台计算机上的代理设置，否则，它后续
的请求都会失败，因为Fiddler已经不再运行了。
4.4.7从设备捕捉数据流
很多支持Wi-Fi或Ethermet的计算设备都可以配置成把数据流发送给Fiddler代理。这些
设备包括：iOS设备（如iPhone、iPad和iPodTouch）、很多Android设备以及所有WindowsPhone
和Windows RT设备。
在前面的章节中介绍了如何配置Fiddler，使它支持远程计算机的数据流。下一步，最好应测
试设备和Fiddler之间的网络连接—通过设备上的浏览器访问http://FiddlerMachineIP：8888，
查看该设备的数据流是否在Fiddler的WebSession列表中。你可能需要断开设备的3G连接，
从面确保该数据流只能是从WiFi上发送过来。如果在你的设备上没有看到数据流，面是显示
连接错误，就需要配置WiFi。常见的错误有如下两种：
1) WiFi Isolation
2)IPSEC
很多家庭路由器支持Wi-FiIsolation功能。启动该功能后，连接Wi-Fi的设备无法连接直
接绑定到路由器的Ethemet端口的设备。有些路由器还支持阻塞某个Wi-Fi客户端连接到另
一个Wi-Fi客户端。如果你的路由器支持这种功能，则需要禁用这些功能，以使设备可以连
接到Fiddler上。
出于安全考虑，有些企业网络会使用IPSEC。IPSEC会阻止从一个非IPSEC客户端到另
一个IPSEC客户端之间的连接。绝大多数设备不支持IPSEC，因此如果你需要从这种设备上
发送数据流，必须把运行Fiddler的机器配置成“IPSECBoundaryException”，从面支持输入
数据流不走IPSEC。在很多网络中，这种特殊配置只有网络管理员能够完成。
当设备成功连接到Fiddler后，需要将它配置为HTTP和HTTPS数据流的代理。
AppleiOS代理设置
要在iPhone、iPad或iPod上访问代理，点击主页的“设置”图标。在设置列表中，选中
General，然后从列表中选中Network。点击WiFi并按下Wi-Fi网络名右侧的蓝色箭头，对其
进行配置。点击HTTPProxy中的Manual选项。在Server框中，输入Fiddler的IP地址或主
82
---
## Page 83
4.4配置客户端
机名。在Port输入框中，提供Fiddler所监听的端口号。应将Authentication保持在Of状态，
如图4-13所示。
HTTPProxy
Off
Auto
Server
192.168.123.12
Port
8888
OFF
图 4-13
WindowsPhone代理设置
要在WindowsPhone上设置代理，应打开“Setting”应用，点击Wi-Fi选项。按下WiFi
网络名并点击“Edit”。把“Proxy”开关打开，在Server/ORL框中输入Fiddler的IP地址或主
机名在Port框中。提供Fiddler所监听的端口。“Proxyauthentication”保持Off状态。
WindowsRT代理设置
运行在ARM操作系统上的新版本的Windows8系统，最近重命名为WindowsRT，它只
能运行Metro风格的应用。这一特性导致Fiddler无法在这种设备上直接运行。然面，你可以
配置WindowsRT设备，把数据流发送到传统的Windows8台式机或笔记本上。在Windows8
启动屏幕中，输入Proxy，点击Settings选项，会显示ConfigureProxyServer选项。点击该选
项，会在桌面上弹出一个Intermet Properties对话框。点击LAN Settings 按钮，调整其内容如
图4-14所示，在Address选项框中输入FiddlerPC的IPv4地址。
Local Area Network (LAN）Setings
Automati configuration
to oenepe n
Proxyserve
s ed not apoly
图4-14
83
---
## Page 84
第4章配置Fiddler和客户端
其他设备
绝大多数支持Wi-Fi的设备都能够使用Settings小应用程序配置代理。然而，只有极少数
的设备，如当前版本的Amazon的KindlFire，不支持配置代理。要在这些设备中使用Fiddler，
需要对设备进行“越狱”，从面能够访问某些设置选项，或者以反向代理模式使用Fiddler，在
本章的后面将介绍这些内容。
温馨提示：
·如果没有捕获到所有的数据流，首先确保已经禁用了设备的3G功能，强制所有的数
据流都使用Wi-Fi网络。
·大多数设备需要特殊配置才能支持Fiddler对HTTPS数据流进行解密，在“HTTPS
解密”一节中将介绍配置的细节。
4.4.8使用Fiddler作为反向代理
在某些情况下，你可能希望使用Fiddler捕捉数据流，但又无法配置客户端让其使用Fiddler
代理服务器。为了满足这一需求，Fiddler可以作为“反向代理”。在反向代理配置中，Fiddler
运行在服务器上，把接收到的请求转发到不同的端口甚至不同的计算机上。
举个例子，假设你的网站运行在名为WEBSERVER的服务器的80端口。使用KindleFire
连接该网站，在KindleFire上你无法配置Web代理。你希望捕捉网站上表单的数据流，以及
服务器的响应，可以如下操作：
1）在WEBSERVER上启动Fiddler，运行在默认的8888端口。
2）点击选项Tools>FiddlerOptions，确保复选框Allowremote computers toconnect被选
中。需要的话，重新启动服务器。
3）选中 Rules>CustomizeRules。
4）在OnBeforeRequest处理程序中，添加一行新的代码：
if (oSession.HostnameIs("webserver") oSession.host = "webserver:80";
5）在Kindle，打开http://webserver:8888。
以上配置完成后，在Fiddler中会显示来自表单的请求。该请求会从8888端口转发给Web服
务器所运行的80端口。响应通过Fiddler发送回设备，而设备不知道80端口原始的数据是什么。
你也可以把Fiddler配置成反向代理，而不需要修改客户端应用的端口号。为了实现这一
---
## Page 85
4.4配置客户端
目标，需要重新配置Web服务器软件和Fiddler。首先，重新配置Web服务器，使它监听一
个新的端口。例如，如果Web服务器当前运行在80端口，必须重新配置成运行在81端口。
然后，使用Tools>Fiddler Options>Connections中的选项，把Fiddler配置成在80端口监听。
作为HTTPS的反向代理
作为反向代理运行的一个问题是客户端永远都无法知道数据流是从代理服务器发送过来
的。这意味着如果客户端向Fiddler发送HTTPS请求，它不会先建立CONNECT连接，面是
直接开始HTTPS握手协议。Fiddler却期望客户端发送HTTP请求，因面会认为二进制的
HTTPS握于是无效的数据流，放弃连接。
该问题可以通过为Fiddler创建额外的网络监听器来接收HTTPS连接的方式来解决。在
Session列表下方的WuickExec对话框中，输入
!listen 444 WebServer
该命令会在444端口创建一个新的网络监听器，它期望所有接收到的请求都是从HTTPS握手
开始。Fiddler会作为服务器，对于监听命令的第二个参数所指定的任何主机名，返回授权证
书。在以上的例子中，该证书会匹配任何发送给https://WebServer的请求。
在建立了安全的连接后，处理程序OnBeforeRequest会把接收到的安全请求转发给真正的
服务器。
4.4.9挂接到上游代理服务器
默认情况下，Fiddler会使用当前的系统代理设置，并使用这些设置作为所有发出请求的
默认的上游代理，如图4-15所示。
iWeb
Explorer
WinINET
Fiddler
Server
4-
图4-15
Fiddler支持所有类型的代理设置，包括手工指定代理、代理脚本或自动检测（WPAD）
代理。还支持所有的代理免除列表。
系统默认的代理设置（可以查看IE的Tools>IntermetOptions>Connections>LAN
Settings）默认情况下是作为上游网关使用的。即使你不是按照通常的方式使用IE，或者使用
拨号连接/VPN连接这种有独代理设置的方式，它们的上游网关仍然是使用默认的系统代理。
85
---
## Page 86
第4章配置Fiddler和客户端
如果你想阻止Fiddler自动挂接到系统的默认代理，可在菜单Tools>FiddlerOptions>
Connections中取消选中 Chain to upstream gateway proxy选项。
需要的话，你还可以使用FiddlerScript重载所有Session的默认网关代理。要做到这一点，
需要设置标志位X-OverrideGateway。如果把标志位的值设置成DIRECT，那么Fiddler会绕过
网关，直接把请求发送给目标服务器。如果把值设置成address:port的形式，如
myproxyserver:80，Fiddler会为该Session使用指定的代理。
4.4.10挂接到SOCKS/TOR
默认情况下，Fiddler希望标志位为X-OverrideGateway的代理可以使用CERN代理协
议，几乎所有的代理都使用该协议。然而，还存在一种不那么流行的代理标准，称为
SOCKS。在SOCKS协议中，客户端会向代理发送二进制头，它给出了TCP/IP连接应该使
用的目标地址。当SOCKS代理确定请求的连接通道已经生成后，客户端会通过通道发送
Web数据流。
企业虚拟网络软件（VPN）有时也使用SOCKS协议，SOCKS也可以用来连接TORProject
TORProject是全球代理网络，旨在为用户提供匿名网络访问功能。TOR网络请求在全球之间
发送，期望阻正网络监听器定位请求的来源。SOCKS协议版本4a还支持代理服务器执行DNS
查询，增强了用户隐私。当通过SOCKSv4a连接TOR时，DNS解析会在云而不是本地计算
机上执行。
除了增强用户隐私，TOR网络的另一个有趣之处在于可以像来自不同的地方那样体验网
站。举个例子，在TOR网络中，我访问了一个广告页面，面广告是荷兰语，因为请求在TOR
网络的出口点是阿姆斯特丹。
当设置X-OverrideGateway标志位时，需要使用前缓socks=表示Fiddler在访问上游服务
器时应该使用SOCKSv4a协议。例如，TOR安装程序通过SOCKS代理的8118端口Polipo
设置TOR的入口点。可以把下面代码添加到FiddlerScript的OnBeforeRequest方法中，把请
求通过TOR网络路由到test.example.com：
if(oSession.HostnameIs("test.example.com"))(
如果你希望通过TOR发送所有的Web数据流，可以为每个Session强制设置
X-OverrideGateway标志位。
86
---
## Page 87
4.5内存使用和Fiddler的“位数”
4.4.11VPN、Modem和网络共享
当你在Windows中建立VPN、3G共享连接或电话拨号连接时，WinINET会让所有的请
求使用连接代理。要确保Fiddler可以捕捉到这种数据流，需在Tools>FiddlerOptions>
Connections中选中复选框Monitor all connections。
一些不常见的网络软件产品会在WinINET层以外运行。当通过这种软件连接时，Fiddler
就无法看到这些软件的Web数据流，因为捕捉和路由这些数据流所使用的机制超出了
WinINET的控制范畸。
4.4.12DirectAccess
当前的Windows版本支持DircctAccess 技术（htp:/technetmicrosofLcom/en-us/network
dd420463），DirectAccess支持远程访问企业网络，而不需要建立VPN。DirectAccess集成在WinINET
中，因此DirectAccess的请求都不会被发送到默认的系统代理上。
遗憾的是，该行为意味着在使用DirectAccess时，Fiddler无法捕获其数据流。在注册表
中可以更新各个DirectAccess配置项，指定期望的目标代理服务器，但是通过这种机制调试
会非常麻烦。相比之下，当在这种环境中使用Fiddler时，工程师通常会使用RemoteDesktop
访问运行在企业网络中的桌面PC，可以在这台PC上运行Fiddler和客户端应用。
4.5内存使用和Fiddler的“位数”
Fiddler会把请求和响应的完整内容保存在内存中，这表示Fiddler在运行时可能会消耗大
量内存（RAM）。操作系统的内存管理器就是用于管理应用的内存，确保即使Fiddler使用了
大量的内存，很少访问的对象会被换出并放到位于磁盘上的页面文件中。
但是，即使有很多内存和磁盘空间，Fiddler还是有可能显示警告信息：
at System.IO.MemoryStream.set_Capacity(Int32 value)
at System.IO.MemoryStream.EnsureCapacity(Int32 value)
at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)
at Fiddler.Session.Execute (Object objThreadstate)
该消息有时会有误导性，因为系统真的没有内存一相反地，这意味着内存管理器无法