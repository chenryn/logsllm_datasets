DEF CON 24 
Side-channel attacks on high-
security electronic safe locks 
PI:EMAIL 
Agenda 
• Background on electronic safe locks 
• Cracking S&G 6120 safe lock 
– Recovering keycode using power analysis 
• Cracking S&G Titan PivotBolt safe lock 
– Recovering keycode using timing attack 
– Defeating incorrect-code lockout 
Background – Electronic safe locks 
Image: ellenm1 on Flickr / CC BY-NC 
Background – Electronic safe locks 
• Safe lock certification 
– UL Type 1 High-security electronic lock 
– Many others 
• Out of scope: cheap, non-certified locks 
– Many of these can be easily brute-forced 
– Some can be “spiked” (bolt motor driven directly) 
– Some can be bypassed mechanically (see, e.g., [2] 
or [3]) 
Agenda 
• Background on electronic safe locks 
• Cracking S&G 6120 safe lock 
– Recovering keycode using power analysis 
• Cracking S&G Titan PivotBolt safe lock 
– Recovering keycode using timing attack 
– Defeating incorrect-code lockout 
Sargent & Greenleaf 6120-332 
6120 – System model 
MCU 
Outside of safe 
Battery 
Keypad 
EEPROM 
Bolt 
motor 
Inside of safe 
Lock 
Steel safe door 
¼” hole 
for wires 
Buzzer 
6120 – Design 
• Keycodes stored in the clear in EEPROM 
• MCU reads/writes EEPROM via 3-wire serial 
– “Microwire” interface (similar to SPI) 
• Nice and slow 
– EEPROM to MCU ~1.5 kbit/s 
– Hundreds of milliseconds to read all data 
• Lock reads all keycodes out of EEPROM on 
every attempt 
6120 – Vulnerability 
• Susceptible to power analysis 
• Keycode bit values change amount of current 
consumed during EEPROM read-out 
• Translate current changes into key values 
• Enter key values on keypad 
• Zero modification required 
• Zero evidence of tampering left behind 
– Covert entry 
6120 – Circuit model 
Data line volts 
100 k 
Data line 
Volts across R1 
Current through R1 
R1 
1 
0 
0 volts 
5 volts 
50 A 
0 A 
 Higher current consumption means the bit being read from 
EEPROM is a 0, and a lower current means the bit is 1 
Vcc 
Bit value 
5 volts 
0 volts 
EEPROM 
Amplifier 
Oscilloscope 
Sense 
Resistor 
Battery 
MCU 
6120 – Full scope trace 
• 1 nibble per keycode digit 
• Only lower byte in each EEPROM word is used 
• Upper byte always 0x00 
6120 – Demo 
Agenda 
• Background on electronic safe locks 
• Cracking S&G 6120 safe lock 
– Recovering keycode using power analysis 
• Cracking S&G Titan PivotBolt safe lock 
– Recovering keycode using timing attack 
– Defeating incorrect-code lockout 
S&G Titan PivotBolt 
Titan – Software design 
• Keycodes stored in EEPROM within MCU 
• Supports 10 keycodes 
• 10-minute lockout after 5 incorrect codes in a 
row 
– Persists across power removal 
– Failed-attempt count stored in EEPROM 
Titan – Timing attack 
• Entire six-digit keypad sequence is captured 
before starting comparison to key from EEPROM 
• Pseudocode of lock FW keycode comparison: 
bool check_code(int enteredCode[6], int actualCode[6]) 
{ 
for (int digit = 0; digit < 6; digit++) 
if (enteredCode[digit] != actualCode[digit]) 
return false; 
return true; 
} 
Each iteration takes 
another 28 s 
Titan – Timing attack 
Current 
Time 
Suppose that the actual code is 908437 
Code tried 
Current trace 
123456 
Current 
Time 
923456 
Current 
Time 
913456 
Current 
Time 
903456 
Correct run 
length 
0 
1 
1 
2 
Wrong 
Wrong 
Wrong 
Wrong 
Titan – Timing attack 
• Current consumption markers for timing delta 
Titan – Timing attack 
• The more digits you have correct, the more 
delayed the current-consumption rise 
Titan – Timing attack 
• Attack algorithm: 
– Try keycode starting with 0 
• Remaining five key digits don’t-care 
– Watch for timing signs showing trial digit match/mismatch  
– If mismatch, try again with keycode starting with 1 
• Retry with increasingly high digit values (2, 3, 4, etc.) until “match” 
signature encountered (i.e., 28 s longer delay) 
– Once first digit in keycode discovered, repeat for second, 
third, fourth, fifth digit 
– Sixth digit is a special case (brute force the 10 possibilities) 
• Reduces worst-case attempt count from 1,000,000 to 
as few as 60 
Titan – Lockout defeat 
• Normally, 5 incorrect codes in a row leads to a 
10-minute penalty lockout period 
– New attempts during lockout are refused 
– Penalty goes back to 10 minutes if power removed 
• Incorrect code count tracked in EEPROM 
• One of two goals: 
– Prevent increment of failure counter, or: 
– Be able to reset failure counter 
Titan – EEPROM write timeline 
EEPROM erase of 
destination block begins 
t≈0 
EEPROM write begins 
t=0 
Old data no longer readable; 
values now all return 0x00 
t=500 s 
Earliest time that 
MCU will consider 
write “complete” 
t=3.0 ms 
New data starts to be 
readable 
t=2.5 ms 
Time 
Initial conditions: 
MCU Vdd = 5v 
MCU clock = 2 MHz 
Destination in EEPROM has existing data (i.e., not 0x00) 
How EEPROM in STM8 behaves after starting a byte-size write 
Latest time that MCU will 
consider write “complete” 
t=6.0 ms 
Titan – Lockout defeat 
• Measured EEPROM behavior when power cut 
– Block already erased 
• 500 s (or less) to commit new data 
– Existing data in block 
• About 500 s from start of cycle until old data no 
longer readable and bytes return 0x00 
• About 3 ms from start of cycle until new data becomes 
persistent 
Titan – Normal wrong code 
User finishes 
entering 
incorrect 
keycode 
Debounce complete; 
FW starts comparing entered 
keycode to stored keycode 
FW finds mismatch 
between entered 
keycode and 
stored keycode 
EEPROM write starts for 
“failed attempt” counter 
EEPROM block erased; 
failed-attempt count at 
0x00 
EEPROM write of new 
non-zero failed attempt 
count complete 
“Wrong code” 
buzzer sounds 
Time 
Titan – Lockout prevented 
User finishes 
entering 
incorrect 
keycode 
Debounce complete; 
FW starts comparing entered 
keycode to stored keycode 
FW finds mismatch 
between entered 
keycode and 
stored keycode 
EEPROM write starts for 
“failed attempt” counter 
EEPROM block erased; 
failed-attempt count at 
0x00 
Time 
Remove battery 
power 
MCU drops below minimum 
voltage before EEPROM write 
completes 
Invalid-attempt count 
left at 0x00 (default 
EEPROM erased 
value) 
Support hardware – Custom PCB 
• Microammeter 
– Low-side current sense for simplicity 
– Gain: 40 dB 
– Low-pass filter (second-order, fc=25 kHz) 
• Power control 
– Quickly apply or remove power to/from lock 
• Keypress simulator 
– Use DAC and buffer to provide voltages that 
simulate keys being pressed on the keypad 
Titan – Automated code recovery 
• Runs on external MCU (STM32L476G) 
• Uses functionality from the custom PCB 
• Sends keycodes in sequence during search 
• Measures time deltas to infer correct values 
• Modulates lock power to avoid lockout 
• Outputs results 
Titan – Demo 
Conclusions 
• Would I still buy/use an electronic safe lock? 
– Yes! (But probably not the 6120) 
• Burglars aren’t going to bother with this 
– They’ll use the saw or crowbar from your garage 
Image: HomeSpotHQ  on Flickr / CC BY 
Feel free to email me: 