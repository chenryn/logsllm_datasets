### Controller
- **RealPlayer Client 1**
- **RealPlayer Client 2**
- **RealSystem Server**

### Figure 2: Topology and Streaming Media Sessions

In this setup, three RealPlayer clients are placed on three different networks to observe and monitor the effects of a DDoS attack and the autonomic response at multiple locations within the experimental topology.

- **RealPlayer Client 1** is located on the same network as the server.
- **RealPlayer Client 2** is situated on the network in the lower left corner of the figure.
- **RealPlayer Client 3** is on the network in the upper center, which also includes Stacheldraht flooding agents. This means that Client 3's path to the server is identical to one of the flooding paths to the server.

For the test, we used an 8-minute, 11-second continuous motion video showing the assembly of Boeing 737-300 aircraft. The audio/video file was encoded at 200.1 Kbps. We configured RealPlayer to use the "best quality" playback setting with available bandwidth set to 10 Mbps (the maximum allowable value) and 5 seconds of data buffering (the minimum effective value). Over the 310-second period during which all data was transmitted to the client, the average data rate observed was 316.7 Kbps. The data rate for a single client varied from 184.9 Kbps to 668.5 Kbps, with bursts likely associated with periodic buffer refill requests. RealPlayer/RealMedia was configured to use UDP as the transport protocol.

### Figure 3: Stacheldraht Flooding and Autonomic Rate Limiting

As shown in Figure 3, Stacheldraht agents are located on the six workstations in the top row of the figure, with one pair of agents on each of the three upper networks. The Stacheldraht master controller is on the network in the lower left corner. Since the master does not need to communicate with its agents during the attack, its location is not significant.

We selected Stacheldraht's UDP flooding attack, targeting the RealSystem server. This sends UDP packets to the server with IP headers that are virtually indistinguishable from the control flow packets sent by RealPlayer clients. During a flooding attack, the congestion prevents control packets from reaching the server and data packets from reaching the client, causing the video sessions to freeze after the previously buffered data is exhausted.

Figure 3 also illustrates the positioning and interaction of the CITRA-enabled components involved in the autonomic response. When the detector near the RealSystem server detects the flood, it sends a traceback and mitigation request to its CITRA neighbors. Linux Router 1, the only neighbor, determines it is on the flood path and activates a simple rate limiter, applied to all subsequent UDP packets addressed to the server. For this experiment, the rate limiting parameters were set to a maximum average rate of four packets per second with a burst rate of 10 packets per second. Router 1 then propagates the traceback and mitigation request to its neighbors (Linux Routers 2, 3, 4, and 5). Routers 1 through 4 activate rate limiting using the same parameters, while Router 5, not on the attack path, does not activate rate limiting.

### 3.4 Metrics and Instrumentation

Our objective was to measure the extent to which automated response could enable the resumption and continuation of RealPlayer sessions during a DDoS attack. This was measured subjectively by observing the video displayed at each client and objectively by measuring the number of packets received at each client. To obtain these measurements, we ran `tcpdump` on each client and the server, configured to capture all traffic between the client and server. We processed the `tcpdump` data with a script that counted the number of packets in each 5-second interval for import into a spreadsheet.

Additionally, we used a packet capture tool to monitor the server’s LAN segment, enabling us to monitor the progress of the DDoS attack and response and ensure the experiment was working as planned. We performed five test runs each of normal RealPlayer use, RealPlayer under attack with no response, and RealPlayer under attack with IDIP response, collecting `tcpdump` data for later analysis.

### 4. Experimental Results and Interpretation

During normal operation (no flooding), RealPlayer clients completed video data transmission and display without visible problems. However, when a Stacheldraht attack was initiated, the flooding of networks and routers immediately prevented RealPlayer clients from communicating with the server, freezing their video images shortly thereafter. With autonomic response enabled, the attack had no perceptible effect on clients, which continued playback without interruption. Traceback and mitigation request messages moved upstream against the flood, causing CITRA-enabled routers in the flood path to activate rate limiting, reducing downstream flooding and enabling the resumption of RealPlayer sessions.

### Figure 4: Representative Experiment Runs

- **Normal Run (Figure 4a)**: Shows the number of packets per second captured at Client 3 with no flooding. During the initial 30 seconds, clients received about 140 packets per second to fill playback buffers, tapering off to about 50 packets per second after the first 30 seconds, with occasional bursts of about 140 packets per second. This was consistent with the data rates shown on the client statistic displays. For the three clients together, this resulted in about 420 packets per second initially, with the network load reduced to about 150 packets per second. Note that although the video was over 8 minutes long, packets arrived at the client for only a little over 5 minutes due to caching.

- **Flood Run (Figure 4b)**: Shows that packet reception rates for clients drop to zero very quickly after the flood starts (approximately 40 seconds into the run) and stay at zero for the duration of the run. These measurements are consistent with the RealPlayer statistics graphs displayed on the clients. The extent of flooding was confirmed by the packet capture tool on the server’s LAN segment, which showed data rates of about 75 Mbps, i.e., at least 75% loading of the LAN’s 100 Mbps capacity. Congestion indications were also observed on the "Internet" hub connecting the five routers, with the packet collision indicator light remaining lit continuously.

- **Full Recovery (Figure 4c)**: Shows a dramatic drop in packets received at the client for approximately 10-12 seconds beginning around 40 seconds into the run, followed by a packet reception pattern similar to normal operation. This 10-12 second gap represents the time between the onset of the attack and the autonomic activation of rate limiting throughout the network. For full recovery, the client received the same number of total packets as during non-flood runs, and the client displays showed no evidence of an attack, suggesting that cached data was sufficient to cover the short, flood-induced outage.

- **Degraded Recovery (Figure 4d)**: Shows a longer transmission reception time with a lower packet rate and fewer total packets received at the client. The total number of video packets received at the client decreased dramatically, indicating degraded performance.

These results demonstrate the effectiveness of the autonomic response in mitigating the impact of DDoS attacks on streaming media sessions.