ticipant (user#5, m, 26-35, driving <3 years) recognized
the attack during the ﬁrst round (rainy night), alerted by
the “highway and local way” inconsistency.
During the driving task, we observe that almost all
the participants noticed when the GPS signals are lost
during the takeover phase (about 30 seconds), but still
kept driving on the road. Once the GPS signal came
back, they continued to follow the navigation instruc-
tions. Our interview later shows most users have expe-
rienced malfunctioned GPS before, which is not enough
to alert them.
User Perceptions to the Attack.
During the in-
terview, we ﬁnd that most users have experienced GPS
malfunction in real life. 95% of the users commented
that they experienced GPS malfunction in real life such
as losing GPS signals and wrong positioning. User#39
stated that she even had a car accident due to the poor
GPS signals. Some users mentioned that it could be very
challenging to check road signs constantly. For exam-
ple, user#03 stated “the roads in the U.S. all look sim-
ilar. Sometimes I notice the road signs, but not when
I drive fast”. In addition, users do not understand how
GPS spooﬁng works, Among the 40 participants, only
eight users can explain GPS spooﬁng correctly.
We encourage the participants to comment on the
differences between using the simulator and real-world
driving. The most common response is the usage of
the keyboard and mouse to control the car for steering
and acceleration. User#10 also commented that they can
drive more recklessly in the simulation game: “The most
different part is that you are afraid of nothing. You are
not afraid of red lights, crashing either.” These are the
limitations of the controlled and simulated studies.
Discussion.
Overall, the results show that our at-
tacks are highly effective even when human drivers are
1538    27th USENIX Security Symposium
USENIX Association
Modif.-based
Modif.-free
Mechanism
Encryption & authentication [29, 64]
Ground infrastructures [12, 27, 36, 49, 50]
GPS receiver hardware [24, 31, 35, 40, 47, 73]
GPS receiver software [32, 35, 47, 48, 55, 63, 65]
External location veriﬁcation [23, 70]
Internal sensor fusion [19, 57]
Computer vision [13, 42, 69]
$ Cost
High
High
Medium
Low
Low
Low
Low
Deploy. Overhead
Effectiveness
Robustness
High
High
High
Low
Low
Low
Low
High
High
High
Low
Low
Low
Medium
High
High
High
Low
Low
Low
Unknown
Table 3: Comparison of different countermeasures.
in the loop. The results also point out three types of
inconsistencies that are likely to alert users: (1) incon-
sistency between highway and local ways; (2) inconsis-
tent street names; (3) inconsistent landmarks (e.g., gas
station). More advanced attacks can further avoid the
“highway - local way” inconsistency by ﬁltering out such
routes. The other two factors depend on whether the
driver has the habit (and has the time) to cross-check
the surrounding environment. In addition, our interview
reveals that most people have experienced GPS malfunc-
tion in real life, which makes them more tolerable to GPS
inconsistencies. In addition, since people are more likely
to rely on visual and voice prompt, it increases the at-
tacker’s probability of success. Our study still has limi-
tations, which are discussed at the end of the paper.
8 Discussion and Countermeasures
Our study demonstrated the initial feasibility of ma-
nipulating the road navigation system through targeted
GPS spooﬁng. The threat becomes more realistic as
car-makers are adding auto-pilot features so that hu-
man drivers can be less involved (or completely disen-
gaged) [38]. In the following, we discuss key directions
of countermeasures.
In Table 3, we classify different methods based on
whether (or how much) they require modiﬁcations to
the existing GPS. Modiﬁcation-based methods require
changing either the GPS satellites, ground infrastruc-
tures, or the GPS receivers. Modiﬁcation-free methods
typically don’t need to change existing GPS, which make
them more attractive to be adopted.
Modiﬁcation-Based Approaches.
First, the most ef-
fective solution is to upgrade the civilian GPS signals to
use the P(Y) code encryption. Researchers also proposed
signal authentication for next-generation GNSS (Global
Navigation Satellite System) [29, 64]. However, this ap-
proach is extremely difﬁcult to prevail in a short term,
given the massive number of civilian GPS devices al-
ready shipped and deployed in the short term.
Second, trusted ground infrastructures to help GPS de-
vices to verify the location and related techniques include
trusted veriﬁers, distance bounding protocols [12, 49],
multilateration [50], multi-receiver crowdsourcing [27]
and physical-layer feature checks [36]. However, due to
the constraints in government policies, and the signiﬁ-
cant costs, dedicated ground infrastructures are also un-
likely to be widely deployed.
Finally, we can modify the GPS receivers. For ex-
ample, the angle-of-arrival of signals can help to esti-
mate the transmitter’s location for authenticity check.
This requires a large directional antenna array [35], or
special moving antenna [47]. Such hardware modi-
ﬁcations are not applicable to the billions of mobile
phones. At the software level, consistency-check algo-
rithms can help to detect the side effects of non-smooth
GPS takeover [32, 63, 65]. In addition, the GPS receiver
can also lock on additional satellites [48] or synchronize
with other GPS receivers [55] to identify spooﬁng. How-
ever, these methods often suffer from the multi-path ef-
fect and are vulnerable to smooth takeovers [26].
Modiﬁcation-Free Approaches.
location
veriﬁcation can leverage existing GNSS signals (e.g.,
Galileo, GLONASS, Beidou) [23], and wireless network
signals [70]. These external location veriﬁcations help
but cannot stop the attacker completely because civilian
GNSS signals are also unencrypted. The attacker can
perform multi-signal jamming or spooﬁng against both
signals [26]. Similarly, the network location is based on
the MAC address of the WiFi or cell tower ID, which can
also be jammed or spoofed [43, 56].
First,
In addition, a navigation system may cross-check the
GPS locations with dead reckoning results based on in-
ertial measurement unit (IMU) sensors (e.g., accelerom-
eter, gyroscope, magnetometer) [19, 57]. However, this
method in general suffers from accumulative IMU sensor
errors and becomes ineffective as the time drifts.
Computer Vision based Location Veriﬁcation. We
believe a promising defense direction is to use com-
puter vision techniques to automatically cross-examine
the physical-world landmarks and street signs with the
digital maps. Recall that in our user study, the two partic-
ipants recognized the attack in a similar way. Given the
proliferation of cameras/LIDARs on mobile devices and
vehicles, vision-based location veriﬁcation only requires
software level upgrade. So far, vision-based techniques
can accurately localize vehicles (up to 3m) using visual
odometry and road maps [13, 42]. SLAM (Simultane-
ous Localization And Mapping) can also localize images
based on geo-referenced street view databases [69].
USENIX Association
27th USENIX Security Symposium    1539
What remains unknown is the robustness of vision-
based methods against adversarial manipulations. Re-
cent works [18, 67] demonstrated that image classiﬁers
can be easily fooled by adding small adversarial noises
to the input (e.g., a street sign image). In our scenario,
although it is very unlikely for adversaries to modify all
the physical street signs and landmarks along the road,
the high sensitivity of image classiﬁers is still a potential
concern. Recently, researchers have proposed methods
to enhance the robustness of image classiﬁers [22,33,66].
Further research is needed to understand the feasibility of
vision-based location veriﬁcation.
Study Limitations.
In this work, we optimize the
GPS spooﬁng attack to be stealthy, which has to compro-
mise on other factors. First, the effectiveness of our at-
tack will be decreased in suburb or rural area with sparse
road structures. However, given that 54% of the world’s
population lives in urban areas [9], the attack can po-
tentially impact many people. Second, the attack does
not work on all users. We target users who travel in un-
familiar area since those users are more likely to rely
on the GPS for navigation. We also argue that the in-
creasingly popular auto-pilot systems would weaken the
human-level checking in the long run.
Our user study has several limitations. First, to sim-
ulate traveling in an unfamiliar area, we choose a Eu-
ropean city. It is possible that Hungarian street names
are less understandable to Chinese/American. However,
even in the US, many streets have Spanish street names.
Second, due to the length and the depth of the user study,
the study cannot reach a massive scale. There are biases
in our user population (e.g., people with a Computer Sci-
ence background). We argue that the general population
can be more susceptible compared to tech-savvy users.
Third, our study only tested on one route, and the route
does not contain wrong-ways or loops. In practice, once
users enter the wrong way, they may recognize the attack
(but already in danger).
9 Related Work
GPS spooﬁng attack was ﬁrst systematically discussed
in [59]. To date, researchers and hackers have suc-
cessfully spoofed GPS devices in moving trucks [62],
ships [46], drones [28] and mobile platforms [25,61] us-
ing off-the-shelf GPS signal simulator [62] or software
deﬁned radios [25, 28, 46, 61]. Humphreys et al. have
demonstrated seamless GPS takeover on a moving yacht
with a portable receiver-spoofer [26]. Later, an attach-
able miniature version one called “limpet spoofer” was
proposed in [16]. Similar technical concepts were also
used in [37, 41] to develop spooﬁng devices.
In [55],
authors provided in-depth analysis and summarized re-
quirements for seamless GPS takeover. However, above
works focus on basic signal spooﬁng, making them un-
like to succeed in road navigation scenarios.
Recently, a number of privacy attacks have been pro-
posed in road navigation scenarios to infer user move-
ments [60]. Narain et al. proposed a route matching
algorithm to infer user movement traces based on mo-
tion sensor data [39]. Our work differs from them in
terms of the attack goals and methods. Our goal is to
stealthily manipulate/control the victim’s navigation sys-
tem by supplying fake inputs (i.e. GPS signals) at the
right time. [71] preliminarily formulated the route spoof-
ing problem. Compared to [71], we have made signif-
icant contributions by proposing new attack algorithms
(e.g., iterative attack, targeted diverting attack), and more
importantly conducting real-world driving tests and user
studies to validate the feasibility.
GPS spooﬁng belongs to the broad category of sen-
sor manipulation. Researchers have examined attacks on
other sensors such as camera, ﬁngerprint sensor, med-
ical infusion pump, analog sensors, and MEMS sen-
sors [14, 15, 17, 20, 21, 30, 34, 44, 52, 54, 58, 72]. Some
of the attacks speciﬁcally target (autonomous) vehicles
to disrupt their ultra-sonic sensor, millimeter-wave radar,
LIDAR, and wheel speed sensor [51,53,68]. The unique
contribution of our work is to demonstrate the feasibility
of (GPS) sensor manipulation with both physical con-
straints (road networks) and human in the loop.
10 Conclusion
In this paper, we explored the feasibility of real-time
stealthy GPS spooﬁng attacks targeting road navigation
systems. Real-world driving tests, taxi-trace evaluations,
and human-in-the-loop user study results all conﬁrmed
high attack effectiveness and efﬁciency. We hope that
the results can motivate practical defense mechanisms
to protect the massive GPS users and GPS-enabled au-
tonomous systems.
Acknowledgments
We would like to thank anonymous reviewers for their
helpful comments. This project was supported by NSF
grants CNS-1750101, CNS-1717028, CNS-1547366,
and CNS-1527239. Any opinions, ﬁndings, and conclu-
sions or recommendations expressed in this material are
those of the authors and do not necessarily reﬂect the
views of any funding agencies.
1540    27th USENIX Security Symposium
USENIX Association
References
[1] City of Boston taxi dataset. MIT Big Data
http://bigdata.csail.mit.edu/
Challenge.
challenge.
[2] Ets2 telemetry web server 3.2.5 + mobile dash-
https://github.com/Funbit/ets2-
board.
telemetry-server.
[3] HUNGARY MAP v0.9.28a [1.27].
https://
forum.scssoft.com/viewtopic.php?t=24305.
[4] The measurement of angles. The Oxford Math
http://www.oxfordmathcenter.com/
Center.
drupal7/node/489.
[5] NYC taxi & limousine commission trip record
http://www.nyc.gov/html/
data. NYC.gov.
tlc/html/about/trip record data.shtml.
[6] WALB ( Wireless Attack Launch Box ). https:
//github.com/crescentvenus/WALB.
[7] Waze documentation. https://wiki.waze.com/
wiki/How Waze determines turn / keep /