    2.  插入以下内容：
        ``` screen
        ---
        - name: Deploying basics input and implicit files output
          hosts: all
          roles:
            - linux-system-roles.logging
          vars:
            logging_inputs:
              - name: system_input
                type: basics
            logging_outputs:
              - name: files_output
                type: files
            logging_flows:
              - name: flow1
                inputs: [system_input]
                outputs: [files_output]
        ```
    :::
2.  在特定清单上执行 playbook:
    ``` screen
    # ansible-playbook -i inventory-file /path/to/file/logging-playbook.yml
    ```
    其中：
    ::: itemizedlist
    -   `inventory-file`{.literal} 是清单文件。
    -   `logging-playbook.yml`{.literal} 是您使用的 playbook。
    :::
:::
::: orderedlist
**验证**
1.  测试 `/etc/rsyslog.conf`{.literal} 文件的语法：
    ``` screen
    # rsyslogd -N 1
    rsyslogd: version 8.1911.0-6.el8, config validation run (level 1), master config /etc/rsyslog.conf
    rsyslogd: End of config validation run. Bye.
    ```
2.  验证系统是否向日志发送信息：
    ::: orderedlist
    1.  发送测试信息：
        ``` screen
        # logger test
        ```
    2.  查看 `/var/log/messages`{.literal} 日志，例如：
        ``` screen
        # cat /var/log/messages
        Aug  5 13:48:31 hostname root[6778]: test
        ```
        其中 [*\'hostname\'*]{.emphasis}
        是客户端系统的主机名。请注意，该日志包含输入 logger
        命令的用户的用户名，在本例中是 `root`{.literal}。
    :::
:::
:::
::: section
::: titlepage
# []{#using-the-logging-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_filtering-logs-in-a-local-logging-system-role_using-the-logging-system-role}过滤本地日志记录系统角色中的日志 {.title}
:::
您可以部署日志记录解决方案，它根据基于 `rsyslog`{.literal}
属性的过滤器过滤日志。
::: itemizedlist
**先决条件**
-   [*访问一个或多个受管节点*]{.emphasis}，它们是您要使用日志记录系统角色配置的系统。
-   [*对控制节点的访问和权限*]{.emphasis}，这是 Red Hat Ansible Engine
    配置其他系统的系统。
    在控制节点上：
    ::: itemizedlist
    -   已安装 Red Hat Ansible Engine
    -   已安装 `rhel-system-roles`{.literal} 软件包
    -   列出受管节点的清单文件。
    :::
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    ---
    - name: Deploying files input and configured files output
      hosts: all
      roles:
        - linux-system-roles.logging
      vars:
        logging_inputs:
          - name: files_input0
            type: files
            input_log_path: /var/log/containerA/*.log
          - name: files_input1
            type: files
            input_log_path: /var/log/containerB/*.log
        logging_outputs:
          - name: files_output0
            type: files
            property: msg
            property_op: contains
            property_value: error
            path: /var/log/errors.log
          - name: files_output1
            type: files
            property: msg
            property_op: "!contains"
            property_value: error
            path: /var/log/others.log
        logging_flows:
          - name: flow0
            inputs: [files_input0, files_input1]
            outputs: [files_output0, files_output1]
    ```
    使用这个配置，包含 `error`{.literal} 字符串的所有信息都会登录
    `/var/log/errors.log`{.literal}，所有其他信息都会登录
    `/var/log/others.log`{.literal}。
    您可以将 `error`{.literal} 属性值替换为您要过滤的字符串。
    您可以根据您的偏好修改变量。
2.  可选：验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file /path/to/file/playbook.yml
    ```
:::
::: orderedlist
**验证**
1.  测试 `/etc/rsyslog.conf`{.literal} 文件的语法：
    ``` screen
    # rsyslogd -N 1
    rsyslogd: version 8.1911.0-6.el8, config validation run (level 1), master config /etc/rsyslog.conf
    rsyslogd: End of config validation run. Bye.
    ```
2.  验证系统是否向日志发送包含 `error`{.literal} 字符串的信息：
    ::: orderedlist
    1.  发送测试信息：
        ``` screen
        # logger error
        ```
    2.  查看 `/var/log/errors.log`{.literal} 日志，例如：
        ``` screen
        # cat /var/log/errors.log
        Aug  5 13:48:31 hostname root[6778]: error
        ```
        其中 `hostname`{.literal}
        是客户端系统的主机名。请注意，该日志包含输入 logger
        命令的用户的用户名，在本例中是 `root`{.literal}。
    :::
:::
::: itemizedlist
**其它资源**
-   安装 `rhel-system-roles`{.literal} 软件包，文档位于
    `/usr/share/ansible/roles/rhel-system-roles.logging/README.html`{.literal}
:::
:::
::: section
::: titlepage
# []{#using-the-logging-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#applying-a-remote-logging-solution-using-the-logging-system-role_using-the-logging-system-role}使用日志记录系统角色应用远程日志解决方案 {.title}
:::
按照以下步骤准备和应用 Red Hat Ansible Engine playbook
来配置远程日志记录解决方案。在这个 playbook 中，一个或多个客户端从
`systemd-journal`{.literal} 中提取日志，并将其转发到远程服务器。服务器从
`remote_rsyslog`{.literal} 和 `remote_files`{.literal}
接收远程输入，并将日志输出到由远程主机名命名的目录中的本地文件。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署日志记录解决方案的系统中安装 Red Hat Ansible Engine。
    :::
-   您在要从中运行 playbook 的系统中具有 `rhel-system-roles`{.literal}
    软件包。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必安装 `rsyslog`{.literal}，因为在部署后系统角色会安装
    `rsyslog`{.literal}。
    :::
-   您至少有两个系统：
    ::: itemizedlist
    -   至少一个是日志服务器。
    -   至少一个是日志记录客户端。
    :::
:::
::: orderedlist
**流程**
1.  创建定义所需角色的 playbook:
    ::: orderedlist
    1.  创建新 YAML 文件，并在文本编辑器中打开，例如：
        ``` screen
        # vi logging-playbook.yml
        ```
    2.  将以下内容插入到文件中：
        ``` screen
        ---
        - name: Deploying remote input and remote_files output
          hosts: server
          roles:
            - linux-system-roles.logging
          vars:
            logging_inputs:
              - name: remote_udp_input
                type: remote
                udp_ports: [ 601 ]
              - name: remote_tcp_input
                type: remote
                tcp_ports: [ 601 ]
            logging_outputs:
              - name: remote_files_output
                type: remote_files
            logging_flows:
              - name: flow_0
                inputs: [remote_udp_input, remote_tcp_input]
                outputs: [remote_files_output]
        - name: Deploying basics input and forwards output
          hosts: clients
          roles:
            - linux-system-roles.logging
          vars:
            logging_inputs:
              - name: basic_input
                type: basics
            logging_outputs:
              - name: forward_output0
                type: forwards
                severity: info
                target: host1.example.com
                udp_port: 601
              - name: forward_output1
                type: forwards
                facility: mail
                target: host1.example.com
                tcp_port: 601
            logging_flows:
              - name: flows0
                inputs: [basic_input]
                outputs: [forward_output0, forward_output1]
        [basic_input]
        [forward_output0, forward_output1]
        ```
        其中 `host1.example.com`{.literal} 是日志服务器。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        您可以修改 playbook 中的参数以符合您的需要。
        :::
        ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 警告 {.title}
        日志解决方案只适用于在服务器或者客户端系统的 SELinux
        策略中定义的端口并在防火墙中打开。默认 SELinux 策略包括端口
        601、514、6514、10514 和
        20514。[要使用其他端口，可在客户端和服务器系统上修改 SELinux
        策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/using_selinux/index#introduction-to-the-selinux-system-role_deploying-the-same-selinux-configuration-on-multiple-systems){.link}。目前还不支持通过系统角色配置防火墙。
        :::
    :::
2.  创建列出您的服务器和客户端的清单文件：
    ::: orderedlist
    1.  创建新文件并在文本编辑器中打开该文件，例如：
        ``` screen
        # vi inventory.ini
        ```
    2.  将以下内容插入到清单文件中：
        ``` screen
        [servers]
        server ansible_host=host1.example.com
        [clients]
        client ansible_host=host2.example.com
        ```
        其中：\* `host1.example.com`{.literal} 是日志服务器。\*
        `host2.example.com`{.literal} 是日志记录客户端。
    :::
3.  在清单上执行 playbook。
    ``` screen
    # ansible-playbook -i /path/to/file/inventory.ini /path/to/file/_logging-playbook.yml
    ```
    其中：
    ::: itemizedlist
    -   `inventory.ini`{.literal} 是清单文件。
    -   `logging-playbook.yml`{.literal} 是您创建的 playbook。
    :::
:::
::: orderedlist
**验证**
1.  在客户端和服务器系统中测试 `/etc/rsyslog.conf`{.literal}
    文件的语法：
    ``` screen
    # rsyslogd -N 1
    rsyslogd: version 8.1911.0-6.el8, config validation run (level 1), master config /etc/rsyslog.conf
    rsyslogd: End of config validation run. Bye.
    ```
2.  验证客户端系统向服务器发送信息：
    ::: orderedlist
    1.  在客户端系统中发送测试信息：
        ``` screen
        # logger test
        ```
    2.  在服务器系统中查看 `/var/log/messages`{.literal} 日志，例如：
        ``` screen
        # cat /var/log/messages
        Aug  5 13:48:31 host2.example.com root[6778]: test
        ```
        其中 `host2.example.com`{.literal}
        是客户端系统的主机名。请注意，该日志包含输入 logger
        命令的用户的用户名，在本例中是 `root`{.literal}。
    :::
:::
::: itemizedlist
**其它资源**
-   [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#getting-started-with-rhel-system-roles_getting-started-with-system-administration){.link}
-   安装 `rhel-system-roles`{.literal} 软件包，文档位于
    `/usr/share/ansible/roles/rhel-system-roles.logging/README.html`{.literal}
-   [RHEL
    系统角色知识库文章](https://access.redhat.com/node/3050101){.link}
:::
:::
::: section
::: titlepage