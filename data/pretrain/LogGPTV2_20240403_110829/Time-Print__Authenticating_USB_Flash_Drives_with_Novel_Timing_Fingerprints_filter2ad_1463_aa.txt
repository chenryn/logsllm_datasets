title:Time-Print: Authenticating USB Flash Drives with Novel Timing Fingerprints
author:Patrick Cronin and
Xing Gao and
Haining Wang and
Chase Cotton
5
9
5
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
2022 IEEE Symposium on Security and Privacy (SP)
Time-Print: Authenticating USB Flash Drives with
Novel Timing Fingerprints
Patrick Cronin
Xing Gao
University of Delaware
University of Delaware
PI:EMAIL
PI:EMAIL
Haining Wang
Virginia Tech
PI:EMAIL
Chase Cotton
University of Delaware
PI:EMAIL
Abstract—Universal Serial Bus (USB) ports are a ubiquitous
feature in computer systems and offer a cheap and efﬁcient
way to provide power and data connectivity between a host
and peripheral devices. Even with the rise of cloud and off-site
computing, USB has played a major role in enabling data transfer
between devices. Its usage is especially prevalent in high-security
environments where systems are ‘air-gapped’ and not connected
to the Internet. However, recent research has demonstrated that
USB is not nearly as secure as once thought, with different
attacks showing that modiﬁed ﬁrmware on USB mass storage
devices can compromise a host system. While many defenses have
been proposed, they require user interaction, advanced hardware
support (incompatible with legacy devices), or utilize device
identiﬁers that can be subverted by an attacker. In this paper, we
present Time-Print, a novel timing-based ﬁngerprinting method,
for identifying USB mass storage devices. We create a ﬁngerprint
by timing a series of read operations from different locations on
a drive, as the timing variations are unique enough to identify
individual USB devices. Time-Print is low overhead, completely
software-based, and does not require any extra or specialized
hardware. To validate the efﬁcacy of Time-Print, we examine
more than 40 USB ﬂash drives and conduct experiments in
multiple authentication scenarios. The experimental results show
that Time-Print can (1) identify known/unknown brand/model
USB devices with greater than 99.5% accuracy, (2) identify
seen/unseen devices of the same brand/model with 95% accuracy,
and (3) classify USB devices from the same brand/model with an
average accuracy of 98.7%.
I. INTRODUCTION
The Universal Serial Bus (USB) has been a ubiquitous
and advanced peripheral connection standard for the past two
decades. USB has standardized the expansion of computer
functions by providing a means for connecting phones, cameras,
projectors, and many more devices. Recent advancements
in USB have increased data transfer speeds above 10 Gbps,
making the USB mass storage device (ﬂash drive) a popular
method for moving data between systems. Especially, USB
is commonly used in air-gapped systems where security
policies prohibit data transfer via the Internet, such as military,
government, and ﬁnancial computing systems [13], [42], [44].
While USB has made the usage and development of
various peripheral devices far simpler, it has recently been
scrutinized for security issues [5], [2], [23], [30]. USB is
an inherently trusting protocol, immediately beginning to set
up and communicate with a peripheral device as soon as it
is connected. This has many advantages, as users are not
required to undertake a difﬁcult setup process, but has recently
been exploited by attackers to compromise host systems.
The discovery of Stuxnet [2], Flame, and Gauss [36] has
demonstrated that malware can be designed to spread via USB
stick. Unwitting and curious employees might pick up dropped
(infected) ﬂash drives and plug them into their computers,
allowing the malicious code on the drives to infect the hosts
and then propagate across the network, wreaking havoc on the
targeted industrial control systems. More recently, attackers
have investigated the ability to modify the ﬁrmware of a USB
device [23], [30] such that an outwardly appearing generic
USB ﬂash drive can act as an attacker-controlled, automated,
mouse and keyboard. The behavior of the USB driver can also
be utilized as a side-channel to ﬁngerprint a host device and
launch tailored drive-by attacks [5], [18]. While many defense
mechanisms have been proposed, these techniques generally
require user input [58], new advanced hardware capabilities [7],
[55], or utilize features (device product ID, vendor ID, or serial
number) that could be forged by an advanced attacker with
modiﬁed ﬁrmware [1], [30].
In this paper, we propose a new device authentication method
for accurately identifying USB mass storage devices. We reveal
that read operations on a USB mass storage device contain
enough timing variability to produce a unique ﬁngerprint.
To generate a USB mass storage device’s ﬁngerprint, we
issue a series of read operations to the device, precisely
record the device’s response latency, and then convert this
raw timing information to a statistical ﬁngerprint. Based on
this design rationale, we develop Time-Print, a software-based
device authentication system. In Time-Print, we devise a
process for transforming the raw timing data to a statistical
ﬁngerprint for each device. Given device ﬁngerprints, Time-
Print
then leverages one-class classiﬁcation via K-Means
clustering and multi-class classiﬁcation via neural networks
for device identiﬁcation. To the best of our knowledge, this is
the ﬁrst work to expose a timing variation within USB mass
storage devices, which can be observed completely in software
and be utilized to generate a unique ﬁngerprint1.
To validate the efﬁcacy of Time-Print, we ﬁrst provide
evidence that statistical timing variations exist on a broad
range of USB ﬂash drives. Speciﬁcally, we gather ﬁngerprints
from more than 40 USB ﬂash drives. Then we examine
three common security scenarios assuming that attackers have
different knowledge levels about the targeted victim from
1USB Type-C has provisions to identify device models [62] via a specialized
key system; Time-Print does not make use of any specialized hardware and
works on both legacy and new devices.
© 2022, Patrick Cronin. Under license to IEEE.
DOI 10.1109/SP46214.2022.00006
1002
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
least to most: (1) identifying known/unknown devices with
different models, (2) identifying seen/unseen devices within
the same model, and (3) classifying individual devices within
the same model. We demonstrate compelling accuracy for
each case, greater than 99.5% identiﬁcation accuracy between
known/unknown devices with different brands and models,
95% identiﬁcation accuracy between seen and unseen drives of
the same model, and 98.7% accuracy in classifying individual
devices of the same model.
We ﬁnally examine the robustness of Time-Print in multiple
hardware conﬁgurations. We observe that Time-Print experi-
ences a small accuracy degradation when measured on different
USB ports, hubs, and host systems. We also examine the
stability of Time-Print and present a strategy to make the ﬁn-
gerprints robust to write operations. Additionally, we investigate
the authentication latency of Time-Print, demonstrating that
while precise authentication can be achieved in 6-11 seconds,
an accuracy greater than 94% can be achieved in about one
second.
The major contributions of this work include:
• The ﬁrst work to demonstrate the existence of a timing
channel within USB mass storage devices, which can be
utilized for device ﬁngerprinting.
• The design and development of a completely software-
based ﬁngerprinting system, Time-Print, for authenticating
USB mass storage devices without requiring additional
hardware or burdensome user interaction.
• A thorough evaluation of more than 40 USB mass storage
devices, showing that the ability to ﬁngerprint with high
accuracy is not dependent upon the device brand, protocol,
or ﬂash controller.
The remainder of this paper is organized as follows. Sec-
tion II describes the threat model, including an attacker’s
capabilities, and provides a primer on the USB protocol,
USB mass storage devices, and USB security threats/defenses.
Section III demonstrates the existence of a ﬁngerprintable
timing channel within USB mass storage devices. Section IV
details the method for generating and gathering a USB mass
storage ﬁngerprint. Section V presents the experimental setup
for evaluation. Section VI evaluates the Time-Print system.
Section VII examines the practicality of Time-Print under
different use conﬁgurations. Section VIII surveys related work
in USB security, device ﬁngerprints, and device authentication.
Finally, Section IX concludes the paper.
II. THREAT MODEL AND BACKGROUND
This section presents the threat model and introduces various
components of the new timing-based side-channel, including
the USB protocol stack, USB mass storage devices, and current
USB security.
A. Threat Model and Attacker Capabilities
The objective of this work is to highlight the applicability
of a security primitive that can physically and reliably identify
USB mass storage devices through a new timing-based side-
channel. We consider a series of realistic scenarios, in which
an entity attempts to either prevent its computing assets from
engaging with unauthorized USB ﬂash drives or better track
the usage of ﬂash drives inside an organization. The desired
security level of a computing system inside the organization
varies from the least (e.g., an open environment) to the highest
(e.g., an ‘air-gap’ protection).
Under the lowest security level, we assume that attackers
also have the least knowledge/privilege to launch an attack. For
example, a computer at a reception desk or an open laboratory
may have access to some assets on the organization’s network
and is in a high trafﬁc area, where an attacker may be able
to physically plug a malicious device into the temporarily
unattended machine. However, compared to computing systems
at the higher security level, it is less challenging (and with less
motivation) to protect such computers at the lower security
level. Moreover, the defense methodologies developed for a
high-security system can be applied for the protection of a
low-security system.
Therefore, the main focus of our work is on air-gapped
systems that have the highest security level, such as computer
systems in military, government, or ﬁnancial organizations,
which are frequently air-gapped and isolated from the Internet.
Industrial control systems or life-critical systems (e.g., medical
equipment) might also be air-gapped [42], [44]. While the
air-gap is effective at thwarting the vast majority of outside
attacks, it is very difﬁcult to transfer data to and from an
air-gapped system. To this end, USB mass storage devices
offer an excellent, low-cost solution, but are not without their
drawbacks. Attacks such as Stuxnet [2] were injected into
target systems via USB, and recent research has demonstrated
the creation of malicious USB devices which can negatively
affect system security [5], [23], [30].
We then assume that attackers attempt to compromise the
target air-gapped computer via USB drives. Attackers have
the ability to design malicious USB devices so that once the
USB handshake is completed, malicious scripts or activities
can be executed on the host. According to the organization’s
security policies, system administrators only issue access to
a few approved USB devices (i.e., insider devices) belonging