# Title: Recoverable Botnets: A Hybrid C&C Approach

## Authors
Peng Liao, Xiang Cui, Shuhao Li, and Chaoge Liu  
1. Institute of Computing Technology, Chinese Academy of Sciences  
2. Graduate University, Chinese Academy of Sciences  
Beijing, China  
{liaopeng, cuixiang, lishuhao, liuchaoge}@software.ict.ac.cn  

## Abstract
In this paper, we present Hybot, a botnet designed to recover its command and control (C&C) channel within a tolerable delay even if most critical resources are destroyed. Hybot employs a hybrid C&C structure, combining P2P and URL Flux, to ensure both robustness and effectiveness. Our preliminary results demonstrate the feasibility of Hybot's design, which poses a potential threat to Internet security. The aim of our work is to enhance the understanding of advanced botnets, thereby facilitating the development of more effective countermeasures.

## Categories and Subject Descriptors
C.2.1 [Computer Communication Networks]: Network Architecture and Design

## General Terms
Design, Reliability, Security

## Keywords
Botnet, Recoverable, Hybrid, C&C

## 1. Introduction
Botnets, the root cause of many Internet attacks such as email spam, DDoS, and malware distribution, have been the subject of extensive research and collaborative defense efforts. Academia, governments, ISPs, domain registrars, and law enforcement agencies have joined forces to combat this significant threat.

### Inherent Weaknesses
- **Centralized Botnets**: Suffer from single-point-of-failure. Disconnection or redirection of all C&C servers can lead to the collapse of the entire botnet.
- **Domain Flux**: Provides a more resilient C&C mechanism but relies on registering domain names and maintaining publicly available servers.
- **Decentralized P2P Botnets**: Vulnerable to index poisoning, Sybil attacks, routing table poisoning, and abnormal traffic. The bootstrap procedure also introduces a single point of failure.

### Counter Botnets
Defenders have successfully shut down several notorious botnets, including Rustock, Mariposa, Waledac, Stuxnet, and Coreflood. However, these successes have also motivated botmasters to develop more advanced botnets that can recover from temporary shutdowns.

### Recoverable Botnets
Several studies have focused on constructing robust botnets. For example:
- Wang et al. [1] presented an advanced hybrid P2P botnet.
- Vogt et al. [2] introduced a "super-botnet" by interconnecting multiple small botnets.
- Starnberger et al. [3] proposed Overbot, which uses Kademlia for C&C. 

However, none of these studies have addressed how botmasters might recover the C&C channel when most critical resources are destroyed. This makes the study of recoverability essential.

## 2. Hybrid C&C Design

### 2.1 Overview
Hybot combines two independent yet coordinated C&C mechanisms: decentralized Hybrid P2P-based C&C (HPCC) and centralized URL Flux-based C&C (UFCC), as shown in Figure 1.

- **HPCC Recoverability**: HPCC is initially used because it does not rely on external resources, making it difficult to counter. If HPCC fails, UFCC takes over to repair HPCC and then returns to a sleep state. UFCC remains available by leveraging popular Web 2.0 services like Twitter, which are practically impossible to shut down.
- **UFCC Recoverability**: UFCC is monitored for availability. If it becomes unavailable, botmasters inject an UpdateUGA command into HPCC to update the User Generation Algorithm.

### 2.2 Hybrid P2P-based C&C
Hybrid P2P botnets, relying on automated peer-list exchange, represent the emerging trend. These botnets are immune to index poisoning but vulnerable to peer-list pollution. To address this, Hybot uses a reputation-based and self-repairing mechanism.

- **Peer-list Format**: Each entry in the peer list is a four-tuple (IP, Port, Fail Count, Confidence Level). The confidence level (CL) categorizes peers as source, authentic, or available.
- **Peer-list Construction**: Trust relationships are established through infection. When a servent bot infects a victim, the victim marks the servent as authentic. This trust relationship propagates, expanding the number of authentic peers.
- **Peer-list Exchange**: Peer lists are updated cautiously, prioritizing high-CL, low-FC, and peers from authentic sources. The proportion of available peers is limited to prevent excessive pollution.
- **Two-step Bootstrap**: Initially, a reasonable number of peers are hard-coded. After a delay, Domain-Flux is used to obtain a list of newly compromised servent bots, ensuring balanced connectivity.

### 2.3 URL Flux-based C&C
URL Flux provides robustness by not requiring the maintenance of domain names or publicly accessible servers. The complete C&C procedure is illustrated in Figure 5.

- **Recovery as Bootstrap**: Hybot avoids single-point-of-failure by not hard-coding initial servent peers. Instead, UFCC is activated to obtain initial accessible peers, using RSA and timestamps to authenticate commands.

## 3. Preliminary Results
The performance of HPCC and the robustness of UFCC are key factors in Hybot's recoverability.

- **Robustness of HPCC**: Simulations show that even with 80% of nodes removed, Hybot maintains excellent connectivity, especially with routing table sizes between 30 and 40.
- **Performance of UFCC**: Hybot spends an average of 2.7 seconds and 1.8KB to get a tweet from a microblog. It takes 30.6 seconds and 12.8KB to locate the correct JPG URL, enabling rapid recovery of HPCC.

## 4. References
[1] P. Wang, S. Sparks et al. An advanced hybrid peer-to-peer botnet. In Proc. of the First Workshop on Hot Topics in Understanding Botnets (HotBots’07), 2007.  
[2] R. Vogt, J. Aycock, and M. Jacobson. Army of botnets. In Proc. of 14th Annual Network and Distributed System Security Symposium (NDSS’07), 2007.  
[3] G. Starnberger, C. Kruegel, and E. Kirda. Overbot - a botnet protocol based on Kademlia. In Proc. of the 4th Int. Conf. on Security and Privacy in Communication Networks (SecureComm’08), 2008.  
[4] Cui Xiang, Fang Binxing, Yin Lihua, Liu Xiaoyi. Andbot: Towards Advanced Mobile Botnets. In Proc. of the 4th Usenix Workshop on Large-scale Exploits and Emergent Threats (LEET ’11). 2011.