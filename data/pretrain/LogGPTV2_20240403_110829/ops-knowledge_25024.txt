To switch between Python 2.7 and Python 3.3 on your Windows system, you can manage the environment variables to control which version is used by default. Hereâ€™s a step-by-step guide to help you set this up:

1. **Locate the Python Executables:**
   - Find the paths to the `python.exe` files for both Python 2.7 and Python 3.3. These are typically located in the installation directories, e.g., `C:\Python27\` and `C:\Python33\`.

2. **Edit the System Environment Variables:**
   - Open the Start Menu, search for "Environment Variables," and select "Edit the system environment variables."
   - In the System Properties window, click the "Environment Variables" button.
   - In the Environment Variables window, find the `Path` variable under "System variables" and select it, then click "Edit."

3. **Add Python Paths to the Path Variable:**
   - Add the paths to both Python 2.7 and Python 3.3 to the `Path` variable. The format should be:
     ```
     C:\Python27\;C:\Python33\
     ```
   - Ensure that the path to the version you want to use by default is listed first. For example, if you want Python 3.3 to be the default, place its path before the path to Python 2.7.

4. **Switching Between Versions:**
   - To switch between the versions, you can temporarily modify the `Path` variable in the Command Prompt. For example, to use Python 2.7, you can run:
     ```cmd
     set PATH=C:\Python27\;%PATH%
     python ex1.py
     ```
   - To use Python 3.3, you can run:
     ```cmd
     set PATH=C:\Python33\;%PATH%
     python ex1.py
     ```

5. **Verify the Version:**
   - You can verify which version of Python is currently active by running:
     ```cmd
     python --version
     ```

By following these steps, you can easily switch between Python 2.7 and Python 3.3 from the command line. This method allows you to have both versions installed and accessible, with the ability to choose the desired version for each script execution.