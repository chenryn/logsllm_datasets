INSERT 0 1  
digoal=# rollback;  
ROLLBACK  
commit_xact5; -- SESSION A :   
digoal=# begin;  
BEGIN  
digoal=# select txid_current();  
 txid_current   
--------------  
         1695  
(1 row)  
digoal=# insert into pitr_test values (1695,'test');  
INSERT 0 1  
digoal=# commit;  
COMMIT  
```  
切换日志, 归档 :   
```  
digoal=# checkpoint;  
CHECKPOINT  
digoal=# select pg_xlogfile_name(pg_switch_xlog());  
     pg_xlogfile_name       
--------------------------  
 000000020000000000000003  
(1 row)  
digoal=# checkpoint;  
CHECKPOINT  
digoal=# select pg_xlogfile_name(pg_switch_xlog());  
     pg_xlogfile_name       
--------------------------  
 000000020000000000000004  
(1 row)  
```  
使用拷贝的备份以及归档日志还原 :   
关闭数据库  
```  
pg93@db-172-16-3-33-> pg_ctl stop -m fast  
waiting for server to shut down.... done  
server stopped  
```  
删除数据库目录以及表空间目录(为简化例子, 本例无新建的表空间.)  
```  
pg93@db-172-16-3-33-> cd $PGDATA  
pg93@db-172-16-3-33-> rm -rf *  
```  
还原备份以及表空间软链接  
```  
pg93@db-172-16-3-33-> cp -r /pgdata/digoal/1921/data04/pg93backup/20130527_onlinebackup/* $PGDATA  
```  
创建pg_log目录, 存放日志 :   
```  
pg93@db-172-16-3-33-> cd $PGDATA  
```  
配置$PGDATA/recovery.conf  
```  
pg93@db-172-16-3-33-> cd $PGDATA  
pg93@db-172-16-3-33-> cp $PGHOME/share/recovery.conf.sample ./recovery.conf  
vi recovery.conf  
restore_command = 'recovery.sh /pgdata/digoal/1921/data04/pg93archdir %f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'  
recovery_target_xid = '1692'  
recovery_target_inclusive = false  
recovery_target_timeline = 'latest'  
```  
创建恢复脚本 :   
```  
pg93@db-172-16-3-33-> cat recovery.sh  
#!/bin/bash  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql9.3  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH  
export DATE=`date +"%Y%m%d"`  
export PATH=$PGHOME/bin:$PATH:.  
BASEDIR=$1  
find $BASEDIR -name $2 -exec cp {} $3 \;  
```  
添加可执行权限 :   
```  
pg93@db-172-16-3-33-> chmod 700 recovery.sh  
```  
启动数据库  
```  
pg93@db-172-16-3-33-> pg_ctl start  
server starting  
pg93@db-172-16-3-33-> LOG:  00000: loaded library "pg_stat_statements"  
LOCATION:  load_libraries, miscinit.c:1296  
```  
查看还原点是否与预计匹配 :   
```  
pg93@db-172-16-3-33-> psql  
psql (9.3devel)  
Type "help" for help.  
digoal=# select ctid,* from pitr_test ;  
 ctid  |  id  | info    
-------+------+-------  
 (0,1) |    1 | test  
 (0,3) | 1693 | teset  
 (0,4) | 1693 | teset  
 (0,5) | 1694 | teset  
(4 rows)  
digoal=# insert into pitr_test values(10,'new');  
INSERT 0 1  
digoal=# select ctid,* from pitr_test ;  
 ctid  |  id  | info    
-------+------+-------  
 (0,1) |    1 | test  
 (0,3) | 1693 | teset  
 (0,4) | 1693 | teset  
 (0,5) | 1694 | teset  
 (0,7) |   10 | new  
(5 rows)  
```  
因为只有当record_info等于XLOG_XACT_ABORT,XLOG_XACT_COMMIT或者XLOG_XACT_COMMIT_COMPACT, 或者自建还原点时才可以被作为截至点,   
所以本例使用xid=1692作为截至点, xlog会应用到query2_2;rollback2; -- SESSION A : 这个位置(并且包含这个xlog信息).  
因此在此之前应该插入了6条记录, 所以新插入的数据ctid=7, 再次说明query2_2;rollback2;的xlog信息被恢复了, 但是回滚了.   
其他几种搭配就不测试了, 原理已经介绍清楚了. 有兴趣的朋友可以自行测试.  
自动备份  
这个可以结合操作系统的定时脚本来实现, 在Linux中可以使用crontab.  
例如 :   
1\. 首先规划好存放数据库数据文件的目录.  
```  
mkdir -p /pgdata/digoal/1921/data04/pg93backup  
chown -R pg93:pg93 /pgdata/digoal/1921/data04/pg93backup  
chmod 700 /pgdata/digoal/1921/data04/pg93backup  
```  
2\. 编写备份脚本  
```  
pg93@db-172-16-3-33-> cd $PGDATA  
pg93@db-172-16-3-33-> vi backup.sh  
#!/bin/bash  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql9.3  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH  
export DATE=`date +"%Y%m%d"`  
export PATH=$PGHOME/bin:$PATH:.  
export PGDATA=/pgdata1999  
BASEDIR="/pgdata/digoal/1921/data04/pg93backup"  
date +%F%T  
if [ ! -d $BASEDIR/$DATE ]; then  
  mkdir -p $BASEDIR/$DATE  
  if [ $? -eq 0 ]; then  
    psql -h 127.0.0.1 -p 1999 -U postgres postgres -c "select pg_start_backup(now()::text)"  
    if [ $? -eq 0 ]; then  
      cp -r -L $PGDATA $BASEDIR/$DATE  
    else  
      echo -e "select pg_start_backup(now()::text) error"  
      exit 1  
    fi  
    psql -h 127.0.0.1 -p 1999 -U postgres postgres -c "select pg_stop_backup()"  
    date +%F%T  
    echo -e "backup successed"  
    exit 0  
  else  
    echo -e "mkdir -p $BASEDIR/$DATE error"  
    exit 1  
  fi  
else  
  echo -e "$DATE backuped, don't backup repeated"  
  exit 1  
fi  
```  
修改权限  
```  
pg93@db-172-16-3-33-> chmod 700 backup.sh  
```  
3\. 测试  
```  
pg93@db-172-16-3-33-> ./backup.sh   
 pg_start_backup   
-----------------  
 0/6000028  
(1 row)  
NOTICE:  pg_stop_backup complete, all required WAL segments have been archived  
 pg_stop_backup   
----------------  
 0/60000F0  
(1 row)  
pg93@db-172-16-3-33-> 再次执行则退出, 因为今天已经备份了.  
pg93@db-172-16-3-33-> ./backup.sh   
20130527 backuped, don't backup repeated  
```  
4\. 配置crontab  
首先删除当天备份  
```  
rm -rf /pgdata/digoal/1921/data04/pg93backup/20130527  
```  
配置自动备份  
```  
su - pg93  
crontab -e  
40 16 * * * /pgdata1999/backup.sh >>/tmp/backup.log 2>&1  
```  
5\. 检查是否自动备份.  
```  
pg93@db-172-16-3-33-> cat /tmp/backup.log   
2013-05-2716:40:01  
 pg_start_backup   
-----------------  
 0/8000028  
(1 row)  
NOTICE:  pg_stop_backup complete, all required WAL segments have been archived  
 pg_stop_backup   
----------------  
 0/80000F0  
(1 row)  
2013-05-2716:40:02  
backup successed  
```  
检查备份成功后把crontab调整为你需要的备份时间即可. 例如每天都凌晨2点开始备份.  
```  
0 2 * * * /pgdata1999/backup.sh >>/tmp/backup.log 2>&1  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/1638770402012914112949546/  
2\. http://blog.163.com/digoal@126/blog/static/163877040201303082942271/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")