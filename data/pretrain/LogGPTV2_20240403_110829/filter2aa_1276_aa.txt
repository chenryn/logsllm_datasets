Bio
About Me 
With VN Security since year 
2009 
Almost Every 
Weekend 
>  CTF player 
>  Weekend gamer 
Running zxandora.com 
project. 
Most of the time 
>  Soon 
>  Very Soon 
>  Brand New Online 
Sandbox 
Hack in The Box Crew 
Once a year 
>  Good friends 
>  CTF CTF and CTF 
About Me 
>  2008, Hack In The Box CTF Winner 
>  2010, Hack In The Box Speaker, Malaysia 
>  2012, Codegate Speaker, Korea 
>  2015, VXRL Speaker, Hong Kong 
>  2015, HITCON CTF, Prequal Top 10 
>  2016, Codegate CTF, Prequal Top 5 
>  2016, Qcon Speaker, Beijing 
>  OSX, Local Privilege Escalation 
>  Code commit for metasploit 3 
>  GDB Bug hunting 
>  Metasploit module 
>  Linux Randomization Bypass 
>  http://www.githiub.com/xwings/tuya 
>  微博: @kaijern 
vnsecurity.net
Introduction 
>  Active CTF Player (CLGT) 
>  Active speaker at conferences 
>  Blackhat USA 
>  Tetcon 
>  Hack In The Box 
>  Xcon 
>  Our Tools 
>  PEDA 
>  Unicorn/ Capstone/ Keystone 
>  Xandora 
>  OllyDbg, Catcha! 
>  ROPEME 
>  Security Researcher 
>  Active speaker at conferences 
>  Blackhat USA 
>  Syscan 
>  Hack In The Box 
>  Xcon 
>  Research Topics 
>  Emulators 
>  Virtualization 
>  Binary Analysis 
>  Tools for Malware Analysis 
VN Security 
Nguyen Anh Quynh 
>  Nations 
>  Vietnamese 
>  Malaysian 
>  Singaporean 
When gdb meets peda 
GDB 
PEDA 
Why KCON
Fake Websites 
What Are These Things
What Is Disassembler 
From binary to assembly 
code 
Core part of all binary 
analysis/ reverse 
engineering / debugger and 
exploit development 
Disassembly framework 
(engine/library) is a lower 
layer in stack of architecture 
Example 
§  01D8 = ADD EAX,EBX (x86) 
§  1169 = STR R1,[R2] (ARM’s Thumb) 
Assembler  
Engine 
Binary 
Analysis 
Debugger 
Exploit Development 
CPU  
Emulator Engine 
Disassembler  
Engine 
What Is Emulator 
Software only CPU Emulator 
Core focus on CPU 
operations.  
Design with no machine 
devices 
Safe emulation environment 
Where else can we see CPU 
emulator. Yes, Antivirus 
Binary 
Analysis 
Debugger 
Exploit Development 
Assembler  
Engine 
Binary 
Analysis 
Debugger 
Exploit Development 
CPU  
Emulator Engine 
Disassembler  
Engine 
Example 
§  01D1 = add eax,ebx (x86) 
§ 
Load eax & ebx register 
§ 
Add value of eax & ebx then copy the result to eax  
§ 
Update flag OF, SF, ZF, AF, CF, PF accordingly 
What Is Assembler 
From assembly to machine 
code 
Support high level concepts 
such as macro, functions 
and etc. 
Dynamic machine code 
generation 
Example 
§  ADD EAX,EBX = 01D8 (x86) 
§  STR R1,[R2] = 1169 (ARM’s Thumb) 
Binary 
Analysis 
Debugger 
Exploit Development 
Assembler  
Engine 
Binary 
Analysis 
Debugger 
Exploit Development 
CPU  
Emulator Engine 
Disassembler  
Engine 
Where are we currently
Showcase 
>  CEnigma 
>  Unicorn 
>  CEbot 
>  Camal 
>  Radare2 
>  Pyew 
>  WinAppDbg 
>  PowerSploit 
>  MachOview 
>  RopShell 
>  ROPgadget 
>  Frida 
>  The-Backdoor-Factory 
>  Cuckoo 
>  Cerbero Profiler 
>  CryptoShark 
>  Ropper 
>  Snowman 
>  X86dbg 
>  Concolica 
>  Memtools Vita 
>  BARF 
>  rp++ 
>  Binwalk 
>  MPRESS dumper 
>  Xipiter Toolkit 
>  Sonare 
>  PyDA 
>  Qira 
>  Rekall 
>  Inficere 
>  Pwntools 
>  Bokken 
>  Webkitties 
>  Malware_config_parsers 
>  Nightmare 
>  Catfish 
>  JSoS-Module-Dump 
>  Vitasploit 
>  PowerShellArsenal 
>  PyReil 
>  ARMSCGen 
>  Shwass 
>  Nrop 
>  Illdb-capstone-arm 
>  Capstone-js 
>  ELF Unstrip Tool 
>  Binjitsu 
>  Rop-tool 
>  JitAsm 
>  OllyCapstone 
>  PackerId 
>  Volatility Plugins 
>  Pwndbg 
>  Lisa.py 
>  Many Other More 
Showcase 
> 
UniDOS: Microsoft DOS emulator. 
> 
Radare2: Unix-like reverse engineering framework and commandline tools. 
> 
Usercorn: User-space system emulator. 
> 
Unicorn-decoder: A shellcode decoder that can dump self-modifying-code. 
> 
Univm: A plugin for x64dbg for x86 emulation. 
> 
PyAna: Analyzing Windows shellcode. 
> 
GEF: GDB Enhanced Features. 
> 
Pwndbg: A Python plugin of GDB to assist exploit development. 
> 
Eli.Decode: Decode obfuscated shellcodes. 
> 
IdaEmu: an IDA Pro Plugin for code emulation. 
> 
Roper: build ROP-chain attacks on a target binary using genetic algorithms. 
> 
Sk3wlDbg: A plugin for IDA Pro for machine code emulation. 
> 
Angr: A framework for static & dynamic concolic (symbolic) analysis. 
> 
Cemu: Cheap EMUlator based on Keystone and Unicorn engines. 
> 
ROPMEMU: Analyze ROP-based exploitation. 
> 
BroIDS_Unicorn: Plugin to detect shellcode on Bro IDS with Unicorn. 
> 
UniAna: Analysis PE file or Shellcode (Only Windows x86). 
> 
ARMSCGen: ARM Shellcode Generator. 
> 
TinyAntivirus: Open source Antivirus engine designed for detecting & disinfecting 
polymorphic virus. 
> 
Patchkit: A powerful binary patching toolkit. 
Showcase 
> 
Keypatch: IDA Pro plugin for code assembling & binary patching. 
> 
Radare2: Unix-like reverse engineering framework and commandline tools. 
> 
GEF: GDB Enhanced Features. 
> 
Ropper: Rop gadget and binary information tool. 
> 
Cemu: Cheap EMUlator based on Keystone and Unicorn engines. 
> 
Pwnypack: Certified Edible Dinosaurs official CTF toolkit. 
> 
Keystone.JS: Emscripten-port of Keystone for JavaScript. 
> 
Usercorn: Versatile kernel+system+userspace emulator. 
> 
x64dbg: An open-source x64/x32 debugger for windows. 
> 
Liberation: a next generation code injection library for iOS cheaters 
everywhere. 
> 
Strongdb: GDB plugin for Android debugging. 
> 
AssemblyBot: Telegram bot for assembling and disassembling on-the-go. 
> 
demovfuscator: Deobfuscator for movfuscated binaries. 
> 
Dash: A simple web based tool for working with assembly language. 
> 
ARMSCGen: ARM Shellcode Generator. 
> 
Asm_Ops: Assembler for IDA Pro (IDA Plugin). 
> 
Binch: A lightweight ELF binary patch tool. 
> 
Metame: Metamorphic code engine for arbitrary executables. 
> 
Patchkit: A powerful binary patching toolkit. 
> 
Pymetamorph: Metamorphic engine in Python for Windows executables. 
Born of The Trinity
Binary'
Assembly'
Fundamental Frameworks for Reversing 
Capstone 
Components for a 
complete RE framework 
Interchange between 
assembler and 
disassembler 
A full CPU emulator 
always help when 
comes with obfuscated 
code 
Keystone 
Unicorn 
Capstone Engine
NGUYEN Anh Quynh  
http://www.capstone-engine.org  
What’s Wrong with Current Disassembler 
Nothing works even up until 2013 (First release of Capstone Engine) 
Looks like no one take charge 
Industry stays in the dark side 
What do we need ? 
Multiple archs: x86, ARM+ 
ARM64 + Mips + PPC and 
more 
Multiple platform: Windows, 
Linux, OSX and more 
Multiple binding: Python, 
Ruby, Java, C# and more 
Clean, simple, intuitive & 
architecture-neutral API 
Provide break-down details on 
instructions 
Friendly license: Not GPL 
Lots of Work ! 
Multiple archs: x86, ARM 
Actively maintained & update 
within latest arch’s change 
Multiple platform: Windows, 
Linux 
Understanding opcode, Intel 
x86 it self with 1500++ 
documented instructions 
Support python and ruby as 
binding languages 
Single man show 
Target finish within 12 months  
A Good Disassembler 
Multiple archs: x86, ARM 
Actively maintained & update 
within latest arch’s change 
Multiple platform: Windows, 
Linux 
Support python and ruby as 
binding languages 
Friendly license: BSD 
Easy to setup 
Open source project compiler 
Sets of modules for machine code representing, compiling, optimizing 
Backed by many major players: AMD, Apple, Google, Intel, IBM, ARM, Imgtec, Nvidia, 
Qualcomm, Samsung, etc 
Incredibly huge (compiler) community around. 
Not Reinventing the Wheel 
Fork from LLVM 
Multiple architectures ready 
In-disassembler (MC module) 
Only, Only and Only build for LLVM 
actively maintained by the original vendor from the arch building company (eg, x86 from intel) 
Very actively maintained & updated by a huge community 
Are We Done 
>  Cannot just reuse MC as-is without huge efforts. 
>  LLVM code is in C++, but we want C code. 
>  Code mixed like spaghetti with lots of LLVM 
layers, not easy to take out 