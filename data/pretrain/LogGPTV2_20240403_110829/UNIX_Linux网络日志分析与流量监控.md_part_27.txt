第3章建立日志分析系统133
创
下午0258:50
自定义时间
黄定费工箱
Snart Mode
10每页
是
日
选
---
## Page 157
加班熬夜，非常辛苦。不过为了还清房贷和车贷，他依然坚持努力工作。
是Apache 1.3.33。公司网络拓扑如图4-1所示。
DMZ内部署的是RedhatLinux系统。DNS服务器采用的是BIND8.2.2，Web服务器采用的
内部主要安装的是用于开发的Windows系统，也有少量计算机安装了Solaris和Linux。在
事件背景
是如何进入网络内部的吗？小宋是如何还原整个事件真相的呢？今后应如何修补此类漏洞？
的访问日志，终于发现公司DNS服务器的重大漏洞。根据现有的日志分析，你知道攻击者
DNS系统安全问题有着重要意义。
日志通常都会记录在DNS日志中，理解DNS日志信息，
在网络上明文传送，容易截获和篡改。
准确的识别，很容易成为攻击对象。DNS系统出现安全问题的原因主要归纳为以下两方面：
据从未进行加密，没有提供适当的信息保护和认证机制。DNS服务器对各种查询也没有进行
DNS从设计之初就建立在互信模型的基础之上，是一个开放的体系。DNS通信中的各类数
底，域名总数达920万个，国内的域名服务器总量超过90万个。
以我国为例，根据我国互联网信息中心的《中国互联网络发展状况统计报告》，截至2013年
网管小宋在一次巡检中发现了DNS重启的日志，经过仔细分析局域网内外两层防火墙
4.1案例三：邂逅DNS故障
小宋每天不停地处理着来往的电子邮件并负责公司内每台网络设备的正常运行。他经常
小宋是一家IT公司的网管。公司网络内部大约有30多台服务器，几百台客户机。公司
（2）系统配置、管理的脆弱性：DNS服务器软件很容易发生配置错误。DNS启动错误
下面通过案例说明DNS故障应对方法。
（1）协议设计的脆弱性：DNS协议设计时完全没有考虑安全问题，使DNS通信的数据
各大网络运营商都按区域建立了DNS系统。很多网站也提供了域名服务器。然而，
难度系数：★★★★
随着互联网的发展，域名和站点数量迅速增长，与此同时域名服务器数量也急剧增长。
故事人物：小宋（网管）、安全顾问
关键日志：防火墙日志、DNS日志
第4章DNS系统故障分析
第二篇日志分析实战
对于及时发现、定位以及解决
2008庆
---
## Page 158
常的响应数据包外，从没有发生什么异常情况。小宋登录那台计算机开始检查它的状态。
宋立刻将这个情况标记为异常，因为他运行这个BIND服务器已经有很长时间了，除了偶尔反
了问题。具体是什么情况呢？我们看看详情。DNS服务器上的系统日志记录如下。
序。通过其中一个监控连接，他注意到DNS服务器有些奇怪。在检查DNS 日志时，他发现
对每台计算机都建立了一组连接来监视那些关键文件。这就可以使他实时地跟踪每个服务程
日志收集系统。为了迅速地从他的台式电脑上诊断出他负责的几台服务器的潜在问题，小宋
CPU=0u/0s
第二段DNS日志：
从日志得知，在凌晨，DNS服务器崩溃了多次（幸亏有监视脚本程序使服务器重启）。小
第一段DNS日志：
喜欢不断探索的小宋编写了一些自动化运维的小程序来提高运维效率，例如监控系统和
Apr23 01:35:00DNSserver named [1423]:USAGE 977797432976760631 CPU=5.77u/6.24s CHILD
2.2
Http
口
DNS
图4-1
受害公司网络拓扑
交换机
120
nan
办公网
Internet
第4章DNS系统故障分析135
路由器
140
志日欢#
福
---
## Page 159
志如下：
一下那个时间段的外部防火墙日志，果然有所发现。外部防火墙在凌晨1:00～1:33的部分日
溃。但他在那些日志文件条目中没有找到任何有意义的东西。为保险起见，小宋决定再查看
火墙日志也表明DNS 服务器是在这段时间崩溃的。他想看看是不是由于内部网络导致的崩
查看防火墙日志
后，小宋将转储记录删除了)。之后，小宋查看了在凌晨1:00～2:00的DNS日志信息。
上检查，除了内核转储（dump）外，没有发现任何值得注意的情况（当服务器运行正常
136
从时间上看，DNS是在凌晨1～2点出的问题，
通过这段信息小宋判断出，此时DNS负载并不大，不会是因为负载过高引起。经过以
SFail=6SFErr=0SNaAns=21753SNXD=10276
RFwdR=4836RDupR=51RFail=159RFErr=0RAXFR=0RLame=175ROpts=0SSysQ=2082Sans=26234
PRT=11204MX=1173TXT=4AAAA=32ANY=4956
UNIX/Linux 网络日志分析与流量监控
222222222222222222222222222222222222222Z
Apr 23 01:35:00 DNSserver name[1423]:XSTATS 977797432 976760631 RR=7629 RNXD=1368
Apr2301:35:00DNSserver named[1423]:NSTATS9777974329767606310=2A=13192CNAME=321
111
+
t
-
t
L
echo
2020202020
T
88883
一
一
一
T
1
8888
L
00
567
6
6
6
16666666662616262626262666666666112662626262626262626266
一
小宋先查看了内部防火墙日志。内部防
一
22
2222
22
222
---
## Page 160
外部防火墙
经遭到入侵，为了查明事件的真相，他决定请教安全顾问。
的内容。
小宋向安全顾问提供了防火墙的规则。
外部防火墙规则设置如下：
很明显，这是黑客安装的某种后门程序，便于他访问那台计算机。小宋确信他的网络已
随后，小宋再次从结果中查看了内部防火墙日志，这次范围是从凌晨2:00到上午7:00
外部防火墙日志在2:00～10:15有几条问题日志：
这些日志显示开始连进某台计算机。在DNS 服务器崩溃前有几个可疑的连接。随后，
小宋试着连接在DNS服务器上的端口31337：
内部防火墙日志（凌晨2:03时的重要日志）：
block any from outside to inside notification_level40;
#blockeverythingelse
accept anyfrom insidenotification_level12;
#allow all internal connections to go outside
accept allfromany to192.168.150.171 notification_level11;
accept all from any to192.168.150.172notification_level 10;
#allow all incoming connections to theDNS server
uid=0(root) gid=0(root)
#id
Escape character is'J.
Connected to DNS.company.com (192.168.150.172).
Trying 192.168.150.172
#telnet 192.168.150.17231337
Apr 2307:29:11 accept TCP172.20.14.1:1598->192.168.150.172:31337
Apr 2305:25:31 accept TCP172.20.14.1:1401->192.168.150.172:31337
Apr 23 03:37:54 accept TCP 172.20.14.1:1239->192.168.150.172:31337
SG
5
accep
1
omol
2626
2626252626
2
1388
150.
55
192,168.150.17->192.168.150.173
172:1025-
2:
1025
S19
262626
168.
1888
第4章DNS系统故障分析137
器茶
150.
50
173:6000
3
021.8
---
## Page 161
192.168.150.171，即Web服务器，却允许通过。
地发起一次主动的TCP端口扫描。
可以很清楚地看到。
去脉。由于没有网络流量的日志记录，有些地方安全顾问只能猜测攻击者究竟做了什么。
经过一段时间的研究与分析，安全顾问终于根据各种支离破碎的线索掌握了整个攻击的来龙
取证分析
互动问答
内部防火墙（NAT）宜审）
138UNIX/Linux 网络日志分析与流量监控
000
小宋的防火墙规定：拒绝对 192.168.150.170 的 Icmp_echo（ping）流量通过，但对
很明显，攻击者首先 ping主机，试探它的连通性。如果主机有反应，那么他就有选择
凌晨1:00~2:00的外部防火墙日志：
首先，攻击者通过扫描小宋的网络收集了一些可利用信息，这一点在外部防火墙日志中
小宋将 DNS 事故的整个过程告诉安全顾问，并在系统中赋予安全顾问所需访问权限。
4.
？
1．攻击者最初是怎样进入网络的？
通过前面的信息，你能否回答下面的问题：
小宋并没有发现什么问题，那么接下来安全顾问会如何处理呢？
内部防火墙设置规则如下：
H
小宋是如何判断DNS负载情况的？
2323232323232323
这次DNS故障中的关键因素是什么？
这次事故的事件顺序是怎样的？
Apr 23 01:00:02 accept ICMP echoreq.172.20.14.1->192.168.150.171
Apr 23 01:00:01 blockICMP echo req.172.20.14.1->192.168.150.170
block any from outside to inside notification_level 40;
#block everything else
accept any from 192.168.150.172 to inside notification_level 11;
accept any from 192.168.150.171 to inside notification_ level 10;
#allow connectionsfrom theDMZ back into the internal network
accept all from inside notification_level 1;
#allow all outgoingconnectionsfrom theinternal network
01:00:04
01:0
01:00:0
01:00:03
01:0
01:0
00:04
00:0
00
accep
accept
2
222
222
1350
2
222
1071
220
070
069->19
->19
222
262626
6
26
171:2
L
从再末小，
用
---
## Page 162
全顾问发现小宋的服务器就是如此：
确定主机运行的 BIND 版本。大多数 DNS 服务器阻止了对版本信息的检索。经过验证，
登录。
析扫描结果并计划下一步行动的出发点。开始，攻击者连接了Telnet服务，可能是尝试性