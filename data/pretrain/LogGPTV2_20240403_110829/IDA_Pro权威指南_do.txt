 module_info_t modinfo;
get_first_module(&modinfo);
return modinfo.base; 
GetFirstStrucIdx
return get_first_struc_idx();
GetFixupTgtDispl
 fixup_data_t  fd;
get_fixup(ea, &fd);
return fd.displacement; 
GetFixupTgtOff
 fixup_data_t  fd;
get_fixup(ea, &fd); 
return fd.off 
GetFixupTgtSel
fixup_data_t  fd;
get_fixup(ea, &fd);
return fd.sel; 
GetFixupTgtType
 fixup_data_t  fd;
get_fixup(ea, &fd);
return fd.type; 
GetFlags
getFlags(ea);
GetFpNum
//*** undocumented function
char buf[16];
union {float f; double d; long double ld} val;
get_many_bytes(ea, buf, len > 16 ? 16 : len);
ph.realcvt(buf, &val, (len >> 1) - 1);
return val; 
GetFrame
//macro, see GetFunctionAttr
GetFrameArgsSize
//macro, see GetFunctionAttr
GetFrameLvarSize
//macro, see GetFunctionAttr
GetFrameRegsSize
//macro, see GetFunctionAttr
GetFrameSize
return get_frame_size(get_func(ea));
GetFuncOffset
int flags = GNCN_REQFUNC | GNCN_NOCOLOR;
get_nice_colored_name(ea, buf, sizeof(buf),flags);
return qstrdup(buf); 
GetFunctionAttr
func_t  * f = get_func(ea);
return internal_get_attr(f, attr); 
GetFunctionCmt
return get_func_cmt(get_func(ea), repeatable);
GetFunctionFlags
//macro, see GetFunctionAttr
GetFunctionName
get_func_name(ea, buf, sizeof(buf));
return qstrdup(buf); 
GetHashLong
netnode n(id).hashval_long(idx);
GetHashString
netnode n(id).hashval(idx, buf, sizeof(buf));
return qstrdup(buf); 
GetIdaDirectory
 qstrncpy(buf, idadir(NULL), sizeof(buf));
return qstrdup(buf); 
GetIdbPath
 qstrncpy(buf, database_idb, sizeof(buf));
return qstrdup(buf); 
GetInputFile
 get_root_filename(buf,  sizeof(buf));
return qstrdup(buf); 
GetInputFilePath
 RootNode.valstr(buf,  sizeof(buf));
return qstrdup(buf); 
GetInputMD5
 uint8_t md5bin[16];
char out[1024];
char  * outp = out; 
int len = sizeof(out);
out[0] = 0;
RootNode.supval(RIDX_MD5, md5bin, sizeof(md5bin));
for (int j = 0; j 
return qstrdup(out); 
GetLastBmask
return get_last_bmask(enum_id);
GetLastConst
return get_last_const(enum_id, bmask);
GetLastHashKey
 netnode n(id).hashlast(buf, sizeof(buf));
return qstrdup(buf); 
GetLastIndex
return netnode n(id).suplast(tag);
GetLastMember
return get_struc_last_offset(get_struc(id));
GetLastStrucIdx
return get_last_struc_idx();
GetLineNumber
return get_source_linnum(ea);
GetLocalType
const type_t  * type;
const p_list  * fields;
get_numbered_type(idati, ordinal, &type, &fields,
                  NULL, NULL, NULL);
char  * name = get_numbered_type_name(idati, ordinal);
qstring res;
print_type_to_qstring(&res, 0, 2, 40, flags, idati, type,
                      name, NULL, fields, NULL);
return qstrdup(res.c_str()); 
GetLocalTypeName
return qstrdup(get_numbered_type_name(idati, ordinal));
GetLongPrm
if (offset &lt= 188)
   return * (int* )(offset + (char* )&inf); 
GetManualInsn
 get_manual_insn(ea, buf, sizeof(buf));
return qstrdup(buf); 
GetManyBytes
uint8_t * out = (uint8_t* )qalloc(size + 1);
if (use_dbg)
   if (dbg && (dbg->may_disturb() || get_process_state() read_memory(ea, out, size);
   else
      qfree(out);
      out = NULL;
else
   get_many_bytes(ea, out, size);
return out; 
GetMarkComment
curloc loc.markdesc(slot, buf, sizeof(buf));
return qstrdup(buf); 
GetMarkedPos
return curloc loc.markedpos(&slot);
GetMaxLocalType
return get_ordinal_qty(idati);
GetMemberComment
tid_t m = get_member(get_struc(id), offset)->id;
netnode n(m).supstr(repeatable ? 1 : 0, buf, sizeof(buf));
return qstrdup(buf); 
GetMemberFlag
return get_member(get_struc(id), offset)->flag;
GetMemberName
tid_t m = get_member(get_struc(id), offset)->id;