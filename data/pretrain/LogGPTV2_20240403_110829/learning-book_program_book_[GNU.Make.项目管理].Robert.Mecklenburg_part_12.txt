此规则将会使用C编译器将目标文件组合成可执行文件。C编译器的默认值为gcc。
LDFLAGS和TARGET_ARCH并不具备默认值。LDFLAGS用来保存链接选项，像-L标
记：而LOADLIBES和LDLIBS变量中则包含了所要链接的程序库列表。这两个变量被
同时纳人主要是为了具有较好的可移植性。
以上就是make变量的快速浏览（quicktour）。事实上还有很多，不过这些内容已经能
够让你大致了解变量与规则的整合方式。另一群变量与TeX和它的一组规则有关。递归
式make是变量所提供的另一种功能，我们将会在第六章探讨此议题。
---
## Page 82
第四章
函数
GNUmake支持内置函数以及用户自定义函数。函数调用（functioninvocation）看起
来非常像变量引用（variablereference），不过前者包含了--个或多个被逗号隔开的参数。
大部分内置数扩展后多半会被赋值给一个变量或是传递给一个subshell。用户自定义函
数则存储在变量或宏中，而且会接收调用者（caller）传来的一个或多个参数。
用户自定义函数
用户自定义函数能够将命令序列存储在变量里，让我们得以在makefile中使用各种应用
程序。在下面的例子中我们可以看到一个用来终止进程的宏（注1）：
AWK:=awk
KILL:=ki11
$（kill-acroread)
define kill-acroread
ps-W1
$（AWK)BEGIN
/AcroRd32/{
print"Killing"SS3;
endef
注1：
你可能会觉得奇怪：为什么要在makefile里做这件事？嗯、在Windows上，一个文件被
打开时会被锁住以避免其他的进程对它进行写入的动作。在本书编写期间，PDF文件常
会被AcrobatReader锁住以避免我的makefile更新该PDF文件。所以我才会为一些工作
目标加入此命令，以便在我想要更新被锁住的文件之前，先终止运行中的Acrobat
Reader.
72
---
## Page 83
函数
73
（这个宏在编写时使用的是Cygwin工具（注2），因此我们所查找的程序名称以及ps和
ki11的选项都不是标准Unix的形式。）为了终止一个进程，我们把ps的输出使用管道
重定向至awk。接着，awk脚本会以AcrobatReader在Windows上的程序名称来查找
它，如果它正在运行，就会终止相应的进程。我们在awk脚本中使用了FIELDWIDTHS
这个功能，好让程序名称以及它的所有参数能够被作为单一字段来处理。这可让你正确
输出完整的程序名称和参数，即使其中包含内置的空格。在awk中，字段引用会被依次
写成s1、$2等。如果我们没有为awk脚本加上引l号，那么这些东西将会被视为make
变量。我们可以通过“以额外的美元符号规避Sn中的美元符号（也就是SSn）”的方式
要求make将Sn引l用传递给awk，而不要将它本身扩展。make将会看到两个美元符号，
然后将之缩减成一个美元符号并把它传递给subshell。
宏很好用对于经常要用的脚本，可以使用define指令以避免重复。但是这么做并不完
美：如果我们要终止AcrobatReader以外的进程，该怎么办？我们还需要用重复的脚本
来定义另一个宏？不！
你可以传递参数给变量和宏，这样每次的扩展结果都可以不一样。宏的参数在宏定义的
主体中可依次以s1、S2等进行引用。要让我们的kil1-acroread函数使用参数，只
需要加人一个搜索参数就行了：
AWK
:=awk
KILL
:=kill
KILL_FLAGS :=-f
PS
:=ps
M-=:SSd
PS_FIELDS:=*947100*
#S（call kill-program,awk-pattern)
define kill-program
@$(PS)S(PS_FLAGS)1
/$1/
print*Killing"$S3;
}
enidef
我们使用了一个参数引l用S1来取代awk的搜索模式/AcroRd32/。注意宏参数S1与
awk字段参数SS1之间的细微差异，记住“哪个程序是变量引I用的接受者”是一件非常
注2：Cygwin工具包含了许多可以在Windows上使用的标准GNU和Linux程序，像编译器套
件（compilersuite）、X1lR6、Ssh甚至是inetd。之所以能够这样、是因为在它的兼
容程序库里包含了由Win32API函数实现出来的Unix系统调用。这是一项惊人的成就，
建议使用看看。你可以到http：//www.cygwin.com下载此工具。
---
## Page 84
74
第四章
重要的事。这个函数还可以更完美，我们可以为它取个适当的名字，并使用变量来取代
所以让我在如下的过程中使用此函数：
FOP
:= org.apache.fop.apps.Fop
FOP_FLAGS:=-q
FOP_OUTPUT:=>/dev/nu11
.pdf:s.fo
$(call ki1l-program,AcroRd32)
$（JAVA)$（FOP)$（FOP_FLAGS）$word字样的命令将会产生创建word文件的副作用。）对此
makefile运行make，你将会看到如下的结果：
Smake
PWD =/test/book/out/ch03-findstring-1
#
#
#
#
#/test/book/out
#
如你所见，每项针对S（PWD）的测试几乎都没有返回任何东西，直到我们测试到相