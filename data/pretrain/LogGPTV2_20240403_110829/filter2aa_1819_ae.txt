import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.Key;
import java.security.MessageDigest;
import java.util.Arrays;
public class Main {
    private static int transform(byte temp) {
        int tempInt = temp;
        if(tempInt > 8 & 0xFF);
            result[j + 1] = (byte)(content[i] >> 16 & 0xFF);
            result[j] = (byte)(content[i] >> 24 & 0xFF);
            ++i;
        }
        return result;
    }
    private static int[] byteToInt(byte[] content, int offset) {
        int[] result = new int[content.length >> 2];
        int i = 0;
        int j;
        for(j = offset; j > 5) + b;
            z += (y > 5) + d;
//            System.out.println(y);
//            System.out.println(z);
        }
        tempInt[0] = y;
        tempInt[1] = z;
//        System.out.println("-----------");
//        System.out.println(y);
//        System.out.println(z);
        return intToByte(tempInt, 0);
    }
    public static byte[] dec11(byte[] content, int offset, int[] ooxxooxxoo) {
        int[] tempInt = byteToInt(content, offset);
        int y = tempInt[0];
        int z = tempInt[1];
//        System.out.println("-----------");
//        System.out.println(y);
//        System.out.println(z);
        int sum = 0;
        for(int jj = 0;jj> 5) + b;
////            z += (y > 5) + d;
//            System.out.println(y);
//            System.out.println(z);
            z -= (y > 5) + d;
            y -= (z > 5) + b;
            sum -= 305419896;
        }
        tempInt[0] = y;
        tempInt[1] = z;
        return intToByte(tempInt, 0);
    }
    public static byte[] de11(byte[] info) {
        String ooxxooxxoo = "youaresoclever!!";
        int j;
        for(j = 0; j > 5) + b;
////            z += (y > 5) + d;
//            System.out.println(y);
//            System.out.println(z);
            z -= (y > 5) + d;
            y -= (z > 5) + b;
            sum -= 0x515374A1;
        }
        tempInt[0] = y;
        tempInt[1] = z;
        return intToByte(tempInt, 0);
    }
    public static byte[] de22(byte[] info) {
        String ooxxooxxoo = "zipMatcher";
        int j;
        for(j = 0; j < 16; ++j) {
            ooxxooxxoo = ooxxooxxoo + "!";
        }
        byte[] ooxxooxxooarray = ooxxooxxoo.getBytes();
        int[] ooxxooxxooxx = new int[16];
        int i;
        for(i = 0; i < 16; ++i) {
            ooxxooxxooxx[i] = ooxxooxxooarray[i];
        }
        if(info.length % 8 != 0) {
            return null;
        }
        byte[] result = new byte[info.length];
        int offset;
        for(offset = 0; offset < result.length; offset += 8) {
            System.arraycopy(dec22(info, offset, ooxxooxxooxx), 0, result, offset, 8);
        }
        return result;
    }
    public static byte[] encrypt1(byte[] info) {
        String ooxxooxxoo = "youaresoclever!!";
        int j;
        for(j = 0; j < 16; ++j) {
            ooxxooxxoo = ooxxooxxoo + "!";