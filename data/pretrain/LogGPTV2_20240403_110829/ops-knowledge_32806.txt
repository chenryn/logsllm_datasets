User: Use Python to write a script to implement batch operations on multiple servers
Assistant: basic framework is provided here, which can be modified and customized according to the actual situation. 1. Define the server address, username and password: ``` servers = [ {"host": "192.168.1.1", "user": "admin", "password": "123456"}, {"host": " 192.168.1.2", "user": "admin", "password": "123456"}, {"host": "192.168.1.3", "user": "admin", "password": "123456"} ] ``` 2. Functions for creating SSH connections and executing commands: ``` import paramiko def ssh_connect(server): ssh = paramiko.SSHClient() ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) ssh.connect(server["host "], username=server["user"], password=server["password"]) return ssh def ssh_exec(ssh, command): stdin, stdout, stderr = ssh.exec_command(command) result = stdout.read() return result.decode() ``` 3. Loop through the server list and perform the required operations: ``` for server in servers: ssh = ssh_connect(server) result = ssh_exec(ssh, "ls") print("Server: {}, Result: {}".format(server["host"], result)) ssh.close() ``` The above code implements the `ls` command on each server and returns the result. According to actual needs, it can be modified, for example: - Select the command to be executed according to the input parameters; - Read the list of commands to be executed and execute them one by one; - Execute script files; - Upload and download files, etc.