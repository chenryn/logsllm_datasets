• 路径编码
 /test.asp
= /%74%65%73%74%2E%61%73%70
• 參數编码
 /etc/passwd
= 
%2F%65%74%63%2F%70%61%73%73%77%64
空白字元的替代方案
 常見替代字串
•
(空白) = %20
• \t (TAB) = %09
• \n = %0A
• \r = %0D
 in SQL
• /**/  for MSSQL
 in XSS
• /**/ in some case
模糊路径
 自我參考目錄
• /test.asp == /./test.asp
 双目錄分隔线
• /test.asp == //test.asp
 目錄跳脱
• /etc/passwd == /etc/./passwd
• /etc/passwd ==/etc/xx/../passwd
 目錄分隔符号
• ../../cmd.exe == ..\..\cmd.exe
较复杂的编码
 Double Decoding
•
/
= %2F
= %252F
 Overlong characters
•
0xc0 0x8A
= 0xe0 0x80 0x8A
= 0xf0 0x80 0x80 0x8A
= 0xf8 0x80 0x80 0x80 0x8A
 Unicode Encoding
•
/test.cgi?foo=../../bin/ls
= /test.cgi?foo=..%2F../bin/ls
= /test.cgi? foo=..%c0%af../bin/ls
Null-Byte Attacks
 %00
 Null Byte (0x00) 于程式语言之判断函數中
常用以代表字串中止
• strcmp()
• strcpy()
• sprintf()
• …. etc
 许多字串检查机制当侦测到 0x00 即停止对后方
字串作检查
• /aa.php?cmd=ls%00cat%20/etc/passwd
Negative Checks
正常的编码原理是这样
 字元编码
• A
=>
%41
• &
=>
%26
• ‘
=>
%27
 正常Scope
• %00 ~ %FF
 So
• select
=>  %73%65%6C%65%63%74
Magic %
 当 % 后方兩码不在正常范围 …
• select
 = sele%ct
 = s%elect
• … 其他例子请自行延伸
 可用于绕过所有黑名单检查机制 (如SQL
、XSS/… etc)
 程式语言自动砍掉无效的 % !!!
 *** 仅 ASP 语言具有此特性 ***
Why Bypass？
;drop table 
xxx
;dr%op
%table xxx
;dr%op
%table xxx
select * 
from …
sele%ct * 
fr%om …
sele%ct * 
fr%om …
ASP 解讀为
WAF 看到
注入语法
From blog.iis.net
 一般网页应用程式中，同一个页面、同名
的參數只有一个
• http://www.google.com.tw/search
?hl=zh-TW&q=test
 插入多个同名參數，各平台的反应不一致
• 将各參數组合起來
• 取第一个
• 取最后一个
• 成为阵列 (ARRAY)
HTTP Parameter Pollution
Server enumeration
Special Check
 SQL
 XSS
使用方式
 将欲注入的攻击字串，拆散于同名称之參
數中
 经过 WAF 时，由于并未中到任何特征码
，因此予以放行
 进到程式裡，将同參數之字串组合后，即
变回原攻击码
Bypass SQL
 多數 WAF 针对含有SQL 特征的參數会特别深
入检查
• ‘
• ;
• SQL 注释
 --
 /*
 #
 设法于攻击时不带以上特征
• 攻击數字型參數 (不需 ‘ )
• 自行补足后方 SQL 语法，不使用注释符号
• Magic %
Bypass XSS
 HTML/CSS/Java Script之语法非常靈
活
 大部份 WAF 无法内建所有的pattern (
容易误挡)
 稍微变形一下即可绕过
 XSS Cheat Sheet
• http://ha.ckers.org/xss.html
Positive Checks
Positive Check ？
 多數 WAF 虽有自动学习功能
 可分析网站正常使用情况下的
• HTTP Method
• URL
• Parameters
• Form
• Cookies
 …. 但是因为管理员很懶，绝大多數都没有
去设 Orz
如果有设的情况
 规则一 –
• http://www.test.com/news.asp
• id
• 限制
 格式为 整數 (  ^\d+$ )
 长度为 1 ~ 20
 规则二 –
• http://www.test.com/login.asp
• Username
• 限制
 格式为英文+數字+底线 (  ^[_a-zA-Z0-9]+$ )
 长度为 1 ~ 12
 …… 很多条類似的规则
绕过的方法
 …
 …
 不 要 中 到 检 查 的 条 件 ！
• Policy Condition
• URL
• Parameter
• … etc
Why ?
 大网站的 URL/參數 太多太多了
 没设到的地方，WAF不知道格式为什么，
只好先放过、再学习
 以先前提到之字串修改、编码、糢糊路径
、Magic %等方法，不要中到WAF中指
定之条件即可
实际案例
 www.test.com = IP: x.x.x.x
• 设定当
网址 == www.test.com
或
网址 == x.x.x.x
时，套入某profile作检查
 绕过方法
• 不带 Host Header
• 連接 www.test.com:80
• 修改 hosts档，带入任何 Host Header
网页应用程式安全防护
Define
Design
Develop/Test
Deploy
Maintain
Security
requirements
Risk
analysis
Static
analysis
(tools)
Dynamic
testing
Design
review
风险分析
程式码静态检查
渗透测试 &
网站弱点扫描
Continuous
monitoring
网页应用程式防火墙
安全程式教育训練
DEMO
Q & A
Reference
 WAF Reviews
• http://sites.google.com/a/wafreviews.com/home
/Home
 OWASP AppSecEU09 Poland
• HTTP Parameter Pollution
• Web Application Firewalls: What the vendors do 
NOT want you to know
 WAFEC, or how to choose WAF technology
 Split and Join
• http://www.milw0rm.com/papers/340
 SQL Injection Hijinks
• http://blogs.technet.com/neilcar/archive/2008/1
0/31/sql-injection-hijinks.aspx