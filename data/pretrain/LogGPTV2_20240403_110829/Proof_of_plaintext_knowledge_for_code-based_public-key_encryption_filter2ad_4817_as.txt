### Optimized Text

#### Lemma 29: Proof of Security Reduction
Recall from Lemma 3 that for any matrix distribution \( D_k(p) \), the \( D_k(p) \)-MDDH assumption implies the \( U_k(p) \)-MDDH assumption.

**Proof of Lemma 29.**
In this proof, we switch the set \(\{[r]_2, [h z_i, r]_2\}_{i \in H_S}\) used by the oracle \( O_{\text{Keygen}} \) to \(\{[r]_2, [e z_i]_2\}_{i \in H_S}\), where \( z_i \leftarrow_R Z_p^k \). Here, \( H_S \) denotes the set of honest slots, defined as \( H_S := [n] \setminus C_S \).

This switch is justified because \(\{[r]_2, [h z_i, r]_2\}_{i \in H_S} \in G^{(k+h)}\) is identically distributed to \([U r]_2\) where \( U \leftarrow_R U_{k+h,k}(p) \) (assuming the upper \( k \) rows of \( U \) are full rank), which is indistinguishable from a uniformly random vector over \( G^{k+h} \). This follows from the \( U_{k+h,k}(p) \)-MDDH assumption.

To perform this switch simultaneously for all calls to \( O_{\text{Keygen}} \), i.e., to switch \(\{[r_j]_2, [h z_i, r_j]_2\}_{i \in H_S, j \in [Q_0]}\) to \(\{[r_j]_2, [e z_{j,i}]_2\}_{i \in H_S, j \in [Q_0]}\) where \( e z_{j,i} \leftarrow Z_p \) and \( r_j \leftarrow_R Z_p^k \), we use the \( Q_0 \)-fold \( U_{k+h,k}(p) \)-MDDH assumption. Specifically, we construct a PPT adversary \( B' \) such that:
\[ \text{Adv}_{G_1, \beta}^{\text{IP}}(A) - \text{Adv}_{G_2, \beta}^{\text{IP}}(A) \leq \text{Adv}_{Q_0-U_{k+h,k}(p)-\text{mddh}}^{G_2, B'}(λ). \]

This, together with Corollary 1 (\( U_k(p) \)-MDDH implies \( Q_0 \)-fold \( U_{k+h,k}(p) \)-MDDH), implies the lemma.

**Simulation of \((pk, \{ct_i\}_{i \in I}, \{ek_i\}_{i \in C_S})\):**
- Upon receiving a \( Q_0 \)-fold \( U_{k+h,k} \)-MDDH challenge \(\left(P_G, [U]_2 \in G^{(k+h) \times k}\right)\), \( B' \) samples \((ggpk, td) \leftarrow \hat{GSetup}(1^\lambda, F_{m+k,X,Y})\).
- For all \( i \in [n] \), it samples \((f ek_i, g msk_i) \leftarrow \hat{Setup}(1^\lambda, ggpk, F_{m+k,X,Y})\).
- It sets \( pk := ggpk \) and returns \((pk, \{ct_i\}_{i \in I}, \{ek_i\}_{i \in C_S})\) to \( A \).

**Simulation of \( O_{\text{Keygen}}(y_1 \oplus \cdots \oplus y_n) \):**
- On the \( j \)-th query \( y_1 \oplus \cdots \oplus y_n \) of \( A \), \( B' \) computes the \( k \)-upper components of \( h_j \in Z_{k+n} \).
- For all \( i \in C_S \), it computes \( d_i := \text{KeyGen}'(ggpk, g msk_i, y_i k r_j) \).
- For all \( i \in H_S \), it computes \([d_i] := \hat{\text{KeyGen}}(td, g msk_i, [y_i k r_j]_2, [h x^\beta_i, y_i + h_j k z_i]_2)\), relying on the linearity of \(\hat{\text{KeyGen}}(td, g msk, \cdot, \cdot)\).

When \( [h_1 \oplus \cdots \oplus h_{Q_0}]_2 \) is a real MDDH challenge, \( B' \) simulates game \( G_1, \beta \); otherwise, it simulates game \( G_2, \beta \).

### Lemma 30: Game G2,0 to G2,1
**Lemma 30:**
\[ \text{Adv}_{G_2,0}(A) = \text{Adv}_{G_2,1}(A). \]

**Proof of Lemma 30.**
We show that \( G_2, \beta \) does not depend on \( \beta \) using the fact that for all \( y_1 \oplus \cdots \oplus y_n \in (Z_p^m)^n \) and for all \(\{x_b^i\}_{i \in [n], b \in \{0,1\}}\), the following are identically distributed:
\[ \{e z_i\}_{i \in H_S} \quad \text{and} \quad \{e z_i - h x^\beta_i, y_i\}_{i \in H_S}, \]
where \( e z_i \leftarrow_R Z_p \) for all \( i \in H_S \).

For each query \( y_1 \oplus \cdots \oplus y_n \), \( O_{\text{Keygen}} \) picks values \( e z_i \leftarrow_R Z_p \) for \( i \in H_S \) independent of \( y_1 \oplus \cdots \oplus y_n \) and the challenge \(\{x_b^i\}_{i \in [n], b \in \{0,1\}}\). Therefore, we can switch \( e z_i \) to \( e z_i - h x^\beta_i, y_i \) for all \( i \in H_S \) without changing the distribution of the game.

Thus, for all \( i \in H_S \), \( O_{\text{Keygen}} \) computes \( d_i \leftarrow \hat{\text{KeyGen}}(td, g msk_i, y_i k r, e z_i) \), and the value \([z]^T\) computed by \( O_{\text{Keygen}} \) does not depend on \( \beta \). Finally, for all \( i \in C_S \), \( O_{\text{Keygen}} \) computes \( d_i := \text{KeyGen}'(ggpk, g msk_i, y_i k r) \), which also does not depend on \( \beta \). Therefore, \( G_2, \beta \) is independent of \( \beta \).

### Remarks
**Remark 10: Decryption Capabilities**
- The simulated secret keys will correctly decrypt a simulated ciphertext.
- Unlike schemes proven secure via the standard dual system encryption methodology, a simulated secret key will incorrectly decrypt a normal ciphertext. This is not a problem in the private-key setting.

**Remark 11: Naive Argument Inadequacy**
- A naive hybrid argument across the \( n \) slots for the challenge ciphertext would introduce extraneous restrictions on the adversary’s queries.
- We overcome this limitation by using simulation-based security.

### Theorem 10: Many-yy-IND-static Security of MIFE
**Theorem 10:**
Let \( yy \in \{\text{AD, SEL}\} \). Suppose FE is many-yy-IND secure and MIFE is one-yy-IND-static secure. Then, MIFE is many-yy-IND-static secure.

**Corollary 2:**
The scheme MIFE from Figure 4.1 is many-SEL-IND secure, assuming the underlying FE is many-SEL-IND secure.

**Proof Overview:**
1. Switch encryptions of \( x_{1,0}^1, \ldots, x_{1,0}^n \) to those of \( x_{1,1}^1, \ldots, x_{1,1}^n \).
2. For the remaining ciphertexts, switch from an encryption of \( x_{j,0}^i - x_{1,0}^i \) to that of \( (x_{j,0}^i - x_{1,0}^i) + x_{1,1}^i \).
3. Use the many-yy-IND security of FE to switch from encryptions of \( (x_{2,0}^i - x_{1,0}^i) + x_{1,1}^i, \ldots, (x_{Q_i,0}^i - x_{1,0}^i) + x_{1,1}^i \) to those of \( (x_{2,1}^i - x_{1,1}^i) + x_{1,1}^i, \ldots, (x_{Q_i,1}^i - x_{1,1}^i) + x_{1,1}^i \).

**Proof of Theorem 10:**
We proceed via a series of games, described in Figure 4.5. Let \( A \) be a PPT adversary. For any game \( G \), we denote by \( \text{Adv}_G(A) \) the probability that the game \( G \) outputs 1 when interacting with \( A \).

**Game G0:**
- According to Definition 21, \( \text{Adv}_{\text{many-SEL-IND}}^{\text{MIFE,A}}(\lambda) = |\text{Adv}_{G_0}(A) - \text{Adv}_{G_2}(A)| \).

**Game G1:**
- Replace the challenge ciphertexts to \( ct_j^i = \text{Enc}(pk, ek_i, x_{j,0}^i - x_{1,0}^i + x_{1,1}^i) \) for all \( i \in [n] \) and \( j \in [Q_i] \).
- Using the one-yy-IND security of MIFE, there exists a PPT adversary \( B_1 \) such that:
  \[ \text{Adv}_{G_0}(A) - \text{Adv}_{G_1}(A) \leq \text{Adv}_{\text{one-yy-IND}}^{\text{MIFE,B1}}(\lambda). \]

**Transition Summary:**
- **Game 0:** Encryptions of \( x_{j,0}^i \).
- **Game 1:** Encryptions of \( x_{j,0}^i - x_{1,0}^i + x_{1,1}^i \).
- **Game 2:** Encryptions of \( x_{j,1}^i - x_{1,1}^i + x_{1,1}^i \).

This completes the proof.