●
●
● Tortoise, not running relays
Tortoise, running relays
n
o
i
t
c
a
r
F
e
v
i
t
a
u
m
u
C
l
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
● Tortoise, not running relays
Tortoise, running relays
0
50
100
150
200
250
0
50
100
150
200
250
KBps
KBps
Figure 5: Bandwidth improvements seen by clients that choose to run routers, in a network running Tortoise. The experiments
represented in the two graphs differ only in the number of clients who choose to run routers.
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0
1
.
8
.
0
6
0
.
4
.
0
2
.
0
0
0
.
Benefit of Additional Relays
15 relays
15 relays + 20 client relays
15 relays + 40 client relays
0
50
100
150
200
Average bandwidth (KBps)
Figure 6: Average bandwidth seen by all clients in an unmod-
iﬁed network, and unmodiﬁed networks with additional client
relays.
to the universal rate limit since the bridges are not listed in Tor di-
rectories.
We propose two methods for adapting Tortoise to better sup-
port bridges. For both solutions, we consider a relay that wishes
to determine whether an upstream connection is from a client or a
bridge: clients should be subject to rate limits, while bridges should
be exempt, but only if they are actually forwarding trafﬁc.
One potential approach is for the relay to use a separate bridge to
attempt to create a Tor circuit through the node in question. If the
circuit is successfully extended, then the node must be a bridge. If
the circuit cannot be extended, the node can safely be assumed to
be a client. Importantly, since a bridge (known only to the relay) is
used to extend the circuit, the node in question cannot behave as a
bridge only to the relay (i.e., to be falsely detected as a bridge in or-
der to evade the rate limit). The difﬁculty with this approach is that
if the node is a bridge, its bridge listening port will not be immedi-
ately known to the relay. However, the relay can attempt to extend
could
reveal
their
a circuit (via the bridge) using commonly chosen ports.2 Addi-
tionally, Tor would have to be slightly modiﬁed to allow bridges to
extend circuits to other bridges.
bridges
identities
Alternatively,
to
independently-chosen trusted relays. These relays would be aware
of the bridges’ status and will not subject them to the rate limit. The
challenge with this approach is that since clients select the anony-
mous path, bridges would additionally have to recommend a second
hop (the trusted relay) that is not subject to rate limiting. We leave
the study of these and other potential strategies for supporting Tor
bridges as a future research direction.
Tortoise relies on accurate directories. Only the relays that
are marked STABLE and FAST in the Tor directory are exempt from
Tortoise’s universal rate limit. A client may attempt to cheat the
system by advertising a relay that is neither FAST nor STABLE, but
is marked as such by the directory. Since the directories periodi-
cally poll the relays to measure their failure rates, a dishonest client
cannot easily fake a STABLE rating. It can, however, report a false
(high) bandwidth to cause a directory to rate it as FAST.
Several techniques have been recently proposed to avoid the re-
liance on relays’ self-reported capacities. For example, Snader and
Borisov introduce an opportunistic measurement system in which
relays report the observed bandwidth of their peers. Directory
servers then advertise the median of these measurements [28]. Perry
has suggested an alternative technique in which measurement au-
thorities perform empirical measurements of relays’ bandwidths [24].
Additionally, a node that wishes to gain exemption from the uni-
versal rate limit may contribute only the minimum amount of band-
width such that they receive the FAST ﬂag. The FAST tag is applied
to the fastest 87.5% of routers (as of this writing, this requires a
bandwidth of only 15KBps). To better ensure that clients who also
run relays are meaningfully contributing to the network, a poten-
tial reﬁnement to Tortoise’s approach is to additionally apply a rate
limit on relays. Here, relays’ bandwidths would be capped based on
the amount of bandwidth that they provide to the network. Hence,
the improvement in client bandwidth will be proportional to the
amount of bandwidth that the client’s OR serves the network.
Tortoise is susceptible to Sybil-style attacks. Tortoise is vul-
2Many bridges choose to run on port 443, since HTTPS trafﬁc is of-
ten allowed through ﬁrewalls, and like HTTPS, Tor uses SSL/TLS
to provide conﬁdentiality.
(cid:2)(cid:1)(cid:3)
Benefit of Additional Relays (100KBps rate limit)
Benefit of Additional Relays (200KBps rate limit)
n
o
i
t
c
a
r
f
e
v
i
t
a
u
m
u
C
l
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
15 relays
15 relays + 20 client relays
15 relays + 40 client relays
No rate limit, no extra relays
n
o
i
t
c
a
r
f
e
v
i
t
a
u
m
u
C
l
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
15 relays
15 relays + 20 client relays
15 relays + 40 client relays
No rate limit, no extra relays
20
40
60
80
100
120
20
40
60
80
100
120
Average bandwidth (KBps)
Average bandwidth (KBps)
Figure 7: Average bandwidth rates when additional relays join the network when a 100KBps (left) or 200KBps (right) universal rate
limit is imposed.
Benefit to Network Capacity (100KBps Rate Limit)
Benefit to Network Capacity (200KBps Rate Limit)
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
Tor, 900 clients
Tor, 1080 clients
Tortoise, 900 clients
Tortoise, 1080 clients
Tor, 900 clients
Tor, 1080 clients
Tortoise, 900 clients
Tortoise, 1080 clients
20
40
60
80
100
20
40
60
80
100
Average bandwidth (KBps)
Average bandwidth (KBps)
Figure 8: Increased capacity with 100KBps (left) and 200KBps (right) universal rate limits.
nerable to Sybil-style [11] attacks in which a client achieves high
bandwidth by multiplexing connections over many Tor circuits. Al-
though each circuit may be individually rate limited, the combined
bandwidth may allow the client to surpass the universal rate limit.
Existing Sybil countermeasures may be applied to mitigate such
attacks against Tortoise.
In particular, guard relays may require
clients to complete periodic cryptopuzzles [18] in order to con-
tinuously forward their trafﬁc. Solving occasional cryptopuzzles
will add only a modest burden to standard clients, but could be
very computationally expensive for misbehaving clients that con-
nect through many guard nodes. Here, the goal is not to disallow
a client from establishing a large number of connections to the Tor
network, but rather to shift the incentives to better motivate compli-
ance with Tortoise’s envisioned model. That is, applying periodic
cryptopuzzles may make it more cost effective to operate an OR
rather than to evade the system’s universal rate limit.
7. RELATED WORK
There are a number of existing approaches that aim to increase
Tor’s performance. We categorize and outline some of these tech-
niques below.
(cid:2)(cid:1)(cid:3)
Prioritizing techniques. Tang and Goldberg recently proposed
replacing Tor’s round-robin circuit scheduler with one that consid-
ers a circuit’s recent usage [29]. Using the exponential weighted
moving average (EWMA), their technique favors bursty circuits