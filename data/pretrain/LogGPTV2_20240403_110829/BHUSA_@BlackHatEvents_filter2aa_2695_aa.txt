#BHUSA @BlackHatEvents
A New Trend for the Blue Team 
Using a Practical Symbolic Engine to Detect Evasive Forms of 
Malware/Ransomware
Hank Chen
Sheng-Hao Ma
Mars Cheng 
@hank0438
@aaaddress1
@marscheng_
TXOne Networks Inc.
#BHUSA @BlackHatEvents
Who are we?
Hank Chen
Sheng-Hao Ma
Mars Cheng
Manager
PSIRT and Threat Research
Threat Researcher
PSIRT and Threat Research
Threat Researcher
PSIRT and Threat Research
• Spoke at Black Hat, RSA Conference, DEFCON, 
SecTor, FIRST, HITB, ICS Cyber Security 
Conference, HITCON, SINCON, CYBERSEC, and 
CLOUDSEC
• Instructor of CCoE Taiwan, Ministry of National 
Defense, Ministry of Education, Ministry of 
Economic Affairs and etc.
• General Coordinator of HITCON 2022 and 2021
• Vice General Coordinator of HITCON 2020
• Spoke at Black Hat, DEFCON, HITB, VXCON, 
HITCON, ROOTCON, and CYBERSEC
• Instructor of CCoE Taiwan, Ministry of National 
Defense, Ministry of Education, and etc.
• The author of the popular security book "Windows 
APT Warfare: The Definitive Guide for Malware 
Researchers"
• Spoke at FIRST Conference in 2022
• Instructor of Ministry of National Defense
• Teaching assistant of Cryptography and Information 
Security Course in Taiwan NTHU and CCoE
Taiwan 
• Member of CTF team 10sec and ⚔TSJ⚔
#BHUSA @BlackHatEvents
Outline
• Introduction
•
Threat Overview
•
The Difficult Problem of Static/Dynamic Malware Detection and Classification 
• Deep Dive into Our Practical Symbolic Engine
•
Related Work
•
Our Practical Symbolic Engine
• Demonstration
•
CRC32 & DLL ReflectiveLoader
•
Process Hollowing 
•
Ransomware Detection
• Future Works and Closing Remarks 
#BHUSA @BlackHatEvents
Outline
• Introduction
•
Threat Overview
•
The Difficult Problem of Static/Dynamic Malware Detection and Classification 
• Deep Dive into Our Practical Symbolic Engine
•
Related Work
•
Our Practical Symbolic Engine
• Demonstration
•
CRC32 & DLL ReflectiveLoader
•
Process Hollowing 
•
Ransomware Detection
• Future Works and Closing Remarks 
#BHUSA @BlackHatEvents
Threat Overview
Malware Type
Virus
Adware
Rootkit
Fileless Malware
Stealth Malware
Malvertising
Ransomware
Spyware
Trojan
Worms
Dropper
ShellCode
#BHUSA @BlackHatEvents
Threat Overview
• Recent Attack Trends – Many Ransomware Family
Ransomware Family
2021 Q2
2021 Q3
2021 Q4
2022 Q1
From 2021 
Q4 to 2022 
Q1
WannaCry
62.38%
46.95%
46.73%
42.23%
Cryptor
4.06%
17.72%
15.91%
13.79%
Locker
10.44%
10.92%
10.57%
13.43%
LockBit
2.10%
4.35%
5.32%
5.89%
Conti
3.49%
3.09%
3.98%
4.34%
Gandcrab
5.03%
5.21%
3.93%
4.19%
Locky
5.59%
3.28%
3.32%
3.69%
Cobra
2.61%
2.83%
2.73%
3.33%
Hive
0.59%
0.79%
1.82%
2.56%
MAZE
1.00%
1.27%
1.69%
2.07%
#BHUSA @BlackHatEvents
The Ransomware Matrix
WannaCry
Ryuk
Lockergoga
EKANS
RagnarLocker
ColdLock
Egregor
Conti v2
Language Check
No
No
No
No
Yes
No
Yes
No
Kill Process/Services
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No
Persistence
Yes
Yes
No
No
No
No
No
Yes
Privilege Escalation
Yes
Yes
No
No
Yes
No
No
No
Lateral Movement
Yes
No
No
No
No
No
No
No
Anti-Recovery
Yes
Yes
Yes
Yes
Yes
No
Yes
Yes
Atomic-Check
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
File Encryption
R-M-W
R-W-M
M-R-W
R-W-M
R-W-M
R-W-M
R-W-M
R-W-M
Partial Encryption
No
Yes
No
No
No
Yes
Yes
Yes
Cipher Suite
AES-128-CBC
RSA-2048
AES-256
RSA-2048
AES-128-CTR
RSA-1024
AES-256-CTR
RSA-2048
Salsa20
RSA-2048
AES-256-CBC
RSA
ChaCha8
RSA-2048
ChaCha8
RSA-4096
Configuration File
Yes
No
No
Yes
Yes
No
Yes
No
Command-Line Arguments
Yes
No
Yes
No
Yes
No
Yes
Yes
Claim: The matrix is only based on the samples we had analyzed. They might add more features in their variants. 
File Encryption:
SF: SetFileInformationByHandle/NtSetInformationFile;
R: ReadFile ; W: WriteFile ; M: MoveFile; 
MP: MapViewOfFile, FF: FlushViewOfFile≈ç
#BHUSA @BlackHatEvents
Bad Rabbit Mount Locker RansomExx DoppelPaymer Darkside
Babuk
REvil
LockBit 2.0
Language Check
No
No
No
No
Yes
No
Yes
Yes
Kill Process/Services
No
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Persistence
Yes
No
No
Yes
No
No
Yes
Yes
Privilege Escalation
Yes
No
No
Yes
No
No
Yes
Yes
Lateral Movement
Yes
Yes
No
No
No
No
No
Yes
Anti-Recovery
No
No
Yes
Yes
Yes
Yes
Yes
Yes
Atomic-Check
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
File Encryption
MP-FF
R-W-SF
R-W-M
R-W-M
M-R-W
M-R-W
R-W-M
R-W-SF
Partial Encryption
Yes
Yes
No
No
Yes
Yes
Yes
Yes
Cipher Suite
AES-128-CBC
RSA-2048
ChaCha20
RSA-2048
AES-256-ECB
RSA-4096
AES-256-CBC
RSA-2048
Salsa20
RSA-1024
HC256
Curve25519-ECDH
Salsa20
Curve25519-
ECDH
AES-128-CBC
Curve25519-ECDH
Configuration File
No
No
No
No
Yes
No
Yes
No
Command-Line Arguments
Yes
Yes
No
No
Yes
Yes
Yes
Yes
The Ransomware Matrix
Claim: The matrix is only based on the samples we had analyzed. They might add more features in their variants. 
File Encryption:
SF: SetFileInformationByHandle/NtSetInformationFile;
R: ReadFile ; W: WriteFile ; M: MoveFile; 
MP: MapViewOfFile, FF: FlushViewOfFile≈ç
#BHUSA @BlackHatEvents
Malware detection Techniques
Type 
Scope
Signature-based
Byte sequence, List of DLL, Assembly Instruction
Behavior-based
API Calls, System calls, CFG, Instruction trace, n-gram, Sandbox
Heuristic-based
API Calls, System call, CFG, Instruction trace, List of DLL, Hybrid featues, n-gram
Cloud-based
Strings, System calls, Hybrid featues, n-gram
Learning-based
API Calls, System call, Hybrid featues
…
#BHUSA @BlackHatEvents
The Difficult Problem on Malware Detection
Type 
Difficult Problem (Limitation)
Signature-based
Need huge database, Hard to defeat obfuscated samples, Vendor need to spend 
many people to update the signature
Behavior-based
Need to Run it, have the risk of attacking by 0-day exploits or vulnerabilities. Time-
consuming and labor-intensive. Behavior policy can be bypassed
Heuristic-based
will include both of the above
Cloud-based
Immediacy of Internet connections. Adds additional delay to many tasks. Less 
effective at monitoring/detecting Heuristics 
Learning-based
Learning dataset can’t help to identify the variant 
…
#BHUSA @BlackHatEvents
The Difficult Problem on Malware Detection
• Time-consuming and labor-intensive when dynamic analysis
• Vendor need to update the signature based on different malware
• Can’t help to identify the variant 
• Hard to defeat obfuscated samples
#BHUSA @BlackHatEvents
Outline
• Introduction
•
Threat Overview
•
The Difficult Problem of Static/Dynamic Malware Detection and Classification 
• Deep Dive into Our Practical Symbolic Engine
•
Related Work
•
Our Practical Symbolic Engine
• Demonstration
•
CRC32 & DLL ReflectiveLoader
•
Process Hollowing 
•
Ransomware Detection
• Future Works and Closing Remarks 
#BHUSA @BlackHatEvents
Related Work
• Three main papers inspire us do this research
•
Christodorescu, Mihai, et al. "Semantics-aware malware detection." 2005 IEEE symposium on security 
and privacy (S&P'05). IEEE, 2005.
•
Kotov, Vadim, and Michael Wojnowicz. "Towards generic deobfuscation of windows API calls." arXiv
preprint arXiv:1802.04466 (2018).
•
Ding, Steven HH, Benjamin CM Fung, and Philippe Charland. "Asm2vec: Boosting static representation 
robustness for binary clone search against code obfuscation and compiler optimization." 2019 IEEE 
Symposium on Security and Privacy (SP). IEEE, 2019.
• Thanks for their contributions 
#BHUSA @BlackHatEvents
Related Work
• Semantics-Aware Malware Detection (S&P'05)
• A lightweight malware template based on data reference 
relationships 
• Efficient detection the same behavior but easily mutated code
• No False Positive!
• Nowadays: Practical Issues
•
The original paper only proposed the concept without releasing the 
engine and source code for use