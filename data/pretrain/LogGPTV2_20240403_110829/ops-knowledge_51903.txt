User: 如何在Python中使用第三方库来进行邮件发送并添加附件？
Assistant: 使用Python中的smtplib库和email.mime.multipart库可以实现邮件发送和添加附件的功能。

1. 首先，导入需要的库：

```python
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
```

2. 创建邮件对象：

```python
msg = MIMEMultipart()
msg['From'] = 'sender@example.com'
msg['To'] = 'recipient@example.com'
msg['Subject'] = 'This is the subject line'
```

3. 添加邮件正文：

```python
body = 'This is the message body'
msg.attach(MIMEText(body, 'plain'))
```

4. 添加附件：

```python
with open('/path/to/attachment.pdf', 'rb') as f:
    attachment = MIMEApplication(f.read(), _subtype='pdf')
    attachment.add_header('Content-Disposition', 'attachment', filename='attachment.pdf')
    msg.attach(attachment)
```

这里假设要添加一个名为attachment.pdf的PDF文件作为附件。

5. 创建SMTP连接并发送邮件：

```python
smtp_server = 'smtp.gmail.com'
smtp_port = 587
username = 'sender@example.com'
password = 'password'
with smtplib.SMTP(smtp_server, smtp_port) as smtp:
    smtp.starttls()
    smtp.login(username, password)
    smtp.send_message(msg)
```

这里假设使用Gmail作为邮件服务器，需要提供SMTP服务器地址、SMTP端口号、发件人邮箱地址和密码。

完整的代码如下所示：


```python
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication

msg = MIMEMultipart()
msg['From'] = 'sender@example.com'
msg['To'] = 'recipient@example.com'
msg['Subject'] = 'This is the subject line'

body = 'This is the message body'
msg.attach(MIMEText(body, 'plain'))

with open('/path/to/attachment.pdf', 'rb') as f:
    attachment = MIMEApplication(f.read(), _subtype='pdf')
    attachment.add_header('Content-Disposition', 'attachment', filename='attachment.pdf')
    msg.attach(attachment)

smtp_server = 'smtp.gmail.com'
smtp_port = 587
username = 'sender@example.com'
password = 'password'
with smtplib.SMTP(smtp_server, smtp_port) as smtp:
    smtp.starttls()
    smtp.login(username, password)
    smtp.send_message(msg)
```

注意，这里只是演示使用Gmail作为邮件服务器的情况，如果使用其他邮件服务器，需要提供对应的SMTP地址和端口号。同时，在代码中提供的密码并不安全，请确保在实际使用时使用更安全的方式存储密码。