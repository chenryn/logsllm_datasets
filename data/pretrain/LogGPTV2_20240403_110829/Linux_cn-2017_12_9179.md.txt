---
**作者**: Kyle Rankin  
**类别**: 观点  
**评论数据**: 无  
**统计信息**:
  - 评论数: 0
  - 收藏次数: 1
  - 点赞数: 0
  - 分享次数: 0
  - 浏览量: 5652
**日期**: 2017-12-27 10:46:54  
**编辑推荐**: 否  
**摘要**: 在补丁管理方面，一些Linux系统管理员与Windows系统管理员并无二致。实际上，在某些情况下，他们甚至表现得更差（尤其是以持续运行时间为荣时）。  
**来源网址**: <https://www.linuxjournal.com/content/sysadmin-101-patch-management>  
**ID**: 9179  
**是否LCTT翻译**: 是  
**大图**: /data/attachment/album/201712/27/104633u8szjopoawfqsnwp.jpg  
**永久链接**: /article-9179-1.html  
**图片**: /data/attachment/album/201712/27/104633u8szjopoawfqsnwp.jpg.thumb.jpg  
**相关文章**: 无  
**审稿人**: 无  
**选择器**: 无  
**总结**: 在补丁管理方面，一些Linux系统管理员与Windows系统管理员并无二致。实际上，在某些情况下，他们甚至表现得更差（尤其是以持续运行时间为荣时）。  
**标签**:
  - 补丁
  - 安全
  - 升级  
**是否缩略图**: 否  
**标题**: 补丁管理：不要以持续运行时间为荣  
**是否有标题图片**: 是  
**翻译者**: haoqixu  
**更新时间**: 2017-12-27 10:46:54  
---

![](/data/attachment/album/201712/27/104633u8szjopoawfqsnwp.jpg)

在前几篇文章中，我开始了“系统管理 101”系列，旨在记录许多初级系统管理员、DevOps工程师或“全栈”开发者可能未接触过的一些基础系统管理知识。尽管原计划已经结束，但WannaCry恶意软件的爆发促使我再次继续这一系列。这次事件暴露了补丁管理不善的问题，尤其是在Windows主机网络中。那些仍沉浸在2000年代Linux与Windows争论中的读者可能会感到一丝优越感。

然而，我意识到在补丁管理方面，一些Linux系统管理员并不比Windows系统管理员做得更好。事实上，在某些方面甚至更糟，特别是当他们以系统的持续运行时间为荣时。因此，本文将探讨Linux下的补丁管理基础，包括良好的补丁管理应具备的特点、常用工具以及整个补丁安装过程。

### 什么是补丁管理？

补丁管理是指你部署用于升级服务器上软件的系统，而不仅仅是将其更新到最新版本。即使是像Debian这样注重稳定性的发行版，也会定期发布补丁来修复错误和安全漏洞。

如果你的组织决定自行维护特定软件的版本，无论是为了满足开发者的特定需求还是出于其他原因，那么你需要确保这些定制版本的安全性。理想情况下，你应该配置系统，使其能够使用同一套持续集成系统自动构建和打包定制版本的软件。然而，许多系统管理员仍然依赖于过时的方法在本地主机上手动打包软件。无论采用哪种方法，都必须明确所使用的版本是否存在安全缺陷，并确保及时应用新补丁。

### 良好的补丁管理应如何进行

补丁管理的第一步是检查软件的更新情况。对于核心软件，应订阅相应Linux发行版的安全邮件列表，以便第一时间了解安全更新。如果使用的软件不是来自发行版仓库，则需要跟踪其安全更新。收到新的安全通知后，应仔细查阅通知细节，确定漏洞的严重程度、受影响的系统范围以及补丁的紧急性。

一些组织仍在使用手动方式管理补丁。在这种情况下，当出现安全补丁时，系统管理员需凭借记忆登录各个服务器进行检查，确定哪些服务器需要升级，并使用内置包管理工具从发行版仓库升级软件。这种方法存在许多问题。首先，它使补丁安装成为一项繁重的工作，随着补丁数量的增加，人力成本也随之上升，系统管理员可能会推迟甚至忽略补丁安装。其次，手动管理依赖于系统管理员的记忆，容易导致某些服务器被遗漏而未能及时升级。

补丁管理越快速简便，就越有可能成功执行。建议构建一个系统，能够快速查询哪些服务器运行特定软件及其版本，并能推送各种升级补丁。个人而言，我倾向于使用MCollective等编排工具完成此任务，红帽的Satellite和Canonical的Landscape也提供了统一的管理界面，可以查看服务器的软件版本信息并安装补丁。

补丁安装还应具备容错能力。你应该能够在不停机的情况下为服务安装补丁，即使是对内核补丁也是如此。我的做法是将服务器划分为不同的高可用组，例如lb1、app1、rabbitmq1和db1在一个组，而lb2、app2、rabbitmq2和db2在另一个组。这样，我可以一次升级一个组，而无需停机。

补丁安装的速度取决于软件类型。对于少数不需要重启服务的软件，系统应在几分钟到一小时内完成补丁安装（例如bash的ShellShock漏洞）。对于需要重启服务的软件（如OpenSSL），以容错的方式安装补丁并重启服务的过程可能会花费更多时间，但这是编排工具发挥作用的时候。我在最近关于MCollective的文章中（见2016年12月和2017年1月的文章）给出了几个使用MCollective实现补丁管理的例子。最好能够部署一个系统，以自动化和容错的方式简化补丁安装和服务重启的过程。

对于要求重启系统的补丁（如内核补丁），这个过程会更长。然而，自动化和编排工具可以使这一过程比预期更快。我可以在一到两个小时内以容错方式在生产环境中升级并重启服务器，如果重启之间不需要等待集群同步备份，这个过程还能更快。

不幸的是，许多系统管理员仍然认为持续运行时间是一种荣耀。在我看来，这表明他们没有认真对待系统的安全性。许多组织仍然使用无法暂时下线的单点故障服务器，这使得它们无法升级或重启。如果你想让系统更加安全，需要去除这种过时的观念，建立一个至少能在深夜维护时段重启的系统。

总之，快速便捷的补丁管理是一个成熟专业的系统管理团队的标志。升级软件是所有系统管理员的必要工作之一，优化这一过程不仅有助于提高系统安全性，还能帮助识别架构设计中的单点故障，鉴定出过时的系统，并节省系统管理员的时间，让他们能够专注于真正需要专业知识的地方。

---

**Kyle Rankin** 是高级安全与基础设施架构师，著有《Linux Hardening in Hostile Networks》、《DevOps Troubleshooting》及《The Official Ubuntu Server Book》等书，并担任Linux Journal专栏作家。

**原文作者**: [Kyle Rankin](https://www.linuxjournal.com/users/kyle-rankin)  
**译者**: [haoqixu](https://github.com/haoqixu)  
**校对**: [wxy](https://github.com/wxy)  
**本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出**

---