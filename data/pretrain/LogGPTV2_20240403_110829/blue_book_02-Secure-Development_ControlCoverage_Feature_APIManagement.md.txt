## IMPORTANT: DevOps Kit (AzSK) Sunset Notice
Please note that the DevOps Kit (AzSK) will be sunset by the end of FY21. For more details, refer to the [AzSK Sunset Notice](../../../ReleaseNotes/AzSKSunsetNotice.md).

----------------------------------------------
### API Management Controls and Rationale

| Description | Rationale | Control Severity | Automated |
|-------------|-----------|-----------------|----------|
| **Role-Based Access Control (RBAC)** <br> All users/identities must be granted minimum required permissions using RBAC. | Granting minimum access through RBAC ensures that users have just enough permissions to perform their tasks, minimizing the exposure of resources in case of a user or service account compromise. | Medium | Yes |
| **Metric Alert Rules** <br> Configure metric alert rules for critical actions on the API Management service. | Metric alerts for unauthorized gateway requests help administrators identify potential security breaches. | Medium | Yes |
| **Diagnostics Logs** <br> Enable diagnostics logs with a retention period of at least 365 days. | Retaining logs for a year helps recreate activity trails during investigations and meets several compliance requirements. | Medium | Yes |
| **HTTPS Only** <br> Ensure that the backend API is only accessible over HTTPS via the API Management service. | Using HTTPS ensures server/service authentication and protects data in transit from eavesdropping attacks. | High | Yes |
| **Periodic Backups** <br> The API Management service instance should be backed up periodically. | The 'backup and restore' feature allows recovery from availability issues affecting the region where the service is hosted. | Medium | No |
| **Encryption of Sensitive Data** <br> 'Named Values' that contain sensitive data must be encrypted by marking them as 'secret'. | Encrypted 'Named Values' are stored securely by the Azure platform. | High | Yes |
| **TLS Version** <br> Ensure that only the most secure and up-to-date version of TLS is enabled on the API gateway. | TLS 1.2 is the latest and most secure protocol. Using older protocols (e.g., TLS 1.1, TLS 1.0, SSL 3.0) exposes the API to various attacks. | High | No |
| **Delete Sample Products** <br> Delete the two sample products 'Starter' and 'Unlimited' to avoid accidental exposure of APIs. | By default, each API Management instance includes these sample products. Unless strictly regulated, they can expose APIs to unauthenticated users. | Medium | Yes |
| **Sensitive Data in Headers** <br> Do not log headers containing sensitive data such as authorization tokens in Application Insights. | Logging sensitive data increases the risk of data loss and non-compliance with regulatory requirements. | Medium | Yes |
| **CORS Access** <br> Grant CORS access to a minimal set of trusted origins and only required verbs. | Restricting allowed origins aligns with the principle of least privilege and enhances security. | Medium | Yes |
| **Secure Delegated Authentication** <br> If delegated authentication is enabled, ensure it is implemented securely. | Secure delegation is crucial to protect user data when using an existing website for developer sign-in/sign-up. | High | Yes |
| **VNet Deployment** <br> Consider hosting APIM within a virtual network for improved isolation. | VNet deployment provides enhanced security and isolation for the API management instance and backend services. | Medium | Yes |
| **Custom Domain with SSL Binding** <br> Configure a custom domain with SSL binding for Proxy and Portal endpoints. | A custom domain protects against common attacks such as phishing and session hijacking. | Medium | No |
| **JWT Validation** <br> Ensure that JWT validation is enabled if using OAuth 2.0 or OpenID Connect. | Enforcing JWT validation ensures that only valid and authorized clients can call the API. | High | Yes |
| **IP Filter Policies** <br> Use IP filter policies for additional protection. | Restricting access to specific client IPs provides an extra layer of protection for critical assets. | Medium | Yes |
| **Avoid API Management REST API** <br> Do not use the API Management REST API. | The REST API provides admin-level access without role-based control or audit logging. Use ARM-based REST API instead. | High | Yes |
| **OAuth 2.0 or OpenID Connect** <br> Ensure that either OAuth 2.0 or OpenID Connect are used to authorize developer accounts. | These protocols ensure that only valid users have access to the resources they are entitled to. | High | Yes |
| **Azure AD Authentication** <br> Enterprise applications using APIM must authenticate developers/applications using Azure Active Directory (AAD). | Using AAD ensures a high level of assurance in user identity and access control. | High | Yes |
| **Transform Policies** <br> Use transform policies to hide backend/implementation details in API responses. | Hiding backend information in API responses prevents the exposure of private details. | Medium | No |
| **No Secrets in Configuration** <br> Do not include secrets directly in API configuration and policies. | Storing secrets in the repository can lead to security risks. Use Named Values for secure management. | High | Yes |
| **Client Certificates** <br> Use client certificates for authentication between the gateway and backend APIs. | Client certificates secure access to the backend service and protect data in transit. | High | Yes |
| **Subscription Requirement** <br> Turn on the 'Requires Subscription' option for all products in an API Management instance. | Requiring subscriptions ensures that client applications must subscribe before accessing published APIs. | High | Yes |
| **Restrict Guest Access** <br> Critical APIs must not be exposed to Guest users. | Guest users should have read-only access to prevent unauthorized API calls. | Medium | Yes |
| **Managed Service Identity (MSI)** <br> Use MSI for accessing other AAD-protected resources from the API management instance. | MSI eliminates the need to manage secrets, reducing the overall risk. | Medium | Yes |
| **Approval Required** <br> Use the 'Requires Approval' option for APIs where additional checks/manual review is necessary. | Ensuring approval ensures that only approved users can subscribe to a product. | High | No |

This table outlines the key controls and rationale for securing and managing your API Management service effectively.