estimations were similar to the 8-bit symbol tests. However,
our results show that the Markov test always produces the
lowest min-entropy estimate, so the other tests do not come
into account anyway. The results can be found in Table VIb.
As the results for an estimated min-entropy give us an
estimated lower bound on entropy of our bit strings. Fig. 7
Fig. 7. Entropy upper and lower bounds as function of correlation coefﬁcient.
shows the upper and lower bounds on entropy depending on
the chosen upper correlation limit ρmax as a combined result
of CTW compression and min-entropy estimation.
VII. KEY ALIGNMENT
Fuzzy Extractors [17] can be used to extract the same cryp-
tographic keys from correlated measurements, i.e. noisy PUF
measurements. The keys are generated in an enrollment phase
and, when the PUFs are in the ﬁeld, can be reconstructed with
a previously generated helper data P . This helper information
should leak no information of the key, whatsoever, so it can be
stored in an external memory on the PUF device itself or can
be transmitted over the internet. Our construction can be easily
adapted to be secure against an active attacker on the helper
data. With a robust fuzzy extractor [33] we would introduce
a message authentication code (MAC), which can be used to
authenticate the helper data.
The correctness property of fuzzy extractors state that the
construction outputs the exact same key if the distance between
ρmaxEntropy (bits/byte)012345678CTW COMPRESSION AND MIN-ENTROPY ESTIMATION RESULTS FOR SIMULATED BIT STRINGS.
TABLE V
Collision
Partial collection Markov
Compression
Frequency
ρmax
.50
.53
.56
.59
.62
.65
.68
.71
.74
.77
.80
.83
.86
.89
.92
.95
.98
test
6.22521
6.82882
6.80155
6.66015
6.68146
6.91785
⊥
⊥
6.23016
6.59699
6.95015
7.38529
5.80063
5.78053
5.72708
4.20345
3.70251
collection
5.90069
6.64823
6.63535
6.64927
6.53839
6.92833
7.18993
7.14051
6.21762
5.80079
5.78587
5.67176
5.39787
5.06731
5.07137
3.64993
2.92305
test
5.56694
5.60197
5.60936
5.62541
5.60263
5.70984
5.43725
5.44469
5.18516
4.95366
4.65017
4.79813
4.57970
4.65375
3.99810
2.54841
2.29599
test
6.02559
6.69622
6.65570
6.61198
6.58637
6.88106
⊥
⊥
6.22934
6.07370
6.07816
6.03277
5.61252
5.41692
5.38990
4.05859
3.42860
test
7.11177
7.31813
7.32902
7.31514
7.32317
7.46459
7.69332
7.67901
6.92685
6.76764
7.09745
7.19481
7.13658
6.97970
6.53882
5.62399
5.04268
Estimated
min-entropy
5.56694
5.60197
5.60936
5.62541
5.60263
5.70984
5.43725
5.44469
5.18516
4.95366
4.65017
4.79813
4.57970
4.65375
3.99810
2.54841
2.29599
ρmax
.50
.53
.56
.59
.62
.65
.68
.71
.74
.77
.80
.83
.86
.89
.92
.95
.98
Compression rate
(bits/byte)
7.95728
7.99916
7.99914
7.99943
7.99953
8.00645
7.99308
7.99439
7.97247
7.89551
7.91321
7.78784
7.75614
7.65709
7.74842
7.23375
6.49315
(a) CTW compression rates of
simulated PUF responses for dif-
ferent upper correlation limits
ρmax.
(b) NIST tests for min-entropy estimation. The estimated min-entropy is in bits per byte. Note that
tests yielding an invalid result, output a ⊥.
two measurements w and w(cid:48) is smaller than some error T ,
denoted as dis(w, w(cid:48)) ≤ t.
A. Error Correction
We choose the syndrome construction from [17] to reconcile
our measurements w and w(cid:48) and followed the idea of [34]
to get parameters for our setting, because recent research
shows that an alternative, i.e. two-stage concatenated codes
with repetition codes, can be very risky [35]. For, e.g., the
setting with ρmax = 0.86 we use a [n = 63, k = 10, t = 13]-
BCH code, capable of correcting 13 errors in a 63-bit code
word. The entropy loss of this construction to an eavesdropper
is n − k = 53 bits. The extracted message has 10 bits after
error correction. We optimized the quantization process, so
that the resulting response w has at most t = 13 errors
with a probability of 1.74 · 10−8, as given in Table II. For
a cryptographic 128-bit key, we need to combine the min-
entropy results from Table VIb and the chosen code, so that
we need(cid:24) length key/min-entropy rate
(cid:25)
(cid:24) 128/0.5725
(cid:25)
length message
=
10
= 23
PUF responses. This means the overall PUF response, con-
catenated from 23 sensors, has a length of 23 · 63 = 1149
bits and that our overall helper data P has a length of
23 · 53 = 1219 bits. Putting it all together, we receive an
overall authentication failure, due to decoding failure, with a
probability of 1 − (1 − 1.74 · 10−8)23 = 4.00 · 10−7. This
is less than the required standard of at most one failure per
one million uses. Note that, despite our responses do not have
full entropy, our parameters are an improvement of needed
response and helper data bits, compared to [34] while having
roughly the same false rejection rate.
B. Randomness Extraction
To generate a strong secret key, we ﬁnally hash our cor-
rected codeword. The lightweight hash function SPONGENT
[36] seems to be a perfect candidate for a resource-constrained
sensor device.
In particular, we chose the SPONGENT-
128/256/128 construction, which has an 128-bit output with
full preimage and second-preimage security. To carry on with
the previous example, we hash the corrected 1449-bit code
word with a min-entropy rate of 0.5725 to receive a 128-bit
key with full entropy.
VIII. DEDICATED MEMS-PUF DESIGN
We showed that there are several sensors necessary to derive
a 128-bit key based on our used parameters. This could be
possible in applications in which several sensors are existent
(e.g., 9-degrees-of-freedom sensor node). Another option is to
design a speciﬁc MEMS element for security purposes only.
Such a dedicated MEMS-based PUF could be realized in an
area saving manner and it can be optimized providing at least
the same number of suitable properties for the use as PUFs
as an usual gyroscope. Furthermore, the structures of such a
speciﬁc MEMS could be designed in a way that increase the
variability of the properties to derive more bits from a single
parameter. One example is the use of the minimum beam width
for the springs in order to increase the percentage inﬂuence
of the beam width variation. The aim of increasing variability
could be achieved by measures in the manufacturing process
as well because this is optimized actually to keep variations
at a minimum.
Fig. 8 illustrates our proposal for a dedicated MEMS-based
PUF concept. It is a 3-masses oscillator that is free to move in
all spatial dimensions. The masses are linked by doubling U-
springs which are very sensitive to asymmetries that should
NUMBER OF DERIVABLE BITS DEPENDING ON THE CORRELATION UPPER
TABLE VI
LIMIT ρmax.
ρmax
bits
.50
62
.62
73
.74
89
.86
110
.98
199
in the modal space with the deﬂections q whereby x = Φq.
M ¨x + D ˙x + Kx = F
M Φ¨q + DΦ ˙q + KΦq = F
ΦT M Φ¨q + ΦT DΦ ˙q + ΦT KΦq = ΦT F
˜M ¨q + ˜D ˙q + ˜Kq = ˜F
(7)
(8)
(9)
(10)
For simulations, we consider the following aspects of man-
ufacturing process-related variations:
• geometric dimensions (structure width and thickness),
• slight differences of the beam widths locally on the legs
of the U-springs,
• pressure inside the cavity,
• differences in side wall inclination.
We make 1,000 simulations of the design to estimate the key
length that can be derived from the structure depending on the
correlation upper limit. For the key generation procedure, we
assume the same measurement accuracies and temperature de-
pendencies as determined by the measurements of gyroscopes
before. Table VI shows that it is presumably possibly to derive
more bits than from the investigated gyroscopes. Note that
we consider for this simulations measures in the design only.
A further lengthening of the key can be easily achieved by
”worsen” the manufacturing process. Furthermore, due to the
small dimensions of the structure it is conceivable to combine
several of this structures in one unit concatenating their keys
or to add such a structure to existing MEMS sensors for key
storage purposes.
IX. CONCLUSION
MEMS sensors exhibit great potential for the generation
of cryptographic keys. In this work, we show that MEMS-
based gyroscopes, which have been developed for a broad
range of capabilities, can be used to derive a high entropy
cryptographic key. We identify properties of MEMS-based
gyroscopes, suitable for PUF applications by a large number
of measurements on wafer-level. In order to quantize the
measurement values, we propose for an appropriate procedure.
We verify the uniqueness and reliability of the generated bit
strings. Furthermore, we estimate upper and lower bounds on
the entropy of these bit strings and show how to implement
a fuzzy extractor to derive a full entropy key from the most
conservative entropy estimations. Based on error correction
and randomness extraction we display the number of required
devices for a 128-bit key generation from MEMS-based gy-
roscopes. Additionally, we present a dedicated MEMS PUF
design, solely for usage as a primitive in security applications.
This design is optimized in terms of potential features and chip
area, allowing us to derive a full entropy 128-bit key from just
Fig. 8. Dedicated MEMS PUF design.
increase the quadrature signals and the whole structure is
suspended by four doubling U-springs at the outside corners.
The system can be driven and measured by the electrode pairs
CPX/CNX, CPY/CNY in case of in-plane movements and
CPZ/CNZ in case of out-of-plane movements with respect to
the potential of the masses (CM).
The structure contains twelve frequency modes which are
illustrated in Fig. 9. Three frequency modes are based on
in-plane movements in y direction (9a, 9e, 9g) and three