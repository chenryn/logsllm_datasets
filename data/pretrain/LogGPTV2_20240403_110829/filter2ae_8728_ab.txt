objtest的内容编写如下：
        dwr obj test
访问和请求包如下：
post包的结构这时候就变得复杂了，但是分析程序，还是可以简单的编写包结构
    POST /dwr/call/plaincall/objecttest.addUser.dwr HTTP/1.1
    Host: localhost:8080
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0
    Accept: */*
    Accept-Language: en-US,en;q=0.5
    Content-Type: text/plain
    Referer: http://localhost:8080/objtest.jsp
    Content-Length: 271
    Cookie: UM_distinctid=160cb8347c532e-02170ecaf6aeb-4c322f7c-1fa400-160cb8347c662d; CNZZDATA1261218610=1741751127-1515241945-%7C1515241945; JSESSIONID=14ED5B8693320646E08DD451F5F411D2; DWRSESSIONID=J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m
    X-Forwarded-For: 127.0.0.1
    Connection: close
    callCount=1
    nextReverseAjaxIndex=0
    c0-scriptName=objecttest
    c0-methodName=addUser
    c0-id=0
    c0-e1=string:jkgh006
    c0-param0=Object_Object:{name:reference:c0-e1}
    batchId=1
    instanceId=0
    page=%2Fobjtest.jsp
    scriptSessionId=J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m/Y*v$o9m-3BE1kSgDb
#### 文件类型参数
    package com.example.dwr.filetest;
    import java.io.File;
    import java.io.IOException;
    import java.io.InputStream;
    import org.apache.commons.io.FileUtils;
    import org.apache.commons.io.FilenameUtils;
    import org.directwebremoting.WebContext;
    import org.directwebremoting.WebContextFactory;
    public class FileTest {
        public String upload(InputStream inputStream, String fileName) throws IOException {
            String tempFileName= FilenameUtils.getName(fileName);
            String path=getRealPath("upload");
            File file=new File(path+ File.separator+tempFileName);
            FileUtils.copyInputStreamToFile(inputStream, file);
            return file.getPath();
        }
        public String getRealPath(String dir){
            WebContext context= WebContextFactory.get();
            return context.getSession().getServletContext().getRealPath(dir);
        }
    }
dwr.xml添加如下配置：
filetest的内容编写如下：
        dwr file test
    uploadtest
访问和请求包如下：
根据构造的包可以看出来，只是转换成了formdata形式，其他的构造都跟正常的差不多
    POST /dwr/call/htmlcall/filtest.upload.dwr HTTP/1.1
    Host: localhost:8080
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: en-US,en;q=0.5
    Content-Type: multipart/form-data; boundary=---------------------------252533190231463
    Content-Length: 1414
    Referer: http://localhost:8080/filetest.jsp
    Cookie: UM_distinctid=160cb8347c532e-02170ecaf6aeb-4c322f7c-1fa400-160cb8347c662d; CNZZDATA1261218610=1741751127-1515241945-%7C1515241945; JSESSIONID=F647906117B5319F3161C493B1C03F95; DWRSESSIONID=J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m
    X-Forwarded-For: 127.0.0.1
    Connection: close
    Upgrade-Insecure-Requests: 1
    -----------------------------252533190231463
    Content-Disposition: form-data; name="callCount"
    1
    -----------------------------252533190231463
    Content-Disposition: form-data; name="nextReverseAjaxIndex"
    0
    -----------------------------252533190231463
    Content-Disposition: form-data; name="c0-scriptName"
    filtest
    -----------------------------252533190231463
    Content-Disposition: form-data; name="c0-methodName"
    upload
    -----------------------------252533190231463
    Content-Disposition: form-data; name="c0-id"
    0
    -----------------------------252533190231463
    Content-Disposition: form-data; name="c0-param0"; filename="up.gif"
    Content-Type: image/gif
    1
    -----------------------------252533190231463
    Content-Disposition: form-data; name="c0-param1"
    string:C%3A%5Cfakepath%5Cup.gif
    -----------------------------252533190231463
    Content-Disposition: form-data; name="batchId"
    0
    -----------------------------252533190231463
    Content-Disposition: form-data; name="instanceId"
    0
    -----------------------------252533190231463
    Content-Disposition: form-data; name="page"
    %2Ffiletest.jsp
    -----------------------------252533190231463
    Content-Disposition: form-data; name="scriptSessionId"
    J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m/52L6p9m-LLzEisz9f
    -----------------------------252533190231463--
#### 综合类型参数
根据上面每种参数类型的单独举例，给出来一个包含除了文件外的所有参数的调用方式
    package com.example.dwr.complextest;
    import com.example.dwr.objecttest.UserBean;
    import org.apache.commons.lang.StringUtils;
    public class ComplexParams {
        public ComplexParams() {
        }
        public String intAndStringAndArrayAndObjTest(int a, String b, int[] as, String[] bs,UserBean user,UserBean[] users) {
            String template = "";
            template = template+"int a:"+ String.valueOf(a)+"\n";
            template = template+"string b:"+ String.valueOf(a)+"\n";
            String tmp = "";
            for(int i=0;i
complextest的内容编写如下：
        dwr obj test
查看到的构造包如下
请求后的构造包现在看起来就非常复杂了，但是构造思路在js里面还是比较清晰的，可以层层往下推
    POST /dwr/call/plaincall/complexparams.intAndStringAndArrayAndObjTest.dwr HTTP/1.1
    Host: localhost:8080
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0
    Accept: */*
    Accept-Language: en-US,en;q=0.5
    Content-Type: text/plain
    Referer: http://localhost:8080/complextest.jsp
    Content-Length: 899
    Cookie: UM_distinctid=160cb8347c532e-02170ecaf6aeb-4c322f7c-1fa400-160cb8347c662d; CNZZDATA1261218610=1741751127-1515241945-%7C1515241945; JSESSIONID=0E19EB66E71E4439A5CFD4FAF253BB3B; DWRSESSIONID=J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m
    X-Forwarded-For: 127.0.0.1
    Connection: close
    callCount=1
    nextReverseAjaxIndex=0
    c0-scriptName=complexparams
    c0-methodName=intAndStringAndArrayAndObjTest
    c0-id=0
    c0-param0=number:1234
    c0-param1=string:abcd
    c0-e1=number:1
    c0-e2=number:2
    c0-e3=number:3
    c0-e4=number:4
    c0-param2=array:[reference:c0-e1,reference:c0-e2,reference:c0-e3,reference:c0-e4]
    c0-e5=string:a
    c0-e6=string:b
    c0-e7=string:c
    c0-e8=string:d
    c0-param3=array:[reference:c0-e5,reference:c0-e6,reference:c0-e7,reference:c0-e8]
    c0-e9=string:jkgh006
    c0-param4=Object_Object:{name:reference:c0-e9}
    c0-e11=string:jkgh006
    c0-e10=Object_Object:{name:reference:c0-e11}
    c0-e13=string:jkgh007
    c0-e12=Object_Object:{name:reference:c0-e13}
    c0-e15=string:jkgh008
    c0-e14=Object_Object:{name:reference:c0-e15}
    c0-param5=array:[reference:c0-e10,reference:c0-e12,reference:c0-e14]
    batchId=0
    instanceId=0
    page=%2Fcomplextest.jsp
    scriptSessionId=J2YAzcntFgQYepoW~g!fuZdxeAR6Qy4ho9m/uwpcp9m-VQn1SkeIe
#### 总结
  1. 实际的网站发布debug模式是关闭状态，我们做黑盒测试就要去猜测两个默认目录,分别为/exec/和/dwr
  2. 审计可以套用上面的请求包的模板，在你认为存在问题的地方构造java接口调用的请求数据包
  3. 网站发布dwr接口，通常都是未授权调用，包含内容比较多，比如用户，管理等api接口
  4. 如果参数构造有不确定因素，可以把对应的dwr接口空实现，然后转接到我们自己可以本地模拟的代码上面来