4.  验证`/etc/samba/smb.conf`{.literal}文件：
    ``` literallayout
    # testparm
    ```
5.  重新载入 Samba 配置：
    ``` literallayout
    # smbcontrol all reload-config
    ```
    用户现在可以创建用户共享。
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_adding-a-user-share_assembly_enabling-users-to-share-directories-on-a-samba-server}添加用户共享 {.title}
:::
在 Samba 中启用了用户共享功能后，用户可以通过运行
`net usershare add`{.literal} 命令在 Samba 服务器上共享目录，而无需
`root`{.literal} 权限。
`net usershare add`{.literal} 命令的说明：
`net usershare add`{.literal} share_name path \[\[ comment \] \| \[ ACL
\]\] \[ guest_ok=y\|n \]
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果在创建用户共享时设置了 ACL，您必须在 ACL
之前指定comment参数。要设置空的comment，请在双引号中使用空字符串。
:::
请注意，如果管理员在 `/etc/samba/smb.conf`{.literal} 文件的
`[global]`{.literal} 部分中设置了
`usershare allow guests = yes`{.literal}，用户只能对用户共享启用
guest访问。
::: example
[]{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#idm139727046442624}
**例 1.5. 添加用户共享**
::: example-contents
用户想要在 Samba 服务器上共享 `/srv/samba/`{.literal}
目录。该共享应命名为 `example`{.literal}，未设置任何comment ，应该可以被
guest 用户访问。此外，对 `AD\Domain Users`{.literal}
组的共享权限应设置为可完全访问，对其他用户设置为读权限。要添加此共享，请以用户身份运行：
``` literallayout
$ net usershare add example /srv/samba/ "" "AD\Domain Users":F,Everyone:R guest_ok=yes
```
:::
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_updating-settings-of-a-user-share_assembly_enabling-users-to-share-directories-on-a-samba-server}更新用户共享的设置 {.title}
:::
要更新用户共享的设置，请使用具有相同共享名称和新设置的
`net usershare add`{.literal} 命令覆盖共享。
[请参阅添加用户共享](#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_adding-a-user-share_assembly_enabling-users-to-share-directories-on-a-samba-server "添加用户共享"){.link}。
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_displaying-information-about-existing-user-shares_assembly_enabling-users-to-share-directories-on-a-samba-server}显示现有用户共享的信息 {.title}
:::
用户可以在 Samba 服务器上输入 `net usershare info`{.literal}
命令，来显示用户共享及其设置。
::: itemizedlist
**先决条件**
-   在 Samba 服务器中配置了一个用户共享。
:::
::: orderedlist
**流程**
1.  显示任意用户创建的所有用户共享：
    ``` literallayout
    $ net usershare info -l
    [share_1]
    path=/srv/samba/
    comment=
    usershare_acl=Everyone:R,host_name\user:F,
    guest_ok=y
    ...
    ```
    若要只列出运行命令的用户所创建的共享，请省略 `-l`{.literal} 参数。
2.  若要只显示关于特定共享的信息，请将共享名称或通配符传给命令。例如，显示名称以
    `share_`{.literal} 开头的共享的信息：
    ``` literallayout
    $ net usershare info -l share_* 
    ```
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_listing-user-shares_assembly_enabling-users-to-share-directories-on-a-samba-server}列出用户共享 {.title}
:::
如果您想只列出可用的用户共享，而不列出它们的设置，请使用
`net usershare list`{.literal} 命令。
::: itemizedlist
**先决条件**
-   在 Samba 服务器中配置了一个用户共享。
:::
::: orderedlist
**流程**
1.  列出任意用户创建的共享：
    ``` literallayout
    $ net usershare list -l
    share_1
    share_2
    ...
    ```
    若要只列出运行命令的用户所创建的共享，请省略 `-l`{.literal} 参数。
2.  若要只列出特定的共享，请将共享名称或通配符传给命令。例如，只列出名称以
    `share_`{.literal} 开头的共享 ：
    ``` literallayout
    $ net usershare list -l share_* 
    ```
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_deleting-a-user-share_assembly_enabling-users-to-share-directories-on-a-samba-server}删除用户共享 {.title}
:::
要删除用户共享，请以创建共享的用户身份或以 `root`{.literal}
用户身份，使用`net usershare delete`{.literal} 命令。
::: itemizedlist
**先决条件**
-   在 Samba 服务器中配置了一个用户共享。
:::
::: title
**流程**
:::
``` literallayout
$ net usershare delete share_name
```
:::
:::
::: section
::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_configuring-a-share-to-allow-access-without-authentication_assembly_using-samba-as-a-server}配置共享以允许不进行身份验证的访问 {.title}
:::
在某些情况下，您想要共享一个用户无需身份验证即可连接到的目录。若要对此进行配置，请对共享启用guest访问。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不需要身份验证的共享可能会造成安全隐患。
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_enabling-guest-access-to-a-share_assembly_configuring-a-share-to-allow-access-without-authentication}启用对共享的客户机访问 {.title}
:::
如果对共享启用了 guest 访问，Samba
会将guest连接映射到`guest account`{.literal}参数中设置的操作系统帐户。如果至少满足以下条件之一，Guest用户就可以访问此共享上的文件：
::: itemizedlist
-   该帐户在文件系统 ACL 中列出
-   `other`{.literal} 用户的 POSIX 权限允许这样做
:::
::: example
[]{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#idm139727168074176}
**例 1.6. 客户端共享权限**
::: example-contents
如果您将 Samba 配置为将guest帐户映射到 `nobody`{.literal}
（这是默认值），那么以下示例中的 ACL：
::: itemizedlist
-   允许 guest 用户读 `file1.txt`{.literal}
-   允许 guest 用户读和修改 `file2.txt`{.literal}
-   防止 guest 用户读或修改 `file3.txt`{.literal}
:::
``` literallayout
-rw-r--r--. 1 root       root      1024 1. Sep 10:00 file1.txt
-rw-r-----. 1 nobody     root      1024 1. Sep 10:00 file2.txt
-rw-r-----. 1 root       root      1024 1. Sep 10:00 file3.txt
```
:::
:::
::: orderedlist
**流程**
1.  编辑 `/etc/samba/smb.conf`{.literal} 文件：
    ::: orderedlist
    1.  如果这是您在这个服务器上设置的第一个客户机共享：
        ::: orderedlist
        1.  在 `[global]`{.literal}
            部分中设置`map to guest = Bad User`{.literal} ：
            ``` literallayout
            [global]
                    ...
                    map to guest = Bad User
            ```
            使用这个设置，Samba
            将拒绝使用错误密码的登录尝试，除非用户名不存在。如果指定的用户名不存在，并且对共享启用了
            guest 访问，那么 Samba 会将连接视为guest登录。
        2.  默认情况下，Samba 将 guest 帐户映射到 Red Hat Enterprise
            Linux 上的 `nobody`{.literal}
            帐户。另外，您也可以设置另外一个帐户。例如：
            ``` literallayout
            [global]
                    ...
                    guest account = user_name
            ```
            此参数中设置的帐户必须在 Samba
            服务器中本地存在。出于安全考虑，红帽建议使用没有分配有效
            shell 的帐户。
        :::
    2.  在 `[example]`{.literal} 共享部分中添加
        `guest ok = yes`{.literal} 设置：
        ``` literallayout
        [example]
                ...
                guest ok = yes
        ```
    :::
2.  验证`/etc/samba/smb.conf`{.literal}文件：
    ``` literallayout
    # testparm
    ```
3.  重新载入 Samba 配置：
    ``` literallayout
    # smbcontrol all reload-config
    ```
:::
:::
:::
::: section
::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_configuring-samba-for-macos-clients_assembly_using-samba-as-a-server}为 macOS 客户端配置 Samba {.title}
:::
`fruit`{.literal} 虚拟文件系统(VFS)Samba 模块提供了与 Apple
服务器消息块(SMB)客户端增强了的兼容性。
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#optimizing-the-samba-configuration-for-providing-file-shares-for-macos-clients_assembly_configuring-samba-for-macos-clients}优化 Samba 配置，以便为 macOS 客户端提供文件共享 {.title}
:::
本节描述了如何为托管在服务器上的所有 Samba
共享配置`fruit`{.literal}模块，以为 macOS 客户端优化 Samba 文件共享。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽建议全局启用 `fruit`{.literal}
模块。当客户端建立了到服务器的第一个连接时，使用 macOS
的客户端通过服务器消息块版本
2(SMB2)Apple(AAPL)协议扩展与服务器进行协商。如果客户端第一次连接到未启用
AAPL 扩展的共享，那么客户端不会对服务器的任何共享使用扩展。
:::
::: itemizedlist
**先决条件**
-   Samba 配置为文件服务器。
:::
::: orderedlist
**流程**
1.  编辑 `/etc/samba/smb.conf`{.literal} 文件，并在 `[global]`{.literal}
    部分启用 `fruit`{.literal}和`streams_xattr`{.literal} VFS 模块：
    ``` literallayout
    vfs objects = fruit streams_xattr
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    在启用 `streams_xattr`{.literal} 之前，您必须启用
    `fruit`{.literal}模块。`fruit`{.literal}
    模块使用备用数据流(ADS)。因此，您也必须启用
    `streams_xattr`{.literal} 模块。
    :::
2.  另外，要对共享提供 macOS Time Machine 支持，请在
    `/etc/samba/smb.conf`{.literal} 文件中的共享配置中添加以下设置：
    ``` literallayout
    fruit:time machine = yes
    ```
3.  验证`/etc/samba/smb.conf`{.literal}文件：
    ``` literallayout