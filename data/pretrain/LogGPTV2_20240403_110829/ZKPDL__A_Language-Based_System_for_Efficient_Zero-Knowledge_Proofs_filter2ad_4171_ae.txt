881.32
276.98
18.28
1.18
Size (B)
20093
1167
22526
47286
203
46934
n/a
1280
204
Table 2: Average time required and network overhead, in milliseconds and bytes respectively, for each stage in our e-cash imple-
mentation. The timings were averaged over twenty runs, and caching and compression optimizations were used. For the naïve
timings, an older version of the library was used, which uses some multi-exponentation optimization techniques but not the inter-
preter; we can see a clear improvement when using ZKPDL. Parameters were used to provide a security level of 80 bits (160-bit
SHA-1 hashing, 128-bit AES encryption, 1024-bit RSA moduli, and 1024-bit DSA signatures).
is a very useful tool, it uses generic circuit techniques,
and thus from an efﬁciency standpoint it is often more
desirable to develop a multi-party computation scheme
speciﬁc to the intended application.
IBM’s Idemix project [20, 15] has independently de-
veloped a library for zero-knowledge proofs and anony-
mous credentials using Java; their library provides a sys-
tem for obtaining, proving, and verifying anonymous
credentials for use in a privacy-preserving identity sys-
tems. While Idemix and our work both provide im-
plementations of anonymous credentials and CL signa-
tures, our focus on efﬁcient, repeated executions of e-
cash transactions has led us to pursue our language-
based strategy and develop a performance-optimized in-
terpreter, unlike the Idemix implementation. The CACE
project, independent of our efforts, has also designed a
high-level language for zero-knowledge protocols; their
work has focused on a compiler that can output imple-
mentation and LATEX code from these descriptions [6, 5],
and automatically check the soundness of compiled pro-
tocols using theorem proving techniques [1].
There are also compilers available [16, 7] for the gen-
eration of proofs of security and correctness for crypto-
graphic protocols. While this is an interesting and impor-
tant area of research, these tools largely focus on static
analysis of protocols rather than performance. Perhaps
more similar to our work, the languages Cryptol [54]
and Stupid [53] provide a simple interface for develop-
ing low-level implementations of cryptographic primi-
tives (such as hash functions) which can then be analyzed
and translated into native code on different platforms.
8 Conclusions and Future Work
In this paper we have introduced a language for gener-
ating (and verifying) widely-used zero-knowledge proofs
of knowledge. Through sample programs, we have
demonstrated how our language is used to express ad-
vanced cryptographic primitives such as blind signatures,
veriﬁable encryption, and endorsed e-cash. We presented
optimizations provided by our language’s interpreter and
have shown they provide signiﬁcant beneﬁt.
Atop our language framework, we built a library that
provides optimistic fair exchange protocols based on
electronic cash. We have further presented optimizations
for the protocols provided by Cashlib and argued for their
practicality in network-based applications.
Much future work is possible for the ZKPDL lan-
guage and interpreter. There are many other cryp-
tographic primitives which could be incorporated into
the language (e.g., encryption, signatures, hash func-
tions), and other zero-knowledge protocols that could be
added as relations (e.g., alternate and “fuzzy” schemes
for range proofs).
Incorporating these primitives, per-
haps by allowing for subroutines and the composabil-
ity of ZKPDL programs, would allow our library to be
more easily extended and potentially have applicability
to a broader range of secure systems. The analysis of
ZKPDL programs—e.g., to automatically verify proto-
cols and identify security errors through type analysis or
formal veriﬁcation techniques—provides another inter-
esting area of study.
For increased performance on multicore architectures,
we are working on analyzing dependencies among the
expressions evaluated by our interpreter. The simplic-
ity of our language, e.g., in compute blocks, allows a
coarse-grained approach, as the only dependencies that
arise between lines of ZKPDL are from variables which
have been declared and assigned in previous lines.
Finally, in terms of extending Cashlib, to improve a
bank’s efﬁciency it might also be possible to speed up
coin veriﬁcation time by supporting batch veriﬁcation
techniques [23, 40] for CL signatures; we leave this as
one of many interesting open problems.
Acknowledgments
We gratefully acknowledge George Danezis, our shep-
herd, and our anonymous reviewers for their valuable
feedback on earlier versions of this paper. We also
would like to thank Gabriel Bender and Alex Hutter
for their work developing earlier versions of Cashlib, as
well as Carleton Coffrin for his assistance with ANTLR.
This work is supported in part by NSF CyberTrust grant
0627553.
References
[1] ALMEIDA, J. B., BANGERTER, E., BARBOSA, M., KRENN,
S., SADEGHI, A.-R., AND SCHNEIDER, T. A certifying com-
piler for zero-knowledge proofs of knowledge based on sigma-
protocols. In ESORICS ’10 (2010).
[2] ANDROULAKI, E., RAYKOVA, M., SRIVATSAN, S., STAVROU,
A., AND BELLOVIN, S. PAR: payment for anonymous routing.
In Privacy Enhancing Technologies Symposium (PETS) (2008),
vol. 5134 of Lecture Notes in Computer Science, Springer-Verlag,
pp. 219–236.
[3] ASOKAN, N., SHOUP, V., AND WAIDNER, M. Optimistic fair
In Proc. Eurocrypt ’98 (1998),
exchange of digital signatures.
vol. 1403 of Lecture Notes in Computer Science, Springer-Verlag,
pp. 591–606.
[4] AVOINE, G., AND VAUDENAY, S. Optimistic fair exchange
In ACISP (2004),
based on publicly veriﬁable secret sharing.
vol. 3108 of Lecture Notes in Computer Science, Springer-Verlag,
pp. 74–85.
[5] BANGERTER, E., BARZAN, S., KRENN, S., SADEGHI, A.-R.,
SCHNEIDER, T., AND TSAY, J.-K. Bringing zero-knowledge
proofs of knowledge to practice. In 17th International Workshop
on Security Protocols (2009).
[6] BANGERTER, E., CAMENISCH, J., KRENN, S., SADEGHI,
A.-R., AND SCHNEIDER, T. Automatic generation of sound
zero-knowledge protocols. Cryptology ePrint Archive, Report
2008/471, 2008. http://eprint.iacr.org/2008/471.
[7] BARBOSA, M., NOAD, R., PAGE, D., AND SMART, N. First
steps toward a cryptography-aware language and compiler. Cryp-
tology ePrint Archive, Report 2005/160, 2005. http://eprint.
iacr.org/2005/160.
[8] BELENKIY, M., CAMENISCH, J., CHASE, M., KOHLWEISS,
M., LYSYANSKAYA, A., AND SHACHAM, H. Delegatable
In Proc. Crypto ’09 (2009), vol. 5677
anonymous credentials.
of Lecture Notes in Computer Science, Springer-Verlag, pp. 108–
125.
[9] BELENKIY, M., CHASE, M., ERWAY, C., JANNOTTI, J.,
KÜPÇÜ, A., AND LYSYANSKAYA, A. Incentivizing outsourced
computation. In NetEcon (2008), pp. 85–90.
[10] BELENKIY, M., CHASE, M., ERWAY, C., JANNOTTI, J.,
KÜPÇÜ, A., LYSYANSKAYA, A., AND RACHLIN, E. Making
P2P accountable without losing privacy. In WPES (2007), ACM,
pp. 31–40.
[11] BELENKIY, M., CHASE, M., KOHLWEISS, M., AND LYSYAN-
SKAYA, A. Non-interactive anonymous credentials. In Proc. 5th
Theory of Cryptography Conference (TCC) (2008), pp. 356–374.
[12] BELLARE, M., AND GOLDREICH, O. On deﬁning proofs of
knowledge. In Proc. Crypto ’92 (1992), vol. 740 of Lecture Notes
in Computer Science, Springer-Verlag, pp. 390–420.
[13] BELLARE, M., AND ROGAWAY, P. Random oracles are practical:
a paradigm for designing efﬁcient protocols. In ACM Conference
on Computer and Communications Security (CCS) ’93 (1993),
pp. 62–73.
[14] BEN-DAVID, A., NISAN, N., AND PINKAS, B. FairplayMP: a
system for secure multi-party computation. In ACM Conference
on Computer and Communications Security (CCS) ’08 (2008),
pp. 257–266.
[15] BICHSEL, P., BINDING, C., CAMENISCH, J., GROSS, T.,
HEYDT-BENJAMIN, T., SOMMER, D., AND ZAVERUCHA, G.
Cryptographic protocols of the identity mixer library, v. 1.0. IBM
Research Report RZ3730, 2009.
[16] BLANCHET, B., AND POINTCHEVAL, D. Automated security
In Proc. Crypto ’06 (2006),
proofs with sequences of games.
vol. 4117 of Lecture Notes in Computer Science, Springer-Verlag,
pp. 537–554.
[17] BLUM, M., DE SANTIS, A., MICALI, S., AND PERSIANO, G.
Non-interactive zero-knowledge. SIAM Journal of Computing 20,
6 (1991), 1084–1118.
[18] BOUDOT, F. Efﬁcient proofs that a committed number lies in
an interval. In Proc. Eurocrypt ’00 (2000), vol. 1807 of Lecture
Notes in Computer Science, Springer-Verlag, pp. 431–444.
[19] CAMENISCH, J., CHAABOUNI, R., AND ABHI SHELAT. Efﬁ-
In Proc.
cient protocols for set membership and range proofs.
Asiacrypt ’08 (2008), pp. 234–252.
[20] CAMENISCH, J., AND HERREWEGHEN, E. V. Design and im-
In
plementation of the idemix anonymous credential system.
ACM Conference on Computer and Communications Security
(CCS) ’02 (2002), ACM, pp. 21–30.
[21] CAMENISCH,
J., HOHENBERGER, S., KOHLWEISS, M.,
LYSYANSKAYA, A., AND MEYEROVICH, M. How to win the
clonewars: efﬁcient periodic n-times anonymous authentication.
In ACM Conference on Computer and Communications Security
(CCS) ’06 (2006), pp. 201–210.
[22] CAMENISCH, J., HOHENBERGER, S., AND LYSYANSKAYA, A.
In Proc. Eurocrypt ’05 (2005), vol. 3494 of
Compact e-cash.
Lecture Notes in Computer Science, Springer-Verlag, pp. 302–
321.
[23] CAMENISCH, J., HOHENBERGER, S., AND PEDERSEN, M. Ø.
In Proc. Eurocrypt
Batch veriﬁcation of short signatures.
’07 (2007), vol. 4515 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 246–263.
[24] CAMENISCH, J., AND LYSYANSKAYA, A. An efﬁcient sys-
tem for non-transferable anonymous credentials with optional
anonymity revocation. In Proc. Eurocrypt ’01 (2001), vol. 2045
of Lecture Notes in Computer Science, Springer-Verlag, pp. 93–
118.
[25] CAMENISCH, J., AND LYSYANSKAYA, A. A signature scheme
with efﬁcient protocols. In Proc. SCN ’02 (2002), vol. 2576 of
Lecture Notes in Computer Science, Springer-Verlag, pp. 268–
289.
[26] CAMENISCH, J., AND LYSYANSKAYA, A. Signature schemes
and anonymous credentials from bilinear maps. In Proc. Crypto
’04 (2004), vol. 3152 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 56–72.
[27] CAMENISCH, J., LYSYANSKAYA, A., AND MEYEROVICH, M.
Endorsed e-cash. In IEEE Symposium on Security and Privacy
(2007), pp. 101–115.
[28] CAMENISCH, J., AND SHOUP, V. Practical veriﬁable encryp-
In Proc. Crypto
tion and decryption of discrete logarithms.
’03 (2003), vol. 2729 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 126–144.
[29] CHAUM, D. Blind signatures for untraceable payments. In Proc.
Crypto ’82 (1982), Lecture Notes in Computer Science, Springer-
Verlag, pp. 199–203.
[30] CHAUM, D. Security without identiﬁcation: transaction systems
to make big brother obsolete. Communications of the ACM 28,
10 (1985), 1030–1044.
[49] GROTH, J. Non-interactive zero-knowledge arguments for vot-
In ACNS (2005), vol. 3531 of Lecture Notes in Computer
ing.
Science, Springer-Verlag, pp. 467–482.
[31] CHAUM, D., DEN BOER, B., VAN HEYST, E., MJØLSNES,
S. F., AND STEENBEEK, A. Efﬁcient ofﬂine electronic checks
(extended abstract). In Proc. Eurocrypt ’89 (1989), pp. 294–301.
[32] COX, B., TYGAR, J., AND SIRBU, M. Netbill security and
transaction protocol. In Proc. 1st Usenix Workshop on Electronic
Commerce (1995), pp. 77–88.
[33] DAEMEN, J., AND RIJMEN, V. Rijndael: AES – The Advanced
Encryption Standard. Springer-Verlag, 2002.
[34] DAMGÅRD, I. On sigma protocols. http://www.daimi.au.
dk/ivan/Sigma.pdf.
[35] DAMGÅRD, I. Payment systems and credential mechanism with
provable security against abuse by individuals. In Proc. Crypto
’88 (1988), vol. 403 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 328–335.
[36] DAMGÅRD, I., DUPONT, K., AND PEDERSEN, M. Ø. Un-
In Proc. Eurocrypt ’06 (2006),
clonable group identiﬁcation.
vol. 4004 of Lecture Notes in Computer Science, Springer-Verlag,
pp. 555–572.
[37] DAMGÅRD, I., AND FUJISAKI, E. A statistically-hiding integer
commitment scheme based on groups with hidden order. In Proc.
Asiacrypt ’02 (2002), vol. 2501 of Lecture Notes in Computer
Science, Springer-Verlag, pp. 125–142.
[38] DAMGÅRD, I., GROTH, J., AND SALOMONSEN, G. The the-
ory and implementation of an electronic voting system. In Proc.
Secure Electronic Voting (SEC) (2003), pp. 77–100.
[39] FEIGE, U., LAPIDOT, D., AND SHAMIR, A. Multiple non-
interactive zero-knowledge proofs based on a single random
string. In Proc. 31st Symposium on Theory of Computing (STOC)
(1990), pp. 308–317.
[40] FERRARA, A. L., GREEN, M., HOHENBERGER, S., AND PED-
In
ERSEN, M. Ø. Practical short signature batch veriﬁcation.
Proc. CT-RSA (2009), pp. 309–324.
[41] FIAT, A., AND SHAMIR, A. How to prove yourself: practi-
cal solutions to identiﬁcation and signature problems. In Proc.
Crypto ’86 (1986), vol. 263 of Lecture Notes in Computer Sci-
ence, Springer-Verlag, pp. 186–194.
[42] FUJISAKI, E., AND OKAMOTO, T. Statistical zero knowledge
protocols to prove modular polynomial relations. In Proc. Crypto
’97 (1997), vol. 1294 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 16–30.
[43] GENNARO, R., GENTRY, C., AND PARNO, B. Non-interactive
veriﬁable computing:
outsourcing computation to untrusted
workers. Cryptology ePrint Archive, Report 2009/547, 2009.
http://eprint.iacr.org/2009/547.
[44] GMP. The GNU MP Bignum library. http://gmplib.org.
[45] GOLDREICH, O., GOLDWASSER, S., AND MICALI, S. How to
In Proc. 25th
construct random functions (extended abstract).
Symposium on the Foundations of Computer Science (FOCS)
(1984), pp. 464–479.
[46] GOLDREICH, O., MICALI, S., AND WIGDERSON, A. Proofs
that yield nothing but their validity or all languages in NP have
zero-knowledge proof systems. J. ACM 38, 3 (1991), 691–729.
[47] GOLDWASSER, S., MICALI, S., AND RACKOFF, C. The knowl-
edge complexity of interactive proof systems. In Proc. 17th Sym-
posium on the Theory of Computing (STOC) (1985), pp. 186–208.
[48] GOLDWASSER, S., MICALI, S., AND RIVEST, R. A digital sig-
nature scheme secure against adaptive chosen-message attacks.
SIAM Journal of Computing 17, 2 (1988), 281–308.
[50] HEYDT-BENJAMIN, T., CHAE, H.-J., DEFEND, B., AND FU,
K. Privacy for public transportation. In Privacy Enhancing Tech-
nologies Symposium (PETS) (2006), pp. 1–19.
[51] ISHIDA, N., MATSUO, S., AND OGATA, W. Divisible voting
scheme. In Proc. ISC ’03 (2003), vol. 2851 of Lecture Notes in
Computer Science, Springer-Verlag, pp. 137–150.
[52] KÜPÇÜ, A., AND LYSYANSKAYA, A. Usable optimistic fair ex-
change. In Proc. CT-RSA ’10 (2010), vol. 5985 of Lecture Notes
in Computer Science, Springer-Verlag, pp. 252–267.
Stupid:
a meta-
language for cryptography, 2010. http://code.google.com/
p/stupid-crypto.
[53] LAURIE, B., AND CLIFFORD, B.
[54] LEWIS, J., AND MARTIN, B. Cryptol: high assurance, retar-
In Proc. Military
getable crypto development, and validation.
Communications Conference ’03 (2003), pp. 820–825.
[55] LIPMAA, H. On Diophantine complexity and statistical zero-
knowledge arguments. In Proc. Asiacrypt ’03 (2003), vol. 2894
of Lecture Notes in Computer Science, Springer-Verlag, pp. 398–
415.
[56] LIPMAA, H., ASOKAN, N., AND NIEMI, V. Secure vickrey
auctions without threshold trust. In Proc. Financial Cryptogra-
phy ’02 (2002), vol. 2357 of Lecture Notes in Computer Science,
Springer-Verlag, pp. 87–101.
[57] LYNN, B. PBC (pairing-based cryptography) library. http://
crypto.stanford.edu/pbc.
[58] MALKHI, D., NISAN, N., PINKAS, B., AND SELLA, Y. Fairplay
In USENIX Security
- a secure two-party computation system.
Symposium (2004), pp. 287–302.
[59] MENEZES, A. J., VAN OORSCHOT, P., AND VANSTONE, S.
Handbook of Applied Cryptography. CRC Press, 1997.
[60] MERKLE, R. A digital signature based on a conventional encryp-
In Proc. Crypto ’88 (1987), vol. 293 of Lecture
tion function.
Notes in Computer Science, Springer-Verlag, pp. 369–378.
[61] NAOR, M., AND YUNG, M. Universal one-way hash functions
and their cryptographic applications. In Proc. 21st Symposium on
Theory of Computing (STOC) (1989), pp. 33–43.
[62] NGUYEN, L., AND SAFAVI-NAINI, R. Dynamic k-times anony-
mous authentication. In ACNS (2005), vol. 3531 of Lecture Notes
in Computer Science, Springer-Verlag, pp. 318–333.
[63] PAGNIA, H., AND GÄRTNER, F. On the impossibility of fair ex-
change without a trusted third party. Darmstadt University Tech-
nical Report TUD-BS-1999-02, 1999.
[64] PARR, T. ANTLR parser generator. http://www.antlr.org.
[65] PEDERSEN, T. P. Non-interactive and information-theoretic
In Proc. Crypto ’91 (1992),
secure veriﬁable secret sharing.
vol. 576 of Lecture Notes in Computer Science, Springer-Verlag.
[66] RABIN, M., AND SHALLIT, J. Randomized algorithms in num-
ber theory. Communications on Pure and Applied Mathematics
39, 1 (1986), 239–256.
[67] SCHNORR, C.-P. Efﬁcient signature generation by smart cards.
Journal of Cryptology 4, 3 (1991), 161–174.
[68] SCHOENMAKERS, B. Interval proofs revisited. In International
Workshop on Frontiers in Electronic Elections (2005).