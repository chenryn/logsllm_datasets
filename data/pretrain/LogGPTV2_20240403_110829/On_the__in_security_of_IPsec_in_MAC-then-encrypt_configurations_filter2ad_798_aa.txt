title:On the (in)security of IPsec in MAC-then-encrypt configurations
author:Jean Paul Degabriele and
Kenneth G. Paterson
On the (In)Security of IPsec in MAC-then-Encrypt
Conﬁgurations
Jean Paul Degabriele∗
Information Security Group
Royal Holloway, University of London
Egham, Surrey, TW20 0EX, UK
PI:EMAIL
Kenneth G. Paterson†
Information Security Group
Royal Holloway, University of London
Egham, Surrey, TW20 0EX, UK
PI:EMAIL
ABSTRACT
IPsec allows a huge amount of ﬂexibility in the ways in which
its component cryptographic mechanisms can be combined
to build a secure communications service. This may be good
for supporting diﬀerent security requirements but is poten-
tially bad for security. We demonstrate the reality of this
by describing eﬃcient, plaintext-recovering attacks against
all conﬁgurations of IPsec in which integrity protection is
applied prior to encryption – so-called MAC-then-encrypt
conﬁgurations. We report on the implementation of our at-
tacks against a speciﬁc IPsec implementation, and reﬂect on
the implications of our attacks for real-world IPsec deploy-
ments as well as for theoretical cryptography.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection (e.g., ﬁrewalls)
General Terms
Security
Keywords
IPsec, ESP, AH, MAC-then-encrypt, Traﬃc Flow Conﬁden-
tiality, Fragmentation
1.
INTRODUCTION
IPsec is a notoriously complex protocol suite, but one of
great importance in today’s Internet where it is deployed
∗This author’s research is funded by Vodafone Group Ser-
vices Limited, a Thomas Holloway Research Studentship,
and the Strategic Educational Pathways Scholarship Scheme
(Malta), part-ﬁnanced by the European Union – European
Social Fund.
†This author’s research supported by an EPSRC Leadership
Fellowship, EP/H005455/1.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
Copyright 2010 ACM 978-1-4503-0244-9/10/10 ...$10.00.
widely to build Virtual Private Networks (VPNs) and se-
cure remote access solutions.
IPsec oﬀers security at the
IP layer of the TCP/IP protocol stack, meaning that IPsec
provides cryptographic protection for IP packets (or their
payloads). Part of IPsec’s complexity arises from a delib-
erate attempt by IPsec’s designers to provide a ﬂexible and
highly conﬁgurable approach to providing security services
for IP traﬃc.
The RFCs specifying the major component protocols ESP,
AH, IKE [14, 15, 9] and that describing the IPsec architec-
ture [13] oﬀer only limited guidance to end users about how
best to conﬁgure IPsec to achieve their desired security goals.
Moreover, little security analysis of IPsec seems to have been
published. In particular, whilst it is by now well-established
that using ESP in “encryption-only” conﬁgurations is inse-
cure in general [1, 18, 5], there appears to have been no
systematic security evaluation of the many diﬀerent ways
of combining encryption and integrity protection that are
allowed by IPsec:
• ESP may provide its own integrity protection, in which
case it is provided by a MAC algorithm that is applied
after ESP’s encryption – an encrypt-then-MAC con-
struction.
• Alternatively, AH can be used to provide the protec-
tion, again using a MAC algorithm, though with the
MAC algorithm having a greater scope than in ESP. In
this case, packets may be ﬁrst integrity protected by
AH and then encrypted using ESP, or ﬁrst encrypted
by ESP and then integrity protected by AH (where
now the extended scope of AH’s integrity protection
means that more ﬁelds of the IP header are protected
than would be the case with ESP-provided integrity
protection).
• It is even possible to achieve a MAC-then-encrypt con-
struction using two layers of ESP processing.
• Further, the current version of ESP allows combined-
mode algorithms to be used, wherein encryption and
integrity protection are rolled into a single processing
step.
• In all of the above conﬁgurations, AH and/or ESP may
each be applied in either tunnel mode or transport
mode.
• To add a ﬁnal dimension, both AH and ESP allow
sequence number checking to be performed as an op-
493tion, in order to provide protection against replay at-
tacks. This replay protection service should be dis-
abled if manual keying is used (see [14, Section 5] and
[15, Section 3.3.3]), is recommended to be disabled for
multicast traﬃc ([14, Section 3.4.3]), and may be prob-
lematic when diﬀerentiated classes of traﬃc are pro-
tected by a single SA ([13, Section 4.1]). As we shall
see, whether the replay protection service is disabled
or not has a signiﬁcant impact on some of our attacks.
It is notable that the previous version of the IPsec ar-
chitecture [10] was more speciﬁc about which combinations
must or must not be supported in IPsec implementations
than is the current version [13]: the former required sup-
port for some basic conﬁgurations and explicitly outlawed
the combination of AH followed by ESP both in transport
mode, while the latter makes no prohibitions.
What guidance can be extracted from the literature? The-
oretical support for the encrypt-then-MAC options comes
from [2, 16], where it is shown that this approach generically
provides IND-CCA security if the component encryption al-
gorithm is IND-CPA secure (as is the case, for example, for
CBC mode encryption with a random IV) and the compo-
nent MAC algorithm is strongly unforgeable. We have also
seen many on-line tutorials giving example conﬁgurations of
this type.
Concerning MAC-then-encrypt options, it is noted in [15]
that “an underlying integrity service, such as AH, applied be-
fore encryption does not necessarily protect the encryption-
only conﬁdentiality against active attackers”, suggesting that
such conﬁgurations should be avoided. Here, [15] cites [16]
for theoretical support. However, a closer examination of
[16] shows that it contains positive security results about
the MAC-then-encrypt construction when the encryption
scheme is implemented using either a secure stream cipher or
CBC mode of a block cipher. These are the primary encryp-
tion schemes currently supported by IPsec standards. More-
over, the known examples in [2, 16] showing that MAC-then-
encrypt constructions are not generically secure are rather
artiﬁcial. Thus the results of [16] could be interpreted as
providing support for MAC-then-encrypt conﬁgurations of
IPsec. Further support comes from a widely-cited critique of
IPsec by Schneier and Ferguson [6], which states “When both
encryption and authentication are provided, IPsec performs
the encryption ﬁrst, and authenticates the ciphertext. In our
opinion this is the wrong order” and later goes on to say “The
ordering of encryption and authentication in IPsec is dan-
gerous.” In [6] the argument is made that a protocol should
authenticate what was meant, not what was said, with SSL
as analysed in [23] being given as an example of a proto-
col adopting the “correct” approach of MAC-then-encrypt.
Moreover, a putative attack against encrypt-then-MAC con-
ﬁgurations of IPsec is given in [6], lending further support
to the MAC-then-encrypt choice for IPsec1. A standard
textbook on network security [21] discusses several beneﬁts
that accrue from using a MAC-then-encrypt conﬁguration
of IPsec, including the ability to store MAC values along
with plaintexts for later checking. A textbook aimed at
implementors of cryptography [7] extensively discusses the
1However this attack requires the receiver to use the wrong
key when decrypting, and it is hard to envisage the circum-
stances under which this could occur in IPsec, except per-
haps with re-use of SPIs in a manually-keyed deployment.
merits and demerits of the MAC-then-encrypt approach to
building secure channels, and eventually recommends this
construction over other choices.
Given the arguments on both sides, and in the absence of
ﬁrm guidance from the RFCs or other sources, it seems plau-
sible that a network administrator might well be tempted
into selecting a MAC-then-encrypt conﬁguration of IPsec.
1.1 Our Contributions
This paper focusses on the security of MAC-then-encrypt
conﬁgurations of IPsec. For concreteness, we study the com-
mon use case of using IPsec to build a simple site-to-site
VPN. We describe practical attacks against all MAC-then-
encrypt conﬁgurations of IPsec for this common application,
including the most natural conﬁgurations as well as more
“exotic” ones. We assume that all cryptographic processing
is carried out at a pair of security gateways, but our attacks
also extend to situations where AH processing is carried out
at hosts behind the gateways. Our attacks come in three
basic ﬂavours, each with two main variants depending on
whether IPsec’s optional replay protection is enabled or not.
Our attacks are powerful in the sense that they can be used
to recover plaintext from arbitrary IPsec-protected packets.
But they each have diﬀerent characteristics in terms of their
complexity, their requirements for the attacker’s degree of
control over the network, and their plaintext requirements.
We stress that we have not found any attacks against ESP’s
encrypt-then-MAC construction.
In developing our attacks against IPsec, we assume that
the relevant RFCs have been carefully followed by an im-
plementor. For example, our attacks exploit the recommen-
dation of the ESP RFC [15] to perform full padding checks
when decrypting, and two of them rely on support for Traf-
ﬁc Flow Conﬁdentiality (TFC) padding that is mandated in
[15]. One of the attacks depends on the details of IPsec’s
treatment of fragmented packets, while all depend on the
manner in which IPsec handles ICMP traﬃc. Our attacks
are developed with the RFC speciﬁcations in mind, but our
previous experience [5] indicates that IPsec implementations
do deviate signiﬁcantly from the RFCs in ways that can stop
attacks from working in practice. To compensate for this, we
report on the experimental validation of our attacks against
the OpenSolaris implementation of IPsec, showing that two
out of three of our attacks “on paper” can be converted into
working attacks against a real implementation. We empha-
size that our choice of OpenSolaris was driven by the high
quality of its code and its close adherence to the IPsec RFCs,
and not because it has any particular weaknesses that we
wanted to exploit. We believe that our attacks would apply
to any comparably careful implementation of IPsec.
1.1.1 Practice
This paper makes a signiﬁcant contribution to network se-
curity practice: it shows that certain conﬁgurations of IPsec
are insecure and should be avoided, namely those involv-
ing the application of AH followed by ESP. This conﬁrms
and strengthens the limited guidance in [13] and ﬁrmly con-
tradicts the recommendations concerning ordering in [6, 7].
In addition, our work has implications for designers of new
protocols: our attacks highlight security deﬁciencies that re-
sult from IPsec’s modular approach to realising secure chan-
nels, the introduction of TFC padding, and the interplay
between IP and IPsec (in particular, fragmentation issues).
494The take-away from this paper for practitioners is that ESP
with encryption and integrity protection should be used in
preference to any other conﬁguration when conﬁdentiality is
required.
1.1.2 Theory
This paper also has implications for cryptographic theory.
It is already known that Krawczyk’s positive results [16] con-
cerning the security of the MAC-then-encrypt construction
used in SSL/TLS need to be interpreted carefully in the light
of attacks against SSL/TLS in [4]. Our results provide a sim-
ilar demonstration in the context of IPsec. More generally,
our work highlights the limitations of current cryptographic
theory in answering the apparently simple question of how
best to combine encryption and integrity protection to build
a secure channel. While theoretical attack models and secu-
rity proofs such as those in [16] may rule out many classes
of attack, they do not always translate into strong security
guarantees for real network protocols with all their messy –
but essential – features. For example, such models usually
assume that all cryptographic processing takes place in an
atomic fashion, while our attacks exploit non-atomicity in
MAC-then-encrypt conﬁgurations of IPsec. Security models
do not typically consider padding, error messages, the pos-
sibility of ciphertext fragmentation, or interactions with en-
capsulated protocols, while our attacks exploit such features.
It is notable that, while two of our three attacks exploit the
fact that AH’s MAC does not cover all the plaintext to be
encrypted, the third attack based on fragmentation would
still work even if it did. This raises an interesting theoretical
question about the achievable security of generic composi-
tions of encryption and integrity protection mechanisms in
a model where the channel allows fragmentation of cipher-
texts.
1.2 Related Work
Previous work analysing IPsec [1, 5, 18] has focussed on
encryption-only conﬁgurations, showing them to be fatally
insecure. Our attacks on MAC-then-encrypt conﬁgurations
build on techniques developed in [5, 18], but we need to
signiﬁcantly extend them to cater for the integrity protec-
tion and replay protection services supplied by AH. We note
that [5, 18] also mentioned the possible extension of the
encryption-only attacks to a limited class of other conﬁg-
urations where AH and ESP processing are carried out by
diﬀerent machines. However, our work seems to be the ﬁrst
to make a systematic exploration of the security of MAC-
then-encrypt conﬁgurations of IPsec. An attack against