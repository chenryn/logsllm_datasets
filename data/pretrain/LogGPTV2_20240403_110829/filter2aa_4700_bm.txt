{
  ___acrt_lock(*param_1);
  FUN_0040d955(param_2);
  FUN_0040d949();
  return;
}
void FUN_0040d949(void)
{
  int unaff_EBP;
  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));
  return;
}
void __fastcall FUN_0040d955(int **param_1)
{
  int iVar1;
  _memcpy_s(DAT_0041f2a0,0x101,(void *)(*(int *)(**param_1 + 0x48) + 0x18),0x101);
  _memcpy_s(DAT_0041f2a4,0x100,(void *)(*(int *)(**param_1 + 0x48) + 0x119),0x100);
  LOCK();
  iVar1 = **(int **)*param_1[1] + -1;
  **(int **)*param_1[1] = iVar1;
  if ((iVar1 == 0) && (*(undefined **)(void **)*param_1[1] != &DAT_0041e208)) {
    FID_conflict__free(*(void **)*param_1[1]);
  }
  *(undefined4 *)*param_1[1] = *(undefined4 *)(**param_1 + 0x48);
  LOCK();
  **(int **)(**param_1 + 0x48) = **(int **)(**param_1 + 0x48) + 1;
  return;
}
// Library Function - Single Match
// Name: ?CPtoLocaleName@@YAPB_WH@Z
// Library: Visual Studio 2015 Release
// wchar_t const * __cdecl CPtoLocaleName(int)
wchar_t * __cdecl CPtoLocaleName(int param_1)
{
  if (param_1 == 0x3a4) {
    return (wchar_t *)L"ja-JP";
  }
  if (param_1 == 0x3a8) {
    return (wchar_t *)L"zh-CN";
  }
  if (param_1 == 0x3b5) {
    return (wchar_t *)L"ko-KR";
  }
  if (param_1 != 0x3b6) {
    return (wchar_t *)0x0;
  }
  return (wchar_t *)L"zh-TW";
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
// Name: ?getSystemCP@@YAHH@Z
// Library: Visual Studio 2015 Release
// int __cdecl getSystemCP(int)
int __cdecl getSystemCP(int param_1)
{
  int local_14;
  int local_10;
  char local_8;
  FUN_00405ed6(&local_14,(undefined4 *)0x0);
  _DAT_0041f2a8 = 0;
  if (param_1 == -2) {
    _DAT_0041f2a8 = 1;
    param_1 = GetOEMCP();
  }
  else {
    if (param_1 == -3) {
      _DAT_0041f2a8 = 1;
      param_1 = GetACP();
    }
    else {
      if (param_1 == -4) {
        _DAT_0041f2a8 = 1;
        param_1 = *(UINT *)(local_10 + 8);
      }
    }
  }
  if (local_8 != 0) {
    *(uint *)(local_14 + 0x350) = *(uint *)(local_14 + 0x350) & 0xfffffffd;
  }
  return param_1;
}
// Library Function - Single Match
// Name: ?setSBCS@@YAXPAU__crt_multibyte_data@@@Z
// Library: Visual Studio 2015 Release
// void __cdecl setSBCS(struct __crt_multibyte_data *)
void __cdecl setSBCS(__crt_multibyte_data *param_1)
{
  int iVar1;
  __crt_multibyte_data *p_Var2;
  int *piVar3;
  piVar3 = (int *)(param_1 + 0x18);
  FUN_00402e50(piVar3,0,0x101);
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x21c) = 0;
  iVar1 = 0x101;
  *(undefined4 *)(param_1 + 0xc) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  do {
    *(undefined *)piVar3 = (&DAT_0041e208 + -(int)param_1)[(int)piVar3];
    piVar3 = (int *)((int)piVar3 + 1);
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  p_Var2 = param_1 + 0x119;
  iVar1 = 0x100;
  do {
    *p_Var2 = p_Var2[(int)(&DAT_0041e208 + -(int)param_1)];
    p_Var2 = p_Var2 + 1;
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  return;
}
void __cdecl FUN_0040daee(int param_1)
{
  byte bVar1;
  char cVar2;
  BOOL BVar3;
  uint uVar4;
  undefined uVar5;
  byte *pbVar6;
  _cpinfo local_71c;
  WORD local_708 [512];
  WCHAR local_308 [128];
  WCHAR local_208 [128];
  CHAR local_108 [256];
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if ((*(int *)(param_1 + 4) == 0xfde9) ||
     (BVar3 = GetCPInfo(*(UINT *)(param_1 + 4),(LPCPINFO)&local_71c), BVar3 == 0)) {
    uVar4 = 0;
    do {
      if (uVar4 - 0x41 > 8),1);
}
void FUN_0040de6a(void)
{
  uint uVar1;
  int **ppiVar2;
  ppiVar2 = (int **)&DAT_0041f29c;
  uVar1 = FUN_0040b5c7();
  FUN_0040dd8c(uVar1,ppiVar2);
  return;
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
void __cdecl FUN_0040de7d(int param_1,__crt_multibyte_data *param_2)
{
  byte bVar1;
  undefined2 uVar2;
  uint CodePage;
  uint uVar3;
  BOOL BVar4;
  byte *pbVar5;
  __crt_multibyte_data *p_Var6;
  wchar_t *pwVar7;
  int iVar8;
  byte *pbVar9;
  undefined2 *puVar10;
  undefined2 *puVar11;
  uint uVar12;
  int local_20;
  _cpinfo local_1c;
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  CodePage = getSystemCP(param_1);
  if (CodePage != 0) {
    uVar12 = 0;
    uVar3 = 0;
    local_20 = 0;
LAB_0040deb1:
    if (*(uint *)((int)&DAT_0041e638 + uVar3) != CodePage) goto code_r0x0040debd;
    FUN_00402e50((int *)(param_2 + 0x18),0,0x101);
    pbVar5 = (byte *)(local_20 * 0x30 + 0x41e648);
    do {
      bVar1 = *pbVar5;
      pbVar9 = pbVar5;
      while ((bVar1 != 0 && (bVar1 = pbVar9[1], bVar1 != 0))) {