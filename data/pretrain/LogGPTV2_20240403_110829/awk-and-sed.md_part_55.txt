从
exit ［expr]
while (expr)
$0。
素
返
选
delete array[element]
于读取关联数组的特殊循环。对于数组中的每个元素，
返回×的余弦，×单位为弧度。
项expr 是 awk白
expr 的值为真时，
除数组的元
cos (x)
开始 while、for 或 do 循环的下一个迭代。
某些原因读取失败时返回-1.
个记录时返回值为1，当遇到最后一行时返回0，当由于
没有变化。实际上 getline 是一个函数，当它成功读取一-
的输出结果。两种形式每次都只读取一行，并且每次执行
回e的x次幂（e^x)
脚本中退出，
该语句得到下一个输入行。输入行被赋给$并分解为字
循环语：
意义的。
和打开文件或管道所用的表达式相同一
管道的同一表达式作为参数。这个表达式的每个字符必须
第
个函数你可以关闭一个文件或一个管道。它将打开文件或
一种形式从file 中读取输入，
且设置 NF、NR 和FNR.如果指定了var,那么结果将赋
body
S,t)
50192241
句。执行在 body 中的语句并计算 expr 的值，当
，返回替换的次数。如果七没有给出，默认值为
素
不再读取新行。如果有END 规则，则执行。
- 423 -
的返回值。
重复执行 body.
：init-expr 是计数器变量的初始值。
附录二
第二种形式读怪command
退出循环。incr-expr
—即使空格也是有
awk 的快速参考
当时行
---
## Page 406
sprintf(）
split()
sin()
rand(）
 printf
retur n 
print
next
match(）
log(）
length()
int()
index()
QQ群：
该函数返回根据 printf 格式说明指定的格式化的字符串。它
分割是相同的。
sin(x)
return [expr]
数列表。参见 print 语句关于 dest-expr 的描述。
从C语言中借用的一个可选的输出语句。它可以产生格式化
在这种情况下，
expr 是一个可选表达式，
通过将×中的小数点后面的数字截断来得到×的整数值。
[else statement2 ］
没
这
使
回
生
rand()
说
是
输
“>>file”将输出追加到一个文件中，
“>file”直接将输出送到一个文件，
求
读
和
中
模
log (x)
返
length(str)
int (x)
返
index(str,
有指定字段分隔符，
这个函数利用字段分隔符将字符串分解到数组元素中。如果
回×的正弦，×单位为弧度。
用用户定义的终端退出函数，返回表达式的值
成0到
明符的列表）。expr-list是一个和格式说明符对应的参
一个格式
出。它也可
 output-expr 的值并将它直接输出到标准输出，
器的种子数。
相同的一系
取下一个输入行并从第一个规则开始执行脚本。
ELENGTH的值分别设置为匹配的开始位置和匹配的长度。
与r匹配的开始位置，
式匹配函数，
atch(s, r)
回×的自然对数（以e为底)
回字符串的长度，如果没有参数则返回$O的长度。
回在字符串中的子串的位置（起始位置为1）
川1之间的一个随机数。每次执行脚本时这个函数返
50192241
系列数据，
说明字符串和常量字符串（参加下一节关于格式
可以用于输出没有自动换行的数据。
substr)
0
如果文件不存在都将创建这个文件。
由正则表达式r给出模式，
- 424
sep)
，除非使用 srand()函数生成随机数发
则使用FS 的值。数组的分割和字段的
，直接将输出送到一个文件或管道。
如没有发现匹配则返回0.将RSTART
附录二
，并覆盖它的以前内容。
，保留它以前的内容。
返回在字符串 s
awk 的快速参考
format-expr
后面跟着
“
---
## Page 407
的个数。对于字符串格式，它控制从这个字符串中打印的字符的个数。
precision 修饰符用于调整十进制或浮点型的值，
空格来填满该字段。
格式表达式可以在%之后有3个可选的修饰符，
应用在
whi le
toupper（）
tolower()
system(
substr()
段宽度为20个字符的左对齐的字符串。如果这个字符串不足20个字符，则用
输出字段的width 是一个数值型的值。当你指定字段的宽度时，
sub()
srand()
sqrt()
 %-width. pr ecision for mat-specifier 
 printf 和 sprintf 中的格式表达式
将
QQ群：
while (expr)
toupper (str)
串（注1）
tolower (str)
循
符
将
取
是
文
某
态
该
system (command)
大
返
substr(str,
认值为$0.
字符串 srt 中所有大写字母转换为小写字母并返回新的字符
符
替
时
使
srand (expr)
返
sqrt(x)
参
符
格
盾环结构。当
子字符串 str 中所有小写字母转换为大写字母并返回新的字
不可用的。
档将提供详细的介绍。在 awk 脚本中这个命令的输出结果
函数执行给出的 command 并返回它的状态。执行命令的状
长序为len。如果没有给出长度，将得到剩余的字符串。
间。返回值为旧的种子数。
用 expr 为随机数发生器设置一个种子数。默认值为当天的
数列表。
串和常量字符串。expr-list 是一个和格式说明符对应的
各式化数据但不输出数据。format-expr 是一个格式说明字
串。
到脚本
些类型的错
通常
回字符
串。
换字符
回的×平方根
如果成功则返回1，
表示成
存串s中与字符串t中的正则表达式r匹配的所有字
50192241
中
串str
：使用“commandlgetline”可以将命令的输出读
expr 为真时，
）statement
beg,
误，
功
中开始位置为beg的字串，
- 425
不管是正的或负的，
Ten)
）表示命令执行成功。非零值表
否则返回0。如果没有给出t，
，在%前面为格式说话符：
：执行 statement.
附录二
控制小数点左边出现的数字
“%-20”输出的是一个字
，所执行的命令的有
后面的字符串最
 awk 的快速参考
该字段的内容
关
示
默
---
## Page 408
有用的。
执行的是传统的舍入，如果你的 awk 的 printf 进行的是无编差舍人，这或许是
行舍入计算（例如，
位，因此1.5合入得到2。而4.5的舍入却为4。因此如果你利用一个格式来进
多机器上，sprintf舍入是“无偏差的”
printf和 sprinft (的舍入方式通常取决于系统的C sprintf(3)子例程。在许
通常，
o
G
字符
表 B-6：在printf 中使用的格式说明符
在表 B-6中列出了应用于 printf 和 sprinft 语句中的格式说明符。
写报告，其中包含美元值，则可将OFMT改为“%.2f”
OFMT 来改变。这将影响用 print 语句输出数值的精度。例如，如果你用 awk 编
注意，数值输出的默认精度是“%.6g”。
版本不支持这些。
在这个例子中，
注1：在 nawk 的早期版本中，
要实现这一功能必须注上星号，
你可以根据printf 或 sprintf 中的参数列表为 width 和 precision动态赋值。
用
的。
printf("%*.*g\n", 5, 3, myvar) ;
凡是在系统的 sprintf(3)子例程中，可用的格式说明符在 awk 中也是可
宽度为5，精度为3，将要打印的值来自于 myvar。nawk 的较老
QQ群：
“%.Of"），你应该知道你的系统是如何处理的。下面的函数
无符号的十六进制数，
无符号的十六进制数，
E
e或f的轮换，
浮点型格式([-]ddd. pr ecision).
浮点型格式([-]d.pr ecisionE[+-]dd).
浮点型格式（[-]d.pr ecisione[+-]dd)，
十进制整数
ASCII字符
描述 
字面%
字符串
无符号的八进制值
十进制整数，
或f的轮换，
50192241
例如用于 sunos4.1.x的版本,
而不是指定字面值。
- 426 -
已添加到POSIX中
无论哪一个最短，
无论哪一个最短，
，这个默认值可以通过设置系统变量
这意味着它不总是对“.5”进行进
用A-F表达10-15
用a-f表达10-15
附录二
将末尾的零删除
将末尾的零删除
不支持tolower()
awk 的快速参考
---
## Page 409
} else 
function round (x,
#round--－一般的四舍五入
#
#
if(x= .5)
else 
if (fraction >= .5)
fraction = aval
 return ival + 1
return int(x)
50192241
return int (x)
return ival
#没有小数部分
#整数部分，
ival, aval, 
427.
#绝对值
iva
用int(截断
fraction)
附录二
#-2.3舍入为-2
#-2.5舍入为-3
awk 的快速参考
---
## Page 410
#必须至少有两个参数-nawk和filename
#处理命令行参数
程序 spellcheck.awk 的完整清单
BEGIN {
#
#
#
#
#
#
#
#
#
#
#
#
第十二章的补充
附录三
BEGIN操作完成下面的任务：
作者：Dale Dougherty。