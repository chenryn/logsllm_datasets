C. Implementation Details
derived tactics from the rules presented before, adapting them
to work conveniently using this presentation.
VII. CASE STUDIES
We have implemented the meta-logic inside an interactive
protocol prover: SQUIRREL. This tool consists of about 10,000
lines of OCaml code, and is available at [50].
SQUIRREL accepts models written in a variant of the applied
pi-calculus, as depicted in Listing 1, and allows to prove reach-
ability and equivalence properties of the speciﬁed protocol.
Proofs are interactive, using tactics. Automated tactics are
available to reason over equalities and disequalities over terms
(modulo e.g. the equations of XOR). Some tactics performing
basic proof search and automated reasoning are implicitly
applied at each step of the proof to simplify goals and close
absurd ones. A strength of the tool is its modularity: extending
the tool with new cryptographic primitives does not impact the
core of the tool. It only requires to add new tactics and to prove
their soundness inside the meta-logic.
We have used our tool
to perform a number of case
studies, proving different kind of properties (authentication,
strong secrecy, anonymity, unlinkability) under various crypto-
graphic assumptions (PRF, EUF-CMA, XOR, CCA1, ENC-KP,
INT-CTXT, DDH). They are summarized in Table I.
For each protocol, we provide the number of lines of code
(LoC), the cryptographic assumptions used, and the security
properties studied. In all cases, SQUIRREL is able to conclude
in less than one minute. Interestingly, most proofs follow the
intuition of the pen-and-paper proofs, while some low-level
reasoning is successfully abstracted away or automated.
A. RFID based protocols
Since we are interested in proving observational equivalence
between protocols that are compatible and whose terms only
differ in a few positions, we use the common technique of
describing two protocols as a single bi-protocol using a special
binary function symbol diﬀ(·,·). Similarly, meta-equivalences
are presented as bi-frames, i.e. as a single sequence of meta-
terms and formulas featuring the diﬀ(·,·) symbol. We have
Those case studies (Basic Hash [23], Hash Lock [40],
LAK with pairs instead of XOR as in [39], MW [47] and
Feldhofer [38]) are authentication protocols between identity-
speciﬁc tags and a generic reader (having access to a shared
database with authorized tags credentials). We used our tool
to establish proofs of unlinkability using the notion deﬁned
in [4], [7]: an outside observer must not be able to distinguish
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:06 UTC from IEEE Xplore.  Restrictions apply. 
548
Protocol
Basic Hash [23]
Hash Lock [40]
LAK (with pairs) [39]
MW [47]
Feldhofer [38]
Private Authentication [11]
Signed DDH [1, ISO 9798-3]
LoC
100
130
250
300
270
100
240
Assumptions
PRF, EUF-CMA
PRF, EUF-CMA
PRF, EUF-CMA
PRF, EUF-CMA, XOR
ENC-KP, INT-CTXT
CCA1, ENC-KP
EUF-CMA, DDH
Security properties
Authentication & Unlinkability
Authentication & Unlinkability
Authentication & Unlinkability
Authentication & Unlinkability
Authentication & Unlinkability
Anonymity
Authentication & Strong Secrecy
Additional case studies, using the composition framework from [27]
Signed DDH [1, ISO 9798-3]
SSH (with forwarding agent) [51]
200
700
EUF-CMA, DDH
EUF-CMA, INT-CTXT, DDH
Authentication & Strong Secrecy
Authentication & Strong Secrecy
TABLE I
CASE STUDIES
between a system where each tag can play many sessions from
a system where each tag can play at most one session.
These proofs follow the same global pattern: we use the
induction tactic to reason on an arbitrary number of sessions,
then at some point we use the equivalent tactic to transform
the conditional of an action into an equivalent formula that
can be removed with FA-DUP. The systematic use of authen-
tication to establish unlinkability is reminiscent of the well-
authentication condition of [7], [39].
In our framework, equivalence requires synchronized ex-
ecutions of the two protocols, but their databases need not
have similar structures, as would be the case with the diff-
equivalence notions of PROVERIF or TAMARIN. This has
allowed us to obtain proofs of unlinkability that are out-of-
scope of these tools, cf. discussion about Basic Hash in [7].
For LAK, MW and Feldhofer protocols, the last conditional
of the protocol is not modelled. We managed to partially
overcome this limitation for the MW protocol: in this proof,
we enrich the frame with inﬁnite sequences of messages that
over-approximate what the attacker may learn during protocol
executions, which eases the proof process. We cannot yet
prove the indistinguishability of these sequences in the tool,
because we lack a notion of induction over sequences of
messages. This is left for future work.
B. Private authentication
We study the Private Authentication protocol as presented
in [11], where the authors give a (manual) proof of anonymity
in the computational model for one session of the protocol. A
protocol preserves anonymity if an attacker cannot tell whether
a session is initiated by one identity or by another. Using our
tool, we established a mechanized proof of anonymity for this
protocol, for an arbitrary number of sessions.
C. DDH based protocols
We ﬁrst study a proof of strong secrecy of the shared key
for the signed DDH protocol [1, ISO 9798-3]. Similarly to
RFID based protocols, we rely on the proof of authentication
properties in the reachability prover to perform our proof of
strong secrecy in the indistinguishability prover.
We also present two additional case studies for the signed
DDH protocol [1, ISO 9798-3] and the SSH protocol [51],
where proofs are performed through the use of the composition
framework developed for the CCSA model in [27]. The authors
outline how to decompose a proof for those protocols into
single session proofs, which consists in slightly modifying
the hash function by giving more capacities to the attacker
using oracles. With our tool, we were able to mechanize those
proofs. Compared to the other case studies presented so far,
those two hold for an unbounded number of sessions that may
depend on the security parameter (this is given by the result
in [27]), and not just for an arbitrary number of sessions.
VIII. CONCLUSION
We have designed a meta-logic on top of the CCSA logic
of [11], and proof systems for establishing reachability and
equivalence properties in that language. We have shown that
it yields a simple, high-level methodology for carrying out
computer-assisted proofs of cryptographic protocols, providing
asymptotic security guarantees in the computational model.
This is supported by the implementation of the interactive
prover SQUIRREL, and its use on various case studies.
As future work, we plan to enrich and optimize the proof
automation, for instance by borrowing from the SMT tech-
niques and tools. Our proof systems could also be enriched
to beneﬁt from equivalence reasoning in reachability goals,
e.g. the PRF equivalence rule should allow to replace hashes
by fresh names in reachability goals. We would like also
to extend our framework to deal with protocols with states.
Whereas handling protocols with states seems to be difﬁcult
in CRYPTOVERIF, our approach based on a reasoning over
execution traces of protocols seems to be more suitable for this
extension. A ﬁrst application would be, e.g., the mechanization
of the modiﬁed AKA protocol of [41]. On a more theoretical
level, we plan to address the formal semantics of our applied
pi-calculus protocols, and the study of their translations to our
internal representation as sets of actions. Finally, we plan to
elaborate on our approach to provide truly unbounded security
guarantees, instead of asymptotic security guarantees for each
trace (with an asymptotic bound that may depend on the trace).
ACKNOWLEDGMENT
We would like to thank Bruno Blanchet and Benjamin
Grégoire for their interactions and helpful guidance.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:06 UTC from IEEE Xplore.  Restrictions apply. 
549
REFERENCES
[1] ISO/IEC 9798-3:2019, IT Security techniques – Entity authentication –
Part 3: Mechanisms using digital signature techniques.
[2] Martín Abadi, Bruno Blanchet, and Cédric Fournet. The applied pi
J.
calculus: Mobile values, new names, and secure communication.
ACM, 65(1):1:1–1:41, 2018.
[3] Martín Abadi and Phillip Rogaway. Reconciling two views of cryptogra-
phy (the computational soundness of formal encryption). J. Cryptology,
15(2):103–127, 2002.
[4] Myrto Arapinis, Tom Chothia, Eike Ritter, and Mark Ryan. Analysing
unlinkability and anonymity using the applied pi calculus. In CSF, pages
107–121. IEEE Computer Society, 2010.
[5] Alessandro Armando, David Basin, Yohan Boichut, Yannick Chevalier,
Luca Compagna, Jorge Cuéllar, P Hankes Drielsma, Pierre-Cyrille
Héam, Olga Kouchnarenko, Jacopo Mantovani, et al. The AVISPA
tool for the automated validation of internet security protocols and
applications. In CAV, pages 281–285. Springer, 2005.
[6] David Baelde, Stéphanie Delaune, Charlie Jacomme, Adrien Koutsos,
and Solène Moreau. An interactive prover for protocol veriﬁcation in
the computational model. https://hal.archives-ouvertes.fr/hal-03172119.
Technical report.
[7] David Baelde, Stéphanie Delaune, and Solène Moreau. A method for
In CSF, pages 169–183.
proving unlinkability of stateful protocols.
IEEE, 2020.
[8] Gergei Bana, Pedro Adão, and Hideki Sakurada. Computationally
complete symbolic attacker in action. In FSTTCS, volume 18 of LIPIcs,
pages 546–560. Schloss Dagstuhl - Leibniz-Zentrum für Informatik,
2012.
[9] Gergei Bana, Rohit Chadha, and Ajay Kumar Eeralla. Formal analysis
of vote privacy using computationally complete symbolic attacker. In
ESORICS (2), volume 11099 of LNCS, pages 350–372. Springer, 2018.
[10] Gergei Bana and Hubert Comon-Lundh. Towards unconditional sound-
In POST, volume
ness: Computationally complete symbolic attacker.
7215 of Lecture Notes in Computer Science, pages 189–208. Springer,
2012.
[11] Gergei Bana and Hubert Comon-Lundh. A computationally complete
symbolic attacker for equivalence properties. In CCS, pages 609–620.
ACM, 2014.
[12] Manuel Barbosa, Gilles Barthe, Karthikeyan Bhargavan, Bruno
Blanchet, Cas Cremers, Kevin Liao, and Bryan Parno. SoK: Computer-
aided cryptography. IACR Cryptol. ePrint Arch., 2019:1393, 2019.
[13] Gilles Barthe, Benjamin Grégoire, Sylvain Heraud, and Santiago Zanella
Béguelin. Computer-aided security proofs for the working cryptogra-
pher. In CRYPTO, volume 6841 of Lecture Notes in Computer Science,
pages 71–90. Springer, 2011.
[14] David Basin, Jannik Dreier, Lucca Hirschi, Saša Radomirovic, Ralf
Sasse, and Vincent Stettler. A formal analysis of 5G authentication.
In CCS, pages 1383–1396, 2018.
[15] David A. Basin, Cas J. F. Cremers, and Simon Meier. Provably repairing
the ISO/IEC 9798 standard for entity authentication. In POST, volume
7215 of Lecture Notes in Computer Science, pages 129–148. Springer,
2012.
[16] David A. Basin, Jannik Dreier, and Ralf Sasse. Automated symbolic
proofs of observational equivalence. In CCS, pages 1144–1155. ACM,
2015.
[17] David A. Basin, Andreas Lochbihler, and S. Reza Seﬁdgar. CryptHOL:
Game-based proofs in higher-order logic. J. Cryptology, 33(2):494–566,
2020.
[18] Karthikeyan Bhargavan, Bruno Blanchet, and Nadim Kobeissi. Veriﬁed
models and reference implementations for the TLS 1.3 standard candi-
date. In 2017 IEEE Symposium on Security and Privacy, pages 483–502.
IEEE, 2017.
[19] Karthikeyan Bhargavan, Barry Bond, Antoine Delignat-Lavaud, Cé-
dric Fournet, Chris Hawblitzel, Catalin Hritcu, Samin Ishtiaq, Markulf
Kohlweiss, Rustan Leino, Jay R. Lorch, Kenji Maillard, Jianyang Pan,
Bryan Parno, Jonathan Protzenko, Tahina Ramananandro, Ashay Rane,
Aseem Rastogi, Nikhil Swamy, Laure Thompson, Peng Wang, Santi-
ago Zanella Béguelin, and Jean Karim Zinzindohoue. Everest: Towards
In SNAPL, volume 71
a veriﬁed, drop-in replacement of HTTPS.
of LIPIcs, pages 1:1–1:12. Schloss Dagstuhl - Leibniz-Zentrum für
Informatik, 2017.
[20] Bruno Blanchet. An efﬁcient cryptographic protocol veriﬁer based on
prolog rules. In CSFW, pages 82–96. IEEE Computer Society, 2001.
[21] Bruno Blanchet. A computationally sound mechanized prover for
security protocols. In IEEE Symposium on Security and Privacy, pages
140–154. IEEE Computer Society, 2006.
[22] Bruno Blanchet, Martín Abadi, and Cédric Fournet. Automated veriﬁ-
cation of selected equivalences for security protocols. In LICS, pages
331–340. IEEE Computer Society, 2005.
[23] Mayla Brusò, Konstantinos Chatzikokolakis, and Jerry den Hartog.
In CSF, pages 75–
Formal veriﬁcation of privacy for RFID systems.
88. IEEE Computer Society, 2010.
[24] Ran Canetti, Alley Stoughton, and Mayank Varia. Easyuc: Using
In
easycrypt to mechanize proofs of universally composable security.
CSF, pages 167–183. IEEE, 2019.
[25] Rohit Chadha, Vincent Cheval, ¸Stefan Ciobâc˘a, and Steve Kremer. Auto-
mated veriﬁcation of equivalence properties of cryptographic protocols.
TOCL, 17(4):1–32, 2016.
[26] Vincent Cheval, Steve Kremer, and Itsaka Rakotonirina. The DEEPSEC
prover. In CAV, volume 10982 of Lecture Notes in Computer Science,
pages 28–36. Springer, 2018.
[27] Hubert Comon, Charlie Jacomme, and Guillaume Scerri. Oracle simula-
tion: a technique for protocol composition with long term shared secrets.
In CCS, pages 1427–1444, 2020.
[28] Hubert Comon and Adrien Koutsos. Formal computational unlinkability
In CSF, pages 100–114. IEEE Computer
proofs of RFID protocols.
Society, 2017.
[29] Hubert Comon-Lundh, Véronique Cortier, and Guillaume Scerri.
Tractable inference systems: An extension with a deducibility predicate.
In CADE, volume 7898 of Lecture Notes in Computer Science, pages
91–108. Springer, 2013.
[30] Hubert Comon-Lundh and Stéphanie Delaune.
The ﬁnite variant
property: How to get rid of some algebraic properties. In RTA, volume
3467 of Lecture Notes in Computer Science, pages 294–307. Springer,
2005.
[31] Véronique Cortier, Constantin Catalin Dragan, François Dupressoir,
Benedikt Schmidt, Pierre-Yves Strub, and Bogdan Warinschi. Machine-
In IEEE
checked proofs of privacy for electronic voting protocols.
Symposium on Security and Privacy, pages 993–1008. IEEE Computer
Society, 2017.
[32] Véronique Cortier, Niklas Grimm, Joseph Lallemand, and Matteo
Maffei. Equivalence properties by typing in cryptographic branching
In International Conference on Principles of Security and
protocols.
Trust, pages 160–187. Springer, Cham, 2018.
[33] Véronique Cortier, Steve Kremer, and Bogdan Warinschi. A survey of
symbolic methods in computational analysis of cryptographic systems.
J. Autom. Reasoning, 46(3-4):225–259, 2011.
[34] Véronique Cortier and Bogdan Warinschi. A composable computational
soundness notion. In CCS, pages 63–74. ACM, 2011.
[35] Cas Cremers, Marko Horvat, Jonathan Hoyland, Sam Scott, and Thyla
In
van der Merwe. A comprehensive symbolic analysis of TLS 1.3.
CCS, pages 1773–1788, 2017.
[36] Danny Dolev and Andrew Chi-Chih Yao. On the security of public key
protocols (extended abstract). In FOCS, pages 350–357. IEEE Computer
Society, 1981.
[37] Santiago Escobar, Catherine Meadows, and José Meseguer. Maude-
NPA: Cryptographic protocol analysis modulo equational properties. In