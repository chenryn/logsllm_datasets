-i（/cgi-bin/1\?）0
~gopher:
^ftp:
：如果squid最后修改系数算法低于该百分比则数据不过期
[-i]
0
regexp min percent max [option]
20%4320
1440
1440
80
80
0%
20%10080
0no-queryoriginserver
/var/www/html/index.html
0no-queryoriginserver round-robin
1440
0
可以使用weigh=N为源服务器指定
#禁止缓存CGI脚本
第8章集群及高可用
round-robin
411
---
## Page 428
·412
终端用户通过访问HAProxy代理
HAProxy拓扑结构如图8-9所示，
内部服务器遭受外部攻击。
蔽内部的真实Web服务器，防止
用类似的代理软件还可以对外屏
集成到我们现有的站点架构中。使
模式使其可以非常容易且安全地
的七层数据请求。HAProxy的工作
软件非常适合于处理高负载站点
的高可用及负载均衡解决方案。该
8.4
看到两个不同的页面。
Linux运维之道
8.4.1HAProxy 简介
HAProxy是免费、高效、可靠
客户端配置正确的网络参数后，通过浏览器访问代理服务器：http://10.10.10.10。由于我们
3.客户端的验证
HAProxy 负载均衡
[root@web2~]#servicenetworkrestart
TYPE="Ethernet"
PREFIX=24
IPADDR=192.168.0.2
ONBOOT="yes"
BOOTPROTO="static"
DEVICE="etho"
[root@web2
root@web2
root@web2
root@web2
root@web2~]#serviceiptablesstop
~]# service httpd start
~]#
~]# chkconfig iptables off
#echo“192.168.0.2">
/var/www/html/index.html
Database
in pioxy rmode
Load balancer
图8-9
AKONEH
WebServers
Firewall
---
## Page 429
代理案例，代理服务器将转发数据请求到单一后台服务器127.0.0.1:8000。
的集合，有时仅使用listen即可替代frontend与backend。下面给出了一个监听80端口的HTTP
用来匹配客户端请求的域名或URI等，backend定义后端服务器集群，listen是frontend与backend
局设置段与代理段，global代表全局段，defaults、listen、frontend、backend为代理段。frontend
件，当启动HAProxy服务时需要使用-f选项指定配置文件路径。HAProxy配置文件主要包含全
及以上版本。
命令生成makefile文件时，TARGET=linux2628代表Linux操作系统使用的内核版本为2.6.28
及服务器标识，实现会话保持功能。
送给客户端的Cookie信息进行会话保持。第三种方式中，HAProxy 将保存真实服务器的 Session
问代理服务器时可以转发到固定的真实服务器上。第二种方式中，HAProxy依靠真实服务器发
Session。第一种方式中，HAProxy 将客户端IP进行Hash计算并保存，以此确保当相同的IP访
可以被转发至相同的后端真实服务器），HAProxy有三种解决方案：客户端IP、Cookie以及
端真实服务器。为了让同一客户端访问服务器时可以保持会话（同一客户端第二次访问网站时
服务器获得站点页面，而代理服务器在收到客户端请求后会根据自身规则将数据请求转发给后
8.4.2
HAProxy 安装后没有默认的配置文件，需要手动创建。本例将创建/etc/haproxy.cfg 配置文
HAProxy 软件包可以在其官方网站上下载。下面通过源码方式安装该软件，在使用 make
frontend http-in
defaults
global
[root@haproxy
24.tar.gz
[root@haproxy~]#wgethttp://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.
[root@haproxy ~]#yum -yinstall gcc
root@haproxy
root@haproxy
root@haproxy
配置文件解析
bind*:80
defaultbackendservers
timeout server 50000ms
timeout client 50000ms
timeout connect 5000ms
mode http
maxconn 256
daemon
~]#make
~]#
~]#tar -xzf haproxy-1.4.24.tar.gz-C /usr/src/
make TARGET=linux2628
cd/usr/src/haproxy-1.4.24/
install
第8章集群及高可用
413
---
## Page 430
表8-7
Linux运维之道
代理设置
global
414
表8-7列出了HAProxy主配置文件的具体语法格式及描述。
backend servers
option dontlognull
option allbackups
option abortonclose
optionforwardfor
cookie
o uono
statsrefresh
stats auth admin:admin
bind:
balance roundrobin
contimeout
timeout check
mode
tune.bufsize
maxconn
ulimit-n
pidfile
nbproc
log
gid
uid
daemon
chroot
serverserverl
配置项
127.0.0.1:8000 maxconn 32
不记录空连接日志，主要用于不记录健康检查日志
备用服务器
当后端服务器全部宕机时，
服务器负载高时，自动关闭队列里处理时间比较长的连接请求
得客户端的真实IP地址
允许插入X-Forwarded-For数据包头给后端真实服务器，可以让后端服务器获
启用基于cookie的保持连接功能
使用http日志
统计页面刷新间隔时间
设置监控界面的用户名称与密码
定义一个或多个监听地址或端口
默认负载均衡工作模式，轮询
设置连接超时时间
设置检查超时时间
HAProxy工作模式，可选项为：tep、http、health
设置buffer大小，默认值为16384，单位为字节（B）
设置每个进程支持的最大并发数
设置每个进程的最大文件描述符数量
将进程ID号写入文件
指定后台进程的数量
配置全局syslog服务器，可以设置两台日志服务器
配置进程的组ID，建议设置为HAProxy专用组
配置进程的账户ID，建议设置为HAProxy专用账户
配置HAProxy以后台进程模式工作
但需要使用超级账户启动HAProxy程序
将工作目录切换至并执行chroot。该配置可增强HAProxy的安全性，
是否激活所有备用的服务器，默认仅启动第一个
描述
---
## Page 431
use backend servers 2 if example acl
#servers_2后端服务器组
#当用户访问请求触发名为example_acl的ACL规则时，代理会将请求转发为
blockifbadboys
#当用户访问请求触发名为badboys的ACL规则时，禁止该客户的请求数据
acl example_acl hdr_reg(host)-i
#定义ACL控制请求包头信息通过正则匹配，-i代表不区分大小写
acl badboys src 192.168.0.0/24
#定义ACL控制源地址为192.168.0.0/24网段
frontend http-in
defaults
global
ACL访问控制列表案例如下：
acl
use_backend
default_backend
timeoutconnect
timeoutserver
timeout client
retries
option httpchk
monitor-fail if site_dead
monitor-uri
optionredispatch
bind*:80
timeout server 50000ms
timeout client 50000ms
mode http
maxconn 256
daemon
配置项
（访问路径匹配正则）、url（统一资源定位符）
（目标地址）、dst_port（目标端口）、src（源地址）、hdr（连接头部信息）、path_reg
定义访问控制列表，配置文件中通过name调用该ACL，常用限制包括：dst
当条件满足时，指定后端服务器组，需要设置ACL
backend定义
配置文件中没有use_backend规则时，设置默认后端服务器组，服务器组由
设置连接最大超时时间为n，默认单位为毫秒（ms）
设置服务器端最大超时时间为n，默认单位为毫秒（ms）
设置客户端最大超时时间为n，默认单位为毫秒（ms）
服务器连接失败后的重试次数
使用HTTP协议检查服务器健康状态
当服务器宕机时，返回503错误代码，需要定义ACL
检查文件是否存在，依次判断主机健康状态
选项在后端服务器岩机时强制将请求转发给其他健康主机
在HTTP模式，如果使用cookie的服务器宕机，客户端还会坚持连接它，该
（www.example.com|web.example.com)$
描述
第8章集群及高可用
415
续表
---
## Page 432
表8-8
访问Web服务，则由inside_servers服务器组提供Web页面。
default_backend定义默认服务器组为external_servers;定义ACL规则时，如果内网（192.168.0.0/24）
端 80 端口；通过backend分别定义名为inside_servers 和external_servers 的服务器组；使用
务架构，整个网络参数见表8-8。本例将使用listen定义一个监控端口；使用frontend定义一个前
Linux运维之道
web1.example.com
haproxy.example.com
416
8.4.3
extermal_servers服务器组中包含webl.example.com和web2.example.com两台服务器，
本节将以生产环境为原型，简化网络拓扑后使用HAProxy实现图8-10所示的高性能代理服
backendservers_2
backend servers_1
#定义没有ACL时默认使用的服务器组
HAProxy应用案例
server server1 127.0.0.1:8080 maxconn 3
server server1 127.0.0.1:8000 maxconn 32
default_backend servers_1
服务器名称
Internet
图8-10
#定义后端服务器组servers_2
#定义后端服务器组 servers_1
eth0:192.168.0.1
eth1:192.168.0.254
eth0:10.10.10.10
#定义服务器组中的具体服务器
网络配置
Web2
Web1
---
## Page 433
访问后端服务器，我们将三台服务器的页面设置为不同的内容以示区别。
client.example.com
web3.example.com
web2.example.com
[root@haproxy ~]# service network restart
TYPE="Ethernet"
PREFIX=24
IPADDR=192.168.0.254
BOOTPROTO="static"
DEVICE="eth1"
[root@haproxy ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth1
TYPE="Ethernet"
PREFIX=8
IPADDR=10.10.10.10
ONBOOT="yes"
BOOTPROTO="static"
DEVICE="etho"
[root@haproxy ~]#vim/etc/sysconfig/network-scripts/ifcfg-etho
HAProxy代理服务器设置如下。
TYPE="Ethernet"
GATEWAY=192.168.0.254
PREFIX=24
IPADDR=192.168.0.1
BOOTPROTO="static"
DEVICE="etho"
[root@webl ~]#vim /etc/sysconfig/network-scripts/ifcfg-etho
三台Web服务器基本采用相同的设置，下面仅以web1为例，为了演示HAProxy可以轮询
[root@haproxy~]#vim/etc/security/limits.conf
[root@haproxy
[root@webl
root@webl
root@webl
[root@webl ~]#service network restart
~]#
~]#
~]#
服务器名称
~1#
serviceiptablesstop
echo"192.168.0.1">/var/www/html/index.html
yum -y install httpd
service iptables stop
eth0:10.10.10.100
eth0:192.168.0.3
eth0:192.168.0.2
#内核调优，文件中插入如下两行
网络配置
第8章集群及高可用
417
续表
---
## Page 434
Linux 运维之道
418
1og 127.0.0.1 1oca13 info
mode http
bind 0.0.0.0:6553
listen admin_status
timeout
timeout
timeout
timeout check 2000ms
cookie SRV
balance roundrobin
retries 3
stats refresh 30
option abortonclose
option redispatch
option forwardfor
option dontlognull
option httpclose
optionhttplog
maxconn 20480
mode http
log global
defaults
statssocket/var/tmp/stats
ulimit-n 65535
pidfile/var/run/haproxy.pid
nbproc1
daemon
gid 99
uid99
chroot /var/haproxy
1og 127.0.0.11oca13 info
maxconn 4096
global