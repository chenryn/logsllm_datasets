User: How to deploy a web server using Ansible, including configuring website files, installing necessary software, and starting services.
Assistant: Here are the steps to deploy a web server on Ubuntu 18.04 with Ansible: 1. Install Ansible ``` sudo apt update sudo apt install ansible ``` 2. Write Ansible Playbook Create a file named `webserver.yml` locally, It includes the following content: ``` --- hosts: webserver become: true tasks: - name: install Apache apt: name=apache2 state=present - name: start Apache service service: name=apache2 state=started - name: Install PHP apt: name=php state=present - name: install MySQL apt: name=mysql-server state=present - name: configure website file copy: src: /path/to/site.conf dest: /etc/apache2/ sites-available/site.conf owner: root group: root mode: '0644' notify: Restart Apache service handlers: - name: Restart Apache service service: name=apache2 state=restarted ``` Specify web server in `hosts` IP or domain name, `become` is used to obtain root authority to operate. `tasks` includes installing Apache, starting Apache service, installing PHP and MySQL, and copying the website configuration files to the `/etc/apache2/sites-available` directory. `notify` is used to trigger tasks defined in `handlers`. 3. Write the website configuration file Create a file named `site.conf` locally, which includes the following content: ``` <VirtualHost *:80> ServerName example.com ServerAlias www.example.com DocumentRoot /var/www/ html <Directory /var/www/html> AllowOverride All </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> ``` combine `ServerName` and ` ServerAlias` with your domain name or IP address. 4. Copy the files to the remote server Execute the following command to copy the `webserver.yml` and `site.conf` files to the remote server: ``` ansible-playbook -i "your-server-ip-or-domain," webserver .yml --ask-become-pass ``` where `--ask-become-pass` is used to prompt for the sudo password. After successful execution, the Apache service will start and listen on port 80, and your website files will be placed in the `/var/www/html` directory. Attachment: How to test the website locally You can add a line of records in the local hosts file to point your domain name or IP address to the IP address of the Web server. For example: ``` 127.0.0.1 example.com ``` Then visit `http://example.com` in your browser.