【bash和图形界面的工作性质相同】
这些所谓的命令，其实都是一个个的小程序，或者说一个个的小软件而已。就跟狐狸妹妹、OO老先生一样，只不过比他们小巧很多。如果你愿意，也可以把Firefox视为一个上网用的图形化界面的命令，为了方便描述，咱们以后管这些家伙叫做命令程序吧。
当用户输入命令比如ls的时候。ls这两个字符就被传给了bash。bash怎么处理呢？首先bash要看输入的字符是不是自己的什么关键字，比如for，history之类的，如果是，就归bash来处理了；如果不是，就说明懒蜗牛是要找个命令程序，bash就要负责去找到懒蜗牛想要的这个程序，并且叫他起床干活。
这个工作过程其实跟Gnome的工作是很相似的，只不过Gnome是根据鼠标的点击位置来判断用户想要运行哪个软件，而bash是根据用户输入的字符来判断的。
【bash查找命令的艰辛历程】
那么bash去哪里找哪些命令程序呢？不知道您有没有听说过有个叫做环境变量的东西，跟Windows系统里的那个环境变量差不多，其中有个环境变量叫做PATH，里面记录着bash去找程序的路径。如果你想看看PATH到底是什么，运行echo
\$PATH就可以了。会得到类似这样的输出：
![alt](images/00252.jpeg){.calibre3}
![alt](images/00011.jpeg){.tpzz}**提示：**[\$符号在命令中表示引用变量。可以export设置变量（这里引用和设置的都是全局变量，后文会讲到）。例如：]{.kai1}
![alt](images/00253.jpeg){.calibre3}
第1行设置test变量的值为字符串"my_test_word"，第2行使用echo命令来查看test变量，第3行是运行结果。
当懒蜗牛运行一个命令，比如ls时，bash就对照着PATH里面的设置，开始找了。
他先去/usr/local/sbin房间里面找（根据PATH的设置顺序）。敲开门，客气地问："请问ls是住这屋么？"等了半天，除了墙角的蜘蛛网上那8条腿的小家伙寂寞地弹了几下琴弦之外，再也没有活物给他任何回应，于是bash意识到这屋没人，赶快去下一屋。
又到了/usr/local/bin，他依然是很礼貌地敲开门问候，里面只有一位懒蜗牛前几天安装的叫做Maya的软件，只听那位叽里咕噜地说了几句2012啥的玛雅语，bash也听不懂，不过反正他不是ls就对了，赶紧去下一间。
![alt](images/00011.jpeg){.tpzz}**提示：**[/usr/local目录与/usr目录中的结构类似，都包含bin、sbin、lib、incud等目录。对于Linux系统，并没有明确地对这两个目录内容进行定义。不过一般来说，对于Ubuntu系统，/usr目录中用于存放从软件源中安装的软件。/usr/local中用于存放用户用其他方式安装的软件。]{.kai1}
bash推开/usr/sbin这屋的门一看，这回里面很热闹，而且都是重要人物。有管用户创建的useradd、每天启动必备的gdm、负责跟通过网络跟Windows
XP共享文件的smbd和nmbd等。一听bash来找ls，useradd没好气地说："哎呀，ls怎么可能在我们这里呢？我们这里都是管理级的程序，都是领导！那个ls是谁都能运行的，他怎么会在sbin里，你得去bin里面找啊。"
bash只好客气地退了出去，继续去找/usr/bin、/sbin/、/bin，终于在/bin里面找到了ls，于是赶紧叫醒ls，让他去干活。至此，bash的任务也就结束了，他就回去等待懒蜗牛的下一个命令了。
![alt](images/00011.jpeg){.tpzz}**提示：**[一般/bin、/usr/bin、/usr/local/bin目录下存放的是普通用户使用的命令。/sbin、/usr/sbin、/usr/local/sbin目录下存放的是需要root权限才能使用的命令。]{.kai1}
上面说的是直接敲一个命令的情况。直接输入一个命令，bash就会去PATH变量记载的路目中查找。如果你想运行一个二进制程序（比如刚刚从网上下的某个软件的安装程序），但这个程序不在这些/bin、/sbin之类的目录里怎么办呢？也好办，只要你运行的时候加上路径就可以了。如果没有写路径，那么bash就去PATH中的目录里找，如果写了路径，他就直接去指定的路径找了。
![alt](images/00011.jpeg){.tpzz}**提示：**[Linux中，一般当前目录------即"./"，并不在PATH变量中，所以要运行当前目录下的二进制文件或脚本文件，也需要加上路径。例如要运行当前目录下的setup.sh脚本，需要输入：./setup.sh。]{.kai1}
【有困难找纯爷们儿】
懒蜗牛对照着书本练习各种命令。学到ifconfig命令的时候，觉得书上写得不是很明白，怎么办呢？bash告诉他："别着急，我给你找个人问问，这个人，纯爷们儿！"然后bash扭头冲着硬盘里喊："嘿man！你出来，说说这是怎么个意思。"
随着咔咔嚓嚓一阵硬盘响，只见内存中走来一人。见此人人高马大，膀大腰圆，扇子面的身材，胳膊跟大腿一样粗，这就是bash说的那个"man"。这纯爷们儿说出话来如同打个炸雷一样："嘿！你好啊。洒家我是专职命令解说员，你有什么想知道的吗？"懒蜗牛输入了命令：
![alt](images/00254.jpeg){.calibre3}
意思就是问man，这个ifconfig怎么用啊？man仰天大笑一声："嚯哈哈哈，要说这个ifconfig嘛......不难，听我慢慢地道来！"当然，他不是用中文说的，而是用英语介绍了一下ifconfig命令的使用方法，如图6.5所示。
![alt](images/00255.jpeg){.calibre3}
图6.5 man查看ifconfig命令
![alt](images/00011.jpeg){.tpzz}**提示：**[进入man的界面后按q键可退出man。]{.kai1}
[6.2 这么用Shell]{.kai}
懒蜗牛同学那敲敲打打的命令行生活就这样开始了。从那以后，工作间里少见了红酒大师；看不到盒子妹妹；心有灵犀也不常来上班了；OO老先生也难得起床了，工作间里净是些命令行的小程序在跑来跑去。
6.2.1 理解目录结构
这一天，懒蜗牛觉得玩伪终端不够过瘾，于是按下Ctrl+Alt+F1组合键进入黑漆漆的终端界面来敲名令。看着一屏屏的字符，懒蜗牛感觉很有成就感。
![alt](images/00011.jpeg){.tpzz}**提示：**[进入终端后，可以按Ctrl+Alt+F7组合键回到图形界面。]{.kai1}
【当前目录，家目录】
懒蜗牛进入终端后，先习惯性地运行了一下ls，看到了当前目录下的所有文件。
所谓当前目录，就是用户现在所在的目录。比如你在你家卧室发呆，那么你的当前目录就是卧室；过一会儿你又去客厅发呆了，那么当前目录就是客厅；然后你去厕所发呆，当前目录就是厕所（怎么到哪都发呆）。那么懒蜗牛现在的当前目录是哪个目录呢？就是他的家目录，就是图形界面的"位置"下的"主文件夹"那个目录，也就是/home/lanwoniu这个目录。当懒蜗牛每次打开终端的时候，无论是虚拟终端还是按Ctrl+Alt+F1组合键进入的终端，刚一进去，都是在懒蜗牛的这个家目录里。
![alt](images/00011.jpeg){.tpzz}**提示：**[命令行下可以用"～"符号代表当前用户的家目录。]{.kai1}
【出去走走】
不过，毕竟不是什么事情都要在家目录里做的，如果你在这个目录里看够了，想出去走走，到其他的目录逛逛，这时候就需要cd命令了。cd命令跟光盘没有关系，他是Change
Directory（改变目录）的缩写。这个命令可以改变当前的目录，他就像出租车一样，可以让你到达你想去的任何一个目录（当然，前提是你得有权限进入那个目录，就像你不能让出租车开进中南海一样）。
cd命令的用法就是：
![alt](images/00256.jpeg){.calibre3}
【绝对路径和相对路径】
那么，路径该怎么写？如何描述你想去的目录呢？一般有两种方法：绝对路径和相对路径。
绝对路径就是无论去哪都统一从一个根本的位置上描述。比如你打车，司机师傅问你去哪，你说："我去地球，亚洲，中国，北京市，崇文区，羊肉大街，排骨胡同，376号。"这么说就是绝对路径。无论你在什么地方打车，都从一个根本的位置上说起（比如地球，当然，你愿意从太阳系说也行）。层层递进，最终说到最小、最详细的那个地方为止，就肯定错不了。我们这里目录的地址当然不能从地球开始说了，我们的根目录"/"就是那个最初的、根本的位置，无论你去哪个目录，都可以从这里说起，比如：
![alt](images/00257.jpeg){.calibre3}
这条命令的意思就是说，要去根目录下的，usr目录下的，share目录下的，fonts目录下的，X11目录。
绝对路径很准确并且最直接，不过有时候也比较费劲，所以，cd还支持相对路径。相对路径，就相当于你打车，司机师傅问你去哪，你说："就前面那路口，左转，过三个红绿灯走700米有一家精神病院，到时候我指给您，您就靠边停车就行了。"这种描述方法就是以当前所在的地点为起始地点进行描述，而不用从外太空开始说。那么具体到我们这个系统里怎么说呢？还拿刚才那个命令作为例子。假如现在已经在/usr/share目录下了，那么就运行：
![alt](images/00258.jpeg){.calibre3}
这样就进入X11目录了。这句命令的意思就是，要去当前目录下的，fonts目录下的，
X11目录。
【引导员】
懒蜗牛同学学会了cd命令，兴奋地在终端里cd来，cd去的，像个跑进游乐园的小孩子。转着转着，忽然觉得有点迷路了。静下来想一想：我现在是在哪个目录呢？是在/usr/bin，还是/bin，还是/usr/local/bin呢？
其实，他看一眼那个提示符\$前面的内容就可以了，默认设置下这里显示的就是用户所在的目录的绝对路径。不过这个提示符的格式是可以修改的，如果修改了，这里显示的不是当前的路径了，怎么办呢？
这一点，我们早为您想到了。命令行中配有专业的引导员，告诉您您现在所在的位置，这位引导员就是pwd。可别一看名字就以为他是负责修改密码的，其实他跟password一点关系都没有，他是Print
Working
Directory的缩写。用法简单，输入pwd就行了，他就会告诉你现在所在的目录。
6.2.2 重要的TAB------命令补全功能
学习完ifconfig命令，懒蜗牛同学又开始研究fdisk，这是个磁盘分区命令。学习了这个命令之后，懒蜗牛又学习了查看网络端口的netstat命令。渐渐地，懒蜗牛发现了一个问题：随着命令字符越来越多，敲起来越来越费劲了。
一开始ls、cd、top这样的命令很简短，输入也没觉得麻烦。可遇到字母多的命令，一遍一遍地敲就慢多了，有没有什么省事的办法呢？
【便捷高效的键盘】
很多人不喜欢键盘，不喜欢打字。其实想想，早在电脑刚刚被发明出来的时候，键盘就已经是每一台电脑所必备的输入设备。作为从那个字符界面的时代走过来的Linux系统，我们自然充分考虑通过键盘操作整个系统的便捷和效率问题。直到现在，使用键盘操作Linux都会拥有意想不到的高效率和成就感。
我以前很不明白，键盘可以发送上百个命令，用起来应该很方便才对，为什么人类就那么喜欢那个只能发送：上、下、左、右、左键、右键、滚轮这么几个命令的鼠标呢？（当然，有的鼠标还有一些额外的功能键，但是那也比键盘少啊）。后来见多识广的OO老先生给我解释，我才明白。原来是因为人类记忆力不行，没有我们软件这么可靠，记不住那么多个键，于是只好用那只能发送几个命令的鼠标了。
好了，绕得有点远，其实说起来在我们的命令行里通过键盘敲命令是很方便的，只是很多人不大熟悉如何节省时间而已，都以为用键盘和我交流跟用键盘和那个DOS系统交流一样麻烦呢。其实我已经很人性化了，就因为键盘上有个键------Tab。
【重要的Tab键】
看一个人的键盘，就可以猜测出他平时用电脑干什么。如果W, A, S, D, U, I, J,
K这些键严重磨损，说明这哥们儿玩拳皇的；如果A, Shift, Ctrl, 1, 2, 3, 4,
..., 9, 0键严重磨损，说明是个玩即时战略的，星际魔兽之类；如果Alt,
S或Ctrl,
Enter键磨损，大概是天天聊QQ；如果Tab键严重磨损，那估计就是个Linux高手了。因为在Linux的命令行下，Tab键起着命令补全的重要作用。
比如说，要运行ifconfig命令，可以不用完全输入这8个字母，只要输入ifc，然后按Tab键，bash就知道你要干什么了。因为所有可以运行的命令里面以ifc开头的就只有ifconfig，所以当你按下Tab键的时候，它就会替你写出完整的命令：ifconfig，如图6.6所示。
![alt](images/00259.jpeg){.calibre3}