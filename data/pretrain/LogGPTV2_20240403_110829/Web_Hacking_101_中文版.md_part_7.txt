URL：
hardware.shopify.com/cart
报告链接：
https://hackerone.com/reports/95089
报告日期：2015.10.21
奖金：$500
描述：
Shopify 礼品卡站点允许用户使用 HTML 表单设计它们自己的礼品卡，具体来说，这包括一个
上传输入框，一些文本框，以及其他。这里是一个截图：
46
十、跨站脚本攻击
Shopify 礼品卡表单截图
这里的 XSS 漏洞在 JavaScript 输入到了表单图像名称字段时出现。在使用 HTML 代理完成
之后，会出现一个不错的简单任务。所以这里，原始的表单提交会包含：
Content-Disposition: form-data; name="properties[Artwork file]"
这会被解释和修改为：
Content-Disposition: form-data; name="properties[Artwork file]";
47
十、跨站脚本攻击
重要结论
这里有两个东西要注意，这会在寻找 XSS 漏洞时帮助你：
1. 这里的漏洞实际上并不在文件输入字段本身 -- 它在字段的名称属性中。所以当你寻
找 XSS 漏洞的机会时，要记住玩转所有可用的输入值。
2. 这里的值在通过代理操作之后提交。在一些场景中这是关键，其中在任何值实际提
交给服务器之前，客户端（你的浏览器）可能存在 JavaScript 来验证值。
实际上，任何时候你看到验证实时发生在你的浏览器中，这都是一个信号，你需要测试
这个字段！开发者可能犯下这个错误，一旦这些值提交给了服务器，它们不验证提交的
值是否存在恶意代码，因为它们认为浏览器的 JavaScript 代码已经在输入接收之前验证
过了。
3. Shopify 货币格式
难度：低
URL：
SITE.myshopify.com/admin/settings/generalt
报告链接：
https://hackerone.com/reports/104359
报告日期：2015.12.9
奖金：$1000
描述：
Shopify 的商店设置包含修改货币格式的功能。在 12 月 9 日，有报告称，这些输入框的值在
建立社交媒体页面时，没有合理处理。
换句话说，恶意用户可以建立一个商店，并将货币设置修改为下面这个：
48
十、跨站脚本攻击
Shopify 货币格式截图
之后，用户就可以开启社交媒体售卖频道。报告中的例子是 Fackbook 和 Twitter，以及当用
户点击这个售卖频道的选项卡之后，JavaScript 会执行，产生 XSS 漏洞。
重要结论
XSS 漏洞在 JavaScript 文本不安全渲染时产生。文本可能用于站点的多个位置，所以每
个位置都应该测试。这里，Shopify 并没有在商店和收款页面包含 XSS，因为用户允许
在它们的商店中使用 JavaScript。在考虑字段是否用于外部社交媒体站点之前，很容易
把这个漏洞补上。
4. 雅虎邮件存储型 XSS
难度：低
URL：Yahoo Mail
报告链接：
https://klikki.fi/adv/yahoo.html
报告日期：2015.12.26
奖金：$10000
描述：
雅虎邮件编辑器允许人们将图片通过 HTML IMG 标签嵌入到邮件中。这个漏洞在 HTML IMG
标签格式错误或者无效时出现。
49
十、跨站脚本攻击
多数 HTML 标签接受属性，它是有关 HTML 标签的额外信息。例如，IMG 标签接受 src 属
性，指向要渲染的图像的地址。此外一些属性是布尔属性，意思是如果他们存在，他们在
HTML 表现为真值，而当他们被忽略时，他们表现为假值。
对于这个漏洞，Jouko Pynnonen 发现，如果它将布尔属性添加到 HTML 标签中，并带有一
个值，雅虎邮件就会移除该值但保留等号。这里是来自 的一个例子：
Klikki.fi
这里，输入标签可能包含 属性，表示复选框是否渲染为选中。根据上面描述的歇
checked
息，这会变成：
要注意 HTML 从拥有 checked 值变成了没有值但是仍然包含等号。
这看起来是无害的，但是根据 HTML 规范，浏览器将这个 CHECKED 看做拥有
值 ，并且该 标签有用第三个属性 ，它没有值。这是对于没有引号的
NAME=”check input box
属性值，因为 HTML 允许零个或多个空格字符在等号周围。
为了利用它，Jouko 提交了下面的 IMG 标签：
雅虎邮件会把它变成：
因此，浏览器会渲染 IMG 标签，它占据整个浏览器的窗口，当鼠标移到图片上的时候，会执
行 JavaScript。
重要结论
传递格式错误或损坏的 HTML 是个不错的方法，来测试站点如何解析输入。作为一个黑
客，考虑到开发者没有考虑的东西十分重要。例如，使用常规的图片标签，如果你传递
两个 属性会怎么样？它会如何渲染？
src
5. Google 图片搜索
难度：中
50
十、跨站脚本攻击
URL：
images.google.com
报告链接：
http://zombiehelp54.blogspot.ca/2015/09/how-i-found-xss-vulnerability-in-
google.html
报告日期：2015.9.12
奖金：未知
描述：
2015 年 9 月，Mahmoud Jamal 使用 Google 图像来为它的 HackerOne 资料寻找一个图片。
在浏览的时候，它注意到 Google 图片的 URL 中有一些有趣的东西。
http://www.google.com/imgres?imgurl=https://lh3.googleuser.com/...
注意到实际的 URL 中存在 imgurl 的引用。在鼠标移到缩略图上的时候，Mahoumd 注意到
了锚标签的 属性包含了相同的 URL。因此，它尝试将参数改为 ，
href javascript:alert(1)
并且注意到锚标签的 也改为了相同值。
href
它这个时候非常激动，点击了链接，但是没有执行 JavaScript，因为 Google URL 改为了别
的东西。结果，Google 的代码在鼠标按下时，通过 onmousedown JavaScript 回调修改了
URL。
考虑到这个，Mahmoud 决定使用它的键盘，尝试使用 TAB 键在页面上切换。当他来到 View
Image 按钮时，触发了 JavaScript，产生了 XSS 漏洞。这里是图片：
Google XSS 漏洞
51
十、跨站脚本攻击
重要结论
始终留意这种漏洞。很轻易就能假设，仅仅由于公司太大或者太知名，任何东西都被找
到了。但是，公司始终会修改代码。
此外，有大量方法来执行 JavaScript，这里在看到 Google 使用 onmousedown 事件处理器
修改值之后，很容易就放弃了。这意味着任何时候使用鼠标点击了链接，值都会改变。
6. Google Tagmanager 存储型 XSS
难度：中
URL：
tagmanager.google.com
报告链接：
https://blog.it-securityguard.com/bugbounty-the-5000-google-xss
报告日期：2014.10.31
奖金：$5000
描述：
2014 年 10 月，Patrik Fehrehbach 在 Google 上发现了存储型 XSS 漏洞。这个报告的有趣
部分是，他如何设法绕过 Google 获取载荷。
Google Tagmanager 是一个 SEO 工具，使营销人员添加和更新站点标签变得容易 -- 包含转
化追踪、站点分析、重营销、以及更多。为此，它拥有大量的表单，便于用户交互。所以，
Patrik 以尝试将 XSS 载荷输入到表单字段中开始，类似于 #>imgsrc=/ onerror=alert(3)> 。如
果接受了，这就会闭合现有的 HTML > ，之后尝试加载不存在的图片，这会执行 onerror
JavaScript， 。
alert(3)
但是，这没有效果。Google 合理处理了输入。Patrik 注意到了一个替代方案 -- Google 提供
了上传带有多个标签的 JSON 文件的功能。所以，它下载了样例并上传：
"data": {
"name": "#">",
"type": "AUTO_EVENT_VAR",
"autoEventVarMacro": {
"varType": "HISTORY_NEW_URL_FRAGMENT"
}
}
这里，你会注意到，标签的名称就是他的 XSS 载荷。结果，Google 没有处理来自上传文件
的输入，并执行了载荷。
52
十、跨站脚本攻击
重要结论
这里有两个有趣的事情。首先Patrik 发现了替代方案来提供输入 -- 要留意这个东西，并
测试目标提供的所有方法来输入数据。其次，Google 处理了输入，但是在渲染时没有转
义。假设它转义了 Patrik 的输入，载荷就不会生效，因为 HTML 会被转换成无害的字
符。
总结
XSS 漏洞对站点开发者展现了真实的风险，并且仍然在站点上流行，通常显而易见。通常简
单提交 JavaScript alert 方法的调用， alert('test') ，你可以检查输入字段是否存在漏
洞。此外，你可以将它与 HTML 注入组合，并提交 ASCII 编码的字符来观察文本是否被渲染
和解释。
在搜索 XSS 漏洞时，这里是要记住的一些事情：
1. 测试任何东西
无论你在浏览什么站点以及什么时候浏览，总是要保持挖掘！不要觉得站点太大或者太
复杂，而没有漏洞。机会正在注视着你并请求你的测试，就像 那
wholesale.shopify.com
样。Google Tagmanager 存储型 XSS 漏洞就是寻找替代方案来向站点添加标签的结果。
2. 漏洞可能存在于任何表单值
例如，Shopify 的礼品卡站点上的漏洞，通过利用和上传文件相关的名称字段来时间，并
不是实际的文件字段本身。
3. 总是在测试时使用 HTML 代理
当你尝试提交来自网站自身的恶意值时，当站点的 JavaScript 检查出你的非法值时，你
可能会碰到假阳性。不要浪费你的时间。通过浏览器提供合法值，之后使用你的代理修
改这些值来执行 JavaScript 并且提交。
译者注：对于所有前端（包括移动和桌面）渗透，都应该这样。就算不存在 XSS，
也有可能挖到绕过和越权漏洞。
4. XSS 漏洞发生在渲染的时候
由于 XSS 在浏览器渲染文本时发生，要确保复查了站点的所有地方，其中使用了你的输
入值。逆天家的 JavaScript 可能不会立即渲染，但是会出现在后续的页面中。这非常麻
烦，但是你要留意站点何时过滤输入，以及转义输出。如果是前者，寻找办法来绕过输
入过滤器，因为开发者可能会犯懒，并且不会转义渲染的输入。
5. 测试非预期的值
53
十、跨站脚本攻击
不要总是提供预期类型的值。当 HTML 雅虎邮件的漏洞被发现时，提供了非预期的
HTML IMG 属性。要跳出思维定式，思考开发者要寻找什么，并且之后尝试提供一些不
匹配这些预期的东西。这包含寻找新的方式来执行潜在的 JavaScript，例如绕过 Google
图片的 事件。
onmousemove