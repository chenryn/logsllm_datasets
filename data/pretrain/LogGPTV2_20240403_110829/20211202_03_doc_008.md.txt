Mathematisch-NaturwissenschaftlicheFakulta¨t
Wilhelm-Schickard-Institutfu¨rInformatik
Datenbanksysteme·Prof. Dr. Grust
Advanced SQL (SS 2017)
Handout zum U¨bungsbetrieb mit git
Christian Duta
Dieses Semester setzen wir in der Vorlesung Advanced SQL zur
• Bereitstellung von U¨bungsbl¨attern,
• Abgabe (Upload) eurer L¨osungen und
• Verteilung von Korrekturhinweisen
dasVersionskontrollsystemgitein. GenerelleInformationenzugitfindetihrimWebaufhttp://git-scm.
com. Ihr findet hier alle notwendigen Details, um git f¨ur den U¨bungsbetrieb nutzen zu k¨onnen. Bitte lest
die Hinweise aufmerksam—auch Details sind wichtig. Nach einer kurzen Eingew¨ohnungsphase werden euch
die notwendigen Kommandos ganz automatisch von der Hand gehen.
Setup
Die folgenden Schritte sind w¨ahrend des gesamten Semesters nur einmalig auszuf¨uhren.
1. Ladet euch die frei verfu¨gbare git-Software auf euren Rechner. Ihr findet Varianten f¨ur jedes
g¨angigeBetriebssystem(Windows,Linux,OSX)unterhttp://git-scm.com/downloads. Wahrschein-
lich ist git auch bereits als fertig vorbereitete Installation im Paket-Manager eures Betriebssystems
verf¨ugbar. Wir raten euch, mit git auf der Kommandozeile zu arbeiten, genau wie wir auch. Zur
Kommandozeilen-Variantek¨onnenwireuchHinweiseundHilfestellungengeben. Solltetihrgraphische
Varianten einsetzen, so geht das in Ordnung—ihr seid dann aber auf euch allein gestellt.
2. Erstellt einen Account auf GitHub (http://github.com). Solltet ihr dort bereits einen Account
besitzen, k¨onnt ihr diesen auch f¨ur den U¨bungsbetrieb einsetzen.
Wir nutzen den Classroom-Service auf GitHub, um unsere Aufgabenbl¨atter und eure L¨osungen in sog.
Repositories (kurz: Repos) zu speichern. Diese Repos sind nicht ¨offentlich zug¨anglich.
3. Registriert euch im Forum zur Vorlesung (https://forum-db.informatik.uni-tuebingen.de/
c/ss17-asql). Wir werden das Forum zur Diskussion von Vorlesungsinhalten aber auch zur Verwal-
tung des U¨bungsbetriebes nutzen. Daher ist die Anmeldung im Forum nicht optional.
4. O¨ffnet das Forum-Posting “Der Advanced SQL U¨bung bei GitHub Classroom beitreten”. Nutzt den
Kontakt zu euren Kommilitonen in den ersten Vorlesungen oder auch den entsprechenden Thread im
Forum,umeinEinzel-oderZweier-Teamf¨urdieU¨bungenzubilden. LegteinenNamenf¨urdasTeam
fest.
Ihr findet in dem Posting einen Link, der euch auf classroom.github.com weiterleitet. Tretet
dort einem existierenden Team bei oder legt gegebenenfalls ein neues Team an (Create a new
team), dem dann eure Partnerin/euer Partner sp¨ater beitreten kann.
1
5. Auf GitHub ist nun ein Repo f¨ur euer Team angelegt. Folgt dem Link zu diesem Repo (Your
assignment has been created here:...). Notiert euch die URL des Repos:
https://github.com/DBatUTuebingen/asql-ss17-(cid:104)YourTeam(cid:105)
wobei (cid:104)YourTeam(cid:105) aus dem Namen eures Teams abgeleitet wurde.
6. Erstellt eine lokale Kopie des Repos auf eurem Rechner. Sucht euch dazu ein lokales Directory,
in dem ihr f¨ur den Rest des Semesters die Files zum U¨bungsbetrieb organisieren wollt. In diesem
Directory das folgende git-Kommando ausf¨uhren:
git clone https://github.com/DBatUTuebingen/asql-ss17-(cid:104)YourTeam(cid:105).git
Innerhalbdesdadurcherzeugten(jetztnochfastleeren)lokalenDirectoriesnamensasql-ss17-(cid:104)YourTeam(cid:105)
findet eure gesamte Arbeit an den U¨bungen statt.
7. Damit euer Repo sp¨ater auch unsere U¨bungsbl¨atter aufnehmen kann, bereitet euer Repo darauf wie
folgt vor (stellt dabei sicher, dass ihr euch im lokalen Directory asql-ss17-(cid:104)YourTeam(cid:105) befindet):
git remote add assignments https://github.com/DBatUTuebingen/asql-ss17.git
Das w¨ar’s. Wie gesagt: der obige Setup ist einmalig und wiederholt sich w¨ahrend des Semesters nicht.
¨
Download von Ubungsbl¨attern
Die folgenden Schritte sind fu¨r jedes U¨bungsblatt erneut auszuf¨uhren, also normalerweise w¨ochentlich.
Sie gelten auch dann, wenn wir Updates/Korrekturen an einem U¨bungsblatt vornehmen—darauf weisen wir
euch im Forum gegebenenfalls gesondert hin.
1. Wechselt in euer lokales Directory asql-ss17-(cid:104)YourTeam(cid:105).
2. F¨uhrt das folgende git-Kommando aus:
git pull assignments master
3. Danach findet ihr das U¨bungsblatt in einem neuen Subdirectory assignment(cid:104)week(cid:105) vor.
Upload eurer L¨osungen
Die folgenden Schritte sind immer dann auszuf¨uhren, wenn ihr eure L¨osungen zu einem U¨bungsblatt
abgebenwollt,alsonormalerweisew¨ochentlich. EinezuvorhochgeladeneL¨osungk¨onntdurcheinenerneuten
Upload durch eine neue Version ersetzen, solange der Abgabezeitpunkt noch nicht erreicht ist. Sp¨atere
Versionen werden bei der Korrektur nicht ber¨ucksichtigt und werden ggf. durch die korrigierte Version
ersetzt.
1. Bearbeitet das U¨bungsblatt und hinterlasst eure L¨osungen in (eventuell mehreren) Dateien innerhalb
eines neuen Subdirectories solution(cid:104)week(cid:105).
2. WenneureL¨osungkomplettist, f¨uhrtdiefolgendenKommandosaus, umdieL¨osungunserenTutoren
zug¨anglich zu machen. Wechselt in das Directory (cid:104)YourTeam(cid:105) oder in eines der Subdirectories. Zeilen
mit # sind lediglich Erl¨auterungen:
2
# Abfrage: Welche Dateien sind neu (bzw. veraendert) und gehoeren zur Loesung?
git status
# Fuer Loesung relevante neue (bzw. modifizierte) Dateien bei git bekanntmachen:
git add (cid:104)file1(cid:105) (cid:104)file2(cid:105) ...
# Diese Dateien im Repo hinterlegen, selbstsprechenden Kommentar hinzufuegen:
git commit -m "Abgabe(cid:32)zum(cid:32)Uebungsblatt(cid:32)(cid:104)week(cid:105)"
# Dateien auf GitHub hochladen:
git push
Achtung: Erst nach dem git push sind eure L¨osungen f¨ur die Tutoren zugreifbar.
SolltetihrUpdatesaneurenDateien(cid:104)file1(cid:105),(cid:104)file2(cid:105),...hochladenwollen,sindgit add (cid:104)file1(cid:105)...,
git commit -m "..."undgit pusherneutauszuf¨uhren. SollteeineneueDatei,sagenwir (cid:104)file3(cid:105),zur
L¨osung hinzukommen, ist zuvor auch ein git add (cid:104)file3(cid:105) notwendig.
Verteilung von Korrekturhinweisen
Das folgende Kommando f¨uhrt ihr immer dann aus, wenn ihr die Korrekturhinweise und Bewertung eurer
L¨osungen erhalten wollt. Unsere Tutoren hinterlassen die Korrekturhinweise direkt in (neuen Versionen)
eurer Files und eine Punkte¨ubersicht in der Datei README.md:
1. Wechselt in das Directory (cid:104)YourTeam(cid:105) oder in eines der Subdirectories.
2. Empfangt die Korrekturen von GitHub:
git pull
Hinweis: Um uns die Korrektur direkt in eurer L¨osung und euch einen sinvollen Einsatz von git bei der
Teamarbeit zu erm¨oglchen, m¨ussen die Files eurer L¨osung grunds¨atzlich im Plain-Text-Format vorliegen.
Antworten auf Fragen k¨onnen dabei einfach als Kommentare in Code-Files verfasst werden, PDF- oder gar
Word-Dateien sind zu vermeiden.
3