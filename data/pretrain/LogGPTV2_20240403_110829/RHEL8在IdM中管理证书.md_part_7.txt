有关请求新证书的详情，请查看以下文档：
::: itemizedlist
-   [请求新的用户证书并将其导出到客户端](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#requesting-and-exporting-a-user-certificate_dc-web-ui-auth){.link}
    ；
-   [使用 certmonger 为服务获取 IdM
    证书](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#obtain-service-cert-with-certmonger_certmonger-for-issuing-renewing-service-certs){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#restoring-certificates-with-the-integrated-IdM-CAs_validity-certificates}使用集成的 IdM CA 恢复证书 {.title}
:::
如果您因为 6 原因撤销了证书：
`Certificate Hold`{.literal}，如果证书的私钥未泄露，您可以再次恢复它。要恢复证书，请使用以下步骤之一：
::: itemizedlist
-   [使用 IdM WebUI 恢复带有集成 IdM CA
    的证书](#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#restoring-certificates-with-the-integrated-IdM-CAs-using-IdM-WebUI_restoring-certificates "使用 IdM WebUI 恢复集成 IdM CA 的证书"){.link}
    ；
-   使用 IdM [CLI 恢复带有集成 IdM CA
    的证书](#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#restoring-certificates-with-the-integrated-IdM-CAs-using-IdM-CLI_restoring-certificates "使用 IdM CLI 恢复集成 IdM CA 的证书"){.link}。
:::
::: section
::: titlepage
## []{#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#restoring-certificates-with-the-integrated-IdM-CAs-using-IdM-WebUI_restoring-certificates}使用 IdM WebUI 恢复集成 IdM CA 的证书 {.title}
:::
完成这个步骤，使用 IdM WebUI 恢复因为 Reason 6 而撤销的 IdM 证书：
`Certificate Hold`{.literal}。
::: orderedlist
**流程**
1.  在 `Authentication`{.literal} 菜单中，点击
    `Certificates`{.literal}\> `Certificates`{.literal}。
2.  单击证书的序列号，以打开证书信息页面。
    ::: figure
    []{#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#list-of-certificates_restoring-certificates}
    **图 5.3. 证书列表**
    ::: figure-contents
    ::: mediaobject
    ![A screenshot of the \"Certificates\" page of the IdM Web UI
    displaying a table of certificates. The certificates are organized
    by their Serial Numbers and their Subject. The Serial Number \"3\"
    is highlighted for the third certificate in the
    table.](images/host_cert_list.png)
    :::
    :::
    :::
3.  [Actions]{.guimenu} → [Restore Certificate]{.guimenuitem}。
:::
:::
::: section
::: titlepage
## []{#managing-the-validity-of-certificates-in-idm_working-with-idm-certificates.html#restoring-certificates-with-the-integrated-IdM-CAs-using-IdM-CLI_restoring-certificates}使用 IdM CLI 恢复集成 IdM CA 的证书 {.title}
:::
完成此流程，以使用 IdM CLI 恢复因 Reason 6 而撤销的 IdM 证书：
`Certificate Hold`{.literal}。
::: itemizedlist
**流程**
-   使用 `ipa cert-remove-hold`{.literal} 命令并指定证书序列号。例如：
    ``` literallayout
    $ ipa cert-remove-hold 1032
    ```
:::
:::
:::
:::
[]{#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html}
::: chapter
::: titlepage
# []{#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#configuring-idm-for-smart-card-auth_working-with-idm-certificates}第 6 章 为智能卡验证配置身份管理 {.title}
:::
使用基于智能卡的验证是使用密码进行验证的替代选择。您可以将用户凭证以私钥和证书的形式存储在智能卡上，并使用特殊的软件和硬件来访问它们。将智能卡放在读取器或
USB 端口中，并为智能卡提供 PIN 代码，而不是提供您的密码。
Identity Management(IdM)支持智能卡验证：
::: itemizedlist
-   IdM 证书颁发机构发布的用户证书
-   外部证书颁发机构发布的用户证书
:::
这个用户用例演示了如何在 IdM
中为两种类型的证书设置智能卡验证。在用户故事中，`smartcard_ca.pem`{.literal}
CA 证书是包含可信外部证书颁发机构证书的文件。
用户会包括以下模块：
::: itemizedlist
-   ["为智能卡验证配置 IdM
    服务器"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth "为智能卡验证配置 IdM 服务器"){.xref}
-   ["为智能卡验证配置 IdM
    客户端"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth "为智能卡验证配置 IdM 客户端"){.xref}
-   ["在 IdM
    中的用户条目中添加证书"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#add-cert-idm-user_configuring-idm-for-smart-card-auth "在 IdM 中的用户条目中添加证书"){.xref}
:::
::: itemizedlist
-   ["安装用来管理和使用智能卡的工具"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth "安装用来管理和使用智能卡的工具"){.xref}
-   ["在智能卡中存储证书"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#storing-a-certificate-on-the-smart-card_configuring-idm-for-smart-card-auth "在智能卡中存储证书"){.xref}
-   ["使用智能卡登录到
    IdM"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#logging-in-to-idm-with-smart-cards_configuring-idm-for-smart-card-auth "使用智能卡登录到 IdM"){.xref}
-   ["使用智能卡验证配置 GDM
    访问"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#configuring-gdm-access-using-smart-card-authentication_configuring-idm-for-smart-card-auth "使用智能卡验证配置 GDM 访问"){.xref}
-   ["使用智能卡验证配置 su
    访问"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#configuring-su-access-using-smart-card-authentication_configuring-idm-for-smart-card-auth "使用智能卡验证配置 su 访问"){.xref}
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth}为智能卡验证配置 IdM 服务器 {.title}
:::
如果要为 `EXAMPLE.ORG`{.literal}
域的证书颁发机构(DN)签发证书的用户启用智能卡验证，您需要获取颁发机构的证书，以便您可以使用配置
IdM
服务器的脚本运行它。`CN=Certificate Authority,DC=EXAMPLE,DC=ORG`{.literal}例如，您可以从认证机构发布的证书的网页下载证书。[详情请查看配置浏览器以启用证书验证中的步骤](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_identity_management/dc-web-ui-auth_configuring-and-managing-idm#configuring-browser-for-cert-auth_dc-web-ui-auth){.link}
1 - 4a。
要为由 IdM 证书颁发机构签发证书的 IdM 用户启用智能卡验证，从运行 IdM CA
的 IdM 服务器上的 `/etc/ipa/ca.crt`{.literal} 文件中获取 CA 证书。
这部分论述了如何为智能卡验证配置 IdM 服务器。首先，获取 PEM 格式的 CA
证书文件，然后运行内置的 `ipa-advise`{.literal}
脚本。最后，重新载入系统配置。
::: itemizedlist
**先决条件**
-   有到 IdM 服务器的 root 访问权限。
-   您有 root CA 证书和任何子 CA 证书。
:::
::: orderedlist
**流程**
1.  创建要进行配置的目录：
    ``` literallayout
    [root@server]# mkdir ~/SmartCard/
    ```
2.  进入该目录：
    ``` literallayout
    [root@server]# cd ~/SmartCard/
    ```
3.  获取存储在 PEM 格式文件中的相关 CA 证书。如果您的 CA
    证书以不同格式的文件存储，如 DER，将其转换为 PEM 格式。IdM
    证书颁发机构证书位于 `/etc/ipa/ca.crt`{.literal} 文件中。
    将 DER 文件转换为 PEM 文件：
    ``` literallayout
    # openssl x509 -in .der -inform DER -out .pem -outform PEM
    ```
4.  为方便起见，将证书复制到您要进行配置的目录中：
    ``` literallayout
    [root@server SmartCard]# cp /etc/ipa/ca.crt ~/SmartCard/
    [root@server SmartCard]# cp /tmp/smartcard_ca.pem ~/SmartCard/
    ```
5.  另外，如果您使用外部证书颁发机构的证书，使用
    `openssl x509`{.literal} 工具查看 `PEM`{.literal}
    格式的文件内容，以检查 `Issuer`{.literal} 和 `Subject`{.literal}
    值是否正确：
    ``` literallayout
    [root@server SmartCard]# openssl x509 -noout -text -in smartcard_ca.pem | more
    ```
6.  使用内置的 `ipa-advise`{.literal}
    工具生成配置脚本，使用管理员的权限：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# sudo ipa-advise config-server-for-smart-card-auth > config-server-for-smart-card-auth.sh
    ```
    `config-server-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置 IdM Apache HTTP 服务器。
    -   它在 KDC（Key Distribution Center）中启用 PKINIT（Public Key
        Cryptography for Initial Authentication in Kerberos）。
    -   它将 IdM Web UI 配置为接受智能卡授权请求。
    :::
7.  执行脚本，将包含 root CA 和子 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@server SmartCard]# chmod +x config-server-for-smart-card-auth.sh
    [root@server SmartCard]# ./config-server-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将 root CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
8.  另外，如果发布用户证书的证书颁发机构不提供任何在线证书状态协议(OCSP)响应程序，您可能需要禁用
    OCSP 检查 IdM Web UI 的身份验证：
    ::: orderedlist
    1.  在 `/etc/httpd/conf.d/ssl.conf`{.literal} 文件中将
        `SSLOCSPEnable`{.literal} 参数设置为 `off`{.literal}:
        ``` literallayout
        SSLOCSPEnable off
        ```
    2.  重启 Apache 守护进程(httpd)使更改立即生效：
        ``` literallayout
        [root@server SmartCard]# sudo systemctl restart httpd
        ```
    :::
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果您只使用 IdM CA 发出的用户证书，不要禁用 OCSP 检查。OCSP
    响应器是 IdM 的一部分。
    :::
    有关如何启用 OCSP 检查的说明，以及如果 IdM
    服务器不包含发布用户证书侦听 OCSP 服务请求的位置信息，请参阅 [Apache
    mod_ssl
    配置选项中的](http://httpd.apache.org/docs/trunk/en/mod/mod_ssl.html){.link}
    `SSLOCSPDefaultResponder`{.literal} 指令。
:::
该服务器现在被配置为智能卡验证。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要在整个拓扑中启用智能卡验证，请在每个 IdM 服务器中运行操作过程。
:::
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth}为智能卡验证配置 IdM 客户端 {.title}
:::
这部分论述了如何为智能卡验证配置 IdM 客户端。这个过程需要在每个 IdM
系统、客户端或服务器中运行，您希望在使用智能卡进行身份验证时连接到这些系统。例如，要启用从主机
A 到主机 B 的 `ssh`{.literal} 连接，需要在主机 B 上运行该脚本。
作为管理员，运行这个步骤来启用智能卡验证
::: itemizedlist
-   `ssh`{.literal} 协议
    [详情请参阅使用智能卡验证配置 SSH
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_authentication_and_authorization_in_rhel/index#configuring-ssh-access-using-smart-card-authentication_configuring-and-importing-local-certificates-to-a-smart-card){.link}。
-   控制台登录
-   Gnome 显示管理器(GDM)
-   `su`{.literal} 命令
:::
向 IdM Web UI 进行身份验证时不需要这个过程。对 IdM Web UI
进行身份验证涉及两个主机，它们都需要是 IdM 客户端：
::: itemizedlist
-   此机器可能位于运行浏览器的 IdM 域之外
-   `httpd`{.literal} 在其中运行的 IdM 服务器
:::
以下流程假设您在 IdM 客户端而不是 IdM
服务器中配置智能卡验证。因此，您需要两台计算机：IdM
服务器生成配置脚本，以及运行该脚本的 IdM 客户端。
::: itemizedlist
**先决条件**
-   为智能卡验证配置了您的 IdM 服务器，如 ["为智能卡验证配置 IdM
    服务器"一节](#configuring-idm-for-smart-card-auth_working-with-idm-certificates.html#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth "为智能卡验证配置 IdM 服务器"){.xref}
    所述。