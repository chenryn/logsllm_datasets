50.22s
4.62s
6.87s
322.23s
20.56s
5.02s
2.15s
3.69s
3.60s
3.16s
3.21s
25.08s
36.38s
2.05s
2.30s
2.08s
3.20s
5.29s
95.5s
10.38s
2.01s
5.12s
13.96s
3.78s
0.03s
1.89s
2.07s
1.93s
2.07s
2.11s
3.55s
Table 1: The output of AutoRationalPPE on various PPE circuit testability problems. Here, ℓ represents the number of delegation
levels in a HIBE scheme, |H (id)| denotes the length of the hash of identity id, B(H (id)) denotes the number of blocks in the
hash of identity id, B(msg) denotes the number of blocks in message msg, |C (x )| denotes the length of encoding of input x,
|H (x )| denotes the length of encoding of input x, and a denotes the number of attributes. The execution time is mentioned in
seconds. Here N/A denotes the fact that AutoCircuitPPE does not accept input with rational polynomials.
AutoCircuitPPE, we simplified checking whether the constant d is
relatively prime to p−1 in Rule 3a and 3b, by checking whether d is
a small prime (d ∈ {1, 3, 5, 7, 11}), as none of the real world schemes
have polynomials with high degree on their variables. Also, if a
PPE is trivially True/False,17 we replace the PPE with True/False
accordingly.
We evaluated our tool various, IBE, VRF, Signature schemes
and summarize our test results for 35 schemes in Table 1. For IBE
17For example, if denominator polynomial hk is a constant in Rule3a, then the
circuit C is trivially True.
schemes, we ran our tool to compute a PPE circuit which tests
for well-formedness of a secret key of an identity given the mas-
ter public key and the identity. For Verifiable Random Function
(VRF) schemes, we aimed to construct a PPE circuit which tests
for validity of VRF output and proof of pseudorandomness given
the verification key and VRF input. For signature schemes, we ran
the tool to output a PPE circuit which acts as a verification proce-
dure that checks the well-formedness of a signature given message
and verification key. We encoded each of the schemes into a PPE
Session 10C: Foundations CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2749problem instance similar to [46] (See [46] Section 5.2 for more de-
tails). As in [46], we encode the VRF bit string input of [35, 48, 50]
schemes as a vector of Zp variables. We observe that the size of
the polynomials in these schemes grow exponentially in size with
respect to the length of encoding of the input. Consequently, we
tested these schemes only with a short length encoding.
We demonstrate the flexibility of our tool by testing it on prob-
lem instances in all Type I, II and III pairing settings. We note that
our rules only supersede the rules proposed by AutoCircuitPPE.
Consequently, AutoRationalPPE outputs a PPE testing circuit for all
the problem instances on which AutoCircuitPPE outputs a PPE cir-
cuit. Additionally, AutoRationalPPE outputs PPE testing circuit for
many schemes which include rational polynomials such as Boneh-
Boyen IBE [25] and signatures [27], Gentry IBE [37], Le-Gabillon
multisignatures [49], Dodis-Yampolskiy VRF [36] and many of other
custom testcases. Even though the QSearch has exponential time
complexity, it runs pretty fast on many real world schemes. After
running QSearch algorithm in Section 3.3, we optimized the out-
put circuit to remove any redundant operations. For example, if
the same sub-circuit occurs in 2 different places, we compute it
only once. These optimizations are adapted from AutoCircuitPPE
tool. We display the number of PPE gates and Boolean gates post-
optimization in Table 1.
We also tested our tool on a few custom examples containing
rational polynomials, some of them having more than 100 polyno-
mials. In the custom testcase 6 (inspired by DDHI problem), the
trusted set contains polynomial F1 = a in the group G1, the un-
trusted set contains polynomials {F2 = a
,· · · ,
, F101 = 1/a} in the group G1. The problem
F99 = a
can be tested using the PPEs F2 = e (F1, F1), e (F3, д) = e (F2, F1),
· · · , e (F101, F1) = e (д, д), e (F100, F99) = e (F101, д). Additionally,
some logic is used to consider the case where a = 0 and denomina-
tor of the polynomials is invalid. More details are in Appendix D.
99, F100 = 1/a
, F4 = a
, F3 = a
100
2
3
4
4.4 Open Problems
This work solves a major open problem of [47] by solving the PPE
Circuit testability problem for schemes with rational polynomials.
We now remark on a few exciting, open problems.
First, all work on PPE automation to date [20, 46, 47] including
this work focuses on perfect verification, where each element is
checked individually. Some applications (such as signatures) could
use a relaxed (and possibly more efficient) verification procedure
where elements only need have some proper relationship to each
other. We view exploring this concept of sufficient verification as a
useful and exciting future direction. We discuss this in more detail
in Appendix E.
Second, PPE automation to date [20, 46, 47] including this work
focuses only on prime order groups. These groups are often highly
preferred to their composite order counterparts due to both band-
width and run time differences. Still the composite order setting
is often more unwieldy due to its use of different subgroups and
reliance on the property that pairing different subgroups results in
an identity. Handling the constraints of these different subgroups,
while properly handling identity and undefined elements, in our
framework seems non-trivial.
Finally, the current implementation of our tool (as is also the case
with AutoCircuitPPE [47]) outputs the first solution it finds, instead
of caching several solutions and outputting the most optimal. Since
PPE gates are the most costly, that is the metric on which we’d like
to optimize. As one example of non-optimality, our tool’s solution
for the Dodis VRF [35] takes 28 PPEs, while AutoCircuitPPE found
one that takes only 25 PPEs. One might consider a “deep search”
option, where the tool searches all promising branches of the search
space to collect a group of solutions and then outputs the solution
with the smallest number of PPE gates. The technical challenge
here is performing a deep search without incurring an exponential
explosion in the running time.
ACKNOWLEDGMENTS
Susan Hohenberger was supported by NSF CNS-1908181, the Office
of Naval Research N00014-19-1-2294, and a Packard Foundation
Subaward via UT Austin. Satyanarayana Vusirikala was supported
by a UT Austin Provost Fellowship, NSF CNS-1908611, and the
Packard Foundation.
The authors thank Brent Waters for helpful discussions and the
ACM CCS anonymous reviewers for presentation feedback.
REFERENCES
[1] Masayuki Abe, Melissa Chase, Bernardo David, Markulf Kohlweiss, Ryo Nishi-
maki, and Miyako Ohkubo. 2012. Constant-Size Structure-Preserving Signatures:
Generic Constructions and Simple Assumptions. Cryptology ePrint Archive,
Report 2012/285. https://eprint.iacr.org/2012/285.
[2] Masayuki Abe, Melissa Chase, Bernardo David, Markulf Kohlweiss, Ryo Nishi-
maki, and Miyako Ohkubo. 2012. Constant-Size Structure-Preserving Signatures:
Generic Constructions and Simple Assumptions. In ASIACRYPT.
[3] Masayuki Abe, Jens Groth, Miyako Ohkubo, and Takeya Tango. 2014. Converting
Cryptographic Schemes from Symmetric to Asymmetric Bilinear Groups. In
Advances in Cryptology - CRYPTO. Springer, 241–260.
[4] Masayuki Abe, Jens Groth, Miyako Ohkubo, and Mehdi Tibouchi. 2014. Structure-
Preserving Signatures from Type II Pairings. In Advances in Cryptology - CRYPTO
2014. 390–407.
[5] Masayuki Abe, Fumitaka Hoshino, and Miyako Ohkubo. 2016. Design in Type-
I, Run in Type-III: Fast and Scalable Bilinear-Type Conversion Using Integer
Programming. In Advances in Cryptology - CRYPTO. Springer, 387–415.
[6] Joseph A. Akinyele, Gilles Barthe, Benjamin Grégoire, Benedikt Schmidt, and
Pierre-Yves Strub. 2014. Certified Synthesis of Efficient Batch Verifiers. In IEEE
27th Computer Security Foundations Symposium. IEEE Computer Society, 153–165.
[7] Joseph A. Akinyele, Christina Garman, and Susan Hohenberger. 2015. Automating
Fast and Secure Translations from Type-I to Type-III Pairing Schemes. In ACM
SIGSAC Conference on Computer and Communications Security. ACM, 1370–1381.
[8] Joseph A. Akinyele, Matthew Green, and Susan Hohenberger. 2013. Using SMT
solvers to automate design tasks for encryption and signature schemes. In ACM
SIGSAC Conference on Computer and Communications Security. ACM, 399–410.
[9] Joseph A. Akinyele, Matthew Green, Susan Hohenberger, and Matthew W. Pagano.
2012. Machine-generated algorithms, proofs and software for the batch veri-
fication of digital signature schemes. In the ACM Conference on Computer and
Communications Security. ACM, 474–487.
[10] Joseph A. Akinyele, Matthew Green, Susan Hohenberger, and Matthew W. Pagano.
2014. Machine-generated algorithms, proofs and software for the batch verifi-
cation of digital signature schemes. Journal of Computer Security 22, 6 (2014),
867–912.
[11] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Matthew Campagna, Ernie
Cohen, Benjamin Grégoire, Vitor Pereira, Bernardo Portela, Pierre-Yves Strub,
and Serdar Tasiran. 2019. A Machine-Checked Proof of Security for AWS Key
Management Service. In CCS. 63–78.
[12] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Francois Dupressoir, Ben-
jamin Grégoire, Vincent Laporte, and Vitor Pereira. 2017. A Fast and Verified
Software Stack for Secure Function Evaluation. In CCS 2017.
[13] José Bacelar Almeida, Cecile Baritel-Ruet, Manuel Barbosa, Gilles Barthe, Francois
Dupressoir, Benjamin Grégoire, Vincent Laporte, Tiago Oliveira, Alley Stoughton,
and Pierre-Yves Strub. 2019. Machine-Checked Proofs for Cryptographic Stan-
dards: Indifferentiability of Sponge and Secure High-Assurance Implementations
of SHA-3. In CCS. 1607–1622.
Session 10C: Foundations CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2750[14] Miguel Ambrona, Gilles Barthe, Romain Gay, and Hoeteck Wee. 2017. Attribute-
Based Encryption in the Generic Group Model: Automated Proofs and New
Constructions. In Proceedings of the 2017 ACM SIGSAC Conference on Computer
and Communications Security. ACM, 647–664.
[15] Miguel Ambrona, Gilles Barthe, and Benedikt Schmidt. 2016. Automated Un-
bounded Analysis of Cryptographic Constructions in the Generic Group Model.
In Advances in Cryptology - EUROCRYPT. Springer, 822–851.
[16] Manuel Barbosa, Gilles Barthe, Karthik Bhargavan, Bruno Blanchet, Cas Cre-
mers, Kevin Liao, and Bryan Parno. 2019. SoK: Computer-Aided Cryptography.
Cryptology ePrint Archive, Report 2019/1393. https://eprint.iacr.org/2019/1393.
[17] Gilles Barthe, Juan Manuel Crespo, Yassine Lakhnech, and Benedikt Schmidt. 2015.
Mind the Gap: Modular Machine-Checked Proofs of One-Round Key Exchange
Protocols. In Advances in Cryptology - EUROCRYPT. Springer, 689–718.
[18] Gilles Barthe, Francois Dupressoir, Benjamin Gregoire, Alley Stoughton, and
Pierre-Yves Strub. 2018. EasyCrypt: Computer-Aided Cryptographic Proofs.
https://www.easycrypt.info/trac/.
[19] Gilles Barthe, Edvard Fagerholm, Dario Fiore, John C. Mitchell, Andre Scedrov,
and Benedikt Schmidt. 2014. Automated Analysis of Cryptographic Assumptions
in Generic Group Models. In Advances in Cryptology - CRYPTO. Springer, 95–112.
[20] Gilles Barthe, Edvard Fagerholm, Dario Fiore, Andre Scedrov, Benedikt Schmidt,
and Mehdi Tibouchi. 2015. Strongly-Optimal Structure Preserving Signatures
from Type II Pairings: Synthesis and Lower Bounds. In Public-Key Cryptography
- PKC. 355–376.
[21] Gilles Barthe, Xiong Fan, Joshua Gancher, Benjamin Grégoire, Charlie Jacomme,
and Elaine Shi. 2018. Symbolic Proofs for Lattice-Based Cryptography. In Pro-
ceedings of the 2018 ACM SIGSAC Conference on Computer and Communications
Security, CCS. ACM, 538–555.
[22] Gilles Barthe, Benjamin Grégoire, and Santiago Zanella Béguelin. 2009. Formal
certification of code-based cryptographic proofs. In Proceedings of the 36th ACM
SIGPLAN-SIGACT Symposium on Principles of Programming Languages. ACM,
90–101.
[23] Gilles Barthe, Benjamin Grégoire, and Benedikt Schmidt. 2015. Automated
Proofs of Pairing-Based Cryptography. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Security. ACM, 1156–1168.
[24] Bruno Blanchet. 2006. A Computationally Sound Mechanized Prover for Security
Protocols. In 2006 IEEE Symposium on Security and Privacy. IEEE Computer
Society, 140–154.
[25] Dan Boneh and Xavier Boyen. 2004. Efficient Selective-ID Secure Identity-Based
Encryption Without Random Oracles. In Advances in Cryptology - EUROCRYPT.
Springer, 223–238.
[26] Dan Boneh and Xavier Boyen. 2004. Secure Identity Based Encryption Without
[27] Dan Boneh and Xavier Boyen. 2004. Short Signatures Without Random Oracles.
Random Oracles. In CRYPTO. Springer, 443–459.
In EUROCRYPT.
[28] Dan Boneh, Xavier Boyen, and Eu-Jin Goh. 2005. Hierarchical Identity Based En-
cryption with Constant Size Ciphertext. In Advances in Cryptology - EUROCRYPT
2005. 440–456.
[29] Dan Boneh and Matthew K. Franklin. 2001. Identity-Based Encryption from the
Weil Pairing. In Advances in Cryptology - CRYPTO. Springer, 213–229.
Weil Pairing. In ASIACRYPT. Springer, 514–532.
[31] Xavier Boyen and Brent Waters. 2006. Anonymous Hierarchical Identity-Based
Encryption (Without Random Oracles). In Advances in Cryptology - CRYPTO.
Springer, 290–307.
[32] Xavier Boyen and Brent Waters. 2006. Compact Group Signatures Without
[30] Dan Boneh, Ben Lynn, and Hovav Shacham. 2001. Short Signatures from the
Random Oracles. In Advances in Cryptology - EUROCRYPT 2006. 427–444.
[33] Jan Camenisch and Anna Lysyanskaya. 2004. Signature Schemes and Anonymous
Credentials from Bilinear Maps. In Advances in Cryptology - CRYPTO. Springer,
56–72.
[34] Ran Canetti, Alley Stoughton, and Mayank Varia. 2019. EasyUC: Using EasyCrypt
to Mechanize Proofs of Universally Composable Security. In IEEE Computer
Security Foundations Symposium, CSF 2019.
[35] Yevgeniy Dodis. 2003. Efficient Construction of (Distributed) Verifiable Random
Functions. In Public Key Cryptography - PKC. Springer, 1–17.
[36] Yevgeniy Dodis and Aleksandr Yampolskiy. 2005. A Verifiable Random Function
with Short Proofs and Keys. In Proceedings of the 8th International Conference on
Theory and Practice in Public Key Cryptography (PKC’05).
[37] Craig Gentry. 2006. Practical Identity-Based Encryption Without Random Oracles.
In EUROCRYPT. Springer.
In Advances in Cryptology - EUROCRYPT. Springer, 445–464.
In Advances in Cryptology - ASIACRYPT. Springer, 548–566.
In Advances in Cryptology - CRYPTO. Springer, 430–447.
[41] Vipul Goyal, Steve Lu, Amit Sahai, and Brent Waters. 2008. Black-box accountable
authority identity-based encryption. In Proceedings of the 2008 ACM Conference
on Computer and Communications Security. ACM, 427–436.
[38] Craig Gentry. 2006. Practical Identity-Based Encryption Without Random Oracles.
[40] Vipul Goyal. 2007. Reducing Trust in the PKG in Identity Based Cryptosystems.
[39] Craig Gentry and Alice Silverberg. 2002. Hierarchical ID-Based Cryptography.
[42] Matthew Green and Susan Hohenberger. 2007. Blind Identity-Based Encryption
and Simulatable Oblivious Transfer. In Advances in Cryptology - ASIACRYPT.
Springer, 265–282.
[43] Jens Groth and Amit Sahai. 2008. Efficient non-interactive proof systems for