---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4953
date: '2020-10-14 12:09:06'
editorchoice: false
excerpt: 无服务器Serverless到底意味着什么？当然，总得有服务器存在 —— 构建网络的基本架构不会改变。不过在将服务器交给一小部分人运维之后，开发者们会发生什么变化呢？
fromurl: https://www.redhat.com/en/command-line-heroes/season-2/at-your-serverless
id: 12717
islctt: true
largepic: /data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg
permalink: /article-12717-1.html
pic: /data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12744
reviewer: acyanbird, wxy
selector: bestony
summary: 无服务器Serverless到底意味着什么？当然，总得有服务器存在 —— 构建网络的基本架构不会改变。不过在将服务器交给一小部分人运维之后，开发者们会发生什么变化呢？
tags:
- 代码英雄
thumb: false
title: 《代码英雄》第二季（7）：无服务器
titlepic: true
translator: JonnieWayy
updated: '2020-10-14 12:09:06'
---
> 
> 代码英雄讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
> 
> 
> 
> 
> **什么是《代码英雄》**
> 
> 
>  代码英雄   Command Line Heroes 是世界领先的企业开源软件解决方案供应商红帽（Red Hat）精心制作的原创音频播客，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。该音频博客邀请到了谷歌、NASA 等重量级企业的众多技术大牛共同讲述开源、操作系统、容器、DevOps、混合云等发展过程中的动人故事。
> 
> 
> 
![](/data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg)
本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[第二季（7）：无服务器](https://www.redhat.com/en/command-line-heroes/season-2/at-your-serverless)的[音频](https://dts.podtrac.com/redirect.mp3/audio.simplecast.com/aebc2c45.mp3)脚本。
> 
> 导语： 无服务器Serverless到底意味着什么？当然，总得有服务器存在 —— 构建网络的基本架构不会改变。不过在将服务器交给一小部分人运维之后，开发者们会发生什么变化呢？
> 
> 
> 无服务器编程让初学者们可以更加轻松简单地部署自己的应用程序，让工作更有效率，这是它的优点。Andrea Passwater 跟我们分享了抽象底层架构会给我们带来多大的便利。不过凡事必有代价，无服务器化也有很多问题。Rodric Rabbah 解释了无服务器意味着你将部署和回应问题的能力拱手献出 —— 这就是为什么他帮助创建了 Apache OpenWhisk，这是一个开源的无服务环境框架，同时 Himanshu Pant 也来分享了他对于何时应该使用无服务器服务的观点。
> 
> 
> 无服务器编程应该是为开发者们 赋能授权   empowerment 的。我们也应该对于全局场景保持关注 —— 尽管我们精简了我们的工具箱。
> 
> 
> 
> 
> **00:00:03 - Al Gore 档案**：
> 
> 
> 现如今，当然了，在全美乃至全世界，互联网正在彻头彻尾地改变着我们的生活。
> 
> 
> 
**00:00:13 - Saron Yitbarek**：
那是 1998 年。 Google 才刚刚雇佣了它的第一名员工，副总统 Al Gore 在接受媒体采访。
> 
> **00:00:22 - Al Gore 档案**：
> 
> 
> 这项技术还处于起步阶段。当我和 比尔·克林顿   Bill Clinton 总统入主白宫时，只有 50 个网站。现在看看，我在生日那天收到了一束虚拟鲜花。
> 
> 
> 
**00:00:37 - Saron Yitbarek**：
好的。我已经感觉到你的眉毛皱起了。为什么我要向你展现某些 20 年前的互联网史？这是因为我想要提醒你，互联网的基础仍然是相同的。
**00:00:51**：
当然，现在有不止 50 个站点了，我知道。但是，我们仍然在发送虚拟鲜花。从开发人员的角度来看，如果你将我们所有的惊人进步剥离开来，你得到的仍然是相同的“ 客户端 - 服务器   client-server ”（C/S）模型，这就是一切的开始。一个提供了分布式网络的客户端 - 服务器模型。
**00:01:16**：
如今，开发人员谈论了很多有关 无服务器   Serverless 的问题，这听起来像是 Al Gore 谈到的客户端 - 服务器模型被废弃了。而且，如果我们不小心，我们能够抽象出太多的基础架构，以至于忘记了仍然有服务器在那里做着它们的工作。
**00:01:37**：
但是，无服务器真的意味着没有服务器吗？真的吗？还是开发人员与服务器之间的关系正在变化？在这一集中，我们将与来自世界各地的人们交谈，以探索这种被称为“ 无服务器   serverless ”的东西。
**00:01:54**：
我是 Saron Yitbarek，这里是《代码英雄》，一档来自红帽的原创播客节目。
**00:02:03 - Andrea Passwater**：
你知道无线网络在某些地方还有线缆吗？
**00:02:06 - Saron Yitbarek**：
Andrea Passwater 在一家名为 …… 嗯…… “无服务器” 的公司工作。他们创建了一款流行的开源框架来开发无服务器应用程序。Andrea 注意到了各个组织是多么渴望抽象化基础架构的方法，而这正是神奇的“无服务器”一词始终给予人希望的地方。
**00:02:28 - Andrea Passwater**：
我认为这一术语主要是为了传达这样一个事实，即如果你是从事无服务器应用方面工作的开发人员，你不必考虑那些服务器。你只需要写代码并将代码部署到云提供商即可，而不必担心管理。这就是无服务器的真正含义。
**00:02:49 - Saron Yitbarek**：
对于 Andrea 来说，无服务器的吸引力很明显。
**00:02:53 - Andrea Passwater**：
倘若你以无服务器的方式开发应用程序，则可以不必去考虑部署和维护该应用程序的日常工作。这意味着你可以专注于它的商业价值，你可以专注于发挥创造力。
**00:03:12 - Saron Yitbarek**：
而无服务器的另一大好处是，你不太可能发现自己在重复造轮子。
**00:03:18 - Andrea Passwater**：
当有像 Auth0 这样可以直接使用的服务存在时，为什么要创建自己的身份验证方法呢？归根结底，无服务器就是为开发人员提供机会，使得他们能够更加轻松快速地构建起能把他们脑子里的所有的主意带到世界上的程序。
**00:03:41 - Saron Yitbarek**：
我明白了！
**00:02:27**：
想象一下，你拿了满手的东西，正跌跌撞撞地走向一扇门。这扇门滑开了，以简单、友好……
**00:03:50**：
（让我来说）
**00:03:51**：
……的方式。这就是无服务器。它为你打开了大门，使得开发工作不再那么繁琐。事实上，随着各个组织趋向于混合云环境，以及无服务器运动的发展，开发的障碍正在消失。
**00:04:09**：
Andrea 听说过很多有关非开发人员进行开发的话题。
**00:04:15 - Andrea Passwater**：
这是传统上认为自己写不了代码，而现如今由于无服务器而得以投身于软件工程的人的故事，并且能够开发这些使得他们自己的工作流程和类似的东西自动化的工具。这与你你做什么工作都没关系。
**00:04:31**：
你在工作中要做的一些事情是如此的呆板无聊，比如你每天都在做的例行事情，和那些你会想“难道计算机不能为我做这件事吗？”的事情。我开始有了这种感觉的时候，我碰巧在一家名为“无服务器”的公司工作，他们像这样：“你意识到我们制作的产品可以为你提供帮助，对吗？”
**00:04:50 - Saron Yitbarek**：
Andrea 认为，不久之后，许多从未将自己视为开发人员的人将意识到他们能够自己构建简单的应用程序，基本上免费。
**00:05:02 - Andrea Passwater**：
借助 Lambda，我从不需要为自己制作的任何小型应用程序付费。我可以让这些机器人为我做一部分工作，是的，我可以提高工作效率。但是，我也不必再做这些无聊的工作了。我可以做些更有趣的事情。
**00:05:17 - Saron Yitbarek**：
即使是对于专业开发人员来说，这种自动门效果在满手杂物的世界里也是很诱人的。
**00:05:25 - Andrea Passwater**：
我认为人们对于能够让一两个人的团队，在短时间内就让原型工作起来很感兴趣。在几天时间内，他们就可以启动并运行原型。我认为这使得人们开始意识到，他们可以专注于驱动他们的应用、产品和公司中的商业价值的部分。这非常让人兴奋，他们可以专注于商业价值。
**00:05:54 - Saron Yitbarek**：
我要再抛出一个术语给你。准备好了吗？ 功能即服务   Functions-as-a-service （FaaS）。就像是 AWS Lambda 或 Apache OpenWhisk 之类的无服务器产品。“功能即服务”意味着，只有在被触发时程序才会执行某个功能，这效率更高。
**00:06:15**：
此外，这让我对计算能力和运行时间的担心少了很多。最终，无服务器可能会成为一个相当不错的基础配置。事实上，有些人甚至开始怀疑，我们是否要完全使用无服务器？它可以替代容器吗？
**00:06:34 - Michael Hausenblas**：
我理解这这种想法。
**00:06:35 - Saron Yitbarek**：
Michael Hausenblas 是 Red Hat OpenShift 团队的开发倡导者。
**00:06:41 - Michael Hausenblas**：
如果你看一下我们现在拥有的这些东西，包括 OpenShift 和 Cloud Foundry 和一些其他东西，你实质上就拥有了抽象化。基本上，Heroku 或多或少地倾向于向这个想法。对吗？这是非常简单的方式，无需担心程序会如何运行，无需担心它是什么样的。只需要给我们代码，我们来处理剩下的工作。
**00:07:03 - Saron Yitbarek**：
是的。听起来相当不错。这听起来有点儿像是梦想中的“ 无运维   no-ops ”环境，一切都自动化并且抽象化了，就像是开发者版本的极简主义室内设计。很棒、很干净的界面。
**00:07:21**：
但是， Michael 想要让你了解你一些现实情况。
**00:07:25 - Michael Hausenblas**：