# Climate Controller Catastrophe, Exp, 750pts

**Background:**
Car theft and the subsequent sale of stolen parts have become significant issues. One of the most sought-after components is the dashboard computer, which frequently fails and thus has a high demand in the aftermarket. However, simply replacing the dashboard computer is not straightforward, as it must be paired with the main vehicle computer to function properly. Without this pairing, the climate control buttons will not work.

**Challenge Overview:**
In this challenge, you are provided with several resources, including reversing binaries and a special "challenge" that allows you to flash and wipe the EEPROM of the dashboard computer. The primary goal is to exploit the system by smashing the stack, rather than just pairing the dashboard computer. We suspect that the device does not use the serial interface for its pairing algorithm.

**Technical Details:**
This was a complex challenge that required extensive interaction with the board using a custom CAN (Controller Area Network) protocol, rather than UART (Universal Asynchronous Receiver-Transmitter). Some messages required authentication, which, upon closer inspection, was implemented as a challenge-response mechanism based on RSA. The binary contained a 32-bit public key, which was easily factorizable due to its short length.

Using an Arduino and MCP2515 CAN controller, we implemented the authentication scheme. Once authenticated, we gained access to several useful commands, one of which allowed us to erase part of the EEPROM. By using a patched version of `simavr`, we developed an exploit that overwrote a return address through a heap and stack collision. The vulnerable function was the multiplication of two big integers during the processing of a sent certificate (using CAN ID 0x776).

**Exploit Implementation:**
The final exploit is detailed in the file `climate/ardu.cpp` and can be flashed onto an Arduino. The entire folder also includes notes from the reverse engineering process, along with the code used to generate the exploit and the necessary `simavr` patches.

**Resources:**
- Reversing binaries
- Special "challenge" for flashing and wiping the EEPROM
- `climate/ardu.cpp` for the final exploit
- Reverse engineering notes
- Code for generating the exploit
- `simavr` patches

By following these steps and utilizing the provided resources, you can successfully complete the challenge and demonstrate your skills in exploiting and manipulating the climate controller system.