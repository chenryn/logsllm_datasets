·Autoshrink：自动缩小尺寸比显示区域大的图像。
·Scaletofit：按显示区域大小自适应调整，将大图像缩小，将小图像放大。
在这个Inspector的上下文菜单中，可以以位图方式复制图片到剪贴板，或使用当前时间作
为文件名的一部分，快速将图像文件保存到Windows桌面。它还提供了一个选项，把图像作为
DataURI进行复制，DataURI是一种文本格式，可以嵌入到HTML或样式表中，在新一代的浏
览器（IE8+）中支持。如果结果URI的长度超出32kb，Fiddler会弹出警告信息，提示IE8不
支持大于32kb的URI，需要IE9或更新版本的浏览器来渲染图片。菜单中的最后一个选项支持
改变背景的颜色（通常是淡蓝色），当查看小图片或透明的图片时，它可以提供有用的对比度。
中键点击图片会把该图片复制到桌面文件夹中。双击图片会打开一个全屏视图。在全屏
116
---
## Page 117
5.8JSON
视图中，包含表5-4功能：
表5-4
全屏视图功能
键盘或鼠标动作
功能
Enter 或Z
在全屏和实际大小之间切换
H
水平旋转图像
V
垂直旋转图像
R
把图像顺时针旋转90度
鼠标上滚
全屏显示
鼠标下滚
实际大小显示
Escape
退出全屏显示
为了更快速地查看大量的图像响应，可以使用扩展组件GalleryView。
5.8JSON
类型
请求&响应
允许编辑
否
JSON Inspector会把选中的请求或响应体解释成JSON（JavaScript Object Notation）格式
的字符串，以树形视图显示JSON对象节点。如果请求或响应体不是JSON格式，树形图会
是空的。和大多数Inspector不同，JSONInspector可以谊染数据，即使请求或响应是压缩格
式或使用了HTTPChunked编码：你不需要删除编码来显示数据内容。
很多Content-Type指定是JSON的响应实际上并不是JSON格式。相反，它们是JSONP，
包含单个函数调用的JavaScript文件，函数的一个参数是JSON格式的字符串。JSONInspector
能够处理很多类型的JSONP，它会忽略前面的函数调用，删除后面的括号和分号。但是，有
些JSONP格式不正确，比如名称/值对没有加引号：JSONInspector无法处理这种错误格式，
会拒绝解析内容。
上下文菜单支持两个选项：Copy用于把选中的节点复制到剪贴板（或按下CTRL+C）：
Send toTextWizard用于把选中的节点内容发送到TextWizard窗口，对其进行编码和解码处理。
117
---
## Page 118
第5章Inspectors
页脚的ExpandAll按钮会展开树的所有节点，而Collapse按钮会收回所有节点。如果请
求体包含的节点数少于2000，JSON树会自动扩展。出于性能方面的考虑，对于大文档，你
应该手动展开树形图。
5.9RAW
类型
请求&响应
允许编辑
是
RawInspector支持查看完整的请求和响应，包括文本格式的header和body。”raw（原始）”
这个词容易让人误解，因为Fiddler对请求和响应的字节进行了解析：如果需要查看网络流的
纯粹的“raw”视图，可以使用数据包噢探器工具，如MicrosoftNetworkMonitor（NetMon）
或Wireshark。
该Inspector的绝大部分区域是一个大文本块，它以文本形式显示header和body信息，
使用的字符集通过header、字节序标记或嵌入的META声明标记。在文本区域按下CTRL+G
键可以把鼠标移动到指定的行号。右击文本区域，弹出的上下文菜单中提供了标准的“剪切”、
TextWizard工具。菜单中还有两个复选框，一个用于控制是否启用自动换行（WordWrap），
另一个用于控制是否启用自动截断（AutoTruncate）功能。
Inspector下方是个条形栏，它支持一些其他功能。首先，搜索框支持选中和内容匹配的
文本。搜索文本区分大小写，不支持正则表达式。按下搜索框中的向上或向下箭头可以让文
本区域滚动（以便查看搜索结果的上下文）输人过程中会实时选择匹配项，如果找到匹配项，
搜索框会显示为绿色：如果没有找到匹配项，搜索框会显示为红色。按下Enter或F3可以跳
到下一个匹配项。按下CTRL+Enter键会高亮显示所有匹配的内容。
ViewinNotepad按钮会把文本内容保存到临时文件，并打开文本编辑器查看文件。文本
编辑器由选项中的fiddler.config.path.texteditor项控制：默认使用系统自带的记事本程序
(notepad.exe)
Inspector会用Unicode码（）替换所有的null字节，因此，这个Inspector也可以查看
二进制的响应内容，即使HexView更适用于这个任务。因为在文本框中显示大的二进制格式
的body需要占用大量的CPU时间和内存，所以这个Inspector被配置成对大的响应进行自动
118
---
## Page 119
5.10SYNTAXVIEW
截断。触发截断的阀值是由Content-Type以及以下四个选项控制的：
·fiddler.inspectors.request.raw.truncatebinaryat
·fiddle.inspectors.request.raw.truncatetextat
·fiddler.inspectors.response.raw.truncatebinaryat
fiddler.inspectors.response.raw.truncatetextat
默认情况下，二进制形式的Content-Types在128个字节处截断，文本形式的Content-Types
在262144字节处截断。可以通过上下文菜单关闭截断功能。
5.10SYNTAXVIEW
类型
请求&响应
允许编辑
是
SyntaxViewInspector支持根据多个规则高亮显示多种类型的请求和响应体文本。当读
HTML、XML、CSS和JavaScript 时，这个功能是非常有用的。Inspector 通过Content-Type
头判断应该使用哪种高亮规则。
SyntaxViewInspector是Fiddler中最有用的Inspectors之一，但是由于它太大了，因此，
不包含在默认的安装包中。Fiddler当前的安装包大约750KB，如果包含SyntaxHighlighting
扩展，其大小几乎会翻一倍。为了确保Fiddler更新的简洁性，SyntaxView扩展需要单独下载，
下载地址为http://fiddler2.com/r/?SYNTAXVIEWINSTALL，如图5-8所示。
arsfaeHederstetleSrntarengefeeHerewWeteAcCadreCode
al ditz lanp
-/
xm-iesl/
 bwteC1.gesTiae()
ar 
图 5-8
119
---
## Page 120
第5章Inspectors
在Inspector下方是个条形栏，它提供了几个额外的信息和功能。第一个是个文本，它给
出了光标当前所在的行和列。下一个是QuickFind框，它支持内部搜索。接下来是个按钮，
读模式还是编辑模式。
QuickFind框支持正则表达式，只需要在搜索串前面加上前缓REGEX：字符串，剩余部
分会被解释成正则表达式。
除了标准的“剪切”、“复制”、“粘贴”、“撒消”和“重新执行”命令，SyntaxView的Context
菜单中还提供了表5-5所示功能：
表5-5
SyntaxView的功能
x o p
把当前选中的文本发送给TexrWizard窗口以进行编码和解码
尝试以XML格式解析文档。如果解析成功，文本会以缩进的XML树形图重新格式
Format XML
化。即使Inspector是在只读模式下，该选项也是可用的，但是只有在编辑模式下才
会一直使用重新格式化功能。
尝试以JavaScripuJSON格式解析文档，文本会以标准的JavaScript缩进格式显示。
Format Script/JSONB
即使Inspcctor是在只读模式下，该选项也是可用的，但是只有在编辑模式下才会使
用重新格式化功能。
Fin...
打开“查找和替换”对话框，它提供了很多查找和替换选项。
Word Wrap
该复选框可以控制文本是否自动换行。
Editor Options...
打开一个包含了很多高级文本显示选项的选项窗口，
5.11
TEXTVIEW
类型
请求&响应
允许编辑
TextViewInspector支持以文本形式查看请求体和响应体。TextViewInspector会在第一个
空字节处截断，因此不适合用于显示二进制内容。
Inspector的主体是个大的文本区域，显示请求体或响应体的文本，其使用的字符集是通
过header、字节序标记或嵌入META标记的声明来检测的。在文本区域按下CTRL+G键，可
120
---
## Page 121
5.12TRANSFORMER
以把光标移动到指定的行号。右击时，会弹出一个菜单，提供标准的“剪切”、“复制”和“粘
贴”功能。此外，还提供了一个控制自动换行功能的复选框。该菜单中还提供了可以把当前
选中的文本发送到TexiWizard工具中的功能。
Inspector的下方是个条形栏，提供了一些其他信息和功能。第一栏中记录了光标当前所
在的行和列（以Line:Column格式显示）。第二栏以偏移/总数（Offset/Total）形式显示当前字
符在全部内容中的偏移。第三个选项框显示的是当前选中的字符数。
下面是个搜索框，支持在内容中选择文本。搜索文本是大小写敏感的，不支持正则表达
式。按下搜索框中的向上或向下箭头可以让文本区滚动（目的是为了方使用户在正文中查看搜
索结果）。输入的过程中，程序就会执行匹配，如果找到了匹配项，搜索框会显示为绿色：如
果没有找到匹配项，搜索框显示为红色。按下Enter或F3键可以跳到下一个匹配项。按下
CTRL+Enter键会高亮显示所有的匹配项。
ViewinNotepad按钮会把文本内容保存到临时文件中，并在文本编辑器中打开这个文件。
文本编辑器是由fiddler.config.path.texteditor来控制的，默认是记事本（notepad.exe）。
点击条形栏右侧的...按钮，会把内容保存到临时文件中，并弹出Windows的OpenWith
对话框，从中选择一个应用程序来处理这个文件。
5.12TRANSFORMER
类型
响应
允许编辑
总是
5.12.1响应的编码的一些背景知识
HTTP规范为响应定义了很多可以提高性能的编码方式：
·压缩（Compression）算法（如DEFLATE）可以应用于HTTP体中，能够降低在网络
上实际传输的字节数。文本类型的Content-Types，如HTML、Script和CSS，压缩率
可以达到80%
·分块传输编码（ChunkedTransfer-Encoding）支持在传输body前不需要预先设置body
的长度。一般而言，body的长度是作为Content-Length头发送的，但是预先计算body
的大小可能需要很多时间和内存，尤其是当body的内容基于数据库查询或其他操作
---
## Page 122
第5章Inspectors
的情况下生成时更是如此。
如果没有分块传输编码，服务器返回的响应的大小是不确定的时候，必须发送Connection：
close头，当响应结束时关闭连接。这种机制与HTTP的Keep-Alive机制是冲突的，会造成性
能下降，出现新的性能瓶颈点。
分块的原理是通过发送一个或多个块的数据，每个数据块前面包含一个以十六进制数表
示的长度值。接收到数据块中长度值的取值为0时，说明数据传输完成。下面是一个分块形
式的响应的例子：
HTTP/1.1 200 OK
Content-Type: text/plain
Transfer-Encoding: chunked
2b
This is a response which has been delivered
21
using HTrP Chunked encoding. To r
80
educe overhead, the chunks should be larger than those in
0c
this exampl
18
e; 2kb is a common size.
0
5.12.2使用Transformer添加或删除编码方式
编码会使得查看body内容变得复杂。TransformerInspector支持向响应中添加或从响应中
删除基于HTTP的编码。在Transformer选项卡的上方列出了
TandmeHedesTelew
body当前的大小：在添加或刷除编码时，可以留意这个数值，
taty Size:11,487 bytes.
如图5-9所示。
Transforrs
edTf
ChunkedTransfer-Encoding复选框从响应中添加或删除
sd d
d
ChunkedTransfer-Encoding。选中或者取消这个复选框可以应用或
GZP thodin
EFLATE Dceding
删除编码，然后添加或删除Transfer-Encoding和Content-Length
Edng
响应头。启用分块后，会关闭该复选框下方的HTTP压缩选项
图 5-9
框。要改变压缩方式，首先必须删除分块方式，然后调整HTTP
压缩方式。
HTTPCompression选项框中的单选按钮支持对body进行压缩或解压缩：
122
---
## Page 123