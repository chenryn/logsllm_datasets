下痕迹的地方。在Windows上则会采集系统上默认会存在的 application、security、
system三类日志。在木马检测方面，OSSECAGENTS会根据配置项检测一些常见木
马和文件异常行为。
口配置管理一OSSEC的检测能力均来自数据采集与分析，而具体有什么能力则是
通过配置来实现。分为：前端数据采集配置ossec-agent.conf；后端数据解析配置
decoder.xml；数据分析规则配置 rule/apache_rules.xml、rule/ syslog_rules.xml等。
自身系统的管理也是可配置的ossec.conf、ossec-server.conf，规则集管理和告警邮箱、
扫描颊率、木马特征库配置等。OSSEC配置管理如图8-3所示。
---
## Page 138
126技术篇
OSSEC AGENTS
internal_options.conf
ossec-local.conf
ossec-server.conf
ossec.conf
ossec.conf
ossec-server.conf
decoder.xml
ux'sanu aupede/ang
decoder.xml
ossec-agent.conf
Rule/ids_rules.xml
internal_options-win.conf
ossec-local.conf
图8-3OSSEC配置管理
前面介绍了OSSEC主要是通过配置文件来决定收集哪些信息，主要分为三类：系统自
身产生的日志、任何用户配置的文本日志、通过OSSEC自带功能生成的数据日志。其检测
能力如下：
1）规则配置—配置文件以XML格式书写，一个典型的配置如下所示，这表示可采
集本地的message和 secure日志文件内容：
syslog
/var/1log/messages
syslog
/var/1og/secure
任何数据被收集到服务端之后，还需要通过decoder解码格式化为服务端分析所需格
式，由配置文件decoder.xml定义解码规则。一个典型的解码规则如下所示：
sshd
~Accepted
^ \S+ for (\S+) from (\S+) port 
user, srcip
nane, user, location
---
## Page 139
第8章入侵感知体系127
以上规则可以理解为“一个SSH登录成功记录”，并且会输出几个关键字段：用户、来源IP
为了其数据分析的效率考虑，它做了很多优化的细节：
口事件集归类，如上述示例会将匹配到的事件归类到SSHD事件集，方便后端的事件分析。
口分级匹配，prematch预匹配一个粗粒度的正则表达式，避免不必要的全量原始数据
直接进入复杂正则表达式，减轻数据格式化引擎负担。
口众所周知，PCRE儿乎是最强大的正则引擎，但因为它的强大也拖累了使用效率。
OSSEC的正则表达式解析不使用PCRE正则引擎，而是自己实现了一个简化版的正
则引擎称之为“os_regex Library”。
2）默认能力\规则一当部署完毕OSSEC启动之后，安装包中自带的规则集就让你
具备了初步的安全事件检测能力，包括但不限于以下内容：
SSH破解相关规则。
 webserver(Apache\Nginx）日志检测规则。
口杀毒软件（Symantecicalm）事件告警规则：
安全设备（IDS\FIREWALL\SonicWall）事件告警规则。
 DB（MySQL\postgresql）事件告警规则。
 Ftpserver(proftpd pure-ftpdms-ftpd) 事件告警规则。
口其他常见应用服务事件告警规则。
3）误报一作为一个开源软件，能够做到对一个中型生产网络的常见入侵事件的检测
能力，确实难能可贵。但因其开源软件的属性，其功能基本上是满足基准需求，可用够用
就好，在实际运营中会有很多的误报出现。为了对其误报场景有足够的理解，不会被其干
扰，甚至可以按需调优。以下举例说明一些误报场景。
Rootkit检测误报—OSSEC的rootkit 检测方式非常‘土，但有效。其中“隐藏端
口”检测逻辑是主动尝试去连接本地的1-65535端口，然后与netstat命令结果对比。
整个逻辑清晰，代码也简洁，作为一个普通主机的安全检测是完全有效的。可是在
一个负载很高业务进程繁忙的Server上很可能产生误报，因为每次的1-65535循环
过程中，每个端口的检测逻辑按OSSEC代码来看就需要花4秒，加之netstat命令
在高负载机器上也执行非常慢，在netstat还未执行完毕的时候，原先能connect的
端口早已关闭，会导致误报“Kermel-levelrootkit or trojaned”rootkit隐藏端口。
口文件款改检测误报一安全系统对于系统关键文件必须是要有监控的，常见的做法
就是做MD5对比，OSSEC也有相应功能。有一种场景可能导致误报，当磁盘故障
---
## Page 140
128技术篇
时，每次对同一个文件的MD5计算都不一样，OSSEC检测到这类事件会告警。所
以碰到此类告警可能先要排除是系统故障的可能，
历史上各时期总会有不同的安全事件热点，远程缓冲层溢出攻击、口令破解、Web
漏润攻击等等，所以你会发现一成不变的规则是不能满足所有阶段以及所有企业的生产网
风险场景的。那么你需要不断选代完善检测能力。
OSSEC拥有基础的人侵检测能力，同时也可以看做是一个基础数据采集和分析框架引
擎，如果需要新增检测能力，通过增加数据和分析规则是可以实现的。OSSEC的功能扩展
如图8-4所示。
开发插件
采集数据
解析\检测规则
修改本地配置文件
开发本地扫描检测
修改decoder.xml
工具并写入指定日
ossec-agent.conf
格式化采集的日志
添加配置项采集生
志文件
成的日志文件
根据检测规则，配
uxBono/n
图8-4OSSEC功能扩展
扩展功能介绍如下：
1）开发插件，生产数据一为了对某类事件有感知能力，百先开发扫描插件，警如说
木马检测场景中，你需要关注服务器上新增了那些可执行文件，以及这些文件的基础检测
数据：ELFPE文件信息：inode信息：编译时间；owner_uid；owner_name；符号表有哪些
高危或敏感函数。重点关注的信息：
口是否设置S位权限（每次启动可以拿到root权限）。
（回）
（Y回工业）回工非口
是否继承了某些攻击面服务进程属主账户（比如Apache\MySQL）。
口是否有木马常用的函数（执行命令system，重定向输出dup,DDoS中多线程pthread
creat,Linux环境常见网络服务多线程模型用得较少）。
新增的扫描工具添加到crontab周期性运行，并将结果写入日志/va/log/Sensitive_elf，设定
的日志格式在OSSECServer端规则中需要解析。警如一条新增elf文件的扫描信息上报如下：
Permission:S_IsUID |1inked:8tat.ic inode: 606356 |ctime:22|owner_uid: 501 |owmer_name:no
bodyI function:system, dup2,pthread_creat
---
## Page 141
第8章入侵感知体系129
2）添加新的数据采集—新增工具部署完毕之后，需要修改ossec-agent.conf文件。
新增日志采集配置：
 Sensitive_elf 
/va/1og/SensItive_elf 
3）开发解析\检测规则一当数据从agent端采集到Server端之后，第一步是需要解
析格式化，这时需要修改的就是decoder.xml，通过对它的配置，可以让OSSEC能提取你
日志里的关键信息。
接下来到告警规则，在OSSEC安装目录的etc/rule/目录下新增一个xml配置文件，比
如I Sensitive_elf.xml.
文件包含任意3个危险特征判断为高危文件”，那么规则如下：
SUID| stat:ic |nobody I | system | dup2 (pthread_creat
cdescription>dangerous execute binary file,
54321
dangerous execute binary file,
8.1.2MIG
MozillaInvestiGator是一个开源的分布式取证框架，不能算是严格意义上的 HIDS，但
功能与HIDS类似，它主要作用是通过消息队列Active MQ在分布式的agent上执行系统
检查命令然后返回结果，目前包含4个模块，分别是：文件（file）、网络（network）、内存
（memory）、漏洞（vuln），如表8-1所示。
表8-1MIG对各平台支持的功能
功能
Linux
Macos
windows
文件检测
V
V
网络检测
V
√
(计划中)
内存检测
V
V
V
漏润管理
V
（计划中）
（计划中）
系统审计
（计划中)
(计划中)
(计划中)
---
## Page 142
130技术篇
MIG系统架构如图8-5所示。
数据库
API
(OpSec)
Workers
[assets,compliance...-
RabbitMQ
Relay
AMQPS
公共网
?
Agent
?
图8-5MIG系统架构图
从这张图可以看出MIG具备了现代HIDS架构的锥形，但是整体上MIG偏向于事后的
取证，而不是实时的入侵检测，所以只部署MIG还不能实现主机侧的入侵检测，必须辅之
以其他的Agent，如 OSSEC或Osquery等。
下面是一些比较直观的MIG适合干什么的列子：
---
## Page 143
第8章入侵感知体系131
ssh1.corpdmz.sc13.mozi11a.com found cor
72.158:22 for
nectedip:'62.21e.76.92
ected tuple 62.21e.76.92:45432 with 1ocal tuple 1e.22
ulfrefedbox2 ~]s 
如果你知道一个攻击特征，MIG能够迅速帮你查找哪些服务器上拥有这些特征：