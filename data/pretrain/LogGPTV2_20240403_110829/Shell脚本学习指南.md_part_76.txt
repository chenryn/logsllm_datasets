撼世出击：C/C++编程语言学习资料尽收眼底电子书+视频教程
VisualC++(VC/MFC）学习电子书及开发工具下载
Perl/CGI脚本语言编程学习资源下载地址大全
Python语言编程学习资料（电子书+视频教程）下载汇总
最新最全Ruby、RubyonRails精品电子书等学习资料下载
数据库管理系统（DBMS）精品学习资源汇总：MySQL篇|SQLServer篇|Oracle篇
最强HTML/xHTML、CSS精品学习资料下载汇总
最新JavaScript、Ajax典藏级学习资料下载分类汇总
网络最强PHP开发工具+电子书+视频教程等资料下载汇总
UMIL学习电子资下载汇总软件设计与开发人员必备
经典LinuxCBT视频教程系列Linux快速学习视频教程一帖通
天罗地网：精品Linux学习资料大收集（电子书+视频教程）Linux参考资源大系
Linux系统管理员必备参考资料下载汇总
Linuxshell、内核及系统编程精品资料下载汇总
UNIX操作系统精品学习资料分类总汇
FreeBSD/OpenBSD/NetBSD精品学习资源索引含书籍+视频
Solaris/OpenSolaris电子书、视频等精华资料下载索引
>>更多精品资料请访问大家论坛计算机区...
---
## Page 447
附录A
编写手册页
程序用户需要说明文件，程序设计者同样也需要它，当他们最近很少用到这个软件的时
候。可借的是，很少有计算机书籍提及软件说明文件的制作，所以就算用户想为程序写
一份好文件，也不晓得怎么做，甚至不知从何开始。本附录便是为了填补这样的不足。
在UNIX中，简短的程序文件多半为手册页（manual page）的形式，以nroff/troff
标记（markup）写成（注1），可通过man,nroff -man成groff-man以简单的ASCII
文本显示，使用ditroff -man-Txxx、groff -man-Txxx或troff-man -Txx
显示设备xxx的排版方式，或在Xwindows下以groff-TX-man检查。
较元长的软件说明文件一直以来都是提供使用手册或技术报告，通常是troff标记形
式，并以PostScript或PDF的形式打印。troff标记完全不是以人类看得懂的方式定
义，因此，GNUProject选择另一种完全不同的方式：Texinfo文件系统（注2）.Texinfo
标记认为比通用的troff包更高级，且就像troff一样，也允许以简单ASCII文本以
及TEX排版系统（注3）检查，最重要的是：它支持超文本链接，让用户在浏览整个在
线文档财更方使：
注 1:
虽然mrofI是在troff之前开发完成，但从用户的角度来看，这两个系统其实是类拟
的：ditroff 与groff模拟这两者。
 2:
见 Robert I. Chassell  Richard M. Stallman f 《Texinfo: The GNU Documentation
Format), ☆ Free Software Foundation 于 1999 出版, ISBN: 1-882114-67-1,
注 3:
见 Donald E. Knuth  《The TEXbook),由 Addison-Wesley 于 1984 年出 ,ISBN;
0-201-13448-9,
435
www.TopSage.com
---
## Page 448
436
附象A网
大部分你在UNIX系统里读到的在线文档，可能都是以早期的trof（注4）或Texinfom
（注5）标记形成。Texinfo系统里的makeinfo程序可以产生ASCIl、HTML、XML与
DocBook/XML格式的输出。Texinfo文件可直接由TEX排版，其输出为DVI（device-
independent）文件，该文件格式可通过后端DVI驱动程序转成数种设备格式。
当然能用的不只有这些标记格式。SunMicrosystems自Solaris7开始，即以SGML格
式提供（几乎）所有的手册页，而LinuxDocumentationProject（注6）推动XML（SGML
子集）标记，有助于该单位将GNU/Linux文件转换为世界各国语言的目标。
那么，UNIX的程序设计者究竞应使用哪个标记系统呢？经验告诉我们，使用高级标记
较佳，即便它较长，但绝对值得，SGML（HTML与XML）建立在严谨的语法上，所
以在它们编译为可显示的页面之前，文件的逻辑架构仍是很好验证的，有了充分详细的
标记，SGML文件即能可靠地转换为其他标记系统，事实上，有些书及杂志出版商正是
这么做：作者以任意文件格式交稿，出版商将其转换为SGML，然后再使用troff、TEX
或其他排版系统作为后端，产生打印机可读取的贡面。
不幸的是SGML软件工具集仍不够充分，且未完整标准化，因此要达到软件文件最大的
可移植性，可能还是使用troff或Texinfo标记之一比较好。以手册页来说，如果可以
使用man命令，则使用troff格式较佳。
最后，有人仍希望能做出自动化转换两个标记系统的产物，不过这样的目标其实很难微
到。你现在能做的，便是用troff标记的限制式子集编写手册页，让它们能自动转换为
HTML与Texinfo。要达到此目标，你必须安装两个包：man2html与man2texi（注7）。
pathfind的手册页
即便完整介绍标记系统文件的书很多，不过你可以从我们这里的介绍，更轻松地学习、
了解troff子集。我们在这里会逐步介绍，就像在8.1节里分段介绍pathfind脚本那
样，最后会再将这些片段集结成完整的手册页文件，呈现于例A-1。
在开始前，我们先介绍一下nroff/txoff标记语言。nroff建置在早期文本格式化系
统的经验上，例如DEC的runoff及产生ASCII打印设备的输出结果。当贝尔实验室
注4：元htrp://www.troff.org/,
注5：htp://www.gu.org/sofware/tezinfo/.
注6:
元 http://www.tldp.org/,
注7;
可 自 http://www.math.atah.eda/pwb/man2html/ http://www.marh.utah.edu/pab/man2texi
取得。
www.TopSage.com
---
## Page 449
编写手册页
437
需要照相凸版排版系统时，troff这个用于产生排版页面的新程序就诞生了.troff为
最早期计算机排版的尝试中成功的一个。这两个程序都接受相同格式的输入，所以当我
们说troff时，通常也是指nroff。
早期UNIX系统是在极小内存的微型计算机上执行，显然井不适于处理这些格式化程序。
troff命令，一如许多UNIX命令，是隐密的与简短的。大部分出现在一行的开头，形
式为一个点号，接上一或两个字母或数字。其字体的选择也是有限的：只有roman、粗
体、斜体，及后来的等宽字体这几种形式而已。troff的文件里，空格与空白行是有意
义的：输人两个空格字符，就会产生（大约）两个输出空格。
然面，简单的命令格式令troff文件的解析更容易，且许多前端处理程序已被开发为提
供简单的方程序、图形、图片与表格的规格.它们消耗troff数据流，并产生比原始数
据流稍大一些的输出。
虽然完整的troff命令其实内容庞大，但通过-man选项所选定的手册页风格只有一些
命令。它不需要前端处理程序，所以手册页里没有方程或围片，表格也很少。
手册页文件的版面配置相当简单，六七行标准的顶层标题段落，穿插着一些文本的格式
化段落，及缩进的、定标签的区块。就像你每次使用man命令所看到的那样。
手册页的检查方式，长久以来累积了相当多种类，在显示的文体上也有很大的不同，当
标记是视觉的而非逻辑的时候较容易被预期。我们在此选择的字体，只是建议性，面非
强制一定要使用，
现在是开始编写pathfind手册页的时候了，这是一个相当简单的程序，因此它的标记
不致太难处理。
我们从注释性语句开始，因为每个计算机语言都应该要有。troff的注释从反斜线引用
（backslash-quote）开始，直至结尾，但不包含end-of-line。当它们紧接在初始的点
号之后，它们的行终结符也会从输出中消失：
由于troff输人不能被缩进处理，所以它看起来非常密集。我们发现，在标头段落之前
的等号注释行会让它们比较好辨识，且我们时常使用相当短的输入行。
每个手册页文件都以TexrHeader命令（.TH）开始，其至多可带有4个参数：大写命
令名称、手册段落编号（数字的1为用户命令），以及可选用的再版日期与版本编号。这
些参数用以构建执行中的页面标头与格式化后输出文件的页尾：
TH PATHFIND 1 ** *1.0O*+
www.TopSage.com
---
## Page 450
438
附录A
SecrionHeading（部分标题）命令（.SH）则只带有一个参数，如含有空格，请引l用它。
且请遵循手册页惯例，以大写字母表示：
,SH NAME
NAME段落的主体；提供的是apropos（等同于=an：-k）命令所需的要件，它应该只
有一行，结尾不带有任何标点符号，形式为command-deacxiption：
pathfind \(em find filee in a directory path
标记\（em是手册页里可见的少数几个troff命令之一：它表示一个em-（破折号），
也就是大约是字母m宽度的水平行。前置一个空格并且接着em-（破折号）。较旧的手
册页用的是\-（负号），或只是-，但em-（破折号）为英语印副样式的惯用法。
第二个段落为在命令行引用程序时，提供的简短概要说明。一开始仍为标头：
.SH SYNOPSIS
接下来有时会是漫长的标记，最常出现的就是字体信息：
.B pathfind
.B \-\^\-a11
1
.B (-1^\-7
-B 11~\help
【
.B \-\^\-version
选项-（连字号）以\-标记，以取得负号的排版方式、看起来会比稍短的原始连字号
好。我们使用\~命令，防止在troff的输出中将连字号一起执行。nroff的输出下，
空格字符会消失。程序名称与选项被设置为粗体字。字体转换的命令，像，B，可使用到
6个参数（如它们包含空格，请引用它），然后每一个都紧邻着排版。当出现多个参数时，
意即所有字间需要的空格都应该明确地提供。在此，方括号为默认的roman字体：在手
册页中，它们界定可选用的值。虽然我们应该将关闭与开启的方括号置于同一行，但我
们不这么微，因为让每个选项可以在三个连续行上完成可便于编辑。字体配对的命令虽
可立即接上，让它们变成单唯一行，但它们很少被用在选项列表里，
除了断行，troff会以塞满段落的模式排版，因此所有东西看起来只有一行，以经验来
www.TopSage.com
---
## Page 451
编写手册页
说，我们发现nroff的ASCII输出会在--version选项之后断行，但因为我们是在段
.com
落模式下，所以下一行会从最左边缘接上，这部分有点讨厌，所以我们只有在套用nroff
时置人条件语句处理，但在troff里就不需要这么使用。这里是以临时缩进（temporary
indentation）命令（.ti）加上参数+9n处理，即缩进9个空格符，大约是命令名称的
宽度加上等宽字体的结尾空格符：
if n .ti +9n
命令行很短，放在单一排版行上练绰有余，所以对txoff无须再作这类处理，这里是它
大致的样式，但我们隐藏了注释，待程序加入了更多的选项，我们再添上：
\*.if t .ti +\w'\fBpathfind\fP\ u
缩进总数的计算很复杂，因为它与字体成比例，且我们无法得知命令名称的宽度。
\w"...u的命令是在计算单引号里元素的宽度。因为文本被设置为粗体字、所以我们
使用内部的字体包装：\fB...\fP，即转换为粗体字后，再转换回原先的字体。类似的
字体转换命令还有roman（fR）、斜体字（\fI），与等宽（\fc）字体。C表示的是
Courier，这是广为流传的等宽字体。
接下来的命令行处理为：
envvar [ files-or-patterns]
第三段落描述程序的选项，这部分置于所有进一参说明之前，是因为大部分在手册页里，
它是最常读取的段落：
.SH OPTIONS
部分选项会接上简短的备注说明，所以接下来处理这个：
options can be prefixed with either one or tvo hyphens, and
B pathfind
can be abbreviated to any unique prefix. Thus,
.BR \=ver ,
.BR \-V ,
and
B \-\^\version
are equivalent.
这个段落展现了一个新特色：成对字体命令（.BR），这里设置其参数是粗体与roman
字体的文本之间没有任何空格。类似的命令还有：.IR与.RI斜体-roman配对，.IB
与.BI粗体一斜体配对，当然还有已经介绍过的，RB。不过等宽字体并没有类似的用
法，因为它是后来才加入的（原始的贝尔实验室排版程序并没有这样的字体），你必须
改用\fc...\fp.
www.TopSage.com
---
## Page 452
440
附录A
现在该是切开段落的时候了：
-PP
在nroff的输出中，一空行与一段落切分是一样的意思，但troff则使用少数的垂直
空格作为段落切分。在段落之间使用.PP会是比较好的形式，一般来说，手册页输人文
件绝不应含有任何空行。
接下来的段落如下：
To avoid confusion with options, if a fjlename begins with a
relative directory path, e.g..
hyphen, it muat be disguised by a leading absolute or
•I /tnp/-foo
.IR /-foo.
or
现在，我们可以开始进行选项描述了。它们的标记应该算是用在手册页里最复杂的部分，
不过要上手也很快。本质上，我们要的是有标签的（labeled）编进段落；辅以段落第一
行最左边的标签设置，近期许多标记系统均以项目列表构建此部分：起始一选项一列表、
起始一选项、结束一选项、起始一选项、结束一选项等等，然后以结束一选项一列表作
终结。不过，手册页标记不全然这么做，它只是起始于项目，但终结于下一个段落切分
（.PP）或部分标头（.SH）。
起始项目的命令（.TP）可选择性地设置宽度参数，设置描述性段落从左边缘开始的缩
进宽度。如参数省略，则使用默认的缩进。如标签长度大于缩进，则新的行立即自标签
之后开始，段落缩进仍会影响接下来的.TP命令，所以只有选项列表里的第一个需要它。
如同使用SYNOPSIS部分里封装的命令行的缩进，我们使用动态的缩进，根据最长选项
名称的长度而定，由于我们有好儿个选项要说明，所以这里以具有一连串破折号的注释
行将之区分：
TP 1v'\fB\-1^\=version\fP′u+3n
.\*.....
接在.TP命令之后的行会提供项目标签：
,B \al1
标签之后接的是选项插述：
Search all directories for each specifled file, instead of
reporting just the first instance of each found in the
search path.
如果这个描述需要切分段落，则使用缩进段落（IndentedParagraph）命令（.IP）取代
www.TopSage.com
---
## Page 453
编写手册页
441
原来的段落切分命令（.PP），这么做不会终结此列表。不过这份手册页很短，我们用不
到.IP。
接下来的选项描述就不再需要用到新的标记了，下面为完整的选项部分：
.TP
.B \-?
Sane as
.BR \-help
\*
-8 \=help
,TP
Display a brief help message on
.IR stdout 
giving a usage description, and then terminate immediately
with a success return code,
Display the progran version nunber and release date on
.B \-version