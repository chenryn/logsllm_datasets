1.89 ms
-
3.42 ms
0.27 ms
21.17 ms
0.10 ms
1.41 ms
26.38 ms
0.01 ms
After the evaluation, the cloud returns only a single packed ciphertext that is transmitted the author-
ity. Then the output can be decrypted with the secret key and the authority computes the argmax of 10
scores for each image to obtain the prediction. These procedures take around 0.72 milliseconds, yielding
an amortized time of 0.01 milliseconds per image. In the end, the data owner gets the results from the
authority.
This model achieves an accuracy of 98.1% on the test set. The accuracy is the same as the one
obtained by the evaluation of the model in the clear, which implies that there is no precision loss from
the approximate homomorphic encryption.
6.4 Comparison with Previous Work
Table 9 compares our result for the MNIST dataset with the state-of-the-art frameworks: CryptoNets [23],
MiniONN [34], and GAZELLE [28]. The ﬁrst column indicates the framework and the second column
denotes the method used for preserving privacy. The last columns give running time and communication
costs required for image classiﬁcation.
HE-based frameworks. We used a similar network topology to CryptoNets (only diﬀerent numbers of nodes
in the hidden layers) but considered diﬀerent scenario and underlying cryptographic primitive. CryptoNets
took 570 seconds to perform a single prediction, yielding in an amortized rate of 70 milliseconds. In
our case, data is represented in a matrix form and applied to the evaluation of neural networks using
19
homomorphic matrix operations. As a result, E2DM achieves 340-fold reduction in latency and 34-fold
reduction in message sizes. CryptoNets allows more SIMD parallelism, so it could give better amortized
running time. However, this implies that CryptoNets requires a very large number of prediction to yield
better amortized complexity, so its framework turns out to be less competitive in practice.
Mixed protocol frameworks. Liu et al. [34] presented MiniONN framework of privacy-preserving neural
networks by employing a ciphertext packing technique as a pre-processing tool. Recently, Juvekar et
al. [28] presented GAZELLE that deploys automorphism structure of an underlying HE scheme to perform
matrix-vector multiplication, thereby improving the performance signiﬁcantly. It took 30 milliseconds
to classify one image from the MNIST dataset and has an online bandwidth cost of 0.5 MB. Even
though these mixed protocols achieve relatively fast run-time, they require interaction between protocol
participants, resulting in high bandwidth usage.
Table 9: Privacy-preserving neural network frameworks for MNIST
Framework Method
Runtime
Communication cost
Oﬄine Online Total Amortized Oﬄine Online
Total
Amortized
HE
CryptoNets
MiniONN HE, MPC 0.88 s
GAZELLE HE, MPC
-
-
570 s
0.40 s 1.28 s
0.03 s 0.03 s
1.69 s
0
-
E2DM
HE
7 Related Works
-
70 ms
595.5 MB
1280 ms 3.6 MB 44 MB 47.6 MB
0.5 MB
23.93 MB
30 ms
26 ms
0.5 MB
-
0
-
-
0.07 MB
47.6 MB
0.5 MB
0.37 MB
7.1 Secure Outsourced Matrix Computation
Matrix multiplication can be performed using a series of inner products. Wu and Haven [48] suggested
the ﬁrst secure inner product method in a SIMD environment. Their approach is to encrypt each row or
column of a matrix into an encrypted vector and obtain component-wise product of two input vectors by
performing a single homomorphic multiplication. However, it should aggregate all the elements over the
plaintext slots in order to get the desired result and this procedure requires at least log d automorphisms.
Since one can apply this solution to each row of A and each column of B, the total complexity of secure
matrix multiplication is about d2 multiplications and d2 log d automorphisms.
Recently, several other approaches have been considered by applying the encoding methods of Lauter
et al. [40] and Yasuda et al. [49] on an RLWE-based HE scheme. Duong et al. [17] proposed a method to
encode a matrix as a constant polynomial in the native plaintext space. Then secure matrix multiplication
requires only one homomorphic multiplication over packed ciphertexts. This method was later improved
in [37]. However, this solution has a serious drawback for practical use: the resulting ciphertext has non-
meaningful terms in its coeﬃcients, so for more computation, it should be decrypted and re-encoded by
removing the terms in the plaintext polynomial.
Most of related works focus on veriﬁable secure outsourcing of matrix computation [11, 4, 38, 19]. In
their protocols, a client delegates a task to an untrusted server and the server returns the computation
result with a proof of the correctness of the computation. There are general results [20, 15, 19] of veriﬁable
secure computation outsourcing by applying a fully HE scheme with Yao’s Garbled circuit or pseudo-
random functions. However, it is still far from practical to apply these theoretical approaches to real-world
applications.
7.2 Privacy-preserving Neural Networks Predictions
Privacy-preserving deep learning prediction models were ﬁrstly considered by Gilad-Bachrach et al. [23].
The authors presented the private evaluation protocol CryptoNets for CNN. A number of subsequent
20
works have improved it by normalizing weighted sums prior to applying the approximate activation
function [10], or by employing a fully HE to apply an evaluation of an arbitrary deep neural networks [7].
There are other approaches for privacy-preserving deep learning prediction based on MPC [5, 41] or its
combination with (additively) HE. The idea behind such hybrid protocols is to evaluate scalar products
using HE and compute activation functions (e.g. threshold or sigmoid) using MPC technique. Mohassel
and Zhang [39] applied the mixed-protocol framework of [16] to implement neural networks training
and evaluation in a two-party computation setting. Liu et al. [34] presented MiniONN to transform an
existing neural network to an oblivious neural network by applying a SIMD batching technique. Riazi et
al. [42] designed Chameleon, which relies on a trusted third-party. Their frameworks were later improved
in [28] by leveraging eﬀective use of packed ciphertexts. Even though these hybrid protocols could improve
eﬃciency, they result in high bandwidth and long network latency.
8 Conclusion and Future Work
In this paper, we presented a practical solution for secure outsourced matrix computation. We did demon-
strate its applicability by presenting a novel framework E2DM for secure evaluation of encrypted neural
networks on encrypted data. Our experimentation shows that E2DM achieves lower size of encrypted
messages and latency compared to CryptoNets.
Our secure matrix computation primitive can be applied to various computing applications such as
genetic testing and machine learning. In particular, we can investigate ﬁnancial model evaluation based
on our E2DM framework. Our another future work is to extend the matrix computation mechanism for
more advanced operations.
References
1. M. Abadi, A. Agarwal, P. Barham, E. Brevdo, Z. Chen, C. Citro, G. S. Corrado, A. Davis, J. Dean, M. Devin,
et al. Tensorﬂow: Large-scale machine learning on heterogeneous distributed systems, 2015. https://www.
tensorflow.org.
2. M. R. Albrecht, R. Player, and S. Scott. On the concrete hardness of learning with errors. Journal of
Mathematical Cryptology, 9(3):169–203, 2015.
3. C. S. Alliance.
Security guidance for critical areas of focus in cloud computing, 2009.
http://www.
cloudsecurityalliance.org.
4. M. J. Atallah and K. B. Frikken. Securely outsourcing linear algebra computations. In Proceedings of the 5th
ACM Symposium on Information, Computer and Communications Security, pages 48–59. ACM, 2010.
5. M. Barni, C. Orlandi, and A. Piva. A privacy-preserving protocol for neural-network-based computation. In
Proceedings of the 8th workshop on Multimedia and security, pages 146–151. ACM, 2006.
6. J. W. Bos, K. Lauter, J. Loftus, and M. Naehrig.
Improved security for a ring-based fully homomorphic
encryption scheme. In Cryptography and Coding, pages 45–64. Springer, 2013.
7. F. Bourse, M. Minelli, M. Minihold, and P. Paillier. Fast homomorphic evaluation of deep discretized neural
networks. In Annual International Cryptology Conference, pages 483–512. Springer, 2018.
8. Z. Brakerski. Fully homomorphic encryption without modulus switching from classical GapSVP. In Advances
in Cryptology–CRYPTO 2012, pages 868–886. Springer, 2012.
9. Z. Brakerski, C. Gentry, and V. Vaikuntanathan. (Leveled) fully homomorphic encryption without bootstrap-
ping. In Proc. of ITCS, pages 309–325. ACM, 2012.
10. H. Chabanne, A. de Wargny, J. Milgram, C. Morel, and E. Prouﬀ. Privacy-preserving classiﬁcation on deep
neural network. IACR Cryptology ePrint Archive, 2017:35, 2017.
11. D. Chaum and T. P. Pedersen. Wallet databases with observers. In Annual International Cryptology Confer-
ence, pages 89–105. Springer, 1992.
12. J. H. Cheon, K. Han, A. Kim, M. Kim, and Y. Song. A full RNS variant of approximate homomorphic
encryption. In International Conference on Selected Areas in Cryptography. Springer, 2018.
13. J. H. Cheon, A. Kim, M. Kim, and Y. Song. Homomorphic encryption for arithmetic of approximate numbers.
In International Conference on the Theory and Application of Cryptology and Information Security, pages
409–437. Springer, 2017.
14. F. Chollet et al. Keras, 2015. https://github.com/keras-team/keras.
21
15. K.-M. Chung, Y. T. Kalai, F.-H. Liu, and R. Raz. Memory delegation. In Annual Cryptology Conference,
pages 151–168. Springer, 2011.
16. D. Demmler, T. Schneider, and M. Zohner. ABY-a framework for eﬃcient mixed-protocol secure two-party
computation. In NDSS, 2015.
17. D. H. Duong, P. K. Mishra, and M. Yasuda. Eﬃcient secure matrix multiplication over lwe-based homomorphic
encryption. Tatra Mountains Mathematical Publications, 67(1):69–83, 2016.
18. J. Fan and F. Vercauteren. Somewhat practical fully homomorphic encryption. IACR Cryptology ePrint
Archive, 2012:144, 2012.
19. D. Fiore and R. Gennaro. Publicly veriﬁable delegation of large polynomials and matrix computations, with
applications. In Proceedings of the 2012 ACM conference on Computer and communications security, pages
501–512. ACM, 2012.
20. R. Gennaro, C. Gentry, and B. Parno. Non-interactive veriﬁable computing: Outsourcing computation to
untrusted workers. In Annual Cryptology Conference, pages 465–482. Springer, 2010.
21. C. Gentry et al. Fully homomorphic encryption using ideal lattices. In STOC, volume 9, pages 169–178, 2009.
22. C. Gentry, S. Halevi, and N. P. Smart. Homomorphic evaluation of the AES circuit. In Advances in Cryptology–
CRYPTO 2012, pages 850–867. Springer, 2012.
23. R. Gilad-Bachrach, N. Dowlin, K. Laine, K. Lauter, M. Naehrig, and J. Wernsing. CryptoNets: Applying
In International Conference on
neural networks to encrypted data with high throughput and accuracy.
Machine Learning, pages 201–210, 2016.
24. S. Halevi and V. Shoup. Algorithms in helib. In Annual Cryptology Conference, pages 554–571. Springer,
2014.
25. S. Halevi and V. Shoup. Bootstrapping for helib.
In Annual International conference on the theory and
applications of cryptographic techniques, pages 641–670. Springer, 2015.
26. S. Halevi and V. Shoup. Faster homomorphic linear transformations in helib.
In Annual International
Cryptology Conference, pages 93–120. Springer, 2018.
27. X. Jiang, Y. Zhao, X. Wang, B. Malin, S. Wang, L. Ohno-Machado, and H. Tang. A community assessment of
privacy preserving techniques for human genomes. BMC Med. Inform. Decis. Mak., 14 Suppl 1(Suppl 1):S1,
Dec. 2014.
28. C. Juvekar, V. Vaikuntanathan, and A. Chandrakasan. GAZELLE: A low latency framework for secure
In 27th USENIX Security Symposium (USENIX Security 18), Baltimore, MD,
neural network inference.
2018. USENIX Association.
29. M. Kim and K. Lauter. Private genome analysis through homomorphic encryption. BMC medical informatics
and decision making, 15(Suppl 5):S3, 2015.
30. M. Kim, Y. Song, B. Li, and D. Micciancio. Semi-parallel logistic regression for gwas on encrypted data.
IACR Cryptology ePrint Archive, 2019:294, 2019.
31. M. Kim, Y. Song, S. Wang, Y. Xia, and X. Jiang. Secure logistic regression based on homomorphic encryption:
Design and evaluation. JMIR medical informatics, 6(2), 2018.
32. A. Krizhevsky, I. Sutskever, and G. E. Hinton. Imagenet classiﬁcation with deep convolutional neural net-
works. In Advances in neural information processing systems, pages 1097–1105, 2012.
33. Y. LeCun. The mnist database of handwritten digits. http://yann. lecun. com/exdb/mnist/, 1998.
34. J. Liu, M. Juuti, Y. Lu, and N. Asokan. Oblivious neural network predictions via minionn transformations.
In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages
619–631. ACM, 2017.
35. E. Makri, D. Rotaru, N. P. Smart, and F. Vercauteren. Pics: Private image classiﬁcation with SVM. Cryp-
tology ePrint Archive, Report 2017/1190, 2017. https://eprint.iacr.org/2017/1190.
36. R. Miotto, F. Wang, S. Wang, X. Jiang, and J. T. Dudley. Deep learning for healthcare: review, opportunities
and challenges. Brief. Bioinform., May 2017.
37. P. K. Mishra, D. H. Duong, and M. Yasuda. Enhancement for secure multiple matrix multiplications over ring-
lwe homomorphic encryption. In International Conference on Information Security Practice and Experience,
pages 320–330. Springer, 2017.
38. P. Mohassel. Eﬃcient and secure delegation of linear algebra. IACR Cryptology ePrint Archive, 2011:605,
2011.
39. P. Mohassel and Y. Zhang. SecureML: A system for scalable privacy-preserving machine learning. In Security
and Privacy (SP), 2017 IEEE Symposium on, pages 19–38. IEEE, 2017.
40. M. Naehrig, K. Lauter, and V. Vaikuntanathan. Can homomorphic encryption be practical? In Proceedings
of the 3rd ACM workshop on Cloud computing security workshop, pages 113–124. ACM, 2011.
41. C. Orlandi, A. Piva, and M. Barni. Oblivious neural network computing via homomorphic encryption.
EURASIP Journal on Information Security, 2007(1):037343, 2007.
22
42. M. S. Riazi, C. Weinert, O. Tkachenko, E. M. Songhori, T. Schneider, and F. Koushanfar. Chameleon: A
hybrid secure computation framework for machine learning applications. In Proceedings of the 2018 on Asia
Conference on Computer and Communications Security, pages 707–721. ACM, 2018.
43. Microsoft SEAL (release 3.3). https://github.com/Microsoft/SEAL, 2019. Microsoft Research, Redmond,
WA.
44. K. Simonyan and A. Zisserman. Very deep convolutional networks for large-scale image recognition. arXiv
preprint arXiv:1409.1556, 2014.
45. N. P. Smart and F. Vercauteren. Fully homomorphic SIMD operations. Designs, codes and cryptography,
71(1):57–81, 2014.
46. H. Takabi, J. B. Joshi, and G.-J. Ahn. Security and privacy challenges in cloud computing environments.
IEEE Security & Privacy, 8(6):24–31, 2010.
47. S. Wang, X. Jiang, H. Tang, X. Wang, D. Bu, K. Carey, S. O. M. Dyke, D. Fox, C. Jiang, K. Lauter, and
Others. A community eﬀort to protect genomic data sharing, collaboration and outsourcing. npj Genomic
Medicine, 2(1):33, 2017.
48. D. Wu and J. Haven. Using homomorphic encryption for large scale statistical analysis. Technical report,
Technical Report: cs. stanford. edu/people/dwu4/papers/FHESI Report. pdf, 2012.
49. M. Yasuda, T. Shimoyama, J. Kogure, K. Yokoyama, and T. Koshiba. New packing method in somewhat
homomorphic encryption and its applications. Security and Communication Networks, 8(13):2194–2213, 2015.
50. M. D. Zeiler. Adadelta: an adaptive learning rate method. arXiv preprint arXiv:1212.5701, 2012.
23