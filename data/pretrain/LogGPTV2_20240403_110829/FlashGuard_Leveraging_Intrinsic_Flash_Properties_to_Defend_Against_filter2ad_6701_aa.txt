# FlashGuard: Leveraging Intrinsic Flash Properties to Defend Against Encryption Ransomware

## Authors
- **Jian Huang**  
  Georgia Institute of Technology, Atlanta, GA  
  Email: [PI:EMAIL]
- **Jun Xu**  
  Pennsylvania State University, University Park, PA  
  Email: [PI:EMAIL]
- **Xinyu Xing**  
  Pennsylvania State University, University Park, PA  
  Email: [PI:EMAIL]
- **Peng Liu**  
  Pennsylvania State University, University Park, PA  
  Email: [PI:EMAIL]
- **Moinuddin K. Qureshi**  
  Georgia Institute of Technology, Atlanta, GA  
  Email: [PI:EMAIL]

### Abstract
Encryption ransomware is a type of malicious software that stealthily encrypts user files and demands a ransom for their decryption. Previous studies have developed systems to detect ransomware by monitoring typical activities during an attack. However, by the time ransomware is detected, some files are already encrypted, and users must still pay the ransom to regain access. Additionally, ransomware variants can obtain kernel privileges, allowing them to terminate software-based defense systems such as antivirus programs. While periodic backups have been explored as a mitigation strategy, they incur storage overheads and are still vulnerable if ransomware gains kernel privileges to stop or destroy the backups. Ideally, we would like to defend against ransomware without relying on software-based solutions and without incurring the storage overheads of backups.

To address this, we propose FlashGuard, a ransomware-tolerant Solid State Drive (SSD) with a firmware-level recovery system that allows quick and effective recovery from encryption ransomware without explicit backups. FlashGuard leverages the out-of-place write mechanism used by SSDs to mitigate the long erase latency of flash memories. When a page is updated or deleted, the older copy remains in the SSD. FlashGuard modifies the garbage collection (GC) mechanism to retain copies of data encrypted by ransomware, ensuring effective data recovery. Our experiments with 1,447 manually labeled ransomware samples show that FlashGuard can efficiently restore files encrypted by ransomware, with a negligible impact on the performance and lifetime of the SSD.

### Permission Notice
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

### CCS '17, October 30-November 3, 2017, Dallas, TX, USA
© 2017 Copyright held by the owner/author(s). Publication rights licensed to Association for Computing Machinery.
ACM ISBN 978-1-4503-4946-8/17/10...$15.00
https://doi.org/10.1145/3133956.3134035

### CCS Concepts
- **Security and Privacy → Systems Security; Hardware Security**

### Keywords
- Encryption ransomware
- Solid-state drive
- Data recovery

## 1 Introduction
Recently, criminals have unleashed bold attacks on users' machines through a new type of malicious software called encryption ransomware [34, 36, 53]. For example, the WannaCry ransomware [53], launched on May 12, 2017, infected more than 230,000 computers across 150 countries, including government agencies, schools, hospitals, and police departments.

Unlike traditional malware, which typically disrupts computer operations and gathers sensitive information, encryption ransomware stealthily encrypts files on a user's machine and demands a ransom for their decryption. Since the operations performed by ransomware are indistinguishable from benign software, it can easily bypass various antivirus programs, making it increasingly prevalent among cybercriminals [30, 46]. According to a study from IBM Security [17], the number of users encountering encryption ransomware in 2016 increased by over 6,000% compared to the previous year. Ransomware attacks cost victims about a billion dollars in 2016, a 41x increase from 2015 [13].

To counteract ransomware, researchers have proposed detection systems that use file access patterns [19, 44] or features of cryptographic algorithms [9] to identify ransomware. However, these mechanisms cannot prevent ransomware from locking up user data. First, detection occurs only after damage has been observed, and since the encrypted data may contain valuable files, victims often have to pay the ransom. Second, some ransomware can run with administrator privileges, allowing them to load kernel code and carry out kernel-level attacks, thereby disabling or circumventing the aforementioned detection mechanisms.

One intuitive solution is to enable file backup on local persistent storage (e.g., journaling and log-structured file systems [32, 40]) or remote machines (e.g., NFS [31] and cloud-based storage [12, 51]). However, this is insufficient for guarding against ransomware. First, file backup mechanisms impose storage overhead. Second, ransomware can find and encrypt backups, regardless of whether they are on shared network drives, local hard disk drives, external storage devices, or plugged-in USB sticks [55]. Third, ransomware with kernel privileges can terminate backup processes, rendering them ineffective.

As replacements for conventional persistent storage devices like hard disk drives (HDDs), Solid-State Drives (SSDs) have been widely adopted due to their superior performance and decreasing costs [14, 16, 47, 54]. A unique property of SSDs is that a physical page cannot be written until it is erased, but the erase operation incurs significant latency. To overcome this, modern SSDs perform out-of-place writes, intrinsically supporting logging functionality without requiring explicit backups. This feature naturally preserves old copies of overwritten or deleted files for a period before they are reclaimed by garbage collection. Moreover, firmware-level logging isolates data protection and recovery from the operating system (OS) kernel and upper-layer software.

Unlike existing ransomware detection systems [44, 45] and explicit file backups [33, 41], we leverage the intrinsic properties of flash memory to build FlashGuard, a ransomware-tolerant SSD with a lightweight hardware-assisted data recovery system. It allows users to reinstate data held captive by ransomware. While the proposed system is based on the out-of-place write characteristic of SSDs, leveraging this feature for data recovery presents two major challenges. First, the SSD controller performs garbage collection (GC) to free up space by erasing blocks containing stale data. Since stale data may include original data "deleted" or "overwritten" by ransomware, FlashGuard must hold onto this data and prevent GC from discarding it. Holding too much stale data increases GC overhead, affecting regular storage operations and potentially reducing SSD lifespan [1, 3]. Second, the modified GC mechanism must be resistant to potential attacks from ransomware running with kernel or administrator privileges.

To tackle these challenges, we implemented FlashGuard’s data recovery system in SSD firmware, augmenting the GC mechanism to hold only data potentially deleted or overwritten by ransomware. We prototyped FlashGuard on a 1 TB programmable SSD with minimal modifications to the existing SSD design. Using a real-world set of 1,477 distinct ransomware samples covering 13 families, we demonstrated that FlashGuard can quickly recover files held by ransomware. For example, FlashGuard can restore 4 GB of encrypted data in 30 seconds. Using publicly available storage traces, we evaluated the impact of FlashGuard on storage performance, showing that it incurs negligible performance overhead (up to 6%) and has a trivial impact (less than 4%) on SSD lifespan.

To our knowledge, FlashGuard is the first defense scheme that can efficiently offset the damage of ransomware to user data, even if ransomware runs with administrator privileges to load kernel code or exploits a kernel vulnerability. The main contributions of this paper are:
- A study of over a thousand ransomware samples, providing insights into their encryption time and backup spoliation behavior.
- The proposal of FlashGuard, a ransomware-tolerant SSD with a firmware-level recovery system that leverages the inherent out-of-place write property of SSDs.
- The design and implementation of FlashGuard in a real programmable SSD, demonstrating its ability to rapidly restore encrypted data with a large set of ransomware samples.
- Extensive evaluations using acknowledged storage traces from various real-world applications, showing that FlashGuard has a negligible negative impact on storage performance and SSD lifespan.

The rest of this paper is organized as follows. Section 2 characterizes encryption ransomware. Section 3 discusses the threat model. Section 4 provides background information. Section 5 presents the design and implementation of FlashGuard, followed by its evaluation in Section 6. Section 7 discusses possible attacks against FlashGuard and their solutions. Section 8 summarizes related work. We conclude our work in Section 9.

## 2 Ransomware Study
Among various strains of ransomware, encryption ransomware is the most common type, encrypting user data and demanding money for decryption. The objective of this work is to design and develop a ransomware-tolerant SSD with data-recovery capabilities to mitigate the damage caused by encryption ransomware. To achieve this, we first analyzed the behaviors of encryption ransomware and how they interact with user data by conducting a study on a large number of ransomware samples. Unlike prior studies [19, 20, 44], our study focuses on two aspects: encryption time and backup spoliation.

### 2.1 Study Methodology
We gathered 1,477 encryption ransomware samples from VirusTotal [52] and classified them into 13 distinct ransomware families based on the ransom notes they present to victims. Table 1 illustrates these families, their encryption strategies, and the number of samples in each family.

Following common scientific guidelines [10], we executed each ransomware sample within a virtual machine (VM) running 64-bit Windows 7 SP1 with 2 CPU cores and 4 GB of main memory on a host machine configured with a 2.67 GHz Intel quad-core Xeon processor and 8 GB DRAM. We removed barriers to ransomware execution by disabling protection services such as the firewall, Microsoft security protection, and user account control. We also granted all ransomware samples administrator privileges. Since ransomware might perform key exchanges with a control server to establish encryption keys, we enabled internet access. However, to minimize the impact on the host, we used a filtered host-only adapter to control traffic. After executing each ransomware, we reverted the VM to a clean snapshot.

We conducted two experiments to measure ransomware’s encryption time and determine whether ransomware attacks backup files (e.g., Volume Shadow Copies [42]). The experimental setups are as follows:

- **Encryption Time**: We placed a set of files (9,876 files in total) following the file-type distribution in a normal user’s computer [11] in each VM. Table 2 shows the distribution of these files, covering more than 18 unique file types. We ran each ransomware sample and used a screenshot method [19] to examine their execution time. Specifically, we detected changes to the VM screen, took screenshots of the ransom notifications, and calculated the time it took for the ransomware to encrypt files and display a message. To avoid false positives, we disabled Windows notifications and manually examined each screenshot.

- **Backup Spoliation**: To determine whether ransomware targets file backups, we created and enclosed several volume shadow copies in the VMs. We deemed a ransomware sample to target backups if we observed the disappearance of these shadow copies.

### 2.2 Findings
Table 1 describes how fast ransomware encrypts data and notifies the victim with a ransom screen (the 5th column), and whether ransomware attacks file backups (the last column). According to our study, ransomware typically displays a ransom screen immediately after encryption (sometimes even before the encryption has completed).

Table 2: File distribution in a normal user’s computer.
| Type | Number of Files |
|------|-----------------|
| ...  | ...             |

(Note: The table content is truncated here. Please provide the complete data for the table.)