#5602 switched to static Visual C++ runtime, but there are issues with that:
  * The runtime is unnecessarily duplicated in `node.dll` and `electron.exe`.
  * #7281 reports that Electron-wide native exception handling is broken because exception handlers are applied per runtime instance.
  * `node.dll` exports some symbols of the runtime, and when a native node module uses the dynamic runtime, it can mistakenly bind to those symbols instead of the ones from `msvcp140` and friends. This ends up causing crashes when an object is initialized using one instance of the runtime and destroyed using the other instance.
  * Wrapper functions had to be introduced to make even Electron itself run correctly with the statically linked runtime.
The reason why it was decided to link the runtime statically was to "remove" a
dependency on the Universal CRT (UCRT). That argument is weak, because the
dependency is not actually removed, but merely UCRT is also statically linked
and duplicated. Therefore the real argument is to not have to redistribute the
UCRT binaries for non-updated Windows 7 systems and that is not a strong
enough reason to justify the above problems.
So I am suggesting we move back to linking the VC runtime dynamically and
redistribute it together with UCRT. I will prepare and submit a PR in the
coming days.