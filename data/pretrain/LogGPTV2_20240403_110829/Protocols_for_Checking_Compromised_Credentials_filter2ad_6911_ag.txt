[3] 2018. CloudFront. h(cid:138)ps://aws.amazon.com/cloudfront/.
[4] 2018. DynamoDb. h(cid:138)ps://aws.amazon.com/dynamodb/.
[5] 2018. Finding pwned passwords with 1Password. h(cid:138)ps://blog.1password.com/
(cid:128)nding-pwned-passwords-with-1password/.
[6] 2018. Have I Been Pwned: API v2. h(cid:138)ps://haveibeenpwned.com/API/v2.
[7] 2018.
Searching (cid:140)rough 500M
Pwned
h(cid:138)ps://www.troyhunt.com/
i-wanna-go-fast-why-searching-through-500m-pwned-passwords-is-so-quick/.
I Wanna Go
Fast: Why
So (cid:139)ick.
Passwords
Is
[8] 2018. Interval Tree. h(cid:138)ps://en.wikipedia.org/wiki/Interval tree.
[9] 2018. List of data breaches. h(cid:138)ps://en.wikipedia.org/wiki/List of data breaches.
[10] 2018. SECURITY UPDATE - Q2 2018. h(cid:138)ps://www.eveonline.com/article/pc29kq/
an-update-on-security-the-(cid:128)ght-against-bots-and-rmt.
[11] 2018. Twi(cid:138)er’s List Of 370 Banned Passwords. h(cid:138)p://www.businessinsider.com/
twi(cid:138)ers-list-of-370-banned-passwords-2009-12. Accessed: 2015-11-06.
[12] 2019. Crypto Nodejs. h(cid:138)ps://nodejs.org/api/crypto.html.
[13] 2019. GhostProject. h(cid:138)ps://ghostproject.fr/.
[14] 2019. Testing Firefox Monitor, a New Security Tool. h(cid:138)ps://blog.mozilla.org/
futurereleases/2018/06/25/testing-(cid:128)refox-monitor-a-new-security-tool/.
[15] 2019. Vericlouds. h(cid:138)ps://my.vericlouds.com/.
[16] 4iQ. 2018. Identities in the Wild: The Tsunami of Breached Identities Contin-
ues. h(cid:138)ps://4iq.com/wp-content/uploads/2018/05/2018 IdentityBreachReport
4iQ.pdf/.
[17] Carlos Aguilar-Melchor, Joris Barrier, Laurent Fousse, and Marc-Olivier Killijian.
2016. XPIR: Private information retrieval for everyone. Proceedings on Privacy
Enhancing Technologies 2016, 2 (2016), 155–174.
Junade Ali. 2018. Optimising Caching on Pwned Passwords (with Workers).
h(cid:138)ps://blog.cloud(cid:131)are.com/optimising-caching-on-pwnedpasswords.
Junade Ali. 2018. Validating Leaked Passwords with k-Anonymity. h(cid:138)ps://blog.
cloud(cid:131)are.com/validating-leaked-passwords-with-k-anonymity/.
[20] P. Berenbrink, T. Friedetzky, Z. Hu, and R. Martin. 2008. On weighted balls-into-
[19]
[18]
[21]
bins games. (cid:138)eoretical Computer Science 409, 3 (2008), 511–520.
1.4 Billion Clear Text Credentials Dis-
Julio Casal. Dec,
covered in a Single Database.
h(cid:138)ps://medium.com/4iqdelvedeep/
1-4-billion-clear-text-credentials-discovered-in-a-single-database-3131d0a1ae14.
2017.
[22] Hao Chen, Kim Laine, and Peter Rindal. 2017. Fast private set intersection from
homomorphic encryption. In Proceedings of the 2017 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 1243–1255.
[23] Benny Chor, Oded Goldreich, Eyal Kushilevitz, and Madhu Sudan. 1995. Private
information retrieval. In Proceedings of IEEE 36th Annual Foundations of Computer
Science. IEEE, 41–50.
[24] Anupam Das, Joseph Bonneau, Ma(cid:138)hew Caesar, Nikita Borisov, and XiaoFeng
Wang. 2014. (cid:140)e Tangled Web of Password Reuse.. In NDSS, Vol. 14. 23–26.
[25] Y. Dodis, L. Reyzin, and A. Smith. 2004. Fuzzy Extractors: How to Generate
Strong Keys from Biometrics and Other Noisy Data. In Eurocrypt 2004, C. Cachin
and J. Camenisch (Eds.). Springer-Verlag, 523–540. LNCS no. 3027.
[34]
[30]
[26] Zeev Dvir and Sivakanth Gopi. 2015. 2-server PIR with sub-polynomial com-
munication. In Proceedings of the forty-seventh Annual ACM Symposium on the
(cid:138)eory of Computing. ACM, 577–584.
[27] Steven Englehardt, Je(cid:130)rey Han, and Arvind Narayanan. 2018. I never signed up
for this! Privacy implications of email tracking. Proceedings on Privacy Enhancing
Technologies 2018, 1 (2018), 109–126.
[28] Verizon Enterprise. 2017. 2017 Data breach investigations report.
[29] Michael J Freedman, Kobbi Nissim, and Benny Pinkas. 2004. E(cid:129)cient pri-
vate matching and set intersection. In Advances in Cryptography–EUROCRYPT.
Springer, 1–19.
´Agnes Kiss, Jian Liu, (cid:140)omas Schneider, N Asokan, and Benny Pinkas. 2017.
Private set intersection for unequal set sizes with mobile applications. Proceedings
on Privacy Enhancing Technologies 2017, 4 (2017), 177–197.
[31] Vladimir Kolesnikov, Ranjit Kumaresan, Mike Rosulek, and Ni Trieu. 2016. Ef-
(cid:128)cient batched oblivious PRF with applications to private set intersection. In
Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communica-
tions Security. ACM, 818–829.
[32] Marie-Sarah Lacharit´e and Kenneth G Paterson. 2018. Frequency-smoothing
encryption: preventing snapshot a(cid:138)acks on deterministically encrypted data.
IACR Transactions on Symmetric Cryptology 2018, 1 (2018), 277–313.
[33] Yue Li, Haining Wang, and Kun Sun. 2016. A study of personal information
in human-chosen passwords and its security implications. In IEEE INFOCOM
2016-(cid:138)e 35th Annual IEEE International Conference on Computer Communications.
IEEE, 1–9.
Jerry Ma, Weining Yang, Min Luo, and Ninghui Li. 2014. A Study of Probabilistic
Password Models. In Proceedings of the 2014 IEEE Symposium on Security and
Privacy (SP). IEEE Computer Society, 689–704.
[35] Ashwin Machanavajjhala, Johannes Gehrke, Daniel Kifer, and Muthuramakrish-
nan Venkitasubramaniam. 2006. l-diversity: Privacy beyond k-anonymity. In
22nd International Conference on Data Engineering (ICDE’06). IEEE, 24–24.
[36] Catherine Meadows. 1986. A more e(cid:129)cient cryptographic matchmaking protocol
for use in the absence of a continuously available third party. In 1986 IEEE
Symposium on Security and Privacy. IEEE, 134–134.
[37] William Melicher, Blase Ur, Sean M Segreti, Saranga Komanduri, Lujo Bauer,
Nicolas Christin, and Lorrie Faith Cranor. [n.d.]. Fast, lean and accurate: Model-
ing password guessability using neural networks.
[38] A Naranyanan and V Shmatikov. 2008. Robust de-anonymization of large datasets.
In Proceedings of the 2008 IEEE Symposium on Security and Privacy, May 2008.
[39] Femi Olumo(cid:128)n and Ian Goldberg. 2011. Revisiting the computational practi-
cality of private information retrieval. In International Conference on Financial
Cryptography and Data Security. Springer, 158–172.
[40] Bijeeta Pal, Tal Daniel, Rahul Cha(cid:138)erjee, and (cid:140)omas Ristenpart. 2019. Be-
yond Credential Stu(cid:129)ng: Password Similarity using Neural Networks. IEEE
Symposium on Security and Privacy (2019).
[41] Sarah Pearman, Jeremy (cid:140)omas, Pardis Emami Naeini, Hana Habib, Lujo Bauer,
Nicolas Christin, Lorrie Faith Cranor, Serge Egelman, and Alain Forget. 2017.
Let’s Go in for a Closer Look: Observing Passwords in (cid:140)eir Natural Habitat. In
Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 295–310.
[42] Benny Pinkas, (cid:140)omas Schneider, Gil Segev, and Michael Zohner. 2015. Phasing:
Private set intersection using permutation-based hashing. In 24th {USENIX}
Security Symposium ({USENIX} Security 15). 515–530.
[43] Benny Pinkas, (cid:140)omas Schneider, Christian Weinert, and Udi Wieder. 2018.
E(cid:129)cient circuit-based PSI via cuckoo hashing. In Annual International Conference
on the (cid:138)eory and Applications of Cryptographic Techniques. Springer, 125–157.
Jennifer Pullman, Kurt (cid:140)omas, and Elie Bursztein. 2019. Protect your accounts
from data breaches with Password Checkup. h(cid:138)ps://security.googleblog.com/
2019/02/protect-your-accounts-from-data.html.
[45] Kurt (cid:140)omas, Jennifer Pullman, Kevin Yeo, Ananth Raghunathan, Patrick
Gage Kelley, Luca Invernizzi, Borbala Benko, Tadek Pietraszek, Sarvar Patel,
Dan Boneh, and Elie Bursztein. 2019. Protecting Accounts from Credential Stu(cid:130)-
ing with Password Breach Alerting. In USENIX Security Symposium. USENIX.
[46] Troy Hunt. 2018. Have I Been Pwned? h(cid:138)ps://haveibeenpwned.com/Passwords/.
[47] Ding Wang, Zijian Zhang, Ping Wang, Je(cid:130) Yan, and Xinyi Huang. 2016. Targeted
online password guessing: An underestimated threat. In Proceedings of the 2016
ACM SIGSAC conference on computer and communications security. ACM, 1242–
1254.
[48] Dan Lowe Wheeler. 2016. zxcvbn: Low-budget password strength estimation. In
Proc. USENIX Security.
Joanne Woodage, Rahul Cha(cid:138)erjee, Yevgeniy Dodis, Ari Juels, and (cid:140)omas
Ristenpart. 2017. A new distribution-sensitive secure sketch and popularity-
proportional hashing. In Annual International Cryptology Conference. Springer,
682–710.
[50] Lei Zhang, Sushil Jajodia, and Alexander Brodsky. 2007. Information disclosure
under realistic assumptions: Privacy versus optimality. In Proceedings of the 14th
ACM conference on Computer and communications security. ACM, 573–583.
[44]
[49]
Distance
0
≤ 1
≤ 2
≤ 3
≤ 4
%
1.2
1.7
2.3
3.1
4.6
Figure 11: Statistics on samples with low edit distance be-
tween username and password, as a percentage of a random
sample of 105 username-password pairs.
A CORRELATION BETWEEN USERNAME
AND PASSWORDS
In Section 3, we choose to model the username and password
choices of previously uncompromised users independently.
To check whether this assumption would be valid or not, we
randomly sampled 105 username-password pairs from the dataset
used in Section 6 and calculated the Levenshtein edit distance be-
tween each username and password in a pair. We have recorded
the result of this experiment in Figure 11.
We found that the mean edit distance between a username and
password was 9.4, while the mean password length was 8.4 char-
acters and the mean username length was 10.0 characters. (cid:140)is
supports that while there are some pairs where the password is
almost identical to the username, a large majority are not related
to the username at all.
(cid:140)e statistics on edit distance between username and password
in our dataset are similar to the statistics in the dataset used by
Wang et al. [47], who determined that approximately 1-2% of the
English-website users used their email pre(cid:128)x as their password.
(cid:140)is data does not prove that usernames and passwords are inde-
pendent. However, even if an a(cid:138)acker gains additional advantage
in the few cases where a user chooses their username as their pass-
word, the overwhelming majority of users have passwords that are
not closely related to their usernames.
B BANDWIDTH OF FSB
To calculate the maximum bandwidth used by FSB, we use the balls-
and-bins formula as described in Section 3. Each password w is
stored in |β(w)| buckets, so the total number of balls, or passwords
being stored, can be calculated as
w ∈ ˜S
|β(w)|
m = 
|B| + 
= 
≤ |W ¯q ∩ ˜S| · |B| + 
w ∈W ¯q∩ ˜S
w ∈ ˜S\W ¯q
≤ |B| · ¯q + |B| ·
w ∈ ˜S\W ¯q
1
ˆps(w ¯q) + N
(cid:24)|B| · ˆps(w)
(cid:25)
(cid:18) |B| · ˆps(w)
ˆps(w ¯q)
ˆps(w ¯q) + 1
(cid:19)
(cid:140)e (cid:128)rst equality is obtained by replacing the de(cid:128)nition of β(w); the
second inequality holds because (cid:100)x(cid:101) ≤ x + 1; the third inequality
holds because S ⊆ W .
(cid:140)e number of bins n = |B|, and m > n log n, if ¯q > log n. (cid:140)ere-
fore, the maximum bucket size for FSB would with high probability
be no more than 2 ·(cid:16)¯q +
(cid:17).
1
ˆps(w ¯q) + N|B|
C PROOF OF THEOREM (cid:137)
First we calculate the general form of the BucketGuessβFSB advan-
tage. (cid:140)en, we show that for q ≤ ¯q, Advb-gs
βFSB(q) = Advgs(q), and we
bound the di(cid:130)erence in the advantages for the games when q > ¯q.
Advb-gs
q

b
βFSB(q) =
=
u
max
w1, ...,wq
∈α(b)
q
i =1
max
w1, ...,wq
∈α(b)
b
i =1
ˆps(wi)
|βFSB(wi)|
Pr[W = wi ∧ U = u]
|βFSB(wi)|
(cid:140)e second step follows from the independence of usernames and
passwords in the uncompromised se(cid:138)ing.
We will use W ¯q to refer to the top ¯q passwords according to
password distribution ˆps = pw , and w ¯q to refer to the ¯qth most
popular password according to ˆps.
For w ∈ W ¯q, we can calculate the fraction in the summation
exactly as
ˆps(w)
|βFSB(w)| =
ˆps(w)
|B|
.
For any other w ∈ W \ W ¯q, we can bound the fraction using
the bound on the number of buckets a password is placed in.
|B| · ˆps(w)
ˆps(w ¯q) ≤ |βFSB(w)| 
ˆps(w ¯q)
ˆps(w)
|B|· ˆps(w)
ˆps(w ¯q)
ˆps(w ¯q) + 1
ˆps(w)
ˆps(w)
|βFSB(w)| are always larger for w ∈ W ¯q, the
Since the values of
values of w1, . . . , wq chosen for each bucket will be the top ¯q pass-
words overall, along with the top q − ¯q of the remaining passwords
in the bucket, ordered by
|B| · ˆps(w) + ˆps(w ¯q) =
|B| +
ˆps(·)
|βFSB(·)| .
βFSB(q),

To (cid:128)nd an upper bound on Advb-gs
ˆps(wi)
|βFSB(wi)|
|B| + (q − ¯q) ˆps(w ¯q)
ˆps(w)
|B|
≤
max
w1, ...,wq
∈α(b)
q

i =1
b
b
w ∈W ¯q
(cid:169)(cid:173)(cid:171)