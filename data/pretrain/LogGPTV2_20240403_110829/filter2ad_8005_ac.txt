History是在域迁移过程中需要使用的一个属性。如果A域中的域用户迁移到B域中，那么该用户的SID值就会改变，进而其权限也会改变。导致迁移后的用户无法访问以前可以访问的资源。SID
History的作用是在域迁移过程中保持域用户的访问权限，如果迁移后用户的SID值改变，系统会将原来的SID添加到迁移后用户的SID
History属性中，使迁移后的用户保持原有权限、能够访问其原来可以访问的资源。使用mimikatz可以将SID History属性添加到任意用户的SID
History属性中。在渗透测试中，如果获得了域管理员权限（或者等同于域管理员权限），就可以将SID History作为实现持久化的方法。
我这里更改普通用户的sid属性后成功获取了域管权限
**2.攻击检测**
windows日志4738，5136很好的记录了sid的属性变更
4765，4766应该也能检测由于笔者2012，2016的系统未产生4765，4766日志，也可以把这两个日志加上
**3.防御清除**
我们可以使用工具zbang检查是否存在有sid history的账户,这里发现了2个账户
也可以用powershell查询 这里查询的是sid以500为结尾的  
Get-ADUser -Filter ‘SIDHistory -like “ _“‘ -SearchScope Subtree -Properties
sidhistory|?{$_.sidhistory -like “_ 500”}
清除的话可以也可以使用powershell  
Get-ADUser -filter ‘sidhistory -like “ _“‘ -searchbase “cn=chz-win7test,cn=users,dc=wlaq,dc=co  
m” -searchscope subtree -properties sidhistory | foreach {Set-ADUser $
_-remove @{sidhistory=$_.sidhistory.value}}  
Get-ADUser -filter ‘sidhistory -like “_“‘ -searchbase
“cn=chz,cn=users,dc=wlaq,dc=com” -searchscope subtree -properties sidhistory |
foreach {Set-ADUser $ _-remove @{sidhistory=$_.sidhistory.value}}
也可以使用mimikatz 笔者这里已经清理过了 sid::clear /sam:win7  
###  9.AdminSDHolder
**1.攻击手法介绍**
AdminSDHolder是一个特殊的ad容器，具备一些默认安全权限，用于受保护的ad账户和组的模板 active
directory将采用AdminSDHolder对象的acl并定期将其应用于所有受保护的ad账户和组，以防止意外和无意的修改并确保对这些对象的访问是安全的
如果能够修改AdminSDHolder对象的acl，那么修改的权限将自动应用于所有受保护的ad账户和组，能够进一步进行域环境的权限维持 。  
我这里给win7账户附加了完全控制权
**2.攻击检测**
windows日志4662和5136记录了adminSDHolder对象的修改
当域对象的 ACL 被修改时，会创建一个事件 ID 为 5136 的事件,此事件包含安全描述符定义语言 (SDDL) 格式的帐户名称和
ACL。由于这对人类来说是不可读的，因此 Windows 10,ConvertFrom-SDDL4中有一个 PowerShell cmdlet ，可将
SDDL 字符串转换为更易读的 ACL 对象。ConvertFrom-SDDLstring “要解析的sddl字符串”
**3.防御清除**
可以使用zbang工具对当前环境检测是否已被留下AdminSDHolder后门
也可以使用powerview脚本检测当前环境  
Get-DomainObjectAcl adminsdholder | ?{$_.SecurityIdentifier -match
“S-1-5-21-4207138187-2036730068-1601168572-3106”} | select
objectdn,ActiveDirectoryRights |sort -Unique
清除的话可以使用powerview脚本可以移除acl，  
Remove-DomainObjectAcl -TargetSearchBase
“LDAP://CN=AdminSDHolder,CN=System,DC=wlaq,DC=com” -PrincipalIdentity win10
-Rights All -Verbose
###  10.Hook PasswordChangeNotify
**1.攻击手法介绍**
Hook PasswordChangeNotify 的作用是当用户修改密码后在系统中进行同步。  
攻击者可以利用该功能获取用户修改密码时输入的密码明文。在修改密码时，用户输入新密码后，LSA 会调用 PasswordFileter
来检查该密码是否符合复杂性要求，如果密码符合要求，LSA 会调用
PasswordChangeNotify，在系统中同步密码。通过powershell来反射注入dll，dll主要是对rassfm.dll中的PasswordChangeNotify进行了hook，修改密码后会在本地生成文件记录密码  
通过pchunter可以看到hook详情
攻击成功文件生成
代码详情
**2.攻击检测**
从sysmon日志来该行为产生了远程线程注入powershell注入lsass并且注入的的是没有模块没有功能的,并且还有个可疑行为lsass进程创建了可疑的文件
由于使用了Invoke-ReflectivePEInjection.ps1脚本进行dll反射注入该脚本收录在powersploit中，可以把powersploit,empire等powershell工具里面的一些敏感的命令功能函数进行统计监控起来，windows
4104事件记录的powershell日志可以记录powershell的脚本内容。
**3.防御清除**
这个也是对lsass加载的dll的导出函数进行了hook同样取消hook或者重启机器可以清除，可以用pchunter等ARK工具检测lsass进程是否被挂钩
###  11.DCshadow
**1.攻击手法介绍**
DCShadow攻击在具备域管理员权限条件下，攻击者可以创建伪造的域控制器，将预先设定的对象或对象属性复制到正在运行域服务器中，DCSync从域服务器复制出东西，DCShadow是将数据复制至域服务器。伪造的域控要想被域中其他DC认可，能够参与域复制，需要添加2个SPN：DRS服务（GUID为E3514235–4B06–11D1-AB04–00C04FC2DCD2）和GS（Global
Catalog）服务，通过RPC接口来完成数据复制，下图我对chz账户的description属性修改了值为shadowshadow做测试
**2.攻击检测**
要想伪造为域中的一台DC服务器，需要通过RPC在域的活动目录中注册一个NTDS-DSA（nTDSDSA）类对象。注册的位置为CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=adsec,DC=com，windows日志4662，5137可以看到该对象被创建
windows日志4742可以看到最主要的两个SPN
DRS服务（GUID为E3514235–4B06–11D1-AB04–00C04FC2DCD2）和GS（Global Catalog）服务被添加
**3.防御清除**
攻击完成后会把伪域控恢复为普通域成员主机，会删除前面添加的对象，包括nTDSDSA对象、SPN属性等，一旦发现该攻击就说明域管权限已经被攻击者拿到了，这时候就需要按照本文最后总结描述的内容去尽力清除
###  12.SeEnableDelegationPrivilege
**1.攻击手法介绍**
SeEnableDelegationPrivilege权限的作用是配置约束性委派。拥有SeEnableDelegationPrivilege权限的人可以配置任意一台主机的约束性委派，但这个权限一般情况下只有域控才有，有这个权限的用户，还需要找一个拥有spn的账户并且需要对该账户具有完全访问权限（也可以直接设置对整个域有完全访问权限），也可以是自己本身，相当于拥有这个权限的账户并且有spn以及对自己有完全访问权限，就可以随时利用该账户设置委派。
我这里通过直接修改gpttmpl.inf文件给终端添加权限。因为SeEnableDelegationPrivilege是在域控制器的本地安全策略中控制的用户权限，并通过组策略进行管理。该权限配置在本地策略中的用户权限分配，策略名为：信任计算机和用户帐户可以执行委派。域上一般默认有两个GPO：Default
Domain Policy和Default Domain Controllers
Policy，这只是他们显示的名称，他们实际名称为它们的GUID，分别为：{31B2F340-016D-11D2-945F-00C04FB984F9}和{6AC1786C-016F-11D2-945F-00C04fB984F9}，我们可以通过GPO为Default
Domain Controllers
Policy的GptTmpl.inf文件来寻找域中哪些用户（组）分配了SeEnableDelegationPrivilege，GptTmpl.inf文件位于\\SYSVOL\\Policies{6AC1786C-016F-11D2-945F-00C04fB984F9}\MACHINE\Microsoft\Windows
NT\SecEdit\GptTmpl.inf  
拥有SeEnableDelegationPrivilege权限以及对有spn账户有完全访问权限就可以随时设置委派了
**2.攻击检测**
在修改用户acl权限的过程可以看到5136日志对安全描述符的修改，4662日志WRITE_DAC也代表在对象安全描述符中修改 DACL 中的 (访问控制)
权限。4672日志显示该用户已有新特权