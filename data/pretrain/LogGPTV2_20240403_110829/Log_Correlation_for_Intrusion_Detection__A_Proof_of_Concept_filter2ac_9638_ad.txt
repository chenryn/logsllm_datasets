5
7
9
11
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
39.28%
56.04%
27.21%
32.73%
26.33%
38.45%
44.06%
25.80%
30.39%
25.41%
38.96%
56.07%
27.26%
31.31%
26.37%
38.77%
52.56%
26.45%
32.09%
25.94%
40.37%
82.04%
32.51%
43.23%
25.03%
39.66%
79.41%
31.52%
41.46%
24.52%
40.19%
79.53%
32.23%
40.35%
25.27%
40.22%
79.29%
32.01%
41.42%
24.89%
1.09%
26.00%
5.30%
10.50%
-1.30%
8.32%
1.21%
35.35%
5.72%
11.07%
-0.89%
10.49%
1.23%
23.46%
4.97%
9.04%
-1.10%
7.52%
1.45%
26.73%
5.56%
9.33%
-1.05%
8.40%
Sequence
Size
13
No Corr.
With Corr.
Diff.
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
t100
t101
t102
t103
t104
39.03%
55.91%
26.74%
31.57%
26.15%
38.79%
50.83%
26.76%
31.38%
26.15%
38.64%
51.54%
26.61%
30.80%
26.10%
39.01%
48.44%
26.23%
29.48%
26.54%
15
17
19
40.15%
83.18%
31.85%
41.03%
24.84%
40.02%
78.82%
31.89%
40.02%
24.84%
39.28%
80.56%
31.35%
39.27%
24..16%
39.13%
76.79%
30.08%
36.82%
24.25%
1.12%
27.27%
5.11%
9.46%
-1.31%
8.33%
1.23%
27.99%
5.13%
8.64%
-1.31%
8.34%
0.64%
29.02%
4.74%
8.47%
-1.94%
8.19%
0.12%
28.35%
3.85%
7.34%
-2.29%
7.47%
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:38:23 UTC from IEEE Xplore.  Restrictions apply. 
y
t
i
l
a
m
r
o
n
b
a
f
o
e
g
a
t
n
e
c
r
e
P
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
5791113151719
With correlation
No correlation
 5
 7
 9
 13
 11
Sequence Size
 15
 17
 19
5791113151719
y
t
i
l
a
m
r
o
n
b
a
f
o
e
g
a
t
n
e
c
r
e
P
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
With correlation
No correlation
 5
 7
 9
 13
 11
Sequence Size
 15
 17
 19
(a) A normal behavior trace
(b) An abnormal behavior trace
Figure 2. Percentage of abnormality in two traces, when different sequence sizes of system calls
were used to predict the next one
believe that our data mining techniques could be applied to
other IDSs to increase the accuracy of intrusion detection.
Although our results show an improvement in anomaly
detection, we also determined that the “predict the next sys-
tem call” method does not perform well for this particular
problem. Normal traces had a high level of abnormal behav-
ior to begin with, increasing the chance of false positives.
10. Future work
The results presented here are promising but more testing
needs to be done to better understand the effects of multi-log
correlation and the “predict the next system call method”.
In particular, we need to run more tests to determine the op-
timal sequence size and the optimal sliding window size for
post processing. It would also be worthwhile to test differ-
ent methods for correlation as well as test other data mining
tools (other than RIPPER). It is also important to evaluate
the use of different logs for the correlation process.
Nearly all ofﬂine-data mining projects can be enhanced
by applying stream data mining techniques. Stream data
mining involves data mining in real-time. We feel that our
work could beneﬁt from these techniques because once the
rules are generated they could be applied on-the-ﬂy.
11. Conclusions
Correlating logs to discover intrusion attacks is neces-
sary to improve the effectiveness of the intrusion detec-
tion systems. By analyzing and correlating the information
found in multiple logs, intrusion detection systems are able
to improve the effectiveness of IDS alarms. However, corre-
lating log information is not trivial. Audit logs have a large
number of entries so data mining techniques are necessary
to extract useful information from background noise.
Speciﬁcally in this paper we performed experiments to
successfully correlate data from multiple logs in a labora-
tory setting for a particular case of anomaly detection (the
Yaha virus). We report empirical results showing improved
IDS accuracy by correlating network log and system call in-
formation. Not only were we able to make abnormal traces
more abnormal, thus making intrusions easier to detect, but
we were able to decrease false positives by making normal
traces more normal.
12. Acknowledgments
This research is the result of two complementary stu-
dent group projects (Spring 2003). The authors would like
to acknowledge the hard work of student group members
who performed many of the experimental procedures de-
scribed in this paper (in alphabetical order): Andrew Ben-
nett, Phil Cipriani, Valerie Kretschmer, Mathew Miller,
Jungmin So, Yanli Tong, and Borshin Wang. Our work was
inﬂuenced by a related project involving Elizabeth Partridge
and Zhenmin Lee. We would also like to thank the follow-
ing NCSA/UIUC colleagues who made signiﬁcant indirect
intellectual contributions to this paper: Jim Barlow, Ratna
Bearavolu, Rafael Bonilla, Randy Butler, Jiawei Han, Kiran
Lakkaraju, Yifan Li, Doru Marcusiu, Hrishi Raje, Bobby
Rariden, Jeff Rosendale, and Xiaoxin Yin. Lastly, we thank
the anonymous reviewers for their helpful feedback.
References
[1] D. Barbara, J. Couto, S. Jajodia, L. Popyack, and
N. Wu. ADAM: Detecting intrusions by data min-
ing. In Proc. of the IEEE Workshop on Information
Assurance and Security, Jun. 2001.
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:38:23 UTC from IEEE Xplore.  Restrictions apply. 
[2] J. B. D. Cabrera, L. Lewis, and R. K. Mehra. Detec-
tion and classiﬁcation of intrusions and faults using
sequences of system calls. ACM SIGMOD Record,
30(4):25–34, Dec. 2001.
[15] W. Lee, S. Stolfo, and K. Mok. A data mining frame-
work for building intrusion detection models. In Proc.
of the IEEE Symposium on Security and Privacy, May
1999.
[3] W. Cohen. Fast effective rule induction. In 12th Intl.
Conference on Machine Learning (ICML’95), 1995.
[4] F. Cuppens, F. Autrel, A. Mi`ege, and S. Benfer-
hat. Correlation in an intrusion detection process. In
S ´Ecurit´e des Communications sur Internet (SECI’02),
Sep. 2002.
[5] H. Debar and A. Wespi. Aggregation and correlation
of intrusion-detection alerts. In Proc. of the 4th Intl.
Symposium on Recent Advances in Intrusion Detec-
tion (RAID’2001), Oct. 2001.
[6] D. E. Denning. An intrusion-detection model. IEEE
Trans. on Software Engineering, 13(2):222–232, Feb.
1987. Special Issue on Service Overlay Networks.
[7] D. Dittrich.
The DoS project’s “trinoo” dis-
tributed denial of service attack tool, Oct. 1999.
. (Mar. 15, 2003).
[8] S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A.
Longstaff. A sense of self for Unix processes. In Proc.
of the IEEE Symposium on Research in Security and
Privacy, pages 120–128, 1996.
[9] IBM Tivoli
intrusion manager,
2003.
. (Sep. 1, 2003).
Jun.
[10] Y. Kaplan. Api spying techniques for windows 9x, nt,
and 2000, Apr. 2000. . (Feb. 12, 2003).
[11] K. Kendall. A database of computer attacks for the
evaluation of intrusion detection systems. Master’s
thesis, MIT, 1998.
[12] G. H. Kim and E. H. Spafford. Experiences with trip-
wire: Using integrity checkers for intrusion detection.
In Proc. of the 3rd Annual System Administration, Net-
working and Security Conference (SANS III), pages
89–101, Apr. 1994.
[13] C. Kodology, R. Day, C. A. Christiansen, and J. Daly.
Data and network integrity – technology to invoke
trust in it – the tripwire solution, 2001. An IDC White
Paper.
[14] W. Lee and S. Stolfo. Data mining approaches for in-
trusion detection. In Proc. of the 7th USENIX Security
Symposium (SECURITY’98), Jan. 1998.
[16] Netforensics:
Security information management,
. (Jun. 1,
2003.
2003).
[17] neuSECURE:
Centralized
and threat management
. (Jun. 1, 2003).
security
operations
software, Aug. 2003.
[18] P. Ning, Y. Cui, and D. S. Reeves. Constructing at-
tack scenarios through correlation of intrusion alerts.
In Proc. of the 9th ACM Conference on Computer &
Communications Security, pages 245–254, Nov. 2002.
[19] S. Patton, W. Yurcik, and D. Doss. An achilles’ heel
in signature-based ids: Squealing false positives in
SNORT. In Proc. of the 4th Intl. Symposium on Re-
cent Advances in Intrusion Detection (RAID’2001),
Oct. 2001.
[20] P. A. Porras, M. W. Fong, and A. Valdes. A mission-
impact-based approach to infosec alarm correlation. In
Proc. of the 5th Intl. Symposium on Recent Advances
in Intrusion Detection (RAID’2002), pages 95–114,
Oct. 2002.
[21] T. H. Ptacek and T. N. Newsham.
Insertion, eva-
sion, and denial of service: Eluding network intrusion
detection. Technical report, Secure Networks, Inc.,
1998.
[22] L. Rohde. Yaha virus lingers into the new year, Jan.
2003. IDG News Service.
[23] Sans portal, May 2003. .
(Jun. 5, 2003).
[24] C. Silvestro.
Intrusion detection systems and
log correlation. Master’s thesis, Cefriel: Con-
sorzio per la Formazione e la Ricerca in Ingegneria
dell’Informazione, Jun. 2002.
[25] Snort: The open source network intrusion detection
system, Sep. 2003. . (Sep. 2,
2003).
[26] L. Spitzner, editor. Know Your Enemy: Revealing the
Security Tools, Tactics, and Motives of the Blackhat
Community, chapter 6. Addison-Wesley, Aug. 2001.
[27] J. Walker.
Security event correlation: Where are
we now, 2001. netIQ whitepaper. .
20,
2003).
(Aug.
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:38:23 UTC from IEEE Xplore.  Restrictions apply.