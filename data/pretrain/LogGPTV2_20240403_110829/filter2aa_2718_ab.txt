Challenges:
Challenges:
Both RTP streams must be correlated and tracked for 
Both RTP streams must be correlated and tracked for 
an individual session
an individual session
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Compressed Audio
Compressed Audio
Problems:
Problems:
Audio being transferred by RTP may be compressed
Audio being transferred by RTP may be compressed
Challenges:
Challenges:
Identification of compressed audio
Identification of compressed audio
Packets containing compressed audio must either
Packets containing compressed audio must either
Not be used
Not be used
Be decompressed, modified, and then recompressed in order 
Be decompressed, modified, and then recompressed in order 
to embed message data
to embed message data
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Media Gateway Audio Modifications
Media Gateway Audio Modifications
Problems:
Problems:
Intermediary media gateways may re-encode audio, 
Intermediary media gateways may re-encode audio, 
change the codec entirely, or otherwise modify the RTP 
change the codec entirely, or otherwise modify the RTP 
audio payload
audio payload
Challenges:
Challenges:
Identification of intermediary media gateway 
Identification of intermediary media gateway 
interference
interference
Overcome the particular type of interference
Overcome the particular type of interference
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Audio Codec Switching
Audio Codec Switching
Problems:
Problems:
Endpoints may switch audio Codecs mid-session
Endpoints may switch audio Codecs mid-session
Challenges:
Challenges:
Identifying a change in audio codec
Identifying a change in audio codec
Creating an adaptable steganographic embedding 
Creating an adaptable steganographic embedding 
method
method
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
SteganRTP
SteganRTP
My reference implementation.
My reference implementation.
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
About SteganRTP
About SteganRTP
Most awesome tool name I’ve ever created
Most awesome tool name I’ve ever created
Linux application
Linux application
Windowed curses interface
Windowed curses interface
Must be able to modify the outbound RTP 
Must be able to modify the outbound RTP 
stream’s packets
stream’s packets
Must be able to observe the inbound RTP 
Must be able to observe the inbound RTP 
stream’s packets
stream’s packets
Pair with ARP poisoning for active MITM
Pair with ARP poisoning for active MITM
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Goals
Goals
Steganography: Hide the fact that covert 
Steganography: Hide the fact that covert 
communication is taking place
communication is taking place
Full-Duplex Communications Channel
Full-Duplex Communications Channel
Compensate for unreliable transport
Compensate for unreliable transport
Transparent operation whether hooking 
Transparent operation whether hooking 
locally generated/destined packets vs. 
locally generated/destined packets vs. 
forwarded packets
forwarded packets
Simultaneous transfer of multiple types of 
Simultaneous transfer of multiple types of 
data
data
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Architecture: Endpoint
Architecture: Endpoint
Endpoint A
SteganRTP A
SteganRTP B
RTP
RTP
RTP
RTP
Endpoint B
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Architecture: MITM
Architecture: MITM
Endpoint A
SteganRTP A
SteganRTP B
RTP
RTP
RTP
RTP
Endpoint B
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Process Flow
Process Flow
Initialize
Identify RTP 
Session
Hook Packets
Read Packet
Inbound
or
Outbound
Send Packet
Extract Data
Decrypt Data
Read Data
Valid 
Checksum?
Waiting 
Outbound 
Data?
Create Steg 
Message
Encrypt Data
Embed Data
Send Packet
Packet Handler
Timeout?
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Identify RTP Session
Identify RTP Session
Using libfindrtp, one of my previous 
Using libfindrtp, one of my previous 
projects
projects
Identifies RTP sessions between two 
Identifies RTP sessions between two 
endpoints
endpoints
Identifies RTP during call setup by 
Identifies RTP during call setup by 
observing VoIP signaling traffic
observing VoIP signaling traffic
Supports RTP session identification via 
Supports RTP session identification via 
SIP and Skinny signaling protocols
SIP and Skinny signaling protocols
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Hooking Packets
Hooking Packets
Linux NetFilter Hook Points
Linux NetFilter Hook Points
Basically, an iptables rule with target QUEUE
Basically, an iptables rule with target QUEUE
NetFilter User-space Queuing Agent
NetFilter User-space Queuing Agent
API for reading, writing, or passing packets destined for 
API for reading, writing, or passing packets destined for 
the QUEUE target
the QUEUE target
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Linux NetFilter Hook Points
Linux NetFilter Hook Points
Anywhere you can insert an iptables rule:
Anywhere you can insert an iptables rule:
Locally Originated or Destined:
Locally Originated or Destined:
INPUT
INPUT
OUTPUT
OUTPUT
Packet Forwarding:
Packet Forwarding:
FORWARD
FORWARD
DNAT, SNAT, etc:
DNAT, SNAT, etc:
PREROUTING
PREROUTING
POSTROUTING
POSTROUTING
PRE-
ROUTING
FORWARD
POST-
ROUTING
Routing
Routing
OUTPUT
INPUT
Local Processes
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Hooking Packets
Hooking Packets
SteganRTP registers itself as a user-space 
SteganRTP registers itself as a user-space 
queuing agent for NetFilter via libipq
queuing agent for NetFilter via libipq
SteganRTP creates two rules in the NetFilter 
SteganRTP creates two rules in the NetFilter 
engine with targets of QUEUE:
engine with targets of QUEUE:
Matching the Inbound RTP stream at PREROUTING
Matching the Inbound RTP stream at PREROUTING
Matching the Outbound RTP stream at POSTROUTING
Matching the Outbound RTP stream at POSTROUTING
SteganRTP is then able to:
SteganRTP is then able to:
Read packets from the queue
Read packets from the queue
Modify them if needed
Modify them if needed
Place them back into the queue
Place them back into the queue
Tell the queue to accept the packet for further routing
Tell the queue to accept the packet for further routing
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Inbound Packets
Inbound Packets
Immediately accept the packet for routing
Immediately accept the packet for routing
Extract the message
Extract the message
Decrypt the message
Decrypt the message
Verify message’s checksum
Verify message’s checksum
Send message to the message handler
Send message to the message handler
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Outbound Packets
Outbound Packets
Poll for data waiting to go out
Poll for data waiting to go out
If there isn’t any, immediately forward the RTP packet 
If there isn’t any, immediately forward the RTP packet 
unmodified
unmodified
Create a new message with header based on 
Create a new message with header based on 
properties of the RTP packet
properties of the RTP packet
Read as much of the waiting data as will fit in the 
Read as much of the waiting data as will fit in the 
message
message
Encrypt the message
Encrypt the message
Embed the message into the RTP payload cover-
Embed the message into the RTP payload cover-
medium
medium
Send the RTP packet
Send the RTP packet
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Session Timeout
Session Timeout
If no RTP packets are seen for the timeout 
If no RTP packets are seen for the timeout 
period, all session information is dropped
period, all session information is dropped
Control returns to libfindrtp, which 
Control returns to libfindrtp, which 
searches for a new session
searches for a new session
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Message Handler
Message Handler
Receives all valid incoming messages
Receives all valid incoming messages
Performs internal state changes and administrative 
Performs internal state changes and administrative 
tasks in response to control messages such as:
tasks in response to control messages such as:
Echo Request
Echo Request
Echo Reply
Echo Reply
Resend of lost messages
Resend of lost messages
Prep for receiving a file
Prep for receiving a file
Closing a finished file
Closing a finished file
Receives incoming user chat data
Receives incoming user chat data
Receives incoming file data
Receives incoming file data
Receives incoming shell data
Receives incoming shell data
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Packets and Messages
Packets and Messages
Yay bits!
Yay bits!
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
RTP Packet Format
RTP Packet Format
RTP Header:
RTP Header:
    0                   1                   2                   3
0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |V=2|P|X|  CC   |M|     
|V=2|P|X|  CC   |M|     PT
PT      |       
      |       sequence number
sequence number         |
         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           
|                           timestamp
timestamp                           |
                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           synchronization source (SSRC) identifier            |
|           synchronization source (SSRC) identifier            |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |            contributing source (CSRC) identifiers             |
|            contributing source (CSRC) identifiers             |
   |                             ....                              |
|                             ....                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
RTP Payload:
RTP Payload:
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !                      
!                      Encoded Audio Data
Encoded Audio Data                       !
                       !
   .                                                               .
.                                                               .
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Message Format
Message Format
Header:
Header:
    0                   1                   2                   3
0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         
|                         Checksum / ID
Checksum / ID                         |
                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          
|          Sequence
Sequence             |      
             |      Type
Type     |    
     |    Length
Length     |
     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Message Body:
Message Body:
    0                   1                   2                   3
0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                   
|                   Value (Type-Defined Body)
Value (Type-Defined Body)                   |
                   |
   !                                                               !
!                                                               !
   .                                                               .
.                                                               .
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Message Header Fields
Message Header Fields
ID (32 bits):
ID (32 bits):
hashword( keyhash, (Seq + Type + Len) )
hashword( keyhash, (Seq + Type + Len) )
Seq (16 bits):
Seq (16 bits):
  Message Sequence Number
Message Sequence Number
Type (8 bits):
Type (8 bits):
  Message Type
Message Type
Length (8 bits):
Length (8 bits):
  Length of remaining message data
Length of remaining message data
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Message Types
Message Types
0: Reserved
0: Reserved
1: Control
1: Control
10: Chat Data
10: Chat Data
11: File Data
11: File Data
12: Shell Input Data
12: Shell Input Data
13: Shell Output Data
13: Shell Output Data
© 2007 Computer Academic Underground
© 2007 Computer Academic Underground
Message Type: Control
Message Type: Control
Message:
Message:
    0                   1                   2                   3
0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Control Type |    Length     |            Value              |
|  Control Type |    Length     |            Value              |