的估计是合理的，但他们实稳的进度
所需要的时间，并且影响到我们的工
如果额外的工作是由于没有理解所要
进行的工作，那么，经过一轮开发猫
没有达到预想的进度，在结束的那一
作量完成状况趋势，该如何处理？
环之后，你是不是能理解得更好一些？
天，结果都没有什么两样。只要团队
答：
你能多花一些时间把使用情节分解为
对所做的估计有共识。那么时间效率
首先，试图在作估计时处理
若干任务并能从中让团队成员更好地
健能补偿因高结或低份时间所带来的
掉不合理的估计，同时、记位，你应
理解所要进行的工作吗？或许，再多
影响。你不想做的事情就是不断地变
当以一个图队为基础作估计，提醒大
一要预先设计或者编写一些快速而粗略
化你的结计，努力根据开发人员的平
家，不是只为自己作估计，而是为固队
的代码，会有助于澄清细节，
均水平来估计理想的工作量——假如一
的平均开发能力作估计。如果这一据
位开发人员被封闭在一个房间中，配
不奏效，那么，记录下任务移到“正
备了计算机，并告如一个实例，那得
在进行中”区城的日期，以及把任务移
设计通常能产生更好的工作量完成状
需要多长的时间完成？然后，用开发
到“已完成”区城的目期，在开发描环
进度来调整实际的工作环境并考虑到
结束时，利用记录的信息对估计进行
况趋势，对吧？
团队的平均水平。
校正。记住，这不是为了每个因为所
花费的时间比预期长的人而感到温费，
而是为了从头校正你的估计。
日前位置
323
---
## Page 360
系统测试
系统测试必不可少····
系统必须能运行，也就意味着必须使用系统，因此，要不你必须
有专门的端到端的系统测试期，要不你让真正的用户实际地在
该系统上进行工作（即使它是一个测试版本）。不管你采用哪种
方式，你都必须在你可控制的范围内，尽可能地接近真实的环
境来测试你的系统，这称之为系统测试，它是关于真实性，而且
把系统为一个整体，面不是单个部分进行测试的。
我们已经编写了很多测试程序亲覆盖各种
条件。我们不是已经在做系能到试了吗？
到目前为止，我们一直在做单元测试。我们的测试集中在小段
代码上，每次一部分代码，同时审慎地隔离不同的系统元件以
减少关联性。这种方式对于自动化的测试套件很管用，但可能
会遗漏那些只有在系统的各元件相互作用时才发现的错误，或
者是当真实的用户开始轰炸你的系统时才会出现的错误。
这正是系统测试发挥作用的地方：把所有的系统元件整合在一
起，并且将系统作为一只黑箱子。你不是在考虑如何避免收集
无用信息，或者创建一个新的RouteFinder对象实例。相反
的，你专注于客户对系统功能提出的要求确认系统实现了
相应的功能。
系统测试在真实的环境、
黑箱子场景中，从前端到
后台应用系统的功能性
324
第9章
---
## Page 361
结束开发循环
·..但是，由谁来做系统测试？
你应该竭尽全力地组织不同的人来进行系统测试。这例不是说开发人
员不是真正聪明的人，而是专业的测试人员会给你的项目带来测试的
思想方法。
开发人员做测试
测试人员做测试
喝，没有人能发
棒根了1我的到试通过
现这个问题。附有这些额外的选
了.新的描口程序正加我计划
项用来于吗？它们把我都弄精涂了。
中的那样功能强大。
开发人员预先知道很多关于系统的知识和
测试人员能经常给项目带来耳目一新的观
底层的运作。无论开发人员如何竭尽全力
点。他们以根本不同的角度来看待系统。
地测试，在使用系统时，很难让他们像站
他们尝试找出错误，他们并不关心你的多
在最终用户的角度那样，将心比心地评价
线程的、模块化的、大规模的并行配置文
系统。开发人员一旦知道了内容，你就难
件是如何卓有成效的。他们只希望系统能
以国头。
运行。
没有愚蠢的问题
黑福的系统测试，但是，如果不可行，那么、至少，不要
让开发人员采用黑福方法测试他们自己的代码。他们对自
起一个独立的测试团队！
已代码的了解比较深，太容易避开代码中失败的部分。
不要亲自对自己的代进行系统测试！
法来进行单元测试，而让其他不用组的人员进行完整的、
你太过了解，无法在测试时你到公正。
目前位置
325
---
## Page 362
整合系统测试
系统测试取决于一个可供测试
的完整系统
如果你的开发进度相当的准确，而且你估计值也是，你应当有一轮安排
合理的开发循环。这也意味着你没有大量空闲的时间微系统测试最
重要的是，一直到开发循环结束，你才会有一个可供测试的系统。
1
王作量究成状况
1
你应该一当在做，但那是掌元
测试
—考注于振多小的系统
剩余的
构件，你湿有一个运行系统
可以提供重点、功能级利的测
工作量
试.
20
15
lo
5
温到开复继环结束，你是不可能
剩余的工作天数
有一个真正可别试的系统，系统
舍在开发过程中的每一步构速
但这不等于说你已经拥有是够的
至少，在每轮开发循环结束时，系统必须用来提供做系统测试。在开
功可以凝供实际应用了。
发循环之初，系统的功能还不完备，但它通常应具备一些已完成的使
用情节可以提供功能性测试。
没有愚囊的问题
问：
我们能早一点开始系统测试吗？
在开发德环期间，他们必频有足够的自主权来完成相应的
答：
任务，而无须担心代码要放进哪个构建版茶。构建版本会
从技术上来讲，在一轮开发循环中，你可以早一
在开发循环结束时发布
在开发循环期间就好好地保护
点开始微系统测试，但你要考虑清楚，这样微有没有益处。
好你的图队吧！
在一轮开发描环之内，开发人员经常需要对代码进行重构、
问：
分解、修复、整理和执行代码，因为要在开发循环中途交
那么，那些负责做测试的人该怎么做？他们在什
付构建版本给另外一组人，会令团队成员分心，并且导致
么时候参与进来？
不成熟的功能，你也会想要避免在开发循环期间进行错误
答：
修复的构建版本—
开发福环的时间量是团队必须对系统
安排一组独立的人员来做系统测试绝对是最好的，
做变更的用定时间量。
但是，当你的主要困队正在编写代码时，这组人应该做什
么？这是一个好问题，即使你让其他开发人员从事系统测
试，这个问题依然存在
326
第9章
---
## Page 363
结束开发循环
良好的系统测试需要两组开发循环
开发循环有助于你使团队全神贯注，仅仅处理可管理的使用情
节数量，井且让你免于因为没有与客户一起检查而导致开发项
目偏离进程。
这是银定你拥有高组维立的团队
但是，就良好的系统测试来说，你需要做同样的事情。因此，
一组负责舟代码，
，另一组负费系
要是有两轮开发循环在进行会怎样呢？
统测试。如集你的第二经是哥厦人
署，相同的原则也通用，
开发团队
测试团队
测试团队有
得环的时阅做准务，他
一轮完整的开
准备
们不新地熟易纳入求丹发
开团队势力地哥
开发循环
“1”表示
继环中的使用情节
【循环1】]
测试物环境，构速系统测
准条
展他们在第一轮
丹复姚环（，
开发继际中的工
“2”表示开
试等。
O.
夏得环2等，
开发循环
测试
测试团服送国情误报
[循环1]
在著船开发港环结束
在交付了开夏照环
2
并纳入都后续的开
时，开复团队交付本验
复得环心中.
的构建版本
开发络环的构建版本给
开始以事开发得环
2、开环3的工
开发循环
测试
3
[循环2]
的构建版本
测试
补丁修复
[循环3]
有时候，份常要一
号门的错误修正开厦
的构建版本
此时站到，测试团取用意
得环。
在运种情况下
事情在项目即特结案时。
可递行的版本、或老里程
你应读在备个丹发得
出版本，或老可道布的顾
驿内蕴交数个构建版
事
目前位置
327
---
## Page 364
测试循环的议题
越多的开发循环意味着越多的问题
系统测试最好由两个独立的团队来实施，并进行两组独立的开发循
环。但循环的数量增加财，会带来更多的问题一
这些问题还不容
易解决。
执行两组循环意味着你必须处理以下事情：
更多的沟通
现在，你不仅要处理团队内部的构通问题，还要试图使两个团队一起协同工作。
测试团队在循环过程中会碰到问题，尤其是错误的条件，而开发团队希望接着去
进行下一个使用情节的开发，而不是回复测试团队的询问。有助于解决这个问题
的方法就是从测试团队中选出一个代表作为观察员来参加你们的碰头会议。这个
代表将有机会了解每天要继续微什么、能看到开发循环进行的过程中是否在大白
板上有任何注意事项或者红色便利签。然而，记住，碰头会议是你组织的会议，
不是对错误进行优先级排序或者询问如何运行软件的时间。
测试团队正在预测开复继联（结束
时可能户生的结果，即使这时哥
情理上，测试团队常要知道
开发循环
准备
复人员正在端写代码。
舟道因队可组还不知适的一
些细节，比如情误代码、无
1
循环1
数位，AP3信息、如何设置
好境等。
在固定的开发循环周期内进行测试
如果你让两组开发循环保持同步一
那是让测试团队
跟上进度的最好方式一一你正在迫使测试适应不是太
测试
理想的时间长度。为了有助于让测试团队表达开发循环
[循环2]
国定的开发增环时用长度这使测试
中的意见，你可以让他们给你提供一个对你正在计划中
的构建版本
工作为批件母发让子用样的时的
的使用情节的测试时间估计值，即使你不利用测试时
求。但如果你有不用的因队和不用
的退度安期
这可的会确以处理，
间估计值来调整你的开发循环（记住，你受优先级的驱
动），测试时间估计值也可以让你洞悉测试团队在什么
每至不可能
地方出现了问题或者需要什么帮助才能通过艰难的开发
循环。
328
第9章
---
## Page 365
结束开发循环
开发循环
在开发的同时也进行漏洞修复
开夏团以需要把得误的
2
开发团队会在刚进入第三轮开发循环时，拿到第一轮开
舒正并入到他们的开发
挑环之中——如基有一
发循环的错误报告！然后，你要判断错误报告的重要程
个错误阻碍了测试团队，
度，是要立刻修正错误，还是并入当前的开发循环，或
都持发生付么事情：徐
是可以往后推迟。我们马上会深人地对此进行讨论，但
含做一个开发得环期闭
的构建版本吗
开发循环
直接的处理方式就是把错误当作另外一个使用情节。如
3
果必须很快解决它，只好先挤掉优先级低的使用情节。
另一种方式是你每周分出一点时间来专门用于错误的修
正。当你在做开发循环计划的时候，要将这段时间从可
用的时间中安排出来，这样你就不必担心它会影响到你
你不组一声等到全都的错
误都修正究毕：剪时候
的开发速度。例如，你可以让每个人一周利用一天的时
进一步的开差依赖于你现
漏洞修复
间（大约20%的工作财间）用于修正错误。
在就停正的一登得误。
为变动的目标编写测试程序
使用情节中的功能性—
即使已被客户认可—
一还可能发生变更，因此，很多时候，测
试工作和辛勤的劳动就投人到30天后发生变更的事情上，那是令测试人员产生很多病怒
和感觉挫折的原因。在这种情况下，你除了充分沟通外，别无它法。一且你认为事情可
能发生变化，就要及时地进行沟通。要确保测试团队清楚某些讨论正在进行或者某些内
客可能会被修订，召开一个正式的会议，说明新的功能，错误的修正以及已知的问题。
个人们经常忽略的小技巧就是为通流程如何运作。确认测试团队知道预期要发生的变更。
如果处理变更是你工作的一部分，而不是妨碍你完成工作的变更，处理变更要简单得多。
到试团队正在为离未稳定的代码
开发循环
测试
写别程序、说佳、图为客户
→
[循环2]
可能更验优无级或老定更息器
开工作在笔续进行….需使
3
图选，备轮开发储环中，功能持
用情节可能己经变更了。
的构建版本
性可能部含波收究。
目前位置
329
---