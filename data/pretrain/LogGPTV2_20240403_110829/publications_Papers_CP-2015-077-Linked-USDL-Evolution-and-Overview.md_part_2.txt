to support a web of services. When analyzing the difference of interoperability
between USDL/XML and Linked USDL/RDFS, it is clear that XML has also
a higher degree of data interoperability due to its dissemination and adoption
level. Nonetheless, RDFS is gaining popularity for knowledge modeling and its
adoption was strategic.
6 Jorge Cardoso and Carlos Pedrinaci
3.3 Data Integration
USDL/XML and USDL/Ecore specify a model that contains attributes (e.g.,
integers, longs, strings, or other structures) to which values (e.g., 232, 1.4, “ITIL
Incident Management”) are assigned. This means that the data associated with
a service instance has only an established meaning to the entity providing the
data. RDFS, on the other hand, enables to reuse data that already exists on the
web in the form of Linked Data. For example, when creating a description for the
service ITIL IM service, the company providing the service can be specified by
assigningtheuniqueURIhttp://dbpedia.org/resource/Clouderamaintained
at dbpedia.org. This URI holds a lot of data interlinked to many other data
sources. Thus, it is possible to know the number of employees, the address, the
economic sector, etc. of the service provider.
UsingUSDL/XMLandUSDL/Ecore,thestring“Cloudera”wouldbeassigned
to an attribute. Thus, its meaning would remain with the entity that provided
it. As we converge to an interconnected world of data, the integration of data
and services will be important. Thus, and when compared to USDL/XML and
USDL/Ecore, Linked USDL/RDFS incorporates Linked Data mechanisms that
are valuable to support data integration initiatives as part of a web of services.
3.4 Instance Identification
The result of describing a service with a model is an instance. For the global
tradingofservices,eachinstanceneedstobeuniquelyidentified.USDL/XMLand
USDL/Ecoreproposedtouseuniversallyuniqueidentifiers(UUID)[14].Problems
associated with this approach include the need for a central management of
identifiers and “hiding” service information, e.g., service name and provider, into
a number via an encoding mechanism. On the other hand, Linked USDL/RDFS
relies on URIs to provide a simple way to create unique global identifiers for
services. Compared to UUID, Linked USDL URIs are more adequate to service
distribution networks since they are managed locally by service providers. The
same URI, which provides a global unique identifier for a service, also serves as
endpoint to provide uniform data access to the service description. A Linked
USDL URI can be used by, e.g., RDFS browsers, RDFS search engines, and web
query agents looking for cloud service descriptions.
4 Linked USDL Family
Linked USDL6,7 is segmented into modules that together form the Linked USDL
family.Theobjectiveofthisdivisionistoreducetheoverallcomplexityofservice
modeling by enabling providers to only use the modules needed. Currently, five
modules exist but they have different maturity levels. The modules identified
6 http://www.linked-usdl.org/
7 http://github.com/linked-usdl/
Evolution and Overview of Linked USDL 7
with one star () have been developed only as a proof of concept. The modules
identified with two stars () have passed the proof-of-concept stage and are
being finalized. The modules identified with three stars () are ready and
have been validated.
– usdl-core (  ). The core module covers concepts central to a service
description. It includes operational aspects, such as interaction points that
occur during provisioning, and the description of the business entities involved.
– usdl-price (). The pricing module provides a range of concepts which
are needed to adequately describe price structures in the service industry.
– usdl-agreement (). The service level module gathers functional and non-
functional information on the quality of the service provided, e.g., availability,
reliability, and response time.
– usdl-sec (). This module aims at describing the main security properties of
a service. Service providers can use this specification to describe the security
features of their services.
– usdl-ipr (). This module captures the usage rights of a service, which are
often associated with the concept of copyright.
Forexample,theusdl-agreementmoduleisbeingreconstructedwiththeob-
jective to align it with the WS-Agreement specification. Customers and providers
can use usdl-agreement to create service level agreements to, afterwards, mon-
itor whether the actual service delivery complies with the service level agreed
terms. In case of violations, penalties or compensations can be directly derived.
Linked USDL Core can be regarded as the center of the Linked USDL family
since it ties together all aspects of service descriptions distributed across the
USDL modules. Figure 2 shows the conceptual diagram of the core module.
Classesarerepresentedwithanoval,whilepropertieswithanedge.LinkedUSDL
Corehas12classesand13properties(thereaderisreferredto[15]tounderstand
the purpose of using external vocabularies such as GoodRelations, SKOS, and
MSM).
Other modules are being developed as proofs of concept. For example, Linked
Service System USDL (LSS USDL)8 provides modeling constructs to capture
the concepts of a service system. While Linked USDL looks into the external
description of a service, i.e., a service is seen as a black box, LSS USDL looks
inside the ’box’ to describe its elements.
4.1 Standardization Efforts
Servicestandardsareexpectedtodrivetheindustrializationoftheservicemarket,
to increase transparency and access, to lead to higher trading of services across
countries, and to contribute to a new level of service innovation by aggregation
or composition. Linked USDL fills the gap by proposing a specification language
which enables the unified formalization of business and technical aspects.
8 https://w3id.org/lss-usdl/v2/
8 Jorge Cardoso and Carlos Pedrinaci
Fig. 2. Linked USDL Core schema [15]
A W3C Unified Service Description Language Incubator Group was initiated
by Attensity, DFKI, SAP, and Siemens on September 2010. The group concluded
itsactivitiesonOctober2011.Theobjectivesweretoinvestigaterelatedstandards
and approaches; re-design USDL to include feedback, requirements, and related
work, and define and implement reference test cases to validate USDL. The final
outcome was a report and a reworked USDL specification: USDL V3.0 of Table 1.
While USDL did not reach to become a W3C standard after the Incubator
Group concluded its activities, the working group agreed that creating a Linked
Data version was one of the steps forward for the possible standardization and
wider adoption. Linked USDL can evolve toward a language that can fill the gap
existing in various fields requiring service modeling such as cloud computing. In
fact,in2012,areportrequestedbytheGermanFederalMinistryofEconomicsand
Technology [5] indicated that the potential contained in USDL to model services
could be adapted to become an important contribution for cloud computing to
describe cloud services.
5 Modeling Example
The objective of this modeling exercise is to describe part of the Last.fm service
using Linked USDL. Last.fm is a music recommendation service which can be
accessed using a browser or programmatically by accessing a Web API. Only
part of the service will be described because showing the complete modeling
wouldrequireaconsiderablespace.Mostoftheinformationusedforthemodeling
Evolution and Overview of Linked USDL 9
was retrieved from the web site http://last.fm and is shown in Figure 3. The
description was written using the Turtle language9.
Fig. 3. LastFM web site description and Web API
Theclassusdl:Serviceprovidestheentrypointforthedescription.Asshown
inListing1,thenewservicewasnamedservice SLastFM.Thespecificationalso
includes:
– Associating a service model with the service.
– Specifying the business entities participating during service provisioning.
– Enumerating the interaction points provided by the service.
The class usdl:ServiceModel is used to create groupings of services that
share a number of characteristics. For example, a service model for the S-
LastFM service can group services characterized for supplying online music
services. In the same line of thought, the service “Vodafone unlimited internet
service” may belong to the grouping “Internet provisioning service”. The exam-
ple from Listing 1 associates the service service SLastFM with the grouping
onlineMusicServiceModel10(Line 4).
1 :service_SLastFM a usdl:Service ;
9 Turtle – Terse RDF Triple Language (http://www.w3.org/TR/turtle/)
10 ThedefinitionofthemodelonlineMusicServiceModelisnotprovidedinthisrunning
example.
10 Jorge Cardoso and Carlos Pedrinaci
2 dcterms:description "A semantic recommendation service for music.";
3
4 usdl:hasServiceModel :onlineMusicServiceModel ;
5 usdl:hasEntityInvolvement [
6 a usdl:EntityInvolvement ;
7 usdl:ofBusinessEntity :be_SLastFM_Ltd ;
8 usdl:withBusinessRole usdl-br:provider
9 ];.
10 usdl:hasInteractionPoint :ip_Advertise ;
11 usdl:hasInteractionPoint :ip_Artist_GetInfo .
Listing 1. The S-LastFM service class
The class usdl:EntityInvolvement captures the usdl:BusinessEntities
involved in the service delivery and the usdl:Role they play (lines 5-9). This
enablesspecifying,forinstance,thatagivenmusicserviceisprovidedbyacertain
company or that a third party is involved in the service delivery chain.
In Listing 1, the business entity is defined with the class be SLastFM Ltd and
its role is defined as usdl-br:provider. Linked USDL provides a reference tax-
onomyofbasicbusinessrolesthatcoverthemosttypicalonesencounteredduring
service modeling such as regulator, intermediary, producer, and consumer. The
prefix usdl-br identifies the taxonomy usdl-business-roles11 which defines
the default roles available.
Listing 212 illustrates the description of the company providing the S-LastFM
serviceanddescribedwiththeclassbe SLastFM Ltd.Thedescriptionincludethe
ISIC (International Standard Industrial Classification of All Economic Activities)
code for S-LastFM: 5920 – sound recording and music publishing activities. It
also specified the NAICS (North American Industry Classification System) code,
legal name, tax ID number, and country where the company is located.
1 :be_SLastFM_Ltd a gr:BusinessEntity ;
2 foaf:homepage  ;
3 foaf:logo  ;
4
5 gr:hasISICv4 "5920"^^xsd:string ;
6 gr:hasNAICS "512220"^^xsd:string ;
7 gr:legalName "SLast.fm Ltd."^^xsd:string ;
8 gr:taxID "830 2738 46"^^xsd:string ;
9
10 vcard:hasAddress
11 [ a vcard:Work ;
12 vcard:country-name "UK"@en ] .
Listing 2. Description of the business entity providing the S-LastFM service
11 http://linked-usdl.org/ns/usdl-business-roles
12 The prefixes :gr, :dcterms, :foaf, and :vcard refer to relevant vocabularies such
as GoodRelations and Dublin Core
Evolution and Overview of Linked USDL 11
The extract from Listing 1 also defines two interaction points ip Advertise
and ip Artist GetInfo for the service service SLastFM . An interaction point
(usdl:InteractionPoint)representsanactualstepinperformingtheoperations
made available by a service. On a personal level, an interaction point can model
that consumer and provider meet in person to exchange service parameters or
resources involved in the service delivery (e.g., documents that are processed by
the provider). On a technical level, this can translate into calling a web service
operation. An interaction point can be initiated by the consumer or the provider.
Listing 3 describes the interaction point ip Advertise which enables cus-
tomers to book advertising campaigns and inquire about rates and specs. Inter-
action points define four main pieces of information:
– Thecommunicationchannelsthatcustomersorapplicationscanusetointeract
with a service.
– The entities that are involved during the interaction.
– The resources that are needed for an interaction.
– The resources that are generated from an interaction.
Communication channels are additionally characterized by their interaction
type. Linked USDL provides two reference taxonomies covering the main modes
(e.g., automated, semi-automated, and manual) and the interaction space (e.g.,
on-site and remote).
The specification describes how customers can ask for information to ad-
vertise a campaign with S-LastFM. This can be done by using traditional
mail, a telephone, or email. All the communication channels require a man-
ual (usdl-it:manual) and remote (usdl-it:remote) interaction. This means