User: 如何使用Docker容器化一个PHP网站，并通过NGINX反向代理访问？请给出步骤和配置文件。
Assistant: 步骤：

1. 创建一个Dockerfile，内容如下：

```
FROM php:7.2-fpm

RUN apt-get update && apt-get install -y nginx

COPY ./nginx.conf /etc/nginx/nginx.conf
COPY ./site.conf /etc/nginx/sites-available/default
COPY ./index.php /var/www/html/

CMD service nginx start && php-fpm
```

2. 创建一个nginx.conf文件，内容如下：

```
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=fastcgi_cache:100m inactive=60m;

    upstream php {
        server 127.0.0.1:9000;
    }

    server {
        listen 80 default_server;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php;
            fastcgi_cache_bypass $http_pragma;
            fastcgi_cache_revalidate $http_cache_control;
            fastcgi_cache_valid 60m;
            fastcgi_cache_key $scheme$request_method$host$request_uri;
            fastcgi_cache_lock on;
        }
    }
}
```

3. 创建一个site.conf文件，内容如下：

```
server {
    listen 80;
    server_name localhost;
    root /var/www/html;

    index index.php;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_pass 127.0.0.1:9000;
    }
}
```

4. 创建一个index.php文件，内容如下：

```
<?php
phpinfo();
```

5. 在终端中执行以下命令：

```
docker build -t mywebsite .
docker run -p 8080:80 --name mywebcontainer mywebsite
```

其中，mywebsite是镜像名称，mywebcontainer是容器名称，8080是宿主机的端口号，80是容器内部的端口号。

6. 访问http://localhost:8080，即可看到phpinfo页面。

参考链接：https://medium.com/@christopherkade/docker-and-php-how-to-get-the-best-of-both-worlds-84622acaa349