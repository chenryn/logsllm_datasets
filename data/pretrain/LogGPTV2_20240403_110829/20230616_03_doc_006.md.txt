# PostgreSQL 实例连接访问控制

## 目标
- 概述PostgreSQL实例访问控制
- 配置pg_hba.conf文件

### 实例连接访问控制概述
实例访问控制类似于防火墙，用于管理来自不同主机和用户的数据库访问权限及验证方式。

### pg_hba.conf 文件配置
客户端认证通过一个名为`pg_hba.conf`的配置文件进行管理（HBA代表基于主机的认证）。此文件通常位于数据目录中，并在初始化数据目录时自动生成。尽管如此，您也可以将认证配置文件放置于其他位置。

#### 文件格式
- `pg_hba.conf`由一系列记录组成，每条记录占一行。空白行或以`#`开头的注释会被忽略。
- 记录中的字段使用空格或制表符分隔；若字段值被双引号包围，则可包含空格。
- 在数据库名、用户名或地址字段中引用如`all`或`replication`等关键字会使其失去特殊含义，仅匹配具有该名称的对象。

#### 名单格式
每个记录包含以下五个主要部分：
1. **TYPE**：指定连接类型
   - `local`：本地连接（Unix/Linux系统特有），使用套接字登录。
   - `host`：远程TCP/IP连接。
   - `hostssl`：需要SSL加密的远程TCP/IP连接。
2. **DATABASE**：指定允许访问的数据库
   - `all`：所有数据库。
   - `db_name`：特定数据库。
   - `replication`：主从复制时使用的连接。
3. **USER**：指定允许访问的用户
   - `all`：所有用户。
   - `user_name`：特定用户。
   - `+group_name`：用户组。
   - `@file_name`：包含用户名列表的文件。
4. **ADDRESS**：定义客户端来源
   - `127.0.0.1/32`：本地客户端。
   - `0.0.0.0/0`：任意IP地址。
   - `host_name`：具体主机名。
   - `ip_addr/net_mask`：特定IP地址或子网。
5. **METHOD**：选择认证方法
   - `trust`：无条件信任连接。
   - `scram-sha-256`：当前最安全但不支持旧版客户端。
   - `md5`：提供基本的安全性，防止密码嗅探但不防哈希泄露。
   - `password`：明文传输密码，安全性较差。
   - `ident`：依据操作系统用户身份映射到数据库用户。
   - `peer`：基于发起端的操作系统用户名验证，适用于本地连接。
   - `reject`：拒绝所有尝试。

#### 示例配置
```plaintext
# TYPE DATABASE USER ADDRESS METHOD
local all all trust
host all all 127.0.0.1/32 trust
host all all ::1/128 trust
local replication all trust
host replication all 127.0.0.1/32 trust
host replication all ::1/128 trust
host all +g1 192.168.18.0/24 md5
host all cuug 0.0.0.0/0 ident map=cuug
```

#### 冲突处理规则
当存在多条匹配规则时，按顺序应用第一条符合条件的规则。例如：
```plaintext
host testdb u1 pg-xc2 trust
host all all 192.168.18.0/24 md5
host all all 0.0.0.0/0 reject
```
这里表示：
1. 来自`pg-xc2`主机的`u1`用户可以无密码访问`testdb`数据库。
2. 来自`192.168.18.0/24`网络的所有用户必须通过MD5认证才能访问任何数据库。
3. 其他所有请求都将被拒绝。

### 总结
本章节介绍了如何利用`pg_hba.conf`文件来控制PostgreSQL实例的访问权限及认证机制。

### 练习
1. 修改`postgresql.conf`以启用CSV日志并记录连接信息。
2. 在`pg_hba.conf`中设置规则，使得所有外部IP地址都可以使用MD5认证方式访问数据库。
3. 连接到数据库并检查日志文件，确认是否正确记录了访问源的信息。