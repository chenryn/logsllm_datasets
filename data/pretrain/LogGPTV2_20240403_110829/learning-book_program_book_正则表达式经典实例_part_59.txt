与前两个正则式的类似之处是它也会匹配整个学符事，然后把它替换为你想要保留
的部分，但是由于内层的非捕获分组只会一次匹配一个单词，因此正则表达式引擎
就需要执行许多独立的步骤。当你用它来修整较短字符串的时候，性能的影响可能
并不明显，但是如果处理包含大量单词的非常长的字符事，那么这个正则式就会成
为一个性能瓶颈。
有些正则表达式实现中会包含比较聪明的优化，从而改变这里所讲解的内部匹配过程，
因此会使这里所给的方法的实际执行比我们所讲解的要更快或更慢一些。不过，使用
两个替换的简单方式总是能够对不同字符串长度和各种字符串内容提供一贯可靠的性
能，因此它总的来说是最好的全面解决方案。
参见
实例5.13。
5.13把重复的空白替换为单个空格
问题描述
作为对用户输人或者其他数据的一个清理程序，你想要把重复的空白字符都替换为单
个空格。所有的制表符、换行或其他空白都应该被替换成一个空格。
解决方案
要实现下面这些正则表达式中的任意一个，只需要把所有匹配简单替换为单个空格字
符。实例3.14中可以找到完成这样任务的代码示例。
单词、文本行和特殊字符
303
www.TopSage.com
---
## Page 320
清除任意空白字符
\s+
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
清除水平空白字符
[\t] +
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
讨论
一种常见的文本清理程序是把所有重复的空白字符都替换为单个空格。例如，在HTML
中，当要显示页面的时候，重复的空白会被简单地忽略掉（其中会有几处例外），因此
把重复空白删除会有助于减少页面文件大小，而不会带来任何负面效果。
清除任意空白字符
在这个解答中，任意的空白字符（换行、制表符、空格等）序列都会被替换为单个空
格。由于量词会重复空白字符类（s>）一次或多次，所以即使是单个的制表符字符也
会被替换为一个空格。如果你把替换成（{2,}），那么只有两个或者更多空白字符组
成的序列才会被替换。这样可能会使替换需要得较少，因此能够提高性能，但是它也
可能会造成制表符字符或者换行符被保留，而没有替换成空格字符。因此，哪种方式
更好要取决于你想要达成什么样的目标。
清除水平空白字符
这个正则表达式同上一个几乎是完全一样的，唯一的例外是它没有处理换行符。只有
制表符和空格会被替换掉。
参见
实例5.12。
5.14对正则表达式元字符进行转义
问题描述
你想要把用户提供的，或者是来自其他来源的字面字符串用作一个正则表达式中的一
部分。然而，你想要在把该字符串嵌入到正则表达式之前，将该字符串中的所有正则
表达式元字符都进行转义，这样可以避免造成不想要的后果。
304
第5章
www.TopSage.com
---
## Page 321
解决方案
如果一个字符可能会在正则表达式中拥有特殊含义，那么在它之前添加一个反斜杠，
就可以安全地使用得到的模式来匹配一个字面的字符序列。在本书讲到的所有编程语
言中，除了JavaScript之外的所有语言都包含一个内置的函数或方法，可以用来执行这
个任务（参见表5-3）。然而，为了讲解的完整性，即使在已经拥有现成解决方案的语
言中，我们也会讲解如何使用你自已的正则表达式来完成这个任务。
内置的解决方案
表5-3列出了用来解决这个问题的内置函数。
表5-3对正则表达式元字符进行转义的内置解决方案
语言
函数
C#、VB.NET
Regex.Escape(str)
Java
Pattern.quote(str)
Perl
quotemeta(str)
PHP
preg_quote(st,[delimiter])
Python
re.escape(str)
Ruby
Regexp.escape(str)
注意在这个列表中并没有包含JavaScript，因为它并不包含用于这个目的的内置函数。
正则表达式
虽然如果可能的话，读者最好还是应该使用内置的解决方案，但是你也完全可以使用
下面的正则表达式与合适的替代字符串（随后会介绍）来构造自已的解决方案。你只
需要确保会替换所有的匹配，而不是只替换第一个匹配。实例3.15中给出了把匹配替
换为一个包含向后引用的字符串的代码示例。这里需要一个向后引用来把匹配到的特
殊字符与前面添加的反斜杠一起加回到学符事中：
[[\]{}() *+？.\1S\，&#\s]
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
替代
提示
下面的替代字符事中包含一个字面的反斜杠字符。这里的字符事中没有
语言中使用字符串字面量时是必须的。关于替代文本流派的更多信息，
请参考实例2.19.
单词、文本行和特殊字符
305
www.TopSage.com
---
## Page 322
\$&
替代文本流派：.NET、JavaScript
11$&
替代文本流派：Per1
$O
替代文本流派：Java、PHP
替代文本流派：PHP、Ruby
替代文本流派：Ruby
5\
替代文本流派：Python
JavaScript函数示例
下面的代码示例会展示如何把正则表达式和替代文本用在-一起，在JavaScript中创建一
个静态的方法RegExp.escape：
RegExp.escape = function (str)(
return str.replace（/[[\]{}()*+？.\\1$\-,&#\s]/g,"\\$&");
);
//Test it out...
var str ="Hello.World?";
var escaped_str = RegExp.escape(str);
讨论
这个实例中的正则表达式把所有的正则元字符都放到一个字符类中。我们再来看一下
所有这些字符，并且探讨一下如何对它们进行转义。其中有些字符会比其他字符更加
容易处理。
[](}()
和小会用于创建字符类。（和和这样的区间量词中。因为大多数正则表达式流派在花括号不能
构成合法量词的时候，会把它们都当作字面字符，所以也可能会出现（虽然不大可能）
在没有量词的地方，因为插人了字面文本，但由于没有对逗号进行转义，从而创建了
不应该有的量词。
&
在这个列表中包括了and符号（&），因为在Java中，连续的两个and符号会被用于字
符类交集。在其他语言中，完全可以把and符号从需要转义的字符列表中去掉，但是
留下来当然也不会有问题。
#和空白
井号和空白（由匹配）只有在宽松排列选项打开的时候才是元字符。然而，对它们
转义不会带来任何问题。
在替代文本中，5个记号（《$&》、《&》、《S0）、《\0》或《g》）中的一个被用来恢
复匹配的字符，并且在前面添加一个反斜杠。在Perl中，S&实际上是一个变量，在
任何正则表达式中使用它会对所有正则表达式带来全局的性能影响。如果在你的Perl
程序的其他地方也用到$&，那么可以随意使用这个变量，因为你已经在别的地方付
出了代价。否则，最好还是把整个正则式包在一个捕获分组中，在替代中使用$1而
9
不是S&。
变体
在实例2.1中的“块转义”小节中讲到过，你可以使用QE>在正则式中创建-个块
转义序列。然而，只有Java、PCRE和Perl中才支持块转义，而且即使在这些语言中，
单词、文本行和特殊字符307
www.TopSage.com
---
## Page 324
块转义的功能也不是十分安全。为了尽量的安全，你还是应当对想要嵌人到正则式中
的字符串中任意的正进行转义。在大多数情形下，很可能还是会使用对所有正则式元
字符都转义，并且可以应用于不同语言的方法，这样更为简单。
参见
实例2.1讨论了如何匹配字面字符；其中列出的需要被转义的字符比本实例中要少，这
是因为在宽松排列模式下或是把自已放到一个更长的任意模式中的时候，它并不必考
虑可能会需要进行转义的字符。
PDG
308
第5章
www.TopSage.com
---
## Page 325
第6章
数字
正则表达式是用来处理文本的，因此它无法理解人给数字字符组成的字符串所赋予
的数字含义。对于正则表达式来说，56指的不是一个数“五十六”，而是一个学符
串中包含了两个数字字符5和6。正则引擎会知道它们是数字，因为可以使用简写
字符类d>匹配它们（参见实例2.3）。但是仅此而已。正则引擎并不知道56还拥
有更深层的含义，就好像对它来说，：-)只是可以用匹配的三个标点字
符而已。
但是数字却是你很可能要处理的一些最为重要的输人，而且有时候需要在一个正则表
达式内部来处理它们，而不是当每次需要回答像“这个数字是否属于1～100的范围之
内？”这样的问题时，总是把它们传递给某种传统的编程语言来解决。因此，我们会
用一整章的内容来讲解如何使用正则表达式匹配各种数字。一开始会介绍一些貌似微
不足道的例子，但是实际上它们讲解的是最重要的基本概念。随后的实例则会在假设
你掌握了这些基本概念的前提下，讲解更为复杂的正则表达式。
6.1整数
问题描述
你想要在一大段文本中查找各种十进制整数，或者是检查一个字符串变量中保存的是
不是一个十进制整数。
解决方案
在一大段文本中查找任意的十进制正整数：
\b[0-9]+\b
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
309
www.TopSage.com
---