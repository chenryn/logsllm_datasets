0.9
1
Computed Fractional Channel Occupance
Figure 7: CDFs of the fractional occupancy during ON slots and
OFF slots. The ﬁgure shows that the two distributions have no
overlap and hence the receiver cannot confuse ON and OFF slots.
Results. Fig. 6 shows the CDF of slot scheduling errors.
The ﬁgure shows that the median scheduling error is less
than 0.4 µs and the maximum error is 1.8 µs. Thus,
despite operating in software and with existing chipsets,
a TEP sender can accurately schedule the ON-OFF slots
at microsecond granularity.
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
Scheduling Error (in microseconds)
7.2.2 Receiver
Figure 6: CDF of TEP slot scheduling errors. The ﬁgure shows
that the maximum scheduling error is 1.8 µs which is signiﬁcantly
lower than the slot duration of 40µs.
of 21,080 square feet (1,958 m2) with both line-of-sight
and non-line-of-sight links.
7.2.1 Transmitter
The performance of TEP hinges on the transmitter accu-
rately scheduling the transmission of the ON-OFF slots.
The difﬁculty in accurate scheduling arises from the fact
that we want to implement the protocol in software using
standard 802.11 chipsets. Hence, we are limited by the
operating system and the hardware interface. For exam-
ple, if the kernel or the hardware introduces extra delays
between the slot packets, it will alter the bit sequence con-
veyed to the receiver, and will cause failures. Given that
our slot is 40µs, we need an accuracy that is on the order
of few microseconds. Can we achieve such an accuracy
with existing kernels and chipsets?
Experiment. We focus on the most challenging ON-
OFF slot sequence from a scheduling perspective: al-
ternating zeros and ones which requires the maximum
scheduling precision. We set the slot time to 40µs, by
sending a packet at the highest bitrate of 54 Mbps. To
measure the produced slots accurately, we capture the
signal transmitted by our 802.11 sender using a USRP2
software radio board [9]. Our USRP2 board can mea-
sure signal samples at a resolution of 0.16 µs, allowing
us to accurately compute the duration of the produced
slots. We run the experiment 1000 times for each sender
in our testbed and measure the exact duration of every
slot. We then compute the scheduling error as the differ-
ence between the measured slot duration and the intended
40 µs.
TEP’s security depends on the receiver’s ability to distin-
guish ON slots from OFF slots. In this section, we check
that given that the receiver is within the sender’s radio
range (i.e., can sense the sender’s signal), it can clearly
distinguish ON slots from OFF slots.
Experiment. In each run, the sender sends a sequence
of alternating ON-OFF slots, using a slot duration of
40 µs. The receiver uses a sensing window of 20µs to
measure fractional occupancy. This means the receiver
has twice as many measurements of fractional occupancy
as there are slots. As explained in §6.2, the receiver keeps
either the odd or even measurements depending on which
sequence has higher variance. Hence, for each slot, the re-
ceiver has exactly one fractional occupancy measurement.
We then compare the measured fractional occupancy for
known ON slots vs. known OFF slots to determine if the
receiver can reliably distinguish between them based on
measured fractional occupancy. We randomly pick two
nodes in the testbed to be sender and receiver, and repeat
the experiment for various node pairs in the testbed.
Results. Fig. 7 plots the CDFs of fractional occupancy
for ON slots and OFF slots. The ﬁgure shows that the two
CDFs are completely separate; that is, there is no overlap
in the values of fractional occupancy that correspond to
OFF slots and those that correspond to ON slots. Hence,
by looking at the fractional occupancy the receiver can
perfectly distinguish the ON slots from OFF slots. This
result shows that a TEP receiver based on current OSes
and 802.11 hardware can accurately decode the ON-OFF
slots necessary for the TEP protocol.
7.3 Evaluating TEP’s Performance
We are interested in how TEP interacts with cross trafﬁc
in an operational network. Cross trafﬁc does not hamper
TEP’s security (the proofs in §7.1 apply in the presence
of cross trafﬁc). However, cross trafﬁc may cause false
12
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
SIGCOMM 2011
Campus Network
 0  0.5  1  1.5  2  2.5  3  3.5  4  4.5
Burst Duration (in milliseconds)
Figure 8: CDF of the duration of energy bursts in the SIG-
COMM 2010 network and our campus network. The ﬁgure shows
that energy bursts caused by normal trafﬁc are much shorter than
a TEP synchronization packet (19 ms). Thus, it is unlikely that
TEP will confuse normal trafﬁc as a synchronization packet.
positives, where a node incorrectly declares that a TEP
message has been tampered with by an adversary. Such
events can unnecessarily delay secure pairing.
We investigate TEP’s interaction with cross trafﬁc using
results from two operational networks: the SIGCOMM
2010 network, which is a heavily congested network, and
our campus network, which is a moderately congested
network. As in §7.2, our experiments use our modiﬁed
Ath5k driver on AR5001X+ Atheros chipsets. In addition
to cross-trafﬁc on the TEP channel, both networks carried
trafﬁc on adjacent 802.11 channels.
7.3.1 Impact of Cross Trafﬁc on a Sync Packet
In TEP, a receiver detects a TEA if the medium is contin-
uously occupied for a period longer than the duration of a
synchronization packet (19 ms). We would like to check
that a receiver is unlikely to encounter false positives
while detecting synchronization packets. False positives
could occur in two scenarios: either (1) legitimate trafﬁc
includes such continuous long bursts of energy, or (2)
a TEP receiver is incapable of detecting the short DIFS
intervals that separate legitimate packets, and mistakes a
sequence of back-to-back WiFi packets as a continuous
burst of energy.5 We empirically study each case below.
Experiment 1. We ﬁrst check whether legitimate traf-
ﬁc can cause the medium to be continuously occupied
for a duration of 19 ms. We use two production net-
works: our campus network and the SIGCOMM 2010
network. Since we would like to capture all kinds of en-
ergy bursts, including collisions, we sense the medium
using USRP2 radios. USRP2s allow us to directly look
at the signal samples and hence are much more sensitive
than 802.11 cards. We used a USRP2 board to eavesdrop
on the channel on which these networks operate and log
the raw signal samples. In order to compute the length of
bursts on the channel, we need to be able to identify the
beginning of a burst and its end in an automated way. To
5A data packet and its ACK are separated by a SIFS, which is smaller
than a DIFS, but ACKs are short packets and the next data packet is
separated by a DIFS. Hence the maximum packing occurs with back-to-
back data packets without ACKs.
do so, we use the double sliding window packet detection
algorithm6 typically used in hardware to detect packet
arrivals [23]. We collected over a million packets on the
SIGCOMM network and about the same number on our
campus network. We processed each trace to extract the
energy bursts and their durations (as explained above) and
plot the CDF of energy burst durations in Fig. 8.
Result 1. The results in Fig. 8 show that all energy
bursts in both networks lasted for less than 4.3 ms, which
is much shorter than a TEP synchronization packet. In par-
ticular, the majority of energy bursts last between 0.25 ms
and 2 ms. This corresponds to a packet size of 1500 bytes
transmitted at a bit rate between 6 Mb/s and 48 Mb/s,
which spans the range of 802.11g bit rates. A few bursts
lasted for less time which are likely to be short ACK pack-
ets. Also a few bursts have lasted longer than 2 ms. Such
longer bursts are typically due to collisions. Fig. 9 illus-
trates this case, where the second packet starts just before
the ﬁrst packet ends, causing a spike in the energy level
on the channel. Soon after, the ﬁrst packet ends, causing
the energy to drop again, but the two transmissions have
already collided.7 Interestingly, the bit rates used in our
campus network are lower than those used at SIGCOMM.
This is likely because at SIGCOMM, the access point was
in the conference room and in line-of-sight of senders and
receivers, while in our campus, an access point serves
multiple ofﬁces that span a signiﬁcant area and are rarely
in line-of-sight of the access point.
Overall, the results in Fig. 8 indicate that bursts of
energy in today’s production networks have signiﬁcantly
shorter durations than TEP’s synchronization packet, and
hence are unlikely to cause false positives.
Experiment 2. The second scenario in which a node
may incorrectly detect a synchronization packet occurs
when the node confuses a sequence of back-to-back pack-
ets separated by DIFS as a single continuous energy burst.
Thus, we evaluate our prototype’s ability to distinguish
a synchronization packet from a stream of back-to-back
802.11 packets. To do so, we randomly pick two random
nodes in our testbed in Fig. 5, and make one node trans-
mit a stream of back-to-back 1500-byte packets at the
lowest rate of 1 Mbps, while the other node senses the
6The double sliding window algorithm compares the energy in two
consecutive sliding windows. If there is no packet, i.e., the two windows
are both capturing noise, the ratio of their energy is around one. Simi-
larly, if both windows are already in the middle of a packet, their relative
energy is one. In contrast, when one window is partially sliding into a
packet while the other is still capturing noise, the ratio between their
energy starts increasing. The ratio spikes, when one window is fully
into a packet while the other is still fully in the noise, which indicates
that the beginning of the packet is at the boundary between the two
windows. Analogously, a steep dip in energy corresponds to the end of
a packet [23].
7Collisions of two 1500-byte packets transmitted at 6 Mb/s may be
slightly longer than 4 ms because of the additional symbols correspond-
ing to link layer header and trailer, and the PHY layer preamble.
13
0.015
0.01
0.005
e
d
u
t
i
l
p
m
A
0
0
Collision between
two 6Mbps packets
y
i
l
i
b
a
b
o
r
P
0.6
0.4
0.2
0
200
400
600
800
1000
1200
USRP2 Sample id
1
2
3
4
Number of attempts
Figure 9: The energy pattern of the maximum energy burst in
the SIGCOMM trace. The ﬁgure indicates that such relatively long
bursts are due to collisions at the lowest bit rate of 6 Mb/s. The
other spikes correspond to packets sent at higher bit rates.
1
F
D
C
0.5
Sync packet
DIFS period
0
0.982
0.984
0.986
0.988
0.99
0.992
0.994
0.996
0.998
1
Fractional Occupancy
Figure 10: CDF of fractional occupancy measured by a receiver
for transmissions of either a synchronization packet or a sequence
of back-to-back 1500-byte packets separated by DIFS. The ﬁgure
shows a full separation between the two CDFs, indicating that a
TEP receiver does not confuse back-to-back packets as a synchro-
nization packet.
0.06
0.04
0.02
e
d
u
t
i
l
p
m
A
0
0
802.11 slot
transmissions
Collision with an actual
bluetooth device
50
100
150
200
250
300
350
400
Time Sample #
Figure 11: Energy pattern for TEA slots in the presence of a
Bluetooth device causing interference.