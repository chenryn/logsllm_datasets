title:Modeling time correlation in passive network loss tomography
author:Jin Cao and
Aiyou Chen and
Patrick P. C. Lee
Modeling Time Correlation in Passive Network
Loss Tomography
Jin Cao
Bell Labs, Alcatel-Lucent
Murray Hill, New Jersey
Aiyou Chen
Google Inc
Patrick P. C. Lee
Dept of Computer Science and Engineering
Mountain View, CA, USA
The Chinese University of Hong Kong
NJ 07974, USA
Email: PI:EMAIL
Shatin, Hong Kong
Email: PI:EMAIL
Email: PI:EMAIL
Abstract—We consider the problem of inferring link loss rates
using passive measurements. Prior inference approaches are
mainly built on the time correlation nature of packet losses.
However, passive inference generally has limited control over the
measurement process, and it is a challenging issue to adapt loss
rate inference to the impact of time correlation. We address this
issue and propose a new loss model that expresses an inferred
link loss rate as a function of time correlation. Under this loss
model with time correlation, we show its identiﬁability, and
propose a novel proﬁle-likelihood-based inference approach that
can accurately infer link loss rates for various complex topologies
(e.g., trees with many leaf branches). We validate the accuracy
of our inference approach with model and network simulations.
Index Terms—network tomography; passive loss rate infer-
ence; time correlation; measurement and monitoring techniques;
performance evaluation and assessment
I. INTRODUCTION
Network loss tomography is an important technique that
computes statistical estimates of internal loss rates of network
elements through external data trafﬁc measurements. This en-
ables operators to readily diagnose performance bottlenecks of
an operational network during the periods of high trafﬁc loads,
and hence devise better strategies for resource provisioning
and network planning. Traditional approaches of loss rate
inference use active probing, which sends probes, either in
multicast (e.g., [4], [9], [23]) or unicast (e.g., [11], [12]),
to obtain end-to-end measurements for inference. Since most
Internet routers do not enable multicast, unicast-based active
probing [11], [12] is more appealing in practice. It mainly
leverages the time correlation nature of packet losses that
is typically seen in the Internet (e.g., see analysis in [19]).
That is, neighboring packets likely experience the similar loss
behavior on the common node/link that they traverse. For
example, a router queue may be overﬂowed during conges-
tion, and this leads to consecutive losses of arriving packets
over a time window. Based on the statistical feature of time
correlation, loss inference algorithms can then be developed.
However, active probing has its own limitations, such as
introducing probing overhead and requiring collaboration of
senders and receivers to collect measurement data. Hence,
passive network tomography is proposed, such that loss infer-
ence is achieved by monitoring existing trafﬁc (e.g., using TCP
trafﬁc [6], [21], [22]) without generating probing trafﬁc. Like
unicast-based active probing, passive network tomography is
built on the time correlation nature of packet losses.
While passive network tomography is attractive,
it has
limited control over the measurement process, and this re-
sults in the degradation of the overall inference accuracy. In
particular, time correlation of packet losses is imperfect in
practice [12]. While active probing techniques can reduce the
correlation defect using stripes of probes [12], such a solution
cannot be used in passive approaches. It is expected that
if back-to-back packets have a larger time difference, then
their time correlation will decay more. However, it remains a
challenging issue of how to model the decaying property of
time correlation in loss rate inference, especially in passive
approaches where the measurement process has less control.
In this paper, we propose a passive loss rate inference
approach that accounts for different functional forms of time
correlation of packet losses. We ﬁrst model an inferred link
loss rate as a function of time correlation. Under this loss
model with time correlation, we develop an inference approach
based on the proﬁle likelihood (PL) method [18], with which
we can focus on the parameters of interest (i.e., link loss
rates to be inferred) by replacing other nuisance unknowns
with appropriate estimates. Our loss rate inference approach
is applicable in existing passive network measurement systems
and enables them to provide improved inference accuracy.
To further motivate the importance of accurate passive
loss rate inference, we consider a commercial network trafﬁc
analysis system that we know has implemented simple loss
inference techniques. The analysis system passively captures
IP trafﬁc of a wireless data network and monitors the per-
formance of the underlying network links and elements. To
illustrate, Figure 1 shows a simpliﬁed view of a wireless data
network and how the analysis system is deployed. The wireless
data network embodies a hierarchical structure, in which the
analysis system observes IP trafﬁc at a Home Agent/Foreign
Agent (HA/FA) tap point that is connected with multiple base
station controllers (BSCs), and each BSC is connected with
multiple base stations (BSes). Typically, a BSC is connected to
a large number of BSes, and the trafﬁc workload toward each
base station is generally unevenly distributed. In view of this,
we include statistically efﬁcient extensions into our baseline
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
978-1-4244-9233-6/11/$26.00 ©2011 IEEE550Analysis system
Internet
HA
FA
BSC
.
.
.
BSC
.
.
.
BS
BS
.
.
.
BS
BS
.
.
.
BS
mobile
TCP packets
TCP ACKs
p
TCP packets/ACKs
Determine the information 
of packet samples
p1
p2
...
1
2
pK
K
packet samples &
packet pairs
Our inference approach
Fig. 1. A simpliﬁed wireless data network architecture. A trafﬁc analysis
system is deployed to infer the performance of network links and elements.
Our passive inference approach is applicable for this type of trafﬁc analysis.
Fig. 2.
The TCP-based passive measurement framework for network loss
tomography. Our goal is to infer the loss rate of the common link from the
root node to the middle node. We let p and pi (i = 1, · · · , K) be the link
success rates of the common link and leaf branch i, respectively, and they
will be used in Section III.
PL-based inference approach to account for a “many-branch”
topology, in which some nodes are connected to a high degree
of branch links that may have uneven trafﬁc loads.
In summary, we make the following contributions:
• We develop a loss model that expresses loss rates as a
function of time correlation. This enables us to study
the impact of different time correlation functions on the
inference results.
• We consider different functional forms of time correla-
tion, and show that our loss model is identiﬁable as long
as the correlation is not a constant other than 1.
• Under the loss model with time correlation, we develop
a PL-based inference approach that provides accurate
estimates of link loss rates.
• We extend our PL-based inference approach for more
general topologies, including topologies with a high de-
gree of branch links and multi-level topologies.
• We verify the accuracy of our inference algorithm through
extensive model simulations in R [2] and network simu-
lation in ns2 [1].
The paper proceeds as follows. In Section II, we present a
passive TCP monitoring framework on which we develop our
inference approach. Section III models time correlation in loss
inference and discusses the identiﬁability issues. Section IV
proposes our PL-based inference approach, and Section V
discusses the extensions for general topologies. Sections VI
and VII validate our inference approach via model and net-
work simulations, respectively. We discuss related work in
Section VIII, and conclude in Section IX.
II. PASSIVE MEASUREMENTS THROUGH TCP INFERENCE
We ﬁrst introduce a basic TCP-based passive measurement
framework on which we can deploy our inference approach.
We also state the assumptions of our framework.
Figure 2 depicts the TCP-based passive measurement frame-
work [3], [6], [21], [22]. The framework observes sender-to-
receiver TCP data packets (or packets for short) and receiver-
to-sender acknowledgments (ACKs) at a measurement point.
It seeks to identify whether each packet is delivered or lost
from the sender to the receiver. Determining whether a TCP
packet is lost is based on the TCP retransmission mechanism:
if a sender successfully delivers a packet to a receiver, then
the receiver will reply a corresponding ACK; if the sender
does not receive the ACK after a timeout, then it deduces
that the packet is lost and retransmits the same packet. Thus,
intuitively, packet retransmissions can be viewed as indicators
of packet losses. Since retransmissions can also be triggered by
spurious timeouts or ACK losses in addition to packet losses,
there are also more robust approaches of inferring TCP packet
losses (e.g., see [3]).
It is important to note that our focus in this paper is not on
determining TCP packet losses, but instead we aim to leverage
the current passive inference frameworks as a platform and
enhance the accuracy of network loss tomography (i.e., infer-
ring loss rates of network elements including nodes and links).
Thus, we assume that we can correctly determine whether a
TCP packet is lost somewhere along a path by observing TCP
trafﬁc, and use this end-to-end information as the inputs to
our inference approach.
To simplify our discussion, Figure 2 depicts only a two-
level tree topology, in which TCP packets traverse along a
common link and reach one of the K leaf branches with
index i, where i = 1, 2, · · · , K. We collect packet samples
at the root node, and infer the loss rate of the common link
(on the root-to-leaf direction). While we focus on link losses,
the same methodology is also applicable to losses in nodes
(e.g., router queues). In Section V, we explain how to extend
our inference approach for general topologies. In addition,
we expect that this type of loss rate inference is deployed
in a network that is administered by a single authority, so the
topological information is available.
The framework monitors a stream of TCP packets and
ACKs over a measurement epoch. For each packet sample,
the framework obtains the following: (i) the arrival timestamp
when the measurement point observes the packet, (ii) the index
of the leaf branch that the packet will traverse, (iii) the Boolean
variable of whether a packet is lost. Such information is used
to generate packet pairs (see Section III). Both sets of single
packet samples and packet pairs will be the inputs to our
inference approach, as will be discussed in later sections.
III. PACKET PAIR LOSS MODELING
In this section, we discuss what constitutes a packet pair,
and present our loss model for these packet pairs. Our goal is
to utilize these packet pair measurements, together with single
packet measurements, to estimate link success (or loss) rates.
We demonstrate theoretically that our model parameters (suc-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
551cess/loss rates) are statistically identiﬁable. We also formally
justify how the perfect correlation assumption can introduce
bias to our estimates.
A. Packet Pair
We use the two-level tree topology in Figure 2 for our
discussion. We deﬁne a packet pair as the neighboring packets
that have inter-arrival time less than δ, where δ is a tunable
parameter, and are destined for different leaf branches. While
such a deﬁnition is more restricted than that in [11], in which
all packet pairs, whether having the same branch or not,
are considered, we will show later in Section IV that such
restrictions enable us to use a much smaller set of model
parameters to greatly simplify our loss rate estimation.
B. Loss Model
Let (U , V) be a packet pair, where U , V represent the ﬁrst
and second packets in the packet pair, respectively. We now
model the loss correlation between U and V.
As the packet pair (U , V) is destined for different leaf
branches, we can always deﬁne the sub-path before the diver-
gence of their paths as the common link, and deﬁne paths after
the divergence as new leaf links. This forms a tree topology
with two leaves. Therefore, to simplify our discussion, we
consider a two-level, two-leaf tree topology in Figure 2 (i.e.,
K = 2) to explain our model.
Let packet U be represented by a tuple (u, Yu, tu), where
u = 1, 2 is the leaf index, and Yu is the event variable that
equals 1 if the packet is received by the leaf branch (i.e.,
successful) or 0 otherwise, and tu is the arrival timestamp of
packet U observed at the measurement point. Similarly, we
use tuple (v, Yv, tv) to represent the packet V. Hence, we can
decompose Yu, Yv as
Yu = ZuXu,
Yv = ZvXv,
(1)
where Zu (resp. Zv) is the event variable that equals 1 if packet
U (resp. V) is successful on the common link and 0 otherwise,
and Xu (resp. Xv) is the event variable that equals 1 if packet
U (resp. V) is successful at the leaf link and 0 otherwise.
We assume that loss events on different links are indepen-
dent of each other, i.e., Xu and Xv are independent events
and both of them are independent of the events Zu and Zv
at the common link. We point out that the assumption of
link independence does not strictly hold in general, but the
correlation of links is weak and has limited impact on our
analysis [20], [21]. On the other hand, since Zu and Zv are
two events at the common link, they are correlated. Let
.
= tv − tu
∆u
be the difference of the arrival timestamps of the packet pair.
We assume that the success (and loss) events at the common
link form a stationary process with some correlation function
ρa(·), where a represent some unknown parameter, i.e.,
Correlation(Zu, Zv) = ρa(tv − tu) = ρa(∆u),
(2)
where 0 ≤ ρa(·) ≤ 1. It is reasonable to expect that ρa(·) is a
monotonically decreasing function, ρa(0) = 1 and ρa(∆u) =
0 as ∆u goes to inﬁnity.
Let p be the packet success rate at the common link, and
p1 and p2 be the link success rates of leaf nodes 1 and 2,
respectively (see Figure 2 with K = 2). Let sd(.) denote
the standard deviation function, and let Cov(.) denote the
covariance function. Then (2) implies that
the covariance
between Zu and Zv is:
Cov(Zu, Zv) = sd(Zu)sd(Zv)ρa(∆u) = p(1 − p)ρa(∆u).
Furthermore, using (1), we can easily show that
Cov(Yu, Yv) = p(1 − p)p1p2ρa(∆u).
(3)
Suppose that we deﬁne four possible probabilities of suc-
cess/failure events of the packet as follows:
rkl(U , V)
.
= P (Yu = k, Yv = l), k, l ∈ {0, 1}.
(4)
It is easy to show that
r11(U , V) = pp1p2(p + (1 − p)ρa(∆u)),
r10(U , V) = pp1 − r11,
r01(U , V) = pp2 − r11,
r00(U , V) = 1 + r11 − pp1 − pp2.
(5)
C. Modeling Time Correlation
Since the exact form of the time correlation function is
generally unknown in advance, it is prudent only to consider
an approximation of the function when ∆ is close to zero.
We consider the following two speciﬁc approximations of the
time correlation function when 0 ≤ ∆  0 is an unknown parameter that we want to
estimate as will be discussed in Section IV. Since the above
approximations hold for small ∆ only, we expect that they
are good enough to capture the time-decaying property of the
exact form of ρa(.) (which is unknown in general). Note that
when a = 0, the above approximations include the special
case of the perfect correlation model for all ∆ ≥ 0:
ρa(∆) = 1 (perfect correlation),
(7)
which implies that both packets in the packet pair always have
the same success/loss events. However, if we assume that the
packet pair has a perfect correlation but indeed does not, then
we show that there is a bias in the estimates (see Section III-E).
It is important to mention that the approach by [11] equiva-
lently adopts the following time correlation function for ∆ > 0
(while ρa(0) = 1):
ρa(∆) = a  0. Let ρ =
Cor(Zu, Zv) ≤ 1, where (Zu, Zv) is the unobserved suc-
cessful events on the common link in the two-leaf tree. As
N → ∞, the estimate of p in (9) has an asymptotic bias of
Bias(ˆp)
.
= ˆp − p −→
p(1 − p)(1 − ρ)
p + (1 − p)ρ
.
(10)
Hence it is easy to conclude that the relative bias for loss rate
(1 − p) is