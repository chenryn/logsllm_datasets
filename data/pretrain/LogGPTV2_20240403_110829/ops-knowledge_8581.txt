User: Imagine that you want to develop a non-trivial end-user desktop (not web) application in Python. What is the best way to structure the project's folder hierarchy?
Desirable features are ease of maintenance, IDE-friendliness, suitability for source control branching/merging, and easy generation of install packages.
In particular:

Where do you put the source?
Where do you put application startup scripts?
Where do you put the IDE project cruft?
Where do you put the unit/acceptance tests?
Where do you put non-Python data such as config files?
Where do you put non-Python sources such as C++ for pyd/so binary extension modules?
Assistant: In my experience, it's just a matter of iteration.  Put your data and code wherever you think they go.  Chances are, you'll be wrong anyway.  But once you get a better idea of exactly how things are going to shape up, you're in a much better position to make these kinds of guesses.
As far as extension sources, we have a Code directory under trunk that contains a directory for python and a directory for various other languages.  Personally, I'm more inclined to try putting any extension code into its own repository next time around.
With that said, I go back to my initial point:  don't make too big a deal out of it.  Put it somewhere that seems to work for you.  If you find something that doesn't work, it can (and should) be changed.