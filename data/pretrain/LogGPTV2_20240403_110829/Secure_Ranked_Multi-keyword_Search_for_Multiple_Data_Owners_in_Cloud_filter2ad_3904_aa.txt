title:Secure Ranked Multi-keyword Search for Multiple Data Owners in Cloud
Computing
author:Wei Zhang and
Sheng Xiao and
Yaping Lin and
Ting and
Siwang Zhou
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Secure Ranked Multi-Keyword Search for Multiple
Data Owners in Cloud Computing
Wei Zhang
Sheng Xiao
Yaping Lin∗
Ting Zhou
Siwang Zhou
College of Information Science and Engineering, Hunan University, Changsha, China
Email: {zhangweidoc, xiaosheng, yplin, zhouting, swzhou}@hnu.edu.cn
Abstract—With the advent of cloud computing, it becomes
increasingly popular for data owners to outsource their data to
public cloud servers while allowing data users to retrieve these
data. For privacy concerns, secure searches over encrypted cloud
data motivated several researches under the single owner model.
However, most cloud servers in practice do not just serve one
owner, instead, they support multiple owners to share the beneﬁts
brought by cloud servers.
In this paper, we propose schemes to deal with secure ranked
multi-keyword search in a multi-owner model. To enable cloud
servers to perform secure search without knowing the actual data
of both keywords and trapdoors, we systematically construct a
novel secure search protocol. To rank the search results and
preserve the privacy of relevance scores between keywords and
ﬁles, we propose a novel Additive Order and Privacy Preserving
Function family. Extensive experiments on real-world datasets
conﬁrm the efﬁcacy and efﬁciency of our proposed schemes.
I. INTRODUCTION
Cloud computing is a disruptive technology that is changing
the way IT hardware and software are designed and purchased
[1]. As a new model of computing, cloud computing provides
abundant beneﬁts including easy access, decreased costs, quick
deployment and ﬂexible resource management, etc. Enterprises
of all sizes can leverage the cloud to increase innovation and
collaboration.
Despite the abundant beneﬁts of cloud computing, for
privacy concerns, individuals and enterprise users are reluctant
to outsource their sensitive data, including emails, personal
health records and government conﬁdential ﬁles, to the cloud.
Because once sensitive data are outsourced to a remote cloud,
the corresponding data owners lose directly control of these
data. Cloud service providers (CSPs) would promise to ensure
owners’ data security using mechanisms like virtualization and
ﬁrewalls. However, these mechanisms do not protect owners’
data privacy from the CSP itself since the CSP possesses
full control of owners’ data, cloud hardware and software.
Encryption on sensitive data before outsourcing can preserve
data privacy against CSP. However, data encryption makes
cloud data utilization a very challenging problem.
As a fundamental and common form of data utilization,
secure search over encrypted data attracts many researchers’
interests recently. Song et al. [2] ﬁrst deﬁne and solve the
problem of secure search over encrypted data. They propose
the conception of searchable encryption, which is a cryp-
tographic primitive that enables users to perform keyword-
∗Yaping Lin is the corresponding author.
based search on an encrypted dataset just as on a plaintext
dataset. Searchable encryption is further developed by [3]-[7].
However, These schemes care mostly on single or boolean
keyword search. Extending these techniques for ranked multi-
keyword search will incur heavy computation and storage
cost. Secure search over encrypted cloud data is ﬁrst deﬁned
by Wang et al. [8] and further developed by [9]-[14]. These
researches not only reduce the computation and storage cost
for secure keyword search over encrypted cloud data, but
also enrich the category of search function, including secure
ranked keyword search, secure ranked multi-keyword search,
fuzzy keyword search and similarity search. However, all these
schemes are limited to the single-owner model where only
one data owner is allowed to outsource his data to the cloud
server. As a matter of fact, most cloud servers in practice do
not just serve one data owner, instead, they support multiple
data owners to share the beneﬁts brought by cloud servers.
Extending existed single-owner scheme to a full-ﬂedged
multi-owner scheme will cause abundant problems. In the
single-owner scheme, once a data user wants to issue a
keyword search, he has to ask the data owner for secret keys to
generate trapdoors (encrypted keywords). Unfortunately, when
there are multiple data owners, asking different data owners
for keys to generate trapdoors would be infeasible. First, not
all data owners are always online simultaneously when a data
user wants to perform a query. If data owners are ofﬂine,
these owners’ data can’t be retrieved in time. Second, in order
to search different owners’ data, data user has to generate a
speciﬁc trapdoor for each data owner, sending these trapdoors
to the cloud server would cause considerable communication
overhead. An alternative solution is to share a secret key
among all data owners. However, this measure will lead to
the security threat of single point of failure. i.e., once the
secret key is revealed by a data owner (e.g., careless key
management), other data owners’ secret key will be leaked
as well. On the other hand, none of us would be willing to
share our personal secret keys with others in practice.
In this paper, we explore the problem of secure ranked
multi-keyword search in a multi-owner cloud model. To enable
cloud servers to perform secure search without knowing the
actual value of both keywords and trapdoors, we systematically
construct a novel secure search protocol. As a result, different
data owners use different keys to encrypt
their ﬁles and
keywords. Authorized data users can issue a query without
knowing secret keys of these different data owners. To rank
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
DOI 10.1109/DSN.2014.36
DOI 10.1109/DSN.2014.36
DOI 10.1109/DSN.2014.36
276
276
276
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:58 UTC from IEEE Xplore.  Restrictions apply. 
the search results and preserve the privacy of relevance scores
between keywords and ﬁles, we propose a new Additive Order
Preserving Function, which helps cloud server return the most
relevant search results to data users without revealing any
sensitive information. Extensive experiments on real-world
datasets conﬁrm the efﬁcacy and efﬁciency of our proposed
schemes.
The main contributions of this paper are listed as follows:
• We deﬁne a multi-owner model for secure keyword
search over encrypted cloud data, which forms a closer
step to reality.
• We systematically construct a novel secure search proto-
col, which not only enables the cloud server to perform
secure ranked keyword search without knowing the actual
data of both keywords and trapdoors, but also allows data
owners to encrypt keywords with self-chosen keys and
authorized data users to query without knowing these
keys.
• We propose an additive order and privacy preserving
function family (AOPPF) which allows data owners to
protect the privacy of relevance scores using different
functions according to their preference while still permits
the cloud server to rank the data ﬁles accurately.
• We conduct extensive experiments on real-world datasets
to conﬁrm the efﬁcacy and efﬁciency of our proposed
schemes.
The rest of this paper is organized as follows. Section II
reviews the related works. Section III formulates the problem
and introduces notations used in later discussions. Section IV
introduces our proposed secure search protocol which allows
data owners to encrypt keywords using different keys and
data users to query these keywords without knowing these
keys. Section V deﬁnes AOPPF and illustrates how to use
this technique to perform privacy preserved ranked search
while differen data owners map their keyword relevance scores
with different mapping functions. Section VI presents security
analysis and discusses potential extension of the scheme
proposed in this paper. Section VII demonstrates the efﬁciency
of our proposed scheme with performance experiment results.
Section VIII concludes the paper.
II. RELATED WORK
In this section, we review three categories of work: search-
able encryption, secure keyword search in cloud computing,
and order preserving encryption.
A. Searchable Encryption
The earliest attempt of searchable encryption was made by
Song et al.. In [2], they propose to encrypt each word in a ﬁle
independently and allow the server to ﬁnd whether a single
queried keyword is contained in the ﬁle without knowing
the exact word. This proposal is more of theoretic interests
because of high computational cost. Goh et al. propose to
build a keyword index for each ﬁle and use Bloom ﬁlter to
accelerate the search [3]. Curtmola et al. propose to build
indices for each keyword and use hash tables as an alternative
277277277
approach of searchable encryption [4]. The ﬁrst public key
scheme for keyword search over encrypted data is presented
in [5]. [6] and [7] further enrich the search functionalities of
searchable encryption by proposing schemes for conjunctive
keyword search.
The searchable encryption cares mostly on single keyword
search or boolean keyword search. Extending these techniques
for ranked multi-keyword search will incur heavy computation
and storage cost.
B. Secure Keyword Search in Cloud Computing
The privacy concerns in cloud computing motivate the study
on secure keyword search. Wang et al. ﬁrst deﬁned and solved
the secure ranked keyword search over encrypted cloud data.
In [8], they proposed a scheme that returns top-k relevant ﬁles
upon a single keyword search. [9] and [10] extended the secure
keyword search for multi-keyword queries. Their approaches
vectorize keywords list and apply matrix multiplications to
hide the actual keyword information from the cloud server,
while still allow the server to ﬁnd out the top-k relevant
data ﬁles. Xu et al. proposed MKQE (Multi-Keyword ranked
Query on Encrypted data) that enables a dynamical keyword
dictionary and avoids the ranking order being distorted by
several high frequency keywords [11]. Li et al. [12] and Chuah
et al. [13] proposed fuzzy keyword search over encrypted
cloud data aiming at
tolerance of both minor typos and
format inconsistencies for user’s search input. Wang et al. also
proposed a privacy-assured similarity search mechanism over
outsourced cloud data [14]. To improve the search efﬁciency,
they further proposed to construct a multi-way trie-tree for
storing the similarity keyword elements. All similar keywords
in the trie-tree can be efﬁciently located by a depth-ﬁrst search.
The system models of these previous works only consider a
data owner, which implies that in their solutions, the data own-
er and data users can easily communicate and exchange secret
information. When numerous data owners are involved in the
system, secret information exchanging will cause considerable
communication overhead. This paper differs from previous
studies for the emphasis of multiple data owners in the system
model. This paper seeks solution scheme to maximally relax
the requirements for data owners and users, so that the scheme
could be suitable for a large number of cloud computing users.
Moreover, experiment results show that the proposed scheme
is highly efﬁcient and practical.
C. Order Preserving Encryption
The order preserving encryption is used to prevent the cloud
server from knowing the exact relevance scores of keywords
to a data ﬁle. The early work of Agrawal et al. proposed
an Order Preserving symmetric Encryption (OPE) scheme
where the numerical order of plain texts are preserved [15].
Boldyreva et al. further introduce a modular order preserving
encryption in [16]. These OPE schemes cannot be directly
used in our proposed scheme because we allow data owners to
use different order preserving mappings to protect the privacy
of their relevance scores. Enlightened by Yi et al.’s work,
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:58 UTC from IEEE Xplore.  Restrictions apply. 
(QFU\SWHG
GDWDLQGH[
(QFU\SWHG
GDWDLQGH[
H
S W
\
U
F
D  L Q
G
G
[
H
( Q
W
D
G
'DWD
2ZQHUV
6HPLWUXVWHG
&ORXG6HUYHUV
'DWDGHFU\SWLRQNH\V
V
W
X O
H
V
T
H
X
U
U
H
K 
N
F
W
H
G
Q
6 H
U
D
5 D
6HDUFKUHTXHVW
5DQNHGUHVXOW
6HDUFKUHTXHVW
5DQNHGUHVXOW
'DWD
8VHUV
Fig. 1: Architecture of secure keyword search in multi-owner
multi-user cloud environment
which proposes an order preserving function to encode data
in sensor networks [17], we proposes a new family of order
and privacy preserving functions, namely additive order and
privacy preserving functions (AOPPF). Data owners can freely
choose any function from an AOPPF family to encode their
relevance scores. The cloud server is still able to add and
compare the relevance scores and then rank the search results.
III. PROBLEM FORMULATION
In this section, we present a formal description for the target
problem in this paper. We ﬁrst deﬁne a system model and
a corresponding threat model. Then we elucidate the design
goals of our solution scheme and a list of notations used in
later discussions.
1) System Model: In our multi-owner and multi-user cloud
computing model, three entities are involved, as illustrated in
Fig.1, they are data owners, cloud server and data users. Data
owners have a collection of ﬁles F. To enable efﬁcient search
operation on these ﬁles which will be encrypted, data owners
ﬁrst build a secure searchable index I on the keyword set
W extracted from F. Then data owners encrypt their ﬁles
F and get the corresponding encrypted ﬁles C. Finally both
encrypted ﬁles and indexes are outsourced to the cloud server.
Once an authorized user wants to search t keywords over
these encrypted ﬁles stored on cloud servers, he ﬁrst computes
the trapdoor T and sends it to the cloud. Upon receiving
the trapdoor T , cloud server searches the encrypted index
I of each data owner and returns the corresponding set of
encrypted ﬁles. To improve the ﬁle retrieval accuracy and save
communication cost, data user would tell the cloud server a
parameter k and cloud server would return the top-k relevant
ﬁles to data user. Once data user receives the top-k encrypted
ﬁles from cloud server, he will decrypt these returned ﬁles.
Note that how to authorize a data user and how to achieve
decryption capabilities are out of the scope of this paper, some
excellent work to this problem can be found in [18] and [19]
respectively.
We will introduce our secure search protocol in two phases,
For the ﬁrst phase, we introduce how to locate different-
key encrypted keywords among multi owners. For the second
phase, we describe how to rank the encrypted relevance score
among different owners and return top-k relevant ﬁles in a
privacy preserving way. The whole system consists of six
algorithms described as follows:
encrypt both ﬁles and keywords.
• Keywords Encryption: In order to facility the data user
to search over encrypted ﬁles of different data owners,
keywords encryption should be carefully designed, each
data owner will use a secrect key to encrypt his keywords.
• BuildIndex: In information retrieval, inverted index (of-
ten regarded as a posting ﬁle) is commonly adopted as
indexing structure. An inverted index stores a list of
mappings from keywords to their corresponding set of
ﬁles that contain this keyword [8], [20]. In our system,
each data owner will build its own index.
• Trapdoor Generation: Authorized data user can gener-
• KeyGen: Data owners use KeyGen to generate keys to
ate his trapdoor based on his interested keywords.
• Locate Keywords: The cloud server will ﬁrst
locate
keywords among different ﬁles of different data owners
when he receives trapdoor from data user.
• Rank Relevance scores: After cloud server located the
queried keywords, a list of candidate ﬁles are ready,
then the cloud ranks the relevance scores of the queried
keywords to these ﬁles, ﬁnally, the cloud returns the top-k
relevant ﬁles to the data user.
In this paper, For easy description, we describe {KeyGen,
Keywords Encryption, Trapdoor Generation, Locate Keyword-
s} in section IV, and {BuildIndex,Rank Relevance scores} in
section V.
2) Threat Model: In our threat model, both data owners and
authorized data users are trusted. However, the cloud server
is not trusted. Instead, we treat the cloud server curious but
honest which is the same with previous works [8], [9], [11],
[14]. The cloud server follows our proposed protocol, but it’s
eager to obtain the contents of encrypted ﬁles, keywords and
relevance scores. Further, we assume data owners are divided
into groups. A group of people hope to use the cloud server to
share ﬁles. Each person in this group would generate data ﬁles
and perform ranked multi-keyword search over the ﬁles stored
on cloud. They do not want the cloud to perceive their data or
their queries. So the group of people share a secret knowledge
of a hash functions, Hs(·) while the cloud server does not
know this hash function. When data owner Oi generates a
keyword, he ﬁrst uses Hs(·) to process his keyword. Without
knowing Hs(·), The cloud can’t imitate data users to submit
queries over data owners’ data stored on the cloud. Details