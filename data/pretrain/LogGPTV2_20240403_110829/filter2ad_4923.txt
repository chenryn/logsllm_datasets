title:Using replicated execution for a more secure and reliable web browser
author:Hui Xue and
Nathan Dautenhahn and
Samuel T. King
Using	
  Replicated	
  Execu2on	
  for	
  a	
More	
  Secure	
  and	
  Reliable	
  Browser	
Hui	
  Xue,	
  Nathan	
  Dautenhahn,	
  Sam	
  King	
University	
  of	
  Illinois	
  at	
  Urbana	
  Champaign	
Browsers:	
  Important	
  App	
  PlaJorms	
•  Email,	
  Banking,	
  Shopping,	
  Social	
  network…	
2	
Browsers	
  Are	
  Not	
  Safe	
•  Browsers	
  are	
  plagued	
  with	
  vulnerabili2es	
– Internet	
  Explorer:	
  59	
  new	
  vulnerabili2es	
  in	
  2010	
– Firefox:	
  100	
  new	
  vulnerabili2es	
  in	
  2010	
– Safari:	
  119	
  new	
  vulnerabili2es	
  in	
  2010	
– Chrome:	
  191	
  new	
  vulnerabili2es	
  in	
  2010	
•  ASackers	
  target	
  browsers	
– Studies	
  from	
  Washington,	
  MicrosoU,	
  and	
  Google	
3	
Firefox	
  Browser	
  Exploit	
  Example	
•  Firefox	
  3.0.x	
  malicious	
  popup	
  by	
  CVE-­‐2009-­‐3076	
4	
Opera:	
  Exploit	
  Fails	
•  Opera	
  shows	
  no	
  popup	
5	
Reason:	
  Browser	
  Speciﬁc	
  Vulnerabili2es	
•  Diﬀerent	
  browsers	
  diﬀerent	
  code	
  bases	
•  The	
  same	
  bug	
  oUen	
  only	
  in	
  one	
  browser	
6	
Cocktail:	
  Mixing	
  Browsers	
  For	
  BeSer	
Security	
7	
Overview	
•  Example	
•  Observa2on	
•  Design	
– Non-­‐determinism	
•  Implementa2on	
•  Evalua2on	
•  Conclusion	
8	
How	
  Cocktail	
  Works:	
  Example	
HTTP	
  GET	
HTTP	
  GET	
a.com/
img.png	
✓	
a.com/
img.png	
request	
img.png	
“a.com”	
server	
click	
click	
click	
Proxy	
9	
How	
  Cocktail	
  Works:	
  Example	
click	
Qt	
  DISPLAY	
click	
click	
HTTP	
  GET	
response
img.png	
HTTP	
  GET	
response
img.png	
HTTP	
  GET	
response
img.png	
a.com/
img.png	
✓	
a.com/
img.png	
Proxy	
request	
img.png	
response
img.png	
“a.com”	
server	
10	
Withstanding	
  False	
  Posi2ve/ASack	
click	
click	
Qt	
  DISPLAY	
click	
HTTP	
  GET	
response
img.png	
HTTP	
  GET	
response
img.png	
HTTP	
  GET	
a.com/
img.png	
✓	
a.com/
img.png	
a.com/
ques2on.png	
Proxy	
request	
img.png	
response
img.png	
“a.com”	
server	
11	
Observa2on：Opportunis2c	
  N-­‐Version	
Programming	
Diﬀerent	
  code	
  base	
+	
DOM	
Same	
  speciﬁca2on	
  “roughly”	
  followed	
12	
How	
  to	
  Compare	
  Diﬀerent	
  Browsers?	
•  States	
  to	
  compare:	
  display	
  +	
  network	
– Display:	
  vision	
  based	
  page	
  layout	
  abstrac2on	
•  Interac2on	
  with	
  server	
•  Client	
  side	
  non-­‐determinism	
13	
Challenge:	
  Interac2on	
  with	
  Server	
•  Pages	
  from	
  server	
  can	
  be	
  diﬀerent	
A	
B	
C	
“a.com”	
server	
14	
Request	
  Duplica2on	
  Is	
  Bad	
•  Time	
  diﬀerence	
– Page	
  get	
  updated	
•  Post	
  requests	
– Output	
  commit	
15	
Solu2on	
•  Avoid	
  major	
  changes	
  to	
  browser	
– Browsers	
  self-­‐update	
  is	
  easy	
– Open	
  source	
  is	
  not	
  required	
•  Solu2on:	
  proxy	
  replica2on	
– Replicate	
  incoming	
  network	
  data	
  with	
  proxy	
•  HTTPS	
  handling:	
  Man-­‐in-­‐the-­‐middle	
16	
Solu2on:	
  Proxy	
  Replica2on	
•  One	
  browser	
  as	
  seen	
  by	
  server	
Page	
A	
Proxy	
a.com	
server	
Page	
A	
Page	
A	
Page	
A	
17	
Challenge:	
  Client	
  Side	
  Non-­‐determinism	
•  Same	
  page	
  content,	
  diﬀerent	
  execu2on	
  result	
…	
…	
18	
Client	
  Non-­‐determinism	
  Summary	
•  Script	
  related	
  randomness	
Random	
  Number	
Date	
  and	
  Time	
Math.random()	
new	
  Date()	
Browser	
  Speciﬁc	
  Value	
window.opera;	
  navigator.appName	
Browser	
  Locale	
…	
“en-­‐us”	
  VS	
  “en-­‐US”……….	
...	
•  Browser	
  speciﬁc	
  behaviors	
– E.g.,	
  Opera	
  community	
19	
Solu2on	
•  Extension	
  modiﬁes	
  script	
  execu2on	
– Overwrites	
  Math,	
  Date,	
  window.opera	
Cocktail	
Extension	
Firefox	
Cocktail	
Extension	
Opera	
Cocktail	
Extension	
Chrome	
•  Browser	
  conﬁgura2on	
  change	
– Disable	
  Opera	
  community	
– Adjust	
  browser	
  locale	
20	
False	
  Posi2ve	
•  Browsers	
  treat	
  malformed	
  URL	
  diﬀerently	
21	
Why	
  Cocktail	
  Is	
  More	
  Secure	
•  Vo2ng	
  ==	
  Security	
•  Withstand	
  some	
  F.P.	
–  Only	
  need	
  2	
to	
  proceed	
•  Ext.	
  to	
  eliminate	
non-­‐determinism	
•  Looks	
  like	
  a	
  good	
  one	
Acts	
  like	
  a	
  good	
  one	
It	
  is	
  one	
  uncompromised	
browser	
Ckt	
Ext	
Ckt	
Ext	
Ckt	
Ext	
DISPLAY	
Vo2ng	
Proxy	
22	
Implementa2on	
•  UI	
  replica2on	
– Recorder	
  and	
  replayer:	
  Extension	
– Passing	
  UI	
  events	
  across	
  browsers:	
  Proxy	
•  UI	
  Display	
  capturing	
  and	
  vo2ng	
– ImageMagick	
  and	
  OpenCV	
•  Proxy	
– OpenSSL	
  for	
  MITM	
23	
Evalua2on	
•  Security	
  analysis	
– User	
  interac2on:	
  CVE-­‐2009-­‐3076	
– Heap	
  overﬂow:	
  CVE-­‐2009-­‐2477	
– DOS	
  aSack:	
  Firefox	
  3.0.4	
  DOS,	
  April	
  2009	
– Same	
  origin	
  policy	
  bypassing:	
  CVE-­‐2007-­‐0981	
•  Performance	
– 30%	
  slower	
  comparing	
  to	
  Firefox	
24	
Conclusion	
•  Mixing	
  diﬀerent	
  browsers	
  for	
  beSer	
  security	
– Prac2cal	
  N-­‐Version	
  programming	
  for	
  browsers	
– Solu2ons	
  for	
  design	
  challenges	
– Security	
  shiUed	
  to	
  thin	
  layer	
  instead	
  of	
  big	
soUware	
25	
Thank you! 
•  Q/A	
•  Hui	
  Xue	
  (PI:EMAIL)	
hSps://neJiles.uiuc.edu/huixue2/www/	
26	
Window	
  of	
  Exposure	
27