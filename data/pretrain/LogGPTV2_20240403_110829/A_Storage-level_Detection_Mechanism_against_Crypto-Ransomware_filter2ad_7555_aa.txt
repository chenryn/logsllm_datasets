# Title: A Storage-level Detection Mechanism against Crypto-Ransomware

## Authors:
- Joon-Young Paik, Tianjin Polytechnic University, PI:EMAIL
- Joong-Hyun Choi, Chungnam National University, PI:EMAIL
- Rize Jin, Tianjin Polytechnic University, PI:EMAIL
- Jianming Wang, Tianjin Polytechnic University, PI:EMAIL
- Eun-Sun Cho, Chungnam National University, PI:EMAIL

## Abstract
Ransomware poses a significant threat to both individuals and organizations. The emergence of ransomware that exploits kernel vulnerabilities presents a serious detection challenge. In this paper, we propose a novel ransomware detection mechanism at the storage device level, particularly for flash-based storage devices. Our approach involves designing a new buffer management policy that enables our detector to identify ransomware behaviors. Our mechanism can detect realistic ransomware samples with minimal negative impacts on the hit ratios of the buffers located within the storage device.

## CCS Concepts
- Security and privacy â†’ Malware and its mitigation

## Keywords
- Security
- Ransomware
- Buffer
- Storage devices

## 1. Introduction
Crypto-ransomware, or simply ransomware, is a type of malware that encrypts data on a victim's computer and demands payment for decryption. In recent years, ransomware has posed a serious threat to individuals, organizations, and industries. For example, the WannaCry attack in 2017 caused $4 billion in damages by infecting 300,000 machines.

Most ransomware defense strategies exploit the behavior of ransomware, such as a large number of read, write, and delete requests to storage devices during file encryption, and the degree of congestion of file content before and after encryption. These strategies are typically implemented at the host system level. However, they are vulnerable to ransomware (e.g., Locky) that can exploit kernel privileges to disable host-level detectors.

In this paper, we propose a storage-level detection mechanism that includes a ransomware-aware buffer management policy and a ransomware detector. This mechanism is robust against ransomware that exploits kernel privileges. The new buffer management policy is designed to exploit the intensive read and write patterns during file encryption attacks. The proposed detector collaborates with internal buffers in the storage device to detect ransomware attacks.

The rest of this paper is organized as follows:
- Section 2 explains our storage-level ransomware detection mechanism.
- Section 3 reports the experimental results and discusses the limitations of our proposal.
- Section 4 concludes the paper.

## 2. Ransomware Detection Using Buffers in Storage Devices

### 2.1 Ransomware
Ransomware locks valuable user files by encrypting them using symmetric encryption/decryption algorithms, such as the Advanced Encryption Standard (AES). File encryption requires a large number of requests to storage devices. Ransomware can be categorized into three types based on request patterns [3]:
- **Type I**: Overwrites the original file with encrypted data.
- **Type II**: Creates and writes a new encrypted file after reading the original file, then erases the original file without file wiping.
- **Type III**: Similar to Type II, but with file wiping.

We focus on detecting Type I ransomware, such as the notorious Cryptolocker variants. Figure 1 illustrates the typical execution flow of a file being locked by Type I ransomware. After the original (victim) file is read, the file data are encrypted by the ransomware algorithm, and the file is overwritten with the encrypted data.

![Figure 1: Example of read and write requests by Ransomware Type I](figure1.png)

In storage devices that cannot handle high-level information about ongoing data (e.g., file name, size, type), Type I ransomware is revealed by accessing the same addresses as the original data.

### 2.2 Storage-Level Ransomware Detection Mechanism
Our goal is to enable a storage device to detect file encryption attacks by Type I ransomware. This approach makes the detection mechanism robust against ransomware that exploits kernel vulnerabilities. We use the repetitive overwriting-following-reading access pattern of the same addresses. Flash-based Solid State Drives (SSDs) are considered the most appropriate type of storage device for this purpose due to their faster response times and more powerful processors compared to traditional hard disk drives (HDDs).

#### 2.2.1 Ransomware-Aware Buffer Management Policy
An SSD typically has two types of buffers: a read buffer and a write buffer, due to the speed disparity between read and write operations. During file encryption, the read buffer temporarily holds the original data, and the write buffer temporarily holds the resulting encrypted data. Thus, the read and write buffers contain meaningful information about the read and write patterns of ransomware.

Our ransomware-aware buffer management policy is designed to manage the information related to the overwriting-following-reading requests typical of Type I ransomware. The policy is based on the traditional read and write buffer management in an SSD:
1. Each buffer works in a page unit, which is the operational unit for read and write operations in flash memory.
2. Page-sized elements in each buffer are replaced based on the least recently used (LRU) policy.
3. When a read request is received, the write buffer is first searched because it always contains the newest data.

We suggest four principles to identify the overwriting-following-reading pattern:
1. Basic elements of the read and write buffers can be flagged to indicate ransomware patterns.
2. When a write request is received, the read buffer is searched for data with identical addresses to the write request.
3. Any such data in the read buffer are flagged as TRUE, indicating a potential ransomware pattern.

![Figure 3: An example of ransomware-aware buffer management policy](figure3.png)

## 3. Experimental Results and Limitations
(Section to be filled with experimental results and a discussion of the limitations of the proposed mechanism.)

## 4. Conclusion
(Section to be filled with a summary of the findings and future work.)

---

**Note:** Figures 1 and 3 should be included as visual aids to support the text.