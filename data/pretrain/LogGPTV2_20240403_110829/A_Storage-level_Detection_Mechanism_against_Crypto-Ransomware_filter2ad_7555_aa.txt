title:A Storage-level Detection Mechanism against Crypto-Ransomware
author:Joon-Young Paik and
Joong-Hyun Choi and
Rize Jin and
Jianming Wang and
Eun-Sun Cho
POSTER: A Storage-level Detection Mechanism  
against Crypto-Ransomware  
Joon-Young Paik                               Joong-Hyun Choi                            Rize Jin  
 Tianjin Polytechnic University           Chungnam National University           Tianjin Polytechnic University 
        PI:EMAIL                        PI:EMAIL                               PI:EMAIL 
Jianming Wang                             Eun-Sun Cho 
Tianjin Polytechnic University                 Chungnam National University 
   PI:EMAIL                          PI:EMAIL  
ABSTRACT 
Ransomware  represents  a  significant  threat  to  both  individuals 
and organizations. Moreover, the emergence of ransomware that 
exploits  kernel  vulnerabilities  poses  a  serious  detection 
challenge.  In  this  paper,  we  propose  a  novel  ransomware 
detection mechanism at a storage device, especially a flash-based 
storage device. To this end, we design a new buffer management 
policy  that  allows  our  detector  to 
identify  ransomware 
behaviors. Our mechanism detects a realistic ransomware sample 
with  little  negative  impacts  on  the  hit  ratios  of  the  buffers 
internally located in a storage device. 
CCS CONCEPTS 
• Security and privacy → Malware and its mitigation; 
KEYWORDS 
Security; Ransomware; Buffer; Storage devices 
1  Introduction 
Crypto-ransomware,  ransomware  for  short,  is  malware  that 
locks the data on a victim’s computer, typically, by encryption, 
and  demands  payment  for  unlocking  the  encrypted  data  [1].  In 
recent  years,  individuals,  organizations  and  industry  have  been 
under  serious  threats  by  such  ransomware.  For  example, 
WannaCry  caused  $4  billion  in  damages  by  infecting  300,000 
machines in 2017. 
The  majority  of  defense  strategies  to  ransomware  exploit  the 
behavior of ransomware [2-4]: a large number of read, write, and 
delete  requests  to  storage  devices  for  file  encryptions  and  the 
degree of congestion of file content before and after encryption. 
They have been implemented at host system. However, they are 
susceptible  to  ransomware  (i.e.,  Locky)  that  can  exploit  kernel 
privileges  because  such  attacks  can  disable  the  host-level 
detectors. 
In  this  paper,  we,  as  a  storage-level  detection  mechanism, 
propose  a  ransomware-aware  buffer  management  policy  and  a 
ransomware  detector,  which  has  a  strong  robustness  to  the 
Permission to make digital or hard copies of part or all of this work for personal 
or  classroom  use  is  granted  without  fee  provided  that  copies  are  not  made  or 
distributed  for  profit  or  commercial  advantage  and  that  copies  bear  this  notice 
and the full citation on the first page. Copyrights for third-party components of 
this  work  must  be  honored.  For  all  other  uses,  contact  the  Owner/Author. 
CCS '18, October 15–19, 2018, Toronto, ON, Canada 
© 2018 Copyright is held by the owner/author(s). 
ACM ISBN 978-1-4503-5693-0/18/10. 
https://doi.org/10.1145/3243734.3278491 
kernel  privilege  extortion  of  ransomware.  The  novel  policy  for 
buffers  is  designed  by  exploiting  the  intensive  read  and  write 
patterns  during  the  file  encryption  attacks  of  ransomware.  The 
proposed  detector  detects  ransomware  attacks  in  collaboration 
with internal buffers in a storage device. 
The  rest  of  this  paper  is  organized  as  follows.  We  explain  our 
storage-level  ransomware-detection  mechanism  (Section  2). 
Next,  we  report  the  experimental  results  and  discuss  the 
limitations of our proposal (Section 3). Finally, we conclude the 
paper (Section 4). 
2  Ransomware Detection using Buffers in 
Storage Devices 
2.1  Ransomware 
Ransomware locks valuable user files by encrypting them using 
symmetric  encryption/decryption  algorithms,  such  as 
the 
Advanced Encryption Standard (AES). File encryption requires a 
large number of requests to storage devices. Ransomware can be 
categorized into three types, according to the request pattern [3]. 
Ransomware  type  I  overwrites  an  original  file  with  encrypted 
data.  Ransomware  types  II  and  III  create  and  write  a  new 
encrypted file after reading the original file, and then erase the 
original file without and with file wiping, respectively. 
We  focus  on  detecting  ransomware  type  I;  e.g.,  the  notorious 
Cryptolocker variants. Figure 1 depicts the typical execution flow 
as  a  file  is  locked  by  ransomware  type  I.  After  the  original 
(victim)  file  is  read,  the  file  data  are  encrypted  by  the 
ransomware  encryption  algorithm.  Next,  the  file  is  overwritten 
with the encrypted data. 
Figure  1:  Example  of  read  and  write  requests  by  Ransomware 
Type I.  
Poster PresentationCCS’18, October 15-19, 2018, Toronto, ON, Canada2258 
Figure 2: Architecture of a ransomware-aware SSD. 
In  storage  devices  that  cannot  handle  high-level  information 
about ongoing data, such as file name, file size, file type and so 
on,  ransomware  type  I  is  revealed  by  its  accessing  of  the  same 
addresses as the original data. 
2.2  Storage-Level Ransomware Detection 
Mechanism 
Our  goal  was  to  make  a  storage  device  have  capability  of 
detecting  file  encryption  attacks  by  ransomware  type  I.  This 
approach makes the ransomware-detection mechanism robust to 
ransomware that exploits kernel vulnerabilities. To this end, we 
use  the  repetitive  overwriting-following-reading  access  of  the 
same  addresses.  In  this  paper,  flash-based  Solid  State  Devices 
(SSD) is regarded as the most appropriate type of storage devices. 
SSDs  become  the  dominant  storage  devices  due  to  their  much 
faster  responses  to  users’  requests  than  traditional  hard  disk 
devices  (HDDs).  Moreover,  an  SSD  has  a  more  powerful 
processor, large volatile memory, and superior components to a 
HDD  [5].  Our  proposed  modules  are  deployed  in  an  SSD,  as 
shown in Figure 2. 
2.2.1  Ransomware-aware  Buffer  Management  Policy.  In  general, 
an  SSD  has  two  different  types  of  buffers  because  of  the 
disparity  between  speeds  of  read  and  write  operations:  a  read 
buffer and a write buffer. While ransomware is encrypting files 
on an SSD, the read buffer temporarily holds the original data of 
the  target  files,  and  the  write  buffer  temporarily  holds  the 
resulting  encrypted  data.  That  is,  the  read  and  write  buffers 
contain  meaningful  information  about  the  read  and  write 
patterns  of 
ransomware-aware  buffer 
management  policy  is  designed  to  manage  the  information 
regarding  data  dedicated  to  the  overwriting-following-reading 
requests typical of ransomware type I. 
Our  management  policy  is  based  on  the  traditional  read  and 
write buffer management policy in an SSD; 1) each buffer works 
in  a  page  unit,  which  is  an  operational  unit  for  read  and  write 
operations  in  flash  memory,  2)  page-sized  elements  in  each 
buffer are replaced based on the least recently used (LRU) policy, 
and  3)  when  a  read  request  is  received,  the  write  buffer  is  first 
searched because it always includes the newest data. 
We  suggest  four  principles  to 
identify  the  overwriting-
following-reading  pattern.  First,  the  basic  elements  of  read  and 
write buffers can be flagged to indicate that the data exhibit a  
ransomware.  Our 
Figure 3: An example of ransomware-aware buffer management 
policy.  
ransomware pattern (principle 1). Second, when a write request 
is received, the read buffer is searched for data whose addresses 
are identical to the address to which the write request is directed 
(principle 2). Any such data in the read buffer are flagged TRUE, 