to move it to a different location (provided that you have stopped the server, of
course).
The illustration on the previous page puts together databases, schemas, and ta-
blespaces. Here the postgres database uses tablespace xyzzy as the default one,
whereas the template1 database uses pg_default. Various database objects are
shownattheintersectionsoftablespacesandschemas.
Relations
For all of their differences, tables and indexes—the most important database
objects—have one thing in common: they consist of rows. This point is quite
self-evidentwhenwethinkoftables,butitisequallytruefor-treenodes,which
containindexedvaluesandreferencestoothernodesortablerows.
Someotherobjectsalsohavethesamestructure;forexample,sequences(virtual-
lyone-rowtables)andmaterializedviews(whichcanbethoughtofastablesthat
“keep”thecorrespondingqueries). Besides,thereareregularviews,whichdonot
storeanydatabutotherwiseareverysimilartotables.
InPostgre,alltheseobjectsarereferredtobythegenerictermrelation.
Inmyopinion,itisnotahappytermbecauseitconfusesdatabasetableswith“genuine”
relations defined in the relational theory. Here we can feel the academiclegacyof the
projectandtheinclinationofitsfounder,MichaelStonebraker,toseeeverythingasarela-
tion.Inoneofhisworks,heevenintroducedtheconceptofan“orderedrelation”todenote
atableinwhichtheorderofrowsisdefinedbyanindex.
25
Chapter1 Introduction
Thesystemcatalogtableforrelationswasoriginallycalledpg_relation,butfollowingthe
objectorientationtrend,itwassoonrenamedtopg_class,whichwearenowusedto. Its
columnsstillhavetheprefixthough.
Files and Forks
Allinformationassociatedwitharelationisstoredinseveraldifferentforks,1each
containingdataofaparticulartype.
Atfirst,aforkisrepresentedbyasinglefile. Itsfilenameconsistsofanumeric
(oid),whichcanbeextendedbyasuffixthatcorrespondstothefork’stype.
Thefilegrowsovertime,andwhenitssizereaches,anotherfileofthisfork
iscreated(suchfilesaresometimescalledsegments).Thesequencenumberofthe
segmentisaddedtotheendofitsfilename.
Thefilesizelimitofwashistoricallyestablishedtosupportvariousfilesystems
that could not handle large files. You can change this limit when building Post-
gre(./configure--with-segsize).
themainfork
12345.2
12345.1
12345 freespacemap
12345_fsm.1
12345_fsm visibilitymap
12345_vm
1 postgresql.org/docs/14/storage-file-layout.html
26
1.1 DataOrganization
Thus,a single relation is represented on disk by several files. Even a small table
withoutindexeswillhaveatleastthreefiles,bythenumberofmandatoryforks.
Eachtablespacedirectory(exceptforpg_global)containsseparatesubdirectories
forparticulardatabases. Allfilesoftheobjectsbelongingtothesametablespace
anddatabasearelocatedinthesamesubdirectory. Youmusttakeitintoaccount
becausetoomanyfilesinasingledirectorymaynotbehandledwellbyfilesystems.
Thereareseveralstandardtypesofforks.
Themainfork representsactualdata: tablerowsorindexrows. Thisforkisavail-
ableforanyrelations(exceptforviews,whichcontainnodata).
Files of the main fork are named by their numeric s, which are stored as
relfilenodevaluesinthepg_classtable.
Let’s take a look at the path to a file that belongs to a table created in the
pg_defaulttablespace:
=> CREATE UNLOGGED TABLE t(
a integer,
b numeric,
c text,
d json
);
=> INSERT INTO t VALUES (1, 2.0, 'foo', '{}');
=> SELECT pg_relation_filepath('t');
pg_relation_filepath
−−−−−−−−−−−−−−−−−−−−−−
base/16384/16385
(1 row)
The base directory corresponds to the pg_default tablespace, the next sub-
directory is used for the database,and it is here that we find the file we are
lookingfor:
=> SELECT oid FROM pg_database WHERE datname = 'internals';
oid
−−−−−−−
16384
(1 row)
27
Chapter1 Introduction
=> SELECT relfilenode FROM pg_class WHERE relname = 't';
relfilenode
−−−−−−−−−−−−−
16385
(1 row)
Hereisthecorrespondingfileinthefilesystem:
=> SELECT size
FROM pg_stat_file('/usr/local/pgsql/data/base/16384/16385');
size
−−−−−−
8192
(1 row)
Theinitializationfork1 is available only for unlogged tables (created with the -
clause)andtheirindexes. Suchobjectsarethesameasregularones,
except that any actions performed on them are not written into the write-
p. aheadlog. Itmakestheseoperationsconsiderablyfaster,butyouwillnotbe
abletorestoreconsistentdataincaseofafailure.Therefore,Postgresim-
plydeletesallforksofsuchobjectsduringrecoveryandoverwritesthemain
forkwiththeinitializationfork,thuscreatingadummyfile.
Thettableiscreatedasunlogged,sotheinitializationforkispresent. Ithas
thesamenameasthemainfork,butwiththe_initsuffix:
=> SELECT size
FROM pg_stat_file('/usr/local/pgsql/data/base/16384/16385_init');
size
−−−−−−
0
(1 row)
Thefreespacemap2 keeps track of available space within pages. Its volume
changesallthetime,growingaftervacuumingandgettingsmallerwhennew
row versions appear. The free space map is used to quickly find a page that
canaccommodatenewdatabeinginserted.
1 postgresql.org/docs/14/storage-init.html
2 postgresql.org/docs/14/storage-fsm.html
backend/storage/freespace/README
28
1.1 DataOrganization
Allfilesrelatedtothefreespacemaphavethe_fsmsuffix. Initially,nosuch
files are created; they appear only when necessary. The easiest way to get
themistovacuumatable: p.
=> VACUUM t;
=> SELECT size
FROM pg_stat_file('/usr/local/pgsql/data/base/16384/16385_fsm');
size
−−−−−−−
24576
(1 row)
Tospeedupsearch,thefreespacemapisorganizedasatree;ittakesatleast
threepages(henceitsfilesizeforanalmostemptytable).
Thefreespacemapisprovidedforbothtablesandindexes.Butsinceanindex
row cannot be added into an arbitrary page (for example, -trees define the
placeofinsertionbythesortorder),Postgretracksonlythosepagesthat
havebeenfullyemptiedandcanbereusedintheindexstructure.
Thevisibilitymap1 can quickly show whether a page needs to be vacuumed or
frozen.Forthispurpose,itprovidestwobitsforeachtablepage.
The first bit is set for pages that contain only up-to-date row versions. Vac-
uumskipssuchpagesbecausethereisnothingtocleanup. Besides,whena p.
transactiontriestoreadarowfromsuchapage,thereisnopointinchecking
itsvisibility,soanindex-onlyscancanbeused. p.
Thesecondbitissetforpagesthatcontainonlyfrozenrowversions.Iwilluse v..
thetermfreezemaptorefertothispartofthefork. p.
Visibilitymapfileshavethe_vmsuffix.Theyareusuallythesmallestones:
=> SELECT size
FROM pg_stat_file('/usr/local/pgsql/data/base/16384/16385_vm');
size
−−−−−−
8192
(1 row)
Thevisibilitymapisprovidedfortables,butnotforindexes. p.
1 postgresql.org/docs/14/storage-vm.html
29
Chapter1 Introduction
Pages
p. Tofacilitate/,allfilesarelogicallysplitintopages(orblocks),whichrepresent
the minimum amount of data that can be read or written. Consequently, many
internalPostgrealgorithmsaretunedforpageprocessing.
Thepagesizeisusuallyk.Itcanbeconfiguredtosomeextent(uptok),but
onlyatbuildtime(./configure--with-blocksize),andnobodyusuallydoesit. Once
builtandlaunched,theinstancecanworkonlywithpagesofthesamesize; itis
impossibletocreatetablespacesthatsupportdifferentpagesizes.
Regardless of the fork they belong to, all the files are handled by the server in
p. roughlythesameway. Pagesarefirstmovedtothebuffercache(wheretheycan
bereadandupdatedbyprocesses)andthenflushedbacktodiskasrequired.
TOAST
Each row must fit a single page: there is no way to continue a row on the next
page.Tostorelongrows,Postgreusesaspecialmechanismcalled1(The
OversizedAttributesStorageTechnique).
T implies several strategies. You can move long attribute values into a sep-
arateservicetable,havingslicedthemintosmaller“toasts.” Anotheroptionisto
compressalongvalueinsuchawaythattherowfitsthepage.Oryoucandoboth:
firstcompressthevalue,andthensliceandmoveit.
If the main table contains potentially long attributes, a separate  table is
created for it right away,one for all the attributes. For example,if a table has a
columnofthenumericortexttype,atablewillbecreatedevenifthiscolumn
willneverstoreanylongvalues.
For indexes, the  mechanism can offer only compression; moving long at-
tributesintoaseparatetableisnotsupported.Itlimitsthesizeofthekeysthatcan
p. beindexed(theactualimplementationdependsonaparticularoperatorclass).
1 postgresql.org/docs/14/storage-toast.html
include/access/heaptoast.h
30
1.1 DataOrganization
Bydefault,thestrategyisselectedbasedonthedatatypeofacolumn.The
easiestwaytoreviewtheusedstrategiesistorunthe\d+commandinpsql,butI
willquerythesystemcatalogtogetanunclutteredoutput:
=> SELECT attname, atttypid::regtype,
CASE attstorage
WHEN 'p' THEN 'plain'
WHEN 'e' THEN 'external'
WHEN 'm' THEN 'main'
WHEN 'x' THEN 'extended'
END AS storage
FROM pg_attribute
WHERE attrelid = 't'::regclass AND attnum > 0;
attname | atttypid | storage
−−−−−−−−−+−−−−−−−−−−+−−−−−−−−−−
a | integer | plain
b | numeric | main
c | text | extended
d | json | extended
(4 rows)
Postgresupportsthefollowingstrategies:
plain meansthatisnotused(thisstrategyisappliedtodatatypesthatare
knowntobe“short,”suchastheintegertype).
extended allowsbothcompressingattributesandstoringtheminaseparate
table.
external implies that long attributes are stored in the  table in an uncom-
pressedstate.
main requires long attributes to be compressed first; they will be moved to the
tableonlyifcompressiondidnothelp.
In general terms, the algorithm looks as follows.1 Postgre aims at having at
leastfourrowsinapage. Soifthesizeoftherowexceedsonefourthofthepage,
excludingtheheader(forastandard-sizepageitisaboutbytes),wemustap-
plythemechanismtosomeofthevalues.Followingtheworkflowdescribed
below,westopassoonastherowlengthdoesnotexceedthethresholdanymore:
1 backend/access/heap/heaptoast.c
31
Chapter1 Introduction
1. First of all, we go through attributes with external and extended strategies,
startingfromthelongestones. Extendedattributesgetcompressed,andifthe
resultingvalue(onitsown,withouttakingotherattributesintoaccount)ex-
ceedsonefourthofthepage,itismovedtothetablerightaway.External
attributesarehandledinthesameway,exceptthatthecompressionstageis
skipped.
2. Iftherowstilldoesnotfitthepageafterthefirstpass,wemovetheremaining
attributesthatuseexternalorextendedstrategiesintothetable,oneby
one.
3. If it did not help either,we try to compress the attributes that use the main
strategy,keepingtheminthetablepage.
4. If the row is still not short enough, the main attributes are moved into the
table.
v. Thethresholdvalueisbytes,butitcanberedefinedatthetablelevelusing
thetoast_tuple_targetstorageparameter.
It may sometimes be useful to change the default strategy for some of the col-
umns. If it is known in advance that the data in a particular column cannot be
compressed(forexample,thecolumnstoresimages),youcansettheexternal
strategy for this column; it allows you to avoid futile attempts to compress the
data.Thestrategycanbechangedasfollows:
=> ALTER TABLE t ALTER COLUMN d SET STORAGE external;
Ifwerepeatthequery,wewillgetthefollowingresult:
attname | atttypid | storage
−−−−−−−−−+−−−−−−−−−−+−−−−−−−−−−
a | integer | plain
b | numeric | main
c | text | extended
d | json | external
(4 rows)
T tables reside in a separate schema called pg_toast; it is not included into
the search path, so  tables are usually hidden. For temporary tables,
pg_toast_temp_Nschemasareused,byanalogywithpg_temp_N.
32
1.1 DataOrganization
Let’stakealookattheinnermechanicsoftheprocess. Supposetabletcontains
three potentially long attributes; it means that there must be a corresponding
table.Hereitis:
=> SELECT relnamespace::regnamespace, relname
FROM pg_class
WHERE oid = (
SELECT reltoastrelid
FROM pg_class WHERE relname = 't'
);
relnamespace | relname
−−−−−−−−−−−−−−+−−−−−−−−−−−−−−−−
pg_toast | pg_toast_16385
(1 row)
=> \d+ pg_toast.pg_toast_16385
TOAST table "pg_toast.pg_toast_16385"
Column | Type | Storage
−−−−−−−−−−−−+−−−−−−−−−+−−−−−−−−−
chunk_id | oid | plain
chunk_seq | integer | plain
chunk_data | bytea | plain
Owning table: "public.t"
Indexes:
"pg_toast_16385_index" PRIMARY KEY, btree (chunk_id, chunk_seq)
Access method: heap
Itisonlylogicalthattheresultingchunksofthetoastedrowusetheplainstrategy:
thereisnosecond-level.
Apartfromthetableitself,Postgrecreatesthecorrespondingindexin
the same schema. This index is always used to access  chunks. The name
of the index is displayed in the output, but you can also view it by running the
followingquery:
=> SELECT indexrelid::regclass FROM pg_index
WHERE indrelid = (
SELECT oid
FROM pg_class WHERE relname = 'pg_toast_16385'
);
indexrelid
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
pg_toast.pg_toast_16385_index
(1 row)
33
Chapter1 Introduction
=> \d pg_toast.pg_toast_16385_index
Unlogged index "pg_toast.pg_toast_16385_index"
Column | Type | Key? | Definition
−−−−−−−−−−−+−−−−−−−−−+−−−−−−+−−−−−−−−−−−−
chunk_id | oid | yes | chunk_id
chunk_seq | integer | yes | chunk_seq