# Traffic Classification Using a Statistical Approach

**Authors:**
- Denis Zuev<sup>1</sup>
- Andrew W. Moore<sup>2</sup>

**Affiliations:**
1. University of Oxford, Mathematical Institute
   - Email: [Email Address]
2. University of Cambridge, Computer Laboratory
   - Email: [Email Address]

**Abstract:**
Accurate traffic classification is crucial for various network activities. Our work leverages hand-classified network data as input to a supervised Bayesian estimator. We demonstrate that even with the simplest Naïve Bayes estimator, we achieve over 83% accuracy on both a per-byte and per-packet basis.

## 1. Introduction

Traffic classification is essential for applications such as Quality of Service (QoS), security, monitoring, and intrusion detection, benefiting researchers, accountants, network operators, and end users. By utilizing previously hand-classified network traffic, we obtain training and testing datasets. Using a supervised Bayesian algorithm, we achieve an accuracy of over 66% for flows and over 83% for packets and bytes. Notably, our method requires only the network protocol headers of unknown traffic for successful classification.

While machine learning has been used for network traffic/flow classification (e.g., [1]), our work is the first to combine this technique with accurate test and training datasets.

## 2. Experiment

To perform data analysis using the Naïve Bayes technique, we utilized trace data described and categorized in [2]. This classified data was divided into 10 equal time intervals, each containing approximately 25,000 to 65,000 objects (flows). To evaluate the performance of the Naïve Bayes technique, each dataset was used as a training set in turn and tested against the remaining datasets, allowing us to compute the average classification accuracy.

### Traffic Categories

Classification relies on defining classes of traffic. In this work, we use classes defined as common groups of user-centric applications. Other classification methods may have simpler (e.g., Normal vs. Malicious) or more complex definitions (e.g., specific applications or TCP implementations).

We consider the following traffic categories:
- **BULK**: e.g., FTP
- **DATABASE**: e.g., PostgreSQL
- **INTERACTIVE**: e.g., SSH, Telnet
- **MAIL**: e.g., SMTP
- **SERVICES**: e.g., X11, DNS
- **WWW**
- **P2P**: e.g., KaZaA
- **ATTACK**: e.g., virus and worm attacks
- **GAMES**: e.g., Half-Life
- **MULTIMEDIA**: e.g., Windows Media Player

It is important to note that the characteristics within each category are not necessarily unique. For example, the BULK category, which includes FTP traffic, consists of both control and data channels. The assignment of categories to applications is an artificial grouping, illustrating that minimal clustering of related traffic types is possible with our approach.

### Objects and Discriminators

Our primary object for classification is the flow, defined here as a complete TCP flow—i.e., all packets between two hosts for a specific tuple. We restrict our analysis to complete flows, those that start and end validly (e.g., with the first SYN and the last FIN ACK).

As noted in Section 1, classification requires parameterizing each object. These parameters, referred to as discriminators, allow the classifier to allocate objects to classes. In our research, we used 249 different discriminators, including flow duration statistics, TCP port information, payload size statistics, and Fourier transforms of packet inter-arrival times. A complete list is provided in [3].

## 3. Method

### Machine Learned Classification

We briefly describe our machine learning (ML) approach, which involves a trained Naïve Bayes classifier, along with several refinements. For a comprehensive overview of ML techniques, see [4].

Classification methods can be broadly categorized as deterministic or probabilistic. Deterministic classification assigns data points to mutually exclusive classes based on a distance metric. Probabilistic classification, on the other hand, assigns probabilities to each class.

We believe that probabilistic classification, particularly our approach, is more suitable for Internet traffic due to its robustness to measurement errors, ability to use pre-classified traffic for supervised training, and capability to identify similar flow characteristics after probabilistic assignment. Additionally, the method should be tractable, understandable, and capable of handling the dynamic nature of Internet traffic, while also indicating when retraining is necessary.

### Naïve Bayesian Classifier

The main approach used in this work is the Naïve Bayes technique described in [5]. Consider a collection of flows \( x = (x_1, \ldots, x_n) \), where each flow \( x_i \) is described by \( m \) discriminators \( \{d_{m}^{(i)}\} \) that can take either numeric or discrete values. In the context of Internet traffic, \( d_{m}^{(i)} \) represents a discriminant of flow \( x_i \), such as the mean inter-arrival time of packets in \( x_i \).

Flows \( x_i \) belong to one of the mutually exclusive classes described in Section 2. The supervised Bayesian classification problem involves building a statistical model based on training data, where each new flow \( y \) receives a probability of being classified into a particular class according to the Bayes rule:

\[
p(c_j | y) = \frac{p(c_j) f(y | c_j)}{\sum_{c_j} p(c_j) f(y | c_j)}
\]

where \( p(c_j) \) denotes the prior probability of class \( c_j \), \( f(y | c_j) \) is the distribution function (or the probability of \( y \) given \( c_j \)), and the denominator acts as a normalizing constant.

The Naïve Bayes technique assumes the independence of discriminators \( d_1, \ldots, d_m \) and their simple Gaussian behavior. While these assumptions are not entirely realistic for Internet traffic, [5] suggests that this model sometimes outperforms more complex models.

## 4. Results

Our experiments show that the Naïve Bayes technique classifies, on average, 66.71% of the traffic correctly. Table 1 demonstrates the classification accuracy for each class. SERVICES and BULK are well classified, with around 90% of correctly predicted flows. This indicates that most discriminator distributions are well separated in Euclidean space.

| Class       | Accuracy (%) | Probability (%) |
|-------------|--------------|-----------------|
| WWW         | 65.97        | 98.31           |
| MAIL        | 56.85        | 90.69           |
| BULK        | 89.26        | 90.01           |
| SERVICES    | 91.19        | 35.92           |
| DATABASE    | 20.20        | 61.78           |
| INTERACTIVE | 22.83        | 7.54            |
| P2P         | 45.59        | 4.96            |
| ATTACK      | 58.08        | 1.10            |

Certain classes, such as GAMES and INTERACTIVE, performed poorly due to insufficient samples, leading to inaccurate Naïve Bayes training. ATTACK flows were often confused with WWW flows due to similar discriminators.

In addition to accuracy, we consider other metrics, such as the probability that the predicted flow class is the real class. For example, if a flow is classified as WWW, the probability measure gives the likelihood that it is indeed WWW.

The Naïve Bayes technique also accurately classified 83.98% of packets and 83.93% of bytes. In contrast, port-based classification achieved 71.02% accuracy by packet and 69.07% by bytes (from [2]). This highlights the significant improvement of our Naïve Bayes technique over port-based classification.

## 5. Conclusions and Further Work

In its simplest form, our probabilistic classification achieves 67% accuracy per-flow and over 83% accuracy per-byte and per-packet. Access to full-payload traces, the definitive way to characterize network applications, is often limited due to technical and legal restrictions. We demonstrate how data gathered without these restrictions can be used as training input for a statistical classifier, providing accurate, albeit estimated, classification of header-only trace data.

**References:**
1. Anthony McGregor et al.: Flow Clustering Using Machine Learning Techniques. In: Proceedings of the Fifth Passive and Active Measurement Workshop (PAM 2004). (2004)
2. Moore, A.W., Papagiannaki, K.: Toward the accurate identification of network applications. In: Passive & Active Measurement Workshop 2005 (PAM2005), Boston, MA (2005)
3. Moore, A., Zuev, D.: Discriminators for use in flow-based classification. Technical Report, Intel Research, Cambridge (2005)
4. Mitchell, T.: Machine Learning. McGraw Hill (1997)
5. Witten, I.H., Frank, E.: Data Mining. Morgan Kaufmann Publishers (2000)

**Acknowledgments:**
- This work was completed when Denis Zuev was employed by Intel Research, Cambridge.
- Andrew Moore thanks the Intel Corporation for its generous support of his research fellowship.

**Publication Information:**
- C. Dovrolis (Ed.): PAM 2005, LNCS 3431, pp. 321–324, 2005.
- © Springer-Verlag Berlin Heidelberg 2005