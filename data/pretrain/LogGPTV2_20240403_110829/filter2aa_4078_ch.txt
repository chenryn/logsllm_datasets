强制访问控制和 自 主访问控制都限制主体对客体的访问。 访问控制 的主要 目 的是: 通过阻止授
权或未经授权主体的未授权访 问 ， 从而确保数据的机密性和完整性。
8.1 .5 信任与保i正
为 了生成可靠的安全产品， 在体系化设计和开发之前及期间 ， 必须集成适当的安全原则、 控制
和机制。 安全问题不应当在事后才加以考虑， 否则就会导致失察、 成本增加以及可靠性降低 。 安全
第 8 章 安全模型的原则 、 设计和功能
性一旦被集成到设计中， 就必须被计划 、 实现、 测试、 审计、 评估、 认证和最后认可。
可信系统是所有保护机制都协同工作的系统， 从而能够在维护稳定和安全的计算环境的同时，
为许多类型的用户处理敏感数据。 保证被简单地定义为: 满足安全需求的可信度。 保证必须被持续
地维持、 更新和重新验证。 无论可信系统经历己知的变化还是经过大量时间， 这一点都是正确的 。
在任何一种情况下， 变化都在某个级别上发生。 变化往往是安全的对立面， 并且常常降低安全性。
因此， 无论何时发生变化， 都需要对系统重新进行评估， 以便验证先前提供的安全级别是否仍然未
受破坏。 保证对于不同系统是不同的， 并且必须针对单独系统分别建立。 不过， 某些保证等级或级
别可以适用于许多类型相同 的系统、 支持相同服务的系统或部署在相同地理位置的系统。 因此， 信
任可以通过具体的安全功能集成到系统中 ， 而保证是在现实世界中对安全功能的可靠性和可用性的
评估。
8.2 理解安全模型的基本概念
在信息安全中， 模型提供了一种正式的安全策略的方式。 这样的模型可以是抽象的或直观的(某
些无疑是数学的)， 但是都试图提供一组显式的规则， 计算机能够遵循这组规则实现组成安全策略的
基本安全概念、 过程和措施。 这些模型有助于理解如何设计和开发支持特定安全策略的计算机操
作系统。
安全模型允许设计人员将抽 象语句映射为描述构建硬件和软件所需算法和数据结构的安全策
略。 因此， 安全模型使软件设计人员 能够衡量自 己的设计和实现。 当然， 这种模型必须支持安全策
略 的每个部分。 通过这种方式， 开发人员就 能确认 自 己 的 安全实现可 以支持安全策略。
安全令牌、 功能列表和标签
若干不 同 的方法手即有 于为客体描述必要的安全特性。 安全令牌是一个与 资源关联的独立客体，
并且描述了 其安全特性。 在请求访 问 实 际的客体之前， 这个令牌可以将某个客体的相关安全信息传
递给实 际的客休。 在其他实现中 ， 各种列表被用于存储与 多 个客体有关的安全信息。 功能列表为每
个受控客体维护一行安全特性。 尽管 不像令牌方式那样灵活， 但是功能列表在主体请求访问客体时
通常能够提供史，快速的查找功能。 第三种常见的特性存储器被称为安全标签(security label)， 安全标
签通常是客体附加的永久部分。 一旦设直 了 安全标签， 就往往不能被史改。 这种永久性提供了 令牌
和功能列表都 未提供的 另 一种 防止篡改的 防护措施。
如下所示， 必须学习若干安全模型; 所有这些模型都阐 明 了如何在计算机体系结构和操作系统
设计中加入安全性 :
• 可信计算模型
• 状态机模型
• 信 息流模型
• 非干扰模型
• Take-Grant 模型
• 访问控制表
• Bell-LaPadl山 模型
• Biba 模型
191
1 92
CISSP 官方学习指南(第 7 版)
• Clark-Wilson 模型
• Brewer and Nash 模型(也被称为 Chinese Wall 模型)
• Goguen-Messguer 模型
• Sutherland 模型
• Graham-Denning 模型
尽管没有任何系统是绝对安全的， 但是可以适当地设计和构建安全的系统。 事实上， 如果某个
安全的系统遵循特定的安全标准组， 那么就可以说这个系统具备某种信任级别 。 因此， 信任可 以被
构建在系统内 ， 随后能够被评估、 认证和认可。 但是在讨论每种安全模型之前， 必须建立构建大多
数安全模型的基础 。 这个基础就是 TCB(Trusted Computing Base， 可信计算基础)。
8.2.1 可信计算基
桶皮书是美国国防部较早的一个标准(DoD Stand缸d 5200.28， 本章后面的 " 彩虹系列" 部分会
进行更详细的介绍)的俗称， 这个标准将可信计算基σCB)描述为硬件 、 软件和控制方法的组合， 这
个组合形成了实施安全策略的可信任基准。 TCB 是完整信息系统的一个子集， 并且应当尽可能小，
从而使详细的分析能够确保系统满足设计规范和要求。 TCB 是系统可以信任的遵守和实施安全策略
的唯一部分。 系统的每个组件并不需要都是可信任的。 不过， 从安全性的角度考虑系统时， 评估中
应该包括定义系统 TCB 的所有可信组件。
通常， 某个系统中 的 TCB 组件负 责控制对系统的访问。 TCB 必须提供访问 TCB 本身内部和外
部资源的方法。 TCB 组件通常对 TCB 外部的组件的活动加 以限制。 TCB 组件的职责就是确保系统
的行为在所有的情况下工作正常井遵守安全策略。
1 安全边界
系统的安全边界是一条假想的界限， 它将 TCB 与系统的其他部分隔开(见图 8. 1)。 这条边界确
保 TCB 与计算机系统中其他部件的不安全通信或交互不会发生。 因为 TCB 要与系统的其他部分进
行通信， 所 以安全边界必须建立安全的通道， 也被称为可信路径。 可信路径是建立在有着严格标准
基础上的通道， 在不受 TCB 安全脆弱性影响的情况下准许进行必要的通信。 可信路径也保护系统用
户 (有时也称为主体)不受因 TCB 交换导致的危害。 在本章稍后部分， 在 了解与正式的安全指导原则
和评估标准有关的更多信息之后 ， 你还会知道系统需要通过可信路径试图 向用户交付高级别的安全
性 。 根据本章稍后将要描述的 TCSEC 指导原则， B2 和 较高级别 的系 统要求使用可信路径。
2. 引用监控器和内核
在实现安全系统时， 必须利用 TCB 的某部分来实施针对系统资产和资源(有时称为客体)的访问
控制。 在准许访问请求之前验证对每种资源的访问 的这部分 TCB 被称为引用监控器(见图 8. 1)。 引
用监控器处于每个主体和客体之间 ， 并且在准许进行任何访问请求之前验证请求主体的凭证是否满
足客体的访问需求。 如果不满足这种访问 需求， 那么访问请求就会被拒绝。 实际上， 引 用监控视器
是 TCB 的访问控制执行者。 因此， 授权和安全的行动和活动被允许发生， 而未经授权的和不安全的
活动和行动被拒绝并阻止发生。 引 用监控器对访问 控制或授权的强制基于所需的安全模型， 无论是
自 由支配的 、 强制性的、 基于角 色的还是访 问控制的一些其他形式。 引 用 监控器可能是 TCB 概念的
一部分; 它 并不需要是一个实际的 、 独立的或独立工作的系统组成部分。
第8:!主 安全模型的原则 、 设计和功能
系统中非安 全关注的元素
引 用监控器 安 全边 界
图 8. 1 TCB、 安全边界和 引用监控器
共同工作从而实现引用 监控器功能的 TCB 中组件的集合被称为安全内 核。 引用监控器是一种通
过软件和硬件中 的安全实现来实施的概念或理论。 安全内核的 目 的是使用适当的组件实施引用监控
器的功能和抵抗所有己知的攻击。 安全内核使用一条可信路径与主体进行通信 ， 并且还可以作为所
有资源访 问请求的中间人 ， 从而只 允许那些与系统应用 的适当访 问规则相匹配的请求。
引 用监控器要求具有与其保护的每种资源相关的描述性信息。 这种信息通常包括资源的分类级
别和名称。 当某个主体请求访问某个客体时， 引 用监控器会查阅客体的描述性信息， 从而判断应当
准许或拒绝访 问 (参看 " 安全令牌、 功 能列表和标签 " 部分对其工作原理的详细介绍)。
8.2.2 状态机模型
状态机模型描述了一个无论处于何种状态下总是安全的系统， 这种模型基于有限状态机σinite
State Mac恤le， FSM)的计算机科学定义。 FSM 通过组合外部输入和内部计算机状态来建立所有类型
的复杂系统的模型， 包括解析器、 解码器和解释器。 给定一个输入和一个状态， FSM 就会转换至另
一个状态， 并且可能生成一个输出 。 从数学上讲， 下一状态是当前状态和输入的函数: 下一状态= F(输
入 ， 当 前状态)。 同样， 输 出 也是输入和 当前状态的函数: 输出=F(输入， 当 前状态)。
许多安全模型都基于安全状态的概念。 根据状态机模型 ， 状态是系统在特定时刻的即时快照 。
如果某个状态的所有方面都满足安全策略的要求， 那么这个状态就被认为是安全的。 接受输入或生
成输出时都会发生转换操作。 转换操作总是会产生新的状态(也被称为状态转换)。 所有的状态转换
都必须进行评估。 如果每个可能的状态转换都会导致另一个安全状态， 那么系统就会被称为安全状
态机。 安全状态机模型系统，总是会进入一个安全状态(在所有的转换中维护安全状态)， 并且准许主
体 只 以遵循安全策略的安全方式访 问 资源。 安全状态机模型是其他许多 安全模型的 基础 。
8.2.3 信息流模型
信息流模型关注于信息流。 信 息流模型 以状态机模型为基础 。 本章稍后我们将要详细讨论的
Bell-LaPadula 和 Biba 模型都是信息流模型。 Bell-LaPadula 模型的 目 的是防止信息从高安全级别向低
1 93
CISSP 官方学习指南(第 7 版)
安全级别流动， Biba 模型的 目 的是防止信息从低安全级别向高安全级别流动。 信息流模型不一定只
对信息流的方向进行处理， 它们还可 以涉及信息流的类型 。
信息流模型被设计用于避免未授权的、 不安全的或受限的信息流。 信息流可以出现于相同分类
级别的主体和客体之间 ， 也可 以出现在不同分类级别的主体和客体之间。 信息流模型准许所有被授
权的信息流， 无论是在相同的分类级别还是处于不同的分类级别之间。 信息流模型避免了所有未授
权信息流的出现， 无论是在相同的分类级别还是位于不同的分类级别之间。 信息流模型可以防止未
经授权的所有信息流 ， 无论是在同一分类级别不同 的 分类级别之间 。
信息流模型另一个有趣的方面是: 在相同客体的两种版本或状态存在于不同的时间点时， 信息流
模型被用于建立这两种版本或状态之间的关系。 因此， 信息流指示了客体从某个时间点的一个状态向
另一个时间点的另一个状态的转变。 信息流模型也可通过排除所有不确定的流途径来解决隐敲通道。
8.2.4 无干扰模型
无干扰模型松散地建立在信息流模型的基础上。 然而， 无干扰模型关注的是位于较高安全级别
的主体的动作如何影响系统状态， 或关注于位于较低安全级别的主体的动作， 而不是关注于信息流。
本质上， 主体 A(位于较高安全级别)的动作不应当影响主体 B(位于较低安全级别)的动作， 甚至应当
不引起主体 B 的注意。 实际上， 无干扰模型真正关注于防止位于高安全分类级别的主体 A 的动作影
响位于低安全分类级别的系统状态 。 如果出现这种情况， 那么主体 B 可能会处于不安全的状态， 或
者可能会演绎或推导出较高分类级别的信息。 这属于一种信息泄漏类型， 并且会隐式地创建隐蔽通
道。 因此， 可 以利用非干扰模型来提供一种防止恶意程序(例如， 特洛伊木马)导致危害的保护形式。
@ 真实场景