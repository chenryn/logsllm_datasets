发现参数注⼊并没有被修复 
虽然在action配置移除了Connection但是有其他地⽅能调⽤到  createCSR  
com.manageengine.ads.fw.dashboard.DashboardAction#updateSessionAttributes  
3.命令参数注⼊ 
四、⼀些⼩问题 
1.任意session属性设置 
13
远程⽂件下载 
com.manageengine.ads.fw.roboupdate.RoboUpdateAction#download  
14
com.manageengine.ads.fw.roboupdate.DownloadPatch#doAction  
15
Java
复制代码
public void doAction(Properties patchDetails) throws Exception {
        URLConnection connection = null;
        FileOutputStream outputStream = null;
        File ppmFile = null;
        InputStream inputStream = null;
        String ppmName = null;
        String folder = patchDetails.get("PATCH_LOCATION") != null ? 
(String)patchDetails.get("PATCH_LOCATION") : "/Patch/Roboupdate";
        folder = RoboUpdateUtil.createFolder(folder);
        try {
            String httpAddress = patchDetails.get("PPM_URL") != null ? 
(String)patchDetails.get("PPM_URL") : 
(String)patchDetails.get("PATCH_URL");
            URL url = new URL(httpAddress);
            String protocolType = url.getProtocol();
            if (this.proxySettings != null && this.proxySettings.length() 
> 0) {
                Proxy proxy = new Proxy(Type.HTTP, new 
InetSocketAddress((String)this.proxySettings.get("SERVER_NAME"), 
Integer.parseInt(this.proxySettings.get("PORT").toString())));
                if (protocolType.equals("http")) {
                    connection = 
(HttpURLConnection)url.openConnection(proxy);
                } else {
                    connection = 
(HttpsURLConnection)url.openConnection(proxy);
                }
                if (this.proxySettings.has("USER_NAME")) {
                    String encodedUserPwd = 
MimeUtility.encodeText((String)this.proxySettings.get("USER_NAME") + ":" + 
(String)this.proxySettings.get("PASSWORD"));
                    ((URLConnection)connection).setRequestProperty("Proxy-
Authorization", "Basic " + encodedUserPwd);
                }
            } else if (protocolType.equals("http")) {
                connection = (HttpURLConnection)url.openConnection();
            } else {
                connection = (HttpsURLConnection)url.openConnection();
            }
            ((URLConnection)connection).setReadTimeout(10000);
            ((URLConnection)connection).setConnectTimeout(30000);
            ppmName = httpAddress.substring(httpAddress.lastIndexOf("/") + 
1, httpAddress.length());
            ppmFile = new File(folder, ppmName);
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
16
当时可能有点懵了，其实设置session属性那⾥，设置的属性类型是String，⽽我们后⾯远程⽂件下载的时
候获取的属性的List会报错所有⾏不通。 
2.任意⽂件下载 
            try {
                outputStream = new FileOutputStream(ppmFile);
            } catch (FileNotFoundException var17) {
                RoboUpdateHandler.setPatchFolderPermission();
                folder = RoboUpdateUtil.createFolder(folder);
                ppmFile = new File(folder, ppmName);
                outputStream = new FileOutputStream(ppmFile);
            }
            inputStream = ((URLConnection)connection).getInputStream();
            int bytesRead = false;
            byte[] buffer = new byte[153600];
            int bytesRead;
            while((bytesRead = inputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }
            this.logger.log(Level.INFO, "Successfully downloaded the patch 
and stored in " + folder + " folder");
            this.downloadStatus = true;
            this.filePath = folder + File.separator + ppmName;
        } catch (Exception var18) {
            this.logger.log(Level.INFO, " ", var18);
            throw new Exception(var18);
        } finally {
            if (inputStream != null) {
                inputStream.close();
            }
            if (outputStream != null) {
                outputStream.close();
                if (!this.downloadStatus && ppmFile != null && 
ppmFile.exists()) {
                    ppmFile.delete();
                }
            }
            if (connection != null) {
                connection = null;
            }
        }
    }
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
17
com.manageengine.ads.fw.ssl.SSLAction#downloadCSR  
跟⼊  com.manageengine.ads.fw.ssl.SSLAPI#downloadCSR  
18
通过session属性来获取要下载的⽂件名，结合上⾯的session属性伪造，即可实现任意⽂件下载。 
Java
复制代码
public String downloadCSR(HttpServletRequest request, HttpServletResponse 
response) throws Exception {
        String filename = 
(String)request.getSession().getAttribute("CSR_FILE_NAME");
        if (filename != null) {
            response.setContentType("text/html");
            response.setHeader("Content-Disposition", "attachment; 
filename=\"" + filename + "\"");
            PrintWriter out = response.getWriter();
            FileInputStream fileInputStream = new 
FileInputStream(SSLConstants.SERVER_HOME + File.separator + 
SSLConstants.DEFAULT_CERTIFICATE_DIR + File.separator + filename);
            Throwable var6 = null;
            try {
                int i;
                try {
                    while((i = fileInputStream.read()) != -1) {
                        out.write(i);
                    }
                } catch (Throwable var15) {
                    var6 = var15;
                    throw var15;
                }
            } finally {
                if (fileInputStream != null) {
                    if (var6 != null) {
                        try {
                            fileInputStream.close();
                        } catch (Throwable var14) {
                            var6.addSuppressed(var14);
                        }
                    } else {
                        fileInputStream.close();
                    }
                }
            }
            out.close();
            SSLHandler.addMETrackEntry("CSR_DOWNLOAD_COUNT");
        }
        return null;
    }
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
19
⾸先设置session属性获取session 
携带此session请求 
com.manageengine.ads.fw.ssl.SSLAction#addNewCertificate(org.apache.struts.action.Actio
nMapping, org.apache.struts.action.ActionForm, javax.servlet.http.HttpServletRequest, 
javax.servlet.http.HttpServletResponse)  
3.⽂件解压 
20
com.manageengine.ads.fw.ssl.SSLAPI#addNewCertificate(javax.servlet.http.HttpServletReq
uest, javax.servlet.http.HttpServletResponse, org.json.JSONObject, 
org.json.JSONObject)  
刚开始以为能shell了，后⾯发现在⽂件上传部分就出问题了。 
因为他没有给这个上传配置struts form-bean 
21
导致此处的actionform获取不到 
从⽽进⼊else⾥ 
此处会爆  java.lang.ClassCastException: 
org.apache.catalina.connector.RequestFacade cannot be cast to 
com.adventnet.iam.security.SecurityRequestWrapper  强制类型转换异常 
com.manageengine.ads.fw.util.jumpto.JumpToAPI#testConnection  
4.⽆回显ssrf 
22