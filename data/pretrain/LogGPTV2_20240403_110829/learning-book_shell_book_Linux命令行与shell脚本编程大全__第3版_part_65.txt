---
## Page 412
18.3
使用图形
397
（续）
选
项
描
述
--fi.1e-selection
显示完整的路径名和文件名对话窗口
--info
显示信息对话窗口
--1ist
显示多选列表或单选列表对话窗口
--notificat.ion
显示通知图标
srexbo.xd--
显示进度条对话窗口
--question
显示yes/no对话窗口
--gcale
显示可调整大小的窗口
--text-info
显示含有文本的文本框
18
--warn.og
显示警告对话窗口
zenity命令行程序与kdialog和dialog程序的工作方式有些不同。许多部件类型都用另外的命令
行选项定义，而不是作为某个选项的参数。
如图18-11所示。
Calendar selection
Select a date from below
Calendar.
December 
2011 
11
13
14
15
17
2526
28
图18-11zenity日历对话窗口
当在日历中选择了日期时，zenity命令会将值返回到sTDOUT中，就和kdialog一样。
$  zenity
--calendar
12/25/2011
zenity中另一个很酷的窗口是文件选择选项，如图18-12所示。
---
## Page 413
398
第18章图形化桌面环境中的脚本编程
0sty
R Seart
l Oesktog
NamH
iCoecements
srpunqes
l rich
 Downloads
0/14/2910
& Music
10/14/2010
0/14/2910
ePublic
 Picures
2.2 GB Flesy
satnydua
h
 11 Gerile
 videos
10)14/2010
age.tit
hytes092s
10/14/2019
mDeci
Lexamples.desktop
 nile.bxt
T79 bytes 10/14/2019
mesut
11 bytes  09:37
mesu)
241 bytes 09:18
Lbestbt
1byte
777 bytes 09:41
09.30
图18-12zenity文件选择对话窗口
可以用对话窗口来浏览系统上任意一个目录位置（只要你有查看该目录的权限），并选择文
件。当你选定文件时，zenity命令会返回完整的文件路径名。
$ zenity --file-selection
/home/ubuntu/menu5
有了这种可以任意发挥的工具，创建shel脚本就没什么限制了。
2.在脚本中使用zenity
如你所期望的，zenity在shell脚本中表现良好。但是，zenity没有沿袭dialog和kdialog中所采
用的选项惯例，因此，将已有的交互式脚本迁移到zenity上要花点工夫。
在将系统管理菜单从kdialog迁移到zenity的过程中，需要对部件定义做大量的工作。
$cat menu5
 1/bin/bash
 using zenity to create a menu
temp=$ (mktemp -t temp -x)
temp2=$ (mktenp -t temp2 x)
function diskspace (
df -k > $tenp
zenity --text-info --title *Disk spsce* --filenane=$tenp
--width 750 --height 10
---
## Page 414
18.3使用图形
66
funct ion whoseon (
who > $tenp
zenity --text1nfo --title *Logged in usera*
=vidth 500 --height 10
-- filenane=Stenp
function menusage {
cat /proe/meminfo > Stenp
00s aufreu-- ooe tap-
whl1e [ 1 ]
do
18
1osag。 uamtoo-- snue uupr sAs。 oat-- 1stotpe.-- ast-- Atueg
FALSE *Diaplay menory usage* FALSE *Exit* > Stenp2
1f [ $? -eq 1 ]
then
break
f1
selection=$Icat Stemp2)
“Dlaplay diak space*)
case $selectlon in
*Dlaplay usera*)
Giskepace 11
vhoseon1
“Dlaplay menozy usage*1
Ex1t)
memusage :1
break ;:
*)
esac
zenity -lnfo *Sorry, invalid selection
done
由于zenity并不支持菜单对话窗口，我们改用单选列表窗口来作为主菜单，如图18-13所示。
该单选列表用了两列，每列都有一个标题：第一列包含用于选择的单选按钮，第二列是选
项文本。单选列表也不用选项里的标号。当选定一个选项时，该选项的所有文本都会返回到
STDOUT。这会让case命令的内容丰富一些。必须在case中使用选项的全文本。如果文本中有
任何空格，你需要给文本加上引号。
使用zenity包，你可以给GNOME桌面上的交互式shell脚本带来一种Windows式的体验。
---
## Page 415
400
第18章图形化桌面环境中的脚本编程
@@ Sys Admin Mens
Select items from the lst below.
Select Menu Item
Display disk space
afesnAiouaufedsio
Display ssers
msit
图18-13采用zenity的系统管理莱单
18.4小结
交互式shell脚本因枯燥乏味而声名狼籍。在多数Linux系统中，可以通过一些技术手段和工
具改变这种状况。首先，可以用case命令和shell脚本函数为你的交互式脚本创建菜单系统。
case命令允许你用标准的echo命令来绘制菜单，然后用read命令来读取用户输人。之后
case命令会选择根据输人值来选择对应的shell脚本函数。
dialog程序提供了一些预建的文本部件，可以在基于文本的终端仿真器上生成类窗口对象。
你可以用dialog程序创建对话框来显示文本、输人文本以及选择文件和日期。这会让你的脚本生
动许多。
如果是在图形化XWindow环境中运行shell脚本，你可以在交互脚本中采用更多的工具。对
KDE桌面来说，有kdialog程序。该程序提供了简单命令来为所有基本窗口功能创建窗口部件。对
GNOME桌面来说，有gdialog和zenity程序。每个程序都提供了能像真正的窗口应用一样融入
GNOME桌面的窗口部件。
下一章将深人讲解文本数据文件的编辑和处理。通常shell脚本最大的用途就在于解析和显示
文本文件中的数据，比如日志文件和错误文件。Linux环境包含了两个非常有用的工具：sed和
gawk，两者都能够在shell脚本中处理文本数据。下一章将介绍这些工具并演示它们的基本用法。
---
## Page 416
第19章
初识sed和gawk
本章内容
端ps泰口
 gawk编辑器人门
sed编辑器基础
至目前为止，shell脚本最常见的一个用途就是处理文本文件。检查日志文件、读取配置
文件、处理数据元素，shell脚本可以帮助我们将文本文件中各种数据的日常处理任务
自动化。但仅靠shell脚本命令来处理文本文件的内容有点勉为其难。如果想在shell脚本中处理任
何类型的数据，你得熟悉Linux中的sed和gawk工具。这两个工具能够极大简化需要进行的数据处
理任务。
19.1
文本处理
第10章演示了如何用Linux环境中的编辑器程序来编辑文本文件。这些编辑器可以让你用简
单命令或鼠标单击来轻松地处理文本文件中的文本。
但有时候，你会发现需要自动处理文本文件，可你又不想动用全副武装的交互式文本编辑器。
在这种情况下，有个能够轻松实现自动格式化、插人、修改或删除文本元素的简单命令行编辑器
就方便多了。
Linux系统提供了两个常见的具备上述功能的工具。本节将会介绍Linux世界中最广泛使用的
两个命令行编辑器：sed和gawk。
19.1.1sed编辑器
sed编辑器被称作流编辑器（streameditor），和普通的交互式文本编辑器恰好相反。在交互式
文本编辑器中（比如vim），你可以用键盘命令来交互式地插人、删除或替换数据中的文本。流编
辑器则会在编辑器处理数据之前基于预先提供的一组规则来编辑数据流。
sed编辑器可以根据命令来处理数据流中的数据，这些命令要么从命令行中输人，要么存储
在一个命令文本文件中。sed编辑器会执行下列操作。
---
## Page 417
402
第19章初识sed和gawk
(1)一次从输人中读取一行数据。
(2)根据所提供的编辑器命令匹配数据。
(3)按照命令修改流中的数据。
（4）将新的数据输出到STDOUT。
在流编辑器将所有命令与一行数据匹配完毕后，它会读取下一行数据并重复这个过程。在流
编辑器处理完流中的所有数据行后，它就会终止。
由于命令是按顺序逐行给出的，sed编辑器只需对数据流进行一遍处理就可以完成编辑操作。
这使得sed编辑器要比交互式编辑器快得多，你可以快速完成对数据的自动修改。
sed命令的格式如下。
sed options script file
选项允许你修改sed命令的行为，可以使用的选项已在表19-1中列出。
表19-1sed命令选项
描述
e acript
在处理输人时，将script中指定的命令添加到已有的命令中
-f file
在处理输人时，将ri1e中指定的命令添加到已有的命令中
不产生命令输出，使用print命令来完成输出
script参数指定了应用于流数据上的单个命令。如果需要用多个命令，要么使用-e选项在
命令行中指定，要么使用-选项在单独的文件中指定。有大量的命令可用来处理数据。我们将会
在本章后面介绍一些sed编辑器的基本命令，然后在第21章中会看到另外一些高级命令。
1.在命令行定义编辑器命令
默认情况下，sed编辑器会将指定的命令应用到sTDIN输入流上。这样你可以直接将数据通
过管道输人sed编辑器处理。这里有个简单的示例。
$echo *This is a test" |sed *s/test/big test/'
This is a big test
这个例子在sed编辑器中使用了s命令。s命令会用斜线间指定的第二个文本字符串来替换第
一个文本字符申模式。在本例中是bigtest替换了test。
在运行这个例子时，结果应该立即就会显示出来。这就是使用sed编辑器的强大之处。你可
以同时对数据做出多处修改，而所消耗的时间却只够一些交互式编辑器启动而已，
当然，这个简单的测试只是修改了一行数据。不过就算编辑整个文件，处理速度也相差无儿。
The quick brown fox junps over the lazy dog.
S cat datal.txt
The quick brown fox junps over the lazy
The quick browm fox junpe over the lazy
dog .
Eop
The quick browm fox junge over the lazy dog.
$ sed *s/dog/cat/' datal.txt
---
## Page 418
19.1文本处理
403
The quick brown fox junpa over the lazy cat,
The quick brown fox jumpa over the lazy cat.
The quick brown fox jumpa over
The quick brown fox jumpa over the lazy cat.
the lazy cat,
sed命令几乎瞬间就执行完并返回数据。在处理每行数据的同时，结果也显示出来了。可以
在sed编辑器处理完整个文件之前就开始观察结果。
重要的是，要记住，sed编辑器并不会修改文本文件的数据。它只会将修改后的数据发送到
STDOUT。如果你查看原来的文本文件，它仍然保留着原始数据。
 cat datal.txt
The quick brown fox junpa over the lazy dog.
The quick brown fox jumpa over the lazy dog.
The quick brown fox jumpa over the lazy dog.
*fop Azet aqa xaso edm( xog umozg ootnb 9g
19
2.在命令行使用多个编辑器命令
要在sed命令行上执行多个命令时，只要用-e选项就可以了。
S sed -e 'a/brown/green/: a/dog/cat/* datal.txt
The quick green fox jumpa over the lazy cat.
The quick green fox jumpa over the lazy cat.
The quick green fox junpa over the lazy cat,
The quick green fox jumpa over the lazy cat.
两个命令都作用到文件中的每行数据上。命令之间必须用分号隔开，并且在命令末尾和分号
之间不能有空格。
如果不想用分号，也可以用bashshell中的次提示符来分隔命令。只要输人第一个单引号标示
出sed程序脚本的起始（sed编辑器命令列表），bash会继续提示你输人更多命令，直到输人了标示
结束的单引号。
S sed -e *
> a/bromn/green/
>α/fox/elepbant/
> s/dog/cat/* datal.txt