28th Computer Security Foundations Symposium, CSF 2015, Verona,
Italy, 13-17 July, 2015, pages 155–169. IEEE, 2015.
[28] Benjamin Hosp and Poorvi L. Vora. An information-theoretic model
of voting systems. In David Chaum, Miroslaw Kutylowski, Ronald L.
Rivest, and Peter Y. A. Ryan, editors, Frontiers of Electronic Voting,
29.07. - 03.08.2007, volume 07311 of Dagstuhl Seminar Proceedings.
Internationales Begegnungs- und Forschungszentrum fuer Informatik
(IBFI), Schloss Dagstuhl, Germany, 2007.
[29] David Jefferson, Aviel D. Rubin, Barbara Simons, and David Wagner.
Analyzing internet voting security. Communications of the ACM, Special
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:17:36 UTC from IEEE Xplore.  Restrictions apply. 
issue: The problems and potentials of voting systems, 47(10):59–64,
2004.
[30] Hugo Jonker, Sjouke Mauw, and Jun Pang. Privacy and veriﬁability in
voting systems: Methods, developments and trends. Computer Science
Review, 10:1–30, 2013.
[31] A. Juels, D. Catalano, and M. Jakobsson. Coercion-Resistant Electronic
In Proceedings of Workshop on Privacy in the Eletronic
Elections.
Society (WPES 2005), pages 61–70. ACM Press, 2005.
[32] Ari Juels, Dario Catalano, and Markus Jakobsson. Coercion-resistant
electronic elections. In David Chaum, Markus Jakobsson, Ronald L.
Rivest, Peter Y. A. Ryan, Josh Benaloh, Miroslaw Kutylowski, and
Ben Adida, editors, Towards Trustworthy Elections, New Directions in
Electronic Voting, volume 6000 of Lecture Notes in Computer Science,
pages 37–63. Springer, 2010.
[33] Aggelos Kiayias, Thomas Zacharias, and Bingsheng Zhang. DEMOS-2:
Scalable E2E Veriﬁable Elections without Random Oracles. In Indrajit
Ray, Ninghui Li, and Christopher Kruegel, editors, Proceedings of the
22nd ACM SIGSAC Conference on Computer and Communications
Security, Denver, CO, USA, October 12-6, 2015, pages 352–363. ACM,
2015.
[34] Aggelos Kiayias, Thomas Zacharias, and Bingsheng Zhang. End-to-End
Veriﬁable Elections in the Standard Model. In Advances in Cryptology -
EUROCRYPT 2015, volume 9057 of Lecture Notes in Computer Science,
pages 468–498. Springer, 2015.
[35] Steve Kremer, Mark Ryan, and Ben Smyth. Election Veriﬁability in
Electronic Voting Protocols. In Dimitris Gritzalis, Bart Preneel, and
Marianthi Theoharidou, editors, 15th European Symposium on Research
in Computer Security (ESORICS2010), volume 6345 of Lecture Notes
in Computer Science, pages 389–404. Springer, 2010.
[36] Manuel J. Kripp, Melanie Volkamer, and R¨udiger Grimm, editors. 5th
International Conference on Electronic Voting 2012, (EVOTE 2012),
Co-organized by the Council of Europe, Gesellschaft f¨ur Informatik and
E-Voting.CC, July 11-14, 2012, Castle Hofen, Bregenz, Austria, volume
205 of LNI. GI, 2012.
[37] Ralf K¨usters, Tomasz Truderung, and Andreas Vogt. Accountability:
Deﬁnition and Relationship to Veriﬁability. In Proceedings of the 17th
ACM Conference on Computer and Communications Security (CCS
2010), pages 526–535. ACM, 2010. Full version available at http:
//eprint.iacr.org/2010/236/.
[38] Ralf K¨usters, Tomasz Truderung, and Andreas Vogt. Veriﬁability, Privacy,
and Coercion-Resistance: New Insights from a Case Study. In 32nd
IEEE Symposium on Security and Privacy (S&P 2011), pages 538–553.
IEEE Computer Society, 2011.
[39] Ralf K¨usters, Tomasz Truderung, and Andreas Vogt. Clash Attacks
on the Veriﬁability of E-Voting Systems.
In 33rd IEEE Symposium
on Security and Privacy (S&P 2012), pages 395–409. IEEE Computer
Society, 2012.
[40] Ralf K¨usters, Tomasz Truderung, and Andreas Vogt. Formal Analysis of
Chaumian Mix Nets with Randomized Partial Checking. In 35th IEEE
Symposium on Security and Privacy (S&P 2014), pages 343–358. IEEE
Computer Society, 2014.
[41] Lucie Langer. Privacy and veriﬁability in electronic voting. PhD thesis,
Darmstadt University of Technology, 2010.
[42] Thea Peacock, Peter YA Ryan, Steve Schneider, and Zhe Xia. Veriﬁable
voting systems. Computer and Information Security Handbook, pages
1103–1125, 2013.
[43] Stefan Popoveniuc, John Kelsey, Andrew Regenscheid, and Poorvi L.
Vora. Performance Requirements for End-to-End Veriﬁable Elections. In
Douglas W. Jones, Jean-Jacques Quisquater, and Eric Rescorla, editors,
2010 Electronic Voting Technology Workshop / Workshop on Trustworthy
Elections, EVT/WOTE ’10, Washington, D.C., USA, August 9-10, 2010.
USENIX Association, 2010.
Jordi Puigalli and Sandra Guasch. Cast-as-Intended Veriﬁcation in
Norway. In Kripp et al. [36], pages 49–63.
[44]
[45] R. L. Rivest and W. D. Smith. Three Voting Protocols: ThreeBallot,
VAV and Twin. In USENIX/ACCURATE Electronic Voting Technology
(EVT 2007), 2007.
[46] Kazue Sako and Joe Kilian. Receipt-free mix-type voting scheme
- A practical solution to the implementation of a voting booth.
In
Louis C. Guillou and Jean-Jacques Quisquater, editors, Advances in
Cryptology - EUROCRYPT ’95, International Conference on the Theory
and Application of Cryptographic Techniques, Proceeding, volume 921
of Lecture Notes in Computer Science, pages 393–403. Springer, 1995.
[47] Ben Smyth, Steven Frink, and Michael R. Clarkson. Computational
Election Veriﬁability: Deﬁnitions and an Analysis of Helios and JCJ.
Technical Report 2015/233, Cryptology ePrint Archive, 2015. http:
//eprint.iacr.org/2015/233.
[48] Drew Springall, Travis Finkenauer, Zakir Durumeric, Jason Kitcat,
Harri Hursti, Margaret MacAlpine, and J. Alex Halderman. Security
Analysis of the Estonian Internet Voting System. In Gail-Joon Ahn,
Moti Yung, and Ninghui Li, editors, Proceedings of the 2014 ACM
SIGSAC Conference on Computer and Communications Security, pages
703–715. ACM, 2014.
[49] Alan Szepieniec and Bart Preneel. New Techniques for Electronic Voting.
USENIX Journal of Election Technology and Systems (JETS), 3(2):46 –
69, 2015. Cryptology ePrint Archive, Report 2015/809.
[50] Georgios Tsoukalas, Kostas Papadimitriou, Panos Louridas, and Panayi-
otis Tsanakas. From Helios to Zeus.
In 2013 Electronic Voting
Technology Workshop / Workshop on Trustworthy Elections, EVT/WOTE
’13, Washington, D.C., USA, August 12-13, 2013. USENIX Association,
2013.
[51] Douglas Wikstr¨om. A Sender Veriﬁable Mix-Net and a New Proof of a
Shufﬂe. In Bimal K. Roy, editor, Advances in Cryptology - ASIACRYPT
2005, 11th International Conference on the Theory and Application
of Cryptology and Information Security, Proceedings, volume 3788 of
Lecture Notes in Computer Science, pages 273–292. Springer, 2005.
[52] Scott Wolchok, Eric Wustrow, J. Alex Halderman, Hari K. Prasad,
Arun Kankipati, Sai Krishna Sakhamuri, Vasavya Yagati, and Rop
Gonggrijp. Security analysis of India’s electronic voting machines.
In ACM Conference on Computer and Communications Security (CCS
2010), pages 1–14, 2010.
[53] Scott Wolchok, Eric Wustrow, Dawn Isabel, and J. Alex Halderman.
Attacking the Washington, D.C. Internet Voting System. In 16th Intl.
Conference on Financial Cryptography and Data Security (FC’12),
2012.
SYMBOLIC VERIFIABILITY BY KREMER ET AL.
APPENDIX A
In this section, we focus on the veriﬁability deﬁnition by
Kremer et al. [35] who divide veriﬁability into three sub-
properties.
• Individual veriﬁability: a voter should be able to check
• Universal veriﬁability: anyone should be able to check
that the result corresponds to the content of the ballot box.
• Eligibility veriﬁability: only eligible voter may vote.
that his vote belongs to the ballot box.
Since the proposed formal deﬁnition for eligibility veriﬁability
is rather long and technical, we focus here on individual and
universal veriﬁability.
A. Model
In symbolic models, messages are represented by terms.
Kremer et al. model protocols as processes in the applied-pi
calculus [5]. A voting speciﬁcation is a pair (V,A) where V
is a process that represents the program of a voter while A is
an evaluation context that represents the (honest) authorities
and the infrastructure. All voters are (implicitly) assumed to
be honest.
B. Individual and Universal Veriﬁability
We can express the deﬁnitions of Kremer et al. indepen-
dently of the execution model, which slightly extends their
deﬁnitions.
The symbolic veriﬁability deﬁnition by Kremer et al. [35]
assumes that each voter Vi performs an individual test ϕIV
, and
i
that observers perform a universal test ϕUV. The individual test
ϕIV
takes as input the voter’s vote and all his local knowledge
i
795795
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:17:36 UTC from IEEE Xplore.  Restrictions apply. 
(e.g. randomness, credentials, and public election data) as well
as a partial view of the ballot box (which should correspond to
his ballot). The universal test ϕUV takes as input the outcome
of the election, the public election data, the ballot box, and
possibly some extra data generated during the protocol used
for the purposes of veriﬁcation. These tests should satisfy the
following conditions for any execution.
Deﬁnition 11 (Individual and Universal Veriﬁability). A voting
speciﬁcation (V,A) satisﬁes individual and universal veriﬁability
if for all n ∈ N,
i (b)∧ ϕIV
∀i, j : ϕIV
ϕUV (B,r)∧ ϕUV (B,r
(cid:7)
j (b) ⇒ i = j
(cid:16)) ⇒ r ≈ r
(cid:16)
i (bi)∧ ϕUV (B,r) ⇒ c ≈ r
ϕIV
1≤i≤n
(1)
(2)
(3)
evaluates to ”false”, the judge outputs ”reject”. Otherwise,
the judge iteratively triggers each voter Vi in order to verify
her ballot. If every voter outputs ”accept”, the judge outputs
”accept”, and otherwise ”false”. (This models the requirement
in the deﬁnition of Kremer et al. that all voters have to verify
successfully in order for the run to be accepted. It also means
that if not all voters verify, no guarantees are given.)
End-to-end honest veriﬁability. Let the goal γIUV be the
sub-goal of γ0 in which all voters produce pairwise different
ballots. Then, individual and universal veriﬁability by Kremer
et al. (Deﬁnition (11)) can essentially be characterized by the
fact that the protocol PKRS is (γIUV ,0)-veriﬁable by the judge
J.
(cid:6)
1≤i≤n ϕIV
i
To see this, ﬁrst observe that the judge J as deﬁned above
(bi)∧
outputs ”accept” if and only if the Condition
ϕUV (B,r) in Condition (3) evaluates to true. As we already
pointed out, the implication c ≈ r in Condition (3) describes
the goal γ0. Condition (1) stating that there are no clashes
between the ballots of honest voters is also satisﬁed in γIUV by
deﬁnition. Thus, for a protocol which achieves individual and
universal veriﬁability according to Deﬁnition 11, the probability
that the judge J in PKRS accepts a protocol run in which γIUV
is not fulﬁlled, is negligible (δ = 0), i.e., we have Pr[π((cid:5)) (cid:7)→
¬γIUV , (J: accept)] ≤ δ = 0 with overwhelming probability as
in Deﬁnition 1.
SYMBOLIC VERIFIABILITY BY CORTIER ET AL.
APPENDIX B
In this section, we study the symbolic veriﬁability deﬁnition
by Cortier et al. [18]. Cortier et al. also deﬁne different notions
of veriﬁability: individual, universal, and end-to-end veriﬁability.
They prove that under the assumption of an additional property,
called ”no clash”, individual and universal veriﬁability imply
end-to-end veriﬁability in their symbolic model.
A. Model
As in [35], the deﬁnitions of Cortier et al. are cast in a
symbolic model. That is, messages are represented by terms
and protocols are deﬁned as symbolic processes. Additionally,
Cortier et al. assume that voters reach several successive states
denoted as follows:
• Vote(i, c, cred):
• MyBallot(i, c, b):
the voter i has prepared a ballot b
• VHappy(i, c, cred, B): the voter i with credential cred has
cast a choice c and is happy with the content of the ballot
box B.
credential cred and is willing to cast a choice c.
the voter with identity i owns some
corresponding to the choice c.
Cortier et al. [18] also assume a judge that checks whether
a result r corresponds to a ballot box B and reaches a state
JHappy(B,r) whenever this is the case.
After the casting and before the tallying, some ballots
may be removed because they are invalid (e.g., due to ﬂawed
signatures or zero-knowledge proofs) or simply because some
voters have voted several times and only the last vote counts.
This yields a “sanitized” list of ballots Bsan.
B. Individual Veriﬁability
Intuitively, individual veriﬁability by Cortier et al. holds
true if whenever honest voters perform the checks prescribed
by the protocol, then their ballots belong to the ballot box.
796796
where c = (c1, . . . , cn) are the choices of the voters, b is an
arbitrary ballot, B is the (content of the) bulletin board, r
and r(cid:16) are possible outcomes, and ≈ denotes equality up to
permutation.
Intuitively, Condition (1) ensures that two distinct voters
may not agree on the same ballot,
i.e., no clash occurs.
Condition (2) guarantees the unicity of the outcome: if the
observers successfully check the execution, there is at most
one outcome they may accept (up to permutation). Finally,
Condition (3) is the key property: if all tests succeed, the
outcome should correspond to the voters’ intent. Observe that,
since all voters are assumed to be honest, the implication c ≈ r
in Condition (3) can be described by the goal γ0 (see below).
C. Discussion
Deﬁnition (11) is tailored to a speciﬁc tally: the outcome of
the election has to be the sequence of the votes. Moreover, the
deﬁnition assumes that the ballot of the voter can be retrieved
from the ballot box, which does not apply to ThreeBallot for
example. The main restriction is that all voters are assumed to
be honest.
Observe that by Condition (3) the goal γ0 is guaranteed
only for protocol runs in which all voters successfully verify
their ballots (and the universal test is positive). For the other
runs, the outcome can be arbitrary. However, the assumption
that all honest voters verify their ballot is unrealistically strong.
Therefore, even though this deﬁnition uses the strong goal γ0,
this assumption makes the deﬁnition weak.
D. Casting in the KTV Framework
Protocol PKRS. The set of agents Σ consists of the voters, the
bulletin board B, the judge J, and the remaining participants.