certname = server.domain.com #也可以不定义，以主机名为准
server =
report_server 
listen =
localconfig = $vardir/localconfig
classfile = $vardir/classes.txt
reports = log,
pluginsync 
authconfig =
manifest =
fileserverconfig = /etc/puppet/fileserver.conf
ssldir =
rundir = /var/run/puppet
logdir = /var/log/puppet
confdir = /etc/puppet 
#
vardir = /var/lib/puppet
#报告文件生成目录，目录以主机名命令开
：environment= production 运行环境配置，默认为生产环境
#服务端配置选项
 server.domain.com
true
true
 $vardir/ssl
：true
=server
#客户端的报告系统配置，
foreman#报告的方式与类型
 http, tagmail,
#插件同步配置对 facter 自定义有效
监听端口，
#默认不填，此时以下面的 $server 变量值为准
可以使用以下命令查看：
1og
置
改
口
---
## Page 24
是.PP。
注意
放在 /etc/puppet/manifests 目录中。通常我们在会此文件中定义一些全局变量。
1.6.2
“清单”
site.pp 的目的主要是告诉 Puppet 去哪里寻找并载入所有主机相关的配置。 site.pp 默认存
提示
Puppet Agent 客户端主配置文件-
Puppet Master 服务器端主配置文件一
通常我们应该如何配置主配置文件呢？下面分别进行介绍。
不同版本的配置文件可参考：http://docs.puppetlabs.com/references/。
[agent]
[main]
[master]
[main]#全局配置
主机配置文件 site.pp
report = true
runinterval = 1800
#本地缓存配置目录，
classfile = $vardir/classes.txt
#（--loadclasses）参数指定
pluginsync = true
ssldir = $vardir/ssl 
logdir:
environment = production
pluginsync = true
#SSL 签发认证文件目录，
rundir = /var/run/puppet
#PID 文件目录，默认为‘$vardir/run‘
#vardir 用来存放缓存数据、配置、客户端传回的报告及文件备份
server
listen = true
localconfig =
#关联与检索配置文件目录，默认为‘$confdir/classes.txt'，也可以使用
rundir:
certname=
ogdir
rardir
（Manifests）是Puppet 中的术语，指的是包含配置信息的文件。清单文件的后缀
#服务器端配置
#客户端配置
=
puppet.domain.com
/var/run/puppet
/var/log/puppet
server.domain.com
 $vardir/localconfig
，默认为'$confdir/localconfig'
默认为
'$confdir/ssl'
puppet.conf.
BOOKS
puppet.conf。
#检测时长1800秒，30分钟
#
#
指
发
监听进程
配
指
报
开
定 Master 地址
送报告
报告发送至1og 和 foreman
启插件同步
第1章认识Puppet·13
---
## Page 25
14·第一部分准备篇
注意
用做大的变动。
文件必须添加对每个名称空间的访问权限。以下就是针对不同名称空间的权限配置，通常不
1.6.3
当 puppet.conf 配置 Listen=true 时必须要配置此文件，否则 Puppet 启动时会报出‘Will
namespaceauth.conf 文件用于指定允许谁访问每个名称空间。要创建 namespaceauth.conf
以下是配置的内容：
#可以直接写节点配置文件，在所有 Agent上创建其内容为"HelloWorld"的
#建议读者动手配置以上内容
$ntpserver
#设置环境变量
Exec { path => "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
通常不使用以上命令生成 site.pp 配置文件，主要填写的内容为：
puppet apply --genmanifest> /etc/puppet/manifests/site.pp
生成 Puppet 主机配置文件 site.pp 的命令如下 :
resource]
[puppetreports]
[puppetbucket]
[puppetrunner]
[puppetmaster]
[fileserver] 
import
import
import
node default {
# site.pp - all agent configure 
allow server.domain.com
allow *.domain.com
allow *.domain.com
 allow culain.domain.com
 allow *.domain.com
allow *.domain.com
认证与安全配置文件
"test.domain.com.pp"
"nodes/*.pp"
"modules.pp"
file
"ntp.domain.com"
{uiPTxom oTeH <= 4uauo :"4x'Idue/du/
#加载主机信息，
#加载模块配置文件，
华章图书
#加载测试主机
，可以使用通配符，也可以定义多组目录
#指定软件包的安装方法为 yum
#指定全局 fileserver 变量
可以不配置
---
## Page 26
置语法就容易理解了。其语法规则如下：
据资源定义访问权限。其配置的参考如下：
详细信息可参考：htp://docs.puppetlabs.com/guides/rest auth_conf.html。
auth.conf认证配置文件是 Puppet 中的 ACL，主要应用于 Puppet’s REST API。例如，
method find, search
auth yes
path /facts
我们再来看 auth.conf 的配置文件:
[auth[enthicated]  yes|nolonlofflany]]
path[~](/path/to/resource|regex}
只看上面 auth.conf 配置文件，读者可能难以理解配置文件的意义，参考 Puppet ACL 配
allow magpie.example.com,
method find, search
auth yes 
path/facts
allow magpie.example.com
auth any
path /facts
allow magpie.example.com
environment production
path /certificate_status
allow magpie.example.com
environment override
auth any
path
#以 auth.conf 为例
[allow {hostname|certname|*}]
method {list of methods}]
environment {list of environments}]
nethodsave
 dashboard.example.com
#允许配置
#授权配置
#方法命令配置
#环境配置
#目录配置
第1章认识Puppet·15
当
---
## Page 27
16第一部分准备篇
节来讲解它的优化及配置。fileserver.conf 配置如下：
户端允许/禁止访问 Master 的文件目录。fileserver.conf 的使用非常灵活，我们将在第 16 章
1.6.6
即可。默认由本机 sendmail发送。
需要在 Puppet Master 端配置 reports=tagmail，需要在 Puppet Agent 端配置 report=true，同时
1.6.5
复制到客户端对应目录下，以实现自动认证的配置。
自动化配置来说省去了很多工作。在下一章介绍安装时也会讲到。
1.6.4
tagmail.conf 将配置的 Puppet 报告以邮件形式按要求发送给收件人。要使用此项功能,
autosign.conf 允许配置文件中的客户端自动进行签名验证，省去人工交互的过程。这对
#配置方法
#也可以是一个类的名字class names，
将这些文件复制到客户端相同的目录下即可。
这时将在本地生成 client.domain.com 客户端证书文件，文件及其所在目录为：
同时 Puppet 客户端的证书也可以采用提前在 Master 上生成的方法，将生成的证书文件
#允许单一客户端或者域名匹配，主机名匹配
配置文件参考如下：
[mount_point]
webserver,
all: PI:EMAIL 
/var/lib/puppet/ssl/certs/ca.pem
/var/lib/puppet/ssl/certs/client.domain.com.pem
/var/lib/puppet/ssl/private_keys/client.domain.com.pem
puppet cert generate client.domain.com 
自动生成证书的命令为：
.local
*.scratch.example.com
rebuilt.example.com
文件系统配置文件
报告系统配置
path /path/to/files
客户端自动认证配置
!mailserver: PI:EMAIL 
debug、
info、notice、
一个标签名tags
warning、err、alert、emerg、crit 或者 verbose 
---
## Page 28
毕竟任何一款软件的使用都离不开基础原理的掌握。
地掌握它的原理。
否适合在你的环境当中使用。如果你用过 Puppet 并有使用经验，通过本章的学习能够更深人
工作原理、核心配置文件的相关知识，使读者能够熟练掌握 Puppet 的基本用法和工作原理。
版本的大幅度变动、Puppet 3.0 版本的最新特征。接着通过学习 Puppet 组织结构、Puppet 的
1.7本章小结
将 Puppet 原理及核心信息放在第1章来讲解，
如果你没有了解过 Puppet，通过本章便能大致了解 Puppet 是什么、它有什么用途、是
接下来一章将介绍 Puppet 在不同操作系统平台的安装与使用。
通过对本章的学习，我们首先了解了 Puppet 的发展历程、各版本存在的差异、Puppet 2.6
[files］
#的文件。以下为其配置方法
allow *.domain.com
path /etc/puppet/files
deny *.wireless.example.com
allow
*.example.com
华章图书
HZBOOKS
，是为了让大家能更全面地了解 Puppet,
第1章认识Puppet·17
---
## Page 29
2.1Puppet 对各系统平台的支持±
绍如何升级 Puppet 及升级时的注意事项。
创建 File 资源来应用实践。然后介绍在 Windows 平台的安装方法、使用方法和支持。最后介
统”的 Mac 平台上的安装。接着详细讲解 Puppet 在主流 Linux、Mac 平台上的使用方法，并
安装步骤。其次讲解 Puppet 在主流 Linux 操作系统平台的安装方法及被称为“最完美操作系
真正开始使用 Puppet。
的组织结构、工作原理、工作流程、数据流走向帮助读者逐步掌握 Puppet。从本章起我们将
我们下面就看看 Puppet 主流版本（2.6、2.7、3.0）对各操作系统平台的支持。
 Mandriva Corporate Server 4
Puppet 主流版本支持的 Linux 版本如下：
（1）Linux
第1章介绍了什么是Puppet，以及 Puppet 的作用及优势。上一章我们通过学习 Puppet
 Gentoo Linux
Fedora 15 及更高版本
 Ubuntu, version 8.04 LTS 及更高版本
口Debian version 5(Lenny)及更高版本
 Oracle Linux 4 及更高版本
 Scientific Linux 4 及更高版本
 CentOS version 4及更高版本
RedHat Enterprise Linux 4及更高版本
Puppet 安装与配置
第2章
S
---
## Page 30
2.3Puppet 的安装步骤
装 Ruby 1.8.7 版本。有关 Puppet 与 Ruby 的版本对应关系如表 2-1 所示。
本之上，并且已经支持最新版 Ruby1.9。介于 Puppet 对 Ruby1.8.7的完美支持，建议读者安
2.2
4）通过命令/etc/init.d/puppetmaster start 启动 Server 或者以非进程的方式启动 Server。
在安装 Puppet 前，首先要确认已经正确安装了 Ruby。Puppet 可以运行在 Ruby 不同版
3）设置主机名、域名解析或指定 hosts。
1）安装 Ruby、Ruby-libs 和 Ruby-shadow，用于进行用户和组管理。
Puppet 的安装可以细分8步进行，详细如下：
Windows 7（Puppet 2.7.6 以上更高的版本）
Puppet主流版本支持的 Windows 版本如下：
HP-UX
AIX5.3及更高版本
 Oracle Solaris 10 及更高版本
Mac OS X 10.5 及更高版本（Puppet 2.7 以前的版本只支持 Mac OS X 10.4）
Puppet 主流版本支持的 Other UNIX 版本如下：
口OpenBSD 4.1 及更高版本
口FreeBSD 4.7及更高版本
Puppet 主流版本支持的 BSD 版本如下:
Puppet 对 Ruby 的支持
（4）Windows
（3）Other UNIX
（2）BSD