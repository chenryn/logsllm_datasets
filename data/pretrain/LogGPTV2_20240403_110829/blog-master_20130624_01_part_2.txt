---+---------------+---------+----------  
 virtualxid |          |          |      |       | 3/460443   |               |         |       |          | 3/460443           | 63  
17 | ExclusiveLock | t       | t  
 advisory   |    16385 |          |      |       |            |               |       1 |     2 |        1 | 3/460443           | 63  
17 | ExclusiveLock | f       | f  
(2 rows)  
```  
会话B无法获得这个advisory ExclusiveLock, 因为它与会话A冲突.  
### 三. 查看行锁  
首先要安装pgrowlocks模块  
```  
digoal=# create extension pgrowlocks;  
CREATE EXTENSION  
```  
SESSION A :   
```  
digoal=# begin;  
BEGIN  
digoal=# update lock_test set info='new' where id=1;  
UPDATE 1  
```  
SESSION X :   
```  
digoal=# select * from pgrowlocks('lock_test');  
 locked_row | locker  | multi |   xids    |       modes       |  pids    
------------+---------+-------+-----------+-------------------+--------  
 (0,8)      | 3253077 | f     | {3253077} | {"No Key Update"} | {6102}  
(1 row)  
```  
测试阻断 :   
SESSION A :   
```  
digoal=# begin;  
BEGIN  
digoal=# lock table lock_test in access exclusive mode;  
LOCK TABLE  
```  
SESSION B :   
```  
digoal=# select * from pgrowlocks('lock_test');  
```  
会话B处于等待状态.  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/163877040201172492217830/  
2\. http://blog.163.com/digoal@126/blog/static/163877040201210134586363/  
3\. http://blog.163.com/digoal@126/blog/static/16387704020130305109687/  
4\. http://blog.163.com/digoal@126/blog/static/1638770402013463425483/  
5\. http://blog.163.com/digoal@126/blog/static/16387704020130249109133/  
6\. http://blog.163.com/digoal@126/blog/static/1638770402011515105557166/  
7\. http://blog.163.com/digoal@126/blog/static/16387704020130312271679/  
8\. http://blog.163.com/digoal@126/blog/static/16387704020131172754749/  
9\. http://blog.163.com/digoal@126/blog/static/16387704020130249109133/  
10\. http://www.postgresql.org/docs/9.3/static/pgrowlocks.html  
11\. http://www.postgresql.org/docs/9.3/static/view-pg-locks.html  
12\. http://www.postgresql.org/docs/9.3/static/explicit-locking.html  
13\. src/backend/storage/lmgr/README  
14\.   
src/include/storage/lock.h  
```  
/*  
 * LOCKTAG is the key information needed to look up a LOCK item in the  
 * lock hashtable.      A LOCKTAG value uniquely identifies a lockable object.  
 *  
 * The LockTagType enum defines the different kinds of objects we can lock.  
 * We can handle up to 256 different LockTagTypes.  
 */  
typedef enum LockTagType  
{  
        LOCKTAG_RELATION,                       /* whole relation */  
        /* ID info for a relation is DB OID + REL OID; DB OID = 0 if shared */  
        LOCKTAG_RELATION_EXTEND,        /* the right to extend a relation */  
        /* same ID info as RELATION */  
        LOCKTAG_PAGE,                           /* one page of a relation */  
        /* ID info for a page is RELATION info + BlockNumber */  
        LOCKTAG_TUPLE,                          /* one physical tuple */  
        /* ID info for a tuple is PAGE info + OffsetNumber */  
        LOCKTAG_TRANSACTION,            /* transaction (for waiting for xact done) */  
        /* ID info for a transaction is its TransactionId */  
        LOCKTAG_VIRTUALTRANSACTION, /* virtual transaction (ditto) */  
        /* ID info for a virtual transaction is its VirtualTransactionId */  
        LOCKTAG_OBJECT,                         /* non-relation database object */  
        /* ID info for an object is DB OID + CLASS OID + OBJECT OID + SUBID */  
        /*  
         * Note: object ID has same representation as in pg_depend and  
         * pg_description, but notice that we are constraining SUBID to 16 bits.  
         * Also, we use DB OID = 0 for shared objects such as tablespaces.  
         */  
        LOCKTAG_USERLOCK,                       /* reserved for old contrib/userlock code */  
        LOCKTAG_ADVISORY                        /* advisory user locks */  
} LockTagType;  
/*  
 * The LOCKTAG struct is defined with malice aforethought to fit into 16  
 * bytes with no padding.  Note that this would need adjustment if we were  
 * to widen Oid, BlockNumber, or TransactionId to more than 32 bits.  
 *  
 * We include lockmethodid in the locktag so that a single hash table in  
 * shared memory can store locks of different lockmethods.  
 */  
typedef struct LOCKTAG  
{  
        uint32          locktag_field1; /* a 32-bit ID field */  
        uint32          locktag_field2; /* a 32-bit ID field */  
        uint32          locktag_field3; /* a 32-bit ID field */  
        uint16          locktag_field4; /* a 16-bit ID field */  
        uint8           locktag_type;   /* see enum LockTagType */  
        uint8           locktag_lockmethodid;   /* lockmethod indicator */  
} LOCKTAG;  
/*  
 * These macros define how we map logical IDs of lockable objects into  
 * the physical fields of LOCKTAG.      Use these to set up LOCKTAG values,  
 * rather than accessing the fields directly.  Note multiple eval of target!  
 */  
#define SET_LOCKTAG_RELATION(locktag,dboid,reloid) \  
        ((locktag).locktag_field1 = (dboid), \  
         (locktag).locktag_field2 = (reloid), \  
         (locktag).locktag_field3 = 0, \  
         (locktag).locktag_field4 = 0, \  
         (locktag).locktag_type = LOCKTAG_RELATION, \  
         (locktag).locktag_lockmethodid = DEFAULT_LOCKMETHOD)  
... 设置其他类型说的macro略.  
```  
详见lock.h  
https://www.postgresql.org/docs/devel/static/pgrowlocks.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")