假设您要在第三个使用设备总线 `ID 0.0.202b`{.literal} 的 DASD
分区中添加另一个物理卷，只要在 `zipl.conf`{.filename} 中将
`rd_dasd=0.0.202b`{.literal} 添加到引导内核的参数行即可：
:::
``` screen
[defaultboot]
	default=linux
	target=/boot/
[linux]
	image=/boot/vmlinuz-2.6.32-19.el7.s390x
	ramdisk=/boot/initramfs-2.6.32-19.el7.s390x.img
	parameters="root=/dev/mapper/vg_devel1-lv_root rd.dasd=0.0.0200,use_diag=0,readonly=0,erplog=0,failfast=0 rd.dasd=0.0.0207,use_diag=0,readonly=0,erplog=0,failfast=0 rd.dasd=0.0.202b  rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!condev"
```
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
确保 `/etc/zipl.conf`{.filename} 中内核命令行的长度不超过 896
字节。否则将无法保存引导装载程序，同时安装会失败。
:::
:::
:::
::: para
运行 `zipl`{.command} 为下一次 IPL 应用对 `/etc/zipl.conf`{.filename}
的更改：
:::
``` screen
# zipl -V
Using config file '/etc/zipl.conf'
Target device information
  Device..........................: 5e:00
  Partition.......................: 5e:01
  Device name.....................: dasda
  DASD device number..............: 0201
  Type............................: disk partition
  Disk layout.....................: ECKD/compatible disk layout
  Geometry - heads................: 15
  Geometry - sectors..............: 12
  Geometry - cylinders............: 3308
  Geometry - start................: 24
  File system block size..........: 4096
  Physical block size.............: 4096
  Device size in physical blocks..: 595416
Building bootmap in '/boot/'
Building menu 'rh-automatic-menu'
Adding #1: IPL section 'linux' (default)
  kernel image......: /boot/vmlinuz-2.6.32-19.el7.s390x
  kernel parmline...: 'root=/dev/mapper/vg_devel1-lv_root rd.dasd=0.0.0200,use_diag=0,readonly=0,erplog=0,failfast=0 rd.dasd=0.0.0207,use_diag=0,readonly=0,erplog=0,failfast=0 rd.dasd=0.0.202b rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!condev'
  initial ramdisk...: /boot/initramfs-2.6.32-19.el7.s390x.img
  component address: 
    kernel image....: 0x00010000-0x00a70fff 
    parmline........: 0x00001000-0x00001fff 
    initial ramdisk.: 0x02000000-0x022d2fff 
    internal loader.: 0x0000a000-0x0000afff 
Preparing boot device: dasda (0201).
Preparing boot menu
  Interactive prompt......: enabled 
  Menu timeout............: 15 seconds
  Default configuration...: 'linux' 
Syncing disks...
Done.
```
:::
::: section
::: titlepage
### [⁠]{#chap-post-installation-configuration-s390.html#sect-post-installation-dasds-no-root-s390}17.1.3.2. DASD 不是 Root 文件系统一部分 {.title}
:::
::: para
DASD 不是 root 文件系统的一部分，就是说要在 `/etc/dasd.conf`{.filename}
中永久配置 *data disks*。每行包含一个 DASD。每行都以 DASD 的设备总线 ID
开始，后接以空格或者 tab 字符间隔的选项。选项由 key-value 对组成，其中
key 和 value 值以等号分开。
:::
::: para
key 与 DASD 可能包含的所有有效 `sysfs`{.systemitem} 属性对应。value
可写为 key 的 `sysfs`{.systemitem} 属性。`/etc/dasd.conf`{.filename}
中的条目是活跃的，并在将 DASD 添加到系统中时使用 udev
配置。在引导时，会添加所有系统可见的 DASD 并触发
[**udev**]{.application}。
:::
::: para
`/etc/dasd.conf`{.filename} 内容示例：
:::
``` screen
0.0.0207
0.0.0200 use_diag=1 readonly=1
```
::: para
只有在系统重启后，或者使用系统的 I/O 配置动态添加新 DASD（即将 DASD
附加到 z/VM 中）后，修改的 `/etc/dasd.conf`{.filename}
才会生效。也可以为之前不活跃的 DASD 在 `/etc/dasd.conf`{.filename}
中触发激活新条目，方法是执行以下命令：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    使用 `cio_ignore`{.command} 程序从忽略设备列表中删除
    DASD，并使其出现在 Linux 中：
    :::
    ``` screen
    # cio_ignore -r device_number
    ```
    ::: para
    例如：
    :::
    ``` screen
    # cio_ignore -r 021a
    ```
2.  ::: para
    将 *`uevent`* 属性写入该设备触发激活：
    :::
    ``` screen
    # echo add > /sys/bus/ccw/devices/device-bus-ID/uevent
    ```
    ::: para
    例如：
    :::
    ``` screen
    # echo add > /sys/bus/ccw/devices/0.0.021a/uevent
    ```
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-post-installation-configuration-s390.html#sect-post-installation-fcp-attached-luns-s390}17.2. 添加使用 FCP 的逻辑单位（LUN） {.title}
:::
::: para
以下是如何添加 FCP LUN 的示例。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
如果在 z/VM 中运行，请确定将 FCP 适配器附加到 z/VM
虚拟机中。要在产品环境中形成多路径，则必须至少在两个不同的物理适配器中（CHPID）中有两个
FCP 设备。例如：
:::
``` screen
CP ATTACH FC00 TO * 
CP ATTACH FCD0 TO *
```
:::
:::
::: section
::: titlepage
## [⁠]{#chap-post-installation-configuration-s390.html#sect-post-installation-fcp-attached-luns-dynamic-s390}17.2.1. 动态激活 FCP LUN {.title}
:::
::: para
按以下步骤操作激活 LUN：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    使用 `cio_ignore`{.command} 程序从忽略设备列表中删除 FCP
    适配器，并使其出现在 Linux 中：
    :::
    ``` screen
    # cio_ignore -r device_number
    ```
    ::: para
    使用 FCP 适配器设备号替换 *device_number*。例如：
    :::
2.  ::: para
    要使 FCP 适配器在线，请使用以下命令：
    :::
    ``` screen
    # chccwdev -e fc00
    ```
3.  ::: para
    确认 zfcp 设备驱动程序自动端口扫描找到的所需 WWPN：
    :::
    ``` screen
    # ls -l /sys/bus/ccw/drivers/zfcp/0.0.fc00/
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630040710b
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x50050763050b073d
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630e060521
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630e860521
    -r--r--r--.  1 root root 4096 Apr 28 18:17 availability
    -r--r--r--.  1 root root 4096 Apr 28 18:19 card_version
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 cmb_enable
    -r--r--r--.  1 root root 4096 Apr 28 18:17 cutype
    -r--r--r--.  1 root root 4096 Apr 28 18:17 devtype
    lrwxrwxrwx.  1 root root    0 Apr 28 18:17 driver ->  ../../../../bus/ccw/drivers/zfcp
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 failed
    -r--r--r--.  1 root root 4096 Apr 28 18:19 hardware_version
    drwxr-xr-x. 35 root root    0 Apr 28 18:17 host0
    -r--r--r--.  1 root root 4096 Apr 28 18:17 in_recovery
    -r--r--r--.  1 root root 4096 Apr 28 18:19 lic_version
    -r--r--r--.  1 root root 4096 Apr 28 18:17 modalias
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 online
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_d_id
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_wwnn
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_wwpn
    --w-------.  1 root root 4096 Apr 28 18:19 port_remove
    --w-------.  1 root root 4096 Apr 28 18:19 port_rescan
    drwxr-xr-x.  2 root root    0 Apr 28 18:19 power
    -r--r--r--.  1 root root 4096 Apr 28 18:19 status
    lrwxrwxrwx.  1 root root    0 Apr 28 18:17 subsystem ->  ../../../../bus/ccw
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 uevent
    ```
4.  ::: para
    通过将 FCP LUN 添加到要访问 LUN 的端口（WWPN）激活它：
    :::
    ``` screen
    # echo 0x4020400100000000 > /sys/bus/ccw/drivers/zfcp/0.0.fc00/0x50050763050b073d/unit_add
    ```
5.  ::: para
    找到分配的 SCSI 设备名称：
    :::
    ``` screen
    # lszfcp -DV
    /sys/devices/css0/0.0.0015/0.0.fc00/0x50050763050b073d/0x4020400100000000
    /sys/bus/ccw/drivers/zfcp/0.0.fc00/host0/rport-0:0-21/target0:0:21/0:0:21:1089355792
    ```
:::
:::
::: section
::: titlepage
## [⁠]{#chap-post-installation-configuration-s390.html#sect-post-installation-fcp-attached-luns-persistent-s390}17.2.2. 永久激活 FCP LUN {.title}
:::
::: para
上述说明描述了如何在运行的系统中动态激活 FCP
LUN。但是这种更改不是永久的，重启后无法保留。如何将在您的 Linux 系统中对
FCP 配置的修改保留下来要看 FCP LUN 是否属于 root
文件系统。必须在引导进程早期使用 `initramfs`{.systemitem} 激活那些 root
文件系统所需的 FCP LUN 方可将其挂载到 root
文件系统中。`cio_ignore`{.command}
命令是明确用于永久设备配置，您不需要在忽略列表中手动释放设备。
:::
::: section
::: titlepage
### [⁠]{#chap-post-installation-configuration-s390.html#sect-post-installation-fcp-attached-luns-on-root-s390}17.2.2.1. FCP LUN 是 Root 文件系统的一部分 {.title}
:::
::: para
添加作为 root 文件系统一部分的 FCP LUN 时唯一需要修改的文件是
`/etc/zipl.conf`{.filename}，然后运行 [**zipl**]{.application}
引导装载程序工具。不需要重新生成 `initramfs`{.systemitem}。
:::
::: para
Red Hat Enterprise Linux 提供在引导进程早期激活 FCP LUN
的参数：*`rd_zfcp=`*。该参数值是一个用逗号分开的设备总线 ID 列表，WWPN
是以 `0x`{.literal} 为前缀的 16 位十六进制数字，FCP LUN 是以
`0x`{.literal} 为前缀后接多个 0 的 16 位十六进制数。
:::
::: para
下面的 `zipl.conf`{.filename} 示例适用于使用在两个 FCP LUN
分区中的物理卷作为 LVM 卷组
`vg_devel1`{.systemitem}，该卷组中包括一个用于 root 文件系统的逻辑卷
`lv_root`{.systemitem}。为方便演示，该示例显示没有多路径的配置。
:::
``` screen
[defaultboot]
	default=linux
	target=/boot/
[linux]
	image=/boot/vmlinuz-2.6.32-19.el7.s390x
	ramdisk=/boot/initramfs-2.6.32-19.el7.s390x.img
	parameters="root=/dev/mapper/vg_devel1-lv_root 
	rd.zfcp=0.0.fc00,0x5105074308c212e9,0x401040a000000000 
	rd.zfcp=0.0.fc00,0x5105074308c212e9,0x401040a100000000 
	rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 
	SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!condev"
```
::: para
要在包含第三 FCP LUN（其设备总线 ID 为 0.0.fc00；WWPN
0x5105074308c212e9；FCP LUN
0x401040a300000000）的分区中另一个物理卷，只要在 `zipl.conf`{.filename}
的引导内核参数行中添加
`rd_zfcp=0.0.fc00,0x5105074308c212e9,0x401040a300000000`{.literal}
即可。例如：
:::
``` screen
[defaultboot]
	default=linux
	target=/boot/
[linux]
	image=/boot/vmlinuz-2.6.32-19.el7.s390x
	ramdisk=/boot/initramfs-2.6.32-19.el7.s390x.img
	parameters="root=/dev/mapper/vg_devel1-lv_root 
	rd.zfcp=0.0.fc00,0x5105074308c212e9,0x401040a000000000 
	rd.zfcp=0.0.fc00,0x5105074308c212e9,0x401040a100000000 
	rd.zfcp=0.0.fc00,0x5105074308c212e9,0x401040a300000000
	rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 
	SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!condev"
```
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
确保 `/etc/zipl.conf`{.filename} 中内核命令行的长度不超过 896
字节。否则将无法保存引导装载程序，同时安装会失败。
:::
:::
:::
::: para
运行 `zipl`{.command} 在下次 IPL 时应用对 `/etc/zipl.conf`{.filename}
的修改：
:::
``` screen
# zipl -V
Using config file '/etc/zipl.conf'
Target device information
Device..........................: 08:00
Partition.......................: 08:01
Device name.....................: sda
Device driver name..............: sd
Type............................: disk partition
Disk layout.....................: SCSI disk layout
Geometry - start................: 2048
File system block size..........: 4096
Physical block size.............: 512
Device size in physical blocks..: 10074112
Building bootmap in '/boot/'
Building menu 'rh-automatic-menu'
Adding #1: IPL section 'linux' (default)