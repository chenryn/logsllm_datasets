 Slice statistics:    
   (slice0)    Executor memory: 373K bytes.    
   (slice1)    Executor memory: 334K bytes (seg0).    
 Statement statistics:    
   Memory used: 128000K bytes    
 Optimizer status: legacy query optimizer    
 Total runtime: 18.639 ms    
(16 rows)    
```    
### Citus    
1、  非分布键过滤，非分布键分组聚合  
```    
postgres=# explain select max(id) from test where info='a' group by crt_time;    
DEBUG:  StartTransaction(1) name: unnamed; blockState: DEFAULT; state: INPROGR, xid/subid/cid: 0/1/0    
DEBUG:  generated sql query for task 1    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104508 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
DEBUG:  generated sql query for task 2    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104509 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
DEBUG:  generated sql query for task 3    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104510 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
......    
DEBUG:  generated sql query for task 126    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104633 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
DEBUG:  generated sql query for task 127    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104634 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
DEBUG:  generated sql query for task 128    
DETAIL:  query string: "SELECT max(id) AS max, crt_time AS worker_column_2 FROM test_104635 test WHERE (info OPERATOR(pg_catalog.=) 'a'::text) GROUP BY crt_time"    
DEBUG:  assigned task 1 to node xxx.224:1921    
DEBUG:  assigned task 2 to node xxx.225:1921    
DEBUG:  assigned task 3 to node xxx.226:1921    
......    
DEBUG:  assigned task 126 to node xxx.230:1921    
DEBUG:  assigned task 127 to node xxx.231:1921    
DEBUG:  assigned task 128 to node xxx.232:1921    
DEBUG:  CommitTransaction(1) name: unnamed; blockState: STARTED; state: INPROGR, xid/subid/cid: 0/1/0    
                                           QUERY PLAN                                               
------------------------------------------------------------------------------------------------    
 HashAggregate  (cost=0.00..0.00 rows=0 width=0)    
   Group Key: remote_scan.worker_column_2    
   ->  Custom Scan (Citus Real-Time)  (cost=0.00..0.00 rows=0 width=0)    
         Task Count: 128    
         Tasks Shown: One of 128    
         ->  Task    
               Node: host=xxx.224 port=1921 dbname=postgres    
               ->  GroupAggregate  (cost=24.20..24.31 rows=6 width=12)    
                     Group Key: crt_time    
                     ->  Sort  (cost=24.20..24.22 rows=6 width=12)    
                           Sort Key: crt_time    
                           ->  Seq Scan on test_104508 test  (cost=0.00..24.12 rows=6 width=12)    
                                 Filter: (info = 'a'::text)    
(13 rows)    
Time: 96.372 ms    
```    
2、  分布键查询  
```    
postgres=# \set VERBOSITY verbose    
postgres=# explain (analyze,verbose,timing,costs,buffers) select * from test where id=1;    
DEBUG:  00000: StartTransaction(1) name: unnamed; blockState: DEFAULT; state: INPROGR, xid/subid/cid: 0/1/0    
LOCATION:  ShowTransactionStateRec, xact.c:5022    
DEBUG:  00000: Creating router plan    
LOCATION:  CreateSingleTaskRouterPlan, multi_router_planner.c:268    
DEBUG:  00000: Plan is router executable    
DETAIL:  distribution column value: 1    
LOCATION:  JobExecutorType, multi_server_executor.c:70    
DEBUG:  00000: CommitTransaction(1) name: unnamed; blockState: STARTED; state: INPROGR, xid/subid/cid: 0/1/0    
LOCATION:  ShowTransactionStateRec, xact.c:5022    
                                                                      QUERY PLAN                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------    
 Custom Scan (Citus Router)  (cost=0.00..0.00 rows=0 width=0) (actual time=7.732..7.733 rows=1 loops=1)    
   Output: remote_scan.id, remote_scan.info, remote_scan.crt_time    
   Task Count: 1    
   Tasks Shown: All    
   ->  Task    
         Node: host=xxx.232 port=1921 dbname=postgres    
         ->  Index Scan using test_pkey_104515 on public.test_104515 test  (cost=0.15..2.37 rows=1 width=44) (actual time=0.012..0.013 rows=1 loops=1)    
               Output: id, info, crt_time    
               Index Cond: (test.id = 1)    
               Buffers: shared hit=2    
             Planning time: 0.037 ms    
             Execution time: 0.025 ms    
 Planning time: 1.693 ms    
 Execution time: 7.756 ms    
(14 rows)    
```    
3、  不支持的聚合函数  
```    
postgres=# select stddev(id) from test where info='a';    
DEBUG:  00000: StartTransaction(1) name: unnamed; blockState: DEFAULT; state: INPROGR, xid/subid/cid: 0/1/0    
LOCATION:  ShowTransactionStateRec, xact.c:5022    
ERROR:  XX000: unsupported aggregate function stddev    
LOCATION:  GetAggregateType, multi_logical_optimizer.c:2915    
```    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")