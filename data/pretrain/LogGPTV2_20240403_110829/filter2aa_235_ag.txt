### 旋转指令 (ROR - Rotate Right)
- **功能**: 将目标中的位向右旋转 `count` 次，所有从右侧移出的数据重新进入左侧。进位标志 (Carry Flag) 将包含最后移出的位值。
- **时钟周期与大小**:
  | 操作数         | 808x | 286 | 386 | 486 | 字节  |
  | -------------- | ----- | --- | --- | --- | ----- |
  | reg, 1         | 2     | 2   | 3   | 3   | 2     |
  | mem, 1         | 15+EA | 7   | 7   | 4   | 2-4   |
  | reg, CL        | 8+4n  | 5+n | 3   | 3   | 2     |
  | mem, CL        | 20+EA+4n | 8+n | 7   | 4   | 2-4   |
  | reg, immed8    | -     | 5+n | 3   | 2   | 3     |
  | mem, immed8    | -     | 8+n | 7   | 4   | 3-5   |

### 存储 AH 寄存器到标志寄存器 (SAHF - Store AH into Flags)
- **用法**: `SAHF`
- **修改标志**: AF, CF, PF, SF, ZF
- **功能**: 将 AH 寄存器的低 8 位复制到标志寄存器中，包括 AF, CF, PF, SF 和 ZF。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | none   | 4     | 2   | 3   | 2   | 1     |

### 左移指令 (SAL/SHL - Shift Arithmetic Left / Shift Logical Left)
- **用法**: 
  - `SAL dest, count`
  - `SHL dest, count`
- **修改标志**: CF, OF, PF, SF, ZF (AF 未定义)
- **功能**: 将目标左移 `count` 位，当前符号位在最左侧重复。进位标志包含最后移出的位。
- **时钟周期与大小**:
  | 操作数         | 808x | 286 | 386 | 486 | 字节  |
  | -------------- | ----- | --- | --- | --- | ----- |
  | reg, 1         | 2     | 2   | 3   | 3   | 2     |
  | mem, 1         | 15+EA | 7   | 7   | 4   | 2-4   |
  | reg, CL        | 8+4n  | 5+n | 3   | 3   | 2     |
  | mem, CL        | 20+EA+4n | 8+n | 7   | 4   | 2-4   |
  | reg, immed8    | -     | 5+n | 3   | 2   | 3     |
  | mem, immed8    | -     | 8+n | 7   | 4   | 3-5   |

### 带借位减法 (SBB - Subtract with Borrow/Carry)
- **用法**: `SBB dest, src`
- **修改标志**: AF, CF, OF, PF, SF, ZF
- **功能**: 从目标中减去源，并且如果进位标志设置为 1，则额外减去 1。结果存储在目标中。
- **时钟周期与大小**:
  | 操作数         | 808x | 286 | 386 | 486 | 字节  |
  | -------------- | ----- | --- | --- | --- | ----- |
  | reg, reg       | 3     | 2   | 2   | 1   | 2     |
  | mem, reg       | 16+EA | 7   | 6   | 3   | 2-4   |
  | reg, mem       | 9+EA  | 7   | 7   | 2   | 2-4   |
  | reg, immed     | 4     | 3   | 2   | 1   | 3-4   |
  | mem, immed     | 17+EA | 7   | 7   | 3   | 3-6   |
  | accum, immed   | 4     | 3   | 2   | 1   | 2-3   |

### 字符串扫描 (SCAS - Scan String)
- **用法**: 
  - `SCAS string`
  - `SCASB`
  - `SCASW`
  - `SCASD` (386+)
- **修改标志**: AF, CF, OF, PF, SF, ZF
- **功能**: 将 ES:DI 处的值（即使指定了操作数）与累加器进行比较，并根据减法设置标志。DI 根据指令格式（或操作数大小）和方向标志递增或递减。可以与 REP 前缀一起使用。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | string | 15    | 7   | 7   | 6   | 1     |

### 设置大于等于 (SETAE/SETNB - Set if Above or Equal / Set if Not Below)
- **用法**: 
  - `SETAE dest`
  - `SETNB dest`
- **修改标志**: 无
- **功能**: 如果进位标志清除，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置小于 (SETB/SETNAE - Set if Below / Set if Not Above or Equal)
- **用法**: 
  - `SETB dest`
  - `SETNAE dest`
- **修改标志**: 无
- **功能**: 如果进位标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置小于等于 (SETBE/SETNA - Set if Below or Equal / Set if Not Above)
- **用法**: 
  - `SETBE dest`
  - `SETNA dest`
- **修改标志**: 无
- **功能**: 如果进位标志或零标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置相等 (SETE/SETZ - Set if Equal / Set if Zero)
- **用法**: 
  - `SETE dest`
  - `SETZ dest`
- **修改标志**: 无
- **功能**: 如果零标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置不等于 (SETNE/SETNZ - Set if Not Equal / Set if Not Zero)
- **用法**: 
  - `SETNE dest`
  - `SETNZ dest`
- **修改标志**: 无
- **功能**: 如果零标志清除，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置小于 (SETL/SETNGE - Set if Less / Set if Not Greater or Equal)
- **用法**: 
  - `SETL dest`
  - `SETNGE dest`
- **修改标志**: 无
- **功能**: 如果符号标志不等于溢出标志，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置大于等于 (SETGE/SETNL - Set if Greater or Equal / Set if Not Less)
- **用法**: 
  - `SETGE dest`
  - `SETNL dest`
- **修改标志**: 无
- **功能**: 如果符号标志等于溢出标志，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置小于等于 (SETLE/SETNG - Set if Less or Equal / Set if Not Greater)
- **用法**: 
  - `SETLE dest`
  - `SETNG dest`
- **修改标志**: 无
- **功能**: 如果零标志设置为 1 或符号标志不等于溢出标志，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置大于 (SETG/SETNLE - Set if Greater / Set if Not Less or Equal)
- **用法**: 
  - `SETG dest`
  - `SETNLE dest`
- **修改标志**: 无
- **功能**: 如果零标志清除或符号标志等于溢出标志，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置有符号 (SETS - Set if Signed)
- **用法**: `SETS dest`
- **修改标志**: 无
- **功能**: 如果符号标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置无符号 (SETNS - Set if Not Signed)
- **用法**: `SETNS dest`
- **修改标志**: 无
- **功能**: 如果符号标志清除，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置进位 (SETC - Set if Carry)
- **用法**: `SETC dest`
- **修改标志**: 无
- **功能**: 如果进位标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置无进位 (SETNC - Set if Not Carry)
- **用法**: `SETNC dest`
- **修改标志**: 无
- **功能**: 如果进位标志清除，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

### 设置溢出 (SETO - Set if Overflow)
- **用法**: `SETO dest`
- **修改标志**: 无
- **功能**: 如果溢出标志设置为 1，则将操作数设置为 1，否则设置为 0。
- **时钟周期与大小**:
  | 操作数 | 808x | 286 | 386 | 486 | 字节  |
  | ------ | ----- | --- | --- | --- | ----- |
  | reg8   | -     | -   | 4   | 3   | 3     |
  | mem8   | -     | -   | 5   | 4   | 3     |

希望这些优化后的描述能够帮助你更好地理解和使用这些指令。