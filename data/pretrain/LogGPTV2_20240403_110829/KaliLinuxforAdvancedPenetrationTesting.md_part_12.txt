HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion
\WinLogon\SpecialAccounts\UserList /V account_name /
T REG_DWORD /D 0
This will modify the designated registry key to hide the account of the user (/V).
Again, there may be special syntax requirements based on the specific version of the
target's operating system, so determine the Windows version first and then validate
it in a controlled test environment before implementing it against the target.
Using Metasploit for post-exploit
activities
Metasploit was developed to support both exploit and post-exploit activities. The
present version contains approximately 200 modules that simplify post-exploit
activities. We will review some of the most important modules.
In the following screenshots, we have successfully exploited a Windows XP system
(a "classic" attack that is frequently used to validate more complex aspects of
meterpreter). The initial step is to conduct an immediate reconnaissance of the
network and the compromised system.
The initial meterpreter shell is fragile and vulnerable to failure over an
extended period of time. Therefore, once a system is exploited, we will migrate the
shell and bind it with a more stable process. This also makes detecting the exploit
more difficult.
At the meterpreter prompt, enter ps to obtain a list of running processes, as shown
in the following screenshot:
[ 134 ]
Chapter 5
The ps command also returns the full pathname for each process. This was omitted
from the previous screenshot. The ps list identifies that c:\windows\Explorer.
EXE is running. In this particular case, it is identified with the process ID of 1460, as
shown in the following screenshot. As this is a generally stable application, we will
migrate the shell to that process.
Now that we have a stable shell connection to the remote system, we will use the
meterpreter scripts that support post-exploitation activities.
[ 135 ]
Post Exploit – Action on the Objective
One of the first parameters to identify is: are we on a virtual machine? With the
meterpreter session open between the compromised system and the attacker,
the command run checkvm is issued, as shown in the following screenshot. The
returned data indicates that This is a VMware Virtual Machine.
Some of the most important post-exploit modules available through meterpreter
are described in the following table:
Command Description
run checkvm Determines if a virtual machine is present.
run getcountermeasure Checks the security configuration on the exploited
system (antivirus, firewalls, and so on).
run killav Disables most of the antivirus services running on
the compromised system. This script is frequently
out of date, and success should be manually verified.
run hostsedit Allows the attacker to add entries to the Windows
HOSTS file. This can divert traffic to a different
site (a fake site), which will download additional
tools or ensure that the antivirus software cannot
connect to the Internet or a local server to obtain
signature updates.
run winenum Performs a command-line and WMIC
characterization of the exploited system. It dumps
the important keys from the registry and LM hashes.
run scraper Gathers comprehensive information that has not
been gathered by other scripts, such as the entire
Window registry.
run upload and run download Allows the attacker to upload and download files
on the target system.
[ 136 ]
Chapter 5
Command Description
run keyscan_start, run Starts and stops a local keylogger on the exploited
keyscan_stop, and run system. When the data collection is complete, the
keyscan_dump collected text data is dumped on the attacker's system.
run getprivs Attempts to enable all of the privileges available
to the current process. It's very useful for privilege
escalation.
run getsystem Attempts to elevate privileges to the Windows
SYSTEM level; grants the fullest possible escalation
of a user's privileges.
Run hashdump Dumps the contents of the SAM database on the
attacker's system.
run getgui Allows the user to enable RDP (getgui -e) and
set the username and password (getgui -u). The
gettelnet script can be run in the same manner.
run vnc Gives the attacker a remote GUI (VNC) to the
compromised system.
One of the most effective meterpreter scripts is the Windows enumerator
(winenum). As seen in the following screenshot, it uses both command-line and
WMIC calls to fully characterize the target system:
[ 137 ]
Post Exploit – Action on the Objective
In addition to the enumeration, the winenum script also dumps the registry and
collects the system hashes for decryption as shown in the following screenshot:
The meterpreter comes with several useful libraries that support complex
functions. For example, the espia library supports screenshots of the compromised
system via the following commands:
meterpreter> use espia
Loading extension espia ... success.
meterpreter> screenshot /Desktop/target.jpeg
Screenshot saved to: /root/xsWoDDbW.jpeg
The stdapi library allows a remote attacker to manipulate a webcam by
collecting audio and video from the compromised system and relaying that
data back to the attacker.
[ 138 ]
Chapter 5
Escalating user privileges on a
compromised host
It is usually possible to get Guest or User access to a system. Frequently, the attacker's
ability to access important information will be limited by such reduced privilege levels.
Therefore, a common post-exploit activity is to escalate access privileges from Guest
to User to Administrator and, finally, to SYSTEM. This upward progression of gaining
access privileges is usually referred to as vertical escalation.
The user can implement several methods to gain advanced access credentials,
including the following:
• Employ a network sniffer and/or keylogger to capture transmitted user
credentials (dsniff is designed to extract passwords from live transmissions
or a pcap file saved from a Wireshark or tshark session).
• Perform a search for locally stored passwords. Some users collect passwords
in an e-mail folder (frequently called passwords). Since password reuse and
simple password construction systems are common, the passwords that are
found can be employed during the escalation process.
NirSoft (www.nirsoft.net) produces several free tools that can be uploaded
to the compromised system using meterpreter to extract passwords from
the operating system and applications that cache passwords (mail, remote
access software, FTP, and web browsers).
• Dump the SAM and SYSKEY files using meterpreter or applications such as
hobocopy, fgdump, and pwdump (these can be uploaded on the target using
meterpreter).
• Inject malicious code directly into a service running at the SYSTEM level using
a tool such as process injector (www.tarasco.org/security/Process_
Injector/).
• When some applications load, they read dynamic link library (DLL) files
in a particular order. It is possible to create a fake DLL with the same
name as a legitimate DLL, place it in a specific directory location, and
have the application load and execute it, resulting in elevated privileges
for the attacker. Several applications are known to be vulnerable to such
DLL hijacking (www.exploit-db.com/dll-hijacking-vulnerable-
applications/).
[ 139 ]
Post Exploit – Action on the Objective
• Apply an exploit that uses a buffer overflow or other means to
escalate privileges.
• Execute the getsystem script, which will automatically escalate
administrator privileges to the SYSTEM level, from the meterpreter prompt.
Windows 7 and 2008 don't allow remote access to administrative shares,
such as ADMIN$, C$, and so on, from untrusted systems. These shares
may be required for meterpreter scripts, such as incognito, or to
support attacks over SMB. To address this issue, add HKEY_LOCAL_
MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\
Policies\System to the registry, and add a new DWORD (32-bit) key
named LocalAccountTokenFilterPolicy and set the value to 1.
Replaying authentication tokens
using incognito
One particularly interesting meterpreter library is incognito, which allows you
to impersonate and replay user tokens. Tokens are temporary keys that allow you to
access network and system resources without needing to provide your password or
other credentials with each particular access. These tokens persist on a system until it
is rebooted.
Once you have compromised a system, you can use tokens to impersonate a previous
user who created tokens, without the need to crack the user's password. This token
impersonation may allow an attacker to escalate their privileges.
At the prompt, type the following:
use incognito
The execution of the previous command is shown in the following screenshot:
[ 140 ]
Chapter 5
The first step is to identify all of the valid tokens that are present on the
compromised system. The number of tokens that you can see will depend on the
level of access that was initially used to compromise the target system.
You will also see that there are two types of tokens, as shown in the following
screenshot. Delegation tokens support interactive logons (for example, logging onto
a system locally or via a remote desktop). Impersonate tokens are for noninteractive
sessions, such as for when a system connects to a network drive.
As you can see, a delegation token has been identified as an Administrator. If we
can impersonate this token, we can assume its privileges.
When invoking the impersonate_token command in incognito (as shown in the
following screenshot), note that two backslashes are required in the command:
Now, if we run the shell command from the meterpreter prompt and enter whoami,
it will identify us as the administrator whose token we impersonated.
[ 141 ]
Post Exploit – Action on the Objective
Manipulating access credentials with
Windows Credential Editor
The Windows Credential Editor (WCE)—http://www.ampliasecurity.com/
research/wcefaq.html—is a refined version of the incognito script. It is available
in 32-bit and 64-bit versions as well as a "universal" version that is claimed to be
workable on all Windows platforms. WCE allows users to do the following:
• Perform pass-the-hash attacks on Windows systems
• Collect NTLM credentials from the system memory (with or without
code injection)
• Collect Kerberos tickets from Windows systems
• Use the collected Kerberos tickets on other Windows or Unix systems
to gain access
• Dump cleartext passwords stored by Windows systems
(see the following section)
To use WCE, upload the executable to the compromised system from the
meterpreter prompt. Then, initiate an interactive shell and execute WCE. As you
can see in the following screenshot, the -w option readily extracted the cleartext
Administrator password:
[ 142 ]
Chapter 5
Escalating from Administrator to SYSTEM
Administrator privileges allow an attacker to create and manage accounts and access
most data available on a system. However, some complex functionality mandates
that the requester have SYSTEM level access privileges. There are several ways to
continue this escalation to the SYSTEM level. The most common is to use the at
command, which is used by Windows to schedule tasks for a particular time. The at
command always runs with privileges at the SYSTEM level.
Using an interactive shell (enter shell at the meterpreter prompt), open a
command prompt and determine the compromised system's local time. If the time
is 12:50 P.M. (the at function uses a 24-hour notation), schedule an interactive
command shell for a later time, as shown in the following screenshot:
After the at task was scheduled to run, reconfirm your access privileges at the
meterpreter prompt, as shown in the following screenshot:
As you can see, the privileges have been escalated to the SYSTEM level.
Accessing new accounts with horizontal
escalation
In horizontal escalation, the attacker retains their existing credentials but uses them
to act on a different user's account. For example, a user on compromised system A
attacks a user on system B in an attempt to compromise them.
We will use horizontal escalation attacks when we review some attack vectors, such
as remote access attacks.
[ 143 ]
Post Exploit – Action on the Objective
Covering your tracks
Once a system has been exploited, the attacker must cover their tracks to
avoid detection, or at least make the reconstruction of the event more difficult for
the defender.
An attacker may completely delete the Windows event logs (if they are being actively
retained on the compromised server). This can be done via a command shell to the
system and using the following command:
C:\ del %WINDIR%\*.log /a/s/q/f
The command directs for all of the logs to be deleted (/a), including the files
from all of the subfolders (/s). The /q option disables all of the queries, asking for
a yes or no response, and the /f option forcibly removes the files, making recovery
more difficult.
This can also be done from the meterpreter prompt by issuing the command
clearev. This will clear the application, system, and security logs from the target
(there are no options or arguments for this command).
Ordinarily, deleting a system log does not trigger any alerts to the user. In fact, most
organizations configure logging so haphazardly that missing system logs are treated
as a possible occurrence, and their loss is not deeply investigated.
Metasploit has an additional trick up its sleeve—the timestomp option allows
an attacker to make changes to the MACE parameters of a file (the last modified,
Accessed, Created, and MFT Entry modified times of a file). Once a system has been
compromised and a meterpreter shell established, timestomp can be invoked, as
shown in the following screenshot:
[ 144 ]
Chapter 5
For example, C: of the compromised system contains a file named README.txt.
The MACE values for this file indicate that it was created recently, as shown in the
following screenshot:
If we want to hide this file, we may move it to a cluttered directory, such as
windows\system32. However, the file would be obvious to anyone who sorted the
contents of that directory on the basis of the creation dates or another MAC-based
variable. Therefore, to copy the MAC information from the cmd.exe file to the
README.txt file, use the following command:
meterpreter>timestomp README.txt -f
C:\\WINDOWS\system32\cmd.exe
We can also choose to blank out the MAC data using the -b switch. As you can see
in the following screenshot, we have chosen to change the MAC data to a time in the
future (the year 2106).
[ 145 ]
Post Exploit – Action on the Objective
Such a change will attract the attention of an investigator, but they will not be able to
use the data for a forensic analysis. What do the attributes look like from the original
Windows platform? If the system administrator calls the system properties of a file,
the creation and modification dates have been changed back to the year 1601 (the
date used by Microsoft as the initial system start time). In contrast, the last accessed
time for the file remains accurate. You can see this in the following screenshot:
Although this is expected behavior, it still provides clues to an investigator. In order
to completely foul up an investigation, an attacker may recursively change all of the
set times in a directory or on a particular drive using the following command:
meterpreter>timestompC:\\ -r
The solution is not perfect. It is very obvious that an attack has occurred.
Furthermore, it is possible for timestamps to be retained in other locations on a hard
drive and be accessible for investigation. If the target system is actively monitoring
changes to system integrity using an intrusion detection system, such as Tripwire,
alerts of the timestomp activity will be generated. Therefore, destroying timestamps
is of limited value when a stealthy approach is truly required.
[ 146 ]
Chapter 5
Summary
In this chapter, we focused on the immediate actions that follow exploitation of a
target system. We reviewed the initial rapid assessment conducted to characterize
the server and the local environment. We also learned how to identify and locate
target files of interest, create user accounts, perform vertical escalation to improve
access privileges, and remove signs of an intrusion.
In the next chapter, we will learn how to implement a persistent backdoor to retain
access, and we will learn techniques to support covert communications with the
compromised system.
[ 147 ]
Post Exploit – Persistence
The final stage of the attacker's kill chain is the "command, control, and
communicate" phase, where the attacker relies on a persistent connection with the
compromised system to ensure that they can continue to maintain their control.
To be effective, the attacker must be able to maintain interactive persistence—they
must have a two-way communication channel with the exploited system (interactive)
that remains on the compromised system for a long period of time without being
discovered (persistence). This type of connectivity is a requirement because of the
following reasons:
• Network intrusions may be detected, and the compromised systems may be
identified and patched
• Some exploits only work once because the vulnerability is intermittent,
exploitation causes the system to fail, or because exploit forces the system
to change, rendering the vulnerability unusable
• Attackers may need to return multiple times to the same target for
various reasons
• The target's usefulness is not always immediately known at the time
it is compromised
The tool used to maintain interactive persistence is usually referred to by classical
terms such as backdoor or rootkit. However, the trend towards long-term
persistence by both automated malware and human attacks has blurred the meaning
of traditional labels; so instead, we will refer to malicious software that is intended
to stay on the compromised system for a long period of time as persistent agents.
These persistent agents perform many functions for attackers and penetration testers,
including the following:
• Allow additional tools to be uploaded to support new attacks, especially
against systems located on the same network.
• Facilitate the exfiltration of data from compromised systems and networks.
Post Exploit – Persistence
• Allow attackers to reconnect to a compromised system, usually via an
encrypted channel to avoid detection. Persistent agents have been known to
remain on systems for more than a year.
• Employ antiforensic techniques to avoid being detected, including hiding in
the target's filesystem or system memory, using strong authentication, and