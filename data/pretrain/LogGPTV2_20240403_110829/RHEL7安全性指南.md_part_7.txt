::: para
选择这些检查步骤有明确的要求，要每行一项。例如，要求一个密码的长度至少有８个字符，包含全部四种字符，则须添加以下命令行到`/etc/security/pwquality.conf`{.filename}
文档：
:::
``` screen
minlen=8 
minclass=4
```
::: para
要设置一个密码强度检查以检测是否有连续或重复的字符，则须在
`/etc/security/pwquality.conf`{.filename} 中添加以下命令行：
:::
``` screen
maxsequence=3 
maxrepeat=3
```
::: para
在本例中，输入的密码不能够含有超过 3 个连续字符，如"`abcd`{.literal}"
或"`1234`{.literal}"。此外，完全相同的连续字符也不能超过 3 个。
:::
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
由于root
用户是施行密码创建规则的人，尽管有出现警告消息，他也能够为自己或普通用户设置任何密码。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Configuring_Password_Aging}4.1.1.3. 密码有效期的参数配置 {.title}
:::
::: para
密码有效期是另一个系统管理员用来保护在机构中防止不良密码的技术。密码有效期的意思就是在指定时段后（通常为
90
天），会提示用户创建新密码。它的理论基础是如果强制用户周期性修改其密码，那么破解的密码对与入侵者来说只在有限的时间内有用。密码有效期的负面影响是用户可能需要写下这些密码。
:::
::: para
在 Red Hat Enterprise Linux 7
中有两个用来指定密码有效期的主要程序：`chage`{.command} 命令或者图形
[**用户管理者**]{.application}（`system-config-users`{.command}）应用程序。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
在红帽企业版 Linux 7 中，影子口令是默认启用的。更多信息，请参阅
[《红帽企业版  Linux 7
系统管理员指南](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html)》。
:::
:::
:::
::: para
`chage`{.command} 命令的 `-M`{.option}
选项指定该密码有效的最长天数。例如：要将用户的密码设定为 90
天内有效，请执行以下命令：
:::
``` synopsis
chage -M 90 
```
::: para
在上面的命令中使用用户名称替换
*\*。要禁用密码过期功能，通常在 `-M`{.option} 选项后使用值
`99999`{.command}（这相当于 273 年多一点）。
:::
::: para
关于 `chage`{.command} 命令的可使用选项的更多信息，请参阅下表。
:::
::: table
[⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#tabl-chage_options}
**表 4.1. chage 命令行选项**
::: table-contents
  -------------------------------------------------------------------------------------------------
  选项                     描述
  ------------------------ ------------------------------------------------------------------------
  \--hesiodlhs=*\*   指定了从 1970 年 1 月 1 日密码更改后的天数
  \--hesiodlhs=*\*   指定帐户被锁的日期，以年－月－日的格式出现。除了使用日期，还可以使用从
                           1970 年 1 月 1 日以来的天数。
  \--hesiodlhs=*\*   指定了在密码过期后，但在锁住帐户前的非活跃天数。如果数值是
                           0，密码过期后帐户不会被锁住。
  `-l`{.option}            列出当前账户的过期设置参数。
  \--hesiodlhs=*\*   指定了用户必须修改密码的最小天数间隔。如果数值为
                           `0`{.literal}，则密码未到期。
  \--hesiodlhs=*\*   指定了有效密码的最大天数。当此选项指定的天数加上 `-d`{.option}
                           选项指定的天数未到当前日期，用户必须在使用账户前修改密码。
  \--hesiodlhs=*\*   指定在密码到期日期之前对用户发出警告的天数。
  -------------------------------------------------------------------------------------------------
:::
:::
::: para
您还可以使用 `chage`{.command}
命令以互动形式修改多个密码过期功能以及帐户信息。请使用以下命令进入互动模式：
:::
``` synopsis
chage 
```
::: para
以下是使用这个命令的示例互动会话：
:::
``` screen
~]# chage juan
Changing the aging information for juan
Enter the new value, or press ENTER for the default
Minimum Password Age [0]: 10
Maximum Password Age [99999]: 90
Last Password Change (YYYY-MM-DD) [2006-08-18]:
Password Expiration Warning [7]:
Password Inactive [-1]:
Account Expiration Date (YYYY-MM-DD) [1969-12-31]:
```
::: para
您可以在用户首次登录时，对密码进行参数配置，使密码过期。这就可迫使用户及时修改密码。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    设置初始密码。有两种常用的方法可实现这个步骤：您可以指定默认的密码，或使用空密码。
    :::
    ::: para
    要指定默认的密码，则须作为 ` root `{.systemitem} 用户使用 shell
    提示符打出下列信息 ：
    :::
    ``` synopsis
    passwd username
    ```
    ::: para
    或者，您可以分配一个空值密码，而不要一个原始密码。如果想要这样进行的话，请使用以下命令：
    :::
    ``` synopsis
    passwd -d username
    ```
    ::: warning
    ::: admonition_header
    **警告**
    :::
    ::: admonition
    ::: para
    尽管使用空密码十分便利，却是极不安全的做法。因为任何第三方都可以先行登录，使用这个不安全的用户名进入系统。可能的话，请避免使用空密码。如果无法不使用的话，请一定要确保用户在未用空密码锁定账户前登录。
    :::
    :::
    :::
2.  ::: para
    要迫使密码即刻到期，则须作为 ` root `{.systemitem}
    用户运行以下命令：
    :::
    ``` synopsis
    chage -d 0 username
    ```
    ::: para
    这个命令会将密码上次作出改动的日期设定为（1970 年 1 月 1
    日）这个时间。这样，无论有什么密码到期政策，它都会迫使密码作出即时到期这一行动。
    :::
:::
::: para
在用户 初次登录时，则立即会提示输入新密码。
:::
::: para
您还可以使用图形 [**用户管理者**]{.application}
程序创建密码过期策略，如下。请注意：您需要管理员特权执行这个过程。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    请点击面板中的 [**系统**]{.guimenu} 菜单，指向 [**管理**]{.guimenu}
    并点击 [**用户和组群**]{.guimenu} 显示用户管理器。您还可在 shell
    提示符后输入命令 `system-config-users`{.command}。
    :::
2.  ::: para
    请点击 [**用户**]{.guilabel} 标签，并选择用户列表中需要的用户。
    :::
3.  ::: para
    请点击工具栏中的
    [**首选项**]{.guibutton}显示用户属性对话框（或者选择[**文件**]{.guimenuitem}菜单中的[**首选项**]{.guimenuitem}）。
    :::
4.  ::: para
    点击 [**密码信息**]{.guilabel} 标签，并选择
    [**启用密码过期**]{.guilabel} 单选框。
    :::
5.  ::: para
    在 [**多少天前需要更改**]{.guilabel} 字段输入所需值，并点击
    [**确定**]{.guibutton}。
    :::
:::
::: para
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Locking_Inactive_User_Accounts}4.1.2. 锁定未激活的用户账户 {.title}
:::
::: para
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Locking_User_Accounts_After_Failed_Login_Attempts}4.1.3. 登录尝试失败后锁定用户账户 {.title}
:::
::: para
在红帽企业版 Linux 6 中， `pam_faillock`{.systemitem} PAM
模块允许系统管理员锁定在指定次数内登录尝试失败的用户账户。限制用户登录尝试的次数主要是作为一个安全措施，旨在防止可能针对获取用户的账户密码的暴力破解。
:::
::: para
通过 `pam_faillock`{.systemitem} 模块，将登录尝试失败的数据储存在
`/var/run/faillock`{.filename} 目录下每位用户的独立文件中。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在登录尝试失败的文件中，命令行的顺序很重要。在此顺序中有任何改变都会导致所有用户账户的锁定。当使用了
`even_deny_root`{.option} 选项，也会导致 root 用户账户的锁定。
:::
:::
:::
::: para
根据这些步骤对账户锁定进行参数配置：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    要实现在三次失败尝试后，对任何非 root
    用户进行锁定，并在十分钟后对该用户解锁，则须添加以下命令行到
    `/etc/pam.d/system-auth`{.filename}
    文件和`/etc/pam.d/password-auth`{.filename} 文件中的
    `auth`{.literal} 区段：
    :::
    ``` screen
    auth        required       pam_faillock.so preauth silent audit deny=3 unlock_time=600
    auth        sufficient     pam_unix.so nullok try_first_pass
    auth        [default=die]  pam_faillock.so authfail audit deny=3 unlock_time=600
    ```
2.  ::: para
    在前一步骤指定的两个文件中的 `account`{.literal}
    区段中添加以下命令行：
    :::
    ``` screen
    account     required      pam_faillock.so
    ```
3.  ::: para
    要让账户锁定也适用于 root 用户，则须在
    `/etc/pam.d/system-auth`{.filename} 文件和
    `/etc/pam.d/password-auth`{.filename}
    文件中的`pam_faillock`{.systemitem} 条目里添加
    `even_deny_root`{.option} 选项：
    :::
    ``` screen
    auth        required      pam_faillock.so preauth silent audit deny=3 even_deny_root unlock_time=600
    auth        sufficient    pam_unix.so nullok try_first_pass
    auth        [default=die] pam_faillock.so authfail audit deny=3 even_deny_root unlock_time=600
    auth        sufficient    pam_faillock.so authsucc audit deny=3 even_deny_root unlock_time=600
    ```
:::
::: para
用户 `john`{.computeroutput}
在前三次登录失败后，尝试第四次登录时，他的账户在第四次尝试中被锁定：
:::
``` screen
[yruseva@localhost ~]$ su - john
Account locked due to 3 failed logins
su: incorrect password
```
::: para
要让一个用户即使在数次登录失败之后，其账户仍未被锁定，则须在
`/etc/pam.d/system-auth`{.filename} 和
`/etc/pam.d/password-auth`{.filename} 中的 \"first call of\"
pam_faillock 之前添加以下命令行。也可以用`user1`{.computeroutput},
`user2`{.computeroutput}, `user3 `{.computeroutput} 代替实际用户名。
:::
``` screen
auth [success=1 default=ignore] pam_succeed_if.so user in user1:user2:user3
```
::: para
要查看每个用户的尝试失败次数，则须作为 root 用户运行以下命令行：
:::
``` screen
[root@localhost ~]# faillock
john: