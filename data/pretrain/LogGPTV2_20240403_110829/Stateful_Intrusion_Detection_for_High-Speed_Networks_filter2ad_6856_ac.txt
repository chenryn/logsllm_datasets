additional beneﬁt of increasing the resiliency of the system
against denial-of-service attacks. That is, alarms and recon-
ﬁguration commands still reach all intended receivers, since
they do not have to compete against the ﬂood of incoming
packets for network access.
4.2 Experimental Results
The goal of the set of experiments described in this sec-
tion is to get a preliminary evaluation of the practicality and
effectiveness of our approach. The general assumption is
that we are interested in in-depth, stateful, application-level
analysis of high-speed trafﬁc. For this reason, we chose
Snort as our “reference” sensor and we enabled reassem-
bling and defragmenting.
To run our experiments we used trafﬁc produced by
MIT Lincoln Labs as part of the DARPA 1999 IDS eval-
uation [5]. More precisely, we used the data from Tuesday
of the ﬁfth week. The trafﬁc log was injected on the Gigabit
link using tcpreplay. To achieve high speed trafﬁc we
had to “speed up” the trafﬁc. We assumed that this would
not affect the correctness of our experiment. We also as-
sumed that the LL/MIT trafﬁc is a reasonable approxima-
tion of real-world trafﬁc. This assumption has often been
debated, but we think that for the extent of the tests below
this assumption is reasonable.
The ﬁrst experiment was to run Snort on the tcpdump
trafﬁc log. The results of this “off-line” run are: 11,213
detections in 10 seconds with an ofﬂine throughput of 261
Mbps. The ruleset used included 961 rules.
The second experiment was to run Snort on a single-node
monitor. The setup is shown in Figure 2. In practice, Snort
is run on the scatterer host and it reads directly from the
network card. We measured the decrease in effectiveness of
the detection when the trafﬁc rate increases1. The ruleset
used included only the 18 rules that actually ﬁred on the
test data. Figure 3 shows the results of this experiment. The
reduced performance is due to packet loss, which becomes
substantial at approximately 150 Mbps. This experiment
identiﬁes the saturation point of this setup.
The third experiment was to run Snort in the simple setup
of Figure 2 with a constant trafﬁc rate of 100 Mbps and
an increasing number of signatures. The experiment starts
with only the eighteen signatures that are needed to achieve
1The limit of 200 Mbps in the graphs is the maximum amount of trafﬁc
that tcpreplay is able to generate.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
12000
10000
8000
6000
4000
2000
s
t
r
e
a
l
single-node sensor
20
40
60
80
0
0
120
140
160
180
200
100
Mbps
Figure 3. Single-host monitor detection rate for increasing trafﬁc levels.
12000
10000
8000
6000
4000
2000
s
t
r
e
a
l
single-node sensor
100
200
300
400
0
0
600
700
800
900 1000
500
rules
Figure 4. Single-host monitor detection rate for increasing number of signatures.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
References
[1] CISCO. CISCO Intrusion Detection System. Techni-
cal Information, Nov 2001.
[2] S.T. Eckmann, G. Vigna, and R.A. Kemmerer.
STATL: An Attack Language for State-based Intrusion
Detection. In Proceedings of the ACM Workshop on
Intrusion Detection Systems, Athens, Greece, Novem-
ber 2000.
[3] NSS Group. Intrusion Detection and Vulnerability As-
sessment. Technical report, NSS, Oakwood House,
Wennington, Cambridgeshire, UK, 2000.
[4] ISS.
BlackICE
Sentry
Gigabit.
http://www.networkice.com/products/sentry gigabit,
November 2001.
[5] MIT Lincoln Laboratory. DARPA Intrusion Detection
Evaluation. http://www.ll.mit.edu/IST/ideval/, 1999.
[6] V. Paxson. Bro: A System for Detecting Network
Intruders in Real-Time.
In Proceedings of the 7th
USENIX Security Symposium, San Antonio, TX, Jan-
uary 1998.
[7] J. Pouzol and M. Ducass´e. From Declarative Signa-
tures to Misuse IDS. In W. Lee, L. M´e, and A. Wespi,
editors, Proceedings of the RAID International Sym-
posium, volume 2212 of LNCS, pages 1 – 21, Davis,
CA, October 2001. Springer-Verlag.
[8] M. Roesch. Writing Snort Rules: How To write Snort
rules and keep your sanity. http://www.snort.org.
[9] M. Roesch. Snort - Lightweight Intrusion Detection
In Proceedings of the USENIX LISA
for Networks.
’99 Conference, November 1999.
[10] R. Sekar, V. Guang, S. Verma, and T. Shanbhag. A
High-performance Network Intrusion Detection Sys-
tem. In Proceedings of the 6th ACM Conference on
Computer and Communications Security, November
1999.
[11] Toplayer networks. http://www.toplayer.com, Novem-
ber 2001.
[12] M. Undy. tcpreplay. Software Package, May 1999.
maximum detection for the given data. The plot in Figure 4
shows how the performance decreases as more signatures
are added to the sensor. This experiment demonstrates that
such a setup is limited by the number of signatures that can
be used to analyze the trafﬁc stream.
The fourth and ﬁfth experiments repeated the previous
two experiments using Snort sensors in the proposed archi-
tecture. Figure 5 and 6 present the results of these exper-
iments. The performance of the single-node experiments
are included for comparison. The drop in detection rate at
high speeds by the distributed sensor, which can be seen
in Figure 5, is caused by packet loss in the scatterer. The
network cards currently used for the output trafﬁc are not
able to handle more than about 170 Mbps. The experimen-
tal results show that the proposed architecture has increased
throughput and is much less sensitive to the number of sig-
natures used.
5 Conclusion and Future Work
This paper presents the design, implementation, and ex-
perimental evaluation of a distributed network monitor. The
system supports stateful, in-depth analysis of network traf-
ﬁc on high-speed links. The evaluation of the ﬁrst prototype
showed that the approach is more scalable than the single-
host monitor approach. The current results are very prelimi-
nary and a thorough evaluation will require experimentation
in a real-world environment.
Future work will include a more thorough evaluation of
the trade-offs when conﬁguring the system, the develop-
ment of a mechanism for dynamic load balancing, and the
use of hierarchically structured scatterers/slicers to achieve
higher throughput levels.
Acknowledgments
This research was supported by the Army Research
Ofﬁce, under agreement DAAD19-01-1-0484 and by the
Defense Advanced Research Projects Agency (DARPA)
and Rome Laboratory, Air Force Materiel Command,
USAF, under agreement number F30602-97-1-0207. The
U.S. Government is authorized to reproduce and distribute
reprints for Governmental purposes notwithstanding any
copyright annotation thereon.
The views and conclusions contained herein are those
of the authors and should not be interpreted as necessar-
ily representing the ofﬁcial policies or endorsements, ei-
ther expressed or implied, of the Army Research Ofﬁce, the
Defense Advanced Research Projects Agency (DARPA),
Rome Laboratory, or the U.S. Government.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
12000
10000
8000
6000
4000
2000
s
t
r
e
a
l
single-node sensor
distributed sensor
20
40
60
80
0
0
120
140
160
180
200
100
Mbps
Figure 5. Distributed monitor detection rate for increasing trafﬁc levels.
s
t
r
e
a
l
12000
10000
8000
6000
4000
2000
0
0
single-node sensor
distributed sensor
100
200
300
400
500
rules
600
700
800
900 1000
Figure 6. Distributed monitor detection rate for increasing number of signatures.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE