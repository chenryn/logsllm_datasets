2.  进到 [**Users → Preserved users**]{.strong} 选项卡。
3.  单击您要恢复的用户帐户的复选框。
4.  单击 [**Restore**]{.strong} 按钮。
    [![A screenshot of the \"Preserved users\" page displaying a table
    of users and their attributes. The checkbox next to one user entry
    is checked and the \"Restore\" button at the top right is
    highlighted.](images/idm-users-preserved-restore.png)]{.inlinemediaobject}
5.  在 [**Confirmation**]{.strong} 对话框中，单击 [**OK**]{.strong}
    按钮。
:::
IdM Web UI 显示一条绿色确认信息，并将用户帐户移到 [**Active
users**]{.strong} 选项卡中。
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-the-idm-web-ui_managing-users-groups-hosts.html#deleting-users-in-the-idm-web-ui_managing-user-accounts-using-the-idm-web-ui}在 IdM Web UI 中删除用户 {.title}
:::
删除用户是一种不可逆的操作，导致用户帐户被从 IdM
数据库中永久删除，包括组成员资格和密码。任何对用户的外部配置，如系统帐户和主目录，都不会被删除，但无法通过
IdM 来访问。
您可以删除：
::: itemizedlist
-   Active 用户 - IdM Web UI 为您提供了选项：
    ::: itemizedlist
    -   临时保留用户
        详情请查看 [在 IdM Web UI
        中保留活动用户](#managing-user-accounts-using-the-idm-web-ui_managing-users-groups-hosts.html#preserving-active-users-in-the-idm-web-ui_managing-user-accounts-using-the-idm-web-ui "在 IdM Web UI 中保留活动的用户"){.link}。
    -   永久删除它们
    :::
-   Stage 用户 - 您可以永久删除 stage 用户。
-   Preserved 用户 - 您可以永久删除 preserved 用户。
:::
以下流程描述了删除活动用户。同样，您可以删除用户帐户，在：
::: itemizedlist
-   [**Stage users**]{.strong} 选项卡
-   [**Preserved users**]{.strong} 选项卡
:::
::: itemizedlist
**先决条件**
-   管理 IdM Web UI 或用户管理员角色的管理员特权。
:::
::: orderedlist
**步骤**
1.  登录到 IdM Web UI。
    详情请参阅 [在 Web 浏览器中访问 IdM Web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/accessing-the-ipa-web-ui-in-a-web-browser_configuring-and-managing-idm){.link}。
2.  进到 [**Users → Active users**]{.strong} 选项卡。
    或者，您可以在 [**Users → Stage users**]{.strong} 或 [**Users →
    Preserved users**]{.strong} 删除用户账户。
3.  点 [**Delete**]{.strong} 图标。
4.  在 [**Remove users**]{.strong} 对话框中，将 [**Delete
    mode**]{.strong} 单选按钮切换到 [**delete**]{.strong}。
5.  单击 [**Delete**]{.strong} 按钮。
:::
用户帐户从 IdM 永久删除。
:::
:::
[]{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts}第 4 章 使用 Ansible playbook 管理用户帐户 {.title}
:::
您可以使用 Ansible playbook 管理 IdM
中的用户。在介绍了[用户生命周期](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#user-life-cycle_managing-idm-users-using-Ansible-playbooks "用户生命周期"){.link}后，本章将介绍如何将
Ansible playbook 用于以下操作：
::: itemizedlist
-   [确保存在直接列在 `YML`{.literal}
    文件中的单个用户](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-an-IdM-user-using-an-Ansible-playbook_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在一个 IdM 用户"){.link}。
-   [确保存在直接列在`YML`{.literal}
    文件中的多个用户](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-multiple-IdM-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在多个 IdM 用户"){.link}。
-   [确保存在从 `YML`{.literal} 文件引用的 `JSON`{.literal}
    文件中列出的多个用户](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-multiple-IdM-users-from-a-json-file-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在 JSON 文件中的多个 IdM 用户"){.link}。
-   [确保没有直接在 `YML`{.literal}
    文件中列出的用户](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-absence-of-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "确保没有用户使用 Ansible playbook"){.link}。
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#user-life-cycle_managing-idm-users-using-Ansible-playbooks}用户生命周期 {.title}
:::
身份管理(IdM)支持三个用户帐户状态：
::: itemizedlist
-   [**Stage（预发布）**]{.strong}
    用户不允许进行身份验证。这是初始状态。活动用户所需的一些用户帐户属性无法在这里设置，例如组成员资格。
-   [**Active（活跃）**]{.strong}用户被允许进行身份验证。所有必需的用户帐户属性都需要在这个阶段设置。
-   [**Preserved（保留）**]{.strong}用户是以前活跃的用户，但现在被视为不活跃且无法通过
    IdM
    进行身份验证。保留用户保留他们作为活跃用户的大多数帐户属性，但它们不属于任何用户组。
:::
[![A flow chart displaying 4 items: Active users - Stage users -
Preserved users - Deleted users. Arrows communicate the relationships
between each kind of user: Active users can be \"preserved\" as
Preserved users. Preserved users can be \"restored\" as Active users.
Preserved users can be \"staged\" as Stage users and Stage users can be
\"activated\" into Active users. All users can be deleted to become
\"Deleted
users\".](images/84_RHEL_IdM_0420_life-cycle.png)]{.inlinemediaobject}
您可以从 IdM 数据库永久删除用户条目。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
删除的用户帐户无法恢复。当您删除用户帐户时，与帐户相关的所有信息都将永久丢失。
:::
只能由具备管理员权限的用户（如默认的 admin
用户）才能创建新的管理员。如果您意外删除所有管理员帐户，目录管理器必须在
Directory 服务器中手动创建新管理员。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不要删除 `admin`{.literal} 用户。由于 `admin`{.literal} 是 IdM
所需的预定义用户，因此此操作会导致某些命令出现问题。如果要定义和使用另外的
admin 用户，请先至少为一个其他用户授予 `admin`{.literal}
权限，然后再使用 `ipa user-disable admin`{.literal} 命令来禁用预定义的
admin 用户。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不要将本地用户添加到 IdM。NSS（Name Service
Switch）在解析本地用户和组前，总会先解析 IdM 的用户和组。这意味着 IdM
组成员资格不适用于本地用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-an-IdM-user-using-an-Ansible-playbook_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在一个 IdM 用户 {.title}
:::
以下流程描述了确保使用 Ansible playbook 在 IdM 中存在用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包安装在 Ansible 控制器上。
:::
::: orderedlist
**步骤**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要确保的 IdM
    中存在的用户数据。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/add-user.yml`{.literal}
    文件中的示例。例如，创建名为 [*idm_user*]{.emphasis} 的用户并添加
    [*Password123*]{.emphasis} 作为用户密码：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Create user idm_user
        ipauser:
          ipaadmin_password: MySecret123
          name: idm_user
          first: Alice
          last: Acme
          uid: 1000111
          gid: 10011
          phone: "+555123457"
          email: PI:EMAIL
          passwordexpiration: "2023-01-19 23:59:59"
          password: "Password123"
          update_password: on_create
    ```
    您必须使用以下选项来添加用户：
    ::: itemizedlist
    -   [**name**]{.strong}：登录名称
    -   [**first**]{.strong}：名（字符串）
    -   [**last**]{.strong}：姓（字符串）
    :::
    有关可用用户选项的完整列表，请参阅
    `/usr/share/doc/ansible-freeipa/README-user.md`{.literal} Markdown
    文件。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用 `update_password: on_create`{.literal} 选项，Ansible
    仅在创建用户时创建用户密码。如果已使用密码创建了用户，Ansible
    不会生成新的密码。
    :::
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-IdM-user.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证 IdM
    中是否存在新用户帐户：
    ::: orderedlist
    1.  以 admin 用户身份登录 `ipaserver`{.literal} ：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  为 admin 请求一个 Kerberos ticket：
        ``` literallayout
        $ kinit admin
        Password for PI:EMAIL:
        ```
    3.  请求有关 [*idm_user*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user
          User login: idm_user
          First name: Alice
          Last name: Acme
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-multiple-IdM-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在多个 IdM 用户 {.title}
:::
以下流程描述了使用 Ansible playbook 确定在 IdM 中存在多个用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**步骤**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要在 IdM
    中确保存在的用户的数据。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-users-present.yml`{.literal}
    文件中的示例。例如，要创建用户
    [*idm_user_1*]{.emphasis}、[*idm_user_2*]{.emphasis} 和
    [*idm_user_3*]{.emphasis}，并添加 [*Password123*]{.emphasis}
    作为密码 [*idm_user_1*]{.emphasis} ：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Create user idm_users
        ipauser:
          ipaadmin_password: MySecret123
          users:
          - name: idm_user_1
            first: Alice
            last: Acme
            uid: 10001
            gid: 10011
            phone: "+555123457"
            email: PI:EMAIL
            passwordexpiration: "2023-01-19 23:59:59"
            password: "Password123"
          - name: idm_user_2
            first: Bob
            last: Acme
            uid: 100011