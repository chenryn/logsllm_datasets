puts("Enter a number (empty line to quit):");
while (s_gets(number, LIM) && number[0] != '\0')
{
value = strtol(number, &end, 10); /* 十进制 */
printf("base 10 input, base 10 output: %ld, stopped at %s 
(%d)\n",
value, end, *end);
value = strtol(number, &end, 16); /* 十六进制 */
printf("base 16 input, base 10 output: %ld, stopped at %s 
(%d)\n",
value, end, *end);
puts("Next number:");
}
puts("Bye!\n");
return 0;
}
char * s_gets(char * st, int n)
842
{
char * ret_val;
int i = 0;
ret_val = fgets(st, n, stdin);
if (ret_val)
{
while (st[i] != '\n' && st[i] != '\0')
i++;
if (st[i] == '\n')
st[i] = '\0';
else
while (getchar() != '\n')
continue;
}
return ret_val;
}
下面是该程序的输出示例：
Enter a number (empty line to quit):
10
843
base 10 input, base 10 output: 10, stopped at (0)
base 16 input, base 10 output: 16, stopped at (0)
Next number:
10atom
base 10 input, base 10 output: 10, stopped at atom (97)
base 16 input, base 10 output: 266, stopped at tom (116)
Next number:
Bye!
首先注意，当base分别为10和16时，字符串"10"分别被转换成数字10和
16。还要注意，如果end指向一个字符，*end就是一个字符。因此，第1次转
换在读到空字符时结束，此时end指向空字符。打印end会显示一个空字符
串，以%d转换说明输出*end显示的是空字符的ASCII码。
对于第2个输入的字符串，当base为10时，end的值是'a'字符的地址。所
以打印end显示的是字符串"atom"，打印*end显示的是'a'字符的ASCII码。然
而，当base为16时，'a'字符被识别为一个有效的十六进制数，strtol()函数把
十六进制数10a转换成十进制数266。
strtol()函数最多可以转换三十六进制，'a'~'z'字符都可用作数字。
strtoul()函数与该函数类似，但是它把字符串转换成无符号值。strtod()函数
只以十进制转换，因此它值需要两个参数。
许多实现使用 itoa()和 ftoa()函数分别把整数和浮点数转换成字符串。但
是这两个函数并不是 
C标准库的成员，可以用sprintf()函数代替它们，因为
sprintf()的兼容性更好。
844
11.10 关键概念
许多程序都要处理文本数据。一个程序可能要求用户输入姓名、公司列
表、地址、一种蕨类植物的学名、音乐剧的演员等。毕竟，我们用言语与现
实世界互动，使用文本的例子不计其数。C 程序通过字符串的方式来处理它
们。
字符串，无论是由字符数组、指针还是字符串常量标识，都储存为包含
字符编码的一系列字节，并以空字符串结尾。C 提供库函数处理字符串，查
找字符串并分析它们。尤其要牢记，应该使用 strcmp()来代替关系运算符，
当比较字符串时，应该使用strcpy()或strncpy()代替赋值运算符把字符串赋给
字符数组。
845
11.11 本章小结
C字符串是一系列char类型的字符，以空字符（'\0'）结尾。字符串可以
储存在字符数组中。字符串还可以用字符串常量来表示，里面都是字符，括
在双引号中（空字符除外）。编译器提供空字符。因此，"joy"被储存为4个
字符j、o、y和\0。strlen()函数可以统计字符串的长度，空字符不计算在内。
字符串常量也叫作字符串——字面量，可用于初始化字符数组。为了容
纳末尾的空字符，数组大小应该至少比容纳的数组长度多1。也可以用字符
串常量初始化指向char的指针。
函数使用指向字符串首字符的指针来表示待处理的字符串。通常，对应
的实际参数是数组名、指针变量或用双引号括起来的字符串。无论是哪种情
况，传递的都是首字符的地址。一般而言，没必要传递字符串的长度，因为
函数可以通过末尾的空字符确定字符串的结束。
fgets()函数获取一行输入，puts()和 fputs()函数显示一行输出。它们都是
stdio.h 头文件中的函数，用于代替已被弃用的gets()。
C库中有多个字符串处理函数。在ANSI C中，这些函数都声明在string.h
文件中。C库中还有许多字符处理函数，声明在ctype.h文件中。
给main()函数提供两个合适的形式参数，可以让程序访问命令行参数。
第1个参数通常是int类型的argc，其值是命令行的单词数量。第2个参数通常
是一个指向数组的指针argv，数组内含指向char的指针。每个指向char的指
针都指向一个命令行参数字符串，argv[0]指向命令名称，argv[1]指向第1个
命令行参数，以此类推。
atoi()、atol()和atof()函数把字符串形式的数字分别转换成int、long 
和
double类型的数字。strtol()、strtoul()和strtod()函数把字符串形式的数字分别
转换成long、unsigned long和double类型的数字。
846
11.12 复习题
复习题的参考答案在附录A中。
1.下面字符串的声明有什么问题？
int main(void)
{
char name[] = {'F', 'e', 's', 's' };
...
}
2.下面的程序会打印什么？
#include 
int main(void)
{
char note[] = "See you at the snack bar.";
char *ptr;
ptr = note;
puts(ptr);
puts(++ptr);
note[7] = '\0';
puts(note);
847
puts(++ptr);
return 0;
}
3.下面的程序会打印什么？
#include 
#include 
int main(void)
{
char food [] = "Yummy";
char *ptr;
ptr = food + strlen(food);
while (--ptr >= food)
puts(ptr);
return 0;
}
4.下面的程序会打印什么？
#include 
#include 
int main(void)
848
{
char goldwyn[40] = "art of it all ";
char samuel[40] = "I read p";
const char * quote = "the way through.";
strcat(goldwyn, quote);
strcat(samuel, goldwyn);
puts(samuel);
return 0;
}
5.下面的练习涉及字符串、循环、指针和递增指针。首先，假设定义了
下面的函数：
#include 
char *pr(char *str)
{
char *pc;
pc = str;
while (*pc)
putchar(*pc++);
do {
849
putchar(*--pc);
} while (pc - str);
return (pc);
}
考虑下面的函数调用：
x = pr("Ho Ho Ho!");
a.将打印什么？
b.x是什么类型？
c.x的值是什么？
d.表达式*--pc是什么意思？与--*pc有何不同？
e.如果用*--pc替换--*pc，会打印什么？
f.两个while循环用来测试什么？
g.如果pr()函数的参数是空字符串，会怎样？
h.必须在主调函数中做什么，才能让pr()函数正常运行？
6.假设有如下声明：
char sign = '$';
sign占用多少字节的内存？'$'占用多少字节的内存？"$"占用多少字节的
内存？
7.下面的程序会打印出什么？
850
#include 
#include 
#define M1 "How are ya, sweetie? "
char M2[40] = "Beat the clock.";
char * M3 = "chat";
int main(void)
{
char words[80];
printf(M1);
puts(M1);
puts(M2);
puts(M2 + 1);
strcpy(words, M2);
strcat(words, " Win a toy.");
puts(words);
words[4] = '\0';
puts(words);
while (*M3)
puts(M3++);
851
puts(--M3);
puts(--M3);
M3 = M1;
puts(M3);
return 0;
}
8.下面的程序会打印出什么？
#include 
int main(void)
{
char str1 [] = "gawsie";
char str2 [] = "bletonism";
char *ps;
int i = 0;
for (ps = str1; *ps != '\0'; ps++) {
if (*ps == 'a' || *ps == 'e')
putchar(*ps);
else
(*ps)--;
852
putchar(*ps);
}
putchar('\n');
while (str2[i] != '\0') {
printf("%c", i % 3 ? str2[i] : '*');
++i;
}
return 0;
}
9.本章定义的s_gets()函数，用指针表示法代替数组表示法便可减少一个
变量i。请改写该函数。
10.strlen()函数接受一个指向字符串的指针作为参数，并返回该字符串
的长度。请编写一个这样的函数。
11.本章定义的s_gets()函数，可以用strchr()函数代替其中的while循环来
查找换行符。请改写该函数。
12.设计一个函数，接受一个指向字符串的指针，返回指向该字符串第1
个空格字符的指针，或如果未找到空格字符，则返回空指针。
13.重写程序清单11.21，使用ctype.h头文件中的函数，以便无论用户选
择大写还是小写，该程序都能正确识别答案。
853
11.13 编程练习
1.设计并测试一个函数，从输入中获取下n个字符（包括空白、制表
符、换行符），把结果储存在一个数组里，它的地址被传递作为一个参数。
2.修改并编程练习1的函数，在n个字符后停止，或在读到第1个空白、
制表符或换行符时停止，哪个先遇到哪个停止。不能只使用scanf()。
3.设计并测试一个函数，从一行输入中把一个单词读入一个数组中，并
丢弃输入行中的其余字符。该函数应该跳过第1个非空白字符前面的所有空
白。将一个单词定义为没有空白、制表符或换行符的字符序列。
4.设计并测试一个函数，它类似编程练习3的描述，只不过它接受第2个
参数指明可读取的最大字符数。
5.设计并测试一个函数，搜索第1个函数形参指定的字符串，在其中查
找第2个函数形参指定的字符首次出现的位置。如果成功，该函数返指向该
字符的指针，如果在字符串中未找到指定字符，则返回空指针（该函数的功
能与 
strchr()函数相同）。在一个完整的程序中测试该函数，使用一个循环
给函数提供输入值。