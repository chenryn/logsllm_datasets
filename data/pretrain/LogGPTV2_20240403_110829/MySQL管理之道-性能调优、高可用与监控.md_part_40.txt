的拆分。过程可能有些复杂，有兴趣的读者，可以按照上面的操作，进行测试。
么等。等凌晨0:00点，开发人员让运维人员重启前端应用，这样就顺利实现了用户信息表
的代码，告诉他们拆分的规则，按用户ID取模，拆分几个表，拆分到哪台机器上，IP是什
增加：
增加：
在平均每天处理近50亿次的SQL执行请求。
MySQL数据库的schema，为应用提供了数据服务。据最近统计的情况来看，Cobar集群现
表的工作。
经过中间件，
访问Cobar，
其原理是通过对主键取模，把一张大表拆分成N张小表并存储到各台服务器上，前端应用
布式处理系统，它可以在分布式的环境下看上去像传统数据库一样为您提供海量数据服务，
11.3
目前，该产品在阿里巴巴B2B公司已经稳定运行了3年以上。已经接管了3000+个
阿里巴巴的开源软件Cobar海量数据平台（数据库中间件）采用的是关系型数据的分
把t2表dump出来并导人到M_new3机器上，然后在M_new3机器上，在my.cnf里
把tl表dump出来并导人到M_new2机器上，然后在M_new2机器上，在my.cnf里
tb2表的一部分数据被映射到物理数据库 test1的tb2上，另外一部分数据被映射到物理
tbl表中的数据被映射到物理数据库testl的tb1上。
系统对外提供的数据库名是test，并且其中有两张表tb1和tb2。
第七步，到目前为止，基本上已经完成了所有的步骤，剩下的则要请开发人员改他们
这里忽略t0、tl表的同步复制。
这里忽略t0、t2表的同步复制。
这里忽略表tl、t2的同步复制。
1.场景描述
replicate-ignore-table=test.t1
replicate-ignore-table=test.to
replicate-ignore-table=test.to
replicate-ignore-table=test.t2
replicate-ignore-table=test.t2
replicate-ignore-table=test.t1
阿里巴巴中间件Cobar水平拆表方案
，经过处理，把请求发送到后端MySQL数据库上，MySQL完成数据查询，再
，将结果送回客户端。这样的结构对开发人员来说是透明的，代码层加上API
第11章项目案例讲解·299
---
## Page 314
300·第五部分项目案例
的版本)。
JDK:http://www.oracle.com/technetwork/java/javase/downloads/（推荐使用1.6以上
接下来看看Java环境变量，如下所示：
Cobar:http://code.alibabatech.com/wiki/display/cobar/release/（下载 tar.gz或者 zip 文件）。
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
下面分别到后端MySQL机器上创建 schema:test1、test2，table:tb1、tb2，表结构如下：
配置环境：
（2）数据准备
exportPATH=SJAVA_HOME/bin:SJRE_HOME/bin:SPATH
MySQL为：http://www.mysql.com/downloads/（推荐使用5.1以上的版本）。
操作系统为：Linux或者Windows（推荐在Linux环境下运行Cobar）。
（1）软件准备
CREATETABLE'tb1'（
192.168.110.140 (mysql)
192.168.110.139 (mysql)
exportCLASS=SPATH:SJAVA_HOME/bin:SJRE_HOME/bin
exportJRE_HOME=/usr/java/jidk1.6.0_21/jre
exportJAVA_HOME=/usr/java/jdk1.6.0_21
步骤一：环境准备
2.操作步骤
192.168.110.138（cobar）
EN
KEY'ixval"(val′(255))
PRIMARYKEY(id'),
pid'int(11) DEFAULT NULL,
val'varchar(256)DEFAULTNULL,
id'int(11)NOTNULL,
EATETABLE'tb2'（
mt‘datetimeDEFAULTNULL,
id'int（11)NOTNULL,
NGINE=InnoDBDEFAULTCHARSET=utf8;
pid'int（11)DEFAULTNULL
图11-6tb2水平分表
tb2
2
---
## Page 315
xml 等相关的配置文件，如下所示：
schema.xml的配置如下：
#可以看到bin,conflib,logs 四个目录
下载Cobar压缩文件并解压，
>
#more schema.xml
#wget
步骤二：部署和配置Cobar
-Copyright 1999-2012 Alibaba Group.
#cdcobar-server-1.2.7
tarzxf cobar-server-1.2.7.tar.gz
http://code.alibabatech.com/mvn/releases/com/alibaba/cobar/cobar-server/1.2.4/cobar-#server-1.2.7.tar.gz
limitations under theLicense.
See theLicenseforthespecificlanguagegoverningpermissionsand
distributed under theLicenseis distributed onan"AS IS"BASIS,
Unlessrequiredbyapplicablelaworagreedtoinwriting,software
Youmayobtaina copy of theLicenseat
youmaynotusethisfileexceptincompliancewiththeLicense.
Licensed underthe Apache License,Version2.0（the"License);
dsTest[O]
dsTest[1]
dsTest[2]
http://www.apache.org/licenses/LICENSE-2.0
进人conf目录可以看到 schema.xml、rule.xml、server.
第11章项目案例讲解·301
---
## Page 316
302
·第五部分项目案例
中)：
为你的MySQL信息。
注意
schema.xml包含MySQL的IP、端口、用户名、密码等配置，需要按照注释将其替换
rule.xml配置如下（此处仅以数字类型的id字段作为拆分字段，将数据拆分到两个库
#cat rule.xml
-Copyright 1999-2012Alibaba Group.
!--
limitationsundertheLicense.
SeetheLicenseforthespecificlanguagegoverningpermissionsand
Unlessrequiredbyapplicablelaworagreedtoinwriting,software
youmaynotusethisfileexceptincompliancewiththeLicense.
WITHOUTWARRANTIESORCONDITIONSOFANYKIND,eitherexpressorimplied.
distributedunderthe Licenseis distributed on an"ASIS"BASIS,
Youmayobtainacopyof theLicenseat
Licensed under theApache License,Version 2.0(the"License");
STRICT_TRANS_TABLES
123456
admin
192.168.110.140:3306/test2
192.168.110.139:3306/test1
192.168.110.139:3306/test1
http://www.apache.org/licenses/LICENSE-2.0
---
## Page 317
server.xml配置如下：
class="com.alibaba.cobar.route.function.PartitionBylong">
#catserver.xml
limitationsundertheLicense.
- Copyright 1999-2012 Alibaba Group.
SeetheLicenseforthespecificlanguagegoverningpermissionsand
Youmay obtain a copy of the License at
youmaynotusethisfileexceptincompliancewiththeLicense.
Licensed underthe Apache License,Version 2.0（the"License");
WITHOUTWARRANTIESORCONDITIONSOFANYKIND,eitherexpressorimplied.
Unlessrequiredbyapplicablelaworagreedtoinwriting,software
->
_HEARTBEAT_PASS_
512
2
_HEARTBEAT_USER_
8
4
4
4
16
http://www.apache.org/licenses/LICENSE-2.0
第11章项目案例讲解·303
---
## Page 318
304·第五部分项目案例
库完全相同。
下面以 MySQL命令行方式进行访问：
访问方式：由于Cobar遵循 MySQL协议，因此访问Cobar 的方式与访问 MySQL数据
查看logs目录下stdout.log，启动成功的日志如下所示：
./startup.sh #Cobar进程名为CobarStartup
启动Cobar，进人bin 目录可以看到Cobar 的启动、停止与重启脚本，命令如下：
15:07:16,793INFO
15:07:16,793 INFO
15:07:16,755IN
15:07:16,747 IN
15:07:16,523IN
15:07:16,415 INFO
15:07:16,415INFO Cobar is readyto startup..
步骤三：启动和使用Cobar
15:07:16,791INFO
15:07:16,760IN
15:07:16,517IN
->
/user>
!--
->
/cluster>
test
123456
127.0.0.1
1
INFO
INFO
INFO
INFO
INFO
0CobarServerisstartedandlisteningon8066
0CobarManagerisstartedandlisteningon9066
Startupconnector...
dnTest2:0init success
dnTest3:0init success
dnTest1:0init success
InitializedataNodes
---
## Page 319
|513|part2|513
mysql>select*fromtb2;
Query OK,1 row affected (0.00 sec)
mysql>insertintotb2（id,val,pid)values(515,part2',515);
QueryOK,1rowaffected(0.01sec)
mysql>insertintotb2(id,val,pid)values(514,part2'514);
QueryOK,1row affected (0.00sec)
mysql>insertintotb2(id,valpid)values(513part2'513);
Query OK,1 row affected (0.00 sec)
ss
mysql>insert into tb2(id,val,pid)values(2part1,2);
#在192.168.110.138Cobar上执行
下面是一个SQL执行示例，执行SQL语句时，与使用传统单一数据库无区别。
Connectionconn=DriverManager.getConnection("jdbc:mysql://192.168.0.1:8066/db_shard","test","test");
#JDBC(建议5.1以上的mysqldriver版本）
这里以JDBC方式访问，支持用户使用JDBC连接池：
1row in set(0.00 sec)
Type'help;'or\h’forhelp.Type\c'to clear the current input statement.
andyouarewelcometomodifyandredistributeitundertheGPLv2license
ThissoftwarecomeswithABSOLUTELYNOWARRANTY.Thisisfreesoftware,
Copyright(c)2000,2010,Oracle and/oritsaffliates.llrightsreserved.
Server version:5.1.48-cobar-1.2.7 Cobar Server(ALIBABA)
#mysql-h192.168.110.138-uadmin-p123456-P8066
id|val|pid|
Query OK,1row affected(0.01sec)
QueryOK,1rowaffected(0.01sec)
mysql>insert into tb2(id,val,pid)values(1,part1',1);
Class.forName("com.mysql.jdbc.Driver");
mysql>showdatabases;
YourMySQLconnectionidis6
Welcome totheMySQLmonitor.Commandsendwith;org.
test
DATABASE
第11章项目案例讲解·305
---
## Page 320
306·第五部分项目案例
下述问题：
口不支持SAVEPOINT操作。
口分库情况下，update语句不能更新拆分字段的值。
口分库情况下，insert语句必须包含拆分字段列名。
口SET语句执行会被忽略，事务和字符集设置除外。
口不支持跨库情况下的join、分页、排序、子查询操作。
目前该版本有如下功能不支持，咨询了Cobar开源软件的作者在最新的版本里会解决
3．产品约束
现在，数据已经分布在不同的服务器中。
#在192.168.110.139/140mysql上执行
2 rows in set (0.00 sec)
mysql>explain select *from tb2;
6rows in set(0.o0 sec)
3rows in set (0.00 sec)
mysql> select *from tb2;
2rows in set (0.00sec)
|id|val|pid
mysql>select *from tb2;
515|part2|515
513|part2|513
id|val
DATA_NODE|SQL
515|part2|515|
|514|part2| 514|
1|part1|
dnTest3
3|part1|
2|part1
2|part1|
1|part1|
Iselect*fromtb2
3
人
1
---
## Page 321
分库的count结果。目前Cobar对各个分库的执行结果不做特别处理，直接返回。
http://code.alibabatech.com/wiki/pages/viewpage.action?pageId=7671478
mysql>select count(*) from tb2;
下面是我测试时发现的一个问题，咨询了作者，给的答复是：Cobar此时返回的是各个
口使用JDBC 时，BLOB、BINARY、VARBINARY字段不能使用setBlobO或setBina-
口使用JDBC时，不支持useServerPrepStmts=true参数设置（默认为false）。
口使用 JDBC时，不支持rewriteBatchedStatements=true参数设置（默认为false）。
更多的内容请参考官方文档：
mysql>select *from tb2limit 2;
2 rows in set (0.00 sec)
2rows in set (0.03 sec)
口暂时只支持MySQL数据节点。
4rows in set(0.00sec)
514|part2|514
513|part2|513|
id|val|pid
sum(id)|
mysql>selectsum(id)fromtb2;
count(*)|
+------------+
ryStreamO方法设置参数。
1|part1|
1542
m
2
二
第11章项目案例讲解·307
---