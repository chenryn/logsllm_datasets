php)，这个脚本将负责在Mismatch数据库中找到一个用户的理想配对，
然后显示有关信息。
mymismatch.php
// Only look for a mismatch if the user has questionnaire responses stored
$data = mysqli_query($dbc,$query);
只可能为对问卷做出响应的
用户找到互补配对。
// First grab the user's responses from the response table (JoIN to get the topic name)
FROM mismatch_response AS mr "
这里用SELECT选择用户的问卷
1
"INNER JOIN mismatch_topic AS mt "
响应时使用了我们热悉的1OJN
来获取主题名。
"USING (topic_id)"
"WHERE mr.user_id = '". S_SESSION['user_id'].""";
$data = mysqli_query($dbc, $query);
Suser_responses = array();
while ($row = mysqli_fetch_array($data))
array_push (Suser_responses, $row) ;
K
Suser_zesponses数组包含用户的所
有响应。
// Initialize the mismatch search results
$mismatch_score =0;
2
Smismatch_user_id = -1;
这些变量跟踪互补配对的捷
索过程。
Smismatch_topics = array() ;
稍等，这里还有很多内
客，请翻开下一页！
你现在的位置
491
---
## Page 528
完整的mymismatch.php脚本
Squery = "SELECT user_id FROM mismatch_user WHERE user_id != "
.$ SESSION['user id'].""";
$data = mysqli_query($dbc,$query);
这个叠询获取除配对老以外的
while ($row = mysqli_fetch_array($data))(
所有其他用户。
// Grab the response data for the user (a potential mismatch)
$query2 ="sELECT response_id, topic_id, response FROM mismatch_response "
3
"WHERE user_id = '"
.$row['user_id']
$data2 = mysqli_query($dbc,Squery2);
对于每个用户，这个查询疑取将
$mismatch_responses = array();
作为续选互补配对进行比较的问卷
while ($row2 = mysqli_fetch_array($data2))(
响应。
array_push($mismatch_responses, $row2);
这个大括
号标志着主
while循环的
// Compare each response and calculate a mismatch total
这个tor循环计算候选互补配对
结束。
$score=0;
的配对得分。
$topics = array() ;
for （$i =0;$i  $mismatch_score){
// We found a better mismatch, so update the mismatch search results
$mismatch_score =$score;
如果这个用户比到日前为止
的最佳配对更好，则将他设
Smismatch_user_id = $row['user_id'];
置为最佳配对。
$mismatch_topics = array_slice($topics, 0);
这个面数抽取数组中的一“片”。在这里只是用它将
Stopics数组复制到Smismatch_topics。
目前还处于上一页第一个证语句中，
下面还有更多代码…
492
第8章
---
## Page 529
显示互补配对结果之前，
确保确实找到一个“最
控制你的数据，世界在你手中
// Make sure a mismatch was found
一佳配对”。
if （$mismatch_user_id!=-1)(《
$query = "SELECT username, first_name, last_name, city, state, picture FROM mismatch_user "
"WHERE user_id = '$mismatch_user_id'";
$data = mysqli_query($dbc, $query) ;
壹询互科配对用户的信乌以便
显示。
if (mysqli_num_rows ($data) == 1)(
// The user row for the mismatch was found, so display the user data
$row = mysqli_fetch_array($data);
echo '';
墨示用户的名。
if (!empty(Srow['first_name'])&6!empty($row['1ast_name']))(
echo $row['first_name'].''.$row['last_name'].'';
}
if (!empty($row['city']) && !empty($row['state'])){
显示用户所在城
echo $row['city'].'，'.Srow['state'].''；
市和州。
echo '';
if (!empty($row['picture′])){
echo '';
：
不要忘记生成一个要
echo '';
示用户照件的
标记！
// Display the mismatched topics
echo 'You are mismatched on the following '.count ($mismatch_topics).' topics:';
foreach ($mismatch_topics as $topic)(
echo $topic.'';
R
需要显示因为哪些主题（存在
相反响应）而得到这个互补配
对.这很重要。
// Display a link to the mismatch user's profile
echo 'View .';
最后，提供这个最佳配对用户情况间
表的一个链接，以便管录用户找到有关
他的更多信息。
else {
'be mismatched.';
你现在的位置
493
---
## Page 530
建立互补配对！
运行测试
找到你的最佳配对！
修改Mismatch，使用这个新的MyMismatch脚本（或者从HeadFirstLabs网站（www，
headfirstlabs.com/books/hfphp）下载这个应用）。这要求创建一个新的
mymismatch.php脚本，另外在navmenu.php脚本中增加一个“MyMismatch”菜
单项，以便用户访问这个脚本。
将脚本上传到你的Web服务器，然后在一个Web浏览器中打开Mismatch主页（index。
php）。确保登录并填写问卷，然后点击“MyMismatch”菜单项查看你的最佳配对。
000
我真不知递居然会这
000
么着递，不过我实在无
法抗拒Johan的魅力！
3ohan6My
Mismatch 页面
显示出Sidney是
我们在所有这些方面
他的最佳配对。
都如此不同…..真不
可思议。
Theo
par
Sidney访间My
Mismatch页面时看到
了ohan，她的最佳
配对。
PDG
494
第8章
---
## Page 531
控制你的数据，世界在你手中
数据库模式磁贴
还记得之前的GuitarWars应用吗？你的任务是研究GuitarWars数据库，可
以使用某些规范化帮助，并提出一个更好的模式。使用以下所有磁贴填入
由这个数据库驱动
表名和列名，并标识出主键和外键。
Cuitar Wars主页上
的分数显示。
guitarwars
这里是原来的Cuitar
date
Guitar
Wars数据库.其中存
name
储了用户提文的高分。
score
screenshot
approved
Guitar
这里是需要你利用磁贴建立的
改进新模式……….祝你好运！
score
player_id
player_id
score
date
paaoxdde
screenshot
last_name
first_name
guitarwars_player
你现在的位置
495
---
## Page 532
数据库模式磁贴答案
数据库模式磁贴答案
还记得之前的GuitarWars应用吗？你的任务是研究GuitarWars数据库，可
由数据库驱动Cuitar
以使用某些规范化帮助，并提出一个更好的模式。使用以下所有磁贴填人
Wavs主页上的分数
表名和列名，并标识出主键和外键。
显示。
guitarwars
这个表缺少一个主
date
键，这是所有规范化
name
Guitar
数据库中很重要的
一部分。
score
screenshot
approved
Guitar
由于同一个用户可以提交多个高分
所以name列会导政余数据..这
可不太好！
表有了新的表名
因为它们更有针
对性。
guitarwars_player
每个乐手的名字现
新的score_id列作为
在分解为名和姓来
分数表中非常需要
增强原子性，而且
的主键。
guitarwars_score
player_id
不论他们提交多少
个高分，名和姓只
score_id
first_name
2
存储一次。
player_id
last_name
分数表通过一个
date
创建一个存储乐手姓名的
新的外键引用
新表，并通过一个键将它
乐手。
score
乐手和高分之间
连接到分数表，这就解决
存在一对多关系！
了元余用户名数据问题。
screenshot
approved
GuitazWars数据库不存在任何
①确保列具有原子性，
依赖列问题。
②每个表有自己的主键。
这里再次给出这些规则，以免你
③确保非键列相互之间不存在依赖。
忘记！
496
第8章
---
## Page 533
控制你的数据，世界在你手中
PHP&MySQL填字游戏
是不是还在等待找到你自己的最佳配对？暂且不要考虑这个问题，
先来完成这个填字游戏。
横向
纵向
1.数据库中所有结构（如表和列）及其如何连接的一种
1.利用联接可以将其消除。
表示。
2.一个表中的一列，它引用另一个表的主键。
4.一个表中的多行与另一个表中的多行关联时会发生
3.从一个数据库生成一个表单时，则认为它是
这种关系。
6.它不是真正的原子核（nuclear），而是对于一个给定
5.这允许你在不同PHP数据类型之间转换。
数据库有意义的最小规模的数据。
7.使用它可以在一个查询中将一个表的结果与另一个
8.对于两个表，如果一个表中只有一行对应于另一个表
表的结果相结合。
中的每一行，则存在这种关系。
PD
10.消除一个数据库中的余和其他设计问题的过程。
9.它对于明确一个表的设计非常有帮助。
11.可以利用这个方便的小操作符简化一些if-else语句。
13.查询中用来引用一个信息的一个临时名。
12.一个表中的一行与另一个表中的多行关联时会发生
这种关系。
你现在的位置
497
---
## Page 534
php&mysql填字游戏答案
PHP&MySQL填字游戏答案
Y
E
NOO
N
0
A
PDG
498
第8章
---
## Page 535
控制你的数据，世界在你手中
PHP&MySQL工具箱
规范化
弟
这一章介绍了很多新的MySQL数据库技
规范化是修改数据库设计从而
术，还谈到了一些新的PHP技巧。来做一
个简单的复习！
减少重复数据并改善数据布局
及相互关系的过程。其目标是
得到一种健壮的设计以便更好
模式与图表
地支持不断增长的数据。
模式是数据库中所有结构（表、
列等）及其如何关联的一种表
示。图表是数据库的一个可视
for(.....)
化表示，包括负责连接表的特
定列的详细情况。
外键
这个循环非常遥合根据特定的
选代次数究成循环。创建一个
这是表中的一列，用来将这个
or循环需要初始化一个计数
表链摇到另一个表。子表中的
器，建立一个测试条件，并指
一个外键通常连接到义表中的
定每次选代后如何更新计数器。
主键，从而有效地链接这两个
表中的行。
AS name
？：
这个SQL语句金建立一个别名，
这个三元禄作符是一个PHP构
这是查询中用来标识一个数据
造，它就像一个压缩版的is一
的临时名。别名通常用于简化
else语句，可以非常方便地根
内联接
查询，可以缩短长的表名和列
据一个true/talse表达式完成简
这种联接可以由两个有匹配行
名。原来的表列不太明确时，
单的选择。
的表合并数据。与普通的查询
别名还可以用来对结果数据重
不同，联接元许从多个表中获
寸命名。
取数据，数据库包括多个表时
这非常有帮助。
你现在的位置
499
---
## Page 537
9串与定制函数
通过函数改善生活
我已经获得工学学位，想于什么都
行。我要找个舒适的小窝，养几只鲨鱼当
宽物，还可能炸毁月球。然后可能会结
婚成家。