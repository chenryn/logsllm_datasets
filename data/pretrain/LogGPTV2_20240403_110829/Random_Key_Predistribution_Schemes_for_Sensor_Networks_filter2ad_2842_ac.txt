2 total links in the network.
2 −xmd)fm ≤ xmd. Sim-
Hence, the requirement is that ( nd
plifying,
(cid:1)
n ≤ 2xm
1 +
(cid:2)
1
fm
(5)
Figure 3 shows the estimated maximum network sizes
for the basic random keys scheme as well as for several pa-
rameters of the q-composite keys scheme. We note that the
maximum network sizes scale linearly with key ring size m.
For example, for p = 0.33, fm = 0.1, and m = 200, the
maximum network size for the 2-composite keys scheme is
1, 415 nodes while the maximum network size for the basic
scheme is 1, 159 nodes.
These calculations are our proposed method of estimat-
ing the maximum supportable size of a network given that
certain security properties hold. Alternative methods may
exist that produce different network size estimations.
random pairwise
basic scheme
q=2
q=3
3000
2500
2000
1500
i
t
e
z
s
k
r
o
w
e
n
m
u
m
x
a
m
i
.
t
s
e
1000
500
0
100
150
200
300
num. of keys in each node’s key ring
250
350
400
Figure 3. Maximum network sizes
(p = 0.33, fm = 0.1)
6 Multipath Key Reinforcement
In this section we present multipath key reinforcement,
a method to strengthen the security of an established link
key by establishing the link key through multiple paths.
This method can be applied in conjunction with the basic
random key scheme to yield greatly improved resilience
against node capture attacks by trading off some network
communication overhead. We analyze the resulting scheme
and explain why we discourage using multipath key rein-
forcement in conjunction with a q-composite scheme.
6.1 Description of multipath key reinforcement
The basic idea behind multipath key reinforcement was
ﬁrst explored by Anderson and Perrig [2]. We assume that
initial key-setup has been completed (in the following ex-
amples, we assume the basic random key scheme was used
for key-setup). There are now many secure links formed
through the common keys in the various nodes’ key rings.
Suppose A has a secure link to B after key-setup. This link
is secured using a single key k from the key pool S. k may
be residing in the key ring memory of some other nodes
elsewhere in the network. If any of those nodes are cap-
tured, the security of the link between A and B is jeopar-
dized. To address this, we would like to update the com-
munication key to a random value after key-setup. How-
ever, we cannot simply coordinate the key update using
the direct link between A and B since if the adversary has
been recording all key-setup trafﬁc, it could decrypt the key-
update message after it obtained k and still obtain the new
communication key.
Our approach is to coordinate the key-update over mul-
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
tiple independent paths. Assume that enough routing in-
formation can be exchanged such that A knows all dis-
joint paths to B created during initial key-setup that are
h hops or less. Speciﬁcally, A, N1, N2, . . . , Ni, B is a
path created during the initial key-setup if and only if
each link (A, N1), (N1, N2), . . . , (Ni−1, Ni), (Ni, B) has
established a link key during the initial key-setup using the
common keys in the nodes’ key rings. Let j be the num-
ber of such paths that are disjoint (do not have any links in
common). A then generates j random values v1, . . . , vj.
Each random value has the same length as the encryp-
tion/decryption key. A then routes each random value along
a different path to B. When B has received all j keys, then
the new link key can be computed by both A and B as:
k(cid:1)
= k ⊕ v1 ⊕ v2 ⊕ . . . ⊕ vj
The secrecy of the link key k is protected by all j random
values. Unless the adversary successfully manages to eaves-
drop on all j paths, they will not know sufﬁcient parts of the
link key to reconstruct it.
The more paths we can ﬁnd between two nodes A and
B, the more security multipath key reinforcement provides
for the link between A and B. However, for any given path,
the probability that the adversary can eavesdrop on the path
increases with the length of the path since if any one link on
the path is insecure then the entire path is made insecure.
Further, it is increasingly expensive in terms of communi-
cation overhead to ﬁnd multiple disjoint paths that are very
long.
In this paper we will analyze the case where only
paths of 2 links (only one intermediate node) are consid-
ered. We call this scheme the 2-hop multipath key reinforce-
ment scheme. This approach has the advantage that path
discovery overhead is minimized: for example, A could ex-
change neighbor lists with B. Once they identify their com-
mon neighbors with which both of them share a key, A and
B can perform key reinforcement using their secure links
through these common neighbors. Furthermore, the paths
are naturally disjoint and no further effort needs to be taken
to guarantee this property. We will calculate the expected
effectiveness of this scheme and evaluate its security prop-
erties in simulation.
6.2 Estimation of expected effectiveness of 2-hop
multipath key reinforcement
In this section, we ﬁrst calculate the expected number of
common neighbors between two nodes in a random uniform
planar deployment of sensors. We then derive a formula for
the new expected probability for compromising a given link
after multipath key reinforcement has taken place.
0.2
0.15
s
k
n
i
l
f
o
n
o
i
t
c
a
r
F
0.1
0.05
0
0
1
2
Secure Links
Compromised Links
7
8
>8
3
4
5
6
Number of reinforcing neighbors
Figure 4. Reinforcement and compromise
statistics for base compromise probability
b = 0.2
b(cid:1)
= b(2b − b2)k
For example, if the adversary has a base 0.1 chance of
eavesdropping on a given link before reinforcement, for a
link reinforced by 3 neighbors, the chance of eavesdropping
after reinforcement improves to 6.86 × 10−4, or about 1 in
1,458.
From the expected number of reinforcing neighbors we
can estimate the expected network communications over-
head of the 2-hop multipath reinforcement scheme. Each
reinforcing neighbor represents an extra 2-hop communica-
tion to help reinforce a given 1-hop link. Hence, on aver-
age, the total additional communications overhead for key-
reinforcement is at least 2×0.5865p2n(cid:1)
times more than the
network communications needed for basic key-setup, not
including additional communications for common-neighbor
discovery. For example, for p = 0.33 and n(cid:1) = 60, we can
expect to see at least 7.66 times additional network trafﬁc
after key-setup is complete. Including common neighbor
discovery, we estimate the ﬁnal scheme to be approximately
10 times more expensive in network communications than
the basic scheme in this case. Given that eavesdropping
probabilities can be improved from 0.1 to 6.86× 10−4 (146
times improvement), this may be a good trade-off.
6.3 Evaluation of multipath key reinforcement
The effectiveness of 2-hop multipath key reinforcement
is evaluated by simulating the random uniform deployment
of 10,000 sensor nodes on a square planar ﬁeld. The prob-
ability of any two nodes being able to establish a secure
link is set at p = 0.33, and the deployment density is set
The ﬁgure above indicates the parameters to be used in
our calculation. B and C denote two communicating sensor
nodes. r is the communications range of each sensor node.
We assume that each node has the same range for receiving
and transmitting. x is the distance between two nodes.
For any given separation x, the area A(x) within both
nodes’ communication radii is the area of the sectors BDE
and CDE minus the area of the rhombus BDCE:
A(x) = 2r2 cos
−1
(cid:6) x
(cid:7)
2r
(cid:8)
r2 − x2
− x
4
The probability distribution function of the distance be-
tween two nodes within communication radius is given by
F (x) = P (distance < x) = x2/r2. The probability den-
sity function is thus f(x) = F (cid:1)(x) = 2x/r2. The expected
area of overlap is thus given by:
(cid:10)
(cid:9) r
(cid:9) r
(cid:10)
0
0
=
=
A(x)f(x)dx
−1
(cid:11)
2r2 cos
√
3
π − 3
4
(cid:6) x
2r
(cid:11)
(cid:7)
(cid:8)
− x
r2 − x2
4
2x
r2
dx
r2 = 0.5865πr2
We deﬁne the term reinforcing neighbors of two nodes
sharing a secure link as the common neighbors with whom
both nodes share a secure link. Since the expected area of
overlap is 0.5865 of a single communication radius, the ex-
pected number of reinforcing neighbors is thus 0.5865p2n(cid:1)
where p is the probability of sharing sufﬁcient keys to com-
municate, and n(cid:1)
is the number of neighbors of each node.
Via Equation 2, this can also be expressed as 0.5865 d2
n(cid:1) . As
an example, for d = 20 and n(cid:1) = 60 (i.e. p = 0.33), the
expected number of reinforcing neighbors is 3.83.
In general, if a link is reinforced by k common neigh-
bors, then the adversary must be able to eavesdrop on that
link, as well as at least one link on each of the k 2-hop paths.
If the adversary’s base probability of compromising a link
is b, then the probability of compromising at least one hop
on any given 2-hop path is the probability of compromis-
ing hop 1 in the path plus the probability of compromising
hop 2 in the path minus probability of compromising both
hops in the path = 2b − b2. Hence, the ﬁnal probability of
breaking the link is now
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
basic scheme
q=2 composite key scheme
basic scheme w/ multipath reinforcement length=2 hops
q=2 w/ multipath reinforcement length=2 hops
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
basic scheme
q=2 composite keys
basic scheme w/ multipath key reinforcement, hops=2
q=2 w/ multipath key reinforcement, hops=2
10000
9000
8000
7000
6000
5000
4000
3000
2000
1000
i
t
e
z
s
k
r
o
w
e
n
m
u
m
x
a
m
i
.
t
s
e
i
d
e
s
m
o
r
p
m
o
c
s
n
o
i
t
i
a
c
n
u
m
m
o
c
f
o
n
o
i
t
c
a
r
F
0
0
50
100
150
Number of nodes compromised
200
250
300
350
400
0
100
150
200
250
300
350
m (Number of keys per node)
(a) Resistance against node capture
(b) Maximum network sizes
Figure 5. Multipath key reinforcement results (m = 200, p = 0.33)
such that the expected number of neighbors of each node
was 60. The eavesdropping attack is modeled by iterating
over each secure link and marking it as compromised with
random chance based on the simulated probability of com-
promise c. A link is considered completely compromised
only if it is compromised and all its reinforcement paths are
also compromised.
Figure 4 reﬂects the relative distribution of the number of
reinforcing neighbors for each link in the simulation. The
results indicated reﬂect support for our calculated average
of 3.83 reinforcing neighbors between any 2 nodes within
communication distance. The ﬁgure also shows the distri-
bution of reinforced links that were compromised by an ad-
versary with a base 0.2 probability of compromising any
link prior to reinforcement. In this simulation, links with
more than 3 reinforcing neighbors did not suffer signiﬁcant