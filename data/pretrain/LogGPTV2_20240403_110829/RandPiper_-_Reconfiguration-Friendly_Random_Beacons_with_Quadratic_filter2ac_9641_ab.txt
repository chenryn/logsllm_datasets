the future in GRandPiper by simply corrupting the next 𝑡 leaders
1VDFs require computing operations such as squarings, which are energy intensive.
2Full version of this work can be found here [11].
3An adaptive adversary may also break the security of PVSS used in GRandPiper, as
we do not know of any adaptively secure PVSS.
2
Session 12D: Decentralized Cryptographic Protocols CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3503Cachin et al./Drand [16, 25]
[2, 30]
Dfinity
[20]
HERB
[44]
HydRand
[44]
HydRand (Worst)
RandChain
[29]
[47]
RandHerd
[47]
RandHound
[43]
RandRunner
RandShare
[47]
1
𝑂(𝜅)
1
𝑡 + 1
𝑂(𝜅)
𝑂(𝜅)
1
𝑡 + 1
1
49%
49%
33%
33% 𝑂(min(𝜅, 𝑡))†
33%
33%
33%
33%
49%
33%
49% 𝑂(min(𝜅, 𝑡))†
49%
49%
Best
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑐 log 𝑛)¶
𝑂(𝜅𝑐2𝑛)¶
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)§
Worst
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛3)∗
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛3)
𝑂(𝜅𝑛4)
𝑂(𝜅𝑐2𝑛2)¶
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛4)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛2)
𝑂(𝜅𝑛3)
Adp.
Adv.
Re-usable
Setup
No
DKG?
Assumption
✗
✗
✗
✗
✗
✓
✗
✗
✓
✓
✗
✗
✗
✓
✓
✗
✗
✓
✓
✓
✗
✗
✗
✓
✓
✗
✗
✓
✓
✓
Threshold Secret/BLS
Threshold BLS
Threshold ElGamal
PVSS
PVSS
PoW
VDF
VSS
Threshold Schnorr
Client based, PVSS
Table 1: Comparison of related works on Random Beacon protocols in standard synchrony
Protocol
Res.(t)
Unpred.
Comm. Compl
GRandPiper
GRandPiper (Worst)
BRandPiper
𝜅 is the security parameter denoting maximum of sizes of signatures, hashes, and other components used in the protocol. Res. refers to the number of Byzantine faults tolerated in
the system. Unpred. refers to the unpredictability of the random beacon, in terms of the number of future rounds an adaptive rushing adversary can predict. A rushing adversary
can always obtain outputs before correct nodes, and hence, the minimum is 1. Adp. Adv refers to Adaptive Adversary whether the adversary can pick its 𝑡 corruptions at any point
in the protocol. Reusable Setup refers to a setup that can be reused when a node is replaced in the system. ∗probabilistically 𝑂(𝜅𝑛3) when 𝑂(𝑛) consecutive leaders are bad. ¶𝑐 is
the average (constant) size of the groups of server nodes. †In expectation it is 2 rounds, the probability of an adversary predicting 𝑐 epochs into the future is 2−𝑐, with a security
𝑡 + 1
1
PVSS, 𝑞-SDH
PVSS, 𝑞-SDH
VSS, 𝑞-SDH
✓
✓
✓
✓
✓
✓
✗
✗
✓
parameter 𝜅 it is min(𝜅, 𝑡) + 1 epochs. §In the optimistic case, when the leader is honest and 𝑓 = 𝑂(1) nodes are Byzantine.
and learning their committed secrets. At this point, continuing to
use the PVSS scheme to improve the unpredictability leads to a
loss of quadratic communication complexity. Hence, we look in a
different direction to improve unpredictability.
BRandPiper. In BRandPiper, we explore how to achieve the best
possible unpredictability while having the best possible communica-
tion complexity and also supporting reconfiguration. In particular,
we show the following result:
Theorem 1.3 (Informal). Assuming public-key infrastructure
and a universal structured reference string setup under 𝑞-SDH as-
sumption, there exists a reconfiguration-friendly, bias-resistant and
1-absolute unpredictable (see Definition 2.2) adaptively secure random
beacon protocol tolerating 𝑡  𝑡 nodes in every epoch, ensuring strong unpre-
dictability of only 1 epoch into the future.
As a building block, we first construct an improved VSS (iVSS)
protocol by modifying the state-of-the-art VSS scheme eVSS [32].
Compared to eVSS, which requires 𝑂(𝜅𝑛 + 𝜅 𝑓 + 𝜅 𝑓 𝑛) information
on the bulletin board (broadcast channel), iVSS posts only 𝑂(𝜅𝑛)
bits of information on the bulletin board which in effect improves
the amortized communication complexity of the VSS scheme to
𝑂(𝜅 𝑓 𝑛2) where 𝑓 is the actual number of faults. This may be of
independent interest in applications requiring batched VSS.
At a high level, we use round-robin leaders and iVSS in point-to-
point channels to secret share 𝑛 random numbers in every epoch.
Since we are producing 𝑛 shares every epoch, we can now consume
3
𝑛 shares in every epoch. Thus, in every epoch, using the homomor-
phic properties of VSS secret shares, we reconstruct a homomorphic
sum of 𝑛 shares in every epoch, thus eliminating the 𝑡 + 1 epoch
advantage held by the adaptive adversary and reducing it to just 1
epoch. We carefully design the protocol so that we have a commu-
nication complexity of 𝑂(𝜅 𝑓 𝑛2). Our key insight in BRandPiper is
that a leader can efficiently secret share 𝑛 shares at once instead
of one. These shares are buffered by all nodes, and it ensures that
there are always sufficient shares available for reconstruction in
the next 𝑛 epochs so far as leaders are chosen in a round-robin
manner. The buffering helps prevent a Byzantine node from biasing
by refusing to share new blocks, when the outputs are unfavor-
able. Without our techniques, while assuming threshold signatures,
existing VSS protocols have an optimistic communication complex-
ity of 𝑂(𝜅𝑛2) [32] and worst case communication complexity of
𝑂(𝜅𝑛3) to perform one secret sharing. The difference in the order
arises from opening 𝑓 shares for every node that complains against
the leader. BRandPiper shows how to perform 𝑂(𝑛) VSS with a
communication complexity of 𝑂(𝜅 𝑓 𝑛2) which is quadratic when
𝑓 = 𝑂(1).
1.3 Efficient Reconfiguration
While prior works [16, 44] provide a random beacon protocol with
𝑂(𝜅𝑛2) communication without threshold signatures and claim to
be reconfiguration-friendly, they do not provide any reconfigura-
tion mechanisms. In this work, we provide reconfiguration proto-
cols to restore the resilience of our beacon protocol when some
Byzantine nodes have been removed from the system. Since we do
not rely on threshold signatures, new nodes can join the system
without generating new keys for all nodes. Moreover, the recon-
figuration protocol is executed while still maintaining quadratic
communication complexity per round.
Clock synchronization for the new joining nodes during reconfig-