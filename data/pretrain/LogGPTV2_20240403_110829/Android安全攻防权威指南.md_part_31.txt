户层沙箱内）。遗憾的是，对于任意给定的任务，可用的应用数量对于用户而言都是非常庞大的，
这让用户难以确定是否应该信任特定的开发者。如果用户对是否可信判断失误，安装了一款恶意
应用，则可能会导致设备完全沦陷。除了依靠用户作出错误的信任决定，攻击者还可以盗用开发
者的GoolgePlay账号，将其应用替换为包含恶意代码的重打包版本。这个恶意应用就可以自动
安装到安装有安全版本的设备上。这是一种强力的攻击，如果实施的话，会对Android生态圈造
成灾难性影响
GooglePlay商店中的其他内容也可能用来攻陷设备，但这些内容的来源目前还不是完全清
楚。面不了解这一情况，就不可能确定其中是否存在值得调查的攻击面。
除了GooglePlay商店的Web应用之外这不在本章讨论范围）.Android设备上的Google Play
应用也暴露了一个攻击面。这个应用必须处理并呈现由开发者提供的非信任数据，例如，应用描
述就是一个非信任数据源。在这一攻击面之下的底层代码是挖掘安全漏洞的有趣位置。
3.第三方应用生态圈
谷歌公司允许Android用户在GooglePlay商店之外安装应用。通过这种开放的方式.Android
允许独立第三方通过公司网站或个人网站分发应用。然面用户必须首先显式地授权才能安装第三
方应用，流程如图5-3所示。
---
## Page 136
120第5章理解Android的攻击面
图5-3授权未知应用的流程
能够在Android设备上安装第三方应用的这一特点，自然而然地催生了第三方应用生态圈，
但同时也带来了一些相关的风险。或许第三方应用商店所带来的最大威胁，是从PC和Mac上盗
版或破解软件中带过来的特洛伊末马。恶意攻击者会对一个流行并可信任的应用进行反编译，然
为“State ofSecurity in theApp Economy:‘Mobile Apps Under Attack"（“应用经济中的安全性分析：
在遭受攻击的移动应用）的研究报告显示，GooglePlay商店中排名前100的Android付费应用
全部都被破解、修改并放到第三方分发站点上供人下载。这份报告也给出了关于这些站点流行程
度的一些很有价值的数据，并提到这些站点提供的一些流行Android付费应用的总下载次数达到
50万人次。
在Android4.2中，谷歌公司引入了一个称为“验证应用”的特性。这一特性通过使用指纹
识别和启发式进行工作，从应用中提取一些启发式数据，然后使用这些数据在谷歌公司运营的一
个数据库中查询，来确定这个应用是否为已知恶意代码，或者存在潜在的恶意因素。通过这种方
式，验证应用特性模拟了一个简单的基于特征的黑名单系统，与反病毒系统使用的机制类似。验
证应用特性可以基于应用属性的分类，向用户发出警告或者完全阻断安装过程，图5-4显示了这
一特性在发挥作用时的界面。
2013年年初，Android.Troj.mdk特洛伊木马被发现内嵌到第三方应用站点中的多达7000个
Android破解应用中，其中就包括《神庙逃亡》和《捕鱼达人》等多款流行游戏。这个木马在中
国感染了超过100万部Android设备，成为当时已知的最大僵户网络之一。它让先前被发现感染
了中国超过10万部Android设备的Rootstrap僵户网络相形见绵。很显然，第三方应用商店对
Android设备构成了明显而现实的威胁，应尽量避免使用。实际上，如果可能，应该在设备上禁
用“允许从未知来源安装应用”的选项。
---
## Page 137
5.3选程攻击面
121
图5-4验证应用时进行阻断或者警示
4.Bouncer系统
为了应对GooglePlay商店中的恶意应用，Android安全团队运行了一个称为Bouncer的系统
这个系统在一个虚拟环境中运行开发者上传的应用，来确定应用是否具有恶意行为。总面言之、
Bouncer是一个动态运行时分析工具。它实际上是一个基于QEMU（QuickEmulator）的仿真器
（与Android SDK中的非常类似）.用来运行Android系统与待检测的应用。为了恰当地仿真一个
真实移动设备的环境，Bouncer对一个应用仿真了通用的运行时环境，这意味着应用可以访问：
地址薄
口相册
口短信记录
口文件
所有这些记录都提供了一些虚构数据，对于Bouncer系统中的不同仿真虚拟机磁盘镜像，这
些数据都不相同。Bouncer也仿真了移动设备的通用外设，如摄像头、加速计和GPS等。此外，
应用，这使得他们通过HTTP请求，获取到了Google Bouncer基础设施的终端访问。Miller 和
Oberheide也演示了一系列恶意应用对Bouncer进行指纹识别的方法，这些技术包括识别Bouncer
的短信记录、地址薄、相册中的独特虚构数据，以及对QEMU实例进行检测并进行独特性的指
纹识别。这些识别技术可以被恶意攻击者使用，在当Bouncer系统正在监视时，避免让他们的应
用执行恶意功能。随后，在用户手机上执行的同一应用，却可以正确地开始它的恶意行为。
Nicholas Percoco 在他的 Blackhat 2012 白皮书 “Adventures in Bouncerland” (“Bouncer 领地探
险”）中发布了类似的研究工作。与检测Bouncer是否存在的思路不同，他的方法是开发一个能
够获得下载与执行恶意JavaScript代码权限的应用。这个应用的原本功能是以Web为后台、用户
可配置的短信拦截应用，但在取得访间Web页面与下载执行JavaScript代码的权限之后，后端
Web服务器就很显然地变成一个命令与控制信道，并可以在运行时为应用提供恶意代码。Percoco
---
## Page 138
122第5章理解Android的攻击面
的研究也演示验证了：对最新发布应用相对很小的一次更新，可以含有恶意内容面不被Bouncer
系统发现
即使不用这些绕过Bouncer系统的技术，恶意应用程序仍然可以达到GooglePlay商店上的
攻击面。对于默认配置的Android设备面言，恶意代码与间课软件的威胁将迅速增大。设备可以
被配置成允许安装第三方应用，而绝大多数恶意应用就是在第三方应用市场中发现的。
5.GooglePhones Home
在后台，Android设备会通过一个称为GTalkService的服务连接到谷歌公司的基础设施上，
这一服务使用谷歌公司的ProtoBufs传输协议实现，支持一个设备连接到多个谷歌公司的后台服
务上。例如，Google Play商店和Gmail都使用这一服务来访问云中的数据。谷歌公司在Android
2.2中实现了使用GTalkService协议的云端通信机制（C2DM）。2012年，谷歌公司废弃了C2DM，
并引人Google云通信机制（GCM）。GCM继续使用GTalkService来进行云通信。一个具体的例
子是通过GooglePlay网站来安装应用，如图5-5所示。
0110
Google Santa Trackcr
Free
Coogle Iic
heos+ ±0V08
图5-5从Web安装一个应用
与用户发起的安装不同，GTalkService最有意思的一个属性是，它允许谷歌公司根据自已的
意志来安装和移除应用。事实上，这个过程还可能以完全静默的方式进行，而不用通知终端用户。
在过去，谷歌公司将这一机制作为应急处置机制，一次就可以从整个设备池中移除被确认的恶意
应用。然面，它也使用了这一机制往设备上推送应用。2013年，谷歌公司主动向一些较旧的设
备提供了名为Google Play Services的API.为此，谷歌公司在所有Android设备上安装了一个新
应用，来提供这一功能。
尽管GTalkService代表着一个非常有趣的攻击面，但是能够达到它的攻击向量需要可信访
问。面这一功能连接到云的通信，是由认证锁定的SSL协议进行安全保护的。这限定了攻击只
---
## Page 139
5.4物理相邻123
能从谷歌的后台发起，但话说回来，利用谷歌的后台来进行攻击也不是完全不可能。
遗憾的是，深人分析GTalkService暴露的攻击面需要非常大的逆向分析工作量。实现Android
设备这一部分功能的组件是闭源的：并非Android开放源代码项目（AOSP）的组成部分。对这
些代码进行审查需要使用反汇编器、反编译器和其他一些专用工具。一个很好的起点是对Google
Play应用或GTalkService进行逆向分析。
Jon Oberheide 验证演示了两次利用GTalkService来攻破设备的不同攻击。第一次演示是在
SummerCon 2012大会上，证明了可以通过com.accounts.AccountManager的API，访问用于保持
持续性后台连接的认证令牌。恶意应用可以使用这一令牌来进行静默的应用安装，无须提示用户
或让用户审查应用权限。这一攻击的详细信息可访问https:/jon.oberheide.org/blog/2011/05/28/
when-angry-birds-attack-android-edition/。第次演示详见https:/jon.oberheide.org/blog/2011/03/
07/how-i-almost-won-pwn2own-via-xss/，证明了GooglePlay 网站上存在—个 XSS 安全漏润，攻击
者可以利用它完成同样的攻击目的。但是这次，并不需要安装恶意应用。在这两次演示中，
Oberheide都开发了概念验证代码来演示攻击。Oberheide的发现影响巨大而且相当简单，对这个
攻击面进行更深入的探索也是未来一个非常有趣的研究方向。
5.4物理相邻
回顾一下5.3.1目第4条中对“物理相邻”的定义。物理攻击需要直接接触目标设备，而与
之不同的是，物理相邻攻击只需要攻击者在目标设备的某一范围之内。这一攻击面的大部分都涉
及各种类型的射频（RF）通信。然而也有一些攻击面是和射频无关的。本节将详细介绍各种无
线通信信道，并讨论在物理相邻范围内可达的其他攻击面。
5.4.1无线通信
Android设备都支持多种基于射频的无线技术，几乎所有设备都支持Wi-Fi和蓝牙，许多还
支持GPS。可以拨打电话的设备支持一种或多种标准化的手机通信技术，如GSM（全球移动通
信系统）和CDMA（码分多址）等，较新的Android设备还支持NFC（近场通信）。每一种无线
技术都有特定的频率，因此仅在某个物理相邻范围内才是可达的。下面几个小节将深人探讨每一
种技术，并解释相关的访问需求。但在此之前，让我们先了解一下可以应用到所有这些媒介中的
一些基本概念。
所有的无线通信都容易受到大量的各类攻击，包括主动攻击与被动攻击。主动攻击要求攻击
者干扰正常的信息流，包括阻塞、欺骗和中间人（MitM）等攻击形式。因为Wi-Fi和蜂窝网络是
用来访问整个互联网的，因此针对这些媒介的中间人攻击可以达到非常率富的攻击面。面被动攻
击（如网络噢探）可以让攻击者攻破流经这些媒介的信息流。偷窃到的信息是非常重要的。举例
来说，窃取来的键击记录、认证凭据、金融数据或其他数据，可能被用来进行影响更大的攻击。
1. GPS
GPS，通常指代Android中的位置数据，可以让设备确定自身在地球上的位置。它通过从围
---
## Page 140
124第5章理解Android的攻击面
绕地球轨道飞行的卫星获取信号来工作。GPS接收器芯片接收这些卫星信号并进行放大，然后根
据结果确定自己所在的位置。绝大多数人知道GPS是因为它经常被用来进行语音导航。事实上，
专门为导航而设计的设备通常被称为GPS设备。现在，GPS已经成为旅行者的重要工具。
然面，如此广泛地使用GPS并不是没有争议的。尽管GPS是一种单向通信机制，但是位置
数据会通过 Android 枢架（android.location API）和 Google Play Services （ Location Services API ）
暴露给Android应用。无论使用了哪个APl，许多Android应用并不尊重终端用户的隐私，面是
监视用户的位置。有些应用的作者被认为将用户的位置数据卖给了未知第三方。这一事实需要引
起充分的关注与重视。
在底层，每个设备上实现GPS功能的软硬件会有所差异，有些设备拥有一个提供GPS支持
的单独芯片，面其他的将GPS支持集成到一个芯片系统上。硬件的支持软件也相应地具有差异，
并通常是闭源和专有的。这一事实使得枚举并深入分析暴露的攻击面变得非常困难、耗时，面且
的攻击面。随着数据从软件栈往上流动，还有其他额外的攻击面。
GPS信号是从外太空发射的，因此理论上攻击者可以离他的目标非常远。然面，目前还没有
通过GPS无线电信号来攻破Android设备的已知攻击案例。因为Android设备并没有将GPS信息
用于安全目的（如认证），所以这种攻击的可能性是非常有限的。目前涉及位置数据的唯一已知
攻击是欺编攻击，这些攻击可以在用户使用语音导航时误导用户，或者在那些使用位置数据作为
部分代码逻辑的游戏应用中作弊。
2.基带
智能手机区别于其他智能设备的特点是，可以与移动网络通信。在最底层，这一功能是由蜂
窝调制解调器提供的。这个组件通常被称为基带处理器，可能是单个芯片，也可能是片上系统的
一部分。在这个芯片上运行的软件被称为基带围件，它是Android电话栈（telephony stack）的软
件组件。对基带的攻击非常具有吸引力，因为它有以下两个特点：终端用户难以察觉，以及能够
访问手机通话记录及传输的数据。正因为如此，它代表着智能手机一个具有吸引力的攻击面。
尽管针对基带的攻击是远程攻击，但是攻击者必须和目标在一定的范围内。在一般的部署条
件下，手机基带芯片可以在基站的几公里之外。移动设备会自动连接到信号最强的基站上，因此
攻击者只要离潜在目标足够近，就可以被当成信号最强的基站。目标与攻击者的“基站”进行关
联后，攻击者就可以对目标的通信进行中间人攻击，或者向目标发送攻击流量。这种类型的攻击
被称为“伪基站”攻击，近年来得到了相当多的关注。
Android智能手机支持多种移动通信技术，包括GSM、CDMA和LTE等。每种技术都是由
一组支持蜂窝网络中不同组件相互通信的协议组成的。为了攻破一个设备，最需要关注的协议就
是那些设备所支持的协议，每个协议都代表着一个攻击向量，而处理协议的底层代码代表着一个
攻击面。
要想深入分析基带所暴露出的攻击面，不仅需要熟练运用IDAPro等工具，还要会用一些专
业设备。因为基带固件通常都是闭源的、专有的，而且特定于所使用的基带处理器，所以对它进
行逆向和审核非常具有挑战性。要与基带进行通信，必须使用一些高级的无线电硬件，如Enmus
---
## Page 141
5.4物理相邻125
Research公司的 USRP（Unversal Software Radio Perpheral，通用软件无线电外设），或者Nuand
公司的 BladeRF等。然而也有一些小型的便携式基站，如Femtocells和 Picopops，可以让任务变
得简单。当硬件就位后，仍然需要实现必要的协议才能分析攻击面。开放移动通信（Osmocom）
项目与其他一些项目为其中涉及的一些协议提供了开源实现。
在Android操作系统中，无线电接口层（RIL）与基带进行通信，并向设备的其余部分暴露
蜂窝通信功能。关于RIL的更多信息见第11章。
3.蓝牙
蓝牙无线技术在Android设备上广泛使用，支持许多种功能，同时也暴露了一个丰富的攻击
面。蓝牙被设计来作为串口通信的无线替代，具有发射范围小、功耗低的特点。尽管大多数蓝牙
通信被限制在大约10米的范围内，但是使用天线和更强大的传输器可以将通信范围扩大约100
米。这让蓝牙成为了攻击Android设备距离第三远（排在基带与Wi-Fi之后）的无线媒介。
绝大多数移动设备用户对蓝牙是非常熟悉的，这要归功于蓝牙耳机的流行。但是许多用户并
不知道蓝牙实际上有30多种协议（Profile），每种蓝牙协议都定义了蓝牙设备的一项特殊功能。
例如，大多数蓝牙耳机使用HFP（Hands-Free Profile，免提协议）或HSP（HandsetProfile，），这
些蓝牙协议让连接的设备能够控制蓝牙耳机的扬声器、话简等。其他常用的蓝牙协议有文件传输
协议（FTP）拨号网络（DUN）协议、人机接口设备（HID）协议和音视频远程控制协议（ACRCP）