surements. One-oﬀ traceroutes take more time to execute,
and worse, may fail. RTTs measured from the probe become
higher.
time to limit the instantaneous load on a probe. When load
increases, so does the completion time. We measure the time
delta between when we request traceroute measurements
and the time they ﬁnish.
Completion time signiﬁcantly increases with the num-
ber of traceroutes. Figure 8 shows that the completion
time may be 6.7 minutes (resp. 4.5 minutes) when requesting
50 one-oﬀ traceroutes on a v2 (resp. v3) probe. It takes up to
41 minutes with 500 one-oﬀ traceroutes on a v3 probes. All
probe versions, including v3, are subject to a signiﬁcant in-
crease in completion time. Further experiments have shown
completion times greater than one hour, even for v3 probes.
Completion time increases with the load towards the
probe. In Figure 7, while the completion time for the ﬁrst
25 one-oﬀ traceroutes takes up to 6.2 minutes, it takes up
to 11.3 minutes for the second series of one-oﬀ traceroutes
and up to 20.2 minutes for the third series. Sending 500
ping/s to a probe may then multiply the one-oﬀ traceroutes
completion time by more than 3. When the ping frequency
becomes too high, most of the traceroutes fail.
Key points Under load, requested measurements may be
delayed, rendering the platform unsuitable to synchronized
measurements. One could not ensure that pings or tracer-
outes start simultaneously on multiple probes. This is espe-
cially a problem when one wants to measure the eﬀect of a
single event from multiple vantage points, or an exogenous
event. This problem applies to all probe hardware—including
the most powerful v3.
6. DISCUSSIONS
We now describe the impact for researchers working with
the platform (§6.1) as well as two solutions on how to miti-
gate interference in practice (§6.2).
6.1 Impact for researchers
On previous works. As described earlier, many research
papers have used RIPE Atlas. Some of them relied on delay-
based measurements [3, 4, 18, 28, 6, 16] which can be im-
pacted by interferences. For instance, Rimondini et al. [3]
used PELT [29], a changepoint detection algorithm, to de-
tect shifts in RTTs and correlate them with routing changes.
We mimicked such experiments on the RTTs of Figures 3
and 4 and detected a changepoint each time a one-oﬀ tracer-
441provide users with information about the state of these plat-
forms and their nodes. In contrast, RIPE Atlas does not use
virtualization and relies on a scheduler to share resources
among users.
Gangam et al. [36] introduced heuristics to schedule a set
of measurements between a set of nodes in order to avoid
interference eﬀects. However, this does not work when ex-
ternal measurements use Atlas probes as destinations.
Sanchez [37] et al. proposed a technique to coordinate ex-
periments of a large-scale measurements platform in order
to avoid undesired load on a network or a device. This so-
lution is based on contracts, that give their holder speciﬁed
rights over a set of resources for a limited period of time. In
contrast, RIPE Atlas applies static rate limits for users and
measurements. An user cannot run more than 100 simulta-
neous measurements, and the ping frequency is limited to
one ping per minute.
Dasu [38] is a software-based measurement platform hosted
by voluntary nodes located at the edge of the network. To
enable ﬁner-grained synchronization between a set of mea-
surements (on the order of milliseconds), Dasu adopts a re-
mote triggering execution model. In contrast, the one-oﬀ
measurements provided by RIPE Atlas are launched as soon
as possible (best-eﬀort).
In [23], Bajpai et al. showed that RTTs from v1 and v2
probes to the ﬁrst hop router are consistently higher than for
v3 probes. They do not however study the relation between
the measured delays and the load of the probes.
Mok et al. [39] proposed a technique to reduce packet
sending time on low-end devices such as Atlas probes. This
technique may be useful to counteract some of the interfer-
ence eﬀects we expose in this paper.
8. CONCLUSION
We presented the ﬁrst measurement study of user-induced
interferences on the RIPE Atlas platform. We found that
measurements do interfere with each other. Delays reported
from the probe increase and vary more when they compete
with concurrent measurements. Measurement campaigns can
further be arbitrary delayed, making it hard to perform si-
multaneous experiments from multiple probes.
Our ﬁndings also bring up new, non-trivial research ques-
tions: how can we design measurement platforms that pro-
vide more isolation between users, while still being eﬃcient
(i.e., not requiring a global lock). We plan to explore this
direction in the future.
9. ACKNOWLEDGMENTS
We wish to thank both the RIPE Atlas and the NLNOG
RING support teams for accommodating our measurements
and promptly replying to our questions.
Figure 8: One-oﬀ traceroutes completion time is also im-
pacted by concurrent measurements,
independent of the
hardware used. Results can be delayed by more than half
an hour—making it impossible to perform synchronized ex-
periments.
oute series starts and stops. Cicalese et al. [18] used the min-
imum value of ten successive RTTs to enumerate and geolo-
cate IP-level anycast replicas. As a 1ms diﬀerence in latency
measurements corresponds to a 100 km radius in geodesic
distance, such studies may also be polluted by interference
eﬀects. An operator can use Atlas probes to measure the
performance of her network. In this case, interference eﬀects
highlighted on the Figure 5 and 6 could wrongly trigger con-
gestion alarms. Based on our results, any delay-based mea-
surement obtained from v1 and v2 probes should be avoided
if a precision below 15 ms is required.
On publicly available data. RIPE Atlas makes publicly
available all the results collected with the platform since its
inception in 2010 [30]. Researchers using these data should
consider the impact of interferences. Especially for data col-
lected before 2013—prior to v3 probes. We suggest researchers
to be very careful when using publicly available delay mea-
surements.
6.2 Solutions
Provide feedback to users with a measurement conﬁ-
dence index. A fundamental problem with Atlas is that the
user has no visibility on the concurrent load of the platform.
For that, we argue that RIPE can return a “conﬁdence in-
dex” along with each result. The index would be function of
the platform concurrent load. High (resp. low) load would
lead to low (resp. high) conﬁdence. Obviously, computing
this metric should be done based on passive measurements
to not stress the platform even more. We are currently work-
ing on calibrating such a metric using our measurements.
Enforce synchronization. While real-time is not a reason-
able objective on shared platforms, more precise scheduling
is achievable by maintaining a lower load on the probes and
delaying upcoming measurements in favor of already sched-
uled events. Upon a measurement request, the user could
then be informed of the exact timing of her experiment.
Such an approach is however not possible if users do not
all have the same privileges and some experiments can be
preempted.
7. RELATED WORK
Other researchers have observed measurement interfer-
ence and its impact on RTT. As an example, the eﬀects
virtualization can produce on measured delays have already
been pointed out [31, 32]. As a number of large-scale plat-
forms use VMs [33, 34, 25], tools such as [35] for PlanetLab,
44210. REFERENCES
[1] RIPE NCC. RIPE Atlas. [Online]. Available: https://
atlas.ripe.net
[2] S. Roy and N. Feamster, “Characterizing correlated
latency anomalies in broadband access networks,” in
ACM SIGCOMM 2013 (Poster Session), 2013.
[3] M. Rimondini, C. Squarcella, and G. Di Battista,
“Towards an Automated Investigation of the Impact of
BGP Routing Changes on Network Delay Variations,”
in PAM, 2014.
[4] G. Da Lozzo, G. Di Battista, and C. Squarcella,
“Visual discovery of the correlation between bgp
routing and round-trip delay active measurements,”
Computing, vol. 96, no. 1, pp. 67–77, 2014.
[5] A. Faggiani, E. Gregori, A. Improta, L. Lenzini,
V. Luconi, and L. Sani, “A study on traceroute
potentiality in revealing the internet as-level
topology,” in IFIP Networking 2014, 2014.
[6] A RIPE Atlas View of Internet Meddling in Turkey .
[Online]. Available: https://labs.ripe.net/Members/
emileaben/
a-ripe-atlas-view-of-internet-meddling-in-turkey
[7] T. Yakimov, “Detecting routing anomalies with ripe
atlas,” april 2014.
[8] C. Anderson, P. Winter, and Roya, “Global network
interference detection over the ripe atlas network,” in
4th USENIX Workshop on Free and Open
Communications on the Internet, August 2014.
[9] [Online]. Available: https://github.com/nsg-ethz/
atlas interference
[10] RIPE Atlas - User-Deﬁned Measurements. [Online].
Available: https://atlas.ripe.net/docs/udm/
[11] N. Wells, “Busybox: A swiss army knife for linux,”
Linux J., vol. 2000, no. 78es, Oct. 2000.
[12] libevent - an event notiﬁcation library. [Online].
Available: http://libevent.org/
[13] Releasing RIPE Atlas Measurements Source Code .
[Online]. Available: https://labs.ripe.net/Members/
philip homburg/ripe-atlas-measurements-source-code
[14] Community Information, contributions, and hosts that
stand out. [Online]. Available: https://atlas.ripe.net/
get-involved/community/
[15] G. Machado, C. Tsiaras, and B. Stiller, “Schengen
Routing: A Compliance Analysis,” in AIMS, 2015.
[16] R. Fanou, F. Pierre, and E. Aben, “On the Diversity
of Interdomain Routing in Africa,” in PAM, 2015.
[17] P. Fiadino, M. Schiavone, and P. Casas, “Vivisecting
whatsapp in cellular networks: Servers, ﬂows, and
quality of experience,” in TMA, 2015.
[18] D. Cicalese, D. Joumblatt, D. Rossi, M.-O. Buob,
J. Auge, and T. Friedman, “A ﬁstful of pings:
Accurate and lightweight anycast enumeration and
geolocation,” in IEEE INFOCOM, 04/2015 2015.
[19] Measuring Countries and IXPs with RIPE Atlas.
[Online]. Available: https://labs.ripe.net/Members/
emileaben/measuring-ixps-with-ripe-atlas
[20] How does the MENOG Region Measure up? [Online].
Available: https://labs.ripe.net/Members/mirjam/
how-does-the-menog-region-measure-up
[21] Measuring Countries and IXPs in the SEE Region.
[Online]. Available: https://labs.ripe.net/Members/
emileaben/
measuring-countries-and-ixps-in-the-see-region
[22] Percentage of connected probes per country. [Online].
Available: https://atlas.ripe.net/results/maps/
density/
[23] V. Bajpai, S. J. Eravuchira, and J. Sch¨onw¨alder,
“Lessons learned from using the ripe atlas platform for
measurement research,” SIGCOMM Comput.
Commun. Rev., vol. 45, no. 3, pp. 35–42, Jul. 2015.
[24] RIPE-Atlas-sbucket. [Online]. Available: https://
github.com/cod3monk/RIPE-Atlas-sbucket
[25] NLNOG Ring. [Online]. Available: https://ring.nlnog.
net
[26] Creating Measurements with the RIPE Atlas Restful
API. [Online]. Available: https://atlas.ripe.net/docs/
measurement-creation-api/
[27] M. J. Luckie, “Scamper: a scalable and extensible
packet prober for active measurement of the internet,”
in IMC, 2010.
[28] RIPE Atlas - Superstorm Sandy. [Online]. Available:
https://labs.ripe.net/Members/emileaben/
ripe-atlas-superstorm-sandy
[29] R. Killick and I. A. Eckley, “changepoint: An r
package for changepoint analysis,” Journal of
Statistical Software, vol. 58, no. 3, pp. ??–??, 6 2014.
[30] RIPE Atlas - Public measurements. [Online].
Available: https://atlas.ripe.net/measurements/#!
public
[31] J. Whiteaker, F. Schneider, and R. Teixeira,
“Explaining packet delays under virtualization,”
SIGCOMM Comput. Commun. Rev., vol. 41, 2009.
[32] N. Spring, L. Peterson, A. Bavier, and V. Pai, “Using
planetlab for network research: Myths, realities, and
best practices,” SIGOPS Oper. Syst. Rev., 2006.
[33] Planetlab, “Planetlab: An open platform for
developing, deploying and accessing planetary-scale
services,” http://planet-lab.org.
[34] M-Lab, “Measurement lab,” http://www.
measurementlab.net.
[35] K. Park and V. S. Pai, “Comon: A mostly-scalable
monitoring system for planetlab,” SIGOPS Oper. Syst.
Rev., vol. 40, no. 1, pp. 65–74, Jan. 2006.
[36] S. Gangam and S. Fahmy, “Mitigating interference in a
network measurement service,” ser. IWQoS ’11, 2011.
[37] M. A. S´anchez, F. E. Bustamante, B. Krishnamurthy,
and W. Willinger, “Experiment coordination for
large-scale measurement platforms,” in ACM
SIGCOMM Workshop on C2B(I)D, 2015.
[38] M. A. S´anchez, J. S. Otto, Z. S. Bischof, D. R.
Choﬀnes, F. E. Bustamante, B. Krishnamurthy, and
W. Willinger, “Dasu: Pushing experiments to the
internet’s edge,” in NSDI, 2013.
[39] R. K. P. Mok, W. Li, and R. K. C. Chang, “Improving
the packet send-time accuracy in embedded devices,”
in PAM 2015.
443