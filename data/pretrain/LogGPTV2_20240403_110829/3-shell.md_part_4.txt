\[root@server0 \~\]# echo \$?
1
\[root@server0 \~\]# \[ a == a \] \-\-- 为空格
\[root@server0 \~\]# echo \$?
0
\[root@server0 \~\]#
**步骤二**：字符串测试
1）== 比较两个字符串是否相同
\[root@server0 \~\]# echo \$USER
root
\[root@server0 \~\]# \[ \$USER == \"root\" \]
\--判断当前用户是否为"root"
\[root@server0 \~\]# echo \$? \--输出执行结果.0为正确
0
\[root@server0 \~\]# \[ \$USER == \"asdf\" \]
\[root@server0 \~\]# echo \$? \--输出执行结果.1为错误
2.  != 比较两个字符串是否不相同
\[root@server0 \~\]# \[ \$USER != \"asdf\" \]
\[root@server0 \~\]# echo \$?
0
\[root@server0 \~\]# \[ \$USER != \"root\" \]
\[root@server0 \~\]# echo \$?
1
3）一行执行多条命令的情况
\# A && B //仅当A命令执行成功，才执行B命令
\# A \|\| B //仅当A命令执行失败，才执行B命令
\# A ; B //执行A命令后执行B命令，两者没有逻辑关系
\# A && B \|\| C //思考？
4\) -z 检查变量的值是否未设置（空值）
\[root@svr5 \~\]# var1=\"nb\" ; var2=\"\"
\[root@svr5 \~\]# \[ -z \"\$var1\" \] && echo \"空值\" \|\| echo
\"非空值\"
非空值
\[root@svr5 \~\]# \[ -z \$var2 \] && echo \"空值\" \|\| echo \"非空值\"
空值                                   
  //变量var2已设置，但无任何值，视为空
\[root@svr5 \~\]# \[ ! -z \$var1 \]          //测试var1是否为非空
\[root@server0 opt\]# a=\"\"
\[root@server0 opt\]# \[ -z \$a \] \--判断是否为空
\[root@server0 opt\]# echo \$? \--是空的判断正确
0
\[root@server0 opt\]# \[ ! -z \$a \] \--判断是否为非空
\[root@server0 opt\]# echo \$? \--是空的判断错误
1
还有一个-n可以测试变量是否不为空（相当于! -z）。
**步骤三：整数值比较**
参与比较的必须是整数（可以调用变量），比较非整数值时会出错：
-gt 大于 \> greater than
-ge 大于等于 \>= greater or equal
-eq 等于 = equal
-ne 不等于 != not eqal
-le 小于等于 \ \*/2 \* \* \* \* /opt/test3.sh
\-\-\-\-\-\-\-\-\--脚本一\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
a=\$(who \| wc -l)
\[ \$a -gt 3 \] && echo 警告1 \| mail -s \'标题1\' root \|\| echo 正常
\-\-\-\-\-\-\-\-\--脚本二\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
\[ \$(who \| wc -l) -gt 3 \] && echo 警告2 \| mail -s \'标题2\' root
\|\| echo 正常
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
\[root@server0 opt\]# vim test3.sh \-\-\--编辑脚本
\[root@server0 \~\]# chmod +x /opt/test3.sh \-\-\--赋予脚本执行权限
\[root@server0 \~\]# crontab -e \-\-\-\--创建计划任务
no crontab for root - using an empty one
crontab: installing new crontab
您在 /var/spool/mail/root 中有邮件
\[root@server0 \~\]# crontab -l \-\-\-\--查看创建的计划任务
\*/2 \* \* \* \* /opt/test3.sh
\[root@server0 \~\]# mail \-\-\--查看邮件,root登录直接查看root的邮件
Heirloom Mail version 12.5 7/5/10. Type ? for help.
\"/var/spool/mail/root\": 2 messages 2 new
\>N 1 root Thu Jan 10 14:52 18/607 \"标题1\"
N 2 root Thu Jan 10 14:52 18/607 \"标题2\"
&
步骤四：识别文件/目录的状态
1.  -e 判断对象是否存在（不管是目录还是文件）
2）-d 判断对象是否为目录（存在且是目录）
3）-f 判断对象是否为文件（存在且是文件）
4）-r
判断对象是否可读:此测试对root用户无效，无论文件是否设置r权限，root都可读：
5）-w
判断对象是否可写:此测试同样对root用户无效无论文件是否设置w权限，root都可写：
6）-x 判断对象是否具有可执行权限
\[root@server0 \~\]# \[ -e /root \]
\[root@server0 \~\]# echo \$?
0
\[root@server0 \~\]# \[ -d /etc/fstab \] && echo \"目录\" \|\| echo
\"不是目录\"
不是目录
例:判断/opt中是否有文件ABC,没有则新建,有则显示"文件已存在"
\[root@server0 \~\]#\[ -e /opt/ABC \] && echo \"文件已经存在\" \|\|
touch ABC
## 3 案例3：使用if选择结构
if单分支的语法组成一：
if 条件测试 ； \-\--条件测试满足则执行下面,不成功则结束
then
命令序列
fi
if单分支的语法组成二：
if 条件测试 ; then
命令序列
if双分支的语法组成：
if 条件测试
then
命令序列1
else
命令序列2
fi
if多分支的语法组成：
if 条件测试1 ;then
命令序列1
elif 条件测试2 ;then
命令序列2
else
命令序列n
fi
例:判断opt下是否有mnt目录,没有则创建
\-\-\-\-\--脚本\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
if \[ ! -e /opt/mnt \];then
mkdir /opt/mnt
fi
步骤二：检测并判断指定的主机是否可ping通
1）分析任务需求
使用ping命令检测目标主机时，人工可直接判断反馈结果，而脚本却不方便。但是当ping测试成功时，执行状态\$?的值为0；而ping测试失败时，\$?的值不为0。因此在Shell脚本中可以利用这一点来判断ping目标主机的成败。
为了节省ping测试时间，可以只发送3个测试包（-c
3）、缩短发送测试包的间隔秒数（-i 0.2）、等待反馈的超时秒数（-W
1）。比如，检查可ping通的主机：
-c ping的次数 -i ping的间隔秒数 -W ping 反馈结果的等待秒数
\-\-\--脚本一\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
ip=172.25.0.253
c=10
i=0.2
W=1
ping -c \$c -i \$i -W \$W \$ip &\> /var/null
if \[ \$? -eq 0 \];then
echo \"\$ip 通了\"
else
echo \"\$ip 不通\"
fi
\-\-\-\-\--脚本二\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
ping -c \$1 -i \$2 -W \$3 \$4 &\> /var/null
if \[ \$? -eq 0 \];then
echo \"\$4 通了\"
else
echo \"\$4 不通\"
fi
\[root@server0 opt\]# bash test7.sh 10 0.2 1 172.25.0.254
172.25.0.254 通了
\-\-\-\-\--脚本三\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
c=10
i=0.2
W=1
ping -c \$c -i \$i -W \$W \$1 &\> /var/null
if \[ \$? -eq 0 \];then
echo \"\$1 通了\" \>\> /opt/pinglog.txt
else
echo \"\$1 不通\" \>\>/opt/pinglog.txt
fi
\[root@server0 opt\]# bash test8.sh 172.25.0.254
随机数: RANDOM
\[root@server0 opt\]# echo \$\[RANDOM\]
12029
\[root@server0 opt\]# echo \$\[RANDOM\]
18489
\[root@server0 opt\]# echo \$\[RANDOM\]
16031
取10以内的随机数(去多少以内的随机数,就取多少数的模)
\[root@server0 opt\]# echo \$\[RANDOM%10\]
1
\[root@server0 opt\]# echo \$\[RANDOM%10\]
9
例如:猜数字游戏
\-\-\-\--脚本一\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
a=\$\[RANDOM%10\]
read -p \"请输入一个数字:\" b \-\-\-\-\-\-\-\-\-\--第一次猜
if \[ \$b -eq \$a \];then
echo \"恭喜猜对了\"
exit
elif \[ \$b -gt \$a \];then
echo \"猜大了\"
else
echo \"猜小了\"
Fi
read -p \"请输入一个数字:\" b \-\-\-\-\-\-\-\-\--第二次猜
if \[ \$b -eq \$a \];then
echo \"恭喜猜对了\"
exit
elif \[ \$b -gt \$a \];then
echo \"猜大了\"
else
echo \"猜小了\"
fi
read -p \"请输入一个数字:\" b \-\-\-\-\-\-\-\-\--第三次猜
if \[ \$b -eq \$a \];then
echo \"恭喜猜对了\"
exit
elif \[ \$b -gt \$a \];then
echo \"猜大了\"
else
echo \"猜小了\"
fi
\-\-\-\-\-\-\-\-\-\-\-\--脚本二\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
#! /bin/bash
a=\$\[RANDOM%10\]
i=1
while :
do
read -p \"请输入一个数字:\" b
if \[ \$b -eq \$a \];then
echo \"恭喜猜对了\"
echo \"\$i\"
exit
elif \[ \$b -gt \$a \];then
echo \"猜大了\"
else
echo \"猜小了\"
fi
let i++
done
# NSD SHELL DAY03