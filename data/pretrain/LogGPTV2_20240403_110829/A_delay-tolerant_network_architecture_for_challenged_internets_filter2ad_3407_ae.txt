that  may  not  be  the  most  desirable  next  hop  (a  form  of  hot
potato routing) and discarding non-custody messages in favor
of  any  requiring  custody  transfers.    In  unusual  and  dire
circumstances,  a  facility  for  removing  messages  requiring
custody may be available, but removing such information is to
be avoided if at all possible, as deleting reliable bundles would
be considered a system fault.
The  current  approach  uses  a  shared  priority  queue  for
allocating  custody  storage.    First,  any  expired  messages  are
cleared.    Arriving  messages  that  are  too  large  are  denied
custody transfer.  Next, messages are spooled based on priority
and useful lifetime (specified by the sender and carried in each
message).  Two potential problems that arise include a form of
priority  inversion  (arriving  higher-priority  messages  may  not
have  custody  storage  available  if  lower-priority  messages
arriving  earlier  have  been  custodially    received)  and  head-of-
line  blocking.    The  blocking  can  arise  when  a  DTN  gateway
accepts  custody  for  messages  that  are  outgoing  on  a  contact
that has not yet started, and is subsequently asked to forward
messages to a currently-available contact that does not require
a custody transfer.  In such a case, the persistent storage in the
node  may  be  completely  consumed  by  the  pending  messages,
thereby preventing the non-custody messages from transiting.
For  implementation  of  flow  control,  a  DTN  forwarder  will
attempt 
flow  control
mechanisms  are  present 
the  underlying  region-local
transport  protocols.    For  most  mature  networks,  some  such
mechanism  exists  already 
(e.g.  TCP,  X.25,  RTS/CTS,
XON/XOFF,  explicit  admission/rate  control,  etc).    For  other
networks  where  such  mechanisms  are  still  being  developed,
region-specific  mechanisms  may  be  constructed  in  the  DTN
forwarders’  convergence  layers.    Doing  so  is  (naturally)
region-specific, and is beyond the scope of this paper.  In any
case,  the  uppermost  functions  of  a  DTN  forwarder  generally
assume the existence of flow control, so some such mechanism
should be present to help ensure reliable message delivery.
take  advantage  of  whatever 
to 
in 
5. APPLICATION INTERFACE
As  described,  the  DTN  architecture  is  built  as  an  overlay
network  using  messages  as 
the  primary  unit  of  data
interchange.  Applications making use of the architecture must
be careful not to expect timely responses and must generally be
capable  of  operating  in  a  regime  where  a  request/response
turn-around  time  exceeds  the  expected  longevity  of  the  client
and  server  processes.    In  addition,  applications  must  be
prepared  to  handle  the  creation  and  manipulation  of  name
tuples  and  their  registrations  (for  demultiplexing  received
messages),  class  of  service  specifiers,  and  authentication
information.    The  application  interface  is  non-blocking,  and
callback  registrations  are  persistent.    Generally  speaking,  all
DTN applications should be structured to continue operating in
the face of reboots or network partitioning as much as possible.
suffering 
  RELATED WORK
6.
The  DTN  architecture  is  based  most  closely  on  work  that
originated  with  the  Interplanetary  Internet  [3]  design,  but
represents  a  significant  generalization  to  other  types  of
networks 
from  non-Internet-like  performance
characteristics.  It addresses several of the issues raised in the
“network survivability” literature [18], especially with respect
to networks lacking continuous connectivity.
With respect to store-and-forward routing in other frequently-
disconnected networks, a number of recent efforts have arisen.
In ZebraNet [12], wireless sensor nodes (attached to animals)
collect location data and opportunistically report their histories
when they come in radio range of base stations.  They explore
the case of mobile base stations and sensor devices and the use
of  a  pair  of  flooding-based  routing  protocols.    In  DataMules
[17],  low-power  sensor  nodes  can  save  power  if  periodically
visited  by  a  “mule”  that  travels  among  them  and  provides  a
non-interactive  message  store-and-forward  service.    In  these
two  efforts  plus  that  of  Vahdat  [20],  mobility  models  are
employed  in  simulation  to  predict  the  ability  of  partially
connected networks to deliver data eventually.  
The  use  of  late  binding  for  names  in  DTN  is  shared  with,
although  not  directly  based  upon,  the  work  on  Intentional
Naming [21].  Here, names represent a form of query and are
used specifically for anycast in order to locate nearby network
services.  Routing based on names is shared, to some degree,
with  Internet  Content  Routing  [10].    This  work  focuses  on
using  routing  on  names  to  provide  a  content  distribution
facility  for 
its  scalability  and
performance.    It  does  not  use  two  separate  name  components
the  Internet,  addressing 
as  in  DTN,  but  does  suggest  the  viability  of  the  name-based
routing  mechanism.    The  generality  of  the  entity  portion  of
names  is  influenced  by  [11],  where  database-like  queries  are
effectively used as addresses for groups of sensor nodes.
thinking  regarding 
The  architectural 
interoperability  and
layering  is  guided  by  principles  of  the  ARPANET/Internet
[4,7].  DTN gateways operate in many ways similar to Internet
routers, but are adapted for use in high-delay and disconnected
environments by storing messages for potentially long periods
of time.
to  provide 
exceptionally 
7. CONCLUSION
The  DTN  architecture  aims 
interoperable
communications between a wide range of networks which may
have 
performance
characteristics.  The  design  embraces  the  notion  of  message
switching  with  in-network  storage  and  retransmission,  late-
binding of names, and routing tolerant of network partitioning
to construct a system better suited to operations in challenged
environments  than  most  other  existing  network  architectures,
particularly today’s TCP/IP based Internet.
disparate 
poor 
and 
A  prototype  DTN  implementation  has  been  developed  under
the Linux operating system, which implements the application
interface,  basic  forwarding  across  scheduled  and  “always  on”
connections,  detection  of  new  and  lost  contacts,  and  two
convergence  layers  (for  TCP/IP  as  well  as  a  sensor  network
proxy).  The prototype has been used as a proof-of-concept of
the overall architecture, and also to show the general utility of
the non-interactive reliable messaging service it provides.
represents 
architecture 
a  generalization  of 
The 
the
Interplanetary  Internet  architecture  to  challenged  networks
other than space.  The previous work was closely tied to issues
of  deep  space  communications  in  particular,  but  contributed
many  key  ideas  toward  the  development  of  a  networking
architecture  applicable  for  challenged  internetworks  more
generally.    The  design  also  derives  in  part  from  some
interesting trends in the Internet: a move toward content-based
naming,  creation  of  administrative  “regions”,  and  alternative
routing structures (e.g. network overlays).
The  proposed  DTN  architecture  advocates  a  change  to  the
basic  service  model  and  system  interface  most  Internet-style
applications  have  become  accustomed  to,  motivated  by  the
exceptionally  poor  performance  present  in  some  networks.
This is a comparatively radical approach; other approaches aim
to  “repair”  underlying  link  performance  problems  or  alter
limited  portions  of  the  Internet  architecture,  such  as  routing,
with  additional  protocols  in  an  effort  to  keep  the  current
service  model  and  existing  TCP/IP  based  protocols  constant.
Because  it  provides  a  different  type  of  network  service  than
Internet, the DTN design makes a different set of choices in the
architectural design space:  messages versus packets, a form of
hop-by-hop  reliability  and  security  versus  end-to-end,  name
based  routing  versus  address  based  routing,  and  a  routing
abstraction  of  partially-connected  rather  than  fully-connected
network  graph.    Interestingly,  DTN  can  be  overlaid  upon  the
TCP/IP  based 
remains
compatible.  This is not the most interesting case, however, as
its  strength  lies  in  its  ability  to  tie  together  dramatically
different 
types  of  networks  with  unusual  connectivity
properties.    As  such,  in  some  ways  it  makes  more  limited
assumptions  on  the  underlying  protocol  layers  than  IP  does
upon its underlying link layers.
Internet  easily,  and 
therefore 
Only  time  will  tell  what  application  interfaces  and  service
semantics  will  most  appropriately  match  applications  to
challenged networks, but we believe the DTN architecture puts
forth  several  design  decisions  worthy  of  consideration.    In
addition, we believe it is timely to consider a very broad range
of  network  characteristics  in  formulating  a  new  network
architecture, as it appears likely an ever increasing number of
these features will have to be dealt with.
8. ACKNOWLEDGMENTS
The author wishes to thank the members of the Interplanetary
Internet Research Group for their previous work on the initial
definitions  of  bundling  and  naming,  without  which  this
architecture  would  not  exist.    Members  of  this  group  include
Vint  Cerf 
(MCI),  Adrian  Hooke  and  Scott  Burleigh
(NASA/JPL),  Bob  Durst  and  Keith  Scott  (the  MITRE
Corporation),  and  Howard  Weiss  (SPARTA).    The  author  is
especially  indebted  to  Bob  Durst  and  Scott  Burleigh  for  an
ongoing collaboration regarding the DTN design.  Versions of
the manuscript benefited from the comments of David Culler,
Sylvia Ratnasamy, the anonymous reviewers, David Hutchison
and Sushant Jain.
9. REFERENCES
[1]
J. Alonso, K. Fall, “A Linear Programming Formulation of Flows 
over Time with Piecewise Constant Capacity and Transit Times”, 
Intel Research Technical Report IRB-TR-03-007, June 2003
J. Border et. al., “Performance Enhancing Proxies Intended to 
Mitigate Link-Related Degradations”, Internet RFC3135, June 2001
[2]
[3] V. Cerf et. al., “Interplanetary Internet (IPN):  Architectural 
Definition”, http://www.ipnsig.org/reports/memo-ipnrg-arch-00.pdf
[4] V. Cerf, R. Kahn, “A Protocol for Packet Network Inter- 
communication”, IEEE Trans. on Comm., COM-22(5), May 1974
[5] CFDP Protocol Specification, CCSDS 727.0-B-1, Jan 2002, 
http://www.ccsds.org
[6] E. Chen, J. Stewart, “A Framework for Inter-Domain Route 
Aggregation”, Internet RFC2519, Feb 1999
[7] D. Clark, “The Design Philosophy of the DARPA Internet 
Protocols”, Proc. SIGCOMM 1988
[8] K. Fall, “A Delay-Tolerant Network Architecture for Challenged 
Internets”, Intel Research Technical. Report IRB-TR-03-003, Feb 
2003
[9] D. Feldmeier, A. McAuley, J. Smith, D. Bakin, W. Marcus, T. 
Raleigh, “Protocol Boosters”, IEEE JSAC, Apr 1998
[10] M. Gritter, D. Cheriton, “An Architecture for Content Routing 
Support in the Internet”, Proc. Usenix USITS, March 2001
[11] J. Heidemann et. al., “Building Efficient Wireless Sensor Networks 
with Low-Level Naming”, Proc. SOSP, Oct 2001
[12] P. Juang, H. Oki, Y. Wang, M. Maronosi, L. Peh, D. Rubenstein, 
“Energy-Efficient Computing for Wildlife Tracking:  Design 
Tradeoffs and Early Experiences with ZebraNet”, Proc. ASPLOS, 
Oct 2002
[13] M. Mealling, R. Denenbers, eds., “Report from the Joint W3C/IETF 
URI Planning Interest Group:  Uniform Resource Identifiers (URIs), 
URLs, and Uniform Resource Names (URNs):  Clarifications and 
Recommendations”, Internet RFC 3305, Aug 2002
[14] D. Mills, “Network Time Protocol (Version 3) Specification, 
Implementation and Analysis”, Internet RFC1305, Mar 1992
[15] D. Mills, H. Nair, “Timekeeping in the Interplanetary Internet”, in 
progress, http//:www.eecis.udel.edu/~mills/ipin.html
[16] J. Saltzer, D. Reed, D. Clark, “End-to-End Arguments in System 
Design”, ACM Trans on Computer Systems, 2(4), Nov 1984
[17] R. Shah, S. Roy, S. Jain, W. Brunette, “Data MULEs: Modeling a 
Three-tier Architecture for Sparse Sensor Networks”, IEEE SNPA 
Workshop, May 2003
[18] J. Sterbenz, et. al., “Survivable Mobile Wireless Networks:  Issues, 
Challenges and Research Directions”, WiSe 2002, Sep 2002
[19] J. Sterbenz, T. Saxena, R. Krishnan, “Latency-Aware Information 
Access with User-Directed Fetch Behaviour for Weakly-Connected 
Mobile Wireless Clients”, BBN Tech. Report 8340, May 2002
[20] A. Vahdat, D. Becker, “Epidemic Routing for Partially-Connected 
Ad Hoc Networks”, Duke Tech Report CS-2000-06, 2000
[21] W. Adgie-Winoto, E. Schwartz, H. Balakrishnan, J. Lilley, “The 
Design and Implementation of an Intentional Naming System”, Proc. 
SOSP, Dec 1999
[22] J. Wroclawski, “The MetaNet: White Paper”, Workshop on Research 
Directions for the Next Generation Internet”, May 1997, 
http://www.cra.org/Policy/NGI/papers/wroklawWP