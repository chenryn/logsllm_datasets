关于CobaltStrike的Stager被扫问题
随着CobaltStrike（下文简称CS）的广泛应用，各种检测脚本和空间测绘扫描系统都盯上了CS，作为夹
缝中求存的公鸡队（红队），不得不反击一波。
下面是检测的手法和相关文章，还不清楚的兄弟可以阅读下：
https://github.com/whickey-r7/grab_beacon_config
https://mp.weixin.qq.com/s/BLM8tM88x9oT4CjSiupE2A
这个检测手法其实不是什么秘密，我们看下代码
很清晰，很明白，我解释一下，就是请求stager的时候只要符合以上规则的url就可以成功请求到stager
的代码。
公鸡队的兄弟们，对抗的方法有2种：
方法1：修改WebServer.class中的此次函数校验的值，不要是92、93，改个其他值，识别脚本就搞不出
来了。
方法2：kill掉如图所示的stager就行了。
在我把以上2个方法发了朋友圈以后，有一些同学提出了不同方法和不足：
杠A：修改C2profile中的stager url。
答：这样是不行的
杠B：反向代理
答：是可以的，但是都需要结合其他相对负责的各种配置来限制访问
杠C：如果只修改校验值，由于算方法限制校验值有大小限制，也就是枚举256次就枚举出来。
答：是这样的，方法1，确实有这样的问题;建议使用方法2
杠D：删除了stager监听，那分阶段就不能上线了，和修改host_stage配置有什么区别
答：方法2就是为了灵活处理，要用的时候开启，不用的时候关闭。关闭方法已经说了，怎么再开启呢？
答案是在Listeners中选择监听点编辑，不用修改，再保存，然后就又开启了。
最后，我要说用方法2的原因是简单方便。在搞小活动的时候用简单的方法最高效。不要和我杠各种前
置，搞大活动肯定是需要基础设施部署的，小活动我认为搞那么大动静并不高效。
补充下《关于CobaltStrike的Stager被扫问题》的问题。在星球有个小伙伴说他kill了还是能使用
stager，我去测试发现真的是，前提是你使用了c2profile，在里面配置了stager相关的url和配置，当你
kill掉sites中的监听，可以防止被扫描，但是还不影响c2profile中的配置，我感觉现在就完美了，在
c2profile中配置好stager自定义的url，然后kill掉sites中默认的stager监听，即防止了被扫也不妨碍分阶
段的使用。完美！