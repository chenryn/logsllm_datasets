    256 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/resolv.conf /etc/resolv.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    257 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hostname /etc/hostname rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    258 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hosts /etc/hosts rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    259 238 0:41 / /dev/shm rw,nosuid,nodev,noexec,relatime - tmpfs shm rw,size=65536k
    260 181 202:1 /home/ubuntu/Nginx_1.4.2/html /usr/local/nginx/html rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    261 238 202:1 /home/ubuntu/Nginx_1.4.2/access.log /dev/stdout rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    262 181 202:1 /home/ubuntu/Nginx_1.4.2/run /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    263 181 202:1 /home/ubuntu/Nginx_1.4.2/nginx.conf /usr/local/nginx/conf/nginx.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    264 181 202:1 /home/ubuntu/Nginx_1.4.2/cron_run.sh /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    419 181 202:1 /home/ubuntu/Nginx_1.4.2/www.conf /etc/php5/fpm/pool.d/www.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered
    104 238 0:45 /0 /dev/console rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666
    107 182 0:43 /bus /proc/bus ro,relatime - proc proc rw
    108 182 0:43 /fs /proc/fs ro,relatime - proc proc rw
    109 182 0:43 /irq /proc/irq ro,relatime - proc proc rw
    110 182 0:43 /sys /proc/sys ro,relatime - proc proc rw
    111 182 0:43 /sysrq-trigger /proc/sysrq-trigger ro,relatime - proc proc rw
    112 182 0:44 /null /proc/kcore rw,nosuid - tmpfs tmpfs rw,mode=755
    113 182 0:44 /null /proc/timer_list rw,nosuid - tmpfs tmpfs rw,mode=755
    114 182 0:44 /null /proc/timer_stats rw,nosuid - tmpfs tmpfs rw,mode=755
    115 182 0:44 /null /proc/sched_debug rw,nosuid - tmpfs tmpfs rw,mode=755
    132 240 0:48 / /sys/firmware ro,relatime - tmpfs tmpfs ro
发现一个脚本：`/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh`
    $ python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh
    /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh
    tar: Removing leading `/' from member names
        你在里面发现了什么? 
    注意：只支持tar!!
    更新配置成功，内容如下#\!/bin/bash
    cd /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/ && python run.py
    $ python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py 
    /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py
    tar: Removing leading `/' from member names
        你在里面发现了什么? 
    注意：只支持tar!!
    更新配置成功，内容如下#encoding=utf8
    from collections import Counter
    from mail_send import send_mail
    ip = []
    statusCode = []
    def toDeal(filename):
        with open(filename, 'r') as f:
            logs = f.readlines()
            for log in logs:
                ip.append(log.split()[0])
                statusCode.append(log.split()[8])
        logAll = '日志总数：' + str(len(logs))
        ipUV = '独立 IP：' + str(list(set(ip)))
        ipNumber = 'IP出现次数：' + str(dict(Counter(ip)))
        codeNumber = '状态码出现次数：' + str(dict(Counter(statusCode)))
        content = logAll + '\n' + ipUV + '\n' + ipNumber + '\n' + codeNumber
        send_mail('Pwnhub Nginx Report', content)
    if __name__ == '__main__':
        toDeal('/usr/local/var/log/nginx/access.log')
    $ python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py
    /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py
    tar: Removing leading `/' from member names
        你在里面发现了什么? 
    注意：只支持tar!!
    更新配置成功，内容如下#coding:utf-8
    import smtplib
    from email.mime.text import MIMEText
    mail_user = 'PI:EMAIL'
    mail_pass = '634DRaC62ehWK6X'
    mail_server = 'smtp.21cn.com'
    mail_port = 465
    to_user = 'PI:EMAIL'
    def send_mail(title,content):
        #创建一个实例，这里设置为html格式邮件
        msg = MIMEText(content, _subtype = 'html', _charset = 'utf-8')
        msg['Subject'] = title
        msg['From'] = mail_user
        msg['To'] = to_user
        try:
            #登录smtp服务器
            server = smtplib.SMTP_SSL(mail_server,mail_port)
            server.login(mail_user,mail_pass)
            #邮件发送
            server.sendmail(mail_user,to_user,msg.as_string())
            server.quit()
            return True
        except Exception as e:
            print(str(e))
            return False
#### Step 4
得到一个邮箱，然后尝试去登录看看，然后在收件箱看到一个发送vpn邮箱发送失败的返回邮件，然后去发件箱得到一个vpn:
    IPsec VPN server is now ready for use!
    Connect to your new VPN with these details:
    Server IP: 54.223.177.152
    IPsec PSK: dkQ97gGQPuVm833Ed2F9
    Username: pwnhub
    Password: LE3U2aTgc4DGZd92wg82
    Write these down. You'll need them to connect!
这里想找个linux图形界面连IPsec的软件，但没找到，还是切换到Mac了。。
VPN连上后应该就是内网找服务了，因为nmap探测的很慢，所以只探测80端口
咸鱼了一会后发现几台主机：
    172.17.0.1
    172.17.0.3
    172.17.0.5
    172.17.0.7
    172.17.0.9
从这可以看出来这是一个docker，其中1是外网那个服务的容器，其他80端口都是nginx默认端口，然后扫描3发现还开了8090，根据之后的提示：`搞
Discuz 不是目的，谁说鸡肋就没用，看 Discuz 送助攻`
#### Step 5
8090端口开的就是一个dz x3.2服务，然后就知道是搞这个了，找了下dz的漏洞去尝试，发现只有ssrf，有最新的任意文件删除的是有效的。
然后发现自己太菜了，根本不会做web，日不动dz。。。。。。
然后偶然间发现。。。。80端口变了，竟然不是默认的nginx服务了, 是一个跳转到`index.php`的html页面，`index.php`页面如下：