respect 
the 
overriding design principle of only performing tasks in 
Dispatchable  PHYP  or  in  PLIC  that  can  not  be 
performed  elsewhere  in  the  software  stack  (i.e., 
application  space,  OS  kernel,  or  VIOS).  Currently, 
PHYP  for  POWER6  processors  is  under  Common 
Criteria Evaluation EAL4 [7].  
follow 
3. PHYP MAC Design 
Three  goals  drive  the  design  of  sHype  MAC 
enforcement in PHYP. The first goal is to implement 
MAC  that  confines  workloads  in  case  of  an  LPAR 
from 
compromise 
and  prevents 
administrators 
that  would  create  sharing 
configuration  mistakes 
between  workloads  that  are  intended  to  be  confined 
from each other. For this reason, our design does not 
assume  cooperation  of  user  LPARs  for  providing 
isolation. The second goal is to provide a non-intrusive 
design. Such a design minimizes impact on the PHYP 
code base, which in turn increases the likelihood of the 
PHYP Design and Development Team accepting those 
MAC extensions. The third goal is to have negligible 
performance  overhead  so  that  performance  will  not 
become  a  hurdle  for  its  acceptance  by  customers  in 
high-utilization environments. 
We  address  the  first  goal  by  enforcing  Mandatory 
Access  Control  (MAC)  on  configuration  commands 
that change the assignment of resources to LPARs. We 
define a MAC security policy to specify the access to 
resources  by  LPARs  based  on  security  labels,  which 
are  attached  as  protected  meta-information to  LPARs 
and  resources.  The  MAC  security  policy  can  be 
installed  administratively  on  the  platform,  preferably 
by a security officer. Only the security officer will be 
able  to  effect  changes  on  the  installed  policy.  We 
address  the  second  goal  by  minimizing  changes  and 
additions to the PHYP code base. We support the third 
goal  of  minimizing  the  performance  overhead  by 
performing access checks at configuration time and not 
during every run-time access of an LPAR to one of its 
configured resources. 
 3.1. Reference Monitor Approach 
The  design  of  our  PHYP  MAC  enforcement  is 
based  on  the  principles  of  the  reference  monitor 
approach  as  introduced  by  Anderson  [1].  In  this 
approach, a subject’s access to an object is mediated by 
a reference monitor. The security of this approach rests 
on three fundamental requirements. First, the reference 
monitor cannot be bypassed. It is always invoked when 
a subject accesses an object. Second, it is tamperproof. 
Subjects  cannot  alter  its  functionality.  Third,  the 
reference  monitor 
its 
correctness to be easily verified. 
is  small  enough 
to  allow 
 In our case, a subject is an LPAR and an object can 
be  an  LPAR  or  a  resource.  The  reference  monitor 
approach  requires  security  labels  to  be  assigned  to 
subjects  and  objects.  When  an  LPAR  accesses  an 
object, the reference monitor is invoked. The reference 
monitor allows or denies access based on the security 
labels and the security policy being enforced. 
For  PHYP,  the  MAC  design  consists  of  three 
components:  an  access  control  policy,  access  control 
module (ACM), and security hooks. The access control 
policy  defines  the  policy  to  be  enforced  on  the 
platform,  including  the  security  labels  which  can  be 
223223
assigned to LPARs and resources. The policy is loaded 
into the ACM, which is responsible for providing the 
access  control  decisions  based  on  security  labels. 
Security  hooks  are  guarded  method  invocations  that 
request security access decisions from the ACM. The 
ACM  and  the  security  hooks  constitute  the  reference 
monitor validation mechanism. The separation between 
ACM  and  security  hooks  follows  a  well  established 
principle  of  separating  policy  from  enforcement. 
Enforcing  MAC  on  PHYP  requires  determining  the 
mediation points in the platform. 
Configuration-time
Security Hooks
Power
Hypervisor
ACM
Dispatchable
Logical
Partition
(LPAR)
LPAR
Hosting
LPAR
(VIOS)
Hardware
Management
Console 
(HMC)
Service
Processor
(SP)
VLAN
VDISK
VDISK
Platform Licensed Internal Code (PLIC)
Dedicated IO
Storage + Network
Shared IO
Storage + Network
ACM (Access Control Module): Policy Decision Point
Security Hook: Policy Enforcement Point
Figure 2. Mediating configuration commands 
We 
to  minimize 
in  PLIC  and 
implement  mandatory  access  control 
in 
Dispatchable PHYP to avoid changes to performance-
critical  paths 
the 
intrusiveness of our implementation, see Figure 2. We 
leverage  PHYP’s  centralized  configuration  setup  to 
apply MAC before the LPARs are even powered on, at 
the time when resources are assigned (configured). As 
a  result,  MAC  enforcement  is  performed  during 
configuration updates. A configuration update is only 
accepted by PHYP, specifically Dispatchable PHYP, if 
it passes the access control checks. In our design, when 
the  HMC 
to 
Dispatchable  PHYP,  PHYP  accepts  or  denies  the 
requests based on the security labels of the subjects and 
objects that are involved in the configuration update. 
configuration 
requests 
submits 
This design successfully meets the first and second 
requirements  of  the  reference  monitor:  The  ACM 
resides in PHYP and thus cannot be tampered with by 
user LPARs. PHYP is the highest privileged code and 
is  protected  against  the  LPARs  running  on  the 
platform.  Since  all  configuration  requests  must  go 
through Dispatchable PHYP, a bypassing of the MAC 
enforcement  is  not  possible.  This  provides  strong 
security  guarantees  since  enforcement  takes  place 
when resources are configured to LPARs.  
the  PHYP  hypervisor 
Since we favor a non-intrusive design over a small 
trusted  computing  base  (TCB)  [8]  in  our  commercial 
environment,  we  do  not  optimize  the  third  reference 
monitor requirement and accept as a trusted computing 
base 
and  management 
environment on top of the system hardware. Although 
the ACM is a small module and there are only a few 
security hook instrumentations, we must consider other 
parts  of  the  PHYP  code  base  and  hardware  that 
contribute to the security administration and protection 
as  part  of  the  reference  monitor.  The  TCB  of  the 
retrofitted  PHYP  consists  of  the  HMC,  SP,  and 
Dispatchable,  PLIC  as  well  as  the  hardware  that 
enables  the  privileged  hypervisor  state  and  physical 
isolation  capabilities.  Addressing  the  third  principle 
fully  would  require  partitioning  PHYP’s  TCB  into 
security and non-security parts (this would  be similar 
to the KVM/370 [9] retrofitting effort). However, this 
in 
turn  would  violate  our  overriding  design 
requirement to minimize intrusiveness of the protection 
mechanism on PHYP. 
3.2. Simple Policies 
We support two simple orthogonal security policies 
to  govern  authorization  and  resources  allocations  on 
PHYP: Simple Type Enforcement (STE) and Chinese 
Wall Enforcement (CHW). 
The  simple 
type  enforcement  policy  enforces 
restrictions on the communication and resource sharing 
between LPARs  or between an LPAR and a resource 
based on the STE type (e.g., color) associated with the 
LPARs  or  resources.  The  STE  policy  specifies  that 
LPARs can only communicate with each other if they 
have a common STE type, i.e., both LPARs must have 
assigned at least one type in common in their security 
labels.  Similarly,  an  LPAR  is  permitted  access  to  a 
resource, if the LPAR and the resource have a common 
STE  type.  Typically,  resources  and  LPARs  have  a 
single STE type.  
Due to limited physical resources on a platform, some 
platform  configurations  employ  a  VIOS  partition  to 
enable  the  sharing  of  hardware  resources,  such  as  a 
storage  and  network  devices,  among  multiple  client 
LPARs.  Such  configurations have  implications  to  the 
STE  type  assignments  and  the  reference  monitor’s 
TCB.  If  a  VIOS  provides  resources  to  LPARs  with 
different STE types, then the VIOS must be assigned 
multiple STE types corresponding with the STE types 
of the client LPARs. Additionally, the VIOS must be 
MAC aware since it must map its PHYP configurable 
resources  to  internal  resource  mapping  based  on  the 
STE  types.  Since  a  multi-STE  typed  VIOS  must 
mediate LPAR accesses to its internal resources based 
on  the  STE  type,  it  becomes  part  of  the  reference 
224224
monitor’s  TCB  for  those  types  it  is  assigned  (c.f., 
MAC-Domains in [24]). To avoid adding a full-sized 
VIOS to the TCB, we can employ multiple single STE 
typed  VIOSs  to  service  only  single  STE  typed  client 
LPARs.  For  scarce  hardware,  we  can  deploy  a 
minimized VIOS to share such hardware more safely 
among differently labeled LPARs. 
In contrast to STE, the Chinese Wall policy controls 
which workloads can run on the same platform at the 
same time and which cannot. If workload types A and 
B are designated as conflicting then, as long as an “A” 
typed LPAR executes, no “B” typed LPAR is allowed 
to  execute  on  the  platform  and  vice  versa.  Chinese 
Wall  types  that  shall  not  be  collocated  define  a  so 
called conflict set and LPARs with workload types that 
are  in  a  common  conflict  set  will  run  mutually 
exclusive  on  the  platform.  This  approximates  an  air 
gap  between  conflicting  workloads  assuming  that the 
platform does not keep state of LPARs once they stop 
executing. In [13], the authors discuss an approach that 
leverages  the  Chinese  Wall  collocation restrictions  to 
reduce  covert  channels 
specific 
workloads.  
3.3. Operations and Resources under MAC 
risks  between 
To enforce collocation restrictions with the Chinese 
Wall  security  policy  component,  we  control  the 
assignment of the bootable state of an LPAR based on 
its security label. An LPAR set to the bootable state is 
allowed  to  be  powered  on  the  platform  without 
additional  policy  checks.  Therefore,  once  an  LPAR 
with  conflicting  CHW  types  is  set  to  bootable,  other 
LPARs with conflicting types are not allowed to be set 
to  bootable.  In  order  to  determine  when  the  other 
LPARs  from  the  conflict  set  can  be  eventually  set  to 
bootable, we must track the bootable LPARs according 
to the  CHW policy’s conflict sets. 
To enforce the STE policy  component, we control 
the configuration of the following virtual and physical 
peripheral resources to LPARs based on security labels 
assigned to LPARs and resources: 
•   vSCSI,  vTTY  -  are  virtual  resources  that  allow 
interaction  between  a  client  LPAR  and  a  server 
LPAR  (e.g.,  VIOS).  The  server  LPAR  provides 
services  such  as  network  connectivity  or  virtual 
storage to client LPARs. 
•  vEthernet – is a virtual resource that enables inter-
LPAR  communication.  LPARs  can  communicate 
with  each  other if  their  Logical  vEthernet adapters 
are assigned to the same VLAN ID. 
•  An IO pool – is a group of IO devices that can be 
shared by a group LPARs  without requiring active 
HMC involvement.  
225225
•  VLAN  Switch  –  is  an  internal  switch  that  enables 
LPARs  to  communicate  based  on  their  VLAN 
membership. 
•  Host  Ethernet  Adapter  (HEA)  –  provides  LPARs 
direct high speed access to the network via logical 
ports without going through a VIOS.  
•  Physical  IO  devices  –  allows  direct  access  of 
physical  IO  devices  by  LPARs.  An  IO  device  is 
exclusively owned and used by a single LPAR. 
Next, we discuss the assignment of  security labels 
and  how  they  are  used  to  enforce  STE  and  CHW 
policies. In our environment, we view a security label 
as a container for CHW and STE types. 
Label assignment. We assign security labels—defined 
as part of the platform security policy—to all LPARs 
and resources before they can become active: 
•  A  security  label  for  an  LPAR  contains  CHW  and 
STE  security  type  attributes.  A  device  on  an 
LPAR’s  virtual  bus  is  assigned  only  a  single  STE 
type.  This  allows  a  multi-STE  typed  LPAR  to 
distinguish the security type of the connection.  
•  User LPARs are usually assigned only a single STE 
type  since  we  do  not  trust  them  to  keep  different 
types  confined.  LPARs  that  are  assigned  multiple 
STE  types  can  implement  sharing  of  hardware  or 
create  controlled  information  flow  between  user 
LPARs of different STE types. However, multi-STE 
typed  LPARs  must  be  trusted  to  confine  the  types 
and  only  permit  selective  information  flow  if 
desired. If a multi-STE typed LPAR is compromised 
or  untrusted,  no  confinement  guarantees  hold  for 
those STE types that are assigned to such an LPAR. 
Consequently the least privilege principle should be 
applied  when  assigning  STE 
trusted 
LPARs. 
types 
to 
•  A  security  label  for  a  VLAN,  IO  pool,  HEA,  or 
physical  IO  device  has  exactly  one  STE  type.  We 
label the physical slot location of an IO device since 
the device is not MAC aware. 
•  Shared resources can only be assigned a single STE 
type,  since  those  resources  otherwise  could  be 
accessed  by  different  STE 
typed  LPARs  and 
information  flow  through  those  shared  resources 
would  violate  the  type  confinement  requirements. 
Chinese Wall types do not apply to resources. 
A complex hardware device  can be assigned more 
than  one  STE  type  if  it  is  composed  of  multiple 
isolated hardware components, access to which can be 
individually  controlled  by  PHYP.  In 