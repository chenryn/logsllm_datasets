.B ld\c
\& 可能 对 其他 体系结构 提供 类似功能.
可以 在 命令行上 使用 多个 \c
.B \-A\c
\& 选项, 只要 该 体系 允许 和 目标体系 相连, 其选项 使 ld 在 搜索 \c
.B \-l
指定的库 中, 增加 和 体系结构名称 对应的库.
.TP
.BI "\-b " "input-format"
指定 输入目标文件 的 二进制格式, 目标文件 在 命令行 上 给出, 放在
这个选项 的 后面. 一般 不需要 指定 这个选项, \c
.B ld\c
\& 的 缺省输入格式 配置为 各个机器 上 最常用 的 格式. \c
.I input-format\c
\& 是 字符串, BFD 库 支持的 格式 名称. 选项 \c
.B \-format \c
.I input-format\c
\&\c
\& 起 相同的 作用, 脚本命令
.BR TARGET 
也是 一样.
连接 某些 不寻常的 二进制文件 时 需要 这个选项. 或者 使用 \c
.B \-b\c
\& 选项 强调 格式切换 (连接 不同格式 的 目标文件),
比如说, 在 每组 特定格式 的 目标文件 前面 使用 \c
.B \-b \c
.I input-format\c
\&\c
\& 选项.
环境变量
.B GNUTARGET\c
\& 用于 指定 缺省格式. 也可以 在 脚本文件 中 用 \c
.B TARGET\c
\& 命令 定义 输入格式.
.TP
.B \-Bstatic 
禁止 连接 共享库. 这个选项 只在 支持 共享库 的 平台 上 有意义.
.TP
.B \-Bdynamic
连接 动态库. 这个选项 只在 支持 共享库 的 平台 上 有意义, 一般说来 它
是 缺省选项.
.TP
.B \-Bsymbolic
当 创建 共享库 的 时候, 只要 有可能, 在 共享库 内 编联(bind reference) 
全局符号 和 定义(definition). 一般说来, 允许 连接了 某个 共享库 的 程序
覆盖 共享库内 的 定义. 这个选项 只在 支持 共享库 的 ELF 平台 上 有意义.
.TP
.BI "\-c " "commandfile"
告诉 \c
.B ld\c
\& 从 文件
\c
.I commandfile\c
\& 中 读取 连接 命令. 这些 命令 彻底的 覆盖 \c
.B ld\c
\& 的 缺省 连接 格式 (而不是 添加); \c
.I commandfile\c
\& 必须 详尽的 描述 目标格式 的 所有细节.
你 也可以 在 命令行 上 直接嵌入 连接命令, 把 脚本 嵌在 大括弧 `\|\c
.B {\c
\|' 和 `\|\c
.B }\c
\|' 中间.
.TP
.B \-\-cref
输出 交叉引用表(cross reference).  如果 创建了 连接映像(linker map) 文件,
交叉引用表 就 输出到 映像文件 中, 否则 送往 标准输出.
.TP
.B \-d 
.TP
.B \-dc
.TP
.B \-dp
这 三个选项 是 一回事, 为了 兼容 其他 linker 而 同时提供. 
即使 已经 指定 \c
.B ld
生成 可重定位文件 (\c
.B \-r\c
\&), 它们 能为 公共符号(common symbol) 分配 空间.  脚本命令
\c
.B FORCE_COMMON_ALLOCATION\c
\& 起 同样作用.
.TP
.BI "-defsym " "symbol" "\fR = \fP" expression
在 输出文件 中 创建 一个 全局符号, 它 含有 \c
.I expression\c
\& 给出的 绝对地址. 可以 在 命令行 使用 多个 这样的 选项. 这个 \c
.I expression\c
\& 只能 使用 有限的 数学形式: 十六进制常数, 已经存在 的 符号名字.
或者 使用 \c
.B +\c
\& 和 \c
.B \-\c
\& 加减 十六进制常数 或 符号. 如果 需要 更复杂的 表达式, 考虑 使用
命令语言脚本.
.TP
.B \-\-demangle
.TP
.B \-\-no\-demangle
这些选项 控制 是否在 出错信息 和 其他信息 中, 输出 可读的(demangle) 
符号名称. 如果 使用了 demangle 选项, linker 尽量使 符号名称 容易理解: 
去掉 领头的 下划线 (如果 被 目标文件格式 采用); 把 C++ 难懂的 符号名称
(symbol name) 转换成 可读的 名称. 缺省情况下 linker 输出 可读的 符号名称, 
除非 设置了 环境变量
.B COLLECT_NO_DEMANGLE .
这些选项 能够 覆盖 缺省行为.
.TP
.BI "-e " "entry"
使用 \c
.I entry (入口)\c
\& 标识符 作为 程序 执行 的 开始端, 而不是 缺省入口. 关于 缺省入口 和 其他
设置 入口 的 方法 参见 `\|\c
.B info\c
\|' 的
.B ld\c
\|' 项.
.TP
.B \-embedded\-relocs
这个选项 仅用于 连接 MIPS上 嵌入的 PIC 代码, GNU 的 编译器 和 汇编器 用
.B \-membedded\-pic
选项 能够 生成 这种代码. 它使 linker 创建 一张 表格, 用于 在 运行的时候,
重定位 任何 被 静态初始化 为 指针值 的 数据. 详见 testsuite/ld-empic 的 代码.
.TP
.B \-E
.TP
.B \-export\-dynamic
当 创建 ELF 文件 时, 把 所有 符号 加入 动态符号表.
一般说来, 动态符号表 只包含 动态目标库(dynamic object) 需要的 符号. 用
.I dlopen
的 时候 需要 这个 选项.
.TP
.BI "-f " "name"
.TP
.BI "--auxiliary " "name"
创建 ELF 共享目标库 时, 把 内部的 DT_AUXILIARY 字段 设置为 
.I name.
它 告诉 动态linker, 把 该 共享目标库 的 符号表 用做 共享目标 
.I name 
的 符号表 的 辅助过滤器.
.TP
.BI "-F " "name"
.TP
.BI "--filter " "name"
创建 ELF 共享目标库 时, 把 内部的 DT_FILTER 字段 设置为 
.I name.
它 告诉 动态linker, 把 该 共享目标库 的 符号表 用做 共享目标 
.I name 
的 符号表 的 辅助过滤器.
.TP
.BI "\-format " "input\-format"
等同于 \c
.B \-b\c
\& \c
.I input\-format\c
\&.
.TP
.B \-g
虚设项; 用于 兼容 其他 工具.
.TP
.BI "\-G " "size"\c
把 使用 GP 寄存器 优化的 目标(文件) 大小 限制为
.I size .
用于 MIPS ECOFF, 对 其他 目标文件格式 无效.
.TP
.BI "-h " "name"
.TP
.BI "-soname " "name"
创建 ELF 共享目标库 时, 把 内部的 DT_SONAME 字段 设置为 name. 
如果 某个 可执行文件 连接了 含有 DT_SONAME 字段 的 共享目标库, 
当 该程序 运行 时, 动态 linker 试图 根据 DT_SONAME 字段 调入 共享的 
目标库, 而 不使用 提供给 linker 的 文件名.
.TP
.B \-\-help
在 标准输出 显示 命令行选项 的 摘要, 然后 结束. 这个选项 和
.B \-\-version
选项 使用了 两个 短横线, 不是 一个, 目的是 兼容 其他 GNU 程序.
只用 一个 短横线 的 选项 是为了 兼容 其他 linker.
.TP
.B \-i
执行 增量连接(incremental link), 等同于 \c
.B \-r\c
\& 选项.
.TP
.BI "\-l" "ar"
在 连接文件 列表 中 增加 归档库文件 \c
.I ar\c
\&.  可以 多次 使用 这个选项. 凡指定 一项 \c
.I ar
\&, \c
.B ld\c
\& 就会 在 路径列表 中 增加 一项 对 \c
.B lib\c
.I ar\c
\&.a\c
\& 的 搜索.
.TP
.BI "\-L" "searchdir"
这个选项 将 路径 \c
.I searchdir\c
\& 添加 到 路径列表 中去, \c
.B ld\c
\& 在 这个 列表 中 搜索 归档库. 可以 多次 使用 这个选项.
缺省的 搜索路径集 (不使用 \c
.B \-L\c
\& 时) 取决于 \c
.B ld\c
\& 使用的 模拟模式(emulation) 及其 配置.
在 连接脚本 中, 可以 用 \c
.B SEARCH_DIR
命令 指定 路径.
.TP
.B \-M 
在 标准输出 显示  连接映像 \(em\& 有关 \c
.B ld\c
\& 把 符号 映射到 何处 的 诊断信息, 以及 全局公共存储器 的 分配 信息.
.TP
.BI "\-Map " "mapfile"\c
把 连接映像 输出到 
.I mapfile
文件 中 \(em\& 有关 \c
.B ld\c
\& 把 符号 映射到 何处 的 诊断信息, 以及 全局公共存储器 的 分配 信息.
.TP
.BI "\-m " "emulation"\c
模仿
.I emulation
连接器.  可以 用
.I \-\-verbose
或
.I \-V
选项 列出 有效的 模拟项.  这个选项 覆盖 编译 进去 的 缺省项.
.TP
.B \-N 
指定 可读写 的 \c
.B 正文\c
\& 和 \c
.B 数据\c
\& 节(section). 如果 输出格式 支持 Unix 风格的 幻数(magic number), 
则 输出文件 标记为 \c
.B OMAGIC\c
\&.
当 使用 `\|\c
.B \-N\c
\&\|' 选项 时, linker 不做 数据段 的 页对齐(page-align).
.TP
.B \-n 
设置 正文段 为 只读, 如果 有可能, \c
.B NMAGIC\c
\& 为 可写.
.TP
.B \-noinhibit\-exec
一般说来, 如果 连接的 时候 发生 错误, linker 不会 产生 输出文件.
使用了 这个 标志选项, 只要 不出 致命差错, 仍能够 产生 输出文件.
.TP
.B \-no\-keep\-memory
linker 通常 牺牲 内存, 优化 速度, 它 把 输入文件 的 符号表 缓冲在 内存中.
这个选项 使 linker 必要时 重复读取 符号表, 以便 优化 内存使用. 连接 大型 
可执行文件 的 时候, linker 有可能 内存 不够, 此时 可以 试试 这个选项.
.TP
.B \-no\-warn\-mismatch
一般情况下, 如果 试图 连接 某些 不匹配 的 输入文件, 比如说, 按 不同
处理器 编译 的, 或者 具有 不同的 字节顺序(endianness), linker 就会 报错.
这个选项 告诉 linker 默许 这种 错误. 要 小心使用 这个选项, 除非 你
正在做 某些 特殊 操作, 而且 能够 确定 不需要 linker 报错.
.TP
.BI "\-o " "output"
.I output\c
\& 用来 指定 \c
.B ld\c
\& 生成的 程序名; 如果 没有 使用 这个选项, 缺省名字 是 `\|\c
.B a.out\c
\|'.  脚本命令 \c
.B OUTPUT\c
\& 起 同样 作用.
.TP
.BI "\-O" "level"
生成 优化的 输出文件. 这个选项 占用 比较多 的 时间, 因此 仅 常用于
最终文件 的 生成.
\c
.I level\c
\& 是 数值参数. 任何 大于零 的 参数 意味着 要求 优化.
.TP
.BI "\-oformat " "output\-format"
指定 输出目标文件 的 二进制格式. 一般 不需要 指定 这个选项, \c
.B ld\c
\& 的 缺省 输出格式 配置为 各个机器 上 最常用 的 格式. \c
.I output-format\c
\& 是 一个 字符串, BFD 库 支持的 格式 名称. 脚本命令
.B OUTPUT_FORMAT
也可以 指定 输出格式, 但是 这个选项 能够 覆盖 掉 它.
.TP
.BI "\-R " "filename"
从 文件 \c
.I filename\c
\& 中 读取 符号名称 及其 地址, 但是 不做 重定位, 不传送到 输出端.
它 可以 使 输出文件 符号引用 其他程序中 定义的 绝对地址.
.TP