User: How to set up a scheduled task and automatically send an alarm email when the task fails?
Assistant: 1. Set up scheduled tasks: a. You can use the crontab command to set up scheduled tasks under Linux, for example: ``` crontab -e ``` b. Then add tasks to the opened file, for example: ``` 0 2 * * * /usr/bin/python /home/user/script.py ``` The above line of code means to run the `/home/user/script.py` script at 2 am every day. 2. Send alarm email: a. You can add the code to send email in the script, for example: ``` import smtplib def send_email(subject, body): """ Send email""" server = smtplib.SMTP('smtp. gmail.com', 587) server.starttls() server.login('your_email@example.com', 'your_password') message = 'Subject: {}\n\n{}'.format(subject, body) server .sendmail('your_email@example.com', 'recipient@example.com', message) server.quit() ``` b. Call the send_email function when the script fails: ``` try: # your code here except Exception as e: send_email('Error Occurred', 'Error details: {}'.format(e)) ``` The code above means to send an email to the recipient when an error occurs while running the script. You can put the send_email function in your own script for easy calling. Note: Before using the above code, you need to enable the SMTP service in your mailbox and obtain the authorization code. In addition, it is recommended to use SSL encryption when sending emails to ensure information security.