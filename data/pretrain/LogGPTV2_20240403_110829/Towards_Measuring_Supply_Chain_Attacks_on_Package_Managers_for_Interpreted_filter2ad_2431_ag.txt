Available: https://duo.com/decipher/hunting-malicious-npm-packages.
[39] A. Miller, Sourmint: Malicious code, ad fraud, and data leak in ios,
Aug. 2020. [Online]. Available: https://snyk.io/blog/sourmint-malicio
us-code-ad-fraud-and-data-leak-in-ios/.
[40] C. Cimpanu, Backdoored python library caught stealing ssh creden-
tials, May 2018. [Online]. Available: https://www.bleepingcomputer.
com/news/security/backdoored- python- library- caught- stealing- ssh-
credentials/.
[41] N. Inc., All versions of discord.js-user contain malicious code. the
package uploads the user’s discord token to a remote server. Sep. 2019.
[Online]. Available: https://www.npmjs.com/advisories/1177.
P. S. Foundation, The ast module helps python applications to process
trees of the python abstract syntax grammar, Aug. 2019. [Online].
Available: https://docs.python.org/3/library/ast.html.
[43] G. M. Bravo, Ecmascript parsing infrastructure for multipurpose
analysis, Aug. 2018. [Online]. Available: https://github.com/Kronuz/
esprima-python.
[44] whitequark, Parser is a production-ready ruby parser written in pure
ruby. Aug. 2019. [Online]. Available: https://github.com/whitequark/
parser.
[45] N. Popov, A php parser written in php, Jul. 2019. [Online]. Available:
[42]
https://github.com/nikic/PHP-Parser.
python-security, A static analysis tool for detecting security vulner-
abilities in python web applications, Jul. 2018. [Online]. Available:
https://github.com/python-security/pyt.
[47] N. Patnaik and S. Sahoo, “Javascript static security analysis made easy
with jsprime,” Blackhat USA, 2013.
S. Inc., A static analysis security vulnerability scanner for ruby on
rails applications, May 2019. [Online]. Available: https://github.com/
presidentbeef/brakeman.
[49] D. Inc., Modernize your applications, accelerate innovation securely
build, share and run modern applications anywhere, Aug. 2019.
[Online]. Available: https://www.docker.com.
[50] G. Borello, “System and application monitoring and troubleshooting
[46]
[48]
with sysdig,” 2015.
[57]
[51] R. McGrath and W. Akkerman, Source forge strace project, 2004.
[52]
J. Mauro, DTrace: Dynamic Tracing in Oracle® Solaris, Mac OS X,
and FreeBSD. Prentice Hall, 2011.
[53] M. Weber, Detecting malicious campaigns with machine learning, Oct.
2018. [Online]. Available: https://unit42.paloaltonetworks.com/unit42-
detecting-malicious-campaigns-machine-learning/.
E. Therond, A static analyzer for security purposes. only php language
is currently supported, Dec. 2018. [Online]. Available: https://github.
com/designsecurity/progpilot.
[55] A. A. Project, Airflow is a platform to programmatically author,
schedule and monitor workflows. Aug. 2019. [Online]. Available: https:
//airflow.apache.org/.
[56] CeleryProject, Celery: Distributed Task Queue, 2019. [Online]. Avail-
[54]
able: http://www.celeryproject.org.
Z. Buhman, Ptpb.pw permanent shutdown, Mar. 2019. [Online]. Avail-
able: https://github.com/ptpb/pb/issues/246.
[58] D. Kirat, G. Vigna, and C. Kruegel, “Barecloud: Bare-metal analysis-
based evasive malware detection,” in Proc. 23rd USENIX Sec., San
Diego, CA, Aug. 2014.
[59] D. Kirat and G. Vigna, “Malgene: Automatic extraction of malware
analysis evasion signature,” in Proc. 22nd ACM CCS, Denver, Col-
orado, Oct. 2015.
[60] A. Jadhav, D. Vidyarthi, and M. Hemavathy, “Evolution of evasive
malwares: A survey,” in 2016 International Conference on Compu-
tational Techniques in Information and Communication Technologies
(ICCTICT), IEEE, 2016, pp. 641–646.
[61] Y. Gao, Z. Lu, and Y. Luo, “Survey on malware anti-analysis,” in
Fifth International Conference on Intelligent Control and Information
Processing, IEEE, 2014, pp. 270–275.
[62] A. Bulazel and B. Yener, “A survey on automated dynamic mal-
ware analysis evasion and counter-evasion: Pc, mobile, and web,”
in Proceedings of the 1st Reversing and Offensive-oriented Trends
Symposium, ACM, 2017, p. 2.
[74]
[73]
[70]
[65]
[63] N. Inc., All versions of fast-requests contain obfuscated malware that
uploads discord user tokens to a remote server, Sep. 2019. [Online].
Available: https://www.npmjs.com/advisories/1086.
[64] Bertus, Detecting cyber attacks in the python package index (pypi), Oct.
2018. [Online]. Available: https://medium.com/@bertusk/detecting-
cyber-attacks-in-the-python-package-index-pypi-61ab2b585c67.
P. OKane, S. Sezer, and K. McLaughlin, “Obfuscation: The hidden
malware,” May 2011.
[66] A. Fass, M. Backes, and B. Stock, “Hidenoseek: Camouflaging mali-
cious javascript in benign asts,” in Proc. 26th ACM CCS, London, UK,
Nov. 2019.
[67] Y. Fratantonio, A. Bianchi, W. Robertson, E. Kirda, C. Kruegel, and
G. Vigna, “Triggerscope: Towards detecting logic bombs in android
applications,” in Proc. 37th IEEE S&P, San Jose, CA, May 2016.
[68] K. Kim, I. L. Kim, C. H. Kim, Y. Kwon, Y. Zheng, X. Zhang, and
D. Xu, “J-force: Forced execution on javascript,” in Proceedings of the
26th international conference on World Wide Web, 2017.
[69] G. Li, E. Andreasen, and I. Ghosh, “Symjs: Automatic symbolic
testing of javascript web applications,” in Proc. 22nd ACM SIGSOFT
Symposium on the Foundations of Software Engineering (FSE), Hong
Kong, Nov. 2014.
J. Corbet, An attempt to backdoor the kernel, Nov. 2003. [Online].
Available: https://lwn.net/Articles/57135/.
[71] C. Xiao, Novel malware xcodeghost modifies xcode, infects apple ios
apps and hits app store, Sep. 2015. [Online]. Available: https://unit42.
paloaltonetworks.com/novel- malware- xcodeghost- modifies- xcode-
infects-apple-ios-apps-and-hits-app-store/.
[72] K. Zetter, Researchers solve juniper backdoor mystery; signs point to
nsa, Dec. 2015. [Online]. Available: https://www.wired.com/2015/12/
researchers-solve-the-juniper-mystery-and-they-say-its-partially-the-
nsas-fault/.
L. H. Newman, Inside the unnerving supply chain attack that corrupted
ccleaner, Apr. 2018. [Online]. Available: https://www.wired.com/story/
inside-the-unnerving-supply-chain-attack-that-corrupted-ccleaner/.
L. H. Newman, Hack brief: How to check your computer for asus
update malware, Mar. 2019. [Online]. Available: https://www.wired.
com/story/asus-software-update-hack/.
J. Cappos, J. Samuel, S. Baker, and J. H. Hartman, “Package man-
agement security,” University of Arizona Technical Report, pp. 08–02,
2008.
J. Cappos, J. Samuel, S. Baker, and J. H. Hartman, “A look in the
mirror: Attacks on package managers,” in Proc. 15th ACM CCS,
Alexandria, VA, Oct. 2008.
T. K. Kuppusamy, S. Torres-Arias, V. Diaz, and J. Cappos, “Diplomat:
Using delegations to protect community repositories,” in Proc. 13th
USENIX NSDI, Santa Clara, CA, Mar. 2016.
T. K. Kuppusamy, V. Diaz, and J. Cappos, “Mercury: Bandwidth-
effective prevention of rollback attacks against community reposito-
ries,” in Proc. 2017 USENIX Annual Technical Conference (ATC),
Santa Clara, CA, Jul. 2017.
S. Torres-Arias, H. Afzali, T. K. Kuppusamy, R. Curtmola, and
J. Cappos, “In-toto: Providing farm-to-table guarantees for bits and
bytes,” in Proc. 28th USENIX Sec., Santa Clara, CA, Aug. 2019.
[80] A. Decan, T. Mens, and E. Constantinou, “On the impact of security
vulnerabilities in the npm package dependency network,” in Proc.
15th Working Conference on Mining Software Repositories (MSR),
Gothenburg, Sweden, May 2018.
[81] K. Garrett, G. Ferreira, L. Jia, J. Sunshine, and C. Kästner, “Detecting
suspicious package updates,” in Proceedings of the 41st International
Conference on Software Engineering: New Ideas and Emerging Results,
IEEE Press, 2019, pp. 13–16.
P. C. Q. Authority, Bandit is a tool designed to find common security
issues in python code, Jul. 2018. [Online]. Available: https://github.
com/PyCQA/bandit.
T. N. S. Platform, Node security platform command-line tool, May
2018. [Online]. Available: https://github.com/nodesecurity/nsp.
S. Taute, A javascript malware analysis tool, Jan. 2015. [Online].
Available: https://github.com/svent/jsdetox.
[85] A. Madan, S. Muppidi, N. Patel, and A. Buecker, “Securely adopting
mobile technology innovations for your enterprise using ibm security
solutions,” Redguide for Business Leaders, IBM Corp, pp. 1–42, 2013.
[86] N. System, Detect potentially malicious php files, Jul. 2018. [Online].
[83]
[84]
[75]
[76]
[77]
[78]
[79]
[82]
Available: https://github.com/nbs-system/php-malware-finder.
15
[87] Rubysec, Patch-level verification for bundler, Dec. 2017. [Online].
[88]
[89]
Available: https://github.com/rubysec/bundler-audit.
S. Arzt, S. Rasthofer, C. Fritz, E. Bodden, A. Bartel, J. Klein, Y. Le
Traon, D. Octeau, and P. McDaniel, “Flowdroid: Precise context, flow,
field, object-sensitive and lifecycle-aware taint analysis for android
apps,” Jun. 2014.
F. Wang and Y. Shoshitaishvili, “Angr-the next generation of binary
analysis,” in Cybersecurity Development (SecDev), 2017 IEEE, IEEE,
2017, pp. 8–9.
T. Kojm, Clamav, 2004.
[90]
[91] D. Bruening, Qz: Dynamorio: Dynamic instrumentation tool platform,
Jul. 2018. [Online]. Available: https://github.com/DynamoRIO/dynam
orio.
[92] RunKit, Runkit is node prototyping, Jul. 2018. [Online]. Available: htt
ps://runkit.com/home.
[93] Q. Chen and A. Kapravelos, “Mystique: Uncovering information leak-
age from browser extensions,” in Proc. 25th ACM CCS, Toronto, ON,
Canada, Oct. 2018.
[94] A. Kapravelos, C. Grier, N. Chachra, C. Kruegel, G. Vigna, and V.
Paxson, “Hulk: Eliciting malicious behavior in browser extensions,” in
Proc. 23rd USENIX Sec., San Diego, CA, Aug. 2014.
T. Reed and M. Grenier, “Osquery - windows, macos, linux monitoring
and intrusion detection,” 2017.
[96] V. Total, “Virustotal-free online virus, malware and url scanner,”
[95]
Online: https://www. virustotal.com/en, 2012.
[97] Wikipedia contributors, Bleeping computer — Wikipedia,
the free
encyclopedia, 2020. [Online]. Available: https://en.wikipedia.org/w/
index.php?title=Bleeping_Computer&oldid=945358309.
[98] R. Duan, O. Alrawi, R. P. Kasturi, R. Elder, B. Saltaformaggio, and
W. Lee, Measuring and preventing supply chain attacks on package
managers, 2020. [Online]. Available: https://github.com/osssanitizer/
maloss/tree/master/config.
[99] R. Duan, O. Alrawi, R. P. Kasturi, R. Elder, B. Saltaformaggio, and
W. Lee, Measuring and preventing supply chain attacks on package
managers, 2020. [Online]. Available: https://github.com/osssanitizer/
maloss/tree/master/malware.
16
TABLE V: Examples and statistics of manually labeled APIs. The full list of labeled APIs is available in our project source
code repository [98].
APPENDIX
Runtime
Type
Network
Python
Filesystem
Process
Code Generation
Network
Node.js
Filesystem
Process
Code Generation
Network
Ruby
Filesystem
Process
Code Generation
Source
Sink
Source
Sink
Sink
Sink
Source
Sink
Source
Sink
Sink
Sink
Source
Sink
Source
Sink
Sink
Sink
Example
socket.recv, urllib.urlretrieve, ssl.SSLSocket.read, http.client.HTTPSConnection.request
socket.send, ssl.SSLSocket.send, smtplib.SMTP_SSL.sendmail, http.server.HTTPServer
os.read, fileinput.input, tarfile.open, http.cookiejar.FileCookieJar.load
os.write, shutil.rmtree, tempfile.NamedTemporaryFile.write, pathlib.Path.rmdir
os.popen, subprocess.Popen, multiprocessing.Process, concurrent.futures.Executor
eval, ctypes.CDLL, code.InteractiveInterpreter.runsource, compileall.compile_file
https.get, socket.connect, dgram.createSocket, net.createConnection
socket.send, session.post, request.write, http2stream.respond
fs.readFile, fs.readFileSync, fsPromises.readFile, fsPromises.readdir
fs.writeFile, fs.rmdir, filehandle.appendFile, fsPromises.writeFile
child_process.exec, child_process.spawnSync, subprocess.send, cluster.Worker.send
eval, script.runInNewContext, vm.runInContext, WebAssembly.compile
Socket.recvfrom, UDPSocket.recvfrom_nonblock, Net::HTTP.get, Net::FTP.get
Socket.send, UDPSocket.send, Net::HTTP.post, Net::SMTP.sendmail
IO.read, IO.readlines, Readline.readline, File.open
IO.write, IO.pwrite, FileUtils.rmdir, FileUtils.copy
spawn, system, Process.new, Process.fork,
eval, load, Binding.eval, RubyVM::InstructionSequence.eval
Count
58
46
64
34
72
45
24
34
16
34
23
15
61
52
35
44
19
12
TABLE VI: The listed packages are the ones that are reported by the authors but not removed by registry maintainers. The full
list of packages reported by the authors and the community is available in our project source code repository [99].
Reason
The Npm maintainers stated that they currently don’t have a policy
to define user tracking versus information stealing and therefore
they didn’t remove these packages. In fact, one of the reported
packages, botbait, is developed by the Npm team and used for
bot tracking.
Removed by the RubyGems maintainers on May 15, 2020.
These gems are proof-of-concept packages from third-party that
claim to be typo-guards without proof of their own innocence.
The RubyGems maintainers didn’t remove them because they
mentioned that
these packages don’t have explicit malicious
behaviors.
Package Names
ikst, mktmpio, npm_scripts_test_metrics,
botbait, npmtracker, p4d-rpi-tools,
install-stats, scrimba,
rsa-csr, ecdsa-csr, greenlock-ssh-
fingerprint, jwk-to-ssh, rsa-compat, ssh-to-jwk, tysapi, zenapi, majuro, yummy-
bolts, ping-me-maybe, avo
igniteui-cli, uasn1,
gemsploit
restclient, multijson, awesomeprint, coffeescript, netssh, awssdk, concurren-
truby, miniportile, awssdkcore, mimetypes, netscp, threadsafe, awssdkresources,
rbinotify, rubygemsupdate,
jqueryrails, sassrails, coffeescriptsource, racktest,
rubygemsbundler, coffeerails, httpcookie, multixml, rspecexpectations, method-
source, multipartpost, unfext, domainname, rspeccore, rbfsevent, rspecsupport,
railsdeprecatedsanitizer, rspecmocks, rackprotection, railshtmlsanitizer, mime-
typesdata, railsdomtesting, sprocketsrails,
17