User: How to parse command line arguments using argparse module in Python?
Assistant: argparse is a module in the Python standard library for parsing command-line arguments. It can easily help us define and parse command line parameters, making our programs more convenient for users to use. Here is an example of using the argparse module to parse command-line arguments: ```python import argparse # Create a parser object parser = argparse.ArgumentParser(description='Process some integers.') # Add command-line arguments parser.add_argument(' integers', metavar='N', type=int, nargs='+', help='an integer for the accumulator') parser.add_argument('--sum', dest='accumulate', action='store_const' , const=sum, default=max, help='sum the integers (default: find the max)') # Parsing command line parameters args = parser.parse_args() # Calculation result result = args.accumulate(args.integers) # Output result print(result) ``` This example program accepts several integers as command line arguments, and chooses to sum or maximize them according to the option `--sum`. The way to run the example program is as follows: ```bash $ python argparse_example.py 1 2 3 4 5 5 $ python argparse_example.py 1 2 3 4 5 --sum 15 ``` In this example program, we first create a The parser object `parser`, and uses the `add_argument` method to add two command line parameters: - `integers`, which means the list of integers to be processed, specified by the `nargs='+'` parameter, which means that this parameter can have one or multiple values; - `--sum`, means to choose to sum the integers or to find the maximum value, specified by the `dest` and `action` parameters, which means that if this option is specified, the integers will be summed, otherwise Just find the maximum value, and the default value is the maximum value. The command-line arguments are then parsed using the `parse_args` method, returning an `args` object containing the parsed argument values. We can use `args.integers` to get a list of integers and `args.accumulate` to get a function to sum or maximize. Finally calculate the result and output it.