47.
48.        gme.stopModel("example", "1.0"); 
49.
50.    } 
51.
52.} 
第二种，直接以 XML 字符串为参数
XMLString=" " 
gme.runXMLString(XMLString); 
第三种，得到 GraphModelData 对象，此对象可以编辑，也可以自己构建，也可以从 XML 转化而来,就是 XML 的 Java 对象表达
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
GraphModelData cepmodel = 
GraphModelExecutorUtil.convertXmlToObject("files/example.xml"); 
gme.runModel(cepmodel) 
本文示例完整源码可到 http://www.sodbase.com/page/service/product.php 下载，请选择"嵌入式版 Java 开发示例"下载最新版示例。
自己写 CEP XML 模型和 EPL 还是有些麻烦,今天跟大家讲一下 SODBASE Studio 的使用，SODBASE Studio 用户自配置的辅助工具，可以生成 XML 模 型和用于部署到服务器的二进制模型文件。SODBASE Studio 还可以做单元测试，在建立各种级联的大模型时比较有用。
软件下载,。SODBASE Studio 选择
SODBASE-CEP-Studio，服务器选择
SODBASE-CEP-SERVER 下载。
1. 用户自定义配置
SODBASE Studio 是一个用户自己可配置的图形化设计工具，在 
configuration/adaptor.properties 文件中用户可以自定义自己用到的输入输出适配
器。可以仿照里面的例子，添加自己的输入、输出适配器。注意，单元测试时，将
依赖的 jar 包放到 lib 文件夹下。
2. 使用方法
下面是产品手册里面介绍的建模步骤，3 分钟内可以完成
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
（1）将下载的程序包 SODBASE-CEP-Studio-2.0.*.zip 文件解压，进入解压后的目录 双击 cepstudio.exe（2）进入主界面点击工具栏新建按钮，在自动弹出的“选择一个名字”框中手工取名 填写 example，点击确定。在左侧资源管理目录中会出现 example 模型，双击该模型。
（3）将结点列表中的 INPUT 拖动到工作区面板中，自动弹出“Input 配置项”面板，输入源选择“模拟股票行情”，点击“确定”。
（4）将结点列表中 Filter 节点的拖动到工作区面板，自动弹出“filter 配置条件”面 板，点击“确定”。
（5）将结点列表中的拖动到工作区面板，自动弹出“Output 配置项”，输出选择“屏 幕打印输出”，SELECT 输出选择“否”，点击确定
（6）双击 Input 节点后，单击，将其连为一条直线，同理再将与相连接，这样一个 模型就建立完成了
（7）在工作区空白区域右键“测试运行”，查看结果是否正确。
大家可以参照产品手册练习所有节点的操作，这里想和大家分享的是大家可以参照产品手册练习所有节点的操作，这里想和大家分享的是
（1）通过菜单栏工具选项，可以生成 XML 模型文件。程序默认是在 files 目录中生 成二进制模型文件，二进制模型文件可用于在 SODBASE CEP 自带的服务器上部 署，防止明码在服务器状态服务器中出现，多少有一定的安全意义吧。
（2）在上面第 3 步中，选择级联输入源，就可生成类似上一篇博文中的 XML 模型 文件了，在嵌入式开发里面用，也可以稍作修改在在一些复杂的阈值管理应用中使
用。
（3）在面板中点击右键，可以选择生成 EPL 即 SODSQL 语句，检查对不对。
（4）所有输入输出适配器都是可以自定义配置的，配置文件在 configuration/adaptor.properties。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
3. SODBASE CEP Server3. SODBASE CEP Server
产品手册文档中也有 SODBASE CEP 自带服务器 SODBASE CEP Server 的安装方 法，大家可参考，本文就不再赘述了。想说的是
（1）服务器用到了 Web 容器，主要是安装、启动、停止 CEP 模型用的。数据输 入和输出执行，还是要靠写输入输出适配器。
（2）如果要做集群管理，可以在 configuration/db.properties 文件中配置状态 数据库，不用默认的 derby 数据库。
互联网+的影响力就是大，storm 框架原本是设计用来做互联网短文本处理和一 些统计工作的，借着互联网的东风越来越多地被大家使用。在一些场合，特别 是在已经用了 storm 架构以后，发现又想用 EPL 语句，storm 和类 SQL 语言 EPL 结合也不失为一种方案。对在线规则修改、窗口数据可靠性要求高的地方 还有用专用的 CEP 集群方案、Hot-Hot HA 等方案可供选择，不过这些不是本 文的重点。本文的重点就是让 storm 插上 EPL 的翅膀，轻松解决一些实际项目 中的拦路虎。1.示例操作步骤
前 3 步是安装 Storm（或 jStorm），已经安装了 Storm（或 jStorm）的读者可以跳 过，直接到第 4 步。
（1）下载安装 jdk 
（2）下载安装 zookeeper,启动 zookeeper 
	 exportZOOKEEPER_HOME="/path/to/zookeeper"  exportPATH=$PATH:$ZOOKEEPER_HOME/bin 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
	 cp/usr/local/zookeeper/conf/zoo_sample.cfg 
/usr/local/zookeeper/conf/zoo.cfg 
	 zkServer.sh start 
（3）下载 storm, 
解压到 linux 服务器相应位置，也可以下载其它版本。解压到 linux 服务器相应位置，也可以下载其它版本。
（4）EPL 引擎配置目录，
下载 Eclipse 工程，解压
cep_home 目录拷贝到 storm 的目录中，如 apache-storm-0.9.4/cep_home。这个 目录也可以自定义，需修改 EPLExampleTopology.java 代码中的 cep_home 变量的值。
lib/sodbasecep/目录下 jar 文件拷贝到 storm 的 lib 目录下 
dist 目录下的 cep-application-storm-example.jar 拷贝到 storm 的 examples 目录下 注：使用 jStorm 的读者，配置方法和 Storm 一致，本系列文章中在 Storm 上运行
EPL 的示例可以同时在 Storm 和 jStorm 上运行。
（5）启动 storm 
# bin/storm nimbus &（5）启动 storm 
# bin/storm nimbus & 
# bin/stormsupervisor & 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
（6）运行 Topology 
运行命令启动 topology 
[plain] view plaincopy 
1.bin/storm jar examples/cep-application-storm-example.jar com.sodbase
.integration.storm.EPLExampleTopology 
（7）输出结果（本示例的功能是 IT 系统监控中的分析函数调用响应时间，是否超
时）
2. 工作原理
Storm 中使用 SQL,较为简便的方法就是使用 EPLBolt。这种类型的一个 Bolt 就代表
着一个 SQL(EPL)语句，有时也能代表多个 SQL 语句。着一个 SQL(EPL)语句，有时也能代表多个 SQL 语句。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
2.1 EPL 建模
首先，建议大家用 Studio 建模，建模后导出为 XML 文件，能大大提高建模速度。本例的 EPL XML 文件在 files 目录下的 calltimeout.xml 
EPL 的输入流名称使用 com.sodbase.inputadaptor.StubInputAdaptor 进行声明，从 而在 EPL 中可以使用。
EPL 的输出流使用 
com.sodbase.outputadaptor.storm.SodbaseCepStromOutputAdaptor 适配器
[html] view plaincopy 
1.1.
2.true
3.com.sodbase.outputadaptor.storm.SodbaseC 	epStormOutputAdaptor
4.false
5.calltimeoutnotification
6.
查询响应时间的语句
[sql] view plaincopy 
1.CREATE QUERY callnottimeout 
2.SELECT T2._start_time_-T1._start_time_ AS responsetime, T1.calleridAS functionname ,'false' AS timeout 
3.FROM T1:callstream,T2:callstream 
4.PATTERN T1&T2 
5.WHERE T1.callerid=T2.callerid  AND T1.eventtype ='start' AND T2.even 	ttype ='end' 
6.WITHIN 1000 
查询超时的语句
[sql] view plaincopy 
1.CREATE QUERY calltimeoutnotification 
2.SELECT '-1' AS responsetime, T1.callerid AS functionname,'true' AS t
imeout 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程SODBASECEP 入门与进阶教程
3.FROM T1:callstream,T2:callstream,T3:calltimeoutevent 
4.PATTERN T1;!T2;T3 
5.WHERE T3._end_time_-T1._end_time_=1000 AND T2.callerid=T3.callerid A
ND T1.eventtype='start' 
| 6.WITHIN 1000  |  |  |
|---|---|---|
| 下 面 语 句 加 一 个 延 时 输 出 就 可 以 形 成 超 时 |timer |用 在 上 面 的 |
T3:calltiimeoutevent，
[sql] view plaincopy 
1.CREATE QUERY calltimeout 
2.SELECT 'timer' AS type,T1.timeAStime,T1.callerid  AS callerid3.FROM T1:callstream 
4.PATTERN T1 WHERE T1.eventtype ='start' 
5.WITHIN 0 
[html] view plaincopy 
1.
3.com.sodbase.outputadaptor.timer.FixedDel
ayTimerOutputAdaptor
5.1000
7.calltimeout
8.
将 EPL 引擎的处理结果传到 EPLBolt 的下一个 bolt 中。
2.在 storm 中使用 EPL 模型2.在 storm 中使用 EPL 模型
（1）将 EPL 需要的包拷贝到 storm 的 lib 目录下，再启动 nimbus 和 supervisor 
[plain] view plaincopy 
1.sodbase-cep-engine.jar  sodbase-dataadaptor-storm.jar  sodbase-dataa
daptor-timer.jar  sodbase-studio.jar  xalan-2.7.1.jar  xercesImpl-2.
9.1.jar  xml-apis-1.3.04.jar 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
（2）在 storm 目录下建一个目录 cep_home,存放 EPL 引擎的配置文件和日志。把configuration 文件夹、logging.properties 放到 cep_home 下面。cep_home 的路径
可以自定义，和下面 EPLExampleTopology 代码中一致即可。
（3）EPL XML 模型文件放到放到 cep_home/files 目录下，位置也可自定义，要和
下面 EPLExampleTopology 代码中一致。
（4）编写 Topology 应用 EPLExampleTopology，代码如下
[java] view plaincopy 
1.publicclass EPLExampleTopology { 
2.
3.publicstaticvoid main(String[] args) throws Exception { 
4.    TopologyBuilder builder = new TopologyBuilder();5.
6.    builder.setSpout("event", new RandomEventSpout(), 1); 
7.    //TODO: to specify stream name that EPL uses, and the output fie
lds 
8.    Fields outputFields = new Fields("functionname","responsetime","
timeout"); 
9.    String cep_home="/user/apache-storm-0.9.4/cep_home"; 
10.    String cepmodelfile="/user/apache-storm-0.9.4/cep_home/files/cal
ltimeout.xml";ltimeout.xml"; 
11.    builder.setBolt("EPL", new EPLBolt("callstream",outputFields,cep
_home,cepmodelfile), 1).shuffleGrouping("event"); 
12.    builder.setBolt("print1", new PrintBolt(), 1).shuffleGrouping("E
PL"); 
13.
14.    Config conf = new Config(); 
15.    conf.setDebug(false); 
16.
17.if (args != null && args.length > 0) { 
18.      conf.setNumWorkers(3); 
19.18.      conf.setNumWorkers(3); 
19.
20.      StormSubmitter.submitTopology(args[0], conf, builder.createTop
ology()); 
21.    } 
22.else { 
23.
24.      LocalCluster cluster = new LocalCluster(); 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
25.      cluster.submitTopology("test", conf, builder.createTopology())
; 
26.      Utils.sleep(10000); 
27.      cluster.killTopology("test");27.      cluster.killTopology("test"); 
28.      cluster.shutdown(); 
29.    } 
30.  } 
31.} 
builder.setBolt("EPL", new 
EPLBolt("callstream",outputFields,cep_home,cepmodelfile), 
1).shuffleGrouping("event"); 
表示将"event" Spout 的输出，接到 EPL 引擎的 streamname "callstream"，输出
outputFieds。用了 EPLBolt 专门处理 EPL 语句，构造函数有 4 个参数
streamname:与 EPL 模型中 StubInputAdaptor 的名称对应
outputFields:Bolt 的输出字段，应与 EPL 模型中 SELECT 语句一致cep_home:EPL 引擎配置文件和日志文件目录
cepmodelfile:EPL XML 模型文件的路径
（5）EPLExampleTopology 的 RandomEventSpout 和 PrintBolt 
RandomEventSpout 提供调用开始结束事件模拟数据的 spout 
[java] view plaincopy 
1.publicclass RandomEventSpout extends BaseRichSpout { 
2.  SpoutOutputCollector _collector; 
3.  Random _rand; 
4.  @Override 
5.publicvoid open(Map conf, TopologyContext context, SpoutOutputCol
lector collector) {lector collector) { 
6.    _collector = collector; 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
7.    _rand = new Random(); 
8.  } 
9.
10.  @Override 
11.publicvoid nextTuple() { 