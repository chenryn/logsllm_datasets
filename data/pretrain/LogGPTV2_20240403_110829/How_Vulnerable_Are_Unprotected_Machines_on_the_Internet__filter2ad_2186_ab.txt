server
sql
support
test2
test3
user
user1
support 388945a0 user2
user3
user4
user5
sys
test
test1
we observed that attackers tried several administrator name variations such as admin,
administrator and db2admin. All of those attempts failed except for a few anonymous
(guest) logons. Anonymous logins do not require a username or password to connect to
the SMB server. This is an optional feature of SMB and should generally be disabled.
Anonymous logins may pose a security risk to the system because a remote attacker
could launch exploits to gain user privileges or even control of the affected system.
230
Y. Zeng, D. Coffey, and J. Viega
Exploitations. In our experiment, we found that most exploitations attempted on our
wide-open machines were not new attacks. There was one interesting attack we would
like to highlight—an attack on port 12147 where Symantec’s Alert Management System
2 (AMS2) service listens. AMS2 is a component of multiple Symantec products includ-
ing Symantec AntiVirus Corporate Edition and Symantec Endpoint Protection. AMS2
has multiple known vulnerabilities. For example, in 2009 a remote-code-execution vul-
nerability of AMS2 allowed attackers to execute arbitrary commands by sending a
crafted packet. Our honeypot captured one such packet—the attacker attempted to get
a remote shell to create a VBScript in the target machine. We extracted and reorganized
the exploit packet payload and found that the main purpose of the script was to down-
load an executable named winnew.exe from the attacker, save it as installer.exe to the
C: drive, and then run it. With the remote command shell, the attacker was able to do
whatever he wanted to the target machine. Our honeypots also captured similar exploits
targeting the same vulnerability, but with different payloads.
Table 3. Summary Statistics
Machine
Total 1st Port 1st Probe # of Compromises # of Connections # of Offending
Time
IPs Daily
Scan
Daily
Win XP Pro SP2 14 days 50m 1h51m
1h37m
Win XP Pro SP2 7 days
Win 7 Pro SP1 29 days
2h41m
6m
3m
1
1
0
453
2372
618
69
54
45
4.2 On-Premise Experiment
Scan, Probe, and Exploitation Times of Occurrence. In the on-premise experiment,
Table 3 shows the summary statistics of the three virtual machines (Two Windows XP
and one Windows 7) on an ESXi server. They were connected to a DSL line in our
ofﬁce location. They all received port scans within an hour, probes within a couple of
hours, though only the two XP machines were eventually compromised by attackers.
The average numbers of inbound connections on daily basis were different from one
machine to another. Apparently, some offending IPs behaved more aggressively than
others, which we will show later.
Top Targeted Ports. As far as top targeted ports are concerned (Table 4), Windows
XP and Windows 7 machines shared a similar set of targeted ports such as 1433, 3389,
445 and 139. The MSSQL port 1433 was disproportionally targeted due to the Mi-
crosoft SQL server installed on the XP machines. Note that many ports in the top list
were never open in our experiment—attackers made constant requests to them simply
because most likely services running on those ports had vulnerabilities. Thus, it is im-
portant for network administrators and IT security staff to secure those services at ﬁrst.
Top Offending IPs. Table 5 lists the top 5 offending IPs along with targeted ports per IP
and the number of connections initiated. The observation is that, as opposed to scanning
all/multiple ports on a machine, the attacker normally focused on one particular port
How Vulnerable Are Unprotected Machines on the Internet?
231
Table 4. Top 10 Targeted Ports
Windows XP
Port
% of Conn
Windows 7
Port
% of Conn
445 SMB
3389 RDP
3389 RDP
445 SMB
5900 VNC
139 NetBIOS
1433 MSSQL 36.58% 139 NetBIOS 53.56%
23.10%
8.88%
1.62%
13.87%
1.53% 1433 MSSQL 1.58%
1.55%
0.59%
0.40%
0.76%
0.48%
0.31%
0.45%
0.22% 4899 Radmin
0.45%
0.22% 8080 HTTP
0.19% 51595 UDP
0.41%
5900 VNC
22 SSH
23 Telnet
25 SMTP
22 SSH
4899 Radmin
110 POP
80 HTTP
Table 5. Top 10 Offending IPs with Targeted Ports
Windows XP
Windows 7
IP/Port
# of Conn IP/Port
# of Conn
64.31.*.*
1433
218.65.*.*
3389
199.36.*.*
1433
117.41.*.*
1433
159.226.*.*
1433
6988
6988
1987
1987
1360
1360
1050
1050
912
912
80.90.*.*
139
445
184.154.*.*
137
139
122.199.*.*
3389
205.210.*.*
135
139
445
200.91.*.*
135
139
445
5663
2790
2873
4628
2
4626
1463
1463
682
1
454
227
623
1
310
312
(service). For example, the top one offending IP to XP machines initiated thousands of
connections only to the MSSQL port 1433, whereas the top offending IP to the Windows
7 machine persistently reached out to SMB port 445/139. Apparently, brute-forced login
attempts accounted for a majority of the incoming connections.
Top Countries. We used MaxMind’s GeoIP database [2] to map source offending IPs
to geographic locations. As shown in Figure 4, the top three countries remained the
same for XP and 7 machines. The top one country is China, accounting for over one
third of total malicious trafﬁc. United States is at the second place and followed by
Korea. We need to point out that the location of an offending IP does not necessarily
232
Y. Zeng, D. Coffey, and J. Viega
Canada 
3% 
Japan 
3% 
Russian 
Federation 
3% 
India 
4% 
Taiwan 
5% 
Korea, 
Republic of 
10% 
Win XP 
United 
Brazil 
Kingdom 
2% 
2% 
China 
46% 
Win 7 
Turkey 
2% 
Brazil 
3% 
Japan 
3% 
Taiwan 
3% 
Germany 
3% 
India 
5% 
Russian 
Federation 
5% 
Korea, 
Republic of 
6% 
China 
45% 
United States 
22% 
United States 
25% 
Fig. 4. Top 10 Countries of Attacks
reﬂect where the attacker is because an attacker can remotely control compromised
machines all over the world.
Compromises. As mentioned earlier, the Windows 7 machine stayed strong throughout
the experiment, whereas the two Windows XP machines fell victim and were eventually
under attackers’ control. How did the compromises take place? Long story short: both
were due to weak passwords as opposed to OS/software vulnerability exploitations. We
will walk through them one by one.
Compromise I: The compromise of one XP machine was attributed to a Microsoft SQL
Server brute-force attack. The intruder successfully broke the ‘sa’ account password
(“password1”) within 9 hours of service startup, and then enabled the xpcmd shell, an
extended stored procedure, to issue commands directly to the Windows command shell.
With this privileged access, the machine was in the intruder’s hand. The victim machine
subsequently started FTP sessions with its command server and downloaded and exe-
cuted multiple Trojan payloads. Instructed by the command server, the machine made
numerous connection attempts to an online gaming site.
Compromise II: The compromise of another XP machine also resulted from a weak
password (“tryout”) of the Administrator login account. The intruder launched thou-
sands of RDP sessions and ﬁnally made a right guess. It was about two days between
our machine going online and being compromised. From the pcap traces, we could tell
that the original intruder did not hold the machine for his own use. It seems that the
compromised machine was given (or even sold) to someone else. Though the break-
in method is a standard one, how the victim machine was used is noteworthy. There
was no system change or ﬁle modiﬁcation on the machine. We caught the wrongdoer
at the scene the moment he was fabricating his eHarmony proﬁle on the compromised
machine. His IP was from Nigeria and there was a picture of an Italian actor on the desk-
top. Looking at the browsing history we found that this person had visited quite a few
online dating sites to create new proﬁles and browse other peoples’ pages—he logged
on to this machine solely for this purpose. Given all the information, very likely, this
How Vulnerable Are Unprotected Machines on the Internet?
233
is the starting point of an online dating scam. Why did he use someone else’s machine
to do so? Normally, web sites can track users by IP addresses and people conducting
malicious activities are afraid of getting caught if using their own computers.
5 Conclusion and Future Work
In this paper, we presented our experiment on monitoring 18 unprotected Windows
machines at two Internet locations: in the cloud and on-premise. Our key ﬁndings are:
– Every machine on the Internet is scanned within minutes after connecting. It does
not matter whether a machine connecting to the Internet opens ports or not—any
machine will be scanned within several minutes. This is not surprising because
attackers don’t know whether a port is open unless they scan it.
– More open ports means more vulnerability probes. The elapsed time between the
machine startup and the arrival of vulnerability probes depends on the speciﬁc ser-
vices that are running. The more listening services a machine has, the sooner it will
be probed, and the more risks it will be exposed to.
– More vulnerabilities means more exploitation attempts. It is rare that attackers send
exploitations blindly without ﬁrst knowing that their targets are vulnerable. On the
other hand, if unprotected machines have holes, chances are good that attackers will
ﬁnd them and attempt to exploit them. How long it takes depends on the vulnera-
bilities a machine has.
– Brute-force logins are the most common type of attack. We observed that brute-
force login attempts were much more frequent than vulnerability probes or ex-
ploitations. On each machine, we captured dictionary attacks at port 445 (SMB) and
3389 (RDP), attempting thousands of username/password combinations. Most at-
tempts targeted accounts with administrator privileges. Weak or default passwords
can be easily broken and provide the best entry point.
– Vulnerability exploitations without users’ interaction are possible but not widely
observed. Even though every wide-open machine (all ports open and services emu-
lated) received at least one vulnerability exploitation within hours, we saw very few
exploitations on out-of-the-box machines. Generally speaking, exploitations com-
ing directly from the Internet and targeting vulnerabilities of operating systems or
applications are less prevalent nowadays—most exploitations are delivered at the
client-side and require users’ involvement such as opening a ﬁle or clicking a link.
As future work, we plan to broaden the scope of the experiment. We would like to 1)
increase the number of test machines; 2) add other operating systems such as OS X and
Linux; 3) deploy machines at more locations such as home and campus networks. We
expect to run this experiment on an ongoing basis and regularly report our ﬁndings.
References
1. Honeybot, http://www.atomicsoftwaresolutions.com/honeybot.php
2. Maxmind geoip database,
http://www.maxmind.com/en/geolocation_landing
234
Y. Zeng, D. Coffey, and J. Viega
3. Os platform statistics, http://www.w3schools.com/browsers/browsers os.
asp
4. Regshot, http://sourceforge.net/projects/regshot/
5. Avantgarde: Time to live on the network. Tech. rep. (2004)
6. Hartung, C., Balasalle, J., Han, R.: Node compromise in sensor networks: The need for secure
systems. Department of Computer Science University of Colorado at Boulder (2005)
7. McQueen, M.A., Boyer, W.F., Flynn, M.A., Beitel, G.A.: Time-to-compromise model for
cyber risk reduction estimation. Quality of Protection, 49–64 (2006)
8. Moore, D., Shannon, C.: Code-red: a case study on the spread and victims of an internet
worm. In: 2nd ACM SIGCOMM Workshop on Internet Measurment, pp. 273–284 (2002)
9. Moore, T., Clayton, R.: Evil searching: Compromise and recompromise of internet hosts
for phishing. In: Dingledine, R., Golle, P. (eds.) FC 2009. LNCS, vol. 5628, pp. 256–272.
Springer, Heidelberg (2009)
10. SANS: Four-minute windows survival time,
http://isc.sans.edu/diary.html?storyid=4721
11. SANS: Survival time, http://isc.sans.edu/survivaltime.html
12. Shannon, C., Moore, D.: The spread of the witty worm. IEEE Security & Privacy 2(4), 46–50
(2004)
13. Ten, C.W., Liu, C.C., Manimaran, G.: Vulnerability assessment of cybersecurity for scada
systems. IEEE Transactions on Power Systems 23(4), 1836–1846 (2008)