When employing the watch + list pattern, there are several potential pitfalls to be aware of. Many of our current controllers utilize this pattern, and we anticipate that it will continue to be widely used in future code as well. To address these challenges and ensure consistency, we propose developing a framework or example that developers can follow. This framework would require the implementation of three key functions: `list`, `watch`, and `process`. By adhering to this structure, developers can create new, robust controllers that are free from common bugs associated with the list+watch pattern.

This framework can be modeled after, or largely based on, the existing scheduler, which has proven to be effective and reliable.