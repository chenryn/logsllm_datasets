title:Data Recovery from "Scrubbed" NAND Flash Storage: Need for Analog
Sanitization
author:Md. Mehedi Hasan and
Biswajit Ray
Data Recovery from ‚ÄúScrubbed‚Äù NAND Flash Storage: 
Need for Analog Sanitization
Md Mehedi Hasan and Biswajit Ray, The University of Alabama in Huntsville
https://www.usenix.org/conference/usenixsecurity20/presentation/hasan
This paper is included in the Proceedings of the 29th USENIX Security Symposium.August 12‚Äì14, 2020978-1-939133-17-5Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.Data Recovery from ‚ÄúScrubbed‚Äù NAND Flash Storage: Need for Analog Sanitiza-
Electrical and Computer Engineering Department, The University of Alabama in Huntsville 
Md Mehedi Hasan and Biswajit Ray  
tion  
Abstract 
Digital sanitization of flash based non-volatile memory sys-
tem is a well-researched topic. Since flash memory cell holds 
information  in  the  analog  threshold  voltage,  flash  cell  may 
hold the imprints of previously written data even after digital 
sanitization.  In  this  paper,  we  show  that  data  is  partially  or 
completely recoverable from the flash  media sanitized  with 
‚Äúscrubbing‚Äù  based  technique,  which  is  a  popular  technique 
for page deletion in NAND flash. We find that adversary may 
utilize the data retention property of the memory cells for re-
covering  the  deleted  data  using  standard  digital  interfaces 
with the memory. We demonstrate data recovery from com-
mercial flash memory chip, sanitized with scrubbing, by us-
ing partial erase operation on the chip. Our results show that 
analog scrubbing is needed to securely delete information in 
flash  system.  We  propose  and  implement  analog  scrubbing 
using  partial  program  operation  based  on  the  file  creation 
time information. 
1. Introduction 
Secure deletion of obsolete data from the storage medium is 
a  topic  of  paramount  importance  to  ensure  the  privacy  and 
security of the data owner. According to the Data Protection 
Act (DPA) 2018, the deletion of information must be real i.e. 
the content should not be recoverable in any way. However, 
achieving true deletion of user data from the physical storage 
medium  is  not  always  straightforward  and  it  depends  criti-
cally on the analog characteristics of the specific non-volatile 
storage elements. 
In  this  paper,  we  evaluate  the  secure  deletion  concept  in 
NAND flash based non-volatile storage system. NAND flash 
memory  finds  a  ubiquitous  place  in  today‚Äôs  computing  and 
storage landscape. Flash memory is widely used in personal 
electronic gadgets including smartphones, solid state drives, 
laptops, tablets, USB memory sticks, SD memory cards, etc.  
Due to the increasing popularity of flash as non-volatile stor-
age  media, the concept of secure deletion or sanitization of 
flash media is getting even more important. 
NAND flash exhibits certain unique challenges for secure de-
letion due to its special characteristics. First, write operation 
in flash takes place at page level granularity while erase op-
eration happens at block level which requires all the pages in 
a block to be deleted at the same time. Because of the mis-
match in granularity between  erase operations and program 
operations in flash, in-place update of a page is very resource 
expensive. Second, NAND flash requires erase-before-write 
constraint,  which  makes  overwriting  operation  very  un-
friendly, given the mismatch in granularity between erase and 
write  operation.      Third,  NAND  flash  has  finite  endurance 
meaning only a fixed number of program and erase operation 
are allowed on a NAND block. Thus, the flash controller is 
typically  designed  to  minimize  erase  operation  and  ensure 
wear-leveling of all the memory blocks. In other words, eras-
ing  a  block  for  in-place  update  of  a  page  is  not  a  common 
practice.  
Since in-place updates are not possible in NAND flash, the 
standard  overwrite-based  erasure  techniques,  typically  used 
for  hard  drives,  does  not  work  properly  for  NAND  storage 
system. Instead, NAND storage usually perform logical san-
itization (i.e., the data is not retrievable via the SATA or SCSI 
interface) by invalidating the page address of obsolete data. 
The page address mapping in NAND storage is handled by 
an  intermediate  firmware  layer  called  Flash  Translation 
Layer  (FTL),  which  performs  one-to-one  mapping  between 
logical page address and the physical memory address of the 
flash media. Thus, for any page update operation, FTL will 
write  the  new  contents  to  another  physical  page  (or  sector) 
location and update the address table map so that the new data 
appears at the target logical address. As a result, the old ver-
sion  of  the  data  remains  in  the  physical  storage  medium, 
which  can  be  retrieved  by  the  adversary  with  advanced 
memory interfaces. 
In order to achieve page-level deletion in flash based storage, 
the idea of ‚Äúdata scrubbing‚Äù  was proposed by  Wei et al[1]. 
The key concept behind ‚Äúscrubbing‚Äù based sanitization is the 
creation of an all-zero page (or all cells programmed), which 
is equivalent to deletion of data from that page. Since it is not 
possible  to  remove  charge  from  the  floating  gates  at  page 
level granularity, ‚Äúscrubbing‚Äù provides an alternative route to 
digital sanitization by programming all the cells in the page. 
However, in this paper, we show that the deleted data is par-
tially or completely recoverable after ‚Äúscrubbing‚Äù due to the 
analog property of the programmed cells. More specifically, 
programmed  cells  in  flash  continuously  lose  charge  due  to 
fundamental  data  retention  characteristics.  As  a  result,  the 
zero bits (or programmed bits) in the original data loses a por-
tion of the stored charge at the time of erase operation. We 
USENIX Association
29th USENIX Security Symposium    1399
Figure 1: (a) A floating gate (FG) NAND flash memory cell which stores information in the form of charge on the FG. Metal 
word-line (WL) act as the control gate of the FG transistor. Charge is injected on the FG through tunneling of electron from 
Si-channel to FG. Blocking oxide prevents back tunneling of electron to control gate. (b) The hierarchical storage in NAND 
flash array consisting of  kilo-bytes of  memory cells and the WL electrically connects those cells (called a page of infor-
mation). Each block consists of multiple WLs. The select gate transistors can be standard MOSFET or FG transistors, de-
pending on manufacturer or technology node. (c) Typical threshold voltage distribution for erase state cell and programmed 
state cell. 
call  these  zero  bits  as  weak  zeros  since  they  have  slightly 
lower threshold voltage compared to the freshly written bits. 
During  ‚Äúscrubbing‚Äù  a  new  set  of  zero  bits  are  created  by 
newly programming the erased cells in the original data. We 
label the freshly written zeros as ‚Äústrong zeros‚Äù because they 
have higher threshold voltage compared to the original zero 
bits (weak zeros) in the data. Thus, careful analysis of the an-
alog threshold voltage of the memory cells in a scrubbed page 
will reveal the original data. 
Contribution: Our key contributions in this paper are as fol-
lows: 
1)  We demonstrate that data is partially or fully recov-
erable from ‚Äúscrubbing‚Äù based deleted page. We use 
partial erase operation on a ‚Äúscrubbed‚Äù page to re-
cover the deleted data.  
2)  We find that fundamental data retention (or charge 
loss)  characteristics  of  flash  cells  should  be  taken 
into account during ‚Äúscrubbing‚Äù to ensure true dele-
tion of data.  
3)  We propose a new analog ‚Äúscrubbing‚Äù technique in 
order to make sure data remains unrecoverable after 
deletion.  The  proposed  technique  utilizes  the  time 
difference between write and erase operation in or-
der to program the erased bits. This  will  minimize 
the threshold voltage differences among the cells in 
the erased page.  
2. Background 
In  this  section,  we  will  describe  the  fundamentals  of  flash 
memory cell, its operation, and NAND flash system design. 
2.1 Flash Memory Organization and Operations 
Flash Cell:  Figure 1  (a)  shows  the device  structure of  a 
flash memory cell, which is essentially made of floating gate 
MOSFET (Metal Oxide Semiconductor Field Effect Transis-
tor). Electrons placed on a floating gate are trapped because 
the floating gate is isolated electrically from the control gate 
and the transistor channel by blocking oxide and tunnel oxide 
respectively. Thus, a flash memory cell stores information in 
the form of charges (electrons) for an extended period of time 
without requiring any power supply. 
NAND Array: Flash memory is organized as two-dimen-
sional  arrays  of  floating  gate  transistors.  A  number  of  cells 
connected  in  series,  in  a  column,  form  a  string  (see  Figure 
1(b)), which is electrically connected to the metal bit line at 
one  end  and  grounded  at  the  other  end.    Cells  in  a  row  are 
electrically connected through a metal Word Line (WL) and 
constitute a page. The size of a page varies from 2-16K byte 
depending on manufacturer. There can be multiple pages per 
metal  wordline  depending  on  the  storage  technology.  The 
number of bits per cell depends on the type of flash chip like 
SLC  (single-level  cell  or  1  bit/cell),  MLC  (multi-level  cell, 
2bits/cell) etc.  
Threshold Voltage  Distribution: The  threshold  voltage 
(ùëâùë°) of a flash memory cell varies in analog-way depending on 
the amount of charge on the floating gate. Due to process var-
iation,  there  is  a  cell-to-cell  difference  in  threshold  voltage, 
even though the cells are at programmed or erase state. Thus, 
program or erase state does not represent a single value of ùëâùë°. 
Instead,  each  state  is  represented  by  a ùëâùë°-distribution.  Flash 
manufacturer generally keep enough voltage margin between 
the erase state ùëâùë° and the program state ùëâùë° so that they can be 
1400    29th USENIX Security Symposium
USENIX Association
WL0WL1WL2WL NSelect GateSelect GateBit Line1 block1 cell = 2 bit (MLC)Source Line1 page# of bitsThreshold Voltage (V)VREFProgrammed state(Bit ‚Äú0‚Äù)Erase state(Bit ‚Äú1‚Äù)Poly-SiChannelSourceTunnel OxideFloating Gate----------Blocking OxideDrainControl GateWordline(WL)(a)(b)(c)Figure 2: (a) The architecture of a flash-based storage system. (b) File system overview of storage system. 
digitized accurately with a single reference voltage. Interest-
ingly, the ùëâùë° distribution can be measured with standard digital 
interface  by  measuring  bit  error  rate  with  shifted  reference 
read level (Read Retry operation). The detailed ùëâùë°  measure-
ment procedure is discussed by Cai et al [2].  
Memory Operation: Flash memory offers three basic op-
erations:  erase, program, and read.  Among  the program  and 
read,  operations  take  place  on  a  page  by  page  basis,  while 
erase operation takes place on a block by block basis. During 
a  program  operation,  a  high  voltage  is  applied  on  the  WL 
which acts as a control gate of the MOSFET and attracts chan-
nel electrons into the floating gate by Fowler-Nordheim tun-
neling  through  the  tunnel  oxide.  These  trapped  (negative) 
electrons  increase  the  threshold  voltage  of  the  transistor.  In 
erase operation, these trapped charges are removed from the 
floating gate by the application of high positive voltage on the 
substrate and the control gate is grounded. The erase state of 
flash  cell  represents  logic  ‚Äú1‚Äù.  The  programmed  state  has 
higher  threshold  voltage  due  to  the  presence  of  negative 
charges and it represents logic ‚Äú0‚Äù. Read operation involves 
sensing the threshold voltage of the flash cell by monitoring 
the current conduction. During a read operation, logic ‚Äú0‚Äù & 
‚Äú1‚Äù are sensed by applying an intermediate (or reference) volt-
age  to  the  control  gate,  which  is  less  than  the  programmed 
threshold voltage. If the cell does not conduct current at the 
reference voltage, it is treated as a programmed cell or logic 
state ‚Äú0‚Äù. If the channel conducts current at the reference volt-
age, then the flash cell is considered in erase state and repre-
sents logic state ‚Äú1‚Äù.  
2.2 Flash Translation Layer (FTL) 
In  order  to  efficiently  manage  the  NAND  array‚Äôs  special 
characteristics, a firmware layer called flash translation layer 
(FTL) [3]‚Äì[5] is typically used by the storage system which 
interfaces the host file system with the raw NAND memory. 
FTL provides a block access interface to the host file system 
by mapping the logical addresses in block layer to physical 
addresses  in  NAND  flash.  In  addition,  FTL  contains  firm-
ware module for garbage collection and wear leveling[3]‚Äì[5]. 
The garbage collection module periodically reclaims all the 