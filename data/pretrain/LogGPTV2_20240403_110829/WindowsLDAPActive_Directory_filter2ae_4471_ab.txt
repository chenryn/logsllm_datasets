类有三种类型
    * 结构类（Structural）  
结构类规定了对象实例的基本属性，每个条目属于且仅属于一个结构型对象类。前面说过域内每个条目都是类的实例，这个类必须是结构类。只有结构类才有实例。比如说前面说过的Computer类。
    * 抽象类(Abstract)  
抽象类型是结构类或其他抽象类的父类，它将对象属性中公共的部分组织在一起。跟面对对象里面的抽象方法一样，他没有实例，只能充当结构类或者抽象类的父类。比如说top
类。注意抽象类只能从另一个抽象类继承。
    * 辅助类(Auxiliary）  
辅助类型规定了对象实体的扩展属性。虽然每个条目只属于一个结构型对象类，但可以同时属于多个辅助型对象类。注意辅助类不能从结构类继承
接下来让我们结合Schema NC中的类来具体理解下LDAP 中的类和继承
### 2.Schema NC中的类
如果我们要查看Schema NC的内容，除了传统使用LDAP编辑器查看
比如说ADExplorer
还可以使用微软自带的Active Directory Schema
默认没有注册，运行regsvr32 schmmgmt.dll注册该dll
然后在mmc里面添加即可
域内每个条目都是类的实例。所有的类都存储在Schema NC里面，是Schema NC的一个条目。
我们以一个实例来说明。前面说过条目CN=WIN7,CN=Computers,DC=test,DC=local是类Computer的实例。那么类Computer就存储在Schema
NC里面，是Schema NC的一个条目CN=Computer,CN=Schema,CN=Configuration,DC=test,DC=local。
我们下面来具体分析下这个条目的一些通用属性，希望大家对类条目有个大概的认识。
（1）前面说过每个条目都是类的实例，而类是是Schema NC的一个条目。因此类条目也是一个类的实例，这个类是classSchema(CN=Class-Schema,CN=Schema,CN=Configuration,DC=test,DC=local)。所有的类条目都是classSchema类的实例。  
我们可以在objectclass属性里面看到。
（2）名称是Computer(通过adminDescription，adminDisplayName，cn，name属性)
（3）defaultSecurityDescriptor这个属性表明，如果在创建Computer这个类的实例的时候，如果没指定ACL，就用这个属性的值作为实例的ACL。在实例的nTSecurityDescriptor里面。
注意跟nTSecurityDescriptor区分开来，nTSecurityDescriptor是这个条目的ACL，而defaultSecurityDescriptor是实例默认的ACL。举个例子。  
CN=Computer,CN=Schema,CN=Configuration,DC=test,DC=local
有两个属性nTSecurityDescriptor，defaultSecurityDescriptor。nTSecurityDescriptor是这条条目的ACL。  
那Computer的实例化对象CN=WIN7,CN=Computers,DC=test,DC=local，如果在创建的时候，没有指定ACL，那么他的nTSecurityDescriptor的值就是CN=Computer,CN=Schema,CN=Configuration,DC=test,DC=local
的属性defaultSecurityDescriptor的值。
（4）属性rDNAttID表明通过LDAP连接到类的实例的时候，使用的两个字母的前缀用过是cn。  
所以他的实例CN=WIN7,CN=Computers,DC=test,DC=local,使用的前缀是cn。  
这个我们再举个例子  
比如条目OU=Domain Controllers,DC=test,DC=locals 是一个ou，它是类organizationalUnit的实例
我们查看类organizationalUnit对应的条目CN=Organizational-Unit,CN=Schema,CN=Configuration,DC=test,DC=local,就可以看到
所以对于他的一个实例，他的前缀是OU，OU=Domain Controllers
（5）属性objectClassCategory为1说明他是一个结构类
  * 1 代表是个结构类
  * 2 代表是个抽象类
  * 3代表是个辅助类
（6）属性subClassOf 表明他的父类是user类
（7）systemPossSuperior约束了他的实例只能创建在这三个类container,organizationalUnit,domainDNS的实例底下。
比如computer类的一个实例，CN=WIN7,CN=Computers,DC=test,DC=local，它位于容器CN=Computers,DC=test,DC=local底下，而CN=Computers,DC=test,DC=local是container的实例，container在systemPossSuperior底下，这不违反这个约束。
（8）最后一点也是最核心的，我们来讲下他的实例是怎么获取到基本属性的。
  * 这个类没有属性systemMustContain和MustContain，因此强制属性
  * 这个类属性systemMayContain和MayContain是可选的属性
上面这四个属性里面的属性集合是这个类独有的属性集合，我们之前说过，类是可继承的。因此一个类的属性集合里面除了前面的四个属性里面的值，还可能来自父类以及辅助类。
  * 辅助类的属性字段是systemAuxiliaryClass,这里面的computer类没有辅助类
  * 父类 可以通过subClassOf查看，这里是computer类的父类是user类。然后网上递归，user类查看那四个属性，以及他的辅助类，父类。直到top类。
所以最后我们用Active DirectorySchema 查看的时候，就会看到属性的类型是可选还是强制，源类是哪个类。
### 3.Schema NC中的属性
Schema NC除了定义了Active Directory中使用的类，还定义了Active Directory中使用的属性。
关于属性，我们之前接触的够多了。这里不再多做解释。
每个属性都是一个条目，是类attributeSchema的实例
在域内的所有属性必须在这里定义，而这里的条目，最主要的是限定了属性的语法定义。其实就是数据类型，比如 Boolean类型，Integer类型等。
以CN=Object-Sid,CN=Schema,CN=Configuration,DC=test,DC=local为例。
他的attributeSyntax是2.5.5.17
oMSyntax是
通过查表
关于各种语法定义在这里不再这里一个个介绍，过于抽象，将在后面文章里面实际的案例根据需要详细讲解。
## 0x06 搜索Active Directory
通过查询目录，可以直接收集到要求的数据。查询目录需要指定两个要素
  * BaseDN
  * 过滤规则
### BaseDN
BaseDN指定了这棵树的根。
比如指定BaseDN为DC=test.DC=local就是以DC=test.DC=local为根往下搜索
BaseDN为CN=Users,DC=test.DC=local就是以CN=Users,DC=test.DC=local为根往下搜索
### 过滤规则
LDAP 过滤规则相对简单，很方便入手
LDAP 搜索过滤器语法有以下子集：
  * 用与号 (&) 表示的 AND 运算符。
  * 用竖线 (|) 表示的 OR 运算符。
  * 用感叹号 (!) 表示的 NOT 运算符。
  * 用名称和值表达式的等号 (=) 表示的相等比较。
  * 用名称和值表达式中值的开头或结尾处的星号 (*) 表示的通配符。
下面举几个例子
  * (uid=testuser)  
匹配 uid 属性为testuser的所有对象
  * (uid=test*)  
匹配 uid 属性以test开头的所有对象
  * (!(uid=test*))  
匹配 uid 属性不以test开头的所有对象
  * (&(department=1234)(city=Paris))  
匹配 department 属性为1234且city属性为Paris的所有对象
  * (|(department=1234)(department=56*))  
匹配 department 属性的值刚好为1234或者以56开头的所有对象。
一个需要注意的点就是运算符是放在前面的，跟我们之前常规思维的放在中间不一样
关于查询目录还有一些高级点的用法，比如 LDAP 控件，位掩码等。这里不一一列举，将在后面实际用到的时候再列举。
## 0x07 相关工具介绍
下面介绍一些能够访问Active Directory的工具
### ADSI 编辑器
微软自带，输入adsiedit.msc可访问
### LDP
微软自带，输入ldp可访问
### ADExplorer
sysinternals系列的工具,相较于ADSI 编辑器，更方便
### The LDAP Explorer
付费版的神器，特别强大，比ADExplorer都强大，自己感受下
### ldapsearch
openldap里面的工具，在*nix里面比较常用
导出的格式为LDIF格式，有人写了个工具支持导出为sqlite文件，然后阅读sqlite文件
### adfind 与 admod
这个是最牛逼的命令行工具了，在域渗透里面的出场率极高，adfind用于查询，admod用于修改。这个系列的主要文章会围绕着这两个工具展开。
## 0x09 引用
  * LDAP概念和原理介绍
  * LDAP基础概念
  * Active Directory Domain Services
  * LDAP search filter expressions
  * Active Directory: Designing, Deploying, and Running Active Directory Fifth Edition