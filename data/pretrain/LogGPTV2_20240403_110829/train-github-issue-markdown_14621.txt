### Issue Report

**Bug Report?**  
Yes

**Feature Request?**  
No

**BC Break Report?**  
No

**RFC?**  
No

**Symfony Version:**  
2.8+

---

#### Description

When I register a custom expression language function using a class that implements `ExpressionFunctionProviderInterface` and tag it with `security.expression_language_provider`, I am unable to use this function within an `allow_if` expression in my access control configuration.

In my specific case, I have registered the `is_granted` function with a custom provider. Using this function with the authorization checker works as expected:

```php
$authorizationChecker->isGranted(new Expression("is_granted('something') and/or ..."));
```

However, when I attempt to use the same function within the access control configuration, I encounter an error:

```yaml
access_control:
    - { path: ^/, allow_if: "is_granted('some_custom_attribute')" }
```

The error message is as follows:

```
(1/1) SyntaxError
The function "is_granted" does not exist around position 1 for expression `is_granted('some_custom_attribute')`.
--
in Parser.php (line 198)
at Parser->parsePrimaryExpression()
in Parser.php (line 149)
at Parser->getPrimary()
in Parser.php (line 110)
at Parser->parseExpression()
in Parser.php (line 100)
at Parser->parse(object(TokenStream), array('object', 'request', 'roles', 'token', 'trust_resolver', 'user'))
in ExpressionLanguage.php (line 108)
at ExpressionLanguage->parse('is_granted(\'some_custom_attribute\')', array('object', 'request', 'roles', 'token', 'trust_resolver', 'user'))
in SecurityExtension.php (line 671)
at SecurityExtension->createExpression(object(ContainerBuilder), 'is_granted(\'some_custom_attribute\')')
in SecurityExtension.php (line 224)
```

This issue arises because custom function providers are not loaded at all within the `SecurityExtension`. The relevant code can be found here:

[SecurityExtension.php#L741](https://github.com/symfony/symfony/blob/master/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php#L741)

---

By providing a clear and structured report, you make it easier for the Symfony team to understand and address the issue.