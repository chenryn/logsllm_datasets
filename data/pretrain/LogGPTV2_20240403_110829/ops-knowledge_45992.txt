User: 如何使用Ansible进行自动化配置管理？请提供一份Ansible playbook，并解释各个部分的作用。
Assistant: 以配置一个Nginx web服务器为例，以下是一个基本的Ansible playbook：

```
- name: Configure nginx server
  hosts: webserver
  become: true

  tasks:
  - name: Install nginx package
    apt:
      name: nginx
      state: present

  - name: Copy nginx.conf file
    copy:
      src: nginx.conf
      dest: /etc/nginx/nginx.conf
    notify: Restart nginx

  handlers:
  - name: Restart nginx
    service:
      name: nginx
      state: restarted
```

解释：

- `name`：定义整个Playbook的名称。

- `hosts`：定义要操作的主机组，此处为`webserver`。

- `become`：使用sudo权限执行这个Playbook。

- `tasks`：定义Playbook中要执行的任务列表。

- `apt`：使用`apt`模块安装Nginx软件包。

- `copy`：使用`copy`模块将本地的`nginx.conf`文件拷贝到目标主机的`/etc/nginx/nginx.conf`文件中。

- `notify`：在`copy`任务执行成功后，触发`Restart nginx`处理程序。

- `handlers`：包含处理程序列表，用于在任务成功或不成功时执行一个或多个操作。

- `service`：使用`service`模块重新启动Nginx服务。

此Playbook的主要作用是在`webserver`主机上安装Nginx软件包，并将本地的`nginx.conf`文件拷贝到目标主机上指定的位置，然后重新启动Nginx服务，以实现Web服务器的配置。