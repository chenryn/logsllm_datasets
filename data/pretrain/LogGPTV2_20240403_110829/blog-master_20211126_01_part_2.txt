- 归属和爱的需要(社交、破圈诉求): 通过开源的免费用户获得了更大的产品圈子、  
- 尊重的需要(品牌诉求): 品牌影响力、  
- 认知需求(产品边界诉求): 获得更多正反馈(更多人锤炼你的产品, 使得产品更加稳定. 他们可能是代码贡献者, 使得一个产品全球共建, 起到滚雪球的效果, 有些垂直领域的功能可能你根本都想不到)   
我又想到一句话: 找到人生的意义, 给这个世界留下一件伟大的作品.  开源可以让一个伟大的作品在这个世界上活得更久.    
4、阿里云做了哪些开源产品, 未来的规划是什么?     
目前开源的两个数据库产品: PolarDB PG, PolarDB X 兼容 MySQL, PostgreSQL的云原生+分布式+开源数据库.    
为什么兼容MySQL和PostgreSQL这两个开源产品? 为什么是云原生+分布式+开源?   
这里就涉及到战略杠杆的问题:    
10倍的创新红利或者杠杆或机会点来自什么?    
- 1、开源数据库pg+mysql超过商业数据库10倍速发展. 吸收MySQL和PG的SQL语言红利.    
- 2、2025全球52%数据库将部署在云基础设施上.   
- 3、单机能力提升近乎停滞(频率、单核性能、核数), 然而业务需求发展依旧线性增长.   
未来的规划是什么?   
产品方面:     
- PolarDB PG 会全开源, 与云服务PolarDB保持代码同步. 预计明年会完成.   
- PolarDB X 已经和公共云服务代码完全一致, 欢迎使用.   
- 今年还会开源多模数据库Lindrom.   
社区方面:   
- 未来会建立理事会、技术管理委员会、SIG兴趣小组、用户组, 欢迎一起来共建PolarDB开源数据库社区.   
- 欢迎关注开源项目的 github : https://github.com/ApsaraDB  
## 3、全民开发者, 低代码  
1、什么是low code?  我对low code的理解:   
- 每个人都有想象力, 但是要把想象力转换为作品, 我们需要依赖专业的工具, 人们一直在努力降低创作门槛.    
- 低代码我的理解是软件行业的乐高.    
- 未来甚至可以和脑机结合起来, 再次降低从想象力到作品的门槛.  
- 我非常认同low code是一次破界创新, 程序就是个功能组合的作品, 为什么创作程序一定要写代码. 同样的破界创新例子: 例如乔布斯重新发明手机: 为什么手机一定要键盘输入, 为什么手机只能打电话. 触屏和智能重新发明了手机.   例如马斯克的脑机结合芯片,为什么人和电脑交互一定要通过触摸屏或键盘, 直接脑机结合互动.   
2、以钉钉的lcdp为例, 为什么钉钉LCDP又火了?   
2\.1、第一个关键词: 变化  
疫情加速了更多行业的数字化, 例如教育、工业、... 但是每个行业对IT系统的诉求都不一样, 没有一个产品可以包打天下.   
- 疫情之下, 要求快速的进入数字化, 怎么满足他们的诉求?   
- 表面上用户有很强的对系统的自我控制的欲望, 实际上这种欲望来自于什么? 还是需求无法满足.   
做互联网的同学都知道, 互联网业务牛逼的地方是高并发, 例如双十一, 2020 已经达到了60万笔每秒. 很多人可能认为ToB是小儿科.  
然而, ToB的业务可怕的是一年365个需求. 钉钉平均一周的发布1.5次, app store商店天天都在审核. 为什么需求这么多变?   
- ToB用户 不等于 客户, 使用者,决策者,买单者是三拨人, 各有各的需求.   
- ToB的产品服务周期长, 在过程中会根据岗位人员变化、组织架构变化, 市场变化等调整公司的战略,经营策略等, 对数字化系统的要求也在不断变化.   
    - CEO CTO CFO CxO 思想迭代快, 需求变化快.    
2\.2、第二个关键词: 传播、网络密度    
ToB产品是线性增长的, ToC产品通常是指数增长, 如果要提高ToB产品的增长斜率, 要产生自传播能力.   
怎么提高传播能力呢? 提高网络密度.  
什么是网络密度?   
C端的例子:   
- 买家10亿, 卖家1000万, 每个买家都可以去每个卖家买东西, 网络密度就是笛卡尔积, 一亿亿  
传统ToB产品的网络密度如何定义?    
- 原来的ToB产品是企业内使用, 企业的组织边界就是这个ToB产品的边界.   
- 网络密度在企业内, 例如人力资源系统, 财务系统, 销售管理系统, 投资系统, 策划系统等. 是伞状的密度, 内部连接很频繁, 但是与其他企业完全隔离.   
- 定义: 关系丰富度*功能丰富度.  协同关系*单品     
    - 例如关系的丰富度:   
    - 业务关系. 连接器(API). 销帮帮, BOSS管账 多个业务系统产生连接, 老板看帐更加方便.   
    - 好友关系.   
提高网络密度要解决什么问题? 打破孤岛.   
怎么打破孤岛?    
- LCDP, 用户可以低门槛, 高强度的参与开发, 实现产品自运营, 基于LCDP提供的连接器打通各个层面的数据, 形成更高的网络密度.    
3、SaaS催生了low code的实际落地. 传统软件部署形态的发布、排查、需求迭代都非常慢, 在传统部署形态上low code无法快速和母体(软件)本身形成反馈(例如需要母体的迭代才能解决的问题). SaaS完美的解决了这个问题, low code开发商与SaaS(母体)可以快速反馈,快速迭代.    
4、LCDP还能和硬件结合起来, 突破只做母体的软件插件的限制.   
5、一些LCDP的例子.   
- 教育(直播, 布置作业, 作业打卡, 跳绳打卡),   
- 制造业.   
    - 某公司, 太阳能的设备巡检抢单系统, 发现故障发到钉钉, 工程师可以进行抢单, 抢单后5分钟内解决就算他的业绩.   
    - moka, 招聘系统.    
    - 方便面招聘, 机器人招聘第一轮.   
    - 钉工牌, 食堂刷卡机结合. 吃饭时拿点券, 享受企业福利.    
    - 制造业, 钉钉报工.   
    - 接龙, 问卷, OKR, ... ...   
## 4、答疑.    
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [类似Oracle RAC架构的PostgreSQL已开源: 阿里云PolarDB for PostgreSQL云原生分布式开源数据库!](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")