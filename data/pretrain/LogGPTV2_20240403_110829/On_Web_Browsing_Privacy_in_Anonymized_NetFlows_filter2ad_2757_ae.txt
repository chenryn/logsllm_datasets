cnn.com and nytimes.com, the front pages of both sites
have constantly changing news items, a signiﬁcant num-
ber of advertisements, and extensive content delivery
networks. One would expect that since the web pages
change so rapidly, that our accuracy in classifying them
would be comparable. Instead, we ﬁnd that we can de-
tect nearly half of the occurrences of cnn.com in live
network data, while we never successfully detect ny-
times.com. In Table 4, we see that both web pages have
similar means and standard deviations for both ﬂow size
and number of physical servers. This similarity is likely
due to the nature of the content these two sites provide.
However, the number of ﬂows per web browsing ses-
sion for nytimes.com is nearly double that of cnn.com.
Moreover, nytimes.com exhibits high variability in the
number of ﬂows it generates, while cnn.com seems to
use a fairly stable number of ﬂows in all web brows-
ing sessions. This variability makes it difﬁcult to con-
struct high-quality kernel density estimates for the logi-
cal servers that support nytimes.com, so our detector nec-
essarily performs poorly on it.
The metrics
Another interesting result from our live network eval-
uation is that some web page models appear to match
well with almost all other pages, and therefore cause an
excessive amount of false detections. For instance, Table
3 shows that yahoo.com has an exceptionally low false
detection rate among all web pages in our live trafﬁc,
while google.com has one of the highest false detection
rates. Both web pages, however, provide adequate true
detection rates. In Table 5, we see that google.com and
yahoo.com have very distinct behaviors for each of the
features.
show that
google.com transfers very little data, that there is almost
always only one physical server in the web browsing ses-
sion, and that there are normally only one or two ﬂows.
On the other hand, yahoo.com serves signiﬁcantly more
data, has a substantial number of physical servers, and
causes the browser to open several ﬂows per web brows-
ing session. The web browsing sessions for google.com
and yahoo.com both exhibit very little variability, though
yahoo.com has more variability in its ﬂow sizes due to
its dynamic nature. Since both web pages have relatively
low variability for all three features, they are both fairly
easy for our techniques to detect, which corroborates
our earlier claim that cnn.com is easy to detect because
three features
for our
of the relative stability of its features. However, since
google.com is so simplistic, with only a single physical
server and very few ﬂows on average, its BBN and KDE
models have very few constraints that must be met before
the detector ﬂags a match. Hence, many physical servers
in a given NetFlow log could easily satisfy these require-
ments, and this causes the detector to produce an exces-
sive number of false detection. By contrast, the models
for yahoo.com have enough different logical servers and
enough ﬂows per session that it is difﬁcult for any other
site to ﬁt the full description that is captured in the BBN
and KDE models.
threats
realistic
Discussion With
to
to
regard
anonymized network data,
these results show that
there are certain web pages whose behavior is so
unpredictable that they may be very difﬁcult to detect in
practice. Also, an attacker has little chance of accurately
identifying small, simple web pages with our techniques.
Complex web pages containing large content delivery
networks, on the other hand, may allow an attacker
to identify these pages within anonymized ﬂow traces
with low false detection rates. Finally, we have found
that an attacker must consider the effects of locality
on the training data used to create the target web page
models, such as the presence of private caching servers
or proxies. These locality effects adversely inﬂuence the
true detection rates, but they might be overcome through
diversiﬁcation of the training data from several distinct
locations.
It is unclear how this diversiﬁcation would
affect the performance of our techniques.
When evaluating the threat that our web page identiﬁ-
cation attack poses to privacy, it is prudent to consider the
information an attacker can reliably gain, possible practi-
cal countermeasures that might hamper such attacks, and
the overarching goals of network data anonymization.
With the techniques presented in this paper, an attacker
would be able to create proﬁles for speciﬁc web pages of
interest, and determine whether or not at least one user
has visited that page, as long as those target web pages
were of sufﬁcient complexity. While the attacker will
not be able to pinpoint which speciﬁc user browsed to
the page in question with the technique presented in this
paper, such information leakage may still be worrisome
to some data publishers (e.g., web browsing to several
risqu´e web pages).
There are, however, practical concerns that may af-
fect the attacker’s success aside from those described in
this paper, such as the use of ad blocking software and
web accelerators that dramatically alter the proﬁles of
web pages. These web browsing tools could be used to
make the attacker’s job of building robust proﬁles more
difﬁcult, as the attacker would not only have to adjust
for locality effects, but also for the effects of the particu-
350
16th USENIX Security Symposium
USENIX Association
Feature
Number of Flows
Number of Physical Servers
Flow Size (KB)
cnn.com
nytimes.com
Mean
18.44
12.79
568.20
Std. Dev. Mean
30.69
15.32
692.87
4.21
2.27
286.95
Std. Dev.
10.62
4.14
298.73
Table 4: Comparison of mean and std. deviation for features of cnn.com and nytimes.com
Feature
Number of Flows
Number of Physical Servers
Flow Size (KB)
google.com
yahoo.com
Mean
1.73
1.03
13.64
Std. Dev. Mean
9.02
5.25
219.51
0.56
0.17
10.37
Std. Dev.
3.02
1.79
187.26
Table 5: Comparison of mean and std. deviation for features of google.com and yahoo.com
lar ad blocking software or web accelerators. Moreover,
while our evaluation has provided evidence that certain
classes of web pages are identiﬁable despite the use of
anonymization techniques, it is unclear how well the true
detection and false detection rates scale with a larger tar-
get web page set. Therefore, our techniques appear to be
of practical concern insofar as the attacker can approxi-
mate the behavior of the browsers and network environ-
ment used to download the web page.
8 Conclusion
In this paper, we perform an in-depth analysis of the
threats that publishing anonymized NetFlow traces poses
to the privacy of web browsing behaviors. Moreover, we
believe our analysis is the ﬁrst that addresses a number
of challenges to uncovering browsing behavior present
in real network trafﬁc. These challenges include the ef-
fects of network locality on the adversary’s ability to
build proﬁles of client browsing behavior; difﬁculties
in unambiguously parsing trafﬁc to identify the ﬂows
that constitute a web page retrieval; and the effects of
browser caching, content distribution networks, dynamic
web pages, and HTTP pipelining. In order to accommo-
date for these issues, we adapt machine learning tech-
niques to our problem in novel ways.
With regard to realistic threats to anonymized NetFlow
data, our results show that there are certain web pages
whose behavior is so variable that they may be very dif-
ﬁcult to detect in practice. Also, our techniques offer an
attacker little hope of accurately identifying small, sim-
ple web pages with a low false detection rate. However,
complex web pages appear to pose a threat to privacy.
Finally, our results show that an attacker must consider
the effects of locality on the training data used to create
the target web page models.
Our results and analysis seem to contradict the widely
held belief that small, static web pages are the easiest
target for identiﬁcation. This contradiction can be ex-
plained by the distinct differences between closed world
testing and the realities of identifying web pages in the
wild, such as browser caching behavior and web brows-
ing session parsing. On the whole, we believe our study
shows that a non-trivial amount of information about
web browsing behaviors is leaked in anonymized net-
work data. Indeed, our analysis has demonstrated that
anonymization offers less privacy to web browsing traf-
ﬁc than once thought, and suggests that a class of web
pages can be detected in a ﬂow trace by a determined
attacker.
Acknowledgments
The authors would like to thank Angelos Keromytis,
Gabriela Cretu, and Salvatore Stolfo for access to net-
work trace data used in early work on this topic. Also,
thanks to our shepherd, Paul Van Oorschot, for provid-
ing insightful comments and guidance. This work was
supported in part by NSF grant CNS-0546350.
Notes
1Though machine learning techniques are certainly not the only
method for handling variability in web pages, their application in this
context seems to be intuitive.
2Note that even if this assumption did not hold there are still tech-
niques that can be used to infer the presence of HTTP trafﬁc (e.g, based
on trafﬁc-mix characteristics).
References
[1] BISSIAS, G., LIBERATORE, M., JENSEN, D., AND LEVINE,
B. N. Privacy Vulnerabilities in Encrypted HTTP Streams. In
Proceedings of the 5th International Workshop on Privacy En-
hancing Technologies (May 2005), pp. 1–11.
USENIX Association
16th USENIX Security Symposium
351
[2] BREKNE, T., AND ˚ARNES, A. Circumventing IP-Address
Pseudonymization. In Proceedings of the 3rd IASTED Interna-
tional Conference on Communications and Computer Networks
(October 2005).
[3] BREKNE, T., ˚ARNES, A., AND ØSLEBØ, A. Anonymization of
IP Trafﬁc Monitoring Data – Attacks on Two Preﬁx-preserving
Anonymization Schemes and Some Proposed Remedies. In Pro-
ceedings of the Workshop on Privacy Enhancing Technologies
(May 2005), pp. 179–196.
[4] Cisco IOS NetFlow.
netflow.
http://www.cisco.com/go/
[5] COLLINS, M. P., AND REITER, M. K. Finding Peer-to-Peer
File-Sharing Using Coarse Network Behaviors. In Proceedings
of the 11th European Symposium on Research in Computer Se-
curity (September 2006), pp. 1–17.
[6] COULL, S., WRIGHT, C., MONROSE, F., COLLINS, M., AND
REITER, M. Playing Devil’s Advocate: Inferring Sensitive Infor-
mation from Anonymized Network Traces. In Proceedings of the
14th Annual Network and Distributed System Security Sympo-
sium (February 2007). Available at: http://www.cs.jhu.
edu/˜fabian/NDSS07.pdf.
[7] CRAWDAD: A Community Resource for Archiving Wireless
Data at Dartmouth. http://crawdad.cs.dartmouth.
edu.
[8] DANEZIS, G. Trafﬁc Analysis of the HTTP Protocol over TLS.
Unpublished manuscript available at http://homes.esat.
kuleuven.be/˜gdanezis/TLSanon.pdf as of February
1, 2007.
[9] FAN, J., XU, J., AMMAR, M., AND MOON, S. Preﬁx-preserving
IP Address Anonymization: Measurement-based Security Evalu-
ation and a New Cryptography-based Scheme. Computer Net-
works 46, 2 (October 2004), 263–272.
[10] GUPTA, P., AND MCKEOWN, N. Packet Classiﬁcation Using
In Proceedings of Hot Inter-
Hierarchical Intelligent Cuttings.
connects VII (1999), pp. 147–160.
[11] HINTZ, A. Fingerprinting Websites Using Trafﬁc Analysis. In
Proceedings of the 2nd International Workshop on Privacy En-
hancing Technologies (April 2003), pp. 171–178.
[12] KARAGIANNIS, T., PAPAGIANNAKI, K., AND FALOUTSOS, M.
BLINC: Multilevel Trafﬁc Classiﬁcation in the Dark. In Proceed-
ings of ACM SIGCOMM (August 2005), pp. 229–240.
[13] KIM, M., KANG, H., AND HONG, J. Towards Peer-to-Peer Traf-
ﬁc Analysis Using Flows. In Self-Managing Distributed Systems,
14th IFIP/IEEE International Workshop on Distributed Systems:
Operations and Management (October 2003), pp. 55–67.
[14] KOUKIS, D., ANTONATOS, S., AND ANAGNOSTAKIS, K. On
the Privacy Risks of Publishing Anonymized IP Network Traces.
In Proceedings of Communications and Multimedia Security (Oc-
tober 2006), pp. 22–32.
[15] KREIBICH, C., AND CROWCROFT, J. Efﬁcient Sequence Align-
ment of Network Trafﬁc. In Proceedings of the 6th ACM SIG-
COMM Conference on Internet Measurement (October 2006),
pp. 307–312.
[16] LEI, J. Z., AND GHORBANI, A. A. The Reconstruction of the
Interleaved Sessions from a Server Log. In Proceedings of the
17th Canadian Conference on AI (May 2004), pp. 133–145.
[17] LI, Y., SLAGELL, A., LUO, K., AND YURCIK, W. CANINE:
A Combined Conversion and Anonymization Tool for Process-
ing NetFlows for Security. In Proceedings of Tenth International
Conference on Telecommunication Systems (2005).
[18] LIBERATORE, M., AND LEVINE, B. Inferring the Source of En-
crypted HTTP Connections. In Proceedings of the ACM confer-
ence on Computer and Communications Security (October 2006),
pp. 255–263.
[19] MARTIN, D., AND SCHULMAN, A. Deanonymizing users of
In Proceedings of the 11th
the safeweb anonymizing service.
USENIX Security Symposium (August 2002), pp. 123–137.
[20] NEAPOLITAN, R. Probabilistic Reasoning in Expert Systems:
Theory and Algorithms. John Wiley & Sons, Inc., 1989.
[21] NICKLESS, W., NAVARRO, J., AND WINKLER, L. Combining
CISCO NetFlow Exports with Relational Database Technology
for Usage Statistics, Intrusion Detection, and Network Forensics.
In Proceedings of the 14th Large Systems Administration Confer-
ence (LISA) (December 2000), pp. 285–290.
[22] ØVERLIER, L., BREKNE, T., AND ˚ARNES, A. Non-Expanding
Transaction Speciﬁc Pseudonymization for IP Trafﬁc Monitor-
ing. In Proceedings of the 4th International Conference on Cryp-
tology and Network Security (December 2005), pp. 261–273.
[23] PANG, R., ALLMAN, M., PAXSON, V., AND LEE, J. The Devil
and Packet Trace Anonymization. ACM Computer Communica-
tion Review 36, 1 (January 2006), 29–38.
[24] PANG, R., AND PAXSON, V. A High-Level Environment for
In Proceed-
Packet Trace Anonymization and Transformation.
ings of the ACM Special Interest Group in Communications (SIG-
COM) Conference (August 2003), pp. 339–351.
[25] PETERSON, L., ANDERSON, T., CULLER, D., AND ROSCOE,
T. A Blueprint for Introducing Disruptive Technology into the
Internet. SIGCOMM Computer Communication Reviews 33, 1
(January 2003), 5964.
[26] PREDICT: Protected Repository for the Defense of Infrastructure
Against Cyber Threats. http://www.predict.org.
[27] SCOTT, D. Multivariate Density Estimation: Theory, Practice,
and Visualization. John Wiley & Sons, New York, 1992.
[28] SILVERMAN, B. Density Estimation for Statistics and Data Anal-
ysis. Chapman & Hall/CRC, 1986.
[29] SINGH, S., BABOESCU, F., VARGHESE, G., AND WANG, J.
In Pro-
Packet Classiﬁcation Using Multidimensional Cutting.
ceedings of ACM SIGCOMM (August 2003), pp. 213–224.
[30] SLAGELL, A., LI, Y., AND LUO, K. Sharing Network Logs for
Computer Forensics: A New Tool for the Anonymization of Net-
Flow Records. In Proceedings of Computer Network Forensics
Research Workshop (September 2005).
[31] SPILIOPOULOU, M., MOBASHER, B., BERENDT, B., AND
NAKAGAWA, M. A Framework for the Evaluation of Session
INFORMS
Reconstruction Heuristics in Web-Usage Analysis.
Journal on Computing 15, 2 (April 2003), 171–190.
[32] SUN, Q., SIMON, D. R., WANG, Y., RUSSELL, W., PADMAN-
ABHAN, V. N., AND QIU, L. Statistical Identiﬁcation of En-
crypted Web Browsing Trafﬁc. In Proceedings of the IEEE Sym-
posium on Security and Privacy (May 2002), pp. 19–31.
[33] XIE, Y., SEKAR, V., MALTZ, D., REITER, M. K., AND
ZHANG, H. Worm Origin Identiﬁcation Using Random Moon-
walks. In Proceedings of the 2005 IEEE Symposium on Security
and Privacy (May 2005), pp. 242–256.
352
16th USENIX Security Symposium
USENIX Association