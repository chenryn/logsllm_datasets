### Enhancing Shared-World Intuition through Publicly Visible Content

**Source:**
- HoloLens Developer Guidelines [43]
- HoloLens Hologram Stability Guidelines [42]
- Meta Developer Guidelines [40]

**Table 5: Summary of ShareAR’s Compatibility with Existing Multi-User AR Design Guidelines**

| Guideline Source | Support? |
|------------------|----------|
| HoloLens Developer Guidelines [43] | (cid:88)* |
| HoloLens Hologram Stability Guidelines [42] | (cid:88) |
| Meta Developer Guidelines [40] | (cid:88)* |

*For check marks with an asterisk, see Appendix B for additional details.

### Performance Evaluation

#### Basic Profile of Operations
We begin by examining ShareAR's operations with a single pair of users (n = 2) sharing a single object (h = 1). The overall operation completion time ranges from approximately 70 ms to 250 ms, depending on the operation and configuration. This time is primarily influenced by external factors such as network latency and the HoloToolkit Sharing library. The overhead specific to ShareAR is minimal, with Create and Change Permissions operations taking less than 5 ms in the worst case, and all other operations taking less than 1 ms per device.

#### Scaling with the Number of Users
As the number of users increases, the total number of messages scales quadratically. For updates to already-shared objects, the number of messages scales linearly. In terms of timing, all operations under all test conditions took less than 5 ms, with most operations remaining under 1 ms. The overheads are reasonable, especially considering the small additional overhead beyond the corresponding baseline operations.

- **Create and Change Permission:** Scale approximately linearly with the number of users.
- **Other Operations:** Remain approximately constant.

#### Scaling with the Number of Objects
When increasing the number of AR objects, network traffic scales linearly with the number of objects. In terms of timing, all operations took less than 3 ms, often less than 1 ms. These overheads are reasonable, especially when compared to the corresponding baseline operations. The time taken for each operation is approximately constant per object, with some operations showing slight caching benefits.

### Performance Evaluation Summary
From our measurements, we observe that object creation and permission changes are the most computationally expensive operations. However, these operations typically occur infrequently during app usage. The maximum observed operation time was under 5 ms, with most measurements under 1 ms. Given that these measurements were taken on an unoptimized research prototype, further code optimization could reduce performance overhead even more.

### Discussion

#### Future Directions
1. **Execute Permissions:** Future multi-user AR systems may support execute permissions, allowing users to perform predefined actions on another user's object without full edit control.
2. **Asynchronous Sharing:** Our design assumes both users are online during sharing. Future work could explore asynchronous sharing, where objects remain visible even when the owner is offline.
3. **Minimizing Developer Errors:** Developers must be cautious to use ShareAR in a way that supports their app use case. Potential pitfalls include denial-of-service attacks and personal space violations.
4. **Analysis in the Wild:** Future empirical studies should evaluate how developers use ShareAR and how users respond to its features.
5. **Location Privacy:** Multi-user AR apps require location sharing, which may raise privacy concerns. Future work should explore this further.
6. **Inherently Conflicting Goals:** There may be fundamental tensions in secure and private content sharing, such as conflicting views of shared spaces.

### Related Work
While AR has a long history, the computer security community has only recently begun examining it. Prior efforts have focused on single-user AR security and privacy. Literature on multi-user AR security and privacy is emerging, with some works proposing methods for secure device pairing and specific interaction modalities. Our work is the first to systematically and broadly consider the design space for AR sharing control.

### Conclusion
Multi-user AR technologies hold great promise but also raise security and privacy risks. Our work presents the design of a sharing control module, ShareAR, which addresses key challenges in multi-user AR. Our prototype demonstrates the feasibility of our design, and our evaluation suggests it meets our design goals with minimal performance overhead. By addressing these issues now, we aim to secure the future of multi-user AR applications.

### Acknowledgments
We thank Ivan Evtimov, Earlence Fernandes, Kiron Lebeck, Lucy Simko, and Anna Kornfeld Simpson for valuable discussions and feedback. We also thank James Fogarty for his advice on tabletop interface related work. This work was supported in part by the National Science Foundation and the Washington Research Foundation.

### References
[1] J. Alexander. "Ugandan Knuckles" is overtaking VRChat, Jan. 2018. https://www.polygon.com/2018/1/8/16863932/ugandan-knuckles-meme-vrchat.
[2] R. Alp Guler, N. Neverova, and I. Kokkinos. DensePose: Dense human pose estimation in the wild. In CVPR, 2018.
[3] E. Alvarez. Facebook’s next big augmented reality push is multiplayer games, Sept. 2018. https://www.engadget.com/2018/09/07/facebook-ar-games-multiplayer-first-look/.
[4] ARCore. https://developers.google.com/ar/.
[5] ARKit. https://developer.apple.com/arkit/.
[6] AR Studio. https://developers.facebook.com/products/camera-effects/ar-studio/.
[7] M. Bishop. Computer Security: Art and Science. Addison-Wesley Professional, 2nd edition, 2018.
[8] A. Butz, C. Beshers, and S. Feiner. Of vampire mirrors and privacy lamps: Privacy management in multi-user augmented environments. In ACM UIST, 1998.
[9] A. Butz, T. Hollerer, S. Feiner, B. MacIntyre, and C. Beshers. Enveloping users and computers in a collaborative 3D augmented reality. In IEEE/ACM International Workshop on Augmented Reality, 1999.
[10] J. T. Chiang, J. J. Haas, and Y.-C. Hu. Secure and precise location verification using distance bounding and simultaneous multilateration. In WiSec, 2009.
[11] S. Curtis. Sex pests are using Apple AirDrop to send explicit pictures to unsuspecting commuters, Aug. 2017. https://www.mirror.co.uk/tech/sex-pests-using-apple-airdrop-10987968.
[12] L. D’Antoni, A. Dunn, S. Jana, T. Kohno, B. Livshits, D. Molnar, A. Moshchuk, E. Ofek, F. Roesner, S. Saponas, et al. Operating system support for augmented reality applications. HotOS, 2013.
[13] J. A. de Guzman, K. Thilakarathna, and A. Seneviratne. Security and privacy approaches in mixed reality: A literature survey, 2018. http://arxiv.org/abs/1802.05797.
[14] T. Denning, Z. Dehlawi, and T. Kohno. In situ with bystanders of augmented reality glasses: Perspectives on recording and privacy-mediating technologies. In CHI, 2014.
[15] Digi-Capital. Ubiquitous $90 billion AR to dominate $15 billion VR market by 2022.