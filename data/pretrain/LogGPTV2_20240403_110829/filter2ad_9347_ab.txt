+ ( 70 weblogic 12.2.1.3.0 版本最后一位参数 ) +74 （作者理解为标识符），所以转换对应情况如下：
`new String[]{"cmd", "/c", "notepad"}` （ weblogic 12.2.1.3.0，需要加 70
其他版本不需要）对应的转换情况为：
    00 03 63 6D 64 74 00 02 2F 63 74 00 07 6E 6F 74 65 70 61 64  70 74
    00 03  = "cmd".length()
    63 6D 64 = "cmd"
    74 
    00 02 = "/c".length()
     2F 63 = "/c"
    74
    00 07 = "notepad".length()
    6E 6F 74 65 70 61 64 = "notepad"
    70
    74
`new String[]{"cmd", "/c", "calc"}` （ weblogic 12.2.1.3.0，需要加 70
其他版本不需要）对应的转换情况为：
    00 03 63 6D 64 74 00 02 2F 63 74 00 04 63 61 6C 63 70 74
    00 03  = "cmd".length()
    63 6D 64 = "cmd"
    74 
    00 02 = "/c".length()
     2F 63 = "/c"
    74
    00 04 = "calc".length()
    63 61 6C 63  = "calc"
    70
    74
了解了参数变动的规律以及对应的字节码，我们就可以基于该方式进行动态构建序列化文件。
测试中使用的各个版本生产 POC 序列化文件存放在
[CVE-2020-2555](https://github.com/0nise/CVE-2020-2555) `file` 目录中。
版本 | 文件名 | 描述 | 操作系统  
---|---|---|---  
12.1.3.0.0 |
[121300_calc.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/121300_calc.666)
| calc | Windows  
12.1.3.0.0 |
[121300_notepad.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/121300_notepad.666)
| notepad | Windows  
12.1.3.0.0 |
[121300_ping.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/121300_ping.666)
| ping | Windows  
12.1.3.0.0 |
[121300.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/121300.666)
| calc | Windows  
12.2.1.3.0 |
[122130_calc.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122130_calc.666)
| calc | Windows  
12.2.1.3.0 |
[122130_linux_calc.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122130_linux_calc.666)
| calc | Linux  
12.2.1.3.0 |
[122130_linux_curl.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122130_linux_curl.666)
| curl | Linux  
12.2.1.3.0 |
[122130_notepad.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122130_notepad.666)
| notepad | Windows  
12.2.1.3.0 |
[122130.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122130.666)
| calc | Windows  
12.2.1.4.0 |
[122140_calc.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122140_calc.666)
| calc | Windows  
12.2.1.4.0 |
[122140_linux_calc.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122140_linux_calc.666)
| calc | Linux  
12.2.1.4.0 |
[122140_linux_curl.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122140_linux_curl.666)
| curl | Linux  
12.2.1.4.0 |
[122140_notepad.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122140_notepad.666)
| notepad | Windows  
12.2.1.4.0 |
[122140.666](https://github.com/0nise/CVE-2020-2555/blob/master/file/122140.666)
| calc | Windows  
### Coherence 版本问题
在研究测试时，通过某一个 Coherence 版本生成的序列化文件，无法适用于多个版本，以下为多版本的详细测试情况：
poc 生成版本 | 测试版本 | 是否成功  
---|---|---  
12.1.3.0.0 | 12.1.3.0.0 | 是  
12.1.3.0.0 | 12.2.1.3.0 | 否  
12.1.3.0.0 | 12.2.1.4.0 | 否  
12.2.1.3.0 | 12.1.3.0.0 | 否  
12.2.1.3.0 | 12.2.1.3.0 | 是  
12.2.1.3.0 | 12.2.1.4.0 | 否  
12.2.1.4.0 | 12.1.3.0.0 | 否  
12.2.1.4.0 | 12.2.1.3.0 | 否  
12.2.1.4.0 | 12.2.1.4.0 | 是  
可以发现一个 POC 无法适用于多版本的 weblogic 中，针对该情况可以基于 weblogic
序列化文件转换为字节码结合动态序列化技术处理，来达到兼容多个版本的目的。
## Weblogic 的问题
**截止 2020 年 3 月 4 日，通过 Oracle 官方进行下载 weblogic
时，通过研究发现该漏洞依然存在可以利用（所有受影响版本），需要额外安装补丁。**
如下文件为下文件MD5值以及下载时间：
文件名称 | MD5 | 创建时间  
---|---|---  
fmw_12.1.3.0.0_wls.jar | 8378FE936B476A6F4CA5EFA465A435E3 | ‎2020‎-03‎-04‎  
fmw_12.2.1.3.0_wls.jar | 6E7105521029058AD64A5C6198DB09F7 | ‎2017-08‎-21‎  
fmw_12.2.1.4.0_wls.jar | AA090712069684991BA27E4DE9ED3FF6 | ‎2019-09‎-13‎  
coherence.jar(12.1.3.0.0) | E807E84D352374E33D0E2A8CC649534A | 2014-05-14  
coherence.jar(12.2.1.3.0) | 2302E408BCA7C6A82081A20CE0811B0E | 2017-08-15  
coherence.jar(12.2.1.4.0) | B28EE46B9B9BD5C24DF3BFEE10075BA4 | 2019-09-12  
建议目前已经安装最新版 weblogic 的管理员也需排查该漏洞，如有漏洞建议立即安装补丁或通过修复方案进行修复，防止被不法分子利用。
## 修复
  1. 临时解决方案：禁用 weblogic T3 协议。
  2. 安装 [Oracle 更新补丁](https://www.oracle.com/security-alerts/cpujan2020.html)，需要登录帐户后下载。
## 参考
  * [CVE-2020-2555：WebLogic远程代码执行漏洞](https://nosec.org/home/detail/4205.html)
  * [CVE-2020-2555: RCE THROUGH A DESERIALIZATION BUG IN ORACLE’S WEBLOGIC SERVER](https://www.thezdi.com/blog/2020/3/5/cve-2020-2555-rce-through-a-deserialization-bug-in-oracles-weblogic-server)
  * [浅析Java序列化和反序列化](https://github.com/gyyyy/footprint/blob/master/articles/2019/about-java-serialization-and-deserialization.md)