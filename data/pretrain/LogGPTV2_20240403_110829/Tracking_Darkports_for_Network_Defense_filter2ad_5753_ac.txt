activity.
FALSE NEGATIVES. We relied on the output of Snort to
provide a baseline of the scanning activity within the dataset.
As mentioned, we detected all scans identiﬁed by Snort, plus
another 461 scans which Snort missed. Thus relative to
Snort, for this dataset, our analysis for exposure maps (Ta-
ble 2) revealed no false negatives.
Exposure maps (once vetted against the security policy)
deﬁne the authorized access to the network from external
sources. Connections attempts or scans outside these maps
are considered a possible scans. Scans directed against a
port/IP combination contained in the NEM are not consid-
ered a scan but rather a connection attempt to a valid service;
this might potentially then be a source of false negatives, and
to claim otherwise (i.e. zero false negatives in general) would
imply unknowable knowledge of the intent of the party re-
questing the connection. For instance, a scan to port 443 of
host 10.0.0.2 (see Table 1) in the CCSL network would not be
recorded as a scan. In practice, although this speciﬁc event
in a scanning campaign would not be detected, the overall
scanning campaign would likely be detected using exposure
maps for scan detection, as in most cases we would expect
with high probability scans to occur against other hosts in the
network not offering SSL (i.e. port 443 darkports). Scanning
activity directed solely at the HTTP server would remain un-
detected and be a source of false negatives. However, we
expect that would be an actual attack rather than scanning
activity; we do not claim that exposure maps can detect at-
tacks (that are not preceded by scans).
FALSE POSITIVES. Through user error or misconﬁgura-
tion, a connection attempt might be made to a host or ser-
vice not offered by the network. In this instance, the intent
of the connection attempt was not to scan some portion of
the network, but rather it is simply a failed attempt to ac-
cess a legitimate service. Regardless, this activity would be
classiﬁed as a scan as an attempt was made to connect to a
host/port pair not listed in the NEM. Again, given that there
is no way to measure the intent of a connection attempt, we
must classify these events as scans. While no false positives
occurred in our CCSL dataset test (vs. 57 by Snort), we do
not claim this in general. False positives will be generated
whenever new legitimate services are introduced on the net-
work or services are utilized which were not accessed during
the training period (with identiﬁcation as a trans-darkport un-
til the service has been added to the vetted NEM). We expect
trans-darkports to occur infrequently in tightly controlled en-
terprise environments (e.g. in most government departments,
ﬁnancial, and health care).
5.1.2 Exposure Map Advanced Scanning Detection
The scanning detection application identiﬁes connection at-
tempts to darkports within a network, with a 5-tuple ex-
tracted from each atomic scan event and recorded in a log
ﬁle, from which a number of heuristics can be developed to
help classify and correlate these events into respective scan-
ning campaigns. Here, we give a few examples of such
heuristics to detect distributed scanning attempts.
Table 3. Three Detected Distributed Scans.
# of
Scanners
3
11
9
Scanned
Ports
80
22
25, 53
# of Hosts
Scanned
Follow-on
Attack
62
62
62
No
Yes
Yes
Attackers may disperse the scanning activity among sev-
eral sources to reduce the overall scanning footprint in an
effort to evade detection. To detect distributed scanning we
propose classifying the scan events using the following cri-
teria. 1) Scanning events and target destination ports. The
number of scanning events per unique source IP address is
determined, through analysis of the scanning log, over a con-
ﬁgurable time interval (e.g. seconds, days). Similar amounts
of scanning events from individual sources are grouped into
clusters, which are then grouped by target destination ports.
This ﬁnal comparison reveals scanning systems that share the
same scanning frequency (i.e. number of scan packets per
unit time) and target service. We consider clusters of three or
more scanning sources that target the same destination ports
as a distributed scan; the number of systems in a cluster is
conﬁgurable. 2) Source IP proximity and target destination
ports. Scanning events are ﬁrst sorted by unique source IP
address. Scanning sources in the same one-quarter class C
subnet address range (e.g. /26) are grouped into a cluster.
These clusters are then grouped by target destination ports.
This reveals scanning systems sharing a similar contiguous
address space (which could indicate a single entity 0wns the
scanning systems) and target (i.e. service). Again, we con-
sider clusters of three or more scanning sources that target
the same destination ports as a distributed scan.
Using these distributed scan heuristics, we detected three
distributed scans in the CCSL network dataset (see Table
3). The ﬁrst consisted of three source IPs targeting port 80
(HTTP). The scanning campaign was directed against the en-
tire IP address range of the CCSL network (i.e. 62 systems).
Once the scanning activity completed, no attacks were de-
tected from these scanning sources.
In fact, the only net-
work activity exhibited by the systems participating in the
distributed scanning campaign in the network trace was this
speciﬁc distributed scan. The second distributed scan con-
sisted of 11 systems targeting port 22 (SSH). The scan was
also directed at the entire IP address range. Two of the hosts
in the CCSL network offer services on port 22. In contrast
to the ﬁrst distributed scan, two of the scanning systems at-
tacked both systems in the CCSL network that offered the
service (c.f. Table 1). The third distributed scan detected con-
sisted of 9 scanning systems targeting ports 53 (DNS) and 25
(SMTP). Two of the hosts in the network offer services on
ports 25 and 53 respectively. Again, all hosts in the CCSL
network were scanned with an attack immediately following
on the system that offered port 25.
The distributed scanning detection heuristics described
above illustrates how atomic scan events detected and
recorded through exposure maps can be processed to detect
sophisticated scanning activity. Other heuristics may be de-
veloped that use the raw output from exposure maps to iden-
tify other types of simple or sophisticated scanning activity
(e.g. slow scanning).
5.2 Results: Active Response
Of the 813 scanners detected by the NEM in the CCSL
dataset, 66 launched a total of 15 301 scans intermingled with
attacks (unsuccessful) against the network, e.g., repeated at-
tempts to relay mail through the mail server, and attempted
logins to an SSH service. Mail relaying is prohibited by our
mail server and the responses from the mail server to the at-
tacking system indicate that no relaying occurred; analysis
of the network traces also showed that the repeated SSH lo-
gin attempts were all unsuccessful. Some of these systems
scanned and attacked multiple services; this explains why
the number of scan/attack entities in Table 4 is 121, while
the actual number of unique IPs addresses was 66. With the
exception of a single distributed scan (see Table 3), two char-
acteristics of this activity occurred: (1) scanning was always
the precursor to the actual attack, and (2) whenever a scan
was directed against a service offered by the network (i.e.
entry in the NEM), an attack followed once a response to the
scan was sent. This “scan then attack” activity ﬁts the proﬁle
of autorooter or worm activity as previously described. The
attacks were directed against four services offered by the net-
work: SMTP, HTTP, SSL, and SSH.
Table 4. Scan Activity as Prelude to Attack.
NEM Entry
Scan/Attack
Entities
10.0.0.1:25
10.0.0.1:80
10.0.0.1:443
10.0.0.2:22
10.0.0.2:80
10.0.0.2:443
10.0.0.3:22
5
12
3
40
17
4
40
Scans or
Attacks
5
18
3
4 545
120
9
10 601
Without the knowledge of what services are offered and
in active use by the network, in a standard perimeter defense
all 813 scanning system source IPs over the four week period
might need to be blocked at the router or ﬁrewall. The NEM
provides up-to-date knowledge of the external interface of
the network, indicating which minimal set of scanning sys-
tems should be blocked. The NEM, coupled with the tech-
nique of Section 3.2, would require that only 66 source IP
addresses be denied access. This represents a 92% reduction
in the number of dynamic updates to the network security
ACLs.
6 Scalability and Stability of Exposure Maps
The size of exposure maps will be determined by numer-
ous factors, the two most important being the number of dis-
tinct hosts using the monitored link (or network), and the va-
riety of applications those hosts use. The smaller the NEM,
the less detection system state that needs to be maintained
and the greater the scalability.
The resource consumption of exposure maps includes sys-
tem detection state and disk storage. The former refers to
storage for the features extracted from network events that
must be maintained at all times in main memory, provid-
ing the wireline speed context to build and maintain the ex-
posure maps as well as perform its various applications.5
A number of techniques are used by other network-based
scanning detection approaches to limit their use of allocated
system resources (CPU cycles, main memory, disk stor-
age), e.g., connection timeouts, reduction of monitoring win-
dows, ﬁxed sized memory buffers and analyzing only certain
events/protocols. The disk storage usage by exposure maps
will depend on the detected scanning activity, increasing with
the number of atomic scan events recorded. We now dis-
cuss the system detection state and disk storage requirements
5Depletion of this ﬁnite resource, due to trafﬁc volume or an intentional
DoS attack, can overload and defeat a detection system. Resilience to attack
is discussed separately; see end of Section 6.
for the various applications of exposure maps, and computa-
tional overhead.
SCANNING DETECTION. For scanning detection with ex-
posure maps, (1) the NEM must be constructed and main-
tained, and (2) atomic scan events must be written to disk in
the scanning activity log ﬁle. To understand the amount of
detection system state for (1), consider the scenario of a net-
work that has a NEM consisting of 10 000 entries (e.g. 500
active systems with an average of two open services per sys-
tem). Each NEM entry contains six bytes: four for IP address
and 2 for port. The total memory footprint for this NEM is
6 ∗ 10 000 ≈ 60K bytes plus additional overhead for storage
in a data structure (e.g. hash table, Bloom ﬁlter). Thus with
an allocation of 100K or 200K in system detection state, we
could perform scanning detection for this enterprise network.
As new connection requests are received, a single lookup is
performed on the NEM with the destination IP and port ﬁelds
from the incoming request to determine if there is a match.
The small amount of detection system state coupled with the
minimal computational overhead required to determine if an
incoming connection request matches a port/IP pair in the
NEM (i.e. a single lookup) make this technique suitable for
use at wire speed even in large enterprise environments.
To estimate the disk storage required for atomic scan
events in the scanning event log ﬁle, we examined the results
from the CCSL dataset. The unoptimized 5-tuple that repre-
sents each atomic scan event, in character delimited ASCII,
requires 44 bytes of storage. In contrast, to store the 780 885
atomic scan events detected in the CCSL dataset (4 week pe-
riod) in the scanning activity log ﬁle would take 33Mbytes.
Assuming the dataset represents an average level of scanning
activity, an entire year of scanning activity for the CCSL net-
work (≈ 391Mbytes) could be stored on a single CD or USB
key.
AUTOMATED RESPONSE. The automated response appli-
cation is more expensive on system detection state than the
scanning detection application due to the scanners list (recall
Section 3.2). Each entry in the scanners list requires an ad-
ditional 4 bytes (plus additional overhead for the hash table
data structure). As connection requests are received, an addi-
tional lookup is required (i.e. a check against both the NEM
and the scanners list) to determine if the source IP address
matches an entry in the scanners list. We detected 831 scan-
ners in the CCSL dataset. With an additional allocation of
less than 4K in system detection state, we could enable the
automated response application. Over time, the scanners list
will grow and would have to be managed (reduced) so that
some predetermined limit of system detection state was not
exceeded.
STABILITY. The stability of a NEM will vary greatly de-
pending on the environment in which it is used. In an enter-
prise network with a tight network security policy (e.g. gov-
ernment, ﬁnance, health care), we would expect the NEM to
stabilize quickly and thus be suitable for use in a scanning
detection technique. As noted in Section 5.1.1, in our uni-
versity lab network the NEM stabilized in 20 hours. In other
environments, service usage may vary by day of the week. In
a network environment with an open network security pol-
icy, the NEM may scale but perhaps stabilize more slowly
as new hosts continually enter and leave the network (e.g.
mobile users) or if new applications and services are con-
tinually being added to client systems (e.g. P2P ﬁle sharing,