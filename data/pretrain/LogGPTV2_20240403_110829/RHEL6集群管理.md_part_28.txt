    ```
3.  ::: para
    在 `service`{.command} 元素中配置以下参数（属性）：
    :::
    ::: itemizedlist
    -   ::: para
        `autostart`{.command} ---
        指定是否在集群启动时自动启动该服务。使用'1'启用，'0'禁用，默认为启用。
        :::
    -   ::: para
        `domain`{.command} --- 指定故障切换域（如果需要）。
        :::
    -   ::: para
        `exclusive`{.command} ---
        指定该服务只在没有其它服务运行的节点中的策略。
        :::
    -   ::: para
        `recovery`{.command} --- 为该服务指定恢复策略。选项为
        relocate、restart、disable 或者 restart-disable 该服务。
        :::
    :::
4.  ::: para
    根据您要使用的资源类型使用全局或者具体服务资源部署该服务。
    :::
    ::: para
    例如：这里是使用全局资源的 Apache 服务：
    :::
    ``` screen
    ```
    ::: para
    例如：这里是具体服务资源使用的 Apache 服务：
    :::
    ``` screen
    ```
    ::: para
    [例 7.10 "添加了服务的
    `cluster.conf`{.filename}：一个使用全局资源，一个使用具体服务资源"](#ch-config-cli-CA.html#ex-clusterconf-service-cli-CA){.xref}
    演示有两个服务的 `cluster.conf`{.filename} 文件示例：
    :::
    ::: itemizedlist
    -   ::: para
        `example_apache`{.command} --- 这个服务使用全局资源
        `web_fs`{.command}、`127.143.131.100`{.command} 和
        `example_server`{.command}。
        :::
    -   ::: para
        `example_apache2`{.command} --- 这个服务使用具体服务资源
        `web_fs2`{.command}、`127.143.131.101`{.command} 和
        `example_server2`{.command}。
        :::
    :::
5.  ::: para
    增加 `config_version`{.command} 属性参数即可更新该参数（例如：从
    `config_version="2"`{.command} 改为
    `config_version="3">`{.command}）。
    :::
6.  ::: para
    保存 `/etc/cluster/cluster.conf`{.filename}。
    :::
7.  ::: para
    [**（可选）**]{.guilabel}，运行 `ccs_config_validate`{.command}
    命令，确认根据集群方案（`cluster.rng`{.filename}）更新的文件。例如：
    :::
    ``` screen
    [root@example-01 ~]# ccs_config_validate 
    Configuration validates
    ```
8.  ::: para
    运行 `cman_tool version -r`{.command}
    命令在其他集群节点中推广该配置。
    :::
9.  ::: para
    确认推广了更新的文件。
    :::
10. ::: para
    执行 [第 7.8 节
    "验证配置"](#ch-config-cli-CA.html#s1-verify-config-cli-CA){.xref}。
    :::
:::
::: example
[⁠]{#ch-config-cli-CA.html#ex-clusterconf-service-cli-CA}
**例 7.10. 添加了服务的
`cluster.conf`{.filename}：一个使用全局资源，一个使用具体服务资源**
::: example-contents
``` screen
```
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-cli-CA.html#s1-config-rrp-cli-CA}7.6. 配置冗余环协议 {.title}
:::
::: para
从红帽企业版 Linux 6.4 开始，红帽高可用附加组件支持冗余环协议配置。
:::
::: para
当将系统配置为使用冗余环协议时，必须考虑以下问题：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    不要指定两个以上的环。
    :::
-   ::: para
    每个环必须使用相同的协议；不要混合 IPv4 和 IPv6。
    :::
-   ::: para
    如果有必要，您可以手动为第二个环指定多播地址。如果您为第二个环指定多播地址，要么使用备用多播地址，要么备用端口必须与第一个环的多播地址不同。如果您没有指定备用的多播地址，则系统将自动为第二个环使用不同的多播地址。
    :::
    ::: para
    如果您指定备用端口，则第一个环的端口号必须与第一个环的端口号有两个以上的差别，因为系统本身使用端口即端口-1
    执行操作。
    :::
-   ::: para
    不要在同一子网中使用不同的接口。
    :::
-   ::: para
    一般最好在两个不同的 NIC 和两个不同的切换中配置冗余环协议，以防一个
    NIC 或者切换失败。
    :::
-   ::: para
    不要使用 `ifdown`{.command} 命令或者
    `service network stop`{.command}
    模仿网络失败。这会破坏整个集群并需要您重启集群中的所有节点方可恢复。
    :::
-   ::: para
    不要使用 `NetworkManager`{.literal}，因为它会在拔掉电缆时执行
    `ifdown`{.command} 命令。
    :::
-   ::: para
    当一个 NIC 失败时，会将整个环标记为失败。
    :::
-   ::: para
    恢复失败的环不需要人工介入。要恢复冗余环则需要修复造成失败的最初原因，比如失败的
    NIC 或者切换。
    :::
:::
::: para
要为冗余环协议指定辅网络接口，您可以在 `cluster.conf`{.filename}
配置文件的 `clusternode`{.literal} 部分添加 `altname`{.literal}
组件。指定 `altname`{.literal} 后，您必须指定 `name`{.literal}
属性为该节点指出辅主机名或者 IP 地址。
:::
::: para
以下示例指定 `clusternet-node1-eth2`{.literal} 作为集群节点
`clusternet-node1-eth1`{.literal} 的备用名称。
:::
``` screen
```
::: para
`clusternode`{.literal} 中的 `altname`{.literal}
部分并不需要固定的位置。它可以在 `fence`{.literal}
部分前面，也可以在它后面。不要为一个集群节点指定一个以上
`altname`{.literal}，否则系统将无法启动。
:::
::: para
另外，您可以为第二个环手动指定多播地址、端口以及 TTL，方法是在
`cluster.conf`{.filename} 配置文件的 `cman`{.literal} 部分添加一个
`altmulticast`{.literal} 组件。`altmulticast`{.literal} 组件可以是
`addr`{.literal}、`port`{.literal} 和 `ttl`{.literal} 参数。
:::
::: para
以下示例显示集群配置文件的 `cman`{.literal}
部分，该部分为第二个环设置多播地址、端口和 TTL。
:::
``` screen
```
:::
::: section
::: titlepage
# [⁠]{#ch-config-cli-CA.html#s1-config-debug-cli-CA}7.7. 配置 Debug 选项 {.title}
:::
::: para
您可以为集群中的所有守护进程启用
debugging，或者您可以为具体集群进程启用日志。
:::
::: para
要为所有守护进程启用 debugging，请在
`/etc/cluster/cluster.conf`{.filename}
中添加以下行。默认情况下会将日志指向
`/var/log/cluster/daemon.log`{.filename} 文件。
:::
``` screen
   ...  
```
::: para
要为独立集群进程启用 debugging，请在
`/etc/cluster/cluster.conf`{.filename}
文件中添加以下行。每个守护进程的日志配置可覆盖全局设置。
:::
``` screen
   ...
   ...
```
::: para
对于您可以启用日志的日志守护进程列表以及您可以同时配置全局和按守护进程记录日志的附加日志选项，请参考
`cluster.conf`{.command}(5) man page。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-cli-CA.html#s1-verify-config-cli-CA}7.8. 验证配置 {.title}
:::