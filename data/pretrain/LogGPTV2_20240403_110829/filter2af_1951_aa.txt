* * *
## Web安全系列 -- XSS前端漏洞
### 前言
这是渗透测试方面的第一课，我们跳过了社工技术的讲解，在之前的课程讲解中已经为大家介绍了社工技术的基本方法，对于社工，我们要做的就是足够细心和耐心，尽可能的收集可利用的信息，说起来很简单，但真正落到实际操作上就需要大家付出大量的时间和精力了。
### 前端漏洞
随着WEB应用越来越复杂，用户对WEB安全也越来越重视。再加上前端工程师的工作面已逐渐扩大，开始覆盖到各种业务逻辑，因此如何应对各种WEB安全问题就显得十分重要。现在危害比较大的前端漏洞主要有xss跨站脚本漏洞，csrf跨站请求伪造漏洞，网上大量的前端攻击行为都是基于这两种漏洞上形成的。今天我们就来介绍下xss漏洞。
### xss跨站脚本漏洞
**非持久型xss攻击**
：顾名思义，非持久型xss攻击是一次性的，仅对当次的页面访问产生影响。非持久型xss攻击要求用户访问一个被攻击者篡改后的链接，用户访问该链接时，被植入的攻击脚本被用户游览器执行，从而达到攻击目的。
**持久型xss攻击** ：持久型xss，会把攻击者的数据存储在服务器端，攻击行为将伴随着攻击数据一直存在。
xss也可以分成三类：
**反射型** ：经过后端，不经过数据库
**存储型** ：经过后端，经过数据库
**DOM型** ：不经过后端，DOM—based XSS漏洞是基于文档对象模型Document Objeet Model,DOM)的一种漏洞，dom -xss是通过url传入参数去控制触发的。
#### 反射型xss
新建一个xss.php文件并加入以下代码：
    \\XSS反射演示  
这段代码中首先包含一个表单，用于向页面自己发送`GET`请求，带一个名为xss的参数。
然后PHP会读取该参数，如果不为空，则直接打印出来，这里不存在任何过滤。也就是说，如果xss中存在HTML结构性的内容，打印之后会直接解释为HTML元素。
部署好这个文件，访问`http://localhost/xss.php`，直接输入一个js代码，比如``
之后点击test：
我们输入的HTML代码被执行了。用Firebug查看，我们输出的内容直接插入到了页面中，解释为标签。 
反射型XSS的数据流向是：浏览器 -&gt; 后端 -&gt;
浏览器。 存储型xss 把xss.php内容改为下述内容（同时数据库中需要配置相应的表）：
\\\存储XSS演示 
&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;
  &lt;input type=&quot;text&quot;
name=&quot;xss&quot;/&gt;   &lt;input
type=&quot;submit&quot; value=&quot;test&quot;/&gt;  &lt;/form&gt;  &lt;?php $xss=@$_POST[&#39;xss&#39;]; mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;123&quot;); mysql_select_db(&quot;xss&quot;); if($xss!==null){ $sql=&quot;insert
into temp(id,payload) values(&#39;1&#39;,&#39;$xss&#39;)&quot;; $result=mysql_query($sql); echo $result;
} ?&gt;
 用户输入的内容还是没有过滤，但是不直接显示在页面中，而是插入到了数据库。
新建show.php，内容为： &lt;?php mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;); mysql_select_db(&quot;xss&quot;); $sql=&quot;select payload from temp where id=1&quot;; $result=mysql_query($sql); while($row=mysql_fetch_array($result)){ echo $row[&#39;payload&#39;]; } ?&gt; 
该代码从数据库读取了之前插入的内容，并将其显示出来。 先创建一个数据库xss,创建temp表 <img