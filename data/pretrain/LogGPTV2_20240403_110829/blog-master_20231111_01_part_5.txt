db1=> \d+ tbl  
                                                       Table "s1.tbl"  
 Column |            Type             | Collation | Nullable | Default | Storage  | Compression | Stats target | Description   
--------+-----------------------------+-----------+----------+---------+----------+-------------+--------------+-------------  
 id     | integer                     |           |          |         | plain    |             |              |   
 info   | text                        |           |          |         | extended |             |              |   
 ts     | timestamp without time zone |           |          |         | plain    |             |              |   
Access method: heap  
```  
#### 19 插入  
```  
db1=> insert into tbl values (1,'test',now());  
INSERT 0 1  
```  
#### 20 批量插入  
```  
db1=> insert into tbl values (2,'test',now()), (3,'test3',now()), (4,'test4',now());  
INSERT 0 3  
```  
#### 21 查询  
```  
db1=> select * from tbl;  
 id | info  |             ts               
----+-------+----------------------------  
  1 | test  | 2023-11-10 12:30:29.073813  
  2 | test  | 2023-11-10 12:31:03.545101  
  3 | test3 | 2023-11-10 12:31:03.545101  
  4 | test4 | 2023-11-10 12:31:03.545101  
(4 rows)  
```  
#### 22 查看执行计划  
```  
db1=> insert into tbl select generate_series(1,100000), md5(random()::Text), clock_timestamp();  
INSERT 0 100000  
```  
```  
db1=> \h explain  
Command:     EXPLAIN  
Description: show the execution plan of a statement  
Syntax:  
EXPLAIN [ ( option [, ...] ) ] statement  
EXPLAIN [ ANALYZE ] [ VERBOSE ] statement  
where option can be one of:  
    ANALYZE [ boolean ]  
    VERBOSE [ boolean ]  
    COSTS [ boolean ]  
    SETTINGS [ boolean ]  
    BUFFERS [ boolean ]  
    WAL [ boolean ]  
    TIMING [ boolean ]  
    SUMMARY [ boolean ]  
    FORMAT { TEXT | XML | JSON | YAML }  
URL: https://www.postgresql.org/docs/14/sql-explain.html  
```  
```  
db1=> explain select * from tbl where id=1;  
                       QUERY PLAN                          
---------------------------------------------------------  
 Seq Scan on tbl  (cost=0.00..2255.69 rows=528 width=44)  
   Filter: (id = 1)  
(2 rows)  
db1=> explain (analyze,verbose,timing,costs,buffers,settings,wal) select * from tbl where id=1;  
                                                   QUERY PLAN                                                     
----------------------------------------------------------------------------------------------------------------  
 Seq Scan on s1.tbl  (cost=0.00..2185.05 rows=1 width=44) (actual time=0.008..6.805 rows=2 loops=1)  
   Output: id, info, ts  
   Filter: (tbl.id = 1)  
   Rows Removed by Filter: 100002  
   Buffers: shared hit=935  
 Settings: max_parallel_workers_per_gather = '0', random_page_cost = '1.1', search_path = '"$user", s1, public'  
 Planning:  
   Buffers: shared hit=15  
 Planning Time: 0.236 ms  
 Execution Time: 6.821 ms  
(10 rows)  
```  
#### 23 创建索引  
```  
db1=> create index on tbl (id);  
CREATE INDEX  
db1=> explain (analyze,verbose,timing,costs,buffers,settings,wal) select * from tbl where id=1;  
                                                     QUERY PLAN                                                       
--------------------------------------------------------------------------------------------------------------------  
 Index Scan using tbl_id_idx on s1.tbl  (cost=0.29..2.51 rows=1 width=44) (actual time=0.050..0.052 rows=2 loops=1)  
   Output: id, info, ts  
   Index Cond: (tbl.id = 1)  
   Buffers: shared hit=1 read=2  
 Settings: max_parallel_workers_per_gather = '0', random_page_cost = '1.1', search_path = '"$user", s1, public'  
 Planning:  
   Buffers: shared hit=15 read=1  
 Planning Time: 0.212 ms  
 Execution Time: 0.173 ms  
(9 rows)  
```  
#### 24 控制执行计划开关  
```  
db1=> set enable_indexscan =off;  
SET  
db1=> explain (analyze,verbose,timing,costs,buffers,settings,wal) select * from tbl where id=1;  
                                                                QUERY PLAN                                                                  
------------------------------------------------------------------------------------------------------------------------------------------  
 Bitmap Heap Scan on s1.tbl  (cost=1.40..2.51 rows=1 width=44) (actual time=0.016..0.017 rows=2 loops=1)  
   Output: id, info, ts  
   Recheck Cond: (tbl.id = 1)  
   Heap Blocks: exact=1  
   Buffers: shared hit=3  
   ->  Bitmap Index Scan on tbl_id_idx  (cost=0.00..1.40 rows=1 width=0) (actual time=0.010..0.011 rows=2 loops=1)  
         Index Cond: (tbl.id = 1)  
         Buffers: shared hit=2  
 Settings: enable_indexscan = 'off', max_parallel_workers_per_gather = '0', random_page_cost = '1.1', search_path = '"$user", s1, public'  
 Planning Time: 0.062 ms  
 Execution Time: 0.038 ms  
(11 rows)  
```  
```  
db1=> set enable_bitmapscan =off;  
SET  
db1=> explain (analyze,verbose,timing,costs,buffers,settings,wal) select * from tbl where id=1;  
                                                                             QUERY PLAN                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------  
 Seq Scan on s1.tbl  (cost=0.00..2185.05 rows=1 width=44) (actual time=0.009..7.030 rows=2 loops=1)  
   Output: id, info, ts  
   Filter: (tbl.id = 1)  
   Rows Removed by Filter: 100002  
   Buffers: shared hit=935  
 Settings: enable_bitmapscan = 'off', enable_indexscan = 'off', max_parallel_workers_per_gather = '0', random_page_cost = '1.1', search_path = '"$user", s1, public'  
 Planning Time: 0.057 ms  
 Execution Time: 7.045 ms  
(8 rows)  
```  
#### 25 更新  
```  
db1=> update tbl set info='new' where id=1;  
UPDATE 2  
db1=> update tbl set info='new123' where id=1 returning *;  
 id |  info  |             ts               
----+--------+----------------------------  
  1 | new123 | 2023-11-10 12:30:29.073813  
  1 | new123 | 2023-11-10 12:31:55.791965  
(2 rows)  
UPDATE 2  
```  
#### 26 关联更新  
```  
db1=> create table t2 (id int, info text, ts timestamp);  
CREATE TABLE  
db1=> insert into t2 values (1, 'test1', now()), (2, 'test2', now()), (-1, 'test-1', now()), (-100, 'test-100', now());  
INSERT 0 4  
```  
```  
db1=> \h update  
Command:     UPDATE  
Description: update rows of a table  
Syntax:  
[ WITH [ RECURSIVE ] with_query [, ...] ]  
UPDATE [ ONLY ] table_name [ * ] [ [ AS ] alias ]  
    SET { column_name = { expression | DEFAULT } |  
          ( column_name [, ...] ) = [ ROW ] ( { expression | DEFAULT } [, ...] ) |  
          ( column_name [, ...] ) = ( sub-SELECT )  
        } [, ...]  
    [ FROM from_item [, ...] ]  
    [ WHERE condition | WHERE CURRENT OF cursor_name ]  
    [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ]  
URL: https://www.postgresql.org/docs/14/sql-update.html  
```  
```  
db1=> update tbl set info=t2.info from t2 where tbl.id=t2.id and t2.id > -10 returning *;  
 id | info  |             ts             | id | info  |            ts               
----+-------+----------------------------+----+-------+---------------------------  
  1 | test1 | 2023-11-10 12:31:55.791965 |  1 | test1 | 2023-11-10 12:52:41.12488  
  1 | test1 | 2023-11-10 12:30:29.073813 |  1 | test1 | 2023-11-10 12:52:41.12488  
  2 | test2 | 2023-11-10 12:31:55.791986 |  2 | test2 | 2023-11-10 12:52:41.12488  
  2 | test2 | 2023-11-10 12:31:03.545101 |  2 | test2 | 2023-11-10 12:52:41.12488  
(4 rows)  
UPDATE 4  
```  
#### 27 merge/insert into on conflict  
```  
db1=> create table t3 (id int primary key, info text, ts timestamp);  
CREATE TABLE  
db1=>   
db1=> insert into t3 values (1,'test1',clock_timestamp()), (2,'test2',clock_timestamp()), (3,'test3',clock_timestamp());  
INSERT 0 3  
```  
```  
db1=> \set VERBOSITY verbose  
db1=> insert into t3 values (1,'new','1999-01-01');  
ERROR:  23505: duplicate key value violates unique constraint "t3_pkey"  
DETAIL:  Key (id)=(1) already exists.  
SCHEMA NAME:  s1  
TABLE NAME:  t3  
CONSTRAINT NAME:  t3_pkey  
LOCATION:  _bt_check_unique, nbtinsert.c:663  
db1=> insert into t3 values (1,'new','1999-01-01') on conflict (id) do update set info=excluded.info,ts=excluded.ts returning *;  
 id | info |         ts            
----+------+---------------------  
  1 | new  | 1999-01-01 00:00:00  
(1 row)  
INSERT 0 1  
```  
#### 28 删除  
```  
db1=> delete from t3 where id=1;  
DELETE 1  
db1=> delete from t3 where id=2 returning *;  
 id | info  |             ts               
----+-------+----------------------------  
  2 | test2 | 2023-11-10 13:02:08.642111  
(1 row)  
DELETE 1  
```  
#### 29 关联删除  
```  
db1=> \h delete from  
Command:     DELETE  
Description: delete rows of a table  
Syntax:  
[ WITH [ RECURSIVE ] with_query [, ...] ]  
DELETE FROM [ ONLY ] table_name [ * ] [ [ AS ] alias ]  
    [ USING from_item [, ...] ]  
    [ WHERE condition | WHERE CURRENT OF cursor_name ]  
    [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ]  
URL: https://www.postgresql.org/docs/14/sql-delete.html  
```  
```  
db1=> delete from tbl using t2 where tbl.id=t2.id and t2.id > -10 returning *;  
 id | info  |             ts             | id | info  |            ts               
----+-------+----------------------------+----+-------+---------------------------  
  1 | test1 | 2023-11-10 12:31:55.791965 |  1 | test1 | 2023-11-10 12:52:41.12488  
  1 | test1 | 2023-11-10 12:30:29.073813 |  1 | test1 | 2023-11-10 12:52:41.12488  
  2 | test2 | 2023-11-10 12:31:03.545101 |  2 | test2 | 2023-11-10 12:52:41.12488  
  2 | test2 | 2023-11-10 12:31:55.791986 |  2 | test2 | 2023-11-10 12:52:41.12488  
(4 rows)  
DELETE 4  
```  
#### 30 修改字段类型  
```  
db1=> \d tbl  
                            Table "s1.tbl"  
 Column |            Type             | Collation | Nullable | Default   
--------+-----------------------------+-----------+----------+---------  
 id     | integer                     |           |          |   
 info   | text                        |           |          |   
 ts     | timestamp without time zone |           |          |   
Indexes:  
    "tbl_id_idx" btree (id)  
db1=> alter table tbl alter column ts type date;  
ALTER TABLE  
db1=> \d tbl  
                  Table "s1.tbl"  
 Column |  Type   | Collation | Nullable | Default   
--------+---------+-----------+----------+---------  
 id     | integer |           |          |   
 info   | text    |           |          |   
 ts     | date    |           |          |   
Indexes:  
    "tbl_id_idx" btree (id)  
db1=> select * from tbl limit 10;  
 id |               info               |     ts       
----+----------------------------------+------------  
  3 | test3                            | 2023-11-10  
  4 | test4                            | 2023-11-10  
  3 | 0f85f45f4a43c8fe876b55538ac27d9f | 2023-11-10  
  4 | ae4311048718b0ac22f5ac893d223bdb | 2023-11-10  
  5 | 38b488ecf64013f936908384bbe996c0 | 2023-11-10  
  6 | c2b3bbdce2a6a6d4620e6bc796a19a90 | 2023-11-10  
  7 | 009cb69b734e39f34eb9bd813892fe15 | 2023-11-10  
  8 | 05c0e274f5949e7fe89df72cbd3c9782 | 2023-11-10  
  9 | 145c99d4d4a293b48c468909e2ef8d23 | 2023-11-10  
 10 | d7e5f169c33c40df2b8cbd16c24d415e | 2023-11-10  
(10 rows)  
```  
#### 31 修改字段类型长度  
```  
db1=> create table t4 (id int, info varchar(10), ts timestamp);  
CREATE TABLE  
db1=> alter table t4 alter column info type varchar(20);  
ALTER TABLE  
```  
#### 32 增加字段  
```  
db1=> alter table tbl add column c1 int;  