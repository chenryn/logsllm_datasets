C 语言深度解剖
-----------------解开程序员面试笔试的秘密
以含金量勇敢挑战国内外同类书籍
陈正冲 编著
石虎 审阅
- 0 -
版权申明
本书尚未出版，先放到网上给大家免费下载和阅
览。本书正式出版前读者可以仔细研读和自由传阅本
书电子版，但丌允许私自大量印刷和销售。出版社如
想出版此书可通过邮件戒博客留言联系作者商谈出版
事宜。
对亍非法盗印戒盗版，作者将本着愚公移山的精
神，孜孜丌倦的不盗版者周旋，直至法律做出公正的
裁决。
- 1 -
写在前言前面的话
最近面试了一些人，包括应届本科、硕士和工作多年的程序员，在问到C 语
言相关的问题的时候，总是没几个人能完全答上我的问题。甚至一些工作多年，
简历上写着“最得意的语言是C 语言”，“对C 有很深的研究”，“精通C 语
言”的人也答丌完全我的问题，甚至有个别人我问的问题一个都答丌上。亍是我
就想起了我去年闲的使用写的返本小册子。
返本小册子已经在我电脑里睡了一年大觉了。并非没有出版社愿意出版，而
是几个大的出版社都认为书写得丌错，但太薄，利润太低，所以要求我加厚到300
页以上。我拒绝加厚，并为此和几个出版社僵持了一年多。我认为经典的东西一
定要精炼，丌要废话。返次由亍面试别人，所以终亍记起了我迓写过返么一本小
册子。想了想，迓是决定挂到网上免费让大家看得了。并为此与门为本书开了个
博客，以方便和读者交流。博客地址：http://blog.csdn.net/dissection_c
作者简介：
陈正冲：湖南沅江人，毕业亍长春光学精密机械学院（长春理工大学）数学
系。目前从事嵌入式软件开发和管理方面的工作。
石 虎：湖南沅江人，毕业亍吉林大学计算机系。目前为大连交通大学计算
机系讲师。
- 2 -
目 录
前 言 ............................................................ - 7 -
第一章关键字 ....................................................... - 9 -
1.1 最宽恒大量的关键字----auto ................................. - 10 -
1.2 最快的关键字---- register ................................. - 10 -
1.2.1 皇帝身边的小太监----寄存器 ............................ - 10 -
1.2.2 使用register 修饰符的注意点 .......................... - 11 -
1.3 最名不符实的关键字----static ............................... - 11 -
1.3.1 修饰变量 ............................................ - 11 -
1.3.2 修饰函数 ............................................ - 12 -
1.4 基本数据类型----short、int、long、char、float、double ...... - 12 -
1.4.1 数据类型与“模子” ................................... - 13 -
1.4.2 变量的命名规则 ....................................... - 13 -
1.5 最冤枉的关键字----sizeof ................................... - 17 -
1.5.1 常年被人误认为函数 ................................... - 17 -
1.5.2 sizeof（int）*p 表示什么意思？ ....................... - 17 -
1.6 signed、unsigned 关键字 ................................... - 18 -
1.7 if、else 组合 ............................................. - 19 -
1.7.1 bool 变量与“零值”进行比较 ........................... - 19 -
1.7.2 float 变量与“零值”进行比较 .......................... - 19 -
1.7.3 指针变量与“零值”进行比较 ............................ - 20 -
1.7.4 else 到底与哪个if 配对呢？ ........................... - 20 -
1.7.5 if 语句后面的分号 .................................... - 22 -
1.7.6 使用if 语句的其他注意事项 ............................ - 23 -
1.8 switch、case 组合 ......................................... - 23 -
1.8.1 不要拿青龙偃月刀去削苹果 .............................. - 23 -
1.8.2 case 关键字后面的值有什么要求吗？ ..................... - 24 -
1.8.3 case 语句的排列顺序 .................................. - 24 -
1.8.4 使用case 语句的其他注意事项 .......................... - 25 -
1.9 do、while、for 关键字 ..................................... - 26 -
1.9.1 break 与continue 的区别 ............................. - 27 -
1.9.2 循环语句的注意点 ..................................... - 27 -
1.10 goto、return关键字 ...................................... - 28 -
1.10.1 goto关键字 ......................................... - 28 -
1.10.2 return 关键字 ...................................... - 29 -
1.11 void 关键字 .............................................. - 29 -
1.11.1 void a？ ........................................... - 29 -
1.11.2 void 修饰函数返回值和参数 ........................... - 30 -
1.11.3 void 指针 .......................................... - 31 -
1.11.4 void 不能代表一个真实的变量 .......................... - 32 -
1.12 const 关键字也许该被替换为readolny ........................ - 32 -
- 3 -
1.12.1 const 修饰的只读变量 ................................ - 33 -
1.12.2 节省空间，避免不必要的内存分配，同时提高效率 ........... - 33 -
1.12.3 修饰一般变量 ........................................ - 33 -
1.12.4 修饰数组 ........................................... - 34 -
1.12.5 修饰指针 ........................................... - 34 -
1.12.6 修饰函数的参数 ...................................... - 34 -
1.12.7 修饰函数的返回值 .................................... - 34 -
1.13 最易变的关键字----volatile ................................ - 35 -
1.14 最会带帽子的关键字----extern .............................. - 35 -
1.15 struct 关键字 ............................................ - 36 -
1.15.1 空结构体多大？ ...................................... - 36 -
1.15.2 柔性数组 ........................................... - 37 -
1.15.3 struct 与class 的区别 .............................. - 38 -
1.16 union 关键字 ............................................. - 38 -
1.16.1 大小端模式对union 类型数据的影响 ..................... - 38 -
1.16.2 如何用程序确认当前系统的存储模式？ .................... - 39 -
1.17 enum 关键字 .............................................. - 40 -
1.17.1 枚举类型的使用方法 .................................. - 40 -
1.17.2 枚举与#define 宏的区别 .............................. - 41 -
1.18 伟大的缝纫师----typedef 关键字 ............................ - 41 -
1.18.1 关于马甲的笑话 ...................................... - 41 -
1.18.2 历史的误会----也许应该是typerename .................. - 42 -
1.18.3 typedef 与#define 的区别 ........................... - 42 -
1.18.4 #define a int[10]与typedef int a[10] .............. - 43 -
第二章 符号 ....................................................... - 45 -
2.1 注释符号 .................................................. - 46 -
2.1.1 几个似非而是的注释问题 ................................ - 46 -
2.1.2 y = x/*p ............................................ - 47 -
2.1.3 怎样才能写出出色的注释 ................................ - 47 -
2.2 接续符和转义符 ............................................. - 48 -
2.3 单引号、双引号 ............................................. - 49 -
2.4 逻辑运算符 ................................................ - 49 -
2.5 位运算符 .................................................. - 50 -
2.5.1 左移和右移 ........................................... - 50 -
2.5.2 0x01<<2+3 的值为多少？ ............................... - 50 -
2.6 花括号 .................................................... - 51 -
2.7 ++、--操作符 .............................................. - 51 -
2.7.1 ++i+++i+++i ......................................... - 52 -
2.7.2 贪心法 .............................................. - 52 -
2.8 2/(-2)的值是多少？ ........................................ - 52 -
2.9 运算符的优先级 ............................................. - 53 -
2.9.1 运算符的优先级表 ..................................... - 53 -
- 4 -
2.9.2 一些容易出错的优先级问题 .............................. - 55 -
第三章 预处理 ..................................................... - 55 -
3.1 宏定义 .................................................... - 57 -
3.1.1 数值宏常量 ........................................... - 57 -
3.1.2 字符串宏常量 ......................................... - 57 -
3.1.3 用define 宏定义注释符号？ ............................ - 58 -
3.1.4 用define 宏定义表达式................................ - 58 -
3.1.5 宏定义中的空格 ....................................... - 59 -
3.2 条件编译 .................................................. - 59 -
3.3 文件包含 .................................................. - 60 -
3.4 #error 预处理 ............................................. - 60 -
3.5 #line 预处理 .............................................. - 61 -
3.6 #pragma 预处理 ............................................ - 61 -
3.6.1 #pragma message ..................................... - 61 -
3.6.2 #pragma code_seg .................................... - 62 -
3.6.3 #pragma once ........................................ - 62 -
3.6.4 #pragma hdrstop ..................................... - 62 -
3.6.5 #pragma resource .................................... - 62 -
3.6.6 #pragma warning ..................................... - 62 -
3.6.7 #pragma comment ..................................... - 63 -
3.6.8 #pragma pack ........................................ - 63 -
3.7 #运算符 ................................................... - 66 -
3.8 ##预算符 .................................................. - 66 -
第四章 指针和数组 ................................................. - 67 -
4.1 指针 ...................................................... - 67 -
4.1.1 指针的内存布局 ....................................... - 67 -
4.1.2 ‚*”与防盗门的钥匙 ................................... - 68 -
4.1.3 int *p = NULL 和*p = NULL 有什么区别？ ............... - 68 -
4.1.4 如何将数值存储到指定的内存地址 ........................ - 69 -
4.1.5 编译器的bug？ ....................................... - 70 -
4.1.6 如何达到手中无剑、胸中也无剑的地步 ..................... - 71 -
4.2 数组 ...................................................... - 71 -
4.2.1 数组的内存布局 ....................................... - 71 -
4.2.2 省政府和市政的区别----&a[0]和&a 的区别 ................ - 72 -
4.2.3 数组名a 作为左值和右值的区别 .......................... - 72 -
4.3 指针与数组之间的恩恩怨怨 ................................... - 73 -
4.3.1 以指针的形式访问和以下标的形式访问 ..................... - 73 -
4.3.2 a 和&a 的区别 ....................................... - 74 -
4.3.3 指针和数组的定义与声明 ................................ - 76 -
4.3.4 指针和数组的对比 ..................................... - 78 -
4.4 指针数组和数组指针 ......................................... - 78 -
4.4.1 指针数组和数组指针的内存布局 .......................... - 78 -
- 5 -
4.4.2 int (*)[10] p2-----也许应该这么定义数组指针 ........... - 79 -
4.4.3 再论a 和&a 之间的区别 ................................ - 79 -
4.4.4 地址的强制转换 ....................................... - 80 -
4.5 多维数组与多级指针 ......................................... - 82 -
4.5.1 二维数组 ............................................ - 82 -
4.5.2 二级指针 ............................................ - 85 -
4.6 数组参数与指针参数 ......................................... - 85 -
4.6.1 一维数组参数 ......................................... - 86 -
4.6.2 一级指针参数 ......................................... - 88 -
4.6.3 二维数组参数与二维指针参数 ............................ - 90 -
4.7 函数指针 .................................................. - 90 -
4.7.1 函数指针的定义 ....................................... - 90 -
4.7.2 函数指针的使用 ....................................... - 91 -
4.7.3 (*(void(*) ())0)()------这是什么？ .................. - 92 -
4.7.4 函数指针数组 ......................................... - 93 -
4.7.5 函数指针数组的指针 ................................... - 94 -
第五章 内存管理 ................................................... - 95 -
5.1 什么是野指针 .............................................. - 95 -
5.2 栈、堆和静态区 ............................................. - 95 -
5.3 常见的内存错误及对策 ....................................... - 96 -
5.3.1 指针没有指向一块合法的内存 ............................ - 96 -
5.3.2 为指针分配的内存太小 ................................. - 97 -
5.3.3 内存分配成功，但并未初始化 ............................ - 98 -
5.3.4 内存越界 ............................................ - 98 -
5.3.5 内存泄漏 ............................................ - 99 -
5.3.6 内存已经被释放了，但是继续通过指针来使用 .............. - 101 -
第六章 函数 ...................................................... - 102 -
6.1 函数的由来与好处 .......................................... - 102 -
6.2 编码风格 ................................................. - 102 -
6.3 函数设计的一般原则和技巧 .................................. - 107 -
6.4 函数递归 ................................................. - 109 -
6.4.1 一个简单但易出错的递归例子 ........................... - 109 -