The interface ObjectIterator has an optional `key` parameter. This becomes an
issue when trying to use the key in a context with StrictNullChecking enabled.
For example, the mapValues() function use ObjectIterator as its callback
function:
    mapValues(dict, (value, key) => {
      // This line throws an error because the key can be undefined
      dict[key];
      if (key) {
        // This line is OK
        dict[key];
      }
    });
It does not makes sense to check the key for nulls while iterating a
dictionary because it cannot exists values in the dictionary that does not
have any keys.
I suggest we change the type of the `key` parameter in the interface
ObjectIterator from `key?: string` to `key: string`. Maybe this applies for
other iterator interfaces as well such as NumericDictionaryIterator and
DictionaryIterator. Any comments/objections?
  * The authors of that type definition are cc/ @bczengel @chrootsu @stepancar