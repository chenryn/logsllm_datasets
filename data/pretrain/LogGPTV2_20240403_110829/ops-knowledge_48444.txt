User: 如何配置Nginx反向代理，将来自多个服务器的请求进行负载均衡和分发？请提供一个示例配置文件。
Assistant: 下面是一个基本的Nginx反向代理配置文件示例，它通过负载均衡来分发来自三个服务器的请求：

```nginx
upstream backend {
    server backend1.example.com;
    server backend2.example.com;
    server backend3.example.com;
}

server {
    listen 80;
    server_name example.com;

    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
```

在这个配置文件中，我们使用了`upstream`模块来定义名为`backend`的服务器集群，其中列出了三个具体的服务器：`backend1.example.com`，`backend2.example.com`和`backend3.example.com`。这些服务器可以是实际的服务器IP地址或主机名，可以是HTTP或HTTPS协议。

然后，我们在服务器块中配置了代理规则。在这个例子中，我们使用了`proxy_pass`指令将所有来自`example.com`网站的请求重定向到`backend`服务器集群上。在这个指令中，我们指定了`http://backend`作为代理服务器地址。这个地址与之前定义的`upstream`模块的名称相同。

在`location`块中，我们还为代理设置了一些HTTP头，以便后端服务器可以获取客户端的真实IP和来源地址。

需要注意的是，这个例子只涉及一个简单的反向代理配置。如果要添加多个反向代理服务器，还需要进一步进行配置。例如，在配置文件中添加多个`upstream`块，每一个都包含自己的服务器列表。在location指令中，可以使用不同的proxy_pass指令来指定不同的反向代理规则，以实现更为复杂的流量分发策略。