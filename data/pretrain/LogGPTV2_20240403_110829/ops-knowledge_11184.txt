Question: In the context of WebAssembly, how does the structured control flow contribute to the safety and isolation of code execution, and what is the role of bounds-checking in memory operations?
"A": "WebAssembly's structured control flow ensures that at any point within a function, the number of runtime stack values is known, allowing compile-time checks for stack access and preventing jumps to misaligned code.",
"B": "Bounds-checking in memory operations ensures that any access to global variables or heap memory is within the limits of the allocated memory space, preventing state corruption outside of the module.",
"C": "Structured control flow in WebAssembly allows for dynamic checking of stack depth during runtime, which ensures that all local and global variable accesses are within bounds.",
"D": "Bounds-checking is unnecessary in WebAssembly memory operations as the WebAssembly virtual machine inherently prevents any out-of-bounds memory access without additional validation."
Answer: AB