---
## Page 139
Note:
Example:
 Given an array of strings, group anagrams together.
题目
49. Group Anagrams
● All inputs will be in lowercase.
Output:
Input: ["eat", "tea", "tan", "ate", "nat", "bat"],
The order of your output does not matter.
["bat"]
["ate","eat","tea"],
["nat","tan"],
halfColumn := column / 2 
//rotate by vertica］ centerline 竖直轴对称翻转
column := len(matrix[0])
if row > &res)
int n;
*row = (*row)[:len(*row)-1]
(*dia2)[index-i+n-1] = false
(*dial)[index+i] = false
(*col)[i] = false 
putQueen(n, index+l, col, dial, dia2, row, res)
string getNq(int p)
(*dia2)[index-i+n-l] = true 
(*dial)[index+i] :
(*col)[i] = true
二进制操作法
s[p] = 'Q';
string s(n,
return s;
'.');
= true 
---
## Page 145
queens attack each other. 
The n-queens puzzle is the problem of placing n queens on an nxn chessboard such that no two 
52. N-Queens Il
题目
=
二
川
川
/
/
/
/
7
//／／／／／／／／/
}；
/ public:
 vector > solveNQueens(int n)
return res;
nQueens(O,0,O,0，res);
vector> res;
this->n = n; 
int mask = l| m l r;
(= ans;
for
if(!(mask & b))
（int i = O， b = l; i > 1，m | b，(r ｜ b) 
1)
２
3
寸
5
9
7
8
---
## Page 146
代码
解题思路
给定一个整数n，返回n皇后不同的解决方案的数量。
题目大意
Example:
 Given an integer n, return the number of distinct solutions to the n-queens puzzle.
·这一题也可以暴力打表法，时间复杂度为 O(1)。
·这一题是第51题的加强版，在第 51题的基础上累加记录解的个数即可。
// 尝试在一个n皇后问题中，摆放第index行的皇后位置
make([]bool, 2*n-1)， []int{},0 
func totalNQueensl(n int) int {
//解法二，DFS 回溯法
func totalNQueens(n int) int {
//解法一，暴力打表法 
package leetcode
oelow.
Explanation: There are two distinct solutions to the 4-queens puzzle as shown
Output:2
Input: 4
 putQueen52(n, 0, &col,&dia1,&dia2,&row, &res)
 col, dial, dia2, row, res := make([]bool,n), make([]bool,2*n-1)
["..Q.",
[".Q..",
return res 
return res[n]
res := []int{0,1,0,0,2,10,4,40, 92, 352,724}
"...Q",
"Q...",
"..Q."]
"Q..."
...Q",
// solution 2
// Solution 1
---
## Page 147
/
((rightDiagonal|curPos)>>1)&bit,ans); 
/
川
川
/
川
二
this queen 
7
/
/
/
川
// class Solution {
//解法三二进制位操作法
func putQueen52(n, index int, col, dia1, dia2 *[]bool, row *[]int, res *int) {
7
return
for i := O; i  0]，dp[i] =