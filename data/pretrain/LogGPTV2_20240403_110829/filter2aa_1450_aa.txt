DEF CON 18 
“This is not the droid you’re looking for…” 
Nicholas J. Percoco & Christian Papathanasiou  
Copyright Trustwave 2010 
Agenda 
•  About Us / Introduction 
•  Introduction to Android 
•  Motivations Behind this Work 
•  Building a Linux Kernel Rootkit 
•  Overcoming Hurdles 
•  Introducing Mindtrick – The Android rootkit 
•  Live Demo 
•  Current Prevention 
•  Conclusions 
Copyright Trustwave 2010 
About Us 
Nicholas	
  J.	
  Percoco	
  /	
  Senior	
  Vice	
  President	
  at	
  Trustwave	
• 
15	
  Years	
  in	
  InfoSec	
  /	
  BS	
  in	
  CompSci	
• 
Built	
  and	
  Lead	
  the	
  SpiderLabs	
  team	
  at	
  Trustwave	
• 
Interests:	
− 
Targeted	
  Malware,	
  AFack	
  PrevenHon,	
  Mobile	
  Devices	
• 
Business	
  /	
  Social	
  Impact	
  Standpoint	
Chris0an	
  Papathanasiou	
  /	
  Security	
  Consultant	
  at	
  Trustwave	
• 
8	
  Years	
  in	
  InfoSec	
  /	
  MSc	
  in	
  InfoSec	
  /	
  MEng	
  in	
  ChemEng	
• 
Interests:	
− 
Rootkits/AnH-­‐Rootkit	
  detecHon,	
  Algorithmic	
  Trading,	
  and	
  Web	
ApplicaHon	
  Security	
Copyright Trustwave 2010 
Introduction 
•  Android	
  is	
  a	
  so7ware	
  stack	
  for	
  mobile	
  devices	
•  60,000	
  phones	
  running	
  Android	
  ship	
  every	
  day	
•  Ranks	
  4th	
  most	
  popular	
  smart	
  phone	
  device	
  plaSorm	
•  Not	
  much	
  research	
  around	
  rootkits	
  on	
  mobile	
  devices	
•  Android	
  ==	
  Linux	
  ==	
  almost	
  20	
  yr	
  old	
  Open	
  Source	
  OS	
•  Very	
  established	
  body	
  of	
  knowledge	
  in	
  Linux	
  Rootkits	
•  We	
  created	
  a	
  kernel-­‐level	
  Android	
  rootkit	
•  Loadable	
  Kernel	
  Module	
•  AcHvated	
  via	
  a	
  Trigger	
  number	
Copyright Trustwave 2010 
Introduction to Android – The Model 
Source:	
  Google	
Copyright Trustwave 2010 
Introduction to Android – Linux Kernel 
•  Based	
  upon	
  the	
  Linux	
  2.6.x	
  kernel	
•  Hardware	
  AbstracHon	
  Layer	
•  Oﬀers:	
•  Memory	
  Management	
•  Process	
  Management	
•  Security	
•  Networking	
•  Android	
  PlaSorm	
  sits	
  atop	
  of	
  the	
  Kernel	
•  This	
  is	
  where	
  our	
  rootkit	
  lives	
  (more	
  later…)	
Copyright Trustwave 2010 
Introduction to Android – Libraries  
•  Libraries	
  ==	
  Most	
  of	
  Android’s	
  Core	
  Func0onality	
•  Libraries	
  of	
  most	
  Interest:	
•  SQLite	
  –	
  main	
  storage/retrieval	
  (calls/SMS	
  records)	
•  Webkit	
  –	
  browser	
  funcHonality	
•  SSL	
  –	
  crypto	
•  Ideas/Hints:	
•  What	
  if	
  you	
  can	
  read	
  SMS	
  messages?	
•  How	
  about	
  intercepHng	
  browser	
  sessions?	
•  Can	
  you	
  hook	
  the	
  PRNG	
  with	
  staHc	
  low	
  numbers?	
Copyright Trustwave 2010 
Introduction to Android – Runtime 
•  Android’s	
  Run0me	
  Environment	
  ==	
  Dalvik	
  VM	
•  What	
  is	
  Dalvik?	
•  Virtual	
  Machine	
  on	
  Android	
  Devices	
•  Runs	
  applicaHons	
  converted	
  into	
  .dex	
  format	
•  The	
  “Dalvik	
  Executable”	
  is	
  for	
  systems	
  that	
  have	
  low:	
•  Memory	
•  Processor	
  Speed	
•  We	
  didn’t	
  spend	
  much	
  0me	
  here…	
Copyright Trustwave 2010 
Introduction to Android – Application 
•  Applica0on	
  Framework	
•  Core	
  User	
  FuncHonality	
•  Used	
  by	
  the	
  ApplicaHons	
•  Applica0ons	
•  This	
  is	
  where	
  the	
  User	
  ApplicaHons	
  live	
•  Either	
  come	
  installed	
  with	
  the	
  Phone,	
  Downloaded	
  from	
Android	
  Market	
  or	
  self-­‐installed	
•  Again,	
  we	
  didn’t	
  spend	
  much	
  0me	
  here…	
Copyright Trustwave 2010 
Introduction to Android – Other Notes 
•  All	
  Applica0ons	
  and	
  User	
  Ac0vity	
  U0lizes	
  Linux	
•  I/O	
  with	
  Hardware	
•  By	
  hijacking	
  Linux	
  Kernel,	
  you	
  “own”	
  all	
  other	
  layers	
•  Modify	
  phone	
  behavior	
  at	
  will	
•  Complete	
  end-­‐user	
  abstrac0on	
  is	
  a	
  Usability	
  Advantage	
•  	
  Complete	
  end-­‐user	
  abstrac0on	
  is	
  a	
  Security	
  Disadvantage	
•  A	
  successful	
  aFack	
  just	
  needs	
  to	
  subvert	
  to	
  ApplicaHon	
  Layer,	
since	
  the	
  end-­‐user	
  doen’t	
  look	
  below	
  it	
•  Even	
  if	
  the	
  aFack	
  causes	
  a	
  performance	
  issues,	
  the	
  end-­‐user	
  will	
just	
  call	
  it	
  a	
  “bug”	
  and	
  reboot	
  the	
  phone.	
Copyright Trustwave 2010 
Motivations Behind this Work 
•  As	
  of	
  Q4	
  2009,	
  485	
  million	
  devices	
  on	
  3G	
  networks	
•  By	
  2020,	
  there	
  will	
  be	
  10	
  billion	
  devices	
•  60%	
  of	
  all	
  users	
  carry	
  their	
  devices	
  with	
  them	
  at	
  ALL	
  0mes	
•  For	
  high-­‐proﬁle	
  and	
  business	
  folks	
  that	
  is	
  near	
  100%	
•  A	
  typical	
  smartphone	
  today,	
  has	
  the	
  same	
  processing	
  power	
as	
  a	
  PC	
  from	
  8	
  years	
  ago,	
  plus:	
•  Always-­‐on	
  network	
  connecHvity	
•  LocaHons	
  aware	
  thanks	
  to	
  GPS	
Copyright Trustwave 2010 
Motivations Behind this Work (cont’d) 
•  Users	
  accessing	
  highly	
  sensi0ve	
  informa0on	
  via	
  smartphones	
is	
  the	
  norm	
•  Users	
  trust	
  a	
  smartphone	
  over	
  a	
  public	
  computer	
  or	
  kiosk	
•  Never	
  quesHon	
  their	
  smartphones	
  integrity	
•  Communica0on	
  Services	
  Providers	
  (CSPs)	
  must	
  allow	
  for	
governments	
  to	
  access	
  subscribers	
  communica0ons	
•  Case:	
  In	
  the	
  UAE,	
  EHsalat	
  pushed	
  a	
  “performance	
  update”	
to	
  all	
  their	
  Blackberry	
  subscribers.	
•  Reality:	
  Malware	
  was	
  intenHonally	
  pushed	
  down	
  to	
  allow	
intercepHon	
  of	
  data	
  communicaHons.	
Copyright Trustwave 2010 
Motivations Behind this Work (cont’d) 
•  What	
  we	
  are	
  NOT	
  doing	
  here:	
•  Developing	
  a	
  new	
  aFack	
  vector	
  to	
  get	
  our	
  payload	
  on	
  the	
phone	
•  Just	
  wait	
  a	
  few	
  weeks/months	
  and	
  there	
  will	
  be	
  one…	
•  *cough*	
  Adobe	
  Flash	
  /	
  Acrobat	
  Reader	
  *cough*	
•  Malicious	
  App	
•  We	
  chose	
  Android,	
  because	
  it	
  runs	
  Linux	
•  Everyone	
  can	
  access	
  the	
  source	
  code	
•  No	
  personal	
  issues	
  with	
  Google	
  or	
  Android	
•  Great	
  OS,	
  Great	
  Phones,	
  Great	
  Apps	
Copyright Trustwave 2010 
Building a Linux Rootkit 
•  Loadable	
  Kernel	
  Modules	
  (LKMs)	
  allow	
  OS	
  kernel	
  to	
  be	
extended	
  dynamically.	
•  LKMs	
  has	
  the	
  same	
  capabili0es	
  as	
  code	
  in	
  the	
  kernel	
•  System	
  Calls	
  are	
  used	
  e.g.,	
  for	
  ﬁle,	
  process,	