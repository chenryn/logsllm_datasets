title:Before Toasters Rise Up: A View into the Emerging IoT Threat Landscape
author:Pierre-Antoine Vervier and
Yun Shen
Before Toasters Rise Up: A View into the
Emerging IoT Threat Landscape
Pierre-Antoine Vervier1(B) and Yun Shen2
1 Symantec Research Labs, Sophia Antipolis, France
pierre-antoine PI:EMAIL
2 Symantec Research Labs, Reading, UK
yun PI:EMAIL
Abstract. The insecurity of smart Internet-connected or so-called
“IoT” devices has become more concerning than ever. The existence
of botnets exploiting vulnerable, often poorly secured and conﬁgured
Internet-facing devices has been known for many years. However, the
outbreak of several high-proﬁle DDoS attacks sourced by massive IoT
botnets, such as Mirai, in late 2016 served as an indication of the poten-
tial devastating impact that these vulnerable devices represent. Since
then, the volume and sophistication of attacks targeting IoT devices have
grown steeply and new botnets now emerge every couple of months.
Although a lot of research is being carried out to study new spurs of
attacks and malware, we still lack a comprehensive overview of the cur-
rent state of the IoT thread landscape. In this paper, we present the
insights gained from operating low- and high-interaction IoT honeypots
for a period of six months. Namely, we see that the diversity and sophisti-
cation of IoT botnets are both growing. While Mirai is still a dominating
actor, it now has to coexist with other botnets such as Hajime and IoT
Reaper. Cybercriminals also appear to be packing their botnets with
more and more software vulnerability exploits targeting speciﬁc devices
to increase their infection rate and win the battle against the other com-
peting botnets. Finally, while the IoT malware ecosystem is currently
not as sophisticated as the traditional one, it is rapidly catching up. We
thus believe that the security community has the opportunity to learn
from passed experience and act proactively upon this emerging threat.
1 Introduction
Over the last few years, security, or lack thereof, in the world of smart Internet-
connected (or Internet of Things, IoT) devices has raised a lot of attention and
concerns. In late 2016, several massive and high-proﬁle DDoS attacks originated
from a botnet of compromised devices, such as IP cameras and home routers,
have taken part of the Internet down [7]. Although it was known for many years
that there exists a lot of poorly conﬁgured Internet-facing IoT devices with
default credentials or outdated ﬁrmware making them vulnerable to full device
takeover, the high-proﬁle attacks really revealed the destructive potential an
army of such devices represent when used in a coordinated fashion.
c(cid:2) Springer Nature Switzerland AG 2018
M. Bailey et al. (Eds.): RAID 2018, LNCS 11050, pp. 556–576, 2018.
https://doi.org/10.1007/978-3-030-00470-5_26
A View into the Emerging IoT Threat Landscape
557
There is a number of existing research work [7,14,18,23,30,31] that looked
into these increasing threats.The most notable work is probably Antonakakis et
al.’s forensic analysis of the Mirai botnet in 2017 [7]. Indeed, this study pro-
vides a very detailed description of the operations and evolution of the infamous
botnet over a period of about one year. While this work provides an unprece-
dented understanding into this major IoT threat, we have seen that Mirai and its
close variants only account for a limited set of IoT botnets. Additionally, Cozzi
et al. [14] studied Linux malware but focused on their system-level behaviour.
Others have proposed techniques to build honeypots to study IoT threats but
these suﬀer from intrinsic limitations. For example, IoTCandyJar [23] requires
active scanning of real IoT devices and replay parts of real attacks against these
devices to build realistic models of real-device interactions. Siphon [18] relies on
real devices to build high-interaction honeypots but lacks a proper instrumen-
tation mechanism and suﬀer from scalability issues. Finally, IoTPot [30] by Pa
et al. combine low-interaction honeypots with sandbox-based high-interaction
honeypots but limit themselves to monitor telnet-based attacks. The analysis
of IoT threats from these honeypot-based studies thus bears some limitations
from their design. All this motivated us to carry out a global study of the IoT
threat landscape. Our ultimate goal is to better answer the following questions.
What are the IoT threats we currently observe in the wild? What is the attackers’
modus operandi to penetrate, infect and monetise IoT devices? How is the IoT
threat landscape evolving?
To help answer these questions, we designed an experimental environment
speciﬁcally tailored for the study of the IoT threat landscape combining low-
and high-interaction honeypots. We leverage embedded device ﬁrmware emu-
lation techniques [11,13] to build high-interaction honeypots and show that it
enables us to overcome major limitations in previous deployments, such as the
instrumentation of the honeypots, while assuring a highly accurate real device-
like interaction with attackers. We then present the results of the analysis of six
months of data collected from our honeypots. We take a look at the three main
stages of IoT device compromise - intrusion, infection and monetisation - and
present our ﬁndings. For example, we see that while the Mirai botnet and its
variants appear to be dominating the IoT threat landscape, other botnets like
IoT Reaper and Hajime are ﬁghting to grow and compromise as many devices as
possible. We also see that IoT botnets are very dynamic, with rapidly changing
malware hosting infrastructure and malware polymorphism. They also evolve
very quickly due to, for instance, the source code release of some botnets, which
means that we have to continually monitor them to detect when their behaviour
changes and adapt our mitigation strategy. Finally, we observe a worrying trend
of more and more IoT botnets leveraging a myriad of software vulnerabilities in
speciﬁc devices to compromise them.
It is important to mention that such a work is not meant to be an one-oﬀ
study but should rather be repeated over time to closely monitor the evolution
of the threat landscape, that is, track existing and new botnets so as to adapt
our intrusion detection and infection mitigation strategies.
558
P.-A. Vervier and Y. Shen
1. Data collection
Netgear WNAP320
DLink 850L
(home router)
(home router)
Firmware FS
Firmadyne
Firmware FS
Firmadyne
Brickcom CB-100AP
(IP camera)
Firmware FS
Generic kernel
Qemu
High-interaction 
honeypots
Host
Host
Host
Host
Host
Host
Host
Docker
Docker
Docker
Docker
Low-interaction 
honeypots
Cowrie, Glutton, Telnet-iot-honeypot, Mtpot,
Dionaea, Honeything, Conpot
2. Data enrichment
Large feed 
aggregator
(Symantec)
Shodan
VirusTotal
Snort IDS
Port scanning
Banner grabbing
IP/domain
reputation
Binary
report
NIDS
signatures
Logs
Attack 
sources
Device 
Attack sources
Malware download servers
C&C servers
Reputation 
analysis
Binaries
PCAP
Malware 
analysis
analysis
Fig. 1. Experimental environment for the study of the IoT threat landscape.
2 Data Collection Infrastructure
Studying the threat landscape in the world of smart Internet-connected (or IoT)
devices is a very wide and complex task. IoT encompasses a lot of diﬀerent types
of devices, e.g., smart televisions, surveillance systems, connected vehicles, water
plant pumps, that can be deployed in a large variety of environments, e.g., smart
home and factories. Monitoring all these devices to detect potential compromise
would be ideal but is of course infeasible. Indeed many of these devices, like
industrial control systems, are deployed in very specialised environments and are
also known to run on exotic and often proprietary hardware architectures and
operating systems. These barriers thus makes it very hard to study the security
of these devices. There is however a corpus of devices that run on commodity
hardware and lightweight Linux-based operating systems. Such devices include,
for instance, some home routers, IP cameras, smart televisions, DVRs and many
more. These devices represent only a fraction of all the so-called “IoT” devices
but, interestingly, they have been increasingly involved in cyber hazards over the
last few of years due to ﬂawed manufacturing and poor security conﬁgurations.
Yet they are massively available in the consumer market.
Data Collection. Motivated by this, we thus decided to focus on the threats
targeting these Linux-based IoT devices in this work. We deployed a set of
honeypots mimicking various functionalities of some devices in order to observe
three aspects of IoT attacks. That is, (i) the reconnaissance or intrusion phase,
where attackers attempt to penetrate the defences of a device. (ii) The infection
phase, where attackers usually take full control over the device and prepare it for
whatever it is supposed to be used. (iii) Finally, the monetisation phase starts
when the attackers use the compromised device for other nefarious purposes,
such as infecting other devices, launching DDoS attacks, etc.
Figure 1 depicts the data collection and enrichment infrastructure we
designed, deployed and have been operating since August 2017. The data
A View into the Emerging IoT Threat Landscape
559
collection part consists of seven diﬀerent open-source low-interaction honeypots1.
Each honeypot is running inside a docker container to isolate it from the host
and easily manage how network traﬃc ﬂows between the host and the honeypot-
emulated services. The main advantage of these low-interaction honeypots is
that they are very straightforward to deploy thus allowing to collect IoT-related
threat data very quickly. These honeypots aim at tricking attackers into infect-
ing them by oﬀering a very basic interaction for various services/applications,
such as a telnet remote management interface, a FTP server or an embedded
web interface. Since the interaction is purposely generic, i.e., independent of a
speciﬁc device, and completely hard-coded into the honeypot, attackers can take
advantage of this to detect them by performing some speciﬁc checks. These hon-
eypots are also unable to observe the monetisation phase as their functionalities
do not enable them to get compromised.
To overcome the limitations of the low-interaction honeypots, we decided
to explore the design and deployment of high-interaction IoT honeypots. As
described in Sect. 4, diﬀerent techniques have already been proposed to build a
high-interaction IoT honeypot. Having considered the diﬀerent previously pro-
posed techniques, we realised that none of them provided the required amount
of ﬂexibility, scalability and ease of deployment. To this end, we leveraged two
diﬀerent techniques to build our emulated high-interaction honeypots. The ﬁrst
technique we used is an open-source ﬁrmware emulation framework called Fir-
madyne [11], which enables emulation of Linux-based systems by extracting the
operating system from ﬁrmware images and running it with a generic kernel
inside the QEMU virtualiser. It enables us to emulate the network-facing services
provided by the devices, such as a telnet service, a web server, etc. However,
Firmadyne requires the whole operating system (except the kernel) to be embed-
ded in the ﬁrmware images for the emulation to work. Moreover, many device
operating systems appear to be tightly bound to their hardware architecture,
preventing the system from being successfully emulated when, for instance, the
system seeks access to speciﬁc hard-coded memory addresses. This limitation
also appears to aﬀect certain types of devices, e.g., IP cameras, more than oth-
ers, e.g., home routers. We thus decided to leverage another technique borrowed
from [13], which consists of extracting the ﬁle system from ﬁrmware images and
running the speciﬁc services we are interested in, such as a web server, inside
a chroot environment on a QEMU-virtualised generic operating system of the
same architecture as the real device.
We built one high-interaction honeypot for the Netgear WNAP320 (home
router) and the DLink 850L (home router) using Firmadyne and one for the
1 Glutton: https://github.com/mushorg/glutton
Cowrie: https://github.com/micheloosterhof/cowrie
Telnet-IoT-honeypot: https://github.com/Phype/telnet-iot-honeypot
MTPot: https://github.com/Cymmetria/MTPot
Honeything: https://github.com/omererdem/honeything
Dionaea: https://github.com/DinoTools/dionaea
Conpot: https://github.com/mushorg/conpot.
560
P.-A. Vervier and Y. Shen
Brickcom CB-100AP (IP camera) using the “chroot” technique. Since these hon-
eypots run on emulated ﬁrmware images, we instrument them by reseting them
to their original, clean state every hour.
We thus operate a total of 10 diﬀerent honeypots - seven low-interaction ones
and three high-interaction ones - oﬀering a total of 15 diﬀerent services on 26
ports. We also collect all incoming and outgoing traﬃc (the outgoing traﬃc from
high-interaction honeypots is blocked on ports known to be used for scanning and
rate-limited otherwise so that they do not involuntarily attack or scan other real
devices on the Internet). Each honeypot is deployed on two diﬀerent network
infrastructures, namely a large cloud infrastructure that publishes its cloud-
reserved IP address ranges and a tier-3 ISP cloud and hosting infrastructure.
Finally, the honeypots are deployment over a set of 76 IP addresses located in
six diﬀerent countries and spanning two continents.
Data Enrichment. As depicted in Fig. 1 the data enrichment part of our frame-
work essentially consists of two tasks: (i) enrich the logs generated by and the
ﬁles dropped on the honeypots, and (ii) process the network traﬃc captured at
the honeypots to extract additional attack logs and ﬁles generated by attackers.
More speciﬁcally, we extract information about devices our honeypots interact
with from Shodan [1] and an IP and domain reputation feed. Furthermore, we
retrieve binary reports about ﬁles dropped on the honeypots from VirusTotal [2]
and run the Snort IDS with the subscription rules to help us label the collected
network traﬃc.
3 Insights into the IoT Threat Landscape
In this section we present the results obtained by analysing the data collected
from our honeypot deployment over a period of six months between August
2017 and February 2018. This data consists of (i) enriched logs produced by the
diﬀerent honeypots, (ii) raw network traﬃc and (iii) ﬁles dropped by attackers.
3.1
IoT Device Reconnaissance and Intrusion
First, let us look at how attackers penetrate IoT devices in order to further com-
promise and monetise them. We have recorded a total of 37,360,767 connections
to our honeypots from 1,586,530 unique IP addresses over the six month period.
Additionally, our honeypots record peaks of up to 500K connections per day. It
is noteworthy to mention that, in an eﬀort to exclude as much as possible the
basic port scanning traﬃc (i.e., check if port is open/closed/ﬁltered), we con-
sider only fully-established TCP connections or at least two-packet long UDP
connections. Comparably, previous IoT honeypot deployments reported about
70K telnet connections for IoTPot [30], 18M requests by IoTCandyJar [23] and
80K connections by the telnet honeypot used by Antonakakis et al. in their study
of the Mirai botnet [7].
A View into the Emerging IoT Threat Landscape
561
Looking at Attack Sources. First, we take a look at countries that originated
attacks against the honeypots. Surprisingly, more than one third of the attacks
originated from Brazil. Note that none of the honeypots are deployed in this
country and in the South American continent. Looking into more details at this
phenomenon, it turns out that no less than 25% of attacks come from one of
the biggest ISP in Brazil: Telefonica. Japan’s third place is also surprising and,
for the big part, attributable to the largest Japanese branch of the ISP NTT.
Interestingly, Antonakakis et al. [7] observed a similar distribution in their study
of Mirai with most bots concentrated in South America and East Asia. This
suggests that the issues aﬀecting these regions have yet to be resolved. Finally,
China, Russia and the United States together account for about 20% of attacks.
Now looking at the distribution of device types attacking our honeypots, we
see that networking devices, such as routers, DSL/cable modems, come ﬁrst sup-
posedly due to the fact that they are widespread and typically directly reachable
from the Internet. After networking devices our honeypots were heavily hit by
IP cameras, digital video recorders (DVRs) and alarm systems.
Finally, we extracted the IP-based reputation of attack sources from a large
feed aggregator at the time these IP addresses connected to the honeypots.
This reputation feed aggregates tens of blacklists describing diﬀerent malicious
activity, such as bot infections, spam, C&C server hosting, web-based attacks,
etc. More than two thirds of attack sources were not known to any blacklist
when we observed them for the ﬁrst time. Additionally, about 15% of attacking
IP addresses have been ﬂagged as compromised and already part of a botnet.
This last observation is consistent with the worm-like behaviour of IoT botnets
where compromised devices are trying to self-replicate themselves.
Scanned and Attacked Services. Looking at the distribution of connections
per service given in Table 1, we can see that telnet dominates with more than
65% of connections, followed by http accounting for about 22% of connections.
The remaining 13 decoy services represent a total of about 10% of connections.
This distribution is of course skewed towards some services, such as telnet or
http, which are provided by multiple of our honeypots while others, such as
modbus, bacnet or mqtt, are emulated by only one honeypot. We thus provide
the average number of connections per service, per day and per honeypot as a
metric of the popularity (or attractiveness) of a service to attackers/scanners.
With such a metric we can see that http ranks ﬁrst, closely followed by telnet
with an average of 5, 712.97 and 4, 733.02 daily connections respectively.
Since http and telnet are by far the most “attractive” and hit services at
our honeypots and that these services are often provided by Internet-connected
devices for remote administration, we decided to focus our investigation of IoT
device intrusion mechanisms with these services.
Telnet Access. As documented in [7,30] as well as in various blog posts [21],