 id |          crt_time            
----+----------------------------  
  1 | 2013-02-04 15:31:34.491555  
  2 | 2013-02-04 15:32:19.168515  
  3 | 2013-02-04 15:35:18.284565  
(3 rows)  
postgres=# select * from heap_page_items(get_raw_page('a',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1694 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1694 |      0 |        1 | (0,2)  |           2 |       2304 |     24 |        |        
  3 |   8072 |        1 |     40 |   1694 |      0 |        2 | (0,3)  |           2 |       2304 |     24 |        |        
  4 |   8032 |        1 |     40 |   1694 |      0 |        3 | (0,4)  |           2 |       2304 |     24 |        |        
(4 rows)  
postgres=# select * from heap_page_items(get_raw_page('b',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1695 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1697 |      0 |        0 | (0,2)  |           2 |       2560 |     24 |        |        
(2 rows)  
postgres=# select * from heap_page_items(get_raw_page('c',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1696 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1696 |      0 |        1 | (0,2)  |           2 |       2304 |     24 |        |        
  3 |   8072 |        1 |     40 |   1698 |      0 |        0 | (0,3)  |           2 |       2304 |     24 |        |        
(3 rows)  
```  
## 12  
还原到第7个还原点, recovery_target_inclusive = true  
recovery.conf  
```  
restore_command = 'cp /data05/ocz/pgbak/arch/%f %p'  
recovery_target_xid = '1697'  
recovery_target_inclusive = true  
recovery_target_timeline = 'latest'  
pause_at_recovery_target = false  
```  
启动后,  
```  
postgres=# create extension pageinspect;  
CREATE EXTENSION  
postgres=# select * from heap_page_items(get_raw_page('a',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1694 |      0 |        0 | (0,1)  |           2 |       2048 |     24 |        |        
  2 |   8112 |        1 |     40 |   1694 |      0 |        1 | (0,2)  |           2 |       2048 |     24 |        |        
  3 |   8072 |        1 |     40 |   1694 |      0 |        2 | (0,3)  |           2 |       2048 |     24 |        |        
  4 |   8032 |        1 |     40 |   1694 |      0 |        3 | (0,4)  |           2 |       2048 |     24 |        |        
(4 rows)  
postgres=# select * from heap_page_items(get_raw_page('b',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1695 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1697 |      0 |        0 | (0,2)  |           2 |       2048 |     24 |        |        
(2 rows)  
postgres=# select * from heap_page_items(get_raw_page('c',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1696 |      0 |        0 | (0,1)  |           2 |       2048 |     24 |        |        
  2 |   8112 |        1 |     40 |   1696 |      0 |        1 | (0,2)  |           2 |       2048 |     24 |        |        
  3 |   8072 |        1 |     40 |   1698 |      0 |        0 | (0,3)  |           2 |       2048 |     24 |        |        
(3 rows)  
postgres=# select * from a;  
 id |          crt_time            
----+----------------------------  
  1 | 2013-02-04 15:30:44.091741  
  2 | 2013-02-04 15:31:19.57222  
  3 | 2013-02-04 15:32:00.226317  
  4 | 2013-02-04 15:34:35.589298  
(4 rows)  
postgres=# select * from b;  
 id |         crt_time            
----+---------------------------  
  1 | 2013-02-04 15:31:05.93215  
(1 row)  
postgres=# select * from c;  
 id |          crt_time            
----+----------------------------  
  1 | 2013-02-04 15:31:34.491555  
  2 | 2013-02-04 15:32:19.168515  
  3 | 2013-02-04 15:35:18.284565  
(3 rows)  
postgres=# select * from heap_page_items(get_raw_page('a',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1694 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1694 |      0 |        1 | (0,2)  |           2 |       2304 |     24 |        |        
  3 |   8072 |        1 |     40 |   1694 |      0 |        2 | (0,3)  |           2 |       2304 |     24 |        |        
  4 |   8032 |        1 |     40 |   1694 |      0 |        3 | (0,4)  |           2 |       2304 |     24 |        |        
(4 rows)  
postgres=# select * from heap_page_items(get_raw_page('b',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1695 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1697 |      0 |        0 | (0,2)  |           2 |       2560 |     24 |        |        
(2 rows)  
postgres=# select * from heap_page_items(get_raw_page('c',0));  
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid   
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------  
  1 |   8152 |        1 |     40 |   1696 |      0 |        0 | (0,1)  |           2 |       2304 |     24 |        |        
  2 |   8112 |        1 |     40 |   1696 |      0 |        1 | (0,2)  |           2 |       2304 |     24 |        |        
  3 |   8072 |        1 |     40 |   1698 |      0 |        0 | (0,3)  |           2 |       2304 |     24 |        |        
(3 rows)  
```  
## 时间recovery_target_time作为还原目标点  
说明 :   
1\. 注意前面提到的结束点在COMMIT, ABORT, RESTORE_NAME三种XlogRecord中选择。  
2\. 时间作为还原目标时, 也可以同时设置recovery_target_inclusive参数.  
src/backend/access/transam/xlog.c  
```  
                /*  
                 * There can be many transactions that share the same commit time, so  
                 * we stop after the last one, if we are inclusive, or stop at the  
                 * first one if we are exclusive  
                 */  
                if (recoveryTargetInclusive)  
                        stopsHere = (recordXtime > recoveryTargetTime);  
                else  
                        stopsHere = (recordXtime >= recoveryTargetTime);  
                if (stopsHere)  
                        *includeThis = false;  
```  
3\. 与recovery_target_time进行比较的XLogRecord中的时间来自以下数据结构的xact_time或者还原点的创建时间 :   
src/include/access/xact.h  
```  
typedef struct xl_xact_commit_compact  
{  
        TimestampTz xact_time;          /* time of commit */  
        int                     nsubxacts;              /* number of subtransaction XIDs */  
        /* ARRAY OF COMMITTED SUBTRANSACTION XIDs FOLLOWS */  
        TransactionId subxacts[1];      /* VARIABLE LENGTH ARRAY */  
} xl_xact_commit_compact;  
typedef struct xl_xact_commit  
{  
        TimestampTz xact_time;          /* time of commit */  
        uint32          xinfo;                  /* info flags */  
        int                     nrels;                  /* number of RelFileNodes */  
        int                     nsubxacts;              /* number of subtransaction XIDs */  
        int                     nmsgs;                  /* number of shared inval msgs */  
        Oid                     dbId;                   /* MyDatabaseId */  
        Oid                     tsId;                   /* MyDatabaseTableSpace */  
        /* Array of RelFileNode(s) to drop at commit */  
        RelFileNode xnodes[1];          /* VARIABLE LENGTH ARRAY */  
        /* ARRAY OF COMMITTED SUBTRANSACTION XIDs FOLLOWS */  
        /* ARRAY OF SHARED INVALIDATION MESSAGES FOLLOWS */  
} xl_xact_commit;  
typedef struct xl_xact_abort  
{  
        TimestampTz xact_time;          /* time of abort */  
        int                     nrels;                  /* number of RelFileNodes */  
        int                     nsubxacts;              /* number of subtransaction XIDs */  
        /* Array of RelFileNode(s) to drop at abort */  
        RelFileNode xnodes[1];          /* VARIABLE LENGTH ARRAY */  
        /* ARRAY OF ABORTED SUBTRANSACTION XIDs FOLLOWS */  
} xl_xact_abort;  
```  
4\. 创建还原点的时间记录在这里 :   
src/backend/access/transam/xlog.c  
```  
/* logs restore point */  
typedef struct xl_restore_point  
{  
        TimestampTz rp_time;  
        char            rp_name[MAXFNAMELEN];  
} xl_restore_point;  
```  
5\. 在recoveryStopsHere中为时间点还原准备的时间逻辑如下 :   
```  
        if (record->xl_rmid == RM_XACT_ID && record_info == XLOG_XACT_COMMIT_COMPACT)  
        {  
                xl_xact_commit_compact *recordXactCommitData;  
                recordXactCommitData = (xl_xact_commit_compact *) XLogRecGetData(record);  
                recordXtime = recordXactCommitData->xact_time;  
        }  
        else if (record->xl_rmid == RM_XACT_ID && record_info == XLOG_XACT_COMMIT)  
        {  
                xl_xact_commit *recordXactCommitData;  
                recordXactCommitData = (xl_xact_commit *) XLogRecGetData(record);  
                recordXtime = recordXactCommitData->xact_time;  
        }  
        else if (record->xl_rmid == RM_XACT_ID && record_info == XLOG_XACT_ABORT)  
        {  
                xl_xact_abort *recordXactAbortData;  
                recordXactAbortData = (xl_xact_abort *) XLogRecGetData(record);  
                recordXtime = recordXactAbortData->xact_time;  
        }  
        else if (record->xl_rmid == RM_XLOG_ID && record_info == XLOG_RESTORE_POINT)  
        {  
                xl_restore_point *recordRestorePointData;  
                recordRestorePointData = (xl_restore_point *) XLogRecGetData(record);  