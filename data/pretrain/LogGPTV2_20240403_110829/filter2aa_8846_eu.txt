③控制规范开发 Control specifications development。研究提出实现所有安全功能的
系统开发的方法规范。
④设计评审 Design review。上面的②是功能规格，③是控制规格，之后就是写代码做开
发。等设计团队搞完了，就要开评审会议了，确保开发的方向正确。
⑤代码走查 Code review walk-through。编码设计的各个阶段都要安排几次代码走查，
这些技术会议只组织开发人员，对特定的代码进行走查，寻找逻辑错误或其他设计/安全缺陷。
⑥用户验收测试 System test review。交房、验房、收房。
⑦维护和变更管理 Maintenance and change management。系统已经部署使用了。
重点了解下面这个流程：
在 CBK 里是这么写的，一般包括 7 个基本阶段和 2 个附加阶段：
①项目启动与规划 initiation。（系统建设与安全建设要同步规划、同步实施）
②功能需求定义 functional requirement definition。
③系统设计规范/规格说明（建模）system design specification。
④开发与实施 development and implementation。
⑤文档管理与版本控制 documentation and common program controls。
⑥测试和评估控制（认证与认可/认证与确证）testing and evaluation
controls(certification and accreditation/Verification and Validaion)。（不能用生产
数据，会泄密的）
⑦交付使用（部署上线）transition to production(implementatoin)。（开发、测试、
生产环境要互相物理隔离）
附加阶段，是系统生命周期（SLC）多出来的 2 个阶段，不是系统开发生命周期 SDLC：
⑧运行与维护支持（安装后）operation and maintenance。
⑨修订和系统升级 revisions and system replacement。
—236—
软件需求可以用 3 种模型来表示：
①信息模型。规定要处理的信息类型和处理方式。
②功能模型。概述应用程序需要执行的任务和功能。
③行为模型。解释在具体事务处理发生过程中和发生之后应用程序的状态。
2.软件开发生命周期(SDLC)模型 software development life cycle
SDLC 用来规范软件开发实践。很多模型是交叉的。模型是什么大类不重要，重要的是掌
握各种模型的优、缺点。
1.瀑布模型 Waterfall Model
按标准流程一步一步走，不能改顺序；上一步骤全部完成，才能进入下一个步骤；一个步
骤出问题，就回到上一步骤来纠正（即反馈回路特性 feedback loop characteristic）。
①螺旋模型 Spiral Model
一个瀑布式过程的多次选代，也可以封装许多其他模型，他被称为一个元模型，即“模型
的模型”，就是走完一个模型流程，再走一遍，每次有所改进就行了。它的特点是在时间轴上
的每一个阶段内，运用戴明环模型（PDCA）（计划-执行-检查-行动），突出风险评估，基于
风险评估对成本、计划等进行调整，并决定项目是继续还是取消。在每一个阶段内，也有运用
其它四个阶段的流程：制定计划、风险分析、开发和测试、客户评估。模型中的角度代表进步，
螺旋半径代表成本。
②净室模型
也是瀑布的一种，可用于控制软件缺陷，目标是初写的代码必须要完善无错，不在事后找
BUG。从安全角度看，前期充分考虑安全防护比后期附加保护的效果要好。
③V 型模型（总-分-总的瀑布）
V 型模型在瀑布模型之后出现，取代软件开发过程中扁平的线性方法，它与瀑布模型一样
按照顺序路径开发，每个阶段必须完成之后下个阶段才能开始，但成功概率更高。因为先从上
到下的细化设计，再从下到上的单元集成，每个阶段都要通过测试才行。
2.迭代开发/增量模型
纯瀑布模型是高度结构化的，不允许返回前一阶段再作更改。而迭代方法是不断改进完善
的，需要一个变更控制机制。
①原型：先构建一个简单的初始软件版本。
*快速原型/敏捷开发（RAD）：原型的一种特殊实现，在每个阶段有严格的时间限制，如
果决策变化太快，软件质量可能不够高。（这种原型用于演示，用完就丢，不作最终产品）
*改进的原型模型/演化原型（MPM）：原型的一种，用于 Web 应用开发，渐进式改进，非
常灵活。（实验室里开发的原型，测试后，将成为最终产品）
*运行原型：是演化原型方法的延伸，是已经安装部署在实际运行环境中的原型，微调后
即可继续使用在生产环境中，其软件变更都发生在工作场所。
②联合分析开发（JAD）：最初用于开发大型机系统，逐步演进为 RAD 模型、Web 开发模
型或其它模式的组成部分。它是一个管理过程，联合用户与开发人员协同工作，加强沟通，提
高功能的满足度。但大量的参与人员可能影响系统在安全设计方面的考虑。
③探索模型：综合考虑所有可能的需求来建立一个有前瞻性的系统，由于缺少结构化，安
—237—
全需求可能处于次要地位，一般有特殊要求时才考虑。
④敏捷软件开发 Agile Software Development
是一种以人为核心、迭代、循序渐过的开发方法，快速的灵活的开发方法，有很多变种模
型，是几个开发方法的总称。如：Scrum (迭代式增量软件开发过程)，敏捷统一过程(AUP)，
动态系统开发模型(DSDM)，和极限编程(XP)。它有 4 大特点：
1)实践检验，working software is the primary measure of progress；
2)简单高效，simplicity is essential；
3)绑定需求，business people and developers must work together daily；
4)当面沟通，the most efficient method of conveying information is face-toface。
⑤增量模型：类似于“多个瀑布”周期出现在同一个软件上，在开发阶段不断走向成熟。
使用增量模型时，每一个增量阶段都会产生一个可以交付、 可运行的产品。
3.其它方法和模型
也有软件开发方法不依赖迭代或不分块迭代，如：
①计算机辅助软件工程（CASE）：使用辅助工具软件来进行系统的分析、设计、开发、实
施和维护等，常用于大型系统开发。它为规划师、设计师、编码人员、测试人员等提供了个共
享资源、协同工作的机制。
②基于组件的开发：将功能拆分为组件进行编码并按标准进行封装，而不是单独开发某个
业务功能，可以节约成本、加快进度。从安全的角度看，当组件进行过安全测试后，可以被重
复使用。这与面向对象的编程（OOP）类似，设计对象和类时就要考虑安全因素，并实例化。
③重用模型：基于现有的组件来构建应用，该方法最适合用于面向对象开发的项目，因为
对象可以被导出、重用或者修改，并可基于已知的安全特性进行选择。
④极限编程（考点）：一种基于沟通和反馈的简单化的软件开发方法，它是一种相当结构
化的开发方法，依赖于子系统的功能限定、范围定义和结对编程。团队通过发布一系列小且集
成安全的软件来满足用户需求。
⑤有三种原型法，上面也讲过了：
快速原型法(rapid prototype /throwaway)：开发团队尽可能迅速的“粗制滥造”的开发
出原型用于测试，在掌握精细需求和确定高效方法后，这个原型一般就丢弃了。
进化式原型法(evolutionary prototype)：不断改进目标的方式进行开发，原型会持续改
进直到产品最后阶段。
操作原型(operational prototype)：是进化式原型的升级，也不断完善，但不是等交付
一个版本后来改进，而是边用编写，在生产中不断调整。
A.2 成熟度模型
1.软件能力成熟度模型 Software Capability Maturity Model
软件工程研究所(SEI)在卡内基梅隆大学介绍了软件能力成熟度模型，也被称为软件能力
成熟度模型(简称 SW-CMM，CMM 或者 SCMM) ，它的目的是帮助软件组织提高其软件过程的成熟
度和质量，从一个临时的、混乱的过程，通过一个渐进的路径实现成熟的、严格的软件过程。
因为软件质量取决于其开发过程的质量。此外，国际标准化组织（ISO）在其 ISO-9000 技术标
—238—
准族中对软件开发进行了规范，即 ISO/IEC 90003：2004，该标准为企业使用 ISO-9001：2000
时提供指南，其内容包括软件及相关服务的采购、供应、开发、操作和维护。
目前业内有几种不同的 CMM，容易使人混淆。CMMI 开发汇总了众多不同的成熟度模型，使
其可以用于一个框架之中,已经取代了 CMM。能力成熟度模型集成 CMMI(Capabi1ity Maturity
Model Integration)，集成了一整套产品和软件开发指南。它涉及软件开发生命周期的不同阶
段，包括概念定义、需求分析、设计、开发、集成、安装、操作、维护等阶段，以及每个阶段
应该做什么。可以根据该模型来评估安全工程实践并标识改进方法。客户也可以根据它来评估
软件供应商，最理想的情况是二者结合，即软件供应商使用该模型提升流程，而客户使用该模
型评估供应商的能力。
SW-CMM 的成熟度级别如下：IRDMO-初、重、定、管、优
*第一级：初始级 Initial。小作坊杂乱作业，没有定义软件开发过程。
*第二级：可重复级 Repeatable。有基本的项目管理制度，控制费用和时间，管理人员可
及时发现问题，采取措施。
*第三级：己定义级 Defined。有一套正式的、文档化的软件开发过程进行运作。所有开
发项目都在标准管理模型的约束下进行。SEI 定义这个级别的关键过程有：组织过程定义、组
织过程焦点、培训大纲、软件集成管理、软件产品工程、组织协调、专家评审等。
*第四级：己管理级 Managed。利用定量措施，以获得对开发过程的详细掌握和管控，包
括：定量过程管理和软件质量管理。
*第五级：优化级 Optimizing。开发过程不仅量化可控，还不断改进完善。
新的专门针对安全软件开发成熟度的模型有：
①SAMM，Software Assurance Maturity Model
②BSIMM：在成熟模型中构建安全 Building Security In Maturity Model
2.lDEAL 模型
—239—
软件工程研究中心也为软件工程开发了 IDEAL 模型，它实现了许多 SW-CMM 的属性，可以
用来做变更管理。它将开发模型和过程划分为五个阶段：
①I：启动阶段 Initiating。掌握业务需求，构建基础架构，筹备开发工作。
②D：诊断阶段 Diagnosing。分析组织当前的状况，并提出应对变化的建议。
③E：建立阶段 Establishing。采取上面的建议，计划并实施具体工作来应对变化。
④A：行动阶段 Acting。根据详细解决方案实施具体内容，如测试、提炼、实现等。
⑤L：学习阶段 Learning。持续分析它的效果，改进完善相关行动。
3.甘特图 Gantt Charts
甘特图是一种以条状图的方式表示特定项目和计划之间的时间关系。提供了一个图形化的
图标说明，有助于在项目中计划、协调和跟踪特定任务。就是纵向任务线、横向时间轴的项目
计划示意图。
4.计划评审技术(PERT) Program Evaluation Review Technique
(PERT)是一个项目调度工具，用来判断在开发软件产品和计算标准差(SD)时的风险评估方
法。PERT 近似的估算出三个时间值，即最短、最长和最有可能持续时间。PERT 被用来直接改
善项目管理和软件编码以制造更有效的软件。由于编程和管理能力提高，软件的实际生产花费
的时间应该是较小的。
A.3 操作与维护
在系统部署应用后，要监控系统性能并保证操作的连续性，包括：检测缺陷、管理和预防
—240—
故障、故障恢复以及系统变更改进等。安全性管控包括：测试备份与恢复机制、确保对数据的
处理正确无误、确保安全功能有效。
在维护阶段，发生重大变更时，要周期性的进行风险分析并对敏感应用重新认证，以验证
系统的安全功能未受影响，并指定专人对系统的功能和服务水平进行验证，确保系统满足使用
需求和安全基线。
A.4 变更管理
1.变更管理的工具软件
Tripwire，用来监测数据完整性的工具，可以辅助监控系统的变化。也可以将 Tripwire
的通知和告警信息集成到监控中心进行关联分析。
2.变更管理流程的三个基本组件：
变更控制（change control）是管理所有产品或系统变更的系统化方法。目的是确保不实
施没必要的变更、所有的变更都得到证明、服务不受不必要的干扰且资源都有效利用。在 IT
领域中，变更控制是变更管理（change management）的一部分。
①请求控制。Request Control provides a framework for user requests.
②变更控制。Change Control。控制变更使其符合质量要求，正确记录编码的任何变化等。
③发布控制。Release Control manages the deployment of code into production.在
发布新的软件之前，要进行双重检查，确保调试代码或后门都被清除，还要控制软件版本。
如果有变更实施了，影响了其它系统，就要实施配置管理 Configuration control 了，它
有四个主要组成部分：配置识别、配置控制、配置状态报告、配置审核。Configuration control
ensures that changes to software versions are made in accordance with the change and
configuration management policies.
3.变更管理的关键点是：
①必须有严格规范的过程管理，确保质量。
②必须按规定进行请示报批、测试和记录。
③必须有应急恢复措施以防变更失败。
4.变更的流程
①请求变更 Request。
②影响分析/影响评估 Impact Assessment
③审查变更 Review
④批准/不批准 Approve/reject/Approval/Disapproval
⑤构建和测试 Build and Test
⑥通知/通告 Notification