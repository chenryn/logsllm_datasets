title:A Qualitative Analysis of the Intrusion-Tolerance Capabilities of
the MAFTIA Architecture
author:Robert J. Stroud and
Ian S. Welch and
John P. Warne and
Peter Y. A. Ryan
A Qualitative Analysis of the Intrusion-Tolerance Capabilities of the
MAFTIA Architecture
Robert Stroud, Ian Welch1, John Warne, Peter Ryan,
School of Computing Science, University of Newcastle upon Tyne, UK
{R.J.Stroud, J.P.Warne, Peter.Ryan}@ncl.ac.uk
PI:EMAIL
Abstract
that explored the use of
MAFTIA was a three-year European research
project
fault-tolerance
techniques to build intrusion-tolerant systems. The
MAFTIA architecture embodies a number of key design
principles for building intrusion-tolerant systems,
such as the notion of distributing trust throughout the
system and limiting the extent to which individual
components are trusted, and the aim of this paper is
to illustrate these principles and demonstrate
MAFTIA's intrusion-tolerance capabilities by showing
how MAFTIA mechanisms and protocols might be
deployed in a realistic context. We discuss the
relationship between intrusion tolerance and fault
tolerance, and then describe how the MAFTIA
architecture could be used to build an intrusion-
hypothetical e-commerce
tolerant version of
a
application. Using fault
trees, we analyse possible
attack scenarios and show how MAFTIA mechanisms
protect against them. We conclude the paper with a
discussion of related work and identify areas for
future research.
1. Introduction
MAFTIA (Malicious
and Accidental Fault
Tolerance for Internet Applications) was a three-year
European research project funded as part of the IST
programme (IST-1999-11583) that ran from Jan 2000
to Feb 2003 and brought together experts in the fields
of dependability, fault tolerance, computer security,
distributed systems,
intrusion-detection systems,
cryptography, and formal methods [1]. MAFTIA
explored the use of fault-tolerance techniques to build
dependable systems that are intrusion tolerant, that is,
able to continue providing a secure service, despite the
1
Now at Victoria University of Wellington, New Zealand.
presence of  malicious faults, i.e., deliberate attacks on
the security of the system by both insiders and
outsiders. Such faults are perpetrated by attackers who
make unauthorised attempts to access, modify, or
destroy information in a system, and/or to render the
system unreliable or unusable. Attacks are facilitated
by vulnerabilities and a successful attack results in an
intrusion upon the system.
In general, an intrusion can result whenever an
attacker is successful in exploiting a vulnerability with
respect to any mechanism of a system. If that intrusion
is not tolerated, then this can lead to a failure of the
mechanism, which could in
turn introduce a
vulnerability in other parts of the system that depend
on the mechanism, allowing the original attack that
caused the intrusion to propagate further into the
system. An intrusion-tolerant system must be able to
continue to deliver a secure service, despite the
presence of intrusions, and thus, a “defence in depth”
strategy is needed to avoid depending on any particular
component of the system that could become a single
point of failure.
The MAFTIA project developed a variety of
protocols, mechanisms and tools that can be used in
combination to construct intrusion-tolerant systems,
including prototype implementations of two different
intrusion-tolerant group-communication protocols and
an intrusion-tolerant distributed authorisation service.
A MAFTIA system is designed to continue operating
securely despite the presence of intrusions. The damage
caused by each intrusion is contained, but MAFTIA
does not deal with fault
system
reconfiguration. However, the purpose of this paper is
not to provide an overview of MAFTIA’s technical
contributions, but rather to illustrate how MAFTIA
mechanisms might be applied in practice and to
demonstrate how techniques such as fault trees can be
used to animate a discussion of the intrusion-tolerance
removal or
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
capabilities of a system. We start by introducing some
of the key concepts and ideas  underpinning MAFTIA’s
approach to achieving intrusion tolerance, and then
show how MAFTIA mechanisms could be deployed in
a realistic context. We present  a MAFTIA version of a
simple e-commerce application, and use fault trees to
illustrate possible attack scenarios, which we analyse
qualitatively in order to highlight the obstacles that
must be overcome by the attacker and the assumptions
that underpin MAFTIA’s
intrusion-tolerance
capabilities. We conclude the paper with a brief
discussion of related work and identify areas for future
research.
2. The MAFTIA approach to building
intrusion-tolerant systems
In this section, we discuss the relationship between
fault tolerance and intrusion tolerance, and introduce
some of the key concepts and ideas underpinning
MAFTIA’s approach to achieving intrusion tolerance.
2.1. Preventing errors
security failures
from leading to
The MAFTIA conceptual model [2] introduces the
classical dependability concepts of fault, error, and
failure [3], and shows how they may be applied to
reasoning about prevention and tolerance mechanisms
aimed at ensuring system security. An error is the
manifestation of a fault on the system state and a
failure is the manifestation of an error on the service
delivered to the system user. An error can have
multiple causes. In particular, an error that could result
in a security failure is not necessarily the result of a
malicious fault – such an error could also result from
an accidental fault. This is the reason that MAFTIA
defines intrusion detection as the detection of errors
that can result in security failure rather than the
detection of errors that
from intrusions.
However, regardless of the cause, the system is still
liable to failure unless some step is taken to remove
the error from the system.
result
MAFTIA’s approach to error handling is to use
error-compensation techniques based on
active
replication and masking. Thus, Byzantine-agreement
protocols are at the heart of the intrusion-tolerance
mechanisms provided by MAFTIA. However, even
though Byzantine-agreement protocols are designed to
deal with arbitrary faults in the value and time domain,
they can only tolerate a certain number of  simultaneous
failures. In the presence of malicious faults and
deliberate attacks on systems, this is not a reasonable
assumption to make because an attacker might be able
to exploit a common vulnerability and corrupt more
than the threshold number of replicas simultaneously.
MAFTIA must therefore take steps to address this
problem by designing protocols that can tolerate more
realistic failure assumptions and by ensuring that
compromising one replica does not make it any easier
to compromise another. The standard way of reducing
the likelihood of an attacker being able to exploit a
common vulnerability is to make some assumption
about diversity, and thus, various forms of diversity
are an important part of any intrusion-tolerance
strategy. As an additional intrusion-tolerance strategy,
MAFTIA also seeks to minimise the extent to which
different parts of the system are trusted, so as to make
it harder for the effects of a successful intrusion to
propagate throughout the system. This is an example
of error confinement.
It is worth discussing briefly two other possible
methods of error handling, namely forward and
backward error-recovery. In principle, these techniques
could also be used for intrusion tolerance, but
in
practice, this is not straightforward for at
least two
reasons. Firstly, both methods depend on a reliable
error-detection mechanism, but despite the progress
made by MAFTIA in this area [4], building a reliable
Intrusion Detection System (IDS) is still an open
research area. However, without the ability to detect
errors correctly with a high probability, it
is not
possible to build a reliable fault-tolerance mechanism
based on an unreliable error-detection mechanism.
Secondly, any state-based recovery mechanism must
deal with the problem of latency of error detection and
the possibility that the intruder could have concealed
their activities for a long time or spread them
throughout
the system. Once an intrusion is
discovered, it can be a very difficult and time-
consuming process to construct (or re-construct) a
system state that
the
intrusion. Thus, with the current state of the art in
intrusion detection, it would seem that error-handling
approaches based on error compensation are the only
viable way of building intrusion-tolerant systems.
is free from the effects of
2.2. Using active replication to achieve
error compensation
MAFTIA has explored two different approaches to
implementing error-compensation mechanisms using
active replication. Both depend on the use of
Byzantine-agreement protocols to tolerate malicious
faults. However, the failure assumptions are different.
The first approach is based on the use of hybrid
failure-assumptions, which support the construction of
systems from a mixture of components with different
failure models. Trusted components are designed to
fail
in a controlled manner, whereas untrusted
components can fail in arbitrary ways. In particular,
MAFTIA developed  a set of partially-timed Byzantine
Agreement protocols based on the use of a trusted
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
component called the Trusted Timely Computing Base
(TTCB) [5]. The TTCB is a distributed security kernel
that uses a dedicated control network to provide strong
guarantees about timeliness and failure. The TTCB
component installed on each MAFTIA host is assumed
to be tamper-proof and fail-silent by design. One
approach to achieving this is to use physical-isolation
techniques and special hardware. Thus, the TTCB is
able to support the correct execution of Byzantine-
agreement protocols, even in  the presence of malicious
faults. Furthermore, because it
is assumed that a
TTCB cannot be compromised, it is possible for a
TTCB group to support a reliable broadcast protocol
with f+2 replicas, requiring an attacker to compromise
f+1 TTCB servers in order to effect an intrusion [6].
Thus, for the same number of replicas, a TTCB-based
system can tolerate a larger number of intrusions than a
more traditional approach (which normally requires
3f+1 replicas to tolerate f failures). However, it is still
necessary to use  diversity techniques, since an attacker
might otherwise be able to exploit a common
vulnerability and intrude upon a set of replicas with
reduced effort.
guarantees.
Instead,
In contrast,
the execution of
The TTCB approach to constructing intrusion-
tolerant Byzantine-agreement protocols  is based on the
recursive application of fault-prevention and fault-
tolerance techniques. Fault-prevention techniques are
used to build a trustworthy TTCB, which can then be
used to support
fault-tolerant
protocols.
the other approach that
MAFTIA has developed for implementing Byzantine-
agreement protocols does not make any assumptions
about the trustworthiness of individual components or
hosts. There are no fail-silence assumptions or
timeliness
cryptographic
algorithms are used to implement an efficient,
probabilistic, Byzantine-agreement protocol
in an
asynchronous setting [7]. These protocols assume a
model of diversity in which replicas are classified
according to one or more attributes and it is assumed
that the characteristics of corrupting a replica vary
according to these attributes. For example, suitable
attributes might be operating system or administrative
domain. If each attribute can take  at least four different
values across the whole set of replicas, then it
is
possible to design protocols that can tolerate the
simultaneous failure of a complete set of replicas in
each attribute class. In other words, the protocols are
designed to tolerate a limited number of common
failures under a more realistic set of
failure
assumptions. In order to successfully attack these
protocols, an attacker must either break the diversity
assumption and compromise a sufficient number of
replicas or else break the underlying cryptographic
algorithms on which the protocols are based.
2.3. Approaches towards achieving error
confinement
An important part of realising a “defence in depth”
strategy is to accept that components of the system can
be compromised and minimise the extent to which
they are trusted by other components of the system.
Thus, error-confinement strategies are an important part
of achieving intrusion tolerance.
example,
There are many examples of such strategies within
MAFTIA. For
threshold cryptography
schemes are used extensively for secret sharing. A
threshold scheme shares a secret between n parties in
such a way that at least t+1 shares are required  in order
to use the secret, for example, to generate a digital
signature or to decrypt a message. Thus, no party is
trusted with the entire secret or is able to reconstruct
the secret, and consequently, the system is able to
tolerate a limited number of intrusions, up to the
threshold parameter t.
Similarly, the MAFTIA authorisation service [8] is
designed for Internet applications, in which hosts are
mutually suspicious of each other. Java Cards are used
to implement a local security kernel on each host, and
it is assumed that it would be very difficult for an
attacker to access or forge the cryptographic keys stored
on the Java Card. However, even if the attacker  were to
succeed in compromising the Java Card in this way, it
would still not be possible for
the intrusion to
propagate beyond the local host. This is because the
MAFTIA authorisation service is designed to ensure
that a faulty host cannot generate false permissions for
other MAFTIA hosts without knowing the private key
of the authorisation server, which is protected by a
threshold signature scheme.
As a final example, there are  various ways in which
the alarm signals generated by the sensors deployed by
an Intrusion Detection System (IDS) could be
compromised or manipulated by an attacker, and an
intrusion-tolerant IDS needs to protect against these
kinds of attack. MAFTIA explored a number of
strategies for  building an intrusion-tolerant IDS, some
of which could be viewed as error-confinement
mechanisms that seek to reduce the amount of trust
that an IDS puts in any particular sensor. For example,
event-correlation techniques and the use  of diverse IDS
implementations that respond to a given attack in
different ways can be regarded as intrusion-tolerance
strategies that exploit diversity in order to build a
more trustworthy distributed IDS out of IDSs that are
individually untrustworthy.
3. Analysis of a MAFTIA application
In order to demonstrate how MAFTIA’s intrusion-
tolerance capabilities could be deployed to protect an
Internet application from malicious attacks, we
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
developed a realistic “use case” for the MAFTIA
architecture, based on a simplified but realistic
e-commerce application. In fact,
the TRADEZONE
application scenario that  we developed was based on a
use case provided by one of the members of our
Industrial Advisory Board [9]. Using our judgment
and expertise,  we identified a representative but by no
means complete set of attack scenarios, which we
modelled using fault
trees [10] and then analysed
qualitatively. The fault trees were used to describe a
representative set of hypothetical attacks, showing how
an attacker (Malice) might attempt to intrude upon a
MAFTIA-compliant TRADEZONE application and
illustrating the series of MAFTIA mechanisms that the
attacker would  have to overcome successively in order
to achieve their objective. The difficulty of achieving
each step in the process was discussed as part of the
fault-tree analysis.
It is important to note that the analysis was only
performed at a conceptual or architectural level and was
by no means complete. It would not have been feasible
within the constraints of the MAFTIA project to build
a real application using MAFTIA mechanisms or to
perform a complete security analysis. However, the
analysis was sufficient for its primary purpose, which
was to illustrate the potential of MAFTIA’s intrusion
tolerance capabilities.
We now provide a brief
the
TRADEZONE application and the fault-tree analysis.
Full details of the application, the attack scenarios, and
the fault-tree analysis are provided in [11].
summary of
3.1. TRADEZONE application scenario
The role of the TRADEZONE system is to provide
a secure and trustworthy market place for the electronic
purchasing of goods and services, and to manage the
sequence of steps involved in ordering, supplying, and
paying for goods in a secure and trustworthy fashion,
thus enabling suppliers to supply goods to purchasers,
confident that they will receive payment in due course.
Figure 1 depicts the TRADEZONE application
domain, in which there are three main actors:
(cid:127) Purchasers – individuals and corporate groups