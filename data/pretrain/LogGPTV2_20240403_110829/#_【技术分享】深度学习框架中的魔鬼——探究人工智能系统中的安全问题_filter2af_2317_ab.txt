### 优化后的文本

#### 正常狗叫声的识别
当给定一个正常的狗叫音频文件时，应用程序可以识别声音内容为 "dog bark"。其过程如下：

```bash
./demo.sh dogbark.wav
```

输出：
```
02:34:42.713346: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
...
audio file: dogbark.wav
softmax output:  
[[  9.82184019e-07   1.81138901e-07   2.68021075e-04   9.97506797e-01
    3.25933332e-04   4.26165315e-07   1.18322554e-03   4.01796569e-08
    2.90570169e-05   6.85345207e-04]]
The audio is dog_bark!
```

#### 畸形音频文件导致拒绝服务
当给定一个畸形的声音文件时，程序可能会出现拒绝服务（DoS），无法正常结束：

```bash
./demo.sh dos.wav
```

输出：
```
02:37:23.818618: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
...
audio file: dos.wav
^C^C^C^C^C
```

#### 模块依赖复杂性导致的漏洞
在之前关于模块依赖复杂性导致漏洞的讨论中，我们提到对模块接口的理解不一致会导致问题。Numpy库中的一个漏洞修复过程正好反映了这个问题。

最初通知Numpy开发者时，他们认为问题是由于调用者librosa库的开发人员没有对数据进行严格检测，导致空列表的使用。因此，尽管有应用会因为此问题受到拒绝服务攻击，Numpy开发者最初认为不需要修复这个问题。但后来发现多个其他库也频繁调用numpy的相关函数，最终对这个漏洞进行了修复。同时，librosa开发者也在相关调用中添加了输入检查。

#### 恶意图片导致基于Caffe的图像识别应用内存访问越界
许多深度学习应用涉及图像和视觉处理领域。我们发现，当使用深度学习框架Caffe进行图片识别时，Caffe会依赖libjasper等图像处理库来处理输入。如果libjasper存在漏洞（例如内存越界），则可能导致整个应用程序崩溃，甚至数据被篡改。

以下是一个示例，展示Caffe自带的图像识别程序处理畸形图片时出现的崩溃场景：

**正常图片分类：**

```bash
classification.bin  ./caffe/models/bvlc_reference_caffenet/deploy.prototxt ./caffe/models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel ./caffe/data/ilsvrc12/imagenet_mean.binaryproto ./caffe/data/ilsvrc12/synset_words.txt 
cat.jpg
```

输出：
```
---------- Prediction for pocs/cat.jpg ----------
0.3134 - "n02123045 tabby, tabby cat"
0.2380 - "n02123159 tiger cat"
0.1235 - "n02124075 Egyptian cat"
0.1003 - "n02119022 red fox, Vulpes vulpes"
0.0715 - "n02127052 lynx, catamount"
```

**恶意图片分类：**

```bash
classification.bin  ./caffe/models/bvlc_reference_caffenet/deploy.prototxt ./caffe/models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel ./caffe/data/ilsvrc12/imagenet_mean.binaryproto ./caffe/data/ilsvrc12/synset_words.txt 
bug.jpg
```

输出：
```
---------- Prediction for pocs/bug.jpg ----------
Segmentation fault
gdb-peda$ bt
#0  0x00007ffff3295f6b in ?? () from /usr/lib/x86_64-linux-gnu/libjasper.so.1
#1  0x00007ffff32961e0 in ?? () from /usr/lib/x86_64-linux-gnu/libjasper.so.1
#2  0x00007ffff32958ad in jpc_decode () from /usr/lib/x86_64-linux-gnu/libjasper.so.1
#3  0x00007ffff328f2f7 in jp2_decode () from /usr/lib/x86_64-linux-gnu/libjasper.so.1
#4  0x00007ffff3283eed in jas_image_decode () from /usr/lib/x86_64-linux-gnu/libjasper.so.1
#5  0x00007ffff6df4158 in cv::Jpeg2KDecoder::readHeader() () from /usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4
#6  0x00007ffff6dd74fc in ?? () from /usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4
#7  0x00007ffff6dd7c56 in cv::imread(std::string const&, int) () from /usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4
#8  0x0000000000403f2b in main ()
#9  0x00007ffff606af45 in __libc_start_main (main=0x403dd0 , argc=0x6, argv=0x7fffffffde28, init=, fini=, rtld_fini=, stack_end=0x7fffffffde18) at libc-start.c:287
#10 0x000000000040435e in _start ()
```

以上仅是我们发现的众多问题中的两个案例。360 Team Seri0s团队已发现并公布了数十个导致深度学习框架出现问题的漏洞，其中包含已对外公开的15个CVE。在上个月举行的ISC安全大会上，Team Seri0s成员展示了六个攻击实例。更多细节请参考ISC 2017大会人工智能与安全论坛发布的内容。

### 小结
本文旨在介绍被大众所忽视的人工智能安全问题，尤其是深度学习软件实现中的漏洞及其可能造成的隐患。目前在媒体中展示的深度学习应用中，许多并不与外界直接交互（例如AlphaGo）或在封闭环境下工作（例如通过用户行为日志对用户分类画像并进行异常检测）。这些系统的攻击面相对较小，不易受到本文所述漏洞的直接影响。

然而，随着人工智能应用的普及，安全威胁将不断增加。更多应用会将其输入接口直接或间接暴露出来。同时，封闭系统的攻击面也会随时间和环境而变化。除了传统的基于软件漏洞的攻击，深度学习还面临对抗神经网络和其他各种逃逸攻击。我们将在后续文章中对此方面的工作进行更新。