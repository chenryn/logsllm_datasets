(PI:EMAIL)
习
(PI:EMAIL）
(PI:EMAIL）
PI:EMAIL)
(PI:EMAIL）
simlink_xub@163.
dongjunbo@g
(PI:EMAIL ,
PI:EMAIL)
(PI:EMAIL）
: ddd (PI:EMAIL)
IDE,
编译器、
个项目
以，
喜欢藏着挪着，
闭的操作系统，
PI:EMAIL）
谢谢你们！
务被IDE搞得更加复杂了。Linux用户的使用习惯从来都是以敲命令为主，
告诉你用良
但第二部分和第三部分介绍了很多Linux操作系统的原理以帮助读者更深入地理解C语言，只能在Linux平台上学
除了
编译器
IDE并没有帮助你学]
链
就可以
了学会
，也很容易找个高手教你，
接
鼠标拖几个控件，
2gmail.com)
会语法和编译命令，
器、
台
链接器和(
Eclipse等。
编译到-
入门
.com)
友、
.com)
，等到你把这些基本概念都搞清楚了，
，网友在等着看我的书更新，给我提建议希望我把书改得更
：bing （PI:EMAIL）
wuyulei (PI:EMAIL）
很多读者
cleverd (PI:EMAIL）
杜朴风（PI:EMAIL）
IC语
侯
http://zxqianrong.i
景
艺
 RobinXiang 
（(PI:EMAIL）
的人，
然后点
麻
工作繁忙，对未来迷茫，
益
祥
者为
念
你还得弄清楚编译命令和IDE是怎么集成的，
（PI:EMAIL）
甚
 各种邮件列表、
法
扁了好几年程序，
waterloo
有
至连命
一个按钮京
，zhoudy （PI:EMAIL）
（PI:EMAIL)
(PI:EMAIL)
密切的
 在教学和讨论过程中我经常会得到有益的启发，
J.is-programmer.com/)
令行都没用过,
就可以编译出程序来，
，尤其感谢李明老师和何家胜老师，没有公司的支持，我不可能有时
系
但IDE对于
、新闻组和论坛上从来都不缺乐于助人的高手；而Windows是一和
，orange (PI:EMAIL）
本来要学
，生活压力大,
com)
, mick (PI:EMAIL）， baaluck (PI:EMAIL 
你觉得哪个IDE好用你再去用，
解编
Integrated Development Environment）绑在一起,
只能通过文档去猜测它的工作原理，
Jiawei
然而这
初学者绝对不是好东西。
，san （PI:EMAIL），王兆宏
：comma （PI:EMAIL）
s 
love_wc3 (PI:EMAIL） ,
些都是初学编程就应该建立起来的基本概念。
因为他们脑子里只有按钮、
但是真正有用的程序有哪个是这么拖出来的？
曾宇
链接器的工作原理,
缺乏安全感
(PI:EMAIL），
以鼠标操作为辅，
一个按钮就可以跑了，
更
这才算学明白了
朱夜光
张现超
完
感，
善，这
个人琐事等等。
微软喜欢宣扬傻瓜式编程的
不过到那时候你可能会更
是我坚持写下去的最大的动
，这些都促使这本书更加完
震
也不可能真正掌握C的
陆杨
，从学编程的第一
、菜单的概念，
，更糟糕的是，
，徐斌
董俊波
本来就很复杂的
把几个源文件拖
然而有这么多热
邓楠
，姚磊
田伟
linux-
冯海云
现在
一天起
根本
微软向
学
有
语
另
届
种
---
## Page 17
宋劲杉北京2008年11月27日
希望本书成为你求学道路上的第一个伙伴。
我选择将这本书开源。
和大多数作者一样，
最后几句话 请点评
历史
竭
至
尽全力也不足以保证书中的内容全部正确，还要依靠社区的力量一
考过
即使我纠正多
“贝
二级，
但程序写得-
怕我
教给别人
次
，最后我要说的是我水平十分有限，
人的仍然是错的，
连最基本的概念者
全国嵌入式人才培训基地
都搞错了
 没写过C编译器和C标准库，
起始页
以前学
，我不能保证书中的内容全部正确,
这本书涵盖的话题比较广
部分I.C语言入门
下一页
泛，
我
甚
---
## Page 18
5.深入理解函数
4.分支语句
3.简单函数
2.常量、
1.程序的基本概念
目录
部分I.C语言入门
上一页
3.递归
2.增量式开发
4. switch语句
3.布尔代数
2. if/else语句
1. if语包 
4.全局变量、局部变量和作用域
3.形参和实参
6.字符类型与字符编码
4.赋值
2.常量
1. 继续Hello World
4.第一个程序
1. return语句
3.程序的调试
2.自然语言和形式语言
1.程序和编程语言
1.数学函数
变量和表达式
部分I.C语言入门
---
## Page 19
12.栈与队列
11.排序与查找
10. gdb
9.编码风格
8.数组
7. 结构体
6.循环语句
1.数据结构的概念
6.折半查找
2.插入排序
1.算法的概合
4.段错误
2.断点
1.单步执行和跟踪函数调用
5. indent工具
4.函数
3.标识符命名
2.注释
1. 缩进和空白
5.多维数组
4.字符串
3.数组应用实例：
2.数组应用实例：
1.数组的基本概念
4.嵌套结构体
2.数据抽象
6.goto语句和标号
5.嵌套循环
4. break和continue语句
3. for语句
2. do/while语句
1. while语句
1.复合类型与结构体
归并排序
念
_统计随机数
直方图
6
---
## Page 20
前言
13.本阶段总结
5.环形队列
4.队列与广度优先搜索
2. 堆栈
全国嵌入式人才培训基地
起始页
第1章 程序的基本概念
---
## Page 21
3.程序的调试
2.自然语言和形式语言
目录
第 1 章 程序的基本概念 请点评
部分I.C语言入门
1.程序和编程语言
上一页
第1章程序的基本概念
全国嵌入式人才培训基地
全国嵌入式人才培训基地
部分I.C语言入门
起始页
上一级
1.程序和编程语言
TI
---
## Page 22
?
级语言，直接用计算机指令编写程序。而C、C++、Java、Python等属于高级语言，
编程语言（Programming Language）分为低级语言（
循环
基本运算
输出（Output）
输入（Input）
语言和机器语言分别表示如下：
level Language)
最后简单得可以用以上指令来完成。
对于程序来说，
测试和分支
类：
程序由一系列指令（Instruction）组成，指令是指示计算机做某种运算的命令，
这些数字经过专门的硬件设备转换成人可以听到、看到的声音和图像。
字表示的。此外,
成的运算机器，
程序（Program）告诉计算机应如何完成一个计算任务.
由这几类指令组成的。程序是那么的复杂，而编写程序可以用的指令却只有这么简单的几种，
1. 程序和编程语言 请点评
（Statement）编写程序，
是这样一
间巨大的落差就要由程序员去填了
上一页
执行最基本的数学运算（加减乘除）
从键盘、
也可
重复执行一系列操作。
测试某个条件，
把数据显示到屏幕，或者存入一个文件，
个过程：
文件或者其它设备获取数据。
有上面这几类指令就足够了。
只能对数字做运算，
程序还可以处理声音和图像
然后根据不同的测试结果执行不同的后续指令。
语句是计算机指令的抽象表示。举个例子，同样一个语句用C语言、汇编
比如查找和替换文档中的某个单词。
所以编写程序理应是
，程序之所以能做符号运算，
第1章程序的基本概念
全国嵌入式人才培训基地
1.程序和编程语言
）和数据存取。
，你曾用过的任何一个程序，
，或者发送到其它设备。
把子任务再分解成更简单的任务，
声音和图像在计算机内部必然也是用数字表示的
这里的计算可以是数学运算
一件相当复杂的工作。编写程序可以说就
从根本上说，
 是因为符号在计算机内部也是用数
，不管它有多么复杂，都是
计算机是由数字电路组
通常包括以下几
层层分解、直到
用语句
比如解方
下一页
这中
---
## Page 23
如program.c（通常C程序的文件名后缀是.c），这称为源代码
总结一下编译执行的过程，
免使用不可移植的语法特性。
准中并没有明确规定，
加修改甚至不用修改就可以在各种不同的计算机上编译运行。
机器指令写出来的程序只能在这种体系结构的计算机上运行，
的指令集（instruction Set）
（Operating System）
平台这个词有很多种解释，
多的是优点。
转成机器指令才能被计算机执行，
从上面的例子还可以看出，
件"介绍)
令，
器语言。
汇编程序，
沂
的C编译器，
要查大量的表格来确定每个数字表示什
中的机器语言
计算机只能对数字做运算,
了汇编语言，
 所以绝大部分程序是用高级语言编写的，
，机器语言也有三条指令，
个C编译器的不同版本）
机器语言8
汇编语言 add
。从上面的例子可以看出，
C语言
编程语言
表1.1.
，然后让汇编器（Assembler）去查表把助记符替换成数字，也就把汇编语言翻译成了机
可以把C程序编译成各种不同体系结构的机器指令，
。首先，
一个语句的三种表示
a3 18 a0 04 08
83 c0 01 
a1 1c a0 04 08
mov
mov
a=b+1;
还要注意-
用C语言编程更容易，
，各编译器有不同的实现，编译出来的指令的行为特性也会不同，应该尽量避
显然编译器的功能比汇编器要复杂得多。
%eax,0x804a018
$0x1,%eax 
也可以指开发平台（编译器、链接器等)
0x804a01c,%eax
表示形式
，可以指计算机体系结构（Architecture）
首先你用文本编辑器写一个C程序，
C语言的语句和低级语言的指令之间不是简单的一
符号、
编译同一个程序得到的结果也有可能不同，
二编或机器指令，
 汇编器就是做一个简单的替换工作,
“占
可以识别的机器指令格式是不同的，
即使在相同的体系结构和操作系统下，
编译需要花-
汇编语言和机器语言的指令是一
声音
么
意思，
最早的程序员都是直接用机器语言编程，
写出来的代码更紧凑，
图像在计算机内部都要用数字表示，
只有和硬件关系密切的少数程序（例如驱动程序）才
，这个过程称为编译（Compile）
一些时间，
 编写出来的程序很不直观，
，这是用高级语言编程的一个缺点，
，在汇编指令中是0x804a01c，
 各种高级语言都具有C语言的这些优
然而各种体系结构的计算机都有各目
（Source Code）或源文件,