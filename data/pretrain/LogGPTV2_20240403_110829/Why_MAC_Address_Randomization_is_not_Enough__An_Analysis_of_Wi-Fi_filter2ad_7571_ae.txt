HS2.0 capabilities. We hope that by discovering this attack
in the early stages of the adoption of HS2.0, manufacturers
will address this issue before HS2.0 becomes widespread.
A simple countermeasure is to follow the iOS example,
by using the temporary random MAC address when query-
ing HS2.0. There is indeed no requirement in the speciﬁca-
tions [32, §5.9] for the station to use its real MAC address
Figure 7: Cumulative distribution of the number of aﬀected
devices as a function of the number of SSIDs.
trigger association requests from a large fraction of the de-
vices. For instance, the top-20 SSIDs in the Train-station
dataset covers more than 33 % of the devices.
We tested and veriﬁed this attack in practice. Airbase-ng
was used to create fake APs from a list of popular SSIDs. We
made the assumption that the most popular SSIDs are open
hotspots that do not use encryption. Therefore, the APs we
broadcast were conﬁgured to be open hotspots. Although
airbase-ng supports the creation of multiple SSIDs, our
experiments revealed that it does not properly handle a large
numbers of SSIDs. Therefore, we limited our attack to a
reasonable number of SSIDs, i.e., 5 SSIDs. This number
of advertised SSIDs can be increased by running multiple
instances of airbase-ng on distinct interfaces.
The performance of the attack is evaluated by computing
the fraction of devices that are trying to associate (connect)
to our fake AP over the total number of devices that have
been observed. A device is considered as observed when we
collected at least 5 probe requests from its MAC address.
This conservative approach was taken to avoid counting de-
vices that are too far to detect our AP, or that are not stay-
ing in range long enough to start the association process.
We executed the attack for one hour using a list of the 5
top SSIDs of the Train-station dataset in a dense urban
area. During this experiment, a total of 2481 stations were
observed and our fake APs triggered association attempts
from a total of 434 devices (17.4%). Increasing the number
of advertised SSIDs, as well as responding to probe requests
containing an SSID with a matching probe response, has the
potential to improve the number of aﬀected devices.
Note that this attack does not necessarily need to be ac-
tive. An attacker could rely on nearby, genuine, APs with
popular SSIDs to trigger association requests. In many lo-
cations, APs with popular SSIDs are commonplace. For in-
stance, in Europe, Wi-Fi networks such as Fon or Free_WiFi
can be found in large numbers in populated areas.
6.2 Hotspot 2.0 Honeypot
We show that the service discovery mechanisms intro-
duced by Hotspot 2.0 (HS2.0) can be leveraged to reveal
the real MAC address of Linux and Windows devices. Ad-
ditionally, we discover another predictable counter that can
100101102103104105106Numberof advertised SSIDs0%20%40%60%80%100%Percentage of devicesLyon Part Dieu datasetSapienza datasetLyon laboratory datasetwhen querying list of services to an AP. Similarly, picking
a cryptographic random value for the Dialog Token assures
it cannot be used to track devices.
7. RELATED WORK
The possibility to track individuals based on the radio
signals of their mobile device has received considerable at-
tention from the research community. Musa et al. [37] used
Wi-Fi tracking techniques to collect data on urban mobil-
ity. Surveillance systems based on Wi-Fi tracking have also
been presented by several works [30, 13, 38]. Cuthbert et
al. demonstrated how an airborne Wi-Fi sniﬀer can be used
to passively track and locate owners of Wi-Fi devices [13].
Humbert et al. studied tracking strategies against mobile
users that change identiﬁers when entering mix-zones [29].
Privacy issues of Wi-Fi-enabled devices were studied by
Greenstein et al. [23]. In parallel, attempts were made at
reducing private information leakage in Wi-Fi [25, 40, 35].
Gruteser et al. introduced the idea of using a disposable
identiﬁer instead of a permanent MAC address [25]. Then,
proposals [40, 35] were made to improve the privacy in the
service discovery mechanisms of Wi-Fi. These improvements
involve the obfuscation of device and network identiﬁers and
require signiﬁcant modiﬁcations of the protocol.
After the introduction of MAC address randomization in
iOS 8, several works have attempted to understand its inter-
nals and started to identify limitations [36, 18]. In particu-
lar, Freudiger found that sequence numbers and timing in-
formation can be used to re-identify random MAC addresses
as implemented by iOS [18]. However, they did not investi-
gate other devices or operating systems, nor other means to
de-anonymize or track Wi-Fi frames.
Bernados et al. [8] studied the feasibility of MAC address
randomization for associated devices in real-life conditions.
They found that existing devices can support this with only
minor changes, but note that higher layers must also be
conﬁgured so they do not leak any identiﬁers.
Bloessl et al. showed that the scrambler seed of the IEEE
802.11p physical layer could be used for tracking in wire-
less vehicular networks [6]. They speciﬁcally investigated
two prototype radio chips. The ﬁrst one is a radio chip
implemented on Field Programmable Gate Array (FPGA),
and the second is an industrial-grade Atheros AR5414A-B2B
chip. Both were using predictable scrambler seeds.
Others focused on inter-frame arrival time and sequence
numbers to identify devices. Guo et al. [26] use these values
to detect spooﬁng on a network with a semi-active method,
as an intrusion detection mechanism. Desmond et al. [15]
ﬁngerprint devices using inter-frame time analysis alone.
They reach a success rate of 70 to 80% to diﬀerentiate frames
from 45 diﬀerent devices probing for more than one hour.
Other means of device ﬁngerprinting can be used to defeat
MAC address randomization. Physical layer ﬁngerprinting
of wireless devices based on unique characteristics of their
hardware is possible [7, 12] but requires expensive dedi-
cated hardware. Pang et al. [39] showed that devices replac-
ing their identiﬁers with temporary ones are still trackable
through traﬃc analysis. They focused on MAC-layer ﬁelds
used by associated devices. In [17], Franklin et al. showed
that the inter-frame timing of probe requests can form a
ﬁngerprint of the wireless device driver. Access points are
vulnerable to passive clock skew ﬁngerprinting [33]. This
technique was reused by Cristea et al. [10] to ﬁngerprint
smartphones, but it relies on TCP timestamps, which are
not sent by unassociated devices. St¨ober et al. apply pas-
sive traﬃc analysis to identify devices, even when the traﬃc
is encrypted [43].
8. CONCLUSION
We study data contained in Wi-Fi probe requests, and
demonstrate that they hold enough information to perform
tracking, even if the MAC address is periodically random-
ized. First, the list of information elements form a ﬁnger-
print of a device. This ﬁngerprint has enough entropy to
identify a device or a small group of devices. We show that
when combining this ﬁngerprint with frame sequence num-
bers, tracking devices is possible regardless of their MAC ad-
dress. In particular we rely on the observation that most de-
vices do not reset the frame sequence counter when the MAC
address is changed. In addition, we show that the scrambler
seeds used at the physical layer is predictable in many com-
modity Wi-Fi devices. Being managed at the hardware level,
there is currently no way to reset nor change its value, which
makes it a persistent threat. Finally, we introduce two ac-
tive attacks that leverage service discovery mechanisms of
Wi-Fi in order to obtain identifying information on devices
that are using MAC address randomization.
Our ﬁndings highlight the diﬃculty of implementing anti-
tracking solutions for wireless devices. In particular, it shows
that MAC address randomization alone is not enough to pro-
tect users’ privacy. However, several measures can be taken
to limit the impact of the issues presented in this paper. At
the software level, the driver (or ﬁrmware) should reset the
sequence number ﬁeld as well as any other predictable ﬁeld
found in frames. Additionally, the amount of information
elements in probe requests should be kept to a bare mini-
mum to avoid ﬁngerprinting. Finally, Wi-Fi radios, which
are generally implemented in hardware, should be modiﬁed
so scrambler seeds are not predictable. This can be accom-
plished by letting the hardware generate cryptographically
random seeds, or by allowing the driver to instruct the radio
which scrambler seed value should be used.
9. ACKNOWLEDEGMENTS
This research is partially funded by the Research Fund
KU Leuven and R´egion Rhˆone-Alpes’s ARC7. Mathy Van-
hoef holds a Ph. D. fellowship of the Research Foundation -
Flanders (FWO). This work used the FIT/CorteXlab facility
(https://www.cortexlab.fr) for its measurement campaign.
10. REFERENCES
[1] Tails - privacy for anyone anywhere. Retrieved from
https://tails.boum.org.
[2] Android 6.0 changes. Retrieved from
https://developer.android.com/about/versions/
marshmallow/android-6.0-changes.html, 2015.
[3] O. Abukmail. Wiﬁ Mac Changer. Retrieved from
https://play.google.com/store/apps/
details?id=com.wireless.macchanger.
[4] M. V. Barbera, A. Epasto, A. Mei, S. Kosta, V. C.
Perta, and J. Stefa. CRAWDAD dataset
sapienza/probe-requests (v. 2013-09-10). Retrieved 10
November, 2015, from, http://crawdad.org/sapienza/
probe-requests/20130910, Sept. 2013.
[5] B. Bloessl, M. Segata, C. Sommer, and F. Dressler.
An IEEE 802.11 a/g/p OFDM receiver for GNU
radio. In SRIF Workshop, 2013.
identiﬁers: A quantitative analysis. Mobile Networks
and Applications, 10(3):315–325, 2005.
[26] F. Guo and T. Chiueh. Sequence number-based MAC
[6] B. Bloessl, C. Sommer, F. Dressler, and D. Eckhoﬀ.
address spoof detection. In RAID, 2006.
The scrambler attack: A robust physical layer attack
on location privacy in vehicular networks. In ICNC,
2015.
[7] V. Brik, S. Banerjee, M. Gruteser, and S. Oh. Wireless
device identiﬁcation with radiometric signatures. In
MobiCom, 2008.
[8] P. O. Carlos J. Bernardos, Juan Carlos Z´u´niga. Wi-Fi
internet connectivity and privacy: hiding your tracks
on the wireless internet. In IEEE CSCN, 2015.
[9] Chainﬁre. Pry-Fi. Retrieved from
https://play.google.com/store/apps/
details?id=eu.chainﬁre.pryﬁ.
[10] M. Cristea and B. Groza. Fingerprinting smartphones
remotely via ICMP timestamps. Communications
Letters, IEEE, 17(6):1081–1083, 2013.
[11] D. A. Dai Zovi, S. Macaulay, et al. Attacking
automatic wireless network selection. In Proc. of the
Sixth Annual SMC Inf. Assurance Workshop, 2005.
[12] B. Danev, D. Zanetti, and S. Capkun. On
physical-layer identiﬁcation of wireless devices. ACM
Computing Surveys (CSUR), 45(1):6, 2012.
[13] C. Daniel and W. Glenn. Snoopy: Distributed tracking
and proﬁling framework. In 44Con 2012, 2012.
[14] L. Demir, M. Cunche, and C. Lauradoux. Analysing
the privacy policies of Wi-Fi trackers. In Proc. of the
2014 workshop on physical analytics, 2014.
[15] L. C. C. Desmond, C. C. Yuan, T. C. Pheng, and
R. S. Lee. Identifying unique devices through wireless
ﬁngerprinting. In WiSec, 2008.
[16] P. Eckersley. How unique is your web browser? In
Privacy Enhancing Technologies, 2010.
[27] C. Huitema. Experience with MAC address
randomization in Windows 10. In 93th Internet
Engineering Task Force Meeting (IETF), July 2015.
[28] C. Huitema. Personal communication, Nov. 2015.
[29] M. Humbert, M. H. Manshaei, J. Freudiger, and J.-P.
Hubaux. Tracking games in mobile networks. In Conf.
on Decision and Game Theory for Security, 2010.
[30] N. Husted and S. Myers. Mobile location tracking in
metro areas: Malnets and others. In CCS, 2010.
[31] IEEE Std 802.11-2012. Wireless LAN Medium Access
Control (MAC) and Physical Layer (PHY)
Speciﬁcations, 2012.
[32] IEEE Std 802.11u. Wireless LAN Medium Access
Control (MAC) and Physical Layer (PHY)
Speciﬁcations: Amendment 9: Interworking with
External Networks, 2011.
[33] S. Jana and S. K. Kasera. On fast and accurate
detection of unauthorized wireless access points using
clock skews. In MobiCom, 2008.
[34] P. Leach, M. Mealling, and R. Salz. A universally
unique identiﬁer (UUID) URN namespace. RFC 4122
(Proposed Standard), July 2005.
[35] J. Lindqvist, T. Aura, G. Danezis, T. Koponen,
A. Myllyniemi, J. M¨aki, and M. Roe.
Privacy-preserving 802.11 access-point discovery. In
WiSec, 2009.
[36] B. Misra. iOS 8 MAC randomization – analyzed!
http://blog.airtightnetworks.com/ios8-mac-
randomization-analyzed/.
[37] A. B. M. Musa and J. Eriksson. Tracking unmodiﬁed
smartphones using Wi-Fi monitors. In SenSys, 2012.
[17] J. Franklin, D. McCoy, P. Tabriz, V. Neagoe, J. V.
[38] B. O’Connor. CreepyDOL: Cheap, distributed
Randwyk, and D. Sicker. Passive data link
layer 802.11 wireless device driver ﬁngerprinting. In
USENIX Security, 2006.
[18] J. Freudiger. How talkative is your mobile device? An
experimental study of Wi-Fi probe requests. In WiSec,
2015.
[19] B. Gellman and A. Soltani. NSA tracking cellphone
locations worldwide, Snowden documents show. The
Washington Post, 2013.
[20] M. X. Gong, B. Hart, L. Xia, and R. Want. Channel
bounding and MAC protection mechanisms for
802.11ac. In GLOBECOM, 2011.
[21] F. Gont. A method for generating semantically opaque
interface identiﬁers with ipv6 stateless address
autoconﬁguration (slaac). RFC 7217, 2014.
[22] D. Goodin. No, this isn’t a scene from minority report.
This trash can is stalking you. Ars Technica, 2013.
[23] B. Greenstein, R. Gummadi, J. Pang, M. Y. Chen,
T. Kohno, S. Seshan, and D. Wetherall. Can Ferris
Bueller still have his day oﬀ? protecting privacy in the
wireless era. In USENIX HotOS, 2007.
[24] E. Grumbach. iwlwiﬁ: mvm: support random MAC
address for scanning. Linux commit effd05ac479b.
[25] M. Gruteser and D. Grunwald. Enhancing location
privacy in wireless LAN through disposable interface
stalking. In BlackHat, 2013.
[39] J. Pang, B. Greenstein, R. Gummadi, S. Seshan, and
D. Wetherall. 802.11 user ﬁngerprinting. In MobiCom,
2007.
[40] J. Pang, B. Greenstein, S. Seshan, and D. Wetherall.
Tryst: The case for conﬁdential service discovery. In
HotNets, 2007.
[41] J. Scahill and G. Greenwald. The NSA’s secret role in
the U.S. assassination program. The Intercept, 2014.
[42] K. Skinner and J. Novak. Privacy and your app. In
Apple Worldwide Dev. Conf. (WWDC), June 2015.
[43] T. St¨ober, M. Frank, J. Schmitt, and I. Martinovic.
Who do you sync you are?: smartphone ﬁngerprinting
via application behaviour. In WiSec, 2013.
[44] L. Wang and C. Tellambura. An overview of
peak-to-average power ratio reduction techniques for
OFDM systems. In IEEE ISSPIT, 2006.
[45] W. Wang. Wireless networking in Windows 10. In
Windows Hardware Engineering Community
conference (WinHEC), Mar. 2015.
[46] Wi-Fi Alliance. Hotspot 2.0 (Release 2) Technical
Speciﬁcation v1.1.0, 2010.
[47] Wi-Fi Alliance. Wi-Fi Simple Conﬁguration Protocol
and Usability Best Practices for the Wi-Fi Protected
Setup Program, v2.0.1, April 2011.