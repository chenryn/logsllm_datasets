title:A statistical approach to botnet virulence estimation
author:Julian L. Rrushi and
Ehsan Mokhtari and
Ali A. Ghorbani
A Statistical Approach to Botnet Virulence Estimation
Julian Rrushi, Ehsan Mokhtari, Ali A. Ghorbani
University of New Brunswick, Fredericton, NB, E3B 5A3, Canada
{jrrushi, ehsan.mokhtari, ghorbani}@unb.ca
ABSTRACT
Network vulnerability and infection rates are key factors
in mathematical models of botnet propagation dynamics,
which in turn are increasingly deemed to have potential for
playing an important role in various botnet mitigation s-
trategies. In this paper we discuss research that draws on
epidemiological models in biology in order to solve the prob-
lem of how to estimate network vulnerability and infection
rates in relation to a botnet. This research provides bot-
net propagation models with concrete measures that make
those models practical, and hence employable in mitigation
of real world botnets in a timely fashion. The proposed es-
timation approach is based on random sampling and follows
a novel application of statistical learning and inference in a
botnet-versus-network setting. We have implemented this
research in the Matlab programming language, and thus in
the paper we also discuss an experimental validation of the
eﬀectiveness of this research with respect to realistically sim-
ulated botnet propagation dynamics in a GTNetS network
simulation platform.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Network]: Security
and Protection
General Terms
Security
Keywords
Computer network security, stochastic processes, statistical
learning and inference.
1.
INTRODUCTION
The tactical design of botnets, i.e. networks of compro-
mised nodes referred to as bots, which are controlled by
remote attackers known as botmasters, has been evolving
towards higher degrees of sophistication. Wang et al. [7]
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’11, March 22–24, 2011, Hong Kong, China.
Copyright 2011 ACM 978-1-4503-0564-8/11/03 ...$10.00.
discuss the design of a hybrid Peer-to-Peer (P2P) botnet
that is even more advanced than current botnets. With this
result, gaining insight into and predicting the propagation
dynamics of highly sophisticated botnets in a timely fash-
ion is crucial to their mitigation. The various mathematical
models developed so far that capture the propagation dy-
namics of botnets and self-replicating malware in general,
i.e. viruses, worms, etc., depend directly or indirectly on
measures of network infection rates and network suscepti-
bility, i.e. vulnerability, rates, which are often referred to as
malware virulence.
Measures of botnet virulence are fundamental to our a-
bility of practically employing mathematical models of bot-
net propagation dynamics in mitigation algorithms against
real-word botnets.
In this paper we propose a statistical
approach to the estimation of botnet virulence in a time-
ly fashion. Few other research works have investigated the
problem of estimating botnet virulence. Choi et al. [3] apply
maximum likelihood estimation (MLE) in an approach that
estimates the size of vulnerable host population in a local
or enterprize network in relation to a worm. The approach
of Choi et al. exploits a deterministic relation between the
number of vulnerable hosts and the mean inter-arrival time
between successive host infections. As such, the approach of
Choi et al. relies on observation of host infections as those
infections take place.
In most real-world botnet mitigation eﬀorts defenders do
not know a priori which computer network communications
result in host infections, consequently they cannot obtain
the mean inter-arrival time between successive host infec-
tions. In fact detecting those host infections may very well
be part of the ultimate objective of those eﬀorts. Further-
more, the approach of Choi et al. cannot be applied to a
network which has not yet been reached by infections. Our
statistical approach to botnet virulence estimation also uses
MLE in part. Nevertheless, it has no reliance on knowing
host infections in progress a priori, and thus can provide
mathematical models of botnet propagation dynamics with
estimates of botnet virulence that are usable in botnet mit-
igation strategies.
2. ESTIMATION APPROACH
Our work on botnet virulence estimation draws on the
epidemiological models discussed in [1, 2, 5, 6]. Those epi-
demiological models estimate the proportion of vectors, i.e.
insects that are carriers of a speciﬁc biological virus, in a
large natural population of insects. The major contribution
of those models is that they provide for estimating the pro-
508
portion of vectors without having to inspect each individual
insect in the population to check whether or not it is a vector.
We have a similar necessity with respect to the population
of nodes in a network, otherwise the time required for cal-
culating measures of botnet virulence would be prohibitive
from the botnet mitigation perspective.
2.1 Generating Random Data Samples for S-
tatistical Inference
Our estimation approach follows a uniﬁed computation-
al path for both network vulnerability rate estimation and
network infection rate estimation. For that reason, what
follows from this point on in this section applies to both
cases. Note that the estimation approach is not applied si-
multaneously to both those cases. Estimation of network
vulnerability rate and estimation of network infection rate
are two separate computational processes. We use a discrete
uniform distribution of the IP address space allocated to the
network of reference to randomly generate a sample of nodes
from that network. In concrete terms, such data sample is a
set of IP addresses from the IP address space allocated to the
network of reference. Each node in the network of reference
is equally likely to be sampled, and hence each IP address
in the sample is selected purely randomly. We organize the
nodes in the data sample into pools.
The assignment of a node from the data sample to a spe-
ciﬁc pool is performed in a random fashion. The random
assignment of the nodes in question creates pools with vari-
ous sizes. With size of a pool we mean the number of nodes
from the data sample that have been assigned to that speciﬁc
pool. With regard to network vulnerability rate estimation,
in this paper we say that a node is positive if that node is
exploitable by the various exploits implemented in the bot
codebase, and negative otherwise. In this paper we use the
term positive pool to refer to a pool that contains one or
more positive nodes. For each pool we need to determine
whether or not it is a positive pool. Once a node in a pool
under examination is found to be positive, the inspection of
that pool is considered complete and that pool is marked as
positive. Otherwise, the inspection proceeds with checks on
the other nodes in the pool in question.
If at the end of the inspection process no nodes are found
to be positive, the pool under examination is marked as
negative. With regard to network infection rate estimation,
in this paper we use the term positive node to refer to nodes
that have been infected by a bot, and thus have become
part of the botnet. A node is said to be negative if it is
uninfected by a bot. We use the term positive pool to refer
to a pool that contains one or more of such positive nodes.
Similarly to network vulnerability rate estimation, for each
pool we need to determine whether or not it is a positive
pool.
If a node in a pool under examination is found to
be a member of the botnet, the inspection of that pool is
considered complete and that pool is marked as positive. If
the node being tested is found not to be a member of the
botnet, the inspection proceeds with checks on the other
nodes in the pool under examination. If none of the nodes in
that pool are found to be positive, then that pool is marked
as negative.
2.2 Developing a Data Model
Let (cid:14) denote network vulnerability rate in the case of
network vulnerability rate estimation, and network infec-
tion rate in the case of network infection rate estimation.
A random data sample along with its associated pools of
various sizes marked either as positive or negative serve as
basis for deﬁning data vectors upon which we conduct s-
tatistical learning in order to derive (cid:14). Let us bring into
our discussion the data vector x = (x1; x2; :::; xm), in which
∀i ∈ {1; 2; :::; m}, xi is a random variable that denotes the
number of positive pools of size i in the data sample. In this
regard, let f and fi denote the probability density function
(PDF) for the data vector x and the PDF for xi, respective-
ly.
We can notice that testing whether or not a pool of size i
is positive is a Bernoulli trial. This is because the two fun-
damental conditions on a Bernoulli trial hold. First, each
vulnerability or infection test on a pool of size i can be de-
scribed by a sample space consisting of two values, namely 1
for ”positive” and 0 for ”negative”. And secondly, the prob-
ability that a pool of size i is positive, which in this paper
we denote with "i, remains constant from vulnerability or
infection test on pool of size i to vulnerability or infection
test on pool of size i. Thus, all the botnet vulnerability or
infection tests on all pools of size i in the data sample form
a Bernoulli process.
In the Bernoulli process that regards pools of size i in
the data sample, and we are always reasoning in terms of
∀i ∈ {1; 2; :::; m}, we can notice that the random variable
xi follows a binomial model. This is because the Bernoulli
trials on pools of size i in the data sample are independent
of one another, and "i remains constant from Bernoulli trial
to Bernoulli trial as we wrote earlier in this section. With
model we mean a parametric family of probability density
functions that are indexed by speciﬁc parameters. Let n =
(n1; n2; :::; nm) be a data vector whose elements ni, for ∀i ∈
{1; 2; :::; m}, are counts of the number of pools of size i in
the data sample.
Then we have xi ∼ Binom(ni, "i), and hence fi is a bi-
nomial distribution that can be expressed in the following
form:
fi(xi | ni; "i)
(1)
Thus, xi follows a family of binomial distributions indexed
by parameters ni and "i. Note that parameter ni is available
from the data sample. We now estimate the probability
that a pool of size i is positive, ∀i ∈ {1; 2; :::; m}, namely
"i. Given that the overall network vulnerability or infection
rate is (cid:14), the probability that a node in a pool of size i is
positive is also (cid:14). Because of this, the probability that a
node in a pool of size i is negative is 1 − (cid:14). The probability
that all the i nodes in a pool of size i are negative is (1− (cid:14))i.
The probability that not all the i nodes in a pool of size i are
negative, which corresponds to the probability that a pool
of size i is positive, is given by the following equation:
"i = 1 − (1 − (cid:14))i
(2)
Equation 2 also shows that the probability that a pool
of size i is positive remains constant over all the Bernoulli
trials on the ni pools of size i in the data sample, which is
a statement that we made earlier in this section. This is
because clearly both (cid:14) and i remain invariable throughout
the Bernoulli trials in question, and therefore produce in E-
quation 2 a "i that also remains invariable throughout those
Bernoulli trials. Given that random variable xi follows a
binomial model ∀i ∈ {1; 2; :::; m}, we can apply the formula
509
for the binomial distribution to estimate the probability of
xi pools of size i in the data sample being positive out of ni
such pools as shown below:
f (xi | ni; "i) =
i (1 − "i)ni(cid:0)xi
"xi
(3)
(
)
ni
xi
Let us brieﬂy go through the arguments for the validity of
Equation 3. Let Ω be a set that comprises all possible xi-size
subsets of the set of ni pools of size i in the data sample.
Thus, each element of Ω is a subset that comprises xi pools
of size i. The probability that xi out of ni pools of size i in
the data sample are positive is a logical AND between: (a)
the probability that any element of Ω comprises pools of size
i which are all vulnerable or infected; and (b) the probability
that the remaining ni−xi pools of size i are negative. If "i is
the probability that a pool of size i is positive, then clearly
"xi
is the probability that all pools of size i in an element of
i
Ω are positive.
Thus, the contribution that an element of Ω makes to the
probability that any element of Ω comprises pools of size i
which are all positive is "xi
i . Given that the total number
of contributors is equal to the cardinality of Ω, then the
total contribution, i.e. the probability that any element of
Ω comprises pools of size i which are all positive, is equal
to "xi
times the cardinality of Ω. The binomial coeﬃcient
i
in Equation 3 calculates the cardinality of Ω.
If "i is the
probability that a pool of size i is positive, then 1− "i is the
probability that a pool of size i is negative.
Consequently the probability that the remaining ni − xi
pools of size i are negative is (1 − "i)ni(cid:0)xi . The speciﬁca-
tion of such probability concludes Equation 3. By plugging
Equation 2 into Equation 3 we get the following equation:
f (xi | ni; "i) =
(1 − (1 − (cid:14))i)xi (1 − (cid:14))i(ni(cid:0)xi)
(
)
(4)
ni
xi
As ni lies in n, and as from Equation 2 we can derive that
"i is related to (cid:14) by a ﬁxed scaling constant, let us express
the binomial distribution fi in the following form equivalent
to Equation 1:
fi(xi | n; (cid:14))
(5)
For any j and k such that j; k ∈ {1; 2; :::; m} and j ̸= k,
xj and xk are statistically independent of one another. For
that reason, f can be expressed as a multiplication of all
fi deﬁned over ∀i ∈ {1; 2; :::; m} as shown in Equation 5.
Thus, the distribution of the data vector x is formulated as
the following equation:
f (x = (x1; x2; :::; xm) | n; (cid:14)) =
fi(xi | n; (cid:14))
(6)
m∏
i=1
Solving for the binomial coeﬃcient in Equation 4, and
thereafter plugging Equation 4 into Equation 6 gives us a
more detailed formulation of the distribution of the data