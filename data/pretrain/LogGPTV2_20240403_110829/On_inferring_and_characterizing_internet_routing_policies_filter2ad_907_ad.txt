### 图7：AS1在测量期间从SA前缀转换为非SA前缀或保持为SA前缀的前缀数量

- **6000**
- **5000**
- **4000**
- **3000**
- **2000**
- **1000**
- **0**

#### 前缀从SA到非SA
- **9000**
- **8000**
- **7000**
- **6000**
- **5000**
- **4000**
- **3000**
- **2000**
- **1000**

#### 前缀保持为SA
- **Uptime of prefix (Days)**
  - 5
  - 10
  - 15
  - 20
  - 25
  - 30

- **Uptime of prefix (Hours)**
  - 0
  - 1
  - 2
  - 3
  - 4
  - 5
  - 6
  - 7
  - 8
  - 9
  - 10
  - 11
  - 12

- **(a) March, 2002**
- **(b) March 15, 2002**

### 案例3：选择性宣告
我们重点关注原生自治系统（Origin AS）如何将其前缀导出给直接提供商。我们仅展示AS1的结果，因为我们在其路由表中观察到约32%的SA前缀。

请注意，一些原生自治系统是单宿主自治系统。它们必须向直接提供商宣告其前缀。例如，在图8(b)中，AS v 向其直接提供商 u1 宣告其前缀。AS u1 是最佳路径 u0u2u1v 和客户路径 u0u3u1v 的最后一个共同自治系统，除了源和目标自治系统外。因此，这可能是由于AS u1 或其之前的自治系统（如AS u3）的导出策略所致。在单宿主情况下，我们研究最后一个共同自治系统如何将其自身前缀及其从客户处学习到的前缀导出给直接提供商。

对于AS1中的每个SA前缀，我们在BGP表中搜索所有路径，以调查客户（即原生自治系统或最后一个共同自治系统）如何与路径中的直接提供商连接。
- 如果提供商位于客户的左侧，客户将导出与路径相关的前缀给提供商。
- 如果在提供商和客户之间存在提供商的上游提供商，则客户不会将此前缀导出给提供商。例如，在图8(a)中，如果找到路径 u3v，v 将其前缀导出给 u3。如果找到路径 u3u0u2u1v，v 不会将其前缀导出给 u3。

这种方法依赖于Oregon RouteView中的对等体数量，因此某些SA前缀无法识别。在AS1中，大约90%的SA前缀可以通过此方法识别。在这些已识别的前缀中，我们发现约有21%的客户将其前缀宣告给直接提供商，而约79%的客户不将其前缀导出给提供商。也就是说，为了控制其入站流量，某些客户只向一部分直接提供商宣告其前缀或其客户的前缀。多宿主自治系统可以使用BGP条件通告，在其中一个提供商的信息缺失时，只向另一个提供商宣告某些前缀 [18]。此功能可用于管理流量流向。

带有BGP社区标记的路由可以解释客户能够将SA前缀导出给直接提供商的情况。BGP社区属性的一个重要用途是流量工程。众所周知的NO EXPORT和NO ADVERTISE社区用于控制前缀宣告 [19]。除此之外，还有一些社区常用于指示接收者不要将路由宣告给特定的自治系统。许多自治系统支持这种社区，并且可以在BGP表中找到大量与此用法相关的社区 [20]。因此，直接提供商或其上游提供商可能由于这些社区而不宣告客户的路由。

通过这三个案例，我们发现SA前缀的主要原因是选择性宣告。这意味着客户采用的选择性宣告策略会影响顶级提供商接收前缀的路径。提供商可能会从其对等体那里接收其客户的前缀。然而，如果这些对等体不宣告这些前缀，提供商就无法访问客户。Afek等人 [21] 研究了政策原子，即在任何互联网骨干路由器上具有相同AS路径的一组前缀。[21] 表明大多数政策原子是由原生自治系统的路由策略创建的。我们的工作可以回答 [21] 中关于哪种路由策略创建了政策原子的问题。导出给提供商的策略是SA前缀的主要原因。然而，一些特殊情况也可能导致SA前缀。例如，一个自治系统在不同地区有几个网络，但该自治系统没有骨干网来连接这些网络。该自治系统将连接到每个网络最近的提供商。例如，AOL（AS1668）就属于这种情况。我们将在未来的工作中研究其他可能影响结果的案例。

### 5.2 导出给对等体
推断对等体如何将其前缀导出给其他对等体更为复杂，因为一对对等体可以定义灵活的导出策略来平衡其入站流量。这里我们关注一个对等体如何将其前缀导出给其他对等体。

从2002年11月18日的Oregon BGP表中，我们研究了AS1、AS3549和AS7018的对等体如何将其自身的前缀导出给这3个自治系统。表10显示了这3个自治系统的最终结果。对于AS1，只有6个对等体未将其所有前缀直接导出给它。其中，4个对等体将其大部分前缀直接导出给AS1。这可能是由于对等体链路之间的负载均衡。对于表10中的AS1、AS3549和AS7018，我们可以观察到大多数对等体将其自身的前缀直接导出给这些自治系统。也就是说，对等体倾向于直接向其他对等体宣告其前缀。

### 结论
本文展示了如何推断路由策略并对其进行特征化。首先，我们推断导入策略。我们发现，对于大多数自治系统而言，路由优先级符合自治系统关系。通常，从客户那里学到的路由优于从提供商和对等体那里学到的路由，从对等体那里收到的路由优于从提供商那里收到的路由。此外，路由优先级分配基于下一跳自治系统。其次，我们提出了一种推断导出策略的算法，并对其进行了特征化。客户可以选择性地将其前缀导出给一部分提供商。对于3个Tier-1自治系统，我们发现大量前缀被导出给选定的一部分提供商。我们发现前缀拆分和聚合不是选择性宣告的主要原因。从我们的研究中，客户将其前缀导出给一部分提供商是因为负载均衡。此外，大多数对等体倾向于直接将其前缀导出给其他对等体。

### 致谢
作者感谢Jennifer Rexford对论文的多次讨论和评论，以及提供AT&T路由数据。我们还要感谢匿名审稿人的宝贵意见。这项工作部分由NSF资助ANI-0208116、ANI-0085848和Alfred P. Sloan基金会资助。

### 参考文献
[略]

### 附录
[20] 显示BGP社区广泛使用，并描述了全球互联网中BGP社区属性最常见的用法。除了众所周知的社区值之外，最常见的社区值利用之一是标记从特定邻居自治系统接收到的路由。在这种情况下，一个自治系统为其客户、对等体和传输提供商定义社区值。当自治系统的边界路由器从邻居那里接收到一条路由时，它们会用一个社区标记该路由，以指示与那些邻居自治系统的关系。自治系统内的其他路由器可以根据这个社区做出路由决策。例如，在RIPE whois数据库中，AS12859定义了如表11所示的社区值，以标记从其客户、对等体和提供商接收到的路由。

**表11：AS12859发布的标记社区示例**
- **12859:1000** 从AMS-IX对等体接收到的路由
- **12859:1010** 从OpenPeering (AMS-IX) 接收到的路由
- **12859:1020** 从Telecity 2的私有对等体接收到的路由
- **12859:2000** 从SARA传输链接接收到的路由
- **12859:2010** 从Ede传输链接接收到的路由
- **12859:2020** 从Telecity 2传输链接接收到的路由
- **12859:4000** 从客户接收到的路由

请注意，一种关系类型可以用唯一的社区值表示，例如AS12859使用“12859:4000”来表示其所有客户。也可以用不同的社区值表示。例如，AS12859使用3个不同的社区值来表示其对等体，以及其他3个值来表示其提供商。因此，不同的社区值范围（不重叠）可以表示每种关系类型。我们将属于同一范围的两个社区值称为“相同”。例如，“12859:1010”和“12859:1020”是“相同”的值，因为它们属于对等体的社区值范围（介于“12859:1000”和“12859:2000”之间）。

给定一个自治系统，我们可以通过以下步骤验证其与其邻居自治系统之间的关系：

**步骤1：查询与下一跳自治系统关联的社区**
我们首先选择每个下一跳自治系统宣告的一些前缀。然后发送“show ip bgp IP address” Cisco IOS命令来查询这些前缀所带的社区。例如，在AS12859中，查询结果显示如下：
```
> show ip bgp 80.96.180.0
BGP routing table entry for 80.96.180.0/24
Paths: (1 available, best #1)
8220 12878 5606 15471
193.148.15.101 from 213.136.31.5
Origin IGP, metric 5, localpref 210, internal, best
Community: 12859:1000
```

**步骤2：推断社区值的语义**
当自治系统发布其规则时，推断社区值的语义很容易，例如在IRR数据库中注册。例如，AS12859在其IRR中发布了社区值的语义，而AS6667在其网页上发布了社区值的语义。这里我们重点介绍如何在自治系统未发布其规则的情况下推断社区值的语义。主要思想是，因为所有具有相同关系的自治系统都会被标记为同一种类型的社区，我们只需要确定一对自治系统之间的每种关系。然后，所有被标记为同一种类型社区的自治系统都将具有相同的关系。

基于从下一跳自治系统收到的前缀数量，我们可以推断某些特殊自治系统的关系。假设一个自治系统有提供商，它将从提供商那里接收完整的BGP表或部分前缀列表。它还将接收客户宣告的前缀。从提供商和客户收到的前缀数量之间的巨大差异表明，宣布最多前缀的自治系统是提供商，宣布最少前缀的自治系统是客户。如果没有提供商，则宣布最多前缀的自治系统必然是对等体。

如果自治系统既有提供商又有对等体，我们可以通过宣布最多前缀的自治系统来区分一个提供商。所有提供商应具有相同的社区值类型，而对等体则具有不同的社区值。对等体是宣布大量前缀且具有与提供商不同社区值的自治系统。

例如，图9显示了AS1（GTE）、AS3549（Global Crossing）和AS8736（Grapes Network Services）从其下一跳自治系统收到的前缀数量。我们将这些下一跳自治系统按宣告的前缀数量降序排列。因为AS1和AS3549没有提供商，所以我们得出结论，前几个自治系统（图9中用圆圈表示），如AS701（UUNET），是对等体。我们还可以得出结论，最后几个下一跳自治系统（图9中用方框表示），宣告非常少的前缀（如1或2个前缀），应该是客户。在AS8736中，一个下一跳自治系统宣告了超过10万个前缀，因此我们得出结论，该自治系统是一个提供商。我们对AS3549社区语义的结论得到了该自治系统的确认。

**步骤3：将社区映射到自治系统关系**
根据社区值的语义，我们推导出自治系统与其下一跳自治系统之间的关系。以上述示例为例，前缀“80.96.180.0/24”在AS12859中标记为“12859:1000”社区。根据表11，AS8220与AS12859之间的关系是对等关系。