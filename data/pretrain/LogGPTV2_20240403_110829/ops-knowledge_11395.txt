User: How to use Ansible scripts to implement batch deployment and configuration management of large-scale servers?
Assistant: Batch deployment and configuration management are one of Ansible's strengths, and automated deployment and configuration management of large-scale servers can be easily realized through Ansible scripts. The following are the specific steps: 1. Install Ansible: Download the latest version of the installation package from the official website of Ansible, and install it according to the prompts. 2. Create an Ansible configuration file: Specify the list of servers to be managed, SSH port, login user, and secret key in the Ansible configuration file. The content of the sample configuration file is as follows: ``` [web] 192.168.1.10 192.168.1.11 192.168.1.12 [web:vars] ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_private_key_file=/root/.ssh/id_rsa ``` 3. Create Ansible Playbook: Ansible playbook is a collection of tasks, specifying the operations that need to be performed on the target server. For example, installing packages, configuration files, service restarts, etc. The sample Playbook content is as follows: ``` - name: Install Nginx hosts: web become: yes tasks: - name: Update apt cache apt: update_cache: yes - name: Install Nginx apt: name: nginx notify: - restart nginx handlers: - name: restart nginx service: name: nginx state: restarted ``` The purpose of this Playbook is to install Nginx on all servers in the web group and restart the service after the installation is complete. 4. Run Ansible Playbook: Run the following command to execute the above Playbook. ``` ansible-playbook playbook.yml ``` Ansible will automatically connect to the specified server, execute the tasks in the Playbook, and output the execution results. Through the above steps, batch deployment and configuration management of large-scale servers can be easily realized, reducing manual operations and human errors, and improving deployment and management efficiency.