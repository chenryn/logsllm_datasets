⇒ (cid:2)course, variable x(cid:3),
where
request.teaching is requester’s teaching
attribute value and
variable x is a variable that refers to
the course attribute value in the access request.
Some attributes in an enterprise might need only one ac-
cess policy for each disjoint subset of possible values. For
example an attribute like Age whose possible values are
from (17,120) might need a policy only for disjoint sub-
ranges like (17,30], (30,65] and (65,120). In general, we
observe that any attribute that has inﬁnite or uncountable set
as the range of values and whose values cannot be grouped
together in any meaningful way will have only one policy.
While any attribute that divides the population into disjoint
sets might need a policy for every (cid:1)attribute, value(cid:2) pair.
We analyzed attributes in three units of University of Illi-
nois with the above observations in mind found that only
20% of them need a unique policy for each value while for
50% of them a single policy per attribute is sufﬁcient.
Furthermore, a single enterprise policy administrator
does not necessarily need to specify and manage policies
for all attributes in an enterprise. Policy administrators in
each unit can be responsible for specifying and managing
policies for attributes originating from their unit, thereby
enabling distributed administration of access policies.
User Interface. End users cannot be expected to write
database queries or logical expressions. An effective user
interface for composing ABM addresses is crucial for the
ABM system to be adopted. Similarly, policy administra-
tors will beneﬁt from a user interface for specifying poli-
cies. Though we do not address these needs in this work,
user interfaces that closely satisfy the requirements are
those found in web directories and catalog searches. More-
over, recent advances in natural language query interfaces
such as NaLix [12, 13], that enable translation of queries
in English into queries in XQuery can further improve the
usability of ABM system.
Privacy Considerations. Another issue that needs atten-
tion when deploying a system like ABM is privacy of sender
and recipient e-mail addresses and of the ABM address it-
self. For instance, should the senders be allowed to know
the list of recipients of the message sent to a particular ABM
address? Are receivers entitled to know why they received
a particular message or the ABM address that was used to
target the message? When the attributes used to target a
message are sensitive allowing senders to know the list of
recipients would compromise the privacy of the recipients.
Similarly letting the recipients of a message know the ABM
address used to target the message might leak sensitive in-
formation if they could learn who else received the message.
If a sensitive attribute, for example medical condition,
is used in an ABM address to target messages then 1) the
ABM address using the sensitive attribute, 2) the list of re-
cipients (e-mail addresses) targeted by the ABM address
and 3) the sender’s e-mail address should all be consid-
ered sensitive and there should be policies governing the re-
lease of such information. For instance, senders may be al-
lowed to know only those recipients that are not targeted by
the sensitive attribute. Recipients may be allowed to know
only their attributes that were included in the ABM address
rather than the (entire) ABM address.
If a sender target-
ing messages based on sensitive attributes is not allowed to
know the recipient list, it might be desirable to reciprocally
not let the recipients know who the sender is.
7. Related Work
We discuss four areas of related work: targeted messag-
ing systems, secure role-based messaging, WSEmail, and
attribute based access control.
Perhaps the most similar technology to ABM arises
in Customer Relationship Management (CRM) systems.
CRMs help enterprises target customers by isolating spe-
ciﬁc buying patterns and using this to customize the com-
munication with them. The key difference between CRMs
and ABM is that in CRMs the communication is from the
enterprise to the customer group and so there is no need
for access control. Where as in ABM messages are sent
by users to other users after access is determined by the
attributes of the sender.
In other words, CRM generally
uses a monolithic permission given to the owner of the sys-
tem, whereas ABM provides diverse permissions to a broad
user group. Traditional list servers also provide a way to
send e-mail messages to a certain group of people. One can
imagine driving membership in lists from a database of at-
tributes to provide a form of ABM. For example, SendMail
(a popular MTA) can be integerated with LDAP but it lacks
a mechanism to control the use of such mailing lists. A
key difference between ABM and list servers is the fact that
ABM has the potential to route on ‘involuntary’ attributes of
recipients rather than relying solely or mainly on voluntary
subscriptions. A good potential use of ABM is to provide a
way for users to subscribe to lists automatically and volun-
tarily by collecting a user proﬁle of interests.
Secure role-based messaging uses RBAC for authoriz-
ing access to sensitive e-mail content [7, 16]. In this area
[7] allows users to send messages to a given role identi-
ﬁed by a special e-mail address. Users that are assigned to
that role can then provide their role membership credentials
and access the e-mail. Using a slightly different approach
[16] employs Identity Based Encryption (IBE) for encrypt-
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006ing messages to recipients; i.e., recipient must authenticate
themselves to a role administration system and obtain the
e-mail decryption keys. These two approaches differ from
ABM access control as described in this paper by focusing
on the access control rules for recipients, whereas we fo-
cused on access control rules for senders. Of course, they
also differ in the use of roles rather than attributes as a foun-
dation for policies.
The Adaptive Messaging Policy (AMPol) project, of
which this paper is a part, has considered some technolo-
gies related to ABM [15, 2, 1]. WSEmail is the idea of
building messaging systems over a web services founda-
tion. A prototype [15] of such a system demonstrated
messages that could be routed with addresses that are de-
termined dynamically as the message passes through WSE-
mail MTAs. However, this system does not decide on recip-
ients based on their attributes. A WSEmail-based design [2]
shows how to adapt to recipient policies as part of messag-
ing, but this design does not deal with multiple recipients.
Other details on AMPol, can be found on the AMPol web
site (seclab.cs.uiuc.edu/ampol).
Early works on ABAC [5, 17, 19, 18] use it for trust
negotiation and credential based access control in a dis-
tributed system with multiple administrative domains. Our
ABM study shows how ABAC is also valuable for enter-
prise applications and uses attributes assimilated from back-
end databases. Also, access control in ABM is different
from access control in traditional systems and services be-
cause the resource (i.e., an ABM address) is somewhat dif-
ferent than a resource in these traditional systems. Most
of the research on ABAC provides insights on theory and
expressiveness for applications but do not discuss imple-
mentation of the proposed designs and practical studies on
applications. Some works [14, 19, 18] have led to imple-
mentations, but no performance data is available. At the
same time performance of access control systems in becom-
ing important in recent application such as location based
access control [6]. In this work we demonstrate the prac-
ticality of ABAC for a novel enterprise application (ABM)
in a mid-size enterprise as evidenced by our performance
evaluation.
8. Conclusion
We have demonstrated a simple and manageable access
control model for ABM based on ABAC that accommo-
dates a useful collection of ABM applications. We have
shown that this access control system can be embedded in
an architecture that can be deployed in virtually any enter-
prise messaging system. Finally we have shown that this
architecture can be implemented efﬁciently for mid-size en-
terprises and we have given a proﬁle of policy parameters
that affect its efﬁciency.
There are a number of interesting questions and open op-
portunities for ABM with ABAC. Two of these will partic-
ularly interest us for future research:
interdomain opera-
tion of ABM and more expressive ABAC policy languages.
While we have shown how to architect and deploy ABM
for enterprises, it is much trickier to do this when multiple
enterprises are involved. For example, suppose we wish to
send a message to all of the doctors in a given county. This
cannot be done with a single database or even the collec-
tion of databases of a single enterprise. There is some need
to map the attribute ‘doctor’ across multiple domains. This
problem arises with virtually any interdomain authorization
challenge so the problem is only illustrative, but it is perhaps
more tractable for ABM than for interdomain authorization
in general. Clearly some techniques are required to map at-
tributes. We have a design for such a system assuming such
a mapping is possible, but it needs to be developed and stud-
ied in the way we have approached the enterprise systems
in this paper. Our ABAC policy language (implemented as
a subset of XACML) is rudimentary. We choose it because
it was clearly useful and yielded non-trivial questions about
processing and performance. However, one can certainly
imagine ABAC based ABM systems beneﬁting from a more
theoretical analysis of policy language expressibility such
as that undertaken by [11, 17] for distributed systems. At
the same time, it is not clear how complex a policy language
should be; perhaps expressiveness is less important than the
ease of maintaining policies. After all, existing systems do
not offer ABM at all, so even basic functions are a step for-
ward. Complex policies that lead to unintentional user er-
rors would dampen enthusiasm for deployment. Neverthe-
less, there are a variety of interesting theoretical questions
that can be considered in this area.
Acknowledgements
We would like to thank Noam Artz, Mike Berry, and
anonymous reviewers for their helpful comments. This ma-
terial is based upon work supported by the ONR N00014-
04-1-0562 and N00014-02-1-0715. This work also bene-
ﬁted from partial support by NSF CCR02-08996, CNS05-
09268, and CNS05-24695, a grant from MacArthur Foun-
dation and the Sohaib and Sara Abbasi Fellowship. Any
opinions, ﬁndings, and conclusions or recommendations
expressed in this publication are those of the author(s)
and do not necessarily reﬂect the views of ONR, NSF or
MacArthur Foundation.
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006[17] L. Wang, D. Wijesekera, and S. Jajodia. A logic-based
framework for attribute based access control. In FMSE ’04:
ACM workshop on Formal methods in security engineering,
Washington DC, pages 45–55. ACM, 2004.
[20] N. Yuhanna, M. Gilpin, L. Hogan, and A. Sahalie.
Infor-
mation fabric: Enterprise data virtualization. White Paper,
Forrester Research Inc., January 2006.
[18] T. Yu, M. Winslett, and K. E. Seamons. Supporting struc-
tured credentials and sensitive policies through interoperable
strategies for automated trust negotiation. ACM Trans. Inf.
Syst. Secur., 6(1):1–42, 2003.
[19] E. Yuan and J. Tong. Attributed Based Access Control
(ABAC) for Web Services. In ICWS’05: IEEE International
Conference on Web Services, Orlando, page 569. IEEE, July
2005.
References
[1] R. N. Afandi, J. Zhang, and C. A. Gunter. AMPol-Q:
Adaptive Middleware Policy to Support QoS.
In Interna-
tional Conference on Service Oriented Computing(ICSOC),
Chicago, IL, December 2006.
[2] R. N. Afandi, J. Zhang, M. Haﬁz, and C. A. Gunter. AM-
Pol: Adaptive Messaging Policy. In European Conference
on Web Services(ECOWS ’06), Zurich, Switzerland, Decem-
ber 2006. IEEE.
[3] XACML references. Technical Report v1.54, OASIS, May
2005.
[4] N. Bieberstein, R. Shah, K. Jones, S. Bose, and M. Fi-
ammante. Service-Oriented Architecture COMPASS: Busi-
ness Value, Planning, and Enterprise Roadmap. Pearson
Education, 2005.
[5] P. A. Bonatti and P. Samarati. A uniform framework for reg-
ulating service access and information release on the web. J.
Comput. Secur., 10(3):241–271, 2002.
[6] K. Borders, X. Zhao, and A. Prakash.
CPOL: high-
performance policy evaluation. In CCS ’05: 12th ACM Con-
ference on Computer and Communications Security, Vir-
ginia, pages 147–157. ACM Press, 2005.
[7] D. Chadwick, G. Lunt, and G. Zhao.
Secure Role-
based Messaging.
In CMS ’04: Eighth IFIP TC-6 TC-
11 Conference on Communications and Multimedia Secu-
rity,Windermere, UK, pages 263–275, 2004.
[8] E. Damiani, S. D. C. di Vimercati, and P. Samarati. New Par-
adigms for Access Control in Open Environments.
In 5th
IEEE International Symposium on Signal Processing and
Information, Athens, December 2005.
[9] D. Ferraiolo, D. Kuhn, and R.Chandramouli. Role Based
Access Control. Artech House, 2003.
[10] eXtensible Access Control Markup Language (XACML).
Technical Report v1.1, OASIS, August 2003.
[11] N. Li, J. C. Mitchell, and W. H. Winsborough. Design of a
role-based trust management framework. In IEEE Sympo-
sium on Security and Privacy, Oakland, May 2002.
[12] Y. Li, H. Yang, and H. Jagadish. Nalix: an interactive natural
language interface for querying xml. In ACM SIGMOD In-
ternational Conference on Management of Data (SIGMOD
2005), Baltimore MD, June 2005.
[13] Y. Li, H. Yang, and H. Jagadish. Constructing a generic
natural language interface for an xml database.
In In-
ternational Conference on Extending Database Technology
(EDBT 2006), Munich Germany, March 2006.
[14] M. Lorch, S. Proctor, R. Lepro, D. Kafura, and S. Shah. First
experiences using XACML for access control in distributed
systems. In XMLSEC ’03: ACM workshop on XML security,
Virginia, pages 25–37. ACM, 2003.
[15] K. D. Lux, M. J. May, N. L. Bhattad, and C. A. Gunter.
WSEmail: Secure internet messaging based on web ser-
vices. In International Conference on Web Services (ICWS
’05), Orlando FL, July 2005. IEEE.
[16] M. C. Mont, P. Bramhall, and K. Harrison. A Flexible Role-
based Secure Messaging Service: Exploiting IBE Technol-
ogy for Privacy in Health Care. In DEXA ’03: 14th Interna-
tional Workshop on Database and Expert Systems Applica-
tions, page 432. IEEE, 2003.
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006