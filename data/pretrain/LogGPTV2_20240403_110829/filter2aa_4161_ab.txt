  -N，--no-capture：不要尝试捕获回复。
  --privileged：假设用户具有完全特权。
  --unprivileged：假设用户缺少原始套接字权限。
  --send-eth：在原始以太网层发送数据包。
  --send-ip：使用原始IP套接字发送报文。
  --bpf-filter ：指定自定义BPF过滤器。
OUTPUT：
  -v：将详细程度级别递增1。
  -v [level]：设置详细程度级别。例如：-v4 
  -d：将调试级别递增1。
  -d [level]：设置调试级。例如：-d3 
  -q：将详细程度级别降低一级。
  -q [N]：降低冗长级别N次
  --quiet：将详细程度和调试级别设置为最小。
  --debug：将verbosity和debug设置为最大级别。
示例：
  nping scanme.nmap.org 
  nping --tcp -p 80 --flags rst --ttl 2 192.168.1.1 
  nping --icmp --icmp-type time --delay 500ms 192.168.254.254 
  nping --echo-server“public”
```
### ndiff - 用于比较Nmap扫描结果的实用程序
```
root @ kali：〜＃ndiff -h 
用法：/ usr / bin / ndiff [option] FILE1 FILE2 
比较两个Nmap XML文件并显示它们的差异列表。
差异包括主机状态更改，端口状态更改以及
服务和操作系统检测更改。
  -h，--help显示此帮助
  -v，--verbose还显示未更改的主机和端口。
  - 文本格式的文本显示输出（默认）
  - XML格式的xml显示输出
  ```
  ### ncat - 连接和重定向套接字
  ```
  root @ kali：〜＃ncat -h 
Ncat 6.40（http://nmap.org/ncat）
用法：ncat [options] [hostname] [port] 
选项占用时间假定为秒。追加“ms”为毫秒，
“s”为秒，“m”为分钟，或“h”为小时（例如500ms）。
  -4仅使用IPv4 
  -6 仅使用IPv6 
  -un，--unixsock 仅使用Unix域套接字
  -C，--crlf对EOL序列使用CRLF 
  -c，-- sh -exec 通过/ bin执行给定命令/ sh 
  -e，
      --exec 执行给定的命令--lua-exec 执行给定的Lua脚本
  -g hop1 [，hop2，...   - listen绑定和侦听传入连接-k，-- keep -open在侦听模式下接受多个连接   -n，--nodns不通过DNS解析主机名   -t，--telnet回答Telnet协商   -u，--udp使用UDP而不是默认TCP       --sctp使用SCTP而不是默认TCP   -v，--verbose设置详细程度级别（可以使用多次）   -w，--wait 连接超时       --append-output追加而不是clobber指定输出文件       --send-only只发送数据，忽略接收; 退出EOF       - 仅限recv只接收数据，
```
### nmap - 网络映射器
```
root @ kali：〜＃nmap -h 
Nmap 6.40（http://nmap.org）
用法：nmap [扫描类型] [选项] {目标规格} 
目标规格：
  可以传递主机名，IP地址，网络等。
  例如：scanme.nmap.org，microsoft.com/24，192.168.0.1; 10.0.0-255.1-254 
  -iL ：从主机/网络列表输入-iR ：
  选择随机目标
  --exclude ：Exclude主机/网络
  --excludefile ：从文件中排除列表
HOST DISCOVERY：
  -sL：列表扫描 - 只列出要扫描的目标
  -sn：Ping扫描 - 禁用端口扫描
  -Pn：将所有主机视为联机 - 跳过主机发现
  -PS / PA / PU / PY [portlist]：TCP SYN / ACK，   IP协议扫描-b ：FTP反弹扫描 端口规范和扫描顺序   ：-p ：仅扫描指定的端口     例如：-p22; p1-65535; -p U：53,111,137，T：21-25,80,139,8080，S：9   -F：快速模式 - 扫描比默认扫描更少的端口   -r：连续扫描端口 - 不随机化   --top-ports ：扫描最常见的端口   --port-ratio ：扫描端口比更常见 SERVICE / VERSION检测：   -sV：探测开放端口以确定服务/版本信息   - >：设置从0（光）到9（尝试所有探头）--   version-light：   限制最可能的探测（强度2）-- version-all：尝试每个探测器（强度9）--   version-trace：显示详细版本扫描活动（用于调试） SCRIPT SCAN：   -sC：等价于--script =默认   --script = ：是逗号分隔的            目录，脚本文件或脚本类别   列表--script-args = ：显示关于脚本的帮助。                        是一个逗号分隔的脚本文件或脚本类别的列表。 操作系统检测：   -O：启用操作系统检测   --osscan-limit：将操作系统检测限制为有希望的目标   --osscan-guess：更积极地猜测OS 时间和性能：   采用的选项以秒为单位或追加'ms' （毫秒），   “s”（秒），“m”（分钟）或“h”（小时）   -T ：设置定时模板（越高越快）--   min-hostgroup / max-hostgroup ：并行主机扫描组大小   --min-parallelism / max-parallelism ：探测并行化   - -min-rtt-timeout / max-rtt-timeout / initial-rtt-timeout ：       指定探测往返时间。   --max-retries ：端口扫描探测重传的数目。   --host-timeout ：在这个长时间后放弃目标。   -scan-delay / - max-scan-delay ：调整探测之间的延迟   --min- rate 比每秒每秒   --max-rate ：发送数据包不快于每秒 FIREWALL / IDS EVASION AND SPOOFING：   -f; --mtu ：片段包（可选地，w /给定的MTU）   -D ：   Clook a scan with decoys -S ：Spoof source address   -e ：使用指定的接口   -g / - source-port ：   使用给定的端口号--data-length ：将随机数据附加到发送的数据包   --ip-options ：发送具有指定ip选项的数据包   --ttl ：设置IP生存时间字段   - -spoof-mac ：欺骗您的MAC地址   --badsum：发送带有伪造TCP / UDP / SCTP校验和的数据包 OUTPUT：   -oN / -oX / -oS / -oG 分别以正常，XML，s | ：一次输出三种主要格式   -v：提高详细程度（使用-vv或更高效果）   -d：提高调试级别（使用-dd或更高效果）--   reason：   脚本扫描和traceroute --datadir ：指定自定义Nmap数据文件位置   --send-eth / - send-ip：使用原始以太网帧或IP数据包发送   --privileged：假设用户是完全特权   - -unprivileged：假定用户缺少原始套接字权限   -V：打印版本号   -h：打印此帮助摘要页。 示例：   nmap -v -A scanme.nmap.org   nmap -v -sn 192.168.0.0/16 10.0.0.0/8   nmap -v -iR 10000 -Pn -p 80 查看用户手册（http://nmap.org /book/man.html）更多选项和示例 使用原始以太网帧或IP数据包发送--privileged：假设用户是完全特权 - - 特权：假设用户缺少原始套接字权限-V：打印版本号-h：打印此帮助摘要页。示例：nmap -v -A scanme.nmap.org nmap -v -sn 192.168.0.0/16 10.0.0.0/8 nmap -v -iR 10000 -Pn -p 80 查看用户手册（http://nmap.org /book/man.html）更多选项和示例 使用原始以太网帧或IP数据包发送--privileged：假设用户是完全特权 - - 特权：假设用户缺少原始套接字权限-V：打印版本号-h：打印此帮助摘要页。示例：nmap -v -A scanme.nmap.org nmap -v -sn 192.168.0.0/16 10.0.0.0/8 nmap -v -iR 10000 -Pn -p 80 查看用户手册（http://nmap.org /book/man.html）更多选项和示例
```
### nmap用法示例
扫描详细模式（-v），启用操作系统检测，版本检测，脚本扫描和traceroute （-A），针对目标IP （192.168.1.1）进行版本检测（-sV ）：
```
root @ kali：〜＃nmap -v -A -sV 192.168.1.1 
启动Nmap 6.45（http://nmap.org）在2014-05-13 18:40 MDT 
NSE：加载118脚本扫描。
NSE：脚本预扫描。
在18:40启动ARP Ping扫描
扫描192.168.1.1 [1端口] 
在18:40完成ARP Ping扫描，已过去
0.06秒（1个主机）启动1个主机的并行DNS解析。at 18:40 
完成1个主机的并行DNS解析。at 18: 
40，0.00s elapsed 启动SYN隐藏扫描在18:40 
扫描router.localdomain（192.168.1.1）[1000端口] 
发现的开放端口53 / tcp在192.168.1.1 
发现的开放端口22 / tcp在192.168.1.1 
发现在192.168.1.1上打开端口80 / tcp在192.168.1.1上
发现打开的端口3001 / tcp
```
### nping用法示例
使用TCP模式（-TCP）来探测端口22 （-p 22）使用SYN标志（-flags SYN）为2的TTL (–ttl 2) 在远程主机上（192.168.1.1） ：
```
60125 SA ttl = 64 id = 0 iplen = 44 seq = 3409166569 win = 5840  SENT（3.0707s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（3.0710s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3424813300 win = 5840  SENT（4.0721s）TCP 192.168.1.15 ：60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（4.0724s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％） Nping完成：1 IP地址在4.13秒内ping通 SENT（3.0707s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（3.0710s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3424813300 win = 5840  SENT（4.0721s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（4.0724s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通 SENT（3.0707s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（3.0710s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3424813300 win = 5840  SENT（4.0721s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（4.0724s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通 168.1.1：22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3424813300 win = 5840  SENT（4.0721s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（4.0724s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通 168.1.1：22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3424813300 win = 5840  SENT（4.0721s）TCP 192.168.1.15:60125> 192.168.1.1:22 S ttl = 2 id = 54240 iplen = 40 seq = 1720523417 win = 1480 RCVD（4.0724s）TCP 192.168.1.1:22> 192.168.1.15:60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通 60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通 60125 SA ttl = 64 id = 0 iplen = 44 seq = 3440460772 win = 5840  Max rtt：0.337ms | 最小rtt：0.282ms | 平均rtt：0.296ms 发送的原始分组：5（200B）| Rcvd：5（230B）| 丢失：0（0.00％）Nping完成：1 IP地址在4.13秒内ping通
```
### ndiff用法示例
比较昨天的端口扫描（yesterday.xml）与从今天（today.xml）的扫描：
```
root @ kali：〜＃ndiff yesterday.xml today.xml 
-Nmap 6.45 scan started Tue May 13 18:46:43 2014 as：nmap -v -F -oX yesterday.xml 192.168.1.1 
+ Nmap 6.45 scan initiated Tue May 13 18:47:58 2014 as：nmap -v -F -oX today.xml 192.168.1.1 
 endian.localdomain（192.168.1.1，00：01：6C：6F：DD：D1）：
未显示：96个过滤端口
+未显示：97过滤的端口
 PORT STATE服务版本
-22 / tcp打开ssh
 ```
 ### ncat用法示例
 要详细（-v） ，运行/ bin /在连接庆典（-exec“/斌/ bash中”） ，只允许1个IP地址（-ALLOW 192.168.1.123） ，听TCP端口4444上（-l 4444） ，和保持侦听器断开连接（-keep-open）：
 ```
 root @ kali：〜＃ncat -v --exec“/ bin / bash”--allow 192.168.1.123 -l 4444 --keep-open 
Ncat：Version 6.45（http://nmap.org/ncat）
Ncat：Listening on ::: 4444 
Ncat：正在侦听
0.0.0.0:4444 Ncat：从192.168.1.123连接。
Ncat：连接从192.168.1.123:39501。
Ncat：从192.168.1.15连接。
Ncat：连接从192.168.1.15:60393。
Ncat：新连接被拒绝：不允许
```