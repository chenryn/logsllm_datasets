/o参数完成这一任务。
这些方法对我们来说都不适用。幸运的是有个[文档](https://www.howtogeek.com/126016/three-ways-to-access-the-windows-8-boot-options-menu/)中描述了另一种方法：在开始菜单中选择重启的同时按住Shift键，这样系统将在重启时进入高级启动选项模式。听起来此方法也不怎么有效，因为你还是得进入系统才能选择菜单。幸运的是在那台工作站的登录界面有个重启选项，而按住Shift这个技巧在这个界面还是可以正常工作。在登录界面右下角点击电源选项，按住Shift同时选择重启，一切顺利的话你可以看到如下界面：
选择“故障排除”选项，进入下一界面。
在这里选择“高级选项”，进入下一界面。
在此界面中，选择“启动设置”选项，进入如下界面。前面那个界面中你第一反应可能认为应该选择“命令行”选项以获取系统命令提示符，但这种情况下你还是需要一个本地管理员用户的密码。
选择“重启”后工作站将会重启，你可以看到如下提示界面。
最后，按下F1启动内核调试功能。现在，F8的功能又回来了，一切按照计划进行的话，你可以在WinDBG中看到熟悉的启动信息。
**六、代码执行**
现在你拥有了附加到工作站的一个内核调试器，最后一个工作就是绕过登录界面。使用Firewire
DMA攻击时的一个常见技巧是在内存中搜索与LSASS的密码检查相对应的对应模块（Pattern）并将其终止，然后任何登录密码都可以进入系统。这是一个办法，但并不完美（比如你会在系统日志中留下登录记录）。此外，很有可能本地管理员账号已经重命名过，那么你还需要知道一个可用的用户名。
与此相反，我们准备发起一个更有针对性的攻击。我们拥有的是系统可用的内核视图，而不是物理内存视图，因此还是有希望的。登录界面中有个辅助工具选项，使用这个选项会以SYSTEM权限创建一个新进程。我们可以劫持该进程创建过程以获得命令提示符，来完成攻击任务。
首先，我们要对目标主机配置符号链接。没有符号链接我们无法通过枚举必要的内核结构以查找要攻击的系统数据。确保符号链接配置正确的最简单的一个方法是在命令调试窗口中输入“!symfix+”然后输入“!reload”即可。输入“
!process 0 0 winlogon.exe”命令，查找负责登录窗口显示的进程。一个成功的输出如下所示：
上图标红部分值即为EPROCESS结构的内核地址。复制该值，使用“.process /i
EPROCESS”命令获得一个交互式调试会话。输入“g”，按下F5或回车，你可以看到以下信息：
现在，通过这个交互式会话，输入“ !reload
-user”，我们可以枚举用户模块并加载他们的符号链接。我们可以在CreateProcessInternalW上设置断点，这个函数在每次创建新进程时都会用到。不同系统版本中该函数所处位置不一样，在Windows
7上它位于kernel32 DLL中，在Windows 8以上它位于kernelbase DLL中。因此，根据系统版本，使用“bp
MODULE!CreateProcessInternalW”命令对相应模块进行替换。
设置断点后，点击登录屏幕上的轻松访问按钮，此时断点条件被触发。现在依次输入“r”和“k”命令，导出当前寄存器值，显示返回地址信息。如下所示：
我们可以在堆栈轨迹中看到与轻松访问貌似有关的调用，如WlAccessibilityStartShortcutTool等。CreateProcessInternalW需要很多参数，但我们真正感兴趣的只有第三个参数，它是一个指向NUL结尾的命令行字符串指针。我们可以修改该指针指向命令提示符以执行命令。首先，使用“dU”命令确保我们已获取正确的字符串，对于x64系统，我们需要使用“dU
r8”命令，因为第三个参数存储在r8寄存器中，对于x86系统我们使用的是“dU
poi(@esp+c)”命令，因为32位系统上所有的参数都在堆栈上进行传递。如下所示：
可知WinLogon正在试图创建一个utilman.exe的运行实例。现在这个字符串处于可写状态（如果不可写，系统就会崩溃，这是CreateProcess的一个愚蠢行为），我们直接覆盖它即可。使用ezu
r8 "cmd"或者ezu poi(@esp+c) "cmd"命令，输入g，回车，命令提示符就会出现在你的眼前。
**  
**
**七、缺点分析**
该方法存在多个不足，如：
1、工作站必须有个串口，串口必须配置为COM1，现如今这种情况已不常见。
2、操作中工作站必须重启，这意味着你无法获得任何已登录用户的凭证或内存中的敏感信息。另外如果工作站有个启动密码，你也无法对它采取重启操作。
3、内核调试配置必须处于默认设置状态。
4、在配置了TPM型Bitlocker机器上，你无法在忽略Bitlocker引导条件下改变调试器配置。
最后我想说明的是这种方法的配置成本较低，你只需要随身携带一个USB转串口适配器以及一根闲置调制解调器线缆即可，这并不麻烦。
**八、防御措施**
有以下一些方法可以防御此类攻击：
1、将默认调试配置改为本地内核调试。这种模式意味着只有以管理员权限运行的本地调试器能够调试内核（且调试功能必须启用）你可以通过启动管理员命令行，输入“bcdedit
/dbgsettings LOCAL”更改配置。你也可以通过登录脚本或GPO选项实现自动配置。
2、不要购买带有串口的工作站。听上去不是个好主意，因为很多时候你没法掌握购买权。但仍然不要购买带有无意义接口的设备，据我所知有些供应商仍然生产具有该接口的工作站。
3、如果你的电脑带有串口，请在BIOS中禁用它们。如果无法禁用，请将它们的默认I/O口设置为除0X3F8的其他值。老式COM口不能即插即用，Windows使用了显式I/O口与COM1通信。如果你的COM口未配置为COM1，Windows将无法正确使用它们。如果你安装的是二手市场的COM口设备，同样需要对此项进行修改。
4、最后请使用TPM型Bitlocker。即使之后别人没办法对你的硬盘进行离线修改，这样做也是值得的。Bitlocker结合TPM可以阻止别人在不知道Bitlocker恢复密钥前提下启动系统的调试功能。在Windows
8以上进入系统设置选项前需要对启动选项进行临时修改配置，这会导致TPM引导失败。我没有在Windows
7上测试此项功能，因为启动菜单位于winload.exe启动进程中，此时Bitlocker的密钥已经解密，因此我认为使用F8可能无法修改启动选项。读者可以在配置Bitlocker及TPM的Windows
7机器上进行测试。
另一个有趣的事情是，我在写这篇文章时，最新版的Windows
10（1607周年版）已经将内核调试默认设置为本地调试状态。然而如果你从老系统升级而来，这个选项可能在升级期间未发生改变，你需要核实一下。
**九、总结**
根据前文分析，这个方法不是一个特别严重的系统缺陷。如果已经有人能够物理访问你的机器，他已经可以采用一些常见手段进行攻击（如HDD访问、BIOS、Firewaire等）。物理攻击法是个好方法，为此你也需要在物理层面对你的机器进行防护。此外你还可以考虑部署Bitlocker，这样别人就难以通过攻击启动过程来危害机器，同时也可以防止电脑被窃后的敏感信息泄露。