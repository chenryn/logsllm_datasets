9
10
11
12
13
14
15
16
17
1
2
3
4
5
6
7
1
def inherit(mother: R[], father: R[]): R[] {
return [mother[flip(1/2)], father[flip(1/2)]];
}
def prior() {
nucl := array(7, array(2, 0));
nucl[0] := [flip(1/2), flip(1/2)];
nucl[1] := [flip(1/2), flip(1/2)];
nucl[2] := [flip(1/2), flip(1/2)];
nucl[3] := [flip(1/2), flip(1/2)];
nucl[4] := inherit[nucl[0], nucl[1]];
nucl[5] := inherit[nucl[2], nucl[3]];
nucl[6] := inherit[nucl[4], nucl[5]];
return nucl;
}
(a) medical-belief.psi
def program(nucl: R[][]): R {
sum := 0;
for i := 0 .. 6 {
sum := nucl[i][0] + nucl[i][1];
}
return sum;
}
(b) medical-sum.psi
Pr[nucl[0][0] == 1 && nucl[0][1] == 1] in [0.1, 0.9]
(c) medical-policy.txt
Figure 12: (a) Attacker belief, (b) sum program, and (c) pri-
vacy policy for the medical scenario
def prior() {
affiliation := array(N, flip(1/2));
friends := [[0, 1, ..., 0],
[1, 0, ..., 0],
. .
. .
. .
.
.
.
[0, 0, ..., 0]];
for i := 0 .. N-1 {
for j := i+1 .. N-1 {
if(friends[i][j] && flip(1/2)) {
observe(affiliation[i] == affiliation[j]);
}
}
}
return affiliation;
}
(a) social-attacker-belief.psi
def program(affiliation: R[]) {
sum := 0;
for i := 0 .. N-1 {
sum += affiliation[i];
}
return sum;
}
(b) social-sum.psi
Pr[affiliation[0] == 1] in [0.1, 0.9]
(c) social-policy.txt
Figure 13: (a) Attacker belief, (b) sum program, and (c) pri-
vacy policy for the social scenario
Session B4:  Privacy PoliciesCCS’17, October 30-November 3, 2017, Dallas, TX, USA4061
2
3
4
5
1
2
3
1
def prior() {
x := uniformInt(0,15);
y := uniformInt(0,15);
return (x, y);
}
(a) location-attacker-belief.psi
def program(x, y) {
return (x, y);
}
(b) location-identity.psi
Pr[(x >= 5) && (x = 12) && (y <= 14)] in [0, 0.5]
(c) social-policy.txt
Figure 14: The programs for the location scenario with the
identity program.
sum Returns the number of Republicans among the users.
noisy-sum Returns the number of of Republicans among the users
with noise, which adds 1 with probability 0.5 and subtracts
1 with probability 0.5.
read Returns the affiliation of a user.
C.3 Location
In this scenario we consider location-based services that query the
user’s location [39]. We generate synthesis instances (n, m) with
area of size n × n and m protected areas of size 3 × 3, which are
placed at random positions.
Attacker Belief. For an instance (n, m), the set of inputs is I =
{1, . . . , n} × {1, . . . , n}. All positions in the grid are equally likely.
Policy. For an instance (n, m) we generate a privacy policy with m
bounds of the form (I ∈ A,[0.1, 0.9]) where A is the set of positions
that define a protected area.
Program. We consider three programs:
read Returns the user’s location directly.
constant If the user is in a protected area, returns (0, 0), otherwise
random If the user is in a protected area, returns a random location,
returns the user’s location.
otherwise the user’s location.
REFERENCES
[1] 2017. OpenSNP - A Crowdsourced Web Resource for Personal Genomics. https:
//opensnp.org/snps/rs11200638. (2017).
[2] 2017. Privacy of Genomics. https://www.genome.gov/27561246/privacy-in-
genomics/. (2017).
[3] Michael Backes, Pascal Berrang, Mathias Humbert, and Praveen Manoharan.
2016. Membership Privacy in MicroRNA-based Studies. In Proceedings of the 2016
ACM SIGSAC Conference on Computer and Communications Security (CCS ’16).
ACM, New York, NY, USA, 319–330. https://doi.org/10.1145/2976749.2978355
[4] Clark Barrett, Aaron Stump, Cesare Tinelli, et al. 2010. The smt-lib standard:
Version 2.0. In Proceedings of the 8th International Workshop on Satisfiability
Modulo Theories (Edinburgh, England), Vol. 13. 14.
[5] Béatrice Bérard, Krishnendu Chatterjee, and Nathalie Sznajder. 2015. Probabilistic
opacity for Markov decision processes. Inform. Process. Lett. 115, 1 (2015), 52–59.
[6] Béatrice Bérard, John Mullins, and Mathieu Sassolas. 2015. Quantifying opacity.
Mathematical Structures in Computer Science 25, 02 (2015), 361–403.
[7] Frédéric Besson, Nataliia Bielova, and Thomas Jensen. 2014. Browser randomisa-
tion against fingerprinting: A quantitative information flow approach. In Nordic
Conference on Secure IT Systems. Springer, 181–196.
[8] Nikolaj Bjørner, Anh-Dung Phan, and Lars Fleckenstein. 2015. νZ-an optimizing
SMT solver. In International Conference on Tools and Algorithms for the Construc-
tion and Analysis of Systems. Springer, 194–199.
[11]
[12]
[18]
[9] Matt Blaze, Joan Feigenbaum, John Ioannidis, and Angelos Keromytis. 2017. The
KeyNote Trust-Management System. http://www.cs.columbia.edu/~angelos/
keynote.html. (2017).
[10] Nicolás E. Bordenabe and Geoffrey Smith. 2016. Correlated Secrets in Quan-
titative Information Flow. In IEEE 29th Computer Security Foundations Sym-
posium, CSF 2016, Lisbon, Portugal, June 27 - July 1, 2016. 93–104. https:
//doi.org/10.1109/CSF.2016.14
Johannes Borgström, Andrew D. Gordon, Long Ouyang, Claudio Russo, Adam
Ścibior, and Marcin Szymczak. 2016. Fabular: Regression Formulas As Probabilis-
tic Programming (POPL).
Jeremy W. Bryans, Maciej Koutny, Laurent Mazaré, and Peter Y. A. Ryan. 2008.
Opacity generalised to transition systems. International Journal of Information
Security 7, 6 (2008), 421–435. https://doi.org/10.1007/s10207-008-0058-x
[13] Konstantinos Chatzikokolakis, Catuscia Palamidessi, and Prakash Panangaden.
2006. Anonymity protocols as noisy channels. In International Symposium on
Trustworthy Global Computing. Springer, 281–300.
[14] Michael R. Clarkson, Andrew C. Myers, and Fred B. Schneider. 2009. Quantifying
Information Flow with Beliefs. J. Comput. Secur. 17, 5 (Oct. 2009), 655–701.
http://dl.acm.org/citation.cfm?id=1662658.1662660
[15] Patrick Cousot and Radhia Cousot. 1977. Abstract Interpretation: A Unified
Lattice Model for Static Analysis of Programs by Construction or Approximation
of Fixpoints. In Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on
Principles of Programming Languages (POPL ’77). ACM, New York, NY, USA,
238–252. https://doi.org/10.1145/512950.512973
[16] Leonardo De Moura and Nikolaj Bjørner. 2008. Z3: An efficient SMT solver. In
International conference on Tools and Algorithms for the Construction and Analysis
of Systems. Springer, 337–340.
[17] Andrew DeWan, Mugen Liu, Stephen Hartman, Samuel Shao-Min Zhang, David
T. L. Liu, Connie Zhao, Pancy O. S. Tam, Wai Man Chan, Dennis S. C. Lam,
Michael Snyder, Colin Barnstable, Chi Pui Pang, and Josephine Hoh. 2006. HTRA1
Promoter Polymorphism in Wet Age-Related Macular Degeneration. 314, 5801
(2006), 989–992. https://doi.org/10.1126/science.1133807
Jérémy Dubreil, Philippe Darondeau, and Hervé Marchand. 2008. Opacity en-
forcing control synthesis. In Discrete Event Systems, 2008. WODES 2008. 9th
International Workshop on. IEEE, 28–35.
[19] Cynthia Dwork, Frank McSherry, Kobbi Nissim, and Adam Smith. 2006. Cali-
brating Noise to Sensitivity in Private Data Analysis. In Proceedings of the Third
Conference on Theory of Cryptography (TCC’06). Springer-Verlag, Berlin, Heidel-
berg, 265–284. https://doi.org/10.1007/11681878_14
[20] Cynthia Dwork and Aaron Roth. 2014. The algorithmic foundations of differential
privacy. Foundations and Trends in Theoretical Computer Science 9, 3-4 (2014),
211–407.
[21] Ylies Falcone and Hervé Marchand. 2015. Enforcement and validation (at runtime)
of various notions of opacity. Discrete Event Dynamic Systems 25, 4 (2015), 531–
570.
[22] Timon Gehr, Sasa Misailovic, and Martin Vechev. 2016. PSI: Exact Symbolic
Inference for Probabilistic Programs. Springer International Publishing, Cham,
62–83. https://doi.org/10.1007/978-3-319-41528-4_4
Johannes Gehrke, Edward Lui, and Rafael Pass. 2011. Towards Privacy for Social
Networks: A Zero-knowledge Based Definition of Privacy. In Proceedings of
the 8th Conference on Theory of Cryptography (TCC’11). Springer-Verlag, Berlin,
Heidelberg, 432–449. http://dl.acm.org/citation.cfm?id=1987260.1987294
[24] Andrew Gelman, Daniel Lee, and Jiqiang Guo. 2015. Stan: A Probabilistic Pro-
gramming Language for Bayesian Inference and Optimization. J. Educational
and Behavioral Stats. (2015).
[25] ND Goodman, VK Mansinghka, D Roy, K Bonawitz, and JB Tenenbaum. 2008.
Church: A language for generative models. In UAI.
mani. 2014. Probabilistic Programming (FOSE 2014).
from Probabilistic Inference. arXiv preprint arXiv:1706.02473 (2017).
[28] Christoforos N Hadjicostis and Christoforos Keroglou. 2014. Opacity formu-
lations and verification in discrete event systems. In Emerging Technology and
Factory Automation (ETFA), 2014 IEEE. IEEE, 1–12.
Jianming He, Wesley W. Chu, and Zhenyu (Victor) Liu. 2006. Inferring Privacy
Information from Social Networks. In Proceedings of the 4th IEEE International
Conference on Intelligence and Security Informatics (ISI’06). Springer-Verlag, Berlin,
Heidelberg, 154–165. https://doi.org/10.1007/11760146_14
[30] Nils Homer, Szabolcs Szelinger, Margot Redman, David Duggan, Waibhav Tembe,
Jill Muehling, John V. Pearson, Dietrich A. Stephan, Stanley F. Nelson, and
David W. Craig. 2008. Resolving Individuals Contributing Trace Amounts of DNA
to Highly Complex Mixtures Using High-Density SNP Genotyping Microarrays.
PLOS Genetics 4, 8 (08 2008), 1–9. https://doi.org/10.1371/journal.pgen.1000167
[31] Mathias Humbert. 2015. When Others Impinge upon Your Privacy: Interdependent
Risks and Protection in a Connected World. Ph.D. Dissertation. École Polytechnique
FéDérale de Lanne.
[26] Andrew D. Gordon, Thomas A. Henzinger, Aditya V. Nori, and Sriram K. Raja-
[27] Marco Guarnieri, Srdjan Marinovic, and David Basin. 2017. Securing Databases
[23]
[29]
Session B4:  Privacy PoliciesCCS’17, October 30-November 3, 2017, Dallas, TX, USA407[35]
[32] Romain Jacob, Jean-Jacques Lesage, and Jean-Marc Faure. 2015. Opacity of
discrete event systems: models, validation and quantification. IFAC-PapersOnLine
48, 7 (2015), 174–181.
[33] Richard M Karp. 1972. Reducibility among combinatorial problems. In Complexity
[34]
of computer computations. Springer, 85–103.
John Krumm. 2009. A Survey of Computational Location Privacy.
Per-
sonal Ubiquitous Comput. 13, 6 (Aug. 2009), 391–399. https://doi.org/10.1007/
s00779-008-0212-5
Jack Lindamood, Raymond Heatherly, Murat Kantarcioglu, and Bhavani Thu-
raisingham. 2009. Inferring Private Information Using Social Network Data. In
Proceedings of the 18th International Conference on World Wide Web (WWW ’09).
ACM, New York, NY, USA, 1145–1146. https://doi.org/10.1145/1526709.1526899
[36] Vikash Mansinghka, Daniel Selsam, and Yura Perov. 2014. Venture: a higher-
order probabilistic programming platform with programmable inference. ArXiv
1404.0099 (2014).
[37] Piotr Mardziel, Stephen Magill, Michael Hicks, and Mudhakar Srivatsa. 2013.
Dynamic Enforcement of Knowledge-based Security Policies Using Probabilistic
Abstract Interpretation. J. Comput. Secur. 21, 4 (July 2013), 463–532. http://dl.
acm.org/citation.cfm?id=2590624.2590625
[38] Aditya V Nori, Chung-Kil Hur, Sriram K Rajamani, and Selva Samuel. 2014. R2:
An efficient MCMC sampler for probabilistic programs. In AAAI.
[39] A. M. Olteanu, K. Huguenin, R. Shokri, M. Humbert, and J. P. Hubaux. 2016.
Quantifying Interdependent Privacy Risks with Location Data. IEEE Transactions
on Mobile Computing PP, 99, 1–1.
[40] A. Pfeffer. 2009. Figaro: An object-oriented probabilistic programming language.
Technical Report. Charles River Analytics.
[41] Andrea J. Richardson, F. M. Amirul Islam, Khin Zaw Aung, Robyn H.
Guymer, and Paul N. Baird. 2010.
An Intergenic Region between the
tagSNP rs3793917 and rs11200638 in the HTRA1 Gene Indicates Associa-
tion with Age-Related Macular Degeneration.
Investigative Ophthalmology
& Visual Science 51, 10 (2010), 4932.
https://doi.org/10.1167/iovs.09-5114
arXiv:/data/journals/iovs/932962/z7g01010004932.pdf
[42] Andrei Sabelfeld and David Sands. 2000. Probabilistic Noninterference for Multi-
Threaded Programs. In Proceedings of the 13th IEEE Workshop on Computer Se-
curity Foundations (CSFW ’00). IEEE Computer Society, Washington, DC, USA,
200–. http://dl.acm.org/citation.cfm?id=794200.795151
[43] Anooshiravan Saboori and Christoforos N Hadjicostis. 2007. Notions of security
and opacity in discrete event systems. In Decision and Control, 2007 46th IEEE
Conference on. IEEE, 5056–5061.
[44] Anooshiravan Saboori and Christoforos N Hadjicostis. 2014. Current-state
opacity formulations in probabilistic finite automata.
IEEE Transactions on
automatic control 59, 1 (2014), 120–133.
[45] Pierangela Samarati and Latanya Sweeney. 1998. Protecting privacy when dis-
closing information: k-anonymity and its enforcement through generalization and
suppression. Technical Report. Technical report, SRI International.
[46] Taisuke Sato. 2008. A Glimpse of Symbolic-statistical Modeling by PRISM. J. Intell.
Inf. Syst. 31, 2 (Oct. 2008), 161–176. https://doi.org/10.1007/s10844-008-0062-7
[47] Daniel Schoepe and Andrei Sabelfeld. 2015. Understanding and Enforcing Opacity.
In 2015 IEEE 28th Computer Security Foundations Symposium. IEEE, 539–553.
[48] Geoffrey Smith. 2009. On the foundations of quantitative information flow. In
International Conference on Foundations of Software Science and Computational
Structures. Springer, 288–302.
[49] David Sommer, Aritra Dhar, Luka Malisa, Esfandiar Mohammadi, Daniel Ronzani,
and Srdjan Capkun. 2017. CoverUp: Privacy Through "Forced" Participation in
Anonymous Communication Networks. In ASIA CCS. ACM. https://doi.org/10.
1145/3052973.3056126
[50] Latanya Sweeney. 2002. Achieving k-anonymity privacy protection using gen-
eralization and suppression. International Journal of Uncertainty, Fuzziness and
Knowledge-Based Systems 10, 05 (2002), 571–588.
[51] Manolis Terrovitis. 2011. Privacy Preservation in the Dissemination of Location
Data. SIGKDD Explor. Newsl. 13, 1 (Aug. 2011), 6–18. https://doi.org/10.1145/
2031331.2031334
[52] Petar Tsankov, Mohammad Torabi Marinovic, and David Basin. 2016. Access
[53] Petar Tsankov, Srdjan Marinovic, Mohammad Torabi Dashti, and David Basin.
Control Synthesis for Physical Spaces. In CSF.
2014. Decentralized Composite Access Control. In POST.
[54] L.G. Valiant. 1979. The complexity of computing the permanent. Theoretical
Computer Science 8, 2 (1979), 189 – 201. https://doi.org/10.1016/0304-3975(79)
90044-6
[55] Dennis Volpano and Geoffrey Smith. 1999. Probabilistic noninterference in a
[56] Frank Wood, Jan Willem van de Meent, and Vikash Mansinghka. 2014. A New
concurrent language1. Journal of Computer Security 7, 2-3 (1999), 231–253.
Approach to Probabilistic Programming Inference. In AISTATS.
[57] Yi-Chin Wu and StÃľphane Lafortune. 2014. Synthesis of insertion functions for
enforcement of opacity security properties. Automatica 50, 5 (2014), 1336 – 1348.
https://doi.org/10.1016/j.automatica.2014.02.038
[58] Elena Zheleva and Lise Getoor. 2009. To Join or Not to Join: The Illusion of
Privacy in Social Networks with Mixed Public and Private User Profiles. In
Proceedings of the 18th International Conference on World Wide Web (WWW ’09).
ACM, New York, NY, USA, 531–540. https://doi.org/10.1145/1526709.1526781
Session B4:  Privacy PoliciesCCS’17, October 30-November 3, 2017, Dallas, TX, USA408