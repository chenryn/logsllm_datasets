Author：z3r0yu
CobaltStrike 插件开发
目录
CONTENTS
1. 概述
2. Sleep 语言相关
3. Aggressor Script 相关
4. 总结
概
述
01
CobaltStrike 插件的编写主要是使用agscript（Aggressor Script），这个CobaltStrike 3.0之后内置的脚
本语言。agscript是基于 Sleep 语言进行二次开发的。Sleep 是一种深受Perl启发的基于Java的脚本语言。
所以在开始编写 CobaltStrike 之前我们必须要了解 Sleep 语言的语法和agscript中内置的各种函数。
Sleep 开发手册：
http://sleep.dashnine.org/manual/
agscript 开发手册：
https://trial.cobaltstrike.com/aggressor-script/index.html
01 概述
Sleep 语言相关
02
1.1 Sleep 强制要求语句之间要包含空格
1.2 warn 函数助力debug
warn可以详细的输出对应代码的错误信息，可以帮助你定位有问题的地方。当然使用熟悉的println也是可以的。
PS: getStackTrace() 可以获取函数的调用栈
1.3 debug 函数输出详细的debug信息
1. 注意事项
2.1 常见变量
使用@和％字符即可创建数组和字典，数组和字典不仅可以引用其他数组和字典，还可以可以引用自己。
Sleep会插入双引号的字符串，这意味着以$符号开头的任何以空格分隔的标记都将替换为其值。注意 “$+”号可以用于将
插字符串与另一个值连接起来。
2.1 常见变量
(1) 数组操作
-创建
注意：这里赋值给的是 $a 变量，而 stack，queue和 list类型的变量都是 @a 是 @ 符号开头的
2.2 常见对变量的操作
(1) 数组操作
-
遍历数组
-
添加和删除元素
2. 2 常见对变量的操作
(2) 字典操作
-
创建
-
删除字典的某个key
2. 2 常见对变量的操作
(2) 字典操作
-
遍历字典
2. 2 常见对变量的操作
(3) Stacks（栈）操作 -- 先入后出类型
-
入栈操作
-
出栈操作
2. 2 常见对变量的操作
(4) Queues（堆）操作 -- 先入先出类型
2. 2 常见对变量的操作
(5) List 操作 -- 可以切片
2. 2 常见对变量的操作
(6) 字符串操作 --基础操作
2. 2 常见对变量的操作
(6) 字符串操作 --逻辑操作
2. 2 常见对变量的操作
(1) 逻辑连接词
2. 3 常见逻辑操作
(2) 类型判断关键词
2. 3 常见逻辑操作
(3) if 语句 --常规
2. 3 常见逻辑操作
(3) if 语句 --iff操作符
2. 3 常见逻辑操作
(4) 循环语句 -- while 循环
2. 3 常见逻辑操作
(4) 循环语句 -- for 循环
2. 3 常见逻辑操作
(4) 循环语句 -- foreach循环
2. 3 常见逻辑操作
(5) 异常处理 -- throw 语句
2. 3 常见逻辑操作
(5) 异常处理 -- warn 语句
2. 3 常见逻辑操作
(5) 异常处理 --异常捕获
2. 3 常见逻辑操作
使用sub字符即可声明函数，传给函数的参数标
记为$1,$2,一直到$n。函数可以接受无数个参
数。 变量@_是一个包含所有参数的数组，$1，
$2等变量的更改将改变@_的内容。
2.4 函数创建与调用
2.5 文件操作
AgScript 相关
03
VSCode + Cobalt Strike Aggressor Script 插件@Twi1ight
3.1 开发环境
3.2交互式的脚本控制台使用
3.2交互式的脚本控制台使用
如果想命令行直接执行脚本的话可以使用如下命令
3.2交互式的脚本控制台使用
比如这里我在 headless cobaltstrike 的模式下之行一个脚本并获取输出
2.1 ready 事件
当这个CobaltStrike客户端连接到团队服务器并准备采取行动时触发。常用于测试一些功能的时候。比如下列脚本是一
个测试 foreach 语句的脚本，我们常用 agscript 来启动 headless 模式的 CobaltStrike 进行测试。
3.3 aggressor脚本中常用的内置事件和函数
2.2 command 关键字
你可以使用command关键字来注册命令。注册之后的命令可以通过控制台接收来自用户的输入来触发。
示例代码