dimensional features. We compute the leakage for many fea-
tures, but consider them one at a time. As exempliﬁed by the
TOURPLANNER vulnerability explained in Section VI-A, when
several features are combined in just the right way, they can
leak more than each one of them separately (or than all of
them combined in a trivial way). Quantifying the joint leakage
of combined features is simple when one can assume that
all the features are independent, but in this context that is
almost never the case. Quantifying the joint leakage (that is,
the correlation with the secret) of multiple features that are
partially correlated between themselves is a complex matter,
which is beyond the scope of this article and which we will
address in future work. Nevertheless, in many cases Proﬁt will
still report partial leakage for one or more of the combinable
features, which can at least point the user in the right direction
(see Section VI-C).
Local area network environment: The network environ-
ment and the hardware setup used in this work follow the
DARPA STAC reference platform speciﬁcation. As illustrated
in Figure 6, the conﬁguration uses separate machines for client,
server, and eavesdropper. They are connected by means of
a standard Ethernet local area network. This implies certain
favorable conditions, e.g., the network latency, the round-trip
time variance, and the rates of phenomena such as packet loss
or packet reordering are relatively low compared to those of
the public Internet. Nevertheless, as seen in our experimental
results, such phenomena are still present—network noise, for
instance, is a signiﬁcant factor in our approach, and needs to
be statistically modeled and accounted for. The relatively well-
controlled environment of a LAN is a good testbed for new
ideas, which can then be adapted to a less protected setting
such as the public Internet.
VIII. RELATED WORK
One relevant related paper uses sequence alignment algo-
rithms on the contents of unencrypted packets in order to infer
the contents of similar segments [23]. This technique applies to
the plain-text contents of the packets. Our work, on the other
hand, applies sequence alignment algorithms to the visible
attributes of encrypted packets in order to automatically detect
phases in network interactions, and does not assume that the
payloads are unencrypted.
13
Work by Chapman, et. al. illustrates methods for detecting
the potential side channels in client-server application traf-
ﬁc [9]. Their approach crawls the given web application to
build a model of the system side channel and uses Fisher
criterion for quantifying leakage. A different approach by
Chen, et. al. focuses differentiating leakage measurements by
analyzing state diagrams for web applications [12]. Yet another
approach by Mather, et. al. uses a packet-level analysis of
network trafﬁc for estimating information leakage for network
applications [35]. A number of works present specialized
techniques for discovering speciﬁc types of vulnerabilities, like
identifying the source identity of an HTTP stream [7], [34]
or automatically determining network-trafﬁc-based ﬁngerprints
for websites [26].
In particular, Conti et. al. [17] use a similar set of side-
channel packet metadata to infer properties about encrypted
network streams. They analyze the shape of sequences of
packet sizes, and use machine learning and classiﬁcation
techniques that leverage the dynamic time warping (DTW) [4]
metric, which is a type of alignment. However, their approach
is speciﬁcally tailored to guessing which action (within a set
of predeﬁned user actions from a ﬁxed set of smartphone
applications) was executed by a user. Our approach is more
general and aims at providing support for explorative side-
channel analysis of arbitrary applications that communicate
over a network stream. Regarding the use of dynamic time
warping, we did experiment with DTW in early prototypes of
Proﬁt’s alignment. However, in the type of analyses that we
address, packet traces may contain arbitrarily long unalignable
sections between the alignable patterns. We found that DTW
is not the right tool for that purpose, which led us to experi-
menting with multiple sequence alignment [38] instead.
The BLAZER tool [1] also addresses the applications in
the DARPA STAC benchmark. Their approach focuses on
showing safety properties of non-vulnerable programs but
is able to indicate possible side-channel vulnerabilities by
detecting observationally imbalanced program branches using
a white-box static program analysis approach. Another recent
tool called SCANNER has shown success in statically detecting
side-channel vulnerabilities in web applications that result
from secret-dependent resource usage differences [11]. The
SIDEBUSTER tool focuses on side-channel detection and quan-
tiﬁcation during the software development phase using taint
analysis [48]. These three tools all assume access to the source
code of the application, whereas Proﬁt uses a fully black-box
approach. A number of works analyze mobile application for
analyzing side-channels in networks of mobile devices [17],
[18], [47].
Another line of work relies on formal methods and software
veriﬁcation techniques, like symbolic execution along with
model-counting constraint solvers, to statically quantify the
amount of information an attacker can gain about a secret in
a system [28], [40]–[42]. These works analyze a variety of
attacker models, from active attackers who adaptively query
the system to incrementally infer secret information to passive
attackers who observe systems which they cannot query, and
use methods from quantitative information ﬂow [5], [15], [45]
to automatically derive bounds on side-channel information
leakage. These are white-box analysis techniques that rely on
the ability to symbolically execute a given application.
IX. CONCLUSIONS AND FUTURE WORK
Proﬁt combines network trace alignment, phase detection,
feature selection, feature probability distribution estimation
and entropy computation to quantify the amount of informa-
tion leakage that is due to network trafﬁc. Our experimental
evaluation on DARPA STAC applications demonstrates that
Proﬁt is able to identify the features that leak information for
the vulnerable application variants. Moreover, Proﬁt is able
to correctly order the amount of leakage in different variants
of the same application. In the future, we plan to extend
Proﬁt with 1) fuzzing techniques for input generation, 2)
more ﬂexible ways to estimate the probability distributions of
features, such as kernel density estimation, 3) feature reduction
techniques for reducing the feature space, and 4) relational
analysis to quantify joint information leakage from correlated
features.
ACKNOWLEDGEMENTS
We would like to thank the anonymous reviewers for their
valuable feedback, and the MAFFT authors for their assistance.
This material
is based on research sponsored by DARPA
under the agreement number FA8750-15-2-0087. The U.S.
Government is authorized to reproduce and distribute reprints
for Governmental purposes notwithstanding any copyright
notation thereon. The views and conclusions contained herein
are those of the authors and should not be interpreted as neces-
sarily representing the ofﬁcial policies or endorsements, either
expressed or implied, of DARPA or the U.S. Government.
REFERENCES
[1] T. Antonopoulos, P. Gazzillo, M. Hicks, E. Koskinen, T. Terauchi, and
S. Wei, “Decomposition instead of self-composition for proving the
absence of timing channels,” in Proceedings of the 38th ACM SIGPLAN
Conference on Programming Language Design and Implementation,
PLDI 2017, 2017, pp. 362–375.
[2] G. J. Barton and M. J. Sternberg, “A strategy for the rapid multiple
alignment of protein sequences. Conﬁdence levels from tertiary struc-
ture comparisons,” J. Mol. Biol., vol. 198, no. 2, pp. 327–337, Nov
1987.
[3] M. P. Berger and P. J. Munson, “A novel randomized iterative strategy
for aligning multiple protein sequences,” Comput. Appl. Biosci., vol. 7,
no. 4, pp. 479–484, Oct 1991.
[4] D. J. Berndt and J. Clifford, “Using dynamic time warping to ﬁnd
Seattle,
patterns in time series.” in KDD workshop, vol. 10, no. 16.
WA, 1994, pp. 359–370.
[5] F. Biondi, A. Legay, B. F. Nielsen, P. Malacaria, and A. Wasowski, “In-
formation leakage of non-terminating processes,” in 34th International
Conference on Foundation of Software Technology and Theoretical
Computer Science, FSTTCS 2014, 2014, pp. 517–529.
[6] P. Biondi. Scapy: Packet crafting for Python. https://scapy.net/.
[7] G. D. Bissias, M. Liberatore, D. Jensen, and B. N. Levine, Privacy
Berlin, Heidelberg:
Vulnerabilities in Encrypted HTTP Streams.
Springer Berlin Heidelberg, 2006, pp. 1–11.
[8] F. Bunea, R. B. Tsybakov, and M. H. Wegkamp, “Sparse density esti-
mation with l1 penalties,” in In Proceedings of 20th Annual Conference
on Learning Theory (COLT 2007) (2007. Springer-Verlag, 2007, pp.
530–543.
[9] P. Chapman and D. Evans, “Automated black-box detection of side-
channel vulnerabilities in web applications,” in Proceedings of the 18th
ACM Conference on Computer and Communications Security, ser. CCS
’11. New York, NY, USA: ACM, 2011, pp. 263–274.
[10] K. Chatzikokolakis, T. Chothia, and A. Guha, “Statistical measurement
of information leakage,” in International Conference on Tools and
Algorithms for the Construction and Analysis of Systems.
Springer,
2010, pp. 390–404.
14
[11]
J. Chen, O. Olivo,
I. Dillig, and C. Lin, “Static detection of
asymptotic resource side-channel vulnerabilities in web applications,”
in Proceedings of
the 32Nd IEEE/ACM International Conference
on Automated Software Engineering, ser. ASE 2017.
Piscataway,
NJ, USA:
[Online]. Available:
http://dl.acm.org/citation.cfm?id=3155562.3155595
IEEE Press, 2017, pp. 229–239.
[12] S. Chen, K. Zhang, R. Wang, and X. Wang, “Side-channel leaks in
web applications: A reality today, a challenge tomorrow,” 2010 IEEE
Symposium on Security and Privacy (SP), vol. 00, pp. 191–206, 2010.
test for information leaks
using continuous mutual information,” in 2011 24th Computer Security
Foundations Symposium.
[13] T. Chothia and A. Guha, “A statistical
IEEE, 2011, pp. 177–190.
[14] T. Chothia, Y. Kawamoto, and C. Novakovic, “A tool for estimating
information leakage,” in International Conference on Computer Aided
Veriﬁcation. Springer, 2013, pp. 690–695.
[15] D. Clark, S. Hunt, and P. Malacaria, “Quantitative analysis of
the leakage of conﬁdential data,” Electr. Notes Theor. Comput.
Sci., vol. 59, no. 3, pp. 238–251, 2001.
[Online]. Available:
https://doi.org/10.1016/S1571-0661(04)00290-7
[16] G. Combs et al., “Wireshark-network protocol analyzer,” Version 0.99,
vol. 5, 2008.
[17] M. Conti, L. V. Mancini, R. Spolaor, and N. V. Verde, “Analyzing
android encrypted network trafﬁc to identify user actions,” IEEE Trans-
actions on Information Forensics and Security, vol. 11, no. 1, pp. 114–
125, Jan 2016.
[18] M. Conti, Q. Li, A. Maragno,
“The dark
side(-channel) of mobile devices: A survey on network trafﬁc
analysis,” CoRR, vol. abs/1708.03766, 2017.
[Online]. Available:
http://arxiv.org/abs/1708.03766
and R. Spolaor,
[19] T. M. Cover and J. A. Thomas, Elements of Information Theory
(Wiley Series in Telecommunications and Signal Processing). Wiley-
Interscience, 2006.
[20] DARPA. (2015) The Space-Time Analysis for Cybersecurity (STAC)
[Online]. Available: http://www.darpa.mil/program/space-
program.
time-analysis-for-cybersecurity
[21] DARPA. (2017) Public release items for the DARPA Space-Time
[Online]. Available:
Analysis for Cybersecurity (STAC) program.
https://github.com/Apogee-Research/STAC
I. Elias, “Settling the intractability of multiple alignment,” J. Comput.
Biol., vol. 13, no. 7, pp. 1323–1339, Sep 2006.
[22]
[23] O. Esoul and N. Walkinshaw, “Using segment-based alignment to ex-
tract packet structures from network traces,” in 2017 IEEE International
Conference on Software Quality, Reliability and Security (QRS), July
2017, pp. 398–409.
[24] A. P. Felt, R. Barnes, A. King, C. Palmer, C. Bentzel, and
P. Tabriz, “Measuring HTTPS adoption on the web,” in 26th
USENIX Security Symposium (USENIX Security 17). Vancouver,
BC: USENIX Association, 2017, pp. 1323–1338. [Online]. Avail-
able:
https://www.usenix.org/conference/usenixsecurity17/technical-
sessions/presentation/felt
[25] D. F. Feng and R. F. Doolittle, “Progressive sequence alignment as a
prerequisite to correct phylogenetic trees,” J. Mol. Evol., vol. 25, no. 4,
pp. 351–360, 1987.
[26] A. Hintz, Fingerprinting Websites Using Trafﬁc Analysis.
Heidelberg: Springer Berlin Heidelberg, 2003, pp. 171–178.
Berlin,
[27] X. Hong, S. Chen, A. Qatawneh, K. Daqrouq, M. Sheikh, and A. Mor-
feq, “Sparse probability density function estimation using the minimum
integrated square error,” Neurocomputing, vol. 115, pp. 122 – 129, 2013.
[28] X. Huang and P. Malacaria, “Sideauto: quantitative information ﬂow
for side-channel leakage in web applications,” in Proceedings of the
12th annual ACM Workshop on Privacy in the Electronic Society,
WPES 2013, Berlin, Germany, November 4, 2013, 2013, pp. 285–290.
[Online]. Available: http://doi.acm.org/10.1145/2517840.2517869
J. D. Hunter, “Matplotlib: A 2d graphics environment,” Computing In
Science & Engineering, vol. 9, no. 3, pp. 90–95, 2007.
[29]
[30] P. Jacob and P. E. Oliveira, “Relative smoothing of discrete distributions
with sparse observations,” Journal of Statistical Computation and
Simulation, vol. 81, no. 1, pp. 109–121, 2011.
[31] E. Jones, T. Oliphant, P. Peterson et al., “SciPy: Open source scientiﬁc
tools for Python,” 2001–. [Online]. Available: http://www.scipy.org/
15
[32] K. Katoh, K. Misawa, K. Kuma, and T. Miyata, “Mafft: a novel
method for rapid multiple sequence alignment based on fast fourier
transform,” Nucleic Acids Research, vol. 30, no. 14, pp. 3059–3066,
2002. [Online]. Available: http://dx.doi.org/10.1093/nar/gkf436
[33] M. A. Larkin, G. Blackshields, N. P. Brown, R. Chenna, P. A. McGetti-
gan, H. McWilliam, F. Valentin, I. M. Wallace, A. Wilm, R. Lopez, J. D.
Thompson, T. J. Gibson, and D. G. Higgins, “Clustal W and Clustal
X version 2.0,” Bioinformatics, vol. 23, no. 21, pp. 2947–2948, Nov
2007.
[34] M. Liberatore and B. N. Levine, “Inferring the source of encrypted
http connections,” in Proceedings of
the 13th ACM Conference
on Computer and Communications Security, ser. CCS ’06. New
York, NY, USA: ACM, 2006, pp. 255–263.
[Online]. Available:
http://doi.acm.org/10.1145/1180405.1180437
[35] L. Mather and E. Oswald, “Quantifying side-channel
information
leakage from web applications,” IACR Cryptology ePrint Archive, vol.
2012, p. 269, 2012. [Online]. Available: http://eprint.iacr.org/2012/269
[36] S. B. Needleman and C. D. Wunsch, “A general method applicable to
the search for similarities in the amino acid sequence of two proteins,”
J. Mol. Biol., vol. 48, no. 3, pp. 443–453, Mar 1970.
[37] C. Notredame, D. G. Higgins, and J. Heringa, “T-Coffee: A novel
method for fast and accurate multiple sequence alignment,” J. Mol.
Biol., vol. 302, no. 1, pp. 205–217, Sep 2000.
[38] C. Notredame, “Progress in multiple sequence alignment: a survey,”
Pharmacogenomics, vol. 3, no. 1, pp. 131–144, 2002.
[39] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion,
O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vander-
plas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duch-
esnay, “Scikit-learn: Machine learning in Python,” Journal of Machine
Learning Research, vol. 12, pp. 2825–2830, 2011.
[40] Q. Phan, L. Bang, C. S. Pasareanu, P. Malacaria, and T. Bultan,
“Synthesis of adaptive side-channel attacks,” in 30th IEEE Computer
Security Foundations Symposium, CSF 2017, Santa Barbara, CA,
USA, August 21-25, 2017, 2017, pp. 328–342. [Online]. Available:
https://doi.org/10.1109/CSF.2017.8
[41] Q. Phan, P. Malacaria, C. S. Pasareanu, and M. d’Amorim,
“Quantifying information leaks using reliability analysis,” in 2014
International Symposium on Model Checking of Software, SPIN 2014,
Proceedings, San Jose, CA, USA, July 21-23, 2014, 2014, pp. 105–108.
[Online]. Available: http://doi.acm.org/10.1145/2632362.2632367
[42] Q.-S. Phan, P. Malacaria, O. Tkachuk, and C. S. P˘as˘areanu,
“Symbolic quantitative information ﬂow,” SIGSOFT Softw. Eng.
Notes, vol. 37, no. 6, pp. 1–5, Nov. 2012.
[Online]. Available:
http://doi.acm.org/10.1145/2382756.2382791
[43] C. Shannon, “A mathematical theory of communication,” Bell System
Technical Journal, vol. 27, pp. 379–423, 623–656, July, October 1948.
[44] M. Shiga, V. Tangkaratt, and M. Sugiyama, “Direct conditional proba-
bility density estimation with sparse feature selection,” Machine Learn-
ing, vol. 100, no. 2, pp. 161–182, Sep 2015.
[45] G. Smith, “On the foundations of quantitative information ﬂow,” in
Proceedings of the 12th International Conference on Foundations of
Software Science and Computational Structures (FOSSACS), 2009, pp.
288–302.
Symposium, August
[46] D. X. Song, D. A. Wagner, and X. Tian, “Timing analysis
of keystrokes and timing attacks on SSH,” in 10th USENIX
2001, Washington, D.C.,
Security
USA, D. S. Wallach, Ed. USENIX, 2001.
[Online]. Available:
http://www.usenix.org/publications/library/proceedings/sec01/song.html
[47] V. F. Taylor, R. Spolaor, M. Conti, and I. Martinovic, “Robust smart-
phone app identiﬁcation via encrypted network trafﬁc analysis,” IEEE
Transactions on Information Forensics and Security, vol. 13, no. 1, pp.
63–78, Jan 2018.
13-17,
[48] K. Zhang, Z. Li, R. Wang, X. Wang, and S. Chen, “Sidebuster:
Automated detection and quantiﬁcation of side-channel leaks in web
application development,” in Proceedings of the 17th ACM Conference
on Computer and Communications Security, ser. CCS ’10. New
York, NY, USA: ACM, 2010, pp. 595–606.
[Online]. Available:
http://doi.acm.org/10.1145/1866307.1866374