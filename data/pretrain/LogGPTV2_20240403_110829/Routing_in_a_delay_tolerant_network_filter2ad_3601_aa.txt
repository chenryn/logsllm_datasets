title:Routing in a delay tolerant network
author:Sushant Jain and
Kevin R. Fall and
Rabin K. Patra
Routing in a Delay Tolerant Network
Sushant Jain
University of Washington
PI:EMAIL
Kevin Fall
Intel Research, Berkeley
Rabin Patra
University of California, Berkeley
PI:EMAIL
PI:EMAIL
ABSTRACT
We formulate the delay-tolerant networking routing problem,
where messages are to be moved end-to-end across a connec-
tivity graph that is time-varying but whose dynamics may be
known in advance. The problem has the added constraints of
(cid:12)nite bu(cid:11)ers at each node and the general property that no con-
temporaneous end-to-end path may ever exist. This situation
limits the applicability of traditional routing approaches that
tend to treat outages as failures and seek to (cid:12)nd an existing
end-to-end path. We propose a framework for evaluating rout-
ing algorithms in such environments. We then develop several
algorithms and use simulations to compare their performance
with respect to the amount of knowledge they require about
network topology. We (cid:12)nd that, as expected, the algorithms
using the least knowledge tend to perform poorly. We also (cid:12)nd
that with limited additional knowledge, far less than complete
global knowledge, e(cid:14)cient algorithms can be constructed for
routing in such environments. To the best of our knowledge
this is the (cid:12)rst such investigation of routing issues in DTNs.
Categories and Subject Descriptors:
C.2.2: Routing Protocols
General Terms: Algorithms, Performance
Keywords: Routing, Delay Tolerant Network
1.
INTRODUCTION
In this work, we look at the problem of routing in a de-
lay tolerant network (DTN)[8]. Such networks are assumed to
experience frequent, long-duration partitioning and may never
have an end-to-end contemporaneous path. This problem con-
trasts with routing in conventional data networks which typ-
ically selects a shortest policy-compliant path in a connected
graph without considering availability of intermediate bu(cid:11)er-
ing and bandwidth capacity.
In graph theoretic terms, our problem is a form of the \quick-
est transshipment problem" in which both edge capacities and
transit delays along an edge can vary (down to zero) as a func-
tion of time and nodes have (cid:12)nite bu(cid:11)ers [12].
In practical
terms, DTNs arise in networks with known connectivity pat-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’04, Aug. 30–Sept. 3, 2004, Portland, Oregon, USA.
Copyright 2004 ACM 1-58113-862-8/04/0008 ...$5.00.
terns such as Low-Earth Orbiting Satellites (LEO) or those
with unpredicted, opportunistic connectivity (e.g., communi-
cation among PDAs when brought into close proximity [5]).
Here, we focus on the former case.
The routing problem in a DTN may at (cid:12)rst appear as the
standard problem of dynamic routing but with extended link
failure times. This is not the case. For the standard dynamic
routing problem, the topology is assumed to be connected (or
partitioned for very short intervals), and the objective of the
routing algorithm is to (cid:12)nd the best currently-available path
to move tra(cid:14)c end-to-end.
In a DTN, however, an end-to-
end path may be unavailable at all times; routing is performed
over time to achieve eventual delivery by employing long-term
storage at the intermediate nodes. The DTN routing problem
amounts to a constrained optimization problem where edges
may be unavailable for extended periods of time and a stor-
age constraint exists at each node. This formulation reveals
DTN routing to be a considerably di(cid:11)erent and more challeng-
ing problem.
In this paper, we make several contributions: we (cid:12)rst moti-
vate and formulate the DTN routing problem when the connec-
tivity patterns are known, then provide a framework for evalu-
ating various routing algorithms, and (cid:12)nally show a simulation-
based comparison of several of our own algorithms. We also
include an optimal algorithm based on a linear programming
approach to serve as a basis for comparison with the simula-
tions. Finally, we outline the future work to be accomplished
in the area.
2. EXAMPLE: CONNECTING A REMOTE
VILLAGE
The problem of providing data communications to remote
and rural areas is beginning to attract the attention of the
computer systems research community [23]. While many rural
connectivity projects involve attempts to provide conventional
Internet access to remote areas, a small number of projects are
taking an alternative approach which focuses on asynchronous
messaging in order to greatly reduce the cost of connectivity [25,
20, 23]. For example, the Wizzy Digital Courier service pro-
vides asynchronous (disconnected) Internet access to schools in
remote villages of South Africa [25]. In this system, a courier
on a motorbike, equipped with a USB storage device, travels
from a village school to a large city which has permanent (rea-
sonably high-speed) Internet connectivity. Typically, it takes a
few hours for the courier to travel from the village to the city.
In consideration of this scenario, we realize that several other
connectivity options may be available (e.g.
satellites, either
LEO or GEO, possibly telephone), but are not likely to be cost
Session 4: Wireless and Delay-Tolerant NetworksLEO(cid:13)
Satellite(cid:13)
Internet(cid:13)
City(cid:13)
Village(cid:13)
Bike(cid:13)
Dialup(cid:13)
Telephone(cid:13)
Figure 1: Scenario illustrating a variety of connectivity op-
tions between a remote village and a city. Even in this
simple scenario, many route choices are possible.
e(cid:11)ective or of su(cid:14)cient capacity to handle all of the tra(cid:14)c.
Conversely, for some tra(cid:14)c, such as high-priority alerts, low
latency may be su(cid:14)ciently important to justify using a higher-
cost communication system o(cid:11)ering smaller delay. Thus, we
consider a simple extended scenario, based on this real-world
example, that motivates the DTN routing problem.
Figure 1 shows a hypothetical village served by a digital
courier, a wired dialup Internet connection, and a store-and-
forward LEO satellite (e.g. PACSAT). These satellites have
low to moderate bandwidth (around 10 Kbps) and are visible
for 4-5 short periods of time (\passes") per day (lasting around
10 minutes per pass, depending on the orbit inclination and
location on Earth). We call the opportunity to communicate
a contact (as in [8]), which is characterized by a duration of
time, a capacity, and a propagation delay (assumed to remain
constant during the contact duration). In addition, depending
on the type of connection used, bu(cid:11)ering constraints may also
need to be considered.1 The digital courier service represents a
high-bandwidth, high-latency contact, the dialup represents a
low-bandwidth, low-latency contact, and the LEO satellite rep-
resents a moderate-bandwidth, moderate-latency contact. The
problem of selecting which contacts to carry messages and when
represents an instance of the DTN routing problem. Route se-
lection may depend on a variety of factors including message
source and destination, size, time of request, available contacts,
tra(cid:14)c in the system, or other factors (e.g. cost, delay, etc.).
In the next sections we develop a set of de(cid:12)nitions and a
framework for evaluating DTN routing algorithms. We then
propose several of our own routing algorithms and use the
framework in conjunction with simulations to evaluate their
performance in the context of this village scenario.
3. DTN NETWORK MODEL
Nodes and Edges The DTN graph is a directed multi-graph,
in which more than one edge (also called link) may exist be-
tween a pair of nodes (see Figure 2). The reason for using a
multigraph is straightforward: it may be possible to select be-
tween two distinct (physical) connection types to move data be-
tween the same pair of nodes. Furthermore, the link capacities
(and to a lesser extent, propagation delay) are time-dependent
(capacity is zero at times when the link is unavailable). Thus,
the set of edges in the graph must capture both time-varying ca-
pacity and propagation delay as well as multiple parallel edges.
A simple example of an edge captured by this description
involves a ground station and a LEO satellite rising, passing
directly overhead, and setting at the opposite horizon. As it
1The PACSAT satellite systems have limited (cid:12)le storage.
e(cid:13)n(cid:13)=((u,v)(cid:13) n(cid:13),c(t),d(t))(cid:13)
e(cid:13)1(cid:13)
desitnation(cid:13)
e(cid:13)2(cid:13)
e(cid:13)3(cid:13)
v(cid:13)
b(cid:13)v(cid:13)
source(cid:13)
u(cid:13)
b(cid:13)u(cid:13)
storage(cid:13)
capacity(cid:13)
Figure 2: Edges in a DTN graph. Nodes may be con-
nected by multiple edges, representing di(cid:11)erent physical
links. Each node j performs store-and-forward routing, and
has (cid:12)nite storage capacity (bj ). An edge is parameterized
by its source and destination nodes plus a capacity (c(t))
and delay function (d(t)).
rises, its channel capacity will generally increase until it is di-
rectly overhead and will decrease for the remaining time of the
pass. This is because noise is minimal when the satellite is
directly overhead but increases at lower elevations. Another
example would be a bus (carrying a wireless access point) pass-
ing by a village. The throughput of the wireless link would
depend upon the distance of the bus from the village. When no
communication is possible, the edge is assigned zero capacity.
Contact A contact is an opportunity to send data over an
edge. More precisely, it is a speci(cid:12)c edge and a corresponding
time interval during which the edge capacity is strictly positive.
Messages Communication demands are represented by mes-
sages. A message is a tuple (u; v; t; m), where u is the source
of the message, v is the destination, t is the time at which the
message is injected into the system and m is its size (messages
can be of arbitrary size). The set of all messages is called the
tra(cid:14)c demand.
Storage The nodes in a DTN have (cid:12)nite long-term stor-
age (bu(cid:11)ers) used for holding in-transit data or data waiting
to be consumed by the application at a destination node. In
our model, the storage is exclusively used for holding in-transit
data. Destination nodes are assumed to have su(cid:14)cient capacity
for holding data to be consumed by an application.
Routing Routing occurs in a store and forward fashion.
The routing algorithm is responsible for determining the next
edge(s) that a message should be forwarded along. Messages
not immediately forwarded wait until they are assigned to con-
tacts by the routing algorithm.
4. DTN ROUTING ISSUES
In this section, we consider a number of important issues in
any routing algorithm: the routing objective, the amount of
knowledge about the network required by the scheme, when
routes are computed, the use of multiple paths, and the use
of source routing. We focus on how these issues arise in the
context of the DTN routing problem.
4.1 Routing Objective
The routing objective of traditional routing schemes has been
to select a path which minimizes some simple metric (e.g. the
number of hops). For DTN networks, however, the most desir-
able objective is not immediately obvious.
One natural objective is to maximize the probability of mes-
sage delivery. Messages could potentially be lost due to creation
of a routing loop or the forced discarding of data when bu(cid:11)ers
are exhausted. As an approximation, we focus on minimizing
the delay of a message (the time between when it is injected
and when it is completely received).
While DTN applications are expected to be tolerant of delay,
this does not mean that they would not bene(cid:12)t from decreased
delay. Furthermore, we believe this metric is an appropriate
measure to use in exploring the di(cid:11)erential evaluation of sev-
eral routing algorithms in an application-independent manner.
Minimizing delay lowers the time messages spend in the net-
work, reducing contention for resources (in a qualitative sense).
Therefore, lowering delay indirectly improves the probability of
message delivery. This is validated by our simulation results.
4.2 Proactive Routing vs. Reactive Routing
In proactive routing, routes are computed automatically and
independently of tra(cid:14)c arrivals. Most Internet standard rout-
ing protocols and some ad-hoc protocols such as DSDV (Des-
tination Sequenced Distance Vector) and OLSR (Optimized
Link-State Routing) are examples of this style [4]. In a DTN,
these protocols are capable of computing routes for a connected
subgraph of the overall DTN topology graph. They fail when
asked to provide paths to nodes which are not currently reach-
able. Despite this drawback, proactive network-layer routing
protocols may provide useful input to DTN routing algorithm
by providing the set of currently-reachable nodes from which
DTN routing may select preferred next hops.
In reactive routing, routes are discovered on-demand when
tra(cid:14)c must be delivered to an unknown destination. Ad-hoc
routing protocols such as AODV (Ad-hoc On-demand Distance
Vector) and DSR (Dynamic Source Routing) are examples of
this style [4].
In these systems, a route discovery protocol is
employed to determine routes to destinations on-demand, in-
curring additional delay. These protocols work best when com-
munication patterns are relatively sparse. For a DTN, as with
the proactive protocols, these protocols work only for (cid:12)nding
routes in a connected subgraph of the overall DTN routing
graph. However, they fail in a di(cid:11)erent way than the proac-
tive protocols. In particular, they will simply fail to return a
successful route (from a lack of response), whereas the proac-
tive protocols can potentially fail more quickly (by determining
that the requested destination is not presently reachable).
In a DTN, routes may vary with time in predictable ways and
can be precomputed using knowledge about future topology dy-
namics. Employing a proactive approach would likely involve
computing several sets of routes and indexing them by time.
The associated resource requirements would be prohibitive un-
less the tra(cid:14)c demand is large and a large percentage of the
possible network nodes exchange tra(cid:14)c. Otherwise, a reactive
approach would be more attractive.
A related issue is route stability, a measure of how long the
currently-known routes are valid. Route stability depends on
the rate of topological change. With relatively stable routes one
can employ route caching to avoid unnecessary routing protocol
exchanges. With future knowledge about topology changes,
caching could be especially e(cid:11)ective in a DTN because it may
be possible to know ahead of time exactly when to evict existing
cached route entries.
4.3 Source Routing vs Per-hop Routing
In source routing the complete path of a message is deter-
mined at the source node, and encoded in some way in the
message. The route is therefore determined once and does not
change as the message traverses the network. In contrast, in
per-hop routing the next-hop of a message is determined at
each hop along its forwarding path. Per-hop routing allows
a message to utilize local information about available contacts
and queues at each hop, which is typically unavailable at the
Algorithms
EDLQ
Knowledge Oracles
LP
EDAQ
Performance
ED
Contacts
MED
Contacts
Summary
FC
Zero
Contacts
+
Queuing
+
Contacts
Queuing
Traffic
Demand
+
Increasing knowledge 
Figure 3: Conceptual performance vs knowledge trade-o(cid:11).
The x-axis depicts the amount of knowledge (increasing in
the positive direction). The y-axis depicts the expected
performance that can be achieved using a certain amount
of knowledge. The (cid:12)gure shows that more knowledge is
required to attain better performance. Labels on top show
algorithms developed in this paper using the corresponding
oracles.
source. Thus, per-hop routing may lead to better performance.
Unfortunately, due to its local nature, it may lead to loops when
nodes have di(cid:11)erent topological views (e.g. due to incomplete
or delayed routing information).
4.4 Message Splitting
A message is split when forwarded in such a way that dif-
ferent parts (fragments) are routed along di(cid:11)erent paths (or
across di(cid:11)erent contacts on the same path). This technique
may reduce the delay or improve load balancing among multi-
ple links. It is particularly relevant in DTNs because messages
can be arbitrarily large and may not (cid:12)t in a single contact.
However, splitting complicates routing because, in addition to
determining the sizes of the fragments, we also have to deter-
mine corresponding paths for the fragments.
5. ROUTING EVALUATION FRAMEWORK
5.1 Knowledge Oracles
The DTN routing problem has many input variables such
as dynamic topology characteristics and tra(cid:14)c demand. Com-
plete knowledge of these variables facilitates the computation
of optimal routes. However, with partial knowledge, the abil-
ity to compute optimal routes is hampered, and the perfor-
mance of the resultant routing is expected to be inferior. To un-
derstand this fundamental trade-o(cid:11) between performance and
knowledge, we create a set of abstract knowledge oracles, each
able to answer questions we ask of them. These oracles are
notational elements used to encapsulate particular knowledge
about the network required by di(cid:11)erent algorithms.
A key objective of our study is to understand the relationship
between algorithm performance and the use of these oracles.
Figure 3 illustrates this conceptually by showing the expected
performance and oracle requirements for each proposed routing
algorithm:
Contacts Summary Oracle This oracle can answer questions
about aggregate statistics of the contacts.
In particular, the
contacts summary oracle provides the average waiting time un-