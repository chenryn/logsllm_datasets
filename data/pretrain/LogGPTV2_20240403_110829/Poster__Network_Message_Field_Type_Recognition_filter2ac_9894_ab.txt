### 1. Topology of Dissimilarities (by MDS) Between Segments

**Figure 1: Topology of dissimilarities (by MDS) between segments generated by tshark from NTP messages.**
- **Segment Coloring:** Segments are colored according to cluster membership (glow) and true field type (dot).
- **Cluster Visualization:** The clusters inferred by our method can be visually distinguished as dense areas, which align with the true field types.
- **Validation:** This visual indication is further verified by precision statistics in the following evaluation of application mode 2.

### 2. Recognize Field Types from Templates

**Application Mode 2:**
- **Objective:** We recognize the types of newly seen segments using templates derived from typical field data types.
- **Field Types Identified:** Counting numbers, IDs, IP and MAC addresses, and timestamps. Additional heuristics allow for the identification of characters and flags.
- **Evaluation:**
  - **Training Set:** 100 messages each from DHCP, DNS, NBNS, NTP, and SMB.
  - **Test Set:** Different traces of the same binary protocols, truncated to 1000 messages each.
  - **Comparison:** The recognized data types are compared to the true data types derived from tshark.
  - **Precision Calculation:** Precision (P) is calculated as \( P = \frac{TP}{TP + FP} \), where TP is the number of true positives and FP is the number of false positives.
  - **Results:** As shown in Table 1, most data types are recognized with high precision.

### 3. NEMESYS Clustering

**Application Mode 3:**
- **Objective:** Classify similar segments without utilizing ground truth.
- **Example: Figure 2** illustrates the results for DNS, showing distinct dense areas of segments with similar data values.
- **Segmentation Method:** NEMESYS [5] is used to perform segmentation, but its heuristic nature introduces distortions in true field boundaries and data types.
- **Future Work:** Addressing these distortions to improve the clarity of data types in dense areas.

### 4. Conclusion

- **Ground Truth Validation:** Tshark dissectors provide reliable ground truth for testing our approach.
- **Future Improvements:**
  - Enhance NEMESYS [5] to more accurately infer segment boundaries in unknown protocols.
  - Add intra- and inter-message semantics inference to identify length fields and message counter fields.
  - Validate the approach on a broader range of protocols for training and testing.
- **Approach Benefits:**
  - Identify similar segments and group them into clusters representing the same data type, regardless of whether ground truth is available.
  - Label matching segments of unknown protocols according to their true data type, improving the analysis of unknown messages from network traces.

### 5. Recognition Precision for 1000 Messages Each

| Data Type | DHCP | DNS | NBNS | NTP | SMB |
|-----------|------|-----|------|-----|-----|
| chars     | 0.87 | 1.00 | 1.00 | n/a | 0.82 |
| float     | n/a  | n/a | n/a  | 0.96 | n/a |
| id        | 0.70 | 0.87 | n/a  | 0.00 | 0.01 |
| ipv4      | 1.00 | 0.99 | n/a  | 0.00 | 1.00 |
| mac       | n/a  | n/a | 0.85 | n/a | n/a |
| ts        | n/a  | n/a | n/a  | 1.00 | 0.33 |

- **Note:** "n/a" indicates that the protocol does not contain the respective field type.

### References

1. Georges Bossert, Frédéric Guihéry, and Guillaume Hiet. 2014. Towards Automated Protocol Reverse Engineering Using Semantic Information. In Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security (AsiaCCS). ACM.
2. Chia Y. Cho, Domagoj Babić, Eui C. R. Shin, and Dawn Song. 2010. Inference and Analysis of Formal Models of Botnet Command and Control Protocols. In Proceedings of the 17th ACM Conference on Computer and Communications Security (CCS). ACM.
3. Weidong Cui, Jayanthkumar Kannan, and Helen J. Wang. 2007. Discoverer: Automatic Protocol Reverse Engineering from Network Traces. In Proceedings of 16th USENIX Security Symposium. USENIX Association.
4. Martin Ester, Hans-Peter Kriegel, Jörg Sander, and Xiaowei Xu. 1996. A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise. In Proceedings of 2nd International Conference on Knowledge Discovery and Data Mining. AAAI Press.
5. Stephan Kleber, Henning Kopp, and Frank Kargl. 2018. NEMESYS: Network Message Syntax Reverse Engineering by Analysis of the Intrinsic Structure of Individual Messages. In 12th USENIX Workshop on Offensive Technologies (WOOT). USENIX Association.
6. Stephan Kleber, Lisa Maile, and Frank Kargl. 2019. Survey of Protocol Reverse Engineering Algorithms: Decomposition of Tools for Static Traffic Analysis. IEEE Communications Surveys and Tutorials, 21, 1, (February 2019). First quarter.
7. G. N. Lance and W. T. Williams. 1966. Computer Programs for Hierarchical Polythetic Classification (“Similarity Analyses”). The Computer Journal, 9, 1, (May 1966), 60–64.
8. Jian-Zhen Luo and Shun-Zheng Yu. 2013. Position-Based Automatic Reverse Engineering of Network Protocols. Journal of Network and Computer Applications, 36, 3, (May 2013). Elsevier.
9. Prasanta Chandra Mahalanobis. 1936. On the Generalized Distance in Statistics. Proceedings of the National Institute of Science of India, 2, 1, 49–55.
10. David N. Reshef, Yakir A. Reshef, Hilary K. Finucane, Sharon R. Grossman, Gilean McVean, Peter J. Turnbaugh, Eric S. Lander, Michael Mitzenmacher, and Pardis C. Sabeti. 2011. Detecting Novel Associations in Large Data Sets. Science, 334, 6062, (December 2011), 1518–1524. American Association for the Advancement of Science.
11. Yipeng Wang, Xiao-Chun Yun, Muhammad Zubair Shafiq, Liyan Wang, Alex X. Liu, Zhibin Zhang, Danfeng Yao, Yongzheng Zhang, and Li Guo. 2012. A Semantics Aware Approach to Automated Reverse Engineering Unknown Protocols. In 20th IEEE International Conference on Network Protocols (ICNP). IEEE.
12. Shameng Wen, Qingkun Meng, Chao Feng, and Chaojing Tang. 2017. Protocol Vulnerability Detection Based on Network Traffic Analysis and Binary Reverse Engineering. PLOS ONE, 12, 10, (October 2017). Public Library of Science.