limiting. A bidder needs to manually enter the bid into
the right ﬁeld box, or choose a bid by clicking on a
list of optional bids. Next, he has to click again on
a submit button and wait for the reply incorporating
the signal before he can enter a new bid. Though this
may change somewhat between different sites, manual
methods introduce many delays to the bidding process.
2. Tracking entire auctions: usually, auctions last from
several hours to several days. Manually keeping track
Figure 15. Mean proﬁt of heavy bidders as
a function of the number of heavy bidders,
comparing real to simulated results.
The
dashed line represents the simulation. None
of the real auctions had fewer than 3 heavy
bidders.
of the bidding tables during the entire auction duration
is difﬁcult for human players.
3. Fast data analysis: as usually hundreds of bidding
transactions take place, manually processing all of the
tracked data in real time is not feasible.
Below we describe three automated strategies. The ﬁrst
makes use of all the information we are able to gather dur-
ing the auction to maximize the chance that no other bidder
can outbid us. The other two strategies are somewhat sim-
pler: we introduce some assumptions and heuristics, which
may reduce our chances of winning, but are easier to deploy
and work on a wider range of UBA sites.
5.1
“Catch All Non-Disqualiﬁed Bids” Strategy
If we manage to track the redacted Q and DQ tables in
all of the auction’s transactions, we can obtain a complete
view of the ordering of all the bids, without the actual val-
ues. This information can reveal gaps of unbid values, and
may allow us to bid a unique leading bid or burn a qualiﬁed
bid. For instance, if we learn that the in interval [9.71,9.80]
there are only 9 placed bids values, then a single value was
missed by the bidders. If we then bid on all of the possible
10 values in the range, we will “catch it”, and increase our
chance of winning.
To implement this strategy we need to be able to count
the number of different bid values in monitored intervals.
We do so by sampling DQ at each transaction and keeping
track of the disqualiﬁed bidding groups. A bidding group
is comprised of all the bidders who bid the same value. As
DQ is sorted by bid values, we can count the number of
groups in some bidding interval and see how many values
have already been bid within it. Figure 16 illustrates the
strategy.
Recall the previous example auction, depicted again in
Figure 16(a). During the live auction, we can see only
the bidder ids, as in Figure 16(b). If we keep monitoring
DQ through all transactions, we can differentiate between
two disqualiﬁed groups: (2, 4) which is formed in t3 and
(3, 1, 5) formed in t4 and extended in t5. Recall that groups
are formed by a burning a qualiﬁed bid, which results in an
addition of 2 disqualiﬁed bids into DQ and the increment
of the bid count C by 1. At this stage we will let our player
with id = 10 bid two values: 9.98 at t6 and 10.00 at t7
depicted in Figure 16(c). At t7 we know that the interval
[9.98,10.00] contains only two disqualiﬁed groups, imply-
ing an either unbid or qualiﬁed bid in the interval. At t8 we
bid all the values of the interval, which is the single 9.99
in this case, to try and catch the yet non-disqualiﬁed value.
This results in a ﬁrst place qualiﬁed bid, putting us in a good
chance of winning the auction.
In order to reduce the number of bids needed in this strategy,
we can optimize our interval bidding using binary searches.
Once we identify an interval gap we can bid on its middle
and reduce the searched interval by half. We can continue
in this binary pattern and either disqualify bids or ﬁnd qual-
iﬁed ones, until we have n qualiﬁed leading bids. Note that
these leading bids have a very strong property: each oppo-
nent will have to disqualify these n bids before he becomes
the new leader. We achieve this by bidding on all the values
in all the non disqualiﬁed gaps, leaving no potential ones.
As we can choose n, we have the ability to increase our
winning chances by making other opponents chances for
disqualifying a large enough n as small as we want.
One of the sites we surveyed allowed us to avoid track-
ing disqualiﬁed groups by providing another possibly un-
intended signal: the site reported the ids of the disqualiﬁed
bidder-groups in DQ ordered by ascending ids. Thus, when
we observe idi > idi+1 in DQ, then a new group is found.
A rudimentary version of this strategy can be found in ap-
pendix B.1
We discovered that 15% of the sampled real auctions had
an unbid gap above the topmost qualiﬁed bid at the end of
the auction. If we were using this strategy we would only
have had to catch a single gap near the auction’s end to win
it. In the other 85% of the auctions, we would have had to
disqualify (µ = 4.95, σ = 2.74) bids in order to reach the
ﬁrst gap. In the worst case scenario, disqualifying 5 bids in
an interval of 256 places5 would have taken 32 bids:
1. 8 for the ﬁrst disqualiﬁcation by binary search.
2. 7 for the second, as the ﬁrst binary search already parti-
5In real auctions, the top position rarely drops below value 8.00.
tioned the range leaving us with a still non-partitioned
128 bids range. Assuming worst case, our binary
search will have to look in the entire non-partitioned
128 range.
3. 6 for the third, as the previous searches left us with two
non-partitioned 64 bids range.
4. 6 for the fourth, as we are still left with another non-
partitioned 64 bids range.
5. 5 for the ﬁfth, as we now must search within a non-
partitioned 32 bids range in the worst case.
In most sites we surveyed, the bid-credits auctions typically
awarded 50 bids. Therefore winning an auction with less
than 50 bids leads to a positive payoff.
5.2
“Disqualifying First Places” Strategy
Using the signals and binary searches, we can ﬁnd the
ﬁrst place relatively easily. In this method, we ﬁrst attain
some qualiﬁed positions near the ﬁrst place. Next, we can
disqualify the ﬁrst place over and over until our bid becomes
ﬁrst. As this strategy does not require the site to publish the
Q and DQ tables, we can utilize it in a broader range of
UBA sites.
This strategy is inferior to the previous, as we may miss
gaps above the current ﬁrst place, which could have led to a
more proﬁtable win. Additionally, we can no longer use the
property of forcing our opponent to disqualify n bids prior
to gaining the lead. There might be potential gaps, which
may be caught by other bidders in the last seconds of the
auction. Instead of making our opponents dependent on our
choice of n, we are now dependent on the current auction
state during the last seconds. We may also ﬁnd ourselves
having to disqualify too many bids in the time left, and fail
to win. An outline of this strategy can be found in appendix
B.2.
5.3
“Bid Block” Strategy
In this simple strategy, we only make a single binary
search for the leading position very close to the auction’s
end, disqualify it, and make a series of decrementing bids
until we get some qualiﬁed bids. When looking at the ﬁ-
nal results of our real auction data, we saw that the average
distance between the winning bid and the next unbid bid is
(µ = 29.76, σ = 27.4). An additional important advantage
of the simple strategy is the elimination of the reliance on
signals other than in the ﬁrst disqualiﬁcation step. This al-
lows us to increase the frequency of our automatic bids, as
we no longer need to wait for the server’s response to our
bid request. Similarly to the previous strategy, we do not
need the Q and DQ tables to use this method. An outline
of this strategy can be found in appendix B.3
id
2
3
2
Q(t1)
bid
Q(t2)
bid
id
10.00
9.98
9.97
2
3
2
1
10.00
9.98
9.97
9.95
DQ(t1)
bid
id
DQ(t2)
bid
id
Q(t3)
bid
9.98
9.97
9.95
id
3
2
1
DQ(t3)
bid
id
2
4
10.00
10.00
(a)
Q(t4)
bid
9.97
9.95
id
2
1
Q(t5)
bid
9.97
9.95
id
2
1
Q(t1)
bid
id
Q(t2)
bid
id
Q(t3)
bid
id
Q(t4)
bid
id
Q(t5)
bid
id
2
3
2
φ
φ
φ
2
3
2
1
φ
φ
φ
φ
3
2
1
φ
φ
φ
2
1
φ
φ
2
1
φ
φ
DQ(t4)
bid
id
DQ(t5)
bid
id
DQ(t1)
id
bid
DQ(t2)
id
bid
DQ(t3)
id
bid
DQ(t4)
id
bid
DQ(t5)
id
bid
2
4
3
1
10.00
10.00
9.98
9.98
2
4
3
1
5
10.00
10.00
9.98
9.98
9.98
2
4
φ
φ
(b)
2
4
3
1
φ
φ
φ
φ
2
4
3
1
5
φ
φ
φ
φ
φ
Q(t1)
bid
id
Q(t2)
bid
id
Q(t3)
bid
id
Q(t4)
bid
id
Q(t5)
bid
id
2
3
2
φ
φ
φ
2
3
2
1
φ
φ
φ
φ
3
2
1
φ
φ
φ
2
1
φ
φ
2
1
φ
φ
Q(t6)
id
2
1
bid
φ
φ
Q(t7)
bid
φ
φ
id
2
1
DQ(t1)
id
bid
DQ(t2)
id
bid
DQ(t3)
id
bid
DQ(t4)
id
bid
DQ(t5)
id
bid
DQ(t6)
id
bid
DQ(t7)
bid
id
2
4
φ
φ
2
4
3
1
φ
φ
φ
φ
φ
φ
φ
φ
φ
2
4
3
1
5
(c)
2
4
3
1
10
5
φ
φ
φ
φ
9.98
φ
2
10
4
3
1
10
5
φ
10.00
φ
φ
φ
9.98
φ