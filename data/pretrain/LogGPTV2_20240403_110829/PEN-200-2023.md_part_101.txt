Penetration Testing with Kali Linux
PS C:\Tools\PSTools> .\PsLoggedon.exe \\files04
PsLoggedon v1.35 - See who's logged on
Copyright (C) 2000-2016 Mark Russinovich
Sysinternals - www.sysinternals.com
Users logged on locally:
 CORP\jeff
Unable to query resource logons
Listing 761 - Using PsLoggedOn to see user logons at Files04
In this case, we discover that jeff is logged in on FILES04 with his domain user account. This is
great information, which suggests another potential attack vector. We’ll make a note in our
documentation.
Let’s go ahead and enumerate WEB04 as well: y
PS C:\Tools\PSTools> .\PsLoggedon.exe \\web04
k
PsLoggedon v1.35 - See who's logged on
Copyright (C) 2000-2016 Mark Russinovich s
Sysinternals - www.sysinternals.com
No one is logged on locally. o
Unable to query resource logons
Listing 762 - Using PsLoggedOn to see user logons at Web04
n
According to the output, there are no users logged in on WEB04. This may be a false positive
since we cannot know for sure that the Remote Registry service is running, but we didn’t receive
i
any error messages, which suggests the output is accurate. For now, we will simply have to trust
z
our enumeration and accept that no users are logged in on the specific server.
As we discovered earlier iDn this section, it appears that we have administrative privileges on
CLIENT74 via stephanie, so this is a machine of high interest, and we should enumerate possible
sessions there as well. Let’s do that now. For educational purposes, we have enabled the Remote
Registry service on CLIENT74.
PS C:\Tools\PSTools> .\PsLoggedon.exe \\client74
PsLoggedon v1.35 - See who's logged on
Copyright (C) 2000-2016 Mark Russinovich
Sysinternals - www.sysinternals.com
Users logged on locally:
 CORP\jeffadmin
Users logged on via resource shares:
10/5/2022 1:33:32 AM CORP\stephanie
Listing 763 - Using PsLoggedOn to see user logons at CLIENT74
It appears jeffadmin has an open session on CLIENT74, and the output reveals some very
interesting pieces of information. If our enumeration is accurate and we in fact have
administrative privileges on CLIENT74, we should be able to log in there and possibly steal
jeffadmin’s credentials! It would be very tempting to try this immediately, but it’s best practice to
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 718
Made in Morocco
Penetration Testing with Kali Linux
stay the course and continue our enumeration. After all, our goal is not to get a quick win, but
rather to provide a thorough analysis.
Another interesting thing to note in the output is that stephanie is logged on via resource shares.
This is shown because PsLoggedOn also uses the NetSessionEnum API, which in this case
requires a logon in order to work. This may also explain why we saw a logon earlier for stephanie
while using PowerView.
This concludes the enumeration of our compromised user, including the enumeration of active
sessions within the domain. Based on the information we have gathered, we have a very
interesting attack path that may lead us all the way to domain administrator if pursued.
In the next section, we will continue our enumeration by focusing on a different type of user, more
specifically Service Accounts.
y
21.3.3 Enumeration Through Service Principal Names
So far, we have obtained quite a bit of information, and we kare starting to see how things are
connected together within the domain. To wrap up our discussion of user enumeration, we’ll shift
our focus to Service Accounts,1042 which may also be mesmbers of high-privileged groups.
Applications must be executed in the context of an operating system user. If a user launches an
o
application, that user account defines the context. However, services launched by the system
itself run in the context of a Service Account.
n
In other words, isolated applications can use a set of predefined service accounts, such as
LocalSystem,1043 LocalService,1044 and NetworkService.1045
i
For more complex applications, a domain user account may be used to provide the needed
z
context while still maintaining access to resources inside the domain.
When applications like ExchDange,1046 MS SQL, or Internet Information Services (IIS) are integrated
into AD, a unique service instance identifier known as Service Principal Name (SPN)1047 associates
a service to a specific service account in Active Directory.
Managed Service Accounts,1048 introduced with Windows Server 2008 R2, were
designed for complex applications, which require tighter integration with Active
Directory.
1042 (Microsoft, 2022), https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/service-accounts-on-premises
1043 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows/win32/services/localsystem-account
1044 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows/win32/services/localservice-account
1045 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows/win32/services/networkservice-account
1046 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Microsoft_Exchange_Server
1047 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows/win32/ad/service-principal-names
1048 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows-server/security/group-managed-service-accounts/group-managed-
service-accounts-overview
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 719
Made in Morocco
Penetration Testing with Kali Linux
Larger applications like MS SQL and Microsoft Exchange often required server
redundancy when running to guarantee availability, but Managed Service
Accounts did not support this. To remedy this, Group Managed Service Accounts
were introduced with Windows Server 2012, but this requires that domain
controllers run Windows Server 2012 or higher. Because of this, some
organizations may still rely on basic Service Accounts.
We can obtain the IP address and port number of applications running on servers integrated with
AD by simply enumerating all SPNs in the domain, meaning we don’t need to run a broad port
scan.
Since the information is registered and stored in AD, it is present on the domain controller. To
obtain the data, we will again query the DC, this time searching for specific SPNs.
y
To enumerate SPNs in the domain, we have multiple options. In this case, we’ll use setspn.exe,
which is installed on Windows by default. We’ll use -L to run kagainst both servers and clients in
the domain.
s
While we could iterate through the list of domain users, we previously discovered the iis_service
user. Let’s start with that one:
o
c:\Tools>setspn -L iis_service
Registered ServicePrincipalNames for CN=iis_service,CN=Users,DC=corp,DC=com:
HTTP/web04.corp.com n
HTTP/web04
HTTP/web04.corp.com:80
Listing 764 -i Listing SPN linked to a certain user account
z
In the Listing above, an SPN is linked to the iis_service account.
Another way of enumeratinDg SPNs is to let PowerView enumerate all the accounts in the domain.
To obtain a clear list of SPNs, we can pipe the output into select and choose the
samaccountname and serviceprincipalname attributes:
PS C:\Tools> Get-NetUser -SPN | select samaccountname,serviceprincipalname
samaccountname serviceprincipalname
-------------- --------------------
krbtgt kadmin/changepw
iis_service {HTTP/web04.corp.com, HTTP/web04, HTTP/web04.corp.com:80}
Listing 765 - Listing the SPN accounts in the domain
While we will explore the krbtgt account in upcoming AD-related Modules, for now, we’ll continue
to focus on iis service. The serviceprincipalname of this account is set to “HTTP/web04.corp.com,
HTTP/web04, HTTP/web04.corp.com:80”, which is indicative of a web server.
Let’s attempt to resolve web04.corp.com with nslookup:
PS C:\Tools\> nslookup.exe web04.corp.com
Server: UnKnown
Address: 192.168.50.70
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 720
Made in Morocco
Penetration Testing with Kali Linux
Name: web04.corp.com
Address: 192.168.50.72
Listing 766 - Resolving the web04.corp.com name
From the result, it’s clear that the hostname resolves to an internal IP address. If we browse this
to this IP, we find a website that requires a login:
y
k
s
o
n
i
z
D
Figure 267: Web04 Login
Since these types of accounts are used to run services, we can assume that they have more
privileges than regular domain user accounts. For now, we’ll simply document that iis_service has
a linked SPN, which will be valuable for us in the upcoming AD-related Modules.
21.3.4 Enumerating Object Permissions
In this section, we will enumerate specific permissions that are associated with Active Directory
objects. Although the technical details of those permissions are complex and out of scope of this
Module, it’s important that we discuss the basic principles before we start enumeration.
In short, an object in AD may have a set of permissions applied to it with multiple Access Control
Entries (ACE).1049 These ACEs make up the Access Control List (ACL).1050 Each ACE defines
whether access to the specific object is allowed or denied.
As a very basic example, let’s say a domain user attempts to access a domain share (which is
also an object). The targeted object, in this case the share, will then go through a validation check
1049 (Microsoft, 2021), https://learn.microsoft.com/en-us/windows/win32/secauthz/access-control-entries
1050 (Microsoft, 2020), https://learn.microsoft.com/en-us/windows/win32/secauthz/access-control-lists
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 721
Made in Morocco
Penetration Testing with Kali Linux
based on the ACL to determine if the user has permissions to the share. This ACL validation
involves two main steps. In an attempt to access the share, the user will send an access token,
which consists of the user identity and permissions. The target object will then validate the token
against the list of permissions (the ACL). If the ACL allows the user to access the share, access is
granted. Otherwise the request is denied.
AD includes a wealth of permission types that can be used to configure an ACE.1051 However,
from an attacker’s standpoint, we are mainly interested in a few key permission types. Here’s a
list of the most interesting ones along with a description of the permissions they provide:
GenericAll: Full permissions on object
GenericWrite: Edit certain attributes on the object
WriteOwner: Change ownership of the object
WriteDACL: Edit ACE's applied to object
AllExtendedRights: Change password, reset password, etc.
y
ForceChangePassword: Password change for object
Self (Self-Membership): Add ourselves to for example a group
Listing 767 - AD permission typesk
The Microsoft documentation1052 lists other permissions and describes each in more detail.
s
We can use Get-ObjectAcl to enumerate ACEs with PowerView. To get started, let’s enumerate
our own user to determine which ACEs are applied to it. We can do this by filtering on -Identity:
o
PS C:\Tools> Get-ObjectAcl -Identity stephanie
n
...
ObjectDN : CN=stephanie,CN=Users,DC=corp,DC=com
ObjectSID : S-1-5-2i1-1987370270-658905905-1781884369-1104
ActiveDirectoryRights : ReadPzroperty
ObjectAceFlags : ObjectAceTypePresent
ObjectAceType : 4c164200-20c0-11d0-a768-00aa006e0529
InheritedObjectAceType : D00000000-0000-0000-0000-000000000000
BinaryLength : 56
AceQualifier : AccessAllowed
IsCallback : False
OpaqueLength : 0
AccessMask : 16
SecurityIdentifier : S-1-5-21-1987370270-658905905-1781884369-553
AceType : AccessAllowedObject
AceFlags : None
IsInherited : False
InheritanceFlags : None
PropagationFlags : None
AuditFlags : None
...
Listing 768 - Running Get-ObjectAcl specifying our user
The amount of output may seem overwhelming since we enumerated every ACE that grants or
denies some sort of permission to stephanie. While there are many properties that seem
1051 (Microsoft), https://learn.microsoft.com/en-us/dotnet/api/system.directoryservices.activedirectoryrights?view=netframework-
4.7.2
1052 (Microsoft, 2022), https://learn.microsoft.com/en-us/windows/win32/secauthz/access-rights-and-access-masks
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 722
Made in Morocco
Penetration Testing with Kali Linux
potentially useful, we are primarily interested in those highlighted in the truncated output of
Listing 768.
The output lists two Security Identifiers (SID),1053 unique values that represent an object in AD. The
first (located in the highlighted ObjectSID property) contains the value “S-1-5-21-1987370270-
658905905-1781884369-1104”, which is rather difficult to read. In order to make sense of the SID,
we can use PowerView’s Convert-SidToName command to convert it to an actual domain object
name:
PS C:\Tools> Convert-SidToName S-1-5-21-1987370270-658905905-1781884369-1104
CORP\stephanie
Listing 769 - Converting the ObjectISD into name
The conversion reveals that the SID in the ObjectSID property belongs to the stephanie user we
are currently using. The ActiveDirectoryRights property describes the type of permission applied
y
to the object. In order to find out who has the ReadProperty permission in this case, we need to
convert the SecurityIdentifier value.
k
Let’s use PowerView to convert it into a name we can read:
s
PS C:\Tools> Convert-SidToName S-1-5-21-1987370270-658905905-1781884369-553
CORP\RAS and IAS Servers
Listing 770 - Converting the SoecurityIdentifier into name
According to PowerView, the SID in the SecurityIdentifier property belongs to a default AD group
named RAS and IAS Servers.1054 n
Taking this information together, the RAS and IAS Servers group has ReadProperty access rights
to our user. While this is a commoni configuration in AD and likely won’t give us an attack vector,
we have used the example to makze sense of the information we have obtained.
In short, we are interested in the ActiveDirectoryRights and SecurityIdentifier for each object we
D
enumerate going forward.
The highest access permission we can have on an object is GenericAll. Although there are many
other interesting ones as discussed previously in this section, we will use GenericAll as an
example in this case.
We can continue to use Get-ObjectAcl and select only the properties we are interested in, namely
ActiveDirectoryRights and SecurityIdentifier. While the ObjectSID is nice to have, we don’t need it
when we are enumerating specific objects in AD since it will only contain the SID for the object we
are in fact enumerating.
Although we should enumerate all objects the domain, let’s start with the Management
Department group for now. We will check if any users have GenericAll permissions.
To generate clean and manageable output, we’ll use the PowerShell -eq flag to filter the
ActiveDirectoryRights property, only displaying the values that equal GenericAll. We’ll then pipe
the results into select, only displaying the SecurityIdentifier and ActiveDirectoryRights properties:
1053 (Microsoft, 2022), https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-identifiers
1054 (Microsoft, 2022), https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#ras-
and-ias-servers
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 723
Made in Morocco
Penetration Testing with Kali Linux
PS C:\Tools> Get-ObjectAcl -Identity "Management Department" | ?
{$_.ActiveDirectoryRights -eq "GenericAll"} | select
SecurityIdentifier,ActiveDirectoryRights
SecurityIdentifier ActiveDirectoryRights
------------------ ---------------------
S-1-5-21-1987370270-658905905-1781884369-512 GenericAll
S-1-5-21-1987370270-658905905-1781884369-1104 GenericAll
S-1-5-32-548 GenericAll
S-1-5-18 GenericAll
S-1-5-21-1987370270-658905905-1781884369-519 GenericAll
Listing 771 - Enumerating ACLs for the Management Group
In this case, we have a total of five objects that have the GenericAll permission on the
Management Department object. To make sense of this, let’s convert all the SIDs into actual
names: y
PS C:\Tools> "S-1-5-21-1987370270-658905905-1781884369-512","S-1-5-21-1987370270-
k
658905905-1781884369-1104","S-1-5-32-548","S-1-5-18","S-1-5-21-1987370270-658905905-
1781884369-519" | Convert-SidToName
CORP\Domain Admins s
CORP\stephanie
BUILTIN\Account Operators
Local System o
CORP\Enterprise Admins
Listing 772 - Converting all SIDs that have GenericAll permission on the Management Group
n
The first SID belongs to the Domain Admins group and the GenericAll permission comes as no
surprise since Domain Admins have the highest privilege possible in the domain. What’s
i
interesting, however, is to find stephanie in this list. Typically, a regular domain user should not
z
have GenericAll permissions on other objects in AD, so this may be a misconfiguration.