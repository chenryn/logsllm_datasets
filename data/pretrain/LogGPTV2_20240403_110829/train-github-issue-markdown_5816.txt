##### ISSUE TYPE
  * Bug Report
##### COMPONENT NAME
block  
include_role
##### ANSIBLE VERSION
    ansible 2.4.3.0
      config file = /Users/kevinp/Documents/src/cm/ansible/ansible.cfg
      configured module search path = [u'/Users/kevinp/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
      ansible python module location = /Users/kevinp/Documents/src/cm/ansible/venv2/lib/python2.7/site-packages/ansible
      executable location = /Users/kevinp/Documents/src/cm/ansible/venv2/bin/ansible
      python version = 2.7.14 (default, Nov 10 2017, 16:16:47) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.38)]
##### CONFIGURATION
    ANSIBLE_PIPELINING(/Users/kevinp/Documents/src/cm/ansible/ansible.cfg) = True
    DEFAULT_HOST_LIST(/Users/kevinp/Documents/src/cm/ansible/ansible.cfg) = [u'/Users/kevinp/Documents/src/cm/ansible/hosts.py']
    DEFAULT_TIMEOUT(/Users/kevinp/Documents/src/cm/ansible/ansible.cfg) = 30
##### OS / ENVIRONMENT
macOS control machine, CentOS 7.4 guest
##### SUMMARY
When using the `block` task, with an embedded `include_role` task, it appears
that any variables defined within the block don't get propagated to handlers
that run as part of the included role.
##### STEPS TO REPRODUCE
  1. Create a task with a block declaration that looks like this:
    - block:
      - include_role:
          name: my_test_role
      vars:
        my_data: "Sample Number 1"
  2. Create a new role named my_test_role with the following task
    - debug:
        msg: "my_data in role is {{ my_data }}"
      notify: run my handler
      changed_when: true
  3. Add a handler to the my_test_role with the following declaration
    - name: run my handler
      debug: 
        msg: "my_data in handler is {{ my_data }}"
  4. run the task
##### EXPECTED RESULTS
You should see 2 debug messages being printed, something like as follows:
> "my_data in role is Sample Number 1"  
>  "my_data in handler is Sample Number 1"
##### ACTUAL RESULTS
The first debug message gets printed as expected, but the second one - the one
from the handler - fails due to an undefined variable, something like this:
    TASK [role : debug] *****************************
    changed: [kspjenkins] => {
        "msg": "my_data in role is Sample Number 1"
    }
    RUNNING HANDLER [ : run my handler] **********************************************
    FAILED! => {"msg": "The task includes an option with an undefined variable...."}`