---
## Page 538
520
Linux程序设计
做法。
Tk8.0在字体处理方面引人了一个新机制：使用font命令。可以给字体起名字，创建新字体
时可以使用入们习惯的计量单位，新字体到系统有关接口的转换工作在Tk的内部完成。新的font
命令给程序员带来的好处之一是使字体的定义工作独立于计算机软硬件平台。它还提供了一个
把新建字体与某个名字关联起来的办法。font命令的语法如下所示：
font create ?fontnane? 7option value...?
font configure fontname ?option? ?value option value ...?
font命令的选项有-family、-size、-slant等。font命令完整的选项清单可以在它的使用手册页
里查到。
请看下面的例子，我们可以用这条命令创建出一个名为myfont的字体来：
font create nyfont -fanily Courier -size 20 -weight bold -slant itai1c
underline 1 -overstrike 1
在字体创建出来以后，就可以用名字代表它对应的设置值用在-font素材选项里了。在创建
出字体之后，如果我们用wish来运行下面这些代码：
button.b -text *Hello Worid!*-font nyfont
pack .b
就会看到如图16-16所示的效果。
lont.tk
图16-16
16.5.8绑定
我们曾经说过：在素材被创建出来之后，我们就可以把事件处理器与它们关联起来，使素
材能够响应用户的操作动作。比如说，在前面最后一个“HelloWorld”程序里，我们用下面的
命令把一个事件处理器关联到那个按钮上：
bind .b  (puts *Help !*)
事件处理器与素材之间所有这些联系都必须通过绑定命令bind来建立。bind命令的作用就是
把Tel脚本和X事件关联起来，它的功能是非常强大的。它的通用语法如下所示：
bind tag sequence
bind tag
bind tag sequence script
bind tag sequence ·script
tag参数用来确定要把绑定施加在哪个窗口上。如果tag以一个句点开始，比如“a.b.c”这样，
就肯定是某个窗口的路径名；否则，它可以是一个任意的字符串。每个窗口都会有一组关联标
签，而一个绑定将作用于一个特定的窗口上。如果tag是为窗口定义的那些标签中的一个，那么，
加入jaVa编程群：524621833
---
## Page 539
第16章X窗口系统的程序设计
521
缺省的绑定标签将采取以下行动：
·如果tag是某个内部窗口的名字，绑定将施加到该窗口上。
·如果tag是某个顶层窗口的名字，绑定将施加到该顶层窗口及其全体内部窗口上。
·如果tag是某种素材的类型名称，比如button（按钮），绑定将施加到该类型的所有素材
·如果tag的值是all、绑定将施加到该应用程序的全体窗口上。
举例来说，我们来看看对按钮类型调用绑定命令会发生什么事情：
 bind Button
命令执行的结果告诉我们：按钮类型有与这五个事件序列对应的绑定。继续研究、看看对
其中的一个绑定调用bind命令的第二种形式会发生什么事情：
bind Button 
tkButtonInvoke N
这个结果告诉我们：button（按钮）类素材上的绑定（一切下压按钮都属于这
个button类）将以该按钮的路径名为参数调用Tel脚本程序tkButtonlnvoke。
我们还可以在绑定命令里直接使用素材的类型名称，如下所示：
这将把绑定设置到这个应用程序里所有的按钮类素材上。允许使用多个
绑定都来匹配一个X事件。如果几个绑定被关联到不同的标签，这些绑定将逐个依次执行；其缺
省的执行顺序是：某个素材类上的绑定（如果有的话）最先执行，其次是该素材自身上的绑定，
接着是该素材的顶层窗口上的绑定，最后是一个all绑定（如果该事件有--个与之对应的al绑定
的话）。我们可以用bindtags命令改变特定窗口的绑定执行顺序，还可以再给这个窗口额外加上
一些绑定标签。
当某个绑定匹配上特定的用户动作序列时，与这个绑定关联着的脚本程序就将被调用执行。
在调用脚本程序的时候，我们可以让bind命令从激活该绑定的x事件那里给对应的脚本程序传递
些参数过来。这需要使用特殊的修饰符来实现。举例来说，在前面的画布例子里，我们有这
样--个绑定：
bind Sc  *itenDragStart $c 8x y*
它告诉bind要在调用itemDragStart命令时传递Sc、%x和%y。bind会在调用实际发生时把%x
和%y替换为那个X事件结构的x坐标和y坐标。bind命令支持大量的替换参数，它们完整的清单
可以在bind命令的使用手册页里查到。
16.5.9bindtags命令
前面已经讲过，bind命令的作用就是把一个动作和一个绑定关联起来，用bind命令创建关联
关系时必须指定一个标签。tag参数用来确定要把绑定施加在哪个窗口.比。正常情况下，tag可以
是某个素材的名字、某个素材类型的名字、关键字al或者任何其他的文本字符串。每个窗口都
加入jaVa编程群：524621833
---
## Page 540
522
Linux程序设计
有一个标签关联表，如果某个绑定的标签是为某个窗口定义的标签中的一个，这个绑定就将作
用于这个特定的窗口。当窗口里发生--个事件时，它将按一定次序顺序作用于这个窗口的每一
个标签。对各个标签来说，与给定标签和发生事件最匹配的绑定将最先执行。请看下面这个代
码段：
bind. "puts Toplevel"
entry.e
pack.e
bind .e *puts Entry*
在wishshell里执行了这个代码段以后，如果你在输人框素材里按下F1键，就会先看到字符
串“Entry”、再看到“Toplevel”被打印出来。在素材.e上调用bindtags命令给出的结果是“c
Entry.all”：它的意思是这样的：如果在素材.e上触发了一个事件，先要检查.e素材自已的标
签，然后再检查包含该输人框的那个顶层素材的标签。如果想让顶层素材上的绑定先于输人框
上的被执行又该怎么办呢？这时，你就可以利用bindtags命令改变Tk默认的绑定执行顺序，如
下所示：
Bindtags .e (.,e Sntry al1)
在缺省的情况下，每个窗口都有四个绑定标签，按默认执行顺序依次为：
·该窗口的名字。
·该窗口的类型名。
·该窗口最近的顶层祖先的名字。
* all。
顶层窗口只有三个缺省的标签，这是因为它祖先的名字和窗口自己的名字是同一个。
bindtags命令可以用来给窗口任意添加绑定标签。事实上，bindtags命令的这个功能可以帮
助我们完成许多事情。有了它，我们可以只创建一次绑定，却把它关联给任意多个素材；具体
做法很简单：只要把这次创建的绑定标签插人到素材的绑定标签表里就行了。第二点是它使素
材能够在四个标准绑定标签以外再拥有其他标签。标签使我们能够用名字而不是用一个键序列
来标识一个动作。请注意下面例子里bindtags命令的实际用法。
button .b -text *Tick(ms)*
set count 0
label.ticker -textvariable count
pack .b .ticker
bind tiser {
set count0
Starttimer w
bind timer {
StopTimer WK
proc StartTiner (widget }(
giobal pending count
set pending [after 200 [list StartTiner $widget]]
incr count 200
proc StopTiner ( widget }(
加入jaVa编程群：524621833
---
## Page 541
第16章X窗口系统的程序设计
523
global pending
after cancel Spending
在上面的例子里，我们先创建了一个简单的用户操作界面，里面有一个按钮和一个用来显
示计时数字的标题签。然后用timer做标签名创建了一个绑定。我们先后给timer标签增加了两个
键序列，第一个序列是，启动计时器：第二个是，停止时
器。代码相当简单，很容易看懂。这里值得注意的就是bindtags命令的用法。我们只用一行语句
就把这些键序列添加到按钮.b上了。如果没有bindtags命令，我们就不得不象下面那样做：
bind .b “+(set count 0; StartTimer W)*
对绑定也得这样做。如果只是单看这些绑定的代码，外人是很难知道我
们到底想做些什么。而使用了bindtags命令，我们就能够用名字timer来标识这些序列了。如果我
们还要再创建一个按钮做另一个计时器，只需在那个按钮上调用binftags命令插人这个timer绑定
就可以了。
16.5.10几何尺寸管理
在创建了素材并使用bind命令绑定好事件处理器之后，我们需要把各种素材摆放到屏幕上去，
使GU1既有意义又有用处。几何尺寸管理器负责完成这项工作。Tk当前支持三个几何尺寸管理
器，它们是
·打包器Packer，使用pack命令。
·摆放器Placer、使用palce命令。
·表格或表格线管理器，使用grid命令。
1.打包器Packer
pack命令的作用是在主窗口或主素材里安排它所包含的附属素材们相对于主窗口边界的位
置。pack命令的语法可以是下面几种形式之一：
pack slave 7slave...??options?
pack option arg 7arg ...?
pack conflgure slave 7slave ...?7options?
我们来看一个例子，学习几个pack选项的用法：
!/usr/bin/wish -f
toreach i(1234)1
button.bs1-text *Btn Si"
 ped-uz xped- at prs- g xoed
这段代码将产生如图16-17所示的输出。
这里，全体按钮都靠左摆放，两个按钮之间有一个2毫米的水平间距，各个按钮与主窗口边
界的垂直间距是1毫米。
再看下面这个打包操作序列：
加入jaVa编程群：524621833
---
## Page 542
524
Linux程序设计
!/usr/bin/wish -f
foreachi{1234}（
w Apd-w xppe-d
button.bsi -text *atn Si
口区
Btn1
Btn2
Btn3
Btn4
图16-17
在这个例子里，-ipadx指示附属素材（即那些按钮）以内部排列方式摆放，彼此水平间距还
是2毫米。内部排列方式的意思是：如果窗口里有空余的地方，附属素材（这里是按钮）就会自
动伸展占据那些空间。
pack命令有许许多多的组合形式。进一步的学习请参考pack命令的使用手册页和由
Tk的作者Ousterhout本人编写的“Tcland theTkToolkit”（《Tcl和Tk工具包》），
Addison-Wesley出版社出版（国际书号ISBN-0-201-63337-X）。
2.摆放器Placer
当你需要指定一个窗口（附属窗口）在另外一个窗口（主窗口）里固定的准确尺寸和位置时、
就需要使用负责窗口固定位置摆放的Placer几何尺寸管理器。我们以前面的拼图程序为例来说明
Placer几何尺寸管理器的使用方法。从下面这个代码段可以看出拼图中的按钮是怎样创建出来的。
set order (3 16.2 5715 13 4 11 8 9.1410 12)
for(seti0)($i<15)(set 1[expr Si+1]){
set xpos（Snum）[expr （$i84）*.25]
set mum [lindex Sorder Si]
set ypos($num)(expr ($i/4)*.25)
set x [expr $i#4]
set y [expr $i/4]
set butInage [image create photo inage-S{num} -width 40 -height 40]
SbutImage copy Simage -from（expr round（Sx*4o)]\
[expr round(Sy*40)}\
[expr round（$y*40+40)]
[exprround（$x*40+401]
button.frame.Snum -relief raised -image SbutImage\
-highlightthickness 0
place .frame.Snun -relx Sxpos($nun)-rely Sypos(Snum}\
1
这个循环创建按钮并把它们摆放到主窗口.framc里。代码中的“-relx0”代表的是主窗口的
左边界，“-relx1”是主窗口的右边界；“-rely0”和“-rely1”也与此类似。仔细研究那个循
环的代码就会发现按钮们是怎样摆放才构成拼图的。
3.表格管理器grid
加入jaVa编程群：524621833
---
## Page 543
第16章X窗口系统的程序设计
525
者被称为几何主窗口。grid是一个功能非常强大的几何尺寸管理器：有了它，我们就可以轻松的
创建出复杂的窗口布局。请看这个只有10行的TK代码段，创建一个用来输人个人资料的输人框
还真是够简单的：
#!/usr/bin/wish -f
set row0
foreach item {name email address phone)(
label.
.$iten-label-text*s（iten):
gridSiten-entry-row $rov-coiunn 1-columnspan 2-sticky *ew*
incr row
grid columnconfigure . 1-weight 1
如果运行这个程序，我们将看到如图16-18所
示的输出效果。
gnid.tk
这段代码把附属素材“.Sitem-labe1”和
name:
“.Sitem-entry”按照“-rowSrow”和-column选项
email:
的设定摆放到了主窗口里。你还可以用-rowspan
:ssappe
和-columnspan选项来指定附属素材的行、列的延
伸选项，这些选项的作用是让附属素材延伸span
phone:
行或span列，或者同时在行、列两个方向上延伸。
田16-18
请看下面这条命令：
grid .Sitem-entry -row Srow -column 1 -colunnspan 2 -gticky *ew*
它设定entry素材占据两列，“-sticky“ew"”表示附属素材将在分配给它的空间里从右向左展
开。如果在-sticky选项里只给出了一个字母，就表示素材将固定靠左（w）或固定靠右（e）来
摆放。再看下面这行代码：
grid columnconfigure . 1 -weight 1
这是代码段的最后一行代码，它设定：如果主窗口（.）在水平方向上调整了尺寸，第1列将
获得尺寸调整后的部分。
在我们边学习边开发的程序示例里已经多次用到了grid几何尺寸管理器。它使窗口
布局脱容易设计又易于理解。它是从4.1版本开始出现在Tk里的。