e
S
30
24
r
e
b
m
u
n
t
e
k
c
a
P
18
12
6
0
r
e
b
m
u
n
e
c
n
e
u
q
e
S
r
e
b
m
u
n
e
c
n
e
u
q
e
S
0
2
3
4
Time (second)
5
6
7
0.5
0.6
0.7
Time (second)
0.8
0.9
8.6
Time (second)
8.65
Reordered ACKs
Figure 2: Major causes of source-layer bursts.
the sender is ready to transfer a large message or ﬁle, it can
send a long burst to the network. Our example comes from
the start of an scp session.
ACK compression. Queueing in the reverse path of a
TCP ﬂow, can cause the almost simultaneous arrival of suc-
cessive ACKs at the sender. This can break TCP’s self-
clocking and cause long bursts [12].
Cumulative or lost ACKs. Sometimes the receiver gen-
erates an ACK for multiple received segments. Such a “super-
cumulative” ACK can trigger a burst at the sender. The
same eﬀect can occur if one or more ACKs are lost. In that
case, the ﬁrst non-lost ACK will trigger a burst.
Idle restart timer bug. A TCP sender is recommended to
use slow start and return to the initial congestion window
after it has not sent anything for the duration of the Idle
Restart timer (typically equal to RTO) [13]. Unfortunately,
several operating systems do not support, or they do not
implement correctly, this feature [14]. As a result, a TCP
sender can send a long burst after an idle time period.
Bursty applications. Even if the Idle Restart timer is
implemented correctly,
it is possible that the application
itself is bursty, meaning that it writes bytes to the TCP
send-socket sporadically. If the time between bursts is suf-
ﬁciently short so that Idle Restart is not activated, TCP’s
self-clocking breaks and TCP can send long bursts.
Packet reordering. Reordering of ACKs scrambles self-
clocking and can trigger a burst at the sender. In the ex-
ample shown, the out-of-order ACK acknowledges ten more
segments, causing a large burst at the sender. Data segment
reordering can also interrupt self-clocking and cause bursts
[15].
3. PACKET BURSTS AND SCALING
In this section, we show the connection between source-
level bursts and scaling, and identify the timescales in which
such bursts create scaling behavior. Consider a source that
generates a sequence of packet trains. A train consists of
N packets, each of length L bytes.
If the capacity of the
source is C, the dispersion of each packet in the time axis is
L
C , while the dispersion of the entire train is NL
C . Suppose
that the interarrival time Tof f between successive trains is
exponentially distributed. We next show that this traﬃc
process shows local scaling in the timescales between L
C and
NL
C .
Figure 3 shows the autocorrelation function and the en-
ergy plot for a synthetic trace that follows the previous
packet train model.
C =4ms,
N =16, NL
C =64ms, and E[Tof f ]=2000ms. Consider ﬁrst the
discrete-time process of packet arrivals in successive non-
overlapping intervals of length L
C ; this time series takes the
values 0 and 1. The autocorrelation R(τ ) of this process, for
τ = 0, 1, 2, . . . , is positive when τ N , R(τ ) is almost zero because the correlations between
packets of diﬀerent trains are weak (Tof f(cid:8) NL
C ), and the
time interval between successive trains is exponentially dis-
tributed.
In this trace, we have that L
Observe now the energy plot of Figure 3. The linearly
8
16
24
32
40
Time (ms)
56
48
64
72
80
88
96
0
1
t
n
e
i
c
i
f
f
e
o
c
n
o
i
t
a
l
e
r
r
o
c
o
t
u
A
0.8
0.6
0.4
0.2
0
-0.2
2 
8 
32 
128 
512 
2048 
8192 
(ms) 
L/C = 4ms, N = 16, NL/C = 64ms
1
0
−1
−2
−3
−4
−5
−6
−7
−8
−9
)
y
g
r
e
n
E
(
g
o
l
2
0
2
4
6
8
10
12
Lag
14
16
18
20
22
24
0
2
4
6
8
j = log
(scale)
2
10
12
14
16
Figure 3: Autocorrelation and energy plot of the
packet train traﬃc model.
C ) to 64ms ( NL
increasing segment, between scales 4 and 8, represents local
C ).2 The
scaling in the timescales from 4ms ( L
strong positive correlations in the lags that correspond to
the train duration (τ = 0, . . . 15) are reﬂected in the energy
plot as local scaling in the corresponding timescales. The
scaling exponent is almost zero in longer timescales (higher
than 64ms), due to the exponential train interarrivals. Also
note that the negative dip at scale-4, which corresponds to
the packet spacing L/C, is due to the periodic arrival of a
new packet every 4ms during packet trains.
The previous model may seem too artiﬁcial, as all pack-
ets appear in bursts. Source-level bursts can create scal-
ing even if they occur less frequently however. Consider a
source with two states: the “random” state and the “bursty”
state. In the random state, the source generates exponen-
tial interarrivals with a mean of 100ms. In the bursty state,
the source generates a single train of N =16 packets. The
transition probability from the random state to the bursty
state is 0.05, while the transition probability in the reverse
direction is 1. Figure 4 shows the energy plot for such a
source, when L
C =1ms. Notice the emerging scaling behavior
between scales 2 and 6, which correspond to the timescales
1ms to 16ms. Even though the scaling exponent is not con-
stant across these timescales, the range in which α is positive
matches the extent of packet bursts, from L
C to NL
C .
1
0
−1
−2
−3
)
y
g
r
e
n
E
g
o
l
(
2
−4
−5
−6
−7
0
2
4
6
8
12
10
(scale)
j = log
2
14
16
18
20
Figure 4: Bi-scaling behavior.
On the other hand, source-level bursts do not contribute
to the scaling behavior in long timescales. To illustrate this
point, consider the previous two-state model, but now sup-
pose that the random state generates Pareto interarrivals
with β=1.5. Figure 4 shows the resulting energy plot. The
inﬁnite variance of the Pareto interarrivals creates scaling
at large timescales. The scaling exponent above scale 14
is estimated as α≈0.5, which is consistent with the shape
2We remind the reader that the energy E j is computed based
on the variations of the traﬃc process at scale j-1.
parameter β=1.5. The scaling behavior in short timescales,
on the other hand, is due to packet trains, and it remains
roughly the same as in the case of exponential interarrivals.
This is an example of bi-scaling behavior, i.e., diﬀerent scal-
ing exponent in short vs.
long timescales, which is often
seen in the energy plot of WAN traces [1].
4. EFFECTS OF PACKET BURSTS
In this section, we show the eﬀect of packet bursts from in-
dividual ﬂows in three diﬀerent, but related, characteristics
of aggregate IP traﬃc: scaling behavior in short timescales,
marginal distribution, and queueing performance.
Burst identiﬁcation. First, we describe how to identify
packet bursts from individual ﬂows in a trace of aggregate
traﬃc. Consider a TCP ﬂow f with source S f . A packet
trace is collected at the output of a link T in f ’s path. In
the appendix, we give a methodology for the estimation of
the pre-trace capacity ˜Cf of ﬂow f , i.e., the minimum link
capacity along the path between S f and T . A packet burst
from ﬂow f is deﬁned as a sequence of packets from f that
arrive at T with a rate that is roughly ˜Cf . It is important to
note that we cannot determine whether these packets were
sent from S f back-to-back; we can only determine whether
they arrive at T back-to-back. A source-level burst will
be detected as a packet burst at T , but not every packet
burst at T will be a source-level burst. For this reason, this
section refers to the eﬀects of packet bursts, as opposed to
source-level packet bursts, from individual ﬂows.
In practice, the rate between successive packets in a burst
may ﬂuctuate above or below ˜Cf because of cross traﬃc
queueing at links before T . So, we require the following, less
restrictive, condition: a sequence of packets Pf (i), . . . Pf (i +
j) from ﬂow f is a packet burst of length j+1, if j>0 is the
maximum positive number that satisﬁes the following two
conditions:

i+j−1
k=i Sf (k)
∆f (i, j)
>
˜Cf
a
(3)
(4)
where Sf (k) is the size of packet Pf (k), and ∆f (m, n) is the
dispersion (time distance) between the start of packets Pf (m)
and Pf (n) at T (m 1 and b>1, these conditions
require that the burst’s average rate is larger than a fraction
1/a of ˜Cf , and that the rate between successive packets in
the burst is larger than a fraction 1/b of ˜Cf .
To illustrate the frequency and length of packet bursts
in real Internet traﬃc, Figure 5 shows the CDF of burst
lengths for a trace from the OC-12 Merit link (MRA). This
graph is derived based on TCP ﬂows for which we have a
pre-trace capacity estimate (about 83% of the TCP bytes in
the trace). We show three curves for diﬀerent parameters
a and b. Note that the burst length distribution does not
depend signiﬁcantly on these two parameters; in the rest of
this paper we use a=2 and b=4. Also note that 40% of the
bytes in this trace are transferred in bursts of at least four
packets, while 10% of the bytes are in bursts of more than
twelve packets.
Burst removal. If we can identify source-level bursts, we
can also modify a trace so that we remove those bursts. We
use this technique to investigate how would the statistical
2 
8 
32 
128 
512 
2048 
8192  32768  131072 
(ms) 
Exponential OFF, α=−0.014 (10, 17)
Pareto OFF,         α=  0.47   (14, 20)
Sf (k)
∆f (k, k + 1)
>
˜Cf
b
for all k = i, . . . j − 1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
F
D
C
OC12 link: MRA-1028765523 (20:12 EST, 08/07/2002)
(a=2,    b=4)
(a=3,    b=5)
(a=1.5, b=3)
12
14
16
18
0
0
2
4
6
8
10
Burst length (packets)
Figure 5: Parameter sensitivity of burst identiﬁca-
tion algorithm.
proﬁle of the trace change, if individual ﬂows did not gen-
erate packet bursts. Such a “semi-experimental” approach
has been also followed in [9, 10].
Suppose that a burst Bf (k) of ﬂow f starts at time tf (k),