### 9.2 辅助模块剖析

让我们通过一个有趣的小例子来深入了解辅助模块的内部结构。这个例子没有包含在Metasploit的模块库中（因为它实际上与渗透测试无关），但它展示了使用Metasploit框架进行开发的高效性。它使我们能够专注于模块的功能细节，而不是处理大量重复的代码。

#### 示例：Foursquare位置发布器

克里斯·盖茨（Chris Gates）为Metasploit框架编写了一个“神奇”的辅助模块，这个模块给他的Twitter粉丝留下了深刻印象，似乎他发明了一种可以光速旅行的设备。这个模块展示了Metasploit代码重用的优势。（你可以在 [http://carnalownage.googlecode.com/](http://carnalownage.googlecode.com/) 查看该模块脚本的源代码）

首先，我们需要下载并放置这个模块到我们的辅助模块目录中，以便在Metasploit环境中使用它。然后，我们将查看实际的脚本代码，并将其分解，以了解其内容。

```bash
root@bt:/opt/framework3/msf3# cd modules/auxiliary/admin/
root@bt:/opt/framework3/msf3/modules/auxiliary/admin# wget http://carnalownage.googlecode.com/svn/trunk/msf3/modules/auxiliary/admin/random/foursquare.rb
```

##### 脚本代码解析

```ruby
require 'msf/core'

class Metasploit3 < Msf::Auxiliary
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Foursquare Location Poster',
      'Version'        => '$Revision: $',
      'Description'    => 'F*ck with Foursquare, be anywhere you want to be by venue id',
      'Author'         => ['Chris Gates'],
      'License'        => MSF_LICENSE,
      'References'     => [
        ['URL', 'http://groups.google.com/group/foursquare-api'],
        ['URL', 'http://www.mikekey.com/im-a-foursquare-cheater/']
      ]
    ))

    register_options(
      [
        OptString.new('VENUEID', [true, 'The Foursquare venue ID']),
        OptString.new('USERNAME', [true, 'The Foursquare username']),
        OptString.new('PASSWORD', [true, 'The Foursquare password'])
      ])
  end

  def run
    begin
      user_pass = Rex::Text.encode_base64(datastore['USERNAME'] + ':' + datastore['PASSWORD'])
      post_request = "vid=#{datastore['VENUEID']}"
      res = send_request_cgi({
        'uri'     => '/v1/checkin',
        'method'  => 'POST',
        'data'    => post_request,
        'headers' => {
          'Authorization' => "Basic #{user_pass}"
        }
      })

      print_status("#{res}")
    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout
      print_error("Connection error")
    rescue ::Timeout::Error, ::Errno::EPIPE => e
      print_error(e.message)
    end
  end
end
```

在这个脚本中，`run` 方法被调用后，输入参数传递到局部变量中，并定义了一些其他对象。`send_request_cgi` 方法用于连接到服务器、创建请求、发送请求并读取服务器返回的信息。如果执行过程中发生错误，会捕获异常并报告错误信息。

##### 模块运行示例

1. 查找模块：
   ```bash
   msf> search foursquare
   [*] Searching loaded modules for pattern 'foursquare'.
   Auxiliary
   Name
   Rank
   Description
   admin/foursquare
   normal
   Foursquare Location Poster
   ```

2. 使用模块：
   ```bash
   msf > use admin/foursquare
   msf auxiliary(foursquare) > info
   Name: Foursquare Location Poster
   Version: $Revision: $
   License: Metasploit Framework License (BSD)
   Rank: Normal
   Provided by:
   CG
   Basic options:
   Name
   Current Setting
   Required
   Description
   PASSWORD
   password
   yes
   Foursquare password
   Proxies
   no
   Use a proxy chain
   RHOST
   api.foursquare.com
   yes
   The target address
   RPORT
   80
   yes
   The target port
   USERNAME
   username
   yes
   Foursquare username
   VENUEID
   185675
   yes
   Foursquare venueid
   VHOST
   no
   HTTP server virtual host
   Description:
   F*ck with Foursquare, be anywhere you want to be by venue id
   References:
   http://groups.google.com/group/foursquare-api
   http://www.mikekey.com/im-a-foursquare-cheater/
   ```

3. 配置模块并运行：
   ```bash
   msf auxiliary(foursquare) > set VENUEID 2584421
   VENUEID => 2584421
   msf auxiliary(foursquare) > set USERNAME metasploit
   USERNAME => metasploit
   msf auxiliary(foursquare) > set PASSWORD ilovemetasploit
   PASSWORD => ilovemetasploit
   msf auxiliary(foursquare) > run
   [*] Base64 Encoded User/Pass: bxNmQGVsd29vZC5uZXQ6aWxvdmVtZXRhc3Bsb210
   [*] Base64 Decoded User/Pass: metasploit:ilovemetasploit
   [*] HTTP/1.1 200 OK
   Content-Type: text/xml; charset=utf-8
   Date: Sat, 08 May 2010 07:42:09 GMT
   Content-Length: 1400
   Server: nginx/0.7.64
   Connection: keep-alive
   40299544Sat,08May1007:42:09+00000K!
   We've got you @ Washington DC Union Station. This is your 1st checkin here!
   2584421WashingtonDCUnionStation79283http://foursquare.com/img/categories/travel/trainstation.png4685446Ronhttp://playfoursquare.S3.amazonaws.com/userpix_thumbs/ELoW44QHXJFB4PwZ.jpgmale1Newbiehttp://foursquare.com/img/badge/newbie.pngCongrats on your first check-in!
   message>
   ```

为了成功运行这个模块，我们需要一对合法的Foursquare用户名和密码以完成签到操作。我们首先在Google上找到一个合法的地域ID（VENUEID），然后设置好VENUEID和Foursquare网站的登录凭据等必填参数，最后运行模块。通过Foursquare网络服务返回的确认信息，我们可以看到签到已成功，并且获得了5个积分。

通过这个例子，我们可以看到Metasploit框架的强大功能，使得我们可以将注意力集中在实现目标所需的信息上，而不需要关心如何进行错误处理或管理网络连接等问题。

### 9.3 小结

如你所见，辅助模块具有广泛的用途。Metasploit框架提供的基础设施使你能够在短时间内创建多种功能各异的辅助工具。使用Metasploit的辅助模块，你可以对一个IP地址范围进行扫描，找到存活的主机，并识别出每台主机上运行的服务。然后，你可以利用这些信息来进行进一步的攻击。

虽然你可以轻松地创建自定义的辅助模块，但不要低估了Metasploit自带辅助模块的能力。这些模块的功能在实际渗透测试工作中可能正是你所需要的。

辅助模块拓宽了渗透攻击的道路与视野。对于Web应用程序来说，你可以使用辅助模块进行多达40项的检查或攻击。有些情况下，你可能希望对一个Web服务器进行暴力搜索，以确定是否存在漏洞。此外，还可以利用辅助模块发现开放代理，以便中转数据。不论你的需求是什么，辅助模块都可以为你提供更大的信息量、更多的攻击通道和安全漏洞。