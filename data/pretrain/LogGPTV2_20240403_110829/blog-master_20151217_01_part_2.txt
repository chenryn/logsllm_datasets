#### Naming convention for utility-generated data directories.  
SEG_PREFIX=gpseg  
#### Base number by which primary segment port numbers   
#### are calculated.  
PORT_BASE=40000  
#### File system location(s) where primary segment data directories   
#### will be created. The number of locations in the list dictate  
#### the number of primary segments that will get created per  
#### physical host (if multiple addresses for a host are listed in   
#### the hostfile, the number of segments will be spread evenly across  
#### the specified interface addresses).  
#### 每台主机安装几个segment，就需要几个目录  
declare -a DATA_DIRECTORY=(/data01/gpdata /data01/gpdata /data01/gpdata /data01/gpdata)  
#### OS-configured hostname or IP address of the master host.  
MASTER_HOSTNAME=digoal193096.zmf  
#### File system location where the master data directory   
#### will be created.  
MASTER_DIRECTORY=/data01/gpdata/master_pgdata  
#### Port number for the master instance.   
MASTER_PORT=1921  
#### Shell utility used to connect to remote hosts.  
TRUSTED_SHELL=ssh  
#### Maximum log file segments between automatic WAL checkpoints.  
CHECK_POINT_SEGMENTS=64  
#### Default server-side character set encoding.  
ENCODING=UTF-8  
################################################  
#### OPTIONAL MIRROR PARAMETERS  
################################################  
#### Base number by which mirror segment port numbers   
#### are calculated.  
#MIRROR_PORT_BASE=50000  
#### Base number by which primary file replication port   
#### numbers are calculated.  
#REPLICATION_PORT_BASE=41000  
#### Base number by which mirror file replication port   
#### numbers are calculated.   
#MIRROR_REPLICATION_PORT_BASE=51000  
#### File system location(s) where mirror segment data directories   
#### will be created. The number of mirror locations must equal the  
#### number of primary locations as specified in the   
#### DATA_DIRECTORY parameter.  
#declare -a MIRROR_DATA_DIRECTORY=(/data01/gpdata_mirror /data01/gpdata_mirror /data01/gpdata_mirror /data01/gpdata_mirror)  
################################################  
#### OTHER OPTIONAL PARAMETERS  
################################################  
#### Create a database of this name after initialization.  
DATABASE_NAME=digoal  
#### Specify the location of the host address file here instead of  
#### with the the -h option of gpinitsystem.  
MACHINE_LIST_FILE=/home/digoal/host  
```  
编辑主机文件，不要包含master, standby，除非master,standby节点也需要当segment node使用.  
```  
$vi /home/digoal/host  
digoal193096.zmf  
digoal199092.zmf  
digoal200164.zmf  
digoal204016.zmf  
digoal204063.zmf  
digoal209198.zmf  
```  
初始化数据库  
```  
$gpinitsystem -c ./gpinitsystem_config --locale=C --max_connections=48 --shared_buffers=1GB --su_password=digoal  
```  
加入主备节点环境变量  
```  
$vi ~/env_gp.sh  
export MASTER_DATA_DIRECTORY=/data01/gpdata/master_pgdata/gpseg-1  
export PGHOST=127.0.0.1  
export PGPORT=1921  
export PGUSER=digoal  
export PGDATABASE=digoal  
$. ~/env_gp.sh  
$psql -h 127.0.0.1 -p 1921 -U digoal digoal  
psql (8.2.15)  
Type "help" for help.  
digoal=# select version();  
                                                                       version                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------  
 PostgreSQL 8.2.15 (Greenplum Database 4.3.6.1 build 2) on x86_64-unknown-linux-gnu, compiled by GCC gcc (GCC) 4.4.2 compiled on Oct  1 2015 15:14:22  
(1 row)  
digoal=#   create table test(id int primary key, info text, crt_time timestamp) with (OIDS=false, FILLFACTOR=95) DISTRIBUTED BY (id);  
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"  
CREATE TABLE  
```  
插入4000万测试数据  
```  
digoal=# \timing  
Timing is on.  
digoal=# do language plpgsql   
$$  
digoal$# declare  
digoal$# begin  
digoal$#   for i in 1..10 loop  
digoal$#     execute 'insert into test select generate_series('||(i-1)*4000000+1||','||i*4000000||'),md5(random()::text),clock_timestamp()';  
digoal$#   end loop;  
digoal$# end;  
digoal$#   
$$  
;  
```  
gp目前不支持do语法，使用函数。  
```  
digoal=# create or replace function f_test() returns void as   
$$  
digoal$# declare  
digoal$# begin  
digoal$#   for i in 1..10 loop  
digoal$#     execute 'insert into test select generate_series('||(i-1)*4000000+1||','||i*4000000||'),md5(random()::text),clock_timestamp()';  
digoal$#   end loop;  
digoal$# end;  
digoal$#   
$$  
 language plpgsql;  
CREATE FUNCTION  
digoal=# select f_test();  
 f_test   
--------  
(1 row)  
Time: 179127.416 ms  
digoal=# select count(*) from test;  
  count     
----------  
 40000000  
(1 row)  
Time: 1119.652 ms  
```  
使用9.5 的pgbench测试greenplum oltp性能  
```  
vi test.sql  
\setrandom id 1 40000000  
update test set info=info where id=:id;  
$/home/digoal/pgsql9.5/bin/pgbench -M prepared -n -r -P 1 -f ./test.sql -c 1 -j 1 -T 1000 -h 127.0.0.1 -p 1921 -U digoal digoal  
progress: 1.0 s, 25.0 tps, lat 38.682 ms stddev 42.391  
progress: 2.0 s, 31.0 tps, lat 32.264 ms stddev 26.702  
progress: 3.0 s, 34.0 tps, lat 29.486 ms stddev 7.113  
progress: 4.0 s, 36.0 tps, lat 27.873 ms stddev 5.031  
progress: 5.0 s, 30.0 tps, lat 32.921 ms stddev 9.209  
progress: 6.0 s, 36.0 tps, lat 28.026 ms stddev 5.132  
progress: 7.0 s, 29.0 tps, lat 34.364 ms stddev 30.162  
progress: 8.0 s, 38.0 tps, lat 26.911 ms stddev 4.510  
progress: 9.0 s, 35.0 tps, lat 28.445 ms stddev 15.298  
$/home/digoal/pgsql9.5/bin/pgbench -M prepared -n -r -P 1 -f ./test.sql -c 16 -j 16 -T 1000 -h 127.0.0.1 -p 1921 -U digoal digoal  
progress: 1.0 s, 20.0 tps, lat 558.569 ms stddev 159.308  
progress: 2.0 s, 35.0 tps, lat 467.861 ms stddev 28.536  
progress: 3.0 s, 38.0 tps, lat 422.836 ms stddev 29.095  
progress: 4.0 s, 27.0 tps, lat 550.747 ms stddev 103.408  
progress: 5.0 s, 31.0 tps, lat 577.198 ms stddev 144.169  
progress: 6.0 s, 36.0 tps, lat 437.262 ms stddev 13.159  
progress: 7.0 s, 35.0 tps, lat 456.761 ms stddev 28.191  
progress: 8.0 s, 33.0 tps, lat 461.790 ms stddev 43.644  
progress: 9.0 s, 36.0 tps, lat 470.014 ms stddev 29.238  
progress: 10.0 s, 42.0 tps, lat 391.530 ms stddev 15.373  
vi test.sql  
\setrandom id 1 40000000  
select * from test where id=:id;  
```  
性能差不多。  
修改配置的方法举例  
```  
$gpconfig -c optimizer -v on  
$gpstop -u  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")