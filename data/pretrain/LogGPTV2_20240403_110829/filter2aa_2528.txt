#BHUSA @BlackHatEvents
BrokenMesh: New Attack
Surfaces of Bluetooth Mesh
Han Yan, Lewei Qu, Dongxiang Ke
Baidu AIoT Security Team
#BHUSA @BlackHatEvents
Information Classification: General
About US
Baidu AIoT Security Team
• Focus on Android / Linux platform
• Aim to discover 0day vulnerability and explore possible defenses
Members
• Han Yan
• Lewei Qu
• Dongxiang Ke
#BHUSA @BlackHatEvents
Information Classification: General
Agenda
• Introduction to Bluetooth Mesh
• Attack Surfaces Analysis
• BLE Mesh Fuzzer
• Case Study
• Summary
#BHUSA @BlackHatEvents
Information Classification: General
1 Introduction to Bluetooth Mesh
What is Bluetooth Mesh
• Aka, Bluetooth LE Mesh, BLE Mesh
• A wireless mesh networking technology based on BLE
• Made public by Bluetooth Special Interest Group (Bluetooth SIG) in 2017
Smart Home
Industrial IoT
#BHUSA @BlackHatEvents
Information Classification: General
Bluetooth Mesh vs Bluetooth Classic/LE
Key Differences
• Bluetooth Mesh is a networking technology, analogous to TCP/IP
• Bluetooth Classic/LE are wireless communication technologies
Network Layer in Protocol Stack
#BHUSA @BlackHatEvents
Information Classification: General
Network Topology
Node Type
• Node
• Relay node
• Low Power node
• Friend node
Managed Flooding
• Based on advertising
• Non-central
• Non-routing
#BHUSA @BlackHatEvents
Information Classification: General
Network Addresses
Address Type
Address Validity
Address Type
Values
Unassigned Address
16bits, 0b0000000000000000
Unicast Address
16bits, 0b0xxxxxxxxxxxxxxx
Virtual Address
16bits, 0b10xxxxxxxxxxxxxx
Group Address
16bits, 0x11xxxxxxxxxxxxxx
Address Type
Valid as SRC
Valid as DST
Unassigned Address
No
No
Unicast Address
Yes
Yes
Virtual Address
No
Yes
Group Address
No
Yes
#BHUSA @BlackHatEvents
Information Classification: General
Message-Oriented Communication
Publish
• Sending message
• Publish to a unicast / group / virtual address
Subscribe
• Receiving message
• Subscribe to a group / virtual address
Example
• Some lights subscribe to the group address “Kitchen” (e.g., 0xC001)
• Switch can publish “ON” message to “Kitchen”, to turn on those lights
#BHUSA @BlackHatEvents
Information Classification: General
2 Attack Surfaces Analysis
Research Scope
• Bluetooth mesh protocol, including two key stages
• Bluetooth mesh wrapper application
Research Focus
• Focus on software implementation vulnerabilities
1
2
3
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Protocol
Concepts
• Provisioning
• Provisioner
• Unprovisioned device
Procedure
• Beaconing
• Invitation & Capabilities
• Public Key Exchange
• Authentication
• Distribution of Provisioning Data
Wireshark
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Protocol
Protocol Stack
• All the provisioning messages follow this format
• Different messages have different data
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Attack Surfaces
When to Attack
• Before authentication
• No extra information required
What to Attack
• Segmentation and Reassembly
• General mechanism, memory operation
How to Attack
• Mismatched 𝑆𝑒𝑔𝑁 and 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ
• …
#BHUSA @BlackHatEvents
Information Classification: General
Bad Unprovisioned Device
Bad Provisioner
Network Build Attack Surfaces
Threat Model
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Protocol
Protocol Stack
• Layered Architecture
Wireshark
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Protocol
Security Features
• 𝑁𝑒𝑡𝐾𝑒𝑦
• 𝐴𝑝𝑝𝐾𝑒𝑦
If We Have..
• No keys, we can only know 𝐼𝑉𝐼, 𝑁𝐼𝐷 and 𝑁𝑒𝑡𝑀𝐼𝐶
• 𝑁𝑒𝑡𝐾𝑒𝑦, we can parse network & lower transport layer
• 𝑁𝑒𝑡𝐾𝑒𝑦 and 𝐴𝑝𝑝𝐾𝑒𝑦, we can parse the whole message
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Attack Surfaces
What to Attack
• Segmentation and Reassembly
• General mechanism
• Memory operation
• Only 𝑁𝑒𝑡𝐾𝑒𝑦 is required
How to Attack
• Inconsistent 𝑆𝑒𝑔𝑁
• 𝑆𝑒𝑔𝑂 > 𝑆𝑒𝑔𝑁
• …
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Attack Surfaces
Threat Model
#BHUSA @BlackHatEvents
Information Classification: General
Wrapper Application Attack Surfaces
Mesh in BlueDroid
• Android version ≥ 8.0
• Mesh capabilities are wrapped as AIDL service
What to Attack
• Permission restriction of AIDL service
• Memory operation in JNI & HAL layer
How to Attack
• Try unauthorized access to service
• Call service with malformed parameters
#BHUSA @BlackHatEvents
Information Classification: General
3 BLE Mesh Fuzzer
Overview
• “BLE Mesh Fuzzer”, a fuzzing tool for Bluetooth Mesh protocol
• Fuzzing both network build and network control stages
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Fuzzing
Test Case Generation
• Generate a series of segmented packets at once
• 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃!"#, 𝑃!$#
%
, … , 𝑃!$#
& }
Sender / Receiver
• Build link, then send test case
• Wait for 𝐿𝑖𝑛𝑘 𝐶𝑙𝑜𝑠𝑒
Crash Detection
• “No 𝐿𝑖𝑛𝑘 𝐶𝑙𝑜𝑠𝑒” means crash
• A timer for each test case
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Fuzzing
Work Flow
Trigger Vulnerability
Not Trigger
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Fuzzing
Generation Strategy
• 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃!"#, 𝑃!$#
%
, 𝑃!$#
'
, … , 𝑃!$#
& }
• Randomize packets count 𝑁 + 1
• Randomize 𝑆𝑒𝑔𝑁, 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ, and 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ of Transaction Start PDU
• Randomize 𝑆𝑒𝑔𝑂 and 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ of Transaction Continue PDUs
System Output
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Fuzzing
Test Case Generation
• Generate a series of segmented packets at once
• 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃%, 𝑃', 𝑃(, … , 𝑃&}
Sender / Receiver
• Send both test case and probe
• Probe is a valid SAR packet
• Wait for prob 𝐴𝐶𝐾𝑠
Crash Detection
• Missing probe 𝐴𝐶𝐾 means crash
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Fuzzing
Work Flow
Trigger Vulnerability
Not Trigger
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Fuzzing
Generate Strategy
• 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃%, 𝑃', 𝑃(, … , 𝑃&}
• Randomize packets count 𝑁
• Randomize 𝑆𝑒𝑔𝑁, 𝑆𝑒𝑔𝑂, 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ and 𝐶𝑇𝐿
System Output
#BHUSA @BlackHatEvents
Information Classification: General
System Implementation
Hardware
• nRF52840 module + MacBook
Software
• SweynTooth Driver, customize BLE via Python
• Implemented protocol stack, based on Mesh spec
#BHUSA @BlackHatEvents
Information Classification: General
4 Case Study
Vulnerabilities (up to 2022.07.24)
• A total of 17 issues were found
• Covered 8 well-known vendors
• Obtained 13 CVEs
All the listed CVEs have been fixed by vendors
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Vulnerability
CVE-2022-24893
• Out-of-bound Write in network build stage
• Mismatched 𝑆𝑒𝑔𝑁 and 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ
#BHUSA @BlackHatEvents
Information Classification: General
Network Build Vulnerability
CVE-2022-24893 POC
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Vulnerability
CVE-2022-26527
• Out-of-bound Write in network control stage
• Inconsistent 𝑆𝑒𝑔𝑁
#BHUSA @BlackHatEvents
Information Classification: General
Network Control Vulnerability
CVE-2022-26527 POC
Hijack PC and R0
#BHUSA @BlackHatEvents
Information Classification: General
Wrapper Application Vulnerability
CVE-2022-20041
• Bluetooth Mesh Service permission leak
• Treat all foreground applications as permitted caller
#BHUSA @BlackHatEvents
Information Classification: General
Wrapper Application Vulnerability
CVE-2022-20027
• Stack overflow in Bluetooth Mesh JNI
• 𝑚𝑒𝑚𝑐𝑝𝑦 with no length check
#BHUSA @BlackHatEvents
Information Classification: General
5 Summary
Conclusion
• Memory corruption vulnerabilities are very likely to occur in SAR implementation
• Security of wrapper application, especially permission and native, also needs attention
• All the listed CVEs have been fixed by vendors
Future Work
• Feedback-driven fuzzing strategy
• Vulnerability mining at upper layers
• Attack surfaces exploration of GATT proxy protocol
#BHUSA @BlackHatEvents
Information Classification: General
Q&A
#BHUSA @BlackHatEvents
Information Classification: General
Thanks For Listening !