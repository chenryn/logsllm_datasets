#BHUSA @BlackHatEvents
### BrokenMesh: New Attack Surfaces of Bluetooth Mesh

**Presenters:**
- Han Yan
- Lewei Qu
- Dongxiang Ke
- Baidu AIoT Security Team

**Information Classification: General**

---

### About Us
**Baidu AIoT Security Team:**
- **Focus:** Android / Linux platform
- **Aim:** Discover 0-day vulnerabilities and explore possible defenses
- **Members:**
  - Han Yan
  - Lewei Qu
  - Dongxiang Ke

**Information Classification: General**

---

### Agenda
1. Introduction to Bluetooth Mesh
2. Attack Surfaces Analysis
3. BLE Mesh Fuzzer
4. Case Study
5. Summary
6. Q&A

**Information Classification: General**

---

### 1. Introduction to Bluetooth Mesh

#### What is Bluetooth Mesh?
- **Also Known As:** Bluetooth LE Mesh, BLE Mesh
- **Description:** A wireless mesh networking technology based on Bluetooth Low Energy (BLE)
- **Release:** Made public by the Bluetooth Special Interest Group (Bluetooth SIG) in 2017
- **Applications:**
  - Smart Home
  - Industrial IoT

#### Bluetooth Mesh vs. Bluetooth Classic/LE
- **Key Differences:**
  - **Bluetooth Mesh:** A networking technology, analogous to TCP/IP
  - **Bluetooth Classic/LE:** Wireless communication technologies
- **Network Layer in Protocol Stack:**

#### Network Topology
- **Node Types:**
  - Node
  - Relay node
  - Low Power node
  - Friend node
- **Managed Flooding:**
  - Based on advertising
  - Non-central
  - Non-routing

#### Network Addresses
- **Address Types:**
  - Unassigned Address: 16 bits, 0b0000000000000000
  - Unicast Address: 16 bits, 0b0xxxxxxxxxxxxxxx
  - Virtual Address: 16 bits, 0b10xxxxxxxxxxxxxx
  - Group Address: 16 bits, 0x11xxxxxxxxxxxxxx

- **Address Validity:**
  - Unassigned Address: Not valid as SRC or DST
  - Unicast Address: Valid as SRC and DST
  - Virtual Address: Not valid as SRC, valid as DST
  - Group Address: Not valid as SRC, valid as DST

#### Message-Oriented Communication
- **Publish:**
  - Sending a message
  - Publish to a unicast, group, or virtual address
- **Subscribe:**
  - Receiving a message
  - Subscribe to a group or virtual address
- **Example:**
  - Some lights subscribe to the group address “Kitchen” (e.g., 0xC001)
  - A switch can publish an “ON” message to “Kitchen”, turning on those lights

**Information Classification: General**

---

### 2. Attack Surfaces Analysis

#### Research Scope
- **Bluetooth Mesh Protocol:**
  - Two key stages
- **Bluetooth Mesh Wrapper Application:**

#### Research Focus
- **Software Implementation Vulnerabilities:**

#### Network Build Protocol
- **Concepts:**
  - Provisioning
  - Provisioner
  - Unprovisioned device
- **Procedure:**
  - Beaconing
  - Invitation & Capabilities
  - Public Key Exchange
  - Authentication
  - Distribution of Provisioning Data

- **Protocol Stack:**
  - All provisioning messages follow this format
  - Different messages have different data

#### Network Build Attack Surfaces
- **When to Attack:**
  - Before authentication
  - No extra information required
- **What to Attack:**
  - Segmentation and Reassembly
  - General mechanism, memory operation
- **How to Attack:**
  - Mismatched 𝑆𝑒𝑔𝑁 and 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ
  - ...

- **Threat Model:**
  - Bad Unprovisioned Device
  - Bad Provisioner

#### Network Control Protocol
- **Protocol Stack:**
  - Layered Architecture

- **Security Features:**
  - 𝑁𝑒𝑡𝐾𝑒𝑦
  - 𝐴𝑝𝑝𝐾𝑒𝑦
  - If We Have:
    - No keys: Only know 𝐼𝑉𝐼, 𝑁𝐼𝐷, and 𝑁𝑒𝑡𝑀𝐼𝐶
    - 𝑁𝑒𝑡𝐾𝑒𝑦: Parse network & lower transport layer
    - 𝑁𝑒𝑡𝐾𝑒𝑦 and 𝐴𝑝𝑝𝐾𝑒𝑦: Parse the whole message

#### Network Control Attack Surfaces
- **What to Attack:**
  - Segmentation and Reassembly
  - General mechanism
  - Memory operation
  - Only 𝑁𝑒𝑡𝐾𝑒𝑦 is required
- **How to Attack:**
  - Inconsistent 𝑆𝑒𝑔𝑁
  - 𝑆𝑒𝑔𝑂 > 𝑆𝑒𝑔𝑁
  - ...

- **Threat Model:**

#### Wrapper Application Attack Surfaces
- **Mesh in BlueDroid:**
  - Android version ≥ 8.0
  - Mesh capabilities are wrapped as AIDL service
- **What to Attack:**
  - Permission restriction of AIDL service
  - Memory operation in JNI & HAL layer
- **How to Attack:**
  - Try unauthorized access to service
  - Call service with malformed parameters

**Information Classification: General**

---

### 3. BLE Mesh Fuzzer

#### Overview
- **“BLE Mesh Fuzzer”:** A fuzzing tool for the Bluetooth Mesh protocol
- **Fuzzing Stages:**
  - Network build
  - Network control

#### Network Build Fuzzing
- **Test Case Generation:**
  - Generate a series of segmented packets at once
  - 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃!"#, 𝑃!$#
%
, … , 𝑃!$#
& }
- **Sender / Receiver:**
  - Build link, then send test case
  - Wait for 𝐿𝑖𝑛𝑘 𝐶𝑙𝑜𝑠𝑒
- **Crash Detection:**
  - “No 𝐿𝑖𝑛𝑘 𝐶𝑙𝑜𝑠𝑒” means crash
  - A timer for each test case

- **Work Flow:**
  - Trigger Vulnerability
  - Not Trigger

- **Generation Strategy:**
  - 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃!"#, 𝑃!$#
%
, 𝑃!$#
'
, … , 𝑃!$#
& }
  - Randomize packets count 𝑁 + 1
  - Randomize 𝑆𝑒𝑔𝑁, 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ, and 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ of Transaction Start PDU
  - Randomize 𝑆𝑒𝑔𝑂 and 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ of Transaction Continue PDUs

- **System Output:**

#### Network Control Fuzzing
- **Test Case Generation:**
  - Generate a series of segmented packets at once
  - 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃%, 𝑃', 𝑃(, … , 𝑃&}
- **Sender / Receiver:**
  - Send both test case and probe
  - Probe is a valid SAR packet
  - Wait for probe 𝐴𝐶𝐾𝑠
- **Crash Detection:**
  - Missing probe 𝐴𝐶𝐾 means crash

- **Work Flow:**
  - Trigger Vulnerability
  - Not Trigger

- **Generate Strategy:**
  - 𝑇𝑒𝑠𝑡𝐶𝑎𝑠𝑒 = {𝑃%, 𝑃', 𝑃(, … , 𝑃&}
  - Randomize packets count 𝑁
  - Randomize 𝑆𝑒𝑔𝑁, 𝑆𝑒𝑔𝑂, 𝐷𝑎𝑡𝑎 𝐿𝑒𝑛𝑔𝑡ℎ, and 𝐶𝑇𝐿

- **System Output:**

#### System Implementation
- **Hardware:**
  - nRF52840 module + MacBook
- **Software:**
  - SweynTooth Driver, customize BLE via Python
  - Implemented protocol stack, based on Mesh spec

**Information Classification: General**

---

### 4. Case Study

#### Vulnerabilities (up to 2022.07.24)
- **Total Issues Found:** 17
- **Vendors Covered:** 8 well-known vendors
- **CVEs Obtained:** 13
- **Status:** All listed CVEs have been fixed by vendors

#### Network Build Vulnerability
- **CVE-2022-24893:**
  - **Description:** Out-of-bound Write in network build stage
  - **Cause:** Mismatched 𝑆𝑒𝑔𝑁 and 𝑇𝑜𝑡𝑎𝑙𝐿𝑒𝑛𝑔𝑡ℎ

- **POC:**

#### Network Control Vulnerability
- **CVE-2022-26527:**
  - **Description:** Out-of-bound Write in network control stage
  - **Cause:** Inconsistent 𝑆𝑒𝑔𝑁

- **POC:**
  - Hijack PC and R0

#### Wrapper Application Vulnerability
- **CVE-2022-20041:**
  - **Description:** Bluetooth Mesh Service permission leak
  - **Cause:** Treat all foreground applications as permitted caller

- **CVE-2022-20027:**
  - **Description:** Stack overflow in Bluetooth Mesh JNI
  - **Cause:** 𝑚𝑒𝑚𝑐𝑝𝑦 with no length check

**Information Classification: General**

---

### 5. Summary

#### Conclusion
- **Memory Corruption Vulnerabilities:**
  - Very likely to occur in SAR implementation
- **Wrapper Application Security:**
  - Requires attention, especially for permission and native code
- **Vendor Response:**
  - All listed CVEs have been fixed by vendors

#### Future Work
- **Feedback-Driven Fuzzing Strategy:**
- **Vulnerability Mining:**
  - Upper layers
- **Attack Surfaces Exploration:**
  - GATT proxy protocol

**Information Classification: General**

---

### Q&A

**Information Classification: General**

---

**Thanks For Listening!**