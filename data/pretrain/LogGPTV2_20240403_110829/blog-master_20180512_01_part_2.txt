### 目标端  
1、创建临时表  
```  
create table tbl_dst_tmp (  
  id int primary key,   
  info text not null,   
  mod_time timestamp not null default clock_timestamp()  
);  
```  
2、创建数据同步的脚本  
```  
vi imp.sh  
#!/bin/bash  
# 1. HDB PG, 获取max(mod_time)   
MOD_TIME=`PGPASSWORD="pwd1234" psql -h 127.0.0.1 -p 4000 -U postgres postgres -q -t -A -c "select coalesce(max(mod_time),'4714-11-24 00:00:00 BC'::timestamp) from tbl_dst"`  
# 2. PG, 拉取增量  
# 3. 增量数据，导入HDB PG 临时表  
# 使用 linux 管道同步上下游  
PGPASSWORD="pwd" psql -h 10.31.124.69 -p 4000 -U postgres postgres -c "copy (select * from tbl_src where mod_time > '$MOD_TIME'::timestamp and mod_time  HDB PG，无法封装到LINUX SHELL中，可能需要ETL程序介入。流程大致如下）  
```
# 1. HDB PG, 获取max(mod_time)   
MOD_TIME=`PGPASSWORD="pwd1234" psql -h 127.0.0.1 -p 4000 -U postgres postgres -q -t -A -c "select coalesce(max(mod_time),(-9223372036854775808)::int8) from tbl_dst"`  
# 2. MS SQL, 拉取增量  
select id, info, convert(bigint, mod_time) from tbl_src where convert(bigint,mod_time) > $MOD_TIME;
# 3. 增量数据，导入HDB PG 临时表  
insert into tbl_dst_tmp ...从步骤2来的数据...;
## 可能的话，还是用COPY更快，"copy tbl_dst_tmp from stdin"  
# 4. HDB PG ，DELETE from 目标表 using 临时表   
# 5. HDB PG ，insert into 目标表 select * from 临时表   
# 6. 清空临时表   
# 放在一个事务中，并且对临时表加锁保护。  
PGPASSWORD="pwd1234" psql -h 127.0.0.1 -p 4000 -U postgres postgres  v1 and convert(bigint, mod_time) <= v2; 
```
或者你还可以试试其他ETL软件：   
http://www.symmetricds.org/about/overview  
https://github.com/pivotalguru/outsourcer  专业的sql server,oracle同步到greenplum的软件  
商业软件：  
https://dbconvert.com/mssql/postgresql/  
https://www.convert-in.com/mss2pgs.htm#  
xDB  
https://www.enterprisedb.com/docs/en/6.2/repguide/EDB_Postgres_Replication_Server_Users_Guide.1.10.html#pID0E0HSK0HA  
### FDW外部访问接口方法
https://github.com/tds-fdw/tds_fdw  
[《MySQL,Oracle,SQL Server等准实时同步到PostgreSQL的方案之一 - FDW外部访问接口》](../201710/20171027_01.md)    
## 小结  
使用本文提供的方法，可以实现异构数据的批量同步，可以将脚本整合到一些ETL工具中，例如KETTLE，例如阿里云的DATAX (dataworks)。    
性能如下：  
1、源端insert\update\delete性能，单表 约 13.8万行/s。      
2、同步性能，单表 约 5万行/s。     
## 参考  
http://www.cnblogs.com/gaizai/p/3483393.html  
http://www.cnblogs.com/iampkm/p/4082916.html  
http://www.cnblogs.com/windows/articles/2149701.html  
https://blog.csdn.net/huigezi123/article/details/5849024  
https://github.com/tds-fdw/tds_fdw  
[《debezium - 数据实时捕获和传输管道(CDC)》](../201710/20171026_01.md)    
[《ETL for Oracle to Greenplum (bulk) - Pentaho Data Integrator (PDI, kettle)》](../201805/20180505_04.md)    
[《ETL for Oracle to PostgreSQL 3 - DATAX》](../201805/20180505_03.md)    
[《ETL for Oracle to PostgreSQL 2 - Pentaho Data Integrator (PDI, kettle)》](../201805/20180505_02.md)    
[《ETL for Oracle to PostgreSQL 1 - Oracle Data Integrator (ODI)》](../201805/20180505_01.md)    
[《MySQL准实时同步到PostgreSQL, Greenplum的方案之一 - rds_dbsync》](../201710/20171027_02.md)    
[《MySQL,Oracle,SQL Server等准实时同步到PostgreSQL的方案之一 - FDW外部访问接口》](../201710/20171027_01.md)    
[《[未完待续] MySQL Oracle PostgreSQL PPAS Greenplum 的异构迁移和同步实现和场景介绍》](../201710/20171016_01.md)    
[《MySQL 增量同步到 PostgreSQL》](../201610/20161020_01.md)    
[《使用Londiste3 增量同步 线下PostgreSQL 到 阿里云RDS PG》](../201605/20160525_01.md)    
[《使用alidecode将RDS PG同步到线下, 或者将MySQL同步到PG》](../201605/20160525_03.md)    
[《PostgreSQL 分区表的逻辑复制（逻辑订阅）》](../201804/20180420_02.md)    
[《PostgreSQL 逻辑订阅 - DDL 订阅 实现方法》](../201712/20171204_04.md)    
[《Greenplum, PostgreSQL 数据实时订阅的几种方式》](../201710/20171018_04.md)    
[《使用PostgreSQL逻辑订阅实现multi-master》](../201706/20170624_01.md)    
[《PostgreSQL 逻辑订阅 - 给业务架构带来了什么希望？》](../201704/20170413_01.md)    
[《PostgreSQL 10.0 preview 逻辑订阅 - 原理与最佳实践》](../201702/20170227_01.md)    
[《GoldenGate - Oracle 实时复制到 PostgreSQL或EnterpriseDB》](../201604/20160401_02.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")