### Chapter 14: Programming the Semantic Web
**Author:** Jorge Cardoso  
**Affiliation:** Department of Mathematics and Engineering, University of Madeira, 9000-390, Funchal, Portugal – PI: [EMAIL]

#### 1. Introduction
Many researchers predict that a new Web will emerge in the coming years, driven by ongoing research and developments in the semantic Web. However, the industry and its key players are adopting a "wait-and-see" approach to evaluate the real-world benefits of semantic Web technologies (Cardoso, Miller et al., 2005). The success of the semantic Web vision (Berners-Lee, Hendler et al., 2001) hinges on the development of practical and useful applications based on these technologies.

While the semantic Web has achieved considerable technological stability with the development of languages for knowledge representation (e.g., OWL), querying knowledge bases (e.g., RQL and RDQL), and describing business rules (e.g., SWRL), the industry remains skeptical about its potential. For the semantic Web to gain widespread acceptance, it is essential to develop and validate real-world applications that demonstrate its full potential (Lassila and McGuinness, 2001). The success of the semantic Web depends on its ability to support applications in commercial settings (Cardoso, Miller et al., 2005).

#### 2. Semantic Web Services, Processes, and Applications
Semantic Web technologies have been successfully implemented in various fields, including semantic Web services (OWL-S, 2004), tourism information systems (Cardoso, 2004), semantic digital libraries (Shum, Motta et al., 2000), semantic Grid (Roure, Jennings et al., 2001), semantic Web search (Swoogle, 2005), and bioinformatics (Kumar and Smith, 2004). To further the development of semantic Web systems and solutions, this chapter will demonstrate how to build semantic Web applications using the Jena framework.

#### 3. The Semantic Web Stack
The semantic Web encompasses a set of technologies, tools, and standards that form the foundational infrastructure for a Web with meaning. The architecture of the semantic Web is organized into a series of layers, often depicted in a diagram first proposed by Tim Berners-Lee (Berners-Lee, Hendler et al., 2001). Figure 14-1 illustrates the different components of the semantic Web architecture, starting from the foundation of URIs and Unicode, through XML, RDF, RDFS, and ontology languages, up to the logic, proof, and trust layers.

![Figure 14-1. Semantic Web stack (Berners-Lee, Hendler et al., 2001)](figure_14-1.png)

**Key Layers:**
- **URI and Unicode:** A Universal Resource Identifier (URI) uniquely identifies resources, while Unicode provides a unique number for every character, independent of the platform.
- **XML:** XML standardizes data formats but lacks semantic interoperability.
- **RDF:** The Resource Description Framework (RDF) uses XML to define and use metadata, providing a model for describing and creating relationships between resources.
- **RDF Schema (RDFS):** RDFS provides a type system for RDF, allowing the definition of classes, properties, and values.
- **Ontologies:** Ontologies provide a well-defined vocabulary for specifying the semantics of terminology systems, enabling better communication and interoperability.
- **Logic, Proof, and Trust:** These layers aim to provide features similar to First Order Logic, allowing for reasoning and inference, and ensuring the trustworthiness of data and services.

#### 4. Semantic Web Development Environments
Several frameworks support OWL ontologies, including the Jena framework, Protégé-OWL API, and the WonderWeb OWL API, all available for Java. These open-source APIs allow for in-depth study and integration into new projects.

- **Jena:** Developed by HP Labs, Jena provides a programmatic environment for RDF, RDFS, and OWL, including a rule-based inference engine and a query language (RDQL). The Jena 2 Ontology API supports DAML, DAML+OIL, and OWL, though OWL is recommended for future compatibility.
- **Protégé:** An open-source platform from Stanford Medical Informatics, Protégé-OWL API extends the core system to support OWL ontologies and graphical user interfaces.
- **WonderWeb OWL API:** This API provides programmatic services for manipulating OWL ontologies and supports reasoners like Pellet. While still in development, it has been used in projects such as Swoop and Smore.

#### 5. Our Running Ontology
Our recent work involves the development of a Semantic Course Management System (S-CMS) as part of the Strawberry project. Traditional CMSs like Blackboard and WebCT focus on distance education, offering functionalities such as class project management, student registration, and online discussions.

The S-CMS aims to automate the procedures involved in student enrollment and project registration. Managing large courses is complex due to factors like the number of students, registration rules, and student backgrounds. The development of the S-CMS starts with the creation of an ontology schema, specifically the University ontology, which defines the classes, attributes, and relationships modeling a university domain. Figures 14-2 and 14-3 illustrate the class hierarchy and properties using the OWL Viz Protégé plug-in.

![Figure 14-2. Class hierarchy](figure_14-2.png)
![Figure 14-3. Classes and properties](figure_14-3.png)

#### 6. Using Jena
Jena is a framework for building semantic Web applications, providing a programmatic environment for RDF, RDFS, and OWL, along with a rule-based inference engine. Developed by HP Labs, Jena is open source and has received significant investment since 2000, contributing to the development of semantic Web standards.

In the following sections, we will delve into the practical aspects of using Jena to develop and manipulate semantic Web applications, focusing on the University ontology.

---

This revised version enhances the clarity, coherence, and professionalism of the original text, making it more accessible and informative for readers.