e 
Na
me
R
es
id
e
nt
?
Description
V
ol
u
m
e 
in
f
o
r
m
at
io
n
$V
OL
UM
E_I
NF
OR
MA
TIO
N, 
$V
OL
UM
E_
A
l
w
a
ys
,
A
l
w
a
ys
These attributes are present only in the $Volume 
metadata file. They store volume version and label 
information.
NA
ME
S
ta
n
d
ar
d 
in
f
o
r
m
at
io
n
$ST
AN
DA
RD
_IN
FO
RM
ATI
ON
A
l
w
a
ys
File attributes such as read-only, archive, and so on; 
time stamps, including when the file was created or last 
modified.
F
il
e 
n
a
m
e
$FI
LE_
NA
ME
M
a
y
b
e
The file’s name in Unicode 1.0 characters. A file can 
have multiple file name attributes, as it does when a 
hard link to a file exists or when a file with a long name 
has an automatically generated short name for access 
by MS-DOS and 16-bit Windows applications.
S
e
c
u
ri
ty 
d
e
s
cr
$SE
CU
RIT
Y_
DE
SC
RIP
TO
R
M
a
y
b
e
This attribute is present for backward compatibility 
with previous versions of NTFS and is rarely used in 
the current version of NTFS (3.1). NTFS stores almost 
all security descriptors in the $Secure metadata file, 
sharing descriptors among files and directories that 
have the same settings. Previous versions of NTFS 
stored private security descriptor information with each 
file and directory. Some files still include a 
$SECURITY_DESCRIPTOR attribute, such as $Boot.
ip
to
r
D
at
a
$D
AT
A
M
a
y
b
e
The contents of the file. In NTFS, a file has one default 
unnamed data attribute and can have additional named 
data attributes—that is, a file can have multiple data 
streams. A directory has no default data attribute but 
can have optional named data attributes.
Named data streams can be used even for particular 
system purposes. For example, the Storage Reserve 
Area Table (SRAT) stream ($SRAT) is used by the 
Storage Service for creating Space reservations on a 
volume. This attribute is applied only on the $Bitmap 
metadata file. Storage Reserves are described later in 
this chapter.
I
n
d
e
x 
r
o
ot
, 
in
d
e
x 
al
lo
c
at
io
$IN
DE
X_
RO
OT,
$IN
DE
X_
AL
LO
CA
TIO
N,
A
l
w
a
ys
,
N
e
v
er
Three attributes used to implement B-tree data 
structures used by directories, security, quota, and other 
metadata files.
n
A
tt
ri
b
ut
e 
li
st
$A
TT
RIB
UT
E_L
IST
M
a
y
b
e
A list of the attributes that make up the file and the file 
record number of the MFT entry where each attribute is 
located. This attribute is present when a file requires 
more than one MFT file record.
I
n
d
e
x 
B
it
m
a
p
$BI
TM
AP
M
a
y
b
e
This attribute is used for different purposes: for 
nonresident directories (where an $INDEX_ 
ALLOCATION always exists), the bitmap records 
which 4 KB-sized index blocks are already in use by 
the B-tree, and which are free for future use as B-tree 
grows; In the MFT there is an unnamed “$Bitmap” 
attribute that tracks which MFT segments are in use, 
and which are free for future use by new files or by 
existing files that require more space.
O
bj
e
ct 
I
D
$O
BJE
CT
_ID
A
l
w
a
ys
A 16-byte identifier (GUID) for a file or directory. The 
link-tracking service assigns object IDs to shell shortcut 
and OLE link source files. NTFS provides APIs so that 
files and directories can be opened with their object ID 
rather than their file name.
R
e
p
ar
s
e 
in
$R
EP
AR
SE_
POI
NT
M
a
y
b
e
This attribute stores a file’s reparse point data. NTFS 
junctions and mount points include this attribute.
f
o
r
m
at
io
n
E
xt
e
n
d
e
d 
at
tr
ib
ut
e
s
$E
A, 
$E
A_I
NF
OR
MA
TIO
N
M
a
y
b
e,
A
l
w
a
ys
Extended attributes are name/value pairs and aren’t 
normally used but are provided for backward 
compatibility with OS/2 applications.
L
o
g
g
e
d 
ut
il
it
y 
st
re
a
m
$L
OG
GE
D_
UTI
LIT
Y_
ST