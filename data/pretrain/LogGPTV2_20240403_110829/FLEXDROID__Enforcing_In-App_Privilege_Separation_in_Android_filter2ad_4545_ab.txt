### Characteristics of Third-Party Libraries in Android Applications

**Table I: Characteristics of Third-Party Libraries**

| Category | Name         | W | X | Y | Z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z |
|----------|--------------|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|
| Social   | Facebook     | O | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Analytics| Flurry       | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| RevMob    | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Chartboost | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| InMobi      | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Billing  | PayPal       | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Analytics| Umeng        | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Notification| Pushwoosh | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Tapjoy      | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| AppFlood   | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Social   | OpenFeint    | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Airpush    | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Youmi      | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Cauly      | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Social   | Socialize    | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Domob      | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| Leadbolt   | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |
| Advertising| MobFox     | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × | × |

**Legend:**
- **O**: Required permission
- **×**: Undocumented permission
- **(cid:52)**: Optional permission

**Columns 3-14** show the permissions potentially used by apps. The rest of the columns are related to runtime behavior and dependency with host apps.

### Security Threats from Third-Party Libraries

#### 1. Lack of In-App Privilege Separation
Due to the lack of in-app privilege separation, third-party libraries can access private resources even without the corresponding permissions being documented. If a library dynamically checks for permissions or catches security exceptions, it can abuse these permissions without user notice.

#### 2. Contaminated Libraries
Even if an original library is legitimate, an adversary can rewrite its binary or source code and redistribute it. If an app uses such a contaminated library, users who install the app are at risk of severe privacy leaks and monetary damages. For example, in 2013, a malware called Uten.A was repackaged and distributed as the Umeng SDK, a mobile analytics platform. This affected many legitimate gaming apps available on Google Play, leading to devices being silently subscribed to premium-rate SMS services, causing financial loss to users.

#### 3. Vulnerable Libraries
Third-party libraries may execute classes or JavaScript code downloaded from the internet at runtime. If the device is connected to an unsafe network and the library does not encrypt the code, an attacker can replace it with malicious code. This can exploit the host app’s permissions to leak personal information. For instance, a malicious advertisement written in JavaScript can read the device's IMEI code if the ad library exposes the `getDeviceId` method to JavaScript using `addJavascriptInterface`.

### Real-World Findings

To understand the prevalence of these threats, we investigated the characteristics of third-party libraries in Android applications. Here are our key findings:

1. **Undocumented Permissions**: 17 out of 20 popular third-party libraries use undocumented permissions.
2. **Dynamic Code Execution**: 72% of 295 third-party libraries rely on dynamic code execution.
3. **JNI Usage**: 17% of 295 third-party libraries use JNI (Java Native Interface).

### Methodologies

We randomly collected 100,000 Android apps from the Playdrone dataset, an archive of APK files from the Google Play Store. We dissected each APK file using `apktool`, which translates the `.dex` code into `.smali` code. Our analysis focused on the following characteristics relevant to our threat model:

#### Permissions Exploited by Third-Party Libraries
We chose 16 different Android permissions that allow third-party libraries to access sensitive information such as device ID, SMS, contacts, and location. We extended the findings from PScout, which provides mappings between Android native APIs, content provider URIs, and permissions. We also manually examined the required permissions from the developer’s guide and the exploited permissions that could be used covertly when embedded in an app.

#### Dynamic Code Execution
As mentioned earlier, third-party libraries often use dynamic features of the Java programming language, including runtime class loading, Java reflection, and multi-threading. We built code-level signatures for these techniques and applied them to the smali code of the apps.

#### Interaction Between Library and Host Application
Third-party libraries interact with their host apps in various ways, making it challenging to analyze and disambiguate boundaries. These interactions include callbacks, class inheritance, and JNI. To examine these use cases, we checked whether the host app inherits classes provided by third-party libraries, uses callback methods, and embeds JNI.

Unlike previous studies focusing on specific third-party libraries (e.g., ad libraries), our investigation includes social, billing, analytics, and more. Additionally, our study covers dynamic execution patterns used by third-party libraries, which is a primary motivation for our work.

### Summary of Results

Table I summarizes the results for third-party libraries used in 100,000 Android apps. We extracted the top 20 popular libraries that use at least one of the 16 permissions mentioned above. We found that some libraries attempt to use permissions not documented in their developer’s guide. For example, ad libraries like RevMob, Airpush, and Leadbolt potentially utilize the `GET_ACCOUNTS` permission, allowing them to obtain a user’s online account information.

Furthermore, most libraries use dynamic execution paths with dynamic class loading, Java reflection, and Java threads. All 20 listed libraries use at least one technique, and 16 libraries utilize all three. Host apps and third-party libraries have strong dependencies, with most ad libraries needing the host app’s context to show and manipulate advertisements. Some libraries, like Parse and Chartboost, recommend inheriting provided classes for simpler integration.