Question: When using the Baggy Bounds technique for memory safety, which of the following scenarios might still allow a buffer overflow to occur or might cause Baggy Bounds to panic, even though the C code is compliant with its specifications?
"A": "When a pointer arithmetic operation results in a pointer pointing to a location within an allocated array but beyond the intended bounds of a subarray.",
"B": "When a pointer is cast to an integer for comparison purposes, and the OOB bit affects the result of the comparison.",
"C": "When a developer dereferences a pointer that has been correctly reassigned to point to the middle of an allocated object without changing the OOB bit.",
"D": "When a pointer arithmetic operation results in a pointer that points exactly slot_size/2 bytes away from the boundary of its original object."
Answer: AB