### Bug Report: Incorrect Type Handling with `set_fact` and Jinja2 Filters

#### Issue Type:
Bug Report

#### Ansible Version:
ansible 1.4.5

#### Environment:
- Operating System: Debian 6.0.8

#### Summary:
When creating a variable inside a task using `set_fact` and applying the `|int` filter, the result passed to Jinja2 templates is still treated as a string. This leads to unexpected behavior in mathematical operations within the templates.

#### Steps to Reproduce:
1. **Clone the Repository:**
   ```sh
   git clone https://github.com/rafaltrojniak/ansible-jinja-casting
   cd ansible-jinja-casting
   ```

2. **Set Up SSH Access:**
   Ensure that SSH access to `localhost` is configured so that Ansible can run the playbook.

3. **Run the Playbook:**
   ```sh
   ansible-playbook site.yml -i hosts
   ```

#### Expected Results:
- All templates should be generated successfully.
- Multiplication results in the templates should equal 10.
- Addition results in the templates should equal 11.

#### Actual Results:
- Variables in Jinja2 templates are treated as string objects.
- Multiplication of strings results in repetitions of the string, not mathematical multiplication.
- Addition to a string results in a fatal error.

#### Example:
- **Expected:**
  ```jinja
  {{ 2 * 5 }}  # Should output 10
  {{ 5 + 6 }}  # Should output 11
  ```

- **Actual:**
  ```jinja
  {{ "2" * 5 }}  # Outputs "22222"
  {{ "5" + 6 }}  # Throws an error
  ```

#### Full Proof of Concept:
For a complete example, please refer to the GitHub repository:
- [GitHub Repository](https://github.com/rafaltrojniak/ansible-jinja-casting)

This issue demonstrates that the `|int` filter is not effectively converting the variable to an integer when used with `set_fact`, leading to incorrect type handling in Jinja2 templates.