Class3如下所示，其内部定义了一个Class1，最终由Class1完成占位：
可以看到Class1对象的定义如下，此时由于Var14和V15中都存在对最初Class5内存的引用，而Var14和V15中对该内存引用的对象分别是Class5，Class3，从而导致类型混淆：
由于Class3，Class5是经过攻击者精心设计的，此时只需操作Var14，Var15中的引用对象即可以获得任意地址读写的能力：
获取任意地址读写后便可以开始搜索内存，获取后续使用的函数地址，之后的流程便和一般的Flash漏洞利用一致：
## 木马分析 – backup.exe
后续执行的木马程序使用VMProtect加壳，样本相关信息如下：
MD5
|
1CBC626ABBE10A4FAE6ABF0F405C35E2  
---|---  
文件名
|
backup.exe  
数字签名
|
IKB SERVICE UK LTD  
加壳信息
|
VMProtect v3.00 – 3.1.2 2003-2018  
### 伪装NVIDIA显卡控制程序
木马伪装成了NVIDIA的控制面板程序，并有正常的数字签名，不过该数字签名的证书已被吊销：
NVIDIA Control Panel Application
证书信息
木马程序中还会模仿正常的NVIDIA控制面板程序发送DirectX相关的调试信息：
有趣的是木马作者拼写单词Producer时发生了拼写错误，将Producer拼写成了Producet：
    DXGI WARNING: Live Producet at 0x%08x Refcount: 2. [STATE_CREATION WARNING #0: ]
### 通过特定窗口过程执行木马功能
通过对VMProtect加密后的代码分析发现，木马运行后会首先创建一个名为“DXGESZ1Dispatcher”的窗口类，该窗口类对应的窗口过程函数就是整个木马的主要控制流程函数，木马程序的主要功能将通过分发窗口消息的方式来驱动执行：
当CreateWindowExW被调用时，会向窗口过程函数发送WM_CREATE消息，当窗口过程函数收到WM_CREATE消息时会创建3个线程，分别进行环境检测、用户是否有输入操作检测等来检测程序是否在真实环境下运行：
当检测通过后，会继续向窗口过程发送WM_USER+1消息，进一步控制程序的运行流程。当窗口过程函数收到该消息后，会再创建一个线程来初始化SHLWAPI.DLL和WS_32.DLL里需要使用的API函数：
紧接着利用OutputDebugStringA输出一个伪装的Debug信息：“DXGI WARNING: Live Producet at 0x%08x
Refcount: 2. [STATE_CREATION WARNING #0:
]”，该信息是正常程序在使用了DirectX编程接口后可能会输出的调试信息，木马程序以此来进一步伪装NVIDIA控制面板程序：
另外还会判断当前的进程ID是否为4，如果是则结束当前进程运行，该技巧一般被用于检测杀毒软件的虚拟机：
### 检测杀毒软件
该木马程序还会通过一些技巧判断当前计算机是否安装某些特定的杀毒软件，比如检测驱动目录里是否存在avckf.sys，而avckf.sys正是BitDefender杀毒软件特有的驱动模块：
以及通过WMI执行命令“Select*from Win32_Service WhereName=’WinDefend’ AND StateLIKE
‘Running’ ”来确定是否有Windows Defender正在运行：
### 持久化
木马程序会将自身拷贝到%APPDATA%\ NVIDIAControlPanel\NVIDIAControlPanel.exe：
然后通过发送窗口消息的方式触发主线程设置计划任务来实现持久化：
### 上线并加密上传本机信息
当木马窗口过程收到消息类型为WM_USER的消息时，木马会创建一个线程用于获取本机的进程信息、CPU信息、用户信息、计算机所在时区信息等，并把获取的信息加密后通过HTTP协议上传到C&C地址：188.241.58.68，然后等待获取新的指令进行远程控制：
  * 从注册表获取已安装软件：
  * 执行命令SELECT*FROM Win32_TimeZone获取时区：
  * 获取磁盘信息：
  * 连接C&C地址：188.241.58.68，并上传本机信息：
## 溯源与关联 – Hacking Team
360威胁情报中心通过对木马样本进行详细分析，发现本次使用的木马程序为Hacking Team
2015年泄露的远程控制软件的升级版！本次的木马程序将字符串进行了加密处理，且增加了使用窗口消息来对木马流程进行控制等功能。
### 与Hacking Team泄露源码的关联
由于后门程序backup.exe使用VMProtect加密的影响，我们无法截取到比较完美的IDA
F5伪代码，但我们确定其绝大多数的功能代码和逻辑都与Hacking Team之前泄露的源码一致，下面是我们展示的部分IDA F5伪代码与Hacking
Team泄露源码的对比：
检测沙箱
初始化WINHTTP
关闭WINHTTP HANDLE
### 同源样本关联
360威胁情报中心通过本次0day漏洞攻击使用的木马程序还关联到两个同类样本，两个木马程序使用了相同的数字签名，木马功能也基本一致，同样是来源于Hacking
Team的远控木马，且使用相同数字签名的Hacking Team木马最早出现在今年8月。
其中一个木马程序同样是伪装成NVIDIA控制面板程序，C&C地址为：80.211.217.149，另外一个木马程序则伪装成Microsoft
OneDrive程序，C&C地址为：188.166.92.212
伪装成Microsoft OneDrive程序的Hacking Team远控
### 关于Hacking Team
360威胁情报中心结合多方面的关联，列举本次0day攻击事件和历史Hacking Team之间的一些对比：
  * 本次0day漏洞的Exploit执行的后续木马为Hacking Team泄露的远程控制软件的升级版
  * 在过去Hacking Team泄露资料中表明其对Flash 0day漏洞和利用技术有深厚的基础；而本次0day漏洞中的利用手法实现也是非常通用
  * Hacking Team长期向多个情报机构或政府部门销售其网络间谍武器
## 总结
至此，360威胁情报中心通过捕获到的0day漏洞利用样本和后续执行的木马程序关联到Hacking Team组织，自Hacking
Team泄露事件以来，其新的相关活动及其开发的间谍木马也被国外安全厂商和资讯网站多次披露，证明其并没有完全销声匿迹。
## 防护建议
360威胁情报中心提醒各单位/企业用户，谨慎打开来源不明的文档，并尽快通过修复及升级地址下载安装最新版Adobe Flash
Player，也可以安装360安全卫士/天擎等防病毒软件工具以尽可能降低风险。
参考
  * 补丁公告： https://helpx.adobe.com/security/products/flash-player/apsb18-42.html
  * 修复及升级地址： https://get.adobe.com/flashplayer/
  * 360威胁情报中心早期发现的疑似Hacking Team的Flash 0day漏洞分析: https://ti.360.net/blog/articles/cve-2018-5002-flash-0day-with-apt-campaign/
  * Hacking Team泄露源码: https://github.com/hackedteam/scout-win
  * https://www.welivesecurity.com/2018/03/09/new-traces-hacking-team-wild/
## IOC
Word文档  
---  
9c65fa48d29e8a0eb1ad80b10b3d9603  
92b1c50c3ddf8289e85cbb7f8eead077  
Word文档作者信息  
tvkisdsy  
Кирдакова  
Flash 0day漏洞利用文件  
8A64017953D0840323318BC224BAB9C7  
Flash 0day漏洞利用文件编译时间  
Sep 15, 2014  
Hacking Team后门程序  
1cbc626abbe10a4fae6abf0f405c35e2  
7d92dd6e2bff590437dad2cfa221d976  
f49da7c983fe65ba301695188006d979  
C&C地址  
188.241.58.68:80  
188.166.92.212:80  
80.211.217.149:80  
Hacking Team使用的数字签名  
Name: IKB SERVICE UK LTD  
Serial number: 57 5f c1 c6 bc 47 f3 cf ab 90 0c 6b c1 8a ef 6d  
Thumbprint: d8 7a a2 1d ab 22 c2 f1 23 26 0b 1d 7a 31 89 3c 75 66 b0 89