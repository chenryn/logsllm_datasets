all of them are used in the query computation. This at-
tack still checks all the possible passwords; however, it
keeps a list of all possible passwords in a succinct form,
and as a result can get by with less bookkeeping. Our
protocols’ resistance is measured by min( ˆH, ˜H), which
should be “large enough”.
2.3.1. The model
Let h denote an N -dimensional trinary vector repre-
senting a consistent hypothesis about the user’s secret.
Each index i in this vector corresponds to an item in the
set B; the value of hi is 1 if the corresponding item is in
the secret set F, 0 if it isn’t, and -1 if its afﬁliation is not
known (in other words, it can be either 0 or 1). To help
the adversary in the construction of consistent hypothe-
ses, we assume that the adversary knows the correct an-
swer for each observed query.
(cid:2)
Brute-force attack: ˜H =
N
denotes the complex-
M
ity of the brute-force attack against a protocol. It is the
number of all vectors h with exactly M 1’s and the rest
all 0’s.
(cid:3)
All the protocols described in this paper are not safe
against a very powerful adversary, which can success-
fully mount a brute-force attack. Note that the ﬁrst ob-
served query and its (correct) answer reduces the num-
ber of possible secrets by 1
P . After k observations, the
number of viable secrets is reduced to 1
P k of the origi-
nal space. Thus if an adversary can maintain a list of all
possible ˜H solution vectors h, this elimination process
will converge in a short time to a single answer, and the
secret will be revealed. We must therefore choose N and
M large enough, so that ˜H is larger than the resources
available to the most powerful adversary, against which
we should be protected.
Enumeration attack: Let Ht denote the set of all pos-
sible different hypotheses which are consistent with the
observed data at time t, i.e., after t observations of
queries and (correct) answers. Let ˆH = maxt |Ht|. ˆH
is the complexity of an enumeration attack - an attack
that keeps a list of all consistent hypotheses remaining
at time t, which are consistent with all the data observed
up to time t. Clearly ˆH < 3N . However, typically in
our protocols ˆH < ˜H since the answer to each query
depends on only a fraction of the bits in the secret.
To see why this is true, let us inspect the enumeration
attack more closely. This attack works the opposite way
from the brute-force attack: instead of starting from the
set of all possible secrets (i.e., all vectors in 2N with ex-
actly M 1’s) and eliminating those inconsistent with the
observations, the enumeration attack works by expand-
ing and maintaining the set of all consistent hypotheses.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply. 
Initially, before any observation has been made,
the constant N -
this set includes a single element,
dimensional vector with all −1. Therefore |H0| = 1.
As the number of observations increases, Ht is modiﬁed
to include all the vectors consistent with the old and new
observations. The size of this set initially increases ex-
ponentially (roughly as qt, if q is the number of vectors
consistent with one observed query). But at some point
contradictions start to appear between vectors consistent
with past and present observations, and eventually the
size of the sets Ht starts to shrink back until a single
element remains. The remaining vector must be a bi-
nary vector representing the user’s secret, where each
item in the secret is assigned 1, and each of the remain-
ing items is assigned 0. It then follows that, because the
enumeration attack must store and access all sets Ht, its
complexity (time and space) is ˆH = maxt |Ht|.
2.3.2. High complexity query
We use simulations to estimate ˆH for the high com-
plexity protocol described above, based on the sampling
of Ht (exact calculation for interesting values of N, M is
not computationally feasible). The results are shown in
Table 1 for a range of parameters, illustrating the various
trade-offs one should be aware of. The set of parame-
ters corresponding to our user study below appears in the
ﬁrst row. In this case our protocol achieves only mod-
erate security in current cryptography standards; how-
ever, recall that the attacker must see a number of suc-
cessful authentication entries before being able to even
start searching the space of 247 possibilities. The second
case (row 2) shows a set of parameters which achieves a
higher level of security, consistent with what is currently
considered secure for encrypted passwords.
N M P
4
80
120
2
95
8
145
4
30
50
40
55
Table 1.
query size
8 × 10
8 × 10
8 × 10
4 × 5
# bits ˆH # bits ˜H
47
84
47
47
73
114
89
135
The last two cases show the effect of two manipula-
tions that can shorten the authentication process: either
increase the number of choices in the multiple choice
question (row 3) to decrease the total number of queries
required, or simplify the query by decreasing the num-
ber of pictures shown in the grid (row 4) to shorten each
query. In both cases we show values of N, M which
achieve the same level of security against the conjec-
tured attacks as in row 1 - 47 bits.
3. User study
We tested the two types of protocols described above
in a user study that spanned a long period of time: up to
6 months with the high complexity query, and roughly
1 year with the low complexity query. The goal was to
probe password memorability and the protocols’ ease of
use. Results are described below.
3.1. High complexity query
The protocol is described in Section 2.1.1. 9 under-
graduate students from the faculty of natural sciences
(none of which was a computer science student), all in
their mid 20’s, participated in the study, and were paid
a ﬁxed amount per session. All participants underwent
two or three training sessions on three consecutive days,
as described above. With a few exceptions of isolated
queries, all participants took roughly 15-20 seconds to
conclude a query.
After training, participants went through a sequence
of experimental sessions including 24 queries each, in
the following time schedule: 1 days after training, 2
days, 5 days, 1 week after training, and then roughly
once a week for a period of 10 weeks. All participants
were committed to this schedule. Some of the partici-
pants agreed to participate in additional sessions, which
took place on a loose schedule for the next 4 months.
Participants received feedback as to whether the ﬁnal
answer they had reported was correct, which resulted in
high memory retention and self correction. Some errors,
however, did not correspond to failing memory but to
lapses in concentration. Results for all participants are
summarized in Fig. 2.
1
0.95
0.9
0 10
30
50
80
number of days
110
140
170
200
Figure 2. Results (success rate) of 9 participants answer-
ing high complexity queries, as a function of the time that has
passed since the last training session. We plot mean values,
and standard errors as error-bars; median values are indicated
by stars.
3.2. Low complexity query
The protocol is described in Section 2.1.2. Two vol-
unteers, in the age range of 25-35 years, participated
in the study. Both participants underwent three training
sessions on three consecutive days, as described above.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply. 
1
0.95
0.9
0
50
100
200
150
number of days
250
300
350
Figure 3. Results (success rate) of 2 participants answering
low complexity queries.
With a few exceptions of isolated queries, both partici-
pants took roughly 5 seconds to conclude a query. After
training, participants went through a sequence of exper-
imental sessions including 20-25 queries each. They did
not receive feedback. Results are summarized in Fig. 3.
Note that after one year, one participant maintained per-
fect performance. Note also the large gaps (around 3
months) between the later test sessions.
3.3. Length of authentication
In our user study, all participants demonstrated suc-
cess rate of over 95% per query. In fact, many partic-
ipants had perfect memory retention all the way to the
last trial (we can distinguish memory errors from con-
centration errors in our participants’ proﬁles), which for
one participant took place almost one year after her ini-
tial training.
The number k of queries needed to conclude an au-
thentication session successfully depends on the security
threshold T . Suppose we ﬁx a modest security threshold
of T = 10−6, i.e., a guessing adversary will manage to
pose as the legitimate user once in a million trials. Sup-
pose also that our user answers correctly 95% of the time
(most participants in our study did better). The average
number of queries per successful entry is approximately
11 to achieve the required threshold in the high com-
plexity protocol (where chance of guessing is 1 in 4),
and 22 in the low complexity protocol (where chance of
guessing is 0.5).
In the settings used in our user study, a typical en-
try takes just over 3 minutes with the high complexity
protocol (where each 4-choice query takes 15-20 sec-
onds), and just over 1.5 minutes with the low complex-
ity protocol (where each binary query takes roughly 5
seconds). Note that the high complexity protocol would
take only 1.5 minutes when using the set of parame-
ters corresponding to the 3rd row of Table 1. In fact, if
lower security is acceptable, both protocols can be fur-
ther shortened by allowing more bits to be revealed by
the user in each query, e.g., by increasing the number of
choices in the multiple choice query.
4. Conclusions and Discussion
We have described challenge response authentication
protocols that can be used by humans, relying only on
the user’s natural cognitive abilities, unassisted by any
external computation device. A modestly powered ob-
server who records any feasible number of successful
authentication sessions cannot recover the user’s secret
by the conjectured brute-force or enumeration method.
Thus the protocols appear to be safe against eavesdrop-
ping, without relying on any encryption. The main
drawbacks of the proposed protocols are two: users need
training in a secure location, and authentication takes
time as it involves a series of challenges. An interest-
ing property of these protocols is the ability to trade-off
authentication time with security, asking many questions
only when high security is needed or when an attack is
going on.
Our user study has an interesting implication regard-
ing the usability of graphical passwords in general. It
has been shown that user choice can reduce the entropy
of chosen graphical passwords below what is consid-
ered safe [1, 7]. Our user study demonstrates that, given
training, the participants can learn an arbitrary machine-
generated set of pictures, and retain is for a very long
period of time. This set can be used as a regular graphi-
cal password, with a sufﬁciently high entropy.
References
[1] D. Davis, F. Monrose, and M. K. Reiter. On user choice
In Proc. 13th USENIX
in graphical password schemes.
Security Symposium, 2004.
[2] R. Dhamija and A. Perrig. Deja vu: A user study using
images for authentication. In Proc. 9th USENIX Security
Symposium, 2000.
[3] N. J. Hopper and M. Blum. Secure human identiﬁcation
protocols. In Proc. Advances in Cryptology, 2001.
[4] S. Li and H.-Y. Shum. Secure human-computer identiﬁ-
cation (interface) systems against peeping attacks: Sechci.
Cryptology ePrint Archive, Report 2005/268, 2005.
[5] T. Matsumoto. Human-computer cryptography: an at-
tempt. In Proc. Conf. on Computer and communications
security, pages 68 – 75, 1996.
[6] X. Suo, Y. Zhu, and G. S. Owen. Graphical passwords: A
survey. In Proc. 21st Annual Computer Security Applica-
tions Conference, 2005.
[7] J. Thorpe and P. van Oorschot. Graphical dictionaries and
In Proc.
the memorable space of graphical passwords.
13th USENIX Security Symposium, 2004.
[8] D. Weinshall. Cognitive authentication schemes for unas-
sisted humans, safe against spyware, HUJI TR 2006-5.
[9] D. Weinshall and S. Kirkpatrick. Passwords you’ll never
forget, but can’t recall. In Proc. Conf. on Computer Hu-
man Interfaces, 2004.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply.