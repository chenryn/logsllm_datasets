### SCMKit: A Comprehensive Toolkit for Source Code Management (SCM) Systems

#### Overview
SCMKit is a versatile toolkit designed to perform reconnaissance, privilege escalation, and persistence in various SCM systems such as GitLab, Bitbucket, and GitHub. This document provides detailed examples and defensive considerations for using and securing against SCMKit.

#### Reconnaissance Modules
SCMKit includes multiple modules for performing reconnaissance on repositories, files, code, and other resources specific to various SCM systems. Here are some examples:

1. **Code Search Example with SCMKit**
   - **Scenario:** Searching for any code in Bitbucket Server that contains "API_KEY" to discover API key secrets within the source code.
   - **Command:**
     ```bash
     scmk codesearch --system bitbucket --query "API_KEY"
     ```

2. **File Search Example with SCMKit**
   - **Scenario:** Searching for any files named "Jenkinsfile" to discover Jenkins CI configuration files within GitLab Enterprise.
   - **Command:**
     ```bash
     scmk filesearch --system gitlab --filename "Jenkinsfile"
     ```

3. **GitLab Runner Reconnaissance Example with SCMKit**
   - **Scenario:** Discovering GitLab Runners that you have access to via the `runnerlist` module.
   - **Command:**
     ```bash
     scmk runnerlist --system gitlab
     ```

#### Privilege Escalation
SCMKit also provides capabilities for privilege escalation. For example, adding a regular user to the admin role in GitHub Enterprise:

- **Scenario:** Adding a regular user (e.g., `hgranger`) to the site admin role in GitHub Enterprise.
- **Command:**
  ```bash
  scmk addadmin --system github --username hgranger
  ```

- **Verification:**
  After executing the command, you can verify that the `hgranger` user has been added to the site admins group in GitHub Enterprise.

#### Persistence
SCMKit includes two persistence modules: personal access tokens and SSH keys. These can be used to maintain access to an SCM system.

1. **Creating Access Token Example with SCMKit**
   - **Scenario:** Creating an access token for the `hgranger` user account in GitLab Enterprise.
   - **Command:**
     ```bash
     scmk createpat --system gitlab --username hgranger
     ```

2. **Listing Access Tokens Example with SCMKit**
   - **Scenario:** Listing all active access tokens for a given user.
   - **Command:**
     ```bash
     scmk listpat --system gitlab --username hgranger
     ```

3. **Creating SSH Key Example with SCMKit**
   - **Scenario:** Adding an SSH key for the `hgranger` user in Bitbucket Server.
   - **Command:**
     ```bash
     scmk createsshkey --system bitbucket --username hgranger
     ```

4. **Listing SSH Keys Example with SCMKit**
   - **Scenario:** Listing all active SSH keys for a given user.
   - **Command:**
     ```bash
     scmk listsshkey --system bitbucket --username hgranger
     ```

#### Defensive Considerations
To detect and mitigate the usage of SCMKit, consider the following:

- **Static Signatures:**
  - SCMKit uses a static user agent string: `SCMKIT-5dc493ada400c79dd318abbe770dac7c`.
  - Yara and Snort rules for detection are available in the SCMKit repository.

- **Access Tokens and SSH Keys:**
  - Any access tokens or SSH keys created using SCMKit will be prepended with `SCMKit-` in the name.

- **GitHub Enterprise:**
  - Ensure logs are sent to your SIEM and apply filters to detect anomalous activity.
  - Disable user impersonation, set automatic expiration dates, and limit the number of site admins.
  - Require signed commits and enable MFA.

- **GitLab Enterprise:**
  - Ensure logs are sent to your SIEM and apply filters to detect anomalous activity.
  - Disable user impersonation, set automatic expiration dates, and limit the number of users with the admin role.
  - Require signed commits and enable MFA.

- **Bitbucket:**
  - Ensure logs are sent to your SIEM and apply filters to detect anomalous activity.
  - Set automatic expiration dates, limit the number of system admins, and require signed commits.
  - Enable MFA and increase logging levels for better visibility.

#### Conclusion
Source code management systems are critical components in the DevOps lifecycle and contain highly sensitive information. Compromise of these systems can lead to significant security risks. It is essential to bring more attention and research to defending these systems. X-Force Red aims to contribute to this effort through this whitepaper and ongoing research.

#### Acknowledgments
Special thanks to the following individuals for their feedback and content review:
- Chris Thompson (@retBandit)
- Daniel Crowley (@dan_crowley)
- Dimitry Snezhkov (@Op_nomad)
- Patrick Fussell (@capt_red_beardz)
- Ruben Boonen (@FuzzySec)

#### Appendix A: Table of SCM Attack Scenarios
The table below summarizes the attack scenarios covered in this whitepaper:

| SCM System          | Attack Scenario            | Sub-Scenario                 |
|---------------------|----------------------------|------------------------------|
| GitHub Enterprise   | Reconnaissance             | Repository, File, Code        |
| GitLab Enterprise   | Reconnaissance             | Repository, File, Code        |
| Bitbucket           | Reconnaissance             | Repository, File, Code        |
| GitHub Enterprise   | Maintain Persistent Access | Personal Access Token, Impersonation Token, SSH Key |
| GitLab Enterprise   | Maintain Persistent Access | Personal Access Token, Impersonation Token, SSH Key |
| Bitbucket           | Maintain Persistent Access | Personal Access Token, SSH Key |
| GitHub Enterprise   | User Impersonation         | Impersonate User Login, Impersonation Token |
| GitLab Enterprise   | User Impersonation         | Impersonate User Login, Impersonation Token |
| GitHub Enterprise   | Promoting User to Site Admin | N/A                          |
| GitLab Enterprise   | Promoting User to Admin Role | N/A                          |
| Bitbucket           | Promoting User to Admin Role | N/A                          |
| Bitbucket           | Modifying CI/CD Pipeline   | N/A                          |
| GitLab Enterprise   | Modifying CI/CD Pipeline   | N/A                          |
| GitHub Enterprise   | Repository Takeover        | N/A                          |
| GitHub Enterprise   | Management Console Access  | N/A                          |
| GitLab Enterprise   | SSH Access                 | N/A                          |

---

This document aims to provide a clear, professional, and comprehensive guide to using and defending against SCMKit.