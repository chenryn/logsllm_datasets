# Link Traversal and Vulnerability Detection Analysis

## 1. Link Traversal Techniques
- **P Redirects**
- **Meta-refresh Tag**
- **Link Encoding**
- **Pop-up**
- **Dynamic JavaScript**
- **Iframe**
- **VBScript**
- **POST Link**

### Figure 5: Successful Link Traversals Over Total Links by Technology Category, Averaged Over All Scanners
- **Malware**: 0%
- **Info Leak**: 31.2%
- **Configuration**: 26.5%
- **Session Management**: 21.4%
- **SQL 2nd Order Injection**: 20.4%
- **SQL 1st Order Injection**: 15%
- **CSRF**: 11.25%
- **XCS (Cross-Channel Scripting)**: 15%
- **Advanced XSS**: 0%
- **XSS Type 2 (Stored XSS)**: 0%
- **XSS Type 1 (Reflected XSS)**: 0%

**Detection Rate:**
- 0% - 10%
- 10% - 20%
- 20% - 30%
- 30% - 40%
- 40% - 50%

## 2. Average Scanner Vulnerability Detection Rate by Category
- **Figure 6: Average Scanner Vulnerability Detection Rate By Category**
- The overall detection rates for various vulnerability categories were generally low, with the highest being 32.5% for information leaks.
- Scanners struggled with more complex forms of first-order SQL injection that used different keywords.
- Apart from the XSS type 1 classification, no other category had a detection rate above 32.5%.
- Some scanners failed to detect testbed vulnerabilities that matched their scanning profiles.
- Stored vulnerabilities (XSS type 2 and second-order SQL injection) and malware presence were undetected by all scanners.

## 3. Cross-Site Scripting (XSS)
- **XSS Type 1**: Reflected XSS using `<script>` tag.
- **XSS Type 2**: Stored XSS where unsanitized user input is written to the database and later executed.
- **Advanced XSS**: Novel forms of reflected and stored XSS using non-standard tags and keywords, such as `prompt()` or alternative scripting technologies like Flash.

### Figure 7: XSS Detection Results Sorted By Scanner Rank in Category
- **XSS Type 1**: All scanners detected at least 50% of vulnerabilities.
- **XSS Type 2 and Advanced XSS**: Poor performance, with only the leading scanner detecting more than 20% of vulnerabilities.

## 4. SQL Injection
- **First-Order SQL Injection**: Immediate execution upon user input submission.
- **Second-Order SQL Injection**: Requires unsanitized user input to be loaded from the database.

### Figure 8: SQL Injection Detection Results Sorted by Scanner Rank in Category
- **First-Order SQL Injection**: 7 out of 8 scanners detected basic vulnerabilities (14.2%), but only one exceeded 40% detection.
- **Second-Order SQL Injection**: No scanner detected any vulnerabilities.

## 5. Cross-Channel Scripting (XCS)
- Includes vulnerabilities like XPath injection, Malicious File Upload, Open Redirects, Cross-Frame Scripting, Server Side Includes, Path Traversal, Header Injection, Flash Parameter Injection, and SMTP Injection.

### Figure 9: Cross-Channel Scripting Detection Results Sorted by Scanner Rank in Category
- Only Server-Side Includes and Path Traversal were detected by a majority of scanners.

## 6. Session Management
- Includes session management flaws, authentication, and cookie issues.

### Figure 10: Session Management Vulnerability Detection Results Sorted by Scanner Rank in Category
- Better performance compared to SQL, XSS, and XCS classes, with the best scanner detecting 43.7% and the worst 12.5%.

## 7. Cross-Site Request Forgery (CSRF)
- Forms without randomized authentication tokens are vulnerable to CSRF.

### Figure 11: Cross-Site Request Forgery Detection Results Sorted by Scanner Rank in Category
- Two scanners achieved 40% detection rates, while four detected none.

## 8. Information Disclosure
- Leaks sensitive information through functions like `die()` and AJAX requests, backup files, and path disclosures.

### Figure 12: Information Disclosure Detection Results Sorted by Scanner Rank in Category
- One of the better-performing categories, with most scanners detecting backup file and path disclosure vulnerabilities.

## 9. Server and Cryptographic Configuration
- Includes improper PHP settings, HTTP TRACE request, and SSL misconfigurations.

### Figure 13: Server and Cryptographic Configuration Detection Results Sorted by Scanner Rank in Category
- Seven out of eight scanners detected the TRACE request vulnerability, but less than half detected the self-signed SSL certificate.

## 10. Malware Detection
- Simple pieces of malware, such as a JavaScript keystroke logger and a malicious file, were inserted into the testbed site.
- No scanner reported the presence of malware.

## 11. False Positive Results
- Two traps were designed to test false positives:
  - **JavaScript `alert()` Trap**: No false positives.
  - **User Input in JavaScript String Variable Trap**: Some scanners falsely flagged this as a vulnerability.

This comprehensive analysis highlights the strengths and weaknesses of current web vulnerability scanners and provides insights into areas for improvement.