## Bug Report

In Webpack 5 `beta.30`, strict mode has been enabled for ESM (ECMAScript Modules) imports, as noted in the [release notes](https://github.com/webpack/webpack/releases/tag/v5.0.0-beta.30). The issue described in [webpack/webpack#11467](https://github.com/webpack/webpack/issues/11467) highlights problems encountered by users with their code. Specifically, it appears that `@babel/runtime` does not fully adhere to the strict `"type": "module"` requirements expected by Node.js and Webpack.

### Problem Description
The `package.json` file in `.\node_modules\@babel\runtime\helpers\esm\` specifies `"type": "module"`. As a result, libraries that depend on `@babel/runtime` and use ESM modules are encountering issues because the generated code does not include file extensions in import statements, which is a requirement for ESM modules according to the [Node.js documentation](https://nodejs.org/api/esm.html#esm_differences_between_es_modules_and_commonjs).

### Current Behavior
- `@babel/runtime/helpers/esm/*.js` files contain extensionless imports for dependencies.

### Expected Behavior
- `@babel/runtime/helpers/esm/*.js` files should include fully specified file extensions in import statements.

### Babel Configuration
This issue pertains to an npm-published module, so there is no specific Babel configuration to provide.

### Environment
- **System:**
  - OS: Windows 10 10.0.19042
- **Binaries:**
  - Node: 12.18.3 - `C:\Program Files\nodejs\node.EXE`
  - Yarn: 1.22.5 - `C:\Program Files (x86)\Yarn\bin\yarn.CMD`
  - npm: 6.14.8 - `C:\s\SwiftFox\node_modules\.bin\npm.CMD`
- **Monorepos:**
  - Yarn Workspaces: 1.22.5
- **npmPackages:**
  - @babel/core: 7.11.4
  - babel-loader: 8.1.0
  - eslint: 7.7.0
  - webpack: 5.0.0-beta.30

Please let me know if you need any further information or if there are any steps I can take to help resolve this issue.