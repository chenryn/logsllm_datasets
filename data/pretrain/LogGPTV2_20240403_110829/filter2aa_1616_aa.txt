对抗AV检测 -- 病毒遗传感染
对抗AV检测 -- 病毒遗传感染
技术的探索
技术的探索
nEINEI/[bytehero team] 
病毒遗传感染技术的探索
病毒遗传感染技术的探索
•
内容介绍：
关于病毒遗传感染技术
•
关于病毒遗传感染技术
•
-
计算机病毒/人工生命/自进化
•
-
多态/ 变形之后的思路
•
-
多态/变形的弱点在哪里？
•
遗传感染的一种实现思路
•
-
舍弃掉解密器/收缩器
舍弃掉解密器/收缩器
•
-
构造一个新的变形机制
•
-
病毒“基因”的提取
•
-
宿主交叉/变异点的选择
宿主交叉/变异点的选择
•
-
构造宿主/病毒的双执行环境
•
-
宿主/病毒及感染后的重定位
•
完整的遗传感染变形方式
•
-
完整的遗传感染变形方式
•
遗传感染思路的扩展
•
AV检测的弱点剖析
未来可能的检测对抗？
•
未来可能的检测对抗？
•
关于病毒遗传感染技术
关于病毒遗传感染技术
•
计算机病毒/人工生命/自进化：
•
人工生命的概念是源于1987年美国桑塔菲研究院的Langton教授提出，“人工
生命就是具有生命现象和特征的人造系统”
生命就是具有生命现象和特征的人造系统
。
•
普通病毒
--
体现了人工生命现象的一种表达方式。
加密/多态/变形
体现了自进化的变异过程
是对抗反病毒检测技术的
•
加密/多态/变形
--
体现了自进化的变异过程，是对抗反病毒检测技术的
自我进化方式。
该方向的研究情况
•
该方向的研究情况:
•
2005年,SPTH在RRLF#6发表《Code Evolution: Follow nature's example》,
从指令变形的角度阐述了如何像生物自然选择那样进行代码变异。
•
2008年,saec在EOF-DR-RRLF发表《Evolutionary Virus Propagation 
Technique》这是从代码实现角度设想了如何像生物病毒那样的具有遗传变异
的感染方式
这在很大程度上区别于现有复杂的感染方式
的感染方式，这在很大程度上区别于现有复杂的感染方式。 ...
关于病毒遗传感染技术
关于病毒遗传感染技术
•
多态/变形之后的思路：
1 代码集成方式
重建宿主程序
使病毒代码分片插入到宿主中与其
•
1 代码集成方式：重建宿主程序，使病毒代码分片插入到宿主中与其
混合。该方式实现极其复杂，目前仅有与之最为接近的是zmist病毒。
2 虚拟化感染
借助VMP
t
t中的思路
设计病毒自己的
d
•
2 虚拟化感染：借助VMProtect中的思路，设计病毒自己的p-code，
需要实现一个病毒自己的虚拟机。
3 未来的设想
利用宿主程序本身的指令
构造出病毒使用的代码
•
3 未来的设想：利用宿主程序本身的指令，构造出病毒使用的代码，
而”病毒代码“仅是连接这些指令执行的组织者，本身并没有恶意的
操作,且“融入”宿主程序。
•
...
•
那么是否存在一种感染方式，它既易于编写，又能做到完全变形，又
有很好的anti-av效果呢？
关于病毒遗传感染技术
关于病毒遗传感染技术
•
多态/变形的弱点在哪里？
•
1 多态技术的解密过程始终都是最薄弱的环节，需要隐藏好。
•
2 变形技术的产生的文件体积过大，80%左右都是变形引擎的代码。
 变形技术的产生的文件体积过大，80%左右都是变形引擎的代码。
•
3 变形引擎中收缩器编写难度大，一旦处理不好，在感染N代后将导
致宿主文件大小极巨膨胀。
致宿主文件大小极巨膨胀。
•
4 编写中意想不到的因素及设计上的漏洞，导致很容易被通配符匹配，
静态启发式等技术检测到。
静态启发式等技术检测到。
遗传感染的一种实现思路
遗传感染的
种实现思路
从生物病毒那里寻找些思路
•
从生物病毒那里寻找些思路？
•
I 生物病毒的突变形式（点突变和染色体突变）:
•
a丢失)： 1 - 2 - 3 - 4 - 5 - 6 - 7     
•
1 - 2 - 4 - 5 - 6 - 7
•
b重复):
1
2
3
4
5
6
7
•
b重复):  1 - 2 - 3 - 4 - 5 - 6 - 7      
•
1 - 2 - 3 - 3 - 4 - 5 - 6 - 7 
•
c倒序):  1 - 2 - 3 - 4 - 5 - 6 - 7
•
1 - 2 - 4 - 3 - 5 - 6 - 7
•
d插入):  1 - 2 - 3 - 4 - 5 - 6 - 7
•
1 - 2 - 3 - 4 - x1- x2 - 5 - 6 - 7
1 
2 
3 
4 
x1
x2
5 
6 
7
•
e易位):  a1 - a2 - a3 - a4 - a5 - a6 |b1 - b2 - b3 - b4 - b5 - b6
•
a1 - b2 - b3 - a5 - b1 - b6 |b1 - b6 - b5
遗传感染的一种实现思路
遗传感染的
种实现思路
II 生物病毒和我们 i
d 的关系
• II 生物病毒和我们virus code的关系：
•
DNA
 CODE
| Chromosome  Program Function
•
Genes  Commands | Base
 Bits
• 点突变：
•
1000 1001 1101 1000 ...
mov
ax, bx
,
• XOR 0000 0000 0000 1000 ...
random number
•
1000 1001 1101 0000 ...
mov
ax, dx
,
遗传感染的一种实现思路
遗传感染的
种实现思路
染色体突变 倒序情况
• 染色体突变,倒序情况:
•
CyHeSe:                        CyHeSe:
•
36
36
•
cmp     ax, 36                 cmp     ax, 36
•
jge     BefCyHeSe              jge     BefCyHeSe
•
cmp
ax
18
cmp
ax
18
•
cmp     ax, 18                 cmp     ax, 18
•
jl      SecCheck               jl      SecCheck
•
mov
dh
1
sub
ax
18
mov     dh, 1                  sub     ax, 18
•
sub     ax, 18                 mov     dh, 1
•
SecCheck:                      SecCheck:
•
mov     cl, al                 mov     cl, al
•
ret                            ret
遗传感染的一种实现思路
遗传感染的一种实现思路
• 改进我们的的思路？
•
把每一个计算机病毒想象成是携带若干个”基因（DNA）”的代码片
段，在感染宿主程序后产生了变异。
•
也就是病毒个体改变了宿主个体的“基因”，由此产生了进化。
•
我们设想病毒是由两部分组成的代码序列结构
有效基因
无效基因
•
•
+ 
=  virus
有效基因
*
遗传感染的实现思路
遗传感染的实现思路
病毒个体
• virus                                      
*
*
*
*
*
*
感染前宿主
• host 
感染后宿主
• virus
*
*
*
*
*
*
把握好的原则 舍弃掉解密器/收缩器
把握好的原则-舍弃掉解密器/收缩器
• 不要解密器 -- 让病毒的”基因“ 与宿主自然混
合。
• 不要收缩器 -- 让病毒的“非基因”部分以变形
式存在
利
令模板
产生过度
的形式存在，利用指令模板控制好，不产生过度
膨胀，自然也不需要收缩器。
• 这样病毒代码只有与宿主程序混合的一部，和自
身变形的一部分
从整体看病毒代码完全变形
身变形的
部分，从整体看病毒代码完全变形，
而执行过程中本身不存解密过程，在一代一代的
感染中能完全的变形，且不会代码膨胀。
构造一个新的变形机制
构造
个新的变形机制
病毒的结构布
• 病毒的结构布局：
病毒/宿主混合部分,anti-vm
Stub
垃圾数据,anti-heur static
Garbage Data
变形的病毒体
Metamorphism  Code
加密的数据,anti-heur static
Encrypt Data
构造一个新的变形机制
构造一个新的变形机制
• 抽出病毒中若干个函数当作”基因“, 在交叉点的位置进
行突变形成一个stub区域。任意的病毒执行过程都可以写
成如下的形式
成如下的形式：
•
START:   
•
call my_DNA1                             
ll
DNA2
•
call my_DNA2        
•
call my_DNA3
•
...
•
v code:
•
v_code:
•
include    virus_delta.inc      ;  重定位处理函数
•
include    virus_get_k32_base   ;  获得kernel32.dll 基址
•
...
•
vv_code:
•
vir_vars    VIR_STRUCT <>      ;  病毒自身使用变量的结构
•
vEnd:
vEnd:
•
END START
构造一个新的变形机制
构造一个新的变形机制
• 感染前后的一个对比图
•
被修改交叉点的宿主文件
宿主代码/病毒/anti-av（stub）
感染前的宿主程序
metamorphism  code
encrypt data