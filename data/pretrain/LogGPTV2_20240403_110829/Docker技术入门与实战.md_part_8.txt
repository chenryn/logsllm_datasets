Docker入门
-d-p127.0.0.1:5000:5000
-p 3000:80 training/webapp python app.py
"GET
/favicon.ico HTTP/1.1" 404
/HTTP/1.1"200
training/webapp python app.py
也可以查看到绑定的地址：
---
## Page 59
意，--rm和－d参数不能同时使用。
慧
自定义容器命名
它会在源和接收容器之间创建一个隧道，接收容器可以看到源容器指定的信息。
7.2
在执行dockerrun 的时候如果添加--rm 标记，则容器在终止后会立刻删除。
$ sudo docker inspect-f "((.Name ))"aed84ee21bde
也可以使用dockerinspect来查看容器的名字：
0.0.0.0:49154->5000/tcpweb
使用docker ps来验证设定的命名：
使用--name标记可以为容器自定义命名：
口自定义的命名，比较好记，比如一个Web应用容器，我们可以给它起名叫web。
虽然当创建容器的时候，系统默认会分配一个名字，但自定义命名容器有两个好处：
连接系统依据容器的名称来执行。因此，首先需要自定义一个好记的容器命名。
容器的连接（linking）系统是除了端口映射外另一种可以与容器中应用进行交互的方式。
注意
aed84ee21bde
CONTAINER ID
$sudo docker ps-1
口当要连接其他容器时候，可以作为一个有用的参考点，
127.0.0.1:49155.
$ sudo docker port nostalgic_morse 5000
容器的名称是唯一的。如果已经命名了一个叫web的容器，
/web
个名称的时候，需要先用docker rm来删除之前创建的同名容器。
容器互联实现容器间通信
的变量值）。
容器有自已的内部网络和IP地址（使用dockerinspect+容器ID可以获取所有
training/webapp:latest python app.py
IMAGE
COMMAND
CREATED
STATUS
比如连接Web容器到db容器。
12 hours ago
第7章
当你要再次使用web这
PORTS
网络基础配置
Up 2 seconds
NAMES
注
45
---
## Page 60
网络上。
机上。在启动db容器的时候并没有使用-p和-P标记，从而避免了暴露数据库端口到外部
web容器链接到db容器，这允许web容器访问db容器的信息。
alias是这个连接的别名。
容器互联
46第一部分Docker入门
使用dockerps来查看容器的连接：
DB_PORT_5000_TCP_ADDR=172.17.0.5
DB_PORT_5000_TCP_PORT=5432
DB_PORT_5000_TCP_PROTO=tCp
DB_PORT_5000_TCP=tcp://172.17.0.5:5432
使用env命令来查看web容器的环境变量：
口更新/etc/hosts文件。
口环境变量。
Docker 通过两种方式为容器公开连接信息：
DB_PORT=tCp://172.17.0.5:5432
DBNAME=/web2/db
可以看到自定义命名的容器：db和web，db容器的names列有db也有web/db。这表示
Up 2minutes
agoUpAboutaminute
349169744e49
CONTAINER ID
$sudo docker ps
--link参数的格式为--
此时，db 容器和web 容器建立互联关系。
$sudo docker run -d-P--name web --link db:db training/webapp python app.py
然后创建一个新的web容器，并将它连接到db容器：
$sudo docker rm-f web
删除之前创建的web容器：
$ sudo docker run -d --name db training/postgres
下面先创建一个新的数据库容器：
使用--link参数可以让容器之间安全的进行交互。
training/postgres:latest
IMAGE
training/webapp:latest
0.0.0.0:49154->5000/tcp
5432/tcp
COMMAND
-link
CREATED
db,
web/db
web
python app.py
，其中name是要链接的容器的名称，
STATUS
/usr
PORTS
About a minute
16 hours ago
NAMES
---
## Page 61
步探讨Docker网络的高级配置和实现细节。
例如SDN（软件定义网络）或NFV（网络功能虚拟化）的相关技术。本书的第三部分将进一
又可以实现快速的高性能转发。
统自带的网络系统来实现对网络服务的支持，这既可以利用现有成熟的技术提供稳定支持，
络的基本操作，包括基础的容器端口映射机制和容器互联机制。Docker目前采用了Linux系
7.3
认没有安装ping，需要自行安装。
第二个是db容器的ip和主机名。可以在web容器中安装ping命令来测试跟 db 容器的连通：
容器web的hosts文件：
在生产环境中，网络方面的需求更加复杂和多变，这时候往往就需要引人额外的机制
网络是云时代最核心也是最复杂的系统之一。本章通过具体案例讲解了Docker涉及网
用户可以链接多个子容器到父容器，比如可以链接多个web到db容器上。
用ping来测试db容器，它会解析成172.17.0.5。注意，官方的ubuntu12.04镜像默
这里有两个hosts信息，
PING db(172.17.0.5):48data bytes
root@aed84ee21bde:/opt/webapp#pingdb
172.17.0.5
172.17.0.7
root@aed84ee21bde:/opt/webapp#cat/etc/hosts
除了环境变量，Docker还添加host信息到父容器的/etc/hosts的文件。下面是父
其中DB_开头的环境变量是供web容器连接db容器使用，前缀采用大写的连接别名。
本章小结
bytes from 172.17.0.5:
db
aed84ee21bde
，第一个是web容器，web容器用自己的id作为默认主机名，
icmp_seq=1ttl=64
time=0.250
第7章
网络基础配置47
---
## Page 62
启动时执行指令。例如：
8.1
Choypte8
一般而言，Dockerfile分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器
Dockerfile由一行行命令语句组成，并且支持以#开头的注释行。
最后，会介绍使用Dockerfile创建镜像的过程。
apt/sources.list
RUN echo "deb http://archive.ubuntu.com/ubuntu/ raring main universe" >> /etc/
#镜像的操作指令
MAINTAINER docker_user PI:EMAIL
#维护者信息
FROMubuntu
Dockerfile是一个文本格式的配置文件，用户可以使用Dockerfle快速创建自定义的镜像。
第一行必须指定基于的基础镜像
基本结构
Command format: Instruction [arguments / command].
This dockerfile uses
Author:docker_user
VERSION2-EDITION1
使用Dockerfile创建镜像
第8章
the ubuntu image
营小请本
---
## Page 63
8.2
5900端口通过vnc方式使用firefox：
等软件，从而创建一个新的Nginx镜像：
感知。
命令
一条RUN指令，镜像添加新的一层，并提交。最后是CMD指令，来指定运行容器时的操作
第一个是在ubuntu父镜像基础上安装inotify-tools、nginx、apache2、openssh-server
指令的一般格式为INSTRUCTIONarguments，指令包括FROM、MAINTAINER、
CMD
EXPOSE 5900
RUN bash-c
#Setup a password
RUN mkdir/.vnc
#Install vnc,
FROM ubuntu
#VERSION
#Firefox over VNC
第二个也是基于ubuntu父镜像，安装irefox和vnc软件，启动后，用户可以通过
RUNx11vnc-storepasswd 1234~/.vnc/passwd
RUNapt-getupdate&& apt-getinstall-yxllvncxvfb firefox
RUN apt-get update && apt-get install -y inotify-tools nginx apache2 openssh-server
MAINTAINER Victor Vieux 
FROM
下面是两个Dockerhub上的Dockerfile的例子，读者可以对Dockerfile结构有个基本的
后面则是镜像操作指令，例如RUN指令，RUN指令将对镜像执行跟随的命令。
其中，一开始必须指明所基于的镜像名称，接下来一般会说明维护者信息。
指令
VERSION
Nginx
CMD/usr/sbin/nginx
#容器启动时执行指令
RUN echo "\ndaemon off;">>/etc/nginx/nginx.conf
RUNapt-getupdate&&apt-getinstall-ynginx
Autostart firefox
["xllvnc",
ubuntu
'echo
0.3
0.0.1
xvfbinordertocreatea
"-forever","-usepw","-create"]
"firefox">>
/.bashrc'
best way,but it does the trick)
'fake'display and firefox
第8章使用Dockerfile创建镜像
每运行
49
---
## Page 64
口映射过来。
Docker主机会自动分配一个端口转发到指定的端口；使用-p，则可以具体指定哪个本地端
可以使用\来换行。
hello"]。
使用其他终端可以通过第二种方式实现，例如RUN
以使用多个FROM指令（每个镜像一次）。
RUN等。下面分别介绍。
50
每条RUN指令将在当前镜像基础上执行指定命令，并提交为新的镜像。当命令较长时
告诉Docker服务端容器暴露的端口号，供互联系统使用。在启动容器时需要通过-P，
EXPOSE22808443
例如：
格式为ExPOSE[...]。
5.EXPOSE
如果用户启动容器时候指定了运行的命令，则会覆盖掉CMD指定的命令。
只有最后一条会被执行。
指定启动容器时执行的命令，
口
CMD
cMD ["executable"，"param1"，"param2"]使用exec执行，推荐方式。
支持三种格式：
4.CMD
前者将在shell终端中运行命令，即/bin/sh-C；后者则使用exec执行。指定
格式为RUN或RUN["executable",
3.RUN
格式为MAINTAINER，指定维护者信息。
2.MAINTAINER
第一条指令必须为FROM指令。并且，如果在同一个1
格式为FROM或FROM:
1.FROM
CMD
第一部分Docker入门
["paraml"，"param2"]提供给ENTRYPOINT的默认参数。
commandparamlparam2在/bin/sh中执行，提供给需要交互的应用
，每个Dockerfile只能有一条CMD命令。
Dockerfle中创建多个镜像时，可
"paraml",
，如果指定了多条命
"param2"]
---
## Page 65
数据等。
一个生效。
。目标路径不存在时，会自动创建。
为目录）。
目录的一个相对路径（文件或目录）；也可以是一个URL；还可以是一个tar文件（自动解压
器运行时保持。例如：
创建一个可以从本地主机或其他容器挂载的挂载点，
每个Dockerfle中只能有一个ENTRYPOINT，当指定多个ENTRYPOINT时，只有最后
当使用本地目录为源目录时，推荐使用COPY。
该命令将复制指定的到容器中的。其中可以是Dockerfile所在
格式为VOLUME["/data"]。
10.VOLUME
配置容器启动后执行的命令，并且不可被dockerrun提供的参数覆盖。
ENTRYPOINT
ENTRYPOINT
有两种格式：
9.ENTRYPOINT
复制本地主机的（为Dockerfle所在目录的相对路径，文件或目录）为容器中的
格式为cOPY。
8.COPY
格式为ADD。
7.ADD
ENV PATH/usr/local/postgres-$PG_MAJOR/bin:$PATH
RUN
ENVPGMAJOR9.3
格式为ENV
ENV
6.ENV
curl -SL http://example.com/postgres-$PG_VERSION.tar.xz l tar -xJC /usr/
PG_VERSION9.3.4
。指定一个环境变量，会被后续 RUN 指令使用，并在容
command paraml param2（shell中执行）。
["executable",
"paraml",
第8章
"param2"]
一般用来存放数据库和需要保持的
使用Dockerfile创建镜像
51
---
## Page 66
础镜像时，会自动执行ONBUILD指令内容，等价于在后面添加了两条指令。
Dockerile使用如下的内容创建了镜像image-A。
的路径。例如：
postgres。要临时获取管理员权限可以使用 gosu，而不推荐 sudo。
52第一部分Docker入门
使用ONBUILD指令的镜像，推荐在标签中注明，例如ruby:1.9-onbuild。
RUN /usr/local/bin/python-build--dir/app/src
FROM image-A
ONBUILD RUN/usr/local/bin/python-build--dir/app/src
ONBUILD ADD
配置当所创建的镜像作为其他新创建镜像的基础镜像时，所执行的操作指令。例如，
格式为ONBUILD[INSTRUCTION]。
则最终路径为/a/b/c。
RUN pwd
可以使用多个WORKDIR指令，后续命令如果参数是相对路径，则会基于之前命令指定
#Automatically run the following
[..]
13.ONBUILD
WORKDIR
WORKDIR
WORKDIR
为后续的RUN、CMD、ENTRYPOINT 指令配置工作目录。
格式为wORKDIR/path/to/workdir。
12.WORKDIR
当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所
指定运行容器时的用户名或UID，后续的RUN也会使用指定用户。
格式为USERdaemon。
ADD
11.USER
/a
/app/src
O
---
## Page 67
给出了大量热门镜像的Dockerfle的介绍和使用方法。
DockerPool社区都提供了大量的Dockerfile范例供大家参考。在本书的第二部分中，笔者也
Docker“一点修改代替大量更新”的灵活之处。
令，以及使用它创建镜像的基本过程。在使用Dockerfile配置文件的过程中，读者能体会到
8.4
签为build_repo/first_image，可以使用下面的命令：
路径下的目录和文件。
般建议放置Dockerfle的目录为空目录。
的Dockerfile，并将该路径下所有内容发送给Docker服务端，由服务端来创建镜像。因此一
8.3