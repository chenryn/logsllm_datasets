subject to satisfying the very large set of constraints developed
in Sections II and III, whereas the one in [11] considers a
time to consider the state of all
small subset of such constraints. Therefore, our approximation
is more heavily constrained to be representative of the model
under study. Stemming from this last point, we remark that the
main limitation of the proposed MEM compared to the one
in [11] is that our method requires numerical optimization,
whereas [11] is based on simple closed-form formulas.
In addition to the MEM method, we introduce the MMI
criterion as a new technique for approximating an unknown
probability distribution of a queueing network. For a QR
marginal probability distribution, MMI considers the following
objective function
)
min
𝑛𝑖,𝑛𝑗 ,𝑘𝑖,𝑘𝑗 ,𝒎
𝜋𝐺(𝑛𝑖, 𝑛𝑗) log2
𝜋𝐺(𝑛𝑖, 𝑛𝑗)
𝜋𝐺(𝑛𝑖, 𝑛𝑖)𝜋𝐺(𝑛𝑗, 𝑛𝑗)
( ∑
Following standard information theory, the argument of the
minimization is the mutual information of 𝜋𝐺(𝑛𝑖, 𝑛𝑗), which
quantiﬁes how much the knowledge on the state of queue 𝑖
reduces our uncertainty about the state of station 𝑗. However,
by noting that for a product-form model the knowledge of the
state of a queue provides little information on the state of the
other stations (for a closed model it only provides an upper
bound 𝑛𝑗 ≤ 𝑁 − 𝑛𝑖 that becomes progressively looser as 𝑁
and 𝑀 increase), we conclude that the MMI solution may be
interpreted as a product-form-type approximation for a MAP
queueing network. That is, when the mutual information is
minimal, the corresponding marginal probability distribution
ﬁnds the description in which queues 𝑖 and 𝑗 are maximally
independent. Clearly, in networks with blocking the mutual
information is not in general minimal, since blocking yields
a strong dependence between the behavior of two (or even
more than two) queues. However, the fundamental idea of
our proposed method is that the blocking is already strongly
characterized by our QR marginal balances, hence MMI deals
only with allocating the portion of the probability mass that
remains unconstrained. We illustrate this concept below in a
“toy” example. Notice also that the MMI approach is expected
to be accurate especially in heavy load, where closed networks
progressively approach the behavior of open models due to the
formation of bottleneck stations whose service process, being
continuously busy, acts as an “arrival process” for the rest of
the network. Open networks are typically less inter-dependent
than their closed counterparts.
C. Toy Example
To better understand the properties of MEM and MMI,
consider the following illustrating example. The model
is
composed by three queues with exponential service rate 𝜇1 =
𝜇2 = 1, 𝜇3 = 2. The routing matrix is
⎡
⎣0 0.50
1
1
0
0
⎤
⎦
0.50
0
0
𝑃 =
(18)
3We stress that since here the focus is on approximation, rather than bounds,
one does not need to ensure global optimality of the ﬁnal result in order to
have a usable solution. As usual, the gap between primal and dual formulations
of the optimization program can be used as a measure of the relative quality
of 𝑓𝑜𝑏𝑗 (𝝅𝐺) with respect to its global optimum.
which is a special case for the topology shown in Figure 1.
Buffer capacities are 𝐹1 = 1, 𝐹2 = 𝐹3 = 𝑁, with 𝑁 = 3
being the job population; the blocking mechanism is RS-RD.
Despite its apparent simplicity, for this model the QR bounds
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:39 UTC from IEEE Xplore.  Restrictions apply. 
582provide the following estimates of upper bounds (𝑈 𝑚𝑎𝑥
lower bounds (𝑈 𝑚𝑖𝑛
𝑘:
) and
) on the exact utilizations (𝑈𝑘) of queue
𝑘
𝑘
𝑈 𝑚𝑎𝑥
𝑘
𝑈𝑘
𝑈 𝑚𝑖𝑛
𝑘
queue 1
0.5000
0.4828
0.4762
queue 2
0.7500
0.4483
0.3333
queue 3
0.9524
0.8966
0.7500
In this example, the utilization of queue 2 is loosely captured
by the QR bounds that leave a gap of about 42% between
the upper and lower limits. That is, the solver is allowed to
allocate the probability mass in ways that vary signiﬁcantly
with respect to the performance of queue 2, in other words,
queue 2 is not sufﬁciently constrained by the characterization
in Section III. A closer investigation reveals inconsistencies
on the solution with respect to the exact probabilities, e.g., for
the upper bound
𝜋𝐺
𝑜𝑝𝑡(𝑛1 = 1, 𝑘1 = 1, 𝑛2 = 1, 𝑘2 = 1) = 0.5000,
𝜋𝐺
𝑜𝑝𝑡(𝑛1 = 1, 𝑘1 = 1, 𝑛3 = 1, 𝑘3 = 1) = 0.1905
(19)
while for the lower bound
𝜋𝐺
𝑜𝑝𝑡(𝑛1 = 1, 𝑘1 = 1, 𝑛2 = 1, 𝑘2 = 1) = 0.0,
𝜋𝐺
𝑜𝑝𝑡(𝑛1 = 1, 𝑘1 = 1, 𝑛3 = 1, 𝑘3 = 1) = 0.0
(20)
which are both impossible since the two marginal probabilities
describe the same state (𝑛1 = 1, 𝑛2 = 1, 𝑛3 = 1, 𝑘1 = 1, 𝑘2 =
1, 𝑘3 = 1) in the original queueing network. In fact, in the
original model
𝜋(𝑛1 = 1, 𝑘1 = 1, 𝑛2 = 1, 𝑘2 = 1)
= 𝜋(𝑛1 = 1, 𝑘1 = 1, 𝑛3 = 1, 𝑘3 = 1) = 0.1379,
(21)
We have veriﬁed that such an unconstrained mass can be
allocated exactly by adding to 𝒪 the following consistency
constraint
𝜋(𝑛𝑗, 𝑘𝑗, 𝑛𝑖, 𝑘𝑖) = 𝜋(𝑛𝑗, 𝑘𝑗, 𝑛𝑡 = 𝑁 − 𝑛𝑗 − 𝑛𝑖, 𝑘𝑡),
for all choices of the stations 𝑖 ∕= 𝑗 ∕= 𝑡 and their states.
This provides the optimal solution 𝝅𝐺
𝑜𝑝𝑡 = 𝝅. This imposes
that, in a model with 𝑀 = 3 queues, there are at most two
degrees of freedom in assigning the populations 𝑛𝑖 and 𝑛𝑗
at the queues, since the population at the last queue will be
automatically set to 𝑛𝑡 = 𝑁 − 𝑛𝑖 − 𝑛𝑗. This constraint is
obvious but its integration in the QR marginal characterization
requires in general a cubic number equations for a model
with 𝑀 = 3 which is not consistent with the approach that
we have pursued; furthermore, for a model with 𝑀 ≥ 4
these constraints cannot be imposed using the QR marginal
probabilities, since one would need to express the state of
𝑀 − 1 queues simultaneously. This example highlights some
consequences of the structural limitation of QR marginal prob-
abilities; this limitation is that they cannot represent correctly
the allocations of jobs (or the active phases) on more than two
queues simultaneously.
We have then obtained the MEM and MMI solutions for
the above model and found them as follows
𝑘
𝑈 𝑚𝑒𝑚
𝑈 𝑚𝑚𝑖
𝑘
𝑈𝑘
queue 1
0.4887
0.4818
0.4828
queue 2
0.5515
0.4316
0.4483
queue 3
0.8464
0.9046
0.8966
which are much closer to the exact distribution that the QR
bound solution. Further, we have now
𝜋𝐺
𝑚𝑒𝑚(𝑛1 = 1, 𝑘1 = 1, 𝑛2 = 1, 𝑘2 = 1) = 0.2618,
𝜋𝐺
𝑚𝑒𝑚(𝑛1 = 1, 𝑘1 = 1, 𝑛3 = 1, 𝑘3 = 1) = 0.0907
(22)
and
𝜋𝐺
𝑚𝑚𝑖(𝑛1 = 1, 𝑘1 = 1, 𝑛2 = 1, 𝑘2 = 1) = 0.1180,
𝜋𝐺
𝑚𝑚𝑖(𝑛1 = 1, 𝑘1 = 1, 𝑛3 = 1, 𝑘3 = 1) = 0.1455
(23)
which provide a substantial consistency improvement com-
pared to the QR bounds, especially for the novel MMI method.
V. NUMERICAL VALIDATION
We illustrate the accuracy of the BAS and RS-RD bounds
on a set of case studies having different level of complexities,
number of queues, and network topology. Throughout
the
experiments, we use a combination of exponential service
processes and nonrenewal autocorrelated MAPs. We use the
GLPK linear programming solver to compute bounds and the
MINOS solver for nonlinear programs required to evaluate the
MEM and MMI approximations. For simplicity of comparison,
we always use a short-range dependent MAP process with
two-phases having representation [15]
[−1.016212022108574
[
0
1.016186165025678
0.001569887597955
D0 =
D1 =
]
]
0
−0.015702871508448
0.000025857082896
0.014132983910493
(24)
This yields a process with moments 𝐸[𝑋] = 1, 𝐸[𝑋 2] =
4, 𝐸[𝑋 3] = 400, and positive autocorrelation function 𝜌𝑘 =
3 ( 9
1
10 )𝑘 such that 𝜌1 = 0.300, 𝜌2 = 0.270, 𝜌3 = 0.243, . . .. On
a laptop computer, the hardest case study execution times were
less than 5 seconds for the QR bounds, about 300 seconds for
the nonlinear programs used for MIM/MEM. Note that we
used a single CPU core, nonlinear solvers running on multi-
core machines are usually 8-10 times faster, thus the nonlinear
solution can be signiﬁcantly accelerated.
A. Case Study 1
Let us ﬁrst consider a model composed of 𝑀 = 5 queues
with 𝑁 = 10 jobs, capacity 𝐹𝑖 = 5 for each queue
𝑖 = 1, . . . , 𝑀, and service processes all equal to the short-
range dependent MAP given in (24). Hence, all stations can
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:39 UTC from IEEE Xplore.  Restrictions apply. 
583CONSTRAINTS IMPOSING BASIC PROPERTIES OF 𝜋(𝑛𝑖, 𝑘𝑖, 𝑛𝑗 , 𝑘𝑗 , 𝒎) INCLUDED IN THE OPTIMIZATION PROGRAMS
TABLE II
∀𝒎
𝑛𝑖=𝑁−𝑛𝑗 +1∀𝒎
𝑘𝑗 =1∀𝒎
𝑗=1
∀𝑀
𝑖=1∀𝐹𝑖
𝑛𝑖=0∀𝐾𝑖
𝑛𝑗 =0∀𝐾𝑗
𝑘𝑖=1∀𝑀
𝑗=1∀𝐹𝑖
∀𝑀
∀𝑀
𝑗=1∀𝐾𝑗
𝑘=1∀𝐾𝑗
ℎ=1,ℎ∕=𝑘∀𝐹𝑗
𝑛𝑗 =0∀𝒎
𝑘=1∀𝐹𝑗
𝑗=1∀𝐾𝑗
∀𝑀
𝑛𝑗 =0∀𝐾𝑗
ℎ=1∀𝐹𝑗
𝑛′
𝑗 =0,𝑛′
𝑗∕=𝑛𝑗
𝑛𝑗 =0∀𝑀
𝑘=1∀𝐹𝑗
∀𝑀
𝑗=1∀𝐾𝑗
ℎ=1∀𝐹𝑖
𝑖=1,𝑖∕=𝑗∀𝐾𝑖
𝑗=1,𝑓∕=𝑗∀𝐾𝑗
∀𝑀
𝑛𝑗 =0∀𝒎:𝒎 /∈∅
𝑘=1∀𝐹𝑗
∀𝑀
𝑗=1∀𝐾𝑗
𝑘=1∀𝑀
𝑖=1∀𝐾𝑖
ℎ=1∀𝐹𝑖
𝑛𝑗 =𝐹𝑗 +1∀𝑀
𝑘=1∀𝑁
∀𝑀
𝑗=1∀𝐾𝑗
∑𝑀
∀𝐾𝑖
ℎ=1∀𝐹𝑖
𝑖=1
𝑖∕=𝑗∕=𝑓
∀𝑀
𝑗=1∀𝐹𝑗
𝑛𝑗 =0∀𝐾𝑗
∀𝑀
𝑗=1,𝑗∕=𝑖∀𝐾𝑗
𝑘=1∀𝐹𝑗
∀𝑀
𝑗=1∀𝐾𝑗
𝑗=1,𝑗∕=𝑖∀𝐾𝑗
𝑘=1∀𝐹𝑗
𝑛𝑗 =0∀𝐾𝑖
𝑖=1∀𝐹𝑖