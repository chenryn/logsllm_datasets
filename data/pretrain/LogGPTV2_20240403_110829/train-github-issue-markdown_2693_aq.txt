### Error Summary

During the build process of PyTorch with ROCm support, several errors were encountered. The primary issues include:

1. **Namespace and Function Mismatch**:
   - `thrust::cuda_cub` namespace is used, but `hip_rocprim` functions are expected.
   - For example, `thrust::cuda_cub::throw_on_error` should be `hip_rocprim::throw_on_error`.

2. **Undefined Types and Functions**:
   - `cudaStream_t` and `cudaError_t` types are not recognized, likely because they are specific to CUDA and not available in HIP (Heterogeneous-computing Interface for Portability).

3. **Incorrect Function Calls**:
   - `cudaDeviceSynchronize` and `cudaGetLastError` are called, but their HIP equivalents `hipDeviceSynchronize` and `hipGetLastError` should be used.

### Detailed Error Analysis

#### Namespace and Function Mismatch
- **Error**: No member named 'throw_on_error' in namespace 'thrust::cuda_cub'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/internal/copy_cross_system.h:65:5`
  - **Fix**: Replace `thrust::cuda_cub::throw_on_error` with `hip_rocprim::throw_on_error`.
  
- **Error**: No member named 'trivial_copy_to_device' in namespace 'thrust::cuda_cub'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/internal/copy_cross_system.h:61:14`
  - **Fix**: Replace `thrust::cuda_cub::trivial_copy_to_device` with `hip_rocprim::trivial_copy_from_device`.

- **Error**: No member named 'stream' in namespace 'thrust::cuda_cub'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/internal/copy_cross_system.h:64:47`
  - **Fix**: Replace `thrust::cuda_cub::stream` with `hip_rocprim::stream`.

#### Undefined Types and Functions
- **Error**: Unknown type name 'cudaStream_t'.
  - **Files**: 
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:37:28`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:43:1`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:62:3`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:66:26`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:71:10`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:79:10`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:107:21`
  - **Fix**: Replace `cudaStream_t` with `hipStream_t`.

- **Error**: Unknown type name 'cudaError_t'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/par.h:50:1`
  - **Fix**: Replace `cudaError_t` with `hipError_t`.

- **Error**: Use of undeclared identifier 'cudaDeviceSynchronize'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/par.h:53:3`
  - **Fix**: Replace `cudaDeviceSynchronize()` with `hipDeviceSynchronize()`.

- **Error**: Use of undeclared identifier 'cudaGetLastError'.
  - **Files**:
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:54:10`
    - `/opt/rocm/include/thrust/system/cuda/detail/par.h:96:12`
  - **Fix**: Replace `cudaGetLastError()` with `hipGetLastError()`.

- **Error**: Unknown type name 'cudaError'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/internal/copy_cross_system.h:60:5`
  - **Fix**: Replace `cudaError` with `hipError_t`.

- **Error**: Use of undeclared identifier 'cudaStreamLegacy'.
  - **File**: `/opt/rocm/include/thrust/system/cuda/detail/par.h:39:10`
  - **Fix**: Replace `cudaStreamLegacy` with the appropriate HIP equivalent or define it if necessary.

### Steps to Reproduce

1. **Environment Setup**:
   - Supported AMD card with ROCm installed.
   - OS: Ubuntu 19.04
   - GCC version: 8.3.0
   - CMake version: 3.15.2
   - Python version: 3.7.3
   - ROCm version: 2.7.22
   - GPU: Radeon VII

2. **Build Process**:
   - Hipify the source: `python3 tools/amd_build/build_amd.py`
   - Build with ROCm support: `USE_ROCM=1 USE_LMDB=1 USE_OPENCV=1 MAX_JOBS=8 python3 setup.py install --user`

### Expected Behavior

The build process should complete successfully without errors.

### Environment Details

- **PyTorch Version**: master
- **OS**: Ubuntu 19.04
- **Installation Method**: source
- **Build Command**: `USE_ROCM=1 USE_LMDB=1 USE_OPENCV=1 MAX_JOBS=8 python3 setup.py install --user`
- **Python Version**: 3.7.3
- **ROCm Version**: 2.7.22
- **GPU**: Radeon VII

### Conclusion

To resolve the build errors, you need to replace CUDA-specific types and functions with their HIP equivalents. Additionally, ensure that the correct namespaces and functions are used. This should allow the build process to complete successfully.