ing delay while being responsible for all losses along a path
may not be classiﬁed as a strongly dominant congested link.
However, when using a large value of ρ, this link can be
classiﬁed as a strongly dominant congested link.
All the results described before can be extended to a more
generalized form for the generalized deﬁnition of dominant
congested link: Proposition 2.1 and 2.2 are extended by
replacing i(cid:2)=k Qi with 1
ρ i(cid:2)=k Qi; Lemma 1 and 2 are
extended by replacing 2Qk with (1 + ρ)Qk; Theorem 1, 2
and the hypothesis tests are extended by replacing 2D with
(1+ρ)D. These results of the generalized form can be proved
in a similar manner. We only use ρ = 1 in this paper.
3.2 An example
We give an example to illustrate our hypothesis test for a
strongly dominant congested link. Suppose a path contains
K(K > 2) links and at least two of which are lossy. Let I
denote this set of lossy links. We assume all the links are
t > 0) ∈ (0, 1), where 1 ≤ i ≤ K.
independent and P (Di
Therefore as time goes to inﬁnity, for all the virtual probes
with loss marks, the smallest queuing delay is mini∈I Qi.
That is, D = mini∈I Qi by the deﬁnition of D in Theo-
where  > 0 is the queuing delay from all the links not in
rem 1. We will also observe a queuing delay of i∈I Qi + ,
I. It is clear that i∈I Qi +  > 2D since there are at least
two lossy links and the links are independent. Therefore,
FW (2D)  0. Since all losses occur at link k, by
the deﬁnition of FW (w), D ≥ Qk, where Qk is the maximum
queuing delay at link k. Therefore, D is an upper bound of
Qk. In general, the above estimation method applies to any
link (not necessarily a strongly dominant congested link) if
we know that all losses occur at that link.
Suppose link k is weakly dominant congested with param-
eters θ and φ. Then D deﬁned in Theorem 2 can be used as
an upper bound of the maximum queuing delay at link k,
Qk, since D ≥ Qk by the theorem. However, for link k with
a very small value of θ, we can usually apply the following
heuristic to obtain a tighter bound on Qk from the PMF of
W . When plotting the PMF of W , we choose the number of
bins such that in the PMF we observe a connected compo-
nent with most of the mass and the other components are
as separated as possible from this component. Then this
connected component corresponds to the distribution from
the weakly dominant congested link by the nature of the
weakly dominant congested link. We use the smallest delay
value that has probability signiﬁcantly larger than 0 in this
component as the estimate of the maximum queuing delay
of the weakly dominant congested link. If no separated com-
ponents are distinguished from the PMF, D is used as the
estimate. We illustrate this method using an example in
Section 5.1.2 .
4. MODEL-BASED IDENTIFICATION OF
DOMINANT CONGESTED LINK
In Section 3, the identiﬁcation of a dominant congested
link relies on FW (w), the queuing delay distribution of vir-
tual probes with loss marks.
In this section, we describe
how this distribution can be obtained using real probes. A
virtual probe diﬀers from a real probe in that it has an end-
end delay even if it is marked as lost in the middle while a
real probe does not have a delay if it is lost (indeed, it is not
received at the end point). Analogous to the queuing delay
of a virtual probe, we associate a virtual queuing delay with
a lost real probe as follows. When a probe is lost at link
k, we assign it the maximum queuing delay at link k and
a queuing delay based on the queue occupancy at each of
remaining links.
Let W represent the virtual queuing delay of a lost probe
and FW (w) present the CDF of W . As in Section 3, W
is represented using discretized values. Denote the small-
est and the largest end-end delays of all the probes not lost
as Dmin and Dmax respectively.
If the end-end propaga-
tion delay along the path D0 is known, we divide the range
[0, Dmax − D0] into M equal length bins. Otherwise, we
use Dmin to approximate D0. Our simulation and exper-
iments in Section 5 shows that the inaccuracy caused by
this approximation is negligible when the probing duration
is longer than several minutes.
Two methods can be used to obtain FW (w): an empirical
method and a model-based method. An example of the em-
pirical method is by loss pairs [12] where the queuing delay
of the packet not lost is used as the virtual queuing delay of
the lost packet. This is not always accurate since, as shown
in [12], the measurement noise (e.g., caused by cross traﬃcs)
renders the distribution obtained from loss pairs inaccurate.
If a strongly dominant congested link k exists, the minimum
delay D such that FW (D) > 0 is required to satisfy D ≥ Qk
by Theorem 1. However, measurements from loss pairs can-
not guarantee this property, since the successful packet in
a loss pair does not necessarily experience the maximum
queuing delay at link k because of cross traﬃc. A similar
argument applies to weakly dominant congested links.
Dt2−Dt1
t2−t1
In this paper, we focus on the model-based approach,
where we infer the virtual queuing delay distribution FW (w)
using both measurements and a model. We experiment with
three models. The ﬁrst model uses simple linear interpola-
tion. Suppose a probe sent at time t is lost. Assume the
successful probes immediately before and after it are sent at
time t1 and t2 respectively. Then the virtual queuing delay
(t − t1) + Dt1 . This model cal-
for probe t is Dt =
culates the virtual queuing delay for each lost probe, which
is then used to obtain the distribution. We ﬁnd that the
results are inaccurate for some cases. An example is shown
in Section 5.1.1. The second model is based on a hidden
Markov model (HMM) [23]; the third one is based on the
model introduced in our previous work [24], which in this pa-
per we refer to as a Markov model with a hidden dimension.
In both models, we interpret a loss as a delay with a missing
value and develop expectation and maximization (EM) algo-
rithms to obtain FW (w). We ﬁnd that the results from the
second model ( i.e., HMM) are not accurate (see one example
in Section 5.1.3). This is mainly because the state space of
this model does not contain delay observations. Hence the
correlation in the delay observations is not well captured.
The third model captures this correlation more accurately.
Due to space limitations, we only describe the third model
in detail.
4.1 An EM algorithm to infer the virtual queu-
ing delay distribution FW (w)
We now describe the inference procedure for FW (w), using
the third model, a Markov model with a hidden dimension.
We refer to a discretized queuing delay observation as a delay
symbol. Suppose there are M delay symbols and N hidden
states in this model. Each state of the model Zt contains
two components: the hidden state Xt ∈ {1, 2, . . . , N} and
the delay symbol Yt ∈ {1, 2, . . . , M}. That is, Zt = (Xt, Yt).
This state representation diﬀers from what is used in a tradi-
tional HMM [23], where each state contains only the hidden
component but not the observation.
Let π denote the initial distribution of the states. Let
P denote the probability transition matrix. An element in
the transition matrix P is denoted as p(i,j)(k,l), which rep-
resents the transition probability from state (i, j) to state
(k, l). Note that the model reduces to a Markov model
when N = 1. This is because when N = 1, every state
in the model contains the same hidden state and is only dif-
ferentiated by the delay symbol. Let yt be the observation
value for Yt. If at time t, the observation is a loss, we regard
it as a delay with a missing value and use yt = ∗ to denote
it. A loss observation has a certain probability of having
a delay symbol of j, 1 ≤ j ≤ M . Let s(j) be the condi-
tional probability that an observation is a loss given that
its delay symbol is j. That is, s(j) = P (yt = ∗ | yt = j).
Let λ = (P, π, s) denote the complete parameter set of the
model. An EM algorithm is an iterative procedure to infer
λ from a sequence of T observations. It ends when a certain
convergence threshold is reached. The detailed description
of the EM algorithm is in Appendix A.
After obtaining the model parameters, we obtain FW (w)
from fW (w), which denotes the PMF of W . That is, fW (w) =
P (yt = w | yt = ∗) and fW (w) is computed by
T
t=1 1(yt = w)
t=1 1(yt = ∗)
s(w)

fW (w) =
T
(7)
where 1(·) is the indicator function. This equation follows
from Bayes formula: the numerator corresponds to the prob-
ability that a loss has delay symbol of w and the denomina-
tor corresponds to the probability of loss in the sequence of
T observations. Note that s(w) is obtained from the the EM
algorithm, where the entire observation sequence is utilized
as shown in the derivation. Therefore FW (w) is obtained
by using the information in the entire observation sequence,
not only the loss observations.
4.2 An alternative interpretation of the virtual
queuing delay distribution
We now provide an alternative interpretation of the vir-
tual queuing delay distribution. Suppose the observation
sequence {yt}T
t=1 is generated by a Markov model with a
hidden dimension. The model has the parameter space of
λ = (P, π, s). At time t, the model generates a delay symbol
of j. With probability of s(j), this delay symbol generates
a loss observation; with probability of 1 − s(j), this delay
symbol generates a delay observation of j. The virtual delay
of a loss observation can then be alternatively regarded as a
delay symbol from which the loss is generated.
5. VALIDATIONS
In this section, we validate the model-based identiﬁcation
method using both ns simulations and live Internet mea-
surements. We further explore the eﬀects of the parameters
in the model (e.g., M , N , the convergence threshold in the
EM algorithm, etc.) and the probing duration required for
correct identiﬁcation.
5.1 Validation using ns simulations
We use a topology containing four routers r0, r1, r2 and
r3 in the ns simulation, as shown in Fig. 5. Link (ri, ri+1)
denotes the link from router ri to ri+1, where 0 ≤ i ≤ 2. The
bandwidth and the maximum queue length of link (ri, ri+1)
are varied to create diﬀerent scenarios. For all other links
(from a source or a sink to a router), the bandwidth is 10
Mbps and the maximum queue size is set so that no loss
occurs. We add TCP ﬂows from router ri to rj, where 0 ≤
i < j ≤ 3. The number of TCP ﬂows from router ri to rj
ranges from 1 to 10. In addition, we create HTTP traﬃc
TCP
sources
10Mb
TCP
sinks
10Mb
HTTP
servers
UDP
sources
r0
r1
r2
r3
HTTP
clients
F
M
P
probes
Figure 5: Topology used in ns.
UDP
sinks
 1
 0.8
 0.6
 0.4
 0.2
 0
model N=1
model N=2
virtual empirical
interpolation
observed
 1
 2
 3
Delay
 4
 5
from router ri to rj, where 0 ≤ i < j ≤ 3. The HTTP
traﬃc is generated using the empirical data provided by ns.
We further add UDP on-oﬀ traﬃc on link (ri, ri+1). The
propagation delay of link (ri, ri+1) is 5 ms. The propagation
delay from a source or a sink (TCP, HTTP or UDP) to its
corresponding router is uniformly distributed in [10, 20] ms.
Probe packets are sent periodically along the path from r0
to r3 at an interval of 20 ms. The packet size of a probe
packet is 10 bytes. Therefore, the traﬃc generated by the
probing process is 4 Kbps, which is much smaller than the
link bandwidths used in the simulation.
Each simulation runs for 2, 000 seconds. We ﬁrst use the
second 1, 000 seconds of the trace to identify whether there
exists a dominant congested link. We then investigate the
length of the probing duration required for accurate iden-
tiﬁcation. We obtain the minimum and maximum end-end
delay Dmin and Dmax from the probes in a selected interval.
We assume the propagation delay along the path D0 is un-
known and use Dmin to approximate D0. We then discretize
the range of queuing delay [0, Dmax − D0] into 5 symbols,
i.e., M = 5, with queuing delays taking values in {1, . . . , 5}.
We choose the number of hidden states N to be in the range
of 1 to 4. The convergence threshold in the EM algorithm is
−5. Unless otherwise stated, we use the Markov
10
model with a hidden dimension.
−4 or 10
In ns simulation, we know the queue occupancy at each
router at any time. Therefore, we are able to obtain the
virtual queuing distribution empirically. We compare the
virtual queuing distributions obtained empirically and from
the models for validation. For a setting in which a dominant
congested link exists, we estimate the maximum queuing
delay at the dominant congested link using our model-based
approach (see Section 3.3) and the loss pair approach [12].
To obtain an accurate estimation, we discretize delays more
ﬁnely and use M = 20 or 40. When using the loss pair
approach, packet pairs are sent along the path from r0 to
r3 at an interval of 40 ms so that the estimations from our
model-based approach and the loss pair approach are based
on the same number of probes.
5.1.1 A strongly dominant congested link
We ﬁrst investigate settings in which a strongly dominant
congested link exists. In particular, we set the various pa-
rameters so that losses only occur at link (r0, r1). The buﬀer
sizes at router r0, r1 and r2 are 20 Kb, 80 Kb and 80 Kb
respectively. The bandwidths of links (r1, r2) and (r2, r3)
are both 10 Mbps. The bandwidth of link (r0, r1) is varied
Figure 6: PMFs of the observed and virtual queuing
delays for a setting in which link (r0, r1) is a strongly
dominant congested link.