### Specialized Deployments and Protocols

Protocols have been developed for specialized deployments, including wireless sensor networks [22, 24, 25], underwater sensor networks [20, 31, 32], and acoustic networks [50]. Significant research has also been conducted on the synchronization accuracy of NTP, leading to protocol improvements and the development of new protocols such as [21, 38, 46, 47, 52].

### MNTP and Clock Synchronization

Our work on MNTP (Mobile Network Time Protocol) is related to this research. We design mechanisms to improve the accuracy of clock synchronization using SNTP (Simple Network Time Protocol) through wireless channel-aware pacing of synchronization requests. Additionally, we propose enhancements to filtering and clock correction heuristics.

### Experimental Setup and Results

#### Figure 10: Reported SNTP Offsets on Wired Network vs. MNTP Offsets on Wireless Network without NTP Clock Correction

We collected offsets reported by an SNTP client connected to a wireless host and simultaneously recorded the offsets reported by MNTP. During the experiment, the wireless host's clock was allowed to drift, with NTP clock correction turned off.

#### Figure 12: Comparison of SNTP and MNTP Offsets on a Wireless Network without NTP Clock Correction

The comparison in Figure 12 shows the offsets reported by standard SNTP and MNTP on a wireless network without NTP's clock correction. The fitted trend line for clock skew and the clock correction capabilities of MNTP, along with the large offsets rejected by MNTP, are also displayed. We observed high offsets with SNTP, reaching up to 392 ms, while the offsets reported by MNTP were always less than 20 ms, as seen from MNTP’s clock-corrected drift values (shown in blue). Many of the large offsets reported by SNTP were effectively rejected by MNTP’s filtering logic, resulting in robust and accurate clock synchronization for wireless devices despite lossy channel conditions.

### Tuning MNTP

To tune the four parameters of MNTP—warmupPeriod, warmupWaitTime, regularWaitTime, and resetPeriod—we developed a standalone tool called the MNTP tuner. This tool performs trace-driven analysis on recorded clock offset values to evaluate the impact of various input parameter choices and their suitability under different network conditions.

#### Components of the MNTP Tuner

- **Logger**: Runs on the testbed and emits SNTP requests to multiple reference clocks every 5 seconds, recording the responses and corresponding wireless hints.
- **Emulator**: Runs the MNTP algorithm using the captured traces and wireless hints, printing the offsets reported by MNTP.
- **Searcher**: Evaluates the impact of various parameter configurations and identifies the most suitable settings.

#### Table 2: Sample List of Parameter Values, RMSE of Offsets, and Number of Requests

| Configuration | warmupPeriod (min) | warmupWaitTime (min) | regularWaitTime (min) | resetPeriod (min) | RMSE (ms) | Number of Requests |
|---------------|--------------------|----------------------|-----------------------|-------------------|-----------|--------------------|
| 1             | 30                 | 0.25                 | 15                    | 240               | 13.08     | 239                |
| 2             | 40                 | 0.25                 | 15                    | 240               | 11.66     | 316                |
| 3             | 50                 | 0.25                 | 15                    | 240               | 11.09     | 387                |
| 4             | 70                 | 0.25                 | 30                    | 240               | 10.86     | 534                |
| 5             | 90                 | 0.084                | 15                    | 240               | 9.27      | 1210               |
| 6             | 240                | 0.084                | 15                    | 240               | 8.9       | 2913               |

### Future Work

In future work, we plan to extensively test and enhance our MNTP implementation for broader deployment. We also intend to build a reference NTP implementation and benchmark MNTP against SNTP and NTP in terms of processor and battery performance on various mobile platforms. Additionally, we will investigate self-tuning of parameter settings and evaluate MNTP in a wider variety of cellular and WiFi settings to assess the trade-offs between performance and parameter tuning. Long-term in situ experiments will be conducted to evaluate MNTP’s effectiveness in day-to-day operation.

### Acknowledgements

We thank the NTP operators for providing server logs and Sharon Goldberg and the anonymous reviewers for their valuable comments. This work is supported by the NSF under grant CNS-1054985, DHS grant BAA 11-01, and AFRL grant FA8750-12-2-0328. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF, DHS, or AFRL.

### References

[References listed as provided in the original text]