the key space is small enough for all possible keys to be
included. Second, the random numbers are controllable.
In addition, the secret key and the tag ID are combined
in such a way that for each session key there exists ex-
actly one key for each ID that would result in that session
key. The key and the ID are shifted into the register se-
quentially, but no non-linearity is mixed in during this
process. As explained in Section 2.2, for every delta of
ID bits, there exists a delta of key bits that corrects for
the difference and results in the same session key. There-
To summarize the threat to systems that rely on Mifare
encryption for security, we illustrate a possible attack.
An attacker would ﬁrst scan the ID from a valid card.
This number is unprotected and always sent in the clear.
Next, the attacker would pretend to be that card to a legit-
imate reader, record the reader message of the challenge-
response protocol with controlled random nonces, and
abort the transaction. Given only two of these messages,
the key of the card can be found in the pre-computed
rainbow tables in a matter of minutes and then used to
read the data from the card. This gives the attacker all
the information needed to clone the card.
190 
17th USENIX Security Symposium 
USENIX Association
4 Discussion
The illustrated attack is yet another example of security-
by-obscurity failing. Weaknesses in the exposed cipher
reveal the pitfalls of proprietary cipher design without
peer-review. A few changes in the design would have
made some of the discussed attacks infeasible and could
have increased the key size within the same hardware
constraints to make brute-force attacks less likely. Much
better security, however, can only be achieved through
better, more thoroughly analyzed ciphers.
4.1 Potential Fixes
The system is vulnerable against codebook attacks be-
cause of its weak random numbers and the linear combi-
nation of key and ID. Both can be ﬁxed without adding
extra hardware or slowing down the operation.
Better, yet still not cryptographically sound, random
numbers can be generated by exploiting the fact that
memory cells are initially in an undetermined state [10].
The same behavior can be caused in ﬂip-ﬂops like those
that make up the state register of the stream cipher simply
by not resetting the ﬂip-ﬂops at initialization time. The
cipher state would start in a random state and then evolve
using the cipher’s feedback loop until a random number
is needed. At this point, the register contains a mostly
unpredictable number of the size of the state register.
Because this design generates random numbers within
the same registers that are used for the cipher states, it
eliminates the need for a separate additional PRNG cir-
cuit. The saved area could then be spent on increasing the
size of the cipher state. In the area of the 48-bit Crypto-1
and its 16-bit RNG, a 64-bit stream cipher that also pro-
duces signiﬁcantly better pseudo-random number could
hence be implemented. This increases the size and qual-
ity of the random numbers and at the same time increases
the key size beyond the point where brute-force attacks
can be done cheaply.
To further improve the resistance against codebook at-
tacks, the non-linear feedback should be combined with
either key or ID when shifted into the register to break the
bijective mapping between different key-ID pairs. This
measure does not increase implementation costs, since
we only integrate the output of the ﬁlter function which
is already computed.
To improve the resistance of the cipher against statisti-
cal attacks, the update function must be made non-linear,
either by feeding some intermediate result of the ﬁlter
function into the linear register or by using a non-linear
feedback shift register instead.
None of the possible ﬁxes will make the cipher appropri-
ate for high security applications, but they improve the
resistance against the most concerning attacks and can
be done without any additional implementation cost.
4.2 Possible Defenses
Possible ways to protect against the described attacks
include using standard, peer-reviewed, established cryp-
tography such as the 3-DES block cipher that is already
found on some of the more expensive cards including
some of the Mifare line of products. A cheaper alterna-
tive that can be implemented in about twice the size of
Crypto-1 is the Tiny Encryption Algorithm (TEA) [12,
18]. This established low-cost block cipher has pub-
licly been scrutinized for several years and is so far only
known to be vulnerable to some expensive attacks [11].
While TEA is far more secure than Crypto-1, it is also
much slower. A Mifare authentication takes little more
than one millisecond, while a minimum-size implemen-
tation of TEA would take about ten times as long. This
would still be fast enough for most applications where
Mifare cards are currently used.
Other known ways to protect against card cloning in-
clude fraud detection algorithms that are widely used in
monitoring credit card transactions. These algorithms
detect unusual behavior and can prevent fraudulent trans-
actions, but require storing and analyzing transaction
data, which runs contrary to the desire for privacy in
RFID applications. Fraud protection systems also re-
quire all readers to be constantly connected to a central
server, which is not the case in some of the current and
planned deployments of RFID tags where ofﬂine readers
are used.
Tamper-prooﬁng can be used to protect secret keys
from attackers, but provides little help against hardware
reverse-engineering because the structure of the circuits
will always be preserved. The implementation, however,
could be obfuscated to increase the complexity of the cir-
cuit detection. While we believe that obfuscations will
not make our approach infeasible, we do not yet know
to what degree obfuscations could increase the effort and
cost required to reverse-engineer a circuit.
All low-cost cryptographic RFID tags are currently ill-
suited for high security applications because they lack
tamper-prooﬁng and are vulnerable to relay attacks. In
USENIX Association  
17th USENIX Security Symposium 
191
these attacks, the communication between a legitimate
reader and a valid card is relayed through a tunnel
thereby giving the reader the false impression that the
card is in its vicinity. No level of encryption can pro-
tect against relay attacks and new approaches such as
distance bounding protocols are needed [8].
5 Conclusions
Reverse-engineering functionality from silicon imple-
mentations can be done cheaply, and can be automated
to the point where even large chips are potential targets.
This work demonstrates that the cost of ﬁnding the algo-
rithm used in a hardware implementation is much lower
than previously thought. Using template matching, algo-
rithms can be recovered whose secrecy has so far pro-
vided a base for security claims. The security of embed-
ded cryptography, therefore, must not rely on obscurity.
Any algorithm given to users in form of hardware can
be disclosed even when no software implementation ex-
ists and black-box analysis is infeasible. Once the de-
tails of a cryptographic cipher become public, its secu-
rity must rely entirely on good cryptographic design and
sufﬁciently long secret keys.
The cryptographic strength of any security system de-
pends on its weakest link. Besides the cryptographic
structure of the cipher, weaknesses can arise from pro-
tocol ﬂaws, weak random numbers, or side channels.
When random numbers are weak and the user identiﬁca-
tion is not properly mixed into the secret state, codebooks
can be pre-computed that lead to attacks that are much
more efﬁcient than brute force. In the case of the Mifare
Classic cards, the average attack cost shrinks from sev-
eral hours to minutes. Their cryptographic protection is
hence insufﬁcient even for low-valued transactions.
The question remains open as to whether security can be
achieved within the size of the Mifare Crypto-1 cipher.
The area of less than 500 gates may be too small to even
hold a sufﬁciently large state, regardless of the circuits
needed for the complex operations required for strong
ciphers.
Acknowledgments. This work was partially funded by
the National Science Foundation through the CyberTrust
program, award CNS 0627527. Any opinions, ﬁndings
and conclusions or recommendations expressed in this
paper are those of the authors and do not necessarily re-
ﬂect those of the National Science Foundation.
References
[1] Ross Anderson. A5. Post to sci.crypt, 17 June
1994.
[2] L. R. Avery, J. S. Crabbe, S. Al Soﬁ, H.
Ahmed, J. R. A. Cleaver, D. J. Weaver.
Reverse Engineering Complex
Application-Speciﬁc Integrated Circuits
(ASICs). In Diminishing Manufacturing
Sources and Material Shortages Conference,
2002.
[3] Andrey Bogdanov. Attacks on the KeeLoq
Block Cipher and Authentication Systems. In
RFIDSec, 2007.
[4] Stephen C. Bono, Matthew Green, Adam
Stubbleﬁeld, Ari Juels, Aviel D. Rubin, and
Michael Szydlo. Security Analysis of a
Cryptographically-Enabled RFID Device. In
USENIX Security Symposium, 2005.
[5] Harvey G. Cragon. From Fish to Colossus:
How the German Lorenz Cipher was Broken
at Bletchley Park. Cragon Books, 2003.
[6] Electronic Frontier Foundation. Cracking
DES. In Secrets of Encryption Research,
Wiretap Politics & Chip Design, O’Reilly &
Associates Inc., 1998.
[7] Martin Feldhofer, Sandra Dominikus, and
Johannes Wolkerstorfer. Strong
Authentication for RFID Systems using the
AES Algorithm. In Workshop on
Cryptographic Hardware and Embedded
Systems, 2004.
[8] Gerhard P. Hancke and Markus G. Kuhn. An
RFID Distance Bounding Protocol. In
SecureComm, 2005.
[9] Martin E. Hellman. A Cryptanalytic
Time-Memory Trade-Off. In IEEE
Transactions on Information Theory, 1980.
[10] Daniel E. Holcomb, Wayne P. Burleson, and
Kevin Fu. Initial SRAM state as a Fingerprint
and Source of True Random Numbers for
RFID Tags. In RFIDSec, 2007.
[11] Seokhie Hong, Deukjo Hong, Youngdai Ko,
Donghoon Chang, Wonil Lee, and Sangjin
Lee. Differential Cryptanalysis of TEA and
XTEA. In International Conference on
Information Security and Cryptology, 2003.
[12] Pasin Israsena. Securing Ubiquitous and
Low-cost RFID Using Tiny Encryption
Algorithm. In International Symposium on
Wireless Pervasive Computing, 2006.
[13] Auguste Kerckhoffs. La Cryptographie
Militaire. In Journal des Sciences Militaires,
192 
17th USENIX Security Symposium 
USENIX Association
1883.
[14] J. P. Lewis. Fast Normalized
Cross-Correlation. In Vison Interface, 1995.
[15] Philippe Oechslin. Making a Faster
Cryptanalytic Time-Memory Trade-Off. In
Crypto, 2003.
[16] NXP Semiconductors. Philips
Semiconductors leads contactless smart card
market, 2006.
[17] Andrew Tanenbaum. News Summary of
Broken Dutch Public Transit Card.
www.cs.vu.nl/˜ast/ov-chip-card
[18] David J. Wheeler and Roger M. Needham.
TEA, a Tiny Encryption Algorithm. In Fast
Software Encryption, 1994.
USENIX Association  
17th USENIX Security Symposium 
193