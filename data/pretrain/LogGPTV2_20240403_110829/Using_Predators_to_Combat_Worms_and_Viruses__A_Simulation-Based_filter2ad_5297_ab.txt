and predators can be modeled using the Lotka-Volterra
equations from biomathematics. Let x(t) be the virus popu-
lation and y(t) be the predator population at any given time
instant t. Then, the following differential equations model
the virus-predator interactions:
dx(t)
dt
= r · x(t) − a · x(t) · y(t)
dy(t)
dt
= b · x(t) · y(t)
(x(0), y(0)) = (x0, y0)
where x0 is the initial number of viruses, y0 is the initial
number of predators, r is the viral multiplication rate, a is
the predatory rate and b is the predator multiplication rate.
The equations have no analytical solution, but are instead
approximated numerically. Figure 3.1 shows the result of
an orbit generated by a single run of the simulator with a
virus fanout of 4 and a predator fanout between 0 and 8,
compared with the results predicted by the Lotka-Volterra
equations with r = 1.3, a = 0.015 and b = 0.015. In
both simulator and the Lotka-Volterra system, x0 = 200
and y0 = 1. The results show that the simulator behaves as
a Lotka-Volterra system.
3.2. Predator Effectiveness
In our experiments, we simulated four types of predator:
e
c
a
p
S
s
u
r
i
V
600
500
400
300
200
100
0
0
An orbit in Virus-Predator space
f(x)
Predator launched at 200/800
100
200
400
300
500
Predator Space
600
700
800
Figure 3. Lotka-Volterra orbit f(x) compared
with simulation results.
(cid:127) Classic predator. This predator can only disinfect, not
immunize, and dies immediately when it propagates to
an uninfected system.
(cid:127) Persistent predator. This predator is similar to the clas-
sic model, the only difference being that it doesn’t die
immediately when an uninfected system is encoun-
tered. Instead, it waits for a ﬁxed amount of time, dur-
ing which it destroys the ﬁrst incoming virus and prop-
agates, or dies if no virus arrives.
(cid:127) Immunizing predator. This predator differs from
the previous models in two ways. First, when-
ever it reaches a new system, it renders that system
permanently immune to any future attacks. Sec-
ond, it propagates regardless of whether a virus is
found on the system or not.
(cid:127) Seeking predator. This predator is an extension of the
immunizing predator, with the ability to inspect e-mail
logs and follow the same path as an incoming or out-
going viruses. This enables the predator to target in-
fected machines rather than propagating randomly.
Figure 4 compares the effect of the classic and immu-
nizing predators against an e-mail virus. In these experi-
ments, the network size was 800, virus fanout 4, and preda-
tor fanout 8. In every case, the predator was injected into
the network when the infection rate reached 25%. As the re-
sults show, the immunizing predator is superior to the clas-
sic, and manages to disinfect the network at a rate roughly
the same as the rate at which it was infected. Nevertheless, it
should be pointed out that the classic (and persistent) preda-
tor is still useful for combating a virus or worm for which
no patch is available, or in situations where the use of an im-
munizing predator is not feasible.
Figure 5 shows the effectiveness of increasing the fanout
of the immunizing predator. When the fanout is increased
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Propagation with Predator (800 Clients)
Email and Virus Traffic
i
s
e
n
h
c
a
M
d
e
t
c
e
f
n
I
900
800
700
600
500
400
300
200
100
0
0
20
No Predator
Predator w/o Immunization
Predator w/i Immunization
60
40
120
Time in Hundreds of Seconds
100
80
140
160
c
i
f
f
a
r
T
60
50
40
30
20
10
0
0
Total traffic
Virus Traffic
Predator Traffic
2000
4000
6000
8000
10000
12000
Time in seconds
Figure 4. Predator effect on virus population.
Figure 6. Network trafﬁc when fanout=8.
i
s
e
n
h
c
a
M
d
e
t
c
e
f
n
I
Predator with High Fanout (800 Clients)
600
500
400
300
200
100
0
0
20
Predator w/i Fanout = 08
Predator w/i Fanout = 16
60
40
120
Time in Hundreds of Seconds
100
80
140
160
Figure 5. Fanout effect on performance.
to this amount, it has the effect of immediately arresting the
spread of the virus and quickly cleaning up the network.
An additional and perhaps surprising beneﬁt of increas-
ing the fanout is that the overall network trafﬁc level is re-
duced. Figure 6 shows observed virus and predator trafﬁc
The normal email trafﬁc before the virus hits the network is
around 8-9 emails/sec. The virus was introduced in the sys-
tem at t=2898 secs, at which point one can clearly see an
exponential increase in total email trafﬁc. The predator is
introduced at around t = 4100 secs, when 200 out 800 ma-
chines are infected. The predator trafﬁc never increases be-
yond 5 emails/sec. The predator has a fanout of 8, but it
will die in 75% of the cases initially, since only 200 out of
800 machines are infected, and will effectively propagate
with a fanout of only 2. So, effective fanout of the preda-
tor will depend on the percentage of infected machines. By
the time t = 9000 secs, the virus is completely eradicated.
c
i
f
f
a
r
T
25
20
15
10
5
0
Email and Virus Traffic
Total traffic
Virus Traffic
Predator Traffic
0
2000
4000
6000
8000
10000
12000
Time in seconds
Figure 7. Network trafﬁc when fanout=16.
Figure 7 shows the trafﬁc characteristics when the fanout
of the predator is increased to 16, which is 4 times the fanout
of the virus. As in the earlier case, virus was introduced at
t=2898 secs, and the predator was introduced when 25% of
the machines became infected. As the results show, preda-
tor trafﬁc peaks much higher than in Figure 6, though the
total trafﬁc is still much less, due to quick containment of
the virus. By time t = 7500 secs, the virus has been com-
pletely removed from the system.
The conclusion one can draw from this that the in cases
where the size of the predator is close to the size of the virus,
then increasing the fanout will eradicate the virus while con-
suming less network bandwidth. In cases where the size of
the predator is much larger than the size of the malware
(e.g., a large patch must be installed in order to immunize
each machine), then the overall trafﬁc may increase when
the fanout is set to 16.
Figure 8 illustrates the effectiveness of the persistent
predator. Recall that the persistent predator does not im-
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Varying Time to Live, Without Immunization
Cleanup times for varying Predator Fanout
1000
800
600
400
200
i
s
e
n
h
c
a
M
d
e
t
c
e
f
n
I
0
0
Time to Live = 0secs
Time to Live = 1sec
Time to Live = 1000sec
2000
4000
6000
8000
10000 12000
Time in seconds
s
d
n
o
c
e
S
n
i
s
e
m
T
p
u
n
a
e
C
l
i
2000
1800
1600
1400
1200
1000
800
600
400
200
0
Predator Fanout/Virus Fanout
0
0.2
0.4
0.6
0.8
1
1.2
Fanout Ratio - Predator/Virus
Figure 8. Persistent predator effectiveness.
Figure 11. Clean up time as function of
predator-to-virus fanout.
i
s
e
n
h
c
a
M
d
e
t
c
e
f
n
I
800
700
600
500
400
300
200
100
0
0
20
Predator follows Virus in an intranet
Predator Independent
Predator Follows Virus
60
40
120
Time in hundred of seconds
100
80
140
160
Figure 9. Seeking predator effectiveness.
munize the machine, but is capable of killing the virus as
long as it is present on the machine. When the time-to-live
is zero (the classic predator), we get a stable system, where
virus and predator populations balance out, and the num-
ber of infected machines becomes stable at 600 out of 800,
which is 75% of the whole network. If we increase the time-
to-live to even a small positive value, the stable population
of infected machines drops down to less than 5%. Further-
more, the rate of decrease is close to that observed for the
immunizing predator. Of course, there are still a number of
major drawbacks in comparison to an immunizing preda-
tor, such as the fact that at any point in time a small but sig-
niﬁcant number of machines are infected by the virus, so
that the predator and virus will continue to consume net-
work and processing resources ad inﬁnitum.
Figure 9 illustrates the effectiveness of
the seek-
ing predator, which is nearly identical to the immunizing
predator, with the enhancement that it has the ability to per-
form a forensic analysis a determine which hosts the virus
or worm is likely to have infected and propagate to those
machines ﬁrst. As Figure 9 shows, the ability to seek sig-
niﬁcantly improves performance.
3.3. Rapidly-spreading worms
A third set of experiments were done to explore
the effectiveness of predators against
rapidly spread-
ing worms/viruses. Of particular concern is the fanout of
the predator required to quickly eliminate worms from the
network, as the designer of a predator wants to use the mini-
mum amount of fanout required to eliminate the virus/worm
in a reasonable amount of time.
Along these lines, experiments were done to measure
the clean-up times required for varying degrees of preda-
tor and virus fanout. The results of these experiments are
shown in Figure 10. In these experiments, a rapidly spread-