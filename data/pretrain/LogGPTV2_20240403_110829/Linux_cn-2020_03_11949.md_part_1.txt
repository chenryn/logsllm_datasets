---
author: Mickey Petersen
category: 技术
comments_data:
- date: '2020-03-18 22:03:39'
  message: 感谢翻译分享，很棒的文章, iloveemacs ;)
  postip: 39.169.169.161
  username: 来自39.169.169.161的 Firefox 74.0|GNU/Linux 用户
count:
  commentnum: 1
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 9276
date: '2020-03-02 09:36:00'
editorchoice: true
excerpt: 我喜欢 Emacs 附带的游戏和玩具。它们大多来自于，嗯，我们姑且称之为一个不同的时代：一个允许或甚至鼓励奇思妙想的时代。
fromurl: https://www.masteringemacs.org/article/fun-games-in-emacs
id: 11949
islctt: true
largepic: /data/attachment/album/202003/02/093413ky6flwwd3wanl46a.jpg
permalink: /article-11949-1.html
pic: /data/attachment/album/202003/02/093413ky6flwwd3wanl46a.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 我喜欢 Emacs 附带的游戏和玩具。它们大多来自于，嗯，我们姑且称之为一个不同的时代：一个允许或甚至鼓励奇思妙想的时代。
tags:
- 游戏
- Emacs
thumb: false
title: “Emacs 游戏机”完全指南
titlepic: true
translator: lujun9972
updated: '2020-03-02 09:36:00'
---
![](/data/attachment/album/202003/02/093413ky6flwwd3wanl46a.jpg)
又是周一，你正在为你的老板 Lumbergh （LCTT 译注：《上班一条虫》中的副总裁）努力倒腾那些 [无聊之极的文档](https://en.wikipedia.org/wiki/Office_Space)。为什么不玩玩 Emacs 中类似 zork 的文字冒险游戏来让你的大脑从单调的工作中解脱出来呢？
但说真的，Emacs 中既有游戏，也有古怪的玩物。有些你可能有所耳闻。这些玩意唯一的共同点就是，它们大多是很久以前就添加到 Emacs 中的：有些东西真的是相当古怪（如你将在下面看到的），而另一些则显然是由无聊的员工或学生们编写的。它们全有一个共同点，都带着一种奇思妙想和随意性，这在今天的 Emacs 中很少见。Emacs 现在变得十分严肃，在某种程度上，它已经与 20 世纪 80 年代那些游戏被编写出来的时候大不一样。
### 汉诺塔
[汉诺塔](https://en.wikipedia.org/wiki/Tower_of_Hanoi) 是一款古老的数学解密游戏，有些人可能对它很熟悉，因为它的递归和迭代解决方案经常被用于计算机科学教学辅助。
![Tower of Hanoi Screenshot](/data/attachment/album/202003/02/093652lqyl30cqvyypu0yh.png)
Emacs 中有三个命令可以运行汉诺塔：`M-x hanoi` 默认为 3 个碟子; `M-x hanoi-unix` 和 `M-x hanoi-unix-64` 使用 unix 时间戳的位数（32 位或 64 位）作为默认盘子的个数，并且每秒钟自动移动一次，两者不同之处在于后者假装使用 64 位时钟（因此有 64 个碟子）。
Emacs 中汉诺塔的实现可以追溯到 20 世纪 80 年代中期——确实是久得可怕。它有一些自定义选项（`M-x customize-group RET hanoi RET`），如启用彩色碟子等。当你离开汉诺塔缓冲区或输入一个字符，你会收到一个讽刺的告别信息（见上图）。
### 5x5
![5x5 game grid](/data/attachment/album/202003/02/093653s80wjdfhfmfwjicw.png)
5x5 的游戏是一个逻辑解密游戏：你有一个 5x5 的网格，中间的十字被填满；你的目标是通过按正确的顺序切换它们的空满状态来填充所有的单元格，从而获得胜利。这并不像听起来那么容易！
输入 `M-x 5x5` 就可以开始玩了，使用可选的数字参数可以改变网格的大小。这款游戏的有趣之处在于它能向你建议下一步行动并尝试找到该游戏网格的解法。它用到了 Emacs 自己的一款非常酷的符号 RPN 计算器 `M-x calc`（在《[Emacs 快乐计算](https://www.masteringemacs.org/article/fun-emacs-calc)》这篇文章中，我使用它来解决了一个简单的问题）。
所以我喜欢这个游戏的原因是它提供了一个非常复杂的解题器——真的，你应该通过 `M-x find-library RET 5x5` 来阅读其源代码——这是一个试图通过暴力破解游戏解法的“破解器”。
创建一个更大的游戏网格，例如输入 `M-10 M-x 5x5`，然后运行下面某个 `crack` 命令。破解器将尝试通过迭代获得最佳解决方案。它会实时运行该游戏，观看起来非常有趣：
* `M-x 5x5-crack-mutating-best`： 试图通过变异最佳解决方案来破解 5x5。
* `M-x 5x5-crack-mutating-current`： 试图通过变异当前解决方案来破解 5x5。
* `M-x 5x5-crack-random`： 尝试使用随机方案解破解 5x5。
* `M-x 5x5-crack-xor-mutate`： 尝试通过将当前方案和最佳方案进行异或运算来破解 5x5。
### 文本动画
你可以通过运行 `M-x animation-birthday-present` 并给出你的名字来显示一个奇特的生日礼物动画。它看起来很酷！
![xkcd](/data/attachment/album/202003/02/093707csxjcysspljoxs5l.png)
这里用的 `animate` 包也用在了 `M-x butterfly` 命令中，这是一个向上面的 [XKCD](http://www.xkcd.com) 漫画致敬而添加到 Emacs 中的命令。当然，漫画中的 Emacs 命令在技术上是无效的，但它的幽默足以弥补这一点。
### 黑箱
我将逐字引用这款游戏的目标：
> 
> 游戏的目标是通过向黑盒子发射光线来找到四个隐藏的球。有四种可能： 1) 射线将通过盒子不受干扰； 2) 它将击中一个球并被吸收； 3) 它将偏转并退出盒子，或 4) 立即偏转，甚至不能进入盒子。
> 
> 
> 
所以，这有点像我们小时候玩的[战舰游戏](https://en.wikipedia.org/wiki/Battleship_(game))，但是……是专为物理专业高学历的人准备的吧？
这是另一款添加于 20 世纪 80 年代的游戏。我建议你输入 `C-h f blackbox` 来阅读玩法说明（文档巨大）。
### 泡泡
![Bubbles game](/data/attachment/album/202003/02/093712ozy7zl12sc51ss7y.png)
`M-x bubble` 游戏相当简单：你必须用尽可能少移动清除尽可能多的“泡泡”。当你移除气泡时，其他气泡会掉落并粘在一起。这是一款有趣的游戏，此外如果你使用 Emacs 的图形用户界面，它还支持图像显示。而且它还支持鼠标。
你可以通过调用 `M-x bubbles-set-game-` 来设置难度，其中 `` 可以是这些之一：`easy`、`medium`、`difficult`、`hard` 或 `userdefined`。此外，你可以使用：`M-x custom-group bubbles` 来更改图形、网格大小和颜色。
由于它即简单又有趣，这是 Emacs 中我最喜欢的游戏之一。
### 幸运饼干
我喜欢 `fortune` 命令。每当我启动一个新 shell 时，这些与文学片段、谜语相结合的刻薄、无益、常常带有讽刺意味的“建议”就会点亮我的一天。
令人困惑的是，Emacs 中有两个包或多或少地做着类似的事情：`fortune` 和 `cookie`。前者主要用于在电子邮件签名中添加幸运饼干消息，而后者只是一个简单的 fortune 格式阅读器。
不管怎样，使用 Emacs 的 `cookie` 包前，你首先需要通过 `customize-option RET cookie RET` 来自定义变量 `cookie-file` 告诉它从哪找到 fortune 文件。
如果你的操作系统是 Ubuntu，那么你先安装 `fortune` 软件包，然后就能在 `/usr/share/games/fortune/` 目录中找到这些文件了。
之后你就可以调用 `M-x cookie` 随机显示 fortune 内容，或者，如果你想的话，也可以调用 `M-x cookie-apropos` 查找所有匹配的饼干。
### 破译器
这个包完美地抓住了 Emacs 的功利本质：这个包为你破解简单的替换密码（如“密码谜题”）提供了一个很有用的界面。你知道，二十多年前，有些人确实迫切需要破解很多基本的密码。正是像这个模块这样的小玩意让我非常高兴地用起 Emacs 来：一个只对少数人有用的模块，但是，如果你突然需要它了，那么它就在那里等着你。
那么如何使用它呢？让我们假设使用 “rot13” 密码：在 26 个字符的字母表中，将字符旋转 13 个位置。 通过 `M-x ielm` （Emacs 用于 [运行 Elisp](https://www.masteringemacs.org/article/evaluating-elisp-emacs) 的 REPL 环境）可以很容易在 Emacs 中进行尝试：