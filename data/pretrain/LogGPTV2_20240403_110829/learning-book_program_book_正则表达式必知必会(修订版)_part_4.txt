2.3匹配特珠宇符
13
要想办法来告诉正则表达式你需要的是，字符本身面不是它在正则表达
式里的特殊含义。为此，你必须在，的前面加上一个\（反斜杠）字符来
对它进行转义。\是一个元字符（metacharacter，表示“这个字符有特殊
含义，而不是字符本身含义"）。
再来验证一次刚才的例子，这次我们使用了\对，进行转义：
文本
sales1.x1s
orders3.x1s
sales2.xls
sales3.xls
apac1.x1s
europe2, x1s
na1,x1s
na2.x1s
sa1.x1s
正则表达式
-a. 1 x1s
结果
sales1 . x1s
orders3.x1s
sales3.x1s
sales2.x1s
apac1.x1s
europe2,x1s
na2.x1s
na1.xls
sa1.x1s
分析
a.\.x1s解决了问题。第1个.匹配n（在前两个匹配结果里）或s（在
第3个匹配结果里），第2个.匹配1（在第1个和第3个匹配结果里）或2（在
第2个匹配结果里）。接下来，\.匹配文件名与扩展名之间的分隔符，本身，
最后的x1s匹配它本身。（事实上，即使没有最后面的x1s，这次搜索的结
果也会与我们预想的一样：加上xls可以避免匹配到诸如sa3.doc之类的
文件名。）
在正则表达式里，\字符永远出现在一个有着特殊含义的字符序列的
---
## Page 24
14第2章医配单个字持
开头，这个序列可以由一个或多个字符构成。刚才看到的是\.序列，在
后面的章节里还会看到更多使用了\字符的例子。
我们将在第4章里对特殊字符的用法做专题讲解。
注意如果需要搜索\本身、就必须对\字符进行转又：相应的
转义序列是两个连续的反斜红字符\\。
提示我们刚才讲过，，可以匹配任何一个字符，这一说法并
非绝对准确，在绝大多数的正则表达式实现里，，只能匹配除
换行符以外的任何单个字符。
2.4
小结
正则表达式经常被简称为模式，它们其实是一些由字符构成的字符
串。这些字符可以是普通字符（纯文本）或元字符（有特殊含义的特殊
字符）。在这一章里，我们介绍了如何使用普通字符和元字符去匹配单个
的字符。，可以匹配任何字符。用来对字符进行转义。在正则表达式里，
有特殊含义的字符序列总是以\字符开头。
---
## Page 25
匹配一组字符
在本章里，你将学习如何与字符集合打交道。与可以匹配任意单个
字符的，字符（参见第2章）不同，字符集合则能匹配特定的字符和字符
区间。
3.1匹配多个字符中的某一个
第2章介绍的，字符可以匹配任意单个字符。在第2章的最后一个例子
里，我们使用了.a来匹配na和sa。现在，如果在那份文件清单里增加了
个名为ca1.xls的文件，面你仍只想找出na和sa，你该怎么办？别忘了。
也能匹配c，所以文件名ca1.xls也会被找出，
既然只想找出n和s，使用可以匹配任意字符的，显然不行一我们不
需要匹配任意字符，只想匹配n和s这两个字符。在正则表达式里，我们
可以使用元字符[和]来定义一个字符集合。在使用【和]定义的字符集合
里，这两个元字符之间的所有字符都是该集合的组成部分，字符集合的
匹配结果是能够与该集合里的任意一个成员相匹配的文本。
下面这个例子与第2章里的最后一个例子相似，但在这次的正则表达
式里使用了一个字符集合
文本
sales1,x1s
orders3.x1s
sales2.x1s
sales3.x1s
apac1.x1s
europe2.x1s
---
## Page 26
16
第3章医配一组宇符
na1 x1s
na2.x1s
sa1,x1s
ca1,x1s
正则表达式
[ns]a. 1 . x1s
结果
sales1.xls
orders3.x1s
sales2.x1s
sales3.x1s
apac1.xls
na1.x1s
europe2.x1s
na2.x1s
sa1.x1s
ca1,x1s
分析
这里使用的正则表达式以[ns]开头：这个集合将匹配字符n或s（但
不匹配字符c或其他字符）。【和]不匹配任何字符，它们只负责定义一个
字符集合。接下来，正则表达式里的字符a将匹配一个a字符，，将匹配一
个任意字符，\.将匹配.字符本身，x1s将匹配字符串x1s。从结果上看，
这个模式只匹配了3个文件名，与我们的预期完全一致。
案。如果那份文件清单里还有一个名为usal.xls的文件，它也
会被匹配出来。这里涉及了住置匹配问题，而我们将在第6章
里对此做专题讨论。
提示正如看到的那样，对正则表达式进行测试是很有技巧
的。验证某个模式能不能获得预期的匹配结果并不困难，但如
何验证它不会医配到你不怒要的东西可就没那么简单了。
字符集合在不需要区分字母大小写（或者是只须匹配某个特定部分）
---
## Page 27
3.2利用字符集合区间
17
的搜索操作里比较常见。比如说：
文本
The phrase*regular expression*is often
abbreviated as RegEx or regex.
正则表达式
[Rr]eg[Ee]x
结果
The phrase *regular expression* is often
abbreviated as RegEx or regex.
分析
这里使用的模式包含着两个字符集合：[Rr]负责匹配字母R和r，【Ee]
负责匹配字母E和e。这个模式可以匹配RegEx和regex，但不匹配REGEX。
提示如果你打算进行一次不需要区分字母大小写的匹配，不
使用这个技巧也能达到目的，这种模式最适合用在从全局看需
要区分字母大小写，但在某个局部不需要区分字母大小写的搜
索操作里
3.2利用字符集合区间
我们再来仔细看看那个从一份文件清单里找出特定文件的例子。我们
刚才使用的模式[ns]a.\.xls还存在着另外一个问题。如果那份文件清单
里有一个名为sam，xls的文件，结果会怎样？显然，因为.可以匹配所有的
字符面不是仅限于数字，所以文件sam.xls也会出现在匹配结果里。
这个问题可以用一个如下所示的字符集合来解决：
文本
sales1.xls
orders3.x1s
sales2.x1s
sales3.x1s
---
## Page 28
18第3章匹配一组字符
apac1.x1s
europe2.x1s
sam. x1s
na1.x1s
na2.x1s
ca1.x1s
sa1.x1s
正则表达式
[ns]a[0123456789]1 . x1s
结果
sales1.x1s
orders3, x1s
sales2.x1s
sales3.x1s
apac1.xls
europe2.x1s
sam.x1s
na1.x1s
na2.x1s
ca1.x1s
sa1.x1s
分析
在这个例子里，我们改用了另外一个模式，这个模式的匹配对象是：
第1个字符必须是n或s，第2个字符必须是a，第3个字符可以是任何一个
数字（因为我们使用了字符集合[0123456789]）。注意，文件名sam.x1s
没有出现在匹配结果里，这是因为m与我们给定的字符集合（10个数字）
不相匹配，
在使用正则表达式的时候，会频繁地用到一些字符区间（0~9、A~Z
等）。为了简化字符区间的定义，正则表达式提供了一个特殊的元字符，
字符区间可以用-（连字符）来定义。
下面还是刚才那个例子，但我们这次使用了一个字符区间：
文本
sales1,x1s
orders3.x1s
sales2.x1s
---
## Page 29
3.2利用字符集合区间
sales3.x1s
apac1.x1s
europe2.x1s
san,x1s
na1.x1s
na2.x1s
ca1.x1s
sa1,x1s
正则表达式
[ns]a[0-9]\.xls
结果
sales1.xls
orders3,x1s
sales2.xls
sales3.xls
apac1.x1s
europe2.x1s
san.x1s
na1,x1s
na2.x1s
sa1.x1s
ca1.x1s
分析
模式[0-9]的功能与[0123456789]完全等价，所以这次的匹配结果与
刚才那个例子完全一样。
字符区间并不仅限于数字，以下这些都是合法的字符区间。
口A-Z，匹配从A到z的所有大写字母。
口a-z，匹配从a到z的所有小写字母。
口A-F，匹配从A到F的所有大写字母。
A-z，匹配从ASCII字符A到ASCII字符z的所有字母。这个模式
般不常用，因为它还包含着[和等在ASCII字符表里排列在z和a
之间的字符。
字符区间的首、尾字符可以是ASCII字符表里的任意字符。但在实际
工作中，最常用的字符区间还是数字字符区间和字母字符区间。
---
## Page 30
20
第3章匹配一组宇符
提示在定义一个字符区间的时候，一定要进免让这个区间的
尾字符小于它的首字符（例如[3-1]）。这种区间是没有意义的
而且往往会让整个模式失效。
注意
（连字符）是一个特殊的元字符，作为元字符它只能
用在[和]之间。在宇符集合以外的地方，一只是一个普通字符，
只能与-本身相匹配。国此，在正则表达式里，一字符不需要被
转义
在同一个字符集合里可以给出多个字符区间。比如说，下面这个模
式可以匹配任何一个字母（无论大小写）或数字，但除此以外的其他字
符（既不是数字也不是字母的字符）都不匹配：
[A-Za -ze-9]
这个模式是下面这个字符集合的简写形式：
[ABCDEFGHIJKLINOPQRSTUVWXYZabcde
fghijk1mmopqrstuvwxyz0123456789]
正如大家看到的那样，字符范围使得正则表达式的语法变得非常简明。
下面是另一个例子，这次要查找的是RGB值（用一个十六进制数字
给出的红、绿、监三基色的组合值，计算机可以根据RGB值把有关的文
字或图象显示为由这三种颜色按给定比例调和出来的色彩）。在网页里，
RGB值是以#000000（黑色）、FFFFFF（白色）、FF0000（红色）的形
式给出的，RGB值用大写或小写字母给出均可，所以FF00f（品红色）
也是合法的RGB值。下面就是这个例子：
文本
<BODY BGC0L0R=*#336633* TEXT*#FFFFFF*
0, =H0I3HNI0HVW .0, =H1OIAN108Y
<,0, -NI0WR1E3T .0,NI0HI01
正则表达式
[@-9A - Fa -f][@-9A- Fa -f][e-9A -Fa -f]
---
## Page 31