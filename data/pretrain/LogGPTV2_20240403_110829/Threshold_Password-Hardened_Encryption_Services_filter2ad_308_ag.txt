per request scales linearly with the threshold 𝑡. Further experiments
show that increasing the number of rate-limiters 𝑚 for a fixed
threshold 𝑡 does not significantly affect the throughput.
)
q
e
r
/
s
(
t
s
e
u
q
e
r
r
e
v
r
e
s
r
e
p
e
m
i
t
d
e
z
i
t
r
o
m
A
4
3
2
1
0
·10−2
Encrypt
Decrypt
𝑡=1
𝑡=3
𝑡=9
𝑡=5
𝑡=11
Corruption threshold
𝑡=13
𝑡=15
)
q
e
r
/
s
(
t
s
e
u
q
e
r
r
e
t
i
m
i
l
-
e
t
a
r
r
e
p
e
m
i
t
d
e
z
i
t
r
o
m
A
·10−3
Encrypt
Decrypt
6
4
2
𝑡=1
𝑡=3
𝑡=9
𝑡=11
𝑡=5
Corruption threshold
𝑡=13
𝑡=15
Figure 6: Amortized time per request against threshold 𝑡
4.2 Scalability
Table 2 shows that the throughput of (𝑡, 𝑚)-PHE scales linearly
with the number of cores. Note that throughput performance is
increasing faster with the core count than it is decreasing with
the corruption threshold. This ensures easy adaptability in real-
world applications, because service providers can easily compensate
the lower throughput caused by higher corruption thresholds by
using more cores. For real-world deployment, we would expect an
implementation to use a single TLS connection for all messages in
an encryption or decryption protocol execution.
11
Threshold 𝑡
1 ([12])
1
3
5
8
11
13
15
Threshold 𝑡
1 ([12])
1
3
5
8
11
13
15
1-Core
1097.51
1044.93
546.76
367.70
257.51
192.95
162.88
144.27
1-Core
958.23
394.05
166.77
107.46
70.49
51.64
43.98
38.41
Encryption Requests/s
2-Core
2186.59
1993.20
1080.64
742.97
510.17
375.96
324.38
286.98
4-Core
4466.24
3821.29
2087.75
1440.42
992.99
744.61
636.10
567.06
Decryption Requests/s
2-Core
1739.31
770.41
336.20
214.14
139.80
103.00
87.71
76.42
4-Core
3658.78
1460.12
648.21
412.59
272.14
201.24
171.18
150.07
8-Core
8509.77
7469.21
4020.21
2820.17
1920.39
1436.60
1244.31
1093.45
8-Core
7081.30
2883.66
1259.41
807.90
528.41
387.20
329.63
288.05
Table 2: Encryption and Decryption Requests per Second
4.3 Comparison to Memory-Hard Functions
Memory-hard functions are used in practice for password hashing
and password-based key-derivation. Considering current recom-
mendations for best practice [19], we note that algorithms like
scrypt or Argon2 [5] are usually configured to limit login through-
put to tens of requests per second which is significantly slower
than using (𝑡, 𝑚)-PHE. Therefore, (𝑡, 𝑚)-PHE can directly be used
in practice while simultaneously offering better security against
offline-brute force attacks.
ACKNOWLEDGMENTS
This work is partially supported by the Deutsche Forschungsge-
meinschaft (DFG); the Bavarian State Ministry of Science and the
Arts in the framework of the Centre Digitisation.Bavaria (ZD.B);
and the State of Bavaria at the Nuremberg Campus of Technol-
ogy (NCT). NCT is a research cooperation between the Friedrich-
Alexander-Universität Erlangen-Nürnberg (FAU) and the Technis-
che Hochschule Nürnberg Georg Simon Ohm (THN). M.Z. was
supported by the BayWISS Consortium Digitization.
REFERENCES
[1]
Shashank Agrawal, Peihan Miao, Payman Mohassel, and
Pratyay Mukherjee. 2018. PASTA: PASsword-based thresh-
old authentication. In ACM CCS 2018. David Lie, Mohammad
Mannan, Michael Backes, and XiaoFeng Wang, editors. ACM
Press, (October 2018), 2042–2059. doi: 10.1145/3243734.
3243839.
Joseph A. Akinyele, Christina Garman, Ian Miers, Matthew
W. Pagano, Michael Rushanan, Matthew Green, and Aviel D.
Rubin. 2013. Charm: a framework for rapidly prototyping
cryptosystems. Journal of Cryptographic Engineering, 3, 2,
[2]
12
111–128. issn: 2190-8508. doi: 10.1007/s13389-013-0057-3.
http://dx.doi.org/10.1007/s13389-013-0057-3.
[3] Noga Alon, Zvi Galil, and Moti Yung. 1995. Efficient dynamic-
resharing “verifiable secret sharing” against mobile adver-
sary. In Algorithms — ESA ’95. Paul Spirakis, editor. Springer
Berlin Heidelberg, Berlin, Heidelberg, 523–537. isbn: 978-3-
540-44913-3.
[4] Ali Bagherzandi, Stanislaw Jarecki, Nitesh Saxena, and Yan-
bin Lu. 2011. Password-protected secret sharing. In ACM
CCS 2011. Yan Chen, George Danezis, and Vitaly Shmatikov,
editors. ACM Press, (October 2011), 433–444. doi: 10.1145/
2046707.2046758.
[5] Alex Biryukov, Daniel Dinu, and Dmitry Khovratovich. 2016.
Argon2: new generation of memory-hard functions for pass-
word hashing and other applications. In IEEE European Sym-
posium on Security and Privacy, EuroS&P 2016, Saarbrücken,
Germany, March 21-24, 2016. IEEE, 292–302. isbn: 978-1-
5090-1751-5. doi: 10.1109/EuroSP.2016.31. http://dx.doi.org/
10.1109/EuroSP.2016.31.
[6] Taher ElGamal. 1984. A public key cryptosystem and a sig-
nature scheme based on discrete logarithms. In CRYPTO’84
(LNCS). G. R. Blakley and David Chaum, editors. Volume 196.
Springer, Heidelberg, (August 1984), 10–18.
[7] Adam Everspaugh, Rahul Chatterjee, Samuel Scott, Ari Juels,
and Thomas Ristenpart. 2015. The pythia PRF service. In
USENIX Security 2015. Jaeyeon Jung and Thorsten Holz, edi-
tors. USENIX Association, (August 2015), 547–562.
Pooya Farshim, Benoît Libert, Kenneth G. Paterson, and
Elizabeth A. Quaglia. 2013. Robust encryption, revisited. In
PKC 2013 (LNCS). Kaoru Kurosawa and Goichiro Hanaoka,