title:Attacking cryptographic schemes based on "perturbation polynomials"
author:Martin R. Albrecht and
Craig Gentry and
Shai Halevi and
Jonathan Katz
Attacking Cryptographic Schemes Based on
“Perturbation Polynomials”
Martin Albrecht∗
London
Craig Gentry†
Center
Shai Halevi†
Center
Royal Holloway, University of
IBM T.J. Watson Research
IBM T.J. Watson Research
PI:EMAIL
PI:EMAIL
PI:EMAIL
Jonathan Katz‡
University of Maryland
PI:EMAIL
ABSTRACT
We show attacks on several cryptographic schemes that have
recently been proposed for achieving various security goals
in sensor networks. Roughly speaking, these schemes all use
“perturbation polynomials” to add “noise” to polynomial-
based systems that oﬀer information-theoretic security, in
an attempt to increase the resilience threshold while main-
taining eﬃciency. We show that the heuristic security ar-
guments given for these modiﬁed schemes do not hold, and
that they can be completely broken once we allow even a
slight extension of the parameters beyond those achieved by
the underlying information-theoretic schemes.
Our attacks apply to the key predistribution scheme of
Zhang et al. (MobiHoc 2007), the access-control schemes of
Subramanian et al. (PerCom 2007), and the authentication
schemes of Zhang et al. (INFOCOM 2008). Our results cast
doubt on the viability of using “perturbation polynomials”
for designing secure cryptographic schemes.
Categories and Subject Descriptors
C.2.0 [COMPUTER-COMMUNICATION
NETWORKS]
General Terms
Algorithms, Security
∗
Work supported by a Royal Holloway Valerie Myerscough
scholarship and NSF grant #0821725.
†
Work supported by the US Army Research Laboratory
and the UK Ministry of Defence under agreement number
W911NF-06-3-0001.
‡
Work done while visiting IBM, and supported by NSF
grant #0627306, the U.S. DoD/ARO MURI program, and
the US Army Research Laboratory and the UK Ministry of
Defence under agreement number W911NF-06-3-0001.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’09, November 9–13, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-352-5/09/11 ...$10.00.
Keywords
Pairwise Key Establishment, Random Perturbation Polyno-
mial, Sensor Network Security
1.
INTRODUCTION
Implementing standard security mechanisms in sensor net-
works is often challenging due to the constrained nature
of sensor nodes: they have limited battery life, relatively
low computational power, and limited memory. As such,
a signiﬁcant body of research has focused on the design of
special-purpose, highly eﬃcient cryptographic schemes for
sensor network applications.
Here, we examine an approach based on “perturbation
polynomials” that has been used in several recent schemes [7,
5, 6]. This approach begins with a polynomial-based scheme
that oﬀers information-theoretic (i.e., perfect) security for
some “resilience parameter” t — e.g., a bound on the num-
ber of compromised nodes or the number of messages au-
thenticated — and then modiﬁes this underlying scheme
in an attempt to increase the resilience against a compu-
tationally bounded attacker. The common idea is to add a
small amount of “noise” to the low-degree polynomials used
in the original scheme; the conjecture is that the presence
of this noise makes breaking the scheme infeasible even in
regimes well beyond the original resilience parameter. Un-
fortunately, we show here that this naive view is unfounded.
We describe attacks against the schemes from [7, 5, 6],
showing that these scheme do not oﬀer any better resilience
than the original, information-theoretic schemes on which
they are based. We provide theoretical justiﬁcation as to
why our attacks work, as well as experimental evidence that
convincingly illustrates their eﬀectiveness. Our results cast
strong doubt on the viability of the “perturbation polynomi-
als” approach for the design of secure cryptographic schemes.
1.1 Organization of the Paper
We focus the bulk of our attention on the initial paper
of Zhang et al.
[7], which concerns key predistribution in
sensor networks. A description of their scheme, and details
of our attack, are given in Section 2. In Section 3 we show
how to apply our attack to a set of message authentication
schemes suggested by Zhang et al. [6], and in Section 4 we
show the same for a system for secure data storage/retrieval
proposed by Subramanian et al. [5].
12. THE KEY PREDISTRIBUTION
SCHEME OF ZHANG ET AL.
2.1 Background
Schemes for key predistribution enable nodes in a large
network to agree on pairwise secret keys. Before deploy-
ment, a central authority loads some secret information si
onto each node i, for i ∈ {1, . . . , N} (where N is the network
size). Any two nodes i and j can agree on a shared key ki,j of
length κ using their respective secret information. (Proba-
bilistic schemes, where two nodes are only able to compute a
shared key with high probability, have also been considered
but will not concern us here.) The goal is to oﬀer resilience
as large as possible, where a scheme has resilience t if an ad-
versary who compromises t nodes I = {i1, . . . , it} is unable
to derive any information about the shared key ki,j for any
i, j (cid:3)∈ I. Eﬃciency considerations require computation of
the shared keys to be fast, thus ruling out standard public-
key approaches, and dictate that the storage (i.e., the size
of the keying information si) should be minimized.
One simple approach is for all nodes to share a single key k
(i.e., set si = k for all i) that is used also as the pairwise key
for any pair of nodes. While having minimal storage, this
scheme has resilience t = 0 since it is completely broken after
only one node is compromised. A second trivial approach
is for each pair of nodes to store an independent key. This
has optimal resilience t = N , but the storage requirement of
(N − 1) · κ per node is unacceptably high.
Blom [2] and Blundo et al. [3] show that information-
theoretic resilience to t corruptions can be achieved with
κ·(t+1) bits of secret information stored per node; moreover,
this is optimal if information-theoretic security is desired.
Let F be a ﬁeld of size 2κ > N . To achieve resilience t using
the scheme of Blundo et al., the authority chooses a random
symmetric, bivariate polynomial F ∈ F[x, y] of degree t in
each variable as the master secret key; a node with identity
i ∈ F is given the univariate polynomial si(y) = F (i, y) as its
secret information. The shared key ki,j between nodes i, j is
si(j) = F (i, j) = sj(i), which both nodes can compute (since
F is symmetric). It is not hard to see that an attacker who
compromises at most t nodes learns no information about
any key that is shared between two non-compromised nodes.
However, an attacker who compromises t + 1 nodes can use
interpolation to recover the master polynomial and thus ob-
tain all the keys in the system.
2.2 The Scheme of Zhang et al.
Zhang et al. [7] suggested a “noisy” version of the above
scheme, and claimed that the new scheme has improved re-
silience for some ﬁxed amount of storage. Roughly, their idea
is to give node i a polynomial si(y) that is “close”, but not
exactly equal, to F (i, y). Nodes i and j can compute si(j)
and sj (i) as before; these results will no longer be equal,
but because they are close they can still be used to derive
a shared key (by, e.g., using the high-order bits). The hope
was that the addition of noise to the nodes’ secret infor-
mation would prevent reconstruction of the master secret F
even if an adversary corrupts many more than t+1 nodes; in
fact, Zhang et al. claim optimal resilience t = N as long as
the adversary is computationally bounded. (Of course, for
a computationally unbounded adversary the lower bound
from [3] applies.) We show that this is not the case.
We ﬁrst describe their scheme in further detail. Let p be
modulus
noise
# of nodes
degree
p
232 − 5
236 − 5
240 − 87
240 − 87
r
222
224
226
228
N
212
212
212
216
t
76
77
77
77
storage
per node
(per key-bit)
246 bits
246 bits
234 bits
273 bits
Table 1: The suggested parameters for the key pre-
distribution scheme of Zhang et al.
a prime, and let r  noise0, and treat the value δ def= noise1 − noise0 as
known. (Enumerating over all possible values of δ increases
the running time by a multiplicative factor of r.)
Corrupt n nodes and compute the set S = {(xi, yi) : i =
1, . . . , n} as above. Construct S
by adding to S an ad-
ditional n tuples {(xn+i, yn+i)}n
i=1 where xn+i = xi and
yn+i = yi − δ for i = 1, . . . , n. Observe that for every
tuple (xi, yi) ∈ S
∗
(cid:3)
0 (xi) = yi, or
0 (xi) − δ = y1. Moreover, for 1 ≤ i ≤ n,
∗
∗
f
1 (xi) = yi, or f
∗
either f
0 (xn+i) = yn+i; thus, for ex-