# Title: Attacking Cryptographic Schemes Based on "Perturbation Polynomials"

## Authors
- Martin R. Albrecht, Royal Holloway, University of London, PI:EMAIL
- Craig Gentry, IBM T.J. Watson Research Center, PI:EMAIL
- Shai Halevi, IBM T.J. Watson Research Center, PI:EMAIL
- Jonathan Katz, University of Maryland, PI:EMAIL

## Abstract
We present attacks on several recently proposed cryptographic schemes designed to achieve various security goals in sensor networks. These schemes use "perturbation polynomials" to add "noise" to polynomial-based systems that offer information-theoretic security, aiming to increase the resilience threshold while maintaining efficiency. We demonstrate that the heuristic security arguments for these modified schemes do not hold, and they can be completely broken with even a slight extension of the parameters beyond those achieved by the underlying information-theoretic schemes.

Our attacks apply to the key predistribution scheme of Zhang et al. (MobiHoc 2007), the access-control schemes of Subramanian et al. (PerCom 2007), and the authentication schemes of Zhang et al. (INFOCOM 2008). Our results cast doubt on the viability of using "perturbation polynomials" for designing secure cryptographic schemes.

### Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]

### General Terms
Algorithms, Security

### Acknowledgments
- **Martin R. Albrecht**: Work supported by a Royal Holloway Valerie Myerscough scholarship and NSF grant #0821725.
- **Craig Gentry and Shai Halevi**: Work supported by the US Army Research Laboratory and the UK Ministry of Defence under agreement number W911NF-06-3-0001.
- **Jonathan Katz**: Work done while visiting IBM, and supported by NSF grant #0627306, the U.S. DoD/ARO MURI program, and the US Army Research Laboratory and the UK Ministry of Defence under agreement number W911NF-06-3-0001.

### Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.

### CCS'09
November 9–13, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-352-5/09/11 ...$10.00.

### Keywords
Pairwise Key Establishment, Random Perturbation Polynomial, Sensor Network Security

## 1. Introduction
Implementing standard security mechanisms in sensor networks is often challenging due to the constrained nature of sensor nodes, which have limited battery life, relatively low computational power, and limited memory. Consequently, a significant body of research has focused on the design of special-purpose, highly efficient cryptographic schemes for sensor network applications.

In this paper, we examine an approach based on "perturbation polynomials" that has been used in several recent schemes [7, 5, 6]. This approach starts with a polynomial-based scheme that offers information-theoretic (i.e., perfect) security for some "resilience parameter" \( t \) — e.g., a bound on the number of compromised nodes or the number of messages authenticated — and then modifies this underlying scheme to increase the resilience against a computationally bounded attacker. The common idea is to add a small amount of "noise" to the low-degree polynomials used in the original scheme; the conjecture is that the presence of this noise makes breaking the scheme infeasible even in regimes well beyond the original resilience parameter. Unfortunately, we show here that this naive view is unfounded.

We describe attacks against the schemes from [7, 5, 6], showing that these schemes do not offer any better resilience than the original, information-theoretic schemes on which they are based. We provide theoretical justification as to why our attacks work, as well as experimental evidence that convincingly illustrates their effectiveness. Our results cast strong doubt on the viability of the "perturbation polynomials" approach for the design of secure cryptographic schemes.

### 1.1 Organization of the Paper
We focus the bulk of our attention on the initial paper of Zhang et al. [7], which concerns key predistribution in sensor networks. A description of their scheme, and details of our attack, are given in Section 2. In Section 3, we show how to apply our attack to a set of message authentication schemes suggested by Zhang et al. [6], and in Section 4, we show the same for a system for secure data storage/retrieval proposed by Subramanian et al. [5].

## 2. The Key Predistribution Scheme of Zhang et al.

### 2.1 Background
Schemes for key predistribution enable nodes in a large network to agree on pairwise secret keys. Before deployment, a central authority loads some secret information \( s_i \) onto each node \( i \) for \( i \in \{1, \ldots, N\} \) (where \( N \) is the network size). Any two nodes \( i \) and \( j \) can agree on a shared key \( k_{i,j} \) of length \( \kappa \) using their respective secret information. The goal is to offer resilience as large as possible, where a scheme has resilience \( t \) if an adversary who compromises \( t \) nodes \( I = \{i_1, \ldots, i_t\} \) is unable to derive any information about the shared key \( k_{i,j} \) for any \( i, j \notin I \). Efficiency considerations require computation of the shared keys to be fast, thus ruling out standard public-key approaches, and dictate that the storage (i.e., the size of the keying information \( s_i \)) should be minimized.

One simple approach is for all nodes to share a single key \( k \) (i.e., set \( s_i = k \) for all \( i \)) that is used also as the pairwise key for any pair of nodes. While having minimal storage, this scheme has resilience \( t = 0 \) since it is completely broken after only one node is compromised. A second trivial approach is for each pair of nodes to store an independent key. This has optimal resilience \( t = N \), but the storage requirement of \( (N - 1) \cdot \kappa \) per node is unacceptably high.

Blom [2] and Blundo et al. [3] show that information-theoretic resilience to \( t \) corruptions can be achieved with \( \kappa \cdot (t + 1) \) bits of secret information stored per node; moreover, this is optimal if information-theoretic security is desired. Let \( F \) be a field of size \( 2^\kappa > N \). To achieve resilience \( t \) using the scheme of Blundo et al., the authority chooses a random symmetric, bivariate polynomial \( F \in F[x, y] \) of degree \( t \) in each variable as the master secret key; a node with identity \( i \in F \) is given the univariate polynomial \( s_i(y) = F(i, y) \) as its secret information. The shared key \( k_{i,j} \) between nodes \( i \) and \( j \) is \( s_i(j) = F(i, j) = s_j(i) \), which both nodes can compute (since \( F \) is symmetric). It is not hard to see that an attacker who compromises at most \( t \) nodes learns no information about any key that is shared between two non-compromised nodes. However, an attacker who compromises \( t + 1 \) nodes can use interpolation to recover the master polynomial and thus obtain all the keys in the system.

### 2.2 The Scheme of Zhang et al.
Zhang et al. [7] suggested a "noisy" version of the above scheme, claiming that the new scheme has improved resilience for some fixed amount of storage. Roughly, their idea is to give node \( i \) a polynomial \( s_i(y) \) that is "close", but not exactly equal, to \( F(i, y) \). Nodes \( i \) and \( j \) can compute \( s_i(j) \) and \( s_j(i) \) as before; these results will no longer be equal, but because they are close, they can still be used to derive a shared key (by, e.g., using the high-order bits). The hope was that the addition of noise to the nodes' secret information would prevent reconstruction of the master secret \( F \) even if an adversary corrupts many more than \( t + 1 \) nodes; in fact, Zhang et al. claim optimal resilience \( t = N \) as long as the adversary is computationally bounded. (Of course, for a computationally unbounded adversary, the lower bound from [3] applies.) We show that this is not the case.

We first describe their scheme in further detail. Let \( p \) be a prime, and let \( r < p \) be a small integer. The suggested parameters for the key predistribution scheme of Zhang et al. are shown in Table 1.

| Modulus \( p \) | Noise \( r \) | Number of Nodes \( N \) | Degree \( t \) | Storage per Node (per key-bit) |
|-----------------|--------------|------------------------|---------------|---------------------------------|
| \( 2^{32} - 5 \) | \( 2^{22} \) | \( 2^{12} \)           | 76            | 246 bits                        |
| \( 2^{36} - 5 \) | \( 2^{24} \) | \( 2^{12} \)           | 77            | 246 bits                        |
| \( 2^{40} - 87 \) | \( 2^{26} \) | \( 2^{12} \)           | 77            | 234 bits                        |
| \( 2^{40} - 87 \) | \( 2^{28} \) | \( 2^{16} \)           | 77            | 273 bits                        |

To generate the secret information for each node, the authority chooses a random symmetric, bivariate polynomial \( F \in F[x, y] \) of degree \( t \) in each variable. For each node \( i \), the authority computes the univariate polynomial \( s_i(y) = F(i, y) \) and adds noise to it. Specifically, the authority generates a random polynomial \( E_i(y) \) of degree \( t \) with coefficients in \( \{0, 1, \ldots, r-1\} \) and sets the secret information for node \( i \) to be \( s_i(y) = F(i, y) + E_i(y) \).

Nodes \( i \) and \( j \) can compute \( s_i(j) \) and \( s_j(i) \) as before. Since \( s_i(j) = F(i, j) + E_i(j) \) and \( s_j(i) = F(j, i) + E_j(i) \), the values \( s_i(j) \) and \( s_j(i) \) will be close but not exactly equal. The nodes can then use the high-order bits of \( s_i(j) \) and \( s_j(i) \) to derive a shared key.

### 2.3 Our Attack
We now describe our attack on the scheme of Zhang et al. Suppose the adversary corrupts \( n \) nodes and obtains the set of tuples \( S = \{(x_i, y_i) : i = 1, \ldots, n\} \) where \( x_i \) is the identity of the \( i \)-th corrupted node and \( y_i = s_i(x_i) \).

Let \( f^* \) be the polynomial such that \( f^*(x_i) = y_i \) for all \( i = 1, \ldots, n \). The adversary can construct a new set \( S' \) by adding to \( S \) an additional \( n \) tuples \( \{(x_{n+i}, y_{n+i})\}_{i=1}^n \) where \( x_{n+i} = x_i \) and \( y_{n+i} = y_i - \delta \) for some known value \( \delta \). The value \( \delta \) is chosen such that the resulting polynomial \( f^* \) satisfies the conditions \( f^*(x_i) = y_i \) or \( f^*(x_i) - \delta = y_i \) for all \( i = 1, \ldots, n \).

By enumerating over all possible values of \( \delta \) (which increases the running time by a multiplicative factor of \( r \)), the adversary can reconstruct the master polynomial \( F \) and thus break the scheme. Our attack shows that the scheme of Zhang et al. does not offer any better resilience than the original, information-theoretic schemes on which it is based.