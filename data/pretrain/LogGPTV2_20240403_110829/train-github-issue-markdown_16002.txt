### Bug Report

**Summary:**
When using `FFMpegWriter` to create an MP4 file, the playback of the video shows a rolling image if the DPI setting used during the saving process does not match the DPI specified when the figure is created. This issue is particularly noticeable when the movie frame images are being displayed on the screen during the creation of the movie. Additionally, there is an annoying flicker in the playback.

**Steps to Reproduce:**

The following code demonstrates the bug. The animation fails, resulting in a rolling image during the playback of the saved MP4 file. The issue can be resolved by either changing the DPI in the `writer.saving` call to match the figure's DPI or by commenting out the `pylab.pause(0.01)` line.

```python
import matplotlib.animation
import numpy
import pylab

# Create a figure with a specific DPI
fig = pylab.figure(figsize=(6, 6), dpi=120)

# Initialize the FFMpegWriter
writer = matplotlib.animation.FFMpegWriter(fps=10)

# Generate data for the plot
x = numpy.linspace(0, 6.28, 100)

# Save the animation to an MP4 file
with writer.saving(fig, 'rolling_bug.mp4', dpi=100):  # Saving works correctly if dpi=120
    for offset in numpy.linspace(0, 6.28, 30):
        pylab.plot(numpy.cos(x - offset), color='black')
        
        # Commenting out the next line resolves the issue, but no image is displayed on the screen until the end of the script
        pylab.pause(0.01)
        
        writer.grab_frame()
```

**Actual Outcome:**
Upon inspection, the vertical dimension of the figure in pixels changes across the `grab_frame()` call. In the provided example, the vertical dimension changes from 600 to 590 pixels, while the horizontal dimension remains unchanged. A screenshot from VLC Media Player illustrating this issue is shown below:

![rolling_bug_screengrab](https://user-images.githubusercontent.com/7269332/27990577-278e5b28-6410-11e7-8538-123c0c394891.png)

**Expected Outcome:**
The `writer.grab_frame()` method should not alter the vertical dimension of the figure. Additionally, the flickering should not occur. This behavior was observed in a previous version of Matplotlib, though the exact version is unknown. The vertical image dimension remained constant across the `grab_frame()` call in that version, and the code was functional about a year ago.

**Version Information:**
- Operating System: Windows 8.1
- Matplotlib: 2.0.2
- Python: 3.6.1
- Anaconda: 4.4.0
- Installed via: conda

---

This revised version of the text is more structured, clear, and professional, making it easier for developers to understand and address the issue.