Table 8: The average and error interval of the times (seconds) running AES circuit. The number of nodes represents
the degree of parallelism on each side. “–” means that the time is smaller than 0.05 seconds. Inter-com refers to the
communication between the two parties, and intra-com refers to communication between nodes for a single party.
malicious setting. We estimate a 20% improvement in
the performance of garbled circuit generation when the
AES-NI instruction set becomes ubiquitous, based on the
preliminary results presented above in Table 5.
Table 8 shows that the Yao protocol really beneﬁts
from the circuit-level parallelization. Starting from Ta-
ble 7, where each side only has one process, all the way
to when each side has 256 processes, as the degree of par-
allelism is multiplied by four, the total time reduces into
a quarter. Note that the communication costs between the
generator and evaluator remain the same, as shown in Ta-
ble 7. It may seem odd that the communication costs are
reduced as the number of processes increase. The real in-
terpretation of this data is that as the number of processes
increases, the “waiting time” decreases.
Notice that as the number of processes increases, the
ratio of the time the generator spends in the construc-
tion and evaluation stage decreases from 5:2 to 1:1. The
reason is that the number of garbled circuit each process
handles is getting smaller and smaller. Eventually, we
reach the limit of the beneﬁts that the circuit-level paral-
lelism could possibly bring. In this case, each process is
dealing with merely a single copy of the garbled circuit,
and the time spent in both the generation and evaluation
stages is the time to construct a garbled circuit.
To the best of our knowledge, completing an execution
of secure AES in the malicious model within 1.4 seconds
is the best result that has ever been reported. The next
best result from Nielsen et al. [28] is 1.6 seconds, and it
is an amortized result (85 seconds for 54 blocks of AES
encryption in parallel) in the random oracle model. This
is only a crude comparison, however; our experimental
setup uses a cluster computer while Nielsen et al. used
only two desktops. A better comparison would be pos-
sible given a parallel implementation of Nielsen et al.’s
system, and we are interested in seeing how much of an
improvement such an implementation could achieve.
Large Circuits
In this experiment, we run the 4095-
bit edit distance circuit, that is, (x,y) (cid:55)→ (⊥,EDT(x,y)),
where x,y ∈ {0,1}4095. In particular, we use the I + C
approach, where the computation time could be roughly
a half of that of the I + 2C approach with the price of not
getting to use the random-seed technique. Recall that in
the I +C approach, the generator and the evaluator con-
duct the cut-and-choose in a way that the generator does
not know the check circuits until she ﬁnishes transferring
all the garbled circuits. Next, both the parties run the
circuit generation and evaluation in a pipeline manner,
where one party is generating and giving away garbled
gates on one end, and the other party is evaluating and
checking the received gates at the other end at the same
time. The results are shown in Table 9.
Gen
(sec)
19.73±0.5%
1.1± 6%
1.1±0.8%
Eval
(sec)
5.26±0.4%
15.6±0.6%
–
–
–
1.5± 2%
24,400± 1% 14,600± 3%
4,900± 1% 14,700± 2%
0.6± 20%
0.4± 40%
0.60± 20%
24,400± 1% 14,600± 3%
4,900± 1% 14,700± 2%
Comm
(Byte)
1.7× 108
6.5× 107
1.8× 1013
8.5× 106
1.8× 1013
OT
Cut-&
Choose
Gen./Evl.
Inp.
Chk
Total
Table 9: The result of (x,y) (cid:55)→ (⊥,EDT-4095(x,y)).
Each party is comprised of 256 cores in a cluster. This
table comes from 6 invocations of the system. Simi-
larly, the upper row in each stage is the computation time,
while the lower is the communication time.
This circuit generated by our compiler has 5.9 billion
gates, and 2.4 billion of those are non-XOR. It is worth
mentioning that, without the random-seed technique, the
communication cost shown in Table 9 can also be esti-
mated by 256 × 2.4 × 109 × 3 × 10 = 1.8 × 1013, since
256 copies of the garbled circuits need to be transferred,
each copy has 2.4 billion non-free gates, each non-free
gate has three entries, and each entry has k = 80 bits.
In additional to showing that our system is capable of
handling the largest circuits ever reported, we also have
shown a speed in the malicious setting that is comparable
to those in the semi-honest setting. In particular, we were
able to complete an single execution of 4095-bit edit dis-
tance circuit in less than 8.2 hours with a rate of 82,000
(non-XOR) gates per second. Note that Huang et al.’s
system is the only one, to the best of our knowledge, that
is capable of handling such large circuits [13]; they re-
ported a rate of over 96,000 (non-XOR) gates per second
for an edit-distance circuit in the semi-honest setting.
7 Conclusion
We have presented a general purpose secure two party
computation system which offers security against mali-
cious adversaries and which can efﬁciently evaluate cir-
cuits with hundreds of millions and even billions of gates
on affordable hardware. Our compiler can generate large
circuits using fewer computational resources than simi-
lar compilers, and offers improved ﬂexibility to users of
the system. Our evaluator can take advantage of parallel
computing resources, which are becoming increasingly
common and affordable. As future work, we plan further
improvements to our compiler and language, as well as
experiments on systems other than Ranger.
The source code for this system can be down-
loaded from the authors’ website (http://crypto.cs.
virginia.edu/), along with example functions, includ-
ing those describe in this paper.
8 Acknowledgements
We would like to thank Benny Pinkas, Thomas Schnei-
der, Nigel Smart and Stephen Williams for providing us
with a copy of their optimized AES circuit. We would
also like to thank Gabriel Robins for his advice on min-
imizing circuits in VLSI systems. We are particularly
grateful to Ian Goldberg for his very helpful comments.
This work is supported by Defense Advanced Re-
search Projects Agency (DARPA) and the Air Force Re-
search Laboratory (AFRL) under contract FA8750-11-
2-0211. The views and conclusions contained in this
document are those of the authors and should not be in-
terpreted as representing the ofﬁcial policies, either ex-
pressed or implied, of the Defense Advanced Research
Projects Agency or the US government.
References
[1] BENDLIN, R., DAMG ˚ARD, I., ORLANDI, C., AND ZAKARIAS,
S. Semi-homomorphic encryption and multiparty computation.
In Proceedings of the 30th Annual international conference on
Theory and applications of cryptographic techniques: advances
in cryptology (Berlin, Heidelberg, 2011), EUROCRYPT’11,
Springer-Verlag, pp. 169–188.
[2] BOGETOFT, P., CHRISTENSEN, D. L., DAMG ˚ARD,
I.,
GEISLER, M., JAKOBSEN, T. P., KRØIGAARD, M., NIELSEN,
J. D., NIELSEN,
J.,
SCHWARTZBACH, M. I., AND TOFT, T. Secure Multiparty Com-
putation Goes Live. In Financial Cryptography (2009), pp. 325–
343.
J. B., NIELSEN, K., PAGTER,
[3] BOYAR, J., AND PERALTA, R. A new combinational logic
minimization technique with applications to cryptology. In Pro-
ceedings of the 9th international conference on Experimental Al-
gorithms (Berlin, Heidelberg, 2010), SEA’10, Springer-Verlag,
pp. 178–189.
[4] BRICKELL, J., AND SHMATIKOV, V. Privacy-preserving graph
algorithms in the semi-honest model. In Proceedings of the 11th
international conference on Theory and Application of Cryptol-
ogy and Information Security (Berlin, Heidelberg, 2005), ASI-
ACRYPT’05, Springer-Verlag, pp. 236–252.
[5] CANETTI, R., LINDELL, Y., OSTROVSKY, R., AND SAHAI, A.
Universally composable two-party and multi-party secure com-
In Proceedings of the thiry-fourth annual ACM sym-
putation.
posium on Theory of computing (New York, NY, USA, 2002),
STOC ’02, ACM, pp. 494–503.
[6] CHOI, S. G., KATZ, J., KUMARESAN, R., AND ZHOU, H.-S.
On the security of the ”free-xor” technique. In Proceedings of the
9th international conference on Theory of Cryptography (Berlin,
Heidelberg, 2012), TCC’12, Springer-Verlag, pp. 39–53.
[7] DAMGARD, I., PASTRO, V., SMART, N., AND ZAKARIAS, S.
Multiparty Computation from Somewhat Homomorphic Encryp-
tion. In Proceedings of the 32th Annual International Cryptology
Conference on Advances in Cryptology (2012), CRYPTO ’12.
http://eprint.iacr.org/2011/535.
[8] FIPS. Advanced Encryption Standard (AES), 2001.
[9] GAREY, M., GRAHAM, R., JOHNSON, D., AND KNUTH, D.
Complexity results for bandwidth minimization. SIAM Journal
on Applied Mathematics 34, 3 (1978), 477–495.
[10] GENTRY, C., HALEVI, S., AND SMART, N. P. Homomorphic
Evaluation of the AES Circuit. In Proceedings of the 32th Annual
International Cryptology Conference on Advances in Cryptology
(2012), CRYPTO ’12. http://eprint.iacr.org/2012/099.
[11] GOYAL, V., MOHASSEL, P., AND SMITH, A. Efﬁcient two
party and multi party computation against covert adversaries.
In Proceedings of the theory and applications of cryptographic
techniques 27th annual international conference on Advances
in cryptology (Berlin, Heidelberg, 2008), EUROCRYPT’08,
Springer-Verlag, pp. 289–306.
[12] HENECKA, W., K ¨OGL, S., SADEGHI, A.-R., SCHNEIDER, T.,
AND WEHRENBERG, I. Tasty: tool for automating secure two-
In Proceedings of the 17th ACM confer-
party computations.
ence on Computer and communications security (New York, NY,
USA, 2010), CCS ’10, ACM, pp. 451–462.
[13] HUANG, Y., EVANS, D., KATZ, J., AND MALKA, L. Faster
secure two-party computation using garbled circuits. In Proceed-
ings of the 20th USENIX conference on Security (Berkeley, CA,
USA, 2011), SEC’11, USENIX Association, pp. 35–35.
[14] HUANG, Y., MALKA, L., EVANS, D., AND KATZ, J. Efﬁcient
Privacy-Preserving Biometric Identiﬁcation. In NDSS’11 (2011).
of the 15th International Conference on the Theory and Applica-
tion of Cryptology and Information Security: Advances in Cryp-
tology (Berlin, Heidelberg, 2009), ASIACRYPT ’09, Springer-
Verlag, pp. 250–267.
[31] RELIC. http://code.google.com/p/relic-toolkit/.
[32] SHELAT, A., AND SHEN, C.-H. Two-output secure computation
with malicious adversaries. In Proceedings of the 30th Annual
international conference on Theory and applications of crypto-
graphic techniques: advances in cryptology (Berlin, Heidelberg,
2011), EUROCRYPT’11, Springer-Verlag, pp. 386–405.
[33] YAO, A. C. Protocols for secure computations. In Proceedings
of the 23rd Annual Symposium on Foundations of Computer Sci-
ence (Washington, DC, USA, 1982), SFCS ’82, IEEE Computer
Society, pp. 160–164.
[15] ISHAI, Y., KILIAN, J., NISSIM, K., AND PETRANK, E. Extend-
ing Oblivious Transfers Efﬁciently. In CRYPTO’03, vol. 2729 of
LNCS. Springer Berlin / Heidelberg, 2003, pp. 145–161.
[16] ISHAI, Y., PRABHAKARAN, M., AND SAHAI, A. Founding
In Proceed-
cryptography on oblivious transfer — efﬁciently.
ings of the 28th Annual conference on Cryptology: Advances in
Cryptology (Berlin, Heidelberg, 2008), CRYPTO 2008, Springer-
Verlag, pp. 572–591.
[17] JHA, S., KRUGER, L., AND SHMATIKOV, V. Towards prac-
In Proceedings of the
tical privacy for genomic computation.
2008 IEEE Symposium on Security and Privacy (Washington,
DC, USA, 2008), SP ’08, IEEE Computer Society, pp. 216–230.
[18] KIRAZ, M. Secure and Fair Two-Party Computation. PhD thesis,
Technische Universiteit Eindhoven, 2008.
[19] KIRAZ, M., AND SCHOENMAKERS, B. A Protocol Issue for
In
The Malicious Case of Yao’s Garbled Circuit Construction.
27th Symposium on Information Theory in the Benelux (2006).
[20] KOLESNIKOV, V., AND SCHNEIDER, T. Improved garbled cir-
cuit: Free xor gates and applications. In Proceedings of the 35th
international colloquium on Automata, Languages and Program-
ming, Part II (Berlin, Heidelberg, 2008), ICALP ’08, Springer-
Verlag, pp. 486–498.
[21] LINDELL, Y., OXMAN, E., AND PINKAS, B. The IPS Compiler:
Optimizations, Variants and Concrete Efﬁciency. In CRYPTO’11
(2011), pp. 259–276.
[22] LINDELL, Y., AND PINKAS, B. Privacy preserving data min-
ing. In Proceedings of the 20th Annual International Cryptology
Conference on Advances in Cryptology (London, UK, UK, 2000),
CRYPTO ’00, Springer-Verlag, pp. 36–54.
[23] LINDELL, Y., AND PINKAS, B. An efﬁcient protocol for se-
cure two-party computation in the presence of malicious adver-
saries. In Proceedings of the 26th annual international confer-
ence on Advances in Cryptology (Berlin, Heidelberg, 2007), EU-
ROCRYPT ’07, Springer-Verlag, pp. 52–78.
[24] LINDELL, Y., AND PINKAS, B. Secure two-party computa-
tion via cut-and-choose oblivious transfer. In Proceedings of the
8th conference on Theory of cryptography (Berlin, Heidelberg,
2011), TCC’11, Springer-Verlag, pp. 329–346.
[25] LYNN, B. Pairing-Based Cryptography Library, 2006. http:
//crypto.stanford.edu/pbc/.
[26] MALKA, L. Vmcrypt: modular software architecture for scal-
able secure computation. In Proceedings of the 18th ACM con-
ference on Computer and communications security (New York,
NY, USA, 2011), CCS ’11, ACM, pp. 715–724.
[27] MOHASSEL, P., AND FRANKLIN, M. Efﬁciency tradeoffs for
malicious two-party computation. In Proceedings of the 9th inter-
national conference on Theory and Practice of Public-Key Cryp-
tography (Berlin, Heidelberg, 2006), PKC’06, Springer-Verlag,
pp. 458–473.
[28] NIELSEN, J. B., NORDHOLT, P. S., ORLANDI, C., AND
BURRA, S. S. A New Approach to Practical Active-Secure Two-
Party Computation. In Proceedings of the 32th Annual Interna-
tional Cryptology Conference on Advances in Cryptology (2012),
CRYPTO ’12. http://eprint.iacr.org/2011/091.
[29] OSADCHY, M., PINKAS, B., JARROUS, A., AND MOSKOVICH,
B. Sciﬁ - a system for secure face identiﬁcation. In Proceedings
of the 2010 IEEE Symposium on Security and Privacy (Washing-
ton, DC, USA, 2010), SP ’10, IEEE Computer Society, pp. 239–
254.
[30] PINKAS, B., SCHNEIDER, T., SMART, N. P., AND WILLIAMS,
S. C. Secure two-party computation is practical. In Proceedings