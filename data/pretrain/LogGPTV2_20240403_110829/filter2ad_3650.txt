title:Demo Overview: Privacy-Enhancing Features of IdentiDroid
author:Daniele Midi and
Oyindamola Oluwatimi and
Bilal Shebaro and
Elisa Bertino
Demo Overview: Privacy-Enhancing Features of
IdentiDroid
Daniele Midi
Purdue University
PI:EMAIL
Oyindamola Oluwatimi
Purdue University
PI:EMAIL
Bilal Shebaro
Purdue University
PI:EMAIL
Elisa Bertino
Purdue University
PI:EMAIL
ABSTRACT
As privacy today is a major concern for mobile systems,
network anonymizers are widely available on smartphones
systems, such as Android. However, in many cases appli-
cations are still able to identify the user and the device
by means diﬀerent from the IP address.
In this demo we
show two solutions that address this problem by providing
application-level anonymity. The ﬁrst solution shadows sen-
sitive data that can reveal the user identity. The second solu-
tions dynamically revokes Android application permissions
associated with sensitive information at run-time. In addi-
tion, both solutions oﬀer protection from applications that
identify their users through traces left in the application’s
data storage or by exchanging identifying data messages. We
developed IdentiDroid, a customized Android operating sys-
tem, to deploy these solutions, and built IdentiDroid Proﬁle
Manager, a proﬁle-based conﬁguration tool for setting diﬀer-
ent conﬁgurations for each installed Android application.
Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection
General Terms
Design, Security
Keywords
Android; IdentiDroid; Anonymity; Permissions; Shadowing
1.
INTRODUCTION
The widespread use of mobile smartphones has raised pri-
vacy concerns as these devices may disclose locations, move-
ments and habits of users. Solutions such as network anonymiz-
ers available on smartphones, like onion router mechanisms
(e.g. Tor [2]) or secure VPN services (e.g. Hotspot Shield [1]),
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage, and that copies bear this notice and the full ci-
tation on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the owner/author(s). Copyright is held by the
author/owner(s).
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
ACM 978-1-4503-2957-6/14/11
http://dx.doi.org/10.1145/2660267.2662380.
are not able to fully address such privacy issues. In many
cases applications are still able to identify users and de-
vices by using information diﬀerent from IP addresses [8].
The operating system, together with the mobile applica-
tions invoked by users, may still release information lead-
ing to re-identiﬁcation of the user and/or the device. Even
when users are careful and do not provide any identifying
data to applications running on their smartphones during
anonymous connections, applications can still leak identify-
ing information without the user’s knowledge. For example,
assume that an Android phone user connects to the Tor net-
work and runs the popular Internet radio application “Pan-
dora”. This application requires access to the user’s Con-
tacts list and device ID. When these privileges are given
to this application, Tor becomes useless as the “Pandora”
servers can easily identify the user through his/her Contact
list or the device ID. Ensuring privacy on mobile devices
thus requires application-level anonymizers in addition to
network anonymizers.
As discussed by Shebaro et al. [7], suitable approaches to
anonymity mechanisms should fulﬁll the following require-
ments: (1) Applications should not be able to bypass the
data access restrictions enforced by the mechanism, and any
request for identifying data should comply with these re-
strictions before data is delivered to the application.
(2)
The approach should not require the application developers
to modify source code. (3) Anonymity restrictions should
be fully customizable per application to give users ﬂexibility
in granting or blocking access to information and resources.
(4) The approach should not introduce signiﬁcant delays in
that could negatively aﬀect the system performance.
In this demo, we demonstrate IdentiDroid, a customized
Android operating system that integrates two solutions ad-
dressing such requirements [7].
2. RELATED WORK
Previous approaches to ensure the privacy of personally
identifying information (PII) on smartphones has mainly fo-
cused on privacy issues resulting from permissions granted
to applications upon installation. Approaches have been
proposed for identifying privacy risks associated with smart-
phone applications and for reducing these risks [6, 3]. How-
ever, these approaches do not protect all the information
that may lead to the user and/or device re-identiﬁcation,
such as user data in applications’ data storage. Other ap-
proaches have focused on privacy risks resulting from over-
1481den from speciﬁc applications. Data shadowing obfuscates
identifying data from applications by replacing it with data
that does not represent the user or device. When such an
application requests access to identifying data or resources,
the call is intercepted and the returned data is random-
ized. Hereafter we describe the diﬀerent techniques used
to shadow diﬀerent sensitive data categories.
Device information. Shadowing device information re-
turns a fake value for the requested information, randomized
upon each request. The device information that we shadow
includes IMEI (GSM) or MEID or ESN (CDMA), Phone
Number, WiFi MAC Address, Android ID, etc.
User databases. Shadowing user databases means re-
turning an empty list of database records to any application
trying to access these records. This applies to phone con-
tacts, SMS/MMS, calendar, music, videos, browser book-
marks/history and accounts.
Resources. Resources are shadowed either by returning
fake values or by ignoring the requests made by applications,
depending on how an application is accessing the resource
(whether using an intent call to an activity or having its own
methods of access), and determined at run-time.
4.2 Dynamic Permission Management
Our second solution is based on a permission manager that
controls the applications access to sensitive permissions at
run-time. Even though Android applications are granted all
their required permissions at installation time, our solution
can dynamically block permissions when these are required
at run-time by applications, by intercepting the permission
calls and denying them at run-time.
4.3 Fresh Start Feature
Fresh Start prevents applications from identifying users by
leaving traces within their own data storage. This feature
can be activated per-application and makes applications be-
lieve to be running on a device for the ﬁrst time by temporar-
ily relocating their data ﬁles to an inaccessible directory (i.e.
one for which no application has access permissions). More-
over, Fresh Start also deletes the application’s cache data,
terminates any related running process, and denies access to
external storage during anonymous sessions.
4.4 Intent Filtering Feature
The Intent Filtering manages data and messages exchanged
between applications, as the user may wish to block the
exchange of identifying data during an anonymous session.
With such feature, applications that have access to identi-
fying data will not be able to send such data to applications
that have been blocked access to identifying data. This fea-
ture prevents cooperative applications from circumventing
anonymity through message exchanges.
4.5 IdentiDroid Proﬁle Manager
The system includes a tool called IdentiDroid Proﬁle Man-
ager (Figure 2) for conﬁguring proﬁles, each consisting of a
set of customized conﬁgurations for every installed Android
application. These conﬁgurations apply once a user acti-
vates a proﬁle, and should be used in conjunction with the
connection to an anonymous network. Users can conﬁgure
these proﬁles to use either one of the anonymity solutions
and customize them per application. Therefore, users have
the ability to tailor diﬀerent proﬁles for protecting various
Figure 1: IdentiDroid architecture
privileged smartphone applications and on tools able to iden-
tify applications violating the least privilege security prin-
ciple [4, 5]. However, these tools are not suﬃcient in that
anonymity can still be broken even with minimally granted
permissions – in some cases even with no permissions – due
to either the lack of protection for all PII or the fact that
applications store PII within their own data storage space.
3. SENSITIVE DATA AND PERMISSIONS
We deﬁne as “sensitive data” any set of information that
can be used to uniquely identify a device or the user of
the device, in the form of identiﬁers (self-identiﬁcation vari-
ables) or quasi-identiﬁers (that can re-identify a user or de-
vice when combined with other data). Sensitive data is
categorized into four groups, each accessed by a diﬀerent
method and thus requiring a diﬀerent protection mechanism:
(a) System Information: information concerning the system
state and identity; (b) User Data: common data generated
by the user, such as contacts and SMSs; (c) Resources: re-
sources provided by the device, such as camera and GPS; (d)
Application Data: data stored and managed autonomously
by the applications.
In order for applications to execute
functions involving the phone hardware, settings, or user
data, speciﬁc permissions must be granted.
In our work,
we deﬁne “sensitive permissions” as permissions that, when
granted, permit access to sensitive data and resources.
4. OVERVIEW OF IDENTIDROID
We demo two solutions, namely Data Shadowing and Dy-
namic Permission Management [7], each oﬀering a diﬀer-
ent technique to protect anonymous users from being iden-
tiﬁed when using applications during anonymous sessions.
Both solutions include two additional features: Fresh Start
and Intent Filtering. Fresh Start prevents applications from
leaving any identifying information within their own data
storage, while Intent Filtering prevents applications from
exchanging messages at run-time during an anonymous ses-
sion. We implemented these two solutions on the Android
operating system as part of a comprehensive anonymity sys-
tem, called IdentiDroid. We integrated our solutions within
the Android application framework layer to guarantee that
no applications can bypass the constraints applied by Iden-
tiDroid (see Figure 1).
4.1 Data Shadowing
Our ﬁrst solution is a data shadowing manager, that en-
ables the user to choose which information needs to be hid-
1482identity from applications, addressing the limitations of so-
lutions based only on network anonymizers. IdentiDroid in-
cludes two mechanisms for privacy protection – one based on
shadowing sensitive data, the other on dynamically block-
ing permissions at run-time. Each such mechanism can be
combined with two features – FreshStart to deal with traces
in the ﬁlesystem and Intent Filtering to manage the data
exchange between applications.
This demo provides two important contributions: (1) we
illustrate the architecture of the IdentiDroid system; (2) we
demonstrate how to conﬁgure anonymous proﬁles and show
the eﬀectiveness of our mechanisms and additional features
in preventing users from being re-identiﬁed by applications.
Our demo presentation also includes a description of imple-
mentation details and challenges.
Experimental results show the eﬀectiveness of these solu-
tions on the sensitive data returned to applications and that
it can no longer identify the user or device. We refer the
reader to the paper by Shebaro et al. [7] for the details on
the experiments.
Acknowledgments
The work reported in this paper has been partially sup-
ported by the Purdue Cyber Center and by the National
Science Foundation under grants CNS-1111512 and CNS-
1016722.
7. REFERENCES
[1] AnchorFree, Inc. Hotspot shield.
http://www.anchorfree.com.
[2] R. Dingledine, N. Mathewson, and P. Syverson. Tor:
The second-generation onion router. In Proceedings of
the 13th Conference on USENIX Security Symposium -
Volume 13, SSYM’04, pages 21–21, 2004.
[3] W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung,
P. McDaniel, and A. N. Sheth. Taintdroid: An
information-ﬂow tracking system for realtime privacy
monitoring on smartphones. In Proceedings of the 9th
USENIX Conference on Operating Systems Design and
Implementation, OSDI’10, pages 1–6, 2010.
[4] A. P. Felt, K. Greenwood, and D. Wagner. The
eﬀectiveness of application permissions. In Proceedings
of the 2Nd USENIX Conference on Web Application
Development, WebApps’11, pages 7–7, 2011.
[5] C. Gibler, J. Crussell, J. Erickson, and H. Chen.
Androidleaks: Automatically detecting potential
privacy leaks in android applications on a large scale.
In Proceedings of the 5th International Conference on
Trust and Trustworthy Computing, TRUST’12, pages
291–307, 2012.
[6] P. Hornyack, S. Han, J. Jung, S. Schechter, and
D. Wetherall. These aren’t the droids you’re looking
for: Retroﬁtting android to protect data from
imperious applications. In Proceedings of the 18th ACM
Conference on Computer and Communications
Security, CCS ’11, pages 639–652, 2011.
[7] B. Shebaro, O. Oluwatimi, D. Midi, and E. Bertino.
Identidroid: Android can ﬁnally wear its anonymous
suit. Trans. Data Privacy, 7(1):27–50, Apr. 2014.
[8] The Tor Project. Want tor to really work?
https://www.torproject.org.
Figure 2: Conﬁguration of anonymous proﬁles via
the Proﬁle Manager
aspects of their identity against a subset of user-installed
applications.
5. DEMONSTRATION
We deployed IdentiDroid on the latest Android Google
Nexus 7 tablet and the Google Nexus 4 phone to compare
the device anonymity behavior before and after using Iden-
tiDroid. For anonymity networks, we used Tor as an onion
routing based network, and Hotspot Shield as a secure VPN,
two of the most popular anonymous communication tech-
niques available for Android devices. The audience of our
demo will be able to see the following:
Proﬁle Conﬁguration: Using a real smartphone run-
ning our customized Android operating system, we will demon-
strate how to conﬁgure anonymous proﬁles via the Proﬁle
Manager application. We will illustrate the diﬀerent set-
tings provided by our system for the various solutions and
features it oﬀers.
Threats on anonymous networks: We will demon-
strate how the use of anonymous network is not suﬃcient
to prevent user re-identiﬁcation by applications. We will il-
lustrate how diﬀerent sensitive data and resources can con-
stitute identifying information by running applications that
will be able to identify a user over multiple sessions even
when network anonymizers are in use, thus illustrating the
extent of the problem we address.
Anonymous sessions: By activating one of the conﬁg-
ured anonymous proﬁles, we will demonstrate how the prob-
lem is solved by the solutions deployed by IdentiDroid. We
will make use of proﬁles that leverage, in turn, only Data
Shadowing, only Permission Management and a combina-
tion of the two.
Fresh Start: We will showcase the eﬀects of Fresh Start
on applications. Applications that locally store information
for user re-identiﬁcation will be shown to run as freshly-
installed during anonymous sessions, while retaining all the
original data once switched back to non-anonymous mode.
Intent Filtering: We will show how message exchange
between applications can leak identifying information. Then,
viewers of our demo will be able to see how Intent Filtering
can protect against such leakage.
6. CONCLUSIONS
In this demo we show several features of IdentiDroid, a
customized Android operating system that protects the user
1483