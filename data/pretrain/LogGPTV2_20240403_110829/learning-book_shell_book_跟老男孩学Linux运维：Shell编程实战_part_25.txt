then
rsync--daemon
if[net8tat-1ntuplgrep raynclwc-1'-ge 1]
sleep2
then
echo*rsyncd is started.*
exit0
[do,-.]T
f1
then
killallrsyne &>/dev/nul1
sleep2
0be--ouAxdx5dnu-su.]
then
echo*rsyncd is stopped.
exit0
elif[*s1=*restart*]
fi
then
killallrsync
sleep1
raync--daemon
sleep1
--ob-
- -
then
echo*rsyncd is restarted.*
exit0
fi
echo S*usage:$0 (startlstoplrestart)*
---
## Page 185
第8章Shel函数的知识与实践67
exit 1
fi
使用start、stop函数将代码模块化，使用系统函数action优化显示的脚本如下：
[rooteoldboy-]#cat/ete/init.d/rsyncdl
1/bin/bash
chkconfig:2345 20 80
description: Rsyncd Startup scripts by oldboy.
./ete/init.d/functions
function usage()(
ecbo S*usage:S0 (startlstopirestart)*
exit1
function start(）（
rsync --daemon
if[netstat-1ntuplgrep rsynclwc-1-ge 1]
sleep1
then
action*rsyncd is started.·/bin/true
else
action *rsyncd is started.*/bin/false
fi
function stop(）(
ki1lall rsyne 6>/dev/nu11
if[netstat-1ntupigrep rsynclwc-1-eg0]
sleep 2
then
action*rsyncd is stopped.*/bin/true
else
action*rsyncd is started.*/bin/false
fi
function main()(
if[s#-ne 1]
then
usage
if[*s1.-*start*]
fi
then
start
then
elif（*si**restart]
stop
then
stop
---
## Page 186
B跟老男孩学Linux运维：Shell编程实战
sleep1
start
else
efesn
fi
nain s*
本脚本实现了高度模块化，即用函数1、函数2、、main函数、mainS*传参，
并能对其调用执行，这样的脚本不但专业规范，面且看上去也很高大上，值得读者花功
夫去研究、学习和掌握。
执行效果如下：
[rooteoldboy-]/etc/init.d/rsyncdl start
rsyncd ia started.
[0]
[rooteoldboy~]#/etc/init.d/rsyncdl stop
rsyncd is stopped.
[rootgoldboy-1#/etc/init.d/rsymcdl start
rsyncd is started.
(rootBoldboy-]/etc/init.d/rsyncdlrestart
rsyncd is stopped.
[X0]
rsyncd is started.
图8-5为执行结果截图。
yscdl stop
311p3
图8-5rsync服务启动脚本执行效果
是不是觉得该脚本已经比较专业了？其实，上述脚本还可以更专业，例如，采用后
文将要讲解的case语句来实现，用exit处理返回值，且通过PID来判断服务启动的情况。
特别说明：可访问如下地址或手机扫二维码查看第8章的核心脚本代码
http:/oldboy.blog.51cto.com/2561410/1855639
---
## Page 187
inux
case条件语句的应用实践
case条件语句相当于多分支的if/elif/else条件语句，但是它比这些条件语句看起来
更规范更工整，常被应用于实现系统服务启动脚本等企业应用场景中。
在case语句中，程序会将case获取的变量的值与表达式部分的值1、值2、值3等
逐个进行比较，如果获取的变量值和某个值（例如值1）相匹配，就会执行值（例如值
1）后面对应的指令（例如指令1，其可能是一组指令），直到执行到双分号（；）才停止，
然后再跳出case语句主体，执行case语句（即esac字符）后面的其他命令。
如果没有找到匹配变量的任何值，则执行“*）后面的指令（通常是给使用者的使
用提示），直到遇到双分号（；）（此处的双分号可以省略）或esac结束，这部分相当于if
多分支语句中最后的else语句部分。另外，case语句中表达式对应值的部分，还可以使
用管道等更多功能来匹配。
9.1case条件语句的语法
case条件语句的语法格式为：
case·变量·in
值1）
指令1.
值2)
指令2
---
## Page 188
m跟老男孩学Linux运维：Shel 编程实战
DPSE
说明：当变量的值等于值1时，执行指令1；等于值2时执行指令2，以此类推；
如果都不符合，则执行“*”后面的指令，即指令3。此外，注意不同行内
容的缩进距离。
为了便于大家记忆，下面是某女生写的case条件语句的中文形象描述：
case“我老公条件”in
家里有房子）
嫁给你...
<==钱
家庭有背景）
嫁给你...
<==权
很务力吃苦）
f:
先谈谈男女朋友.
<==港力股（曹经的老男孩）
*)
good bye! ! ...
#淘
esac
case条件语句的执行流程逻辑图如图9-1所示。
开始
命令集1
命令集2
命令集3
命令集4
sac结束
图9-1case条件语句的执行流程逻辑图
---
## Page 189
第9章C8Se条件语句的应用实践I
9.2
case条件语句实践
范例9-1：根据用户的输人判断用户输人的是哪个数字。
如果用户输人的是1～9的任意数字，则输出对应输人的数字；如果是其他数字及
字符，则返回输入不正确的提示并退出程序。
参考答案1：使用case语句实现。
[root@oldboy scripts]# cat 9_1.sh
this seript is created by oldboy.
#1/bin/bash
PI:EMAIL
<==前面是版权及作者信息。
read-p*Pleaseinputanunber:ans#<打印信息示用户输入，输入信息赋值给ans变量。
<==case语句获取ans变量的值，进入程序区配比校。
1)
<如果用户输入的信息为1.则执行下面的echo命
令输出。
echo
s du nou 
<m=匹配备个值后，执行值后图的命令，直则发分号
的位置，取分号为终止特。
2)
<==如果用户输入的信息为2，则执行下面的echo命
令输出。
   .
11
[39])
<==如果用户输入的信息为3-9中的任意数字，注意范图匹配的正则写法，则执行下面
的echo命令输出。
  u .o
11
(
=如果不匹配上面任何一个值，则执行下面的echo命令输出。
 [6-0]  sd.o
exit;
<esac语句结束前的最后一个值匹配，可以省鸣及分号。
esac
参考答案2：使用if语句实现。
[rootθoldboy scripts] cat 9_2.sh
this script is created by oldboy.
#1/bin/bash
PI:EMAIL
if [ Sans -eq 1 ];then
suqunu ndu osod,d-p
elif[Sans-eq2];then
echo *the num you input is 1*
elif（5an8-ge3-aSans-le9]then
echo *the nun you input is 2*
echo *the num you input is Sans*
else
]q  .
---
## Page 190
m跟老男孩学Linux运维：Shell编程实战
exit
对比case语句和if语句，会发现case语句更简洁更规范，if语句看起来则要复杂一些。
范例9-2：执行shell脚本，打印一个如下的水果菜单：
(1)apple
(2）pear
(3)banana
(4）cherry
当用户输人对应的数字选择水果的时候，告诉他选择的水果是什么，并给水果单词
加上一种颜色（随意），要求用case语句来实现。
在解题之前，先来学点预备知识。
Linux命令行中给字体加颜色的命令为：
近色字oldboy
红色字oldboy
在上述命令中：
口echo-e可以识别转义字符，这里将识别特殊字符的含义，并输出。
口E可以使用V033替代。
口“[1”数字1表示加粗显示（可以加不同的数字，以代表不同的意思，详细信息
可用man console_codes获得）。
口31m表示为红色字体，可以换成不同的数字，以代表不同的意思。
口“红色字oldboy”表示待设置的内容。
口”[0m”表示关闭所有属性，可以换成不同的数字，以代表不同的意思。
有关ANSI控制码的说明如下。
口33[0m表示关闭所有属性。
口\33[1m表示设置高亮度。
口33[4m表示下划线。
口\33[5m表示闪烁。
33[7m表示反显。
口33[8m表示消隐。
口133[30m--133[37m表示设置前景色。
口133[40m--133[47m表示设置背景色。
consolecodes的更多知识可以参考manconsole_codes，普通读者了解即可。
下面先来一个给内容加颜色的热身示例：
---
## Page 191
第9章case条件语句的应用实线m3
[rooteoldboy scripts]# cat plush_color.sh
1/bin/sh
RED_COLOR='\E[1;31n*
GREEN_COLOR='\E[1;32m
<==把颜色定义为变量，以方使使用。
YELLOM_COLOR='\E[1;33m
BLUE_COLOR=\E[1;34m
RES='\E[Om'
<=变量中间就是特加颜色的字特串。
[rooteoldboy scripta]sh pluah_color.sh
oideir
下面正式解答范例9-2。
参考答案1：
[rootθoldboy scripts]cat 9_2.sh
RED_COLOR='\E[1:31m'
#!/bin/sh
GREEN_COLOR='\E[1:32m'
YELLOW_COLOR='\E[1:33m*
BLUE_COLOR='\E[1:34m
echo<==使用echo打印某单，带大家练习下echo打印某单的方法，不过还是使用cat命令更好。
1.apple
2.pear
3.banana
4.cherry
read-p“plsselectanum：num<打印信息提示用户输入，入信惠并赋值给num变量。
uwnus.ee
<==caBe语句获取num变量的值，进入程序匹配比较。
1)
<=如果用户输入的信惠为1.则执行下面的echo奇令输出。
echo
-e
'S(RED_COLOR)appleS(RES)
2)
<如果用户输入的信惠为2，则执行下面的echo命令输出，下网。
echo
-e*S(GREEN_COLOR)PearS(RES)"
(E
4)
<=如果不匹配上面任何一个值，则核行下面的echo会令输出。
echo *muse
be (1121314}*
<mcBac语句结束首的最后一个值匹配，则可以省略双分号。
---
## Page 192
4跟老男孩学Linux运维：Shell编程实战
执行结果如图9-2所示。
pts]=
图9-2菜单功能测试图
参考答案2：
[root9oldboy scripts]cat 9_2_2.sh