Input: -123
Output:-321
Example 3:
Input: 120
output: 21
Note: Assume we are dealing with an environment which could only store integers within the 32-
Jno jeu awnsse walqod sua jo asodund au iog [1 - Lv dtev] :asue aau pauais aq
function returns O when the reversed integer overflows.
题目大意
---
## Page 79
给出一个32位的有符号整数，你需要将这个整数中每位上的数字进行反转。注意：假设我们的环境只能
存储得下32位的有符号整数，则其数值范围为[-2^31，2^31-1]。请根据这个假设，如果反转后整数
溢出那么就返回0。
解题思路
·这一题是简单题，要求反转10进制数。类似的题目有第190题。
·这一题只需要注意一点，反转以后的数字要求在[-2^31，2^31-1]范围内，超过这个范围的数字
都要输出0。
代码
package leetcode
func reverse7(x int) int {
tmp := 0
for x != 0 {
0T%X+0Tdw=dw
x =x / 10
if tmp >1 max {
max = temp
return max
13.RomantoInteger
题目
Roman numerals are represented by seven different symbols: I, V, x, L, C, D and M
Symbo1
Value
I
1
A
X
10
L
50
C
100
D
500
M
1000
Sl ajami auago pappe sauo om isnf jesawnu ueog ul Ii se uanm sl omq aldexa rog
written as, xII, which is simply X + II . The number twenty seven is written as xxvII , which is
II+A+XX
---
## Page 83
Roman numerals are usually written largest to smallest from left to right. However, the numeral
for four is not IIII . Instead, the number four is written as Iv . Because the one is before the
five we subtract it making four. The same principle applies to the number nine, which is written
as Ix. There are six instances where subtraction is used:
●I can be placed before V (5) and x (10) to make 4 and 9.
●X can be placed before L (50) and C (100) to make 40 and 90.
●C can be placed before D (500) and M (1000) to make 400 and 900.
Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from
1 to 3999.
Example 1:
Input: "III"
output: 3
Example 2:
Input:"Iv"
Output: 4
Example 3:
Input: "Ix"
Output:9
Example 4:
Input: "LVIII"
output: 58
Explanation: L = 50, V= 5, III = 3.
Example 5:
Input:“MCMXCIV"
Output:1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.
题目大意
罗马数字包含以下七种字符：1，V，X，L，C，D和M。
---
## Page 84
字符
数值
I
1
V
5
X
10
L
50
C
100
。
500
M
1000
例如，罗马数字2写做II，即为两个并列的1。12写做XII，即为×+II。27写做XXVII,即为XX+V
+ Il 
通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如4不写做I川I，而是IV。数
字1在数字5的左边，所表示的数等于大数5减小数1得到的数值4。同样地，数字9表示为IX。这
个特殊的规则只适用于以下六种情况：
·1可以放在V(5）和×（10)的左边，来表示4和9。
·X可以放在L（50）和C（100）的左边，来表示40和90。
●C可以放在D(500）和M（1000）的左边，来表示400和900。
给定一个罗马数字，将其转换成整数。输入确保在1到3999的范围内。
解题思路
给定一个罗马数字，将其转换成整数。输入确保在1到3999的范围内。
·简单题。按照题目中罗马数字的字符数值，计算出对应罗马数字的十进制数即可。
代码
package leetcode
var roman = map[string]int{
"I": 1,
"v": 5,
"x": 10,
"L": 50,
"c": 100,
"p: 500,
"m": 1000,
func romanToInt(s string) int {
if s == ""{
return 0
num,1astint， total :=0,0,0
---
## Page 85
for i := 0; i = 3 {
res = append(res, []int{uniqNums[i], uniqNums [i], uniqNums[i]})
for j := i + 1; j 1 {
res = append(res, []int{uniqNums[i], uniqNums[i], uniqNums[j]})
1
if (uniqNums[j]*2+uniqNums[i] == 0) && counter[uniqNums[j]]> 1 {
res = append(res, []int{uniqNums[i], uniqNums[j], uniqNums [j]3)
C := 0 - uniqNums[i] - uniqNums [j]
if c> uniqNums[j] && counter[c]>0 {
res = append(res, []int{uniqNums[i], uniqNums[j], c})
return res
16.3Sum Closest
---
## Page 87
题目
Given an array nums of n integers and an integer target, find three integers in nums such that the
sum is closest to target. Return the sum of the three integers. You may assume that each input
would have exactly one solution.
Example:
Given array nums = [-1, 2, 1, -4], and target = 1.
The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
题目大意
给定一个数组，要求在这个数组中找出3个数之和离target最近。
解题思路
这一题看似和第15题和第18题很像，都是求3或者4个数之和的问题，但是这一题的做法和15，18
题完全不同。
这一题的解法是用两个指针夹逼的方法。先对数组进行排序，1从头开始往后面扫。这里同样需要注意
数组中存在多个重复数字的问题。具体处理方法很多，可以用map计数去重。这里笔者简单的处理，i
在循环的时候和前一个数进行比较，如果相等，1继续往后移，直到移到下一个和前一个数字不同的位
置。]，k两个指针开始一前一后夹逼。”为1的下一个数字，k为数组最后一个数字，由于经过排序，所
以k的数字最大。j往后移动，k往前移动，逐渐夹逼出最接近target的值。
这道题还可以用暴力解法，三层福环找到距离target最近的组合。具体见代码。
代码
package leetcode
import（
"math"
"sort"
//解法一0（n^2）
func threeSumclosest(nums []int, target int) int {
n, res, diff :=len(nums), 0, math.MaxInt32
if n > 2 {
sort.Ints(nums)
for i := 0; i  target {
k=-
}else{
j++
return res
//解法二暴力解法o（n^3）
func threeSumClosestl(nums []int, target int) int {
res, difference := 0, math.MaxInt16
for i := 0; i  0 {
return a
return -a
17.LetterCombinationsofaPhoneNumber
题目
Given a string containing digits from 29 inclusive, return all possible letter combinations that
the number could represent.
---
## Page 89
A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does
not map to any letters.
4ghi
/p
8tu
9w
#
Example:
:ndu
Output: ["ad", “ae", “af", “bd", “be", “bf", “cd", “ce", “cf"] .
Note:
Although the above answer is in lexicographical order, your answer could be in any order you
want.
题目大意
给定一个仅包含数字2-9的字符串，返回所有它能表示的字母组合。给出数字到字母的映射如下（与电
话按键相同）。注意1不对应任何字母。
解题思路
·DFS递归深搜即可
代码
package leetcode
var (
letterMap =[]string
//0
11
//1
"abc",
//2
"def",
//3
"ghi",
//4
"jkl",
//5
"mno",
//6
"pqrs", //7