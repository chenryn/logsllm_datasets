## Bug Report
**Current Behavior**  
When using @babel/plugin-transform-async-to-generator and @babel/plugin-
transform-parameters together, awaiting a super method call results in a
'Maximum call stack size exceeded' due to a recursive infinite loop getting
generated.
**Input Code**  
https://babeljs.io/en/repl#?babili=false&browsers=&build=&builtIns=false&spec=false&loose=false&code_lz=MYGwhgzhAEAa0FMAeAXBA7AJjAmgbwChppIBPdYaTAewGVqBbBFACwEt0BzACgEppCxYmADuYNimgQArgAcEAJwB0Nek1YcevANxFoAXwL6gA&debug=false&forceAllTransforms=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.4.5&externalPlugins=%40babel%2Fplugin-
transform-async-to-generator%407.4.4%2C%40babel%2Fplugin-transform-
parameters%407.4.4
Input:
    class X extends Y{
      async doSomething() {
        await super.doSomething();
      }
    }
Relevant output:
    class X extends Y {
      doSomething() {
        var _superprop_callDoSomething = function () {
          return _superprop_callDoSomething(...arguments);
        };
        return _asyncToGenerator(function* () {
          yield _superprop_callDoSomething();
        })();
      }
    }
note the recursive `_superprop_callDoSomething`
**Expected behavior/code**  
No recursive call.
**Babel Configuration (.babelrc, package.json, cli command)**
    {
      "plugins": ["@babel/transform-async-to-generator", "@babel/transform-parameters"]
    }
**Environment**
  * Babel version(s): 7.4.5
  * Node/npm version: Node 8/npm 6
  * OS: Mac OS
  * Monorepo: no
  * How you are using Babel: cli, online repl