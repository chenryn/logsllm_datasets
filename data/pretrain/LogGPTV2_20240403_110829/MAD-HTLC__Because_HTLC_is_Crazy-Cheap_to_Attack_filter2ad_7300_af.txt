the attack it must hold that vdep > f h
+ f. By choos-
ing f h
a fee adhering to the bounds.
(cid:0)vdep − f(cid:1) + f, A can prevent B from paying
b > f h
b of the bribing transaction txh
(cid:0)vdep − f(cid:1) + f.
a offers at least f h
the fee f h
a > λmin
a > λmin
a−f
λmin
a−f
λmin
Myopic Miners: This bribery attack variant relies on
all miners being rational, hence considering their utility at
game conclusion instead of myopically optimizing for the next
block. If a portion of the miners are myopic and any of them
gets to create a block during the ﬁrst T − 1 rounds, that miner
would include A’s transaction and B’s bribery attempt would
have failed.
In such scenarios the attack succeeds only with a certain
probability – only if a myopic miner does not create a block
in the ﬁrst T − 1 rounds. The success probability therefore
decreases exponentially in T . Hence, to incentivize miners
to support the attack, B has to increase his offered bribe
exponentially in T .
The analysis relies on assumptions on the mining power
distribution, and is outside the scope of this work. Notably, for
the simpler case when all other miners are myopic, miner i is
incentivized to support the attack only when it is her dominant
strategy, matching the upper bound of Winzer et al. [28].
D. Non-Myopic Bribery-Accepting Miner Implementation
Aside from the Bitcoin-MEV infrastructure (§VI-B), we
also implemented a simpler Bitcoin Core patch supporting the
mentioned bribe attack on HTLC.
When the patched client receives transactions with an
unexpired timeout (waiting transactions) it stores them in
a data structure instead of discarding them. When creating
a new block, the client ﬁrst checks if any of the timeouts
have elapsed, and if so, moves the relevant transactions to
the mempool. When receiving conﬂicting transactions, instead
of accepting the ﬁrst and discarding the second, it accepts
the transaction that offers a higher fee. In case of a conﬂict
with a waiting transaction, it chooses based on the condition
described in Theorem 2.
The simplicity of this patch (150 LoC, no external modules)
demonstrates that miners can trivially achieve non-myopic
transaction selection optimization.
E. Real-World Numbers
We conclude this section by presenting three examples of
HTLC being used in running systems, and show the substantial
costs to make them resistant against bribery attacks.
Table V presents for each example the HTLC tokens vdep,
the base fee f, and the ratio of required tokens for bribery
resistance (Theorem 2) and the base fee λmin(vdep−f)+f
. To es-
timate the base fee we conservatively take the actual paid fee,
which is an upper bound. We conservatively estimate λmin =
0.01 [87]; miners with lower mining power are less likely due
to economy-of-scale [126].
f
The ﬁrst example is of a Bitcoin Lightning channel [127],
[128], where the required fee to secure the contract against a
bribery is 1.34e4 times the actual fee. Plugging in $10K as the
average Bitcoin price at the time [123], we get that an attack
requires about a $2 bribe for a payoff of over $25K. Note
this is just an arbitrary example, and there are plenty of such
low-fee, high-capacity channels, in all a few dollars bribe is
sufﬁcient to yield tens of thousands of dollars as reward [127].
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:06 UTC from IEEE Xplore.  Restrictions apply. 
1242
Table V: HTLC bribe resistance cost examples.
vdep − f
λmin
Name
vdep
f
(cid:16)
(cid:17)
+ f
Lightning channel
(BTC) [127], [128]
Litecoin atomic swap
(LTC) [129]
Liquality [130] atomic swap
Liquality [130] atomic swap
(ETH) [125]
(BTC) [131]
2.684
1.337
12
2.22e-6
3.14e-4
0.0004
0.278
5.76e-6
f
1.34e4
435.7
301
483.63
The second example is of a Litecoin atomic swap [129],
requiring 436 times higher fee to be secured against bribes.
The last two examples are the two sides of a BTC-ETH atomic
swap conducted by Liquality [130], requiring more than 300X
and 480X fees to be secure, respectively.
VIII. FUTURE DIRECTIONS
We brieﬂy present two future research directions. First, we
discuss attacks and mitigations in a weaker model, where
either A or B have signiﬁcant mining power (§VIII-1). Then,
we discuss how using MAD-HTLC can reduce latency in
systems utilizing HTLC-Spec (§VIII-2)
1) Mining A or B: As in previous work [26], [28], the
security analysis of MAD-HTLC assumes that A and B have
no mining capabilities and do not collude with any miner.
Indeed, acquiring mining capabilities (or forming collusion
agreements) requires a signiﬁcant
investment, substantially
higher than necessary for a simple bribe. Removing this
assumption extends the game space considerably, and brings
in timing and probability considerations that are outside the
scope of this work. Nevertheless, we brieﬂy present the issue
and a potential low-overhead modiﬁcation that disincentivizes
such attacks.
A with mining capabilities that knows prea can stall until
the timeout elapses and B publishes preb, and then redeem
both MH-Dep (using either dep-A or dep-M) and MH-Col
(using col-M). This requires A to create the block right after
the timeout elapses, otherwise another miner would include
B’s transactions. The potential proﬁt is the vcol tokens, whose
number is in the order of a transaction fee.
B with mining capabilities can redeem MH-Dep (us-
ing dep-M) if he knows prea. This requires B to create the
ﬁrst block after the MAD-HTLC initiation, otherwise another
miner would include A’s transaction. The potential damage
for this case is similar to the HTLC bribery (Winzer et
al. [28] and §VII-C), and note that any miner will be able
to redeem MH-Col once the timeout elapses.
Both variants require the miner to reveal prea and preb
by creating a block at a speciﬁc height, meaning they only
succeed with some probability. As such, their proﬁtability
depends on the relative mining size of the miner, the deposit
and collateral amounts, and the transaction fees.
Nevertheless, these are vulnerabilities of MAD-HTLC, and
we propose the following countermeasure: Instead of having a
single MH-Dep and a single MH-Col, have multiple of each,
all with the same diga and digb, but each with a different
timeout T , and split vdep and vcol among them.
As one of the timeouts elapse, if the miner attacks then she
loses her advantage, as once she exposes prea and preb, any
miner can compete for the remaining contracts. Therefore, this
mechanism diminishes the attack proﬁtability.
This adjustment’s overhead is only due to the fees for
creating and redeeming more contracts. However, those can
be small, independent of the secured amount.
2) Latency Reduction: Systems utilizing HTLC-Spec must
set the timeout parameter T , facing a trade-off. Too short
timeouts result in a security risk – B might get the tokens
unjustly because A’s transaction was not yet conﬁrmed. Too
long timeouts imply an opportunity cost due to the unavailabil-
ity of the locked coins, and increase susceptibility to various
attacks [12], [132], [133].
MAD-HTLC can allow for signiﬁcantly reduced timeouts
compared to HTLC, since instead of waiting for conﬁrmation,
it now sufﬁces to consider transaction publication. The anal-
ysis depends on mempool and congestion properties that are
outside the scope of this work.
IX. CONCLUSION
We introduce a novel approach of utilizing miner’s ratio-
nality to secure smart contracts, and use it to design MAD-
HTLC, a contract implementing HTLC-Spec. We show using
the UC framework and with game-theoretic analysis that
MAD-HTLC is secure. We also show the prevalent HTLC
is vulnerable to cheap bribery attacks in a wider variety of
systems, and qualitatively tighten the known cost bound in
presence of rational miners. We demonstrate the efﬁcacy of
our approach by implementing and executing MAD-HTLC on
Bitcoin and Ethereum. We also demonstrate the practicality
of implementing a rational miner by patching the standard
Bitcoin client.
Both the attack against HTLC and the secure alternative
MAD-HTLC have direct impact on a variety of contracts using
the HTLC-Spec design pattern. As miners’ incentives to act
rationally increase, those systems will become vulnerable and
can directly adopt MAD-HTLC as a plug-in alternative.
X. ACKNOWLEDGMENTS
We thank the anonymous reviewers, Sebastian Faust, and
our shepherd Dominique Schr¨oder for their valuable feedback
and guidance. This research was supported by the Israel
Science Foundation (grant No. 1641/18), an IC3 research
grant, the US-Israel Binational Science Foundation (BSF), and
the Technion Hiroshi Fujiwara cyber-security research center.
REFERENCES
[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: http://www.bitcoin.org/bitcoin.pdf
[2] V. Buterin,
“A next
generation
smart
centralized
https://www.ethereum.org/pdfs/EthereumWhitePaper.pdf/
application
platform,”
2013.
contract & de-
[Online]. Available:
[3] cryptoslate.com.
(2020) Cryptocurrency market
capitalizations.
[Online]. Available: https://cryptoslate.com/coins/
[4] J. Poon and T. Dryja, “The bitcoin lightning network: Scalable off-
chain instant payments,” 2016.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:06 UTC from IEEE Xplore.  Restrictions apply. 
1243
[5] C. Decker and R. Wattenhofer, “A fast and scalable payment network
with Bitcoin Duplex Micropayment Channels,” in Stabilization, Safety,
and Security of Distributed Systems - 17th International Symposium,
2015.
[6] M. Green and I. Miers, “Bolt: Anonymous payment channels for
decentralized currencies,” in Proceedings of the 2017 ACM CCS, 2017.
[7] P. McCorry, M. M¨oser, S. F. Shahandasti, and F. Hao, “Towards
bitcoin payment networks,” in Australasian Conference on Information
Security and Privacy, 2016.
[8] A. Miller, I. Bentov, S. Bakshi, R. Kumaresan, and P. McCorry, “Sprites
and state channels: Payment networks that go faster than lightning,” in
Financial Cryptography and Data Security, 2019.
[9] S. Dziembowski, S. Faust, and K. Host´akov´a, “General state channel
networks,” in Proceedings of the 2018 ACM CCS, 2018.
[10] S. Dziembowski, L. Eckey, S. Faust, and D. Malinowski, “Perun:
Virtual payment channels over cryptographic currencies.” IACR ePrint,
2017.
[11] M. Herlihy, “Atomic cross-chain swaps,” in Proceedings of the 2018
ACM symposium on principles of distributed computing, 2018.
[12] G. Malavolta, P. Moreno-Sanchez, C. Schneidewind, A. Kate, and
M. Maffei, “Anonymous multi-hop locks for blockchain scalability and
interoperability.” in NDSS, 2019.
[13] R. van der Meyden, “On the speciﬁcation and veriﬁcation of atomic
swap smart contracts,” in IEEE ICBC, 2019.
[14] M. H. Miraz and D. C. Donald, “Atomic cross-chain swaps: devel-
opment, trajectory and potential of non-monetary digital token swap
facilities,” Annals of Emerging Technologies in Computing (AETiC)
Vol, 2019.
[15] J.-Y. Zie, J.-C. Deneuville, J. Briffaut, and B. Nguyen, “Extending
atomic cross-chain swaps,” in Data Privacy Management, Cryptocur-
rencies and Blockchain Technology, 2019.
[16] G. Maxwell,
“The ﬁrst
contingent
payment.” [Online]. Available: https://bitcoincore.org/en/2016/02/26/
zero-knowledge-contingent-payments-announcement/
zero-knowledge
successful
[17] M. Campanelli, R. Gennaro, S. Goldfeder, and L. Nizzardo, “Zero-
knowledge contingent payments revisited: Attacks and payments for
services,” in Proceedings of the 2017 ACM CCS, 2017.
[18] W. Banasik, S. Dziembowski, and D. Malinowski, “Efﬁcient zero-
knowledge contingent payments in cryptocurrencies without scripts,”
in European Symposium on Research in Computer Security, 2016.
[19] G. Fuchsbauer, “Wi is not enough: Zero-knowledge contingent (ser-
vice) payments revisited,” in Proceedings of the 2019 ACM CCS, 2019.
[20] S. Bursuc and S. Kremer, “Contingent payments on a public ledger:
models and reductions for automated veriﬁcation,” in European Sym-
posium on Research in Computer Security, 2019.
[21] M. M¨oser, I. Eyal, and E. G. Sirer, “Bitcoin covenants,” in Financial
Cryptography and Data Security, 2016.
[22] P. McCorry, M. M¨oser, and S. T. Ali, “Why preventing a cryptocur-
rency exchange heist isn’t good enough,” in Cambridge International
Workshop on Security Protocols, 2018.
[23] Bryan Bishop, “Bitcoin vaults with anti-theft
recovery/clawback
mechanisms.” [Online]. Available: https://lists.linuxfoundation.org/
pipermail/bitcoin-dev/2019-August/017231.html
[24] A. Zamyatin, D. Harz, J. Lind, P. Panayiotou, A. Gervais, and W. Knot-
tenbelt, “Xclaim: Trustless, interoperable, cryptocurrency-backed as-
sets,” in 2019 IEEE S&P, 2019.
[25] J. Bonneau, “Why buy when you can rent?” in Financial Cryptography
and Data Security, 2016.
miners,” in FC, 2018.
[26] P. McCorry, A. Hicks, and S. Meiklejohn, “Smart contracts for bribing
[27] A. Judmayer, N. Stifter, A. Zamyatin, I. Tsabary, I. Eyal, P. Gaˇzi,
S. Meiklejohn, and E. Weippl, “Pay-to-win: Incentive attacks on proof-
of-work cryptocurrencies,” 2019.
[28] F. Winzer, B. Herd, and S. Faust, “Temporary censorship attacks in the
presence of rational miners,” in 2019 IEEE EuroS&PW, 2019.
[29] J. Harris and A. Zohar, “Flood & loot: A systemic attack on the
lightning network,” in Proceedings ACM AFT, 2020.
[30] D. Deudney, Whole Earth Security: A Geopolitics of Peace. Worldwatch
Paper 55., 1983.
[31] A. Asgaonkar and B. Krishnamachari, “Solving the buyer and seller’s
dilemma: A dual-deposit escrow smart contract for provably cheat-
proof delivery and payment for a digital good without a trusted
mediator,” in IEEE ICBC, 2019.
[32] S. Tadelis, Game theory: an introduction, 2013.
[33] R. Canetti, Y. Dodis, R. Pass, and S. Walﬁsh, “Universally composable
security with global setup,” in TCC, 2007.
[34] T. Roughgarden, “Algorithmic game theory,” Communications of the
[35] Wikipedia, “Bitcoin script.” [Online]. Available: https://en.bitcoin.it/
ACM, 2010.
wiki/Script
[36] Ethereum.
(2020) Solidity language.
[Online]. Available: https:
//github.com/ethereum/solidity
[37] P. Daian, S. Goldfeder, T. Kell, Y. Li, X. Zhao, I. Bentov, L. Brei-
denbach, and A. Juels, “Flash boys 2.0: Frontrunning in decentralized
exchanges, miner extractable value, and consensus instability,” in 2020
IEEE S&P.
[38] A.
(2020)
Shevchenko.
are
manipulating
[Online].
Available: https://cointelegraph.com/news/researcher-suggests-miners-
are-manipulating-ethereum-blocks-to-exploit-deﬁ
ethereum blocks
suggests miners
Researcher
exploit
deﬁ.
to
[39] E. Felten. (2020) Meva (what is it good for?). [Online]. Available: https:
//medium.com/offchainlabs/meva-what-is-it-good-for-de8a96c0e67c
[40] C. Dance.
(2020) Bitcoin client software distribution.
[Online].
Available: https://coin.dance/nodes
[41] R. Selten, “Spieltheoretische behandlung eines oligopolmodells mit
nachfragetr¨agheit: Teil
i: Bestimmung des dynamischen preisgle-
ichgewichts,” Zeitschrift f¨ur die gesamte Staatswissenschaft/Journal of
Institutional and Theoretical Economics, 1965.
[42] C. Dannen, Introducing Ethereum and Solidity, 2017.
[43] S. Blackshear, E. Cheng, D. L. Dill, V. Gao, B. Maurer, T. Nowacki,
A. Pott, S. Qadeer, D. R. Rain, S. Sezer et al., “Move: A language
with programmable resources,” 2019.
[44] M. Baudet, A. Ching, A. Chursin, G. Danezis, F. Garillot, Z. Li,
D. Malkhi, O. Naor, D. Perelman, and A. Sonnino, “State machine
replication in the libra blockchain,” 2018.
[45] Litecoin Project, “Litecoin, open source P2P digital currency,” 2014.
[Online]. Available: https://litecoin.org
[46] D. Hopwood, S. Bowe, T. Hornby, and N. Wilcox, “Zcash protocol
speciﬁcation,” GitHub: San Francisco, CA, USA, 2016.
[47] B. Cash.
(2020) Bitcoin
cash.
[Online]. Available:
https:
//www.bitcoincash.org/
[48] R. W. Rosenthal, “Games of perfect information, predatory pricing and
the chain-store paradox,” Journal of Economic theory, 1981.
[49] D. Fudenberg and J. Tirole, “Game theory, 1991,” Cambridge, Mas-
[50] R. Myerson, “Game theory: Analysis of conﬂict harvard univ,” Press,
sachusetts, 1991.
Cambridge, 1991.
[51] E. Van Damme, “Strategic equilibrium,” Handbook of game theory with
economic applications, 2002.
[52] J. Watson, Strategy: an introduction to game theory, 2002.
[53] J. Cerny, “Playing general imperfect-information games using game-
theoretic algorithms,” Ph.D. dissertation, PhD thesis, Czech Technical