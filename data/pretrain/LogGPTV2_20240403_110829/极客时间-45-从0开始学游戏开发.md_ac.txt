## "伪 3D"游戏 {#03.html#-3d-}我们熟知的 3D 游戏，有广义、狭义之分。狭义的 3D 游戏是指 Polygon游戏，也就是多边形游戏，需要靠纯 3D 计算技术实现操作。而广义的 3D游戏，则包括了"伪 3D"游戏。所谓伪 3D，其实就是 2D+3D，也有人称之为2.5D。其实就是将 2D 和 3D 技术结合起来，实现 3D 游戏的体验。类似《暴力摩托》这样的早期 3D 游戏，其实就是"伪3D"，它基本上是通过**模拟计算**和**光线跟踪**（Raycasting）算法做出来的。因此，**2D游戏引擎无法制作狭义的 3D 游戏，而 3D 游戏引擎则可以做 2D 游戏。**比如，《梦幻西游》可以称作"伪3D"，而《暴力摩托》、早期的赛车游戏、《DOOM》等，都可以归类为广义的 3D游戏。我们继续拿《暴力摩托》，或者更早期的赛车游戏来举例。``{=html}![](Images/e4984d01b78adab9c368398215ce4d90.png){savepage-src="https://static001.geekbang.org/resource/image/87/da/87483c1fb12cbb8e7691f6d8843959da.jpg"}这类游戏的内存中，存在两种甚至多种主角赛车的形态图像，比如近景摩托车、远景摩托车。在判断速度大小之后，我们可以对图像进行替换，以此让玩家感觉到远近；背景和地面则是按照线条来处理，也就是将一副背景图片分成N 条线，而第 N+1 条线会比第 N条放大一倍，以此达到给赛道设置不同远近的效果；根据玩家赛车的前后位置，来判断绘制每一行的"放大"。而玩家控制的赛车则是一个活动块。每个活动块都存放有不同远近大小的图像形态，来控制前后图像大小。国外有不少专门研究这类"伪3D"技术的网站，我在这里推荐几个，你有兴趣的话可以去看看。那么，用 3D 游戏引擎制作 2D 游戏究竟是怎么回事呢？就是将 3D游戏的视角和控制锁定在只有 2D 能呈现的范围内，让玩家误以为是 2D游戏，但是这类游戏可以**借助 3D 引擎来优化游戏的声光和绚丽的特效，让 2D游戏更大放异彩。**再者，在移动端的表现上，2D 游戏其实和 3D 游戏不相上下。首先，利用小屏幕观看 3D画面非常累。由于手机计算能力有限，所以目前移动端的 3D游戏大部分都还是以低模为主。浅显地讲，高模就是相当精细的模型和贴图，由无数个面（看需求）组成的模型，而低模一般会为了计算效率考虑控制其3D 面数，贴图也相对简单。其次，在移动设备上，因为移动平台的硬件限制，3D引擎的表现一定不如电脑或者主机游戏来得好。这样一来，2D游戏其实有非常大的施展空间。
## 2D 游戏和 3D 游戏在电子竞技中的区别 {#03.html#2d-3d-}我们再来看看电子竞技这一块。我们都知道《星际争霸》在前几年一直是韩国的"国技"。《星际争霸1》的选手水平占据着全球巅峰位置。2015 年之后，由于圈内丑闻加上《星际争霸2》的出现，《星际争霸 1》的三大联赛几乎销声匿迹。然而《星际争霸2》却没有想象中那么火爆。虽然有《DOTA》《LOL》的泰山压顶之势，但总体原因除了《星际争霸2》的平衡性外，还有一个原因是，《星际 2》的 3D画面并不完全适合电视转播。我们拿《星际争霸 1》的 2D 画面和《星际争霸 2》的 3D画面进行比较。这里，第一幅图是《星际 1》的画面，第二幅图是《星际2》的画面。![](Images/f4a5c4b18db9a63d58215faa9ab2b4f6.png){savepage-src="https://static001.geekbang.org/resource/image/f6/74/f63c7cb07818dc0d0771139008ae4974.jpg"}![](Images/aa7cbee9018eaf63e68f8da2636035ab.png){savepage-src="https://static001.geekbang.org/resource/image/04/36/041b56fd0bb54443d32c083c237a7136.jpg"}你可以看到，3D画面几乎要在高清画质的情况下才能看清楚单位兵种、战斗场面，而且很多时候都是一团黑漆漆、绿乎乎的3D画面堆在一起。《LOL》看似没有这种情况，是因为大家都熟悉每个英雄的形象，加上地图比较明亮，兵种没有《星际争霸》那么多。我们再来看《星际争霸1》的画面，层次分明，清晰可辨，哪怕在低画质的情况下仍然可以一眼看出究竟是什么兵种，有的时候，甚至连地雷都能看清楚。当然，**这并不是说3D 比不过 2D，而是在某些特殊情况和场景下，3D 图形会有一些缺陷。**由于表现方式不同，3D 游戏最典型的就是比 2D 游戏的坐标多出一个 Z值。**所谓的 Z 值，就是除了 X、Y的长宽之外，还多了一个高度值。**这个值我们也可以用在 2D 游戏中。在 PS 时代，有不少 2D 和 3D 结合在一起的游戏。比如，《生化危机》系列的1、2、3 部，都属于 2D 静态场景、3D 模型。再比如，《最终幻想》系列的7、8。玩家在世界地图行动的时候，使用的是 3D画面，但是在游戏主场景里面，使用的仍然是《生化危机》那种 3D 建模。2D渲染场景使用伪 3D 技术，一般是因为机能限制或者 3D技术不成熟，但实际的实现难度不会比纯 3D 技术更简单。
## 3D 游戏和 2D 游戏在美术上的区别 {#03.html#3d-2d-}从美术方面来说，3D 游戏和 2D 游戏的区别也相当大。在 3D建模和骨骼方面，一个熟练的美工，只需要在原有模型上添加或者修改某些物件。比如给某个生物加一个角，给它增加一个小小的动作。这样模型的修改，对于美工来说，是比2D 美术要简单的。因为 2D美术一般都是手绘，所以如果需求改动特别明显，那一系列跟该角色相关的图案都需要手工调整，这是非常大的工作量。准确地讲，2D 游戏是 2D 图像图形进行线性的一些变换将之渲染至屏幕而成。而3D 的游戏是将 3D 的图形图像进行 3D线性变换然后投影（Projection）至显示器（显示器是 2D的）而成。显示器在视觉上形成远近大小的效果，让我们看起来是立体的。事实上，我们眼睛的视网膜也是这么工作的。
## 游戏的本质 {#03.html#-}说了这么多 2D 游戏和 3D游戏的区别，最后，我想跟你谈一点轻松的内容。游戏的本质究竟是什么？不管是作为开发者，还是策划、运营人员，或者是打游戏的玩家，我想请你思考一下这个问题。有人说，游戏的本质是人类的层次需求，并且还进行了细致的分析。其实不需要这么复杂，要我说，游戏的本质就是供人娱乐，给人各种开心的、刺激的、恐怖的感官刺激。有些人喜欢复杂策略类的游戏，那么繁琐复杂的《太空帝国》就能满足他们。有些人喜欢快节奏的游戏，那么赛车或者打一局就走的《FPS》可以满足你的胃口；像我就喜欢悠哉悠哉地不受任务限制，那么"GTA系列"和"老滚系列"就是我的选择。那如何定义一款成功的游戏呢？如何做出一个爆款游戏呢？我想说的是，一款游戏的成功离不开美术、音乐等等这些硬指标，然而这些指标却不能决定这款游戏是否能深得人心。每一个人心中的判断并不一样，大量的人玩《王者荣耀》，但这并不代表它是优秀的游戏，只能说是成功的游戏。毕竟，青菜萝卜各有所爱。
## 小结 {#03.html#-}这一节内容差不多了，总结一下，你需要记住这几点：-   3D 和 2D 游戏的区别主要体现在呈现画面和文件体积上；-   借助 3D 引擎可以提升 2D 游戏的声光和特效效果；-   成功的游戏不一定是优秀的游戏。最后，给你留个思考题吧。你觉得一款成功的游戏需要具备什么样的特点呢？欢迎留言说出你的看法，我在下一节的挑战中等你！![](Images/687aa95b3803eb0079b384dbad39d165.png){savepage-src="https://static001.geekbang.org/resource/image/1d/cf/1dddc22b262072c5c2e8b4937907f7cf.jpg"}
# 第3讲 \| 游戏的发动机：游戏引擎估计长期玩游戏的玩家，都能脱口而出几款游戏引擎的名字，比如"虚幻""寒霜""狂怒"等等。那你能说说，游戏引擎究竟是什么吗？它在游戏开发中究竟起着什么样的作用呢？
## 游戏引擎是什么？ {#04.html#-}汽车没有发动机就无法跑起来，人类没有心脏就会死亡。而引擎就是发动机，就是心脏。我们先来看一下维基百科对于游戏引擎的定义：游戏引擎是指一些已编写好的可编辑电脑游戏系统或者一些交互式实时图像应用程序的核心组件。这些系统为游戏设计者提供各种编写游戏所需的各种工具，其目的在于让游戏设计者能容易和快速地做出游戏程序而不用由零开始。大部分都支持多种操作系统平台，如Linux、Mac OSX、Windows。大多数游戏引擎包含以下系统：渲染引擎、物理引擎、碰撞检测系统、音效、脚本引擎、电脑动画、人工智能、网络引擎以及场景管理。]{.reference}这个概念是不是看起来还是不太好理解？我来具体解释一下，游戏引擎到底是什么，以及它究竟能干什么。1.  **游戏引擎就是图形引擎。**准确地说，游戏引擎约等于图形引擎。玩家口中所说的"虚幻""寒霜"等，这每一款引擎对于图形渲染的处理方式都不同，所以用某个引擎编写出来的游戏，具体的表现画面也会不同。比如，有的引擎编写出的光影效果特别绚丽，有的则粒子效果特别真实。2.  **游戏引擎是一整套游戏解决方案。**其实，游戏引擎并不仅仅等同于图形引擎。图形引擎只是游戏引擎中一个占比极大的组成部分。一款好的游戏引擎，不仅要看它对于图形图像的处理能力，也要看它对于其他部分的处理能力，比如对音频、音效的播放、键盘鼠标的处理，以及    UI    界面的编辑和各种处理工具的提供。这里的处理工具包括地图编辑器、关卡编辑器、人物编辑器、资源编辑器、物理碰撞、碰撞检测等。所以，从专业的角度讲，游戏引擎是完成开发一套游戏的解决方案，而不仅涉及图形部分。3.  **游戏引擎是一整套编程接口。**要写游戏就必须写程序，所以有游戏引擎就一定需要编程。不管你是直接面对引擎编写代码，还是在引擎提供的编辑器（比如关卡编辑器）基础上编写简单的逻辑代码，写代码都是必不可少的。在引擎提供的编程接口上，你能很容易地调用各种接口完成游戏的开发。