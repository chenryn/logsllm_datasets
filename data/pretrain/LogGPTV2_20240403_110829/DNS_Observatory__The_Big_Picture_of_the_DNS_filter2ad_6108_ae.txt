NA
None
None
f1g1ns[1,2].dnspod.net → ns[3,4].dnsv2.com
Unknown
Date Change
2019-04-23 01:00
2019-04-23 10:27
2019-04-21 19:18
2019-04-24 01:00
2019-04-25 04:00
2019-04-21 07:30
2019-04-22 09:00
Comment
Dynamic TTL
Change to MS cloud
Change NS and A
–
–
–
–
Table 4: TTL changes detected and classification
to predict changes to the DNS infrastructure—even if they do not
occur that often.
5 HAPPY EYEBALLS AND NEGATIVE
CACHING TTLS
Another interesting effect we can observe with the data from DNS
Observatory is the impact of the devices using the Happy Eyeballs
algorithm on the volume of empty DNS responses, due to low
negative caching TTLs.
5.1 Background
Happy Eyeballs is a standardized algorithm [61, 69] where a host
with IPv4 and IPv6 connectivity sends both A and AAAA queries
to learn IPv4 as well as IPv6 addresses of a domain name. The host
then tries to establish a connection to the returned IP addresses—
normally a slight advantage of a few ms is given to IPv6. For do-
mains that only map to an IPv4 address and no IPv6 address, the use
of Happy Eyeballs expectedly leads to empty AAAA responses (i.e.,
NoData). These empty AAAA responses should be cached by the
resolver, in order to avoid constant resending of the same AAAA
queries for domain names without associated IPv6 addresses. The
caching duration is determined by the domain’s SOA record: its
rightmost value specifies the negative caching TTL.
We acknowledge that the TTLs are not the only determining
factor influencing the frequency of queries for particular domain—
resolver configuration, query prefetching, and specific implementa-
tion details can play an important role. However, lower negative
caching TTLs generally lead to higher DNS traffic volumes. Note
that, according to [53], DNS is already the top producer of new
flows in many subscriber networks.
For IPv4-only domains, if the negative caching TTL is much
lower compared with the regular A record TTL, this leads to many
of all DNS responses being empty AAAA responses. This DNS
traffic of questionable usefulness increases the load on authoritative
nameservers and also causes more query sending and processing
by recursive resolvers. Moreover, note the “Resolution Delay” of
the Happy Eyeballs v2 algorithm [61], which by default makes the
device wait up to 50ms for the response to AAAA query, even if the
A response is received quicker. Thus, the additional time needed to
query the authoritative nameserver instead of using the resolver
cache will be directly reflected in the IPv4 connection delay.
5.2 Correlating low negative caching TTL with
empty AAAA responses
In the following, we analyze the top 200 FQDNs by DNS traffic in
April 2019.
Figure 9: Comparing negative caching TTLs to share of
AAAA NO DATA responses for top 200 FQDNs ranked by
traffic. On the left y-axis we show the share of empty AAAA
responses for each specific top-200 FQDN. The right y-axis
displays the quotient of the A resource TTL by the negative
caching TTL. The larger the quotient the more likely many
empty AAAA responses.
Figure 9 shows the impact of low negative caching TTLs in
combination with the Happy Eyeballs algorithm on the number of
empty AAAA responses. In the top 200 FQDNs, we find 5 FQDNs
with more than 70 % of all responses being empty AAAA responses.
These empty responses and the triggering queries lead to an in-
creased load at the resolvers and authoritative nameservers.
Most striking are the two FQDNs at ranks 81 and 116, which are
used for network time services of a popular operating system. Both
domains have a regular A record TTL between 10 and 15 minutes,
but a 50 times lower negative caching TTL of 15 seconds. This
discrepancy leads to 89 % and 94 % of all responses being AAAA
NoData, respectively.
The FQDN at rank 141, which belongs to a large ad network,
has a five times shorter negative caching TTL compared to the A
TTL, i.e., 300 vs. 60 seconds. This in turn leads to a share of 75 % of
empty AAAA respones.
Similarly, at rank 167 we find an FQDN used for operating system
updates hosted by a large CDN with an A record TTL of 1 hour,
but a negative caching TTL of just 10 minutes. This six times lower
negative caching TTL in combination with the Happy Eyeballs
algorithm leads to 88 % of all DNS responses being empty AAAA
responses.
97
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Foremski, Gasser, and Moura
Interestingly, at rank 140 we see an example of an FQDN, used
for hosting blogs, with more than 74 % of empty AAAA responses,
but an actually six times higher negative caching TTL compared
with the A record TTL. We suspect that this artifact is due to some
resolvers not respecting its relatively high negative caching TTL of
1 hour.
We notified operators of the nameservers most affected by the
use of low negative caching TTLs. We received a response from a
large CDN stating that they use low negative caching TTLs purely
as a defensive measure, in case of an error in the way they generate
dynamic authoritative responses.
5.3 Effect of deploying IPv6
In the light of Happy Eyeballs leading to many AAAA queries and
subsequent empty responses for non-IPv6 FQDNs, we investigate
FQDNs that enabled IPv6 during our observation period in April
2019.
We find 10 FQDNs that added IPv6 support and started sending
AAAA responses containing actual data. By analyzing each FQDN
we see the number of empty AAAA responses going down after
IPv6 activation as expected. Additionally, we find no significant
change in query volume correlated to the activation of IPv6 for
each FQDN. This is not surprising, as all 10 FQDNs use equal or
larger negative caching TTLs compared with regular TTLs.
We conclude that activating IPv6 for FQDNs does not signifi-
cantly change query volumes, if the negative caching TTLs are
similar to regular TTLs. If the negative caching TTLs are much
shorter than regular TTLs, this changes as shown in subsection 5.2.
5.4 Discussion
With the continuously growing IPv6 deployment [28] and clients
using the Happy Eyeballs algorithm [61, 69] to learn IPv4 and IPv6
addresses for each domain name, authoritative servers need to cope
with an increasing query load. As shown in section 5 especially the
combination of IPv4-only domains and low negative caching TTLs
lead to many empty AAAA responses.
Three possible courses of action are (1) adding a new query type
for joint A and AAAA query, (2) separating the negative caching
between NXDOMAIN and NODATA, or (3) simply changing the
negative caching TTL to a value more in line with the TTL of A or
other query types.
The first option would enable clients to request IPv4 and IPv6
addresses for the same query name. Although this is similar to an
ANY query, the response would be limited to A and AAAA records.
In addition, a single TTL for both IPv4 and IPv6 addresses could
be used, making caching easier. If any server in the chain—i.e.,
recursive resolver or authoritative nameserver—does not support
this new query type, the requesting client could fall back to sending
separate A and AAAA queries.
The second option goes back to discussions with DNS opera-
tors. They suggested to split semantic of the negative caching TTL,
which is currently used for NXDOMAIN as well as NODATA. As
a result, zone administrators who are worried about NXDOMAIN
resulting from zone misconfigurations could then choose a shorter
NXDOMAIN TTL and a NODATA TTL resembling the regular A
98
record TTL. Consequently, the share of empty AAAA responses
could be greatly decreased.
The third option—setting the negative caching TTL to similar
value as the A record TTL—is the simplest in terms of configuration
effort, and requires no changes to the DNS itself. It has, however,
drawbacks, as some DNS operators confirmed us that they are
explicitly setting low negative caching TTLs as a defensive measure,
reducing the time needed to distribute remediated zones through
caches.
Generally, we want to emphasize that low negative caching TTLs
in combination with the Happy Eyeballs have a direct negative
impact on client latency, as they need to wait for the recursive
resolver to issue AAAA queries instead of serving them from the
cache.
6 RELATED WORK AND DATASETS
Active measurements of the DNS: the OpenINTEL project by Rijswijk-
Deij et al. [65] is a large active DNS measurement study that makes
daily scans of all domains under legacy gTLDs, new gTLDs, and a
dozen ccTLDs, for a total of 218 million SLDs daily. Each domain
is measured using many features, with an exceptional support for
DNSSEC [51]. Comparing with our work, DNS Observatory pro-
vides a different view on the DNS, based on passive, aggregated
measurements of the most popular DNS objects, such as authorita-
tive nameserver IPs, SLDs, FQDNs, and more. Instead of actively
sending 1 set of queries per SLD every 24 hours from 1 location,
we extract our data from real-world DNS traffic collected globally.
Thus, we are not limited to a fixed set of QTYPEs or TLDs, and we
monitor the traffic volumes.
Project Sonar run by Rapid7 Labs provides the Forward DNS
dataset [57] that contain answers to A, AAAA, ANY, CNAME,
MX, and TXT lookups for many FQDNs collected by the project
(including web crawling, reverse DNS, SSL certificates, TLD zone
files [56]). Thus, it resembles the OpenINTEL project but collects
no features (except for the returned records), scans the DNS less
frequently, and in general has less SLD coverage.
The RIPE Atlas project [59], a global Internet measurement plat-
form, publishes the data collected by its users, which includes DNS
responses [58]. The system has over 10 k probes spread around the
world that allow to run various active measurements of recursive
and authoritative DNS servers. However, collected data depends on
lists of domains queried by RIPE Atlas users, and thus data coverage
compared with DNS Observatory or OpenINTEL is quite limited.
The above DNS studies and datasets are obtained using active
measurements, i.e., the tools actively send DNS queries for predeter-
mined lists of domains. In our paper, however, the data is obtained
in passive measurements: we analyze traffic from production re-
solvers spread over multiple locations to authoritative nameservers.
As such, our data is a direct function of user activity and cache
misses, has finer granularity (multiple vantage points and time
aggregations), and covers not only TLDs, but also SLDs, FQDNs,
QTYPEs, and many other DNS objects. On the other hand, note
that research on IPv6 addressing often relies on periodic large-scale
DNS lookups—targeting e.g., zone files, Certificate Transparency
domains, and domains learned from rDNS—in order to gather IPv6
addresses for scanning the Internet [26, 27].
DNS Observatory: The Big Picture of the DNS
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Passive measurements of the DNS: In a 2012 paper [24]—updated
in [25]—Gao et al. characterize the global DNS behavior using the
same raw data source as DNS Observatory, but using an early
version of the SIE and in a much shorter time frame: 2 weeks (26
billion transactions) vs. 4 months (1.6 trillion transactions). Their
analyses are largely complementary to the study we presented,
as this paper focus on authoritative nameservers instead of the
resolvers. Moreover, DNS Observatory is designed for long-term
and real-time operation, and provides insight into more areas of
the DNS, e.g., popularity of IP addresses in DNS answers.
DNS-OARC provides the Day in The Life of the Internet (DITL)
datasets [16] that record DNS traffic at many root and TLD name-
servers for a few days each year. ICANN runs live DNS Stats at [36]
that allows to visualize various statistics for many nameservers,
foremost the L-root nameservers. ENTRADA [70] is an open-source
platform for storing and processing DNS traffic recorded at author-
itative nameservers, e.g., to visualize the .nl ccTLD statistics [62].
Similarly, Deri et al. describe another system for monitoring the .it
ccTLD nameservers in [14]. Interestingly, Mark Allman publishes
anonymized summaries of below-recursive lookups made by de-
vices in the Case Connection Zone network [3] (∼100 homes in
Cleveland, Ohio).