1
OLONNONS-我⽤NL年前的技巧拿了⼀个shell
在分析完 log4shell 对于struts2的影响后，感觉struts2框架写的有点xxx，由于⼿上正好有⼏个
struts2打 log4shell 不成功，于是准备先看看其历史漏洞然后在挖挖看。 
在看struts2历史漏洞时发现空虚浪⼦⼼前辈以前挖过不少struts2的漏洞于是在他博客看了他的很多⽂章
博客(看⾃闭了)，发现他提到的⼀个判断struts2的⽅法。 
通过在正常的Action后添加参数  ?ActionErrors=xxx 会返回404⻚⾯。
Struts2⾥的Action都继承⾃  ActionSupport  
0x01 前⾔ 
0x01 判断struts2的⽅法 
0x02 原理分析 
2
⽽ ActionSupport 存在 setActionErrors 和 getActionErrors ⽅法可以获取到ActionErrors参
数。 
ActionErrors 在  struts2 中常作为⽤户输⼊验证，当不正确时被赋值，此时就不会进⼊Action中，
不进⼊Action中意味着没有结果返回。 
org.apache.struts2.dispatcher.Dispatcher#serviceAction  
3
proxy.execute() 因为没有结果返回会出现异常，异常信息携带了此action的全类名  
com.demo.action.LinkAction 最后进⼊  sendError 通过404⻚⾯返回。 
但通过实际测试发现很多情况下并不会返回404。我本地使⽤struts-2.5.27⾥⾃带的struts2-showcase
进⾏测试发现也不⾏，我⾃⼰在  WEB-INF/classes/struts.xml 写了⼀个action 
发现是⾏的，实际测试过程中遇到同⼀个站有的action加这个参数200。 
有的action加这个404能爆出全类名，有的404爆的全类名是  ActionSupport 。 
4
有的还会把物理路径爆出来，有的应该是⾃定义了404⻚⾯这种⽅法不⾏。
对于各种情况没弄清楚具体原因能⼒有限没调试出来，希望有师傅知道的能解答⼀下。 
我看到这个点的时候想到的并不是struts2框架指纹判断。⽽是注意到这个404⻚⾯会把全类名爆出来可以
⽤来找源码。 
以前做渗透遇到⼀个只有⼀个登录⻚⾯搞不进去的时候，⼀般会想着找个源码。 
有下⾯⼏种思路： 
1. 找个指纹扫下备份 
2. 通过前端js等⽂件⾥的⼀些关键词在github上搜索 
3. 通过各种蛛丝⻢迹得知此系统开发商再找源码
4. 想办法打⼀个报错获取全类名 
但是有的时候遇到的系统这些⽅法都⾏不通。此时通过这个技巧可以获知action的全类名，即可直接在
github上搜索这个全类名可以很轻松的找到源码，如果找不到的话可通过全类名关联到开发商再想办法找
源码。 
找了⼏个⼿上的⽬标站测试这个问题，发现⼀个存在这个问题。 
通过这个全类名在github上找代码 
0x03 实际运⽤ 
5
结果⽐较多有62个，选定xml⽂件进⾏搜索 
找到⼀份18年的代码审计过程较为简单直接的任意⽂件上传。 
6