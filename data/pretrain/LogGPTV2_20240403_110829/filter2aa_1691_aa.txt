RCTF2020-WP
Author:Nu1L Team
RCTF2020-WP
RE
My Switch Game
play_the _game
go-flag
panda_trace
rust-flag
Cipher
PWN
bf
Best_php
note
golang_interface
no_write
0c
WEB
swoole
rBlog 2020
EasyBlog
Calc
MISC
Welcome to the RCTF 2020
mysql_interface
Switch PRO Controller
bean
FeedBack
Crypto
easy_f(x)
BlockChain
roiscoin
RE
My Switch Game
flagflag
rumble
32joyconmaster
a2 10 xx 04 b4 01 4e 04 b4 01 4e
import argparse
import struct
import time
from joycontrol.report import InputReport, OutputReport, SubCommand
""" joycontrol capture parsing example.
Usage:
    parse_capture.py 
    parse_capture.py -h | --help
"""
def _eof_read(file, size):
    """
    Raises EOFError if end of file is reached.
    """
    data = file.read(size)
    if not data:
        raise EOFError()
    return data
if __name__ == '__main__':
    # list of time, report tuples
    total = []
    with open(r'F:\path_to_shit_log\log.log', 'rb') as capture:
        try:
            start_time = None
            while True:
                # parse capture time
                _time = struct.unpack('d', _eof_read(capture, 8))[0]
                if start_time is None:
                    start_time = _time
                # parse data size
                size = struct.unpack('i', _eof_read(capture, 4))[0]
                # parse data
                data = list(_eof_read(capture, size))
                if data[0] == 0xA1:
                    report = InputReport(data)
                    # normalise time
                    total.append((_time, report))
                elif data[0] == 0xA2:
                    report = OutputReport(data)
                    # normalise time
                    total.append((_time, report))
                else:
                    raise ValueError(f'Unexpected data.')
        except EOFError:
            pass
    # Do some investigation...
    i = 1
    count = 0
    last_buttons = [0, 0, 0, 0]
    for each in total:
        data = each[1].data
        if data[3:] == [0x04, 0xb4, 0x01, 0x4e, 0x04, 0xb4, 0x01, 0x4e] and 
data[0] == 0xa2:
            for idx in range(4):
                if last_buttons[idx] == 1:
                    print(label[idx], end=',')
            print('shit!')
        if (data[4] != 0 or data[5] != 0 or data[6] != 0) and data[0] == 0xa1 
and data[1] == 0x30:
            time_context = time.asctime(time.localtime(each[0]))
            label = 'Down Up Right Left'.split()
            b = data[6]
            buttons = b & 1, (b >> 1) & 1, (b >> 2) & 1, (b >> 3) & 1
            if buttons != last_buttons:
                count += 1
                #print(time_context, data[4:7], i, ' -> count: ', count,  end=' 
')
                for idx in range(4):
                    if buttons[idx] == 1:
                        #print(label[idx], end=',')
                        pass
                # print()
                last_buttons = buttons
            i += 1
Left,shit!
Up,shit!
Up,shit!
Left,shit!
patch
yuzu32flag
Left,shit!
Left,shit!
Left,shit!
Right,shit!
Left,shit!
Right,shit!
Left,shit!
Left,shit!
Left,shit!
Left,shit!
Up,shit!
Left,shit!
Right,shit!
Left,shit!
Right,shit!
Left,shit!
Down,shit!
Left,shit!
Right,shit!
Left,shit!
Up,shit!
Left,shit!
Right,shit!
Left,shit!
Right,shit!
Up,shit!
Up,shit!
Right,shit!
.text:000000000000053C D5 05 00 90                 ADRP            X21, 
#0xB8000 ; Keypatch modified this from:
.text:000000000000053C                                                     ;   
ADRP X21, #0x80000
.text:0000000000000540 B5 E2 2C 91                 ADD             X21, X21, 
#0xB38 ; Keypatch modified this from:
.text:0000000000000540                                                     ;   
ADD X21, X21, #0x68
play_the _game
libdeflatflagflag{md5(0x%x)} %x
flag100 
jupyter955939368md5flag
int dword_2B008 = 0x13F4E6A3;
int dword_2B00C = 0xDEF984B1;
void IncTick()
{
  int v0; // [sp+18h] [bp-78h]
  int v1; // [sp+6Ch] [bp-24h]
  v1 = (int)((sqrt((double)(8 * (dword_2B008 - 0x13F4E6A3) + 1)) - 1.0) / 2.0 + 
1.0);
  dword_2B008 += v1;
  v0 = dword_2B008 % 4;
  if ( dword_2B008 % 4 )
  {
    switch ( v0 )
    {
      case 1:
        dword_2B00C *= v1;
        break;
      case 2:
        dword_2B00C 
#include
#include
#include
#include
struct block
{
   unsigned long long a;
   unsigned long long b;
};
unsigned long long ror(unsigned long long a,int n)
{
    return (a >> n) + (a > 8) + (b2 > 0x3d) + b1 * 8 ^ t1;
    unsigned long long i = 0;
    while (i > 8) + (s2 > 0x3d) + s1 * 8 ^ s2;
        t1 = (t1 >> 8) + (t1 > 0x3d) + t2 * 8 ^ t1;
        i = i + 1;
        // printf("enc %d:%p\n",i,s1);
        // printf("steg %d:%p %p\n",i,t1,t2);
    }
    block res;
    res.a = t2;
    res.b = t1;
    return res;
}
block dec(unsigned long long  key[],block in)
{
    unsigned long long b1 = in.a;
    unsigned long long b2 = in.b;
    unsigned long long s1 = key[0];
    unsigned long long s2 = key[1];
    unsigned long long t2 = b1;
    unsigned long long t1 = b2;
    unsigned long long s1t[32] = {0};
    unsigned long long s2t[32] = {0};
    s1t[0] = s1;
    s2t[0] = s2;
    unsigned long long i = 0;
    while (i > 8) + (s2 > 0x3d) + s1 * 8 ^ s2;
        s1t[i+1] = s1;
        s2t[i+1] = s2;
        i = i + 1;
        // printf("enc %d:%p\n",i,s1);
    }
    i = 0;
    while (i < 0x20) 