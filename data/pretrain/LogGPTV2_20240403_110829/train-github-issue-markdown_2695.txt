 **I'm submitting a ...** (check one with "x")
    [ ] bug report => search github for a similar issue or PR before submitting
    [X] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
When accessing modules lazily, RouteConfigLoadEnd gets fired once the factory
gets loaded, but before routes are loaded and assigned to
`route._loadedConfig`.
**Expected behavior**  
RouteConfigLoadEnd should be fired after `_loadedConfig` is assigned, or
return routes as a parameter if it's fired from `RouterConfigLoader`.
Change proposal:
    return map.call(moduleFactory$, (factory: NgModuleFactory) => {
      const module = factory.create(parentInjector);
      const routes = flatten(module.injector.get(ROUTES));
      if (this.onLoadEndListener) {
        this.onLoadEndListener(route, routes);
      }
      return new LoadedRouterConfig(routes, module);
    });
**What is the motivation / use case for changing the behavior?**  
Most common use case of `RouteConfigLoadEnd` is to react once lazy loaded
routes are loaded. In localize-router we can use this information for routes
localization. However if even is fired before routes are de facto available in
`_loadedConfig` and/or it doesn't provide this information it makes the entire
event unusable as it's not that different from RouteConfigLoadStart.
Issue is already mentioned here: #14036
  * **Angular version:** 4.0.X
  * **Browser:** all
  * **Language:** all