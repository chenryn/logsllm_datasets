## 简介
QEMU 是一款由 Fabrice Bellard 开发的开源模拟器，以 GPL 许可证分发源码，在 GNU/Linux 平台上广泛使用。与 Bochs 和 PearPC 等类似软件相比，QEMU 具备更高的速度和跨平台特性。通过 KQEMU 这个闭源加速器，QEMU 能够达到接近真实硬件的性能。QEMU 不仅可以像 VMware 一样作为虚拟机软件，还能够支持更多嵌入式平台的设备。这使得 QEMU 成为调试路由器固件、进行漏洞挖掘等研究工作的理想工具，极大地降低了研究成本。

## 固件下载
从 D-Link 官方 FTP 服务器 (ftp://ftp2.dlink.com/PRODUCTS/) 下载所需的路由器固件，并使用 binwalk 工具解压固件文件。

## Binwalk 安装
为了提取路由器固件内容，建议自行编译安装最新版本的 binwalk，因为通过 apt-get 安装可能会缺少一些依赖项。
```bash
$ sudo apt-get update
$ sudo apt-get install build-essential autoconf git
$ git clone https://github.com/devttys0/binwalk.git
$ cd binwalk
$ sudo python setup.py install  # Python 2.7 版本
$ sudo apt-get install python-lzma python-crypto libqt4-opengl python-opengl python-qt4 python-qt4-gl python-numpy python-scipy python-pip
$ sudo pip install pyqtgraph capstone
# 安装标准提取工具（必选）
$ sudo apt-get install mtd-utils gzip bzip2 tar arj lhasa p7zip p7zip-full cabextract cramfsprogs cramfsswap squashfs-tools
# 安装 sasquatch 以提取非标准 SquashFS 镜像（必选）
$ sudo apt-get install zlib1g-dev liblzma-dev liblzo2-dev
$ git clone https://github.com/devttys0/sasquatch
$ (cd sasquatch && ./build.sh)
# 安装 jefferson 提取 JFFS2 文件系统（可选）
$ sudo pip install cstruct
$ git clone https://github.com/sviehb/jefferson
$ (cd jefferson && sudo python setup.py install)
# 安装 ubi_reader 提取 UBIFS 文件系统（可选）
$ sudo apt-get install liblzo2-dev python-lzo
$ git clone https://github.com/jrspruitt/ubi_reader
$ (cd ubi_reader && sudo python setup.py install)
# 安装 yaffshiv 提取 YAFFS 文件系统（可选）
$ git clone https://github.com/devttys0/yaffshiv
$ (cd yaffshiv && sudo python setup.py install)
# 安装 unstuff 解压 StuffIt 归档文件（可选）
$ wget -O - http://my.smithmicro.com/downloads/files/stuffit520.611linux-i386.tar.gz | tar -zxv
$ sudo cp bin/unstuff /usr/local/bin/
```

## QEMU 安装
按照以下步骤安装 QEMU：
```bash
$ git clone git://git.qemu.org/qemu.git
$ cd qemu
$ git submodule init
$ git submodule update --recursive
$ sudo apt install libglib2.0 libglib2.0-dev
$ sudo apt install autoconf automake libtool
$ cd qemu && ./configure && make
$ sudo make install
```

## QEMU 网络配置
手动每次启动时配置网络接口：
```bash
$ sudo apt-get install uml-utilities
$ sudo tunctl -t tap0 -u sebao
$ sudo ifconfig tap0 172.16.0.1/24
```
在 QEMU 虚拟机内部执行：
```bash
$ sudo ifconfig eth0 172.16.0.2/24
```

自动配置网络：
编辑 `/etc/network/interfaces` 文件并添加如下内容：
```plaintext
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp

iface br0 inet dhcp
    bridge_ports eth0
    bridge_maxwait 0
```
更新 GRUB 配置文件：
```bash
$ sudo vi /etc/default/grub
GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"
$ sudo update-grub
```
创建或编辑 `/etc/qemu-ifup` 文件：
```bash
#!/bin/sh
echo "Executing /etc/qemu-ifup"
echo "bridge networking"
sudo ifdown eth0
sudo ifup br0
echo "Bringing up $1 for bridge mode"
sudo /sbin/ifconfig $1 0.0.0.0 promisc up
echo "Adding $1 to br0"
sudo /sbin/brctl addif br0 $1
sleep 2
```
重启网络服务使更改生效：
```bash
$ sudo /etc/init.d/networking restart
```

## QEMU-MIPS 对应包下载
根据固件架构选择正确的大小端版本下载对应的包。例如：
- vmlinux-2.6.32-5-4kc-malta
- debian_squeeze_mips_standard.qcow2

## 启动 QEMU
使用以下命令启动 QEMU：
```bash
qemu-system-mips -M malta -kernel vmlinux-2.6.32-5-4kc-malta -hda debian_squeeze_mips_standard.qcow2 -append "root=/dev/sda1 console=tty0" -net nic,macaddr=52:54:be:36:42:a9 -net tap
```

## D-Link DIR-601 设置
解压 Web 目录：
```bash
tar zxvf mnt/www.tgz www/
cp usr/bin/my_cgi.cgi www/
```
运行 HTTP 服务前需要创建必要的目录及文件：
```bash
mkdir -p /var/run/lighttpd
touch /var/run/lighttpd/lighttpd.pid
mkdir -p /log/lighttpd
touch /log/lighttpd/error.log
mv rt/* ./
rmdir rt
chroot . usr/bin/lighttpd -f mnt/lighttpd/lighttpd.conf
```
现在，您可以在浏览器中输入 QEMU 虚拟机 IP 地址访问路由器界面了。