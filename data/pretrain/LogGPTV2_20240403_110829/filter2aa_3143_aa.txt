副本 Apache Solr 组件安全概览
⼀、组件概述
1.关键词
企业级全⽂检索服务器、基于Lucene
2.⼀些名词
(1) 数据
结构化数据，与非结构化数据
结构化数据： 用表、字段表示的数据  数据库适合结构化数据的精确查询
半结构化数据：   xml 、html
非结构化数据： 文本、文档、图片、音频、视频等
(2) Document
被索引的对象，索引、搜索的基本单元，⼀个Document由多个字段Field构成 
Field
字段名name 
字段值value 
字段类型type FieldType(这个ﬁeldtype也有很多属性主要两个是name 以及 class ⽤来存放该
类型值的类名)，Field中包含分析器(Analyzer)、过滤器(Filter)
(3) 索引
对列值创建排序存储，数据结构={列值、行地址} ，Luncene或者说Solr的索引的创建过程其
实就是分词、存储到反向索引中
输入的是苍老师，想要得到标题或内容中包含“苍老师”的新闻列表
(4) 搜索引擎
区别于关系数据库搜索引擎专门解决大量结构化、半结构化数据、非结构化文本类数据的实时
检索问题。 这种类型的搜索实时搜索数据库做不了。
(5) 搜索引擎工作原理
1、从数据源加载数据，分词、建立反向索引
2、搜索时，对搜索输入进行分词，查找反向索引
3、计算相关性，排序，输出
(5) zookeeper
zk是分布式系统中的⼀项协调服务。solr将zk⽤于三个关键操作：
1、集中化配置存储和分发
2、检测和提醒集群的状态改变
3、确定分⽚代表
(7) Lucene
一套可对大量结构化、半结构化数据、非结构化文本类数据进行实时搜索的专门软件。最早应
用于信息检索领域，经谷歌、百度等公司推出网页搜索而为大众广知。后又被各大电商网站采
用来做网站的商品搜索。现广泛应用于各行业、互联网应用。
核心构成：数据源(存储的数据)、分词器(英文比较容易，中文两个常用的 IKAnalyzer、
mmseg4j主谓宾等)、反向索引（倒排索引）、相关性计算模型(例如 出现次数这个算简单
的，复杂点的 可能就会加上权重，搜索引擎会提供一种或者多种)
(8) Solr中的Core
运⾏在Solr服务器中的具体唯⼀命名的、可管理、可配置的索引，⼀台Solr可以托管⼀个或多
个索引。solr的内核是运⾏在solr服务器中具有唯⼀命名的、可管理和可配置的索引。⼀台solr
服务器可以托管⼀个或多个内核。内核的典型⽤途是区分不同模式(具有不同字段、不同的处
理⽅式)的⽂档。
内核就是索引，为什么需要多个？因为不同的⽂档拥有不同的模式（字段构成、索引、存储⽅
式），商品数据和新闻数据就是两类完全不同的数据，这就需要两个内核来索引、存储它们。
每个内核都有⼀个 内核实例存放⽬录、内核索引数据存放⽬录、内核配置⽂件
(solrconﬁg.xml)、内核模式⽂件(schema.xml)
(9) Solr中的schema
包含整个架构以及字段和字段类型。⽤来告诉solr，被索引的⽂档由哪些Field组成。让solr知
道集合/内核包含哪些字段、字段的数据类型、字段该索引存储。
conf/managed-schema  或者 schema.xml
(10) solrconﬁg.xml
此⽂件包含与请求处理和响应格式相关的定义和特定于核⼼的配置，以及索引，配置，管理内
存和进⾏提交。内核配置⽂件，这个是影响Solr本身参数最多的配置⽂件。索引数据的存放位
置，更新，删除，查询的⼀些规则配置 
(11) collection 集合
⼀个集合由⼀个或多个核⼼(分⽚)组成，SolrCloud引⼊了集合的概念，集合将索引扩展成不
同的分⽚然后分配到多台服务器，分布式索引的每个分⽚都被托管在⼀个solr的内核中(⼀个内
核对应⼀个分⽚呗)。提起SolrCloud，更应该从分⽚的⻆度，不应该谈及内核。
(12) Solr.xml
它是$ SOLR_HOME⽬录中包含Solr Cloud相关信息的⽂件。 要加载核⼼，Solr会引⽤此⽂
件，这有助于识别它们。solr.xml ⽂件定义了适⽤于全部或多个内核的全局配置选项 
(13) core.properties
代表⼀个核⼼，为每个核⼼定义特定的属性，例如其名称、核⼼所属的集合、模式的位置以及
其他参数
(14) Solr配置集 conﬁgset
⽤于实现多个不同内核之间的配置共享
(15) requestHandler(solrconfig.xml)
请求处理程序，定义了solr接收到请求后该做什么操作。
Solr中处理外部数据都是通过http请求，对外提供http服务，每类服务在solr中都有对应的
request handler接收处理数据，solr中有定义了很多内置的请求处理程序，但是我们也可以⾃
⼰定义，在conf/solrconﬁg.xml中配置
在 conf/solrconfig.xml中，requestHandler的配置就像我们在web.xml中配置servlet-
mapping（或spring mvc 中配置controller 的requestMap）一样：配置该集合/内核下某
个请求地址的处理类
示例  
(16) Solr中的 ⽂档、字段、字段分析、模式、分析器、标记器、过滤器
参阅中⽂⽂档
https://www.w3cschool.cn/solr_doc/solr_doc-2yce2g4s.html
https://www.w3cschool.cn/solr_doc/solr_doc-5ocy2gay.html
3.⼏个重要配置⽂件的详解
1.Solr.xml
在独⽴模式下，solr.xml必须驻留在solr_home(server/solr)。在SolrCloud模式下，将从
ZooKeeper加载solr.xml（如果它存在），回退到solr_home。
solr.xml ⽂件定义了适⽤于全部或多个内核的全局配置选项。
标签是根元素
 adminHandler 属性，solr默认使⽤org.apache.solr.handler.admin.CoreAdminHandler
 collectionsHandler ⾃定义CollectingHandler的实现
 infoHandler ⾃定义infoHandler实现
 coreLoader 指定分配给此内核的线程数
 coreRootDirectory  指定$SOLR_HOME
 sharedLib 所有内核共享公共库⽬录  此⽬录任何jar⽂件都将被添加到Solr插件的搜索路径
中
 shareSchema 此属性为true的情况下，共享IndexSchema对象
 conﬁgSetBaseDir 指定conﬁgSets⽬录  默认为$SOLR_HOME/conﬁgsets
  定义了与SolrCloud相关的参数
 distribUpdateConnTimeout 设置集群的connTimeout
 distribUpdateSoTimeout 设置集群的socketTime'out
 host 设置访问主机名称
 hostContext url上下⽂路径
 hostPort 端⼝
 zkClientTimeout  连接到ZookKeeper服务器的超时时间
 class 属性 ⽤于记录的class类，相应的jar必须存在
 enable 是否启⽤⽇志功能
分⽚相关
 报告相关
2.core.properties
简单的key=value，可以这么理解，⼀个core.properties 就代表⼀个core，允许即时创建，⽽
不⽤重启Solr,配置⽂件包含以下属性：
 name core的名称
 conﬁg core的配置⽂件名称 默认为solrconﬁg.xml
 schema 核⼼架构⽂件名称 默认为schema.xml
 dataDir core的数据⽬录 可以是据对路径 也可以是相对于instanceDir的路径
 conﬁgSet  conﬁgset可⽤于配置内核
 properties 这个core的⽂件名称 可以是绝对路径也可以是相对路径
 loadOnstartup  true Solr启动时，会加载这个核⼼
 ulogDir ⽇志的路径
 collection 是SolrCloud的⼀部分
3.Schema.xml
略
4.Solrconﬁg.xml
这个⽂件可以说，在功能上包含了⼀个core处理的全部配置信息
  指定Luncene版本
  core的data⽬录  存放当前core的idnex索引⽂件和tlog事务⽇志⽂件
   索引存储⼯⼚ 配置了⼀些存储时的参数 线程等
  编解码⽅式
  配置索引属性，主要与Luncene创建索引的⼀些参数，⽂档字段最⼤⻓
度、⽣成索引时INdexWriter可使⽤最⼤线程数、Luncene是否允许⽂件整合、buﬀer⼤
⼩、指定Lucene使⽤哪个LockFactory等
  更新处理器 更新增加Document时的update对应什么处理动作在这⾥配
置，在这⾥也可以⾃定义更新处理器
 以及查询的相关配置
   请求转发器  ⾃定义增加在这⾥配置
  请求解析器  配置solr的请求解析⾏为 
  请求处理器  solr通过requestHandler提供webservice功能，通过http
请求对索引进⾏访问 可以⾃定义增加，在这⾥配置
4.概述
建⽴在Lucene-core之上，Luncene是⼀个全⽂检索的⼯具包，它不是⼀个完整的引擎，Solr
将它打包成了⼀个完整的引擎服务，并对外开放基于http请求的服务以及各种API，还有⼀个
后台管理界⾯。所以，它既然是基于Luncene的，所以他的核⼼功能逻辑就应该和Luncene⼀
样，给它⼀个Docunment，Solr进⾏分词以及查找反向索引，然后排序输出。
Solr 的基本前提很简单。您给它很多的信息，然后你可以问它的问题，找到你想要的信息。
您在所有信息中提供的内容称为索引或更新。当你问⼀个问题时，它被称为查询。
在⼀些⼤型⻔户⽹站、电⼦商务⽹站等都需要站内搜索功能，使⽤传统的数据库查询⽅式实现
搜索⽆法满⾜⼀些⾼级的搜索需求，⽐如：搜索速度要快、搜索结果按相关度排序、搜索内容
格式不固定等，这⾥就需要使⽤全⽂检索技术实现搜索功能。
Apache Solr 是⼀个开源的搜索服务器。Solr 使⽤ Java 语⾔开发，主要基于 HTTP 和
Apache Lucene 实现。Lucene 是⼀个全⽂检索引擎⼯具包，它是⼀个 jar 包，不能独⽴运
⾏，对外提供服务。Apache Solr 中存储的资源是以 Document 为对象进⾏存储的。NoSQL
特性和丰富的⽂档处理（例如Word和PDF⽂件）。每个⽂档由⼀系列的 Field 构成，每个
Field 表示资源的⼀个属性。Solr 中的每个 Document 需要有能唯⼀标识其⾃身的属性，默认
情况下这个属性的名字是 id，在 Schema 配置⽂件中使⽤：id进
⾏描述。 Solr是⼀个独⽴的企业级搜索应⽤服务器，⽬前很多企业运⽤solr开源服务。原理⼤
致是⽂档通过Http利⽤XML加到⼀个搜索集合中。
Solr可以独⽴运⾏，打包成⼀个war。运⾏在Jetty、Tomcat等这些Servlet容器中，Solr索引
的实现⽅法很简单，⽤ POST ⽅法向Solr服务器 发送⼀个描述
Field 及其内容的XML⽂档，Solr根据xml⽂档添加、删除、更新索引。Solr搜索只需要发送
HTTP GET 请求，然后对 Solr 返回Xml、Json等格式的查询结果进⾏解析，组织⻚⾯布局。
Solr不提供构建UI的功能，Solr提供了⼀个管理界⾯，通过管理界⾯可以查询Solr的配置和运
⾏情况。
中⽂⽂档：https://www.w3cschool.cn/solr_doc/solr_doc-mz9a2frh.html
3.使⽤范围及⾏业分布
 业界两个最流⾏的开源搜索引擎，Solr和ElasticSearch。Solr是Apache下的⼀个顶级开源
项⽬。不少互联⽹巨头，如Netﬂix，eBay，Instagram和Amazon（CloudSearch）均使⽤
Solr。
 fofa搜索公⽹资产 ⼀万 app="APACHE-Solr"
 GitHub Star数量 3.8k
4.重点产品特性
默认全局未授权，多部署于内⽹，内置zk服务
不可⾃动升级，需要⼿动升级修复漏洞
⼆、环境搭建、动态调试
Solr 所有版本下载地址 http://archive.apache.org/dist/lucene/solr/   
1.sorl-4.2.0 环境搭建
1.1 环境搭建
下载solr-4.2.0.zip⽂件，解压，C:\Solr\solr-4.2.0\example\start.jar 启动
java -Xdebug -Xrunjdwp:transport=dt_socket,address=10010,server=y,suspend=y -jar 
start.jar
1.2 动态调试
新建idea项⽬
讲solr⽬录下所有jar包导⼊ lib⽬录下 add as library
配置远程调试
断点成功停住
当然也可以下载solr源码，idea直接打开，配置Remote，远程调试，看源码总是正规的嘛
2.Solr较⾼版本
2.1 环境搭建
⼤体同上，只不过启动时，没有了start.jar  改为bin⽬录下的solr.bat 
PS:这⾥注意⼀点，需要jdk8及以上 以及 solr.cmd -f -e dih 加载example  然后solr stop -p 
8983 再启动，加上 -s "C:\Solr\solr-6.4.0\example\example-DIH\solr" 要不然漏洞复现不
出来
2.2 动态调试
下载源码，配置Remote即可
./solr.cmd -f -a "-
agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=10010" -port 
8983 -s "C:\Solr\solr-6.4.0\example\example-DIH\solr"
1
solr.cmd start -p 8983 -s "C:\Solr\solr-6.4.0\example\example-DIH\solr"
2
solr.cmd -f -a "-
agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=10010" -port 
8983 -s "C:\Solr\solr-8.6.3\example\example-DIH\solr"
1
2.3 PS  Cloud模式下的 debug 
创建⼀个新的核⼼
solr.cmd -c -f -a "-Xdebug -
Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10010" -p 8983
1
2
solr.cmd -c -f -a "-Xdebug -
Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10010" -p 8983
3
4
调试solr的启动过程
5
java -Xdebug -
Xrunjdwp:transport=dt_socket,address=10010,server=y,suspend=y -jar 
start.jar --module=http
6
在此感谢Whippet师傅！
三、源码分析
1.Apache Solr架构