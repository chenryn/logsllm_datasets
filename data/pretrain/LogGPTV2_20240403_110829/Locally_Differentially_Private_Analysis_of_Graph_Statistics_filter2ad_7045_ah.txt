https://fortune.com/2020/01/28/2019-
2019.
data-breach-increases-hackers/, 2020.
[40] Takao Murakami and Yusuke Kawamoto. Utility-
optimized local differential privacy mechanisms for dis-
In Proc. USENIX Security‚Äô19,
tribution estimation.
pages 1877‚Äì1894, 2019.
[41] M. E. J. Newman. Random graphs with clustering.
Physical Review Letters, 103(5):058701, 2009.
[42] Kobbi Nissim, Sofya Raskhodnikova, and Adam Smith.
Smooth sensitivity and sampling in private data analysis.
In Proc. STOC‚Äô07, pages 75‚Äì84, 2007.
[43] Thomas Paul, Antonino Famulari, and Thorsten Strufe.
A survey on decentralized online social networks. Com-
puter Networks, 75:437‚Äì452, 2014.
[45] Zhan Qin, Yin Yang, Ting Yu, Issa Khalil, Xiaokui Xiao,
and Kui Ren. Heavy hitter estimation over set-valued
data with local differential privacy. In Proc. CCS‚Äô16,
pages 192‚Äì203, 2016.
[46] Zhan Qin, Ting Yu, Yin Yang, Issa Khalil, Xiaokui Xiao,
and Kui Ren. Generating synthetic decentralized social
graphs with local differential privacy. In Proc. CCS‚Äô17,
pages 425‚Äì438, 2017.
[47] Cyrus Rashtchian, David P. Woodruff, and Hanlin Zhu.
Vector-matrix-vector queries for solving linear algebra,
statistics, and graph problems. CoRR, 2006.14015, 2020.
[48] Sofya Raskhodnikova and Adam Smith. EfÔ¨Åcient
lipschitz extensions for high-dimensional graph statis-
tics and node private degree distributions. CoRR,
1504.07912, 2015.
[49] Sofya Raskhodnikova and Adam Smith. Differentially
Private Analysis of Graphs, pages 543‚Äì547. Springer,
2016.
[50] Andrea De Salve, Paolo Mori, and Laura Ricci. A sur-
vey on privacy in decentralized online social networks.
Computer Science Review, 27:154‚Äì176, 2018.
[51] Tara Seals. Data breaches increase 40% in 2016.
https://www.infosecurity-magazine.com/news/
data-breaches-increase-40-in-2016/, 2017.
[52] Shuang Song, Susan Little, Sanjay Mehta, Staal Vinter-
boy, and Kamalika Chaudhuri. Differentially private
continual release of graph statistics. CoRR, 1809.02575,
2018.
[53] Haipei Sun, Xiaokui Xiao, Issa Khalil, Yin Yang, Zhan
Qui, Hui (Wendy) Wang, and Ting Yu. Analyzing sub-
graph statistics from extended local views with decen-
In Proc. CCS‚Äô19, pages
tralized differential privacy.
703‚Äì717, 2019.
[54] Om Thakkar, Galen Andrew, and H. Brendan McMahan.
Differentially private learning with adaptive clipping.
CoRR, 1905.03871, 2019.
[55] Abhradeep Guha Thakurta, Andrew H. Vyrros,
Umesh S. Vaishampayan, Gaurav Kapoor, Julien Freudi-
ger, Vivek Rangarajan Sridhar, and Doug Davidson.
Learning New Words, US Patent 9,594,741, Mar. 14
2017.
[44] Venkatadheeraj Pichapati, Ananda Theertha Suresh, Fe-
lix X. Yu, Sashank J. Reddi, and Sanjiv Kumar. AdaCliP:
Adaptive clipping for private SGD. CoRR, 1908.07643,
2019.
[56] √ölfar Erlingsson, Vasyl Pihur, and Aleksandra Korolova.
RAPPOR: Randomized aggregatable privacy-preserving
ordinal response. In Proc. CCS‚Äô14, pages 1054‚Äì1067,
2014.
998    30th USENIX Security Symposium
USENIX Association
[57] Tianhao Wang, Jeremiah Blocki, Ninghui Li, and
Somesh Jha. Locally differentially private protocols
for frequency estimation. In Proc. USENIX Security‚Äô17,
pages 729‚Äì745, 2017.
[58] Yue Wang and Xintao Wu. Preserving differential
privacy in degree-correlation based graph generation.
Transactions on Data Privacy, 6(2), 2013.
[59] Yue Wang, Xintao Wu, and Leting Wu. Differential
In Proc.
privacy preserving spectral graph analysis.
PAKDD‚Äô13, pages 329‚Äì340, 2013.
[60] Stanley L. Warner. Randomized response: A survey
technique for eliminating evasive answer bias. Journal
of the American Statistical Association, 60(309):63‚Äì69,
1965.
[61] Xiaokui Xiao, Gabriel Bender, Michael Hay, and Jo-
hannes Gehrke.
ireduct: Differential privacy with re-
duced relative errors. In Proc. SIGMOD‚Äô11, pages 229‚Äì
240, 2011.
[62] Min Ye and Alexander Barga. Optimal schemes for
discrete distribution estimation under local differential
privacy. In Proc. ISIT‚Äô17, pages 759‚Äî-763, 2017.
[63] Qingqing Ye, Haibo Hu, Man Ho Au, Xiaofeng Meng,
and Xiaokui Xiao. Towards locally differentially private
In Proc. ICDE‚Äô20,
generic graph metric estimation.
pages 1922‚Äì1925, 2020.
[64] Qingqing Ye, Haibo Hu, Man Ho Au, Xiaofeng Meng,
and Xiaokui Xiao. LF-GDPR: A framework for es-
timating graph metrics with local differential privacy.
IEEE Transactions on Knowledge and Data Engineer-
ing (Early Access), pages 1‚Äì16, 2021.
[65] Hailong Zhang, SuÔ¨Åan Latif, Raef Bassily, and Atanas
Rountev. Differentially-private control-Ô¨Çow node cov-
erage for software usage analysis. In Proc. USENIX
Security‚Äô20, pages 1021‚Äì1038, 2020.
A Effectiveness of empirical estimation in
LocalRR(cid:52)
In Section 4.2, we presented LocalRR(cid:52), which uses the em-
pirical estimation method after the RR. Here we show the ef-
fectiveness of empirical estimation by comparing LocalRR(cid:52)
with the RR without empirical estimation [46, 63].
As the RR without empirical estimation, we applied the RR
to the lower triangular part of the adjacency matrix A; i.e., we
ran lines 1 to 6 in Algorithm 2. Then we output the number of
noisy triangles m3. We denote this algorithm by RR w/o emp.
Figure 10 shows the l2 loss of LocalRR(cid:52) and RR w/o emp
when we changed n from 1000 to 10000 or Œµ in edge LDP
Figure 10: l2 loss of LocalRR(cid:52) and the RR without empirical
estimation (RR w/o emp).
from 0.1 to 2. The experimental set-up is the same as Sec-
tion 5.1. Figure 10 shows that LocalRR(cid:52) signiÔ¨Åcantly out-
performs RR w/o emp, which means that the l2 loss is signif-
icantly reduced by empirical estimation. As shown in Sec-
tion 5, the l2 loss of LocalRR(cid:52) is also signiÔ¨Åcantly reduced
by an additional round of interaction.
B Experiments on Barab√°si-Albert Graphs
Experimental set-up. In Section 5, we evaluated our algo-
rithms using two real datasets: IMDB and Orkut. We also eval-
uated our algorithms using artiÔ¨Åcial graphs that have power-
law degree distributions. We used the BA (Barab√°si-Albert)
model [9] to generate such graphs.
In the BA model, an artiÔ¨Åcial graph (referred to as a BA
graph) is grown by adding new nodes one at a time. Each new
node is connected to Œª ‚àà N existing nodes with probability
proportional to the degree of the existing node. In our experi-
ments, we used NetworkX [26], a Python package for graph
analysis, to generate BA graphs.
We generated a BA graph G‚àó with 1000000 nodes using
NetworkX. For the attachment parameter Œª, we set Œª = 10 or
50. When Œª = 10 (resp. 50), the average degree of G‚àó was
10.0 (resp. 50.0). For each case, we randomly generated n
users from the whole graph G‚àó, and extracted a graph G =
(V,E) with the n users. Then we estimated the number of tri-
angles f(cid:52)(G) and the number of 2-stars f2(cid:63)(G). For triangles,
we evaluated LocalRR(cid:52), Local2Rounds(cid:52), and CentralLap(cid:52).
For 2-stars, we evaluated LocalLap2(cid:63) and CentralLap2(cid:63). In
Local2Rounds(cid:52), we set Œµ1 = Œµ2. For Àúdmax, we set Àúdmax = dmax.
USENIX Association
30th USENIX Security Symposium    999
Q‡µàOORVVOORVVD,0'%ﬂù OORVVOORVVRR w/o empLocalRR‚àÜﬂùRR w/o empLocalRR‚àÜE,0'%Q Q‡µàF2UNXWﬂù RR w/o empLocalRR‚àÜﬂùRR w/o empLocalRR‚àÜG2UNXWQ Figure 12: Examples of G and M for constructing an inde-
pendent cube for f(cid:52) (n = 14, dmax = 8, Œ∑1 = 3, Œ∑2 = 2).
O(Œµ‚àí4), and O(Œµ‚àí2), respectively.
In summary, for both the two real datasets and the
BA graphs, our experimental results showed the follow-
ing Ô¨Åndings: (1) Local2Rounds(cid:52) signiÔ¨Åcantly outperforms
LocalRR(cid:52), especially when the graph G is sparse; (2) our
experimental results are roughly consistent with our upper-
bounds.
C Construction of an (n, dmax
2 ‚àí2) independent
cube for f(cid:52)
dmax
2
Suppose that n is even and dmax is divisible by 4. Since dmax <
dmax
2 + Œ∑2 for integers Œ∑1,Œ∑2
n, it is possible to write n = Œ∑1
such that Œ∑1 ‚â• 1 and 1 ‚â§ Œ∑2 < dmax
2 . Because Œ∑1
and
n are even, we must have Œ∑2 is even. Now, we can write
n = (Œ∑1 ‚àí 1) dmax
2 ). Thus, we can deÔ¨Åne a graph
G = (V,E) on n nodes consisting of (Œ∑1 ‚àí 1) cliques of even
2 ‚àà
size dmax
2
( dmax
and one Ô¨Ånal clique of an even size Œ∑2 + dmax
2 + (Œ∑2 + dmax
2 ,dmax) with all cliques disjoint.
Since G = (V,E) consists of even-sized cliques, it contains
a perfect matching M. Figure 12 shows examples of G and M,
where n = 14, dmax = 8, Œ∑1 = 3, and Œ∑2 = 2. Let G(cid:48) = (V,E(cid:48))
such that E(cid:48) = E \ M. Let A = {(V,E(cid:48) ‚à™ N : N ‚äÜ M}. Each
2 ‚àí 2 triangles. For each pair
edge in G is part of at least dmax
of edges in M, the triangles of G of which they are part are
disjoint. Thus, for any edge e ‚àà M, removing e from a graph
2 ‚àí 2 triangles. This implies that
in A will remove at least dmax
A is an (n, dmax
2 ‚àí 2) independent cube for f(cid:52).
Figure 11: l2 loss in the Barab√°si-Albert graph datasets (left:
Œµ = 1, right: n = 10000). We set the attachment parameter Œª
in the BA model to Œª = 10 or 50, and Àúdmax to Àúdmax = dmax.
We evaluated the l2 loss while changing n and Œµ. We at-
tempted Œ≥ ‚àà N ways to randomly select n users from G‚àó, and
averaged the l2 loss over all the Œ≥ ways to randomly select n
users. As with Section 5, we set Œ≥ = 100 and changed n from
1000 to 10000 while Ô¨Åxing Œµ = 1. Then we set Œ≥ = 10 and
changed Œµ from 0.1 to 2 while Ô¨Åxing n = 10000.
Experimental results. Figure 11 shows the results. Over-
all, Figure 11 has a similar tendency to Figures 5, 6, and
7. For example, Local2Rounds(cid:52) signiÔ¨Åcantly outperforms
LocalRR(cid:52), especially when the graph G is sparse;
i.e.,
Œª = 10. In Local2Rounds(cid:52), CentralLap(cid:52), LocalLap2(cid:63), and
CentralLap2(cid:63), the l2 loss increases with increase in Œª. This is
because the maximum degree dmax (= Àúdmax) increases with
increase in Œª.
max), O(nd2
max), and O(d2
Figure 11 also shows that the l2 loss is roughly consistent
with our upper-bounds in Section 4. For example, recall that
LocalRR(cid:52), Local2Rounds(cid:52), CentralLap(cid:52), LocalLap2(cid:63), and
CentralLap2(cid:63) achieve the expected l2 loss of O(n4), O(nd3
max),
O(d2
max), respectively. Assuming that
dmax = O(n), the left panels of Figure 11 are roughly con-
sistent with these upper-bounds. In addition, the right pan-
els of Figure 11 show that when we set Œª = 10 and de-
crease Œµ from 0.4 to 0.1, the l2 loss increases by a factor
of about 3800, 250, and 16 in LocalRR(cid:52), Local2Rounds(cid:52),
and CentralLap(cid:52), respectively. They are roughly consistent
with our upper-bounds ‚Äì for small Œµ, the expected l2 loss
of LocalRR(cid:52), Local2Rounds(cid:52), and CentralLap(cid:52) is O(Œµ‚àí6),
1000    30th USENIX Security Symposium
USENIX Association
Q‡µàOORVVLocalRR‚àÜ·à∫ﬂ£‡µå10·àªLocal2Rounds‚àÜ·à∫ﬂ£‡µå10·àªCentralLap‚àÜ·à∫ﬂ£‡µå10·àªDWULDQJOHVLocalRR‚àÜ·à∫ﬂ£‡µå50·àªLocal2Rounds‚àÜ·à∫ﬂ£‡µå50·àªﬂùOORVVCentralLap‚àÜ·à∫ﬂ£‡µå50·àªEVWDUVQ‡µàOORVVLocalLap‡¨∂‚ãÜ·à∫ﬂ£‡µå10·àªCentralLap‡¨∂‚ãÜ·à∫ﬂ£‡µå10·àªLocalLap‡¨∂‚ãÜ·à∫ﬂ£‡µå50·àªCentralLap‡¨∂‚ãÜ·à∫ﬂ£‡µå50·àªﬂùOORVVùê∫=(ùëâ,ùê∏)ùëÄ