     or  
ebx, ebp 
     xor  
edi, ebx 
     mov  
ebx, edi 
     mov  
edi, DWORD PTR _out2$[esp+32] 
     xor  
ebx, DWORD PTR [edi] 
     not  
eax 
     xor  
ebx, DWORD PTR _x6$[esp+36] 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 26 章 64 位平台 
391 
     and  
eax, edx 
     mov  
DWORD PTR [edi], ebx 
     mov  
ebx, DWORD PTR _x7$[esp+32] 
     or  
ebx, DWORD PTR _x6$[esp+36] 
     mov  
edi, esi 
     or  
edi, DWORD PTR _x1$[esp+36] 
     mov  
DWORD PTR _x28$[esp+32], ebx 
     xor  
edi, DWORD PTR _x8$[esp+36] 
     mov  
DWORD PTR _x24$[esp+32], edi 
     xor  
edi, ecx 
     not  
edi 
     and  
edi, edx 
     mov  
ebx, edi 
     and  
ebx, ebp 
     xor  
ebx, DWORD PTR _x28$[esp+32] 
     xor  
ebx, eax 
     not  
eax 
     mov  
DWORD PTR _x33$[esp+32], ebx 
     and  
ebx, DWORD PTR _a1$[esp+32] 
     and  
eax, ebp 
     xor  
eax, ebx 
     mov  
ebx, DWORD PTR _out4$[esp+32] 
     xor  
eax, DWORD PTR [ebx] 
     xor  
eax, DWORD PTR _x24$[esp+32] 
     mov  
DWORD PTR [ebx], eax 
     mov  
eax, DWORD PTR _x28$[esp+32] 
     and  
eax, DWORD PTR _a3$[esp+32] 
     mov  
ebx, DWORD PTR _x3$[esp+36] 
     or  
edi, DWORD PTR _a3$[esp+32] 
    mov  
DWORD PTR _x36$[esp+32], eax 
     not  
eax 
     and  
eax, edx 
     or  
ebx, ebp 
     xor  
ebx, eax 
     not  
eax 
     and  
eax, DWORD PTR _x24$[esp+32] 
     not  
ebp 
     or  
eax, DWORD PTR _x3$[esp+36] 
     not  
esi 
     and  
ebp, eax 
     or  
eax, edx 
     xor  
eax, DWORD PTR _a5$[esp+32] 
     mov  
edx, DWORD PTR _x36$[esp+32] 
     xor  
edx, DWORD PTR _x4$[esp+36] 
     xor  
ebp, edi 
     mov  
edi, DWORD PTR _out1$[esp+32] 
     not  
eax 
     and  
eax, DWORD PTR _a2$[esp+32] 
     not  
ebp 
     and  
ebp, DWORD PTR _a1$[esp+32] 
     and  
edx, esi 
     xor  
eax, edx 
     or  
eax, DWORD PTR _a1$[esp+32] 
     not  
ebp 
     xor  
ebp, DWORD PTR [edi] 
     not  
ecx 
     and  
ecx, DWORD PTR _x33$[esp+32] 
     xor  
ebp, ebx 
     not  
eax 
     mov  
DWORD PTR [edi], ebp 
     xor  
eax, ecx 
     mov  
ecx, DWORD PTR _out3$[esp+32] 
     xor  
eax, DWORD PTR [ecx] 
     pop  
edi 
     pop  
esi 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
392 
逆向工程权威指南（上册） 
     xor  
eax, ebx 
     pop  
ebp 
     mov  
DWORD PTR [ecx], eax 
     pop  
ebx 
     add  
esp, 20  
; 00000014H 
     ret  
0 
_s1  ENDP 
编译器只在栈里存储了 5 个变量。 
作为对比，我们再使用 64 位的 MSVC 2008 编译它，得到的代码如下所示。 
指令清单 26.2  Optimizing MSVC 2008 
a1$ = 56 
a2$ = 64 
a3$ = 72 
a4$ = 80 
x36$1$ = 88 
a5$ = 88 
a6$ = 96 
out1$ = 104 
out2$ = 112 
out3$ = 120 
out4$ = 128 
s1     PROC 
$LN3: 
     mov  
QWORD PTR [rsp+24], rbx 
     mov  
QWORD PTR [rsp+32], rbp 
     mov  
QWORD PTR [rsp+16], rdx 
     mov  
QWORD PTR [rsp+8], rcx 
     push  rsi 
     push  rdi 
     push  r12 
     push  r13 
     push  r14 
     push  r15 
     mov  
r15, QWORD PTR a5$[rsp] 
     mov  
rcx, QWORD PTR a6$[rsp] 
     mov  
rbp, r8 
     mov  
r10, r9 
     mov  
rax, r15 
     mov  
rdx, rbp 
     not  
rax 
     xor  
rdx, r9 
     not  
r10 
     mov  
r11, rax 
     and  
rax, r9 
     mov  
rsi, r10 
     mov  
QWORD PTR x36$1$[rsp], rax 
     and  
r11, r8 
     and  
rsi, r8 
     and  
r10, r15 
     mov  
r13, rdx 
     mov  
rbx, r11 
     xor  
rbx, r9 
     mov  
r9, QWORD PTR a2$[rsp] 
     mov  
r12, rsi 
     or  
r12, r15 
     not  
r13 
     and  
r13, rcx 
     mov  
r14, r12 
     and  
r14, rcx 
     mov  
rax, r14 
     mov  
r8, r14 
     xor  
r8, rbx 
     xor  
rax, r15 
     not  
rbx 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 26 章 64 位平台 
393 
     and  
rax, rdx 
     mov  
rdi, rax 
     xor  
rdi, rsi 
     or  
rdi, rcx 
     xor  
rdi, r10 
     and  
rbx, rdi 
     mov  
rcx, rdi 
     or  
rcx, r9 
     xor  
rcx, rax 
     mov  
rax, r13 
     xor  
rax, QWORD PTR x36$1$[rsp] 
     and  
rcx, QWORD PTR a1$[rsp] 
     or  
rax, r9 
     not  
rcx 
     xor  
rcx, rax 
     mov  
rax, QWORD PTR out2$[rsp] 
     xor  
rcx, QWORD PTR [rax] 
     xor  
rcx, r8 
     mov  
QWORD PTR [rax], rcx 
     mov  
rax, QWORD PTR x36$1$[rsp] 
     mov  
rcx, r14 
     or  
rax, r8 
     or  
rcx, r11 
     mov  
r11, r9 
     xor  
rcx, rdx 
     mov  
QWORD PTR x36$1$[rsp], rax 
     mov  
r8, rsi 
     mov  
rdx, rcx 
     xor  
rdx, r13 
     not  
rdx 