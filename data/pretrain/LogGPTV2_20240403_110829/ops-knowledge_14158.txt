User: 请回答以下运维开发问题如何将生产Linux服务器转换为docker映像或容器？我有一个生产版Ubuntu，它包含大量的软件和依赖项，我想将VPS“克隆”到Docker映像中，以便能够复制相同的环境并将其分发到不同的服务器中。
这可能没有任何黑客攻击吗？
如果是的话，要遵循哪些大原则？

Assistant: 这可能没有任何黑客攻击吗？
是的，这是可能的。虽然Docker通常用于面向微服务的映像（即每个映像一个服务），但没有什么能阻止您通过构建一个大映像并在其中任意运行多个进程来将一个单一的旧应用转换为Docker。
虽然Docker镜像确实不是一个独立的VM，但它仍然包含等效VM所包含的一切——不包括内核。也就是说，所有的操作系统库（libc，其他一切…）都在那里。
如果是的话，要遵循哪些大原则？
Dockerfile只是一个普通的旧shell脚本的时髦版本，您通常可以使用它来为软件提供所有依赖项。也就是说，您链接了许多在构建过程中执行的命令，最后文件系统中的任何内容都会打包到一个映像中。
因此，一般路线是：
拾取基础镜像。根据您的需求和安全要求，您可以从Dockerhub中选择您最喜欢的发行版。首先，你可以选择任何Debian、Ubuntu或任何你喜欢并习惯的发行版。
这些基本镜像通常都很小。因此，您的下一步是使用RUN apt-install。。。（或您的基本映像使用的任何包管理器）来添加您喜欢的任何标准包。
最后，你必须以某种方式安装自己的软件。如果您遵循通常的方法，您将在Dockerfile旁边的主机端目录中准备所需的任何二进制文件和其他文件，然后将它们添加到中。
最后一步是（可选）创建ENTRYPOINT，即启动映像时运行的命令，以及EXPOSE路由信息，作为非根USER或设置ENVironment变量运行。
这些是大线条。如果你只是天真地这么做，你最终会得到一个巨大的镜像（千兆字节），每次重建时都会创建一个新的巨大镜像，这可能会带来严重的问题。因此，接下来的步骤是：
将基本镜像切换到较小的镜像。高山很好。
对于每个RUN调用，确保之后没有留下临时/不必要的文件。例如，apt-install在/var/中留下了大量缓存垃圾（其他包管理器也是如此）。由于Docker使用洋葱式分层文件系统的方式，你必须在同一个RUN命令中清除垃圾，你无法在第二次RUN中清除。如果你在谷歌上搜索，你会发现很多例子。
你可能和你的软件包管理器拉了太多的软件包，解决这个问题。
对于安装自己的软件，同样适用。避免你不再需要临时的.tar档案。
这些步骤应该已经大大减小了您的镜像大小。根据您实际所做的工作，500'ish MB是一个很好的目标，可以避免现阶段的过度优化。
最后一步是优化一切：
通过适当地对Dockerfile中的行进行排序，确保您不必每次都重建每个中间映像。如果“大”发生在最初的几层镜像中，如果这些镜像很少发生变化，并且可以被许多最终镜像重复使用，那么你可以避开大镜像。
对于要重新使用的中间镜像，它必须与另一个镜像逐位相同。因此，请确保尽可能修复所有可变信息（如版本号等）。
显然，如果你掌握了所有这些，并在一个Docker映像中运行复杂的多部分应用，那么是时候将其拆分为多个映像了（漂洗、重复）。任何通过TCP/IP通信的东西都应该是一个简单的选择。