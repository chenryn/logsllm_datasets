Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle: Framework for piggy-back fuzzing and
tool development
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
August 8, 2014
DEF CON 22
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
1. Background
About Me
Fuzzing
File Format Fuzzing
Protocol Fuzzing
2. Meddle Framework
Introduction
Meddle Target
Meddle Process
Meddle Controller
3. XRDP Fuzzing
XRDP Server
4. DeviceIoControl
DeviceIoControl Demo
5. Sandbox
Malware Sandbox Demo
6. Conclusion
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
About Me
About Me
Vancouver, Canada
Game hacking (Ultima Online MMORPG)
Reverse-engineering tool development
Previously Symantec
Currently at Microsoft
Personal website http://www.split-code.com/
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Fuzzing
Types of Fuzzing
File Format Fuzzing
PDF, Microsoft Word, or TrueType fonts
Protocol Fuzzing
RDP, VNC, SSL, or Voip
Application Fuzzing
COM objects, API calls, or inter-process communication
Web Application Fuzzing
Joomla, WordPress, or any website
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Fuzzing
Fuzzing Tools
SPIKE from Immunity [1]
Network protocols and web applications
Basic Fuzzing Framework (BFF) from CERT [2]
File format
SAGE from Microsoft [3]
Input fuzzing
AutoFuzz [4]
Network protocols by MITM
COMRaider [5]
COM interface fuzzing
IOCtrlFuzzer from eSage Lab [6]
NtDeviceIoControlFile driver input fuzzing
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Fuzzing
Fuzzing Algorithms
Basic algorithms:
Naive protocol fuzzing (eg. IOCtrlFuzzer [6])
Protocol aware fuzzing (eg. SPIKE [1])
Advanced algorithms:
Protocol-learning before fuzzing (eg. Autofuzz [4])
Feedback-driven fuzzing (eg. Sage [3])
Code coverage fuzzing (eg. Google’s Flash fuzzing [7])
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
File Format Fuzzing
File Format Fuzzing: TrueType
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Protocol Fuzzing
Protocol Fuzzing: RDP by Network MITM
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Protocol Fuzzing
Protocol Fuzzing: RDP by Client Implementation
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Protocol Fuzzing
Protocol Fuzzing: RDP by File Fuzzing
Luigi Auriemma’s CVE-2012-0002 POC
nc SERVER 3389 < termdd 1.dat
RDP server use after free
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Protocol Fuzzing
Application Fuzzing: API Fuzzing Example
instruder’s CVE-2012-0181 related POC win32k.sys
NtUserLoadKeyboardLayoutEx( hFile,
0x0160,0x01AE,&uKerbordname, hKbd, &uStr, 0x666, 0x101 )
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Introduction
Meddle: About
Meddle:
Open source, https://github.com/glmcdona/meddle
IronPython for the environment
Framework written in C#
Command-line based
Supports x86, WOW64, and x64 processes
Windows only, sorry :(
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Introduction
Meddle: Goals
Goals:
Bring simplicity to fuzzing
Python for the fuzzing environment
Extendibility
Reproducibility
For Simplicity:
Piggy-back on existing application
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Introduction
Meddle: Structure
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Introduction
Meddle: Structure
Equal amount of time on each event type
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target
class Target_Winsock_Send(TargetBase):
def __init__(self, Engine, ProcessBase):
# Set options and hook filters
def breakpoint_hit(self, event_name, address, context, th):
# Parse arguments and return fuzz blocks for each event
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target
init
def __init__(self, Engine, ProcessBase):
self.Engine = Engine
self.ProcessBase = ProcessBase
self.hook_exports = True
# Hook matching exports
self.hook_symbols = False
# Don’t hook matching symbols
# Libraries to look at
self.libraries = ["ws2_32.dll"]
self.libraries_regex = re.compile("a^",re.IGNORECASE)
# List of function names to add hooks on.
self.functions = ["send"]
self.functions_regex = re.compile("a^",re.IGNORECASE)
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target breakpoint hit
def breakpoint_hit(self, event_name, address,
context, th):
parameters = [ ... parameter spec ... ]
[reg_spec, stack_spec] = self.ProcessBase.types.pascal(
parameters )
arguments = self.Engine.ParseArguments(stack_spec, reg_spec,
context)
if self.ProcessBase.verbose:
print arguments.ToString()
return [arguments.GetFuzzBlockDescriptions(),
"Winsock Send Event"]
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target Parameters
parameters = [ {"name": "socket",
"size": self.ProcessBase.types.size_ptr(),
"type": None, "fuzz": NOFUZZ },
{"name": "buffer",
"size": self.ProcessBase.types.size_ptr(),
"type": self.ProcessBase.types.parse_BUFFER,
"type_args": "size", "fuzz": NOFUZZ },
{"name": "size",
"size": self.ProcessBase.types.size_ptr(),
"type": None, "fuzz": NOFUZZ },
{"name": "flags",
"size": self.ProcessBase.types.size_ptr(),
"type": None, "fuzz": NOFUZZ } ]
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target Parameter Structures
parameters = [ ...
{"name": "buffer",
"size": self.ProcessBase.types.size_ptr(),
"type": self.ProcessBase.types.parse_BUFFER,
"type_args": "size", "fuzz": NOFUZZ }, ... ]
def parse_BUFFER(self, parent, address, extra_name, type_args):
if type(type_args) is str: # points to argument name
size = parent.GetMemberSearchUp(type_args).ToInt()
else: # contains exact size
size = type_args
return [ {"name": extra_name + "BUFFER",
"size": size,
"type": None, "fuzz": FUZZ } ]
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target Arguments
arguments = self.Engine.ParseArguments(...)
print arguments.ToString()
flags at r9:
00 00 00 00 00 00 00 00
........
size at r8:
13 00 00 00 00 00 00 00
........
buffer at rdx:
E0 98 68 04 00 00 00 00
..h.....
buffer.BUFFER at 0x46898E0:
03 00 00 13 0E E0 00 00
00 00 00 01 00 08 00 03
........
........
00 00 00
...
socket at rcx:
58 07 00 00 00 00 00 00
X.......
returnAddress at 0x25AF918:
7B 26 9A DA FE 07 00 00
{&......
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target Arguments
arguments = self.Engine.ParseArguments(...)
print "Sent size = %i" % arguments.size.ToInt()
print arguments.buffer.ToString()
Sent size = 19
buffer at rdx:
90 ED 29 04 00 00 00 00
..).....
buffer.BUFFER at 0x429ED90:
03 00 00 13 0E E0 00 00
00 00 00 01 00 08 00 03
........
........
00 00 00
...
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Target
Target breakpoint hit
arguments = self.Engine.ParseArguments(...)
print "Sent size = %i" % arguments.size.ToInt()
print arguments.buffer.BUFFER.ToString()
Sent size = 19
buffer.BUFFER at 0x4907480:
03 00 00 13 0E E0 00 00
00 00 00 01 00 08 00 03
........
........
00 00 00
...
Sent size = 428
buffer.BUFFER at 0x4907480:
03 00 01 AC 02 F0 80 7F
65 82 01 A0 04 01 01 04
........
e.......
01 01 01 01 FF 30 19 02
01 22 02 01 02 02 01 00
.....0..
."......
02 01 01 02 01 00 02 01
01 02 02 FF FF 02 01 02
........
........
30 19 02 01 01 02 01 01
02 01 01 02 01 01 02 01
0.......
........
00 02 01 01 02 02 04 20
02 01 02 30 1C 02 02 FF
.......
...0....
FF 02 02 FC 17 02 02 FF
FF 02 01 01 02 01 00 02
........
........
01 01 02 02 FF FF 02 01
02 04 82 01 3F 00 05 00
........
....?...
14 7C 00 01 81 36 00 08
00 10 00 01 C0 00 44 75
.|...6..
......Du
63 61 81 28 01 C0 D8 00
04 00 08 00 80 07 38 04
ca.(....
......8.
01 CA 03 AA 09 04 00 00
B1 1D 00 00 47 00 4C 00
........
....G.L.
4D 00 43 00 44 00 4F 00
4E 00 41 00 2D 00 50 00
M.C.D.O.
N.A.-.P.
Geo↵ McDonald
PI:EMAIL, unaﬃliated presentation
Meddle: Framework for piggy-back fuzzing and tool development
Outline
Background
Meddle Framework
XRDP Fuzzing
DeviceIoControl
Sandbox
Conclusion
Meddle Process
Process
Geo↵ McDonald