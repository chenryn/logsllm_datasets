# Anycast in Context: A Tale of Two Systems

**Authors:**
- Thomas Koch, Columbia University
- Ethan Katz-Bassett, Columbia University
- Ke Li, Columbia University
- Matt Calder, Microsoft/Columbia University
- Calvin Ardi, USC/ISI
- John Heidemann, USC/ISI

## Abstract
Anycast is widely used for serving content such as web pages and DNS, and its deployments are expanding. However, previous studies on the root DNS suggest that anycast deployments often result in significant latency inflation, routing users to suboptimal sites. We re-evaluate anycast performance by extending prior analysis on latency inflation in the root DNS. Our findings indicate that inflation is very common, affecting more than 95% of users. Despite this, we show that root DNS latency has minimal impact on user experience due to effective caching. This leads us to question whether inflation is an inherent characteristic of anycast or if it can be mitigated when it matters. To address this, we examine Microsoft’s anycast CDN, which serves latency-sensitive content. Here, latency is significantly more critical, and only 35% of CDN users experience any inflation, with a smaller magnitude compared to the root DNS. We demonstrate that the CDN's anycast latency is well-controlled due to extensive peering and engineering. These results suggest that previous claims of anycast inefficiency may reflect the limitations of a single application rather than the technical potential of anycast. They also highlight the importance of context in measuring system performance.

## CCS Concepts
- **Networks → Network Performance Analysis**

## Keywords
- Anycast, Root DNS, Routing, Latency, CDN

## ACM Reference Format
Thomas Koch, Ke Li, Calvin Ardi, Ethan Katz-Bassett, Matt Calder, and John Heidemann. 2021. Anycast in Context: A Tale of Two Systems. In ACM SIGCOMM 2021 Conference (SIGCOMM '21), August 23–27, 2021, Virtual Event, USA. ACM, New York, NY, USA, 20 pages. https://doi.org/10.1145/3452296.3472891

## 1 Introduction
IP anycast is a routing method where geographically diverse servers, known as anycast sites, share the same IP address. It is employed in various Domain Name System (DNS) [1, 7, 31, 39, 65] and Content Delivery Network (CDN) [16, 21, 30, 65, 75] deployments to improve client latency and reduce server load [45, 55, 64]. However, some studies argue that anycast often provides suboptimal performance compared to the lowest possible latency [51, 54, 67]. For instance, the SIGCOMM 2018 paper "Internet Anycast: Performance, Problems, & Potential" highlighted that anycast can increase latency by hundreds of milliseconds [51], leading to a negative perception of anycast. Conversely, other research has shown low inflation in Microsoft’s anycast CDN [16] and Google Public DNS [50], but these studies used different metrics and methodologies, making direct comparisons difficult. The contrasting takeaways from these studies have led to mixed opinions within the community, despite the continued growth of anycast in production systems.

To understand the impact of anycast inefficiency and its widespread use, we evaluate anycast in the context of two real-world systems: the root DNS and Microsoft’s anycast CDN. These applications have distinct goals and are key components of the Internet, providing a comprehensive view of anycast performance.

We analyze packet traces from the root DNS, available via DITL [26], and compare them with global measurements from Microsoft’s CDN. This allows us to directly compare the performance of different anycast deployments. Our study covers nearly all root DNS letters and includes tens of billions of queries from millions of recursive resolvers, providing broad coverage. For the CDN, we analyze data from over a billion Microsoft users across hundreds of countries/regions, offering a complete view of CDN performance.

Our findings reveal that while more users than previously thought experience some inflation in the root DNS (over 95%), the average inflation per query is lower due to preferential querying by recursive resolvers. Caching further mitigates the impact of inflation, as most users interact with the root DNS only once per day. In contrast, Microsoft’s CDN experiences much less inflation, with only 35% of users experiencing any inflation. This difference is attributed to extensive peering and engineering efforts by Microsoft.

These results suggest that the efficiency of anycast depends on the context and the specific service requirements. While anycast can cause significant inflation in some cases, it can also perform well when properly engineered. Therefore, anycast must be analyzed in the context of the specific service it supports.

## 2 Methodology and Datasets
We use a combination of DNS packet captures and global CDN measurements to evaluate latency and inflation. Root DNS data is available through DITL [26], while CDN data is proprietary. We supplement these datasets with measurements from RIPE Atlas [71]. The characteristics, strengths, and weaknesses of our datasets are summarized in Appendix A.

### 2.1 Root DNS
The root DNS is a critical component of the global DNS infrastructure, mapping hostnames to IP addresses [22, 56]. Recursive resolvers cache results according to TTLs and query authoritative DNS servers, starting from the root, to the top-level domain (TLD), and down the tree. The root DNS is provided by 13 letters, each with a different anycast deployment ranging from 6 to 254 sites (as of July 2021), managed by 12 organizations. Sites can be local (serving small geographic areas or certain ASes) or global (globally reachable).

#### Datasets
- **End-User Data:** Long-term packet captures from the Information Sciences Institute (ISI) at USC and DNS and browser measurements from daily use by two authors.
- **DNS Server Data:** 48-hour packet captures from most root servers during the Day in the Life of the Internet (DITL) [26].

**Packet Captures from ISI:**
- Provide a local view of root DNS queries.
- Use BIND v9.11.14.
- Capture all traffic (incoming and outgoing) on port 53 of the recursive resolver.
- Include approximately 100 million queries from 2018, reflecting traffic from hundreds of users on laptops and desktop computers.

**2018 DITL Captures:**
- Archived by DNS-OARC [26].
- Provide a global view of root DNS use.
- Include data from 12 root letters (all except G root).
- Partially anonymized for B root, fully anonymized for I root.
- Filtered to exclude non-user-affecting queries, such as those for non-existing domain names and PTR queries.
- Analyze only IPv4 data, excluding IPv6 traffic.

**Estimating Per-User Latency:**
- Augment DITL traces with approximate counts of Microsoft users per recursive resolver, gathered in 2019.
- Join DITL captures and Microsoft user counts by /24 prefix to increase the amount of recursives with user data.
- Justified by the colocation of many organizations' servers within the same /24 prefix [31, 63].

This preprocessing step is further justified in Appendix B.2, showing that addresses within a /24 in DITL are almost always routed to the same location.