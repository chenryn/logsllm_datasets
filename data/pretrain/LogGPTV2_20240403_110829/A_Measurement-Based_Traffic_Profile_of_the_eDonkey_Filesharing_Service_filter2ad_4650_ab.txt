C
10-6
100
100
10-2
10-4
F
D
C
C
10-6
100
(b) Non-download, Outbound
101
102
103
104
105
Holding Time [sec]
(d) Non-download, Inbound
101
102
103
104
105
Holding Time [sec]
Fig. 3. CCDF of the observed eDonkey Flow Holding Time
streams. This is an expected behavior since non-download connections are short
and limited in their sensitivity on TCP ﬂow control. Figure 3 depicts the CCDF
of the ﬂow holding times on TCP level. The download connection holding time
CCDFs (part (a) and (c)) decrease moderately and reminds more to a linear
decay in a log/log plot. The CCDFs of the holding time of non-download stream
(part (b) and (d)) decrease rapidly as well as un-regularly. There is only little
diﬀerence in the non-download case for in the diﬀerent directions.
Correlation of eDonkey TCP Flow Holding Time and TCP Holding
Time: The Figure 4 depicts a scatter plot describing graphically the correlation
of the TCP holding time and the size of eDonkey ﬂows. Each dot in the scat-
]
s
e
t
y
B
[
l
e
v
e
L
n
o
i
t
a
c
i
l
p
p
A
n
o
e
m
u
o
V
a
a
D
d
e
t
l
t
t
i
m
s
n
a
r
T
identified downloads
other connections, e.g.  
signaling 
application 
level timeout
TCP Connection Holding Time t [sec]
Fig. 4. Correlation of eDonkey TCP holding time and Flow Size
18
K. Tutschku
F
D
C
C
F
D
C
C
100
10-1
10-2
10-3
10-4
10-5
10-6
100
10-1
10-2
10-3
10-4
10-5
10-6
0
0
(a) Download, Outbound
exponential approx.
200
400
600
Interarrival Time [sec]
(c) Download, Inbound
200
400
600
Interarrival Time [sec]
800
800
100
10-1
10-2
10-3
10-4
10-5
10-6
100
10-1
10-2
10-3
10-4
10-5
10-6
F
D
C
C
F
D
C
C
(b) Non-download, Outbound
0
5
10
15
20
25
Interarrival Time [sec]
(d) Non-download, Inbound
0
5
10
15
20
25
Interarrival Time [sec]
Fig. 5. eDonkey Flow Interarrival Time
ter plot represents an observed eDonkey ﬂow. The brighter dots are identiﬁed
download ﬂows, the dark dots represent non-download connections.
The scatter plot shows that almost all identiﬁed download ﬂows are within
the same region. The overlap of both region is small and therefore the probability
of a misclassiﬁcation is low. This feature enables the possibility to classify do-
wnload streams by their size and holding time instead of using computationally
demanding pattern recognition of protocol opcodes. Furthermore, the applica-
tion level timeout of 40sec is clearly visible.
eDonkey Flow Interarrival Time: The average ﬂow interarrival time was
0.310sec, cf. Table 2. There is again a signiﬁcant diﬀerence for download ﬂows
and non-download streams since download ﬂow are more rarely. The average
inter-arrival time of download ﬂows is two orders of magnitudes higher than the
one of non-download ﬂows. The CCDFs of the eDonkey ﬂow interarrival time
reveals an exponential decay, cf. Figure 5. This is consistent with resent eDonkey
measurements [4]. The high frequency of non-download ﬂows, in general, reduces
the throughput on links [7].
Average Bandwidth on Application-Level: The average bandwidth of the
eDonkey connections was also investigated. In the context of the herein pre-
sented measurements, the average bandwidth is deﬁned as the ratio between
the amount of transmitted data on application-level and the TCP connection
holding time. This bandwidth is widely used and denoted in this paper as the
average plain bandwidth. The analysis of the eDonkey ﬂows, however, showed
that a large number of connections have a signiﬁcant idle period before the TCP
connection is terminated by a FIN or a RST packet. From network point of
view, the bandwidth is only experienced during data transmission. Therefore,
the idle time is subtracted from the ﬂow duration. The shorter times are used
A Measurement-Based Traﬃc Proﬁle of the eDonkey Filesharing Service
19
100
100
10-2
10-2
10-4
10-4
F
F
D
D
C
C
C
C
10-6
10-6
103
103
100
100
10-2
10-2
10-4
10-4
F
F
D
D
C
C
C
C
10-6
10-6
103
103
(a) Download, Outbound
(a) Download, Outbound
busy bandwidth
busy bandwidth
plain bandwidth
plain bandwidth
104
105
104
105
Bandwidth [bps]
Bandwidth [bps]
(c) Download, Inbound
(c) Download, Inbound
106
106
busy bandwidth
busy bandwidth
plain bandwidth
plain bandwidth
104
105
104
105
Bandwidth [bps]
Bandwidth [bps]
106
106
100
100
10-2
10-2
10-4
10-4
10-6
10-6
100
100
10-2
10-2
10-4
10-4
10-6
10-6
F
F
D
D
C
C
C
C
F
F
D
D
C
C
C
C
(b) Non-download, Outbound
(b) Non-download, Outbound
busy bandwidth
busy bandwidth
plain bandwidth
plain bandwidth
102
102
103
103
104
104
105
105
106
106
107
107
Bandwidth [bps]
Bandwidth [bps]
(d) Non-download, Inbound
(d) Non-download, Inbound
busy bandwidth
busy bandwidth
plain bandwidth
plain bandwidth
102
102
103
103
104
104
105
105
106
106
107
107
Bandwidth [bps]
Bandwidth [bps]
Fig. 6. eDonkey Average Bandwidth
for the calculation of the average busy bandwidth. We now compare the observed
statistical values and distributions for both bandwidth deﬁnitions.
The average plain bandwidth for all eDonkey ﬂows is 109bps, cf. Table 2.
This value is very low and strongly inﬂuenced by idle period at the end of the
TCP ﬂows as the average net bandwidth of 716bps shows. The average plain
bandwidth of download ﬂows is typically two orders of magnitude higher than
the plain bandwidth of non-download streams. The CCDF of the average plain
bandwidth, lower curve in Figure 6, shows strong decay for download ﬂows (part
(a) and (c)) and a moderate decay for non-download ﬂows (part (b) and (d)).
The CCDF for the average busy bandwidth has a similar behavior however the
decay is delayed and even stronger (part (b) and (d)). The comparisons shows
that the inﬂuence of the idle time is less stronger for the average bandwidth
of download ﬂows as for the bandwidth of non-download streams. All features
suggest to use the average busy bandwidth instead of the simple approach of the
average plain bandwidth.
Origin and Destination of eDonkey Traﬃc: Finally, the origin and the
destination of the observed eDonkey ﬂows were investigated. The IP addresses
of the foreign hosts were mapped to the Autonomous Systems (AS) which take
care of these addresses. All traﬃc and connections for an AS were combined in
Top7 lists. The Top7 list for the traﬃc amount, cf. Table 3, is dominated by the
traﬃc originating or terminating in the AS of the German Telecom (DTAG).
This characteristic of eDonkey indicates that majority of the observed traﬃc
is locally and not world-wide distributed. Table 4 underlines this result for the
number of established connections. A large number of established connections,
however, does not necessarily mean a high traﬃc volume. This feature is caused
by the eDonkey protocol requirement to renew download requests.
20
K. Tutschku
Table 3. eDonkey TOP 7 Autonomous Systems in Traﬃc Volume
Owner
Country AS num. total bytes bytes download
bytes non-download
outbound inbound outbound inbound
.de
DTAG
.pl
Polish Tel.
.fr
France Tel.
.uk
BTnet UK
.us
Verizon
Arcor IP
.de
NTL Grp. Ltd .uk
AS3320 50258 MB 15890 MB 4798 MB 9231 MB 20331 MB
AS5617 22703 MB 1761 MB 574 MB 9590 MB 10777 MB
AS3215 10527 MB 2353 MB 811 MB 2910 MB 4452 MB
AS2856 8992 MB 1299 MB 720 MB 3197 MB 3776 MB
AS19262 6395 MB 0.877 MB 0.001 MB 3196 MB 3197 MB
AS3209 5579 MB 1133 MB 415 MB 1656 MB 2373 MB
AS5089 5224 MB 1055 MB 322 MB 1557 MB 2289 MB
4 Related Work
The traﬃc proﬁle for the eDonkey service presented in this paper is a ﬁrst step
towards a more detailed behavior model and traﬃc model for the service. In
general behavior model and traﬃc model of P2P services can classiﬁed into
three main categories: models for multiple peer characteristics, models for the
content or the shared resources, and models for the individual peer behavior.
The models for multiple peer characteristics comprise characterizations for the
P2P overlay network topology, e.g. the Power-Law feature in degree distribution
of unstructured P2P networks [11], for the P2P overlay variability [12], and for
wide-area network traﬃc pattern of P2P services [13]. The characterization of
the content comprises models for the popularity of ﬁles and providing peers [14]
and ﬁle size [15]. The individual peer behavior can be characterized by state
models describing the idle, down, active, searching, or responding state of the
peer [16]. A comprehensive traﬃc model for the Kazaa P2P ﬁle sharing service
was investigated in [17].
5 Conclusion
In this paper we have presented a traﬃc proﬁle for the eDonkey P2P ﬁlesha-
ring service. The measurement-based study revealed a strong distinction between
download ﬂows and non-download stream. Both types of ﬂows have to be consi-
dered diﬀerently. A single model for P2P ﬂows, as provided in a ﬁrst analysis in
[13], would lead to a signiﬁcant mischaracterization of the P2P traﬃc. It turned
out that the traﬃc caused by eDonkey doesn’t seem to worsen the ”mice and ele-
phants” phenomenon. However, a more detailed investigation is still necessary.
Table 4. eDonkey Top 7 Autonomous Systems in Connections
Owner
Country AS num. total conn. num. conn. download num. conn. non-download
.de
DTAG
TDC
.dk
Arcor IP
.de
AOL Transit .us
.fr
France Tel.
.es
TDE
Polish Tel.
.pl
AS3320 2114910
AS3292 207390
AS3209 178412
AS1668 176404
AS3215 153900
AS3352 140402
AS5617 131750
outbound inbound
8518
860
587
845
1224
1145
1076
12775
801
850
1342
2415
1417
828
outbound inbound
1044680
1048937
102835
102894
88356
88619
86860
87357
74535
75726
68784
69056
64799
65047
A Measurement-Based Traﬃc Proﬁle of the eDonkey Filesharing Service
21
In a next step we will deﬁne a detailed traﬃc model for eDonkey ﬂows. The
observed origins and destinations of eDonkey ﬂows indicates that it is favorable
for network operators trying to keep the traﬃc within their AS.
Acknowledgement. The author wants to thank M. Brotzeller for carrying out
the measurements and P. Tran-Gia for supporting this research.
References
1. Meta Search Inc.- eDonkey2000 Home Page: (http://www.edonkey2000.com/)
2. eMule Project Team Web Site: (http://www.emule-project.net/)
3. mlDonkey Web Site: (http://mldonkey.org/)
4. Azzouna, N., Guillemin, F.: Analysis of ADSL traﬃc on an IP backbone link. (In:
GLOBECOM 2003, San Francisco, California, Dec. 2003.)
5. Paxson, V., Floyd, S.: The failure of the Poisson assumption. IEEE/ACM Trans.
on Networking (1995) 226–244
6. Bhattacharyya, S., Diot, C., Jetcheva, J., Taft, N.: Pop-level and access-link-level
traﬃc dynamics in a tier-1 pop. (In: 1nd Internet Measurement Workshop, San
Francisco, USA, Nov. 2001.)
7. Boyer, J., Guillemin, F., Robert, P., Zwart, B.: Heavy tailed M/G/1-PS queues
with impatience and admission control in packet networks. (In: Proceedings of
INFOCOM 2003, San Francisco, USA, April/March 2003.)
8. Lohoﬀ, F.: Lowlevel documentation of the eDonkey protocol:
(http://silicon-
verl.de/home/ﬂo/software/donkey/)
9. Free Peers Inc. - Bearshare: (http://www.bearshare.com/)
10. Sharman Networks - KaZaA Media Desktop: (http://www.kazaa.com/)
11. Ripeanu, M., Foster, I.: Mapping gnutella network. (In: 1st International Workshop
on Peer-to-Peer Systems (IPTPS’02), Cambridge, Massachusetts, March 2002.)
12. de Meer, H., Tuschku, K., Tran-Gia, P.: Dynamic Operation of Peer-to-Peer Over-
lay Networks. Praxis der Informationsverarbeitung und Kommunikation 26 (2003)
65–73
13. Sen, S., Wong, J.: Analyzing peer-to-peer traﬃc across large networks. (In: 2nd
Internet Measurement Workshop, Marseille, France, Nov. 2002.)
14. Adar, E., Huberman, B.A.: Free riding on gnutella. Research report, Xerox Palo
Alto Research Center (2000)
15. Saroiu, S., Gummadi, P., Gribble, S.: A measurement study of peer-to-peer ﬁle
sharing systems. In: Proceedings of Multimedia Computing and Networking 2002
(MMCN ’02), San Jose, CA, USA (2002)
16. Schlosser, M., Condie, T., Kamvar, S.: Simulating a p2p ﬁle-sharing network.
(In: 1st Workshop on Semantics in Peer-to-Peer and Grid Computing, Budapest,
Hungary, May 2003.)
17. Gummadi, K., Dunn, R., Saroiu, S., Gribble, S., Levy, H., Zahorjan, J.: Measure-
ment, modeling, and analysis of a peer-to-peer ﬁle-sharing workload. (In: Procee-
dings of 19th ACM Symposium on Operating Systems Principles, Bolton Landing
(Lake George), USA, Oct. 2003.)