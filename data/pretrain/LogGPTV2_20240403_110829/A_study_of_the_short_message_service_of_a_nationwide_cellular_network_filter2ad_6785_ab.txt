 60
 40
 20
 0
 0
 2
 4
 6
 8
 10  12  14  16  18  20  22  24  26  28  30  32
# of retries/message
DELIVERED
DENIED
EXPIRED
Figure 3: CDF of messages vs. message service time
Figure 4: CDF of messages vs. number of retries
per message
By comparing the timestamps of the mobile originating
(MO) and the mobile terminating (MT) CDR of a message,
we can estimate the time a message spent in the SMS sys-
tem, which we call service time.
In total, there are three
types of messages: messages that were successfully deliv-
ered, messages denied, and messages that expired during
the delivery process. Their percentages are 94.9%, 3.5%,
and 1.6%, respectively. Figure 3 plots the cumulative dis-
tribution of the service times for all three types. The ﬁg-
ure shows that, among the successfully delivered messages,
73.2% reach their destination in less than 10 seconds, which
justiﬁes the conventional characterization of SMS as “near
real-time”. On the other hand, 17% of delivered messages
need more than a minute, and a signiﬁcant 5% require more
than an hour and a half.
While we can attribute the service times to factors such
as processing latency at the SMS center, address resolu-
tion from the HLR/VLR server, network and radio resource
shortage [2], the extraordinarily large service times are more
likely caused by the mobile user behavior: a cell phone might
be unreachable due to mobility, or the phone might simply
be out of service (e.g., power oﬀ, sleep, inactive). We have
collected more detailed traces from the operation of SMS
over the SS7 stack that we intend to use in order to identify
the exact cause that contributes to the service time.
For the 1.6% of messages that expired before they man-
age to reach their destinations, their service time tends to
get two speciﬁc values: around 2 days, and 3.3 days.
In
principle, the expiration time for a message is manually con-
ﬁgurable before the message is sent out [1]. However, our
observation implies that either such an option is not allowed
by mobile devices, or if it is allowed, users do not extensively
use it; instead, they prefer to use some preset values. This
fact should be taken into account when deriving analytical
models for message delay [11].
Cumulative distributions of retries required by delivered,
denied and expired short messages are shown in Figure 4.
In [2], reasons for message delivery failure are classiﬁed into
four categories: network, terminal, radio interface, and gen-
eral problems. As part of the future work, we plan to extract
the exact reasons for delivery failures by analyzing the traces
from the operation of SMS over SS7.
3.3 Thread-level characteristics
In person-to-person, 2-way instant communication, mo-
bile phone users send messages to each other to say “hello”,
to prompt for something, to arrange a meeting, etc. Equally
often a response is sent back to the user who initiates the
communication, which further prompts a response, thus users
essentially engage in a conversation through the exchange of
short messages, in a way similar to Instant Messaging.
Unfortunately, SMS does not incorporate the concept of
threads or sessions: messages that are exchanged between
two users are not associated in any way with each other,
even though they could be grouped into a conversational
thread. As wireless immediate messaging [7] is being inte-
grated with Internet-style instant messaging systems [9] that
incorporate the notion of threads, the design of a uniﬁed
messaging system will need to characterize this behaviour.
Such a characterization could be used as input to perfor-
mance evaluation of any thread- or session-based protocol
design for instant messaging [8].
We group messages into conversational threads by follow-
ing the approach of [10]. Speciﬁcally, we merge consecutive,
mobile-originated messages that are exchanged between the
same two users into a thread, if each of these messages was
sent within a predeﬁned timeout period from the previous
one. We experiment with relatively large values for the time-
out, 1 minute and 10 minutes, to account for the fact that
users typically need some time to reply, and to type the mes-
sage using the somewhat inconvenient keypad of cell phones.
We also do not consider in our analysis threads that fall near
the gaps in our traces to protect the validity of the results.
Before presenting the results, we would like to explicitly
state the limitations of the analysis. First, it is based only
on traces collected from the SMS message center of a sin-
gle cellular carrier. Clearly, cross-validation with logs from
other locations is necessary before generalizing the conclu-
sions. Second, the identiﬁcation of threads is based on the
somewhat arbitrary assumption of grouping messages that
are exchanged between two users using a timeout value, but
this hypothesis cannot be veriﬁed with the current logs. In
fact, it cannot even be veriﬁed with traces from the under-
lying SS7 protocol, since no notion of thread (or session)
exists in the system. Therefore we would like to caution the
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
e
g
a
t
n
e
c
r
e
P
0
2 
10
20
# of msgs
30
40
e
g
a
t
n
e
c
r
e
P
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
2
4
6
8
10
12
# of handoffs
14
16
18
20
5.1: PDF for number of mes-
sages in each thread
5.2: PDF for number of hand-
oﬀs in each roaming thread
Figure 5: Statistics on threads
interested reader in interpreting the results about threads.
Nevertheless, we believe that the following represents an ini-
tial step towards understanding SMS traﬃc, even though
more work is admittedly needed.
Exponential
Weibull
Lognormal
Gamma
3
2.5
2
1.5
1
0.5
i
n
o
i
t
a
v
e
d
e
g
a
r
e
v
A
0
0
5
10
15
20
Index of MSC
25
30
35
Figure 8: Average deviation of thread interarrival
times from various analytical distributions at each
MSC
x 104
)
n
m
i
l
r
e
p
(
e
m
u
o
v
e
g
a
s
s
e
M
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0
12/30/2004
Time
01/01/2005
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
.
b
o
r
p
e
v
i
t
l
a
u
m
u
C
0
0
500
Real data
Exponential
Weibull
Lognormal
Gamma
1000
Time (sec)
1500
2000
Figure 9: Message arrival rate in the period around
December 31st, 2004
Figure 7: Empirical CDF for thread duration as well
as CDFs for ﬁtted analytical distributions
In the following, we present the analysis for the timeout
value of 10 minutes. We identify 2.47 million threads in to-
tal. In Figure 5.1, we plot the distribution for the number
of messages in each thread. On average, each thread con-
sists of 4.9 messages. Of the 2.47 million identiﬁed threads,
87.1% are static, meaning that neither of the two users
participating in the thread changes the associated MSC,
throughout the thread. This also implies that for 87.1%
of all the threads, thread mobility can be handled at the
BTS/BTC (base station/base station controller) level. We
further study the remaining 12.9% of the identiﬁed threads,
which are roaming threads. In roaming threads, at least one
user switches to another MSC during the thread duration.
Figure 5.2 plots the distribution for the number of handoﬀs
that occurred during the lifetime of roaming threads. The
ﬁgure shows that more than half of the roaming threads,
i.e., 61.1%, experience only one handoﬀ at the MSC level.
Next, we model the thread duration against simple analyt-
ical distributions. Figure 7 gives the empirical CDF as well
as the CDFs ﬁtted by analytical distributions. The Weibull
model turns out to give the minimum deviation, followed by
the Lognormal model. On average the thread duration is 8
minutes.
Last, we model the thread arrival process at individual
MSCs by comparing the thread interarrival times against
analytical distributions. To make the test statistically mean-
ingful, we only consider the 35 MSCs which have generated
more than 50 threads. In Figure 8, we give the average de-
viation of the analytical distributions when they are applied
to each of the 35 MSCs. The ﬁgure shows that the thread
interarrival times are well modeled by either the Weibull
or the Gamma distribution. Speciﬁcally, for either of these
distributions, the interarrival times at 34 MSCs can be well
modeled with the average deviation less than 0.5. We fur-
ther verify that this result holds when we set the timeout to
be 1 minute.
4. CONCLUSION AND FUTURE WORK
In this paper we study the SMS traﬃc in a nation-wide
cellular network. We touch on aspects of the service such
as characteristics of short messages, message size distribu-
tions and their arrival process. We examine the “store-and-
forward” mechanism of SMS, a central factor to its success
as a convenient communication method. By grouping mes-
sages exchanged between users into conversation threads, we
seek to characterize the traﬃc at the thread/session level.
To the best of our knowledge, similar studies have not been
presented in the research community before, mostly because
of the proprietary nature of cellular networks.
As part of ongoing work, we plan to systematically assess
the reliability of SMS system. This becomes particularly
important as the short message service is also being con-
sidered for mission-critical applications such as emergency
alerts [16] and notiﬁcations for natural disasters [18]. For
example, as it is shown in Figure 9 that plots the message
arrival rate around the New Year’s Eve of 2005 based on an-
other set of traces obtained from the cellular network around
that period, the SMS system is clearly overloaded3 with the
message rate increasing to more than eight times its nor-
mal value. Such an overload incident poses a signiﬁcant risk
for the reliability of the SMS service during special events
such as holidays, especially if the system is not provisioned
appropriately.
5. REFERENCES
[1] Short Message Service/SMS tutorial. Technical report.
http://www.developershome.com/sms/.
[2] TIA/EIA-41-D, Cellular Radiotelecommunications
Intersystem Operations. Telecommunications Industry
Association, July 1997.
[3] TIA/EIA-637-A, Short Message Service.
Telecommunications Industry Association, December
1999.
[4] 3GPP. Ts 32.205, charging data description for the
circuit switched (cs) domain; release 5. v.5.6.0, March
2003.
[5] 3GPP. TS 23.040, Technical Realization of the Short
Message Service (SMS); Release 6. v6.5.0, September
2004.
[6] 3GPP. TS 22.140, multimedia messaging service
(mms); stage 1; release 6. v6.7.0, March 2005.
[7] 3GPP2. S.r0061, wireless immediate messaging. v1.0,
October 2002.
[8] B. Campbell and R. Mahy and C. Jennings. The
Message Session Relay Protocol. Internet Draft,
draft-ietf-simple-message-sessions-15.txt (Work in
Progress), June 2006.
[9] M. Day, J. Rosenberg, and H. Sugano. A model for
presence and instant messaging. IETF Request For
Comments (RFC 2778), February 2000.
[10] C. Dewes, A. Wichmann, and A. Feldmann. An
analysis of internet chat systems. In Proceedings of the
Internet Measurement Conference. ACM Press,
October 2003.
[11] M. Ghaderi and S. Keshav. Multimedia messaging
service: System description and performance analysis.
In Proceedings of First International Conference on
wireless Internet. IEEE, July 2005.
[12] Y.-R. Huang. Determining the optimal buﬀer size for
Short Message Transfer in a heterogeneous gprs/umts
network. IEEE Trans. Vehicular Technology, 52(1),
January 2003.
[13] B. Lagretteria. R u there?, February, 14th 2005. The
Wall Street Journal Europe.
[14] X. Meng, S. H. Wong, Y. Yuan, and S. Lu.
Characterizing ﬂows in large wireless data networks.
In Proceedings of the Tenth Annual International
conference on Mobile Computing and Networking.
ACM Press, September 2004.
[15] Z. Naor. An eﬃcient Short Messages Transmission in
cellular networks. In Proc. INFOCOM, Hong Kong,
March 2004.
[16] O. of the Manager. SMS over SS7. Technical Report
NCS TID 03-2, National communications system,
December 2003.
[17] G. Peersman, S. Cvetkovic, P. Griﬃths, and H. Spear.
The global system for mobile communications Short
Message Service. IEEE Personal Communications,
June 2000.
[18] H. Rheingold. SMS disaster warning system?,
December 2004.
http://www.smartmobs.com/archive/2004/12/31/
sms disaster wa.html.
[19] N. S.A. The netsize guide 2005 edition - the mobile is
open for business, February 2005.
3The condition has been checked with the cellular operator.