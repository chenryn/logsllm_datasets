this representation will be more robust.
k ,θ X
Next, a two-class SVM classiﬁer was evaluated on ﬁve
representations: baseline ﬂow-based, per-feature his-
tograms of values φ (zX
k ) (bag mean), per-feature his-
tograms of feature differences φ (zS
k) (bag variance),
the combination of both (bag combined), and the combi-
nation of both with bin optimization (optimized bag com-
bined). The training and testing datasets were composed
of bags described in Table 2.
k ,θ S
The results on testing data are depicted in Figure 10.
Note that positive bags in the testing set are from dif-
ferent malware categories than bags from the training
set, which makes the classiﬁcation problem much harder.
The purpose of this evaluation is to compare ﬂow-based
representation, which is used in most of previously pub-
lished work, with the proposed invariant representation.
Flow-based representation shows very unsatisfactory re-
sults, mainly due to the fact that the classiﬁer was based
only on the values of ﬂow-based features that are not
i
i
n
o
s
c
e
r
P
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
Precision-Recall Curve for Testing Data
bag combined (256 bins)
bag combined (128 bins)
bag combined (64 bins)
bag combined (16 bins)
bag combined (8 bins)
optimized bag combined
0.1
0.2
0.3
0
0.4
0.5
Recall
0.6
0.7
0.8
0.9
1
Figure 11: Precision-recall curve of SVM classiﬁer
trained on the proposed representation with different
number of histogram bins for each feature. All classiﬁers
are outperformed by the classiﬁer, where the parameters
of the invariant representation are learned automatically
from the data (optimized bag combined). The classiﬁer
achieved 90% precision (9 of 10 alerts were malicious)
and 67% recall on previously unseen malware families.
robust across different malware categories (as shown in
Section 7). The classiﬁer based on combined bag rep-
resentation performed signiﬁcantly better. These results
were further exceeded when the parameters of the invari-
ant representation were learned automatically from the
training data (optimized bag combined), which is shown
in Figure 10 with logarithmic scale.
Precision-recall curve is depicted in Figure 11 to com-
pare the efﬁcacy results of classiﬁers based on the pro-
posed representation with predeﬁned number of bins per
feature (8, 16, 64, 128, and 256 bins) with the same rep-
resentation, but when the parameters are learned from the
training data (using bin optimization from Section 5).
USENIX Association  
25th USENIX Security Symposium  819
13
Overall, the results show the importance of combin-
ing both types of histograms introduced in Section 4 to-
gether, allowing the representation to be more descrip-
tive and precise without sacriﬁcing recall. But most im-
portantly, when the parameters of the representation are
trained to maximize the separability between malicious
and legitimate samples, the resulting classiﬁer performs
in order of a magnitude better than a classiﬁer with man-
ually predeﬁned parameters.
9 Conclusion
This paper proposes a robust representation suitable for
classifying evolving malware behaviors. It groups sets
of network ﬂows into bags and represents them using a
the combination of invariant histograms of feature val-
ues and feature differences. The representation is de-
signed to be invariant under shifting and scaling of the
feature values and under permutation and size changes
of the bags. The proposed optimization method learns
the parameters of the representation automatically from
the training data, allowing the classiﬁers to create robust
models of malicious behaviors capable of detecting pre-
viously unseen malware variants and behavior changes.
The proposed representation was deployed on corpo-
rate networks and evaluated on real HTTP network traf-
ﬁc with more than 43k malicious samples and more than
15M samples overall. The comparison with a baseline
ﬂow-based approach and a widely-used signature-based
web security device showed several key advantages of
the proposed representation. First, the invariant proper-
ties of the representation result in the detection of new
types of malware. More speciﬁcally, the proposed clas-
siﬁer trained on the optimized representation achieved
90% precision (9 of 10 alerts were malicious) and de-
tected 67% of malware samples of previously unseen
types and variants. Second, multiple malware behav-
iors can be represented in the same feature space while
current ﬂow-based approaches necessitate training a sep-
arate detector for each malware family. This way, the
proposed system considerably increases the capability of
detecting new variants of threats.
References
[1] Cisco netﬂow. http://www.cisco.com/warp/public/732/tech/netﬂow.
[2] ANTONAKAKIS, M., PERDISCI, R., NADJI, Y., VASILOGLOU,
N., ABU-NIMEH, S., LEE, W., AND DAGON, D. From throw-
away trafﬁc to bots: Detecting the rise of dga-based malware. In
Proceedings of the 21st USENIX Conference on Security Sympo-
sium (Berkeley, CA, USA, 2012), Security’12, USENIX Associ-
ation, pp. 24–24.
[3] BAILEY, M., OBERHEIDE, J., ANDERSEN, J., MAO, Z., JAHA-
NIAN, F., AND NAZARIO, J. Automated classiﬁcation and anal-
ysis of internet malware. In Recent Advances in Intrusion Detec-
tion, C. Kruegel, R. Lippmann, and A. Clark, Eds., vol. 4637 of
Lecture Notes in Computer Science. Springer Berlin Heidelberg,
2007, pp. 178–197.
[4] BEN-DAVID, S., BLITZER, J., CRAMMER, K., PEREIRA, F.,
ET AL. Analysis of representations for domain adaptation. Ad-
vances in neural information processing systems 19 (2007), 137.
[5] BERNAILLE, L., TEIXEIRA, R., AKODKENOU, I., SOULE, A.,
AND SALAMATIAN, K. Trafﬁc classiﬁcation on the ﬂy. ACM
SIGCOMM ’06 36, 2 (Apr. 2006), 23–26.
[6] BILGE, L., BALZAROTTI, D., ROBERTSON, W., KIRDA, E.,
AND KRUEGEL, C. Disclosure: Detecting botnet command and
control servers through large-scale netﬂow analysis. In Proceed-
ings of the 28th Annual Computer Security Applications Confer-
ence (New York, NY, USA, 2012), ACSAC ’12, ACM, pp. 129–
138.
[7] BLITZER, J., MCDONALD, R., AND PEREIRA, F. Domain adap-
tation with structural correspondence learning. In Proceedings of
the 2006 conference on empirical methods in natural language
processing (2006), Association for Computational Linguistics,
pp. 120–128.
[8] CHANDOLA, V., BANERJEE, A., AND KUMAR, V. Anomaly
detection: A survey. ACM Comput. Surv. 41 (July 2009), 15:1–
15:58.
[9] CHOI, H., ZHU, B. B., AND LEE, H. Detecting malicious web
links and identifying their attack types. In Proceedings of the 2Nd
USENIX Conference on Web Application Development (Berkeley,
CA, USA, 2011), WebApps’11, USENIX Association, pp. 11–
11.
[10] DAI, W., YANG, Q., XUE, G.-R., AND YU, Y. Boosting for
transfer learning. In Proceedings of the 24th international con-
ference on Machine learning (2007), ACM, pp. 193–200.
[11] DUAN, L., TSANG, I. W., AND XU, D. Domain transfer mul-
tiple kernel learning. Pattern Analysis and Machine Intelligence,
IEEE Transactions on 34, 3 (2012), 465–479.
[12] ERMAN, J., ARLITT, M., AND MAHANTI, A. Trafﬁc classiﬁ-
cation using clustering algorithms. In Proceedings of the 2006
SIGCOMM Workshop on Mining Network Data (New York, NY,
USA, 2006), MineNet ’06, ACM, pp. 281–286.
[13] FALLIERE, N. Sality: Story of a peer-to-peer viral network. Rap-
port technique, Symantec Corporation (2011).
[14] GRETTON, A., SMOLA, A., HUANG, J., SCHMITTFULL, M.,
BORGWARDT, K., AND SCH ¨OLKOPF, B. Covariate shift by ker-
nel mean matching. Dataset shift in machine learning 3, 4 (2009),
5.
[15] GRIFFIN, K., SCHNEIDER, S., HU, X., AND CHIUEH, T.-C.
Automatic generation of string signatures for malware detec-
tion. In Proceedings of the 12th International Symposium on Re-
cent Advances in Intrusion Detection (Berlin, Heidelberg, 2009),
RAID ’09, Springer-Verlag, pp. 101–120.
[16] GU, G., PERDISCI, R., ZHANG, J., LEE, W., ET AL. Botminer:
Clustering analysis of network trafﬁc for protocol-and structure-
independent botnet detection.
In USENIX Security Symposium
(2008), vol. 5, pp. 139–154.
[17] HUANG, H., QIAN, L., AND WANG, Y. A svm-based technique
Information Technology Journal 11, 7
to detect phishing urls.
(2012), 921–925.
[18] INVERNIZZI, L., MISKOVIC, S., TORRES, R., SAHA, S., LEE,
S., MELLIA, M., KRUEGEL, C., AND VIGNA, G. Nazca: De-
tecting malware distribution in large-scale networks. In Proceed-
ings of the Network and Distributed System Security Symposium
(NDSS) (2014).
820  25th USENIX Security Symposium 
USENIX Association
14
[34] RIECK, K., HOLZ, T., WILLEMS, C., DSSEL, P., AND LASKOV,
P. Learning and classiﬁcation of malware behavior.
In Detec-
tion of Intrusions and Malware, and Vulnerability Assessment,
D. Zamboni, Ed., vol. 5137 of Lecture Notes in Computer Sci-
ence. Springer Berlin Heidelberg, 2008, pp. 108–125.
[35] RNDIC, N., AND LASKOV, P. Practical evasion of a learning-
based classiﬁer: A case study. In Security and Privacy (SP), 2014
IEEE Symposium on (May 2014), pp. 197–211.
[36] SCARFONE, K., AND MELL, P. Guide to intrusion detection
and prevention systems ( idps ) recommendations of the national
institute of standards and technology. Nist Special Publication
800, 94 (2007).
[37] SHIMODAIRA, H. Improving predictive inference under covari-
ate shift by weighting the log-likelihood function. Journal of sta-
tistical planning and inference 90, 2 (2000), 227–244.
[38] SONG, D., BRUMLEY, D., YIN, H., CABALLERO, J., JAGER,
I., KANG, M., LIANG, Z., NEWSOME, J., POOSANKAM, P.,
AND SAXENA, P. Bitblaze: A new approach to computer secu-
rity via binary analysis. In Information Systems Security, R. Sekar
and A. Pujari, Eds., vol. 5352 of Lecture Notes in Computer Sci-
ence. Springer Berlin Heidelberg, 2008, pp. 1–25.
[39] SONG, H., AND TURNER, J. Toward advocacy-free evaluation of
packet classiﬁcation algorithms. Computers, IEEE Transactions
on 60, 5 (May 2011), 723–733.
[40] SOSKA, K., AND CHRISTIN, N. Automatically detecting vul-
nerable websites before they turn malicious. In 23rd USENIX Se-
curity Symposium (USENIX Security 14) (San Diego, CA, Aug.
2014), USENIX Association, pp. 625–640.
[41] WANG, K., AND STOLFO, S. Anomalous payload-based net-
work intrusion detection. In Recent Advances in Intrusion Detec-
tion, E. Jonsson, A. Valdes, and M. Almgren, Eds., vol. 3224 of
Lecture Notes in Computer Science. Springer Berlin Heidelberg,
2004, pp. 203–222.
[42] YIN, H., SONG, D., EGELE, M., KRUEGEL, C., AND KIRDA,
E. Panorama: Capturing system-wide information ﬂow for mal-
ware detection and analysis.
In Proceedings of the 14th ACM
Conference on Computer and Communications Security (New
York, NY, USA, 2007), CCS ’07, ACM, pp. 116–127.
[43] ZHANG, K., SCH ¨OLKOPF, B., MUANDET, K., AND WANG, Z.
Domain adaptation under target and conditional shift. In Proceed-
ings of the 30th International Conference on Machine Learning
(ICML-13) (2013), S. Dasgupta and D. Mcallester, Eds., vol. 28,
JMLR Workshop and Conference Proceedings, pp. 819–827.
[44] ZHAO, P., AND HOI, S. C. Cost-sensitive online active learning
with application to malicious url detection.
In Proceedings of
the 19th ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining (New York, NY, USA, 2013), KDD
’13, ACM, pp. 919–927.
A Examples of Bags
[19] IYER, A., NATH, S., AND SARAWAGI, S. Maximum mean dis-
crepancy for class ratio estimation: Convergence bounds and ker-
nel selection. In Proceedings of the 31st International Conference
on Machine Learning (ICML-14) (2014), pp. 530–538.
[20] JAGPAL, N., DINGLE, E., GRAVEL, J.-P., MAVROMMATIS, P.,
PROVOS, N., RAJAB, M. A., AND THOMAS, K. Trends and
lessons from three years ﬁghting malicious extensions. In 24th
USENIX Security Symposium (USENIX Security 15) (Washing-
ton, D.C., Aug. 2015), USENIX Association, pp. 579–593.
[21] JUNEJO, I. N., DEXTER, E., LAPTEV, I., AND PEREZ, P. View-
independent action recognition from temporal self-similarities.
Pattern Analysis and Machine Intelligence, IEEE Transactions
on 33, 1 (2011), 172–185.
[22] KAPRAVELOS, A., SHOSHITAISHVILI, Y., COVA, M.,
KRUEGEL, C., AND VIGNA, G. Revolver: An automated
approach to the detection of evasive web-based malware.
In
USENIX Security (2013), Citeseer, pp. 637–652.
[23] KARAGIANNIS, T., PAPAGIANNAKI, K., AND FALOUTSOS, M.
Blinc: Multilevel trafﬁc classiﬁcation in the dark. In Proceedings
of the 2005 Conference on Applications, Technologies, Architec-
tures, and Protocols for Computer Communications (New York,
NY, USA, 2005), SIGCOMM ’05, ACM, pp. 229–240.
[24] KIM, H., CLAFFY, K., FOMENKOV, M., BARMAN, D.,
FALOUTSOS, M., AND LEE, K. Internet trafﬁc classiﬁcation de-
mystiﬁed: Myths, caveats, and the best practices. In Proceedings
of the 2008 ACM CoNEXT Conference (New York, NY, USA,
2008), CoNEXT ’08, ACM, pp. 11:1–11:12.
[25] KRUEGEL, C., AND VIGNA, G. Anomaly detection of web-
based attacks. In Proceedings of the 10th ACM Conference on
Computer and Communications Security (New York, NY, USA,
2003), CCS ’03, ACM, pp. 251–261.
[26] LOU, W., LIU, G., LU, H., AND YANG, Q. Cut-and-pick trans-
actions for proxy log mining.
In Advances in Database Tech-
nology EDBT 2002, C. Jensen, S. altenis, K. Jeffery, J. Pokorny,
E. Bertino, K. Bhn, and M. Jarke, Eds., vol. 2287 of Lecture Notes
in Computer Science. Springer Berlin Heidelberg, 2002, pp. 88–
105.
[27] MA, J., SAUL, L. K., SAVAGE, S., AND VOELKER, G. M.
Learning to detect malicious urls. ACM Trans. Intell. Syst. Tech-
nol. 2, 3 (May 2011), 30:1–30:24.
[28] MOORE, D., SHANNON, C., BROWN, D. J., VOELKER, G. M.,
Inferring internet denial-of-service activity.
AND SAVAGE, S.
ACM Trans. Comput. Syst. 24, 2 (May 2006), 115–139.
[29] MOSER, A., KRUEGEL, C., AND KIRDA, E. Exploring multiple
execution paths for malware analysis. In Security and Privacy,
2007. SP ’07. IEEE Symposium on (May 2007), pp. 231–245.
[30] MOSER, A., KRUEGEL, C., AND KIRDA, E. Limits of static
analysis for malware detection. In Computer Security Applica-
tions Conference, 2007. ACSAC 2007. Twenty-Third Annual (Dec
2007), pp. 421–430.
[31] M ¨ULLER, M., AND CLAUSEN, M. Transposition-invariant self-
similarity matrices.
In In Proceedings of the 8th International
Conference on Music Information Retrieval (ISMIR) (2007),
pp. 47–50.
[32] NELMS, T., PERDISCI, R., ANTONAKAKIS, M., AND
AHAMAD, M. Webwitness: Investigating, categorizing, and mit-
igating malware download paths. In 24th USENIX Security Sym-
posium (USENIX Security 15) (Washington, D.C., Aug. 2015),
USENIX Association, pp. 1025–1040.
[33] PORTNOY, L., ESKIN, E., AND STOLFO, S. Intrusion detection
with unlabeled data using clustering. In In Proceedings of ACM
CSS Workshop on Data Mining Applied to Security (DMSA-2001
(2001), pp. 5–8.
USENIX Association  
25th USENIX Security Symposium  821
15
Asterope
hxxp://194.165.16.146:8080/pgt/?ver=1.3.3398&id=126&r=12739868&os=6.1—2—8.0.7601.18571&res=4—1921—466&f=1
hxxp://194.165.16.146:8080/pgt/?ver=1.3.3398&id=126&r=15425581&os=6.1—2—8.0.7601.18571&res=4—1921—516&f=1
hxxp://194.165.16.146:8080/pgt/?ver=1.3.3398&id=126&r=27423103&os=6.1—2—8.0.7601.18571&res=4—1921—342&f=1
hxxp://194.165.16.146:8080/pgt/?ver=1.3.3753&id=126&r=8955018&os=6.1—2—8.0.7601.18571&res=4—1921—319&f=1
Click-fraud, malvertising-related botnet
hxxp://directcashfunds.com/opntrk.php?tkey=024f9730e23f8553c3e5342568a70300&Email=PI:EMAIL
hxxp://directcashfunds.com/opntrk.php?tkey=c1b6e3d50632d4f5c0ae13a52d3c4d8d&Email=PI:EMAIL
hxxp://directcashfunds.com/opntrk.php?tkey=7c9a843ce18126900c46dbe4be3b6425&Email=PI:EMAIL
hxxp://directcashfunds.com/opntrk.php?tkey=c1b6e3d50632d4f5c0ae13a52d3c4d8d&Email=PI:EMAIL
DGA
hxxp://uvyqifymelapuvoh.biz/s531ka.ji5
hxxp://uvyqifymelapuvoh.biz/rl59c281.x19
hxxp://uvyqifymelapuvoh.biz/seibpn6.2m0
hxxp://uvyqifymelapuvoh.biz/3854f.u17
Dridex
hxxp://27.54.174.181/8qV578&$o@HU6Q6S/gz$J0l=iTTH 28%2CM/we20%3D
hxxp://27.54.174.181/C4GyRx%7E@RY6x /M&N=sq/bW ra4OTJ
hxxp://27.54.174.181/gPvh+=GO/9RPPfk0%2CzXOYU%20/Vq8Ww/+a m%7Ez
hxxp://27.54.174.181/qE0my4KIz48Cf3H8wG%7Evpz=iJ%26fqMl%24m/46JoELp=GJww%3D%26Ib+Ar.y3 iu%2D1E/sso
InstallCore
hxxp://rp.any-ﬁle-opener.org/?pcrc=1559319553&v=2.0
hxxp://rp.any-ﬁle-opener.org/?pcrc=1132521307&v=2.0
hxxp://rp.any-ﬁle-opener.org/?pcrc=1123945956&v=2.0
hxxp://rp.any-ﬁle-opener.org/?pcrc=1075608192&v=2.0
Poweliks
hxxp://31.184.194.39/query?version=1.7&sid=793&builddate=114&q=nitric+oxide+side+effects&ua=Mozilla%2F5 . . . &lr=7&ls=0
hxxp://31.184.194.39/query?version=1.7&sid=793&builddate=114&q=weight+loss+success+stories&ua=Mozilla%2F5 . . . &lr=0&ls=0
hxxp://31.184.194.39/query?version=1.7&sid=793&builddate=114&q=shoulder+pain&ua=Mozilla%2F5 . . . &lr=7&ls=2
hxxp://31.184.194.39/query?version=1.7&sid=793&builddate=114&q=cheap+car+insurance&ua=Mozilla%2F5 . . . &lr=7&ls=2
Zeus
hxxp://130.185.106.28/m/IbQFdXVjiriLva4KHeNpWCmThrJBn3f34HNwsLVVsUmLXtsumSSPe/zzXtIu9SzwjI9zKlxdE . . . 3RqvGzKN5
hxxp://130.185.106.28/m/IbQJFUVjgZn4vx4KHeNpWCmThrJBn3f34HNwsLVVsUmLfkoPaSS+S+zzXtIu9SzwjI9zKlxdE . . . 3vKwmk0oUi
hxxp://130.185.106.28/m/IbQJFUVjiJwJBX4KHeNpWCmThrJBn3f34HNwsLVVsUmKH7ue2STvSkzzXtIu9SzwjI9zKlxdE . . . 3vKwmk0oUi
hxxp://130.185.106.28/m/IbQNtVVji5/7Yp4KHeNpWCmThrJBn3f34HNwsLVVsUmLz4sO6YRvOjzzXtIu9SzwjI9zKlxdE . . . 3zB9057quqv
Legitimate trafﬁc 1
hxxp://www.cnn.com/.element/ssi/auto/4.0/sect/MAIN/markets wsod expansion.html
hxxp://www.cnn.com/.a/1.73.0/assets/sprite-s1dced3ff2b.png
hxxp://www.cnn.com/.element/widget/video/videoapi/api/latest/js/CNNVideoBootstrapper.js
hxxp://www.cnn.com/jsonp/video/nowPlayingSchedule.json?callback=nowPlayingScheduleCallbackWrapper& =1422885578476
Legitimate trafﬁc 2
hxxp://ads.adaptv.advertising.com/a/h/7g doK40WLPMYHbkD9G2u7HSXjqzIaa7Bqhslod+u7iQl . . . &context=fullUrl%3Dpandora.com
hxxp://ads.adaptv.advertising.com/crossdomain.xml
hxxp://ads.advertising.com/411f1e96-3bde-4d85-b17e-63749e5f0695.js
hxxp://ads.adaptv.advertising.com/applist?placementId=297920&key=&d.vw=1&orgId=8656&hostname=data.rtbfy.com
Monetization
hxxp://utouring.net/search/q/conducing
hxxp://utouring.net/go/u/1/r/1647
hxxp://utouring.net/go/u/0/r/2675
hxxp://utouring.net/search/f/1/q/reﬁles
Table 4: Example URLs of ﬂows from several malicious bags and from two legitimate bags. The URLs within each
malicious bag are similar to each other while the URLs within legitimate bags differ. The small non-zero variability
of ﬂow-based feature values is captured by the proposed representation using histograms of features and feature self-
similarity matrices. Such transformation of the feature values makes the representation robust to malware changes and
unseen variants.
822  25th USENIX Security Symposium 
USENIX Association
16