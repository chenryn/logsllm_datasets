### Enabling AD Authentication with Kerberos on Debian

**Question:**
How can I enable Active Directory (AD) authentication with Kerberos on a Debian Linux server? I want local users to be able to log in to the Linux server using their Windows domain (AD) passwords. All local accounts have a matching user ID in AD.

**Current Setup:**
- **Linux Distribution:** Debian 5.0.3
- **Installed Package:** `libpam-krb5`
- **Kerberos Configuration (`/etc/krb5.conf`):**

  ```ini
  [libdefaults]
      default_realm = FOO.COMPANY.COM
      kdc = controller.foo.company.com
  ```

- **Note:** These settings work correctly on another Linux box (Ubuntu), and the AD server configuration seems to be correct.

**Issue:**
I am unsure of what additional configurations are needed on the Debian server to allow AD password-based logins.

**Solution:**
With the help of a colleague, I was able to get AD authentication working by modifying the PAM (Pluggable Authentication Modules) configuration file `/etc/pam.d/common-auth`.

**Original Configuration:**

```plaintext
auth    required    pam_unix.so nullok_secure
```

**Modified Configuration:**

```plaintext
auth    [success=2 default=ignore]      pam_krb5.so minimum_uid=1000
auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass
auth    requisite                       pam_deny.so
auth    required                        pam_permit.so
```

**Explanation:**
- **`pam_krb5.so`:** This module is used for Kerberos authentication. The `minimum_uid=1000` option ensures that only non-system users (UIDs starting from 1000) are authenticated via Kerberos.
- **`pam_unix.so`:** This module is used for traditional Unix authentication. The `try_first_pass` option ensures that the password entered for Kerberos authentication is also used for Unix authentication, avoiding the need for the user to enter the password twice.
- **`pam_deny.so` and `pam_permit.so`:** These modules are used to control the flow of authentication. `pam_deny.so` denies access if the previous modules fail, and `pam_permit.so` allows access if all previous modules succeed.

**Result:**
After making these changes, AD passwords now work correctly when users log in to the Debian server.