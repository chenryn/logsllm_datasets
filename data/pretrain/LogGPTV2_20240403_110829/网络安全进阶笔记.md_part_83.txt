第8章掌握实用的Linux安全工具
5.SMARTARP模式
（1）适用范围：这种模式通过ARP欺编监听一台主机到所有特定主机之间的通信。由于
采用了ARP默骗技术，可以应用于交换网络环境监听。
(2）参数：通过-a选项、一个IP地址和一个主机表来指定这种模式。
(3）特点：在此模式下，不仅修改了指定主机的ARP表中关于被监听主机的MAC地址，
还修改了指定主机的MAC地址，这样就可以实现具有全双工功能的中介攻击了。在这种模式
下，Euercap不是通过广播方式发送ARP响应包，而是有选择地发送给主机表中的主机，这样
就避免了把用于修改被监听者的MAC地址的ARP欺骗包发送给被监听者并引起IP地址冲突。
8.3.3案例分析：使用Ettercap的方法
为了加深对这几种方式的了解，我们进行一些实战分析，以便于更好地了解Entercap的相
关功能。
1.使用Ettercap进行ARP欺骗攻击的实例
在这个案例中，实验室里有以下机器：其中，192.168.1.138是默认网关，交换机型号是
CiscoCatalyst2900XL，这是一个典型的交换网络环境。如图8.21所示。
(23a 424
图8.21一个典型的交换网络环境
（1）现在我们确定的假设攻击目标是192.168.1.1，机器的操作系统是Windows2000+SP3。
现在，在192.168.1.1上执行IPConfig和ARP命令。在这里，可以看到默认的网关和MAC地
址。如下所示（注意下面的MAC地址是否会发生改变）：
H:\>ipconfig
Ethernet adapter Local Area Connection:
Windows IP Configuration
  -
IPAddre88..........:192.168.1.1
Subnet Mask
255.255.255.0
DefaultGateway..:192.168.1.138
409
---
## Page 415
网络安全进阶笔记
-d1198198:De1231D4:
图8.22ARP累编攻击测试
（5）按下A键后，ARP欺骗攻击就开始了。现在，有趣的事情发生了，同样在192.168.1.1
这台机器上执行“ARP-a”命令，就会发现192.168.1.10（攻击机器）和192.168.1.138（默认网关）
的MAC地址是相同的：
Hi\>ipconfig
Windows IP Configuration
Ethernetadapter Local Area Connection:
Connection-specific DNs Suffix
IPAddres.......:192.168.1.1
SubnetMask.:255.255.255.0
Default Gateway....
.:192.168.1.138
H:\>arp-a
Interface:192.168.1.1 on Interface 0x1000003
Internet Address
Physical Address
00-02-b3-20-23-c2
Type
192.168.1.10
dynamic
410
---
## Page 416
第8章掌握实用的Linux安全工具
192.168.1.14
00-06-29-25-60-47
dynamic
192.168.1.138
00-02-b3-20-23-c2
dynamic
（6）欺编成功，现在就要考虑开始“借箭”了。现在，假设到192.168.1.1这台机器上进行
一个FTP会话，如执行ftpftp.inter.net.il，看看会出现什么现象。这时，在Ettercap软件显示屏
幕上，可以看到FTP会话都被记录下来了，用户名和密码清清楚楚地显示在屏募上。选择特定
的会话记录，还可以看到网络中传递的真实数据，如图8.23所示。
192.169.1.1
168.1.138
= 1A8 <192.168.1.18 1 255.255.255.8)
68,1-1111
pcify the
图8.23使用EtercBp查看网络中的数据
类似地，我们还可以截取电子货币卡、银行卡信息等，甚至还可以修改网络数据包。
2.查看和修改网络数据包
通过ARP骗方式，被欺骗主机的数据流会主动送到监听主机，这样我们就成了数据流
的主人。但是，我们在转发之前能否修改这些数据呢？其实，只要重新计算一下校验和，并替
换原来的校验和就可以了。如果更进一步，我们还可以在连接中插入数据包，丢弃数据包。通
过比较，可以查看其中的数据变化。如果要查看数据情况，可以通过View（查看）菜单下的
Statistics（统计）命令就可以查看当前的数据情况。如图8.24所示。
1400%
I iek:
民
1 0/65
kont
394
图8.24使用Ettercap查看当前的数据情况
---
## Page 417
网络安全进阶笔记
另外，使用ARP欺骗方式也有一些问题需要注意，充分理解这些问题可以帮助我们注意
可能产生的后果。简单列举如下。
（1）由于修改了网上一些主机的ARP表，所以监听者要担负起数据包转发的任务。因此，
一且监听者离开，没有了转发者，被监听主机与其他主机的通信会受到影响。这要等到涉及通
信的双方自主进行ARP地址表更新之后才能解决这个问题。
(2）在进行ARP欺编的时候，如果在一个比较短的时间内产生了大量的ARP请求或响应
数据包，会造成一些基于网络的IDS报警，有经验的网管会注意到这个问题。
(3）在进行ARP欺编的时候，某些个人防火墙（如ISS的黑冰）会产生报警，即使仅仅收到
一个ARP款骗数据包也会产生报警信息。
（4）监听者离开时，被监听主机以及与被监听主机通信的主机会感到网络出现异常。
通过上述实践并掌握其中可能出现的现象，我们就可以掌握重要的网络数据。当然，对于
网络管理员来说，在网络性能急剧下降的时候，也可以通过这些工具来分析原因，找出造成网
络阻塞的来源了。
8.4轻松阻止Linux下的非法进程
随着开放、共享理念的迅速传播，Linux操作系统开始深入到教育、政府、商业、军事等
诸多行业。但是，大部分Linux操作系统都运行在一个不太安全的网络环境中，这就带来了潜
在的威胁一非法用户入侵。在Linux攻击中，许多恶意程序以目标系统的合法进程尤其是重
要系统进程为目标，使得系统无法完成正常的工作甚至无法工作（比如拒绝服务攻击）.这将导
致系统中的进程被恶意修改或删除，更可怕的是许多不合法的进程被植入系统中。
非法进程的攻击性相当大，比如，黑客渗入到操作系统并替换系统登录文件，导致操作系
统上的资源被黑客自由利用：不合法的进程被植入操作系统后消耗了大量的CPU资源，造成
其他用户进程得不到系统资源。如果我们不能发现其中的变化，那无异于身处“虎口”而浑然
不觉，这里通过介绍Limux系统下一些重要的进程状态查看以及进程管理技术，尤其是对Linux
上的安全进程进行分析，帮助网络管理员在复杂和不安全的网络环境下及时发现系统的异常状
况，并采取相应的应对措施。
8.4.1Linux下的快速进程管理
那么，进程到底是什么东西呢？
1.前世今生：了解进程的来龙去脉
当运行任何一个Limux命令时，Shell至少会建立一个进程来运行这个命令，这个进程也叫
作父进程，在Linux中，程序是存储在磁盘上的包含可执行机器指令和数据的静态实体，好比
是某个指挥部的作战指令：相比之下，进程则是在操作系统中执行的特定任务的动态实体，好
比是前进中的某支军队。Linux系统中每个运行中的程序至少由一个进程组成。如同每支担负
着特定任务的军队一样，每个进程与其他进程都是彼此独立的，都有自己独立的权限与职责，
一个用户的应用程序不会干扰到其他用户的程序或者操作系统本身，如同一个人的出生、成长、
412
---
## Page 418
第8章掌提实用的Linux安全工具
死亡乃至消失于这个世界，进程也有一个类似于人类的过程。
下面，我们来看看一个进程的“人生轨迹”。
（1）首先，是进程的诞生。就像一个克隆人的诞生一样，一个现有进程可以使用forkO函
数创建一个子进程。在这个孩子出生后，他将获得父亲的数据空间、堆、栈等资源。
（2）然后，是进程的成长。人生路上，总会有许多知己，包括提拔自己的“贵人”。新进
程的“贵人”就是exec0函数。在它的培养下，子进程逐步成长，并开始它的探险之旅。
小知识：PROC文件系统，进程的基本信息都存放在“proc”文件目录下.在Linux中，PROC
文件系统是一个虚拟的文件系统，它以文件系统的形式，为操作系统本身和应用进程
之间的通信提供了一个界面，使应用程手能够安全、方使地获得系统当前的运行状况
和内核的内部数据信息，并可以修改某些系统的配置信息，在/proc文件系统中，每一
个进程都有一个相应的文件，如“/proc/pid/cmdline”就包含了用于开始进程的命令.
(3）再就是进程的死亡。生老病死，人都得经历这么一个过程，进程也不例外。进程可以
是自然死亡，即运行到mainO函数的最后一个括号，悄悄地离开这个世界：也可以是自杀或他
杀，自杀是调用exitO函数，他杀则是被其他进程通过另外一些方式结束它的生命。相信对C
语言熟悉的用户对此不会陌生。
（4）最后是进程的结局。这个过程是每个人都有的。进程死后，会留下一具僵尸，waiO
函数就是“验尸官”，把僵尸火化，使其消失于无形。
这就是一个进程的一生。不过，我们最关心的，就是这个进程到底是合法的还是非法的。
如果是合法的，我们就要鼓励它、栽培它：如果是非法的，那可就要了解其来龙去脉了。
2.明察秋毫：快速了解进程状态
要了解进程状态，自然要用到ps命令了。ps是查看进程状态最常用的命令，可以提供关
于进程的许多信息。根据显示的信息，用户可以了解许多和进程相关的信息。比如，可以确定
哪个进程正在运行，哪个进程被挂起，已经运行了多久，正在使用的资源，进程的相对优先级
以及进程的标识号（PID）等。直接用ps命令可以列出每个与当前Shell有关的进程基本信息，如
图8.25所示
图8.25与当前Shell有关的进程信息
413