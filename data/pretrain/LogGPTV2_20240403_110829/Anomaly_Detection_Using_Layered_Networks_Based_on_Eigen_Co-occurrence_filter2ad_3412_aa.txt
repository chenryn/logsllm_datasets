title:Anomaly Detection Using Layered Networks Based on Eigen Co-occurrence
Matrix
author:Mizuki Oka and
Yoshihiro Oyama and
Hirotake Abe and
Kazuhiko Kato
Anomaly Detection Using Layered Networks Based
on Eigen Co-occurrence Matrix
Mizuki Oka1, Yoshihiro Oyama2,5, Hirotake Abe3, and Kazuhiko Kato4,5
1 Master’s Program in Science and Engineering, University of Tsukuba
2 Graduate School of Information Science and Technology, University of Tokyo
PI:EMAIL
PI:EMAIL
3 Doctoral Program in Engineering, University of Tsukuba
PI:EMAIL
4 Graduate School of Systems and Information Engineering, University of Tsukuba
PI:EMAIL
5 Japan Science and Technology Agency (JST) CREST
Abstract. Anomaly detection is a promising approach to detecting intruders
masquerading as valid users (called masqueraders). It creates a user proﬁle and
labels any behavior that deviates from the proﬁle as anomalous. In anomaly de-
tection, a challenging task is modeling a user’s dynamic behavior based on se-
quential data collected from computer systems. In this paper, we propose a novel
method, called Eigen co-occurrence matrix (ECM), that models sequences such
as UNIX commands and extracts their principal features. We applied the ECM
method to a masquerade detection experiment with data from Schonlau et al. We
report the results and compare them with results obtained from several conven-
tional methods.
Keywords: Anomaly detection, User behavior, Co-occurrence matrix, PCA, Lay-
ered networks
1
Introduction
Detecting the presence of an intruder masquerading as a valid user is becoming a critical
issue as security incidents become more common and more serious. Anomaly detection
is a promising approach to detecting such intruders (masqueraders). It ﬁrst creates a
proﬁle deﬁning a normal user’s behavior. It then measures the similarity of a current
behavior with the created proﬁle and notes any behavior that deviates from the proﬁle.
Various approaches for anomaly detection diﬀer in how they create proﬁles and how
they deﬁne similarity.
In most masquerade detection methods, a proﬁle is created by modeling sequen-
tial data, such as the time of login, physical location of login, duration of user session,
programs executed, names of ﬁles accessed, and user commands issued [1]. One of the
challenging tasks in detecting masqueraders is to accurately model user behavior based
on such sequential data. This is challenging because the nature of a user’s behavior is
dynamic and diﬃcult to capture completely. In this paper, we propose a new method,
called Eigen co-occurrence matrix (ECM), designed to model such dynamic user be-
havior.
E. Jonsson et al. (Eds.): RAID 2004, LNCS 3224, pp. 223–237, 2004.
c(cid:1) Springer-Verlag Berlin Heidelberg 2004
224
Mizuki Oka et al.
One of the approaches to modeling user behavior is to convert a sequence of data
into a feature vector by accumulating measures of either unary events (histogram) or
n-connected events (n-grams) [2–4]. However, the former approach only considers the
number of occurrences of observed events within a sequence, and thus sequential in-
formation will not be included in the resulting model. The latter approach considers
n-connected neighboring events within a sequence. Neither of them considers any cor-
relation between events that are not adjacent to each other.
Other approaches to modeling user behavior are based on converting a sequence
into a network model. Such approaches include those based on an automaton [5–8], a
Bayesian network [9], and an Hidden Markov Model (HMM) [10,11].
The nodes and arcs in an automaton can remember short- and long-range transition
relations between events by constructing rules within a sequence of events. To construct
an automaton, we thus require well-deﬁned rules that can be transformed to a network.
However, it is diﬃcult to construct an automaton based on a set of user-generated se-
quences with various contexts, which does not have such well-deﬁned rules. When an
automaton can indeed be obtained, it is computationally expensive to learn on the au-
tomaton when a new sequence is added.
A node in a Bayesian network associates probabilities of the node being in a spe-
ciﬁc state given the states of its parents. The parent-child relationship between nodes
in a Bayesian network indicates the direction of causality between the corresponding
variables. That is, the variable represented by the child node is causally dependent on
those represented by its parents. The topology of a Bayesian network must be prede-
ﬁned, however, and thus, the capability for modeling a sequence is dependent on the
predeﬁned topology.
An HMM can model a sequence by deﬁning a network model that usually has a
feed-forward characteristic. The network model is created by learning both the prob-
ability of each event emerging from each node and the probability of each transition
between nodes by using a set of observed sequences. However, it is tough to build an
adequate topology for an HMM by using ad hoc sequences generated by a user. As a
result, the performance of a system based on an HMM varies depending on the topology
and the parameter settings.
We argue that the dynamic behavior of a user appearing in a sequence can be cap-
tured by correlating not only connected events but also events that are not adjacent
to each other while appearing within a certain distance (non-connected events). Based
on this assumption, to model user behavior, the ECM method creates a so-called co-
occurrence matrix by correlating an event in a sequence with any following events that
appear within a certain distance. The ECM method then creates so-called Eigen co-
occurrence matrices. The ECM method is inspired by the Eigenface technique, which
is used to recognize humans facial images. In the Eigenface technique, the main idea
is to decompose a facial image into a small set of characteristic feature images called
eigenfaces, which may be thought of as the principal components of the original im-
ages. These eigenfaces are the orthogonal vectors of a linear space. A new facial image
is then reconstructed by projecting onto the obtained space. In the ECM method, we
consider the co-occurrence matrix and the Eigen co-occurrence matrices analogous to a
facial image and the corresponding eigenfaces, respectively. The Eigen co-occurrence
Anomaly Detection Using Layered Networks Based on Eigen Co-occurrence Matrix
225
matrices are characteristic feature sequences, and the characteristic features of a new
sequence converted to a co-occurrence matrix are obtained by projecting it onto the
space deﬁned by the Eigen co-occurrence matrices.
In addition, the ECM method constructs the extracted features as a layered net-
work. The distinct principal features of a co-occurrence matrix are presented as layers.
The layered network enables us to perform detailed analysis of the extracted principal
features of a sequence.
In summary, the ECM method has three main components: (1) modeling of the
dynamic features of a sequence; (2) extraction of the principal features of the resulting
model; and (3) automatic construction of a layered network from the extracted principal
features.
The reminder of the paper is organized as follows. In Section 2, the ECM method
is described in detail by using an example set of UNIX commands. Section 3 applies
the ECM method to detect anomalous users in a dataset, describes our experimental
results, and compares them with results obtained from several conventional methods.
Section 4 analyzes the computational cost involved in the ECM method. Section 5 dis-
cusses possible detection improvements in using the ECM method. Section 6 gives our
conclusions and describes our future work.
2 The Eigen Co-occurrence Matrix (ECM) Method
The purpose of this study is to distinguish malicious users from normal users. To do so,
we ﬁrst need to model a sequence of user commands and then apply a pattern classiﬁca-
Domain Dataset
Convert to
co-occurrence
matrix (Co-mat) 
Compute
Average 
Co-mat
Step 1
Average Co-mat
2
3
4
2     0
… 2
… 0
Step 2
Compute
Difference
Co-mat
Covariance Matrix
1       0     0
-1     … 3
2
3
-1     0
… 2
-2     … 0
2         … 1
Calculate
Eigenvectors
Sort 
by Eigenvalue
Step 3
Step 4
Convert to
co-occurrence
matrix (Co-mat) 
Compute 
Difference 
with Average 
Co-mat
Testing Sequence
Construction of Layered Network
Step 5
Inner Product
Feature Vectors
Multiplication
A Set of Eigen Co-mats
0.4   
-0.3
0.4   … -0.1
0.1 … 0
V1
…
0.1  … 0
0     … -0.2 
0.2  … 0
VN
0.4   
-0.3
ｆ1
0.4   … -0.1
…
ｆN
0.1 … 0
V1
0.1  … 0
0     … -0.2 
0.2  … 0
VN
+(O1, O2 ) 
…
+(Om-1, Om)
-(O,  O2 ) 
…
-(Om-1, Om )
…
+(O1, O2 ) 
…
+(Om-1, Om)
-(O,  O2 ) 
…
-(Om-1, Om )
1st Layer Network
1st Layer Network 
(Positive)
(Negative)
Nth Layer Network
Nth Layer Network 
(Positive)
(Negative)
Fig. 1. Overall procedure of the ECM method
226
Mizuki Oka et al.
Table 1. Notation and terminology
ith Eigen co-occurrence matrix
length of an observation sequence
number of sample sequences in D
l
s maximum distance over which correlations between events are considered (scope size)
O set of observation events
m number of events in O
D set of sample observation sequences (domain dataset)
n
M a co-occurrence matrix
Vi
F a feature vector
ith component of F
fi
N dimension size of F
Xi a matrix for producing ith positive network layer
Yi a matrix for producing ith negative network layer
h
R number of elements in fiVi for constructing the ith network layer
r
threshold of elements in Xi (or Yi) to construct a network layer
number of nodes in a subnetwork
−−−→
time
cd
cd
cp
ls less
User1
User2 emacs gcc gdb emacs ls gcc gdb ls ls emacs
User3 mkdir cp
less cd ls cd cd
ls cp cp cp
ls
ls
ls
cp
Fig. 2. Example dataset of UNIX commands
tion method. To accurately classify a sequence as normal or malicious, it is necessary to
extract its signiﬁcant characteristics (principal features) and, if necessary, convert the
extracted features into a form suitable for detailed analysis. In this section, we explain
how the ECM method models a sequence, how it obtains the principal features, and how
it constructs a model for detailed analysis, namely, a network model. The overall pro-
cedure of the ECM method is illustrated in Figure 1 and the notation and terminology
used in the ECM method are listed in Table 1.
In the following sections, we explain each procedure in the ECM method by using
a simple example of UNIX command sequences. Figure 2 shows an example dataset
of UNIX commands for three users, designated as User1, User2, and User3. Each user
issued ten UNIX commands, which are shown truncated (without their arguments) in
the interest of simplicity.
2.1 Modeling a Sequence
The ECM method models a sequence by correlating an event with any following events
that appear within a certain distance. The strength of the correlation between two events
is deﬁned by (a) the distance between events and (b) the frequency of their occurrence.
In other words, when the distance between two events is short, or when they appear
more frequently, their correlation becomes stronger. To model such strength of corre-
Anomaly Detection Using Layered Networks Based on Eigen Co-occurrence Matrix
227
s = 6
s = 6
cd ls less    ls less cd ls cd cd ls
Strength of Correlation : 
=+
312
Fig. 3. Correlation between ls and less for User1
cd
4
7
6
0
0
0
0