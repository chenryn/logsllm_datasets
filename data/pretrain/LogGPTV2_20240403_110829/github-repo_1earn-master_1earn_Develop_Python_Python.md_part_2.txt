    ```bash
    ## This is a departure from the normal Alpine naming
    ## scheme, which uses py2- and py3- prefixes
    sudo apk add python2-dev  ## for python2.x installs
    sudo apk add python3-dev  ## for python3.x installs
    ```
    For apt-cyg (Cygwin...):
    ```bash
    apt-cyg install python-devel   ## for python2.x installs
    apt-cyg install python3-devel  ## for python3.x installs
    ```
- **Python Pip broken wiith sys.stderr.write(f“ERROR: {exc}”)**
    由于 python 官方停止了对 python2 的维护，以后大部分和 pip2 有关的操作都会报这个错，我预估一下，这个应该是以后我们遇到最常见的问题之一
    ```bash
    curl https://bootstrap.pypa.io/2.7/get-pip.py --output get-pip.py
    python get-pip.py
    ```
- **requests.exceptions.ProxyError**
    ```python
    proxies = { "http": None, "https": None}
    requests.get("http://xxx.com", proxies=proxies)
    ```
- **Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed))**
    加上 verify=False
    ```python
    response = requests.get("https://127.0.0.1", verify=False)
    ```
- **return Command 'lsb_release -a' returned non-zero exit status 1**
    ```bash
    rm /usr/bin/lsb_release
    ```
- **/usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: int_from_bytes is deprecated, use int.from_bytes instead**
    ```bash
    pip3 install cryptography==3.3.2
    ```
- **ModuleNotFoundError: No module named 'yaml'**
    ```
    pip install pyyaml
    ```
- **Centos7 pip2.7升级失败解决方法**
    升级跨度太大导致的问题，所以要解决这个问题只能通过升级至中间版本才可以解决
    ```
    wget https://files.pythonhosted.org/packages/0b/f5/be8e741434a4bf4ce5dbc235aa28ed0666178ea8986ddc10d035023744e6/pip-20.2.4.tar.gz
    tar -zxvf pip-20.2.4.tar.gz
    cd pip-20.2.4/
    sudo python setup.py install
    pip install -U pip
    python2 -m pip install --upgrade pip
    ```
---
## 包/模块管理
### import 与 from...import
在 python 用 import 或者 from...import 来导入相应的模块.
- 将整个模块(somemodule)导入,格式为: `import somemodule`
- 从某个模块中导入某个函数,格式为: `from somemodule import somefunction`
- 从某个模块中导入多个函数,格式为: `from somemodule import firstfunc, secondfunc, thirdfunc`
- 将某个模块中的全部函数导入,格式为: `from somemodule import *`
```py
import sys
print('================Python import mode==========================');
print ('命令行参数为:')
for i in sys.argv:
    print (i)
print ('\n python 路径为',sys.path)
```
```py
from sys import argv,path  ##  导入特定的成员
print('================python from import===================================')
print('path:',path) ## 因为已经导入path成员,所以此处引用时不需要加sys.path
```
---
### pip指定版本安装
检查一遍 pip 和 pip3 分别指向的 Python
```bash
pip -V
pip3 -V
```
在 linux 安装了多版本 python 时(例如 python2.6 和 2.7),pip 安装的包不一定是用户想要的位置,此时可以用 -t 选项来指定位置
`pip install -t /usr/local/lib/python2.7/site-packages/ xlrd`
或
```bash
python2 -m pip install xxxxx
```
---
### 虚拟环境 virtualenv
**安装virtualenv**
`pip install virtualenv`
**创建环境**
创建虚拟环境 `virtualenv envtest` 或指定版本 `virtualenv -p /usr/bin/python3  envtestv3`
进入虚拟环境的script路径,并执行 `activate` 就可以安装模块了
如果你的虚拟环境安装库的时候出问题,比如python3环境,需要安装 pip3
默认情况下,virtualenv会引用系统python环境中 site-­packages 中的库,并将其复制到虚拟python环境的库中.我们可以设置 --no-site-packages 参数取消对系统Python库的引用,以此来创建一个完全纯净的python环境.
---
### 离线安装
**压缩包**
```
python setup.py install
```
**whl 包**
- https://pypi.org/
```
pip install xxx.whl
```
---
### 自动生成 requirements.txt 文件
```bash
pip install pipreqs
pipreqs .
```
---
## 版本问题
### input()
python2中的`input()`函数:获取当前输入的内容,并将其作为指令来处理
python3中的`input()`函数:获取当前输入的内容,并将其作为字符串来处理
如果想在python2让`input`函数实现python3中相同的功能,就需要使用`raw_input()`函数
---
## 反编译
**在线工具**
- [python反编译](https://tool.lu/pyc/)
---
## 一些项目
**系统信息**
* [giampaolo/psutil](https://github.com/giampaolo/psutil)
**爬虫**
* [Scrapy](./笔记/爬虫.md#Scrapy)
* [VeNoMouS/cloudscraper](https://github.com/VeNoMouS/cloudscraper) - A Python module to bypass Cloudflare's anti-bot page.
**图像识别**
* 人脸识别
    * [face_recognition](./笔记/图像识别.md#face_recognition) - 人像识别
* ocr
    * [chineseocr_lite](./笔记/图像识别.md#chineseocr_lite) - 超轻量级中文ocr
**网络编程**
* [Urllib](./函数/网络编程.md#Urllib)
* [Requests](./函数/网络编程.md#Requests)
**文本处理**
* [ftfy](./函数/文本处理.md#ftfy)
**IO操作**
* [File](./函数/IO操作.md#File)
**可视化**
* pyecharts
* [big_screen](https://github.com/TurboWay/big_screen) - 数据大屏可视化
**集成**
* Fabric
**终端呈现方式**
* [tqdm/tqdm](https://github.com/tqdm/tqdm)
* [rsalmei/alive-progress](https://github.com/rsalmei/alive-progress)
* https://github.com/Textualize/rich
**语言**
* [mozillazg/python-pinyin](https://github.com/mozillazg/python-pinyin) - 汉字转拼音
* [lxneng/xpinyin](https://github.com/lxneng/xpinyin) - 汉字转拼音,比较旧了,不推荐
* [letiantian/Pinyin2Hanzi](https://github.com/letiantian/Pinyin2Hanzi) - 拼音转汉字， 拼音输入法引擎， pin yin -> 拼音
* [fxsjy/jieba](https://github.com/fxsjy/jieba) - 结巴中文分词
**正则**
- [asweigart/humre](https://github.com/asweigart/humre) - A human-readable regular expression module for Python.