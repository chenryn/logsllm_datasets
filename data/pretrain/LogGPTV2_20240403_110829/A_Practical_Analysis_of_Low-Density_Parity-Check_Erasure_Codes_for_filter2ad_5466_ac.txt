attractive method that yields (near) optimal codes for ﬁ-
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:51:25 UTC from IEEE Xplore.  Restrictions apply. 
nite n would be exceptionally useful. This is highlighted
by the fact that one-level Systematic codes vastly outper-
form Gallager codes for small n, even though equivalent
Gallager codes may be constructed from the Systematic
codes.
6.3 Question 3
How do the published distributions fare in producing
good codes for ﬁnite values of n?
In the next two graphs, we limit our scope to R = 1
2 ,
as the results for the other two rates are similar. First, we
present the performance of the three code generation meth-
ods for the three coding methods for small n in Figure 7.
As in the other graphs, the best performing instance for
each value of n is plotted.
Monte Carlo
Published
Derived
r
o
t
c
a
F
d
a
e
h
r
e
v
O
1.25
1.20
1.15
1.10
1.05
1.00
0 5
0
1
0
0
0 5
0
1
5
0
1
0
0
0 5
0
1
5
0
1
0
0
1
5
0
n
n
Systematic
Gallager
n
IRA
Figure 7: Performance of various codes for n ≤ 150 when
R = 1
2 .
In all coding methods, the Monte Carlo generation
method produces better codes than the published distribu-
tions when n is roughly less than 15. At that point, the
exponential number of possible Λ/P combinations drasti-
cally reduces the effectiveness of Monte Carlo code gen-
eration. From that point until n is in the high double-
digits, the performance of the published codes is worse
than the derived codes. As n grows past 100, the derived
and published codes perform roughly equally. Thus, for
small n(< 100), the answer to Question 3 is clearly inad-
equately.
Figure 8 addresses which published distributions per-
form well in generating small codes. Each graph plots four
curves – the best codes generated from distributions de-
signed for the particular code and rate, the best codes gen-
erated from distributions designed for the particular code,
Same Code, Same Rate
Same Code, Different Rate
Different Code
Best instance
r
o
t
c
a
F
d
a
e
h
r
e
v
O
1.20
1.15
1.10
1.05
1.00
0 5
0
1
0
0
0 5
0
1
5
0
1
0
0
0 5
0
1
5
0
1
0
0
1
5
0
n
n
Systematic
Gallager
n
IRA
Figure 8: Performance of published distributions for n ≤
150 when R = 1
2 .
but not for the rate, the best codes generated from distri-
butions designed for other codes, and a reference curve
showing the best codes from Figure 7.
In all three graphs, the worst codes were generated from
distributions designed for the particular code, but for a dif-
ferent rate. In both the Gallager and IRA codes, the best
codes were generated from distributions designed for the
code and rate; and in the Systematic codes, the best codes
were clearly derived from distributions designed for other
codes. Clearly, the derivation of good Systematic codes
for small n is not well understood at this point.
Syst. Published
Syst. Derived
Gallager Published
Gallager Derived
IRA Published
IRA Derived
r
o
t
c
a
F
d
a
e
h
r
e
v
O
1.25
1.20
1.15
1.10
1.05
1.00
1.15
1.10
1.05
1.00
1.10
1.05
1.00
1
0
0
1
0
0
0
1
0
0
0
0
1
0
0
0
0
0
1
0
0
1
0
0
0
1
0
0
0
0
1
0
0
0
0
0
1
0
0
1
0
0
0
1
0
0
0
0
1
0
0
0
0
0
n
n
n
Rate = 1/3
Rate = 1/2
Rate = 2/3
Figure 9: Performance of all codes and rates for large n.
For large n, we plot the best published and derived
codes for all rates and coding methods in Figure 9. Note
that in each graph, the y-axis has a different scale. There
are several interesting features of these graphs.
In the
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:51:25 UTC from IEEE Xplore.  Restrictions apply. 
2 . For R = 2
middle graph, where R = 1
2 , the published distributions
perform best relative to the derived distributions. This is
not surprising, since the bulk of the published distribu-
tions (46 of the 80) are for R = 1
3 , all
three coding methods perform similarly in their best in-
stances. For R = 1
3 , it is not surprising that the published
distributions fare poorly in relation to the derived distribu-
tions, since only 10 of the 80 published distributions are
for R = 1
3 , and these are only for Gallager codes. It is
interesting that given this fact, the derived IRA codes sig-
niﬁcantly outperform the others. It is also interesting that
the published IRA codes for R = 2
3 perform so poorly in
comparison to the derived codes.
As in the results on small n, in analyzing which dis-
tributions produce good graphs for large n, we found that
for IRA and Gallager codes, the best codes are produced
by distributions designed speciﬁcally for the code and rate.
For Systematic codes, the best codes are produced by dis-
tributions for other codes. We omit the data here for
brevity. It may be obtained in [PT03].
6.4 Question 4
Is there a great deal of random variation in code
generation from a given probability distribution?
Obviously, this depends on the distribution, and how the
distribution is utilized. In Table 2, we select six probability
distributions in order to test their variation in code genera-
tion. For each of the distributions, we generated over 1000
random codes for n = 125, 000, and present a digest of
the results in Figure 10. For each distribution we draw a
Tukey plot [Tuf83], which shows the quartiles for the data
and its mean.
Source
Code
S99
S99*
RU03
U03
R03
L97A
Gallager
Gallager
Gallager
Gallager
IRA
Syst.
Rate
Rate
Designed Used
2/3
1/2
1/2
1/2
1/2
2/3
2/3
2/3
1/2
1/2
1/2
1/2
Λ
P
range
range
2
2
6
6
7
2-13
2-100
2-100
3-1M 11-30K
10-11
8
Table 2: Range of code generation for given probability
distributions.
The ﬁrst distribution, S99, from [Sho99], is for a regular
graph, where the left nodes each have two outgoing edges,
and the right nodes have six incoming edges. As such, we
expect little random deviation, which is borne out by the
experiments. (We do expect some, because of the random
nature of graph generation and of the downloading simu-
lation).
Max
3rd Quartile
Mean
Median
1st Quartile
Max
r
o
t
c
a
F
d
a
e
h
r
e
v
O
2.0
1.9
1.8
1.7
1.6
1.5
1.4
1.3
1.2
1.1
1.0