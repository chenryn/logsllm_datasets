randomly chosen as malicious. The false positives ratio β
is measured as the ratio of falsely accused edges to attack
edges. Figure 4 illustrates how traceback accuracy varies
with number of attack edges for diﬀerent h. From Figure 4,
when m = 4, 000, h = 8 or 16 has the lowest false positive
ratio. From Equation 2, β is minimized when h = 12. When
m = 8, 000, β attains minimum at h = 5. The optimal β,
computed using Equations 2, achieved for various number
of attackers is also shown in Figure 4. The simulation result
largely agrees with the analytical model.
When h = 2, β is high even with relatively small number
of attack edges. However, β increases slowly as the num-
ber of attack edges increases. From Equation 2, h = 1 is
the optimal setting if there are about 20,000 attack edges,
with β approaches 1.66. As h increases to 24, false posi-
2The two processes are not equivalent since each marker has
exactly h distinct tags.
0.00010.0010.010.111010002000400060008000Number of Attack Edges (m)False Positives Ratio (β)h=2h=4h=8h=16h=32h=64h=128Optimum00.10.20.30.40.50.60.70.80.910200400600800100012001400Number of Attack PathsEdges False Positives RatioAMSRPMFigure 6: False positives of AMS and RPM (noisy)
are 260,386 (∼ 218.0) unique edges or 209,582 (∼ 217.7) dis-
tinct nodes. The single source is used as the victim. From
100 to 1,250 nodes are randomly chosen as the sources of
attack packets. They may reside anywhere in the network.
The attack path packet rate is set to 1,000 packets per sec-
ond, and the benign path packet rate is set to 1
10 of an attack
path. Each attack is simulated for 10 seconds. By then, the
relative amount of diﬀerent packet marks are stable, and the
collection is enough to reconstruct the attack graph.
In the experiments, the parameters for RPM are  = 1
16
and h = 16. The setting for AMS is as stated in [14], and
referenced in Table 1. Simulations show that both AMS and
RPM have negligible false negatives, hence their α lines are
omitted from the ﬁgures. Their performances are compared
only in terms of β, the false positives ratio in identifying
edges.
Figure 5 shows how β varies with number of attack paths
in the noiseless case where only packets from attackers are
considered. It can be clearly observed that AMS has expo-
nentially increasing β with the increasing number of attack
paths. When there are 1,000 attack paths, or roughly 4,650
attack edges, RPM and AMS have β values of 0.02 and 0.63
respectively.
Figure 6 shows the case where packet marks from both
user and attacker paths are supplied to the path reconstruc-
tion procedure. 200 user paths and varying number of at-
tack paths are simulated. The result is similar, though both
AMS and RPM have higher false positives. With 1,000 at-
tack paths, RPM and AMS have β values of 0.09 and 1.28
respectively.
The improvement can be explained by comparing the
packet marks entropy shown in Figure 3. It shows that the
packet entropy of RPM is very close to that of RnL, and is
much higher than AMS.
Figure 7 shows the number of routers falsely identiﬁed at
each distance. The number of attack nodes at each distance
is also shown in the ﬁgure as a reference.
In the simula-
tion, there are 1,000 attack paths and 200 user paths. At
distances of 9-14 hops away, where there are many routers,
AMS generates many false positives. This is because AMS
cannot resolve packet mark collisions of routers at the same
distance. On the other hand, RPM has small amount of
false positives at all distances.
Finally, Figure 8 shows β for RPM under diﬀerent sce-
narios. The ‘RPM noisy (200 users)’ case maintains 200
normal users, varying the number of attack paths from 100
Figure 7: False positives of AMS and RPM by dis-
tance
Figure 8: False positives of RPM
to 1,250. In the ﬁgure, the x-axis represents the number of
attack paths for this case. The ‘RPM noisy (200 attackers)’
case keeps a constant number of 200 attack paths, but varies
the number of users from 100 to 1,250. The x-axis denotes
the number of users in this case. It can be clearly seen that
even in the presence of noise, RPM still outperforms AMS
(noiseless) by a signiﬁcant amount.
5. DISCUSSION
5.1 Gossib Attack and RPM’s Survivability
Gossib (Groups of Strongly SImilar Birthdays) attack [19]
was proposed by Waldvogel. It can be used to obtain eﬀects
similar to a birthday attack on PPM traceback schemes.
Gossib increases the state space for the victim to search, by
randomly inserting edge fragments into the packet marks.
Simultaneously, it inserts misleading edges into the attack
graph.
it optimizes the number of packets
needed to fake the edges or edge fragments.
In addition,
Gossib attack appears severe to PPM traceback, for a dili-
gent attacker can forge as many packet marks as the amount
of traﬃc it transmits, in comparison to a PPM marker who
performs the marking routine at around 1/20 of the time.
However, routers can co-operate to proactively identify
and ﬁlter forged packet marks, using an approach inspired
by route-based distributed packet ﬁltering (DPF) [13]. Park
and Lee proposed DPF as a defense against address spoof-
ing. A gateway router veriﬁes the incoming addresses with
00.10.20.30.40.50.60.70.80.910200400600800100012001400Number of Attack PathsEdges False Positives RatioAMSRPM0100200300400500600700800010203040DistanceNumber of False Positive EdgesAMSRPMNumber of Attack Edges00.10.20.30.40.50.60.70.80.910200400600800100012001400Number of Attacker or User PathsEdges False Positives RatioRPM NoiselessRPM Noisy (200 Users)RPM Noisy (200 Attackers)AMS Noiselessrespect to the topology. When a source address is invalid
against an interface, the gateway ﬁlters the packet. A num-
ber of spoofed packets can survive even with the gateway’s
ﬁltering check, which is when the spoofed addresses indeed
are expected from the particular interface, but are either be-
hind or in front of the attacker. DPF limits the number of
allowed address spooﬁng. The paper claims with 20% of all
gateway routers performing the check, the eﬀect of address
spooﬁng becomes contained.
For RPM to defend against the Gossib attack, routers at
strategic points are forced to validate if the packet marks are
expected to their interfaces. When a mismatch occurs, the
packet marks can be safely eliminated, by restoring them to
all 0’s. The strategic points can be based on topology and
distance between routers.
For example, a checking router can be placed at about
5 hops away from another checker. So each checker keeps
track of all the possible packet marks of its upstream markers
within 5 hops. Using the same bit-allocation of packet marks
as in Section 4.4, each checker keeps about 16 packet marks
for each nearby upstream router. The coverage eﬀect by
20% routers can be achieved with this simple proposal, and
the result of DPF can apply.
By placing checkers at strategic points, the bogus packet
marks can be eliminated early. More importantly, the num-
ber of allowed packet marks each checker needs to keep track
of can be minimized. Hence strengthening the diﬀerentia-
bility of packet mark validity. The exact placement of the
checkers are topology dependent.
In general, the rule of
thumb is to place them before the bottleneck links, where
multiple branches in the network graph merge.
As defending against the Gossib attack is not the focus of
our paper, we do not reproduce the evaluations similar to
the DPF research. It is suﬃcient to note that it is possible
for RPM (and PPM traceback schemes in general) to survive
diligent Gossib attackers.
5.2 Extension
RPM can be extended to work when the upstream router
map is not available. Assuming the victim has no upstream
router map, markers can mark packets with either its node
IP address or edge information. For a victim to reconstruct
the attack graph, it ﬁrst identiﬁes the candidate markers
using the node information, and then connects the markers
based on the edge information. Attack edges are formed by
exhaustively pairing the candidate markers found. They are
veriﬁed if all the marks they can generate are received by
the victim. Storing the random identiﬁer together with the
path information in packet headers facilitates eﬃcient path
reconstruction. Yet keeping random identiﬁer in the packet
marks takes up some precious bits that could be used for
the path information. Shorter path information has higher
collision probability and reduces the identiﬁcation accuracy.
The number of bits available for marking in the packet
header is ﬁxed and limited. One approach to increase the
amount of information carried by a packet without using
more bits in the header is to have an external common ran-
dom source. Basically, the set of tags Xi associated to iden-
tity i is computed using its identity and R, which is obtained
from the random source. The external common random
source can be time, or random bits that vary with time.
Markers can agree on a predetermined random bits sched-
ule. By approximately synchronizing their clocks, in each
interval, all markers use the same random bits. As the in-
terval elapses, e.g., after 1 minute, they all switch to the
next random string in the schedule. Markers need not be
perfectly synchronized. During the few transitional seconds
from one random string to the next, packet marking sus-
pends. The packet marks received during this period are
discarded by the victim. When the synchronization of the
random string is restored, marking resumes. Compared to
storing the random identiﬁer inside the packet header, this
approach needs a longer time for the victim’s reconstruction
to converge. However, it demonstrates the possibility to use
an external random source of arbitrary length.
6. CONCLUSION
IP traceback has been an actively researched DDoS de-
fence. For attack packets with spoofed source addresses, IP
traceback traces the paths they traverse up to the sources.
Traceback also beneﬁts traﬃc accounting applications, such
as tracking clients’ bandwidth utilization, or locating the
bottleneck links in the network.
In this paper, we present a general model
for PPM
schemes. The general model provides a platform for PPM
schemes comparison and helps to identify the appropriate
system parameters. We also show that entropy is a good
predictor of traceback accuracy and use of hop count infor-
mation in the tag reduces the entropy.
We present a PPM scheme called RPM that has good
traceback accuracy and eﬃcient path reconstruction. Sim-
ulations show improved scalability and traceback accuracy
over prior works. For example, a thousand attack paths in-
duce 63% of false positives in terms of edges identiﬁcation,
using AMS. RPM lowers the false positives to 2%. The eﬀec-
tiveness of RPM demonstrated that imposing sophisticated
structures on tags is not necessary. If imposing the structure
reduces the randomness in tags, it should be avoided. The
improvement of RPM over prior schemes is mainly a result
of increasing the information carried in packet marks.
7. REFERENCES
[1] Internet mapping project. Research, Lumeta, Jan.
2006.
[2] Anomalous DNS activity. Current activity archive,
US-CERT, Feb. 6, 2007.
[3] M. Adler. Tradeoﬀs in probabilistic packet marking for
IP traceback. In Proceedings of ACM Symposium on
Theory of Computing (STOC), Nov. 2001.
[4] B.Bloom. Space/time trade-oﬀs in hash coding with
allowable errors. Communications of the Association
for Computing Machinery, 13(7):422–426, 1970.
[5] S. Bellovin, M. Leech, and T. Taylor. ICMP traceback
messages. Internet draft, IETF, draft-ietf-itrace-01.txt,
Oct. 2001.
[6] B. Chor, A. Fiat, and M. Naor. Tracing traitors. In
Proceedings of CRYPTO, pages 257–270, Aug. 1994.
[7] D. Dean, M. Franklin, and A. Stubbleﬁeld. An
algebraic approach to IP traceback. ACM
Transactions on Information and System Security,
5(2):119–137, May. 2002.
[8] L. Garber. Denial-of-service attacks rip the Internet.
IEEE Computer, 33(4):12–17, Apr. 2000.
[9] M. Goodrich. Eﬃcient packet marking for large-scale
IP traceback. In Proceedings of ACM CCS, pages
117–126, Nov. 2002.
[10] J. Li, M. Sung, J. Xu, and L. Li. Large-scale IP
traceback in high-speed Internet: Practical techniques
and theoretical foundation. In Proceedings of IEEE
S&P, May. 2004.
[11] A. Mankin, D. Massey, C.-L. Wu, S. Wu, and
L. Zhang. On design and evaluation of intention-driven
ICMP traceback. In Proceedings of IEEE Computer
Communications and Networks, Oct. 2001.
[12] D. McGuire and B. Krebs. Attack on Internet called
largest ever. Oct. 2002.
[13] K. Park and H. Lee. On the eﬀectiveness of
route-based packet ﬁltering for distributed DoS attack
prevention in power-law internets. In Proceedings of
SIGCOMM, pages 15–26, Aug. 2001.
[14] S. Savage, D. Wetherall, A. Karlin, and T. Anderson.
Practical network support for IP traceback. In
Proceedings of SIGCOMM, Aug. 2000.
[15] A. Snoeren, C.Partridge, L. Sanchez, C. Jones,
F.Tchakountio, S. Kent, and W. Strayer. Hash-based
IP traceback. In Proceedings of ACM SIGCOMM,
Aug. 2001.
[16] D. X. Song and A. Perrig. Advanced and
authenticated marking schemes for IP traceback. In
Proceedings of IEEE INFOCOM, pages 878–886, Apr.
2001.
[17] I. Stoica and H. Zhang. Providing guaranteed services
without per ﬂow management. In Proceedings of ACM
SIGCOMM, Aug. 1999.
[18] W. Trappe, M. Wu, Z. J. Wang, and K. J. R. Liu.
Anti-collusion ﬁngerprinting for multimedia. IEEE
Transactions on Signal Processing, 51(4):1069–1087,
Apr. 2003.
[19] M. Waldvogel. GOSSIB vs. IP traceback rumors. In
Proceedings of Annual Computer Security Applications
Conference (ACSAC), Dec. 2002.
[20] A. Yaar, A. Perrig, and D. Song. Fit: Fast Internet
traceback. In Proceedings of IEEE INFOCOM, pages
1395–1406, Mar. 2005.