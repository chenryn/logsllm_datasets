这项技术可以说是源自联想和类比，因为我们在对UAF漏洞进行利用时通常都会使用标签进行占位（后面介绍利用的文章中会详述），既然创建标签可以分配内存那么根据这种情况我们会联想到是否可以通过标签进行喷射。
DEPS技术的思想正是创建大量的DOM元素（标签），通过DOM元素去喷射内存，并且通过设置DOM元素的属性来设置堆喷内存的内容。
并且由于内存布局的不同的原因，在IE10下0x20302228是一个稳定且便于到达的地址。而且利用DOM喷射一个比较凑巧的优点就是不需要刻意的绕Nozzle缓解机制，其本身就不受Nozzle的影响。下面是一个展示堆喷射效果的DEMO，因为IE10浏览器是随着Windows8一起发布的，所以我们这里使用Windows8作为测试环境。
             var div_container = document.getElementById('blah'); 
             div_container.style.cssText = "display:none"; 
             var data; 
             offset = 0x104; 
             junk = unescape("%u2020%u2020"); 
             while(junk.length  
此外还有一个非常有趣的现象，在x64的Win8和Win8.1下，我们一般打开的IE浏览器实际上都是32位的。那么你可能有疑问，因为IE明明提供了64位和32位两个版本，为什么我们打开的都是32位的？事实上64位版本是专为Metro界面提供的，如果你从Metro启动IE就会发现它是64位的。我发现这一点是因为我一直使用的是32位的windbg，32位的windbg是调试不了64位进程的，我在调试时发现有时候IE进程可以附加有时候不可以附加，后来查了一下资料才发现是这么回事。
IE10的64位进程与32位进程
**9.IE11环境下的堆喷射**
IE11是IE浏览器的终章，IE11与Widows8.1系统同时发布。
其实单纯说喷射的话与IE10相似，但是由于IE11浏览器已经加入了很多新的漏洞缓解措施，出于漏洞利用的考虑我们此时单独讨论堆喷射已经没有什么意义了。换而言之，此时喷射内存的目的已经与之前完全不同了。
我们会在后面的利用部分讨论IE11中进行jscript9 Heap Feng shui布局的意义。
**10.使用Heaplib进行堆喷射**
Heaplib是一个方便进行精准堆喷射的库。
由于IE浏览器的堆很可能存在空洞，这样的话会对我们的堆布局造成很大影响。heaplib会刷新这些缓冲块，以确保申请的块由系统堆分配。详见( )
但是Heaplib只在IE9以下的版本中有效，因为IE9中存在Nozzle。不过可以通过我们自己修改Heaplib来让它运行在IE9上。
**11.通过FLASH进行喷射**
大概是2014年，网上开始大量流传使用Flash内存布局结合浏览器漏洞进行利用的样本。从技术手段来说，这些使用FLASH进行内存布局的样本与我们前面讲的这些堆喷射已经不处于同一个次元了。结合Flash内存布局的利用，本质上讲是试图做一种漏洞的转化，与我们前面讲的这些喷射有本质的不同。这种技术最早应该是由李海飞前辈提出的，我们在后面利用部分会详细说这部分内容，参见
(
)
**12.常用堆喷尺寸大小**
参考自泉哥博客，这些数据应该说是前辈们的经验总结。
    XP SP3 - IE6 block = shellcode.substring(0,0x40000-0x20)
    XP SP3 – IE7 block = shellcode.substring(2,0x10000-0×21); 
    XP SP3 – IE8 block = shellcode.substring(2, 0x40000-0×21); 
    Vista SP2 – IE7 block = shellcode.substring(0, (0x40000-6)/2); 
    Vista SP2 – IE8 block = shellcode.substring(0, (0x40000-6)/2); 
    Win7 – IE8 block = shellcode.substring(0, (0x80000-6)/2); 
    Vista/Win7 – IE9 block = shellcode.substring(0, (0x40000-6)/2); 
    XP SP3/VISTA SP2/WIN7 - Firefox9 block = shellcode.substring(0, (0x40000-6)/2);
**13.x64下的堆喷射**
对x64进程进行堆喷射理论上是没有意义的，因为64位的地址表示的值过大，以我们目前的计算机配置来说就算是拿全部的内存进行喷射也不可能到达喷射需求的地址。但是在实际漏洞利用中，可能因为漏洞本身的特性导致我们可以通过小范围喷射进行利用，诸如著名的《Exploiting
Internet Explorer11 64-bit on Windows 8.1 Preview》文章中的利用。
**后记**
其实这系列的文章，我在去年10月份的时候就已经写完了，但是一直在硬盘里放了近半年都没有投出来。我主要是考虑到这系列文章涉及的话题太广、内容太多、历史又太悠久，考虑到自己仅是个大二学生水平较低、接触漏洞方面也不久，唯恐内容中出现错误和纰漏。但是做了一番修改后我还是鼓起勇气发出来了，希望大家能够帮忙指出文章中错误和提出修改建议，可以通过微博私信给我
id:Ox9A82。
**reference**
《浏览器漏洞攻防对抗的艺术》仙果
《攻破Windows 8.1的64位IE》古河
《Heap Feng Shui in JavaScript》
《DEPS —— Precise Heap Spray on Firefox and IE10》
《Exploiting Internet Explorer11 64-bit on Windows 8.1 Preview》
《Exploit 编写系列教程第十一篇：堆喷射技术揭秘》
《IE Array Object Heap Spraying》
《ASLR BYPASS APOCALYPSE IN RECENT ZERO-DAY EXPLOITS》
《Smashing the Heap with Vector:Advanced Exploitation Technique in Recent Flash
Zero-day Attack》