# Enigmail 渗透测试报告

## 译文声明
本文为翻译文章，原文作者为 Cure53，来源：enigmail.net。具体内容和含义请以原文为准。

## 一、前言
本报告由 [Cure53](http://www.cure53.de/) 发布，得到了 [Posteo](http://www.posteo.de/) 和 [Mozilla 安全开源基金（MOSS）](https://www.mozilla.org/en-US/moss/secure-open-source/) 的支持。该报告涵盖了 Thunderbird 和 Enigmail 的渗透测试结果。截至本文撰写时（2017年12月10日），发现的部分漏洞尚未修复，因此本报告仅讨论了 Enigmail 中需要修复的问题。待所有问题解决后，我们将发布完整版报告。
Enigmail 项目在此特别感谢 Posteo 和 MOSS 对此报告的支持。

## 二、漏洞信息
以下将介绍我们在测试过程中发现的漏洞及其代码实现中的问题。请注意，这些漏洞是按发现顺序而非严重程度排序的。每个漏洞标题后的括号内标注了其严重等级，并使用唯一标识符（如 _TBE-01-001_）进行标记，以便后续参考。

### 2.1 TBE-01-002: Enigmail - 解析问题导致凭据伪造（严重）
在邮件解析过程中，我们发现了 Enigmail 存在一个脆弱性。攻击者可以利用此漏洞迫使 Enigmail 使用受控的 PGP 公钥和私钥。具体攻击场景如下：
1. Bob 向 Alice 发送了一封电子邮件，但该邮件使用的是 Mallory 的 PGP 身份信息签名并加密。
2. 攻击者 Mallory 修改了 SMTP 通信数据中 Bob 的“Full Name”字段，而这一修改不易被察觉。
3. 当 Alice 回复这封邮件时，由于 Mallory 已篡改了 Bob 的“Full Name”字段，Alice 实际上使用的将是不同的 PGP 密钥，可能是 Mallory 控制的密钥。

这种隐蔽的中间人（MitM）攻击场景对安全构成重大威胁，因此我们将此漏洞定级为“严重”。

**技术细节**:
- `funcs.jsm` 文件中的 `stripEmail` 函数负责从逗号分隔的电子邮件列表中提取地址。正则表达式 `EnigmailFuncsRegexTwoAddr` 和 `EnigmailFuncsRegexExtractPureEmail` 在处理某些特殊字符时存在缺陷，使得攻击者能够注入额外的 `< >` 标签来绕过验证。
- 进一步地，如果攻击者使用西里尔字母（例如，“a”替换为“а”）来冒充合法邮件地址，那么 Enigmail 可能会被误导使用错误的身份信息进行加密操作。

**解决方案**: 应重新审查并改进相关正则表达式的逻辑，确保正确识别和过滤电子邮件地址。

### 2.2 TBE-01-005: Enigmail - 重放加密内容导致明文信息泄露（高）
当用户回复或转发包含先前收到的加密内容的邮件时，可能会无意中向攻击者暴露解密后的文本。这种攻击可通过两种方式实施：

**第一种方法**:
1. 攻击者截获 Alice 发给 Bob 的加密邮件。
2. 攻击者与 Bob 开始对话，诱使 Bob 在回复时保留原始加密数据。
3. 攻击者随后将截获的 PGP 数据插入到较长的会话文本中。
4. Bob 接收到新邮件后，PGP 数据自动解密，而 Bob 可能不会注意到新增的内容。

**第二种方法**:
1. 攻击者拦截 Alice 发给 Bob 的加密邮件。
2. 攻击者发送一段长文本给 Bob，其中嵌入了加密数据，并要求 Bob 将邮件转发给第三方 Trudy。
3. 如果 Bob 按照指示操作，则 Enigmail 会在转发过程中解密数据并将明文发送给 Trudy。

为了防止此类攻击，建议软件在处理部分加密邮件时给予用户明确警告，并保持加密状态不变。

### 2.3 TBE-01-021: Enigmail - 解析缺陷显示伪造签名（严重）
Enigmail 无法正确区分邮件正文与附件之间的签名验证关系。攻击者可以通过将已签名的邮件作为新邮件的附件发送给受害者，使其误以为整封邮件都经过了合法签名。具体步骤如下：
1. 获取一封已由受害者签名的邮件。
2. 创建新的邮件，并将上述邮件作为附件添加。
3. 将新邮件发送给目标收件人。
4. 目标收件人看到的是带有合法签名的新邮件。

此问题源于 Enigmail 在解析多部分 MIME 消息时未能正确处理签名验证过程。建议开发者改进解析算法，确保准确识别并验证各部分内容的签名状态。