### Algorithms

We categorize the algorithms we evaluate into the following three classes: (i) oblivious routing, (ii) prediction-based Traffic Engineering (TE), and (iii) COPE. For all algorithms, we compute the routing by solving the corresponding linear programs using CPLEX [18]. By default, CPLEX uses the dual simplex method to solve linear programs, but this is not suitable for COPE. Given the specific structure of our problem, we use the barrier method without crossover [12].

#### Oblivious Routing
- **Oblivious Routing (oblivious):** We compute the routing that provides the optimal oblivious ratio using the algorithm described in [7].

#### Prediction-Based TE
- **Prediction-Based TE:** We evaluate the following three algorithms in this category:
  - **Dynamic (dynamic):** At the beginning of each interval, we compute the optimal routing based on the traffic demand in the previous interval and apply it to the current interval. This algorithm models online traffic engineering (e.g., [19, 26]). Note that changes in traffic demand from the previous interval can result in less efficient routing compared to the optimal for the current interval.
  - **Peak Traffic Demand (peak):** At the beginning of each day, an optimal routing is computed based on the traffic demand in the peak interval (in terms of total volume of traffic) of the previous day (for US-ISP) or the previous day and the same day of the previous week (for Abilene). This scheme has been suggested by [4].
  - **Multiple Traffic Matrices (multi):** At the beginning of each day, an optimal routing is computed based on a set of traffic matrices collected. We use the previous day’s traffic matrices for US-ISP and the traffic matrices from the previous day and the same day of the previous week for Abilene. This algorithm is used in [34]. Additionally, we evaluate a variant suggested in [49], which selects traffic matrices of 6 consecutive intervals with the highest total volume of traffic. The results are similar and omitted for brevity.

#### COPE
- **COPE:** We evaluate two versions of COPE. Both versions optimize routing based on the convex hull constructed from the set of traffic matrices collected from the previous day (for US-ISP) or from the previous day and the same day last week (for Abilene), subject to a performance-ratio penalty envelope on all non-negative traffic demands. Both versions require routing updates only once a day and are cost-effective. The two versions differ only in their objective functions.
  - **Minimizing the Performance Ratio (COPE-ratio):** To optimize for the performance ratio as the objective function over a convex set, we adopt the technique developed in Section 3.4 to handle the penalty envelope on a convex set. Note that we also refer to COPE-ratio as COPE for short.
  - **Minimizing Maximum Link Utilization (COPE-MLU):** This version of COPE uses the absolute value of MLU, instead of the performance ratio, as its objective function. Note that COPE-MLU can be considered an extension of multi with a penalty envelope.

### Evaluation Results

#### US-ISP
First, we evaluate the performance of different algorithms using US-ISP, a large tier-1 US ISP. For confidentiality, we report relative MLU normalized by \( \text{MLU}_{\text{opt,max}} \), where \( \text{MLU}_{\text{opt,max}} \) is the highest maximum link utilization under the optimal routing over the entire month. Note that there are a small fraction of intervals without traffic demand information in the trace, and we exclude those intervals in our evaluations.

**Performance Ratio:**
- **Figure 7** compares oblivious routing with prediction-based TE, plotting the performance ratio versus the time interval sorted based on the performance ratio. Each time interval spans 1 hour.
  - Prediction-based TE outperforms oblivious routing in most cases. For example, the performance ratio under the prediction-based algorithms is less than 1.2 for about half of the time intervals. Among the prediction-based algorithms, dynamic performs the best in the common case, as it updates every interval, while the others update every day. In comparison, the performance ratio of oblivious routing is above 1.5 for almost all intervals.
  - The largest performance ratio under oblivious routing is 2.0355, whereas the largest performance ratios of prediction-based algorithms are all above 3.5, with multi even reaching higher than 8. The y-axis is limited to 8 to clearly show the difference under normal traffic. Prediction-based algorithms incur large performance ratios due to inaccurate traffic predictions, making them perform significantly worse than the optimal. These results indicate that prediction-based TE is good at optimizing common-case performance but suffers from large performance penalties when traffic demands change significantly. On the other hand, oblivious routing is good at handling unexpected traffic but suffers in common-case performance. Neither class of algorithms dominates the other.

**COPE vs. Oblivious and Dynamic:**
- **Figure 8** plots the performance ratios of the COPE algorithms, oblivious routing, and the common-case best-performing dynamic algorithm. Note that the performance ratio of dynamic is truncated to 2.2 for clarity. We observe that for the common case, COPE algorithms achieve a performance ratio that is about 6% higher than the dynamic algorithm and significantly outperform oblivious routing. For the worst case (in the traces), COPE algorithms even outperform oblivious and significantly outperform dynamic prediction-based routing. Thus, COPE achieves the best of both.

**Normalized MLU:**
- **Figure 9** shows time series plots of normalized MLU under various routing schemes.
  - From Figure 9(a), we can see that without a penalty envelope, prediction-based routing schemes can result in large spikes in normalized MLU. The normalized MLU of oblivious routing never exceeds 1.6, showing the robustness of oblivious routing.
  - From Figure 9(b), we observe that the robust performance of oblivious routing is surpassed by COPE and COPE-MLU, which consistently yield lower link utilization. We observe a reduction in normalized MLU up to 56%.

#### Abilene Traces
The results of the US-ISP traces are normalized. Next, we evaluate the algorithms using the public Abilene traces and show absolute values of MLU. Since COPE and COPE-MLU perform similarly, we report only COPE.

**Performance Ratio:**
- **Figure 10** compares the algorithms in terms of performance ratio, plotting the performance ratio versus the time interval sorted based on the performance ratio. Each time interval spans 5 minutes.
  - Predictions based on either multiple traffic matrices or peak traffic matrix perform poorly, with a performance ratio greater than 2 for about half of the intervals.
  - Although dynamic routing achieves close-to-optimal performance ratio most of the time, the performance ratio can occasionally get as high as 6.7.
  - Even though oblivious routing has a better performance ratio on Abilene traces than on US-ISP traces, COPE still outperforms oblivious routing for about 80% of the intervals.

**MLU During Traffic Spikes:**
- **Figure 11** plots the MLU achieved by the algorithms during 3 days of the Abilene traces when traffic spikes occur. We make the following observations:
  - On March 23, traffic engineering using multiple traffic matrices or peak matrix may drive the traffic intensity of the bottleneck link to be 240% of its link capacity (e.g., at interval 161), while the optimal utilization is less than 50%. This high traffic intensity can lead to high packet loss rates and/or router crashes.
  - The dynamic algorithm exhibits interesting behavior. On March 23 and 27, it drives the traffic intensity of the bottleneck link to over 100% of its link capacity during some time periods (e.g., 120% on March 23 at interval 159, and 181% on March 27 at interval 110). On the other hand, on March 25, it always achieves close-to-optimal performance. Closer examination of the traffic of the three days identifies that on March 25, there is a traffic ramp-up process, and thus the dynamic algorithm can adjust and perform well. However, on March 23 and 27, there is no such ramp-up process before the spikes, and traffic changes rapidly; thus, the dynamic algorithm overloads the network.
  - COPE and oblivious perform well under traffic spikes.

**Steady Traffic:**
- **Figure 12** shows the performance of the algorithms on Monday, March 22, 2004 (all other days in the same week contain spikes).
  - During this normal-traffic day, the utilization of the network is low—the optimal MLU is only around 6%. This is typical of Abilene, which is over-provisioned.
  - The MLU achieved by using multiple traffic is about twice that of the optimal. This is because the traffic demands used for route computation do not match well with the real traffic, resulting in a large performance penalty.
  - The MLU achieved by oblivious routing is about 1.3 times optimal. This is better than the oblivious ratio of 1.853 for the Abilene network. However, a 30% performance penalty could still be significant, especially if the network is heavily loaded. In comparison, the MLU of COPE is within 5% of optimal and comparable to the dynamic algorithm under stable demands.

### Abovenet
Next, we evaluate the performance of COPE and oblivious routing on Abovenet.