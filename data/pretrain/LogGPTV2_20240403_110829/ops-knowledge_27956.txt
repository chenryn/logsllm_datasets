When using cursors for pagination in Google App Engine with Python, it can be challenging to determine if there are no more records left to fetch. Here’s a more detailed and professional way to handle this situation:

### Problem
You are fetching records from a Google App Engine (GAE) model using `cursor()` and `with_cursor()` for pagination. You want to check if there are no more records in the database that the cursor points to, especially after you have fetched your required results in the first iteration.

### Solution
To check if there are no more records, you can compare the current cursor with the next cursor. If they are the same, it indicates that you have reached the end of the dataset.

Here’s a step-by-step approach:

1. **Fetch the initial set of records and get the cursor:**
   ```python
   query = MyModel.query()
   cursor = None
   while True:
       # Fetch a chunk of records
       records, next_cursor, more = query.fetch_page(page_size, start_cursor=cursor)
       
       # Process the records
       for record in records:
           # Your processing logic here
           pass

       # Check if there are more records
       if not more:
           break

       # Update the cursor for the next iteration
       cursor = next_cursor
   ```

2. **Check if the cursor is at the end:**
   - The `more` variable returned by `fetch_page` is a boolean that indicates whether there are more records to fetch.
   - If `more` is `False`, it means there are no more records, and you can break out of the loop.

### Example Code
```python
from google.cloud import ndb

class MyModel(ndb.Model):
    # Define your model properties here
    pass

def fetch_records():
    page_size = 10
    query = MyModel.query()
    cursor = None

    while True:
        # Fetch a chunk of records
        records, next_cursor, more = query.fetch_page(page_size, start_cursor=cursor)
        
        # Process the records
        for record in records:
            # Your processing logic here
            print(record)

        # Check if there are more records
        if not more:
            break

        # Update the cursor for the next iteration
        cursor = next_cursor

# Call the function to fetch and process records
fetch_records()
```

### Explanation
- **`fetch_page(page_size, start_cursor=cursor)`**: This method fetches a page of results, returning a tuple containing the records, the next cursor, and a boolean indicating if there are more records.
- **`more`**: This boolean is `True` if there are more records to fetch, and `False` otherwise.
- **`next_cursor`**: This is the cursor for the next page of results. If `more` is `False`, `next_cursor` will be `None`.

By following this approach, you can effectively determine when there are no more records to fetch and handle the pagination correctly.