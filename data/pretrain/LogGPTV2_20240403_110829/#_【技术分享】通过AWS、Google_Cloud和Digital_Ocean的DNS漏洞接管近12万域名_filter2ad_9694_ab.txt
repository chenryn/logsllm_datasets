    ;; WHEN: Sat Sep 17 16:53:54 PDT 2016
    ;; MSG SIZE  rcvd: 253
现在，我们可以查询列表中的域名服务器，并找出目标域名的域名服务器：
    ubuntu@ip-172-30-0-49:~$ dig NS zz[REDACTED].net @a.gtld-servers.net.
    ; > DiG 9.9.5-3ubuntu0.8-Ubuntu > NS zz[REDACTED].net @a.gtld-servers.net.
    ;; global options: +cmd
    ;; Got answer:
    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 3529
    ;; flags: qr rd; QUERY: 1, ANSWER: 0, AUTHORITY: 2, ADDITIONAL: 3
    ;; WARNING: recursion requested but not available
    ;; OPT PSEUDOSECTION:
    ; EDNS: version: 0, flags:; udp: 4096
    ;; QUESTION SECTION:
    ;zz[REDACTED].net.                 IN      NS
    ;; AUTHORITY SECTION:
    zz[REDACTED].net.          172800  IN      NS      dns1.stabletransit.com.
    zz[REDACTED].net.          172800  IN      NS      dns2.stabletransit.com.
    ;; ADDITIONAL SECTION:
    dns1.stabletransit.com. 172800  IN      A       69.20.95.4
    dns2.stabletransit.com. 172800  IN      A       65.61.188.4
    ;; Query time: 9 msec
    ;; SERVER: 192.5.6.30#53(192.5.6.30)
    ;; WHEN: Sat Sep 17 16:54:48 PDT 2016
    ;; MSG SIZE  rcvd: 129
我们可以看到，这个域名的域名服务器为dns1.stabletransit.com和dns2.stabletransit.com，接下来我们就可以针对这两个域名服务器来进行操作了。
为了找出受该漏洞影响的域名，在这里我使用了我自己的[Zone文件](https://www.verisign.com/en_US/channel-resources/domain-registry-products/zone-file/index.xhtml)（适用于顶级域名.com和.net）。这些Zone文件中记录了每一个.com和.net域名所对应的域名服务器，通过这些数据我们就可以找出某一特定的云服务商所托管的全部域名了，因为这些域名服务器肯定属于这些云服务提供商。接下来，我们就可以使用一个Python脚本来向每一个域名发送请求，并检查SERVFAIL或REFUSED
DNS错误。最后，我们需要使用云服务管理面板来查看是否可以将这些域名添加至我们的账号中，以确认漏洞的存在。
**Google Cloud DNS（约2.5K个域名受到影响，状态：已修复）**
Google
Cloud提供了DNS管理服务，用户只需简单的操作便可以在其中添加新的域名。点击【[这里](https://cloud.google.com/dns/quickstart#create_a_managed_zone_and_a_record)】获取详细的操作步骤。一般情况下的操作步骤如下所示：
1\. 进入Google Cloud账号的DNS管理面板：
[
https://console.cloud.google.com/networking/dns](https://console.cloud.google.com/networking/dns)
2\. 点击“+ Create Zone”按钮；
3\. 创建一个新的Zone并为Zone和域名命名；
4\. 点击“Create”按钮创建这个新的Zone；
注意，域名服务器列表已经返回给你了，在本例中我所收到的信息如下图所示：
5\. 检查我们的域名服务器与列表中显示的域名服务器地址是否相匹配，如果不匹配的话，删除这个Zone文件然后再试一次；
6\. 当你最终获取到了相匹配的域名服务器列表之后，你也就获取到了目标域名DNS的完整控制权了；
**AWS（约54K个域名受到影响，状态：已部署多个缓解措施）**
亚马逊的DNS管理服务名叫Route53。他们拥有大量的域名服务器，这些域名服务器覆盖了多个域名和顶级域名。当用户发出请求时，系统会随机返回某个域名服务器的地址。一开始我还以为这是为了预防某种类型的漏洞而设计的，但是由于他们也会受到该漏洞的影响，所以我认为这种处理方式应该是为了确保顶级域名的DNS查询效率而设计的。
下面给出的这些操作步骤可以让你在几分钟之内接管目标域名：
1\. 使用AWS Route53的API为目标域名创建一个新的Zone；
2\.
检查返回的域名服务器信息是否正确，如果返回的域名服务器地址与目标域名服务器不匹配，则移除列表中的Zone。下图所示的是系统针对某一域名所返回的域名服务器：
3\. 如果返回的域名服务器与目标域名服务器不匹配，则删除Zone；
4\. 不断重复这个步骤，直到你获取到所有受影响的域名服务器；
5\. 现在，创建相应的DNS记录；
在下面这个示例中，我们为一个目标域名创建了四个Zone，每一个Zone包含有一个目标域名服务器：
使用这种方法，我们就可以成功接管大约五万四千多个域名了。
**Digital Ocean（约20K个域名受到影响）**
如果各位想要了解Digital Ocean的受影响情况，请参阅这份报告【[传送门](https://thehackerblog.com/floating-domains-taking-over-20k-digitalocean-domains-via-a-lax-domain-import-system/index.html)】。
**  
**
**攻击者能做什么？**
这个漏洞的攻击场景主要分为两种情况，及有针对性的和无针对性的。根据攻击者目标的不同，具体情况需要具体分析。
**针对性攻击**
在这种攻击场景下，攻击者的目标是某一特定的域名或者是属于攻击目标的多个域名。此时，攻击者可以创建一个脚本来对目标域名的域名服务器自动执行NS查询。脚本可以检测其是否接收到了SERVFAIL或REFUSED
DNS错误，如果目标域名不存在相应的DNS Zone，那么脚本便会立即尝试分配目标域名的域名服务器。
**无针对性的攻击**
这种攻击场景发生的可能性更高，在我看来，攻击者感兴趣的只是利用这些域名来传播恶意软件或者进行与垃圾邮件有关的活动。由于很多威胁情报服务在对域名进行评估时，会根据域名的使用时间、注册时长、以及注册成本来分析域名的安全性。因此，劫持一个已存在的域名远比注册一个新域名要划算得多。除此之外，攻击者还可以利用这些被劫持的域名来隐藏自己的身份，因为这些域名的WHOIS信息指向的并非是真正发动攻击的人。这样一来，即便是恶意攻击活动被发现了，其背后的始作俑者也可以全身而退。
**  
**
**总结**
这个漏洞是一个系统问题，目前主流的DNS服务提供商都会受到该漏洞的影响。除了本文中专门列出的提供商之外，还有很多其他受影响的DNS域名服务提供商没有提及到。因此，我们建议所有的DNS域名服务提供商尽快检查自己的域名系统中是否存在这个安全问题，如果存在的话，请尽快修复相应的漏洞。