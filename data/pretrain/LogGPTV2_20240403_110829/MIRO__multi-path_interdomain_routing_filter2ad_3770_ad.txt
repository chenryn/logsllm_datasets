source AS cannot always ﬁnd a path that avoids the offending AS.
If the AS-to-avoid lies on every path to the destination, then no pol-
icy can successfully circumvent the AS. We run a depth-ﬁrst search
algorithm on the graph to identify those nodes.
Multi-path routing performs very well for this application. Us-
ing the most strict multi-path policy, the success rate increases from
around 30% in the single-path routing case to around 65%. Relax-
ing the policy boosts that number further to around 72%.
If we
allow the tunnels to traverse paths that violate conventional export
policies, we can increase the success rate to around 75%. This
is not all that far from the source-routing policy’s success rate of
90%. Source routing achieves most of this gain by selecting paths
that conﬂict with the business objectives for intermediate ASes. For
example, source routing would allow two ISPs to communicate by
directing trafﬁc through a stub AS, which is not desirable.
Success Rate AS#/tuple
Path#/tuple
65.4%
72.9%
75.3%
2.55
2.18
2.00
a) Year 2000 data
15.9
27.3
71.5
Success Rate AS#/tuple
Path#/tuple
67.0%
74.6%
76.6%
2.83
2.38
2.22
b) Year 2003 data
28.7
44.3
106.8
Success Rate AS#/tuple
Path#/tuple
67.8%
73.7%
76.0%
2.80
2.53
2.38
c) Year 2005 data
36.6
58.9
139.0
Policy
strict/s
export/e
ﬂexible/a
Policy
strict/s
export/e
ﬂexible/a
Table 3: Comparing the intermediate states
5.3.2 Avoiding State Explosions
The next experiment quantiﬁes the amount of state that MIRO
must handle to negotiate a routing tunnel. We conduct this anal-
ysis by counting the number of ASes the source must contact, as
well as the number of candidate paths received before a success-
ful alternative is identiﬁed. For this test, we eliminate the cases
where today’s single-path routing would be successful, as MIRO
would not need to establish tunnels on alternate paths. Table 3 lists
the success rate of multi-path routing, the average number of ASes
queries per (source, target, avoid) tuple, and the average number of
paths obtained in each case.
For the 2005 data, when we use the ﬂexible policy instead of the
strict policy, the average number of ASes contacted decreases to
2.38 from 2.80, which seems to suggest that the source AS initiates
fewer negotiations. However, by switching to ﬂexible policy from
the strict one, the average number of paths increases from 36.6 to
139, so we actually need to check more paths although there are
fewer negotiations. Similar trends can be seen in other years, be-
cause the more ﬂexible policy tends to allow more candidate routes
in the responding AS. Comparing across the years, the number of
paths per tuple increases with time because of the increasing con-
nectivity of the AS topology.
5.3.3 Incremental Deployment
In the next experiment, we show that MIRO is effective even
if only a few ASes adopt the enhanced protocol. In our tests, we
found that a handful of highly connected Tier-1 ASes contribute
to most of the path alternatives, if export policies are respected.
Referring back to Figure 5, only 0.2% of the ASes has more than
200 neighbors, and less than 1% has more than 40. However, these
ASes play an important role in MIRO. In Figure 7, the x-axis is
the percentage of nodes that have adopted MIRO, plotted on a log-
arithmic scale. We assume that the source AS can only establish
tunnels with one of these nodes, in order of decreasing node degree
to capture the likely scenario where the nodes with higher degree
adopt MIRO ﬁrst. The y-axis plots the ratio of success in ﬁnding
h
t
a
P
e
v
i
t
a
n
r
e
t
l
i
i
A
g
n
d
n
F
e
t
a
R
s
s
e
c
c
u
S
0.64
0.39
0.23
0.14
0.08
0.05
 0.01
2005 respecting strict
2005 respecting export
2005 violating export
 0.1
 1
 10
 100
Percentage of Most Connected Nodes Adopting the New Policy
flexible policy
strict policy
 10000
 1000
 100
s
b
u
t
s
d
e
m
o
h
-
i
t
l
u
m
f
o
r
e
b
m
u
N
 10
 20
 30
 40
 50
 60
 70
 80
 90
Percentage of traffic that can be moved
Figure 7: Incremental deployment
Figure 8: Multi-homed stub ASes with power nodes
a path that avoids the offending AS, using as base the numbers for
ubiquitous deployment and the most ﬂexible policy.
The curves in Figure 7 conﬁrm that the most connected nodes
contribute most of the beneﬁt. If only the 0.2% most-connected
nodes (i.e., nodes with more than 200 neighbors) adopt MIRO, we
could already have around 40% to 50% of the total gain. If the 1%
most-connected nodes (i.e., with degree greater than 40) adopted
MIRO, we can get around 50% to 75% of the beneﬁt; these nodes
include many of the tier-1 and tier-2 ISPs. For the sake of compar-
ison, we also evaluated the effects of low-degree nodes adopting
the protocol ﬁrst. In this analysis, we see success rates less than
10% until 95% of the nodes adopt MIRO. Therefore, it is not very
effective to deploy the new protocol at the edge ﬁrst. Fortunately, it
is much more likely that a small number of large ASes would adopt
MIRO than a large number of small ASes. Also, when a large ISP
adopts MIRO, all of its customers immediately gain more ﬂexibil-
ity, providing a nice motivation for adopting the protocol.
5.4 Controlling Incoming Trafﬁc
Next, we present a brief evaluation of a second application of
multi-path routing. In this example, we focus on multi-homed stub
ASes that want to exert control over inbound trafﬁc to balance load
over multiple incoming links. Evaluating a trafﬁc-engineering ap-
plication is difﬁcult without a global view of the offered trafﬁc, so
our results should be viewed as a back-of-the-envelope analysis to
demonstrate the role that MIRO can play in this application. In the
absence of trafﬁc measurements, we make a number of simplify-
ing assumptions. First, we assume that each source AS generates
equal amounts of trafﬁc. This allows us to estimate the total trafﬁc
on each incoming link simply by counting the number of source
ASes using this link. Second, we assume all the ASes that transit
through an intermediate AS for transit would always use this AS
to send trafﬁc to the destination. This allows us to calculate the
amount of trafﬁc that a single AS could move, if asked to switch to
a different route.
We call a node a “power node” if it lies on the AS path to the
destination AS for many source ASes. We evaluate the beneﬁts of
the destination AS requesting the power node to switch to an al-
ternate path that traverses a different incoming link. If that power
node advertises the new default path to all its neighbors, hopefully
many neighbors will also switch to the new path. We evaluate this
application by showing how many stub ASes can ﬁnd at least one
“power node” that can potentially move designated amount of traf-
ﬁc using this method. In Figure 8 both the ﬂexible policy and the
strict policy are examined on the 2005 data.
In total, we tested
10,383 multi-homed stub ASes. The ﬁgure shows that around 90%
of those stubs have at least one power node that can move more
than 10% of the incoming trafﬁc. Also, around half of them has
one power node that can move at least 40% and 25% of trafﬁc un-
der the ﬂexible and strict policy respectively.
We did some further analysis on the power nodes and found that
more than 90% are nodes with more than 200 neighbors—most
likely tier-1 ISPs. Immediate neighbors of the destination AS con-
stitute only 9% of the power nodes; around 68% of the power nodes
are two hops away from the destination AS. Therefore, we ﬁnd that
MIRO’s ability to send requests to non-immediate neighbors offers
a signiﬁcant gain, and being able to negotiate with tier-1 ISPs, in
particular, is especially useful.
5.5 Summary
Our experiments show that MIRO is very effective in helping
ASes achieve their policy objectives. In the avoid-an-AS applica-
tion, MIRO helps increase the success rate from 30% to 76% by
establishing only one tunnel for a (source, destination) pair. Al-
though source routing can push the success rate to 90%, it requires
huge changes to the routing framework and must exploit unusual
paths that traverse stub ASes. In the incoming-trafﬁc-control appli-
cation, we ﬁnd that 90% of the stub ASes can move around 10% of
trafﬁc and half of them can move at least a quarter of the trafﬁc by
negotiating with a single intermediate AS.
We also showed that most of the alternate routes are provided
by the most-connected nodes. This conclusion may lead people to
conclude that MIRO beneﬁts the big ISPs most. Yet, MIRO is de-
signed to expose the existing candidate paths in the Internet, so it
is not surprising that the participation of the well-connected ASes
would provide the most beneﬁt. Yet, these results are quite dra-
matic, suggesting that even early adopters would achieve a signif-
icant gain, especially if ASes can negotiate with ASes that are not
immediate neighbors.
6. ROUTING POLICIES
The policy speciﬁcation language is intentionally excluded in our
design because the underlying mechanisms should give users maxi-
mum ﬂexibility in picking and expressing their own policies. How-
ever, to give the readers a concrete picture, we will present some
sample policies and describe how they can be conﬁgured. We start
by describing how policy conﬁguration is done in current Internet
and proceed with comparison to the multi-path case.
6.1 Policy Conﬁguration in Current Internet
The current BGP speciﬁcation [9] only describes how two BGP
neighbors exchange information and the decision process, without
neighbor 12.34.56.1 route-map FIX-LOCALPREF in
neighbor 12.34.56.1 remote-as 1
!
route-map FIX-LOCALPREF permit 10
match as-path 200
set local-preference 250
!
!
deﬁning routing policy speciﬁcations. In response, various vendors
have come up with their own policy speciﬁcation languages and
tools. BGP policies can be divided into import policies and export
policies. Import policies deﬁne which routes to ﬁlter and how at-
tributes such as local preference should be set for the remaining
announcements. Export policies ﬁlter the paths advertised to each
neighbor and adjust the route attributes. The BGP decision process
selects the route with highest local preference. If several routes are
equal on local preference, a set of steps are applied to break ties,
such as comparing AS-path length and other route attributes.
Cisco designed the route-map command that can be used to con-
ﬁgure policy routing. The operator can specify the actions to be
taken when matching condition is satisﬁed. For example, the fol-
lowing route-map command speciﬁes that any route received from
12.34.56.1 that matches the ﬁlter parameters set in AS access list
200 (“never go through AS 312”) will be accepted and have its local
preference set to 250.
Cisco route-map example
router bgp 100
ip as-path access-list 200 deny _312_
6.2 Multi-path Routing Policies
In addition to deﬁning how to ﬁlter and manipulate route an-
nouncements, we must also deﬁne how negotiations should be con-
ducted. We divide the policies into two parts: negotiation rules
that deal with establishing and managing negotiations, and route-
selection rules that ﬁlter and rank the available alternatives. In the
requesting AS, the rules should specify when to trigger negotiation
and whom to negotiate with. In the responding AS, the rules should
describe when and from whom new negotiations will be allowed.
• Requesting: when to trigger negotiation Negotiations should
only be triggered if none of the current routes satisfy desired
property. Therefore the conditions triggering negotiations
can be checked whenever routes change.
• Requesting: whom to negotiate with The requesting AS has
to guess which AS may have appropriate candidate routes;