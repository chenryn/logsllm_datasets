httpd -t	# 检查配置
setenforce 0
firewall-cmd --zone=public --add-service=http --permanent
firewall-cmd --zone=public --add-service=https --permanent
firewall-cmd --reload
service httpd start
```
---
## 目录结构
**apache2**
`/etc/apache2`
- apache2.conf : 这是服务器的主要配置文件。几乎所有的配置都可以在这个文件中完成，不过为了简单起见，建议使用单独的指定文件。这个文件将配置默认值，是服务器读取配置细节的中心点。
- ports.conf : 这个文件用于指定虚拟主机应该监听的端口。如果你在配置 SSL，请务必检查这个文件是否正确。
- conf.d/ : 这个目录用于控制 Apache 配置的特定方面。例如，它经常被用来定义 SSL 配置和默认安全选择。
- sites-available/ : 这个目录包含了所有定义不同网站的虚拟主机文件。这些文件将确定哪些内容被服务于哪些请求。这些是可用的配置，而不是活动的配置。
- sites-enabled/ : 这个目录确定了实际使用的虚拟主机定义。通常，这个目录由 "sites-available"目录中定义的文件的符号链接组成。
- mods-[enabled,available]/ : 这些目录在功能上与网站目录类似，但它们定义了可以选择加载的模块。
---
## apache+mod_ssl
- 配置 http+https 服务，建立一个 web 站点;
0. 安装
```bash
yum -y install httpd
yum -y install mod_ssl
```
1. 使用 www.abc.com 作为域名进行访问;
```bash
nslookup www.abc.com
```
2. 网站根目录为 /var/www/html;
```vim
vim /etc/httpd/conf/httpd.conf
	DocumentRoot "/var/www/html"
	ServerName  xx.xx.xx.xx:80
```
3. Index.html 内容使用 fubuki!fubuki!fubuki!fubuki!;
```vim
vim var/www/html/index.html
fubuki!fubuki!fubuki!fubuki!
```
```bash
service httpd restart 或 systemctl start httpd
记得关防火墙
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --reload
```
4. 配置 https 服务使原站点能使用 https 访问.
```bash
# 查看证书密钥位置
sed -n '/^SSLCertificateFile/p;/^SSLCertificateKeyFile/p '/etc/httpd/conf.d/ssl.conf
# 删除原来的密钥
cd /etc/pki/tls/private/
rm -f localhost.key
# 新建密钥文件
openssl genrsa 1024 > localhost.key
# 删除原来的证书
cd ../certs
rm -rf localhost.crt
# 新建证书文件
openssl req -new -x509 -days 365 -key ../private/localhost.key -out localhost.crt
防火墙放行 https，重启服务，测试
```
设置 SELINUX 状态为 Disabled;
```bash
setenforce 0
```
```vim
vim /etc/selinux/config
SELINUX=disabled
```
---
## 配置https
**使用 Let’s Encrypt 直接上 https**
```bash
yum install -y yum-utils
yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional
yum install -y certbot python2-certbot-apache
certbot --apache
firewall-cmd --zone=public --add-service=https --permanent
firewall-cmd --reload
```
**mod_ssl 为 linux 提供 web 证书**
```bash
cd /etc/pki/CA/private
openssl genrsa 2048 > cakey.pem
openssl req -new -x509 -key cakey.pem > /etc/pki/CA/cacert.pem
cd /etc/pki/CA
touch index.txt     # 索引问文件
touch serial        # 给客户发证编号存放文件
echo 01 > serial
mkdir /etc/httpd/ssl
cd /etc/httpd/ssl
openssl genrsa 1024 > httpd.key
openssl req -new -key httpd.key > httpd.csr
openssl ca -days 365 -in httpd.csr > httpd.crt
# 使用 cat /etc/pki/CA/index.txt 查看 openssl 证书数据库文件
cat /etc/pki/CA/index.txt
```
**mod_ssl 为 windows 提供 web 证书**
```bash
cd /etc/pki/CA/private
openssl genrsa 2048 > cakey.pem
openssl req -new -x509 -key cakey.pem > /etc/pki/CA/cacert.pem
cd /etc/pki/CA
touch index.txt   # 索引问文件
touch serial      # 给客户发证编号存放文件
echo 01 > serial
cd
openssl genrsa 1024 > httpd.key
openssl req -new -key httpd.key > httpd.csr
openssl ca -days 365 -in httpd.csr > httpd.crt
openssl pkcs12 -export -out server.pfx -inkey httpd.key -in httpd.crt
# 自己把 server.pfx 导出给 windows2008 主机
```
**向 windows CA 服务器申请证书**
```bash
Openssl genrsa 2048 > httpd.key
openssl req -new -key httpd.key -out httpd.csr
```
通过这个 csr 文件在内部的 windows CA 服务器上申请证书
---
## 配置php
```bash
若之前安装过其他版本 PHP,先删除
yum remove php*
rpm 安装 PHP7 相应的 yum 源
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
yum install php70w php70w-fpm
php -v                # 查看PHP版本
service php-fpm start # 要运行 PHP 网页,要启动 php-fpm 解释器
```
```bash
vim /etc/httpd/conf/httpd.conf
# 将Require all denied 改为Require all granted
    AllowOverride none
    Require all granted
# 增加一行 AddType application/x-httpd-php .php
    AddType application/x-httpd-php .php
# 增加索引页 index.php,在 DirectoryIndex index.html 后面 增加索引页 index.php
    DirectoryIndex index.html index.php
```
检查配置文件 httpd.conf 的语法是否正确
```bash
apachectl -t
```
检测 php 是否正常解析
```
echo ""  > /var/www/html/1.php
service httpd restart
firewall-cmd --zone=public --add-service=http --permanent
firewall-cmd --reload
```
访问 `机器相应ip/1.php`
---
## 泛解析
```bash
    ServerName "www.ffffffff0x.com"       # 默认域名
    ServerAlias *.ffffffff0x.com          # 用*表示泛域名
```
---
## 修改 header 头
以 debian 为例,修改 /etc/apache2/conf-available/security.conf
将内容中 ServerTokens 对应的值改为 Prod
```diff
-- ServerTokens OS
++ ServerTokens Prod
```
前后区别
![](../../../../assets/img/Integrated/Linux/实验/httpd/1.png)
![](../../../../assets/img/Integrated/Linux/实验/httpd/2.png)
---
## Source & Reference
- [Linux下Apache与httpd的区别与关系](https://blog.csdn.net/yxfabcdefg/article/details/32324035)
- [Apache对域名的泛解析方法集锦](https://blog.csdn.net/beyondhjjyt/article/details/8939682)