          { v10 = 184; v11 = -1; goto LABEL_242; }
          // ...
          if ( sa_findKeyword((int)v6, 0xB6) == 1 ) // RecoverAdminPassword
          { v12 = 182; goto LABEL_184; }
          // ...
        case 7u:  // 对应service：ParentalControl
          if ( sa_findKeyword((int)v6, 71) == 1 ) // GetAllMACAddresses
          { v10 = 71; v11 = -1; goto LABEL_242; }
          // ...
    LABEL_184:
          wrap_vprintf(3, "%s()n", "sa_checkSessionID");
          v13 = strstr(v6, "SessionID");
          if ( !v13 )
            goto LABEL_759;
          v14 = v13 + 9; v15 = strchr(v13 + 9, 62); v16 = strstr(v14, "= v15 + 1) ? (v19 = v16 - (_BYTE *)v18) : (v19 = (_BYTE *)v18 - v16), v19 
    SetNetgearDeviceName        // SetDeviceNameIconByMAC 或 SetDeviceInfoByMAC 也行
    123
###  认证绕过
在前面的分析中，选择通过`case
0`中的`SetNetgearDeviceName`(或`SetDeviceNameIconByMAC`、`SetDeviceInfoByMAC`)去触发漏洞，这就涉及到认证绕过漏洞了。
    signed int __fastcall sa_method_check(char *a1, int a2, char *a3, signed int a4)
    {
      request_ptr = a1;   // point to the start of http request
      v5 = a2; v6 = a3; v7 = a4; v8 = 0;
      v9 = dword_8F5B8;
      LOBYTE(dword_BFEC4) = 0;
      *(_WORD *)((char *)&dword_BFEC4 + 1) = 0;
      HIBYTE(dword_BFEC4) = 0;
      if ( dword_8F5B8 == 1 )
        return sub_2BCE0(0x20000, aXmlVersion10En_87, v5, v9);
      v11 = stristr(request_ptr, aSoapaction_0);    // (1) 查找"SOAPAction:"
      if ( !v11 )
        return -1;
      v12 = aDeviceinfo;
      v13 = (const char *)(v11 + strlen(aSoapaction_0));
      while ( 1 )  // (2) 在表中查找具体的SOAPAction操作, 并获取对应的soap_action type
      {
        v14 = v12; dword_9DCF4 = (int)v12; v12 += 30;
        if ( stristr(v13, v14) )
          break;
        if ( ++v8 == 11 )
        {
          soap_action_index = -1; goto LABEL_10;
        }
      }
      soap_action_index = v8;
    LABEL_10:
      // ...  
      v19 = (const char *)stristr(request_ptr, "Cookie:");
      v20 = (const char *)stristr(request_ptr, "SOAPAction:");
      v21 = (size_t)v20;
      v22 = strchr(v20, 'r');
      *v22 = v18; v23 = v21; n = v22;
      v24 = stristr(v23, "service:DeviceConfig:1#SOAPLogin") == 0;
      if ( !v19 )
        v24 = 0;
      *n = 13;
      if ( !v24 || (v25 = strchr(v19, 'r'), (v87 = v25) == 0) )
      {
    LABEL_52:
        strncpy((char *)&unk_D9050, "", 0x13u);
        v44 = inet_ntoa((struct in_addr)v6);
        strncpy((char *)&unk_D9050, v44, 0x13u);
        v45 = inet_ntoa((struct in_addr)v6);
        v46 = (const char *)acosNvramConfig_get("lan_ipaddr");
        if ( strcmp(v45, v46)  // (3) 需保证判断条件为false
          && strncmp(v13, " urn:NETGEAR-ROUTER:service:ParentalControl:1#Authenticate", 0x3Au)
          && strncmp(v13, " "urn:NETGEAR-ROUTER:service:ParentalControl:1#Authenticate"", 0x3Cu)
          && strncmp(v13, " urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin", 0x34u)
          && strncmp(v13, " "urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin"", 0x36u)
          && strncmp(v13, " urn:NETGEAR-ROUTER:service:DeviceInfo:1#GetInfo", 0x30u) )
        {
          // ...
        }
        goto LABEL_27;
      }
      // ...
    LABEL_27:
      if ( strcmp((const char *)dword_9DCF4, "ParentalControl") )
        goto LABEL_28;
      // ...
    LABEL_28:
      if ( soap_action_index == -1
        || (v31 = (const char *)dword_9DCF4,
            wrap_vprintf(3, "%s()n", "sa_saveXMLServiceType"),
            memset(byte_9FA30, 0, 0x64u),
            (v32 = stristr(request_ptr, "urn:")) == 0)
        || (v33 = (const void *)stristr(v32 + 4, ":")) == 0
        || (v34 = stristr(request_ptr, v31)) == 0 )
      {