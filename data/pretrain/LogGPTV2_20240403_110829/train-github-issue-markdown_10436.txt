To ensure that all processes in a Celery worker's process pool are restarted, you may need to take a more comprehensive approach than just using the `pool_restart` command. The `pool_restart` command only restarts one process at a time, and other processes might not restart until new tasks are received.

### Problem Description
When using the `pool_restart` command, only one process in the worker's process pool is restarted. The other processes may only restart after the worker receives additional tasks. For example, with a worker started with concurrency set to 2 (`-c 2`), sending the `pool_restart` command via `tasks.app.control.broadcast('pool_restart')` results in only one process being restarted immediately. The other process remains active until the worker is terminated or receives new tasks.

### Example
Consider the following setup:
- Tasks defined in this Gist: [https://gist.github.com/lebinh/165f7edb95daa08bee54](https://gist.github.com/lebinh/165f7edb95daa08bee54)
- Start a worker with concurrency 2:
  ```sh
  celery -A tasks worker -l info -c 2
  ```
- Send the `pool_restart` command:
  ```python
  tasks.app.control.broadcast('pool_restart')
  ```

The log output shows:
```plaintext
[2014-06-05 18:53:43,310: WARNING/Worker-1] worker process shutdown
[2014-06-05 18:53:44,350: WARNING/Worker-3] worker process init
^C
worker: Hitting Ctrl+C again will terminate all running tasks!
worker: Warm shutdown (MainProcess)
[2014-06-05 18:54:05,368: WARNING/Worker-2] worker process shutdown
[2014-06-05 18:54:05,368: WARNING/Worker-3] worker process shutdown
```
In this case, Worker-1 is restarted, but Worker-2 remains active until the worker is terminated.

### Solution
To ensure all processes in the worker's process pool are restarted, you can use a combination of the `pool_restart` command and a warm shutdown followed by a restart of the entire worker. Here are the steps:

1. **Send the `pool_restart` command** to restart the first process.
2. **Gracefully shut down the worker** to ensure all remaining processes are terminated.
3. **Restart the worker** to bring up a fresh set of processes.

#### Example Code
```python
from celery import current_app

# Step 1: Restart the first process
current_app.control.broadcast('pool_restart')

# Step 2: Gracefully shut down the worker
current_app.control.shutdown()

# Step 3: Restart the worker (this step needs to be done manually or through a script)
# You can use a system-level command or a process manager like Supervisor to restart the worker
```

### Manual Restart
If you are managing the worker manually, you can use the following steps:

1. **Send the `pool_restart` command**:
   ```python
   tasks.app.control.broadcast('pool_restart')
   ```

2. **Gracefully shut down the worker**:
   ```sh
   # Press Ctrl+C to initiate a warm shutdown
   ```

3. **Restart the worker**:
   ```sh
   celery -A tasks worker -l info -c 2
   ```

### Environment
- **Celery Version**: 3.1.11 (Cipater)
- **Operating System**: Ubuntu 14.04
- **Platform**: Amazon EC2

By following these steps, you can ensure that all processes in the worker's process pool are restarted.