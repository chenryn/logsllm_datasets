### 第3章 基本的 Bash Shell 命令

#### 3.1 使用 `cd` 命令切换目录
在任何包含子目录的目录中，可以使用带有相对文件路径的 `cd` 命令。相对路径中可以使用两个特殊字符来表示目录位置：
- 单点符（`.`）：表示当前目录。
- 双点符（`..`）：表示当前目录的父目录。

虽然可以在 `cd` 命令中使用单点符，但这样做并没有实际意义。在本章后面的部分，你将看到另一个命令如何有效地利用单点符。

双点符在目录层级间移动时非常有用。例如，如果你在主目录下的 `Documents` 目录中，想要切换到主目录下的 `Downloads` 目录，可以执行以下命令：
```bash
christine@server01:~/Documents$ pwd
/home/christine/Documents
christine@server01:~/Documents$ cd ../Downloads
christine@server01:~/Downloads$ pwd
/home/christine/Downloads
```
双点符先将用户带到上一级目录（即用户的主目录），然后 `/Downloads` 部分再将用户带到下一级目录（即 `Downloads` 目录）。如果需要向上多级目录切换，可以使用多个双点符。例如，从主目录切换到 `/etc` 目录：
```bash
christine@server01:~$ cd ../../etc
christine@server01:/etc$ pwd
/etc
```
然而，在这种情况下，使用绝对路径 `/etc` 会更简洁。

为了方便阅读，本节中的 shell 提示符包含了额外信息。但在本书后续的例子中，我们将只使用简单的 `$` 提示符。

既然你已经知道如何遍历文件系统和验证当前工作目录，接下来就可以开始探索各种目录中的内容了。

#### 3.5 文件和目录列表
要查看系统中的文件，可以使用 `ls` 命令。本节将介绍 `ls` 命令及其用于格式化输出的选项。

##### 3.5.1 基本列表功能
`ls` 命令最基本的形式会显示当前目录下的文件和目录：
```bash
$ ls
Desktop  Documents  Downloads  Music  Pictures  Templates  Videos
2andadoxosAudosep*soduexe  test_file
```
注意，`ls` 命令输出的列表是按字母顺序排序的。如果终端仿真器支持彩色显示，`ls` 命令还可以用不同的颜色区分不同类型的文件。这由 `LS_COLORS` 环境变量控制（将在第6章中详细讲解）。

如果没有安装彩色终端仿真器，可以使用带 `-F` 参数的 `ls` 命令来区分文件和目录：
```bash
$ ls -F
Desktop/  Documents/  Downloads/  Music/  Pictures/  Templates/  Videos/
2andadoxosAudosep*soduexe  my_script*  test_file
```
`-F` 参数会在目录名后加上正斜线（`/`），并在可执行文件名后加上星号（`*`），以便于识别。

基本的 `ls` 命令有时可能会让人误解，因为它默认不会显示隐藏文件。隐藏文件通常是文件名以点号开头的文件。要显示隐藏文件，可以使用 `-a` 参数：
```bash
$ ls -a
.  ..  .bash_history  .bash_logout  .bashrc  Desktop  Documents  Downloads  Music  Pictures  Templates  Videos
2andadoxosAudosep*soduexe  my_script  test_file
```

`-R` 参数是一个递归选项，它会列出当前目录及其所有子目录中的文件：
```bash
$ ls -R
.:
Desktop  Documents  Downloads  Music  Pictures  Templates  Videos
2andadoxosAudosep*soduexe  my_script  test_file

./Desktop:
...

./Documents:
...
```

##### 3.5.2 显示长列表
`-l` 参数会产生长列表格式的输出，包含每个文件或目录的更多相关信息：
```bash
$ ls -l
total 48
drwxr-xr-x 2 christine christine 4096 Apr 22 20:37 Desktop
drwxr-xr-x 2 christine christine 4096 Apr 22 20:37 Documents
drwxr-xr-x 2 christine christine 4096 Apr 22 20:37 Downloads
-rw-r--r-- 1 christine christine 8980 Apr 22 13:36 examples.desktop
...
```
长列表格式的每一行包含以下信息：
- 文件类型（如目录 `d`、文件 `-`）
- 文件权限
- 硬链接数
- 文件属主
- 文件属组
- 文件大小（字节）
- 最后修改时间
- 文件名或目录名

##### 3.5.3 过滤输出列表
默认情况下，`ls` 命令会输出目录下的所有非隐藏文件。如果需要过滤输出，可以使用通配符：
- 问号（`?`）代表一个字符
- 星号（`*`）代表零个或多个字符

例如，查找所有以 `my` 开头的文件：
```bash
$ ls -l my*
-rw-r--r-- 1 christine christine 0 May 21 13:25 my_file
-rw-r--r-- 1 christine christine 0 May 21 13:25 my_scrapt
-rwxr-xr-- 1 christine christine 54 May 21 11:26 my_script
```

可以使用中括号 `[ ]` 来指定字符范围：
```bash
$ ls -l f[a-i]ll
-rw-r--r-- 1 christine christine 0 May 21 13:44 fall
-rw-r--r-- 1 christine christine 0 May 21 13:44 fell
-rw-r--r-- 1 christine christine 0 May 21 13:44 fill
```

可以使用感叹号 `!` 排除特定字符：
```bash
$ ls -l f[!a]ll
-rw-r--r-- 1 christine christine 0 May 21 13:44 fell
-rw-r--r-- 1 christine christine 0 May 21 13:44 fill
```

#### 3.6 处理文件
Shell 提供了许多在 Linux 文件系统上操作文件的命令。本节将介绍一些基本的文件处理命令。

##### 3.6.1 创建文件
可以使用 `touch` 命令创建空文件：
```bash
$ touch test_one
$ ls -l test_one
-rw-r--r-- 1 christine christine 0 May 21 14:17 test_one
```
`touch` 命令还可以更改文件的时间戳：
```bash
$ touch test_one
$ ls -l --time=atime test_one
-rw-r--r-- 1 christine christine 0 May 21 14:35 test_one
```

##### 3.6.2 复制文件
`cp` 命令用于复制文件和目录：
```bash
$ cp test_one test_two
```
当源文件和目标文件都是文件名时，`cp` 命令将源文件复制为新文件，并以目标文件名命名。新文件具有新的修改时间。