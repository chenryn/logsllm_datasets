.
(13)
Non-stationary conditionally independent model
(NCIM): Suppose the mean total traﬃc ¯s(tk) is known,
but no temporal correlation information is available.
The MaxEnt model is non-stationary and conditionally
independent, with X(tk) independent ∀k, and
Xi,j(tk) ∼ Exp(cid:18) N 2
¯s(tk)(cid:19) , ∀i, j, k.
(14)
This model assumes no information on the row and col-
umn sums in each interval. If we also knew the mean
row and column sums, i.e., r(tk) and c(tk), ∀k then,
X(tk) = ¯s(tk)U(tk)V(tk)T,
(15)
with Ui(tk) ∼ Exp(cid:16) ¯s(tk)
ri(tk)(cid:17) and Vj(tk) ∼ Exp(cid:16) ¯s(tk)
cj (tk)(cid:17).
Including covariance information of r(tk) and c(tk) leads
once again to the equivalent truncated normal forms.
One interesting use of this model is for TMs of net-
works large enough that diﬀering timezones distort traf-
ﬁc patterns. Traﬃc cycles are determined by user be-
havior, which is in turn determined by timezones. In a
globe-spanning network, for example, users the side of
the world experiencing daytime might be transmitting
traﬃc, while users on the other side might not.
For instance, the Abilene network [23] spans North
America, with Points-of-Presence (PoPs) concentrated
on the East and West Coast of the United States. A
simple way to model the 3 hour diﬀerence in the traﬃc
cycle between the coasts is to set ri(tk) as a delayed,
or phase shifted, version of a base constraint ˜r(tk) (and
similarly for cj(tk)). Once ri(tk) and cj(tk) have been
generated, we generate the NCIM using (15).
In §5, we study the spatiotemporal characteristics of
the above two models using Principle Component Anal-
ysis (PCA), which allows us to isolate traﬃc compo-
nents. We will ﬁnd that the models emulate some char-
acteristics of real traﬃc, despite their simplicity.
In particular, these models are low rank, a property
shared by real TMs [3, 19, 20, 48]. The MGM actually
has a very good rank-1 approximation, and is in fact
a rank-1 (three dimensional) tensor [18]. The NCIM
model is hardly more complex, but the simple timezone
shift described above increases its rank. However, the
rank remains low.
Neither of these models can capture the spikes also
seen in real traﬃc, leading us to the next model.
Spike model: Anomalies occur in networks due to
worm propagation, distributed Denial-of-Service attacks,
or ﬂash crowds, causing a sudden spike in demand of a
speciﬁc resource in the network [38]. These spikes have
been demonstrated to be a feature of actual traﬃc in
various studies [20,33]. Here, we present a simple model
for anomalies.
Under the constraint kX k0 = K (and non-negativity),
i.e., exactly K entries of X are non-zero and all others
are zero, and setting the mean magnitude of the non-
zero entries to A, the MaxEnt model is
Xi,j(tk) ∼(Exp(cid:0)A−1(cid:1) ,
0,
if (i, j, k) ∈ S,
otherwise,
(16)
where S is the support of non-zero entries of size K
sampled uniformly without replacement from the set
{1, 2, · · · , N }×{1, 2, · · · , N }×{0, 1, · · · , M −1}. When
K = 1, the model is an example of the peak load model
[6] which is used to test network designs.
Traﬃc class constraints: Network traﬃc can often
be decomposed into several classes. For instance, dif-
ferent network services or applications possess diﬀerent
characteristics, so naturally, there are separate informa-
tion about each. Assuming no dependencies, the prior
information on each of them are to be accounted for
separately by MaxEnt.
Several works provide strong evidence of distinct traf-
ﬁc behaviors. Both [20, 33] showed that OD ﬂows can
be divided into three groups: large ﬂows with a strong
diurnal cycle, spike-like ﬂows corresponding to anoma-
lies, and small, IID white noise-like ﬂows. Suppose we
know that the TM process X = X D + X S + X N , where
X D comprises of large traﬃc ﬂows with a distinct di-
urnal cycle, while X S and X N accounts for anomalies
(spikes) and small noise-like ﬂows respectively. With
no correlation information between these components,
MaxEnt suggests that the processes X D, X S and X N
are independent. This means that we are free to solve
for the MaxEnt distributions of these processes sepa-
rately. To model large ﬂows, we take X D to be the
MGM. The spiky traﬃc process X S is modeled by the
spike model and IID white noise process X N by the
independent entries model.
Traﬃc classes also apply to traﬃc traversing peer-
ing or access links in a network. For instance, let the
total traﬃc T (tk) be known for all k. Denote the ac-
cess and peer node sets as A and P respectively. Now
there are 4 classes of traﬃc: access-to-access (A, A),
access-to-peer (A, P), peer-to-access (P, A) and peer-
to-peer (P, P). Given the average total traﬃc con-
straints TA,A(tk), TA,A(tk), TA,A(tk) and TP,P (tk), with
585qm,n(tk)Um(tk)Vn(tk)T,
(17)
Pm,n∈{A,P} Tm,n(tk) = T (tk) [47], the model is
X(tk) = T (tk) Xm,n∈{A,P}
such that Pm,n∈{A,P} qm,n(tk) = 1.
Here, source and destination nodes are independent
only within their traﬃc class. UA(tk) and UP (tk) are
equivalent to source independence stratiﬁed according
to access and peering nodes. There is independence
in the destination nodes through VA(tk) and VP (tk).
This form is equivalent to the generalized gravity model
[46, 47], a successor to the gravity model [45], where in-
dependence is only assumed within each class of traﬃc,
leading to the notion of conditional independence.
Providing information on traﬃc classes is a natural
method to include additional data, and increase the
rank of the matrices if such is seen to be too low in
some problems.
General constraints: The constraints we have consid-
ered only scratch the surface of all possible constraints
on TMs, for instance, nonlinear constraints.
In the
examples above, it is assumed that the information is
given without error. If one wasn’t conﬁdent about the
mean information of the TM, say, a mean squared error
(Frobenius norm) constraint could be used, i.e.,
EkX(tk) − ¯XkF ≤ ǫ, ∀k,
(18)
where ǫ > 0 is a scalar value. Essentially, this expands
the set of constraints from just linear to the more gen-
eral set of convex constraints.
Convex constraints guarantee that (3) has a unique
solution. Non-convex constraints may possibly arise in
certain applications. In this case, admissible solutions
have to be tested to ﬁnd the global maximum of (3).
In practice, non-convex constraints are unlikely for
In fact, a priori information from measure-
WANs.
ments can often be expressed as simple linear constraints,
since linear network measurements are easier to imple-
ment (e.g., internal router byte counts or SNMP mea-
surements). Linear constraints, besides guaranteeing
the existence of the MaxEnt model, typically result in
simple models with closed forms, so generating these
models are easy despite the high dimensionality of X .
However, in data centers, non-convex constraints might
arise due to entry sparsity and clustering constraints of
the server-to-server TMs [1, 2, 16].
Nonlinear constraints are unlikely to lead to analyti-
cally tractable closed forms of the distribution, but nu-
merical optimization methods can be used to compute
the Lagrange multipliers of (4) instead.
4. PROPERTIES
4.1 Model properties
We brieﬂy remark about the models’ connection to
the axioms of MaxEnt. The seminal work of Shore and
Johnson [34] viewed MaxEnt as a natural consequence
of four (desirable) inference axioms:
A1 uniqueness: the solution of the inference problem
must be unique,
A2 consistent: either the optimal solution from a ﬁner
set of constraints must also be an admissible solu-
tion in a coarser set of constraints, or there is no
solution at all in the ﬁner set,
A3 system independence:
information on several in-
dependent systems can be accounted either jointly,
or considered for each system separately, and
A4 subset independence: information of independent
subsystems (i.e., in a system) can be accounted
either jointly over the whole system, or separately
for each subsystem.
These axioms explicitly deﬁne the assumptions our
synthesis models satisfy. Generally, modeling relies heav-
ily on two principles: parsimony of parameters and in-
dependence between components. Both are inherent in
MaxEnt: parsimony is achieved by eliminating extrane-
ous assumptions, and information of components (and
subcomponents) are considered separately, in the ab-
sence of evidence that proves otherwise.
Thus, given convex constraints, Axiom A1 guaran-
tees a unique model. Models only get more reﬁned as
new information is given, by Axiom A2. The indepen-
dence between the spatial and temporal processes arise
due to Axiom A3, since no correlation information be-
tween the spatial and temporal processes are known.
As an example, consider model (17). By Axiom A3,
each traﬃc class is an independent system. Since the
ingress and egress traﬃc of each traﬃc class is known,
by Axiom A4, the source and destination in each traf-
ﬁc class are separated into subsystems. We then have
the notion of a hierarchical independence in the model:
independence between traﬃc classes (independent sys-
tems) and conditional independence within a class (in-
dependent subsystems).
4.2 Computational issues
Generating ensembles of TMs could be surprisingly
computationally expensive. For instance, given an arbi-
trary correlation structure, generating even simple nor-
mally distributed RVs would require speciﬁcation of an
N 4M 2 covariance matrix, which might then need to be
inverted (depending on the method of generation).
Decomposing the correlation structure, and recom-
posing via simple matrix and vector products leads to
eﬃcient methods for building the complete spatiotem-
poral correlation structure without ever having to rep-
resent this in memory.
Moreover, in our models, the distributions follow that
of (4), i.e., the exponential family of distributions. With
simple constraints, we need only generate classical dis-
tributions such as the exponential distribution, which
can be simply generated via von Neumann’s inverse
method [12], with a very low computational cost.
586250
200
s
p
b
G
150
100
50
0
0
Constraint
MGM
20
40
t
k
60
80
250
200
s
p
b
G
150
100
50
0
0
20
40
t
k
60
80
250
200
s
p
b
G
150
100
50
0
0
20
40
t
k
60
80
(a) PM: 1.5, σ2 = 1, σ2
p = 1
(b) PM: 2, σ2 = 10, σ2
p = 1
(c) PM: 1.5, σ2 = 1, σ2
p = 100
Figure 2: Total traﬃc for one day of the MGM with σ2 = {1, 10}, σ2
p = {1, 100}, and PM ratios 1.5 and 2.
For more complicated distributions, we advocate the
use of the Hamiltonian Monte Carlo (HMC) [29], as
the method has the closest relationship to the expo-
nential family (4). For instance, the multivariate trun-
cated normal distribution is more eﬃciently generated
via HMC [26] compared to the standard Metropolis-
Hastings technique (further supported by our numeri-
cal experiments). HMC also avoids random walks, so
sampling from the distribution is far more eﬃcient than
other canonical MCMC methods.
In addition, the independence property (Axioms A3
independent model
and A4), enables parallelization:
components can be generated separately. For instance,
each independent traﬃc class can be synthesized in par-
allel, then combined to form the model.
4.3 An Example
Here, we demonstrate the synthesis of a series of TMs
from the MGM. To generate MGM, recall that we need
three components: the average incoming and outgoing
PoP traﬃc c and r respectively and the total traﬃc
T (tk) for times k = 0, 1, · · · , M − 1. We set N = 20
and M = 672, which corresponds to 7 days with one
hour intervals.
The constraint for the temporal component is a sim-
ple one: a sinusoid with the frequency corresponding
to a daily cycle. This is a rough approximation of ac-
tual traﬃc, where peak traﬃc occur around mid-day
and troughs at night. The component has two parame-
ters: the mean traﬃc over the synthesis interval and the
peak-to-mean (PM) ratio, i.e., how high is the sinusoid’s
peak relative to the mean traﬃc. While simple, this ap-
proach has been used to test protocols for power-aware
routers [9].
The constraints ¯r and ¯c are set as proportions of
the mean traﬃc ¯T = 1
k=0 T (tk), i.e., ¯ri = fi ¯T
and ¯cj = fj ¯T . The fractions fi are non-negative and
i=1 fi = 1, and they are generated randomly. We
use the truncated normal distribution for the spatial
and temporal components so as to allow control of their
M PM −1
PN
variations. Independence between the components al-
lows them to be generated separately by the HMC.
Figure 2 presents the total traﬃc cycle for a day.
Note that the total traﬃc of the synthetic TMs vary
around the shape of the sinusoid.
In Figure 2(b), in-
creasing the PM ratio from 1.5 to 2 results in a much
larger total traﬃc, as expected. The larger spatial vari-
ation (σ2 = 10) will cause large “swings” in traﬃc due to
a larger variation in the starting point i.e., the random
gravity model, for each run. As we vary σ2
p from 1 to
100, the generated traﬃc becomes “noisier”, so the total
traﬃc has more variations (Figure 2(c)). Note that the
constraints will be satisﬁed over whole ensembles of the
generated TMs, not necessarily in a single run.
Here, and in the examples to follow the TMs were
generated on a machine with a 3.06 GHz processor and
4 GB of RAM with both models coded in Matlab. Gen-
erating the TMs for this example took on average less
than a second. At M = 2, 016 in the next section, both
MGM and NCIM took about a second.
4.4 Model Analysis
Here, we want to know if our models replicate real
traﬃc properties, such as low-rank behavior. The mod-
els we test are the MGM and the NCIM with timezone
information (see §3.1).
We isolate the traﬃc components of the generated
TMs via PCA. PCA was used to analyze traﬃc in [19,
20] to show that there are three types of components of
OD ﬂows, described in §3.4.
MGM: To construct constraint (8), we extracted the
23 largest Fourier coeﬃcients from Abilene’s total traﬃc