为了将 KinD 集群用于您的开发需求，您需要了解 KinD 是如何工作的。到目前为止，您已经了解了节点映像以及如何使用该映像创建集群。您还学习了 KinD 网络流量如何在 Docker 主机和运行集群的容器之间流动。有了这些基础知识，我们将继续使用 KinD 创建 Kubernetes 集群。
# 安装 KinD
本章的文件位于 KinD 目录下。您可以使用提供的文件，也可以根据本章内容创建自己的文件。我们将在本节中解释安装过程的每个步骤。
注意
在撰写本文时，KinD 的当前版本是. 0.8.1。版本. 0.8.0 引入了新功能；也就是说，在重启和 Dock er 重启之间保持集群状态。
## 安装 KinD–先决条件
KinD 需要几个先决条件才能创建集群。在本节中，我们将详细说明每个要求以及如何安装 ea ch 组件。
### 安装 Kubectl
因为 KinD 是一个单个可执行文件，所以它不安装`kubectl`。如果您没有安装`kubectl`并且您使用的是 Ubuntu 18.04 系统，您可以通过运行快照安装来安装它:
```
sudo snap install kubectl --classic
```
### 安装 Go
在我们创建 KinD 集群之前，您需要在您的主机上安装 Go。如果您已经安装并运行了 Go，可以跳过这一步。安装 Go 需要您下载 Go 归档文件、提取可执行文件并设置项目路径。以下命令可用于在您的计算机上安装 Go。
安装 Go 的脚本可以通过运行`/chapter4/install-go.sh`从本书的存储库中执行:
```
wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz
tar -xzf go1.13.3.linux-amd64.tar.gz
sudo mv go /usr/local
mkdir -p $HOME/Projects/Project1
cat > ~/.bash_profile
export -p GOROOT=/usr/local/go
     export -p GOPATH=$HOME/Projects/Project1
export -p PATH=$GOPATH/bin:$GOROOT/bin:$PATH
EOF
source ~/.bash_profile 
```
前面列表中的命令将执行以下操作:
*   下载转到您的主机，解压缩档案，并将文件移动到`/usr/local`。
*   在你的主目录中创建一个名为`Projects/Project1`的 Go 项目文件夹。
*   在`.bash_profile`中增加 Go 环境变量，执行 Go 应用需要用到这些变量。
既然你已经具备了先决条件，我们就可以继续进行第一步了。
## 安装 KinD 二进制文件
安装 KinD 是一个简单的过程；只需一个命令就可以完成。您可以通过在本书位于`/chapter4/install-kind.sh`的存储库中运行包含的脚本来安装 KinD。或者，您可以执行以下命令:
```
GO111MODULE="on" go get sigs.k8s.io/kind@v0.7.0
```
安装后，您可以通过在提示中键入`kind version`来验证 KinD 是否已正确安装:
```
kind version
```
这将返回已安装的版本:
```
kind v0.7.0 go1.13.3 linux/amd64
```
KinD 可执行文件提供了维护集群生命周期所需的所有选项。当然，KinD 可执行文件可以创建和删除集群，但它也提供以下功能:
*   创建自定义构建基础和节点映像的能力
*   可以导出`kubeconfig`或日志文件
*   可以检索集群、节点或`kubeconfig`文件
*   可以将映像加载到节点中
现在，您已经安装了 KinD 实用程序，几乎可以创建自己的 KinD 集群了。在我们执行一些`create cluster`命令之前，我们将解释 KinD 提供的一些创建选项。
# 创建种类簇
现在您已经满足了所有要求，您可以使用 KinD 可执行文件创建您的第一个集群。KinD 实用程序可以创建一个单节点集群，也可以创建一个复杂的集群，该集群为控制平面运行多个节点和多个工作节点。在本节中，我们将讨论 KinD 可执行选项。到本章结束时，您将有一个双节点集群正在运行——一个控制平面节点和一个工作节点。
重要说明
对于本书中的练习，我们将安装一个多节点集群。简单的集群配置就是一个例子，不应该在我们的练习中使用。
## 创建简单的集群
要创建一个在单个容器中运行控制平面和工作节点的简单集群，您只需要使用`create cluster`选项执行 KinD 可执行文件。
让我们创建一个快速单节点集群，看看 KinD 创建快速开发集群的速度有多快。在您的主机上，使用以下命令创建群集:
```
kind create cluster
```
这将通过使用集群名称`kind`在单个 Docker 容器中快速创建包含所有 Kubernetes 组件的集群。它还将为 Docker 容器指定一个名称`kind-control-plane`。如果您想要指定一个集群名称，而不是默认名称，您需要将`--name `选项添加到`create cluster`命令中:
```
Creating cluster "kind" ...
 Ensuring node image (kindest/node:v1.18.2) 
 Preparing nodes
 Writing configuration
 Starting control-plane
 Installing CNI
 Installing StorageClass
Set kubectl context to "kind-kind"
You can now use your cluster with:
kubectl cluster-info --context kind-kind
```
`create`命令将创建集群并修改 kubectl `config`文件。KinD 会将新集群添加到您当前的 kubectl `config`文件中，并且它会将新集群设置为默认上下文。
我们可以通过使用 kubectl 实用程序列出节点来验证集群是否已成功创建:
```
kubectl get nodes
```
这将返回正在运行的节点，对于基本集群，这些节点是单个节点:
```
NAME               STATUS   ROLES    AGE   VERSION
kind-control-plane Ready    master   130m  v1.18.2
```
部署这个单节点集群的主要目的是向您展示 KinD 可以多快地创建一个可以用于测试的集群。在我们的练习中，我们希望分割控制平面和工作节点，以便可以使用下一节中的步骤删除该集群。
## 删除集群
当完成测试后，可以使用`delete`命令删除集群:
```
kind delete cluster –name 
```
`delete`命令将快速删除集群，包括您的`kubeconfig`文件中的任何条目。
快速的单节点集群对于许多用例都很有用，但是您可能希望为各种测试场景创建一个多节点集群。创建一个更复杂的集群需要你创建一个配置文件。
## 创建集群配置文件
创建多节点集群时，比如带有自定义选项的双节点集群，我们需要创建一个集群配置文件。配置文件是一个 YAML 文件，格式应该看起来很熟悉。在此文件中设置值允许您自定义 KinD 集群，包括节点数量、API 选项等。我们将用于为该书创建集群的配置文件显示在这里，它包含在该书的存储库中`/chapter4/cluster01-kind.yaml`:
```
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  apiServerAddress: "0.0.0.0"
  disableDefaultCNI: true
kubeadmConfigPatches:
- |
  apiVersion: kubeadm.k8s.io/v1beta2
  kind: ClusterConfiguration
  metadata:
    name: config
  networking:
    serviceSubnet: "10.96.0.1/12"
    podSubnet: "192.168.0.0/16"
nodes:
- role: control-plane
- role: worker
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
  - containerPort: 443
    hostPort: 443
  extraMounts:
  - hostPath: /usr/src
    containerPath: /usr/src
```
下表提供了文件中每个自定义选项的详细信息:
![Table 4.3 – KinD configuration options ](img/Table_4.3.jpg)
表 4.3–KinD 配置选项
如果您计划创建一个超越单节点集群的集群，而不使用高级选项，您将需要创建一个配置文件。了解可用的选项将允许您创建一个 Kubernetes 集群，该集群具有高级组件，如入口控制器或多个节点，以测试部署的故障和恢复过程。
现在，您已经知道了如何创建一个简单的运行集群的一体化容器，以及如何使用配置文件创建一个多节点集群，让我们讨论一个更复杂的集群示例。
## 多节点集群配置
如果您只想要一个没有任何额外选项的多节点集群，您可以创建一个简单的配置文件，列出集群中您想要的数量和节点类型。以下`config`文件将创建一个具有三个控制平面节点和三个工作节点的集群:
```
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: control-plane
- role: control-plane
- role: worker
- role: worker
- role: worker 
```