# Data Breaches, Phishing, or Malware? Understanding the Risks of Stolen Credentials

## Authors
Kurt Thomas, Frank Li, Ali Zand, Jacob Barrett, Juri Ranieri, Luca Invernizzi, Yarik Markov, Oxana Comanescu, Vijay Eranti, Angelika Moscicki, Daniel Margolis, Vern Paxson, Elie Bursztein

**Affiliations:**
- Google
- University of California, Berkeley
- International Computer Science Institute

## Abstract
This paper presents the first longitudinal measurement study of the underground ecosystem that fuels credential theft and assesses the risk it poses to millions of users. From March 2016 to March 2017, we identified 788,000 potential victims of keyloggers, 12.4 million potential victims of phishing kits, and 1.9 billion usernames and passwords exposed via data breaches and traded on black market forums. Using this dataset, we explore the extent to which stolen passwords from thousands of online services can be used to gain control of a victim’s email credentials, thereby compromising their entire online identity due to transitive trust. Focusing on Google as a case study, we found that 7–25% of exposed passwords match a victim’s Google account. We demonstrate how hardening authentication mechanisms with additional risk signals, such as historical geolocations and device profiles, can mitigate the risk of hijacking. Our analysis also delves into the global reach of the actors involved in credential theft and the tools they use, revealing a lack of external pressure on these bad actors, with phishing kit playbooks and keylogger capabilities remaining largely unchanged since the mid-2000s.

## 1. Introduction
As the digital footprint of Internet users expands to include social networks, financial records, and cloud-stored data, a single account often underpins the security of an individual's entire online identity—an email address. This root of trust is jeopardized by the exposure of a victim’s email password or recovery questions. Once compromised, a hijacker can reset the victim’s passwords to other services, download all private data, remotely wipe data and backups, or impersonate the victim to send spam or worse.

High-profile hijacking incidents include attacks on journalists like Mat Honan and the Associated Press, as well as politicians and government officials such as Sarah Palin, John Podesta, and Emmanuel Macron. However, the threat of hijacking extends to millions of users. A user study by Shay et al. in 2014 found that 30% of 294 participants reported having at least one of their accounts compromised. Despite the prevalence of hijacking, there is limited information about the largest sources of stolen credentials or the effectiveness of hardening authentication mechanisms to include additional risk signals like historical geolocation or device profiles.

In this paper, we present the first longitudinal measurement study of the underground ecosystem fueling credential theft and the risks it poses to users. Our study covers three market segments: (1) forums trading credential leaks from data breaches, (2) phishing kits that deceive users into submitting their credentials to fake login pages, and (3) off-the-shelf keyloggers that harvest passwords from infected machines. We measure the volume of victims affected by each source of credential theft, identify the most popular blackhat tools, and evaluate the likelihood that attackers can obtain valid email credentials and bypass risk-based authentication protections to hijack a victim’s account.

To conduct our study, we developed an automated framework to monitor black market actors and stolen credentials. Over the course of March 2016 to March 2017, we identified 788,000 potential victims of keylogging, 12.4 million potential victims of phishing, and 1.9 billion usernames and passwords exposed by data breaches. Our dataset, while a sample of underground activity, demonstrates the massive scale of credential theft. Victims are spread globally, with credential leaks and phishing largely affecting the United States and Europe, while keyloggers disproportionately affect victims in Turkey, the Philippines, Malaysia, Thailand, and Iran.

We find that the risk of a full email takeover depends significantly on how attackers acquire a victim’s (re-used) credentials. Using Google as a case study, we observe that only 7% of victims in third-party data breaches have their current Google password exposed, compared to 12% of keylogger victims and 25% of phishing victims. Hijackers have varying success in emulating the historical login behavior and device profile of targeted accounts. Phishing victims are 400 times more likely to be successfully hijacked compared to a random Google user, while this rate falls to 10 times for data breach victims and roughly 40 times for keylogger victims. This discrepancy is due to phishing kits actively stealing risk profile information, with 83% of kits collecting geolocation, 18% phone numbers, and 16% User-Agent data.

Behind the scenes, we identified 4,069 distinct phishing kits and 52 keyloggers responsible for active attacks in our year-long monitoring. The most popular phishing kit, emulating Gmail, Yahoo, and Hotmail logins, was used by 2,599 blackhat actors to steal 1.4 million credentials. The most popular keylogger, HawkEye, was used by 470 blackhat actors to generate 409,000 reports of user activity on infected devices. The operators of both phishing kits and keyloggers are concentrated in Nigeria, followed by other nations in Africa and South-East Asia. Our findings highlight the global reach of the underground economy surrounding credential theft and the necessity of a defense-in-depth approach to authenticating users.

## 2. Background & Related Work
Credential theft relies on an array of underground markets and blackhat tools. We provide a brief background on these services, which inform our study.

### 2.1 Credential Leaks
Data breaches at major online services have become a regular occurrence. In a survey of 2,618 adults in the United States, 26% reported receiving a notice related to a data breach in the last year. Prominent examples include Yahoo, MySpace, LinkedIn, Adobe, and Dropbox, which combined revealed the username and password details for over a billion users. Password storage policies varied, with some breaches exposing plaintext or unsalted password hashes, while others exposed salted SHA-1, bcrypt, or symmetrically encrypted passwords. Although many of these credential leaks date back to 2012–2014, they have only recently appeared on public blackhat forums or paste sites, or on sites like leakedsources.com, leakbase.pw, or breachalarm.com, which charge companies and users to check if their accounts were impacted.

Credential leaks pose a broader risk to the online ecosystem due to weak password selection and re-use. Das et al. estimated that 43% of passwords were re-used, while Wash et al. found that users re-used 31% of their passwords. Even if passwords are hashed, prior work has examined how to invert the hashes via dictionary attacks or modeling password selection behavior. We re-evaluate the risk of stolen passwords due to long-term re-use and the susceptibility of hashed passwords to trivial dictionary attacks.

### 2.2 Phishing Kits
Phishing kits are "ready-to-deploy" packages for creating and configuring phishing content, providing built-in support for reporting stolen credentials. The type of information stolen varies, but prior studies have shown that they harvest a victim’s username, password, and geolocation information, among other sensitive data. Han et al. estimated the success rate of kits by monitoring the activity of real visitors to infected honeypots, with 9% of visitors submitting data to the phishing page.

Phishing kits forward stolen credentials to the operator via SMTP to an email address, FTP, or a remote database. The number of phishing websites using kits is unknown, but previous work by Zawoad et al. found that 10% of phishing sites active in 2013 left trace evidence of phishing kits. Moore et al. demonstrated how to develop inbound email rules deployed at a large, undisclosed email provider to discover the email accounts of SMTP-based phishing kit operators, detecting 120–160 different miscreants. We use this initial system as motivation for our design to capture the behavior of over ten thousand phishing kits, discussed in Section 3.

### 2.3 Keyloggers
Keyloggers have evolved beyond their original purpose, with off-the-shelf families like HawkEye and Predator Pain providing built-in functionality to steal on-device password stores, harvest clipboard content, and screenshot a victim’s activity, in addition to monitoring keystrokes. Keyloggers use various techniques for reporting stolen credentials, including SMTP, FTP, or remote databases. Holz et al. studied public 'dropzones' where keyloggers uploaded stolen data and identified over 10,700 stolen online bank account credentials and over 149,000 stolen email passwords over a 7-month period in 2008. While we focus on off-the-shelf keyloggers in this study, malware families may broadly include similar capabilities. Stone-Gross et al. examined the Torpig botnet and found it harvested over 54,000 email accounts from password stores and over 400,000 other credentials from HTTP forms over a 10-day period.

### 2.4 Hijacker Behavior
Several studies have investigated how hijackers abuse stolen credentials. Onaolapo et al. leaked 100 email accounts via paste sites, underground forums, and virtual machines infected with malware. They found that most miscreants searched the email history of accounts for financial data, while a smaller set used the accounts for spamming. Bursztein et al. reported a similar strategy, where hijackers searched each victim’s email history for financial records and credentials related to third-party services. Shay et al. conducted a user study of the harm caused by hijacking and found that most participants self-reported being angry or embarrassed, but that their accounts were mostly used for spam. Gao et al. identified 57,000 Facebook accounts that created 200,000 spam posts, estimating that 97% of the accounts were compromised. Finally, Thomas et al. examined cascades of hijacking campaigns on Twitter, identifying 13.8 million compromised accounts used for infecting other users and posting spam. These behaviors illustrate various strategies for monetizing stolen credentials, including spam, financial fraud, and stepping stone access to other accounts.

## 3. Methodology
Our study of hijacking risk requires access to a significant corpus of stolen credentials. Therefore, we developed an automated collection framework that combines proprietary data from Google Search and Gmail to identify over a billion victims of credential leaks, phishing kits, and off-the-shelf keyloggers. Table 1 provides a detailed breakdown of the dataset collected by our system. We discuss the design decisions of our framework, its limitations, and ethical considerations that guide our approach.

### 3.1 Credential Leaks
Figure 1 illustrates our high-level strategy for identifying usernames and passwords exposed via data breaches. Our design hinges on the idea that credential leaks sold privately on underground markets eventually surface for free. We detect when this happens by regularly crawling a set of paste sites and blackhat forums, as well as the public Internet, to identify content that may contain emails and passwords. We then parse and classify these documents to confirm whether they contain leaked credentials. Finally, when possible, we invert any non-salted, hashed passwords. We supplement this framework with credential leaks manually obtained from private, member-only forums. Each step is discussed in detail.

#### Sourcing Potential Credential Leaks
As demonstrated by Butler et al., blackhat forums and paste sites are common places for publicly sharing credential leaks. We leverage Google’s crawler to monitor activity on five public blackhat subforums that deal exclusively with stolen credentials, along with 115 paste sites. Not every paste or forum thread will contain usernames and passwords, so we treat each page as a candidate document requiring further verification. To avoid applying an expensive verification process to every new paste, we apply a pre-filter to omit any pastes without at least 100 email addresses. Forum threads are less frequent, so we skip pre-filtering.

Given that our coverage of public paste sites and blackhat forums is incomplete, we improve recall by identifying any document in Google’s recent crawl history that contains at least 10 of 1,000 common passwords (e.g., 123456, password) or their MD5 or SHA-1 equivalent, along with email suffixes for popular mail providers. We bootstrap our list of the most common passwords from previously collected credential leaks. This technique will miss credential leaks that are compressed, password-protected, or encrypted. Together with paste sites and forums, we surfaced a combined total of 31,446 candidate documents based on a snapshot of the search index in June 2016. We supplement this automated pipeline by manually collecting credential leaks shared on 11 private, member-only blackhat forums where we have access. Over the course of June 2016 to May 2017, we periodically monitored new forum threads and obtained 258 large credential leaks containing a combined 1.79 billion non-unique usernames and passwords. We emphasize that we never trade or purchase credential dumps—our activity on these sites is strictly passive. All files we obtained were compressed and shared via torrents or on file hosting sites, thus being missed by our automated detection.

#### Parsing Using Delimiter Detection
For our automatically detected candidate documents, we first apply a delimiter detection heuristic to columnize the data. Based on a manual investigation of a random sample of candidate documents, we find that confirmed credential leaks conform to a small number of highly-structured formats: delimiter-separated values, key-value pairs, JSON blobs, and SQL query outputs. This stems from the fact that most leaks are programmatically produced and consumed. To detect the correct file format, we apply multiple parsers configured with a small list of delimiter characters and then evaluate which parser generates rows of equal length consisting of at least two columns.

Table 2 provides a breakdown of where we sourced credential leaks.

| Source | Candidate Documents | Confirmed Credentials Extracted |
|--------|---------------------|---------------------------------|
| Paste Sites | 4,855,780 | 3,317 |
| Search Index | 10,856,227 | - |

This structured approach ensures a comprehensive and accurate identification of credential leaks, providing a robust foundation for our study.