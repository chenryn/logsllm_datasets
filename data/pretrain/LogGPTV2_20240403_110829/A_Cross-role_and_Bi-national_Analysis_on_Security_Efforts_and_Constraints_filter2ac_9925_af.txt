• Design (determining system and data structure, evaluating sys-
• Implementation (coding, integrating components, etc.)
• Development testing (unit testing, integration testing, etc.)
• Reviews (code reviews, test reviews, etc.)
ers and technical constraints, etc.)
tem design, etc.)
etc.)
etc.)
• Post-development testing (system testing, acceptance testing,
• Other. Please specify.
• Not sure
Q21. The following statements are about security awareness in
software development. Please indicate the extent to which you agree
or disagree with each statement. [5-point Likert scale: strongly
agree-strongly disagree]
A1 I think software security is an important issue for our project.
A2 I think the software that our project develops is easy to attack
from the standpoint of an attacker.
A3 I think that the benefit (incentive) of attacking the software
that our project develops is high from the standpoint of an
attacker.
A4 I think our project takes adequate security measures.
A5 I think that no vulnerabilities will occur in the software that
our project develops.
Q22. The following statements are about the efforts to develop
secure software at each stage of the software development. Please
indicate the extent to which you agree or disagree with each
statement. Please select “Not sure” if you don’t know whether
an effort is being made or not. [5-point Likert scale: strongly
agree-strongly disagree, and “Not sure” choice]
1. Security efforts at “Requirements definition” and “Design”
E1 Our project defines the security requirements that the soft-
ware must meet.
E2 Our project performs a threat risk analysis. (e.g., identifying
potential attack vectors, identifying common attack tech-
niques, etc.)
E3 Our project performs a risk analysis of vulnerabilities that
might occur during software development. (e.g., handling of
critical data, use of third-party code such as OSS, etc.)
E4 Our project designs the software so that even if a vulner-
ability is attacked by an attacker, any damage can be miti-
gated/minimized.
2. Security efforts at “Implementation”
E5 Our project has a document/checklist that we need to follow
for our software to be secure. (e.g., secure coding guide,
security cheat sheet, etc.)
E6 Our project makes use of security mechanisms (APIs) in-
cluded in existing libraries and frameworks to help guaran-
tee software security. (e.g., implementing error handling by
using an existing library)
E7 Our project uses a tool to check whether secure coding prac-
tices are incorporated.
3. Security efforts at “Testing” and “Review”
E8 Our project uses an automated tool to perform vulnerability
assessment to the software we develop.
E9 Our project manually performs vulnerability assessment to
E10 Our project assesses that security requirements are met dur-
the software we develop.
ing code review.
E11 Our project has an in-house security assessment team.
362A Cross-role and Bi-national Analysis on Security Efforts and Constraints of Software Development Projects
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
E12 Our project leverages an outsourced security assessment
service.
4.Other security efforts
C UNDERSTANDING OF PROJECT EFFORTS
Figure 8 shows the percentage of answers for which “Not sure” was
selected for E1–E15 (security efforts).
E13 Our project continuously checks latest vulnerability informa-
tion available to the public. (e.g., CVE, security white paper,
etc.)
E14 Our project can extend a schedule if a security issue has been
E15 Our project prioritizes tasks to ensure security over other
identified.
tasks.
Q23. Please describe any security efforts in software development
other than those described in Q22 that you/your team are making.
(Free text)
Q24. The following statements are about the constraints that pre-
vent you/your team from developing secure software. Please indi-
cate the extent to which you agree or disagree with each statement.
[5-point Likert scale: strongly agree-strongly disagree]
C1 Our project does not have enough time to ensure software
Figure 8: Percentage of “Not sure” in questions about secu-
rity effort (E1–E15)
D PARTICIPANTS’ DEMOGRAPHICS
Tables 4 presents detailed demographic information about our par-
ticipants.
C2 Our project does not have enough knowledge to ensure
software security.
C3 Our project does not have enough people to ensure software
C4 Our project does not have enough budget to ensure software
C5 Our project defers software security due to competing prior-
C6 In our project, software security is not mandated by our
security.
security.
security.
ities.
client.
C7 Our project is not aware of the security measures (e.g., tools,
frameworks, development methods) that meet requirements
of the software we develop.
C8 In our project, it takes a lot of time and effort to make a
decision to introduce security measures (tools, frameworks,
development methods).
C9 For our project, existing security measures (e.g., tools, frame-
works, development methods) are useful for enhancing se-
curity, but not cost-effective from the view point of the cost
of implementation/operation.
C10 I do not have the authority to decide to introduce security
measures (e.g., tools, frameworks, development methods).
C11 Our project has been following the same development pro-
cess for years and we cannot easily change it for ensuring
security.
Q25. About the constraints that prevent you/your team from devel-
oping secure software in the previous question, please select the
top three constraints that have the greatest impact on security in
your team/project in order of 1st, 2nd and 3rd.
• 1st
• 2nd
• 3rd
Q26. Please describe any constraints you/your team are facing
that prevent the development of secure software, other than those
described in Q24. (Free text)
[E1][E2][E3][E4][E5][E6][E7][E8][E9][E10][E11][E12][E13][E14][E15]0246% of 'Not sure'ManagerDeveloper363ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Fumihiro Kanei, Ayako Akiyama Hasegawa, Eitaro Shioji, and Mitsuaki Akiyama
Table 4: Summary of participants’ company and project statistics
Period of project (months) *1
Project budget
Company size
User scope of
developed
software*2
Contractual
relationship
$49,999 and under
$50,000-$99,999
$100,000-$499,999
$500,000-$999,999
$1,000,000 and over
Not sure
100 and under
101-500
501-1000
1001 and over
Not sure
General public users
Limited to specific users
Other
In-house development
Contracted development
Other
Development Waterfall
method*3
Agile
Hybrid
Other
Developer (US) Manager (US)
µ=13.9
(Md=8.0)
9 ( 6%)
24 ( 16%)
45 ( 30%)
29 ( 20%)
31 ( 21%)
10 ( 7%)
25 ( 17%)
28 ( 19%)
32 ( 22%)
63 ( 43%)
0 ( 0%)
37 ( 25%)
108 ( 73%)
2 ( 1%)
122 ( 82%)
25 ( 17%)
1 ( 1%)
22 ( 15%)
62 ( 42%)
55 ( 37%)
8 ( 5%)
µ=20.6
(Md=9.0)
13 ( 8%)
12 ( 8%)
30 ( 19%)
28 ( 18%)
23 ( 14%)
53 ( 33%)
21 ( 13%)
32 ( 20%)
19 ( 12%)
83 ( 52%)
4 ( 3%)
44 ( 28%)
112 ( 70%)
3 ( 2%)
120 ( 75%)
39 ( 25%)
0 ( 0%)
15 ( 9%)
83 ( 52%)
44 ( 28%)
17 ( 11%)
ALL (US)
µ=17.2
(Md=9.0)
22 ( 7%)
36 ( 12%)
75 ( 24%)
57 ( 19%)
54 ( 18%)
63 ( 21%)
46 ( 15%)
60 ( 20%)
51 ( 17%)
146 ( 48%)
4 ( 1%)
81 ( 26%)
220 ( 72%)
5 ( 2%)
242 ( 79%)
64 ( 21%)
1 ( 0%)
37 ( 12%)
145 ( 47%)
99 ( 32%)
25 ( 8%)
Developer (JP) Manager (JP)
µ=18.0
(Md=12.0)
18 ( 10%)
32 ( 18%)
43 ( 25%)
14 ( 8%)
46 ( 27%)
20 ( 12%)
48 ( 28%)
31 ( 18%)
23 ( 13%)
71 ( 41%)
0 ( 0%)
56 ( 32%)
117 ( 68%)
0 ( 0%)
52 ( 30%)
120 ( 69%)
1 ( 1%)
88 ( 51%)
23 ( 13%)
52 ( 30%)
10 ( 6%)
µ=14.4
(Md=12.0)
18 ( 10%)
16 ( 9%)
36 ( 20%)
6 ( 3%)
18 ( 10%)
90 ( 49%)
65 ( 35%)
48 ( 26%)
19 ( 10%)
45 ( 24%)
7 ( 4%)
57 ( 31%)
126 ( 68%)
1 ( 1%)
53 ( 29%)
126 ( 68%)
5 ( 3%)
95 ( 52%)
32 ( 17%)
26 ( 14%)
30 ( 16%)
ALL (JP)
µ=16.4
(Md=12.0)
36 ( 10%)
48 ( 13%)
79 ( 22%)
20 ( 6%)
64 ( 18%)
110 ( 31%)
113 ( 32%)
79 ( 22%)
42 ( 12%)
116 ( 32%)
7 ( 2%)
113 ( 32%)
243 ( 68%)
1 ( 0%)
105 ( 29%)
246 ( 69%)
6 ( 2%)
183 ( 51%)
55 ( 15%)
78 ( 22%)
40 ( 11%)
*1 Forty-two participants from US and 68 participants from Japan did not indicate the scheduled period of their development project.
*2 One participant from US did not indicate the user scope of the developed software.
*3 One participant from US and one participant from Japan did not indicate a development method.
364