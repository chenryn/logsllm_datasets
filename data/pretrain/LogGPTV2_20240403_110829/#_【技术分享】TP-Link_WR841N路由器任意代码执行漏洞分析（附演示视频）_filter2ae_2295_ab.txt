图5. 连接UART引脚
**3.2 分析固件**
我们之前已经见到过很多存在漏洞的配置服务，根据以往经验，我们在提取的文件系统中搜索包含recvfrom()以及sendto()的代码，这是UDP服务包含的特征。短暂搜索后，我们发现了一个名为tddp的服务，这个配置服务以任务形式隐藏在web服务器中，它监听用户发来的命令请求，这些命令可以读取及写入系统设置。
这个二进制文件中包含tddp服务所涉及的大部分函数的名称，也包含用于频率调试的打印信息，这些信息对我们的逆向分析工作起了非常大的作用。我们发现了两个不同的函数，用于处理不同类别的命令。第一类命令是使用明文参数的一些简单命令，第二类命令是使用加密参数的系统级命令。
图6. recvfrom()函数以及配置服务的主解析函数
我们对协议进行了逆向，发现第一类命令对攻击者而言用处不大。之后我们枚举了所有可用的第二类命令，这些命令中包含设置广域网和本地网络配置选项的命令、更改系统模式的命令以及获取附近可用访问点的命令。
传递给第二类命令的参数会经过DES加密处理，DES是一种对称加密算法，以8字节块对数据进行加密。我们逆向分析了能够返回加密密钥的那个函数，发现这个函数将路由器用户名及密码连接起来，形成未加盐的md5值，将这个md5值的前8个字节作为加密密钥使用。这样做是为了防止除路由器所有者以外的其他人运行这些命令。
图7. 两类命令的解析器
**3.3 抵近攻击**
我们使用手机的热点功能来发起抵近攻击，同时向路由器发送一系列命令来获取所有第二类命令的访问权限。第二类命令中，SetUserConfig命令提供了路由器所有配置的写入访问权限，因此我们可以做许多操作，比如将路由器的DNS服务器地址指向某个恶意服务器，或者以此为跳板攻击网络上的其他设备。然而，展示攻击成果最为有效的一种方式，就是攻击者可以在不掌握路由器凭证的前提下，在路由器上执行命令，并获得路由器的控制权限。
我们在某个参数解析函数中发现了一个栈溢出漏洞。此时此刻，我们无法利用这个漏洞，因为溢出数据来自于命令参数，而这些参数需要经过正确的加密。为了绕过这个限制，我们决定将路由器恢复到出厂设置状态，这样用户凭证就会恢复到默认用户名及密码。为了完成这一任务，我们将sysCommand作为目标，这个函数收到加密版的“init”指令后，会对路由器进行重置。
图8. sysCommand()会查找“init”、“save”或者“reboot”命令
由于DES是个对称加密算法，并且会按照8字节块进行加密，因此它并不能实现对命令参数的全面保护，因为攻击者非常容易就能复制这些参数，并能重复使用这些参数以攻击目标。getAPList这个命令会返回附近可用访问点的加密名称，这也是我们为什么会使用手机的热点功能来创建自己的访问点。
我们使用getPhyLinkStatus命令的输出作为特征，识别访问点列表中属于我们的那条信息。getPhyLinkStatus这个命令不需要提供任何参数，并且会返回前缀为“wan_ph_l”的加密字符串。我们通过另一条不需要参数的命令启用了路由器的搜索模式，将手机的名字开头设为“wan_ph_l”，并填充某些字符使手机热点名称在路由器的访问列表中保持8字节对齐。我们查询了getAPList，查找经过加密后的“wan_ph_l”字符串，很快就识别出我们的手机名。之后我们更新了手机的名称，紧挨在“wan_ph_l”之后附加一个“init“字符串，通过getAPList获取加密后的init参数，并将其传递给sysCommand命令，重置了路由器。
简而言之，我们使用如下几个步骤将路由器恢复到出厂设置状态：
1、通过getPhyLinkStatus获取加密后的“wan_ph_l“。
2、设置附近访问热点，热点名为明文形式的“wan_ph_l”+“init”，填充部分字符串以便对齐。
3、使用activateAth0命令启用访问点搜索接口。
4、使用getAPList命令请求访问点状态列表，并保存加密后的“init”参数。
5、将加密过的“init”参数传递给sysCommand命令。
再深入研究一下，如果周围没有可接入热点，但我们还想要获得系统访问权限，这时候应该怎么办呢？我们可以使用常见的用户名及密码对“wan_ph_l”进行加密，构造这样一个彩虹表，生成用户名及密码所对应的哈希值。如果哈希值匹配，那么我们立刻就能获取服务的完全访问权限。
**3.4 代码执行**
在分析过程中，我们发现某个函数中存在栈溢出漏洞，这个函数负责对传入数据进行处理。我们已经掌握了生成加密参数的方法，因此我们终于能够利用这个漏洞。由于新发布的补丁能够阻止远程攻击者直接访问这个漏洞，因此TP-Link决定不再单独修复这个漏洞。尽管这个漏洞很难对用户造成安全风险，但它目前仍是未修复状态，并且厂商将来也没有要修复它的计划，因此我们决定不在此时透露这个漏洞的详细信息。
我们得到了路由器的代码执行权限，通过编写的shellcode使路由器的LED灯以摩斯码进行闪烁，传递“Hi
Senrio”信息，借此展现我们对路由器底层架构的控制能力。现实生活中，攻击者可以利用这种技术实现隔离网络中的[数据传输](http://www.securityweek.com/router-leds-allow-data-theft-air-gapped-computers)，或者修改路由器的设置，将流量重定向到[恶意服务器](http://www.apple.com/)上。
**四、总结**
当我们向TP-Link报告这个漏洞时，我们发现这款硬件型号已经停产，因为官方网页上没有早期型号的更新信息。TP-Link同意从我们使用的这款硬件型号的固件版本中删除存在漏洞的服务，这无疑是个利好消息。当我们报告这个漏洞时，Shodan搜索引擎显示全世界至少有93,328个用户正在使用WR841N路由器，然而我们并没有有效的渠道能够告诉他们这一消息，并且他们正在使用的路由器似乎不大可能正在运行最新的固件。
图9. Shodan的搜索结果
这对我们来说是个重要启示。对整个行业而言，我们过于依赖过时的硬件设施，因为整个行业、企业以及消费者无法承受频繁更新硬件型号所需的时间、精力以及成本。虽然TP-Link为这个过时的型号提供了修复补丁，我们还是需要创新的方法来保护这些过时的设备。
**演示视频**
完整攻击过程的视频如下所示。读者一定要坚持到视频结尾，欣赏一下路由器LED灯光所传递的欢迎信息。