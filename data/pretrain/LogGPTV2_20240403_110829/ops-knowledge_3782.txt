When a user logs into the application, I would like to perform a specific task, such as recording the login time. My question is, does the system trigger a hook by default upon login? If so, how can I make my module respond to this event?

**Additional Information:**
- The application has multiple entry points for user logins.
- The backend is built using Python on Google App Engine (GAE).

**Current Understanding:**
I have not found any documentation indicating that a hook is triggered by default when a user logs in. If a session management framework is used, it might provide some indication of a login event. However, without such a framework, I typically handle this kind of housekeeping on the opening page, which requires a login.

**Considerations:**
- How should the system handle an already logged-in user who returns to the site after a few days? Should the system record every login or just the start time of each visit/session?

**Proposed Solution:**
If I want to implement this functionality with multiple landing pages and without using a session management framework, I would use memcache to perform a quick check on every page request. This way, I can write to the datastore only when a new visit starts.

**Steps:**
1. **Check User Status:** On each page request, use memcache to check if the user is already logged in.
2. **Record Login Time:** If the user is logging in for the first time in a new session, record the login time in the datastore.
3. **Update Memcache:** Update memcache to indicate that the user is now logged in, preventing duplicate entries.

This approach ensures that the login time is recorded accurately and efficiently, even with multiple entry points and without relying on a session management framework.