# Secure Outsourced Garbled Circuit Evaluation for Mobile Devices

## Authors
- Henry Carter, Georgia Institute of Technology
- Benjamin Mood, University of Oregon
- Patrick Traynor, Georgia Institute of Technology
- Kevin R. B. Butler, University of Oregon

## Abstract
Garbled circuits are a powerful tool for jointly evaluating functions while preserving the privacy of each user's inputs. Recent research has made the use of this primitive more practical, but these solutions generally assume that participants have access to substantial computing resources. In reality, most people only have access to the limited computational resources of their mobile devices, and those who can afford public cloud computing cannot be assured that their data will remain secure. We address this problem by creating a new Secure Function Evaluation (SFE) protocol that allows mobile devices to securely outsource the majority of the computation required to evaluate a garbled circuit.

Our protocol builds on the most efficient garbled circuit evaluation techniques and includes:
1. A new outsourced oblivious transfer primitive that significantly reduces bandwidth and computation compared to standard OT primitives.
2. Outsourced input validation techniques that force the cloud to prove it is executing all protocols correctly.

We show that our extensions are secure in the malicious model and conduct an extensive performance evaluation for several standard SFE test applications and a privacy-preserving navigation application designed specifically for mobile use. Our system reduces execution time by 98.92% and bandwidth by 99.95% for the edit distance problem of size 128 compared to non-outsourced evaluation. These results demonstrate that even the least capable devices can evaluate some of the largest garbled circuits generated for any platform.

## 1. Introduction
Secure Function Evaluation (SFE) allows two parties to compute the result of a function without exposing their potentially sensitive inputs to each other. While considered a theoretical curiosity after the discovery of Yao's garbled circuit, recent advances have made such computations increasingly practical. Today, complex functions like AES-128 and circuits approaching one billion gates in size can be computed at reasonable throughputs, even in the presence of a malicious adversary.

However, most related work assumes both parties have substantial computing resources. For example, Kreuter et al. [25] rely on the Ranger cluster at the Texas Advanced Computing Center, using 512 cores. In reality, users often only have access to the limited computational power of their mobile phones. Even with access to public cloud services like Amazon EC2 or Windows Azure, the sensitive nature of user data and the history of data leaks from cloud services [40, 42] prevent the direct porting of known SFE techniques.

In this paper, we develop mechanisms for the secure outsourcing of SFE computation from constrained devices to more capable infrastructure. Our protocol maintains the privacy of both participants' inputs and outputs while significantly reducing the computation and network overhead required by the mobile device for garbled circuit evaluation. We also provide mechanisms to check for malicious behavior from the circuit generator or the cloud and a novel outsourced oblivious transfer for sending garbled input data to the cloud. We then implement the new protocol on a commodity mobile device and reasonably provisioned servers, demonstrating significant performance improvements over direct garbled circuit evaluation on the mobile device.

### Contributions
- **Outsourced Oblivious Transfer and Consistency Checks**: We develop a highly efficient outsourced oblivious transfer primitive and consistency checks to prevent malicious behavior.
- **Performance Analysis**: We extend the implementation by Kreuter et al. [25] and conduct an extensive performance analysis, showing significant improvements in execution time and bandwidth.
- **Privacy-Preserving Navigation App**: We design and implement an outsourced version of Dijkstra's shortest path algorithm as part of a navigation app, providing directions for a Presidential motorcade without exposing its location, destination, or known hazards.

While our work is similar in function and provides equivalent security guarantees to the Salus protocols developed by Kamara et al. [21], our approach is different. The Salus protocol framework assumes low-computation devices with high communication bandwidth, which is not realistic for mobile environments. Our work seeks to develop and thoroughly demonstrate the practical potential for evaluating large garbled circuits in a resource-constrained mobile environment.

## 2. Related Work
Several secure two-party computation implementations and applications have been developed using Yao garbled circuits in the semi-honest adversarial model. However, a malicious party can learn more information about the other party's inputs in these constructions. New protocols have been developed to achieve security in the malicious model using cut-and-choose constructions, input commitments, and other techniques. To improve performance, circuit optimization techniques have been developed to reduce the cost of generating and evaluating circuits.

Kreuter et al. [25] combined several of these techniques into a general garbled circuit protocol that is secure in the malicious model and can efficiently evaluate circuits on the order of billions of gates using parallelized server-class machines. This SFE protocol is currently the most efficient implementation that is fully secure in the malicious model.

Garbled circuit protocols rely on oblivious transfer schemes to exchange private values. Ishai et al. demonstrated that any of these schemes can be extended to reduce the number of oblivious transfers, making the exchange of large inputs less costly. Despite this, oblivious transfers still tend to be a costly step in evaluating garbled circuits.

The performance of garbled circuit protocols executed directly on mobile devices has been shown to be feasible only for small circuits in the semi-honest adversarial model. Green et al. explored outsourcing the decryption of ABE ciphertexts to server-class machines while maintaining data privacy. An outsourcing technique would be useful in allowing limited capability devices to execute SFE protocols. Naor et al. [37] developed an oblivious transfer technique that sends the chooser's private selections to a third party, termed a proxy. Our work develops a novel extension to this technique to construct a garbled circuit evaluation protocol that securely outsources computation to the cloud.

Kamara et al. [21] recently developed two protocols for outsourcing secure multiparty computation to the cloud in their Salus system. While their work achieves similar functionality, we distinguish our work by constructing our protocol without assuming high-bandwidth capabilities, offering a rigorous performance analysis on mobile devices, and outlining a practical application. Additionally, our protocol does not require shared information prior to running, reducing the overhead of performing a multiparty fair coin tossing protocol.

## 3. Assumptions and Definitions
To construct a secure scheme for outsourcing garbled circuit evaluation, we consider additional assumptions and definitions beyond standard security measures in a two-party secure computation.

### 3.1 Non-collusion with the Cloud
We assume that none of the parties involved will collude with the cloud. This assumption is based on theoretical bounds and represents a realistic adversarial model. Many cloud providers would not allow outside parties to control or affect computation within their systems for trust and professional reputation reasons. Despite this, we cannot assume the cloud will always be semi-honest. Our protocol requires consistency checks to ensure participants are not behaving maliciously. Without mechanisms to enforce these checks, a "lazy" cloud provider could save resources by returning false verifications. Thus, our adversarial model encompasses a non-colluding but potentially malicious cloud provider.

### 3.2 Attacks in the Malicious Setting
When running garbled circuit-based secure multiparty computation in the malicious model, several well-documented attacks exist. We address how our system counters each:

- **Malicious Circuit Generation**: We employ an extension of the random seed technique to counter the generation of incorrect circuits.
- **Selective Failure Attack**: We use input encoding and commitment techniques to prevent selective failure attacks.
- **Input Consistency**: We ensure consistent inputs across multiple circuits using techniques from Lindell and Pinkas [29] and shelat and Shen [41].
- **Output Consistency**: We use witness-indistinguishable zero-knowledge proofs to keep outputs private and prevent tampering.

## 4. Protocol Description
[Detailed description of the protocol, including phases, steps, and interactions between the generator, evaluator, and cloud.]

## 5. Security Discussion
[Discussion of the security of the protocol, referencing technical report [6] for full security proofs.]

## 6. Performance Analysis
[Results of the extensive performance analysis, including comparisons with non-outsourced evaluation and benchmarks.]

## 7. Privacy-Preserving Navigation Application
[Description of the privacy-preserving navigation application, including design, implementation, and performance.]

## 8. Conclusions
[Concluding remarks and future work.]

---

This revised version aims to make the text more clear, coherent, and professional, ensuring that the key points and contributions are effectively communicated.