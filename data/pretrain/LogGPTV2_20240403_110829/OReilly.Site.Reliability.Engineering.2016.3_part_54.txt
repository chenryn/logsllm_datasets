### Team Summits for Enhanced Collaboration

If time and budget permit, organizing a team summit can be highly beneficial. These summits allow all team members to interact in person, providing an excellent opportunity to discuss designs and goals. For situations where neutrality is crucial, it is advantageous to hold the summit at a neutral location to avoid any "home advantage" for any individual site.

### Adapting Project Management Styles

Adopt a project management style that aligns with the current state of the project. Even projects with ambitious goals often start small, so the initial overhead should be minimal. As the project grows, it is appropriate to adapt and change the project management approach. Sufficient growth may necessitate full-scale project management.

### Collaboration Outside SRE

As discussed in Chapter 32, collaboration between the product development organization and SRE is most effective when it begins early in the design phase, ideally before any code is committed. SREs are well-positioned to make recommendations about architecture and software behavior that can be difficult or impossible to retrofit later. Their involvement in the design process benefits everyone. We use the Objectives & Key Results (OKR) process [Kla12] to track such collaborative work. For some service teams, this collaboration is central to their role, involving tracking new designs, making recommendations, assisting in implementation, and ensuring successful deployment.

### Case Study: Migrating DFP to F1

Large migration projects of existing services are common at Google. Examples include porting service components to new technologies or updating them to support new data formats. With the introduction of globally scalable database technologies like Spanner [Cor12] and F1 [Shu13], Google has undertaken several large-scale database migration projects. One such project was the migration of DoubleClick for Publishers (DFP) from MySQL to F1. DFP is a tool for publishers to manage ads on their websites and apps.

#### The Migration Process

The migration was nontrivial, involving not only a technology switch but also significant refactoring and simplification of the database schema. The goal was to ensure the new system produced identical output to the existing one, allowing for a seamless transition from the user's perspective. Additionally, the product required a live migration without any disruption to the service.

To achieve this, the product development team and the SRE team worked closely from the beginning. Product development teams are typically more familiar with the Business Logic (BL) and business needs, while SRE teams have expertise in infrastructure components. Weekly meetings were held to synchronize progress. The SREs, with extensive knowledge of large-scale data extraction and processing, drove the design of the new infrastructure. This included designing how to extract, filter, and join data, handle machine failures, and ensure linear resource usage growth.

Before proceeding, two SREs produced a detailed design document, which was thoroughly reviewed by both teams. This plan clearly identified the changes the new infrastructure would bring to the BL. Early definition of interfaces allowed the product development team to work independently on BL changes, while keeping SRE informed of updates. 

In later phases, SREs deployed the new service in a testing environment to measure performance and resource utilization. The product development team used this environment for validation, resolving discrepancies iteratively. Meanwhile, SREs prepared the production environment, allocating resources, setting up processes, and training on-call engineers. A basic release process, usually managed by the product development team or Release Engineers, was completed by SREs to expedite the migration.

The rollout was successful, with no visible user impact, demonstrating the effectiveness of close collaboration between the product development and SRE teams.

### Conclusion

Effective communication is a high priority in SRE due to the globally distributed nature of teams. This chapter has discussed the tools and techniques SRE teams use to maintain effective relationships within their team and with partner teams. Collaboration between SRE teams, while challenging, offers significant rewards, including common approaches to solving problems and focusing on more complex issues.

### The Evolving SRE Engagement Model

#### Introduction

SRE engagement typically begins with the Production Readiness Review (PRR), a process that identifies the reliability needs of a service based on its specific details. A PRR is a prerequisite for SRE to take over production responsibilities. This chapter explores different SRE engagement models, starting with the classic PRR model and moving to more advanced models.

#### The SRE Engagement Model

SRE aims to improve service reliability across multiple aspects, including system architecture, instrumentation, emergency response, capacity planning, change management, and performance. Not all Google services receive full SRE support; some are supported through documentation and consultation.

##### Documentation

Google provides development guides and a Production Guide that documents best practices. Developers can use these resources to improve their services.

##### Consultation

SREs offer consultations to discuss specific services or problem areas. The Launch Coordination Engineering (LCE) team spends much of its time consulting with development teams. For new services or features, SREs provide advice on preparing for the launch phase, highlighting risky areas and suggesting improvements.

#### Production Readiness Reviews: Simple PRR Model

When a development team requests SRE support, SRE evaluates the service's importance and the availability of SRE teams. If the service merits SRE support, a PRR is initiated. The objectives of the PRR are to verify that the service meets production standards and to improve its reliability. After sufficient improvements, an SRE team assumes production responsibilities.

##### Engagement

SRE leadership selects a suitable SRE team, and one to three SREs are chosen to conduct the PRR. Initial discussions cover establishing Service Level Objectives (SLOs)/Service Level Agreements (SLAs), planning for necessary design changes, and training schedules.

##### Analysis

During the analysis phase, SRE reviewers learn about the service and identify production shortcomings. They use a PRR checklist, which is specific to the service and based on domain expertise and best practices. Examples of checklist items include:

- Do updates to the service impact a large percentage of the system at once?
- Does the service connect to the appropriate serving instance of its dependencies?
- Does the service request a sufficiently high network quality-of-service for critical remote services?
- Does the service report errors to central logging systems?
- Are all user-visible request failures well instrumented and monitored?

This structured approach ensures that the service is ready for SRE support and can operate reliably in production.