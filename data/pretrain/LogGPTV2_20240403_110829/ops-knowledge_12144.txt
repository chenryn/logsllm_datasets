I am using APScheduler version 3.0.3 in my application, where services internally schedule and run jobs using APScheduler. Additionally, I have created a wrapper class around the actual APScheduler to serve as a facade, which also facilitates unit testing. For unit testing these services, I can mock the wrapper class. However, there are scenarios where I need the APScheduler to actually run the job during the test. Is there a way to force the APScheduler to run the job in such cases?

**Alternative Approach:**
One effective method is to separate the logic of your job into a standalone function. This allows you to call the function both within the scheduled job and in other parts of your code, including your tests. By doing this, you can explicitly execute the job logic during testing without relying on the scheduler. This approach provides more flexibility and control over the job execution, making it easier to test and maintain.