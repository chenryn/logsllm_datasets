    :::
:::
:::
::: para
如果要调用 `ifdown`{.filename}，且该设备由
[**NetworkManager**]{.application} 管理，那么 `ifdown`{.filename} 会要求
[**NetworkManager**]{.application} 终止该连接。
:::
::: para
该脚本会动态检查 [**NetworkManager**]{.application}，因此如果未运行
[**NetworkManager**]{.application}，则该脚本会故障转移至旧的、早于
[**NetworkManager**]{.application} 的基于脚本的机制。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Network_Configuration_Using_sysconfig_Files}1.9. 使用 sysconfig 文件进行网络配置 {.title}
:::
::: para
配置文件和脚本保存在 `/etc/sysconfig/`{.filename}
目录中。大多数网络配置信息都保存在这里，VPN、移动宽带及 PPPoE
配置除外，这些配置保存在 `/etc/NetworkManager/`{.filename}
子目录中。例如：接口的具体信息是保存在
`/etc/sysconfig/network-scripts/`{.filename} 目录下的 `ifcfg`{.filename}
文件中。
:::
::: para
全局设置使用 `/etc/sysconfig/network`{.filename} 文件。有关
VPN、移动宽带及 PPPoE 连接的信息保存在
`/etc/NetworkManager/system-connections/`{.filename} 中。
:::
::: para
在 Red Hat Enterprise Linux 7 中编辑 `ifcfg`{.filename}
文件时，[**NetworkManager**]{.application}
不会自动意识到更改，需为其提供通知。如果使用以下工具之一更新
[**NetworkManager**]{.application} 配置文件，则
[**NetworkManager**]{.application}
会在使用该配置文件重新连接后方可实施那些更改。例如：如果使用编辑器更改配置文件，则必须让
[**NetworkManager**]{.application} 重新读取该配置文件。方法是作为
`root`{.systemitem} 运行以下命令：
``` screen
~]# nmcli connection reload
```
上述命令会读取所有连接配置文件。另外也可以运行下面的命令，只重新载入那些有变化的文件
`ifcfg-ifname`{.filename}：
``` screen
~]# nmcli con load /etc/sysconfig/network-scripts/ifcfg-ifname
```
该命令接受多个文件名。这些命令需要 `root`{.systemitem}
授权。有关用户授权及获取授权的信息，请查看[*《Red Hat Enterprise Linux 7
系统管理员》*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/)
及 `su(1)`{.filename} 和 `sudo(8)`{.filename} man page。
:::
::: para
可使用类似 [**nmcli**]{.application}
的工具做出更改，这些工具不要求断开关联接口连接，然后再重新连接。该命令的运行格式如下：
``` synopsis
nmcli dev disconnect interface-name
```
后接：
``` synopsis
nmcli con up interface-name
```
:::
::: para
[**NetworkManager**]{.application}
不会触发任何网络脚本，但在其运行时如果使用 `ifup`{.filename}
命令，网络脚本会尝试启动
[**NetworkManager**]{.application}。有关网络脚本的说明，请查看
[第 1.8 节 "NetworkManager
及网络脚本"](#ch-Introduction_to_RHEL_Networking.html#sec-NetworkManager_and_the_Network_Scripts){.xref}。
:::
::: para
`ifup`{.filename}
脚本是一个通用脚本，可完成一些任务，并调用具体接口脚本，比如
`ifup-ethX`{.filename}、`ifup-wireless`{.filename}、`ifup-ppp`{.filename}
等等。用户手动运行 `ifup eth0`{.command} 后：
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    `ifup`{.filename} 会查找名为
    `/etc/sysconfig/network-scripts/ifcfg-eth0`{.filename} 的文件；
    :::
2.  ::: para
    如果存在 `ifcfg`{.filename} 文件，`ifup`{.filename}
    会在那个文件中查找 `TYPE`{.option} 密钥，以确定要调用的脚本类型；
    :::
3.  ::: para
    `ifup`{.filename} 根据 `TYPE`{.option} 调用
    `ifup-wireless`{.filename} 或 `ifup-eth`{.filename} 或
    `ifup-XXX`{.filename}；
    :::
4.  ::: para
    具体类型脚本执行具体类型设置；
    :::
5.  ::: para
    然后具体类型脚本让通用功能执行与 `IP`{.systemitem} 相关的任务，比如
    `DHCP`{.systemitem} 或静态设置。
    :::
:::
:::
::: para
引导时，`/etc/init.d/network`{.filename} 会读取所有 `ifcfg`{.filename}
文件，并检查每个包含 `ONBOOT=yes`{.command} 的文件，确定是否已在
`ifcfg`{.filename} 列出的设备中启动
[**NetworkManager**]{.application}。如果
[**NetworkManager**]{.application}
正在启动或已经启动那个设备，则不需要对那个文件进行任何操作，然后检查下一个包含
`ONBOOT=yes`{.command} 的文件。如果 [**NetworkManager**]{.application}
尚未启动那个设备，则 initscripts 会继续采用传统方式运行，并为那个
`ifcfg`{.filename} 文件调用 `ifup`{.filename}。
:::
::: para
最终的结果是在系统启动后，会使用 [**NetworkManager**]{.application} 或
iniscripts 启动所有包含 `ONBOOT=yes`{.command} 的 `ifcfg`{.filename}
文件。这样可保证在 [**NetworkManager**]{.application}
无法处理某些传统的网络类型时，比如 [**NetworkManager**]{.application}
不处理的类型（ISDN 或模拟拨号调制解调器），以及
[**NetworkManager**]{.application} 尚不支持的新应用程序时，仍可使用
initscripts 正常启动它们。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
建议不要在保存目前使用的 `ifcfg`{.filename}
文件的同一位置保存其备份文件。该脚本会运行 `ifcfg-*`{.command}，扩展名
`.old`{.filename}、`.orig`{.filename}、`.rpmnew`{.filename}、`.rpmorig`{.filename}
和 `.rpmsave`{.filename} 除外。最好是不要将备份文件保存在
`/etc/`{.filename} 目录下。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Introduction_to_RHEL_Networking-additional_resources}1.10. 其他资料 {.title}
:::
::: para
以下信息资源为您提供有关 Red Hat Enterprise Linux 7 联网的附加资源。
:::
::: section
::: titlepage
## [⁠]{#ch-Introduction_to_RHEL_Networking.html#sec-Introduction_to_RHEL_Networking-docs-inst}1.10.1. 已安装文档 {.title}
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `man(1)`{.filename} man page --- 论述 man pages 及如何找到它们。
    :::
-   ::: para
    `NetworkManager(8)`{.filename} man page --- 论述网络管理守护进程。
    :::
-   ::: para
    `NetworkManager.conf(5)`{.filename} man page --- 论述
    `NetworkManager`{.systemitem} 配置文件。
    :::
-   ::: para
    `/usr/share/doc/initscripts-version/sysconfig.txt`{.filename} ---
    论述配置文件及其指令。
    :::
:::
:::
:::
:::
[]{#ch-Configure_IP_Networking.html}
::: chapter
::: titlepage
# [⁠]{#ch-Configure_IP_Networking.html#ch-Configure_IP_Networking}第 2 章 配置 IP 联网 {.title}
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_IP_Networking.html#sec-Static_and_Dynamic_Interface_Settings}2.1. 静态和动态接口设置 {.title}
:::
::: para
什么时候使用静态寻址？什么时候使用动态寻址？这些都是主观决定，具体要看您的访问需要和具体要求。建立一个策略后，记录并一贯应用该策略比做出具体决定要重要。在传统公司
LAN
中，这种决定比较简单，因为通常服务器数目会比主机数少。部署和安装工具会方便为新主机提供静态配置，同时使用此类工具会改变您的工作流程和要求。以下两小节主要是为那些尚未经历此类决定的人员提供基本指导。有经验的系统管理员通常会有他们自己的一套规则和要求，这些规则和要求与在此讨论的内容有所不同。有关自动配置和管理的详情，请查看*[《Red Hat
Enterprise Linux 7
系统管理员指南》](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/)*中
[**OpenLMI**]{.application} 一节。*[《Red Hat Enterprise Linux 7
安装指南》](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/)*记录了
[**kickstart**]{.application} 的使用，还可使用该程序自动化网络设置分配。
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_IP_Networking.html#sec-When_to_Use_Static_Network_Interface_Settings}2.1.1. 什么时候使用静态网络接口设置 {.title}
:::
::: para
:::
::: para
在使用自动分配方法（比如
`DHCP`{.systemitem}）时，要确保其网络可用性时，使用静态
`IP`{.systemitem} 寻址。`DHCP`{.systemitem}、`DNS`{.systemitem}
和认证服务器是典型示例。带外（out-of-band）管理设备接口也应该使用静态设置配置，因为这些设备应该尽可能独立于其他网络架构工作。
:::
::: para
对那些并不关键，但仍要求使用 `IP`{.systemitem}
寻址的主机，请尽可能使用自动部署方法。例如：可将 `DHCP`{.systemitem}
服务器配置为每次为同一主机提供 `IP`{.systemitem}
主机。例如可使用这个方法设置公共打印机。
:::
::: para
[第 2.1.3 节
"选择网络配置方法"](#ch-Configure_IP_Networking.html#sec-Selecting_Network_Configuration_Methods){.xref}
中列出的所有配置工具都允许手动分配静态 `IP`{.systemitem}
地址。[**nmcli**]{.application} 工具还适用于根据脚本分配网络配置。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_IP_Networking.html#sec-When_to_Use_Dynamic_Interface_Settings}2.1.2. 什么时候使用动态接口设置 {.title}
:::
::: para
:::
::: para
启用并使用动态分配的 `IP`{.systemitem}
地址及其他网络信息，无论是否有无法控制的原因不进行此操作。这样可从计划及编写手动设置中节省时间用于其他目的。*动态主机控制协议*（``{=html}DHCP``{=html}）是为主机动态分配网络配置的传统方法。有关此问题的详情请查看
[第 10.1 节 "为什么使用
DHCP"](#ch-DHCP_Servers.html#sec-dhcp-why){.xref}。
:::
::: para
将配置文件设定为自动获取地址，或者将接口配置文件的 BOOTPROTO 设定为
`dhcp`{.literal} 后，[**NetworkManager**]{.application} 将默认调用
`DHCP`{.systemitem} 客户端 [**dhclient**]{.application}。需要
`DHCP`{.systemitem} 时，会为每个互联网协议启动
`dhclient`{.systemitem}，即每个接口中的 `IPv4`{.systemitem} 和
`IPv6`{.systemitem}。若未运行
[**NetworkManager**]{.application}，或者未管理接口，旧的网络设备将根据需要调用
`dhclient`{.systemitem} 实例。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_IP_Networking.html#sec-Selecting_Network_Configuration_Methods}2.1.3. 选择网络配置方法 {.title}
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [**要使用**]{.bold .bold} [**NetworkManager**]{.application}
    的文本用户界面工具 [**nmtui**]{.application} 配置接口，请执行
    [第 2.2 节 "使用文本用户界面
    nmtui"](#ch-Configure_IP_Networking.html#sec-Using_the_Text_User_Interface_nmtui){.xref}。
    :::
-   ::: para
    [**要使用**]{.bold .bold} [**NetworkManager**]{.application}
    的命令行工具 [**nmcli**]{.application} 配置接口，请执行 [第 2.3 节
    "使用 NetworkManager 命令行工具
    nmcli"](#ch-Configure_IP_Networking.html#sec-Using_the_NetworkManager_Command_Line_Tool_nmcli){.xref}。
    :::
-   ::: para
    [**要手动配置网络接口**]{.bold .bold}，请查看 [第 2.4 节
    "使用命令行界面（CLI）"](#ch-Configure_IP_Networking.html#sec-Using_the_Command_Line_Interface){.xref}。
    :::
-   ::: para
    [**要使用图形用户界面工具配置网络，**]{.bold .bold}请执行 [第 2.5 节
    "在 GNOME 图形用户界面中使用
    NetworkManager"](#ch-Configure_IP_Networking.html#sec-Using_NetworkManager_with_the_GNOME_Graphical_User_Interface){.xref}。
    :::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_IP_Networking.html#sec-Using_the_Text_User_Interface_nmtui}2.2. 使用文本用户界面 nmtui {.title}
:::
::: para
可使用文本用户界面工具 [**nmtui**]{.application}
在终端窗口中配置接口。使用以下命令启动这个工具：
``` screen
~]$ nmtui
```
此时会出现文本用户界面。无效命令会显示用法信息。
:::
::: figure
[⁠]{#ch-Configure_IP_Networking.html#exam-Select_an_Option}
::: figure-contents
::: mediaobject