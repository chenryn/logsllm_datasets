### LeetCode Problem List with Time and Space Complexity

| Title | Language | Difficulty | Time Complexity | Space Complexity |
|-------|----------|------------|-----------------|------------------|
| 217. Contains Duplicate | Go | Easy | O(log n) | O(n) |
| 219. Contains Duplicate II | Go | Easy | - | - |
| 242. Valid Anagram | Go | Easy | - | O(n) |
| 274. H-Index | Go | Medium | - | - |
| 290. Word Pattern | Go | Easy | - | - |
| 347. Top K Frequent Elements | Go | Medium | - | - |
| 349. Intersection of Two Arrays | Go | Easy | - | O(n) |
| 350. Intersection of Two Arrays II | Go | Easy | - | - |
| 438. Find All Anagrams in a String | Go | Easy | - | O(1) |
| 447. Number of Boomerangs | Go | Easy | - | O(1) |
| 451. Sort Characters By Frequency | Go | Medium | - | O(1) |
| 454. 4Sum II | Go | Medium | O(n^2) | - |
| 648. Replace Words | Go | Medium | - | - |

---

### Page 36

| Title | Language | Difficulty | Time Complexity | Space Complexity |
|-------|----------|------------|-----------------|------------------|
| 676. Implement Magic Dictionary | Go | Medium | - | - |
| 720. Longest Word in Dictionary | Go | Easy | - | - |
| 726. Number of Atoms | Go | Hard | - | O(n) |
| 739. Daily Temperatures | Go | Medium | - | - |
| 710. Random Pick with Blacklist | Go | - | - | - |
| 895. Maximum Frequency Stack | Go | - | - | - |
| 930. Binary Subarrays With Sum | Go | Medium | - | - |
| 992. Subarrays with K Different Integers | Go | - | - | - |

---

### Page 37

**Linked List Problems**

- **Solved: 30 / 35**
- **Show Progress**
- **Problem Tags**

| Title | Language | Difficulty | Time Complexity | Space Complexity |
|-------|----------|------------|-----------------|------------------|
| Add Two Numbers | Go | Medium | - | O(1) |
| Remove Nth Node From End of List | Go | Medium | - | O(1) |
| Merge Two Sorted Lists | Go | Easy | O(log n) | O(1) |
| Merge k Sorted Lists | Go | Hard | O(log n) | O(1) |
| Swap Nodes in Pairs | Go | Medium | - | O(1) |
| Reverse Nodes in k-Group | Go | Hard | O(log n) | O(1) |
| Rotate List | Go | Medium | - | O(1) |
| Remove Duplicates from Sorted List II | Go | Medium | - | O(1) |
| Remove Duplicates from Sorted List | Go | Easy | - | O(1) |
| Partition List | Go | Medium | - | O(1) |
| Reverse Linked List II | Go | Medium | - | O(1) |
| Convert Sorted List to Binary Search Tree | Go | Medium | O(log n) | - |
| Linked List Cycle | Go | Easy | - | O(1) |
| Linked List Cycle II | Go | Medium | - | O(1) |
| Reorder List | Go | Medium | - | O(1) |
| Insertion Sort List | Go | Medium | - | O(1) |
| Sort List | Go | Medium | O(n log n) | - |
| Intersection of Two Linked Lists | Go | Easy | - | O(1) |
| Remove Linked List Elements | Go | Easy | - | O(1) |
| Reverse Linked List | Go | Easy | O(n) | O(1) |
| Palindrome Linked List | Go | Easy | - | O(1) |
| Delete Node in a Linked List | Go | Easy | - | O(1) |

---

### Page 38

**Tips for Solving Linked List Problems:**

1. **Use a Dummy Head Node:** This can simplify the traversal and processing logic.
2. **Recursive Solutions:** Use recursion to solve problems, but be cautious as deep recursion can lead to timeouts and stack overflows.
3. **Reversing a Sublist:** See problem 92.
4. **Finding the Middle Node:** See problem 876.
5. **Finding the Nth Node from the End:** See problem 19. This can be done in a single pass.
6. **Merging K Sorted Lists:** See problems 21 and 23.
7. **Categorizing Linked Lists:** See problems 86 and 328.
8. **Sorting a Linked List:** Requires O(n log n) time complexity and O(1) space complexity. The only method is merge sort, implemented top-down. See problem 148.
9. **Detecting Cycles and Finding Intersection Points:** See problems 141, 142, and 160.

---

### Page 39

| Title | Language | Difficulty | Time Complexity | Space Complexity |
|-------|----------|------------|-----------------|------------------|
| Intersection of Two Linked Lists | Go | Easy | - | O(1) |
| Remove Linked List Elements | Go | Easy | - | O(1) |
| Reverse Linked List | Go | Easy | O(n) | O(1) |
| Palindrome Linked List | Go | Easy | - | O(1) |
| Delete Node in a Linked List | Go | Easy | - | O(1) |

---

This table provides a clear and organized overview of the LeetCode problems, their respective languages, difficulties, and time and space complexities. The tips section offers practical advice for solving linked list problems.