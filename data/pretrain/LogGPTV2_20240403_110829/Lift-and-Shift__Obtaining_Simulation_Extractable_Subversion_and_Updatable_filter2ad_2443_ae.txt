Finally, let us present an eﬃcient extractor ExtZ which exists assuming the BDH
knowledge assumption (cf. Appendix A.8) holds. Therefore, note that if Vpk
returns 1 on any input (pk, pkup, ζup) by BDH we have an extractor that from
this algorithm extracts upsk := x(cid:48) from z and ˆz s.t. skup = sk + upsk and pkup =
pk · µ(upsk) (componentwise).
4.3 Updatable SNARK Instantiation
Now, we demonstrate the main advantage of Lamassu in that one can use it
to generically construct SE updatable zk-SNARKs. In the following, we present
our generic construction using the deﬁnitional framework in [GKM+18]. Roughly
23
speaking, Groth et. al relaxed the CRS model by allowing the adversary to either
fully generate the CRS itself, or at least contribute to its computation as one of
the parties performing updates. In other words, we can think of this as having
the adversary interact with the KGencrs algorithm. An updatable SNARK has
the following additional PPT algorithms on top of (KGencrs, P, V, Sim). After
running (crs, tc, ζ) ← KGencrs, where ζ is a proof of correctness of crs.
Ucrs(1λ, crs,{ζi}i=n
i=1 ). Takes as input the security parameter λ, a CRS crs, and
a list of update proofs for the CRS. It outputs an updated CRS crsup and
a proof ζup of the correctness of the update.
Vcrs(1λ, crs,{ζi}i=n
i=1 ). Given the security parameter λ, a CRS crs, and a list of
proofs ζi. It outputs a bit indicating accept (b = 1), or reject (b = 0).
The standard trusted setup can be considered as an updatable setup with
ζ =  as the updated proof, in a way that the veriﬁcation algorithm Vcrs accepts
anything ζ. For a subversion resistant setup (Sub-zk-SNARKs), the proof ζ could
be added as extra elements into the CRS solely to make the CRS veriﬁable.
We present the full construction of SE updatable SNARKs in Fig. 4. Notice
that in the Fig. 4, the subverter Z could be either the algorithms (Π.KGen,
Σ.KGen) or the updater Ucrs.
Theorem 4. Let the underlying updatable SNARK scheme satisfy perfect com-
pleteness, updatable zero-knowledge, and updatable knowledge soundness. Let Σ
be an EUF-CMA secure adaptable and updatable signature scheme and ΣOT
is a strongly unforgeable one-time signature scheme. Then, the SE updatable
SNARKs argument system from Fig. 4, is (i) perfectly complete, (ii) updatable
zero-knowledge, and (iii) updatable strong simulation extractable.
We refer to Appendix B.2 for the full proof.
Instantiation By taking updatable Schnorr signatures (cf. Section 4.2), using
the Lamassu framework we can now obtain an SE updatable SNARK by lifting
the updatable SNARK in [GKM+18]. This, for instance, results in an overhead
of 1G1 + 1G2 elements in the CRS and 2G1 + 2G2 + 2Zq elements in the proofs
(cf. Table 2).
5 Evaluation
For the evaluation of OC∅C∅ and Lamassu, we focus on SNARKs built from
the pairing-friendly elliptic curve BLS12-381, so we can leverage the Jubjub
curve [HBHW19] used by Zcash for fast elliptic-curve arithmetic in the circuit.
The Jubjub curve is a twisted Edwards curve deﬁned over Fq with q being the
prime order of BLS12-381. Twisted Edwards curves enjoy complete addition laws
and they naturally ﬁt the requirements of Schnorr signatures.
The Sapling protocol uses the Jubjub curve to prove relations of the form
rk = ak·gα and checking that α is in the correct range for the witness α. The ﬁrst
24
e
r
a
s
n
o
i
t
a
r
e
p
o
f
o
r
e
b
m
u
n
e
h
t
s
a
l
l
e
w
s
a
s
f
o
o
r
p
d
n
a
S
R
C
e
h
t
r
o
f
s
e
z
i
s
.
K
R
A
N
S
s
’
h
t
o
r
G
o
t
e
v
i
t
a
l
e
r
s
i
d
a
e
h
r
e
v
o
e
h
t
s
n
o
i
t
c
u
r
t
s
n
o
c
c
o
h
-
d
a
r
o
F
n
e
v
i
g
e
h
T
.
s
K
R
A
N
S
.
s
K
R
A
N
S
-
E
S
f
o
n
o
s
i
r
a
p
m
o
C
.
2
e
l
b
a
T
g
n
i
y
l
r
e
d
n
u
e
h
t
o
t
d
e
r
a
p
m
o
c
s
d
a
e
h
r
e
v
o
.
s
e
t
a
g
n
o
i
t
a
c
i
l
p
i
t
l
u
m
f
o
r
e
b
m
u
n
e
h
t
s
e
t
o
n
e
d
n
V
G
E
2
G
E
2
G
E
3
G
E
4
G
E
5
G
E
2
,
1
G
E
2
P
1
,
G
E
2
G
E
3
,
1
G
E
2
P
1
,
1
G
E
2
P
2
P
2
P
2
P
1
P
1
s
t
i
b
π
d
a
e
h
r
e
v
O
s
t
i
b
6
1
0
1
6
1
0
1
8
2
5