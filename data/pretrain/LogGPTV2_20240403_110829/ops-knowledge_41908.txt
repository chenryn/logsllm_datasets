User: Using Eclipse with the PyDev plugin, if you choose myProject>Properties>PyDev-PYTHONPATH, you then see two tabs: Source Folders and External Libraries.  You can also choose myProject>Properties>Project References and see a widget with a checkable list of other parallel subprojects in your Eclipse/Pydev IDE workspace.  I understand that the values in these widgets configure the PYTHONPATH when you run your project.
But the documentation does not seem to say the ordering of the values you specify.  For example, are Project References values always after Source Folders and before External Libraries, in the generated PYTHONPATH?  (That is the ordering I wish, so that I can Python install one of my subprojects, and my main project will find the installed version if I have turned off Project References, but my main project will find the same project from my workspace if I turn on a Project Reference to it, while I am changing and debugging the subproject.)
Similarly (recursively) are the External Libraries of a Referenced Project inserted in the PYTHONPATH AFTER the Source Folder of a Referenced Project?  
It seems like my PYTHONPATH has site-packages external library directory BEFORE the source folder of my subproject, so Python never finds the development version of my subproject, only the subproject version as installed in site-packages.
I have tried several times to 'Force restore internal info' and to restart Eclipse.  I suppose I could have made a mistake somewhere outside of Eclipse.
Assistant: The PYTHONPATH in PyDev is computed in the following order:

Source folders of the project have highest priority (since this is the code you're expecting to be editing).
External source folders of the project being used for the launch.
Computed PYTHONPATH of the dependent projects (again, first source then external).
PYTHONPATH of the related interpreter selected.

Note that the final sys.path is actually computed by Python itself (so, it may be a bit different depending on your Python version -- i.e.: it could add things from the current working dir, current module or eggs even if you remove it from what's configured in PyDev -- although for PyDev, modules not added won't be available for code completion and would be present as errors when searched for as they won't be indexed), PyDev only changes the PYTHONPATH environment variable to match the order presented above.
If you somehow have a different outcome, please report this as a bug... (you can see what will be actually used before running in the launch run configuration > interpreter tab > see resulting command-line).