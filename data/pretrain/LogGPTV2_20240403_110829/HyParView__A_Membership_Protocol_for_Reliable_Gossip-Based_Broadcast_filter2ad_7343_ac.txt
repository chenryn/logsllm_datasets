could be from the value used in other protocols. Our gossip
based broadcast protocol was conﬁgured with a fanout of 4.
5.2. Eﬀect of Failures
We ﬁrst evaluate the impact of massive failures in the re-
liability of gossip when different membership protocols are
used. In each experiment that we run, we make all nodes
join the overlay, and execute 50 cycles of membership pro-
tocol to guarantee stabilization3. After the stabilization pe-
riod, we induce failures at random in a percentage of all
nodes in the system. We experimented with several values,
ranging from 10% to 95% of node failure. We then measure
the reliability of the protocol delivering 1.000 messages sent
from random correct nodes. All these messages are sent be-
fore the execution of another cycle of the membership pro-
3In fact, this stabilization time is not required by Scamp, as it stabilizes
immediately after the join period.
tocol. However, the membership protocols still execute all
reactive steps; in particular, they can exclude a node from
their partial views if the node is detected to be failed. The
rationale for this setting is that the interval of the periodic
behavior of the membership protocols is often long enough
to allow thousands of messages to be exchanged, and we are
looking for the impact of failures in the reliability of these
broadcasts.
Figure 2. Reliability for 1000 messages
The average reliability for these runs of 1.000 messages
is depicted in Figure 2. As it can be seen, massive per-
centage of failures have almost no visible impact on Hy-
ParView below the threshold of 90%. Even for failure rates
as high as 95%, HyParView still manages to maintain a re-
liability value in the order of deliveries to 90% of the active
processes. Both Scamp and Cyclon exhibit a constant re-
liability4 for failure percentages as low as 10%, and their
performance is signiﬁcantly hampered with failure percent-
ages above 50% (with reliabilities below 50%). On the
other hand, CyclonAcked manages to offer a competitive
performance. Although the reliability is not as high as with
HyParView, it manages to keep high reliabilities for per-
centages of failures up to 70%. This behaviour highlights
the importance of fast failure detection in gossip protocols.
The reader should also notice that HyParView has a bet-
ter reliability even when failure rates are not as high as 50%.
This happens because HyParView uses a deterministic se-
lection of nodes to whom forward gossip messages, this
combined with a symmetric view, ensures that in a stable
environment HyParView, unlike other protocols, has 100%
reliability, as long as the overlay remains connected.
Figures 3a-3f show the evolution of reliability with each
message sent, after the failures, for different failure percent-
ages. In all ﬁgures, HyParView is the line that offers better
and faster recovery usually near the 100%. Next appear Cy-
clonAcked, Cyclon and Scamp in this order for all failure
4Although their reliability is unable to reach 100% with a fanout of 4.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007(a) 20%
(b) 40%
(c) 60%
(d) 70%
(e) 80%
(f) 95%
Figure 3. Reliability after failures
levels. Above 80% failures all these lines appear close to
the value of 0%.
From the ﬁgures, it is clear that HyParView recovers al-
most immediately from the failures. This is due to the fact
that all members of the active views are tested in a single
broadcast. Basic Cyclon/ Scamp membership protocols, as
they do not use a failure detector, are unable to recover un-
til the membership protocol is executed again. In order to
maintain reliability under massive percentage of failures,
they would have to be conﬁgured with very high fanouts
(which is a cost inefﬁcient strategy in steady state). The ﬁg-
ures also show that by adding acknowledgments to the Cy-
clon based gossip protocol, CyclonAcked recovers a high
reliability after a small number of message exchanges (ap-
proximately 25). Note that, in Cyclon, a node is only tested
when it is selected (at random) as a gossip target. However,
for percentage of failures in the order of 80%, CyclonAcked
is unable to regain the reliability levels as HyParView. This
is due to the following phenomenon: given that the Cyclon
overlay is asymmetric, some nodes may have outgoing links
and no incoming link; therefore, some nodes are still able
to broadcast messages but unable to receive any messages.
On the other hand, in HyParView, the active membership is
symmetric, which means that if a node is able to reach an-
other correct node in the overlay, it is necessarily reachable
by messages sent by other nodes. This feature and a very
low clustering coefﬁcient (see Section 5.4) explains the high
resilience of HyParView.
Figure 4. Healing time
5.3. Healing Time
Figure 4 shows how many membership cycles are re-
quired to achieve the same reliability in the message dis-
semination after a massive node failure (for different per-
centage of node failures). These results were obtained as
follows: in each simulation, after the stabilization period,
failures are induced. Subsequently, multiple membership
protocol cycles are executed.
In each cycle, 10 random
nodes are selected to execute a broadcast. We then calcu-
late the average reliability of these messages, and count the
cycles required for each protocol to regain a reliability equal
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007Average
clustering
coefﬁcient
0.006836
0.022476
HyParView 0.00092
Cyclon
Scamp
Average Maximum
shortest
path
2.60426
3.35398
6.38542
hops to
delivery
10.6
14.1
9.0
Table 1. Graph properties after stabilization
or greater than the one exhibit by that same protocol before
the induction of the failure.
As expected, after the results presented before, Hy-
ParView recovers in few rounds (only 1 or 2) for all per-
centages below 80%. Cyclon requires a signiﬁcant number
of membership cycles, that grows almost linearly with the
percentage of failed nodes to achieve this goal. We do not
present values for Scamp, because the total time for Scamp
to regain it’s levels of reliability depends on the Lease Time,
which is typically high to preserve some stability in the
membership.
5.4. Graph Properties
As noted in Section 2.3, the overlays produced by the
membership protocol must exhibit some good properties
such as low clustering coefﬁcient, small average shortest
path and balanced in-degree distribution. We now show
how the different protocols perform regarding these met-
rics. Table 1 shows values to average clustering coefﬁcient
and average shortest path for all protocols5 after a period of
stabilization of 50 membership cycles. It can be seen that in
terms of average clustering coefﬁcient, HyParView achieves
signiﬁcantly lower values than Scamp or Cyclon, which is
expected considering that HyParView’s active view is much
smaller than other protocols partial views. This is an im-
portant factor to explain the high resilience that HyParView
exhibits to node failures.
In terms of average shortest path, we see that HyParView
falls behind Scamp and Cyclon. This is no surprise, as we
maintain a smaller active view, which limits the number of
distinct paths that exist across all nodes. Fortunately, this
has no impact on the latency of the gossip protocol. The
short level of global clustering and the fact that we use all
existing paths between nodes to disseminate every message,
makes our protocol deliver gossip within a smaller number
of hops than the other protocols, as it is depicted in Table 1.
Figure 5 shows the in-degree distribution of all nodes
in the overlay after the same period of stabilization. Cy-
clon and Scamp have distribution of in-degree across a wide
range of values, which means that some nodes are extremely
popular on the overlay, while other nodes are almost to-
5Results for HyParView concern its active view.
Figure 5. In-degree distribution
tally unknown. As stated before, because of this distribu-
tion some nodes on the overlay have greater probability to
receive redundant messages, while other nodes have a very
small probability to see messages once. This is specially
obvious in Scamp, where some nodes are only known by
one other node.
Due to HyParView’s symmetric active view, almost all
nodes in the overlay are known by the maximum amount of
nodes possible, which is the active view length (5). This
means that all nodes, with high probability, will receive
each message exactly the same amount of times, and also
that there is small probability for any node not to receive a
message at least once.
5.5. Discussion
It is possible to extract the following lessons from our
results. To start with, the speed of failure detection is of
paramount importance to sustain high reliability in the pres-
ence of massive percentage of faults. A gossip strategy that
relies on the use of a reliable transport that also serves as
a failure detector, over a ﬁxed overlay (built using a prob-
abilistic membership protocol) offers the best performance
possible in this regard. Also, by using all the links of the
overlay, it is possible to aim at 100% reliability as long as
the overlay remains connected. Furthermore, it allows to
use smaller fanouts than protocols that have to mask failures
and network omissions with the redundancy of gossip. The
use of small fanouts is what makes possible to use all the
links of the overlay with small overhead. Additionally, the
maintenance of a passive view, with candidates to replace
failed nodes in the active view, offers high resilience to mas-
sive failures. Therefore, the use of an hybrid approach that
contains a small active view and a larger (low cost) passive
view, maintained by different strategies, offers a better re-
silience and better resource usage than using a single (large)
view with a higher fanout.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007The use of TCP could cause a blockage in the overlay in
the presence of slow nodes that do not consume messages
from their reception buffers: TCP’s ﬂow control would
make the neighbors of that node block while trying to send
messages to it and, in turn, also stop receiving messages.
Eventually this effect would spread over the entire overlay
in an epidemic manner. This effect is, however, avoided
by the protocol using a variation of the techniques proposed
in [12], which simply considers slow nodes as having failed,
and expels them from all active views. A detailed descrip-
tion of the mechanism can be found in [10].
6. Conclusions and Future Work
Gossip protocols are appealing because they work on
overlays that have very small maintenance cost. Therefore,
they seem obvious candidates to support applications that
require extremely high resilience to failures of large per-
centage of nodes. Such massive failures can happen due to
attacks (for instance, a worm that shuts down all the ma-
chines of a particular make) or in catastrophic natural dis-
asters (such as earthquakes). To the best of our knowledge,
this is the ﬁrst paper that studied the effect on the reliability
of gossip under massive percentage of failures, when differ-
ent approaches are used to maintain distinct partial mem-
bership information.
We defend a gossip strategy that consists of ﬂooding the
overlay topology that is created by a probabilistic (partial)
membership protocol. Furthermore, we have proposed a
novel hybrid membership protocol for that purpose. The
protocol maintains a small active view and a larger passive
view for fault-tolerance. We have shown that our protocol is
able to preserve very high values of reliability, with a small
fanout, in faulty scenarios where the percentage of failed
nodes can be as high as 80%.
As future work, we would like to experiment, to better
deﬁne, the relation between the passive view size and the
resilience level of the protocol (i.e. how many failures are
supported without the overlay becoming disconnected). A
implementation of HyParView will be tested in the Planet-
Lab platform [14] in order to measure the packet overhead
of our approach due to the use of TCP.
Finally, we would also like to experiment our approach
with adaptive fanouts, by taking into account the hetero-
geneity of nodes, in order to maximize the use of available
resources, like bandwidth. To do this and still maintain our
deterministic selection of gossip targets, nodes would be re-
quired to adapt their degree (and in-degree), which might
prove an interesting approach in order to obtain optimized
emergent overlays.
References
[1] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu,
and Y. Minsky. Bimodal multicast. ACM TOCS, 17(2), May
1999.
[2] M. Deshpande, B. Xing, I. Lazardis, B. Hore, N. Venkata-
subramanian, and S. Mehrotra. Crew: A gossip-based ﬂash-
dissemination system. In Proc. of the 26th ICDCS, Wash-
ington, DC, USA, 2006.
[3] P. T. Eugster, R. Guerraoui, S. B. Handurukande,
P. Kouznetsov, and A.-M. Kermarrec. Lightweight proba-
bilistic broadcast. ACM TOCS, 21(4):341–374, 2003.
[4] P. T. Eugster, R. Guerraoui, A.-M. Kermarrec, and L. Mas-
IEEE
soulie. From Epidemics to Distributed Computing.
Computer, 37(5):60–67, 2004.
[5] A. Ganesh, A. Kermarrec, and L. Massoulie. Peer-to-peer
membership management for gossip-based protocols, 2003.
[6] A. J. Ganesh, A.-M. Kermarrec, and L. Massoulie. SCAMP:
Peer-to-peer lightweight membership service for large-scale
In Networked Group Communica-
group communication.
tion, pages 44–55, 2001.
[7] M. Hayden and K. Birman. Probabilistic broadcast. Techni-
cal report, Ithaca, NY, USA, 1996.
[8] M. Jelasity, R. Guerraoui, A.-M. Kermarrec, and M. van
Steen. The peer sampling service: experimental evaluation
of unstructured gossip-based implementations. In Proc. of
Middleware ’04, pages 79–98, 2004.
[9] A. Kermarrec, L. Massoulie, and A. Ganesh. Probabilistic
reliable dissemination in large-scale systems, 2001.
[10] J. Leit˜ao. Gossip-based broadcast protocols. Master’s thesis,
University of Lisbon, 2007.
[11] Peersim p2p simulator. http://peersim.sourceforge.net/.
[12] J. Pereira, L. Rodrigues, M. J. Monteiro, R. Oliveira, and
A.-M. Kermarrec. Neem: Network-friendly epidemic multi-
cast. In Proc. of the 22th SRDS, pages 15–24, Florence,Italy,
Oct. 2003.
[13] J. Pereira, L. Rodrigues, A. Pinto, and R. Oliveira. Low-
In
latency probabilistic broadcast in wide area networks.
Proc. of the 23th SRDS, pages 299–308, Florianopolis,
Brazil, Oct. 2004.
[14] Planetlab: Home. http://planet-lab.org/.
[15] S. Staniford, V. Paxson, and N. Weaver. How to own the
In Proceedings of the 11th
internet in your spare time.
USENIX Security Symposium, pages 149–167, Berkeley,
CA, USA, 2002. USENIX Association.
[16] A. Stavrou, D. Rubenstein, and S. Sahu. A lightweight,
robust p2p system to handle ﬂash crowds. Technical Re-
port EE020321-1, Columbia University, New York, NY, Feb.
2002.
[17] S. Voulgaris, D. Gavidia, and M. Steen. Cyclon: Inexpensive
membership management for unstructured p2p overlays.
Journal of Network and Systems Management, 13(2):197–
217, June 2005.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007