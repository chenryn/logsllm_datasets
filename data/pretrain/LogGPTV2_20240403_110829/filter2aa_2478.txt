1
Extracting the painful (blue)tooth
Matteo Beccaro
•
Security Consultant at Secure Network
•
Technical Research Leader at Opposing Force, Physical 
Security division of Secure Network
•
@_bughardy_
{
Matteo Collura
•
Student at Politecnico di Torino (www.polito.it)
•
Electronic Engineer
•
Researcher in several fields
•
{ @eagle1753
2
Who we are…
Matteo Beccaro
•
Security Consultant at Secure Network
•
Technical Research Leader at Opposing Force, Physical 
Security division of Secure Network
•
{@_bughardy_
3
Who are we…
Matteo Collura
•
Student at Politecnico di Torino
•
Electronic Engineer 
•
Researcher in different fields concerning security (NFC, 
bluetooth)
•
Now focusing on social skills (NLP, social engineering..)
•
{ @eagle1753
Index
What the hell is Bluetooth?
•
Wireless standard for exchanging data over short distances.
•
Short wavelength UHF: 2.4 – 2.485 GHz
•
79 channels (usually) + Adaptive Frequency Hopping
•
Name coming from Harald Bluetooth
•
Scandinavian humor... 
Layer protocol architecture
What the hell is Bluetooth?
Core protocols
Cable replacement protocols
Telephony control protocols
Adopted protocols
So many different stacks!
LMP, L2CAP, SDP are mandatory!
•
So many updates!
• 1.0: Mandatory BD_ADDR
• 1.1: IEEE Standard (2002)
• 1.2: Adaptive frequency-hopping spread spectrum  resistance to 
interferences and eavesdropping (theorically )
• 2.0: EDR (optional) for faster data transfer, GFSK+PSK 
modulation 
• 2.1: Secure Simple Pairing, Extended Inquiry Response
What the hell is Bluetooth?
Version 1:
Version 2:
•
So many updates!
• 3.0: Alternative MAC/PHYs for high data transfer, Unicast 
Connectionless Data
• 4.0: Includes now Bluetooth Low Energy protocol (or Smart)
• 4.1: Limited discovery time, lower consumptions, LE link layer 
topology
• 4.2: LE Data packet extension, LE «secure» connections, Link 
Layer privacy (really?)
What the hell is Bluetooth?
Version 4:
Version 3:
1. Index
Index
Known and unknown risks..
•
BlueSnarf, by Holtmann & Laurie
Bluetooth implementation on mobile phones and pocket palms
Late 2003
When?
What?
Why?
«(in)security» of OBEX protocol
No authentication needed
Easy GET requests to common files (calendar, contacts..)
No prompts on the user’s side
Known and unknown risks..
•
BlueBug, by Adam Laurie & Martin Herfurt
Bluetooth implementation on mobile phones, especially Symbian OS
2004 @DEFCON12
When?
What?
Why?
Security loophole
No secure auth prior to v2.0
Control device thorugh plain serial connection
Download items via OBEX protocol w/out prompts
Known and unknown risks..
•
Legacy (prior to v2.0) pairing procedure
Encryption Algorithm
Referred to Device B
Known and unknown risks..
•
Legacy (prior to v2.0) authentication procedure
Previously evaluated Link Key
Referred to Device B
Encryption Algorithm
Known and unknown risks..
•
Secure simple pairing
Known and unknown risks..
•
BlueChop, following BlueSnarf
Master must support multiple connections
It disrupts any bluetooth piconet from the outside
Spoof a random slave out of the piconet
Contact the master
Confusion of the master’s internal state
Piconet disruption 
What?
Provided
Known and unknown risks..
•
Bluetooth LE encryption bypass, by Mark Ryan:
– Eavesdropping vs Decrypting
– 3 different keys needed to estabilish a connection, TK, STK, LTK
– If we are able to save the key exchange procedure, we are done 
•
What if I get TK? 
Pairing
TK
STK
LTK
Known and unknown risks..
•
TK, 128 bit AES key, depends on the pairing mode:
•
Bruteforce is the way. Intel i7, just one core  less than 1 sec
•
The whole procedure may be computed offline
Just Works
6-digit PIN
Out Of Band (OOB)
TK = 0
TK = 128-bit number
TK = #fuckyourself
TK
STK
LTK
42
Officially introduced with Android 5.0 it enables to unlock the smartphone without user interaction if at least one of 
the following conditions apply:
The smartphone is in range of 
a previous saved NFC tag. 
The smartphone is within 
a certain location. 
The smartphone recognize the face of the 
owner, which must be previously saved. 
A previous enabled bluetooth device
is connected to the smartphone
The smartphone is in 
contact with a body.
NFC Unlock
Location Unlock
Bluetooth Unlock
Face Unlock
Body Unlock
SmartUnlock…
Bluetooth Unlock
This may be the most interesting and most used function of all the above. 
The user set a paired bluetooth device as Trusted, and from now on every time that device is linked to 
the smartphone the lockscreen is bypassed.
Good, so what is the problem?
Bluetooth Unlock…
In Android 
Demo Time!
Android 5.1 adds a new nice feature...
New findings...
Demo Time!
Is it fixed?
It depends…
Android >= 5.1
SmartUnlock is fixed
API are still vulnerable
Android <= 5.0.X
SmartUnlock is not fixed
API are vulnerable
New findings...
API does not have a safe method to check if a   
device is connected with a proper LK
Android Security Team told us that there is a method
for this, but it was not yet in SDK, as 27th April, 2015. 
And it still not present
New findings...
Why fixing the API is important if SmartUnlock function is fixed?
3rd party applications!
Demo time!
Demo Time!
Index
1. Index
4. Future works…
Bluetooth is everywhere, 
we are focusing on:
 IoT Devices
 Smart Locks
 Fit Band
 etc
Future Works...
Thank you
Q&A Time…