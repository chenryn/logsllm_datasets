# APT组织的聚类和攻击者活动关联
##### 译文声明
本文是翻译文章，文章原作者 信安之路，文章来源：信安之路
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
文章作者：Cherishao（信安之路威胁情报小组组员）/ ThreatPage（信安之路威胁情报小组组长）
在威胁情报分析中，将高级具有可持续性的攻击事件定性为APT事件，定位APT组织并将APT组织的攻击事件关联起来是一件非常复杂的工作。火眼的威胁研究报告从“文档（样本）类聚模型”的角度将攻击事件汇聚关联。在“文档（样本）类聚模型”分析中，采取了词频-反文档频率[TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)指标和余弦相似度分析方法，大意理解为[TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)指标找唯一性（特殊），余弦相似度找相似性（同源）。并将该模型与威胁情报结合进行量化，来帮助情报专家来发现新的威胁组织、根据分析师需要提供可靠的“类聚”来提升对威胁事件的分析效率。
## 1．序言
FireEye
一直致力于对攻击者的行为进行检测、跟踪和阻止。通过每年数百次调查和数千小时的分析使FireEye掌握了分析攻击者的大量有效信息，这些信息包括：常用恶意软件、基础架构、交付机制以及其他工具和技术的详细信息（TTP）。FireEye
不仅分析出了 50 个
APT组织和FIN组织的不同的特征报告，还收集了数以千计的相关活动的无特征“集群”，FireEye尚未对“集群”所涉及的特征及组织的归属进行声明。虽然未对“集群”进行关联，但随着时间的推移，这些集群在我们对相关活动进行分组和跟踪依旧有用。
随着 FireEye 收集的信息越来越多面越来越广，FireEye
意识到需要一种模型或者算法来协助分析这些海量信息，以发现新威胁的潜在交叉重叠和组织隶属。本文将概述 FireEye
用于构建模型的数据，分析模型涉及的算法以及该模型在未来所面临的一些挑战。
## 2．群集分类介绍
FireEye
在检测恶意活动时，会给恶意攻击行为打上标签，并根据标签相似性分组为“群集”。这些“群集”是攻击者的直接攻击行为或一系列攻击活动的一部分，可表示操作、基础结构、恶意软件。FireEye
将之称为 “ UNC ” 或“ 未分类 ”的群体。随着时间的推移，这些集群可以增长，与其他集群合并，并可能“融合”成新的威胁组织，例如 APT33 或
FIN7。只有充分了解其在攻击生命周期的每个阶段中的操作并将该活动与状态对齐的程序或犯罪操作相关联时，才会发生此分级。
对于每个组，FireEye 都可以生成一个摘要文档，其中所包含的层级为：基础结构、恶意软件文件、通信方法和其他方面的信息。图 1
显示了如何利用不同模块化的“群集”对一个“攻击者”的变化进行记录。在每个“群集”中 – 例如“恶意软件” –
FireEye有不同种“条款”，但它们有个共性：都有相关的计数。FireEye用这些数字表示使用该“术语”来记录组的频率。
图1：攻击者行为变化记录
## 3．方向目标
FireEye
的最终目标是证明一个威胁是否可以合并到现有组中，或者明确它代表一个新的独特的威胁组织。迄今为止，FireEye关于APT组织的聚类和归因决策是分析师来人工执行，因为它需要严谨的分析和证明。但是，随着
FireEye 收集到越来越多有关攻击者活动的数据，这种人工分析成为瓶颈。“群集”风险未经分析，潜在的关联和归因线索可能会断裂。因此，FireEye
将基于机器学习的模型纳入情报分析工作，以帮助发现、分析和证明这些“群集”或者威胁组织（APT组织）。FireEye 基于以下3个方向对模型进行了研发：
  * 在不同组之间创建单个可解释的（相似度）相似性“特征”
  * 评估过去的分析决策
  * 发现新的潜在证据
图2：突出显示观察到的两组之间的相似点
## 4．分析模型介绍
FireEye 将这种分析方法用在了每个威胁“群集”分类中，以此来大规模地评估组之间的唯一性和相似性。首先，FireEye
单独为每个主题建模。意味着每个主题都将在组之间产生自己的相似度范围，这些相似度最终将聚合为一个整体相似度。
下文将介绍 FireEye 如何将该分类方法应用于每个“群集”。在每个主题中，使用称为 “词频-反文档频率” 或 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 的方法将每个不同的“词”转换为值。【TF-IDF（term frequency–inverse document frequency）是一种用于信息检索与数据挖掘的常用加权技术。TF-IDF是一种[统计方法](http://baike.baidu.com/view/1379337.htm)，用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度。字词的重要性随着它在文件中出现的次数成正比增加，但同时会随着它在[语料库](http://baike.baidu.com/view/686705.htm)中出现的频率成反比下降。
其背后的基本评断准则是：
  * 如果经常与记录一起出现，则增加该术语的重要性。
  * 如果该术语在所有记录中普遍出现，则降低该术语的重要性。
一些独特的术语，可能只出现在某一系列如自定义恶意软件的少数组中，甚至可以减少常见的威胁事件，例如“鱼叉式网络钓鱼”，它们适用于绝大多数群体。
图 3 为 TF-IDF 应用于分析mal.sogu 和 mal.threebyte两个术语的 “UNC599”
案例的度量(范围)。这些项表示“恶意软件”主题中SOGU和THREEBYTE的用法，因此我们使用 TF-IDF
计算其在该主题中的值。第一个（TF）值是单个出现的次数在所有恶意软件中总数中的比。第二个值（IDF）是这些术语在所有组中出现的频率的对数。另外，FireEye采用
IDF 值的自然对数来描述-正如在图中看到的，当值接近1（非常常见的项）时，对数取值为接近零，从而降低了最终的TF_IDF值。IDF存在唯一值越多，TF_IDF最终的值更高。
图 3：针对恶意软件评估单个组时TF-IDF指标的细分
一旦给每个项一个分数，每个组现在被反映为不同主题的集合，且每个主题是其包含计算分数的向量。每个向量都可以被设想为箭头，详细说明该组在该主题中“指向”的“方向”。
在每个主题空间内，FireEye 使用另一种方法 –
[余弦相似度](https://en.wikipedia.org/wiki/Cosine_similarity)来评估各组的相似性。实质上，这是衡量两个向量并行的度量。如图
4 所示，为了评估两个组的恶意软件使用情况，FireEye 绘制了恶意软件向量，通过查看它们是否指向同一方向来进行相似性的判断。更平行意味着它们更相似。
图 4：恶意软件“空间”中的两个组的余弦相似性度量的简化细分