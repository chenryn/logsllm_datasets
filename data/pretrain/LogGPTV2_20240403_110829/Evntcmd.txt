### evntcmd
**Applies to:** Windows Server 2022, Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

**Description:**
The `evntcmd` utility is used to configure the translation of events to traps and trap destinations based on information provided in a configuration file.

**Syntax:**
```
evntcmd [/s <computer>] [/v <level>] [/n] <configuration_file>
```

**Parameters:**

- **/s <computer>**
  - Specifies the target computer by name where you want to configure the event-to-trap translation. If not specified, the configuration will be applied to the local computer.
  
- **/v <level>**
  - Determines the types of status messages that appear as traps and trap destinations are configured. The value must be an integer between 0 and 10. 
    - `10`: Displays all types of messages, including tracing messages and warnings about whether the trap configuration was successful.
    - `0`: No messages are displayed.
  
- **/n**
  - Prevents the SNMP service from restarting if the trap configuration changes on the target computer.
  
- **<configuration_file>**
  - Specifies the path to the configuration file containing the event-to-trap and trap destination settings.

- **/?**
  - Displays help information at the command prompt.

**Remarks:**
- If you need to configure traps but not trap destinations, you can use the Event to Trap Translator (a graphical utility) to create a valid configuration file. To access this utility, type `evntwin` at the command prompt if the SNMP service is installed. After defining the traps, click "Export" to generate a configuration file suitable for use with `evntcmd`. This approach allows you to easily create a configuration file and then apply it to multiple computers using `evntcmd`.

**Configuration File Syntax:**

- **Adding a Trap:**
  ```
  #pragma add <eventlogfile> <eventsource> <eventID> [count <count>] [period <seconds>]
  ```
  - **#pragma add**: Indicates that you are adding an event-to-trap configuration.
  - **<eventlogfile>**: The log file where the event is recorded.
  - **<eventsource>**: The application generating the event.
  - **<eventID>**: The unique identifier for the event.
  - **[count <count>]**: Optional. Specifies the number of times the event must occur before a trap message is sent. If omitted, the trap is sent after the first occurrence.
  - **[period <seconds>]**: Optional. Specifies the time period (in seconds) during which the event must occur the specified number of times. If omitted, the trap is sent after the specified number of occurrences, regardless of the time elapsed.

- **Removing a Trap:**
  ```
  #pragma delete <eventlogfile> <eventsource> <eventID>
  ```
  - **#pragma delete**: Indicates that you are removing an event-to-trap configuration.
  - **<eventlogfile>**, **<eventsource>**, **<eventID>**: As defined above.

- **Adding a Trap Destination:**
  ```
  #pragma add_TRAP_DEST <communityname> <hostID>
  ```
  - **#pragma add_TRAP_DEST**: Indicates that you are adding a trap destination.
  - **<communityname>**: The name of the community to which trap messages are sent.
  - **<hostID>**: The name or IP address of the host to receive the trap messages.

- **Removing a Trap Destination:**
  ```
  #pragma delete_TRAP_DEST <communityname> <hostID>
  ```
  - **#pragma delete_TRAP_DEST**: Indicates that you are removing a trap destination.
  - **<communityname>**, **<hostID>**: As defined above.

**Examples:**

- **Send a trap message if the Event Log service is restarted:**
  ```
  #pragma add System Eventlog 2147489653
  ```

- **Send a trap message if the Event Log service is restarted twice in three minutes:**
  ```
  #pragma add System Eventlog 2147489653 2 180
  ```

- **Stop sending a trap message whenever the Event Log service is restarted:**
  ```
  #pragma delete System Eventlog 2147489653
  ```

- **Send trap messages within the community named Public to the host with the IP address 192.168.100.100:**
  ```
  #pragma add_TRAP_DEST public 192.168.100.100
  ```

- **Send trap messages within the community named Private to the host named Host1:**
  ```
  #pragma add_TRAP_DEST private Host1
  ```

- **Stop sending trap messages within the community named Private to the same computer on which you are configuring trap destinations:**
  ```
  #pragma delete_TRAP_DEST private localhost
  ```

These examples illustrate how to format entries in the configuration file. They are not intended to be typed directly at the command prompt.