，输出可能
---
## Page 81
是因为相当多的服务依赖于DNS 将主机名解析到IP地址。这些问
确实存在问题时，它通常会导致极差的网络性能。举例来说，如果
5.2.1
5.2
但是DNS问题通常以意想不到的方式导致网络速度明显变慢。这
器。尽管用类似dig或nslookup的工具肯定可以检测到这个问题，
器故障了，DNS 请求将在30s超时之后才会请求第二台DNS 服务
同一域名配置了两个DNS服务器，你试图连接的第一台域名服务
棘手的问题。本节讨论一些技巧，你可以用它们来追踪网络速度
网络仅仅是速度较慢，那么跟踪它速度下降的原因往往是个比较
论过的步骤来排除故障，直到主机可重新访问。然而，如果一个
障更容易排除。因为当访问不到某个主机时，你可以执行之前讨
主机的80 端口。
下降的原因。
第5章服务器宕机了？追踪网络问题的根源
尽管DNS 常常因为网络故障而承担了过多指责，但是当DNS
在某种程度上来说，某些导致工作完全无法正常进行的网络故
显然，在这种情况下，你需要修改防火墙规则，使之允许访问
Chain INPUT （policy ACCEPT)
$sudo /sbin/iptables -L -n
target
Chain OUTPUT （policy ACCEPT）
target
ChainFORWARD (policy ACCEPT)
REJECT
target
—icmp-port-unreachable
DNS 的问题
网络速度较慢的故障排除
protopt source
prot opt source
prot opt source
tcp--0.0.0.0/0
destination
0.0.0.0/0
destination
destination
tcp dpt:80reject-with
---
## Page 82
处于一直试图查询IP地址失败的状态而导致拖延。使用ping 及
netstat 以及 iptables 就是很好的例子。默认情况下，这些工具尝试
在这种情况下：等待时间（获得响应所花费的时间）太长，而且不
netstat、iptables 时，返回结果需要一段时间，因为系统在等待 DNS
traceroute的情况下，ping 命令看起来应答需要花费很长的一段时间，
将IP地址解析为主机名。如果DNS有问题，这些命令可能由于
题甚至可以影响网络故障排除工具。
是由于带宽问题导致的，此时就是traceroute 派上用场的时候。在
有时追查到底是哪里导致网络慢是一件十分困难的事情。特别是
5.2.2通过traceroute查找网络缓慢的原因
增加日志的可读性，但同时也大大降低了服务的性能，最坏情况，
析成主机名。
章已经介绍过的命令都添加-n选项，除非我真的希望ip地址被解
以禁止任何试图将IP地址解析为主机名的行为。我已经习惯了将本
诊断很准确。我们先前讨论的所有命令都带有-n 选项，这个选项可
请求超时。
但当命令最终执行完毕，会发现往返时间相对很短暂。用route、
些IP地址解析成主机名。
当服务有大量的访问时，服务器不是忙于提供服务，而是忙于把这
个访问主机的IP地址都解析为主机名，记在日志中，虽然这样可以
意想不到的方式影响到Web服务器性能。有些Web服务器把每一
若出现上述情况，也很容易绕过DNS，这样可以使得到的故障
有些在DNS 出故障时功能会退化，ping、traceroute、route、
尽管我们会在第8章继续深入讨论这个问题，DNS解析也能以
当位于不同网络的主机与服务器之间的网络连接速度太慢时，
5.2网络速度较慢的故障排除
---
## Page 83
76
类似的工具（如 iotop)，这些工具可以确定哪些进程占用了大部分磁
开了本区域，因为时间从3ms 跳跃至275ms。
了大量带宽可能会非常棘手，好在有一些工具可以帮助你确定谁是
5.2.3
得出假设，
雅虎服务器之间的traceroute输出信息：
载导致网络缓慢的情况。例如，这里有一段美国雅虎服务器与中国
间，所以你可以跟踪在不同区域或网关的服务器，查看是否存在过
traceroute会输出你所在的主机和另一台机器之间每一跳的响应时
网络连接。但traceroute 在诊断出现网络缓慢时也很实用。因为
前面的章节中，traceroute 被用于测试主机与远程网络上的服务器
“罪魁祸首”
是由于系统中的某个程序用光了所有可用带宽。找出哪个进程占用
top是一个非常强大的故障排除工具，受它启发，产生了很多
第5章服务器宕机了？追踪网络问题的根源
有时，网速过慢并不是因为远程服务器或路由有什么问题，而
不需要对这个网络了解很多，你可以通过看每一跳之间的时间
traceroute to yahoo.cn (202.165.102.205)，30 hops max,60 byte packets
$traceroute yahoo.cn
3
使用iftop查看带宽使用情况
61.148.143.10 (61.148.143.10) 295.916 ms 295.780 ms
64-142-56-169.static.sonic.net (64.142.56.169) 1.666 ms 2.351 ms
202.96.12.190 (202.96.12.190) 306.968 ms 306.971 ms
219.158.4.65(219.158.4.65)303.441mS
219.158.97.93 (219.158.97.93) 263.538 ms 270.178ms 270.121 ms
xe-1-0-6.ar1.pao1.us.nlayer.net (69.22.130.85) 6.464 ms 6.607 ms 6.642
ael-40g.ar2.sjc1.us.nlayer.net (69.22.143.118)8.748ms
219.158.97.117 (219.158.97.117)
219.158.30.177(219.158.30.177)
ae1-50g.cr1.sjc1.us.nlayer.net
ae0-80g.cr1.pao1.us.nlayer.net
当你到达第9跳（IP为219.158.30.177）时，你已经离
(69.22.143.165)
(69.22.153.18)
275.648 ms 275.702 ms275.687ms
303.465
3.320ms3.404ms3.496ms
4.335ms
ms
295.860ms
307.052ms
3.955ms3.957ms
53.038
---
## Page 84
机之间的数据传输速率。就像平均负载一样，你可以看到带宽是从
若发现iftop 输出的顶部是备份服务器的IP地址，就能迅速发现是
间占用大部分带宽的网络连接（见图5-1）。例如，借助 iftop工具，
端主机接收的。这些列后面的三列分别表示 2s、10s、40s 时两个主
不是备份作业耗尽了所有的网络带宽。
过与 top 不同，iftop 本身不关心进程，而是列出了主机与远程 IP之
下方，第一列是源IP地址，紧接着是目标IP地址，它们之间的箭
运行iftop 的命令（需要root权限）。和top 命令一样，你可以输人
中，你可能不得不从第三方库中找到它，安装之后，只需在命令行
Debian 系列的发行版中使用，但是在基于 Red Hat 系列的发行版本
盘 I/O。还有一个工具iftop，对网络连接做了一些类似的事情。不
头显示它们之间是否正在传输数据，是从你的主机发出的还是从远
Q退出。
TOTAL:
64.142.56.172
64.142.56.172
64.142.56.172
64.142.56.172
64.142.56.172
64.142.56.172
64.142.56.172
在iftop 屏幕最上方一行显示了接口的整体流量状况。在它的正
4.142.56.172
iftop工具存在于与其同名的软件包中，可以在Red Hat和
4.142.56.172
12.5Kb
图5-1iftop输出示例
=>74.125.52.95
=>66.249.67.235
价
个
1
1
95.129.184.129
75.101.46.232
70.240.180.184
69.227.255.40
89.16.176.16
151.164.11.205
75.101.59.150
25.0Kb
868Kb
45.
823Kb
5.2网络速度较慢的故障排除77
37.5Kb
4563Kb 123KB 8155Kb
4.39Kb
44.9Kb
819Kb
160b
823KB
bbbb
6b
50.0Kb62.5Kb
199Kb
861b
09R6
538b
125K
55Kb
---
## Page 85
78
·第5章服务器宕机了？追踪网络问题的根源
册即可。
深人了解iftop 的功能，只需要输人 man iftop 阅读软件包附带的手
或目标主机的端口。当你在服务器上运行iftop 时，只显示源端口十
itop 启动，按P键可以切换显示或隐藏所有端口。但是需要注意一
竟，如果一台主机通过Web 端口占用大量的带宽，与它连接到ftp
查范围，你可能只想查看每个主机正在使用哪些端口进行通信。毕
流量。若想要禁用网络解析，只需运行带有-n 选项的 iftop 命令。
行 iftop，请输人 iftop-iethl。
主机可能有多个接口，所以如果你想要在第二个接口（eth1）上运
示它可以找到的第一个网络接口的统计数据，但在某些服务器上，
你可能需要借助iftop 的一些选项。默认情况下，iftop 的命令将显
计。与top 类似，接口会定期更新。
现在开始飙升，还是在过去的一段时间飙升的。在屏幕最下方，你
们介绍的这些选项足以帮助我们解决故障问题。但如果你想进一步
-lnp 命令找到是哪个服务在监听该端口。
易对应到机器上的某个服务。然后，请遵循本章前面介绍的netstat
口，并不容易确认哪些服务在使用它们，而服务器上的端口能很容
分奏效。这是因为对于许多服务来说，目标主机使用随机的高位端
内。如果出现这种情况，可通过按S或D键切换分别只显示源主机
端口占用大量的带宽相比，所执行的故障排除方法是不同的。一旦
表的输出速度。另一个缺点是iftop 中的 DNS 解析增加了额外的网络
个缺点是，当一个远程DNS 服务器响应很慢的时候，它可能减缓报
可以看到发送数据（TX）和接收数据（RX）的统计以及数据传输总
点，
通常iftop 会显示主机之间使用的全部带宽。但是，为了缩小检
同大多数Linux 命令一样，iftop 也拥有大量的高级选项。而我
，有时显示所有端口可能会导致你感兴趣的主机无法显示在屏幕
默认情况下，iftop 会试图将 IP地址解析成主机名。这么做的一
故障排除时通常使用不带任何参数的iftop 命令，但有些时候
---
## Page 86
的MAC地址。所以每次试图建立一个TCP握手时就发生了竞争，
样我们的主机就收到了两个同样的应答数据包，但是来自两个不同
B的包，在到达主机B的时候是否与它发送时一样，来检测出故障
法。即便如此，这种方法对某种类型的故障排除相当有效，尤其是
到协议本身，检查它们每一个往来的数据包。由于分析数据包转储
5.3
标服务器尝试对我们直接发出应答的时候也向主机发送应答包。这
在目标服务器上错误地应用NAT（网络地址翻译）规则，并且在目
步骤之后，我们在问题主机以及目标服务器同时抓取数据包。
间歇性发作的故障更加棘手的了。经过执行一系列不同的故障排除
达A，你可以肯定故障存在于两台主机之间的某个地方。
所在。例如，如果你看到主机B 发送响应给主机 A但是一直没有到
主机之间的设备导致的问题，你很可能通过检查主机A发送给主机
尤其是当两台主机之间有一个路由器或防火墙的时候。如果是两台
常的网络流量，或者你将自己埋在大量的数据包之中而看不出问题
据包转储是不太有效的故障排除方法，因为你不能区分正常与非正
客户端软件与服务器之间的通信。当你不熟悉要检查的协议时，数
识别本地网络上主机的非正常行为、网络主机配置错误，或者调试
层次较低且枯燥乏味，所以应该只有在万不得已时才采用这种方
有些细致或十分底层的问题，追踪它们的唯一的方法就是向下深人
问题。连接有时会断掉，但有时似乎又很正常。没什么比排查一个
正在排查一个主机的故障，它看起来与另一台服务器的通信似乎有
在哪里。
我想起很久以前数据包抓取方法发挥作用的一个例子，当时我
抓取数据包的最有效的方法是在通信的两端同时抓取数据包，
虽然本章中提到的技术应该可以帮助你解决大量网络问题，但
在数据包转储中，我们发现：一个配置错误的路由器一直试图
抓取数据包
5.3抓取数据包79
---
## Page 87