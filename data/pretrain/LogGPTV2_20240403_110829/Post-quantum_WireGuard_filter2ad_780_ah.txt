[33] J. Zhang, Z. Zhang, J. Ding, M. Snook, and Ö. Dagdelen, “Authenti-
cated key exchange from ideal lattices,” in Advances in Cryptology –
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:15:30 UTC from IEEE Xplore.  Restrictions apply. 
317
EUROCRYPT 2015, ser. LNCS, vol. 9057.
751.
Springer, 2015, pp. 719–
[34] J. Bos, L. Ducas, E. Kiltz, T. Lepoint, V. Lyubashevsky, J. M. Schanck,
P. Schwabe, and D. Stehlé, “CRYSTALS – Kyber: a CCA-secure
module-lattice-based KEM,” in 2018 IEEE European Symposium on
Security and Privacy, EuroS&P 2018.
IEEE, 2018, pp. 353–367.
[35] P. Longa, “A note on post-quantum authenticated key exchange from
supersingular isogenies,” Cryptology ePrint Archive, Report 2018/267,
2018.
[36] X. Xu, H. Xue, K. Wang, , M. H. Au, B. Liang, and S. Tian, “Strongly
secure authenticated key exchange from supersingular isogenies,” in
Advances in Cryptology – ASIACRYPT 2019, ser. LNCS, vol. 11921.
Springer, 2019, pp. 278–308.
[37] A. Fujioka, K. Takashima, S. Terada, and K. Yoneyama, “Supersingular
isogeny difﬁe-hellman authenticated key exchange,” in Information Se-
curity and Cryptology – ICISC 2018, ser. LNCS, vol. 11396. Springer,
2019, pp. 177–195.
[38] B. Lipp, B. Blanchet, and K. Bhargavan, “A mechanised cryptographic
proof of the WireGuard virtual private network protocol,” in IEEE
European Symposium on Security and Privacy (EuroS&P’19).
IEEE,
2019, pp. 231–246.
[39] B. Dowling, P. Rösler, and J. Schwenk, “Flexible authenticated and
conﬁdential channel establishment (fACCE): Analyzing the noise pro-
tocol framework,” Cryptology ePrint Archive, Report 2019/436, 2019,
https://eprint.iacr.org/2019/436.
[40] T. Jager, F. Kohlar, S. Schäge, and J. Schwenk, “On the security of TLS-
DHE in the standard model,” in Advances in Cryptology – CRYPTO
2012, ser. LNCS, vol. 7417. Springer, 2012, pp. 273–293.
[41] N. Kobeissi, G. Nicolas, and K. Bhargavan, “Noise Explorer: Fully
automated modeling and veriﬁcation for arbitrary Noise protocols,” in
IEEE European Symposium on Security and Privacy (EuroS&P’19).
IEEE, 2019, pp. 356–370.
[42] B. Blanchet, “ProVerif: Cryptographic protocol veriﬁer in the formal
model,” https://prosecco.gforge.inria.fr/personal/bblanche/proverif/ (ac-
cessed 2019-10-21).
[43] S. Meier, B. Schmidt, C. Cremers, and D. Basin, “The TAMARIN prover
for the symbolic analysis of security protocols,” in Computer Aided
Veriﬁcation, ser. LNCS, vol. 8044. Springer, 2013, pp. 696–701.
[44] O. Inc., “VPN software solutions & services for business | OpenVPN,”
2019, https://openvpn.net/ (accessed 2019-10-21).
[45] S. de Vries, “Achieving 128-bit security against quantum attacks
2016,
in OpenVPN,” Master’s
https://essay.utwente.nl/70677/1/2016-08-09%20MSc%20Thesis%
20Simon%20de%20Vries%20ﬁnal%20color.pdf.
thesis, University
of Twente,
[46] K. Easterbrook, K. Kane, B. LaMacchia, D. Shumow,
and
G.
2019,
https://www.microsoft.com/en-us/research/project/post-quantum-crypto-
vpn/.
“Post-quantum cryptography
Zaverucha,
VPN,”
[47] H. Krawczyk, “HMQV: A high-performance secure Difﬁe-Hellman
protocol,” Cryptology ePrint Archive, Report 2005/176, 2005, https:
//eprint.iacr.org/2005/176, extended abstract published at Crypto’05.
[48] A. Fujioka and K. Suzuki, “Sufﬁcient condition for
identity-
basedauthenticated key exchange resilientto leakage of secret keys,” in
Information Security and Cryptology – ICISC 2011, ser. LNCS, vol.
7259. Springer, 2011, pp. 490–509.
[49] C. Cremers and M. Feltz, “Beyond eCK: perfect forward secrecy
under actor compromise and ephemeral-key reveal,” Designs, Codes and
Cryptography, vol. 74, no. 1, pp. 183–218, 2015.
[50] B. A. LaMacchia, K. Lauter, and A. Mityagin, “Stronger security of
authenticated key exchange,” in Provable Security, ser. LNCS, vol. 4784.
Springer, 2007, pp. 1–16.
[51] P. W. Shor, “Algorithms for quantum computation: discrete logarithms
and factoring,” in SFCS ’94 Proceedings of the 35th Annual Symposium
on Foundations of Computer Science.
IEEE, 1994, p. 124–134.
[52] ——, “Polynomial-time algorithms for prime factorization and discrete
logarithms on a quantum computer,” SIAM Journal on Computing,
vol. 26, no. 5, p. 1484–1509, 1997.
[53] E. S. V. Freire, D. Hofheinz, E. Kiltz, and K. G. Paterson, “Non-
interactive key exchange,” in Public-Key Cryptography – PKC 2013,
ser. LNCS, vol. 7778. Springer, 2013, pp. 254–271.
[54] J. Brendel, M. Fischlin, F. Günther, and C. Janson, “PRF-ODH:
Relations, instantiations, and impossibility results,” Cryptology ePrint
Archive, Report 2017/517, 2017, https://eprint.iacr.org/2017/517.
[55] A. W. Dent, “A Designer’s Guide to KEMs,” in Cryptography and
Coding, ser. LNCS, vol. 2898. Springer, 2003, pp. 133–151.
[56] M. Bellare and A. Lysyanskaya, “Symmetric and dual prfs from standard
assumptions: A generic validation of an hmac assumption,” Cryptology
ePrint Archive, Report 2015/1198, 2015, https://eprint.iacr.org/2015/
1198.
[57] P. Rogaway, “Authenticated-encryption with associated-data,” in CCS
’02: Proceedings of the 9th ACM Conference on Computer and Com-
munications Security. ACM, 2002, pp. 98–107.
[58] A. Fujioka, K. Suzuki, K. Xagawa, and K. Yoneyama, “Strongly secure
authenticated key exchange from factoring, codes, and lattices,” Design,
Codes, and Cryptography, vol. 76, no. 3, pp. 469–504, 2015.
[59] C. Cremers, M. Horvat, J. Hoyland, S. Scott, and T. van der Merwe, “A
comprehensive symbolic analysis of tls 1.3,” in Proceedings of the 2017
ACM SIGSAC Conference on Computer and Communications Security,
ser. CCS ’17. ACM, 2017, pp. 1773–1788.
[60] D. Basin, J. Dreier, L. Hirschi, S. Radomirovic, R. Sasse, and V. Stettler,
“A formal analysis of 5g authentication,” in Proceedings of the 2018
ACM SIGSAC Conference on Computer and Communications Security,
ser. CCS ’18. ACM, 2018, pp. 1383–1396.
[61] T. T. Team, “Tamarin-prover manual,” https://tamarin-prover.github.io/
manual/tex/tamarin-manual.pdf.
[62] M. Bellare, A. Boldyreva, A. Desai, and D. Pointcheval, “Key-privacy in
public-key encryption,” in Advances in Cryptology — ASIACRYPT 2001.
Berlin, Heidelberg: Springer Berlin Heidelberg, 2001, pp. 566–582.
[63] Y. Yoshida, K. Morozov, and K. Tanaka, “Cca2 key-privacy for code-
based encryption in the standard model,” in Post-Quantum Cryptogra-
phy. Cham: Springer International Publishing, 2017, pp. 35–50.
I.
for Standards and Technology, “Submission requirements
post-quantum cryptography
evaluation
https://csrc.nist.gov/CSRC/
[64] N.
and
standardization
media/Projects/Post-Quantum-Cryptography/documents/
call-for-proposals-ﬁnal-dec-2016.pdf.
criteria
process,”
the
2016,
for
[65] H. Baan, S. Bhattacharya, S. Fluhrer, O. Garcia-Morchon, T. Laarhoven,
R. Player, R. Rietman, M.-J. O. Saarinen, L. Tolhuizen, J. e Luis Torre-
Arce, , and Z. Zhang, “Round5: KEM and PKE based on (ring) learning
with rounding,” Round-2 submission to the NIST PQC project, 2019.
[66] D. Jao, R. Azarderakhsh, M. Campagna, C. Costello, L. D. Feo, B. Hess,
A. Jalali, B. Koziel, B. LaMacchia, P. Longa, M. Naehrig, G. Pereira,
J. Renes, V. Soukharev, and D. Urbanik, “Supersingular isogeny key
encapsulation,” Round-2 submission to the NIST PQC project, 2019.
[67] C. A. Melchor, N. Aragon, M. Bardet, S. Bettaieb, L. Bidoux, O. Blazy,
J.-C. Deneuville, P. Gaborit, A. Hauteville, A. Otmani, O. Ruatta,
J.-P. Tillich, and G. Zémor, “ROLLO – Rank-Ouroboros, LAKE &
LOCKER,” Round-2 submission to the NIST PQC project, 2019,
https://pqc-rollo.org/documentation.html.
[68] G. Alagic, J. Alperin-Sheriff, D. Apon, D. Cooper, Q. Dang, Y.-K.
Liu, C. Miller, D. Moody, R. Peralta, R. Perlner, A. Robinson, and
D. Smith-Tone, “Status report on the ﬁrst round of the NIST post-
quantum cryptography standardization process,” NISTIR 8240, 2019,
https://nvlpubs.nist.gov/nistpubs/ir/2019/NIST.IR.8240.pdf.
[69] M. Mosca and D. Stebila, “Open quantum safe,” 2020, https://
openquantumsafe.org/ (accessed 2020-01-30).
[70] M. Chase, D. Derler, S. Goldfeder, C. Orlandi, S. Ramacher, C. Rech-
berger, D. Slamanig, and G. Zaverucha, “Post-quantum zero-knowledge
and signatures from symmetric-key primitives,” in Proceedings of the
2017 ACM SIGSAC Conference on Computer and Communications
Security, CCS’17. ACM, 2017, pp. 1825–1842.
[71] M. Chase, D. Derler, S. Goldfeder, J. Katz, V. Kolesnikov, C. Orlandi,
S. Ramacher, C. Rechberger, D. Slamanig, X. Wang, and G. Zaverucha,
“The Picnic signature scheme – design document,” Round-2 submission
to the NIST PQC project, 2019.
[72] C. Costello, P. Longa, and M. Naehrig, “Efﬁcient algorithms for super-
singular isogeny difﬁe-hellman,” in Advances in Cryptology – CRYPTO
2016, ser. LNCS, vol. 9814. Springer, 2016, pp. 572–601.
[73] J. W. Bos, C. Costello, L. Ducas, I. Mironov, M. Naehrig, V. Nikolaenko,
A. Raghunathan, and D. Stebila, “Frodo: Take off the ring! practical,
quantum-secure key exchange from LWE,” in Proceedings of the 2016
ACM SIGSAC Conference on Computer and Communications Security,
CCS’16. ACM, 2016, pp. 1006–1018.
[74] D. J. Bernstein and T. Lange, “eBACS: ECRYPT benchmarking of
cryptographic systems,” http://bench.cr.yp.to (accessed 2020-01-22).
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:15:30 UTC from IEEE Xplore.  Restrictions apply. 
318
A. The Dagger IND-CPA-secure KEM
APPENDIX
A description of the Dagger KEM is given in Algo-
rithms 3, 4, and 5. These algorithms use as underlying
routines Saber.PKE routines and related notation deﬁned
in [24, Sec. 2.4]. The parameters Dagger uses to instantiate
Saber.PKE are l = 3, n = 256, q = 213, p = 29, T = 23,
μ = 8. These are the same parameters as listed for Saber-PKE
in [24, Table 1], except that we decrease p and T for smaller
public key and ciphertext and higher security of the underlying
lattice problem at the cost of increased failure probability.
Algorithm 3 Dagger.KEM.KeyGen()
(seedA, b, s) = Saber.PKE.KeyGen()
Return (pk := (seedA, b), sk := s)
Algorithm 4 Dagger.KEM.Encaps()
m ← U({0, 1}256)
( ˆK, r) = G(m)
c = Saber.PKE.Enc(pk, ˆK; r)
K = H( ˆK)
Return (c, K)
Algorithm 5 Dagger.KEM.Decaps()
(cid:2) = H( ˆK
(cid:2))
(cid:2) = Saber.PKE.Dec(s, c)
ˆK
Return K
B. Computational Proof
We prove that
the PQ-WireGuard handshake protocol
(from now on abbreviated pqWG) is eCK-PFS-PSK-secure
with cleanness predicate cleaneCK-PFS-PSK (capturing perfect
forward secrecy and resilience to KCI attacks). That
is,
for any QPT algorithm A against the eCK-PFS-PSK key-
indistinguishability game AdveCK-PFS-PSK
pqWG,cleaneCK-PFS-PSK,nS ,nP ,A(λ) is
IND-CPA and
negligible under
IND-CCA assumptions.
the dual-prf, auth-aead,
Our proof largely follows the proof by Dowling and Pa-
terson [9] with as little modiﬁcation as necessary. The only
game hops that are really affected are those that are based on
the different PRFODH-assumptions and the DDH-assumption.
This concerns Game 5 of Case 1, Game 5 of Case 2, Game 3
of Case 3.2, Game 3 of Case 3.3, Game 3 of Case 3.4 and
Game 3 of Case 3.5 . Of these Game 3 of Case 3.5 is the
only one relying on the sym-mm-PRFODH assumption and
Game 3 of Case 3.2 is the only one relying on the DDH-
assumption. All others rely on sym-ms-PRFODH assumption.
This distinction has its correspondence in our proof as well:
Case 3.2 which only relied on the DDH assumption is now
based on the IND-CPA-security of CPAKEM, whereas the
PRFODH cases are now based on the IND-CCA-security of
CCAKEM. The case in which the original protocol relied on
the stronger sym-mm-PRFODH assumption is special in our
case as well and will be discussed later.
Finally we had to modify Game 3 of Case 3.1 to ﬁx a bug
that we discovered in the original proof.
Given the similarity between the cases that relied on the
sym-ms-PRFODH assumption in the original proof we will
start by providing a detailed proof for Game 5 of Case 1 and
discuss the changes necessary for the other cases afterwards.
We perform the following changes: First we rename all
occurances of HKDF to KDF in order to stay consistent
with our protocol descriptions. Then we seperate between the
eCK-PFS-PSK-adversary A and the adversaries Ri against the
security assumptions. For this we deﬁne R as the set of all
Algorithms that are deﬁned by a game-hop to possibly break a
property prop of a building block F. With this we furthermore
deﬁne Advprop
F,R(λ) to mean the maximum success probability
over all Ri ∈ R against the property prop of the building
block F.
In practice both of these changes are essentially just syntac-
tical. We will now go on to describe more substantial changes
to the actual game-hops.
with uniformly random and independent values (cid:8)C3,(cid:8)κ3. We
Game 5. In this game we replace the computation of C3, κ3
note that the replacement of the sym-ms-PRFODH assump-
tions with the more standard IND-CCA assumption for KEMs
forces us to split the original game hop into three hops. This
is necessary because of the more convoluted combination of
the static keys with both the other party’s static and ephemeral
keys and because the application of the KDF to the shared-
secret is not part of the IND-CCA game while it was part
of the PRFODH game. As such we ﬁrst replace the pseudo-
random value used for key-encapsulation with CCAKEM with
a truly random value (Game 5a) and then replace shk1 with a
random value k∗ (Game 5b). After that we replace the output
of the KDF that this value is passed to with a random one
(Game 5c). The reason for why we split the game hop instead
of inserting new ones is that we want to preserve consistency
with the numbering in the original proof.
The one case where we will deviate from the original
numbering-scheme is in the labels for the “break”-events
in Case 1: The original proof numbers these such that
Pr(break4) is the probability that the ﬁfth hybrid is broken;
in all other cases the numbers coincide however. Because
we believe that skipping break4 and increasing all following
indices by one is more readable and since this is what we do
in the full version, the indices in our proof don’t mach the
ones from the original proof here.
In Game 5a we replace the value ˆr := KDF(σi, ri) passed
to CCAKEM.Enc for the computation of ct1 and shk1 with
(cid:2).
a random bitstring ˆr
By the deﬁnition of this case, we know that at least one of
In the ﬁrst case (ri
ri and σi is random and uncorrupted.
is unknown to the adversary), we
initialize a prfswap challenger, query σi, and use the output
(cid:9)r from the prfswap challenger to replace the computation of
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:15:30 UTC from IEEE Xplore.  Restrictions apply. 
319
ˆr. By the deﬁnition of this case ri is a uniformly random
and independent value, therefore this replacement is sound.
If the test bit sampled by the prfswap challenger is 0, then
ˆr ← KDF(σi, ri) and we are in Game 4. If the test bit sampled
by the prfswap challenger is 1, then ˆr $← {0, 1}|KDF| is a truly
random value and we are in Game 5a.
.