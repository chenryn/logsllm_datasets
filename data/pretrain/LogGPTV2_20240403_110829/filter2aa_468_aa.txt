### HITCON GIRLS 的第一个软件破解课程

#### 课程名称：Charles

#### 课程内容
1. **逆向工程与软件破解概念简介**
2. **Lab 0**
3. **软件破解前你必须知道的二三事**
4. **Lab 1**
5. **通往破解点的道路 – Strings 与 API**
6. **Lab 2**
7. **软件破解实战Demo – 010 Editor**

### 逆向工程与软件破解

#### 什么是逆向工程？
- **定义**：逆向工程是通过分析一个编译过的二进制程序，试图理解其运作方式并重制的过程。
- **故事背景**：
  - 宅仔深爱着小P，却发现听不懂她说的话。宅仔决定学习机器语言，以更好地了解小P的内心世界。
  - 宅仔成功学会了逆向工程，并最终赢得了小P的心。

#### 逆向工程的过程
- 工程师通常使用高级语言编写代码，然后通过编译器将其转换为机器语言。
- 逆向工程则是将编译后的二进制文件进行反向分析，以理解或重制该程序。

#### 软件破解
- **定义**：通过逆向工程的方法，了解程序的架构和流程后，对其进行修改以改变其原始运作方式（例如，使其“乖乖听话”）。

#### 为什么学习逆向工程？
- **破解软件保护**：免费使用软件、炫耀技术等。
- **二次利用无源代码的软件**：对没有源代码的软件进行再开发。
- **评估软件质量和安全性**：进行黑箱测试。
- **研究病毒和恶意程序**：如Charles工具。
- **增强现有程序功能**：例如，编写游戏外挂。

#### 学习逆向工程的前提条件
- **编程基础**：了解基本的编程结构、逻辑判断及流程控制。
- **汇编语言知识**：具备一定的汇编语言基础。
- **耐心与热情**：逆向工程需要时间和精力。

#### 常用工具
- **调试器 (Debuggers)**
- **十六进制编辑器 (Hex Editors)**
- **PE 和资源查看/编辑器 (PE and Resource Viewers/Editors)**
- **系统监控工具 (System Monitoring Tools)**

### 课程内容详细说明

#### 逆向工程与软件破解概念简介
- 介绍逆向工程的基本概念及其在软件破解中的应用。

#### Lab 0
- **目标**：使用资源编辑器修改程序，制作中文版的小算盘。
- **步骤**：
  1. 使用XN Resource Editor打开`calc.exe`。
  2. 选择左侧栏中的String Table，展开并找到要修改的项目。
  3. 右键点击并修改所需项目。
- **动手时间**：10分钟

#### 软件破解前你必须知道的二三事
- **程序流程跳转**：介绍if-else语句及其在程序中的作用。
- **示例代码**：
  ```c
  int main() {
      unsigned int age;
      printf("Please enter your age: ");
      scanf("%d", &age);
      printf("\n");
      if (age < 18) {
          printf("I'm sorry, deer cutie, you are not allowed to drink beer :(\n");
      } else {
          printf("Let's have a crazy party !! :D\n");
      }
  }
  ```
- **输出示例**：
  ```
  C:\Documents and Settings\Administrator\桌面\Hitcon_girls\Lab>age.exe
  Please enter your age: 18
  Let's have a crazy party !! :D
  C:\Documents and Settings\Administrator\桌面\Hitcon_girls\Lab>age.exe
  Please enter your age: 12
  I'm sorry, deer cutie, you are not allowed to drink beer :(
  ```

- **调试器 (Debugger)**
  - **用途**：观察程序在各时间点的状态，包括内存、代码分支等。
  - **常用指令**：
    - `bp xxxx`：在地址xxxx设置软件断点。
    - `F9`：执行程序直到遇到断点。
    - `F8`：执行单一指令。

- **机器语言实现流程分支**
  - **比较变量与常量**：通过cmp指令比较变量与0x12(18)的大小值。
  - **跳转指令**：使用JNB（Jump if Not Below）指令实现条件跳转。

#### Lab 1
- **内容**：进一步实践逆向工程和软件破解技巧。

通过以上内容，学员将能够初步掌握逆向工程和软件破解的基本概念和技术。