# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_modifying-multipath-settings-for-storage-controllers_assembly_modifying-dm-multipath-configuration-file}修改存储控制器的多路径设置 {.title}
:::
`multipath.conf`{.literal} 配置文件的 `devices`{.literal}
部分为各个存储设备设置属性。这些属性可由 DM 多路径使用，除非被
`多路径中指定的属性 覆盖`{.literal}，或者为``{=html}
包含该设备的路径覆盖 `multipath.conf`{.literal}
文件中的部分。这些属性覆盖 `multipath.conf`{.literal} 文件的
`defaults`{.literal} 部分中设置的属性。
有关 `multipath.conf`{.literal} 配置文件的 `devices`{.literal}
部分设置的属性的详情，请查看 `multipath.conf`{.literal}(5)man page。
许多支持多路径的设备都默认包含在多路径配置中。有关默认配置值（包括支持的设备）的详情，请运行以下命令。
``` literallayout
# multipathd show config
# multipath -t
```
您可能不需要修改这些设备的值，但是如果这样做，您可以在配置文件中为覆盖这些值的设备中包含条目来覆盖默认值。您可以复制
`multipathd show config`{.literal}
命令显示的设备的设备配置默认值，并覆盖您要更改的值。
要将默认情况下不自动配置的设备添加到配置文件的这一部分，您需要设置
`供应商和产品`{.literal} ``{.literal} 参数。要查看
`/sys/block/device_name/device/vendor 和 /`{.literal}
`sys/block/device_name/device/model`{.literal}，其中
[*device_name*]{.emphasis} 是多路径设备，您可以找到这些值，如下例所示：
``` literallayout
# cat /sys/block/sda/device/vendor
WINSYS
# cat /sys/block/sda/device/model
SF2372
```
要指定的附加参数要视具体设备而定。如果设备是主动/主动模式，您通常不需要设置附加参数。您可能希望将
`path_grouping_policy`{.literal} 设置为
`multibus`{.literal}。您可能需要设置的其他参数为
`no_path_retry`{.literal} 和 `rr_min_io`{.literal}。
如果设备是主动/被动的，但它会自动使用 I/O
切换到被动路径的路径，您需要将检查器功能改为不会将 I/O
发送到路径来测试其是否正常工作的路径（否则，您的设备将一直出现故障）。这几乎总是意味着您将
`path_checker`{.literal} 设置为
`tur`{.literal}。这适用于所有支持测试单元 Ready 命令的 SCSI
设备，这是大多数操作的。
如果设备需要一个特殊命令来切换路径，那么为多路径配置这个设备需要硬件处理器内核模块。当前可用的硬件处理程序为
`emc`{.literal}。如果这不足以满足您的设备要求，则可能无法为多路径配置设备。
以下示例显示了多路径 `配置文件中的设备`{.literal} 条目。
``` literallayout
#	}
#	device {
#		vendor			"COMPAQ  "
#		product			"MSA1000         "
#		path_grouping_policy	multibus
#		path_checker		tur
#		rr_weight		priorities
#	}
#}
```
:::
::: section
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_setting-multipath-values-for-all-devices_assembly_modifying-dm-multipath-configuration-file}为所有设备设定多路径值 {.title}
:::
`multipath.conf`{.literal} 配置文件的 `overrides`{.literal}
部分允许您为所有设备设置配置值。例如，您可能希望所有设备都设置
`no_path_retry`{.literal} `失败`{.literal}。本节支持
`multipath.conf`{.literal} 配置文件的 `devices`{.literal} 和
`defaults`{.literal} 部分支持的所有属性，它们是 vendor、产品和
`修订版本`{.literal} ``{.literal} ``{.literal} 以外的所有
`devices`{.literal} 部分属性。这些属性可由 DM
多路径为所有设备使用，除非被 multipath.conf 文件的
`multipath .conf 文件中的 multipath`{.literal} s``{=html}
部分中指定的属性覆盖。这些属性覆盖 `multipath.conf`{.literal} 文件的
`devices`{.literal} 和 `defaults`{.literal} 部分中设置的属性。
有关 `multipath.conf`{.literal} 配置文件的 `devices`{.literal} 和
`defaults 部分中设置`{.literal} 的属性的详情，请查看
`multipath.conf`{.literal}(5)man page。
:::
::: section
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   有关 DM 多路径配置文件的更多信息，请参阅
    `multipath.conf(5)`{.literal} 手册页。
:::
:::
:::
[]{#assembly_managing-mpath-configuring-device-mapper-multipath.html}
::: chapter
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#assembly_managing-mpath-configuring-device-mapper-multipath}第 6 章 管理多路径卷 {.title}
:::
DM-Multipath 提供可用来管理多路径卷的各种工具和命令。
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#assembly_multipath-command-managing-mpath}multipath 命令 {.title}
:::
`multipath`{.literal}
命令用于检测和合并到设备的多个路径。它提供不同的选项来管理您的多路径设备。
[表 6.1 "有用的 `多路径`{.literal}
命令选项"](#assembly_managing-mpath-configuring-device-mapper-multipath.html#tb-table-multipath-options "表 6.1. 有用的 多路径 命令选项"){.xref}
描述 `multipath`{.literal}
命令中的一些选项，您可能会发现这些选项很有用。
::: table
[]{#assembly_managing-mpath-configuring-device-mapper-multipath.html#tb-table-multipath-options}
**表 6.1. 有用的 `多路径`{.literal} 命令选项**
::: table-contents
  选项                    描述
  ----------------------- ------------------------------------------------------------------------------------
  `-l`{.literal}          显示 `sysfs`{.literal} 和设备映射器收集的当前多路径配置。
  `-ll`{.literal}         显示来自 `sysfs`{.literal}、设备映射器以及系统中所有其他可用组件的当前多路径配置。
  `-f 设备`{.literal}     删除命名的多路径设备。
  `-F`{.literal}          删除所有未使用的多路径设备。
  `-W device`{.literal}   从 `ww ids 文件删除指定设备的ww`{.literal} id``{=html}。
  `-W`{.literal}          重置 `wwids`{.literal} 文件，使其只包含当前的多路径设备。
:::
:::
::: section
::: titlepage
## []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#ref_multipath-output-multipath-command}multipath 命令输出 {.title}
:::
当您创建、修改或者列出多路径设备时，您会看到当前设备设置的显示。格式如下。
对于每个多路径设备：
``` literallayout
action_if_any: alias (wwid_if_different_from_alias) dm_device_name_if_known vendor,product size=size features='features' hwhandler='hardware_handler' wp=write_permission_if_known
```
对于每个路径组：
``` literallayout
-+- policy='scheduling_policy' prio=prio_if_known status=path_group_status_if_known
```
对于每个路径：
``` literallayout
 `- host:channel:id:lun devnode major:minor dm_status_if_known path_status online_status
```
例如： multipath 命令的输出结果可能如下：
``` literallayout
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
如果路径已启动并准备好 I/O，则路径的状态 `已就绪`{.literal} 或
`ghost`{.literal}。如果路径停机，其状态为 `faulty 或`{.literal}
`shaky`{.literal}。路径状态由 `multipathd`{.literal} 守护进程根据
`/etc/multipath.conf`{.literal} 文件中定义的轮询间隔定期更新。
其他可能的路径状态值如下。
::: itemizedlist
-   `I/o pending`{.literal}
    ：检查器正在主动检查此路径，并且很快将更新状态。
-   `I/o timeout`{.literal} ：这与 `故障`{.literal}
    相同。它允许用户知道检查器没有在超时前返回成功或失败。
-   `Removed：`{.literal}
    该路径已从系统中删除，稍后将从多路径设备中删除。它与
    `故障`{.literal} 处理相同。
-   `wild`{.literal}:`multipathd`{.literal}
    无法运行路径检查器，因为存在内部错误或配置问题。这与
    `故障`{.literal} 大致相同，但多路径将跳过该路径上的许多操作。
-   `取消选中`{.literal}
    ：路径检查器没有在这个路径上运行，要么是因为刚发现，也没有分配的路径检查器，或者路径检查器遇到错误。这和
    `wild`{.literal} 相同。
-   delay `：`{.literal}
    路径检查器返回路径已启动，但多路径正在延迟路径的恢复，因为路径最近失败多次，且多路径已配置为在此情况下延迟路径。
:::
dm 状态和路径状态类似，但是从内核的视角来看。`活动`{.literal} dm
状态涵盖 `ready`{.literal} 和 `ghost`{.literal}
路径状态。`待处理`{.literal} 路径状态没有等同的 dm
状态。所有其他路径状态都映射到 `失败的`{.literal} dm 状态。dm
状态将保持其当前状态，直到路径检查程序完成为止。
Online `_status`{.literal} 的可能值为 `running`{.literal} 和
`offline`{.literal}。`离线`{.literal} 状态表示禁用了这个 SCSI 设备。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
创建或修改多路径设备时，路径组状态、dm 设备名称、写入权限和 dm
状态未知。另外，功能也不一定正确。
:::
:::
::: section
::: titlepage
## []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_display-mpath-config-multipath-command}显示多路径配置 {.title}
:::
您可以使用 `multipath`{.literal} 命令的 `-l`{.literal} 和
`-ll`{.literal} 选项显示当前的多路径配置。l `选项显示从 sysfs`{.literal}
``{=html} 和设备映射器中的信息收集的多路径拓扑。`ll`{.literal}
选项除显示系统的所有其他可用组件外，还显示 `-l`{.literal}
选项显示的信息。
显示多路径配置时，您可以使用 multipath 命令的 `-v`{.literal}
选项指定详细程度 `。`{.literal}指定 `-v0`{.literal}
不会生成任何输出。指定 `-v1`{.literal}
只输出创建或更新的多路径名称，然后将其反馈到其他工具，如
`kpartx`{.literal}。指定 `-v2`{.literal}
会打印所有检测到的路径、多路径和设备映射。如需更多详细信息，您还可以指定
`-v3、`{.literal} `-v4`{.literal} 或 `-v5`{.literal}。
以下示例显示了 `multipath -l`{.literal} 命令的输出结果。
``` literallayout
# multipath -l
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
以下示例显示了 `multipath -ll 命令的输出结果`{.literal}。
``` literallayout
# multipath -ll
3600d0230000000000e13955cc3757801 dm-10 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-- policy='round-robin 0' prio=1 status=enabled
| `- 19:0:0:1 sdc 8:32  active ready  running
`-- policy='round-robin 0' prio=1 status=enabled
  `- 18:0:0:1 sdh 8:112 active ready  running
3600d0230000000000e13955cc3757803 dm-2 WINSYS,SF2372
size=125G features='0' hwhandler='0' wp=rw
`-+- policy='round-robin 0' prio=1 status=active
  |- 19:0:0:3 sde 8:64  active ready  running
  `- 18:0:0:3 sdj 8:144 active ready  running
```
:::
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_resize-mpath-device-managing-mpath}重新定义在线多路径设备大小 {.title}
:::
如果您需要重新定义在线多路径设备的大小，请使用以下步骤。
::: orderedlist
1.  重新定义您的物理设备大小。
2.  执行以下命令查找 LUN 的路径：
    ``` literallayout
    # multipath -l
    ```
3.  重新定义您的路径大小。对于 SCSI 设备，为设备写入 1 到
    `重新扫描`{.literal} 文件，这样会导致 SCSI
    驱动程序重新扫描，如下命令所示：
    ``` literallayout
    # echo 1 > /sys/block/path_device/device/rescan
    ```
    请确定您为每个路径设备运行这个命令。例如，如果您的路径设备是
    `sda`{.literal}、`sdb`{.literal}、s`de`{.literal} 和
    `sdf`{.literal}，您将运行以下命令：
    ``` literallayout
    # echo 1 > /sys/block/sda/device/rescan
    # echo 1 > /sys/block/sdb/device/rescan
    # echo 1 > /sys/block/sde/device/rescan
    # echo 1 > /sys/block/sdf/device/rescan
    ```
4.  执行 `multipathd resize 命令调整`{.literal} 多路径设备的大小：
    ``` literallayout
    # multipathd resize map multipath_device
    ```