GATEWAYO
PREFIXO
IPADDRO
BOOTPROTO
TYPE
参数
[rootecentos network-scripts]# service network restart
UUID=3af72fa2-8186-4d54-83d7-8074fe8c057c
要设置主机的IP地址，可以直接通过终端命令设置，如想设置在系统重启后依然生效，
同一个网络接口可以使用子接口的方式设置多个IP地址，如【示例3-12】所示。
设置完ifefg-etho文件后，需要重启网络服务才能生效，重启后使用 ifconfig查看设置是
主要字段的含义如表3.7所示。
ONBOOT=yes
NAME=en033554984
IPV6 FAILURE_FATAL=no
IPV6 PEERROUTES=yes
IPV6 PEERDNS=yes
IPV6 DEFROUTE=yes
IPV6_AUTOCONF=yes
IPV6INIT=yes
IPV4_FAILURE_FATAL=no
DEFROUTE=yes
DNS2=192.168.146.2
DNS1=61.139.2.69
GATEWAY0=192.168.146.2
PREFIX0=24
IPADDR0=192.168.146.150
BOOTPROTO=none
TYPE=Ethernet
【示例3-11】
配置Linux系统的IP地址
设备名，此处对应网络接口为eno33554984
系统启动时是否设置此网络接口
是否为默认路由
DNS服务器地址
第一IP地址对应的网关
第一IP地址对应的子网掩码长度
第一IP地址
使用动态IP还是静态IP
设备连接类型，此处为以太网
说明
表3.7
网卡设置参数说明
---
## Page 67
看路由表。执行如下命令设置网关。
介绍，这里采用设置默认网关的方法。在Linux中，设置默认网关有两种方法：
3.3.4
单机情况下主机名可任意设置，如以下命令，重新登录后发现主机名已经改变。
3.3.3
子接口命令加入/etc/rc.local文件中。
GATEWAY=192.168.10.254
[rooteCenos /]# route add default gw 192.168.1.254
（1）第1种方法就是直接使用route 命令，在设置默认网关之前，先用route-n 命令查
设置好 IP地址以后，如果要访问其他的子网或 Intemet，用户还需要设置路由，在此不做
（2）第2种方法是在/etc/sysconfig/network-scripts/ifcfg-接口文件中添加如下字段：
如果不想每次开机都执行route命令，则应该把要执行的命令写入/etc/rc.d/rc.local文件中。
www,example.com
【示例3-13】
[rooteCentos network-scripts]# hostname www.example.com
主机名是识别某个计算机在网络中的标识，设置主机名可以使用 hostname 命令即可。在
[root@www~]#hostname
如要修改重启后依然生效，可以将主机名写入文件/etc/hostname中。如【示例3-13】所示。
当服务器重启或网络服务重启后，子接口配置将消失，如需重启后依然生效，可以将配置
eno33554984:2:1ags=4163
eno33554984:f1agS=4163
[rooteCentos network-scripts]# ifconfig
[rootecentos
【示例3-12】
设置默认网关
设置主机名
ether 00:0c:29:0b:07:80 txqueuelen 1000(Ethernet)
inet 192.168.146.152
”
inet192.168.146.150
errors0dropped 0overruns0carrier0
packets 2023 bytes 167541 (163.6KiB)
~1# ifconfig eno33554984:2 192.168.146.152 netmask 255.255.255.0
netmask255.255.255.0 broadcast 192.168.146.255
netmask255.255.255.0
frame
第3章运维必备的网络管理技能
(Ethernet)
scopeid 0x20
broadcast 192.168.146.255
collisions0
mtu1500
mtu1500
5
---
## Page 68
CentOS7系统管理与运维实战
3.4.1
nameserver指定的DNS服务器只有前三条生效。
3.3.5设置DNS服务器
56
函数作为参数，传递给 netfilter框架。
钩子函数在数据包经过协议栈的几个关键点时被调用，在这几个点中，协议栈将数据包及钩子
防火墙的规则。
防火墙方面的知识。
firewalld。由于之前版本均使用iptables，因此本书也主要介绍iptables。要使用Linux防火墙，
表示解析域名尝试的次数。如需添加DNS 服务器，可直接修改此文件，需要注意的是使用
在这2个dnsserver之间轮询，optiontimeout:1表示解析超时时间1s（默认为5s），attempts
提示
[root@Centos/l# service network restart
netfilter 的通用框架不依赖于具体的协议，而是为每种网络协议定义一套钩子函数。这些
Linux的内核提供的防火墙功能通过 netfiter框架实现，并提供了 iptables工具配置和修改
对于每种网络协议定义的钩子函数，
其中192.168.3.1为第一名字服务器，192.168.3.2为第二名字服务器，option rotate选项指
[root@Centos]#cat/etc/resolv.conf
设置DNS服务器需修改/etc/resolv.conf文件即可。下面是一个resoly.conf文件的示例。
使用service命令时需要注意，由于CentOS7中使用的是systemd，因此开启和停止服务
在最新版的CentOS 7中，系统安装了两个防火墙firewalld和 iptables，并且默认使用
options timeout:l attempts:2
options
【示例3-14】
同样，只要是更改了脚本文件，必须重启网络服务来使设置生效，可执行下面的命令：
Linux内核防火墙的工作原理
使用命令方式配置默认路由通常适用于临时测试。
cotate
Linux防火墙iptables
192
92
.168.3.2
，任何内核模块可以对每种协议的一个或多个钩子函数
---
## Page 69
参考源代码。
置上截获和操作处理数据包。
然后对应模块去检查、修改、丢弃该数据包及指示netfiter将该数据包传入用户空间的队列。
块对该协议和钩子函数进行了注册。如发现注册信息则调用该模块在注册时使用的回调函数，
进行注册，实现挂接。这样当某个数据包被传递给netfiter框架时，内核能检测到是否有有关模
从以上描述可以得知钩子提供了一种方便的机制，以便在数据包通过Linux内核的不同位
图3.3显示了数据包在通过Linux防火墙时的处理过程。
网络数据包的通信主要经过以下相关步骤，对应 netfiter定义的钩子函数，更多信息可以
1.netiliter的体系结构
NF_IP_PRE_ROUTING:网络数据包进入系统，经过了简单的检测后，数据包转交
数据链路层。在该函数中可以替换IP包的源地址，即SNAT。
该函数根据系统设置的规则对数据包进行处理，如果数据包不被丢弃，将数据包发给
NF_IP_POST_ROUTING：所有数据包在发给其他主机之前需要通过该函数的处理，
进行处理。
该函数根据系统设置的规则对数据包进行处理如果数据包不被丢弃则交给路由函数
NFIPLOCALOUT：所有从本地应用程序出来的数据包必须通过该函数的处理，
NF_IP_POST_ROUTING进行处理。
数会根据系统设置的规则对数据包进行处理，如数据包不被丢弃则转
NF_IP_FORWARD：所有不是发送给本机的数据包都要通过该函数进行处理，该函
系统设置的规则对数据包进行处理，如果数据包不被丢弃则交给本地的应用程序。
NF_IP_LOCAL_IN：所有发送给本机的数据包都要通过该函数的处理，该函数根据
弃则交给路由函数进行处理。在该函数中可以替换IP包的目的地址，即DNAT。
给该函数进行处理，然后根据系统设置的规则对数据包进行处理，如果数据包不被丢
NF IP PRE ROFTING
图3.3数据包在通过Linux防火墙时的处理过程
NF.1P4LOCAL_IN
数据校验
路山表
设备驱动
NF_IPFORWARD
本机应用
NFIP POSTROUTING
第3章 运维必备的网络管理技能
MFIPLOCALOUT
路由表
5
---
## Page 70
每个钩子按照规则进行匹配，如果与规则匹配，函数就会进行一些过滤操作，这些操作主要是
通过 iptables 工具来向内核模块注册多个过滤规则，并且指明过滤规则的优先权。设置完以后
CentOS7系统管理与运维实战
默认防火墙。其命令如下：
后这条连接的所有包都将被替换源地址。
所有来自这一连接的包。例如某一个连接的第1个数据包在这个表中被替换了源地址，那么以
变更。
NF_IP_PRE_ROUTING和NF_IP_POST_ROUTING挂钩可以完美地解决源地址和目的地址的
NF_IP_LOCAL_IN和NF_IP_LOCAL_OUT也可以做过滤，但是只是针对本机。
NF_IP_FORWARD钩子的输出和输入接口使得很多过滤工作变得非常简单。从图中可以看出，
先检查filter表，然后检查Mangle表，最后检查NAT表。
分别是：过滤（filter）表、网络地址转换（NAT）表和mangle表。
以下几个：
在调用钩子函数时是按照表的顺序来调用的。例如在执行NF_IP_PRE_ROUTING 时，首
#如果使用了IPv6，还需要开启ip6tables
#关闭并禁用firewalld
mangle 表被用于真正的改变包的信息，mangle 表和所有的5 个网络过滤的钩子函数都有关。
过滤（filter）表过滤包而不会改变包，仅仅是过滤的作用，实际上由网络过滤框架来提供
[root@Centos ~]# systemctl enable iptables
s
#启动并启用iptables
[root@Centos ~]# systemctl
[root@Centos~]#systemctl
4.切换至iptables
网络地址转换（NAT）表分别服务于两套不同的网络过滤挂钩的包，对于非本地包，
在 netfiter框架上已经创建了一个包选择系统，这个包选择工具默认已经注册了3个表，
每个函数都可以对数据包进行处理，最基本的操作为对数据包进行过滤。系统管理员可以
在正式学习iptables 之前，
2.包过滤
3.
包选择
NFACCEPT：继续正常地传递包
NF_REPEAT:
NF_QUEUE:排列包
NF_STOLEN:已经接管了包，
NF_DROP：丢弃包，停止传送
再次使用该钩子
还需要将默认使用的firewalld停止，并让系统将iptables作为
disable firewalld
stop firewalld
不要继续传送
---
## Page 71
提示
则表时，默认为filter。各个规则表的功能如下：
链、FORWARD 链、OUTPUT 链、PREROUTING 链、POSTROUTING链。
表可以包含多个链（chain），每个链可以包含多条规则（rule）。iptables主要对表（table）、链
（chain）和规则（rule）进行管理。
3.4.2
DROP
Chain FORWARD (policy ACCEPT)
iptables指令语法如下：
iptables预定义了5个链，分别对应netfilter的5个钩子函数，这5个链分别是：INPUT
iptables工具用来设置、
target
使用上述命令之后就可以在CentOS7中使用iptables了。
[root@Centos ~l# systemctl enable ip6tables
#启动并启用ip6tables
要使Linux系统成为网络防火墙，当然除了内核支持之外，还需要启用Linux的网络转发
[root@Centos~]# iptables
【示例3-15】
iptables的简单用法如【示例3-15】所示。
“-t table”参数用来指定规则表，内建的规则表分别为 nat、mangle 和 filter，当未指定规
[root@Centos ~]# systemctl startip6tables
filter这个规则表是默认规则表，针对INPUT、FORWARD和OUTPUT3个规则链
mangle:此规则表主要针对PREROUTING、FORWARD和POSTROUTING3个规则
nat:此规则表主要针对PREROUTING和POSTROUTING 两个规则链，主要功能为
这个规则表主要用来进行封包过滤的处理动作，如DRORLOGACCEPT或REJECT
链，某些特殊应用可以在此规则表里设定，比如为数据包做标记。
进行源地址或目的地址的网址转换工作（SNAT、DNAT）。
Linux软件防火墙 iptables
“-j”表示指定动作。该规则表示在filter 表FORWARD 链上新增一条规则，发往
其中“-tflter”表示该规则作用于flter表，
192.168.19.0/24网段的包采取丢弃操作。要查看某个表下的各个链的信息可以使用
iptables-nL
all
prot opt source
--192.168.19.0/24
、维护和检查Linux内核的 IP 包过滤规则。filter、NAT和mangle
-nL
0/0000
destination
“-A“表示新增规则，
第3章运维必备的网络管理技能
“-S”表示IP段选项，
---
## Page 72
9
示。如果在某一个步骤数据包被丢弃，当然就不会执行后面的检查了。
功能。如需要使系统启动时就具有该功能，可以将上面的命令写入到/etc/rc.d/rc.local文件中。
Centos7系统管理与运维实战
序还是转发给其他机器。数据包通过防火墙时分以下3种情况。
合，就会由内核里相应的驱动程序接收，然后会经过一系列操作，从而决定是发送给本地的程
步骤
步骤
echo 1>/proc/sys/net/ipv4/ip_forward
需要通过防火墙转发的数据包，
3.被转发的包
本地应用程序发出的数据包，被防火墙进行检查的顺序如表3.9所示。
2.以本地为源的包
当一个数据包进入防火墙后，如果目的地址是本机，被防火墙进行检查的顺序如表3.8所
1.以本地为目标的包
数据包通过表和链时需要遵循一定的顺序，当数据包到达防火墙时，如果MAC地址符
表
filter
mangle
filter
nat
mangle
filter
mangle
nat
mangle
POSTROUTING
POSTROUTING
OUTPUT
OUTPUT
OUTPUT
INPUT
INPUT
PREROUTING
PREROUTING
表3.9以本地为源的包检查顺序
表3.8以本地为目的的包检查顺序
数据包到达本地程序，如服务程序或客户程序
所有以本地为目的的包都需经过这个链，包的过滤规则设置在此
在路由之后，被送往本地程序之前如对包进行改写或做标记
路由判断，如包是发往本地的还是要转发的
这个链主要用来做DNAT
这个链用来mangle数据包，如对包进行改写或做标记
数据包进入网络接口
数据包在链路上进行传输
说明
被防火墙进行检查的顺序如表3.10所示。
数据包在链路上传输
离开网络接口
在这里做SNAT
进行数据包的修改
对本地发出的包过滤，包的过滤规则设置在此
对发出的包进行DNAT操作
用来mangle数据包，如对包进行改写或做标记
路由判断
本地程序，如服务程序或客户程序
说明
---
## Page 73
192.168.1.58，
也不会向路由器返回信息。
再去匹配当前链中的其他规则或同一个表内的其他规则，但数据仍然需要通过其他表中的链
【示例3-16】所示。
步骤表
8
9
（2）DROP：如果包符合条件，数据包就会被丢掉，并且不会向发送者返回任何信息
一
mychain tcp--10.0.0.0/24 0.0.0.0 tcp dpt:80
“policyDROP”表示该链的默认规则为DROP 操作。如现有一数据包，源地址为
ACCEPT a11 -- 172.16.0.0/16 0.0.0.0/0
ACCEPT all
ACCEPT
target prot opt source destination
Chain FORWARD (policy DROP)
[rootecentos~]# iptables-nvL
【示例3-16】
要进一步了解各个链中规则的匹配顺序，就来学习下filter表中FORWARD 链的输出，如
在对包进行过滤时，常用的有以下3个动作。
（3）REJECT：和DROP基本一样，区别在于除了将包丢弃并且向发送者返回错误信息
（1）ACCEPT：一旦数据包满足了指定的匹配条件，数据包就会被ACCEPT，并且不会
nat
mangle
filter
mangle
nat
mangle