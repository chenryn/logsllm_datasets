echo  
echo 'If you would like default statistics as quickly as possible, cancel'  
echo 'this script and run:'  
echo '    "/opt/pgsql9.4.0/bin/vacuumdb" -U "postgres" --all --analyze-only'  
echo  
"/opt/pgsql9.4.0/bin/vacuumdb" -U "postgres" --all --analyze-in-stages  
echo  
echo 'Done'  
```  
脚本需要我们自行提供连接参数，当然我们也可以设置环境变量，避免修改脚本(```$PGHOST $PGDATABASE $PGPASSWORD $PGUSER $PGPORT```等).  
```  
postgres@localhost-> "/opt/pgsql9.4.0/bin/vacuumdb" -U "postgres" --all --analyze-only -h /pgdata01/pg_root_9.4 -p 1922 -U postgres  
vacuumdb: vacuuming database "digoal"  
vacuumdb: vacuuming database "postgres"  
vacuumdb: vacuuming database "template1"  
```  
升级完成.  
```  
----------------------------------------------------------------------------------------------------------------------------------------------  
```  
查看数据  
```  
postgres@localhost-> /opt/pgsql9.4.0/bin/psql -h 127.0.0.1 -p 1922 -U digoal digoal  
psql (9.4.0)  
Type "help" for help.  
digoal=> \dt  
         List of relations  
 Schema |   Name   | Type  | Owner    
--------+----------+-------+--------  
 digoal | userinfo | table | digoal  
(1 row)  
digoal=> \dx  
                              List of installed extensions  
   Name   | Version |   Schema   |                     Description                        
----------+---------+------------+------------------------------------------------------  
 pldbgapi | 1.0     | public     | server-side support for debugging PL/pgSQL functions  
 plpgsql  | 1.0     | pg_catalog | PL/pgSQL procedural language  
(2 rows)  
digoal=> select count(*) from userinfo ;  
  count     
----------  
 10000000  
(1 row)  
```  
最后, 确认升级成功后, 我们可以把老的集群删掉. 删之前也请确认清楚是否真的可以删除, 不要太相信pg_upgrade.  
```  
postgres@localhost-> cat delete_old_cluster.sh   
#!/bin/sh  
rm -rf /pgdata01/pg_root  
rm -rf /pgdata04/tbs1/PG_9.3_201306121  
rm -rf /pgdata05/tbs2/PG_9.3_201306121  
```  
因为我们用了硬链接, 检查一下就可以删除了, 表空间, $PGDATA都使用了硬链接.  
```  
postgres@localhost-> stat PG_9.3_201306121  
  File: ‘PG_9.3_201306121’  
  Size: 3               Blocks: 27         IO Block: 131072 directory  
Device: 26h/38d Inode: 8           Links: 3  
Access: (0700/drwx------)  Uid: ( 1001/postgres)   Gid: ( 1001/postgres)  
Access: 2014-12-19 19:24:39.096630736 +0800  
Modify: 2014-12-19 19:24:47.718612433 +0800  
Change: 2014-12-19 19:24:47.718612433 +0800  
 Birth: -  
postgres@localhost-> du -sh *  
170M    PG_9.3_201306121  
3.0M    PG_9.4_201409291  
```  
删除后, 文件统计信息正确  
```  
postgres@localhost-> du -sh *  
170M    PG_9.4_201409291  
```  
如果要玩回退的话, 以下调整先不要做.  
确认要完全使用9.4以后, 我们还需要调整一下/etc/profile, ~/.bash_profile, 方便我们的使用.  
```  
rm -f /opt/pgsql  
ln -s /opt/pgsql9.4.0 /opt/pgsql  
vi /etc/profile  
export PATH=/opt/pgsql/bin:$PATH  
vi /home/postgres/.bash_profile  
export PGPORT=1921  
export PGDATA=/pgdata01/pg_root_9.4  
--------------------------------------------------------------------------------------------------------------------------------------------------------------  
```  
最后做一下ZFS回退测试 :   
回退也很简单, 简单的描述一下 :   
```  
[root@localhost ~]# zfs clone -o mountpoint=/old_pgdata01 zp1/pg_root@pg9.3.5 zp1/old_pgdata01  
[root@localhost ~]# zfs clone -o mountpoint=/old_pgdata02 zp1/pg_xlog@pg9.3.5 zp1/old_pgdata02  
[root@localhost ~]# zfs clone -o mountpoint=/old_pgdata03 zp1/pg_arch@pg9.3.5 zp1/old_pgdata03  
[root@localhost ~]# zfs clone -o mountpoint=/old_pgdata04 zp1/tbs1@pg9.3.5 zp1/old_pgdata04  
[root@localhost ~]# zfs clone -o mountpoint=/old_pgdata05 zp1/tbs2@pg9.3.5 zp1/old_pgdata05  
df -h  
zp1/old_pgdata01            30G   19M   30G   1% /old_pgdata01  
zp1/old_pgdata02            31G  428M   30G   2% /old_pgdata02  
zp1/old_pgdata03            31G  636M   30G   3% /old_pgdata03  
zp1/old_pgdata04            31G  170M   30G   1% /old_pgdata04  
zp1/old_pgdata05            30G   97M   30G   1% /old_pgdata05  
```  
调整pg_xlog,以及 表空间链接  
```  
[root@localhost ~]# su - postgres  
postgres@localhost-> cd /old_pgdata01  
postgres@localhost-> cd pg_root  
postgres@localhost-> ll  
total 225K  
lrwxrwxrwx 1 postgres postgres   17 Dec 19 19:23 pg_xlog -> /pgdata02/pg_xlog  
postgres@localhost-> rm -f pg_xlog  
postgres@localhost-> ln -s /old_pgdata02/pg_xlog ./  
postgres@localhost-> cd pg_tblspc/  
postgres@localhost-> ll  
total 1.0K  
lrwxrwxrwx 1 postgres postgres 14 Dec 19 19:24 16385 -> /pgdata04/tbs1  
lrwxrwxrwx 1 postgres postgres 14 Dec 19 19:24 16386 -> /pgdata05/tbs2  
postgres@localhost-> rm -f *  
postgres@localhost-> ln -s /old_pgdata04/tbs1 ./16385  
postgres@localhost-> ln -s /old_pgdata05/tbs2 ./16386  
```  
修改参数(新老版本不冲突),  
```  
archive_command = 'DIR="/old_pgdata03/pg_arch/`date +%F`";test -d $DIR || mkdir -p $DIR; cp %p $DIR/%f'  
port = 1922|1921  
```  
启动old数据库  
```  
postgres@localhost-> /opt/pgsql9.3.5/bin/pg_ctl start -D /old_pgdata01/pg_root  
server starting  
```  
链接到old数据库测试正常.  
```  
postgres@localhost-> /opt/pgsql9.3.5/bin/psql -h 127.0.0.1 -p 1921 -U digoal digoal  
psql (9.3.5)  
Type "help" for help.  
digoal=> select count(*) from userinfo ;  
  count     
----------  
 10000000  
(1 row)  
```  
## 参考  
1\. http://www.postgresql.org/docs/9.4/static/pgupgrade.html  
2\. [《PostgreSQL pg_upgrade 9.3 improve and example》](../201305/20130520_01.md)    
3\. http://download.fedoraproject.org/pub/epel  
4\. http://zfsonlinux.org/epel.html  
5\. pg_upgrade --help  
```  
Usage:  
  pg_upgrade [OPTION]...  
Options:  
  -b, --old-bindir=BINDIR       old cluster executable directory  
  -B, --new-bindir=BINDIR       new cluster executable directory  
  -c, --check                   check clusters only, don't change any data  
  -d, --old-datadir=DATADIR     old cluster data directory  
  -D, --new-datadir=DATADIR     new cluster data directory  
  -j, --jobs                    number of simultaneous processes or threads to use  
  -k, --link                    link instead of copying files to new cluster  
  -o, --old-options=OPTIONS     old cluster options to pass to the server  
  -O, --new-options=OPTIONS     new cluster options to pass to the server  
  -p, --old-port=PORT           old cluster port number (default 50432)  
  -P, --new-port=PORT           new cluster port number (default 50432)  
  -r, --retain                  retain SQL and log files after success  
  -U, --username=NAME           cluster superuser (default "postgres")  
  -v, --verbose                 enable verbose internal logging  
  -V, --version                 display version information, then exit  
  -?, --help                    show this help, then exit  
Before running pg_upgrade you must:  
  create a new database cluster (using the new version of initdb)  
  shutdown the postmaster servicing the old cluster  
  shutdown the postmaster servicing the new cluster  
When you run pg_upgrade, you must provide the following information:  
  the data directory for the old cluster  (-d DATADIR)  
  the data directory for the new cluster  (-D DATADIR)  
  the "bin" directory for the old version (-b BINDIR)  
  the "bin" directory for the new version (-B BINDIR)  
For example:  
  pg_upgrade -d oldCluster/data -D newCluster/data -b oldCluster/bin -B newCluster/bin  
or  
  $ export PGDATAOLD=oldCluster/data  
  $ export PGDATANEW=newCluster/data  
  $ export PGBINOLD=oldCluster/bin  
  $ export PGBINNEW=newCluster/bin  
  $ pg_upgrade  
```  
## 其他大版本升级思路
不管是小版本还是大版本升级，最重要的是减少业务停机时间，降低升级风险。   
1、pg_upgrade + zfs, 支持从PostgreSQL 8.3+升级到任何更高版本  
https://github.com/digoal/blog/blob/master/201412/20141219_01.md   
2、逻辑复制的方式，工具 - 支持从PostgreSQL 9.4+升级到任何更高版本  
https://github.com/aliyun/rds_dbsync  
https://www.2ndquadrant.com/en/resources/pglogical/   
3、采用FDW+ETL的方式, 支持升级到PostgreSQL 9.0+版本  
https://github.com/digoal/blog/blob/master/201710/20171027_01.md   
https://github.com/digoal/blog/blob/master/201710/20171027_02.md   
4、采用数据库订阅功能-逻辑复制, 支持从PostgreSQL 10+升级到更高版本  
https://github.com/digoal/blog/blob/master/201704/20170413_01.md  
https://github.com/digoal/blog/blob/master/201702/20170227_01.md  
https://github.com/digoal/blog/blob/master/201712/20171204_04.md  
https://github.com/digoal/blog/blob/master/201706/20170624_01.md  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")