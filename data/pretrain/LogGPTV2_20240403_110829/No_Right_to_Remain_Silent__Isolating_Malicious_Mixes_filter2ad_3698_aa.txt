title:No Right to Remain Silent: Isolating Malicious Mixes
author:Hemi Leibowitz and
Ania M. Piotrowska and
George Danezis and
Amir Herzberg
No Right to Remain Silent: Isolating Malicious Mixes
Hemi Leibowitz, Bar-Ilan University, IL; Ania M. Piotrowska and George Danezis, 
University College London, UK; Amir Herzberg, University of Connecticut, US
https://www.usenix.org/conference/usenixsecurity19/presentation/leibowitz
This paper is included in the Proceedings of the 28th USENIX Security Symposium.August 14–16, 2019 • Santa Clara, CA, USA978-1-939133-06-9Open access to the Proceedings of the 28th USENIX Security Symposium is sponsored by USENIX.No Right to Remain Silent: Isolating Malicious Mixes
Hemi Leibowitz
Bar-Ilan University, Israel
Ania M. Piotrowska
University College London, UK
George Danezis
University College London, UK
Amir Herzberg
University of Connecticut, US
Abstract
Mix networks are a key technology to achieve network
anonymity and private messaging, voting and database
lookups. However, simple mix network designs are vulner-
able to malicious mixes, which may drop or delay packets
to facilitate trafﬁc analysis attacks. Mix networks with prov-
able robustness address this drawback through complex and
expensive proofs of correct shufﬂing but come at a great cost
and make limiting or unrealistic systems assumptions. We
present Miranda, an efﬁcient mix-net design, which miti-
gates active attacks by malicious mixes. Miranda uses both
the detection of corrupt mixes, as well as detection of faults
related to a pair of mixes, without detection of the faulty
one among the two. Each active attack – including dropping
packets – leads to reduced connectivity for corrupt mixes and
reduces their ability to attack, and, eventually, to detection of
corrupt mixes. We show, through experiments, the effective-
ness of Miranda, by demonstrating how malicious mixes are
detected and that attacks are neutralized early.
1 Introduction
The increasing number of bombshell stories [27, 19, 10] re-
grading mass electronic surveillance and illicit harvesting of
personal data against both ordinary citizens and high-ranking
ofﬁcials, resulted in a surge of anonymous and private com-
munication tools. The increasing awareness of the fact that
our daily online activities lack privacy, persuades many In-
ternet users to turn to encryption and anonymity systems
which protect the conﬁdentiality and privacy of their com-
munication. For example, services like WhatsApp and Sig-
nal, which offer protection of messages through end-to-end
encryption, gained popularity over the past years. However,
such encryption hides only the content but not the meta-
data of the message, which carries a great deal of privacy-
sensitive information. Such information can be exploited to
infer who is communicating with whom, how often and at
what times. In contrast, the circuit-based onion routing Tor
network is an example of anonymity systems that protect the
meta-data. Tor is currently the most popular system offering
anonymity, attracting almost 2 million users daily. However,
as research has shown [47, 40, 42, 41], Tor offers limited
security guarantees against trafﬁc analysis.
The need for strong anonymity systems resulted in re-
newed interest in onion mixnets [12]. In an onion mixnet,
sender encrypts a message multiple times, using the public
keys of the destination and of multiple mixes. Onion mixnets
are an established method for providing provable protec-
tion against meta-data leakage in the presence of a powerful
eavesdropper, with low computational overhead. Early mix-
nets suffered from poor scalability, prohibitive latency and/or
low reliability, making them unsuitable for many practical
applications. However, recently, researchers have made sig-
niﬁcant progress in designing mixnets for high and low la-
tency communication with improved scalability and perfor-
mance overhead [44, 48, 13]. This progress is also visible in
the industrial sector, with the founding of companies whose
goal is to commercialise such systems [1, 2].
Onion mixnets offer strong anonymity against passive ad-
versaries: a single honest mix in a cascade is enough to en-
sure anonymity. However, known mixnet designs are not ro-
bust against active long-term trafﬁc analysis attacks, involv-
ing dropping or delaying packets by malicious mixes. Such
attacks have severe repercussions for privacy and efﬁciency
of mix networks. For example, a disclosure attack in which a
rogue mix strategically drops packets from a speciﬁc sender
allows the attacker to infer with whom the sender is commu-
nicating, by observing which recipient received fewer pack-
ets than expected [4]. Similarly, Denial-of-Service (DoS)
attacks can be used to enhance de-anonymization [9], and
(n−1) attacks allow to track packets over honest mixes [45].
It is challenging to identify and penalize malicious mixes
while retaining strong anonymity and high efﬁciency. Trivial
strategies for detecting malicious mixes are fragile and may
become vectors for attacks. Rogue mixes can either hide
their involvement or worse, make it seem like honest mixes
are unreliable, which leads to their exclusion from the net-
USENIX Association
28th USENIX Security Symposium    1841
work. Several approaches to the problem of active attacks
and reliability were studied, however, they have signiﬁcant
shortcomings, which we discuss in Section 8.
In this work, we revisit the problem of making decryption
mix networks robust to malicious mixes performing active
attacks. We propose Miranda1, an efﬁcient reputation-based
design, that detects and isolates active malicious mixes. We
present security arguments that demonstrate the effective-
ness of Miranda against active attacks. The architectural
building blocks behind Miranda have been studied by pre-
vious research, but we combine them with a novel approach
which takes advantage of detecting failure of inter-mix links,
used to isolate and disconnect corrupt mixes, in addition to
direct detection of corrupt mixes. This allows Miranda to
mitigate corrupt mixes, without requiring expensive compu-
tations.
Miranda disconnects corrupt mixes by carefully gathering
evidence of their misbehavior, resulting in the removal of
links which are misused by the adversary. The design in-
cludes a set of secure and decentralized mix directory au-
thorities that select and distribute mix cascades once every
epoch, based on the gathered evidence of the faulty links
between mixes. Repeated misbehaviors result in the com-
plete exclusion of the misbehaving mixes from the system
(see Figure 1).
We believe that Miranda is an important step toward a de-
ployable, practical strong-anonymity system. However, Mi-
randa design makes several signiﬁcant simplifying assump-
tions. These include (1) a ﬁxed set of mixes (no churn), (2)
a majority of benign mixes (no Sybil), (3) reliable commu-
nication and efﬁcient processing (even during DoS), and (4)
synchronized clocks. Future work should investigate, and
hopefully overcome, these challenges; see Section 9.
Contributions. Our paper makes the following contribu-
tions:
• We present Miranda, an efﬁcient, low-cost and scalable
novel design that detects and mitigates active attacks. To
protect against such attacks, we leverage reputation and
local reports of faults. The Miranda design can be inte-
grated with other mix networks and anonymous commu-
nication designs.
• We propose an encoding for secure loop messages, that
may be used to securely test the network for dropping at-
tacks – extending traditional mix packet formats for veri-
ﬁability.
• We show how Miranda can take advantage of techniques
like community detection in a novel way, which further
improves its effectiveness.
• We analyze the security properties of Miranda against a
wide range of attacks.
1“Miranda warning” is the warning used by the US police, in order to
notify people about their rights before questioning them. Since Miranda
prevents adversaries from silently (but actively) attacking the mix network,
we refer to it as no right to remain silent.
Overview. The rest of this paper is organized as follows. In
Section 2, we discuss the motivation behind our work, and
deﬁne the threat model and security goals. In Section 3, we
present important concepts of Miranda. In Sections 4 and 5,
we detail the core protocols of Miranda, which detect and
penalize active attacks. In Section 6, we present improved,
community-based detection of malicious mixes. In Section 7,
we evaluate the security properties of Miranda against active
attacks. In Section 8, we contrast our design to related work.
Finally, we discuss future work in Section 9 and conclude in
Section 10.
2 The Big Picture
In this section, we outline the general model of the Miranda
design, deﬁne the threat model, and motivate our work by
quantifying how active attacks threaten anonymity in mix
networks. Then, we summarize the security goals of Mi-
randa.
2.1 General System Model
We consider an anonymous communication system consist-
ing of a set of users communicating over the decryption mix
network [12] operating in synchronous batches, denoted as
rounds. Depending on the path constraints, the topology may
be arranged in separate cascades or a Stratiﬁed network [21].
We denote by M the set of all mixes building the anonymous
network. For simplicity, in this work we assume that the set
of mixes M is ﬁxed (no churn). See discussion in Section 9
of this and other practical challenges.
Messages are end-to-end layer encrypted into a crypto-
graphic packet format by the sender, and the recipient per-
forms the last stage of decryption. Mixes receive packets
within a particular round, denoted by r. Each mix decodes
a successive layer of encoding and shufﬂes all packets ran-
domly. At the end of the round, each mix forwards all pack-
ets to their next hops. Changing the binary pattern of packets
by removing a single layer of encryption prevents bit-wise
correlation between incoming and outgoing packets. More-
over, mixing protects against an external observer, by obfus-
cating the link between incoming and outgoing packets.
Message packet format. In this paper, we use the Sphinx
cryptographic packet format [15]. However, other packet
formats can be used, as long as they fulﬁll certain proper-
ties. The messages encoded should be of constant length
and indistinguishable from each other at any stage in the
network. Moreover, the encryption should guarantee du-
plicates detection, and eliminate tampered messages (tag-
ging attacks). The packet format should also allow senders
to encode arbitrary routing information for mixes or re-
cipients. We denote the result of encoding a message as
Pack(path, routingInfo, rnd, recipient, message), where rnd
1842    28th USENIX Security Symposium
USENIX Association
(a) Connectivity graph in the beginning. All
mixes are willing to communicate with each other.
(b) Miranda detects active attacks and removes the links
between the honest and dishonest nodes (Section 4.3).
(c) Miranda applies community detection (Section 6)
to further detect dishonest nodes and disconnect them
from the honest nodes.
Figure 1: High-level overview of the process of isolating malicious mixes in Miranda.
denotes a random string of bits used by the packet format.
2.2 Threat Model
We consider an adversary whose goal is to de-anonymize
packets traveling through the mix network. Our adversary
acts as a global observer, who can eavesdrop on all trafﬁc ex-
changed among the entities in the network, and also, knows
the rate of messages that Alice sends/receives 2. Moreover,
all malicious entities in the system collude with the adver-
sary, giving access to their internal states and keys. The ad-
versary may control many participating entities, but we as-
sume a majority of honest mixes and directory servers (used
for management, see Section 3). We allow arbitrary number
of malicious clients but assume that there are (also) many
honest clients - enough to ensure that any ﬁrst-mix in a cas-
cade, will receive a ‘sufﬁcient’ number of messages in most
rounds - say, 2ω, where ω is sufﬁcient to ensure reasonable
anonymity, for one or few rounds.
In addition, Miranda assumes reliable communication be-
tween any pair of honest participants, and ignores the time
required for computations - hence, also any potential for
Miranda-related DoS. In particular, we assume that the
adversary cannot arbitrarily drop packets between honest
parties nor delay them for longer than a maximal period.
This restricted network adversary is weaker than the stan-
dard Dolev-Yao model, and in line with more contempo-
rary works such as XFT [35] that assumes honest nodes can
eventually communicate synchronously. It allows more efﬁ-
cient Byzantine fault tolerance schemes, such as the one we
present. In practice, communication failures will occur; see
discussion in Section 9 of this and other practical challenges.
We denote by n the total number of mixes in the network
(|M| = n), nm of which are malicious and nh are honest
(n = nm + nh). We refer to cascades where all mixes are ma-
licious as fully malicious. Similarly, as fully honest we refer
to cascades where all nodes are honest, and semi-honest to
2We emphasize that this is a non-trivial adversarial advantage. In reality,
the adversary might not know Alice’s rate, and therefore might be more
limited regarding de-anonymization attacks.
the ones where only some of the mixes are honest. A link
between an honest mix and a malicious mix is referred to as
a semi-honest link.
2.3 What is the Impact of Active Attacks on
Anonymity?
Active attacks, like dropping messages, can result in a catas-
trophic advantage gained by the adversary in linking the
communicating parties. To quantify the advantage, we de-
ﬁned a security game, followed by a qualitative and compos-
able measure of security against dropping attacks. To our
knowledge, this is the ﬁrst analysis of such attacks and we
provide full details in [34]. Our results support the ﬁnd-
ings of previous works on statistical disclosure attacks [4]
and DoS-based attacks [9], arguing that the trafﬁc analy-
sis advantage gained from dropping messages is signiﬁcant.
We found that the information leakage for realistic volumes
of trafﬁc (10–100 messages per round) is quite signiﬁcant:
the adversary can improve de-anonymization by about 20%.
For larger trafﬁc rates (more than 1000 messages per round)
the leakage drops but expecting each client to receive over
1000 messages per round on average seems unrealistic, un-
less large volumes of synthetic cover trafﬁc is used. The
lesson drawn from our analysis and previous studies is clear:
it is crucial to design a mechanism to detect malicious nodes
and remove them from the system after no more than a few
active attacks. The Miranda design achieves this goal.
2.4 Security Goals of Miranda
The main goal of a mix network is to hide the correspon-
dence between senders and recipients of the messages in the
network. More precisely, although the communication is
over cascades that might contain malicious mixes, the Mi-
randa design aims to provide protection which is indistin-
guishable from the protection provided by an ‘ideal mix’, i.e.,
a single mix node which is known to be honest.
USENIX Association
28th USENIX Security Symposium    1843
The key goals of Miranda relate to alleviating and discour-
aging active attacks on mix networks, as they have a signiﬁ-
cant impact on the anonymity through trafﬁc analysis. This is
achieved through the detection and exclusion of misbehaving
mixes. The Miranda design offers the following protections
against active attacks:
Detection of malicious nodes. Every active attack by a cor-
rupt mix is detected with non-negligible probability, by at
least one entity.
Separation of malicious nodes. Every active attack by a
rogue mix results, with a non-negligible probability, in the
removal of at least one link connected to the rogue mix - or
even removal of the rogue mix itself.
Reducing attacks impact over multiple epochs. Repeated
application of Miranda lowers the overall prevalence and im-
pact of active attacks by corrupt mixes across epochs, limit-
ing the ability of the adversary to drop or delay packets.
3 Rounds, Epochs and Directories
In Miranda, as in other synchronous mixnet designs, time is
broken into rounds, and in each round, a mix ‘handles’ all
messages received in the previous round. However, a more
unique element of Miranda is that rounds are collected into
epochs. Epochs are used to manage Miranda; the beginning
of each epoch includes announcement of the set of cascades
to be used in this epoch, after a selection process that in-
volves avoidance of mixes detected as corrupt - and of links
between two mixes, where one or both of the mixes reported
a problem.
The process of selecting the set of cascades for each
epoch, is called the inter-epoch process, and is performed
by a set of d servers refered to as directory authorities, fol-
lowing [14], which maintain a list of available mixes and
links between them. We assume that a number dm of au-
thorities can be malicious and collude with the adversary or
deviate from the protocol, in order to break the security prop-
erties. By dh we denote the number of honest authorities