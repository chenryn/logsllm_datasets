# No Right to Remain Silent: Isolating Malicious Mixes

## Authors
- Hemi Leibowitz, Bar-Ilan University, Israel
- Ania M. Piotrowska, University College London, UK
- George Danezis, University College London, UK
- Amir Herzberg, University of Connecticut, USA

## Publication Details
- **Title:** No Right to Remain Silent: Isolating Malicious Mixes
- **Conference:** 28th USENIX Security Symposium
- **Date:** August 14–16, 2019
- **Location:** Santa Clara, CA, USA
- **Proceedings ISBN:** 978-1-939133-06-9
- **Open Access Sponsored by:** USENIX
- **Link:** [Presentation](https://www.usenix.org/conference/usenixsecurity19/presentation/leibowitz)

## Abstract
Mix networks are a key technology for achieving network anonymity and private messaging, voting, and database lookups. However, simple mix network designs are vulnerable to malicious mixes, which may drop or delay packets to facilitate traffic analysis attacks. Mix networks with provable robustness address this drawback through complex and expensive proofs of correct shuffling but come at a great cost and often make limiting or unrealistic system assumptions.

We present Miranda, an efficient mix-net design that mitigates active attacks by malicious mixes. Miranda uses both the detection of corrupt mixes and the detection of faults related to pairs of mixes, without necessarily identifying the faulty one among the two. Each active attack, including dropping packets, leads to reduced connectivity for corrupt mixes, diminishing their ability to attack and eventually leading to their detection. Through experiments, we demonstrate the effectiveness of Miranda in detecting and neutralizing malicious mixes early.

## 1. Introduction
The increasing number of high-profile stories regarding mass electronic surveillance and the illicit harvesting of personal data has led to a surge in the use of anonymous and private communication tools. The growing awareness of the lack of privacy in daily online activities has persuaded many Internet users to adopt encryption and anonymity systems to protect the confidentiality and privacy of their communications. For example, services like WhatsApp and Signal, which offer end-to-end encryption, have gained popularity. However, such encryption only hides the content of messages, not the metadata, which can reveal who is communicating with whom, how often, and at what times.

In contrast, the Tor network, which uses onion routing, protects metadata. Tor is currently the most popular system offering anonymity, attracting nearly 2 million users daily. However, research has shown that Tor offers limited security guarantees against traffic analysis. This has renewed interest in onion mixnets, which provide strong protection against metadata leakage with low computational overhead. Early mixnets suffered from poor scalability, high latency, and low reliability, but recent advancements have improved their performance and scalability.

Onion mixnets offer strong anonymity against passive adversaries, as a single honest mix in a cascade is enough to ensure anonymity. However, known mixnet designs are not robust against active long-term traffic analysis attacks, such as packet dropping or delaying by malicious mixes. Such attacks can severely impact the privacy and efficiency of mix networks. For example, a disclosure attack where a rogue mix strategically drops packets from a specific sender can allow the attacker to infer the recipient by observing which recipient received fewer packets than expected. Similarly, Denial-of-Service (DoS) attacks can enhance de-anonymization, and (n-1) attacks can track packets over honest mixes.

Identifying and penalizing malicious mixes while maintaining strong anonymity and high efficiency is challenging. Trivial strategies for detecting malicious mixes are fragile and can become vectors for attacks. Rogue mixes can either hide their involvement or worse, make it seem like honest mixes are unreliable, leading to their exclusion from the network. Several approaches to the problem of active attacks and reliability have been studied, but they have significant shortcomings, which we discuss in Section 8.

In this work, we revisit the problem of making decryption mix networks robust to malicious mixes performing active attacks. We propose Miranda, an efficient reputation-based design that detects and isolates active malicious mixes. We present security arguments that demonstrate the effectiveness of Miranda against active attacks. The architectural building blocks behind Miranda have been studied by previous research, but we combine them with a novel approach that leverages the detection of inter-mix link failures to isolate and disconnect corrupt mixes, in addition to direct detection of corrupt mixes. This allows Miranda to mitigate corrupt mixes without requiring expensive computations.

Miranda disconnects corrupt mixes by carefully gathering evidence of their misbehavior, resulting in the removal of links misused by the adversary. The design includes a set of secure and decentralized mix directory authorities that select and distribute mix cascades once every epoch, based on the gathered evidence of faulty links between mixes. Repeated misbehaviors result in the complete exclusion of the misbehaving mixes from the system (see Figure 1).

We believe that Miranda is an important step toward a deployable, practical strong-anonymity system. However, the Miranda design makes several simplifying assumptions, including a fixed set of mixes, a majority of benign mixes, reliable communication and efficient processing, and synchronized clocks. Future work should investigate and overcome these challenges; see Section 9.

### Contributions
- **Miranda Design:** We present Miranda, an efficient, low-cost, and scalable design that detects and mitigates active attacks by leveraging reputation and local reports of faults.
- **Secure Loop Messages:** We propose an encoding for secure loop messages that can be used to securely test the network for dropping attacks, extending traditional mix packet formats for verifiability.
- **Community Detection:** We show how Miranda can take advantage of community detection techniques to further improve its effectiveness.
- **Security Analysis:** We analyze the security properties of Miranda against a wide range of attacks.

### Overview
- **Section 2:** Motivation, threat model, and security goals.
- **Section 3:** Key concepts of Miranda.
- **Sections 4 and 5:** Core protocols of Miranda for detecting and penalizing active attacks.
- **Section 6:** Improved, community-based detection of malicious mixes.
- **Section 7:** Evaluation of Miranda's security properties against active attacks.
- **Section 8:** Comparison with related work.
- **Section 9:** Discussion of future work.
- **Section 10:** Conclusion.

## 2. The Big Picture
### 2.1 General System Model
We consider an anonymous communication system consisting of a set of users communicating over a decryption mix network operating in synchronous batches, denoted as rounds. Depending on path constraints, the topology may be arranged in separate cascades or a stratified network. We denote by \( M \) the set of all mixes building the anonymous network. For simplicity, we assume that the set of mixes \( M \) is fixed (no churn). See discussion in Section 9 for practical challenges.

Messages are end-to-end layer encrypted into a cryptographic packet format by the sender, and the recipient performs the last stage of decryption. Mixes receive packets within a particular round, denoted by \( r \). Each mix decodes a successive layer of encoding and shuffles all packets randomly. At the end of the round, each mix forwards all packets to their next hops. Changing the binary pattern of packets by removing a single layer of encryption prevents bit-wise correlation between incoming and outgoing packets. Mixing also obfuscates the link between incoming and outgoing packets, protecting against external observers.

**Message Packet Format:** We use the Sphinx cryptographic packet format, but other formats can be used as long as they fulfill certain properties. The messages encoded should be of constant length and indistinguishable from each other at any stage in the network. The encryption should guarantee duplicate detection and eliminate tampered messages (tagging attacks). The packet format should also allow senders to encode arbitrary routing information for mixes or recipients. We denote the result of encoding a message as \( \text{Pack}(\text{path}, \text{routingInfo}, \text{rnd}, \text{recipient}, \text{message}) \), where \( \text{rnd} \) denotes a random string of bits used by the packet format.

### 2.2 Threat Model
We consider an adversary whose goal is to de-anonymize packets traveling through the mix network. The adversary acts as a global observer, eavesdropping on all traffic exchanged among the entities in the network and knowing the rate of messages that Alice sends/receives. All malicious entities in the system collude with the adversary, giving access to their internal states and keys. The adversary may control many participating entities, but we assume a majority of honest mixes and directory servers (used for management, see Section 3). We allow an arbitrary number of malicious clients but assume there are also many honest clients—enough to ensure that any first-mix in a cascade will receive a sufficient number of messages in most rounds.

Additionally, Miranda assumes reliable communication between any pair of honest participants and ignores the time required for computations, thus ignoring potential DoS attacks. We assume that the adversary cannot arbitrarily drop packets between honest parties nor delay them for longer than a maximal period. This restricted network adversary is weaker than the standard Dolev-Yao model and aligns with more contemporary works that assume honest nodes can eventually communicate synchronously.

We denote by \( n \) the total number of mixes in the network (\( |M| = n \)), \( n_m \) of which are malicious, and \( n_h \) are honest (\( n = n_m + n_h \)). We refer to cascades where all mixes are malicious as fully malicious, and those where all nodes are honest as fully honest. Cascades where some mixes are honest are referred to as semi-honest. A link between an honest mix and a malicious mix is referred to as a semi-honest link.

### 2.3 Impact of Active Attacks on Anonymity
Active attacks, such as dropping messages, can give the adversary a catastrophic advantage in linking the communicating parties. To quantify this advantage, we defined a security game, followed by a qualitative and composable measure of security against dropping attacks. Our results support the findings of previous works on statistical disclosure attacks and DoS-based attacks, arguing that the traffic analysis advantage gained from dropping messages is significant. For realistic volumes of traffic (10–100 messages per round), the information leakage is quite significant, allowing the adversary to improve de-anonymization by about 20%. For larger traffic rates (more than 1000 messages per round), the leakage drops, but expecting each client to receive over 1000 messages per round on average seems unrealistic unless large volumes of synthetic cover traffic are used. The lesson drawn from our analysis and previous studies is clear: it is crucial to design a mechanism to detect malicious nodes and remove them from the system after no more than a few active attacks. The Miranda design achieves this goal.

### 2.4 Security Goals of Miranda
The main goal of a mix network is to hide the correspondence between senders and recipients of messages in the network. More precisely, although the communication is over cascades that might contain malicious mixes, the Miranda design aims to provide protection indistinguishable from the protection provided by an 'ideal mix,' i.e., a single mix node known to be honest.

The key goals of Miranda relate to alleviating and discouraging active attacks on mix networks, as they significantly impact anonymity through traffic analysis. This is achieved through the detection and exclusion of misbehaving mixes. The Miranda design offers the following protections against active attacks:
- **Detection of Malicious Nodes:** Every active attack by a corrupt mix is detected with non-negligible probability by at least one entity.
- **Separation of Malicious Nodes:** Every active attack by a rogue mix results, with non-negligible probability, in the removal of at least one link connected to the rogue mix—or even the removal of the rogue mix itself.
- **Reducing Attacks Impact Over Multiple Epochs:** Repeated application of Miranda lowers the overall prevalence and impact of active attacks by corrupt mixes across epochs, limiting the ability of the adversary to drop or delay packets.

## 3. Rounds, Epochs, and Directories
In Miranda, as in other synchronous mixnet designs, time is broken into rounds, and in each round, a mix handles all messages received in the previous round. A more unique element of Miranda is that rounds are collected into epochs. Epochs are used to manage Miranda; the beginning of each epoch includes the announcement of the set of cascades to be used in this epoch, after a selection process that involves avoiding mixes detected as corrupt and links between two mixes where one or both reported a problem.

The process of selecting the set of cascades for each epoch, called the inter-epoch process, is performed by a set of \( d \) servers referred to as directory authorities, which maintain a list of available mixes and links between them. We assume that a number \( d_m \) of authorities can be malicious and collude with the adversary or deviate from the protocol to break the security properties. By \( d_h \), we denote the number of honest authorities.