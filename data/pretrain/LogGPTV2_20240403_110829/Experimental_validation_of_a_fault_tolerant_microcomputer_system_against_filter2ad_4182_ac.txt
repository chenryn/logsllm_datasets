time, while spare 
in buses. 
back-off 
for short  durations 
works better 
As expected, 
as observed 
multiple 
when injecting 
is recovered 
faults, 
more 
as seen in buses. Respect to 
have seen the same 
and recovery,  we 
than in the single 
errors are activated, 
detection 
tendencies 
4.3. Comparison 
faults 
fault injection case. 
and permanent 
to transient 
Finally, 
the effect of intermittent 
to the impact of transient 
faults has been 
and permanent 
Transient 
compared 
faults. 
(bit-flips) 
defined in the interval 
faults 
and buses (pulses 
have been injected 
with a duration 
in memory 
randomly 
[0.1 T, I.OT]). 
Fault models used 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
416 
DSN 2010: Gracia-Moran 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:48 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
in both places has been stuck-at 
for penn anent faults 
('0', 'I '), indetermination 
comparison, 
tA and tl varying 
Table 5 shows a sample of the results 
multiple 
we have selected 
unifonnly 
faults. 
and open line. For the 
intennittent 
faults 
with 
in the range [0.1 T, I.OT]. 
obtained 
for 
We have observed 
that when injecting 
faults in 
the trend: 
of detected  errors 
(Detect 
pennanent> intennittent 
buses, the percentages 
column) follows 
transient. 
detect. 
undetected 
fault types  (lower 
> 
to 
provoked by 
errors (ND _Fail column) is very low for all 
faults are the most difficult 
The percentage 
is the most effective 
than 2%). Parity 
of failures 
Transient 
EDM (D _PAR column). 
timer presents 
watchdog 
Only for transient 
some relevance 
faults, 
(23.66%). 
(Recov column) 
> intennittent 
errors 
transient 
the 
The percentage 
of recovered 
in buses affect 
and unrecovered 
» 
of failures 
by 
errors (NR_Fail 
follows the tendency: 
penn anent. The percentage 
detected 
very high for penn anent faults (97.76%). 
faults 
preventing 
provoke 
of failures 
(11 %). 
The most effective ERM is the spare, followed 
by the 
back-off. The highest activation 
observed 
provoked 
column) is 
Penn anent 
IS 
of back-off 
faults. 
system  recovery. 
and intennittent 
a non negligible 
for transient 
percentage 
the behavior 
of the spare CPU, 
Intennittent  faults 
Table 3. Impact of single intermittent 
faults injected 
in the buses (arithmetic 
series) 
t, 
Act  No Effect Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
94.90  51.74  47.63  0.63  83.41 16.59 63.72  26.33  84.38  2.43  13.19 
to.OIT,O.lT] 
l.OTI 93.60  53.31  45.94  0.75  81.63 18.37 59.30  31.16  80.00  3.53  16.47 
10.1T, 
I LOT, 10.0T] 93.60  50.64  48.40  0.96  81.90 18.10 56.29  33.33  60.39  2.35  37.25 
tA =  10.01T, 
O.ITI 
tA =  10.1T, 
LOT] 
t, 
Act  No Effect Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
93.70  37.46  59.55  2.99  83.15 16.85 59.50  29.93  80.72  4.82  14.46 
LOTI 94.30  37.75  60.02  2.23  82.86 17.14 59.36  30.04  55.36  7.14  37.50 
94.80  37.81  58.04  4.15  84.77 15.23 59.63  32.11  38.15  6.15  55.69 
10.OlT,0.lTl 
10.1T, 
lLOT,10.0T] 
t, 
Act  No Effect Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
93.70  23.27  72.36  4.38  82.15 17.85 62.83  27.73  16.43  7.04  76.53 
LOTI 94.30  23.44  71.69  4.88  81.21 18.79 64.64  28.25  15.10  9.84  75.06 
94.80  24.37  70.99  4.64  84.99 15.01 66.72  29.12  15.37  9.35  75.28 
lO.OIT,O.IT] 
10.1T, 
Il.OT,lO.OTI 
tA =  Il.OT, 
10.OTI 
Table 4. Impact of single intermittent 
faults injected 
in the buses (bubblesort) 
t, 
Act  No Effect  Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
95.30  37.57  61.70  0.73  78.57 21.43 75.68  23.30  57.53  2.02 40.45 
LOTI 95.30  39.56  59.50  0.94  76.72  23.28 71.78  26.98  55.28  1.72 43.00 
94.30  38.71  60.66  0.64  76.05 23.95 69.06  28.85  37.47  3.04 59.49 
10.01T,0.ITI 
10.1T, 
Il.OT,IO.OTI 
tA =  10.1T, 
l.OTI 
tA =  10.01 T, 0.1 TI 
t, 
Act  No Effect  Dctect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
94.60  18.92  79.39  1.69  83.22 16.78 75.63  23.70  55.46  1.58 42.96 
l.OTI 94.80  13.92  84.07  2.00  82.81 17.19 75.41  23.96  41.10  3.16 55.74 
94.40  13.77  84.64  1.59  81.73 18.27 73.84  25.03  23.39  2.37 74.24 
lO.OIT,O.IT] 
10.1T, 
Il.OT,IO.OTI 
t, 
Act  No Effect  Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
94.00  6.06 
l.OTI 93.80  5.22 
94.70  6.55 
93.72  0.21  84.45 15.55 76.73  22.36  11.54  1.48 86.98 
94.03  0.75  84.58 15.42 77.21  21.88  9.69  1.47 88.84 
93.03  0.42  83.54 16.46 75.60  23.38  6.16 
1.20 92.64 
10.01T,0.1T1 
10.1T, 
ILOT,IO.OTI 
tA =  lLOT, 10.OT] 
Table 5. Comparison 
of multiple 
transient, 
intermittent 
and permanent 
faults (bubblesort) 
Injection 
in Buses 
Act  No Effect Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
Transient 98,50  15,53  83,25  1,22  76,34 23,66 91,46  7,68 
23,73  4,00  72,27 
Intermittent 99,20  3,73  95,97  0,30  97,16  2,84  88,66  11,13  19,67  2,49  77,84 
Permancnt 99,80  1,40  98,20  0,40  95,71  4,29  2,14  97,76  0,00  0,00 100,00 
In·cction 
in Memory 
Act  No Effect Detect ND Fail D PAR  D WD  Recov NR Fail R BOFF  R CP  R SP 
Transient 4,20  2,38  95,24  2,38  100,00 0,00  15,00  85,00  50,00  0,00  50,00 
Intcrmittcnt 0,50  0,00  100,00  0,00  100,00 0,00  100,00  0,00 
60,00  0,00  40,00 
100,00 0,00  100,00 0,00  25,00  75,00  50,00  0,00  50,00 
Permancnt 4,00  0,00 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
417 
DSN 2010: Gracia-Moran 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:48 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
The results 
obtained 
from injecting 
in the memory 
In the near future, we intend to complete 
our 
of activated 
trend. Nevertheless, 
show a similar 
percentage 
to the small percentage 
affect the statistical 
for intermittent 
especially 
a very low 
errors 
due 
of memory usage. This can 
accuracy 
faults. 
have been obtained 
of some results, 
with some other works related 
research 
more complex and real systems with different 
to inject 
architectures, 
with different 
fault injection 
and mutants, 
and to inject faults in other targets 
different 
new intermittent 
techniques, 
fault models 
as saboteurs 
from buses and memory. 
to validate 
5. Conclusions 
and Future Work 
6. References 
In this work, we have presented 
a study of the 
of a FTS. 
of intermittent 
faults 
in the behavior 
by the increasing 
effects 
This study is motivated 
intermittent 
technologies. 
memory, as they have been proved to be susceptible 
intermittent 
faults. 
faults in deep submicrometric 
Faults have been injected 
in buses and 
to 
incidence 
of 
[1] C. Constantinescu, 
Technology on Dependability 
Procs. DSN 2002, pp. 205-209, USA, 2002. 
"Impact of Deep Submicron 
of VLSI Circuits", 
in 
[2] C. Constantinescu, 
Faults on 
Nanocomputing Devices", in Procs. WDSN-07, UK, 
2007, avail abe at http://www.laas.frIWDSN07. 
[3] E.A. Amerasekera and F.N. Najm, "Failure mechanisms 
"Impact of Intermittent 
in semiconductor 
devices", 
John Whiley & Sons, 1997. 
We have used VHDL-based 
its flexibility, 
controllability 
up the results: 
Fault Injection 
due to 
and 
as well as the high observability 
of all the modeled components. 
To sum 
•  We have verified a good performance 
of the 
Almost all 
implemented. 
mechanisms 
[4] P.J. Gil et aI., "Fault Representativeness", Deliverable 
ETIE2 of Dependability  Benchmarking 
Project, IST-
2000-25245,2002. 
[5] e. Hawkins et aI., "CMOS IC  nanometer 
technology 
failure mechanisms", 
605-611, USA 2003. 
in Procs. IEEE CICC 2003, pp. 
detection 
the activated 
errors 
Parity presents 
watchdog 
•  Recovery 
are detected 
or non effective. 
much better results 
than the 
[6] D.P. Siewiorek and R.  S. Schwarz: "Reliable 
computer 
systems: Design and evaluation", 
Digital Press, 1992. 
2nd Edition, Ed. 
of failures 
timer. 
mechanisms 
mechanisms. 
do not work as well as 
There are a non 
by 
Retry and 
detection 
negligible  percentage 
errors detected, 
but not recovered. 
spare are the most effective 
mechanisms. 
durations 
works better for longer durations 
multiple 
Retry works well with short 
of the burst activations, 
while spare 
and when 
are present. 
provoked 
faults 
recovery 
[7] D.K.Pradhan, 
techniques", 
Prentice Hall, 1992. 
"Fault-tolerant 
computing: theory and 
[8] J. Gracia et aI., "Analysis of the influence of 
intermittent 
pp. 80-85, Slovakia, 
2008. 
faults in a microcontroller", 
in DDECS'08, 
[9] D. Gil et aI., "Injecting 
Faults for the 
Validation of Commercial Microcon­
Intermittent 
[lO] e. Constantinescu, 
in HLDVT'08, pp.177-184, 
"Dependability 
USA, 2008. 
Benchmarking using 
Dependability 
trollers", 
Test Tools", in RAMS'05, pp. 567-571, 
Environmental 
2005. 
and short intermittent 
should be improved. 
are adding ECC to memory in 
of parity errors, 
•  Recovery mechanisms 
Some possibilities 
order to improve the recovery 
replacing 
reduce recovery 
coverage, 
CPU to mask transient 
faults 
reduce or even eliminate 
latency 
cold spare with hot spare so as to 
and to increase 
recovery 
and using TMR at intemallevel of the 
faults 
are the most difficult 
•  Respect to the comparison 
detection 
in buses. This last technique 
the recovery 
also would 
latency. 
with transient 
and 
permanent faults, 
mechanisms 
work 
well for permanent and intermittent 
faults. 
Transient 
would be advisable 
mechanisms 
parity in buses, watchdog 
buses, etc. Permanent faults, 
are the more difficult faults to recover. 
commented 
faults present 
also a notable impact on the recovery 
mechanisms. 
especially 
As 
to monitor 
in buses, 
intermittent 
to increase 
processor 
to detect. 
before, 
It 
detection 
in this case by means of exceptions, 
[11] J.e. Smolens et aI., "Detecting Emerging Wearout 
Faults", 3rd Workshop on Silicon Errors in Logic -
System Effects (SELSE3), 2007, avail abe at 
htt.p:llselse3.selse.orglPapers/1O 
Smolens P.pdf. 
[12] S. Borkar et aI., "Parameter Variations 
Circuits and Microarchitecture", 
342,2003. 
and Impact on 
in DAC'03, pp. 338-
[13] J.W. McPherson, "Reliability 
challenges 
beyond", in DAC'06, pp. 176-181, July 2006. 
[14] D. Gil et aI., "VHDL Simulation-Based 
Fault Injection 
in Benso & Prinetto eds., "Fault Injection 
Techniques" 
Techniques and Tools for Embedded Systems 
Reliability  Evaluation", 
for 45nm and 
Kluwer Academic, 2003. 
into VHDL Models: The 
Injection 
[15] E. Jenn et aI., "Fault 
MEFISTO Tool" in FTCS, pp. 66-75, 1994. 
[16] D. Gil et aI., "Fault 
rimental Validation 
System" in 
EDCC'03, pp. 191-208, 1999. 
Injection 
of a Fault Tolerant Microcomputer 
into VHDL Models: Expe­
[17] J.R. Armstrong, "Chip-Level 
Modelling with VHDL", 
Prentice Hall, 1989. 
978-1-4244-7501-8/10/$26.00 
©l010 IEEE 
418 
DSN 2010: Gracia-Moran 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:59:48 UTC from IEEE Xplore.  Restrictions apply.