# 命令执行底层原理探究-PHP（二）
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
针对不同平台/语言下的命令执行是不相同的，存在很大的差异性。因此，这里对不同平台/语言下的命令执行函数进行深入的探究分析。
文章开头会对不同平台(Linux、Windows)下：终端的指令执行、语言(PHP、Java、Python)的命令执行进行介绍分析。后面，主要以PHP语言为对象，针对不同平台，对命令执行函数进行底层深入分析，这个过程包括：环境准备、PHP内核源码的编译、运行、调试、审计等，其它语言分析原理思路类似。
该系列分析文章主要分为四部分，如下：
  * 第一部分：命令执行底层原理探究-PHP (一)
针对不同平台(Linux、Windows)下：终端的指令执行、语言(PHP、Java、Python)的命令执行进行介绍分析。
  * 第二部分：命令执行底层原理探究-PHP (二)
主要以PHP语言为对象，针对不同平台，进行环境准备、PHP内核源码的编译、运行、调试等。
  * 第三部分：命令执行底层原理探究-PHP (三)
针对Windows平台下，PHP命令执行函数的底层原理分析。
  * 第四部分：命令执行底层原理探究-PHP (四)
针对Linux平台下，PHP命令执行函数的底层原理分析。
本文 **《 命令执行底层原理探究-PHP (二) 》**
主要讲述的是第二部分：以PHP语言为对象，针对不同平台，进行环境准备、PHP内核源码的编译、运行、调试等。
## PHP for Windows
针对Windows平台下：环境准备、PHP内核源码的编译、运行、调试等。
###  环境准备
环境部署情况：
  * Windows (Win10 Pro)
  * Visual Studio (Visual Studio Professional 2019)
  * Visual Studio Code (VSCode-win32-x64-1.51.1)
  * PHP Source Code (PHP 7.2.9)
  * PHP Windows SDK (php-sdk-binary-tools-php-sdk-2.2.0)
  * Source Insight (Source Insight 4.0)
[php官方wiki](https://wiki.php.net/internals/windows/stepbystepbuild_sdk_2)对不同php版本编译的需求如下：
  * Visual C++ 14.0 (Visual Studio 2015) for **PHP 7.0** or **PHP 7.1**.
  * Visual C++ 15.0 (Visual Studio 2017) for **PHP 7.2** , **PHP 7.3** or **PHP 7.4**.
  * Visual C++ 16.0 (Visual Studio 2019) for **master**.
虽然官方wiki指出不同VS编译不同PHP版本，但是这里使用VS2019去编译`PHP 7.2.9`是没有问题的（兼容性）。
####  Visual Studio
> Visual Studio 面向任何开发者的同类最佳工具，功能完备的 IDE，可用于编码、调试、测试和部署到任何平台。
`Visual Studio` 官网：介绍、下载
    # 下载官网最新版 VS2019
    https://visualstudio.microsoft.com/zh-hans/
`Visual Studio` 历史版本下载（这里无论是下载的社区版或企业版等，下载器都是一样的，在社区版下载器里面也可选择安装专业版、企业版）
    https://visualstudio.microsoft.com/zh-hans/vs/older-downloads/
    or
    https://my.visualstudio.com/Downloads?q=Visual%20Studio
这里下载`Visual Studio Professional 2019`主要的作用为：提供开发环境，编译PHP内核。
`Visual Studio Professional 2019` 安装情况：仅安装在 Visual Studio 中进行开发所需的工具和组件捆绑包。
####  Visual Studio Code
`Visual Studio Code` 常用于不同语言的项目开发、源代码编辑调试等工作。
  * 官网：介绍、下载
    https://code.visualstudio.com/
  * 添加相应扩展：c/c++扩展、代码辅助运行扩展
    C/C++
    Code Runner
####  PHP Source Code
  * PHP官方各个版本源代码下载
    https://www.php.net/releases/
    or
    https://github.com/php/php-src/releases
这里下载的版本为：`PHP 7.2.9`
####  PHP Windows SDK
> PHP SDK is a tool kit for Windows PHP builds.
`PHP SDK` 依赖关系
    The PHP SDK 2.2+ is compatible with PHP 7.2 and above.
    The PHP SDK 2.1 is required to build PHP 7.1 or 7.0.
新版SDK下载地址：构建PHP7
    https://github.com/Microsoft/php-sdk-binary-tools
旧版SDK下载地址：构建PHP5
    https://windows.php.net/downloads/php-sdk/
    or
    https://github.com/Microsoft/php-sdk-binary-tools/tree/legacy
这里下载的PHP-SDK版本为`2.2.0`，下载解压并添加相应环境变量
    xxx\php-sdk-binary-tools-php-sdk-2.2.0\bin
    xxx\php-sdk-binary-tools-php-sdk-2.2.0\msys2\usr\bin
####  Source Insight
> Source Insight是一个强大的面向项目的程序开发编辑器、代码浏览器和分析器，在您工作和规划时帮助您理解代码。
  * 官网：介绍、下载
    https://www.sourceinsight.com/
《PHP 7底层设计与源码实现》书中有写到
> 在研究PHP7源码之前，我们首先要掌握学习源码的方法论。首先是阅读工具，本章会介绍Windows下的Source
> lnsight、Mac下的Understand以及Linux下的Vim+Ctags，方便读者根据自己的操作系统选择不同的阅读工具。
>
> Windows环境下有一款功能强大的IDE:Source Insight，内置了C++代码分析功能;同时还能自动维护项目内的符号数据库，使用非常方便。
有关`Source Insight`详细参考：[【工利其器】必会工具之（一）Source
Insight篇](https://www.cnblogs.com/andy-songwei/p/9965714.html)
PS：这里`Source Insight`给我的使用感觉就一个字： **强** ！！！
###  源码结构
下面先简单介绍一下PHP源码的目录结构。
  * 根目录: /这个目录包含的东西比较多，主要包含一些说明文件以及设计方案。 其实项目中的这些README文件是非常值得阅读的例如： 
    * `/README.PHP4-TO-PHP5-THIN-CHANGES` 这个文件就详细列举了PHP4和PHP5的一些差异。
    * 还有有一个比较重要的文件`/CODING_STANDARDS`，如果要想写PHP扩展的话，这个文件一定要阅读一下，不管你个人的代码风格是什么样，怎么样使用缩进和花括号，既然来到了这样一个团体里就应该去适应这样的规范，这样在阅读代码或者别人阅读你的代码是都会更轻松。
  * **build** 顾名思义，这里主要放置一些和源码编译相关的一些文件，比如开始构建之前的buildconf脚本等文件，还有一些检查环境的脚本等。
  * **ext** 官方扩展目录，包括了绝大多数PHP的函数的定义和实现，如array系列，pdo系列，spl系列等函数的实现，都在这个目录中。个人写的扩展在测试时也可以放到这个目录，方便测试和调试。
  * **main** 这里存放的就是PHP最为核心的文件了，主要实现PHP的基本设施，这里和Zend引擎不一样，Zend引擎主要实现语言最核心的语言运行环境。
  * **Zend** Zend引擎的实现目录，比如脚本的词法语法解析，opcode的执行以及扩展机制的实现等等。
  * **pear** “PHP 扩展与应用仓库”，包含PEAR的核心文件。
  * **sapi** 包含了各种服务器抽象层的代码，例如apache的mod_php，cgi，fastcgi以及fpm等等接口。
  * **TSRM** PHP的线程安全是构建在TSRM库之上的，PHP实现中常见的`*G`宏通常是对TSRM的封装，TSRM(Thread Safe Resource Manager)线程安全资源管理器。
  * **tests** PHP的测试脚本集合，包含PHP各项功能的测试文件
  * **win32** 这个目录主要包括Windows平台相关的一些实现，比如socket的实现在Windows下和`*Nix`平台就不太一样，同时也包括了Windows下编译PHP相关的脚本。
###  源码编译
环境准备部分，安装`Visual Studio 2019`后，运行在开始菜单里的`Visual Studio 2019`文件夹下的`x86 Native
Tools Command Prompt for VS 2019`终端。
终端运行后，进入到`PHP 7.2.9`源代码目录中进行编译配置工作：
  * 生成configure配置文件
执行源代码下`buildconf.bat`生成windows下的configure文件(configure.js)
    xxx\php-7.2.9-windows-debug>buildconf.bat
    Rebuilding configure.js
    Now run 'configure --help'
    xxx\php-7.2.9-windows-debug>
  * 查看configure支持的编译参数
    xxx\php-7.2.9-windows-debug>configure.bat --help
    PHP Version: 7.2.9
    Options that enable extensions and SAPI will accept 'yes' or 'no' as a
    parameter. They also accept 'shared' as a synonym for 'yes' and request a
    shared build of that module. Not all modules can be built as shared modules;
    configure will display [shared] after the module name if can be built that
    way.
      --enable-snapshot-build           Build a snapshot; turns on everything it
                                        can and ignores build errors
      --with-toolset                    Toolset to use for the compilation, give:
                                        vs, clang, icc. The only recommended and
                                        supported toolset for production use is
                                        Visual Studio. Use others at your own
                                        risk.
      --with-cygwin                     Path to cygwin utilities on your system
      --enable-object-out-dir           Alternate location for binary objects
                                        during build
      --enable-debug                    Compile with debugging symbols
      --enable-debug-pack               Release binaries with external debug
                                        symbols (--enable-debug must not be
                                        specified)
      --enable-pgi                      Generate PGO instrumented binaries
      --with-pgo                        Compile optimized binaries using training
                                        data from folder
      --disable-zts                     Thread safety
      --with-prefix                     where PHP will be installed
      --with-mp                         Tell Visual Studio use up to
                                        [n,auto,disable] processes for compilation
      --with-php-build                  Path to where you extracted the
                                        development libraries
                                        (http://wiki.php.net/internals/windows/libs).
                                        Assumes that it is a sibling of this
                                        source dir (..\deps) if not specified
      --with-extra-includes             Extra include path to use when building
                                        everything
      --with-extra-libs                 Extra library path to use when linking
                                        everything
      --with-analyzer                   Enable static analyzer. Pass vs for Visual
                                        Studio, clang for clang, cppcheck for
                                        Cppcheck, pvs for PVS-Studio
      --disable-ipv6                    Disable IPv6 support (default is turn it
                                        on if available)
      --enable-fd-setsize               Set maximum number of sockets for
                                        select(2)
      --with-snapshot-template          Path to snapshot builder template dir
      --disable-security-flags          Disable the compiler security flags
      --without-uncritical-warn-choke   Disable some uncritical warnings
      --enable-sanitizer                Enable address sanitizer extension
      --with-codegen-arch               Architecture for code generation: ia32,
                                        sse, sse2, avx, avx2
      --with-all-shared                 Force all the non obligatory extensions to
                                        be shared
      --with-config-profile             Name of the configuration profile to save
                                        this to in php-src/config.name.bat
      --disable-test-ini                Enable automatic php.ini generation. The
                                        test.ini will be put into the build dir
                                        and used to automatically load the shared
                                        extensions.
      --with-test-ini-ext-exclude       Comma separated list of shared extensions
                                        to be excluded from the test.ini
      --enable-apache2handler           Build Apache 2.x handler
      --enable-apache2-2handler         Build Apache 2.2.x handler
      --enable-apache2-4handler         Build Apache 2.4.x handler
      --disable-cgi                     Build CGI version of PHP
      --disable-cli                     Build CLI version of PHP
      --enable-crt-debug                Enable CRT memory dumps for debugging sent
                                        to STDERR
      --enable-cli-win32                Build console-less CLI version of PHP
      --enable-embed                    Embedded SAPI library
      --enable-phpdbg                   Build phpdbg
      --enable-phpdbgs                  Build phpdbg shared
      --disable-phpdbg-webhelper        Build phpdbg webhelper
      --disable-bcmath                  bc style precision math functions
      --with-bz2                        BZip2
      --disable-calendar                calendar conversion support
      --disable-com-dotnet              COM and .Net support
      --disable-ctype                   ctype
      --with-curl                       cURL support
      --with-dba                        DBA support
      --with-qdbm                       DBA: QDBM support
      --with-db                         DBA: Berkeley DB support
      --with-lmdb                       DBA: Lightning memory-mapped database
                                        support
      --with-enchant                    Enchant Support
      --enable-fileinfo                 fileinfo support
      --disable-filter                  Filter Support
      --enable-ftp                      ftp support
      --without-gd                      Bundled GD support
      --without-libwebp                 webp support
      --with-gettext                    gettext support
      --with-gmp                        Include GNU MP support.
      --disable-hash                    enable hash support