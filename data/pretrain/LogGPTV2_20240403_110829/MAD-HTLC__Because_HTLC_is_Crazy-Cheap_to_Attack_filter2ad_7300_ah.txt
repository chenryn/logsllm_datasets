in the ﬁrst T − 1 rounds.
, txdep+col
B can publish txdep
and txcol
throughout the game.
b
If he publishes txdep
or txdep+col
in any round then none of his
transactions are included (Lemma 4) and he gets no reward.
However, if he only publishes txcol
then by Lemma 2 he
b
receives vcol − f col
Not publishing txcol
at all results with the minimal utility
b
of 0, and an earlier publication still leads miners to include
b and txdep
both txcol
(cf. 6), obtaining the same utility as of the
prescribed behavior.
b > 0 tokens.
a
a
b
b
b
b
b
APPENDIX B
MAD-HTLC BITCOIN AND ETHEREUM IMPLEMENTATIONS
Fig. 3 shows the Bitcoin Script implementation of MH-Dep,
MH-Col and HTLC. It also presents the required input data
for each redeem path.
Script
is stack-based, and to evaluate input data and a
contract the latter is concatenated to the former, and then
executed: constants are pushed into the stack, instructions
operate on the stack. For a successful evaluation the stack must
hold exactly one element with value 1 after all operations are
executed.
a) MH-Dep: The script expects either two or three data
elements. It hashes the ﬁrst two and checks if they match diga
and digb.
If the ﬁrst matches diga but the second does not match digb
(dep-A), then the script veriﬁes the existence of a third data
element, and that it is a signature created with A’s secret key.
If the ﬁrst does not match diga but the second matches digb
(dep-B), then the script veriﬁes the existence of a third data
element, and that it is a signature created with B’s secret key.
It also veriﬁes the timeout has elapsed.
If both the ﬁrst and the second data elements match diga
and digb (dep-M), respectively, then the script expects no third
data element and evaluates successfully.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:06 UTC from IEEE Xplore.  Restrictions apply. 
1246
MH-Dep
OP_HASH160
diga
OP_EQUAL
OP_SWAP
OP_HASH160
digb
OP_EQUAL
OP_IF
OP_IF
OP_ENDIF
OP_ELSE
OP_VERIFY
pka
OP_CHECKSIG
OP_ENDIF
Redeem path
1
2
3
OP_1
OP_ELSE
T
OP_CHECKSEQUENCEVERIFY
OP_DROP
pkb
OP_CHECKSIG
MH-Col
HTLC
T
OP_CHECKSEQUENCEVERIFY
OP_DROP
OP_HASH160
diga
OP_EQUAL
OP_IF
OP_HASH160
digb
OP_EQUAL
OP_ELSE
pkb
OP_CHECKSIG
OP_ENDIF
OP_HASH160
diga
OP_EQUAL
OP_IF
pka
OP_ELSE
T
OP_CHECKSEQUENCEVERIFY
OP_DROP
pkb
OP_ENDIF
OP_CHECKSIG
Input data
siga OP_0 prea
sigb preb OP_0
preb prea
Redeem path
1
2
Input data
sigb OP_0
preb prea
Redeem path
1
2
Input data
siga prea
sigb OP_0
Figure 3: MH-Dep, MH-Col and HTLC Bitcoin Script implementations.
Table VI: Bitcoin main-net experiment transaction IDs.
Table VII: Ethereum main-net experiment transaction IDs.
Description
Initiate MH-Dep
MH-Dep path 1
MH-Dep path 2
MH-Dep path 3
Initiate MH-Col
MH-Col path 1
MH-Col path 2
Transaction ID
d032175260145055860296cbca8f7462
4f30334ddf948d5da12f0c7414d80cc0
33c957bb2f75e797d240a38504ce49a3
aeaaceb72f8577096b4f2ff23f5b3a1e
cd090c90afaacc0e2648834fe96f6177
ec2f967b7e50245537afdaf0d5a80263
505c7f1f3862b7f5c6b78f72cce5e37a
655b946fbdc7d03526055f7ea206781a
ea830dba56000b3486cf1c5122fedcf8
8169ab596536fd406b4f989e7761c1b4
4c06ebff8de6bb56242c75849767a633
9e40a0442f815a2487fd9d6237c51b9f
68270b94ca80281e31e193dac6779d3a
22d2799fe2afff8cef66c0ec6b420c88
b) MH-Col: The script expects exactly two data ele-
ments. It begins by verifying timeout has elapsed, and then
hashes the ﬁrst element and checks if it matches diga.
If not (col-B), the script then veriﬁes the second data is
a signature created with B’s secret key. Otherwise (col-M),
the script hashes the second data element and veriﬁes it
matches digb.
We bring the Ethereum Solidity implementation of MAD-
HTLC and HTLC in the extended report [95].
APPENDIX C
MAD-HTLC BITCOIN AND ETHEREUM DEPLOYMENT
Tables VI and VII show the transaction IDs in our Bitcoin
and Ethereum deployments (§VI-A), respectively. Their details
can be viewed with online block explorers.
APPENDIX D
HTLC BRIBE ATTACK ANALYSIS PROOF
We recall Lemma 9 and prove it.
Lemma (9). For any k ∈ [1, T − 1], the unique subgame
perfect equilibrium is that every miner includes an unrelated
transaction in ΓH (k, red), and miner i’s utility when doing so
is ui
(cid:0)¯σ, ΓH (k, red)(cid:1) = λi
(cid:0)(T − k) f + f h
(cid:1).
b
Description
Initiation
dep-A
dep-B
dep-M (ours)
dep-M (other)
Transaction ID
f10be5e53b9ad8a6f10d7e9b9bfbd63a
b8737c50274885182a67e7adc3fa59c2
36e349b4fdc5385ef57a88d077837223
b3a26b0e6afc75f90bbaf2860d9295fd
84aa626d659b63e0554f8de1a3d6e204
41d8d778b7e1e79d0a36ded325afedb4
ebdb267e8b612d59910bc2348a95eec8
388e62dbd6d64458c982f0cdacea67d9
74e87bba99ccd7a0bd794b793f108674
5b462390df01594ce057a430c122635a
Proof. Note that in ΓH (k, red) there are two actions available,
either include an unrelated transaction and receive f reward,
or include txh
a reward.
Consider any miner i. Denote by λk
a and receive f h
u − λi.
u the accumulated block-
creation rates of miners, excluding miner i, that choose to
include an unrelated transaction in ΓH (k, red). Therefore, the
accumulated probabilities of miners that choose to include txh
a,
excluding miner i, is 1 − λk
If miner i chooses to include an unrelated transaction
then either of the following occurs. First, with probability λi
miner i gets to create a block, includes an unrelated trans-
action and receives a reward of f. The subsequent subgame
is ΓH (k + 1, red). Alternatively, with probability λk
u another
miner that includes an unrelated transaction gets to create a
block, miner i gets no reward and the subsequent subgame
is ΓH (k + 1, red). Finally, with probability 1−λk
u−λi another
miner that includes txh
a gets to create a block, miner i gets no
reward and the subsequent subgame is ΓH (k + 1, irred).
Therefore, miner i’s utility when including an unrelated
transaction in these subgames is
(cid:0)¯σ, ΓH (k, red)(cid:1) =
(cid:0)¯σ, ΓH (k + 1, red)(cid:1)(cid:1) +
(cid:0)f + ui
(cid:0)¯σ, ΓH (k + 1, red)(cid:1) +
(cid:1)
(cid:0)1 − λi − λk
(cid:0)¯σ, ΓH (k + 1, irred)(cid:1) .
ui
λi ·
λk
u · ui
· ui
u
Similarly, if miner i chooses to include txh
a than either of the
(2)
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:06 UTC from IEEE Xplore.  Restrictions apply. 
1247
following occurs. First, with probability λi miner i gets to
create a block, includes txh
a and receives a reward of txh
a.
The subsequent subgame is ΓH (k + 1, irred). Alternatively,
with probability λk
u another miner that includes an unrelated
transaction gets to create a block, miner i gets no reward
and the subsequent subgame is ΓH (k + 1, red). Finally, with
probability 1 − λk
a gets
to create a block, miner i gets no reward and the subsequent
subgame is ΓH (k + 1, irred).
u − λi another miner that includes txh
Therefore, miner i’s utility when including txh
subgames is
ui
λi ·
λk
u · ui
(cid:0)¯σ, ΓH (k, red)(cid:1) =
(cid:0)f h
(cid:0)¯σ, ΓH (k + 1, red)(cid:1) +
(cid:0)1 − λi − λk
(cid:0)¯σ, ΓH (k + 1, irred)(cid:1)(cid:1) +
(cid:1)
(cid:0)¯σ, ΓH (k + 1, irred)(cid:1) .
a + ui
· ui
u
To prove the lemma we need to show that for any k ∈
the utility from including an unrelated transac-
a (Eq. 3). This reduces
[1, T − 1]
tion (Eq. 2) exceeds that of including txh
to showing that
(cid:0)¯σ, ΓH (k + 1, red)(cid:1) >
(cid:0)¯σ, ΓH (k + 1, irred)(cid:1) ,
f + ui
f h
a + ui
a in these
(3)
(4)
which we do inductively.
a) Base: First, consider k = T − 1. Using Lemma 8 and
b >
Lemma 7 we get the condition presented in Eq. 4 is f +λif h
f h
a + λif, or alternatively,
b
+ f,
a−f
λi
b > f h
+ f .
a−f
λmin
b > f h
f h
(5)
Since λmin ≤ λi and f h
the condition
(Eq. 5) holds, meaning that in any subgame perfect equilibrium
miner i is strictly better by including an unrelated transaction
in subgame ΓH (T − 1, red).
Therefore, all miners choose to include unrelated transac-
(cid:0)f + f h
tions in such subgames, meaning λj
u =
0. Therefore, miner i’s utility (Eq. 2) is ui
λi
(cid:0)¯σ, ΓH (k, red)(cid:1) =
u = 1−λi and 1−λi−λj
(cid:1).
(cid:1).
c) Step: Using the inductive assumption and Lemma 7
(cid:0)(T − k) + f h
b) Assumption: Consider any k ∈ [1, T − 2] and assume
that the claim holds for k + 1. That is, the unique subgame
perfect equilibrium in subsequent games ΓH (k + 1, red) is
for all miners to include an unrelated transaction, and the
utility of miner i when doing so is ui
λi
(cid:0)¯σ, ΓH (k + 1, red)(cid:1) =
(cid:0)(k + 1) f + f h
(cid:1) >
the condition of Eq. 4 translates to f + λi
f h
a + λi (k + 1) f, or alternatively,
a−f
(6)
λi
Again, since λmin ≤ λi and f h
+ f, the condition
(Eq. 6) holds, meaning that in the subgame perfect equilibrium
miner i’s strict best response is to include an unrelated
transaction in subgame ΓH (k, red).
+ f .
b > f h
b > f h
f h
a−f
λmin
Since all miners include unrelated transactions, we get λj
u =
u = 0. Therefore, miner i’s utility (Eq. 2)
(cid:0)¯σ, ΓH (k, red)(cid:1) = λi
1− λi and 1− λi− λj
is ui
(cid:0)(T − k) f + f h
b
(cid:1).
b
b
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:06 UTC from IEEE Xplore.  Restrictions apply. 
1248