ing both UPDATE messages originating locally and
those to be forwarded. Each message is associated
with a set of neighboring ASes to which that mes-
sage is to be sent.
To access BGP UPDATE messages received from
neighboring BGP speakers, an IRV server can simply es-
tablish I-BGP sessions with all the border routers of the
AS; this way, all BGP messages received from peer ASes
are also given to the IRV. Figure 3 illustrates this; dark
lines are I-BGP sessions propagating routing information
received from routers D, E, F, and G. The IRV is now able
to determine, from the identity of its I-BGP peer, the cor-
responding AS and foreign BGP speaker that propagated
the message to the local AS. In the event that a router (in
this case, A) has BGP sessions with more than one other
router (in this case, D and E), it may be necessary to con-
ﬁgure the E-BGP listener locally to use private community
ﬁelds or other path attributes to signal to the IRV the iden-
tity of the foreign speaker.
Clearly, malicious/compromised routers can manipulate
AS-local IRV services by arbitrarily omitting, delaying,
or modifying I-BGP messages. However, protection of an
AS from its own routers is explicitly outside the domain
of IRV. We assume that ASes will employ additional in-
frastructure to detect and disable faulty or compromised
routers. Note that any AS-centric (rather than router cen-
tric) solution must contend with these same issues.
G(cid:13)
R(cid:13)
R(cid:13)
C(cid:13)
AS1(cid:13)
BGP(cid:13)
Routers(cid:13)
R(cid:13)
F(cid:13)
R(cid:13)
B(cid:13)
IRV(cid:13)
R(cid:13)
A(cid:13)
D(cid:13)
R(cid:13)
E(cid:13)
R(cid:13)
Figure 3. Dynamic Data acquisition by the IRV.
Maintaining current information regarding BGP UP-
DATE messages sent to foreign ASes is more challenging.
In particular, there is no convenient way to intercept out-
bound E-BGP sessions, since they traverse a direct phys-
ical link between the E-BGP speaker and listener. For
each outbound E-BGP session, we recommend conﬁgur-
ing the corresponding border router to establish a second
outbound E-BGP session with the IRV, conﬁgured to send
the same data as the corresponding session with the re-
mote AS. The gray lines in Figure 3 reﬂect this. As such,
border routers that serve as BGP speakers in multiple BGP
sessions establish multiple BGP sessions with the IRV.
The IRV, then, is an E-BGP listener, conﬁgured to treat
each E-BGP session to which it is privy to as authoritative
with respect to the original outbound E-BGP session that
it mirrors.
A related issue involves the question of who issues re-
quests on behalf of an AS. It is possible for operators to
query the IRV manually or via scheduled scripts that have
no access to current routing data. However, in order to
take full advantage of the system, an AS must be able to
systematically form queries in response to received UP-
DATE messages. For this purpose, we recommend estab-
lishing an IRV client system, called the Network Manage-
ment Element (NME) in Figure 1. The IRV client listens
to I-BGP messages from E-BGP listeners at the border of
the AS, and collects them for use in forming and sending
useful queries. Since the IRV server already listens to I-
BGP messages, it may make sense to collocate the IRV
client and server on the same physical machine. However,
this is not strictly necessary in order to achieve the desired
results.
6.2. System Limitations
The fundamental limitation of any supervisory system
is that it is only as good as the data in it. Since some of
the data in IRV are conﬁguration and policy data, which
are maintained by human operators, there is always the
chance that the data in the IRV are different from the con-
ﬁguration in the actual routers, even though the conﬁgu-
ration may be correct. Unfortunately, many operators still
conﬁgure routers by entering conﬁguration commands at
the console prompt; this is a source of many problems,
as shown in [13]. To address this problem, a front end
needs to be developed where new conﬁgurations are de-
veloped, then atomically transferred to both the IRV and
the affected routers. Such a front end would, of course, be
useful regardless of the adoption of IRV.
Part of the reason why operators enter conﬁgurations
directly on the routers is that it is easy to do so, and
the router conﬁgurations are ultimately the authoritative
source of policy. Much of the data in the RRs is outdated,
incomplete, or incorrect; operators derive no immediate
beneﬁt from updating the RRs, and thus fail to do so; it is
just extra work. It might be argued that the same would
hold true for IRV; why would an ISP go through the trou-
ble of maintaining two syntactically different copies of
its conﬁguration? Would not that lead to the same diver-
gence and uselessness of data as with the IRR? The an-
swer hinges upon the distributed nature of IRV; whereas
with RRs a central authority has to be updated, the infor-
mation in IRV is created and managed by the originator of
that information, namely, the network operator, and thus it
is easier (and hence more likely) to keep the information
correct.
Even with transactional semantics for the updating of
the routers and the IRV, there will always be a short inter-
val between the actual update and when the update prop-
agates to the entire Internet (subject to policy ﬁltering, of
course). It is thus conceivable that a query from a remote
AS could be initiated right after a change in the IRV was
committed, but before the change propagated over BGP;
the query concerns an older, and possibly just as valid,
routing state of the network. Absent a lot of operator ex-
perience, it is not clear what the proper solution to this
problem would be. The IRV could store some histori-
cal data — prior versions of its database — and be able
to furnish them on demand, but this adds complexity to
the protocol. On the positive side, the IRV itself could
keep track of how frequently it gets requests or reports
that point to inconsistencies, and deduce potential BGP
propagation problems.
Another consideration that may delay the initial deploy-
ment of IRV is the so-called “network effect”: the useful-
ness of a particular piece of technology being proportional
to the number of people actually using it. Arguably, an
operator deploying IRV in their own network does not ini-
tially gain much; a single IRV server running by itself is
not very useful. Still, it can be used by just the AS deploy-
ing it in the following fashion: the ISP sets up multihop
BGP sessions with routers of other ISPs, and uses the in-
formation thus gathered to perform sanity checks on itself.
Whether this has any advantages over alternate ways of
accomplishing the same goal is left for future work. Once
more than just one AS start deploying IRV and using it,
they can check each other’s conﬁgurations. Again, there
are a great many unknowns, such as deployment cost and
value of the beneﬁts to make a reasonable approximation
of where the break-even point is.
7. Conclusions
BGP is the dominant protocol for interdomain routing,
but current implementations of BGP provide little secu-
rity. Emerging standards attempt to address this limitation
by augmenting the existing protocol with security infras-
tructure. Such infrastructure frequently assumes universal
deployment (within a vast collection of heterogeneous and
often embedded software), requires signiﬁcant computa-
tional resources, or provides limited ability to communi-
cate policy. Exploitation of weaknesses within the present
interdomain routing infrastructure could result in signiﬁ-
cant costs, ﬁnancial or otherwise, to networks relying on
external connectivity.
We have introduced the Interdomain Routing Valida-
tion (IRV) system. Used in conjunction with BGP, IRV
provides interfaces through which BGP data can be vali-
dated and additional routing information can be acquired.
Participating ASes designate an IRV that processes re-
quests received from remote users. The requests consist of
queries used to implement features not currently present
in BGP. For example, an AS can validate an UPDATE
message by querying the originating AS. Network secu-
rity protocols are used to ensure the integrity, authenticity,
and timeliness of the queries and responses.
Ultimately, the value of IRV is determined by its effec-
tiveness in increasing an AS’s ability to correctly obtain
and manage interdomain routing information. Providing
a common interface is a key means by which we achieve
this goal. IRV is a receiver-driven architecture, providing
the users of routing announcements with a role in obtain-
ing the information they need to function correctly. The
ability of IRV speakers to tailor responses to the requester
affords greater control over how and to whom route in-
formation is shared. The ability for requesters to share
information about received announcements with origina-
tors of those announcements provides originators with a
degree of introspection by demonstrating how their an-
nouncements appear to the world.
The routing facilities supported by a AS are speciﬁc to
its administration. Hence, we view services such as IRV as
a necessary and natural progression of interdomain rout-
ing. Each AS should provide data and interfaces tailored
to its operational needs. Services such as IRV allow fu-
ture enhancements to be quickly implemented, tested, and
deployed within the interested communities.
The importance of incremental deployability to a sys-
tem providing BGP security cannot be understated. Any
new BGP feature is unlikely to receive quick or universal
deployment. Hence, any solution should be of demonstra-
ble value in the presence of partial adoption. This is true of
IRV: the security and accuracy of the interdomain routing
information is increased precisely within the community
in which it is deployed.
The number and frequency of clients requesting infor-
mation from the administrative server will be determined
by the extent to which IRV is adopted throughout the In-
ternet. In future work, we plan to systematically character-
ize and evaluate this cost. Such information will be used to
design highly-scalable server implementations. We have
yet to fully explore the potential uses of IRV. Other future
plans we have include the extension of IRV schemata to
other services, such as quality of service, load balancing,
and congestion control. Centrally, this work will seek to
use the IRV to communicate service-speciﬁc requirements
between ASes, and ultimately inﬂuence interdomain rout-
ing.
Acknowledgements
We wish to thank Steve Bellovin, Matt Blaze, Howard
Karloff, Fabian Monrose, and the staff at a230.com.
References
[1] American Registry of Internet Numbers.
http://www.arin.net/.
[2] Asia Paciﬁc Network Information Centre.
http://www.apnic.net/.
[3] Internet Routing Registry. http://www.irr.net/.
[4] R´eseaux IP Europ´eens. http://www.ripe.net/.
[5] C. Alaettinoglu, C. Villamizar, E. Gerich, D. Kessens,
D. Meyer, T. Bates, D. Karrenberg, and M. Terpstra. Rout-
ing Policy Speciﬁcation Language (RPSL). Internet Engi-
neering Task Force, June 1999. RFC 2622.
[6] S. Boag, D. Chamberlin, M. Fernandez, D. Florescu,
J. Robie, J. Sim´eon, and M. Stefanescu. XQuery 1.0: An
XML Query Language. W3C Working Draft, April 2002.
[7] T. Bray, J. Paoli, C. Sperberg-McQueen, and E. Maler. Ex-
tensible Markup Language (XML) 1.0, Second Edition.
W3C Working Draft, October 2000.
[8] A. Brown, M. Fuchs, J. Robie, and P. Wadler. XML
Schema: Formal Description. W3C Working Draft,
September 2001.
[9] G. Huston. Scaling interdomain routing. Internet Protocol
Journal, 4(4), Dec. 2001.
[10] S. Kent and R. Atkinson. Security architecture for the in-
ternet protocol. Request for Comments (Proposed Stan-
dard) 2401, Internet Engineering Task Force, November
1998.
[11] S. Kent, C. Lynn, J. Mikkelson, and K. Seo. Secure
Border Gateway Protocol (S-BGP) — Real World Perfor-
mance and Deployment Issues. In Proceedings of Network
and Distributed Systems Security 2000. Internet Society,
February 2000.
[12] S. Kent, C. Lynn, and K. Seo. Secure Border Gateway
Protocol (Secure-BGP). IEEE Journal on Selected Areas
in Communications, 18(4):582–592, April 2000.
[13] R. Mahajan, D. Wetherall, and T. Anderson. Understand-
ing BGP Misconﬁguration. In Proceedings of ACM SIG-
COMM ’02, pages 3–16. ACM, September 2002.
[14] D. Meyer, J. Schmitz, C. Orange, M. Prior, and C. Alaet-
Internet Engineering
tinoglu. Using RPSL in Practice.
Task Force, August 1999. RFC 2650.
[15] S. Murphy. BGP Security Protections (Draft).
Research Task Force, February 2002. (?????).
Internet
[16] S. Murphy. BGP Security Vulnerabilities Analysis (Draft).
Internet Research Task Force, February 2002. (draft-
murphy-bgp-vuln-00.txt).
[17] Y. Rekhter. Routing in a Multi-provider Internet. Internet
Engineering Task Force, April 1995. RFC 1787.
[18] Y. Rekhter and T. Li. A Border Gateway Protocol 4 (BGP
4). Internet Engineering Task Force, March 1995. RFC
1771.
[19] S. Staniford, V. Paxson, and N. Weaver. How to 0wn the
Internet in Your Spare Time. In Proceedings of the 11th
USENIX Security Symposium, August 2002.
[20] J. Stewart. BGP4: Interdomain Routing in the Internet.
Addison-Wesley, 1998.
[21] J. Stewart, T. Bates, R. Chandra, and E. Chen. Using a
Dedicated AS for Sites Homed to a Single Provider. Inter-
net Engineering Task Force, January 1998. RFC 2270.
[22] K. Varadhan, R. Govindan, and D. Estrin. Persistent Route
Oscillations in Inter-Domain Routing. Computer Net-
works, 32(1):1–16, 2000.
[23] C. Villamizar, C. Alaettinoglu, D. Meyer, and S. Mur-
phy. Routing Policy System Security. Internet Engineer-
ing Task Force, December 1999. RFC 2725.