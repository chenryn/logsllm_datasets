s_id
10
1
,round (avg(s_score) ,2) avg_score
from Score
12
group by s_1d)t
13
on s.s_id = t.s_id
14
order by 4 desc;
指的是第4个字段
http://liyangbit.com
46
---
## Page 47
Chapter1.超经典MySQL练习50题
Python数据之道
mysql>
select
>
5.s_id
>
,5.c_id
,s.s_score
>
,t.avg_score
>fromScore5
->join （select
s_id
中间表
,round(avg(s_score),2) avg_score
fron Score
group by s_id)t
>on s.s_id = t.s_id
->
order by 4 desc;
+
s_id |c_id |s_score 1 avg_score |
07
@2
89
1
91.50
07
103
94
1
91.50
80
81
@1
88.671
01
02
90
1
88.671
θ1
03
96
88.67
83
01
80
1
82.001
2
81
1
82.601
82.001
83
03
85
1
05
01
76
81.50|
θ5
02
87
1
81.501
02
@2
60
1
70.00
02
θ3
80
1
70.001
01
70
1
70.001
86
01
43
1
49.501
86
03
56
1
49.501
04
@1
501
40.001
θ2
401
40.001
84
103
301
40.601
.....-+
18 rows in set (0.0θ sec)
参考方法1
select
3
s.s_id
, (select s_score from Score where s_id=s.s_id and c_id=*o1')
5
as语文
6
,(select s_score from Score where s_id=s.s_id and c_id='02')
s数学
B
,(select s_score from Score where s_id=s.s_id and c_id='03')
9
as英语
http://liyangbit.com
47
---
## Page 48
Chapter1.超经典MySQL练习50题
Python数据之道
10
，round（avg(s_score),2)平均分
11
from Score s
12.
group by s.s_id
13
order by 5 desc;
nysql> select
.(select
 5_score froa 5core where s_1d=s,s_1d and c_id='81*)
as语文
(select s_score fron 5core where s_id=s.s_id asd c_1d=*02")
>
a5数学
. (select
core fron Score where
25英语
t s_id=s.s_id asd c_id=*63*)
vg（s_score）.2）平均分
->fron Score s
1sap s Ig Japuo select
$.5_1d
>
->
->
max(case s.c_id when‘θ3' then 5.s_score end) 英语
,round(avg(s.s_score),2) avg_score
-> fron Score s
-> join Student b
on s.s_id = b.s_fd
-> group by s.s_1d
-> order
by 5 desc:
...+...
-+
5_id1语文
1数学
1英语
1avg_score 1
e7
+
NULL
1
891
941
91.591
01
80 1
9g
1
88.671
861
81 1
851
82.001
05
76 1
871
NULL
81.501
θ2
761
691
891
78.081
90
43 1
NULL 1
561
49.581
Les
481
301
48.001
rows 1n set (θ.ee sec)
1.19题目18
1.19.1题目需求
查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格
率，中等率，优良率，优秀率；及格：>=60，中等为：70-80，优良为：80-90，优秀为：>=90
1.19.2 SQL实现
思路清晰：统计每个阶段的总人数，再除以总共的人数即可
将成绩表和课程表联合起来进行查询：
·case语句用于对每个分数贴标签
http://liyangbit.com
49
---
## Page 50
Chapter1.超经典MySQL练习50题
Python数据之道
·Sum语句对相应的语句中的1进行求和
select
s.c_id
3
,C.c_name
,max(s.s_score)
5
,min(s.s_score)
6
,round(avg(s.s_score), 2)
,round(1oo * (sum(case when s.s_score >= 60 then 1 else 0 end) / sum(case
when s.s_score then 1 else @ end))，2) as 及格 率
,round(1oo * (sum(case when s.s_score >= 70 and s.s_score = 80 and s.s_score = 90 then 1 else @ end) / sum(case
when s.s_score then 1 else @ end))， 2) as 优秀率
11
fron Score s
12.
Left join Course c
13
on s.c_id = c.c_id
14
group by s.c_id, c.c_name;
.E
s 1 +1s+ 6
hye 1 else 1 esf
hn 1 else 
1. 3) # 提界事
.01
优界事
1.19
1
1.20题目19
1.20.1题目需求
按照各科成绩进行排序，并且显示排名
1.20.2分析过程
题目的意思是：将每科的成绩单独进行排名，类似如下的效果：
课程名
分数
排名
英语
66
http://liyangbit.com
50
---
## Page 51
Chapter1.超经典MySQL练习50题
Python数据之道
课程名
分数
排名
英语
92
2
英语
89
3
数学
88
1
数学
85
2
1.20.3SQL实现
第一步：我们对Score表中的一门课程进行排名，比如01课程
select * from(
select
t1.c_id
课程号
,tl.s_score
分数
,(select count(distinct t2.s_score)
课程去重
from Score t2
where t2.s_score >= tl.s_score
SQL 实 现 排序
and t2.c_id = '01') rank
from Score t1
=通过相同的表实现白连接
where tl.c_id = '01'
77
order by tl.s_score desc
12.
)t1
上面是针对01课程，结果为：
http://liyangbit.com
51
---
## Page 52
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select * from(
select
>
t1.c_1d
+1s_score
课程号
(select count(distinct t2.s_score)
分数
课程去重
from Score t2
>
where t2.s_score>= tl.s_score
and t2.c_id ='01') rank
fromScoret1-通过相网的表实现自连接
where t1.c_id = *01'
order by t1.s_score desc
SQL实现排序
->)t1;
1xue I aoss 1 p
01
891
11
θ1
891
11
θ1
761
21
θ1
50
01
01
431
51
41
in set (0.9θ sec)
rows
第二步：我们将01、02、03课程全部连接起来，通过union实现
·表的自连接
·SQL实现排序
自己的方法
select * from(
select
5
t1.c_id
课程号
6
,tl.s_score
,(select count(distinct t2.s_score)
分数
课程去重
8
from Score t2
9
where t2.s_score
>= tl.s_score
SQL 实 现 排序
10
and t2.c_id = 'o1') rank
11
from Score t1
通过相同的表实现白连接
12
where tl.c_id = '01'
13
order by tl.s_score desc
14
)t1
15
16
union
17
select * from(
18
select
19
t1.c_id
课程号
20
,tl.s_score
,(select count(distinct t2.s_score)
分数
21
课程去重
22
from Score t2
23
where t2.s_score
>= t1.s_score
SQL 实现排序
http:/liyangbit.com
52
---
## Page 53
Chapter1.超经典MySQL练习50题
Python数据之道
24
and t2.c_id = '02') rank
25
from Score t1
-通过相网的表实现白连接
26
where t1.c_id = *02'
27
order by tl.s_score desc
28
)t2
2.9
30
unfon
31
select * from(
32
select
33
t1.c_id
课程号
34
,tl.s_score
分数
35
, (select count(dfstinct t2.s_score)
36
from Score t2
37
where t2.s_score >= tl.s_score
38
and t2.c_id = '03') rank
39
from Score t1
40
where t1.c_1d = *03'
41
order by tl.s_score desc
42.
)t3;
http://liyangbit.com
53
---
## Page 54
Chapter1.超经典MySQL练习50题
Python数据之道
id
S
score
rank
01
80
1
01
76
乙
1
01
70
3
01
50
4
01
43
5
02
90
1
02
89
2
02
87
3
02
81
4
02
60
5
1
02
40
6
03
96
1
03
94
2
1
03
85
3
03
80
4
1
03
56
5
03
30
6
参考代码
2
3
select * from (select
4
tl.c_id,
L
(select count(distinct t2.s_score)
tl.s_score,
6
I
from Score t2
where t2.s_score>=t1.s_score and t2.c_id='01*) rank
9
from Score t1 where tl.c_id='01*
10
order by tl.s_score desc) t1
11
http:/liyangbit.com
54
---
## Page 55
Chapter1.超经典MySQL练习50题
Python数据之道
12 unfon
13
select * from (select
14
t1.c_id
15
,tl.s_score
16
, (select count(distinct t2.s_score)
17
from Score t2
18
where t2.s_score>=tl.s_score and t2.c_id='o2') rank
19
from Score tl where tl.c_id=′021
20
order by tl.s_score desc) t2
21
22.
unfon
23
select * from (select
24
tl.s_score,
t1.c_id,
25
26
(select count(distinct t2.s_score) from Score t2 where t2.
s_score>=tl.s_score and t2.c_id='03') rank
27