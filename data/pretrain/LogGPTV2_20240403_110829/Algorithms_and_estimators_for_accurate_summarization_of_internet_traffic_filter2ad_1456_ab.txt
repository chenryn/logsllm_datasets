rank assignment and counting all packets that have rank value  p2 > ·· · > pr denoted by the vector p =
(p1, . . . , pr) of the current sampling rate and for each sampled
ﬂow, the counts i(f ) = (i1(f ), i2(f ), . . . , ir(f )) of the number
of packets recorded at each step. The adjusted weight assignment
to the count, where p(cid:2)
)/p(cid:2)
3We can avoid the repeated process by storing discretized rank
value for each ﬂow as proposed next for the step-counting algo-
rithms.
ASNF
for a ﬂow f is a function of p and i(f ). We use the notation
(i(f )) ≡ Ap1,p2,...,pr (i1(f ), i2(f ), . . . , ir(f ))
for the adjusted weight assigned by SNF, and similarly, ASSH
for the adjusted weight assigned by SSH.
p
(i(f ))
p
Adjusted weights are computed after the counting period is ter-
minated. After they are computed, the count vectors can be dis-
carded. Therefore, SNF and SSH produce a sketch of size k.
We will show the following:
THEOREM 5.1. The adjusted weight ASNF
p
(n) for SNF and
(n) for SSH can be computed using number of operations
ASSH
that is quadratic in the number of steps with a non-zero count.
p
We review some deﬁnitions and properties from [2] and derive
formulations that allow for efﬁcient computation of adjusted weights
for SSH and SNF sketches.
There is subtlety in the assignment of correct (unbiased) adjusted
weights for ANF and ASH. Since the sampling rate varies it is not
clear that we can “plug in” the effective (ﬁnal) sampling rate in
the adjusted weights expressions of the non-adaptive variant. The
argument for unbiasedness is based on the fact that the adjusted
weights of each ﬂow are unbiased on each part of some partition of
the sample space [3, 4]. For a ﬂow f(cid:2)
, we look at the probability
subspace where the kth smallest rank among r(f ) (f ∈ F \ {f(cid:2)})
is p(cid:2)
and the conditional distribution of the number of packets of
ﬂow f(cid:2)
that are counted. The number of packets is just like what