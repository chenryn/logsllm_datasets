It seems like a common problem I am seeing developers new to ES struggling
with is how to fit the pieces of the query DSL together. Returning more
structured feedback about what the query DSL is expecting feels like it would
help.
Some examples from helping someone recently:
    'filter' : {
      'not' : {
        'post_id' : [ 1, 2 ]
      }
    },
Problem here is the NOT filter should have a filter inside of it rather than a
field name
If the error response could return the type of expected data at each level
that would aid debugging. For example this could return:  
"filter": { "not" : "error: expects a filter" } }
Another case:
    'filter' : {
      'and' : {
        'terms' : {
          'post_type' : ['post']
        },
        'not' : {
          'terms' : {
            'post_id' : [1, 2]
          }
        }
      }
    },
Error:  
"filter": { "and": "error: expects an array of filter objects" } }
With more complex nesting:
    'filter' : {
      'and' : [
        {
          'terms' : {
           'post_type' : ['post']
          }
        },
        {
          'not' : {
            'post_id' : [1,2]
          }
        }
      ]
    }
Error:  
"filter": { "and": [{"terms" : "ok"}, {"not" : "error: expects a filter"} } }
Not entirely sure how feasible this is, or if there is better syntax or a more
standard method for reporting such structured errors.