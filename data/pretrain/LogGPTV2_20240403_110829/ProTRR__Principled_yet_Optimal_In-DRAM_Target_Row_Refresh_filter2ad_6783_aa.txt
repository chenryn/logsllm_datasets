title:ProTRR: Principled yet Optimal In-DRAM Target Row Refresh
author:Michele Marazzi and
Patrick Jattke and
Flavien Solt and
Kaveh Razavi
4
6
6
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
2022 IEEE Symposium on Security and Privacy (SP)
PROTRR: Principled yet Optimal In-DRAM
Target Row Refresh
Michele Marazzi, Patrick Jattke, Flavien Solt and Kaveh Razavi
Computer Security Group, ETH Z¨urich
Abstract—The DRAM substrate is becoming increasingly more
vulnerable to Rowhammer as we move to smaller technology
nodes. We introduce PROTRR, the first principled in-DRAM
Target Row Refresh mitigation with formal security guarantees
and low bounds on overhead. Unlike existing proposals that
require changes to the memory controllers, the in-DRAM nature
of PROTRR enables its seamless integration. However, this means
that PROTRR must respect the synchronous nature of the DRAM
protocol, which limits the number of DRAM rows that can be
protected at any given time. To overcome this challenge, PROTRR
proactively refreshes each row that is most likely to observe bit
flips in the future. While this strategy catches the rows that
are hammered the most, some others may still fly under the
radar. We use this observation to construct FEINTING, a new
Rowhammer attack that we formally prove to be optimal in
this setting. We then configure PROTRR to be secure against
FEINTING. To achieve this, PROTRR should keep track of accesses
to each row, which is prohibitively expensive to implement in
hardware. Instead, PROTRR uses a new frequent item counting
scheme that leverages FEINTING to provide a provably optimal yet
flexible trade-off between the tolerated DRAM vulnerability, the
number of counters, and the number of additional refreshes. Our
extensive evaluation using an ASIC implementation of PROTRR
and cycle-accurate simulation shows that PROTRR can provide
principled protection for current and future DRAM technologies
with a negligible performance, power, and area impact. PROTRR
is fully compatible with DDR4 and the new Refresh Management
(RFM) extension in DDR5.
I. INTRODUCTION
Despite numerous mitigation attempts under Target Row
Refresh (TRR), Rowhammer is still an unsolved problem in
practice [1]–[3], threatening systems security in many different
scenarios [4]–[14]. Existing proposals attempt to mitigate
Rowhammer in the memory controller [15]–[20], but CPU
vendors have little incentive to introduce expensive mitigations
for a problem in the products of DRAM vendors. The natural
place to fix Rowhammer is inside DRAM itself, but mitigations
with strong security guarantees are currently lacking.
We present PROTRR, the first principled in-DRAM Rowham-
mer mitigation that
is secure against FEINTING, a novel
Rowhammer attack that we mathematically prove to be optimal.
PROTRR uses the bounds given by FEINTING in the design of a
new frequent item counting scheme, called PROMG (Proactive
Misra-Gries), with a provably optimal yet flexible trade-off
between the number of required counters and additional
refreshes. Our extensive evaluation of PROTRR using an
ASIC implementation and cycle-accurate simulation shows
the feasibility of principled in-DRAM Rowhammer protection
for current and future DRAM technologies.
Rowhammer. In their seminal work, Kim et al. [15] showed
that by repeatedly activating a DRAM row (i.e., aggressor),
it is possible to flip bits in its adjacent rows (i.e., victims)
before these rows have a chance to be refreshed as part of the
background DRAM refresh operation. This effect is present in
most DDR3 devices and has only worsened in DDR4 devices
deployed on more recent systems [1]–[3], [21]. In essence,
Rowhammer is compromising the isolation of data on DRAM.
A plethora of attacks followed, showing that it is possible
to abuse these bit flips to escalate privileges [8], [9], [14],
compromise browsers [4]–[7], break into co-located virtual
machines in the cloud [10], [11], and even attack servers over
the network [12], [13]. These attacks highlight the urgent need
for strong mitigations against Rowhammer.
Mitigations. Originally, two practical countermeasures were
believed to stop Rowhammer: doubling the DRAM’s refresh
rate and error-correcting code (ECC) DRAM. Unfortunately,
neither can fully protect systems [22], [23]. There are also pro-
posals to mitigate Rowhammer in software [9], [22], [24], [25],
but these solutions have security and performance issues [5],
[8], [26]. To mitigate Rowhammer in hardware, previous work
mostly proposes to modify the memory controller to detect
potential aggressors and refresh their victims [15], [16], [18]–
[20]. Unfortunately, due to their substantial cost, CPU vendors
are reluctant to deploy these mitigations given the promise of
Rowhammer-free devices by the DRAM vendors [27], [28].
However, without carefully analyzing the security implications
of performing TRRs inside DRAM, there will be gaps in the
protection, as evident in recent work [1]–[4], [19]. These gaps
will only worsen with the increasing Rowhammer vulnerability
in newer DRAM generations with smaller technology nodes.
FEINTING. In this paper, we advocate for a principled approach
for designing secure in-DRAM mitigations. In-DRAM mitiga-
tions allow for seamless system integration, but they need to
strictly adhere to the synchronous DRAM timing specifications
defined in the DDRx standard [29], [30]. For example, a DRAM
refresh command cannot suddenly take longer when the system
is under attack. This means that any in-DRAM mitigation can
only protect a handful of victim rows at any given point in
time. Consequently, even with an ideal in-DRAM TRR scheme
that always protects rows that are hammered the most, an
attacker can use decoy rows to slowly increase the number of
times a victim is hammered without it ever being subject to
the mitigation. We use this observation to construct FEINTING,
a novel Rowhammer attack that we mathematically prove to be
© 2022, Michele Marazzi. Under license to IEEE.
DOI 10.1109/SP46214.2022.00134
735
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:57:04 UTC from IEEE Xplore.  Restrictions apply. 
optimal against an ideal in-DRAM mitigation. FEINTING enables
us to calculate strict bounds on the degree of Rowhammer
vulnerability that can be tolerated on any compliant DDR4
device and future DDR5 devices that use Refresh Management
(RFM), a new extension that is primarily introduced in the
DDR5 standard to address Rowhammer [30]. To the best of
our knowledge, this is the first work to define and calculate
these crucial bounds.
PROTRR. Counting the activations of each row for an ideal in-
DRAM mitigation is too expensive to implement in hardware.
Existing frequent
item counting schemes can reduce the
number of necessary counters when frequent items need to be
identified over an arbitrary sequence of row activations [19].
Unfortunately, these schemes are unsuitable for in-DRAM
TRR which needs to proactively protect target rows based
on the information that is available at short intervals. We
develop Principled yet Optimal Target Row Refresh (PROTRR),
a new in-DRAM Rowhammer mitigation that we prove is both
secure and optimal in this setting. PROTRR makes use of
a new frequent item counting scheme, called PROMG, that
adapts FEINTING to right-size Misra-Gries summaries [31]
for secure in-DRAM operation. Our calculations show that
the insights from FEINTING enable PROTRR to significantly
reduce the required number of counters with slight changes to
the Rowhammer tolerance. This property provides PROTRR
with an unprecedented flexibility: depending on the degree of
Rowhammer vulnerability, a DRAM vendor can decide how
to balance the number of counters and in-DRAM refreshes for
keeping its DRAM devices secure. Furthermore, we provide
a proof that PROTRR is optimal in terms of counters and the
required refreshes at any given configuration; fixing the number
of refreshes, any in-DRAM mitigation that uses fewer counters
than PROTRR will be vulnerable to Rowhammer. Similarly,
fixing the number of counters, any in-DRAM mitigation that
uses fewer refreshes will also be vulnerable.
Our extensive evaluation using an ASIC implementation
and cycle-accurate simulation shows that PROTRR provides
principled protection with a negligible performance, area, and
power impact. For example, PROTRR can protect a DDR5
device where bits flip after only 3,200 activations, with less
than 0.2% performance overhead, while increasing the area by
1.78% and energy consumption of DRAM by 2.35%.
Contributions. We make the following contributions:
1. The construction of FEINTING and a mathematical proof
of its optimality against an ideal in-DRAM TRR.
2. The design of PROTRR, a principled in-DRAM TRR that
is secure against FEINTING while providing a provably-
optimal yet flexible trade-off between the required counters
and refreshes.
3. A comprehensive evaluation of PROTRR using (i) an
ASIC implementation in a popular 12 nm technology
for measuring its area and power requirements in DDR4
and DDR5 devices, and (ii) cycle-accurate simulation
for measuring its performance overhead when using the
recently introduced RFM extension in DDR5.