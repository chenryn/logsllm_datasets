07:45:01 PM8.030.008.03
Linux 2.6.24-22-server (kickseed) 01/07/2012
Average:
09:05:01P
08:55:01 PM
08:45:01PM
08:35:01P
08:25:01
08:05:01PM
07:55:01PM
09:01:18
查看之前的统计信息
，可以使用-s 和-e参数分别指定你感兴趣的开始时间和
服务器为什么这么慢？耗尽了CPU、RAM和磁盘IO资源
。例如，如果想要查看8:00pm—8:30pm这个时间段内的
需要输入：
M
7.64
8.17
7.160.00
18.780.148.64
8.04
8.110.04
7.11
8.27
9.50
0.00
0.00
0.00
0.00
0.06
0.14
0.00
0.00
0.00
8.06
7.64
8.04
8.27
8.03
7.16
7.61
7.11
9.44
2.15
1.12
1.67102.52
0.00106.61
0.00
0.36
0.00
0.00
0.01
5.82
0.00
3.35
4.09
127
1.21
0.62
139.02
72.11
61.
63.73
66.46
9
0.00 97.
0.00 96.16
---
## Page 38
统计信息。
如，想要获取本月第6天的统计信息，你需要输入：
/var/log/sysstat或/var/log/sa文件夹内统计信息文件的完整路径。例
也可以正常混合使用任意其他 sar选项，从而获得特定类型的
如果想要获取非当天的数据，使用-f选项，后面输人存储在
$sar-f/var/log/sysstat/sa06
Average:
all 0.490.00
1.63
0.910.00 96.96
2.3问题发生后的高负载处理·31
---
## Page 39
3.1
统恢复正常再好不过。
态。当内核或者发行版的更新出现问题的时候，你自己就能够让系
任何DevOps团队中的成员都有责任让系统中的软件包保持最新状
讲完启动流程之后，本章还会强调几类主要的启动问题，以及如何
统启动的流程，你就可以观察自己的系统，看看它卡在了哪一步。
明系统为什么无法启动，本章首先会介绍启动过程。一旦明白了系
的任何数据可能都依赖于系统备份和运行的能力。
所有服务，直到这个问题得到解决为止。更重要的是，你想要获取
诊断并修复这些问题。
是系统无法启动了。毕竞，服务器系统无法启动就意味着它停止了
为什么系统无法启动？解决启动问题
第3章
从传统意义上讲，处理启动问题是系统管理员的工作，不过，
有很多问题都可能会导致系统无法启动。为了让大家更好地查
第1章曾经提到过，如果你想要擅长故障排除工作，那么你最
Linux系统可能会出很多问题，其中最让人感到崩溃的也许就
Linux启动流程
---
## Page 40
统启动的时候，首先会看到这个界面。尽管对于不同的系统来说，
3.1.1
为有众多原因可以引发启动问题。
好清楚系统如何运行。这个道理也适用于处理启动问题，特别是因
3.1.2
载人并执行MBR中的启动代码，由此开始启动流程。
过程通常意味着读取MBR（主引导记录，即硬盘上的前512字节）
直到找到可以从中成功启动的设备。对于Linux服务器来说，这个
动的硬件。然后BIOS会根据所配置的启动设备的顺序一步步检查，
当系统从USB、CD-ROM 或网络启动的时候，分别会使用 syslinux、
硬盘驱动器、USB 磁盘、CD-ROM、网卡以及任何其他可以从中启
这个程序的界面不尽相同，但是BIOS 都会初始化硬件，包括检测
后执行这些代码。GRUB 代码的下一阶段可以让它访问Linux的文
部分用来保存分区表信息），这些代码仅仅够定位到其他代码，然
之为第一阶段)。因为MBR 中仅能容纳446字节的启动代码（其余
统，在哪里找到对应操作系统的内核以及当系统启动时应用什么样
各种软件并读取配置文件，从配置文件中能够得知启动什么操作系
启动载入程序的细节与GRUB不尽相同，但是它们的功能都是载人
isolinux或pxelinux作为相应的启动载入程序。尽管 syslinux及其他
的程序。GRUB 通常是系统从硬盘启动时需要用到的启动载人程序
启动载人程序可能是GRUB，不过之前也有人用过一个名为LILO
启动载人程序将接管下面的工作。在一般的Linux服务器上，这个
的配置。
当GRUB被载人之后，会在MBR中会执行一小部分代码（称
BIOS 将硬件初始化完毕，找到第一个可以启动的设备之后，
启动过程中最先执行的程序是BIOS（基本输入输出系统)。系
GRUB和Linux启动载入程序
BIOS
3.1Linux 启动流程·33
---
## Page 41
34
第3章为什么系统无法启动？解决启动问题
看到一个菜单，上面有一个可以选择启动哪个操作系统的列表（见
动界面，有时带有一些图形，一般还会有一个倒计时。通常你会
决问题的特殊恢复模式。通常配置文件中也会描述可以用来查看并
Linux来说，这可能包含硬盘上很多不同的内核版本以及能帮助解
的错误。
可以在没有恢复盘的情况下，修正可能存在于GRUB 配置文件中
启动时间设置，这一点在进行问题处理的时候非常方便，因为你
修改启动选项的各类菜单。
这些操作系统在硬盘的位置，以及应当传入哪些选项参数。对于
件系统、
下 Shift键）才能看到这个菜单。GRUB 也允许查看和修改指定的
图3-1），不过有时需要按下类似于Esc的按键（在GRUB2中要按
绝大多数现代操作系统中，GRUB 都会显示一个非常友好的启
Machine Devices Help
Cent0S (2.6.18-238.e15)
before booting.
conninds
、读取并载人配置文件，
图3-1
CentoS
1CentOS 中默认的GRUB菜单
由此找出应该启动哪个操作系统和
G
menf
Right Ctrl
O
---
## Page 42
自动为你做出选择），GRUB 会将Linux核心载人到RAM中并执行，
3.1.3
并带有一些额外特性（如RAID、LVM和文件系统加密），内核变
随着硬件开始支持很多不同类型的文件系统以及SCSI和IDE设备，
的配置文件、内核模块以及内核需要用来寻找并挂载（mount）真实
通常是 gzip 格式压缩的备份文档，称为 initramfs 文件，一般包含一
里。在挂载了真正的根文件系统之后，initramfs 文件的最后一步是
段标准的 shell脚本，用来先检测硬件，然后创建挂载点，之后再
在initramfs 文件的根目录中运行一段名为 init 的脚本。这仅仅是一
统中，而你又需要用这些模块来读取根文件系统，怎样才能完成挂
到了模块中，所以你会面临鸡和蛋的问题。如果模块处于根文件系
仅仅载人系统需要的模块。因为硬件驱动器和文件系统支持都分拆
得越来越大。因此，这些特性被分拆到独立的模块中，这样就可以
根文件系统的程序。
个基本的小型Linux 根文件系统。在这个文件系统中，有一些重要
始 RAM 磁盘（Initial RAM Disk，Initrd）。在现代Linux系统中，它
同时传人启动时配置的所有参数。通常GRUB 也会随着内核载人初
3.1.4
执行/sbin/init程序，后者会接管启动流程中其余的工作。
挂载根文件系统。因为这个路径是由GRUB 在它首次加载内核的时
载？解决方法就是将这些重要的模块都放人初始RAM磁盘中。
以前，启动时的这些功能都直接构建在Linux 内核中。但是，
随着内核的启动，它会将initramfs 文件解压到RAM中，然后
一旦在GRUB 中选择了特定的内核（或者倒计时结束，系统会
/sbin/init 程序是系统中所有程序的父进程。这个进程的 PID 总
/sbin/init
内核与初始RAM磁盘
3.1Linux启动流程·35
---
## Page 43
36
容的/etc/rc?.d文件夹，而且Upstart 现在开始处理底层所有的
·第3章为什么系统无法启动？解决启动问题
模式，它会启动进人运行等级为1的系统状态中。
全启动的问题上非常有用。在默认的GRUB菜单中能看到一个恢复
断电。类似地，运行等级6代表重启机器。运行等级1代表单用户
行等级0，系统就会终止所有的运行进程，卸载所有的文件系统并
系统状态。例如，运行等级0留给了停止的系统状态。当你进人运
运行等级用数字区分，从0到6，每个数字代表了一个完全不同的
这点。然后进入这个运行等级，启动配置在这个运行等级下应该
inittab 的配置文件，通过它来查看默认的运行等级，下面会讨论到
Upstart，所以下面就分别介绍它们。
工作。因为服务器上最常使用的两种init 系统是 SytemV init 和
Vinit程序的杰出结构，如运行等级（runlevel）和针对向后兼
例如，Ubuntu服务器选择使用Upstart，但它仍然保留了System
Linux发行版选择使用其他系统，如Upstart，或者最近的 systemd。
都使用著名的 SystemV init模型（马上就会讲到），然而一些现代
进程能在单用户模式下启动，所以这个运行等级在处理系统无法完
一个特定版本。在这种风格的init程序中，init进程会读取/etc/
作系统方面有一些不同的标准，但是绝大多数传统Linux发行版
段时间Linux 操作系统的用户都知道，Ubuntu 服务器上的 init 程序
是1，它负责启动组成Linux操作系统的其他进程。那些使用过一
模式一
启动的进程。
与大家之前习惯使用的init程序不同。它们在如何初始化UNIX操
SystemV init 进程由很多称为运行等级的不同系统状态定义。
运行等级2到5留给发行版使用，最终由用户来定义。定义诸
SystemV指的是由AT&T开发的原始UNIX操作系统中的
1.传统的SystemVInit
一仅有单个用户可以登录到系统中的状态。通常，没有几个
---
## Page 44
初始化脚本，以及系统的主要服务来说，还有很多其他重要的文件
级的方式更改当前的运行等级。所以，想要更改为单用户模式，应
restart（重启服务器）、status（返回服务当前状态）、reload（告知服
最少接受两个参数 start 和 stop，它们分别代表启动和停止服务（如
般来说，它们都是标准的 shell 脚本，遵守最基本的标准。每个脚本
认的运行等级。系统启动之后，你也可以用init命令后跟着运行等
启动的时候，根据提示输人一个参数，用你指定的运行等级覆盖默
级，例如，为启动不带网络访问的系统定义一个运行等级。然后在
运行等级3)，这是一个传统的做法。你也可以定义其他的运行等
等级5），并为非图形界面设置另一个运行等级（在Red Hat中，为
发行版都会为图形桌面设置一个运行等级（在RedHat中，为运行
多运行等级的想法是让你创建进人服务器的不同模式。很多Linux
开头的脚本并传人 stop 参数，除非对应的 init 脚本在前一个运行等
的配置）。当用不带参数的方式运行脚本的时候，一般应该返回一个
务从配置文件中重新载人配置）以及force-reload（强制服务重载它
网页服务）。除此之外，init脚本通常还会接受一些额外的选项，如
和文件夹。
该输人 sudo init 1。
当init进人一个运行等级的时候，它会按照数字顺序运行所有以K