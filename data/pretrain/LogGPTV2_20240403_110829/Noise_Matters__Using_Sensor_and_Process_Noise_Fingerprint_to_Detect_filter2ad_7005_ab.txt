568ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Chuadhry Mujeeb Ahmed, Jianying Zhou, and Aditya P. Mathur
(cid:41)
(cid:40)k−2
i =0
The reconstruction method given by (3)-(6) is referred to as the
steady state Kalman Filter, cf. [6].
The difference between the real-time sensor measurement and
sensor measurement estimate is the residual vector (rk := ¯yk − ˆyk).
The residual vector is a function of sensor and process noise and
can be given as,
+ ηk
rk = C
(A − LC)i(vk−i−1 − Lηk−i−1)
(7)
Where rk is residual at each time-instant k ∈ N. vk ∈ Rn is the
process noise and ηk ∈ Rm is the sensor noise. A and C are state
space matrices and L is steady state Kalman filter gain.
Expression in Eq. (7), is an important intuition behind the idea
of a noise-based fingerprint as it can be seen that the residual
vector obtained from the system model, is a function of process
and sensor noise. Using system model and system state estimates,
it is possible to extract the sensor and process noise. Once we
have obtained these residual vectors capturing sensor and process
noise characteristics of the given CPS, we can proceed with pattern
recognition techniques (e.g. machine learning) to fingerprint the
given sensor and process.
2.2 Model Validation
After getting a system model, the next step is to validate the model.
The procedure for the system model validation is that 1) First, le-
gitimate control actions are chosen from the plant dataset, 2) The
state space matrices (A, B and C) are used to estimate the output of
the system. We use the difference equation in (3) to estimate the
system state and ultimately estimate the sensor measurements. The
estimate of the sensor measurement is compared to the real-time
sensor measurement data. An example comparison is shown in
Figure 3. The top pane shows the real sensor measurements and
estimate of those sensor measurements obtained using the system
model. The middle pane plots the difference between the real-time
sensor measurements and estimate of the sensor measurements.
Distribution (PDF) for the residual vector is plotted on the bottom
pane. It can be observed that the estimate for the sensor measure-
ment is very close to the real sensor measurements and the PDF
for the residual vector is tightly bounded with a small variance. To
quantify the goodness of a system model, mean square error (MSE)
is used as a metric. In particular, one minus the root mean square
error (RMSE) defines the estimation accuracy or best fit of a model,
(cid:115)n
RMSE =
i =1(yi − ˆyi)2
n
(8)
MSE is the difference between sensor measurement and sensor
measurement estimate squared and essentially gives the distance
between measured and estimated value or in other words, how
far the estimated value from the measured value is. The model
accuracies for 18 sensors used in this study (from SWaT testbed)
are shown in Table 1. It can be seen that the obtained system model
is very accurate, with most of the sensors achieving scores of 99%
and only a few sensors scoring marginally less. In control theory
literature models with accuracies as high as 70%, are considered
accurate approximations of real system dynamics [45].
Figure 3: Validating system model obtained using sub-space
system identification method.
2.3 Machine Learning and Decision
In the previous section, it has been shown that the residual vector is
actually the noise pattern to be fingerprinted. A set of features are
extracted from the data of residuals. A list of extracted time domain
and frequency domain features is shown in Table 2. Spectral features
are obtained by taking the Fourier transform of the time series data
of residuals. We used a library for the support vector machine
(LibSVM [9]) to train a model on extracted features. Training is
performed using seven days of real-time dataset from SWaT testbed
under normal operation. Residuals are labeled with a sensor ID. The
trained machine learning model is tested on fresh residual vectors
to either give a correct sensor ID or raise an alarm for sensor data
integrity attacks. More details on data chunking and classification
are provided in Section 4.
2.4 Threat Model
In a CPS, sensors play an important role by sending physical mea-
surements to a controller to take a proper control action. An ad-
versary can render a system vulnerable by compromising sensors.
Sensors could be compromised in the physical domain (by analog
sensor spoofing or physical tampering/replacement of a sensor)
and cyber domain (by injecting/modifying sensor data at software
layers). It is important to validate the sensor data to authenticate it,
whether it is being sent by a legitimate sensor or from an adversary.
Due to the limited computational power of sensors in a typical CPS,
advanced cryptographic solutions are not feasible. Therefore, we
came up with the proposed novel idea of noise-based authentication
of sensors. The goal is to identify a sensor based on its physical
characteristics. Specific cyber attacks are also considered on sensor
measurements in a water treatment plant. In Figure 2, it can be
seen that an attacker can modify a rightful sensor measurement
by an attack value δk. In this section, we introduce the types of
attacks launched on the secure water treatment testbed (SWaT).
Essentially, the attacker model encompasses the attacker’s inten-
tions and capabilities. The attacker may choose its goals from a set
of intentions [41], including performance degradation, disturbing
a physical property of the system, or damaging a component. In
our experiments, a range of attacks are considered from already
published attack scenarios in the literature [1, 10, 16].
569Noise Matters
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Table 1: Validating SWAT system model obtained from sub-space system identification. FITs are electromagnetic
flow meters, AITs are chemical sensors, LITs are ultrasonic level sensors and PITs are pressure sensors. S1:FIT101,
S2:LIT101, S3:AIT201, S4:AIT202, S5:AIT203, S6:FIT201, S7:LIT301, S8:FIT301, S9:DPIT301, S10:LIT401, S11:FIT401, S12:FIT501,
S13:PIT501, S14:FIT502, S15:PIT502, S16:FIT503, S17:PIT503, S18:FIT601
Sensor
RMSE
0.0363
(1-RMSE)*100% 96.3670
S1
S2
0.2867
71.3273
S3
0.0346
96.5409
S4
0.0113
98.8675
S5
0.0520
94.8009
S6
0.0313
96.8656
S7
0.2561
74.3869
S8
0.0200
98.0032
S9
0.0612
93.8757
S10
0.2267
77.3296
S11
0.0014
99.8593
S12
0.0096
99.0377
S13
0.0670
93.3031
S14
0.0082
99.1821
S15
0.0267
97.3313
S16
0.0037
99.6251
S17
0.0595
94.0537
S18
0.0035
99.6501
Table 2: List of features used. Vector x is time domain data
from the sensor for N elements in the data chunk. Vector y is
the frequency domain feature of sensor data. yf is the vector
of bin frequencies and ym is the magnitude of the frequency
coefficients.
Feature
Mean
Std-Dev
Mean Avg. Dev
Skewness
Kurtosis
Spec. Std-Dev
Spec. Centroid
DC Component
σ =
D ¯x = 1
N
γ = 1
N
β = 1
N
N
(cid:113) 1
N−1N
Description
¯x = 1
N
i =1 xi
N
N
i =1(xi − ¯xi)2
N
i =1 |xi − ¯x|
(cid:114)N
i =1( xi− ¯x
σ )3
i =1( xi− ¯x
σ )4 − 3
N
N
i =1(yf (i)2)∗ym(i)
N
i =1 ym(i)
i =1(yf (i))∗ym(i)
i =1 ym(i)
ym(0)
σs =
Cs =
2.4.1 Attacker Model. Assumptions on Attacker: It is assumed
that the attacker has access to yk,i = Ci xk + ηk,i (i.e. the opponent
has access to ith sensor’s measurements). Also, the attacker knows
the system dynamics, the state space matrices, the control inputs
and outputs, and the implemented detection procedure. A powerful
attacker can arbitrarily change sensor measurements to the desired
sensor value, by learning and adding the sensor and process noise.
We do not consider replay attack in this article because noise profile
for process and sensor would be preserved during a replay attack.
A malicious insider is an attacker with physical access to the plant
and thus to its devices such as level sensors. However, an attacker
who can physically replace or tamper sensors may not necessarily
be an insider, because critical infrastructures, e.g., for water and
power, are generally distributed across large areas [15, 42]. An
outsider, e.g., end user, can also carry out a physical attack on
sensors such as smart energy monitors.
2.4.2 Attack Scenarios. Data Injection Attacks: For data injection
attacks, it is considered that an attacker injects or modifies the real
sensor measurement. In general, for a complex CPS, there can be
many possible attack scenarios. We consider a generic attack to
show the performance of the proposed technique. However stealthy
attack is a worst case scenario for a detection technique where an
adversary tries to deceive the detection mechanism by creating
attack vectors δk based on working principle of the attack detection
technique. In this study, the following types of data injection attack
scenarios are considered,
• Generic Sensor Spoofing Attack: We evaluate the proposed
technique for a range of network attack scenarios from
benchmark attacks on SWaT testbed [16]. These attacks
cover a wide range of 41 attacks on both sensors and ac-
tuators. Since the proposed technique extracts the sensor
and process noise from the sensor measurements and resid-
uals, a set of attacks on sensors are considered as shown in
Table 6 in the Appendix. In general, an attack vector can be
defined as,
¯yk = yk + δk ,
(9)
Where δk is the data injected by an attacker. The detail about
each δk is described in Table 6 where it can be seen that it
ranges from an abrupt injection of data to more slow change
in sensor measurements.
• Stealthy Attacks for the Proposed Technique: These attacks
are designed to be stealthy by changing sensor measure-
ments as such that the proposed detection mechanism might
fail. Since the proposed idea uses sensor and process noise
fingerprint, an attacker who wants to stay stealthy might
try to choose injected readings from the noise distribution
of the noise pattern. To do this, an attacker needs to learn
the noise pattern for each sensor and process. We assume
that an attacker has the ability to do that. We have carried
out extensive analysis for such an attack by deriving the
bounds on the deviation of system state under such attack
and also provided a security proof for attack detection under
a stealthy attack scenario in the Section 3.
2.4.3 Attack Execution. All the attacks which are taken from
reference work [16], are executed by compromising the Supervisory
Control and Data Acquisition (SCADA) system. An attack toolbox
is used to inject an arbitrary value for real sensor measurement.
3 STATE ESTIMATION AND SECURITY
PROOF UNDER STEALTHY ATTACKS
In this section, the performance of the proposed technique is as-
sessed by quantifying the effect of the attack sequence δk on the
state of the process. We estimate the state deviation under a stealthy
attack, in particular, an upper bound is derived for state estimate.
A security proof is given for the performance of the proposed tech-
nique under a stealthy attack.
3.1 System State Under Normal Operation
During the normal operation of the plant, state of the system could
be estimated using the system model (1) and state estimation (3). In
570ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Chuadhry Mujeeb Ahmed, Jianying Zhou, and Aditya P. Mathur
the following, an analytical model for state estimate and residual is
derived to compare and differentiate it from attack scenario.
Proposition 1. Consider the process (1), the Kalman filter (3)-(5).
Under the normal operation of the plant, it can be shown that the
state estimation error is ek +1 = (A − LC)ek + vk − Lηk.
Proposition 2. Consider the process (1), the Kalman filter (3)-(5).
Under the normal operation of the plant, it can be shown that the
residual vector is rk = Cek + ηk.
Proposition 3. Consider the process (1), the Kalman filter (3)-(5).
Under the normal operation of the plant, it can be shown that
j =0 [Aj LCek−1−j + Aj Buk−1−j +
the state estimation is ˆxk = k−1
Aj Lηk−1−j] + Ak x0.
Proof : Due to space limitations the proof for Proposition (1)-(3) is
provided in Appendix A.
■
From the Proposition (1-2), it can be seen that the residual vector
is a function of sensor and process noise under normal operation.