### Database Compatibility for Oracle® Developers
#### Reference Guide

#### 3.32 DBA_DIRECTORIES
The `DBA_DIRECTORIES` view provides information about all directories created with the `CREATE DIRECTORY` command.

| Name            | Type                | Description                              |
|-----------------|---------------------|------------------------------------------|
| `owner`         | `CHARACTER VARYING(30)` | User name of the directory's owner.      |
| `directory_name`| `CHARACTER VARYING(30)` | The alias name assigned to the directory.|
| `directory_path`| `CHARACTER VARYING(4000)` | The path to the directory.               |

#### 3.33 DBA_IND_COLUMNS
The `DBA_IND_COLUMNS` view provides information about all columns included in indexes on all tables in the database.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `index_owner`     | `TEXT`     | User name of the index's owner.                      |
| `schema_name`     | `TEXT`     | Name of the schema in which the index belongs.        |
| `index_name`      | `TEXT`     | Name of the index.                                   |
| `table_owner`     | `TEXT`     | User name of the table's owner.                      |
| `table_name`      | `TEXT`     | Name of the table in which the index belongs.         |
| `column_name`     | `TEXT`     | Name of the column or attribute of the object column. |
| `column_position` | `SMALLINT` | The position of the column in the index.              |
| `column_length`   | `SMALLINT` | The length of the column (in bytes).                 |
| `char_length`     | `NUMERIC`  | The length of the column (in characters).            |
| `descend`         | `CHARACTER(1)` | Always set to 'Y' (descending); included for compatibility only. |

#### 3.34 DBA_INDEXES
The `DBA_INDEXES` view provides information about all indexes in the database.

| Name               | Type       | Description                                          |
|--------------------|------------|------------------------------------------------------|
| `owner`            | `TEXT`     | User name of the index's owner.                      |
| `schema_name`      | `TEXT`     | Name of the schema in which the index resides.        |
| `index_name`       | `TEXT`     | The name of the index.                               |
| `index_type`       | `TEXT`     | The index type is always BTREE; included for compatibility only. |
| `table_owner`      | `TEXT`     | User name of the owner of the indexed table.          |
| `table_name`       | `TEXT`     | The name of the indexed table.                       |
| `table_type`       | `TEXT`     | Included for compatibility only; always set to TABLE. |
| `uniqueness`       | `TEXT`     | Indicates if the index is UNIQUE or NONUNIQUE.       |
| `compression`      | `CHARACTER(1)` | Always set to 'N' (not compressed); included for compatibility only. |
| `tablespace_name`  | `TEXT`     | Name of the tablespace in which the table resides if other than the default tablespace. |
| `logging`          | `TEXT`     | Included for compatibility only; always set to LOGGING. |
| `status`           | `TEXT`     | Whether or not the state of the object is valid (VALID or INVALID). |
| `partitioned`      | `CHARACTER(3)` | Indicates that the index is partitioned; always set to NO. |
| `temporary`        | `CHARACTER(1)` | Indicates that an index is on a temporary table; always set to N. |
| `secondary`        | `CHARACTER(1)` | Included for compatibility only; always set to N.    |
| `join_index`       | `CHARACTER(3)` | Included for compatibility only; always set to NO.   |
| `dropped`          | `CHARACTER(3)` | Included for compatibility only; always set to NO.   |

#### 3.35 DBA_JOBS
The `DBA_JOBS` view provides information about all jobs in the database.

| Name              | Type                        | Description                                          |
|-------------------|-----------------------------|------------------------------------------------------|
| `job`             | `INTEGER`                   | The identifier of the job (Job ID).                  |
| `log_user`        | `TEXT`                      | The name of the user that submitted the job.          |
| `priv_user`       | `TEXT`                      | Same as `log_user`; included for compatibility only.  |
| `schema_user`     | `TEXT`                      | The name of the schema used to parse the job.         |
| `last_date`       | `TIMESTAMP WITH TIME ZONE`  | The last date that this job executed successfully.    |
| `last_sec`        | `TEXT`                      | Same as `last_date`.                                 |
| `this_date`       | `TIMESTAMP WITH TIME ZONE`  | The date that the job began executing.                |
| `this_sec`        | `TEXT`                      | Same as `this_date`.                                 |
| `next_date`       | `TIMESTAMP WITH TIME ZONE`  | The next date that this job will be executed.         |
| `next_sec`        | `TEXT`                      | Same as `next_date`.                                 |
| `total_time`      | `INTERVAL`                  | The execution time of this job (in seconds).          |
| `broken`          | `TEXT`                      | If 'Y', no attempt will be made to run this job; if 'N', this job will attempt to execute. |
| `interval`        | `TEXT`                      | Determines how often the job will repeat.             |
| `failures`        | `BIGINT`                    | The number of times that the job has failed to complete since its last successful execution. |
| `what`            | `TEXT`                      | The job definition (PL/SQL code block) that runs when the job executes. |
| `nls_env`         | `CHARACTER VARYING(4000)`   | Always NULL; provided for compatibility only.        |
| `misc_env`        | `BYTEA`                     | Always NULL; provided for compatibility only.        |
| `instance`        | `NUMERIC`                   | Always 0; provided for compatibility only.           |

#### 3.36 DBA_OBJECTS
The `DBA_OBJECTS` view provides information about all objects in the database.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `owner`           | `TEXT`              | User name of the object's owner.                      |
| `schema_name`     | `TEXT`              | Name of the schema in which the object belongs.       |
| `object_name`     | `TEXT`              | Name of the object.                                  |
| `object_type`     | `TEXT`              | Type of the object – possible values are: INDEX, FUNCTION, PACKAGE, PACKAGE BODY, PROCEDURE, SEQUENCE, SYNONYM, TABLE, TRIGGER, and VIEW. |
| `status`          | `CHARACTER VARYING` | Included for compatibility only; always set to VALID. |
| `temporary`       | `TEXT`              | 'Y' if the table is temporary; 'N' if the table is permanent. |

#### 3.37 DBA_PART_KEY_COLUMNS
The `DBA_PART_KEY_COLUMNS` view provides information about the key columns of the partitioned tables that reside in the database.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `owner`           | `TEXT`              | The owner of the table.                              |
| `schema_name`     | `TEXT`              | The name of the schema in which the table resides.    |
| `name`            | `TEXT`              | The name of the table in which the column resides.    |
| `object_type`     | `CHARACTER(5)`      | For compatibility only; always TABLE.                 |
| `column_name`     | `TEXT`              | The name of the column on which the key is defined.   |
| `column_position` | `INTEGER`           | 1 for the first column; 2 for the second column, etc. |

#### 3.38 DBA_PART_TABLES
The `DBA_PART_TABLES` view provides information about all of the partitioned tables in the database.

| Name                      | Type                | Description                                          |
|---------------------------|---------------------|------------------------------------------------------|
| `owner`                   | `TEXT`              | The owner of the partitioned table.                  |
| `schema_name`             | `TEXT`              | The schema in which the table resides.               |
| `table_name`              | `TEXT`              | The name of the table.                               |
| `partitioning_type`       | `TEXT`              | The type used to define table partitions.            |
| `subpartitioning_type`    | `TEXT`              | The subpartitioning type used to define table subpartitions. |
| `partition_count`         | `BIGINT`            | The number of partitions in the table.               |
| `def_subpartition_count`  | `INTEGER`           | The number of subpartitions in the table.            |
| `partitioning_key_count`  | `INTEGER`           | The number of partitioning keys specified.           |
| `subpartitioning_key_count` | `INTEGER`           | The number of subpartitioning keys specified.        |
| `status`                  | `CHARACTER VARYING(8)` | Provided for compatibility only; always VALID.       |
| `def_tablespace_name`     | `CHARACTER VARYING(30)` | Provided for compatibility only; always NULL.        |
| `def_pct_free`            | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_pct_used`            | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_ini_trans`           | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_max_trans`           | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_initial_extent`      | `CHARACTER VARYING(40)` | Provided for compatibility only; always NULL.        |
| `def_next_extent`         | `CHARACTER VARYING(40)` | Provided for compatibility only; always NULL.        |
| `def_min_extents`         | `CHARACTER VARYING(40)` | Provided for compatibility only; always NULL.        |
| `def_max_extents`         | `CHARACTER VARYING(40)` | Provided for compatibility only; always NULL.        |
| `def_pct_increase`        | `CHARACTER VARYING(40)` | Provided for compatibility only; always NULL.        |
| `def_freelists`           | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_freelist_groups`     | `NUMERIC`           | Provided for compatibility only; always NULL.        |
| `def_logging`             | `CHARACTER VARYING(7)` | Provided for compatibility only; always YES.         |
| `def_compression`         | `CHARACTER VARYING(8)` | Provided for compatibility only; always NONE.        |
| `def_buffer_pool`         | `CHARACTER VARYING(7)` | Provided for compatibility only; always DEFAULT.     |
| `ref_ptn_constraint_name` | `CHARACTER VARYING(30)` | Provided for compatibility only; always NULL.        |
| `interval`                | `CHARACTER VARYING(1000)` | Provided for compatibility only; always NULL.        |

#### 3.39 DBA_POLICIES
The `DBA_POLICIES` view provides information on all policies in the database. This view is accessible only to superusers.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `object_owner`    | `TEXT`     | Name of the owner of the object.                      |
| `schema_name`     | `TEXT`     | The name of the schema in which the object resides.   |
| `object_name`     | `TEXT`     | Name of the object to which the policy applies.       |
| `policy_group`    | `TEXT`     | Name of the policy group; included for compatibility only; always set to an empty string. |
| `policy_name`     | `TEXT`     | Name of the policy.                                  |
| `pf_owner`        | `TEXT`     | Name of the schema containing the policy function, or the schema containing the package that contains the policy function. |
| `package`         | `TEXT`     | Name of the package containing the policy function (if the function belongs to a package). |
| `function`        | `TEXT`     | Name of the policy function.                         |
| `sel`             | `TEXT`     | Whether or not the policy applies to SELECT commands; possible values are YES or NO. |
| `ins`             | `TEXT`     | Whether or not the policy applies to INSERT commands; possible values are YES or NO. |
| `upd`             | `TEXT`     | Whether or not the policy applies to UPDATE commands; possible values are YES or NO. |
| `del`             | `TEXT`     | Whether or not the policy applies to DELETE commands; possible values are YES or NO. |
| `idx`             | `TEXT`     | Whether or not the policy applies to index maintenance; possible values are YES or NO. |
| `chk_option`      | `TEXT`     | Whether or not the check option is in force for INSERT and UPDATE commands; possible values are YES or NO. |
| `Enable`          | `TEXT`     | Whether or not the policy is enabled on the object; possible values are YES or NO. |
| `static_policy`   | `TEXT`     | Included for compatibility only; always set to NO.    |
| `policy_type`     | `TEXT`     | Included for compatibility only; always set to UNKNOWN. |
| `long_predicate`  | `TEXT`     | Included for compatibility only; always set to YES.   |

#### 3.40 DBA_PROFILES
The `DBA_PROFILES` view provides information about existing profiles. The table includes a row for each profile/resource combination.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `profile`         | `CHARACTER VARYING(128)` | The name of the profile.                            |
| `resource_name`   | `CHARACTER VARYING(32)` | The name of the resource associated with the profile. |
| `resource_type`   | `CHARACTER VARYING(8)` | The type of resource governed by the profile; currently PASSWORD for all supported resources. |
| `limit`           | `CHARACTER VARYING(128)` | The limit values of the resource.                    |
| `common`          | `CHARACTER VARYING(3)` | 'YES' for a user-created profile; 'NO' for a system-defined profile. |

#### 3.41 DBA_QUEUES
The `DBA_QUEUES` view provides information about any currently defined queues.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `owner`           | `TEXT`              | User name of the queue owner.                        |
| `name`            | `TEXT`              | The name of the queue.                               |
| `queue_table`     | `TEXT`              | The name of the queue table in which the queue resides. |
| `qid`             | `OID`               | The system-assigned object ID of the queue.          |
| `queue_type`      | `CHARACTER VARYING` | The queue type; may be EXCEPTION_QUEUE, NON_PERSISTENT_QUEUE, or NORMAL_QUEUE. |
| `max_retries`     | `NUMERIC`           | The maximum number of dequeue attempts.              |
| `retrydelay`      | `NUMERIC`           | The maximum time allowed between retries.            |
| `enqueue_enabled` | `CHARACTER VARYING` | 'YES' if the queue allows enqueuing; 'NO' if the queue does not. |
| `dequeue_enabled` | `CHARACTER VARYING` | 'YES' if the queue allows dequeuing; 'NO' if the queue does not. |
| `retention`       | `CHARACTER VARYING` | The number of seconds that a processed message is retained in the queue. |
| `user_comment`    | `CHARACTER VARYING` | A user-specified comment.                            |
| `network_name`    | `CHARACTER VARYING` | The name of the network on which the queue resides.   |
| `sharded`         | `CHARACTER VARYING` | 'YES' if the queue resides on a sharded network; 'NO' if the queue does not. |

#### 3.42 DBA_QUEUE_TABLES
The `DBA_QUEUE_TABLES` view provides information about all of the queue tables in the database.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `owner`           | `TEXT`              | Role name of the owner of the queue table.            |
| `queue_table`     | `TEXT`              | The user-specified name of the queue table.           |
| `type`            | `CHARACTER VARYING` | The type of data stored in the queue table.           |
| `object_type`     | `TEXT`              | The user-defined payload type.                        |
| `sort_order`      | `CHARACTER VARYING` | The order in which the queue table is sorted.         |
| `recipients`      | `CHARACTER VARYING` | Always SINGLE.                                       |
| `message_grouping`| `CHARACTER VARYING` | Always NONE.                                         |
| `compatible`      | `CHARACTER VARYING` | The release number of the Advanced Server release with which this queue table is compatible. |
| `primary_instance`| `NUMERIC`           | Always 0.                                            |
| `secondary_instance` | `NUMERIC`           | Always 0.                                            |
| `owner_instance`  | `NUMERIC`           | The instance number of the instance that owns the queue table. |
| `user_comment`    | `CHARACTER VARYING` | The user comment provided when the table was created. |
| `secure`          | `CHARACTER VARYING` | 'YES' indicates that the queue table is secure; 'NO' indicates that it is not. |

#### 3.43 DBA_ROLE_PRIVS
The `DBA_ROLE_PRIVS` view provides information on all roles that have been granted to users. A row is created for each role to which a user has been granted.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `grantee`         | `TEXT`     | User name to whom the role was granted.               |
| `granted_role`    | `TEXT`     | Name of the role granted to the grantee.              |
| `admin_option`    | `TEXT`     | 'YES' if the role was granted with the admin option, 'NO' otherwise. |
| `default_role`    | `TEXT`     | 'YES' if the role is enabled when the grantee creates a session. |

#### 3.44 DBA_ROLES
The `DBA_ROLES` view provides information on all roles with the NOLOGIN attribute (groups).

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `role`            | `TEXT`     | Name of a role having the NOLOGIN attribute – i.e., a group. |
| `password_required` | `TEXT`     | Included for compatibility only; always N.           |

#### 3.45 DBA_SEQUENCES
The `DBA_SEQUENCES` view provides information about all user-defined sequences.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `sequence_owner`  | `TEXT`     | User name of the sequence's owner.                    |
| `schema_name`     | `TEXT`     | The name of the schema in which the sequence resides. |
| `sequence_name`   | `TEXT`     | Name of the sequence.                                |
| `min_value`       | `NUMERIC`  | The lowest value that the server will assign to the sequence. |
| `max_value`       | `NUMERIC`  | The highest value that the server will assign to the sequence. |
| `increment_by`    | `NUMERIC`  | The value added to the current sequence number to create the next sequence number. |
| `cycle_flag`      | `CHARACTER VARYING` | Specifies if the sequence should wrap when it reaches `min_value` or `max_value`. |
| `order_flag`      | `CHARACTER VARYING` | Will always return Y.                                |
| `cache_size`      | `NUMERIC`  | The number of pre-allocated sequence numbers stored in memory. |
| `last_number`     | `NUMERIC`  | The value of the last sequence number saved to disk.  |

#### 3.46 DBA_SOURCE
The `DBA_SOURCE` view provides the source code listing of all objects in the database.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `owner`           | `TEXT`     | User name of the program's owner.                     |
| `schema_name`     | `TEXT`     | Name of the schema in which the program belongs.      |
| `name`            | `TEXT`     | Name of the program.                                 |
| `type`            | `TEXT`     | Type of program – possible values are: FUNCTION, PACKAGE, PACKAGE BODY, PROCEDURE, and TRIGGER. |
| `line`            | `INTEGER`  | Source code line number relative to a given program.  |
| `text`            | `TEXT`     | Line of source code text.                            |

#### 3.47 DBA_SUBPART_KEY_COLUMNS
The `DBA_SUBPART_KEY_COLUMNS` view provides information about the key columns of those partitioned tables which are subpartitioned that reside in the database.

| Name              | Type                | Description                                          |
|-------------------|---------------------|------------------------------------------------------|
| `owner`           | `TEXT`              | The owner of the table.                              |
| `schema_name`     | `TEXT`              | The name of the schema in which the table resides.    |
| `name`            | `TEXT`              | The name of the table in which the column resides.    |
| `object_type`     | `CHARACTER(5)`      | For compatibility only; always TABLE.                 |
| `column_name`     | `TEXT`              | The name of the column on which the key is defined.   |
| `column_position` | `INTEGER`           | 1 for the first column; 2 for the second column, etc. |

#### 3.48 DBA_SYNONYMS
The `DBA_SYNONYMS` view provides information about all synonyms in the database.

| Name              | Type       | Description                                          |
|-------------------|------------|------------------------------------------------------|
| `owner`           | `TEXT`     | User name of the synonym's owner.                     |
| `schema_name`     | `TEXT`     | Name of the schema in which the synonym belongs.      |
| `synonym_name`    | `TEXT`     | Name of the synonym.                                 |
| `table_owner`     | `TEXT`     | User name of the table's owner on which the synonym is based. |

---

Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved.