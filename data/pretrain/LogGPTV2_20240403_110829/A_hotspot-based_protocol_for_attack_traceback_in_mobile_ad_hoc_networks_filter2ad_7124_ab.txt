### Legitimate Marker and Packet Source
A legitimate marker becomes the source of a new packet, subject to detection by our traceback protocol. Whether a packet is marked or not, an intermediate node logs a hextuple into its traceback table. This hextuple contains information such as the packet digest, the prior marker, the distance to the prior marker, an authentication code, the forwarder (i.e., the immediate upstream node), and the destination.

### Determining the Marking Probability
In a standard Probabilistic Packet Marking (PPM) scheme, the marking probability \( p \) is a fixed system parameter. From a security perspective, we prefer that a packet mark does not travel too far. However, from a traceability standpoint, it is beneficial for packet marks to be delivered closer to the destination to enhance traceability under node mobility.

To balance these seemingly contradictory requirements, we introduce the technique of adjusted probabilistic packet marking. In [5], it is proposed to vary the marking probability from hop to hop based on the marker's position in the path. This allows the destination node to gather information about upstream nodes with fewer packets. In our scenario, we aim for the majority of packet markings to be overwritten by downstream nodes within two or three hops with a high probability. This ensures that if a spoofed mark is detected at an intermediate node \( u_i \), the hotspot is likely to be within three hops of \( u_i \). Additionally, this approach facilitates online traceback to bypass broken links. We still allow long-distance traversal of packet markings at a low probability to benefit more from marking when multiple attack packets are present.

### Marking Policy
An example of our marking policy is as follows:
\[
p(d^*) = 
\begin{cases} 
p_0 + (1 - p_0)(1 - e^{-k \cdot (2 - d^*)}), & 1 < d^* < 4 \\
\frac{1}{d^* - 1}, & 4 \leq d^* < D^* \\
1, & d^* \geq D^*
\end{cases}
\]
Here, \( d^* \) denotes the distance from the prior marker. For instance, in Figure 2, for node \( u_3 \), \( d^* = 2 \) regarding \( M_1 \). \( D^* \) is the upper bound of \( d^* \); when \( D^* \) is seen in the distance field, the downstream node must overwrite the marking. \( p_0 \) is the marking probability when the node is two hops (\( d^* = 2 \)) away from the prior marker (\( p(2) = p_0 \)). \( k \) is a tunable parameter. For example, with \( p_0 = 0.35 \), \( k = 0.34 \), and \( D^* = 6 \), 70% of packet markings are expected to traverse 2 to 3 hops, and the remaining 30% traverse distances uniformly distributed among 4 to 6 hops. Thus, the average traversal distance is 3.25 hops.

### Performance Evaluation
In [2], we provide a detailed security analysis of our protocol, covering three phases: packet marking and logging, traceback queries forwarding, and traceback reporting. Here, we briefly report our performance evaluation results.

We use simulations to evaluate the performance of our online traceback scheme. The hotspot size is used as a metric to indicate the effectiveness of our traceback protocol. A smaller hotspot size indicates a more accurate traceback result.

#### Impact of Response Time and Packet Rate
Figure 3(a) shows that a larger response time leads to a larger hotspot size, making it more difficult for the victim to trace the attack source. Higher attack packet rates result in smaller hotspot sizes because more packets traversing the attack path leave more virtual links for traceback. In all cases, the hotspot size ranges between 2 and 4.

#### Benefit of Using Virtual Links
To demonstrate how virtual links aid traceback, we let the victim node perform 9 traceback queries, each containing a different number of packet digests ranging from 1 to 9. The victim node then reconstructs the attack path for each query. Figure 3(b) shows that with more packet digests embedded in a traceback query, the hotspot size decreases. Specifically, tracing a single packet results in a hotspot size of 7.7, while tracing 9 packets reduces the hotspot size to 3.5.

### Comparison to Logging Scheme
Finally, we compare our scheme to the logging scheme. This comparison is fair because both schemes can verify the authenticity of reported links. We do not directly compare our scheme with a PPM scheme due to its weaker security under insider attacks. Figure 3(c) shows that our scheme outperforms the logging scheme, especially at 2-3 hops, and the difference increases with delay. Note that more packets in a logging scheme help little because their paths break at the same point.

### Related Work
Few traceback schemes have been proposed for Mobile Ad-hoc Networks (MANETs). Thing and Lee [6] conducted simulations to investigate the feasibility of detecting attack paths using existing IP Traceback techniques. Kim and Helmy [3] proposed a DoS attacker traceback scheme, but it has prohibitive communication costs. Our scheme is on-demand and does not require maintaining topology information. Huang and Lee [1] developed a hotspot-based traceback protocol for MANETs, which records neighbor lists and TTL values. Although their protocol can result in smaller hotspots due to its broadcast nature, it incurs much higher communication overhead than ours. Future work will explore how these schemes can complement each other.

### Conclusions and Future Work
Traceback in MANETs is challenging due to node mobility and the lack of trust. Our simulation study showed that our scheme can identify the attack source in a small hotspot and outperforms the logging scheme. Future work will focus on improving the effectiveness of tracing attack sources in mobile environments, evaluating other marking probability functions, and studying the case of multiple attack sources. We also plan to design a traceback framework for MANETs that integrates the advantages of various schemes.

### Acknowledgments
We thank the reviewers for their valuable comments. This work was supported in part by NSF CAREER 0643906 (Zhu) and NSF IIS-0324835 (Hurson).

### References
[1] Y. Huang and W. Lee. Hotspot-based traceback for mobile ad hoc networks. In WiSe '05: Proceedings of the 4th ACM workshop on Wireless security, pages 43–54, New York, NY, USA, 2005. ACM Press.
[2] H. Hsu, S. Zhu, and A. Hurson. A hotspot-based protocol for attack traceback in mobile ad hoc networks. http://www.cse.psu.edu/ szhu/papers/traceback.pdf.
[3] Y. Kim and A. Helmy. SWAT: Small world-based attacker traceback in ad-hoc networks. In MobiQuitous, 2005.
[4] S. Marti, T. Giuli, K. Lai, and M. Baker. Mitigating routing misbehavior in mobile ad hoc networks. Proceedings of the 6th annual international conference on Mobile computing and networking, pages 255–265, 2000.
[5] T. Peng, C. Leckie, and K. Ramamohanarao. Adjusted probabilistic packet marking for IP traceback. In IFIP NETWORKING. Springer, 2002.
[6] V. Thing and H. Lee. IP traceback for wireless ad-hoc networks. In Proceedings of Vehicular Technology Conference (VTC2004-Fall), 2004.
[7] S. Zhu, S. Xu, S. Setia, and S. Jajodia. LHAP: a lightweight hop-by-hop authentication protocol for ad-hoc networks. International Workshop on Mobile and Wireless Network (MWN), 2003.