a legitimate marker, by doing this it becomes the source of
the new packet, subject to the detection of our traceback
protocol.
Whether marking a packet or not, an intermediate node
logs into its traceback table a hextuple containing such infor-
mation as the packet digest, the prior marker, the distance
to the prior marker, an authentication code, the forwarder
(i.e., the immediate upstream node), and the destination.
Determining the Marking Probability The marking
probability p in an ordinary PPM scheme is a ﬁxed system
parameter. From the security point of view, we prefer a
packet mark not to travel too far. Nevertheless, from the
traceability point of view, we prefer the packet marks to be
delivered closer to the destination to increase traceability
under node mobility.
To fulﬁll these two seemingly contradicting demands, we
introduce the technique of adjusted probabilistic packet mark-
ing. In [5], it is proposed to vary the marking probability
from hop to hop according to the position of the marker
in the path. As a result, the destination node can get the
information of upstream nodes with fewer packets. In our
scenario, we desire the majority of packet markings be over-
written by downstream nodes within two or three hops with
a high probability so that when a spoofed mark is found
in an intermediate node ui, a hotspot resides within three
hops around ui with a high probability. Moreover, as we will
see later, the resulted virtual links also facilitate our online
traceback to bypass broken links. On the other hand, we
still allow the long-distance traversal of packet markings at
a low probability so that we may beneﬁt more from marking
when many attack packets appear.
8><>:p0 + (1 − p0)(1 − ek·(2−d∗)), 1 < d∗ < 4
Speciﬁcally, an example of our marking policy is as follows:
1
−d∗+1 ,
4 ≤ d∗ < D∗
d∗ ≥ D∗
(2)
p(d∗) =
D∗
1,
Again, here d∗ denotes the distance from the prior marker.
In Figure 2, for u3, d∗ = 2 regarding M1. D∗ refers to the
upper bound of d∗; when seeing D∗ in the distance ﬁeld,
the downstream node is required to overwrite the marking.
p0 is the marking probability when the node is two hops
(d∗ = 2) away from the prior marker (p(2) = p0). k is a
tunable parameter. For example, when we choose a mark-
ing policy where p0 = 0.35, k = 0.34, and D∗ = 6, 70%
packet markings are expected to traverse 2 to 3 hops, and
the rest of 30% packet markings traverse the distance uni-
formly distributed among 4 to 6 hops. Hence, in this setting
the average traverse distance is 3.25 hops.
4. PERFORMANCE EVALUATION
In [2], we provide detailed security analysis on our pro-
tocol, covering three protocol phases (i.e.,packet marking
and logging, traceback queries forwarding, and traceback
report). Here we only brieﬂy report our performance evalu-
ation results.
We use simulations to evaluate the performance of our
online traceback scheme. We use the hotspot size as the
metric to indicate the eﬀectiveness of our traceback protocol;
for example, if we can trace to the immediate neighbor of
the attack source, then the hotspot size is two. The smaller
the hotspot size, the more accurate the traceback result.
The Impact of Response Time and Packet Rate Fig-
ure 3(a) shows that a larger response time leads to a larger
hotspot size, which indicates it is more diﬃcult for the victim
to trace to the attack source. In addition, we observe that
the higher attack packet rate results in a smaller hotspot size
because more packets traversing through the attack path
leaves more virtual links for traceback. In all the cases, the
hotspot size is between 2 ∼ 4.
The Beneﬁt of Using Virtual Links To see how vir-
tual links help traceback, we also let the victim node try 9
traceback queries with the number of packet digests in each
of them ranging from 1 to 9. Then the victim node recon-
structs the attack path separately for each of the queries.
Figure 3(b) shows that with more packet digests embed-
ded in a traceback query (or with more single-packet trace-
back attempts), the hotspot size decreases. Speciﬁcally, if
only tracing a single packet, the hotspot size is 7.7, whereas
after tracing 9 packets, the hotspot size is reduced to 3.5.
335Packet Rate = 1 pkt/sec
Packet Rate = 5 pkt/sec
10
9
8
7
6
5
4
3
2
1
)
s
e
d
o
n
(
e
z
S
i
t
o
p
s
t
o
H
0
0
5
10
20
Response Time (sec)
15
25
30
)
s
e
d
o
n
(
e
z
S
i
t
o
p
s
t
o
H
10
9
8
7
6
5
4
3
2
1
0
Response Time = 10 sec
1
2
3
4
5
The number of packet digests in a query (pkt#)
6
7
8
9
)
s
e
d
o
n
(
e
z
S
i
t
o
p
s
t
o
H
9
8
7
6
5
4
3
2
5
Logging−based Traceback
Our Scheme
10
15
Response Time (sec)
20
(a) Hotspot size vs. IDS response time
(b) The beneﬁt of virtual links
(c) Comparison with logging-based trace-
back
Figure 3: Hotspot size as a function of diﬀerent system parameters
This achievement is attributed to the interweaving virtual
links, because more information toward the attack source
can be gathered by the victim with more virtual links.
Comparison to the logging scheme Finally we compare
our scheme to the logging scheme. It is fair for such com-
parison because in both schemes the authenticity of the re-
ported links can be veriﬁed. We do not directly compare our
scheme with a PPM scheme because of the weaker security
(links cannot be veriﬁed) of PPM under insider attacks.
Figure 3(c) shows a comparison with the logging scheme.
Here we can see on average our scheme outperforms a logging
scheme at 2-3 hops and the larger the delay, the bigger the
diﬀerence. Note that more packets in a logging scheme help
little because their paths break at the same point.
5. RELATED WORK
At present, only a few traceback schemes have been pro-
posed for MANETs. Thing and Lee [6] conducted simu-
lations to investigate the feasibility of detecting the attack
path based on existing IP Traceback techniques. Kim and
Helmy [3] proposed a DoS attacker traceback scheme. The
major drawback of this scheme is the prohibitive communi-
cation cost. Our scheme is on-demand and there is no need
to maintain topology information. Huang and Lee [1] devel-
oped a hotspot-based traceback protocol for MANETs. In
their protocol, every intermediate node records the neigh-
bor list and the time-to-live (TTL) value of each forward-
ing packet. In the traceback request phase, an investigator
broadcasts a query to collect the reports from all of the
nodes that have previously forwarded the packet. Based
on the network topology reconstructed, a hotspot detection
algorithm is run to identify single or multiple approximate
locations (hotspots). Although their protocol could result in
smaller hotspots than our protocol because of its broadcast
nature, it incurs much higher communication overhead than
ours because of its network-wide ﬂooding. We will study
how these two schemes may compensate each other in our
future work.
6. CONCLUSIONS AND FUTURE WORK
Traceback in MANETs is a challenging research issue be-
cause of node mobility and the lack of trust among mobile
nodes. In this work we presented a new attack source trace-
back scheme. Our simulation study showed that our scheme
could catch the attack source in a small hotspot and it out-
performs the logging scheme in general. Our future work
will continue to improve the eﬀectiveness of tracing attack
sources in mobile environments. We will choose and evalu-
ate other marking probability functions, and study the case
of multiple attack sources. We also consider designing a
traceback framework for MANETs that will work in a large
spectrum of network settings by, for example, integrating
the advantages of various schemes.
7. ACKNOWLEDGMENTS
We thank the reviewers for the valuable comments. This
work of Zhu was supported in part by NSF CAREER 0643906
and the work of Hurson was supported in part by NSF under
contract IIS-0324835.
8. REFERENCES
[1] Y. an Huang and W. Lee. Hotspot-based traceback for
mobile ad hoc networks. In WiSe ’05: Proceedings of
the 4th ACM workshop on Wireless security, pages
43–54, New York, NY, USA, 2005. ACM Press.
[2] H. Hsu, S. Zhu, and A. Hurson. A hotspot-based
protocol for attack traceback in mobile ad hoc
networks.
http://www.cse.psu.edu/ szhu/papers/traceback.pdf.
[3] Y. Kim and A. Helmy. SWAT: Small world-based
attacker traceback in ad-hoc networks. In MobiQuitous,
2005.
[4] S. Marti, T. Giuli, K. Lai, and M. Baker. Mitigating
routing misbehavior in mobile ad hoc networks.
Proceedings of the 6th annual international conference
on Mobile computing and networking, pages 255–265,
2000.
[5] T. Peng, C. Leckie, and K. Ramamohanarao. Adjusted
probabilistic packet marking for IP traceback. In IFIP
NETWORKING. Springer, 2002.
[6] V. Thing and H. Lee. Ip traceback for wireless ad-hoc
networks. In Proceedings of Vehicular Technology
Conference (VTC2004-Fall), 2004.
[7] S. Zhu, S. Xu, S. Setia, and S. Jajodia. LHAP: a
lightweight hop-by-hop authentication protocol for
ad-hoc networks. International Workshop on Mobile
and Wireless Network (MWN), 2003.
336