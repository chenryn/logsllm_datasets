### Foreword by Charlie Miller

Python is the dominant language in the world of information security, even if discussions about the preferred language can sometimes resemble a religious war. Python-based tools include a wide range of fuzzers, proxies, and even the occasional exploit. Exploit frameworks like CANVAS are written in Python, as are more specialized tools like PyEmu or Sulley.

Almost every fuzzer or exploit I have written has been in Python. In fact, the automotive hacking research that Chris Valasek and I recently conducted included a library to inject CAN messages onto an automotive network using Python!

If you are interested in tinkering with information security tasks, Python is an excellent language to learn due to the extensive number of reverse engineering and exploitation libraries available. Now, if only the Metasploit developers would switch from Ruby to Python, our community would be united.

In this new book, Justin covers a broad range of topics that an aspiring hacker would need to get started. He includes walkthroughs on how to read and write network packets, sniff the network, and perform web application auditing and attacking. He also delves into writing code to attack Windows systems. Overall, "Black Hat Python" is a fun read, and while it might not turn you into a super stunt hacker like myself, it can certainly get you started down the path. Remember, the difference between script kiddies and professionals is the difference between merely using other people’s tools and writing your own.

—Charlie Miller, St. Louis, Missouri, September 2014

### Preface

I am a Python hacker. At Immunity, I am fortunate to work with people who truly know how to code Python. While I may not be one of those people, I spend a significant amount of my time penetration testing, which requires rapid Python tool development focused on execution and delivering results, rather than prettiness, optimization, or even stability. Throughout this book, you will see that this is how I code, and I believe this approach is part of what makes me a strong pentester. I hope this philosophy and style will help you as well.

As you progress through the book, you will notice that I do not delve deeply into any single topic. This is by design. I aim to provide you with the foundational knowledge and a little flavor, along with ideas and homework assignments to kickstart your own explorations. I encourage you to explore these ideas and share your implementations, tooling, or homework assignments with me.

Readers at different skill levels with Python or information security will experience this book differently. Some may use it as a reference, grabbing chapters relevant to their current projects, while others may read it cover to cover. For novice to intermediate Python programmers, I recommend starting at the beginning and reading straight through. You will pick up some good building blocks along the way.

The book begins with networking fundamentals in Chapter 2, then moves to raw sockets in Chapter 3 and using Scapy for more advanced network tooling in Chapter 4. The next section focuses on web application hacking, starting with custom tooling in Chapter 5 and extending the popular Burp Suite in Chapter 6. We then spend a significant amount of time discussing trojans, from GitHub command and control in Chapter 7 to Windows privilege escalation tricks in Chapter 10. The final chapter covers using Volatility for automating offensive memory forensics techniques.

I try to keep the code samples short and to the point, and the same goes for the explanations. If you are new to Python, I encourage you to type out every line to build your coding muscle memory. All of the code examples in this book are available on the companion website, and I strongly recommend that you follow along and experiment with them.

### About the Author

Justin Seitz is a senior security researcher for Immunity, Inc., where he spends his time bug hunting, reverse engineering, writing exploits, and coding Python. He is the author of "Gray Hat Python," the first book to cover Python for security analysis.

### About the Technical Reviewers

**Dan Frisch** has over ten years of experience in information security. Currently, he is a senior security analyst in a Canadian law enforcement agency. Prior to that role, he worked as a consultant providing security assessments to financial and technology firms in North America. His passion for technology and his 3rd degree black belt in martial arts reflect his dedication to both fields.

**Cliff Janzen** discovered his career passion when he moved to information security in 2008 after a decade in IT operations. For the past few years, Cliff has been happily employed as a security consultant, performing everything from policy reviews to penetration tests. He feels lucky to have a career that is also his favorite hobby.

### Brief Contents

- **Foreword by Charlie Miller**
- **Preface**
- **Acknowledgments**
- **Chapter 1: Setting Up Your Python Environment**
- **Chapter 2: The Network: Basics**
- **Chapter 3: The Network: Raw Sockets and Sniffing**
- **Chapter 4: Owning the Network with Scapy**
- **Chapter 5: Web Hackery**
- **Chapter 6: Extending Burp Proxy**
- **Chapter 7: GitHub Command and Control**
- **Chapter 8: Common Trojaning Tasks on Windows**
- **Chapter 9: Fun with Internet Explorer**
- **Chapter 10: Windows Privilege Escalation**
- **Chapter 11: Automating Offensive Forensics**
- **Index**

### Contents in Detail

#### Foreword by Charlie Miller
- **Introduction to Python in Information Security**
- **Importance of Writing Your Own Tools**

#### Preface
- **Author's Background and Approach**
- **Structure and Recommendations for Reading**

#### Acknowledgments
- **Gratitude and Recognition**

#### Chapter 1: Setting Up Your Python Environment
- **Installing Kali Linux**
- **WingIDE**

#### Chapter 2: The Network: Basics
- **Python Networking in a Paragraph**
- **TCP Client, UDP Client, TCP Server**
- **Replacing Netcat, Building a TCP Proxy, SSH with Paramiko, SSH Tunneling**

#### Chapter 3: The Network: Raw Sockets and Sniffing
- **Building a UDP Host Discovery Tool**
- **Packet Sniffing on Windows and Linux**
- **Decoding the IP Layer, Decoding ICMP**

#### Chapter 4: Owning the Network with Scapy
- **Stealing Email Credentials**
- **ARP Cache Poisoning with Scapy**
- **PCAP Processing**

#### Chapter 5: Web Hackery
- **The Socket Library of the Web: urllib2**
- **Mapping Open Source Web App Installations**
- **Brute-Forcing Directories and File Locations, Brute-Forcing HTML Form Authentication**

#### Chapter 6: Extending Burp Proxy
- **Setting Up, Burp Fuzzing, Bing for Burp, Turning Website Content into Password Gold**

#### Chapter 7: GitHub Command and Control
- **Setting Up a GitHub Account, Creating Modules, Trojan Configuration, Building a GitHub-Aware Trojan, Hacking Python’s import Functionality**

#### Chapter 8: Common Trojaning Tasks on Windows
- **Keylogging, Taking Screenshots, Pythonic Shellcode Execution, Sandbox Detection**

#### Chapter 9: Fun with Internet Explorer
- **Man-in-the-Browser (Kind Of), IE COM Automation for Exfiltration**

#### Chapter 10: Windows Privilege Escalation
- **Installing the Prerequisites, Creating a Process Monitor, Windows Token Privileges, Winning the Race, Code Injection**

#### Chapter 11: Automating Offensive Forensics
- **Installation, Profiles, Grabbing Password Hashes, Direct Code Injection**

#### Index
- **Comprehensive Reference Guide**

### Index

- **Detailed Index for Quick Reference**

---

This revised version aims to make the text more coherent, professional, and easy to follow. It also ensures that the content is well-organized and accessible to readers at various skill levels.