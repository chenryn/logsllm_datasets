“The difference between script kiddies and Black Hat python Black
professionals is the difference between merely
Hat
using other people’s tools and writing your own.”
python
— Charlie Miller, from the foreword
Python Programming for
Hackers and Pentesters
When it comes to creating powerful and effec- Extend the popular Burp Suite web-
tive hacking tools, Python is the language of hacking tool
choice for most security analysts. But just how
Abuse Windows COM automation to
does the magic happen?
perform a man-in-the-browser attack
In Black Hat Python, the latest from Justin Seitz Python
Exfiltrate data from a network most
(author of the best-selling Gray Hat Python),
sneakily
you’ll explore the darker side of Python’s
capabilities—writing network sniffers, manip-
Insider techniques and creative challenges Programming
ulating packets, infecting virtual machines,
throughout show you how to extend the hacks
creating stealthy trojans, and more. You’ll
and how to write your own exploits.
learn how to:
When it comes to offensive security, your
Create a trojan command-and-control using
ability to create powerful tools on the fly is
GitHub
indispensable. Learn how in Black Hat Python.
for
Detect sandboxing and automate com-
About the Author
mon malware tasks, like keylogging and Hackers
screenshotting
Justin Seitz is a senior security researcher
Escalate Windows privileges with creative
for Immunity, Inc., where he spends his time
process control
bug hunting, reverse engineering, writing and
exploits, and coding Python. He is the author
Use offensive memory forensics tricks
of Gray Hat Python (No Starch Press), the first to retrieve password hashes and inject Pentesters
book to cover Python for security analysis.
shellcode into a virtual machine
THE FINEST IN GEEK ENTERTAINMENT™
www.nostarch.com
Seitz
$34.95 ($36.95 CDN) Shelve In: ComputerS/SeCurIty
Justin Seitz
ISBN: 978-1-59327-590-7
53495
Foreword by Charlie Miller
9 781593 275907 6 89145 75900 6
Black Hat PytHon
B l a c k H a t
P y tHo n
Python Pro gramming for
Ha ckers an d Pente sters
by Justin Seitz
San Francisco
Black Hat PytHon. Copyright © 2015 by Justin Seitz.
All rights reserved. No part of this work may be reproduced or transmitted in any form or by any means,
electronic or mechanical, including photocopying, recording, or by any information storage or retrieval
system, without the prior written permission of the copyright owner and the publisher.
Printed in USA
First printing
18 17 16 15 14 1 2 3 4 5 6 7 8 9
ISBN-10: 1-59327-590-0
ISBN-13: 978-1-59327-590-7
Publisher: William Pollock
Production Editor: Serena Yang
Cover Illustration: Garry Booth
Interior Design: Octopod Studios
Developmental Editor: Tyler Ortman
Technical Reviewers: Dan Frisch and Cliff Janzen
Copyeditor: Gillian McGarvey
Compositor: Lynn L’Heureux
Proofreader: James Fraleigh
Indexer: BIM Indexing and Proofreading Services
For information on distribution, translations, or bulk sales, please contact No Starch Press, Inc. directly:
No Starch Press, Inc.
245 8th Street, San Francisco, CA 94103
phone: 415.863.9900; PI:EMAIL
www.nostarch.com
Library of Congress Control Number: 2014953241
No Starch Press and the No Starch Press logo are registered trademarks of No Starch Press, Inc. Other
product and company names mentioned herein may be the trademarks of their respective owners. Rather
than use a trademark symbol with every occurrence of a trademarked name, we are using the names only
in an editorial fashion and to the benefit of the trademark owner, with no intention of infringement of the
trademark.
The information in this book is distributed on an “As Is” basis, without warranty. While every precaution
has been taken in the preparation of this work, neither the author nor No Starch Press, Inc. shall have any
liability to any person or entity with respect to any loss or damage caused or alleged to be caused directly or
indirectly by the information contained in it.
To Pat
Although we never met, I am forever grateful for every
member of your wonderful family you gave me.
Canadian Cancer Society
www.cancer.ca
about the author
Justin Seitz is a senior security researcher for Immunity, Inc., where he
spends his time bug hunting, reverse engineering, writing exploits, and
coding Python. He is the author of Gray Hat Python, the first book to cover
Python for security analysis.
about the technical Reviewers
Dan Frisch has over ten years of experience in information security.
Currently, he is a senior security analyst in a Canadian law enforcement
agency. Prior to that role, he worked as a consultant providing security
assessments to financial and technology firms in North America. Because
he is obsessed with technology and holds a 3rd degree black belt, you can
assume (correctly) that his entire life is based around The Matrix.
Since the early days of Commodore PET and VIC-20, technology has been
a constant companion (and sometimes an obsession!) to Cliff Janzen. Cliff
discovered his career passion when he moved to information security in
2008 after a decade of IT operations. For the past few years Cliff has been
happily employed as a security consultant, doing everything from policy
review to penetration tests, and he feels lucky to have a career that is also
his favorite hobby.
Brief c ontents
Foreword by Charlie Miller . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xv
Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xvii
Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xix
Chapter 1: Setting Up Your Python Environment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .1
Chapter 2: The Network: Basics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
Chapter 3: The Network: Raw Sockets and Sniffing  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
Chapter 4: Owning the Network with Scapy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .47
Chapter 5: Web Hackery . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .61
Chapter 6: Extending Burp Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .75
Chapter 7: GitHub Command and Control  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
Chapter 8: Common Trojaning Tasks on Windows . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111
Chapter 9: Fun with Internet Explorer  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
Chapter 10: Windows Privilege Escalation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .137
Chapter 11: Automating Offensive Forensics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .151
Index  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163
contents in De tail
FoRewoRd by charlie Miller xv
PReFace xvii
acknowledgMents xix
1
setting UP yoUR PytHon enviRonMent 1
Installing Kali Linux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
WingIDE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
2
tHe netwoRk: Basics 9
Python Networking in a Paragraph  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
TCP Client . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
UDP Client  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
TCP Server  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
Replacing Netcat . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
Building a TCP Proxy  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
SSH with Paramiko . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
SSH Tunneling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
3
tHe netwoRk: Raw sockets and sniFFing 35
Building a UDP Host Discovery Tool . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
Packet Sniffing on Windows and Linux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
Decoding the IP Layer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41
Decoding ICMP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
4
owning tHe netwoRk witH scaPy 47
Stealing Email Credentials . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
ARP Cache Poisoning with Scapy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
PCAP Processing  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59
5
weB HackeRy 61
The Socket Library of the Web: urllib2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
Mapping Open Source Web App Installations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
Brute-Forcing Directories and File Locations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
Brute-Forcing HTML Form Authentication . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
6
extending BURP PRoxy 75
Setting Up . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
Burp Fuzzing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
Bing for Burp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
Turning Website Content into Password Gold  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
7
gitHUB coMMand and contRol 101
Setting Up a GitHub Account . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
Creating Modules  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Trojan Configuration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
Building a GitHub-Aware Trojan  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
Hacking Python’s import Functionality  . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
8
coMMon tRojaning tasks on windows 111
Keylogging for Fun and Keystrokes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114
Taking Screenshots . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115
Pythonic Shellcode Execution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
Sandbox Detection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
xii Contents in Detail
9
FUn witH inteRnet exPloReR 123
Man-in-the-Browser (Kind Of) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 124
Creating the Server . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128
IE COM Automation for Exfiltration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134
10
windows PRivilege escalation 137
Installing the Prerequisites  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 138
Creating a Process Monitor . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
Process Monitoring with WMI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
Windows Token Privileges  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
Winning the Race  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146
Code Injection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
11
aUtoMating oFFensive FoRensics 151
Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
Profiles  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 152
Grabbing Password Hashes  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
Direct Code Injection  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
Kicking the Tires . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161
index 163
Contents in Detail xiii
fore worD
Python is still the dominant language in the world of
information security, even if the conversation about
your language of choice sometimes looks more like a
religious war. Python-based tools include all manner
of fuzzers, proxies, and even the occasional exploit.
Exploit frameworks like CANVAS are written in Python
as are more obscure tools like PyEmu or Sulley.
Just about every fuzzer or exploit I have written has been in Python.
In fact, the automotive hacking research that Chris Valasek and I recently
performed contained a library to inject CAN messages onto your automo-
tive network using Python!
If you are interested in tinkering with information security tasks,
Python is a great language to learn because of the large number of reverse
engineering and exploitation libraries available for your use. Now if only
the Metasploit developers would come to their senses and switch from
Ruby to Python, our community would be united.
In this new book, Justin covers a large range of topics that an enter-
prising young hacker would need to get off the ground. He includes walk-
throughs of how to read and write network packets, how to sniff the network,
as well as anything you might need for web application auditing and attack-
ing. He then spends significant time diving into how to write code to address
specifics with attacking Windows systems. In general, Black Hat Python is a fun
read, and while it might not turn you into a super stunt hacker like myself,
it can certainly get you started down the path. Remember, the difference
between script kiddies and professionals is the difference between merely
using other people’s tools and writing your own.
Charlie Miller
St. Louis, Missouri
September 2014
xvi Foreword
Preface
Python hacker. Those are two words you really could
use to describe me. At Immunity, I am lucky enough
to work with people who actually, really, know how to
code Python. I am not one of those people. I spend a
great deal of my time penetration testing, and that
requires rapid Python tool development, with a focus on execution and
delivering results (not necessarily on prettiness, optimization, or even
stability). Throughout this book you will learn that this is how I code, but
I also feel as though it is part of what makes me a strong pentester. I hope
that this philosophy and style helps you as well.
As you progress through the book, you will also realize that I don’t take
deep dives on any single topic. This is by design. I want to give you the bare
minimum, with a little flavor, so that you have some foundational knowl-
edge. With that in mind, I’ve sprinkled ideas and homework assignments
throughout the book to kickstart you in your own direction. I encourage
you to explore these ideas, and I would love to hear back any of your own
implementations, tooling, or homework assignments that you have done.
As with any technical book, readers at different skill levels with Python
(or information security in general) will experience this book differently.
Some of you may simply grab it and nab chapters that are pertinent to a
consulting gig you are on, while others may read it cover to cover. I would
recommend that if you are a novice to intermediate Python programmer
that you start at the beginning of the book and read it straight through in
order. You will pick up some good building blocks along the way.
To start, I lay down some networking fundamentals in Chapter 2 and
slowly work our way through raw sockets in Chapter 3 and using Scapy in
Chapter 4 for some more interesting network tooling. The next section
of the book deals with hacking web applications, starting with your own
custom tooling in Chapter 5 and then extending the popular Burp Suite
in Chapter 6. From there we will spend a great deal of time talking about
trojans, starting with GitHub command and control in Chapter 7, all the
way through Chapter 10 where we will cover some Windows privilege escala-
tion tricks. The final chapter is about using Volatility for automating some
offensive memory forensics techniques.
I try to keep the code samples short and to the point, and the same
goes for the explanations. If you are relatively new to Python I encourage
you to punch out every line to get that coding muscle memory going. All of