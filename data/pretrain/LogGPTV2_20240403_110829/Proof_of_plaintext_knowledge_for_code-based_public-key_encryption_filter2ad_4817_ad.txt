### Not Accounting for Incomplete Ciphertexts

The security of the scheme does not consider information leakage when decrypting incomplete ciphertexts, i.e., ciphertexts that only encrypt some, but not all, slots \( i \in [n] \). Additionally, the scheme is secure only if there is a single challenge ciphertext per pair \((i, \ell)\), where \( i \in [n] \) is an input slot and \( \ell \) is a label.

### Generalization and Security Enhancements

In Chapter 6, we generalize the construction from [CDG+18a] to encrypt vectors instead of scalars. We address the limitation in the security model that requires complete ciphertexts by introducing a generic layer, called Secret Sharing Encapsulation (SSE), which ensures that no information leaks unless the ciphertext is complete. This technique relies on a linear secret sharing scheme and can be seen as a decentralized version of All-Or-Nothing Transforms [Riv97, Boy99, CDH+00]. We provide a concrete instantiation in pairing-friendly groups under the Decisional Bilinear Diffie-Hellman problem, in the random oracle model. This transformation is applicable to any MCFE, not just MCFE for inner products.

### Handling Repetitions and Decentralized Key Generation

We also introduce an independent layer of single-input functional encryption for inner products that allows repetitions, removing the restriction of a unique input per client and per label. Furthermore, we propose an efficient decentralized algorithm to generate a sum of private inputs, converting an MCFE for inner products into a decentralized MCFE for inner products. This technique, inspired by [KDK11], is compatible with the above conversions and results in a completely decentralized scheme, where users do not need a trusted third party even for parameter setup. These techniques, used to strengthen the security of MCFE and decentralize key generation and setup, are detailed in [CDG+18b].

### Use Case: Financial Firm Data Aggregation

Consider a financial firm that wants to compute aggregates of several companies' private data (profits, number of sales) to understand sector dynamics. The companies may be willing to help but do not trust the firm or each other with their individual data. After setting up a DMCFE, each company encrypts its private data with a time-stamp label under its private key. Together, they can give the financial firm a decryption aggregation key that reveals a sum of the companies' private data weighted by public information (employee count, market value) for a given time-stamp. New keys can retroactively decrypt aggregates on old data.

### Private Stream Aggregation (PSA)

PSA, also known as Privacy-Preserving Aggregation of Time-Series Data, was introduced by Shi et al. [SCR+11]. While similar to our DMCFE scheme, PSA does not support adaptively generating different keys for different inner-product evaluations; it only allows the aggregator to compute the sum of clients' data for each time period. PSA typically includes a Differential Privacy component, which has yet to be studied in the context of DMCFE. Further research on PSA has focused on achieving new properties or better efficiency [CSS12, Emu17, JL13, LC13, LC12, BJL16] but not on enabling new functionalities.

### Contribution: Functional Encryption for Quadratic Functions

In [BCFG17], we built the first functional encryption scheme based on standard assumptions that supports functionalities beyond inner products or predicates. Our scheme allows computing bilinear maps over integers, with messages expressed as pairs of vectors \((x, y) \in \mathbb{Z}^n \times \mathbb Z^m\), secret keys associated with \( n \cdot m \) coefficients \(\alpha_{i,j}\), and decryption allowing the computation of \(\sum_{i,j} \alpha_{i,j} x_i y_j\). Bilinear maps represent a general class of quadratic functions, including multivariate quadratic polynomials, which have practical applications such as statistical functions, Euclidean distance, and linear or quadratic classifiers.

In [DGP18], we implemented a functional encryption scheme for bilinear maps to perform machine learning on encrypted data. A quadratic classifier is learned on plain data, and a functional decryption key is generated for the classifier. Using functional encryption, users can encrypt data, and the owner of the functional decryption key can classify the encrypted data without decrypting it, revealing only the classification result. The quadratic classifier achieved 97.54% accuracy on the MNIST dataset, with encryption and decryption taking only a few seconds.

In [BCFG17], we presented a fully-secure construction proven in the Generic Group Model (GGM), justified in practice by well-chosen elliptic curves. The security of the construction in [DGP18] also relies on the GGM. In Chapter 7, we present a selectively-secure construction under standard assumptions, contrasting with the GGM. [AS17, Lin17] concurrently exhibited functional encryption schemes for degree-2 polynomials in the simpler private-key setting, where encryption requires a secret key.

### Other Contributions

- **[GMW15]**: Constructed a lattice-based predicate encryption scheme for multi-dimensional range and subset queries, selectively-secure and weakly attribute-hiding, based on the Learning With Errors (LWE) assumption.
- **[CGW15]**: Presented a modular framework for designing efficient adaptively secure attribute-based encryption (ABE) schemes under the k-Lin assumption in prime-order groups.
- **[GKW15]**: Initiated a systematic treatment of the communication complexity of conditional disclosure of secrets (CDS), presenting general upper and lower bounds.
- **[FGKO17]**: Built new Access Control Encryption (ACE) schemes with polylogarithmic complexity from standard cryptographic assumptions.
- **[AGRW17]**: Presented a multi-input functional encryption scheme (MIFE) for inner products based on the k-Lin assumption, achieving adaptive security against unbounded collusion.
- **[BCFG17]**: Presented two practically efficient functional encryption schemes for quadratic functionalities, proving one selectively-secure under standard assumptions and the other (adaptively) secure in the GGM.
- **[ABGW17]**: Proposed fully automated methods for proving security of ABE in the Generic Bilinear Group Model.
- **[FG18]**: Focused on structure-preserving signatures on equivalence classes (EQS), constructing EQS from standard assumptions.
- **[GHKP18]**: Provided a structure-preserving signature (SPS) scheme with a tight security reduction to a standard assumption, offering smaller signatures and public keys.
- **[ACF+18]**: Presented new constructions of multi-input functional encryption (MIFE) schemes for inner products, improving on previous work.
- **[GKW18]**: Presented a new public-key broadcast encryption scheme with adaptive security and constant-size ciphertexts and secret keys.
- **[CDG+18a]**: Introduced Decentralized Multi-Client Functional Encryption (DMCFE) for inner products, allowing non-interactive ciphertext generation and functional decryption key generation, with adaptive security in the random oracle model.

### Roadmap

- **Chapter 2**: Background on public-key encryption and functional encryption, including security definitions and concrete assumptions.
- **Chapter 3**: Tightly CCA-secure encryption without pairings.
- **Chapter 4**: Multi-input functional encryption for inner products from pairings.
- **Chapter 5**: Multi-input functional encryption for inner products without pairings.
- **Chapter 6**: Multi-client functional encryption for inner products.
- **Chapter 7**: Functional encryption for quadratic functions.
- **Chapter 8**: Conclusion.