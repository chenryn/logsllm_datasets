title:Minimizing private data disclosures in the smart grid
author:Weining Yang and
Ninghui Li and
Yuan Qi and
Wahbeh H. Qardaji and
Stephen E. McLaughlin and
Patrick D. McDaniel
Minimizing Private Data Disclosures in the Smart Grid
Weining Yang
Purdue University
Ninghui Li
Purdue University
Yuan Qi
Purdue University
PI:EMAIL
PI:EMAIL
PI:EMAIL
Wahbeh Qardaji
Purdue University
Stephen McLaughlin
Penn State University
Patrick McDaniel
Penn State University
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
Smart electric meters pose a substantial threat to the privacy of in-
dividuals in their own homes. Combined with non-intrusive load
monitors, smart meter data can reveal precise home appliance usage
information. An emerging solution to behavior leakage in smart
meter measurement data is the use of battery-based load hiding. In
this approach, a battery is used to store and supply power to home
devices at strategic times to hide appliance loads from smart meters.
A few such battery control algorithms have already been studied in
the literature, but none have been evaluated from an adversarial
point of view. In this paper, we ﬁrst consider two well known bat-
tery privacy algorithms, Best Effort (BE) and Non-Intrusive Load
Leveling (NILL), and demonstrate attacks that recover precise load
change information, which can be used to recover appliance be-
havior information, under both algorithms. We then introduce a
stepping approach to battery privacy algorithms that fundamentally
differs from previous approaches by maximizing the error between
the load demanded by a home and the external load seen by a smart
meter. By design, precise load change recovery attacks are impos-
sible. We also propose mutual-information based measurements
to evaluate the privacy of different algorithms. We implement and
evaluate four novel algorithms using the stepping approach, and
show that under the mutual-information metrics they outperform
BE and NILL.
Categories and Subject Descriptors
K.4.1 [COMPUTERS AND SOCIETY]: Privacy
General Terms
Security
Keywords
smart meter, privacy, load monitor
1.
INTRODUCTION
The rapid replacement of traditional residential electric meters
by networked smart meters has brought tangible concerns about
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$10.00.
electricity customer privacy [36]. Smart meters use solid state mea-
surement circuits that can record minute- or second-level proﬁles
of energy usage.
In tandem with Non-Intrusive Load Monitor-
ing (NILM), these ﬁne-grained load proﬁles can be analyzed to
reveal individual appliance usage [17], and ultimately reveal be-
haviors such as sleep patterns, number of occupants, and times of
vacancy [28, 31]. Access to such sensitive information is not lim-
ited to utility providers. Multiple studies have shown smart meters
to be vulnerable to attacks that could leak ﬁne grained usage data
to malicious third parties [13, 30], and load proﬁles may also be
shared with third party data centers to give customers web access
to their energy usage. Such concerns have caused public outcry,
and let to smart meters being banned in multiple cities in North
America and Europe [43].
One promising solution to privacy loss that does not require util-
ity cooperation is that of Battery-based Load Hiding (BLH). BLH
employs a battery to partially supply the net demand load from
the house to alter the external load as seen by the smart meter.
The battery is charged and discharged at strategic times to hide the
load proﬁle events caused by appliances being turned on and off.
This removes the basic information needed by NILM algorithms to
identify appliances, thus thwarting further analysis. The design of
a battery control algorithm is a crucial part of a BLH system. BLH
algorithms have to cope with limited battery capacity and discharge
rates and hard to predict consumption patterns. The basic strategy
taken by these algorithms is to ﬂatten the load proﬁle to a constant
value as often as possible.
In this paper, we perform a new analysis of two well known BLH
algorithms, Best Effort (BE) [20] and Non-Intrusive Load Leveling
(NILL) [29], and show that they are vulnerable to previously un-
known attacks that leak appliance events. These attacks are based
on the way these algorithms handle load peaks, events of high de-
mand loads that are beyond the battery’s discharge rate. Such peaks
can partially leak through into the external load, and sometimes
can be fully recovered by analysis. Given insights from the failure
of these algorithms to handle load peaks, we propose a different
approach based on quantizing the demand load into a step func-
tion, where the step size is determined by the battery’s maximum
charge rate and maximum discharge rate. While previous quantiza-
tion algorithms developed in the signal processing literature aimed
to minimize the quantization error, our stepping algorithms aim to
maximize it within battery limitations. This allows the stepping
algorithms to better handle load peaks and to reveal less overall
information as deﬁned by mutual information metrics.
In doing this, we make the following contributions:
• We reveal new vulnerabilities in two existing BLH algo-
rithms that allow for the recovery of substantial appliance
415usage information. To the best of our knowledge, this is the
ﬁrst work to uncover ﬂaws in BLH algorithms.
• We present a novel stepping-based framework for BLH al-
gorithms based on maximizing error between the demand
load and external load subject to battery capacity and charg-
ing/discharging rate constraints.
• We evaluate the four stepping algorithms against the NILL
and BE algorithms on real-world energy consumption, and
show that all of them generally outperforms NILL and BE,
and lazy stepping algorithms consistently outperform other
algorithms.
The insight behind the stepping approach is as follows. We ob-
serve that the measured time series data have two dimensions: time
and value, and the privacy threat caused by smart meters is due to
ﬁner-grained measurement in the time dimension. The key idea
of the stepping framework is to make the value dimension more
coarse-grained. The stepping approach is similar to the idea of
quantization in signal processing, which is the process of mapping a
large set of input values to a smaller set — such as rounding values
to some unit of precision. Because quantization is a many-to-few
mapping, it is an inherently non-linear and irreversible process.
In the stepping approach, the algorithm forces the external load
to be multiples of β, a value chosen based on the battery’s parame-
ters. This results in the external load being a step function. Given a
demand load value, a stepping algorithm decides whether to force
the external load to the level above the demand by charging the
battery or to the level below the demand by discharging it.
We consider
three different kinds of stepping algorithms.
Lazy_Stepping algorithms try to maintain the external load un-
changed as long as possible. The Lazy_Charging algorithm tries
to keep charging the battery until is full and then keep discharging
the battery until it is empty. Random_Charging algorithms ran-
domly choose whether to choose to charge or discharge the battery.
Because the stepping approach effectively maximizes the error be-
tween demand load and external load, when one observes a load-
change event in the external load, estimating the amplitude of the
change has an uncertainty range of 2β.
We have conducted extensive experiments, using two data
sources. One source is the data used in [29], which consists of
one-second measurement of data in four houses over a few months.
The other is a dataset [39] that includes electricity data measured
at one-minute resolution in 22 dwellings over two complete years
(2008 and 2009). To measure the amount of information leakage
and compare different stepping algorithms as well as comparing
with BE and NILL, we use several mutual information measures.
We note that the problem is a special case of changing a time-
series data to protect privacy. This setting is different from privacy-
preserving data publishing, where one hides the existence of one
item. Here, the whole time series data belongs to one individual
and needs privacy protection. Similar problems also occur in other
domains such as medical sensors, which can produce time series
data that have privacy implications [18, 1].
The remainder of this paper is organized as follows. Section 2
provides background on smart meters and NILM algorithms. Sec-
tion 3 deﬁnes the problem we are solving. Section 4 shows attacks
against BE and NILL that leak appliance information. Section 5 de-
tails the stepping approach and algorithms. Section 6 presents eval-
uation using mutual information metrics. Finally, Section 7 covers
related work in smart meter privacy, and Section 8 concludes. An
Appendix gives formulas for computing mutual information mea-
sures.
)
W
k
(
r
e
w
o
P
 18
 16
 14
 12
 10
 8
 6
 4
 2
 0
)
s
)
t
W
l
o
v
k
(
(
r
r
e
e
w
w
o
o
P
P
9/16 00:00
9/16 12:00
9/17 00:00
9/17 12:00
9/18 00:00
9/18 12:00
9/19 00:00
9/19 12:00
time (seconds)
Figure 1: An example load proﬁle with appliance events.
2. BACKGROUND
Smart Electric Meters. Smart electric meters are networked em-
bedded systems that are currently replacing traditional electrome-
chanical residential meters throughout the world. Smart meters
promise novel features such as dynamic pricing schemes [23], re-
mote meter reading [10], improved power outage reporting [21],
and load curtailment in emergencies [14]. As a result of their
enhanced measurement and storage capabilities, smart meters
can maintain ﬁne-grained time series of electricity measurements.
These are known as load proﬁles. Unlike traditional power meter
measurements, which are at the granularity of months, load proﬁles
can be at the granularity of minutes or seconds, making it possible
to discern individual rising and falling edges in net energy con-
sumption.
An example of this is shown in Figure 1, which is adapted
from [29]. The ﬁgure depicts a four day load proﬁle of a single res-
idence. A speciﬁc set of features are highlighted in the smaller box.
These features show an entertainment system, and subsequently a
television turning on, then turning off in reverse order. Given this
type of data, individual appliance events can be extracted as de-
scribed in the following section.
Nonintrusive Load Monitoring. Nonintrusive (Appliance) Load
Monitory (NILM) is a technique for analyzing a household’s net
electric load proﬁle in order to deduce what electric appliances are
being used [16]. The time resolution of these proﬁles may be on
the order of minutes or seconds, all of which can be obtained using
commercially available smart meters. NILM is nonintrusive in the
sense that individual appliances need not be instrumented. Hence,
such appliance monitoring can be done remotely and without the
knowledge of the household residents.
While there have been numerous approaches to NILM [40, 12,
33, 6, 7, 15, 11, 34, 8, 26], the most successful in residential set-
tings are based on edge-detection [16, 25]. Edge-detection tech-
niques look for signiﬁcant changes in the steady state current be-
ing consumed by the household. Such changes are characterized
by sharp edges in the electric current consumed by the household.
These edges are then clustered and matched against known ap-
pliance proﬁles. For instance, if someone in the household turns
on a 40 Watt lamp, then the net current increases by 40 Watts.
Conversely, when the lamp is turned off, the net current drops
by the same amount. The NILM algorithm will detect the pair
of edges with equal magnitude and opposite direction, and match
them against the electric proﬁle for a 40 Watt lamp.
While NILM algorithms do have useful applications such as in-
forming electricity customers about their usage patterns and allow-
ing utilities to verify that customers honor load reduction agree-
416Battery parameters
CH
CL
βc
βd
Time series data
t = 0, 1, 2, · · ·
d(t)
d′(t) = d(t) − d(t − 1) for t ≥ 1
e(t)
e′(t) = e(t) − e(t − 1) for t ≥ 1
b(t)
C(t)
Constraints due to battery
e(t) ≥ 0 ∧ b(t) = e(t) − d(t)
Rate limit: βc ≥ b(t) ≥ −βd
Meaning
The upper safe limit on the battery’s state of charge
The lower safe limit on the battery’s state of charge
The maximal rate at which the battery can be charged.
The maximal rate at which the battery can be discharged.
This denotes time.
The aggregated net demand, which we call the demand load. This is the input into a BLH algo-
rithm.
The difference time series of demand load.
The load after mixing in the battery’s power, which we call the external load; this is the load
drawn from the power grid. This time series is determined by the algorithm.
The derivative of the external load e(t).
The battery’s rate of charge.
The battery’s state of charge.
Here we assume an idealized battery model, and require that there is no wasted energy.
The charging and discharging rate must be within the battery’s parameters.
C(0) is the battery’s initial state of charge
C(t) = Pt
i=1 b(i) + C(0)
Capacity limit: CL ≤ C(t) ≤ CH The battery’s state of charge should be within the battery’s upper and lower safe limit.
Table 1: Notations for battery parameters, time series data, and constraints.
ments [9], they also pose a clear threat to household privacy [24,
36]. In one study, it was shown that typical appliances for cook-
ing breakfast could be distinguished from the net load [31], and
another was able to accurately detect household presence and sleep
cycles [28]. Potential misuses of this data include targeted advertis-
ing [35], predatory pricing [4], and potential leakage to malicious
third parties such as organized crime. NILM algorithms have also
been tuned to detect usage of dryers [27], space heaters [15], and
energy efﬁcient appliances [33]. It was also suggested early on in
the development of NILMs that they may be used for surveillance
purposes [17]. Of course, proliferation of smart meters opens the
public to both the beneﬁts and drawbacks of NILM.
3. PROBLEM DEFINITION
In Battery-based Load Hiding (BLH), one connects a recharge-
able battery between the smartmeter and the internal wire. Power
from the battery is mixed in to provide for the electricity demand
of the house, adjusting the amount of electricity the house draws
from the electric grid. Thus one can partially disguise the actual
load to reduce the amount of information leakage from smart meter
readings.
We now describe the time series data in the model, which are
also given in Table 1. Two key time series data are the demand
load d(t), which represents the electricity demand at time t, and
the external load e(t), the load drawn from the power grid and ob-
served by the smart meter. While conceptually the time ranges over
nonnegative real numbers, measurement can be made only at ﬁxed
time intervals; thus we have t range over non-negative integers.
In this paper, we assume that e(t) ≥ 0; that is, the home energy
system cannot sends electricity to the grid. This assumption is con-
sistent with our model of using a battery. If one has a home genera-
tor and a more sophisticated home energy system, then this assump-
tion can be removed. We do not expect removing this assumption
to signiﬁcantly affect the analysis of existing algorithms and the
privacy protection effectiveness result of the algorithms proposed
in this paper. We also abstract away details about the battery and
assume an idealized battery model, i.e., charging and discharging
the battery has no energy waste.
Based on these assumptions, the difference between the two time
series e(t) and d(t) is provided by the battery. We write this as
b(t) = e(t) − d(t). When b(t) > 0, the battery is charging at the
rate b(t); and when b(t) < 0, the battery is discharging to provide
electricity at the rate of |b(t)| to meet the demand.
The times series b(t) must satisfy the rate limit constraint that
b(t) must be within the range allowed by the battery, i.e., βc ≥
b(t) ≥ −βd, where βc is the maximal charging rate, and βd is the
maximal discharging rate. The battery’s state of charge C(t), is
i=1 b(i) + C(0), where C(0) is the battery’s
initial state of charge. The battery state must satisfy the capacity
limit constraint CL ≤ C(t) ≤ CH, where CL and CH give the
lower and upper safe limits of the battery’s state of charge.
given by C(t) = Pt
A Battery-based Load Hiding (BLH) algorithm needs to com-
pute the external load e(t) based on the demand d(t) and the bat-
tery’s state such that the constraints are satisﬁed, while minimizing
the amount of information that can be inferred from e(t).
Load changes reﬂect potentially sensitive private information,
because it reﬂects user behavior. Furthermore, most NILM ap-
proaches also compute load changes as the ﬁrst step for performing
analysis. Therefore, we deﬁne the demand load change time series
as d′(t) = d(t) − d(t − 1), and the external load change time series
as e′(t) = e(t) − e(t − 1). Note that one could use the load change
time series to recover the original time series, with knowledge of
the overall average.
The primary goal of BLH algorithms is to prevent leaking of in-
formation in the demand load change series d′(t) from observing
e(t), or equivalently observing e′(t). To prevent inferencing of
d′(t) from observing e(t), one approach is to avoid changes in e(t)
as much as possible. Indeed, if e(t) is constant, then no informa-
tion beyond the average energy usage is leaked. This is possible
only with a very large battery. The key design decision for BLH
algorithms is how to handle the case when the battery’s limitation
means that e(t) can no longer be held constant.
To show that a particular algorithm leaks information, it sufﬁces
to ﬁnd one method to recover demand load change information
from the output produced by the algorithm.
To evaluate algorithms when no obvious attack exist, we must
develop metrics that are independent of particular attacks. We ob-
417serve that e(t) must be somewhat correlated with d(t) because of
the rate limit and capacity constraints. We use the mutual infor-
mation between the two time series e′ = [e′(1), . . . , e′(T )] and
d′ = [d′(1), . . . , d′(T )] where T indexes the last time point in e′
and d′.
Intuitively, mutual information between two random variables X
and Y measures the information that X and Y share: it measures
to what extent knowing one of these variables reduces uncertainty
about the other. For example, if X and Y are independent, then