## Bug Report
### Which version of ShardingSphere did you use?
4.0.1
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC
### Expected behavior
I modify the Data ID of nacos: .shardingDataSource.config.schema.logic_db.rule
content  
For example: actualDataNodes hope to change the configuration of the shard
table
### Actual behavior
nothing happened
### Reason analyze (If you can)
not watch the key .shardingDataSource.config.schema.logic_db.rule
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule
configuration, when exception occur etc.
modify the Data ID of nacos: .shardingDataSource.config.schema.logic_db.rule
content
### Example codes for reproduce this issue (such as a github link).
the spring xml
the nacos dataId:.shardingDataSource.config.schema.logic_db.rule content:
    tables:
      log_process:
        actualDataNodes: dataSource.log_process,dataSource.log_process_2020_$->{4..12}
        keyGenerator:
          column: id
          props:
            worker.id: '421'
          type: SNOWFLAKE
        logicTable: log_process
        tableStrategy:
          standard:
            preciseAlgorithmClassName: com.xxx.base.shardingjdbc.shardingAlgorithm.IDPrecise
            shardingColumn: id
I found that modifying .shardingDataSource.config.props is effectiveï¼Œbut
shardingDataSource.config.schema.logic_db.rule