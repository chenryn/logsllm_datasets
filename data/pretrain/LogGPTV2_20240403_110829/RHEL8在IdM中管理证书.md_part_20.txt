`certmonger`{.literal}
服务监控证书请求。成功签署证书请求后，会生成证书。`Certmonger`{.literal}
管理证书请求，包括生成的证书。本节论述了如何查看由
`certmonger`{.literal} 管理的特定证书请求的详情。
::: itemizedlist
**流程**
-   如果您知道如何指定证书请求，请只列出该特定证书请求的详细信息。例如，您可以指定：
    ::: itemizedlist
    -   请求 ID
    -   证书的位置
    -   证书 nickname
        例如：要查看请求 ID 为 20190408143846 的证书详情，请使用
        `-v`{.literal} 选项查看您的证书请求失败时的所有错误详情：
        ``` literallayout
        # getcert list -i 20190408143846 -v
        Number of certificates and requests being tracked: 16.
        Request ID '20190408143846':
        	status: MONITORING
        	stuck: no
        	key pair storage: type=NSSDB,location='/etc/dirsrv/slapd-IDM-EXAMPLE-COM',nickname='Server-Cert',token='NSS Certificate DB',pinfile='/etc/dirsrv/slapd-IDM-EXAMPLE-COM/pwdfile.txt'
        	certificate: type=NSSDB,location='/etc/dirsrv/slapd-IDM-EXAMPLE-COM',nickname='Server-Cert',token='NSS Certificate DB'
        	CA: IPA
        	issuer: CN=Certificate Authority,O=IDM.EXAMPLE.COM
        	subject: CN=r8server.idm.example.com,O=IDM.EXAMPLE.COM
        	expires: 2021-04-08 16:38:47 CEST
        	dns: r8server.idm.example.com
        	principal name: ldap/PI:EMAIL
        	key usage: digitalSignature,nonRepudiation,keyEncipherment,dataEncipherment
        	eku: id-kp-serverAuth,id-kp-clientAuth
        	pre-save command:
        	post-save command: /usr/libexec/ipa/certmonger/restart_dirsrv IDM-EXAMPLE-COM
        	track: yes
        	auto-renew: yes
        ```
    :::
    输出显示有关证书的几段信息，例如：
    ::: itemizedlist
    -   证书位置 ; 在上面的示例中，它是
        `/etc/dirsrv/slapd-IDM-EXAMPLE-COM`{.literal} 目录中的 NSS
        数据库
    -   证书 nickname；上例中为。 `Server-Cert`{.literal}
    -   存储 pin 的文件；上例中为。
        `/etc/dirsrv/slapd-IDM-EXAMPLE-COM/pwdfile.txt`{.literal}
    -   用于续订证书的证书颁发机构(CA) ; 在上例中，它是 `IPA`{.literal}
        CA
    -   到期日期；在上面的示例中，是
        `2021-04-08 16:38:47 CEST`{.literal}
    -   证书的状态 ; 在上例中，`MONITORING`{.literal}
        状态表示证书有效并被跟踪。
    -   后保存命令 ; 在上面的示例中，它是 `LDAP`{.literal} 服务的重启。
    :::
-   如果您不知道如何指定证书请求，列出 `certmonger`{.literal}
    正在监控或尝试获取的所有证书详情：
    ``` literallayout
    # getcert list
    ```
:::
::: itemizedlist
**附加信息**
-   要查看如何指定显示的证书请求的不同选项，请查看
    `getcert list`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#using-certmonger_working-with-idm-certificates.html#start-stop-cert-tracking_certmonger-for-issuing-renewing-service-certs}启动和停止证书跟踪 {.title}
:::
本节论述了如何使用 `getcert stop-tracking`{.literal} 和
`getcert start-tracking`{.literal} 命令来监控证书。这两个命令由
`certmonger`{.literal} 服务提供。如果您已经从不同的 IdM
客户端上导入了身份管理(IdM)证书认证机构(CA)签发的证书，启用证书跟踪特别有用。启用证书跟踪也可以是以下置备方案的最后一步：
::: orderedlist
1.  在 IdM 服务器上，您可以为尚不存在的系统创建一个证书。
2.  您可以创建新系统。
3.  将新系统注册为 IdM 客户端。
4.  您可以将证书和密钥从 上的 IdM 服务器导入到 IdM 客户端。
5.  您开始使用 `certmonger`{.literal}
    跟踪证书，以确保证书在过期时得到续订。
:::
::: itemizedlist
**流程**
-   使用 Request ID 20190408143846 禁用对证书的监控：
    ``` literallayout
    # getcert stop-tracking -i 20190408143846
    ```
    更多选项请查看 `getcert stop-tracking`{.literal} man page。
-   要启用对存储在 `/tmp/some_cert.crt`{.literal}
    文件中的证书的监控，其私钥存储在 `/tmp/some_key.key`{.literal}
    文件中：
    ``` literallayout
    # getcert start-tracking -c IPA -f /tmp/some_cert.crt -k /tmp/some_key.key
    ```
    `Certmonger`{.literal} 无法自动识别签发证书的 CA
    类型。因此，如果证书由 IdM CA 签发，请在
    `getcert start-tracking`{.literal} 命令中添加带有 `IPA`{.literal}
    值的 `-c`{.literal} 选项。省略添加 `-c`{.literal} 选项会导致
    `certmonger`{.literal} 进入 NEED_CA 状态。
    更多选项请查看 `getcert start-tracking`{.literal} man page。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这两个命令不操作证书。例如： `getcert stop-tracking`{.literal}
不会删除证书或将其从 NSS
数据库或者从文件系统中删除，而是只从受监控的证书列表中删除证书。同样，`getcert start-tracking`{.literal}
只在被监控的证书列表中添加证书。
:::
:::
::: section
::: titlepage
# []{#using-certmonger_working-with-idm-certificates.html#renew-cert_certmonger-for-issuing-renewing-service-certs}手动续订证书 {.title}
:::
当证书即将到期时，`certmonger`{.literal}
守护进程会自动使用证书颁发机构(CA)帮助程序发出续订命令，获取更新的证书，并将之前的证书替换为新证书。
您还可以使用 `getcert resubmit`{.literal}
命令提前手动续订证书。这样，您可以更新证书包含的信息，例如添加主题备用名称(SAN)。
这部分论述了如何手动续订证书。
::: itemizedlist
**流程**
-   使用 Request ID 20190408143846 续订证书：
    ``` literallayout
    # getcert resubmit -i 20190408143846
    ```
    要获取特定证书的 Request ID，请使用 `getcert list`{.literal}
    命令。详情请查看 `getcert list`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#using-certmonger_working-with-idm-certificates.html#add-tracking-back-to-idm-certs_certmonger-for-issuing-renewing-service-certs}使certmonger 恢复跟踪 CA 副本中的 IdM 证书 {.title}
:::
此流程演示了如何在跟踪证书中断后，使 `certmonger`{.literal}
恢复跟踪身份管理(IdM)系统证书，这对于使用集成证书颁发机构的 IdM
部署至关重要。中断可能是由在续订系统证书期间从 IdM
主机取消滚动，或者复制拓扑无法正常工作造成的。该流程还演示了如何使
`certmonger`{.literal} 恢复跟踪 IdM 服务证书，即
`HTTP`{.literal}、`LDAP`{.literal} 和 `PKINIT`{.literal} 证书。
::: itemizedlist
**先决条件**
-   要恢复跟踪系统证书的主机是一个 IdM 服务器，它也是 IdM
    证书颁发机构(CA)，而不是 IdM CA 续订服务器。
:::
::: orderedlist
**流程**
1.  获取子系统 CA 证书的 PIN：
    ``` literallayout
    # grep 'internal=' /var/lib/pki/pki-tomcat/conf/password.conf
    ```
2.  为子系统 CA 证书添加跟踪，将以下命令中的 `[internal PIN]`{.literal}
    替换为上一步中获取的 PIN：
    ``` literallayout
    # getcert start-tracking -d /etc/pki/pki-tomcat/alias -n "caSigningCert cert-pki-ca" -c 'dogtag-ipa-ca-renew-agent' -P [internal PIN] -B /usr/libexec/ipa/certmonger/stop_pkicad -C '/usr/libexec/ipa/certmonger/renew_ca_cert "caSigningCert cert-pki-ca"'
    # getcert start-tracking -d /etc/pki/pki-tomcat/alias -n "auditSigningCert cert-pki-ca" -c 'dogtag-ipa-ca-renew-agent' -P [internal PIN] -B /usr/libexec/ipa/certmonger/stop_pkicad -C '/usr/libexec/ipa/certmonger/renew_ca_cert "auditSigningCert cert-pki-ca"'
    # getcert start-tracking -d /etc/pki/pki-tomcat/alias -n "ocspSigningCert cert-pki-ca" -c 'dogtag-ipa-ca-renew-agent' -P [internal PIN] -B /usr/libexec/ipa/certmonger/stop_pkicad -C '/usr/libexec/ipa/certmonger/renew_ca_cert "ocspSigningCert cert-pki-ca"'
    # getcert start-tracking -d /etc/pki/pki-tomcat/alias -n "subsystemCert cert-pki-ca" -c 'dogtag-ipa-ca-renew-agent' -P [internal PIN] -B /usr/libexec/ipa/certmonger/stop_pkicad -C '/usr/libexec/ipa/certmonger/renew_ca_cert "subsystemCert cert-pki-ca"'
    # getcert start-tracking -d /etc/pki/pki-tomcat/alias -n "Server-Cert cert-pki-ca" -c 'dogtag-ipa-ca-renew-agent' -P [internal PIN] -B /usr/libexec/ipa/certmonger/stop_pkicad -C '/usr/libexec/ipa/certmonger/renew_ca_cert "Server-Cert cert-pki-ca"'
    ```
3.  添加对剩余的 IdM
    证书、`HTTP`{.literal}、`LDAP`{.literal}、`IPA renewal agent`{.literal}
    和 `PKINIT`{.literal} 证书的跟踪：
    ``` literallayout
    # getcert start-tracking -f /var/lib/ipa/certs/httpd.crt -k /var/lib/ipa/private/httpd.key -p /var/lib/ipa/passwds/idm.example.com-443-RSA -c IPA -C /usr/libexec/ipa/certmonger/restart_httpd
    # getcert start-tracking -d /etc/dirsrv/slapd-IDM-EXAMPLE-COM -n "Server-Cert" -c IPA -p /etc/dirsrv/slapd-IDM-EXAMPLE-COM/pwdfile.txt -C '/usr/libexec/ipa/certmonger/restart_dirsrv "IDM-EXAMPLE-COM"'
    # getcert start-tracking -f /var/lib/ipa/ra-agent.pem -k /var/lib/ipa/ra-agent.key -c dogtag-ipa-ca-renew-agent -B /usr/libexec/ipa/certmonger/renew_ra_cert_pre -C /usr/libexec/ipa/certmonger/renew_ra_cert
    # getcert start-tracking -f /var/kerberos/krb5kdc/kdc.crt -k /var/kerberos/krb5kdc/kdc.key -c dogtag-ipa-ca-renew-agent -B /usr/libexec/ipa/certmonger/renew_ra_cert_pre -C /usr/libexec/ipa/certmonger/renew_kdc_cert
    ```
4.  重启 `certmonger`{.literal}:
    ``` literallayout
    # systemctl restart certmonger
    ```
5.  在 `certmonger`{.literal} 启动后等待一分钟，然后检查新证书的状态：
    ``` literallayout
    # getcert list
    ```
:::
::: itemizedlist
**其它资源**
-   如果您的 IdM
    [系统证书都已过期，请按照这个知识中心支持(KCS)解决方案中的步骤来手动续订](https://access.redhat.com/solutions/3357261){.link}
    IdM CA 服务器（同时也是 CA 续订服务器和 CRL 发布程序服务器）中的 IdM
    系统证书。[然后按照这个 KCS
    解决方案中的步骤在拓扑中的所有其他](https://access.redhat.com/solutions/3357331){.link}
    CA 服务器中手动续订 IdM 系统证书。
:::
:::
:::
[]{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html}
::: chapter
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates}第 14 章 使用 RHEL 系统角色请求证书 {.title}
:::
通过证书系统角色，您可以使用 Red Hat Ansible Engine 发布和管理证书。
本章涵盖了以下主题：
::: itemizedlist
-   [证书系统角色](#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles "证书系统角色"){.link}
-   [使用证书系统角色请求新的自签名证书](#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#requesting-a-new-self-signed-certificate-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书系统角色请求新的自签名证书"){.link}
-   [使用证书系统角色从 IdM CA
    请求一个新证书](#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#requesting-a-new-certificate-from-idm-ca-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书系统角色从 IdM CA 请求一个新证书"){.link}
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles}证书系统角色 {.title}
:::
通过使用证书系统角色，您可以使用 Red Hat Ansible Engine 管理 TLS 和 SSL
证书的发布和更新。
该角色使用 `certmonger`{.literal}
作为证书提供程序，目前支持发布和续订自签名证书，并使用 IdM
集成证书颁发机构(CA)。
您可以将 Ansible playbook 中的以下变量与证书系统角色结合使用：
::: itemizedlist
-   [**certificate_wait**]{.strong} 指定任务是否应该等待签发证书。
-   代表要发布的每个证书及其参数的 [**certificate_requests**]{.strong}。
:::
::: itemizedlist
**其它资源**
-   有关 `certificate_requests`{.literal} 变量使用的参数的详情，以及
    `certificate`{.literal} 系统角色的附加信息，请参阅该
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#requesting-a-new-self-signed-certificate-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}使用证书系统角色请求新的自签名证书 {.title}
:::
使用证书系统角色，您可以使用 Red Hat Ansible Engine 发布自签名证书。
这个过程使用 `certmonger`{.literal} 提供程序并通过 `getcert`{.literal}
命令请求证书。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，在证书过期前 `certmonger`{.literal}
自动尝试更新该证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设置为`no`{.literal}来禁用此功能。
:::