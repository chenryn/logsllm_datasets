# Title: Model Checking Dependability Attributes of Wireless Group Communication

## Authors
- Mieke Massink, C.N.R.-ISTI, Via Moruzzi 1, I-56124 Pisa, Italy, PI:EMAIL
- Joost-Pieter Katoen, Department of Computer Science, University of Twente, P.O. Box 217, 7500 AE Enschede, The Netherlands, PI:EMAIL
- Diego Latella, C.N.R.-ISTI, Via Moruzzi 1, I-56124 Pisa, Italy, PI:EMAIL

## Abstract
Models used for the analysis of dependability and performance attributes of communication protocols often abstract significantly from the actual protocol details. These models typically consist of concurrent sub-models, which can make it challenging to determine whether their behavior accurately reflects the protocol. This paper demonstrates how model checking of continuous-time Markov chains (CTMCs), generated from high-level specifications, facilitates the analysis of both correctness and dependability attributes. We illustrate this by revisiting a dependability analysis of a variant of the centralized access protocol of the IEEE 802.11 standard for wireless local area networks. This variant supports real-time group communication between autonomous mobile stations. Correctness and dependability properties are formally characterized using Continuous Stochastic Logic (CSL) and verified automatically by the ETMCC model checker. The models are specified as Stochastic Activity Nets (SANs).

## 1. Introduction
Continuous-time Markov chains (CTMCs) are widely used to analyze system dependability and performance issues. These CTMCs are often generated automatically from higher-level specifications, such as Stochastic Activity Nets (SANs), for which mature tool support is available. Such tools support both the development of high-level specifications and the calculation of relevant measures, such as steady-state and transient state probabilities.

High-level specifications for the analysis of dependability and performance aspects of communication protocols often abstract significantly from the actual protocol details. In many cases, these models consist of concurrently composed sub-models, complicating the judgment of whether their behavior accurately reflects the protocol. Extending dependability and performance analysis tools with model-checking capabilities and a temporal logic allows for the verification of behavioral aspects and the convenient, concise, and unambiguous specification and automated verification of dependability and performance measures.

In this paper, we demonstrate these advantages by revisiting part of a dependability analysis of a variant of the centralized medium access protocol of the IEEE 802.11 standard for wireless local area networks. This variant was developed to provide reliable real-time group communication within teams of autonomous mobile robotic systems over wireless (radio) networks. The IEEE 802.11 standard addresses message loss by defining two alternating periods of medium access control: a centralized one suitable for time-critical messages and a distributed one for less or non-time-critical messages. The distributed medium access control mechanism for non-time-critical communication over wireless networks has been studied using probabilistic model checking techniques.

Group communication between autonomous mobile stations via wireless local area networks presents particular challenges due to the mobility of the stations and the unshielded nature of wireless communication, leading to a high degree of bursty message losses. The variant of the protocol considered in this paper aims to reduce the number of retransmissions required to guarantee reliable communication, thereby improving real-time performance. The reduction in reliability due to fewer retransmissions is compensated by a mechanism of active acknowledgments and the distribution of decision information included in the header of broadcasted messages. For many real-time applications on mobile stations, reduced reliability is not a serious problem as long as all stations agree in time not to deliver a message if any station did not receive it, ensuring the property of agreement.

We analyze the models developed in [4, 8, 9] to determine the probability that a station misses a decision message and the probability that a user message is never delivered. First, we check the correctness of the analytic model by generating the CTMC using the UltraSAN tool and verifying correctness properties of the concurrent model using the prototype stochastic model checker ETMCC. This model checker verifies both qualitative and quantitative (stochastic time) properties expressed as formulas of Continuous Stochastic Logic (CSL). UltraSAN is a software package for model-based evaluation of systems represented as SANs, providing analytic solvers and discrete-event simulators but no model-checking facilities.

The contributions of this paper are threefold:
1. We use a model checking approach on a case study with available numerical and experimental results.
2. We show that the model checking capability to verify both qualitative and quantitative properties of concurrent models can enhance the effectiveness of existing dependability and performance analysis tools, increasing confidence in the accuracy and faithfulness of the models.
3. We compare the verification results for qualitative and quantitative properties for both the original and a new, more faithful model, highlighting the benefits of the model checking approach.

Finally, the direct link between the high-level specification in SAN and the derived CTMCs provides an opportunity to compare the results and obtain feedback on the performance of the tools. An extended and more detailed version of this paper can be found in [17].

## 2. Model Checking Dependability
In the model checking approach to dependability analysis, a model of the system and a desired property or dependability measure are required. Model checking systematically checks whether the given model satisfies the property. Effective, optimized model checking algorithms have been developed to reduce the state space and keep its representation compact. Typically, models are finite-state automata, where transitions model the system's evolution. These automata are usually generated from a high-level description language. For stochastic modeling, CTMCs and languages such as stochastic Petri nets, stochastic process algebras, or SANs are used. Properties are usually expressed in some form of temporal logic, such as Continuous Stochastic Logic (CSL), a stochastic variant of Computational Tree Logic (CTL).

CSL extends CTL by adding two probabilistic operators that refer to the steady-state and transient behavior of the system. The steady-state operator refers to the probability of residing in a particular set of states in the long run, while the transient operator refers to the probability of the occurrence of particular paths in the CTMC. CSL allows for expressing four types of performance and dependability measures: steady-state, transient-state, path-based, and nested measures.

The ETMCC model checker is a prototype tool that supports the verification of CSL properties over CTMCs. It takes as input a model file with a textual representation of a CTMC, a label file associating each state with atomic propositions, and a given accuracy. ETMCC is based on sparse matrix representations of CTMCs. Alternative model checkers for CSL include PRISM, Prover, and the APNN toolbox.

## 3. Group Communication Protocols for Wireless Local Area Networks
Real-time group communication protocols for wireless local area networks are crucial for applications where autonomous mobile stations need to cooperate and synchronize their behavior to achieve a common goal. A real-time group communication protocol must:
1. Guarantee real-time communication, ensuring an upper bound on the delay of message communication.
2. Provide reliable communication.
3. Handle failures of mobile stations and keep stations informed about the status of each station.
4. Ensure that all stations receive the same messages in the same order.

A key challenge for real-time group communication protocols in wireless networks is the high degree of message losses, caused by the unshielded nature of the wireless medium and the velocity of mobile stations. These losses often occur in bursts, leading to the loss of consecutive messages.

The IEEE 802.11 standard addresses message losses and real-time communication requirements by introducing two alternating periods of medium access control: the Contention Period (CP) and the Contention Free Period (CFP). During the CP, distributed medium arbitration takes place, and collisions may occur. The CFP, controlled by a central Access Point (AP), provides exclusive access to the shared medium, specifically designed for real-time communication.

The real-time group communication protocol analyzed in this paper is a variant of the protocol used for the CFP in the IEEE 802.11 standard, developed by Mock et al. [19].

### 3.1. Basic Operation of the Real-Time Group Communication Protocol
During the CFP, the AP coordinates medium access for all stations. At the beginning of the CFP, all stations remain silent except for the AP, which transmits a polling message to a station in the group. When a station receives a polling message, it may broadcast a message over the network. The polling strategy is decided by the AP, which also assigns a sequence number to the broadcasted message to ensure total ordering of messages.