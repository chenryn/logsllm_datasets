title:Model Checking Dependability Attributes of Wireless Group Communication
author:Mieke Massink and
Joost-Pieter Katoen and
Diego Latella
Model Checking Dependability Attributes of Wireless Group Communication
Mieke Massink
Joost-Pieter Katoen
C.N.R.-ISTI, Via Moruzzi 1,
Dept. of Comp. Science, Univ. of Twente,
I-56124 Pisa, Italy,
PI:EMAIL
P.O. Box 217, 7500 AE Enschede, The Netherlands
PI:EMAIL
Diego Latella
C.N.R.-ISTI, Via Moruzzi 1,
I-56124 Pisa, Italy,
PI:EMAIL
Abstract
Models used for the analysis of dependability and perfor-
mance attributes of communication protocols often abstract
considerably from the details of the actual protocol. These
models often consist of concurrent sub-models and this may
make it hard to judge whether their behaviour is faithfully
reﬂecting the protocol. In this paper, we show how model
checking of continuous-time Markov chains, generated from
high-level speciﬁcations, facilitates the analysis of both cor-
rectness and dependability attributes. We illustrate this by
revisiting a dependability analysis [8] of a variant of the
central access protocol of the IEEE 802.11 standard for
wireless local area networks. This variant has been devel-
oped to support real-time group communication between
autonomous mobile stations. Correctness and dependabil-
ity properties are formally characterised using Continu-
ous Stochastic Logic and are automatically veriﬁed by the
ETMCC model checker. The models used are speciﬁed as
Stochastic Activity Nets.
1. Introduction
Continuous-time Markov chains (CTMCs) are widely
used to analyse important system dependability and perfor-
mance issues. Usually such CTMCs are generated automati-
cally from higher-level speciﬁcations such as e.g. Stochastic
Activity Nets (SAN) [21] for which mature tool-support is
available. Such tools support both the development of high-
level speciﬁcations and the calculation of relevant measures,
e.g. steady-state and transient state probabilities.
The high-level speciﬁcations used for the analysis of
dependability and performance aspects of communication
protocols often abstract considerably from the details of the
actual protocol. In many cases, these models, in their turn,
consist of concurrently composed sub-models. This may
complicate the judgement whether their behaviour is faith-
fully reﬂecting the protocol. The extension of dependability
and performance analysis tools with model-checking capa-
bilities and a temporal logic allows for the veriﬁcation of
behavioural aspects as well as for the convenient, concise
and unambiguous speciﬁcation and automated veriﬁcation
of dependability and performance measures.
In this paper, we illustrate these advantages in practice
by revisiting part of a dependability analysis of a variant of
the centralised medium access protocol of the IEEE 802.11
standard for wireless local area networks [4, 8, 9]. This vari-
ant has been developed to provide reliable real-time group
communication within teams of autonomous mobile robotic
systems over wireless (radio) networks [22, 19]. In the IEEE
802.11 standard, the problem of message loss is addressed
by deﬁning two alternating periods of medium access con-
trol; a centralised one suitable for the exchange of time-
critical messages, and a distributed one, suitable for less
or non-time critical messages. The distributed medium ac-
cess control mechanism for non time-critical communica-
tion over wireless networks has been studied in [16] apply-
ing probabilistic model checking techniques.
Group communication between autonomous mobile sta-
tions via wireless local area networks presents particular
problems due to the locomotion of the mobile stations and
the unshieldedness of wireless communication. It is there-
fore susceptible to a high degree of message losses in a
bursty fashion.
The variant of the protocol that we consider in this pa-
per proposes to reduce the number of retransmissions re-
quired to guarantee reliable communication in order to im-
prove the real-time performance of the protocol. The reduc-
tion of reliability due to fewer retransmissions is compen-
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:52:41 UTC from IEEE Xplore.  Restrictions apply. 
sated for by a mechanism of active acknowledgments and
the distribution of decision information that is included in
the header of broadcasted messages. For many applications
on real-time mobile stations the reduced reliability does not
cause a serious problem as long as all mobile stations in the
network agree in time not to deliver a message to their ap-
plication when there is some station that did not receive the
user message, viz. the property of agreement is satisﬁed.
In this paper, we analyse the models developed in [4, 8,
9] to determine the probability that a station misses a de-
cision message and the probability that a user message is
never delivered. First we check the correctness of the ana-
lytic model by generating the CTMC using the UltraSAN
tool [21] and verify correctness properties of the concurrent
model by the prototype stochastic model checker ETMCC
(Erlangen Twente Markov Chain Checker) [13]. This model
checker allows for the veriﬁcation of both qualitative and
quantitative (stochastic time) properties expressed as for-
mulas of the (stochastic) branching time logic CSL (Contin-
uous Stochastic Logic) [1, 2]. UltraSAN is a software pack-
age for model-based evaluation of systems represented as
SAN’s. It provides analytic solvers as well-as discrete-event
simulators but has no model-checking facilities.
The contribution of this paper is threefold. We use a
model checking approach on a case study on which numer-
ical and experimental results are available in the literature.
We show that the model checking capability to verify both
qualitative and quantitative properties of concurrent models
can greatly enhance the effectiveness of existing depend-
ability and performance analysis tools to increase the con-
ﬁdence in the accuracy and faithfulness of the models on
which the analyses are based. In fact, its automatic veriﬁ-
cation reveals serious problems of the existing model and
gives rise to the development of a new model that more
faithfully reﬂects the synchronous broadcast aspects of the
protocol. We show this by comparing the veriﬁcation results
for qualitative and quantitative properties for both models.
Finally, the direct link between the high-level speciﬁcation
in SAN and the derived CTMCs on which the analysis by
both UltraSAN and ETMCC are based gives an opportunity
to compare the results and to obtain feedback on the perfor-
mance of the tools. An extended and more detailed version
of the present paper can be found in [17].
2. Model Checking Dependability
In the model checking approach to dependability analy-
sis a model of the system under consideration is required
together with a desired property or dependability mea-
sure. Model checking provides a systematic check whether
the given model satisﬁes the property. Effective, optimised
model checking algorithms have been developed to dramat-
ically reduce the state space that needs to be searched, and
to keep its representation compact as well [7]. Typically,
models are ﬁnite-state automata, where transitions model
the evolution of the system while moving from one state to
another. These automata are usually generated from a high-
level description language. In the case of stochastic mod-
elling, such models are typically CTMCs and languages
such as stochastic Petri nets, stochastic process algebras or
SANs are used to generate them. In the model checking ap-
proach, the properties are usually expressed in some form
of temporal logic. In this paper the Continuous Stochastic
Logic [1, 2] is used, which is a stochastic variant of the well-
known Computational Tree Logic (CTL) (see e.g. [7]). CTL
allows for stating properties over states, and over paths.
CSL extends CTL by two probabilistic operators that refer
to the steady-state and transient behaviour of the system be-
ing studied. Whereas the steady-state operator refers to the
probability of residing in a particular set of states (speciﬁed
by a state-formula) in the long run, the transient operator al-
lows us to refer to the probability of the occurrence of par-
ticular paths in the CTMC. In order to express the time-span
of a certain path, the path-operators until U and next X are
extended with a parameter that speciﬁes a time-interval. Let
I be an interval on the real line, p a probability value and (cid:1)(cid:2)
a comparison operator, i.e., (cid:1)(cid:2) ∈ { }. The syn-
tax of CSL is:
State-formulas
Φ ::= a| ¬ Φ| Φ ∨ Φ| S(cid:1)(cid:2)p(Φ)| P(cid:1)(cid:2)p(ϕ)
S(cid:1)(cid:2)p(Φ)
P(cid:1)(cid:2)p(ϕ)
: prob. that Φ holds in steady state (cid:2)(cid:3) p
: prob. that a path fulﬁls ϕ (cid:2)(cid:3) p
Path-formulas
ϕ ::= X I Φ| ΦU I Φ
X I Φ : next state is reached at time t ∈ I and fulﬁls Φ
ΦU I Ψ : Φ holds along path until Ψ holds at t ∈ I
The meaning of atomic propositions (a), negation (¬) and
disjunction (∨) is standard; note that using these operators,
other boolean operators such as conjunction (∧), implica-
tion (⇒), true (true) and false (false), and so forth, can be
deﬁned. The state-formula S(cid:1)(cid:2)p(Φ) asserts that the steady-
state probability for the set of Φ-states meets the bound (cid:1)(cid:2) p.
The operator P(cid:1)(cid:2)p(.) replaces the usual CTL path quanti-
ﬁers ∃ and ∀. In CTL, the state-formula ∃ϕ is valid in state
s if there exists some path starting in s and satisfying ϕ and
∀ϕ is valid if all paths satisfy ϕ. In CSL, ∃ϕ can be written
as P>0(ϕ) and ∀ϕ as P(cid:1)1(ϕ). This allows for the expres-
sion of qualitative as well as stochastic properties in CSL.
We shall frequently use this aspect. P(cid:1)(cid:2)p(ϕ) asserts that the
probability measure of the set of paths satisfying ϕ meets
the bound (cid:1)(cid:2) p. In CTL, a path satisﬁes an until-formula
ΦU Ψ if there is a state on the path where Ψ holds, and at
every preceding state on the path, if any, Φ holds. In CSL,
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:52:41 UTC from IEEE Xplore.  Restrictions apply. 
temporal operators like 3, 2 and their real-time variants 3I
or 2I can be derived, e.g., P(cid:1)(cid:2)p(3I Φ) = P(cid:1)(cid:2)p(true U I Φ)
and P(cid:1)p(2I Φ) = P<1−p(3I ¬Φ). The untimed next- and
until-operators are obtained by XΦ = X IΦ and Φ1 U Φ2 =
Φ1 U I Φ2 for I = [0,∞).
CSL allows for the expression of four different types
of performance and dependability measures, viz. steady-
state measures, transient-state measures, path-based mea-
sures, and nested measures. In this paper we shall use sev-
eral transient-state measures and nested measures.
The ETMCC model checker [13] is a prototype tool that
supports the veriﬁcation of CSL-properties over CTMCs.
The model checker takes as input a model ﬁle with a tex-
tual representation of a CTMC, a label ﬁle associating each
state to the atomic propositions that hold in that state and
a given accuracy. ETMCC is based on sparse matrix repre-
sentations of CTMCs. Alternative model checkers for CSL
include PRISM [15], Prover [23] and the APNN (Abstract
Petri Net Notation) toolbox [5].
3. Group Communication Protocols for Wire-
less Local Area Networks
Real-time group communication protocols for wireless
local area networks are very important for applications
where autonomous mobile stations are expected to cooper-
ate and synchronise their behaviour in order to accomplish
a common goal.
A real-time group communication protocol needs to (a)
guarantee real-time communication, i.e., it needs to guar-
antee an upper bound on the delay of message communi-
cation, (b) provide reliable communication, (c) be able to
handle failure of mobile stations in a group and keep the
stations informed about the status of each station, and ﬁ-
nally, (d) guarantee that all stations receive the same mes-
sages in the same order.
The main problem that a real-time group communica-
tion protocol for wireless networks needs to overcome is the
high degree of message losses. This high degree of losses
is caused by the unshieldedness of the wireless medium,
and partially also by the velocity of the mobile stations. A
further characteristic of these losses is their occurrence in
bursts, which means that often series of consecutive mes-
sages are lost.
In the IEEE 802.11 standard [14], the problem of mes-
sage losses and the real-time communication requirement
have been addressed by the introduction of two alternating
periods of medium access control. In the Contention Period
(CP), distributed medium arbitration takes place and colli-
sions may occur. The arbitration scheme used during CP is
standard carrier sense multiple access with collision avoid-
ance (CSMA/CA). This period is useful for the exchange of
non time-critical or less time-critical messages. The Con-
tention Free Period (CFP) has a centralised medium arbi-
tration and the group members get exclusive access right to
communicate over the shared medium. The CFP is speciﬁ-
cally designed for real-time communication. The two peri-
ods, CP and CFP, are activated in an alternating way under
the control of a central Access Point (AP). This is a special
ﬁxed node in the network with a central position with re-
spect to the mobile stations with which it communicates to
obtain an optimal reachability. Both periods can have vari-
able length.
During the CFP the AP coordinates the medium access
for all stations that are reachable over the wireless network
At the beginning of the CFP all stations remain silent, ex-
cept for the AP that transmits a polling message to some sta-
tion in the group. When a station receives a polling message
it may broadcast a message over the network. The polling
strategy is decided by the AP which is also in charge of as-
signing a sequence number to the broadcasted message in
order to make total ordering of messages possible.
The real-time group communication protocol that we
analyse in this paper is a variant of the protocol used for
the CFP in the IEEE 802.11 standard and has been devel-
oped by Mock et al. [19].
3.1. Basic operation of the real-time group com-