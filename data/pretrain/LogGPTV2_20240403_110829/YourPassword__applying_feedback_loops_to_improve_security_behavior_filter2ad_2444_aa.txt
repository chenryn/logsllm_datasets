title:YourPassword: applying feedback loops to improve security behavior
of managing multiple passwords
author:Tiffany Hyun-Jin Kim and
H. Colleen Stuart and
Hsu-Chun Hsiao and
Yue-Hsun Lin and
Leon Zhang and
Laura Dabbish and
Sara B. Kiesler
YourPassword: Applying Feedback Loops to Improve
Security Behavior of Managing Multiple Passwords
Tiffany Hyun-Jin Kim∗ H. Colleen Stuart† Hsu-Chun Hsiao∗ Yue-Hsun Lin∗
Leon Zhang∗ Laura Dabbish∗ Sara Kiesler∗
∗ Carnegie Mellon University
† Johns Hopkins University
ABSTRACT
Various mechanisms exist to secure users’ passwords, yet
users continue to struggle with the complexity of multiple
password management. We explore the eﬀectiveness of a
feedback loop to improve users’ password management. We
introduce YourPassword, a web-based application that
uses feedback to inform users about the security of their
password behavior. YourPassword has two main compo-
nents: a password behavior checker that converts password
strengths into numerical scores and a dashboard interface
that visualizes users’ overall password behavior and provides
visual feedback in real time. YourPassword not only pro-
vides a total score on all passwords, but also visualizes when
passwords are too similar to each other. To test the eﬃ-
cacy of YourPassword, we conducted a between-subjects
experiment and think-aloud test with 48 participants. Par-
ticipants either had access to YourPassword, an existing
commercial password checker, or no password tool (control
condition). YourPassword helped participants improve
their password behavior as compared with the commercial
tool or no tool.
Categories and Subject Descriptors
K.6.5 [MANAGEMENT OF COMPUTING AND IN-
FORMATION SYSTEMS]: Security and Protection—
Authentication; H.5.2 [INFORMATION INTERFACES
AND PRESENTATION (e.g., HCI)]: User Interfaces—
User-centered design; H.1.2 [MODELS AND PRINCI-
PLES]: User/Machine Systems—Human factors
Keywords
Authentication; Feedback Loops; Password Management
1.
INTRODUCTION
Password-based online authentication is a primary way
users log in securely to various websites. According to a
study conducted in 2007, a typical user types approximately
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are not
made or distributed for proﬁt or commercial advantage and that copies bear
this notice and the full citation on the ﬁrst page. Copyrights for components
of this work owned by others than ACM must be honored. Abstracting with
credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior speciﬁc permission and/or a fee. Request
permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://–enter the whole DOI string from rightsreview form conﬁrmation.
eight passwords each day [9]. The same study suggests that
users are reusing the same or very similar passwords on mul-
tiple websites, maintaining 25 passwords but actively using
about 7 distinct passwords. Reuse of passwords increases the
security risks of password breach, but people have trouble
recalling many distinct passwords.
Password managers of various types attempt to help peo-
ple manage multiple diﬀerent passwords without having to
remember them (e.g., LastPass,1 SplashID2). Although these
password managers are useful, they are vulnerable in diﬀer-
ent ways: reliant on the strength of a master password, open
to physical attacks, or subject to usability and convenience
issues because of lack of portability.
We take a diﬀerent approach and explore the eﬀective-
ness of a feedback loop to improve users’ multiple password
management behavior. Previous research in behavioral sci-
ence suggests that a feedback loop can provide people with
timely information about their actions and opportunities to
improve them [11]. We argue that by making people more
aware of their own behavior and how it is linked to their
security, we can lead them to make improvements.
In this paper, we present the YourPassword system,
which explores how to apply feedback loops to remind users
of their own password security behavior and encourage them
to choose multiple dissimilar passwords. YourPassword
algorithms measure the strength of the user’s passwords and
translate them into easily understandable scores. Our algo-
rithm considers password similarities and reuse among dif-
ferent websites.
YourPassword is a web-based dashboard application
It provides
implemented as a Chrome browser extension.
password information and advice to users based on the al-
gorithms we developed. We conducted a user study to mea-
sure the usability and usefulness of YourPassword. Our
results suggest that the feedback loops in YourPassword
helped users become more aware of their password choices
and create more secure passwords.
2. PROBLEM DEFINITION
Our goal is to encourage users to create unique, dissimilar,
and strong passwords for diﬀerent websites, and to periodi-
cally update their passwords. Doing so is a challenge because
users favor convenient, simple, and memorable passwords.
In addition, overly salient indicators may overwhelm peo-
ple, making them feel inadequate and unmotivated. At the
same time, overly subtle indicators will not catch people’s
1https://lastpass.com/
2http://splashdata.com/splashid/
attention. We provide a feedback loop that gives people
information about the eﬀectiveness of their own password
choices in a way that will encourage them to exert more
care over their password management behavior.
Assumptions. We assume that we can gather relevant
password information for all the user’s websites and ana-
lyze the user’s passwords in real time. We also assume that
the gathered passwords are securely stored on the user’s lo-
cal machine and that our application does not leak stored
passwords. In Sections 4.2 and 6, we discuss an alternative
approach to relax our assumptions.
Desired properties.
The following usability and per-
formance properties are desired for an eﬀective password
behavior indicator: easy to use and intuitive, motivating (to
choose stronger and more unique passwords), timely (catch-
ing the password information in real time), and accurate.
Attackers may attempt to guess as
Adversary model.
many passwords as possible to gain access to users’ sensitive
information. Accessing one password may provide exponen-
tial beneﬁts to the attacker if that password is reused on
multiple websites.
3. PASSWORD BEHAVIOR CHECKER
We designed a password scoring mechanism that consid-
ers a multitude of parameters to evaluate a password’s secu-
rity level. Unlike existing mechanisms [4, 5, 7, 13, 14, 23, 24],
our mechanism adjusts the score based on the similarity to
all the passwords of a user and the corresponding website’s
sensitivity level: we apply stricter rules for those passwords
for highly sensitive websites (e.g., bank, email) compared to
the passwords for moderately sensitive websites (e.g., forum,
classiﬁeds).
Our password behavior checker is composed of 5 modules:
• Individual password strength: This module checks if
the password has a certain number of characters (e.g.,
minimum 8 characters for sensitive websites), contains
dictionary words or common passwords,3 contains upper-
case characters, contains special characters, and is com-
posed of unique characters.
• Password reuse: This module checks if the same pass-
word is reused on multiple websites.
• Website sensitivity: This module checks if the same
password is reused on multiple websites with diﬀerent sen-
sitivity levels.
• Password encryption: This module checks if the pass-
word is transmitted without encryption.
• Password similarity: This module calculates how sim-
ilar a user’s password is to his/her other passwords.
For each site u, we denote pwu, the password for u, and
ℓu, the sensitivity level of u. Our password behavior checker
(PBC ) computes a score Su for this site given pwu and ℓu
as well as the passwords and sensitivity levels of other sites.
Speciﬁcally, Su = PBC(pwu, ℓu, {pwi, ℓi|∀i 6= u}). Su is the
combination of the normalized scores from all 5 modules,
and this score can be potentially updated whenever the user
enters any password (since our algorithm considers similar-
ities of all of his/her passwords). For most modules (except
password similarity), website’s sensitivity levels aﬀect the
Figure 1: YourPassword dashboard.
generosity of the password scores as follows:
Si ≤ Sj ∀ℓi > ℓj , pwi = pwj .
That is, if two sites have the same password but diﬀerent
sensitivity levels, the more sensitive site has a lower score.
Determining websites’ sensitivity levels is a non-trivial
task due to diﬀerences in individuals: a website that Al-
ice considers to be sensitive may not be sensitive to Bob.
On the other hand, any websites that are vulnerable to se-
curity and privacy breaches should be labeled as sensitive.
Hence, YourPassword provides a default list of sensitive
websites, such as ﬁnancial corporations that are prone to
phishing attacks.4 Furthermore, YourPassword enables a
user to update the list to include websites that (s)he consid-
ers to be sensitive.
The password behavior checker multiplies the fractional
scores from the above ﬁve modules and outputs two scores:
(1) a normalized score (0-100) for a recently entered pass-
word and (2) an average score for all of a user’s passwords.
4. USER INTERFACE
The YourPassword interface visualizes a user’s overall
password behavior for all websites along with strength and
uniqueness scores for each website’s password.
4.1 YourPassword Description
YourPassword is a browser dashboard that displays:
• An overall score for a user’s passwords based on their rel-
ative strength,
• Websites that share the same passwords,
• Visual groupings of websites with similar passwords,
• An individual score for each password based on its strength,
• A visual hierarchy, such that website groups with high
scores are shown at top of the screen,
• A “Help me improve” button that displays multiple pieces
of information to help users improve their password scores
and security.
Figure 1 illustrates the YourPassword interface. The
main display chart visualizes the user’s overall password be-
havior. The scoring feedback is designed to range from 0 to
100 to make it easy for users to understand. To reinforce
diﬀerences, we apply colors to diﬀerentiate score groupings
3For our prototype, we used the top 100 Adobe passwords that were
recently exposed in November 2013.
4http://docs.apwg.org/reports/APWG_
GlobalPhishingSurvey_2H2011.pdf
Figure 2: Individual node in the dashboard. When a user hovers
over a node, the dashboard grays out the background and empha-
sizes the node, displaying the password’s score along with links to
other nodes with similar passwords.
(e.g., scores from 0 – 39, 40 – 69, 70 –100 are in red, orange,
and green, respectively).
Websites that share the same password are grouped to-
gether and displayed in the same node.
In Figure 1, the
user has a unique password for MSN.com but shares the
same password for Facebook and New York Times. (A node
marked with the “+” sign indicates that a password is shared
on more than 3 websites.) Sensitive websites are represented
with a lock icon.
We apply the same coloring scheme to individual nodes to
help users understand the relationship between the groups
of websites and their password strengths. We also display an
individual score for each password. When the user hovers
over a node, it grays out the background and emphasizes
the node, and the score for the password is displayed on
the left side of the node. YourPassword also draws links
to other nodes with similar passwords when a user hovers
over a node (Figure 2). The “Help” button on top of the
dashboard toggles the visibility of the tool tips (Figure 3).
The advice for improvement includes suggestions to up-
date a speciﬁc website’s password and reminders to update
passwords regularly. The advice is dynamically updated as
users enter their passwords, reducing potential habituation.
4.2 Implementation
We implemented YourPassword as a Google Chrome
browser extension. The extension consists of three main
modules – password extractor (PE), score generator
(SG), and password database (PD).
Tracking is automatically accomplished by the PE module
that monitors a user’s login activities. After the installation,
the PE module records the user’s passwords at login pages
by parsing the HTML source in the background and looking
for the input ﬁeld of a password type. When the user clicks
the login button, the PE module captures the information T
= {pwd, fn, d }, which includes the entered password (pwd ),
the password ﬁeld name (fn), and the visited domain address
(d ), and then waits for a submission callback. Users may
choose Chrome’s incognito mode if they do not desire PE to
track the credentials of particular websites.
The login information T is ﬁrst saved at a temporary
database, until a redirect page is loaded.
If the redirect
page has a password input ﬁeld, we assume a login failure
Figure 3: Help button. When a user clicks the “Help” button,
tool tips for each section are displayed to help users understand the
dashboard and interpret their current password behavior.
and delete the entry from the temporary database. Other-
wise, we assume a successful login and load the temporary
database into memory. When the login is successful, T is
sent to the SG module using the Chrome extension API
call chrome.extension.sendRequest. The SG mod-
ule then calculates the score based on the currently entered
password and all the previously stored passwords. To en-
sure privacy and secrecy of the passwords, the PD module
encrypts and stores in the user’s local machine the passwords
in cleartext, total scores, individual module scores, T , and
the website address.
Limitations.
Some websites may prevent YourPass-
word from capturing passwords, for example by enabling
javascripts. One possible solution is to ask users to man-
ually enter passwords and their corresponding websites to
YourPassword. Doing so would reduce the usability and
convenience of appliance.
5. EVALUATION
We conducted a user study to evaluate whether Your-
Password improves users’ password behavior.
5.1 Method
The study was a between-subjects experiment in which
participants played the role of a twin sibling, Robin, who sus-
pects that eight personal accounts are potentially compro-
mised by hackers. We gave the participant Robin’s accounts
and their corresponding passwords (Table 1). We asked the
participant to improve the security of Robin’s passwords.
Two sets of passwords were similar to each other, and we
reused the same password for two accounts. Six passwords,
slightly modiﬁed, were among the most common in 2012.5
Two were strings of random characters. We explained that
hackers may steal private and sensitive information, includ-
ing personal emails, private photos, private purchase history,
personal medical history, as well as bank, credit card, and
ﬁnancial investment information. We emphasized that all
Robin’s accounts are equally important and sensitive, and
have the same level of security risk.
The experiment had three conditions:
1. Control condition (CC): Participants were asked to up-
5http://www.cnn.com/2012/10/25/tech/web/
worst-passwords-2012/
Table 1: A list of accounts and passwords for the experiment.
We had two sets of passwords that were similar to each other, and
the same password for two accounts.
Similar
Same
Service
Amazon
American Express
Bank of Oklahoma
Etrade
Facebook
Gmail
MyChart@Johns Hopkins
PayPal
Password
!iloveyou
Abcd123
passw0rd
eswr@U1ayP
passw0rd
@w43df2rxTL6ˆ
abcd123
iloveyou!
date Robin’s passwords. They were given no hints about
the original or updated password strengths.
2. Microsoft password checker condition (MC): Microsoft’s
application allows users to check the strength of a pass-
word.6 Participants in MC were asked to suggest new
password(s), check each of them using Microsoft’s pass-
word checker, and record the ﬁnal passwords when they
were happy with their strengths. They were allowed to
try passwords multiple times until they were satisﬁed.
3. YourPassword condition (YC): Participants were asked
to use YourPassword. After seeing the overall security
of Robin’s current passwords from the YourPassword
application, they were asked to suggest new password(s),
check each of them using YourPassword, and record the
ﬁnal passwords when they were satisﬁed. As in MC, they
could repeat multiple times.
We hypothesized that participants in the YourPassword
condition (YC) would suggest more password changes, stronger
passwords, and more unique passwords.
5.2 Sample
We recruited 48 participants from Carnegie Mellon Uni-
versity’s participant pool service. We also recruited local
residents and students. We randomly assigned participants
to each of the three conditions. Participants included 26
men and 22 women, ranging in age from 18 to 46 years old.
Thirty-ﬁve were students, and of these students, 27 were
majoring in engineering or computer science.
5.3 Procedure
A pretest asked participants if they had accounts with the
websites listed in Table 1, if they thought it would be impor-
tant to protect their personal data, how many unique pass-
words they currently had, and what strategy they used to
remember their passwords. Participants were then randomly
assigned to a condition and asked to follow the instructions
described above. They were asked to think aloud and ex-
plain which password(s) they would update and their rea-
son(s) for doing so. After the participants had reported their
ﬁnal password selections, they were asked to recall their ﬁ-