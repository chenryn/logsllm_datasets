(i.e., higher than 15%). Our further analysis shows that such
high FN values are mainly caused by the limited CFO reso-
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    405
)
%
(
e
v
i
t
i
s
o
p
e
u
r
T
100
80
60
40
0
60
40
20
)
%
(
e
c
n
a
m
r
o
f
r
e
P
CFO
RSSI
RSSI, FP
RSSI, FN
20
15
10
5
)
%
(
e
c
n
a
m
r
o
f
r
e
P
CFO, FP
CFO, FN
RSSI, FP
RSSI, FN
2
4
6
8
10
False positive (%)
0
0.1
0.25
0.5
2.5
Relative distance (m)
1
5
10
0
0.1
0.3
0.5
0.7
0.9
1.1
Observation window (s)
Figure 12: Receiver operating curve gen-
erated by changing the inspection thresh-
old (Device ID = 9, To = 0.3 s.).
Figure 13: Detection performance vs. dis-
tance between BLE device and attacker
(Device ID = 9, τr = 5, To = 0.3 s.).
Figure 14: Detection performance vs. the
duration of observation window (Device
ID = 9, τc = 3, τr = 5).
Table 5: Effectiveness of the RSSI inspection in detecting
packets transmitted from different locations.
Device ID
Night-time
(8 pm-8 am)
FP
FN
Daytime
(8 am-8 pm)
FP
FN
1
2
3
4
5
6
7
8
9
Average
1.25
3.00
0.11
0.57
1.68
1.22
1.34
0.40
1.10
1.19
0.00
5.82
4.19
3.36
0.46
0.41
0.02
2.88
5.92
2.56
0.69
4.18
2.75
2.06
0.84
2.05
1.02
1.29
1.85
1.86
9.44
33.62
4.18
37.07
2.12
2.32
5.86
0.05
20.47
12.79
Average
FP
0.97
3.59
1.43
1.32
1.26
1.64
1.18
0.85
1.48
1.52
FN
5.84
21.15
5.22
22.94
1.60
1.46
3.00
1.55
15.73
8.72
lution captured by Ubertooth One (the platform we used as
the collector). More speciﬁcally, CFO in Ubertooth One is
estimated with a resolution of 5.2KHz (p. 42 in [23]). This
implies that any difference below 5.2KHz between two BLE
devices cannot be detected by Ubertooth One. As such, a
customized collector with a ﬁner resolution will signiﬁcantly
enhance the detection performance. Nevertheless, even in
these cases, the RSSI inspection alleviates such limitations,
and the BlueShield’s overall FN rate is signiﬁcantly lower
than the CFO-only inspection.
RSSI Feature. We evaluate the effectiveness of RSSI in-
spection by analyzing the RSSI values of the attacker’s adver-
tising packets from different locations. Figure 13 illustrates
that spooﬁng attacks can be readily detected with low FN
using the RSSI inspection when the attacker and the BLE
device are placed at more than 0.25m. Further, we evaluate
the RSSI inspection with (during daytime) and without (dur-
ing night-time) signiﬁcant interference from other wireless
devices and human movements. In Table 5, we observe that
while there is no signiﬁcant impact of interference on the FP,
the FN increases notably with the increase in interference.
For instance, the FNs in detecting spooﬁng attacks on BLE
devices with ID = 2 and ID = 4 are more than 30% during the
daytime. This is because these BLE devices transmit advertis-
ing packets with lower signal power than other BLE devices,
and the high channel interference conceals small differences
in RSSI values of these BLE devices and attackers. We note
that for these cases, the CFO inspection naturally comple-
ments the RSSI inspection in effectively bringing down the
BlueShield’s overall FN as shown in Table 2.
6.4 Responsiveness
The responsiveness of BlueShield is measured by the duration
of the observation window To. Figure 14 illustrates that with
increasing To, FP values of CFO and RSSI inspection do not
change signiﬁcantly, but their FN values decrease. Recall that
BlueShield is implemented to report a spooﬁng attack by
inspecting CFO and RSSI values of No advertising packets in
the observation window To (Figure 7). As such, the speciﬁc
values of No and To can be determined based on the required
detection performance. We also highlight that since different
BLE devices have different advertising periods, if we set No
to a ﬁxed value for all BLE devices, then To is different for
different BLE devices, and vice versa.
For the results presented in Table 2, we conﬁgure
BlueShield to have the same No but different To for differ-
ent BLE devices. In the worst case, the observation window
is limited to 6 s because of the requirement to achieve good
detection performance for the BLE device (ID = 4) with the
advertising period of 2 s. We point out that when BlueShield
is deployed in real-world usage scenarios to monitor BLE
devices with lower advertising periods, it can be optimized
to have shorter observation windows. Overall, the fast re-
sponsiveness of BlueShield enables it to effectively detect the
presence of the attacker before it can potentially spoof the
user device. Such in advance alarms also enable BlueShield to
quickly take other necessary actions (e.g., notify the network
administrator) to prevent any harm to users.
6.5 Monitoring of Multiple BLE Devices
The number of BLE devices which BlueShield can monitor at
the same time relies on the computation and communication
capabilities of collectors and the monitor, and the channel
interference in the monitored environment. We observe that
with an increase in the number of monitored BLE devices,
while the computational overhead at the monitor increases lin-
early, the computational burden at collectors does not change.
406    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
This is because collectors ﬁrst need to record all packets on the
three advertising channels and forward them to the monitor.
The monitor is then responsible for classifying advertising
packets belonging to different BLE devices and detecting
spooﬁng attacks for each monitored BLE device. Our ex-
periments also validate that BlueShield can monitor at least
30 BLE devices at the same time without any degradation in
the detection performance corresponding to the monitored
BLE devices. More detailed results are shown in Appendix D.
7 Discussion
Physical Features. BlueShield exploits the physical fea-
tures of BLE devices’ RF signals for device characterization.
While some of these features (e.g., RSSI) have been previ-
ously employed to detect spooﬁng attacks in other wireless
networks (e.g., Wi-Fi and ZigBee [10, 16, 35]), BlueShield
augments three novel traits to enhance their effectiveness:
(1) BlueShield employs a randomized channel switching
mechanism that reﬂects the moving target defense and en-
sures a robust detection of spooﬁng attacks launched by an
SDR-enabled attacker that can mimic the selected physical
features. (2) BlueShield leverages cyber features (i.e., char-
acteristics of the BLE protocol) to trigger the RSSI and CFO
inspection at appropriate time instants. Such selective inspec-
tion allows BlueShield to signiﬁcantly reduce false alarms
compared to prior schemes. (3) Different from prior research
which requires customized hardware to provide high-accuracy
values of these features, BlueShield can be implemented us-
ing low-cost, off-the-shelf platforms without high-resolution
and high-consistency RSSI and CFO values.
Deployment Considerations. The monitoring infrastruc-
ture required for implementing BlueShield (i.e., the collectors
and the monitor) can be conveniently deployed on edge de-
vices such as Wi-Fi/Bluetooth routers [9] which are widely
utilized in indoor environments. These edge devices offer the
natural choice to deploy BlueShield in a non-intrusive and
economical way as they may already be equipped with BLE
transceivers. For proﬁling a given BLE device, BlueShield
only needs to make a one-time effort and collect a few ad-
vertising packets for determining the BLE device’s relevant
characteristics. Hence, the time needed to execute the pro-
ﬁling phase and add a new BLE device to the monitored
environment is short (within a few seconds). Also, the one-
time proﬁling process conveniently supports dynamic addi-
tion/removal of BLE devices to/from a BLE network moni-
tored by BlueShield, without affecting other BLE devices in
the network. In other words, there’s no need to re-proﬁle the
monitored BLE devices. Besides, since the protocol character-
istics of a BLE device are location-independent, they can also
be securely proﬁled at an isolated location before deployment
in the production environment.
8 Related work
Spooﬁng attacks against traditional wired and wireless net-
works have been widely studied in the existing literature
which broadly includes GPS spooﬁng [42], DNS spoof-
ing [38] and ARP spooﬁng [45]. In the context of BLE net-
works, the usage of encryption and authentication mecha-
nisms provided in the BLE speciﬁcation largely depends on
the application-speciﬁc requirements determined by BLE de-
vice manufacturers. As such, the BLE devices which do not
employ the recommended security mechanisms are vulnera-
ble to a variety of attacks [3, 8, 13, 34] which can be trivially
launched against their users. Recent studies [2, 49] have also
revealed the design and implementation ﬂaws of the BLE
stack, which can be easily exploited by attackers to perform
spooﬁng attacks against the BLE devices and their user de-
vices which employ the speciﬁed authentication mechanisms.
The detrimental implications of spooﬁng attacks on user de-
vices have also been partly identiﬁed in prior research [26,31].
To defend against spooﬁng attacks, the existing schemes
largely rely on modifying the BLE protocol or updating the
ﬁrmware/hardware of BLE devices [21,37], on a vulnerability-
by-vulnerability basis. Unfortunately, these approaches are
impractical for wide adoption and deployment in the real
world, especially for the millions of legacy BLE devices –
many of which do not even support ﬁrmware updates – pro-
duced by many device vendors. One prior approach towards
an off-the-shelf solution for protecting the privacy of BLE
devices is BLE-Guardian [20], which mainly broadcasts jam-
ming signals to corrupt the BLE device’s advertising pack-
ets that contain privacy-sensitive information. Unfortunately,
BLE-Guardian cannot defend against spooﬁng attacks. In-
stead, BlueShield is a practical, device-agnostic spooﬁng de-
tection framework, which protects user devices against spoof-
ing attacks without any interference or modiﬁcation to the
conventional BLE devices and user devices.
9 Conclusion
In this paper, we propose BlueShield, an out-of-the-box de-
fense that provides a device-agnostic, legacy-friendly moni-
toring framework for detecting spooﬁng attacks in BLE net-
works. We demonstrate that BlueShield is robust against an
advanced attacker with the ability to spoof the monitored
features of a BLE device. BlueShield can be implemented
using low-cost, off-the-shelf components; and its operation
remains transparent to the communications between the user
device and the BLE device. Our evaluation results illustrate
that BlueShield can effectively and robustly detect spooﬁng
attacks with very low false positive and false negative rates.
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    407
Acknowledgments
We thank the anonymous reviewers for their valuable com-
ments and suggestions. This work was supported in part by
ONR under Grant N00014-18-1-2674. Any opinions, ﬁndings,
and conclusions in this paper are those of the authors and do
not necessarily reﬂect the views of the ONR.
References
[1] Daniele Antonioli, Nils Tippenhauer, and Kasper Bonne
Rasmussen. Key negotiation downgrade attacks on blue-
tooth and bluetooth low energy. ACM Trans. Inf. Syst.
Secur., 0(ja).
[2] Daniele Antonioli, Nils Ole Tippenhauer, and Kasper
Rasmussen. The KNOB is broken: Exploiting low en-
tropy in the encryption key negotiation of Bluetooth
BR/EDR. In 28th USENIX Security Symposium, pages
1047–1061, August 2019.
[3] Vaibhav Bedi.
Exploiting BLE smart bulb se-
curity using BtleJuice: A step-by-step guide.
https://blog.attify.com/btlejuice-mitm-
attack-smart-bulb/, 2018. Accessed: August 1,
2019.
[10] Yingying Chen, Jie Yang, Wade Trappe, and Richard P.
Martin. Detecting and localizing identity-based attacks
in wireless and sensor networks. IEEE Transactions on
Vehicular Technology, 59(5):2418–2434, 2010.
[11] CSR.
CSR 4.0 Bluetooth USB adapter.
https://www.amazon.com/Bluetooth-Adapter-
Songway-Computer-Keyboard/dp/B07KWVXBKZ/
ref=sr_1_46?keywords=bluetooth+adapter+car+
4.0&qid=1563227361&s=electronics&sr=1-46.
Accessed: August 1, 2019.
[12] Cypress.
CYW920735Q60EVB-01 Evaluation
https://www.cypress.com/documentation/
Kit.
development-kitsboards/cyw920735q60evb-01-
evaluation-kit. Accessed: August 1, 2019.
[13] Aveek K. Das, Parth H. Pathak, Chen-Nee Chuah, and
Prasant Mohapatra. Uncovering privacy leakage in BLE
network trafﬁc of wearable ﬁtness trackers. In Proceed-
ings of the 17th International Workshop on Mobile Com-
puting Systems and Applications (HotMobile), pages
99–104, 2016.
[14] National Vulnerability Database.
2020-9970.
bin/cvename.cgi?name=CVE-2020-9770.
cessed: June 26, 2020.
CVE-