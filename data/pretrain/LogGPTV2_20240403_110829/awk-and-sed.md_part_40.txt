注7:
mawk 的主要优点是它的速度和稳定性。尽管它不如 gawk 功能多，但它总比
“镜像”模式来传输这个文件。
使用的源代码可以通过匿名的文件传送协议（FTP）从站点 ftp. whidbey. net 下
很有趣的特点。第一，和其他版本的 awk不同，
Thompson Automation SoftWare (注 9) MS-DOS/Windows、
Thompson Automation awk (tawk)
分
前面介绍的共有的扩展mawk中也可使用。
经出了新的版本）
一个字符的数值型值。它和Pascal中的同名函数的功能类似。
附加函数ord()是可用的。
出参数时用$O 代替。
函数exp()、int()、log()、sqrt()、tolower（)和toupper（在没有给
系
gawk 的优点是它有更庞大的功能集，已经被移植到更多的非 UNIX得
系统上，并且给出了更多的文档
QQ群：
tawk 提供了用 awk 编写的面向屏幕的调试器。调试器的源代
50192241
它有下面的扩展：
这个函数的参数为一个字符串，
- 300 -
它们作为解释器，
第十一章
Windows 95、
awk 的系列产品
而 tawk 是作
返回参数第
---
## Page 283
价值已经比较熟悉。我们将在有关地方对比tawk 和 gawk 中可比较的功能。
tawk 的文档详细介绍了这些功能。希望现在你对 awk 中将会出现的这些特征的
这部分给出了tawk 中的新功能的列表。对它们的完整介绍超出了本书的范围。
tawk语言扩展
tawk 是 awk 全面功能的实现。除了实现 POSIX awk（基于新版的 awk）的功能
的库，且在链接期间将其他C例程组合到awk 程序中。
编译成一个压缩中间形式。当运行时，这一中间形式被链接到一个执行该程序
而，你也可以将 编译成一个独立的可执行文件。tawk 编译器实际上是将程序
tawk 提供一个和 POSIX awk 的操作类似的 awk 借口，
注10:
注9:
注
8:
它还用一些基本的方式扩展了这个语言，而且用于很多内置函数。
用 SUBSEP 的值来区分，生成常规的关联数组中所希望的唯一下标。为
真正的多维数组。传统的 awk 通过连接下标的值，模拟多维数组，
级程序的值。
提供一个 abort［expr语句，
文本匹配，而不是最长的。
me/i”）表示匹配时应该忽略大小写。标志s表示在匹配时应和最短的
一个标志，
可控制的正则表达式。你可以在正则表达式（“/match me/”）中添加
则不同，即使当文件为空这些操作也要执行。
ENDFILE 使你能够对每个文件实施启动和关闭操作。和基于FNR==1 的规
似，但这个过程中的操作比 BEGIN 过程中的操作先执行。BEGINFILE和
附加的特殊模式有：INIT、BEGINFILE和 ENDFILE。INIT 和 BEGIN 类
与这个功能兼容，tawk提供给了真正的多维数组。
表明当为程序命名时缺乏想象力”
Portland OR 97221 U.S.A，美国电话是：
地址是：Thompson Automation SoftWare,
http: //www. mks. com
2797，其他地方电话是：1-519-884-2251。URL是
各地电话是：1-503-224-1639,
Waterloo，Ontario N2L 5Z5，Canada．北美电话是：1-800-265-
地址是 Mortice Kern Systems, 185 Columbia Street West,
 ，中(  
QQ群:
来告诉tawk 如何处理正则表达式。标志i（“/match 
50192241
类似于 exit，除非tawk 立即退出，
- 301-
第十一章
用于编译和运行程序。
：1-800-944-0139，其他
 5616 SW Jefferson,
awk 的系列产品
否则将
下标
然
---
## Page 284
的函数。每个类型有两个或更多的相关函数。我们将简单描述每个类型的功
tawk除了扩展了语言，
tawk 补充的内置函数
的能力。
好
子了！这是一个相当长的列表，但是这些特征对在 awk 中编写程序提供了补充
位处理函数（参见后面的内容）。
（OxDEAD和 OxbEEF 是两个典型的十六进制数）。这有助于使用内置的
十六进制的常量。在tawk 的程序中可以指定（
录，这个记录是RECLEN的字符长度。
度的记录。如果RS 和RECLE内的字符不匹配，那么tawk返回--个记
固定长度的记录，通过给变量RECLEN 赋值，
tawk 跳过输入数据文件。
控制隐含文件处理循环。变量ARG丨可以跟踪当前输入数据文件的 ARGV
则表达式。和FPAT成功匹配的连续的文本成为字段的内容。
字段描述，
的变量RT 类似的变量RSM（记录分隔符匹配）中。
RS可以是一个正则表达式。这和 gawk 和 mawk 类似。然而，正则表达式
易，而且不用担心变量名与其他函数库或与用户主程序产生冲突。
在“模块（源文件”内是全局的，对一个模块来讲是局部的，
函数和变量的范围控制。可以声明函数和变量在整个程序中是全局的，
码，或用管道将结果送给 sort的外部调用进行排序的开销要少。
按升序还是按降序排序。虽然这种排序会引起性能下降，
序被访问。你可以控制是否要排序，
数组的自动排序。当使用for（item in array）结构循环处理数组中的
潜力实现更大的功能。
函
多维数组确保下标是唯一的，而且当数组中元素的个数很多时，能够有
print a[1ti]
for (i ina[1)
部
变量的额外函数参数。整个特征很好，
数来讲是局部的。
QQ群：
而不是字段分隔符。变量FPAT可以是一个描述字段内容的正
，特提供了大量补充的内置函数。以下是可用的各种类型
50192241
 常规的 awk 只给全部变量，
302
 是按字母排序还是按数值排序，
它使得编写 awk 函数库很容
第十一章 
，使得数组的元素按一定的顺
就可以是tawk 读取固定长
C风格的十六进制的常量
全局函数，
awk 的系列产品
但比用 awk
以及作为局
或对一个
代
是
---
## Page 285
个很好的替代品。例如，屏幕函数和内部状态函数用于实现 awk 中的tawk 调试
通过这个列表可以清楚地看出，对于主要的编程任务，tawk 是C和Per”的一
哭
能
。
功能主要是针对专业人员提供高的。
反问MS-DOS 底层功能。可以使用系统中断，获取或指定内存地址。这些
访问内部状态。可以通过函数调用来获取或设置任何awk 变量。
的一些操作必须在C和C++中处理。
打包或解包二进制数据。你可以指定如何设计二进制数据结构。这些和
curses(3)库上实现。
屏幕函数。你可以执行面向屏幕的输入输出，在UNIX上，
锁定文件。你可以锁定和解锁文件，以及整理文件。
如 MS-DOS 的command.com）功能非常有限。
行。在非 UNIX 系统上这是很有用的，
函数允许你为新的程序环境提供数据，
执行函数。可以暂停特定的时间，而使其他函数运行。tawk 的 spawn()
读取目录函数。可以获得当前时间的函数，并可用各种方式格式化。这
文件信息函数。可以获取文件许可权限、大小和更改时间。
目录操作函数。可以建、删除和改变路径、以及删除和重命名文件。
件中进行查找以及按固定长度进行1/0时，功能更强。
更多的I/0 函数。有一组函数模仿了 stdio(3)库中的函数。特别是在文
作。这些功能也可以用用户自定义的函数来实现，但性能较差。
位处理函数。可用用逻辑操作符AND、OR和XOR 对数据（整数）按位操
更强的功能。
管这些函数可用采用用户自定义的函数来编写，但作为内置函数能提供
不是使用分隔符来分隔。还有补充的 printf 格式和字符串转换函数。尽
模式中的子模式进行匹配和替换（和 gawk 和 gensub（)函数相同），
扩展字符串函数。
QQ群：
50192241
标准字符串函数的扩展和新的字符串函数，
303-
，因为这些系统上的命令解释器（例
以及标识程序是否应该异步运 
第十一章
awk 的系列产品
，这些函数在
可用于按
---
## Page 286
力来解决实际的问题。
人舒服的编程语言，因为它为你完成了几乎所有的苦差事，所以你可以集中精
不同实现工具中可用的扩展。当你使用 awk时，你会发现它是一个简单并且令
好了，
后记
将 awk 的概念应用于不同语言提供的环境。
VSAwk 的数据访问模式与 UNIX awk 类似，
式和调用awk的内置函数。
VSAwk 提供了启动和清除操作，并能将输入记录分解到字段中，还能编写表达
中。VSAwk 
Videosoft 出售的软件VSAwk，
Videsoft VSAwk
我们已经在 awk 中将编程的输入和输出全部讨论了，
是VisualBasic的一个控件，
QQ群：
50192241
，将 awk 风格的编程加入到 VisualBasic环境
304
而不是语法类似。然而，有趣的人们
，以事件驱动方式工作。
第十一章 
包括标准的语言和
awk 的系列产品
---
## Page 287
用由 spell找到的有拼写错误的单词列表，spellcheck 可以提醒用户修改它
问用户是否用本地的字典。Spellcheck 用于用本地字典运行 spell程序。
如果在命令行指定给出字典文件，而在当前目录下有一个文件dict，那么将询
spellcheck，即一个调用 awk 的 shell脚本，以及文档文件的名字。
在介绍这个程序之前，让我们示范一下它是如何工作的。
从本地字典文件中找到。
一次将所有的拼写错误都改掉。你也可以选择添加任何单词，这些单词 spell
并询问是否修改这个单词。你可以在每次遇到这个单词时进行修改，或者可以
Spellcheck程序提供了另外一种方法：它将 spell发现的每个单词都显示给你
改文档。大多数熟练的用户是创建一个 sed 程序来自动进行修改。
spel的用户发现自己将拼写错误的单词记录下来，然后利用文本编辑器来修
UNIX spelI程序对于捕获一个文档中的拼写错误做了一定的工作。然而对大多
数人来说，
一个交互式拼写检查器
题的范围有一个感性认识。
些特殊的应用不感兴趣，也应该学习这种稍大的程序以对 awk程序所能解决问
masterindex是一个批处理程序，
本章介绍了两个复杂的应用，综合了awk 编程语言的大多数特征。第一个程序
?
●一个交互式拼写检
$ spellcheck ch00
本章内容 
Use local dict file? (y/n)y
的其他细节
Masterindex程序
生成格式化索引
查器
，它只做了一半的工作。它没有帮助你更正拼错的单词。首次使用
QQ群：
50192241
用于为一本或一套书生成索引，即使你对这
-305-
第十二章
用户输入
综合应用
第十二章
综合应用
---
## Page 288
第四个单词误拼“utilities”
被添加到字典中。
来且在前面加上一个“>”。然后在保存修改前询问用户的确认。第三个单词也
在提示用户输入正确的拼写和确认输入后完成修改，将每个受影响的行显示出
错误，输入响应“g”完成全局的修改。
键）表示将这个单词加入列表，该列表用于更新字典。第二个单词完全是拼写
Spell找到的第一个单词是“SparcStation”
们。在显示第一个单词之前，首先显示一个可执行操作的响应列表。
These utlitities have many things in common, 
4 - Found utlitities (C/G/A/H/Q/) :c
1 lines changed.
> and a full description of its scripting language.
Globally change languauge to language? (y/n) :y
Globally change to: language 
 2 - Found languauge 
1 - Found SparcStation (C/G/A/H/Q/) :a 
CR to ignore:
Quit
Help,
Add to Dict,
Global change,
Change each occurrence,
Responses:
 3 - Found nawk (C/G/A/H/Q/) :a
QQ群：
Save changes? (y/n)y
50192241
(C/G/A/H/Q/) :g
306
。输入响应“a”（后跟一个回车
第十二章
including
综合应用
---
## Page 289
现在我们来看 spellcheck.awk 脚本，
如果用户回答“n”，原始的文件和字典都保持不变。
的文档和字典。
很多单词但他们并没有拼错，因此输入回车键表示忽略这个单词。
在确认没有拼错之后，
因为不能确定第五个单词是否拼写错误，所以用户可以输入“c”来观察这行。
否保存修改。
行并且进行修改。在用户修改完所有错误后，显示修改的行，用户将被询问是
用户输入“e”将修改出现的每个错误。这时的响应使用户看到包含拼写错误的
Make changes to dictionary (y/n)? y
Save corrections in cho0 (y/n)? y
Change to:RETURN
 5 - Found xvf (C/G/A/H/Q/) :c
2 Iines changed.
>Two other utilities that are found on the UNlX system
>These utilities have many things in common, 
Change utlitities to utilities?
Two other utlitities that are found on the UNlX system 
Change utlitities to utilities? (y/n) :y
Change to:utilities
主过程，一次从列表中读取一个单词并提示用户输入正确的单词。
BEGIN过程，处理命令行参数并执行 spelI命令建立一个单词列表。
QQ群：
用户键入回车键以忽略这个单词。通常，spell找出了
.Save changes? (y/n)y
50192241
307
它可以分为4部分：
 (y/n) :y
第十二章 
including
综合应用
---
## Page 290
BEGIN过程
#如果有两个以上的参数，那么第二个参数是dict
#至少两个参数—nawk 和文件名
#处理命令行参数
# 4）显示用户响应的列表
# 3）执行 spelI程序来创建单词列表文件
# 2）创建临时文件名
#1）处理命令行参数
# BEGIN动作执行下列任务：
# SPELLFILE = "file"
#（用 spellcheck 作为 shell程序的名字)
# 用法:nawk -f spellcheck.awk [+dict] file 
#作者：Dale Dougherty
Spellcheck.awk 的 BEGIN过程很大，也有些不寻常。
支持函数，调用它用于修改文件。
词扩充当前的字典中。
END 过程，
if （ARGC >1）{
BEGIN{
# SPELLDICT = "dict'
# spellcheck. awk 
保存文件的拷贝，并覆盖原始文件。同时也将单词列表以外的单
QQ群：
－交互式拼写检查程序
50192241
308
第十二章
综合应用
---
## Page 291
getline reply < "-"
printf ("Use local dict 
#如果存在，询问是否应该使用它
if (! system ("test -r dict")) 
#测试本地 dict 文件是否存在
SPELLFILE = ARGV[1]