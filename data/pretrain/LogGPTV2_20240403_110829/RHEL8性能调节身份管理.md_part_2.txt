:::
下图显示了基于创建可靠拓扑指南的身份管理(IdM)拓扑示例。
[副本拓扑示例
1](#optimizing-the-replica-topology_tuning-performance-in-idm.html#optimizing-the-replica-topology-replica-topology-example-1-fin "图 4.1. 副本拓扑示例 1"){.link}
显示四个数据中心，每个数据中心有四个服务器。服务器与复制协议连接。
::: figure
[]{#optimizing-the-replica-topology_tuning-performance-in-idm.html#optimizing-the-replica-topology-replica-topology-example-1-fin}
**图 4.1. 副本拓扑示例 1**
::: figure-contents
::: mediaobject
![A diagram showing 4 data centers - Geo 1 through 4. Each data center
has four servers connected to each other with replication agreements.
There are also replication agreements connecting two servers from Geo 1
to two servers in Geo 2. This pattern continues with two servers in Geo
2 connected to two servers in Geo 3 and two servers in Geo 3 connected
to Geo 4. This connects each data center so each server is at most 3
hops away from another Geo.](images/64_RHEL_IdM_0120_2.2.png)
:::
:::
:::
\
\
[副本拓扑示例
2](#optimizing-the-replica-topology_tuning-performance-in-idm.html#optimizing-the-replica-topology-replica-topology-example-2-fin "图 4.2. 副本拓扑示例 2"){.link}
显示三个数据中心，每个数据中心都有不同的服务器数量。服务器与复制协议连接。
::: figure
[]{#optimizing-the-replica-topology_tuning-performance-in-idm.html#optimizing-the-replica-topology-replica-topology-example-2-fin}
**图 4.2. 副本拓扑示例 2**
::: figure-contents
::: mediaobject
![A diagram showing 3 data centers: Geo 1 has 5 servers each connected
to the other - Geo 2 has two servers connected to each other - Geo 3 has
3 servers connected in a triangle. There are 2 connections from each Geo
connecting two of its servers to 2 servers in the next
Geo.](images/64_RHEL_IdM_0120_2.3.png)
:::
:::
:::
:::
::: section
::: titlepage
# []{#optimizing-the-replica-topology_tuning-performance-in-idm.html#_additional_resources}其他资源 {.title}
:::
::: itemizedlist
-   有关建立有效副本拓扑的详情，请参阅[规划副本拓扑](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/planning_identity_management/planning-the-replica-topology_planning-dns-and-host-names){.link}。
:::
:::
:::
[]{#adjusting-the-search-size-and-time-limit_tuning-performance-in-idm.html}
::: chapter
::: titlepage
# []{#adjusting-the-search-size-and-time-limit_tuning-performance-in-idm.html#adjusting-the-search-size-and-time-limit_tuning-performance-in-idm}第 5 章 调整搜索大小和时间限制 {.title}
:::
有些查询（比如请求 IdM
用户列表）可能会返回大量条目。通过调整这些搜索操作，您可以在运行
`ipa *-find`{.literal} 命令时提高总体服务器性能，如
`ipa user-find`{.literal}，并在 Web UI 中显示对应的列表。
::: variablelist
[搜索大小限制]{.term}
:   定义从客户端 CLI 发送发送到服务器的请求或从访问 IdM Web UI
    的浏览器返回的最大条目数。
    默认： 100 条目。
[搜索时间限制]{.term}
:   定义服务器等待搜索运行的最长时间（以秒为单位）。搜索达到这个限制后，服务器将停止搜索并返回该时间里发现的条目。
    默认： 2 秒。
:::
如果您将值设为 `-1`{.literal}，IdM 不会在搜索时应用任何限制。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果设置的搜索大小或时间限制太大，则可能会对服务器性能造成负面影响。
:::
::: section
::: titlepage
# []{#adjusting-the-search-size-and-time-limit_tuning-performance-in-idm.html#adjusting-the-search-size-and-time-limit-in-the-command-line_adjusting-the-search-size-and-time-limit}在命令行中调整搜索大小和时间限制 {.title}
:::
以下文本描述了在命令行中调整搜索大小和时间限制：
::: itemizedlist
-   全局
-   对于一个特定条目
:::
::: orderedlist
**流程**
1.  要在 CLI 中显示当前的搜索时间和大小限制，请使用 ipa config-show
    命令：
    ``` literallayout
    $ ipa config-show
    Search time limit: 2
    Search size limit: 100
    ```
2.  要为所有查询全局调整限制，请使用 `ipa config-mod`{.literal}
    命令并添加 `--searchrecordslimit`{.literal} 和
    `--searchtimelimit`{.literal} 选项。例如：
    ``` literallayout
    $ ipa config-mod --searchrecordslimit=500 --searchtimelimit=5
    ```
3.  要仅为特定查询调整限制，请在该命令中添加 `--sizelimit`{.literal} 或
    `--timelimit`{.literal} 选项。例如：
:::
``` literallayout
$ ipa user-find --sizelimit=200 --timelimit=120
```
:::
::: section
::: titlepage
# []{#adjusting-the-search-size-and-time-limit_tuning-performance-in-idm.html#adjusting-the-search-size-and-time-limit-in-the-web-ui_adjusting-the-search-size-and-time-limit}在 Web UI 中调整搜索大小和时间限制 {.title}
:::
以下文本描述了在 IdM Web UI 中调整搜索大小和时间限制：
::: itemizedlist
-   全局
-   对于一个特定条目
:::
::: title
**流程**
:::
为所有查询在全局范围内调整限制：
::: orderedlist
1.  登录到 IdM Web UI。
2.  点 [**IPA Server**]{.strong}。
    [![Screenshot of the IdM Web UI highlighting the \"IPA Server\" tab
    from the top menu](images/web-ui-ipaserver.png)]{.inlinemediaobject}
3.  在 [**IPA Server**]{.strong} 选项卡中点
    [**Configuration**]{.strong}。
4.  在[**搜索选项**]{.strong}区域中设置所需的值。
    默认值为：
    ::: itemizedlist
    -   搜索大小限制： 100 个条目
    -   搜索时间限值： 2 秒
    :::
5.  点页面顶部的 [**Save**]{.strong}。
    [![Screenshot of the IdM Web UI highlighting the Save button which
    is below the \"Configuration\" title at the top of the Configuration
    page](images/web-ui-search-limits.png)]{.inlinemediaobject}
:::
保存值后，搜索条目并验证结果。
:::
:::
[]{#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html}
::: chapter
::: titlepage
# []{#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-idm-directory-server-performance_tuning-performance-in-idm}第 6 章 调整 IdM Directory 服务器性能 {.title}
:::
您可以通过调整 LDAP
属性来控制目录服务器的资源和行为来调整身份管理数据库的性能。
要调整目录服务器缓存数据的方式，请参阅以下步骤：
::: itemizedlist
-   [调整条目缓存大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-entry-cache-size_adjusting-idm-directory-server-performance "调整条目缓存大小"){.link}
-   [调整数据库索引缓存大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-database-index-cache-size_adjusting-idm-directory-server-performance "调整数据库索引缓存大小"){.link}
-   [重新启用条目和数据库缓存自动大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#re-enabling-database-and-entry-cache-auto-sizing_adjusting-idm-directory-server-performance "重新启用数据库和条目缓存自动大小"){.link}
-   [调整 DN
    缓存大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-dn-cache-size_adjusting-idm-directory-server-performance "调整 DN 缓存大小"){.link}
-   [调整规范化 DN
    缓存大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-normalized-dn-cache-size_adjusting-idm-directory-server-performance "调整规范化 DN 缓存大小"){.link}
:::
要调整 Directory 服务器的资源限值，请参阅以下步骤：
::: itemizedlist
-   [调整最大消息大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-maximum-message-size_adjusting-idm-directory-server-performance "调整最大消息大小"){.link}
-   [调整文件描述符的最大数量](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-maximum-number-of-file-descriptors_adjusting-idm-directory-server-performance "调整文件描述符的最大数量"){.link}
-   [调整连接数据的大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-connection-backlog-size_adjusting-idm-directory-server-performance "调整连接数据的大小"){.link}
-   [调整数据库锁定的最大数量](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-maximum-number-of-database-locks_adjusting-idm-directory-server-performance "调整数据库锁定的最大数量"){.link}
:::
要调整对性能有最大影响的超时设置，请参阅以下步骤：
::: itemizedlist
-   [调整输入/输出块超时](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-input-output-block-timeout_adjusting-idm-directory-server-performance "调整输入/输出块超时"){.link}
-   [调整闲置连接超时](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-idle-connection-timeout_adjusting-idm-directory-server-performance "调整闲置连接超时"){.link}
-   [调整复制发行超时](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-replication-release-timeout_adjusting-idm-directory-server-performance "调整复制发行超时"){.link}
:::
::: section
::: titlepage
# []{#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-entry-cache-size_adjusting-idm-directory-server-performance}调整条目缓存大小 {.title}
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽建议您使用内置缓存自动缩放功能来优化性能。只有在需要与自动调整的值分离时才会更改这个值。
:::
`nsslapd-cachememsize`{.literal}
属性指定条目缓存的可用内存空间大小（以字节为单位）。这个属性是控制目录服务器使用的物理
RAM 最重要的值之一。
如果条目缓存大小太小，您可能在 Directory Server 错误日志中看到以下错误：
`/var/log/dirsrv/slapd-INSTANCE-NAME/errors`{.literal}
``` literallayout
REASON: entry too large (83886080 bytes) for the import buffer size (67108864 bytes).  Try increasing nsslapd-cachememsize.
```
红帽建议在内存中安装条目缓存和数据库索引条目缓存。
::: informaltable
  ----------------------------- -------------------------------------------------------------------------------
  [**默认值**]{.strong}         `209715200`{.literal} [*(200 MiB)*]{.emphasis}
  [**有效范围**]{.strong}       `500000 - 18446744073709551615`{.literal} [*(500 kB - (2^64^-1))*]{.emphasis}
  [**条目 DN 位置**]{.strong}   `cn=database-name,cn=ldbm database,cn=plugins,cn=config`{.literal}
  ----------------------------- -------------------------------------------------------------------------------
:::
::: itemizedlist
**先决条件**
-   LDAP Directory Manager 密码
:::
::: orderedlist
**流程**
1.  禁用自动缓存调整。
    ``` literallayout
    [root@server ~]# dsconf -D "cn=Directory Manager" ldap://server.example.com backend config set --cache-autosize=0
    ```
2.  显示数据库后缀及其对应的后端。
    ``` literallayout
    [root@server ~]# dsconf -D "cn=Directory Manager" ldap://server.example.com 后端后缀列表
    cn=changelog (changelog)
    dc=example,dc=com (userroot)
    o=ipaca (ipaca)
    ```
    这个命令显示每个后缀旁的后端数据库名称。在下一步中使用后缀的数据库名称。
3.  为数据库设置条目缓存大小。这个示例将 userroot 数据库的条目缓存设置为
    2GB。
    ``` literallayout
    [root@server ~]# dsconf -D "cn=Directory Manager" ldap://server.example.com backend suffix set --cache-memsize=2147483648 userroot
    ```
4.  重启 Directory 服务器。
    ``` literallayout
    [root@server ~]# systemctl restart dirsrv.target
    ```
5.  监控 IdM
    目录服务器的性能。如果它没有以理想的方式改变，请重复这个过程并将
    `cache-memsize`{.literal} 调整为不同的值，或者重新启用缓存自动大小。
:::
::: itemizedlist
**验证步骤**
-   显示 `nsslapd-cachememsize`{.literal}
    属性的值，并将其设置为您所需值。
    ``` literallayout
    [root@server ~]# ldapsearch -D "cn=directory manager" -w DirectoryManagerPassword -b "cn=userroot,cn=ldbm database,cn=plugins,cn=config" | grep nsslapd-cachememsize
    nsslapd-cachememsize: 2147483648
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `nsslapd-cachememsize`{.literal} 属性的详情，请参阅
    [nsslapd-cachememsize](https://access.redhat.com/documentation/en-us/red_hat_directory_server/11/html/configuration_command_and_file_reference/database_plug_in_attributes#nsslapd_cachememsize){.link}。
-   要重新启用缓存自动大小，请参阅[启用条目和数据库缓存自动大小](#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#re-enabling-database-and-entry-cache-auto-sizing_adjusting-idm-directory-server-performance "重新启用数据库和条目缓存自动大小"){.link}。
:::
:::
::: section
::: titlepage
# []{#adjusting-idm-directory-server-performance_tuning-performance-in-idm.html#adjusting-the-database-index-cache-size_adjusting-idm-directory-server-performance}调整数据库索引缓存大小 {.title}
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽建议您使用内置缓存自动缩放功能来优化性能。只有在需要与自动调整的值分离时才会更改这个值。
:::
`nsslapd-dbcachesize`{.literal}
属性控制数据库索引使用的内存量。这个缓存大小对 Directory
服务器性能的影响比条目缓存大小的影响要小。但是如果在设定了条目缓存大小后有可用的
RAM，红帽建议增加分配给数据库缓存的内存量。
数据库缓存限制为 1.5 GB RAM，因为更高的值并不会提高性能。
::: informaltable
  ----------------------------- -----------------------------------------------------------------