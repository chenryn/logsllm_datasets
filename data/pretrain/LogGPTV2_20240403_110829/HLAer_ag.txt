TABLE IX: Pattern examples
| log example pattern | 2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0(yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in | 2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0(yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in | 2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0(yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in | 2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0(yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in |
|---|---|---|---|---|| log example |2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0  (yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in |2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0  (yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in |2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0  (yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in |2012 - 5 - 25 15 : 2 : 46 get / proxy . txt - 80 - - 200 0 0 0  (yyyymmdd) (time) get \W proxy \W txt \W (numerical) \W \W (numerical) (numerical) (numerical) (numerical) 0 31 11 : 0 : 41 www httpd [ 5641 ] : [ error ] [ client 50 . 61 . 149 . 165 ] php notice : undefined variable : tags in || log example |/ var / www / html / research / robust / robust |/ var / www / html / research / robust / robust |asm - website / main / contents . php on line 90 |asm - website / main / contents . php on line 90 |
| pattern |/ var / www / html / research / robust / robust |/ var / www / html / research / robust / robust |asm - website / main / contents . php on line 90 |asm - website / main / contents . php on line 90 || pattern |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) || log example |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) |(numerical) (numerical) (time) www httpd [ (numerical) ] \W [ error ] [ client (IPv4) ] php notice \W undefined variable \W tags in \W var \W www \W html \W research \W robust \W robust 	asm \W website \W main \W contents \W php on line (numerical) || log example |2012 - 7 - 9 21 : 21 : 6 , 975 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |2012 - 7 - 9 21 : 21 : 6 , 975 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |2012 - 7 - 9 21 : 21 : 6 , 975 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |- 2807933493831396937 || log example |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk || pattern |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk || log example |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk |	15274 src : / 138 . 15 . 164 . 121 : 57053 dest : / 138 . 15 . 164 . 127 : 41010  (yyyymmdd) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical)  2012 - 7 - 9 21 : 45 : 38 , 845 info org . apache . hadoop . hdfs . server . datanode . datanode : receiving block blk || log example |- 1098422552739914538 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 || pattern |- 1098422552739914538 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 |15274 src : / 138 . 15 . 164 . 124 : 40852 dest : / 138 . 15 . 164 . 127 : 41010 || pattern |(strddyyyy) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical) |(strddyyyy) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical) |(strddyyyy) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical) |(strddyyyy) (time) \W (numerical) info org \W apache \W hadoop \W hdfs \W server \W datanode \W datanode \W receiving block blk 	\W (numerical) 	(numerical) src \W \W (IPv4) \W (numerical) dest \W \W (IPv4) \W (numerical) |F. Search results 
	Examples of search results are presented in Table X. On average, it takes 6.44e-5 seconds to return a query results.
20
TABLE X: Query examples
| query 
1 result | =,2012-5-25 5:49:6
2012 - 05 - 25 05 : 49 : 06 get / virtualserver / vswebapp . exe view = 17 & vm = k % 2 dkato % 2 ddc 3 80 k - kato - dc 2
\0000010816740 mozilla / 4 . 0 · · ·
>,2012-7-9 20:50:52012 - 07 - 09 21 : 26 : 57 , 214 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 1 for block blk · · ·2012 - 07 - 09 21 : 16 : 13 , 960 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 0 for block blk · · ·2012 - 07 - 09 21 : 26 : 52 , 791 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 2 for block blk · · ·· · · | =,2012-5-25 5:49:6
2012 - 05 - 25 05 : 49 : 06 get / virtualserver / vswebapp . exe view = 17 & vm = k % 2 dkato % 2 ddc 3 80 k - kato - dc 2
\0000010816740 mozilla / 4 . 0 · · ·
>,2012-7-9 20:50:52012 - 07 - 09 21 : 26 : 57 , 214 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 1 for block blk · · ·2012 - 07 - 09 21 : 16 : 13 , 960 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 0 for block blk · · ·2012 - 07 - 09 21 : 26 : 52 , 791 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 2 for block blk · · ·· · · |
|---|---|---|| query 627 results |=,2012-5-25 5:49:6 2012 - 05 - 25 05 : 49 : 06 get / virtualserver / vswebapp . exe view = 17 & vm = k % 2 dkato % 2 ddc 3 80 k - kato - dc 2 \0000010816740 mozilla / 4 . 0 · · · >,2012-7-9 20:50:5 2012 - 07 - 09 21 : 26 : 57 , 214 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 1 for block blk · · ·2012 - 07 - 09 21 : 16 : 13 , 960 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 0 for block blk · · ·2012 - 07 - 09 21 : 26 : 52 , 791 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 2 for block blk · · · · · · |=,2012-5-25 5:49:6 2012 - 05 - 25 05 : 49 : 06 get / virtualserver / vswebapp . exe view = 17 & vm = k % 2 dkato % 2 ddc 3 80 k - kato - dc 2 \0000010816740 mozilla / 4 . 0 · · · >,2012-7-9 20:50:5 2012 - 07 - 09 21 : 26 : 57 , 214 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 1 for block blk · · ·2012 - 07 - 09 21 : 16 : 13 , 960 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 0 for block blk · · ·2012 - 07 - 09 21 : 26 : 52 , 791 info org . apache . hadoop . hdfs . server . datanode . datanode : packetresponder 2 for block blk · · · · · · || query 627 results |IX. |CONCLUSION & DISCUSSION |
A. ConclusionIn this manuscript, we proposed HLAer, a novel system for heterogeneous log analysis. HLAer achieves the following goals concurrently: 1) heterogeneous log categorization and organization; 2) automatic log format recognition and 3) heterogeneous log indexing. Meanwhile, HLAer supports queries and outlier detection on heterogeneous logs. HLAer is constructed in a purely data-oriented fashion and it is very general adapt to arbitrary log formats, applications or systems. The current implementation of HLAer is scalable to Big Data. Technical details of HLAer are documented in this manuscript together with comprehensive experiments. Comparison between HLAer with other log analysis tools is also presented. The current implementation of HLAer is demonstrated to be able to achieve the above goals and meanwhile outperforms other log analysis tools in terms of clustering/outlier detection performance, scalability and generalizability.B. Further Discussions
1) Efficiency of outlier detection: The efficiency for the offline outlier detection is not considered as a big issue as long as clustering algorithm and similarity/distance calculation are efficient. However, the online outlier detection has much more critical demand on high efficiency. Currently, the online outlier detection is implemented via sequence-profile alignment. Such alignment has a quadratic complexity, which is not preferable in an online setting. The improvement can be achieved by implementing a specific parser for each pattern, and assigning the parsers that most favorably match the new log to parse the new log.2) HLAer incremental updates: HLAer can be updated via two different ways. The first way is via offline upgrade. Once the most recent logs are accumulated after a certain period of time, a new HLAer can be built from such logs. This method will automatically adopt the most recent system status into the HLAer. The second way is via online upgrade. Once a new log comes in, it is routed down to a certain node of the HLAer tree, and the statistic of that node, e.g., pattern profiles, will be updated correspondingly. In addition, new nodes can be grown if there are enough simulated logs that satisfy the density or other condition so as to form a cluster. The dynamic growth of the tree can also be utilized as a real-time reflection of the system dynamic.APPENDIX A
DBScan ALGORITHM
A. Definitions of distances
| reachability-distance✏,minpts(d, p) = | ⇢
	undefined
max(core-distance✏,minpts(p), distance(d, p)) 	if |neighborPts(d)| <minpts, otherwise
⇢ undefined distance the minpts-th closest point 	if |neighborPts(d)| <minpts, otherwise | (6) |
|---|---|---||---|---|---|
| reachability-distance✏,minpts(d, p) = |⇢ 	undefined max(core-distance✏,minpts(p), distance(d, p)) 	if |neighborPts(d)| <minpts, otherwise ⇢ undefined distance the minpts-th closest point 	if |neighborPts(d)| <minpts, otherwise |(7) |
| core-distance✏,minpts(d) = |⇢ 	undefined max(core-distance✏,minpts(p), distance(d, p)) 	if |neighborPts(d)| <minpts, otherwise ⇢ undefined distance the minpts-th closest point 	if |neighborPts(d)| <minpts, otherwise |(7) |B. The DBScan algorithm
REFERENCES
| [1] [2] | M. Ankerst, M. M. Breunig, H.-P. Kriegel, and J. Sander, “Optics: ordering points to identify the clustering structure,” ACM SIGMOD Record, vol. 28, no. 2, pp. 49–60, 1999. | M. Ankerst, M. M. Breunig, H.-P. Kriegel, and J. Sander, “Optics: ordering points to identify the clustering structure,” ACM SIGMOD Record, vol. 28, no. 2, pp. 49–60, 1999. ||---|---|---|
| [1] [2] |D. Arlia and M. Coppola, “Experiments in parallel clustering with dbscan,” in Euro-Par 2001 Parallel Processing. |Springer, 2001, pp. |
| [1] [2] |326–331. |326–331. |
22
| [17] [18] [19] [20] | R. Vaarandi, “A breadth-first algorithm for mining frequent patterns from event logs,” in In Proceedings of the 2004 IFIP International Conference on Intelligence in Communication Systems, 2004, pp. 293–308.W. Xu, L. Huang, A. Fox, D. Patterson, and M. I. Jordan, “Detecting large-scale system problems by mining console logs,” in Proceedings | R. Vaarandi, “A breadth-first algorithm for mining frequent patterns from event logs,” in In Proceedings of the 2004 IFIP International Conference on Intelligence in Communication Systems, 2004, pp. 293–308.W. Xu, L. Huang, A. Fox, D. Patterson, and M. I. Jordan, “Detecting large-scale system problems by mining console logs,” in Proceedings | R. Vaarandi, “A breadth-first algorithm for mining frequent patterns from event logs,” in In Proceedings of the 2004 IFIP International Conference on Intelligence in Communication Systems, 2004, pp. 293–308.W. Xu, L. Huang, A. Fox, D. Patterson, and M. I. Jordan, “Detecting large-scale system problems by mining console logs,” in Proceedings |
|---|---|---|---|
| [17] [18] [19] [20] |of the ACM SIGOPS 22nd symposium on Operating systems principles. |of the ACM SIGOPS 22nd symposium on Operating systems principles. |ACM, 2009, pp. 117–132. || [17] [18] [19] [20] |K. Yamanishi and Y. Maruyama, “Dynamic syslog mining for network failure monitoring,” in Proceedings of the eleventh ACM SIGKDD |K. Yamanishi and Y. Maruyama, “Dynamic syslog mining for network failure monitoring,” in Proceedings of the eleventh ACM SIGKDD |K. Yamanishi and Y. Maruyama, “Dynamic syslog mining for network failure monitoring,” in Proceedings of the eleventh ACM SIGKDD || [17] [18] [19] [20] |international conference on Knowledge discovery in data mining. |ACM, 2005, pp. 499–508. |ACM, 2005, pp. 499–508. |
| [17] [18] [19] [20] |K. Q. Zhu, K. Fisher, and D. Walker, “Incremental learning of system log formats,” ACM SIGOPS Operating Systems Review, vol. 44, no. 1, pp. 85–90, 2010. |K. Q. Zhu, K. Fisher, and D. Walker, “Incremental learning of system log formats,” ACM SIGOPS Operating Systems Review, vol. 44, no. 1, pp. 85–90, 2010. |K. Q. Zhu, K. Fisher, and D. Walker, “Incremental learning of system log formats,” ACM SIGOPS Operating Systems Review, vol. 44, no. 1, pp. 85–90, 2010. |