2.  查看当前的分区表来确定是否有足够空闲空间：
    ``` screen
    (parted) print
    ```
    ::: itemizedlist
    -   如果没有足够的可用空间，您可以调整现有分区的大小。如需更多信息，请参阅
        [重新定义分区大小](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_resizing-a-partition_managing-file-systems){.link}。
    -   从分区表中决定：
        ::: itemizedlist
        -   新分区的开始和结束点
        -   在 MBR 上，应该是什么分区类型。
        :::
    :::
3.  创建新分区：
    ``` screen
    (parted) mkpart part-type name fs-type start end
    ```
    ::: itemizedlist
    -   根据您在分区表中的决定，使用
        `primary`{.literal}、`logical`{.literal} 或 `extended`{.literal}
        替换 [*[part-type]{.replaceable}*]{.emphasis}。这只适用于 MBR
        分区表。
    -   使用任意分区名称替换 [*[name]{.replaceable}*]{.emphasis}。对于
        GPT 分区表，这是必需的。
    -   使用 `xfs`{.literal}
        、`ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}、`fat16`{.literal}、`fat32`{.literal}、`hfs`{.literal}、`hfs+`{.literal}、`Linux-swap`{.literal}、`ntfs`{.literal}
        或 `reiserfs`{.literal} 其中之一替换
        [*[fs-type]{.replaceable}*]{.emphasis}。[*[fs-type]{.replaceable}*]{.emphasis}
        参数是可选的。请注意，`parted`{.literal}
        不会在分区上创建文件系统。
    -   使用从磁盘开头计算分区开始和结束点的大小替换
        [*[start]{.replaceable}*]{.emphasis} 和
        [*[end]{.replaceable}*]{.emphasis}。您可以使用大小后缀，如
        `512MiB`{.literal}、`20GiB`{.literal} 或
        `1.5TiB`{.literal}。默认大小 MB。
    :::
    ::: example
    []{#assembly_creating-a-partition_managing-file-systems.html#idm139895596860992}
    **例 16.1. 创建小的主分区**
    ::: example-contents
    例如：要在 MBR 表中创建主分区（从 1024MiB 到 2048MiB），使用：
    ``` screen
    (parted) mkpart primary 1024MiB 2048MiB
    ```
    :::
    :::
    输入此命令后，这些更改就会生效，因此在执行前请先重新检查。
4.  查看分区表以确认创建的分区位于分区表中，并具有正确的分区类型、文件系统类型和大小：
    ``` screen
    (parted) print
    ```
5.  退出 `parted`{.literal} shell:
    ``` screen
    (parted) quit
    ```
6.  使用以下命令等待系统注册新设备节点：
    ``` screen
    # udevadm settle
    ```
7.  验证内核是否识别了新的分区：
    ``` screen
    # cat /proc/partitions
    ```
:::
::: itemizedlist
**其他资源**
-   `parted(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_creating-a-partition_managing-file-systems.html#proc_setting-a-partition-type-with-fdisk_assembly_creating-a-partition}使用 fdisk 设置分区类型 {.title}
:::
这个流程描述了如何使用 `fdisk`{.literal} 工具设置分区类型或标志。
::: itemizedlist
**先决条件**
-   磁盘上有一个分区。
:::
::: orderedlist
**流程**
1.  启动交互式 `fdisk`{.literal} shell：
    ``` screen
    # fdisk block-device
    ```
    ::: itemizedlist
    -   使用您要设置分区类型的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis} ：例如
        `/dev/sda`{.literal}。
    :::
2.  查看当前的分区表以确定副分区号码：
    ``` screen
    Command (m for help): print
    ```
    您可以在 `Type`{.literal} 列中看到当前的分区类型，在 `Id`{.literal}
    列中看到相应的类型 ID 。
3.  输入分区类型命令并使用它的副号码选择分区：
    ``` screen
    Command (m for help): type
    Partition number (1,2,3 default 3): 2
    ```
4.  另外，还可列出可用的十六进制代码：
    ``` screen
    Hex code (type L to list all codes): L
    ```
5.  设置分区类型：
    ``` screen
    Hex code (type L to list all codes): 8e
    ```
6.  写入更改并退出 `fdisk`{.literal} shell：
    ``` screen
    Command (m for help): write
    The partition table has been altered.
    Syncing disks.
    ```
7.  验证您的更改：
    ``` screen
    # fdisk --list block-device
    ```
:::
:::
:::
[]{#assembly_removing-a-partition_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_removing-a-partition_managing-file-systems.html#assembly_removing-a-partition_managing-file-systems}第 17 章 删除分区 {.title}
:::
作为系统管理员，您可以删除不再用来释放磁盘空间的磁盘分区。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
删除分区将删除保存在分区中的所有数据。
:::
::: section
::: titlepage
# []{#assembly_removing-a-partition_managing-file-systems.html#con_considerations-before-modifying-partitions-on-a-disk_assembly_removing-a-partition}修改磁盘分区前的注意事项 {.title}
:::
本节列出了在创建、删除或重新定义分区大小前需要考虑的关键点。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本节不涵盖 DASD 分区表，它特定于 IBM Z 构架。有关 DASD 的详情请参考：
::: itemizedlist
-   [在 IBM Z 中配置 Linux
    实例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/performing_a_standard_rhel_installation/configuring-a-linux-instance-on-ibm-z_installing-rhel){.link}
-   IBM 知识库中的 [您应该知道的有关 DASD
    的内容](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lgdd/lgdd_c_dasd_know.html){.link}
    的文章
:::
:::
### []{#assembly_removing-a-partition_managing-file-systems.html#_the_maximum_number_of_partitions_3}分区的最大数量
设备中的分区数量受分区表类型的限制：
::: itemizedlist
-   在使用 [**主引导记录(MBR)**]{.strong}
    分区表格式化的设备上，您可以有：
    ::: itemizedlist
    -   最多四个主分区，或者
    -   最多有三个主分区，以及一个扩展分区，其中包括多个逻辑分区。
    :::
-   在使用 [**GUID 分区表(GPT)**]{.strong}
    格式化的设备上，最大的分区数为 128。尽管 GPT
    规范通过增大为分区表保留的空间来允许更多的分区，但
    `parted`{.literal} 工具的常用的做法是将其限制为足够容纳 128
    个分区的空间。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽建议，除非有其他原因，否则 [*至少*]{.emphasis} 要创建以下分区：
`swap`{.literal}、`/boot/`{.literal} 和 `/`{.literal} (root)。
:::
### []{#assembly_removing-a-partition_managing-file-systems.html#_the_maximum_size_of_a_partition_3}分区的最大大小
设备中的分区大小受分区表类型的限制：
::: itemizedlist
-   在使用[**主引导记录（MBR）**]{.strong}
    分区表格式化的设备中，最大值为 2TiB。
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备上，最大大小为
    8ZiB。
:::
如果要创建一个大于 2TiB 的分区，该磁盘必须使用 GPT 格式化。
### []{#assembly_removing-a-partition_managing-file-systems.html#_size_alignment_3}大小协调
`parted`{.literal} 工具可让您使用多个不同的后缀来指定分区的大小：
::: variablelist
[MiB、GiB 或 TiB]{.term}
:   大小为 2 的指数代表。
    ::: itemizedlist
    -   分区的起点与根据大小指定的扇区一致。
    -   结束点与指定大小减 1 扇区一致。
    :::
[MB、GB 或 TB]{.term}
:   以 10 的指数表示容量。
    起始和结束点在指定单元的一半内一致：例如,使用 MB 后缀时 ±500KB。
:::
:::
::: section
::: titlepage
# []{#assembly_removing-a-partition_managing-file-systems.html#proc_removing-a-partition-with-parted_assembly_removing-a-partition}使用 parted 删除分区 {.title}
:::
这个流程描述了如何使用 `parted`{.literal} 工具删除磁盘分区。
::: orderedlist
**流程**
1.  启动交互式 `parted`{.literal} shell：
    ``` screen
    # parted block-device
    ```
    ::: itemizedlist
    -   使用您要删除分区的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis} ：例如
        `/dev/sda`{.literal}。
    :::
2.  查看当前的分区表以确定要删除的分区的次号：
    ``` screen
    (parted) print
    ```
3.  删除分区：
    ``` screen
    (parted) rm minor-number
    ```
    ::: itemizedlist
    -   使用您要删除的分区的次号替换
        [*[minor-number]{.replaceable}*]{.emphasis} ：例如
        `3`{.literal}。
    :::
    输入此命令后，这些更改就会生效，因此在执行前请先重新检查。
4.  确认分区已从分区表中被删除：
    ``` screen
    (parted) print
    ```
5.  退出 `parted`{.literal} shell:
    ``` screen
    (parted) quit
    ```
6.  确定内核知道已删除该分区：
    ``` screen
    # cat /proc/partitions
    ```
7.  如果分区存在，请从 `/etc/fstab`{.literal}
    文件中删除该分区。找到声明删除的分区的行，并将其从文件中删除。
8.  重新生成挂载单元，以便您的系统注册新的 `/etc/fstab`{.literal} 配置：
    ``` screen
    # systemctl daemon-reload
    ```
9.  如果您删除了交换分区或删除了 LVM 部分，请从
    `/etc/default/grub`{.literal}
    文件的内核命令行中删除对分区的所有引用，并重新生成 GRUB 配置：
    ::: itemizedlist
    -   在基于 BIOS 的系统中：
        ``` screen
        # grub2-mkconfig --output=/etc/grub2.cfg
        ```
    -   在基于 UEFI 的系统中：
        ``` screen
        # grub2-mkconfig --output=/etc/grub2-efi.cfg
        ```
    :::
10. 要在早期引导系统中注册更改，请重建 `initramfs`{.literal} 文件系统：
    ``` screen
    # dracut --force --verbose
    ```
:::
::: itemizedlist
**其他资源**
-   `parted(8)`{.literal} 手册页
:::
:::
:::
[]{#assembly_resizing-a-partition_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_resizing-a-partition_managing-file-systems.html#assembly_resizing-a-partition_managing-file-systems}第 18 章 重新定义分区尺寸 {.title}
:::
作为系统管理员，您可以扩展分区来利用未使用的磁盘空间，或者缩小分区以达到不同的目的。
::: section
::: titlepage
# []{#assembly_resizing-a-partition_managing-file-systems.html#con_considerations-before-modifying-partitions-on-a-disk_assembly_resizing-a-partition}修改磁盘分区前的注意事项 {.title}